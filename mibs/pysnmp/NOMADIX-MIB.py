#
# PySNMP MIB module NOMADIX-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/NOMADIX-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 20:14:02 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, SingleValueConstraint, ValueRangeConstraint, ConstraintsUnion, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "SingleValueConstraint", "ValueRangeConstraint", "ConstraintsUnion", "ConstraintsIntersection")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Unsigned32, TimeTicks, enterprises, MibIdentifier, Bits, MibScalar, MibTable, MibTableRow, MibTableColumn, ObjectIdentity, Counter32, ModuleIdentity, iso, IpAddress, NotificationType, Integer32, Counter64, Gauge32 = mibBuilder.importSymbols("SNMPv2-SMI", "Unsigned32", "TimeTicks", "enterprises", "MibIdentifier", "Bits", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ObjectIdentity", "Counter32", "ModuleIdentity", "iso", "IpAddress", "NotificationType", "Integer32", "Counter64", "Gauge32")
TextualConvention, DisplayString, MacAddress, RowStatus = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString", "MacAddress", "RowStatus")
nomadix = ModuleIdentity((1, 3, 6, 1, 4, 1, 3309))
if mibBuilder.loadTexts: nomadix.setLastUpdated('200501270000Z')
if mibBuilder.loadTexts: nomadix.setOrganization('Nomadix, Inc')
class DisplayString(OctetString):
    pass

products = MibIdentifier((1, 3, 6, 1, 4, 1, 3309, 1))
ag = MibIdentifier((1, 3, 6, 1, 4, 1, 3309, 1, 3))
aaa = MibIdentifier((1, 3, 6, 1, 4, 1, 3309, 1, 3, 2))
accessControl = MibIdentifier((1, 3, 6, 1, 4, 1, 3309, 1, 3, 4))
bandwidthManagement = MibIdentifier((1, 3, 6, 1, 4, 1, 3309, 1, 3, 5))
billRecMirror = MibIdentifier((1, 3, 6, 1, 4, 1, 3309, 1, 3, 6))
dat = MibIdentifier((1, 3, 6, 1, 4, 1, 3309, 1, 3, 8))
dhcp = MibIdentifier((1, 3, 6, 1, 4, 1, 3309, 1, 3, 10))
dns = MibIdentifier((1, 3, 6, 1, 4, 1, 3309, 1, 3, 12))
greTunneling = MibIdentifier((1, 3, 6, 1, 4, 1, 3309, 1, 3, 13))
hpr = MibIdentifier((1, 3, 6, 1, 4, 1, 3309, 1, 3, 14))
icc = MibIdentifier((1, 3, 6, 1, 4, 1, 3309, 1, 3, 16))
inat = MibIdentifier((1, 3, 6, 1, 4, 1, 3309, 1, 3, 17))
licenseKeys = MibIdentifier((1, 3, 6, 1, 4, 1, 3309, 1, 3, 18))
location = MibIdentifier((1, 3, 6, 1, 4, 1, 3309, 1, 3, 19))
passthrough = MibIdentifier((1, 3, 6, 1, 4, 1, 3309, 1, 3, 24))
portLoc = MibIdentifier((1, 3, 6, 1, 4, 1, 3309, 1, 3, 28))
smtp = MibIdentifier((1, 3, 6, 1, 4, 1, 3309, 1, 3, 30))
snmpagent = MibIdentifier((1, 3, 6, 1, 4, 1, 3309, 1, 3, 32))
subsettings = MibIdentifier((1, 3, 6, 1, 4, 1, 3309, 1, 3, 33))
subnets = MibIdentifier((1, 3, 6, 1, 4, 1, 3309, 1, 3, 34))
system = MibIdentifier((1, 3, 6, 1, 4, 1, 3309, 1, 3, 35))
time = MibIdentifier((1, 3, 6, 1, 4, 1, 3309, 1, 3, 36))
urlFiltering = MibIdentifier((1, 3, 6, 1, 4, 1, 3309, 1, 3, 37))
radiusProxy = MibIdentifier((1, 3, 6, 1, 4, 1, 3309, 1, 3, 38))
realmBasedRouter = MibIdentifier((1, 3, 6, 1, 4, 1, 3309, 1, 3, 39))
sessionlimit = MibIdentifier((1, 3, 6, 1, 4, 1, 3309, 1, 3, 40))
macFiltering = MibIdentifier((1, 3, 6, 1, 4, 1, 3309, 1, 3, 41))
tunneling = MibIdentifier((1, 3, 6, 1, 4, 1, 3309, 1, 3, 42))
wireless = MibIdentifier((1, 3, 6, 1, 4, 1, 3309, 1, 3, 43))
pppoeClient = MibIdentifier((1, 3, 6, 1, 4, 1, 3309, 1, 3, 44))
dyndns = MibIdentifier((1, 3, 6, 1, 4, 1, 3309, 1, 3, 50))
localWeb = MibIdentifier((1, 3, 6, 1, 4, 1, 3309, 1, 3, 52))
ipsec = MibIdentifier((1, 3, 6, 1, 4, 1, 3309, 1, 3, 54))
ndxTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 3309, 1, 3, 0))
aaaOn = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 2, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aaaOn.setStatus('current')
aaaXmlOn = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 2, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aaaXmlOn.setStatus('current')
aaaXmlSender1Ip = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 2, 3), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aaaXmlSender1Ip.setStatus('current')
aaaXmlSender2Ip = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 2, 22), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aaaXmlSender2Ip.setStatus('current')
aaaMessageNewUserTermsOn = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 2, 23), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aaaMessageNewUserTermsOn.setStatus('current')
aaaMessageNewUserTerms = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 2, 24), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(400, 400)).setFixedLength(400)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aaaMessageNewUserTerms.setStatus('current')
aaaPrintBillingCommandOn = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 2, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aaaPrintBillingCommandOn.setStatus('current')
aaaPassthroughPortOn = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 2, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aaaPassthroughPortOn.setStatus('current')
aaaPassthroughPortNumber = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 2, 6), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aaaPassthroughPortNumber.setStatus('current')
aaaDot1xOn = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 2, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aaaDot1xOn.setStatus('current')
aaaOSencodingOn = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 2, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aaaOSencodingOn.setStatus('current')
aaaAuthMode = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 2, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("internalAuthorization", 0), ("externalAuthorization", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aaaAuthMode.setStatus('current')
aaaInternalAuth = MibIdentifier((1, 3, 6, 1, 4, 1, 3309, 1, 3, 2, 10))
aaaSslOn = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 2, 10, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aaaSslOn.setStatus('current')
aaaSslHostName = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 2, 10, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aaaSslHostName.setStatus('current')
aaaPortalPageOn = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 2, 10, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aaaPortalPageOn.setStatus('current')
aaaPortalPageUrl = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 2, 10, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 237))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aaaPortalPageUrl.setStatus('current')
aaaUsernameOn = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 2, 10, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aaaUsernameOn.setStatus('current')
aaaNewSubscriberOn = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 2, 10, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aaaNewSubscriberOn.setStatus('current')
aaaReloginOn = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 2, 10, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aaaReloginOn.setStatus('current')
aaaCreditCardOn = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 2, 10, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aaaCreditCardOn.setStatus('current')
aaaCreditCardUrl = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 2, 10, 9), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 237))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aaaCreditCardUrl.setStatus('current')
aaaCreditCardIp = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 2, 10, 10), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aaaCreditCardIp.setStatus('current')
aaaMerchantId = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 2, 10, 11), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aaaMerchantId.setStatus('current')
aaaSmartClientOn = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 2, 10, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aaaSmartClientOn.setStatus('current')
aaaPortalParameterPassing = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 2, 10, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aaaPortalParameterPassing.setStatus('current')
aaaPortalPostUrl = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 2, 10, 14), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 237))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aaaPortalPostUrl.setStatus('current')
aaaPortalXMLPort = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 2, 10, 15), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aaaPortalXMLPort.setStatus('current')
aaaSupportGISClients = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 2, 10, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aaaSupportGISClients.setStatus('current')
aaaIWSLoginPageBlocking = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 2, 10, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aaaIWSLoginPageBlocking.setStatus('current')
aaaCreditCardServerTypeSelection = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 2, 10, 21), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("chainfusion", 1), ("authorize-net", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aaaCreditCardServerTypeSelection.setStatus('current')
aaaChainfusionCCTransTime = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 2, 10, 22), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aaaChainfusionCCTransTime.setStatus('current')
aaaExternalAuth = MibIdentifier((1, 3, 6, 1, 4, 1, 3309, 1, 3, 2, 11))
aaaSecretKey = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 2, 11, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aaaSecretKey.setStatus('current')
aaaExternalIPAddress = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 2, 11, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aaaExternalIPAddress.setStatus('current')
aaaAuthorizationUrl = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 2, 11, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 237))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aaaAuthorizationUrl.setStatus('current')
aaaLoggingOn = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 2, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aaaLoggingOn.setStatus('current')
aaaLogNumber = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 2, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aaaLogNumber.setStatus('current')
aaaLogFilter = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 2, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("emergency", 0), ("alert", 1), ("critical", 2), ("error", 3), ("warning", 4), ("notice", 5), ("info", 6), ("debug", 7)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aaaLogFilter.setStatus('current')
aaaLogServerIp = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 2, 14), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aaaLogServerIp.setStatus('current')
aaaSaveToFile = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 2, 21), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aaaSaveToFile.setStatus('current')
aaaBillingOption = MibIdentifier((1, 3, 6, 1, 4, 1, 3309, 1, 3, 2, 15))
aaaBilloptIntroMsg = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 2, 15, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 218))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aaaBilloptIntroMsg.setStatus('current')
aaaBilloptOfferMsg = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 2, 15, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 218))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aaaBilloptOfferMsg.setStatus('current')
aaaBilloptPolicyMsg = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 2, 15, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 218))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aaaBilloptPolicyMsg.setStatus('current')
aaaBilloptMinTimeUnitMinute = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 2, 15, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aaaBilloptMinTimeUnitMinute.setStatus('current')
aaaBilloptMinTimeUnitHour = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 2, 15, 6), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aaaBilloptMinTimeUnitHour.setStatus('current')
aaaBilloptMinTimeUnitDay = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 2, 15, 7), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aaaBilloptMinTimeUnitDay.setStatus('current')
aaaBilloptMinTimeUnitWeek = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 2, 15, 8), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aaaBilloptMinTimeUnitWeek.setStatus('current')
aaaBilloptMinTimeUnitMonth = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 2, 15, 9), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aaaBilloptMinTimeUnitMonth.setStatus('current')
aaaBilloptMaxTimeUnitMinute = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 2, 15, 10), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aaaBilloptMaxTimeUnitMinute.setStatus('current')
aaaBilloptMaxTimeUnitHour = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 2, 15, 11), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aaaBilloptMaxTimeUnitHour.setStatus('current')
aaaBilloptMaxTimeUnitDay = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 2, 15, 12), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aaaBilloptMaxTimeUnitDay.setStatus('current')
aaaBilloptMaxTimeUnitWeek = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 2, 15, 13), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aaaBilloptMaxTimeUnitWeek.setStatus('current')
aaaBilloptMaxTimeUnitMonth = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 2, 15, 14), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aaaBilloptMaxTimeUnitMonth.setStatus('current')
aaaBilloptFreeAccessTime = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 2, 15, 15), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aaaBilloptFreeAccessTime.setStatus('current')
aaaBilloptMaxSubLifetime = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 2, 15, 16), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aaaBilloptMaxSubLifetime.setStatus('current')
aaaTaxRate = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 2, 15, 18), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 5))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aaaTaxRate.setStatus('current')
aaaBillingPlans = MibIdentifier((1, 3, 6, 1, 4, 1, 3309, 1, 3, 2, 15, 19))
aaaBillingPlan0 = MibIdentifier((1, 3, 6, 1, 4, 1, 3309, 1, 3, 2, 15, 19, 1))
aaaBillingPlan1 = MibIdentifier((1, 3, 6, 1, 4, 1, 3309, 1, 3, 2, 15, 19, 2))
aaaBillingPlan2 = MibIdentifier((1, 3, 6, 1, 4, 1, 3309, 1, 3, 2, 15, 19, 3))
aaaBillingPlan3 = MibIdentifier((1, 3, 6, 1, 4, 1, 3309, 1, 3, 2, 15, 19, 4))
aaaBillingPlan4 = MibIdentifier((1, 3, 6, 1, 4, 1, 3309, 1, 3, 2, 15, 19, 5))
aaaBillingPlan5 = MibIdentifier((1, 3, 6, 1, 4, 1, 3309, 1, 3, 2, 15, 19, 6))
aaaBillingPlanOn0 = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 2, 15, 19, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aaaBillingPlanOn0.setStatus('current')
aaaBillingPlanAssigned0 = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 2, 15, 19, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aaaBillingPlanAssigned0.setStatus('current')
aaaBillingPlanXoverY0 = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 2, 15, 19, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aaaBillingPlanXoverY0.setStatus('current')
aaaBillingPlanLabel0 = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 2, 15, 19, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 50))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aaaBillingPlanLabel0.setStatus('current')
aaaBillingPlanDesc0 = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 2, 15, 19, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 140))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aaaBillingPlanDesc0.setStatus('current')
aaaBillingPlanPricingMin0 = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 2, 15, 19, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aaaBillingPlanPricingMin0.setStatus('current')
aaaBillingPlanPricingHour0 = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 2, 15, 19, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aaaBillingPlanPricingHour0.setStatus('current')
aaaBillingPlanPricingDay0 = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 2, 15, 19, 1, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aaaBillingPlanPricingDay0.setStatus('current')
aaaBillingPlanPricingWeek0 = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 2, 15, 19, 1, 9), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aaaBillingPlanPricingWeek0.setStatus('current')
aaaBillingPlanPricingMonth0 = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 2, 15, 19, 1, 10), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aaaBillingPlanPricingMonth0.setStatus('current')
aaaBillingPlanBandwidthUp0 = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 2, 15, 19, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1500))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aaaBillingPlanBandwidthUp0.setStatus('current')
aaaBillingPlanBandwidthDown0 = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 2, 15, 19, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1500))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aaaBillingPlanBandwidthDown0.setStatus('current')
aaaBillingPlanDHCPPool0 = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 2, 15, 19, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("private", 0), ("public", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aaaBillingPlanDHCPPool0.setStatus('current')
aaaBillingPlanRateShow0 = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 2, 15, 19, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("minute", 0), ("hour", 1), ("day", 2), ("week", 3), ("month", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aaaBillingPlanRateShow0.setStatus('current')
aaaBillingPlanCost0 = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 2, 15, 19, 1, 15), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aaaBillingPlanCost0.setStatus('current')
aaaBillingPlanDuration0 = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 2, 15, 19, 1, 16), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aaaBillingPlanDuration0.setStatus('current')
aaaBillingPlanValidity0 = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 2, 15, 19, 1, 17), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aaaBillingPlanValidity0.setStatus('current')
aaaBillingPlanValidityRateShow0 = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 2, 15, 19, 1, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(2, 3, 4))).clone(namedValues=NamedValues(("day", 2), ("week", 3), ("month", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aaaBillingPlanValidityRateShow0.setStatus('current')
aaaBillingPlanOn1 = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 2, 15, 19, 2, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aaaBillingPlanOn1.setStatus('current')
aaaBillingPlanAssigned1 = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 2, 15, 19, 2, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aaaBillingPlanAssigned1.setStatus('current')
aaaBillingPlanXoverY1 = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 2, 15, 19, 2, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aaaBillingPlanXoverY1.setStatus('current')
aaaBillingPlanLabel1 = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 2, 15, 19, 2, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 50))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aaaBillingPlanLabel1.setStatus('current')
aaaBillingPlanDesc1 = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 2, 15, 19, 2, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 140))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aaaBillingPlanDesc1.setStatus('current')
aaaBillingPlanPricingMin1 = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 2, 15, 19, 2, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aaaBillingPlanPricingMin1.setStatus('current')
aaaBillingPlanPricingHour1 = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 2, 15, 19, 2, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aaaBillingPlanPricingHour1.setStatus('current')
aaaBillingPlanPricingDay1 = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 2, 15, 19, 2, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aaaBillingPlanPricingDay1.setStatus('current')
aaaBillingPlanPricingWeek1 = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 2, 15, 19, 2, 9), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aaaBillingPlanPricingWeek1.setStatus('current')
aaaBillingPlanPricingMonth1 = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 2, 15, 19, 2, 10), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aaaBillingPlanPricingMonth1.setStatus('current')
aaaBillingPlanBandwidthUp1 = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 2, 15, 19, 2, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1500))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aaaBillingPlanBandwidthUp1.setStatus('current')
aaaBillingPlanBandwidthDown1 = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 2, 15, 19, 2, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1500))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aaaBillingPlanBandwidthDown1.setStatus('current')
aaaBillingPlanDHCPPool1 = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 2, 15, 19, 2, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("private", 0), ("public", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aaaBillingPlanDHCPPool1.setStatus('current')
aaaBillingPlanRateShow1 = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 2, 15, 19, 2, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("minute", 0), ("hour", 1), ("day", 2), ("week", 3), ("month", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aaaBillingPlanRateShow1.setStatus('current')
aaaBillingPlanCost1 = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 2, 15, 19, 2, 15), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aaaBillingPlanCost1.setStatus('current')
aaaBillingPlanDuration1 = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 2, 15, 19, 2, 16), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aaaBillingPlanDuration1.setStatus('current')
aaaBillingPlanValidity1 = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 2, 15, 19, 2, 17), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aaaBillingPlanValidity1.setStatus('current')
aaaBillingPlanValidityRateShow1 = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 2, 15, 19, 2, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(2, 3, 4))).clone(namedValues=NamedValues(("day", 2), ("week", 3), ("month", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aaaBillingPlanValidityRateShow1.setStatus('current')
aaaBillingPlanOn2 = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 2, 15, 19, 3, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aaaBillingPlanOn2.setStatus('current')
aaaBillingPlanAssigned2 = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 2, 15, 19, 3, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aaaBillingPlanAssigned2.setStatus('current')
aaaBillingPlanXoverY2 = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 2, 15, 19, 3, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aaaBillingPlanXoverY2.setStatus('current')
aaaBillingPlanLabel2 = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 2, 15, 19, 3, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 50))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aaaBillingPlanLabel2.setStatus('current')
aaaBillingPlanDesc2 = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 2, 15, 19, 3, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 140))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aaaBillingPlanDesc2.setStatus('current')
aaaBillingPlanPricingMin2 = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 2, 15, 19, 3, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aaaBillingPlanPricingMin2.setStatus('current')
aaaBillingPlanPricingHour2 = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 2, 15, 19, 3, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aaaBillingPlanPricingHour2.setStatus('current')
aaaBillingPlanPricingDay2 = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 2, 15, 19, 3, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aaaBillingPlanPricingDay2.setStatus('current')
aaaBillingPlanPricingWeek2 = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 2, 15, 19, 3, 9), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aaaBillingPlanPricingWeek2.setStatus('current')
aaaBillingPlanPricingMonth2 = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 2, 15, 19, 3, 10), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aaaBillingPlanPricingMonth2.setStatus('current')
aaaBillingPlanBandwidthUp2 = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 2, 15, 19, 3, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1500))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aaaBillingPlanBandwidthUp2.setStatus('current')
aaaBillingPlanBandwidthDown2 = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 2, 15, 19, 3, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1500))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aaaBillingPlanBandwidthDown2.setStatus('current')
aaaBillingPlanDHCPPool2 = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 2, 15, 19, 3, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("private", 0), ("public", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aaaBillingPlanDHCPPool2.setStatus('current')
aaaBillingPlanRateShow2 = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 2, 15, 19, 3, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("minute", 0), ("hour", 1), ("day", 2), ("week", 3), ("month", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aaaBillingPlanRateShow2.setStatus('current')
aaaBillingPlanCost2 = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 2, 15, 19, 3, 15), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aaaBillingPlanCost2.setStatus('current')
aaaBillingPlanDuration2 = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 2, 15, 19, 3, 16), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aaaBillingPlanDuration2.setStatus('current')
aaaBillingPlanValidity2 = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 2, 15, 19, 3, 17), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aaaBillingPlanValidity2.setStatus('current')
aaaBillingPlanValidityRateShow2 = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 2, 15, 19, 3, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(2, 3, 4))).clone(namedValues=NamedValues(("day", 2), ("week", 3), ("month", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aaaBillingPlanValidityRateShow2.setStatus('current')
aaaBillingPlanOn3 = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 2, 15, 19, 4, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aaaBillingPlanOn3.setStatus('current')
aaaBillingPlanAssigned3 = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 2, 15, 19, 4, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aaaBillingPlanAssigned3.setStatus('current')
aaaBillingPlanXoverY3 = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 2, 15, 19, 4, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aaaBillingPlanXoverY3.setStatus('current')
aaaBillingPlanLabel3 = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 2, 15, 19, 4, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 50))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aaaBillingPlanLabel3.setStatus('current')
aaaBillingPlanDesc3 = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 2, 15, 19, 4, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 140))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aaaBillingPlanDesc3.setStatus('current')
aaaBillingPlanPricingMin3 = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 2, 15, 19, 4, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aaaBillingPlanPricingMin3.setStatus('current')
aaaBillingPlanPricingHour3 = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 2, 15, 19, 4, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aaaBillingPlanPricingHour3.setStatus('current')
aaaBillingPlanPricingDay3 = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 2, 15, 19, 4, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aaaBillingPlanPricingDay3.setStatus('current')
aaaBillingPlanPricingWeek3 = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 2, 15, 19, 4, 9), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aaaBillingPlanPricingWeek3.setStatus('current')
aaaBillingPlanPricingMonth3 = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 2, 15, 19, 4, 10), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aaaBillingPlanPricingMonth3.setStatus('current')
aaaBillingPlanBandwidthUp3 = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 2, 15, 19, 4, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1500))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aaaBillingPlanBandwidthUp3.setStatus('current')
aaaBillingPlanBandwidthDown3 = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 2, 15, 19, 4, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1500))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aaaBillingPlanBandwidthDown3.setStatus('current')
aaaBillingPlanDHCPPool3 = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 2, 15, 19, 4, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("private", 0), ("public", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aaaBillingPlanDHCPPool3.setStatus('current')
aaaBillingPlanRateShow3 = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 2, 15, 19, 4, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("minute", 0), ("hour", 1), ("day", 2), ("week", 3), ("month", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aaaBillingPlanRateShow3.setStatus('current')
aaaBillingPlanCost3 = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 2, 15, 19, 4, 15), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aaaBillingPlanCost3.setStatus('current')
aaaBillingPlanDuration3 = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 2, 15, 19, 4, 16), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aaaBillingPlanDuration3.setStatus('current')
aaaBillingPlanValidity3 = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 2, 15, 19, 4, 17), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aaaBillingPlanValidity3.setStatus('current')
aaaBillingPlanValidityRateShow3 = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 2, 15, 19, 4, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(2, 3, 4))).clone(namedValues=NamedValues(("day", 2), ("week", 3), ("month", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aaaBillingPlanValidityRateShow3.setStatus('current')
aaaBillingPlanOn4 = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 2, 15, 19, 5, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aaaBillingPlanOn4.setStatus('current')
aaaBillingPlanAssigned4 = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 2, 15, 19, 5, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aaaBillingPlanAssigned4.setStatus('current')
aaaBillingPlanXoverY4 = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 2, 15, 19, 5, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aaaBillingPlanXoverY4.setStatus('current')
aaaBillingPlanLabel4 = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 2, 15, 19, 5, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 50))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aaaBillingPlanLabel4.setStatus('current')
aaaBillingPlanDesc4 = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 2, 15, 19, 5, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 140))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aaaBillingPlanDesc4.setStatus('current')
aaaBillingPlanPricingMin4 = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 2, 15, 19, 5, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aaaBillingPlanPricingMin4.setStatus('current')
aaaBillingPlanPricingHour4 = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 2, 15, 19, 5, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aaaBillingPlanPricingHour4.setStatus('current')
aaaBillingPlanPricingDay4 = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 2, 15, 19, 5, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aaaBillingPlanPricingDay4.setStatus('current')
aaaBillingPlanPricingWeek4 = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 2, 15, 19, 5, 9), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aaaBillingPlanPricingWeek4.setStatus('current')
aaaBillingPlanPricingMonth4 = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 2, 15, 19, 5, 10), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aaaBillingPlanPricingMonth4.setStatus('current')
aaaBillingPlanBandwidthUp4 = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 2, 15, 19, 5, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1500))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aaaBillingPlanBandwidthUp4.setStatus('current')
aaaBillingPlanBandwidthDown4 = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 2, 15, 19, 5, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1500))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aaaBillingPlanBandwidthDown4.setStatus('current')
aaaBillingPlanDHCPPool4 = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 2, 15, 19, 5, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("private", 0), ("public", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aaaBillingPlanDHCPPool4.setStatus('current')
aaaBillingPlanRateShow4 = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 2, 15, 19, 5, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("minute", 0), ("hour", 1), ("day", 2), ("week", 3), ("month", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aaaBillingPlanRateShow4.setStatus('current')
aaaBillingPlanCost4 = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 2, 15, 19, 5, 15), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aaaBillingPlanCost4.setStatus('current')
aaaBillingPlanDuration4 = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 2, 15, 19, 5, 16), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aaaBillingPlanDuration4.setStatus('current')
aaaBillingPlanValidity4 = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 2, 15, 19, 5, 17), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aaaBillingPlanValidity4.setStatus('current')
aaaBillingPlanValidityRateShow4 = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 2, 15, 19, 5, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(2, 3, 4))).clone(namedValues=NamedValues(("day", 2), ("week", 3), ("month", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aaaBillingPlanValidityRateShow4.setStatus('current')
aaaBillingPlanOn5 = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 2, 15, 19, 6, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aaaBillingPlanOn5.setStatus('current')
aaaBillingPlanAssigned5 = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 2, 15, 19, 6, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aaaBillingPlanAssigned5.setStatus('current')
aaaBillingPlanXoverY5 = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 2, 15, 19, 6, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aaaBillingPlanXoverY5.setStatus('current')
aaaBillingPlanLabel5 = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 2, 15, 19, 6, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 50))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aaaBillingPlanLabel5.setStatus('current')
aaaBillingPlanDesc5 = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 2, 15, 19, 6, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 140))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aaaBillingPlanDesc5.setStatus('current')
aaaBillingPlanPricingMin5 = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 2, 15, 19, 6, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aaaBillingPlanPricingMin5.setStatus('current')
aaaBillingPlanPricingHour5 = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 2, 15, 19, 6, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aaaBillingPlanPricingHour5.setStatus('current')
aaaBillingPlanPricingDay5 = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 2, 15, 19, 6, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aaaBillingPlanPricingDay5.setStatus('current')
aaaBillingPlanPricingWeek5 = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 2, 15, 19, 6, 9), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aaaBillingPlanPricingWeek5.setStatus('current')
aaaBillingPlanPricingMonth5 = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 2, 15, 19, 6, 10), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aaaBillingPlanPricingMonth5.setStatus('current')
aaaBillingPlanBandwidthUp5 = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 2, 15, 19, 6, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1500))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aaaBillingPlanBandwidthUp5.setStatus('current')
aaaBillingPlanBandwidthDown5 = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 2, 15, 19, 6, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1500))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aaaBillingPlanBandwidthDown5.setStatus('current')
aaaBillingPlanDHCPPool5 = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 2, 15, 19, 6, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("private", 0), ("public", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aaaBillingPlanDHCPPool5.setStatus('current')
aaaBillingPlanRateShow5 = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 2, 15, 19, 6, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("minute", 0), ("hour", 1), ("day", 2), ("week", 3), ("month", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aaaBillingPlanRateShow5.setStatus('current')
aaaBillingPlanCost5 = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 2, 15, 19, 6, 15), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aaaBillingPlanCost5.setStatus('current')
aaaBillingPlanDuration5 = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 2, 15, 19, 6, 16), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aaaBillingPlanDuration5.setStatus('current')
aaaBillingPlanValidity5 = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 2, 15, 19, 6, 17), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aaaBillingPlanValidity5.setStatus('current')
aaaBillingPlanValidityRateShow5 = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 2, 15, 19, 6, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(2, 3, 4))).clone(namedValues=NamedValues(("day", 2), ("week", 3), ("month", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aaaBillingPlanValidityRateShow5.setStatus('current')
aaaSubLoginUI = MibIdentifier((1, 3, 6, 1, 4, 1, 3309, 1, 3, 2, 16))
aaaWebServiceMsg = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 2, 16, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 218))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aaaWebServiceMsg.setStatus('current')
aaaWebExistingUserMsg = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 2, 16, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 218))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aaaWebExistingUserMsg.setStatus('current')
aaaWebNewUsernameMsg = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 2, 16, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 218))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aaaWebNewUsernameMsg.setStatus('current')
aaaWebContactMsg = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 2, 16, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 218))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aaaWebContactMsg.setStatus('current')
aaaWebMicrosUsernameMsg = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 2, 16, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 218))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aaaWebMicrosUsernameMsg.setStatus('current')
aaaWebJavascriptOn = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 2, 16, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aaaWebJavascriptOn.setStatus('current')
aaaWebRememberMeOn = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 2, 16, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aaaWebRememberMeOn.setStatus('current')
aaaRememberMeMsg = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 2, 16, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 218))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aaaRememberMeMsg.setStatus('current')
aaaRememberMeDays = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 2, 16, 9), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aaaRememberMeDays.setStatus('current')
aaaCurrency = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 2, 16, 10), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aaaCurrency.setStatus('current')
aaaAmountDecimals = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 2, 16, 11), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aaaAmountDecimals.setStatus('current')
aaaWebImage = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 2, 16, 12), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 98))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aaaWebImage.setStatus('current')
aaaWebPageBgcolor = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 2, 16, 13), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 50))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aaaWebPageBgcolor.setStatus('current')
aaaWebTabBgcolor = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 2, 16, 14), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 98))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aaaWebTabBgcolor.setStatus('current')
aaaWebTitleFont = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 2, 16, 15), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 98))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aaaWebTitleFont.setStatus('current')
aaaWebItemFont = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 2, 16, 16), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 98))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aaaWebItemFont.setStatus('current')
aaaErrorAccessBlocked = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 2, 16, 17), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 218))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aaaErrorAccessBlocked.setStatus('current')
aaaErrorAccessPassword = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 2, 16, 18), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 218))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aaaErrorAccessPassword.setStatus('current')
aaaErrorHasOccurred = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 2, 16, 19), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 218))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aaaErrorHasOccurred.setStatus('current')
aaaErrorISPChallenge = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 2, 16, 20), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 218))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aaaErrorISPChallenge.setStatus('current')
aaaErrorMinMaxValues = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 2, 16, 21), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 218))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aaaErrorMinMaxValues.setStatus('current')
aaaErrorNoBillingOpts = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 2, 16, 22), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 218))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aaaErrorNoBillingOpts.setStatus('current')
aaaErrorNotAvailable = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 2, 16, 23), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 218))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aaaErrorNotAvailable.setStatus('current')
aaaErrorPasswordMatch = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 2, 16, 24), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 218))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aaaErrorPasswordMatch.setStatus('current')
aaaErrorPasswordWrong = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 2, 16, 25), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 218))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aaaErrorPasswordWrong.setStatus('current')
aaaErrorRoomBilling = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 2, 16, 26), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 218))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aaaErrorRoomBilling.setStatus('current')
aaaErrorTooManyUsers = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 2, 16, 27), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 218))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aaaErrorTooManyUsers.setStatus('current')
aaaErrorTryAgain = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 2, 16, 28), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 218))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aaaErrorTryAgain.setStatus('current')
aaaErrorUserIdMissing = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 2, 16, 29), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 218))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aaaErrorUserIdMissing.setStatus('current')
aaaErrorUserIdTaken = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 2, 16, 30), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 218))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aaaErrorUserIdTaken.setStatus('current')
aaaErrorWeAreSorry = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 2, 16, 31), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 218))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aaaErrorWeAreSorry.setStatus('current')
aaaErrorWholeNumber = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 2, 16, 32), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 218))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aaaErrorWholeNumber.setStatus('current')
aaaErrorYourAccount = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 2, 16, 33), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 218))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aaaErrorYourAccount.setStatus('current')
aaaMessageBillingMode = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 2, 16, 34), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 218))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aaaMessageBillingMode.setStatus('current')
aaaMessagebyCreditCard = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 2, 16, 35), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 218))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aaaMessagebyCreditCard.setStatus('current')
aaaMessagebyHotelRoom = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 2, 16, 36), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 218))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aaaMessagebyHotelRoom.setStatus('current')
aaaMessageChooseUsername = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 2, 16, 37), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 218))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aaaMessageChooseUsername.setStatus('current')
aaaMessageChoosePasswd1 = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 2, 16, 38), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 218))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aaaMessageChoosePasswd1.setStatus('current')
aaaMessageChoosePasswd2 = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 2, 16, 39), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 218))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aaaMessageChoosePasswd2.setStatus('current')
aaaMessageFreeInternet = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 2, 16, 40), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 218))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aaaMessageFreeInternet.setStatus('current')
aaaMessageNewUserLogin = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 2, 16, 41), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 218))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aaaMessageNewUserLogin.setStatus('current')
aaaMessageOldUserLogin = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 2, 16, 42), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 218))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aaaMessageOldUserLogin.setStatus('current')
aaaMessagePurchaseOK1 = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 2, 16, 43), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 218))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aaaMessagePurchaseOK1.setStatus('current')
aaaMessagePurchaseOK2 = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 2, 16, 44), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 218))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aaaMessagePurchaseOK2.setStatus('current')
aaaMessagePurchaseSelect = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 2, 16, 45), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 218))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aaaMessagePurchaseSelect.setStatus('current')
aaaMessageRequestFailed = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 2, 16, 49), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 218))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aaaMessageRequestFailed.setStatus('current')
aaaMessageRequestGranted = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 2, 16, 50), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 218))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aaaMessageRequestGranted.setStatus('current')
aaaMessageThankYou = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 2, 16, 51), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 218))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aaaMessageThankYou.setStatus('current')
aaaMessageVerifying = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 2, 16, 52), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 218))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aaaMessageVerifying.setStatus('current')
aaaMessageYourHotel = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 2, 16, 53), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 218))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aaaMessageYourHotel.setStatus('current')
aaaMessageYourPurchase = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 2, 16, 54), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 218))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aaaMessageYourPurchase.setStatus('current')
aaaPartnerImageOn = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 2, 16, 55), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aaaPartnerImageOn.setStatus('current')
aaaPartnerImageFileName = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 2, 16, 56), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aaaPartnerImageFileName.setStatus('current')
aaaSubPostSession = MibIdentifier((1, 3, 6, 1, 4, 1, 3309, 1, 3, 2, 17))
aaaSubGoodbyePage = MibIdentifier((1, 3, 6, 1, 4, 1, 3309, 1, 3, 2, 17, 1))
aaaSubGPEnable = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 2, 17, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aaaSubGPEnable.setStatus('current')
aaaSubGPIPAddressOn = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 2, 17, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aaaSubGPIPAddressOn.setStatus('current')
aaaSubGPAuthenTypeOn = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 2, 17, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aaaSubGPAuthenTypeOn.setStatus('current')
aaaSubGPStartTimeOn = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 2, 17, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aaaSubGPStartTimeOn.setStatus('current')
aaaSubGPStopTimeOn = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 2, 17, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aaaSubGPStopTimeOn.setStatus('current')
aaaSubGPByteSentOn = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 2, 17, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aaaSubGPByteSentOn.setStatus('current')
aaaSubGPByteReceivedOn = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 2, 17, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aaaSubGPByteReceivedOn.setStatus('current')
aaaSubGPHyperlinkOn = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 2, 17, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aaaSubGPHyperlinkOn.setStatus('current')
aaaSubGPHyperlink = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 2, 17, 1, 9), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 237))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aaaSubGPHyperlink.setStatus('current')
aaaSubGPSessionSummaryLabel = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 2, 17, 1, 10), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 218))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aaaSubGPSessionSummaryLabel.setStatus('current')
aaaSubGPSubIPAddressLabel = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 2, 17, 1, 11), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 218))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aaaSubGPSubIPAddressLabel.setStatus('current')
aaaSubGPAuthenTypeLabel = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 2, 17, 1, 12), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 218))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aaaSubGPAuthenTypeLabel.setStatus('current')
aaaSubGPStartTimeLabel = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 2, 17, 1, 13), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 218))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aaaSubGPStartTimeLabel.setStatus('current')
aaaSubGPStopTimeLabel = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 2, 17, 1, 14), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 218))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aaaSubGPStopTimeLabel.setStatus('current')
aaaSubGPByteSentLabel = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 2, 17, 1, 15), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 218))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aaaSubGPByteSentLabel.setStatus('current')
aaaSubGPByteReceivedLabel = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 2, 17, 1, 16), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 218))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aaaSubGPByteReceivedLabel.setStatus('current')
aaaSubGPHypertextURLLabel = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 2, 17, 1, 17), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 218))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aaaSubGPHypertextURLLabel.setStatus('current')
aaaSubscriber = MibIdentifier((1, 3, 6, 1, 4, 1, 3309, 1, 3, 2, 18))
aaaSubCurrTable = MibTable((1, 3, 6, 1, 4, 1, 3309, 1, 3, 2, 18, 1), )
if mibBuilder.loadTexts: aaaSubCurrTable.setStatus('current')
aaaSubCurrTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3309, 1, 3, 2, 18, 1, 1), ).setIndexNames((0, "NOMADIX-MIB", "subIndex"))
if mibBuilder.loadTexts: aaaSubCurrTableEntry.setStatus('current')
subIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3309, 1, 3, 2, 18, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: subIndex.setStatus('current')
subMac = MibTableColumn((1, 3, 6, 1, 4, 1, 3309, 1, 3, 2, 18, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: subMac.setStatus('current')
subIp = MibTableColumn((1, 3, 6, 1, 4, 1, 3309, 1, 3, 2, 18, 1, 1, 3), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: subIp.setStatus('current')
subPort = MibTableColumn((1, 3, 6, 1, 4, 1, 3309, 1, 3, 2, 18, 1, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: subPort.setStatus('current')
subName = MibTableColumn((1, 3, 6, 1, 4, 1, 3309, 1, 3, 2, 18, 1, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: subName.setStatus('current')
subBwUp = MibTableColumn((1, 3, 6, 1, 4, 1, 3309, 1, 3, 2, 18, 1, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: subBwUp.setStatus('current')
subBwDown = MibTableColumn((1, 3, 6, 1, 4, 1, 3309, 1, 3, 2, 18, 1, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: subBwDown.setStatus('current')
subAaaState = MibTableColumn((1, 3, 6, 1, 4, 1, 3309, 1, 3, 2, 18, 1, 1, 8), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: subAaaState.setStatus('current')
subExpiration = MibTableColumn((1, 3, 6, 1, 4, 1, 3309, 1, 3, 2, 18, 1, 1, 9), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: subExpiration.setStatus('current')
subIdleTimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 3309, 1, 3, 2, 18, 1, 1, 10), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: subIdleTimeout.setStatus('current')
subBytesSent = MibTableColumn((1, 3, 6, 1, 4, 1, 3309, 1, 3, 2, 18, 1, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: subBytesSent.setStatus('current')
subBytesRec = MibTableColumn((1, 3, 6, 1, 4, 1, 3309, 1, 3, 2, 18, 1, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: subBytesRec.setStatus('current')
subBytesTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 3309, 1, 3, 2, 18, 1, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: subBytesTotal.setStatus('current')
subProxy = MibTableColumn((1, 3, 6, 1, 4, 1, 3309, 1, 3, 2, 18, 1, 1, 14), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: subProxy.setStatus('current')
subSsid = MibTableColumn((1, 3, 6, 1, 4, 1, 3309, 1, 3, 2, 18, 1, 1, 15), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: subSsid.setStatus('current')
subStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 3309, 1, 3, 2, 18, 1, 1, 16), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: subStatus.setStatus('current')
aaaAuthSubTable = MibTable((1, 3, 6, 1, 4, 1, 3309, 1, 3, 2, 18, 2), )
if mibBuilder.loadTexts: aaaAuthSubTable.setStatus('current')
aaaAuthSubTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3309, 1, 3, 2, 18, 2, 1), ).setIndexNames((0, "NOMADIX-MIB", "authSubIndex"))
if mibBuilder.loadTexts: aaaAuthSubTableEntry.setStatus('current')
authSubIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3309, 1, 3, 2, 18, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: authSubIndex.setStatus('current')
authSubType = MibTableColumn((1, 3, 6, 1, 4, 1, 3309, 1, 3, 2, 18, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("subscriber", 0), ("device", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: authSubType.setStatus('current')
authSubDhcpAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 3309, 1, 3, 2, 18, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("private", 0), ("public", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: authSubDhcpAddrType.setStatus('current')
authSubDevicePort = MibTableColumn((1, 3, 6, 1, 4, 1, 3309, 1, 3, 2, 18, 2, 1, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: authSubDevicePort.setStatus('current')
authSubMac = MibTableColumn((1, 3, 6, 1, 4, 1, 3309, 1, 3, 2, 18, 2, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 17))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: authSubMac.setStatus('current')
authSubIp = MibTableColumn((1, 3, 6, 1, 4, 1, 3309, 1, 3, 2, 18, 2, 1, 6), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: authSubIp.setStatus('current')
authSubName = MibTableColumn((1, 3, 6, 1, 4, 1, 3309, 1, 3, 2, 18, 2, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 96))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: authSubName.setStatus('current')
authSubPassword = MibTableColumn((1, 3, 6, 1, 4, 1, 3309, 1, 3, 2, 18, 2, 1, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: authSubPassword.setStatus('current')
authSubCountDown = MibTableColumn((1, 3, 6, 1, 4, 1, 3309, 1, 3, 2, 18, 2, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: authSubCountDown.setStatus('current')
authSubExpTimeHrs = MibTableColumn((1, 3, 6, 1, 4, 1, 3309, 1, 3, 2, 18, 2, 1, 10), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: authSubExpTimeHrs.setStatus('current')
authSubExpTimeMins = MibTableColumn((1, 3, 6, 1, 4, 1, 3309, 1, 3, 2, 18, 2, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 59))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: authSubExpTimeMins.setStatus('current')
authSubAmtPaid = MibTableColumn((1, 3, 6, 1, 4, 1, 3309, 1, 3, 2, 18, 2, 1, 12), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 17))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: authSubAmtPaid.setStatus('current')
authSubAmtLeft = MibTableColumn((1, 3, 6, 1, 4, 1, 3309, 1, 3, 2, 18, 2, 1, 13), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: authSubAmtLeft.setStatus('current')
authSubUser1 = MibTableColumn((1, 3, 6, 1, 4, 1, 3309, 1, 3, 2, 18, 2, 1, 14), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: authSubUser1.setStatus('current')
authSubUser2 = MibTableColumn((1, 3, 6, 1, 4, 1, 3309, 1, 3, 2, 18, 2, 1, 15), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: authSubUser2.setStatus('current')
authSubBwUp = MibTableColumn((1, 3, 6, 1, 4, 1, 3309, 1, 3, 2, 18, 2, 1, 16), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: authSubBwUp.setStatus('current')
authSubBwDown = MibTableColumn((1, 3, 6, 1, 4, 1, 3309, 1, 3, 2, 18, 2, 1, 17), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: authSubBwDown.setStatus('current')
authSubConfirmation = MibTableColumn((1, 3, 6, 1, 4, 1, 3309, 1, 3, 2, 18, 2, 1, 18), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: authSubConfirmation.setStatus('current')
authSubStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 3309, 1, 3, 2, 18, 2, 1, 19), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: authSubStatus.setStatus('current')
aaaLoginPageFailover = MibIdentifier((1, 3, 6, 1, 4, 1, 3309, 1, 3, 2, 25))
aaaLoginPageFailoverOn = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 2, 25, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aaaLoginPageFailoverOn.setStatus('current')
aaaLpfStatusTable = MibTable((1, 3, 6, 1, 4, 1, 3309, 1, 3, 2, 25, 2), )
if mibBuilder.loadTexts: aaaLpfStatusTable.setStatus('current')
aaaLpfStatusTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3309, 1, 3, 2, 25, 2, 1), ).setIndexNames((0, "NOMADIX-MIB", "lpfEntryIndex"))
if mibBuilder.loadTexts: aaaLpfStatusTableEntry.setStatus('current')
lpfEntryIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3309, 1, 3, 2, 25, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpfEntryIndex.setStatus('current')
lpfEntryNickname = MibTableColumn((1, 3, 6, 1, 4, 1, 3309, 1, 3, 2, 25, 2, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 19))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpfEntryNickname.setStatus('current')
lpfEntryOnlineStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 3309, 1, 3, 2, 25, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("unknown", 0), ("online", 1), ("offline", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpfEntryOnlineStatus.setStatus('current')
radHistSysloggingOn = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 2, 18, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: radHistSysloggingOn.setStatus('current')
radHistSyslogNumber = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 2, 18, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: radHistSyslogNumber.setStatus('current')
radHistSyslogFilter = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 2, 18, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("emergency", 0), ("alert", 1), ("critical", 2), ("error", 3), ("warning", 4), ("notice", 5), ("info", 6), ("debug", 7)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: radHistSyslogFilter.setStatus('current')
radHistSyslogServerIp = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 2, 18, 5), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: radHistSyslogServerIp.setStatus('current')
radHistSyslogSaveToFile = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 2, 18, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: radHistSyslogSaveToFile.setStatus('current')
radProxyAcctHistLog = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 2, 18, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: radProxyAcctHistLog.setStatus('current')
radProxyAcctHistSyslog = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 2, 18, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: radProxyAcctHistSyslog.setStatus('current')
aaaRadius = MibIdentifier((1, 3, 6, 1, 4, 1, 3309, 1, 3, 2, 19))
aaaRadiusRoutingMode = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 2, 19, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("disabled", 0), ("realm-based", 1), ("fixed", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aaaRadiusRoutingMode.setStatus('current')
aaaRadiusDefProf = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 2, 19, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 40))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aaaRadiusDefProf.setStatus('current')
aaaRadiusCacheOn = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 2, 19, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aaaRadiusCacheOn.setStatus('current')
aaaRadiusDefaultIdle = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 2, 19, 11), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aaaRadiusDefaultIdle.setStatus('current')
aaaRadiusNasIdOn = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 2, 19, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aaaRadiusNasIdOn.setStatus('current')
aaaRadiusNasId = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 2, 19, 13), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aaaRadiusNasId.setStatus('current')
aaaRadiusNasIpOn = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 2, 19, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aaaRadiusNasIpOn.setStatus('current')
aaaRadiusNasPortOn = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 2, 19, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aaaRadiusNasPortOn.setStatus('current')
aaaRadiusNasPortType = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 2, 19, 16), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aaaRadiusNasPortType.setStatus('current')
aaaRadiusFipOn = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 2, 19, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aaaRadiusFipOn.setStatus('current')
aaaRadiusRedUrlOn = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 2, 19, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aaaRadiusRedUrlOn.setStatus('current')
aaaRadiusGoodbyeUrlOn = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 2, 19, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aaaRadiusGoodbyeUrlOn.setStatus('current')
aaaRadiusForgotPasswordUrlOn = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 2, 19, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aaaRadiusForgotPasswordUrlOn.setStatus('current')
aaaRadiusForgotPasswordUrl = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 2, 19, 21), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 238))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aaaRadiusForgotPasswordUrl.setStatus('current')
aaaRadiusSubnetAttrOn = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 2, 19, 22), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aaaRadiusSubnetAttrOn.setStatus('current')
aaaRadiusNetVlanOn = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 2, 19, 23), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aaaRadiusNetVlanOn.setStatus('current')
aaaRadiusNetVlanDefaultOn = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 2, 19, 24), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aaaRadiusNetVlanDefaultOn.setStatus('current')
aaaRadiusNetVlanDefaultTag = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 2, 19, 25), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4094))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aaaRadiusNetVlanDefaultTag.setStatus('current')
aaaRadiusLocalAuthPort = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 2, 19, 26), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aaaRadiusLocalAuthPort.setStatus('current')
aaaRadiusLocalAcctPort = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 2, 19, 27), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aaaRadiusLocalAcctPort.setStatus('current')
aaaRadiusLoginRefresh = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 2, 19, 28), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aaaRadiusLoginRefresh.setStatus('current')
aaaRadiusTerminationActionOn = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 2, 19, 29), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aaaRadiusTerminationActionOn.setStatus('current')
blockTelnetAccessOn = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 4, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: blockTelnetAccessOn.setStatus('current')
blockWebAccessOn = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 4, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: blockWebAccessOn.setStatus('current')
blockFtpAccessOn = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 4, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: blockFtpAccessOn.setStatus('current')
accessControlOn = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 4, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: accessControlOn.setStatus('current')
accessControlIpTable = MibTable((1, 3, 6, 1, 4, 1, 3309, 1, 3, 4, 5), )
if mibBuilder.loadTexts: accessControlIpTable.setStatus('current')
accessControlIpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3309, 1, 3, 4, 5, 1), ).setIndexNames((0, "NOMADIX-MIB", "acIndex"))
if mibBuilder.loadTexts: accessControlIpEntry.setStatus('current')
acIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3309, 1, 3, 4, 5, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acIndex.setStatus('current')
acStartAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 3309, 1, 3, 4, 5, 1, 4), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acStartAddress.setStatus('current')
acEndAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 3309, 1, 3, 4, 5, 1, 6), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acEndAddress.setStatus('current')
acStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 3309, 1, 3, 4, 5, 1, 7), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acStatus.setStatus('current')
blockSFTPAccessOn = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 4, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: blockSFTPAccessOn.setStatus('current')
blockSSHShellAccessOn = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 4, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: blockSSHShellAccessOn.setStatus('current')
bandwidthManagementOn = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 5, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bandwidthManagementOn.setStatus('current')
bwmUpWanLinkSpeed = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 5, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwmUpWanLinkSpeed.setStatus('current')
bwmDownWanLinkSpeed = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 5, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwmDownWanLinkSpeed.setStatus('current')
brmMirrorOn = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 6, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 0))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: brmMirrorOn.setStatus('current')
brmPropertyId = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 6, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: brmPropertyId.setStatus('current')
brmNseId = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 6, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: brmNseId.setStatus('current')
brmServerIpPrimary = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 6, 4), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: brmServerIpPrimary.setStatus('current')
brmServerUrlPrimary = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 6, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 238))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: brmServerUrlPrimary.setStatus('current')
brmServerSecretPrimary = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 6, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: brmServerSecretPrimary.setStatus('current')
brmServerPortPrimary = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 6, 7), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: brmServerPortPrimary.setStatus('current')
brmServerIpSecondary = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 6, 8), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: brmServerIpSecondary.setStatus('current')
brmServerUrlSecondary = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 6, 9), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 238))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: brmServerUrlSecondary.setStatus('current')
brmServerSecretSecondary = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 6, 10), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: brmServerSecretSecondary.setStatus('current')
brmServerPortSecondary = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 6, 11), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: brmServerPortSecondary.setStatus('current')
brmServerCCIpOne = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 6, 12), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: brmServerCCIpOne.setStatus('current')
brmServerCCUrlOne = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 6, 13), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 238))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: brmServerCCUrlOne.setStatus('current')
brmServerCCSecretOne = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 6, 14), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: brmServerCCSecretOne.setStatus('current')
brmServerCCPortOne = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 6, 15), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: brmServerCCPortOne.setStatus('current')
brmServerCCIpTwo = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 6, 16), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: brmServerCCIpTwo.setStatus('current')
brmServerCCUrlTwo = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 6, 17), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 238))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: brmServerCCUrlTwo.setStatus('current')
brmServerCCSecretTwo = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 6, 18), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: brmServerCCSecretTwo.setStatus('current')
brmServerCCPortTwo = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 6, 19), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: brmServerCCPortTwo.setStatus('current')
brmServerCCIpThree = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 6, 20), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: brmServerCCIpThree.setStatus('current')
brmServerCCUrlThree = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 6, 21), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 238))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: brmServerCCUrlThree.setStatus('current')
brmServerCCSecretThree = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 6, 22), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: brmServerCCSecretThree.setStatus('current')
brmServerCCPortThree = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 6, 23), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: brmServerCCPortThree.setStatus('current')
brmRetransMethod = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 6, 24), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("alternate", 1), ("notAlternate", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: brmRetransMethod.setStatus('current')
brmRetransAttempts = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 6, 25), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: brmRetransAttempts.setStatus('current')
brmRetransDelay = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 6, 26), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: brmRetransDelay.setStatus('current')
datSessionTable = MibTable((1, 3, 6, 1, 4, 1, 3309, 1, 3, 8, 1), )
if mibBuilder.loadTexts: datSessionTable.setStatus('current')
datSessionTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3309, 1, 3, 8, 1, 1), ).setIndexNames((0, "NOMADIX-MIB", "datNetPort"))
if mibBuilder.loadTexts: datSessionTableEntry.setStatus('current')
datSubIp = MibTableColumn((1, 3, 6, 1, 4, 1, 3309, 1, 3, 8, 1, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: datSubIp.setStatus('current')
datSubPort = MibTableColumn((1, 3, 6, 1, 4, 1, 3309, 1, 3, 8, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: datSubPort.setStatus('current')
datSubMac = MibTableColumn((1, 3, 6, 1, 4, 1, 3309, 1, 3, 8, 1, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: datSubMac.setStatus('current')
datNetIp = MibTableColumn((1, 3, 6, 1, 4, 1, 3309, 1, 3, 8, 1, 1, 4), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: datNetIp.setStatus('current')
datNetPort = MibTableColumn((1, 3, 6, 1, 4, 1, 3309, 1, 3, 8, 1, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: datNetPort.setStatus('current')
datDestIp = MibTableColumn((1, 3, 6, 1, 4, 1, 3309, 1, 3, 8, 1, 1, 6), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: datDestIp.setStatus('current')
datDestPort = MibTableColumn((1, 3, 6, 1, 4, 1, 3309, 1, 3, 8, 1, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: datDestPort.setStatus('current')
datProto = MibTableColumn((1, 3, 6, 1, 4, 1, 3309, 1, 3, 8, 1, 1, 8), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: datProto.setStatus('current')
datSessState = MibTableColumn((1, 3, 6, 1, 4, 1, 3309, 1, 3, 8, 1, 1, 9), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: datSessState.setStatus('current')
datTimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 3309, 1, 3, 8, 1, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: datTimeout.setStatus('current')
dhcpDisable = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 10, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("false", 0), ("true", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dhcpDisable.setStatus('current')
dhcpIpUpsell = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 10, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dhcpIpUpsell.setStatus('current')
dhcpServer = MibIdentifier((1, 3, 6, 1, 4, 1, 3309, 1, 3, 10, 3))
dhcpServerEnable = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 10, 3, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dhcpServerEnable.setStatus('current')
dhcpServerSubnetBased = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 10, 3, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dhcpServerSubnetBased.setStatus('current')
dhcpServerTable = MibTable((1, 3, 6, 1, 4, 1, 3309, 1, 3, 10, 3, 4), )
if mibBuilder.loadTexts: dhcpServerTable.setStatus('current')
dhcpPoolTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3309, 1, 3, 10, 3, 4, 1), ).setIndexNames((0, "NOMADIX-MIB", "poolIndex"))
if mibBuilder.loadTexts: dhcpPoolTableEntry.setStatus('current')
poolIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3309, 1, 3, 10, 3, 4, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: poolIndex.setStatus('current')
serverIp = MibTableColumn((1, 3, 6, 1, 4, 1, 3309, 1, 3, 10, 3, 4, 1, 4), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: serverIp.setStatus('current')
netMask = MibTableColumn((1, 3, 6, 1, 4, 1, 3309, 1, 3, 10, 3, 4, 1, 6), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: netMask.setStatus('current')
poolStartIp = MibTableColumn((1, 3, 6, 1, 4, 1, 3309, 1, 3, 10, 3, 4, 1, 8), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: poolStartIp.setStatus('current')
poolStopIp = MibTableColumn((1, 3, 6, 1, 4, 1, 3309, 1, 3, 10, 3, 4, 1, 10), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: poolStopIp.setStatus('current')
leaseMinutes = MibTableColumn((1, 3, 6, 1, 4, 1, 3309, 1, 3, 10, 3, 4, 1, 12), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: leaseMinutes.setStatus('current')
publicPool = MibTableColumn((1, 3, 6, 1, 4, 1, 3309, 1, 3, 10, 3, 4, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("false", 0), ("true", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: publicPool.setStatus('current')
ipUpSell = MibTableColumn((1, 3, 6, 1, 4, 1, 3309, 1, 3, 10, 3, 4, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("false", 0), ("true", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipUpSell.setStatus('current')
defaultPool = MibTableColumn((1, 3, 6, 1, 4, 1, 3309, 1, 3, 10, 3, 4, 1, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("false", 0), ("true", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: defaultPool.setStatus('current')
poolStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 3309, 1, 3, 10, 3, 4, 1, 20), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: poolStatus.setStatus('current')
dhcpLeaseTable = MibTable((1, 3, 6, 1, 4, 1, 3309, 1, 3, 10, 3, 6), )
if mibBuilder.loadTexts: dhcpLeaseTable.setStatus('current')
dhcpLeaseTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3309, 1, 3, 10, 3, 6, 1), ).setIndexNames((0, "NOMADIX-MIB", "leaseIndex"))
if mibBuilder.loadTexts: dhcpLeaseTableEntry.setStatus('current')
leaseIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3309, 1, 3, 10, 3, 6, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: leaseIndex.setStatus('current')
leaseAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 3309, 1, 3, 10, 3, 6, 1, 4), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: leaseAddress.setStatus('current')
leaseCLID = MibTableColumn((1, 3, 6, 1, 4, 1, 3309, 1, 3, 10, 3, 6, 1, 6), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: leaseCLID.setStatus('current')
leaseStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 3309, 1, 3, 10, 3, 6, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("available", 0), ("reserved", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: leaseStatus.setStatus('current')
dhcpRelay = MibIdentifier((1, 3, 6, 1, 4, 1, 3309, 1, 3, 10, 10))
dhcpRelayEnable = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 10, 10, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dhcpRelayEnable.setStatus('current')
dhcpRelayAgentIP = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 10, 10, 4), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dhcpRelayAgentIP.setStatus('current')
dhcpRelayServerIP = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 10, 10, 5), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dhcpRelayServerIP.setStatus('current')
dnsHostName = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 12, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 64))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dnsHostName.setStatus('current')
dnsDomain = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 12, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 64))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dnsDomain.setStatus('current')
dnsPrimaryServer = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 12, 3), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dnsPrimaryServer.setStatus('current')
dnsSecondaryServer = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 12, 4), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dnsSecondaryServer.setStatus('current')
dnsTertiaryServer = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 12, 5), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dnsTertiaryServer.setStatus('current')
dynDnsEnable = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 50, 0), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dynDnsEnable.setStatus('current')
dynDnsProtocol = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 50, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("dynDnsOrgProto", 0), ("dynDnsOrgProtoSecure", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dynDnsProtocol.setStatus('current')
dynDnsServer = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 50, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dynDnsServer.setStatus('current')
dynDnsPort = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 50, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("dynDnsPort80", 0), ("dynDnsPort8245", 1), ("dynDnsPort443", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dynDnsPort.setStatus('current')
dynDnsHostname = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 50, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dynDnsHostname.setStatus('current')
dynDnsUsername = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 50, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dynDnsUsername.setStatus('current')
dynDnsPassword = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 50, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dynDnsPassword.setStatus('current')
dynDnsForceUpdate = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 50, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dynDnsForceUpdate.setStatus('current')
greTunnelingEnable = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 13, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: greTunnelingEnable.setStatus('current')
greVpnConcentratorIp = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 13, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: greVpnConcentratorIp.setStatus('current')
greInterfaceIp = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 13, 3), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: greInterfaceIp.setStatus('current')
greInterfaceNetmask = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 13, 4), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: greInterfaceNetmask.setStatus('current')
greInterfaceGateway = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 13, 5), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: greInterfaceGateway.setStatus('current')
hprOn = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 14, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hprOn.setStatus('current')
hprUrl = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 14, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 237))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hprUrl.setStatus('current')
hprParameterPassing = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 14, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hprParameterPassing.setStatus('current')
hprRedirectionFrequency = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 14, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hprRedirectionFrequency.setStatus('current')
iccOn = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 16, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: iccOn.setStatus('current')
iccTitle = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 16, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 237))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: iccTitle.setStatus('current')
iccLogoutOption = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 16, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 2))).clone(namedValues=NamedValues(("redisplay", 0), ("logout", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: iccLogoutOption.setStatus('current')
iccLanguageOption = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 16, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("english", 0), ("chinese", 1), ("french", 2), ("german", 3), ("japanese", 4), ("spanish", 5), ("other", 6)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: iccLanguageOption.setStatus('current')
iccTimerOption = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 16, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("remaining", 0), ("elapsed", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: iccTimerOption.setStatus('current')
iccCharSetOption = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 16, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11))).clone(namedValues=NamedValues(("default", 0), ("western-iso-8859-1", 1), ("chinese-big5", 2), ("chinese-euc-cn", 3), ("chinese-euc-tw", 4), ("chinese-gb2312", 5), ("japanese-euc-jp", 6), ("japanese-iso-2022-jp", 7), ("japanese-shift-jis", 8), ("korean-euc-kr", 9), ("korean-iso-2022-kr", 10), ("korean-ks-c-5601", 11)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: iccCharSetOption.setStatus('current')
iccButtons = MibIdentifier((1, 3, 6, 1, 4, 1, 3309, 1, 3, 16, 10))
iccISPLogoButton = MibIdentifier((1, 3, 6, 1, 4, 1, 3309, 1, 3, 16, 10, 5))
iccButton2 = MibIdentifier((1, 3, 6, 1, 4, 1, 3309, 1, 3, 16, 10, 6))
iccButton3 = MibIdentifier((1, 3, 6, 1, 4, 1, 3309, 1, 3, 16, 10, 7))
iccButton4 = MibIdentifier((1, 3, 6, 1, 4, 1, 3309, 1, 3, 16, 10, 8))
iccButton5 = MibIdentifier((1, 3, 6, 1, 4, 1, 3309, 1, 3, 16, 10, 9))
iccButton6 = MibIdentifier((1, 3, 6, 1, 4, 1, 3309, 1, 3, 16, 10, 10))
iccButton7 = MibIdentifier((1, 3, 6, 1, 4, 1, 3309, 1, 3, 16, 10, 11))
iccButton8 = MibIdentifier((1, 3, 6, 1, 4, 1, 3309, 1, 3, 16, 10, 12))
iccButton9 = MibIdentifier((1, 3, 6, 1, 4, 1, 3309, 1, 3, 16, 10, 13))
iccISPLogoButtonName = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 16, 10, 5, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 37))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: iccISPLogoButtonName.setStatus('current')
iccISPLogoButtonURL = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 16, 10, 5, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 237))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: iccISPLogoButtonURL.setStatus('current')
iccISPLogoButtonImgName = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 16, 10, 5, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: iccISPLogoButtonImgName.setStatus('current')
iccButtonName2 = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 16, 10, 6, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 37))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: iccButtonName2.setStatus('current')
iccButtonURL2 = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 16, 10, 6, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 237))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: iccButtonURL2.setStatus('current')
iccButtonImgName2 = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 16, 10, 6, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: iccButtonImgName2.setStatus('current')
iccButtonName3 = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 16, 10, 7, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 37))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: iccButtonName3.setStatus('current')
iccButtonURL3 = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 16, 10, 7, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 237))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: iccButtonURL3.setStatus('current')
iccButtonImgName3 = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 16, 10, 7, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: iccButtonImgName3.setStatus('current')
iccButtonName4 = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 16, 10, 8, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 37))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: iccButtonName4.setStatus('current')
iccButtonURL4 = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 16, 10, 8, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 237))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: iccButtonURL4.setStatus('current')
iccButtonImgName4 = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 16, 10, 8, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: iccButtonImgName4.setStatus('current')
iccButtonName5 = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 16, 10, 9, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 37))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: iccButtonName5.setStatus('current')
iccButtonURL5 = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 16, 10, 9, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 237))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: iccButtonURL5.setStatus('current')
iccButtonImgName5 = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 16, 10, 9, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: iccButtonImgName5.setStatus('current')
iccButtonName6 = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 16, 10, 10, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 37))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: iccButtonName6.setStatus('current')
iccButtonURL6 = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 16, 10, 10, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 237))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: iccButtonURL6.setStatus('current')
iccButtonImgName6 = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 16, 10, 10, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: iccButtonImgName6.setStatus('current')
iccButtonName7 = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 16, 10, 11, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 37))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: iccButtonName7.setStatus('current')
iccButtonURL7 = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 16, 10, 11, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 237))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: iccButtonURL7.setStatus('current')
iccButtonImgName7 = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 16, 10, 11, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: iccButtonImgName7.setStatus('current')
iccButtonName8 = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 16, 10, 12, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 37))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: iccButtonName8.setStatus('current')
iccButtonURL8 = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 16, 10, 12, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 237))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: iccButtonURL8.setStatus('current')
iccButtonImgName8 = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 16, 10, 12, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: iccButtonImgName8.setStatus('current')
iccButtonName9 = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 16, 10, 13, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 37))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: iccButtonName9.setStatus('current')
iccButtonURL9 = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 16, 10, 13, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 237))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: iccButtonURL9.setStatus('current')
iccButtonImgName9 = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 16, 10, 13, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: iccButtonImgName9.setStatus('current')
iccBanners = MibIdentifier((1, 3, 6, 1, 4, 1, 3309, 1, 3, 16, 14))
iccBanner1 = MibIdentifier((1, 3, 6, 1, 4, 1, 3309, 1, 3, 16, 14, 14))
iccBanner2 = MibIdentifier((1, 3, 6, 1, 4, 1, 3309, 1, 3, 16, 14, 15))
iccBanner3 = MibIdentifier((1, 3, 6, 1, 4, 1, 3309, 1, 3, 16, 14, 16))
iccBanner4 = MibIdentifier((1, 3, 6, 1, 4, 1, 3309, 1, 3, 16, 14, 17))
iccBanner5 = MibIdentifier((1, 3, 6, 1, 4, 1, 3309, 1, 3, 16, 14, 18))
iccBannerName1 = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 16, 14, 14, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: iccBannerName1.setStatus('current')
iccBannerURL1 = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 16, 14, 14, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 237))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: iccBannerURL1.setStatus('current')
iccBannerImgName1 = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 16, 14, 14, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: iccBannerImgName1.setStatus('current')
iccBannerDuration1 = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 16, 14, 14, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: iccBannerDuration1.setStatus('current')
iccBannerStartTime1 = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 16, 14, 14, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: iccBannerStartTime1.setStatus('current')
iccBannerStopTime1 = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 16, 14, 14, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: iccBannerStopTime1.setStatus('current')
iccBannerName2 = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 16, 14, 15, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: iccBannerName2.setStatus('current')
iccBannerURL2 = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 16, 14, 15, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 237))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: iccBannerURL2.setStatus('current')
iccBannerImgName2 = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 16, 14, 15, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: iccBannerImgName2.setStatus('current')
iccBannerDuration2 = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 16, 14, 15, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: iccBannerDuration2.setStatus('current')
iccBannerStartTime2 = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 16, 14, 15, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: iccBannerStartTime2.setStatus('current')
iccBannerStopTime2 = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 16, 14, 15, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: iccBannerStopTime2.setStatus('current')
iccBannerName3 = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 16, 14, 16, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: iccBannerName3.setStatus('current')
iccBannerURL3 = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 16, 14, 16, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 237))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: iccBannerURL3.setStatus('current')
iccBannerImgName3 = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 16, 14, 16, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: iccBannerImgName3.setStatus('current')
iccBannerDuration3 = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 16, 14, 16, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: iccBannerDuration3.setStatus('current')
iccBannerStartTime3 = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 16, 14, 16, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: iccBannerStartTime3.setStatus('current')
iccBannerStopTime3 = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 16, 14, 16, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: iccBannerStopTime3.setStatus('current')
iccBannerName4 = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 16, 14, 17, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: iccBannerName4.setStatus('current')
iccBannerURL4 = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 16, 14, 17, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 237))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: iccBannerURL4.setStatus('current')
iccBannerImgName4 = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 16, 14, 17, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: iccBannerImgName4.setStatus('current')
iccBannerDuration4 = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 16, 14, 17, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: iccBannerDuration4.setStatus('current')
iccBannerStartTime4 = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 16, 14, 17, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: iccBannerStartTime4.setStatus('current')
iccBannerStopTime4 = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 16, 14, 17, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: iccBannerStopTime4.setStatus('current')
iccBannerName5 = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 16, 14, 18, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: iccBannerName5.setStatus('current')
iccBannerURL5 = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 16, 14, 18, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 237))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: iccBannerURL5.setStatus('current')
iccBannerImgName5 = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 16, 14, 18, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: iccBannerImgName5.setStatus('current')
iccBannerDuration5 = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 16, 14, 18, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: iccBannerDuration5.setStatus('current')
iccBannerStartTime5 = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 16, 14, 18, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: iccBannerStartTime5.setStatus('current')
iccBannerStopTime5 = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 16, 14, 18, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: iccBannerStopTime5.setStatus('current')
inatOn = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 17, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: inatOn.setStatus('current')
pptpOn = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 17, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pptpOn.setStatus('current')
pptpidOn = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 17, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pptpidOn.setStatus('current')
ipsecOn = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 17, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipsecOn.setStatus('current')
inatIpTable = MibTable((1, 3, 6, 1, 4, 1, 3309, 1, 3, 17, 5), )
if mibBuilder.loadTexts: inatIpTable.setStatus('current')
inatIpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3309, 1, 3, 17, 5, 1), ).setIndexNames((0, "NOMADIX-MIB", "inatIndex"))
if mibBuilder.loadTexts: inatIpEntry.setStatus('current')
inatIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3309, 1, 3, 17, 5, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: inatIndex.setStatus('current')
inatStartAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 3309, 1, 3, 17, 5, 1, 4), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: inatStartAddress.setStatus('current')
inatEndAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 3309, 1, 3, 17, 5, 1, 6), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: inatEndAddress.setStatus('current')
inatEntryStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 3309, 1, 3, 17, 5, 1, 10), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: inatEntryStatus.setStatus('current')
lkKey = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 18, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lkKey.setStatus('current')
lkModelNo = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 18, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 10))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lkModelNo.setStatus('current')
lkMaxNumSubs = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 18, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lkMaxNumSubs.setStatus('current')
lkFeatureList = MibTable((1, 3, 6, 1, 4, 1, 3309, 1, 3, 18, 4), )
if mibBuilder.loadTexts: lkFeatureList.setStatus('current')
lkFeatureListEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3309, 1, 3, 18, 4, 1), ).setIndexNames((0, "NOMADIX-MIB", "lkFeatureIndex"))
if mibBuilder.loadTexts: lkFeatureListEntry.setStatus('current')
lkFeatureIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3309, 1, 3, 18, 4, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lkFeatureIndex.setStatus('current')
lkFeatureName = MibTableColumn((1, 3, 6, 1, 4, 1, 3309, 1, 3, 18, 4, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 30))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lkFeatureName.setStatus('current')
lkFeatureStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 3309, 1, 3, 18, 4, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("notPurchased", 0), ("purchased", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lkFeatureStatus.setStatus('current')
locationCompanyName = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 19, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(2, 39))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: locationCompanyName.setStatus('current')
locationSiteName = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 19, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 39))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: locationSiteName.setStatus('current')
locationAddress1 = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 19, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 39))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: locationAddress1.setStatus('current')
locationAddress2 = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 19, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 39))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: locationAddress2.setStatus('current')
locationCity = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 19, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(2, 39))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: locationCity.setStatus('current')
locationState = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 19, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(2, 39))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: locationState.setStatus('current')
locationZip = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 19, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 39))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: locationZip.setStatus('current')
locationCountry = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 19, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(2, 39))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: locationCountry.setStatus('current')
locationEmail = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 19, 9), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(5, 39))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: locationEmail.setStatus('current')
locationVenueType = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 19, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10))).clone(namedValues=NamedValues(("apartment", 1), ("bar-coffeeshop-restaurant", 2), ("convention-center", 3), ("corporate-guest-access", 4), ("education", 5), ("hospitality", 6), ("marina-camp-ground", 7), ("public-space", 8), ("public-transport", 9), ("other", 10)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: locationVenueType.setStatus('current')
locationNetworkIp = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 19, 12), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: locationNetworkIp.setStatus('current')
locationNetmask = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 19, 13), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: locationNetmask.setStatus('current')
locationGateway = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 19, 14), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: locationGateway.setStatus('current')
locationNetIntfCfgMode = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 19, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("static", 0), ("dhcpClient", 1), ("pppoeClient", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: locationNetIntfCfgMode.setStatus('current')
locationIsoCountryCode = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 19, 16), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 3))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: locationIsoCountryCode.setStatus('current')
locationPhoneCountryCode = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 19, 17), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 10))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: locationPhoneCountryCode.setStatus('current')
locationCallingAreaCode = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 19, 18), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 10))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: locationCallingAreaCode.setStatus('current')
locationNetworkSsidZone = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 19, 19), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: locationNetworkSsidZone.setStatus('current')
passthroughOn = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 24, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: passthroughOn.setStatus('current')
passthroughIPTable = MibTable((1, 3, 6, 1, 4, 1, 3309, 1, 3, 24, 2), )
if mibBuilder.loadTexts: passthroughIPTable.setStatus('current')
passthroughIPEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3309, 1, 3, 24, 2, 1), ).setIndexNames((0, "NOMADIX-MIB", "passthroughAddIndex"))
if mibBuilder.loadTexts: passthroughIPEntry.setStatus('current')
passthroughAddIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3309, 1, 3, 24, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: passthroughAddIndex.setStatus('current')
passthroughaddress = MibTableColumn((1, 3, 6, 1, 4, 1, 3309, 1, 3, 24, 2, 1, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: passthroughaddress.setStatus('current')
statusIP = MibTableColumn((1, 3, 6, 1, 4, 1, 3309, 1, 3, 24, 2, 1, 3), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: statusIP.setStatus('current')
passthroughDNSTable = MibTable((1, 3, 6, 1, 4, 1, 3309, 1, 3, 24, 3), )
if mibBuilder.loadTexts: passthroughDNSTable.setStatus('current')
passthroughDNSEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3309, 1, 3, 24, 3, 1), ).setIndexNames((0, "NOMADIX-MIB", "passthroughNameIndex"))
if mibBuilder.loadTexts: passthroughDNSEntry.setStatus('current')
passthroughNameIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3309, 1, 3, 24, 3, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: passthroughNameIndex.setStatus('current')
passthroughname = MibTableColumn((1, 3, 6, 1, 4, 1, 3309, 1, 3, 24, 3, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 237))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: passthroughname.setStatus('current')
statusDNS = MibTableColumn((1, 3, 6, 1, 4, 1, 3309, 1, 3, 24, 3, 1, 3), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: statusDNS.setStatus('current')
portLocInRoomPortMappingOn = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 28, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: portLocInRoomPortMappingOn.setStatus('current')
portLocInRoomPortMappingUsername = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 28, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 17))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: portLocInRoomPortMappingUsername.setStatus('current')
portLocInRoomPortMappingPassword = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 28, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 17))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: portLocInRoomPortMappingPassword.setStatus('current')
portLocConcentratorType = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 28, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("no", 0), ("vlan1", 1), ("vlan2", 2), ("expresso", 3), ("lucent", 4), ("mdulite", 5), ("rfc1493", 6), ("riverdelta", 7), ("elastic", 8)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: portLocConcentratorType.setStatus('current')
portLocConcentratorTable = MibTable((1, 3, 6, 1, 4, 1, 3309, 1, 3, 28, 10), )
if mibBuilder.loadTexts: portLocConcentratorTable.setStatus('current')
portLocConcentratorTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3309, 1, 3, 28, 10, 1), ).setIndexNames((0, "NOMADIX-MIB", "portLocConcIndex"))
if mibBuilder.loadTexts: portLocConcentratorTableEntry.setStatus('current')
portLocConcIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3309, 1, 3, 28, 10, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: portLocConcIndex.setStatus('current')
portLocAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 3309, 1, 3, 28, 10, 1, 4), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: portLocAddress.setStatus('current')
portLocCommunity = MibTableColumn((1, 3, 6, 1, 4, 1, 3309, 1, 3, 28, 10, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 139))).setMaxAccess("readonly")
if mibBuilder.loadTexts: portLocCommunity.setStatus('current')
portLocUplinkPort = MibTableColumn((1, 3, 6, 1, 4, 1, 3309, 1, 3, 28, 10, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: portLocUplinkPort.setStatus('current')
portLocTable = MibTable((1, 3, 6, 1, 4, 1, 3309, 1, 3, 28, 12), )
if mibBuilder.loadTexts: portLocTable.setStatus('current')
portLocTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3309, 1, 3, 28, 12, 1), ).setIndexNames((0, "NOMADIX-MIB", "portLocIndex"))
if mibBuilder.loadTexts: portLocTableEntry.setStatus('current')
portLocIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3309, 1, 3, 28, 12, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: portLocIndex.setStatus('current')
portLocLocation = MibTableColumn((1, 3, 6, 1, 4, 1, 3309, 1, 3, 28, 12, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 139))).setMaxAccess("readonly")
if mibBuilder.loadTexts: portLocLocation.setStatus('current')
portLocPort = MibTableColumn((1, 3, 6, 1, 4, 1, 3309, 1, 3, 28, 12, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: portLocPort.setStatus('current')
portLocModemMAC = MibTableColumn((1, 3, 6, 1, 4, 1, 3309, 1, 3, 28, 12, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: portLocModemMAC.setStatus('current')
portLocDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 3309, 1, 3, 28, 12, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 139))).setMaxAccess("readonly")
if mibBuilder.loadTexts: portLocDescription.setStatus('current')
portLocState = MibTableColumn((1, 3, 6, 1, 4, 1, 3309, 1, 3, 28, 12, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("noCharge", 0), ("charge", 1), ("blocked", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: portLocState.setStatus('current')
radProxyServices = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 38, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: radProxyServices.setStatus('current')
radProxyAuthSvrPort = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 38, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: radProxyAuthSvrPort.setStatus('current')
radProxyAcctSvrPort = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 38, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: radProxyAcctSvrPort.setStatus('current')
radProxyLocalServcomPort = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 38, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: radProxyLocalServcomPort.setStatus('current')
radProxyUpstreamNas = MibIdentifier((1, 3, 6, 1, 4, 1, 3309, 1, 3, 38, 4))
radProxyUpstreamNasTable = MibTable((1, 3, 6, 1, 4, 1, 3309, 1, 3, 38, 4, 1), )
if mibBuilder.loadTexts: radProxyUpstreamNasTable.setStatus('current')
radProxyUpstreamNasTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3309, 1, 3, 38, 4, 1, 1), ).setIndexNames((0, "NOMADIX-MIB", "nasIndex"))
if mibBuilder.loadTexts: radProxyUpstreamNasTableEntry.setStatus('current')
nasIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3309, 1, 3, 38, 4, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nasIndex.setStatus('current')
nasEntryActive = MibTableColumn((1, 3, 6, 1, 4, 1, 3309, 1, 3, 38, 4, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("inactive", 0), ("active", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nasEntryActive.setStatus('current')
nasIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 3309, 1, 3, 38, 4, 1, 1, 3), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nasIpAddress.setStatus('current')
nasAuthSec = MibTableColumn((1, 3, 6, 1, 4, 1, 3309, 1, 3, 38, 4, 1, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 130))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nasAuthSec.setStatus('current')
nasAcctSec = MibTableColumn((1, 3, 6, 1, 4, 1, 3309, 1, 3, 38, 4, 1, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 130))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nasAcctSec.setStatus('current')
nasDefProf = MibTableColumn((1, 3, 6, 1, 4, 1, 3309, 1, 3, 38, 4, 1, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 40))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nasDefProf.setStatus('current')
nasStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 3309, 1, 3, 38, 4, 1, 1, 7), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nasStatus.setStatus('current')
rBserviceProfiles = MibIdentifier((1, 3, 6, 1, 4, 1, 3309, 1, 3, 39, 1))
serviceProfileTable = MibTable((1, 3, 6, 1, 4, 1, 3309, 1, 3, 39, 1, 1), )
if mibBuilder.loadTexts: serviceProfileTable.setStatus('current')
serviceProfileTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3309, 1, 3, 39, 1, 1, 1), ).setIndexNames((0, "NOMADIX-MIB", "profIndex"))
if mibBuilder.loadTexts: serviceProfileTableEntry.setStatus('current')
profIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3309, 1, 3, 39, 1, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: profIndex.setStatus('current')
profName = MibTableColumn((1, 3, 6, 1, 4, 1, 3309, 1, 3, 39, 1, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 40))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: profName.setStatus('current')
radAuthOn = MibTableColumn((1, 3, 6, 1, 4, 1, 3309, 1, 3, 39, 1, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: radAuthOn.setStatus('current')
radAuthProto = MibTableColumn((1, 3, 6, 1, 4, 1, 3309, 1, 3, 39, 1, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("rad-auth-proto-pap", 0), ("rad-auth-proto-chap", 1), ("rad-auth-proto-mschap-v1", 2), ("rad-auth-proto-mschap-v2", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: radAuthProto.setStatus('current')
radAuthSrv1Ip = MibTableColumn((1, 3, 6, 1, 4, 1, 3309, 1, 3, 39, 1, 1, 1, 5), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: radAuthSrv1Ip.setStatus('current')
radAuthSrv1Port = MibTableColumn((1, 3, 6, 1, 4, 1, 3309, 1, 3, 39, 1, 1, 1, 6), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: radAuthSrv1Port.setStatus('current')
radAuthSrv1Sec = MibTableColumn((1, 3, 6, 1, 4, 1, 3309, 1, 3, 39, 1, 1, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 130))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: radAuthSrv1Sec.setStatus('current')
radAuthSrv2Ip = MibTableColumn((1, 3, 6, 1, 4, 1, 3309, 1, 3, 39, 1, 1, 1, 8), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: radAuthSrv2Ip.setStatus('current')
radAuthSrv2Port = MibTableColumn((1, 3, 6, 1, 4, 1, 3309, 1, 3, 39, 1, 1, 1, 9), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: radAuthSrv2Port.setStatus('current')
radAuthSrv2Sec = MibTableColumn((1, 3, 6, 1, 4, 1, 3309, 1, 3, 39, 1, 1, 1, 10), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 130))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: radAuthSrv2Sec.setStatus('current')
radAcctOn = MibTableColumn((1, 3, 6, 1, 4, 1, 3309, 1, 3, 39, 1, 1, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: radAcctOn.setStatus('current')
radAcctSrv1Ip = MibTableColumn((1, 3, 6, 1, 4, 1, 3309, 1, 3, 39, 1, 1, 1, 12), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: radAcctSrv1Ip.setStatus('current')
radAcctSrv1Port = MibTableColumn((1, 3, 6, 1, 4, 1, 3309, 1, 3, 39, 1, 1, 1, 13), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: radAcctSrv1Port.setStatus('current')
radAcctSrv1Sec = MibTableColumn((1, 3, 6, 1, 4, 1, 3309, 1, 3, 39, 1, 1, 1, 14), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 130))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: radAcctSrv1Sec.setStatus('current')
radAcctSrv2Ip = MibTableColumn((1, 3, 6, 1, 4, 1, 3309, 1, 3, 39, 1, 1, 1, 15), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: radAcctSrv2Ip.setStatus('current')
radAcctSrv2Port = MibTableColumn((1, 3, 6, 1, 4, 1, 3309, 1, 3, 39, 1, 1, 1, 16), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: radAcctSrv2Port.setStatus('current')
radAcctSrv2Sec = MibTableColumn((1, 3, 6, 1, 4, 1, 3309, 1, 3, 39, 1, 1, 1, 17), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 130))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: radAcctSrv2Sec.setStatus('current')
radRetrMethod = MibTableColumn((1, 3, 6, 1, 4, 1, 3309, 1, 3, 39, 1, 1, 1, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("failover", 0), ("round-robin", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: radRetrMethod.setStatus('current')
radRetrFreq = MibTableColumn((1, 3, 6, 1, 4, 1, 3309, 1, 3, 39, 1, 1, 1, 19), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: radRetrFreq.setStatus('current')
radRetrAttempts = MibTableColumn((1, 3, 6, 1, 4, 1, 3309, 1, 3, 39, 1, 1, 1, 20), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: radRetrAttempts.setStatus('current')
profStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 3309, 1, 3, 39, 1, 1, 1, 21), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: profStatus.setStatus('current')
rBtunnelProfiles = MibIdentifier((1, 3, 6, 1, 4, 1, 3309, 1, 3, 39, 3))
tunnelProfileTable = MibTable((1, 3, 6, 1, 4, 1, 3309, 1, 3, 39, 3, 1), )
if mibBuilder.loadTexts: tunnelProfileTable.setStatus('current')
tunnelProfileTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3309, 1, 3, 39, 3, 1, 1), ).setIndexNames((0, "NOMADIX-MIB", "tunProfIndex"))
if mibBuilder.loadTexts: tunnelProfileTableEntry.setStatus('current')
tunProfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3309, 1, 3, 39, 3, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tunProfIndex.setStatus('current')
tunProfName = MibTableColumn((1, 3, 6, 1, 4, 1, 3309, 1, 3, 39, 3, 1, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 40))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tunProfName.setStatus('current')
tunPassword = MibTableColumn((1, 3, 6, 1, 4, 1, 3309, 1, 3, 39, 3, 1, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 64))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tunPassword.setStatus('current')
tunPeerIp = MibTableColumn((1, 3, 6, 1, 4, 1, 3309, 1, 3, 39, 3, 1, 1, 8), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tunPeerIp.setStatus('current')
tunProfStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 3309, 1, 3, 39, 3, 1, 1, 20), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tunProfStatus.setStatus('current')
rBroutes = MibIdentifier((1, 3, 6, 1, 4, 1, 3309, 1, 3, 39, 2))
realmBasedRoutingTable = MibTable((1, 3, 6, 1, 4, 1, 3309, 1, 3, 39, 2, 1), )
if mibBuilder.loadTexts: realmBasedRoutingTable.setStatus('current')
realmBasedRoutingTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3309, 1, 3, 39, 2, 1, 1), ).setIndexNames((0, "NOMADIX-MIB", "realmIndex"))
if mibBuilder.loadTexts: realmBasedRoutingTableEntry.setStatus('current')
realmIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3309, 1, 3, 39, 2, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: realmIndex.setStatus('current')
realmEntryActive = MibTableColumn((1, 3, 6, 1, 4, 1, 3309, 1, 3, 39, 2, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("inactive", 0), ("active", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: realmEntryActive.setStatus('current')
realmWildcard = MibTableColumn((1, 3, 6, 1, 4, 1, 3309, 1, 3, 39, 2, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: realmWildcard.setStatus('current')
realmName = MibTableColumn((1, 3, 6, 1, 4, 1, 3309, 1, 3, 39, 2, 1, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 80))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: realmName.setStatus('current')
realmMatchType = MibTableColumn((1, 3, 6, 1, 4, 1, 3309, 1, 3, 39, 2, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("prefixOnly", 0), ("suffixOnly", 1), ("prefixOrSuffix", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: realmMatchType.setStatus('current')
realmProfile = MibTableColumn((1, 3, 6, 1, 4, 1, 3309, 1, 3, 39, 2, 1, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 40))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: realmProfile.setStatus('current')
realmTunProfile = MibTableColumn((1, 3, 6, 1, 4, 1, 3309, 1, 3, 39, 2, 1, 1, 9), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 40))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: realmTunProfile.setStatus('current')
realmStrip = MibTableColumn((1, 3, 6, 1, 4, 1, 3309, 1, 3, 39, 2, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("dontStrip", 0), ("strip", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: realmStrip.setStatus('current')
realmTunStrip = MibTableColumn((1, 3, 6, 1, 4, 1, 3309, 1, 3, 39, 2, 1, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("dontStrip", 0), ("strip", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: realmTunStrip.setStatus('current')
realmTunLocHostName = MibTableColumn((1, 3, 6, 1, 4, 1, 3309, 1, 3, 39, 2, 1, 1, 11), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 40))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: realmTunLocHostName.setStatus('current')
realmStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 3309, 1, 3, 39, 2, 1, 1, 8), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: realmStatus.setStatus('current')
sessionLimitEnable = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 40, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sessionLimitEnable.setStatus('current')
sessionLimitMeanRate = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 40, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sessionLimitMeanRate.setStatus('current')
sessionLimitBurstSize = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 40, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sessionLimitBurstSize.setStatus('current')
sessionLimitTimeInterval = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 40, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sessionLimitTimeInterval.setStatus('current')
sessionLimitFilterOffendersEnable = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 40, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sessionLimitFilterOffendersEnable.setStatus('current')
smtpRedirect = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 30, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: smtpRedirect.setStatus('current')
smtpServerIP = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 30, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: smtpServerIP.setStatus('current')
smtpPcRedirect = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 30, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: smtpPcRedirect.setStatus('current')
smtpUsername = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 30, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 39))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: smtpUsername.setStatus('current')
smtpPassword = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 30, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 39))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: smtpPassword.setStatus('current')
smtpServerDNS = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 30, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 238))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: smtpServerDNS.setStatus('current')
snmpdOn = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 32, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snmpdOn.setStatus('current')
systemContact = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 32, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 238))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: systemContact.setStatus('current')
systemLocation = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 32, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 238))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: systemLocation.setStatus('current')
getCommunity = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 32, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 238))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: getCommunity.setStatus('current')
setCommunity = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 32, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 238))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setCommunity.setStatus('current')
trapCommunity = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 32, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 238))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: trapCommunity.setStatus('current')
trapIP = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 32, 7), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: trapIP.setStatus('current')
subnetTable = MibTable((1, 3, 6, 1, 4, 1, 3309, 1, 3, 34, 1), )
if mibBuilder.loadTexts: subnetTable.setStatus('current')
subnetTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3309, 1, 3, 34, 1, 1), ).setIndexNames((0, "NOMADIX-MIB", "subnetIndex"))
if mibBuilder.loadTexts: subnetTableEntry.setStatus('current')
subnetIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3309, 1, 3, 34, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: subnetIndex.setStatus('current')
subnet = MibTableColumn((1, 3, 6, 1, 4, 1, 3309, 1, 3, 34, 1, 1, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: subnet.setStatus('current')
mask = MibTableColumn((1, 3, 6, 1, 4, 1, 3309, 1, 3, 34, 1, 1, 3), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mask.setStatus('current')
subnetStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 3309, 1, 3, 34, 1, 1, 4), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: subnetStatus.setStatus('current')
subIdleLogoutTimeout = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 33, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(300, 86400))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: subIdleLogoutTimeout.setStatus('current')
subToSubCommBlock = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 33, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: subToSubCommBlock.setStatus('current')
systemLoggingOn = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 35, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: systemLoggingOn.setStatus('current')
systemLogNumber = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 35, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: systemLogNumber.setStatus('current')
systemLogFilter = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 35, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("emergency", 0), ("alert", 1), ("critical", 2), ("error", 3), ("warning", 4), ("notice", 5), ("info", 6), ("debug", 7)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: systemLogFilter.setStatus('current')
systemLogServerIp = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 35, 4), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: systemLogServerIp.setStatus('current')
systemSaveToFile = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 35, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: systemSaveToFile.setStatus('current')
systemReportLoggingOn = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 35, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: systemReportLoggingOn.setStatus('current')
systemReportLogNumber = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 35, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: systemReportLogNumber.setStatus('current')
systemReportLogServerIp = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 35, 8), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: systemReportLogServerIp.setStatus('current')
systemReportLogInterval = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 35, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 99999))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: systemReportLogInterval.setStatus('current')
systemVersion = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 35, 10), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: systemVersion.setStatus('current')
systemNseId = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 35, 11), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: systemNseId.setStatus('current')
systemReboot = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 35, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("reboot", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: systemReboot.setStatus('current')
systemBridgeMode = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 35, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: systemBridgeMode.setStatus('current')
systemConfigFile = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 35, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("factory", 1), ("export", 2), ("import", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: systemConfigFile.setStatus('current')
systemConfigFileStatus = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 35, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("noError", 0), ("errorCurrentNotChanged", 1), ("errorCurrentMaybeCorrupted", 2), ("errorCurrentNotArchived", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: systemConfigFileStatus.setStatus('current')
systemAdminConcurrencyOn = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 35, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: systemAdminConcurrencyOn.setStatus('current')
systemUptime = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 35, 17), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: systemUptime.setStatus('current')
systemHistoryTable = MibTable((1, 3, 6, 1, 4, 1, 3309, 1, 3, 35, 18), )
if mibBuilder.loadTexts: systemHistoryTable.setStatus('current')
systemHistoryTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3309, 1, 3, 35, 18, 1), ).setIndexNames((0, "NOMADIX-MIB", "systemHistoryIndex"))
if mibBuilder.loadTexts: systemHistoryTableEntry.setStatus('current')
systemHistoryIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3309, 1, 3, 35, 18, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: systemHistoryIndex.setStatus('current')
systemHistoryTimestamp = MibTableColumn((1, 3, 6, 1, 4, 1, 3309, 1, 3, 35, 18, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(24, 24)).setFixedLength(24)).setMaxAccess("readonly")
if mibBuilder.loadTexts: systemHistoryTimestamp.setStatus('current')
systemHistoryLogin = MibTableColumn((1, 3, 6, 1, 4, 1, 3309, 1, 3, 35, 18, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 14))).setMaxAccess("readonly")
if mibBuilder.loadTexts: systemHistoryLogin.setStatus('current')
systemHistoryAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 3309, 1, 3, 35, 18, 1, 4), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: systemHistoryAddress.setStatus('current')
systemHistoryMessage = MibTableColumn((1, 3, 6, 1, 4, 1, 3309, 1, 3, 35, 18, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 429))).setMaxAccess("readonly")
if mibBuilder.loadTexts: systemHistoryMessage.setStatus('current')
systemSyslogTable = MibTable((1, 3, 6, 1, 4, 1, 3309, 1, 3, 35, 19), )
if mibBuilder.loadTexts: systemSyslogTable.setStatus('current')
systemSyslogTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3309, 1, 3, 35, 19, 1), ).setIndexNames((0, "NOMADIX-MIB", "systemSyslogIndex"))
if mibBuilder.loadTexts: systemSyslogTableEntry.setStatus('current')
systemSyslogIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3309, 1, 3, 35, 19, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: systemSyslogIndex.setStatus('current')
systemSyslogTimestamp = MibTableColumn((1, 3, 6, 1, 4, 1, 3309, 1, 3, 35, 19, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(24, 24)).setFixedLength(24)).setMaxAccess("readonly")
if mibBuilder.loadTexts: systemSyslogTimestamp.setStatus('current')
systemSyslogVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 3309, 1, 3, 35, 19, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 14))).setMaxAccess("readonly")
if mibBuilder.loadTexts: systemSyslogVersion.setStatus('current')
systemSyslogAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 3309, 1, 3, 35, 19, 1, 4), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: systemSyslogAddress.setStatus('current')
systemSyslogMessage = MibTableColumn((1, 3, 6, 1, 4, 1, 3309, 1, 3, 35, 19, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 429))).setMaxAccess("readonly")
if mibBuilder.loadTexts: systemSyslogMessage.setStatus('current')
systemStaticPortMappingTable = MibTable((1, 3, 6, 1, 4, 1, 3309, 1, 3, 35, 20), )
if mibBuilder.loadTexts: systemStaticPortMappingTable.setStatus('current')
systemStaticPortMappingTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3309, 1, 3, 35, 20, 1), ).setIndexNames((0, "NOMADIX-MIB", "systemStaticPortMappingIndex"))
if mibBuilder.loadTexts: systemStaticPortMappingTableEntry.setStatus('current')
systemStaticPortMappingIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3309, 1, 3, 35, 20, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: systemStaticPortMappingIndex.setStatus('current')
systemStaticPortMappingMAC = MibTableColumn((1, 3, 6, 1, 4, 1, 3309, 1, 3, 35, 20, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 17))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: systemStaticPortMappingMAC.setStatus('current')
systemStaticPortMappingInternalIP = MibTableColumn((1, 3, 6, 1, 4, 1, 3309, 1, 3, 35, 20, 1, 3), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: systemStaticPortMappingInternalIP.setStatus('current')
systemStaticPortMappingInternalPort = MibTableColumn((1, 3, 6, 1, 4, 1, 3309, 1, 3, 35, 20, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: systemStaticPortMappingInternalPort.setStatus('current')
systemStaticPortMappingExternalIP = MibTableColumn((1, 3, 6, 1, 4, 1, 3309, 1, 3, 35, 20, 1, 5), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: systemStaticPortMappingExternalIP.setStatus('current')
systemStaticPortMappingExternalPort = MibTableColumn((1, 3, 6, 1, 4, 1, 3309, 1, 3, 35, 20, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1024, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: systemStaticPortMappingExternalPort.setStatus('current')
systemStaticPortMappingRemoteIP = MibTableColumn((1, 3, 6, 1, 4, 1, 3309, 1, 3, 35, 20, 1, 7), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: systemStaticPortMappingRemoteIP.setStatus('current')
systemStaticPortMappingRemotePort = MibTableColumn((1, 3, 6, 1, 4, 1, 3309, 1, 3, 35, 20, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: systemStaticPortMappingRemotePort.setStatus('current')
systemStaticPortMappingProto = MibTableColumn((1, 3, 6, 1, 4, 1, 3309, 1, 3, 35, 20, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("udp", 0), ("tcp", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: systemStaticPortMappingProto.setStatus('current')
systemStaticPortMappingStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 3309, 1, 3, 35, 20, 1, 10), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: systemStaticPortMappingStatus.setStatus('current')
blockIcmpFromPending = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 35, 21), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: blockIcmpFromPending.setStatus('current')
timeCurrentDateAndTime = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 36, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(24, 24)).setFixedLength(24)).setMaxAccess("readonly")
if mibBuilder.loadTexts: timeCurrentDateAndTime.setStatus('current')
timeOffsetSign = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 36, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("plus", 0), ("minus", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: timeOffsetSign.setStatus('current')
timeOffsetHours = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 36, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 23))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: timeOffsetHours.setStatus('current')
timeOffsetMinutes = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 36, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 59))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: timeOffsetMinutes.setStatus('current')
timeServerTimeout = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 36, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 200))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: timeServerTimeout.setStatus('current')
timeServer1 = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 36, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 238))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: timeServer1.setStatus('current')
timeServer2 = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 36, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 238))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: timeServer2.setStatus('current')
timeServer3 = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 36, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 238))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: timeServer3.setStatus('current')
timeServer4 = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 36, 9), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 238))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: timeServer4.setStatus('current')
urlFilteringOn = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 37, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: urlFilteringOn.setStatus('current')
urlFilteringIPTable = MibTable((1, 3, 6, 1, 4, 1, 3309, 1, 3, 37, 2), )
if mibBuilder.loadTexts: urlFilteringIPTable.setStatus('current')
urlFilteringIPTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3309, 1, 3, 37, 2, 1), ).setIndexNames((0, "NOMADIX-MIB", "urlFilteringIPTableIndex"))
if mibBuilder.loadTexts: urlFilteringIPTableEntry.setStatus('current')
urlFilteringIPTableIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3309, 1, 3, 37, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: urlFilteringIPTableIndex.setStatus('current')
urlFilteringIPTableAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 3309, 1, 3, 37, 2, 1, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: urlFilteringIPTableAddress.setStatus('current')
urlFilteringIPTableStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 3309, 1, 3, 37, 2, 1, 3), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: urlFilteringIPTableStatus.setStatus('current')
urlFilteringDNSTable = MibTable((1, 3, 6, 1, 4, 1, 3309, 1, 3, 37, 3), )
if mibBuilder.loadTexts: urlFilteringDNSTable.setStatus('current')
urlFilteringDNSTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3309, 1, 3, 37, 3, 1), ).setIndexNames((0, "NOMADIX-MIB", "urlFilteringDNSTableIndex"))
if mibBuilder.loadTexts: urlFilteringDNSTableEntry.setStatus('current')
urlFilteringDNSTableIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3309, 1, 3, 37, 3, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: urlFilteringDNSTableIndex.setStatus('current')
urlFilteringDNSTableName = MibTableColumn((1, 3, 6, 1, 4, 1, 3309, 1, 3, 37, 3, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 237))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: urlFilteringDNSTableName.setStatus('current')
urlFilteringDNSTableStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 3309, 1, 3, 37, 3, 1, 3), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: urlFilteringDNSTableStatus.setStatus('current')
macFilteringOn = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 41, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: macFilteringOn.setStatus('current')
macFilteringTable = MibTable((1, 3, 6, 1, 4, 1, 3309, 1, 3, 41, 4), )
if mibBuilder.loadTexts: macFilteringTable.setStatus('current')
macFilteringTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3309, 1, 3, 41, 4, 1), ).setIndexNames((0, "NOMADIX-MIB", "macFilteringTableIndex"))
if mibBuilder.loadTexts: macFilteringTableEntry.setStatus('current')
macFilteringTableIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3309, 1, 3, 41, 4, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: macFilteringTableIndex.setStatus('current')
macFilteringTableAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 3309, 1, 3, 41, 4, 1, 2), MacAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: macFilteringTableAddress.setStatus('current')
macFilteringStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 3309, 1, 3, 41, 4, 1, 3), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: macFilteringStatus.setStatus('current')
tunnelingOn = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 42, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tunnelingOn.setStatus('current')
wirelessSsid = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 43, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wirelessSsid.setStatus('current')
wirelessSsidBroadcastOn = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 43, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wirelessSsidBroadcastOn.setStatus('current')
wirelessChannel = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 43, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 14), ValueRangeConstraint(36, 36), ValueRangeConstraint(40, 40), ValueRangeConstraint(44, 44), ValueRangeConstraint(48, 48), ValueRangeConstraint(52, 52), ValueRangeConstraint(56, 56), ValueRangeConstraint(60, 60), ValueRangeConstraint(64, 64), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wirelessChannel.setStatus('current')
wirelessRate = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 43, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12))).clone(namedValues=NamedValues(("auto", 0), ("rate-1Mbits", 1), ("rate-2Mbits", 2), ("rate-5andhalfMbits", 3), ("rate-6Mbits", 4), ("rate-9Mbits", 5), ("rate-11Mbits", 6), ("rate-12Mbits", 7), ("rate-18Mbits", 8), ("rate-24Mbits", 9), ("rate-36Mbits", 10), ("rate-48Mbits", 11), ("rate-54Mbits", 12)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wirelessRate.setStatus('current')
wirelessPower = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 43, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("full", 0), ("half", 1), ("quarter", 2), ("eighth", 3), ("min", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wirelessPower.setStatus('current')
wirelessFragLength = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 43, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(256, 2346))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wirelessFragLength.setStatus('current')
wirelessRtsLength = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 43, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(256, 2346))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wirelessRtsLength.setStatus('current')
wirelessBeaconInterval = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 43, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(20, 1000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wirelessBeaconInterval.setStatus('current')
wirelessDtim = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 43, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wirelessDtim.setStatus('current')
wirelessShortPreambleOn = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 43, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wirelessShortPreambleOn.setStatus('current')
wirelessMssid = MibIdentifier((1, 3, 6, 1, 4, 1, 3309, 1, 3, 43, 11))
wirelessMssidVlanOn = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 43, 11, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wirelessMssidVlanOn.setStatus('current')
wirelessMssidVlanDefaultOn = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 43, 11, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wirelessMssidVlanDefaultOn.setStatus('current')
wirelessMssidVlanDefaultTag = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 43, 11, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4094))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wirelessMssidVlanDefaultTag.setStatus('current')
wirelessMssidTable = MibTable((1, 3, 6, 1, 4, 1, 3309, 1, 3, 43, 11, 4), )
if mibBuilder.loadTexts: wirelessMssidTable.setStatus('current')
wirelessMssidTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3309, 1, 3, 43, 11, 4, 1), ).setIndexNames((0, "NOMADIX-MIB", "mssidIndex"))
if mibBuilder.loadTexts: wirelessMssidTableEntry.setStatus('current')
mssidIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3309, 1, 3, 43, 11, 4, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mssidIndex.setStatus('current')
mssidName = MibTableColumn((1, 3, 6, 1, 4, 1, 3309, 1, 3, 43, 11, 4, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mssidName.setStatus('current')
mssidVlan = MibTableColumn((1, 3, 6, 1, 4, 1, 3309, 1, 3, 43, 11, 4, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4094))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mssidVlan.setStatus('current')
mssidStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 3309, 1, 3, 43, 11, 4, 1, 4), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mssidStatus.setStatus('current')
wirelessWep = MibIdentifier((1, 3, 6, 1, 4, 1, 3309, 1, 3, 43, 12))
wirelessWepOn = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 43, 12, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wirelessWepOn.setStatus('current')
wirelessWepClients = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 43, 12, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(6, 21))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wirelessWepClients.setStatus('current')
wirelessWepAuthType = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 43, 12, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("open", 0), ("shared", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wirelessWepAuthType.setStatus('current')
wirelessWepNon1xAllowedOn = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 43, 12, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wirelessWepNon1xAllowedOn.setStatus('current')
wirelessWepKeyType = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 43, 12, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("hex", 0), ("ascii", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wirelessWepKeyType.setStatus('current')
wirelessWepDefaultKey = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 43, 12, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("key-1", 1), ("key-2", 2), ("key-3", 3), ("key-4", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wirelessWepDefaultKey.setStatus('current')
wirelessWepKey1 = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 43, 12, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wirelessWepKey1.setStatus('current')
wirelessWepKey2 = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 43, 12, 9), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wirelessWepKey2.setStatus('current')
wirelessWepKey3 = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 43, 12, 10), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wirelessWepKey3.setStatus('current')
wirelessWepKey4 = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 43, 12, 11), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wirelessWepKey4.setStatus('current')
failedLogin = NotificationType((1, 3, 6, 1, 4, 1, 3309, 1, 3, 0, 8))
if mibBuilder.loadTexts: failedLogin.setStatus('current')
subCapacityReached = NotificationType((1, 3, 6, 1, 4, 1, 3309, 1, 3, 0, 9))
if mibBuilder.loadTexts: subCapacityReached.setStatus('current')
nseReboot = NotificationType((1, 3, 6, 1, 4, 1, 3309, 1, 3, 0, 10))
if mibBuilder.loadTexts: nseReboot.setStatus('current')
nseRadCapacityReached = NotificationType((1, 3, 6, 1, 4, 1, 3309, 1, 3, 0, 15))
if mibBuilder.loadTexts: nseRadCapacityReached.setStatus('current')
pppoeSvcName = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 44, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pppoeSvcName.setStatus('current')
pppEchoReqIntvl = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 44, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pppEchoReqIntvl.setStatus('current')
pppEchoMaxNonresp = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 44, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pppEchoMaxNonresp.setStatus('current')
pppAuthUsername = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 44, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pppAuthUsername.setStatus('current')
pppAuthPassword = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 44, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pppAuthPassword.setStatus('current')
pppIpCfgMode = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 44, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("dynamic", 0), ("static", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pppIpCfgMode.setStatus('current')
pppStaticIpAddr = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 44, 7), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pppStaticIpAddr.setStatus('current')
pppMaxTcpMss = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 44, 8), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pppMaxTcpMss.setStatus('current')
localWebPages = MibIdentifier((1, 3, 6, 1, 4, 1, 3309, 1, 3, 52, 4))
localWebImages = MibIdentifier((1, 3, 6, 1, 4, 1, 3309, 1, 3, 52, 8))
localWebPagesTable = MibTable((1, 3, 6, 1, 4, 1, 3309, 1, 3, 52, 4, 1), )
if mibBuilder.loadTexts: localWebPagesTable.setStatus('current')
localWebPagesTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3309, 1, 3, 52, 4, 1, 1), ).setIndexNames((0, "NOMADIX-MIB", "localWebPagesTableIndex"))
if mibBuilder.loadTexts: localWebPagesTableEntry.setStatus('current')
localWebPagesTableIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3309, 1, 3, 52, 4, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: localWebPagesTableIndex.setStatus('current')
localWebPagesTableName = MibTableColumn((1, 3, 6, 1, 4, 1, 3309, 1, 3, 52, 4, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 237))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: localWebPagesTableName.setStatus('current')
localWebPagesTableStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 3309, 1, 3, 52, 4, 1, 1, 3), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: localWebPagesTableStatus.setStatus('current')
localWebImagesTable = MibTable((1, 3, 6, 1, 4, 1, 3309, 1, 3, 52, 8, 1), )
if mibBuilder.loadTexts: localWebImagesTable.setStatus('current')
localWebImagesTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3309, 1, 3, 52, 8, 1, 1), ).setIndexNames((0, "NOMADIX-MIB", "localWebImagesTableIndex"))
if mibBuilder.loadTexts: localWebImagesTableEntry.setStatus('current')
localWebImagesTableIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3309, 1, 3, 52, 8, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: localWebImagesTableIndex.setStatus('current')
localWebImagesTableName = MibTableColumn((1, 3, 6, 1, 4, 1, 3309, 1, 3, 52, 8, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 237))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: localWebImagesTableName.setStatus('current')
localWebImagesTableStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 3309, 1, 3, 52, 8, 1, 1, 3), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: localWebImagesTableStatus.setStatus('current')
ipsecVpnOn = MibScalar((1, 3, 6, 1, 4, 1, 3309, 1, 3, 54, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipsecVpnOn.setStatus('current')
ipsecPeers = MibIdentifier((1, 3, 6, 1, 4, 1, 3309, 1, 3, 54, 4))
ipsecPolicies = MibIdentifier((1, 3, 6, 1, 4, 1, 3309, 1, 3, 54, 5))
ipsecSaStatus = MibIdentifier((1, 3, 6, 1, 4, 1, 3309, 1, 3, 54, 6))
ipsecPeerTable = MibTable((1, 3, 6, 1, 4, 1, 3309, 1, 3, 54, 4, 1), )
if mibBuilder.loadTexts: ipsecPeerTable.setStatus('current')
ipsecPeerTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3309, 1, 3, 54, 4, 1, 1), ).setIndexNames((0, "NOMADIX-MIB", "ipsecPeerIndex"))
if mibBuilder.loadTexts: ipsecPeerTableEntry.setStatus('current')
ipsecPeerIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3309, 1, 3, 54, 4, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsecPeerIndex.setStatus('current')
ipsecPeerIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 3309, 1, 3, 54, 4, 1, 1, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipsecPeerIpAddr.setStatus('current')
ipsecPeerAuthMethod = MibTableColumn((1, 3, 6, 1, 4, 1, 3309, 1, 3, 54, 4, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("preSharedKey", 0), ("x509Certificate", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipsecPeerAuthMethod.setStatus('current')
ipsecPeerSharedKey = MibTableColumn((1, 3, 6, 1, 4, 1, 3309, 1, 3, 54, 4, 1, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 128))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipsecPeerSharedKey.setStatus('current')
ipsecPeerPrivkeyFile = MibTableColumn((1, 3, 6, 1, 4, 1, 3309, 1, 3, 54, 4, 1, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 20))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipsecPeerPrivkeyFile.setStatus('current')
ipsecPeerCertFile = MibTableColumn((1, 3, 6, 1, 4, 1, 3309, 1, 3, 54, 4, 1, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 20))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipsecPeerCertFile.setStatus('current')
ipsecPeerEncDesOk = MibTableColumn((1, 3, 6, 1, 4, 1, 3309, 1, 3, 54, 4, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("notAllowed", 0), ("allowed", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipsecPeerEncDesOk.setStatus('current')
ipsecPeerEnc3DesOk = MibTableColumn((1, 3, 6, 1, 4, 1, 3309, 1, 3, 54, 4, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("notAllowed", 0), ("allowed", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipsecPeerEnc3DesOk.setStatus('current')
ipsecPeerHashMd5Ok = MibTableColumn((1, 3, 6, 1, 4, 1, 3309, 1, 3, 54, 4, 1, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("notAllowed", 0), ("allowed", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipsecPeerHashMd5Ok.setStatus('current')
ipsecPeerHashShaOk = MibTableColumn((1, 3, 6, 1, 4, 1, 3309, 1, 3, 54, 4, 1, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("notAllowed", 0), ("allowed", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipsecPeerHashShaOk.setStatus('current')
ipsecPeerKeyStrength = MibTableColumn((1, 3, 6, 1, 4, 1, 3309, 1, 3, 54, 4, 1, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("key768-bit", 0), ("key1024-bit", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipsecPeerKeyStrength.setStatus('current')
ipsecPeerLifetime = MibTableColumn((1, 3, 6, 1, 4, 1, 3309, 1, 3, 54, 4, 1, 1, 12), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipsecPeerLifetime.setStatus('current')
ipsecPeerStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 3309, 1, 3, 54, 4, 1, 1, 20), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipsecPeerStatus.setStatus('current')
ipsecPolicyTable = MibTable((1, 3, 6, 1, 4, 1, 3309, 1, 3, 54, 5, 1), )
if mibBuilder.loadTexts: ipsecPolicyTable.setStatus('current')
ipsecPolicyTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3309, 1, 3, 54, 5, 1, 1), ).setIndexNames((0, "NOMADIX-MIB", "ipsecPolicyIndex"))
if mibBuilder.loadTexts: ipsecPolicyTableEntry.setStatus('current')
ipsecPolicyIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3309, 1, 3, 54, 5, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsecPolicyIndex.setStatus('current')
ipsecPolicyPeerIp = MibTableColumn((1, 3, 6, 1, 4, 1, 3309, 1, 3, 54, 5, 1, 1, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipsecPolicyPeerIp.setStatus('current')
ipsecPolicyProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 3309, 1, 3, 54, 5, 1, 1, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipsecPolicyProtocol.setStatus('current')
ipsecPolicyRemIp = MibTableColumn((1, 3, 6, 1, 4, 1, 3309, 1, 3, 54, 5, 1, 1, 4), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipsecPolicyRemIp.setStatus('current')
ipsecPolicyRemSubnet = MibTableColumn((1, 3, 6, 1, 4, 1, 3309, 1, 3, 54, 5, 1, 1, 5), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipsecPolicyRemSubnet.setStatus('current')
ipsecPolicyRemPort = MibTableColumn((1, 3, 6, 1, 4, 1, 3309, 1, 3, 54, 5, 1, 1, 6), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipsecPolicyRemPort.setStatus('current')
ipsecPolicyUseNetIp = MibTableColumn((1, 3, 6, 1, 4, 1, 3309, 1, 3, 54, 5, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipsecPolicyUseNetIp.setStatus('current')
ipsecPolicyLocIp = MibTableColumn((1, 3, 6, 1, 4, 1, 3309, 1, 3, 54, 5, 1, 1, 8), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipsecPolicyLocIp.setStatus('current')
ipsecPolicyLocSubnet = MibTableColumn((1, 3, 6, 1, 4, 1, 3309, 1, 3, 54, 5, 1, 1, 9), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipsecPolicyLocSubnet.setStatus('current')
ipsecPolicyLocPort = MibTableColumn((1, 3, 6, 1, 4, 1, 3309, 1, 3, 54, 5, 1, 1, 10), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipsecPolicyLocPort.setStatus('current')
ipsecPolicyType = MibTableColumn((1, 3, 6, 1, 4, 1, 3309, 1, 3, 54, 5, 1, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("discard", 0), ("bypass", 1), ("esp", 2), ("ah", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipsecPolicyType.setStatus('current')
ipsecPolicyDirType = MibTableColumn((1, 3, 6, 1, 4, 1, 3309, 1, 3, 54, 5, 1, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("inOnly", 0), ("outOnly", 1), ("inAndOut", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipsecPolicyDirType.setStatus('current')
ipsecPolicyEncDesOk = MibTableColumn((1, 3, 6, 1, 4, 1, 3309, 1, 3, 54, 5, 1, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("notAllowed", 0), ("allowed", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipsecPolicyEncDesOk.setStatus('current')
ipsecPolicyEnc3desOk = MibTableColumn((1, 3, 6, 1, 4, 1, 3309, 1, 3, 54, 5, 1, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("notAllowed", 0), ("allowed", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipsecPolicyEnc3desOk.setStatus('current')
ipsecPolicyEncNullOk = MibTableColumn((1, 3, 6, 1, 4, 1, 3309, 1, 3, 54, 5, 1, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("notAllowed", 0), ("allowed", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipsecPolicyEncNullOk.setStatus('current')
ipsecPolicyAuthMd5Ok = MibTableColumn((1, 3, 6, 1, 4, 1, 3309, 1, 3, 54, 5, 1, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("notAllowed", 0), ("allowed", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipsecPolicyAuthMd5Ok.setStatus('current')
ipsecPolicyAuthShaOk = MibTableColumn((1, 3, 6, 1, 4, 1, 3309, 1, 3, 54, 5, 1, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("notAllowed", 0), ("allowed", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipsecPolicyAuthShaOk.setStatus('current')
ipsecPolicyAuthNullOk = MibTableColumn((1, 3, 6, 1, 4, 1, 3309, 1, 3, 54, 5, 1, 1, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("notAllowed", 0), ("allowed", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipsecPolicyAuthNullOk.setStatus('current')
ipsecPolicyPfsStrength = MibTableColumn((1, 3, 6, 1, 4, 1, 3309, 1, 3, 54, 5, 1, 1, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("pfsNone", 0), ("pfs768", 1), ("pfs1024", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipsecPolicyPfsStrength.setStatus('current')
ipsecPolicyMaxLifetime = MibTableColumn((1, 3, 6, 1, 4, 1, 3309, 1, 3, 54, 5, 1, 1, 20), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipsecPolicyMaxLifetime.setStatus('current')
ipsecPolicyMaxLifesize = MibTableColumn((1, 3, 6, 1, 4, 1, 3309, 1, 3, 54, 5, 1, 1, 21), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipsecPolicyMaxLifesize.setStatus('current')
ipsecPolicyAutoRenew = MibTableColumn((1, 3, 6, 1, 4, 1, 3309, 1, 3, 54, 5, 1, 1, 22), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipsecPolicyAutoRenew.setStatus('current')
ipsecPolicyStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 3309, 1, 3, 54, 5, 1, 1, 40), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipsecPolicyStatus.setStatus('current')
ipsecSaStatusTable = MibTable((1, 3, 6, 1, 4, 1, 3309, 1, 3, 54, 6, 1), )
if mibBuilder.loadTexts: ipsecSaStatusTable.setStatus('current')
ipsecSaStatusTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3309, 1, 3, 54, 6, 1, 1), ).setIndexNames((0, "NOMADIX-MIB", "ipsecSaStatusIndex"))
if mibBuilder.loadTexts: ipsecSaStatusTableEntry.setStatus('current')
ipsecSaStatusIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3309, 1, 3, 54, 6, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsecSaStatusIndex.setStatus('current')
ipsecSaStatusState = MibTableColumn((1, 3, 6, 1, 4, 1, 3309, 1, 3, 54, 6, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("ipsecUp", 0), ("ipsecDisabled", 1), ("notConfiguredInStack", 2), ("noIkeChannelToPeer", 3), ("notNegotiatedWithPeer", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsecSaStatusState.setStatus('current')
ipsecSaStatusStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 3309, 1, 3, 54, 6, 1, 1, 20), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipsecSaStatusStatus.setStatus('current')
mibBuilder.exportSymbols("NOMADIX-MIB", systemStaticPortMappingStatus=systemStaticPortMappingStatus, tunnelProfileTableEntry=tunnelProfileTableEntry, aaaBilloptMinTimeUnitMinute=aaaBilloptMinTimeUnitMinute, aaaBillingPlanValidityRateShow5=aaaBillingPlanValidityRateShow5, iccButtonName3=iccButtonName3, aaaBillingPlanRateShow3=aaaBillingPlanRateShow3, aaaBillingPlan1=aaaBillingPlan1, aaaLpfStatusTableEntry=aaaLpfStatusTableEntry, iccBannerImgName3=iccBannerImgName3, inatIpTable=inatIpTable, locationCountry=locationCountry, lkModelNo=lkModelNo, systemHistoryLogin=systemHistoryLogin, localWebImagesTableStatus=localWebImagesTableStatus, setCommunity=setCommunity, aaaRadiusNasIdOn=aaaRadiusNasIdOn, aaaBillingPlanValidity2=aaaBillingPlanValidity2, iccBannerStopTime3=iccBannerStopTime3, iccBannerName3=iccBannerName3, radProxyLocalServcomPort=radProxyLocalServcomPort, macFilteringTableIndex=macFilteringTableIndex, ipsecPeerHashShaOk=ipsecPeerHashShaOk, dhcp=dhcp, subnetTableEntry=subnetTableEntry, brmRetransDelay=brmRetransDelay, bandwidthManagementOn=bandwidthManagementOn, aaaSubGPByteReceivedOn=aaaSubGPByteReceivedOn, aaaBillingPlanBandwidthDown4=aaaBillingPlanBandwidthDown4, subIdleTimeout=subIdleTimeout, iccButtonURL3=iccButtonURL3, aaaBillingPlanDesc4=aaaBillingPlanDesc4, iccButtonImgName4=iccButtonImgName4, pptpidOn=pptpidOn, serviceProfileTable=serviceProfileTable, systemAdminConcurrencyOn=systemAdminConcurrencyOn, aaaBilloptMaxTimeUnitMonth=aaaBilloptMaxTimeUnitMonth, poolIndex=poolIndex, urlFilteringDNSTableName=urlFilteringDNSTableName, iccBannerURL3=iccBannerURL3, icc=icc, radAcctSrv2Ip=radAcctSrv2Ip, serverIp=serverIp, passthroughAddIndex=passthroughAddIndex, dnsSecondaryServer=dnsSecondaryServer, aaaBillingPlanCost4=aaaBillingPlanCost4, aaaSecretKey=aaaSecretKey, aaaBillingPlanValidity5=aaaBillingPlanValidity5, aaaSubGoodbyePage=aaaSubGoodbyePage, locationGateway=locationGateway, aaaBillingPlanBandwidthDown1=aaaBillingPlanBandwidthDown1, portLocTable=portLocTable, realmEntryActive=realmEntryActive, urlFilteringIPTableIndex=urlFilteringIPTableIndex, aaaBillingPlanDesc0=aaaBillingPlanDesc0, aaaBillingPlanLabel2=aaaBillingPlanLabel2, realmName=realmName, iccButtonURL8=iccButtonURL8, lpfEntryOnlineStatus=lpfEntryOnlineStatus, urlFilteringDNSTableEntry=urlFilteringDNSTableEntry, nasAcctSec=nasAcctSec, aaaBillingPlanRateShow1=aaaBillingPlanRateShow1, iccButtonName8=iccButtonName8, aaaBillingPlanPricingMin5=aaaBillingPlanPricingMin5, aaaWebRememberMeOn=aaaWebRememberMeOn, aaaCreditCardIp=aaaCreditCardIp, brmServerPortSecondary=brmServerPortSecondary, aaaCreditCardOn=aaaCreditCardOn, aaaReloginOn=aaaReloginOn, aaaBilloptMinTimeUnitHour=aaaBilloptMinTimeUnitHour, aaaBillingPlanPricingWeek3=aaaBillingPlanPricingWeek3, aaaErrorNotAvailable=aaaErrorNotAvailable, brmRetransMethod=brmRetransMethod, subBytesSent=subBytesSent, systemHistoryTableEntry=systemHistoryTableEntry, aaaErrorWeAreSorry=aaaErrorWeAreSorry, iccTitle=iccTitle, iccButtonName5=iccButtonName5, urlFilteringIPTableAddress=urlFilteringIPTableAddress, timeOffsetHours=timeOffsetHours, iccButtonName9=iccButtonName9, system=system, iccButtonURL5=iccButtonURL5, locationSiteName=locationSiteName, aaaBillingPlanPricingWeek2=aaaBillingPlanPricingWeek2, iccBannerDuration3=iccBannerDuration3, aaaRadiusNetVlanOn=aaaRadiusNetVlanOn, dnsPrimaryServer=dnsPrimaryServer, hprRedirectionFrequency=hprRedirectionFrequency, iccOn=iccOn, aaaBillingPlanValidity3=aaaBillingPlanValidity3, aaaPrintBillingCommandOn=aaaPrintBillingCommandOn, subExpiration=subExpiration, authSubAmtPaid=authSubAmtPaid, inatStartAddress=inatStartAddress, brmServerCCPortTwo=brmServerCCPortTwo, timeServerTimeout=timeServerTimeout, sessionLimitEnable=sessionLimitEnable, iccBannerImgName2=iccBannerImgName2, ipsecPolicyAuthShaOk=ipsecPolicyAuthShaOk, realmTunLocHostName=realmTunLocHostName, aaaRadiusForgotPasswordUrlOn=aaaRadiusForgotPasswordUrlOn, locationCity=locationCity, ipsecPeerHashMd5Ok=ipsecPeerHashMd5Ok, iccBannerStartTime1=iccBannerStartTime1, wirelessMssidTable=wirelessMssidTable, aaaBillingPlanDuration0=aaaBillingPlanDuration0, aaaBillingPlanXoverY1=aaaBillingPlanXoverY1, nomadix=nomadix, brmServerCCUrlThree=brmServerCCUrlThree, pppIpCfgMode=pppIpCfgMode, radHistSyslogServerIp=radHistSyslogServerIp, lkFeatureName=lkFeatureName, timeOffsetSign=timeOffsetSign, pppEchoReqIntvl=pppEchoReqIntvl, portLocCommunity=portLocCommunity, ipsecPolicyProtocol=ipsecPolicyProtocol, iccBannerStartTime2=iccBannerStartTime2, iccBannerURL1=iccBannerURL1, snmpdOn=snmpdOn, wirelessWepDefaultKey=wirelessWepDefaultKey, ipsecPolicyLocIp=ipsecPolicyLocIp, wirelessPower=wirelessPower, ipsecPolicyIndex=ipsecPolicyIndex, aaaBillingPlanRateShow2=aaaBillingPlanRateShow2, brmServerCCPortThree=brmServerCCPortThree, authSubStatus=authSubStatus, mask=mask, systemLogServerIp=systemLogServerIp, systemBridgeMode=systemBridgeMode, aaaSubGPHyperlink=aaaSubGPHyperlink, hprOn=hprOn, location=location, localWebPagesTableEntry=localWebPagesTableEntry, aaaSubGPIPAddressOn=aaaSubGPIPAddressOn, ipsecPolicyRemPort=ipsecPolicyRemPort, wirelessWepKey2=wirelessWepKey2, aaaWebContactMsg=aaaWebContactMsg, inatEndAddress=inatEndAddress, aaaBillingPlanOn0=aaaBillingPlanOn0, aaaSubCurrTable=aaaSubCurrTable, aaaNewSubscriberOn=aaaNewSubscriberOn, datSubMac=datSubMac, wirelessMssid=wirelessMssid, aaaAuthSubTable=aaaAuthSubTable, radHistSyslogNumber=radHistSyslogNumber, datTimeout=datTimeout, timeServer2=timeServer2, aaaBillingPlanAssigned3=aaaBillingPlanAssigned3, iccButton8=iccButton8, localWeb=localWeb, profName=profName, aaaBilloptMinTimeUnitWeek=aaaBilloptMinTimeUnitWeek, systemNseId=systemNseId, pppAuthUsername=pppAuthUsername, brmPropertyId=brmPropertyId, ipsecPolicyLocPort=ipsecPolicyLocPort, aaaLoginPageFailoverOn=aaaLoginPageFailoverOn, aaaErrorUserIdTaken=aaaErrorUserIdTaken, authSubExpTimeMins=authSubExpTimeMins, getCommunity=getCommunity, authSubDevicePort=authSubDevicePort, aaaMessageChooseUsername=aaaMessageChooseUsername, aaaBilloptMinTimeUnitMonth=aaaBilloptMinTimeUnitMonth, aaaBillingPlanPricingWeek1=aaaBillingPlanPricingWeek1, aaaWebItemFont=aaaWebItemFont, datNetPort=datNetPort, passthroughNameIndex=passthroughNameIndex, radRetrAttempts=radRetrAttempts, blockIcmpFromPending=blockIcmpFromPending, profStatus=profStatus, aaaErrorTooManyUsers=aaaErrorTooManyUsers, passthroughOn=passthroughOn, portLocLocation=portLocLocation, aaaBillingPlanPricingHour1=aaaBillingPlanPricingHour1, dhcpRelayEnable=dhcpRelayEnable, aaaBillingPlanBandwidthUp0=aaaBillingPlanBandwidthUp0, aaaBillingPlanCost2=aaaBillingPlanCost2, iccBannerStopTime5=iccBannerStopTime5, aaaWebJavascriptOn=aaaWebJavascriptOn, systemHistoryMessage=systemHistoryMessage, aaaErrorMinMaxValues=aaaErrorMinMaxValues, iccBannerDuration4=iccBannerDuration4, aaaBillingPlanValidityRateShow2=aaaBillingPlanValidityRateShow2, lkFeatureStatus=lkFeatureStatus, failedLogin=failedLogin, systemLocation=systemLocation, sessionLimitMeanRate=sessionLimitMeanRate, aaaPortalParameterPassing=aaaPortalParameterPassing, licenseKeys=licenseKeys, iccISPLogoButtonName=iccISPLogoButtonName, dnsTertiaryServer=dnsTertiaryServer, smtpRedirect=smtpRedirect, macFilteringStatus=macFilteringStatus, aaaPartnerImageOn=aaaPartnerImageOn, brmServerCCIpThree=brmServerCCIpThree, pppEchoMaxNonresp=pppEchoMaxNonresp, aaaCreditCardServerTypeSelection=aaaCreditCardServerTypeSelection, pppStaticIpAddr=pppStaticIpAddr, poolStopIp=poolStopIp, locationAddress2=locationAddress2, urlFilteringOn=urlFilteringOn, dynDnsForceUpdate=dynDnsForceUpdate, statusDNS=statusDNS, aaaExternalIPAddress=aaaExternalIPAddress, iccBannerName2=iccBannerName2, aaaXmlSender2Ip=aaaXmlSender2Ip, wirelessSsid=wirelessSsid, inat=inat, aaaBillingPlanDHCPPool5=aaaBillingPlanDHCPPool5, aaaBillingPlanAssigned0=aaaBillingPlanAssigned0, radProxyUpstreamNasTableEntry=radProxyUpstreamNasTableEntry, aaa=aaa, dhcpPoolTableEntry=dhcpPoolTableEntry, dhcpRelay=dhcpRelay, aaaRadiusRedUrlOn=aaaRadiusRedUrlOn, ipsecVpnOn=ipsecVpnOn, iccISPLogoButton=iccISPLogoButton, iccButtonURL2=iccButtonURL2, aaaBillingPlanLabel1=aaaBillingPlanLabel1, leaseAddress=leaseAddress, iccLogoutOption=iccLogoutOption, dhcpIpUpsell=dhcpIpUpsell, locationNetmask=locationNetmask, aaaRadiusNasId=aaaRadiusNasId, ipsecPeerIndex=ipsecPeerIndex, aaaRadiusNetVlanDefaultOn=aaaRadiusNetVlanDefaultOn, passthroughIPTable=passthroughIPTable, brmServerCCSecretTwo=brmServerCCSecretTwo, aaaBillingPlanBandwidthUp1=aaaBillingPlanBandwidthUp1, dat=dat, portLocInRoomPortMappingOn=portLocInRoomPortMappingOn, wirelessWepKeyType=wirelessWepKeyType, authSubUser1=authSubUser1, systemReportLoggingOn=systemReportLoggingOn, wirelessMssidVlanDefaultTag=wirelessMssidVlanDefaultTag, aaaWebServiceMsg=aaaWebServiceMsg, ipsecPeerTable=ipsecPeerTable, aaaBillingPlanOn3=aaaBillingPlanOn3, aaaBillingPlanPricingMonth3=aaaBillingPlanPricingMonth3, aaaBillingPlanPricingHour3=aaaBillingPlanPricingHour3, aaaMessageChoosePasswd1=aaaMessageChoosePasswd1, aaaWebImage=aaaWebImage, systemHistoryIndex=systemHistoryIndex, aaaBillingPlanValidityRateShow4=aaaBillingPlanValidityRateShow4, aaaSubGPSessionSummaryLabel=aaaSubGPSessionSummaryLabel, blockWebAccessOn=blockWebAccessOn, aaaBillingOption=aaaBillingOption, localWebPagesTable=localWebPagesTable, iccBanner2=iccBanner2, systemLogFilter=systemLogFilter, rBroutes=rBroutes, aaaRadius=aaaRadius, aaaBillingPlanOn4=aaaBillingPlanOn4, accessControlIpEntry=accessControlIpEntry)
mibBuilder.exportSymbols("NOMADIX-MIB", aaaSubGPSubIPAddressLabel=aaaSubGPSubIPAddressLabel, systemStaticPortMappingExternalIP=systemStaticPortMappingExternalIP, iccBannerName4=iccBannerName4, systemSyslogTableEntry=systemSyslogTableEntry, iccButtonName6=iccButtonName6, ipsecPolicyAutoRenew=ipsecPolicyAutoRenew, systemStaticPortMappingMAC=systemStaticPortMappingMAC, lpfEntryIndex=lpfEntryIndex, hprUrl=hprUrl, radAuthSrv2Sec=radAuthSrv2Sec, aaaMessageThankYou=aaaMessageThankYou, snmpagent=snmpagent, iccButtonImgName7=iccButtonImgName7, iccBannerName5=iccBannerName5, tunnelingOn=tunnelingOn, aaaRadiusLocalAuthPort=aaaRadiusLocalAuthPort, localWebImagesTable=localWebImagesTable, aaaBilloptMaxTimeUnitDay=aaaBilloptMaxTimeUnitDay, iccBannerStartTime5=iccBannerStartTime5, localWebImages=localWebImages, products=products, aaaMessageOldUserLogin=aaaMessageOldUserLogin, aaaBillingPlanValidity1=aaaBillingPlanValidity1, dynDnsServer=dynDnsServer, aaaRadiusTerminationActionOn=aaaRadiusTerminationActionOn, iccButton7=iccButton7, systemReportLogServerIp=systemReportLogServerIp, aaaOn=aaaOn, greTunneling=greTunneling, pppMaxTcpMss=pppMaxTcpMss, iccBannerDuration2=iccBannerDuration2, brmServerIpPrimary=brmServerIpPrimary, billRecMirror=billRecMirror, aaaBillingPlanPricingMonth5=aaaBillingPlanPricingMonth5, aaaMessageYourHotel=aaaMessageYourHotel, subBytesTotal=subBytesTotal, portLocDescription=portLocDescription, wirelessDtim=wirelessDtim, mssidIndex=mssidIndex, greInterfaceNetmask=greInterfaceNetmask, locationAddress1=locationAddress1, aaaRadiusLocalAcctPort=aaaRadiusLocalAcctPort, aaaBillingPlanPricingWeek4=aaaBillingPlanPricingWeek4, subCapacityReached=subCapacityReached, ipsecPolicyMaxLifetime=ipsecPolicyMaxLifetime, aaaDot1xOn=aaaDot1xOn, aaaBillingPlan2=aaaBillingPlan2, iccBannerImgName1=iccBannerImgName1, dhcpRelayAgentIP=dhcpRelayAgentIP, iccCharSetOption=iccCharSetOption, aaaBillingPlanRateShow5=aaaBillingPlanRateShow5, aaaRadiusNetVlanDefaultTag=aaaRadiusNetVlanDefaultTag, realmBasedRoutingTable=realmBasedRoutingTable, ipsecSaStatusIndex=ipsecSaStatusIndex, wirelessMssidVlanDefaultOn=wirelessMssidVlanDefaultOn, nasAuthSec=nasAuthSec, aaaErrorYourAccount=aaaErrorYourAccount, locationCompanyName=locationCompanyName, brmServerPortPrimary=brmServerPortPrimary, radProxyAcctHistLog=radProxyAcctHistLog, sessionlimit=sessionlimit, aaaTaxRate=aaaTaxRate, subnetIndex=subnetIndex, radAcctSrv1Ip=radAcctSrv1Ip, datSessionTableEntry=datSessionTableEntry, aaaXmlSender1Ip=aaaXmlSender1Ip, wirelessMssidVlanOn=wirelessMssidVlanOn, ipsecPolicyEncDesOk=ipsecPolicyEncDesOk, aaaBillingPlanOn5=aaaBillingPlanOn5, wirelessWepClients=wirelessWepClients, ipsecPolicyRemSubnet=ipsecPolicyRemSubnet, accessControlOn=accessControlOn, aaaBillingPlanBandwidthDown2=aaaBillingPlanBandwidthDown2, brmServerCCSecretOne=brmServerCCSecretOne, ipsecPeerAuthMethod=ipsecPeerAuthMethod, aaaBillingPlanCost1=aaaBillingPlanCost1, subnets=subnets, poolStatus=poolStatus, timeCurrentDateAndTime=timeCurrentDateAndTime, ipsecSaStatusState=ipsecSaStatusState, brmServerSecretPrimary=brmServerSecretPrimary, PYSNMP_MODULE_ID=nomadix, iccButtonName2=iccButtonName2, aaaBillingPlanCost3=aaaBillingPlanCost3, mssidVlan=mssidVlan, acIndex=acIndex, ipsecPolicyUseNetIp=ipsecPolicyUseNetIp, smtpPassword=smtpPassword, iccButton3=iccButton3, aaaWebExistingUserMsg=aaaWebExistingUserMsg, aaaBillingPlanAssigned5=aaaBillingPlanAssigned5, tunProfName=tunProfName, aaaSubscriber=aaaSubscriber, iccButtonName7=iccButtonName7, inatOn=inatOn, iccBannerStopTime2=iccBannerStopTime2, aaaMessageYourPurchase=aaaMessageYourPurchase, blockSSHShellAccessOn=blockSSHShellAccessOn, aaaBillingPlanPricingDay3=aaaBillingPlanPricingDay3, brmServerCCPortOne=brmServerCCPortOne, aaaBillingPlanPricingDay5=aaaBillingPlanPricingDay5, locationPhoneCountryCode=locationPhoneCountryCode, aaaMessagePurchaseOK2=aaaMessagePurchaseOK2, aaaBilloptPolicyMsg=aaaBilloptPolicyMsg, wirelessFragLength=wirelessFragLength, aaaSaveToFile=aaaSaveToFile, iccBanner5=iccBanner5, aaaRadiusFipOn=aaaRadiusFipOn, realmIndex=realmIndex, systemStaticPortMappingRemoteIP=systemStaticPortMappingRemoteIP, ipsecPeerKeyStrength=ipsecPeerKeyStrength, aaaErrorAccessPassword=aaaErrorAccessPassword, systemSyslogIndex=systemSyslogIndex, aaaBillingPlanPricingDay1=aaaBillingPlanPricingDay1, aaaBillingPlanOn1=aaaBillingPlanOn1, radRetrMethod=radRetrMethod, aaaBillingPlanCost0=aaaBillingPlanCost0, systemReboot=systemReboot, aaaBillingPlanDHCPPool3=aaaBillingPlanDHCPPool3, nasEntryActive=nasEntryActive, poolStartIp=poolStartIp, aaaBillingPlanValidityRateShow1=aaaBillingPlanValidityRateShow1, aaaUsernameOn=aaaUsernameOn, iccButtonImgName2=iccButtonImgName2, mssidName=mssidName, realmMatchType=realmMatchType, aaaBillingPlanPricingDay2=aaaBillingPlanPricingDay2, iccButton2=iccButton2, wirelessWepKey4=wirelessWepKey4, iccBannerStartTime3=iccBannerStartTime3, aaaBillingPlanPricingMin0=aaaBillingPlanPricingMin0, systemSyslogTable=systemSyslogTable, iccBanner1=iccBanner1, systemVersion=systemVersion, wirelessMssidTableEntry=wirelessMssidTableEntry, iccBannerURL4=iccBannerURL4, radAuthSrv2Port=radAuthSrv2Port, aaaLogServerIp=aaaLogServerIp, ipsecPeerPrivkeyFile=ipsecPeerPrivkeyFile, rBtunnelProfiles=rBtunnelProfiles, datDestIp=datDestIp, systemHistoryAddress=systemHistoryAddress, aaaBilloptMaxTimeUnitWeek=aaaBilloptMaxTimeUnitWeek, aaaBilloptMaxSubLifetime=aaaBilloptMaxSubLifetime, brmServerCCIpTwo=brmServerCCIpTwo, aaaBillingPlanPricingWeek5=aaaBillingPlanPricingWeek5, iccButtonImgName9=iccButtonImgName9, dhcpServerSubnetBased=dhcpServerSubnetBased, serviceProfileTableEntry=serviceProfileTableEntry, aaaRadiusNasIpOn=aaaRadiusNasIpOn, aaaSubGPStartTimeLabel=aaaSubGPStartTimeLabel, authSubPassword=authSubPassword, iccBanner3=iccBanner3, aaaWebTabBgcolor=aaaWebTabBgcolor, aaaBillingPlan0=aaaBillingPlan0, aaaMessageNewUserTerms=aaaMessageNewUserTerms, ipsecPolicyDirType=ipsecPolicyDirType, brmServerCCUrlTwo=brmServerCCUrlTwo, brmRetransAttempts=brmRetransAttempts, locationCallingAreaCode=locationCallingAreaCode, iccBannerName1=iccBannerName1, inatIpEntry=inatIpEntry, iccLanguageOption=iccLanguageOption, subSsid=subSsid, bwmDownWanLinkSpeed=bwmDownWanLinkSpeed, iccBanners=iccBanners, authSubBwDown=authSubBwDown, aaaAuthMode=aaaAuthMode, wirelessRtsLength=wirelessRtsLength, subName=subName, brmServerUrlPrimary=brmServerUrlPrimary, aaaMessageFreeInternet=aaaMessageFreeInternet, iccButtons=iccButtons, aaaSubGPHyperlinkOn=aaaSubGPHyperlinkOn, portLocConcentratorTable=portLocConcentratorTable, realmBasedRoutingTableEntry=realmBasedRoutingTableEntry, iccButtonURL6=iccButtonURL6, realmStrip=realmStrip, subnetStatus=subnetStatus, aaaBillingPlanPricingHour4=aaaBillingPlanPricingHour4, aaaBillingPlans=aaaBillingPlans, lkKey=lkKey, radHistSysloggingOn=radHistSysloggingOn, aaaBillingPlanRateShow0=aaaBillingPlanRateShow0, systemUptime=systemUptime, aaaErrorISPChallenge=aaaErrorISPChallenge, aaaCreditCardUrl=aaaCreditCardUrl, aaaBilloptOfferMsg=aaaBilloptOfferMsg, sessionLimitTimeInterval=sessionLimitTimeInterval, timeOffsetMinutes=timeOffsetMinutes, ipsecPeerIpAddr=ipsecPeerIpAddr, acStartAddress=acStartAddress, ipsecOn=ipsecOn, macFilteringTableEntry=macFilteringTableEntry, aaaBillingPlan3=aaaBillingPlan3, subIndex=subIndex, aaaPortalPageUrl=aaaPortalPageUrl, timeServer4=timeServer4, passthroughaddress=passthroughaddress, iccButtonImgName5=iccButtonImgName5, authSubDhcpAddrType=authSubDhcpAddrType, locationState=locationState, wirelessShortPreambleOn=wirelessShortPreambleOn, dhcpServerTable=dhcpServerTable, lkFeatureIndex=lkFeatureIndex, locationZip=locationZip, ipsecPeerStatus=ipsecPeerStatus, tunneling=tunneling, radAuthSrv1Port=radAuthSrv1Port, hpr=hpr, radAuthSrv2Ip=radAuthSrv2Ip, dhcpLeaseTable=dhcpLeaseTable, systemLogNumber=systemLogNumber, wirelessWepKey3=wirelessWepKey3, ipsecPeers=ipsecPeers, netMask=netMask, realmWildcard=realmWildcard, ipsecSaStatus=ipsecSaStatus, ipsecPolicyTable=ipsecPolicyTable, aaaBillingPlanLabel3=aaaBillingPlanLabel3, ipsecPolicyType=ipsecPolicyType, accessControlIpTable=accessControlIpTable, smtpServerDNS=smtpServerDNS, aaaBillingPlanPricingHour5=aaaBillingPlanPricingHour5, aaaErrorTryAgain=aaaErrorTryAgain, datSubIp=datSubIp, iccBannerImgName4=iccBannerImgName4, macFilteringOn=macFilteringOn, wirelessWepNon1xAllowedOn=wirelessWepNon1xAllowedOn, ipsecPolicyPeerIp=ipsecPolicyPeerIp, aaaBillingPlanDesc5=aaaBillingPlanDesc5, dns=dns, aaaSubGPEnable=aaaSubGPEnable, dhcpLeaseTableEntry=dhcpLeaseTableEntry, radiusProxy=radiusProxy, subBytesRec=subBytesRec, dhcpServer=dhcpServer, aaaOSencodingOn=aaaOSencodingOn, authSubMac=authSubMac, ag=ag, aaaBillingPlanPricingDay0=aaaBillingPlanPricingDay0, radProxyAuthSvrPort=radProxyAuthSvrPort, radProxyUpstreamNas=radProxyUpstreamNas, aaaRadiusSubnetAttrOn=aaaRadiusSubnetAttrOn, ipsecPeerEncDesOk=ipsecPeerEncDesOk, aaaBillingPlanDHCPPool1=aaaBillingPlanDHCPPool1, ipsecSaStatusTableEntry=ipsecSaStatusTableEntry, smtpPcRedirect=smtpPcRedirect, aaaLoggingOn=aaaLoggingOn, authSubExpTimeHrs=authSubExpTimeHrs, ipsecPeerSharedKey=ipsecPeerSharedKey, subnetTable=subnetTable, locationEmail=locationEmail, portLocPort=portLocPort)
mibBuilder.exportSymbols("NOMADIX-MIB", profIndex=profIndex, iccButtonName4=iccButtonName4, aaaBilloptMinTimeUnitDay=aaaBilloptMinTimeUnitDay, blockFtpAccessOn=blockFtpAccessOn, aaaRadiusForgotPasswordUrl=aaaRadiusForgotPasswordUrl, urlFilteringDNSTableStatus=urlFilteringDNSTableStatus, subPort=subPort, wirelessWepOn=wirelessWepOn, aaaErrorUserIdMissing=aaaErrorUserIdMissing, radAuthOn=radAuthOn, localWebImagesTableEntry=localWebImagesTableEntry, aaaAmountDecimals=aaaAmountDecimals, aaaBillingPlanDuration5=aaaBillingPlanDuration5, aaaMessagebyHotelRoom=aaaMessagebyHotelRoom, datSessionTable=datSessionTable, aaaBillingPlanDuration1=aaaBillingPlanDuration1, aaaBillingPlanDuration4=aaaBillingPlanDuration4, greVpnConcentratorIp=greVpnConcentratorIp, radProxyAcctSvrPort=radProxyAcctSvrPort, systemSyslogTimestamp=systemSyslogTimestamp, aaaBillingPlanRateShow4=aaaBillingPlanRateShow4, aaaBilloptIntroMsg=aaaBilloptIntroMsg, radHistSyslogSaveToFile=radHistSyslogSaveToFile, greInterfaceGateway=greInterfaceGateway, iccButtonImgName3=iccButtonImgName3, aaaBillingPlanLabel4=aaaBillingPlanLabel4, aaaBillingPlanXoverY2=aaaBillingPlanXoverY2, subMac=subMac, bandwidthManagement=bandwidthManagement, aaaBillingPlanPricingMin2=aaaBillingPlanPricingMin2, aaaBillingPlanXoverY0=aaaBillingPlanXoverY0, iccTimerOption=iccTimerOption, systemStaticPortMappingRemotePort=systemStaticPortMappingRemotePort, ipsecPolicies=ipsecPolicies, ipsecPeerTableEntry=ipsecPeerTableEntry, iccBannerURL2=iccBannerURL2, aaaBillingPlanBandwidthUp3=aaaBillingPlanBandwidthUp3, statusIP=statusIP, aaaMerchantId=aaaMerchantId, portLocModemMAC=portLocModemMAC, aaaBillingPlanLabel5=aaaBillingPlanLabel5, aaaBillingPlanValidityRateShow3=aaaBillingPlanValidityRateShow3, subAaaState=subAaaState, authSubCountDown=authSubCountDown, subProxy=subProxy, aaaBillingPlanDuration3=aaaBillingPlanDuration3, aaaCurrency=aaaCurrency, leaseMinutes=leaseMinutes, aaaAuthorizationUrl=aaaAuthorizationUrl, wirelessRate=wirelessRate, aaaLogFilter=aaaLogFilter, trapIP=trapIP, aaaBillingPlanDesc3=aaaBillingPlanDesc3, localWebImagesTableName=localWebImagesTableName, systemContact=systemContact, datSessState=datSessState, aaaPortalPostUrl=aaaPortalPostUrl, macFiltering=macFiltering, wirelessChannel=wirelessChannel, aaaWebNewUsernameMsg=aaaWebNewUsernameMsg, portLocState=portLocState, aaaBillingPlanPricingHour2=aaaBillingPlanPricingHour2, radAcctSrv1Port=radAcctSrv1Port, aaaSubGPByteReceivedLabel=aaaSubGPByteReceivedLabel, smtp=smtp, aaaBillingPlan5=aaaBillingPlan5, aaaMessageChoosePasswd2=aaaMessageChoosePasswd2, hprParameterPassing=hprParameterPassing, aaaBillingPlanPricingMin3=aaaBillingPlanPricingMin3, greInterfaceIp=greInterfaceIp, portLocTableEntry=portLocTableEntry, aaaPortalPageOn=aaaPortalPageOn, realmBasedRouter=realmBasedRouter, locationNetworkIp=locationNetworkIp, ipsecPolicyPfsStrength=ipsecPolicyPfsStrength, aaaBillingPlanPricingHour0=aaaBillingPlanPricingHour0, pptpOn=pptpOn, systemConfigFileStatus=systemConfigFileStatus, aaaMessageNewUserTermsOn=aaaMessageNewUserTermsOn, aaaMessageVerifying=aaaMessageVerifying, dnsDomain=dnsDomain, subToSubCommBlock=subToSubCommBlock, timeServer1=timeServer1, iccISPLogoButtonImgName=iccISPLogoButtonImgName, datProto=datProto, aaaRadiusDefProf=aaaRadiusDefProf, authSubUser2=authSubUser2, aaaMessageBillingMode=aaaMessageBillingMode, aaaBillingPlanPricingMin1=aaaBillingPlanPricingMin1, radAuthSrv1Ip=radAuthSrv1Ip, aaaErrorPasswordMatch=aaaErrorPasswordMatch, ipsecPeerLifetime=ipsecPeerLifetime, radProxyServices=radProxyServices, subStatus=subStatus, macFilteringTableAddress=macFilteringTableAddress, dynDnsEnable=dynDnsEnable, authSubIp=authSubIp, aaaBillingPlanPricingMonth4=aaaBillingPlanPricingMonth4, brmServerIpSecondary=brmServerIpSecondary, ipsecPeerCertFile=ipsecPeerCertFile, subsettings=subsettings, lkMaxNumSubs=lkMaxNumSubs, subIp=subIp, aaaSslHostName=aaaSslHostName, aaaMessagePurchaseOK1=aaaMessagePurchaseOK1, aaaRadiusRoutingMode=aaaRadiusRoutingMode, aaaSubCurrTableEntry=aaaSubCurrTableEntry, aaaPassthroughPortNumber=aaaPassthroughPortNumber, passthroughIPEntry=passthroughIPEntry, localWebPages=localWebPages, brmMirrorOn=brmMirrorOn, aaaRadiusLoginRefresh=aaaRadiusLoginRefresh, aaaLogNumber=aaaLogNumber, datNetIp=datNetIp, lpfEntryNickname=lpfEntryNickname, portLocConcentratorType=portLocConcentratorType, nseRadCapacityReached=nseRadCapacityReached, radProxyUpstreamNasTable=radProxyUpstreamNasTable, blockTelnetAccessOn=blockTelnetAccessOn, portLocConcIndex=portLocConcIndex, aaaBillingPlanPricingMin4=aaaBillingPlanPricingMin4, greTunnelingEnable=greTunnelingEnable, tunnelProfileTable=tunnelProfileTable, ipsecPolicyStatus=ipsecPolicyStatus, iccButtonImgName8=iccButtonImgName8, radAcctOn=radAcctOn, portLocInRoomPortMappingPassword=portLocInRoomPortMappingPassword, aaaSmartClientOn=aaaSmartClientOn, subIdleLogoutTimeout=subIdleLogoutTimeout, mssidStatus=mssidStatus, defaultPool=defaultPool, ipsecPeerEnc3DesOk=ipsecPeerEnc3DesOk, locationVenueType=locationVenueType, aaaMessagebyCreditCard=aaaMessagebyCreditCard, sessionLimitBurstSize=sessionLimitBurstSize, aaaSupportGISClients=aaaSupportGISClients, realmStatus=realmStatus, wirelessSsidBroadcastOn=wirelessSsidBroadcastOn, aaaChainfusionCCTransTime=aaaChainfusionCCTransTime, realmTunStrip=realmTunStrip, ipsecPolicyLocSubnet=ipsecPolicyLocSubnet, aaaBillingPlan4=aaaBillingPlan4, radHistSyslogFilter=radHistSyslogFilter, aaaWebTitleFont=aaaWebTitleFont, radRetrFreq=radRetrFreq, ipsecPolicyAuthNullOk=ipsecPolicyAuthNullOk, authSubConfirmation=authSubConfirmation, portLocInRoomPortMappingUsername=portLocInRoomPortMappingUsername, systemReportLogInterval=systemReportLogInterval, aaaBillingPlanAssigned4=aaaBillingPlanAssigned4, aaaRadiusNasPortOn=aaaRadiusNasPortOn, systemReportLogNumber=systemReportLogNumber, publicPool=publicPool, dyndns=dyndns, aaaErrorHasOccurred=aaaErrorHasOccurred, bwmUpWanLinkSpeed=bwmUpWanLinkSpeed, iccBannerStopTime1=iccBannerStopTime1, iccButtonImgName6=iccButtonImgName6, systemLoggingOn=systemLoggingOn, locationNetworkSsidZone=locationNetworkSsidZone, tunPassword=tunPassword, passthroughDNSEntry=passthroughDNSEntry, ipsec=ipsec, aaaIWSLoginPageBlocking=aaaIWSLoginPageBlocking, aaaBillingPlanDHCPPool4=aaaBillingPlanDHCPPool4, subBwDown=subBwDown, datDestPort=datDestPort, systemStaticPortMappingTableEntry=systemStaticPortMappingTableEntry, nasStatus=nasStatus, ipsecSaStatusStatus=ipsecSaStatusStatus, smtpUsername=smtpUsername, radAuthProto=radAuthProto, aaaBillingPlanLabel0=aaaBillingPlanLabel0, dynDnsPort=dynDnsPort, portLocUplinkPort=portLocUplinkPort, aaaBillingPlanPricingMonth2=aaaBillingPlanPricingMonth2, aaaSubLoginUI=aaaSubLoginUI, systemHistoryTable=systemHistoryTable, blockSFTPAccessOn=blockSFTPAccessOn, passthrough=passthrough, ipsecPolicyMaxLifesize=ipsecPolicyMaxLifesize, systemStaticPortMappingInternalIP=systemStaticPortMappingInternalIP, aaaBillingPlanValidity0=aaaBillingPlanValidity0, authSubBwUp=authSubBwUp, ipUpSell=ipUpSell, radAuthSrv1Sec=radAuthSrv1Sec, systemSaveToFile=systemSaveToFile, aaaBillingPlanValidityRateShow0=aaaBillingPlanValidityRateShow0, aaaErrorAccessBlocked=aaaErrorAccessBlocked, brmNseId=brmNseId, brmServerCCIpOne=brmServerCCIpOne, inatEntryStatus=inatEntryStatus, wirelessWepAuthType=wirelessWepAuthType, ipsecPolicyEncNullOk=ipsecPolicyEncNullOk, iccISPLogoButtonURL=iccISPLogoButtonURL, aaaBillingPlanPricingDay4=aaaBillingPlanPricingDay4, dhcpServerEnable=dhcpServerEnable, aaaBillingPlanBandwidthDown0=aaaBillingPlanBandwidthDown0, iccButtonURL9=iccButtonURL9, tunProfStatus=tunProfStatus, sessionLimitFilterOffendersEnable=sessionLimitFilterOffendersEnable, nasDefProf=nasDefProf, aaaMessageNewUserLogin=aaaMessageNewUserLogin, aaaBillingPlanXoverY5=aaaBillingPlanXoverY5, aaaBillingPlanCost5=aaaBillingPlanCost5, aaaMessagePurchaseSelect=aaaMessagePurchaseSelect, dynDnsProtocol=dynDnsProtocol, inatIndex=inatIndex, realmProfile=realmProfile, ndxTraps=ndxTraps, localWebImagesTableIndex=localWebImagesTableIndex, nseReboot=nseReboot, aaaRadiusCacheOn=aaaRadiusCacheOn, systemStaticPortMappingExternalPort=systemStaticPortMappingExternalPort, wirelessWep=wirelessWep, iccBannerURL5=iccBannerURL5, iccButtonURL7=iccButtonURL7, aaaRememberMeMsg=aaaRememberMeMsg, aaaAuthSubTableEntry=aaaAuthSubTableEntry, wirelessWepKey1=wirelessWepKey1, aaaSubGPAuthenTypeOn=aaaSubGPAuthenTypeOn, iccBannerStopTime4=iccBannerStopTime4, aaaXmlOn=aaaXmlOn, urlFilteringIPTableStatus=urlFilteringIPTableStatus, ipsecPolicyTableEntry=ipsecPolicyTableEntry, authSubAmtLeft=authSubAmtLeft, time=time, ipsecPolicyRemIp=ipsecPolicyRemIp, aaaErrorRoomBilling=aaaErrorRoomBilling, leaseCLID=leaseCLID, leaseIndex=leaseIndex, aaaBillingPlanPricingWeek0=aaaBillingPlanPricingWeek0, aaaBilloptFreeAccessTime=aaaBilloptFreeAccessTime, iccButton5=iccButton5, dnsHostName=dnsHostName, aaaMessageRequestFailed=aaaMessageRequestFailed, aaaMessageRequestGranted=aaaMessageRequestGranted, urlFilteringDNSTable=urlFilteringDNSTable, brmServerSecretSecondary=brmServerSecretSecondary, urlFilteringIPTableEntry=urlFilteringIPTableEntry, pppoeSvcName=pppoeSvcName, ipsecPolicyEnc3desOk=ipsecPolicyEnc3desOk, systemSyslogMessage=systemSyslogMessage, nasIndex=nasIndex, systemStaticPortMappingIndex=systemStaticPortMappingIndex, aaaBillingPlanOn2=aaaBillingPlanOn2, radProxyAcctHistSyslog=radProxyAcctHistSyslog, aaaBillingPlanXoverY3=aaaBillingPlanXoverY3, dynDnsPassword=dynDnsPassword, iccButton4=iccButton4, systemSyslogVersion=systemSyslogVersion, aaaSubGPStopTimeOn=aaaSubGPStopTimeOn, aaaBillingPlanDHCPPool2=aaaBillingPlanDHCPPool2, aaaBillingPlanBandwidthDown3=aaaBillingPlanBandwidthDown3)
mibBuilder.exportSymbols("NOMADIX-MIB", aaaSubGPStartTimeOn=aaaSubGPStartTimeOn, DisplayString=DisplayString, aaaBillingPlanPricingMonth1=aaaBillingPlanPricingMonth1, brmServerUrlSecondary=brmServerUrlSecondary, iccBannerDuration1=iccBannerDuration1, rBserviceProfiles=rBserviceProfiles, radAcctSrv2Port=radAcctSrv2Port, aaaSubGPAuthenTypeLabel=aaaSubGPAuthenTypeLabel, dynDnsUsername=dynDnsUsername, localWebPagesTableName=localWebPagesTableName, aaaSubGPStopTimeLabel=aaaSubGPStopTimeLabel, subnet=subnet, aaaBillingPlanBandwidthUp4=aaaBillingPlanBandwidthUp4, localWebPagesTableIndex=localWebPagesTableIndex, aaaRadiusDefaultIdle=aaaRadiusDefaultIdle, systemSyslogAddress=systemSyslogAddress, aaaSslOn=aaaSslOn, aaaInternalAuth=aaaInternalAuth, accessControl=accessControl, pppAuthPassword=pppAuthPassword, aaaBillingPlanAssigned1=aaaBillingPlanAssigned1, timeServer3=timeServer3, aaaBillingPlanPricingMonth0=aaaBillingPlanPricingMonth0, aaaBillingPlanDesc1=aaaBillingPlanDesc1, lkFeatureList=lkFeatureList, aaaBillingPlanValidity4=aaaBillingPlanValidity4, aaaBillingPlanDesc2=aaaBillingPlanDesc2, aaaPortalXMLPort=aaaPortalXMLPort, aaaRememberMeDays=aaaRememberMeDays, aaaWebPageBgcolor=aaaWebPageBgcolor, subBwUp=subBwUp, aaaRadiusNasPortType=aaaRadiusNasPortType, dhcpDisable=dhcpDisable, iccButton6=iccButton6, iccBannerStartTime4=iccBannerStartTime4, realmTunProfile=realmTunProfile, aaaBillingPlanDuration2=aaaBillingPlanDuration2, lkFeatureListEntry=lkFeatureListEntry, locationNetIntfCfgMode=locationNetIntfCfgMode, trapCommunity=trapCommunity, iccButton9=iccButton9, authSubName=authSubName, aaaBilloptMaxTimeUnitMinute=aaaBilloptMaxTimeUnitMinute, radAcctSrv2Sec=radAcctSrv2Sec, brmServerCCSecretThree=brmServerCCSecretThree, iccBannerImgName5=iccBannerImgName5, aaaErrorNoBillingOpts=aaaErrorNoBillingOpts, aaaBillingPlanBandwidthDown5=aaaBillingPlanBandwidthDown5, tunProfIndex=tunProfIndex, aaaPartnerImageFileName=aaaPartnerImageFileName, portLocConcentratorTableEntry=portLocConcentratorTableEntry, aaaSubGPByteSentOn=aaaSubGPByteSentOn, portLocAddress=portLocAddress, urlFilteringIPTable=urlFilteringIPTable, wireless=wireless, aaaBilloptMaxTimeUnitHour=aaaBilloptMaxTimeUnitHour, pppoeClient=pppoeClient, passthroughDNSTable=passthroughDNSTable, systemStaticPortMappingProto=systemStaticPortMappingProto, aaaBillingPlanBandwidthUp5=aaaBillingPlanBandwidthUp5, aaaBillingPlanAssigned2=aaaBillingPlanAssigned2, iccBannerDuration5=iccBannerDuration5, aaaBillingPlanDHCPPool0=aaaBillingPlanDHCPPool0, dynDnsHostname=dynDnsHostname, aaaSubGPHypertextURLLabel=aaaSubGPHypertextURLLabel, locationIsoCountryCode=locationIsoCountryCode, acStatus=acStatus, systemStaticPortMappingTable=systemStaticPortMappingTable, urlFilteringDNSTableIndex=urlFilteringDNSTableIndex, leaseStatus=leaseStatus, datSubPort=datSubPort, systemConfigFile=systemConfigFile, aaaSubGPByteSentLabel=aaaSubGPByteSentLabel, aaaWebMicrosUsernameMsg=aaaWebMicrosUsernameMsg, brmServerCCUrlOne=brmServerCCUrlOne, tunPeerIp=tunPeerIp, wirelessBeaconInterval=wirelessBeaconInterval, aaaLpfStatusTable=aaaLpfStatusTable, authSubIndex=authSubIndex, urlFiltering=urlFiltering, aaaExternalAuth=aaaExternalAuth, portLocIndex=portLocIndex, systemStaticPortMappingInternalPort=systemStaticPortMappingInternalPort, aaaSubPostSession=aaaSubPostSession, ipsecPolicyAuthMd5Ok=ipsecPolicyAuthMd5Ok, dhcpRelayServerIP=dhcpRelayServerIP, aaaErrorWholeNumber=aaaErrorWholeNumber, passthroughname=passthroughname, aaaBillingPlanXoverY4=aaaBillingPlanXoverY4, aaaErrorPasswordWrong=aaaErrorPasswordWrong, authSubType=authSubType, portLoc=portLoc, nasIpAddress=nasIpAddress, aaaPassthroughPortOn=aaaPassthroughPortOn, acEndAddress=acEndAddress, localWebPagesTableStatus=localWebPagesTableStatus, radAcctSrv1Sec=radAcctSrv1Sec, ipsecSaStatusTable=ipsecSaStatusTable, macFilteringTable=macFilteringTable, iccButtonURL4=iccButtonURL4, iccBanner4=iccBanner4, systemHistoryTimestamp=systemHistoryTimestamp, aaaRadiusGoodbyeUrlOn=aaaRadiusGoodbyeUrlOn, aaaBillingPlanBandwidthUp2=aaaBillingPlanBandwidthUp2, smtpServerIP=smtpServerIP, aaaLoginPageFailover=aaaLoginPageFailover)
