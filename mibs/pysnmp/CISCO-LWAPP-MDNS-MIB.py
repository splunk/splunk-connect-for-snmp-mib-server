#
# PySNMP MIB module CISCO-LWAPP-MDNS-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CISCO-LWAPP-MDNS-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:48:44 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ConstraintsIntersection, ConstraintsUnion, ValueRangeConstraint, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ConstraintsIntersection", "ConstraintsUnion", "ValueRangeConstraint", "SingleValueConstraint")
ciscoMgmt, = mibBuilder.importSymbols("CISCO-SMI", "ciscoMgmt")
InetAddress, InetAddressType = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddress", "InetAddressType")
SnmpAdminString, = mibBuilder.importSymbols("SNMP-FRAMEWORK-MIB", "SnmpAdminString")
ModuleCompliance, NotificationGroup, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup", "ObjectGroup")
Integer32, Counter32, ModuleIdentity, iso, NotificationType, Bits, MibScalar, MibTable, MibTableRow, MibTableColumn, TimeTicks, MibIdentifier, ObjectIdentity, IpAddress, Gauge32, Counter64, Unsigned32 = mibBuilder.importSymbols("SNMPv2-SMI", "Integer32", "Counter32", "ModuleIdentity", "iso", "NotificationType", "Bits", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "TimeTicks", "MibIdentifier", "ObjectIdentity", "IpAddress", "Gauge32", "Counter64", "Unsigned32")
RowStatus, TextualConvention, DisplayString, MacAddress, TruthValue = mibBuilder.importSymbols("SNMPv2-TC", "RowStatus", "TextualConvention", "DisplayString", "MacAddress", "TruthValue")
ciscoLwappMdnsMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 9, 9, 99994))
ciscoLwappMdnsMIB.setRevisions(('2012-07-04 00:00',))
if mibBuilder.loadTexts: ciscoLwappMdnsMIB.setLastUpdated('201207040000Z')
if mibBuilder.loadTexts: ciscoLwappMdnsMIB.setOrganization('Cisco Systems Inc.')
ciscoLwappMdnsMIBNotifs = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 99994, 0))
ciscoLwappMdnsMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 99994, 1))
ciscoLwappMdnsMIBConform = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 99994, 2))
clMdnsConfigObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 99994, 1, 1))
clMdnsGlobalConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 99994, 1, 1, 1))
clMdnsSnoopingEnabled = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 99994, 1, 1, 1, 1), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: clMdnsSnoopingEnabled.setStatus('current')
clMdnsQueryInterval = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 99994, 1, 1, 1, 2), Unsigned32()).setUnits('minutes').setMaxAccess("readwrite")
if mibBuilder.loadTexts: clMdnsQueryInterval.setStatus('current')
clMdnsMasterServiceTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 99994, 1, 1, 2), )
if mibBuilder.loadTexts: clMdnsMasterServiceTable.setStatus('current')
clMdnsMasterServiceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 99994, 1, 1, 2, 1), ).setIndexNames((0, "CISCO-LWAPP-MDNS-MIB", "clMdnsServiceName"))
if mibBuilder.loadTexts: clMdnsMasterServiceEntry.setStatus('current')
clMdnsServiceName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 99994, 1, 1, 2, 1, 1), SnmpAdminString())
if mibBuilder.loadTexts: clMdnsServiceName.setStatus('current')
clMdnsServiceString = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 99994, 1, 1, 2, 1, 2), SnmpAdminString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: clMdnsServiceString.setStatus('current')
clMdnsServiceQueryStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 99994, 1, 1, 2, 1, 3), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: clMdnsServiceQueryStatus.setStatus('current')
clMdnsServiceRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 99994, 1, 1, 2, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: clMdnsServiceRowStatus.setStatus('current')
clMdnsProfileTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 99994, 1, 1, 3), )
if mibBuilder.loadTexts: clMdnsProfileTable.setStatus('current')
clMdnsProfileEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 99994, 1, 1, 3, 1), ).setIndexNames((0, "CISCO-LWAPP-MDNS-MIB", "clMdnsProfileName"))
if mibBuilder.loadTexts: clMdnsProfileEntry.setStatus('current')
clMdnsProfileName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 99994, 1, 1, 3, 1, 1), SnmpAdminString())
if mibBuilder.loadTexts: clMdnsProfileName.setStatus('current')
clMdnsProfileRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 99994, 1, 1, 3, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: clMdnsProfileRowStatus.setStatus('current')
clMdnsProfileWlanCount = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 99994, 1, 1, 3, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: clMdnsProfileWlanCount.setStatus('current')
clMdnsProfileInterfaceCount = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 99994, 1, 1, 3, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: clMdnsProfileInterfaceCount.setStatus('current')
clMdnsProfileInterfaceGrpCount = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 99994, 1, 1, 3, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: clMdnsProfileInterfaceGrpCount.setStatus('current')
clMdnsProfileServiceTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 99994, 1, 1, 4), )
if mibBuilder.loadTexts: clMdnsProfileServiceTable.setStatus('current')
clMdnsProfileServiceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 99994, 1, 1, 4, 1), ).setIndexNames((0, "CISCO-LWAPP-MDNS-MIB", "clMdnsProfileName"), (0, "CISCO-LWAPP-MDNS-MIB", "clMdnsServiceName"))
if mibBuilder.loadTexts: clMdnsProfileServiceEntry.setStatus('current')
clMdnsProfileServiceRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 99994, 1, 1, 4, 1, 1), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: clMdnsProfileServiceRowStatus.setStatus('current')
clMdnsServiceProviderTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 99994, 1, 1, 5), )
if mibBuilder.loadTexts: clMdnsServiceProviderTable.setStatus('current')
clMdnsServiceProviderEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 99994, 1, 1, 5, 1), ).setIndexNames((0, "CISCO-LWAPP-MDNS-MIB", "clMdnsServiceName"), (0, "CISCO-LWAPP-MDNS-MIB", "clMdnsServiceProviderIndex"))
if mibBuilder.loadTexts: clMdnsServiceProviderEntry.setStatus('current')
clMdnsServiceProviderIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 99994, 1, 1, 5, 1, 1), Unsigned32())
if mibBuilder.loadTexts: clMdnsServiceProviderIndex.setStatus('current')
clMdnsServiceProviderMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 99994, 1, 1, 5, 1, 2), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: clMdnsServiceProviderMacAddress.setStatus('current')
clMdnsServiceProviderName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 99994, 1, 1, 5, 1, 3), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: clMdnsServiceProviderName.setStatus('current')
clMdnsServiceProviderVlan = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 99994, 1, 1, 5, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: clMdnsServiceProviderVlan.setStatus('current')
clMdnsServiceProviderType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 99994, 1, 1, 5, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("wireless", 1), ("wired", 2), ("wired-guest", 3), ("both", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: clMdnsServiceProviderType.setStatus('current')
clMdnsServiceProviderTtl = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 99994, 1, 1, 5, 1, 6), Unsigned32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: clMdnsServiceProviderTtl.setStatus('current')
clMdnsServiceProviderTimeLeft = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 99994, 1, 1, 5, 1, 7), Unsigned32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: clMdnsServiceProviderTimeLeft.setStatus('current')
clMdnsDnipTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 99994, 1, 1, 6), )
if mibBuilder.loadTexts: clMdnsDnipTable.setStatus('current')
clMdnsDnipEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 99994, 1, 1, 6, 1), ).setIndexNames((0, "CISCO-LWAPP-MDNS-MIB", "clMdnsDomainName"))
if mibBuilder.loadTexts: clMdnsDnipEntry.setStatus('current')
clMdnsDomainName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 99994, 1, 1, 6, 1, 1), SnmpAdminString())
if mibBuilder.loadTexts: clMdnsDomainName.setStatus('current')
clMdnsDomainMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 99994, 1, 1, 6, 1, 2), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: clMdnsDomainMacAddress.setStatus('current')
clMdnsDomainIpAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 99994, 1, 1, 6, 1, 3), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: clMdnsDomainIpAddressType.setStatus('current')
clMdnsDomainIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 99994, 1, 1, 6, 1, 4), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: clMdnsDomainIpAddress.setStatus('current')
clMdnsDomainVlan = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 99994, 1, 1, 6, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: clMdnsDomainVlan.setStatus('current')
clMdnsDomainType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 99994, 1, 1, 6, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("wireless", 1), ("wired", 2), ("wired-guest", 3), ("both", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: clMdnsDomainType.setStatus('current')
clMdnsDomainEntryTtl = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 99994, 1, 1, 6, 1, 7), Unsigned32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: clMdnsDomainEntryTtl.setStatus('current')
clMdnsDomainEntryTimeLeft = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 99994, 1, 1, 6, 1, 8), Unsigned32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: clMdnsDomainEntryTimeLeft.setStatus('current')
cLMdnsServiceGroupTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 99994, 1, 1, 7), )
if mibBuilder.loadTexts: cLMdnsServiceGroupTable.setStatus('current')
cLMdnsServiceGroupEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 99994, 1, 1, 7, 1), ).setIndexNames((0, "CISCO-LWAPP-MDNS-MIB", "cLMdnsServiceGroupName"))
if mibBuilder.loadTexts: cLMdnsServiceGroupEntry.setStatus('current')
cLMdnsServiceGroupName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 99994, 1, 1, 7, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 256)))
if mibBuilder.loadTexts: cLMdnsServiceGroupName.setStatus('current')
cLMdnsServiceGroupDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 99994, 1, 1, 7, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cLMdnsServiceGroupDescription.setStatus('current')
cLMdnsServiceGroupRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 99994, 1, 1, 7, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cLMdnsServiceGroupRowStatus.setStatus('current')
cLMdnsServiceGroupDeviceMacTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 99994, 1, 1, 8), )
if mibBuilder.loadTexts: cLMdnsServiceGroupDeviceMacTable.setStatus('current')
cLMdnsServiceGroupDeviceMacEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 99994, 1, 1, 8, 1), ).setIndexNames((0, "CISCO-LWAPP-MDNS-MIB", "cLMdnsServiceGroupName"), (0, "CISCO-LWAPP-MDNS-MIB", "cLMdnsServiceGroupDeviceMac"))
if mibBuilder.loadTexts: cLMdnsServiceGroupDeviceMacEntry.setStatus('current')
cLMdnsServiceGroupDeviceMac = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 99994, 1, 1, 8, 1, 1), MacAddress())
if mibBuilder.loadTexts: cLMdnsServiceGroupDeviceMac.setStatus('current')
cLMdnsServiceGroupDeviceName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 99994, 1, 1, 8, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cLMdnsServiceGroupDeviceName.setStatus('current')
cLMdnsServiceGroupLocationName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 99994, 1, 1, 8, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cLMdnsServiceGroupLocationName.setStatus('current')
cLMdnsServiceGroupLocationType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 99994, 1, 1, 8, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("apName", 1), ("apGroup", 2), ("apLocation", 3)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cLMdnsServiceGroupLocationType.setStatus('current')
cLMdnsServiceGroupDeviceMacRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 99994, 1, 1, 8, 1, 5), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cLMdnsServiceGroupDeviceMacRowStatus.setStatus('current')
cLMdnsServiceGroupRuleTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 99994, 1, 1, 9), )
if mibBuilder.loadTexts: cLMdnsServiceGroupRuleTable.setStatus('current')
cLMdnsServiceGroupRuleEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 99994, 1, 1, 9, 1), ).setIndexNames((0, "CISCO-LWAPP-MDNS-MIB", "cLMdnsServiceGroupName"), (0, "CISCO-LWAPP-MDNS-MIB", "cLMdnsRuleName"))
if mibBuilder.loadTexts: cLMdnsServiceGroupRuleEntry.setStatus('current')
cLMdnsRuleName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 99994, 1, 1, 9, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 266)))
if mibBuilder.loadTexts: cLMdnsRuleName.setStatus('current')
cLMdnsRuleRole = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 99994, 1, 1, 9, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 512))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cLMdnsRuleRole.setStatus('current')
cLMdnsRuleUserId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 99994, 1, 1, 9, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 512))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cLMdnsRuleUserId.setStatus('current')
cLMdnsServiceGroupRuleRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 99994, 1, 1, 9, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cLMdnsServiceGroupRuleRowStatus.setStatus('current')
ciscoLwappMdnsMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 99994, 2, 1))
ciscoLwappMdnsMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 99994, 2, 2))
ciscoLwappMdnsMIBCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 99994, 2, 1, 1)).setObjects(("CISCO-LWAPP-MDNS-MIB", "cLMdnsConfigGroup"), ("CISCO-LWAPP-MDNS-MIB", "cLMdnsMonitorGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoLwappMdnsMIBCompliance = ciscoLwappMdnsMIBCompliance.setStatus('current')
cLMdnsConfigGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 99994, 2, 2, 1)).setObjects(("CISCO-LWAPP-MDNS-MIB", "clMdnsSnoopingEnabled"), ("CISCO-LWAPP-MDNS-MIB", "clMdnsQueryInterval"), ("CISCO-LWAPP-MDNS-MIB", "clMdnsServiceName"), ("CISCO-LWAPP-MDNS-MIB", "clMdnsServiceString"), ("CISCO-LWAPP-MDNS-MIB", "clMdnsServiceQueryStatus"), ("CISCO-LWAPP-MDNS-MIB", "clMdnsServiceRowStatus"), ("CISCO-LWAPP-MDNS-MIB", "clMdnsProfileName"), ("CISCO-LWAPP-MDNS-MIB", "clMdnsProfileRowStatus"), ("CISCO-LWAPP-MDNS-MIB", "clMdnsProfileServiceRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cLMdnsConfigGroup = cLMdnsConfigGroup.setStatus('current')
cLMdnsMonitorGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 99994, 2, 2, 2)).setObjects(("CISCO-LWAPP-MDNS-MIB", "clMdnsServiceProviderIndex"), ("CISCO-LWAPP-MDNS-MIB", "clMdnsServiceProviderMacAddress"), ("CISCO-LWAPP-MDNS-MIB", "clMdnsServiceProviderName"), ("CISCO-LWAPP-MDNS-MIB", "clMdnsServiceProviderVlan"), ("CISCO-LWAPP-MDNS-MIB", "clMdnsServiceProviderType"), ("CISCO-LWAPP-MDNS-MIB", "clMdnsServiceProviderTtl"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cLMdnsMonitorGroup = cLMdnsMonitorGroup.setStatus('current')
mibBuilder.exportSymbols("CISCO-LWAPP-MDNS-MIB", cLMdnsServiceGroupDeviceMacTable=cLMdnsServiceGroupDeviceMacTable, clMdnsServiceProviderEntry=clMdnsServiceProviderEntry, clMdnsProfileServiceTable=clMdnsProfileServiceTable, clMdnsProfileServiceRowStatus=clMdnsProfileServiceRowStatus, cLMdnsServiceGroupDeviceName=cLMdnsServiceGroupDeviceName, cLMdnsServiceGroupDeviceMacRowStatus=cLMdnsServiceGroupDeviceMacRowStatus, clMdnsProfileWlanCount=clMdnsProfileWlanCount, clMdnsServiceProviderMacAddress=clMdnsServiceProviderMacAddress, cLMdnsServiceGroupLocationType=cLMdnsServiceGroupLocationType, cLMdnsServiceGroupLocationName=cLMdnsServiceGroupLocationName, cLMdnsMonitorGroup=cLMdnsMonitorGroup, clMdnsDnipTable=clMdnsDnipTable, clMdnsServiceProviderVlan=clMdnsServiceProviderVlan, cLMdnsServiceGroupDescription=cLMdnsServiceGroupDescription, cLMdnsServiceGroupRuleTable=cLMdnsServiceGroupRuleTable, clMdnsMasterServiceEntry=clMdnsMasterServiceEntry, clMdnsServiceProviderIndex=clMdnsServiceProviderIndex, clMdnsDnipEntry=clMdnsDnipEntry, clMdnsDomainIpAddress=clMdnsDomainIpAddress, clMdnsDomainEntryTimeLeft=clMdnsDomainEntryTimeLeft, clMdnsServiceRowStatus=clMdnsServiceRowStatus, ciscoLwappMdnsMIB=ciscoLwappMdnsMIB, clMdnsGlobalConfig=clMdnsGlobalConfig, ciscoLwappMdnsMIBCompliances=ciscoLwappMdnsMIBCompliances, cLMdnsServiceGroupDeviceMac=cLMdnsServiceGroupDeviceMac, ciscoLwappMdnsMIBCompliance=ciscoLwappMdnsMIBCompliance, ciscoLwappMdnsMIBConform=ciscoLwappMdnsMIBConform, clMdnsProfileInterfaceGrpCount=clMdnsProfileInterfaceGrpCount, clMdnsServiceProviderTimeLeft=clMdnsServiceProviderTimeLeft, PYSNMP_MODULE_ID=ciscoLwappMdnsMIB, clMdnsProfileTable=clMdnsProfileTable, clMdnsProfileRowStatus=clMdnsProfileRowStatus, cLMdnsServiceGroupEntry=cLMdnsServiceGroupEntry, clMdnsSnoopingEnabled=clMdnsSnoopingEnabled, cLMdnsRuleName=cLMdnsRuleName, ciscoLwappMdnsMIBObjects=ciscoLwappMdnsMIBObjects, clMdnsServiceQueryStatus=clMdnsServiceQueryStatus, clMdnsServiceProviderTable=clMdnsServiceProviderTable, clMdnsServiceProviderTtl=clMdnsServiceProviderTtl, cLMdnsServiceGroupTable=cLMdnsServiceGroupTable, cLMdnsRuleUserId=cLMdnsRuleUserId, clMdnsProfileName=clMdnsProfileName, cLMdnsServiceGroupRowStatus=cLMdnsServiceGroupRowStatus, ciscoLwappMdnsMIBGroups=ciscoLwappMdnsMIBGroups, clMdnsMasterServiceTable=clMdnsMasterServiceTable, clMdnsServiceProviderType=clMdnsServiceProviderType, clMdnsDomainName=clMdnsDomainName, clMdnsDomainMacAddress=clMdnsDomainMacAddress, clMdnsProfileInterfaceCount=clMdnsProfileInterfaceCount, clMdnsConfigObjects=clMdnsConfigObjects, cLMdnsServiceGroupName=cLMdnsServiceGroupName, cLMdnsRuleRole=cLMdnsRuleRole, cLMdnsServiceGroupRuleRowStatus=cLMdnsServiceGroupRuleRowStatus, clMdnsProfileEntry=clMdnsProfileEntry, clMdnsDomainIpAddressType=clMdnsDomainIpAddressType, clMdnsServiceString=clMdnsServiceString, clMdnsProfileServiceEntry=clMdnsProfileServiceEntry, clMdnsServiceProviderName=clMdnsServiceProviderName, clMdnsDomainType=clMdnsDomainType, cLMdnsServiceGroupRuleEntry=cLMdnsServiceGroupRuleEntry, clMdnsServiceName=clMdnsServiceName, clMdnsDomainEntryTtl=clMdnsDomainEntryTtl, cLMdnsServiceGroupDeviceMacEntry=cLMdnsServiceGroupDeviceMacEntry, clMdnsQueryInterval=clMdnsQueryInterval, clMdnsDomainVlan=clMdnsDomainVlan, ciscoLwappMdnsMIBNotifs=ciscoLwappMdnsMIBNotifs, cLMdnsConfigGroup=cLMdnsConfigGroup)
