#
# PySNMP MIB module DNS-340L-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/DNS-340L-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 18:37:25 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ConstraintsUnion, ValueSizeConstraint, ValueRangeConstraint, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ConstraintsUnion", "ValueSizeConstraint", "ValueRangeConstraint", "SingleValueConstraint")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
NotificationType, MibScalar, MibTable, MibTableRow, MibTableColumn, iso, Counter64, Integer32, ObjectIdentity, Gauge32, Bits, Counter32, ModuleIdentity, Unsigned32, MibIdentifier, enterprises, IpAddress, TimeTicks = mibBuilder.importSymbols("SNMPv2-SMI", "NotificationType", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "iso", "Counter64", "Integer32", "ObjectIdentity", "Gauge32", "Bits", "Counter32", "ModuleIdentity", "Unsigned32", "MibIdentifier", "enterprises", "IpAddress", "TimeTicks")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
d_link = MibIdentifier((1, 3, 6, 1, 4, 1, 171)).setLabel("d-link")
productID = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 50))
projectID = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 50, 1))
modelID = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 50, 1, 10))
submodelID = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 50, 1, 10, 1))
nasAgent = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 50, 1, 10, 1, 1))
dns340LAgentVer = MibScalar((1, 3, 6, 1, 4, 1, 171, 50, 1, 10, 1, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dns340LAgentVer.setStatus('current')
dns340LSoftwareVersion = MibScalar((1, 3, 6, 1, 4, 1, 171, 50, 1, 10, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dns340LSoftwareVersion.setStatus('current')
dns340LHostName = MibScalar((1, 3, 6, 1, 4, 1, 171, 50, 1, 10, 1, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dns340LHostName.setStatus('current')
dns340LFTPServer = MibScalar((1, 3, 6, 1, 4, 1, 171, 50, 1, 10, 1, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dns340LFTPServer.setStatus('current')
dns340LNetType = MibScalar((1, 3, 6, 1, 4, 1, 171, 50, 1, 10, 1, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dns340LNetType.setStatus('current')
dns340LTemperature = MibScalar((1, 3, 6, 1, 4, 1, 171, 50, 1, 10, 1, 1, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dns340LTemperature.setStatus('current')
dns340LFanStatus = MibScalar((1, 3, 6, 1, 4, 1, 171, 50, 1, 10, 1, 1, 8), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dns340LFanStatus.setStatus('current')
dns340LVolumeTable = MibTable((1, 3, 6, 1, 4, 1, 171, 50, 1, 10, 1, 1, 9), )
if mibBuilder.loadTexts: dns340LVolumeTable.setStatus('current')
dns340LVolumeEntry = MibTableRow((1, 3, 6, 1, 4, 1, 171, 50, 1, 10, 1, 1, 9, 1), ).setIndexNames((0, "DNS-340L-MIB", "dns340LVolumeNum"))
if mibBuilder.loadTexts: dns340LVolumeEntry.setStatus('current')
dns340LVolumeNum = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 50, 1, 10, 1, 1, 9, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dns340LVolumeNum.setStatus('current')
dns340LVolumeName = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 50, 1, 10, 1, 1, 9, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dns340LVolumeName.setStatus('current')
dns340LVolumeFsType = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 50, 1, 10, 1, 1, 9, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dns340LVolumeFsType.setStatus('current')
dns340LVolumeRaidLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 50, 1, 10, 1, 1, 9, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dns340LVolumeRaidLevel.setStatus('current')
dns340LVolumeSize = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 50, 1, 10, 1, 1, 9, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dns340LVolumeSize.setStatus('current')
dns340LVolumeFreeSpace = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 50, 1, 10, 1, 1, 9, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dns340LVolumeFreeSpace.setStatus('current')
dns340LDiskTable = MibTable((1, 3, 6, 1, 4, 1, 171, 50, 1, 10, 1, 1, 10), )
if mibBuilder.loadTexts: dns340LDiskTable.setStatus('current')
dns340LDiskEntry = MibTableRow((1, 3, 6, 1, 4, 1, 171, 50, 1, 10, 1, 1, 10, 1), ).setIndexNames((0, "DNS-340L-MIB", "dns340LDiskNum"))
if mibBuilder.loadTexts: dns340LDiskEntry.setStatus('current')
dns340LDiskNum = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 50, 1, 10, 1, 1, 10, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dns340LDiskNum.setStatus('current')
dns340LDiskVendor = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 50, 1, 10, 1, 1, 10, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dns340LDiskVendor.setStatus('current')
dns340LDiskModel = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 50, 1, 10, 1, 1, 10, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dns340LDiskModel.setStatus('current')
dns340LDiskSerialNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 50, 1, 10, 1, 1, 10, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dns340LDiskSerialNumber.setStatus('current')
dns340LDiskTemperature = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 50, 1, 10, 1, 1, 10, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dns340LDiskTemperature.setStatus('current')
dns340LDiskCapacity = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 50, 1, 10, 1, 1, 10, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dns340LDiskCapacity.setStatus('current')
dns340LUPSTable = MibTable((1, 3, 6, 1, 4, 1, 171, 50, 1, 10, 1, 1, 11), )
if mibBuilder.loadTexts: dns340LUPSTable.setStatus('current')
dns340LUPSEntry = MibTableRow((1, 3, 6, 1, 4, 1, 171, 50, 1, 10, 1, 1, 11, 1), ).setIndexNames((0, "DNS-340L-MIB", "dns340LUPSNum"))
if mibBuilder.loadTexts: dns340LUPSEntry.setStatus('current')
dns340LUPSNum = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 50, 1, 10, 1, 1, 11, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dns340LUPSNum.setStatus('current')
dns340LUPSMode = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 50, 1, 10, 1, 1, 11, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dns340LUPSMode.setStatus('current')
dns340LUPSManufacturer = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 50, 1, 10, 1, 1, 11, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dns340LUPSManufacturer.setStatus('current')
dns340LUPSProduct = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 50, 1, 10, 1, 1, 11, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dns340LUPSProduct.setStatus('current')
dns340LUPSBatteryCharge = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 50, 1, 10, 1, 1, 11, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dns340LUPSBatteryCharge.setStatus('current')
dns340LUPSStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 50, 1, 10, 1, 1, 11, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dns340LUPSStatus.setStatus('current')
notifyEvts = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 50, 1, 10, 1, 1, 200))
notifyPasswdChanged = NotificationType((1, 3, 6, 1, 4, 1, 171, 50, 1, 10, 1, 1, 200, 1))
if mibBuilder.loadTexts: notifyPasswdChanged.setStatus('current')
notifyFirmwareUpgraded = NotificationType((1, 3, 6, 1, 4, 1, 171, 50, 1, 10, 1, 1, 200, 2))
if mibBuilder.loadTexts: notifyFirmwareUpgraded.setStatus('current')
notifyNetworkChanged = NotificationType((1, 3, 6, 1, 4, 1, 171, 50, 1, 10, 1, 1, 200, 3))
if mibBuilder.loadTexts: notifyNetworkChanged.setStatus('current')
notifyTemperatureExceeded = NotificationType((1, 3, 6, 1, 4, 1, 171, 50, 1, 10, 1, 1, 200, 4))
if mibBuilder.loadTexts: notifyTemperatureExceeded.setStatus('current')
mibBuilder.exportSymbols("DNS-340L-MIB", projectID=projectID, dns340LUPSProduct=dns340LUPSProduct, dns340LUPSBatteryCharge=dns340LUPSBatteryCharge, dns340LDiskEntry=dns340LDiskEntry, dns340LUPSEntry=dns340LUPSEntry, dns340LVolumeName=dns340LVolumeName, notifyFirmwareUpgraded=notifyFirmwareUpgraded, notifyPasswdChanged=notifyPasswdChanged, nasAgent=nasAgent, notifyNetworkChanged=notifyNetworkChanged, submodelID=submodelID, dns340LHostName=dns340LHostName, notifyEvts=notifyEvts, dns340LVolumeTable=dns340LVolumeTable, dns340LUPSManufacturer=dns340LUPSManufacturer, dns340LUPSTable=dns340LUPSTable, dns340LAgentVer=dns340LAgentVer, dns340LVolumeFreeSpace=dns340LVolumeFreeSpace, notifyTemperatureExceeded=notifyTemperatureExceeded, dns340LNetType=dns340LNetType, dns340LTemperature=dns340LTemperature, dns340LSoftwareVersion=dns340LSoftwareVersion, dns340LVolumeSize=dns340LVolumeSize, dns340LDiskModel=dns340LDiskModel, dns340LVolumeRaidLevel=dns340LVolumeRaidLevel, dns340LDiskSerialNumber=dns340LDiskSerialNumber, dns340LDiskNum=dns340LDiskNum, dns340LDiskCapacity=dns340LDiskCapacity, dns340LUPSMode=dns340LUPSMode, dns340LDiskVendor=dns340LDiskVendor, dns340LVolumeNum=dns340LVolumeNum, modelID=modelID, dns340LFTPServer=dns340LFTPServer, dns340LUPSStatus=dns340LUPSStatus, d_link=d_link, dns340LDiskTable=dns340LDiskTable, dns340LVolumeFsType=dns340LVolumeFsType, dns340LUPSNum=dns340LUPSNum, dns340LDiskTemperature=dns340LDiskTemperature, dns340LVolumeEntry=dns340LVolumeEntry, dns340LFanStatus=dns340LFanStatus, productID=productID)
