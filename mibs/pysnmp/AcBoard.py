#
# PySNMP MIB module AcBoard (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/AcBoard
# Produced by pysmi-0.3.4 at Mon Apr 29 17:17:00 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ConstraintsIntersection, ConstraintsUnion, ValueRangeConstraint, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ConstraintsIntersection", "ConstraintsUnion", "ValueRangeConstraint", "ValueSizeConstraint")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
Unsigned32, Gauge32, MibScalar, MibTable, MibTableRow, MibTableColumn, Integer32, TimeTicks, ObjectIdentity, Counter32, IpAddress, Counter64, NotificationType, Bits, MibIdentifier, enterprises, ModuleIdentity, iso = mibBuilder.importSymbols("SNMPv2-SMI", "Unsigned32", "Gauge32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Integer32", "TimeTicks", "ObjectIdentity", "Counter32", "IpAddress", "Counter64", "NotificationType", "Bits", "MibIdentifier", "enterprises", "ModuleIdentity", "iso")
DisplayString, DateAndTime, TAddress, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "DateAndTime", "TAddress", "TextualConvention")
audioCodes = MibIdentifier((1, 3, 6, 1, 4, 1, 5003))
acRegistrations = MibIdentifier((1, 3, 6, 1, 4, 1, 5003, 7))
acGeneric = MibIdentifier((1, 3, 6, 1, 4, 1, 5003, 8))
acProducts = MibIdentifier((1, 3, 6, 1, 4, 1, 5003, 9))
acBoardMibs = MibIdentifier((1, 3, 6, 1, 4, 1, 5003, 9, 10))
acBoard = ModuleIdentity((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1))
acBoard.setRevisions(('2004-01-26 11:53',))
if mibBuilder.loadTexts: acBoard.setLastUpdated('201002-01649Z')
if mibBuilder.loadTexts: acBoard.setOrganization('AudioCodes Ltd')
boardConfiguration = MibIdentifier((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 1))
boardTDMBusSettings = MibIdentifier((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 1, 1))
pCMLawSelect = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(3, 1))).clone(namedValues=NamedValues(("muLaw", 3), ("aLaw", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pCMLawSelect.setStatus('obsolete')
tDMBusClockSource = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 3, 4, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19))).clone(namedValues=NamedValues(("acTDMBusClockSource-Internal", 1), ("acTDMBusClockSource-MVIP", 3), ("acTDMBusClockSource-Network", 4), ("acTDMBusClockSource-H110-A", 8), ("acTDMBusClockSource-H110-B", 9), ("acTDMBusClockSource-NetReference1", 10), ("acTDMBusClockSource-NetReference2", 11), ("acTDMBusClockSource-SC-2M", 12), ("acTDMBusClockSource-SC-4M", 13), ("acTDMBusClockSource-SC-8M", 14), ("acTDMBusClockSource-BITS", 15), ("acTDMBusClockSource-Network-B", 16), ("acTDMBusClockSource-ATM-OC3", 17), ("acTDMBusClockSource-ATM-OC3-B", 18), ("acTDMBusClockSource-ATM-OC12", 19)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tDMBusClockSource.setStatus('obsolete')
tDMBusEnableFallBack = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tDMBusEnableFallBack.setStatus('obsolete')
tDMBusLocalReference = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 27))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tDMBusLocalReference.setStatus('obsolete')
idlePCMPattern = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: idlePCMPattern.setStatus('obsolete')
idleABCD = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 1, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 15))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: idleABCD.setStatus('obsolete')
tDMBusMasterSlaveSelection = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("acTDMBusSlaveMode", 0), ("acTDMBusMasterMode", 1), ("acH110BusSecondaryMasterMode", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tDMBusMasterSlaveSelection.setStatus('obsolete')
tDMBusNetRefSpeed = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 2))).clone(namedValues=NamedValues(("acTH110BusNetReferenceSpeed-8khz", 0), ("acTH110BusNetReferenceSpeed-20488khz", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tDMBusNetRefSpeed.setStatus('obsolete')
tDMBusOutputStartingChannel = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 1, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 127))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tDMBusOutputStartingChannel.setStatus('obsolete')
boardTDMBusOutputPort = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: boardTDMBusOutputPort.setStatus('obsolete')
tDMBusSpeed = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 1, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 2, 3, 4))).clone(namedValues=NamedValues(("acTDMBusSpeed-2Mbps", 0), ("acTDMBusSpeed-4Mbps", 2), ("acTDMBusSpeed-8Mbps", 3), ("acTDMBusSpeed-16Mbps", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tDMBusSpeed.setStatus('obsolete')
tDMBusType = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 1, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 8))).clone(namedValues=NamedValues(("mVIP-BUS", 0), ("sC-BUS", 1), ("uSE-FRAMERS", 2), ("qSLAC-BUS", 3), ("uSE-H110-BUS", 4), ("uSE-EXT-BUS", 5), ("aNALOG-BUS", 6), ("uSE-PSTN-SW-ONLY", 8)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tDMBusType.setStatus('obsolete')
acOverrideDefaultIdlePCMPattern = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 1, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("useDefaults", 0), ("useIdlePCMPattern", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acOverrideDefaultIdlePCMPattern.setStatus('obsolete')
acOverrideDefaultIdleABCDPattern = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 1, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("useDefaults", 0), ("useIdleABCDPattern", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acOverrideDefaultIdleABCDPattern.setStatus('obsolete')
networkSettings = MibIdentifier((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 1, 2))
baseUDPPort = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 1, 2, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 64000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: baseUDPPort.setStatus('obsolete')
defaultGatewayAddr = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 1, 2, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: defaultGatewayAddr.setStatus('obsolete')
boardIPAddr = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 1, 2, 3), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: boardIPAddr.setStatus('obsolete')
boardSubNetAddr = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 1, 2, 4), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: boardSubNetAddr.setStatus('obsolete')
acSyslogServerIP = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 1, 2, 5), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acSyslogServerIP.setStatus('obsolete')
acMGControlProtocolType = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 1, 2, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 4, 8))).clone(namedValues=NamedValues(("controlProtocol-None", 0), ("controlProtocol-MGCP", 1), ("controlProtocol-MEGACO", 2), ("controlProtocol-H323", 4), ("controlProtocol-SIP", 8)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acMGControlProtocolType.setStatus('obsolete')
acSNMPManagerIP = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 1, 2, 7), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acSNMPManagerIP.setStatus('obsolete')
acDisableWEBConfig = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 1, 2, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("enable", 0), ("disable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acDisableWEBConfig.setStatus('obsolete')
acEnableSyslog = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 1, 2, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acEnableSyslog.setStatus('obsolete')
acContrlProtocolTransportType = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 1, 2, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("acCPTransport-UDP-IP", 0), ("acCPTransport-TCP-IP", 1), ("acCPTransport-SCTP-IP", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acContrlProtocolTransportType.setStatus('obsolete')
acCPControlDiffServ = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 1, 2, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 63))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acCPControlDiffServ.setStatus('obsolete')
snmpManagers = MibIdentifier((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 1, 2, 21))
snmpManagersTable = MibTable((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 1, 2, 21, 1), )
if mibBuilder.loadTexts: snmpManagersTable.setStatus('obsolete')
snmpManagersEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 1, 2, 21, 1, 1), ).setIndexNames((0, "AcBoard", "snmpManagerIndex"))
if mibBuilder.loadTexts: snmpManagersEntry.setStatus('obsolete')
snmpManagerIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 1, 2, 21, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: snmpManagerIndex.setStatus('obsolete')
snmpManagerIsUsed = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 1, 2, 21, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snmpManagerIsUsed.setStatus('obsolete')
snmpManagerIp = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 1, 2, 21, 1, 1, 3), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snmpManagerIp.setStatus('obsolete')
snmpManagerTrapPort = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 1, 2, 21, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snmpManagerTrapPort.setStatus('obsolete')
snmpManagerTrapSendingEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 1, 2, 21, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snmpManagerTrapSendingEnable.setStatus('obsolete')
acNTPSettings = MibIdentifier((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 1, 2, 22))
acNTPServerIPAddress = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 1, 2, 22, 1), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acNTPServerIPAddress.setStatus('obsolete')
acNTPUtcOffset = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 1, 2, 22, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-43200, 43200))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acNTPUtcOffset.setStatus('deprecated')
acNTPUpdateInterval = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 1, 2, 22, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acNTPUpdateInterval.setStatus('deprecated')
acWEBAccess = MibIdentifier((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 1, 2, 23))
acWEBAccessTable = MibTable((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 1, 2, 23, 1), )
if mibBuilder.loadTexts: acWEBAccessTable.setStatus('obsolete')
acWEBAccessEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 1, 2, 23, 1, 1), ).setIndexNames((0, "AcBoard", "acWEBAccessIndex"))
if mibBuilder.loadTexts: acWEBAccessEntry.setStatus('obsolete')
acWEBAccessRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 1, 2, 23, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acWEBAccessRowStatus.setStatus('obsolete')
acWEBAccessAction = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 1, 2, 23, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 0))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acWEBAccessAction.setStatus('obsolete')
acWEBAccessActionResult = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 1, 2, 23, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 0))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acWEBAccessActionResult.setStatus('obsolete')
acWEBAccessIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 1, 2, 23, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 0))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acWEBAccessIndex.setStatus('obsolete')
acWEBAccessUserName = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 1, 2, 23, 1, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 26))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acWEBAccessUserName.setStatus('obsolete')
acWEBAccessUserCode = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 1, 2, 23, 1, 1, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 26))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acWEBAccessUserCode.setStatus('obsolete')
auxiliarySettings = MibIdentifier((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 1, 3))
enableDiagnostics = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 1, 3, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("acDiagnostics-Disabled", 0), ("acDiagnostics-BuiltInTest", 1), ("acDiagnostics-BuiltInTestwithPartialFlash", 2), ("acDiagnostics-BuiltInTestWithSDRAM", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: enableDiagnostics.setStatus('obsolete')
trunkSettings = MibIdentifier((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 1, 4))
trunkSettingsTable = MibTable((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 1, 4, 1), )
if mibBuilder.loadTexts: trunkSettingsTable.setStatus('obsolete')
trunkSettingsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 1, 4, 1, 1), ).setIndexNames((0, "AcBoard", "trunkId"))
if mibBuilder.loadTexts: trunkSettingsEntry.setStatus('obsolete')
trunkId = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 1, 4, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: trunkId.setStatus('obsolete')
clockMaster = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 1, 4, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("acCLOCK-MASTER-OFF", 0), ("acCLOCK-MASTER-ON", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: clockMaster.setStatus('obsolete')
framingMethod = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 1, 4, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12))).clone(namedValues=NamedValues(("eXTENDED-SUPER-FRAME", 0), ("sUPER-FRAME", 1), ("e1-FRAMING-DDF", 2), ("e1-FRAMING-MFF-CRC4", 3), ("e1-FRAMING-MFF-CRC4-EXT", 4), ("e1-FRAMING-NIL", 5), ("t1-FRAMING-F4", 6), ("t1-FRAMING-F12", 7), ("t1-FRAMING-ESF", 8), ("t1-FRAMING-ESF-CRC6", 9), ("t1-FRAMING-F72", 10), ("t1-FRAMING-ESF-CRC6-JT", 11), ("t1-FRAMING-NIL", 12)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: framingMethod.setStatus('obsolete')
protocolType = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 1, 4, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36))).clone(namedValues=NamedValues(("nONE", 0), ("e1EuroISDN", 1), ("t1Cas", 2), ("t1RawCas", 3), ("t1Transparent", 4), ("e1Transparent31", 5), ("e1Transparent30", 6), ("e1Mfcr2", 7), ("e1CasR2", 8), ("e1RawCAS", 9), ("t1-NI2ISDN", 10), ("t1-4EssISDN", 11), ("t1-5Ess-9-ISDN", 12), ("t1-5Ess-10-ISDN", 13), ("t1-Dms100-ISDN", 14), ("j1-TRANSPARENT", 15), ("pROTOCOL-TYPE-T1-NTT-ISDN", 16), ("pROTOCOL-TYPE-E1-AUSTEL-ISDN", 17), ("pROTOCOL-TYPE-E1-HKT-ISDN", 18), ("pROTOCOL-TYPE-E1-KOR-ISDN", 19), ("pROTOCOL-TYPE-T1-HKT-ISDN", 20), ("pROTOCOL-TYPE-E1-QSIG", 21), ("pROTOCOL-TYPE-E1-TNZ-22", 22), ("pROTOCOL-TYPE-T1-EXTRA-23", 23), ("pROTOCOL-TYPE-V5-1-AN", 24), ("pROTOCOL-TYPE-V5-1-LE", 25), ("pROTOCOL-TYPE-V5-2-AN", 26), ("pROTOCOL-TYPE-V5-2-LE", 27), ("pROTOCOL-TYPE-T1-IUA", 28), ("pROTOCOL-TYPE-E1-IUA", 29), ("pROTOCOL-TYPE-E1-EXTRA-30", 30), ("pROTOCOL-TYPE-E1-EXTRA-31", 31), ("pROTOCOL-TYPE-T1-EXTRA-32", 32), ("pROTOCOL-TYPE-T1-EXTRA-33", 33), ("pROTOCOL-TYPE-T1-EURO-ISDN", 34), ("pROTOCOL-TYPE-T1-DMS100-MERIDIAN-ISDN", 35), ("pROTOCOL-TYPE-T1-NI1-ISDN", 36)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: protocolType.setStatus('obsolete')
terminationSide = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 1, 4, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("acUSER-TERMINATION-SIDE", 0), ("acNETWORK-TERMINATION-SIDE", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: terminationSide.setStatus('obsolete')
dchConfig = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 1, 4, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("acDCH-CONFIG-PRIMARY", 0), ("acDCH-CONFIG-BACKUP", 1), ("acDCH-CONFIG-NFAS", 2), ("acDCH-NOT-ISDN-TRUNK", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dchConfig.setStatus('obsolete')
lineCode = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 1, 4, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("acB8ZS", 0), ("acAMI", 1), ("acHDB3", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lineCode.setStatus('obsolete')
lineBuildOutLoss = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 1, 4, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("ac0DB", 0), ("ac7-5DB", 1), ("ac15DB", 2), ("ac22-5DB", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lineBuildOutLoss.setStatus('obsolete')
lineBuildOutOverwrite = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 1, 4, 1, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("acNO-OVER-WRITE", 0), ("acOVER-WRITE", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lineBuildOutOverwrite.setStatus('obsolete')
lineBuildOutXPM0 = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 1, 4, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lineBuildOutXPM0.setStatus('obsolete')
lineBuildOutXPM1 = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 1, 4, 1, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lineBuildOutXPM1.setStatus('obsolete')
lineBuildOutXPM2 = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 1, 4, 1, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lineBuildOutXPM2.setStatus('obsolete')
traceLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 1, 4, 1, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 15))).clone(namedValues=NamedValues(("acNO-TRACE", 0), ("acFULL-ISDN-TRACE", 1), ("acLAYER3-ISDN-TRACE", 2), ("acONLY-ISDN-Q931-MSGS-TRACE", 3), ("acLAYER3-ISDN-TRACE-NO-DUPLICATION", 4), ("acFULL-ISDN-TRACE-WITH-DUPLICATION", 5), ("acISDN-Q931-RAW-DATA-TRACE", 6), ("acISDN-Q921-RAW-DATA-TRACE", 7), ("acISDN-Q931-Q921-RAW-DATA-TRACE", 8), ("acSS7-MTP2", 10), ("acSS7-MTP2-AND-APPLI", 11), ("acSS7-MTP2-SL-L3-NO-MSU", 12), ("acSS7-AAL", 15)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: traceLevel.setStatus('obsolete')
acV5InterfaceTrunkGroupId = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 1, 4, 1, 1, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 31))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acV5InterfaceTrunkGroupId.setStatus('obsolete')
acV5LinkIdOld = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 1, 4, 1, 1, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acV5LinkIdOld.setStatus('obsolete')
acPMStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 1, 4, 1, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acPMStatus.setStatus('obsolete')
acLedStatusColor = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 1, 4, 1, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("off", 0), ("red", 1), ("green", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acLedStatusColor.setStatus('obsolete')
acLedStatusRate = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 1, 4, 1, 1, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("steady", 0), ("blink", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acLedStatusRate.setStatus('obsolete')
acIsdnNfasInterfaceId = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 1, 4, 1, 1, 19), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acIsdnNfasInterfaceId.setStatus('obsolete')
acTrunkCasTableIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 1, 4, 1, 1, 20), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acTrunkCasTableIndex.setStatus('obsolete')
acTrunkAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 1, 4, 1, 1, 21), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("lock", 0), ("unLock", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acTrunkAdminState.setStatus('obsolete')
acPSTNIuaInterfaceId = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 1, 4, 1, 1, 22), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acPSTNIuaInterfaceId.setStatus('obsolete')
acIsdnQ931LayerResponseBehavior = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 1, 4, 1, 1, 23), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483647, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acIsdnQ931LayerResponseBehavior.setStatus('obsolete')
acIsdnIncomingCallsBehavior = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 1, 4, 1, 1, 24), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acIsdnIncomingCallsBehavior.setStatus('obsolete')
acIsdnOutgoingCallsBehavior = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 1, 4, 1, 1, 25), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acIsdnOutgoingCallsBehavior.setStatus('obsolete')
acIsdnGeneralCCBehavior = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 1, 4, 1, 1, 26), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acIsdnGeneralCCBehavior.setStatus('obsolete')
acIsdnNfasGroupNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 1, 4, 1, 1, 27), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acIsdnNfasGroupNumber.setStatus('obsolete')
mGCPSettings = MibIdentifier((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 1, 5))
callAgentIP = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 1, 5, 1), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: callAgentIP.setStatus('obsolete')
callAgentPort = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 1, 5, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65534))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: callAgentPort.setStatus('obsolete')
callAgentDomainName = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 1, 5, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: callAgentDomainName.setStatus('obsolete')
redundantAgentIP = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 1, 5, 4), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: redundantAgentIP.setStatus('obsolete')
redundantAgentPort = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 1, 5, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65534))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: redundantAgentPort.setStatus('obsolete')
redundantCallAgentDomainName = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 1, 5, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: redundantCallAgentDomainName.setStatus('obsolete')
dePopulatedChannelsNumber = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 1, 5, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dePopulatedChannelsNumber.setStatus('obsolete')
gateWayName = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 1, 5, 8), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: gateWayName.setStatus('obsolete')
endPointName = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 1, 5, 9), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 20))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: endPointName.setStatus('obsolete')
mGCPCommunicationLayerTimeout = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 1, 5, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 999))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mGCPCommunicationLayerTimeout.setStatus('obsolete')
acDefaultChannelSettings = MibIdentifier((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 1, 6))
acChDefaultDJBufMinDelay = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 1, 6, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 150))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acChDefaultDJBufMinDelay.setStatus('obsolete')
acChDefaultDJBufOptFactor = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 1, 6, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 13))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acChDefaultDJBufOptFactor.setStatus('obsolete')
acChDefaultCallerIDType = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 1, 6, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 16, 17, 18))).clone(namedValues=NamedValues(("callerIDStandard-Bellcore", 0), ("callerIDStandard-ETSI", 1), ("callerIDStandard-NTT", 2), ("callerIDStandard-DTMF-Based-ETSI", 16), ("callerIDStandard-Denmark", 17), ("callerIDStandard-Indian", 18)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acChDefaultCallerIDType.setStatus('obsolete')
acChDefaultFaxModemBypassM = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 1, 6, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 12))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acChDefaultFaxModemBypassM.setStatus('obsolete')
acChDefaultFaxModemRelayVolume = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 1, 6, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-18, -3))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acChDefaultFaxModemRelayVolume.setStatus('obsolete')
acChDefaultFaxRelayECMEnable = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 1, 6, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acChDefaultFaxRelayECMEnable.setStatus('obsolete')
acChDefaultFaxRelayMaxRate = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 1, 6, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("acRate2400bps", 0), ("acRate4800bps", 1), ("acRate7200bps", 2), ("acRate9600bps", 3), ("acRate12000bps", 4), ("acRate14400bps", 5)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acChDefaultFaxRelayMaxRate.setStatus('obsolete')
acChDefaultFaxTransportMode = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 1, 6, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("disable", 0), ("relayEnable", 1), ("byPassEnable", 2), ("eventsOnly", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acChDefaultFaxTransportMode.setStatus('obsolete')
acChDefaultModemRelayRedundancyDepth = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 1, 6, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acChDefaultModemRelayRedundancyDepth.setStatus('obsolete')
acChDefaultModemRelayMaxRate = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 1, 6, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("ac2400", 0), ("ac4800", 1), ("ac7200", 2), ("ac9600", 3), ("ac12000", 4), ("ac14400", 5)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acChDefaultModemRelayMaxRate.setStatus('obsolete')
acChDefaultUseT38orFRF11 = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 1, 6, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("fRF11", 0), ("acT38", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acChDefaultUseT38orFRF11.setStatus('obsolete')
acChDefaultV21ModemTransportType = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 1, 6, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("disable", 0), ("relayEnable", 1), ("byPassEnable", 2), ("eventsOnly", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acChDefaultV21ModemTransportType.setStatus('obsolete')
acChDefaultV22ModemTransportType = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 1, 6, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("disable", 0), ("relayEnable", 1), ("byPassEnable", 2), ("eventsOnly", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acChDefaultV22ModemTransportType.setStatus('obsolete')
acChDefaultV23ModemTransportType = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 1, 6, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("disable", 0), ("relayEnable", 1), ("byPassEnable", 2), ("eventsOnly", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acChDefaultV23ModemTransportType.setStatus('obsolete')
acChDefaultV32ModemTransportType = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 1, 6, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("disable", 0), ("relayEnable", 1), ("byPassEnable", 2), ("eventsOnly", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acChDefaultV32ModemTransportType.setStatus('obsolete')
acChDefaultV34ModemTransportType = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 1, 6, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("disable", 0), ("relayEnable", 1), ("byPassEnable", 2), ("eventsOnly", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acChDefaultV34ModemTransportType.setStatus('obsolete')
acChDefaultFaxModemBypassCoderType = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 1, 6, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 4, 5))).clone(namedValues=NamedValues(("g711Alaw-64", 0), ("g711Mulaw", 1), ("g726-32", 4), ("g726-40", 5)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acChDefaultFaxModemBypassCoderType.setStatus('obsolete')
acChDefaultFaxRelayRedundancyDepth = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 1, 6, 18), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acChDefaultFaxRelayRedundancyDepth.setStatus('obsolete')
acChDefaultT38ProtectionMode = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 1, 6, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("redundancyPackets", 0), ("fEC", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acChDefaultT38ProtectionMode.setStatus('obsolete')
acChDefaultDTMFVolume = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 1, 6, 20), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-31, 0))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acChDefaultDTMFVolume.setStatus('obsolete')
acChDefaultDTMFTransportType = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 1, 6, 21), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 7))).clone(namedValues=NamedValues(("acMuteDTMF", 0), ("acRelayDTMF", 1), ("acTransparentDTMF", 2), ("acRFC2833RalayDTMF", 3), ("acRFC2833RelayDecoderMute", 7)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acChDefaultDTMFTransportType.setStatus('obsolete')
acChDefaultMFTransportType = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 1, 6, 22), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("acMuteMF", 0), ("acRelayMF", 1), ("acTransparentMF", 2), ("acRFC2833RalayMF", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acChDefaultMFTransportType.setStatus('obsolete')
acChDefaultInputGain = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 1, 6, 23), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-32, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acChDefaultInputGain.setStatus('obsolete')
acChDefaultRTPRedundancyDepth = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 1, 6, 24), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acChDefaultRTPRedundancyDepth.setStatus('obsolete')
acChDefaultTestMode = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 1, 6, 25), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("coderLoopback", 0), ("pCMLoopback", 1), ("toneInjection", 2), ("noLoopback", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acChDefaultTestMode.setStatus('obsolete')
acChDefaultVoiceVolume = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 1, 6, 26), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-32, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acChDefaultVoiceVolume.setStatus('obsolete')
acChDefaultM = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 1, 6, 27), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 12))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acChDefaultM.setStatus('obsolete')
acChDefaultFlashHookPeriod = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 1, 6, 28), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acChDefaultFlashHookPeriod.setStatus('obsolete')
acChDefaultDTMFDetectionPoint = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 1, 6, 29), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acChDefaultDTMFDetectionPoint.setStatus('obsolete')
acChDefaultRtpIpTos = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 1, 6, 30), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 15))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acChDefaultRtpIpTos.setStatus('obsolete')
acChDefaultRtpIpPrecedence = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 1, 6, 31), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acChDefaultRtpIpPrecedence.setStatus('obsolete')
acChDefaultEchoCancler = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 1, 6, 32), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acChDefaultEchoCancler.setStatus('obsolete')
acChDefaultSilenceSuppression = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 1, 6, 33), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("sILENCE-COMPRESION-DISABLE", 0), ("sILENCE-COMPRESION-ENABLE", 1), ("sILENCE-COMPRESION-ENABLE-NOISE-ADAPTATION-DISABLE", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acChDefaultSilenceSuppression.setStatus('obsolete')
acChDefaultEchoCanclerHybridLoss = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 1, 6, 34), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("eCHybridLoss6DBM", 0), ("eCHybridLoss9DBM", 1), ("eCHybridLoss0DBM", 2), ("eCHybridLoss3DBM", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acChDefaultEchoCanclerHybridLoss.setStatus('obsolete')
acChDefaultPacketizationPeriod = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 1, 6, 35), Integer32().subtype(subtypeSpec=ValueRangeConstraint(5, 80))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acChDefaultPacketizationPeriod.setStatus('obsolete')
aTMSettings = MibIdentifier((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 1, 7))
vPMask = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 1, 7, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vPMask.setStatus('obsolete')
vCMask = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 1, 7, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vCMask.setStatus('obsolete')
externalClk = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 1, 7, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 0))).clone(namedValues=NamedValues(("acATMUtopiaExternalClock", 1), ("acATMUtopiaInternalClock", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: externalClk.setStatus('obsolete')
aTMLoopBack = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 1, 7, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("loopbackDisabled", 0), ("loopbackEnabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aTMLoopBack.setStatus('obsolete')
utopiaSlave = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 1, 7, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("aTM-UTOPIA-MASTER", 0), ("aTM-UTOPIA-SLAVE", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: utopiaSlave.setStatus('obsolete')
multyPhy = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 1, 7, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("singlePhy", 0), ("multiPhy", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: multyPhy.setStatus('obsolete')
slavePhyNum = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 1, 7, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: slavePhyNum.setStatus('obsolete')
utopiaBus16 = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 1, 7, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("acATMUtopiaBusWidth16bit", 0), ("acATMUtopiaBusWidth8bit", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: utopiaBus16.setStatus('obsolete')
aTMPHYType = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 1, 7, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("acOC3", 0), ("acUtopia", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aTMPHYType.setStatus('obsolete')
disablePayloadScrambling = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 1, 7, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("enable", 0), ("disable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: disablePayloadScrambling.setStatus('obsolete')
pHYClkSource = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 1, 7, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("acPhyInternalClock", 0), ("acPhyExternalClock", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pHYClkSource.setStatus('obsolete')
sendIdleCASUponLinkFail = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 1, 7, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("acATMSendIdleCASUponLinkFail-Disabled", 0), ("acATMSendIdleCASUponLinkFail-Enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sendIdleCASUponLinkFail.setStatus('obsolete')
masterSlaveMode = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 1, 7, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("acATM-MasterMode-CO-IWF", 0), ("acATM-SlaveMode-CP-IWF", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: masterSlaveMode.setStatus('obsolete')
vccProfile = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 1, 7, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("ac240VCCs-8CIDsperVCC", 0), ("ac105VCCs-24CIDsperVCC", 1), ("ac84VCCs-32CIDsperVCC", 2), ("ac14VCCs-240CIDsperVCC", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vccProfile.setStatus('obsolete')
tPNCPVPI = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 1, 7, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tPNCPVPI.setStatus('obsolete')
tPNCPVCI = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 1, 7, 16), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tPNCPVCI.setStatus('obsolete')
sAALLink0VPI = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 1, 7, 17), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sAALLink0VPI.setStatus('obsolete')
sAALLink0VCI = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 1, 7, 18), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sAALLink0VCI.setStatus('obsolete')
sAALLink1VPI = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 1, 7, 19), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sAALLink1VPI.setStatus('obsolete')
sAALLink1VCI = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 1, 7, 20), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sAALLink1VCI.setStatus('obsolete')
acSS7Settings = MibIdentifier((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 1, 8))
acSS7SettingsTable = MibTable((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 1, 8, 1), )
if mibBuilder.loadTexts: acSS7SettingsTable.setStatus('obsolete')
acSS7SettingsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 1, 8, 1, 1), ).setIndexNames((0, "AcBoard", "acSS7LinkId"))
if mibBuilder.loadTexts: acSS7SettingsEntry.setStatus('obsolete')
acSS7LinkId = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 1, 8, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 8))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acSS7LinkId.setStatus('obsolete')
acSS7traceLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 1, 8, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 9, 10, 11, 12, 15))).clone(namedValues=NamedValues(("acNO-TRACE", 0), ("acFULL-TRACE", 1), ("acISDN-IUA-TRACE", 9), ("acSS7-MTP2", 10), ("acSS7-MTP2-AND-APPLI", 11), ("acSS7-MTP2-SL-L3-NO-MSU", 12), ("acSS7-AAL", 15)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acSS7traceLevel.setStatus('obsolete')
acConfigFiles = MibIdentifier((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 1, 11))
acFxsCoefficients = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 1, 11, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acFxsCoefficients.setStatus('obsolete')
acFxoCoefficients = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 1, 11, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acFxoCoefficients.setStatus('obsolete')
acCptFile = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 1, 11, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acCptFile.setStatus('obsolete')
acVpFile = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 1, 11, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acVpFile.setStatus('obsolete')
acCasTables = MibIdentifier((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 1, 11, 21))
acCasTablesTable = MibTable((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 1, 11, 21, 1), )
if mibBuilder.loadTexts: acCasTablesTable.setStatus('obsolete')
acCasTablesEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 1, 11, 21, 1, 1), ).setIndexNames((0, "AcBoard", "acCasTableIndex"))
if mibBuilder.loadTexts: acCasTablesEntry.setStatus('obsolete')
acCasTableIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 1, 11, 21, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acCasTableIndex.setStatus('obsolete')
acCasTabeName = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 1, 11, 21, 1, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acCasTabeName.setStatus('obsolete')
acFxs = MibIdentifier((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 1, 12))
acPolarityReversalType = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 1, 12, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("soft", 0), ("hard", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acPolarityReversalType.setStatus('obsolete')
megacoSettings = MibIdentifier((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 1, 13))
megacoCurrentProfile = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 1, 13, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 8191))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: megacoCurrentProfile.setStatus('obsolete')
megacoGatewayName = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 1, 13, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: megacoGatewayName.setStatus('obsolete')
megacoEndpointName = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 1, 13, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 20))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: megacoEndpointName.setStatus('obsolete')
megacoTrunkName = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 1, 13, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 20))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: megacoTrunkName.setStatus('obsolete')
megacoActiveCallAgentIp = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 1, 13, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 20))).setMaxAccess("readonly")
if mibBuilder.loadTexts: megacoActiveCallAgentIp.setStatus('obsolete')
megacoActiveCallAgentPort = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 1, 13, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 32767))).setMaxAccess("readonly")
if mibBuilder.loadTexts: megacoActiveCallAgentPort.setStatus('obsolete')
megacoCheckLegalityOfMGC = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 1, 13, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: megacoCheckLegalityOfMGC.setStatus('obsolete')
megacoCallAgents = MibIdentifier((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 1, 13, 7))
megacoCallAgentsTable = MibTable((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 1, 13, 7, 1), )
if mibBuilder.loadTexts: megacoCallAgentsTable.setStatus('obsolete')
megacoCallAgentsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 1, 13, 7, 1, 1), ).setIndexNames((0, "AcBoard", "megacoCallAgentId"))
if mibBuilder.loadTexts: megacoCallAgentsEntry.setStatus('obsolete')
megacoCallAgentId = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 1, 13, 7, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4))).setMaxAccess("readonly")
if mibBuilder.loadTexts: megacoCallAgentId.setStatus('obsolete')
megacoCallAgentIp = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 1, 13, 7, 1, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 20))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: megacoCallAgentIp.setStatus('obsolete')
megacoCallAgentPort = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 1, 13, 7, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 32767))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: megacoCallAgentPort.setStatus('obsolete')
megacoCallAgentIsUsed = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 1, 13, 7, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: megacoCallAgentIsUsed.setStatus('obsolete')
acPSTNParameters = MibIdentifier((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 1, 14))
acQ931RELAYMODE = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 1, 14, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 3))).clone(namedValues=NamedValues(("none", 0), ("activateLAPDmessaging", 1), ("layer3-IS-IUA", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acQ931RELAYMODE.setStatus('obsolete')
acIsdnDuplicateQ931BuffMode = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 1, 14, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acIsdnDuplicateQ931BuffMode.setStatus('obsolete')
acPSTNCASTableNum = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 1, 14, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPSTNCASTableNum.setStatus('obsolete')
aMsConfiguration = MibIdentifier((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 1, 51))
amsNumOfConferencePorts = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 1, 51, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 480))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: amsNumOfConferencePorts.setStatus('obsolete')
amsNumOfTestTrunkPorts = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 1, 51, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 480))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: amsNumOfTestTrunkPorts.setStatus('obsolete')
amsNumOfLawfulInterceptPorts = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 1, 51, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 480))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: amsNumOfLawfulInterceptPorts.setStatus('obsolete')
amsNumOfAnnouncementPorts = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 1, 51, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 480))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: amsNumOfAnnouncementPorts.setStatus('obsolete')
amsApsIpAddress = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 1, 51, 5), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: amsApsIpAddress.setStatus('obsolete')
amsApsPort = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 1, 51, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 64000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: amsApsPort.setStatus('obsolete')
amsPrimaryLanguage = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 1, 51, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(15, 0, 1, 16, 19, 10, 2, 3, 17, 4, 20, 18, 6, 5, 7, 8, 9, 11, 12, 13, 14, 21, 22, 100))).clone(namedValues=NamedValues(("isoLangBasque", 15), ("amsLangBelgianDutch", 0), ("amsLangCantonese", 1), ("isoLangCatalan", 16), ("isoLangCzech", 19), ("isoLangDutch", 10), ("isoLangEnglish", 2), ("isoLangFrench", 3), ("isoLangGallegan", 17), ("isoLangGerman", 4), ("isoLangGreek", 20), ("isoLangHebrew", 18), ("isoLangJapanese", 6), ("isoLangItalian", 5), ("isoLangKorean", 7), ("isoLangMalay", 8), ("isoLangMandarin", 9), ("isoLangPortuguese", 11), ("isoLangSpanish", 12), ("isoLangTagalog", 13), ("isoLangThai", 14), ("isoLangTurkish", 21), ("isoLangVietnamese", 22), ("amsLangBad", 100)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: amsPrimaryLanguage.setStatus('obsolete')
amsSecondaryLanguage = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 1, 51, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(15, 0, 1, 16, 19, 10, 2, 3, 17, 4, 20, 18, 6, 5, 7, 8, 9, 11, 12, 13, 14, 21, 22, 100))).clone(namedValues=NamedValues(("isoLangBasque", 15), ("amsLangBelgianDutch", 0), ("amsLangCantonese", 1), ("isoLangCatalan", 16), ("isoLangCzech", 19), ("isoLangDutch", 10), ("isoLangEnglish", 2), ("isoLangFrench", 3), ("isoLangGallegan", 17), ("isoLangGerman", 4), ("isoLangGreek", 20), ("isoLangHebrew", 18), ("isoLangJapanese", 6), ("isoLangItalian", 5), ("isoLangKorean", 7), ("isoLangMalay", 8), ("isoLangMandarin", 9), ("isoLangPortuguese", 11), ("isoLangSpanish", 12), ("isoLangTagalog", 13), ("isoLangThai", 14), ("isoLangTurkish", 21), ("isoLangVietnamese", 22), ("amsLangBad", 100)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: amsSecondaryLanguage.setStatus('obsolete')
amsProfile = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 1, 51, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: amsProfile.setStatus('obsolete')
amsAASPackagesProfile = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 1, 51, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("td5Starndard", 0), ("h2489Standard", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: amsAASPackagesProfile.setStatus('obsolete')
acFeatureKey = MibIdentifier((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 1, 90))
acFeatureKeyString = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 1, 90, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acFeatureKeyString.setStatus('obsolete')
acActiveFeaturesList = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 1, 90, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 484))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acActiveFeaturesList.setStatus('obsolete')
supplementary = MibIdentifier((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 1, 99))
supplementaryField = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 1, 99, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: supplementaryField.setStatus('obsolete')
boardInformation = MibIdentifier((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 2))
boardType = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 2, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 8, 10, 11, 12, 13, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56))).clone(namedValues=NamedValues(("unKnownBoard", 0), ("tP-08", 1), ("mEDIAPACK-108", 2), ("mEDIAPACK-124", 3), ("tP-240", 8), ("tP-610-CL120", 10), ("tP-600", 11), ("tP-600-IPMEDIA", 12), ("tP-9800-C", 13), ("tPM800", 16), ("tPM800-RDK", 17), ("tPM800B", 18), ("tPM800B-RDK", 19), ("tP1600", 20), ("tP-240-IpMedia", 21), ("tPM1100", 22), ("trunkPack-260-IpMedia", 23), ("tP1610", 24), ("mP-104", 25), ("mP-102", 26), ("tP-04", 27), ("tP-02", 28), ("tP-1610-SB", 29), ("tP-1610-IpMedia", 30), ("tP-MEDIANT2000", 31), ("tP-STRETTO2000", 32), ("tP-IPMServer2000", 33), ("tP-2810", 34), ("tP-260-UN-IpMedia", 35), ("tP-260-IpMedia-30Ch", 36), ("tP-260-IpMedia-60Ch", 37), ("tP-260-IpMedia-120Ch", 38), ("tP-260RT-IpMedia-30Ch", 39), ("tP-260RT-IpMedia-60Ch", 40), ("tP-260RT-IpMedia-120Ch", 41), ("tP-260", 42), ("tP-260-UN", 43), ("tPM1100-PCM", 44), ("tP-6310", 45), ("tPM6300", 46), ("mediant1000", 47), ("ipMedia3000", 48), ("mediant3000", 49), ("stretto3000", 50), ("tP-6310-IpMedia", 51), ("tP-6310-SB", 52), ("aTP-1610", 53), ("aTP-260", 54), ("aTP-260-UN", 55), ("mP-118", 56)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: boardType.setStatus('obsolete')
boardName = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 2, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 20))).setMaxAccess("readonly")
if mibBuilder.loadTexts: boardName.setStatus('obsolete')
serialNum = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 2, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: serialNum.setStatus('obsolete')
dSPCount = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 2, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dSPCount.setStatus('obsolete')
channelsCount = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 2, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: channelsCount.setStatus('obsolete')
cPUSpeed = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 2, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cPUSpeed.setStatus('obsolete')
softwareVersion = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 2, 7), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 20))).setMaxAccess("readonly")
if mibBuilder.loadTexts: softwareVersion.setStatus('obsolete')
trunkPackSoftwareDate = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 2, 8), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 40))).setMaxAccess("readonly")
if mibBuilder.loadTexts: trunkPackSoftwareDate.setStatus('obsolete')
slotNumber = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 2, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: slotNumber.setStatus('obsolete')
iniFileVersion = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 2, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: iniFileVersion.setStatus('obsolete')
acDspType = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 2, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acDspType.setStatus('obsolete')
acFlashVersion = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 2, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acFlashVersion.setStatus('obsolete')
acBoardFxsOrFxo = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 2, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("fXO", 0), ("fXS", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acBoardFxsOrFxo.setStatus('obsolete')
acTrunkslCount = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 2, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acTrunkslCount.setStatus('obsolete')
acDspVersionTemplate = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 2, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acDspVersionTemplate.setStatus('obsolete')
acFirstPortDuplexMode = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 2, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("halfDuplex", 0), ("fullDuplex", 1), ("forceModeValue", 2), ("notAvailable", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acFirstPortDuplexMode.setStatus('obsolete')
acFirstPortSpeed = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 2, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(2, 3, 10, 100))).clone(namedValues=NamedValues(("forceModeValue", 2), ("notAvailable", 3), ("ac10Mbps", 10), ("ac100Mbps", 100)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acFirstPortSpeed.setStatus('obsolete')
acMeanFreeChannels = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 2, 18), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acMeanFreeChannels.setStatus('obsolete')
acMaxFreeChannels = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 2, 19), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acMaxFreeChannels.setStatus('obsolete')
acSysUpTime = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 2, 20), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acSysUpTime.setStatus('obsolete')
acPhysicalModCount = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 2, 21), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("soloist", 0), ("second", 1), ("first", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPhysicalModCount.setStatus('obsolete')
acBoardTemperature = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 2, 22), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acBoardTemperature.setStatus('obsolete')
channelConfiguration = MibIdentifier((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 3))
voiceSettings = MibIdentifier((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 3, 2))
voiceSettingsTable = MibTable((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 3, 2, 1), )
if mibBuilder.loadTexts: voiceSettingsTable.setStatus('obsolete')
voiceSettingsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 3, 2, 1, 1), ).setIndexNames((0, "AcBoard", "cID"))
if mibBuilder.loadTexts: voiceSettingsEntry.setStatus('obsolete')
cID = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 3, 2, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cID.setStatus('deprecated')
coder = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 3, 2, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 40, 41, 42, 45, 46, 47, 50, 51, 52, 53, 54, 55, 56, 57, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78))).clone(namedValues=NamedValues(("g711Alaw", 0), ("g711Mulaw", 1), ("g726-16", 2), ("g726-24", 3), ("g726-32", 4), ("g726-40", 5), ("g727-16", 6), ("g727-24-16", 7), ("g727-24", 8), ("g727-32-16", 9), ("g727-32-24", 10), ("g727-32", 11), ("g727-40-16", 12), ("g727-40-24", 13), ("g727-40-32", 14), ("g723Low", 15), ("g723High", 16), ("g729", 17), ("gSM", 19), ("gSM610MS", 20), ("transparent", 22), ("g728", 23), ("hDLCCoder", 24), ("netCoder-4-8", 25), ("netCoder-5-6", 26), ("netCoder-6-4", 27), ("netCoder-7-2", 28), ("netCoder-8", 29), ("netCoder-8-8", 30), ("netCoder-9-6", 31), ("eVRC", 32), ("eVRC-TFO", 33), ("qCELP-8", 34), ("qCELP-8-TFO", 35), ("qCELP-13", 36), ("qCELP-13-TFO", 37), ("noCoder", 40), ("modemAnswer", 41), ("modemCall", 42), ("g711Alaw-5-5", 45), ("g711Mulaw-5-5", 46), ("g726-32-5-5", 47), ("aMR-4-75", 50), ("aMR-5-15", 51), ("aMR-5-9", 52), ("aMR-6-7", 53), ("aMR-7-4", 54), ("aMR-7-95", 55), ("aMR-10-2", 56), ("aMR-12-2", 57), ("iLBC-15", 63), ("iLBC-13", 64), ("bV-16", 65), ("acAMRWB-6-6", 66), ("acAMRWB-8-85", 67), ("acAMRWB-12-65", 68), ("acAMRWB-14-25", 69), ("acAMRWB-15-85", 70), ("acAMRWB-18-25", 71), ("acAMRWB-19-85", 72), ("acAMRWB-23-05", 73), ("acAMRWB-23-85", 74), ("acG722-48K", 75), ("acG722-56K", 76), ("acG722-64K", 77), ("acDPNSSCoder", 78)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: coder.setStatus('deprecated')
eCE = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 3, 2, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: eCE.setStatus('deprecated')
sCE = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 3, 2, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sCE.setStatus('deprecated')
pFE = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 3, 2, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pFE.setStatus('deprecated')
hPFE = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 3, 2, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hPFE.setStatus('deprecated')
testMode = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 3, 2, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("coderLoopback", 0), ("pCMLoopback", 1), ("toneInjection", 2), ("noLoopback", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: testMode.setStatus('deprecated')
voiceVolume = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 3, 2, 1, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 63))).setMaxAccess("readonly")
if mibBuilder.loadTexts: voiceVolume.setStatus('deprecated')
inputGain = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 3, 2, 1, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 63))).setMaxAccess("readonly")
if mibBuilder.loadTexts: inputGain.setStatus('deprecated')
m = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 3, 2, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 12))).setMaxAccess("readonly")
if mibBuilder.loadTexts: m.setStatus('deprecated')
rTPRedundancyDepth = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 3, 2, 1, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rTPRedundancyDepth.setStatus('deprecated')
eCLength = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 3, 2, 1, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10))).clone(namedValues=NamedValues(("eCLength10MSec", 0), ("eCLength15Msec", 1), ("eCLength20Msec", 2), ("eCLength25Msec", 3), ("eCLength30Msec", 4), ("eCLength35Msec", 5), ("eCLength40Msec", 6), ("eCLength45Msec", 7), ("eCLength50Msec", 8), ("eCLength55Msec", 9), ("eCLength60Msec", 10)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: eCLength.setStatus('deprecated')
eCHybridLoss = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 3, 2, 1, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("loss6DB", 0), ("loss9DB", 1), ("loss0DB", 2), ("loss3DB", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: eCHybridLoss.setStatus('deprecated')
faxModemSettings = MibIdentifier((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 3, 3))
faxModemSettingsTable = MibTable((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 3, 3, 1), )
if mibBuilder.loadTexts: faxModemSettingsTable.setStatus('obsolete')
faxModemSettingsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 3, 3, 1, 1), ).setIndexNames((0, "AcBoard", "cID"))
if mibBuilder.loadTexts: faxModemSettingsEntry.setStatus('obsolete')
fAXTransportType = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 3, 3, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("transparent", 0), ("relay", 1), ("bypass", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fAXTransportType.setStatus('obsolete')
acCallerIDType = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 3, 3, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("transparent", 0), ("relay", 1), ("bypass", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acCallerIDType.setStatus('obsolete')
v21ModemTransportType = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 3, 3, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("transparent", 0), ("relay", 1), ("bypass", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: v21ModemTransportType.setStatus('obsolete')
v22ModemTransportType = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 3, 3, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("transparent", 0), ("relay", 1), ("bypass", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: v22ModemTransportType.setStatus('obsolete')
v23ModemTransportType = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 3, 3, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("transparent", 0), ("relay", 1), ("bypass", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: v23ModemTransportType.setStatus('obsolete')
v32ModemTransportType = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 3, 3, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("transparent", 0), ("relay", 1), ("bypass", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: v32ModemTransportType.setStatus('obsolete')
v34ModemTransportType = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 3, 3, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("transparent", 0), ("relay", 1), ("bypass", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: v34ModemTransportType.setStatus('obsolete')
faxRelayMaxRate = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 3, 3, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("ac2400", 0), ("ac4800", 1), ("ac7200", 2), ("ac9600", 3), ("ac12000", 4), ("ac14400", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: faxRelayMaxRate.setStatus('obsolete')
modemRelayMaxRate = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 3, 3, 1, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("ac2400", 0), ("ac4800", 1), ("ac7200", 2), ("ac9600", 3), ("ac12000", 4), ("ac14400", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: modemRelayMaxRate.setStatus('obsolete')
faxRelayECMEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 3, 3, 1, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: faxRelayECMEnable.setStatus('obsolete')
t38FaxRelayProtectionMode = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 3, 3, 1, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("redundancyPackets", 0), ("fEC", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: t38FaxRelayProtectionMode.setStatus('obsolete')
faxRelayRedundancyDepth = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 3, 3, 1, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4))).setMaxAccess("readonly")
if mibBuilder.loadTexts: faxRelayRedundancyDepth.setStatus('obsolete')
enhancedFaxRelayRedundancyDepth = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 3, 3, 1, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4))).setMaxAccess("readonly")
if mibBuilder.loadTexts: enhancedFaxRelayRedundancyDepth.setStatus('obsolete')
modemRelayRedundancyDepth = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 3, 3, 1, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: modemRelayRedundancyDepth.setStatus('obsolete')
faxModemRelayVolume = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 3, 3, 1, 1, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-18, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: faxModemRelayVolume.setStatus('obsolete')
faxModemBypassCoderType = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 3, 3, 1, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31))).clone(namedValues=NamedValues(("g711Alaw", 0), ("g711Mulaw", 1), ("g726-16", 2), ("g726-24", 3), ("g726-32", 4), ("g726-40", 5), ("g727-16", 6), ("g727-24-16", 7), ("g727-24", 8), ("g727-32-16", 9), ("g727-32-24", 10), ("g727-32", 11), ("g727-40-16", 12), ("g727-40-24", 13), ("g727-40-32", 14), ("g723Low", 15), ("g723High", 16), ("g729", 17), ("gSM", 19), ("gSM610MS", 20), ("transparent", 22), ("g728", 23), ("hDLCCoder", 24), ("netCoder-4-8", 25), ("netCoder-5-6", 26), ("netCoder-6-4", 27), ("netCoder-7-2", 28), ("netCoder-8", 29), ("netCoder-8-8", 30), ("netCoder-9-6", 31)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: faxModemBypassCoderType.setStatus('obsolete')
faxModemBypassM = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 3, 3, 1, 1, 17), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: faxModemBypassM.setStatus('obsolete')
useT38orFRF11 = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 3, 3, 1, 1, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("fRF11", 0), ("t38", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: useT38orFRF11.setStatus('obsolete')
dJBSettings = MibIdentifier((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 3, 4))
dJBSettingsTable = MibTable((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 3, 4, 1), )
if mibBuilder.loadTexts: dJBSettingsTable.setStatus('obsolete')
dJBSettingsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 3, 4, 1, 1), ).setIndexNames((0, "AcBoard", "cID"))
if mibBuilder.loadTexts: dJBSettingsEntry.setStatus('obsolete')
dJBufMinDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 3, 4, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 150))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dJBufMinDelay.setStatus('obsolete')
dJBufOptFactor = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 3, 4, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 12))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dJBufOptFactor.setStatus('obsolete')
channelTDMBusSettings = MibIdentifier((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 3, 5))
channelTDMBusSettingsTable = MibTable((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 3, 5, 1), )
if mibBuilder.loadTexts: channelTDMBusSettingsTable.setStatus('obsolete')
channelTDMBusSettingsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 3, 5, 1, 1), ).setIndexNames((0, "AcBoard", "cID"))
if mibBuilder.loadTexts: channelTDMBusSettingsEntry.setStatus('obsolete')
tDMBusInputPort = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 3, 5, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 127))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tDMBusInputPort.setStatus('obsolete')
tDMBusInputChannel = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 3, 5, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 31))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tDMBusInputChannel.setStatus('obsolete')
tDMBusOutputDisable = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 3, 5, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tDMBusOutputDisable.setStatus('obsolete')
tDMBusOutputPort = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 3, 5, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tDMBusOutputPort.setStatus('obsolete')
tDMBusOutputChannel = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 3, 5, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tDMBusOutputChannel.setStatus('obsolete')
transportSettings = MibIdentifier((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 3, 6))
transportSettingsTable = MibTable((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 3, 6, 1), )
if mibBuilder.loadTexts: transportSettingsTable.setStatus('obsolete')
transportSettingsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 3, 6, 1, 1), ).setIndexNames((0, "AcBoard", "cID"))
if mibBuilder.loadTexts: transportSettingsEntry.setStatus('obsolete')
useNIorPCI = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 3, 6, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setMaxAccess("readonly")
if mibBuilder.loadTexts: useNIorPCI.setStatus('obsolete')
disableSoftIPLoopback = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 3, 6, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setMaxAccess("readonly")
if mibBuilder.loadTexts: disableSoftIPLoopback.setStatus('obsolete')
uniDirectionalRTP = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 3, 6, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: uniDirectionalRTP.setStatus('obsolete')
rTPRTCPSettings = MibIdentifier((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 3, 7))
rTPRTCPSettingsTable = MibTable((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 3, 7, 1), )
if mibBuilder.loadTexts: rTPRTCPSettingsTable.setStatus('obsolete')
rTPRTCPSettingsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 3, 7, 1, 1), ).setIndexNames((0, "AcBoard", "cID"))
if mibBuilder.loadTexts: rTPRTCPSettingsEntry.setStatus('obsolete')
cNAME = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 3, 7, 1, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cNAME.setStatus('obsolete')
iPPrecedence = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 3, 7, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readonly")
if mibBuilder.loadTexts: iPPrecedence.setStatus('obsolete')
iPTOS = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 3, 7, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: iPTOS.setStatus('obsolete')
localRTPPort = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 3, 7, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: localRTPPort.setStatus('obsolete')
remoteRTPAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 3, 7, 1, 1, 5), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: remoteRTPAddr.setStatus('obsolete')
remoteRTPPort = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 3, 7, 1, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: remoteRTPPort.setStatus('obsolete')
remoteT38Addr = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 3, 7, 1, 1, 7), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: remoteT38Addr.setStatus('obsolete')
remoteT38Port = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 3, 7, 1, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: remoteT38Port.setStatus('obsolete')
rTCPMeanTxInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 3, 7, 1, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(100, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rTCPMeanTxInterval.setStatus('obsolete')
rxRTPPayloadType = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 3, 7, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2, 127))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rxRTPPayloadType.setStatus('obsolete')
txRTPPayloadType = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 3, 7, 1, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2, 127))).setMaxAccess("readonly")
if mibBuilder.loadTexts: txRTPPayloadType.setStatus('obsolete')
channelStatus = MibIdentifier((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 4))
channelStatusTable = MibTable((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 4, 1), )
if mibBuilder.loadTexts: channelStatusTable.setStatus('obsolete')
channelStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 4, 1, 1), ).setIndexNames((0, "AcBoard", "cID"))
if mibBuilder.loadTexts: channelStatusEntry.setStatus('obsolete')
rTPActive = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 4, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("notActive", 0), ("active", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rTPActive.setStatus('deprecated')
bypassNIC = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 4, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bypassNIC.setStatus('deprecated')
pendingIdle = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 4, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pendingIdle.setStatus('obsolete')
txSilencePeriod = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 4, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setMaxAccess("readonly")
if mibBuilder.loadTexts: txSilencePeriod.setStatus('deprecated')
rxSilencePeriod = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 4, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rxSilencePeriod.setStatus('deprecated')
txFaxMode = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 4, 1, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setMaxAccess("readonly")
if mibBuilder.loadTexts: txFaxMode.setStatus('deprecated')
rxFaxMode = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 4, 1, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rxFaxMode.setStatus('deprecated')
txDTMFPeriod = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 4, 1, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setMaxAccess("readonly")
if mibBuilder.loadTexts: txDTMFPeriod.setStatus('deprecated')
rxDTMFPeriod = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 4, 1, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rxDTMFPeriod.setStatus('deprecated')
packetsToDSPCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 4, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: packetsToDSPCnt.setStatus('deprecated')
jitterBufErrorCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 4, 1, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: jitterBufErrorCnt.setStatus('obsolete')
jitterBufForcedPacketLost = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 4, 1, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: jitterBufForcedPacketLost.setStatus('obsolete')
jitterBufForcedPacketAddition = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 4, 1, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: jitterBufForcedPacketAddition.setStatus('obsolete')
jitterBufUnderRunCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 4, 1, 1, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: jitterBufUnderRunCnt.setStatus('deprecated')
jitterBufOverRunCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 4, 1, 1, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: jitterBufOverRunCnt.setStatus('deprecated')
jitterBufAccumDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 4, 1, 1, 16), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: jitterBufAccumDelay.setStatus('obsolete')
fXSorFXO = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 4, 1, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 0, 1))).clone(namedValues=NamedValues(("nonAnalogDevice", -1), ("fXO", 0), ("fXS", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fXSorFXO.setStatus('deprecated')
channelHookState = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 4, 1, 1, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 0, 1))).clone(namedValues=NamedValues(("nonAnalogDevice", -1), ("offHook", 0), ("onHook", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: channelHookState.setStatus('deprecated')
notifications = MibIdentifier((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 5))
reset = MibIdentifier((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 6))
remoteReset = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 6, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: remoteReset.setStatus('obsolete')
acSetDefaults = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 6, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acSetDefaults.setStatus('obsolete')
acgwAdminState = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 6, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("locked", 0), ("shuttingDown", 1), ("unlocked", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acgwAdminState.setStatus('obsolete')
acgwAdminStateLockControl = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 6, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acgwAdminStateLockControl.setStatus('obsolete')
acSaveConfigToSystem = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 6, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acSaveConfigToSystem.setStatus('obsolete')
acOperationalState = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 6, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acOperationalState.setStatus('obsolete')
remoteResetControl = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 6, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("resetFromFlashAfterBurn", 1), ("resetFromFlashNoBurn", 2), ("resetFromBootP", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: remoteResetControl.setStatus('obsolete')
acTrap = MibIdentifier((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 21))
acBoardTrapGlobals = MibIdentifier((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 21, 1))
acBoardTrapGlobalsName = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 21, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acBoardTrapGlobalsName.setStatus('deprecated')
acBoardTrapGlobalsTextualDescription = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 21, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 200))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acBoardTrapGlobalsTextualDescription.setStatus('deprecated')
acBoardTrapGlobalsSource = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 21, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acBoardTrapGlobalsSource.setStatus('deprecated')
acBoardTrapGlobalsSeverity = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 21, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("cleared", 0), ("indeterminate", 1), ("warning", 2), ("minor", 3), ("major", 4), ("critical", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acBoardTrapGlobalsSeverity.setStatus('deprecated')
acBoardTrapGlobalsUniqID = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 21, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 32000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acBoardTrapGlobalsUniqID.setStatus('deprecated')
acBoardTrapGlobalsType = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 21, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("other", 0), ("communicationsAlarm", 1), ("qualityOfServiceAlarm", 2), ("processingErrorAlarm", 3), ("equipmentAlarm", 4), ("environmentalAlarm", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acBoardTrapGlobalsType.setStatus('deprecated')
acBoardTrapGlobalsProbableCause = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 21, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74))).clone(namedValues=NamedValues(("other", 0), ("adapterError", 1), ("applicationSubsystemFailure", 2), ("bandwidthReduced", 3), ("callEstablishmentError", 4), ("communicationsProtocolError", 5), ("communicationsSubsystemFailure", 6), ("configurationOrCustomizationError", 7), ("congestion", 8), ("corruptData", 9), ("cpuCyclesLimitExceeded", 10), ("dataSetOrModemError", 11), ("degradedSignal", 12), ("dteDceInterfaceError", 13), ("enclosureDoorOpen", 14), ("equipmentMalfunction", 15), ("excessiveVibration", 16), ("fileError", 17), ("fireDetected", 18), ("floodDetected", 19), ("framingError", 20), ("heatingVentCoolingSystemProblem", 21), ("humidityUnacceptable", 22), ("inputOutputDeviceError", 23), ("inputDeviceError", 24), ("lanError", 25), ("leakDetected", 26), ("localNodeTransmissionError", 27), ("lossOfFrame", 28), ("lossOfSignal", 29), ("materialSupplyExhausted", 30), ("multiplexerProblem", 31), ("outOfMemory", 32), ("ouputDeviceError", 33), ("performanceDegraded", 34), ("powerProblem", 35), ("pressureUnacceptable", 36), ("processorProblem", 37), ("pumpFailure", 38), ("queueSizeExceeded", 39), ("receiveFailure", 40), ("receiverFailure", 41), ("remoteNodeTransmissionError", 42), ("resourceAtOrNearingCapacity", 43), ("responseTimeExecessive", 44), ("retransmissionRateExcessive", 45), ("softwareError", 46), ("softwareProgramAbnormallyTerminated", 47), ("softwareProgramError", 48), ("storageCapacityProblem", 49), ("temperatureUnacceptable", 50), ("thresholdCrossed", 51), ("timingProblem", 52), ("toxicLeakDetected", 53), ("transmitFailure", 54), ("transmitterFailure", 55), ("underlyingResourceUnavailable", 56), ("versionMismatch", 57), ("authenticationFailure", 58), ("breachOfConfidentiality", 59), ("cableTamper", 60), ("delayedInformation", 61), ("denialOfService", 62), ("duplicateInformation", 63), ("informationMissing", 64), ("informationModificationDetected", 65), ("informationOutOfSequence", 66), ("intrusionDetection", 67), ("keyExpired", 68), ("nonRepudiationFailure", 69), ("outOfHoursActivity", 70), ("outOfService", 71), ("proceduralError", 72), ("unauthorizedAccessAttempt", 73), ("unexpectedInformation", 74)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acBoardTrapGlobalsProbableCause.setStatus('deprecated')
acBoardTrapGlobalsAdditionalInfo1 = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 21, 1, 8), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acBoardTrapGlobalsAdditionalInfo1.setStatus('deprecated')
acBoardTrapGlobalsAdditionalInfo2 = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 21, 1, 9), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acBoardTrapGlobalsAdditionalInfo2.setStatus('deprecated')
acBoardTrapGlobalsAdditionalInfo3 = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 21, 1, 10), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acBoardTrapGlobalsAdditionalInfo3.setStatus('deprecated')
acBoardTrapGlobalsDateAndTime = MibScalar((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 21, 1, 11), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acBoardTrapGlobalsDateAndTime.setStatus('deprecated')
acBoardTrapDefinitions = MibIdentifier((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 21, 2))
acBoardFatalError = NotificationType((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 21, 2, 0, 1)).setObjects(("AcBoard", "acBoardTrapGlobalsName"), ("AcBoard", "acBoardTrapGlobalsTextualDescription"), ("AcBoard", "acBoardTrapGlobalsSource"), ("AcBoard", "acBoardTrapGlobalsSeverity"), ("AcBoard", "acBoardTrapGlobalsUniqID"), ("AcBoard", "acBoardTrapGlobalsType"), ("AcBoard", "acBoardTrapGlobalsProbableCause"), ("AcBoard", "acBoardTrapGlobalsAdditionalInfo1"), ("AcBoard", "acBoardTrapGlobalsAdditionalInfo2"), ("AcBoard", "acBoardTrapGlobalsAdditionalInfo3"), ("AcBoard", "acBoardTrapGlobalsDateAndTime"))
if mibBuilder.loadTexts: acBoardFatalError.setStatus('current')
acBoardConfigurationError = NotificationType((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 21, 2, 0, 2)).setObjects(("AcBoard", "acBoardTrapGlobalsName"), ("AcBoard", "acBoardTrapGlobalsTextualDescription"), ("AcBoard", "acBoardTrapGlobalsSource"), ("AcBoard", "acBoardTrapGlobalsSeverity"), ("AcBoard", "acBoardTrapGlobalsUniqID"), ("AcBoard", "acBoardTrapGlobalsType"), ("AcBoard", "acBoardTrapGlobalsProbableCause"), ("AcBoard", "acBoardTrapGlobalsAdditionalInfo1"), ("AcBoard", "acBoardTrapGlobalsAdditionalInfo2"), ("AcBoard", "acBoardTrapGlobalsAdditionalInfo3"), ("AcBoard", "acBoardTrapGlobalsDateAndTime"))
if mibBuilder.loadTexts: acBoardConfigurationError.setStatus('current')
acBoardTemperatureAlarm = NotificationType((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 21, 2, 0, 3)).setObjects(("AcBoard", "acBoardTrapGlobalsName"), ("AcBoard", "acBoardTrapGlobalsTextualDescription"), ("AcBoard", "acBoardTrapGlobalsSource"), ("AcBoard", "acBoardTrapGlobalsSeverity"), ("AcBoard", "acBoardTrapGlobalsUniqID"), ("AcBoard", "acBoardTrapGlobalsType"), ("AcBoard", "acBoardTrapGlobalsProbableCause"), ("AcBoard", "acBoardTrapGlobalsAdditionalInfo1"), ("AcBoard", "acBoardTrapGlobalsAdditionalInfo2"), ("AcBoard", "acBoardTrapGlobalsAdditionalInfo3"), ("AcBoard", "acBoardTrapGlobalsDateAndTime"))
if mibBuilder.loadTexts: acBoardTemperatureAlarm.setStatus('current')
acBoardEvBoardStarted = NotificationType((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 21, 2, 0, 4)).setObjects(("AcBoard", "acBoardTrapGlobalsName"), ("AcBoard", "acBoardTrapGlobalsTextualDescription"), ("AcBoard", "acBoardTrapGlobalsSource"), ("AcBoard", "acBoardTrapGlobalsSeverity"), ("AcBoard", "acBoardTrapGlobalsUniqID"), ("AcBoard", "acBoardTrapGlobalsType"), ("AcBoard", "acBoardTrapGlobalsProbableCause"), ("AcBoard", "acBoardTrapGlobalsAdditionalInfo1"), ("AcBoard", "acBoardTrapGlobalsAdditionalInfo2"), ("AcBoard", "acBoardTrapGlobalsAdditionalInfo3"), ("AcBoard", "acBoardTrapGlobalsDateAndTime"))
if mibBuilder.loadTexts: acBoardEvBoardStarted.setStatus('current')
acBoardEvResettingBoard = NotificationType((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 21, 2, 0, 5)).setObjects(("AcBoard", "acBoardTrapGlobalsName"), ("AcBoard", "acBoardTrapGlobalsTextualDescription"), ("AcBoard", "acBoardTrapGlobalsSource"), ("AcBoard", "acBoardTrapGlobalsSeverity"), ("AcBoard", "acBoardTrapGlobalsUniqID"), ("AcBoard", "acBoardTrapGlobalsType"), ("AcBoard", "acBoardTrapGlobalsProbableCause"), ("AcBoard", "acBoardTrapGlobalsAdditionalInfo1"), ("AcBoard", "acBoardTrapGlobalsAdditionalInfo2"), ("AcBoard", "acBoardTrapGlobalsAdditionalInfo3"), ("AcBoard", "acBoardTrapGlobalsDateAndTime"))
if mibBuilder.loadTexts: acBoardEvResettingBoard.setStatus('current')
acFeatureKeyError = NotificationType((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 21, 2, 0, 6)).setObjects(("AcBoard", "acBoardTrapGlobalsName"), ("AcBoard", "acBoardTrapGlobalsTextualDescription"), ("AcBoard", "acBoardTrapGlobalsSource"), ("AcBoard", "acBoardTrapGlobalsSeverity"), ("AcBoard", "acBoardTrapGlobalsUniqID"), ("AcBoard", "acBoardTrapGlobalsType"), ("AcBoard", "acBoardTrapGlobalsProbableCause"), ("AcBoard", "acBoardTrapGlobalsAdditionalInfo1"), ("AcBoard", "acBoardTrapGlobalsAdditionalInfo2"), ("AcBoard", "acBoardTrapGlobalsAdditionalInfo3"), ("AcBoard", "acBoardTrapGlobalsDateAndTime"))
if mibBuilder.loadTexts: acFeatureKeyError.setStatus('current')
acgwAdminStateChange = NotificationType((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 21, 2, 0, 7)).setObjects(("AcBoard", "acBoardTrapGlobalsName"), ("AcBoard", "acBoardTrapGlobalsTextualDescription"), ("AcBoard", "acBoardTrapGlobalsSource"), ("AcBoard", "acBoardTrapGlobalsSeverity"), ("AcBoard", "acBoardTrapGlobalsUniqID"), ("AcBoard", "acBoardTrapGlobalsType"), ("AcBoard", "acBoardTrapGlobalsProbableCause"), ("AcBoard", "acBoardTrapGlobalsAdditionalInfo1"), ("AcBoard", "acBoardTrapGlobalsAdditionalInfo2"), ("AcBoard", "acBoardTrapGlobalsAdditionalInfo3"), ("AcBoard", "acBoardTrapGlobalsDateAndTime"))
if mibBuilder.loadTexts: acgwAdminStateChange.setStatus('current')
acBoardCallResourcesAlarm = NotificationType((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 21, 2, 0, 8)).setObjects(("AcBoard", "acBoardTrapGlobalsName"), ("AcBoard", "acBoardTrapGlobalsTextualDescription"), ("AcBoard", "acBoardTrapGlobalsSource"), ("AcBoard", "acBoardTrapGlobalsSeverity"), ("AcBoard", "acBoardTrapGlobalsUniqID"), ("AcBoard", "acBoardTrapGlobalsType"), ("AcBoard", "acBoardTrapGlobalsProbableCause"), ("AcBoard", "acBoardTrapGlobalsAdditionalInfo1"), ("AcBoard", "acBoardTrapGlobalsAdditionalInfo2"), ("AcBoard", "acBoardTrapGlobalsAdditionalInfo3"), ("AcBoard", "acBoardTrapGlobalsDateAndTime"))
if mibBuilder.loadTexts: acBoardCallResourcesAlarm.setStatus('current')
acBoardControllerFailureAlarm = NotificationType((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 21, 2, 0, 9)).setObjects(("AcBoard", "acBoardTrapGlobalsName"), ("AcBoard", "acBoardTrapGlobalsTextualDescription"), ("AcBoard", "acBoardTrapGlobalsSource"), ("AcBoard", "acBoardTrapGlobalsSeverity"), ("AcBoard", "acBoardTrapGlobalsUniqID"), ("AcBoard", "acBoardTrapGlobalsType"), ("AcBoard", "acBoardTrapGlobalsProbableCause"), ("AcBoard", "acBoardTrapGlobalsAdditionalInfo1"), ("AcBoard", "acBoardTrapGlobalsAdditionalInfo2"), ("AcBoard", "acBoardTrapGlobalsAdditionalInfo3"), ("AcBoard", "acBoardTrapGlobalsDateAndTime"))
if mibBuilder.loadTexts: acBoardControllerFailureAlarm.setStatus('current')
acBoardEthernetLinkAlarm = NotificationType((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 21, 2, 0, 10)).setObjects(("AcBoard", "acBoardTrapGlobalsName"), ("AcBoard", "acBoardTrapGlobalsTextualDescription"), ("AcBoard", "acBoardTrapGlobalsSource"), ("AcBoard", "acBoardTrapGlobalsSeverity"), ("AcBoard", "acBoardTrapGlobalsUniqID"), ("AcBoard", "acBoardTrapGlobalsType"), ("AcBoard", "acBoardTrapGlobalsProbableCause"), ("AcBoard", "acBoardTrapGlobalsAdditionalInfo1"), ("AcBoard", "acBoardTrapGlobalsAdditionalInfo2"), ("AcBoard", "acBoardTrapGlobalsAdditionalInfo3"), ("AcBoard", "acBoardTrapGlobalsDateAndTime"))
if mibBuilder.loadTexts: acBoardEthernetLinkAlarm.setStatus('current')
acBoardOverloadAlarm = NotificationType((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 21, 2, 0, 11)).setObjects(("AcBoard", "acBoardTrapGlobalsName"), ("AcBoard", "acBoardTrapGlobalsTextualDescription"), ("AcBoard", "acBoardTrapGlobalsSource"), ("AcBoard", "acBoardTrapGlobalsSeverity"), ("AcBoard", "acBoardTrapGlobalsUniqID"), ("AcBoard", "acBoardTrapGlobalsType"), ("AcBoard", "acBoardTrapGlobalsProbableCause"), ("AcBoard", "acBoardTrapGlobalsAdditionalInfo1"), ("AcBoard", "acBoardTrapGlobalsAdditionalInfo2"), ("AcBoard", "acBoardTrapGlobalsAdditionalInfo3"), ("AcBoard", "acBoardTrapGlobalsDateAndTime"))
if mibBuilder.loadTexts: acBoardOverloadAlarm.setStatus('current')
acActiveAlarmTableOverflow = NotificationType((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 21, 2, 0, 12)).setObjects(("AcBoard", "acBoardTrapGlobalsName"), ("AcBoard", "acBoardTrapGlobalsTextualDescription"), ("AcBoard", "acBoardTrapGlobalsSource"), ("AcBoard", "acBoardTrapGlobalsSeverity"), ("AcBoard", "acBoardTrapGlobalsUniqID"), ("AcBoard", "acBoardTrapGlobalsType"), ("AcBoard", "acBoardTrapGlobalsProbableCause"), ("AcBoard", "acBoardTrapGlobalsAdditionalInfo1"), ("AcBoard", "acBoardTrapGlobalsAdditionalInfo2"), ("AcBoard", "acBoardTrapGlobalsAdditionalInfo3"), ("AcBoard", "acBoardTrapGlobalsDateAndTime"))
if mibBuilder.loadTexts: acActiveAlarmTableOverflow.setStatus('current')
acAtmPortAlarm = NotificationType((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 21, 2, 0, 13)).setObjects(("AcBoard", "acBoardTrapGlobalsName"), ("AcBoard", "acBoardTrapGlobalsTextualDescription"), ("AcBoard", "acBoardTrapGlobalsSource"), ("AcBoard", "acBoardTrapGlobalsSeverity"), ("AcBoard", "acBoardTrapGlobalsUniqID"), ("AcBoard", "acBoardTrapGlobalsType"), ("AcBoard", "acBoardTrapGlobalsProbableCause"), ("AcBoard", "acBoardTrapGlobalsAdditionalInfo1"), ("AcBoard", "acBoardTrapGlobalsAdditionalInfo2"), ("AcBoard", "acBoardTrapGlobalsAdditionalInfo3"), ("AcBoard", "acBoardTrapGlobalsDateAndTime"))
if mibBuilder.loadTexts: acAtmPortAlarm.setStatus('current')
acAudioProvisioningAlarm = NotificationType((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 21, 2, 0, 14)).setObjects(("AcBoard", "acBoardTrapGlobalsName"), ("AcBoard", "acBoardTrapGlobalsTextualDescription"), ("AcBoard", "acBoardTrapGlobalsSource"), ("AcBoard", "acBoardTrapGlobalsSeverity"), ("AcBoard", "acBoardTrapGlobalsUniqID"), ("AcBoard", "acBoardTrapGlobalsType"), ("AcBoard", "acBoardTrapGlobalsProbableCause"), ("AcBoard", "acBoardTrapGlobalsAdditionalInfo1"), ("AcBoard", "acBoardTrapGlobalsAdditionalInfo2"), ("AcBoard", "acBoardTrapGlobalsAdditionalInfo3"), ("AcBoard", "acBoardTrapGlobalsDateAndTime"))
if mibBuilder.loadTexts: acAudioProvisioningAlarm.setStatus('current')
acOperationalStateChange = NotificationType((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 21, 2, 0, 15)).setObjects(("AcBoard", "acBoardTrapGlobalsName"), ("AcBoard", "acBoardTrapGlobalsTextualDescription"), ("AcBoard", "acBoardTrapGlobalsSource"), ("AcBoard", "acBoardTrapGlobalsSeverity"), ("AcBoard", "acBoardTrapGlobalsUniqID"), ("AcBoard", "acBoardTrapGlobalsType"), ("AcBoard", "acBoardTrapGlobalsProbableCause"), ("AcBoard", "acBoardTrapGlobalsAdditionalInfo1"), ("AcBoard", "acBoardTrapGlobalsAdditionalInfo2"), ("AcBoard", "acBoardTrapGlobalsAdditionalInfo3"), ("AcBoard", "acBoardTrapGlobalsDateAndTime"))
if mibBuilder.loadTexts: acOperationalStateChange.setStatus('current')
acKeepAlive = NotificationType((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 21, 2, 0, 16)).setObjects(("AcBoard", "acBoardTrapGlobalsName"), ("AcBoard", "acBoardTrapGlobalsTextualDescription"), ("AcBoard", "acBoardTrapGlobalsSource"), ("AcBoard", "acBoardTrapGlobalsSeverity"), ("AcBoard", "acBoardTrapGlobalsUniqID"), ("AcBoard", "acBoardTrapGlobalsType"), ("AcBoard", "acBoardTrapGlobalsProbableCause"), ("AcBoard", "acBoardTrapGlobalsAdditionalInfo1"), ("AcBoard", "acBoardTrapGlobalsAdditionalInfo2"), ("AcBoard", "acBoardTrapGlobalsAdditionalInfo3"), ("AcBoard", "acBoardTrapGlobalsDateAndTime"))
if mibBuilder.loadTexts: acKeepAlive.setStatus('current')
acNATTraversalAlarm = NotificationType((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 21, 2, 0, 17)).setObjects(("AcBoard", "acBoardTrapGlobalsName"), ("AcBoard", "acBoardTrapGlobalsTextualDescription"), ("AcBoard", "acBoardTrapGlobalsSource"), ("AcBoard", "acBoardTrapGlobalsSeverity"), ("AcBoard", "acBoardTrapGlobalsUniqID"), ("AcBoard", "acBoardTrapGlobalsType"), ("AcBoard", "acBoardTrapGlobalsProbableCause"), ("AcBoard", "acBoardTrapGlobalsAdditionalInfo1"), ("AcBoard", "acBoardTrapGlobalsAdditionalInfo2"), ("AcBoard", "acBoardTrapGlobalsAdditionalInfo3"), ("AcBoard", "acBoardTrapGlobalsDateAndTime"))
if mibBuilder.loadTexts: acNATTraversalAlarm.setStatus('current')
acEnhancedBITStatus = NotificationType((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 21, 2, 0, 18)).setObjects(("AcBoard", "acBoardTrapGlobalsName"), ("AcBoard", "acBoardTrapGlobalsTextualDescription"), ("AcBoard", "acBoardTrapGlobalsSource"), ("AcBoard", "acBoardTrapGlobalsSeverity"), ("AcBoard", "acBoardTrapGlobalsUniqID"), ("AcBoard", "acBoardTrapGlobalsType"), ("AcBoard", "acBoardTrapGlobalsProbableCause"), ("AcBoard", "acBoardTrapGlobalsAdditionalInfo1"), ("AcBoard", "acBoardTrapGlobalsAdditionalInfo2"), ("AcBoard", "acBoardTrapGlobalsAdditionalInfo3"), ("AcBoard", "acBoardTrapGlobalsDateAndTime"))
if mibBuilder.loadTexts: acEnhancedBITStatus.setStatus('current')
acSS7LinkStateChangeAlarm = NotificationType((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 21, 2, 0, 19)).setObjects(("AcBoard", "acBoardTrapGlobalsName"), ("AcBoard", "acBoardTrapGlobalsTextualDescription"), ("AcBoard", "acBoardTrapGlobalsSource"), ("AcBoard", "acBoardTrapGlobalsSeverity"), ("AcBoard", "acBoardTrapGlobalsUniqID"), ("AcBoard", "acBoardTrapGlobalsType"), ("AcBoard", "acBoardTrapGlobalsProbableCause"), ("AcBoard", "acBoardTrapGlobalsAdditionalInfo1"), ("AcBoard", "acBoardTrapGlobalsAdditionalInfo2"), ("AcBoard", "acBoardTrapGlobalsAdditionalInfo3"), ("AcBoard", "acBoardTrapGlobalsDateAndTime"))
if mibBuilder.loadTexts: acSS7LinkStateChangeAlarm.setStatus('current')
acSS7LinkInhibitStateChangeAlarm = NotificationType((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 21, 2, 0, 20)).setObjects(("AcBoard", "acBoardTrapGlobalsName"), ("AcBoard", "acBoardTrapGlobalsTextualDescription"), ("AcBoard", "acBoardTrapGlobalsSource"), ("AcBoard", "acBoardTrapGlobalsSeverity"), ("AcBoard", "acBoardTrapGlobalsUniqID"), ("AcBoard", "acBoardTrapGlobalsType"), ("AcBoard", "acBoardTrapGlobalsProbableCause"), ("AcBoard", "acBoardTrapGlobalsAdditionalInfo1"), ("AcBoard", "acBoardTrapGlobalsAdditionalInfo2"), ("AcBoard", "acBoardTrapGlobalsAdditionalInfo3"), ("AcBoard", "acBoardTrapGlobalsDateAndTime"))
if mibBuilder.loadTexts: acSS7LinkInhibitStateChangeAlarm.setStatus('current')
acSS7LinkBlockStateChangeAlarm = NotificationType((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 21, 2, 0, 21)).setObjects(("AcBoard", "acBoardTrapGlobalsName"), ("AcBoard", "acBoardTrapGlobalsTextualDescription"), ("AcBoard", "acBoardTrapGlobalsSource"), ("AcBoard", "acBoardTrapGlobalsSeverity"), ("AcBoard", "acBoardTrapGlobalsUniqID"), ("AcBoard", "acBoardTrapGlobalsType"), ("AcBoard", "acBoardTrapGlobalsProbableCause"), ("AcBoard", "acBoardTrapGlobalsAdditionalInfo1"), ("AcBoard", "acBoardTrapGlobalsAdditionalInfo2"), ("AcBoard", "acBoardTrapGlobalsAdditionalInfo3"), ("AcBoard", "acBoardTrapGlobalsDateAndTime"))
if mibBuilder.loadTexts: acSS7LinkBlockStateChangeAlarm.setStatus('current')
acSS7LinkCongestionStateChangeAlarm = NotificationType((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 21, 2, 0, 22)).setObjects(("AcBoard", "acBoardTrapGlobalsName"), ("AcBoard", "acBoardTrapGlobalsTextualDescription"), ("AcBoard", "acBoardTrapGlobalsSource"), ("AcBoard", "acBoardTrapGlobalsSeverity"), ("AcBoard", "acBoardTrapGlobalsUniqID"), ("AcBoard", "acBoardTrapGlobalsType"), ("AcBoard", "acBoardTrapGlobalsProbableCause"), ("AcBoard", "acBoardTrapGlobalsAdditionalInfo1"), ("AcBoard", "acBoardTrapGlobalsAdditionalInfo2"), ("AcBoard", "acBoardTrapGlobalsAdditionalInfo3"), ("AcBoard", "acBoardTrapGlobalsDateAndTime"))
if mibBuilder.loadTexts: acSS7LinkCongestionStateChangeAlarm.setStatus('current')
acSS7LinkSetStateChangeAlarm = NotificationType((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 21, 2, 0, 23)).setObjects(("AcBoard", "acBoardTrapGlobalsName"), ("AcBoard", "acBoardTrapGlobalsTextualDescription"), ("AcBoard", "acBoardTrapGlobalsSource"), ("AcBoard", "acBoardTrapGlobalsSeverity"), ("AcBoard", "acBoardTrapGlobalsUniqID"), ("AcBoard", "acBoardTrapGlobalsType"), ("AcBoard", "acBoardTrapGlobalsProbableCause"), ("AcBoard", "acBoardTrapGlobalsAdditionalInfo1"), ("AcBoard", "acBoardTrapGlobalsAdditionalInfo2"), ("AcBoard", "acBoardTrapGlobalsAdditionalInfo3"), ("AcBoard", "acBoardTrapGlobalsDateAndTime"))
if mibBuilder.loadTexts: acSS7LinkSetStateChangeAlarm.setStatus('current')
acSS7RouteSetStateChangeAlarm = NotificationType((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 21, 2, 0, 24)).setObjects(("AcBoard", "acBoardTrapGlobalsName"), ("AcBoard", "acBoardTrapGlobalsTextualDescription"), ("AcBoard", "acBoardTrapGlobalsSource"), ("AcBoard", "acBoardTrapGlobalsSeverity"), ("AcBoard", "acBoardTrapGlobalsUniqID"), ("AcBoard", "acBoardTrapGlobalsType"), ("AcBoard", "acBoardTrapGlobalsProbableCause"), ("AcBoard", "acBoardTrapGlobalsAdditionalInfo1"), ("AcBoard", "acBoardTrapGlobalsAdditionalInfo2"), ("AcBoard", "acBoardTrapGlobalsAdditionalInfo3"), ("AcBoard", "acBoardTrapGlobalsDateAndTime"))
if mibBuilder.loadTexts: acSS7RouteSetStateChangeAlarm.setStatus('current')
acSS7SNSetStateChangeAlarm = NotificationType((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 21, 2, 0, 25)).setObjects(("AcBoard", "acBoardTrapGlobalsName"), ("AcBoard", "acBoardTrapGlobalsTextualDescription"), ("AcBoard", "acBoardTrapGlobalsSource"), ("AcBoard", "acBoardTrapGlobalsSeverity"), ("AcBoard", "acBoardTrapGlobalsUniqID"), ("AcBoard", "acBoardTrapGlobalsType"), ("AcBoard", "acBoardTrapGlobalsProbableCause"), ("AcBoard", "acBoardTrapGlobalsAdditionalInfo1"), ("AcBoard", "acBoardTrapGlobalsAdditionalInfo2"), ("AcBoard", "acBoardTrapGlobalsAdditionalInfo3"), ("AcBoard", "acBoardTrapGlobalsDateAndTime"))
if mibBuilder.loadTexts: acSS7SNSetStateChangeAlarm.setStatus('current')
acSS7RedundancyAlarm = NotificationType((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 21, 2, 0, 26)).setObjects(("AcBoard", "acBoardTrapGlobalsName"), ("AcBoard", "acBoardTrapGlobalsTextualDescription"), ("AcBoard", "acBoardTrapGlobalsSource"), ("AcBoard", "acBoardTrapGlobalsSeverity"), ("AcBoard", "acBoardTrapGlobalsUniqID"), ("AcBoard", "acBoardTrapGlobalsType"), ("AcBoard", "acBoardTrapGlobalsProbableCause"), ("AcBoard", "acBoardTrapGlobalsAdditionalInfo1"), ("AcBoard", "acBoardTrapGlobalsAdditionalInfo2"), ("AcBoard", "acBoardTrapGlobalsAdditionalInfo3"), ("AcBoard", "acBoardTrapGlobalsDateAndTime"))
if mibBuilder.loadTexts: acSS7RedundancyAlarm.setStatus('current')
acPerformanceMonitoringThresholdCrossing = NotificationType((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 21, 2, 0, 27)).setObjects(("AcBoard", "acBoardTrapGlobalsName"), ("AcBoard", "acBoardTrapGlobalsTextualDescription"), ("AcBoard", "acBoardTrapGlobalsSource"), ("AcBoard", "acBoardTrapGlobalsSeverity"), ("AcBoard", "acBoardTrapGlobalsUniqID"), ("AcBoard", "acBoardTrapGlobalsType"), ("AcBoard", "acBoardTrapGlobalsProbableCause"), ("AcBoard", "acBoardTrapGlobalsAdditionalInfo1"), ("AcBoard", "acBoardTrapGlobalsAdditionalInfo2"), ("AcBoard", "acBoardTrapGlobalsAdditionalInfo3"), ("AcBoard", "acBoardTrapGlobalsDateAndTime"))
if mibBuilder.loadTexts: acPerformanceMonitoringThresholdCrossing.setStatus('current')
acHTTPDownloadResult = NotificationType((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 21, 2, 0, 28)).setObjects(("AcBoard", "acBoardTrapGlobalsName"), ("AcBoard", "acBoardTrapGlobalsTextualDescription"), ("AcBoard", "acBoardTrapGlobalsSource"), ("AcBoard", "acBoardTrapGlobalsSeverity"), ("AcBoard", "acBoardTrapGlobalsUniqID"), ("AcBoard", "acBoardTrapGlobalsType"), ("AcBoard", "acBoardTrapGlobalsProbableCause"), ("AcBoard", "acBoardTrapGlobalsAdditionalInfo1"), ("AcBoard", "acBoardTrapGlobalsAdditionalInfo2"), ("AcBoard", "acBoardTrapGlobalsAdditionalInfo3"), ("AcBoard", "acBoardTrapGlobalsDateAndTime"))
if mibBuilder.loadTexts: acHTTPDownloadResult.setStatus('current')
acFanTrayAlarm = NotificationType((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 21, 2, 0, 29)).setObjects(("AcBoard", "acBoardTrapGlobalsName"), ("AcBoard", "acBoardTrapGlobalsTextualDescription"), ("AcBoard", "acBoardTrapGlobalsSource"), ("AcBoard", "acBoardTrapGlobalsSeverity"), ("AcBoard", "acBoardTrapGlobalsUniqID"), ("AcBoard", "acBoardTrapGlobalsType"), ("AcBoard", "acBoardTrapGlobalsProbableCause"), ("AcBoard", "acBoardTrapGlobalsAdditionalInfo1"), ("AcBoard", "acBoardTrapGlobalsAdditionalInfo2"), ("AcBoard", "acBoardTrapGlobalsAdditionalInfo3"), ("AcBoard", "acBoardTrapGlobalsDateAndTime"))
if mibBuilder.loadTexts: acFanTrayAlarm.setStatus('current')
acPowerSupplyAlarm = NotificationType((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 21, 2, 0, 30)).setObjects(("AcBoard", "acBoardTrapGlobalsName"), ("AcBoard", "acBoardTrapGlobalsTextualDescription"), ("AcBoard", "acBoardTrapGlobalsSource"), ("AcBoard", "acBoardTrapGlobalsSeverity"), ("AcBoard", "acBoardTrapGlobalsUniqID"), ("AcBoard", "acBoardTrapGlobalsType"), ("AcBoard", "acBoardTrapGlobalsProbableCause"), ("AcBoard", "acBoardTrapGlobalsAdditionalInfo1"), ("AcBoard", "acBoardTrapGlobalsAdditionalInfo2"), ("AcBoard", "acBoardTrapGlobalsAdditionalInfo3"), ("AcBoard", "acBoardTrapGlobalsDateAndTime"))
if mibBuilder.loadTexts: acPowerSupplyAlarm.setStatus('current')
acPEMAlarm = NotificationType((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 21, 2, 0, 31)).setObjects(("AcBoard", "acBoardTrapGlobalsName"), ("AcBoard", "acBoardTrapGlobalsTextualDescription"), ("AcBoard", "acBoardTrapGlobalsSource"), ("AcBoard", "acBoardTrapGlobalsSeverity"), ("AcBoard", "acBoardTrapGlobalsUniqID"), ("AcBoard", "acBoardTrapGlobalsType"), ("AcBoard", "acBoardTrapGlobalsProbableCause"), ("AcBoard", "acBoardTrapGlobalsAdditionalInfo1"), ("AcBoard", "acBoardTrapGlobalsAdditionalInfo2"), ("AcBoard", "acBoardTrapGlobalsAdditionalInfo3"), ("AcBoard", "acBoardTrapGlobalsDateAndTime"))
if mibBuilder.loadTexts: acPEMAlarm.setStatus('current')
acSAMissingAlarm = NotificationType((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 21, 2, 0, 32)).setObjects(("AcBoard", "acBoardTrapGlobalsName"), ("AcBoard", "acBoardTrapGlobalsTextualDescription"), ("AcBoard", "acBoardTrapGlobalsSource"), ("AcBoard", "acBoardTrapGlobalsSeverity"), ("AcBoard", "acBoardTrapGlobalsUniqID"), ("AcBoard", "acBoardTrapGlobalsType"), ("AcBoard", "acBoardTrapGlobalsProbableCause"), ("AcBoard", "acBoardTrapGlobalsAdditionalInfo1"), ("AcBoard", "acBoardTrapGlobalsAdditionalInfo2"), ("AcBoard", "acBoardTrapGlobalsAdditionalInfo3"), ("AcBoard", "acBoardTrapGlobalsDateAndTime"))
if mibBuilder.loadTexts: acSAMissingAlarm.setStatus('current')
acHASystemFaultAlarm = NotificationType((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 21, 2, 0, 33)).setObjects(("AcBoard", "acBoardTrapGlobalsName"), ("AcBoard", "acBoardTrapGlobalsTextualDescription"), ("AcBoard", "acBoardTrapGlobalsSource"), ("AcBoard", "acBoardTrapGlobalsSeverity"), ("AcBoard", "acBoardTrapGlobalsUniqID"), ("AcBoard", "acBoardTrapGlobalsType"), ("AcBoard", "acBoardTrapGlobalsProbableCause"), ("AcBoard", "acBoardTrapGlobalsAdditionalInfo1"), ("AcBoard", "acBoardTrapGlobalsAdditionalInfo2"), ("AcBoard", "acBoardTrapGlobalsAdditionalInfo3"), ("AcBoard", "acBoardTrapGlobalsDateAndTime"))
if mibBuilder.loadTexts: acHASystemFaultAlarm.setStatus('current')
acHASystemConfigMismatchAlarm = NotificationType((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 21, 2, 0, 34)).setObjects(("AcBoard", "acBoardTrapGlobalsName"), ("AcBoard", "acBoardTrapGlobalsTextualDescription"), ("AcBoard", "acBoardTrapGlobalsSource"), ("AcBoard", "acBoardTrapGlobalsSeverity"), ("AcBoard", "acBoardTrapGlobalsUniqID"), ("AcBoard", "acBoardTrapGlobalsType"), ("AcBoard", "acBoardTrapGlobalsProbableCause"), ("AcBoard", "acBoardTrapGlobalsAdditionalInfo1"), ("AcBoard", "acBoardTrapGlobalsAdditionalInfo2"), ("AcBoard", "acBoardTrapGlobalsAdditionalInfo3"), ("AcBoard", "acBoardTrapGlobalsDateAndTime"))
if mibBuilder.loadTexts: acHASystemConfigMismatchAlarm.setStatus('current')
acHASystemSwitchOverAlarm = NotificationType((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 21, 2, 0, 35)).setObjects(("AcBoard", "acBoardTrapGlobalsName"), ("AcBoard", "acBoardTrapGlobalsTextualDescription"), ("AcBoard", "acBoardTrapGlobalsSource"), ("AcBoard", "acBoardTrapGlobalsSeverity"), ("AcBoard", "acBoardTrapGlobalsUniqID"), ("AcBoard", "acBoardTrapGlobalsType"), ("AcBoard", "acBoardTrapGlobalsProbableCause"), ("AcBoard", "acBoardTrapGlobalsAdditionalInfo1"), ("AcBoard", "acBoardTrapGlobalsAdditionalInfo2"), ("AcBoard", "acBoardTrapGlobalsAdditionalInfo3"), ("AcBoard", "acBoardTrapGlobalsDateAndTime"))
if mibBuilder.loadTexts: acHASystemSwitchOverAlarm.setStatus('current')
acUserInputAlarm = NotificationType((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 21, 2, 0, 36)).setObjects(("AcBoard", "acBoardTrapGlobalsName"), ("AcBoard", "acBoardTrapGlobalsTextualDescription"), ("AcBoard", "acBoardTrapGlobalsSource"), ("AcBoard", "acBoardTrapGlobalsSeverity"), ("AcBoard", "acBoardTrapGlobalsUniqID"), ("AcBoard", "acBoardTrapGlobalsType"), ("AcBoard", "acBoardTrapGlobalsProbableCause"), ("AcBoard", "acBoardTrapGlobalsAdditionalInfo1"), ("AcBoard", "acBoardTrapGlobalsAdditionalInfo2"), ("AcBoard", "acBoardTrapGlobalsAdditionalInfo3"), ("AcBoard", "acBoardTrapGlobalsDateAndTime"))
if mibBuilder.loadTexts: acUserInputAlarm.setStatus('current')
acDChannelStatus = NotificationType((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 21, 2, 0, 37)).setObjects(("AcBoard", "acBoardTrapGlobalsName"), ("AcBoard", "acBoardTrapGlobalsTextualDescription"), ("AcBoard", "acBoardTrapGlobalsSource"), ("AcBoard", "acBoardTrapGlobalsSeverity"), ("AcBoard", "acBoardTrapGlobalsUniqID"), ("AcBoard", "acBoardTrapGlobalsType"), ("AcBoard", "acBoardTrapGlobalsProbableCause"), ("AcBoard", "acBoardTrapGlobalsAdditionalInfo1"), ("AcBoard", "acBoardTrapGlobalsAdditionalInfo2"), ("AcBoard", "acBoardTrapGlobalsAdditionalInfo3"), ("AcBoard", "acBoardTrapGlobalsDateAndTime"))
if mibBuilder.loadTexts: acDChannelStatus.setStatus('current')
acSonetSectionLOFAlarm = NotificationType((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 21, 2, 0, 38)).setObjects(("AcBoard", "acBoardTrapGlobalsName"), ("AcBoard", "acBoardTrapGlobalsTextualDescription"), ("AcBoard", "acBoardTrapGlobalsSource"), ("AcBoard", "acBoardTrapGlobalsSeverity"), ("AcBoard", "acBoardTrapGlobalsUniqID"), ("AcBoard", "acBoardTrapGlobalsType"), ("AcBoard", "acBoardTrapGlobalsProbableCause"), ("AcBoard", "acBoardTrapGlobalsAdditionalInfo1"), ("AcBoard", "acBoardTrapGlobalsAdditionalInfo2"), ("AcBoard", "acBoardTrapGlobalsAdditionalInfo3"), ("AcBoard", "acBoardTrapGlobalsDateAndTime"))
if mibBuilder.loadTexts: acSonetSectionLOFAlarm.setStatus('current')
acSonetSectionLOSAlarm = NotificationType((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 21, 2, 0, 39)).setObjects(("AcBoard", "acBoardTrapGlobalsName"), ("AcBoard", "acBoardTrapGlobalsTextualDescription"), ("AcBoard", "acBoardTrapGlobalsSource"), ("AcBoard", "acBoardTrapGlobalsSeverity"), ("AcBoard", "acBoardTrapGlobalsUniqID"), ("AcBoard", "acBoardTrapGlobalsType"), ("AcBoard", "acBoardTrapGlobalsProbableCause"), ("AcBoard", "acBoardTrapGlobalsAdditionalInfo1"), ("AcBoard", "acBoardTrapGlobalsAdditionalInfo2"), ("AcBoard", "acBoardTrapGlobalsAdditionalInfo3"), ("AcBoard", "acBoardTrapGlobalsDateAndTime"))
if mibBuilder.loadTexts: acSonetSectionLOSAlarm.setStatus('current')
acSonetLineAISAlarm = NotificationType((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 21, 2, 0, 40)).setObjects(("AcBoard", "acBoardTrapGlobalsName"), ("AcBoard", "acBoardTrapGlobalsTextualDescription"), ("AcBoard", "acBoardTrapGlobalsSource"), ("AcBoard", "acBoardTrapGlobalsSeverity"), ("AcBoard", "acBoardTrapGlobalsUniqID"), ("AcBoard", "acBoardTrapGlobalsType"), ("AcBoard", "acBoardTrapGlobalsProbableCause"), ("AcBoard", "acBoardTrapGlobalsAdditionalInfo1"), ("AcBoard", "acBoardTrapGlobalsAdditionalInfo2"), ("AcBoard", "acBoardTrapGlobalsAdditionalInfo3"), ("AcBoard", "acBoardTrapGlobalsDateAndTime"))
if mibBuilder.loadTexts: acSonetLineAISAlarm.setStatus('current')
acSonetLineRDIAlarm = NotificationType((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 21, 2, 0, 41)).setObjects(("AcBoard", "acBoardTrapGlobalsName"), ("AcBoard", "acBoardTrapGlobalsTextualDescription"), ("AcBoard", "acBoardTrapGlobalsSource"), ("AcBoard", "acBoardTrapGlobalsSeverity"), ("AcBoard", "acBoardTrapGlobalsUniqID"), ("AcBoard", "acBoardTrapGlobalsType"), ("AcBoard", "acBoardTrapGlobalsProbableCause"), ("AcBoard", "acBoardTrapGlobalsAdditionalInfo1"), ("AcBoard", "acBoardTrapGlobalsAdditionalInfo2"), ("AcBoard", "acBoardTrapGlobalsAdditionalInfo3"), ("AcBoard", "acBoardTrapGlobalsDateAndTime"))
if mibBuilder.loadTexts: acSonetLineRDIAlarm.setStatus('current')
acSonetIfHwFailureAlarm = NotificationType((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 21, 2, 0, 42)).setObjects(("AcBoard", "acBoardTrapGlobalsName"), ("AcBoard", "acBoardTrapGlobalsTextualDescription"), ("AcBoard", "acBoardTrapGlobalsSource"), ("AcBoard", "acBoardTrapGlobalsSeverity"), ("AcBoard", "acBoardTrapGlobalsUniqID"), ("AcBoard", "acBoardTrapGlobalsType"), ("AcBoard", "acBoardTrapGlobalsProbableCause"), ("AcBoard", "acBoardTrapGlobalsAdditionalInfo1"), ("AcBoard", "acBoardTrapGlobalsAdditionalInfo2"), ("AcBoard", "acBoardTrapGlobalsAdditionalInfo3"), ("AcBoard", "acBoardTrapGlobalsDateAndTime"))
if mibBuilder.loadTexts: acSonetIfHwFailureAlarm.setStatus('current')
acHwFailureAlarm = NotificationType((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 21, 2, 0, 43)).setObjects(("AcBoard", "acBoardTrapGlobalsName"), ("AcBoard", "acBoardTrapGlobalsTextualDescription"), ("AcBoard", "acBoardTrapGlobalsSource"), ("AcBoard", "acBoardTrapGlobalsSeverity"), ("AcBoard", "acBoardTrapGlobalsUniqID"), ("AcBoard", "acBoardTrapGlobalsType"), ("AcBoard", "acBoardTrapGlobalsProbableCause"), ("AcBoard", "acBoardTrapGlobalsAdditionalInfo1"), ("AcBoard", "acBoardTrapGlobalsAdditionalInfo2"), ("AcBoard", "acBoardTrapGlobalsAdditionalInfo3"), ("AcBoard", "acBoardTrapGlobalsDateAndTime"))
if mibBuilder.loadTexts: acHwFailureAlarm.setStatus('current')
acH248LostConnectionWithCA = NotificationType((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 21, 2, 0, 44)).setObjects(("AcBoard", "acBoardTrapGlobalsName"), ("AcBoard", "acBoardTrapGlobalsTextualDescription"), ("AcBoard", "acBoardTrapGlobalsSource"), ("AcBoard", "acBoardTrapGlobalsSeverity"), ("AcBoard", "acBoardTrapGlobalsUniqID"), ("AcBoard", "acBoardTrapGlobalsType"), ("AcBoard", "acBoardTrapGlobalsProbableCause"), ("AcBoard", "acBoardTrapGlobalsAdditionalInfo1"), ("AcBoard", "acBoardTrapGlobalsAdditionalInfo2"), ("AcBoard", "acBoardTrapGlobalsAdditionalInfo3"), ("AcBoard", "acBoardTrapGlobalsDateAndTime"))
if mibBuilder.loadTexts: acH248LostConnectionWithCA.setStatus('current')
acDialPlanFileReplaced = NotificationType((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 21, 2, 0, 45)).setObjects(("AcBoard", "acBoardTrapGlobalsName"), ("AcBoard", "acBoardTrapGlobalsTextualDescription"), ("AcBoard", "acBoardTrapGlobalsSource"), ("AcBoard", "acBoardTrapGlobalsSeverity"), ("AcBoard", "acBoardTrapGlobalsUniqID"), ("AcBoard", "acBoardTrapGlobalsType"), ("AcBoard", "acBoardTrapGlobalsProbableCause"), ("AcBoard", "acBoardTrapGlobalsAdditionalInfo1"), ("AcBoard", "acBoardTrapGlobalsAdditionalInfo2"), ("AcBoard", "acBoardTrapGlobalsAdditionalInfo3"), ("AcBoard", "acBoardTrapGlobalsDateAndTime"))
if mibBuilder.loadTexts: acDialPlanFileReplaced.setStatus('current')
acAnalogPortSPIOutOfService = NotificationType((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 21, 2, 0, 46)).setObjects(("AcBoard", "acBoardTrapGlobalsName"), ("AcBoard", "acBoardTrapGlobalsTextualDescription"), ("AcBoard", "acBoardTrapGlobalsSource"), ("AcBoard", "acBoardTrapGlobalsSeverity"), ("AcBoard", "acBoardTrapGlobalsUniqID"), ("AcBoard", "acBoardTrapGlobalsType"), ("AcBoard", "acBoardTrapGlobalsProbableCause"), ("AcBoard", "acBoardTrapGlobalsAdditionalInfo1"), ("AcBoard", "acBoardTrapGlobalsAdditionalInfo2"), ("AcBoard", "acBoardTrapGlobalsAdditionalInfo3"), ("AcBoard", "acBoardTrapGlobalsDateAndTime"))
if mibBuilder.loadTexts: acAnalogPortSPIOutOfService.setStatus('current')
acAnalogPortHighTemperature = NotificationType((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 21, 2, 0, 47)).setObjects(("AcBoard", "acBoardTrapGlobalsName"), ("AcBoard", "acBoardTrapGlobalsTextualDescription"), ("AcBoard", "acBoardTrapGlobalsSource"), ("AcBoard", "acBoardTrapGlobalsSeverity"), ("AcBoard", "acBoardTrapGlobalsUniqID"), ("AcBoard", "acBoardTrapGlobalsType"), ("AcBoard", "acBoardTrapGlobalsProbableCause"), ("AcBoard", "acBoardTrapGlobalsAdditionalInfo1"), ("AcBoard", "acBoardTrapGlobalsAdditionalInfo2"), ("AcBoard", "acBoardTrapGlobalsAdditionalInfo3"), ("AcBoard", "acBoardTrapGlobalsDateAndTime"))
if mibBuilder.loadTexts: acAnalogPortHighTemperature.setStatus('current')
acHitlessUpdateStatus = NotificationType((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 21, 2, 0, 48)).setObjects(("AcBoard", "acBoardTrapGlobalsName"), ("AcBoard", "acBoardTrapGlobalsTextualDescription"), ("AcBoard", "acBoardTrapGlobalsSource"), ("AcBoard", "acBoardTrapGlobalsSeverity"), ("AcBoard", "acBoardTrapGlobalsUniqID"), ("AcBoard", "acBoardTrapGlobalsType"), ("AcBoard", "acBoardTrapGlobalsProbableCause"), ("AcBoard", "acBoardTrapGlobalsAdditionalInfo1"), ("AcBoard", "acBoardTrapGlobalsAdditionalInfo2"), ("AcBoard", "acBoardTrapGlobalsAdditionalInfo3"), ("AcBoard", "acBoardTrapGlobalsDateAndTime"))
if mibBuilder.loadTexts: acHitlessUpdateStatus.setStatus('current')
acTrunksAlarmNearEndLOS = NotificationType((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 21, 2, 0, 49)).setObjects(("AcBoard", "acBoardTrapGlobalsName"), ("AcBoard", "acBoardTrapGlobalsTextualDescription"), ("AcBoard", "acBoardTrapGlobalsSource"), ("AcBoard", "acBoardTrapGlobalsSeverity"), ("AcBoard", "acBoardTrapGlobalsUniqID"), ("AcBoard", "acBoardTrapGlobalsType"), ("AcBoard", "acBoardTrapGlobalsProbableCause"), ("AcBoard", "acBoardTrapGlobalsAdditionalInfo1"), ("AcBoard", "acBoardTrapGlobalsAdditionalInfo2"), ("AcBoard", "acBoardTrapGlobalsAdditionalInfo3"), ("AcBoard", "acBoardTrapGlobalsDateAndTime"))
if mibBuilder.loadTexts: acTrunksAlarmNearEndLOS.setStatus('current')
acTrunksAlarmNearEndLOF = NotificationType((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 21, 2, 0, 50)).setObjects(("AcBoard", "acBoardTrapGlobalsName"), ("AcBoard", "acBoardTrapGlobalsTextualDescription"), ("AcBoard", "acBoardTrapGlobalsSource"), ("AcBoard", "acBoardTrapGlobalsSeverity"), ("AcBoard", "acBoardTrapGlobalsUniqID"), ("AcBoard", "acBoardTrapGlobalsType"), ("AcBoard", "acBoardTrapGlobalsProbableCause"), ("AcBoard", "acBoardTrapGlobalsAdditionalInfo1"), ("AcBoard", "acBoardTrapGlobalsAdditionalInfo2"), ("AcBoard", "acBoardTrapGlobalsAdditionalInfo3"), ("AcBoard", "acBoardTrapGlobalsDateAndTime"))
if mibBuilder.loadTexts: acTrunksAlarmNearEndLOF.setStatus('current')
acTrunksAlarmRcvAIS = NotificationType((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 21, 2, 0, 51)).setObjects(("AcBoard", "acBoardTrapGlobalsName"), ("AcBoard", "acBoardTrapGlobalsTextualDescription"), ("AcBoard", "acBoardTrapGlobalsSource"), ("AcBoard", "acBoardTrapGlobalsSeverity"), ("AcBoard", "acBoardTrapGlobalsUniqID"), ("AcBoard", "acBoardTrapGlobalsType"), ("AcBoard", "acBoardTrapGlobalsProbableCause"), ("AcBoard", "acBoardTrapGlobalsAdditionalInfo1"), ("AcBoard", "acBoardTrapGlobalsAdditionalInfo2"), ("AcBoard", "acBoardTrapGlobalsAdditionalInfo3"), ("AcBoard", "acBoardTrapGlobalsDateAndTime"))
if mibBuilder.loadTexts: acTrunksAlarmRcvAIS.setStatus('current')
acTrunksAlarmFarEndLOF = NotificationType((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 21, 2, 0, 52)).setObjects(("AcBoard", "acBoardTrapGlobalsName"), ("AcBoard", "acBoardTrapGlobalsTextualDescription"), ("AcBoard", "acBoardTrapGlobalsSource"), ("AcBoard", "acBoardTrapGlobalsSeverity"), ("AcBoard", "acBoardTrapGlobalsUniqID"), ("AcBoard", "acBoardTrapGlobalsType"), ("AcBoard", "acBoardTrapGlobalsProbableCause"), ("AcBoard", "acBoardTrapGlobalsAdditionalInfo1"), ("AcBoard", "acBoardTrapGlobalsAdditionalInfo2"), ("AcBoard", "acBoardTrapGlobalsAdditionalInfo3"), ("AcBoard", "acBoardTrapGlobalsDateAndTime"))
if mibBuilder.loadTexts: acTrunksAlarmFarEndLOF.setStatus('current')
acIPv6ErrorAlarm = NotificationType((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 21, 2, 0, 53)).setObjects(("AcBoard", "acBoardTrapGlobalsName"), ("AcBoard", "acBoardTrapGlobalsTextualDescription"), ("AcBoard", "acBoardTrapGlobalsSource"), ("AcBoard", "acBoardTrapGlobalsSeverity"), ("AcBoard", "acBoardTrapGlobalsUniqID"), ("AcBoard", "acBoardTrapGlobalsType"), ("AcBoard", "acBoardTrapGlobalsProbableCause"), ("AcBoard", "acBoardTrapGlobalsAdditionalInfo1"), ("AcBoard", "acBoardTrapGlobalsAdditionalInfo2"), ("AcBoard", "acBoardTrapGlobalsAdditionalInfo3"), ("AcBoard", "acBoardTrapGlobalsDateAndTime"))
if mibBuilder.loadTexts: acIPv6ErrorAlarm.setStatus('current')
acAMSProcedureResult = NotificationType((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 21, 2, 0, 54)).setObjects(("AcBoard", "acBoardTrapGlobalsName"), ("AcBoard", "acBoardTrapGlobalsTextualDescription"), ("AcBoard", "acBoardTrapGlobalsSource"), ("AcBoard", "acBoardTrapGlobalsSeverity"), ("AcBoard", "acBoardTrapGlobalsUniqID"), ("AcBoard", "acBoardTrapGlobalsType"), ("AcBoard", "acBoardTrapGlobalsProbableCause"), ("AcBoard", "acBoardTrapGlobalsAdditionalInfo1"), ("AcBoard", "acBoardTrapGlobalsAdditionalInfo2"), ("AcBoard", "acBoardTrapGlobalsAdditionalInfo3"), ("AcBoard", "acBoardTrapGlobalsDateAndTime"))
if mibBuilder.loadTexts: acAMSProcedureResult.setStatus('current')
acWeakRedundancy = NotificationType((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 21, 2, 0, 55)).setObjects(("AcBoard", "acBoardTrapGlobalsName"), ("AcBoard", "acBoardTrapGlobalsTextualDescription"), ("AcBoard", "acBoardTrapGlobalsSource"), ("AcBoard", "acBoardTrapGlobalsSeverity"), ("AcBoard", "acBoardTrapGlobalsUniqID"), ("AcBoard", "acBoardTrapGlobalsType"), ("AcBoard", "acBoardTrapGlobalsProbableCause"), ("AcBoard", "acBoardTrapGlobalsAdditionalInfo1"), ("AcBoard", "acBoardTrapGlobalsAdditionalInfo2"), ("AcBoard", "acBoardTrapGlobalsAdditionalInfo3"), ("AcBoard", "acBoardTrapGlobalsDateAndTime"))
if mibBuilder.loadTexts: acWeakRedundancy.setStatus('current')
acTMInconsistentRemoteAndLocalPLLStatus = NotificationType((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 21, 2, 0, 56)).setObjects(("AcBoard", "acBoardTrapGlobalsName"), ("AcBoard", "acBoardTrapGlobalsTextualDescription"), ("AcBoard", "acBoardTrapGlobalsSource"), ("AcBoard", "acBoardTrapGlobalsSeverity"), ("AcBoard", "acBoardTrapGlobalsUniqID"), ("AcBoard", "acBoardTrapGlobalsType"), ("AcBoard", "acBoardTrapGlobalsProbableCause"), ("AcBoard", "acBoardTrapGlobalsAdditionalInfo1"), ("AcBoard", "acBoardTrapGlobalsAdditionalInfo2"), ("AcBoard", "acBoardTrapGlobalsAdditionalInfo3"), ("AcBoard", "acBoardTrapGlobalsDateAndTime"))
if mibBuilder.loadTexts: acTMInconsistentRemoteAndLocalPLLStatus.setStatus('current')
acTMReferenceStatus = NotificationType((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 21, 2, 0, 57)).setObjects(("AcBoard", "acBoardTrapGlobalsName"), ("AcBoard", "acBoardTrapGlobalsTextualDescription"), ("AcBoard", "acBoardTrapGlobalsSource"), ("AcBoard", "acBoardTrapGlobalsSeverity"), ("AcBoard", "acBoardTrapGlobalsUniqID"), ("AcBoard", "acBoardTrapGlobalsType"), ("AcBoard", "acBoardTrapGlobalsProbableCause"), ("AcBoard", "acBoardTrapGlobalsAdditionalInfo1"), ("AcBoard", "acBoardTrapGlobalsAdditionalInfo2"), ("AcBoard", "acBoardTrapGlobalsAdditionalInfo3"), ("AcBoard", "acBoardTrapGlobalsDateAndTime"))
if mibBuilder.loadTexts: acTMReferenceStatus.setStatus('current')
acTMReferenceChange = NotificationType((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 21, 2, 0, 58)).setObjects(("AcBoard", "acBoardTrapGlobalsName"), ("AcBoard", "acBoardTrapGlobalsTextualDescription"), ("AcBoard", "acBoardTrapGlobalsSource"), ("AcBoard", "acBoardTrapGlobalsSeverity"), ("AcBoard", "acBoardTrapGlobalsUniqID"), ("AcBoard", "acBoardTrapGlobalsType"), ("AcBoard", "acBoardTrapGlobalsProbableCause"), ("AcBoard", "acBoardTrapGlobalsAdditionalInfo1"), ("AcBoard", "acBoardTrapGlobalsAdditionalInfo2"), ("AcBoard", "acBoardTrapGlobalsAdditionalInfo3"), ("AcBoard", "acBoardTrapGlobalsDateAndTime"))
if mibBuilder.loadTexts: acTMReferenceChange.setStatus('current')
acGWSASEmergencyModeAlarm = NotificationType((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 21, 2, 0, 59)).setObjects(("AcBoard", "acBoardTrapGlobalsName"), ("AcBoard", "acBoardTrapGlobalsTextualDescription"), ("AcBoard", "acBoardTrapGlobalsSource"), ("AcBoard", "acBoardTrapGlobalsSeverity"), ("AcBoard", "acBoardTrapGlobalsUniqID"), ("AcBoard", "acBoardTrapGlobalsType"), ("AcBoard", "acBoardTrapGlobalsProbableCause"), ("AcBoard", "acBoardTrapGlobalsAdditionalInfo1"), ("AcBoard", "acBoardTrapGlobalsAdditionalInfo2"), ("AcBoard", "acBoardTrapGlobalsAdditionalInfo3"), ("AcBoard", "acBoardTrapGlobalsDateAndTime"))
if mibBuilder.loadTexts: acGWSASEmergencyModeAlarm.setStatus('current')
acV52InterfaceAlarm = NotificationType((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 21, 2, 0, 60)).setObjects(("AcBoard", "acBoardTrapGlobalsName"), ("AcBoard", "acBoardTrapGlobalsTextualDescription"), ("AcBoard", "acBoardTrapGlobalsSource"), ("AcBoard", "acBoardTrapGlobalsSeverity"), ("AcBoard", "acBoardTrapGlobalsUniqID"), ("AcBoard", "acBoardTrapGlobalsType"), ("AcBoard", "acBoardTrapGlobalsProbableCause"), ("AcBoard", "acBoardTrapGlobalsAdditionalInfo1"), ("AcBoard", "acBoardTrapGlobalsAdditionalInfo2"), ("AcBoard", "acBoardTrapGlobalsAdditionalInfo3"), ("AcBoard", "acBoardTrapGlobalsDateAndTime"))
if mibBuilder.loadTexts: acV52InterfaceAlarm.setStatus('current')
acSonetPathSTSLOPAlarm = NotificationType((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 21, 2, 0, 61)).setObjects(("AcBoard", "acBoardTrapGlobalsName"), ("AcBoard", "acBoardTrapGlobalsTextualDescription"), ("AcBoard", "acBoardTrapGlobalsSource"), ("AcBoard", "acBoardTrapGlobalsSeverity"), ("AcBoard", "acBoardTrapGlobalsUniqID"), ("AcBoard", "acBoardTrapGlobalsType"), ("AcBoard", "acBoardTrapGlobalsProbableCause"), ("AcBoard", "acBoardTrapGlobalsAdditionalInfo1"), ("AcBoard", "acBoardTrapGlobalsAdditionalInfo2"), ("AcBoard", "acBoardTrapGlobalsAdditionalInfo3"), ("AcBoard", "acBoardTrapGlobalsDateAndTime"))
if mibBuilder.loadTexts: acSonetPathSTSLOPAlarm.setStatus('current')
acSonetPathSTSAISAlarm = NotificationType((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 21, 2, 0, 62)).setObjects(("AcBoard", "acBoardTrapGlobalsName"), ("AcBoard", "acBoardTrapGlobalsTextualDescription"), ("AcBoard", "acBoardTrapGlobalsSource"), ("AcBoard", "acBoardTrapGlobalsSeverity"), ("AcBoard", "acBoardTrapGlobalsUniqID"), ("AcBoard", "acBoardTrapGlobalsType"), ("AcBoard", "acBoardTrapGlobalsProbableCause"), ("AcBoard", "acBoardTrapGlobalsAdditionalInfo1"), ("AcBoard", "acBoardTrapGlobalsAdditionalInfo2"), ("AcBoard", "acBoardTrapGlobalsAdditionalInfo3"), ("AcBoard", "acBoardTrapGlobalsDateAndTime"))
if mibBuilder.loadTexts: acSonetPathSTSAISAlarm.setStatus('current')
acSonetPathSTSRDIAlarm = NotificationType((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 21, 2, 0, 63)).setObjects(("AcBoard", "acBoardTrapGlobalsName"), ("AcBoard", "acBoardTrapGlobalsTextualDescription"), ("AcBoard", "acBoardTrapGlobalsSource"), ("AcBoard", "acBoardTrapGlobalsSeverity"), ("AcBoard", "acBoardTrapGlobalsUniqID"), ("AcBoard", "acBoardTrapGlobalsType"), ("AcBoard", "acBoardTrapGlobalsProbableCause"), ("AcBoard", "acBoardTrapGlobalsAdditionalInfo1"), ("AcBoard", "acBoardTrapGlobalsAdditionalInfo2"), ("AcBoard", "acBoardTrapGlobalsAdditionalInfo3"), ("AcBoard", "acBoardTrapGlobalsDateAndTime"))
if mibBuilder.loadTexts: acSonetPathSTSRDIAlarm.setStatus('current')
acSonetPathUnequippedAlarm = NotificationType((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 21, 2, 0, 64)).setObjects(("AcBoard", "acBoardTrapGlobalsName"), ("AcBoard", "acBoardTrapGlobalsTextualDescription"), ("AcBoard", "acBoardTrapGlobalsSource"), ("AcBoard", "acBoardTrapGlobalsSeverity"), ("AcBoard", "acBoardTrapGlobalsUniqID"), ("AcBoard", "acBoardTrapGlobalsType"), ("AcBoard", "acBoardTrapGlobalsProbableCause"), ("AcBoard", "acBoardTrapGlobalsAdditionalInfo1"), ("AcBoard", "acBoardTrapGlobalsAdditionalInfo2"), ("AcBoard", "acBoardTrapGlobalsAdditionalInfo3"), ("AcBoard", "acBoardTrapGlobalsDateAndTime"))
if mibBuilder.loadTexts: acSonetPathUnequippedAlarm.setStatus('current')
acSonetPathSignalLabelMismatchAlarm = NotificationType((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 21, 2, 0, 65)).setObjects(("AcBoard", "acBoardTrapGlobalsName"), ("AcBoard", "acBoardTrapGlobalsTextualDescription"), ("AcBoard", "acBoardTrapGlobalsSource"), ("AcBoard", "acBoardTrapGlobalsSeverity"), ("AcBoard", "acBoardTrapGlobalsUniqID"), ("AcBoard", "acBoardTrapGlobalsType"), ("AcBoard", "acBoardTrapGlobalsProbableCause"), ("AcBoard", "acBoardTrapGlobalsAdditionalInfo1"), ("AcBoard", "acBoardTrapGlobalsAdditionalInfo2"), ("AcBoard", "acBoardTrapGlobalsAdditionalInfo3"), ("AcBoard", "acBoardTrapGlobalsDateAndTime"))
if mibBuilder.loadTexts: acSonetPathSignalLabelMismatchAlarm.setStatus('current')
acDS3RAIAlarm = NotificationType((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 21, 2, 0, 66)).setObjects(("AcBoard", "acBoardTrapGlobalsName"), ("AcBoard", "acBoardTrapGlobalsTextualDescription"), ("AcBoard", "acBoardTrapGlobalsSource"), ("AcBoard", "acBoardTrapGlobalsSeverity"), ("AcBoard", "acBoardTrapGlobalsUniqID"), ("AcBoard", "acBoardTrapGlobalsType"), ("AcBoard", "acBoardTrapGlobalsProbableCause"), ("AcBoard", "acBoardTrapGlobalsAdditionalInfo1"), ("AcBoard", "acBoardTrapGlobalsAdditionalInfo2"), ("AcBoard", "acBoardTrapGlobalsAdditionalInfo3"), ("AcBoard", "acBoardTrapGlobalsDateAndTime"))
if mibBuilder.loadTexts: acDS3RAIAlarm.setStatus('current')
acDS3AISAlarm = NotificationType((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 21, 2, 0, 67)).setObjects(("AcBoard", "acBoardTrapGlobalsName"), ("AcBoard", "acBoardTrapGlobalsTextualDescription"), ("AcBoard", "acBoardTrapGlobalsSource"), ("AcBoard", "acBoardTrapGlobalsSeverity"), ("AcBoard", "acBoardTrapGlobalsUniqID"), ("AcBoard", "acBoardTrapGlobalsType"), ("AcBoard", "acBoardTrapGlobalsProbableCause"), ("AcBoard", "acBoardTrapGlobalsAdditionalInfo1"), ("AcBoard", "acBoardTrapGlobalsAdditionalInfo2"), ("AcBoard", "acBoardTrapGlobalsAdditionalInfo3"), ("AcBoard", "acBoardTrapGlobalsDateAndTime"))
if mibBuilder.loadTexts: acDS3AISAlarm.setStatus('current')
acDS3LOFAlarm = NotificationType((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 21, 2, 0, 68)).setObjects(("AcBoard", "acBoardTrapGlobalsName"), ("AcBoard", "acBoardTrapGlobalsTextualDescription"), ("AcBoard", "acBoardTrapGlobalsSource"), ("AcBoard", "acBoardTrapGlobalsSeverity"), ("AcBoard", "acBoardTrapGlobalsUniqID"), ("AcBoard", "acBoardTrapGlobalsType"), ("AcBoard", "acBoardTrapGlobalsProbableCause"), ("AcBoard", "acBoardTrapGlobalsAdditionalInfo1"), ("AcBoard", "acBoardTrapGlobalsAdditionalInfo2"), ("AcBoard", "acBoardTrapGlobalsAdditionalInfo3"), ("AcBoard", "acBoardTrapGlobalsDateAndTime"))
if mibBuilder.loadTexts: acDS3LOFAlarm.setStatus('current')
acDS3LOSAlarm = NotificationType((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 21, 2, 0, 69)).setObjects(("AcBoard", "acBoardTrapGlobalsName"), ("AcBoard", "acBoardTrapGlobalsTextualDescription"), ("AcBoard", "acBoardTrapGlobalsSource"), ("AcBoard", "acBoardTrapGlobalsSeverity"), ("AcBoard", "acBoardTrapGlobalsUniqID"), ("AcBoard", "acBoardTrapGlobalsType"), ("AcBoard", "acBoardTrapGlobalsProbableCause"), ("AcBoard", "acBoardTrapGlobalsAdditionalInfo1"), ("AcBoard", "acBoardTrapGlobalsAdditionalInfo2"), ("AcBoard", "acBoardTrapGlobalsAdditionalInfo3"), ("AcBoard", "acBoardTrapGlobalsDateAndTime"))
if mibBuilder.loadTexts: acDS3LOSAlarm.setStatus('current')
acSWUpgradeAlarm = NotificationType((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 21, 2, 0, 70)).setObjects(("AcBoard", "acBoardTrapGlobalsName"), ("AcBoard", "acBoardTrapGlobalsTextualDescription"), ("AcBoard", "acBoardTrapGlobalsSource"), ("AcBoard", "acBoardTrapGlobalsSeverity"), ("AcBoard", "acBoardTrapGlobalsUniqID"), ("AcBoard", "acBoardTrapGlobalsType"), ("AcBoard", "acBoardTrapGlobalsProbableCause"), ("AcBoard", "acBoardTrapGlobalsAdditionalInfo1"), ("AcBoard", "acBoardTrapGlobalsAdditionalInfo2"), ("AcBoard", "acBoardTrapGlobalsAdditionalInfo3"), ("AcBoard", "acBoardTrapGlobalsDateAndTime"))
if mibBuilder.loadTexts: acSWUpgradeAlarm.setStatus('current')
acNTPServerStatusAlarm = NotificationType((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 21, 2, 0, 71)).setObjects(("AcBoard", "acBoardTrapGlobalsName"), ("AcBoard", "acBoardTrapGlobalsTextualDescription"), ("AcBoard", "acBoardTrapGlobalsSource"), ("AcBoard", "acBoardTrapGlobalsSeverity"), ("AcBoard", "acBoardTrapGlobalsUniqID"), ("AcBoard", "acBoardTrapGlobalsType"), ("AcBoard", "acBoardTrapGlobalsProbableCause"), ("AcBoard", "acBoardTrapGlobalsAdditionalInfo1"), ("AcBoard", "acBoardTrapGlobalsAdditionalInfo2"), ("AcBoard", "acBoardTrapGlobalsAdditionalInfo3"), ("AcBoard", "acBoardTrapGlobalsDateAndTime"))
if mibBuilder.loadTexts: acNTPServerStatusAlarm.setStatus('current')
acThreeWayConferenceOutOfResources = NotificationType((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 21, 2, 0, 72)).setObjects(("AcBoard", "acBoardTrapGlobalsName"), ("AcBoard", "acBoardTrapGlobalsTextualDescription"), ("AcBoard", "acBoardTrapGlobalsSource"), ("AcBoard", "acBoardTrapGlobalsSeverity"), ("AcBoard", "acBoardTrapGlobalsUniqID"), ("AcBoard", "acBoardTrapGlobalsType"), ("AcBoard", "acBoardTrapGlobalsProbableCause"), ("AcBoard", "acBoardTrapGlobalsAdditionalInfo1"), ("AcBoard", "acBoardTrapGlobalsAdditionalInfo2"), ("AcBoard", "acBoardTrapGlobalsAdditionalInfo3"), ("AcBoard", "acBoardTrapGlobalsDateAndTime"))
if mibBuilder.loadTexts: acThreeWayConferenceOutOfResources.setStatus('current')
acSS7AliasPcStateChangeAlarm = NotificationType((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 21, 2, 0, 73)).setObjects(("AcBoard", "acBoardTrapGlobalsName"), ("AcBoard", "acBoardTrapGlobalsTextualDescription"), ("AcBoard", "acBoardTrapGlobalsSource"), ("AcBoard", "acBoardTrapGlobalsSeverity"), ("AcBoard", "acBoardTrapGlobalsUniqID"), ("AcBoard", "acBoardTrapGlobalsType"), ("AcBoard", "acBoardTrapGlobalsProbableCause"), ("AcBoard", "acBoardTrapGlobalsAdditionalInfo1"), ("AcBoard", "acBoardTrapGlobalsAdditionalInfo2"), ("AcBoard", "acBoardTrapGlobalsAdditionalInfo3"), ("AcBoard", "acBoardTrapGlobalsDateAndTime"))
if mibBuilder.loadTexts: acSS7AliasPcStateChangeAlarm.setStatus('current')
acSS7UalGroupStateChangeAlarm = NotificationType((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 21, 2, 0, 74)).setObjects(("AcBoard", "acBoardTrapGlobalsName"), ("AcBoard", "acBoardTrapGlobalsTextualDescription"), ("AcBoard", "acBoardTrapGlobalsSource"), ("AcBoard", "acBoardTrapGlobalsSeverity"), ("AcBoard", "acBoardTrapGlobalsUniqID"), ("AcBoard", "acBoardTrapGlobalsType"), ("AcBoard", "acBoardTrapGlobalsProbableCause"), ("AcBoard", "acBoardTrapGlobalsAdditionalInfo1"), ("AcBoard", "acBoardTrapGlobalsAdditionalInfo2"), ("AcBoard", "acBoardTrapGlobalsAdditionalInfo3"), ("AcBoard", "acBoardTrapGlobalsDateAndTime"))
if mibBuilder.loadTexts: acSS7UalGroupStateChangeAlarm.setStatus('current')
acLDAPLostConnection = NotificationType((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 21, 2, 0, 75)).setObjects(("AcBoard", "acBoardTrapGlobalsName"), ("AcBoard", "acBoardTrapGlobalsTextualDescription"), ("AcBoard", "acBoardTrapGlobalsSource"), ("AcBoard", "acBoardTrapGlobalsSeverity"), ("AcBoard", "acBoardTrapGlobalsUniqID"), ("AcBoard", "acBoardTrapGlobalsType"), ("AcBoard", "acBoardTrapGlobalsProbableCause"), ("AcBoard", "acBoardTrapGlobalsAdditionalInfo1"), ("AcBoard", "acBoardTrapGlobalsAdditionalInfo2"), ("AcBoard", "acBoardTrapGlobalsAdditionalInfo3"), ("AcBoard", "acBoardTrapGlobalsDateAndTime"))
if mibBuilder.loadTexts: acLDAPLostConnection.setStatus('current')
acAnalogPortGroundFaultOutOfService = NotificationType((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 21, 2, 0, 76)).setObjects(("AcBoard", "acBoardTrapGlobalsName"), ("AcBoard", "acBoardTrapGlobalsTextualDescription"), ("AcBoard", "acBoardTrapGlobalsSource"), ("AcBoard", "acBoardTrapGlobalsSeverity"), ("AcBoard", "acBoardTrapGlobalsUniqID"), ("AcBoard", "acBoardTrapGlobalsType"), ("AcBoard", "acBoardTrapGlobalsProbableCause"), ("AcBoard", "acBoardTrapGlobalsAdditionalInfo1"), ("AcBoard", "acBoardTrapGlobalsAdditionalInfo2"), ("AcBoard", "acBoardTrapGlobalsAdditionalInfo3"), ("AcBoard", "acBoardTrapGlobalsDateAndTime"))
if mibBuilder.loadTexts: acAnalogPortGroundFaultOutOfService.setStatus('current')
acSSHConnectionStatus = NotificationType((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 21, 2, 0, 77)).setObjects(("AcBoard", "acBoardTrapGlobalsName"), ("AcBoard", "acBoardTrapGlobalsTextualDescription"), ("AcBoard", "acBoardTrapGlobalsSource"), ("AcBoard", "acBoardTrapGlobalsSeverity"), ("AcBoard", "acBoardTrapGlobalsUniqID"), ("AcBoard", "acBoardTrapGlobalsType"), ("AcBoard", "acBoardTrapGlobalsProbableCause"), ("AcBoard", "acBoardTrapGlobalsAdditionalInfo1"), ("AcBoard", "acBoardTrapGlobalsAdditionalInfo2"), ("AcBoard", "acBoardTrapGlobalsAdditionalInfo3"), ("AcBoard", "acBoardTrapGlobalsDateAndTime"))
if mibBuilder.loadTexts: acSSHConnectionStatus.setStatus('current')
acOCSPServerStatusAlarm = NotificationType((1, 3, 6, 1, 4, 1, 5003, 9, 10, 1, 21, 2, 0, 78)).setObjects(("AcBoard", "acBoardTrapGlobalsName"), ("AcBoard", "acBoardTrapGlobalsTextualDescription"), ("AcBoard", "acBoardTrapGlobalsSource"), ("AcBoard", "acBoardTrapGlobalsSeverity"), ("AcBoard", "acBoardTrapGlobalsUniqID"), ("AcBoard", "acBoardTrapGlobalsType"), ("AcBoard", "acBoardTrapGlobalsProbableCause"), ("AcBoard", "acBoardTrapGlobalsAdditionalInfo1"), ("AcBoard", "acBoardTrapGlobalsAdditionalInfo2"), ("AcBoard", "acBoardTrapGlobalsAdditionalInfo3"), ("AcBoard", "acBoardTrapGlobalsDateAndTime"))
if mibBuilder.loadTexts: acOCSPServerStatusAlarm.setStatus('current')
mibBuilder.exportSymbols("AcBoard", eCE=eCE, testMode=testMode, utopiaBus16=utopiaBus16, jitterBufForcedPacketLost=jitterBufForcedPacketLost, rxFaxMode=rxFaxMode, dSPCount=dSPCount, iniFileVersion=iniFileVersion, acCasTablesEntry=acCasTablesEntry, acSS7LinkInhibitStateChangeAlarm=acSS7LinkInhibitStateChangeAlarm, acMeanFreeChannels=acMeanFreeChannels, acSS7SettingsEntry=acSS7SettingsEntry, acSNMPManagerIP=acSNMPManagerIP, auxiliarySettings=auxiliarySettings, cNAME=cNAME, acFeatureKey=acFeatureKey, acSS7UalGroupStateChangeAlarm=acSS7UalGroupStateChangeAlarm, acSS7RouteSetStateChangeAlarm=acSS7RouteSetStateChangeAlarm, acIPv6ErrorAlarm=acIPv6ErrorAlarm, snmpManagerIp=snmpManagerIp, externalClk=externalClk, amsApsIpAddress=amsApsIpAddress, amsNumOfLawfulInterceptPorts=amsNumOfLawfulInterceptPorts, acSS7traceLevel=acSS7traceLevel, acBoardTrapGlobals=acBoardTrapGlobals, acPowerSupplyAlarm=acPowerSupplyAlarm, acFeatureKeyError=acFeatureKeyError, acNTPUpdateInterval=acNTPUpdateInterval, bypassNIC=bypassNIC, acSonetSectionLOSAlarm=acSonetSectionLOSAlarm, jitterBufAccumDelay=jitterBufAccumDelay, acChDefaultFaxTransportMode=acChDefaultFaxTransportMode, acBoardFatalError=acBoardFatalError, rTPRTCPSettingsEntry=rTPRTCPSettingsEntry, snmpManagersTable=snmpManagersTable, snmpManagers=snmpManagers, acOCSPServerStatusAlarm=acOCSPServerStatusAlarm, snmpManagersEntry=snmpManagersEntry, acSS7LinkCongestionStateChangeAlarm=acSS7LinkCongestionStateChangeAlarm, pFE=pFE, acTrunksAlarmFarEndLOF=acTrunksAlarmFarEndLOF, iPTOS=iPTOS, lineBuildOutXPM2=lineBuildOutXPM2, acCasTabeName=acCasTabeName, acSonetPathSTSAISAlarm=acSonetPathSTSAISAlarm, fAXTransportType=fAXTransportType, v34ModemTransportType=v34ModemTransportType, enhancedFaxRelayRedundancyDepth=enhancedFaxRelayRedundancyDepth, rxDTMFPeriod=rxDTMFPeriod, transportSettingsTable=transportSettingsTable, txRTPPayloadType=txRTPPayloadType, acTrunksAlarmNearEndLOS=acTrunksAlarmNearEndLOS, acChDefaultFaxRelayECMEnable=acChDefaultFaxRelayECMEnable, acWEBAccessIndex=acWEBAccessIndex, tDMBusClockSource=tDMBusClockSource, baseUDPPort=baseUDPPort, voiceVolume=voiceVolume, dJBSettings=dJBSettings, cID=cID, acSonetPathSTSLOPAlarm=acSonetPathSTSLOPAlarm, trunkPackSoftwareDate=trunkPackSoftwareDate, acLDAPLostConnection=acLDAPLostConnection, acActiveAlarmTableOverflow=acActiveAlarmTableOverflow, acNTPSettings=acNTPSettings, acV5InterfaceTrunkGroupId=acV5InterfaceTrunkGroupId, channelConfiguration=channelConfiguration, snmpManagerIsUsed=snmpManagerIsUsed, acKeepAlive=acKeepAlive, txDTMFPeriod=txDTMFPeriod, channelsCount=channelsCount, transportSettingsEntry=transportSettingsEntry, cPUSpeed=cPUSpeed, snmpManagerTrapSendingEnable=snmpManagerTrapSendingEnable, acBoardTrapGlobalsSeverity=acBoardTrapGlobalsSeverity, acThreeWayConferenceOutOfResources=acThreeWayConferenceOutOfResources, acBoardTrapGlobalsAdditionalInfo3=acBoardTrapGlobalsAdditionalInfo3, networkSettings=networkSettings, megacoSettings=megacoSettings, faxModemBypassCoderType=faxModemBypassCoderType, acCasTablesTable=acCasTablesTable, voiceSettingsEntry=voiceSettingsEntry, acSS7SettingsTable=acSS7SettingsTable, rxRTPPayloadType=rxRTPPayloadType, acTMReferenceChange=acTMReferenceChange, acTrap=acTrap, tPNCPVCI=tPNCPVCI, acWEBAccessRowStatus=acWEBAccessRowStatus, acQ931RELAYMODE=acQ931RELAYMODE, redundantCallAgentDomainName=redundantCallAgentDomainName, faxModemSettingsTable=faxModemSettingsTable, terminationSide=terminationSide, boardInformation=boardInformation, acV52InterfaceAlarm=acV52InterfaceAlarm, channelTDMBusSettingsTable=channelTDMBusSettingsTable, acIsdnOutgoingCallsBehavior=acIsdnOutgoingCallsBehavior, tDMBusEnableFallBack=tDMBusEnableFallBack, acCPControlDiffServ=acCPControlDiffServ, acConfigFiles=acConfigFiles, acChDefaultRTPRedundancyDepth=acChDefaultRTPRedundancyDepth, amsPrimaryLanguage=amsPrimaryLanguage, acSyslogServerIP=acSyslogServerIP, framingMethod=framingMethod, acWEBAccessTable=acWEBAccessTable, tDMBusOutputPort=tDMBusOutputPort, acNTPServerStatusAlarm=acNTPServerStatusAlarm, acWeakRedundancy=acWeakRedundancy, acDisableWEBConfig=acDisableWEBConfig, acHASystemFaultAlarm=acHASystemFaultAlarm, acBoardTemperature=acBoardTemperature, remoteResetControl=remoteResetControl, idleABCD=idleABCD, mGCPCommunicationLayerTimeout=mGCPCommunicationLayerTimeout, acSonetSectionLOFAlarm=acSonetSectionLOFAlarm, snmpManagerIndex=snmpManagerIndex, remoteReset=remoteReset, faxModemSettingsEntry=faxModemSettingsEntry, acSS7LinkSetStateChangeAlarm=acSS7LinkSetStateChangeAlarm, acBoardEvResettingBoard=acBoardEvResettingBoard, acBoardTrapDefinitions=acBoardTrapDefinitions, rTPRedundancyDepth=rTPRedundancyDepth, acEnhancedBITStatus=acEnhancedBITStatus, boardTDMBusOutputPort=boardTDMBusOutputPort, acChDefaultCallerIDType=acChDefaultCallerIDType, acLedStatusRate=acLedStatusRate, boardTDMBusSettings=boardTDMBusSettings, acIsdnQ931LayerResponseBehavior=acIsdnQ931LayerResponseBehavior, acRegistrations=acRegistrations, aTMSettings=aTMSettings, acSS7LinkId=acSS7LinkId, sendIdleCASUponLinkFail=sendIdleCASUponLinkFail, localRTPPort=localRTPPort, acV5LinkIdOld=acV5LinkIdOld, acOperationalStateChange=acOperationalStateChange, acBoardTemperatureAlarm=acBoardTemperatureAlarm, aTMLoopBack=aTMLoopBack, remoteT38Port=remoteT38Port, dJBufOptFactor=dJBufOptFactor, acIsdnNfasGroupNumber=acIsdnNfasGroupNumber, acPSTNCASTableNum=acPSTNCASTableNum, acBoard=acBoard, acChDefaultDJBufMinDelay=acChDefaultDJBufMinDelay, acSS7LinkBlockStateChangeAlarm=acSS7LinkBlockStateChangeAlarm, acNTPUtcOffset=acNTPUtcOffset, acSonetPathSTSRDIAlarm=acSonetPathSTSRDIAlarm, acBoardFxsOrFxo=acBoardFxsOrFxo, endPointName=endPointName, amsApsPort=amsApsPort, tDMBusMasterSlaveSelection=tDMBusMasterSlaveSelection, acChDefaultDJBufOptFactor=acChDefaultDJBufOptFactor, acHASystemConfigMismatchAlarm=acHASystemConfigMismatchAlarm, acLedStatusColor=acLedStatusColor, acSetDefaults=acSetDefaults, redundantAgentPort=redundantAgentPort, sCE=sCE, faxModemRelayVolume=faxModemRelayVolume, dJBSettingsEntry=dJBSettingsEntry, acNATTraversalAlarm=acNATTraversalAlarm, disablePayloadScrambling=disablePayloadScrambling, snmpManagerTrapPort=snmpManagerTrapPort, acAnalogPortHighTemperature=acAnalogPortHighTemperature, callAgentPort=callAgentPort, dePopulatedChannelsNumber=dePopulatedChannelsNumber, gateWayName=gateWayName, amsProfile=amsProfile, acDS3AISAlarm=acDS3AISAlarm, acMGControlProtocolType=acMGControlProtocolType, acUserInputAlarm=acUserInputAlarm, acPEMAlarm=acPEMAlarm, acWEBAccess=acWEBAccess, inputGain=inputGain, acTrunkslCount=acTrunkslCount, aMsConfiguration=aMsConfiguration, rTPRTCPSettings=rTPRTCPSettings, jitterBufOverRunCnt=jitterBufOverRunCnt, acTrunkAdminState=acTrunkAdminState, faxModemSettings=faxModemSettings, acPMStatus=acPMStatus, acWEBAccessUserName=acWEBAccessUserName, acBoardMibs=acBoardMibs, acCallerIDType=acCallerIDType, protocolType=protocolType, acMaxFreeChannels=acMaxFreeChannels, acChDefaultV34ModemTransportType=acChDefaultV34ModemTransportType, acSonetLineRDIAlarm=acSonetLineRDIAlarm, acAudioProvisioningAlarm=acAudioProvisioningAlarm, acChDefaultEchoCanclerHybridLoss=acChDefaultEchoCanclerHybridLoss, acChDefaultDTMFTransportType=acChDefaultDTMFTransportType, acHTTPDownloadResult=acHTTPDownloadResult, acChDefaultRtpIpTos=acChDefaultRtpIpTos, acSonetIfHwFailureAlarm=acSonetIfHwFailureAlarm, acFirstPortDuplexMode=acFirstPortDuplexMode, acChDefaultMFTransportType=acChDefaultMFTransportType, modemRelayRedundancyDepth=modemRelayRedundancyDepth, acChDefaultDTMFDetectionPoint=acChDefaultDTMFDetectionPoint, remoteRTPAddr=remoteRTPAddr, slotNumber=slotNumber, acChDefaultV23ModemTransportType=acChDefaultV23ModemTransportType, acSysUpTime=acSysUpTime, acBoardTrapGlobalsAdditionalInfo2=acBoardTrapGlobalsAdditionalInfo2, remoteRTPPort=remoteRTPPort, acHASystemSwitchOverAlarm=acHASystemSwitchOverAlarm, v21ModemTransportType=v21ModemTransportType, megacoEndpointName=megacoEndpointName, megacoTrunkName=megacoTrunkName, acBoardTrapGlobalsName=acBoardTrapGlobalsName, acAtmPortAlarm=acAtmPortAlarm, amsNumOfAnnouncementPorts=amsNumOfAnnouncementPorts, megacoActiveCallAgentPort=megacoActiveCallAgentPort, sAALLink0VPI=sAALLink0VPI, dJBSettingsTable=dJBSettingsTable, acFlashVersion=acFlashVersion, acFanTrayAlarm=acFanTrayAlarm, acSS7LinkStateChangeAlarm=acSS7LinkStateChangeAlarm, acAMSProcedureResult=acAMSProcedureResult, faxModemBypassM=faxModemBypassM, acOverrideDefaultIdlePCMPattern=acOverrideDefaultIdlePCMPattern, megacoCallAgentPort=megacoCallAgentPort, acBoardTrapGlobalsSource=acBoardTrapGlobalsSource, txSilencePeriod=txSilencePeriod, acOverrideDefaultIdleABCDPattern=acOverrideDefaultIdleABCDPattern, megacoCallAgentIsUsed=megacoCallAgentIsUsed, v32ModemTransportType=v32ModemTransportType, amsNumOfConferencePorts=amsNumOfConferencePorts, megacoCallAgentsTable=megacoCallAgentsTable, acChDefaultFaxModemBypassM=acChDefaultFaxModemBypassM, tDMBusInputChannel=tDMBusInputChannel, acCasTables=acCasTables, hPFE=hPFE, acChDefaultFaxModemBypassCoderType=acChDefaultFaxModemBypassCoderType, acSS7AliasPcStateChangeAlarm=acSS7AliasPcStateChangeAlarm, acTrunksAlarmRcvAIS=acTrunksAlarmRcvAIS, acActiveFeaturesList=acActiveFeaturesList, masterSlaveMode=masterSlaveMode, supplementary=supplementary, eCHybridLoss=eCHybridLoss, sAALLink1VCI=sAALLink1VCI, acWEBAccessActionResult=acWEBAccessActionResult, megacoCallAgentIp=megacoCallAgentIp, tDMBusOutputChannel=tDMBusOutputChannel, acSonetLineAISAlarm=acSonetLineAISAlarm, acWEBAccessEntry=acWEBAccessEntry, acSaveConfigToSystem=acSaveConfigToSystem, acChDefaultTestMode=acChDefaultTestMode, txFaxMode=txFaxMode, acBoardOverloadAlarm=acBoardOverloadAlarm, utopiaSlave=utopiaSlave, acAnalogPortGroundFaultOutOfService=acAnalogPortGroundFaultOutOfService, channelHookState=channelHookState, acFxs=acFxs, slavePhyNum=slavePhyNum, rxSilencePeriod=rxSilencePeriod, acTrunksAlarmNearEndLOF=acTrunksAlarmNearEndLOF, mGCPSettings=mGCPSettings, boardIPAddr=boardIPAddr, vCMask=vCMask)
mibBuilder.exportSymbols("AcBoard", acSAMissingAlarm=acSAMissingAlarm, tDMBusInputPort=tDMBusInputPort, acTrunkCasTableIndex=acTrunkCasTableIndex, acDS3RAIAlarm=acDS3RAIAlarm, dJBufMinDelay=dJBufMinDelay, rTPRTCPSettingsTable=rTPRTCPSettingsTable, megacoCurrentProfile=megacoCurrentProfile, acOperationalState=acOperationalState, acNTPServerIPAddress=acNTPServerIPAddress, acChDefaultModemRelayMaxRate=acChDefaultModemRelayMaxRate, voiceSettingsTable=voiceSettingsTable, t38FaxRelayProtectionMode=t38FaxRelayProtectionMode, acHwFailureAlarm=acHwFailureAlarm, acSS7SNSetStateChangeAlarm=acSS7SNSetStateChangeAlarm, pendingIdle=pendingIdle, acSWUpgradeAlarm=acSWUpgradeAlarm, pCMLawSelect=pCMLawSelect, callAgentIP=callAgentIP, trunkSettingsTable=trunkSettingsTable, megacoCallAgents=megacoCallAgents, acDialPlanFileReplaced=acDialPlanFileReplaced, acChDefaultDTMFVolume=acChDefaultDTMFVolume, softwareVersion=softwareVersion, fXSorFXO=fXSorFXO, tDMBusType=tDMBusType, channelStatus=channelStatus, acChDefaultFaxRelayRedundancyDepth=acChDefaultFaxRelayRedundancyDepth, acCasTableIndex=acCasTableIndex, acSonetPathUnequippedAlarm=acSonetPathUnequippedAlarm, acChDefaultFaxRelayMaxRate=acChDefaultFaxRelayMaxRate, voiceSettings=voiceSettings, notifications=notifications, tDMBusNetRefSpeed=tDMBusNetRefSpeed, packetsToDSPCnt=packetsToDSPCnt, acChDefaultInputGain=acChDefaultInputGain, megacoCallAgentId=megacoCallAgentId, acBoardEthernetLinkAlarm=acBoardEthernetLinkAlarm, acDS3LOSAlarm=acDS3LOSAlarm, dchConfig=dchConfig, acIsdnIncomingCallsBehavior=acIsdnIncomingCallsBehavior, acChDefaultVoiceVolume=acChDefaultVoiceVolume, acWEBAccessAction=acWEBAccessAction, acAnalogPortSPIOutOfService=acAnalogPortSPIOutOfService, acBoardTrapGlobalsUniqID=acBoardTrapGlobalsUniqID, tDMBusOutputDisable=tDMBusOutputDisable, modemRelayMaxRate=modemRelayMaxRate, acDefaultChannelSettings=acDefaultChannelSettings, vccProfile=vccProfile, amsNumOfTestTrunkPorts=amsNumOfTestTrunkPorts, acVpFile=acVpFile, reset=reset, jitterBufUnderRunCnt=jitterBufUnderRunCnt, tDMBusSpeed=tDMBusSpeed, lineCode=lineCode, acBoardConfigurationError=acBoardConfigurationError, acPSTNIuaInterfaceId=acPSTNIuaInterfaceId, faxRelayRedundancyDepth=faxRelayRedundancyDepth, acCptFile=acCptFile, acChDefaultEchoCancler=acChDefaultEchoCancler, jitterBufForcedPacketAddition=jitterBufForcedPacketAddition, eCLength=eCLength, acPolarityReversalType=acPolarityReversalType, faxRelayECMEnable=faxRelayECMEnable, disableSoftIPLoopback=disableSoftIPLoopback, PYSNMP_MODULE_ID=acBoard, acBoardControllerFailureAlarm=acBoardControllerFailureAlarm, lineBuildOutXPM0=lineBuildOutXPM0, acTMInconsistentRemoteAndLocalPLLStatus=acTMInconsistentRemoteAndLocalPLLStatus, uniDirectionalRTP=uniDirectionalRTP, channelStatusEntry=channelStatusEntry, tPNCPVPI=tPNCPVPI, boardType=boardType, acChDefaultPacketizationPeriod=acChDefaultPacketizationPeriod, tDMBusLocalReference=tDMBusLocalReference, coder=coder, boardConfiguration=boardConfiguration, acDspVersionTemplate=acDspVersionTemplate, acgwAdminState=acgwAdminState, acChDefaultFlashHookPeriod=acChDefaultFlashHookPeriod, trunkSettingsEntry=trunkSettingsEntry, megacoCheckLegalityOfMGC=megacoCheckLegalityOfMGC, acChDefaultV21ModemTransportType=acChDefaultV21ModemTransportType, acgwAdminStateChange=acgwAdminStateChange, acDspType=acDspType, sAALLink1VPI=sAALLink1VPI, faxRelayMaxRate=faxRelayMaxRate, idlePCMPattern=idlePCMPattern, audioCodes=audioCodes, acHitlessUpdateStatus=acHitlessUpdateStatus, useNIorPCI=useNIorPCI, acBoardTrapGlobalsProbableCause=acBoardTrapGlobalsProbableCause, acBoardEvBoardStarted=acBoardEvBoardStarted, boardName=boardName, acChDefaultSilenceSuppression=acChDefaultSilenceSuppression, acChDefaultFaxModemRelayVolume=acChDefaultFaxModemRelayVolume, acGeneric=acGeneric, sAALLink0VCI=sAALLink0VCI, acFirstPortSpeed=acFirstPortSpeed, transportSettings=transportSettings, lineBuildOutOverwrite=lineBuildOutOverwrite, remoteT38Addr=remoteT38Addr, trunkId=trunkId, rTCPMeanTxInterval=rTCPMeanTxInterval, acChDefaultRtpIpPrecedence=acChDefaultRtpIpPrecedence, channelTDMBusSettingsEntry=channelTDMBusSettingsEntry, pHYClkSource=pHYClkSource, acIsdnNfasInterfaceId=acIsdnNfasInterfaceId, jitterBufErrorCnt=jitterBufErrorCnt, channelStatusTable=channelStatusTable, multyPhy=multyPhy, acBoardTrapGlobalsDateAndTime=acBoardTrapGlobalsDateAndTime, acH248LostConnectionWithCA=acH248LostConnectionWithCA, megacoCallAgentsEntry=megacoCallAgentsEntry, m=m, acIsdnGeneralCCBehavior=acIsdnGeneralCCBehavior, acProducts=acProducts, acChDefaultV32ModemTransportType=acChDefaultV32ModemTransportType, supplementaryField=supplementaryField, serialNum=serialNum, channelTDMBusSettings=channelTDMBusSettings, acDChannelStatus=acDChannelStatus, acSS7Settings=acSS7Settings, lineBuildOutXPM1=lineBuildOutXPM1, clockMaster=clockMaster, acSS7RedundancyAlarm=acSS7RedundancyAlarm, acSonetPathSignalLabelMismatchAlarm=acSonetPathSignalLabelMismatchAlarm, amsAASPackagesProfile=amsAASPackagesProfile, acBoardTrapGlobalsType=acBoardTrapGlobalsType, acChDefaultV22ModemTransportType=acChDefaultV22ModemTransportType, tDMBusOutputStartingChannel=tDMBusOutputStartingChannel, callAgentDomainName=callAgentDomainName, acDS3LOFAlarm=acDS3LOFAlarm, acBoardTrapGlobalsTextualDescription=acBoardTrapGlobalsTextualDescription, megacoActiveCallAgentIp=megacoActiveCallAgentIp, aTMPHYType=aTMPHYType, iPPrecedence=iPPrecedence, rTPActive=rTPActive, acChDefaultUseT38orFRF11=acChDefaultUseT38orFRF11, acFxsCoefficients=acFxsCoefficients, megacoGatewayName=megacoGatewayName, acFeatureKeyString=acFeatureKeyString, acChDefaultModemRelayRedundancyDepth=acChDefaultModemRelayRedundancyDepth, v23ModemTransportType=v23ModemTransportType, acWEBAccessUserCode=acWEBAccessUserCode, acSSHConnectionStatus=acSSHConnectionStatus, acContrlProtocolTransportType=acContrlProtocolTransportType, acBoardTrapGlobalsAdditionalInfo1=acBoardTrapGlobalsAdditionalInfo1, acEnableSyslog=acEnableSyslog, enableDiagnostics=enableDiagnostics, amsSecondaryLanguage=amsSecondaryLanguage, acChDefaultM=acChDefaultM, useT38orFRF11=useT38orFRF11, vPMask=vPMask, acTMReferenceStatus=acTMReferenceStatus, acChDefaultT38ProtectionMode=acChDefaultT38ProtectionMode, acPerformanceMonitoringThresholdCrossing=acPerformanceMonitoringThresholdCrossing, acFxoCoefficients=acFxoCoefficients, acIsdnDuplicateQ931BuffMode=acIsdnDuplicateQ931BuffMode, defaultGatewayAddr=defaultGatewayAddr, redundantAgentIP=redundantAgentIP, traceLevel=traceLevel, v22ModemTransportType=v22ModemTransportType, acGWSASEmergencyModeAlarm=acGWSASEmergencyModeAlarm, acBoardCallResourcesAlarm=acBoardCallResourcesAlarm, acgwAdminStateLockControl=acgwAdminStateLockControl, lineBuildOutLoss=lineBuildOutLoss, acPhysicalModCount=acPhysicalModCount, boardSubNetAddr=boardSubNetAddr, trunkSettings=trunkSettings, acPSTNParameters=acPSTNParameters)
