#
# PySNMP MIB module HUAWEI-ETHOAM-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/HUAWEI-ETHOAM-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:32:44 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ConstraintsUnion, ValueSizeConstraint, SingleValueConstraint, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ConstraintsUnion", "ValueSizeConstraint", "SingleValueConstraint", "ValueRangeConstraint")
CounterBasedGauge64, = mibBuilder.importSymbols("HCNUM-TC", "CounterBasedGauge64")
hwDatacomm, = mibBuilder.importSymbols("HUAWEI-MIB", "hwDatacomm")
InterfaceIndexOrZero, ifDescr, InterfaceIndex, ifIndex = mibBuilder.importSymbols("IF-MIB", "InterfaceIndexOrZero", "ifDescr", "InterfaceIndex", "ifIndex")
EnabledStatus, = mibBuilder.importSymbols("P-BRIDGE-MIB", "EnabledStatus")
VlanIdOrNone, = mibBuilder.importSymbols("Q-BRIDGE-MIB", "VlanIdOrNone")
ModuleCompliance, NotificationGroup, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup", "ObjectGroup")
MibScalar, MibTable, MibTableRow, MibTableColumn, Counter64, ObjectIdentity, TimeTicks, Integer32, IpAddress, Unsigned32, Counter32, ModuleIdentity, Bits, iso, Gauge32, Bits, NotificationType, MibIdentifier = mibBuilder.importSymbols("SNMPv2-SMI", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter64", "ObjectIdentity", "TimeTicks", "Integer32", "IpAddress", "Unsigned32", "Counter32", "ModuleIdentity", "Bits", "iso", "Gauge32", "Bits", "NotificationType", "MibIdentifier")
DisplayString, TimeInterval, TruthValue, MacAddress, DateAndTime, TimeStamp, RowStatus, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TimeInterval", "TruthValue", "MacAddress", "DateAndTime", "TimeStamp", "RowStatus", "TextualConvention")
hwEthOamMib = ModuleIdentity((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1))
hwEthOamMib.setRevisions(('2015-04-24 00:00', '2015-03-03 00:00', '2015-01-15 00:00', '2015-01-06 00:00', '2014-12-26 00:00', '2014-12-10 00:00', '2014-10-08 00:00', '2014-09-15 00:00', '2014-08-12 00:00', '2014-06-26 00:00', '2014-06-03 00:00', '2014-05-06 00:00', '2014-04-26 00:00', '2014-04-09 00:00', '2013-12-04 00:00', '2013-10-07 00:00', '2013-04-01 10:45', '2013-02-06 11:02',))
if mibBuilder.loadTexts: hwEthOamMib.setLastUpdated('201504240000Z')
if mibBuilder.loadTexts: hwEthOamMib.setOrganization('Huawei Technologies Co.,Ltd.')
class HWDetectType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("normalDetect", 1), ("fastDetect", 2))

class HWDot3Oui(TextualConvention, OctetString):
    status = 'current'
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(3, 3)
    fixedLength = 3

class HWTestMessageSendSpeed(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("oneMbps", 1), ("fiveMbps", 2))

class HWTestMessageFinishedValue(TextualConvention, Integer32):
    reference = ' '
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))
    namedValues = NamedValues(("ready", 1), ("testing", 2), ("finished", 3), ("failed", 4), ("stop", 5))

class HWDot1agCfmRelayActionFieldValue(TextualConvention, Integer32):
    reference = '802.1ag clauses 12.14.7.5.3 g), 20.32.2.5, and Table 21-24'
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 255))
    namedValues = NamedValues(("rlyHit", 1), ("rlyFdb", 2), ("rlyMpdb", 3), ("rlyInvalid", 255))

class HWDot1agCfmIngressActionFieldValue(TextualConvention, Integer32):
    reference = '802.1ag clauses 12.14.7.5.3 k), 21.9.9.1, 20.35.2.6 and Table 21-26. '
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 255))
    namedValues = NamedValues(("ingOk", 1), ("ingDown", 2), ("ingBlocked", 3), ("ingVid", 4), ("ingInvalid", 255))

class HWDot1agCfmEgressActionFieldValue(TextualConvention, Integer32):
    reference = '802.1ag clauses 12.14.7.5.3 o), 21.9.10.1 and Table 21-28'
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 255))
    namedValues = NamedValues(("egrOK", 1), ("egrDown", 2), ("egrBlocked", 3), ("egrVid", 4), ("egrInvalid", 255))

class HWDot1agCfmHighestDefectPri(TextualConvention, Integer32):
    reference = '20.1.2, 12.14.7.7.2:c and 20.33.9'
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5))
    namedValues = NamedValues(("none", 0), ("defRDICCM", 1), ("defMACstatus", 2), ("defRemoteCCM", 3), ("defErrorCCM", 4), ("defXconCCM", 5))

class HWDot1agCfmMDLevel(TextualConvention, Integer32):
    reference = '802.1ag clauses 18.3, 21.4.1'
    status = 'current'
    displayHint = 'd'
    subtypeSpec = Integer32.subtypeSpec + ValueRangeConstraint(0, 7)

hwEthOam = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136))
hwEthOam1ag = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 1))
hwDot1agCfmEnabled = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 1, 1), EnabledStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwDot1agCfmEnabled.setStatus('current')
hwDot1agCfmVersion = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("draft7", 1), ("standard", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwDot1agCfmVersion.setStatus('current')
hwDot1agCfmMdObject = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 1, 3))
hwDot1agCfmMdTableNextIndex = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 1, 3, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwDot1agCfmMdTableNextIndex.setStatus('current')
hwDot1agCfmMdTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 1, 3, 2), )
if mibBuilder.loadTexts: hwDot1agCfmMdTable.setStatus('current')
hwDot1agCfmMdEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 1, 3, 2, 1), ).setIndexNames((0, "HUAWEI-ETHOAM-MIB", "hwDot1agCfmMdIndex"))
if mibBuilder.loadTexts: hwDot1agCfmMdEntry.setStatus('current')
hwDot1agCfmMdIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 1, 3, 2, 1, 1), Unsigned32())
if mibBuilder.loadTexts: hwDot1agCfmMdIndex.setStatus('current')
hwDot1agCfmMdFormat = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 1, 3, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("noMdName", 1), ("dns", 2), ("macAddress", 3), ("string", 4))).clone('string')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwDot1agCfmMdFormat.setStatus('current')
hwDot1agCfmMdName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 1, 3, 2, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 43))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwDot1agCfmMdName.setStatus('current')
hwDot1agCfmMdMdLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 1, 3, 2, 1, 4), HWDot1agCfmMDLevel()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwDot1agCfmMdMdLevel.setStatus('current')
hwDot1agCfmMdMhfCreation = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 1, 3, 2, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("defMHFnone", 1), ("defMHFdefault", 2), ("defMHFexplicit", 3))).clone('defMHFnone')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwDot1agCfmMdMhfCreation.setStatus('current')
hwDot1agCfmMdMhfIdPermission = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 1, 3, 2, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("sendIdNone", 1), ("sendIdChassis", 2), ("sendIdManage", 3), ("sendIdChassisManage", 4), ("sendIdDefer", 5))).clone('sendIdDefer')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwDot1agCfmMdMhfIdPermission.setStatus('current')
hwDot1agCfmMdFormatName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 1, 3, 2, 1, 7), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 43))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwDot1agCfmMdFormatName.setStatus('current')
hwDot1agCfmMdRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 1, 3, 2, 1, 99), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwDot1agCfmMdRowStatus.setStatus('current')
hwDot1agCfmMaObject = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 1, 4))
hwDot1agCfmMaNextIndex = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 1, 4, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwDot1agCfmMaNextIndex.setStatus('current')
hwDot1agCfmMaTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 1, 4, 2), )
if mibBuilder.loadTexts: hwDot1agCfmMaTable.setStatus('current')
hwDot1agCfmMaEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 1, 4, 2, 1), ).setIndexNames((0, "HUAWEI-ETHOAM-MIB", "hwDot1agCfmMdIndex"), (0, "HUAWEI-ETHOAM-MIB", "hwDot1agCfmMaIndex"))
if mibBuilder.loadTexts: hwDot1agCfmMaEntry.setStatus('current')
hwDot1agCfmMaIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 1, 4, 2, 1, 1), Unsigned32())
if mibBuilder.loadTexts: hwDot1agCfmMaIndex.setStatus('current')
hwDot1agCfmMaName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 1, 4, 2, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 43))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwDot1agCfmMaName.setStatus('current')
hwDot1agCfmMaMapType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 1, 4, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("mapVlan", 1), ("mapVsi", 2), ("mapL2vc", 3), ("unbind", 4), ("mapCcc", 5))).clone('unbind')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwDot1agCfmMaMapType.setStatus('current')
hwDot1agCfmMaMapVlanValue = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 1, 4, 2, 1, 4), VlanIdOrNone()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwDot1agCfmMaMapVlanValue.setStatus('current')
hwDot1agCfmMaMapVsiName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 1, 4, 2, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 31))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwDot1agCfmMaMapVsiName.setStatus('current')
hwDot1agCfmMaMapL2vcValue = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 1, 4, 2, 1, 6), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwDot1agCfmMaMapL2vcValue.setStatus('current')
hwDot1agCfmMaMapL2vcType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 1, 4, 2, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("invalid", 1), ("l2vcRaw", 2), ("l2vcTagged", 3))).clone('invalid')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwDot1agCfmMaMapL2vcType.setStatus('current')
hwDot1agCfmMaPktPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 1, 4, 2, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7)).clone(7)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwDot1agCfmMaPktPriority.setStatus('current')
hwDot1agCfmMaCcmInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 1, 4, 2, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10))).clone(namedValues=NamedValues(("interval10ms", 1), ("interval20ms", 2), ("interval30ms", 3), ("interval50ms", 4), ("interval100ms", 5), ("interval1s", 6), ("interval10s", 7), ("interval3Dot3ms", 8), ("interval1min", 9), ("interval10min", 10))).clone('interval1s')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwDot1agCfmMaCcmInterval.setStatus('current')
hwDot1agCfmMaRmepActiveTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 1, 4, 2, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 600))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwDot1agCfmMaRmepActiveTime.setStatus('current')
hwDot1agCfmMaMepFngAlarmTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 1, 4, 2, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 30000)).clone(2500)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwDot1agCfmMaMepFngAlarmTime.setStatus('current')
hwDot1agCfmMaMepFngResetTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 1, 4, 2, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 30000)).clone(10000)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwDot1agCfmMaMepFngResetTime.setStatus('current')
hwDot1agCfmMaFormat = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 1, 4, 2, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(2, 32))).clone(namedValues=NamedValues(("string", 2), ("iccBased", 32))).clone('string')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwDot1agCfmMaFormat.setStatus('current')
hwDot1agCfmMaFormatName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 1, 4, 2, 1, 14), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 43))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwDot1agCfmMaFormatName.setStatus('current')
hwDot1agCfmMaMapCccName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 1, 4, 2, 1, 15), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 20))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwDot1agCfmMaMapCccName.setStatus('current')
hwDot1agCfmMaRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 1, 4, 2, 1, 99), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwDot1agCfmMaRowStatus.setStatus('current')
hwDot1agCfmMepObject = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 1, 5))
hwDot1agCfmMepTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 1, 5, 1), )
if mibBuilder.loadTexts: hwDot1agCfmMepTable.setStatus('current')
hwDot1agCfmMepEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 1, 5, 1, 1), ).setIndexNames((0, "HUAWEI-ETHOAM-MIB", "hwDot1agCfmMdIndex"), (0, "HUAWEI-ETHOAM-MIB", "hwDot1agCfmMaIndex"), (0, "HUAWEI-ETHOAM-MIB", "hwDot1agCfmMepIdentifier"))
if mibBuilder.loadTexts: hwDot1agCfmMepEntry.setStatus('current')
hwDot1agCfmMepIdentifier = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 1, 5, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 8191))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hwDot1agCfmMepIdentifier.setStatus('current')
hwDot1agCfmMepIsVlanType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 1, 5, 1, 1, 2), TruthValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwDot1agCfmMepIsVlanType.setStatus('current')
hwDot1agCfmMepIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 1, 5, 1, 1, 3), InterfaceIndexOrZero()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwDot1agCfmMepIfIndex.setStatus('current')
hwDot1agCfmMepDot1qVlan = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 1, 5, 1, 1, 4), VlanIdOrNone()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwDot1agCfmMepDot1qVlan.setStatus('current')
hwDot1agCfmMepPeVlan = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 1, 5, 1, 1, 5), VlanIdOrNone()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwDot1agCfmMepPeVlan.setStatus('current')
hwDot1agCfmMepCeVlan = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 1, 5, 1, 1, 6), VlanIdOrNone()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwDot1agCfmMepCeVlan.setStatus('current')
hwDot1agCfmMepDirection = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 1, 5, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("invalid", 1), ("dirInward", 2), ("dirOutward", 3))).clone('invalid')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwDot1agCfmMepDirection.setStatus('current')
hwDot1agCfmMepCcmSendEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 1, 5, 1, 1, 8), EnabledStatus().clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwDot1agCfmMepCcmSendEnabled.setStatus('current')
hwDot1agCfmMepMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 1, 5, 1, 1, 9), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwDot1agCfmMepMacAddress.setStatus('current')
hwDot1agCfmMepRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 1, 5, 1, 1, 99), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwDot1agCfmMepRowStatus.setStatus('current')
hwDot1agCfmRMepObject = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 1, 6))
hwDot1agCfmRMepTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 1, 6, 1), )
if mibBuilder.loadTexts: hwDot1agCfmRMepTable.setStatus('current')
hwDot1agCfmRMepEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 1, 6, 1, 1), ).setIndexNames((0, "HUAWEI-ETHOAM-MIB", "hwDot1agCfmMdIndex"), (0, "HUAWEI-ETHOAM-MIB", "hwDot1agCfmMaIndex"), (0, "HUAWEI-ETHOAM-MIB", "hwDot1agCfmRMepIdentifier"))
if mibBuilder.loadTexts: hwDot1agCfmRMepEntry.setStatus('current')
hwDot1agCfmRMepIdentifier = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 1, 6, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 8191))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hwDot1agCfmRMepIdentifier.setStatus('current')
hwDot1agCfmRMepMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 1, 6, 1, 1, 2), MacAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwDot1agCfmRMepMacAddress.setStatus('current')
hwDot1agCfmRMepCcmRecvEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 1, 6, 1, 1, 3), EnabledStatus().clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwDot1agCfmRMepCcmRecvEnabled.setStatus('current')
hwDot1agCfmRMepStateIsUp = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 1, 6, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("invalid", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwDot1agCfmRMepStateIsUp.setStatus('current')
hwDot1agCfmRMepHighestPrDefect = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 1, 6, 1, 1, 5), HWDot1agCfmHighestDefectPri()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwDot1agCfmRMepHighestPrDefect.setStatus('current')
hwDot1agCfmRMepRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 1, 6, 1, 1, 99), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwDot1agCfmRMepRowStatus.setStatus('current')
hwDot1agCfmMipObject = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 1, 7))
hwDot1agCfmMipTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 1, 7, 1), )
if mibBuilder.loadTexts: hwDot1agCfmMipTable.setStatus('current')
hwDot1agCfmMipEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 1, 7, 1, 1), ).setIndexNames((0, "HUAWEI-ETHOAM-MIB", "hwDot1agCfmMipIfIndex"))
if mibBuilder.loadTexts: hwDot1agCfmMipEntry.setStatus('current')
hwDot1agCfmMipIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 1, 7, 1, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: hwDot1agCfmMipIfIndex.setStatus('current')
hwDot1agCfmMipLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 1, 7, 1, 1, 2), HWDot1agCfmMDLevel()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwDot1agCfmMipLevel.setStatus('current')
hwDot1agCfmMipIfMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 1, 7, 1, 1, 3), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwDot1agCfmMipIfMacAddress.setStatus('current')
hwDot1agCfmMacPingObject = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 1, 8))
hwDot1agCfmMacPingTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 1, 8, 1), )
if mibBuilder.loadTexts: hwDot1agCfmMacPingTable.setStatus('current')
hwDot1agCfmMacPingEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 1, 8, 1, 1), ).setIndexNames((0, "HUAWEI-ETHOAM-MIB", "hwDot1agCfmMacPingIndex"))
if mibBuilder.loadTexts: hwDot1agCfmMacPingEntry.setStatus('current')
hwDot1agCfmMacPingIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 1, 8, 1, 1, 1), Unsigned32())
if mibBuilder.loadTexts: hwDot1agCfmMacPingIndex.setStatus('current')
hwDot1agCfmMacPingState = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 1, 8, 1, 1, 2), EnabledStatus().clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwDot1agCfmMacPingState.setStatus('current')
hwDot1agCfmMacPingMdName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 1, 8, 1, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 43))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwDot1agCfmMacPingMdName.setStatus('current')
hwDot1agCfmMacPingMaName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 1, 8, 1, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 43))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwDot1agCfmMacPingMaName.setStatus('current')
hwDot1agCfmMacPingMepId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 1, 8, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 8191), ))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwDot1agCfmMacPingMepId.setStatus('current')
hwDot1agCfmMacPingDestIsMepId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 1, 8, 1, 1, 6), TruthValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwDot1agCfmMacPingDestIsMepId.setStatus('current')
hwDot1agCfmMacPingDestMepId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 1, 8, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 8191), ))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwDot1agCfmMacPingDestMepId.setStatus('current')
hwDot1agCfmMacPingMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 1, 8, 1, 1, 8), MacAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwDot1agCfmMacPingMacAddress.setStatus('current')
hwDot1agCfmMacPingOutIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 1, 8, 1, 1, 9), InterfaceIndexOrZero()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwDot1agCfmMacPingOutIfIndex.setStatus('current')
hwDot1agCfmMacPingTimeOut = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 1, 8, 1, 1, 10), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)).clone(2000)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwDot1agCfmMacPingTimeOut.setStatus('current')
hwDot1agCfmMacPingCount = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 1, 8, 1, 1, 11), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295)).clone(5)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwDot1agCfmMacPingCount.setStatus('current')
hwDot1agCfmMacPingPacketSize = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 1, 8, 1, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(64, 9500)).clone(95)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwDot1agCfmMacPingPacketSize.setStatus('current')
hwDot1agCfmMacPingPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 1, 8, 1, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 7), ValueRangeConstraint(255, 255), )).clone(255)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwDot1agCfmMacPingPriority.setStatus('current')
hwDot1agCfmMacPingSendPacketNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 1, 8, 1, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwDot1agCfmMacPingSendPacketNum.setStatus('current')
hwDot1agCfmMacPingRecvPacketNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 1, 8, 1, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwDot1agCfmMacPingRecvPacketNum.setStatus('current')
hwDot1agCfmMacPingPacketLossRatio = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 1, 8, 1, 1, 16), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwDot1agCfmMacPingPacketLossRatio.setStatus('current')
hwDot1agCfmMacPingRecvTimeDelayMin = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 1, 8, 1, 1, 17), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwDot1agCfmMacPingRecvTimeDelayMin.setStatus('current')
hwDot1agCfmMacPingRecvTimeDelayMax = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 1, 8, 1, 1, 18), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwDot1agCfmMacPingRecvTimeDelayMax.setStatus('current')
hwDot1agCfmMacPingRecvTimeDelayAvg = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 1, 8, 1, 1, 19), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwDot1agCfmMacPingRecvTimeDelayAvg.setStatus('current')
hwDot1agCfmMacPingRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 1, 8, 1, 1, 99), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwDot1agCfmMacPingRowStatus.setStatus('current')
hwDot1agCfmMacTraceObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 1, 9))
hwDot1agCfmMacTraceTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 1, 9, 1), )
if mibBuilder.loadTexts: hwDot1agCfmMacTraceTable.setStatus('current')
hwDot1agCfmMacTraceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 1, 9, 1, 1), ).setIndexNames((0, "HUAWEI-ETHOAM-MIB", "hwDot1agCfmMacTraceIndex"))
if mibBuilder.loadTexts: hwDot1agCfmMacTraceEntry.setStatus('current')
hwDot1agCfmMacTraceIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 1, 9, 1, 1, 1), Unsigned32())
if mibBuilder.loadTexts: hwDot1agCfmMacTraceIndex.setStatus('current')
hwDot1agCfmMacTraceState = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 1, 9, 1, 1, 2), EnabledStatus().clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwDot1agCfmMacTraceState.setStatus('current')
hwDot1agCfmMacTraceMdName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 1, 9, 1, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 43))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwDot1agCfmMacTraceMdName.setStatus('current')
hwDot1agCfmMacTraceMaName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 1, 9, 1, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 43))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwDot1agCfmMacTraceMaName.setStatus('current')
hwDot1agCfmMacTraceMepId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 1, 9, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 8191), ))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwDot1agCfmMacTraceMepId.setStatus('current')
hwDot1agCfmMacTraceDestIsMepId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 1, 9, 1, 1, 6), TruthValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwDot1agCfmMacTraceDestIsMepId.setStatus('current')
hwDot1agCfmMacTraceDestMepId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 1, 9, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 8191), ))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwDot1agCfmMacTraceDestMepId.setStatus('current')
hwDot1agCfmMacTraceMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 1, 9, 1, 1, 8), MacAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwDot1agCfmMacTraceMacAddress.setStatus('current')
hwDot1agCfmMacTraceOutIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 1, 9, 1, 1, 9), InterfaceIndexOrZero()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwDot1agCfmMacTraceOutIfIndex.setStatus('current')
hwDot1agCfmMacTraceTimeOut = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 1, 9, 1, 1, 10), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)).clone(2000)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwDot1agCfmMacTraceTimeOut.setStatus('current')
hwDot1agCfmMacTraceTTL = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 1, 9, 1, 1, 11), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 255)).clone(64)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwDot1agCfmMacTraceTTL.setStatus('current')
hwDot1agCfmMacTraceSendSeqNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 1, 9, 1, 1, 12), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwDot1agCfmMacTraceSendSeqNumber.setStatus('current')
hwDot1agCfmMacTraceResult = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 1, 9, 1, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("invalid", 1), ("successful", 2), ("failed", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwDot1agCfmMacTraceResult.setStatus('current')
hwDot1agCfmMacTraceRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 1, 9, 1, 1, 99), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwDot1agCfmMacTraceRowStatus.setStatus('current')
hwDot1agCfmMacTraceReplyTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 1, 9, 2), )
if mibBuilder.loadTexts: hwDot1agCfmMacTraceReplyTable.setStatus('current')
hwDot1agCfmMacTraceReplyEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 1, 9, 2, 1), ).setIndexNames((0, "HUAWEI-ETHOAM-MIB", "hwDot1agCfmMacTraceReplySeqNumber"), (0, "HUAWEI-ETHOAM-MIB", "hwDot1agCfmMacTraceReplyRecvOrder"))
if mibBuilder.loadTexts: hwDot1agCfmMacTraceReplyEntry.setStatus('current')
hwDot1agCfmMacTraceReplySeqNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 1, 9, 2, 1, 1), Unsigned32())
if mibBuilder.loadTexts: hwDot1agCfmMacTraceReplySeqNumber.setStatus('current')
hwDot1agCfmMacTraceReplyRecvOrder = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 1, 9, 2, 1, 2), Unsigned32())
if mibBuilder.loadTexts: hwDot1agCfmMacTraceReplyRecvOrder.setStatus('current')
hwDot1agCfmMacTraceReplyTTL = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 1, 9, 2, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwDot1agCfmMacTraceReplyTTL.setStatus('current')
hwDot1agCfmMacTraceReplyForwarded = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 1, 9, 2, 1, 4), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwDot1agCfmMacTraceReplyForwarded.setStatus('current')
hwDot1agCfmMacTraceReplyTerminalMep = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 1, 9, 2, 1, 5), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwDot1agCfmMacTraceReplyTerminalMep.setStatus('current')
hwDot1agCfmMacTraceReplyRelayAction = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 1, 9, 2, 1, 6), HWDot1agCfmRelayActionFieldValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwDot1agCfmMacTraceReplyRelayAction.setStatus('current')
hwDot1agCfmMacTraceReplyIngressAction = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 1, 9, 2, 1, 7), HWDot1agCfmIngressActionFieldValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwDot1agCfmMacTraceReplyIngressAction.setStatus('current')
hwDot1agCfmMacTraceReplyIngressMac = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 1, 9, 2, 1, 8), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwDot1agCfmMacTraceReplyIngressMac.setStatus('current')
hwDot1agCfmMacTraceReplyIngressIfName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 1, 9, 2, 1, 9), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwDot1agCfmMacTraceReplyIngressIfName.setStatus('current')
hwDot1agCfmMacTraceReplyEgressAction = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 1, 9, 2, 1, 10), HWDot1agCfmEgressActionFieldValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwDot1agCfmMacTraceReplyEgressAction.setStatus('current')
hwDot1agCfmMacTraceReplyEgressMac = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 1, 9, 2, 1, 11), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwDot1agCfmMacTraceReplyEgressMac.setStatus('current')
hwDot1agCfmMacTraceReplyEgressIfName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 1, 9, 2, 1, 12), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwDot1agCfmMacTraceReplyEgressIfName.setStatus('current')
hwDot1agCfmQueryObject = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 1, 10))
hwDot1agCfmQueryMdIndexTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 1, 10, 1), )
if mibBuilder.loadTexts: hwDot1agCfmQueryMdIndexTable.setStatus('current')
hwDot1agCfmQueryMdIndexEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 1, 10, 1, 1), ).setIndexNames((0, "HUAWEI-ETHOAM-MIB", "hwDot1agCfmQueryMdName"))
if mibBuilder.loadTexts: hwDot1agCfmQueryMdIndexEntry.setStatus('current')
hwDot1agCfmQueryMdName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 1, 10, 1, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 43)))
if mibBuilder.loadTexts: hwDot1agCfmQueryMdName.setStatus('current')
hwDot1agCfmQueryMdIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 1, 10, 1, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwDot1agCfmQueryMdIndex.setStatus('current')
hwDot1agCfmQueryMaIndexTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 1, 10, 2), )
if mibBuilder.loadTexts: hwDot1agCfmQueryMaIndexTable.setStatus('current')
hwDot1agCfmQueryMaIndexEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 1, 10, 2, 1), ).setIndexNames((0, "HUAWEI-ETHOAM-MIB", "hwDot1agCfmQueryMdName"), (0, "HUAWEI-ETHOAM-MIB", "hwDot1agCfmQueryMaName"))
if mibBuilder.loadTexts: hwDot1agCfmQueryMaIndexEntry.setStatus('current')
hwDot1agCfmQueryMaName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 1, 10, 2, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 43)))
if mibBuilder.loadTexts: hwDot1agCfmQueryMaName.setStatus('current')
hwDot1agCfmQueryMaIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 1, 10, 2, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwDot1agCfmQueryMaIndex.setStatus('current')
hwDot1agCfmGmacTraceObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 1, 11))
hwDot1agCfmGmacTraceEnabled = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 1, 11, 1), EnabledStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwDot1agCfmGmacTraceEnabled.setStatus('current')
hwDot1agCfmGmacTraceTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 1, 11, 2), )
if mibBuilder.loadTexts: hwDot1agCfmGmacTraceTable.setStatus('current')
hwDot1agCfmGmacTraceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 1, 11, 2, 1), ).setIndexNames((0, "HUAWEI-ETHOAM-MIB", "hwDot1agCfmGmacTraceIndex"))
if mibBuilder.loadTexts: hwDot1agCfmGmacTraceEntry.setStatus('current')
hwDot1agCfmGmacTraceIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 1, 11, 2, 1, 1), Unsigned32())
if mibBuilder.loadTexts: hwDot1agCfmGmacTraceIndex.setStatus('current')
hwDot1agCfmGmacTraceState = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 1, 11, 2, 1, 2), EnabledStatus().clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwDot1agCfmGmacTraceState.setStatus('current')
hwDot1agCfmGmacTraceMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 1, 11, 2, 1, 3), MacAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwDot1agCfmGmacTraceMacAddress.setStatus('current')
hwDot1agCfmGmacTraceServiceType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 1, 11, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 255))).clone(namedValues=NamedValues(("vlan", 1), ("invalid", 255)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwDot1agCfmGmacTraceServiceType.setStatus('current')
hwDot1agCfmGmacTraceVlanValue = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 1, 11, 2, 1, 5), VlanIdOrNone()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwDot1agCfmGmacTraceVlanValue.setStatus('current')
hwDot1agCfmGmacTraceVsiName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 1, 11, 2, 1, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 31))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwDot1agCfmGmacTraceVsiName.setStatus('current')
hwDot1agCfmGmacTraceL2vcValue = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 1, 11, 2, 1, 7), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwDot1agCfmGmacTraceL2vcValue.setStatus('current')
hwDot1agCfmGmacTraceL2vcType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 1, 11, 2, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("invalid", 1), ("l2vcRaw", 2), ("l2vcTagged", 3))).clone('invalid')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwDot1agCfmGmacTraceL2vcType.setStatus('current')
hwDot1agCfmGmacTraceDot1qVlan = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 1, 11, 2, 1, 9), VlanIdOrNone()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwDot1agCfmGmacTraceDot1qVlan.setStatus('current')
hwDot1agCfmGmacTracePeVlan = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 1, 11, 2, 1, 10), VlanIdOrNone()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwDot1agCfmGmacTracePeVlan.setStatus('current')
hwDot1agCfmGmacTraceCeVlan = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 1, 11, 2, 1, 11), VlanIdOrNone()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwDot1agCfmGmacTraceCeVlan.setStatus('current')
hwDot1agCfmGmacTraceOutIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 1, 11, 2, 1, 12), InterfaceIndexOrZero()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwDot1agCfmGmacTraceOutIfIndex.setStatus('current')
hwDot1agCfmGmacTraceTimeOut = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 1, 11, 2, 1, 13), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)).clone(2000)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwDot1agCfmGmacTraceTimeOut.setStatus('current')
hwDot1agCfmGmacTraceDisplayHostInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 1, 11, 2, 1, 14), TruthValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwDot1agCfmGmacTraceDisplayHostInfo.setStatus('current')
hwDot1agCfmGmacTraceSendSeqNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 1, 11, 2, 1, 15), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwDot1agCfmGmacTraceSendSeqNumber.setStatus('current')
hwDot1agCfmGmacTraceResult = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 1, 11, 2, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("invalid", 1), ("successful", 2), ("failed", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwDot1agCfmGmacTraceResult.setStatus('current')
hwDot1agCfmGmacTraceRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 1, 11, 2, 1, 99), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwDot1agCfmGmacTraceRowStatus.setStatus('current')
hwDot1agCfmGmacTraceReplyTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 1, 11, 3), )
if mibBuilder.loadTexts: hwDot1agCfmGmacTraceReplyTable.setStatus('current')
hwDot1agCfmGmacTraceReplyEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 1, 11, 3, 1), ).setIndexNames((0, "HUAWEI-ETHOAM-MIB", "hwDot1agCfmGmacTraceReplySeqNumber"), (0, "HUAWEI-ETHOAM-MIB", "hwDot1agCfmGmacTraceReplyRecvOrder"))
if mibBuilder.loadTexts: hwDot1agCfmGmacTraceReplyEntry.setStatus('current')
hwDot1agCfmGmacTraceReplySeqNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 1, 11, 3, 1, 1), Unsigned32())
if mibBuilder.loadTexts: hwDot1agCfmGmacTraceReplySeqNumber.setStatus('current')
hwDot1agCfmGmacTraceReplyRecvOrder = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 1, 11, 3, 1, 2), Unsigned32())
if mibBuilder.loadTexts: hwDot1agCfmGmacTraceReplyRecvOrder.setStatus('current')
hwDot1agCfmGmacTraceReplyTTL = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 1, 11, 3, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwDot1agCfmGmacTraceReplyTTL.setStatus('current')
hwDot1agCfmGmacTraceReplyForwarded = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 1, 11, 3, 1, 4), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwDot1agCfmGmacTraceReplyForwarded.setStatus('current')
hwDot1agCfmGmacTraceReplyHostInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 1, 11, 3, 1, 5), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwDot1agCfmGmacTraceReplyHostInfo.setStatus('current')
hwDot1agCfmGmacTraceReplyRelayAction = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 1, 11, 3, 1, 6), HWDot1agCfmRelayActionFieldValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwDot1agCfmGmacTraceReplyRelayAction.setStatus('current')
hwDot1agCfmGmacTraceReplyIngressAction = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 1, 11, 3, 1, 7), HWDot1agCfmIngressActionFieldValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwDot1agCfmGmacTraceReplyIngressAction.setStatus('current')
hwDot1agCfmGmacTraceReplyIngressMac = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 1, 11, 3, 1, 8), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwDot1agCfmGmacTraceReplyIngressMac.setStatus('current')
hwDot1agCfmGmacTraceReplyIngressIfName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 1, 11, 3, 1, 9), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwDot1agCfmGmacTraceReplyIngressIfName.setStatus('current')
hwDot1agCfmGmacTraceReplyEgressAction = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 1, 11, 3, 1, 10), HWDot1agCfmEgressActionFieldValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwDot1agCfmGmacTraceReplyEgressAction.setStatus('current')
hwDot1agCfmGmacTraceReplyEgressMac = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 1, 11, 3, 1, 11), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwDot1agCfmGmacTraceReplyEgressMac.setStatus('current')
hwDot1agCfmGmacTraceReplyEgressIfName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 1, 11, 3, 1, 12), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwDot1agCfmGmacTraceReplyEgressIfName.setStatus('current')
hwDot1agCfmMPAddressModel = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 1, 101), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("bridge", 1), ("individual", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwDot1agCfmMPAddressModel.setStatus('current')
hwEthOam3ah = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 2))
hwDot3ahEfmEnabled = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 2, 1), EnabledStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwDot3ahEfmEnabled.setStatus('current')
hwDot3ahEfmObject = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 2, 2))
hwDot3ahEfmDetectModeTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 2, 2, 1), )
if mibBuilder.loadTexts: hwDot3ahEfmDetectModeTable.setStatus('current')
hwDot3ahEfmDetectMode = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 2, 2, 1, 1, 11), HWDetectType().clone('normalDetect')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwDot3ahEfmDetectMode.setStatus('current')
hwDot3ahEfmDetectInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 2, 2, 1, 1, 12), TimeInterval()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwDot3ahEfmDetectInterval.setStatus('current')
hwDot3ahEfmDetectMalfunction = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 2, 2, 1, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 768))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwDot3ahEfmDetectMalfunction.setStatus('current')
hwDot3ahEfmTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 2, 2, 2), )
if mibBuilder.loadTexts: hwDot3ahEfmTable.setStatus('current')
hwDot3ahEfmEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 2, 2, 2, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: hwDot3ahEfmEntry.setStatus('current')
hwDot3ahEfmDetectModeEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 2, 2, 1, 1), )
hwDot3ahEfmEntry.registerAugmentions(("HUAWEI-ETHOAM-MIB", "hwDot3ahEfmDetectModeEntry"))
hwDot3ahEfmDetectModeEntry.setIndexNames(*hwDot3ahEfmEntry.getIndexNames())
if mibBuilder.loadTexts: hwDot3ahEfmDetectModeEntry.setStatus('current')
hwDot3ahEfmAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 2, 2, 2, 1, 1), EnabledStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwDot3ahEfmAdminState.setStatus('current')
hwDot3ahEfmOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 2, 2, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10))).clone(namedValues=NamedValues(("disabled", 1), ("linkFault", 2), ("passiveWait", 3), ("activeSendLocal", 4), ("sendLocalAndRemote", 5), ("sendLocalAndRemoteOk", 6), ("oamPeeringLocallyRejected", 7), ("oamPeeringRemotelyRejected", 8), ("operational", 9), ("nonOperHalfDuplex", 10)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwDot3ahEfmOperStatus.setStatus('current')
hwDot3ahEfmMode = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 2, 2, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("active", 1), ("passive", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwDot3ahEfmMode.setStatus('current')
hwDot3ahEfmMaxOamPduSize = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 2, 2, 2, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(64, 1518))).setUnits('octets').setMaxAccess("readonly")
if mibBuilder.loadTexts: hwDot3ahEfmMaxOamPduSize.setStatus('current')
hwDot3ahEfmConfigRevision = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 2, 2, 2, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwDot3ahEfmConfigRevision.setStatus('current')
hwDot3ahEfmFunctionsSupported = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 2, 2, 2, 1, 6), Bits().clone(namedValues=NamedValues(("unidirectionalSupport", 0), ("loopbackSupport", 1), ("eventSupport", 2), ("variableSupport", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwDot3ahEfmFunctionsSupported.setStatus('current')
hwDot3ahEfmTimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 2, 2, 2, 1, 7), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(300, 30000))).setUnits('milliseconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwDot3ahEfmTimeout.setStatus('current')
hwDot3ahEfmInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 2, 2, 2, 1, 8), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(100, 1000))).setUnits('milliseconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwDot3ahEfmInterval.setStatus('current')
hwDot3ahEfmPeerTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 2, 2, 3), )
if mibBuilder.loadTexts: hwDot3ahEfmPeerTable.setStatus('current')
hwDot3ahEfmPeerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 2, 2, 3, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: hwDot3ahEfmPeerEntry.setStatus('current')
hwDot3ahEfmPeerMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 2, 2, 3, 1, 1), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwDot3ahEfmPeerMacAddress.setStatus('current')
hwDot3ahEfmPeerVendorOui = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 2, 2, 3, 1, 2), HWDot3Oui()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwDot3ahEfmPeerVendorOui.setStatus('current')
hwDot3ahEfmPeerVendorInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 2, 2, 3, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwDot3ahEfmPeerVendorInfo.setStatus('current')
hwDot3ahEfmPeerMode = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 2, 2, 3, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("active", 1), ("passive", 2), ("unknown", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwDot3ahEfmPeerMode.setStatus('current')
hwDot3ahEfmPeerMaxOamPduSize = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 2, 2, 3, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setUnits('octets').setMaxAccess("readonly")
if mibBuilder.loadTexts: hwDot3ahEfmPeerMaxOamPduSize.setStatus('current')
hwDot3ahEfmPeerConfigRevision = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 2, 2, 3, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwDot3ahEfmPeerConfigRevision.setStatus('current')
hwDot3ahEfmPeerFunctionsSupported = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 2, 2, 3, 1, 7), Bits().clone(namedValues=NamedValues(("unidirectionalSupport", 0), ("loopbackSupport", 1), ("eventSupport", 2), ("variableSupport", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwDot3ahEfmPeerFunctionsSupported.setStatus('current')
hwDot3ahEfmLoopbackTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 2, 2, 4), )
if mibBuilder.loadTexts: hwDot3ahEfmLoopbackTable.setStatus('current')
hwDot3ahEfmLoopbackEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 2, 2, 4, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: hwDot3ahEfmLoopbackEntry.setStatus('current')
hwDot3ahEfmLoopbackStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 2, 2, 4, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("noLoopback", 1), ("initiatingLoopback", 2), ("remoteLoopback", 3), ("terminatingLoopback", 4), ("localLoopback", 5), ("unknown", 6)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwDot3ahEfmLoopbackStatus.setStatus('current')
hwDot3ahEfmLoopbackIgnoreRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 2, 2, 4, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("ignore", 1), ("process", 2))).clone('process')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwDot3ahEfmLoopbackIgnoreRx.setStatus('current')
hwDot3ahEfmLoopbackTimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 2, 2, 4, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 1000)).clone(20)).setUnits('minutes').setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwDot3ahEfmLoopbackTimeout.setStatus('current')
hwDot3ahEfmStatsTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 2, 2, 5), )
if mibBuilder.loadTexts: hwDot3ahEfmStatsTable.setStatus('current')
hwDot3ahEfmStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 2, 2, 5, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: hwDot3ahEfmStatsEntry.setStatus('current')
hwDot3ahEfmInformationTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 2, 2, 5, 1, 1), Counter32()).setUnits('frames').setMaxAccess("readonly")
if mibBuilder.loadTexts: hwDot3ahEfmInformationTx.setStatus('current')
hwDot3ahEfmInformationRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 2, 2, 5, 1, 2), Counter32()).setUnits('frames').setMaxAccess("readonly")
if mibBuilder.loadTexts: hwDot3ahEfmInformationRx.setStatus('current')
hwDot3ahEfmUniqueEventNotificationTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 2, 2, 5, 1, 3), Counter32()).setUnits('frames').setMaxAccess("readonly")
if mibBuilder.loadTexts: hwDot3ahEfmUniqueEventNotificationTx.setStatus('current')
hwDot3ahEfmUniqueEventNotificationRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 2, 2, 5, 1, 4), Counter32()).setUnits('frames').setMaxAccess("readonly")
if mibBuilder.loadTexts: hwDot3ahEfmUniqueEventNotificationRx.setStatus('current')
hwDot3ahEfmDuplicateEventNotificationTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 2, 2, 5, 1, 5), Counter32()).setUnits('frames').setMaxAccess("readonly")
if mibBuilder.loadTexts: hwDot3ahEfmDuplicateEventNotificationTx.setStatus('current')
hwDot3ahEfmDuplicateEventNotificationRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 2, 2, 5, 1, 6), Counter32()).setUnits('frames').setMaxAccess("readonly")
if mibBuilder.loadTexts: hwDot3ahEfmDuplicateEventNotificationRx.setStatus('current')
hwDot3ahEfmLoopbackControlTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 2, 2, 5, 1, 7), Counter32()).setUnits('frames').setMaxAccess("readonly")
if mibBuilder.loadTexts: hwDot3ahEfmLoopbackControlTx.setStatus('current')
hwDot3ahEfmLoopbackControlRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 2, 2, 5, 1, 8), Counter32()).setUnits('frames').setMaxAccess("readonly")
if mibBuilder.loadTexts: hwDot3ahEfmLoopbackControlRx.setStatus('current')
hwDot3ahEfmVariableRequestTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 2, 2, 5, 1, 9), Counter32()).setUnits('frames').setMaxAccess("readonly")
if mibBuilder.loadTexts: hwDot3ahEfmVariableRequestTx.setStatus('current')
hwDot3ahEfmVariableRequestRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 2, 2, 5, 1, 10), Counter32()).setUnits('frames').setMaxAccess("readonly")
if mibBuilder.loadTexts: hwDot3ahEfmVariableRequestRx.setStatus('current')
hwDot3ahEfmVariableResponseTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 2, 2, 5, 1, 11), Counter32()).setUnits('frames').setMaxAccess("readonly")
if mibBuilder.loadTexts: hwDot3ahEfmVariableResponseTx.setStatus('current')
hwDot3ahEfmVariableResponseRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 2, 2, 5, 1, 12), Counter32()).setUnits('frames').setMaxAccess("readonly")
if mibBuilder.loadTexts: hwDot3ahEfmVariableResponseRx.setStatus('current')
hwDot3ahEfmOrgSpecificTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 2, 2, 5, 1, 13), Counter32()).setUnits('frames').setMaxAccess("readonly")
if mibBuilder.loadTexts: hwDot3ahEfmOrgSpecificTx.setStatus('current')
hwDot3ahEfmOrgSpecificRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 2, 2, 5, 1, 14), Counter32()).setUnits('frames').setMaxAccess("readonly")
if mibBuilder.loadTexts: hwDot3ahEfmOrgSpecificRx.setStatus('current')
hwDot3ahEfmUnsupportedCodesTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 2, 2, 5, 1, 15), Counter32()).setUnits('frames').setMaxAccess("readonly")
if mibBuilder.loadTexts: hwDot3ahEfmUnsupportedCodesTx.setStatus('current')
hwDot3ahEfmUnsupportedCodesRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 2, 2, 5, 1, 16), Counter32()).setUnits('frames').setMaxAccess("readonly")
if mibBuilder.loadTexts: hwDot3ahEfmUnsupportedCodesRx.setStatus('current')
hwDot3ahEfmFramesLostDueToOam = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 2, 2, 5, 1, 17), Counter32()).setUnits('frames').setMaxAccess("readonly")
if mibBuilder.loadTexts: hwDot3ahEfmFramesLostDueToOam.setStatus('current')
hwDot3ahEfmEventConfigTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 2, 2, 6), )
if mibBuilder.loadTexts: hwDot3ahEfmEventConfigTable.setStatus('current')
hwDot3ahEfmEventConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 2, 2, 6, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: hwDot3ahEfmEventConfigEntry.setStatus('current')
hwDot3ahEfmErrSymPeriodWindowHi = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 2, 2, 6, 1, 1), Unsigned32()).setUnits('2^32 symbols').setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwDot3ahEfmErrSymPeriodWindowHi.setStatus('current')
hwDot3ahEfmErrSymPeriodWindowLo = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 2, 2, 6, 1, 2), Unsigned32()).setUnits('symbols').setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwDot3ahEfmErrSymPeriodWindowLo.setStatus('current')
hwDot3ahEfmErrSymPeriodThresholdHi = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 2, 2, 6, 1, 3), Unsigned32()).setUnits('2^32 symbols').setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwDot3ahEfmErrSymPeriodThresholdHi.setStatus('current')
hwDot3ahEfmErrSymPeriodThresholdLo = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 2, 2, 6, 1, 4), Unsigned32()).setUnits('symbols').setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwDot3ahEfmErrSymPeriodThresholdLo.setStatus('current')
hwDot3ahEfmErrSymPeriodEvNotifEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 2, 2, 6, 1, 5), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwDot3ahEfmErrSymPeriodEvNotifEnable.setStatus('current')
hwDot3ahEfmErrFramePeriodWindow = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 2, 2, 6, 1, 6), Unsigned32()).setUnits('frames').setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwDot3ahEfmErrFramePeriodWindow.setStatus('current')
hwDot3ahEfmErrFramePeriodThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 2, 2, 6, 1, 7), Unsigned32()).setUnits('frames').setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwDot3ahEfmErrFramePeriodThreshold.setStatus('current')
hwDot3ahEfmErrFramePeriodEvNotifEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 2, 2, 6, 1, 8), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwDot3ahEfmErrFramePeriodEvNotifEnable.setStatus('current')
hwDot3ahEfmErrFrameWindow = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 2, 2, 6, 1, 9), Unsigned32()).setUnits('tenths of a second').setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwDot3ahEfmErrFrameWindow.setStatus('current')
hwDot3ahEfmErrFrameThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 2, 2, 6, 1, 10), Unsigned32()).setUnits('frames').setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwDot3ahEfmErrFrameThreshold.setStatus('current')
hwDot3ahEfmErrFrameEvNotifEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 2, 2, 6, 1, 11), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwDot3ahEfmErrFrameEvNotifEnable.setStatus('current')
hwDot3ahEfmErrFrameSecsSummaryWindow = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 2, 2, 6, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(100, 9000))).setUnits('tenths of a second').setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwDot3ahEfmErrFrameSecsSummaryWindow.setStatus('current')
hwDot3ahEfmErrFrameSecsSummaryThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 2, 2, 6, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 900))).setUnits('errored frame seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwDot3ahEfmErrFrameSecsSummaryThreshold.setStatus('current')
hwDot3ahEfmErrFrameSecsEvNotifEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 2, 2, 6, 1, 14), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwDot3ahEfmErrFrameSecsEvNotifEnable.setStatus('current')
hwDot3ahEfmDyingGaspEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 2, 2, 6, 1, 15), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwDot3ahEfmDyingGaspEnable.setStatus('current')
hwDot3ahEfmCriticalEventEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 2, 2, 6, 1, 16), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwDot3ahEfmCriticalEventEnable.setStatus('current')
hwDot3ahEfmThresholdTriggerErrDown = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 2, 2, 6, 1, 17), EnabledStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwDot3ahEfmThresholdTriggerErrDown.setStatus('current')
hwDot3ahEfmEventLogTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 2, 2, 7), )
if mibBuilder.loadTexts: hwDot3ahEfmEventLogTable.setStatus('current')
hwDot3ahEfmEventLogEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 2, 2, 7, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "HUAWEI-ETHOAM-MIB", "hwDot3ahEfmEventLogIndex"))
if mibBuilder.loadTexts: hwDot3ahEfmEventLogEntry.setStatus('current')
hwDot3ahEfmEventLogIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 2, 2, 7, 1, 1), Unsigned32())
if mibBuilder.loadTexts: hwDot3ahEfmEventLogIndex.setStatus('current')
hwDot3ahEfmEventLogTimestamp = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 2, 2, 7, 1, 2), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwDot3ahEfmEventLogTimestamp.setStatus('current')
hwDot3ahEfmEventLogOui = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 2, 2, 7, 1, 3), HWDot3Oui()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwDot3ahEfmEventLogOui.setStatus('current')
hwDot3ahEfmEventLogType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 2, 2, 7, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwDot3ahEfmEventLogType.setStatus('current')
hwDot3ahEfmEventLogLocation = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 2, 2, 7, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("local", 1), ("remote", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwDot3ahEfmEventLogLocation.setStatus('current')
hwDot3ahEfmEventLogWindowHi = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 2, 2, 7, 1, 6), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwDot3ahEfmEventLogWindowHi.setStatus('current')
hwDot3ahEfmEventLogWindowLo = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 2, 2, 7, 1, 7), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwDot3ahEfmEventLogWindowLo.setStatus('current')
hwDot3ahEfmEventLogThresholdHi = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 2, 2, 7, 1, 8), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwDot3ahEfmEventLogThresholdHi.setStatus('current')
hwDot3ahEfmEventLogThresholdLo = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 2, 2, 7, 1, 9), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwDot3ahEfmEventLogThresholdLo.setStatus('current')
hwDot3ahEfmEventLogValue = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 2, 2, 7, 1, 10), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwDot3ahEfmEventLogValue.setStatus('current')
hwDot3ahEfmEventLogRunningTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 2, 2, 7, 1, 11), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwDot3ahEfmEventLogRunningTotal.setStatus('current')
hwDot3ahEfmEventLogEventTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 2, 2, 7, 1, 12), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwDot3ahEfmEventLogEventTotal.setStatus('current')
hwDot3ahEfmManagerTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 2, 2, 8), )
if mibBuilder.loadTexts: hwDot3ahEfmManagerTable.setStatus('current')
hwDot3ahEfmManagerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 2, 2, 8, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: hwDot3ahEfmManagerEntry.setStatus('current')
hwDot3ahEfmTriggerIfDown = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 2, 2, 8, 1, 1), EnabledStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwDot3ahEfmTriggerIfDown.setStatus('current')
hwDot3ahEfmHoldUpTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 2, 2, 8, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 50))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwDot3ahEfmHoldUpTime.setStatus('current')
hwDot3ahEvrrpTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 2, 2, 9), )
if mibBuilder.loadTexts: hwDot3ahEvrrpTable.setStatus('current')
hwDot3ahEvrrpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 2, 2, 9, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: hwDot3ahEvrrpEntry.setStatus('current')
hwDot3ahEvrrpCpuState = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 2, 2, 9, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("master", 1), ("slave", 2), ("unknown", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwDot3ahEvrrpCpuState.setStatus('current')
hwDot3ahEvrrpTriggerIfDown = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 2, 2, 9, 1, 2), EnabledStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwDot3ahEvrrpTriggerIfDown.setStatus('obsolete')
hwDot3ahEvrrpHoldUpTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 2, 2, 9, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 50))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwDot3ahEvrrpHoldUpTime.setStatus('obsolete')
hwOamManager = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 3))
hwTestMessage = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 4))
hwTestMessageObject = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 4, 1))
hwTestMessageTableNextIndex = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 4, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwTestMessageTableNextIndex.setStatus('current')
hwTestMessageTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 4, 1, 2), )
if mibBuilder.loadTexts: hwTestMessageTable.setStatus('current')
hwTestMessageEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 4, 1, 2, 1), ).setIndexNames((0, "HUAWEI-ETHOAM-MIB", "hwTestMessageIndex"))
if mibBuilder.loadTexts: hwTestMessageEntry.setStatus('current')
hwTestMessageIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 4, 1, 2, 1, 1), Unsigned32())
if mibBuilder.loadTexts: hwTestMessageIndex.setStatus('current')
hwTestMessageMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 4, 1, 2, 1, 11), MacAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwTestMessageMacAddress.setStatus('current')
hwTestMessageVlanID = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 4, 1, 2, 1, 12), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwTestMessageVlanID.setStatus('current')
hwTestMessageInterface = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 4, 1, 2, 1, 13), OctetString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwTestMessageInterface.setStatus('current')
hwTestMessageServiceInstance = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 4, 1, 2, 1, 14), OctetString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwTestMessageServiceInstance.setStatus('current')
hwTestMessagePacketSize = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 4, 1, 2, 1, 15), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(64, 1518)).clone(64)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwTestMessagePacketSize.setStatus('current')
hwTestMessageSendPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 4, 1, 2, 1, 16), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)).clone(5)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwTestMessageSendPackets.setStatus('current')
hwTestMessageSendSpeed = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 4, 1, 2, 1, 17), HWTestMessageSendSpeed().clone('oneMbps')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwTestMessageSendSpeed.setStatus('current')
hwTestMessageSendEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 4, 1, 2, 1, 18), TruthValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwTestMessageSendEnabled.setStatus('current')
hwTestMessageSendFinished = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 4, 1, 2, 1, 19), HWTestMessageFinishedValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwTestMessageSendFinished.setStatus('current')
hwTestMessageRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 4, 1, 2, 1, 51), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwTestMessageRowStatus.setStatus('current')
hwTestMessageResultTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 4, 1, 3), )
if mibBuilder.loadTexts: hwTestMessageResultTable.setStatus('current')
hwTestMessageResultEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 4, 1, 3, 1), ).setIndexNames((0, "HUAWEI-ETHOAM-MIB", "hwTestMessageIndex"))
if mibBuilder.loadTexts: hwTestMessageResultEntry.setStatus('current')
hwTestMessageResultSendPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 4, 1, 3, 1, 11), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwTestMessageResultSendPackets.setStatus('current')
hwTestMessageResultReceivedPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 4, 1, 3, 1, 12), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwTestMessageResultReceivedPackets.setStatus('current')
hwTestMessageResultPacketsLost = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 4, 1, 3, 1, 13), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwTestMessageResultPacketsLost.setStatus('current')
hwTestMessageResultSendBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 4, 1, 3, 1, 14), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwTestMessageResultSendBytes.setStatus('current')
hwTestMessageResultReceivedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 4, 1, 3, 1, 15), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwTestMessageResultReceivedBytes.setStatus('current')
hwTestMessageResultBytesLost = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 4, 1, 3, 1, 16), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwTestMessageResultBytesLost.setStatus('current')
hwTestMessageBeginTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 4, 1, 3, 1, 17), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwTestMessageBeginTimeStamp.setStatus('current')
hwTestMessageEndTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 4, 1, 3, 1, 18), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwTestMessageEndTimeStamp.setStatus('current')
hwEthOamTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 6))
hwDot1agCfmFaultAlarm = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 6, 1)).setObjects(("HUAWEI-ETHOAM-MIB", "hwDot1agCfmRMepMacAddress"), ("HUAWEI-ETHOAM-MIB", "hwDot1agCfmRMepHighestPrDefect"), ("HUAWEI-ETHOAM-MIB", "hwDot1agCfmMdName"), ("HUAWEI-ETHOAM-MIB", "hwDot1agCfmMdMdLevel"), ("HUAWEI-ETHOAM-MIB", "hwDot1agCfmMaName"))
if mibBuilder.loadTexts: hwDot1agCfmFaultAlarm.setStatus('current')
hwTestMessageFailed = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 6, 2)).setObjects(("HUAWEI-ETHOAM-MIB", "hwTestMessageSendFinished"))
if mibBuilder.loadTexts: hwTestMessageFailed.setStatus('obsolete')
hwTestMessageCompleted = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 6, 3)).setObjects(("HUAWEI-ETHOAM-MIB", "hwTestMessageSendFinished"), ("HUAWEI-ETHOAM-MIB", "hwTestMessageResultSendPackets"), ("HUAWEI-ETHOAM-MIB", "hwTestMessageResultReceivedPackets"), ("HUAWEI-ETHOAM-MIB", "hwTestMessageResultPacketsLost"), ("HUAWEI-ETHOAM-MIB", "hwTestMessageResultSendBytes"), ("HUAWEI-ETHOAM-MIB", "hwTestMessageResultReceivedBytes"), ("HUAWEI-ETHOAM-MIB", "hwTestMessageResultBytesLost"), ("HUAWEI-ETHOAM-MIB", "hwTestMessageBeginTimeStamp"), ("HUAWEI-ETHOAM-MIB", "hwTestMessageEndTimeStamp"))
if mibBuilder.loadTexts: hwTestMessageCompleted.setStatus('obsolete')
hwDot3ahEfmThresholdEvent = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 6, 4)).setObjects(("HUAWEI-ETHOAM-MIB", "hwDot3ahEfmEventLogTimestamp"), ("HUAWEI-ETHOAM-MIB", "hwDot3ahEfmEventLogOui"), ("HUAWEI-ETHOAM-MIB", "hwDot3ahEfmEventLogType"), ("HUAWEI-ETHOAM-MIB", "hwDot3ahEfmEventLogLocation"), ("HUAWEI-ETHOAM-MIB", "hwDot3ahEfmEventLogWindowHi"), ("HUAWEI-ETHOAM-MIB", "hwDot3ahEfmEventLogWindowLo"), ("HUAWEI-ETHOAM-MIB", "hwDot3ahEfmEventLogThresholdHi"), ("HUAWEI-ETHOAM-MIB", "hwDot3ahEfmEventLogThresholdLo"), ("HUAWEI-ETHOAM-MIB", "hwDot3ahEfmEventLogValue"), ("HUAWEI-ETHOAM-MIB", "hwDot3ahEfmEventLogRunningTotal"), ("HUAWEI-ETHOAM-MIB", "hwDot3ahEfmEventLogEventTotal"))
if mibBuilder.loadTexts: hwDot3ahEfmThresholdEvent.setStatus('current')
hwDot3ahEfmNonThresholdEvent = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 6, 5)).setObjects(("HUAWEI-ETHOAM-MIB", "hwDot3ahEfmEventLogTimestamp"), ("HUAWEI-ETHOAM-MIB", "hwDot3ahEfmEventLogOui"), ("HUAWEI-ETHOAM-MIB", "hwDot3ahEfmEventLogType"), ("HUAWEI-ETHOAM-MIB", "hwDot3ahEfmEventLogLocation"))
if mibBuilder.loadTexts: hwDot3ahEfmNonThresholdEvent.setStatus('current')
hwDot3ahEfmRemoteDyingGaspEvent = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 6, 8)).setObjects(("HUAWEI-ETHOAM-MIB", "hwDot3ahEfmPeerMacAddress"), ("IF-MIB", "ifDescr"))
if mibBuilder.loadTexts: hwDot3ahEfmRemoteDyingGaspEvent.setStatus('current')
hwDot3ahEfmNonThresholdRecovery = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 6, 17)).setObjects(("HUAWEI-ETHOAM-MIB", "hwDot3ahEfmEventLogTimestamp"), ("HUAWEI-ETHOAM-MIB", "hwDot3ahEfmEventLogOui"), ("HUAWEI-ETHOAM-MIB", "hwDot3ahEfmEventLogType"), ("HUAWEI-ETHOAM-MIB", "hwDot3ahEfmEventLogLocation"))
if mibBuilder.loadTexts: hwDot3ahEfmNonThresholdRecovery.setStatus('current')
hwCfmVlanOnewayDelay = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 6, 23)).setObjects(("HUAWEI-ETHOAM-MIB", "hwCfmOneDelayTrapLogMacAddress"), ("HUAWEI-ETHOAM-MIB", "hwCfmVlanOneDelayTrapLogTimestamp"), ("HUAWEI-ETHOAM-MIB", "hwCfmVlanOneDelayTrapLogDelayValue"), ("HUAWEI-ETHOAM-MIB", "hwCfmVlanOneDelayTrapLogThreshold"), ("HUAWEI-ETHOAM-MIB", "hwCfmVlanOneDelayTrapLogDelayValueHigh"), ("HUAWEI-ETHOAM-MIB", "hwCfmVlanOneDelayTrapLogDelayValueLow"))
if mibBuilder.loadTexts: hwCfmVlanOnewayDelay.setStatus('current')
hwCfmVlanOnewayDelayRecovery = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 6, 24)).setObjects(("HUAWEI-ETHOAM-MIB", "hwCfmOneDelayRecoveryTrapMacAddress"), ("HUAWEI-ETHOAM-MIB", "hwCfmVlanOneDelayRecoveryTrapLogTimestamp"), ("HUAWEI-ETHOAM-MIB", "hwCfmVlanOneDelayRecoveryTrapLogDelayValue"), ("HUAWEI-ETHOAM-MIB", "hwCfmVlanOneDelayRecoveryTrapLogThreshold"), ("HUAWEI-ETHOAM-MIB", "hwCfmVlanOneDelayRecoveryTrapLogDelayValueHigh"), ("HUAWEI-ETHOAM-MIB", "hwCfmVlanOneDelayRecoveryTrapLogDelayValueLow"))
if mibBuilder.loadTexts: hwCfmVlanOnewayDelayRecovery.setStatus('current')
hwCfmVlanTwowayDelay = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 6, 25)).setObjects(("HUAWEI-ETHOAM-MIB", "hwCfmTwoDelayTrapMacAddress"), ("HUAWEI-ETHOAM-MIB", "hwCfmVlanTwoDelayTrapLogTimestamp"), ("HUAWEI-ETHOAM-MIB", "hwCfmVlanTwoDelayTrapLogDelayValue"), ("HUAWEI-ETHOAM-MIB", "hwCfmVlanTwoDelayTrapLogThreshold"), ("HUAWEI-ETHOAM-MIB", "hwCfmVlanTwoDelayTrapLogDelayValueHigh"), ("HUAWEI-ETHOAM-MIB", "hwCfmVlanTwoDelayTrapLogDelayValueLow"))
if mibBuilder.loadTexts: hwCfmVlanTwowayDelay.setStatus('current')
hwCfmVlanTwowayDelayRecovery = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 6, 26)).setObjects(("HUAWEI-ETHOAM-MIB", "hwCfmTwoDelayRecoveryTrapMacAddress"), ("HUAWEI-ETHOAM-MIB", "hwCfmVlanTwoDelayRecoveryTrapLogTimestamp"), ("HUAWEI-ETHOAM-MIB", "hwCfmVlanTwoDelayRecoveryTrapLogDelayValue"), ("HUAWEI-ETHOAM-MIB", "hwCfmVlanTwoDelayRecoveryTrapLogThreshold"), ("HUAWEI-ETHOAM-MIB", "hwCfmVlanTwoDelayRecoveryTrapLogDelayValueHigh"), ("HUAWEI-ETHOAM-MIB", "hwCfmVlanTwoDelayRecoveryTrapLogDelayValueLow"))
if mibBuilder.loadTexts: hwCfmVlanTwowayDelayRecovery.setStatus('current')
hwDot3ahEfmLoopbackFailed = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 6, 29)).setObjects(("IF-MIB", "ifDescr"))
if mibBuilder.loadTexts: hwDot3ahEfmLoopbackFailed.setStatus('current')
hwY1731AisDefectAlarm = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 6, 30)).setObjects(("HUAWEI-ETHOAM-MIB", "hwDot1agCfmMdName"), ("HUAWEI-ETHOAM-MIB", "hwDot1agCfmMaName"), ("HUAWEI-ETHOAM-MIB", "hwDot1agCfmMepIdentifier"))
if mibBuilder.loadTexts: hwY1731AisDefectAlarm.setStatus('current')
hwY1731AisDefectAlarmRecovery = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 6, 31)).setObjects(("HUAWEI-ETHOAM-MIB", "hwDot1agCfmMdName"), ("HUAWEI-ETHOAM-MIB", "hwDot1agCfmMaName"), ("HUAWEI-ETHOAM-MIB", "hwDot1agCfmMepIdentifier"))
if mibBuilder.loadTexts: hwY1731AisDefectAlarmRecovery.setStatus('current')
hwDot1agCfmUnexpectedMEGLevel = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 6, 32)).setObjects(("HUAWEI-ETHOAM-MIB", "hwDot1agCfmMdName"), ("HUAWEI-ETHOAM-MIB", "hwDot1agCfmMaName"), ("HUAWEI-ETHOAM-MIB", "hwDot1agCfmMepIdentifier"))
if mibBuilder.loadTexts: hwDot1agCfmUnexpectedMEGLevel.setStatus('current')
hwDot1agCfmUnexpectedMEGLevelCleared = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 6, 33)).setObjects(("HUAWEI-ETHOAM-MIB", "hwDot1agCfmMdName"), ("HUAWEI-ETHOAM-MIB", "hwDot1agCfmMaName"), ("HUAWEI-ETHOAM-MIB", "hwDot1agCfmMepIdentifier"))
if mibBuilder.loadTexts: hwDot1agCfmUnexpectedMEGLevelCleared.setStatus('current')
hwDot1agCfmMismerge = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 6, 34)).setObjects(("HUAWEI-ETHOAM-MIB", "hwDot1agCfmMdName"), ("HUAWEI-ETHOAM-MIB", "hwDot1agCfmMaName"), ("HUAWEI-ETHOAM-MIB", "hwDot1agCfmMepIdentifier"))
if mibBuilder.loadTexts: hwDot1agCfmMismerge.setStatus('current')
hwDot1agCfmMismergeCleared = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 6, 35)).setObjects(("HUAWEI-ETHOAM-MIB", "hwDot1agCfmMdName"), ("HUAWEI-ETHOAM-MIB", "hwDot1agCfmMaName"), ("HUAWEI-ETHOAM-MIB", "hwDot1agCfmMepIdentifier"))
if mibBuilder.loadTexts: hwDot1agCfmMismergeCleared.setStatus('current')
hwDot1agCfmUnexpectedMEP = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 6, 36)).setObjects(("HUAWEI-ETHOAM-MIB", "hwDot1agCfmMdName"), ("HUAWEI-ETHOAM-MIB", "hwDot1agCfmMaName"), ("HUAWEI-ETHOAM-MIB", "hwDot1agCfmMepIdentifier"))
if mibBuilder.loadTexts: hwDot1agCfmUnexpectedMEP.setStatus('current')
hwDot1agCfmUnexpectedMEPCleared = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 6, 37)).setObjects(("HUAWEI-ETHOAM-MIB", "hwDot1agCfmMdName"), ("HUAWEI-ETHOAM-MIB", "hwDot1agCfmMaName"), ("HUAWEI-ETHOAM-MIB", "hwDot1agCfmMepIdentifier"))
if mibBuilder.loadTexts: hwDot1agCfmUnexpectedMEPCleared.setStatus('current')
hwDot1agCfmUnexpectedPeriod = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 6, 38)).setObjects(("HUAWEI-ETHOAM-MIB", "hwDot1agCfmMdName"), ("HUAWEI-ETHOAM-MIB", "hwDot1agCfmMaName"), ("HUAWEI-ETHOAM-MIB", "hwDot1agCfmMepIdentifier"), ("HUAWEI-ETHOAM-MIB", "hwDot1agCfmRMepIdentifier"))
if mibBuilder.loadTexts: hwDot1agCfmUnexpectedPeriod.setStatus('current')
hwDot1agCfmUnexpectedPeriodCleared = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 6, 39)).setObjects(("HUAWEI-ETHOAM-MIB", "hwDot1agCfmMdName"), ("HUAWEI-ETHOAM-MIB", "hwDot1agCfmMaName"), ("HUAWEI-ETHOAM-MIB", "hwDot1agCfmMepIdentifier"), ("HUAWEI-ETHOAM-MIB", "hwDot1agCfmRMepIdentifier"))
if mibBuilder.loadTexts: hwDot1agCfmUnexpectedPeriodCleared.setStatus('current')
hwDot1agCfmUnexpectedMAC = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 6, 40)).setObjects(("HUAWEI-ETHOAM-MIB", "hwDot1agCfmMdName"), ("HUAWEI-ETHOAM-MIB", "hwDot1agCfmMaName"), ("HUAWEI-ETHOAM-MIB", "hwDot1agCfmMepIdentifier"), ("HUAWEI-ETHOAM-MIB", "hwDot1agCfmRMepIdentifier"))
if mibBuilder.loadTexts: hwDot1agCfmUnexpectedMAC.setStatus('current')
hwDot1agCfmUnexpectedMACCleared = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 6, 41)).setObjects(("HUAWEI-ETHOAM-MIB", "hwDot1agCfmMdName"), ("HUAWEI-ETHOAM-MIB", "hwDot1agCfmMaName"), ("HUAWEI-ETHOAM-MIB", "hwDot1agCfmMepIdentifier"), ("HUAWEI-ETHOAM-MIB", "hwDot1agCfmRMepIdentifier"))
if mibBuilder.loadTexts: hwDot1agCfmUnexpectedMACCleared.setStatus('current')
hwDot1agCfmLOC = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 6, 42)).setObjects(("HUAWEI-ETHOAM-MIB", "hwDot1agCfmMdName"), ("HUAWEI-ETHOAM-MIB", "hwDot1agCfmMaName"), ("HUAWEI-ETHOAM-MIB", "hwDot1agCfmMepIdentifier"), ("HUAWEI-ETHOAM-MIB", "hwDot1agCfmRMepIdentifier"))
if mibBuilder.loadTexts: hwDot1agCfmLOC.setStatus('current')
hwDot1agCfmLOCCleared = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 6, 43)).setObjects(("HUAWEI-ETHOAM-MIB", "hwDot1agCfmMdName"), ("HUAWEI-ETHOAM-MIB", "hwDot1agCfmMaName"), ("HUAWEI-ETHOAM-MIB", "hwDot1agCfmMepIdentifier"), ("HUAWEI-ETHOAM-MIB", "hwDot1agCfmRMepIdentifier"))
if mibBuilder.loadTexts: hwDot1agCfmLOCCleared.setStatus('current')
hwDot1agCfmExceptionalMACStatus = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 6, 44)).setObjects(("HUAWEI-ETHOAM-MIB", "hwDot1agCfmMdName"), ("HUAWEI-ETHOAM-MIB", "hwDot1agCfmMaName"), ("HUAWEI-ETHOAM-MIB", "hwDot1agCfmMepIdentifier"), ("HUAWEI-ETHOAM-MIB", "hwDot1agCfmRMepIdentifier"))
if mibBuilder.loadTexts: hwDot1agCfmExceptionalMACStatus.setStatus('current')
hwDot1agCfmExceptionalMACStatusCleared = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 6, 45)).setObjects(("HUAWEI-ETHOAM-MIB", "hwDot1agCfmMdName"), ("HUAWEI-ETHOAM-MIB", "hwDot1agCfmMaName"), ("HUAWEI-ETHOAM-MIB", "hwDot1agCfmMepIdentifier"), ("HUAWEI-ETHOAM-MIB", "hwDot1agCfmRMepIdentifier"))
if mibBuilder.loadTexts: hwDot1agCfmExceptionalMACStatusCleared.setStatus('current')
hwDot1agCfmRDI = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 6, 46)).setObjects(("HUAWEI-ETHOAM-MIB", "hwDot1agCfmMdName"), ("HUAWEI-ETHOAM-MIB", "hwDot1agCfmMaName"), ("HUAWEI-ETHOAM-MIB", "hwDot1agCfmMepIdentifier"), ("HUAWEI-ETHOAM-MIB", "hwDot1agCfmRMepIdentifier"))
if mibBuilder.loadTexts: hwDot1agCfmRDI.setStatus('current')
hwDot1agCfmRDICleared = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 6, 47)).setObjects(("HUAWEI-ETHOAM-MIB", "hwDot1agCfmMdName"), ("HUAWEI-ETHOAM-MIB", "hwDot1agCfmMaName"), ("HUAWEI-ETHOAM-MIB", "hwDot1agCfmMepIdentifier"), ("HUAWEI-ETHOAM-MIB", "hwDot1agCfmRMepIdentifier"))
if mibBuilder.loadTexts: hwDot1agCfmRDICleared.setStatus('current')
hwY1731AisExceedMaxPktNum = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 6, 48)).setObjects(("HUAWEI-ETHOAM-MIB", "hwY1731AisMaxPktNum"))
if mibBuilder.loadTexts: hwY1731AisExceedMaxPktNum.setStatus('current')
hwY1731AisExceedMaxPktNumCleared = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 6, 49))
if mibBuilder.loadTexts: hwY1731AisExceedMaxPktNumCleared.setStatus('current')
hwY1731LckDefect = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 6, 50)).setObjects(("HUAWEI-ETHOAM-MIB", "hwDot1agCfmMdName"), ("HUAWEI-ETHOAM-MIB", "hwDot1agCfmMaName"), ("HUAWEI-ETHOAM-MIB", "hwDot1agCfmMepIdentifier"))
if mibBuilder.loadTexts: hwY1731LckDefect.setStatus('current')
hwY1731LckDefectCleared = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 6, 51)).setObjects(("HUAWEI-ETHOAM-MIB", "hwDot1agCfmMdName"), ("HUAWEI-ETHOAM-MIB", "hwDot1agCfmMaName"), ("HUAWEI-ETHOAM-MIB", "hwDot1agCfmMepIdentifier"))
if mibBuilder.loadTexts: hwY1731LckDefectCleared.setStatus('current')
hwY1731Statistic = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 6, 52)).setObjects(("HUAWEI-ETHOAM-MIB", "hwDot1agCfmMdName"), ("HUAWEI-ETHOAM-MIB", "hwDot1agCfmMaName"), ("HUAWEI-ETHOAM-MIB", "hwDot1agCfmMepIdentifier"), ("HUAWEI-ETHOAM-MIB", "hwY1731StatisticTrapLogValue"), ("HUAWEI-ETHOAM-MIB", "hwY1731StatisticTrapLogUpperLimitThreshold"), ("HUAWEI-ETHOAM-MIB", "hwY1731StatisticTrapLogLowerLimitThreshold"), ("HUAWEI-ETHOAM-MIB", "hwY1731StatisticTrapLogValueHigh"), ("HUAWEI-ETHOAM-MIB", "hwY1731StatisticTrapLogValueLow"))
if mibBuilder.loadTexts: hwY1731Statistic.setStatus('current')
hwY1731StatisticClear = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 6, 53)).setObjects(("HUAWEI-ETHOAM-MIB", "hwDot1agCfmMdName"), ("HUAWEI-ETHOAM-MIB", "hwDot1agCfmMaName"), ("HUAWEI-ETHOAM-MIB", "hwDot1agCfmMepIdentifier"), ("HUAWEI-ETHOAM-MIB", "hwY1731StatisticTrapLogValue"), ("HUAWEI-ETHOAM-MIB", "hwY1731StatisticTrapLogUpperLimitThreshold"), ("HUAWEI-ETHOAM-MIB", "hwY1731StatisticTrapLogLowerLimitThreshold"), ("HUAWEI-ETHOAM-MIB", "hwY1731StatisticTrapLogValueHigh"), ("HUAWEI-ETHOAM-MIB", "hwY1731StatisticTrapLogValueLow"))
if mibBuilder.loadTexts: hwY1731StatisticClear.setStatus('current')
hwY1731LckExceedThreshold = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 6, 54)).setObjects(("HUAWEI-ETHOAM-MIB", "hwY1731LckMaxPktNum"), ("HUAWEI-ETHOAM-MIB", "hwY1731LckCurrentPktNum"), ("HUAWEI-ETHOAM-MIB", "hwY1731LckUpperThreshold"), ("HUAWEI-ETHOAM-MIB", "hwY1731LckLowerThreshold"))
if mibBuilder.loadTexts: hwY1731LckExceedThreshold.setStatus('current')
hwY1731LckExceedThresholdRecovery = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 6, 55)).setObjects(("HUAWEI-ETHOAM-MIB", "hwY1731LckMaxPktNum"), ("HUAWEI-ETHOAM-MIB", "hwY1731LckCurrentPktNum"), ("HUAWEI-ETHOAM-MIB", "hwY1731LckUpperThreshold"), ("HUAWEI-ETHOAM-MIB", "hwY1731LckLowerThreshold"))
if mibBuilder.loadTexts: hwY1731LckExceedThresholdRecovery.setStatus('current')
hwEthOamConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 7))
hwEthOamCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 7, 1))
hwEthOamCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 7, 1, 1)).setObjects(("HUAWEI-ETHOAM-MIB", "hwDot1agCfmMdGroup"), ("HUAWEI-ETHOAM-MIB", "hwDot1agCfmMaGroup"), ("HUAWEI-ETHOAM-MIB", "hwDot1agCfmMepGroup"), ("HUAWEI-ETHOAM-MIB", "hwDot1agCfmRMepGroup"), ("HUAWEI-ETHOAM-MIB", "hwDot1agCfmMipGroup"), ("HUAWEI-ETHOAM-MIB", "hwDot1agCfmMacPingGroup"), ("HUAWEI-ETHOAM-MIB", "hwDot1agCfmMacTraceGroup"), ("HUAWEI-ETHOAM-MIB", "hwDot1agCfmMacTraceReplyGroup"), ("HUAWEI-ETHOAM-MIB", "hwDot3ahEfmDetectModeGroup"), ("HUAWEI-ETHOAM-MIB", "hwTestMessageGroup"), ("HUAWEI-ETHOAM-MIB", "hwTestMessageResultGroup"), ("HUAWEI-ETHOAM-MIB", "hwEthOamTrapsGroup"), ("HUAWEI-ETHOAM-MIB", "hwDot1agCfmGroup"), ("HUAWEI-ETHOAM-MIB", "hwDot3ahEfmControlGroup"), ("HUAWEI-ETHOAM-MIB", "hwDot3ahEfmPeerGroup"), ("HUAWEI-ETHOAM-MIB", "hwDot3ahEfmStatsBaseGroup"), ("HUAWEI-ETHOAM-MIB", "hwDot3ahEfmManagerGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwEthOamCompliance = hwEthOamCompliance.setStatus('current')
hwEthOamGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 7, 2))
hwDot1agCfmMdGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 7, 2, 1)).setObjects(("HUAWEI-ETHOAM-MIB", "hwDot1agCfmMdTableNextIndex"), ("HUAWEI-ETHOAM-MIB", "hwDot1agCfmMdFormat"), ("HUAWEI-ETHOAM-MIB", "hwDot1agCfmMdName"), ("HUAWEI-ETHOAM-MIB", "hwDot1agCfmMdMdLevel"), ("HUAWEI-ETHOAM-MIB", "hwDot1agCfmMdMhfCreation"), ("HUAWEI-ETHOAM-MIB", "hwDot1agCfmMdMhfIdPermission"), ("HUAWEI-ETHOAM-MIB", "hwDot1agCfmMdRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwDot1agCfmMdGroup = hwDot1agCfmMdGroup.setStatus('current')
hwDot1agCfmMaGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 7, 2, 2)).setObjects(("HUAWEI-ETHOAM-MIB", "hwDot1agCfmMaNextIndex"), ("HUAWEI-ETHOAM-MIB", "hwDot1agCfmMaName"), ("HUAWEI-ETHOAM-MIB", "hwDot1agCfmMaMapType"), ("HUAWEI-ETHOAM-MIB", "hwDot1agCfmMaMapVlanValue"), ("HUAWEI-ETHOAM-MIB", "hwDot1agCfmMaMapVsiName"), ("HUAWEI-ETHOAM-MIB", "hwDot1agCfmMaMapL2vcType"), ("HUAWEI-ETHOAM-MIB", "hwDot1agCfmMaMapL2vcValue"), ("HUAWEI-ETHOAM-MIB", "hwDot1agCfmMaPktPriority"), ("HUAWEI-ETHOAM-MIB", "hwDot1agCfmMaRmepActiveTime"), ("HUAWEI-ETHOAM-MIB", "hwDot1agCfmMaMepFngAlarmTime"), ("HUAWEI-ETHOAM-MIB", "hwDot1agCfmMaMepFngResetTime"), ("HUAWEI-ETHOAM-MIB", "hwDot1agCfmMaRowStatus"), ("HUAWEI-ETHOAM-MIB", "hwDot1agCfmMaCcmInterval"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwDot1agCfmMaGroup = hwDot1agCfmMaGroup.setStatus('current')
hwDot1agCfmMepGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 7, 2, 3)).setObjects(("HUAWEI-ETHOAM-MIB", "hwDot1agCfmMepIsVlanType"), ("HUAWEI-ETHOAM-MIB", "hwDot1agCfmMepIfIndex"), ("HUAWEI-ETHOAM-MIB", "hwDot1agCfmMepDot1qVlan"), ("HUAWEI-ETHOAM-MIB", "hwDot1agCfmMepPeVlan"), ("HUAWEI-ETHOAM-MIB", "hwDot1agCfmMepCeVlan"), ("HUAWEI-ETHOAM-MIB", "hwDot1agCfmMepDirection"), ("HUAWEI-ETHOAM-MIB", "hwDot1agCfmMepCcmSendEnabled"), ("HUAWEI-ETHOAM-MIB", "hwDot1agCfmMepMacAddress"), ("HUAWEI-ETHOAM-MIB", "hwDot1agCfmMepRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwDot1agCfmMepGroup = hwDot1agCfmMepGroup.setStatus('current')
hwDot1agCfmRMepGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 7, 2, 4)).setObjects(("HUAWEI-ETHOAM-MIB", "hwDot1agCfmRMepMacAddress"), ("HUAWEI-ETHOAM-MIB", "hwDot1agCfmRMepCcmRecvEnabled"), ("HUAWEI-ETHOAM-MIB", "hwDot1agCfmRMepStateIsUp"), ("HUAWEI-ETHOAM-MIB", "hwDot1agCfmRMepHighestPrDefect"), ("HUAWEI-ETHOAM-MIB", "hwDot1agCfmRMepRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwDot1agCfmRMepGroup = hwDot1agCfmRMepGroup.setStatus('current')
hwDot1agCfmMipGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 7, 2, 5)).setObjects(("HUAWEI-ETHOAM-MIB", "hwDot1agCfmMipLevel"), ("HUAWEI-ETHOAM-MIB", "hwDot1agCfmMipIfMacAddress"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwDot1agCfmMipGroup = hwDot1agCfmMipGroup.setStatus('current')
hwDot1agCfmMacPingGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 7, 2, 6)).setObjects(("HUAWEI-ETHOAM-MIB", "hwDot1agCfmMacPingState"), ("HUAWEI-ETHOAM-MIB", "hwDot1agCfmMacPingMdName"), ("HUAWEI-ETHOAM-MIB", "hwDot1agCfmMacPingMaName"), ("HUAWEI-ETHOAM-MIB", "hwDot1agCfmMacPingMepId"), ("HUAWEI-ETHOAM-MIB", "hwDot1agCfmMacPingDestIsMepId"), ("HUAWEI-ETHOAM-MIB", "hwDot1agCfmMacPingDestMepId"), ("HUAWEI-ETHOAM-MIB", "hwDot1agCfmMacPingMacAddress"), ("HUAWEI-ETHOAM-MIB", "hwDot1agCfmMacPingOutIfIndex"), ("HUAWEI-ETHOAM-MIB", "hwDot1agCfmMacPingTimeOut"), ("HUAWEI-ETHOAM-MIB", "hwDot1agCfmMacPingCount"), ("HUAWEI-ETHOAM-MIB", "hwDot1agCfmMacPingPacketSize"), ("HUAWEI-ETHOAM-MIB", "hwDot1agCfmMacPingPriority"), ("HUAWEI-ETHOAM-MIB", "hwDot1agCfmMacPingSendPacketNum"), ("HUAWEI-ETHOAM-MIB", "hwDot1agCfmMacPingRecvPacketNum"), ("HUAWEI-ETHOAM-MIB", "hwDot1agCfmMacPingPacketLossRatio"), ("HUAWEI-ETHOAM-MIB", "hwDot1agCfmMacPingRecvTimeDelayMin"), ("HUAWEI-ETHOAM-MIB", "hwDot1agCfmMacPingRecvTimeDelayMax"), ("HUAWEI-ETHOAM-MIB", "hwDot1agCfmMacPingRecvTimeDelayAvg"), ("HUAWEI-ETHOAM-MIB", "hwDot1agCfmMacPingRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwDot1agCfmMacPingGroup = hwDot1agCfmMacPingGroup.setStatus('current')
hwDot1agCfmMacTraceGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 7, 2, 7)).setObjects(("HUAWEI-ETHOAM-MIB", "hwDot1agCfmMacTraceState"), ("HUAWEI-ETHOAM-MIB", "hwDot1agCfmMacTraceMdName"), ("HUAWEI-ETHOAM-MIB", "hwDot1agCfmMacTraceMaName"), ("HUAWEI-ETHOAM-MIB", "hwDot1agCfmMacTraceDestIsMepId"), ("HUAWEI-ETHOAM-MIB", "hwDot1agCfmMacTraceDestMepId"), ("HUAWEI-ETHOAM-MIB", "hwDot1agCfmMacTraceMacAddress"), ("HUAWEI-ETHOAM-MIB", "hwDot1agCfmMacTraceOutIfIndex"), ("HUAWEI-ETHOAM-MIB", "hwDot1agCfmMacTraceTimeOut"), ("HUAWEI-ETHOAM-MIB", "hwDot1agCfmMacTraceTTL"), ("HUAWEI-ETHOAM-MIB", "hwDot1agCfmMacTraceSendSeqNumber"), ("HUAWEI-ETHOAM-MIB", "hwDot1agCfmMacTraceResult"), ("HUAWEI-ETHOAM-MIB", "hwDot1agCfmMacTraceMepId"), ("HUAWEI-ETHOAM-MIB", "hwDot1agCfmMacTraceRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwDot1agCfmMacTraceGroup = hwDot1agCfmMacTraceGroup.setStatus('current')
hwDot1agCfmMacTraceReplyGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 7, 2, 8)).setObjects(("HUAWEI-ETHOAM-MIB", "hwDot1agCfmMacTraceReplyTTL"), ("HUAWEI-ETHOAM-MIB", "hwDot1agCfmMacTraceReplyForwarded"), ("HUAWEI-ETHOAM-MIB", "hwDot1agCfmMacTraceReplyTerminalMep"), ("HUAWEI-ETHOAM-MIB", "hwDot1agCfmMacTraceReplyRelayAction"), ("HUAWEI-ETHOAM-MIB", "hwDot1agCfmMacTraceReplyIngressAction"), ("HUAWEI-ETHOAM-MIB", "hwDot1agCfmMacTraceReplyIngressMac"), ("HUAWEI-ETHOAM-MIB", "hwDot1agCfmMacTraceReplyIngressIfName"), ("HUAWEI-ETHOAM-MIB", "hwDot1agCfmMacTraceReplyEgressAction"), ("HUAWEI-ETHOAM-MIB", "hwDot1agCfmMacTraceReplyEgressMac"), ("HUAWEI-ETHOAM-MIB", "hwDot1agCfmMacTraceReplyEgressIfName"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwDot1agCfmMacTraceReplyGroup = hwDot1agCfmMacTraceReplyGroup.setStatus('current')
hwDot1agCfmQueryMdIndexGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 7, 2, 9)).setObjects(("HUAWEI-ETHOAM-MIB", "hwDot1agCfmQueryMdIndex"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwDot1agCfmQueryMdIndexGroup = hwDot1agCfmQueryMdIndexGroup.setStatus('current')
hwDot1agCfmQueryMaIndexGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 7, 2, 10)).setObjects(("HUAWEI-ETHOAM-MIB", "hwDot1agCfmQueryMaIndex"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwDot1agCfmQueryMaIndexGroup = hwDot1agCfmQueryMaIndexGroup.setStatus('current')
hwDot3ahEfmDetectModeGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 7, 2, 11)).setObjects(("HUAWEI-ETHOAM-MIB", "hwDot3ahEfmEnabled"), ("HUAWEI-ETHOAM-MIB", "hwDot3ahEfmDetectMode"), ("HUAWEI-ETHOAM-MIB", "hwDot3ahEfmDetectInterval"), ("HUAWEI-ETHOAM-MIB", "hwDot3ahEfmDetectMalfunction"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwDot3ahEfmDetectModeGroup = hwDot3ahEfmDetectModeGroup.setStatus('current')
hwTestMessageGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 7, 2, 12)).setObjects(("HUAWEI-ETHOAM-MIB", "hwTestMessageTableNextIndex"), ("HUAWEI-ETHOAM-MIB", "hwTestMessageInterface"), ("HUAWEI-ETHOAM-MIB", "hwTestMessageServiceInstance"), ("HUAWEI-ETHOAM-MIB", "hwTestMessageMacAddress"), ("HUAWEI-ETHOAM-MIB", "hwTestMessageVlanID"), ("HUAWEI-ETHOAM-MIB", "hwTestMessagePacketSize"), ("HUAWEI-ETHOAM-MIB", "hwTestMessageSendPackets"), ("HUAWEI-ETHOAM-MIB", "hwTestMessageSendSpeed"), ("HUAWEI-ETHOAM-MIB", "hwTestMessageSendEnabled"), ("HUAWEI-ETHOAM-MIB", "hwTestMessageSendFinished"), ("HUAWEI-ETHOAM-MIB", "hwTestMessageRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwTestMessageGroup = hwTestMessageGroup.setStatus('current')
hwTestMessageResultGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 7, 2, 13)).setObjects(("HUAWEI-ETHOAM-MIB", "hwTestMessageResultSendPackets"), ("HUAWEI-ETHOAM-MIB", "hwTestMessageResultReceivedPackets"), ("HUAWEI-ETHOAM-MIB", "hwTestMessageResultPacketsLost"), ("HUAWEI-ETHOAM-MIB", "hwTestMessageResultSendBytes"), ("HUAWEI-ETHOAM-MIB", "hwTestMessageResultReceivedBytes"), ("HUAWEI-ETHOAM-MIB", "hwTestMessageResultBytesLost"), ("HUAWEI-ETHOAM-MIB", "hwTestMessageBeginTimeStamp"), ("HUAWEI-ETHOAM-MIB", "hwTestMessageEndTimeStamp"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwTestMessageResultGroup = hwTestMessageResultGroup.setStatus('current')
hwEthOamTrapsGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 7, 2, 14)).setObjects(("HUAWEI-ETHOAM-MIB", "hwDot1agCfmFaultAlarm"), ("HUAWEI-ETHOAM-MIB", "hwTestMessageFailed"), ("HUAWEI-ETHOAM-MIB", "hwTestMessageCompleted"), ("HUAWEI-ETHOAM-MIB", "hwDot3ahEfmThresholdEvent"), ("HUAWEI-ETHOAM-MIB", "hwDot3ahEfmNonThresholdEvent"), ("HUAWEI-ETHOAM-MIB", "hwDot3ahEfmRemoteDyingGaspEvent"), ("HUAWEI-ETHOAM-MIB", "hwDot3ahEfmNonThresholdRecovery"), ("HUAWEI-ETHOAM-MIB", "hwCfmVlanOnewayDelay"), ("HUAWEI-ETHOAM-MIB", "hwCfmVlanOnewayDelayRecovery"), ("HUAWEI-ETHOAM-MIB", "hwCfmVlanTwowayDelay"), ("HUAWEI-ETHOAM-MIB", "hwCfmVlanTwowayDelayRecovery"), ("HUAWEI-ETHOAM-MIB", "hwDot1agCfmUnexpectedMEGLevel"), ("HUAWEI-ETHOAM-MIB", "hwDot1agCfmUnexpectedMEGLevelCleared"), ("HUAWEI-ETHOAM-MIB", "hwDot1agCfmMismerge"), ("HUAWEI-ETHOAM-MIB", "hwDot1agCfmMismergeCleared"), ("HUAWEI-ETHOAM-MIB", "hwDot1agCfmUnexpectedMEP"), ("HUAWEI-ETHOAM-MIB", "hwDot1agCfmUnexpectedMEPCleared"), ("HUAWEI-ETHOAM-MIB", "hwDot1agCfmUnexpectedPeriod"), ("HUAWEI-ETHOAM-MIB", "hwDot1agCfmUnexpectedPeriodCleared"), ("HUAWEI-ETHOAM-MIB", "hwDot1agCfmUnexpectedMAC"), ("HUAWEI-ETHOAM-MIB", "hwDot1agCfmUnexpectedMACCleared"), ("HUAWEI-ETHOAM-MIB", "hwDot1agCfmLOC"), ("HUAWEI-ETHOAM-MIB", "hwDot1agCfmLOCCleared"), ("HUAWEI-ETHOAM-MIB", "hwDot1agCfmExceptionalMACStatus"), ("HUAWEI-ETHOAM-MIB", "hwDot1agCfmExceptionalMACStatusCleared"), ("HUAWEI-ETHOAM-MIB", "hwDot1agCfmRDI"), ("HUAWEI-ETHOAM-MIB", "hwDot1agCfmRDICleared"), ("HUAWEI-ETHOAM-MIB", "hwDot3ahEfmLoopbackFailed"), ("HUAWEI-ETHOAM-MIB", "hwY1731AisDefectAlarm"), ("HUAWEI-ETHOAM-MIB", "hwY1731AisDefectAlarmRecovery"), ("HUAWEI-ETHOAM-MIB", "hwY1731AisExceedMaxPktNum"), ("HUAWEI-ETHOAM-MIB", "hwY1731AisExceedMaxPktNumCleared"), ("HUAWEI-ETHOAM-MIB", "hwY1731LckDefect"), ("HUAWEI-ETHOAM-MIB", "hwY1731LckDefectCleared"), ("HUAWEI-ETHOAM-MIB", "hwY1731Statistic"), ("HUAWEI-ETHOAM-MIB", "hwY1731StatisticClear"), ("HUAWEI-ETHOAM-MIB", "hwY1731LckExceedThreshold"), ("HUAWEI-ETHOAM-MIB", "hwY1731LckExceedThresholdRecovery"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwEthOamTrapsGroup = hwEthOamTrapsGroup.setStatus('current')
hwDot1agCfmGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 7, 2, 15)).setObjects(("HUAWEI-ETHOAM-MIB", "hwDot1agCfmVersion"), ("HUAWEI-ETHOAM-MIB", "hwDot1agCfmEnabled"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwDot1agCfmGroup = hwDot1agCfmGroup.setStatus('current')
hwDot3ahEfmControlGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 7, 2, 16)).setObjects(("HUAWEI-ETHOAM-MIB", "hwDot3ahEfmAdminState"), ("HUAWEI-ETHOAM-MIB", "hwDot3ahEfmOperStatus"), ("HUAWEI-ETHOAM-MIB", "hwDot3ahEfmMode"), ("HUAWEI-ETHOAM-MIB", "hwDot3ahEfmMaxOamPduSize"), ("HUAWEI-ETHOAM-MIB", "hwDot3ahEfmConfigRevision"), ("HUAWEI-ETHOAM-MIB", "hwDot3ahEfmFunctionsSupported"), ("HUAWEI-ETHOAM-MIB", "hwDot3ahEfmTimeout"), ("HUAWEI-ETHOAM-MIB", "hwDot3ahEfmInterval"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwDot3ahEfmControlGroup = hwDot3ahEfmControlGroup.setStatus('current')
hwDot3ahEfmPeerGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 7, 2, 17)).setObjects(("HUAWEI-ETHOAM-MIB", "hwDot3ahEfmPeerMacAddress"), ("HUAWEI-ETHOAM-MIB", "hwDot3ahEfmPeerVendorOui"), ("HUAWEI-ETHOAM-MIB", "hwDot3ahEfmPeerVendorInfo"), ("HUAWEI-ETHOAM-MIB", "hwDot3ahEfmPeerMode"), ("HUAWEI-ETHOAM-MIB", "hwDot3ahEfmPeerFunctionsSupported"), ("HUAWEI-ETHOAM-MIB", "hwDot3ahEfmPeerMaxOamPduSize"), ("HUAWEI-ETHOAM-MIB", "hwDot3ahEfmPeerConfigRevision"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwDot3ahEfmPeerGroup = hwDot3ahEfmPeerGroup.setStatus('current')
hwDot3ahEfmStatsBaseGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 7, 2, 18)).setObjects(("HUAWEI-ETHOAM-MIB", "hwDot3ahEfmInformationTx"), ("HUAWEI-ETHOAM-MIB", "hwDot3ahEfmInformationRx"), ("HUAWEI-ETHOAM-MIB", "hwDot3ahEfmUniqueEventNotificationTx"), ("HUAWEI-ETHOAM-MIB", "hwDot3ahEfmUniqueEventNotificationRx"), ("HUAWEI-ETHOAM-MIB", "hwDot3ahEfmDuplicateEventNotificationTx"), ("HUAWEI-ETHOAM-MIB", "hwDot3ahEfmDuplicateEventNotificationRx"), ("HUAWEI-ETHOAM-MIB", "hwDot3ahEfmLoopbackControlTx"), ("HUAWEI-ETHOAM-MIB", "hwDot3ahEfmLoopbackControlRx"), ("HUAWEI-ETHOAM-MIB", "hwDot3ahEfmVariableRequestTx"), ("HUAWEI-ETHOAM-MIB", "hwDot3ahEfmVariableRequestRx"), ("HUAWEI-ETHOAM-MIB", "hwDot3ahEfmVariableResponseTx"), ("HUAWEI-ETHOAM-MIB", "hwDot3ahEfmVariableResponseRx"), ("HUAWEI-ETHOAM-MIB", "hwDot3ahEfmOrgSpecificTx"), ("HUAWEI-ETHOAM-MIB", "hwDot3ahEfmOrgSpecificRx"), ("HUAWEI-ETHOAM-MIB", "hwDot3ahEfmUnsupportedCodesTx"), ("HUAWEI-ETHOAM-MIB", "hwDot3ahEfmUnsupportedCodesRx"), ("HUAWEI-ETHOAM-MIB", "hwDot3ahEfmFramesLostDueToOam"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwDot3ahEfmStatsBaseGroup = hwDot3ahEfmStatsBaseGroup.setStatus('current')
hwDot3ahEfmLoopbackGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 7, 2, 19)).setObjects(("HUAWEI-ETHOAM-MIB", "hwDot3ahEfmLoopbackStatus"), ("HUAWEI-ETHOAM-MIB", "hwDot3ahEfmLoopbackIgnoreRx"), ("HUAWEI-ETHOAM-MIB", "hwDot3ahEfmLoopbackTimeout"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwDot3ahEfmLoopbackGroup = hwDot3ahEfmLoopbackGroup.setStatus('current')
hwDot3ahEfmErrSymbolPeriodEventGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 7, 2, 20)).setObjects(("HUAWEI-ETHOAM-MIB", "hwDot3ahEfmErrSymPeriodWindowHi"), ("HUAWEI-ETHOAM-MIB", "hwDot3ahEfmErrSymPeriodWindowLo"), ("HUAWEI-ETHOAM-MIB", "hwDot3ahEfmErrSymPeriodThresholdHi"), ("HUAWEI-ETHOAM-MIB", "hwDot3ahEfmErrSymPeriodThresholdLo"), ("HUAWEI-ETHOAM-MIB", "hwDot3ahEfmErrSymPeriodEvNotifEnable"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwDot3ahEfmErrSymbolPeriodEventGroup = hwDot3ahEfmErrSymbolPeriodEventGroup.setStatus('current')
hwDot3ahEfmErrFramePeriodEventGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 7, 2, 21)).setObjects(("HUAWEI-ETHOAM-MIB", "hwDot3ahEfmErrFramePeriodWindow"), ("HUAWEI-ETHOAM-MIB", "hwDot3ahEfmErrFramePeriodThreshold"), ("HUAWEI-ETHOAM-MIB", "hwDot3ahEfmErrFramePeriodEvNotifEnable"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwDot3ahEfmErrFramePeriodEventGroup = hwDot3ahEfmErrFramePeriodEventGroup.setStatus('current')
hwDot3ahEfmErrFrameEventGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 7, 2, 22)).setObjects(("HUAWEI-ETHOAM-MIB", "hwDot3ahEfmErrFrameWindow"), ("HUAWEI-ETHOAM-MIB", "hwDot3ahEfmErrFrameThreshold"), ("HUAWEI-ETHOAM-MIB", "hwDot3ahEfmErrFrameEvNotifEnable"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwDot3ahEfmErrFrameEventGroup = hwDot3ahEfmErrFrameEventGroup.setStatus('current')
hwDot3ahEfmErrFrameSecsSummaryEventGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 7, 2, 23)).setObjects(("HUAWEI-ETHOAM-MIB", "hwDot3ahEfmErrFrameSecsSummaryWindow"), ("HUAWEI-ETHOAM-MIB", "hwDot3ahEfmErrFrameSecsSummaryThreshold"), ("HUAWEI-ETHOAM-MIB", "hwDot3ahEfmErrFrameSecsEvNotifEnable"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwDot3ahEfmErrFrameSecsSummaryEventGroup = hwDot3ahEfmErrFrameSecsSummaryEventGroup.setStatus('current')
hwDot3ahEfmFlagEventGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 7, 2, 24)).setObjects(("HUAWEI-ETHOAM-MIB", "hwDot3ahEfmDyingGaspEnable"), ("HUAWEI-ETHOAM-MIB", "hwDot3ahEfmCriticalEventEnable"), ("HUAWEI-ETHOAM-MIB", "hwDot3ahEfmThresholdTriggerErrDown"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwDot3ahEfmFlagEventGroup = hwDot3ahEfmFlagEventGroup.setStatus('current')
hwDot3ahEfmEventLogGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 7, 2, 25)).setObjects(("HUAWEI-ETHOAM-MIB", "hwDot3ahEfmEventLogTimestamp"), ("HUAWEI-ETHOAM-MIB", "hwDot3ahEfmEventLogOui"), ("HUAWEI-ETHOAM-MIB", "hwDot3ahEfmEventLogType"), ("HUAWEI-ETHOAM-MIB", "hwDot3ahEfmEventLogLocation"), ("HUAWEI-ETHOAM-MIB", "hwDot3ahEfmEventLogWindowHi"), ("HUAWEI-ETHOAM-MIB", "hwDot3ahEfmEventLogWindowLo"), ("HUAWEI-ETHOAM-MIB", "hwDot3ahEfmEventLogThresholdHi"), ("HUAWEI-ETHOAM-MIB", "hwDot3ahEfmEventLogThresholdLo"), ("HUAWEI-ETHOAM-MIB", "hwDot3ahEfmEventLogValue"), ("HUAWEI-ETHOAM-MIB", "hwDot3ahEfmEventLogRunningTotal"), ("HUAWEI-ETHOAM-MIB", "hwDot3ahEfmEventLogEventTotal"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwDot3ahEfmEventLogGroup = hwDot3ahEfmEventLogGroup.setStatus('current')
hwDot3ahEfmManagerGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 7, 2, 26)).setObjects(("HUAWEI-ETHOAM-MIB", "hwDot3ahEfmTriggerIfDown"), ("HUAWEI-ETHOAM-MIB", "hwDot3ahEfmHoldUpTime"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwDot3ahEfmManagerGroup = hwDot3ahEfmManagerGroup.setStatus('current')
hwDot3ahEvrrpGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 7, 2, 27)).setObjects(("HUAWEI-ETHOAM-MIB", "hwDot3ahEvrrpCpuState"), ("HUAWEI-ETHOAM-MIB", "hwDot3ahEvrrpTriggerIfDown"), ("HUAWEI-ETHOAM-MIB", "hwDot3ahEvrrpHoldUpTime"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwDot3ahEvrrpGroup = hwDot3ahEvrrpGroup.setStatus('current')
hwY1731BaseConfigGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 7, 2, 28)).setObjects(("HUAWEI-ETHOAM-MIB", "hwY1731PwMeasureMode"), ("HUAWEI-ETHOAM-MIB", "hwY1731OneDelayThreshold"), ("HUAWEI-ETHOAM-MIB", "hwY1731TwoDelayThreshold"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwY1731BaseConfigGroup = hwY1731BaseConfigGroup.setStatus('current')
hwY1731ConfigGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 7, 2, 29)).setObjects(("HUAWEI-ETHOAM-MIB", "hwY1731ServiceType"), ("HUAWEI-ETHOAM-MIB", "hwY1731SingleLossRecvEnable"), ("HUAWEI-ETHOAM-MIB", "hwY1731OneDelayRecvEnable"), ("HUAWEI-ETHOAM-MIB", "hwY1731OneDelayRecvEnableIsContinue"), ("HUAWEI-ETHOAM-MIB", "hwY1731TwoDelayRecvEnable"), ("HUAWEI-ETHOAM-MIB", "hwY1731SingleLossEnable"), ("HUAWEI-ETHOAM-MIB", "hwY1731SingleLossIsContinue"), ("HUAWEI-ETHOAM-MIB", "hwY1731SingleLossMepId"), ("HUAWEI-ETHOAM-MIB", "hwY1731SingleLossDestIsMepId"), ("HUAWEI-ETHOAM-MIB", "hwY1731SingleLossDestMepId"), ("HUAWEI-ETHOAM-MIB", "hwY1731SingleLossMacAddress"), ("HUAWEI-ETHOAM-MIB", "hwY1731SingleLossInterval"), ("HUAWEI-ETHOAM-MIB", "hwY1731SingleLossCount"), ("HUAWEI-ETHOAM-MIB", "hwY1731SingleLoss8021pValue"), ("HUAWEI-ETHOAM-MIB", "hwY1731DualLossEnable"), ("HUAWEI-ETHOAM-MIB", "hwY1731DualLossMepId"), ("HUAWEI-ETHOAM-MIB", "hwY1731DualLossDestMepId"), ("HUAWEI-ETHOAM-MIB", "hwY1731OneDelayEnable"), ("HUAWEI-ETHOAM-MIB", "hwY1731OneDelayIsContinue"), ("HUAWEI-ETHOAM-MIB", "hwY1731OneDelayMepId"), ("HUAWEI-ETHOAM-MIB", "hwY1731OneDelayDestIsMepId"), ("HUAWEI-ETHOAM-MIB", "hwY1731OneDelayDestMepId"), ("HUAWEI-ETHOAM-MIB", "hwY1731OneDelayMacAddress"), ("HUAWEI-ETHOAM-MIB", "hwY1731OneDelayInterval"), ("HUAWEI-ETHOAM-MIB", "hwY1731OneDelayCount"), ("HUAWEI-ETHOAM-MIB", "hwY1731OneDelay8021pValue"), ("HUAWEI-ETHOAM-MIB", "hwY1731TwoDelayEnable"), ("HUAWEI-ETHOAM-MIB", "hwY1731TwoDelayIsContinue"), ("HUAWEI-ETHOAM-MIB", "hwY1731TwoDelayMepId"), ("HUAWEI-ETHOAM-MIB", "hwY1731TwoDelayDestIsMepId"), ("HUAWEI-ETHOAM-MIB", "hwY1731TwoDelayDestMepId"), ("HUAWEI-ETHOAM-MIB", "hwY1731TwoDelayMacAddress"), ("HUAWEI-ETHOAM-MIB", "hwY1731TwoDelayInterval"), ("HUAWEI-ETHOAM-MIB", "hwY1731TwoDelayCount"), ("HUAWEI-ETHOAM-MIB", "hwY1731TwoDelay8021pValue"), ("HUAWEI-ETHOAM-MIB", "hwY1731SingleLossRecv8021pValue"), ("HUAWEI-ETHOAM-MIB", "hwY1731OneDelayRecv8021pValue"), ("HUAWEI-ETHOAM-MIB", "hwY1731TwoDelayRecv8021pValue"), ("HUAWEI-ETHOAM-MIB", "hwY1731SingleLossRecvMepId"), ("HUAWEI-ETHOAM-MIB", "hwY1731OneDelayRecvMepId"), ("HUAWEI-ETHOAM-MIB", "hwY1731TwoDelayRecvMepId"), ("HUAWEI-ETHOAM-MIB", "hwY1731OneDelayPacketSize"), ("HUAWEI-ETHOAM-MIB", "hwY1731TwoDelayPacketSize"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwY1731ConfigGroup = hwY1731ConfigGroup.setStatus('current')
hwY1731AisGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 7, 2, 30)).setObjects(("HUAWEI-ETHOAM-MIB", "hwY1731AisEnable"), ("HUAWEI-ETHOAM-MIB", "hwY1731AisSendLevel"), ("HUAWEI-ETHOAM-MIB", "hwY1731AisSendInterval"), ("HUAWEI-ETHOAM-MIB", "hwY1731AisSendPktStatus"), ("HUAWEI-ETHOAM-MIB", "hwY1731AisSuppressEnable"), ("HUAWEI-ETHOAM-MIB", "hwY1731AisSuppressStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwY1731AisGroup = hwY1731AisGroup.setStatus('current')
hwY1731AisVlanGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 7, 2, 31)).setObjects(("HUAWEI-ETHOAM-MIB", "hwY1731AisPeVlan"), ("HUAWEI-ETHOAM-MIB", "hwY1731AisLowCeVlan"), ("HUAWEI-ETHOAM-MIB", "hwY1731AisHighCeVlan"), ("HUAWEI-ETHOAM-MIB", "hwY1731AisLowDot1qVlan"), ("HUAWEI-ETHOAM-MIB", "hwY1731AisHighDot1qVlan"), ("HUAWEI-ETHOAM-MIB", "hwY1731AisRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwY1731AisVlanGroup = hwY1731AisVlanGroup.setStatus('current')
hwY1731AisLinkStatusGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 7, 2, 32)).setObjects(("HUAWEI-ETHOAM-MIB", "hwY1731AisLinkRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwY1731AisLinkStatusGroup = hwY1731AisLinkStatusGroup.setStatus('current')
hwY1731MulPingGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 7, 2, 33)).setObjects(("HUAWEI-ETHOAM-MIB", "hwY1731MulPingState"), ("HUAWEI-ETHOAM-MIB", "hwY1731MulPingMdName"), ("HUAWEI-ETHOAM-MIB", "hwY1731MulPingMaName"), ("HUAWEI-ETHOAM-MIB", "hwY1731MulPingMepId"), ("HUAWEI-ETHOAM-MIB", "hwY1731MulPingTimeout"), ("HUAWEI-ETHOAM-MIB", "hwY1731MulPingCount"), ("HUAWEI-ETHOAM-MIB", "hwY1731MulPingPriority"), ("HUAWEI-ETHOAM-MIB", "hwY1731MulPingSendPacketNum"), ("HUAWEI-ETHOAM-MIB", "hwY1731MulPingRecvPacketNum"), ("HUAWEI-ETHOAM-MIB", "hwY1731MulPingRecvTimeDelayMin"), ("HUAWEI-ETHOAM-MIB", "hwY1731MulPingRecvTimeDelayMax"), ("HUAWEI-ETHOAM-MIB", "hwY1731MulPingRecvTimeDelayAvg"), ("HUAWEI-ETHOAM-MIB", "hwY1731MulPingRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwY1731MulPingGroup = hwY1731MulPingGroup.setStatus('current')
hwY1731MulPingReplyGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 7, 2, 34)).setObjects(("HUAWEI-ETHOAM-MIB", "hwY1731MulPingReplyMepId"), ("HUAWEI-ETHOAM-MIB", "hwY1731MulPingReplyMacAddress"), ("HUAWEI-ETHOAM-MIB", "hwY1731MulPingReplyTransTime"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwY1731MulPingReplyGroup = hwY1731MulPingReplyGroup.setStatus('current')
hwY1731ResetStatisticGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 7, 2, 35)).setObjects(("HUAWEI-ETHOAM-MIB", "hwY1731ResetStatisticType"), ("HUAWEI-ETHOAM-MIB", "hwY1731ResetStatistic8021pValue"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwY1731ResetStatisticGroup = hwY1731ResetStatisticGroup.setStatus('current')
hwY1731ManagerGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 7, 2, 36)).setObjects(("HUAWEI-ETHOAM-MIB", "hwY1731SingleLossStatisticGatherInterval"), ("HUAWEI-ETHOAM-MIB", "hwY1731SingleLossLocalStatistic"), ("HUAWEI-ETHOAM-MIB", "hwY1731SingleLossLocalRatio"), ("HUAWEI-ETHOAM-MIB", "hwY1731SingleLossLocalRatioMax"), ("HUAWEI-ETHOAM-MIB", "hwY1731SingleLossLocalRatioMin"), ("HUAWEI-ETHOAM-MIB", "hwY1731SingleLossLocalRatioAvg"), ("HUAWEI-ETHOAM-MIB", "hwY1731SingleLossRemoteStatistic"), ("HUAWEI-ETHOAM-MIB", "hwY1731SingleLossRemoteRatio"), ("HUAWEI-ETHOAM-MIB", "hwY1731SingleLossRemoteRatioMax"), ("HUAWEI-ETHOAM-MIB", "hwY1731SingleLossRemoteRatioMin"), ("HUAWEI-ETHOAM-MIB", "hwY1731SingleLossRemoteRatioAvg"), ("HUAWEI-ETHOAM-MIB", "hwY1731OneDelayStatistic"), ("HUAWEI-ETHOAM-MIB", "hwY1731OneDelayVariation"), ("HUAWEI-ETHOAM-MIB", "hwY1731OneDelayMax"), ("HUAWEI-ETHOAM-MIB", "hwY1731OneDelayMin"), ("HUAWEI-ETHOAM-MIB", "hwY1731OneDelayAvg"), ("HUAWEI-ETHOAM-MIB", "hwY1731TwoDelayStatistic"), ("HUAWEI-ETHOAM-MIB", "hwY1731TwoDelayVariation"), ("HUAWEI-ETHOAM-MIB", "hwY1731TwoDelayMax"), ("HUAWEI-ETHOAM-MIB", "hwY1731TwoDelayMin"), ("HUAWEI-ETHOAM-MIB", "hwY1731TwoDelayAvg"), ("HUAWEI-ETHOAM-MIB", "hwY1731SingleLossLocalMax"), ("HUAWEI-ETHOAM-MIB", "hwY1731SingleLossLocalMin"), ("HUAWEI-ETHOAM-MIB", "hwY1731SingleLossLocalAvg"), ("HUAWEI-ETHOAM-MIB", "hwY1731SingleLossRemoteMax"), ("HUAWEI-ETHOAM-MIB", "hwY1731SingleLossRemoteMin"), ("HUAWEI-ETHOAM-MIB", "hwY1731SingleLossRemoteAvg"), ("HUAWEI-ETHOAM-MIB", "hwY1731OneDelayStatisticMax"), ("HUAWEI-ETHOAM-MIB", "hwY1731OneDelayStatisticMin"), ("HUAWEI-ETHOAM-MIB", "hwY1731OneDelayStatisticAvg"), ("HUAWEI-ETHOAM-MIB", "hwY1731TwoDelayStatisticMax"), ("HUAWEI-ETHOAM-MIB", "hwY1731TwoDelayStatisticMin"), ("HUAWEI-ETHOAM-MIB", "hwY1731TwoDelayStatisticAvg"), ("HUAWEI-ETHOAM-MIB", "hwY1731TwoDelayUnresponsivePacketCount"), ("HUAWEI-ETHOAM-MIB", "hwY1731SingleLossStatistic8021pValue"), ("HUAWEI-ETHOAM-MIB", "hwY1731OneDelayStatistic8021pValue"), ("HUAWEI-ETHOAM-MIB", "hwY1731TwoDelayStatistic8021pValue"), ("HUAWEI-ETHOAM-MIB", "hwY1731OneDelayOnDemandStartTime"), ("HUAWEI-ETHOAM-MIB", "hwY1731TwoDelayOnDemandStartTime"), ("HUAWEI-ETHOAM-MIB", "hwY1731SingleLossOnDemandStartTime"), ("HUAWEI-ETHOAM-MIB", "hwCfmOneDelayTrapLogMacAddress"), ("HUAWEI-ETHOAM-MIB", "hwCfmVlanOneDelayTrapLogTimestamp"), ("HUAWEI-ETHOAM-MIB", "hwCfmVlanOneDelayTrapLogDelayValue"), ("HUAWEI-ETHOAM-MIB", "hwCfmVlanOneDelayTrapLogDelayValueHigh"), ("HUAWEI-ETHOAM-MIB", "hwCfmVlanOneDelayTrapLogDelayValueLow"), ("HUAWEI-ETHOAM-MIB", "hwCfmVlanOneDelayTrapLogThreshold"), ("HUAWEI-ETHOAM-MIB", "hwCfmOneDelayRecoveryTrapMacAddress"), ("HUAWEI-ETHOAM-MIB", "hwCfmVlanOneDelayRecoveryTrapLogTimestamp"), ("HUAWEI-ETHOAM-MIB", "hwCfmVlanOneDelayRecoveryTrapLogDelayValue"), ("HUAWEI-ETHOAM-MIB", "hwCfmVlanOneDelayRecoveryTrapLogDelayValueHigh"), ("HUAWEI-ETHOAM-MIB", "hwCfmVlanOneDelayRecoveryTrapLogDelayValueLow"), ("HUAWEI-ETHOAM-MIB", "hwCfmVlanOneDelayRecoveryTrapLogThreshold"), ("HUAWEI-ETHOAM-MIB", "hwCfmTwoDelayTrapMacAddress"), ("HUAWEI-ETHOAM-MIB", "hwCfmVlanTwoDelayTrapLogTimestamp"), ("HUAWEI-ETHOAM-MIB", "hwCfmVlanTwoDelayTrapLogDelayValue"), ("HUAWEI-ETHOAM-MIB", "hwCfmVlanTwoDelayTrapLogDelayValueHigh"), ("HUAWEI-ETHOAM-MIB", "hwCfmVlanTwoDelayTrapLogDelayValueLow"), ("HUAWEI-ETHOAM-MIB", "hwCfmVlanTwoDelayTrapLogThreshold"), ("HUAWEI-ETHOAM-MIB", "hwCfmTwoDelayRecoveryTrapMacAddress"), ("HUAWEI-ETHOAM-MIB", "hwCfmVlanTwoDelayRecoveryTrapLogTimestamp"), ("HUAWEI-ETHOAM-MIB", "hwCfmVlanTwoDelayRecoveryTrapLogDelayValue"), ("HUAWEI-ETHOAM-MIB", "hwCfmVlanTwoDelayRecoveryTrapLogDelayValueHigh"), ("HUAWEI-ETHOAM-MIB", "hwCfmVlanTwoDelayRecoveryTrapLogDelayValueLow"), ("HUAWEI-ETHOAM-MIB", "hwCfmVlanTwoDelayRecoveryTrapLogThreshold"), ("HUAWEI-ETHOAM-MIB", "hwY1731AisMaxPktNum"), ("HUAWEI-ETHOAM-MIB", "hwY1731PMModeEnable"), ("HUAWEI-ETHOAM-MIB", "hwY1731MaxTestId"), ("HUAWEI-ETHOAM-MIB", "hwY1731LckMaxPktNum"), ("HUAWEI-ETHOAM-MIB", "hwY1731LckCurrentPktNum"), ("HUAWEI-ETHOAM-MIB", "hwY1731LckUpperThreshold"), ("HUAWEI-ETHOAM-MIB", "hwY1731LckLowerThreshold"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwY1731ManagerGroup = hwY1731ManagerGroup.setStatus('current')
hwY1731AisVlanConfigGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 7, 2, 37)).setObjects(("HUAWEI-ETHOAM-MIB", "hwY1731AisConfigVlanListLow"), ("HUAWEI-ETHOAM-MIB", "hwY1731AisConfigVlanListHigh"), ("HUAWEI-ETHOAM-MIB", "hwY1731AisVlanConfigRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwY1731AisVlanConfigGroup = hwY1731AisVlanConfigGroup.setStatus('current')
hwDot1agCfmMPGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 7, 2, 38)).setObjects(("HUAWEI-ETHOAM-MIB", "hwDot1agCfmMPAddressModel"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwDot1agCfmMPGroup = hwDot1agCfmMPGroup.setStatus('current')
hwY1731TestIdGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 7, 2, 39)).setObjects(("HUAWEI-ETHOAM-MIB", "hwY1731TestIdentifier"), ("HUAWEI-ETHOAM-MIB", "hwY1731TestIdMdName"), ("HUAWEI-ETHOAM-MIB", "hwY1731TestIdMaName"), ("HUAWEI-ETHOAM-MIB", "hwY1731TestIdLocalMepId"), ("HUAWEI-ETHOAM-MIB", "hwY1731TestIdDestIsMepId"), ("HUAWEI-ETHOAM-MIB", "hwY1731TestIdDestMepId"), ("HUAWEI-ETHOAM-MIB", "hwY1731TestIdDestMepMacAddress"), ("HUAWEI-ETHOAM-MIB", "hwY1731TestIdOnwardMacAddress"), ("HUAWEI-ETHOAM-MIB", "hwY1731TestIdBackwardMacAddress"), ("HUAWEI-ETHOAM-MIB", "hwY1731TestIdIsUpdateOnwardMacAddress"), ("HUAWEI-ETHOAM-MIB", "hwY1731TestIdIsUpdateBackwardMacAddress"), ("HUAWEI-ETHOAM-MIB", "hwY1731TestId8021pValue"), ("HUAWEI-ETHOAM-MIB", "hwY1731TestIdUplink8021p"), ("HUAWEI-ETHOAM-MIB", "hwY1731TestIdDownlink8021p"), ("HUAWEI-ETHOAM-MIB", "hwY1731TestIdDescription"), ("HUAWEI-ETHOAM-MIB", "hwY1731TestIdIsRecordFile"), ("HUAWEI-ETHOAM-MIB", "hwY1731TestIdRowStatus"), ("HUAWEI-ETHOAM-MIB", "hwY1731TestIdQueuePriority"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwY1731TestIdGroup = hwY1731TestIdGroup.setStatus('current')
hwY1731TestIdSingleEndedLMSendGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 7, 2, 40)).setObjects(("HUAWEI-ETHOAM-MIB", "hwY1731TestIdSingleEndedLMSendIsContinue"), ("HUAWEI-ETHOAM-MIB", "hwY1731TestIdSingleEndedLMSendInterval"), ("HUAWEI-ETHOAM-MIB", "hwY1731TestIdSingleEndedLMSendCount"), ("HUAWEI-ETHOAM-MIB", "hwY1731TestIdSingleEndedLMSendRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwY1731TestIdSingleEndedLMSendGroup = hwY1731TestIdSingleEndedLMSendGroup.setStatus('current')
hwY1731TestIdSingleEndedLMReceiveGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 7, 2, 41)).setObjects(("HUAWEI-ETHOAM-MIB", "hwY1731TestIdSingleEndedLMReceiveRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwY1731TestIdSingleEndedLMReceiveGroup = hwY1731TestIdSingleEndedLMReceiveGroup.setStatus('current')
hwY1731TestIdOneWayDMSendGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 7, 2, 42)).setObjects(("HUAWEI-ETHOAM-MIB", "hwY1731TestIdOneWayDMSendIsContinue"), ("HUAWEI-ETHOAM-MIB", "hwY1731TestIdOneWayDMSendInterval"), ("HUAWEI-ETHOAM-MIB", "hwY1731TestIdOneWayDMSendCount"), ("HUAWEI-ETHOAM-MIB", "hwY1731TestIdOneWayDMSendPacketSize"), ("HUAWEI-ETHOAM-MIB", "hwY1731TestIdOneWayDMSendRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwY1731TestIdOneWayDMSendGroup = hwY1731TestIdOneWayDMSendGroup.setStatus('current')
hwY1731TestIdOneWayDMReceiveGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 7, 2, 43)).setObjects(("HUAWEI-ETHOAM-MIB", "hwY1731TestIdOneWayDMReceiveIsContinue"), ("HUAWEI-ETHOAM-MIB", "hwY1731TestIdOneWayDMReceiveRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwY1731TestIdOneWayDMReceiveGroup = hwY1731TestIdOneWayDMReceiveGroup.setStatus('current')
hwY1731TestIdTwoWayDMSendGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 7, 2, 44)).setObjects(("HUAWEI-ETHOAM-MIB", "hwY1731TestIdTwoWayDMSendIsContinue"), ("HUAWEI-ETHOAM-MIB", "hwY1731TestIdTwoWayDMSendInterval"), ("HUAWEI-ETHOAM-MIB", "hwY1731TestIdTwoWayDMSendCount"), ("HUAWEI-ETHOAM-MIB", "hwY1731TestIdTwoWayDMSendPacketSize"), ("HUAWEI-ETHOAM-MIB", "hwY1731TestIdTwoWayDMSendRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwY1731TestIdTwoWayDMSendGroup = hwY1731TestIdTwoWayDMSendGroup.setStatus('current')
hwY1731TestIdTwoWayDMReceiveGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 7, 2, 45)).setObjects(("HUAWEI-ETHOAM-MIB", "hwY1731TestIdTwoWayDMReceiveRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwY1731TestIdTwoWayDMReceiveGroup = hwY1731TestIdTwoWayDMReceiveGroup.setStatus('current')
hwY1731TestIdSingleLossStatTableGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 7, 2, 46)).setObjects(("HUAWEI-ETHOAM-MIB", "hwY1731TestIdSingleLossSequence"), ("HUAWEI-ETHOAM-MIB", "hwY1731TestIdSingleLossErrInfo"), ("HUAWEI-ETHOAM-MIB", "hwY1731TestIdSingleLossLocal"), ("HUAWEI-ETHOAM-MIB", "hwY1731TestIdSingleLossLocalRatio"), ("HUAWEI-ETHOAM-MIB", "hwY1731TestIdSingleLossRemote"), ("HUAWEI-ETHOAM-MIB", "hwY1731TestIdSingleLossRemoteRatio"), ("HUAWEI-ETHOAM-MIB", "hwY1731TestIdSingleLossOnDemandStartTime"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwY1731TestIdSingleLossStatTableGroup = hwY1731TestIdSingleLossStatTableGroup.setStatus('current')
hwY1731TestIdOneDelayStatTableGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 7, 2, 47)).setObjects(("HUAWEI-ETHOAM-MIB", "hwY1731TestIdOneDelaySequence"), ("HUAWEI-ETHOAM-MIB", "hwY1731TestIdOneDelayErrInfo"), ("HUAWEI-ETHOAM-MIB", "hwY1731TestIdOneDelay"), ("HUAWEI-ETHOAM-MIB", "hwY1731TestIdOneDelayVariation"), ("HUAWEI-ETHOAM-MIB", "hwY1731TestIdOneDelayOnDemandStartTime"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwY1731TestIdOneDelayStatTableGroup = hwY1731TestIdOneDelayStatTableGroup.setStatus('current')
hwY1731TestIdTwoDelayStatTableGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 7, 2, 48)).setObjects(("HUAWEI-ETHOAM-MIB", "hwY1731TestIdTwoDelaySequence"), ("HUAWEI-ETHOAM-MIB", "hwY1731TestIdTwoDelayErrInfo"), ("HUAWEI-ETHOAM-MIB", "hwY1731TestIdTwoDelay"), ("HUAWEI-ETHOAM-MIB", "hwY1731TestIdTwoDelayVariation"), ("HUAWEI-ETHOAM-MIB", "hwY1731TestIdTwoDelayOnDemandStartTime"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwY1731TestIdTwoDelayStatTableGroup = hwY1731TestIdTwoDelayStatTableGroup.setStatus('current')
hwY1731TestIdStatisticResetTableGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 7, 2, 49)).setObjects(("HUAWEI-ETHOAM-MIB", "hwY1731TestIdResetStatisticType"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwY1731TestIdStatisticResetTableGroup = hwY1731TestIdStatisticResetTableGroup.setStatus('current')
hwY1731TestIdTwoDelaySummaryStatTableGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 7, 2, 50)).setObjects(("HUAWEI-ETHOAM-MIB", "hwY1731TestIdTwoDelayNbrSamples"), ("HUAWEI-ETHOAM-MIB", "hwY1731TestIdTwoDelayMax"), ("HUAWEI-ETHOAM-MIB", "hwY1731TestIdTwoDelayMin"), ("HUAWEI-ETHOAM-MIB", "hwY1731TestIdTwoDelayAve"), ("HUAWEI-ETHOAM-MIB", "hwY1731TestIdTwoDelayExceedUpLimitNum"), ("HUAWEI-ETHOAM-MIB", "hwY1731TestIdTwoDelayBelowLowLimitNum"), ("HUAWEI-ETHOAM-MIB", "hwY1731TestIdTwoDelayVariationNbrSamples"), ("HUAWEI-ETHOAM-MIB", "hwY1731TestIdTwoDelayVariationMax"), ("HUAWEI-ETHOAM-MIB", "hwY1731TestIdTwoDelayVariationMin"), ("HUAWEI-ETHOAM-MIB", "hwY1731TestIdTwoDelayVariationAve"), ("HUAWEI-ETHOAM-MIB", "hwY1731TestIdTwoDelayVarExceedUpLimitNum"), ("HUAWEI-ETHOAM-MIB", "hwY1731TestIdTwoDelayVarBelowLowLimitNum"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwY1731TestIdTwoDelaySummaryStatTableGroup = hwY1731TestIdTwoDelaySummaryStatTableGroup.setStatus('current')
hwY1731TestIdSingleSynLossSummaryStatTableGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 7, 2, 51)).setObjects(("HUAWEI-ETHOAM-MIB", "hwY1731TestIdSingleSynLossNbrSamples"), ("HUAWEI-ETHOAM-MIB", "hwY1731TestIdSingleSynSendRemote"), ("HUAWEI-ETHOAM-MIB", "hwY1731TestIdSingleSynRecvLocal"), ("HUAWEI-ETHOAM-MIB", "hwY1731TestIdSingleSynLossLocal"), ("HUAWEI-ETHOAM-MIB", "hwY1731TestIdSingleSynExceedLocalUpLimitNum"), ("HUAWEI-ETHOAM-MIB", "hwY1731TestIdSingleSynBelowLocalLowLimitNum"), ("HUAWEI-ETHOAM-MIB", "hwY1731TestIdSingleSynSendLocal"), ("HUAWEI-ETHOAM-MIB", "hwY1731TestIdSingleSynRecvRemote"), ("HUAWEI-ETHOAM-MIB", "hwY1731TestIdSingleSynLossRemote"), ("HUAWEI-ETHOAM-MIB", "hwY1731TestIdSingleSynExceedRemoteUpLimitNum"), ("HUAWEI-ETHOAM-MIB", "hwY1731TestIdSingleSynBelowRemoteLowLimitNum"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwY1731TestIdSingleSynLossSummaryStatTableGroup = hwY1731TestIdSingleSynLossSummaryStatTableGroup.setStatus('current')
hwY1731SingleLossSummaryStatTableGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 7, 2, 52)).setObjects(("HUAWEI-ETHOAM-MIB", "hwY1731SingleLossNbrSamples"), ("HUAWEI-ETHOAM-MIB", "hwY1731SingleLossSendRemote"), ("HUAWEI-ETHOAM-MIB", "hwY1731SingleLossRecvLocal"), ("HUAWEI-ETHOAM-MIB", "hwY1731SingleLossLossLocal"), ("HUAWEI-ETHOAM-MIB", "hwY1731SingleLossExceedLocalUpLimitNum"), ("HUAWEI-ETHOAM-MIB", "hwY1731SingleLossBelowLocallowLimitNum"), ("HUAWEI-ETHOAM-MIB", "hwY1731SingleLossSendLocal"), ("HUAWEI-ETHOAM-MIB", "hwY1731SingleLossRecvRemote"), ("HUAWEI-ETHOAM-MIB", "hwY1731SingleLossLossRemote"), ("HUAWEI-ETHOAM-MIB", "hwY1731SingleLossExceedRemoteUpLimitNum"), ("HUAWEI-ETHOAM-MIB", "hwY1731SingleLossBelowRemotelowLimitNum"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwY1731SingleLossSummaryStatTableGroup = hwY1731SingleLossSummaryStatTableGroup.setStatus('current')
hwY1731TestIdSingleSynEndedLMSendTableGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 7, 2, 53)).setObjects(("HUAWEI-ETHOAM-MIB", "hwY1731TestIdSingleSynEndedLMSendIsContinue"), ("HUAWEI-ETHOAM-MIB", "hwY1731TestIdSingleSynEndedLMSendInterval"), ("HUAWEI-ETHOAM-MIB", "hwY1731TestIdSingleSynEndedLMSendCount"), ("HUAWEI-ETHOAM-MIB", "hwY1731TestIdSingleSynEndedLMSendTimeOut"), ("HUAWEI-ETHOAM-MIB", "hwY1731TestIdSingleSynEndedLMSendRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwY1731TestIdSingleSynEndedLMSendTableGroup = hwY1731TestIdSingleSynEndedLMSendTableGroup.setStatus('current')
hwY1731TestIdSingleSynEndedLMReceiveTableGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 7, 2, 54)).setObjects(("HUAWEI-ETHOAM-MIB", "hwY1731TestIdSingleSynEndedLMReceiveTimeOut"), ("HUAWEI-ETHOAM-MIB", "hwY1731TestIdSingleSynEndedLMReceiveRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwY1731TestIdSingleSynEndedLMReceiveTableGroup = hwY1731TestIdSingleSynEndedLMReceiveTableGroup.setStatus('current')
hwY1731TestIdSingleLossSummaryStatTableGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 7, 2, 55)).setObjects(("HUAWEI-ETHOAM-MIB", "hwY1731TestIdSingleLossNbrSamples"), ("HUAWEI-ETHOAM-MIB", "hwY1731TestIdSingleLossSendRemote"), ("HUAWEI-ETHOAM-MIB", "hwY1731TestIdSingleLossRecvLocal"), ("HUAWEI-ETHOAM-MIB", "hwY1731TestIdSingleLossLossLocal"), ("HUAWEI-ETHOAM-MIB", "hwY1731TestIdSingleLossExceedLocalUpLimitNum"), ("HUAWEI-ETHOAM-MIB", "hwY1731TestIdSingleLossBelowLocallowLimitNum"), ("HUAWEI-ETHOAM-MIB", "hwY1731TestIdSingleLossSendLocal"), ("HUAWEI-ETHOAM-MIB", "hwY1731TestIdSingleLossRecvRemote"), ("HUAWEI-ETHOAM-MIB", "hwY1731TestIdSingleLossLossRemote"), ("HUAWEI-ETHOAM-MIB", "hwY1731TestIdSingleLossExceedRemoteUpLimitNum"), ("HUAWEI-ETHOAM-MIB", "hwY1731TestIdSingleLossBelowRemotelowLimitNum"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwY1731TestIdSingleLossSummaryStatTableGroup = hwY1731TestIdSingleLossSummaryStatTableGroup.setStatus('current')
hwY1731TestIdSingleSynLossStatTableGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 7, 2, 56)).setObjects(("HUAWEI-ETHOAM-MIB", "hwY1731TestIdSingleSynLossErrInfo"), ("HUAWEI-ETHOAM-MIB", "hwY1731TestIdSingleSynLossLocalSend"), ("HUAWEI-ETHOAM-MIB", "hwY1731TestIdSingleSynLossRemoteSend"), ("HUAWEI-ETHOAM-MIB", "hwY1731TestIdSingleSynLossLocalReceive"), ("HUAWEI-ETHOAM-MIB", "hwY1731TestIdSingleSynLossUnack"), ("HUAWEI-ETHOAM-MIB", "hwY1731TestIdSingleSynLossLossLocal"), ("HUAWEI-ETHOAM-MIB", "hwY1731TestIdSingleSynLossLocalRatio"), ("HUAWEI-ETHOAM-MIB", "hwY1731TestIdSingleSynLossLossRemote"), ("HUAWEI-ETHOAM-MIB", "hwY1731TestIdSingleSynLossRemoteRatio"), ("HUAWEI-ETHOAM-MIB", "hwY1731TestIdSingleSynLossOnDemandStartTime"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwY1731TestIdSingleSynLossStatTableGroup = hwY1731TestIdSingleSynLossStatTableGroup.setStatus('current')
hwEthOamY1731 = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8))
hwY1731ConfigObject = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 1))
hwY1731BaseConfigTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 1, 1), )
if mibBuilder.loadTexts: hwY1731BaseConfigTable.setStatus('current')
hwY1731BaseConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 1, 1, 1), ).setIndexNames((0, "HUAWEI-ETHOAM-MIB", "hwDot1agCfmMdIndex"), (0, "HUAWEI-ETHOAM-MIB", "hwDot1agCfmMaIndex"))
if mibBuilder.loadTexts: hwY1731BaseConfigEntry.setStatus('current')
hwY1731PwMeasureMode = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("invalid", 1), ("symmetry", 2), ("asymmetry", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwY1731PwMeasureMode.setStatus('current')
hwY1731OneDelayThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 1, 1, 1, 2), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwY1731OneDelayThreshold.setStatus('current')
hwY1731TwoDelayThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 1, 1, 1, 3), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwY1731TwoDelayThreshold.setStatus('current')
hwY1731ConfigTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 1, 2), )
if mibBuilder.loadTexts: hwY1731ConfigTable.setStatus('current')
hwY1731ConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 1, 2, 1), ).setIndexNames((0, "HUAWEI-ETHOAM-MIB", "hwDot1agCfmMdIndex"), (0, "HUAWEI-ETHOAM-MIB", "hwDot1agCfmMaIndex"), (0, "HUAWEI-ETHOAM-MIB", "hwY1731RemoteIp"), (0, "HUAWEI-ETHOAM-MIB", "hwY1731VcId"), (0, "HUAWEI-ETHOAM-MIB", "hwY1731MacAddress"), (0, "HUAWEI-ETHOAM-MIB", "hwY1731ResvIndex"))
if mibBuilder.loadTexts: hwY1731ConfigEntry.setStatus('current')
hwY1731RemoteIp = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 1, 2, 1, 1), IpAddress())
if mibBuilder.loadTexts: hwY1731RemoteIp.setStatus('current')
hwY1731VcId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 1, 2, 1, 2), Unsigned32())
if mibBuilder.loadTexts: hwY1731VcId.setStatus('current')
hwY1731MacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 1, 2, 1, 3), MacAddress())
if mibBuilder.loadTexts: hwY1731MacAddress.setStatus('current')
hwY1731ResvIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 1, 2, 1, 4), Integer32())
if mibBuilder.loadTexts: hwY1731ResvIndex.setStatus('current')
hwY1731ServiceType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 1, 2, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("vlan", 1), ("vsi", 2), ("vll", 3), ("unknown", 4), ("unbind", 5), ("ccc", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwY1731ServiceType.setStatus('current')
hwY1731SingleLossRecvEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 1, 2, 1, 6), EnabledStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwY1731SingleLossRecvEnable.setStatus('current')
hwY1731OneDelayRecvEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 1, 2, 1, 7), EnabledStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwY1731OneDelayRecvEnable.setStatus('current')
hwY1731OneDelayRecvEnableIsContinue = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 1, 2, 1, 8), TruthValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwY1731OneDelayRecvEnableIsContinue.setStatus('current')
hwY1731TwoDelayRecvEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 1, 2, 1, 9), EnabledStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwY1731TwoDelayRecvEnable.setStatus('current')
hwY1731SingleLossEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 1, 2, 1, 10), EnabledStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwY1731SingleLossEnable.setStatus('current')
hwY1731SingleLossIsContinue = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 1, 2, 1, 11), TruthValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwY1731SingleLossIsContinue.setStatus('current')
hwY1731SingleLossMepId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 1, 2, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 8191), ))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwY1731SingleLossMepId.setStatus('current')
hwY1731SingleLossDestIsMepId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 1, 2, 1, 13), TruthValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwY1731SingleLossDestIsMepId.setStatus('current')
hwY1731SingleLossDestMepId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 1, 2, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 8191), ))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwY1731SingleLossDestMepId.setStatus('current')
hwY1731SingleLossMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 1, 2, 1, 15), MacAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwY1731SingleLossMacAddress.setStatus('current')
hwY1731SingleLossInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 1, 2, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("invalid", 1), ("interval1s", 2), ("interval10s", 3), ("interval30s", 4)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwY1731SingleLossInterval.setStatus('current')
hwY1731SingleLossCount = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 1, 2, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 60), ))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwY1731SingleLossCount.setStatus('current')
hwY1731SingleLoss8021pValue = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 1, 2, 1, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 255), ))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwY1731SingleLoss8021pValue.setStatus('current')
hwY1731DualLossEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 1, 2, 1, 19), EnabledStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwY1731DualLossEnable.setStatus('current')
hwY1731DualLossMepId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 1, 2, 1, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 8191), ))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwY1731DualLossMepId.setStatus('current')
hwY1731DualLossDestMepId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 1, 2, 1, 21), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 8191), ))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwY1731DualLossDestMepId.setStatus('current')
hwY1731OneDelayEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 1, 2, 1, 22), EnabledStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwY1731OneDelayEnable.setStatus('current')
hwY1731OneDelayIsContinue = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 1, 2, 1, 23), TruthValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwY1731OneDelayIsContinue.setStatus('current')
hwY1731OneDelayMepId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 1, 2, 1, 24), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 8191), ))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwY1731OneDelayMepId.setStatus('current')
hwY1731OneDelayDestIsMepId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 1, 2, 1, 25), TruthValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwY1731OneDelayDestIsMepId.setStatus('current')
hwY1731OneDelayDestMepId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 1, 2, 1, 26), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 8191), ))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwY1731OneDelayDestMepId.setStatus('current')
hwY1731OneDelayMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 1, 2, 1, 27), MacAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwY1731OneDelayMacAddress.setStatus('current')
hwY1731OneDelayInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 1, 2, 1, 28), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("invalid", 1), ("interval1s", 2), ("interval10s", 3), ("interval30s", 4)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwY1731OneDelayInterval.setStatus('current')
hwY1731OneDelayCount = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 1, 2, 1, 29), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 60), ))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwY1731OneDelayCount.setStatus('current')
hwY1731OneDelay8021pValue = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 1, 2, 1, 30), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 255), ))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwY1731OneDelay8021pValue.setStatus('current')
hwY1731TwoDelayEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 1, 2, 1, 31), EnabledStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwY1731TwoDelayEnable.setStatus('current')
hwY1731TwoDelayIsContinue = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 1, 2, 1, 32), TruthValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwY1731TwoDelayIsContinue.setStatus('current')
hwY1731TwoDelayMepId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 1, 2, 1, 33), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 8191), ))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwY1731TwoDelayMepId.setStatus('current')
hwY1731TwoDelayDestIsMepId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 1, 2, 1, 34), TruthValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwY1731TwoDelayDestIsMepId.setStatus('current')
hwY1731TwoDelayDestMepId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 1, 2, 1, 35), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 8191), ))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwY1731TwoDelayDestMepId.setStatus('current')
hwY1731TwoDelayMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 1, 2, 1, 36), MacAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwY1731TwoDelayMacAddress.setStatus('current')
hwY1731TwoDelayInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 1, 2, 1, 37), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("invalid", 1), ("interval1s", 2), ("interval10s", 3), ("interval30s", 4)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwY1731TwoDelayInterval.setStatus('current')
hwY1731TwoDelayCount = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 1, 2, 1, 38), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 60), ))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwY1731TwoDelayCount.setStatus('current')
hwY1731TwoDelay8021pValue = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 1, 2, 1, 39), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 255), ))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwY1731TwoDelay8021pValue.setStatus('current')
hwY1731SingleLossRecv8021pValue = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 1, 2, 1, 40), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 255), ))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwY1731SingleLossRecv8021pValue.setStatus('current')
hwY1731OneDelayRecv8021pValue = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 1, 2, 1, 41), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 255), ))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwY1731OneDelayRecv8021pValue.setStatus('current')
hwY1731TwoDelayRecv8021pValue = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 1, 2, 1, 42), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 255), ))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwY1731TwoDelayRecv8021pValue.setStatus('current')
hwY1731SingleLossRecvMepId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 1, 2, 1, 43), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 8191), ))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwY1731SingleLossRecvMepId.setStatus('current')
hwY1731OneDelayRecvMepId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 1, 2, 1, 44), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 8191), ))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwY1731OneDelayRecvMepId.setStatus('current')
hwY1731TwoDelayRecvMepId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 1, 2, 1, 45), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 8191), ))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwY1731TwoDelayRecvMepId.setStatus('current')
hwY1731OneDelayPacketSize = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 1, 2, 1, 46), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(64, 1518), ))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwY1731OneDelayPacketSize.setStatus('current')
hwY1731TwoDelayPacketSize = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 1, 2, 1, 47), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(64, 1518), ))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwY1731TwoDelayPacketSize.setStatus('current')
hwY1731AisTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 1, 3), )
if mibBuilder.loadTexts: hwY1731AisTable.setStatus('current')
hwY1731AisEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 1, 3, 1), ).setIndexNames((0, "HUAWEI-ETHOAM-MIB", "hwDot1agCfmMdIndex"), (0, "HUAWEI-ETHOAM-MIB", "hwDot1agCfmMaIndex"))
if mibBuilder.loadTexts: hwY1731AisEntry.setStatus('current')
hwY1731AisEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 1, 3, 1, 1), EnabledStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwY1731AisEnable.setStatus('current')
hwY1731AisSendLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 1, 3, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(-1, -1), ValueRangeConstraint(0, 7), ))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwY1731AisSendLevel.setStatus('current')
hwY1731AisSendInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 1, 3, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("interval1s", 1), ("interval60s", 2))).clone('interval1s')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwY1731AisSendInterval.setStatus('current')
hwY1731AisSendPktStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 1, 3, 1, 4), EnabledStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwY1731AisSendPktStatus.setStatus('current')
hwY1731AisSuppressEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 1, 3, 1, 5), EnabledStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwY1731AisSuppressEnable.setStatus('current')
hwY1731AisSuppressStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 1, 3, 1, 6), EnabledStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwY1731AisSuppressStatus.setStatus('current')
hwY1731AisVlanTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 1, 4), )
if mibBuilder.loadTexts: hwY1731AisVlanTable.setStatus('current')
hwY1731AisVlanEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 1, 4, 1), ).setIndexNames((0, "HUAWEI-ETHOAM-MIB", "hwDot1agCfmMdIndex"), (0, "HUAWEI-ETHOAM-MIB", "hwDot1agCfmMaIndex"), (0, "HUAWEI-ETHOAM-MIB", "hwDot1agCfmMepIdentifier"))
if mibBuilder.loadTexts: hwY1731AisVlanEntry.setStatus('current')
hwY1731AisPeVlan = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 1, 4, 1, 1), VlanIdOrNone()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwY1731AisPeVlan.setStatus('current')
hwY1731AisLowCeVlan = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 1, 4, 1, 2), VlanIdOrNone()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwY1731AisLowCeVlan.setStatus('current')
hwY1731AisHighCeVlan = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 1, 4, 1, 3), VlanIdOrNone()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwY1731AisHighCeVlan.setStatus('current')
hwY1731AisLowDot1qVlan = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 1, 4, 1, 4), VlanIdOrNone()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwY1731AisLowDot1qVlan.setStatus('current')
hwY1731AisHighDot1qVlan = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 1, 4, 1, 5), VlanIdOrNone()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwY1731AisHighDot1qVlan.setStatus('current')
hwY1731AisRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 1, 4, 1, 99), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwY1731AisRowStatus.setStatus('current')
hwY1731AisLinkStatusTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 1, 5), )
if mibBuilder.loadTexts: hwY1731AisLinkStatusTable.setStatus('current')
hwY1731AisLinkStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 1, 5, 1), ).setIndexNames((0, "HUAWEI-ETHOAM-MIB", "hwDot1agCfmMdIndex"), (0, "HUAWEI-ETHOAM-MIB", "hwDot1agCfmMaIndex"), (0, "HUAWEI-ETHOAM-MIB", "hwY1731AisLinkStatusIfIndex"))
if mibBuilder.loadTexts: hwY1731AisLinkStatusEntry.setStatus('current')
hwY1731AisLinkStatusIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 1, 5, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: hwY1731AisLinkStatusIfIndex.setStatus('current')
hwY1731AisLinkRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 1, 5, 1, 20), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwY1731AisLinkRowStatus.setStatus('current')
hwY1731MulPingTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 1, 6), )
if mibBuilder.loadTexts: hwY1731MulPingTable.setStatus('current')
hwY1731MulPingEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 1, 6, 1), ).setIndexNames((0, "HUAWEI-ETHOAM-MIB", "hwY1731MulPingIndex"))
if mibBuilder.loadTexts: hwY1731MulPingEntry.setStatus('current')
hwY1731MulPingIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 1, 6, 1, 1), Unsigned32())
if mibBuilder.loadTexts: hwY1731MulPingIndex.setStatus('current')
hwY1731MulPingState = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 1, 6, 1, 2), EnabledStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwY1731MulPingState.setStatus('current')
hwY1731MulPingMdName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 1, 6, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 43))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwY1731MulPingMdName.setStatus('current')
hwY1731MulPingMaName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 1, 6, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 43))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwY1731MulPingMaName.setStatus('current')
hwY1731MulPingMepId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 1, 6, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 8191), ))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwY1731MulPingMepId.setStatus('current')
hwY1731MulPingTimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 1, 6, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)).clone(5000)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwY1731MulPingTimeout.setStatus('current')
hwY1731MulPingCount = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 1, 6, 1, 7), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295)).clone(3)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwY1731MulPingCount.setStatus('current')
hwY1731MulPingPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 1, 6, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 7), ValueRangeConstraint(255, 255), )).clone(255)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwY1731MulPingPriority.setStatus('current')
hwY1731MulPingSendPacketNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 1, 6, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwY1731MulPingSendPacketNum.setStatus('current')
hwY1731MulPingRecvPacketNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 1, 6, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwY1731MulPingRecvPacketNum.setStatus('current')
hwY1731MulPingRecvTimeDelayMin = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 1, 6, 1, 11), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwY1731MulPingRecvTimeDelayMin.setStatus('current')
hwY1731MulPingRecvTimeDelayMax = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 1, 6, 1, 12), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwY1731MulPingRecvTimeDelayMax.setStatus('current')
hwY1731MulPingRecvTimeDelayAvg = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 1, 6, 1, 13), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwY1731MulPingRecvTimeDelayAvg.setStatus('current')
hwY1731MulPingRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 1, 6, 1, 99), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwY1731MulPingRowStatus.setStatus('current')
hwY1731MulPingReplyTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 1, 7), )
if mibBuilder.loadTexts: hwY1731MulPingReplyTable.setStatus('current')
hwY1731MulPingReplyEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 1, 7, 1), ).setIndexNames((0, "HUAWEI-ETHOAM-MIB", "hwY1731MulPingReplySeqNumber"), (0, "HUAWEI-ETHOAM-MIB", "hwY1731MulPingReplyOrder"))
if mibBuilder.loadTexts: hwY1731MulPingReplyEntry.setStatus('current')
hwY1731MulPingReplySeqNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 1, 7, 1, 1), Unsigned32())
if mibBuilder.loadTexts: hwY1731MulPingReplySeqNumber.setStatus('current')
hwY1731MulPingReplyOrder = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 1, 7, 1, 2), Unsigned32())
if mibBuilder.loadTexts: hwY1731MulPingReplyOrder.setStatus('current')
hwY1731MulPingReplyMepId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 1, 7, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 8191), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwY1731MulPingReplyMepId.setStatus('current')
hwY1731MulPingReplyMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 1, 7, 1, 4), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwY1731MulPingReplyMacAddress.setStatus('current')
hwY1731MulPingReplyTransTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 1, 7, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwY1731MulPingReplyTransTime.setStatus('current')
hwY1731AisVlanConfigTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 1, 8), )
if mibBuilder.loadTexts: hwY1731AisVlanConfigTable.setStatus('current')
hwY1731AisVlanConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 1, 8, 1), ).setIndexNames((0, "HUAWEI-ETHOAM-MIB", "hwDot1agCfmMdIndex"), (0, "HUAWEI-ETHOAM-MIB", "hwDot1agCfmMaIndex"), (0, "HUAWEI-ETHOAM-MIB", "hwDot1agCfmMepIdentifier"), (0, "HUAWEI-ETHOAM-MIB", "hwY1731AisConfigPeVlan"))
if mibBuilder.loadTexts: hwY1731AisVlanConfigEntry.setStatus('current')
hwY1731AisConfigPeVlan = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 1, 8, 1, 1), VlanIdOrNone())
if mibBuilder.loadTexts: hwY1731AisConfigPeVlan.setStatus('current')
hwY1731AisConfigVlanListLow = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 1, 8, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(256, 256)).setFixedLength(256)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwY1731AisConfigVlanListLow.setStatus('current')
hwY1731AisConfigVlanListHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 1, 8, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(256, 256)).setFixedLength(256)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwY1731AisConfigVlanListHigh.setStatus('current')
hwY1731AisVlanConfigRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 1, 8, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwY1731AisVlanConfigRowStatus.setStatus('current')
hwY1731TestIdTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 1, 9), )
if mibBuilder.loadTexts: hwY1731TestIdTable.setStatus('current')
hwY1731TestIdEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 1, 9, 1), ).setIndexNames((0, "HUAWEI-ETHOAM-MIB", "hwY1731TestIdentifier"))
if mibBuilder.loadTexts: hwY1731TestIdEntry.setStatus('current')
hwY1731TestIdentifier = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 1, 9, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwY1731TestIdentifier.setStatus('current')
hwY1731TestIdMdName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 1, 9, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 43))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwY1731TestIdMdName.setStatus('current')
hwY1731TestIdMaName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 1, 9, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 43))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwY1731TestIdMaName.setStatus('current')
hwY1731TestIdLocalMepId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 1, 9, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 8191))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwY1731TestIdLocalMepId.setStatus('current')
hwY1731TestIdDestIsMepId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 1, 9, 1, 5), TruthValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwY1731TestIdDestIsMepId.setStatus('current')
hwY1731TestIdDestMepId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 1, 9, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 8191), ))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwY1731TestIdDestMepId.setStatus('current')
hwY1731TestIdDestMepMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 1, 9, 1, 7), MacAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwY1731TestIdDestMepMacAddress.setStatus('current')
hwY1731TestIdOnwardMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 1, 9, 1, 8), MacAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwY1731TestIdOnwardMacAddress.setStatus('current')
hwY1731TestIdBackwardMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 1, 9, 1, 9), MacAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwY1731TestIdBackwardMacAddress.setStatus('current')
hwY1731TestIdIsUpdateOnwardMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 1, 9, 1, 10), TruthValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwY1731TestIdIsUpdateOnwardMacAddress.setStatus('current')
hwY1731TestIdIsUpdateBackwardMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 1, 9, 1, 11), TruthValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwY1731TestIdIsUpdateBackwardMacAddress.setStatus('current')
hwY1731TestId8021pValue = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 1, 9, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 7), ValueRangeConstraint(255, 255), ))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwY1731TestId8021pValue.setStatus('current')
hwY1731TestIdUplink8021p = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 1, 9, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 7), ValueRangeConstraint(255, 255), ))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwY1731TestIdUplink8021p.setStatus('current')
hwY1731TestIdDownlink8021p = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 1, 9, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 7), ValueRangeConstraint(255, 255), ))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwY1731TestIdDownlink8021p.setStatus('current')
hwY1731TestIdDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 1, 9, 1, 15), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 63))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwY1731TestIdDescription.setStatus('current')
hwY1731TestIdIsRecordFile = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 1, 9, 1, 16), TruthValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwY1731TestIdIsRecordFile.setStatus('current')
hwY1731TestIdRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 1, 9, 1, 99), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwY1731TestIdRowStatus.setStatus('current')
hwY1731TestIdQueuePriority = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 1, 9, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9))).clone(namedValues=NamedValues(("invalid", 1), ("af1", 2), ("af2", 3), ("af3", 4), ("af4", 5), ("be", 6), ("cs6", 7), ("cs7", 8), ("ef", 9)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwY1731TestIdQueuePriority.setStatus('current')
hwY1731TestIdSingleEndedLMSendTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 1, 10), )
if mibBuilder.loadTexts: hwY1731TestIdSingleEndedLMSendTable.setStatus('current')
hwY1731TestIdSingleEndedLMSendEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 1, 10, 1), ).setIndexNames((0, "HUAWEI-ETHOAM-MIB", "hwY1731TestIdentifier"))
if mibBuilder.loadTexts: hwY1731TestIdSingleEndedLMSendEntry.setStatus('current')
hwY1731TestIdSingleEndedLMSendIsContinue = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 1, 10, 1, 1), TruthValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwY1731TestIdSingleEndedLMSendIsContinue.setStatus('current')
hwY1731TestIdSingleEndedLMSendInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 1, 10, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("invalid", 1), ("interval1s", 2), ("interval10s", 3), ("interval30s", 4), ("interval60s", 5)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwY1731TestIdSingleEndedLMSendInterval.setStatus('current')
hwY1731TestIdSingleEndedLMSendCount = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 1, 10, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 60), ))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwY1731TestIdSingleEndedLMSendCount.setStatus('current')
hwY1731TestIdSingleEndedLMSendRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 1, 10, 1, 99), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwY1731TestIdSingleEndedLMSendRowStatus.setStatus('current')
hwY1731TestIdSingleEndedLMReceiveTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 1, 11), )
if mibBuilder.loadTexts: hwY1731TestIdSingleEndedLMReceiveTable.setStatus('current')
hwY1731TestIdSingleEndedLMReceiveEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 1, 11, 1), ).setIndexNames((0, "HUAWEI-ETHOAM-MIB", "hwY1731TestIdentifier"))
if mibBuilder.loadTexts: hwY1731TestIdSingleEndedLMReceiveEntry.setStatus('current')
hwY1731TestIdSingleEndedLMReceiveRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 1, 11, 1, 99), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwY1731TestIdSingleEndedLMReceiveRowStatus.setStatus('current')
hwY1731TestIdOneWayDMSendTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 1, 12), )
if mibBuilder.loadTexts: hwY1731TestIdOneWayDMSendTable.setStatus('current')
hwY1731TestIdOneWayDMSendEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 1, 12, 1), ).setIndexNames((0, "HUAWEI-ETHOAM-MIB", "hwY1731TestIdentifier"))
if mibBuilder.loadTexts: hwY1731TestIdOneWayDMSendEntry.setStatus('current')
hwY1731TestIdOneWayDMSendIsContinue = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 1, 12, 1, 1), TruthValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwY1731TestIdOneWayDMSendIsContinue.setStatus('current')
hwY1731TestIdOneWayDMSendInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 1, 12, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("invalid", 1), ("interval1s", 2), ("interval10s", 3), ("interval30s", 4), ("interval60s", 5)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwY1731TestIdOneWayDMSendInterval.setStatus('current')
hwY1731TestIdOneWayDMSendCount = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 1, 12, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 60), ))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwY1731TestIdOneWayDMSendCount.setStatus('current')
hwY1731TestIdOneWayDMSendPacketSize = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 1, 12, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(64, 1518), ))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwY1731TestIdOneWayDMSendPacketSize.setStatus('current')
hwY1731TestIdOneWayDMSendRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 1, 12, 1, 99), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwY1731TestIdOneWayDMSendRowStatus.setStatus('current')
hwY1731TestIdOneWayDMReceiveTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 1, 13), )
if mibBuilder.loadTexts: hwY1731TestIdOneWayDMReceiveTable.setStatus('current')
hwY1731TestIdOneWayDMReceiveEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 1, 13, 1), ).setIndexNames((0, "HUAWEI-ETHOAM-MIB", "hwY1731TestIdentifier"))
if mibBuilder.loadTexts: hwY1731TestIdOneWayDMReceiveEntry.setStatus('current')
hwY1731TestIdOneWayDMReceiveIsContinue = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 1, 13, 1, 1), TruthValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwY1731TestIdOneWayDMReceiveIsContinue.setStatus('current')
hwY1731TestIdOneWayDMReceiveRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 1, 13, 1, 99), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwY1731TestIdOneWayDMReceiveRowStatus.setStatus('current')
hwY1731TestIdTwoWayDMSendTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 1, 14), )
if mibBuilder.loadTexts: hwY1731TestIdTwoWayDMSendTable.setStatus('current')
hwY1731TestIdTwoWayDMSendEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 1, 14, 1), ).setIndexNames((0, "HUAWEI-ETHOAM-MIB", "hwY1731TestIdentifier"))
if mibBuilder.loadTexts: hwY1731TestIdTwoWayDMSendEntry.setStatus('current')
hwY1731TestIdTwoWayDMSendIsContinue = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 1, 14, 1, 1), TruthValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwY1731TestIdTwoWayDMSendIsContinue.setStatus('current')
hwY1731TestIdTwoWayDMSendInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 1, 14, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("invalid", 1), ("interval1s", 2), ("interval10s", 3), ("interval30s", 4), ("interval60s", 5)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwY1731TestIdTwoWayDMSendInterval.setStatus('current')
hwY1731TestIdTwoWayDMSendCount = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 1, 14, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 60), ))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwY1731TestIdTwoWayDMSendCount.setStatus('current')
hwY1731TestIdTwoWayDMSendPacketSize = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 1, 14, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(64, 1518), ))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwY1731TestIdTwoWayDMSendPacketSize.setStatus('current')
hwY1731TestIdTwoWayDMSendRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 1, 14, 1, 99), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwY1731TestIdTwoWayDMSendRowStatus.setStatus('current')
hwY1731TestIdTwoWayDMReceiveTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 1, 15), )
if mibBuilder.loadTexts: hwY1731TestIdTwoWayDMReceiveTable.setStatus('current')
hwY1731TestIdTwoWayDMReceiveEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 1, 15, 1), ).setIndexNames((0, "HUAWEI-ETHOAM-MIB", "hwY1731TestIdentifier"))
if mibBuilder.loadTexts: hwY1731TestIdTwoWayDMReceiveEntry.setStatus('current')
hwY1731TestIdTwoWayDMReceiveRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 1, 15, 1, 99), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwY1731TestIdTwoWayDMReceiveRowStatus.setStatus('current')
hwY1731TestIdSingleSynEndedLMSendTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 1, 16), )
if mibBuilder.loadTexts: hwY1731TestIdSingleSynEndedLMSendTable.setStatus('current')
hwY1731TestIdSingleSynEndedLMSendEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 1, 16, 1), ).setIndexNames((0, "HUAWEI-ETHOAM-MIB", "hwY1731TestIdentifier"))
if mibBuilder.loadTexts: hwY1731TestIdSingleSynEndedLMSendEntry.setStatus('current')
hwY1731TestIdSingleSynEndedLMSendIsContinue = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 1, 16, 1, 1), TruthValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwY1731TestIdSingleSynEndedLMSendIsContinue.setStatus('current')
hwY1731TestIdSingleSynEndedLMSendInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 1, 16, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("invalid", 1), ("interval1s", 2), ("interval10s", 3), ("interval3Dot3ms", 4), ("interval10ms", 5), ("interval100ms", 6)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwY1731TestIdSingleSynEndedLMSendInterval.setStatus('current')
hwY1731TestIdSingleSynEndedLMSendCount = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 1, 16, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 1000), ))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwY1731TestIdSingleSynEndedLMSendCount.setStatus('current')
hwY1731TestIdSingleSynEndedLMSendTimeOut = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 1, 16, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 10), ))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwY1731TestIdSingleSynEndedLMSendTimeOut.setStatus('current')
hwY1731TestIdSingleSynEndedLMSendRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 1, 16, 1, 5), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwY1731TestIdSingleSynEndedLMSendRowStatus.setStatus('current')
hwY1731TestIdSingleSynEndedLMReceiveTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 1, 17), )
if mibBuilder.loadTexts: hwY1731TestIdSingleSynEndedLMReceiveTable.setStatus('current')
hwY1731TestIdSingleSynEndedLMReceiveEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 1, 17, 1), ).setIndexNames((0, "HUAWEI-ETHOAM-MIB", "hwY1731TestIdentifier"))
if mibBuilder.loadTexts: hwY1731TestIdSingleSynEndedLMReceiveEntry.setStatus('current')
hwY1731TestIdSingleSynEndedLMReceiveTimeOut = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 1, 17, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(10, 300), ))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwY1731TestIdSingleSynEndedLMReceiveTimeOut.setStatus('current')
hwY1731TestIdSingleSynEndedLMReceiveRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 1, 17, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwY1731TestIdSingleSynEndedLMReceiveRowStatus.setStatus('current')
hwY1731StatisticObject = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 2))
hwY1731ResetStatisticTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 2, 1), )
if mibBuilder.loadTexts: hwY1731ResetStatisticTable.setStatus('current')
hwY1731ResetStatisticEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 2, 1, 1), ).setIndexNames((0, "HUAWEI-ETHOAM-MIB", "hwDot1agCfmMdIndex"), (0, "HUAWEI-ETHOAM-MIB", "hwDot1agCfmMaIndex"), (0, "HUAWEI-ETHOAM-MIB", "hwY1731RemoteIp"), (0, "HUAWEI-ETHOAM-MIB", "hwY1731VcId"), (0, "HUAWEI-ETHOAM-MIB", "hwY1731MacAddress"), (0, "HUAWEI-ETHOAM-MIB", "hwY1731ResvIndex"))
if mibBuilder.loadTexts: hwY1731ResetStatisticEntry.setStatus('current')
hwY1731ResetStatisticType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 2, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("invalid", 1), ("singleloss", 2), ("dualloss", 3), ("onewaydelay", 4), ("twowaydelay", 5)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwY1731ResetStatisticType.setStatus('current')
hwY1731ResetStatistic8021pValue = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 2, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 255), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwY1731ResetStatistic8021pValue.setStatus('current')
hwY1731StatisticTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 2, 2), )
if mibBuilder.loadTexts: hwY1731StatisticTable.setStatus('current')
hwY1731StatisticEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 2, 2, 1), ).setIndexNames((0, "HUAWEI-ETHOAM-MIB", "hwDot1agCfmMdIndex"), (0, "HUAWEI-ETHOAM-MIB", "hwDot1agCfmMaIndex"), (0, "HUAWEI-ETHOAM-MIB", "hwY1731RemoteIp"), (0, "HUAWEI-ETHOAM-MIB", "hwY1731VcId"), (0, "HUAWEI-ETHOAM-MIB", "hwY1731MacAddress"), (0, "HUAWEI-ETHOAM-MIB", "hwY1731ResvIndex"))
if mibBuilder.loadTexts: hwY1731StatisticEntry.setStatus('current')
hwY1731SingleLossStatisticGatherInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 2, 2, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("invalid", 1), ("interval1000ms", 2), ("interval10000ms", 3), ("interval30000ms", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwY1731SingleLossStatisticGatherInterval.setStatus('current')
hwY1731SingleLossLocalStatistic = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 2, 2, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 1024))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwY1731SingleLossLocalStatistic.setStatus('current')
hwY1731SingleLossLocalRatio = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 2, 2, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 1024))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwY1731SingleLossLocalRatio.setStatus('current')
hwY1731SingleLossLocalRatioMax = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 2, 2, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwY1731SingleLossLocalRatioMax.setStatus('current')
hwY1731SingleLossLocalRatioMin = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 2, 2, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwY1731SingleLossLocalRatioMin.setStatus('current')
hwY1731SingleLossLocalRatioAvg = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 2, 2, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwY1731SingleLossLocalRatioAvg.setStatus('current')
hwY1731SingleLossRemoteStatistic = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 2, 2, 1, 7), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 1024))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwY1731SingleLossRemoteStatistic.setStatus('current')
hwY1731SingleLossRemoteRatio = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 2, 2, 1, 8), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 1024))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwY1731SingleLossRemoteRatio.setStatus('current')
hwY1731SingleLossRemoteRatioMax = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 2, 2, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwY1731SingleLossRemoteRatioMax.setStatus('current')
hwY1731SingleLossRemoteRatioMin = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 2, 2, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwY1731SingleLossRemoteRatioMin.setStatus('current')
hwY1731SingleLossRemoteRatioAvg = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 2, 2, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwY1731SingleLossRemoteRatioAvg.setStatus('current')
hwY1731OneDelayStatistic = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 2, 2, 1, 12), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 1024))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwY1731OneDelayStatistic.setStatus('current')
hwY1731OneDelayVariation = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 2, 2, 1, 13), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 1024))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwY1731OneDelayVariation.setStatus('current')
hwY1731OneDelayMax = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 2, 2, 1, 14), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwY1731OneDelayMax.setStatus('current')
hwY1731OneDelayMin = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 2, 2, 1, 15), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwY1731OneDelayMin.setStatus('current')
hwY1731OneDelayAvg = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 2, 2, 1, 16), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwY1731OneDelayAvg.setStatus('current')
hwY1731TwoDelayStatistic = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 2, 2, 1, 17), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 1024))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwY1731TwoDelayStatistic.setStatus('current')
hwY1731TwoDelayVariation = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 2, 2, 1, 18), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 1024))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwY1731TwoDelayVariation.setStatus('current')
hwY1731TwoDelayMax = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 2, 2, 1, 19), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwY1731TwoDelayMax.setStatus('current')
hwY1731TwoDelayMin = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 2, 2, 1, 20), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwY1731TwoDelayMin.setStatus('current')
hwY1731TwoDelayAvg = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 2, 2, 1, 21), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwY1731TwoDelayAvg.setStatus('current')
hwY1731SingleLossLocalMax = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 2, 2, 1, 22), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwY1731SingleLossLocalMax.setStatus('current')
hwY1731SingleLossLocalMin = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 2, 2, 1, 23), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwY1731SingleLossLocalMin.setStatus('current')
hwY1731SingleLossLocalAvg = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 2, 2, 1, 24), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwY1731SingleLossLocalAvg.setStatus('current')
hwY1731SingleLossRemoteMax = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 2, 2, 1, 25), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwY1731SingleLossRemoteMax.setStatus('current')
hwY1731SingleLossRemoteMin = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 2, 2, 1, 26), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwY1731SingleLossRemoteMin.setStatus('current')
hwY1731SingleLossRemoteAvg = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 2, 2, 1, 27), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwY1731SingleLossRemoteAvg.setStatus('current')
hwY1731OneDelayStatisticMax = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 2, 2, 1, 28), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwY1731OneDelayStatisticMax.setStatus('current')
hwY1731OneDelayStatisticMin = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 2, 2, 1, 29), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwY1731OneDelayStatisticMin.setStatus('current')
hwY1731OneDelayStatisticAvg = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 2, 2, 1, 30), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwY1731OneDelayStatisticAvg.setStatus('current')
hwY1731TwoDelayStatisticMax = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 2, 2, 1, 31), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwY1731TwoDelayStatisticMax.setStatus('current')
hwY1731TwoDelayStatisticMin = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 2, 2, 1, 32), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwY1731TwoDelayStatisticMin.setStatus('current')
hwY1731TwoDelayStatisticAvg = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 2, 2, 1, 33), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwY1731TwoDelayStatisticAvg.setStatus('current')
hwY1731TwoDelayUnresponsivePacketCount = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 2, 2, 1, 34), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwY1731TwoDelayUnresponsivePacketCount.setStatus('current')
hwY1731SingleLossStatistic8021pValue = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 2, 2, 1, 35), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 7), ValueRangeConstraint(255, 255), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwY1731SingleLossStatistic8021pValue.setStatus('current')
hwY1731OneDelayStatistic8021pValue = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 2, 2, 1, 36), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 7), ValueRangeConstraint(255, 255), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwY1731OneDelayStatistic8021pValue.setStatus('current')
hwY1731TwoDelayStatistic8021pValue = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 2, 2, 1, 37), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 7), ValueRangeConstraint(255, 255), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwY1731TwoDelayStatistic8021pValue.setStatus('current')
hwY1731OneDelayOnDemandStartTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 2, 2, 1, 38), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwY1731OneDelayOnDemandStartTime.setStatus('current')
hwY1731TwoDelayOnDemandStartTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 2, 2, 1, 39), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwY1731TwoDelayOnDemandStartTime.setStatus('current')
hwY1731SingleLossOnDemandStartTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 2, 2, 1, 40), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwY1731SingleLossOnDemandStartTime.setStatus('current')
hwCfmVlanOneDelayTrapLogTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 2, 3), )
if mibBuilder.loadTexts: hwCfmVlanOneDelayTrapLogTable.setStatus('current')
hwCfmVlanOneDelayTrapLogEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 2, 3, 1), ).setIndexNames((0, "HUAWEI-ETHOAM-MIB", "hwDot1agCfmMdIndex"), (0, "HUAWEI-ETHOAM-MIB", "hwDot1agCfmMaIndex"))
if mibBuilder.loadTexts: hwCfmVlanOneDelayTrapLogEntry.setStatus('current')
hwCfmOneDelayTrapLogMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 2, 3, 1, 1), MacAddress()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hwCfmOneDelayTrapLogMacAddress.setStatus('current')
hwCfmVlanOneDelayTrapLogTimestamp = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 2, 3, 1, 2), TimeStamp()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hwCfmVlanOneDelayTrapLogTimestamp.setStatus('current')
hwCfmVlanOneDelayTrapLogDelayValue = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 2, 3, 1, 3), Unsigned32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hwCfmVlanOneDelayTrapLogDelayValue.setStatus('current')
hwCfmVlanOneDelayTrapLogThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 2, 3, 1, 4), Unsigned32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hwCfmVlanOneDelayTrapLogThreshold.setStatus('current')
hwCfmVlanOneDelayTrapLogDelayValueHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 2, 3, 1, 5), Unsigned32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hwCfmVlanOneDelayTrapLogDelayValueHigh.setStatus('current')
hwCfmVlanOneDelayTrapLogDelayValueLow = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 2, 3, 1, 6), Unsigned32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hwCfmVlanOneDelayTrapLogDelayValueLow.setStatus('current')
hwCfmVlanOneDelayRcoverTrapLogTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 2, 4), )
if mibBuilder.loadTexts: hwCfmVlanOneDelayRcoverTrapLogTable.setStatus('current')
hwCfmVlanOneDelayRcoverTrapLogEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 2, 4, 1), ).setIndexNames((0, "HUAWEI-ETHOAM-MIB", "hwDot1agCfmMdIndex"), (0, "HUAWEI-ETHOAM-MIB", "hwDot1agCfmMaIndex"))
if mibBuilder.loadTexts: hwCfmVlanOneDelayRcoverTrapLogEntry.setStatus('current')
hwCfmOneDelayRecoveryTrapMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 2, 4, 1, 1), MacAddress()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hwCfmOneDelayRecoveryTrapMacAddress.setStatus('current')
hwCfmVlanOneDelayRecoveryTrapLogTimestamp = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 2, 4, 1, 2), TimeStamp()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hwCfmVlanOneDelayRecoveryTrapLogTimestamp.setStatus('current')
hwCfmVlanOneDelayRecoveryTrapLogDelayValue = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 2, 4, 1, 3), Unsigned32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hwCfmVlanOneDelayRecoveryTrapLogDelayValue.setStatus('current')
hwCfmVlanOneDelayRecoveryTrapLogThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 2, 4, 1, 4), Unsigned32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hwCfmVlanOneDelayRecoveryTrapLogThreshold.setStatus('current')
hwCfmVlanOneDelayRecoveryTrapLogDelayValueHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 2, 4, 1, 5), Unsigned32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hwCfmVlanOneDelayRecoveryTrapLogDelayValueHigh.setStatus('current')
hwCfmVlanOneDelayRecoveryTrapLogDelayValueLow = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 2, 4, 1, 6), Unsigned32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hwCfmVlanOneDelayRecoveryTrapLogDelayValueLow.setStatus('current')
hwCfmVlanTwoDelayTrapLogTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 2, 5), )
if mibBuilder.loadTexts: hwCfmVlanTwoDelayTrapLogTable.setStatus('current')
hwCfmVlanTwoDelayTrapLogEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 2, 5, 1), ).setIndexNames((0, "HUAWEI-ETHOAM-MIB", "hwDot1agCfmMdIndex"), (0, "HUAWEI-ETHOAM-MIB", "hwDot1agCfmMaIndex"))
if mibBuilder.loadTexts: hwCfmVlanTwoDelayTrapLogEntry.setStatus('current')
hwCfmTwoDelayTrapMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 2, 5, 1, 1), MacAddress()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hwCfmTwoDelayTrapMacAddress.setStatus('current')
hwCfmVlanTwoDelayTrapLogTimestamp = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 2, 5, 1, 2), TimeStamp()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hwCfmVlanTwoDelayTrapLogTimestamp.setStatus('current')
hwCfmVlanTwoDelayTrapLogDelayValue = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 2, 5, 1, 3), Unsigned32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hwCfmVlanTwoDelayTrapLogDelayValue.setStatus('current')
hwCfmVlanTwoDelayTrapLogThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 2, 5, 1, 4), Unsigned32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hwCfmVlanTwoDelayTrapLogThreshold.setStatus('current')
hwCfmVlanTwoDelayTrapLogDelayValueHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 2, 5, 1, 5), Unsigned32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hwCfmVlanTwoDelayTrapLogDelayValueHigh.setStatus('current')
hwCfmVlanTwoDelayTrapLogDelayValueLow = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 2, 5, 1, 6), Unsigned32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hwCfmVlanTwoDelayTrapLogDelayValueLow.setStatus('current')
hwCfmVlanTwoDelayRcoverTrapLogTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 2, 6), )
if mibBuilder.loadTexts: hwCfmVlanTwoDelayRcoverTrapLogTable.setStatus('current')
hwCfmVlanTwoDelayRcoverTrapLogEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 2, 6, 1), ).setIndexNames((0, "HUAWEI-ETHOAM-MIB", "hwDot1agCfmMdIndex"), (0, "HUAWEI-ETHOAM-MIB", "hwDot1agCfmMaIndex"))
if mibBuilder.loadTexts: hwCfmVlanTwoDelayRcoverTrapLogEntry.setStatus('current')
hwCfmTwoDelayRecoveryTrapMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 2, 6, 1, 1), MacAddress()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hwCfmTwoDelayRecoveryTrapMacAddress.setStatus('current')
hwCfmVlanTwoDelayRecoveryTrapLogTimestamp = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 2, 6, 1, 2), TimeStamp()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hwCfmVlanTwoDelayRecoveryTrapLogTimestamp.setStatus('current')
hwCfmVlanTwoDelayRecoveryTrapLogDelayValue = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 2, 6, 1, 3), Unsigned32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hwCfmVlanTwoDelayRecoveryTrapLogDelayValue.setStatus('current')
hwCfmVlanTwoDelayRecoveryTrapLogThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 2, 6, 1, 4), Unsigned32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hwCfmVlanTwoDelayRecoveryTrapLogThreshold.setStatus('current')
hwCfmVlanTwoDelayRecoveryTrapLogDelayValueHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 2, 6, 1, 5), Unsigned32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hwCfmVlanTwoDelayRecoveryTrapLogDelayValueHigh.setStatus('current')
hwCfmVlanTwoDelayRecoveryTrapLogDelayValueLow = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 2, 6, 1, 6), Unsigned32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hwCfmVlanTwoDelayRecoveryTrapLogDelayValueLow.setStatus('current')
hwY1731StatisticTrapLogTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 2, 7), )
if mibBuilder.loadTexts: hwY1731StatisticTrapLogTable.setStatus('current')
hwY1731StatisticTrapLogEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 2, 7, 1), ).setIndexNames((0, "HUAWEI-ETHOAM-MIB", "hwDot1agCfmMdIndex"), (0, "HUAWEI-ETHOAM-MIB", "hwDot1agCfmMaIndex"), (0, "HUAWEI-ETHOAM-MIB", "hwDot1agCfmMepIdentifier"), (0, "HUAWEI-ETHOAM-MIB", "hwY1731StatisticTrapLogType"), (0, "HUAWEI-ETHOAM-MIB", "hwY1731StatisticTrapLogMacAddress"), (0, "HUAWEI-ETHOAM-MIB", "hwY1731StatisticTrapLog8021pPriority"))
if mibBuilder.loadTexts: hwY1731StatisticTrapLogEntry.setStatus('current')
hwY1731StatisticTrapLogType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 2, 7, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("onedelay", 1), ("twodelay", 2), ("onedelayvariation", 3), ("twedelayvariation", 4), ("singlelosslocalratio", 5), ("singlelossremoteratio", 6), ("duallosslocalratio", 7), ("duallossremoteratio", 8)))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hwY1731StatisticTrapLogType.setStatus('current')
hwY1731StatisticTrapLogMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 2, 7, 1, 2), MacAddress()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hwY1731StatisticTrapLogMacAddress.setStatus('current')
hwY1731StatisticTrapLog8021pPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 2, 7, 1, 3), Integer32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hwY1731StatisticTrapLog8021pPriority.setStatus('current')
hwY1731StatisticTrapLogValue = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 2, 7, 1, 4), Unsigned32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hwY1731StatisticTrapLogValue.setStatus('current')
hwY1731StatisticTrapLogUpperLimitThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 2, 7, 1, 5), Unsigned32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hwY1731StatisticTrapLogUpperLimitThreshold.setStatus('current')
hwY1731StatisticTrapLogLowerLimitThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 2, 7, 1, 6), Unsigned32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hwY1731StatisticTrapLogLowerLimitThreshold.setStatus('current')
hwY1731StatisticTrapLogValueHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 2, 7, 1, 7), Unsigned32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hwY1731StatisticTrapLogValueHigh.setStatus('current')
hwY1731StatisticTrapLogValueLow = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 2, 7, 1, 8), Unsigned32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hwY1731StatisticTrapLogValueLow.setStatus('current')
hwY1731TestIdSingleLossStatTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 2, 8), )
if mibBuilder.loadTexts: hwY1731TestIdSingleLossStatTable.setStatus('current')
hwY1731TestIdSingleLossStatEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 2, 8, 1), ).setIndexNames((0, "HUAWEI-ETHOAM-MIB", "hwY1731TestIdentifier"), (0, "HUAWEI-ETHOAM-MIB", "hwY1731TestIdSingleLossSequence"))
if mibBuilder.loadTexts: hwY1731TestIdSingleLossStatEntry.setStatus('current')
hwY1731TestIdSingleLossSequence = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 2, 8, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwY1731TestIdSingleLossSequence.setStatus('current')
hwY1731TestIdSingleLossErrInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 2, 8, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwY1731TestIdSingleLossErrInfo.setStatus('current')
hwY1731TestIdSingleLossLocal = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 2, 8, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwY1731TestIdSingleLossLocal.setStatus('current')
hwY1731TestIdSingleLossLocalRatio = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 2, 8, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwY1731TestIdSingleLossLocalRatio.setStatus('current')
hwY1731TestIdSingleLossRemote = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 2, 8, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwY1731TestIdSingleLossRemote.setStatus('current')
hwY1731TestIdSingleLossRemoteRatio = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 2, 8, 1, 6), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwY1731TestIdSingleLossRemoteRatio.setStatus('current')
hwY1731TestIdSingleLossOnDemandStartTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 2, 8, 1, 7), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwY1731TestIdSingleLossOnDemandStartTime.setStatus('current')
hwY1731TestIdOneDelayStatTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 2, 9), )
if mibBuilder.loadTexts: hwY1731TestIdOneDelayStatTable.setStatus('current')
hwY1731TestIdOneDelayStatEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 2, 9, 1), ).setIndexNames((0, "HUAWEI-ETHOAM-MIB", "hwY1731TestIdentifier"), (0, "HUAWEI-ETHOAM-MIB", "hwY1731TestIdOneDelaySequence"))
if mibBuilder.loadTexts: hwY1731TestIdOneDelayStatEntry.setStatus('current')
hwY1731TestIdOneDelaySequence = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 2, 9, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwY1731TestIdOneDelaySequence.setStatus('current')
hwY1731TestIdOneDelayErrInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 2, 9, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwY1731TestIdOneDelayErrInfo.setStatus('current')
hwY1731TestIdOneDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 2, 9, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwY1731TestIdOneDelay.setStatus('current')
hwY1731TestIdOneDelayVariation = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 2, 9, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwY1731TestIdOneDelayVariation.setStatus('current')
hwY1731TestIdOneDelayOnDemandStartTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 2, 9, 1, 5), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwY1731TestIdOneDelayOnDemandStartTime.setStatus('current')
hwY1731TestIdTwoDelayStatTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 2, 10), )
if mibBuilder.loadTexts: hwY1731TestIdTwoDelayStatTable.setStatus('current')
hwY1731TestIdTwoDelayStatEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 2, 10, 1), ).setIndexNames((0, "HUAWEI-ETHOAM-MIB", "hwY1731TestIdentifier"), (0, "HUAWEI-ETHOAM-MIB", "hwY1731TestIdTwoDelaySequence"))
if mibBuilder.loadTexts: hwY1731TestIdTwoDelayStatEntry.setStatus('current')
hwY1731TestIdTwoDelaySequence = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 2, 10, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwY1731TestIdTwoDelaySequence.setStatus('current')
hwY1731TestIdTwoDelayErrInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 2, 10, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwY1731TestIdTwoDelayErrInfo.setStatus('current')
hwY1731TestIdTwoDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 2, 10, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwY1731TestIdTwoDelay.setStatus('current')
hwY1731TestIdTwoDelayVariation = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 2, 10, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwY1731TestIdTwoDelayVariation.setStatus('current')
hwY1731TestIdTwoDelayOnDemandStartTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 2, 10, 1, 5), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwY1731TestIdTwoDelayOnDemandStartTime.setStatus('current')
hwY1731TestIdStatisticResetTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 2, 11), )
if mibBuilder.loadTexts: hwY1731TestIdStatisticResetTable.setStatus('current')
hwY1731TestIdStatisticResetEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 2, 11, 1), ).setIndexNames((0, "HUAWEI-ETHOAM-MIB", "hwY1731TestIdentifier"))
if mibBuilder.loadTexts: hwY1731TestIdStatisticResetEntry.setStatus('current')
hwY1731TestIdResetStatisticType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 2, 11, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("invalid", 1), ("singleloss", 2), ("dualloss", 3), ("onewaydelay", 4), ("twowaydelay", 5), ("singlesynloss", 6)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwY1731TestIdResetStatisticType.setStatus('current')
hwY1731TestIdTwoDelaySummaryStatTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 2, 12), )
if mibBuilder.loadTexts: hwY1731TestIdTwoDelaySummaryStatTable.setStatus('current')
hwY1731TestIdTwoDelaySummaryStatEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 2, 12, 1), ).setIndexNames((0, "HUAWEI-ETHOAM-MIB", "hwY1731TestIdentifier"), (0, "HUAWEI-ETHOAM-MIB", "hwY1731TestIdTwoDelayIndex"))
if mibBuilder.loadTexts: hwY1731TestIdTwoDelaySummaryStatEntry.setStatus('current')
hwY1731TestIdTwoDelayIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 2, 12, 1, 1), Unsigned32())
if mibBuilder.loadTexts: hwY1731TestIdTwoDelayIndex.setStatus('current')
hwY1731TestIdTwoDelayNbrSamples = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 2, 12, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwY1731TestIdTwoDelayNbrSamples.setStatus('current')
hwY1731TestIdTwoDelayMax = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 2, 12, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwY1731TestIdTwoDelayMax.setStatus('current')
hwY1731TestIdTwoDelayMin = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 2, 12, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwY1731TestIdTwoDelayMin.setStatus('current')
hwY1731TestIdTwoDelayAve = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 2, 12, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwY1731TestIdTwoDelayAve.setStatus('current')
hwY1731TestIdTwoDelayExceedUpLimitNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 2, 12, 1, 6), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwY1731TestIdTwoDelayExceedUpLimitNum.setStatus('current')
hwY1731TestIdTwoDelayBelowLowLimitNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 2, 12, 1, 7), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwY1731TestIdTwoDelayBelowLowLimitNum.setStatus('current')
hwY1731TestIdTwoDelayVariationNbrSamples = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 2, 12, 1, 8), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwY1731TestIdTwoDelayVariationNbrSamples.setStatus('current')
hwY1731TestIdTwoDelayVariationMax = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 2, 12, 1, 9), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwY1731TestIdTwoDelayVariationMax.setStatus('current')
hwY1731TestIdTwoDelayVariationMin = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 2, 12, 1, 10), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwY1731TestIdTwoDelayVariationMin.setStatus('current')
hwY1731TestIdTwoDelayVariationAve = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 2, 12, 1, 11), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwY1731TestIdTwoDelayVariationAve.setStatus('current')
hwY1731TestIdTwoDelayVarExceedUpLimitNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 2, 12, 1, 12), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwY1731TestIdTwoDelayVarExceedUpLimitNum.setStatus('current')
hwY1731TestIdTwoDelayVarBelowLowLimitNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 2, 12, 1, 13), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwY1731TestIdTwoDelayVarBelowLowLimitNum.setStatus('current')
hwY1731TestIdSingleSynLossSummaryStatTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 2, 13), )
if mibBuilder.loadTexts: hwY1731TestIdSingleSynLossSummaryStatTable.setStatus('current')
hwY1731TestIdSingleSynLossSummaryStatEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 2, 13, 1), ).setIndexNames((0, "HUAWEI-ETHOAM-MIB", "hwY1731TestIdentifier"), (0, "HUAWEI-ETHOAM-MIB", "hwY1731TestIdSingleSynLossIndex"))
if mibBuilder.loadTexts: hwY1731TestIdSingleSynLossSummaryStatEntry.setStatus('current')
hwY1731TestIdSingleSynLossIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 2, 13, 1, 1), Unsigned32())
if mibBuilder.loadTexts: hwY1731TestIdSingleSynLossIndex.setStatus('current')
hwY1731TestIdSingleSynLossNbrSamples = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 2, 13, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwY1731TestIdSingleSynLossNbrSamples.setStatus('current')
hwY1731TestIdSingleSynSendRemote = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 2, 13, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwY1731TestIdSingleSynSendRemote.setStatus('current')
hwY1731TestIdSingleSynRecvLocal = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 2, 13, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwY1731TestIdSingleSynRecvLocal.setStatus('current')
hwY1731TestIdSingleSynLossLocal = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 2, 13, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwY1731TestIdSingleSynLossLocal.setStatus('current')
hwY1731TestIdSingleSynExceedLocalUpLimitNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 2, 13, 1, 6), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwY1731TestIdSingleSynExceedLocalUpLimitNum.setStatus('current')
hwY1731TestIdSingleSynBelowLocalLowLimitNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 2, 13, 1, 7), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwY1731TestIdSingleSynBelowLocalLowLimitNum.setStatus('current')
hwY1731TestIdSingleSynSendLocal = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 2, 13, 1, 8), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwY1731TestIdSingleSynSendLocal.setStatus('current')
hwY1731TestIdSingleSynRecvRemote = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 2, 13, 1, 9), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwY1731TestIdSingleSynRecvRemote.setStatus('current')
hwY1731TestIdSingleSynLossRemote = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 2, 13, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwY1731TestIdSingleSynLossRemote.setStatus('current')
hwY1731TestIdSingleSynExceedRemoteUpLimitNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 2, 13, 1, 11), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwY1731TestIdSingleSynExceedRemoteUpLimitNum.setStatus('current')
hwY1731TestIdSingleSynBelowRemoteLowLimitNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 2, 13, 1, 12), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwY1731TestIdSingleSynBelowRemoteLowLimitNum.setStatus('current')
hwY1731SingleLossSummaryStatTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 2, 14), )
if mibBuilder.loadTexts: hwY1731SingleLossSummaryStatTable.setStatus('current')
hwY1731SingleLossSummaryStatEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 2, 14, 1), ).setIndexNames((0, "HUAWEI-ETHOAM-MIB", "hwDot1agCfmMdIndex"), (0, "HUAWEI-ETHOAM-MIB", "hwDot1agCfmMaIndex"), (0, "HUAWEI-ETHOAM-MIB", "hwY1731RemoteIp"), (0, "HUAWEI-ETHOAM-MIB", "hwY1731VcId"), (0, "HUAWEI-ETHOAM-MIB", "hwY1731SingleLoss8021pValue"), (0, "HUAWEI-ETHOAM-MIB", "hwY1731SingleLossIndex"))
if mibBuilder.loadTexts: hwY1731SingleLossSummaryStatEntry.setStatus('current')
hwY1731SingleLossIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 2, 14, 1, 1), Unsigned32())
if mibBuilder.loadTexts: hwY1731SingleLossIndex.setStatus('current')
hwY1731SingleLossNbrSamples = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 2, 14, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwY1731SingleLossNbrSamples.setStatus('current')
hwY1731SingleLossSendRemote = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 2, 14, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwY1731SingleLossSendRemote.setStatus('current')
hwY1731SingleLossRecvLocal = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 2, 14, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwY1731SingleLossRecvLocal.setStatus('current')
hwY1731SingleLossLossLocal = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 2, 14, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwY1731SingleLossLossLocal.setStatus('current')
hwY1731SingleLossExceedLocalUpLimitNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 2, 14, 1, 6), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwY1731SingleLossExceedLocalUpLimitNum.setStatus('current')
hwY1731SingleLossBelowLocallowLimitNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 2, 14, 1, 7), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwY1731SingleLossBelowLocallowLimitNum.setStatus('current')
hwY1731SingleLossSendLocal = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 2, 14, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwY1731SingleLossSendLocal.setStatus('current')
hwY1731SingleLossRecvRemote = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 2, 14, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwY1731SingleLossRecvRemote.setStatus('current')
hwY1731SingleLossLossRemote = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 2, 14, 1, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwY1731SingleLossLossRemote.setStatus('current')
hwY1731SingleLossExceedRemoteUpLimitNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 2, 14, 1, 11), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwY1731SingleLossExceedRemoteUpLimitNum.setStatus('current')
hwY1731SingleLossBelowRemotelowLimitNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 2, 14, 1, 12), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwY1731SingleLossBelowRemotelowLimitNum.setStatus('current')
hwY1731TestIdSingleLossSummaryStatTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 2, 15), )
if mibBuilder.loadTexts: hwY1731TestIdSingleLossSummaryStatTable.setStatus('current')
hwY1731TestIdSingleLossSummaryStatEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 2, 15, 1), ).setIndexNames((0, "HUAWEI-ETHOAM-MIB", "hwY1731TestIdentifier"), (0, "HUAWEI-ETHOAM-MIB", "hwY1731TestIdSingleLossIndex"))
if mibBuilder.loadTexts: hwY1731TestIdSingleLossSummaryStatEntry.setStatus('current')
hwY1731TestIdSingleLossIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 2, 15, 1, 1), Unsigned32())
if mibBuilder.loadTexts: hwY1731TestIdSingleLossIndex.setStatus('current')
hwY1731TestIdSingleLossNbrSamples = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 2, 15, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwY1731TestIdSingleLossNbrSamples.setStatus('current')
hwY1731TestIdSingleLossSendRemote = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 2, 15, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwY1731TestIdSingleLossSendRemote.setStatus('current')
hwY1731TestIdSingleLossRecvLocal = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 2, 15, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwY1731TestIdSingleLossRecvLocal.setStatus('current')
hwY1731TestIdSingleLossLossLocal = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 2, 15, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwY1731TestIdSingleLossLossLocal.setStatus('current')
hwY1731TestIdSingleLossExceedLocalUpLimitNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 2, 15, 1, 6), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwY1731TestIdSingleLossExceedLocalUpLimitNum.setStatus('current')
hwY1731TestIdSingleLossBelowLocallowLimitNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 2, 15, 1, 7), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwY1731TestIdSingleLossBelowLocallowLimitNum.setStatus('current')
hwY1731TestIdSingleLossSendLocal = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 2, 15, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwY1731TestIdSingleLossSendLocal.setStatus('current')
hwY1731TestIdSingleLossRecvRemote = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 2, 15, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwY1731TestIdSingleLossRecvRemote.setStatus('current')
hwY1731TestIdSingleLossLossRemote = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 2, 15, 1, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwY1731TestIdSingleLossLossRemote.setStatus('current')
hwY1731TestIdSingleLossExceedRemoteUpLimitNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 2, 15, 1, 11), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwY1731TestIdSingleLossExceedRemoteUpLimitNum.setStatus('current')
hwY1731TestIdSingleLossBelowRemotelowLimitNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 2, 15, 1, 12), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwY1731TestIdSingleLossBelowRemotelowLimitNum.setStatus('current')
hwY1731TestIdSingleSynLossStatTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 2, 16), )
if mibBuilder.loadTexts: hwY1731TestIdSingleSynLossStatTable.setStatus('current')
hwY1731TestIdSingleSynLossStatEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 2, 16, 1), ).setIndexNames((0, "HUAWEI-ETHOAM-MIB", "hwY1731TestIdentifier"), (0, "HUAWEI-ETHOAM-MIB", "hwY1731TestIdSingleSynLossSequence"))
if mibBuilder.loadTexts: hwY1731TestIdSingleSynLossStatEntry.setStatus('current')
hwY1731TestIdSingleSynLossSequence = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 2, 16, 1, 1), Unsigned32())
if mibBuilder.loadTexts: hwY1731TestIdSingleSynLossSequence.setStatus('current')
hwY1731TestIdSingleSynLossErrInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 2, 16, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwY1731TestIdSingleSynLossErrInfo.setStatus('current')
hwY1731TestIdSingleSynLossLocalSend = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 2, 16, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwY1731TestIdSingleSynLossLocalSend.setStatus('current')
hwY1731TestIdSingleSynLossRemoteSend = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 2, 16, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwY1731TestIdSingleSynLossRemoteSend.setStatus('current')
hwY1731TestIdSingleSynLossLocalReceive = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 2, 16, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwY1731TestIdSingleSynLossLocalReceive.setStatus('current')
hwY1731TestIdSingleSynLossUnack = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 2, 16, 1, 6), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwY1731TestIdSingleSynLossUnack.setStatus('current')
hwY1731TestIdSingleSynLossLossLocal = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 2, 16, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwY1731TestIdSingleSynLossLossLocal.setStatus('current')
hwY1731TestIdSingleSynLossLocalRatio = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 2, 16, 1, 8), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwY1731TestIdSingleSynLossLocalRatio.setStatus('current')
hwY1731TestIdSingleSynLossLossRemote = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 2, 16, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwY1731TestIdSingleSynLossLossRemote.setStatus('current')
hwY1731TestIdSingleSynLossRemoteRatio = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 2, 16, 1, 10), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwY1731TestIdSingleSynLossRemoteRatio.setStatus('current')
hwY1731TestIdSingleSynLossOnDemandStartTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 2, 16, 1, 11), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwY1731TestIdSingleSynLossOnDemandStartTime.setStatus('current')
hwY1731AisMaxPktNum = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 3), Unsigned32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hwY1731AisMaxPktNum.setStatus('current')
hwY1731PMModeEnable = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 4), EnabledStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwY1731PMModeEnable.setStatus('current')
hwY1731GlobalObject = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 5))
hwY1731MaxTestId = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 5, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwY1731MaxTestId.setStatus('current')
hwY1731LckMaxPktNum = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 5, 2), Unsigned32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hwY1731LckMaxPktNum.setStatus('current')
hwY1731LckCurrentPktNum = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 5, 3), Unsigned32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hwY1731LckCurrentPktNum.setStatus('current')
hwY1731LckUpperThreshold = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 5, 4), Unsigned32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hwY1731LckUpperThreshold.setStatus('current')
hwY1731LckLowerThreshold = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 136, 1, 8, 5, 5), Unsigned32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hwY1731LckLowerThreshold.setStatus('current')
mibBuilder.exportSymbols("HUAWEI-ETHOAM-MIB", hwDot1agCfmMaMapL2vcValue=hwDot1agCfmMaMapL2vcValue, hwY1731TestIdSingleLossOnDemandStartTime=hwY1731TestIdSingleLossOnDemandStartTime, hwY1731TestIdIsUpdateBackwardMacAddress=hwY1731TestIdIsUpdateBackwardMacAddress, hwDot1agCfmGmacTraceReplyRecvOrder=hwDot1agCfmGmacTraceReplyRecvOrder, hwY1731TestIdTwoDelaySequence=hwY1731TestIdTwoDelaySequence, hwTestMessageEndTimeStamp=hwTestMessageEndTimeStamp, hwY1731MulPingReplyMacAddress=hwY1731MulPingReplyMacAddress, hwDot3ahEfmEventLogType=hwDot3ahEfmEventLogType, hwDot1agCfmGmacTraceEnabled=hwDot1agCfmGmacTraceEnabled, hwY1731SingleLossStatisticGatherInterval=hwY1731SingleLossStatisticGatherInterval, hwTestMessageSendFinished=hwTestMessageSendFinished, hwDot1agCfmMipIfMacAddress=hwDot1agCfmMipIfMacAddress, hwY1731SingleLossSummaryStatEntry=hwY1731SingleLossSummaryStatEntry, hwDot1agCfmRMepIdentifier=hwDot1agCfmRMepIdentifier, hwY1731TestIdSingleSynEndedLMSendTimeOut=hwY1731TestIdSingleSynEndedLMSendTimeOut, hwDot1agCfmGmacTraceObjects=hwDot1agCfmGmacTraceObjects, hwDot1agCfmMismergeCleared=hwDot1agCfmMismergeCleared, hwDot1agCfmQueryMdIndexGroup=hwDot1agCfmQueryMdIndexGroup, HWDot1agCfmRelayActionFieldValue=HWDot1agCfmRelayActionFieldValue, hwTestMessageResultBytesLost=hwTestMessageResultBytesLost, hwY1731TestIdSingleSynLossStatTableGroup=hwY1731TestIdSingleSynLossStatTableGroup, hwY1731VcId=hwY1731VcId, hwDot1agCfmUnexpectedMEGLevel=hwDot1agCfmUnexpectedMEGLevel, hwDot3ahEfmEventLogLocation=hwDot3ahEfmEventLogLocation, hwY1731TestIdSingleSynEndedLMSendTableGroup=hwY1731TestIdSingleSynEndedLMSendTableGroup, hwDot1agCfmMacPingEntry=hwDot1agCfmMacPingEntry, hwDot1agCfmGmacTraceState=hwDot1agCfmGmacTraceState, hwDot3ahEfmDetectModeGroup=hwDot3ahEfmDetectModeGroup, hwY1731OneDelayAvg=hwY1731OneDelayAvg, hwY1731TestIdSingleLossStatEntry=hwY1731TestIdSingleLossStatEntry, hwDot1agCfmMaMapType=hwDot1agCfmMaMapType, hwY1731TestIdSingleSynEndedLMSendCount=hwY1731TestIdSingleSynEndedLMSendCount, hwY1731SingleLossLocalMax=hwY1731SingleLossLocalMax, hwCfmVlanOneDelayTrapLogDelayValueLow=hwCfmVlanOneDelayTrapLogDelayValueLow, hwTestMessageResultGroup=hwTestMessageResultGroup, hwDot3ahEfmOrgSpecificRx=hwDot3ahEfmOrgSpecificRx, hwY1731TestIdTwoDelay=hwY1731TestIdTwoDelay, hwY1731TestIdOneWayDMReceiveTable=hwY1731TestIdOneWayDMReceiveTable, hwDot3ahEfmEntry=hwDot3ahEfmEntry, hwY1731SingleLossEnable=hwY1731SingleLossEnable, hwDot3ahEfmManagerGroup=hwDot3ahEfmManagerGroup, hwDot1agCfmGmacTraceReplyEntry=hwDot1agCfmGmacTraceReplyEntry, hwEthOamCompliance=hwEthOamCompliance, hwDot3ahEfmErrFrameSecsEvNotifEnable=hwDot3ahEfmErrFrameSecsEvNotifEnable, hwY1731TestIdUplink8021p=hwY1731TestIdUplink8021p, hwY1731TestIdSingleLossRecvLocal=hwY1731TestIdSingleLossRecvLocal, HWDot1agCfmEgressActionFieldValue=HWDot1agCfmEgressActionFieldValue, hwDot3ahEfmControlGroup=hwDot3ahEfmControlGroup, hwOamManager=hwOamManager, hwDot1agCfmMepObject=hwDot1agCfmMepObject, hwTestMessageIndex=hwTestMessageIndex, hwDot3ahEfmPeerGroup=hwDot3ahEfmPeerGroup, hwDot1agCfmGmacTraceReplyRelayAction=hwDot1agCfmGmacTraceReplyRelayAction, hwY1731AisConfigVlanListHigh=hwY1731AisConfigVlanListHigh, hwY1731TestIdSingleSynEndedLMReceiveTimeOut=hwY1731TestIdSingleSynEndedLMReceiveTimeOut, hwY1731TestIdSingleSynSendLocal=hwY1731TestIdSingleSynSendLocal, hwY1731TestIdSingleSynLossRemoteSend=hwY1731TestIdSingleSynLossRemoteSend, hwDot1agCfmMacTraceResult=hwDot1agCfmMacTraceResult, hwDot1agCfmMdMdLevel=hwDot1agCfmMdMdLevel, hwY1731AisLinkStatusEntry=hwY1731AisLinkStatusEntry, hwY1731TestIdTwoWayDMSendEntry=hwY1731TestIdTwoWayDMSendEntry, hwY1731TestIdSingleSynLossErrInfo=hwY1731TestIdSingleSynLossErrInfo, hwDot1agCfmMepRowStatus=hwDot1agCfmMepRowStatus, hwTestMessageVlanID=hwTestMessageVlanID, hwY1731ConfigObject=hwY1731ConfigObject, hwY1731SingleLossLossLocal=hwY1731SingleLossLossLocal, hwDot3ahEfmFramesLostDueToOam=hwDot3ahEfmFramesLostDueToOam, hwDot1agCfmUnexpectedMAC=hwDot1agCfmUnexpectedMAC, hwDot1agCfmMacTraceObjects=hwDot1agCfmMacTraceObjects, hwDot1agCfmMacTraceReplyEgressMac=hwDot1agCfmMacTraceReplyEgressMac, hwDot3ahEfmErrFrameSecsSummaryWindow=hwDot3ahEfmErrFrameSecsSummaryWindow, hwDot3ahEfmEventLogIndex=hwDot3ahEfmEventLogIndex, hwY1731AisSendLevel=hwY1731AisSendLevel, hwY1731PMModeEnable=hwY1731PMModeEnable, hwDot1agCfmMipIfIndex=hwDot1agCfmMipIfIndex, hwDot1agCfmGmacTraceL2vcType=hwDot1agCfmGmacTraceL2vcType, hwY1731SingleLossRemoteMin=hwY1731SingleLossRemoteMin, HWDetectType=HWDetectType, hwDot1agCfmExceptionalMACStatusCleared=hwDot1agCfmExceptionalMACStatusCleared, hwY1731TestIdOneDelayErrInfo=hwY1731TestIdOneDelayErrInfo, hwY1731SingleLossExceedRemoteUpLimitNum=hwY1731SingleLossExceedRemoteUpLimitNum, hwY1731TwoDelayVariation=hwY1731TwoDelayVariation, hwDot1agCfmMipGroup=hwDot1agCfmMipGroup, hwDot1agCfmGmacTraceReplySeqNumber=hwDot1agCfmGmacTraceReplySeqNumber, HWDot1agCfmIngressActionFieldValue=HWDot1agCfmIngressActionFieldValue, hwDot3ahEfmEventLogTimestamp=hwDot3ahEfmEventLogTimestamp, hwEthOamTrapsGroup=hwEthOamTrapsGroup, hwY1731TestIdTwoWayDMSendCount=hwY1731TestIdTwoWayDMSendCount, hwDot1agCfmMdMhfIdPermission=hwDot1agCfmMdMhfIdPermission, hwY1731AisHighCeVlan=hwY1731AisHighCeVlan, hwDot1agCfmMacTraceIndex=hwDot1agCfmMacTraceIndex, hwDot1agCfmMacTraceRowStatus=hwDot1agCfmMacTraceRowStatus, hwDot1agCfmGmacTraceOutIfIndex=hwDot1agCfmGmacTraceOutIfIndex, HWTestMessageSendSpeed=HWTestMessageSendSpeed, hwY1731TestIdSingleEndedLMSendIsContinue=hwY1731TestIdSingleEndedLMSendIsContinue, hwDot3ahEfmNonThresholdEvent=hwDot3ahEfmNonThresholdEvent, hwTestMessageResultTable=hwTestMessageResultTable, hwCfmVlanTwoDelayRecoveryTrapLogDelayValueLow=hwCfmVlanTwoDelayRecoveryTrapLogDelayValueLow, hwDot3ahEfmErrSymPeriodWindowLo=hwDot3ahEfmErrSymPeriodWindowLo, hwY1731TestIdSingleSynLossLocal=hwY1731TestIdSingleSynLossLocal, hwY1731TwoDelayCount=hwY1731TwoDelayCount, hwDot1agCfmGmacTraceReplyForwarded=hwDot1agCfmGmacTraceReplyForwarded, hwY1731TestIdSingleEndedLMReceiveGroup=hwY1731TestIdSingleEndedLMReceiveGroup, hwY1731OneDelayDestIsMepId=hwY1731OneDelayDestIsMepId, hwY1731OneDelayMin=hwY1731OneDelayMin, hwDot1agCfmGmacTraceCeVlan=hwDot1agCfmGmacTraceCeVlan, hwDot3ahEfmLoopbackTimeout=hwDot3ahEfmLoopbackTimeout, hwDot1agCfmGmacTraceReplyIngressAction=hwDot1agCfmGmacTraceReplyIngressAction, hwY1731SingleLossDestIsMepId=hwY1731SingleLossDestIsMepId, hwY1731StatisticTrapLogMacAddress=hwY1731StatisticTrapLogMacAddress, hwDot3ahEfmErrFramePeriodEventGroup=hwDot3ahEfmErrFramePeriodEventGroup, hwDot1agCfmMaIndex=hwDot1agCfmMaIndex, hwY1731PwMeasureMode=hwY1731PwMeasureMode, hwY1731SingleLossRecvEnable=hwY1731SingleLossRecvEnable, hwDot1agCfmMepIdentifier=hwDot1agCfmMepIdentifier, hwDot3ahEfmHoldUpTime=hwDot3ahEfmHoldUpTime, hwDot1agCfmMacTraceState=hwDot1agCfmMacTraceState, hwTestMessageTableNextIndex=hwTestMessageTableNextIndex, hwDot3ahEfmPeerFunctionsSupported=hwDot3ahEfmPeerFunctionsSupported, hwY1731TestIdOneWayDMSendCount=hwY1731TestIdOneWayDMSendCount, hwY1731TestIdIsRecordFile=hwY1731TestIdIsRecordFile, hwY1731TestIdSingleLossIndex=hwY1731TestIdSingleLossIndex, hwDot3ahEvrrpEntry=hwDot3ahEvrrpEntry, hwY1731AisLowCeVlan=hwY1731AisLowCeVlan, hwTestMessageMacAddress=hwTestMessageMacAddress, hwCfmTwoDelayTrapMacAddress=hwCfmTwoDelayTrapMacAddress, hwDot1agCfmMepDirection=hwDot1agCfmMepDirection, hwDot3ahEfmConfigRevision=hwDot3ahEfmConfigRevision, hwY1731BaseConfigEntry=hwY1731BaseConfigEntry, hwDot1agCfmGmacTracePeVlan=hwDot1agCfmGmacTracePeVlan, hwDot3ahEfmPeerConfigRevision=hwDot3ahEfmPeerConfigRevision, hwY1731TestIdTwoWayDMSendGroup=hwY1731TestIdTwoWayDMSendGroup, hwDot1agCfmQueryMaIndexTable=hwDot1agCfmQueryMaIndexTable, hwDot1agCfmMaMapCccName=hwDot1agCfmMaMapCccName, hwDot3ahEfmLoopbackTable=hwDot3ahEfmLoopbackTable, hwY1731AisLinkRowStatus=hwY1731AisLinkRowStatus, hwY1731SingleLossRemoteRatioMax=hwY1731SingleLossRemoteRatioMax, hwY1731SingleLossExceedLocalUpLimitNum=hwY1731SingleLossExceedLocalUpLimitNum, hwY1731TestIdSingleLossRecvRemote=hwY1731TestIdSingleLossRecvRemote, hwDot1agCfmMacPingRecvTimeDelayAvg=hwDot1agCfmMacPingRecvTimeDelayAvg, hwY1731MacAddress=hwY1731MacAddress, hwY1731AisLinkStatusIfIndex=hwY1731AisLinkStatusIfIndex, hwY1731SingleLossInterval=hwY1731SingleLossInterval, hwY1731TestIdQueuePriority=hwY1731TestIdQueuePriority, hwY1731TestIdDestMepId=hwY1731TestIdDestMepId, hwCfmVlanOneDelayRcoverTrapLogEntry=hwCfmVlanOneDelayRcoverTrapLogEntry, hwY1731TestIdTwoWayDMSendIsContinue=hwY1731TestIdTwoWayDMSendIsContinue, hwDot1agCfmMacTraceOutIfIndex=hwDot1agCfmMacTraceOutIfIndex, hwDot1agCfmMacPingIndex=hwDot1agCfmMacPingIndex, hwY1731TestIdSingleSynLossIndex=hwY1731TestIdSingleSynLossIndex, hwY1731AisEnable=hwY1731AisEnable, hwY1731SingleLossRemoteStatistic=hwY1731SingleLossRemoteStatistic, hwDot1agCfmMacTraceReplyTerminalMep=hwDot1agCfmMacTraceReplyTerminalMep, hwDot3ahEfmDetectModeTable=hwDot3ahEfmDetectModeTable, hwDot3ahEfmDetectMode=hwDot3ahEfmDetectMode, hwTestMessageResultSendBytes=hwTestMessageResultSendBytes, hwDot3ahEvrrpTriggerIfDown=hwDot3ahEvrrpTriggerIfDown, hwY1731TestIdTwoDelayNbrSamples=hwY1731TestIdTwoDelayNbrSamples, hwDot1agCfmMacTraceMepId=hwDot1agCfmMacTraceMepId, hwY1731AisLinkStatusGroup=hwY1731AisLinkStatusGroup, hwY1731MulPingEntry=hwY1731MulPingEntry, hwDot1agCfmMacTraceReplyTable=hwDot1agCfmMacTraceReplyTable, hwDot3ahEfmEventLogGroup=hwDot3ahEfmEventLogGroup, hwY1731TestIdTwoDelayVarBelowLowLimitNum=hwY1731TestIdTwoDelayVarBelowLowLimitNum, hwY1731MulPingReplyTable=hwY1731MulPingReplyTable, hwY1731TestIdSingleSynSendRemote=hwY1731TestIdSingleSynSendRemote, hwDot3ahEfmFlagEventGroup=hwDot3ahEfmFlagEventGroup, hwDot1agCfmGmacTraceDisplayHostInfo=hwDot1agCfmGmacTraceDisplayHostInfo, hwY1731SingleLossSendLocal=hwY1731SingleLossSendLocal, hwY1731AisVlanConfigEntry=hwY1731AisVlanConfigEntry, hwDot1agCfmGmacTraceServiceType=hwDot1agCfmGmacTraceServiceType, hwY1731TestIdSingleSynLossSummaryStatTableGroup=hwY1731TestIdSingleSynLossSummaryStatTableGroup, hwTestMessageResultPacketsLost=hwTestMessageResultPacketsLost, hwDot1agCfmQueryMaName=hwDot1agCfmQueryMaName, hwY1731TestIdSingleLossExceedLocalUpLimitNum=hwY1731TestIdSingleLossExceedLocalUpLimitNum, hwCfmVlanTwoDelayRecoveryTrapLogTimestamp=hwCfmVlanTwoDelayRecoveryTrapLogTimestamp, hwY1731TestIdTwoDelaySummaryStatTableGroup=hwY1731TestIdTwoDelaySummaryStatTableGroup, hwDot1agCfmMacPingRecvTimeDelayMin=hwDot1agCfmMacPingRecvTimeDelayMin, hwDot1agCfmRMepHighestPrDefect=hwDot1agCfmRMepHighestPrDefect, hwY1731MulPingReplyTransTime=hwY1731MulPingReplyTransTime, hwDot3ahEfmVariableResponseRx=hwDot3ahEfmVariableResponseRx, hwY1731TestIdOneWayDMSendRowStatus=hwY1731TestIdOneWayDMSendRowStatus, hwDot1agCfmMacPingMaName=hwDot1agCfmMacPingMaName, hwY1731AisExceedMaxPktNumCleared=hwY1731AisExceedMaxPktNumCleared, hwCfmVlanTwoDelayTrapLogDelayValueLow=hwCfmVlanTwoDelayTrapLogDelayValueLow, hwDot1agCfmUnexpectedPeriod=hwDot1agCfmUnexpectedPeriod, hwDot3ahEfmErrFrameEvNotifEnable=hwDot3ahEfmErrFrameEvNotifEnable, hwY1731ManagerGroup=hwY1731ManagerGroup, hwDot1agCfmMipTable=hwDot1agCfmMipTable, hwY1731SingleLossRemoteRatioAvg=hwY1731SingleLossRemoteRatioAvg, hwDot1agCfmMaMapL2vcType=hwDot1agCfmMaMapL2vcType, hwY1731DualLossEnable=hwY1731DualLossEnable, hwEthOamConformance=hwEthOamConformance, hwDot3ahEfmStatsBaseGroup=hwDot3ahEfmStatsBaseGroup, hwDot1agCfmGmacTraceReplyTable=hwDot1agCfmGmacTraceReplyTable, hwY1731TestIdDestIsMepId=hwY1731TestIdDestIsMepId, hwY1731TestIdOneWayDMSendIsContinue=hwY1731TestIdOneWayDMSendIsContinue, hwDot1agCfmMacTraceMdName=hwDot1agCfmMacTraceMdName, hwY1731OneDelayStatistic8021pValue=hwY1731OneDelayStatistic8021pValue, hwY1731TestIdRowStatus=hwY1731TestIdRowStatus, hwCfmVlanOneDelayTrapLogDelayValue=hwCfmVlanOneDelayTrapLogDelayValue, hwDot3ahEfmEventLogWindowLo=hwDot3ahEfmEventLogWindowLo, hwDot1agCfmMacPingRecvPacketNum=hwDot1agCfmMacPingRecvPacketNum, hwCfmVlanOneDelayRecoveryTrapLogTimestamp=hwCfmVlanOneDelayRecoveryTrapLogTimestamp, hwEthOam1ag=hwEthOam1ag, hwCfmOneDelayTrapLogMacAddress=hwCfmOneDelayTrapLogMacAddress, hwY1731AisVlanConfigRowStatus=hwY1731AisVlanConfigRowStatus, hwDot1agCfmGmacTraceReplyEgressAction=hwDot1agCfmGmacTraceReplyEgressAction, hwY1731TestIdOneWayDMReceiveGroup=hwY1731TestIdOneWayDMReceiveGroup, hwY1731TestIdEntry=hwY1731TestIdEntry, hwCfmVlanTwowayDelay=hwCfmVlanTwowayDelay, hwTestMessageSendSpeed=hwTestMessageSendSpeed, hwDot1agCfmMepCcmSendEnabled=hwDot1agCfmMepCcmSendEnabled, hwY1731AisPeVlan=hwY1731AisPeVlan, hwY1731TestIdSingleLossSendLocal=hwY1731TestIdSingleLossSendLocal, hwDot1agCfmMaTable=hwDot1agCfmMaTable, hwDot1agCfmGmacTraceResult=hwDot1agCfmGmacTraceResult, hwDot3ahEfmLoopbackFailed=hwDot3ahEfmLoopbackFailed, hwY1731AisSendInterval=hwY1731AisSendInterval, hwY1731TestIdSingleEndedLMSendCount=hwY1731TestIdSingleEndedLMSendCount, hwY1731TestIdTwoDelayErrInfo=hwY1731TestIdTwoDelayErrInfo, hwDot1agCfmLOC=hwDot1agCfmLOC, hwY1731TestIdSingleSynLossStatEntry=hwY1731TestIdSingleSynLossStatEntry, hwDot1agCfmQueryMdIndexTable=hwDot1agCfmQueryMdIndexTable, hwDot1agCfmMaPktPriority=hwDot1agCfmMaPktPriority, hwDot3ahEfmInterval=hwDot3ahEfmInterval, hwY1731TwoDelayThreshold=hwY1731TwoDelayThreshold, PYSNMP_MODULE_ID=hwEthOamMib, hwDot1agCfmMepIfIndex=hwDot1agCfmMepIfIndex, hwY1731TwoDelayDestIsMepId=hwY1731TwoDelayDestIsMepId, hwDot1agCfmMacPingObject=hwDot1agCfmMacPingObject, hwY1731OneDelay8021pValue=hwY1731OneDelay8021pValue, hwDot1agCfmGmacTraceReplyTTL=hwDot1agCfmGmacTraceReplyTTL, hwDot3ahEfmDuplicateEventNotificationTx=hwDot3ahEfmDuplicateEventNotificationTx, hwY1731AisVlanEntry=hwY1731AisVlanEntry, hwY1731AisConfigVlanListLow=hwY1731AisConfigVlanListLow, hwDot1agCfmMacTraceEntry=hwDot1agCfmMacTraceEntry, hwDot1agCfmGmacTraceVsiName=hwDot1agCfmGmacTraceVsiName, hwDot1agCfmMdName=hwDot1agCfmMdName, hwY1731SingleLossLocalRatioAvg=hwY1731SingleLossLocalRatioAvg, hwTestMessageResultSendPackets=hwTestMessageResultSendPackets, hwDot1agCfmMdTable=hwDot1agCfmMdTable, hwY1731TwoDelayStatistic=hwY1731TwoDelayStatistic, hwY1731BaseConfigTable=hwY1731BaseConfigTable, hwDot3ahEfmStatsEntry=hwDot3ahEfmStatsEntry, hwY1731SingleLossLocalRatioMax=hwY1731SingleLossLocalRatioMax, hwY1731BaseConfigGroup=hwY1731BaseConfigGroup, hwY1731SingleLossLocalRatio=hwY1731SingleLossLocalRatio, hwY1731TestIdTwoWayDMSendPacketSize=hwY1731TestIdTwoWayDMSendPacketSize, hwDot3ahEfmErrFrameWindow=hwDot3ahEfmErrFrameWindow, hwY1731ConfigTable=hwY1731ConfigTable, hwY1731AisSendPktStatus=hwY1731AisSendPktStatus, hwY1731TestIdSingleLossStatTable=hwY1731TestIdSingleLossStatTable, hwDot3ahEfmPeerMaxOamPduSize=hwDot3ahEfmPeerMaxOamPduSize)
mibBuilder.exportSymbols("HUAWEI-ETHOAM-MIB", hwDot1agCfmMepEntry=hwDot1agCfmMepEntry, hwDot3ahEfmEventConfigEntry=hwDot3ahEfmEventConfigEntry, hwY1731TestIdOneDelayStatTableGroup=hwY1731TestIdOneDelayStatTableGroup, hwDot3ahEvrrpTable=hwDot3ahEvrrpTable, hwY1731TwoDelayRecv8021pValue=hwY1731TwoDelayRecv8021pValue, hwCfmOneDelayRecoveryTrapMacAddress=hwCfmOneDelayRecoveryTrapMacAddress, hwY1731MaxTestId=hwY1731MaxTestId, hwY1731DualLossMepId=hwY1731DualLossMepId, hwDot3ahEfmInformationTx=hwDot3ahEfmInformationTx, hwDot1agCfmMPGroup=hwDot1agCfmMPGroup, hwEthOamCompliances=hwEthOamCompliances, hwY1731MulPingReplyOrder=hwY1731MulPingReplyOrder, hwY1731TwoDelayPacketSize=hwY1731TwoDelayPacketSize, hwDot1agCfmQueryMdIndex=hwDot1agCfmQueryMdIndex, hwDot3ahEfmEventLogEventTotal=hwDot3ahEfmEventLogEventTotal, hwDot1agCfmMacTraceReplyIngressIfName=hwDot1agCfmMacTraceReplyIngressIfName, hwEthOam=hwEthOam, hwY1731TestIdStatisticResetEntry=hwY1731TestIdStatisticResetEntry, hwDot3ahEfmTable=hwDot3ahEfmTable, hwDot1agCfmRMepTable=hwDot1agCfmRMepTable, hwDot1agCfmMaMepFngAlarmTime=hwDot1agCfmMaMepFngAlarmTime, hwY1731MulPingSendPacketNum=hwY1731MulPingSendPacketNum, hwDot1agCfmMacTraceReplyTTL=hwDot1agCfmMacTraceReplyTTL, hwDot1agCfmGmacTraceTimeOut=hwDot1agCfmGmacTraceTimeOut, hwY1731TestIdSingleSynExceedLocalUpLimitNum=hwY1731TestIdSingleSynExceedLocalUpLimitNum, hwY1731TwoDelay8021pValue=hwY1731TwoDelay8021pValue, hwY1731TestIdSingleSynEndedLMReceiveTable=hwY1731TestIdSingleSynEndedLMReceiveTable, hwCfmVlanTwoDelayTrapLogDelayValueHigh=hwCfmVlanTwoDelayTrapLogDelayValueHigh, hwY1731MulPingPriority=hwY1731MulPingPriority, hwTestMessageResultReceivedPackets=hwTestMessageResultReceivedPackets, hwY1731TestIdSingleLossNbrSamples=hwY1731TestIdSingleLossNbrSamples, hwY1731OneDelayCount=hwY1731OneDelayCount, hwY1731TestIdTwoDelayVariationMin=hwY1731TestIdTwoDelayVariationMin, hwDot1agCfmMacTraceDestIsMepId=hwDot1agCfmMacTraceDestIsMepId, hwCfmVlanTwoDelayTrapLogThreshold=hwCfmVlanTwoDelayTrapLogThreshold, hwDot1agCfmRMepObject=hwDot1agCfmRMepObject, hwDot3ahEfmRemoteDyingGaspEvent=hwDot3ahEfmRemoteDyingGaspEvent, hwY1731TwoDelayMax=hwY1731TwoDelayMax, hwY1731SingleLossBelowLocallowLimitNum=hwY1731SingleLossBelowLocallowLimitNum, hwDot1agCfmMdEntry=hwDot1agCfmMdEntry, hwTestMessageFailed=hwTestMessageFailed, hwY1731MulPingCount=hwY1731MulPingCount, hwTestMessageServiceInstance=hwTestMessageServiceInstance, hwTestMessageCompleted=hwTestMessageCompleted, hwY1731TestIdMdName=hwY1731TestIdMdName, hwCfmVlanTwoDelayRcoverTrapLogTable=hwCfmVlanTwoDelayRcoverTrapLogTable, hwY1731StatisticTrapLogValueLow=hwY1731StatisticTrapLogValueLow, hwY1731TestIdOneDelay=hwY1731TestIdOneDelay, hwDot1agCfmMipObject=hwDot1agCfmMipObject, hwY1731TestIdTwoWayDMReceiveGroup=hwY1731TestIdTwoWayDMReceiveGroup, hwDot3ahEfmLoopbackStatus=hwDot3ahEfmLoopbackStatus, hwTestMessageEntry=hwTestMessageEntry, hwY1731TestIdSingleLossSummaryStatTableGroup=hwY1731TestIdSingleLossSummaryStatTableGroup, hwY1731LckDefectCleared=hwY1731LckDefectCleared, hwY1731TestIdSingleSynRecvRemote=hwY1731TestIdSingleSynRecvRemote, hwDot1agCfmMdIndex=hwDot1agCfmMdIndex, hwY1731TestIdBackwardMacAddress=hwY1731TestIdBackwardMacAddress, hwY1731MulPingRecvPacketNum=hwY1731MulPingRecvPacketNum, hwY1731TestIdOneWayDMSendGroup=hwY1731TestIdOneWayDMSendGroup, hwDot3ahEfmManagerTable=hwDot3ahEfmManagerTable, hwDot1agCfmGmacTraceL2vcValue=hwDot1agCfmGmacTraceL2vcValue, hwDot1agCfmMacPingState=hwDot1agCfmMacPingState, hwDot1agCfmGroup=hwDot1agCfmGroup, hwY1731TestIdSingleLossErrInfo=hwY1731TestIdSingleLossErrInfo, hwY1731SingleLossIndex=hwY1731SingleLossIndex, hwDot3ahEfmUniqueEventNotificationTx=hwDot3ahEfmUniqueEventNotificationTx, hwY1731AisGroup=hwY1731AisGroup, hwDot1agCfmMacPingMepId=hwDot1agCfmMacPingMepId, hwY1731TestIdSingleSynLossLossLocal=hwY1731TestIdSingleSynLossLossLocal, hwDot1agCfmMacPingTimeOut=hwDot1agCfmMacPingTimeOut, hwCfmVlanOneDelayTrapLogDelayValueHigh=hwCfmVlanOneDelayTrapLogDelayValueHigh, hwY1731TestIdTwoWayDMSendRowStatus=hwY1731TestIdTwoWayDMSendRowStatus, hwDot1agCfmGmacTraceTable=hwDot1agCfmGmacTraceTable, hwDot3ahEfmPeerVendorOui=hwDot3ahEfmPeerVendorOui, hwDot1agCfmExceptionalMACStatus=hwDot1agCfmExceptionalMACStatus, hwY1731TestIdTwoDelayVariationMax=hwY1731TestIdTwoDelayVariationMax, hwDot1agCfmMacTraceReplyEgressIfName=hwDot1agCfmMacTraceReplyEgressIfName, hwDot1agCfmMaMapVlanValue=hwDot1agCfmMaMapVlanValue, hwDot1agCfmMacTraceReplyRelayAction=hwDot1agCfmMacTraceReplyRelayAction, hwTestMessageResultReceivedBytes=hwTestMessageResultReceivedBytes, hwY1731TestIdSingleSynLossSummaryStatEntry=hwY1731TestIdSingleSynLossSummaryStatEntry, hwDot3ahEfmUnsupportedCodesRx=hwDot3ahEfmUnsupportedCodesRx, hwDot3ahEfmErrFrameThreshold=hwDot3ahEfmErrFrameThreshold, hwY1731TestIdSingleLossExceedRemoteUpLimitNum=hwY1731TestIdSingleLossExceedRemoteUpLimitNum, hwDot1agCfmMaObject=hwDot1agCfmMaObject, hwY1731ResetStatisticTable=hwY1731ResetStatisticTable, hwY1731OneDelayRecvEnableIsContinue=hwY1731OneDelayRecvEnableIsContinue, hwDot1agCfmMaName=hwDot1agCfmMaName, hwY1731AisVlanConfigGroup=hwY1731AisVlanConfigGroup, hwY1731LckExceedThreshold=hwY1731LckExceedThreshold, hwDot3ahEfmVariableRequestTx=hwDot3ahEfmVariableRequestTx, hwY1731TestIdTwoDelaySummaryStatEntry=hwY1731TestIdTwoDelaySummaryStatEntry, hwDot1agCfmMacTraceDestMepId=hwDot1agCfmMacTraceDestMepId, hwY1731TwoDelayInterval=hwY1731TwoDelayInterval, hwDot1agCfmMepPeVlan=hwDot1agCfmMepPeVlan, hwY1731StatisticTrapLogUpperLimitThreshold=hwY1731StatisticTrapLogUpperLimitThreshold, hwY1731TestIdOneWayDMReceiveRowStatus=hwY1731TestIdOneWayDMReceiveRowStatus, hwDot3ahEfmEventLogEntry=hwDot3ahEfmEventLogEntry, hwDot1agCfmFaultAlarm=hwDot1agCfmFaultAlarm, hwDot1agCfmMacPingGroup=hwDot1agCfmMacPingGroup, hwDot3ahEfmInformationRx=hwDot3ahEfmInformationRx, hwY1731TestIdSingleEndedLMReceiveTable=hwY1731TestIdSingleEndedLMReceiveTable, hwY1731AisSuppressEnable=hwY1731AisSuppressEnable, hwY1731OneDelayVariation=hwY1731OneDelayVariation, hwDot3ahEfmFunctionsSupported=hwDot3ahEfmFunctionsSupported, hwDot1agCfmMaMepFngResetTime=hwDot1agCfmMaMepFngResetTime, hwY1731SingleLossLocalAvg=hwY1731SingleLossLocalAvg, hwDot1agCfmMaNextIndex=hwDot1agCfmMaNextIndex, hwDot1agCfmMdFormatName=hwDot1agCfmMdFormatName, hwDot1agCfmMacTraceReplyIngressMac=hwDot1agCfmMacTraceReplyIngressMac, hwY1731TestIdSingleSynLossOnDemandStartTime=hwY1731TestIdSingleSynLossOnDemandStartTime, hwY1731AisSuppressStatus=hwY1731AisSuppressStatus, hwY1731StatisticTrapLogValue=hwY1731StatisticTrapLogValue, hwDot1agCfmMacTraceSendSeqNumber=hwDot1agCfmMacTraceSendSeqNumber, hwY1731MulPingRecvTimeDelayAvg=hwY1731MulPingRecvTimeDelayAvg, hwDot1agCfmGmacTraceEntry=hwDot1agCfmGmacTraceEntry, hwY1731SingleLossLocalMin=hwY1731SingleLossLocalMin, hwY1731SingleLossMacAddress=hwY1731SingleLossMacAddress, hwDot1agCfmMacTraceReplySeqNumber=hwDot1agCfmMacTraceReplySeqNumber, hwY1731TestIdSingleSynEndedLMReceiveTableGroup=hwY1731TestIdSingleSynEndedLMReceiveTableGroup, hwDot1agCfmMacTraceTable=hwDot1agCfmMacTraceTable, hwY1731SingleLossRemoteAvg=hwY1731SingleLossRemoteAvg, hwDot1agCfmMacTraceGroup=hwDot1agCfmMacTraceGroup, hwY1731OneDelayOnDemandStartTime=hwY1731OneDelayOnDemandStartTime, hwDot1agCfmMdRowStatus=hwDot1agCfmMdRowStatus, hwDot3ahEfmThresholdTriggerErrDown=hwDot3ahEfmThresholdTriggerErrDown, hwDot3ahEfmTriggerIfDown=hwDot3ahEfmTriggerIfDown, hwY1731SingleLossLocalStatistic=hwY1731SingleLossLocalStatistic, hwY1731TestIdOneWayDMReceiveEntry=hwY1731TestIdOneWayDMReceiveEntry, hwY1731SingleLossRecvLocal=hwY1731SingleLossRecvLocal, hwY1731StatisticTrapLogValueHigh=hwY1731StatisticTrapLogValueHigh, hwDot3ahEvrrpGroup=hwDot3ahEvrrpGroup, hwDot3ahEfmVariableRequestRx=hwDot3ahEfmVariableRequestRx, hwDot1agCfmRMepEntry=hwDot1agCfmRMepEntry, hwY1731ConfigGroup=hwY1731ConfigGroup, hwY1731TestIdSingleSynLossRemote=hwY1731TestIdSingleSynLossRemote, hwDot1agCfmMacTraceReplyRecvOrder=hwDot1agCfmMacTraceReplyRecvOrder, hwY1731TestIdSingleEndedLMSendEntry=hwY1731TestIdSingleEndedLMSendEntry, hwY1731LckMaxPktNum=hwY1731LckMaxPktNum, hwDot3ahEfmLoopbackControlTx=hwDot3ahEfmLoopbackControlTx, hwY1731SingleLossRecv8021pValue=hwY1731SingleLossRecv8021pValue, hwY1731StatisticTrapLogTable=hwY1731StatisticTrapLogTable, hwY1731TestIdSingleLossLocalRatio=hwY1731TestIdSingleLossLocalRatio, hwEthOam3ah=hwEthOam3ah, hwDot3ahEfmCriticalEventEnable=hwDot3ahEfmCriticalEventEnable, hwDot1agCfmGmacTraceDot1qVlan=hwDot1agCfmGmacTraceDot1qVlan, hwY1731TestIdSingleEndedLMReceiveRowStatus=hwY1731TestIdSingleEndedLMReceiveRowStatus, hwY1731TestIdSingleSynLossLossRemote=hwY1731TestIdSingleSynLossLossRemote, hwY1731TwoDelayEnable=hwY1731TwoDelayEnable, hwDot3ahEfmErrSymbolPeriodEventGroup=hwDot3ahEfmErrSymbolPeriodEventGroup, hwY1731StatisticTrapLogLowerLimitThreshold=hwY1731StatisticTrapLogLowerLimitThreshold, hwY1731OneDelayMacAddress=hwY1731OneDelayMacAddress, hwY1731TwoDelayMacAddress=hwY1731TwoDelayMacAddress, hwTestMessageSendPackets=hwTestMessageSendPackets, hwDot1agCfmMacPingCount=hwDot1agCfmMacPingCount, hwDot1agCfmMacPingRowStatus=hwDot1agCfmMacPingRowStatus, hwDot1agCfmMacPingDestMepId=hwDot1agCfmMacPingDestMepId, hwY1731TestIdTwoDelayVariationAve=hwY1731TestIdTwoDelayVariationAve, hwDot3ahEfmLoopbackGroup=hwDot3ahEfmLoopbackGroup, hwTestMessageGroup=hwTestMessageGroup, hwY1731TwoDelayRecvMepId=hwY1731TwoDelayRecvMepId, hwY1731SingleLossRemoteMax=hwY1731SingleLossRemoteMax, hwY1731TestIdOneWayDMSendEntry=hwY1731TestIdOneWayDMSendEntry, hwDot3ahEfmMaxOamPduSize=hwDot3ahEfmMaxOamPduSize, hwY1731TestIdSingleSynEndedLMReceiveEntry=hwY1731TestIdSingleSynEndedLMReceiveEntry, hwY1731TwoDelayStatisticMin=hwY1731TwoDelayStatisticMin, hwDot3ahEfmPeerEntry=hwDot3ahEfmPeerEntry, hwY1731OneDelayRecvEnable=hwY1731OneDelayRecvEnable, hwDot3ahEfmNonThresholdRecovery=hwDot3ahEfmNonThresholdRecovery, hwY1731OneDelayRecv8021pValue=hwY1731OneDelayRecv8021pValue, hwY1731SingleLossSummaryStatTable=hwY1731SingleLossSummaryStatTable, hwDot1agCfmEnabled=hwDot1agCfmEnabled, hwY1731TestIdSingleSynEndedLMSendTable=hwY1731TestIdSingleSynEndedLMSendTable, hwY1731MulPingTable=hwY1731MulPingTable, hwY1731SingleLossSendRemote=hwY1731SingleLossSendRemote, hwY1731MulPingIndex=hwY1731MulPingIndex, hwDot3ahEvrrpCpuState=hwDot3ahEvrrpCpuState, hwY1731OneDelayStatistic=hwY1731OneDelayStatistic, hwDot1agCfmGmacTraceVlanValue=hwDot1agCfmGmacTraceVlanValue, hwDot3ahEfmUniqueEventNotificationRx=hwDot3ahEfmUniqueEventNotificationRx, hwY1731Statistic=hwY1731Statistic, hwDot1agCfmMacTraceTimeOut=hwDot1agCfmMacTraceTimeOut, hwY1731TestIdentifier=hwY1731TestIdentifier, hwCfmVlanTwoDelayTrapLogTimestamp=hwCfmVlanTwoDelayTrapLogTimestamp, hwCfmTwoDelayRecoveryTrapMacAddress=hwCfmTwoDelayRecoveryTrapMacAddress, hwY1731TestIdTwoDelayStatTable=hwY1731TestIdTwoDelayStatTable, hwY1731TestIdTwoDelayBelowLowLimitNum=hwY1731TestIdTwoDelayBelowLowLimitNum, hwY1731TestIdSingleEndedLMSendRowStatus=hwY1731TestIdSingleEndedLMSendRowStatus, hwDot1agCfmMacTraceMaName=hwDot1agCfmMacTraceMaName, hwDot1agCfmMipLevel=hwDot1agCfmMipLevel, hwEthOamTraps=hwEthOamTraps, hwDot3ahEfmErrFrameSecsSummaryEventGroup=hwDot3ahEfmErrFrameSecsSummaryEventGroup, hwY1731TestIdDescription=hwY1731TestIdDescription, hwY1731TwoDelayStatisticAvg=hwY1731TwoDelayStatisticAvg, hwY1731TestIdSingleSynLossLocalReceive=hwY1731TestIdSingleSynLossLocalReceive, hwDot3ahEfmEventLogTable=hwDot3ahEfmEventLogTable, hwY1731TestIdTwoWayDMSendTable=hwY1731TestIdTwoWayDMSendTable, hwY1731OneDelayThreshold=hwY1731OneDelayThreshold, hwY1731TestIdTwoDelayStatEntry=hwY1731TestIdTwoDelayStatEntry, hwY1731ResetStatisticEntry=hwY1731ResetStatisticEntry, hwDot1agCfmMaRowStatus=hwDot1agCfmMaRowStatus, hwY1731SingleLossCount=hwY1731SingleLossCount, hwDot1agCfmMepMacAddress=hwDot1agCfmMepMacAddress, hwCfmVlanTwoDelayRecoveryTrapLogDelayValue=hwCfmVlanTwoDelayRecoveryTrapLogDelayValue, hwY1731DualLossDestMepId=hwY1731DualLossDestMepId, hwDot3ahEfmErrSymPeriodThresholdLo=hwDot3ahEfmErrSymPeriodThresholdLo, hwDot1agCfmRMepStateIsUp=hwDot1agCfmRMepStateIsUp, hwCfmVlanOneDelayTrapLogThreshold=hwCfmVlanOneDelayTrapLogThreshold, hwDot1agCfmMacPingMacAddress=hwDot1agCfmMacPingMacAddress, hwCfmVlanOneDelayRecoveryTrapLogDelayValue=hwCfmVlanOneDelayRecoveryTrapLogDelayValue, hwY1731TestIdOneDelayOnDemandStartTime=hwY1731TestIdOneDelayOnDemandStartTime, hwDot1agCfmMaEntry=hwDot1agCfmMaEntry, hwY1731TestIdOneWayDMReceiveIsContinue=hwY1731TestIdOneWayDMReceiveIsContinue, hwDot1agCfmMaGroup=hwDot1agCfmMaGroup, hwDot1agCfmMacTraceReplyForwarded=hwDot1agCfmMacTraceReplyForwarded, hwY1731TestIdSingleLossSummaryStatTable=hwY1731TestIdSingleLossSummaryStatTable, hwDot3ahEfmAdminState=hwDot3ahEfmAdminState, hwY1731TestId8021pValue=hwY1731TestId8021pValue, hwDot3ahEfmErrFrameEventGroup=hwDot3ahEfmErrFrameEventGroup, hwY1731TestIdOneWayDMSendInterval=hwY1731TestIdOneWayDMSendInterval, hwDot1agCfmMacPingSendPacketNum=hwDot1agCfmMacPingSendPacketNum, hwDot3ahEfmPeerMode=hwDot3ahEfmPeerMode, hwY1731TestIdSingleEndedLMReceiveEntry=hwY1731TestIdSingleEndedLMReceiveEntry, hwY1731TestIdTwoWayDMReceiveEntry=hwY1731TestIdTwoWayDMReceiveEntry, hwY1731TestIdSingleSynLossNbrSamples=hwY1731TestIdSingleSynLossNbrSamples, hwY1731MulPingRecvTimeDelayMin=hwY1731MulPingRecvTimeDelayMin, hwY1731TestIdSingleLossBelowRemotelowLimitNum=hwY1731TestIdSingleLossBelowRemotelowLimitNum, hwY1731GlobalObject=hwY1731GlobalObject, hwDot1agCfmMaMapVsiName=hwDot1agCfmMaMapVsiName, hwDot1agCfmMipEntry=hwDot1agCfmMipEntry, hwDot1agCfmGmacTraceIndex=hwDot1agCfmGmacTraceIndex, hwCfmVlanTwoDelayTrapLogTable=hwCfmVlanTwoDelayTrapLogTable, hwY1731SingleLossMepId=hwY1731SingleLossMepId, hwDot3ahEfmOperStatus=hwDot3ahEfmOperStatus, hwY1731ConfigEntry=hwY1731ConfigEntry, hwY1731OneDelayEnable=hwY1731OneDelayEnable, hwY1731TestIdDestMepMacAddress=hwY1731TestIdDestMepMacAddress, hwDot1agCfmMaFormatName=hwDot1agCfmMaFormatName, hwCfmVlanOneDelayTrapLogTable=hwCfmVlanOneDelayTrapLogTable, hwDot1agCfmGmacTraceReplyHostInfo=hwDot1agCfmGmacTraceReplyHostInfo, hwY1731TestIdSingleSynRecvLocal=hwY1731TestIdSingleSynRecvLocal, hwY1731TestIdTwoWayDMSendInterval=hwY1731TestIdTwoWayDMSendInterval, HWDot3Oui=HWDot3Oui, hwDot1agCfmRMepCcmRecvEnabled=hwDot1agCfmRMepCcmRecvEnabled, hwY1731SingleLossRecvRemote=hwY1731SingleLossRecvRemote, hwDot1agCfmGmacTraceMacAddress=hwDot1agCfmGmacTraceMacAddress, hwDot1agCfmMepIsVlanType=hwDot1agCfmMepIsVlanType, hwDot1agCfmMacPingMdName=hwDot1agCfmMacPingMdName, hwDot1agCfmMacTraceMacAddress=hwDot1agCfmMacTraceMacAddress, hwY1731TestIdStatisticResetTable=hwY1731TestIdStatisticResetTable, hwDot3ahEfmPeerTable=hwDot3ahEfmPeerTable, hwY1731SingleLossBelowRemotelowLimitNum=hwY1731SingleLossBelowRemotelowLimitNum, hwY1731TestIdSingleSynBelowRemoteLowLimitNum=hwY1731TestIdSingleSynBelowRemoteLowLimitNum, hwY1731TestIdSingleSynLossStatTable=hwY1731TestIdSingleSynLossStatTable)
mibBuilder.exportSymbols("HUAWEI-ETHOAM-MIB", hwY1731TestIdSingleSynEndedLMSendRowStatus=hwY1731TestIdSingleSynEndedLMSendRowStatus, hwDot3ahEfmEventLogThresholdLo=hwDot3ahEfmEventLogThresholdLo, hwDot1agCfmMacPingPacketSize=hwDot1agCfmMacPingPacketSize, hwCfmVlanOneDelayRecoveryTrapLogThreshold=hwCfmVlanOneDelayRecoveryTrapLogThreshold, hwDot1agCfmMacPingPacketLossRatio=hwDot1agCfmMacPingPacketLossRatio, hwY1731TestIdSingleSynLossSummaryStatTable=hwY1731TestIdSingleSynLossSummaryStatTable, hwY1731TestIdTwoWayDMReceiveRowStatus=hwY1731TestIdTwoWayDMReceiveRowStatus, hwY1731LckUpperThreshold=hwY1731LckUpperThreshold, hwY1731RemoteIp=hwY1731RemoteIp, hwY1731OneDelayMax=hwY1731OneDelayMax, hwDot1agCfmQueryMaIndexGroup=hwDot1agCfmQueryMaIndexGroup, hwCfmVlanOneDelayRcoverTrapLogTable=hwCfmVlanOneDelayRcoverTrapLogTable, hwY1731TestIdSingleSynLossLocalRatio=hwY1731TestIdSingleSynLossLocalRatio, hwDot1agCfmMepGroup=hwDot1agCfmMepGroup, hwDot3ahEfmEventLogValue=hwDot3ahEfmEventLogValue, hwCfmVlanOneDelayTrapLogEntry=hwCfmVlanOneDelayTrapLogEntry, hwY1731TwoDelayAvg=hwY1731TwoDelayAvg, hwDot1agCfmMacTraceReplyIngressAction=hwDot1agCfmMacTraceReplyIngressAction, hwY1731OneDelayRecvMepId=hwY1731OneDelayRecvMepId, hwY1731MulPingRecvTimeDelayMax=hwY1731MulPingRecvTimeDelayMax, hwTestMessagePacketSize=hwTestMessagePacketSize, hwY1731TestIdSingleLossRemote=hwY1731TestIdSingleLossRemote, hwY1731StatisticTrapLogEntry=hwY1731StatisticTrapLogEntry, hwDot1agCfmMepCeVlan=hwDot1agCfmMepCeVlan, hwDot1agCfmUnexpectedMACCleared=hwDot1agCfmUnexpectedMACCleared, hwY1731SingleLossSummaryStatTableGroup=hwY1731SingleLossSummaryStatTableGroup, hwY1731TestIdOnwardMacAddress=hwY1731TestIdOnwardMacAddress, hwDot1agCfmMdGroup=hwDot1agCfmMdGroup, hwY1731TestIdSingleLossBelowLocallowLimitNum=hwY1731TestIdSingleLossBelowLocallowLimitNum, hwCfmVlanOnewayDelay=hwCfmVlanOnewayDelay, hwY1731ResetStatisticType=hwY1731ResetStatisticType, hwDot1agCfmMacTraceReplyGroup=hwDot1agCfmMacTraceReplyGroup, hwDot3ahEfmLoopbackIgnoreRx=hwDot3ahEfmLoopbackIgnoreRx, hwY1731TestIdSingleSynLossLocalSend=hwY1731TestIdSingleSynLossLocalSend, hwDot1agCfmMaCcmInterval=hwDot1agCfmMaCcmInterval, hwY1731TwoDelayOnDemandStartTime=hwY1731TwoDelayOnDemandStartTime, hwY1731SingleLossStatistic8021pValue=hwY1731SingleLossStatistic8021pValue, hwY1731TestIdSingleSynEndedLMReceiveRowStatus=hwY1731TestIdSingleSynEndedLMReceiveRowStatus, hwDot1agCfmMacTraceReplyEntry=hwDot1agCfmMacTraceReplyEntry, hwY1731SingleLossLossRemote=hwY1731SingleLossLossRemote, hwCfmVlanTwoDelayTrapLogEntry=hwCfmVlanTwoDelayTrapLogEntry, hwCfmVlanTwoDelayTrapLogDelayValue=hwCfmVlanTwoDelayTrapLogDelayValue, hwY1731SingleLossIsContinue=hwY1731SingleLossIsContinue, hwY1731StatisticTable=hwY1731StatisticTable, hwDot1agCfmUnexpectedMEP=hwDot1agCfmUnexpectedMEP, hwTestMessageResultEntry=hwTestMessageResultEntry, hwY1731MulPingReplyMepId=hwY1731MulPingReplyMepId, hwY1731OneDelayInterval=hwY1731OneDelayInterval, hwY1731TestIdTwoDelayMax=hwY1731TestIdTwoDelayMax, hwDot1agCfmGmacTraceReplyIngressIfName=hwDot1agCfmGmacTraceReplyIngressIfName, hwY1731AisLowDot1qVlan=hwY1731AisLowDot1qVlan, hwY1731TestIdTwoDelayOnDemandStartTime=hwY1731TestIdTwoDelayOnDemandStartTime, hwDot1agCfmUnexpectedMEPCleared=hwDot1agCfmUnexpectedMEPCleared, hwY1731StatisticEntry=hwY1731StatisticEntry, hwY1731AisConfigPeVlan=hwY1731AisConfigPeVlan, hwY1731ResvIndex=hwY1731ResvIndex, hwY1731TestIdSingleSynBelowLocalLowLimitNum=hwY1731TestIdSingleSynBelowLocalLowLimitNum, hwCfmVlanTwowayDelayRecovery=hwCfmVlanTwowayDelayRecovery, hwY1731TestIdIsUpdateOnwardMacAddress=hwY1731TestIdIsUpdateOnwardMacAddress, hwDot1agCfmUnexpectedMEGLevelCleared=hwDot1agCfmUnexpectedMEGLevelCleared, hwDot3ahEfmObject=hwDot3ahEfmObject, hwDot1agCfmMacPingTable=hwDot1agCfmMacPingTable, hwDot1agCfmQueryMaIndex=hwDot1agCfmQueryMaIndex, hwDot1agCfmMacPingOutIfIndex=hwDot1agCfmMacPingOutIfIndex, hwDot1agCfmMacTraceReplyEgressAction=hwDot1agCfmMacTraceReplyEgressAction, hwDot1agCfmRMepMacAddress=hwDot1agCfmRMepMacAddress, hwDot1agCfmQueryMaIndexEntry=hwDot1agCfmQueryMaIndexEntry, hwY1731OneDelayDestMepId=hwY1731OneDelayDestMepId, hwDot1agCfmRMepGroup=hwDot1agCfmRMepGroup, hwY1731AisVlanGroup=hwY1731AisVlanGroup, hwY1731TestIdDownlink8021p=hwY1731TestIdDownlink8021p, hwY1731TestIdTwoDelayVariation=hwY1731TestIdTwoDelayVariation, hwDot1agCfmMismerge=hwDot1agCfmMismerge, hwY1731TestIdTwoDelayExceedUpLimitNum=hwY1731TestIdTwoDelayExceedUpLimitNum, hwDot1agCfmRMepRowStatus=hwDot1agCfmRMepRowStatus, hwTestMessageInterface=hwTestMessageInterface, hwDot1agCfmGmacTraceRowStatus=hwDot1agCfmGmacTraceRowStatus, hwY1731LckLowerThreshold=hwY1731LckLowerThreshold, hwDot1agCfmMaFormat=hwDot1agCfmMaFormat, hwY1731OneDelayIsContinue=hwY1731OneDelayIsContinue, hwDot3ahEfmDyingGaspEnable=hwDot3ahEfmDyingGaspEnable, hwY1731MulPingMdName=hwY1731MulPingMdName, hwY1731TestIdLocalMepId=hwY1731TestIdLocalMepId, hwDot1agCfmMepTable=hwDot1agCfmMepTable, HWDot1agCfmHighestDefectPri=HWDot1agCfmHighestDefectPri, hwDot1agCfmGmacTraceReplyEgressMac=hwDot1agCfmGmacTraceReplyEgressMac, hwY1731AisTable=hwY1731AisTable, hwY1731LckCurrentPktNum=hwY1731LckCurrentPktNum, hwY1731MulPingReplyEntry=hwY1731MulPingReplyEntry, hwDot3ahEfmEventLogThresholdHi=hwDot3ahEfmEventLogThresholdHi, hwY1731TestIdSingleSynExceedRemoteUpLimitNum=hwY1731TestIdSingleSynExceedRemoteUpLimitNum, hwY1731AisHighDot1qVlan=hwY1731AisHighDot1qVlan, hwY1731MulPingGroup=hwY1731MulPingGroup, hwDot1agCfmQueryMdIndexEntry=hwDot1agCfmQueryMdIndexEntry, hwDot3ahEfmErrSymPeriodWindowHi=hwDot3ahEfmErrSymPeriodWindowHi, hwDot1agCfmMPAddressModel=hwDot1agCfmMPAddressModel, hwDot3ahEfmEventConfigTable=hwDot3ahEfmEventConfigTable, HWDot1agCfmMDLevel=HWDot1agCfmMDLevel, hwTestMessage=hwTestMessage, hwTestMessageSendEnabled=hwTestMessageSendEnabled, hwCfmVlanOnewayDelayRecovery=hwCfmVlanOnewayDelayRecovery, hwY1731MulPingState=hwY1731MulPingState, hwY1731SingleLossLocalRatioMin=hwY1731SingleLossLocalRatioMin, hwTestMessageTable=hwTestMessageTable, hwY1731SingleLossOnDemandStartTime=hwY1731SingleLossOnDemandStartTime, hwY1731MulPingReplyGroup=hwY1731MulPingReplyGroup, hwY1731TestIdOneDelayStatEntry=hwY1731TestIdOneDelayStatEntry, hwDot3ahEfmEventLogWindowHi=hwDot3ahEfmEventLogWindowHi, hwDot3ahEfmErrSymPeriodThresholdHi=hwDot3ahEfmErrSymPeriodThresholdHi, hwY1731TwoDelayDestMepId=hwY1731TwoDelayDestMepId, hwDot3ahEfmDetectMalfunction=hwDot3ahEfmDetectMalfunction, hwY1731TestIdTwoDelayVariationNbrSamples=hwY1731TestIdTwoDelayVariationNbrSamples, hwY1731MulPingReplySeqNumber=hwY1731MulPingReplySeqNumber, hwY1731TestIdGroup=hwY1731TestIdGroup, hwY1731TestIdSingleSynEndedLMSendInterval=hwY1731TestIdSingleSynEndedLMSendInterval, hwDot3ahEfmErrFramePeriodWindow=hwDot3ahEfmErrFramePeriodWindow, hwY1731SingleLossDestMepId=hwY1731SingleLossDestMepId, hwY1731TestIdTwoWayDMReceiveTable=hwY1731TestIdTwoWayDMReceiveTable, hwY1731TwoDelayMepId=hwY1731TwoDelayMepId, hwY1731TestIdStatisticResetTableGroup=hwY1731TestIdStatisticResetTableGroup, hwY1731AisVlanConfigTable=hwY1731AisVlanConfigTable, hwY1731StatisticTrapLog8021pPriority=hwY1731StatisticTrapLog8021pPriority, hwY1731ResetStatistic8021pValue=hwY1731ResetStatistic8021pValue, hwY1731TestIdSingleLossSummaryStatEntry=hwY1731TestIdSingleLossSummaryStatEntry, hwY1731TestIdSingleLossSequence=hwY1731TestIdSingleLossSequence, hwY1731AisLinkStatusTable=hwY1731AisLinkStatusTable, hwDot1agCfmMepDot1qVlan=hwDot1agCfmMepDot1qVlan, hwDot3ahEfmDetectInterval=hwDot3ahEfmDetectInterval, hwY1731MulPingMepId=hwY1731MulPingMepId, hwDot3ahEfmStatsTable=hwDot3ahEfmStatsTable, hwDot3ahEfmErrFrameSecsSummaryThreshold=hwDot3ahEfmErrFrameSecsSummaryThreshold, hwY1731SingleLossRemoteRatio=hwY1731SingleLossRemoteRatio, hwDot3ahEfmThresholdEvent=hwDot3ahEfmThresholdEvent, hwY1731StatisticObject=hwY1731StatisticObject, hwY1731TestIdOneWayDMSendPacketSize=hwY1731TestIdOneWayDMSendPacketSize, hwY1731SingleLossRecvMepId=hwY1731SingleLossRecvMepId, hwY1731TestIdOneWayDMSendTable=hwY1731TestIdOneWayDMSendTable, hwDot3ahEfmPeerVendorInfo=hwDot3ahEfmPeerVendorInfo, hwY1731TestIdSingleSynEndedLMSendIsContinue=hwY1731TestIdSingleSynEndedLMSendIsContinue, hwDot1agCfmGmacTraceReplyIngressMac=hwDot1agCfmGmacTraceReplyIngressMac, hwY1731MulPingMaName=hwY1731MulPingMaName, hwDot3ahEfmMode=hwDot3ahEfmMode, hwY1731TwoDelayStatistic8021pValue=hwY1731TwoDelayStatistic8021pValue, hwY1731AisEntry=hwY1731AisEntry, hwY1731OneDelayPacketSize=hwY1731OneDelayPacketSize, hwDot3ahEfmEnabled=hwDot3ahEfmEnabled, hwDot3ahEfmErrFramePeriodThreshold=hwDot3ahEfmErrFramePeriodThreshold, hwDot3ahEfmErrFramePeriodEvNotifEnable=hwDot3ahEfmErrFramePeriodEvNotifEnable, hwDot3ahEvrrpHoldUpTime=hwDot3ahEvrrpHoldUpTime, hwDot1agCfmLOCCleared=hwDot1agCfmLOCCleared, hwY1731TestIdSingleSynEndedLMSendEntry=hwY1731TestIdSingleSynEndedLMSendEntry, hwY1731TestIdSingleLossStatTableGroup=hwY1731TestIdSingleLossStatTableGroup, hwY1731StatisticTrapLogType=hwY1731StatisticTrapLogType, hwY1731AisVlanTable=hwY1731AisVlanTable, hwY1731TestIdSingleEndedLMSendGroup=hwY1731TestIdSingleEndedLMSendGroup, HWTestMessageFinishedValue=HWTestMessageFinishedValue, hwY1731TestIdTable=hwY1731TestIdTable, hwCfmVlanTwoDelayRecoveryTrapLogDelayValueHigh=hwCfmVlanTwoDelayRecoveryTrapLogDelayValueHigh, hwDot1agCfmQueryMdName=hwDot1agCfmQueryMdName, hwDot3ahEfmEventLogRunningTotal=hwDot3ahEfmEventLogRunningTotal, hwY1731TestIdSingleLossRemoteRatio=hwY1731TestIdSingleLossRemoteRatio, hwCfmVlanTwoDelayRecoveryTrapLogThreshold=hwCfmVlanTwoDelayRecoveryTrapLogThreshold, hwDot3ahEfmTimeout=hwDot3ahEfmTimeout, hwY1731AisDefectAlarmRecovery=hwY1731AisDefectAlarmRecovery, hwY1731TestIdSingleLossSendRemote=hwY1731TestIdSingleLossSendRemote, hwY1731StatisticClear=hwY1731StatisticClear, hwEthOamMib=hwEthOamMib, hwY1731TestIdSingleSynLossUnack=hwY1731TestIdSingleSynLossUnack, hwY1731TestIdOneDelayStatTable=hwY1731TestIdOneDelayStatTable, hwY1731SingleLossNbrSamples=hwY1731SingleLossNbrSamples, hwY1731OneDelayMepId=hwY1731OneDelayMepId, hwDot3ahEfmEventLogOui=hwDot3ahEfmEventLogOui, hwY1731TestIdSingleLossLossRemote=hwY1731TestIdSingleLossLossRemote, hwY1731TestIdOneDelayVariation=hwY1731TestIdOneDelayVariation, hwY1731TestIdTwoDelayAve=hwY1731TestIdTwoDelayAve, hwY1731SingleLossRemoteRatioMin=hwY1731SingleLossRemoteRatioMin, hwDot1agCfmUnexpectedPeriodCleared=hwDot1agCfmUnexpectedPeriodCleared, hwDot1agCfmMacPingDestIsMepId=hwDot1agCfmMacPingDestIsMepId, hwDot3ahEfmDuplicateEventNotificationRx=hwDot3ahEfmDuplicateEventNotificationRx, hwY1731TestIdTwoDelayStatTableGroup=hwY1731TestIdTwoDelayStatTableGroup, hwTestMessageBeginTimeStamp=hwTestMessageBeginTimeStamp, hwY1731AisExceedMaxPktNum=hwY1731AisExceedMaxPktNum, hwY1731TestIdResetStatisticType=hwY1731TestIdResetStatisticType, hwDot3ahEfmPeerMacAddress=hwDot3ahEfmPeerMacAddress, hwY1731AisRowStatus=hwY1731AisRowStatus, hwDot1agCfmQueryObject=hwDot1agCfmQueryObject, hwDot3ahEfmVariableResponseTx=hwDot3ahEfmVariableResponseTx, hwY1731AisDefectAlarm=hwY1731AisDefectAlarm, hwY1731MulPingRowStatus=hwY1731MulPingRowStatus, hwEthOamGroups=hwEthOamGroups, hwY1731OneDelayStatisticAvg=hwY1731OneDelayStatisticAvg, hwCfmVlanOneDelayRecoveryTrapLogDelayValueLow=hwCfmVlanOneDelayRecoveryTrapLogDelayValueLow, hwY1731MulPingTimeout=hwY1731MulPingTimeout, hwY1731TestIdSingleLossLossLocal=hwY1731TestIdSingleLossLossLocal, hwDot1agCfmMdFormat=hwDot1agCfmMdFormat, hwDot1agCfmMacTraceTTL=hwDot1agCfmMacTraceTTL, hwDot1agCfmMdObject=hwDot1agCfmMdObject, hwDot3ahEfmDetectModeEntry=hwDot3ahEfmDetectModeEntry, hwDot1agCfmMacPingPriority=hwDot1agCfmMacPingPriority, hwDot3ahEfmLoopbackControlRx=hwDot3ahEfmLoopbackControlRx, hwDot1agCfmMacPingRecvTimeDelayMax=hwDot1agCfmMacPingRecvTimeDelayMax, hwY1731TestIdTwoDelayMin=hwY1731TestIdTwoDelayMin, hwY1731TestIdMaName=hwY1731TestIdMaName, hwDot1agCfmMdTableNextIndex=hwDot1agCfmMdTableNextIndex, hwY1731TestIdSingleEndedLMSendInterval=hwY1731TestIdSingleEndedLMSendInterval, hwY1731TwoDelayStatisticMax=hwY1731TwoDelayStatisticMax, hwCfmVlanOneDelayTrapLogTimestamp=hwCfmVlanOneDelayTrapLogTimestamp, hwDot1agCfmGmacTraceSendSeqNumber=hwDot1agCfmGmacTraceSendSeqNumber, hwDot3ahEfmErrSymPeriodEvNotifEnable=hwDot3ahEfmErrSymPeriodEvNotifEnable, hwY1731TestIdTwoDelayVarExceedUpLimitNum=hwY1731TestIdTwoDelayVarExceedUpLimitNum, hwDot1agCfmRDI=hwDot1agCfmRDI, hwDot3ahEfmOrgSpecificTx=hwDot3ahEfmOrgSpecificTx, hwY1731OneDelayStatisticMax=hwY1731OneDelayStatisticMax, hwDot1agCfmMaRmepActiveTime=hwDot1agCfmMaRmepActiveTime, hwDot3ahEfmLoopbackEntry=hwDot3ahEfmLoopbackEntry, hwEthOamY1731=hwEthOamY1731, hwY1731TwoDelayUnresponsivePacketCount=hwY1731TwoDelayUnresponsivePacketCount, hwY1731TestIdOneDelaySequence=hwY1731TestIdOneDelaySequence, hwY1731OneDelayStatisticMin=hwY1731OneDelayStatisticMin, hwY1731LckExceedThresholdRecovery=hwY1731LckExceedThresholdRecovery, hwY1731LckDefect=hwY1731LckDefect, hwY1731ServiceType=hwY1731ServiceType, hwDot3ahEfmManagerEntry=hwDot3ahEfmManagerEntry, hwTestMessageObject=hwTestMessageObject, hwY1731SingleLoss8021pValue=hwY1731SingleLoss8021pValue, hwDot1agCfmGmacTraceReplyEgressIfName=hwDot1agCfmGmacTraceReplyEgressIfName, hwY1731TwoDelayIsContinue=hwY1731TwoDelayIsContinue, hwY1731TestIdTwoDelayIndex=hwY1731TestIdTwoDelayIndex, hwDot1agCfmVersion=hwDot1agCfmVersion, hwDot1agCfmMdMhfCreation=hwDot1agCfmMdMhfCreation, hwDot3ahEfmUnsupportedCodesTx=hwDot3ahEfmUnsupportedCodesTx, hwY1731TestIdTwoDelaySummaryStatTable=hwY1731TestIdTwoDelaySummaryStatTable, hwY1731TestIdSingleSynLossRemoteRatio=hwY1731TestIdSingleSynLossRemoteRatio, hwY1731TestIdSingleEndedLMSendTable=hwY1731TestIdSingleEndedLMSendTable, hwY1731TestIdSingleSynLossSequence=hwY1731TestIdSingleSynLossSequence, hwTestMessageRowStatus=hwTestMessageRowStatus, hwDot1agCfmRDICleared=hwDot1agCfmRDICleared, hwY1731TestIdSingleLossLocal=hwY1731TestIdSingleLossLocal, hwCfmVlanTwoDelayRcoverTrapLogEntry=hwCfmVlanTwoDelayRcoverTrapLogEntry, hwY1731ResetStatisticGroup=hwY1731ResetStatisticGroup, hwCfmVlanOneDelayRecoveryTrapLogDelayValueHigh=hwCfmVlanOneDelayRecoveryTrapLogDelayValueHigh, hwY1731TwoDelayRecvEnable=hwY1731TwoDelayRecvEnable, hwY1731TwoDelayMin=hwY1731TwoDelayMin, hwY1731AisMaxPktNum=hwY1731AisMaxPktNum)
