#
# PySNMP MIB module TRAFFIC-TEMPLATE-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/TRAFFIC-TEMPLATE-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 21:19:31 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ValueRangeConstraint, ValueSizeConstraint, SingleValueConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ValueRangeConstraint", "ValueSizeConstraint", "SingleValueConstraint", "ConstraintsUnion")
hpSwitch, = mibBuilder.importSymbols("HP-ICF-OID", "hpSwitch")
PortList, = mibBuilder.importSymbols("Q-BRIDGE-MIB", "PortList")
NotificationGroup, ObjectGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ObjectGroup", "ModuleCompliance")
Integer32, Bits, Gauge32, ObjectIdentity, Counter64, ModuleIdentity, IpAddress, TimeTicks, iso, MibIdentifier, Unsigned32, Counter32, MibScalar, MibTable, MibTableRow, MibTableColumn, NotificationType = mibBuilder.importSymbols("SNMPv2-SMI", "Integer32", "Bits", "Gauge32", "ObjectIdentity", "Counter64", "ModuleIdentity", "IpAddress", "TimeTicks", "iso", "MibIdentifier", "Unsigned32", "Counter32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "NotificationType")
TextualConvention, RowStatus, TruthValue, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "RowStatus", "TruthValue", "DisplayString")
hpicfTrafficTemplateMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 72))
hpicfTrafficTemplateMIB.setRevisions(('2012-02-02 00:00', '2010-03-04 12:30',))
if mibBuilder.loadTexts: hpicfTrafficTemplateMIB.setLastUpdated('201202020000Z')
if mibBuilder.loadTexts: hpicfTrafficTemplateMIB.setOrganization('HP Networking')
hpicfTrafficTemplateObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 72, 1))
hpicfTrafficTemplateScalars = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 72, 1, 1))
hpSwitchTrafficTemplateSystemDefaultName = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 72, 1, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpSwitchTrafficTemplateSystemDefaultName.setStatus('current')
hpSwitchTrafficTemplate = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 72, 1, 2))
hpSwitchTrafficTemplateTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 72, 1, 2, 1), )
if mibBuilder.loadTexts: hpSwitchTrafficTemplateTable.setStatus('current')
hpSwitchTrafficTemplateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 72, 1, 2, 1, 1), ).setIndexNames((0, "TRAFFIC-TEMPLATE-MIB", "hpSwitchTrafficTemplateName"))
if mibBuilder.loadTexts: hpSwitchTrafficTemplateEntry.setStatus('current')
hpSwitchTrafficTemplateName = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 72, 1, 2, 1, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 80)))
if mibBuilder.loadTexts: hpSwitchTrafficTemplateName.setStatus('current')
hpSwitchTrafficTemplateMappedPorts = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 72, 1, 2, 1, 1, 2), PortList()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpSwitchTrafficTemplateMappedPorts.setStatus('current')
hpSwitchTrafficTemplateRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 72, 1, 2, 1, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpSwitchTrafficTemplateRowStatus.setStatus('current')
hpSwitchTrafficTemplateNumQueues = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 72, 1, 2, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 9000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpSwitchTrafficTemplateNumQueues.setStatus('current')
hpSwitchTrafficTemplatePredefined = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 72, 1, 2, 1, 1, 5), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpSwitchTrafficTemplatePredefined.setStatus('current')
hpSwitchTrafficGroupTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 72, 1, 2, 2), )
if mibBuilder.loadTexts: hpSwitchTrafficGroupTable.setStatus('current')
hpSwitchTrafficGroupEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 72, 1, 2, 2, 1), ).setIndexNames((0, "TRAFFIC-TEMPLATE-MIB", "hpSwitchTrafficTemplateName"), (0, "TRAFFIC-TEMPLATE-MIB", "hpSwitchTrafficQueue"))
if mibBuilder.loadTexts: hpSwitchTrafficGroupEntry.setStatus('current')
hpSwitchTrafficQueue = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 72, 1, 2, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 9000)))
if mibBuilder.loadTexts: hpSwitchTrafficQueue.setStatus('current')
hpSwitchTrafficGroupID = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 72, 1, 2, 2, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 15))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpSwitchTrafficGroupID.setStatus('current')
hpSwitchTrafficGroupName = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 72, 1, 2, 2, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpSwitchTrafficGroupName.setStatus('current')
hpSwitchTrafficGroupPriorityMap = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 72, 1, 2, 2, 1, 4), Bits().clone(namedValues=NamedValues(("priority0", 0), ("priority1", 1), ("priority2", 2), ("priority3", 3), ("priority4", 4), ("priority5", 5), ("priority6", 6), ("priority7", 7), ("priority8", 8), ("priority9", 9), ("priority10", 10), ("priority11", 11), ("priority12", 12), ("priority13", 13), ("priority14", 14), ("priority15", 15)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpSwitchTrafficGroupPriorityMap.setStatus('current')
hpSwitchTrafficGroupLossless = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 72, 1, 2, 2, 1, 5), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpSwitchTrafficGroupLossless.setStatus('current')
hpSwitchTrafficGroupEgressDiscardThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 72, 1, 2, 2, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("low", 1), ("medium", 2), ("high", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpSwitchTrafficGroupEgressDiscardThreshold.setStatus('current')
hpicfTrafficTempalteConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 72, 2))
hpicfTrafficTemplateGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 72, 2, 1))
hpicfTrafficTemplateCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 72, 2, 2))
hpicfTrafficTemplateScalarGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 72, 2, 1, 1)).setObjects(("TRAFFIC-TEMPLATE-MIB", "hpSwitchTrafficTemplateSystemDefaultName"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfTrafficTemplateScalarGroup = hpicfTrafficTemplateScalarGroup.setStatus('current')
hpicfTrafficTemplateGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 72, 2, 1, 2)).setObjects(("TRAFFIC-TEMPLATE-MIB", "hpSwitchTrafficTemplateMappedPorts"), ("TRAFFIC-TEMPLATE-MIB", "hpSwitchTrafficTemplateRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfTrafficTemplateGroup = hpicfTrafficTemplateGroup.setStatus('deprecated')
hpicfTrafficGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 72, 2, 1, 3)).setObjects(("TRAFFIC-TEMPLATE-MIB", "hpSwitchTrafficGroupID"), ("TRAFFIC-TEMPLATE-MIB", "hpSwitchTrafficGroupName"), ("TRAFFIC-TEMPLATE-MIB", "hpSwitchTrafficGroupPriorityMap"), ("TRAFFIC-TEMPLATE-MIB", "hpSwitchTrafficGroupLossless"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfTrafficGroup = hpicfTrafficGroup.setStatus('deprecated')
hpicfTrafficTemplateGroup2 = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 72, 2, 1, 4)).setObjects(("TRAFFIC-TEMPLATE-MIB", "hpSwitchTrafficTemplateMappedPorts"), ("TRAFFIC-TEMPLATE-MIB", "hpSwitchTrafficTemplateRowStatus"), ("TRAFFIC-TEMPLATE-MIB", "hpSwitchTrafficTemplateNumQueues"), ("TRAFFIC-TEMPLATE-MIB", "hpSwitchTrafficTemplatePredefined"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfTrafficTemplateGroup2 = hpicfTrafficTemplateGroup2.setStatus('current')
hpicfTrafficGroup2 = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 72, 2, 1, 5)).setObjects(("TRAFFIC-TEMPLATE-MIB", "hpSwitchTrafficGroupID"), ("TRAFFIC-TEMPLATE-MIB", "hpSwitchTrafficGroupName"), ("TRAFFIC-TEMPLATE-MIB", "hpSwitchTrafficGroupPriorityMap"), ("TRAFFIC-TEMPLATE-MIB", "hpSwitchTrafficGroupLossless"), ("TRAFFIC-TEMPLATE-MIB", "hpSwitchTrafficGroupEgressDiscardThreshold"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfTrafficGroup2 = hpicfTrafficGroup2.setStatus('current')
hpicfTrafficTemplateCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 72, 2, 2, 1)).setObjects(("TRAFFIC-TEMPLATE-MIB", "hpicfTrafficTemplateScalarGroup"), ("TRAFFIC-TEMPLATE-MIB", "hpicfTrafficTemplateGroup"), ("TRAFFIC-TEMPLATE-MIB", "hpicfTrafficGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfTrafficTemplateCompliance = hpicfTrafficTemplateCompliance.setStatus('deprecated')
hpicfTrafficTemplateCompliance2 = ModuleCompliance((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 72, 2, 2, 2)).setObjects(("TRAFFIC-TEMPLATE-MIB", "hpicfTrafficTemplateScalarGroup"), ("TRAFFIC-TEMPLATE-MIB", "hpicfTrafficTemplateGroup2"), ("TRAFFIC-TEMPLATE-MIB", "hpicfTrafficGroup2"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfTrafficTemplateCompliance2 = hpicfTrafficTemplateCompliance2.setStatus('current')
mibBuilder.exportSymbols("TRAFFIC-TEMPLATE-MIB", hpicfTrafficTemplateObjects=hpicfTrafficTemplateObjects, hpSwitchTrafficGroupEntry=hpSwitchTrafficGroupEntry, hpSwitchTrafficGroupLossless=hpSwitchTrafficGroupLossless, hpicfTrafficTemplateScalarGroup=hpicfTrafficTemplateScalarGroup, hpicfTrafficGroup2=hpicfTrafficGroup2, hpSwitchTrafficTemplateName=hpSwitchTrafficTemplateName, hpicfTrafficTemplateScalars=hpicfTrafficTemplateScalars, hpicfTrafficTemplateCompliances=hpicfTrafficTemplateCompliances, hpicfTrafficTemplateGroups=hpicfTrafficTemplateGroups, hpSwitchTrafficGroupPriorityMap=hpSwitchTrafficGroupPriorityMap, hpSwitchTrafficTemplateSystemDefaultName=hpSwitchTrafficTemplateSystemDefaultName, hpicfTrafficTempalteConformance=hpicfTrafficTempalteConformance, hpSwitchTrafficTemplatePredefined=hpSwitchTrafficTemplatePredefined, hpSwitchTrafficGroupName=hpSwitchTrafficGroupName, hpicfTrafficTemplateCompliance2=hpicfTrafficTemplateCompliance2, hpSwitchTrafficTemplateMappedPorts=hpSwitchTrafficTemplateMappedPorts, hpSwitchTrafficGroupEgressDiscardThreshold=hpSwitchTrafficGroupEgressDiscardThreshold, hpSwitchTrafficTemplate=hpSwitchTrafficTemplate, hpSwitchTrafficTemplateNumQueues=hpSwitchTrafficTemplateNumQueues, hpicfTrafficTemplateMIB=hpicfTrafficTemplateMIB, hpSwitchTrafficGroupID=hpSwitchTrafficGroupID, PYSNMP_MODULE_ID=hpicfTrafficTemplateMIB, hpSwitchTrafficTemplateTable=hpSwitchTrafficTemplateTable, hpSwitchTrafficGroupTable=hpSwitchTrafficGroupTable, hpSwitchTrafficTemplateEntry=hpSwitchTrafficTemplateEntry, hpicfTrafficTemplateGroup2=hpicfTrafficTemplateGroup2, hpicfTrafficTemplateCompliance=hpicfTrafficTemplateCompliance, hpicfTrafficTemplateGroup=hpicfTrafficTemplateGroup, hpSwitchTrafficQueue=hpSwitchTrafficQueue, hpSwitchTrafficTemplateRowStatus=hpSwitchTrafficTemplateRowStatus, hpicfTrafficGroup=hpicfTrafficGroup)
