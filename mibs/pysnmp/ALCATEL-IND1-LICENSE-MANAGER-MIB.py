#
# PySNMP MIB module ALCATEL-IND1-LICENSE-MANAGER-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/ALCATEL-IND1-LICENSE-MANAGER-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:02:43 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
softentIND1LicenseManager, = mibBuilder.importSymbols("ALCATEL-IND1-BASE", "softentIND1LicenseManager")
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ConstraintsUnion, ValueRangeConstraint, ConstraintsIntersection, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ConstraintsUnion", "ValueRangeConstraint", "ConstraintsIntersection", "SingleValueConstraint")
ModuleCompliance, NotificationGroup, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup", "ObjectGroup")
snmpTraps, = mibBuilder.importSymbols("SNMPv2-MIB", "snmpTraps")
Counter32, Integer32, MibScalar, MibTable, MibTableRow, MibTableColumn, ModuleIdentity, NotificationType, TimeTicks, Gauge32, Bits, Counter64, iso, Unsigned32, IpAddress, MibIdentifier, ObjectIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "Counter32", "Integer32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ModuleIdentity", "NotificationType", "TimeTicks", "Gauge32", "Bits", "Counter64", "iso", "Unsigned32", "IpAddress", "MibIdentifier", "ObjectIdentity")
RowStatus, MacAddress, DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "RowStatus", "MacAddress", "DisplayString", "TextualConvention")
aluLicenseManagerMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 54, 1))
aluLicenseManagerMIB.setRevisions(('2009-03-23 00:00',))
if mibBuilder.loadTexts: aluLicenseManagerMIB.setLastUpdated('200903230000Z')
if mibBuilder.loadTexts: aluLicenseManagerMIB.setOrganization('Alcatel-Lucent')
aluLicenseManagerMIBNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 54, 1, 0))
aluLicenseManagerMIBObjects = ObjectIdentity((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 54, 1, 1))
if mibBuilder.loadTexts: aluLicenseManagerMIBObjects.setStatus('current')
aluLicenseManagerMIBConformance = ObjectIdentity((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 54, 1, 2))
if mibBuilder.loadTexts: aluLicenseManagerMIBConformance.setStatus('current')
aluLicenseManagerMIBGroups = ObjectIdentity((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 54, 1, 2, 1))
if mibBuilder.loadTexts: aluLicenseManagerMIBGroups.setStatus('current')
aluLicenseManagerMIBCompliances = ObjectIdentity((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 54, 1, 2, 2))
if mibBuilder.loadTexts: aluLicenseManagerMIBCompliances.setStatus('current')
aluLicenseManagerLicenseExpired = NotificationType((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 54, 1, 0, 0, 1)).setObjects(("ALCATEL-IND1-LICENSE-MANAGER-MIB", "aluLicensedApplication"), ("ALCATEL-IND1-LICENSE-MANAGER-MIB", "aluLicenseTimeRemaining"))
if mibBuilder.loadTexts: aluLicenseManagerLicenseExpired.setStatus('current')
aluLicenseManagerConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 54, 1, 1, 1))
aluLicenseManagerApplyLicense = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 54, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("default", 0), ("apply", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aluLicenseManagerApplyLicense.setStatus('current')
aluLicenseManagerInfoTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 54, 1, 1, 2), )
if mibBuilder.loadTexts: aluLicenseManagerInfoTable.setStatus('current')
aluLicenseManagerInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 54, 1, 1, 2, 1), ).setIndexNames((0, "ALCATEL-IND1-LICENSE-MANAGER-MIB", "aluLicenseId"))
if mibBuilder.loadTexts: aluLicenseManagerInfoEntry.setStatus('current')
aluLicenseId = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 54, 1, 1, 2, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295)))
if mibBuilder.loadTexts: aluLicenseId.setStatus('current')
aluLicensedApplication = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 54, 1, 1, 2, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: aluLicensedApplication.setStatus('current')
aluLicenseType = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 54, 1, 1, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("demo", 1), ("permanent", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: aluLicenseType.setStatus('current')
aluLicenseTimeRemaining = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 54, 1, 1, 2, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 60))).setMaxAccess("readonly")
if mibBuilder.loadTexts: aluLicenseTimeRemaining.setStatus('current')
aluLicenseManagerFileInfoTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 54, 1, 1, 3), )
if mibBuilder.loadTexts: aluLicenseManagerFileInfoTable.setStatus('current')
aluLicenseManagerFileInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 54, 1, 1, 3, 1), ).setIndexNames((0, "ALCATEL-IND1-LICENSE-MANAGER-MIB", "aluLicenseFileIndex"))
if mibBuilder.loadTexts: aluLicenseManagerFileInfoEntry.setStatus('current')
aluLicenseFileIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 54, 1, 1, 3, 1, 1), Counter32())
if mibBuilder.loadTexts: aluLicenseFileIndex.setStatus('current')
aluSwitchMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 54, 1, 1, 3, 1, 2), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aluSwitchMacAddress.setStatus('current')
aluLicensedFileApplication = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 54, 1, 1, 3, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: aluLicensedFileApplication.setStatus('current')
aluLicenseManagerMIBCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 54, 1, 2, 2, 1)).setObjects(("ALCATEL-IND1-LICENSE-MANAGER-MIB", "aluLicenseManagerConfigGroup"), ("ALCATEL-IND1-LICENSE-MANAGER-MIB", "aluLicenseManagerInfoGroup"), ("ALCATEL-IND1-LICENSE-MANAGER-MIB", "aluLicenseManagerFileInfoGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    aluLicenseManagerMIBCompliance = aluLicenseManagerMIBCompliance.setStatus('current')
aluLicenseManagerConfigGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 54, 1, 2, 1, 1)).setObjects(("ALCATEL-IND1-LICENSE-MANAGER-MIB", "aluLicenseManagerApplyLicense"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    aluLicenseManagerConfigGroup = aluLicenseManagerConfigGroup.setStatus('current')
aluLicenseManagerInfoGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 54, 1, 2, 1, 2)).setObjects(("ALCATEL-IND1-LICENSE-MANAGER-MIB", "aluLicensedApplication"), ("ALCATEL-IND1-LICENSE-MANAGER-MIB", "aluLicenseType"), ("ALCATEL-IND1-LICENSE-MANAGER-MIB", "aluLicenseTimeRemaining"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    aluLicenseManagerInfoGroup = aluLicenseManagerInfoGroup.setStatus('current')
aluLicenseManagerNotificationsGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 54, 1, 2, 1, 3)).setObjects(("ALCATEL-IND1-LICENSE-MANAGER-MIB", "aluLicenseManagerLicenseExpired"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    aluLicenseManagerNotificationsGroup = aluLicenseManagerNotificationsGroup.setStatus('current')
aluLicenseManagerFileInfoGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 54, 1, 2, 1, 4)).setObjects(("ALCATEL-IND1-LICENSE-MANAGER-MIB", "aluSwitchMacAddress"), ("ALCATEL-IND1-LICENSE-MANAGER-MIB", "aluLicensedFileApplication"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    aluLicenseManagerFileInfoGroup = aluLicenseManagerFileInfoGroup.setStatus('current')
mibBuilder.exportSymbols("ALCATEL-IND1-LICENSE-MANAGER-MIB", aluLicenseManagerConfig=aluLicenseManagerConfig, aluLicenseManagerFileInfoEntry=aluLicenseManagerFileInfoEntry, aluLicenseManagerConfigGroup=aluLicenseManagerConfigGroup, aluLicenseManagerMIBConformance=aluLicenseManagerMIBConformance, aluLicenseManagerInfoEntry=aluLicenseManagerInfoEntry, aluLicenseType=aluLicenseType, aluLicenseManagerMIB=aluLicenseManagerMIB, aluLicenseFileIndex=aluLicenseFileIndex, aluLicensedFileApplication=aluLicensedFileApplication, aluLicenseTimeRemaining=aluLicenseTimeRemaining, aluLicenseId=aluLicenseId, aluLicenseManagerInfoGroup=aluLicenseManagerInfoGroup, aluLicenseManagerFileInfoTable=aluLicenseManagerFileInfoTable, aluLicensedApplication=aluLicensedApplication, aluSwitchMacAddress=aluSwitchMacAddress, aluLicenseManagerNotificationsGroup=aluLicenseManagerNotificationsGroup, aluLicenseManagerFileInfoGroup=aluLicenseManagerFileInfoGroup, aluLicenseManagerMIBNotifications=aluLicenseManagerMIBNotifications, aluLicenseManagerMIBCompliance=aluLicenseManagerMIBCompliance, aluLicenseManagerMIBObjects=aluLicenseManagerMIBObjects, aluLicenseManagerMIBGroups=aluLicenseManagerMIBGroups, aluLicenseManagerLicenseExpired=aluLicenseManagerLicenseExpired, aluLicenseManagerInfoTable=aluLicenseManagerInfoTable, aluLicenseManagerApplyLicense=aluLicenseManagerApplyLicense, aluLicenseManagerMIBCompliances=aluLicenseManagerMIBCompliances, PYSNMP_MODULE_ID=aluLicenseManagerMIB)
