#
# PySNMP MIB module H3C-T1-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/H3C-T1-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:10:55 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ConstraintsIntersection, SingleValueConstraint, ConstraintsUnion, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ConstraintsIntersection", "SingleValueConstraint", "ConstraintsUnion", "ValueRangeConstraint")
h3cCommon, = mibBuilder.importSymbols("HUAWEI-3COM-OID-MIB", "h3cCommon")
ifIndex, = mibBuilder.importSymbols("IF-MIB", "ifIndex")
ModuleCompliance, NotificationGroup, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup", "ObjectGroup")
iso, Counter64, NotificationType, IpAddress, Unsigned32, ModuleIdentity, ObjectIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, Gauge32, Bits, MibIdentifier, Integer32, Counter32, TimeTicks = mibBuilder.importSymbols("SNMPv2-SMI", "iso", "Counter64", "NotificationType", "IpAddress", "Unsigned32", "ModuleIdentity", "ObjectIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Gauge32", "Bits", "MibIdentifier", "Integer32", "Counter32", "TimeTicks")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
h3cT1 = ModuleIdentity((1, 3, 6, 1, 4, 1, 2011, 10, 2, 29))
h3cT1.setRevisions(('2009-06-08 17:41', '2004-12-01 14:36',))
if mibBuilder.loadTexts: h3cT1.setLastUpdated('200906080000Z')
if mibBuilder.loadTexts: h3cT1.setOrganization('Hangzhou H3C Technologies Co., Ltd.')
t1InterfaceStatusTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 10, 2, 29, 1), )
if mibBuilder.loadTexts: t1InterfaceStatusTable.setStatus('current')
t1InterfaceStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 10, 2, 29, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: t1InterfaceStatusEntry.setStatus('current')
t1InterfaceInErrs = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 29, 1, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: t1InterfaceInErrs.setStatus('current')
t1InterfaceInRuntsErrs = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 29, 1, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: t1InterfaceInRuntsErrs.setStatus('current')
t1InterfaceInGiantsErrs = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 29, 1, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: t1InterfaceInGiantsErrs.setStatus('current')
t1InterfaceInCrcErrs = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 29, 1, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: t1InterfaceInCrcErrs.setStatus('current')
t1InterfaceInAlignErrs = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 29, 1, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: t1InterfaceInAlignErrs.setStatus('current')
t1InterfaceInOverRunsErrs = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 29, 1, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: t1InterfaceInOverRunsErrs.setStatus('current')
t1InterfaceInDribblesErrs = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 29, 1, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: t1InterfaceInDribblesErrs.setStatus('current')
t1InterfaceInAbortedSeqErrs = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 29, 1, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: t1InterfaceInAbortedSeqErrs.setStatus('current')
t1InterfaceInNoBufferErrs = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 29, 1, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: t1InterfaceInNoBufferErrs.setStatus('current')
t1InterfaceInFramingErrs = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 29, 1, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: t1InterfaceInFramingErrs.setStatus('current')
t1InterfaceOutputErrs = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 29, 1, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: t1InterfaceOutputErrs.setStatus('current')
t1InterfaceOutUnderRunErrs = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 29, 1, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: t1InterfaceOutUnderRunErrs.setStatus('current')
t1InterfaceOutCollisonsErrs = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 29, 1, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: t1InterfaceOutCollisonsErrs.setStatus('current')
t1InterfaceOutDeferedErrs = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 29, 1, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: t1InterfaceOutDeferedErrs.setStatus('current')
h3ct1Table = MibTable((1, 3, 6, 1, 4, 1, 2011, 10, 2, 29, 2), )
if mibBuilder.loadTexts: h3ct1Table.setStatus('current')
h3ct1Entry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 10, 2, 29, 2, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: h3ct1Entry.setStatus('current')
class H3cT1TimeSlot(TextualConvention, OctetString):
    status = 'current'
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(3, 3)
    fixedLength = 3

h3ct1Type = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 29, 2, 1, 1), Bits().clone(namedValues=NamedValues(("voice", 0)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3ct1Type.setStatus('current')
h3ct1Clock = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 29, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("slave", 1), ("master", 2))).clone('slave')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3ct1Clock.setStatus('current')
h3ct1FrameFormat = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 29, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("sf", 1), ("esf", 2))).clone('esf')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3ct1FrameFormat.setStatus('current')
h3ct1LineCode = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 29, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("ami", 1), ("b8zs", 2))).clone('b8zs')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3ct1LineCode.setStatus('current')
h3ct1PriSetTimeSlot = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 29, 2, 1, 5), H3cT1TimeSlot()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3ct1PriSetTimeSlot.setStatus('current')
h3ct1DChannelIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 29, 2, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3ct1DChannelIndex.setStatus('current')
h3ct1SubScribLineChannelIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 29, 2, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3ct1SubScribLineChannelIndex.setStatus('current')
h3ct1InterfaceTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 10, 2, 29, 3), )
if mibBuilder.loadTexts: h3ct1InterfaceTable.setStatus('current')
h3ct1InterfaceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 10, 2, 29, 3, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: h3ct1InterfaceEntry.setStatus('current')
h3ct1ControllerIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 29, 3, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3ct1ControllerIndex.setStatus('current')
mibBuilder.exportSymbols("H3C-T1-MIB", h3ct1Type=h3ct1Type, h3ct1SubScribLineChannelIndex=h3ct1SubScribLineChannelIndex, h3ct1ControllerIndex=h3ct1ControllerIndex, t1InterfaceInRuntsErrs=t1InterfaceInRuntsErrs, h3ct1Clock=h3ct1Clock, t1InterfaceInOverRunsErrs=t1InterfaceInOverRunsErrs, PYSNMP_MODULE_ID=h3cT1, t1InterfaceInAlignErrs=t1InterfaceInAlignErrs, t1InterfaceStatusEntry=t1InterfaceStatusEntry, t1InterfaceInFramingErrs=t1InterfaceInFramingErrs, t1InterfaceInCrcErrs=t1InterfaceInCrcErrs, t1InterfaceInDribblesErrs=t1InterfaceInDribblesErrs, h3ct1DChannelIndex=h3ct1DChannelIndex, t1InterfaceOutCollisonsErrs=t1InterfaceOutCollisonsErrs, h3ct1PriSetTimeSlot=h3ct1PriSetTimeSlot, t1InterfaceStatusTable=t1InterfaceStatusTable, t1InterfaceOutUnderRunErrs=t1InterfaceOutUnderRunErrs, h3cT1=h3cT1, t1InterfaceInGiantsErrs=t1InterfaceInGiantsErrs, t1InterfaceOutputErrs=t1InterfaceOutputErrs, t1InterfaceInErrs=t1InterfaceInErrs, h3ct1Entry=h3ct1Entry, t1InterfaceInAbortedSeqErrs=t1InterfaceInAbortedSeqErrs, h3ct1InterfaceTable=h3ct1InterfaceTable, h3ct1LineCode=h3ct1LineCode, h3ct1FrameFormat=h3ct1FrameFormat, t1InterfaceInNoBufferErrs=t1InterfaceInNoBufferErrs, h3ct1InterfaceEntry=h3ct1InterfaceEntry, t1InterfaceOutDeferedErrs=t1InterfaceOutDeferedErrs, h3ct1Table=h3ct1Table, H3cT1TimeSlot=H3cT1TimeSlot)
