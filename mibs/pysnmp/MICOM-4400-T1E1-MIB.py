#
# PySNMP MIB module MICOM-4400-T1E1-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/MICOM-4400-T1E1-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 20:01:53 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ValueSizeConstraint, ConstraintsIntersection, SingleValueConstraint, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ValueSizeConstraint", "ConstraintsIntersection", "SingleValueConstraint", "ValueRangeConstraint")
micom_oscar, = mibBuilder.importSymbols("MICOM-OSCAR-MIB", "micom-oscar")
mcmSysAsciiTimeOfDay, = mibBuilder.importSymbols("MICOM-SYS-MIB", "mcmSysAsciiTimeOfDay")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
ObjectIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, NotificationType, Unsigned32, NotificationType, Counter32, Counter64, Integer32, Gauge32, IpAddress, ModuleIdentity, MibIdentifier, Bits, TimeTicks, iso = mibBuilder.importSymbols("SNMPv2-SMI", "ObjectIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "NotificationType", "Unsigned32", "NotificationType", "Counter32", "Counter64", "Integer32", "Gauge32", "IpAddress", "ModuleIdentity", "MibIdentifier", "Bits", "TimeTicks", "iso")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
micom_2t1e1 = MibIdentifier((1, 3, 6, 1, 4, 1, 335, 1, 4, 22)).setLabel("micom-2t1e1")
t1e1_r2_configuration = MibIdentifier((1, 3, 6, 1, 4, 1, 335, 1, 4, 22, 1)).setLabel("t1e1-r2-configuration")
t1e1_r2_control = MibIdentifier((1, 3, 6, 1, 4, 1, 335, 1, 4, 22, 2)).setLabel("t1e1-r2-control")
t1e1_r2_status = MibIdentifier((1, 3, 6, 1, 4, 1, 335, 1, 4, 22, 3)).setLabel("t1e1-r2-status")
t1e1_r2_statistics = MibIdentifier((1, 3, 6, 1, 4, 1, 335, 1, 4, 22, 4)).setLabel("t1e1-r2-statistics")
mcm4400t1e1LineCfgTable = MibTable((1, 3, 6, 1, 4, 1, 335, 1, 4, 22, 1, 1), )
if mibBuilder.loadTexts: mcm4400t1e1LineCfgTable.setStatus('mandatory')
mcm4400t1e1LineCfgEntry = MibTableRow((1, 3, 6, 1, 4, 1, 335, 1, 4, 22, 1, 1, 1), ).setIndexNames((0, "MICOM-4400-T1E1-MIB", "mcm4400t1e1LineCfgLineID"))
if mibBuilder.loadTexts: mcm4400t1e1LineCfgEntry.setStatus('mandatory')
mcm4400t1e1LineCfgLineID = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 22, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("local", 1), ("network", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcm4400t1e1LineCfgLineID.setStatus('mandatory')
mcm4400t1e1LineCfgProfileNum = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 22, 1, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mcm4400t1e1LineCfgProfileNum.setStatus('mandatory')
mcm4400t1e1ProfCfgTable = MibTable((1, 3, 6, 1, 4, 1, 335, 1, 4, 22, 1, 2), )
if mibBuilder.loadTexts: mcm4400t1e1ProfCfgTable.setStatus('mandatory')
mcm4400t1e1ProfCfgEntry = MibTableRow((1, 3, 6, 1, 4, 1, 335, 1, 4, 22, 1, 2, 1), ).setIndexNames((0, "MICOM-4400-T1E1-MIB", "mcm4400t1e1ProfCfgProfileNum"))
if mibBuilder.loadTexts: mcm4400t1e1ProfCfgEntry.setStatus('mandatory')
mcm4400t1e1ProfCfgProfileNum = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 22, 1, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcm4400t1e1ProfCfgProfileNum.setStatus('mandatory')
mcm4400t1e1ProfCfgT1FrameFmt = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 22, 1, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("superFrame", 1), ("extendedSuperFrame", 2))).clone('superFrame')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mcm4400t1e1ProfCfgT1FrameFmt.setStatus('mandatory')
mcm4400t1e1ProfCfgT1LineCode = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 22, 1, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("aMI", 1), ("b8ZS", 2))).clone('aMI')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mcm4400t1e1ProfCfgT1LineCode.setStatus('mandatory')
mcm4400t1e1ProfCfgE1LineCode = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 22, 1, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("aMI", 1), ("hDB3", 2))).clone('aMI')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mcm4400t1e1ProfCfgE1LineCode.setStatus('mandatory')
mcm4400t1e1ProfCfgIdleCode = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 22, 1, 2, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255)).clone(127)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mcm4400t1e1ProfCfgIdleCode.setStatus('mandatory')
mcm4400t1e1ProfCfgT1LineBuildOut = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 22, 1, 2, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("lessThan110Feet", 1), ("lessThan220Feet", 2), ("lessThan330Feet", 3), ("lessThan440Feet", 4), ("externalLBO", 5), ("greaterThan665Feet", 6), ("lessThan550Feet", 7), ("lessThan660Feet", 8))).clone('lessThan110Feet')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mcm4400t1e1ProfCfgT1LineBuildOut.setStatus('mandatory')
mcm4400t1e1ProfCfgT1Loopback = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 22, 1, 2, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disable", 1), ("enable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mcm4400t1e1ProfCfgT1Loopback.setStatus('mandatory')
mcm4400t1e1ProfCfgE1CRC4 = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 22, 1, 2, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disable", 1), ("enable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mcm4400t1e1ProfCfgE1CRC4.setStatus('mandatory')
mcm4400t1e1ProfCfgE1TS16Conn = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 22, 1, 2, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("toCAS", 1), ("idle", 2), ("bypass", 3), ("toDataPort1", 4), ("toDataPort2", 5))).clone('toCAS')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mcm4400t1e1ProfCfgE1TS16Conn.setStatus('mandatory')
mcm4400t1e1DS0ChConnTable = MibTable((1, 3, 6, 1, 4, 1, 335, 1, 4, 22, 1, 3), )
if mibBuilder.loadTexts: mcm4400t1e1DS0ChConnTable.setStatus('mandatory')
mcm4400t1e1DS0ChConnEntry = MibTableRow((1, 3, 6, 1, 4, 1, 335, 1, 4, 22, 1, 3, 1), ).setIndexNames((0, "MICOM-4400-T1E1-MIB", "mcm4400t1e1DS0ChConnLineID"), (0, "MICOM-4400-T1E1-MIB", "mcm4400t1e1DS0ChConnDS0Index"))
if mibBuilder.loadTexts: mcm4400t1e1DS0ChConnEntry.setStatus('mandatory')
mcm4400t1e1DS0ChConnLineID = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 22, 1, 3, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("local", 1), ("network", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcm4400t1e1DS0ChConnLineID.setStatus('mandatory')
mcm4400t1e1DS0ChConnDS0Index = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 22, 1, 3, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 30))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcm4400t1e1DS0ChConnDS0Index.setStatus('mandatory')
mcm4400t1e1DS0ChConnState = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 22, 1, 3, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37))).clone(namedValues=NamedValues(("idle", 1), ("bypassVoice", 2), ("bypassData", 3), ("toWANPort1", 4), ("toWANPort2", 5), ("toDataPort1", 6), ("toDataPort2", 7), ("toDVMChannelB1", 8), ("toDVMChannelB2", 9), ("toDVMChannelB3", 10), ("toDVMChannelB4", 11), ("toDVMChannelB5", 12), ("toDVMChannelB6", 13), ("toDVMChannelC1", 14), ("toDVMChannelC2", 15), ("toDVMChannelC3", 16), ("toDVMChannelC4", 17), ("toDVMChannelC5", 18), ("toDVMChannelC6", 19), ("toDVMChannelC7", 20), ("toDVMChannelC8", 21), ("toDVMChannelC9", 22), ("toDVMChannelC10", 23), ("toDVMChannelC11", 24), ("toDVMChannelC12", 25), ("toDVMChannelD1", 26), ("toDVMChannelD2", 27), ("toDVMChannelD3", 28), ("toDVMChannelD4", 29), ("toDVMChannelD5", 30), ("toDVMChannelD6", 31), ("toDVMChannelD7", 32), ("toDVMChannelD8", 33), ("toDVMChannelD9", 34), ("toDVMChannelD10", 35), ("toDVMChannelD11", 36), ("toDVMChannelD12", 37)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mcm4400t1e1DS0ChConnState.setStatus('mandatory')
mcm4400t1e1DPCfgTable = MibTable((1, 3, 6, 1, 4, 1, 335, 1, 4, 22, 1, 4), )
if mibBuilder.loadTexts: mcm4400t1e1DPCfgTable.setStatus('mandatory')
mcm4400t1e1DPCfgEntry = MibTableRow((1, 3, 6, 1, 4, 1, 335, 1, 4, 22, 1, 4, 1), ).setIndexNames((0, "MICOM-4400-T1E1-MIB", "mcm4400t1e1DPCfgPortNum"))
if mibBuilder.loadTexts: mcm4400t1e1DPCfgEntry.setStatus('mandatory')
mcm4400t1e1DPCfgPortNum = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 22, 1, 4, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("port1", 1), ("port2", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcm4400t1e1DPCfgPortNum.setStatus('mandatory')
mcm4400t1e1DPCfgDataRate = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 22, 1, 4, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("rate64kbps", 1), ("rate56kbps", 2))).clone('rate64kbps')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mcm4400t1e1DPCfgDataRate.setStatus('mandatory')
mcm4400t1e1DPCfgClock = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 22, 1, 4, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("internalClock", 1), ("tailCircuit", 2))).clone('internalClock')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mcm4400t1e1DPCfgClock.setStatus('mandatory')
mcm4400t1e1DPCfgDTRCntl = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 22, 1, 4, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("normal", 1), ("forcedOn", 2))).clone('normal')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mcm4400t1e1DPCfgDTRCntl.setStatus('mandatory')
mcm4400t1e1DPCfgRTSCntl = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 22, 1, 4, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("normal", 1), ("forcedOn", 2))).clone('normal')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mcm4400t1e1DPCfgRTSCntl.setStatus('mandatory')
mcm4400t1e1SysCfgClockSource = MibScalar((1, 3, 6, 1, 4, 1, 335, 1, 4, 22, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("networkLineExternal", 1), ("localLineExternal", 2), ("internal", 3))).clone('networkLineExternal')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mcm4400t1e1SysCfgClockSource.setStatus('mandatory')
nvm4400t1e1LineCfgTable = MibTable((1, 3, 6, 1, 4, 1, 335, 1, 4, 22, 1, 6), )
if mibBuilder.loadTexts: nvm4400t1e1LineCfgTable.setStatus('mandatory')
nvm4400t1e1LineCfgEntry = MibTableRow((1, 3, 6, 1, 4, 1, 335, 1, 4, 22, 1, 6, 1), ).setIndexNames((0, "MICOM-4400-T1E1-MIB", "nvm4400t1e1LineCfgLineID"))
if mibBuilder.loadTexts: nvm4400t1e1LineCfgEntry.setStatus('mandatory')
nvm4400t1e1LineCfgLineID = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 22, 1, 6, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("local", 1), ("network", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nvm4400t1e1LineCfgLineID.setStatus('mandatory')
nvm4400t1e1LineCfgProfileNum = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 22, 1, 6, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nvm4400t1e1LineCfgProfileNum.setStatus('mandatory')
nvm4400t1e1ProfCfgTable = MibTable((1, 3, 6, 1, 4, 1, 335, 1, 4, 22, 1, 7), )
if mibBuilder.loadTexts: nvm4400t1e1ProfCfgTable.setStatus('mandatory')
nvm4400t1e1ProfCfgEntry = MibTableRow((1, 3, 6, 1, 4, 1, 335, 1, 4, 22, 1, 7, 1), ).setIndexNames((0, "MICOM-4400-T1E1-MIB", "nvm4400t1e1ProfCfgProfileNum"))
if mibBuilder.loadTexts: nvm4400t1e1ProfCfgEntry.setStatus('mandatory')
nvm4400t1e1ProfCfgProfileNum = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 22, 1, 7, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nvm4400t1e1ProfCfgProfileNum.setStatus('mandatory')
nvm4400t1e1ProfCfgT1FrameFmt = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 22, 1, 7, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("superFrame", 1), ("extendedSuperFrame", 2))).clone('superFrame')).setMaxAccess("readonly")
if mibBuilder.loadTexts: nvm4400t1e1ProfCfgT1FrameFmt.setStatus('mandatory')
nvm4400t1e1ProfCfgT1LineCode = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 22, 1, 7, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("aMI", 1), ("b8ZS", 2))).clone('aMI')).setMaxAccess("readonly")
if mibBuilder.loadTexts: nvm4400t1e1ProfCfgT1LineCode.setStatus('mandatory')
nvm4400t1e1ProfCfgE1LineCode = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 22, 1, 7, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("aMI", 1), ("hDB3", 2))).clone('aMI')).setMaxAccess("readonly")
if mibBuilder.loadTexts: nvm4400t1e1ProfCfgE1LineCode.setStatus('mandatory')
nvm4400t1e1ProfCfgIdleCode = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 22, 1, 7, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255)).clone(127)).setMaxAccess("readonly")
if mibBuilder.loadTexts: nvm4400t1e1ProfCfgIdleCode.setStatus('mandatory')
nvm4400t1e1ProfCfgT1LineBuildOut = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 22, 1, 7, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("lessThan110Feet", 1), ("lessThan220Feet", 2), ("lessThan330Feet", 3), ("lessThan440Feet", 4), ("externalLBO", 5), ("greaterThan665Feet", 6), ("lessThan550Feet", 7), ("lessThan660Feet", 8))).clone('lessThan110Feet')).setMaxAccess("readonly")
if mibBuilder.loadTexts: nvm4400t1e1ProfCfgT1LineBuildOut.setStatus('mandatory')
nvm4400t1e1ProfCfgT1Loopback = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 22, 1, 7, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disable", 1), ("enable", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nvm4400t1e1ProfCfgT1Loopback.setStatus('mandatory')
nvm4400t1e1ProfCfgE1CRC4 = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 22, 1, 7, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disable", 1), ("enable", 2))).clone('disable')).setMaxAccess("readonly")
if mibBuilder.loadTexts: nvm4400t1e1ProfCfgE1CRC4.setStatus('mandatory')
nvm4400t1e1ProfCfgE1TS16Conn = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 22, 1, 7, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("toCAS", 1), ("idle", 2), ("bypass", 3), ("toDataPort1", 4), ("toDataPort2", 5))).clone('toCAS')).setMaxAccess("readonly")
if mibBuilder.loadTexts: nvm4400t1e1ProfCfgE1TS16Conn.setStatus('mandatory')
nvm4400t1e1DS0ChConnTable = MibTable((1, 3, 6, 1, 4, 1, 335, 1, 4, 22, 1, 8), )
if mibBuilder.loadTexts: nvm4400t1e1DS0ChConnTable.setStatus('mandatory')
nvm4400t1e1DS0ChConnEntry = MibTableRow((1, 3, 6, 1, 4, 1, 335, 1, 4, 22, 1, 8, 1), ).setIndexNames((0, "MICOM-4400-T1E1-MIB", "nvm4400t1e1DS0ChConnLineID"), (0, "MICOM-4400-T1E1-MIB", "nvm4400t1e1DS0ChConnDS0Index"))
if mibBuilder.loadTexts: nvm4400t1e1DS0ChConnEntry.setStatus('mandatory')
nvm4400t1e1DS0ChConnLineID = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 22, 1, 8, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("local", 1), ("network", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nvm4400t1e1DS0ChConnLineID.setStatus('mandatory')
nvm4400t1e1DS0ChConnDS0Index = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 22, 1, 8, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 30))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nvm4400t1e1DS0ChConnDS0Index.setStatus('mandatory')
nvm4400t1e1DS0ChConnState = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 22, 1, 8, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37))).clone(namedValues=NamedValues(("idle", 1), ("bypassVoice", 2), ("bypassData", 3), ("toWANPort1", 4), ("toWANPort2", 5), ("toDataPort1", 6), ("toDataPort2", 7), ("toDVMChannelB1", 8), ("toDVMChannelB2", 9), ("toDVMChannelB3", 10), ("toDVMChannelB4", 11), ("toDVMChannelB5", 12), ("toDVMChannelB6", 13), ("toDVMChannelC1", 14), ("toDVMChannelC2", 15), ("toDVMChannelC3", 16), ("toDVMChannelC4", 17), ("toDVMChannelC5", 18), ("toDVMChannelC6", 19), ("toDVMChannelC7", 20), ("toDVMChannelC8", 21), ("toDVMChannelC9", 22), ("toDVMChannelC10", 23), ("toDVMChannelC11", 24), ("toDVMChannelC12", 25), ("toDVMChannelD1", 26), ("toDVMChannelD2", 27), ("toDVMChannelD3", 28), ("toDVMChannelD4", 29), ("toDVMChannelD5", 30), ("toDVMChannelD6", 31), ("toDVMChannelD7", 32), ("toDVMChannelD8", 33), ("toDVMChannelD9", 34), ("toDVMChannelD10", 35), ("toDVMChannelD11", 36), ("toDVMChannelD12", 37)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nvm4400t1e1DS0ChConnState.setStatus('mandatory')
nvm4400t1e1DPCfgTable = MibTable((1, 3, 6, 1, 4, 1, 335, 1, 4, 22, 1, 9), )
if mibBuilder.loadTexts: nvm4400t1e1DPCfgTable.setStatus('mandatory')
nvm4400t1e1DPCfgEntry = MibTableRow((1, 3, 6, 1, 4, 1, 335, 1, 4, 22, 1, 9, 1), ).setIndexNames((0, "MICOM-4400-T1E1-MIB", "nvm4400t1e1DPCfgPortNum"))
if mibBuilder.loadTexts: nvm4400t1e1DPCfgEntry.setStatus('mandatory')
nvm4400t1e1DPCfgPortNum = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 22, 1, 9, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("port1", 1), ("port2", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nvm4400t1e1DPCfgPortNum.setStatus('mandatory')
nvm4400t1e1DPCfgDataRate = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 22, 1, 9, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("rate64kbps", 1), ("rate56kbps", 2))).clone('rate64kbps')).setMaxAccess("readonly")
if mibBuilder.loadTexts: nvm4400t1e1DPCfgDataRate.setStatus('mandatory')
nvm4400t1e1DPCfgClock = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 22, 1, 9, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("internalClock", 1), ("tailCircuit", 2))).clone('internalClock')).setMaxAccess("readonly")
if mibBuilder.loadTexts: nvm4400t1e1DPCfgClock.setStatus('mandatory')
nvm4400t1e1DPCfgDTRCntl = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 22, 1, 9, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("normal", 1), ("forcedOn", 2))).clone('normal')).setMaxAccess("readonly")
if mibBuilder.loadTexts: nvm4400t1e1DPCfgDTRCntl.setStatus('mandatory')
nvm4400t1e1DPCfgRTSCntl = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 22, 1, 9, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("normal", 1), ("forcedOn", 2))).clone('normal')).setMaxAccess("readonly")
if mibBuilder.loadTexts: nvm4400t1e1DPCfgRTSCntl.setStatus('mandatory')
nvm4400t1e1SysCfgClockSource = MibScalar((1, 3, 6, 1, 4, 1, 335, 1, 4, 22, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("networkLineExternal", 1), ("localLineExternal", 2), ("internal", 3))).clone('networkLineExternal')).setMaxAccess("readonly")
if mibBuilder.loadTexts: nvm4400t1e1SysCfgClockSource.setStatus('mandatory')
mcm4400t1e1LineStatusTable = MibTable((1, 3, 6, 1, 4, 1, 335, 1, 4, 22, 3, 1), )
if mibBuilder.loadTexts: mcm4400t1e1LineStatusTable.setStatus('mandatory')
mcm4400t1e1LineStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 335, 1, 4, 22, 3, 1, 1), ).setIndexNames((0, "MICOM-4400-T1E1-MIB", "mcm4400t1e1LineStatusLineIndex"))
if mibBuilder.loadTexts: mcm4400t1e1LineStatusEntry.setStatus('mandatory')
mcm4400t1e1LineStatusLineIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 22, 3, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("localLine", 1), ("networkLine", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcm4400t1e1LineStatusLineIndex.setStatus('mandatory')
mcm4400t1e1LineStatusInterface = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 22, 3, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("t1", 1), ("e1", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcm4400t1e1LineStatusInterface.setStatus('mandatory')
mcm4400t1e1LineStatusImpedance = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 22, 3, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("line120ohm", 1), ("line75ohm", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcm4400t1e1LineStatusImpedance.setStatus('mandatory')
mcm4400t1e1LineStatusTestMode = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 22, 3, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("none", 1), ("inLineLoopback", 2), ("inChannelLoopback", 3), ("inChannelPatternTest", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcm4400t1e1LineStatusTestMode.setStatus('mandatory')
mcm4400t1e1LineStatusTestingDS0Ch = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 22, 3, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 30))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcm4400t1e1LineStatusTestingDS0Ch.setStatus('mandatory')
mcm4400t1e1LineStatusAISAlarm = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 22, 3, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("no", 1), ("yes", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcm4400t1e1LineStatusAISAlarm.setStatus('mandatory')
mcm4400t1e1LineStatusRedAlarm = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 22, 3, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("no", 1), ("yes", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcm4400t1e1LineStatusRedAlarm.setStatus('mandatory')
mcm4400t1e1LineStatusYellowAlarm = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 22, 3, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("no", 1), ("yes", 2), ("notApplicable", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcm4400t1e1LineStatusYellowAlarm.setStatus('mandatory')
mcm4400t1e1LineStatusTS16AIS = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 22, 3, 1, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("no", 1), ("yes", 2), ("notApplicable", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcm4400t1e1LineStatusTS16AIS.setStatus('mandatory')
mcm4400t1e1LineStatusOOSMFAlarm = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 22, 3, 1, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("no", 1), ("yes", 2), ("notApplicable", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcm4400t1e1LineStatusOOSMFAlarm.setStatus('mandatory')
mcm4400t1e1LineStatusMFASAlarm = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 22, 3, 1, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("no", 1), ("yes", 2), ("notApplicable", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcm4400t1e1LineStatusMFASAlarm.setStatus('mandatory')
mcm4400t1e1LineStatusFASAlarm = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 22, 3, 1, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("no", 1), ("yes", 2), ("notApplicable", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcm4400t1e1LineStatusFASAlarm.setStatus('mandatory')
mcm4400t1e1LineStatusOOCMFAlarm = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 22, 3, 1, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("no", 1), ("yes", 2), ("notApplicable", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcm4400t1e1LineStatusOOCMFAlarm.setStatus('mandatory')
mcm4400t1e1SysStatusGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 335, 1, 4, 22, 3, 2))
mcm4400t1e1SysStatusCardType = MibScalar((1, 3, 6, 1, 4, 1, 335, 1, 4, 22, 3, 2, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("t1SingleLineAccessModule", 1), ("t1DualLineAccessModule", 2), ("e1SingleLineAccessModule", 3), ("e1DualLineAccessModule", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcm4400t1e1SysStatusCardType.setStatus('mandatory')
mcm4400t1e1SysStatusOperStatus = MibScalar((1, 3, 6, 1, 4, 1, 335, 1, 4, 22, 3, 2, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("dead", 1), ("aliveButNotReady", 2), ("downloadFail", 3), ("downloadInProgress", 4), ("normal", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcm4400t1e1SysStatusOperStatus.setStatus('mandatory')
mcm4400t1e1SysStatusLEDTest = MibScalar((1, 3, 6, 1, 4, 1, 335, 1, 4, 22, 3, 2, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("no", 1), ("yes", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcm4400t1e1SysStatusLEDTest.setStatus('mandatory')
mcm4400t1e1SysStatusSelfTestResults = MibScalar((1, 3, 6, 1, 4, 1, 335, 1, 4, 22, 3, 2, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("testPassed", 1), ("testFailed", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcm4400t1e1SysStatusSelfTestResults.setStatus('mandatory')
mcm4400t1e1SysStatusFlashEPROMSt = MibScalar((1, 3, 6, 1, 4, 1, 335, 1, 4, 22, 3, 2, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("valid", 1), ("erased", 2), ("invalidChecksum", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcm4400t1e1SysStatusFlashEPROMSt.setStatus('mandatory')
mcm4400t1e1SysStatusApplSwID = MibScalar((1, 3, 6, 1, 4, 1, 335, 1, 4, 22, 3, 2, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcm4400t1e1SysStatusApplSwID.setStatus('mandatory')
mcm4400t1e1SysStatusBootSwVer = MibScalar((1, 3, 6, 1, 4, 1, 335, 1, 4, 22, 3, 2, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcm4400t1e1SysStatusBootSwVer.setStatus('mandatory')
mcm4400t1e1DPStatusTable = MibTable((1, 3, 6, 1, 4, 1, 335, 1, 4, 22, 3, 3), )
if mibBuilder.loadTexts: mcm4400t1e1DPStatusTable.setStatus('mandatory')
mcm4400t1e1DPStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 335, 1, 4, 22, 3, 3, 1), ).setIndexNames((0, "MICOM-4400-T1E1-MIB", "mcm4400t1e1DPStatusPortNumber"))
if mibBuilder.loadTexts: mcm4400t1e1DPStatusEntry.setStatus('mandatory')
mcm4400t1e1DPStatusPortNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 22, 3, 3, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("port1", 1), ("port2", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcm4400t1e1DPStatusPortNumber.setStatus('mandatory')
mcm4400t1e1DPStatusDTRInputSt = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 22, 3, 3, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("off", 1), ("on", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcm4400t1e1DPStatusDTRInputSt.setStatus('mandatory')
mcm4400t1e1DPStatusRTSInputSt = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 22, 3, 3, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("off", 1), ("on", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcm4400t1e1DPStatusRTSInputSt.setStatus('mandatory')
mcm4400t1e1DPStatusDSROutputSt = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 22, 3, 3, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("off", 1), ("on", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcm4400t1e1DPStatusDSROutputSt.setStatus('mandatory')
mcm4400t1e1DPStatusDCDOutputSt = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 22, 3, 3, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("off", 1), ("on", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcm4400t1e1DPStatusDCDOutputSt.setStatus('mandatory')
mcm4400t1e1DPStatusCTSOutputSt = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 22, 3, 3, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("off", 1), ("on", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcm4400t1e1DPStatusCTSOutputSt.setStatus('mandatory')
mcm4400t1e1DS0ChSigTable = MibTable((1, 3, 6, 1, 4, 1, 335, 1, 4, 22, 3, 4), )
if mibBuilder.loadTexts: mcm4400t1e1DS0ChSigTable.setStatus('mandatory')
mcm4400t1e1DS0ChSigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 335, 1, 4, 22, 3, 4, 1), ).setIndexNames((0, "MICOM-4400-T1E1-MIB", "mcm4400t1e1DS0ChSigLineID"), (0, "MICOM-4400-T1E1-MIB", "mcm4400t1e1DS0ChSigDS0Index"))
if mibBuilder.loadTexts: mcm4400t1e1DS0ChSigEntry.setStatus('mandatory')
mcm4400t1e1DS0ChSigLineID = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 22, 3, 4, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("local", 1), ("network", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcm4400t1e1DS0ChSigLineID.setStatus('mandatory')
mcm4400t1e1DS0ChSigDS0Index = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 22, 3, 4, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 30))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcm4400t1e1DS0ChSigDS0Index.setStatus('mandatory')
mcm4400t1e1DS0ChSigInABCDBits = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 22, 3, 4, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcm4400t1e1DS0ChSigInABCDBits.setStatus('mandatory')
mcm4400t1e1DS0ChSigOutABCDBits = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 22, 3, 4, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcm4400t1e1DS0ChSigOutABCDBits.setStatus('mandatory')
mcm4400t1e1ChTestResultsGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 335, 1, 4, 22, 3, 5))
mcm4400t1e1ChTestResultsLineID = MibScalar((1, 3, 6, 1, 4, 1, 335, 1, 4, 22, 3, 5, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("local", 1), ("network", 2), ("none", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcm4400t1e1ChTestResultsLineID.setStatus('mandatory')
mcm4400t1e1ChTestResultsDS0Ch = MibScalar((1, 3, 6, 1, 4, 1, 335, 1, 4, 22, 3, 5, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 30))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcm4400t1e1ChTestResultsDS0Ch.setStatus('mandatory')
mcm4400t1e1ChTestResultsErrorCnt = MibScalar((1, 3, 6, 1, 4, 1, 335, 1, 4, 22, 3, 5, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcm4400t1e1ChTestResultsErrorCnt.setStatus('mandatory')
mcm4400t1e1LineStatsTable = MibTable((1, 3, 6, 1, 4, 1, 335, 1, 4, 22, 4, 1), )
if mibBuilder.loadTexts: mcm4400t1e1LineStatsTable.setStatus('mandatory')
mcm4400t1e1LineStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 335, 1, 4, 22, 4, 1, 1), ).setIndexNames((0, "MICOM-4400-T1E1-MIB", "mcm4400t1e1LineStatsLineIndex"))
if mibBuilder.loadTexts: mcm4400t1e1LineStatsEntry.setStatus('mandatory')
mcm4400t1e1LineStatsLineIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 22, 4, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("localLine", 1), ("networkLine", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcm4400t1e1LineStatsLineIndex.setStatus('mandatory')
mcm4400t1e1LineStatsInterface = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 22, 4, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("t1", 1), ("e1", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcm4400t1e1LineStatsInterface.setStatus('mandatory')
mcm4400t1e1LineStatsFramingBitError = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 22, 4, 1, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcm4400t1e1LineStatsFramingBitError.setStatus('mandatory')
mcm4400t1e1LineStatsLineCdViolation = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 22, 4, 1, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcm4400t1e1LineStatsLineCdViolation.setStatus('mandatory')
mcm4400t1e1LineStatsFarEndBlkError = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 22, 4, 1, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcm4400t1e1LineStatsFarEndBlkError.setStatus('mandatory')
mcm4400t1e1LineStatsCRCError = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 22, 4, 1, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcm4400t1e1LineStatsCRCError.setStatus('mandatory')
mcm4400t1e1LineStatsBufferOverrun = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 22, 4, 1, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcm4400t1e1LineStatsBufferOverrun.setStatus('mandatory')
mcm4400t1e1LineStatsBufferUnderrun = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 22, 4, 1, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcm4400t1e1LineStatsBufferUnderrun.setStatus('mandatory')
mcm4400t1e1LineStatsFrmSyncBitError = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 22, 4, 1, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcm4400t1e1LineStatsFrmSyncBitError.setStatus('mandatory')
mcm4400t1e1LineStatsOutOfFrame = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 22, 4, 1, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcm4400t1e1LineStatsOutOfFrame.setStatus('mandatory')
mcm4400t1e1LineStatsTotalFrameSlip = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 22, 4, 1, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcm4400t1e1LineStatsTotalFrameSlip.setStatus('mandatory')
mcm4400t1e1DS0ChTestCmdTable = MibTable((1, 3, 6, 1, 4, 1, 335, 1, 4, 22, 2, 1), )
if mibBuilder.loadTexts: mcm4400t1e1DS0ChTestCmdTable.setStatus('mandatory')
mcm4400t1e1DS0ChTestCmdEntry = MibTableRow((1, 3, 6, 1, 4, 1, 335, 1, 4, 22, 2, 1, 1), ).setIndexNames((0, "MICOM-4400-T1E1-MIB", "mcm4400t1e1DS0ChTestCmdLineID"), (0, "MICOM-4400-T1E1-MIB", "mcm4400t1e1DS0ChTestCmdDS0Index"))
if mibBuilder.loadTexts: mcm4400t1e1DS0ChTestCmdEntry.setStatus('mandatory')
mcm4400t1e1DS0ChTestCmdLineID = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 22, 2, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("local", 1), ("network", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcm4400t1e1DS0ChTestCmdLineID.setStatus('mandatory')
mcm4400t1e1DS0ChTestCmdDS0Index = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 22, 2, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 30))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcm4400t1e1DS0ChTestCmdDS0Index.setStatus('mandatory')
mcm4400t1e1DS0ChTestCmdTstPattern = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 22, 2, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("qrss", 1), ("tp511", 2), ("loop", 3), ("fixed-E1Only", 4)))).setMaxAccess("writeonly")
if mibBuilder.loadTexts: mcm4400t1e1DS0ChTestCmdTstPattern.setStatus('mandatory')
mcm4400t1e1LineTestCmdTable = MibTable((1, 3, 6, 1, 4, 1, 335, 1, 4, 22, 2, 2), )
if mibBuilder.loadTexts: mcm4400t1e1LineTestCmdTable.setStatus('mandatory')
mcm4400t1e1LineTestCmdEntry = MibTableRow((1, 3, 6, 1, 4, 1, 335, 1, 4, 22, 2, 2, 1), ).setIndexNames((0, "MICOM-4400-T1E1-MIB", "mcm4400t1e1LineTestCmdLineID"))
if mibBuilder.loadTexts: mcm4400t1e1LineTestCmdEntry.setStatus('mandatory')
mcm4400t1e1LineTestCmdLineID = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 22, 2, 2, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("local", 1), ("network", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcm4400t1e1LineTestCmdLineID.setStatus('mandatory')
mcm4400t1e1LineTestCmdTstPattern = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 22, 2, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("externalLineLoopback", 1), ("externalDigitalLoopback", 2), ("internalLineLoopback", 3), ("internalDigitalLoopback", 4)))).setMaxAccess("writeonly")
if mibBuilder.loadTexts: mcm4400t1e1LineTestCmdTstPattern.setStatus('mandatory')
mcm4400t1e1DPTestCmdTable = MibTable((1, 3, 6, 1, 4, 1, 335, 1, 4, 22, 2, 3), )
if mibBuilder.loadTexts: mcm4400t1e1DPTestCmdTable.setStatus('mandatory')
mcm4400t1e1DPTestCmdEntry = MibTableRow((1, 3, 6, 1, 4, 1, 335, 1, 4, 22, 2, 3, 1), ).setIndexNames((0, "MICOM-4400-T1E1-MIB", "mcm4400t1e1DPTestCmdPortNum"))
if mibBuilder.loadTexts: mcm4400t1e1DPTestCmdEntry.setStatus('mandatory')
mcm4400t1e1DPTestCmdPortNum = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 22, 2, 3, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("dataPort1", 1), ("dataPort2", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcm4400t1e1DPTestCmdPortNum.setStatus('mandatory')
mcm4400t1e1DPTestCmdTstPattern = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 22, 2, 3, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("externalLoopback", 1), ("internalLoopback", 2)))).setMaxAccess("writeonly")
if mibBuilder.loadTexts: mcm4400t1e1DPTestCmdTstPattern.setStatus('mandatory')
mcm4400t1e1SysControlActionCmd = MibScalar((1, 3, 6, 1, 4, 1, 335, 1, 4, 22, 2, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9))).clone(namedValues=NamedValues(("testLED", 1), ("resetT1E1", 2), ("clearCounter", 3), ("download", 4), ("stopChannelTest", 5), ("stopLineTest", 6), ("stopPortTest", 7), ("stopLEDTest", 8), ("stopAllTests", 9)))).setMaxAccess("writeonly")
if mibBuilder.loadTexts: mcm4400t1e1SysControlActionCmd.setStatus('mandatory')
mcm4400T1NoCodeImage = NotificationType((1, 3, 6, 1, 4, 1, 335, 1, 4, 22) + (0,1)).setObjects(("MICOM-SYS-MIB", "mcmSysAsciiTimeOfDay"))
mcm4400T1DownloadFail = NotificationType((1, 3, 6, 1, 4, 1, 335, 1, 4, 22) + (0,2)).setObjects(("MICOM-SYS-MIB", "mcmSysAsciiTimeOfDay"))
mcm4400T1OutOfOrder = NotificationType((1, 3, 6, 1, 4, 1, 335, 1, 4, 22) + (0,3)).setObjects(("MICOM-SYS-MIB", "mcmSysAsciiTimeOfDay"))
mcm4400T1OutOfOrderRecovered = NotificationType((1, 3, 6, 1, 4, 1, 335, 1, 4, 22) + (0,4)).setObjects(("MICOM-SYS-MIB", "mcmSysAsciiTimeOfDay"))
mcm4400T1FailToSyncUp = NotificationType((1, 3, 6, 1, 4, 1, 335, 1, 4, 22) + (0,5)).setObjects(("MICOM-SYS-MIB", "mcmSysAsciiTimeOfDay"))
mcm4400T1FailToSyncUpRecovered = NotificationType((1, 3, 6, 1, 4, 1, 335, 1, 4, 22) + (0,6)).setObjects(("MICOM-SYS-MIB", "mcmSysAsciiTimeOfDay"))
mcm4400T1AISAlarmSet = NotificationType((1, 3, 6, 1, 4, 1, 335, 1, 4, 22) + (0,7)).setObjects(("MICOM-SYS-MIB", "mcmSysAsciiTimeOfDay"), ("MICOM-4400-T1E1-MIB", "mcm4400t1e1LineStatusLineIndex"))
mcm4400T1AISAlarmClear = NotificationType((1, 3, 6, 1, 4, 1, 335, 1, 4, 22) + (0,8)).setObjects(("MICOM-SYS-MIB", "mcmSysAsciiTimeOfDay"), ("MICOM-4400-T1E1-MIB", "mcm4400t1e1LineStatusLineIndex"))
mcm4400T1RedAlarmSet = NotificationType((1, 3, 6, 1, 4, 1, 335, 1, 4, 22) + (0,9)).setObjects(("MICOM-SYS-MIB", "mcmSysAsciiTimeOfDay"), ("MICOM-4400-T1E1-MIB", "mcm4400t1e1LineStatusLineIndex"))
mcm4400T1RedAlarmClear = NotificationType((1, 3, 6, 1, 4, 1, 335, 1, 4, 22) + (0,10)).setObjects(("MICOM-SYS-MIB", "mcmSysAsciiTimeOfDay"), ("MICOM-4400-T1E1-MIB", "mcm4400t1e1LineStatusLineIndex"))
mcm4400T1YellowAlarmSet = NotificationType((1, 3, 6, 1, 4, 1, 335, 1, 4, 22) + (0,11)).setObjects(("MICOM-SYS-MIB", "mcmSysAsciiTimeOfDay"), ("MICOM-4400-T1E1-MIB", "mcm4400t1e1LineStatusLineIndex"))
mcm4400T1YellowAlarmClear = NotificationType((1, 3, 6, 1, 4, 1, 335, 1, 4, 22) + (0,12)).setObjects(("MICOM-SYS-MIB", "mcmSysAsciiTimeOfDay"), ("MICOM-4400-T1E1-MIB", "mcm4400t1e1LineStatusLineIndex"))
mcm4400E1NoCodeImage = NotificationType((1, 3, 6, 1, 4, 1, 335, 1, 4, 22) + (0,13)).setObjects(("MICOM-SYS-MIB", "mcmSysAsciiTimeOfDay"))
mcm4400E1DownloadFail = NotificationType((1, 3, 6, 1, 4, 1, 335, 1, 4, 22) + (0,14)).setObjects(("MICOM-SYS-MIB", "mcmSysAsciiTimeOfDay"))
mcm4400E1OutOfOrder = NotificationType((1, 3, 6, 1, 4, 1, 335, 1, 4, 22) + (0,15)).setObjects(("MICOM-SYS-MIB", "mcmSysAsciiTimeOfDay"))
mcm4400E1OutOfOrderRecovered = NotificationType((1, 3, 6, 1, 4, 1, 335, 1, 4, 22) + (0,16)).setObjects(("MICOM-SYS-MIB", "mcmSysAsciiTimeOfDay"))
mcm4400E1FailToSyncUp = NotificationType((1, 3, 6, 1, 4, 1, 335, 1, 4, 22) + (0,17)).setObjects(("MICOM-SYS-MIB", "mcmSysAsciiTimeOfDay"))
mcm4400E1FailToSyncUpRecovered = NotificationType((1, 3, 6, 1, 4, 1, 335, 1, 4, 22) + (0,18)).setObjects(("MICOM-SYS-MIB", "mcmSysAsciiTimeOfDay"))
mcm4400E1AISAlarmSet = NotificationType((1, 3, 6, 1, 4, 1, 335, 1, 4, 22) + (0,19)).setObjects(("MICOM-SYS-MIB", "mcmSysAsciiTimeOfDay"), ("MICOM-4400-T1E1-MIB", "mcm4400t1e1LineStatusLineIndex"))
mcm4400E1AISAlarmClear = NotificationType((1, 3, 6, 1, 4, 1, 335, 1, 4, 22) + (0,20)).setObjects(("MICOM-SYS-MIB", "mcmSysAsciiTimeOfDay"), ("MICOM-4400-T1E1-MIB", "mcm4400t1e1LineStatusLineIndex"))
mcm4400E1RedAlarmSet = NotificationType((1, 3, 6, 1, 4, 1, 335, 1, 4, 22) + (0,21)).setObjects(("MICOM-SYS-MIB", "mcmSysAsciiTimeOfDay"), ("MICOM-4400-T1E1-MIB", "mcm4400t1e1LineStatusLineIndex"))
mcm4400E1RedAlarmClear = NotificationType((1, 3, 6, 1, 4, 1, 335, 1, 4, 22) + (0,22)).setObjects(("MICOM-SYS-MIB", "mcmSysAsciiTimeOfDay"), ("MICOM-4400-T1E1-MIB", "mcm4400t1e1LineStatusLineIndex"))
mcm4400E1TS16AISAlarmSet = NotificationType((1, 3, 6, 1, 4, 1, 335, 1, 4, 22) + (0,23)).setObjects(("MICOM-SYS-MIB", "mcmSysAsciiTimeOfDay"), ("MICOM-4400-T1E1-MIB", "mcm4400t1e1LineStatusLineIndex"))
mcm4400E1TS16AISAlarmClear = NotificationType((1, 3, 6, 1, 4, 1, 335, 1, 4, 22) + (0,24)).setObjects(("MICOM-SYS-MIB", "mcmSysAsciiTimeOfDay"), ("MICOM-4400-T1E1-MIB", "mcm4400t1e1LineStatusLineIndex"))
mcm4400E1OOSMFAlarmSet = NotificationType((1, 3, 6, 1, 4, 1, 335, 1, 4, 22) + (0,25)).setObjects(("MICOM-SYS-MIB", "mcmSysAsciiTimeOfDay"), ("MICOM-4400-T1E1-MIB", "mcm4400t1e1LineStatusLineIndex"))
mcm4400E1OOSMFAlarmClear = NotificationType((1, 3, 6, 1, 4, 1, 335, 1, 4, 22) + (0,26)).setObjects(("MICOM-SYS-MIB", "mcmSysAsciiTimeOfDay"), ("MICOM-4400-T1E1-MIB", "mcm4400t1e1LineStatusLineIndex"))
mcm4400E1RemoteYBitAlarmSet = NotificationType((1, 3, 6, 1, 4, 1, 335, 1, 4, 22) + (0,27)).setObjects(("MICOM-SYS-MIB", "mcmSysAsciiTimeOfDay"), ("MICOM-4400-T1E1-MIB", "mcm4400t1e1LineStatusLineIndex"))
mcm4400E1RemoteYBitAlarmClear = NotificationType((1, 3, 6, 1, 4, 1, 335, 1, 4, 22) + (0,28)).setObjects(("MICOM-SYS-MIB", "mcmSysAsciiTimeOfDay"), ("MICOM-4400-T1E1-MIB", "mcm4400t1e1LineStatusLineIndex"))
mcm4400E1RemoteABitAlarmSet = NotificationType((1, 3, 6, 1, 4, 1, 335, 1, 4, 22) + (0,29)).setObjects(("MICOM-SYS-MIB", "mcmSysAsciiTimeOfDay"), ("MICOM-4400-T1E1-MIB", "mcm4400t1e1LineStatusLineIndex"))
mcm4400E1RemoteABitAlarmClear = NotificationType((1, 3, 6, 1, 4, 1, 335, 1, 4, 22) + (0,30)).setObjects(("MICOM-SYS-MIB", "mcmSysAsciiTimeOfDay"), ("MICOM-4400-T1E1-MIB", "mcm4400t1e1LineStatusLineIndex"))
mcm4400E1OOCMFAlarmSet = NotificationType((1, 3, 6, 1, 4, 1, 335, 1, 4, 22) + (0,31)).setObjects(("MICOM-SYS-MIB", "mcmSysAsciiTimeOfDay"), ("MICOM-4400-T1E1-MIB", "mcm4400t1e1LineStatusLineIndex"))
mcm4400E1OOCMFAlarmClear = NotificationType((1, 3, 6, 1, 4, 1, 335, 1, 4, 22) + (0,32)).setObjects(("MICOM-SYS-MIB", "mcmSysAsciiTimeOfDay"), ("MICOM-4400-T1E1-MIB", "mcm4400t1e1LineStatusLineIndex"))
mibBuilder.exportSymbols("MICOM-4400-T1E1-MIB", mcm4400E1TS16AISAlarmClear=mcm4400E1TS16AISAlarmClear, mcm4400t1e1LineStatsTotalFrameSlip=mcm4400t1e1LineStatsTotalFrameSlip, mcm4400T1AISAlarmClear=mcm4400T1AISAlarmClear, mcm4400t1e1ProfCfgT1LineBuildOut=mcm4400t1e1ProfCfgT1LineBuildOut, mcm4400t1e1DPStatusEntry=mcm4400t1e1DPStatusEntry, mcm4400t1e1DPStatusRTSInputSt=mcm4400t1e1DPStatusRTSInputSt, mcm4400t1e1SysStatusBootSwVer=mcm4400t1e1SysStatusBootSwVer, nvm4400t1e1ProfCfgEntry=nvm4400t1e1ProfCfgEntry, mcm4400t1e1ProfCfgProfileNum=mcm4400t1e1ProfCfgProfileNum, mcm4400t1e1LineStatsFarEndBlkError=mcm4400t1e1LineStatsFarEndBlkError, nvm4400t1e1DPCfgEntry=nvm4400t1e1DPCfgEntry, nvm4400t1e1DS0ChConnEntry=nvm4400t1e1DS0ChConnEntry, mcm4400t1e1DPCfgClock=mcm4400t1e1DPCfgClock, mcm4400t1e1DPCfgDataRate=mcm4400t1e1DPCfgDataRate, mcm4400t1e1LineTestCmdTstPattern=mcm4400t1e1LineTestCmdTstPattern, mcm4400t1e1LineStatusOOSMFAlarm=mcm4400t1e1LineStatusOOSMFAlarm, nvm4400t1e1DPCfgDTRCntl=nvm4400t1e1DPCfgDTRCntl, mcm4400t1e1ProfCfgE1TS16Conn=mcm4400t1e1ProfCfgE1TS16Conn, nvm4400t1e1ProfCfgT1LineBuildOut=nvm4400t1e1ProfCfgT1LineBuildOut, nvm4400t1e1DPCfgDataRate=nvm4400t1e1DPCfgDataRate, mcm4400t1e1DS0ChTestCmdTstPattern=mcm4400t1e1DS0ChTestCmdTstPattern, mcm4400t1e1LineStatsInterface=mcm4400t1e1LineStatsInterface, mcm4400t1e1DS0ChTestCmdTable=mcm4400t1e1DS0ChTestCmdTable, mcm4400t1e1ChTestResultsDS0Ch=mcm4400t1e1ChTestResultsDS0Ch, mcm4400T1NoCodeImage=mcm4400T1NoCodeImage, mcm4400t1e1DPStatusCTSOutputSt=mcm4400t1e1DPStatusCTSOutputSt, mcm4400E1NoCodeImage=mcm4400E1NoCodeImage, mcm4400t1e1DS0ChSigDS0Index=mcm4400t1e1DS0ChSigDS0Index, mcm4400t1e1ProfCfgT1LineCode=mcm4400t1e1ProfCfgT1LineCode, mcm4400t1e1LineStatsFrmSyncBitError=mcm4400t1e1LineStatsFrmSyncBitError, mcm4400t1e1SysStatusOperStatus=mcm4400t1e1SysStatusOperStatus, mcm4400t1e1LineStatusTestMode=mcm4400t1e1LineStatusTestMode, mcm4400E1DownloadFail=mcm4400E1DownloadFail, mcm4400t1e1LineStatusOOCMFAlarm=mcm4400t1e1LineStatusOOCMFAlarm, mcm4400t1e1DS0ChConnState=mcm4400t1e1DS0ChConnState, mcm4400t1e1DS0ChSigLineID=mcm4400t1e1DS0ChSigLineID, nvm4400t1e1DS0ChConnTable=nvm4400t1e1DS0ChConnTable, mcm4400t1e1SysStatusApplSwID=mcm4400t1e1SysStatusApplSwID, mcm4400t1e1LineStatusTable=mcm4400t1e1LineStatusTable, mcm4400t1e1DS0ChConnDS0Index=mcm4400t1e1DS0ChConnDS0Index, mcm4400E1FailToSyncUp=mcm4400E1FailToSyncUp, nvm4400t1e1DPCfgPortNum=nvm4400t1e1DPCfgPortNum, mcm4400E1RemoteYBitAlarmSet=mcm4400E1RemoteYBitAlarmSet, nvm4400t1e1LineCfgTable=nvm4400t1e1LineCfgTable, nvm4400t1e1ProfCfgProfileNum=nvm4400t1e1ProfCfgProfileNum, mcm4400E1OutOfOrder=mcm4400E1OutOfOrder, mcm4400t1e1DPCfgTable=mcm4400t1e1DPCfgTable, mcm4400E1OOSMFAlarmClear=mcm4400E1OOSMFAlarmClear, mcm4400t1e1LineStatusInterface=mcm4400t1e1LineStatusInterface, mcm4400t1e1DPStatusDCDOutputSt=mcm4400t1e1DPStatusDCDOutputSt, mcm4400t1e1LineStatsLineIndex=mcm4400t1e1LineStatsLineIndex, mcm4400E1RemoteYBitAlarmClear=mcm4400E1RemoteYBitAlarmClear, mcm4400t1e1DPStatusDSROutputSt=mcm4400t1e1DPStatusDSROutputSt, nvm4400t1e1ProfCfgIdleCode=nvm4400t1e1ProfCfgIdleCode, nvm4400t1e1ProfCfgTable=nvm4400t1e1ProfCfgTable, mcm4400t1e1DS0ChSigTable=mcm4400t1e1DS0ChSigTable, mcm4400t1e1DPTestCmdEntry=mcm4400t1e1DPTestCmdEntry, mcm4400t1e1DPTestCmdTstPattern=mcm4400t1e1DPTestCmdTstPattern, mcm4400E1TS16AISAlarmSet=mcm4400E1TS16AISAlarmSet, mcm4400t1e1LineStatsBufferOverrun=mcm4400t1e1LineStatsBufferOverrun, mcm4400t1e1SysControlActionCmd=mcm4400t1e1SysControlActionCmd, mcm4400t1e1LineTestCmdTable=mcm4400t1e1LineTestCmdTable, nvm4400t1e1DPCfgClock=nvm4400t1e1DPCfgClock, mcm4400t1e1ProfCfgE1CRC4=mcm4400t1e1ProfCfgE1CRC4, nvm4400t1e1ProfCfgE1TS16Conn=nvm4400t1e1ProfCfgE1TS16Conn, mcm4400t1e1LineStatsEntry=mcm4400t1e1LineStatsEntry, mcm4400t1e1DS0ChTestCmdDS0Index=mcm4400t1e1DS0ChTestCmdDS0Index, mcm4400T1YellowAlarmSet=mcm4400T1YellowAlarmSet, nvm4400t1e1ProfCfgE1CRC4=nvm4400t1e1ProfCfgE1CRC4, mcm4400E1AISAlarmSet=mcm4400E1AISAlarmSet, mcm4400t1e1LineCfgProfileNum=mcm4400t1e1LineCfgProfileNum, mcm4400E1OOCMFAlarmSet=mcm4400E1OOCMFAlarmSet, mcm4400t1e1LineStatusYellowAlarm=mcm4400t1e1LineStatusYellowAlarm, mcm4400t1e1LineStatusTestingDS0Ch=mcm4400t1e1LineStatusTestingDS0Ch, mcm4400t1e1DPStatusPortNumber=mcm4400t1e1DPStatusPortNumber, mcm4400t1e1LineCfgEntry=mcm4400t1e1LineCfgEntry, mcm4400T1OutOfOrder=mcm4400T1OutOfOrder, nvm4400t1e1ProfCfgT1Loopback=nvm4400t1e1ProfCfgT1Loopback, mcm4400t1e1LineStatsCRCError=mcm4400t1e1LineStatsCRCError, mcm4400t1e1LineTestCmdEntry=mcm4400t1e1LineTestCmdEntry, mcm4400t1e1LineStatusEntry=mcm4400t1e1LineStatusEntry, mcm4400t1e1ProfCfgTable=mcm4400t1e1ProfCfgTable, mcm4400E1AISAlarmClear=mcm4400E1AISAlarmClear, mcm4400t1e1DS0ChTestCmdEntry=mcm4400t1e1DS0ChTestCmdEntry, nvm4400t1e1DS0ChConnState=nvm4400t1e1DS0ChConnState, mcm4400E1OutOfOrderRecovered=mcm4400E1OutOfOrderRecovered, mcm4400T1RedAlarmClear=mcm4400T1RedAlarmClear, mcm4400t1e1DS0ChSigInABCDBits=mcm4400t1e1DS0ChSigInABCDBits, mcm4400E1OOSMFAlarmSet=mcm4400E1OOSMFAlarmSet, nvm4400t1e1DPCfgRTSCntl=nvm4400t1e1DPCfgRTSCntl, mcm4400t1e1DS0ChTestCmdLineID=mcm4400t1e1DS0ChTestCmdLineID, mcm4400T1FailToSyncUp=mcm4400T1FailToSyncUp, mcm4400t1e1DS0ChConnTable=mcm4400t1e1DS0ChConnTable, mcm4400t1e1LineCfgTable=mcm4400t1e1LineCfgTable, mcm4400T1YellowAlarmClear=mcm4400T1YellowAlarmClear, mcm4400t1e1ProfCfgE1LineCode=mcm4400t1e1ProfCfgE1LineCode, mcm4400t1e1LineStatsTable=mcm4400t1e1LineStatsTable, nvm4400t1e1LineCfgEntry=nvm4400t1e1LineCfgEntry, mcm4400T1OutOfOrderRecovered=mcm4400T1OutOfOrderRecovered, mcm4400t1e1LineStatusAISAlarm=mcm4400t1e1LineStatusAISAlarm, mcm4400t1e1LineStatusRedAlarm=mcm4400t1e1LineStatusRedAlarm, mcm4400t1e1SysStatusCardType=mcm4400t1e1SysStatusCardType, t1e1_r2_status=t1e1_r2_status, mcm4400t1e1SysCfgClockSource=mcm4400t1e1SysCfgClockSource, mcm4400t1e1DPCfgPortNum=mcm4400t1e1DPCfgPortNum, mcm4400E1OOCMFAlarmClear=mcm4400E1OOCMFAlarmClear, mcm4400T1DownloadFail=mcm4400T1DownloadFail, mcm4400t1e1LineStatusLineIndex=mcm4400t1e1LineStatusLineIndex, mcm4400t1e1ProfCfgT1Loopback=mcm4400t1e1ProfCfgT1Loopback, nvm4400t1e1DPCfgTable=nvm4400t1e1DPCfgTable, nvm4400t1e1SysCfgClockSource=nvm4400t1e1SysCfgClockSource, nvm4400t1e1DS0ChConnDS0Index=nvm4400t1e1DS0ChConnDS0Index, mcm4400t1e1DPTestCmdPortNum=mcm4400t1e1DPTestCmdPortNum, mcm4400T1RedAlarmSet=mcm4400T1RedAlarmSet, mcm4400E1RedAlarmClear=mcm4400E1RedAlarmClear, mcm4400t1e1DS0ChConnLineID=mcm4400t1e1DS0ChConnLineID, micom_2t1e1=micom_2t1e1, mcm4400t1e1ChTestResultsErrorCnt=mcm4400t1e1ChTestResultsErrorCnt, mcm4400t1e1DS0ChSigOutABCDBits=mcm4400t1e1DS0ChSigOutABCDBits, nvm4400t1e1DS0ChConnLineID=nvm4400t1e1DS0ChConnLineID, mcm4400t1e1DPStatusTable=mcm4400t1e1DPStatusTable, mcm4400T1AISAlarmSet=mcm4400T1AISAlarmSet, mcm4400E1FailToSyncUpRecovered=mcm4400E1FailToSyncUpRecovered, mcm4400t1e1LineStatsLineCdViolation=mcm4400t1e1LineStatsLineCdViolation, mcm4400t1e1DPCfgEntry=mcm4400t1e1DPCfgEntry, mcm4400t1e1SysStatusGroup=mcm4400t1e1SysStatusGroup, mcm4400t1e1LineStatusFASAlarm=mcm4400t1e1LineStatusFASAlarm, mcm4400t1e1DPStatusDTRInputSt=mcm4400t1e1DPStatusDTRInputSt, mcm4400t1e1SysStatusLEDTest=mcm4400t1e1SysStatusLEDTest, mcm4400t1e1ChTestResultsGroup=mcm4400t1e1ChTestResultsGroup, mcm4400E1RedAlarmSet=mcm4400E1RedAlarmSet, mcm4400t1e1DPCfgRTSCntl=mcm4400t1e1DPCfgRTSCntl, mcm4400t1e1ChTestResultsLineID=mcm4400t1e1ChTestResultsLineID, mcm4400t1e1SysStatusFlashEPROMSt=mcm4400t1e1SysStatusFlashEPROMSt, mcm4400t1e1LineStatusTS16AIS=mcm4400t1e1LineStatusTS16AIS, mcm4400t1e1DS0ChSigEntry=mcm4400t1e1DS0ChSigEntry, mcm4400t1e1SysStatusSelfTestResults=mcm4400t1e1SysStatusSelfTestResults, t1e1_r2_control=t1e1_r2_control, mcm4400t1e1LineStatsBufferUnderrun=mcm4400t1e1LineStatsBufferUnderrun, mcm4400t1e1LineStatusMFASAlarm=mcm4400t1e1LineStatusMFASAlarm, mcm4400t1e1LineStatsOutOfFrame=mcm4400t1e1LineStatsOutOfFrame, mcm4400t1e1DS0ChConnEntry=mcm4400t1e1DS0ChConnEntry, mcm4400E1RemoteABitAlarmClear=mcm4400E1RemoteABitAlarmClear, nvm4400t1e1LineCfgProfileNum=nvm4400t1e1LineCfgProfileNum, mcm4400t1e1ProfCfgEntry=mcm4400t1e1ProfCfgEntry, mcm4400t1e1LineTestCmdLineID=mcm4400t1e1LineTestCmdLineID, t1e1_r2_statistics=t1e1_r2_statistics, mcm4400t1e1ProfCfgIdleCode=mcm4400t1e1ProfCfgIdleCode, mcm4400t1e1DPTestCmdTable=mcm4400t1e1DPTestCmdTable, nvm4400t1e1ProfCfgT1LineCode=nvm4400t1e1ProfCfgT1LineCode, mcm4400t1e1LineStatusImpedance=mcm4400t1e1LineStatusImpedance, mcm4400E1RemoteABitAlarmSet=mcm4400E1RemoteABitAlarmSet, t1e1_r2_configuration=t1e1_r2_configuration, nvm4400t1e1ProfCfgE1LineCode=nvm4400t1e1ProfCfgE1LineCode, mcm4400T1FailToSyncUpRecovered=mcm4400T1FailToSyncUpRecovered, nvm4400t1e1ProfCfgT1FrameFmt=nvm4400t1e1ProfCfgT1FrameFmt, mcm4400t1e1ProfCfgT1FrameFmt=mcm4400t1e1ProfCfgT1FrameFmt, mcm4400t1e1DPCfgDTRCntl=mcm4400t1e1DPCfgDTRCntl, mcm4400t1e1LineStatsFramingBitError=mcm4400t1e1LineStatsFramingBitError, mcm4400t1e1LineCfgLineID=mcm4400t1e1LineCfgLineID, nvm4400t1e1LineCfgLineID=nvm4400t1e1LineCfgLineID)
