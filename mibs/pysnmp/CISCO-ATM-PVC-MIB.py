#
# PySNMP MIB module CISCO-ATM-PVC-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CISCO-ATM-PVC-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:33:18 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, SingleValueConstraint, ConstraintsIntersection, ConstraintsUnion, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "SingleValueConstraint", "ConstraintsIntersection", "ConstraintsUnion", "ValueRangeConstraint")
ciscoMgmt, = mibBuilder.importSymbols("CISCO-SMI", "ciscoMgmt")
ObjectGroup, ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "ModuleCompliance", "NotificationGroup")
Unsigned32, TimeTicks, IpAddress, ModuleIdentity, Counter32, MibScalar, MibTable, MibTableRow, MibTableColumn, Gauge32, ObjectIdentity, MibIdentifier, Counter64, iso, Integer32, Bits, NotificationType = mibBuilder.importSymbols("SNMPv2-SMI", "Unsigned32", "TimeTicks", "IpAddress", "ModuleIdentity", "Counter32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Gauge32", "ObjectIdentity", "MibIdentifier", "Counter64", "iso", "Integer32", "Bits", "NotificationType")
RowStatus, TruthValue, DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "RowStatus", "TruthValue", "DisplayString", "TextualConvention")
ciscoAtmPvcMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 9, 9, 94))
ciscoAtmPvcMIB.setRevisions(('2002-04-11 00:00', '1997-11-18 00:00',))
if mibBuilder.loadTexts: ciscoAtmPvcMIB.setLastUpdated('200204110000Z')
if mibBuilder.loadTexts: ciscoAtmPvcMIB.setOrganization('Cisco Systems, Inc.')
ciscoAtmPvcMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 94, 1))
ciscoAtmPvcCreateBindGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 94, 1, 1))
capvcTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 94, 1, 1, 1), )
if mibBuilder.loadTexts: capvcTable.setStatus('current')
capvcEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 94, 1, 1, 1, 1), ).setIndexNames((0, "CISCO-ATM-PVC-MIB", "capvcPort"), (0, "CISCO-ATM-PVC-MIB", "capvcVPI"), (0, "CISCO-ATM-PVC-MIB", "capvcVCI"))
if mibBuilder.loadTexts: capvcEntry.setStatus('current')
capvcPort = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 94, 1, 1, 1, 1, 1), Unsigned32())
if mibBuilder.loadTexts: capvcPort.setStatus('current')
capvcVPI = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 94, 1, 1, 1, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4095)))
if mibBuilder.loadTexts: capvcVPI.setStatus('current')
capvcVCI = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 94, 1, 1, 1, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)))
if mibBuilder.loadTexts: capvcVCI.setStatus('current')
capvcVCD = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 94, 1, 1, 1, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4095))).setMaxAccess("readonly")
if mibBuilder.loadTexts: capvcVCD.setStatus('current')
capvcType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 94, 1, 1, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("aal5snap", 1), ("ilmi", 2), ("qsaal", 3)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: capvcType.setStatus('current')
capvcPCR = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 94, 1, 1, 1, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 155000))).setUnits('kbps').setMaxAccess("readcreate")
if mibBuilder.loadTexts: capvcPCR.setStatus('current')
capvcOAM = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 94, 1, 1, 1, 1, 7), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: capvcOAM.setStatus('current')
capvcFrequency = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 94, 1, 1, 1, 1, 8), Unsigned32().clone(10)).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: capvcFrequency.setStatus('current')
capvcVlanId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 94, 1, 1, 1, 1, 9), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 1024))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: capvcVlanId.setStatus('current')
capvcRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 94, 1, 1, 1, 1, 10), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: capvcRowStatus.setStatus('current')
ciscoAtmPvcMIBConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 94, 3))
ciscoAtmPvcMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 94, 3, 1))
ciscoAtmPvcMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 94, 3, 2))
ciscoAtmPvcMIBCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 94, 3, 1, 1)).setObjects(("CISCO-ATM-PVC-MIB", "ciscoAtmPvcMIBGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoAtmPvcMIBCompliance = ciscoAtmPvcMIBCompliance.setStatus('current')
ciscoAtmPvcMIBGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 94, 3, 2, 1)).setObjects(("CISCO-ATM-PVC-MIB", "capvcVCD"), ("CISCO-ATM-PVC-MIB", "capvcType"), ("CISCO-ATM-PVC-MIB", "capvcPCR"), ("CISCO-ATM-PVC-MIB", "capvcOAM"), ("CISCO-ATM-PVC-MIB", "capvcFrequency"), ("CISCO-ATM-PVC-MIB", "capvcVlanId"), ("CISCO-ATM-PVC-MIB", "capvcRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoAtmPvcMIBGroup = ciscoAtmPvcMIBGroup.setStatus('current')
mibBuilder.exportSymbols("CISCO-ATM-PVC-MIB", capvcType=capvcType, capvcVCI=capvcVCI, capvcOAM=capvcOAM, capvcVlanId=capvcVlanId, ciscoAtmPvcMIB=ciscoAtmPvcMIB, capvcEntry=capvcEntry, ciscoAtmPvcMIBGroups=ciscoAtmPvcMIBGroups, ciscoAtmPvcMIBObjects=ciscoAtmPvcMIBObjects, capvcTable=capvcTable, ciscoAtmPvcMIBConformance=ciscoAtmPvcMIBConformance, ciscoAtmPvcCreateBindGroup=ciscoAtmPvcCreateBindGroup, capvcRowStatus=capvcRowStatus, ciscoAtmPvcMIBCompliance=ciscoAtmPvcMIBCompliance, capvcVPI=capvcVPI, PYSNMP_MODULE_ID=ciscoAtmPvcMIB, ciscoAtmPvcMIBCompliances=ciscoAtmPvcMIBCompliances, capvcVCD=capvcVCD, capvcPort=capvcPort, capvcPCR=capvcPCR, ciscoAtmPvcMIBGroup=ciscoAtmPvcMIBGroup, capvcFrequency=capvcFrequency)
