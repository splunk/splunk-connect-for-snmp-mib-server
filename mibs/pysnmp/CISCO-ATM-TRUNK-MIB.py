#
# PySNMP MIB module CISCO-ATM-TRUNK-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CISCO-ATM-TRUNK-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:33:39 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ValueSizeConstraint, ConstraintsIntersection, ValueRangeConstraint, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ValueSizeConstraint", "ConstraintsIntersection", "ValueRangeConstraint", "SingleValueConstraint")
ciscoMgmt, = mibBuilder.importSymbols("CISCO-SMI", "ciscoMgmt")
ConfigIterator, BulkConfigResult = mibBuilder.importSymbols("CISCO-TC", "ConfigIterator", "BulkConfigResult")
CiscoAal2ProfileType, CiscoAal2ProfileNumber = mibBuilder.importSymbols("CISCO-VOICE-AALX-PROFILE-MIB", "CiscoAal2ProfileType", "CiscoAal2ProfileNumber")
CvcCoderTypeRate, CvcSpeechCoderRate = mibBuilder.importSymbols("CISCO-VOICE-COMMON-DIAL-CONTROL-MIB", "CvcCoderTypeRate", "CvcSpeechCoderRate")
ifIndex, InterfaceIndex = mibBuilder.importSymbols("IF-MIB", "ifIndex", "InterfaceIndex")
OwnerString, = mibBuilder.importSymbols("RMON-MIB", "OwnerString")
ObjectGroup, NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "NotificationGroup", "ModuleCompliance")
IpAddress, Gauge32, iso, Unsigned32, MibScalar, MibTable, MibTableRow, MibTableColumn, Bits, Counter64, ModuleIdentity, NotificationType, Integer32, Counter32, ObjectIdentity, TimeTicks, MibIdentifier = mibBuilder.importSymbols("SNMPv2-SMI", "IpAddress", "Gauge32", "iso", "Unsigned32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Bits", "Counter64", "ModuleIdentity", "NotificationType", "Integer32", "Counter32", "ObjectIdentity", "TimeTicks", "MibIdentifier")
TextualConvention, DisplayString, TimeStamp, RowStatus, TruthValue = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString", "TimeStamp", "RowStatus", "TruthValue")
ciscoAtmTrunkMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 9, 9, 351))
ciscoAtmTrunkMIB.setRevisions(('2003-07-18 00:00',))
if mibBuilder.loadTexts: ciscoAtmTrunkMIB.setLastUpdated('200307180000Z')
if mibBuilder.loadTexts: ciscoAtmTrunkMIB.setOrganization('Cisco Systems, Inc.')
cAtmTrunkMIBNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 351, 0))
cAtmTrunkMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 351, 1))
cAtmTrunkCidConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 351, 1, 1))
cAtmTrunkCidConnStats = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 351, 1, 2))
cAtmTrunkAal1Config = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 351, 1, 3))
cAtmTrunkAal1ConnStats = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 351, 1, 4))
cAtmTrunkAal5Config = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 351, 1, 5))
cAtmTrunkAal5ConnStats = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 351, 1, 6))
class Counter32SinceReset(TextualConvention, Unsigned32):
    status = 'current'
    subtypeSpec = Unsigned32.subtypeSpec + ValueRangeConstraint(0, 2147483647)

catmtCidTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 351, 1, 1, 1), )
if mibBuilder.loadTexts: catmtCidTable.setStatus('current')
catmtCidEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 351, 1, 1, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "CISCO-ATM-TRUNK-MIB", "catmtCidVpi"), (0, "CISCO-ATM-TRUNK-MIB", "catmtCidVci"), (0, "CISCO-ATM-TRUNK-MIB", "catmtCid"))
if mibBuilder.loadTexts: catmtCidEntry.setStatus('current')
catmtCidVpi = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 351, 1, 1, 1, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4095)))
if mibBuilder.loadTexts: catmtCidVpi.setStatus('current')
catmtCidVci = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 351, 1, 1, 1, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)))
if mibBuilder.loadTexts: catmtCidVci.setStatus('current')
catmtCid = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 351, 1, 1, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(8, 255)))
if mibBuilder.loadTexts: catmtCid.setStatus('current')
catmtCidDs1 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 351, 1, 1, 1, 1, 4), InterfaceIndex()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: catmtCidDs1.setStatus('current')
catmtCidDs0GroupIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 351, 1, 1, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 30))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: catmtCidDs0GroupIndex.setStatus('current')
catmtCidProfileType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 351, 1, 1, 1, 1, 6), CiscoAal2ProfileType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: catmtCidProfileType.setStatus('current')
catmtCidProfileNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 351, 1, 1, 1, 1, 7), CiscoAal2ProfileNumber()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: catmtCidProfileNumber.setStatus('current')
catmtCidVoiceCodec = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 351, 1, 1, 1, 1, 8), CvcSpeechCoderRate()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: catmtCidVoiceCodec.setStatus('current')
catmtCidVBDCodec = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 351, 1, 1, 1, 1, 9), CvcCoderTypeRate()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: catmtCidVBDCodec.setStatus('current')
catmtCidNx64Enable = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 351, 1, 1, 1, 1, 10), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: catmtCidNx64Enable.setStatus('current')
catmtCidNx64Profile = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 351, 1, 1, 1, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)).clone(1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: catmtCidNx64Profile.setStatus('current')
catmtCidStateBitMap = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 351, 1, 1, 1, 1, 12), Bits().clone(namedValues=NamedValues(("pvcAdminDown", 0), ("pvcFailure", 1), ("extAIS", 2), ("extRAI", 3), ("aal2ConnAIS", 4), ("aal2ConnRDI", 5), ("lineAlarm", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: catmtCidStateBitMap.setStatus('current')
catmtCidRepetition = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 351, 1, 1, 1, 1, 13), ConfigIterator().clone(1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: catmtCidRepetition.setStatus('current')
catmtCidRepetitionOwner = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 351, 1, 1, 1, 1, 14), OwnerString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: catmtCidRepetitionOwner.setStatus('current')
catmtCidRepetitionResult = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 351, 1, 1, 1, 1, 15), BulkConfigResult()).setMaxAccess("readonly")
if mibBuilder.loadTexts: catmtCidRepetitionResult.setStatus('current')
catmtCidRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 351, 1, 1, 1, 1, 16), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: catmtCidRowStatus.setStatus('current')
catmtCidStatsTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 351, 1, 2, 1), )
if mibBuilder.loadTexts: catmtCidStatsTable.setStatus('current')
catmtCidStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 351, 1, 2, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "CISCO-ATM-TRUNK-MIB", "catmtCidVpi"), (0, "CISCO-ATM-TRUNK-MIB", "catmtCidVci"), (0, "CISCO-ATM-TRUNK-MIB", "catmtCid"))
if mibBuilder.loadTexts: catmtCidStatsEntry.setStatus('current')
catmtCidSentPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 351, 1, 2, 1, 1, 1), Counter32SinceReset()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: catmtCidSentPackets.setStatus('current')
catmtCidRcvdPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 351, 1, 2, 1, 1, 2), Counter32SinceReset()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: catmtCidRcvdPackets.setStatus('current')
catmtCidSentOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 351, 1, 2, 1, 1, 3), Counter32SinceReset()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: catmtCidSentOctets.setStatus('current')
catmtCidRcvdOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 351, 1, 2, 1, 1, 4), Counter32SinceReset()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: catmtCidRcvdOctets.setStatus('current')
catmtCidLostPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 351, 1, 2, 1, 1, 5), Counter32SinceReset()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: catmtCidLostPackets.setStatus('current')
catmtCidJitter = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 351, 1, 2, 1, 1, 6), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: catmtCidJitter.setStatus('current')
catmtCidExtAISCnts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 351, 1, 2, 1, 1, 7), Counter32SinceReset()).setMaxAccess("readonly")
if mibBuilder.loadTexts: catmtCidExtAISCnts.setStatus('current')
catmtCidExtRAICnts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 351, 1, 2, 1, 1, 8), Counter32SinceReset()).setMaxAccess("readonly")
if mibBuilder.loadTexts: catmtCidExtRAICnts.setStatus('current')
catmtCidConnAISCnts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 351, 1, 2, 1, 1, 9), Counter32SinceReset()).setMaxAccess("readonly")
if mibBuilder.loadTexts: catmtCidConnAISCnts.setStatus('current')
catmtCidConnRDICnts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 351, 1, 2, 1, 1, 10), Counter32SinceReset()).setMaxAccess("readonly")
if mibBuilder.loadTexts: catmtCidConnRDICnts.setStatus('current')
catmtCidNx64FramesTxToTDM = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 351, 1, 2, 1, 1, 11), Counter32SinceReset()).setMaxAccess("readonly")
if mibBuilder.loadTexts: catmtCidNx64FramesTxToTDM.setStatus('current')
catmtCidNx64FramesRxFromTDM = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 351, 1, 2, 1, 1, 12), Counter32SinceReset()).setMaxAccess("readonly")
if mibBuilder.loadTexts: catmtCidNx64FramesRxFromTDM.setStatus('current')
catmtCidNx64EncBytesTxToTDM = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 351, 1, 2, 1, 1, 13), Counter32SinceReset()).setMaxAccess("readonly")
if mibBuilder.loadTexts: catmtCidNx64EncBytesTxToTDM.setStatus('current')
catmtCidNx64EncBytesRxFromTDM = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 351, 1, 2, 1, 1, 14), Counter32SinceReset()).setMaxAccess("readonly")
if mibBuilder.loadTexts: catmtCidNx64EncBytesRxFromTDM.setStatus('current')
catmtCidNx64InvalidFCSFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 351, 1, 2, 1, 1, 15), Counter32SinceReset()).setMaxAccess("readonly")
if mibBuilder.loadTexts: catmtCidNx64InvalidFCSFrames.setStatus('current')
catmtCidNx64AbortSeqFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 351, 1, 2, 1, 1, 16), Counter32SinceReset()).setMaxAccess("readonly")
if mibBuilder.loadTexts: catmtCidNx64AbortSeqFrames.setStatus('current')
catmtCidNx64InvalidShortFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 351, 1, 2, 1, 1, 17), Counter32SinceReset()).setMaxAccess("readonly")
if mibBuilder.loadTexts: catmtCidNx64InvalidShortFrames.setStatus('current')
catmtCidNx64InvalidLongFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 351, 1, 2, 1, 1, 18), Counter32SinceReset()).setMaxAccess("readonly")
if mibBuilder.loadTexts: catmtCidNx64InvalidLongFrames.setStatus('current')
catmtCidNx64NoByteAlignErrorFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 351, 1, 2, 1, 1, 19), Counter32SinceReset()).setMaxAccess("readonly")
if mibBuilder.loadTexts: catmtCidNx64NoByteAlignErrorFrames.setStatus('current')
catmtCidNx64RASTimeOutFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 351, 1, 2, 1, 1, 20), Counter32SinceReset()).setMaxAccess("readonly")
if mibBuilder.loadTexts: catmtCidNx64RASTimeOutFrames.setStatus('current')
catmtCidLastResetTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 351, 1, 2, 1, 1, 21), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: catmtCidLastResetTime.setStatus('current')
catmtCidCounterClear = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 351, 1, 2, 1, 1, 22), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: catmtCidCounterClear.setStatus('current')
catmtAal1Table = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 351, 1, 3, 1), )
if mibBuilder.loadTexts: catmtAal1Table.setStatus('current')
catmtAal1Entry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 351, 1, 3, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "CISCO-ATM-TRUNK-MIB", "catmtAal1Vpi"), (0, "CISCO-ATM-TRUNK-MIB", "catmtAal1Vci"))
if mibBuilder.loadTexts: catmtAal1Entry.setStatus('current')
catmtAal1Vpi = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 351, 1, 3, 1, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4095)))
if mibBuilder.loadTexts: catmtAal1Vpi.setStatus('current')
catmtAal1Vci = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 351, 1, 3, 1, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)))
if mibBuilder.loadTexts: catmtAal1Vci.setStatus('current')
catmtAal1Ds1 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 351, 1, 3, 1, 1, 3), InterfaceIndex()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: catmtAal1Ds1.setStatus('current')
catmtAal1Ds0GroupIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 351, 1, 3, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 30))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: catmtAal1Ds0GroupIndex.setStatus('current')
catmtAal1Nx64Profile = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 351, 1, 3, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)).clone(1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: catmtAal1Nx64Profile.setStatus('current')
catmtAal1RowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 351, 1, 3, 1, 1, 6), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: catmtAal1RowStatus.setStatus('current')
catmtAal1StatsTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 351, 1, 4, 1), )
if mibBuilder.loadTexts: catmtAal1StatsTable.setStatus('current')
catmtAal1StatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 351, 1, 4, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "CISCO-ATM-TRUNK-MIB", "catmtAal1Vpi"), (0, "CISCO-ATM-TRUNK-MIB", "catmtAal1Vci"))
if mibBuilder.loadTexts: catmtAal1StatsEntry.setStatus('current')
catmtAal1TxCells = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 351, 1, 4, 1, 1, 1), Counter32SinceReset()).setMaxAccess("readonly")
if mibBuilder.loadTexts: catmtAal1TxCells.setStatus('current')
catmtAal1RxCells = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 351, 1, 4, 1, 1, 2), Counter32SinceReset()).setMaxAccess("readonly")
if mibBuilder.loadTexts: catmtAal1RxCells.setStatus('current')
catmtAal1TxPayloadBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 351, 1, 4, 1, 1, 3), Counter32SinceReset()).setMaxAccess("readonly")
if mibBuilder.loadTexts: catmtAal1TxPayloadBytes.setStatus('current')
catmtAal1RxPayloadBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 351, 1, 4, 1, 1, 4), Counter32SinceReset()).setMaxAccess("readonly")
if mibBuilder.loadTexts: catmtAal1RxPayloadBytes.setStatus('current')
catmtAal1Jitter = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 351, 1, 4, 1, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: catmtAal1Jitter.setStatus('current')
catmtAal1LastResetTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 351, 1, 4, 1, 1, 6), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: catmtAal1LastResetTime.setStatus('current')
catmtAal1CounterClear = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 351, 1, 4, 1, 1, 7), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: catmtAal1CounterClear.setStatus('current')
catmtAal5Table = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 351, 1, 5, 1), )
if mibBuilder.loadTexts: catmtAal5Table.setStatus('current')
catmtAal5Entry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 351, 1, 5, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "CISCO-ATM-TRUNK-MIB", "catmtAal5Vpi"), (0, "CISCO-ATM-TRUNK-MIB", "catmtAal5Vci"))
if mibBuilder.loadTexts: catmtAal5Entry.setStatus('current')
catmtAal5Vpi = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 351, 1, 5, 1, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4095)))
if mibBuilder.loadTexts: catmtAal5Vpi.setStatus('current')
catmtAal5Vci = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 351, 1, 5, 1, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)))
if mibBuilder.loadTexts: catmtAal5Vci.setStatus('current')
catmtAal5Ds1 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 351, 1, 5, 1, 1, 3), InterfaceIndex()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: catmtAal5Ds1.setStatus('current')
catmtAal5Ds0GroupIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 351, 1, 5, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 30))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: catmtAal5Ds0GroupIndex.setStatus('current')
catmtAal5Nx64Profile = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 351, 1, 5, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)).clone(1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: catmtAal5Nx64Profile.setStatus('current')
catmtAal5RowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 351, 1, 5, 1, 1, 6), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: catmtAal5RowStatus.setStatus('current')
catmtAal5StatsTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 351, 1, 6, 1), )
if mibBuilder.loadTexts: catmtAal5StatsTable.setStatus('current')
catmtAal5StatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 351, 1, 6, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "CISCO-ATM-TRUNK-MIB", "catmtAal5Vpi"), (0, "CISCO-ATM-TRUNK-MIB", "catmtAal5Vci"))
if mibBuilder.loadTexts: catmtAal5StatsEntry.setStatus('current')
catmtAal5SentPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 351, 1, 6, 1, 1, 1), Counter32SinceReset()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: catmtAal5SentPackets.setStatus('current')
catmtAal5RcvdPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 351, 1, 6, 1, 1, 2), Counter32SinceReset()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: catmtAal5RcvdPackets.setStatus('current')
catmtAal5SentOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 351, 1, 6, 1, 1, 3), Counter32SinceReset()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: catmtAal5SentOctets.setStatus('current')
catmtAal5RcvdOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 351, 1, 6, 1, 1, 4), Counter32SinceReset()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: catmtAal5RcvdOctets.setStatus('current')
catmtAal5FramesTxToTDM = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 351, 1, 6, 1, 1, 5), Counter32SinceReset()).setMaxAccess("readonly")
if mibBuilder.loadTexts: catmtAal5FramesTxToTDM.setStatus('current')
catmtAal5FramesRxFromTDM = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 351, 1, 6, 1, 1, 6), Counter32SinceReset()).setMaxAccess("readonly")
if mibBuilder.loadTexts: catmtAal5FramesRxFromTDM.setStatus('current')
catmtAal5EncBytesTxToTDM = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 351, 1, 6, 1, 1, 7), Counter32SinceReset()).setMaxAccess("readonly")
if mibBuilder.loadTexts: catmtAal5EncBytesTxToTDM.setStatus('current')
catmtAal5EncBytesRxFromTDM = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 351, 1, 6, 1, 1, 8), Counter32SinceReset()).setMaxAccess("readonly")
if mibBuilder.loadTexts: catmtAal5EncBytesRxFromTDM.setStatus('current')
catmtAal5InvalidFCSFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 351, 1, 6, 1, 1, 9), Counter32SinceReset()).setMaxAccess("readonly")
if mibBuilder.loadTexts: catmtAal5InvalidFCSFrames.setStatus('current')
catmtAal5AbortSeqFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 351, 1, 6, 1, 1, 10), Counter32SinceReset()).setMaxAccess("readonly")
if mibBuilder.loadTexts: catmtAal5AbortSeqFrames.setStatus('current')
catmtAal5InvalidShortFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 351, 1, 6, 1, 1, 11), Counter32SinceReset()).setMaxAccess("readonly")
if mibBuilder.loadTexts: catmtAal5InvalidShortFrames.setStatus('current')
catmtAal5InvalidLongFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 351, 1, 6, 1, 1, 12), Counter32SinceReset()).setMaxAccess("readonly")
if mibBuilder.loadTexts: catmtAal5InvalidLongFrames.setStatus('current')
catmtAal5NoByteAlignErrorFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 351, 1, 6, 1, 1, 13), Counter32SinceReset()).setMaxAccess("readonly")
if mibBuilder.loadTexts: catmtAal5NoByteAlignErrorFrames.setStatus('current')
catmtAal5LastResetTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 351, 1, 6, 1, 1, 14), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: catmtAal5LastResetTime.setStatus('current')
catmtAal5CounterClear = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 351, 1, 6, 1, 1, 15), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: catmtAal5CounterClear.setStatus('current')
cAtmTrunkMIBConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 351, 2))
cAtmTrunkMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 351, 2, 1))
cAtmTrunkMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 351, 2, 2))
cAtmTrunkMIBCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 351, 2, 1, 1)).setObjects(("CISCO-ATM-TRUNK-MIB", "cAtmTrunkCidMIBGroup"), ("CISCO-ATM-TRUNK-MIB", "cAtmTrunkAal1MIBGroup"), ("CISCO-ATM-TRUNK-MIB", "cAtmTrunkAal5MIBGroup"), ("CISCO-ATM-TRUNK-MIB", "cAtmTrunkCidConnStatsMIBGroup"), ("CISCO-ATM-TRUNK-MIB", "cAtmTrunkAal1ConnStatsMIBGroup"), ("CISCO-ATM-TRUNK-MIB", "cAtmTrunkAal5ConnStatsMIBGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cAtmTrunkMIBCompliance = cAtmTrunkMIBCompliance.setStatus('current')
cAtmTrunkCidMIBGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 351, 2, 2, 1)).setObjects(("CISCO-ATM-TRUNK-MIB", "catmtCidDs1"), ("CISCO-ATM-TRUNK-MIB", "catmtCidDs0GroupIndex"), ("CISCO-ATM-TRUNK-MIB", "catmtCidProfileType"), ("CISCO-ATM-TRUNK-MIB", "catmtCidProfileNumber"), ("CISCO-ATM-TRUNK-MIB", "catmtCidVoiceCodec"), ("CISCO-ATM-TRUNK-MIB", "catmtCidVBDCodec"), ("CISCO-ATM-TRUNK-MIB", "catmtCidNx64Enable"), ("CISCO-ATM-TRUNK-MIB", "catmtCidNx64Profile"), ("CISCO-ATM-TRUNK-MIB", "catmtCidStateBitMap"), ("CISCO-ATM-TRUNK-MIB", "catmtCidRepetition"), ("CISCO-ATM-TRUNK-MIB", "catmtCidRepetitionOwner"), ("CISCO-ATM-TRUNK-MIB", "catmtCidRepetitionResult"), ("CISCO-ATM-TRUNK-MIB", "catmtCidRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cAtmTrunkCidMIBGroup = cAtmTrunkCidMIBGroup.setStatus('current')
cAtmTrunkAal1MIBGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 351, 2, 2, 2)).setObjects(("CISCO-ATM-TRUNK-MIB", "catmtAal1Ds1"), ("CISCO-ATM-TRUNK-MIB", "catmtAal1Ds0GroupIndex"), ("CISCO-ATM-TRUNK-MIB", "catmtAal1Nx64Profile"), ("CISCO-ATM-TRUNK-MIB", "catmtAal1RowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cAtmTrunkAal1MIBGroup = cAtmTrunkAal1MIBGroup.setStatus('current')
cAtmTrunkAal5MIBGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 351, 2, 2, 3)).setObjects(("CISCO-ATM-TRUNK-MIB", "catmtAal5Ds1"), ("CISCO-ATM-TRUNK-MIB", "catmtAal5Ds0GroupIndex"), ("CISCO-ATM-TRUNK-MIB", "catmtAal5Nx64Profile"), ("CISCO-ATM-TRUNK-MIB", "catmtAal5RowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cAtmTrunkAal5MIBGroup = cAtmTrunkAal5MIBGroup.setStatus('current')
cAtmTrunkCidConnStatsMIBGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 351, 2, 2, 4)).setObjects(("CISCO-ATM-TRUNK-MIB", "catmtCidSentPackets"), ("CISCO-ATM-TRUNK-MIB", "catmtCidRcvdPackets"), ("CISCO-ATM-TRUNK-MIB", "catmtCidSentOctets"), ("CISCO-ATM-TRUNK-MIB", "catmtCidRcvdOctets"), ("CISCO-ATM-TRUNK-MIB", "catmtCidLostPackets"), ("CISCO-ATM-TRUNK-MIB", "catmtCidJitter"), ("CISCO-ATM-TRUNK-MIB", "catmtCidExtAISCnts"), ("CISCO-ATM-TRUNK-MIB", "catmtCidExtRAICnts"), ("CISCO-ATM-TRUNK-MIB", "catmtCidConnAISCnts"), ("CISCO-ATM-TRUNK-MIB", "catmtCidConnRDICnts"), ("CISCO-ATM-TRUNK-MIB", "catmtCidNx64FramesTxToTDM"), ("CISCO-ATM-TRUNK-MIB", "catmtCidNx64FramesRxFromTDM"), ("CISCO-ATM-TRUNK-MIB", "catmtCidNx64EncBytesTxToTDM"), ("CISCO-ATM-TRUNK-MIB", "catmtCidNx64EncBytesRxFromTDM"), ("CISCO-ATM-TRUNK-MIB", "catmtCidNx64InvalidFCSFrames"), ("CISCO-ATM-TRUNK-MIB", "catmtCidNx64AbortSeqFrames"), ("CISCO-ATM-TRUNK-MIB", "catmtCidNx64InvalidShortFrames"), ("CISCO-ATM-TRUNK-MIB", "catmtCidNx64InvalidLongFrames"), ("CISCO-ATM-TRUNK-MIB", "catmtCidNx64NoByteAlignErrorFrames"), ("CISCO-ATM-TRUNK-MIB", "catmtCidNx64RASTimeOutFrames"), ("CISCO-ATM-TRUNK-MIB", "catmtCidLastResetTime"), ("CISCO-ATM-TRUNK-MIB", "catmtCidCounterClear"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cAtmTrunkCidConnStatsMIBGroup = cAtmTrunkCidConnStatsMIBGroup.setStatus('current')
cAtmTrunkAal1ConnStatsMIBGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 351, 2, 2, 5)).setObjects(("CISCO-ATM-TRUNK-MIB", "catmtAal1TxCells"), ("CISCO-ATM-TRUNK-MIB", "catmtAal1RxCells"), ("CISCO-ATM-TRUNK-MIB", "catmtAal1TxPayloadBytes"), ("CISCO-ATM-TRUNK-MIB", "catmtAal1RxPayloadBytes"), ("CISCO-ATM-TRUNK-MIB", "catmtAal1Jitter"), ("CISCO-ATM-TRUNK-MIB", "catmtAal1LastResetTime"), ("CISCO-ATM-TRUNK-MIB", "catmtAal1CounterClear"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cAtmTrunkAal1ConnStatsMIBGroup = cAtmTrunkAal1ConnStatsMIBGroup.setStatus('current')
cAtmTrunkAal5ConnStatsMIBGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 351, 2, 2, 6)).setObjects(("CISCO-ATM-TRUNK-MIB", "catmtAal5SentPackets"), ("CISCO-ATM-TRUNK-MIB", "catmtAal5RcvdPackets"), ("CISCO-ATM-TRUNK-MIB", "catmtAal5SentOctets"), ("CISCO-ATM-TRUNK-MIB", "catmtAal5RcvdOctets"), ("CISCO-ATM-TRUNK-MIB", "catmtAal5FramesTxToTDM"), ("CISCO-ATM-TRUNK-MIB", "catmtAal5FramesRxFromTDM"), ("CISCO-ATM-TRUNK-MIB", "catmtAal5EncBytesTxToTDM"), ("CISCO-ATM-TRUNK-MIB", "catmtAal5EncBytesRxFromTDM"), ("CISCO-ATM-TRUNK-MIB", "catmtAal5InvalidFCSFrames"), ("CISCO-ATM-TRUNK-MIB", "catmtAal5AbortSeqFrames"), ("CISCO-ATM-TRUNK-MIB", "catmtAal5InvalidShortFrames"), ("CISCO-ATM-TRUNK-MIB", "catmtAal5InvalidLongFrames"), ("CISCO-ATM-TRUNK-MIB", "catmtAal5NoByteAlignErrorFrames"), ("CISCO-ATM-TRUNK-MIB", "catmtAal5LastResetTime"), ("CISCO-ATM-TRUNK-MIB", "catmtAal5CounterClear"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cAtmTrunkAal5ConnStatsMIBGroup = cAtmTrunkAal5ConnStatsMIBGroup.setStatus('current')
mibBuilder.exportSymbols("CISCO-ATM-TRUNK-MIB", cAtmTrunkAal5Config=cAtmTrunkAal5Config, cAtmTrunkAal1Config=cAtmTrunkAal1Config, catmtAal1Vci=catmtAal1Vci, catmtAal5StatsTable=catmtAal5StatsTable, catmtAal1RowStatus=catmtAal1RowStatus, catmtCidJitter=catmtCidJitter, catmtCidNx64EncBytesRxFromTDM=catmtCidNx64EncBytesRxFromTDM, catmtAal1Ds0GroupIndex=catmtAal1Ds0GroupIndex, cAtmTrunkAal5MIBGroup=cAtmTrunkAal5MIBGroup, catmtAal5EncBytesTxToTDM=catmtAal5EncBytesTxToTDM, catmtAal5RcvdOctets=catmtAal5RcvdOctets, cAtmTrunkCidConnStats=cAtmTrunkCidConnStats, catmtAal5SentOctets=catmtAal5SentOctets, catmtCidVoiceCodec=catmtCidVoiceCodec, catmtCidNx64FramesTxToTDM=catmtCidNx64FramesTxToTDM, cAtmTrunkMIBCompliances=cAtmTrunkMIBCompliances, cAtmTrunkAal1ConnStatsMIBGroup=cAtmTrunkAal1ConnStatsMIBGroup, catmtCidNx64AbortSeqFrames=catmtCidNx64AbortSeqFrames, cAtmTrunkAal5ConnStats=cAtmTrunkAal5ConnStats, catmtCidCounterClear=catmtCidCounterClear, catmtCidNx64Profile=catmtCidNx64Profile, catmtCidRepetitionOwner=catmtCidRepetitionOwner, catmtCidTable=catmtCidTable, catmtAal5RowStatus=catmtAal5RowStatus, cAtmTrunkMIBObjects=cAtmTrunkMIBObjects, cAtmTrunkCidConfig=cAtmTrunkCidConfig, catmtAal1Table=catmtAal1Table, catmtAal1LastResetTime=catmtAal1LastResetTime, catmtCidConnRDICnts=catmtCidConnRDICnts, catmtCidRcvdPackets=catmtCidRcvdPackets, catmtCidNx64InvalidFCSFrames=catmtCidNx64InvalidFCSFrames, catmtAal5SentPackets=catmtAal5SentPackets, catmtCidDs0GroupIndex=catmtCidDs0GroupIndex, catmtCidStatsEntry=catmtCidStatsEntry, catmtCid=catmtCid, catmtAal1StatsTable=catmtAal1StatsTable, catmtAal5FramesTxToTDM=catmtAal5FramesTxToTDM, catmtCidStatsTable=catmtCidStatsTable, catmtAal1RxCells=catmtAal1RxCells, catmtCidNx64InvalidShortFrames=catmtCidNx64InvalidShortFrames, catmtCidVpi=catmtCidVpi, catmtAal1StatsEntry=catmtAal1StatsEntry, catmtAal1Jitter=catmtAal1Jitter, catmtAal1CounterClear=catmtAal1CounterClear, catmtAal5AbortSeqFrames=catmtAal5AbortSeqFrames, cAtmTrunkAal1MIBGroup=cAtmTrunkAal1MIBGroup, cAtmTrunkAal5ConnStatsMIBGroup=cAtmTrunkAal5ConnStatsMIBGroup, cAtmTrunkMIBGroups=cAtmTrunkMIBGroups, catmtAal1Nx64Profile=catmtAal1Nx64Profile, cAtmTrunkMIBConformance=cAtmTrunkMIBConformance, catmtCidLastResetTime=catmtCidLastResetTime, cAtmTrunkAal1ConnStats=cAtmTrunkAal1ConnStats, cAtmTrunkMIBCompliance=cAtmTrunkMIBCompliance, PYSNMP_MODULE_ID=ciscoAtmTrunkMIB, ciscoAtmTrunkMIB=ciscoAtmTrunkMIB, catmtAal1Vpi=catmtAal1Vpi, catmtCidNx64EncBytesTxToTDM=catmtCidNx64EncBytesTxToTDM, catmtCidEntry=catmtCidEntry, catmtAal5RcvdPackets=catmtAal5RcvdPackets, catmtCidDs1=catmtCidDs1, catmtAal1Entry=catmtAal1Entry, catmtAal5Nx64Profile=catmtAal5Nx64Profile, cAtmTrunkCidConnStatsMIBGroup=cAtmTrunkCidConnStatsMIBGroup, catmtAal5Vci=catmtAal5Vci, catmtCidExtRAICnts=catmtCidExtRAICnts, cAtmTrunkMIBNotifications=cAtmTrunkMIBNotifications, catmtCidLostPackets=catmtCidLostPackets, catmtAal1RxPayloadBytes=catmtAal1RxPayloadBytes, catmtAal5Ds0GroupIndex=catmtAal5Ds0GroupIndex, catmtAal5InvalidShortFrames=catmtAal5InvalidShortFrames, cAtmTrunkCidMIBGroup=cAtmTrunkCidMIBGroup, catmtCidNx64NoByteAlignErrorFrames=catmtCidNx64NoByteAlignErrorFrames, catmtCidNx64InvalidLongFrames=catmtCidNx64InvalidLongFrames, catmtCidProfileNumber=catmtCidProfileNumber, catmtCidVBDCodec=catmtCidVBDCodec, catmtCidRepetitionResult=catmtCidRepetitionResult, catmtAal5InvalidFCSFrames=catmtAal5InvalidFCSFrames, catmtAal1Ds1=catmtAal1Ds1, catmtAal5InvalidLongFrames=catmtAal5InvalidLongFrames, Counter32SinceReset=Counter32SinceReset, catmtAal5Table=catmtAal5Table, catmtAal5NoByteAlignErrorFrames=catmtAal5NoByteAlignErrorFrames, catmtCidVci=catmtCidVci, catmtCidNx64RASTimeOutFrames=catmtCidNx64RASTimeOutFrames, catmtAal5LastResetTime=catmtAal5LastResetTime, catmtCidRepetition=catmtCidRepetition, catmtAal5FramesRxFromTDM=catmtAal5FramesRxFromTDM, catmtAal5EncBytesRxFromTDM=catmtAal5EncBytesRxFromTDM, catmtCidSentPackets=catmtCidSentPackets, catmtAal5CounterClear=catmtAal5CounterClear, catmtCidSentOctets=catmtCidSentOctets, catmtCidNx64Enable=catmtCidNx64Enable, catmtCidExtAISCnts=catmtCidExtAISCnts, catmtCidStateBitMap=catmtCidStateBitMap, catmtCidProfileType=catmtCidProfileType, catmtCidRcvdOctets=catmtCidRcvdOctets, catmtAal5Ds1=catmtAal5Ds1, catmtAal1TxPayloadBytes=catmtAal1TxPayloadBytes, catmtCidRowStatus=catmtCidRowStatus, catmtAal5Vpi=catmtAal5Vpi, catmtCidNx64FramesRxFromTDM=catmtCidNx64FramesRxFromTDM, catmtAal5Entry=catmtAal5Entry, catmtAal1TxCells=catmtAal1TxCells, catmtCidConnAISCnts=catmtCidConnAISCnts, catmtAal5StatsEntry=catmtAal5StatsEntry)
