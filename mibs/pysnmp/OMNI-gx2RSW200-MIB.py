#
# PySNMP MIB module OMNI-gx2RSW200-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/OMNI-gx2RSW200-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 20:24:25 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ValueRangeConstraint, ValueSizeConstraint, SingleValueConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ValueRangeConstraint", "ValueSizeConstraint", "SingleValueConstraint", "ConstraintsIntersection")
gx2Rsw200, = mibBuilder.importSymbols("GX2HFC-MIB", "gx2Rsw200")
trapText, trapNetworkElemAvailStatus, trapNETrapLastTrapTimeStamp, trapNetworkElemModelNumber, trapIdentifier, trapChangedValueInteger, trapChangedObjectId, trapNetworkElemAlarmStatus, trapPerceivedSeverity, trapNetworkElemOperState, trapNetworkElemAdminState, trapChangedValueDisplayString, trapNetworkElemSerialNum = mibBuilder.importSymbols("NLSBBN-TRAPS-MIB", "trapText", "trapNetworkElemAvailStatus", "trapNETrapLastTrapTimeStamp", "trapNetworkElemModelNumber", "trapIdentifier", "trapChangedValueInteger", "trapChangedObjectId", "trapNetworkElemAlarmStatus", "trapPerceivedSeverity", "trapNetworkElemOperState", "trapNetworkElemAdminState", "trapChangedValueDisplayString", "trapNetworkElemSerialNum")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Bits, Gauge32, IpAddress, Integer32, iso, MibScalar, MibTable, MibTableRow, MibTableColumn, MibIdentifier, Counter32, Unsigned32, NotificationType, ObjectIdentity, TimeTicks, ModuleIdentity, Counter64 = mibBuilder.importSymbols("SNMPv2-SMI", "Bits", "Gauge32", "IpAddress", "Integer32", "iso", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "MibIdentifier", "Counter32", "Unsigned32", "NotificationType", "ObjectIdentity", "TimeTicks", "ModuleIdentity", "Counter64")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
class Float(Counter32):
    pass

gx2Rsw200Descriptor = MibIdentifier((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 8, 1))
gx2Rsw200AnalogTable = MibTable((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 8, 2), )
if mibBuilder.loadTexts: gx2Rsw200AnalogTable.setStatus('mandatory')
gx2Rsw200AnalogEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 8, 2, 1), ).setIndexNames((0, "OMNI-gx2RSW200-MIB", "gx2Rsw200AnalogTableIndex"))
if mibBuilder.loadTexts: gx2Rsw200AnalogEntry.setStatus('mandatory')
gx2Rsw200DigitalTable = MibTable((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 8, 3), )
if mibBuilder.loadTexts: gx2Rsw200DigitalTable.setStatus('mandatory')
gx2Rsw200DigitalEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 8, 3, 2), ).setIndexNames((0, "OMNI-gx2RSW200-MIB", "gx2Rsw200DigitalTableIndex"))
if mibBuilder.loadTexts: gx2Rsw200DigitalEntry.setStatus('mandatory')
gx2Rsw200StatusTable = MibTable((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 8, 4), )
if mibBuilder.loadTexts: gx2Rsw200StatusTable.setStatus('mandatory')
gx2Rsw200StatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 8, 4, 3), ).setIndexNames((0, "OMNI-gx2RSW200-MIB", "gx2Rsw200StatusTableIndex"))
if mibBuilder.loadTexts: gx2Rsw200StatusEntry.setStatus('mandatory')
gx2Rsw200FactoryTable = MibTable((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 8, 5), )
if mibBuilder.loadTexts: gx2Rsw200FactoryTable.setStatus('mandatory')
gx2Rsw200FactoryEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 8, 5, 4), ).setIndexNames((0, "OMNI-gx2RSW200-MIB", "gx2Rsw200FactoryTableIndex"))
if mibBuilder.loadTexts: gx2Rsw200FactoryEntry.setStatus('mandatory')
gx2Rsw200bHoldTimeTable = MibTable((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 8, 6), )
if mibBuilder.loadTexts: gx2Rsw200bHoldTimeTable.setStatus('mandatory')
gx2Rsw200bHoldTimeEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 8, 6, 5), ).setIndexNames((0, "OMNI-gx2RSW200-MIB", "rxgx2Rsw200bHoldTimeTableIndex"), (0, "OMNI-gx2RSW200-MIB", "rxgx2Rsw200bHoldTimeSpecIndex"))
if mibBuilder.loadTexts: gx2Rsw200bHoldTimeEntry.setStatus('mandatory')
gx2Rsw200AnalogTableIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 8, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: gx2Rsw200AnalogTableIndex.setStatus('mandatory')
rsw200labelModTemp = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 8, 2, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 80))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsw200labelModTemp.setStatus('optional')
rsw200uomModTemp = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 8, 2, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 80))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsw200uomModTemp.setStatus('optional')
rsw200majorHighModTemp = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 8, 2, 1, 4), Float()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsw200majorHighModTemp.setStatus('mandatory')
rsw200majorLowModTemp = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 8, 2, 1, 5), Float()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsw200majorLowModTemp.setStatus('mandatory')
rsw200minorHighModTemp = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 8, 2, 1, 6), Float()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsw200minorHighModTemp.setStatus('mandatory')
rsw200minorLowModTemp = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 8, 2, 1, 7), Float()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsw200minorLowModTemp.setStatus('mandatory')
rsw200currentValueModTemp = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 8, 2, 1, 8), Float()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsw200currentValueModTemp.setStatus('mandatory')
rsw200stateFlagModTemp = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 8, 2, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("hidden", 1), ("read-only", 2), ("updateable", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsw200stateFlagModTemp.setStatus('mandatory')
rsw200minValueModTemp = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 8, 2, 1, 10), Float()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsw200minValueModTemp.setStatus('mandatory')
rsw200maxValueModTemp = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 8, 2, 1, 11), Float()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsw200maxValueModTemp.setStatus('mandatory')
rsw200alarmStateModTemp = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 8, 2, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("noAlarm", 1), ("majorLowAlarm", 2), ("minorLowAlarm", 3), ("minorHighAlarm", 4), ("majorHighAlarm", 5), ("informational", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsw200alarmStateModTemp.setStatus('mandatory')
rsw200labelFanCurrent = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 8, 2, 1, 13), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 80))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsw200labelFanCurrent.setStatus('optional')
rsw200uomFanCurrent = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 8, 2, 1, 14), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 80))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsw200uomFanCurrent.setStatus('optional')
rsw200majorHighFanCurrent = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 8, 2, 1, 15), Float()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsw200majorHighFanCurrent.setStatus('mandatory')
rsw200majorLowFanCurrent = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 8, 2, 1, 16), Float()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsw200majorLowFanCurrent.setStatus('mandatory')
rsw200minorHighFanCurrent = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 8, 2, 1, 17), Float()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsw200minorHighFanCurrent.setStatus('mandatory')
rsw200minorLowFanCurrent = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 8, 2, 1, 18), Float()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsw200minorLowFanCurrent.setStatus('mandatory')
rsw200currentValueFanCurrent = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 8, 2, 1, 19), Float()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsw200currentValueFanCurrent.setStatus('mandatory')
rsw200stateFlagFanCurrent = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 8, 2, 1, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("hidden", 1), ("read-only", 2), ("updateable", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsw200stateFlagFanCurrent.setStatus('mandatory')
rsw200minValueFanCurrent = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 8, 2, 1, 21), Float()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsw200minValueFanCurrent.setStatus('mandatory')
rsw200maxValueFanCurrent = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 8, 2, 1, 22), Float()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsw200maxValueFanCurrent.setStatus('mandatory')
rsw200alarmStateFanCurrent = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 8, 2, 1, 23), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("noAlarm", 1), ("majorLowAlarm", 2), ("minorLowAlarm", 3), ("minorHighAlarm", 4), ("majorHighAlarm", 5), ("informational", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsw200alarmStateFanCurrent.setStatus('mandatory')
gx2Rsw200DigitalTableIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 8, 3, 2, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: gx2Rsw200DigitalTableIndex.setStatus('mandatory')
rsw200labelSwitchControl = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 8, 3, 2, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 80))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsw200labelSwitchControl.setStatus('optional')
rsw200enumSwitchControl = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 8, 3, 2, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 80))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsw200enumSwitchControl.setStatus('optional')
rsw200valueSwitchControl = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 8, 3, 2, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("primary", 1), ("secondary", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rsw200valueSwitchControl.setStatus('mandatory')
rsw200stateflagSwitchControl = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 8, 3, 2, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("hidden", 1), ("read-only", 2), ("updateable", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsw200stateflagSwitchControl.setStatus('mandatory')
rsw200labelRevertMode = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 8, 3, 2, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 80))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsw200labelRevertMode.setStatus('optional')
rsw200enumRevertMode = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 8, 3, 2, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 80))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsw200enumRevertMode.setStatus('optional')
rsw200valueRevertMode = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 8, 3, 2, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("manual", 1), ("autorevert", 2), ("nonrevert", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rsw200valueRevertMode.setStatus('mandatory')
rsw200stateflagRevertMode = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 8, 3, 2, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("hidden", 1), ("read-only", 2), ("updateable", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsw200stateflagRevertMode.setStatus('mandatory')
rsw200labelRevertTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 8, 3, 2, 10), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 80))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsw200labelRevertTime.setStatus('optional')
rsw200enumRevertTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 8, 3, 2, 11), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 80))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsw200enumRevertTime.setStatus('optional')
rsw200valueRevertTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 8, 3, 2, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("tensec", 1), ("sixtysec", 2), ("sixhundredsec", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rsw200valueRevertTime.setStatus('mandatory')
rsw200stateflagRevertTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 8, 3, 2, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("hidden", 1), ("read-only", 2), ("updateable", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsw200stateflagRevertTime.setStatus('mandatory')
rsw200labelSwitchState = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 8, 3, 2, 14), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 80))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsw200labelSwitchState.setStatus('optional')
rsw200enumSwitchState = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 8, 3, 2, 15), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 80))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsw200enumSwitchState.setStatus('optional')
rsw200valueSwitchState = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 8, 3, 2, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("primary", 1), ("secondary", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsw200valueSwitchState.setStatus('mandatory')
rsw200stateflagSwitchState = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 8, 3, 2, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("hidden", 1), ("read-only", 2), ("updateable", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsw200stateflagSwitchState.setStatus('mandatory')
rsw200labelPriStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 8, 3, 2, 18), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 80))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsw200labelPriStatus.setStatus('optional')
rsw200enumPriStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 8, 3, 2, 19), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 80))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsw200enumPriStatus.setStatus('optional')
rsw200valuePriStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 8, 3, 2, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("short", 1), ("valid", 2), ("invalid", 3), ("open", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsw200valuePriStatus.setStatus('mandatory')
rsw200stateflagPriStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 8, 3, 2, 21), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("hidden", 1), ("read-only", 2), ("updateable", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsw200stateflagPriStatus.setStatus('mandatory')
rsw200labelSecStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 8, 3, 2, 22), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 80))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsw200labelSecStatus.setStatus('optional')
rsw200enumSecStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 8, 3, 2, 23), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 80))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsw200enumSecStatus.setStatus('optional')
rsw200valueSecStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 8, 3, 2, 24), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("short", 1), ("valid", 2), ("invalid", 3), ("open", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsw200valueSecStatus.setStatus('mandatory')
rsw200stateflagSecStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 8, 3, 2, 25), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("hidden", 1), ("read-only", 2), ("updateable", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsw200stateflagSecStatus.setStatus('mandatory')
rsw200labelFactoryDefault = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 8, 3, 2, 26), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 80))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsw200labelFactoryDefault.setStatus('optional')
rsw200enumFactoryDefault = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 8, 3, 2, 27), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 80))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsw200enumFactoryDefault.setStatus('optional')
rsw200valueFactoryDefault = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 8, 3, 2, 28), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("off", 1), ("on", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rsw200valueFactoryDefault.setStatus('mandatory')
rsw200stateflagFactoryDefault = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 8, 3, 2, 29), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("hidden", 1), ("read-only", 2), ("updateable", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsw200stateflagFactoryDefault.setStatus('mandatory')
gx2Rsw200StatusTableIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 8, 4, 3, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: gx2Rsw200StatusTableIndex.setStatus('mandatory')
rsw200labelBoot = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 8, 4, 3, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 80))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsw200labelBoot.setStatus('optional')
rsw200valueBoot = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 8, 4, 3, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("ok", 1), ("undetermined", 2), ("warning", 3), ("minor", 4), ("major", 5), ("critical", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsw200valueBoot.setStatus('mandatory')
rsw200stateflagBoot = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 8, 4, 3, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("hidden", 1), ("read-only", 2), ("updateable", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsw200stateflagBoot.setStatus('mandatory')
rsw200labelFlash = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 8, 4, 3, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 80))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsw200labelFlash.setStatus('optional')
rsw200valueFlash = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 8, 4, 3, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("ok", 1), ("undetermined", 2), ("warning", 3), ("minor", 4), ("major", 5), ("critical", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsw200valueFlash.setStatus('mandatory')
rsw200stateflagFlash = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 8, 4, 3, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("hidden", 1), ("read-only", 2), ("updateable", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsw200stateflagFlash.setStatus('mandatory')
rsw200labelFactoryDataCRC = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 8, 4, 3, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 80))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsw200labelFactoryDataCRC.setStatus('optional')
rsw200valueFactoryDataCRC = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 8, 4, 3, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("ok", 1), ("undetermined", 2), ("warning", 3), ("minor", 4), ("major", 5), ("critical", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsw200valueFactoryDataCRC.setStatus('mandatory')
rsw200stateflagFactoryDataCRC = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 8, 4, 3, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("hidden", 1), ("read-only", 2), ("updateable", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsw200stateflagFactoryDataCRC.setStatus('mandatory')
rsw200labelAlarmDataCrc = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 8, 4, 3, 11), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 80))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsw200labelAlarmDataCrc.setStatus('optional')
rsw200valueAlarmDataCrc = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 8, 4, 3, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("ok", 1), ("undetermined", 2), ("warning", 3), ("minor", 4), ("major", 5), ("critical", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsw200valueAlarmDataCrc.setStatus('mandatory')
rsw200stateflagAlarmDataCrc = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 8, 4, 3, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("hidden", 1), ("read-only", 2), ("updateable", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsw200stateflagAlarmDataCrc.setStatus('mandatory')
rsw200labelRFSignalStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 8, 4, 3, 14), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 80))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsw200labelRFSignalStatus.setStatus('optional')
rsw200valueRFSignalStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 8, 4, 3, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("ok", 1), ("undetermined", 2), ("warning", 3), ("minor", 4), ("major", 5), ("critical", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsw200valueRFSignalStatus.setStatus('mandatory')
rsw200stateflagRFSignalStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 8, 4, 3, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("hidden", 1), ("read-only", 2), ("updateable", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsw200stateflagRFSignalStatus.setStatus('mandatory')
rsw200labelPriActiveStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 8, 4, 3, 17), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 80))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsw200labelPriActiveStatus.setStatus('optional')
rsw200valuePriActiveStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 8, 4, 3, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("ok", 1), ("undetermined", 2), ("warning", 3), ("minor", 4), ("major", 5), ("critical", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsw200valuePriActiveStatus.setStatus('mandatory')
rsw200stateflagPriActiveStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 8, 4, 3, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("hidden", 1), ("read-only", 2), ("updateable", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsw200stateflagPriActiveStatus.setStatus('mandatory')
gx2Rsw200FactoryTableIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 8, 5, 4, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: gx2Rsw200FactoryTableIndex.setStatus('mandatory')
rsw200bootControlByte = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 8, 5, 4, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsw200bootControlByte.setStatus('mandatory')
rsw200bootStatusByte = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 8, 5, 4, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsw200bootStatusByte.setStatus('mandatory')
rsw200bank1CRC = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 8, 5, 4, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsw200bank1CRC.setStatus('mandatory')
rsw200bank2CRC = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 8, 5, 4, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsw200bank2CRC.setStatus('mandatory')
rsw200prgEEPROMByte = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 8, 5, 4, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsw200prgEEPROMByte.setStatus('mandatory')
rsw200factoryCRC = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 8, 5, 4, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsw200factoryCRC.setStatus('mandatory')
rsw200calculateCRC = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 8, 5, 4, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("factory", 1), ("alarm", 2), ("na", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsw200calculateCRC.setStatus('mandatory')
rsw200hourMeter = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 8, 5, 4, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsw200hourMeter.setStatus('mandatory')
rsw200flashPrgCntA = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 8, 5, 4, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsw200flashPrgCntA.setStatus('mandatory')
rsw200flashPrgCntB = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 8, 5, 4, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsw200flashPrgCntB.setStatus('mandatory')
rsw200flashBankARev = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 8, 5, 4, 12), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 80))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsw200flashBankARev.setStatus('mandatory')
rsw200flashBankBRev = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 8, 5, 4, 13), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 80))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsw200flashBankBRev.setStatus('mandatory')
rxgx2Rsw200bHoldTimeTableIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 8, 6, 5, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rxgx2Rsw200bHoldTimeTableIndex.setStatus('mandatory')
rxgx2Rsw200bHoldTimeSpecIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 8, 6, 5, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rxgx2Rsw200bHoldTimeSpecIndex.setStatus('mandatory')
rxgx2Rsw200bHoldTimeData = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 8, 6, 5, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rxgx2Rsw200bHoldTimeData.setStatus('mandatory')
trapRSW200ConfigChangeInteger = NotificationType((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 8) + (0,1)).setObjects(("NLSBBN-TRAPS-MIB", "trapIdentifier"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemModelNumber"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemSerialNum"), ("NLSBBN-TRAPS-MIB", "trapPerceivedSeverity"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemOperState"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemAlarmStatus"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemAdminState"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemAvailStatus"), ("NLSBBN-TRAPS-MIB", "trapText"), ("NLSBBN-TRAPS-MIB", "trapChangedObjectId"), ("NLSBBN-TRAPS-MIB", "trapChangedValueInteger"), ("NLSBBN-TRAPS-MIB", "trapNETrapLastTrapTimeStamp"))
trapRSW200ConfigChangeDisplayString = NotificationType((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 8) + (0,2)).setObjects(("NLSBBN-TRAPS-MIB", "trapIdentifier"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemModelNumber"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemSerialNum"), ("NLSBBN-TRAPS-MIB", "trapPerceivedSeverity"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemOperState"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemAlarmStatus"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemAdminState"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemAvailStatus"), ("NLSBBN-TRAPS-MIB", "trapText"), ("NLSBBN-TRAPS-MIB", "trapChangedObjectId"), ("NLSBBN-TRAPS-MIB", "trapChangedValueDisplayString"), ("NLSBBN-TRAPS-MIB", "trapNETrapLastTrapTimeStamp"))
trapRSW200RFInputAlarm = NotificationType((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 8) + (0,3)).setObjects(("NLSBBN-TRAPS-MIB", "trapIdentifier"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemModelNumber"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemSerialNum"), ("NLSBBN-TRAPS-MIB", "trapPerceivedSeverity"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemOperState"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemAlarmStatus"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemAdminState"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemAvailStatus"), ("NLSBBN-TRAPS-MIB", "trapText"), ("NLSBBN-TRAPS-MIB", "trapChangedObjectId"), ("NLSBBN-TRAPS-MIB", "trapChangedValueInteger"), ("NLSBBN-TRAPS-MIB", "trapNETrapLastTrapTimeStamp"))
trapRSW200FanCurrentAlarm = NotificationType((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 8) + (0,4)).setObjects(("NLSBBN-TRAPS-MIB", "trapIdentifier"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemModelNumber"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemSerialNum"), ("NLSBBN-TRAPS-MIB", "trapPerceivedSeverity"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemOperState"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemAlarmStatus"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemAdminState"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemAvailStatus"), ("NLSBBN-TRAPS-MIB", "trapText"), ("NLSBBN-TRAPS-MIB", "trapChangedObjectId"), ("NLSBBN-TRAPS-MIB", "trapChangedValueInteger"), ("NLSBBN-TRAPS-MIB", "trapNETrapLastTrapTimeStamp"))
trapRSW200ModuleTempAlarm = NotificationType((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 8) + (0,5)).setObjects(("NLSBBN-TRAPS-MIB", "trapIdentifier"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemModelNumber"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemSerialNum"), ("NLSBBN-TRAPS-MIB", "trapPerceivedSeverity"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemOperState"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemAlarmStatus"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemAdminState"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemAvailStatus"), ("NLSBBN-TRAPS-MIB", "trapText"), ("NLSBBN-TRAPS-MIB", "trapChangedObjectId"), ("NLSBBN-TRAPS-MIB", "trapChangedValueInteger"), ("NLSBBN-TRAPS-MIB", "trapNETrapLastTrapTimeStamp"))
trapRSW200FlashAlarm = NotificationType((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 8) + (0,6)).setObjects(("NLSBBN-TRAPS-MIB", "trapIdentifier"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemModelNumber"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemSerialNum"), ("NLSBBN-TRAPS-MIB", "trapPerceivedSeverity"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemOperState"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemAlarmStatus"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemAdminState"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemAvailStatus"), ("NLSBBN-TRAPS-MIB", "trapText"), ("NLSBBN-TRAPS-MIB", "trapChangedObjectId"), ("NLSBBN-TRAPS-MIB", "trapChangedValueInteger"), ("NLSBBN-TRAPS-MIB", "trapNETrapLastTrapTimeStamp"))
trapRSW200BankBootAlarm = NotificationType((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 8) + (0,7)).setObjects(("NLSBBN-TRAPS-MIB", "trapIdentifier"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemModelNumber"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemSerialNum"), ("NLSBBN-TRAPS-MIB", "trapPerceivedSeverity"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemOperState"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemAlarmStatus"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemAdminState"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemAvailStatus"), ("NLSBBN-TRAPS-MIB", "trapText"), ("NLSBBN-TRAPS-MIB", "trapChangedObjectId"), ("NLSBBN-TRAPS-MIB", "trapChangedValueInteger"), ("NLSBBN-TRAPS-MIB", "trapNETrapLastTrapTimeStamp"))
trapRSW200AlarmDataCRCAlarm = NotificationType((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 8) + (0,8)).setObjects(("NLSBBN-TRAPS-MIB", "trapIdentifier"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemModelNumber"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemSerialNum"), ("NLSBBN-TRAPS-MIB", "trapPerceivedSeverity"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemOperState"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemAlarmStatus"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemAdminState"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemAvailStatus"), ("NLSBBN-TRAPS-MIB", "trapText"), ("NLSBBN-TRAPS-MIB", "trapChangedObjectId"), ("NLSBBN-TRAPS-MIB", "trapChangedValueInteger"), ("NLSBBN-TRAPS-MIB", "trapNETrapLastTrapTimeStamp"))
trapRSW200FactoryDataCRCAlarm = NotificationType((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 8) + (0,9)).setObjects(("NLSBBN-TRAPS-MIB", "trapIdentifier"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemModelNumber"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemSerialNum"), ("NLSBBN-TRAPS-MIB", "trapPerceivedSeverity"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemOperState"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemAlarmStatus"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemAdminState"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemAvailStatus"), ("NLSBBN-TRAPS-MIB", "trapText"), ("NLSBBN-TRAPS-MIB", "trapChangedObjectId"), ("NLSBBN-TRAPS-MIB", "trapChangedValueInteger"), ("NLSBBN-TRAPS-MIB", "trapNETrapLastTrapTimeStamp"))
trapRSW200InputSwitchedAlarm = NotificationType((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 8) + (0,10)).setObjects(("NLSBBN-TRAPS-MIB", "trapIdentifier"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemModelNumber"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemSerialNum"), ("NLSBBN-TRAPS-MIB", "trapPerceivedSeverity"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemOperState"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemAlarmStatus"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemAdminState"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemAvailStatus"), ("NLSBBN-TRAPS-MIB", "trapText"), ("NLSBBN-TRAPS-MIB", "trapChangedObjectId"), ("NLSBBN-TRAPS-MIB", "trapChangedValueInteger"), ("NLSBBN-TRAPS-MIB", "trapNETrapLastTrapTimeStamp"))
trapRSW200ResetFactoryDefaultAlarm = NotificationType((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 8) + (0,11)).setObjects(("NLSBBN-TRAPS-MIB", "trapIdentifier"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemModelNumber"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemSerialNum"), ("NLSBBN-TRAPS-MIB", "trapPerceivedSeverity"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemOperState"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemAlarmStatus"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemAdminState"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemAvailStatus"), ("NLSBBN-TRAPS-MIB", "trapText"), ("NLSBBN-TRAPS-MIB", "trapChangedObjectId"), ("NLSBBN-TRAPS-MIB", "trapChangedValueInteger"), ("NLSBBN-TRAPS-MIB", "trapNETrapLastTrapTimeStamp"))
trapRSW200SecondaryInputActiveAlarm = NotificationType((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 8) + (0,12)).setObjects(("NLSBBN-TRAPS-MIB", "trapIdentifier"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemModelNumber"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemSerialNum"), ("NLSBBN-TRAPS-MIB", "trapPerceivedSeverity"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemOperState"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemAlarmStatus"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemAdminState"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemAvailStatus"), ("NLSBBN-TRAPS-MIB", "trapText"), ("NLSBBN-TRAPS-MIB", "trapChangedObjectId"), ("NLSBBN-TRAPS-MIB", "trapChangedValueInteger"), ("NLSBBN-TRAPS-MIB", "trapNETrapLastTrapTimeStamp"))
mibBuilder.exportSymbols("OMNI-gx2RSW200-MIB", gx2Rsw200bHoldTimeTable=gx2Rsw200bHoldTimeTable, rsw200labelFactoryDefault=rsw200labelFactoryDefault, gx2Rsw200AnalogEntry=gx2Rsw200AnalogEntry, rsw200flashPrgCntA=rsw200flashPrgCntA, rsw200stateflagRevertMode=rsw200stateflagRevertMode, rsw200stateflagSwitchState=rsw200stateflagSwitchState, trapRSW200FlashAlarm=trapRSW200FlashAlarm, rsw200labelAlarmDataCrc=rsw200labelAlarmDataCrc, rsw200hourMeter=rsw200hourMeter, rsw200minorHighModTemp=rsw200minorHighModTemp, rsw200labelPriActiveStatus=rsw200labelPriActiveStatus, trapRSW200FactoryDataCRCAlarm=trapRSW200FactoryDataCRCAlarm, rsw200flashBankARev=rsw200flashBankARev, rsw200bank1CRC=rsw200bank1CRC, rsw200alarmStateFanCurrent=rsw200alarmStateFanCurrent, trapRSW200SecondaryInputActiveAlarm=trapRSW200SecondaryInputActiveAlarm, rxgx2Rsw200bHoldTimeTableIndex=rxgx2Rsw200bHoldTimeTableIndex, rsw200enumRevertMode=rsw200enumRevertMode, rsw200alarmStateModTemp=rsw200alarmStateModTemp, rsw200minorLowModTemp=rsw200minorLowModTemp, rsw200stateflagBoot=rsw200stateflagBoot, Float=Float, rxgx2Rsw200bHoldTimeSpecIndex=rxgx2Rsw200bHoldTimeSpecIndex, trapRSW200ConfigChangeDisplayString=trapRSW200ConfigChangeDisplayString, rsw200valueAlarmDataCrc=rsw200valueAlarmDataCrc, rsw200enumSwitchControl=rsw200enumSwitchControl, rsw200maxValueModTemp=rsw200maxValueModTemp, rsw200factoryCRC=rsw200factoryCRC, gx2Rsw200StatusTableIndex=gx2Rsw200StatusTableIndex, rsw200majorLowModTemp=rsw200majorLowModTemp, gx2Rsw200FactoryTableIndex=gx2Rsw200FactoryTableIndex, rsw200valueSwitchControl=rsw200valueSwitchControl, rsw200enumFactoryDefault=rsw200enumFactoryDefault, rsw200flashPrgCntB=rsw200flashPrgCntB, rsw200majorHighModTemp=rsw200majorHighModTemp, trapRSW200ResetFactoryDefaultAlarm=trapRSW200ResetFactoryDefaultAlarm, gx2Rsw200FactoryEntry=gx2Rsw200FactoryEntry, rsw200maxValueFanCurrent=rsw200maxValueFanCurrent, rsw200bootStatusByte=rsw200bootStatusByte, rsw200uomModTemp=rsw200uomModTemp, rsw200labelRevertTime=rsw200labelRevertTime, rsw200enumSwitchState=rsw200enumSwitchState, rsw200valueSwitchState=rsw200valueSwitchState, rsw200labelFlash=rsw200labelFlash, rsw200labelRevertMode=rsw200labelRevertMode, rsw200stateflagFactoryDefault=rsw200stateflagFactoryDefault, rsw200valueRevertTime=rsw200valueRevertTime, rsw200stateflagSwitchControl=rsw200stateflagSwitchControl, rsw200labelModTemp=rsw200labelModTemp, rsw200minorLowFanCurrent=rsw200minorLowFanCurrent, rsw200valueFlash=rsw200valueFlash, gx2Rsw200AnalogTableIndex=gx2Rsw200AnalogTableIndex, gx2Rsw200StatusTable=gx2Rsw200StatusTable, rsw200stateflagSecStatus=rsw200stateflagSecStatus, gx2Rsw200bHoldTimeEntry=gx2Rsw200bHoldTimeEntry, rsw200labelBoot=rsw200labelBoot, gx2Rsw200StatusEntry=gx2Rsw200StatusEntry, gx2Rsw200DigitalTable=gx2Rsw200DigitalTable, gx2Rsw200DigitalTableIndex=gx2Rsw200DigitalTableIndex, rsw200stateflagRevertTime=rsw200stateflagRevertTime, rsw200stateFlagModTemp=rsw200stateFlagModTemp, rsw200bootControlByte=rsw200bootControlByte, rsw200labelSwitchControl=rsw200labelSwitchControl, rsw200flashBankBRev=rsw200flashBankBRev, rsw200calculateCRC=rsw200calculateCRC, trapRSW200ModuleTempAlarm=trapRSW200ModuleTempAlarm, rsw200minorHighFanCurrent=rsw200minorHighFanCurrent, trapRSW200ConfigChangeInteger=trapRSW200ConfigChangeInteger, rsw200majorLowFanCurrent=rsw200majorLowFanCurrent, rsw200stateflagAlarmDataCrc=rsw200stateflagAlarmDataCrc, rsw200labelRFSignalStatus=rsw200labelRFSignalStatus, rsw200labelFactoryDataCRC=rsw200labelFactoryDataCRC, rxgx2Rsw200bHoldTimeData=rxgx2Rsw200bHoldTimeData, rsw200valueRFSignalStatus=rsw200valueRFSignalStatus, rsw200bank2CRC=rsw200bank2CRC, rsw200enumRevertTime=rsw200enumRevertTime, rsw200uomFanCurrent=rsw200uomFanCurrent, rsw200stateflagRFSignalStatus=rsw200stateflagRFSignalStatus, rsw200valueSecStatus=rsw200valueSecStatus, gx2Rsw200DigitalEntry=gx2Rsw200DigitalEntry, rsw200labelSwitchState=rsw200labelSwitchState, rsw200enumSecStatus=rsw200enumSecStatus, gx2Rsw200AnalogTable=gx2Rsw200AnalogTable, rsw200valueFactoryDefault=rsw200valueFactoryDefault, rsw200valueBoot=rsw200valueBoot, rsw200valueRevertMode=rsw200valueRevertMode, rsw200currentValueFanCurrent=rsw200currentValueFanCurrent, rsw200majorHighFanCurrent=rsw200majorHighFanCurrent, rsw200labelSecStatus=rsw200labelSecStatus, rsw200currentValueModTemp=rsw200currentValueModTemp, rsw200labelPriStatus=rsw200labelPriStatus, rsw200minValueModTemp=rsw200minValueModTemp, trapRSW200AlarmDataCRCAlarm=trapRSW200AlarmDataCRCAlarm, rsw200stateflagFlash=rsw200stateflagFlash, trapRSW200InputSwitchedAlarm=trapRSW200InputSwitchedAlarm, rsw200minValueFanCurrent=rsw200minValueFanCurrent, trapRSW200BankBootAlarm=trapRSW200BankBootAlarm, rsw200enumPriStatus=rsw200enumPriStatus, rsw200valueFactoryDataCRC=rsw200valueFactoryDataCRC, gx2Rsw200FactoryTable=gx2Rsw200FactoryTable, rsw200stateflagFactoryDataCRC=rsw200stateflagFactoryDataCRC, rsw200prgEEPROMByte=rsw200prgEEPROMByte, rsw200labelFanCurrent=rsw200labelFanCurrent, rsw200valuePriStatus=rsw200valuePriStatus, rsw200stateflagPriStatus=rsw200stateflagPriStatus, rsw200valuePriActiveStatus=rsw200valuePriActiveStatus, rsw200stateflagPriActiveStatus=rsw200stateflagPriActiveStatus, rsw200stateFlagFanCurrent=rsw200stateFlagFanCurrent, gx2Rsw200Descriptor=gx2Rsw200Descriptor, trapRSW200FanCurrentAlarm=trapRSW200FanCurrentAlarm, trapRSW200RFInputAlarm=trapRSW200RFInputAlarm)
