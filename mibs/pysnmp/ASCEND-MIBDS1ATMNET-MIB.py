#
# PySNMP MIB module ASCEND-MIBDS1ATMNET-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/ASCEND-MIBDS1ATMNET-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:11:04 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
configuration, = mibBuilder.importSymbols("ASCEND-MIB", "configuration")
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ConstraintsIntersection, ValueRangeConstraint, ConstraintsUnion, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ConstraintsIntersection", "ValueRangeConstraint", "ConstraintsUnion", "SingleValueConstraint")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
iso, ObjectIdentity, Bits, TimeTicks, Counter64, Gauge32, ModuleIdentity, Unsigned32, MibScalar, MibTable, MibTableRow, MibTableColumn, MibIdentifier, NotificationType, Counter32, Integer32, IpAddress = mibBuilder.importSymbols("SNMPv2-SMI", "iso", "ObjectIdentity", "Bits", "TimeTicks", "Counter64", "Gauge32", "ModuleIdentity", "Unsigned32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "MibIdentifier", "NotificationType", "Counter32", "Integer32", "IpAddress")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
class DisplayString(OctetString):
    pass

mibds1AtmNetworkProfile = MibIdentifier((1, 3, 6, 1, 4, 1, 529, 23, 25))
mibds1AtmNetworkProfileTable = MibTable((1, 3, 6, 1, 4, 1, 529, 23, 25, 1), )
if mibBuilder.loadTexts: mibds1AtmNetworkProfileTable.setStatus('mandatory')
mibds1AtmNetworkProfileEntry = MibTableRow((1, 3, 6, 1, 4, 1, 529, 23, 25, 1, 1), ).setIndexNames((0, "ASCEND-MIBDS1ATMNET-MIB", "ds1AtmNetworkProfile-Shelf-o"), (0, "ASCEND-MIBDS1ATMNET-MIB", "ds1AtmNetworkProfile-Slot-o"), (0, "ASCEND-MIBDS1ATMNET-MIB", "ds1AtmNetworkProfile-Item-o"))
if mibBuilder.loadTexts: mibds1AtmNetworkProfileEntry.setStatus('mandatory')
ds1AtmNetworkProfile_Shelf_o = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 25, 1, 1, 1), Integer32()).setLabel("ds1AtmNetworkProfile-Shelf-o").setMaxAccess("readonly")
if mibBuilder.loadTexts: ds1AtmNetworkProfile_Shelf_o.setStatus('mandatory')
ds1AtmNetworkProfile_Slot_o = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 25, 1, 1, 2), Integer32()).setLabel("ds1AtmNetworkProfile-Slot-o").setMaxAccess("readonly")
if mibBuilder.loadTexts: ds1AtmNetworkProfile_Slot_o.setStatus('mandatory')
ds1AtmNetworkProfile_Item_o = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 25, 1, 1, 3), Integer32()).setLabel("ds1AtmNetworkProfile-Item-o").setMaxAccess("readonly")
if mibBuilder.loadTexts: ds1AtmNetworkProfile_Item_o.setStatus('mandatory')
ds1AtmNetworkProfile_Name = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 25, 1, 1, 4), DisplayString()).setLabel("ds1AtmNetworkProfile-Name").setMaxAccess("readwrite")
if mibBuilder.loadTexts: ds1AtmNetworkProfile_Name.setStatus('mandatory')
ds1AtmNetworkProfile_PhysicalAddress_Shelf = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 25, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10))).clone(namedValues=NamedValues(("anyShelf", 1), ("shelf1", 2), ("shelf2", 3), ("shelf3", 4), ("shelf4", 5), ("shelf5", 6), ("shelf6", 7), ("shelf7", 8), ("shelf8", 9), ("shelf9", 10)))).setLabel("ds1AtmNetworkProfile-PhysicalAddress-Shelf").setMaxAccess("readwrite")
if mibBuilder.loadTexts: ds1AtmNetworkProfile_PhysicalAddress_Shelf.setStatus('mandatory')
ds1AtmNetworkProfile_PhysicalAddress_Slot = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 25, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 55, 56, 57, 58, 49, 50, 42, 53, 54, 45, 46, 51, 59))).clone(namedValues=NamedValues(("anySlot", 1), ("slot1", 2), ("slot2", 3), ("slot3", 4), ("slot4", 5), ("slot5", 6), ("slot6", 7), ("slot7", 8), ("slot8", 9), ("slot9", 10), ("slot10", 11), ("slot11", 12), ("slot12", 13), ("slot13", 14), ("slot14", 15), ("slot15", 16), ("slot16", 17), ("slot17", 18), ("slot18", 19), ("slot19", 20), ("slot20", 21), ("slot21", 22), ("slot22", 23), ("slot23", 24), ("slot24", 25), ("slot25", 26), ("slot26", 27), ("slot27", 28), ("slot28", 29), ("slot29", 30), ("slot30", 31), ("slot31", 32), ("slot32", 33), ("slot33", 34), ("slot34", 35), ("slot35", 36), ("slot36", 37), ("slot37", 38), ("slot38", 39), ("slot39", 40), ("slot40", 41), ("aLim", 55), ("bLim", 56), ("cLim", 57), ("dLim", 58), ("leftController", 49), ("rightController", 50), ("controller", 42), ("firstControlModule", 53), ("secondControlModule", 54), ("trunkModule1", 45), ("trunkModule2", 46), ("controlModule", 51), ("slotPrimary", 59)))).setLabel("ds1AtmNetworkProfile-PhysicalAddress-Slot").setMaxAccess("readwrite")
if mibBuilder.loadTexts: ds1AtmNetworkProfile_PhysicalAddress_Slot.setStatus('mandatory')
ds1AtmNetworkProfile_PhysicalAddress_ItemNumber = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 25, 1, 1, 7), Integer32()).setLabel("ds1AtmNetworkProfile-PhysicalAddress-ItemNumber").setMaxAccess("readwrite")
if mibBuilder.loadTexts: ds1AtmNetworkProfile_PhysicalAddress_ItemNumber.setStatus('mandatory')
ds1AtmNetworkProfile_Enabled = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 25, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("no", 1), ("yes", 2)))).setLabel("ds1AtmNetworkProfile-Enabled").setMaxAccess("readwrite")
if mibBuilder.loadTexts: ds1AtmNetworkProfile_Enabled.setStatus('mandatory')
ds1AtmNetworkProfile_SparingMode = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 25, 1, 1, 41), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("inactive", 1), ("manual", 2), ("automatic", 3)))).setLabel("ds1AtmNetworkProfile-SparingMode").setMaxAccess("readwrite")
if mibBuilder.loadTexts: ds1AtmNetworkProfile_SparingMode.setStatus('mandatory')
ds1AtmNetworkProfile_IgnoreLineup = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 25, 1, 1, 42), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("systemDefined", 1), ("no", 2), ("yes", 3)))).setLabel("ds1AtmNetworkProfile-IgnoreLineup").setMaxAccess("readwrite")
if mibBuilder.loadTexts: ds1AtmNetworkProfile_IgnoreLineup.setStatus('mandatory')
ds1AtmNetworkProfile_LineConfig_FrameType = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 25, 1, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("d4", 1), ("esf", 2), ("g703", 3), ("n-2ds", 4)))).setLabel("ds1AtmNetworkProfile-LineConfig-FrameType").setMaxAccess("readwrite")
if mibBuilder.loadTexts: ds1AtmNetworkProfile_LineConfig_FrameType.setStatus('mandatory')
ds1AtmNetworkProfile_LineConfig_Encoding = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 25, 1, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("ami", 1), ("b8zs", 2), ("hdb3", 3), ("none", 4)))).setLabel("ds1AtmNetworkProfile-LineConfig-Encoding").setMaxAccess("readwrite")
if mibBuilder.loadTexts: ds1AtmNetworkProfile_LineConfig_Encoding.setStatus('mandatory')
ds1AtmNetworkProfile_LineConfig_NailedGroup = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 25, 1, 1, 11), Integer32()).setLabel("ds1AtmNetworkProfile-LineConfig-NailedGroup").setMaxAccess("readwrite")
if mibBuilder.loadTexts: ds1AtmNetworkProfile_LineConfig_NailedGroup.setStatus('mandatory')
ds1AtmNetworkProfile_LineConfig_Loopback = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 25, 1, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("noLoopback", 1), ("feLoopback", 2), ("lineLoopback", 3), ("remoteLoopback", 4), ("localLoopback", 5)))).setLabel("ds1AtmNetworkProfile-LineConfig-Loopback").setMaxAccess("readwrite")
if mibBuilder.loadTexts: ds1AtmNetworkProfile_LineConfig_Loopback.setStatus('mandatory')
ds1AtmNetworkProfile_LineConfig_ClockSource = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 25, 1, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("eligible", 1), ("notEligible", 2)))).setLabel("ds1AtmNetworkProfile-LineConfig-ClockSource").setMaxAccess("readwrite")
if mibBuilder.loadTexts: ds1AtmNetworkProfile_LineConfig_ClockSource.setStatus('mandatory')
ds1AtmNetworkProfile_LineConfig_ClockPriority = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 25, 1, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(2, 3, 4))).clone(namedValues=NamedValues(("highPriority", 2), ("middlePriority", 3), ("lowPriority", 4)))).setLabel("ds1AtmNetworkProfile-LineConfig-ClockPriority").setMaxAccess("readwrite")
if mibBuilder.loadTexts: ds1AtmNetworkProfile_LineConfig_ClockPriority.setStatus('mandatory')
ds1AtmNetworkProfile_LineConfig_oFDL = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 25, 1, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("none", 1), ("atNT", 2), ("ansi", 3), ("sprint", 4)))).setLabel("ds1AtmNetworkProfile-LineConfig-oFDL").setMaxAccess("readwrite")
if mibBuilder.loadTexts: ds1AtmNetworkProfile_LineConfig_oFDL.setStatus('mandatory')
ds1AtmNetworkProfile_LineConfig_SendCode = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 25, 1, 1, 43), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 14, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13))).clone(namedValues=NamedValues(("noCode", 1), ("lineCode", 2), ("payloadCode", 3), ("inbandloopCode", 14), ("resetCode", 4), ("qrsCode", 5), ("n-511Pattern", 6), ("n-3In24Pattern", 7), ("n-1In16Pattern", 8), ("allOnesPattern", 9), ("allZerosPattern", 10), ("altOnesZerosPattern", 11), ("dblAltOnesZerosPattern", 12), ("n-2Pow20Pattern", 13)))).setLabel("ds1AtmNetworkProfile-LineConfig-SendCode").setMaxAccess("readwrite")
if mibBuilder.loadTexts: ds1AtmNetworkProfile_LineConfig_SendCode.setStatus('mandatory')
ds1AtmNetworkProfile_LineConfig_FrontEndType = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 25, 1, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("shortHaul", 1), ("longHaul", 2)))).setLabel("ds1AtmNetworkProfile-LineConfig-FrontEndType").setMaxAccess("readwrite")
if mibBuilder.loadTexts: ds1AtmNetworkProfile_LineConfig_FrontEndType.setStatus('mandatory')
ds1AtmNetworkProfile_LineConfig_LineLength = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 25, 1, 1, 39), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("n-1133", 1), ("n-134266", 2), ("n-267399", 3), ("n-400533", 4), ("n-534655", 5)))).setLabel("ds1AtmNetworkProfile-LineConfig-LineLength").setMaxAccess("readwrite")
if mibBuilder.loadTexts: ds1AtmNetworkProfile_LineConfig_LineLength.setStatus('mandatory')
ds1AtmNetworkProfile_LineConfig_LineBuildOut = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 25, 1, 1, 40), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("n-0Db", 1), ("n-75Db", 2), ("n-15Db", 3), ("n-2255Db", 4)))).setLabel("ds1AtmNetworkProfile-LineConfig-LineBuildOut").setMaxAccess("readwrite")
if mibBuilder.loadTexts: ds1AtmNetworkProfile_LineConfig_LineBuildOut.setStatus('mandatory')
ds1AtmNetworkProfile_LineConfig_PcmMode = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 25, 1, 1, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(24, 25))).clone(namedValues=NamedValues(("isdn", 24), ("clearChannel", 25)))).setLabel("ds1AtmNetworkProfile-LineConfig-PcmMode").setMaxAccess("readwrite")
if mibBuilder.loadTexts: ds1AtmNetworkProfile_LineConfig_PcmMode.setStatus('mandatory')
ds1AtmNetworkProfile_LineConfig_CosetEnabled = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 25, 1, 1, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("no", 1), ("yes", 2)))).setLabel("ds1AtmNetworkProfile-LineConfig-CosetEnabled").setMaxAccess("readwrite")
if mibBuilder.loadTexts: ds1AtmNetworkProfile_LineConfig_CosetEnabled.setStatus('mandatory')
ds1AtmNetworkProfile_LineConfig_ScramblingEnabled = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 25, 1, 1, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("no", 1), ("yes", 2)))).setLabel("ds1AtmNetworkProfile-LineConfig-ScramblingEnabled").setMaxAccess("readwrite")
if mibBuilder.loadTexts: ds1AtmNetworkProfile_LineConfig_ScramblingEnabled.setStatus('mandatory')
ds1AtmNetworkProfile_LineConfig_HecCorrectionEnabled = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 25, 1, 1, 21), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("no", 1), ("yes", 2)))).setLabel("ds1AtmNetworkProfile-LineConfig-HecCorrectionEnabled").setMaxAccess("readwrite")
if mibBuilder.loadTexts: ds1AtmNetworkProfile_LineConfig_HecCorrectionEnabled.setStatus('mandatory')
ds1AtmNetworkProfile_LineConfig_VpSwitchingVpi = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 25, 1, 1, 22), Integer32()).setLabel("ds1AtmNetworkProfile-LineConfig-VpSwitchingVpi").setMaxAccess("readwrite")
if mibBuilder.loadTexts: ds1AtmNetworkProfile_LineConfig_VpSwitchingVpi.setStatus('mandatory')
ds1AtmNetworkProfile_LineConfig_ImaOptionConfig_TxlinkConfig_NeTxLid = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 25, 1, 1, 23), Integer32()).setLabel("ds1AtmNetworkProfile-LineConfig-ImaOptionConfig-TxlinkConfig-NeTxLid").setMaxAccess("readwrite")
if mibBuilder.loadTexts: ds1AtmNetworkProfile_LineConfig_ImaOptionConfig_TxlinkConfig_NeTxLid.setStatus('mandatory')
ds1AtmNetworkProfile_LineConfig_ImaOptionConfig_TxlinkConfig_AddLinkCondTime = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 25, 1, 1, 24), Integer32()).setLabel("ds1AtmNetworkProfile-LineConfig-ImaOptionConfig-TxlinkConfig-AddLinkCondTime").setMaxAccess("readwrite")
if mibBuilder.loadTexts: ds1AtmNetworkProfile_LineConfig_ImaOptionConfig_TxlinkConfig_AddLinkCondTime.setStatus('mandatory')
ds1AtmNetworkProfile_LineConfig_ImaOptionConfig_TxlinkConfig_LinkRecoveryType = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 25, 1, 1, 25), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(2, 3, 4))).clone(namedValues=NamedValues(("manual", 2), ("slow", 3), ("fast", 4)))).setLabel("ds1AtmNetworkProfile-LineConfig-ImaOptionConfig-TxlinkConfig-LinkRecoveryType").setMaxAccess("readwrite")
if mibBuilder.loadTexts: ds1AtmNetworkProfile_LineConfig_ImaOptionConfig_TxlinkConfig_LinkRecoveryType.setStatus('mandatory')
ds1AtmNetworkProfile_LineConfig_ImaOptionConfig_TxlinkConfig_FaultClearingType = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 25, 1, 1, 26), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(2, 3))).clone(namedValues=NamedValues(("manual", 2), ("auto", 3)))).setLabel("ds1AtmNetworkProfile-LineConfig-ImaOptionConfig-TxlinkConfig-FaultClearingType").setMaxAccess("readwrite")
if mibBuilder.loadTexts: ds1AtmNetworkProfile_LineConfig_ImaOptionConfig_TxlinkConfig_FaultClearingType.setStatus('mandatory')
ds1AtmNetworkProfile_LineConfig_ImaOptionConfig_TxlinkConfig_FaultClearingTime = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 25, 1, 1, 27), Integer32()).setLabel("ds1AtmNetworkProfile-LineConfig-ImaOptionConfig-TxlinkConfig-FaultClearingTime").setMaxAccess("readwrite")
if mibBuilder.loadTexts: ds1AtmNetworkProfile_LineConfig_ImaOptionConfig_TxlinkConfig_FaultClearingTime.setStatus('mandatory')
ds1AtmNetworkProfile_LineConfig_ImaOptionConfig_TxlinkConfig_Priority = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 25, 1, 1, 28), Integer32()).setLabel("ds1AtmNetworkProfile-LineConfig-ImaOptionConfig-TxlinkConfig-Priority").setMaxAccess("readwrite")
if mibBuilder.loadTexts: ds1AtmNetworkProfile_LineConfig_ImaOptionConfig_TxlinkConfig_Priority.setStatus('mandatory')
ds1AtmNetworkProfile_LineConfig_ImaOptionConfig_RxlinkConfig_AddLinkCondTime = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 25, 1, 1, 29), Integer32()).setLabel("ds1AtmNetworkProfile-LineConfig-ImaOptionConfig-RxlinkConfig-AddLinkCondTime").setMaxAccess("readwrite")
if mibBuilder.loadTexts: ds1AtmNetworkProfile_LineConfig_ImaOptionConfig_RxlinkConfig_AddLinkCondTime.setStatus('mandatory')
ds1AtmNetworkProfile_LineConfig_ImaOptionConfig_RxlinkConfig_LinkRecoveryType = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 25, 1, 1, 30), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(2, 3, 4))).clone(namedValues=NamedValues(("manual", 2), ("slow", 3), ("fast", 4)))).setLabel("ds1AtmNetworkProfile-LineConfig-ImaOptionConfig-RxlinkConfig-LinkRecoveryType").setMaxAccess("readwrite")
if mibBuilder.loadTexts: ds1AtmNetworkProfile_LineConfig_ImaOptionConfig_RxlinkConfig_LinkRecoveryType.setStatus('mandatory')
ds1AtmNetworkProfile_LineConfig_ImaOptionConfig_RxlinkConfig_RecLinkCondTime = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 25, 1, 1, 31), Integer32()).setLabel("ds1AtmNetworkProfile-LineConfig-ImaOptionConfig-RxlinkConfig-RecLinkCondTime").setMaxAccess("readwrite")
if mibBuilder.loadTexts: ds1AtmNetworkProfile_LineConfig_ImaOptionConfig_RxlinkConfig_RecLinkCondTime.setStatus('mandatory')
ds1AtmNetworkProfile_LineConfig_ImaOptionConfig_RxlinkConfig_RxLidLearningTime = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 25, 1, 1, 32), Integer32()).setLabel("ds1AtmNetworkProfile-LineConfig-ImaOptionConfig-RxlinkConfig-RxLidLearningTime").setMaxAccess("readwrite")
if mibBuilder.loadTexts: ds1AtmNetworkProfile_LineConfig_ImaOptionConfig_RxlinkConfig_RxLidLearningTime.setStatus('mandatory')
ds1AtmNetworkProfile_LineConfig_ImaOptionConfig_RxlinkConfig_FaultClearingType = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 25, 1, 1, 33), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(2, 3))).clone(namedValues=NamedValues(("manual", 2), ("auto", 3)))).setLabel("ds1AtmNetworkProfile-LineConfig-ImaOptionConfig-RxlinkConfig-FaultClearingType").setMaxAccess("readwrite")
if mibBuilder.loadTexts: ds1AtmNetworkProfile_LineConfig_ImaOptionConfig_RxlinkConfig_FaultClearingType.setStatus('mandatory')
ds1AtmNetworkProfile_LineConfig_ImaOptionConfig_RxlinkConfig_FaultClearingTime = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 25, 1, 1, 34), Integer32()).setLabel("ds1AtmNetworkProfile-LineConfig-ImaOptionConfig-RxlinkConfig-FaultClearingTime").setMaxAccess("readwrite")
if mibBuilder.loadTexts: ds1AtmNetworkProfile_LineConfig_ImaOptionConfig_RxlinkConfig_FaultClearingTime.setStatus('mandatory')
ds1AtmNetworkProfile_LineConfig_ImaOptionConfig_RxlinkConfig_InDefectIntTime = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 25, 1, 1, 35), Integer32()).setLabel("ds1AtmNetworkProfile-LineConfig-ImaOptionConfig-RxlinkConfig-InDefectIntTime").setMaxAccess("readwrite")
if mibBuilder.loadTexts: ds1AtmNetworkProfile_LineConfig_ImaOptionConfig_RxlinkConfig_InDefectIntTime.setStatus('mandatory')
ds1AtmNetworkProfile_LineConfig_ImaOptionConfig_RxlinkConfig_OutDefectIntTime = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 25, 1, 1, 36), Integer32()).setLabel("ds1AtmNetworkProfile-LineConfig-ImaOptionConfig-RxlinkConfig-OutDefectIntTime").setMaxAccess("readwrite")
if mibBuilder.loadTexts: ds1AtmNetworkProfile_LineConfig_ImaOptionConfig_RxlinkConfig_OutDefectIntTime.setStatus('mandatory')
ds1AtmNetworkProfile_LineConfig_ImaOptionConfig_RxlinkConfig_DefectRatio = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 25, 1, 1, 37), Integer32()).setLabel("ds1AtmNetworkProfile-LineConfig-ImaOptionConfig-RxlinkConfig-DefectRatio").setMaxAccess("readwrite")
if mibBuilder.loadTexts: ds1AtmNetworkProfile_LineConfig_ImaOptionConfig_RxlinkConfig_DefectRatio.setStatus('mandatory')
ds1AtmNetworkProfile_LineConfig_StatusChangeTrapEnable = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 25, 1, 1, 44), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("no", 1), ("yes", 2)))).setLabel("ds1AtmNetworkProfile-LineConfig-StatusChangeTrapEnable").setMaxAccess("readwrite")
if mibBuilder.loadTexts: ds1AtmNetworkProfile_LineConfig_StatusChangeTrapEnable.setStatus('mandatory')
ds1AtmNetworkProfile_Action_o = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 25, 1, 1, 38), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("noAction", 1), ("createProfile", 2), ("deleteProfile", 3)))).setLabel("ds1AtmNetworkProfile-Action-o").setMaxAccess("readwrite")
if mibBuilder.loadTexts: ds1AtmNetworkProfile_Action_o.setStatus('mandatory')
mibBuilder.exportSymbols("ASCEND-MIBDS1ATMNET-MIB", ds1AtmNetworkProfile_LineConfig_ImaOptionConfig_RxlinkConfig_RxLidLearningTime=ds1AtmNetworkProfile_LineConfig_ImaOptionConfig_RxlinkConfig_RxLidLearningTime, mibds1AtmNetworkProfileEntry=mibds1AtmNetworkProfileEntry, ds1AtmNetworkProfile_LineConfig_ImaOptionConfig_RxlinkConfig_AddLinkCondTime=ds1AtmNetworkProfile_LineConfig_ImaOptionConfig_RxlinkConfig_AddLinkCondTime, ds1AtmNetworkProfile_LineConfig_Loopback=ds1AtmNetworkProfile_LineConfig_Loopback, ds1AtmNetworkProfile_LineConfig_Encoding=ds1AtmNetworkProfile_LineConfig_Encoding, ds1AtmNetworkProfile_LineConfig_ClockPriority=ds1AtmNetworkProfile_LineConfig_ClockPriority, ds1AtmNetworkProfile_LineConfig_ImaOptionConfig_TxlinkConfig_NeTxLid=ds1AtmNetworkProfile_LineConfig_ImaOptionConfig_TxlinkConfig_NeTxLid, ds1AtmNetworkProfile_LineConfig_PcmMode=ds1AtmNetworkProfile_LineConfig_PcmMode, ds1AtmNetworkProfile_LineConfig_ImaOptionConfig_RxlinkConfig_FaultClearingTime=ds1AtmNetworkProfile_LineConfig_ImaOptionConfig_RxlinkConfig_FaultClearingTime, ds1AtmNetworkProfile_LineConfig_ImaOptionConfig_TxlinkConfig_AddLinkCondTime=ds1AtmNetworkProfile_LineConfig_ImaOptionConfig_TxlinkConfig_AddLinkCondTime, ds1AtmNetworkProfile_PhysicalAddress_Shelf=ds1AtmNetworkProfile_PhysicalAddress_Shelf, ds1AtmNetworkProfile_LineConfig_ImaOptionConfig_TxlinkConfig_Priority=ds1AtmNetworkProfile_LineConfig_ImaOptionConfig_TxlinkConfig_Priority, ds1AtmNetworkProfile_Slot_o=ds1AtmNetworkProfile_Slot_o, ds1AtmNetworkProfile_SparingMode=ds1AtmNetworkProfile_SparingMode, ds1AtmNetworkProfile_LineConfig_NailedGroup=ds1AtmNetworkProfile_LineConfig_NailedGroup, ds1AtmNetworkProfile_LineConfig_VpSwitchingVpi=ds1AtmNetworkProfile_LineConfig_VpSwitchingVpi, ds1AtmNetworkProfile_LineConfig_SendCode=ds1AtmNetworkProfile_LineConfig_SendCode, ds1AtmNetworkProfile_LineConfig_HecCorrectionEnabled=ds1AtmNetworkProfile_LineConfig_HecCorrectionEnabled, mibds1AtmNetworkProfileTable=mibds1AtmNetworkProfileTable, ds1AtmNetworkProfile_LineConfig_ImaOptionConfig_TxlinkConfig_FaultClearingType=ds1AtmNetworkProfile_LineConfig_ImaOptionConfig_TxlinkConfig_FaultClearingType, ds1AtmNetworkProfile_LineConfig_ImaOptionConfig_TxlinkConfig_LinkRecoveryType=ds1AtmNetworkProfile_LineConfig_ImaOptionConfig_TxlinkConfig_LinkRecoveryType, ds1AtmNetworkProfile_IgnoreLineup=ds1AtmNetworkProfile_IgnoreLineup, ds1AtmNetworkProfile_LineConfig_ImaOptionConfig_RxlinkConfig_FaultClearingType=ds1AtmNetworkProfile_LineConfig_ImaOptionConfig_RxlinkConfig_FaultClearingType, ds1AtmNetworkProfile_LineConfig_ImaOptionConfig_RxlinkConfig_OutDefectIntTime=ds1AtmNetworkProfile_LineConfig_ImaOptionConfig_RxlinkConfig_OutDefectIntTime, ds1AtmNetworkProfile_Name=ds1AtmNetworkProfile_Name, ds1AtmNetworkProfile_LineConfig_ImaOptionConfig_TxlinkConfig_FaultClearingTime=ds1AtmNetworkProfile_LineConfig_ImaOptionConfig_TxlinkConfig_FaultClearingTime, ds1AtmNetworkProfile_LineConfig_FrontEndType=ds1AtmNetworkProfile_LineConfig_FrontEndType, ds1AtmNetworkProfile_Item_o=ds1AtmNetworkProfile_Item_o, ds1AtmNetworkProfile_LineConfig_oFDL=ds1AtmNetworkProfile_LineConfig_oFDL, ds1AtmNetworkProfile_LineConfig_ScramblingEnabled=ds1AtmNetworkProfile_LineConfig_ScramblingEnabled, ds1AtmNetworkProfile_LineConfig_ImaOptionConfig_RxlinkConfig_InDefectIntTime=ds1AtmNetworkProfile_LineConfig_ImaOptionConfig_RxlinkConfig_InDefectIntTime, ds1AtmNetworkProfile_LineConfig_ImaOptionConfig_RxlinkConfig_DefectRatio=ds1AtmNetworkProfile_LineConfig_ImaOptionConfig_RxlinkConfig_DefectRatio, ds1AtmNetworkProfile_LineConfig_CosetEnabled=ds1AtmNetworkProfile_LineConfig_CosetEnabled, mibds1AtmNetworkProfile=mibds1AtmNetworkProfile, ds1AtmNetworkProfile_LineConfig_StatusChangeTrapEnable=ds1AtmNetworkProfile_LineConfig_StatusChangeTrapEnable, ds1AtmNetworkProfile_LineConfig_ImaOptionConfig_RxlinkConfig_RecLinkCondTime=ds1AtmNetworkProfile_LineConfig_ImaOptionConfig_RxlinkConfig_RecLinkCondTime, ds1AtmNetworkProfile_LineConfig_ClockSource=ds1AtmNetworkProfile_LineConfig_ClockSource, ds1AtmNetworkProfile_Action_o=ds1AtmNetworkProfile_Action_o, ds1AtmNetworkProfile_PhysicalAddress_Slot=ds1AtmNetworkProfile_PhysicalAddress_Slot, ds1AtmNetworkProfile_PhysicalAddress_ItemNumber=ds1AtmNetworkProfile_PhysicalAddress_ItemNumber, ds1AtmNetworkProfile_LineConfig_LineBuildOut=ds1AtmNetworkProfile_LineConfig_LineBuildOut, ds1AtmNetworkProfile_LineConfig_FrameType=ds1AtmNetworkProfile_LineConfig_FrameType, ds1AtmNetworkProfile_Enabled=ds1AtmNetworkProfile_Enabled, ds1AtmNetworkProfile_Shelf_o=ds1AtmNetworkProfile_Shelf_o, DisplayString=DisplayString, ds1AtmNetworkProfile_LineConfig_ImaOptionConfig_RxlinkConfig_LinkRecoveryType=ds1AtmNetworkProfile_LineConfig_ImaOptionConfig_RxlinkConfig_LinkRecoveryType, ds1AtmNetworkProfile_LineConfig_LineLength=ds1AtmNetworkProfile_LineConfig_LineLength)
