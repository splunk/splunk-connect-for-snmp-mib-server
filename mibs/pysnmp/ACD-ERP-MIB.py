#
# PySNMP MIB module ACD-ERP-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/ACD-ERP-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 16:57:33 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
acdMibs, = mibBuilder.importSymbols("ACCEDIAN-SMI", "acdMibs")
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ValueRangeConstraint, ConstraintsUnion, ConstraintsIntersection, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ValueRangeConstraint", "ConstraintsUnion", "ConstraintsIntersection", "SingleValueConstraint")
ModuleCompliance, NotificationGroup, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup", "ObjectGroup")
IpAddress, iso, Integer32, NotificationType, MibIdentifier, MibScalar, MibTable, MibTableRow, MibTableColumn, TimeTicks, ModuleIdentity, Unsigned32, Bits, Counter64, ObjectIdentity, Counter32, Gauge32 = mibBuilder.importSymbols("SNMPv2-SMI", "IpAddress", "iso", "Integer32", "NotificationType", "MibIdentifier", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "TimeTicks", "ModuleIdentity", "Unsigned32", "Bits", "Counter64", "ObjectIdentity", "Counter32", "Gauge32")
DisplayString, TruthValue, RowStatus, MacAddress, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TruthValue", "RowStatus", "MacAddress", "TextualConvention")
acdErp = ModuleIdentity((1, 3, 6, 1, 4, 1, 22420, 2, 15))
acdErp.setRevisions(('2012-01-11 01:00',))
if mibBuilder.loadTexts: acdErp.setLastUpdated('201201110100Z')
if mibBuilder.loadTexts: acdErp.setOrganization('Accedian Networks, Inc.')
acdErpMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 22420, 2, 15, 0))
acdErpConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 22420, 2, 15, 1))
acdErpConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 22420, 2, 15, 0, 1))
acdErpCounter = MibIdentifier((1, 3, 6, 1, 4, 1, 22420, 2, 15, 0, 2))
acdErpStatus = MibIdentifier((1, 3, 6, 1, 4, 1, 22420, 2, 15, 0, 3))
acdErpVlanFdb = MibIdentifier((1, 3, 6, 1, 4, 1, 22420, 2, 15, 0, 4))
class AcdErpVlanType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("cvlan", 1), ("svlan", 2))

class AcdErpPortStateType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1))
    namedValues = NamedValues(("forwarding", 0), ("blocked", 1))

class AcdErpStateType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))
    namedValues = NamedValues(("idle", 1), ("prot", 2), ("ms", 3), ("fs", 4), ("pending", 5))

class AcdErpPortStatusType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3))
    namedValues = NamedValues(("ok", 1), ("sd", 2), ("sf", 3))

acdErpConfigTable = MibTable((1, 3, 6, 1, 4, 1, 22420, 2, 15, 0, 1, 1), )
if mibBuilder.loadTexts: acdErpConfigTable.setStatus('current')
acdErpConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 22420, 2, 15, 0, 1, 1, 1), ).setIndexNames((0, "ACD-ERP-MIB", "acdErpIndex"))
if mibBuilder.loadTexts: acdErpConfigEntry.setStatus('current')
acdErpIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 15, 0, 1, 1, 1, 1), Unsigned32())
if mibBuilder.loadTexts: acdErpIndex.setStatus('current')
acdErpConfigRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 15, 0, 1, 1, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: acdErpConfigRowStatus.setStatus('current')
acdErpConfigName = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 15, 0, 1, 1, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: acdErpConfigName.setStatus('current')
acdErpConfigRPLRole = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 15, 0, 1, 1, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acdErpConfigRPLRole.setStatus('current')
acdErpConfigRPLPort = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 15, 0, 1, 1, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acdErpConfigRPLPort.setStatus('current')
acdErpConfigHoldOffTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 15, 0, 1, 1, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 10000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acdErpConfigHoldOffTimer.setStatus('current')
acdErpConfigRevertive = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 15, 0, 1, 1, 1, 7), TruthValue().clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acdErpConfigRevertive.setStatus('current')
acdErpConfigGuardTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 15, 0, 1, 1, 1, 8), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2000)).clone(500)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acdErpConfigGuardTimer.setStatus('current')
acdErpConfigWTRTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 15, 0, 1, 1, 1, 9), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2000)).clone(5)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acdErpConfigWTRTimer.setStatus('current')
acdErpConfigMDLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 15, 0, 1, 1, 1, 10), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acdErpConfigMDLevel.setStatus('current')
acdErpConfigAPSVid = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 15, 0, 1, 1, 1, 11), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4095))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acdErpConfigAPSVid.setStatus('current')
acdErpConfigVids0to1023 = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 15, 0, 1, 1, 1, 12), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acdErpConfigVids0to1023.setStatus('current')
acdErpConfigVids1024to2047 = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 15, 0, 1, 1, 1, 13), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acdErpConfigVids1024to2047.setStatus('current')
acdErpConfigVids2048to3071 = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 15, 0, 1, 1, 1, 14), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acdErpConfigVids2048to3071.setStatus('current')
acdErpConfigVids3072to4095 = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 15, 0, 1, 1, 1, 15), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acdErpConfigVids3072to4095.setStatus('current')
acdErpConfigLAGPort = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 15, 0, 1, 1, 1, 16), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acdErpConfigLAGPort.setStatus('current')
acdErpConfigMep0Idx = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 15, 0, 1, 1, 1, 17), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 1000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acdErpConfigMep0Idx.setStatus('current')
acdErpConfigMep1Idx = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 15, 0, 1, 1, 1, 18), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 1000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acdErpConfigMep1Idx.setStatus('current')
acdErpCounterTable = MibTable((1, 3, 6, 1, 4, 1, 22420, 2, 15, 0, 2, 1), )
if mibBuilder.loadTexts: acdErpCounterTable.setStatus('current')
acdErpCounterEntry = MibTableRow((1, 3, 6, 1, 4, 1, 22420, 2, 15, 0, 2, 1, 1), ).setIndexNames((0, "ACD-ERP-MIB", "acdErpCounterIndex"))
if mibBuilder.loadTexts: acdErpCounterEntry.setStatus('current')
acdErpCounterIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 15, 0, 2, 1, 1, 1), Unsigned32())
if mibBuilder.loadTexts: acdErpCounterIndex.setStatus('current')
acdErpCounterPort0LocalClear = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 15, 0, 2, 1, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acdErpCounterPort0LocalClear.setStatus('current')
acdErpCounterPort0LocalFs = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 15, 0, 2, 1, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acdErpCounterPort0LocalFs.setStatus('current')
acdErpCounterPort0LocalSf = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 15, 0, 2, 1, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acdErpCounterPort0LocalSf.setStatus('current')
acdErpCounterPort0LocalMs = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 15, 0, 2, 1, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acdErpCounterPort0LocalMs.setStatus('current')
acdErpCounterPort0RxAps = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 15, 0, 2, 1, 1, 6), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acdErpCounterPort0RxAps.setStatus('current')
acdErpCounterPort0RxApsFs = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 15, 0, 2, 1, 1, 7), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acdErpCounterPort0RxApsFs.setStatus('current')
acdErpCounterPort0RxApsSf = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 15, 0, 2, 1, 1, 8), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acdErpCounterPort0RxApsSf.setStatus('current')
acdErpCounterPort0RxApsMs = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 15, 0, 2, 1, 1, 9), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acdErpCounterPort0RxApsMs.setStatus('current')
acdErpCounterPort0RxApsNrRb = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 15, 0, 2, 1, 1, 10), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acdErpCounterPort0RxApsNrRb.setStatus('current')
acdErpCounterPort0RxApsNr = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 15, 0, 2, 1, 1, 11), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acdErpCounterPort0RxApsNr.setStatus('current')
acdErpCounterPort0TxAps = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 15, 0, 2, 1, 1, 12), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acdErpCounterPort0TxAps.setStatus('current')
acdErpCounterPort0TxApsFs = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 15, 0, 2, 1, 1, 13), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acdErpCounterPort0TxApsFs.setStatus('current')
acdErpCounterPort0TxApsSf = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 15, 0, 2, 1, 1, 14), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acdErpCounterPort0TxApsSf.setStatus('current')
acdErpCounterPort0TxApsMs = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 15, 0, 2, 1, 1, 15), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acdErpCounterPort0TxApsMs.setStatus('current')
acdErpCounterPort0TxApsNrRb = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 15, 0, 2, 1, 1, 16), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acdErpCounterPort0TxApsNrRb.setStatus('current')
acdErpCounterPort0TxApsNr = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 15, 0, 2, 1, 1, 17), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acdErpCounterPort0TxApsNr.setStatus('current')
acdErpCounterPort0DropGuard = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 15, 0, 2, 1, 1, 18), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acdErpCounterPort0DropGuard.setStatus('current')
acdErpCounterPort0DropUnknown = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 15, 0, 2, 1, 1, 19), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acdErpCounterPort0DropUnknown.setStatus('current')
acdErpCounterPort0DropMismatch = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 15, 0, 2, 1, 1, 20), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acdErpCounterPort0DropMismatch.setStatus('current')
acdErpCounterPort1LocalClear = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 15, 0, 2, 1, 1, 21), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acdErpCounterPort1LocalClear.setStatus('current')
acdErpCounterPort1LocalFs = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 15, 0, 2, 1, 1, 22), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acdErpCounterPort1LocalFs.setStatus('current')
acdErpCounterPort1LocalSf = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 15, 0, 2, 1, 1, 23), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acdErpCounterPort1LocalSf.setStatus('current')
acdErpCounterPort1LocalMs = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 15, 0, 2, 1, 1, 24), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acdErpCounterPort1LocalMs.setStatus('current')
acdErpCounterPort1RxAps = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 15, 0, 2, 1, 1, 25), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acdErpCounterPort1RxAps.setStatus('current')
acdErpCounterPort1RxApsFs = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 15, 0, 2, 1, 1, 26), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acdErpCounterPort1RxApsFs.setStatus('current')
acdErpCounterPort1RxApsSf = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 15, 0, 2, 1, 1, 27), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acdErpCounterPort1RxApsSf.setStatus('current')
acdErpCounterPort1RxApsMs = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 15, 0, 2, 1, 1, 28), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acdErpCounterPort1RxApsMs.setStatus('current')
acdErpCounterPort1RxApsNrRb = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 15, 0, 2, 1, 1, 29), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acdErpCounterPort1RxApsNrRb.setStatus('current')
acdErpCounterPort1RxApsNr = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 15, 0, 2, 1, 1, 30), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acdErpCounterPort1RxApsNr.setStatus('current')
acdErpCounterPort1TxAps = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 15, 0, 2, 1, 1, 31), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acdErpCounterPort1TxAps.setStatus('current')
acdErpCounterPort1TxApsFs = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 15, 0, 2, 1, 1, 32), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acdErpCounterPort1TxApsFs.setStatus('current')
acdErpCounterPort1TxApsSf = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 15, 0, 2, 1, 1, 33), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acdErpCounterPort1TxApsSf.setStatus('current')
acdErpCounterPort1TxApsMs = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 15, 0, 2, 1, 1, 34), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acdErpCounterPort1TxApsMs.setStatus('current')
acdErpCounterPort1TxApsNrRb = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 15, 0, 2, 1, 1, 35), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acdErpCounterPort1TxApsNrRb.setStatus('current')
acdErpCounterPort1TxApsNr = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 15, 0, 2, 1, 1, 36), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acdErpCounterPort1TxApsNr.setStatus('current')
acdErpCounterPort1DropGuard = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 15, 0, 2, 1, 1, 37), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acdErpCounterPort1DropGuard.setStatus('current')
acdErpCounterPort1DropUnknown = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 15, 0, 2, 1, 1, 38), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acdErpCounterPort1DropUnknown.setStatus('current')
acdErpCounterPort1DropMismatch = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 15, 0, 2, 1, 1, 39), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acdErpCounterPort1DropMismatch.setStatus('current')
acdErpStatusTable = MibTable((1, 3, 6, 1, 4, 1, 22420, 2, 15, 0, 3, 1), )
if mibBuilder.loadTexts: acdErpStatusTable.setStatus('current')
acdErpStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 22420, 2, 15, 0, 3, 1, 1), ).setIndexNames((0, "ACD-ERP-MIB", "acdErpStatusIdx"))
if mibBuilder.loadTexts: acdErpStatusEntry.setStatus('current')
acdErpStatusIdx = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 15, 0, 3, 1, 1, 1), Unsigned32())
if mibBuilder.loadTexts: acdErpStatusIdx.setStatus('current')
acdErpStatusName = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 15, 0, 3, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acdErpStatusName.setStatus('current')
acdErpStatusNodeId = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 15, 0, 3, 1, 1, 3), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acdErpStatusNodeId.setStatus('current')
acdErpStatusRPLNodeId = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 15, 0, 3, 1, 1, 4), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acdErpStatusRPLNodeId.setStatus('current')
acdErpStatusState = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 15, 0, 3, 1, 1, 5), AcdErpStateType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acdErpStatusState.setStatus('current')
acdErpStatusRequestNodeId = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 15, 0, 3, 1, 1, 6), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acdErpStatusRequestNodeId.setStatus('current')
acdErpStatusRequest = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 15, 0, 3, 1, 1, 7), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acdErpStatusRequest.setStatus('current')
acdErpPort0Status = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 15, 0, 3, 1, 1, 8), AcdErpPortStatusType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acdErpPort0Status.setStatus('current')
acdErpPort0State = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 15, 0, 3, 1, 1, 9), AcdErpPortStateType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acdErpPort0State.setStatus('current')
acdErpPort1Status = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 15, 0, 3, 1, 1, 10), AcdErpPortStatusType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acdErpPort1Status.setStatus('current')
acdErpPort1State = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 15, 0, 3, 1, 1, 11), AcdErpPortStateType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acdErpPort1State.setStatus('current')
acdErpVlanFdbTable = MibTable((1, 3, 6, 1, 4, 1, 22420, 2, 15, 0, 4, 1), )
if mibBuilder.loadTexts: acdErpVlanFdbTable.setStatus('current')
acdErpVlanFdbEntry = MibTableRow((1, 3, 6, 1, 4, 1, 22420, 2, 15, 0, 4, 1, 1), ).setIndexNames((0, "ACD-ERP-MIB", "acdErpVlanFdbIdx"))
if mibBuilder.loadTexts: acdErpVlanFdbEntry.setStatus('current')
acdErpVlanFdbIdx = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 15, 0, 4, 1, 1, 1), Unsigned32())
if mibBuilder.loadTexts: acdErpVlanFdbIdx.setStatus('current')
acdErpVlanFdbPort0Vids0to1023 = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 15, 0, 4, 1, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acdErpVlanFdbPort0Vids0to1023.setStatus('current')
acdErpVlanFdbPort0Vids1024to2047 = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 15, 0, 4, 1, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acdErpVlanFdbPort0Vids1024to2047.setStatus('current')
acdErpVlanFdbPort0Vids2048to3071 = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 15, 0, 4, 1, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acdErpVlanFdbPort0Vids2048to3071.setStatus('current')
acdErpVlanFdbPort0Vids3072to4095 = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 15, 0, 4, 1, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acdErpVlanFdbPort0Vids3072to4095.setStatus('current')
acdErpVlanFdbPort1Vids0to1023 = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 15, 0, 4, 1, 1, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acdErpVlanFdbPort1Vids0to1023.setStatus('current')
acdErpVlanFdbPort1Vids1024to2047 = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 15, 0, 4, 1, 1, 7), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acdErpVlanFdbPort1Vids1024to2047.setStatus('current')
acdErpVlanFdbPort1Vids2048to3071 = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 15, 0, 4, 1, 1, 8), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acdErpVlanFdbPort1Vids2048to3071.setStatus('current')
acdErpVlanFdbPort1Vids3072to4095 = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 15, 0, 4, 1, 1, 9), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acdErpVlanFdbPort1Vids3072to4095.setStatus('current')
acdErpVlanFdbFloodingVids0to1023 = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 15, 0, 4, 1, 1, 10), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acdErpVlanFdbFloodingVids0to1023.setStatus('current')
acdErpVlanFdbFloodingVids1024to2047 = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 15, 0, 4, 1, 1, 11), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acdErpVlanFdbFloodingVids1024to2047.setStatus('current')
acdErpVlanFdbFloodingVids2048to3071 = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 15, 0, 4, 1, 1, 12), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acdErpVlanFdbFloodingVids2048to3071.setStatus('current')
acdErpVlanFdbFloodingVids3072to4095 = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 15, 0, 4, 1, 1, 13), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acdErpVlanFdbFloodingVids3072to4095.setStatus('current')
acdErpVlanFdbFlappingVids0to1023 = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 15, 0, 4, 1, 1, 14), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acdErpVlanFdbFlappingVids0to1023.setStatus('current')
acdErpVlanFdbFlappingVids1024to2047 = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 15, 0, 4, 1, 1, 15), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acdErpVlanFdbFlappingVids1024to2047.setStatus('current')
acdErpVlanFdbFlappingVids2048to3071 = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 15, 0, 4, 1, 1, 16), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acdErpVlanFdbFlappingVids2048to3071.setStatus('current')
acdErpVlanFdbFlappingVids3072to4095 = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 15, 0, 4, 1, 1, 17), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acdErpVlanFdbFlappingVids3072to4095.setStatus('current')
acdErpCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 22420, 2, 15, 1, 1))
acdErpGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 22420, 2, 15, 1, 2))
acdErpConfigGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 22420, 2, 15, 1, 2, 1)).setObjects(("ACD-ERP-MIB", "acdErpConfigRowStatus"), ("ACD-ERP-MIB", "acdErpConfigName"), ("ACD-ERP-MIB", "acdErpConfigRPLRole"), ("ACD-ERP-MIB", "acdErpConfigRPLPort"), ("ACD-ERP-MIB", "acdErpConfigHoldOffTimer"), ("ACD-ERP-MIB", "acdErpConfigRevertive"), ("ACD-ERP-MIB", "acdErpConfigGuardTimer"), ("ACD-ERP-MIB", "acdErpConfigWTRTimer"), ("ACD-ERP-MIB", "acdErpConfigMDLevel"), ("ACD-ERP-MIB", "acdErpConfigAPSVid"), ("ACD-ERP-MIB", "acdErpConfigVids0to1023"), ("ACD-ERP-MIB", "acdErpConfigVids1024to2047"), ("ACD-ERP-MIB", "acdErpConfigVids2048to3071"), ("ACD-ERP-MIB", "acdErpConfigVids3072to4095"), ("ACD-ERP-MIB", "acdErpConfigLAGPort"), ("ACD-ERP-MIB", "acdErpConfigMep0Idx"), ("ACD-ERP-MIB", "acdErpConfigMep1Idx"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    acdErpConfigGroup = acdErpConfigGroup.setStatus('current')
acdErpCounterGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 22420, 2, 15, 1, 2, 2)).setObjects(("ACD-ERP-MIB", "acdErpCounterPort0LocalClear"), ("ACD-ERP-MIB", "acdErpCounterPort0LocalFs"), ("ACD-ERP-MIB", "acdErpCounterPort0LocalSf"), ("ACD-ERP-MIB", "acdErpCounterPort0LocalMs"), ("ACD-ERP-MIB", "acdErpCounterPort0RxAps"), ("ACD-ERP-MIB", "acdErpCounterPort0RxApsFs"), ("ACD-ERP-MIB", "acdErpCounterPort0RxApsSf"), ("ACD-ERP-MIB", "acdErpCounterPort0RxApsMs"), ("ACD-ERP-MIB", "acdErpCounterPort0RxApsNrRb"), ("ACD-ERP-MIB", "acdErpCounterPort0RxApsNr"), ("ACD-ERP-MIB", "acdErpCounterPort0TxAps"), ("ACD-ERP-MIB", "acdErpCounterPort0TxApsFs"), ("ACD-ERP-MIB", "acdErpCounterPort0TxApsSf"), ("ACD-ERP-MIB", "acdErpCounterPort0TxApsMs"), ("ACD-ERP-MIB", "acdErpCounterPort0TxApsNrRb"), ("ACD-ERP-MIB", "acdErpCounterPort0TxApsNr"), ("ACD-ERP-MIB", "acdErpCounterPort0DropGuard"), ("ACD-ERP-MIB", "acdErpCounterPort0DropUnknown"), ("ACD-ERP-MIB", "acdErpCounterPort0DropMismatch"), ("ACD-ERP-MIB", "acdErpCounterPort1LocalClear"), ("ACD-ERP-MIB", "acdErpCounterPort1LocalFs"), ("ACD-ERP-MIB", "acdErpCounterPort1LocalSf"), ("ACD-ERP-MIB", "acdErpCounterPort1LocalMs"), ("ACD-ERP-MIB", "acdErpCounterPort1RxAps"), ("ACD-ERP-MIB", "acdErpCounterPort1RxApsFs"), ("ACD-ERP-MIB", "acdErpCounterPort1RxApsSf"), ("ACD-ERP-MIB", "acdErpCounterPort1RxApsMs"), ("ACD-ERP-MIB", "acdErpCounterPort1RxApsNrRb"), ("ACD-ERP-MIB", "acdErpCounterPort1RxApsNr"), ("ACD-ERP-MIB", "acdErpCounterPort1TxAps"), ("ACD-ERP-MIB", "acdErpCounterPort1TxApsFs"), ("ACD-ERP-MIB", "acdErpCounterPort1TxApsSf"), ("ACD-ERP-MIB", "acdErpCounterPort1TxApsMs"), ("ACD-ERP-MIB", "acdErpCounterPort1TxApsNrRb"), ("ACD-ERP-MIB", "acdErpCounterPort1TxApsNr"), ("ACD-ERP-MIB", "acdErpCounterPort1DropGuard"), ("ACD-ERP-MIB", "acdErpCounterPort1DropUnknown"), ("ACD-ERP-MIB", "acdErpCounterPort1DropMismatch"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    acdErpCounterGroup = acdErpCounterGroup.setStatus('current')
acdErpStatusGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 22420, 2, 15, 1, 2, 3)).setObjects(("ACD-ERP-MIB", "acdErpStatusName"), ("ACD-ERP-MIB", "acdErpStatusNodeId"), ("ACD-ERP-MIB", "acdErpStatusRPLNodeId"), ("ACD-ERP-MIB", "acdErpStatusState"), ("ACD-ERP-MIB", "acdErpStatusRequestNodeId"), ("ACD-ERP-MIB", "acdErpStatusRequest"), ("ACD-ERP-MIB", "acdErpPort0Status"), ("ACD-ERP-MIB", "acdErpPort0State"), ("ACD-ERP-MIB", "acdErpPort1Status"), ("ACD-ERP-MIB", "acdErpPort1State"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    acdErpStatusGroup = acdErpStatusGroup.setStatus('current')
acdErpVlanFdbGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 22420, 2, 15, 1, 2, 4)).setObjects(("ACD-ERP-MIB", "acdErpVlanFdbPort0Vids0to1023"), ("ACD-ERP-MIB", "acdErpVlanFdbPort0Vids1024to2047"), ("ACD-ERP-MIB", "acdErpVlanFdbPort0Vids2048to3071"), ("ACD-ERP-MIB", "acdErpVlanFdbPort0Vids3072to4095"), ("ACD-ERP-MIB", "acdErpVlanFdbPort1Vids0to1023"), ("ACD-ERP-MIB", "acdErpVlanFdbPort1Vids1024to2047"), ("ACD-ERP-MIB", "acdErpVlanFdbPort1Vids2048to3071"), ("ACD-ERP-MIB", "acdErpVlanFdbPort1Vids3072to4095"), ("ACD-ERP-MIB", "acdErpVlanFdbFloodingVids0to1023"), ("ACD-ERP-MIB", "acdErpVlanFdbFloodingVids1024to2047"), ("ACD-ERP-MIB", "acdErpVlanFdbFloodingVids2048to3071"), ("ACD-ERP-MIB", "acdErpVlanFdbFloodingVids3072to4095"), ("ACD-ERP-MIB", "acdErpVlanFdbFlappingVids0to1023"), ("ACD-ERP-MIB", "acdErpVlanFdbFlappingVids1024to2047"), ("ACD-ERP-MIB", "acdErpVlanFdbFlappingVids2048to3071"), ("ACD-ERP-MIB", "acdErpVlanFdbFlappingVids3072to4095"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    acdErpVlanFdbGroup = acdErpVlanFdbGroup.setStatus('current')
acdErpCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 22420, 2, 15, 1, 1, 1)).setObjects(("ACD-ERP-MIB", "acdErpConfigGroup"), ("ACD-ERP-MIB", "acdErpCounterGroup"), ("ACD-ERP-MIB", "acdErpStatusGroup"), ("ACD-ERP-MIB", "acdErpVlanFdbGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    acdErpCompliance = acdErpCompliance.setStatus('current')
mibBuilder.exportSymbols("ACD-ERP-MIB", acdErpConfig=acdErpConfig, acdErpCounterPort1LocalFs=acdErpCounterPort1LocalFs, acdErpCounterPort1DropGuard=acdErpCounterPort1DropGuard, acdErpCounterPort1RxApsSf=acdErpCounterPort1RxApsSf, acdErpCompliances=acdErpCompliances, acdErpVlanFdbFlappingVids2048to3071=acdErpVlanFdbFlappingVids2048to3071, acdErpCounterPort0TxApsSf=acdErpCounterPort0TxApsSf, acdErpStatusRequestNodeId=acdErpStatusRequestNodeId, acdErpVlanFdbPort1Vids3072to4095=acdErpVlanFdbPort1Vids3072to4095, acdErpVlanFdb=acdErpVlanFdb, acdErpCounterPort0RxApsFs=acdErpCounterPort0RxApsFs, acdErpCounterPort0RxApsNrRb=acdErpCounterPort0RxApsNrRb, acdErpStatus=acdErpStatus, acdErpCounterPort1RxApsMs=acdErpCounterPort1RxApsMs, acdErpCounterPort0TxApsNrRb=acdErpCounterPort0TxApsNrRb, AcdErpVlanType=AcdErpVlanType, AcdErpStateType=AcdErpStateType, acdErpConfigMDLevel=acdErpConfigMDLevel, AcdErpPortStateType=AcdErpPortStateType, AcdErpPortStatusType=AcdErpPortStatusType, acdErpConfigVids2048to3071=acdErpConfigVids2048to3071, acdErpCounterEntry=acdErpCounterEntry, acdErpVlanFdbPort1Vids0to1023=acdErpVlanFdbPort1Vids0to1023, acdErpCounterPort0LocalSf=acdErpCounterPort0LocalSf, acdErpCounterPort0DropUnknown=acdErpCounterPort0DropUnknown, acdErpStatusTable=acdErpStatusTable, acdErpConfigVids3072to4095=acdErpConfigVids3072to4095, acdErpCounterPort1TxApsSf=acdErpCounterPort1TxApsSf, acdErpCounterPort0RxApsNr=acdErpCounterPort0RxApsNr, acdErpCounterPort1LocalClear=acdErpCounterPort1LocalClear, acdErpCounterPort0TxApsFs=acdErpCounterPort0TxApsFs, acdErpCounterPort0LocalClear=acdErpCounterPort0LocalClear, acdErpConfigRevertive=acdErpConfigRevertive, acdErpStatusRPLNodeId=acdErpStatusRPLNodeId, acdErpVlanFdbFloodingVids2048to3071=acdErpVlanFdbFloodingVids2048to3071, acdErpCounterPort1LocalMs=acdErpCounterPort1LocalMs, acdErpCounterIndex=acdErpCounterIndex, acdErpCounterPort1TxApsMs=acdErpCounterPort1TxApsMs, acdErpCounterPort1TxApsNr=acdErpCounterPort1TxApsNr, acdErpVlanFdbIdx=acdErpVlanFdbIdx, acdErp=acdErp, acdErpStatusEntry=acdErpStatusEntry, acdErpVlanFdbPort0Vids3072to4095=acdErpVlanFdbPort0Vids3072to4095, acdErpConfigWTRTimer=acdErpConfigWTRTimer, acdErpConfigMep0Idx=acdErpConfigMep0Idx, acdErpCounterPort0RxApsSf=acdErpCounterPort0RxApsSf, acdErpCounterPort0DropMismatch=acdErpCounterPort0DropMismatch, acdErpConfigHoldOffTimer=acdErpConfigHoldOffTimer, acdErpStatusIdx=acdErpStatusIdx, acdErpConfigVids1024to2047=acdErpConfigVids1024to2047, acdErpCounterPort1RxApsNr=acdErpCounterPort1RxApsNr, acdErpGroups=acdErpGroups, acdErpConfigGuardTimer=acdErpConfigGuardTimer, acdErpCounterPort1DropUnknown=acdErpCounterPort1DropUnknown, acdErpConformance=acdErpConformance, PYSNMP_MODULE_ID=acdErp, acdErpStatusGroup=acdErpStatusGroup, acdErpConfigMep1Idx=acdErpConfigMep1Idx, acdErpCounterPort1RxApsFs=acdErpCounterPort1RxApsFs, acdErpCounterPort1RxApsNrRb=acdErpCounterPort1RxApsNrRb, acdErpVlanFdbGroup=acdErpVlanFdbGroup, acdErpVlanFdbFlappingVids0to1023=acdErpVlanFdbFlappingVids0to1023, acdErpVlanFdbFlappingVids3072to4095=acdErpVlanFdbFlappingVids3072to4095, acdErpCounterPort0LocalMs=acdErpCounterPort0LocalMs, acdErpVlanFdbEntry=acdErpVlanFdbEntry, acdErpVlanFdbFlappingVids1024to2047=acdErpVlanFdbFlappingVids1024to2047, acdErpPort1Status=acdErpPort1Status, acdErpConfigVids0to1023=acdErpConfigVids0to1023, acdErpCounterPort1TxApsNrRb=acdErpCounterPort1TxApsNrRb, acdErpConfigName=acdErpConfigName, acdErpVlanFdbPort1Vids1024to2047=acdErpVlanFdbPort1Vids1024to2047, acdErpConfigRowStatus=acdErpConfigRowStatus, acdErpCounter=acdErpCounter, acdErpCounterTable=acdErpCounterTable, acdErpVlanFdbFloodingVids3072to4095=acdErpVlanFdbFloodingVids3072to4095, acdErpCounterPort0TxApsNr=acdErpCounterPort0TxApsNr, acdErpConfigAPSVid=acdErpConfigAPSVid, acdErpCounterPort0RxApsMs=acdErpCounterPort0RxApsMs, acdErpPort1State=acdErpPort1State, acdErpVlanFdbFloodingVids0to1023=acdErpVlanFdbFloodingVids0to1023, acdErpConfigRPLPort=acdErpConfigRPLPort, acdErpCounterPort1RxAps=acdErpCounterPort1RxAps, acdErpStatusName=acdErpStatusName, acdErpCounterPort1TxAps=acdErpCounterPort1TxAps, acdErpPort0State=acdErpPort0State, acdErpConfigLAGPort=acdErpConfigLAGPort, acdErpCounterPort0DropGuard=acdErpCounterPort0DropGuard, acdErpCompliance=acdErpCompliance, acdErpCounterGroup=acdErpCounterGroup, acdErpCounterPort1TxApsFs=acdErpCounterPort1TxApsFs, acdErpIndex=acdErpIndex, acdErpCounterPort0TxAps=acdErpCounterPort0TxAps, acdErpStatusNodeId=acdErpStatusNodeId, acdErpCounterPort0RxAps=acdErpCounterPort0RxAps, acdErpStatusState=acdErpStatusState, acdErpCounterPort1LocalSf=acdErpCounterPort1LocalSf, acdErpVlanFdbPort0Vids2048to3071=acdErpVlanFdbPort0Vids2048to3071, acdErpVlanFdbTable=acdErpVlanFdbTable, acdErpConfigGroup=acdErpConfigGroup, acdErpConfigTable=acdErpConfigTable, acdErpMIBObjects=acdErpMIBObjects, acdErpCounterPort0LocalFs=acdErpCounterPort0LocalFs, acdErpVlanFdbPort1Vids2048to3071=acdErpVlanFdbPort1Vids2048to3071, acdErpConfigEntry=acdErpConfigEntry, acdErpVlanFdbFloodingVids1024to2047=acdErpVlanFdbFloodingVids1024to2047, acdErpPort0Status=acdErpPort0Status, acdErpCounterPort1DropMismatch=acdErpCounterPort1DropMismatch, acdErpStatusRequest=acdErpStatusRequest, acdErpVlanFdbPort0Vids0to1023=acdErpVlanFdbPort0Vids0to1023, acdErpConfigRPLRole=acdErpConfigRPLRole, acdErpCounterPort0TxApsMs=acdErpCounterPort0TxApsMs, acdErpVlanFdbPort0Vids1024to2047=acdErpVlanFdbPort0Vids1024to2047)
