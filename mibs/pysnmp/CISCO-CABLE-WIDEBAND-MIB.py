#
# PySNMP MIB module CISCO-CABLE-WIDEBAND-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CISCO-CABLE-WIDEBAND-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:34:41 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ValueSizeConstraint, ConstraintsUnion, SingleValueConstraint, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ValueSizeConstraint", "ConstraintsUnion", "SingleValueConstraint", "ValueRangeConstraint")
ciscoMgmt, = mibBuilder.importSymbols("CISCO-SMI", "ciscoMgmt")
docsIfCmtsCmStatusIndex, = mibBuilder.importSymbols("DOCS-IF-MIB", "docsIfCmtsCmStatusIndex")
PhysicalIndexOrZero, entPhysicalName, entPhysicalIndex = mibBuilder.importSymbols("ENTITY-MIB", "PhysicalIndexOrZero", "entPhysicalName", "entPhysicalIndex")
ifIndex, InterfaceIndex, InterfaceIndexOrZero = mibBuilder.importSymbols("IF-MIB", "ifIndex", "InterfaceIndex", "InterfaceIndexOrZero")
InetPortNumber, InetAddress, InetAddressType = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetPortNumber", "InetAddress", "InetAddressType")
SnmpAdminString, = mibBuilder.importSymbols("SNMP-FRAMEWORK-MIB", "SnmpAdminString")
ModuleCompliance, ObjectGroup, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "ObjectGroup", "NotificationGroup")
MibIdentifier, Unsigned32, Integer32, iso, ModuleIdentity, Gauge32, TimeTicks, NotificationType, Counter64, ObjectIdentity, IpAddress, Bits, Counter32, MibScalar, MibTable, MibTableRow, MibTableColumn = mibBuilder.importSymbols("SNMPv2-SMI", "MibIdentifier", "Unsigned32", "Integer32", "iso", "ModuleIdentity", "Gauge32", "TimeTicks", "NotificationType", "Counter64", "ObjectIdentity", "IpAddress", "Bits", "Counter32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn")
TextualConvention, DisplayString, StorageType, RowStatus, MacAddress, TruthValue = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString", "StorageType", "RowStatus", "MacAddress", "TruthValue")
ciscoCableWidebandMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 9, 9, 479))
ciscoCableWidebandMIB.setRevisions(('2011-01-05 00:00', '2010-07-15 00:00', '2008-12-03 00:00', '2006-06-06 00:00',))
if mibBuilder.loadTexts: ciscoCableWidebandMIB.setLastUpdated('201101050000Z')
if mibBuilder.loadTexts: ciscoCableWidebandMIB.setOrganization('Cisco Systems, Inc.')
ciscoCableWidebandMIBNotifs = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 479, 0))
ciscoCableWidebandMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 479, 1))
ciscoCableWidebandMIBConform = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 479, 2))
ccwbRFChannelTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 479, 1, 1), )
if mibBuilder.loadTexts: ccwbRFChannelTable.setStatus('current')
ccwbRFChannelEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 479, 1, 1, 1), ).setIndexNames((0, "ENTITY-MIB", "entPhysicalIndex"), (0, "CISCO-CABLE-WIDEBAND-MIB", "ccwbRFChannelNum"))
if mibBuilder.loadTexts: ccwbRFChannelEntry.setStatus('current')
ccwbRFChannelNum = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 479, 1, 1, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255)))
if mibBuilder.loadTexts: ccwbRFChannelNum.setStatus('current')
ccwbRFChannelFrequency = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 479, 1, 1, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 1000000000))).setUnits('hertz').setMaxAccess("readcreate")
if mibBuilder.loadTexts: ccwbRFChannelFrequency.setStatus('deprecated')
ccwbRFChannelWidth = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 479, 1, 1, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 16000000))).setUnits('hertz').setMaxAccess("readcreate")
if mibBuilder.loadTexts: ccwbRFChannelWidth.setStatus('current')
ccwbRFChannelModulation = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 479, 1, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("qam64", 1), ("qam256", 2), ("qam1024", 3)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ccwbRFChannelModulation.setStatus('current')
ccwbRFChannelAnnex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 479, 1, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("annexA", 1), ("annexB", 2), ("annexC", 3)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ccwbRFChannelAnnex.setStatus('current')
ccwbRFChannelMpegPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 479, 1, 1, 1, 6), Counter64()).setUnits('Packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: ccwbRFChannelMpegPkts.setStatus('current')
ccwbRFChannelStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 479, 1, 1, 1, 7), StorageType().clone('volatile')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ccwbRFChannelStorageType.setStatus('current')
ccwbRFChannelRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 479, 1, 1, 1, 8), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ccwbRFChannelRowStatus.setStatus('current')
ccwbRFChannelUtilization = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 479, 1, 1, 1, 9), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setUnits('percent').setMaxAccess("readonly")
if mibBuilder.loadTexts: ccwbRFChannelUtilization.setStatus('current')
ccwbRFChannelFrequencyRev1 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 479, 1, 1, 1, 10), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(55000000, 1050000000))).setUnits('hertz').setMaxAccess("readcreate")
if mibBuilder.loadTexts: ccwbRFChannelFrequencyRev1.setStatus('current')
ccwbRFChannelQamTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 479, 1, 2), )
if mibBuilder.loadTexts: ccwbRFChannelQamTable.setStatus('current')
ccwbRFChannelQamEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 479, 1, 2, 1), )
ccwbRFChannelEntry.registerAugmentions(("CISCO-CABLE-WIDEBAND-MIB", "ccwbRFChannelQamEntry"))
ccwbRFChannelQamEntry.setIndexNames(*ccwbRFChannelEntry.getIndexNames())
if mibBuilder.loadTexts: ccwbRFChannelQamEntry.setStatus('current')
ccwbRFChanQamIPAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 479, 1, 2, 1, 1), InetAddressType().clone('ipv4')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ccwbRFChanQamIPAddressType.setStatus('current')
ccwbRFChanQamIPAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 479, 1, 2, 1, 2), InetAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ccwbRFChanQamIPAddress.setStatus('current')
ccwbRFChanQamMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 479, 1, 2, 1, 3), MacAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ccwbRFChanQamMacAddress.setStatus('current')
ccwbRFChanQamUdpPort = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 479, 1, 2, 1, 4), InetPortNumber()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ccwbRFChanQamUdpPort.setStatus('current')
ccwbRFChanQamTos = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 479, 1, 2, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ccwbRFChanQamTos.setStatus('current')
ccwbRFChanQamVlanId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 479, 1, 2, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4095))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ccwbRFChanQamVlanId.setStatus('current')
ccwbRFChanQamPriorityBits = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 479, 1, 2, 1, 7), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ccwbRFChanQamPriorityBits.setStatus('current')
ccwbRFChanQamDepiRemoteId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 479, 1, 2, 1, 8), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ccwbRFChanQamDepiRemoteId.setStatus('current')
ccwbRFChanQamDepiTunnel = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 479, 1, 2, 1, 9), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ccwbRFChanQamDepiTunnel.setStatus('current')
ccwbRFChanQamTsid = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 479, 1, 2, 1, 10), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ccwbRFChanQamTsid.setStatus('current')
ccwbWBtoRFMappingTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 479, 1, 3), )
if mibBuilder.loadTexts: ccwbWBtoRFMappingTable.setStatus('current')
ccwbWBtoRFMappingEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 479, 1, 3, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "ENTITY-MIB", "entPhysicalIndex"), (0, "CISCO-CABLE-WIDEBAND-MIB", "ccwbRFChannelNum"))
if mibBuilder.loadTexts: ccwbWBtoRFMappingEntry.setStatus('current')
ccwbWBtoRFBandwidth = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 479, 1, 3, 1, 1), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(1, 100)).clone(100)).setUnits('percent').setMaxAccess("readcreate")
if mibBuilder.loadTexts: ccwbWBtoRFBandwidth.setStatus('current')
ccwbWBtoRFStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 479, 1, 3, 1, 2), StorageType().clone('volatile')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ccwbWBtoRFStorageType.setStatus('current')
ccwbWBtoRFRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 479, 1, 3, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ccwbWBtoRFRowStatus.setStatus('current')
ccwbWBtoNBMappingTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 479, 1, 4), )
if mibBuilder.loadTexts: ccwbWBtoNBMappingTable.setStatus('current')
ccwbWBtoNBMappingEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 479, 1, 4, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "CISCO-CABLE-WIDEBAND-MIB", "ccwbWBtoNBifIndexForNB"))
if mibBuilder.loadTexts: ccwbWBtoNBMappingEntry.setStatus('current')
ccwbWBtoNBifIndexForNB = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 479, 1, 4, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: ccwbWBtoNBifIndexForNB.setStatus('current')
ccwbWBtoNBStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 479, 1, 4, 1, 2), StorageType().clone('volatile')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ccwbWBtoNBStorageType.setStatus('current')
ccwbWBtoNBRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 479, 1, 4, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ccwbWBtoNBRowStatus.setStatus('current')
ccwbWBBondGrpTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 479, 1, 5), )
if mibBuilder.loadTexts: ccwbWBBondGrpTable.setStatus('current')
ccwbWBBondGrpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 479, 1, 5, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: ccwbWBBondGrpEntry.setStatus('current')
ccwbWBBondGrpSecondary = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 479, 1, 5, 1, 1), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ccwbWBBondGrpSecondary.setStatus('current')
ccwbWBCmStatusTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 479, 1, 6), )
if mibBuilder.loadTexts: ccwbWBCmStatusTable.setStatus('current')
ccwbWBCmStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 479, 1, 6, 1), ).setIndexNames((0, "DOCS-IF-MIB", "docsIfCmtsCmStatusIndex"))
if mibBuilder.loadTexts: ccwbWBCmStatusEntry.setStatus('current')
ccwbWBCmStatusValue = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 479, 1, 6, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39))).clone(namedValues=NamedValues(("offline", 1), ("others", 2), ("initRangingRcvd", 3), ("initDhcpReqRcvd", 4), ("onlineNetAccessDisabled", 5), ("onlineKekAssigned", 6), ("onlineTekAssigned", 7), ("rejectBadMic", 8), ("rejectBadCos", 9), ("kekRejected", 10), ("tekRejected", 11), ("online", 12), ("initTftpPacketRcvd", 13), ("initTodRequestRcvd", 14), ("reset", 15), ("rangingInProgress", 16), ("dhcpGotIpAddr", 17), ("rejStaleConfig", 18), ("rejIpSpoof", 19), ("rejClassFail", 20), ("rejRegNack", 21), ("bpiKekExpired", 22), ("bpiTekExpired", 23), ("shutdown", 24), ("channelChgInitRangingRcvd", 25), ("channelChgRangingInProgress", 26), ("wbOnline", 27), ("wbOnlinePrivacy", 28), ("wbOnlineKekAssigned", 29), ("wbOnlineTekAssigned", 30), ("wbOnlineNetAccessDis", 31), ("wbKekReject", 32), ("wbTekReject", 33), ("wbNetAccessDisReject", 34), ("wbPrivacyEnabReject", 35), ("wbKekExpire", 36), ("wbTekExpire", 37), ("wbNetAccessDisExpire", 38), ("wbPrivacyEnabExpire", 39)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ccwbWBCmStatusValue.setStatus('current')
ccwbWBCmStatusExtTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 479, 1, 7), )
if mibBuilder.loadTexts: ccwbWBCmStatusExtTable.setStatus('current')
ccwbWBCmStatusExtEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 479, 1, 7, 1), ).setIndexNames((0, "DOCS-IF-MIB", "docsIfCmtsCmStatusIndex"), (0, "CISCO-CABLE-WIDEBAND-MIB", "ccwbWBCmStatusExtIndex"))
if mibBuilder.loadTexts: ccwbWBCmStatusExtEntry.setStatus('current')
ccwbWBCmStatusExtIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 479, 1, 7, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: ccwbWBCmStatusExtIndex.setStatus('current')
ccwbWBCmWBIfindex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 479, 1, 7, 1, 2), InterfaceIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ccwbWBCmWBIfindex.setStatus('current')
ccwbFiberNodeDescrTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 479, 1, 8), )
if mibBuilder.loadTexts: ccwbFiberNodeDescrTable.setStatus('current')
ccwbFiberNodeDescrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 479, 1, 8, 1), ).setIndexNames((0, "CISCO-CABLE-WIDEBAND-MIB", "ccwbFiberNodeID"))
if mibBuilder.loadTexts: ccwbFiberNodeDescrEntry.setStatus('current')
ccwbFiberNodeDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 479, 1, 8, 1, 1), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 80))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ccwbFiberNodeDescription.setStatus('current')
ccwbFiberNodeDescrStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 479, 1, 8, 1, 2), StorageType().clone('volatile')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ccwbFiberNodeDescrStorageType.setStatus('current')
ccwbFiberNodeDescrRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 479, 1, 8, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ccwbFiberNodeDescrRowStatus.setStatus('current')
ccwbFiberNodeTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 479, 1, 9), )
if mibBuilder.loadTexts: ccwbFiberNodeTable.setStatus('current')
ccwbFiberNodeEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 479, 1, 9, 1), ).setIndexNames((0, "CISCO-CABLE-WIDEBAND-MIB", "ccwbFiberNodeID"), (0, "CISCO-CABLE-WIDEBAND-MIB", "ccwbFiberNodeGlobRFID"))
if mibBuilder.loadTexts: ccwbFiberNodeEntry.setStatus('current')
ccwbFiberNodeID = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 479, 1, 9, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 1000)))
if mibBuilder.loadTexts: ccwbFiberNodeID.setStatus('current')
ccwbFiberNodeGlobRFID = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 479, 1, 9, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 1024)))
if mibBuilder.loadTexts: ccwbFiberNodeGlobRFID.setStatus('current')
ccwbFiberNodeNBIfIndx = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 479, 1, 9, 1, 3), InterfaceIndexOrZero()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ccwbFiberNodeNBIfIndx.setStatus('current')
ccwbFiberNodeWBContlrPhyIndx = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 479, 1, 9, 1, 4), PhysicalIndexOrZero()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ccwbFiberNodeWBContlrPhyIndx.setStatus('current')
ccwbFiberNodeWBRFPort = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 479, 1, 9, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1024))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ccwbFiberNodeWBRFPort.setStatus('current')
ccwbFiberNodeStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 479, 1, 9, 1, 6), StorageType().clone('volatile')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ccwbFiberNodeStorageType.setStatus('current')
ccwbFiberNodeRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 479, 1, 9, 1, 7), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ccwbFiberNodeRowStatus.setStatus('current')
ccwbRFChanUtilInterval = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 479, 1, 10), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 86400))).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: ccwbRFChanUtilInterval.setStatus('current')
ccwbSFPLinkTrapEnable = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 479, 1, 11), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ccwbSFPLinkTrapEnable.setStatus('current')
ciscoCableWidebandMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 479, 2, 1))
ciscoCableWidebandMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 479, 2, 2))
ccwbSFPLinkDownNotification = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 479, 0, 1)).setObjects(("ENTITY-MIB", "entPhysicalName"))
if mibBuilder.loadTexts: ccwbSFPLinkDownNotification.setStatus('current')
ccwbSFPLinkUpNotification = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 479, 0, 2)).setObjects(("ENTITY-MIB", "entPhysicalName"))
if mibBuilder.loadTexts: ccwbSFPLinkUpNotification.setStatus('current')
ciscoCableWidebandMIBCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 479, 2, 1, 1)).setObjects(("CISCO-CABLE-WIDEBAND-MIB", "ccwbWidebandObjGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoCableWidebandMIBCompliance = ciscoCableWidebandMIBCompliance.setStatus('deprecated')
ciscoCableWidebandMIBComplianceRev1 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 479, 2, 1, 2)).setObjects(("CISCO-CABLE-WIDEBAND-MIB", "ccwbWidebandObjGroup"), ("CISCO-CABLE-WIDEBAND-MIB", "ccwbWidebandObjGroupSup1"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoCableWidebandMIBComplianceRev1 = ciscoCableWidebandMIBComplianceRev1.setStatus('deprecated')
ciscoCableWidebandMIBComplianceRev2 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 479, 2, 1, 3)).setObjects(("CISCO-CABLE-WIDEBAND-MIB", "ccwbWidebandObjGroupRev1"), ("CISCO-CABLE-WIDEBAND-MIB", "ccwbWidebandObjGroupSup1"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoCableWidebandMIBComplianceRev2 = ciscoCableWidebandMIBComplianceRev2.setStatus('deprecated')
ciscoCableWidebandMIBComplianceRev3 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 479, 2, 1, 4)).setObjects(("CISCO-CABLE-WIDEBAND-MIB", "ccwbWidebandObjGroupRev1"), ("CISCO-CABLE-WIDEBAND-MIB", "ccwbWidebandObjGroupSup1"), ("CISCO-CABLE-WIDEBAND-MIB", "ccwbWidebandObjGroupSup2"), ("CISCO-CABLE-WIDEBAND-MIB", "ccwbWidebandNotifGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoCableWidebandMIBComplianceRev3 = ciscoCableWidebandMIBComplianceRev3.setStatus('current')
ccwbWidebandObjGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 479, 2, 2, 1)).setObjects(("CISCO-CABLE-WIDEBAND-MIB", "ccwbRFChannelFrequency"), ("CISCO-CABLE-WIDEBAND-MIB", "ccwbRFChannelWidth"), ("CISCO-CABLE-WIDEBAND-MIB", "ccwbRFChannelModulation"), ("CISCO-CABLE-WIDEBAND-MIB", "ccwbRFChannelAnnex"), ("CISCO-CABLE-WIDEBAND-MIB", "ccwbRFChannelStorageType"), ("CISCO-CABLE-WIDEBAND-MIB", "ccwbRFChannelRowStatus"), ("CISCO-CABLE-WIDEBAND-MIB", "ccwbRFChannelMpegPkts"), ("CISCO-CABLE-WIDEBAND-MIB", "ccwbRFChanQamIPAddressType"), ("CISCO-CABLE-WIDEBAND-MIB", "ccwbRFChanQamIPAddress"), ("CISCO-CABLE-WIDEBAND-MIB", "ccwbRFChanQamMacAddress"), ("CISCO-CABLE-WIDEBAND-MIB", "ccwbRFChanQamUdpPort"), ("CISCO-CABLE-WIDEBAND-MIB", "ccwbRFChanQamTos"), ("CISCO-CABLE-WIDEBAND-MIB", "ccwbRFChanQamVlanId"), ("CISCO-CABLE-WIDEBAND-MIB", "ccwbRFChanQamPriorityBits"), ("CISCO-CABLE-WIDEBAND-MIB", "ccwbWBtoRFBandwidth"), ("CISCO-CABLE-WIDEBAND-MIB", "ccwbWBtoRFStorageType"), ("CISCO-CABLE-WIDEBAND-MIB", "ccwbWBtoRFRowStatus"), ("CISCO-CABLE-WIDEBAND-MIB", "ccwbWBtoNBStorageType"), ("CISCO-CABLE-WIDEBAND-MIB", "ccwbWBtoNBRowStatus"), ("CISCO-CABLE-WIDEBAND-MIB", "ccwbWBBondGrpSecondary"), ("CISCO-CABLE-WIDEBAND-MIB", "ccwbWBCmStatusValue"), ("CISCO-CABLE-WIDEBAND-MIB", "ccwbWBCmWBIfindex"), ("CISCO-CABLE-WIDEBAND-MIB", "ccwbFiberNodeDescription"), ("CISCO-CABLE-WIDEBAND-MIB", "ccwbFiberNodeDescrStorageType"), ("CISCO-CABLE-WIDEBAND-MIB", "ccwbFiberNodeDescrRowStatus"), ("CISCO-CABLE-WIDEBAND-MIB", "ccwbFiberNodeNBIfIndx"), ("CISCO-CABLE-WIDEBAND-MIB", "ccwbFiberNodeWBContlrPhyIndx"), ("CISCO-CABLE-WIDEBAND-MIB", "ccwbFiberNodeWBRFPort"), ("CISCO-CABLE-WIDEBAND-MIB", "ccwbFiberNodeStorageType"), ("CISCO-CABLE-WIDEBAND-MIB", "ccwbFiberNodeRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ccwbWidebandObjGroup = ccwbWidebandObjGroup.setStatus('deprecated')
ccwbWidebandObjGroupSup1 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 479, 2, 2, 2)).setObjects(("CISCO-CABLE-WIDEBAND-MIB", "ccwbRFChannelUtilization"), ("CISCO-CABLE-WIDEBAND-MIB", "ccwbRFChanUtilInterval"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ccwbWidebandObjGroupSup1 = ccwbWidebandObjGroupSup1.setStatus('current')
ccwbWidebandObjGroupRev1 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 479, 2, 2, 3)).setObjects(("CISCO-CABLE-WIDEBAND-MIB", "ccwbRFChannelFrequencyRev1"), ("CISCO-CABLE-WIDEBAND-MIB", "ccwbRFChannelWidth"), ("CISCO-CABLE-WIDEBAND-MIB", "ccwbRFChannelModulation"), ("CISCO-CABLE-WIDEBAND-MIB", "ccwbRFChannelAnnex"), ("CISCO-CABLE-WIDEBAND-MIB", "ccwbRFChannelStorageType"), ("CISCO-CABLE-WIDEBAND-MIB", "ccwbRFChannelRowStatus"), ("CISCO-CABLE-WIDEBAND-MIB", "ccwbRFChannelMpegPkts"), ("CISCO-CABLE-WIDEBAND-MIB", "ccwbRFChanQamIPAddressType"), ("CISCO-CABLE-WIDEBAND-MIB", "ccwbRFChanQamIPAddress"), ("CISCO-CABLE-WIDEBAND-MIB", "ccwbRFChanQamMacAddress"), ("CISCO-CABLE-WIDEBAND-MIB", "ccwbRFChanQamUdpPort"), ("CISCO-CABLE-WIDEBAND-MIB", "ccwbRFChanQamTos"), ("CISCO-CABLE-WIDEBAND-MIB", "ccwbRFChanQamVlanId"), ("CISCO-CABLE-WIDEBAND-MIB", "ccwbRFChanQamPriorityBits"), ("CISCO-CABLE-WIDEBAND-MIB", "ccwbRFChanQamDepiRemoteId"), ("CISCO-CABLE-WIDEBAND-MIB", "ccwbWBtoRFBandwidth"), ("CISCO-CABLE-WIDEBAND-MIB", "ccwbWBtoRFStorageType"), ("CISCO-CABLE-WIDEBAND-MIB", "ccwbWBtoRFRowStatus"), ("CISCO-CABLE-WIDEBAND-MIB", "ccwbWBtoNBStorageType"), ("CISCO-CABLE-WIDEBAND-MIB", "ccwbWBtoNBRowStatus"), ("CISCO-CABLE-WIDEBAND-MIB", "ccwbWBBondGrpSecondary"), ("CISCO-CABLE-WIDEBAND-MIB", "ccwbWBCmStatusValue"), ("CISCO-CABLE-WIDEBAND-MIB", "ccwbWBCmWBIfindex"), ("CISCO-CABLE-WIDEBAND-MIB", "ccwbFiberNodeDescription"), ("CISCO-CABLE-WIDEBAND-MIB", "ccwbFiberNodeDescrStorageType"), ("CISCO-CABLE-WIDEBAND-MIB", "ccwbFiberNodeDescrRowStatus"), ("CISCO-CABLE-WIDEBAND-MIB", "ccwbFiberNodeNBIfIndx"), ("CISCO-CABLE-WIDEBAND-MIB", "ccwbFiberNodeWBContlrPhyIndx"), ("CISCO-CABLE-WIDEBAND-MIB", "ccwbFiberNodeWBRFPort"), ("CISCO-CABLE-WIDEBAND-MIB", "ccwbFiberNodeStorageType"), ("CISCO-CABLE-WIDEBAND-MIB", "ccwbFiberNodeRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ccwbWidebandObjGroupRev1 = ccwbWidebandObjGroupRev1.setStatus('current')
ccwbWidebandObjGroupSup2 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 479, 2, 2, 4)).setObjects(("CISCO-CABLE-WIDEBAND-MIB", "ccwbRFChanQamDepiTunnel"), ("CISCO-CABLE-WIDEBAND-MIB", "ccwbRFChanQamTsid"), ("CISCO-CABLE-WIDEBAND-MIB", "ccwbSFPLinkTrapEnable"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ccwbWidebandObjGroupSup2 = ccwbWidebandObjGroupSup2.setStatus('current')
ccwbWidebandNotifGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 9, 9, 479, 2, 2, 5)).setObjects(("CISCO-CABLE-WIDEBAND-MIB", "ccwbSFPLinkDownNotification"), ("CISCO-CABLE-WIDEBAND-MIB", "ccwbSFPLinkUpNotification"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ccwbWidebandNotifGroup = ccwbWidebandNotifGroup.setStatus('current')
mibBuilder.exportSymbols("CISCO-CABLE-WIDEBAND-MIB", ccwbWBtoNBRowStatus=ccwbWBtoNBRowStatus, ccwbRFChannelFrequency=ccwbRFChannelFrequency, ccwbFiberNodeTable=ccwbFiberNodeTable, ciscoCableWidebandMIBGroups=ciscoCableWidebandMIBGroups, ccwbRFChannelModulation=ccwbRFChannelModulation, PYSNMP_MODULE_ID=ciscoCableWidebandMIB, ciscoCableWidebandMIBComplianceRev1=ciscoCableWidebandMIBComplianceRev1, ciscoCableWidebandMIBComplianceRev2=ciscoCableWidebandMIBComplianceRev2, ccwbRFChannelEntry=ccwbRFChannelEntry, ccwbRFChanUtilInterval=ccwbRFChanUtilInterval, ccwbFiberNodeGlobRFID=ccwbFiberNodeGlobRFID, ciscoCableWidebandMIB=ciscoCableWidebandMIB, ciscoCableWidebandMIBCompliance=ciscoCableWidebandMIBCompliance, ccwbFiberNodeStorageType=ccwbFiberNodeStorageType, ccwbRFChannelNum=ccwbRFChannelNum, ccwbFiberNodeID=ccwbFiberNodeID, ccwbWidebandNotifGroup=ccwbWidebandNotifGroup, ccwbWBCmStatusExtIndex=ccwbWBCmStatusExtIndex, ccwbRFChannelQamTable=ccwbRFChannelQamTable, ccwbWBCmStatusExtTable=ccwbWBCmStatusExtTable, ccwbRFChanQamPriorityBits=ccwbRFChanQamPriorityBits, ccwbRFChannelTable=ccwbRFChannelTable, ccwbRFChanQamTos=ccwbRFChanQamTos, ccwbFiberNodeDescrStorageType=ccwbFiberNodeDescrStorageType, ciscoCableWidebandMIBCompliances=ciscoCableWidebandMIBCompliances, ccwbRFChanQamMacAddress=ccwbRFChanQamMacAddress, ccwbWBtoNBifIndexForNB=ccwbWBtoNBifIndexForNB, ccwbWBtoRFStorageType=ccwbWBtoRFStorageType, ccwbRFChanQamVlanId=ccwbRFChanQamVlanId, ccwbRFChanQamTsid=ccwbRFChanQamTsid, ccwbRFChannelUtilization=ccwbRFChannelUtilization, ccwbSFPLinkDownNotification=ccwbSFPLinkDownNotification, ccwbFiberNodeDescrTable=ccwbFiberNodeDescrTable, ccwbFiberNodeNBIfIndx=ccwbFiberNodeNBIfIndx, ciscoCableWidebandMIBConform=ciscoCableWidebandMIBConform, ciscoCableWidebandMIBObjects=ciscoCableWidebandMIBObjects, ccwbRFChannelQamEntry=ccwbRFChannelQamEntry, ccwbFiberNodeRowStatus=ccwbFiberNodeRowStatus, ccwbWidebandObjGroupSup1=ccwbWidebandObjGroupSup1, ccwbWBCmWBIfindex=ccwbWBCmWBIfindex, ccwbRFChanQamIPAddress=ccwbRFChanQamIPAddress, ccwbFiberNodeDescription=ccwbFiberNodeDescription, ccwbWBBondGrpEntry=ccwbWBBondGrpEntry, ccwbRFChannelStorageType=ccwbRFChannelStorageType, ccwbFiberNodeWBRFPort=ccwbFiberNodeWBRFPort, ccwbRFChanQamUdpPort=ccwbRFChanQamUdpPort, ccwbRFChannelWidth=ccwbRFChannelWidth, ccwbRFChannelAnnex=ccwbRFChannelAnnex, ccwbWBtoRFMappingEntry=ccwbWBtoRFMappingEntry, ccwbWBCmStatusExtEntry=ccwbWBCmStatusExtEntry, ccwbSFPLinkTrapEnable=ccwbSFPLinkTrapEnable, ccwbFiberNodeWBContlrPhyIndx=ccwbFiberNodeWBContlrPhyIndx, ccwbWBtoRFRowStatus=ccwbWBtoRFRowStatus, ccwbSFPLinkUpNotification=ccwbSFPLinkUpNotification, ccwbWBtoNBStorageType=ccwbWBtoNBStorageType, ccwbWBBondGrpSecondary=ccwbWBBondGrpSecondary, ciscoCableWidebandMIBNotifs=ciscoCableWidebandMIBNotifs, ccwbWBBondGrpTable=ccwbWBBondGrpTable, ccwbWBtoRFBandwidth=ccwbWBtoRFBandwidth, ccwbFiberNodeDescrRowStatus=ccwbFiberNodeDescrRowStatus, ccwbFiberNodeEntry=ccwbFiberNodeEntry, ccwbWBCmStatusEntry=ccwbWBCmStatusEntry, ccwbRFChannelRowStatus=ccwbRFChannelRowStatus, ccwbWBtoRFMappingTable=ccwbWBtoRFMappingTable, ccwbRFChannelMpegPkts=ccwbRFChannelMpegPkts, ccwbWidebandObjGroup=ccwbWidebandObjGroup, ccwbRFChanQamDepiTunnel=ccwbRFChanQamDepiTunnel, ccwbWBCmStatusTable=ccwbWBCmStatusTable, ccwbRFChannelFrequencyRev1=ccwbRFChannelFrequencyRev1, ccwbWidebandObjGroupRev1=ccwbWidebandObjGroupRev1, ccwbWBtoNBMappingEntry=ccwbWBtoNBMappingEntry, ccwbRFChanQamIPAddressType=ccwbRFChanQamIPAddressType, ccwbFiberNodeDescrEntry=ccwbFiberNodeDescrEntry, ccwbWBtoNBMappingTable=ccwbWBtoNBMappingTable, ccwbWidebandObjGroupSup2=ccwbWidebandObjGroupSup2, ccwbRFChanQamDepiRemoteId=ccwbRFChanQamDepiRemoteId, ccwbWBCmStatusValue=ccwbWBCmStatusValue, ciscoCableWidebandMIBComplianceRev3=ciscoCableWidebandMIBComplianceRev3)
