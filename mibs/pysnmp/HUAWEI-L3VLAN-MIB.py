#
# PySNMP MIB module HUAWEI-L3VLAN-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/HUAWEI-L3VLAN-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:34:02 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ConstraintsUnion, ConstraintsIntersection, ValueSizeConstraint, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ConstraintsUnion", "ConstraintsIntersection", "ValueSizeConstraint", "ValueRangeConstraint")
hwDatacomm, = mibBuilder.importSymbols("HUAWEI-MIB", "hwDatacomm")
InterfaceIndex, ifIndex = mibBuilder.importSymbols("IF-MIB", "InterfaceIndex", "ifIndex")
ObjectGroup, ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "ModuleCompliance", "NotificationGroup")
Integer32, Gauge32, ModuleIdentity, TimeTicks, MibIdentifier, Counter32, ObjectIdentity, Counter64, Unsigned32, Bits, NotificationType, MibScalar, MibTable, MibTableRow, MibTableColumn, iso, IpAddress = mibBuilder.importSymbols("SNMPv2-SMI", "Integer32", "Gauge32", "ModuleIdentity", "TimeTicks", "MibIdentifier", "Counter32", "ObjectIdentity", "Counter64", "Unsigned32", "Bits", "NotificationType", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "iso", "IpAddress")
TextualConvention, RowStatus, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "RowStatus", "DisplayString")
hwL3Vlan = ModuleIdentity((1, 3, 6, 1, 4, 1, 2011, 5, 25, 100))
if mibBuilder.loadTexts: hwL3Vlan.setLastUpdated('200308110900Z')
if mibBuilder.loadTexts: hwL3Vlan.setOrganization('Huawei Technologies Co., Ltd.')
hwL3VlanMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 100, 1))
hwSubIfVlanTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 100, 1, 1), )
if mibBuilder.loadTexts: hwSubIfVlanTable.setStatus('current')
hwSubIfVlanEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 100, 1, 1, 1), ).setIndexNames((0, "HUAWEI-L3VLAN-MIB", "hwSubIfIndex"), (0, "HUAWEI-L3VLAN-MIB", "hwSubIfVlanId"))
if mibBuilder.loadTexts: hwSubIfVlanEntry.setStatus('current')
hwSubIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 100, 1, 1, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: hwSubIfIndex.setStatus('current')
hwSubIfVlanId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 100, 1, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4094)))
if mibBuilder.loadTexts: hwSubIfVlanId.setStatus('current')
hwSubIfVlanType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 100, 1, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(2))).clone(namedValues=NamedValues(("dot1q", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwSubIfVlanType.setStatus('current')
hwSubIfVlanStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 100, 1, 1, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwSubIfVlanStatus.setStatus('current')
hwVLANMibRoutertVlanCountTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 100, 1, 2), )
if mibBuilder.loadTexts: hwVLANMibRoutertVlanCountTable.setStatus('current')
hwVLANMibRoutertVlanCountEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 100, 1, 2, 1), ).setIndexNames((0, "HUAWEI-L3VLAN-MIB", "hwVLANMibRouterPort"), (0, "HUAWEI-L3VLAN-MIB", "hwVLANMibRouterVID"))
if mibBuilder.loadTexts: hwVLANMibRoutertVlanCountEntry.setStatus('current')
hwVLANMibRouterPort = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 100, 1, 2, 1, 1), InterfaceIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwVLANMibRouterPort.setStatus('current')
hwVLANMibRouterVID = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 100, 1, 2, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4094))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwVLANMibRouterVID.setStatus('current')
hwVLANMibRouterVlanPacketTran = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 100, 1, 2, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwVLANMibRouterVlanPacketTran.setStatus('current')
hwVLANMibRouterVlanPacketSent = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 100, 1, 2, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwVLANMibRouterVlanPacketSent.setStatus('current')
hwVLANMibClearVidStatistics = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 100, 1, 2, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("unavailable", 0), ("clear", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwVLANMibClearVidStatistics.setStatus('current')
hwSubIfVlanPolicyTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 100, 1, 3), )
if mibBuilder.loadTexts: hwSubIfVlanPolicyTable.setStatus('current')
hwSubIfVlanPolicyEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 100, 1, 3, 1), ).setIndexNames((0, "HUAWEI-L3VLAN-MIB", "hwSubIfVlanPolicyIfIndex"), (0, "HUAWEI-L3VLAN-MIB", "hwSubIfVlanPolicyVlanId"))
if mibBuilder.loadTexts: hwSubIfVlanPolicyEntry.setStatus('current')
hwSubIfVlanPolicyIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 100, 1, 3, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: hwSubIfVlanPolicyIfIndex.setStatus('current')
hwSubIfVlanPolicyVlanId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 100, 1, 3, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4094)))
if mibBuilder.loadTexts: hwSubIfVlanPolicyVlanId.setStatus('current')
hwSubIfVlanPolicyIfType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 100, 1, 3, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("dot1q", 1), ("dot1qTerm", 2), ("stacking", 3), ("untagged", 4)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwSubIfVlanPolicyIfType.setStatus('current')
hwSubIfVlanPolicyVlanIdEnd = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 100, 1, 3, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4094))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwSubIfVlanPolicyVlanIdEnd.setStatus('current')
hwSubIfVlanPolicyType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 100, 1, 3, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("type8021P", 1), ("typeDSCP", 2), ("typeEtherType", 3), ("default", 4)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwSubIfVlanPolicyType.setStatus('current')
hwSubIfVlanPolicyValue = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 100, 1, 3, 1, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(8, 8)).setFixedLength(8)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwSubIfVlanPolicyValue.setStatus('current')
hwSubIfVlanPolicyGroupId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 100, 1, 3, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 16))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwSubIfVlanPolicyGroupId.setStatus('current')
hwSubIfVlanPolicyRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 100, 1, 3, 1, 51), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwSubIfVlanPolicyRowStatus.setStatus('current')
hwL3VlanTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 100, 2))
hwL3VlanConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 100, 3))
hwL3VlanCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 100, 3, 1))
hwL3VlanCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 2011, 5, 25, 100, 3, 1, 1)).setObjects(("HUAWEI-L3VLAN-MIB", "hwSubIfVlanGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwL3VlanCompliance = hwL3VlanCompliance.setStatus('current')
hwL3VlanGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 100, 3, 2))
hwSubIfVlanGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 100, 3, 2, 1)).setObjects(("HUAWEI-L3VLAN-MIB", "hwSubIfVlanType"), ("HUAWEI-L3VLAN-MIB", "hwSubIfVlanId"), ("HUAWEI-L3VLAN-MIB", "hwSubIfVlanStatus"), ("HUAWEI-L3VLAN-MIB", "hwSubIfVlanPolicyIfType"), ("HUAWEI-L3VLAN-MIB", "hwSubIfVlanPolicyVlanIdEnd"), ("HUAWEI-L3VLAN-MIB", "hwSubIfVlanPolicyType"), ("HUAWEI-L3VLAN-MIB", "hwSubIfVlanPolicyValue"), ("HUAWEI-L3VLAN-MIB", "hwSubIfVlanPolicyGroupId"), ("HUAWEI-L3VLAN-MIB", "hwSubIfVlanPolicyRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwSubIfVlanGroup = hwSubIfVlanGroup.setStatus('current')
mibBuilder.exportSymbols("HUAWEI-L3VLAN-MIB", hwSubIfVlanId=hwSubIfVlanId, hwSubIfVlanPolicyVlanIdEnd=hwSubIfVlanPolicyVlanIdEnd, hwSubIfVlanPolicyTable=hwSubIfVlanPolicyTable, hwSubIfIndex=hwSubIfIndex, hwSubIfVlanTable=hwSubIfVlanTable, hwSubIfVlanStatus=hwSubIfVlanStatus, hwSubIfVlanType=hwSubIfVlanType, hwVLANMibClearVidStatistics=hwVLANMibClearVidStatistics, hwSubIfVlanPolicyValue=hwSubIfVlanPolicyValue, hwVLANMibRouterPort=hwVLANMibRouterPort, hwVLANMibRouterVID=hwVLANMibRouterVID, hwVLANMibRoutertVlanCountTable=hwVLANMibRoutertVlanCountTable, hwL3VlanConformance=hwL3VlanConformance, hwL3VlanGroups=hwL3VlanGroups, hwL3VlanMIBObjects=hwL3VlanMIBObjects, hwSubIfVlanPolicyRowStatus=hwSubIfVlanPolicyRowStatus, hwVLANMibRouterVlanPacketTran=hwVLANMibRouterVlanPacketTran, PYSNMP_MODULE_ID=hwL3Vlan, hwL3VlanCompliances=hwL3VlanCompliances, hwSubIfVlanPolicyVlanId=hwSubIfVlanPolicyVlanId, hwSubIfVlanPolicyGroupId=hwSubIfVlanPolicyGroupId, hwSubIfVlanPolicyIfType=hwSubIfVlanPolicyIfType, hwVLANMibRoutertVlanCountEntry=hwVLANMibRoutertVlanCountEntry, hwSubIfVlanPolicyType=hwSubIfVlanPolicyType, hwSubIfVlanEntry=hwSubIfVlanEntry, hwL3Vlan=hwL3Vlan, hwL3VlanTraps=hwL3VlanTraps, hwSubIfVlanGroup=hwSubIfVlanGroup, hwVLANMibRouterVlanPacketSent=hwVLANMibRouterVlanPacketSent, hwL3VlanCompliance=hwL3VlanCompliance, hwSubIfVlanPolicyEntry=hwSubIfVlanPolicyEntry, hwSubIfVlanPolicyIfIndex=hwSubIfVlanPolicyIfIndex)
