#
# PySNMP MIB module SYSMON6K-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/SYSMON6K-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 21:06:57 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ConstraintsUnion, SingleValueConstraint, ConstraintsIntersection, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ConstraintsUnion", "SingleValueConstraint", "ConstraintsIntersection", "ValueRangeConstraint")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
Counter32, Unsigned32, enterprises, Bits, ModuleIdentity, IpAddress, iso, NotificationType, MibIdentifier, Integer32, TimeTicks, Counter64, MibScalar, MibTable, MibTableRow, MibTableColumn, Gauge32, ObjectIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "Counter32", "Unsigned32", "enterprises", "Bits", "ModuleIdentity", "IpAddress", "iso", "NotificationType", "MibIdentifier", "Integer32", "TimeTicks", "Counter64", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Gauge32", "ObjectIdentity")
TextualConvention, DisplayString, PhysAddress = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString", "PhysAddress")
ibm = MibIdentifier((1, 3, 6, 1, 4, 1, 2))
ibmProd = MibIdentifier((1, 3, 6, 1, 4, 1, 2, 6))
systemsMonitor6000 = MibIdentifier((1, 3, 6, 1, 4, 1, 2, 6, 12))
sm6kProgramInformation = MibIdentifier((1, 3, 6, 1, 4, 1, 2, 6, 12, 1))
sm6kSystemInformation = MibIdentifier((1, 3, 6, 1, 4, 1, 2, 6, 12, 2))
sm6kNetworkInformation = MibIdentifier((1, 3, 6, 1, 4, 1, 2, 6, 12, 3))
sm6kCommand = MibIdentifier((1, 3, 6, 1, 4, 1, 2, 6, 12, 4))
sm6kThreshold = MibIdentifier((1, 3, 6, 1, 4, 1, 2, 6, 12, 5))
sm6kAnalysis = MibIdentifier((1, 3, 6, 1, 4, 1, 2, 6, 12, 6))
sm6kFilter = MibIdentifier((1, 3, 6, 1, 4, 1, 2, 6, 12, 7))
sm6kAlias = MibIdentifier((1, 3, 6, 1, 4, 1, 2, 6, 12, 8))
sm6kTrapDestination = MibIdentifier((1, 3, 6, 1, 4, 1, 2, 6, 12, 9))
sm6kAdministration = MibIdentifier((1, 3, 6, 1, 4, 1, 2, 6, 12, 10))
sm6kProgramData = MibIdentifier((1, 3, 6, 1, 4, 1, 2, 6, 12, 1, 1))
sm6kResourceUsage = MibIdentifier((1, 3, 6, 1, 4, 1, 2, 6, 12, 1, 2))
sm6kProgramMessages = MibIdentifier((1, 3, 6, 1, 4, 1, 2, 6, 12, 1, 3))
sm6kProgramDescription = MibIdentifier((1, 3, 6, 1, 4, 1, 2, 6, 12, 1, 1, 1))
sm6kProgramControl = MibIdentifier((1, 3, 6, 1, 4, 1, 2, 6, 12, 1, 1, 2))
sm6kProgramLog = MibIdentifier((1, 3, 6, 1, 4, 1, 2, 6, 12, 1, 1, 3))
sm6kProgramDataCollection = MibIdentifier((1, 3, 6, 1, 4, 1, 2, 6, 12, 1, 1, 4))
sm6kProgramSetableTestObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2, 6, 12, 1, 1, 5))
sm6kProgramName = MibScalar((1, 3, 6, 1, 4, 1, 2, 6, 12, 1, 1, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kProgramName.setStatus('mandatory')
sm6kProgramNumber = MibScalar((1, 3, 6, 1, 4, 1, 2, 6, 12, 1, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kProgramNumber.setStatus('mandatory')
sm6kProgramVersion = MibScalar((1, 3, 6, 1, 4, 1, 2, 6, 12, 1, 1, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kProgramVersion.setStatus('mandatory')
sm6kProgramCompilationDate = MibScalar((1, 3, 6, 1, 4, 1, 2, 6, 12, 1, 1, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kProgramCompilationDate.setStatus('mandatory')
sm6kProgramUpTime = MibScalar((1, 3, 6, 1, 4, 1, 2, 6, 12, 1, 1, 1, 5), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kProgramUpTime.setStatus('mandatory')
sm6kProgramContact = MibScalar((1, 3, 6, 1, 4, 1, 2, 6, 12, 1, 1, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sm6kProgramContact.setStatus('mandatory')
sm6kProgramControlLocalConfigurationFile = MibScalar((1, 3, 6, 1, 4, 1, 2, 6, 12, 1, 1, 2, 1), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sm6kProgramControlLocalConfigurationFile.setStatus('mandatory')
sm6kProgramControlReInitializeMonitor = MibScalar((1, 3, 6, 1, 4, 1, 2, 6, 12, 1, 1, 2, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sm6kProgramControlReInitializeMonitor.setStatus('mandatory')
sm6kProgramControlNonForkCacheTime = MibScalar((1, 3, 6, 1, 4, 1, 2, 6, 12, 1, 1, 2, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sm6kProgramControlNonForkCacheTime.setStatus('mandatory')
sm6kProgramControlForkCacheTime = MibScalar((1, 3, 6, 1, 4, 1, 2, 6, 12, 1, 1, 2, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sm6kProgramControlForkCacheTime.setStatus('mandatory')
sm6kProgramControlPercentMultiplier = MibScalar((1, 3, 6, 1, 4, 1, 2, 6, 12, 1, 1, 2, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sm6kProgramControlPercentMultiplier.setStatus('mandatory')
sm6kProgramControlPollTime = MibScalar((1, 3, 6, 1, 4, 1, 2, 6, 12, 1, 1, 2, 6), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sm6kProgramControlPollTime.setStatus('mandatory')
sm6kProgramControlFlags = MibScalar((1, 3, 6, 1, 4, 1, 2, 6, 12, 1, 1, 2, 7), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sm6kProgramControlFlags.setStatus('mandatory')
sm6kProgramRetryCount = MibScalar((1, 3, 6, 1, 4, 1, 2, 6, 12, 1, 1, 2, 8), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sm6kProgramRetryCount.setStatus('mandatory')
sm6kProgramTimeout = MibScalar((1, 3, 6, 1, 4, 1, 2, 6, 12, 1, 1, 2, 9), TimeTicks()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sm6kProgramTimeout.setStatus('mandatory')
sm6kProgramLogFileName = MibScalar((1, 3, 6, 1, 4, 1, 2, 6, 12, 1, 1, 3, 1), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sm6kProgramLogFileName.setStatus('mandatory')
sm6kProgramLogFileSize = MibScalar((1, 3, 6, 1, 4, 1, 2, 6, 12, 1, 1, 3, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kProgramLogFileSize.setStatus('mandatory')
sm6kProgramLogMaxFileSize = MibScalar((1, 3, 6, 1, 4, 1, 2, 6, 12, 1, 1, 3, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sm6kProgramLogMaxFileSize.setStatus('mandatory')
sm6kProgramLogNumFiles = MibScalar((1, 3, 6, 1, 4, 1, 2, 6, 12, 1, 1, 3, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sm6kProgramLogNumFiles.setStatus('mandatory')
sm6kProgramLogFileBehavior = MibScalar((1, 3, 6, 1, 4, 1, 2, 6, 12, 1, 1, 3, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("wrapFlush", 1), ("wrapNoflush", 2), ("nowrapFlush", 3), ("nowrapNoflush", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sm6kProgramLogFileBehavior.setStatus('mandatory')
sm6kProgramLogMask = MibScalar((1, 3, 6, 1, 4, 1, 2, 6, 12, 1, 1, 3, 6), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sm6kProgramLogMask.setStatus('mandatory')
sm6kProgramDataCollectionFileName = MibScalar((1, 3, 6, 1, 4, 1, 2, 6, 12, 1, 1, 4, 1), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sm6kProgramDataCollectionFileName.setStatus('mandatory')
sm6kProgramDataCollectionFileSize = MibScalar((1, 3, 6, 1, 4, 1, 2, 6, 12, 1, 1, 4, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kProgramDataCollectionFileSize.setStatus('mandatory')
sm6kProgramDataCollectionMaxFileSize = MibScalar((1, 3, 6, 1, 4, 1, 2, 6, 12, 1, 1, 4, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sm6kProgramDataCollectionMaxFileSize.setStatus('mandatory')
sm6kProgramDataCollectionNumFiles = MibScalar((1, 3, 6, 1, 4, 1, 2, 6, 12, 1, 1, 4, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sm6kProgramDataCollectionNumFiles.setStatus('mandatory')
sm6kProgramDataCollectionFileBehavior = MibScalar((1, 3, 6, 1, 4, 1, 2, 6, 12, 1, 1, 4, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("wrapFlush", 1), ("wrapNoflush", 2), ("nowrapFlush", 3), ("nowrapNoflush", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sm6kProgramDataCollectionFileBehavior.setStatus('mandatory')
sm6kProgramControlSetableInteger = MibScalar((1, 3, 6, 1, 4, 1, 2, 6, 12, 1, 1, 5, 1), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sm6kProgramControlSetableInteger.setStatus('mandatory')
sm6kProgramControlSetableCounter = MibScalar((1, 3, 6, 1, 4, 1, 2, 6, 12, 1, 1, 5, 2), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sm6kProgramControlSetableCounter.setStatus('mandatory')
sm6kProgramControlSetableGauge = MibScalar((1, 3, 6, 1, 4, 1, 2, 6, 12, 1, 1, 5, 3), Gauge32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sm6kProgramControlSetableGauge.setStatus('mandatory')
sm6kProgramControlSetableIpAddress = MibScalar((1, 3, 6, 1, 4, 1, 2, 6, 12, 1, 1, 5, 4), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sm6kProgramControlSetableIpAddress.setStatus('mandatory')
sm6kProgramControlSetableTimeTicks = MibScalar((1, 3, 6, 1, 4, 1, 2, 6, 12, 1, 1, 5, 5), TimeTicks()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sm6kProgramControlSetableTimeTicks.setStatus('mandatory')
sm6kProgramControlSetableOctetString = MibScalar((1, 3, 6, 1, 4, 1, 2, 6, 12, 1, 1, 5, 6), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sm6kProgramControlSetableOctetString.setStatus('mandatory')
sm6kResourceUsageTable = MibTable((1, 3, 6, 1, 4, 1, 2, 6, 12, 1, 2, 1), )
if mibBuilder.loadTexts: sm6kResourceUsageTable.setStatus('mandatory')
sm6kResourceUsageEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2, 6, 12, 1, 2, 1, 1), ).setIndexNames((0, "SYSMON6K-MIB", "sm6kResourceUsageName"))
if mibBuilder.loadTexts: sm6kResourceUsageEntry.setStatus('mandatory')
sm6kResourceUsageName = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 1, 2, 1, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kResourceUsageName.setStatus('mandatory')
sm6kResourceUsageUserTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 1, 2, 1, 1, 2), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kResourceUsageUserTime.setStatus('mandatory')
sm6kResourceUsageSystemTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 1, 2, 1, 1, 3), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kResourceUsageSystemTime.setStatus('mandatory')
sm6kResourceUsageTotalTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 1, 2, 1, 1, 4), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kResourceUsageTotalTime.setStatus('mandatory')
sm6kResourceUsageMaxrss = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 1, 2, 1, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kResourceUsageMaxrss.setStatus('mandatory')
sm6kResourceUsageIxrss = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 1, 2, 1, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kResourceUsageIxrss.setStatus('mandatory')
sm6kResourceUsageIdrss = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 1, 2, 1, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kResourceUsageIdrss.setStatus('mandatory')
sm6kResourceUsageIsrss = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 1, 2, 1, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kResourceUsageIsrss.setStatus('mandatory')
sm6kResourceUsageMinflt = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 1, 2, 1, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kResourceUsageMinflt.setStatus('mandatory')
sm6kResourceUsageMajflt = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 1, 2, 1, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kResourceUsageMajflt.setStatus('mandatory')
sm6kResourceUsageNSwap = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 1, 2, 1, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kResourceUsageNSwap.setStatus('mandatory')
sm6kResourceUsageInBlock = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 1, 2, 1, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kResourceUsageInBlock.setStatus('mandatory')
sm6kResourceUsageOutBlock = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 1, 2, 1, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kResourceUsageOutBlock.setStatus('mandatory')
sm6kResourceUsageMsgsnd = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 1, 2, 1, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kResourceUsageMsgsnd.setStatus('mandatory')
sm6kResourceUsageMsgrcv = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 1, 2, 1, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kResourceUsageMsgrcv.setStatus('mandatory')
sm6kResourceUsageNSignals = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 1, 2, 1, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kResourceUsageNSignals.setStatus('mandatory')
sm6kResourceUsageVcsw = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 1, 2, 1, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kResourceUsageVcsw.setStatus('mandatory')
sm6kResourceUsageIcsw = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 1, 2, 1, 1, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kResourceUsageIcsw.setStatus('mandatory')
sm6kProgramMessagesTable = MibTable((1, 3, 6, 1, 4, 1, 2, 6, 12, 1, 3, 1), )
if mibBuilder.loadTexts: sm6kProgramMessagesTable.setStatus('mandatory')
sm6kProgramMessagesEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2, 6, 12, 1, 3, 1, 1), ).setIndexNames((0, "SYSMON6K-MIB", "sm6kProgramMessagesRowNumber"))
if mibBuilder.loadTexts: sm6kProgramMessagesEntry.setStatus('mandatory')
sm6kProgramMessagesRowNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 1, 3, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kProgramMessagesRowNumber.setStatus('mandatory')
sm6kProgramMessagesTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 1, 3, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kProgramMessagesTime.setStatus('mandatory')
sm6kProgramMessagesText = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 1, 3, 1, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kProgramMessagesText.setStatus('mandatory')
sm6kProgramMessagesTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 1, 3, 1, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kProgramMessagesTimeStamp.setStatus('mandatory')
sm6kSystemDescription = MibIdentifier((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 1))
sm6kSystemConfiguration = MibIdentifier((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 2))
sm6kSystemDevice = MibIdentifier((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 3))
sm6kSystemPagingInformation = MibIdentifier((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 4))
sm6kSystemFileSystem = MibIdentifier((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 5))
sm6kSystemSubSystems = MibIdentifier((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 6))
sm6kSystemProcess = MibIdentifier((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 7))
sm6kSystemUsers = MibIdentifier((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 8))
sm6kSystemUtilization = MibIdentifier((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 9))
sm6kSystemReboot = MibIdentifier((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 10))
sm6kSystemMiscellaneous = MibIdentifier((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 11))
sm6kSystemNodeName = MibScalar((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemNodeName.setStatus('mandatory')
sm6kSystemSysName = MibScalar((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemSysName.setStatus('mandatory')
sm6kSystemVersion = MibScalar((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemVersion.setStatus('mandatory')
sm6kSystemRelease = MibScalar((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemRelease.setStatus('mandatory')
sm6kSystemMachine = MibScalar((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemMachine.setStatus('mandatory')
sm6kSystemFreePagingSpace = MibScalar((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 4, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemFreePagingSpace.setStatus('mandatory')
sm6kSystemFreePagingSpaceUntilKill = MibScalar((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 4, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemFreePagingSpaceUntilKill.setStatus('mandatory')
sm6kSystemFreePagingSpaceUntilKillPercent = MibScalar((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 4, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemFreePagingSpaceUntilKillPercent.setStatus('mandatory')
sm6kSystemPagingSpace = MibIdentifier((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 4, 4))
sm6kSystemPagingStatistics = MibIdentifier((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 4, 5))
sm6kSystemPagingSpaceCount = MibScalar((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 4, 4, 1), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemPagingSpaceCount.setStatus('mandatory')
sm6kSystemPagingSpaceTable = MibTable((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 4, 4, 2), )
if mibBuilder.loadTexts: sm6kSystemPagingSpaceTable.setStatus('mandatory')
sm6kSystemPagingSpaceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 4, 4, 2, 1), ).setIndexNames((0, "SYSMON6K-MIB", "sm6kSystemPagingSpaceName"))
if mibBuilder.loadTexts: sm6kSystemPagingSpaceEntry.setStatus('mandatory')
sm6kSystemPagingSpaceName = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 4, 4, 2, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemPagingSpaceName.setStatus('mandatory')
sm6kSystemPagingSpacePhysicalVolume = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 4, 4, 2, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemPagingSpacePhysicalVolume.setStatus('mandatory')
sm6kSystemPagingSpaceVolumeGroup = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 4, 4, 2, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemPagingSpaceVolumeGroup.setStatus('mandatory')
sm6kSystemPagingSpaceSize = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 4, 4, 2, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemPagingSpaceSize.setStatus('mandatory')
sm6kSystemPagingSpacePercentUsed = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 4, 4, 2, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemPagingSpacePercentUsed.setStatus('mandatory')
sm6kSystemPagingSpaceActive = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 4, 4, 2, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemPagingSpaceActive.setStatus('mandatory')
sm6kSystemPagingSpaceAuto = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 4, 4, 2, 1, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemPagingSpaceAuto.setStatus('mandatory')
sm6kSystemPagingSpaceType = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 4, 4, 2, 1, 8), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemPagingSpaceType.setStatus('mandatory')
sm6kSystemPagingStatisticsPollingInterval = MibScalar((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 4, 5, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemPagingStatisticsPollingInterval.setStatus('mandatory')
sm6kSystemPagingStatisticsTable = MibTable((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 4, 5, 2), )
if mibBuilder.loadTexts: sm6kSystemPagingStatisticsTable.setStatus('mandatory')
sm6kSystemPagingStatisticsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 4, 5, 2, 1), ).setIndexNames((0, "SYSMON6K-MIB", "sm6kSystemPagingStatisticsName"))
if mibBuilder.loadTexts: sm6kSystemPagingStatisticsEntry.setStatus('mandatory')
sm6kSystemPagingStatisticsName = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 4, 5, 2, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemPagingStatisticsName.setStatus('mandatory')
sm6kSystemPagingStatisticsIntervalStartTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 4, 5, 2, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemPagingStatisticsIntervalStartTime.setStatus('mandatory')
sm6kSystemPagingStatisticsIntervalLength = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 4, 5, 2, 1, 3), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemPagingStatisticsIntervalLength.setStatus('mandatory')
sm6kSystemPagingStatisticsPageFaults = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 4, 5, 2, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemPagingStatisticsPageFaults.setStatus('mandatory')
sm6kSystemPagingStatisticsPageReclaims = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 4, 5, 2, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemPagingStatisticsPageReclaims.setStatus('mandatory')
sm6kSystemPagingStatisticsPagesPagedIn = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 4, 5, 2, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemPagingStatisticsPagesPagedIn.setStatus('mandatory')
sm6kSystemPagingStatisticsPagesPagedOut = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 4, 5, 2, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemPagingStatisticsPagesPagedOut.setStatus('mandatory')
sm6kSystemPagingStatisticsPageInsFromPagingSpace = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 4, 5, 2, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemPagingStatisticsPageInsFromPagingSpace.setStatus('mandatory')
sm6kSystemPagingStatisticsPageOutsFromPagingSpace = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 4, 5, 2, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemPagingStatisticsPageOutsFromPagingSpace.setStatus('mandatory')
sm6kSystemPagingStatisticsStartIOs = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 4, 5, 2, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemPagingStatisticsStartIOs.setStatus('mandatory')
sm6kSystemPagingStatisticsDoneIOs = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 4, 5, 2, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemPagingStatisticsDoneIOs.setStatus('mandatory')
sm6kSystemPagingStatisticsPageScans = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 4, 5, 2, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemPagingStatisticsPageScans.setStatus('mandatory')
sm6kSystemPagingStatisticsScanClockCycles = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 4, 5, 2, 1, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemPagingStatisticsScanClockCycles.setStatus('mandatory')
sm6kSystemPagingStatisticsPageSteals = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 4, 5, 2, 1, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemPagingStatisticsPageSteals.setStatus('mandatory')
sm6kSystemPagingStatisticsFreeFrameWaits = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 4, 5, 2, 1, 15), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemPagingStatisticsFreeFrameWaits.setStatus('mandatory')
sm6kSystemPagingStatisticsExtendXPTWaits = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 4, 5, 2, 1, 16), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemPagingStatisticsExtendXPTWaits.setStatus('mandatory')
sm6kSystemPagingStatisticsPendingIOWaits = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 4, 5, 2, 1, 17), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemPagingStatisticsPendingIOWaits.setStatus('mandatory')
sm6kSystemPagingStatisticsPageFaultsMinimum = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 4, 5, 2, 1, 18), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemPagingStatisticsPageFaultsMinimum.setStatus('mandatory')
sm6kSystemPagingStatisticsPageReclaimsMinimum = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 4, 5, 2, 1, 19), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemPagingStatisticsPageReclaimsMinimum.setStatus('mandatory')
sm6kSystemPagingStatisticsPagesPagedInMinimum = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 4, 5, 2, 1, 20), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemPagingStatisticsPagesPagedInMinimum.setStatus('mandatory')
sm6kSystemPagingStatisticsPagesPagedOutMinimum = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 4, 5, 2, 1, 21), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemPagingStatisticsPagesPagedOutMinimum.setStatus('mandatory')
sm6kSystemPagingStatisticsPageInsFromPagingSpaceMinimum = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 4, 5, 2, 1, 22), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemPagingStatisticsPageInsFromPagingSpaceMinimum.setStatus('mandatory')
sm6kSystemPagingStatisticsPageOutsFromPagingSpaceMinimum = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 4, 5, 2, 1, 23), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemPagingStatisticsPageOutsFromPagingSpaceMinimum.setStatus('mandatory')
sm6kSystemPagingStatisticsStartIOsMinimum = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 4, 5, 2, 1, 24), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemPagingStatisticsStartIOsMinimum.setStatus('mandatory')
sm6kSystemPagingStatisticsDoneIOsMinimum = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 4, 5, 2, 1, 25), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemPagingStatisticsDoneIOsMinimum.setStatus('mandatory')
sm6kSystemPagingStatisticsPageScansMinimum = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 4, 5, 2, 1, 26), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemPagingStatisticsPageScansMinimum.setStatus('mandatory')
sm6kSystemPagingStatisticsScanClockCyclesMinimum = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 4, 5, 2, 1, 27), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemPagingStatisticsScanClockCyclesMinimum.setStatus('mandatory')
sm6kSystemPagingStatisticsPageStealsMinimum = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 4, 5, 2, 1, 28), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemPagingStatisticsPageStealsMinimum.setStatus('mandatory')
sm6kSystemPagingStatisticsFreeFrameWaitsMinimum = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 4, 5, 2, 1, 29), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemPagingStatisticsFreeFrameWaitsMinimum.setStatus('mandatory')
sm6kSystemPagingStatisticsExtendXPTWaitsMinimum = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 4, 5, 2, 1, 30), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemPagingStatisticsExtendXPTWaitsMinimum.setStatus('mandatory')
sm6kSystemPagingStatisticsPendingIOWaitsMinimum = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 4, 5, 2, 1, 31), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemPagingStatisticsPendingIOWaitsMinimum.setStatus('mandatory')
sm6kSystemPagingStatisticsPageFaultsMaximum = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 4, 5, 2, 1, 32), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemPagingStatisticsPageFaultsMaximum.setStatus('mandatory')
sm6kSystemPagingStatisticsPageReclaimsMaximum = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 4, 5, 2, 1, 33), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemPagingStatisticsPageReclaimsMaximum.setStatus('mandatory')
sm6kSystemPagingStatisticsPagesPagedInMaximum = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 4, 5, 2, 1, 34), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemPagingStatisticsPagesPagedInMaximum.setStatus('mandatory')
sm6kSystemPagingStatisticsPagesPagedOutMaximum = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 4, 5, 2, 1, 35), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemPagingStatisticsPagesPagedOutMaximum.setStatus('mandatory')
sm6kSystemPagingStatisticsPageInsFromPagingSpaceMaximum = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 4, 5, 2, 1, 36), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemPagingStatisticsPageInsFromPagingSpaceMaximum.setStatus('mandatory')
sm6kSystemPagingStatisticsPageOutsFromPagingSpaceMaximum = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 4, 5, 2, 1, 37), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemPagingStatisticsPageOutsFromPagingSpaceMaximum.setStatus('mandatory')
sm6kSystemPagingStatisticsStartIOsMaximum = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 4, 5, 2, 1, 38), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemPagingStatisticsStartIOsMaximum.setStatus('mandatory')
sm6kSystemPagingStatisticsDoneIOsMaximum = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 4, 5, 2, 1, 39), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemPagingStatisticsDoneIOsMaximum.setStatus('mandatory')
sm6kSystemPagingStatisticsPageScansMaximum = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 4, 5, 2, 1, 40), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemPagingStatisticsPageScansMaximum.setStatus('mandatory')
sm6kSystemPagingStatisticsScanClockCyclesMaximum = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 4, 5, 2, 1, 41), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemPagingStatisticsScanClockCyclesMaximum.setStatus('mandatory')
sm6kSystemPagingStatisticsPageStealsMaximum = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 4, 5, 2, 1, 42), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemPagingStatisticsPageStealsMaximum.setStatus('mandatory')
sm6kSystemPagingStatisticsFreeFrameWaitsMaximum = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 4, 5, 2, 1, 43), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemPagingStatisticsFreeFrameWaitsMaximum.setStatus('mandatory')
sm6kSystemPagingStatisticsExtendXPTWaitsMaximum = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 4, 5, 2, 1, 44), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemPagingStatisticsExtendXPTWaitsMaximum.setStatus('mandatory')
sm6kSystemPagingStatisticsPendingIOWaitsMaximum = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 4, 5, 2, 1, 45), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemPagingStatisticsPendingIOWaitsMaximum.setStatus('mandatory')
sm6kSystemBufferPoolMark = MibScalar((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 2, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemBufferPoolMark.setStatus('mandatory')
sm6kSystemMaxMbufs = MibScalar((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 2, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemMaxMbufs.setStatus('mandatory')
sm6kSystemMaxUserProcesses = MibScalar((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 2, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemMaxUserProcesses.setStatus('mandatory')
sm6kSystemMaxSystemProcesses = MibScalar((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 2, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemMaxSystemProcesses.setStatus('mandatory')
sm6kSystemRecordLockTableSize = MibScalar((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 2, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemRecordLockTableSize.setStatus('mandatory')
sm6kSystemOpenFileTableSize = MibScalar((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 2, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemOpenFileTableSize.setStatus('mandatory')
sm6kSystemCBlockArraySize = MibScalar((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 2, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemCBlockArraySize.setStatus('mandatory')
sm6kSystemDiskIOHistory = MibScalar((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 2, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemDiskIOHistory.setStatus('mandatory')
sm6kSystemAutomaticBootAfterHalt = MibScalar((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 2, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemAutomaticBootAfterHalt.setStatus('mandatory')
sm6kSystemMemScrub = MibScalar((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 2, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemMemScrub.setStatus('mandatory')
sm6kSystemLeastPriv = MibScalar((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 2, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemLeastPriv.setStatus('mandatory')
sm6kSystemMaxPout = MibScalar((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 2, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemMaxPout.setStatus('mandatory')
sm6kSystemMinPout = MibScalar((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 2, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemMinPout.setStatus('mandatory')
sm6kSystemPageSize = MibScalar((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 2, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemPageSize.setStatus('mandatory')
sm6kSystemProcessMaxOpenFiles = MibScalar((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 2, 15), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemProcessMaxOpenFiles.setStatus('mandatory')
sm6kSystemProcessMaxOpenStreams = MibScalar((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 2, 16), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemProcessMaxOpenStreams.setStatus('mandatory')
sm6kSystemProcessDescriptorTableSize = MibScalar((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 2, 17), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemProcessDescriptorTableSize.setStatus('mandatory')
sm6kSystemDeviceList = MibIdentifier((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 3, 1))
sm6kSystemDeviceTokenRing = MibIdentifier((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 3, 2))
sm6kSystemDeviceEthernet = MibIdentifier((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 3, 3))
sm6kSystemDeviceX25 = MibIdentifier((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 3, 4))
sm6kSystemDeviceListInstalled = MibScalar((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 3, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemDeviceListInstalled.setStatus('mandatory')
sm6kSystemDeviceListTable = MibTable((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 3, 1, 2), )
if mibBuilder.loadTexts: sm6kSystemDeviceListTable.setStatus('mandatory')
sm6kSystemDeviceListEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 3, 1, 2, 1), ).setIndexNames((0, "SYSMON6K-MIB", "sm6kSystemDeviceListName"))
if mibBuilder.loadTexts: sm6kSystemDeviceListEntry.setStatus('mandatory')
sm6kSystemDeviceListName = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 3, 1, 2, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemDeviceListName.setStatus('mandatory')
sm6kSystemDeviceListDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 3, 1, 2, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemDeviceListDescription.setStatus('mandatory')
sm6kSystemDeviceListLocation = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 3, 1, 2, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemDeviceListLocation.setStatus('mandatory')
sm6kSystemDeviceListVPD = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 3, 1, 2, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemDeviceListVPD.setStatus('mandatory')
sm6kSystemDeviceListAttributes = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 3, 1, 2, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemDeviceListAttributes.setStatus('mandatory')
sm6kSystemDeviceListDiagnostics = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 3, 1, 2, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemDeviceListDiagnostics.setStatus('mandatory')
sm6kSystemDeviceTokenRingInstalled = MibScalar((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 3, 2, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemDeviceTokenRingInstalled.setStatus('mandatory')
sm6kSystemDeviceTokenRingTable = MibTable((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 3, 2, 2), )
if mibBuilder.loadTexts: sm6kSystemDeviceTokenRingTable.setStatus('mandatory')
sm6kSystemDeviceTokenRingEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 3, 2, 2, 1), ).setIndexNames((0, "SYSMON6K-MIB", "sm6kSystemDeviceTokenRingNumber"))
if mibBuilder.loadTexts: sm6kSystemDeviceTokenRingEntry.setStatus('mandatory')
sm6kSystemDeviceTokenRingNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 3, 2, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemDeviceTokenRingNumber.setStatus('mandatory')
sm6kSystemDeviceTokenRingHardwareAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 3, 2, 2, 1, 2), PhysAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemDeviceTokenRingHardwareAddress.setStatus('mandatory')
sm6kSystemDeviceTokenRingCurrentAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 3, 2, 2, 1, 3), PhysAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemDeviceTokenRingCurrentAddress.setStatus('mandatory')
sm6kSystemDeviceTokenRingReceiveDataOffset = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 3, 2, 2, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemDeviceTokenRingReceiveDataOffset.setStatus('mandatory')
sm6kSystemDeviceTokenRingBroadwrap = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 3, 2, 2, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("false", 1), ("true", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemDeviceTokenRingBroadwrap.setStatus('mandatory')
sm6kSystemDeviceTokenRingTxByteMcnt = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 3, 2, 2, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemDeviceTokenRingTxByteMcnt.setStatus('mandatory')
sm6kSystemDeviceTokenRingTxByteLcnt = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 3, 2, 2, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemDeviceTokenRingTxByteLcnt.setStatus('mandatory')
sm6kSystemDeviceTokenRingRxByteMcnt = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 3, 2, 2, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemDeviceTokenRingRxByteMcnt.setStatus('mandatory')
sm6kSystemDeviceTokenRingRxByteLcnt = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 3, 2, 2, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemDeviceTokenRingRxByteLcnt.setStatus('mandatory')
sm6kSystemDeviceTokenRingTxFrameMcnt = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 3, 2, 2, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemDeviceTokenRingTxFrameMcnt.setStatus('mandatory')
sm6kSystemDeviceTokenRingTxFrameLcnt = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 3, 2, 2, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemDeviceTokenRingTxFrameLcnt.setStatus('mandatory')
sm6kSystemDeviceTokenRingRxFrameMcnt = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 3, 2, 2, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemDeviceTokenRingRxFrameMcnt.setStatus('mandatory')
sm6kSystemDeviceTokenRingRxFrameLcnt = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 3, 2, 2, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemDeviceTokenRingRxFrameLcnt.setStatus('mandatory')
sm6kSystemDeviceTokenRingTxErrCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 3, 2, 2, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemDeviceTokenRingTxErrCnt.setStatus('mandatory')
sm6kSystemDeviceTokenRingRxErrCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 3, 2, 2, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemDeviceTokenRingRxErrCnt.setStatus('mandatory')
sm6kSystemDeviceTokenRingNidTblHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 3, 2, 2, 1, 16), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemDeviceTokenRingNidTblHigh.setStatus('mandatory')
sm6kSystemDeviceTokenRingTxQueHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 3, 2, 2, 1, 17), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemDeviceTokenRingTxQueHigh.setStatus('mandatory')
sm6kSystemDeviceTokenRingRxQueHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 3, 2, 2, 1, 18), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemDeviceTokenRingRxQueHigh.setStatus('mandatory')
sm6kSystemDeviceTokenRingStaQueHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 3, 2, 2, 1, 19), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemDeviceTokenRingStaQueHigh.setStatus('mandatory')
sm6kSystemDeviceTokenRingIntrLost = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 3, 2, 2, 1, 20), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemDeviceTokenRingIntrLost.setStatus('mandatory')
sm6kSystemDeviceTokenRingWdtLost = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 3, 2, 2, 1, 21), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemDeviceTokenRingWdtLost.setStatus('mandatory')
sm6kSystemDeviceTokenRingTimoLost = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 3, 2, 2, 1, 22), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemDeviceTokenRingTimoLost.setStatus('mandatory')
sm6kSystemDeviceTokenRingStaQueOverflow = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 3, 2, 2, 1, 23), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemDeviceTokenRingStaQueOverflow.setStatus('mandatory')
sm6kSystemDeviceTokenRingRxQueOverflow = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 3, 2, 2, 1, 24), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemDeviceTokenRingRxQueOverflow.setStatus('mandatory')
sm6kSystemDeviceTokenRingRxQueNoMbuf = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 3, 2, 2, 1, 25), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemDeviceTokenRingRxQueNoMbuf.setStatus('mandatory')
sm6kSystemDeviceTokenRingRxQueNoMbufExt = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 3, 2, 2, 1, 26), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemDeviceTokenRingRxQueNoMbufExt.setStatus('mandatory')
sm6kSystemDeviceTokenRingTxIntrCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 3, 2, 2, 1, 27), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemDeviceTokenRingTxIntrCnt.setStatus('mandatory')
sm6kSystemDeviceTokenRingRxIntrCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 3, 2, 2, 1, 28), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemDeviceTokenRingRxIntrCnt.setStatus('mandatory')
sm6kSystemDeviceTokenRingPktRejCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 3, 2, 2, 1, 29), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemDeviceTokenRingPktRejCnt.setStatus('mandatory')
sm6kSystemDeviceTokenRingPktAccCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 3, 2, 2, 1, 30), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemDeviceTokenRingPktAccCnt.setStatus('mandatory')
sm6kSystemDeviceTokenRingPktTxCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 3, 2, 2, 1, 31), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemDeviceTokenRingPktTxCnt.setStatus('mandatory')
sm6kSystemDeviceTokenRingOvfloPktCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 3, 2, 2, 1, 32), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemDeviceTokenRingOvfloPktCnt.setStatus('mandatory')
sm6kSystemDeviceTokenRingPktTxErrCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 3, 2, 2, 1, 33), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemDeviceTokenRingPktTxErrCnt.setStatus('mandatory')
sm6kSystemDeviceTokenRingSpeed = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 3, 2, 2, 1, 34), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemDeviceTokenRingSpeed.setStatus('mandatory')
sm6kSystemDeviceTokenRingVPD = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 3, 2, 2, 1, 35), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemDeviceTokenRingVPD.setStatus('mandatory')
sm6kSystemDeviceTokenRingAdapPhysAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 3, 2, 2, 1, 36), PhysAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemDeviceTokenRingAdapPhysAddr.setStatus('mandatory')
sm6kSystemDeviceTokenRingUpstreamNodeAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 3, 2, 2, 1, 37), PhysAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemDeviceTokenRingUpstreamNodeAddr.setStatus('mandatory')
sm6kSystemDeviceTokenRingUpstreamPhysAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 3, 2, 2, 1, 38), PhysAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemDeviceTokenRingUpstreamPhysAddr.setStatus('mandatory')
sm6kSystemDeviceTokenRingLastPollAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 3, 2, 2, 1, 39), PhysAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemDeviceTokenRingLastPollAddr.setStatus('mandatory')
sm6kSystemDeviceTokenRingAuthorEnv = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 3, 2, 2, 1, 40), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemDeviceTokenRingAuthorEnv.setStatus('mandatory')
sm6kSystemDeviceTokenRingTxAccessPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 3, 2, 2, 1, 41), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemDeviceTokenRingTxAccessPriority.setStatus('mandatory')
sm6kSystemDeviceTokenRingSrcClassAuthor = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 3, 2, 2, 1, 42), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemDeviceTokenRingSrcClassAuthor.setStatus('mandatory')
sm6kSystemDeviceTokenRingLastAttenCode = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 3, 2, 2, 1, 43), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemDeviceTokenRingLastAttenCode.setStatus('mandatory')
sm6kSystemDeviceTokenRingLastSrcAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 3, 2, 2, 1, 44), PhysAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemDeviceTokenRingLastSrcAddr.setStatus('mandatory')
sm6kSystemDeviceTokenRingLastBeaconType = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 3, 2, 2, 1, 45), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemDeviceTokenRingLastBeaconType.setStatus('mandatory')
sm6kSystemDeviceTokenRingLastMajorVector = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 3, 2, 2, 1, 46), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemDeviceTokenRingLastMajorVector.setStatus('mandatory')
sm6kSystemDeviceTokenRingRingStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 3, 2, 2, 1, 47), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemDeviceTokenRingRingStatus.setStatus('mandatory')
sm6kSystemDeviceTokenRingSoftErrorTimerVal = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 3, 2, 2, 1, 48), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemDeviceTokenRingSoftErrorTimerVal.setStatus('mandatory')
sm6kSystemDeviceTokenRingFrontEndTimerVal = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 3, 2, 2, 1, 49), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemDeviceTokenRingFrontEndTimerVal.setStatus('mandatory')
sm6kSystemDeviceTokenRingMonitorErrorCode = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 3, 2, 2, 1, 50), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemDeviceTokenRingMonitorErrorCode.setStatus('mandatory')
sm6kSystemDeviceTokenRingBeaconTxType = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 3, 2, 2, 1, 51), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemDeviceTokenRingBeaconTxType.setStatus('mandatory')
sm6kSystemDeviceTokenRingBeaconRxType = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 3, 2, 2, 1, 52), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemDeviceTokenRingBeaconRxType.setStatus('mandatory')
sm6kSystemDeviceTokenRingFrameCorrSave = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 3, 2, 2, 1, 53), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemDeviceTokenRingFrameCorrSave.setStatus('mandatory')
sm6kSystemDeviceTokenRingBeaconStationNAUN = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 3, 2, 2, 1, 54), PhysAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemDeviceTokenRingBeaconStationNAUN.setStatus('mandatory')
sm6kSystemDeviceTokenRingBeaconStationPhysAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 3, 2, 2, 1, 55), PhysAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemDeviceTokenRingBeaconStationPhysAddr.setStatus('mandatory')
sm6kSystemDeviceTokenRingClear = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 3, 2, 2, 1, 56), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("normal", 1), ("clear", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sm6kSystemDeviceTokenRingClear.setStatus('mandatory')
sm6kSystemDeviceEthernetInstalled = MibScalar((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 3, 3, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemDeviceEthernetInstalled.setStatus('mandatory')
sm6kSystemDeviceEthernetTable = MibTable((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 3, 3, 2), )
if mibBuilder.loadTexts: sm6kSystemDeviceEthernetTable.setStatus('mandatory')
sm6kSystemDeviceEthernetEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 3, 3, 2, 1), ).setIndexNames((0, "SYSMON6K-MIB", "sm6kSystemDeviceEthernetNumber"))
if mibBuilder.loadTexts: sm6kSystemDeviceEthernetEntry.setStatus('mandatory')
sm6kSystemDeviceEthernetNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 3, 3, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemDeviceEthernetNumber.setStatus('mandatory')
sm6kSystemDeviceEthernetHardwareAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 3, 3, 2, 1, 2), PhysAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemDeviceEthernetHardwareAddress.setStatus('mandatory')
sm6kSystemDeviceEthernetCurrentAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 3, 3, 2, 1, 3), PhysAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemDeviceEthernetCurrentAddress.setStatus('mandatory')
sm6kSystemDeviceEthernetReceiveDataOffset = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 3, 3, 2, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemDeviceEthernetReceiveDataOffset.setStatus('mandatory')
sm6kSystemDeviceEthernetBroadwrap = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 3, 3, 2, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("false", 1), ("true", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemDeviceEthernetBroadwrap.setStatus('mandatory')
sm6kSystemDeviceEthernetTxByteMcnt = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 3, 3, 2, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemDeviceEthernetTxByteMcnt.setStatus('mandatory')
sm6kSystemDeviceEthernetTxByteLcnt = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 3, 3, 2, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemDeviceEthernetTxByteLcnt.setStatus('mandatory')
sm6kSystemDeviceEthernetRxByteMcnt = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 3, 3, 2, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemDeviceEthernetRxByteMcnt.setStatus('mandatory')
sm6kSystemDeviceEthernetRxByteLcnt = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 3, 3, 2, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemDeviceEthernetRxByteLcnt.setStatus('mandatory')
sm6kSystemDeviceEthernetTxFrameMcnt = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 3, 3, 2, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemDeviceEthernetTxFrameMcnt.setStatus('mandatory')
sm6kSystemDeviceEthernetTxFrameLcnt = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 3, 3, 2, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemDeviceEthernetTxFrameLcnt.setStatus('mandatory')
sm6kSystemDeviceEthernetRxFrameMcnt = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 3, 3, 2, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemDeviceEthernetRxFrameMcnt.setStatus('mandatory')
sm6kSystemDeviceEthernetRxFrameLcnt = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 3, 3, 2, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemDeviceEthernetRxFrameLcnt.setStatus('mandatory')
sm6kSystemDeviceEthernetTxErrCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 3, 3, 2, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemDeviceEthernetTxErrCnt.setStatus('mandatory')
sm6kSystemDeviceEthernetRxErrCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 3, 3, 2, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemDeviceEthernetRxErrCnt.setStatus('mandatory')
sm6kSystemDeviceEthernetNidTblHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 3, 3, 2, 1, 16), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemDeviceEthernetNidTblHigh.setStatus('mandatory')
sm6kSystemDeviceEthernetTxQueHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 3, 3, 2, 1, 17), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemDeviceEthernetTxQueHigh.setStatus('mandatory')
sm6kSystemDeviceEthernetRxQueHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 3, 3, 2, 1, 18), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemDeviceEthernetRxQueHigh.setStatus('mandatory')
sm6kSystemDeviceEthernetStaQueHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 3, 3, 2, 1, 19), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemDeviceEthernetStaQueHigh.setStatus('mandatory')
sm6kSystemDeviceEthernetIntrLost = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 3, 3, 2, 1, 20), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemDeviceEthernetIntrLost.setStatus('mandatory')
sm6kSystemDeviceEthernetWdtLost = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 3, 3, 2, 1, 21), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemDeviceEthernetWdtLost.setStatus('mandatory')
sm6kSystemDeviceEthernetTimoLost = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 3, 3, 2, 1, 22), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemDeviceEthernetTimoLost.setStatus('mandatory')
sm6kSystemDeviceEthernetStaQueOverflow = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 3, 3, 2, 1, 23), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemDeviceEthernetStaQueOverflow.setStatus('mandatory')
sm6kSystemDeviceEthernetRxQueOverflow = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 3, 3, 2, 1, 24), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemDeviceEthernetRxQueOverflow.setStatus('mandatory')
sm6kSystemDeviceEthernetRxQueNoMbuf = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 3, 3, 2, 1, 25), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemDeviceEthernetRxQueNoMbuf.setStatus('mandatory')
sm6kSystemDeviceEthernetRxQueNoMbufExt = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 3, 3, 2, 1, 26), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemDeviceEthernetRxQueNoMbufExt.setStatus('mandatory')
sm6kSystemDeviceEthernetTxIntrCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 3, 3, 2, 1, 27), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemDeviceEthernetTxIntrCnt.setStatus('mandatory')
sm6kSystemDeviceEthernetRxIntrCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 3, 3, 2, 1, 28), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemDeviceEthernetRxIntrCnt.setStatus('mandatory')
sm6kSystemDeviceEthernetCRCErr = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 3, 3, 2, 1, 29), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemDeviceEthernetCRCErr.setStatus('mandatory')
sm6kSystemDeviceEthernetAlignErr = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 3, 3, 2, 1, 30), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemDeviceEthernetAlignErr.setStatus('mandatory')
sm6kSystemDeviceEthernetOverrun = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 3, 3, 2, 1, 31), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemDeviceEthernetOverrun.setStatus('mandatory')
sm6kSystemDeviceEthernetTooShort = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 3, 3, 2, 1, 32), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemDeviceEthernetTooShort.setStatus('mandatory')
sm6kSystemDeviceEthernetTooLong = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 3, 3, 2, 1, 33), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemDeviceEthernetTooLong.setStatus('mandatory')
sm6kSystemDeviceEthernetNoResources = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 3, 3, 2, 1, 34), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemDeviceEthernetNoResources.setStatus('mandatory')
sm6kSystemDeviceEthernetPktDiscard = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 3, 3, 2, 1, 35), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemDeviceEthernetPktDiscard.setStatus('mandatory')
sm6kSystemDeviceEthernetMaxCollision = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 3, 3, 2, 1, 36), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemDeviceEthernetMaxCollision.setStatus('mandatory')
sm6kSystemDeviceEthernetLateCollision = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 3, 3, 2, 1, 37), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemDeviceEthernetLateCollision.setStatus('mandatory')
sm6kSystemDeviceEthernetCarrierLost = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 3, 3, 2, 1, 38), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemDeviceEthernetCarrierLost.setStatus('mandatory')
sm6kSystemDeviceEthernetUnderrun = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 3, 3, 2, 1, 39), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemDeviceEthernetUnderrun.setStatus('mandatory')
sm6kSystemDeviceEthernetCTSLost = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 3, 3, 2, 1, 40), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemDeviceEthernetCTSLost.setStatus('mandatory')
sm6kSystemDeviceEthernetTxTimeouts = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 3, 3, 2, 1, 41), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemDeviceEthernetTxTimeouts.setStatus('mandatory')
sm6kSystemDeviceEthernetParErrCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 3, 3, 2, 1, 42), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemDeviceEthernetParErrCnt.setStatus('mandatory')
sm6kSystemDeviceEthernetDiagOverflow = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 3, 3, 2, 1, 43), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemDeviceEthernetDiagOverflow.setStatus('mandatory')
sm6kSystemDeviceEthernetExecOverflow = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 3, 3, 2, 1, 44), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemDeviceEthernetExecOverflow.setStatus('mandatory')
sm6kSystemDeviceEthernetExecCmdErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 3, 3, 2, 1, 45), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemDeviceEthernetExecCmdErrors.setStatus('mandatory')
sm6kSystemDeviceEthernetHostRecEol = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 3, 3, 2, 1, 46), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemDeviceEthernetHostRecEol.setStatus('mandatory')
sm6kSystemDeviceEthernetAdptRecEol = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 3, 3, 2, 1, 47), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemDeviceEthernetAdptRecEol.setStatus('mandatory')
sm6kSystemDeviceEthernetHostRecPkt = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 3, 3, 2, 1, 48), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemDeviceEthernetHostRecPkt.setStatus('mandatory')
sm6kSystemDeviceEthernetAdptRecPkt = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 3, 3, 2, 1, 49), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemDeviceEthernetAdptRecPkt.setStatus('mandatory')
sm6kSystemDeviceEthernetStartRxCmd = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 3, 3, 2, 1, 50), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemDeviceEthernetStartRxCmd.setStatus('mandatory')
sm6kSystemDeviceEthernetStartRxDmaTimeouts = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 3, 3, 2, 1, 51), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemDeviceEthernetStartRxDmaTimeouts.setStatus('mandatory')
sm6kSystemDeviceEthernetVPD = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 3, 3, 2, 1, 52), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemDeviceEthernetVPD.setStatus('mandatory')
sm6kSystemDeviceEthernetClear = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 3, 3, 2, 1, 53), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("normal", 1), ("clear", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sm6kSystemDeviceEthernetClear.setStatus('mandatory')
sm6kSystemDeviceX25Installed = MibScalar((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 3, 4, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemDeviceX25Installed.setStatus('mandatory')
sm6kSystemDeviceX25Table = MibTable((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 3, 4, 2), )
if mibBuilder.loadTexts: sm6kSystemDeviceX25Table.setStatus('mandatory')
sm6kSystemDeviceX25Entry = MibTableRow((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 3, 4, 2, 1), ).setIndexNames((0, "SYSMON6K-MIB", "sm6kSystemDeviceX25Number"))
if mibBuilder.loadTexts: sm6kSystemDeviceX25Entry.setStatus('mandatory')
sm6kSystemDeviceX25Number = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 3, 4, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemDeviceX25Number.setStatus('mandatory')
sm6kSystemDeviceX25Address = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 3, 4, 2, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemDeviceX25Address.setStatus('mandatory')
sm6kSystemDeviceX25SupportLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 3, 4, 2, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemDeviceX25SupportLevel.setStatus('mandatory')
sm6kSystemDeviceX25SupportedFacilities = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 3, 4, 2, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemDeviceX25SupportedFacilities.setStatus('mandatory')
sm6kSystemDeviceX25NetworkId = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 3, 4, 2, 1, 5), PhysAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemDeviceX25NetworkId.setStatus('mandatory')
sm6kSystemDeviceX25MaxTxPacketSize = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 3, 4, 2, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemDeviceX25MaxTxPacketSize.setStatus('mandatory')
sm6kSystemDeviceX25MaxRxPacketSize = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 3, 4, 2, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemDeviceX25MaxRxPacketSize.setStatus('mandatory')
sm6kSystemDeviceX25DefaultSvcTxPacketSize = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 3, 4, 2, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemDeviceX25DefaultSvcTxPacketSize.setStatus('mandatory')
sm6kSystemDeviceX25DefaultSvcRxPacketSize = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 3, 4, 2, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemDeviceX25DefaultSvcRxPacketSize.setStatus('mandatory')
sm6kSystemDeviceX25ReceiveDataTransferOffset = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 3, 4, 2, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemDeviceX25ReceiveDataTransferOffset.setStatus('mandatory')
sm6kSystemDeviceX25MemoryWindowSize = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 3, 4, 2, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemDeviceX25MemoryWindowSize.setStatus('mandatory')
sm6kSystemDeviceX25TxByteMcnt = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 3, 4, 2, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemDeviceX25TxByteMcnt.setStatus('mandatory')
sm6kSystemDeviceX25TxByteLcnt = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 3, 4, 2, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemDeviceX25TxByteLcnt.setStatus('mandatory')
sm6kSystemDeviceX25RxByteMcnt = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 3, 4, 2, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemDeviceX25RxByteMcnt.setStatus('mandatory')
sm6kSystemDeviceX25RxByteLcnt = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 3, 4, 2, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemDeviceX25RxByteLcnt.setStatus('mandatory')
sm6kSystemDeviceX25TxFrameMcnt = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 3, 4, 2, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemDeviceX25TxFrameMcnt.setStatus('mandatory')
sm6kSystemDeviceX25TxFrameLcnt = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 3, 4, 2, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemDeviceX25TxFrameLcnt.setStatus('mandatory')
sm6kSystemDeviceX25RxFrameMcnt = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 3, 4, 2, 1, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemDeviceX25RxFrameMcnt.setStatus('mandatory')
sm6kSystemDeviceX25RxFrameLcnt = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 3, 4, 2, 1, 19), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemDeviceX25RxFrameLcnt.setStatus('mandatory')
sm6kSystemDeviceX25TxErrCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 3, 4, 2, 1, 20), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemDeviceX25TxErrCnt.setStatus('mandatory')
sm6kSystemDeviceX25RxErrCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 3, 4, 2, 1, 21), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemDeviceX25RxErrCnt.setStatus('mandatory')
sm6kSystemDeviceX25NidTblHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 3, 4, 2, 1, 22), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemDeviceX25NidTblHigh.setStatus('mandatory')
sm6kSystemDeviceX25TxQueHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 3, 4, 2, 1, 23), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemDeviceX25TxQueHigh.setStatus('mandatory')
sm6kSystemDeviceX25RxQueHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 3, 4, 2, 1, 24), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemDeviceX25RxQueHigh.setStatus('mandatory')
sm6kSystemDeviceX25StaQueHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 3, 4, 2, 1, 25), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemDeviceX25StaQueHigh.setStatus('mandatory')
sm6kSystemDeviceX25IgnoredFTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 3, 4, 2, 1, 26), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemDeviceX25IgnoredFTx.setStatus('mandatory')
sm6kSystemDeviceX25RrFTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 3, 4, 2, 1, 27), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemDeviceX25RrFTx.setStatus('mandatory')
sm6kSystemDeviceX25RnrFTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 3, 4, 2, 1, 28), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemDeviceX25RnrFTx.setStatus('mandatory')
sm6kSystemDeviceX25RejFTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 3, 4, 2, 1, 29), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemDeviceX25RejFTx.setStatus('mandatory')
sm6kSystemDeviceX25InfoFTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 3, 4, 2, 1, 30), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemDeviceX25InfoFTx.setStatus('mandatory')
sm6kSystemDeviceX25SabmFTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 3, 4, 2, 1, 31), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemDeviceX25SabmFTx.setStatus('mandatory')
sm6kSystemDeviceX25SarmDmFTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 3, 4, 2, 1, 32), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemDeviceX25SarmDmFTx.setStatus('mandatory')
sm6kSystemDeviceX25DiscFTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 3, 4, 2, 1, 33), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemDeviceX25DiscFTx.setStatus('mandatory')
sm6kSystemDeviceX25UaFTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 3, 4, 2, 1, 34), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemDeviceX25UaFTx.setStatus('mandatory')
sm6kSystemDeviceX25FrmrFTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 3, 4, 2, 1, 35), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemDeviceX25FrmrFTx.setStatus('mandatory')
sm6kSystemDeviceX25BadNrFTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 3, 4, 2, 1, 36), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemDeviceX25BadNrFTx.setStatus('mandatory')
sm6kSystemDeviceX25UnknownFTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 3, 4, 2, 1, 37), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemDeviceX25UnknownFTx.setStatus('mandatory')
sm6kSystemDeviceX25XidFTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 3, 4, 2, 1, 38), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemDeviceX25XidFTx.setStatus('mandatory')
sm6kSystemDeviceX25BadLengthFTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 3, 4, 2, 1, 39), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemDeviceX25BadLengthFTx.setStatus('mandatory')
sm6kSystemDeviceX25T1Expirations = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 3, 4, 2, 1, 40), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemDeviceX25T1Expirations.setStatus('mandatory')
sm6kSystemDeviceX25Lvl2Connects = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 3, 4, 2, 1, 41), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemDeviceX25Lvl2Connects.setStatus('mandatory')
sm6kSystemDeviceX25Lvl2Disconnects = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 3, 4, 2, 1, 42), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemDeviceX25Lvl2Disconnects.setStatus('mandatory')
sm6kSystemDeviceX25CarrierLoss = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 3, 4, 2, 1, 43), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemDeviceX25CarrierLoss.setStatus('mandatory')
sm6kSystemDeviceX25ConnectTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 3, 4, 2, 1, 44), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemDeviceX25ConnectTime.setStatus('mandatory')
sm6kSystemDeviceX25T4Expirations = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 3, 4, 2, 1, 45), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemDeviceX25T4Expirations.setStatus('mandatory')
sm6kSystemDeviceX25T4N2Times = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 3, 4, 2, 1, 46), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemDeviceX25T4N2Times.setStatus('mandatory')
sm6kSystemDeviceX25IgnoredFRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 3, 4, 2, 1, 47), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemDeviceX25IgnoredFRx.setStatus('mandatory')
sm6kSystemDeviceX25RrFRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 3, 4, 2, 1, 48), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemDeviceX25RrFRx.setStatus('mandatory')
sm6kSystemDeviceX25RnrFRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 3, 4, 2, 1, 49), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemDeviceX25RnrFRx.setStatus('mandatory')
sm6kSystemDeviceX25RejFRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 3, 4, 2, 1, 50), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemDeviceX25RejFRx.setStatus('mandatory')
sm6kSystemDeviceX25InfoFRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 3, 4, 2, 1, 51), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemDeviceX25InfoFRx.setStatus('mandatory')
sm6kSystemDeviceX25SabmFRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 3, 4, 2, 1, 52), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemDeviceX25SabmFRx.setStatus('mandatory')
sm6kSystemDeviceX25SarmDmFRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 3, 4, 2, 1, 53), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemDeviceX25SarmDmFRx.setStatus('mandatory')
sm6kSystemDeviceX25DiscFRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 3, 4, 2, 1, 54), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemDeviceX25DiscFRx.setStatus('mandatory')
sm6kSystemDeviceX25UaFRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 3, 4, 2, 1, 55), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemDeviceX25UaFRx.setStatus('mandatory')
sm6kSystemDeviceX25FrmrFRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 3, 4, 2, 1, 56), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemDeviceX25FrmrFRx.setStatus('mandatory')
sm6kSystemDeviceX25BadNrFRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 3, 4, 2, 1, 57), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemDeviceX25BadNrFRx.setStatus('mandatory')
sm6kSystemDeviceX25UnknownFRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 3, 4, 2, 1, 58), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemDeviceX25UnknownFRx.setStatus('mandatory')
sm6kSystemDeviceX25XidFRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 3, 4, 2, 1, 59), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemDeviceX25XidFRx.setStatus('mandatory')
sm6kSystemDeviceX25BadLengthFRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 3, 4, 2, 1, 60), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemDeviceX25BadLengthFRx.setStatus('mandatory')
sm6kSystemDeviceX25DataPTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 3, 4, 2, 1, 61), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemDeviceX25DataPTx.setStatus('mandatory')
sm6kSystemDeviceX25RrPTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 3, 4, 2, 1, 62), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemDeviceX25RrPTx.setStatus('mandatory')
sm6kSystemDeviceX25RnrPTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 3, 4, 2, 1, 63), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemDeviceX25RnrPTx.setStatus('mandatory')
sm6kSystemDeviceX25InterruptPTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 3, 4, 2, 1, 64), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemDeviceX25InterruptPTx.setStatus('mandatory')
sm6kSystemDeviceX25InterruptConfirmPTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 3, 4, 2, 1, 65), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemDeviceX25InterruptConfirmPTx.setStatus('mandatory')
sm6kSystemDeviceX25CallRequestPTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 3, 4, 2, 1, 66), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemDeviceX25CallRequestPTx.setStatus('mandatory')
sm6kSystemDeviceX25CallAcceptPTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 3, 4, 2, 1, 67), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemDeviceX25CallAcceptPTx.setStatus('mandatory')
sm6kSystemDeviceX25ClearRequestPTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 3, 4, 2, 1, 68), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemDeviceX25ClearRequestPTx.setStatus('mandatory')
sm6kSystemDeviceX25ClearConfirmPTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 3, 4, 2, 1, 69), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemDeviceX25ClearConfirmPTx.setStatus('mandatory')
sm6kSystemDeviceX25ResetRequestPTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 3, 4, 2, 1, 70), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemDeviceX25ResetRequestPTx.setStatus('mandatory')
sm6kSystemDeviceX25ResetConfirmPTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 3, 4, 2, 1, 71), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemDeviceX25ResetConfirmPTx.setStatus('mandatory')
sm6kSystemDeviceX25DiagnosticPTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 3, 4, 2, 1, 72), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemDeviceX25DiagnosticPTx.setStatus('mandatory')
sm6kSystemDeviceX25RegistrationPTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 3, 4, 2, 1, 73), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemDeviceX25RegistrationPTx.setStatus('mandatory')
sm6kSystemDeviceX25RegistrationConfirmPTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 3, 4, 2, 1, 74), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemDeviceX25RegistrationConfirmPTx.setStatus('mandatory')
sm6kSystemDeviceX25RestartPTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 3, 4, 2, 1, 75), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemDeviceX25RestartPTx.setStatus('mandatory')
sm6kSystemDeviceX25RestartConfirmPTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 3, 4, 2, 1, 76), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemDeviceX25RestartConfirmPTx.setStatus('mandatory')
sm6kSystemDeviceX25ErrorPTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 3, 4, 2, 1, 77), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemDeviceX25ErrorPTx.setStatus('mandatory')
sm6kSystemDeviceX25T20Expirations = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 3, 4, 2, 1, 78), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemDeviceX25T20Expirations.setStatus('mandatory')
sm6kSystemDeviceX25T21Expirations = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 3, 4, 2, 1, 79), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemDeviceX25T21Expirations.setStatus('mandatory')
sm6kSystemDeviceX25T22Expirations = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 3, 4, 2, 1, 80), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemDeviceX25T22Expirations.setStatus('mandatory')
sm6kSystemDeviceX25T23Expirations = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 3, 4, 2, 1, 81), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemDeviceX25T23Expirations.setStatus('mandatory')
sm6kSystemDeviceX25VcEstablishments = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 3, 4, 2, 1, 82), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemDeviceX25VcEstablishments.setStatus('mandatory')
sm6kSystemDeviceX25T24Expirations = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 3, 4, 2, 1, 83), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemDeviceX25T24Expirations.setStatus('mandatory')
sm6kSystemDeviceX25T25Expirations = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 3, 4, 2, 1, 84), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemDeviceX25T25Expirations.setStatus('mandatory')
sm6kSystemDeviceX25T26Expirations = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 3, 4, 2, 1, 85), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemDeviceX25T26Expirations.setStatus('mandatory')
sm6kSystemDeviceX25T28Expirations = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 3, 4, 2, 1, 86), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemDeviceX25T28Expirations.setStatus('mandatory')
sm6kSystemDeviceX25DataPRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 3, 4, 2, 1, 87), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemDeviceX25DataPRx.setStatus('mandatory')
sm6kSystemDeviceX25RrPRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 3, 4, 2, 1, 88), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemDeviceX25RrPRx.setStatus('mandatory')
sm6kSystemDeviceX25RnrPRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 3, 4, 2, 1, 89), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemDeviceX25RnrPRx.setStatus('mandatory')
sm6kSystemDeviceX25InterruptPRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 3, 4, 2, 1, 90), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemDeviceX25InterruptPRx.setStatus('mandatory')
sm6kSystemDeviceX25InterruptConfirmPRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 3, 4, 2, 1, 91), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemDeviceX25InterruptConfirmPRx.setStatus('mandatory')
sm6kSystemDeviceX25IncomingCallPRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 3, 4, 2, 1, 92), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemDeviceX25IncomingCallPRx.setStatus('mandatory')
sm6kSystemDeviceX25CallConnectedPRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 3, 4, 2, 1, 93), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemDeviceX25CallConnectedPRx.setStatus('mandatory')
sm6kSystemDeviceX25ClearIndicationPRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 3, 4, 2, 1, 94), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemDeviceX25ClearIndicationPRx.setStatus('mandatory')
sm6kSystemDeviceX25ClearConfirmPRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 3, 4, 2, 1, 95), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemDeviceX25ClearConfirmPRx.setStatus('mandatory')
sm6kSystemDeviceX25ResetIndicationPRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 3, 4, 2, 1, 96), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemDeviceX25ResetIndicationPRx.setStatus('mandatory')
sm6kSystemDeviceX25ResetConfirmPRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 3, 4, 2, 1, 97), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemDeviceX25ResetConfirmPRx.setStatus('mandatory')
sm6kSystemDeviceX25DiagnosticPRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 3, 4, 2, 1, 98), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemDeviceX25DiagnosticPRx.setStatus('mandatory')
sm6kSystemDeviceX25RegistrationPRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 3, 4, 2, 1, 99), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemDeviceX25RegistrationPRx.setStatus('mandatory')
sm6kSystemDeviceX25RegistrationConfirmPRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 3, 4, 2, 1, 100), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemDeviceX25RegistrationConfirmPRx.setStatus('mandatory')
sm6kSystemDeviceX25RestartPRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 3, 4, 2, 1, 101), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemDeviceX25RestartPRx.setStatus('mandatory')
sm6kSystemDeviceX25RestartConfirmPRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 3, 4, 2, 1, 102), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemDeviceX25RestartConfirmPRx.setStatus('mandatory')
sm6kSystemDeviceX25TxUnknownSize = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 3, 4, 2, 1, 103), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemDeviceX25TxUnknownSize.setStatus('mandatory')
sm6kSystemDeviceX25TxReserved1 = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 3, 4, 2, 1, 104), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemDeviceX25TxReserved1.setStatus('mandatory')
sm6kSystemDeviceX25TxReserved2 = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 3, 4, 2, 1, 105), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemDeviceX25TxReserved2.setStatus('mandatory')
sm6kSystemDeviceX25TxReserved3 = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 3, 4, 2, 1, 106), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemDeviceX25TxReserved3.setStatus('mandatory')
sm6kSystemDeviceX25Tx0x15 = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 3, 4, 2, 1, 107), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemDeviceX25Tx0x15.setStatus('mandatory')
sm6kSystemDeviceX25Tx16x31 = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 3, 4, 2, 1, 108), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemDeviceX25Tx16x31.setStatus('mandatory')
sm6kSystemDeviceX25Tx32x63 = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 3, 4, 2, 1, 109), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemDeviceX25Tx32x63.setStatus('mandatory')
sm6kSystemDeviceX25Tx64x127 = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 3, 4, 2, 1, 110), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemDeviceX25Tx64x127.setStatus('mandatory')
sm6kSystemDeviceX25Tx128x255 = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 3, 4, 2, 1, 111), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemDeviceX25Tx128x255.setStatus('mandatory')
sm6kSystemDeviceX25Tx256x511 = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 3, 4, 2, 1, 112), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemDeviceX25Tx256x511.setStatus('mandatory')
sm6kSystemDeviceX25Tx512x1023 = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 3, 4, 2, 1, 113), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemDeviceX25Tx512x1023.setStatus('mandatory')
sm6kSystemDeviceX25Tx1024x2047 = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 3, 4, 2, 1, 114), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemDeviceX25Tx1024x2047.setStatus('mandatory')
sm6kSystemDeviceX25Tx2048x4095 = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 3, 4, 2, 1, 115), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemDeviceX25Tx2048x4095.setStatus('mandatory')
sm6kSystemDeviceX25TxReserved13 = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 3, 4, 2, 1, 116), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemDeviceX25TxReserved13.setStatus('mandatory')
sm6kSystemDeviceX25TxReserved14 = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 3, 4, 2, 1, 117), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemDeviceX25TxReserved14.setStatus('mandatory')
sm6kSystemDeviceX25TxReserved15 = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 3, 4, 2, 1, 118), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemDeviceX25TxReserved15.setStatus('mandatory')
sm6kSystemDeviceX25TxTotalPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 3, 4, 2, 1, 119), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemDeviceX25TxTotalPackets.setStatus('mandatory')
sm6kSystemDeviceX25RxUnknownSize = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 3, 4, 2, 1, 120), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemDeviceX25RxUnknownSize.setStatus('mandatory')
sm6kSystemDeviceX25RxReserved1 = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 3, 4, 2, 1, 121), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemDeviceX25RxReserved1.setStatus('mandatory')
sm6kSystemDeviceX25RxReserved2 = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 3, 4, 2, 1, 122), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemDeviceX25RxReserved2.setStatus('mandatory')
sm6kSystemDeviceX25RxReserved3 = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 3, 4, 2, 1, 123), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemDeviceX25RxReserved3.setStatus('mandatory')
sm6kSystemDeviceX25Rx0x15 = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 3, 4, 2, 1, 124), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemDeviceX25Rx0x15.setStatus('mandatory')
sm6kSystemDeviceX25Rx16x31 = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 3, 4, 2, 1, 125), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemDeviceX25Rx16x31.setStatus('mandatory')
sm6kSystemDeviceX25Rx32x63 = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 3, 4, 2, 1, 126), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemDeviceX25Rx32x63.setStatus('mandatory')
sm6kSystemDeviceX25Rx64x127 = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 3, 4, 2, 1, 127), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemDeviceX25Rx64x127.setStatus('mandatory')
sm6kSystemDeviceX25Rx128x255 = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 3, 4, 2, 1, 128), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemDeviceX25Rx128x255.setStatus('mandatory')
sm6kSystemDeviceX25Rx256x511 = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 3, 4, 2, 1, 129), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemDeviceX25Rx256x511.setStatus('mandatory')
sm6kSystemDeviceX25Rx512x1023 = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 3, 4, 2, 1, 130), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemDeviceX25Rx512x1023.setStatus('mandatory')
sm6kSystemDeviceX25Rx1024x2047 = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 3, 4, 2, 1, 131), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemDeviceX25Rx1024x2047.setStatus('mandatory')
sm6kSystemDeviceX25Rx2048x4095 = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 3, 4, 2, 1, 132), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemDeviceX25Rx2048x4095.setStatus('mandatory')
sm6kSystemDeviceX25RxReserved13 = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 3, 4, 2, 1, 133), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemDeviceX25RxReserved13.setStatus('mandatory')
sm6kSystemDeviceX25RxReserved14 = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 3, 4, 2, 1, 134), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemDeviceX25RxReserved14.setStatus('mandatory')
sm6kSystemDeviceX25RxReserved15 = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 3, 4, 2, 1, 135), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemDeviceX25RxReserved15.setStatus('mandatory')
sm6kSystemDeviceX25RxTotalPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 3, 4, 2, 1, 136), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemDeviceX25RxTotalPackets.setStatus('mandatory')
sm6kSystemDeviceX25Clear = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 3, 4, 2, 1, 137), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("normal", 1), ("clear", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sm6kSystemDeviceX25Clear.setStatus('mandatory')
sm6kSystemDeviceX25RouteCount = MibScalar((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 3, 4, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemDeviceX25RouteCount.setStatus('mandatory')
sm6kSystemDeviceX25RouteTable = MibTable((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 3, 4, 4), )
if mibBuilder.loadTexts: sm6kSystemDeviceX25RouteTable.setStatus('mandatory')
sm6kSystemDeviceX25RouteEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 3, 4, 4, 1), ).setIndexNames((0, "SYSMON6K-MIB", "sm6kSystemDeviceX25RouteNumber"))
if mibBuilder.loadTexts: sm6kSystemDeviceX25RouteEntry.setStatus('mandatory')
sm6kSystemDeviceX25RouteNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 3, 4, 4, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemDeviceX25RouteNumber.setStatus('mandatory')
sm6kSystemDeviceX25RouteEntryName = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 3, 4, 4, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemDeviceX25RouteEntryName.setStatus('mandatory')
sm6kSystemDeviceX25RouteUserName = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 3, 4, 4, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemDeviceX25RouteUserName.setStatus('mandatory')
sm6kSystemDeviceX25RoutePort = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 3, 4, 4, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemDeviceX25RoutePort.setStatus('mandatory')
sm6kSystemDeviceX25RouteCallingAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 3, 4, 4, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemDeviceX25RouteCallingAddress.setStatus('mandatory')
sm6kSystemDeviceX25RouteCalledSubaddress = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 3, 4, 4, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemDeviceX25RouteCalledSubaddress.setStatus('mandatory')
sm6kSystemDeviceX25RouteCallingAddressExt = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 3, 4, 4, 1, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemDeviceX25RouteCallingAddressExt.setStatus('mandatory')
sm6kSystemDeviceX25RouteCalledAddressExt = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 3, 4, 4, 1, 8), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemDeviceX25RouteCalledAddressExt.setStatus('mandatory')
sm6kSystemDeviceX25RouteCalledUserData = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 3, 4, 4, 1, 9), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemDeviceX25RouteCalledUserData.setStatus('mandatory')
sm6kSystemDeviceX25RoutePriority = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 3, 4, 4, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemDeviceX25RoutePriority.setStatus('mandatory')
sm6kSystemDeviceX25RouteAction = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 3, 4, 4, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("forward", 1), ("reject", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemDeviceX25RouteAction.setStatus('mandatory')
sm6kSystemFileSystemMounted = MibScalar((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 5, 1), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemFileSystemMounted.setStatus('mandatory')
sm6kSystemFileSystemTable = MibTable((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 5, 2), )
if mibBuilder.loadTexts: sm6kSystemFileSystemTable.setStatus('mandatory')
sm6kSystemFileSystemEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 5, 2, 1), ).setIndexNames((0, "SYSMON6K-MIB", "sm6kSystemFileSystemName"))
if mibBuilder.loadTexts: sm6kSystemFileSystemEntry.setStatus('mandatory')
sm6kSystemFileSystemName = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 5, 2, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemFileSystemName.setStatus('mandatory')
sm6kSystemFileSystemSize = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 5, 2, 1, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemFileSystemSize.setStatus('mandatory')
sm6kSystemFileSystemFree = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 5, 2, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemFileSystemFree.setStatus('mandatory')
sm6kSystemFileSystemPercentUsed = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 5, 2, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemFileSystemPercentUsed.setStatus('mandatory')
sm6kSystemFileSystemInodesUsed = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 5, 2, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemFileSystemInodesUsed.setStatus('mandatory')
sm6kSystemFileSystemInodesPercentUsed = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 5, 2, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemFileSystemInodesPercentUsed.setStatus('mandatory')
sm6kSystemFileSystemInodeCount = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 5, 2, 1, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemFileSystemInodeCount.setStatus('mandatory')
sm6kSystemFileSystemFileSystem = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 5, 2, 1, 8), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemFileSystemFileSystem.setStatus('mandatory')
sm6kSystemFileSystemRemote = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 5, 2, 1, 9), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemFileSystemRemote.setStatus('mandatory')
sm6kSystemSubSystemsCount = MibScalar((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 6, 1), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemSubSystemsCount.setStatus('mandatory')
sm6kSystemSubSystemsTable = MibTable((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 6, 2), )
if mibBuilder.loadTexts: sm6kSystemSubSystemsTable.setStatus('mandatory')
sm6kSystemSubSystemsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 6, 2, 1), ).setIndexNames((0, "SYSMON6K-MIB", "sm6kSystemSubSystemsName"))
if mibBuilder.loadTexts: sm6kSystemSubSystemsEntry.setStatus('mandatory')
sm6kSystemSubSystemsName = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 6, 2, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemSubSystemsName.setStatus('mandatory')
sm6kSystemSubSystemsPID = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 6, 2, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemSubSystemsPID.setStatus('mandatory')
sm6kSystemSubSystemsStatusDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 6, 2, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemSubSystemsStatusDescription.setStatus('mandatory')
sm6kSystemSubSystemsStatusText = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 6, 2, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemSubSystemsStatusText.setStatus('mandatory')
sm6kSystemSubSystemsStatusCode = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 6, 2, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemSubSystemsStatusCode.setStatus('mandatory')
sm6kSystemProcessCount = MibScalar((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 7, 1), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemProcessCount.setStatus('mandatory')
sm6kSystemProcessTable = MibTable((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 7, 2), )
if mibBuilder.loadTexts: sm6kSystemProcessTable.setStatus('mandatory')
sm6kSystemProcessEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 7, 2, 1), ).setIndexNames((0, "SYSMON6K-MIB", "sm6kSystemProcessCommand"), (0, "SYSMON6K-MIB", "sm6kSystemProcessPID"))
if mibBuilder.loadTexts: sm6kSystemProcessEntry.setStatus('mandatory')
sm6kSystemProcessLoginUser = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 7, 2, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemProcessLoginUser.setStatus('mandatory')
sm6kSystemProcessPID = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 7, 2, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemProcessPID.setStatus('mandatory')
sm6kSystemProcessParentPID = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 7, 2, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemProcessParentPID.setStatus('mandatory')
sm6kSystemProcessCPUTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 7, 2, 1, 4), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemProcessCPUTime.setStatus('mandatory')
sm6kSystemProcessUserTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 7, 2, 1, 5), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemProcessUserTime.setStatus('mandatory')
sm6kSystemProcessSystemTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 7, 2, 1, 6), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemProcessSystemTime.setStatus('mandatory')
sm6kSystemProcessPageFaultsIO = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 7, 2, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemProcessPageFaultsIO.setStatus('mandatory')
sm6kSystemProcessPageFaultsNoIO = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 7, 2, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemProcessPageFaultsNoIO.setStatus('mandatory')
sm6kSystemProcessPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 7, 2, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemProcessPriority.setStatus('mandatory')
sm6kSystemProcessNice = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 7, 2, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemProcessNice.setStatus('mandatory')
sm6kSystemProcessState = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 7, 2, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 3, 4, 5, 6, 666))).clone(namedValues=NamedValues(("sleep", 1), ("run", 3), ("iDL", 4), ("zombie", 5), ("stop", 6), ("none", 666)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemProcessState.setStatus('mandatory')
sm6kSystemProcessWait = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 7, 2, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 666))).clone(namedValues=NamedValues(("event", 1), ("lock", 2), ("timer", 3), ("cpu", 4), ("pageIn", 5), ("pageOut", 6), ("pLock", 7), ("pageFree", 8), ("memory", 9), ("none", 666)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemProcessWait.setStatus('mandatory')
sm6kSystemProcessDataResidentSetSize = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 7, 2, 1, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemProcessDataResidentSetSize.setStatus('mandatory')
sm6kSystemProcessTextResidentSetSize = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 7, 2, 1, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemProcessTextResidentSetSize.setStatus('mandatory')
sm6kSystemProcessImageSize = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 7, 2, 1, 15), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemProcessImageSize.setStatus('mandatory')
sm6kSystemProcessDataVirtualMemorySize = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 7, 2, 1, 16), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemProcessDataVirtualMemorySize.setStatus('mandatory')
sm6kSystemProcessPercentMemory = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 7, 2, 1, 17), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemProcessPercentMemory.setStatus('mandatory')
sm6kSystemProcessCPU = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 7, 2, 1, 18), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemProcessCPU.setStatus('mandatory')
sm6kSystemProcessStartTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 7, 2, 1, 19), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemProcessStartTime.setStatus('mandatory')
sm6kSystemProcessCommand = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 7, 2, 1, 20), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemProcessCommand.setStatus('mandatory')
sm6kSystemProcessLoginUID = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 7, 2, 1, 21), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemProcessLoginUID.setStatus('mandatory')
sm6kSystemProcessEffectiveUID = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 7, 2, 1, 22), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemProcessEffectiveUID.setStatus('mandatory')
sm6kSystemProcessEffectiveGID = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 7, 2, 1, 23), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemProcessEffectiveGID.setStatus('mandatory')
sm6kSystemProcessEffectiveGroupName = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 7, 2, 1, 24), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemProcessEffectiveGroupName.setStatus('mandatory')
sm6kSystemProcessSUID = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 7, 2, 1, 25), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemProcessSUID.setStatus('mandatory')
sm6kSystemProcessPgrp = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 7, 2, 1, 26), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemProcessPgrp.setStatus('mandatory')
sm6kSystemProcessPFlags = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 7, 2, 1, 27), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemProcessPFlags.setStatus('mandatory')
sm6kSystemProcessAdspace = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 7, 2, 1, 28), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemProcessAdspace.setStatus('mandatory')
sm6kSystemProcessTTYp = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 7, 2, 1, 29), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemProcessTTYp.setStatus('mandatory')
sm6kSystemProcessTTYd = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 7, 2, 1, 30), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemProcessTTYd.setStatus('mandatory')
sm6kSystemProcessNSwap = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 7, 2, 1, 31), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemProcessNSwap.setStatus('mandatory')
sm6kSystemProcessInblocks = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 7, 2, 1, 32), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemProcessInblocks.setStatus('mandatory')
sm6kSystemProcessOutblocks = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 7, 2, 1, 33), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemProcessOutblocks.setStatus('mandatory')
sm6kSystemProcessMsgsnd = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 7, 2, 1, 34), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemProcessMsgsnd.setStatus('mandatory')
sm6kSystemProcessMsgrcv = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 7, 2, 1, 35), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemProcessMsgrcv.setStatus('mandatory')
sm6kSystemProcessNsignals = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 7, 2, 1, 36), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemProcessNsignals.setStatus('mandatory')
sm6kSystemProcessNVcsw = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 7, 2, 1, 37), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemProcessNVcsw.setStatus('mandatory')
sm6kSystemProcessNIvcsw = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 7, 2, 1, 38), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemProcessNIvcsw.setStatus('mandatory')
sm6kSystemProcessArguments = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 7, 2, 1, 39), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemProcessArguments.setStatus('mandatory')
sm6kSystemProcessSignal = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 7, 2, 1, 40), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 60, 61, 62, 63))).clone(namedValues=NamedValues(("sighup", 1), ("sigint", 2), ("sigquit", 3), ("sigill", 4), ("sigtrap", 5), ("sigabrt", 6), ("sigemt", 7), ("sigfpe", 8), ("sigkill", 9), ("sigbus", 10), ("sigsegv", 11), ("sigsys", 12), ("sigpipe", 13), ("sigalrm", 14), ("sigterm", 15), ("sigurg", 16), ("sigstop", 17), ("sigtstp", 18), ("sigcont", 19), ("sigchld", 20), ("sigttin", 21), ("sigttou", 22), ("sigio", 23), ("sigxcpu", 24), ("sigxfsz", 25), ("sigmsg", 27), ("sigwinch", 28), ("sigpwr", 29), ("sigusr1", 30), ("sigusr2", 31), ("sigprof", 32), ("sigdanger", 33), ("sigvtalrm", 34), ("sigmigrate", 35), ("sigpre", 36), ("sigvirt", 37), ("siggrant", 60), ("sigretract", 61), ("sigsound", 62), ("sigsak", 63)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemProcessSignal.setStatus('mandatory')
sm6kSystemUsersLoggedIn = MibScalar((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 8, 1), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemUsersLoggedIn.setStatus('mandatory')
sm6kSystemUsersTable = MibTable((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 8, 2), )
if mibBuilder.loadTexts: sm6kSystemUsersTable.setStatus('mandatory')
sm6kSystemUsersEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 8, 2, 1), ).setIndexNames((0, "SYSMON6K-MIB", "sm6kSystemUsersName"))
if mibBuilder.loadTexts: sm6kSystemUsersEntry.setStatus('mandatory')
sm6kSystemUsersName = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 8, 2, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemUsersName.setStatus('mandatory')
sm6kSystemUsersLine = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 8, 2, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemUsersLine.setStatus('mandatory')
sm6kSystemUsersTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 8, 2, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemUsersTime.setStatus('mandatory')
sm6kSystemUsersPID = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 8, 2, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemUsersPID.setStatus('mandatory')
sm6kSystemUsersRemoteHost = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 8, 2, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemUsersRemoteHost.setStatus('mandatory')
sm6kSystemMiscellaneousTimeText = MibScalar((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 11, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemMiscellaneousTimeText.setStatus('mandatory')
sm6kSystemMiscellaneousTime = MibScalar((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 11, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemMiscellaneousTime.setStatus('mandatory')
sm6kSystemMiscellaneousRandom = MibScalar((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 11, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemMiscellaneousRandom.setStatus('mandatory')
sm6kSystemMiscellaneousFreeSpace = MibScalar((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 11, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemMiscellaneousFreeSpace.setStatus('mandatory')
sm6kSystemMiscellaneousPublicKey = MibScalar((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 11, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sm6kSystemMiscellaneousPublicKey.setStatus('mandatory')
sm6kSystemMiscellaneousLocalSocket = MibScalar((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 11, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemMiscellaneousLocalSocket.setStatus('mandatory')
sm6kSystemRebootTimer = MibScalar((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 10, 1), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sm6kSystemRebootTimer.setStatus('mandatory')
sm6kSystemUtilizationCPU = MibIdentifier((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 9, 1))
sm6kSystemUtilizationKernel = MibIdentifier((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 9, 2))
sm6kSystemUtilizationIostat = MibIdentifier((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 9, 3))
sm6kSystemUtilizationCPUPollingInterval = MibScalar((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 9, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemUtilizationCPUPollingInterval.setStatus('mandatory')
sm6kSystemUtilizationCPUCount = MibScalar((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 9, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemUtilizationCPUCount.setStatus('mandatory')
sm6kSystemUtilizationCPUTable = MibTable((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 9, 1, 3), )
if mibBuilder.loadTexts: sm6kSystemUtilizationCPUTable.setStatus('mandatory')
sm6kSystemUtilizationCPUEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 9, 1, 3, 1), ).setIndexNames((0, "SYSMON6K-MIB", "sm6kSystemUtilizationCPUIntervalName"))
if mibBuilder.loadTexts: sm6kSystemUtilizationCPUEntry.setStatus('mandatory')
sm6kSystemUtilizationCPUIntervalName = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 9, 1, 3, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemUtilizationCPUIntervalName.setStatus('mandatory')
sm6kSystemUtilizationCPUIntervalStartTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 9, 1, 3, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemUtilizationCPUIntervalStartTime.setStatus('mandatory')
sm6kSystemUtilizationCPUIntervalLength = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 9, 1, 3, 1, 3), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemUtilizationCPUIntervalLength.setStatus('mandatory')
sm6kSystemUtilizationCPUUser = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 9, 1, 3, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemUtilizationCPUUser.setStatus('mandatory')
sm6kSystemUtilizationCPUSystem = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 9, 1, 3, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemUtilizationCPUSystem.setStatus('mandatory')
sm6kSystemUtilizationCPUIdle = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 9, 1, 3, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemUtilizationCPUIdle.setStatus('mandatory')
sm6kSystemUtilizationCPUWait = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 9, 1, 3, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemUtilizationCPUWait.setStatus('mandatory')
sm6kSystemUtilizationCPUBusy = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 9, 1, 3, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemUtilizationCPUBusy.setStatus('mandatory')
sm6kSystemUtilizationCPUUserMinimum = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 9, 1, 3, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemUtilizationCPUUserMinimum.setStatus('mandatory')
sm6kSystemUtilizationCPUSystemMinimum = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 9, 1, 3, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemUtilizationCPUSystemMinimum.setStatus('mandatory')
sm6kSystemUtilizationCPUIdleMinimum = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 9, 1, 3, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemUtilizationCPUIdleMinimum.setStatus('mandatory')
sm6kSystemUtilizationCPUWaitMinimum = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 9, 1, 3, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemUtilizationCPUWaitMinimum.setStatus('mandatory')
sm6kSystemUtilizationCPUBusyMinimum = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 9, 1, 3, 1, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemUtilizationCPUBusyMinimum.setStatus('mandatory')
sm6kSystemUtilizationCPUUserMaximum = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 9, 1, 3, 1, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemUtilizationCPUUserMaximum.setStatus('mandatory')
sm6kSystemUtilizationCPUSystemMaximum = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 9, 1, 3, 1, 15), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemUtilizationCPUSystemMaximum.setStatus('mandatory')
sm6kSystemUtilizationCPUIdleMaximum = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 9, 1, 3, 1, 16), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemUtilizationCPUIdleMaximum.setStatus('mandatory')
sm6kSystemUtilizationCPUWaitMaximum = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 9, 1, 3, 1, 17), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemUtilizationCPUWaitMaximum.setStatus('mandatory')
sm6kSystemUtilizationCPUBusyMaximum = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 9, 1, 3, 1, 18), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemUtilizationCPUBusyMaximum.setStatus('mandatory')
sm6kSystemUtilizationCPUNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 9, 1, 3, 1, 19), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemUtilizationCPUNumber.setStatus('mandatory')
sm6kSystemUtilizationKernelPollingInterval = MibScalar((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 9, 2, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemUtilizationKernelPollingInterval.setStatus('mandatory')
sm6kSystemUtilizationKernelTable = MibTable((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 9, 2, 2), )
if mibBuilder.loadTexts: sm6kSystemUtilizationKernelTable.setStatus('mandatory')
sm6kSystemUtilizationKernelEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 9, 2, 2, 1), ).setIndexNames((0, "SYSMON6K-MIB", "sm6kSystemUtilizationKernelName"))
if mibBuilder.loadTexts: sm6kSystemUtilizationKernelEntry.setStatus('mandatory')
sm6kSystemUtilizationKernelName = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 9, 2, 2, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemUtilizationKernelName.setStatus('mandatory')
sm6kSystemUtilizationKernelIntervalStartTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 9, 2, 2, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemUtilizationKernelIntervalStartTime.setStatus('mandatory')
sm6kSystemUtilizationKernelIntervalLength = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 9, 2, 2, 1, 3), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemUtilizationKernelIntervalLength.setStatus('mandatory')
sm6kSystemUtilizationKernelContextSwitches = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 9, 2, 2, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemUtilizationKernelContextSwitches.setStatus('mandatory')
sm6kSystemUtilizationKernelSystemCalls = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 9, 2, 2, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemUtilizationKernelSystemCalls.setStatus('mandatory')
sm6kSystemUtilizationKernelSystemReads = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 9, 2, 2, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemUtilizationKernelSystemReads.setStatus('mandatory')
sm6kSystemUtilizationKernelSystemWrites = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 9, 2, 2, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemUtilizationKernelSystemWrites.setStatus('mandatory')
sm6kSystemUtilizationKernelForks = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 9, 2, 2, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemUtilizationKernelForks.setStatus('mandatory')
sm6kSystemUtilizationKernelExecs = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 9, 2, 2, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemUtilizationKernelExecs.setStatus('mandatory')
sm6kSystemUtilizationKernelRunQueue = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 9, 2, 2, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemUtilizationKernelRunQueue.setStatus('mandatory')
sm6kSystemUtilizationKernelSwapQueue = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 9, 2, 2, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemUtilizationKernelSwapQueue.setStatus('mandatory')
sm6kSystemUtilizationKernelSemaphores = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 9, 2, 2, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemUtilizationKernelSemaphores.setStatus('mandatory')
sm6kSystemUtilizationKernelMessages = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 9, 2, 2, 1, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemUtilizationKernelMessages.setStatus('mandatory')
sm6kSystemUtilizationKernelProcessOverflow = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 9, 2, 2, 1, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemUtilizationKernelProcessOverflow.setStatus('mandatory')
sm6kSystemUtilizationKernelBytesRead = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 9, 2, 2, 1, 15), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemUtilizationKernelBytesRead.setStatus('mandatory')
sm6kSystemUtilizationKernelBytesWritten = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 9, 2, 2, 1, 16), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemUtilizationKernelBytesWritten.setStatus('mandatory')
sm6kSystemUtilizationKernelRawTTYOut = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 9, 2, 2, 1, 17), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemUtilizationKernelRawTTYOut.setStatus('mandatory')
sm6kSystemUtilizationKernelContextSwitchesMinimum = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 9, 2, 2, 1, 18), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemUtilizationKernelContextSwitchesMinimum.setStatus('mandatory')
sm6kSystemUtilizationKernelSystemCallsMinimum = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 9, 2, 2, 1, 19), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemUtilizationKernelSystemCallsMinimum.setStatus('mandatory')
sm6kSystemUtilizationKernelSystemReadsMinimum = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 9, 2, 2, 1, 20), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemUtilizationKernelSystemReadsMinimum.setStatus('mandatory')
sm6kSystemUtilizationKernelSystemWritesMinimum = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 9, 2, 2, 1, 21), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemUtilizationKernelSystemWritesMinimum.setStatus('mandatory')
sm6kSystemUtilizationKernelForksMinimum = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 9, 2, 2, 1, 22), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemUtilizationKernelForksMinimum.setStatus('mandatory')
sm6kSystemUtilizationKernelExecsMinimum = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 9, 2, 2, 1, 23), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemUtilizationKernelExecsMinimum.setStatus('mandatory')
sm6kSystemUtilizationKernelRunQueueMinimum = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 9, 2, 2, 1, 24), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemUtilizationKernelRunQueueMinimum.setStatus('mandatory')
sm6kSystemUtilizationKernelSwapQueueMinimum = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 9, 2, 2, 1, 25), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemUtilizationKernelSwapQueueMinimum.setStatus('mandatory')
sm6kSystemUtilizationKernelSemaphoresMinimum = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 9, 2, 2, 1, 26), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemUtilizationKernelSemaphoresMinimum.setStatus('mandatory')
sm6kSystemUtilizationKernelMessagesMinimum = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 9, 2, 2, 1, 27), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemUtilizationKernelMessagesMinimum.setStatus('mandatory')
sm6kSystemUtilizationKernelProcessOverflowMinimum = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 9, 2, 2, 1, 28), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemUtilizationKernelProcessOverflowMinimum.setStatus('mandatory')
sm6kSystemUtilizationKernelBytesReadMinimum = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 9, 2, 2, 1, 29), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemUtilizationKernelBytesReadMinimum.setStatus('mandatory')
sm6kSystemUtilizationKernelBytesWrittenMinimum = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 9, 2, 2, 1, 30), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemUtilizationKernelBytesWrittenMinimum.setStatus('mandatory')
sm6kSystemUtilizationKernelRawTTYOutMinimum = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 9, 2, 2, 1, 31), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemUtilizationKernelRawTTYOutMinimum.setStatus('mandatory')
sm6kSystemUtilizationKernelContextSwitchesMaximum = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 9, 2, 2, 1, 32), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemUtilizationKernelContextSwitchesMaximum.setStatus('mandatory')
sm6kSystemUtilizationKernelSystemCallsMaximum = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 9, 2, 2, 1, 33), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemUtilizationKernelSystemCallsMaximum.setStatus('mandatory')
sm6kSystemUtilizationKernelSystemReadsMaximum = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 9, 2, 2, 1, 34), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemUtilizationKernelSystemReadsMaximum.setStatus('mandatory')
sm6kSystemUtilizationKernelSystemWritesMaximum = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 9, 2, 2, 1, 35), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemUtilizationKernelSystemWritesMaximum.setStatus('mandatory')
sm6kSystemUtilizationKernelForksMaximum = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 9, 2, 2, 1, 36), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemUtilizationKernelForksMaximum.setStatus('mandatory')
sm6kSystemUtilizationKernelExecsMaximum = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 9, 2, 2, 1, 37), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemUtilizationKernelExecsMaximum.setStatus('mandatory')
sm6kSystemUtilizationKernelRunQueueMaximum = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 9, 2, 2, 1, 38), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemUtilizationKernelRunQueueMaximum.setStatus('mandatory')
sm6kSystemUtilizationKernelSwapQueueMaximum = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 9, 2, 2, 1, 39), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemUtilizationKernelSwapQueueMaximum.setStatus('mandatory')
sm6kSystemUtilizationKernelSemaphoresMaximum = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 9, 2, 2, 1, 40), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemUtilizationKernelSemaphoresMaximum.setStatus('mandatory')
sm6kSystemUtilizationKernelMessagesMaximum = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 9, 2, 2, 1, 41), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemUtilizationKernelMessagesMaximum.setStatus('mandatory')
sm6kSystemUtilizationKernelProcessOverflowMaximum = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 9, 2, 2, 1, 42), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemUtilizationKernelProcessOverflowMaximum.setStatus('mandatory')
sm6kSystemUtilizationKernelBytesReadMaximum = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 9, 2, 2, 1, 43), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemUtilizationKernelBytesReadMaximum.setStatus('mandatory')
sm6kSystemUtilizationKernelBytesWrittenMaximum = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 9, 2, 2, 1, 44), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemUtilizationKernelBytesWrittenMaximum.setStatus('mandatory')
sm6kSystemUtilizationKernelRawTTYOutMaximum = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 9, 2, 2, 1, 45), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemUtilizationKernelRawTTYOutMaximum.setStatus('mandatory')
sm6kSystemUtilizationIostatPollingInterval = MibScalar((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 9, 3, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemUtilizationIostatPollingInterval.setStatus('mandatory')
sm6kSystemUtilizationIostatTable = MibTable((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 9, 3, 2), )
if mibBuilder.loadTexts: sm6kSystemUtilizationIostatTable.setStatus('mandatory')
sm6kSystemUtilizationIostatEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 9, 3, 2, 1), ).setIndexNames((0, "SYSMON6K-MIB", "sm6kSystemUtilizationIostatName"))
if mibBuilder.loadTexts: sm6kSystemUtilizationIostatEntry.setStatus('mandatory')
sm6kSystemUtilizationIostatName = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 9, 3, 2, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemUtilizationIostatName.setStatus('mandatory')
sm6kSystemUtilizationIostatIntervalStartTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 9, 3, 2, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemUtilizationIostatIntervalStartTime.setStatus('mandatory')
sm6kSystemUtilizationIostatIntervalLength = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 9, 3, 2, 1, 3), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemUtilizationIostatIntervalLength.setStatus('mandatory')
sm6kSystemUtilizationIostatPercentTimeActive = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 9, 3, 2, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemUtilizationIostatPercentTimeActive.setStatus('mandatory')
sm6kSystemUtilizationIostatKilobytesTransferRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 9, 3, 2, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemUtilizationIostatKilobytesTransferRate.setStatus('mandatory')
sm6kSystemUtilizationIostatTransfers = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 9, 3, 2, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemUtilizationIostatTransfers.setStatus('mandatory')
sm6kSystemUtilizationIostatKilobytesRead = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 9, 3, 2, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemUtilizationIostatKilobytesRead.setStatus('mandatory')
sm6kSystemUtilizationIostatKilobytesWritten = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 9, 3, 2, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemUtilizationIostatKilobytesWritten.setStatus('mandatory')
sm6kSystemUtilizationIostatPercentTimeActiveMinimum = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 9, 3, 2, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemUtilizationIostatPercentTimeActiveMinimum.setStatus('mandatory')
sm6kSystemUtilizationIostatKilobytesTransferRateMinimum = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 9, 3, 2, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemUtilizationIostatKilobytesTransferRateMinimum.setStatus('mandatory')
sm6kSystemUtilizationIostatTransfersMinimum = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 9, 3, 2, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemUtilizationIostatTransfersMinimum.setStatus('mandatory')
sm6kSystemUtilizationIostatKilobytesReadMinimum = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 9, 3, 2, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemUtilizationIostatKilobytesReadMinimum.setStatus('mandatory')
sm6kSystemUtilizationIostatKilobytesWrittenMinimum = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 9, 3, 2, 1, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemUtilizationIostatKilobytesWrittenMinimum.setStatus('mandatory')
sm6kSystemUtilizationIostatPercentTimeActiveMaximum = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 9, 3, 2, 1, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemUtilizationIostatPercentTimeActiveMaximum.setStatus('mandatory')
sm6kSystemUtilizationIostatKilobytesTransferRateMaximum = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 9, 3, 2, 1, 15), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemUtilizationIostatKilobytesTransferRateMaximum.setStatus('mandatory')
sm6kSystemUtilizationIostatTransfersMaximum = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 9, 3, 2, 1, 16), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemUtilizationIostatTransfersMaximum.setStatus('mandatory')
sm6kSystemUtilizationIostatKilobytesReadMaximum = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 9, 3, 2, 1, 17), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemUtilizationIostatKilobytesReadMaximum.setStatus('mandatory')
sm6kSystemUtilizationIostatKilobytesWrittenMaximum = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 2, 9, 3, 2, 1, 18), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kSystemUtilizationIostatKilobytesWrittenMaximum.setStatus('mandatory')
sm6kNetworkSessionInformation = MibIdentifier((1, 3, 6, 1, 4, 1, 2, 6, 12, 3, 1))
sm6kNetworkSessionCount = MibScalar((1, 3, 6, 1, 4, 1, 2, 6, 12, 3, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kNetworkSessionCount.setStatus('mandatory')
sm6kNetworkSessionTable = MibTable((1, 3, 6, 1, 4, 1, 2, 6, 12, 3, 1, 2), )
if mibBuilder.loadTexts: sm6kNetworkSessionTable.setStatus('mandatory')
sm6kNetworkSessionEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2, 6, 12, 3, 1, 2, 1), ).setIndexNames((0, "SYSMON6K-MIB", "sm6kNetworkSessionName"))
if mibBuilder.loadTexts: sm6kNetworkSessionEntry.setStatus('mandatory')
sm6kNetworkSessionName = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 3, 1, 2, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kNetworkSessionName.setStatus('mandatory')
sm6kNetworkSessionCurrentState = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 3, 1, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("down", 1), ("up", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kNetworkSessionCurrentState.setStatus('mandatory')
sm6kNetworkSessionLastStateChange = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 3, 1, 2, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kNetworkSessionLastStateChange.setStatus('mandatory')
sm6kNetworkSessionLastPollAttempt = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 3, 1, 2, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kNetworkSessionLastPollAttempt.setStatus('mandatory')
sm6kNetworkSessionAddressFamily = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 3, 1, 2, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 65535))).clone(namedValues=NamedValues(("unix", 1), ("inet", 2), ("implink", 3), ("pup", 4), ("chaos", 5), ("ns", 6), ("osi", 7), ("ecma", 8), ("datakit", 9), ("ccitt", 10), ("sna", 11), ("decnet", 12), ("dli", 13), ("lat", 14), ("hylink", 15), ("appletalk", 16), ("route", 17), ("link", 18), ("xtpPseudo", 19), ("intf", 20), ("rif", 21), ("netware", 22), ("reserved23", 23), ("reserved24", 24), ("reserved25", 25), ("reserved26", 26), ("reserved27", 27), ("reserved28", 28), ("reserved29", 29), ("reserved30", 30), ("reserved31", 31), ("reserved32", 32), ("unknown", 65535)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kNetworkSessionAddressFamily.setStatus('mandatory')
sm6kNetworkSessionNetAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 3, 1, 2, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kNetworkSessionNetAddress.setStatus('mandatory')
sm6kNetworkSessionTransmitAttempts = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 3, 1, 2, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kNetworkSessionTransmitAttempts.setStatus('mandatory')
sm6kNetworkSessionPacketsReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 3, 1, 2, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kNetworkSessionPacketsReceived.setStatus('mandatory')
sm6kNetworkSessionLastTransmitTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 3, 1, 2, 1, 9), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kNetworkSessionLastTransmitTime.setStatus('mandatory')
sm6kNetworkSessionLastReceiveTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 3, 1, 2, 1, 10), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kNetworkSessionLastReceiveTime.setStatus('mandatory')
sm6kNetworkSessionMinimumResponseTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 3, 1, 2, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kNetworkSessionMinimumResponseTime.setStatus('mandatory')
sm6kNetworkSessionRecentAverageResponseTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 3, 1, 2, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kNetworkSessionRecentAverageResponseTime.setStatus('mandatory')
sm6kNetworkSessionLifeTimeAverageResponseTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 3, 1, 2, 1, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kNetworkSessionLifeTimeAverageResponseTime.setStatus('mandatory')
sm6kNetworkSessionMaximumResponseTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 3, 1, 2, 1, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kNetworkSessionMaximumResponseTime.setStatus('mandatory')
sm6kCommandTable = MibTable((1, 3, 6, 1, 4, 1, 2, 6, 12, 4, 1), )
if mibBuilder.loadTexts: sm6kCommandTable.setStatus('mandatory')
sm6kCommandEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2, 6, 12, 4, 1, 1), ).setIndexNames((0, "SYSMON6K-MIB", "sm6kCommandName"))
if mibBuilder.loadTexts: sm6kCommandEntry.setStatus('mandatory')
sm6kCommandState = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 4, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(3, 2, 1))).clone(namedValues=NamedValues(("enabled", 3), ("invalid", 2), ("disabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sm6kCommandState.setStatus('mandatory')
sm6kCommandName = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 4, 1, 1, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sm6kCommandName.setStatus('mandatory')
sm6kCommandDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 4, 1, 1, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sm6kCommandDescription.setStatus('mandatory')
sm6kCommandOwnerID = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 4, 1, 1, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sm6kCommandOwnerID.setStatus('mandatory')
sm6kCommandGetStringAndParameters = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 4, 1, 1, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sm6kCommandGetStringAndParameters.setStatus('mandatory')
sm6kCommandSetStringAndParameters = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 4, 1, 1, 6), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sm6kCommandSetStringAndParameters.setStatus('mandatory')
sm6kCommandTimeOutValue = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 4, 1, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sm6kCommandTimeOutValue.setStatus('mandatory')
sm6kCommandCountToLive = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 4, 1, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kCommandCountToLive.setStatus('mandatory')
sm6kCommandTimeToLive = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 4, 1, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sm6kCommandTimeToLive.setStatus('mandatory')
sm6kCommandOutputResultIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 4, 1, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("displaystring", 1), ("integer", 2), ("counter", 3), ("gauge", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sm6kCommandOutputResultIndex.setStatus('mandatory')
sm6kCommandOutputRowIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 4, 1, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sm6kCommandOutputRowIndex.setStatus('mandatory')
sm6kCommandOutputColumnIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 4, 1, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sm6kCommandOutputColumnIndex.setStatus('mandatory')
sm6kCommandDisplayStringResult = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 4, 1, 1, 13), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sm6kCommandDisplayStringResult.setStatus('mandatory')
sm6kCommandIntegerResult = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 4, 1, 1, 14), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sm6kCommandIntegerResult.setStatus('mandatory')
sm6kCommandCounterResult = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 4, 1, 1, 15), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sm6kCommandCounterResult.setStatus('mandatory')
sm6kCommandGaugeResult = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 4, 1, 1, 16), Gauge32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sm6kCommandGaugeResult.setStatus('mandatory')
sm6kCommandExecutionReturnCode = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 4, 1, 1, 17), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kCommandExecutionReturnCode.setStatus('mandatory')
sm6kCommandStandardError = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 4, 1, 1, 18), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kCommandStandardError.setStatus('mandatory')
sm6kThresholdTable = MibTable((1, 3, 6, 1, 4, 1, 2, 6, 12, 5, 1), )
if mibBuilder.loadTexts: sm6kThresholdTable.setStatus('mandatory')
sm6kThresholdEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2, 6, 12, 5, 1, 1), ).setIndexNames((0, "SYSMON6K-MIB", "sm6kThresholdName"))
if mibBuilder.loadTexts: sm6kThresholdEntry.setStatus('mandatory')
sm6kThresholdState = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 5, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("disabled", 1), ("invalid", 2), ("enabledThresholdOnly", 3), ("enabledStoreOnly", 4), ("enabledThresholdStore", 5)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sm6kThresholdState.setStatus('mandatory')
sm6kThresholdName = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 5, 1, 1, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sm6kThresholdName.setStatus('mandatory')
sm6kThresholdDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 5, 1, 1, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sm6kThresholdDescription.setStatus('mandatory')
sm6kThresholdOwnerID = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 5, 1, 1, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sm6kThresholdOwnerID.setStatus('mandatory')
sm6kThresholdLocalRemoteMIBVariable = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 5, 1, 1, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sm6kThresholdLocalRemoteMIBVariable.setStatus('mandatory')
sm6kThresholdCondition = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 5, 1, 1, 6), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sm6kThresholdCondition.setStatus('mandatory')
sm6kThresholdValue = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 5, 1, 1, 7), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sm6kThresholdValue.setStatus('mandatory')
sm6kThresholdPollTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 5, 1, 1, 8), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sm6kThresholdPollTime.setStatus('mandatory')
sm6kThresholdLastValue = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 5, 1, 1, 9), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sm6kThresholdLastValue.setStatus('mandatory')
sm6kThresholdIntegerDataMax = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 5, 1, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kThresholdIntegerDataMax.setStatus('mandatory')
sm6kThresholdIntegerDataMin = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 5, 1, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kThresholdIntegerDataMin.setStatus('mandatory')
sm6kThresholdIntegerDataAvg = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 5, 1, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kThresholdIntegerDataAvg.setStatus('mandatory')
sm6kThresholdCounterGaugeDataMax = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 5, 1, 1, 13), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kThresholdCounterGaugeDataMax.setStatus('mandatory')
sm6kThresholdCounterGaugeDataMin = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 5, 1, 1, 14), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kThresholdCounterGaugeDataMin.setStatus('mandatory')
sm6kThresholdCounterGaugeDataAvg = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 5, 1, 1, 15), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kThresholdCounterGaugeDataAvg.setStatus('mandatory')
sm6kThresholdDataSamples = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 5, 1, 1, 16), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sm6kThresholdDataSamples.setStatus('mandatory')
sm6kThresholdTrapDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 5, 1, 1, 17), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sm6kThresholdTrapDescription.setStatus('mandatory')
sm6kThresholdArmEnterprise = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 5, 1, 1, 18), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sm6kThresholdArmEnterprise.setStatus('mandatory')
sm6kThresholdSpecificTrap = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 5, 1, 1, 19), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sm6kThresholdSpecificTrap.setStatus('mandatory')
sm6kThresholdCommandToExecute = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 5, 1, 1, 20), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sm6kThresholdCommandToExecute.setStatus('mandatory')
sm6kThresholdReArmCondition = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 5, 1, 1, 21), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sm6kThresholdReArmCondition.setStatus('mandatory')
sm6kThresholdReArmValue = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 5, 1, 1, 22), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sm6kThresholdReArmValue.setStatus('mandatory')
sm6kThresholdReArmTrapDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 5, 1, 1, 23), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sm6kThresholdReArmTrapDescription.setStatus('mandatory')
sm6kThresholdReArmEnterprise = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 5, 1, 1, 24), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sm6kThresholdReArmEnterprise.setStatus('mandatory')
sm6kThresholdReArmSpecificTrap = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 5, 1, 1, 25), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sm6kThresholdReArmSpecificTrap.setStatus('mandatory')
sm6kThresholdReArmCommandToExecute = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 5, 1, 1, 26), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sm6kThresholdReArmCommandToExecute.setStatus('mandatory')
sm6kThresholdLastChangedSession = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 5, 1, 1, 27), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sm6kThresholdLastChangedSession.setStatus('mandatory')
sm6kThresholdStandardError = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 5, 1, 1, 28), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sm6kThresholdStandardError.setStatus('mandatory')
sm6kThresholdLastResponseTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 5, 1, 1, 29), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sm6kThresholdLastResponseTime.setStatus('mandatory')
sm6kThresholdResponseCount = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 5, 1, 1, 30), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kThresholdResponseCount.setStatus('mandatory')
sm6kThresholdTimeoutCount = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 5, 1, 1, 31), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kThresholdTimeoutCount.setStatus('mandatory')
sm6kThresholdNoValueCount = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 5, 1, 1, 32), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kThresholdNoValueCount.setStatus('mandatory')
sm6kAnalysisTable = MibTable((1, 3, 6, 1, 4, 1, 2, 6, 12, 6, 1), )
if mibBuilder.loadTexts: sm6kAnalysisTable.setStatus('mandatory')
sm6kAnalysisEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2, 6, 12, 6, 1, 1), ).setIndexNames((0, "SYSMON6K-MIB", "sm6kAnalysisName"))
if mibBuilder.loadTexts: sm6kAnalysisEntry.setStatus('mandatory')
sm6kAnalysisState = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 6, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("disabled", 1), ("invalid", 2), ("enabled", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sm6kAnalysisState.setStatus('mandatory')
sm6kAnalysisName = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 6, 1, 1, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sm6kAnalysisName.setStatus('mandatory')
sm6kAnalysisDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 6, 1, 1, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sm6kAnalysisDescription.setStatus('mandatory')
sm6kAnalysisOwnerID = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 6, 1, 1, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sm6kAnalysisOwnerID.setStatus('mandatory')
sm6kAnalysisLocalRemoteMIBVariableExpression = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 6, 1, 1, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sm6kAnalysisLocalRemoteMIBVariableExpression.setStatus('mandatory')
sm6kAnalysisPollTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 6, 1, 1, 6), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sm6kAnalysisPollTime.setStatus('mandatory')
sm6kAnalysisResultIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 6, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(2, 3, 4))).clone(namedValues=NamedValues(("integer", 2), ("counter", 3), ("gauge", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sm6kAnalysisResultIndex.setStatus('mandatory')
sm6kAnalysisIntegerResult = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 6, 1, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kAnalysisIntegerResult.setStatus('mandatory')
sm6kAnalysisCounterResult = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 6, 1, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kAnalysisCounterResult.setStatus('mandatory')
sm6kAnalysisGaugeResult = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 6, 1, 1, 10), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kAnalysisGaugeResult.setStatus('mandatory')
sm6kAnalysisDisplayStringResult = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 6, 1, 1, 11), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kAnalysisDisplayStringResult.setStatus('mandatory')
sm6kAnalysisReturnCode = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 6, 1, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kAnalysisReturnCode.setStatus('mandatory')
sm6kAnalysisStandardError = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 6, 1, 1, 13), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kAnalysisStandardError.setStatus('mandatory')
sm6kFilterDefaultAction = MibScalar((1, 3, 6, 1, 4, 1, 2, 6, 12, 7, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("sendTraps", 1), ("blockTraps", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sm6kFilterDefaultAction.setStatus('mandatory')
sm6kFilterTrapReception = MibScalar((1, 3, 6, 1, 4, 1, 2, 6, 12, 7, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sm6kFilterTrapReception.setStatus('mandatory')
sm6kFilterTotalTrapsReceived = MibScalar((1, 3, 6, 1, 4, 1, 2, 6, 12, 7, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kFilterTotalTrapsReceived.setStatus('mandatory')
sm6kFilterTable = MibTable((1, 3, 6, 1, 4, 1, 2, 6, 12, 7, 4), )
if mibBuilder.loadTexts: sm6kFilterTable.setStatus('mandatory')
sm6kFilterEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2, 6, 12, 7, 4, 1), ).setIndexNames((0, "SYSMON6K-MIB", "sm6kFilterName"))
if mibBuilder.loadTexts: sm6kFilterEntry.setStatus('mandatory')
sm6kFilterState = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 7, 4, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("disabled", 1), ("invalid", 2), ("enabled", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sm6kFilterState.setStatus('mandatory')
sm6kFilterParticipationState = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 7, 4, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("notEnabled", 1), ("active", 2), ("inactive", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kFilterParticipationState.setStatus('mandatory')
sm6kFilterName = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 7, 4, 1, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sm6kFilterName.setStatus('mandatory')
sm6kFilterDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 7, 4, 1, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sm6kFilterDescription.setStatus('mandatory')
sm6kFilterAction = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 7, 4, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("sendTraps", 1), ("blockTraps", 2), ("throttleTraps", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sm6kFilterAction.setStatus('mandatory')
sm6kFilterEntryEnterpriseExpression = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 7, 4, 1, 6), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sm6kFilterEntryEnterpriseExpression.setStatus('mandatory')
sm6kFilterAgentAddrExpression = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 7, 4, 1, 7), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sm6kFilterAgentAddrExpression.setStatus('mandatory')
sm6kFilterGenericExpression = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 7, 4, 1, 8), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sm6kFilterGenericExpression.setStatus('mandatory')
sm6kFilterSpecificExpression = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 7, 4, 1, 9), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sm6kFilterSpecificExpression.setStatus('mandatory')
sm6kFilterVariableExpression = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 7, 4, 1, 10), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sm6kFilterVariableExpression.setStatus('mandatory')
sm6kFilterTotalTrapsMatched = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 7, 4, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kFilterTotalTrapsMatched.setStatus('mandatory')
sm6kFilterActivationTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 7, 4, 1, 12), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sm6kFilterActivationTime.setStatus('mandatory')
sm6kFilterActivationDayOfWeek = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 7, 4, 1, 13), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sm6kFilterActivationDayOfWeek.setStatus('mandatory')
sm6kFilterDeactivationTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 7, 4, 1, 14), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sm6kFilterDeactivationTime.setStatus('mandatory')
sm6kFilterDeactivationDayOfWeek = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 7, 4, 1, 15), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sm6kFilterDeactivationDayOfWeek.setStatus('mandatory')
sm6kFilterTrapDestinations = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 7, 4, 1, 16), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sm6kFilterTrapDestinations.setStatus('mandatory')
sm6kFilterMatchedCommand = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 7, 4, 1, 17), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sm6kFilterMatchedCommand.setStatus('mandatory')
sm6kFilterMatchedTrapDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 7, 4, 1, 18), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sm6kFilterMatchedTrapDescription.setStatus('mandatory')
sm6kFilterMatchedTrapEnterprise = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 7, 4, 1, 19), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sm6kFilterMatchedTrapEnterprise.setStatus('mandatory')
sm6kFilterMatchedSpecificTrap = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 7, 4, 1, 20), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sm6kFilterMatchedSpecificTrap.setStatus('mandatory')
sm6kFilterThrottleType = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 7, 4, 1, 21), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("sendFirstN", 1), ("sendAfterN", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sm6kFilterThrottleType.setStatus('mandatory')
sm6kFilterThrottleArmTrapCount = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 7, 4, 1, 22), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sm6kFilterThrottleArmTrapCount.setStatus('mandatory')
sm6kFilterThrottleArmedCommand = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 7, 4, 1, 23), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sm6kFilterThrottleArmedCommand.setStatus('mandatory')
sm6kFilterThrottleArmedTrapDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 7, 4, 1, 24), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sm6kFilterThrottleArmedTrapDescription.setStatus('mandatory')
sm6kFilterThrottleArmedTrapEnterprise = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 7, 4, 1, 25), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sm6kFilterThrottleArmedTrapEnterprise.setStatus('mandatory')
sm6kFilterThrottleArmedSpecificTrap = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 7, 4, 1, 26), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sm6kFilterThrottleArmedSpecificTrap.setStatus('mandatory')
sm6kFilterThrottleDisarmTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 7, 4, 1, 27), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sm6kFilterThrottleDisarmTimer.setStatus('mandatory')
sm6kFilterThrottleDisarmTrapCount = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 7, 4, 1, 28), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sm6kFilterThrottleDisarmTrapCount.setStatus('mandatory')
sm6kFilterThrottleDisarmedCommand = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 7, 4, 1, 29), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sm6kFilterThrottleDisarmedCommand.setStatus('mandatory')
sm6kFilterThrottleDisarmedTrapDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 7, 4, 1, 30), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sm6kFilterThrottleDisarmedTrapDescription.setStatus('mandatory')
sm6kFilterThrottleDisarmedTrapEnterprise = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 7, 4, 1, 31), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sm6kFilterThrottleDisarmedTrapEnterprise.setStatus('mandatory')
sm6kFilterThrottleDisarmedSpecificTrap = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 7, 4, 1, 32), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sm6kFilterThrottleDisarmedSpecificTrap.setStatus('mandatory')
sm6kFilterThrottleState = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 7, 4, 1, 33), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disarmed", 1), ("armed", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kFilterThrottleState.setStatus('mandatory')
sm6kFilterThrottleTimeStarted = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 7, 4, 1, 34), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kFilterThrottleTimeStarted.setStatus('mandatory')
sm6kFilterThrottleTrapCount = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 7, 4, 1, 35), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kFilterThrottleTrapCount.setStatus('mandatory')
sm6kAliasTable = MibTable((1, 3, 6, 1, 4, 1, 2, 6, 12, 8, 1), )
if mibBuilder.loadTexts: sm6kAliasTable.setStatus('mandatory')
sm6kAliasEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2, 6, 12, 8, 1, 1), ).setIndexNames((0, "SYSMON6K-MIB", "sm6kAliasName"))
if mibBuilder.loadTexts: sm6kAliasEntry.setStatus('mandatory')
sm6kAliasState = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 8, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(3, 2, 1))).clone(namedValues=NamedValues(("enabled", 3), ("invalid", 2), ("disabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sm6kAliasState.setStatus('mandatory')
sm6kAliasName = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 8, 1, 1, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sm6kAliasName.setStatus('mandatory')
sm6kAliasList = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 8, 1, 1, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sm6kAliasList.setStatus('mandatory')
sm6kAliasResolvedList = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 8, 1, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sm6kAliasResolvedList.setStatus('mandatory')
sm6kTrapDestinationTable = MibTable((1, 3, 6, 1, 4, 1, 2, 6, 12, 9, 1), )
if mibBuilder.loadTexts: sm6kTrapDestinationTable.setStatus('mandatory')
sm6kTrapDestinationEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2, 6, 12, 9, 1, 1), ).setIndexNames((0, "SYSMON6K-MIB", "sm6kTrapDestinationName"))
if mibBuilder.loadTexts: sm6kTrapDestinationEntry.setStatus('mandatory')
sm6kTrapDestinationState = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 9, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("disabled", 1), ("invalid", 2), ("enabled", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sm6kTrapDestinationState.setStatus('mandatory')
sm6kTrapDestinationName = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 9, 1, 1, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sm6kTrapDestinationName.setStatus('mandatory')
sm6kTrapDestinationHost = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 9, 1, 1, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sm6kTrapDestinationHost.setStatus('mandatory')
sm6kTrapDestinationMask = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 9, 1, 1, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sm6kTrapDestinationMask.setStatus('mandatory')
sm6kAdministrationTable = MibTable((1, 3, 6, 1, 4, 1, 2, 6, 12, 10, 1), )
if mibBuilder.loadTexts: sm6kAdministrationTable.setStatus('mandatory')
sm6kAdministrationEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2, 6, 12, 10, 1, 1), ).setIndexNames((0, "SYSMON6K-MIB", "sm6kAdministrationFieldName"))
if mibBuilder.loadTexts: sm6kAdministrationEntry.setStatus('mandatory')
sm6kAdministrationFieldState = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 10, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("valid", 1), ("invalid", 2), ("outDated", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sm6kAdministrationFieldState.setStatus('mandatory')
sm6kAdministrationFieldName = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 10, 1, 1, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sm6kAdministrationFieldName.setStatus('mandatory')
sm6kAdministrationFieldOwner = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 10, 1, 1, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sm6kAdministrationFieldOwner.setStatus('mandatory')
sm6kAdministrationFieldDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 10, 1, 1, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sm6kAdministrationFieldDescription.setStatus('mandatory')
sm6kAdministrationFieldValue = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 12, 10, 1, 1, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sm6kAdministrationFieldValue.setStatus('mandatory')
mibBuilder.exportSymbols("SYSMON6K-MIB", sm6kSystemPagingStatisticsPagesPagedOutMinimum=sm6kSystemPagingStatisticsPagesPagedOutMinimum, sm6kSystemPagingStatisticsPageSteals=sm6kSystemPagingStatisticsPageSteals, sm6kSystemDeviceX25Rx64x127=sm6kSystemDeviceX25Rx64x127, sm6kTrapDestinationName=sm6kTrapDestinationName, sm6kSystemPagingStatisticsDoneIOsMinimum=sm6kSystemPagingStatisticsDoneIOsMinimum, sm6kThresholdLastChangedSession=sm6kThresholdLastChangedSession, sm6kSystemDeviceX25T20Expirations=sm6kSystemDeviceX25T20Expirations, sm6kSystemDeviceEthernetRxQueHigh=sm6kSystemDeviceEthernetRxQueHigh, sm6kSystemDeviceX25TxReserved2=sm6kSystemDeviceX25TxReserved2, sm6kSystemUtilizationCPUIdleMinimum=sm6kSystemUtilizationCPUIdleMinimum, sm6kProgramDataCollectionFileBehavior=sm6kProgramDataCollectionFileBehavior, sm6kResourceUsage=sm6kResourceUsage, sm6kFilterSpecificExpression=sm6kFilterSpecificExpression, sm6kNetworkSessionLifeTimeAverageResponseTime=sm6kNetworkSessionLifeTimeAverageResponseTime, sm6kAliasName=sm6kAliasName, sm6kSystemUtilizationCPUIntervalName=sm6kSystemUtilizationCPUIntervalName, sm6kSystemDeviceX25RouteUserName=sm6kSystemDeviceX25RouteUserName, sm6kSystemSubSystemsName=sm6kSystemSubSystemsName, sm6kAliasResolvedList=sm6kAliasResolvedList, sm6kSystemMaxSystemProcesses=sm6kSystemMaxSystemProcesses, sm6kSystemDeviceX25BadLengthFRx=sm6kSystemDeviceX25BadLengthFRx, sm6kThresholdPollTime=sm6kThresholdPollTime, sm6kSystemUtilizationCPUNumber=sm6kSystemUtilizationCPUNumber, sm6kSystemUtilizationCPUWaitMaximum=sm6kSystemUtilizationCPUWaitMaximum, sm6kNetworkSessionAddressFamily=sm6kNetworkSessionAddressFamily, sm6kSystemDeviceEthernetLateCollision=sm6kSystemDeviceEthernetLateCollision, sm6kSystemDeviceX25SupportLevel=sm6kSystemDeviceX25SupportLevel, sm6kSystemProcessDataResidentSetSize=sm6kSystemProcessDataResidentSetSize, sm6kSystemDeviceX25TxReserved3=sm6kSystemDeviceX25TxReserved3, sm6kSystemProcessPageFaultsNoIO=sm6kSystemProcessPageFaultsNoIO, sm6kAnalysisDescription=sm6kAnalysisDescription, sm6kThresholdReArmCommandToExecute=sm6kThresholdReArmCommandToExecute, sm6kSystemDeviceEthernetCarrierLost=sm6kSystemDeviceEthernetCarrierLost, sm6kSystemDeviceEthernetCurrentAddress=sm6kSystemDeviceEthernetCurrentAddress, sm6kSystemPagingSpace=sm6kSystemPagingSpace, sm6kSystemPagingStatisticsPageReclaimsMaximum=sm6kSystemPagingStatisticsPageReclaimsMaximum, sm6kSystemDeviceTokenRingBeaconStationPhysAddr=sm6kSystemDeviceTokenRingBeaconStationPhysAddr, sm6kSystemDeviceX25SabmFRx=sm6kSystemDeviceX25SabmFRx, sm6kNetworkSessionPacketsReceived=sm6kNetworkSessionPacketsReceived, sm6kSystemDeviceEthernetRxQueNoMbufExt=sm6kSystemDeviceEthernetRxQueNoMbufExt, sm6kSystemProcessArguments=sm6kSystemProcessArguments, sm6kFilterDefaultAction=sm6kFilterDefaultAction, sm6kSystemDeviceX25ResetIndicationPRx=sm6kSystemDeviceX25ResetIndicationPRx, sm6kSystemPagingStatisticsPageOutsFromPagingSpaceMaximum=sm6kSystemPagingStatisticsPageOutsFromPagingSpaceMaximum, sm6kSystemDeviceTokenRingRxQueNoMbuf=sm6kSystemDeviceTokenRingRxQueNoMbuf, sm6kSystemProcessLoginUID=sm6kSystemProcessLoginUID, sm6kSystemProcessEffectiveGroupName=sm6kSystemProcessEffectiveGroupName, sm6kSystemDeviceX25T22Expirations=sm6kSystemDeviceX25T22Expirations, sm6kProgramCompilationDate=sm6kProgramCompilationDate, sm6kThresholdCounterGaugeDataMin=sm6kThresholdCounterGaugeDataMin, sm6kSystemProcessPgrp=sm6kSystemProcessPgrp, sm6kCommandCountToLive=sm6kCommandCountToLive, sm6kSystemFileSystemMounted=sm6kSystemFileSystemMounted, sm6kSystemDeviceEthernetTxByteMcnt=sm6kSystemDeviceEthernetTxByteMcnt, sm6kSystemProcessNsignals=sm6kSystemProcessNsignals, sm6kSystemDeviceX25BadNrFTx=sm6kSystemDeviceX25BadNrFTx, sm6kSystemDeviceX25Rx16x31=sm6kSystemDeviceX25Rx16x31, sm6kSystemPagingStatisticsPageReclaimsMinimum=sm6kSystemPagingStatisticsPageReclaimsMinimum, sm6kSystemPagingSpacePercentUsed=sm6kSystemPagingSpacePercentUsed, sm6kSystemDeviceX25Tx32x63=sm6kSystemDeviceX25Tx32x63, sm6kResourceUsageVcsw=sm6kResourceUsageVcsw, sm6kResourceUsageIdrss=sm6kResourceUsageIdrss, sm6kSystemPagingSpaceName=sm6kSystemPagingSpaceName, ibm=ibm, sm6kAdministrationFieldOwner=sm6kAdministrationFieldOwner, sm6kResourceUsageMaxrss=sm6kResourceUsageMaxrss, sm6kProgramMessagesEntry=sm6kProgramMessagesEntry, sm6kProgramDataCollectionFileName=sm6kProgramDataCollectionFileName, sm6kSystemDeviceEthernetStaQueHigh=sm6kSystemDeviceEthernetStaQueHigh, sm6kSystemDeviceX25Rx2048x4095=sm6kSystemDeviceX25Rx2048x4095, sm6kProgramLogFileName=sm6kProgramLogFileName, sm6kProgramLogMaxFileSize=sm6kProgramLogMaxFileSize, sm6kSystemUtilizationKernelSemaphoresMinimum=sm6kSystemUtilizationKernelSemaphoresMinimum, sm6kCommandIntegerResult=sm6kCommandIntegerResult, sm6kCommandGetStringAndParameters=sm6kCommandGetStringAndParameters, sm6kSystemDeviceX25Installed=sm6kSystemDeviceX25Installed, sm6kProgramControlSetableIpAddress=sm6kProgramControlSetableIpAddress, sm6kCommandOutputRowIndex=sm6kCommandOutputRowIndex, sm6kProgramName=sm6kProgramName, sm6kSystemPagingStatisticsScanClockCyclesMinimum=sm6kSystemPagingStatisticsScanClockCyclesMinimum, sm6kThresholdReArmSpecificTrap=sm6kThresholdReArmSpecificTrap, sm6kThresholdCommandToExecute=sm6kThresholdCommandToExecute, sm6kSystemDeviceEthernetInstalled=sm6kSystemDeviceEthernetInstalled, sm6kSystemDeviceListAttributes=sm6kSystemDeviceListAttributes, sm6kSystemDeviceEthernetReceiveDataOffset=sm6kSystemDeviceEthernetReceiveDataOffset, sm6kSystemProcessSystemTime=sm6kSystemProcessSystemTime, sm6kSystemDeviceX25T26Expirations=sm6kSystemDeviceX25T26Expirations, sm6kSystemProcessNSwap=sm6kSystemProcessNSwap, sm6kSystemDeviceEthernetVPD=sm6kSystemDeviceEthernetVPD, sm6kSystemDeviceEthernetExecCmdErrors=sm6kSystemDeviceEthernetExecCmdErrors, sm6kSystemUtilizationIostatKilobytesTransferRateMaximum=sm6kSystemUtilizationIostatKilobytesTransferRateMaximum, sm6kSystemUtilizationCPUBusyMinimum=sm6kSystemUtilizationCPUBusyMinimum, sm6kAnalysisTable=sm6kAnalysisTable, sm6kSystemDeviceX25Entry=sm6kSystemDeviceX25Entry, sm6kSystemProcessMaxOpenFiles=sm6kSystemProcessMaxOpenFiles, sm6kAlias=sm6kAlias, sm6kSystemAutomaticBootAfterHalt=sm6kSystemAutomaticBootAfterHalt, sm6kSystemDeviceListDiagnostics=sm6kSystemDeviceListDiagnostics, sm6kSystemDeviceX25ClearConfirmPRx=sm6kSystemDeviceX25ClearConfirmPRx, sm6kSystemRebootTimer=sm6kSystemRebootTimer, sm6kThresholdDescription=sm6kThresholdDescription, sm6kSystemUtilizationIostatPercentTimeActiveMinimum=sm6kSystemUtilizationIostatPercentTimeActiveMinimum, sm6kSystemPagingSpaceAuto=sm6kSystemPagingSpaceAuto, sm6kThresholdTable=sm6kThresholdTable, sm6kSystemMachine=sm6kSystemMachine, sm6kSystemProcessCPUTime=sm6kSystemProcessCPUTime, sm6kSystemDeviceEthernetTxErrCnt=sm6kSystemDeviceEthernetTxErrCnt, sm6kSystemDeviceX25DefaultSvcRxPacketSize=sm6kSystemDeviceX25DefaultSvcRxPacketSize, sm6kSystemDeviceX25RxReserved14=sm6kSystemDeviceX25RxReserved14, sm6kSystemProcessPercentMemory=sm6kSystemProcessPercentMemory, sm6kProgramContact=sm6kProgramContact, sm6kSystemDevice=sm6kSystemDevice, sm6kTrapDestinationTable=sm6kTrapDestinationTable, sm6kProgramDataCollection=sm6kProgramDataCollection, sm6kSystemProcessDataVirtualMemorySize=sm6kSystemProcessDataVirtualMemorySize, sm6kProgramUpTime=sm6kProgramUpTime, sm6kCommandTimeOutValue=sm6kCommandTimeOutValue, sm6kResourceUsageEntry=sm6kResourceUsageEntry, sm6kAnalysisOwnerID=sm6kAnalysisOwnerID, sm6kSystemUtilizationIostatTransfersMinimum=sm6kSystemUtilizationIostatTransfersMinimum, sm6kSystemMaxUserProcesses=sm6kSystemMaxUserProcesses, sm6kSystemMemScrub=sm6kSystemMemScrub, sm6kFilterAction=sm6kFilterAction, sm6kSystemDeviceTokenRingPktRejCnt=sm6kSystemDeviceTokenRingPktRejCnt, sm6kSystemUtilizationKernelRawTTYOutMinimum=sm6kSystemUtilizationKernelRawTTYOutMinimum, sm6kSystemDeviceX25CallRequestPTx=sm6kSystemDeviceX25CallRequestPTx, sm6kSystemDeviceX25RouteTable=sm6kSystemDeviceX25RouteTable, sm6kSystemSubSystemsStatusCode=sm6kSystemSubSystemsStatusCode, sm6kFilterTable=sm6kFilterTable, sm6kSystemDeviceEthernetStartRxCmd=sm6kSystemDeviceEthernetStartRxCmd, sm6kSystemPagingStatisticsExtendXPTWaits=sm6kSystemPagingStatisticsExtendXPTWaits, sm6kThresholdCounterGaugeDataAvg=sm6kThresholdCounterGaugeDataAvg, sm6kSystemDeviceX25VcEstablishments=sm6kSystemDeviceX25VcEstablishments, sm6kCommandGaugeResult=sm6kCommandGaugeResult, sm6kSystemDeviceX25CarrierLoss=sm6kSystemDeviceX25CarrierLoss, sm6kSystemDeviceX25Lvl2Connects=sm6kSystemDeviceX25Lvl2Connects, sm6kCommandDescription=sm6kCommandDescription, sm6kAdministrationEntry=sm6kAdministrationEntry, sm6kSystemPagingStatisticsExtendXPTWaitsMinimum=sm6kSystemPagingStatisticsExtendXPTWaitsMinimum, sm6kSystemDeviceEthernetTxFrameLcnt=sm6kSystemDeviceEthernetTxFrameLcnt, sm6kSystemDeviceTokenRingBeaconStationNAUN=sm6kSystemDeviceTokenRingBeaconStationNAUN, sm6kThresholdIntegerDataMax=sm6kThresholdIntegerDataMax, sm6kSystemUtilizationCPUEntry=sm6kSystemUtilizationCPUEntry, sm6kSystemDeviceX25TxReserved13=sm6kSystemDeviceX25TxReserved13, sm6kSystemUtilizationKernelForksMaximum=sm6kSystemUtilizationKernelForksMaximum, sm6kSystemDeviceX25RrFRx=sm6kSystemDeviceX25RrFRx, sm6kThresholdName=sm6kThresholdName, sm6kSystemProcessEffectiveUID=sm6kSystemProcessEffectiveUID, sm6kSystemDeviceX25TxReserved1=sm6kSystemDeviceX25TxReserved1, sm6kSystemDeviceTokenRingSrcClassAuthor=sm6kSystemDeviceTokenRingSrcClassAuthor, sm6kSystemDeviceList=sm6kSystemDeviceList, sm6kSystemDeviceX25InterruptConfirmPTx=sm6kSystemDeviceX25InterruptConfirmPTx, sm6kSystemProcessImageSize=sm6kSystemProcessImageSize, sm6kSystemDeviceX25RouteCount=sm6kSystemDeviceX25RouteCount, sm6kThresholdResponseCount=sm6kThresholdResponseCount, sm6kSystemProcess=sm6kSystemProcess, sm6kThresholdEntry=sm6kThresholdEntry, sm6kFilterThrottleDisarmedSpecificTrap=sm6kFilterThrottleDisarmedSpecificTrap, sm6kTrapDestinationMask=sm6kTrapDestinationMask, sm6kSystemDeviceX25RnrPRx=sm6kSystemDeviceX25RnrPRx, sm6kProgramMessagesRowNumber=sm6kProgramMessagesRowNumber, sm6kSystemReboot=sm6kSystemReboot, sm6kSystemUtilizationKernelRawTTYOutMaximum=sm6kSystemUtilizationKernelRawTTYOutMaximum, sm6kSystemProcessStartTime=sm6kSystemProcessStartTime, sm6kNetworkSessionName=sm6kNetworkSessionName, sm6kSystemDeviceX25RxReserved13=sm6kSystemDeviceX25RxReserved13, sm6kProgramMessages=sm6kProgramMessages, sm6kSystemDeviceTokenRingStaQueHigh=sm6kSystemDeviceTokenRingStaQueHigh, sm6kProgramLog=sm6kProgramLog, sm6kSystemProcessMsgsnd=sm6kSystemProcessMsgsnd, sm6kNetworkSessionLastReceiveTime=sm6kNetworkSessionLastReceiveTime, sm6kSystemDeviceX25RnrFTx=sm6kSystemDeviceX25RnrFTx, sm6kAnalysisLocalRemoteMIBVariableExpression=sm6kAnalysisLocalRemoteMIBVariableExpression, sm6kSystemDeviceEthernetStartRxDmaTimeouts=sm6kSystemDeviceEthernetStartRxDmaTimeouts, sm6kSystemUtilizationKernelBytesWrittenMaximum=sm6kSystemUtilizationKernelBytesWrittenMaximum, sm6kSystemUtilizationKernelSwapQueueMaximum=sm6kSystemUtilizationKernelSwapQueueMaximum, sm6kSystemDeviceTokenRingUpstreamPhysAddr=sm6kSystemDeviceTokenRingUpstreamPhysAddr, sm6kResourceUsageNSignals=sm6kResourceUsageNSignals, sm6kCommandOwnerID=sm6kCommandOwnerID, sm6kSystemProcessOutblocks=sm6kSystemProcessOutblocks, sm6kThresholdState=sm6kThresholdState, sm6kSystemUsers=sm6kSystemUsers, sm6kSystemDeviceTokenRing=sm6kSystemDeviceTokenRing, sm6kSystemDeviceEthernetRxByteLcnt=sm6kSystemDeviceEthernetRxByteLcnt, sm6kSystemSubSystemsTable=sm6kSystemSubSystemsTable, sm6kSystemUtilizationCPUSystemMaximum=sm6kSystemUtilizationCPUSystemMaximum, sm6kSystemDeviceX25DiagnosticPRx=sm6kSystemDeviceX25DiagnosticPRx, sm6kProgramDataCollectionFileSize=sm6kProgramDataCollectionFileSize, sm6kAdministrationFieldValue=sm6kAdministrationFieldValue, sm6kResourceUsageTotalTime=sm6kResourceUsageTotalTime, sm6kSystemPagingStatisticsTable=sm6kSystemPagingStatisticsTable, systemsMonitor6000=systemsMonitor6000, sm6kSystemDeviceX25InterruptPTx=sm6kSystemDeviceX25InterruptPTx, sm6kSystemProcessEntry=sm6kSystemProcessEntry, sm6kSystemUtilizationKernelSystemReads=sm6kSystemUtilizationKernelSystemReads, sm6kAliasTable=sm6kAliasTable, sm6kSystemDeviceX25Number=sm6kSystemDeviceX25Number, sm6kSystemDeviceX25ClearConfirmPTx=sm6kSystemDeviceX25ClearConfirmPTx, sm6kFilterThrottleDisarmTrapCount=sm6kFilterThrottleDisarmTrapCount, sm6kCommandTimeToLive=sm6kCommandTimeToLive, sm6kSystemDeviceX25RxFrameMcnt=sm6kSystemDeviceX25RxFrameMcnt, sm6kThresholdLocalRemoteMIBVariable=sm6kThresholdLocalRemoteMIBVariable, sm6kProgramMessagesText=sm6kProgramMessagesText, sm6kSystemDeviceTokenRingReceiveDataOffset=sm6kSystemDeviceTokenRingReceiveDataOffset, sm6kThresholdIntegerDataAvg=sm6kThresholdIntegerDataAvg, sm6kSystemDeviceEthernet=sm6kSystemDeviceEthernet, sm6kSystemFreePagingSpace=sm6kSystemFreePagingSpace, sm6kSystemPagingSpaceSize=sm6kSystemPagingSpaceSize, sm6kSystemPagingStatisticsPageReclaims=sm6kSystemPagingStatisticsPageReclaims, sm6kSystemUtilizationCPUUserMinimum=sm6kSystemUtilizationCPUUserMinimum, sm6kProgramLogFileBehavior=sm6kProgramLogFileBehavior, sm6kThresholdOwnerID=sm6kThresholdOwnerID, sm6kSystemUtilizationCPUIdleMaximum=sm6kSystemUtilizationCPUIdleMaximum, sm6kSystemUtilizationKernelForksMinimum=sm6kSystemUtilizationKernelForksMinimum, sm6kSystemUsersPID=sm6kSystemUsersPID, sm6kSystemNodeName=sm6kSystemNodeName, sm6kAdministrationFieldDescription=sm6kAdministrationFieldDescription, sm6kSystemDeviceEthernetRxFrameMcnt=sm6kSystemDeviceEthernetRxFrameMcnt, sm6kSystemDeviceTokenRingRxIntrCnt=sm6kSystemDeviceTokenRingRxIntrCnt, sm6kSystemPagingStatisticsIntervalStartTime=sm6kSystemPagingStatisticsIntervalStartTime, sm6kNetworkSessionLastPollAttempt=sm6kNetworkSessionLastPollAttempt, sm6kSystemDeviceEthernetNidTblHigh=sm6kSystemDeviceEthernetNidTblHigh, sm6kSystemDeviceX25RrPRx=sm6kSystemDeviceX25RrPRx, sm6kSystemSubSystemsEntry=sm6kSystemSubSystemsEntry, sm6kSystemProcessUserTime=sm6kSystemProcessUserTime, sm6kSystemMiscellaneousTimeText=sm6kSystemMiscellaneousTimeText, sm6kFilterThrottleDisarmedCommand=sm6kFilterThrottleDisarmedCommand, sm6kFilterEntryEnterpriseExpression=sm6kFilterEntryEnterpriseExpression, sm6kAdministrationTable=sm6kAdministrationTable, sm6kSystemDeviceX25T23Expirations=sm6kSystemDeviceX25T23Expirations, sm6kSystemDeviceX25RegistrationPTx=sm6kSystemDeviceX25RegistrationPTx, sm6kSystemDeviceX25DataPRx=sm6kSystemDeviceX25DataPRx, sm6kProgramSetableTestObjects=sm6kProgramSetableTestObjects, sm6kTrapDestinationState=sm6kTrapDestinationState, sm6kSystemDeviceX25RestartPTx=sm6kSystemDeviceX25RestartPTx, sm6kSystemDeviceX25DiagnosticPTx=sm6kSystemDeviceX25DiagnosticPTx, sm6kSystemDeviceX25RestartConfirmPTx=sm6kSystemDeviceX25RestartConfirmPTx, sm6kSystemPagingSpaceCount=sm6kSystemPagingSpaceCount, sm6kSystemUtilizationCPUTable=sm6kSystemUtilizationCPUTable, sm6kSystemProcessNVcsw=sm6kSystemProcessNVcsw, sm6kSystemProcessTTYd=sm6kSystemProcessTTYd, sm6kSystemUtilizationKernelEntry=sm6kSystemUtilizationKernelEntry, sm6kSystemPagingStatisticsFreeFrameWaits=sm6kSystemPagingStatisticsFreeFrameWaits, sm6kSystemDeviceX25InterruptPRx=sm6kSystemDeviceX25InterruptPRx, sm6kSystemDeviceX25RestartConfirmPRx=sm6kSystemDeviceX25RestartConfirmPRx, sm6kProgramDataCollectionNumFiles=sm6kProgramDataCollectionNumFiles, sm6kThresholdLastResponseTime=sm6kThresholdLastResponseTime, sm6kSystemConfiguration=sm6kSystemConfiguration, sm6kSystemUsersName=sm6kSystemUsersName, sm6kSystemDeviceX25DataPTx=sm6kSystemDeviceX25DataPTx, sm6kSystemMiscellaneousTime=sm6kSystemMiscellaneousTime, sm6kSystemProcessTTYp=sm6kSystemProcessTTYp, sm6kSystemFileSystemName=sm6kSystemFileSystemName, sm6kSystemDeviceX25Table=sm6kSystemDeviceX25Table)
mibBuilder.exportSymbols("SYSMON6K-MIB", sm6kSystemUtilizationKernelPollingInterval=sm6kSystemUtilizationKernelPollingInterval, sm6kFilterAgentAddrExpression=sm6kFilterAgentAddrExpression, sm6kSystemProcessPFlags=sm6kSystemProcessPFlags, sm6kNetworkInformation=sm6kNetworkInformation, sm6kResourceUsageTable=sm6kResourceUsageTable, sm6kSystemCBlockArraySize=sm6kSystemCBlockArraySize, sm6kSystemUtilizationKernelBytesWrittenMinimum=sm6kSystemUtilizationKernelBytesWrittenMinimum, sm6kSystemDeviceX25RxReserved1=sm6kSystemDeviceX25RxReserved1, sm6kSystemUtilizationKernelMessages=sm6kSystemUtilizationKernelMessages, sm6kSystemDeviceX25RxByteMcnt=sm6kSystemDeviceX25RxByteMcnt, sm6kFilterThrottleDisarmedTrapDescription=sm6kFilterThrottleDisarmedTrapDescription, sm6kFilterMatchedSpecificTrap=sm6kFilterMatchedSpecificTrap, sm6kSystemUsersRemoteHost=sm6kSystemUsersRemoteHost, sm6kSystemDeviceTokenRingTxQueHigh=sm6kSystemDeviceTokenRingTxQueHigh, sm6kSystemDeviceX25TxReserved15=sm6kSystemDeviceX25TxReserved15, sm6kSystemPagingStatisticsFreeFrameWaitsMinimum=sm6kSystemPagingStatisticsFreeFrameWaitsMinimum, sm6kSystemDeviceX25IgnoredFTx=sm6kSystemDeviceX25IgnoredFTx, sm6kSystemDeviceTokenRingCurrentAddress=sm6kSystemDeviceTokenRingCurrentAddress, sm6kSystemDeviceTokenRingPktTxCnt=sm6kSystemDeviceTokenRingPktTxCnt, sm6kSystemDeviceTokenRingLastSrcAddr=sm6kSystemDeviceTokenRingLastSrcAddr, sm6kAnalysisDisplayStringResult=sm6kAnalysisDisplayStringResult, sm6kSystemUtilizationKernelIntervalLength=sm6kSystemUtilizationKernelIntervalLength, sm6kSystemPagingStatisticsPagesPagedOutMaximum=sm6kSystemPagingStatisticsPagesPagedOutMaximum, sm6kSystemSubSystemsStatusText=sm6kSystemSubSystemsStatusText, sm6kSystemFileSystemEntry=sm6kSystemFileSystemEntry, sm6kProgramMessagesTable=sm6kProgramMessagesTable, sm6kSystemUtilizationKernelBytesWritten=sm6kSystemUtilizationKernelBytesWritten, sm6kSystemDeviceX25T25Expirations=sm6kSystemDeviceX25T25Expirations, sm6kSystemPagingStatisticsPagesPagedIn=sm6kSystemPagingStatisticsPagesPagedIn, sm6kSystemDeviceTokenRingClear=sm6kSystemDeviceTokenRingClear, sm6kAdministration=sm6kAdministration, sm6kSystemDeviceTokenRingTxByteLcnt=sm6kSystemDeviceTokenRingTxByteLcnt, sm6kNetworkSessionTransmitAttempts=sm6kNetworkSessionTransmitAttempts, sm6kSystemDeviceX25RouteAction=sm6kSystemDeviceX25RouteAction, sm6kSystemFileSystemTable=sm6kSystemFileSystemTable, sm6kSystemDeviceTokenRingLastBeaconType=sm6kSystemDeviceTokenRingLastBeaconType, sm6kSystemDeviceX25ResetConfirmPRx=sm6kSystemDeviceX25ResetConfirmPRx, sm6kSystemDeviceX25RxReserved15=sm6kSystemDeviceX25RxReserved15, sm6kSystemDeviceX25RoutePort=sm6kSystemDeviceX25RoutePort, sm6kNetworkSessionMinimumResponseTime=sm6kNetworkSessionMinimumResponseTime, sm6kProgramLogNumFiles=sm6kProgramLogNumFiles, sm6kThresholdReArmValue=sm6kThresholdReArmValue, sm6kSystemDeviceX25TxTotalPackets=sm6kSystemDeviceX25TxTotalPackets, sm6kAnalysis=sm6kAnalysis, sm6kSystemDeviceTokenRingStaQueOverflow=sm6kSystemDeviceTokenRingStaQueOverflow, sm6kSystemUtilizationCPUWait=sm6kSystemUtilizationCPUWait, sm6kSystemDeviceX25Tx2048x4095=sm6kSystemDeviceX25Tx2048x4095, sm6kSystemUtilizationKernelExecs=sm6kSystemUtilizationKernelExecs, sm6kSystemDeviceTokenRingEntry=sm6kSystemDeviceTokenRingEntry, sm6kSystemUtilizationKernelIntervalStartTime=sm6kSystemUtilizationKernelIntervalStartTime, sm6kSystemDeviceX25ResetRequestPTx=sm6kSystemDeviceX25ResetRequestPTx, sm6kSystemDeviceEthernetOverrun=sm6kSystemDeviceEthernetOverrun, sm6kSystemUtilization=sm6kSystemUtilization, sm6kSystemPagingStatisticsIntervalLength=sm6kSystemPagingStatisticsIntervalLength, sm6kSystemDeviceEthernetCRCErr=sm6kSystemDeviceEthernetCRCErr, sm6kSystemProcessState=sm6kSystemProcessState, sm6kFilterThrottleArmTrapCount=sm6kFilterThrottleArmTrapCount, sm6kSystemDeviceEthernetRxQueOverflow=sm6kSystemDeviceEthernetRxQueOverflow, sm6kSystemDescription=sm6kSystemDescription, sm6kSystemDeviceTokenRingTxIntrCnt=sm6kSystemDeviceTokenRingTxIntrCnt, sm6kFilterActivationTime=sm6kFilterActivationTime, sm6kSystemFileSystem=sm6kSystemFileSystem, sm6kSystemPagingStatisticsPageOutsFromPagingSpaceMinimum=sm6kSystemPagingStatisticsPageOutsFromPagingSpaceMinimum, sm6kSystemSubSystemsPID=sm6kSystemSubSystemsPID, sm6kNetworkSessionLastStateChange=sm6kNetworkSessionLastStateChange, sm6kSystemPagingInformation=sm6kSystemPagingInformation, sm6kSystemFreePagingSpaceUntilKillPercent=sm6kSystemFreePagingSpaceUntilKillPercent, sm6kAdministrationFieldName=sm6kAdministrationFieldName, sm6kProgramData=sm6kProgramData, sm6kSystemUsersLine=sm6kSystemUsersLine, sm6kSystemPagingSpaceType=sm6kSystemPagingSpaceType, sm6kSystemDeviceX25RxUnknownSize=sm6kSystemDeviceX25RxUnknownSize, sm6kSystemMaxPout=sm6kSystemMaxPout, sm6kSystemDeviceTokenRingWdtLost=sm6kSystemDeviceTokenRingWdtLost, sm6kSystemUtilizationCPUUserMaximum=sm6kSystemUtilizationCPUUserMaximum, sm6kCommandOutputResultIndex=sm6kCommandOutputResultIndex, sm6kSystemDeviceX25T24Expirations=sm6kSystemDeviceX25T24Expirations, sm6kSystemPagingStatisticsPendingIOWaitsMaximum=sm6kSystemPagingStatisticsPendingIOWaitsMaximum, sm6kProgramMessagesTimeStamp=sm6kProgramMessagesTimeStamp, sm6kSystemDeviceTokenRingRxByteMcnt=sm6kSystemDeviceTokenRingRxByteMcnt, sm6kSystemDeviceX25TxFrameMcnt=sm6kSystemDeviceX25TxFrameMcnt, sm6kThresholdCondition=sm6kThresholdCondition, sm6kFilter=sm6kFilter, sm6kSystemDeviceX25MaxRxPacketSize=sm6kSystemDeviceX25MaxRxPacketSize, sm6kSystemUtilizationKernelSystemWritesMaximum=sm6kSystemUtilizationKernelSystemWritesMaximum, sm6kSystemDeviceEthernetBroadwrap=sm6kSystemDeviceEthernetBroadwrap, sm6kFilterGenericExpression=sm6kFilterGenericExpression, sm6kNetworkSessionLastTransmitTime=sm6kNetworkSessionLastTransmitTime, sm6kFilterThrottleArmedTrapDescription=sm6kFilterThrottleArmedTrapDescription, sm6kSystemMaxMbufs=sm6kSystemMaxMbufs, sm6kSystemDeviceX25ConnectTime=sm6kSystemDeviceX25ConnectTime, sm6kSystemProcessInblocks=sm6kSystemProcessInblocks, sm6kSystemDeviceTokenRingTxAccessPriority=sm6kSystemDeviceTokenRingTxAccessPriority, sm6kSystemDeviceX25RxQueHigh=sm6kSystemDeviceX25RxQueHigh, sm6kProgramControlSetableOctetString=sm6kProgramControlSetableOctetString, sm6kFilterThrottleDisarmedTrapEnterprise=sm6kFilterThrottleDisarmedTrapEnterprise, sm6kFilterDescription=sm6kFilterDescription, sm6kSystemDeviceEthernetHardwareAddress=sm6kSystemDeviceEthernetHardwareAddress, sm6kSystemDeviceX25Clear=sm6kSystemDeviceX25Clear, sm6kSystemDeviceX25T1Expirations=sm6kSystemDeviceX25T1Expirations, sm6kFilterState=sm6kFilterState, sm6kSystemDeviceX25RxFrameLcnt=sm6kSystemDeviceX25RxFrameLcnt, sm6kSystemPagingStatisticsPageInsFromPagingSpaceMaximum=sm6kSystemPagingStatisticsPageInsFromPagingSpaceMaximum, sm6kSystemDeviceTokenRingNumber=sm6kSystemDeviceTokenRingNumber, sm6kSystemDeviceListLocation=sm6kSystemDeviceListLocation, sm6kNetworkSessionCurrentState=sm6kNetworkSessionCurrentState, sm6kSystemDeviceEthernetAdptRecEol=sm6kSystemDeviceEthernetAdptRecEol, sm6kSystemDeviceX25RxReserved2=sm6kSystemDeviceX25RxReserved2, sm6kThresholdStandardError=sm6kThresholdStandardError, sm6kSystemPagingSpaceVolumeGroup=sm6kSystemPagingSpaceVolumeGroup, sm6kFilterTotalTrapsReceived=sm6kFilterTotalTrapsReceived, sm6kSystemDeviceX25RouteNumber=sm6kSystemDeviceX25RouteNumber, sm6kSystemPagingStatisticsPollingInterval=sm6kSystemPagingStatisticsPollingInterval, sm6kSystemDeviceTokenRingPktTxErrCnt=sm6kSystemDeviceTokenRingPktTxErrCnt, sm6kSystemDeviceEthernetRxQueNoMbuf=sm6kSystemDeviceEthernetRxQueNoMbuf, sm6kSystemUtilizationIostatKilobytesTransferRateMinimum=sm6kSystemUtilizationIostatKilobytesTransferRateMinimum, sm6kFilterTotalTrapsMatched=sm6kFilterTotalTrapsMatched, sm6kFilterDeactivationTime=sm6kFilterDeactivationTime, sm6kThresholdReArmEnterprise=sm6kThresholdReArmEnterprise, sm6kSystemProcessMaxOpenStreams=sm6kSystemProcessMaxOpenStreams, sm6kSystemDeviceX25RouteEntryName=sm6kSystemDeviceX25RouteEntryName, sm6kSystemDeviceTokenRingLastAttenCode=sm6kSystemDeviceTokenRingLastAttenCode, sm6kThresholdLastValue=sm6kThresholdLastValue, sm6kFilterMatchedCommand=sm6kFilterMatchedCommand, sm6kSystemDeviceTokenRingPktAccCnt=sm6kSystemDeviceTokenRingPktAccCnt, sm6kSystemDeviceX25ClearRequestPTx=sm6kSystemDeviceX25ClearRequestPTx, sm6kSystemUtilizationKernelBytesRead=sm6kSystemUtilizationKernelBytesRead, sm6kSystemDeviceX25RegistrationConfirmPRx=sm6kSystemDeviceX25RegistrationConfirmPRx, sm6kSystemDeviceX25T28Expirations=sm6kSystemDeviceX25T28Expirations, sm6kProgramControlForkCacheTime=sm6kProgramControlForkCacheTime, sm6kSystemUtilizationIostatKilobytesRead=sm6kSystemUtilizationIostatKilobytesRead, sm6kSystemUtilizationIostatKilobytesReadMaximum=sm6kSystemUtilizationIostatKilobytesReadMaximum, sm6kSystemProcessWait=sm6kSystemProcessWait, sm6kSystemUtilizationKernelBytesReadMaximum=sm6kSystemUtilizationKernelBytesReadMaximum, sm6kSystemUtilizationIostatKilobytesTransferRate=sm6kSystemUtilizationIostatKilobytesTransferRate, sm6kSystemDeviceX25T21Expirations=sm6kSystemDeviceX25T21Expirations, sm6kResourceUsageIcsw=sm6kResourceUsageIcsw, sm6kSystemDeviceEthernetTxByteLcnt=sm6kSystemDeviceEthernetTxByteLcnt, sm6kSystemDeviceX25XidFRx=sm6kSystemDeviceX25XidFRx, sm6kSystemDeviceX25Tx16x31=sm6kSystemDeviceX25Tx16x31, sm6kSystemPagingStatisticsPageInsFromPagingSpaceMinimum=sm6kSystemPagingStatisticsPageInsFromPagingSpaceMinimum, sm6kCommandCounterResult=sm6kCommandCounterResult, sm6kSystemDeviceX25DefaultSvcTxPacketSize=sm6kSystemDeviceX25DefaultSvcTxPacketSize, sm6kFilterTrapDestinations=sm6kFilterTrapDestinations, sm6kSystemUtilizationKernelSystemWrites=sm6kSystemUtilizationKernelSystemWrites, sm6kFilterTrapReception=sm6kFilterTrapReception, sm6kSystemDeviceTokenRingBroadwrap=sm6kSystemDeviceTokenRingBroadwrap, sm6kSystemDeviceX25StaQueHigh=sm6kSystemDeviceX25StaQueHigh, sm6kResourceUsageName=sm6kResourceUsageName, sm6kSystemDeviceX25Tx256x511=sm6kSystemDeviceX25Tx256x511, sm6kProgramControlNonForkCacheTime=sm6kProgramControlNonForkCacheTime, sm6kSystemDeviceX25Rx512x1023=sm6kSystemDeviceX25Rx512x1023, sm6kAnalysisStandardError=sm6kAnalysisStandardError, sm6kThresholdDataSamples=sm6kThresholdDataSamples, sm6kSystemProcessMsgrcv=sm6kSystemProcessMsgrcv, sm6kSystemDeviceTokenRingBeaconRxType=sm6kSystemDeviceTokenRingBeaconRxType, sm6kSystemDeviceEthernetNoResources=sm6kSystemDeviceEthernetNoResources, sm6kProgramMessagesTime=sm6kProgramMessagesTime, sm6kSystemUtilizationKernelSemaphoresMaximum=sm6kSystemUtilizationKernelSemaphoresMaximum, sm6kSystemDeviceTokenRingTxFrameMcnt=sm6kSystemDeviceTokenRingTxFrameMcnt, sm6kSystemDeviceTokenRingTxErrCnt=sm6kSystemDeviceTokenRingTxErrCnt, sm6kSystemDeviceX25SarmDmFRx=sm6kSystemDeviceX25SarmDmFRx, sm6kFilterVariableExpression=sm6kFilterVariableExpression, sm6kSystemDeviceEthernetTxTimeouts=sm6kSystemDeviceEthernetTxTimeouts, sm6kSystemDeviceEthernetTxQueHigh=sm6kSystemDeviceEthernetTxQueHigh, sm6kSystemDeviceX25Tx1024x2047=sm6kSystemDeviceX25Tx1024x2047, sm6kSystemUtilizationKernelProcessOverflowMinimum=sm6kSystemUtilizationKernelProcessOverflowMinimum, sm6kSystemProcessCPU=sm6kSystemProcessCPU, sm6kSystemDeviceTokenRingFrameCorrSave=sm6kSystemDeviceTokenRingFrameCorrSave, sm6kTrapDestinationHost=sm6kTrapDestinationHost, sm6kSystemUtilizationCPUIdle=sm6kSystemUtilizationCPUIdle, sm6kSystemUtilizationKernelContextSwitchesMinimum=sm6kSystemUtilizationKernelContextSwitchesMinimum, sm6kSystemUtilizationIostatKilobytesReadMinimum=sm6kSystemUtilizationIostatKilobytesReadMinimum, sm6kNetworkSessionRecentAverageResponseTime=sm6kNetworkSessionRecentAverageResponseTime, sm6kSystemPagingSpacePhysicalVolume=sm6kSystemPagingSpacePhysicalVolume, sm6kSystemUtilizationIostat=sm6kSystemUtilizationIostat, sm6kSystemDeviceX25RxTotalPackets=sm6kSystemDeviceX25RxTotalPackets, sm6kProgramNumber=sm6kProgramNumber, sm6kSystemUtilizationKernelTable=sm6kSystemUtilizationKernelTable, sm6kSystemUtilizationIostatEntry=sm6kSystemUtilizationIostatEntry, sm6kSystemUtilizationKernel=sm6kSystemUtilizationKernel, sm6kSystemInformation=sm6kSystemInformation, sm6kSystemDeviceX25ResetConfirmPTx=sm6kSystemDeviceX25ResetConfirmPTx, sm6kSystemDeviceX25TxUnknownSize=sm6kSystemDeviceX25TxUnknownSize, sm6kSystemUtilizationKernelSystemWritesMinimum=sm6kSystemUtilizationKernelSystemWritesMinimum, sm6kNetworkSessionTable=sm6kNetworkSessionTable, sm6kFilterMatchedTrapEnterprise=sm6kFilterMatchedTrapEnterprise, sm6kAliasState=sm6kAliasState, sm6kSystemPagingStatisticsPageStealsMaximum=sm6kSystemPagingStatisticsPageStealsMaximum, sm6kSystemDeviceTokenRingRxFrameMcnt=sm6kSystemDeviceTokenRingRxFrameMcnt, sm6kSystemDeviceX25ErrorPTx=sm6kSystemDeviceX25ErrorPTx, sm6kSystemProcessLoginUser=sm6kSystemProcessLoginUser, sm6kThresholdValue=sm6kThresholdValue, sm6kSystemDeviceX25Tx64x127=sm6kSystemDeviceX25Tx64x127, sm6kSystemProcessSUID=sm6kSystemProcessSUID, sm6kSystemPageSize=sm6kSystemPageSize, sm6kCommandName=sm6kCommandName, sm6kSystemDeviceX25UnknownFTx=sm6kSystemDeviceX25UnknownFTx, sm6kAnalysisPollTime=sm6kAnalysisPollTime, sm6kSystemDeviceX25ReceiveDataTransferOffset=sm6kSystemDeviceX25ReceiveDataTransferOffset, sm6kSystemDeviceX25Tx512x1023=sm6kSystemDeviceX25Tx512x1023, sm6kSystemDeviceX25RouteCalledAddressExt=sm6kSystemDeviceX25RouteCalledAddressExt, sm6kSystemDeviceX25=sm6kSystemDeviceX25, sm6kSystemMiscellaneousFreeSpace=sm6kSystemMiscellaneousFreeSpace, sm6kResourceUsageIxrss=sm6kResourceUsageIxrss, sm6kThresholdArmEnterprise=sm6kThresholdArmEnterprise, sm6kSystemDeviceTokenRingRxQueNoMbufExt=sm6kSystemDeviceTokenRingRxQueNoMbufExt, sm6kCommandDisplayStringResult=sm6kCommandDisplayStringResult, sm6kSystemProcessNIvcsw=sm6kSystemProcessNIvcsw, sm6kSystemDeviceX25Tx0x15=sm6kSystemDeviceX25Tx0x15, sm6kSystemDeviceListName=sm6kSystemDeviceListName, sm6kSystemDeviceX25IgnoredFRx=sm6kSystemDeviceX25IgnoredFRx, sm6kSystemUsersTable=sm6kSystemUsersTable, sm6kTrapDestination=sm6kTrapDestination, sm6kSystemPagingStatisticsPageFaultsMaximum=sm6kSystemPagingStatisticsPageFaultsMaximum, sm6kFilterDeactivationDayOfWeek=sm6kFilterDeactivationDayOfWeek, sm6kSystemDeviceTokenRingLastPollAddr=sm6kSystemDeviceTokenRingLastPollAddr, sm6kSystemUtilizationCPUIntervalLength=sm6kSystemUtilizationCPUIntervalLength, sm6kSystemFreePagingSpaceUntilKill=sm6kSystemFreePagingSpaceUntilKill, sm6kSystemUtilizationIostatTable=sm6kSystemUtilizationIostatTable, sm6kSystemDeviceX25RegistrationPRx=sm6kSystemDeviceX25RegistrationPRx, sm6kSystemPagingStatisticsEntry=sm6kSystemPagingStatisticsEntry, sm6kSystemProcessDescriptorTableSize=sm6kSystemProcessDescriptorTableSize, sm6kSystemDeviceX25Address=sm6kSystemDeviceX25Address, sm6kSystemDeviceX25SabmFTx=sm6kSystemDeviceX25SabmFTx, sm6kSystemFileSystemFileSystem=sm6kSystemFileSystemFileSystem, sm6kProgramLogMask=sm6kProgramLogMask, sm6kSystemDeviceTokenRingVPD=sm6kSystemDeviceTokenRingVPD, sm6kSystemProcessTable=sm6kSystemProcessTable, sm6kSystemDeviceEthernetHostRecPkt=sm6kSystemDeviceEthernetHostRecPkt, sm6kSystemPagingStatisticsScanClockCycles=sm6kSystemPagingStatisticsScanClockCycles, sm6kResourceUsageMinflt=sm6kResourceUsageMinflt, sm6kAnalysisState=sm6kAnalysisState, sm6kSystemUtilizationKernelForks=sm6kSystemUtilizationKernelForks, sm6kResourceUsageMsgrcv=sm6kResourceUsageMsgrcv, sm6kSystemDeviceX25RrFTx=sm6kSystemDeviceX25RrFTx, sm6kAnalysisResultIndex=sm6kAnalysisResultIndex, sm6kCommandExecutionReturnCode=sm6kCommandExecutionReturnCode, sm6kSystemDeviceX25FrmrFRx=sm6kSystemDeviceX25FrmrFRx, sm6kSystemPagingStatisticsPageScansMinimum=sm6kSystemPagingStatisticsPageScansMinimum, sm6kSystemDeviceX25InfoFRx=sm6kSystemDeviceX25InfoFRx, sm6kSystemPagingStatisticsPageFaults=sm6kSystemPagingStatisticsPageFaults, sm6kSystemPagingStatisticsDoneIOs=sm6kSystemPagingStatisticsDoneIOs, sm6kSystemUtilizationKernelExecsMaximum=sm6kSystemUtilizationKernelExecsMaximum, sm6kSystemFileSystemInodesPercentUsed=sm6kSystemFileSystemInodesPercentUsed, sm6kSystemDeviceX25DiscFRx=sm6kSystemDeviceX25DiscFRx, sm6kSystemUtilizationKernelRunQueueMinimum=sm6kSystemUtilizationKernelRunQueueMinimum, sm6kSystemPagingStatisticsPagesPagedInMaximum=sm6kSystemPagingStatisticsPagesPagedInMaximum, sm6kThreshold=sm6kThreshold, sm6kSystemDeviceEthernetHostRecEol=sm6kSystemDeviceEthernetHostRecEol, sm6kSystemRecordLockTableSize=sm6kSystemRecordLockTableSize, sm6kProgramControlSetableCounter=sm6kProgramControlSetableCounter, sm6kThresholdSpecificTrap=sm6kThresholdSpecificTrap, sm6kSystemProcessEffectiveGID=sm6kSystemProcessEffectiveGID)
mibBuilder.exportSymbols("SYSMON6K-MIB", sm6kSystemUtilizationKernelSwapQueueMinimum=sm6kSystemUtilizationKernelSwapQueueMinimum, sm6kSystemDeviceTokenRingTxFrameLcnt=sm6kSystemDeviceTokenRingTxFrameLcnt, sm6kSystemDeviceX25RxByteLcnt=sm6kSystemDeviceX25RxByteLcnt, sm6kSystemPagingStatisticsName=sm6kSystemPagingStatisticsName, sm6kSystemUsersEntry=sm6kSystemUsersEntry, sm6kSystemDeviceListInstalled=sm6kSystemDeviceListInstalled, sm6kAliasEntry=sm6kAliasEntry, sm6kResourceUsageUserTime=sm6kResourceUsageUserTime, sm6kAdministrationFieldState=sm6kAdministrationFieldState, sm6kSystemUtilizationKernelContextSwitches=sm6kSystemUtilizationKernelContextSwitches, sm6kSystemDeviceX25RnrFRx=sm6kSystemDeviceX25RnrFRx, sm6kSystemUtilizationIostatPercentTimeActive=sm6kSystemUtilizationIostatPercentTimeActive, sm6kAnalysisGaugeResult=sm6kAnalysisGaugeResult, sm6kSystemUtilizationKernelMessagesMaximum=sm6kSystemUtilizationKernelMessagesMaximum, sm6kSystemPagingSpaceActive=sm6kSystemPagingSpaceActive, sm6kSystemPagingStatisticsPagesPagedOut=sm6kSystemPagingStatisticsPagesPagedOut, sm6kSystemProcessPriority=sm6kSystemProcessPriority, sm6kFilterName=sm6kFilterName, sm6kSystemUtilizationKernelRawTTYOut=sm6kSystemUtilizationKernelRawTTYOut, sm6kSystemSysName=sm6kSystemSysName, sm6kSystemDeviceTokenRingInstalled=sm6kSystemDeviceTokenRingInstalled, sm6kSystemPagingSpaceTable=sm6kSystemPagingSpaceTable, sm6kSystemUtilizationKernelRunQueue=sm6kSystemUtilizationKernelRunQueue, sm6kSystemUtilizationKernelSystemCallsMaximum=sm6kSystemUtilizationKernelSystemCallsMaximum, sm6kSystemDeviceX25UaFTx=sm6kSystemDeviceX25UaFTx, sm6kSystemDeviceEthernetWdtLost=sm6kSystemDeviceEthernetWdtLost, sm6kCommandState=sm6kCommandState, sm6kSystemDeviceX25Lvl2Disconnects=sm6kSystemDeviceX25Lvl2Disconnects, sm6kSystemDeviceTokenRingLastMajorVector=sm6kSystemDeviceTokenRingLastMajorVector, sm6kSystemDeviceX25SupportedFacilities=sm6kSystemDeviceX25SupportedFacilities, sm6kSystemPagingStatisticsPageInsFromPagingSpace=sm6kSystemPagingStatisticsPageInsFromPagingSpace, sm6kSystemUtilizationCPUSystem=sm6kSystemUtilizationCPUSystem, sm6kCommandEntry=sm6kCommandEntry, sm6kSystemDeviceTokenRingOvfloPktCnt=sm6kSystemDeviceTokenRingOvfloPktCnt, sm6kFilterThrottleTrapCount=sm6kFilterThrottleTrapCount, sm6kSystemDeviceX25RouteCallingAddress=sm6kSystemDeviceX25RouteCallingAddress, sm6kSystemPagingStatisticsStartIOsMaximum=sm6kSystemPagingStatisticsStartIOsMaximum, sm6kSystemUtilizationKernelSwapQueue=sm6kSystemUtilizationKernelSwapQueue, sm6kSystemDeviceX25MemoryWindowSize=sm6kSystemDeviceX25MemoryWindowSize, sm6kSystemDeviceTokenRingSoftErrorTimerVal=sm6kSystemDeviceTokenRingSoftErrorTimerVal, sm6kProgramLogFileSize=sm6kProgramLogFileSize, sm6kProgramTimeout=sm6kProgramTimeout, sm6kResourceUsageIsrss=sm6kResourceUsageIsrss, sm6kSystemUsersTime=sm6kSystemUsersTime, sm6kSystemRelease=sm6kSystemRelease, sm6kSystemDeviceX25Rx1024x2047=sm6kSystemDeviceX25Rx1024x2047, sm6kSystemVersion=sm6kSystemVersion, sm6kSystemUtilizationIostatName=sm6kSystemUtilizationIostatName, sm6kSystemDeviceTokenRingNidTblHigh=sm6kSystemDeviceTokenRingNidTblHigh, sm6kAnalysisCounterResult=sm6kAnalysisCounterResult, sm6kSystemPagingStatisticsPendingIOWaits=sm6kSystemPagingStatisticsPendingIOWaits, sm6kSystemPagingStatisticsPageScans=sm6kSystemPagingStatisticsPageScans, sm6kSystemDeviceX25SarmDmFTx=sm6kSystemDeviceX25SarmDmFTx, sm6kSystemPagingStatisticsScanClockCyclesMaximum=sm6kSystemPagingStatisticsScanClockCyclesMaximum, sm6kSystemDeviceX25MaxTxPacketSize=sm6kSystemDeviceX25MaxTxPacketSize, sm6kSystemProcessAdspace=sm6kSystemProcessAdspace, sm6kSystemMiscellaneous=sm6kSystemMiscellaneous, sm6kSystemDeviceX25T4Expirations=sm6kSystemDeviceX25T4Expirations, sm6kSystemUtilizationKernelProcessOverflow=sm6kSystemUtilizationKernelProcessOverflow, sm6kAnalysisIntegerResult=sm6kAnalysisIntegerResult, sm6kSystemDeviceEthernetRxFrameLcnt=sm6kSystemDeviceEthernetRxFrameLcnt, sm6kThresholdNoValueCount=sm6kThresholdNoValueCount, sm6kSystemDeviceX25BadNrFRx=sm6kSystemDeviceX25BadNrFRx, sm6kSystemDeviceTokenRingIntrLost=sm6kSystemDeviceTokenRingIntrLost, sm6kSystemDeviceX25TxReserved14=sm6kSystemDeviceX25TxReserved14, sm6kSystemUtilizationKernelExecsMinimum=sm6kSystemUtilizationKernelExecsMinimum, sm6kSystemDeviceTokenRingHardwareAddress=sm6kSystemDeviceTokenRingHardwareAddress, ibmProd=ibmProd, sm6kSystemUtilizationCPUIntervalStartTime=sm6kSystemUtilizationCPUIntervalStartTime, sm6kThresholdReArmCondition=sm6kThresholdReArmCondition, sm6kSystemPagingStatistics=sm6kSystemPagingStatistics, sm6kSystemFileSystemRemote=sm6kSystemFileSystemRemote, sm6kSystemSubSystemsStatusDescription=sm6kSystemSubSystemsStatusDescription, sm6kProgramDataCollectionMaxFileSize=sm6kProgramDataCollectionMaxFileSize, sm6kSystemMiscellaneousRandom=sm6kSystemMiscellaneousRandom, sm6kThresholdIntegerDataMin=sm6kThresholdIntegerDataMin, sm6kSystemDeviceX25FrmrFTx=sm6kSystemDeviceX25FrmrFTx, sm6kSystemDeviceTokenRingUpstreamNodeAddr=sm6kSystemDeviceTokenRingUpstreamNodeAddr, sm6kSystemDeviceX25RxReserved3=sm6kSystemDeviceX25RxReserved3, sm6kProgramDescription=sm6kProgramDescription, sm6kProgramControlLocalConfigurationFile=sm6kProgramControlLocalConfigurationFile, sm6kSystemDeviceEthernetDiagOverflow=sm6kSystemDeviceEthernetDiagOverflow, sm6kSystemUtilizationCPUCount=sm6kSystemUtilizationCPUCount, sm6kSystemDeviceX25RoutePriority=sm6kSystemDeviceX25RoutePriority, sm6kSystemUtilizationIostatKilobytesWritten=sm6kSystemUtilizationIostatKilobytesWritten, sm6kSystemDeviceX25TxErrCnt=sm6kSystemDeviceX25TxErrCnt, sm6kSystemDeviceX25Rx256x511=sm6kSystemDeviceX25Rx256x511, sm6kFilterThrottleType=sm6kFilterThrottleType, sm6kSystemUtilizationIostatKilobytesWrittenMinimum=sm6kSystemUtilizationIostatKilobytesWrittenMinimum, sm6kSystemDeviceX25BadLengthFTx=sm6kSystemDeviceX25BadLengthFTx, sm6kSystemUtilizationKernelSystemCalls=sm6kSystemUtilizationKernelSystemCalls, sm6kFilterThrottleArmedCommand=sm6kFilterThrottleArmedCommand, sm6kSystemPagingStatisticsPageStealsMinimum=sm6kSystemPagingStatisticsPageStealsMinimum, sm6kSystemDeviceX25UnknownFRx=sm6kSystemDeviceX25UnknownFRx, sm6kSystemDeviceEthernetRxByteMcnt=sm6kSystemDeviceEthernetRxByteMcnt, sm6kSystemUtilizationCPU=sm6kSystemUtilizationCPU, sm6kSystemProcessPID=sm6kSystemProcessPID, sm6kSystemSubSystemsCount=sm6kSystemSubSystemsCount, sm6kSystemDeviceEthernetClear=sm6kSystemDeviceEthernetClear, sm6kCommand=sm6kCommand, sm6kSystemDiskIOHistory=sm6kSystemDiskIOHistory, sm6kResourceUsageMsgsnd=sm6kResourceUsageMsgsnd, sm6kSystemDeviceX25RrPTx=sm6kSystemDeviceX25RrPTx, sm6kSystemUtilizationKernelRunQueueMaximum=sm6kSystemUtilizationKernelRunQueueMaximum, sm6kCommandTable=sm6kCommandTable, sm6kSystemProcessNice=sm6kSystemProcessNice, sm6kResourceUsageOutBlock=sm6kResourceUsageOutBlock, sm6kSystemPagingSpaceEntry=sm6kSystemPagingSpaceEntry, sm6kSystemPagingStatisticsFreeFrameWaitsMaximum=sm6kSystemPagingStatisticsFreeFrameWaitsMaximum, sm6kSystemDeviceX25XidFTx=sm6kSystemDeviceX25XidFTx, sm6kSystemUtilizationCPUBusyMaximum=sm6kSystemUtilizationCPUBusyMaximum, sm6kFilterActivationDayOfWeek=sm6kFilterActivationDayOfWeek, sm6kSystemDeviceTokenRingRingStatus=sm6kSystemDeviceTokenRingRingStatus, sm6kSystemUtilizationIostatTransfersMaximum=sm6kSystemUtilizationIostatTransfersMaximum, sm6kSystemDeviceTokenRingRxQueOverflow=sm6kSystemDeviceTokenRingRxQueOverflow, sm6kSystemDeviceTokenRingRxByteLcnt=sm6kSystemDeviceTokenRingRxByteLcnt, sm6kSystemDeviceX25CallAcceptPTx=sm6kSystemDeviceX25CallAcceptPTx, sm6kSystemDeviceX25RouteCalledUserData=sm6kSystemDeviceX25RouteCalledUserData, sm6kSystemDeviceTokenRingRxErrCnt=sm6kSystemDeviceTokenRingRxErrCnt, sm6kAliasList=sm6kAliasList, sm6kSystemFileSystemPercentUsed=sm6kSystemFileSystemPercentUsed, sm6kSystemProcessCount=sm6kSystemProcessCount, sm6kSystemDeviceTokenRingFrontEndTimerVal=sm6kSystemDeviceTokenRingFrontEndTimerVal, sm6kSystemProcessSignal=sm6kSystemProcessSignal, sm6kSystemDeviceX25IncomingCallPRx=sm6kSystemDeviceX25IncomingCallPRx, sm6kSystemPagingStatisticsPagesPagedInMinimum=sm6kSystemPagingStatisticsPagesPagedInMinimum, sm6kSystemPagingStatisticsStartIOs=sm6kSystemPagingStatisticsStartIOs, sm6kTrapDestinationEntry=sm6kTrapDestinationEntry, sm6kCommandOutputColumnIndex=sm6kCommandOutputColumnIndex, sm6kSystemUtilizationCPUWaitMinimum=sm6kSystemUtilizationCPUWaitMinimum, sm6kSystemUtilizationIostatIntervalLength=sm6kSystemUtilizationIostatIntervalLength, sm6kFilterMatchedTrapDescription=sm6kFilterMatchedTrapDescription, sm6kAnalysisEntry=sm6kAnalysisEntry, sm6kSystemDeviceEthernetTxFrameMcnt=sm6kSystemDeviceEthernetTxFrameMcnt, sm6kSystemDeviceX25CallConnectedPRx=sm6kSystemDeviceX25CallConnectedPRx, sm6kThresholdTimeoutCount=sm6kThresholdTimeoutCount, sm6kFilterThrottleArmedSpecificTrap=sm6kFilterThrottleArmedSpecificTrap, sm6kSystemPagingStatisticsPageOutsFromPagingSpace=sm6kSystemPagingStatisticsPageOutsFromPagingSpace, sm6kSystemPagingStatisticsPendingIOWaitsMinimum=sm6kSystemPagingStatisticsPendingIOWaitsMinimum, sm6kProgramRetryCount=sm6kProgramRetryCount, sm6kSystemDeviceEthernetEntry=sm6kSystemDeviceEthernetEntry, sm6kSystemDeviceX25InfoFTx=sm6kSystemDeviceX25InfoFTx, sm6kSystemDeviceTokenRingRxQueHigh=sm6kSystemDeviceTokenRingRxQueHigh, sm6kSystemDeviceX25DiscFTx=sm6kSystemDeviceX25DiscFTx, sm6kSystemUtilizationKernelContextSwitchesMaximum=sm6kSystemUtilizationKernelContextSwitchesMaximum, sm6kProgramControlSetableTimeTicks=sm6kProgramControlSetableTimeTicks, sm6kSystemLeastPriv=sm6kSystemLeastPriv, sm6kFilterThrottleState=sm6kFilterThrottleState, sm6kNetworkSessionNetAddress=sm6kNetworkSessionNetAddress, sm6kSystemUtilizationKernelMessagesMinimum=sm6kSystemUtilizationKernelMessagesMinimum, sm6kSystemDeviceEthernetStaQueOverflow=sm6kSystemDeviceEthernetStaQueOverflow, sm6kSystemPagingStatisticsPageFaultsMinimum=sm6kSystemPagingStatisticsPageFaultsMinimum, sm6kProgramControlSetableGauge=sm6kProgramControlSetableGauge, sm6kSystemDeviceEthernetPktDiscard=sm6kSystemDeviceEthernetPktDiscard, sm6kSystemUtilizationCPUPollingInterval=sm6kSystemUtilizationCPUPollingInterval, sm6kProgramControl=sm6kProgramControl, sm6kSystemDeviceEthernetExecOverflow=sm6kSystemDeviceEthernetExecOverflow, sm6kSystemDeviceEthernetUnderrun=sm6kSystemDeviceEthernetUnderrun, sm6kSystemUtilizationIostatKilobytesWrittenMaximum=sm6kSystemUtilizationIostatKilobytesWrittenMaximum, sm6kSystemDeviceX25T4N2Times=sm6kSystemDeviceX25T4N2Times, sm6kSystemPagingStatisticsPageScansMaximum=sm6kSystemPagingStatisticsPageScansMaximum, sm6kAnalysisName=sm6kAnalysisName, sm6kFilterThrottleDisarmTimer=sm6kFilterThrottleDisarmTimer, sm6kSystemDeviceTokenRingRxFrameLcnt=sm6kSystemDeviceTokenRingRxFrameLcnt, sm6kSystemDeviceX25UaFRx=sm6kSystemDeviceX25UaFRx, sm6kSystemProcessParentPID=sm6kSystemProcessParentPID, sm6kSystemDeviceX25InterruptConfirmPRx=sm6kSystemDeviceX25InterruptConfirmPRx, sm6kSystemDeviceX25RestartPRx=sm6kSystemDeviceX25RestartPRx, sm6kSystemDeviceEthernetNumber=sm6kSystemDeviceEthernetNumber, sm6kSystemDeviceX25RegistrationConfirmPTx=sm6kSystemDeviceX25RegistrationConfirmPTx, sm6kSystemUtilizationKernelSystemReadsMaximum=sm6kSystemUtilizationKernelSystemReadsMaximum, sm6kSystemDeviceX25RouteEntry=sm6kSystemDeviceX25RouteEntry, sm6kThresholdTrapDescription=sm6kThresholdTrapDescription, sm6kSystemProcessTextResidentSetSize=sm6kSystemProcessTextResidentSetSize, sm6kSystemUtilizationIostatPercentTimeActiveMaximum=sm6kSystemUtilizationIostatPercentTimeActiveMaximum, sm6kSystemDeviceEthernetTooLong=sm6kSystemDeviceEthernetTooLong, sm6kResourceUsageInBlock=sm6kResourceUsageInBlock, sm6kSystemPagingStatisticsStartIOsMinimum=sm6kSystemPagingStatisticsStartIOsMinimum, sm6kCommandSetStringAndParameters=sm6kCommandSetStringAndParameters, sm6kSystemDeviceX25RnrPTx=sm6kSystemDeviceX25RnrPTx, sm6kFilterParticipationState=sm6kFilterParticipationState, sm6kSystemDeviceX25Rx128x255=sm6kSystemDeviceX25Rx128x255, sm6kSystemDeviceEthernetAdptRecPkt=sm6kSystemDeviceEthernetAdptRecPkt, sm6kSystemFileSystemInodeCount=sm6kSystemFileSystemInodeCount, sm6kSystemUtilizationCPUBusy=sm6kSystemUtilizationCPUBusy, sm6kSystemDeviceEthernetIntrLost=sm6kSystemDeviceEthernetIntrLost, sm6kSystemDeviceListTable=sm6kSystemDeviceListTable, sm6kSystemDeviceX25RxErrCnt=sm6kSystemDeviceX25RxErrCnt, sm6kNetworkSessionCount=sm6kNetworkSessionCount, sm6kNetworkSessionInformation=sm6kNetworkSessionInformation, sm6kSystemOpenFileTableSize=sm6kSystemOpenFileTableSize, sm6kSystemFileSystemInodesUsed=sm6kSystemFileSystemInodesUsed, sm6kFilterThrottleArmedTrapEnterprise=sm6kFilterThrottleArmedTrapEnterprise, sm6kSystemProcessPageFaultsIO=sm6kSystemProcessPageFaultsIO, sm6kFilterThrottleTimeStarted=sm6kFilterThrottleTimeStarted, sm6kSystemDeviceTokenRingAuthorEnv=sm6kSystemDeviceTokenRingAuthorEnv, sm6kSystemDeviceX25Rx0x15=sm6kSystemDeviceX25Rx0x15, sm6kSystemPagingStatisticsDoneIOsMaximum=sm6kSystemPagingStatisticsDoneIOsMaximum, sm6kSystemDeviceTokenRingTxByteMcnt=sm6kSystemDeviceTokenRingTxByteMcnt, sm6kSystemDeviceTokenRingBeaconTxType=sm6kSystemDeviceTokenRingBeaconTxType, sm6kSystemDeviceEthernetTimoLost=sm6kSystemDeviceEthernetTimoLost, sm6kSystemUtilizationKernelProcessOverflowMaximum=sm6kSystemUtilizationKernelProcessOverflowMaximum, sm6kSystemUsersLoggedIn=sm6kSystemUsersLoggedIn, sm6kSystemDeviceX25RejFRx=sm6kSystemDeviceX25RejFRx, sm6kSystemDeviceX25RouteCallingAddressExt=sm6kSystemDeviceX25RouteCallingAddressExt, sm6kSystemFileSystemFree=sm6kSystemFileSystemFree, sm6kNetworkSessionMaximumResponseTime=sm6kNetworkSessionMaximumResponseTime, sm6kSystemDeviceListEntry=sm6kSystemDeviceListEntry, sm6kProgramControlPollTime=sm6kProgramControlPollTime, sm6kThresholdReArmTrapDescription=sm6kThresholdReArmTrapDescription, sm6kSystemDeviceTokenRingAdapPhysAddr=sm6kSystemDeviceTokenRingAdapPhysAddr, sm6kSystemDeviceX25NetworkId=sm6kSystemDeviceX25NetworkId, sm6kSystemDeviceX25RouteCalledSubaddress=sm6kSystemDeviceX25RouteCalledSubaddress, sm6kSystemUtilizationCPUUser=sm6kSystemUtilizationCPUUser, sm6kProgramVersion=sm6kProgramVersion, sm6kSystemDeviceX25ClearIndicationPRx=sm6kSystemDeviceX25ClearIndicationPRx, sm6kSystemDeviceEthernetParErrCnt=sm6kSystemDeviceEthernetParErrCnt, sm6kSystemDeviceX25RejFTx=sm6kSystemDeviceX25RejFTx, sm6kSystemUtilizationIostatTransfers=sm6kSystemUtilizationIostatTransfers, sm6kSystemUtilizationCPUSystemMinimum=sm6kSystemUtilizationCPUSystemMinimum, sm6kSystemDeviceX25TxFrameLcnt=sm6kSystemDeviceX25TxFrameLcnt, sm6kSystemDeviceTokenRingMonitorErrorCode=sm6kSystemDeviceTokenRingMonitorErrorCode, sm6kProgramControlSetableInteger=sm6kProgramControlSetableInteger, sm6kSystemUtilizationKernelName=sm6kSystemUtilizationKernelName, sm6kSystemMiscellaneousLocalSocket=sm6kSystemMiscellaneousLocalSocket, sm6kSystemFileSystemSize=sm6kSystemFileSystemSize, sm6kSystemDeviceListDescription=sm6kSystemDeviceListDescription, sm6kNetworkSessionEntry=sm6kNetworkSessionEntry, sm6kAnalysisReturnCode=sm6kAnalysisReturnCode, sm6kSystemDeviceX25TxByteLcnt=sm6kSystemDeviceX25TxByteLcnt, sm6kResourceUsageMajflt=sm6kResourceUsageMajflt, sm6kSystemUtilizationIostatIntervalStartTime=sm6kSystemUtilizationIostatIntervalStartTime, sm6kSystemDeviceListVPD=sm6kSystemDeviceListVPD, sm6kSystemDeviceEthernetMaxCollision=sm6kSystemDeviceEthernetMaxCollision, sm6kSystemDeviceTokenRingSpeed=sm6kSystemDeviceTokenRingSpeed, sm6kSystemDeviceEthernetRxIntrCnt=sm6kSystemDeviceEthernetRxIntrCnt, sm6kProgramControlReInitializeMonitor=sm6kProgramControlReInitializeMonitor, sm6kSystemUtilizationIostatPollingInterval=sm6kSystemUtilizationIostatPollingInterval, sm6kSystemProcessCommand=sm6kSystemProcessCommand, sm6kSystemDeviceTokenRingTimoLost=sm6kSystemDeviceTokenRingTimoLost, sm6kSystemDeviceEthernetAlignErr=sm6kSystemDeviceEthernetAlignErr, sm6kSystemPagingStatisticsExtendXPTWaitsMaximum=sm6kSystemPagingStatisticsExtendXPTWaitsMaximum, sm6kResourceUsageNSwap=sm6kResourceUsageNSwap, sm6kSystemDeviceX25TxQueHigh=sm6kSystemDeviceX25TxQueHigh, sm6kSystemUtilizationKernelSemaphores=sm6kSystemUtilizationKernelSemaphores, sm6kSystemDeviceX25Tx128x255=sm6kSystemDeviceX25Tx128x255, sm6kSystemSubSystems=sm6kSystemSubSystems, sm6kProgramControlPercentMultiplier=sm6kProgramControlPercentMultiplier, sm6kThresholdCounterGaugeDataMax=sm6kThresholdCounterGaugeDataMax, sm6kCommandStandardError=sm6kCommandStandardError, sm6kSystemDeviceTokenRingTable=sm6kSystemDeviceTokenRingTable, sm6kSystemUtilizationKernelSystemReadsMinimum=sm6kSystemUtilizationKernelSystemReadsMinimum, sm6kSystemDeviceX25Rx32x63=sm6kSystemDeviceX25Rx32x63, sm6kSystemMiscellaneousPublicKey=sm6kSystemMiscellaneousPublicKey)
mibBuilder.exportSymbols("SYSMON6K-MIB", sm6kProgramControlFlags=sm6kProgramControlFlags, sm6kSystemDeviceX25TxByteMcnt=sm6kSystemDeviceX25TxByteMcnt, sm6kSystemDeviceEthernetTooShort=sm6kSystemDeviceEthernetTooShort, sm6kSystemUtilizationKernelSystemCallsMinimum=sm6kSystemUtilizationKernelSystemCallsMinimum, sm6kSystemMinPout=sm6kSystemMinPout, sm6kResourceUsageSystemTime=sm6kResourceUsageSystemTime, sm6kSystemBufferPoolMark=sm6kSystemBufferPoolMark, sm6kSystemDeviceEthernetRxErrCnt=sm6kSystemDeviceEthernetRxErrCnt, sm6kSystemUtilizationKernelBytesReadMinimum=sm6kSystemUtilizationKernelBytesReadMinimum, sm6kSystemDeviceEthernetTable=sm6kSystemDeviceEthernetTable, sm6kSystemDeviceEthernetCTSLost=sm6kSystemDeviceEthernetCTSLost, sm6kFilterEntry=sm6kFilterEntry, sm6kSystemDeviceX25NidTblHigh=sm6kSystemDeviceX25NidTblHigh, sm6kProgramInformation=sm6kProgramInformation, sm6kSystemDeviceEthernetTxIntrCnt=sm6kSystemDeviceEthernetTxIntrCnt)
