#
# PySNMP MIB module WWP-LEOS-VPLS-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/WWP-LEOS-VPLS-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 21:31:25 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ConstraintsIntersection, ConstraintsUnion, ValueSizeConstraint, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ConstraintsIntersection", "ConstraintsUnion", "ValueSizeConstraint", "SingleValueConstraint")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Counter32, ModuleIdentity, NotificationType, iso, MibIdentifier, TimeTicks, Integer32, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter64, ObjectIdentity, Unsigned32, Bits, Gauge32, IpAddress = mibBuilder.importSymbols("SNMPv2-SMI", "Counter32", "ModuleIdentity", "NotificationType", "iso", "MibIdentifier", "TimeTicks", "Integer32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter64", "ObjectIdentity", "Unsigned32", "Bits", "Gauge32", "IpAddress")
TextualConvention, DisplayString, RowStatus, MacAddress, TruthValue = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString", "RowStatus", "MacAddress", "TruthValue")
wwpModulesLeos, = mibBuilder.importSymbols("WWP-SMI", "wwpModulesLeos")
wwpLeosVplsMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 6141, 2, 60, 28))
wwpLeosVplsMIB.setRevisions(('2011-06-06 00:00', '2010-03-23 17:00', '2010-02-10 17:00', '2010-01-27 04:25', '2009-08-24 04:24', '2008-11-14 00:00', '2008-09-03 08:39', '2008-06-11 00:50', '2008-05-15 00:50', '2006-09-22 00:50', '2006-05-04 17:00', '2005-08-15 17:00',))
if mibBuilder.loadTexts: wwpLeosVplsMIB.setLastUpdated('201106060000Z')
if mibBuilder.loadTexts: wwpLeosVplsMIB.setOrganization('Ciena, Inc')
class VlanId(TextualConvention, Integer32):
    status = 'current'
    displayHint = 'd'
    subtypeSpec = Integer32.subtypeSpec + ValueRangeConstraint(1, 24576)

class EtherType(TextualConvention, Integer32):
    status = 'current'
    displayHint = 'd'
    subtypeSpec = Integer32.subtypeSpec + ValueRangeConstraint(2048, 65535)

wwpLeosVplsMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 6141, 2, 60, 28, 1))
wwpLeosVpls = MibIdentifier((1, 3, 6, 1, 4, 1, 6141, 2, 60, 28, 1, 1))
wwpLeosVplsMIBNotificationPrefix = MibIdentifier((1, 3, 6, 1, 4, 1, 6141, 2, 60, 28, 2))
wwpLeosVplsMIBNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 6141, 2, 60, 28, 2, 0))
wwpLeosVplsMIBConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 6141, 2, 60, 28, 3))
wwpLeosVplsMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 6141, 2, 60, 28, 3, 1))
wwpLeosVplsMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 6141, 2, 60, 28, 3, 2))
wwpLeosVplsVirtualCircuitTable = MibTable((1, 3, 6, 1, 4, 1, 6141, 2, 60, 28, 1, 1, 1), )
if mibBuilder.loadTexts: wwpLeosVplsVirtualCircuitTable.setStatus('deprecated')
wwpLeosVplsVirtualCircuitEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6141, 2, 60, 28, 1, 1, 1, 1), ).setIndexNames((0, "WWP-LEOS-VPLS-MIB", "wwpLeosVplsVirtualCircuitIndex"))
if mibBuilder.loadTexts: wwpLeosVplsVirtualCircuitEntry.setStatus('deprecated')
wwpLeosVplsVirtualCircuitIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 28, 1, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosVplsVirtualCircuitIndex.setStatus('deprecated')
wwpLeosVplsVirtualCircuitProviderVlanId = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 28, 1, 1, 1, 1, 2), VlanId()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpLeosVplsVirtualCircuitProviderVlanId.setStatus('deprecated')
wwpLeosVplsVirtualCircuitType = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 28, 1, 1, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("ethernet", 1), ("mpls", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wwpLeosVplsVirtualCircuitType.setStatus('deprecated')
wwpLeosVplsVirtualCircuitName = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 28, 1, 1, 1, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 31))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wwpLeosVplsVirtualCircuitName.setStatus('deprecated')
wwpLeosVplsVirtualCircuitIngressVcLabel = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 28, 1, 1, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(16, 1048575))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpLeosVplsVirtualCircuitIngressVcLabel.setStatus('deprecated')
wwpLeosVplsVirtualCircuitEgressVcLabel = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 28, 1, 1, 1, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(16, 1048575))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpLeosVplsVirtualCircuitEgressVcLabel.setStatus('deprecated')
wwpLeosVplsVirtualCircuitTunnelIndx = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 28, 1, 1, 1, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpLeosVplsVirtualCircuitTunnelIndx.setStatus('deprecated')
wwpLeosVplsVirtualCircuitStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 28, 1, 1, 1, 1, 8), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wwpLeosVplsVirtualCircuitStatus.setStatus('deprecated')
wwpLeosVplsVirtualSwitchTable = MibTable((1, 3, 6, 1, 4, 1, 6141, 2, 60, 28, 1, 1, 5), )
if mibBuilder.loadTexts: wwpLeosVplsVirtualSwitchTable.setStatus('deprecated')
wwpLeosVplsVirtualSwitchEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6141, 2, 60, 28, 1, 1, 5, 1), ).setIndexNames((0, "WWP-LEOS-VPLS-MIB", "wwpLeosVplsVirtualSwitchIndx"))
if mibBuilder.loadTexts: wwpLeosVplsVirtualSwitchEntry.setStatus('deprecated')
wwpLeosVplsVirtualSwitchIndx = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 28, 1, 1, 5, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosVplsVirtualSwitchIndx.setStatus('deprecated')
wwpLeosVplsVirtualSwitchName = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 28, 1, 1, 5, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpLeosVplsVirtualSwitchName.setStatus('deprecated')
wwpLeosVplsVirtualSwitchPriVc = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 28, 1, 1, 5, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpLeosVplsVirtualSwitchPriVc.setStatus('deprecated')
wwpLeosVplsVirtualSwitchSecVc = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 28, 1, 1, 5, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpLeosVplsVirtualSwitchSecVc.setStatus('deprecated')
wwpLeosVplsVirtualSwitchActiveVc = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 28, 1, 1, 5, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("none", 1), ("primVc", 2), ("secVc", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosVplsVirtualSwitchActiveVc.setStatus('deprecated')
wwpLeosVplsVirtualSwitchEncapCosPolicy = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 28, 1, 1, 5, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("fixed", 1), ("inheritDot1dPri", 2), ("inheritIpPrec", 3), ("inheritPhbg", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpLeosVplsVirtualSwitchEncapCosPolicy.setStatus('deprecated')
wwpLeosVplsVirtualSwitchEncapFixedDot1dPri = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 28, 1, 1, 5, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpLeosVplsVirtualSwitchEncapFixedDot1dPri.setStatus('deprecated')
wwpLeosVplsVirtualSwitchDecapCosPolicy = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 28, 1, 1, 5, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("fixed", 1), ("inheritVc", 2), ("inheritTunnel", 3), ("leave", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpLeosVplsVirtualSwitchDecapCosPolicy.setStatus('deprecated')
wwpLeosVplsVirtualSwitchDecapFixedDot1dPri = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 28, 1, 1, 5, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpLeosVplsVirtualSwitchDecapFixedDot1dPri.setStatus('deprecated')
wwpLeosVplsVirtualSwitchSubscriberVlan = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 28, 1, 1, 5, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4094))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpLeosVplsVirtualSwitchSubscriberVlan.setStatus('deprecated')
wwpLeosVplsVirtualSwitchCtrlProtocolTunnelState = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 28, 1, 1, 5, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpLeosVplsVirtualSwitchCtrlProtocolTunnelState.setStatus('deprecated')
wwpLeosVplsVirtualSwitchType = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 28, 1, 1, 5, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("ethernet", 1), ("mpls", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wwpLeosVplsVirtualSwitchType.setStatus('deprecated')
wwpLeosVplsVirtualSwitchStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 28, 1, 1, 5, 1, 13), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wwpLeosVplsVirtualSwitchStatus.setStatus('deprecated')
wwpLeosVplsVirtualSwitchMemberTable = MibTable((1, 3, 6, 1, 4, 1, 6141, 2, 60, 28, 1, 1, 6), )
if mibBuilder.loadTexts: wwpLeosVplsVirtualSwitchMemberTable.setStatus('deprecated')
wwpLeosVplsVirtualSwitchMemberEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6141, 2, 60, 28, 1, 1, 6, 1), ).setIndexNames((0, "WWP-LEOS-VPLS-MIB", "wwpLeosVplsVirtualSwitchIndx"), (0, "WWP-LEOS-VPLS-MIB", "wwpLeosVplsVirtualSwitchMemberPortId"))
if mibBuilder.loadTexts: wwpLeosVplsVirtualSwitchMemberEntry.setStatus('deprecated')
wwpLeosVplsVirtualSwitchMemberPortId = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 28, 1, 1, 6, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosVplsVirtualSwitchMemberPortId.setStatus('deprecated')
wwpLeosVplsVirtualSwitchMemberStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 28, 1, 1, 6, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wwpLeosVplsVirtualSwitchMemberStatus.setStatus('deprecated')
wwpLeosVplsSwitchCtrlProtocolTable = MibTable((1, 3, 6, 1, 4, 1, 6141, 2, 60, 28, 1, 1, 7), )
if mibBuilder.loadTexts: wwpLeosVplsSwitchCtrlProtocolTable.setStatus('deprecated')
wwpLeosVplsSwitchCtrlProtocolEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6141, 2, 60, 28, 1, 1, 7, 1), ).setIndexNames((0, "WWP-LEOS-VPLS-MIB", "wwpLeosVplsVirtualSwitchIndx"), (0, "WWP-LEOS-VPLS-MIB", "wwpLeosVplsSwitchCtrlProtocolNum"))
if mibBuilder.loadTexts: wwpLeosVplsSwitchCtrlProtocolEntry.setStatus('deprecated')
wwpLeosVplsSwitchCtrlProtocolNum = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 28, 1, 1, 7, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15))).clone(namedValues=NamedValues(("l28021x", 1), ("rstp", 2), ("ciscoCdp", 3), ("ciscoDtp", 4), ("ciscoPagp", 5), ("ciscoPvst", 6), ("ciscoUplinkFast", 7), ("ciscoUdlp", 8), ("ciscoVtp", 9), ("gvrp", 10), ("lacp", 11), ("lacpMarker", 12), ("oam", 13), ("lldp", 14), ("vlanBridge", 15)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosVplsSwitchCtrlProtocolNum.setStatus('deprecated')
wwpLeosVplsSwitchCtrlType = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 28, 1, 1, 7, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("discard", 1), ("peer", 2), ("tunnel", 3)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wwpLeosVplsSwitchCtrlType.setStatus('deprecated')
wwpLeosVplsSwitchReservedVlanTable = MibTable((1, 3, 6, 1, 4, 1, 6141, 2, 60, 28, 1, 1, 8), )
if mibBuilder.loadTexts: wwpLeosVplsSwitchReservedVlanTable.setStatus('current')
wwpLeosVplsSwitchReservedVlanEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6141, 2, 60, 28, 1, 1, 8, 1), ).setIndexNames((0, "WWP-LEOS-VPLS-MIB", "wwpLeosVplsSwitchReservedVlanId"))
if mibBuilder.loadTexts: wwpLeosVplsSwitchReservedVlanEntry.setStatus('current')
wwpLeosVplsSwitchReservedVlanId = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 28, 1, 1, 8, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 24576))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosVplsSwitchReservedVlanId.setStatus('current')
wwpLeosVplsSwitchReservedVlanStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 28, 1, 1, 8, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wwpLeosVplsSwitchReservedVlanStatus.setStatus('current')
wwpLeosVplsGlobalAttrs = MibIdentifier((1, 3, 6, 1, 4, 1, 6141, 2, 60, 28, 1, 1, 9))
wwpLeosVplsTunnelFixedTTL = MibScalar((1, 3, 6, 1, 4, 1, 6141, 2, 60, 28, 1, 1, 9, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(2, 255)).clone(255)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpLeosVplsTunnelFixedTTL.setStatus('current')
wwpLeosVplsResolverTimeout = MibScalar((1, 3, 6, 1, 4, 1, 6141, 2, 60, 28, 1, 1, 9, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(10, 255)).clone(10)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpLeosVplsResolverTimeout.setStatus('current')
wwpLeosVplsStaticLabelRangeStart = MibScalar((1, 3, 6, 1, 4, 1, 6141, 2, 60, 28, 1, 1, 9, 3), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(16, 1048575), )).clone(1024)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpLeosVplsStaticLabelRangeStart.setStatus('current')
wwpLeosVplsStaticLabelRangeEnd = MibScalar((1, 3, 6, 1, 4, 1, 6141, 2, 60, 28, 1, 1, 9, 4), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(16, 1048575), )).clone(2047)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpLeosVplsStaticLabelRangeEnd.setStatus('current')
wwpLeosVplsDynamicLabelRangeStart = MibScalar((1, 3, 6, 1, 4, 1, 6141, 2, 60, 28, 1, 1, 9, 5), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(16, 1048575), )).clone(2048)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpLeosVplsDynamicLabelRangeStart.setStatus('current')
wwpLeosVplsDynamicLabelRangeEnd = MibScalar((1, 3, 6, 1, 4, 1, 6141, 2, 60, 28, 1, 1, 9, 6), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(16, 1048575), )).clone(1048575)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpLeosVplsDynamicLabelRangeEnd.setStatus('current')
wwpLeosVplsVirtualCircuitStatsClear = MibScalar((1, 3, 6, 1, 4, 1, 6141, 2, 60, 28, 1, 1, 9, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("clear", 1), ("none", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpLeosVplsVirtualCircuitStatsClear.setStatus('current')
wwpLeosVplsMplsPathTable = MibTable((1, 3, 6, 1, 4, 1, 6141, 2, 60, 28, 1, 1, 10), )
if mibBuilder.loadTexts: wwpLeosVplsMplsPathTable.setStatus('current')
wwpLeosVplsMplsPathEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6141, 2, 60, 28, 1, 1, 10, 1), ).setIndexNames((0, "WWP-LEOS-VPLS-MIB", "wwpLeosVplsMplsPathIndex"))
if mibBuilder.loadTexts: wwpLeosVplsMplsPathEntry.setStatus('current')
wwpLeosVplsMplsPathIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 28, 1, 1, 10, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosVplsMplsPathIndex.setStatus('current')
wwpLeosVplsMplsPathName = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 28, 1, 1, 10, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 31))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wwpLeosVplsMplsPathName.setStatus('current')
wwpLeosVplsMplsPathRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 28, 1, 1, 10, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wwpLeosVplsMplsPathRowStatus.setStatus('current')
wwpLeosVplsMplsPathMemberTable = MibTable((1, 3, 6, 1, 4, 1, 6141, 2, 60, 28, 1, 1, 11), )
if mibBuilder.loadTexts: wwpLeosVplsMplsPathMemberTable.setStatus('current')
wwpLeosVplsMplsPathMemberEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6141, 2, 60, 28, 1, 1, 11, 1), ).setIndexNames((0, "WWP-LEOS-VPLS-MIB", "wwpLeosVplsMplsPathIndex"), (0, "WWP-LEOS-VPLS-MIB", "wwpLeosVplsMplsPathOptionIndex"), (0, "WWP-LEOS-VPLS-MIB", "wwpLeosVplsMplsPathMemberIpIndex"))
if mibBuilder.loadTexts: wwpLeosVplsMplsPathMemberEntry.setStatus('current')
wwpLeosVplsMplsPathOptionIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 28, 1, 1, 11, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 5))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosVplsMplsPathOptionIndex.setStatus('current')
wwpLeosVplsMplsPathMemberIpIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 28, 1, 1, 11, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 5))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosVplsMplsPathMemberIpIndex.setStatus('current')
wwpLeosVplsMplsPathMemberIp = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 28, 1, 1, 11, 1, 3), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wwpLeosVplsMplsPathMemberIp.setStatus('current')
wwpLeosVplsMplsPathMemberRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 28, 1, 1, 11, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wwpLeosVplsMplsPathMemberRowStatus.setStatus('current')
wwpLeosVplsRsvpAttrTable = MibTable((1, 3, 6, 1, 4, 1, 6141, 2, 60, 28, 1, 1, 12), )
if mibBuilder.loadTexts: wwpLeosVplsRsvpAttrTable.setStatus('current')
wwpLeosVplsRsvpAttrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6141, 2, 60, 28, 1, 1, 12, 1), ).setIndexNames((0, "WWP-LEOS-VPLS-MIB", "wwpLeosVplsRsvpAttrIndex"))
if mibBuilder.loadTexts: wwpLeosVplsRsvpAttrEntry.setStatus('current')
wwpLeosVplsRsvpAttrIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 28, 1, 1, 12, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosVplsRsvpAttrIndex.setStatus('current')
wwpLeosVplsRsvpAttrHoldPri = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 28, 1, 1, 12, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpLeosVplsRsvpAttrHoldPri.setStatus('current')
wwpLeosVplsRsvpAttrSetupPri = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 28, 1, 1, 12, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpLeosVplsRsvpAttrSetupPri.setStatus('current')
wwpLeosVplsRsvpAttrRecordRoute = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 28, 1, 1, 12, 1, 4), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpLeosVplsRsvpAttrRecordRoute.setStatus('current')
wwpLeosVplsEncapTunnelTable = MibTable((1, 3, 6, 1, 4, 1, 6141, 2, 60, 28, 1, 1, 13), )
if mibBuilder.loadTexts: wwpLeosVplsEncapTunnelTable.setStatus('current')
wwpLeosVplsEncapTunnelEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6141, 2, 60, 28, 1, 1, 13, 1), ).setIndexNames((0, "WWP-LEOS-VPLS-MIB", "wwpLeosVplsEncapTunnelId"))
if mibBuilder.loadTexts: wwpLeosVplsEncapTunnelEntry.setStatus('current')
wwpLeosVplsEncapTunnelId = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 28, 1, 1, 13, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosVplsEncapTunnelId.setStatus('current')
wwpLeosVplsEncapTunnelName = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 28, 1, 1, 13, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 31))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wwpLeosVplsEncapTunnelName.setStatus('current')
wwpLeosVplsEncapTunnelType = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 28, 1, 1, 13, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("static", 1), ("dynamic", 2), ("staticPbt", 3)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wwpLeosVplsEncapTunnelType.setStatus('current')
wwpLeosVplsEncapTunnelDestAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 28, 1, 1, 13, 1, 4), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpLeosVplsEncapTunnelDestAddr.setStatus('current')
wwpLeosVplsEncapTunnelPathIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 28, 1, 1, 13, 1, 5), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wwpLeosVplsEncapTunnelPathIndex.setStatus('current')
wwpLeosVplsEncapTunnelEncapCosPolicy = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 28, 1, 1, 13, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("fixed", 1), ("inheritVc", 2), ("inheritVs", 3), ("rcosMapped", 4))).clone('rcosMapped')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpLeosVplsEncapTunnelEncapCosPolicy.setStatus('current')
wwpLeosVplsEncapTunnelEncapFixedExp = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 28, 1, 1, 13, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7)).clone(2)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpLeosVplsEncapTunnelEncapFixedExp.setStatus('current')
wwpLeosVplsEncapTunnelTTLPolicy = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 28, 1, 1, 13, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("pipe", 1), ("uniform", 2))).clone('pipe')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpLeosVplsEncapTunnelTTLPolicy.setStatus('current')
wwpLeosVplsEncapTunnelEncapLabel = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 28, 1, 1, 13, 1, 9), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 1048576))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpLeosVplsEncapTunnelEncapLabel.setStatus('current')
wwpLeosVplsEncapTunnelProtType = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 28, 1, 1, 13, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("none", 1), ("rsvp", 2))).clone('none')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wwpLeosVplsEncapTunnelProtType.setStatus('current')
wwpLeosVplsEncapTunnelDestResolvedMac = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 28, 1, 1, 13, 1, 11), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosVplsEncapTunnelDestResolvedMac.setStatus('current')
wwpLeosVplsEncapTunnelOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 28, 1, 1, 13, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosVplsEncapTunnelOperStatus.setStatus('current')
wwpLeosVplsEncapTunnelAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 28, 1, 1, 13, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpLeosVplsEncapTunnelAdminStatus.setStatus('current')
wwpLeosVplsEncapTunnelDestResolvedPort = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 28, 1, 1, 13, 1, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosVplsEncapTunnelDestResolvedPort.setStatus('current')
wwpLeosVplsEncapTunnelDestResolvedVlan = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 28, 1, 1, 13, 1, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4094))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosVplsEncapTunnelDestResolvedVlan.setStatus('current')
wwpLeosVplsEncapTunnelRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 28, 1, 1, 13, 1, 16), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wwpLeosVplsEncapTunnelRowStatus.setStatus('current')
wwpLeosVplsEncapTunnelFastReroute = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 28, 1, 1, 13, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("linkProtect", 1), ("nodeProtect", 2))).clone('linkProtect')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wwpLeosVplsEncapTunnelFastReroute.setStatus('current')
wwpLeosVplsEncapTunnelLspType = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 28, 1, 1, 13, 1, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("primary", 1), ("backup", 2))).clone('primary')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wwpLeosVplsEncapTunnelLspType.setStatus('current')
wwpLeosVplsEncapTunnelPartnerTunnelId = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 28, 1, 1, 13, 1, 19), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosVplsEncapTunnelPartnerTunnelId.setStatus('current')
wwpLeosVplsEncapTunnelBVID = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 28, 1, 1, 13, 1, 20), VlanId()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wwpLeosVplsEncapTunnelBVID.setStatus('current')
wwpLeosVplsEncapTunnelDestBridgeIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 28, 1, 1, 13, 1, 21), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 64))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wwpLeosVplsEncapTunnelDestBridgeIndex.setStatus('current')
wwpLeosVplsEncapTunnelEgressPort = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 28, 1, 1, 13, 1, 22), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wwpLeosVplsEncapTunnelEgressPort.setStatus('current')
wwpLeosVplsEncapTunnelEncapFixedPCP = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 28, 1, 1, 13, 1, 23), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wwpLeosVplsEncapTunnelEncapFixedPCP.setStatus('current')
wwpLeosVplsEncapTunnelActive = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 28, 1, 1, 13, 1, 24), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("yes", 1), ("no", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosVplsEncapTunnelActive.setStatus('current')
wwpLeosVplsDecapTunnelTable = MibTable((1, 3, 6, 1, 4, 1, 6141, 2, 60, 28, 1, 1, 14), )
if mibBuilder.loadTexts: wwpLeosVplsDecapTunnelTable.setStatus('current')
wwpLeosVplsDecapTunnelEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6141, 2, 60, 28, 1, 1, 14, 1), ).setIndexNames((0, "WWP-LEOS-VPLS-MIB", "wwpLeosVplsDecapTunnelId"))
if mibBuilder.loadTexts: wwpLeosVplsDecapTunnelEntry.setStatus('current')
wwpLeosVplsDecapTunnelId = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 28, 1, 1, 14, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosVplsDecapTunnelId.setStatus('current')
wwpLeosVplsDecapTunnelName = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 28, 1, 1, 14, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 31))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wwpLeosVplsDecapTunnelName.setStatus('current')
wwpLeosVplsDecapTunnelLabel = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 28, 1, 1, 14, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 1048576))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpLeosVplsDecapTunnelLabel.setStatus('current')
wwpLeosVplsDecapTunnelType = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 28, 1, 1, 14, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("static", 1), ("dynamic", 2), ("staticPbt", 3))).clone('static')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wwpLeosVplsDecapTunnelType.setStatus('current')
wwpLeosVplsDecapTunnelRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 28, 1, 1, 14, 1, 5), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wwpLeosVplsDecapTunnelRowStatus.setStatus('current')
wwpLeosVplsDecapTunnelBVID = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 28, 1, 1, 14, 1, 6), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wwpLeosVplsDecapTunnelBVID.setStatus('current')
wwpLeosVplsDecapTunnelBridgeIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 28, 1, 1, 14, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 64))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wwpLeosVplsDecapTunnelBridgeIndex.setStatus('current')
wwpLeosVplsDecapTunnelPort = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 28, 1, 1, 14, 1, 8), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wwpLeosVplsDecapTunnelPort.setStatus('current')
wwpLeosVplsDecapTunnelMac = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 28, 1, 1, 14, 1, 9), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosVplsDecapTunnelMac.setStatus('current')
wwpLeosVplsDecapTunnelOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 28, 1, 1, 14, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosVplsDecapTunnelOperStatus.setStatus('current')
wwpLeosVplsVirtualCircuitMplsTable = MibTable((1, 3, 6, 1, 4, 1, 6141, 2, 60, 28, 1, 1, 15), )
if mibBuilder.loadTexts: wwpLeosVplsVirtualCircuitMplsTable.setStatus('current')
wwpLeosVplsVirtualCircuitMplsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6141, 2, 60, 28, 1, 1, 15, 1), ).setIndexNames((0, "WWP-LEOS-VPLS-MIB", "wwpLeosVplsVirtualCircuitMplsIndex"))
if mibBuilder.loadTexts: wwpLeosVplsVirtualCircuitMplsEntry.setStatus('current')
wwpLeosVplsVirtualCircuitMplsIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 28, 1, 1, 15, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosVplsVirtualCircuitMplsIndex.setStatus('current')
wwpLeosVplsVirtualCircuitMplsName = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 28, 1, 1, 15, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 31))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wwpLeosVplsVirtualCircuitMplsName.setStatus('current')
wwpLeosVplsVirtualCircuitMplsType = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 28, 1, 1, 15, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("dynamic", 1), ("static", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wwpLeosVplsVirtualCircuitMplsType.setStatus('current')
wwpLeosVplsVirtualCircuitMplsDestAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 28, 1, 1, 15, 1, 4), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wwpLeosVplsVirtualCircuitMplsDestAddr.setStatus('current')
wwpLeosVplsVirtualCircuitMplsTunnelPolicy = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 28, 1, 1, 15, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("fixed", 1), ("firstAvailable", 2))).clone('firstAvailable')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wwpLeosVplsVirtualCircuitMplsTunnelPolicy.setStatus('current')
wwpLeosVplsVirtualCircuitMplsFixedTunnelId = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 28, 1, 1, 15, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wwpLeosVplsVirtualCircuitMplsFixedTunnelId.setStatus('current')
wwpLeosVplsVirtualCircuitMplsActiveTunnelId = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 28, 1, 1, 15, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosVplsVirtualCircuitMplsActiveTunnelId.setStatus('current')
wwpLeosVplsVirtualCircuitMplsOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 28, 1, 1, 15, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosVplsVirtualCircuitMplsOperStatus.setStatus('current')
wwpLeosVplsVirtualCircuitMplsEncapLabel = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 28, 1, 1, 15, 1, 9), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 1048576))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wwpLeosVplsVirtualCircuitMplsEncapLabel.setStatus('current')
wwpLeosVplsVirtualCircuitMplsDecapLabel = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 28, 1, 1, 15, 1, 10), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 1048576))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wwpLeosVplsVirtualCircuitMplsDecapLabel.setStatus('current')
wwpLeosVplsVirtualCircuitMplsGroupId = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 28, 1, 1, 15, 1, 11), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wwpLeosVplsVirtualCircuitMplsGroupId.setStatus('current')
wwpLeosVplsVirtualCircuitMplsProtectionType = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 28, 1, 1, 15, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("primary", 1), ("secondary", 2))).clone('secondary')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wwpLeosVplsVirtualCircuitMplsProtectionType.setStatus('current')
wwpLeosVplsVirtualCircuitMplsStatusTlv = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 28, 1, 1, 15, 1, 13), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wwpLeosVplsVirtualCircuitMplsStatusTlv.setStatus('current')
wwpLeosVplsVirtualCircuitMplsMtu = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 28, 1, 1, 15, 1, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1500, 9216)).clone(9190)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpLeosVplsVirtualCircuitMplsMtu.setStatus('current')
wwpLeosVplsVirtualCircuitMplsStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 28, 1, 1, 15, 1, 15), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wwpLeosVplsVirtualCircuitMplsStatus.setStatus('current')
wwpLeosVplsVirtualCircuitMplsStatsTable = MibTable((1, 3, 6, 1, 4, 1, 6141, 2, 60, 28, 1, 1, 16), )
if mibBuilder.loadTexts: wwpLeosVplsVirtualCircuitMplsStatsTable.setStatus('current')
wwpLeosVplsVirtualCircuitMplsStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6141, 2, 60, 28, 1, 1, 16, 1), ).setIndexNames((0, "WWP-LEOS-VPLS-MIB", "wwpLeosVplsVirtualCircuitMplsIndex"))
if mibBuilder.loadTexts: wwpLeosVplsVirtualCircuitMplsStatsEntry.setStatus('current')
wwpLeosVplsVirtualCircuitMplsTxBytesHi = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 28, 1, 1, 16, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosVplsVirtualCircuitMplsTxBytesHi.setStatus('current')
wwpLeosVplsVirtualCircuitMplsTxBytesLo = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 28, 1, 1, 16, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosVplsVirtualCircuitMplsTxBytesLo.setStatus('current')
wwpLeosVplsVirtualCircuitMplsRxBytesHi = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 28, 1, 1, 16, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosVplsVirtualCircuitMplsRxBytesHi.setStatus('current')
wwpLeosVplsVirtualCircuitMplsRxBytesLo = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 28, 1, 1, 16, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosVplsVirtualCircuitMplsRxBytesLo.setStatus('current')
wwpLeosVplsVirtualCircuitEthTable = MibTable((1, 3, 6, 1, 4, 1, 6141, 2, 60, 28, 1, 1, 17), )
if mibBuilder.loadTexts: wwpLeosVplsVirtualCircuitEthTable.setStatus('current')
wwpLeosVplsVirtualCircuitEthEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6141, 2, 60, 28, 1, 1, 17, 1), ).setIndexNames((0, "WWP-LEOS-VPLS-MIB", "wwpLeosVplsVirtualCircuitEthIndex"))
if mibBuilder.loadTexts: wwpLeosVplsVirtualCircuitEthEntry.setStatus('current')
wwpLeosVplsVirtualCircuitEthIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 28, 1, 1, 17, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosVplsVirtualCircuitEthIndex.setStatus('current')
wwpLeosVplsVirtualCircuitEthName = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 28, 1, 1, 17, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 31))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wwpLeosVplsVirtualCircuitEthName.setStatus('current')
wwpLeosVplsVirtualCircuitEthProviderVlanId = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 28, 1, 1, 17, 1, 3), VlanId()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpLeosVplsVirtualCircuitEthProviderVlanId.setStatus('current')
wwpLeosVplsVirtualCircuitEthRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 28, 1, 1, 17, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wwpLeosVplsVirtualCircuitEthRowStatus.setStatus('current')
wwpLeosVplsVirtualCircuitEthStatsMonitor = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 28, 1, 1, 17, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("on", 1), ("off", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wwpLeosVplsVirtualCircuitEthStatsMonitor.setStatus('current')
wwpLeosVplsVirtualCircuitEtherTypeTable = MibTable((1, 3, 6, 1, 4, 1, 6141, 2, 60, 28, 1, 1, 18), )
if mibBuilder.loadTexts: wwpLeosVplsVirtualCircuitEtherTypeTable.setStatus('current')
wwpLeosVplsVirtualCircuitEtherTypeEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6141, 2, 60, 28, 1, 1, 18, 1), ).setIndexNames((0, "WWP-LEOS-VPLS-MIB", "wwpLeosVplsVirtualCircuitPortId"))
if mibBuilder.loadTexts: wwpLeosVplsVirtualCircuitEtherTypeEntry.setStatus('current')
wwpLeosVplsVirtualCircuitPortId = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 28, 1, 1, 18, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpLeosVplsVirtualCircuitPortId.setStatus('current')
wwpLeosVplsVirtualCircuitEtherType = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 28, 1, 1, 18, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("type8100", 1), ("type9100", 2), ("type88A8", 3))).clone('type8100')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpLeosVplsVirtualCircuitEtherType.setStatus('current')
wwpLeosVplsVirtualCircuitEtherTypePolicy = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 28, 1, 1, 18, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("all", 1), ("encapOnly", 2), ("vlanTpid", 3))).clone('encapOnly')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpLeosVplsVirtualCircuitEtherTypePolicy.setStatus('current')
wwpLeosVplsVirtualCircuitEthStatsTable = MibTable((1, 3, 6, 1, 4, 1, 6141, 2, 60, 28, 1, 1, 19), )
if mibBuilder.loadTexts: wwpLeosVplsVirtualCircuitEthStatsTable.setStatus('current')
wwpLeosVplsVirtualCircuitEthStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6141, 2, 60, 28, 1, 1, 19, 1), ).setIndexNames((0, "WWP-LEOS-VPLS-MIB", "wwpLeosVplsVirtualCircuitEthIndex"))
if mibBuilder.loadTexts: wwpLeosVplsVirtualCircuitEthStatsEntry.setStatus('current')
wwpLeosVplsVirtualCircuitEthTxBytesHi = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 28, 1, 1, 19, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosVplsVirtualCircuitEthTxBytesHi.setStatus('current')
wwpLeosVplsVirtualCircuitEthTxBytesLo = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 28, 1, 1, 19, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosVplsVirtualCircuitEthTxBytesLo.setStatus('current')
wwpLeosVplsVirtualCircuitEthRxBytesHi = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 28, 1, 1, 19, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosVplsVirtualCircuitEthRxBytesHi.setStatus('current')
wwpLeosVplsVirtualCircuitEthRxBytesLo = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 28, 1, 1, 19, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosVplsVirtualCircuitEthRxBytesLo.setStatus('current')
wwpLeosVirtualCircuitEthStatsClear = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 28, 1, 1, 19, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("clear", 1), ("none", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpLeosVirtualCircuitEthStatsClear.setStatus('current')
wwpLeosVplsVirtualSwitchMplsTable = MibTable((1, 3, 6, 1, 4, 1, 6141, 2, 60, 28, 1, 1, 20), )
if mibBuilder.loadTexts: wwpLeosVplsVirtualSwitchMplsTable.setStatus('current')
wwpLeosVplsVirtualSwitchMplsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6141, 2, 60, 28, 1, 1, 20, 1), ).setIndexNames((0, "WWP-LEOS-VPLS-MIB", "wwpLeosVplsVirtualSwitchMplsIndx"))
if mibBuilder.loadTexts: wwpLeosVplsVirtualSwitchMplsEntry.setStatus('current')
wwpLeosVplsVirtualSwitchMplsIndx = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 28, 1, 1, 20, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosVplsVirtualSwitchMplsIndx.setStatus('current')
wwpLeosVplsVirtualSwitchMplsName = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 28, 1, 1, 20, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpLeosVplsVirtualSwitchMplsName.setStatus('current')
wwpLeosVplsVirtualSwitchMplsVpnId = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 28, 1, 1, 20, 1, 3), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpLeosVplsVirtualSwitchMplsVpnId.setStatus('current')
wwpLeosVplsVirtualSwitchMplsEncapCosPolicy = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 28, 1, 1, 20, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("fixed", 1), ("inheritDot1dPri", 2), ("inheritIpPrec", 3), ("inheritPhbg", 4))).clone('fixed')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpLeosVplsVirtualSwitchMplsEncapCosPolicy.setStatus('current')
wwpLeosVplsVirtualSwitchMplsEncapFixedDot1dPri = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 28, 1, 1, 20, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7)).clone(2)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpLeosVplsVirtualSwitchMplsEncapFixedDot1dPri.setStatus('current')
wwpLeosVplsVirtualSwitchMplsDecapCosPolicy = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 28, 1, 1, 20, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("fixed", 1), ("inheritVc", 2), ("inheritTunnel", 3), ("leave", 4))).clone('leave')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpLeosVplsVirtualSwitchMplsDecapCosPolicy.setStatus('current')
wwpLeosVplsVirtualSwitchMplsDecapFixedDot1dPri = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 28, 1, 1, 20, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7)).clone(2)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpLeosVplsVirtualSwitchMplsDecapFixedDot1dPri.setStatus('current')
wwpLeosVplsVirtualSwitchMplsCtrlProtocolTunnelState = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 28, 1, 1, 20, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpLeosVplsVirtualSwitchMplsCtrlProtocolTunnelState.setStatus('current')
wwpLeosVplsVirtualSwitchMplsDecapTTLPolicy = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 28, 1, 1, 20, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("pipe", 1), ("uniform", 2))).clone('pipe')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpLeosVplsVirtualSwitchMplsDecapTTLPolicy.setStatus('current')
wwpLeosVplsVirtualSwitchMplsType = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 28, 1, 1, 20, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("static", 1), ("dynamic", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wwpLeosVplsVirtualSwitchMplsType.setStatus('current')
wwpLeosVplsVirtualSwitchMplsRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 28, 1, 1, 20, 1, 11), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wwpLeosVplsVirtualSwitchMplsRowStatus.setStatus('current')
wwpLeosVplsVirtualSwitchMplsMacLrnState = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 28, 1, 1, 20, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpLeosVplsVirtualSwitchMplsMacLrnState.setStatus('current')
wwpLeosVplsVirtualSwitchMplsTunnelMethod = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 28, 1, 1, 20, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("l2pt", 1), ("transparent", 2))).clone('l2pt')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpLeosVplsVirtualSwitchMplsTunnelMethod.setStatus('current')
wwpLeosVplsVirtualSwitchMplsCtrlProtocolDot1dPri = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 28, 1, 1, 20, 1, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7)).clone(6)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpLeosVplsVirtualSwitchMplsCtrlProtocolDot1dPri.setStatus('current')
wwpLeosVplsVirtualSwitchMplsSubscriberDot1dPolicy = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 28, 1, 1, 20, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("leave", 1), ("provider-inherit", 2))).clone('leave')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpLeosVplsVirtualSwitchMplsSubscriberDot1dPolicy.setStatus('current')
wwpLeosVplsVirtualSwitchMplsCtrlProtTransFrameValidate = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 28, 1, 1, 20, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpLeosVplsVirtualSwitchMplsCtrlProtTransFrameValidate.setStatus('current')
wwpLeosVplsVirtualSwitchMplsHonorPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 28, 1, 1, 20, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("c-vlan", 1), ("s-vlan", 2))).clone('c-vlan')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpLeosVplsVirtualSwitchMplsHonorPriority.setStatus('current')
wwpLeosVplsVirtualSwitchMplsMemberTable = MibTable((1, 3, 6, 1, 4, 1, 6141, 2, 60, 28, 1, 1, 21), )
if mibBuilder.loadTexts: wwpLeosVplsVirtualSwitchMplsMemberTable.setStatus('deprecated')
wwpLeosVplsVirtualSwitchMplsMemberEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6141, 2, 60, 28, 1, 1, 21, 1), ).setIndexNames((0, "WWP-LEOS-VPLS-MIB", "wwpLeosVplsVirtualSwitchMplsIndx"), (0, "WWP-LEOS-VPLS-MIB", "wwpLeosVplsVirtualSwitchMplsMemberPortId"))
if mibBuilder.loadTexts: wwpLeosVplsVirtualSwitchMplsMemberEntry.setStatus('deprecated')
wwpLeosVplsVirtualSwitchMplsMemberPortId = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 28, 1, 1, 21, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wwpLeosVplsVirtualSwitchMplsMemberPortId.setStatus('current')
wwpLeosVplsVirtualSwitchMplsMemberVlanId = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 28, 1, 1, 21, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4094))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wwpLeosVplsVirtualSwitchMplsMemberVlanId.setStatus('current')
wwpLeosVplsVirtualSwitchMplsMemberRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 28, 1, 1, 21, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wwpLeosVplsVirtualSwitchMplsMemberRowStatus.setStatus('current')
wwpLeosVplsVirtualSwitchMplsMemberEncapCosPolicy = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 28, 1, 1, 21, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("fixed", 1), ("inheritDot1dPri", 2), ("inheritIpPrec", 3), ("inheritPhbg", 4), ("inheritVs", 5), ("port-inherit", 6))).clone('inheritVs')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpLeosVplsVirtualSwitchMplsMemberEncapCosPolicy.setStatus('current')
wwpLeosVplsVirtualSwitchMplsMemberEncapCosFixedDot1DPri = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 28, 1, 1, 21, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7)).clone(2)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpLeosVplsVirtualSwitchMplsMemberEncapCosFixedDot1DPri.setStatus('current')
wwpLeosVplsVirtualSwitchMplsMemberSubscriberDot1dPolicy = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 28, 1, 1, 21, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("leave", 1), ("provider-inherit", 2), ("inheritVs", 3))).clone('inheritVs')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpLeosVplsVirtualSwitchMplsMemberSubscriberDot1dPolicy.setStatus('current')
wwpLeosVplsVirtualSwitchMplsMemberStatsTable = MibTable((1, 3, 6, 1, 4, 1, 6141, 2, 60, 28, 1, 1, 22), )
if mibBuilder.loadTexts: wwpLeosVplsVirtualSwitchMplsMemberStatsTable.setStatus('deprecated')
wwpLeosVplsVirtualSwitchMplsMemberStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6141, 2, 60, 28, 1, 1, 22, 1), ).setIndexNames((0, "WWP-LEOS-VPLS-MIB", "wwpLeosVplsVirtualSwitchMplsIndx"), (0, "WWP-LEOS-VPLS-MIB", "wwpLeosVplsVirtualSwitchMplsMemberPortId"))
if mibBuilder.loadTexts: wwpLeosVplsVirtualSwitchMplsMemberStatsEntry.setStatus('deprecated')
wwpLeosVplsVirtualSwitchMplsMemberRxBytesHi = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 28, 1, 1, 22, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosVplsVirtualSwitchMplsMemberRxBytesHi.setStatus('current')
wwpLeosVplsVirtualSwitchMplsMemberRxBytesLo = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 28, 1, 1, 22, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosVplsVirtualSwitchMplsMemberRxBytesLo.setStatus('current')
wwpLeosVplsVirtualSwitchMplsMemberMeshVcTable = MibTable((1, 3, 6, 1, 4, 1, 6141, 2, 60, 28, 1, 1, 23), )
if mibBuilder.loadTexts: wwpLeosVplsVirtualSwitchMplsMemberMeshVcTable.setStatus('current')
wwpLeosVplsVirtualSwitchMplsMemberMeshVcEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6141, 2, 60, 28, 1, 1, 23, 1), ).setIndexNames((0, "WWP-LEOS-VPLS-MIB", "wwpLeosVplsVirtualSwitchMplsIndx"), (0, "WWP-LEOS-VPLS-MIB", "wwpLeosVplsVirtualSwitchMplsMemberMeshVcMeshVc"))
if mibBuilder.loadTexts: wwpLeosVplsVirtualSwitchMplsMemberMeshVcEntry.setStatus('current')
wwpLeosVplsVirtualSwitchMplsMemberMeshVcMeshVc = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 28, 1, 1, 23, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosVplsVirtualSwitchMplsMemberMeshVcMeshVc.setStatus('current')
wwpLeosVplsVirtualSwitchMplsMemberMeshVcRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 28, 1, 1, 23, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wwpLeosVplsVirtualSwitchMplsMemberMeshVcRowStatus.setStatus('current')
wwpLeosVplsVirtualSwitchMplsMemberAcVcTable = MibTable((1, 3, 6, 1, 4, 1, 6141, 2, 60, 28, 1, 1, 24), )
if mibBuilder.loadTexts: wwpLeosVplsVirtualSwitchMplsMemberAcVcTable.setStatus('current')
wwpLeosVplsVirtualSwitchMplsMemberAcVcEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6141, 2, 60, 28, 1, 1, 24, 1), ).setIndexNames((0, "WWP-LEOS-VPLS-MIB", "wwpLeosVplsVirtualSwitchMplsIndx"), (0, "WWP-LEOS-VPLS-MIB", "wwpLeosVplsVirtualSwitchMplsMemberAcVcAcVc"))
if mibBuilder.loadTexts: wwpLeosVplsVirtualSwitchMplsMemberAcVcEntry.setStatus('current')
wwpLeosVplsVirtualSwitchMplsMemberAcVcAcVc = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 28, 1, 1, 24, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosVplsVirtualSwitchMplsMemberAcVcAcVc.setStatus('current')
wwpLeosVplsVirtualSwitchMplsMemberAcVcRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 28, 1, 1, 24, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wwpLeosVplsVirtualSwitchMplsMemberAcVcRowStatus.setStatus('current')
wwpLeosVplsSwitchMplsCtrlProtocolTable = MibTable((1, 3, 6, 1, 4, 1, 6141, 2, 60, 28, 1, 1, 25), )
if mibBuilder.loadTexts: wwpLeosVplsSwitchMplsCtrlProtocolTable.setStatus('current')
wwpLeosVplsSwitchMplsCtrlProtocolEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6141, 2, 60, 28, 1, 1, 25, 1), ).setIndexNames((0, "WWP-LEOS-VPLS-MIB", "wwpLeosVplsVirtualSwitchMplsIndx"), (0, "WWP-LEOS-VPLS-MIB", "wwpLeosVplsSwitchMplsCtrlProtocolNum"))
if mibBuilder.loadTexts: wwpLeosVplsSwitchMplsCtrlProtocolEntry.setStatus('current')
wwpLeosVplsSwitchMplsCtrlProtocolNum = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 28, 1, 1, 25, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15))).clone(namedValues=NamedValues(("l28021x", 1), ("rstp", 2), ("ciscoCdp", 3), ("ciscoDtp", 4), ("ciscoPagp", 5), ("ciscoPvst", 6), ("ciscoUplinkFast", 7), ("ciscoUdlp", 8), ("ciscoVtp", 9), ("gvrp", 10), ("lacp", 11), ("lacpMarker", 12), ("oam", 13), ("lldp", 14), ("vlanBridge", 15)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosVplsSwitchMplsCtrlProtocolNum.setStatus('current')
wwpLeosVplsSwitchMplsCtrlType = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 28, 1, 1, 25, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("discard", 1), ("peer", 2), ("tunnel", 3)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wwpLeosVplsSwitchMplsCtrlType.setStatus('current')
wwpLeosVplsVirtualSwitchEthTable = MibTable((1, 3, 6, 1, 4, 1, 6141, 2, 60, 28, 1, 1, 26), )
if mibBuilder.loadTexts: wwpLeosVplsVirtualSwitchEthTable.setStatus('current')
wwpLeosVplsVirtualSwitchEthEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6141, 2, 60, 28, 1, 1, 26, 1), ).setIndexNames((0, "WWP-LEOS-VPLS-MIB", "wwpLeosVplsVirtualSwitchEthIndx"))
if mibBuilder.loadTexts: wwpLeosVplsVirtualSwitchEthEntry.setStatus('current')
wwpLeosVplsVirtualSwitchEthIndx = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 28, 1, 1, 26, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosVplsVirtualSwitchEthIndx.setStatus('current')
wwpLeosVplsVirtualSwitchEthName = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 28, 1, 1, 26, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 31))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wwpLeosVplsVirtualSwitchEthName.setStatus('current')
wwpLeosVplsVirtualSwitchEthVc = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 28, 1, 1, 26, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wwpLeosVplsVirtualSwitchEthVc.setStatus('current')
wwpLeosVplsVirtualSwitchEthEncapCosPolicy = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 28, 1, 1, 26, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("fixed", 1), ("inheritDot1dPri", 2), ("inheritIpPrec", 3), ("inheritPhbg", 4), ("port-inherit", 5))).clone('fixed')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpLeosVplsVirtualSwitchEthEncapCosPolicy.setStatus('current')
wwpLeosVplsVirtualSwitchEthEncapFixedDot1dPri = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 28, 1, 1, 26, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7)).clone(2)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpLeosVplsVirtualSwitchEthEncapFixedDot1dPri.setStatus('current')
wwpLeosVplsVirtualSwitchEthDecapCosPolicy = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 28, 1, 1, 26, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("fixed", 1), ("inheritVc", 2), ("inheritTunnel", 3), ("leave", 4))).clone('leave')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpLeosVplsVirtualSwitchEthDecapCosPolicy.setStatus('current')
wwpLeosVplsVirtualSwitchEthDecapFixedDot1dPri = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 28, 1, 1, 26, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7)).clone(2)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpLeosVplsVirtualSwitchEthDecapFixedDot1dPri.setStatus('current')
wwpLeosVplsVirtualSwitchEthCtrlProtocolTunnelState = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 28, 1, 1, 26, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpLeosVplsVirtualSwitchEthCtrlProtocolTunnelState.setStatus('current')
wwpLeosVplsVirtualSwitchEthRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 28, 1, 1, 26, 1, 9), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wwpLeosVplsVirtualSwitchEthRowStatus.setStatus('current')
wwpLeosVplsVirtualSwitchEthMacLrnState = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 28, 1, 1, 26, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpLeosVplsVirtualSwitchEthMacLrnState.setStatus('current')
wwpLeosVplsVirtualSwitchEthTunnelMethod = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 28, 1, 1, 26, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("l2pt", 1), ("transparent", 2))).clone('l2pt')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpLeosVplsVirtualSwitchEthTunnelMethod.setStatus('current')
wwpLeosVplsVirtualSwitchEthCtrlProtocolDot1dPri = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 28, 1, 1, 26, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7)).clone(6)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpLeosVplsVirtualSwitchEthCtrlProtocolDot1dPri.setStatus('current')
wwpLeosVplsVirtualSwitchEthSubscriberDot1dPolicy = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 28, 1, 1, 26, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("leave", 1), ("provider-inherit", 2))).clone('leave')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpLeosVplsVirtualSwitchEthSubscriberDot1dPolicy.setStatus('current')
wwpLeosVplsVirtualSwitchEthCtrlProtTransFrameValidate = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 28, 1, 1, 26, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpLeosVplsVirtualSwitchEthCtrlProtTransFrameValidate.setStatus('current')
wwpLeosVplsVirtualSwitchEthVcType = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 28, 1, 1, 26, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("none", 1), ("ethernet", 2), ("pbt", 3))).clone('ethernet')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wwpLeosVplsVirtualSwitchEthVcType.setStatus('current')
wwpLeosVplsVirtualSwitchEthHonorPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 28, 1, 1, 26, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("c-vlan", 1), ("s-vlan", 2))).clone('c-vlan')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpLeosVplsVirtualSwitchEthHonorPriority.setStatus('current')
wwpLeosVplsVirtualSwitchEthDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 28, 1, 1, 26, 1, 17), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpLeosVplsVirtualSwitchEthDescription.setStatus('current')
wwpLeosVplsVirtualSwitchEthReservedVlan = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 28, 1, 1, 26, 1, 18), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4094))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wwpLeosVplsVirtualSwitchEthReservedVlan.setStatus('current')
wwpLeosVplsVirtualSwitchEthMemberTable = MibTable((1, 3, 6, 1, 4, 1, 6141, 2, 60, 28, 1, 1, 27), )
if mibBuilder.loadTexts: wwpLeosVplsVirtualSwitchEthMemberTable.setStatus('deprecated')
wwpLeosVplsVirtualSwitchEthMemberEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6141, 2, 60, 28, 1, 1, 27, 1), ).setIndexNames((0, "WWP-LEOS-VPLS-MIB", "wwpLeosVplsVirtualSwitchEthIndx"), (0, "WWP-LEOS-VPLS-MIB", "wwpLeosVplsVirtualSwitchEthMemberPortId"))
if mibBuilder.loadTexts: wwpLeosVplsVirtualSwitchEthMemberEntry.setStatus('deprecated')
wwpLeosVplsVirtualSwitchEthMemberPortId = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 28, 1, 1, 27, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosVplsVirtualSwitchEthMemberPortId.setStatus('current')
wwpLeosVplsVirtualSwitchEthMemberVlan = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 28, 1, 1, 27, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4094))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wwpLeosVplsVirtualSwitchEthMemberVlan.setStatus('current')
wwpLeosVplsVirtualSwitchEthMemberRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 28, 1, 1, 27, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wwpLeosVplsVirtualSwitchEthMemberRowStatus.setStatus('current')
wwpLeosVplsVirtualSwitchEthMemberEncapCosPolicy = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 28, 1, 1, 27, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("fixed", 1), ("inheritDot1dPri", 2), ("inheritIpPrec", 3), ("inheritPhbg", 4), ("inheritVs", 5), ("port-inherit", 6))).clone('inheritVs')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpLeosVplsVirtualSwitchEthMemberEncapCosPolicy.setStatus('current')
wwpLeosVplsVirtualSwitchEthMemberEncapCosFixedDot1DPri = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 28, 1, 1, 27, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7)).clone(2)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpLeosVplsVirtualSwitchEthMemberEncapCosFixedDot1DPri.setStatus('current')
wwpLeosVplsVirtualSwitchEthMemberSubscriberDot1dPolicy = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 28, 1, 1, 27, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("leave", 1), ("provider-inherit", 2), ("inheritVs", 3))).clone('inheritVs')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpLeosVplsVirtualSwitchEthMemberSubscriberDot1dPolicy.setStatus('current')
wwpLeosVplsVirtualSwitchEthMemberStatsTable = MibTable((1, 3, 6, 1, 4, 1, 6141, 2, 60, 28, 1, 1, 28), )
if mibBuilder.loadTexts: wwpLeosVplsVirtualSwitchEthMemberStatsTable.setStatus('deprecated')
wwpLeosVplsVirtualSwitchEthMemberStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6141, 2, 60, 28, 1, 1, 28, 1), ).setIndexNames((0, "WWP-LEOS-VPLS-MIB", "wwpLeosVplsVirtualSwitchEthIndx"), (0, "WWP-LEOS-VPLS-MIB", "wwpLeosVplsVirtualSwitchEthMemberPortId"))
if mibBuilder.loadTexts: wwpLeosVplsVirtualSwitchEthMemberStatsEntry.setStatus('deprecated')
wwpLeosVplsVirtualSwitchEthMemberRxBytesHi = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 28, 1, 1, 28, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosVplsVirtualSwitchEthMemberRxBytesHi.setStatus('current')
wwpLeosVplsVirtualSwitchEthMemberRxBytesLo = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 28, 1, 1, 28, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosVplsVirtualSwitchEthMemberRxBytesLo.setStatus('current')
wwpLeosVplsSwitchEthCtrlProtocolTable = MibTable((1, 3, 6, 1, 4, 1, 6141, 2, 60, 28, 1, 1, 29), )
if mibBuilder.loadTexts: wwpLeosVplsSwitchEthCtrlProtocolTable.setStatus('current')
wwpLeosVplsSwitchEthCtrlProtocolEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6141, 2, 60, 28, 1, 1, 29, 1), ).setIndexNames((0, "WWP-LEOS-VPLS-MIB", "wwpLeosVplsVirtualSwitchEthIndx"), (0, "WWP-LEOS-VPLS-MIB", "wwpLeosVplsSwitchEthCtrlProtocolNum"))
if mibBuilder.loadTexts: wwpLeosVplsSwitchEthCtrlProtocolEntry.setStatus('current')
wwpLeosVplsSwitchEthCtrlProtocolNum = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 28, 1, 1, 29, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15))).clone(namedValues=NamedValues(("l28021x", 1), ("rstp", 2), ("ciscoCdp", 3), ("ciscoDtp", 4), ("ciscoPagp", 5), ("ciscoPvst", 6), ("ciscoUplinkFast", 7), ("ciscoUdlp", 8), ("ciscoVtp", 9), ("gvrp", 10), ("lacp", 11), ("lacpMarker", 12), ("oam", 13), ("lldp", 14), ("vlanBridge", 15)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosVplsSwitchEthCtrlProtocolNum.setStatus('current')
wwpLeosVplsSwitchEthCtrlType = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 28, 1, 1, 29, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("discard", 1), ("peer", 2), ("tunnel", 3)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wwpLeosVplsSwitchEthCtrlType.setStatus('current')
wwpLeosVplsVirtualSwitchEtypeTranslationTable = MibTable((1, 3, 6, 1, 4, 1, 6141, 2, 60, 28, 1, 1, 30), )
if mibBuilder.loadTexts: wwpLeosVplsVirtualSwitchEtypeTranslationTable.setStatus('current')
wwpLeosVplsVirtualSwitchEtypeTranslationEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6141, 2, 60, 28, 1, 1, 30, 1), ).setIndexNames((0, "WWP-LEOS-VPLS-MIB", "wwpLeosVplsVirtualSwitchEtypeTranslationOriginalEtype"))
if mibBuilder.loadTexts: wwpLeosVplsVirtualSwitchEtypeTranslationEntry.setStatus('current')
wwpLeosVplsVirtualSwitchEtypeTranslationOriginalEtype = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 28, 1, 1, 30, 1, 1), EtherType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosVplsVirtualSwitchEtypeTranslationOriginalEtype.setStatus('current')
wwpLeosVplsVirtualSwitchEtypeTranslationMappedEtype = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 28, 1, 1, 30, 1, 2), EtherType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wwpLeosVplsVirtualSwitchEtypeTranslationMappedEtype.setStatus('current')
wwpLeosVplsVirtualSwitchEtypeTranslationRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 28, 1, 1, 30, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wwpLeosVplsVirtualSwitchEtypeTranslationRowStatus.setStatus('current')
wwpLeosVplsTunnelPairTable = MibTable((1, 3, 6, 1, 4, 1, 6141, 2, 60, 28, 1, 1, 31), )
if mibBuilder.loadTexts: wwpLeosVplsTunnelPairTable.setStatus('current')
wwpLeosVplsTunnelPairEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6141, 2, 60, 28, 1, 1, 31, 1), ).setIndexNames((0, "WWP-LEOS-VPLS-MIB", "wwpLeosVplsTunnelPairIndx"))
if mibBuilder.loadTexts: wwpLeosVplsTunnelPairEntry.setStatus('current')
wwpLeosVplsTunnelPairIndx = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 28, 1, 1, 31, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)))
if mibBuilder.loadTexts: wwpLeosVplsTunnelPairIndx.setStatus('current')
wwpLeosVplsTunnelPairName = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 28, 1, 1, 31, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 31))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wwpLeosVplsTunnelPairName.setStatus('current')
wwpLeosVplsTunnelPairEncapTunnelIndx = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 28, 1, 1, 31, 1, 3), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wwpLeosVplsTunnelPairEncapTunnelIndx.setStatus('current')
wwpLeosVplsTunnelPairDecapTunnelIndx = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 28, 1, 1, 31, 1, 4), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wwpLeosVplsTunnelPairDecapTunnelIndx.setStatus('current')
wwpLeosVplsTunnelPairRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 28, 1, 1, 31, 1, 5), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wwpLeosVplsTunnelPairRowStatus.setStatus('current')
wwpLeosVplsVirtualSwitchMplsEvplMemberTable = MibTable((1, 3, 6, 1, 4, 1, 6141, 2, 60, 28, 1, 1, 32), )
if mibBuilder.loadTexts: wwpLeosVplsVirtualSwitchMplsEvplMemberTable.setStatus('current')
wwpLeosVplsVirtualSwitchMplsEvplMemberEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6141, 2, 60, 28, 1, 1, 32, 1), ).setIndexNames((0, "WWP-LEOS-VPLS-MIB", "wwpLeosVplsVirtualSwitchMplsIndx"), (0, "WWP-LEOS-VPLS-MIB", "wwpLeosVplsVirtualSwitchMplsEvplMemberPortId"), (0, "WWP-LEOS-VPLS-MIB", "wwpLeosVplsVirtualSwitchMplsEvplMemberVlanId"))
if mibBuilder.loadTexts: wwpLeosVplsVirtualSwitchMplsEvplMemberEntry.setStatus('current')
wwpLeosVplsVirtualSwitchMplsEvplMemberPortId = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 28, 1, 1, 32, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wwpLeosVplsVirtualSwitchMplsEvplMemberPortId.setStatus('current')
wwpLeosVplsVirtualSwitchMplsEvplMemberVlanId = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 28, 1, 1, 32, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4094))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wwpLeosVplsVirtualSwitchMplsEvplMemberVlanId.setStatus('current')
wwpLeosVplsVirtualSwitchMplsEvplMemberRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 28, 1, 1, 32, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wwpLeosVplsVirtualSwitchMplsEvplMemberRowStatus.setStatus('current')
wwpLeosVplsVirtualSwitchMplsEvplMemberEncapCosPolicy = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 28, 1, 1, 32, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("fixed", 1), ("inheritDot1dPri", 2), ("inheritIpPrec", 3), ("inheritPhbg", 4), ("inheritVs", 5), ("port-inherit", 6))).clone('inheritVs')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpLeosVplsVirtualSwitchMplsEvplMemberEncapCosPolicy.setStatus('current')
wwpLeosVplsVirtualSwitchMplsEvplMemberEncapFixedDot1dPri = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 28, 1, 1, 32, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7)).clone(2)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpLeosVplsVirtualSwitchMplsEvplMemberEncapFixedDot1dPri.setStatus('current')
wwpLeosVplsVirtualSwitchMplsEvplMemberSubscriberDot1dPolicy = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 28, 1, 1, 32, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("leave", 1), ("provider-inherit", 2), ("inheritVs", 3))).clone('inheritVs')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpLeosVplsVirtualSwitchMplsEvplMemberSubscriberDot1dPolicy.setStatus('current')
wwpLeosVplsVirtualSwitchMplsEvplMemberStatsTable = MibTable((1, 3, 6, 1, 4, 1, 6141, 2, 60, 28, 1, 1, 33), )
if mibBuilder.loadTexts: wwpLeosVplsVirtualSwitchMplsEvplMemberStatsTable.setStatus('current')
wwpLeosVplsVirtualSwitchMplsEvplMemberStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6141, 2, 60, 28, 1, 1, 33, 1), ).setIndexNames((0, "WWP-LEOS-VPLS-MIB", "wwpLeosVplsVirtualSwitchMplsIndx"), (0, "WWP-LEOS-VPLS-MIB", "wwpLeosVplsVirtualSwitchMplsEvplMemberPortId"), (0, "WWP-LEOS-VPLS-MIB", "wwpLeosVplsVirtualSwitchMplsEvplMemberVlanId"))
if mibBuilder.loadTexts: wwpLeosVplsVirtualSwitchMplsEvplMemberStatsEntry.setStatus('current')
wwpLeosVplsVirtualSwitchMplsEvplMemberRxBytesHi = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 28, 1, 1, 33, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosVplsVirtualSwitchMplsEvplMemberRxBytesHi.setStatus('current')
wwpLeosVplsVirtualSwitchMplsEvplMemberRxBytesLo = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 28, 1, 1, 33, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosVplsVirtualSwitchMplsEvplMemberRxBytesLo.setStatus('current')
wwpLeosVplsVirtualSwitchEthEvplMemberTable = MibTable((1, 3, 6, 1, 4, 1, 6141, 2, 60, 28, 1, 1, 34), )
if mibBuilder.loadTexts: wwpLeosVplsVirtualSwitchEthEvplMemberTable.setStatus('current')
wwpLeosVplsVirtualSwitchEthEvplMemberEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6141, 2, 60, 28, 1, 1, 34, 1), ).setIndexNames((0, "WWP-LEOS-VPLS-MIB", "wwpLeosVplsVirtualSwitchEthIndx"), (0, "WWP-LEOS-VPLS-MIB", "wwpLeosVplsVirtualSwitchEthEvplMemberPortId"), (0, "WWP-LEOS-VPLS-MIB", "wwpLeosVplsVirtualSwitchEthEvplMemberVlan"))
if mibBuilder.loadTexts: wwpLeosVplsVirtualSwitchEthEvplMemberEntry.setStatus('current')
wwpLeosVplsVirtualSwitchEthEvplMemberPortId = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 28, 1, 1, 34, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosVplsVirtualSwitchEthEvplMemberPortId.setStatus('current')
wwpLeosVplsVirtualSwitchEthEvplMemberVlan = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 28, 1, 1, 34, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4095))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wwpLeosVplsVirtualSwitchEthEvplMemberVlan.setStatus('current')
wwpLeosVplsVirtualSwitchEthEvplMemberRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 28, 1, 1, 34, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wwpLeosVplsVirtualSwitchEthEvplMemberRowStatus.setStatus('current')
wwpLeosVplsVirtualSwitchEthEvplMemberEncapCosPolicy = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 28, 1, 1, 34, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("fixed", 1), ("inheritDot1dPri", 2), ("inheritIpPrec", 3), ("inheritPhbg", 4), ("inheritVs", 5), ("port-inherit", 6))).clone('inheritVs')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpLeosVplsVirtualSwitchEthEvplMemberEncapCosPolicy.setStatus('current')
wwpLeosVplsVirtualSwitchEthEvplMemberEncapFixedDot1dPri = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 28, 1, 1, 34, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7)).clone(2)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpLeosVplsVirtualSwitchEthEvplMemberEncapFixedDot1dPri.setStatus('current')
wwpLeosVplsVirtualSwitchEthEvplMemberSubscriberDot1dPolicy = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 28, 1, 1, 34, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("leave", 1), ("provider-inherit", 2), ("inheritVs", 3))).clone('inheritVs')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpLeosVplsVirtualSwitchEthEvplMemberSubscriberDot1dPolicy.setStatus('current')
wwpLeosVplsVirtualSwitchEthEvplMemberTranslateTag = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 28, 1, 1, 34, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4094))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wwpLeosVplsVirtualSwitchEthEvplMemberTranslateTag.setStatus('current')
wwpLeosVplsVirtualSwitchEthEvplMemberServiceVlanTpid = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 28, 1, 1, 34, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 99))).clone(namedValues=NamedValues(("tpid8100", 1), ("tpid9100", 2), ("tpid88A8", 3), ("none", 99)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wwpLeosVplsVirtualSwitchEthEvplMemberServiceVlanTpid.setStatus('current')
wwpLeosVplsVirtualSwitchEthEvplMemberStatsTable = MibTable((1, 3, 6, 1, 4, 1, 6141, 2, 60, 28, 1, 1, 35), )
if mibBuilder.loadTexts: wwpLeosVplsVirtualSwitchEthEvplMemberStatsTable.setStatus('current')
wwpLeosVplsVirtualSwitchEthEvplMemberStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6141, 2, 60, 28, 1, 1, 35, 1), ).setIndexNames((0, "WWP-LEOS-VPLS-MIB", "wwpLeosVplsVirtualSwitchEthIndx"), (0, "WWP-LEOS-VPLS-MIB", "wwpLeosVplsVirtualSwitchEthEvplMemberPortId"), (0, "WWP-LEOS-VPLS-MIB", "wwpLeosVplsVirtualSwitchEthEvplMemberVlan"))
if mibBuilder.loadTexts: wwpLeosVplsVirtualSwitchEthEvplMemberStatsEntry.setStatus('current')
wwpLeosVplsVirtualSwitchEthEvplMemberRxBytesHi = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 28, 1, 1, 35, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosVplsVirtualSwitchEthEvplMemberRxBytesHi.setStatus('current')
wwpLeosVplsVirtualSwitchEthEvplMemberRxBytesLo = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 28, 1, 1, 35, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosVplsVirtualSwitchEthEvplMemberRxBytesLo.setStatus('current')
wwpLeosVplsVirtualCircuitEthTotalStatsTable = MibTable((1, 3, 6, 1, 4, 1, 6141, 2, 60, 28, 1, 1, 36), )
if mibBuilder.loadTexts: wwpLeosVplsVirtualCircuitEthTotalStatsTable.setStatus('current')
wwpLeosVplsVirtualCircuitEthTotalStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6141, 2, 60, 28, 1, 1, 36, 1), ).setIndexNames((0, "WWP-LEOS-VPLS-MIB", "wwpLeosVplsVirtualCircuitEthIndex"))
if mibBuilder.loadTexts: wwpLeosVplsVirtualCircuitEthTotalStatsEntry.setStatus('current')
wwpLeosVplsVirtualCircuitEthTotalTxBytesHi = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 28, 1, 1, 36, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosVplsVirtualCircuitEthTotalTxBytesHi.setStatus('current')
wwpLeosVplsVirtualCircuitEthTotalTxBytesLo = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 28, 1, 1, 36, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosVplsVirtualCircuitEthTotalTxBytesLo.setStatus('current')
wwpLeosVplsVirtualCircuitEthTotalRxBytesHi = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 28, 1, 1, 36, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosVplsVirtualCircuitEthTotalRxBytesHi.setStatus('current')
wwpLeosVplsVirtualCircuitEthTotalRxBytesLo = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 28, 1, 1, 36, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosVplsVirtualCircuitEthTotalRxBytesLo.setStatus('current')
wwpLeosVplsVirtualCircuitMplsTotalStatsTable = MibTable((1, 3, 6, 1, 4, 1, 6141, 2, 60, 28, 1, 1, 37), )
if mibBuilder.loadTexts: wwpLeosVplsVirtualCircuitMplsTotalStatsTable.setStatus('current')
wwpLeosVplsVirtualCircuitMplsTotalStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6141, 2, 60, 28, 1, 1, 37, 1), ).setIndexNames((0, "WWP-LEOS-VPLS-MIB", "wwpLeosVplsVirtualCircuitMplsIndex"))
if mibBuilder.loadTexts: wwpLeosVplsVirtualCircuitMplsTotalStatsEntry.setStatus('current')
wwpLeosVplsVirtualCircuitMplsTotalTxBytesHi = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 28, 1, 1, 37, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosVplsVirtualCircuitMplsTotalTxBytesHi.setStatus('current')
wwpLeosVplsVirtualCircuitMplsTotalTxBytesLo = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 28, 1, 1, 37, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosVplsVirtualCircuitMplsTotalTxBytesLo.setStatus('current')
wwpLeosVplsVirtualCircuitMplsTotalRxBytesHi = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 28, 1, 1, 37, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosVplsVirtualCircuitMplsTotalRxBytesHi.setStatus('current')
wwpLeosVplsVirtualCircuitMplsTotalRxBytesLo = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 28, 1, 1, 37, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosVplsVirtualCircuitMplsTotalRxBytesLo.setStatus('current')
wwpLeosVplsVirtualSwitchEthL2CftProtocolTable = MibTable((1, 3, 6, 1, 4, 1, 6141, 2, 60, 28, 1, 1, 49), )
if mibBuilder.loadTexts: wwpLeosVplsVirtualSwitchEthL2CftProtocolTable.setStatus('current')
wwpLeosVplsVirtualSwitchEthL2CftProtocolEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6141, 2, 60, 28, 1, 1, 49, 1), ).setIndexNames((0, "WWP-LEOS-VPLS-MIB", "wwpLeosVplsVirtualSwitchEthIndx"), (0, "WWP-LEOS-VPLS-MIB", "wwpLeosVplsVirtualSwitchEthL2CftProtocolType"))
if mibBuilder.loadTexts: wwpLeosVplsVirtualSwitchEthL2CftProtocolEntry.setStatus('current')
wwpLeosVplsVirtualSwitchEthL2CftProtocolType = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 28, 1, 1, 49, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 32, 33, 34, 99))).clone(namedValues=NamedValues(("ciscoCdp", 1), ("ciscoDtp", 2), ("ciscoPagp", 3), ("ciscoUdld", 4), ("ciscoVtp", 5), ("ciscoPvst", 6), ("ciscoStpUplinkFast", 7), ("vlanBridge", 8), ("rstp", 9), ("lacp", 10), ("lacpMarker", 11), ("oam", 12), ("lldp", 13), ("i8021x", 14), ("gmrp", 15), ("gvrp", 16), ("brigeBlock", 32), ("allBridgesBlock", 33), ("garpBlock", 34), ("unknown", 99))))
if mibBuilder.loadTexts: wwpLeosVplsVirtualSwitchEthL2CftProtocolType.setStatus('current')
wwpLeosVplsVirtualSwitchEthL2CftProtocolDisposition = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 28, 1, 1, 49, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("forward", 1), ("discard", 2))).clone('forward')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wwpLeosVplsVirtualSwitchEthL2CftProtocolDisposition.setStatus('current')
wwpLeosVplsVirtualSwitchEthL2CftProtocolRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 28, 1, 1, 49, 1, 64), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wwpLeosVplsVirtualSwitchEthL2CftProtocolRowStatus.setStatus('current')
wwpLeosVplsVirtualSwitchCFTProtoStatsTable = MibTable((1, 3, 6, 1, 4, 1, 6141, 2, 60, 28, 1, 1, 50), )
if mibBuilder.loadTexts: wwpLeosVplsVirtualSwitchCFTProtoStatsTable.setStatus('current')
wwpLeosVplsVirtualSwitchCFTProtoStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6141, 2, 60, 28, 1, 1, 50, 1), ).setIndexNames((0, "WWP-LEOS-VPLS-MIB", "wwpLeosVplsVirtualSwitchCFTProtoStatsEntryVirtualSwitchIndx"), (0, "WWP-LEOS-VPLS-MIB", "wwpLeosVplsVirtualSwitchCFTProtol2ProtocolNum"))
if mibBuilder.loadTexts: wwpLeosVplsVirtualSwitchCFTProtoStatsEntry.setStatus('current')
wwpLeosVplsVirtualSwitchCFTProtoStatsEntryVirtualSwitchIndx = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 28, 1, 1, 50, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosVplsVirtualSwitchCFTProtoStatsEntryVirtualSwitchIndx.setStatus('current')
wwpLeosVplsVirtualSwitchCFTProtol2RxPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 28, 1, 1, 50, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosVplsVirtualSwitchCFTProtol2RxPkts.setStatus('current')
wwpLeosVplsVirtualSwitchCFTProtol2TunneledPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 28, 1, 1, 50, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosVplsVirtualSwitchCFTProtol2TunneledPkts.setStatus('current')
wwpLeosVplsVirtualSwitchCFTProtol2PeerPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 28, 1, 1, 50, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosVplsVirtualSwitchCFTProtol2PeerPkts.setStatus('current')
wwpLeosVplsVirtualSwitchCFTProtol2DiscardedPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 28, 1, 1, 50, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosVplsVirtualSwitchCFTProtol2DiscardedPkts.setStatus('current')
wwpLeosVplsVirtualSwitchCFTProtol2DecodedPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 28, 1, 1, 50, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosVplsVirtualSwitchCFTProtol2DecodedPkts.setStatus('current')
wwpLeosVplsVirtualSwitchCFTProtol2DecodedFailures = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 28, 1, 1, 50, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosVplsVirtualSwitchCFTProtol2DecodedFailures.setStatus('current')
wwpLeosVplsVirtualSwitchCFTProtol2TunneledSubcriberPortPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 28, 1, 1, 50, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosVplsVirtualSwitchCFTProtol2TunneledSubcriberPortPkts.setStatus('current')
wwpLeosVplsVirtualSwitchCFTProtol2ProtocolNum = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 28, 1, 1, 50, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15))).clone(namedValues=NamedValues(("l28021x", 1), ("rstp", 2), ("ciscoCdp", 3), ("ciscoDtp", 4), ("ciscoPagp", 5), ("ciscoPvst", 6), ("ciscoUplinkFast", 7), ("ciscoUdlp", 8), ("ciscoVtp", 9), ("gvrp", 10), ("lacp", 11), ("lacpMarker", 12), ("lldp", 13), ("oam", 14), ("vlanBridge", 15)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosVplsVirtualSwitchCFTProtol2ProtocolNum.setStatus('current')
wwpLeosVplsVirtualSwitchCFTProtoTotalStatsTable = MibTable((1, 3, 6, 1, 4, 1, 6141, 2, 60, 28, 1, 1, 51), )
if mibBuilder.loadTexts: wwpLeosVplsVirtualSwitchCFTProtoTotalStatsTable.setStatus('current')
wwpLeosVplsVirtualSwitchCFTProtoTotalStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6141, 2, 60, 28, 1, 1, 51, 1), ).setIndexNames((0, "WWP-LEOS-VPLS-MIB", "wwpLeosVplsVirtualSwitchCFTProtoTotalStatsEntryVirtualSwitchIndx"), (0, "WWP-LEOS-VPLS-MIB", "wwpLeosVplsVirtualSwitchCFTProtoTotall2ProtocolNum"))
if mibBuilder.loadTexts: wwpLeosVplsVirtualSwitchCFTProtoTotalStatsEntry.setStatus('current')
wwpLeosVplsVirtualSwitchCFTProtoTotalStatsEntryVirtualSwitchIndx = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 28, 1, 1, 51, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosVplsVirtualSwitchCFTProtoTotalStatsEntryVirtualSwitchIndx.setStatus('current')
wwpLeosVplsVirtualSwitchCFTProtoTotall2RxPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 28, 1, 1, 51, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosVplsVirtualSwitchCFTProtoTotall2RxPkts.setStatus('current')
wwpLeosVplsVirtualSwitchCFTProtoTotall2TunneledPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 28, 1, 1, 51, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosVplsVirtualSwitchCFTProtoTotall2TunneledPkts.setStatus('current')
wwpLeosVplsVirtualSwitchCFTProtoTotall2PeerPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 28, 1, 1, 51, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosVplsVirtualSwitchCFTProtoTotall2PeerPkts.setStatus('current')
wwpLeosVplsVirtualSwitchCFTProtoTotall2DiscardedPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 28, 1, 1, 51, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosVplsVirtualSwitchCFTProtoTotall2DiscardedPkts.setStatus('current')
wwpLeosVplsVirtualSwitchCFTProtoTotall2DecodedPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 28, 1, 1, 51, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosVplsVirtualSwitchCFTProtoTotall2DecodedPkts.setStatus('current')
wwpLeosVplsVirtualSwitchCFTProtoTotall2DecodedFailures = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 28, 1, 1, 51, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosVplsVirtualSwitchCFTProtoTotall2DecodedFailures.setStatus('current')
wwpLeosVplsVirtualSwitchCFTProtoTotall2TunneledSubcriberPortPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 28, 1, 1, 51, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosVplsVirtualSwitchCFTProtoTotall2TunneledSubcriberPortPkts.setStatus('current')
wwpLeosVplsVirtualSwitchCFTProtoTotall2ProtocolNum = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 28, 1, 1, 51, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15))).clone(namedValues=NamedValues(("l28021x", 1), ("rstp", 2), ("ciscoCdp", 3), ("ciscoDtp", 4), ("ciscoPagp", 5), ("ciscoPvst", 6), ("ciscoUplinkFast", 7), ("ciscoUdlp", 8), ("ciscoVtp", 9), ("gvrp", 10), ("lacp", 11), ("lacpMarker", 12), ("lldp", 13), ("oam", 14), ("vlanBridge", 15)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosVplsVirtualSwitchCFTProtoTotall2ProtocolNum.setStatus('current')
mibBuilder.exportSymbols("WWP-LEOS-VPLS-MIB", wwpLeosVplsVirtualSwitchMplsEvplMemberEncapCosPolicy=wwpLeosVplsVirtualSwitchMplsEvplMemberEncapCosPolicy, wwpLeosVplsEncapTunnelDestBridgeIndex=wwpLeosVplsEncapTunnelDestBridgeIndex, wwpLeosVplsVirtualSwitchMplsMemberEntry=wwpLeosVplsVirtualSwitchMplsMemberEntry, wwpLeosVplsVirtualSwitchMplsMemberVlanId=wwpLeosVplsVirtualSwitchMplsMemberVlanId, wwpLeosVplsVirtualCircuitTunnelIndx=wwpLeosVplsVirtualCircuitTunnelIndx, wwpLeosVplsMplsPathTable=wwpLeosVplsMplsPathTable, wwpLeosVplsVirtualSwitchEthMemberTable=wwpLeosVplsVirtualSwitchEthMemberTable, wwpLeosVplsEncapTunnelBVID=wwpLeosVplsEncapTunnelBVID, wwpLeosVplsEncapTunnelEntry=wwpLeosVplsEncapTunnelEntry, wwpLeosVplsSwitchReservedVlanTable=wwpLeosVplsSwitchReservedVlanTable, wwpLeosVplsVirtualCircuitEthTotalTxBytesHi=wwpLeosVplsVirtualCircuitEthTotalTxBytesHi, wwpLeosVplsVirtualCircuitEthStatsEntry=wwpLeosVplsVirtualCircuitEthStatsEntry, VlanId=VlanId, wwpLeosVplsTunnelPairEntry=wwpLeosVplsTunnelPairEntry, wwpLeosVplsVirtualSwitchCFTProtoTotalStatsEntryVirtualSwitchIndx=wwpLeosVplsVirtualSwitchCFTProtoTotalStatsEntryVirtualSwitchIndx, wwpLeosVplsVirtualSwitchEthVc=wwpLeosVplsVirtualSwitchEthVc, wwpLeosVplsVirtualSwitchMplsMemberMeshVcEntry=wwpLeosVplsVirtualSwitchMplsMemberMeshVcEntry, wwpLeosVplsEncapTunnelDestResolvedMac=wwpLeosVplsEncapTunnelDestResolvedMac, wwpLeosVplsVirtualSwitchCFTProtoTotall2DecodedPkts=wwpLeosVplsVirtualSwitchCFTProtoTotall2DecodedPkts, wwpLeosVplsMplsPathName=wwpLeosVplsMplsPathName, wwpLeosVplsEncapTunnelDestAddr=wwpLeosVplsEncapTunnelDestAddr, wwpLeosVplsVirtualCircuitProviderVlanId=wwpLeosVplsVirtualCircuitProviderVlanId, wwpLeosVplsEncapTunnelEgressPort=wwpLeosVplsEncapTunnelEgressPort, wwpLeosVplsDecapTunnelPort=wwpLeosVplsDecapTunnelPort, wwpLeosVplsVirtualSwitchEthReservedVlan=wwpLeosVplsVirtualSwitchEthReservedVlan, wwpLeosVplsVirtualCircuitMplsTotalRxBytesHi=wwpLeosVplsVirtualCircuitMplsTotalRxBytesHi, wwpLeosVplsVirtualSwitchEthTunnelMethod=wwpLeosVplsVirtualSwitchEthTunnelMethod, wwpLeosVplsEncapTunnelEncapLabel=wwpLeosVplsEncapTunnelEncapLabel, wwpLeosVplsVirtualCircuitMplsTotalStatsEntry=wwpLeosVplsVirtualCircuitMplsTotalStatsEntry, wwpLeosVplsVirtualSwitchMplsMemberAcVcRowStatus=wwpLeosVplsVirtualSwitchMplsMemberAcVcRowStatus, wwpLeosVplsEncapTunnelFastReroute=wwpLeosVplsEncapTunnelFastReroute, wwpLeosVplsVirtualSwitchEthTable=wwpLeosVplsVirtualSwitchEthTable, wwpLeosVplsDecapTunnelEntry=wwpLeosVplsDecapTunnelEntry, wwpLeosVplsVirtualSwitchMplsMemberSubscriberDot1dPolicy=wwpLeosVplsVirtualSwitchMplsMemberSubscriberDot1dPolicy, wwpLeosVplsVirtualSwitchMplsMemberRxBytesHi=wwpLeosVplsVirtualSwitchMplsMemberRxBytesHi, wwpLeosVplsVirtualSwitchName=wwpLeosVplsVirtualSwitchName, wwpLeosVplsVirtualSwitchMplsTable=wwpLeosVplsVirtualSwitchMplsTable, wwpLeosVplsVirtualSwitchCFTProtoTotalStatsEntry=wwpLeosVplsVirtualSwitchCFTProtoTotalStatsEntry, wwpLeosVplsVirtualCircuitMplsEntry=wwpLeosVplsVirtualCircuitMplsEntry, wwpLeosVplsVirtualCircuitMplsDecapLabel=wwpLeosVplsVirtualCircuitMplsDecapLabel, wwpLeosVplsSwitchEthCtrlType=wwpLeosVplsSwitchEthCtrlType, wwpLeosVplsVirtualSwitchMplsCtrlProtocolDot1dPri=wwpLeosVplsVirtualSwitchMplsCtrlProtocolDot1dPri, wwpLeosVplsVirtualSwitchMplsEncapFixedDot1dPri=wwpLeosVplsVirtualSwitchMplsEncapFixedDot1dPri, wwpLeosVplsVirtualSwitchEthEvplMemberRowStatus=wwpLeosVplsVirtualSwitchEthEvplMemberRowStatus, EtherType=EtherType, wwpLeosVplsSwitchMplsCtrlProtocolNum=wwpLeosVplsSwitchMplsCtrlProtocolNum, wwpLeosVplsDecapTunnelName=wwpLeosVplsDecapTunnelName, wwpLeosVplsDecapTunnelLabel=wwpLeosVplsDecapTunnelLabel, wwpLeosVplsVirtualSwitchMplsVpnId=wwpLeosVplsVirtualSwitchMplsVpnId, wwpLeosVplsVirtualSwitchEthEvplMemberEntry=wwpLeosVplsVirtualSwitchEthEvplMemberEntry, wwpLeosVplsVirtualCircuitEthEntry=wwpLeosVplsVirtualCircuitEthEntry, wwpLeosVplsVirtualSwitchEthEvplMemberEncapCosPolicy=wwpLeosVplsVirtualSwitchEthEvplMemberEncapCosPolicy, wwpLeosVplsVirtualSwitchEthEvplMemberRxBytesHi=wwpLeosVplsVirtualSwitchEthEvplMemberRxBytesHi, wwpLeosVplsVirtualCircuitMplsMtu=wwpLeosVplsVirtualCircuitMplsMtu, wwpLeosVplsVirtualSwitchEthCtrlProtocolDot1dPri=wwpLeosVplsVirtualSwitchEthCtrlProtocolDot1dPri, wwpLeosVplsVirtualSwitchCFTProtoTotall2TunneledSubcriberPortPkts=wwpLeosVplsVirtualSwitchCFTProtoTotall2TunneledSubcriberPortPkts, wwpLeosVplsVirtualCircuitMplsStatusTlv=wwpLeosVplsVirtualCircuitMplsStatusTlv, wwpLeosVplsVirtualCircuitEthTotalStatsEntry=wwpLeosVplsVirtualCircuitEthTotalStatsEntry, wwpLeosVplsVirtualSwitchEthMemberPortId=wwpLeosVplsVirtualSwitchEthMemberPortId, wwpLeosVplsVirtualCircuitMplsActiveTunnelId=wwpLeosVplsVirtualCircuitMplsActiveTunnelId, wwpLeosVplsVirtualSwitchEthDecapCosPolicy=wwpLeosVplsVirtualSwitchEthDecapCosPolicy, PYSNMP_MODULE_ID=wwpLeosVplsMIB, wwpLeosVplsVirtualCircuitMplsName=wwpLeosVplsVirtualCircuitMplsName, wwpLeosVplsRsvpAttrSetupPri=wwpLeosVplsRsvpAttrSetupPri, wwpLeosVplsVirtualSwitchCFTProtol2DiscardedPkts=wwpLeosVplsVirtualSwitchCFTProtol2DiscardedPkts, wwpLeosVplsSwitchMplsCtrlType=wwpLeosVplsSwitchMplsCtrlType, wwpLeosVplsVirtualCircuitStatsClear=wwpLeosVplsVirtualCircuitStatsClear, wwpLeosVplsVirtualSwitchMplsEvplMemberRxBytesLo=wwpLeosVplsVirtualSwitchMplsEvplMemberRxBytesLo, wwpLeosVplsVirtualSwitchMplsMemberMeshVcRowStatus=wwpLeosVplsVirtualSwitchMplsMemberMeshVcRowStatus, wwpLeosVplsVirtualCircuitMplsProtectionType=wwpLeosVplsVirtualCircuitMplsProtectionType, wwpLeosVplsVirtualSwitchPriVc=wwpLeosVplsVirtualSwitchPriVc, wwpLeosVplsVirtualCircuitEthTotalTxBytesLo=wwpLeosVplsVirtualCircuitEthTotalTxBytesLo, wwpLeosVplsVirtualSwitchTable=wwpLeosVplsVirtualSwitchTable, wwpLeosVplsVirtualSwitchMplsEntry=wwpLeosVplsVirtualSwitchMplsEntry, wwpLeosVplsVirtualCircuitEtherTypeTable=wwpLeosVplsVirtualCircuitEtherTypeTable, wwpLeosVplsVirtualCircuitMplsOperStatus=wwpLeosVplsVirtualCircuitMplsOperStatus, wwpLeosVplsEncapTunnelDestResolvedPort=wwpLeosVplsEncapTunnelDestResolvedPort, wwpLeosVplsVirtualCircuitMplsTxBytesHi=wwpLeosVplsVirtualCircuitMplsTxBytesHi, wwpLeosVplsStaticLabelRangeStart=wwpLeosVplsStaticLabelRangeStart, wwpLeosVplsEncapTunnelPartnerTunnelId=wwpLeosVplsEncapTunnelPartnerTunnelId, wwpLeosVplsVirtualSwitchEthCtrlProtTransFrameValidate=wwpLeosVplsVirtualSwitchEthCtrlProtTransFrameValidate, wwpLeosVplsVirtualSwitchMplsMemberEncapCosFixedDot1DPri=wwpLeosVplsVirtualSwitchMplsMemberEncapCosFixedDot1DPri, wwpLeosVplsVirtualSwitchCFTProtoTotalStatsTable=wwpLeosVplsVirtualSwitchCFTProtoTotalStatsTable, wwpLeosVplsVirtualSwitchEthDecapFixedDot1dPri=wwpLeosVplsVirtualSwitchEthDecapFixedDot1dPri, wwpLeosVplsVirtualSwitchMplsRowStatus=wwpLeosVplsVirtualSwitchMplsRowStatus, wwpLeosVplsVirtualSwitchCFTProtol2RxPkts=wwpLeosVplsVirtualSwitchCFTProtol2RxPkts, wwpLeosVplsVirtualSwitchMemberTable=wwpLeosVplsVirtualSwitchMemberTable, wwpLeosVplsMIB=wwpLeosVplsMIB, wwpLeosVplsEncapTunnelTable=wwpLeosVplsEncapTunnelTable, wwpLeosVplsVirtualCircuitMplsRxBytesLo=wwpLeosVplsVirtualCircuitMplsRxBytesLo, wwpLeosVplsVirtualSwitchMplsSubscriberDot1dPolicy=wwpLeosVplsVirtualSwitchMplsSubscriberDot1dPolicy, wwpLeosVplsSwitchMplsCtrlProtocolEntry=wwpLeosVplsSwitchMplsCtrlProtocolEntry, wwpLeosVplsVirtualSwitchEthEntry=wwpLeosVplsVirtualSwitchEthEntry, wwpLeosVplsVirtualCircuitMplsTotalTxBytesLo=wwpLeosVplsVirtualCircuitMplsTotalTxBytesLo, wwpLeosVplsDecapTunnelMac=wwpLeosVplsDecapTunnelMac, wwpLeosVplsVirtualSwitchCFTProtoTotall2DiscardedPkts=wwpLeosVplsVirtualSwitchCFTProtoTotall2DiscardedPkts, wwpLeosVplsVirtualCircuitIngressVcLabel=wwpLeosVplsVirtualCircuitIngressVcLabel, wwpLeosVplsVirtualSwitchMplsMemberStatsEntry=wwpLeosVplsVirtualSwitchMplsMemberStatsEntry, wwpLeosVplsVirtualSwitchEthEvplMemberTranslateTag=wwpLeosVplsVirtualSwitchEthEvplMemberTranslateTag, wwpLeosVplsVirtualSwitchMplsMemberStatsTable=wwpLeosVplsVirtualSwitchMplsMemberStatsTable, wwpLeosVplsVirtualSwitchCFTProtol2PeerPkts=wwpLeosVplsVirtualSwitchCFTProtol2PeerPkts, wwpLeosVplsDecapTunnelBridgeIndex=wwpLeosVplsDecapTunnelBridgeIndex, wwpLeosVplsMplsPathRowStatus=wwpLeosVplsMplsPathRowStatus, wwpLeosVplsVirtualSwitchMplsMemberPortId=wwpLeosVplsVirtualSwitchMplsMemberPortId, wwpLeosVplsVirtualSwitchMplsIndx=wwpLeosVplsVirtualSwitchMplsIndx, wwpLeosVplsVirtualSwitchEthMemberSubscriberDot1dPolicy=wwpLeosVplsVirtualSwitchEthMemberSubscriberDot1dPolicy, wwpLeosVplsVirtualSwitchMplsEvplMemberStatsEntry=wwpLeosVplsVirtualSwitchMplsEvplMemberStatsEntry, wwpLeosVplsVirtualSwitchMplsMemberEncapCosPolicy=wwpLeosVplsVirtualSwitchMplsMemberEncapCosPolicy, wwpLeosVplsVirtualSwitchType=wwpLeosVplsVirtualSwitchType, wwpLeosVplsVirtualSwitchEthL2CftProtocolRowStatus=wwpLeosVplsVirtualSwitchEthL2CftProtocolRowStatus, wwpLeosVplsVirtualSwitchCFTProtol2TunneledSubcriberPortPkts=wwpLeosVplsVirtualSwitchCFTProtol2TunneledSubcriberPortPkts, wwpLeosVplsVirtualSwitchMplsDecapCosPolicy=wwpLeosVplsVirtualSwitchMplsDecapCosPolicy, wwpLeosVplsVirtualSwitchMplsMemberRowStatus=wwpLeosVplsVirtualSwitchMplsMemberRowStatus, wwpLeosVplsVirtualCircuitEthRowStatus=wwpLeosVplsVirtualCircuitEthRowStatus, wwpLeosVplsVirtualCircuitMplsStatsEntry=wwpLeosVplsVirtualCircuitMplsStatsEntry, wwpLeosVplsVirtualSwitchEthL2CftProtocolTable=wwpLeosVplsVirtualSwitchEthL2CftProtocolTable, wwpLeosVplsEncapTunnelType=wwpLeosVplsEncapTunnelType, wwpLeosVplsVirtualCircuitEthIndex=wwpLeosVplsVirtualCircuitEthIndex, wwpLeosVplsEncapTunnelRowStatus=wwpLeosVplsEncapTunnelRowStatus, wwpLeosVplsVirtualCircuitEntry=wwpLeosVplsVirtualCircuitEntry, wwpLeosVplsVirtualCircuitMplsDestAddr=wwpLeosVplsVirtualCircuitMplsDestAddr, wwpLeosVplsEncapTunnelEncapFixedExp=wwpLeosVplsEncapTunnelEncapFixedExp, wwpLeosVplsEncapTunnelLspType=wwpLeosVplsEncapTunnelLspType, wwpLeosVplsVirtualSwitchMplsMemberAcVcAcVc=wwpLeosVplsVirtualSwitchMplsMemberAcVcAcVc, wwpLeosVplsVirtualSwitchMplsEvplMemberVlanId=wwpLeosVplsVirtualSwitchMplsEvplMemberVlanId, wwpLeosVplsVirtualSwitchEthMemberRxBytesLo=wwpLeosVplsVirtualSwitchEthMemberRxBytesLo, wwpLeosVplsVirtualSwitchMplsEvplMemberRowStatus=wwpLeosVplsVirtualSwitchMplsEvplMemberRowStatus, wwpLeosVplsSwitchCtrlProtocolNum=wwpLeosVplsSwitchCtrlProtocolNum, wwpLeosVplsVirtualCircuitEthTotalRxBytesHi=wwpLeosVplsVirtualCircuitEthTotalRxBytesHi, wwpLeosVplsVirtualSwitchMplsEvplMemberTable=wwpLeosVplsVirtualSwitchMplsEvplMemberTable, wwpLeosVplsMIBGroups=wwpLeosVplsMIBGroups, wwpLeosVplsVirtualSwitchEthEvplMemberEncapFixedDot1dPri=wwpLeosVplsVirtualSwitchEthEvplMemberEncapFixedDot1dPri, wwpLeosVplsVirtualSwitchCtrlProtocolTunnelState=wwpLeosVplsVirtualSwitchCtrlProtocolTunnelState, wwpLeosVplsVirtualSwitchEthEvplMemberRxBytesLo=wwpLeosVplsVirtualSwitchEthEvplMemberRxBytesLo, wwpLeosVplsVirtualSwitchDecapFixedDot1dPri=wwpLeosVplsVirtualSwitchDecapFixedDot1dPri, wwpLeosVplsVirtualSwitchEthRowStatus=wwpLeosVplsVirtualSwitchEthRowStatus, wwpLeosVplsVirtualSwitchEthEncapFixedDot1dPri=wwpLeosVplsVirtualSwitchEthEncapFixedDot1dPri, wwpLeosVpls=wwpLeosVpls, wwpLeosVplsVirtualSwitchMplsMemberMeshVcTable=wwpLeosVplsVirtualSwitchMplsMemberMeshVcTable, wwpLeosVplsVirtualSwitchEtypeTranslationMappedEtype=wwpLeosVplsVirtualSwitchEtypeTranslationMappedEtype, wwpLeosVplsVirtualCircuitMplsTable=wwpLeosVplsVirtualCircuitMplsTable, wwpLeosVplsVirtualSwitchCFTProtol2DecodedPkts=wwpLeosVplsVirtualSwitchCFTProtol2DecodedPkts, wwpLeosVplsVirtualSwitchMemberPortId=wwpLeosVplsVirtualSwitchMemberPortId, wwpLeosVplsVirtualSwitchEthEvplMemberTable=wwpLeosVplsVirtualSwitchEthEvplMemberTable, wwpLeosVplsEncapTunnelOperStatus=wwpLeosVplsEncapTunnelOperStatus, wwpLeosVplsVirtualSwitchEthEvplMemberSubscriberDot1dPolicy=wwpLeosVplsVirtualSwitchEthEvplMemberSubscriberDot1dPolicy, wwpLeosVplsVirtualSwitchEthMemberRowStatus=wwpLeosVplsVirtualSwitchEthMemberRowStatus, wwpLeosVplsVirtualSwitchMplsEvplMemberStatsTable=wwpLeosVplsVirtualSwitchMplsEvplMemberStatsTable, wwpLeosVplsVirtualSwitchStatus=wwpLeosVplsVirtualSwitchStatus, wwpLeosVplsSwitchCtrlType=wwpLeosVplsSwitchCtrlType, wwpLeosVplsVirtualSwitchEncapCosPolicy=wwpLeosVplsVirtualSwitchEncapCosPolicy, wwpLeosVplsVirtualSwitchEthMemberStatsEntry=wwpLeosVplsVirtualSwitchEthMemberStatsEntry, wwpLeosVplsEncapTunnelName=wwpLeosVplsEncapTunnelName, wwpLeosVplsVirtualCircuitEthRxBytesLo=wwpLeosVplsVirtualCircuitEthRxBytesLo, wwpLeosVplsVirtualSwitchMemberEntry=wwpLeosVplsVirtualSwitchMemberEntry, wwpLeosVplsVirtualSwitchEtypeTranslationEntry=wwpLeosVplsVirtualSwitchEtypeTranslationEntry, wwpLeosVplsVirtualSwitchMplsMemberMeshVcMeshVc=wwpLeosVplsVirtualSwitchMplsMemberMeshVcMeshVc, wwpLeosVplsRsvpAttrRecordRoute=wwpLeosVplsRsvpAttrRecordRoute, wwpLeosVplsEncapTunnelPathIndex=wwpLeosVplsEncapTunnelPathIndex, wwpLeosVplsVirtualSwitchCFTProtoStatsEntryVirtualSwitchIndx=wwpLeosVplsVirtualSwitchCFTProtoStatsEntryVirtualSwitchIndx, wwpLeosVplsEncapTunnelTTLPolicy=wwpLeosVplsEncapTunnelTTLPolicy, wwpLeosVplsVirtualSwitchMplsCtrlProtTransFrameValidate=wwpLeosVplsVirtualSwitchMplsCtrlProtTransFrameValidate, wwpLeosVplsSwitchEthCtrlProtocolTable=wwpLeosVplsSwitchEthCtrlProtocolTable, wwpLeosVplsVirtualSwitchMplsEvplMemberSubscriberDot1dPolicy=wwpLeosVplsVirtualSwitchMplsEvplMemberSubscriberDot1dPolicy, wwpLeosVplsVirtualCircuitName=wwpLeosVplsVirtualCircuitName, wwpLeosVplsMplsPathEntry=wwpLeosVplsMplsPathEntry, wwpLeosVplsVirtualSwitchMplsMacLrnState=wwpLeosVplsVirtualSwitchMplsMacLrnState, wwpLeosVplsVirtualSwitchMplsDecapTTLPolicy=wwpLeosVplsVirtualSwitchMplsDecapTTLPolicy, wwpLeosVplsVirtualSwitchMplsMemberRxBytesLo=wwpLeosVplsVirtualSwitchMplsMemberRxBytesLo, wwpLeosVplsVirtualSwitchEthMemberVlan=wwpLeosVplsVirtualSwitchEthMemberVlan, wwpLeosVplsVirtualSwitchEthVcType=wwpLeosVplsVirtualSwitchEthVcType, wwpLeosVplsTunnelPairName=wwpLeosVplsTunnelPairName, wwpLeosVplsVirtualCircuitEthTotalStatsTable=wwpLeosVplsVirtualCircuitEthTotalStatsTable, wwpLeosVplsVirtualSwitchEthMemberEncapCosPolicy=wwpLeosVplsVirtualSwitchEthMemberEncapCosPolicy, wwpLeosVplsDynamicLabelRangeStart=wwpLeosVplsDynamicLabelRangeStart, wwpLeosVplsVirtualSwitchEtypeTranslationOriginalEtype=wwpLeosVplsVirtualSwitchEtypeTranslationOriginalEtype, wwpLeosVplsVirtualSwitchEthEvplMemberPortId=wwpLeosVplsVirtualSwitchEthEvplMemberPortId, wwpLeosVplsVirtualCircuitStatus=wwpLeosVplsVirtualCircuitStatus, wwpLeosVplsEncapTunnelProtType=wwpLeosVplsEncapTunnelProtType, wwpLeosVplsRsvpAttrIndex=wwpLeosVplsRsvpAttrIndex, wwpLeosVplsMIBCompliances=wwpLeosVplsMIBCompliances, wwpLeosVplsVirtualCircuitMplsTxBytesLo=wwpLeosVplsVirtualCircuitMplsTxBytesLo, wwpLeosVplsVirtualCircuitTable=wwpLeosVplsVirtualCircuitTable, wwpLeosVplsMplsPathMemberTable=wwpLeosVplsMplsPathMemberTable, wwpLeosVplsVirtualSwitchIndx=wwpLeosVplsVirtualSwitchIndx, wwpLeosVplsVirtualCircuitEthProviderVlanId=wwpLeosVplsVirtualCircuitEthProviderVlanId, wwpLeosVplsRsvpAttrTable=wwpLeosVplsRsvpAttrTable, wwpLeosVplsGlobalAttrs=wwpLeosVplsGlobalAttrs, wwpLeosVplsVirtualSwitchCFTProtoTotall2RxPkts=wwpLeosVplsVirtualSwitchCFTProtoTotall2RxPkts, wwpLeosVplsDecapTunnelType=wwpLeosVplsDecapTunnelType, wwpLeosVplsVirtualSwitchCFTProtol2TunneledPkts=wwpLeosVplsVirtualSwitchCFTProtol2TunneledPkts, wwpLeosVplsVirtualSwitchEncapFixedDot1dPri=wwpLeosVplsVirtualSwitchEncapFixedDot1dPri, wwpLeosVplsVirtualSwitchCFTProtoStatsEntry=wwpLeosVplsVirtualSwitchCFTProtoStatsEntry, wwpLeosVplsVirtualCircuitMplsFixedTunnelId=wwpLeosVplsVirtualCircuitMplsFixedTunnelId, wwpLeosVplsVirtualCircuitMplsStatus=wwpLeosVplsVirtualCircuitMplsStatus, wwpLeosVplsSwitchCtrlProtocolEntry=wwpLeosVplsSwitchCtrlProtocolEntry, wwpLeosVplsVirtualSwitchMplsHonorPriority=wwpLeosVplsVirtualSwitchMplsHonorPriority, wwpLeosVplsEncapTunnelEncapCosPolicy=wwpLeosVplsEncapTunnelEncapCosPolicy, wwpLeosVplsVirtualSwitchEthEncapCosPolicy=wwpLeosVplsVirtualSwitchEthEncapCosPolicy, wwpLeosVplsVirtualCircuitMplsTotalTxBytesHi=wwpLeosVplsVirtualCircuitMplsTotalTxBytesHi, wwpLeosVplsVirtualSwitchMplsEvplMemberPortId=wwpLeosVplsVirtualSwitchMplsEvplMemberPortId, wwpLeosVplsVirtualSwitchCFTProtol2ProtocolNum=wwpLeosVplsVirtualSwitchCFTProtol2ProtocolNum, wwpLeosVplsVirtualSwitchMplsType=wwpLeosVplsVirtualSwitchMplsType, wwpLeosVplsDecapTunnelBVID=wwpLeosVplsDecapTunnelBVID, wwpLeosVplsVirtualCircuitEtherTypePolicy=wwpLeosVplsVirtualCircuitEtherTypePolicy, wwpLeosVplsDecapTunnelId=wwpLeosVplsDecapTunnelId, wwpLeosVplsVirtualSwitchDecapCosPolicy=wwpLeosVplsVirtualSwitchDecapCosPolicy, wwpLeosVplsDecapTunnelRowStatus=wwpLeosVplsDecapTunnelRowStatus, wwpLeosVplsSwitchCtrlProtocolTable=wwpLeosVplsSwitchCtrlProtocolTable, wwpLeosVplsMplsPathMemberIpIndex=wwpLeosVplsMplsPathMemberIpIndex, wwpLeosVplsTunnelPairDecapTunnelIndx=wwpLeosVplsTunnelPairDecapTunnelIndx, wwpLeosVplsTunnelFixedTTL=wwpLeosVplsTunnelFixedTTL, wwpLeosVplsVirtualSwitchEthL2CftProtocolDisposition=wwpLeosVplsVirtualSwitchEthL2CftProtocolDisposition, wwpLeosVplsTunnelPairRowStatus=wwpLeosVplsTunnelPairRowStatus, wwpLeosVplsVirtualSwitchMemberStatus=wwpLeosVplsVirtualSwitchMemberStatus, wwpLeosVplsVirtualSwitchEthEvplMemberStatsTable=wwpLeosVplsVirtualSwitchEthEvplMemberStatsTable, wwpLeosVplsDecapTunnelOperStatus=wwpLeosVplsDecapTunnelOperStatus, wwpLeosVplsVirtualSwitchCFTProtoTotall2TunneledPkts=wwpLeosVplsVirtualSwitchCFTProtoTotall2TunneledPkts, wwpLeosVplsVirtualCircuitEthStatsMonitor=wwpLeosVplsVirtualCircuitEthStatsMonitor, wwpLeosVplsMIBConformance=wwpLeosVplsMIBConformance, wwpLeosVplsVirtualSwitchMplsTunnelMethod=wwpLeosVplsVirtualSwitchMplsTunnelMethod, wwpLeosVplsVirtualCircuitEthTotalRxBytesLo=wwpLeosVplsVirtualCircuitEthTotalRxBytesLo, wwpLeosVplsVirtualSwitchEthHonorPriority=wwpLeosVplsVirtualSwitchEthHonorPriority, wwpLeosVplsVirtualCircuitEgressVcLabel=wwpLeosVplsVirtualCircuitEgressVcLabel, wwpLeosVplsVirtualCircuitMplsTunnelPolicy=wwpLeosVplsVirtualCircuitMplsTunnelPolicy, wwpLeosVplsVirtualSwitchEthL2CftProtocolType=wwpLeosVplsVirtualSwitchEthL2CftProtocolType, wwpLeosVplsVirtualSwitchSecVc=wwpLeosVplsVirtualSwitchSecVc, wwpLeosVplsVirtualCircuitMplsRxBytesHi=wwpLeosVplsVirtualCircuitMplsRxBytesHi, wwpLeosVplsMplsPathOptionIndex=wwpLeosVplsMplsPathOptionIndex, wwpLeosVplsTunnelPairEncapTunnelIndx=wwpLeosVplsTunnelPairEncapTunnelIndx, wwpLeosVplsVirtualSwitchMplsEncapCosPolicy=wwpLeosVplsVirtualSwitchMplsEncapCosPolicy, wwpLeosVplsVirtualCircuitEthRxBytesHi=wwpLeosVplsVirtualCircuitEthRxBytesHi, wwpLeosVplsVirtualSwitchMplsEvplMemberRxBytesHi=wwpLeosVplsVirtualSwitchMplsEvplMemberRxBytesHi, wwpLeosVplsVirtualCircuitEthName=wwpLeosVplsVirtualCircuitEthName, wwpLeosVplsVirtualSwitchEthSubscriberDot1dPolicy=wwpLeosVplsVirtualSwitchEthSubscriberDot1dPolicy, wwpLeosVplsVirtualSwitchEthMacLrnState=wwpLeosVplsVirtualSwitchEthMacLrnState, wwpLeosVplsSwitchReservedVlanId=wwpLeosVplsSwitchReservedVlanId, wwpLeosVplsVirtualSwitchSubscriberVlan=wwpLeosVplsVirtualSwitchSubscriberVlan, wwpLeosVplsVirtualSwitchMplsDecapFixedDot1dPri=wwpLeosVplsVirtualSwitchMplsDecapFixedDot1dPri, wwpLeosVplsVirtualCircuitMplsType=wwpLeosVplsVirtualCircuitMplsType, wwpLeosVplsStaticLabelRangeEnd=wwpLeosVplsStaticLabelRangeEnd, wwpLeosVplsVirtualSwitchCFTProtoTotall2PeerPkts=wwpLeosVplsVirtualSwitchCFTProtoTotall2PeerPkts, wwpLeosVplsEncapTunnelActive=wwpLeosVplsEncapTunnelActive, wwpLeosVplsEncapTunnelAdminStatus=wwpLeosVplsEncapTunnelAdminStatus, wwpLeosVplsDynamicLabelRangeEnd=wwpLeosVplsDynamicLabelRangeEnd, wwpLeosVplsVirtualSwitchCFTProtoTotall2ProtocolNum=wwpLeosVplsVirtualSwitchCFTProtoTotall2ProtocolNum, wwpLeosVplsMplsPathMemberEntry=wwpLeosVplsMplsPathMemberEntry, wwpLeosVplsVirtualSwitchMplsEvplMemberEncapFixedDot1dPri=wwpLeosVplsVirtualSwitchMplsEvplMemberEncapFixedDot1dPri, wwpLeosVplsMIBObjects=wwpLeosVplsMIBObjects, wwpLeosVplsVirtualCircuitEthTable=wwpLeosVplsVirtualCircuitEthTable, wwpLeosVplsVirtualSwitchCFTProtoTotall2DecodedFailures=wwpLeosVplsVirtualSwitchCFTProtoTotall2DecodedFailures, wwpLeosVplsVirtualSwitchEthL2CftProtocolEntry=wwpLeosVplsVirtualSwitchEthL2CftProtocolEntry, wwpLeosVirtualCircuitEthStatsClear=wwpLeosVirtualCircuitEthStatsClear, wwpLeosVplsMIBNotifications=wwpLeosVplsMIBNotifications)
mibBuilder.exportSymbols("WWP-LEOS-VPLS-MIB", wwpLeosVplsSwitchReservedVlanEntry=wwpLeosVplsSwitchReservedVlanEntry, wwpLeosVplsMIBNotificationPrefix=wwpLeosVplsMIBNotificationPrefix, wwpLeosVplsSwitchReservedVlanStatus=wwpLeosVplsSwitchReservedVlanStatus, wwpLeosVplsVirtualSwitchMplsName=wwpLeosVplsVirtualSwitchMplsName, wwpLeosVplsVirtualSwitchMplsCtrlProtocolTunnelState=wwpLeosVplsVirtualSwitchMplsCtrlProtocolTunnelState, wwpLeosVplsVirtualCircuitMplsIndex=wwpLeosVplsVirtualCircuitMplsIndex, wwpLeosVplsVirtualCircuitMplsGroupId=wwpLeosVplsVirtualCircuitMplsGroupId, wwpLeosVplsVirtualSwitchEtypeTranslationRowStatus=wwpLeosVplsVirtualSwitchEtypeTranslationRowStatus, wwpLeosVplsVirtualSwitchActiveVc=wwpLeosVplsVirtualSwitchActiveVc, wwpLeosVplsVirtualSwitchEthName=wwpLeosVplsVirtualSwitchEthName, wwpLeosVplsVirtualCircuitEthTxBytesLo=wwpLeosVplsVirtualCircuitEthTxBytesLo, wwpLeosVplsVirtualCircuitMplsTotalStatsTable=wwpLeosVplsVirtualCircuitMplsTotalStatsTable, wwpLeosVplsEncapTunnelId=wwpLeosVplsEncapTunnelId, wwpLeosVplsVirtualCircuitPortId=wwpLeosVplsVirtualCircuitPortId, wwpLeosVplsVirtualCircuitIndex=wwpLeosVplsVirtualCircuitIndex, wwpLeosVplsVirtualCircuitEthTxBytesHi=wwpLeosVplsVirtualCircuitEthTxBytesHi, wwpLeosVplsVirtualSwitchMplsMemberAcVcEntry=wwpLeosVplsVirtualSwitchMplsMemberAcVcEntry, wwpLeosVplsMplsPathMemberRowStatus=wwpLeosVplsMplsPathMemberRowStatus, wwpLeosVplsResolverTimeout=wwpLeosVplsResolverTimeout, wwpLeosVplsVirtualSwitchEthEvplMemberStatsEntry=wwpLeosVplsVirtualSwitchEthEvplMemberStatsEntry, wwpLeosVplsVirtualSwitchEthDescription=wwpLeosVplsVirtualSwitchEthDescription, wwpLeosVplsSwitchEthCtrlProtocolNum=wwpLeosVplsSwitchEthCtrlProtocolNum, wwpLeosVplsVirtualCircuitEtherType=wwpLeosVplsVirtualCircuitEtherType, wwpLeosVplsEncapTunnelDestResolvedVlan=wwpLeosVplsEncapTunnelDestResolvedVlan, wwpLeosVplsVirtualSwitchEthCtrlProtocolTunnelState=wwpLeosVplsVirtualSwitchEthCtrlProtocolTunnelState, wwpLeosVplsVirtualSwitchEthEvplMemberServiceVlanTpid=wwpLeosVplsVirtualSwitchEthEvplMemberServiceVlanTpid, wwpLeosVplsMplsPathIndex=wwpLeosVplsMplsPathIndex, wwpLeosVplsVirtualSwitchEthIndx=wwpLeosVplsVirtualSwitchEthIndx, wwpLeosVplsVirtualCircuitEthStatsTable=wwpLeosVplsVirtualCircuitEthStatsTable, wwpLeosVplsVirtualSwitchMplsEvplMemberEntry=wwpLeosVplsVirtualSwitchMplsEvplMemberEntry, wwpLeosVplsMplsPathMemberIp=wwpLeosVplsMplsPathMemberIp, wwpLeosVplsRsvpAttrEntry=wwpLeosVplsRsvpAttrEntry, wwpLeosVplsVirtualSwitchEthMemberEncapCosFixedDot1DPri=wwpLeosVplsVirtualSwitchEthMemberEncapCosFixedDot1DPri, wwpLeosVplsVirtualSwitchEthMemberStatsTable=wwpLeosVplsVirtualSwitchEthMemberStatsTable, wwpLeosVplsTunnelPairTable=wwpLeosVplsTunnelPairTable, wwpLeosVplsVirtualSwitchEthMemberRxBytesHi=wwpLeosVplsVirtualSwitchEthMemberRxBytesHi, wwpLeosVplsTunnelPairIndx=wwpLeosVplsTunnelPairIndx, wwpLeosVplsRsvpAttrHoldPri=wwpLeosVplsRsvpAttrHoldPri, wwpLeosVplsEncapTunnelEncapFixedPCP=wwpLeosVplsEncapTunnelEncapFixedPCP, wwpLeosVplsVirtualCircuitMplsTotalRxBytesLo=wwpLeosVplsVirtualCircuitMplsTotalRxBytesLo, wwpLeosVplsDecapTunnelTable=wwpLeosVplsDecapTunnelTable, wwpLeosVplsVirtualCircuitType=wwpLeosVplsVirtualCircuitType, wwpLeosVplsVirtualSwitchEthMemberEntry=wwpLeosVplsVirtualSwitchEthMemberEntry, wwpLeosVplsSwitchMplsCtrlProtocolTable=wwpLeosVplsSwitchMplsCtrlProtocolTable, wwpLeosVplsVirtualSwitchMplsMemberAcVcTable=wwpLeosVplsVirtualSwitchMplsMemberAcVcTable, wwpLeosVplsSwitchEthCtrlProtocolEntry=wwpLeosVplsSwitchEthCtrlProtocolEntry, wwpLeosVplsVirtualSwitchCFTProtoStatsTable=wwpLeosVplsVirtualSwitchCFTProtoStatsTable, wwpLeosVplsVirtualSwitchMplsMemberTable=wwpLeosVplsVirtualSwitchMplsMemberTable, wwpLeosVplsVirtualSwitchEthEvplMemberVlan=wwpLeosVplsVirtualSwitchEthEvplMemberVlan, wwpLeosVplsVirtualSwitchCFTProtol2DecodedFailures=wwpLeosVplsVirtualSwitchCFTProtol2DecodedFailures, wwpLeosVplsVirtualCircuitMplsStatsTable=wwpLeosVplsVirtualCircuitMplsStatsTable, wwpLeosVplsVirtualSwitchEtypeTranslationTable=wwpLeosVplsVirtualSwitchEtypeTranslationTable, wwpLeosVplsVirtualSwitchEntry=wwpLeosVplsVirtualSwitchEntry, wwpLeosVplsVirtualCircuitMplsEncapLabel=wwpLeosVplsVirtualCircuitMplsEncapLabel, wwpLeosVplsVirtualCircuitEtherTypeEntry=wwpLeosVplsVirtualCircuitEtherTypeEntry)
