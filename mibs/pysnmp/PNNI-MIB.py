#
# PySNMP MIB module PNNI-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/PNNI-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:15:28 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ValueSizeConstraint, ValueRangeConstraint, ConstraintsUnion, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ValueSizeConstraint", "ValueRangeConstraint", "ConstraintsUnion", "SingleValueConstraint")
AtmTrafficDescrParamIndex, = mibBuilder.importSymbols("ATM-TC-MIB", "AtmTrafficDescrParamIndex")
InterfaceIndex, ifIndex = mibBuilder.importSymbols("IF-MIB", "InterfaceIndex", "ifIndex")
NotificationGroup, ObjectGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ObjectGroup", "ModuleCompliance")
Gauge32, Integer32, enterprises, zeroDotZero, NotificationType, ObjectIdentity, TimeTicks, iso, IpAddress, MibScalar, MibTable, MibTableRow, MibTableColumn, MibIdentifier, Bits, Counter32, ModuleIdentity, Unsigned32, Counter64 = mibBuilder.importSymbols("SNMPv2-SMI", "Gauge32", "Integer32", "enterprises", "zeroDotZero", "NotificationType", "ObjectIdentity", "TimeTicks", "iso", "IpAddress", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "MibIdentifier", "Bits", "Counter32", "ModuleIdentity", "Unsigned32", "Counter64")
RowStatus, DisplayString, TextualConvention, TruthValue, TimeStamp = mibBuilder.importSymbols("SNMPv2-TC", "RowStatus", "DisplayString", "TextualConvention", "TruthValue", "TimeStamp")
pnniMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 353, 5, 4, 1))
pnniMIB.setRevisions(('2002-04-24 00:00', '1997-03-01 00:00', '1996-02-27 00:00',))
if mibBuilder.loadTexts: pnniMIB.setLastUpdated('200204240000Z')
if mibBuilder.loadTexts: pnniMIB.setOrganization('The ATM Forum')
atmForum = MibIdentifier((1, 3, 6, 1, 4, 1, 353))
atmForumNetworkManagement = MibIdentifier((1, 3, 6, 1, 4, 1, 353, 5))
atmfPnni = MibIdentifier((1, 3, 6, 1, 4, 1, 353, 5, 4))
pnniMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 1))
class PnniAtmAddr(TextualConvention, OctetString):
    reference = 'ATM Forum PNNI 1.0 Section 5.2'
    status = 'current'
    subtypeSpec = OctetString.subtypeSpec + ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(20, 20), )
class PnniNodeIndex(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ValueRangeConstraint(0, 65535)

class PnniNodeId(TextualConvention, OctetString):
    reference = 'ATM Forum PNNI 1.0 Section 5.3.3'
    status = 'current'
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(22, 22)
    fixedLength = 22

class PnniPortId(TextualConvention, Unsigned32):
    reference = 'ATM Forum PNNI 1.0 Section 5.3.4'
    status = 'current'

class PnniAggrToken(TextualConvention, Unsigned32):
    reference = 'ATM Forum PNNI 1.0 Section 5.3.5'
    status = 'current'

class PnniPeerGroupId(TextualConvention, OctetString):
    reference = 'ATM Forum PNNI 1.0 Section 5.3.2'
    status = 'current'
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(14, 14)
    fixedLength = 14

class PnniLevel(TextualConvention, Integer32):
    reference = 'ATM Forum PNNI 1.0 Section 5.3.1'
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ValueRangeConstraint(0, 104)

class PnniSvccRccIndex(TextualConvention, Integer32):
    status = 'current'

class AtmAddrPrefix(TextualConvention, OctetString):
    reference = 'ATM Forum PNNI 1.0 Section 5.2'
    status = 'current'
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(19, 19)
    fixedLength = 19

class PnniPrefixLength(TextualConvention, Integer32):
    reference = 'ATM Forum PNNI 1.0 Section 5.2'
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ValueRangeConstraint(0, 152)

class PnniMetricsTag(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ValueRangeConstraint(0, 2147483647)

class ServiceCategory(TextualConvention, Integer32):
    reference = 'ATM Forum Traffic Management 4.0 Section 2'
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))
    namedValues = NamedValues(("other", 1), ("cbr", 2), ("rtVbr", 3), ("nrtVbr", 4), ("abr", 5), ("ubr", 6))

class ClpType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("clpEqual0", 1), ("clpEqual0Or1", 2))

class TnsType(TextualConvention, Integer32):
    reference = 'ATM Forum UNI Signalling 4.0 Section 2 4.5.22/Q.2931'
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(2, 8))
    namedValues = NamedValues(("nationalNetworkIdentification", 2), ("other", 8))

class TnsPlan(TextualConvention, Integer32):
    reference = 'ATM Forum UNI Signalling 4.0 Section 2 4.5.22/Q.2931'
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 16))
    namedValues = NamedValues(("carrierIdentificationCode", 1), ("other", 16))

class PnniVersion(TextualConvention, Integer32):
    reference = 'ATM Forum PNNI 1.0 Section 5.6.1'
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("unsupported", 1), ("version1point0", 2))

class PnniHelloState(TextualConvention, Integer32):
    reference = 'ATM Forum PNNI 1.0 Section 5.6.2.1.2'
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))
    namedValues = NamedValues(("notApplicable", 1), ("down", 2), ("attempt", 3), ("oneWayInside", 4), ("twoWayInside", 5), ("oneWayOutside", 6), ("twoWayOutside", 7), ("commonOutside", 8))

pnniBaseGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 1, 1))
pnniHighestVersion = MibScalar((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 1, 1, 1), PnniVersion()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pnniHighestVersion.setStatus('current')
pnniLowestVersion = MibScalar((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 1, 1, 2), PnniVersion()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pnniLowestVersion.setStatus('current')
pnniDtlCountOriginator = MibScalar((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 1, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pnniDtlCountOriginator.setStatus('current')
pnniDtlCountBorder = MibScalar((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 1, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pnniDtlCountBorder.setStatus('current')
pnniCrankbackCountOriginator = MibScalar((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 1, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pnniCrankbackCountOriginator.setStatus('current')
pnniCrankbackCountBorder = MibScalar((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 1, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pnniCrankbackCountBorder.setStatus('current')
pnniAltRouteCountOriginator = MibScalar((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 1, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pnniAltRouteCountOriginator.setStatus('current')
pnniAltRouteCountBorder = MibScalar((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 1, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pnniAltRouteCountBorder.setStatus('current')
pnniRouteFailCountOriginator = MibScalar((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 1, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pnniRouteFailCountOriginator.setStatus('current')
pnniRouteFailCountBorder = MibScalar((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 1, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pnniRouteFailCountBorder.setStatus('current')
pnniRouteFailUnreachableOriginator = MibScalar((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 1, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pnniRouteFailUnreachableOriginator.setStatus('current')
pnniRouteFailUnreachableBorder = MibScalar((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 1, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pnniRouteFailUnreachableBorder.setStatus('current')
pnniNodeTable = MibTable((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 1, 2), )
if mibBuilder.loadTexts: pnniNodeTable.setStatus('current')
pnniNodeEntry = MibTableRow((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 1, 2, 1), ).setIndexNames((0, "PNNI-MIB", "pnniNodeIndex"))
if mibBuilder.loadTexts: pnniNodeEntry.setStatus('current')
pnniNodeIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 1, 2, 1, 1), PnniNodeIndex())
if mibBuilder.loadTexts: pnniNodeIndex.setStatus('current')
pnniNodeLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 1, 2, 1, 2), PnniLevel().clone(96)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: pnniNodeLevel.setStatus('current')
pnniNodeId = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 1, 2, 1, 3), PnniNodeId()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: pnniNodeId.setStatus('current')
pnniNodeLowest = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 1, 2, 1, 4), TruthValue().clone('true')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: pnniNodeLowest.setStatus('current')
pnniNodeAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 1, 2, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("up", 1), ("down", 2))).clone('up')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: pnniNodeAdminStatus.setStatus('current')
pnniNodeOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 1, 2, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("up", 1), ("down", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pnniNodeOperStatus.setStatus('current')
pnniNodeDomainName = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 1, 2, 1, 7), DisplayString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: pnniNodeDomainName.setStatus('current')
pnniNodeAtmAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 1, 2, 1, 8), PnniAtmAddr()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: pnniNodeAtmAddress.setStatus('current')
pnniNodePeerGroupId = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 1, 2, 1, 9), PnniPeerGroupId()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: pnniNodePeerGroupId.setStatus('current')
pnniNodeRestrictedTransit = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 1, 2, 1, 10), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: pnniNodeRestrictedTransit.setStatus('current')
pnniNodeComplexRep = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 1, 2, 1, 11), TruthValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: pnniNodeComplexRep.setStatus('current')
pnniNodeRestrictedBranching = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 1, 2, 1, 12), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pnniNodeRestrictedBranching.setStatus('current')
pnniNodeDatabaseOverload = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 1, 2, 1, 13), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pnniNodeDatabaseOverload.setStatus('current')
pnniNodePtses = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 1, 2, 1, 14), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pnniNodePtses.setStatus('current')
pnniNodeRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 1, 2, 1, 15), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: pnniNodeRowStatus.setStatus('current')
pnniNodePglTable = MibTable((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 1, 3), )
if mibBuilder.loadTexts: pnniNodePglTable.setStatus('current')
pnniNodePglEntry = MibTableRow((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 1, 3, 1), )
pnniNodeEntry.registerAugmentions(("PNNI-MIB", "pnniNodePglEntry"))
pnniNodePglEntry.setIndexNames(*pnniNodeEntry.getIndexNames())
if mibBuilder.loadTexts: pnniNodePglEntry.setStatus('current')
pnniNodePglLeadershipPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 1, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 205))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: pnniNodePglLeadershipPriority.setStatus('current')
pnniNodeCfgParentNodeIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 1, 3, 1, 2), PnniNodeIndex()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: pnniNodeCfgParentNodeIndex.setStatus('current')
pnniNodePglInitTime = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 1, 3, 1, 3), Integer32().clone(15)).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: pnniNodePglInitTime.setStatus('current')
pnniNodePglOverrideDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 1, 3, 1, 4), Integer32().clone(30)).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: pnniNodePglOverrideDelay.setStatus('current')
pnniNodePglReelectTime = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 1, 3, 1, 5), Integer32().clone(15)).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: pnniNodePglReelectTime.setStatus('current')
pnniNodePglState = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 1, 3, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10))).clone(namedValues=NamedValues(("starting", 1), ("awaiting", 2), ("awaitingFull", 3), ("initialDelay", 4), ("calculating", 5), ("awaitUnanimity", 6), ("operPgl", 7), ("operNotPgl", 8), ("hungElection", 9), ("awaitReElection", 10)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pnniNodePglState.setStatus('current')
pnniNodePreferredPgl = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 1, 3, 1, 7), PnniNodeId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pnniNodePreferredPgl.setStatus('current')
pnniNodePeerGroupLeader = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 1, 3, 1, 8), PnniNodeId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pnniNodePeerGroupLeader.setStatus('current')
pnniNodePglTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 1, 3, 1, 9), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pnniNodePglTimeStamp.setStatus('current')
pnniNodeActiveParentNodeId = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 1, 3, 1, 10), PnniNodeId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pnniNodeActiveParentNodeId.setStatus('current')
pnniNodeTimerTable = MibTable((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 1, 4), )
if mibBuilder.loadTexts: pnniNodeTimerTable.setStatus('current')
pnniNodeTimerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 1, 4, 1), )
pnniNodeEntry.registerAugmentions(("PNNI-MIB", "pnniNodeTimerEntry"))
pnniNodeTimerEntry.setIndexNames(*pnniNodeEntry.getIndexNames())
if mibBuilder.loadTexts: pnniNodeTimerEntry.setStatus('current')
pnniNodePtseHolddown = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 1, 4, 1, 1), Integer32().clone(10)).setUnits('100 milliseconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: pnniNodePtseHolddown.setStatus('current')
pnniNodeHelloHolddown = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 1, 4, 1, 2), Integer32().clone(10)).setUnits('100 milliseconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: pnniNodeHelloHolddown.setStatus('current')
pnniNodeHelloInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 1, 4, 1, 3), Integer32().clone(15)).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: pnniNodeHelloInterval.setStatus('current')
pnniNodeHelloInactivityFactor = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 1, 4, 1, 4), Integer32().clone(5)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: pnniNodeHelloInactivityFactor.setStatus('current')
pnniNodeHlinkInact = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 1, 4, 1, 5), Integer32().clone(120)).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: pnniNodeHlinkInact.setStatus('current')
pnniNodePtseRefreshInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 1, 4, 1, 6), Integer32().clone(1800)).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: pnniNodePtseRefreshInterval.setStatus('current')
pnniNodePtseLifetimeFactor = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 1, 4, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(101, 1000)).clone(200)).setUnits('percent').setMaxAccess("readcreate")
if mibBuilder.loadTexts: pnniNodePtseLifetimeFactor.setStatus('current')
pnniNodeRxmtInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 1, 4, 1, 8), Integer32().clone(5)).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: pnniNodeRxmtInterval.setStatus('current')
pnniNodePeerDelayedAckInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 1, 4, 1, 9), Integer32().clone(10)).setUnits('100 milliseconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: pnniNodePeerDelayedAckInterval.setStatus('current')
pnniNodeAvcrPm = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 1, 4, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 99)).clone(50)).setUnits('percent').setMaxAccess("readcreate")
if mibBuilder.loadTexts: pnniNodeAvcrPm.setStatus('current')
pnniNodeAvcrMt = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 1, 4, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 99)).clone(3)).setUnits('percent').setMaxAccess("readcreate")
if mibBuilder.loadTexts: pnniNodeAvcrMt.setStatus('current')
pnniNodeCdvPm = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 1, 4, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 99)).clone(25)).setUnits('percent').setMaxAccess("readcreate")
if mibBuilder.loadTexts: pnniNodeCdvPm.setStatus('current')
pnniNodeCtdPm = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 1, 4, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 99)).clone(50)).setUnits('percent').setMaxAccess("readcreate")
if mibBuilder.loadTexts: pnniNodeCtdPm.setStatus('current')
pnniNodeSvccTable = MibTable((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 1, 5), )
if mibBuilder.loadTexts: pnniNodeSvccTable.setStatus('current')
pnniNodeSvccEntry = MibTableRow((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 1, 5, 1), )
pnniNodeEntry.registerAugmentions(("PNNI-MIB", "pnniNodeSvccEntry"))
pnniNodeSvccEntry.setIndexNames(*pnniNodeEntry.getIndexNames())
if mibBuilder.loadTexts: pnniNodeSvccEntry.setStatus('current')
pnniNodeSvccInitTime = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 1, 5, 1, 1), Integer32().clone(4)).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: pnniNodeSvccInitTime.setStatus('current')
pnniNodeSvccRetryTime = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 1, 5, 1, 2), Integer32().clone(30)).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: pnniNodeSvccRetryTime.setStatus('current')
pnniNodeSvccCallingIntegrityTime = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 1, 5, 1, 3), Integer32().clone(35)).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: pnniNodeSvccCallingIntegrityTime.setStatus('current')
pnniNodeSvccCalledIntegrityTime = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 1, 5, 1, 4), Integer32().clone(50)).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: pnniNodeSvccCalledIntegrityTime.setStatus('current')
pnniNodeSvccTrafficDescriptorIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 1, 5, 1, 5), AtmTrafficDescrParamIndex()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: pnniNodeSvccTrafficDescriptorIndex.setStatus('current')
pnniScopeMappingTable = MibTable((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 1, 6), )
if mibBuilder.loadTexts: pnniScopeMappingTable.setStatus('current')
pnniScopeMappingEntry = MibTableRow((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 1, 6, 1), )
pnniNodeEntry.registerAugmentions(("PNNI-MIB", "pnniScopeMappingEntry"))
pnniScopeMappingEntry.setIndexNames(*pnniNodeEntry.getIndexNames())
if mibBuilder.loadTexts: pnniScopeMappingEntry.setStatus('current')
pnniScopeLocalNetwork = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 1, 6, 1, 1), PnniLevel().clone(96)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: pnniScopeLocalNetwork.setStatus('current')
pnniScopeLocalNetworkPlusOne = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 1, 6, 1, 2), PnniLevel().clone(96)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: pnniScopeLocalNetworkPlusOne.setStatus('current')
pnniScopeLocalNetworkPlusTwo = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 1, 6, 1, 3), PnniLevel().clone(96)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: pnniScopeLocalNetworkPlusTwo.setStatus('current')
pnniScopeSiteMinusOne = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 1, 6, 1, 4), PnniLevel().clone(80)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: pnniScopeSiteMinusOne.setStatus('current')
pnniScopeIntraSite = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 1, 6, 1, 5), PnniLevel().clone(80)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: pnniScopeIntraSite.setStatus('current')
pnniScopeSitePlusOne = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 1, 6, 1, 6), PnniLevel().clone(72)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: pnniScopeSitePlusOne.setStatus('current')
pnniScopeOrganizationMinusOne = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 1, 6, 1, 7), PnniLevel().clone(72)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: pnniScopeOrganizationMinusOne.setStatus('current')
pnniScopeIntraOrganization = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 1, 6, 1, 8), PnniLevel().clone(64)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: pnniScopeIntraOrganization.setStatus('current')
pnniScopeOrganizationPlusOne = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 1, 6, 1, 9), PnniLevel().clone(64)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: pnniScopeOrganizationPlusOne.setStatus('current')
pnniScopeCommunityMinusOne = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 1, 6, 1, 10), PnniLevel().clone(64)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: pnniScopeCommunityMinusOne.setStatus('current')
pnniScopeIntraCommunity = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 1, 6, 1, 11), PnniLevel().clone(48)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: pnniScopeIntraCommunity.setStatus('current')
pnniScopeCommunityPlusOne = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 1, 6, 1, 12), PnniLevel().clone(48)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: pnniScopeCommunityPlusOne.setStatus('current')
pnniScopeRegional = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 1, 6, 1, 13), PnniLevel().clone(32)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: pnniScopeRegional.setStatus('current')
pnniScopeInterRegional = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 1, 6, 1, 14), PnniLevel().clone(32)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: pnniScopeInterRegional.setStatus('current')
pnniScopeGlobal = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 1, 6, 1, 15), PnniLevel()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: pnniScopeGlobal.setStatus('current')
pnniSummaryTable = MibTable((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 1, 7), )
if mibBuilder.loadTexts: pnniSummaryTable.setStatus('deprecated')
pnniSummaryEntry = MibTableRow((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 1, 7, 1), ).setIndexNames((0, "PNNI-MIB", "pnniNodeIndex"), (0, "PNNI-MIB", "pnniSummaryAddress"), (0, "PNNI-MIB", "pnniSummaryPrefixLength"))
if mibBuilder.loadTexts: pnniSummaryEntry.setStatus('deprecated')
pnniSummaryAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 1, 7, 1, 1), AtmAddrPrefix())
if mibBuilder.loadTexts: pnniSummaryAddress.setStatus('deprecated')
pnniSummaryPrefixLength = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 1, 7, 1, 2), PnniPrefixLength())
if mibBuilder.loadTexts: pnniSummaryPrefixLength.setStatus('deprecated')
pnniSummaryType = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 1, 7, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("internal", 1), ("exterior", 2))).clone('internal')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: pnniSummaryType.setStatus('deprecated')
pnniSummarySuppress = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 1, 7, 1, 4), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: pnniSummarySuppress.setStatus('deprecated')
pnniSummaryState = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 1, 7, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("advertising", 1), ("suppressing", 2), ("inactive", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pnniSummaryState.setStatus('deprecated')
pnniSummaryRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 1, 7, 1, 6), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: pnniSummaryRowStatus.setStatus('deprecated')
pnniSummaryAddressTable = MibTable((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 1, 20), )
if mibBuilder.loadTexts: pnniSummaryAddressTable.setStatus('current')
pnniSummaryAddressEntry = MibTableRow((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 1, 20, 1), ).setIndexNames((0, "PNNI-MIB", "pnniNodeIndex"), (0, "PNNI-MIB", "pnniSummaryAddressType"), (0, "PNNI-MIB", "pnniSummaryAddressAddress"), (0, "PNNI-MIB", "pnniSummaryAddressPrefixLength"))
if mibBuilder.loadTexts: pnniSummaryAddressEntry.setStatus('current')
pnniSummaryAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 1, 20, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("internal", 1), ("exterior", 2))))
if mibBuilder.loadTexts: pnniSummaryAddressType.setStatus('current')
pnniSummaryAddressAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 1, 20, 1, 2), AtmAddrPrefix())
if mibBuilder.loadTexts: pnniSummaryAddressAddress.setStatus('current')
pnniSummaryAddressPrefixLength = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 1, 20, 1, 3), PnniPrefixLength())
if mibBuilder.loadTexts: pnniSummaryAddressPrefixLength.setStatus('current')
pnniSummaryAddressSuppress = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 1, 20, 1, 4), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: pnniSummaryAddressSuppress.setStatus('current')
pnniSummaryAddressState = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 1, 20, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("advertising", 1), ("suppressing", 2), ("inactive", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pnniSummaryAddressState.setStatus('current')
pnniSummaryAddressRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 1, 20, 1, 6), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: pnniSummaryAddressRowStatus.setStatus('current')
pnniIfTable = MibTable((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 1, 8), )
if mibBuilder.loadTexts: pnniIfTable.setStatus('current')
pnniIfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 1, 8, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: pnniIfEntry.setStatus('current')
pnniIfNodeIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 1, 8, 1, 1), PnniNodeIndex().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pnniIfNodeIndex.setStatus('current')
pnniIfPortId = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 1, 8, 1, 2), PnniPortId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pnniIfPortId.setStatus('current')
pnniIfAggrToken = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 1, 8, 1, 3), PnniAggrToken()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pnniIfAggrToken.setStatus('current')
pnniIfVPCapability = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 1, 8, 1, 4), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pnniIfVPCapability.setStatus('current')
pnniIfAdmWeightCbr = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 1, 8, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 16777215)).clone(5040)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pnniIfAdmWeightCbr.setStatus('current')
pnniIfAdmWeightRtVbr = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 1, 8, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 16777215)).clone(5040)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pnniIfAdmWeightRtVbr.setStatus('current')
pnniIfAdmWeightNrtVbr = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 1, 8, 1, 7), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 16777215)).clone(5040)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pnniIfAdmWeightNrtVbr.setStatus('current')
pnniIfAdmWeightAbr = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 1, 8, 1, 8), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 16777215)).clone(5040)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pnniIfAdmWeightAbr.setStatus('current')
pnniIfAdmWeightUbr = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 1, 8, 1, 9), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 16777215)).clone(5040)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pnniIfAdmWeightUbr.setStatus('current')
pnniIfRccServiceCategory = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 1, 8, 1, 10), ServiceCategory()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pnniIfRccServiceCategory.setStatus('current')
pnniIfRccTrafficDescrIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 1, 8, 1, 11), AtmTrafficDescrParamIndex()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pnniIfRccTrafficDescrIndex.setStatus('current')
pnniLinkTable = MibTable((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 1, 9), )
if mibBuilder.loadTexts: pnniLinkTable.setStatus('current')
pnniLinkEntry = MibTableRow((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 1, 9, 1), ).setIndexNames((0, "PNNI-MIB", "pnniNodeIndex"), (0, "PNNI-MIB", "pnniLinkPortId"))
if mibBuilder.loadTexts: pnniLinkEntry.setStatus('current')
pnniLinkPortId = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 1, 9, 1, 1), PnniPortId())
if mibBuilder.loadTexts: pnniLinkPortId.setStatus('current')
pnniLinkType = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 1, 9, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("unknown", 1), ("lowestLevelHorizontalLink", 2), ("horizontalLinkToFromLgn", 3), ("lowestLevelOutsideLink", 4), ("uplink", 5), ("outsideLinkAndUplink", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pnniLinkType.setStatus('current')
pnniLinkVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 1, 9, 1, 3), PnniVersion()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pnniLinkVersion.setStatus('current')
pnniLinkHelloState = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 1, 9, 1, 4), PnniHelloState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pnniLinkHelloState.setStatus('current')
pnniLinkRemoteNodeId = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 1, 9, 1, 5), PnniNodeId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pnniLinkRemoteNodeId.setStatus('current')
pnniLinkRemotePortId = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 1, 9, 1, 6), PnniPortId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pnniLinkRemotePortId.setStatus('current')
pnniLinkDerivedAggrToken = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 1, 9, 1, 7), PnniAggrToken()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pnniLinkDerivedAggrToken.setStatus('current')
pnniLinkUpnodeId = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 1, 9, 1, 8), PnniNodeId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pnniLinkUpnodeId.setStatus('current')
pnniLinkUpnodeAtmAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 1, 9, 1, 9), PnniAtmAddr()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pnniLinkUpnodeAtmAddress.setStatus('current')
pnniLinkCommonPeerGroupId = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 1, 9, 1, 10), PnniPeerGroupId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pnniLinkCommonPeerGroupId.setStatus('current')
pnniLinkIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 1, 9, 1, 11), InterfaceIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pnniLinkIfIndex.setStatus('current')
pnniLinkSvccRccIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 1, 9, 1, 12), PnniSvccRccIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pnniLinkSvccRccIndex.setStatus('current')
pnniLinkRcvHellos = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 1, 9, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pnniLinkRcvHellos.setStatus('current')
pnniLinkXmtHellos = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 1, 9, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pnniLinkXmtHellos.setStatus('current')
pnniNbrPeerTable = MibTable((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 1, 10), )
if mibBuilder.loadTexts: pnniNbrPeerTable.setStatus('current')
pnniNbrPeerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 1, 10, 1), ).setIndexNames((0, "PNNI-MIB", "pnniNodeIndex"), (0, "PNNI-MIB", "pnniNbrPeerRemoteNodeId"))
if mibBuilder.loadTexts: pnniNbrPeerEntry.setStatus('current')
pnniNbrPeerRemoteNodeId = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 1, 10, 1, 1), PnniNodeId())
if mibBuilder.loadTexts: pnniNbrPeerRemoteNodeId.setStatus('current')
pnniNbrPeerState = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 1, 10, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("npdown", 1), ("negotiating", 2), ("exchanging", 3), ("loading", 4), ("full", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pnniNbrPeerState.setStatus('current')
pnniNbrPeerSvccRccIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 1, 10, 1, 3), PnniSvccRccIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pnniNbrPeerSvccRccIndex.setStatus('current')
pnniNbrPeerPortCount = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 1, 10, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pnniNbrPeerPortCount.setStatus('current')
pnniNbrPeerRcvDbSums = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 1, 10, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pnniNbrPeerRcvDbSums.setStatus('current')
pnniNbrPeerXmtDbSums = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 1, 10, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pnniNbrPeerXmtDbSums.setStatus('current')
pnniNbrPeerRcvPtsps = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 1, 10, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pnniNbrPeerRcvPtsps.setStatus('current')
pnniNbrPeerXmtPtsps = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 1, 10, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pnniNbrPeerXmtPtsps.setStatus('current')
pnniNbrPeerRcvPtseReqs = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 1, 10, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pnniNbrPeerRcvPtseReqs.setStatus('current')
pnniNbrPeerXmtPtseReqs = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 1, 10, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pnniNbrPeerXmtPtseReqs.setStatus('current')
pnniNbrPeerRcvPtseAcks = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 1, 10, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pnniNbrPeerRcvPtseAcks.setStatus('current')
pnniNbrPeerXmtPtseAcks = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 1, 10, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pnniNbrPeerXmtPtseAcks.setStatus('current')
pnniNbrPeerPortTable = MibTable((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 1, 11), )
if mibBuilder.loadTexts: pnniNbrPeerPortTable.setStatus('current')
pnniNbrPeerPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 1, 11, 1), ).setIndexNames((0, "PNNI-MIB", "pnniNodeIndex"), (0, "PNNI-MIB", "pnniNbrPeerRemoteNodeId"), (0, "PNNI-MIB", "pnniNbrPeerPortId"))
if mibBuilder.loadTexts: pnniNbrPeerPortEntry.setStatus('current')
pnniNbrPeerPortId = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 1, 11, 1, 1), PnniPortId())
if mibBuilder.loadTexts: pnniNbrPeerPortId.setStatus('current')
pnniNbrPeerPortFloodStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 1, 11, 1, 2), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pnniNbrPeerPortFloodStatus.setStatus('current')
pnniSvccRccTable = MibTable((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 1, 12), )
if mibBuilder.loadTexts: pnniSvccRccTable.setStatus('current')
pnniSvccRccEntry = MibTableRow((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 1, 12, 1), ).setIndexNames((0, "PNNI-MIB", "pnniNodeIndex"), (0, "PNNI-MIB", "pnniSvccRccIndex"))
if mibBuilder.loadTexts: pnniSvccRccEntry.setStatus('current')
pnniSvccRccIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 1, 12, 1, 1), PnniSvccRccIndex())
if mibBuilder.loadTexts: pnniSvccRccIndex.setStatus('current')
pnniSvccRccVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 1, 12, 1, 2), PnniVersion()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pnniSvccRccVersion.setStatus('current')
pnniSvccRccHelloState = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 1, 12, 1, 3), PnniHelloState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pnniSvccRccHelloState.setStatus('current')
pnniSvccRccRemoteNodeId = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 1, 12, 1, 4), PnniNodeId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pnniSvccRccRemoteNodeId.setStatus('current')
pnniSvccRccRemoteAtmAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 1, 12, 1, 5), PnniAtmAddr()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pnniSvccRccRemoteAtmAddress.setStatus('current')
pnniSvccRccRcvHellos = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 1, 12, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pnniSvccRccRcvHellos.setStatus('current')
pnniSvccRccXmtHellos = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 1, 12, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pnniSvccRccXmtHellos.setStatus('current')
pnniSvccRccIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 1, 12, 1, 8), InterfaceIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pnniSvccRccIfIndex.setStatus('current')
pnniSvccRccVpi = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 1, 12, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4095))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pnniSvccRccVpi.setStatus('current')
pnniSvccRccVci = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 1, 12, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pnniSvccRccVci.setStatus('current')
pnniPtseTable = MibTable((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 1, 13), )
if mibBuilder.loadTexts: pnniPtseTable.setStatus('current')
pnniPtseEntry = MibTableRow((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 1, 13, 1), ).setIndexNames((0, "PNNI-MIB", "pnniNodeIndex"), (0, "PNNI-MIB", "pnniPtseOriginatingNodeId"), (0, "PNNI-MIB", "pnniPtseId"))
if mibBuilder.loadTexts: pnniPtseEntry.setStatus('current')
pnniPtseOriginatingNodeId = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 1, 13, 1, 1), PnniNodeId())
if mibBuilder.loadTexts: pnniPtseOriginatingNodeId.setStatus('current')
pnniPtseId = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 1, 13, 1, 2), Unsigned32())
if mibBuilder.loadTexts: pnniPtseId.setStatus('current')
pnniPtseType = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 1, 13, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 96, 97, 224, 256, 288, 289))).clone(namedValues=NamedValues(("other", 1), ("nodalStateParameters", 96), ("nodalInformation", 97), ("internalReachableAddresses", 224), ("exteriorReachableAddresses", 256), ("horizontalLinks", 288), ("uplinks", 289)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pnniPtseType.setStatus('current')
pnniPtseSequenceNum = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 1, 13, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pnniPtseSequenceNum.setStatus('current')
pnniPtseChecksum = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 1, 13, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pnniPtseChecksum.setStatus('current')
pnniPtseLifeTime = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 1, 13, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: pnniPtseLifeTime.setStatus('current')
pnniPtseInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 1, 13, 1, 7), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pnniPtseInfo.setStatus('current')
pnniMapTable = MibTable((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 1, 14), )
if mibBuilder.loadTexts: pnniMapTable.setStatus('current')
pnniMapEntry = MibTableRow((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 1, 14, 1), ).setIndexNames((0, "PNNI-MIB", "pnniNodeIndex"), (0, "PNNI-MIB", "pnniMapOriginatingNodeId"), (0, "PNNI-MIB", "pnniMapOriginatingPortId"), (0, "PNNI-MIB", "pnniMapIndex"))
if mibBuilder.loadTexts: pnniMapEntry.setStatus('current')
pnniMapOriginatingNodeId = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 1, 14, 1, 1), PnniNodeId())
if mibBuilder.loadTexts: pnniMapOriginatingNodeId.setStatus('current')
pnniMapOriginatingPortId = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 1, 14, 1, 2), PnniPortId())
if mibBuilder.loadTexts: pnniMapOriginatingPortId.setStatus('current')
pnniMapIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 1, 14, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)))
if mibBuilder.loadTexts: pnniMapIndex.setStatus('current')
pnniMapType = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 1, 14, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("horizontalLink", 1), ("uplink", 2), ("node", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pnniMapType.setStatus('current')
pnniMapPeerGroupId = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 1, 14, 1, 5), PnniPeerGroupId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pnniMapPeerGroupId.setStatus('current')
pnniMapAggrToken = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 1, 14, 1, 6), PnniAggrToken()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pnniMapAggrToken.setStatus('current')
pnniMapRemoteNodeId = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 1, 14, 1, 7), PnniNodeId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pnniMapRemoteNodeId.setStatus('current')
pnniMapRemotePortId = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 1, 14, 1, 8), PnniPortId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pnniMapRemotePortId.setStatus('current')
pnniMapVPCapability = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 1, 14, 1, 9), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pnniMapVPCapability.setStatus('current')
pnniMapPtseId = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 1, 14, 1, 10), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pnniMapPtseId.setStatus('current')
pnniMapMetricsTag = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 1, 14, 1, 11), PnniMetricsTag()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pnniMapMetricsTag.setStatus('current')
pnniMapNodeTable = MibTable((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 1, 15), )
if mibBuilder.loadTexts: pnniMapNodeTable.setStatus('current')
pnniMapNodeEntry = MibTableRow((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 1, 15, 1), ).setIndexNames((0, "PNNI-MIB", "pnniNodeIndex"), (0, "PNNI-MIB", "pnniMapNodeId"))
if mibBuilder.loadTexts: pnniMapNodeEntry.setStatus('current')
pnniMapNodeId = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 1, 15, 1, 1), PnniNodeId())
if mibBuilder.loadTexts: pnniMapNodeId.setStatus('current')
pnniMapNodePeerGroupId = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 1, 15, 1, 2), PnniPeerGroupId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pnniMapNodePeerGroupId.setStatus('current')
pnniMapNodeAtmAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 1, 15, 1, 3), PnniAtmAddr()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pnniMapNodeAtmAddress.setStatus('current')
pnniMapNodeRestrictedTransit = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 1, 15, 1, 4), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pnniMapNodeRestrictedTransit.setStatus('current')
pnniMapNodeComplexRep = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 1, 15, 1, 5), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pnniMapNodeComplexRep.setStatus('current')
pnniMapNodeRestrictedBranching = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 1, 15, 1, 6), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pnniMapNodeRestrictedBranching.setStatus('current')
pnniMapNodeDatabaseOverload = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 1, 15, 1, 7), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pnniMapNodeDatabaseOverload.setStatus('current')
pnniMapNodeIAmLeader = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 1, 15, 1, 8), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pnniMapNodeIAmLeader.setStatus('current')
pnniMapNodeLeadershipPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 1, 15, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pnniMapNodeLeadershipPriority.setStatus('current')
pnniMapNodePreferredPgl = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 1, 15, 1, 10), PnniNodeId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pnniMapNodePreferredPgl.setStatus('current')
pnniMapNodeParentNodeId = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 1, 15, 1, 11), PnniNodeId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pnniMapNodeParentNodeId.setStatus('current')
pnniMapNodeParentAtmAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 1, 15, 1, 12), PnniAtmAddr()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pnniMapNodeParentAtmAddress.setStatus('current')
pnniMapNodeParentPeerGroupId = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 1, 15, 1, 13), PnniPeerGroupId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pnniMapNodeParentPeerGroupId.setStatus('current')
pnniMapNodeParentPglNodeId = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 1, 15, 1, 14), PnniNodeId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pnniMapNodeParentPglNodeId.setStatus('current')
pnniMapAddrTable = MibTable((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 1, 16), )
if mibBuilder.loadTexts: pnniMapAddrTable.setStatus('current')
pnniMapAddrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 1, 16, 1), ).setIndexNames((0, "PNNI-MIB", "pnniNodeIndex"), (0, "PNNI-MIB", "pnniMapAddrAdvertisingNodeId"), (0, "PNNI-MIB", "pnniMapAddrAdvertisedPortId"), (0, "PNNI-MIB", "pnniMapAddrIndex"))
if mibBuilder.loadTexts: pnniMapAddrEntry.setStatus('current')
pnniMapAddrAdvertisingNodeId = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 1, 16, 1, 1), PnniNodeId())
if mibBuilder.loadTexts: pnniMapAddrAdvertisingNodeId.setStatus('current')
pnniMapAddrAdvertisedPortId = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 1, 16, 1, 2), PnniPortId())
if mibBuilder.loadTexts: pnniMapAddrAdvertisedPortId.setStatus('current')
pnniMapAddrIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 1, 16, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: pnniMapAddrIndex.setStatus('current')
pnniMapAddrAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 1, 16, 1, 4), AtmAddrPrefix()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pnniMapAddrAddress.setStatus('current')
pnniMapAddrPrefixLength = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 1, 16, 1, 5), PnniPrefixLength()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pnniMapAddrPrefixLength.setStatus('current')
pnniMapTnsTable = MibTable((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 1, 17), )
if mibBuilder.loadTexts: pnniMapTnsTable.setStatus('current')
pnniMapTnsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 1, 17, 1), ).setIndexNames((0, "PNNI-MIB", "pnniNodeIndex"), (0, "PNNI-MIB", "pnniMapTnsAdvertisingNodeId"), (0, "PNNI-MIB", "pnniMapTnsAdvertisedPortId"), (0, "PNNI-MIB", "pnniMapTnsType"), (0, "PNNI-MIB", "pnniMapTnsPlan"), (0, "PNNI-MIB", "pnniMapTnsId"))
if mibBuilder.loadTexts: pnniMapTnsEntry.setStatus('current')
pnniMapTnsAdvertisingNodeId = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 1, 17, 1, 1), PnniNodeId())
if mibBuilder.loadTexts: pnniMapTnsAdvertisingNodeId.setStatus('current')
pnniMapTnsAdvertisedPortId = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 1, 17, 1, 2), PnniPortId())
if mibBuilder.loadTexts: pnniMapTnsAdvertisedPortId.setStatus('current')
pnniMapTnsType = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 1, 17, 1, 3), TnsType())
if mibBuilder.loadTexts: pnniMapTnsType.setStatus('current')
pnniMapTnsPlan = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 1, 17, 1, 4), TnsPlan())
if mibBuilder.loadTexts: pnniMapTnsPlan.setStatus('current')
pnniMapTnsId = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 1, 17, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pnniMapTnsId.setStatus('current')
pnniMetricsTable = MibTable((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 1, 18), )
if mibBuilder.loadTexts: pnniMetricsTable.setStatus('current')
pnniMetricsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 1, 18, 1), ).setIndexNames((0, "PNNI-MIB", "pnniNodeIndex"), (0, "PNNI-MIB", "pnniMetricsTag"), (0, "PNNI-MIB", "pnniMetricsDirection"), (0, "PNNI-MIB", "pnniMetricsIndex"))
if mibBuilder.loadTexts: pnniMetricsEntry.setStatus('current')
pnniMetricsTag = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 1, 18, 1, 1), PnniMetricsTag().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: pnniMetricsTag.setStatus('current')
pnniMetricsDirection = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 1, 18, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("incoming", 1), ("outgoing", 2))))
if mibBuilder.loadTexts: pnniMetricsDirection.setStatus('current')
pnniMetricsIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 1, 18, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: pnniMetricsIndex.setStatus('current')
pnniMetricsClasses = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 1, 18, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 31))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: pnniMetricsClasses.setStatus('current')
pnniMetricsGcacClp = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 1, 18, 1, 5), ClpType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: pnniMetricsGcacClp.setStatus('current')
pnniMetricsAdminWeight = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 1, 18, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 16777215)).clone(5040)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: pnniMetricsAdminWeight.setStatus('current')
pnniMetrics1 = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 1, 18, 1, 7), Unsigned32().clone(4294967295)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: pnniMetrics1.setStatus('current')
pnniMetrics2 = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 1, 18, 1, 8), Unsigned32().clone(4294967295)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: pnniMetrics2.setStatus('current')
pnniMetrics3 = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 1, 18, 1, 9), Unsigned32().clone(4294967295)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: pnniMetrics3.setStatus('current')
pnniMetrics4 = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 1, 18, 1, 10), Unsigned32().clone(4294967295)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: pnniMetrics4.setStatus('current')
pnniMetrics5 = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 1, 18, 1, 11), Unsigned32().clone(4294967295)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: pnniMetrics5.setStatus('current')
pnniMetrics6 = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 1, 18, 1, 12), Unsigned32().clone(4294967295)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: pnniMetrics6.setStatus('current')
pnniMetrics7 = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 1, 18, 1, 13), Unsigned32().clone(4294967295)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: pnniMetrics7.setStatus('current')
pnniMetrics8 = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 1, 18, 1, 14), Unsigned32().clone(4294967295)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: pnniMetrics8.setStatus('current')
pnniMetricsRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 1, 18, 1, 15), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: pnniMetricsRowStatus.setStatus('current')
pnniRoutingGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 1, 19))
pnniRouteBaseGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 1, 19, 1))
pnniRouteNodeNumber = MibScalar((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 1, 19, 1, 1), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pnniRouteNodeNumber.setStatus('current')
pnniRouteAddrNumber = MibScalar((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 1, 19, 1, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pnniRouteAddrNumber.setStatus('current')
pnniRouteNodeTable = MibTable((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 1, 19, 2), )
if mibBuilder.loadTexts: pnniRouteNodeTable.setStatus('current')
pnniRouteNodeEntry = MibTableRow((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 1, 19, 2, 1), ).setIndexNames((0, "PNNI-MIB", "pnniNodeIndex"), (0, "PNNI-MIB", "pnniRouteNodeClass"), (0, "PNNI-MIB", "pnniRouteNodeDestNodeId"), (0, "PNNI-MIB", "pnniRouteNodeDTL"))
if mibBuilder.loadTexts: pnniRouteNodeEntry.setStatus('current')
pnniRouteNodeClass = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 1, 19, 2, 1, 1), ServiceCategory())
if mibBuilder.loadTexts: pnniRouteNodeClass.setStatus('current')
pnniRouteNodeDestNodeId = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 1, 19, 2, 1, 2), PnniNodeId())
if mibBuilder.loadTexts: pnniRouteNodeDestNodeId.setStatus('current')
pnniRouteNodeDTL = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 1, 19, 2, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: pnniRouteNodeDTL.setStatus('current')
pnniRouteNodeDestPortId = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 1, 19, 2, 1, 4), PnniPortId()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: pnniRouteNodeDestPortId.setStatus('current')
pnniRouteNodeProto = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 1, 19, 2, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("other", 1), ("local", 2), ("mgmt", 3), ("pnni", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pnniRouteNodeProto.setStatus('current')
pnniRouteNodeTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 1, 19, 2, 1, 6), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pnniRouteNodeTimeStamp.setStatus('current')
pnniRouteNodeInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 1, 19, 2, 1, 7), ObjectIdentifier().clone((0, 0))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: pnniRouteNodeInfo.setStatus('current')
pnniRouteNodeGcacClp = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 1, 19, 2, 1, 8), ClpType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: pnniRouteNodeGcacClp.setStatus('current')
pnniRouteNodeFwdMetricAW = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 1, 19, 2, 1, 9), Unsigned32().clone(4294967295)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: pnniRouteNodeFwdMetricAW.setStatus('current')
pnniRouteNodeFwdMetric1 = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 1, 19, 2, 1, 10), Unsigned32().clone(4294967295)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: pnniRouteNodeFwdMetric1.setStatus('current')
pnniRouteNodeFwdMetric2 = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 1, 19, 2, 1, 11), Unsigned32().clone(4294967295)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: pnniRouteNodeFwdMetric2.setStatus('current')
pnniRouteNodeFwdMetric3 = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 1, 19, 2, 1, 12), Unsigned32().clone(4294967295)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: pnniRouteNodeFwdMetric3.setStatus('current')
pnniRouteNodeFwdMetric4 = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 1, 19, 2, 1, 13), Unsigned32().clone(4294967295)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: pnniRouteNodeFwdMetric4.setStatus('current')
pnniRouteNodeFwdMetric5 = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 1, 19, 2, 1, 14), Unsigned32().clone(4294967295)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: pnniRouteNodeFwdMetric5.setStatus('current')
pnniRouteNodeFwdMetric6 = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 1, 19, 2, 1, 15), Unsigned32().clone(4294967295)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: pnniRouteNodeFwdMetric6.setStatus('current')
pnniRouteNodeFwdMetric7 = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 1, 19, 2, 1, 16), Unsigned32().clone(4294967295)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: pnniRouteNodeFwdMetric7.setStatus('current')
pnniRouteNodeFwdMetric8 = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 1, 19, 2, 1, 17), Unsigned32().clone(4294967295)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: pnniRouteNodeFwdMetric8.setStatus('current')
pnniRouteNodeBwdMetricAW = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 1, 19, 2, 1, 18), Unsigned32().clone(4294967295)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: pnniRouteNodeBwdMetricAW.setStatus('current')
pnniRouteNodeBwdMetric1 = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 1, 19, 2, 1, 19), Unsigned32().clone(4294967295)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: pnniRouteNodeBwdMetric1.setStatus('current')
pnniRouteNodeBwdMetric2 = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 1, 19, 2, 1, 20), Unsigned32().clone(4294967295)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: pnniRouteNodeBwdMetric2.setStatus('current')
pnniRouteNodeBwdMetric3 = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 1, 19, 2, 1, 21), Unsigned32().clone(4294967295)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: pnniRouteNodeBwdMetric3.setStatus('current')
pnniRouteNodeBwdMetric4 = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 1, 19, 2, 1, 22), Unsigned32().clone(4294967295)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: pnniRouteNodeBwdMetric4.setStatus('current')
pnniRouteNodeBwdMetric5 = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 1, 19, 2, 1, 23), Unsigned32().clone(4294967295)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: pnniRouteNodeBwdMetric5.setStatus('current')
pnniRouteNodeBwdMetric6 = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 1, 19, 2, 1, 24), Unsigned32().clone(4294967295)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: pnniRouteNodeBwdMetric6.setStatus('current')
pnniRouteNodeBwdMetric7 = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 1, 19, 2, 1, 25), Unsigned32().clone(4294967295)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: pnniRouteNodeBwdMetric7.setStatus('current')
pnniRouteNodeBwdMetric8 = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 1, 19, 2, 1, 26), Unsigned32().clone(4294967295)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: pnniRouteNodeBwdMetric8.setStatus('current')
pnniRouteNodeVPCapability = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 1, 19, 2, 1, 27), TruthValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: pnniRouteNodeVPCapability.setStatus('current')
pnniRouteNodeStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 1, 19, 2, 1, 28), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: pnniRouteNodeStatus.setStatus('current')
pnniDTLTable = MibTable((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 1, 19, 3), )
if mibBuilder.loadTexts: pnniDTLTable.setStatus('current')
pnniDTLEntry = MibTableRow((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 1, 19, 3, 1), ).setIndexNames((0, "PNNI-MIB", "pnniNodeIndex"), (0, "PNNI-MIB", "pnniDTLIndex"), (0, "PNNI-MIB", "pnniDTLEntryIndex"))
if mibBuilder.loadTexts: pnniDTLEntry.setStatus('current')
pnniDTLIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 1, 19, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: pnniDTLIndex.setStatus('current')
pnniDTLEntryIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 1, 19, 3, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 200)))
if mibBuilder.loadTexts: pnniDTLEntryIndex.setStatus('current')
pnniDTLNodeId = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 1, 19, 3, 1, 3), PnniNodeId()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: pnniDTLNodeId.setStatus('current')
pnniDTLPortId = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 1, 19, 3, 1, 4), PnniPortId()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: pnniDTLPortId.setStatus('current')
pnniDTLLinkType = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 1, 19, 3, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("invalid", 1), ("horizontal", 2), ("uplink", 3), ("last", 4)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: pnniDTLLinkType.setStatus('current')
pnniDTLStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 1, 19, 3, 1, 6), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: pnniDTLStatus.setStatus('current')
pnniRouteAddrTable = MibTable((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 1, 19, 4), )
if mibBuilder.loadTexts: pnniRouteAddrTable.setStatus('current')
pnniRouteAddrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 1, 19, 4, 1), ).setIndexNames((0, "PNNI-MIB", "pnniNodeIndex"), (0, "PNNI-MIB", "pnniRouteAddrAddress"), (0, "PNNI-MIB", "pnniRouteAddrPrefixLength"), (0, "PNNI-MIB", "pnniRouteAddrIndex"))
if mibBuilder.loadTexts: pnniRouteAddrEntry.setStatus('current')
pnniRouteAddrAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 1, 19, 4, 1, 1), AtmAddrPrefix())
if mibBuilder.loadTexts: pnniRouteAddrAddress.setStatus('current')
pnniRouteAddrPrefixLength = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 1, 19, 4, 1, 2), PnniPrefixLength())
if mibBuilder.loadTexts: pnniRouteAddrPrefixLength.setStatus('current')
pnniRouteAddrIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 1, 19, 4, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)))
if mibBuilder.loadTexts: pnniRouteAddrIndex.setStatus('current')
pnniRouteAddrIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 1, 19, 4, 1, 4), InterfaceIndex()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: pnniRouteAddrIfIndex.setStatus('current')
pnniRouteAddrAdvertisingNodeId = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 1, 19, 4, 1, 5), PnniNodeId()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: pnniRouteAddrAdvertisingNodeId.setStatus('current')
pnniRouteAddrAdvertisedPortId = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 1, 19, 4, 1, 6), PnniPortId()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: pnniRouteAddrAdvertisedPortId.setStatus('current')
pnniRouteAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 1, 19, 4, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("other", 1), ("reject", 2), ("internal", 3), ("exterior", 4))).clone('exterior')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: pnniRouteAddrType.setStatus('current')
pnniRouteAddrProto = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 1, 19, 4, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("other", 1), ("local", 2), ("mgmt", 3), ("pnni", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pnniRouteAddrProto.setStatus('current')
pnniRouteAddrPnniScope = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 1, 19, 4, 1, 9), PnniLevel()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: pnniRouteAddrPnniScope.setStatus('current')
pnniRouteAddrVPCapability = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 1, 19, 4, 1, 10), TruthValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: pnniRouteAddrVPCapability.setStatus('current')
pnniRouteAddrMetricsTag = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 1, 19, 4, 1, 11), PnniMetricsTag()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: pnniRouteAddrMetricsTag.setStatus('current')
pnniRouteAddrPtseId = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 1, 19, 4, 1, 12), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pnniRouteAddrPtseId.setStatus('current')
pnniRouteAddrOriginateAdvertisement = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 1, 19, 4, 1, 13), TruthValue().clone('true')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: pnniRouteAddrOriginateAdvertisement.setStatus('current')
pnniRouteAddrInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 1, 19, 4, 1, 14), ObjectIdentifier().clone((0, 0))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: pnniRouteAddrInfo.setStatus('current')
pnniRouteAddrOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 1, 19, 4, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("inactive", 1), ("active", 2), ("advertised", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pnniRouteAddrOperStatus.setStatus('current')
pnniRouteAddrTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 1, 19, 4, 1, 16), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pnniRouteAddrTimeStamp.setStatus('current')
pnniRouteAddrRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 1, 19, 4, 1, 17), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: pnniRouteAddrRowStatus.setStatus('current')
pnniRouteTnsTable = MibTable((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 1, 19, 5), )
if mibBuilder.loadTexts: pnniRouteTnsTable.setStatus('current')
pnniRouteTnsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 1, 19, 5, 1), ).setIndexNames((0, "PNNI-MIB", "pnniNodeIndex"), (0, "PNNI-MIB", "pnniRouteTnsType"), (0, "PNNI-MIB", "pnniRouteTnsPlan"), (0, "PNNI-MIB", "pnniRouteTnsId"), (0, "PNNI-MIB", "pnniRouteTnsIndex"))
if mibBuilder.loadTexts: pnniRouteTnsEntry.setStatus('current')
pnniRouteTnsType = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 1, 19, 5, 1, 1), TnsType())
if mibBuilder.loadTexts: pnniRouteTnsType.setStatus('current')
pnniRouteTnsPlan = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 1, 19, 5, 1, 2), TnsPlan())
if mibBuilder.loadTexts: pnniRouteTnsPlan.setStatus('current')
pnniRouteTnsId = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 1, 19, 5, 1, 3), DisplayString())
if mibBuilder.loadTexts: pnniRouteTnsId.setStatus('current')
pnniRouteTnsIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 1, 19, 5, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)))
if mibBuilder.loadTexts: pnniRouteTnsIndex.setStatus('current')
pnniRouteTnsIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 1, 19, 5, 1, 5), InterfaceIndex()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: pnniRouteTnsIfIndex.setStatus('current')
pnniRouteTnsAdvertisingNodeId = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 1, 19, 5, 1, 6), PnniNodeId()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: pnniRouteTnsAdvertisingNodeId.setStatus('current')
pnniRouteTnsAdvertisedPortId = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 1, 19, 5, 1, 7), PnniPortId()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: pnniRouteTnsAdvertisedPortId.setStatus('current')
pnniRouteTnsRouteType = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 1, 19, 5, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 4))).clone(namedValues=NamedValues(("other", 1), ("exterior", 4))).clone('exterior')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: pnniRouteTnsRouteType.setStatus('current')
pnniRouteTnsProto = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 1, 19, 5, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("other", 1), ("local", 2), ("mgmt", 3), ("pnni", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pnniRouteTnsProto.setStatus('current')
pnniRouteTnsPnniScope = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 1, 19, 5, 1, 10), PnniLevel()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: pnniRouteTnsPnniScope.setStatus('current')
pnniRouteTnsVPCapability = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 1, 19, 5, 1, 11), TruthValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: pnniRouteTnsVPCapability.setStatus('current')
pnniRouteTnsMetricsTag = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 1, 19, 5, 1, 12), PnniMetricsTag()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: pnniRouteTnsMetricsTag.setStatus('current')
pnniRouteTnsPtseId = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 1, 19, 5, 1, 13), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pnniRouteTnsPtseId.setStatus('current')
pnniRouteTnsOriginateAdvertisement = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 1, 19, 5, 1, 14), TruthValue().clone('true')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: pnniRouteTnsOriginateAdvertisement.setStatus('current')
pnniRouteTnsInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 1, 19, 5, 1, 15), ObjectIdentifier().clone((0, 0))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: pnniRouteTnsInfo.setStatus('current')
pnniRouteTnsOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 1, 19, 5, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("inactive", 1), ("active", 2), ("advertised", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pnniRouteTnsOperStatus.setStatus('current')
pnniRouteTnsTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 1, 19, 5, 1, 17), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pnniRouteTnsTimeStamp.setStatus('current')
pnniRouteTnsRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 1, 19, 5, 1, 18), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: pnniRouteTnsRowStatus.setStatus('current')
pnniMIBConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 2))
pnniMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 2, 1))
pnniMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 2, 2))
pnniMIBCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 2, 1, 1)).setObjects(("PNNI-MIB", "pnniGeneralMinGroup"), ("PNNI-MIB", "pnniNodeMinGroup"), ("PNNI-MIB", "pnniNodePglMinGroup"), ("PNNI-MIB", "pnniNodeTimerMinGroup"), ("PNNI-MIB", "pnniScopeMinGroup"), ("PNNI-MIB", "pnniIfMinGroup"), ("PNNI-MIB", "pnniLinkMinGroup"), ("PNNI-MIB", "pnniNbrPeerMinGroup"), ("PNNI-MIB", "pnniNbrPeerPortMinGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    pnniMIBCompliance = pnniMIBCompliance.setStatus('current')
pnniGeneralMinGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 2, 2, 1)).setObjects(("PNNI-MIB", "pnniHighestVersion"), ("PNNI-MIB", "pnniLowestVersion"), ("PNNI-MIB", "pnniDtlCountOriginator"), ("PNNI-MIB", "pnniCrankbackCountOriginator"), ("PNNI-MIB", "pnniAltRouteCountOriginator"), ("PNNI-MIB", "pnniRouteFailCountOriginator"), ("PNNI-MIB", "pnniRouteFailUnreachableOriginator"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    pnniGeneralMinGroup = pnniGeneralMinGroup.setStatus('current')
pnniGeneralBorderGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 2, 2, 2)).setObjects(("PNNI-MIB", "pnniDtlCountBorder"), ("PNNI-MIB", "pnniCrankbackCountBorder"), ("PNNI-MIB", "pnniAltRouteCountBorder"), ("PNNI-MIB", "pnniRouteFailCountBorder"), ("PNNI-MIB", "pnniRouteFailUnreachableBorder"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    pnniGeneralBorderGroup = pnniGeneralBorderGroup.setStatus('current')
pnniNodeMinGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 2, 2, 3)).setObjects(("PNNI-MIB", "pnniNodeLevel"), ("PNNI-MIB", "pnniNodeId"), ("PNNI-MIB", "pnniNodeLowest"), ("PNNI-MIB", "pnniNodeAdminStatus"), ("PNNI-MIB", "pnniNodeOperStatus"), ("PNNI-MIB", "pnniNodeDomainName"), ("PNNI-MIB", "pnniNodeAtmAddress"), ("PNNI-MIB", "pnniNodePeerGroupId"), ("PNNI-MIB", "pnniNodeRestrictedTransit"), ("PNNI-MIB", "pnniNodeComplexRep"), ("PNNI-MIB", "pnniNodeRestrictedBranching"), ("PNNI-MIB", "pnniNodeDatabaseOverload"), ("PNNI-MIB", "pnniNodePtses"), ("PNNI-MIB", "pnniNodeRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    pnniNodeMinGroup = pnniNodeMinGroup.setStatus('current')
pnniNodePglMinGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 2, 2, 4)).setObjects(("PNNI-MIB", "pnniNodePglLeadershipPriority"), ("PNNI-MIB", "pnniNodePglInitTime"), ("PNNI-MIB", "pnniNodePglReelectTime"), ("PNNI-MIB", "pnniNodePglState"), ("PNNI-MIB", "pnniNodePreferredPgl"), ("PNNI-MIB", "pnniNodePeerGroupLeader"), ("PNNI-MIB", "pnniNodePglTimeStamp"), ("PNNI-MIB", "pnniNodeActiveParentNodeId"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    pnniNodePglMinGroup = pnniNodePglMinGroup.setStatus('current')
pnniNodePglLgnGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 2, 2, 5)).setObjects(("PNNI-MIB", "pnniNodeCfgParentNodeIndex"), ("PNNI-MIB", "pnniNodePglOverrideDelay"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    pnniNodePglLgnGroup = pnniNodePglLgnGroup.setStatus('current')
pnniNodeTimerMinGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 2, 2, 6)).setObjects(("PNNI-MIB", "pnniNodePtseHolddown"), ("PNNI-MIB", "pnniNodeHelloHolddown"), ("PNNI-MIB", "pnniNodeHelloInterval"), ("PNNI-MIB", "pnniNodeHelloInactivityFactor"), ("PNNI-MIB", "pnniNodePtseRefreshInterval"), ("PNNI-MIB", "pnniNodePtseLifetimeFactor"), ("PNNI-MIB", "pnniNodeRxmtInterval"), ("PNNI-MIB", "pnniNodePeerDelayedAckInterval"), ("PNNI-MIB", "pnniNodeAvcrPm"), ("PNNI-MIB", "pnniNodeAvcrMt"), ("PNNI-MIB", "pnniNodeCdvPm"), ("PNNI-MIB", "pnniNodeCtdPm"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    pnniNodeTimerMinGroup = pnniNodeTimerMinGroup.setStatus('current')
pnniNodeTimerLgnGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 2, 2, 7)).setObjects(("PNNI-MIB", "pnniNodeHlinkInact"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    pnniNodeTimerLgnGroup = pnniNodeTimerLgnGroup.setStatus('current')
pnniNodeSvccLgnGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 2, 2, 8)).setObjects(("PNNI-MIB", "pnniNodeSvccInitTime"), ("PNNI-MIB", "pnniNodeSvccRetryTime"), ("PNNI-MIB", "pnniNodeSvccCallingIntegrityTime"), ("PNNI-MIB", "pnniNodeSvccCalledIntegrityTime"), ("PNNI-MIB", "pnniNodeSvccTrafficDescriptorIndex"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    pnniNodeSvccLgnGroup = pnniNodeSvccLgnGroup.setStatus('current')
pnniScopeMinGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 2, 2, 9)).setObjects(("PNNI-MIB", "pnniScopeLocalNetwork"), ("PNNI-MIB", "pnniScopeLocalNetworkPlusOne"), ("PNNI-MIB", "pnniScopeLocalNetworkPlusTwo"), ("PNNI-MIB", "pnniScopeSiteMinusOne"), ("PNNI-MIB", "pnniScopeIntraSite"), ("PNNI-MIB", "pnniScopeSitePlusOne"), ("PNNI-MIB", "pnniScopeOrganizationMinusOne"), ("PNNI-MIB", "pnniScopeIntraOrganization"), ("PNNI-MIB", "pnniScopeOrganizationPlusOne"), ("PNNI-MIB", "pnniScopeCommunityMinusOne"), ("PNNI-MIB", "pnniScopeIntraCommunity"), ("PNNI-MIB", "pnniScopeCommunityPlusOne"), ("PNNI-MIB", "pnniScopeRegional"), ("PNNI-MIB", "pnniScopeInterRegional"), ("PNNI-MIB", "pnniScopeGlobal"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    pnniScopeMinGroup = pnniScopeMinGroup.setStatus('current')
pnniSummaryLgnGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 2, 2, 10)).setObjects(("PNNI-MIB", "pnniSummaryType"), ("PNNI-MIB", "pnniSummarySuppress"), ("PNNI-MIB", "pnniSummaryState"), ("PNNI-MIB", "pnniSummaryRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    pnniSummaryLgnGroup = pnniSummaryLgnGroup.setStatus('deprecated')
pnniSummaryAddressLgnGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 2, 2, 31)).setObjects(("PNNI-MIB", "pnniSummaryAddressSuppress"), ("PNNI-MIB", "pnniSummaryAddressState"), ("PNNI-MIB", "pnniSummaryAddressRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    pnniSummaryAddressLgnGroup = pnniSummaryAddressLgnGroup.setStatus('current')
pnniIfMinGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 2, 2, 11)).setObjects(("PNNI-MIB", "pnniIfNodeIndex"), ("PNNI-MIB", "pnniIfPortId"), ("PNNI-MIB", "pnniIfVPCapability"), ("PNNI-MIB", "pnniIfAdmWeightCbr"), ("PNNI-MIB", "pnniIfAdmWeightRtVbr"), ("PNNI-MIB", "pnniIfAdmWeightNrtVbr"), ("PNNI-MIB", "pnniIfAdmWeightAbr"), ("PNNI-MIB", "pnniIfAdmWeightUbr"), ("PNNI-MIB", "pnniIfRccServiceCategory"), ("PNNI-MIB", "pnniIfRccTrafficDescrIndex"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    pnniIfMinGroup = pnniIfMinGroup.setStatus('current')
pnniIfBorderGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 2, 2, 12)).setObjects(("PNNI-MIB", "pnniIfAggrToken"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    pnniIfBorderGroup = pnniIfBorderGroup.setStatus('current')
pnniLinkMinGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 2, 2, 13)).setObjects(("PNNI-MIB", "pnniLinkType"), ("PNNI-MIB", "pnniLinkVersion"), ("PNNI-MIB", "pnniLinkHelloState"), ("PNNI-MIB", "pnniLinkRemoteNodeId"), ("PNNI-MIB", "pnniLinkRemotePortId"), ("PNNI-MIB", "pnniLinkIfIndex"), ("PNNI-MIB", "pnniLinkRcvHellos"), ("PNNI-MIB", "pnniLinkXmtHellos"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    pnniLinkMinGroup = pnniLinkMinGroup.setStatus('current')
pnniLinkBorderOrLgnGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 2, 2, 14)).setObjects(("PNNI-MIB", "pnniLinkDerivedAggrToken"), ("PNNI-MIB", "pnniLinkUpnodeId"), ("PNNI-MIB", "pnniLinkUpnodeAtmAddress"), ("PNNI-MIB", "pnniLinkCommonPeerGroupId"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    pnniLinkBorderOrLgnGroup = pnniLinkBorderOrLgnGroup.setStatus('current')
pnniLinkLgnGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 2, 2, 15)).setObjects(("PNNI-MIB", "pnniLinkSvccRccIndex"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    pnniLinkLgnGroup = pnniLinkLgnGroup.setStatus('current')
pnniNbrPeerMinGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 2, 2, 16)).setObjects(("PNNI-MIB", "pnniNbrPeerState"), ("PNNI-MIB", "pnniNbrPeerPortCount"), ("PNNI-MIB", "pnniNbrPeerRcvDbSums"), ("PNNI-MIB", "pnniNbrPeerXmtDbSums"), ("PNNI-MIB", "pnniNbrPeerRcvPtsps"), ("PNNI-MIB", "pnniNbrPeerXmtPtsps"), ("PNNI-MIB", "pnniNbrPeerRcvPtseReqs"), ("PNNI-MIB", "pnniNbrPeerXmtPtseReqs"), ("PNNI-MIB", "pnniNbrPeerRcvPtseAcks"), ("PNNI-MIB", "pnniNbrPeerXmtPtseAcks"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    pnniNbrPeerMinGroup = pnniNbrPeerMinGroup.setStatus('current')
pnniNbrPeerLgnGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 2, 2, 17)).setObjects(("PNNI-MIB", "pnniNbrPeerSvccRccIndex"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    pnniNbrPeerLgnGroup = pnniNbrPeerLgnGroup.setStatus('current')
pnniNbrPeerPortMinGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 2, 2, 18)).setObjects(("PNNI-MIB", "pnniNbrPeerPortFloodStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    pnniNbrPeerPortMinGroup = pnniNbrPeerPortMinGroup.setStatus('current')
pnniSvccRccLgnGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 2, 2, 19)).setObjects(("PNNI-MIB", "pnniSvccRccVersion"), ("PNNI-MIB", "pnniSvccRccHelloState"), ("PNNI-MIB", "pnniSvccRccRemoteNodeId"), ("PNNI-MIB", "pnniSvccRccRemoteAtmAddress"), ("PNNI-MIB", "pnniSvccRccRcvHellos"), ("PNNI-MIB", "pnniSvccRccXmtHellos"), ("PNNI-MIB", "pnniSvccRccIfIndex"), ("PNNI-MIB", "pnniSvccRccVpi"), ("PNNI-MIB", "pnniSvccRccVci"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    pnniSvccRccLgnGroup = pnniSvccRccLgnGroup.setStatus('current')
pnniPtseOptionalGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 2, 2, 20)).setObjects(("PNNI-MIB", "pnniPtseType"), ("PNNI-MIB", "pnniPtseSequenceNum"), ("PNNI-MIB", "pnniPtseChecksum"), ("PNNI-MIB", "pnniPtseLifeTime"), ("PNNI-MIB", "pnniPtseInfo"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    pnniPtseOptionalGroup = pnniPtseOptionalGroup.setStatus('current')
pnniMapOptionalGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 2, 2, 21)).setObjects(("PNNI-MIB", "pnniMapType"), ("PNNI-MIB", "pnniMapPeerGroupId"), ("PNNI-MIB", "pnniMapAggrToken"), ("PNNI-MIB", "pnniMapRemoteNodeId"), ("PNNI-MIB", "pnniMapRemotePortId"), ("PNNI-MIB", "pnniMapVPCapability"), ("PNNI-MIB", "pnniMapPtseId"), ("PNNI-MIB", "pnniMapMetricsTag"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    pnniMapOptionalGroup = pnniMapOptionalGroup.setStatus('current')
pnniMapNodeOptionalGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 2, 2, 22)).setObjects(("PNNI-MIB", "pnniMapNodePeerGroupId"), ("PNNI-MIB", "pnniMapNodeAtmAddress"), ("PNNI-MIB", "pnniMapNodeRestrictedTransit"), ("PNNI-MIB", "pnniMapNodeComplexRep"), ("PNNI-MIB", "pnniMapNodeRestrictedBranching"), ("PNNI-MIB", "pnniMapNodeDatabaseOverload"), ("PNNI-MIB", "pnniMapNodeIAmLeader"), ("PNNI-MIB", "pnniMapNodeLeadershipPriority"), ("PNNI-MIB", "pnniMapNodePreferredPgl"), ("PNNI-MIB", "pnniMapNodeParentNodeId"), ("PNNI-MIB", "pnniMapNodeParentAtmAddress"), ("PNNI-MIB", "pnniMapNodeParentPeerGroupId"), ("PNNI-MIB", "pnniMapNodeParentPglNodeId"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    pnniMapNodeOptionalGroup = pnniMapNodeOptionalGroup.setStatus('current')
pnniMapAddrOptionalGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 2, 2, 23)).setObjects(("PNNI-MIB", "pnniMapAddrAddress"), ("PNNI-MIB", "pnniMapAddrPrefixLength"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    pnniMapAddrOptionalGroup = pnniMapAddrOptionalGroup.setStatus('current')
pnniMapTnsOptionalGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 2, 2, 24)).setObjects(("PNNI-MIB", "pnniMapTnsId"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    pnniMapTnsOptionalGroup = pnniMapTnsOptionalGroup.setStatus('current')
pnniMetricsOptionalGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 2, 2, 25)).setObjects(("PNNI-MIB", "pnniMetricsClasses"), ("PNNI-MIB", "pnniMetricsGcacClp"), ("PNNI-MIB", "pnniMetricsAdminWeight"), ("PNNI-MIB", "pnniMetrics1"), ("PNNI-MIB", "pnniMetrics2"), ("PNNI-MIB", "pnniMetrics3"), ("PNNI-MIB", "pnniMetrics4"), ("PNNI-MIB", "pnniMetrics5"), ("PNNI-MIB", "pnniMetrics6"), ("PNNI-MIB", "pnniMetrics7"), ("PNNI-MIB", "pnniMetrics8"), ("PNNI-MIB", "pnniMetricsRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    pnniMetricsOptionalGroup = pnniMetricsOptionalGroup.setStatus('current')
pnniRouteGeneralOptionalGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 2, 2, 26)).setObjects(("PNNI-MIB", "pnniRouteNodeNumber"), ("PNNI-MIB", "pnniRouteAddrNumber"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    pnniRouteGeneralOptionalGroup = pnniRouteGeneralOptionalGroup.setStatus('current')
pnniRouteNodeOptionalGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 2, 2, 27)).setObjects(("PNNI-MIB", "pnniRouteNodeDestPortId"), ("PNNI-MIB", "pnniRouteNodeProto"), ("PNNI-MIB", "pnniRouteNodeTimeStamp"), ("PNNI-MIB", "pnniRouteNodeInfo"), ("PNNI-MIB", "pnniRouteNodeGcacClp"), ("PNNI-MIB", "pnniRouteNodeFwdMetricAW"), ("PNNI-MIB", "pnniRouteNodeFwdMetric1"), ("PNNI-MIB", "pnniRouteNodeFwdMetric2"), ("PNNI-MIB", "pnniRouteNodeFwdMetric3"), ("PNNI-MIB", "pnniRouteNodeFwdMetric4"), ("PNNI-MIB", "pnniRouteNodeFwdMetric5"), ("PNNI-MIB", "pnniRouteNodeFwdMetric6"), ("PNNI-MIB", "pnniRouteNodeFwdMetric7"), ("PNNI-MIB", "pnniRouteNodeFwdMetric8"), ("PNNI-MIB", "pnniRouteNodeBwdMetricAW"), ("PNNI-MIB", "pnniRouteNodeBwdMetric1"), ("PNNI-MIB", "pnniRouteNodeBwdMetric2"), ("PNNI-MIB", "pnniRouteNodeBwdMetric3"), ("PNNI-MIB", "pnniRouteNodeBwdMetric4"), ("PNNI-MIB", "pnniRouteNodeBwdMetric5"), ("PNNI-MIB", "pnniRouteNodeBwdMetric6"), ("PNNI-MIB", "pnniRouteNodeBwdMetric7"), ("PNNI-MIB", "pnniRouteNodeBwdMetric8"), ("PNNI-MIB", "pnniRouteNodeVPCapability"), ("PNNI-MIB", "pnniRouteNodeStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    pnniRouteNodeOptionalGroup = pnniRouteNodeOptionalGroup.setStatus('current')
pnniDTLOptionalGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 2, 2, 28)).setObjects(("PNNI-MIB", "pnniDTLNodeId"), ("PNNI-MIB", "pnniDTLPortId"), ("PNNI-MIB", "pnniDTLLinkType"), ("PNNI-MIB", "pnniDTLStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    pnniDTLOptionalGroup = pnniDTLOptionalGroup.setStatus('current')
pnniRouteAddrOptionalGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 2, 2, 29)).setObjects(("PNNI-MIB", "pnniRouteAddrIfIndex"), ("PNNI-MIB", "pnniRouteAddrAdvertisingNodeId"), ("PNNI-MIB", "pnniRouteAddrAdvertisedPortId"), ("PNNI-MIB", "pnniRouteAddrType"), ("PNNI-MIB", "pnniRouteAddrProto"), ("PNNI-MIB", "pnniRouteAddrPnniScope"), ("PNNI-MIB", "pnniRouteAddrVPCapability"), ("PNNI-MIB", "pnniRouteAddrMetricsTag"), ("PNNI-MIB", "pnniRouteAddrPtseId"), ("PNNI-MIB", "pnniRouteAddrOriginateAdvertisement"), ("PNNI-MIB", "pnniRouteAddrInfo"), ("PNNI-MIB", "pnniRouteAddrOperStatus"), ("PNNI-MIB", "pnniRouteAddrTimeStamp"), ("PNNI-MIB", "pnniRouteAddrRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    pnniRouteAddrOptionalGroup = pnniRouteAddrOptionalGroup.setStatus('current')
pnniRouteTnsOptionalGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 353, 5, 4, 1, 2, 2, 30)).setObjects(("PNNI-MIB", "pnniRouteTnsIfIndex"), ("PNNI-MIB", "pnniRouteTnsAdvertisingNodeId"), ("PNNI-MIB", "pnniRouteTnsAdvertisedPortId"), ("PNNI-MIB", "pnniRouteTnsRouteType"), ("PNNI-MIB", "pnniRouteTnsProto"), ("PNNI-MIB", "pnniRouteTnsPnniScope"), ("PNNI-MIB", "pnniRouteTnsVPCapability"), ("PNNI-MIB", "pnniRouteTnsMetricsTag"), ("PNNI-MIB", "pnniRouteTnsPtseId"), ("PNNI-MIB", "pnniRouteTnsOriginateAdvertisement"), ("PNNI-MIB", "pnniRouteTnsInfo"), ("PNNI-MIB", "pnniRouteTnsOperStatus"), ("PNNI-MIB", "pnniRouteTnsTimeStamp"), ("PNNI-MIB", "pnniRouteTnsRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    pnniRouteTnsOptionalGroup = pnniRouteTnsOptionalGroup.setStatus('current')
mibBuilder.exportSymbols("PNNI-MIB", pnniLinkLgnGroup=pnniLinkLgnGroup, pnniRouteTnsRouteType=pnniRouteTnsRouteType, pnniHighestVersion=pnniHighestVersion, pnniIfVPCapability=pnniIfVPCapability, pnniNodeComplexRep=pnniNodeComplexRep, pnniScopeGlobal=pnniScopeGlobal, pnniMapNodeParentPeerGroupId=pnniMapNodeParentPeerGroupId, pnniPtseInfo=pnniPtseInfo, pnniMapNodeComplexRep=pnniMapNodeComplexRep, pnniRouteTnsOptionalGroup=pnniRouteTnsOptionalGroup, pnniSummaryAddressPrefixLength=pnniSummaryAddressPrefixLength, pnniSvccRccXmtHellos=pnniSvccRccXmtHellos, pnniSummaryAddressSuppress=pnniSummaryAddressSuppress, pnniRouteNodeFwdMetric2=pnniRouteNodeFwdMetric2, pnniSummaryLgnGroup=pnniSummaryLgnGroup, pnniNodeSvccTable=pnniNodeSvccTable, pnniIfAdmWeightUbr=pnniIfAdmWeightUbr, pnniNodeSvccCallingIntegrityTime=pnniNodeSvccCallingIntegrityTime, pnniRouteTnsIndex=pnniRouteTnsIndex, pnniBaseGroup=pnniBaseGroup, PnniLevel=PnniLevel, pnniMapNodeDatabaseOverload=pnniMapNodeDatabaseOverload, pnniMetrics7=pnniMetrics7, pnniMetricsIndex=pnniMetricsIndex, pnniRouteGeneralOptionalGroup=pnniRouteGeneralOptionalGroup, pnniRouteFailUnreachableOriginator=pnniRouteFailUnreachableOriginator, pnniMapPtseId=pnniMapPtseId, pnniScopeOrganizationMinusOne=pnniScopeOrganizationMinusOne, pnniRouteTnsOriginateAdvertisement=pnniRouteTnsOriginateAdvertisement, pnniIfRccTrafficDescrIndex=pnniIfRccTrafficDescrIndex, pnniScopeRegional=pnniScopeRegional, pnniLinkUpnodeId=pnniLinkUpnodeId, pnniMapTnsType=pnniMapTnsType, pnniMapNodeParentNodeId=pnniMapNodeParentNodeId, pnniMapAddrEntry=pnniMapAddrEntry, pnniMapIndex=pnniMapIndex, pnniNodePtseRefreshInterval=pnniNodePtseRefreshInterval, pnniRouteNodeStatus=pnniRouteNodeStatus, pnniSummaryAddress=pnniSummaryAddress, pnniSummaryAddressTable=pnniSummaryAddressTable, pnniScopeCommunityMinusOne=pnniScopeCommunityMinusOne, pnniLowestVersion=pnniLowestVersion, pnniMapNodeRestrictedTransit=pnniMapNodeRestrictedTransit, pnniNodeHelloHolddown=pnniNodeHelloHolddown, pnniSvccRccVci=pnniSvccRccVci, pnniRouteTnsTimeStamp=pnniRouteTnsTimeStamp, pnniLinkPortId=pnniLinkPortId, pnniIfAdmWeightNrtVbr=pnniIfAdmWeightNrtVbr, pnniMapNodeLeadershipPriority=pnniMapNodeLeadershipPriority, AtmAddrPrefix=AtmAddrPrefix, pnniLinkIfIndex=pnniLinkIfIndex, pnniNbrPeerRemoteNodeId=pnniNbrPeerRemoteNodeId, pnniMapTnsId=pnniMapTnsId, pnniScopeMinGroup=pnniScopeMinGroup, pnniRouteAddrPnniScope=pnniRouteAddrPnniScope, pnniMIBCompliances=pnniMIBCompliances, pnniSvccRccRemoteNodeId=pnniSvccRccRemoteNodeId, pnniRouteNodeBwdMetric8=pnniRouteNodeBwdMetric8, pnniRouteBaseGroup=pnniRouteBaseGroup, pnniDTLEntry=pnniDTLEntry, atmForumNetworkManagement=atmForumNetworkManagement, pnniSummaryAddressState=pnniSummaryAddressState, PYSNMP_MODULE_ID=pnniMIB, PnniVersion=PnniVersion, pnniNbrPeerRcvDbSums=pnniNbrPeerRcvDbSums, pnniNbrPeerRcvPtsps=pnniNbrPeerRcvPtsps, pnniNodeSvccInitTime=pnniNodeSvccInitTime, pnniScopeLocalNetworkPlusTwo=pnniScopeLocalNetworkPlusTwo, pnniNodeSvccCalledIntegrityTime=pnniNodeSvccCalledIntegrityTime, pnniNodeLevel=pnniNodeLevel, pnniRouteTnsAdvertisingNodeId=pnniRouteTnsAdvertisingNodeId, pnniDtlCountOriginator=pnniDtlCountOriginator, pnniIfEntry=pnniIfEntry, pnniMapOptionalGroup=pnniMapOptionalGroup, pnniMapType=pnniMapType, pnniMIBCompliance=pnniMIBCompliance, pnniMapMetricsTag=pnniMapMetricsTag, pnniAltRouteCountOriginator=pnniAltRouteCountOriginator, pnniRouteAddrVPCapability=pnniRouteAddrVPCapability, pnniRouteAddrTimeStamp=pnniRouteAddrTimeStamp, pnniNodePglEntry=pnniNodePglEntry, pnniNodeOperStatus=pnniNodeOperStatus, pnniScopeIntraCommunity=pnniScopeIntraCommunity, pnniMapAddrAddress=pnniMapAddrAddress, pnniIfAdmWeightCbr=pnniIfAdmWeightCbr, PnniHelloState=PnniHelloState, pnniLinkUpnodeAtmAddress=pnniLinkUpnodeAtmAddress, pnniNbrPeerPortMinGroup=pnniNbrPeerPortMinGroup, pnniMapTnsPlan=pnniMapTnsPlan, pnniSummaryAddressLgnGroup=pnniSummaryAddressLgnGroup, pnniLinkHelloState=pnniLinkHelloState, pnniMapOriginatingNodeId=pnniMapOriginatingNodeId, pnniRouteAddrOperStatus=pnniRouteAddrOperStatus, pnniNodePeerGroupId=pnniNodePeerGroupId, pnniMetricsEntry=pnniMetricsEntry, pnniRouteTnsVPCapability=pnniRouteTnsVPCapability, pnniRouteNodeFwdMetric8=pnniRouteNodeFwdMetric8, pnniLinkSvccRccIndex=pnniLinkSvccRccIndex, pnniNbrPeerRcvPtseReqs=pnniNbrPeerRcvPtseReqs, pnniMetricsRowStatus=pnniMetricsRowStatus, pnniMetricsTable=pnniMetricsTable, pnniScopeSiteMinusOne=pnniScopeSiteMinusOne, pnniSummaryPrefixLength=pnniSummaryPrefixLength, pnniPtseTable=pnniPtseTable, pnniNodePglLgnGroup=pnniNodePglLgnGroup, pnniSvccRccLgnGroup=pnniSvccRccLgnGroup, pnniNodeHelloInterval=pnniNodeHelloInterval, pnniRouteAddrPtseId=pnniRouteAddrPtseId, pnniNodePglTimeStamp=pnniNodePglTimeStamp, pnniRouteAddrMetricsTag=pnniRouteAddrMetricsTag, pnniLinkEntry=pnniLinkEntry, pnniNodeHlinkInact=pnniNodeHlinkInact, pnniNbrPeerLgnGroup=pnniNbrPeerLgnGroup, pnniMetricsAdminWeight=pnniMetricsAdminWeight, pnniNodePglInitTime=pnniNodePglInitTime, pnniRouteAddrEntry=pnniRouteAddrEntry, pnniMapAddrIndex=pnniMapAddrIndex, pnniNodeSvccTrafficDescriptorIndex=pnniNodeSvccTrafficDescriptorIndex, pnniMIBGroups=pnniMIBGroups, pnniSummaryState=pnniSummaryState, pnniNbrPeerPortEntry=pnniNbrPeerPortEntry, pnniMetricsOptionalGroup=pnniMetricsOptionalGroup, TnsPlan=TnsPlan, pnniRouteAddrIndex=pnniRouteAddrIndex, pnniRouteAddrOptionalGroup=pnniRouteAddrOptionalGroup, pnniAltRouteCountBorder=pnniAltRouteCountBorder, pnniScopeIntraOrganization=pnniScopeIntraOrganization, pnniMapNodeAtmAddress=pnniMapNodeAtmAddress, pnniIfAdmWeightAbr=pnniIfAdmWeightAbr, pnniRoutingGroup=pnniRoutingGroup, pnniRouteNodeFwdMetric7=pnniRouteNodeFwdMetric7, pnniNodeRestrictedTransit=pnniNodeRestrictedTransit, pnniRouteNodeDestNodeId=pnniRouteNodeDestNodeId, pnniRouteFailCountOriginator=pnniRouteFailCountOriginator, pnniNodeAtmAddress=pnniNodeAtmAddress, pnniLinkTable=pnniLinkTable, pnniRouteAddrAdvertisingNodeId=pnniRouteAddrAdvertisingNodeId, pnniRouteNodeEntry=pnniRouteNodeEntry, pnniRouteTnsPlan=pnniRouteTnsPlan, pnniSummaryAddressType=pnniSummaryAddressType, pnniRouteNodeFwdMetricAW=pnniRouteNodeFwdMetricAW, pnniNodeTable=pnniNodeTable, atmfPnni=atmfPnni, pnniSummarySuppress=pnniSummarySuppress, pnniRouteNodeClass=pnniRouteNodeClass, PnniPeerGroupId=PnniPeerGroupId, pnniRouteTnsType=pnniRouteTnsType, pnniNodeTimerEntry=pnniNodeTimerEntry, pnniRouteTnsProto=pnniRouteTnsProto, pnniMapNodePeerGroupId=pnniMapNodePeerGroupId, pnniGeneralBorderGroup=pnniGeneralBorderGroup, pnniNodeSvccRetryTime=pnniNodeSvccRetryTime, pnniLinkRcvHellos=pnniLinkRcvHellos, PnniNodeIndex=PnniNodeIndex, pnniRouteAddrInfo=pnniRouteAddrInfo, PnniAggrToken=PnniAggrToken, pnniScopeLocalNetworkPlusOne=pnniScopeLocalNetworkPlusOne, pnniIfAggrToken=pnniIfAggrToken, ClpType=ClpType, pnniRouteNodeBwdMetric4=pnniRouteNodeBwdMetric4, pnniRouteAddrOriginateAdvertisement=pnniRouteAddrOriginateAdvertisement, pnniMapPeerGroupId=pnniMapPeerGroupId, pnniMapNodeOptionalGroup=pnniMapNodeOptionalGroup, pnniRouteNodeInfo=pnniRouteNodeInfo, pnniRouteNodeFwdMetric4=pnniRouteNodeFwdMetric4, pnniRouteAddrIfIndex=pnniRouteAddrIfIndex, pnniMapTable=pnniMapTable, pnniMIBConformance=pnniMIBConformance, pnniSvccRccRemoteAtmAddress=pnniSvccRccRemoteAtmAddress, pnniSvccRccRcvHellos=pnniSvccRccRcvHellos, pnniIfPortId=pnniIfPortId, pnniRouteTnsEntry=pnniRouteTnsEntry, pnniNodeRowStatus=pnniNodeRowStatus, pnniScopeLocalNetwork=pnniScopeLocalNetwork, pnniRouteTnsOperStatus=pnniRouteTnsOperStatus, pnniNbrPeerPortTable=pnniNbrPeerPortTable, pnniRouteNodeFwdMetric6=pnniRouteNodeFwdMetric6, pnniNbrPeerTable=pnniNbrPeerTable, pnniNodeAvcrMt=pnniNodeAvcrMt, pnniSvccRccEntry=pnniSvccRccEntry, pnniNodeRxmtInterval=pnniNodeRxmtInterval, PnniPortId=PnniPortId, pnniDTLLinkType=pnniDTLLinkType, pnniSummaryEntry=pnniSummaryEntry, pnniNodeTimerMinGroup=pnniNodeTimerMinGroup, pnniRouteNodeBwdMetric3=pnniRouteNodeBwdMetric3, pnniRouteNodeProto=pnniRouteNodeProto, pnniRouteTnsPnniScope=pnniRouteTnsPnniScope, pnniMapNodeIAmLeader=pnniMapNodeIAmLeader, pnniPtseEntry=pnniPtseEntry, pnniIfTable=pnniIfTable, pnniPtseOriginatingNodeId=pnniPtseOriginatingNodeId, PnniPrefixLength=PnniPrefixLength, pnniMetrics6=pnniMetrics6, pnniNbrPeerXmtPtseAcks=pnniNbrPeerXmtPtseAcks, pnniMapTnsTable=pnniMapTnsTable, pnniRouteNodeDTL=pnniRouteNodeDTL, pnniMapTnsOptionalGroup=pnniMapTnsOptionalGroup, pnniNbrPeerState=pnniNbrPeerState, pnniNodeTimerTable=pnniNodeTimerTable, pnniPtseChecksum=pnniPtseChecksum, pnniNbrPeerXmtDbSums=pnniNbrPeerXmtDbSums, PnniAtmAddr=PnniAtmAddr, pnniMapNodeParentPglNodeId=pnniMapNodeParentPglNodeId, pnniMapTnsEntry=pnniMapTnsEntry, pnniSummaryType=pnniSummaryType, pnniIfRccServiceCategory=pnniIfRccServiceCategory, pnniDTLNodeId=pnniDTLNodeId, pnniMapAddrPrefixLength=pnniMapAddrPrefixLength, pnniMapNodeParentAtmAddress=pnniMapNodeParentAtmAddress, pnniSummaryTable=pnniSummaryTable, pnniSummaryRowStatus=pnniSummaryRowStatus, pnniNodePeerDelayedAckInterval=pnniNodePeerDelayedAckInterval, pnniRouteNodeTimeStamp=pnniRouteNodeTimeStamp, pnniScopeMappingTable=pnniScopeMappingTable, pnniScopeSitePlusOne=pnniScopeSitePlusOne, pnniRouteAddrNumber=pnniRouteAddrNumber, pnniNodeLowest=pnniNodeLowest, pnniRouteNodeFwdMetric5=pnniRouteNodeFwdMetric5, pnniPtseType=pnniPtseType, pnniSummaryAddressRowStatus=pnniSummaryAddressRowStatus, pnniMapAddrOptionalGroup=pnniMapAddrOptionalGroup, pnniRouteNodeBwdMetric6=pnniRouteNodeBwdMetric6, pnniNbrPeerPortCount=pnniNbrPeerPortCount, pnniLinkRemoteNodeId=pnniLinkRemoteNodeId, pnniScopeMappingEntry=pnniScopeMappingEntry, pnniSvccRccIndex=pnniSvccRccIndex, pnniRouteTnsRowStatus=pnniRouteTnsRowStatus, pnniNbrPeerSvccRccIndex=pnniNbrPeerSvccRccIndex, pnniMetricsDirection=pnniMetricsDirection, pnniMapNodeEntry=pnniMapNodeEntry, pnniNodeAdminStatus=pnniNodeAdminStatus, pnniMetrics8=pnniMetrics8, pnniSvccRccTable=pnniSvccRccTable, pnniNodeRestrictedBranching=pnniNodeRestrictedBranching, pnniMapRemotePortId=pnniMapRemotePortId, pnniMetrics1=pnniMetrics1, pnniScopeIntraSite=pnniScopeIntraSite, pnniNbrPeerRcvPtseAcks=pnniNbrPeerRcvPtseAcks, pnniNodeCtdPm=pnniNodeCtdPm, pnniPtseId=pnniPtseId, pnniDTLIndex=pnniDTLIndex, pnniRouteAddrType=pnniRouteAddrType, pnniRouteNodeBwdMetric2=pnniRouteNodeBwdMetric2, pnniNodeSvccLgnGroup=pnniNodeSvccLgnGroup, pnniRouteAddrPrefixLength=pnniRouteAddrPrefixLength, pnniMapRemoteNodeId=pnniMapRemoteNodeId, pnniDTLTable=pnniDTLTable, pnniDtlCountBorder=pnniDtlCountBorder, ServiceCategory=ServiceCategory, pnniRouteAddrAdvertisedPortId=pnniRouteAddrAdvertisedPortId, pnniIfAdmWeightRtVbr=pnniIfAdmWeightRtVbr, pnniMapAggrToken=pnniMapAggrToken, pnniMetrics3=pnniMetrics3)
mibBuilder.exportSymbols("PNNI-MIB", pnniCrankbackCountBorder=pnniCrankbackCountBorder, pnniLinkXmtHellos=pnniLinkXmtHellos, pnniScopeOrganizationPlusOne=pnniScopeOrganizationPlusOne, pnniMapEntry=pnniMapEntry, pnniRouteNodeVPCapability=pnniRouteNodeVPCapability, pnniRouteNodeDestPortId=pnniRouteNodeDestPortId, pnniIfNodeIndex=pnniIfNodeIndex, pnniLinkVersion=pnniLinkVersion, pnniPtseOptionalGroup=pnniPtseOptionalGroup, pnniNodePglLeadershipPriority=pnniNodePglLeadershipPriority, pnniDTLStatus=pnniDTLStatus, pnniCrankbackCountOriginator=pnniCrankbackCountOriginator, pnniPtseSequenceNum=pnniPtseSequenceNum, pnniLinkType=pnniLinkType, pnniSvccRccHelloState=pnniSvccRccHelloState, pnniNodePglTable=pnniNodePglTable, pnniRouteNodeNumber=pnniRouteNodeNumber, pnniMapNodePreferredPgl=pnniMapNodePreferredPgl, pnniRouteTnsTable=pnniRouteTnsTable, pnniMetrics5=pnniMetrics5, pnniRouteTnsAdvertisedPortId=pnniRouteTnsAdvertisedPortId, pnniRouteFailUnreachableBorder=pnniRouteFailUnreachableBorder, pnniMapNodeTable=pnniMapNodeTable, pnniDTLPortId=pnniDTLPortId, pnniNodePglMinGroup=pnniNodePglMinGroup, pnniRouteNodeFwdMetric3=pnniRouteNodeFwdMetric3, pnniRouteNodeBwdMetric5=pnniRouteNodeBwdMetric5, pnniRouteAddrTable=pnniRouteAddrTable, pnniScopeCommunityPlusOne=pnniScopeCommunityPlusOne, pnniDTLEntryIndex=pnniDTLEntryIndex, pnniRouteTnsIfIndex=pnniRouteTnsIfIndex, pnniNbrPeerEntry=pnniNbrPeerEntry, pnniMapNodeId=pnniMapNodeId, pnniIfMinGroup=pnniIfMinGroup, pnniMapTnsAdvertisedPortId=pnniMapTnsAdvertisedPortId, pnniNodeSvccEntry=pnniNodeSvccEntry, pnniNodePglOverrideDelay=pnniNodePglOverrideDelay, pnniRouteTnsMetricsTag=pnniRouteTnsMetricsTag, pnniNodeDomainName=pnniNodeDomainName, pnniNodePeerGroupLeader=pnniNodePeerGroupLeader, pnniRouteNodeBwdMetric7=pnniRouteNodeBwdMetric7, pnniRouteAddrProto=pnniRouteAddrProto, pnniMetricsGcacClp=pnniMetricsGcacClp, pnniMapTnsAdvertisingNodeId=pnniMapTnsAdvertisingNodeId, pnniRouteNodeGcacClp=pnniRouteNodeGcacClp, pnniNodeCdvPm=pnniNodeCdvPm, pnniMetricsClasses=pnniMetricsClasses, pnniNodeIndex=pnniNodeIndex, PnniSvccRccIndex=PnniSvccRccIndex, pnniRouteNodeBwdMetric1=pnniRouteNodeBwdMetric1, pnniNodePreferredPgl=pnniNodePreferredPgl, pnniIfBorderGroup=pnniIfBorderGroup, pnniNodeAvcrPm=pnniNodeAvcrPm, pnniRouteNodeFwdMetric1=pnniRouteNodeFwdMetric1, pnniRouteNodeOptionalGroup=pnniRouteNodeOptionalGroup, pnniNodePglState=pnniNodePglState, pnniLinkBorderOrLgnGroup=pnniLinkBorderOrLgnGroup, pnniNodePtseHolddown=pnniNodePtseHolddown, pnniNodeDatabaseOverload=pnniNodeDatabaseOverload, pnniNodePtses=pnniNodePtses, PnniNodeId=PnniNodeId, pnniSummaryAddressEntry=pnniSummaryAddressEntry, pnniNodeCfgParentNodeIndex=pnniNodeCfgParentNodeIndex, pnniMapOriginatingPortId=pnniMapOriginatingPortId, pnniMapAddrTable=pnniMapAddrTable, pnniDTLOptionalGroup=pnniDTLOptionalGroup, pnniNodePglReelectTime=pnniNodePglReelectTime, pnniRouteFailCountBorder=pnniRouteFailCountBorder, pnniNbrPeerMinGroup=pnniNbrPeerMinGroup, pnniRouteTnsId=pnniRouteTnsId, pnniNbrPeerXmtPtsps=pnniNbrPeerXmtPtsps, pnniMetricsTag=pnniMetricsTag, pnniNodeEntry=pnniNodeEntry, pnniNodeId=pnniNodeId, pnniRouteAddrRowStatus=pnniRouteAddrRowStatus, pnniLinkMinGroup=pnniLinkMinGroup, pnniNodePtseLifetimeFactor=pnniNodePtseLifetimeFactor, pnniScopeInterRegional=pnniScopeInterRegional, pnniNbrPeerPortFloodStatus=pnniNbrPeerPortFloodStatus, atmForum=atmForum, pnniRouteNodeBwdMetricAW=pnniRouteNodeBwdMetricAW, pnniSvccRccIfIndex=pnniSvccRccIfIndex, pnniRouteTnsInfo=pnniRouteTnsInfo, pnniLinkCommonPeerGroupId=pnniLinkCommonPeerGroupId, pnniRouteTnsPtseId=pnniRouteTnsPtseId, pnniRouteNodeTable=pnniRouteNodeTable, pnniSvccRccVpi=pnniSvccRccVpi, pnniMetrics2=pnniMetrics2, pnniNodeTimerLgnGroup=pnniNodeTimerLgnGroup, pnniNodeHelloInactivityFactor=pnniNodeHelloInactivityFactor, pnniNodeActiveParentNodeId=pnniNodeActiveParentNodeId, pnniPtseLifeTime=pnniPtseLifeTime, pnniMIB=pnniMIB, TnsType=TnsType, pnniMIBObjects=pnniMIBObjects, pnniMapAddrAdvertisedPortId=pnniMapAddrAdvertisedPortId, pnniRouteAddrAddress=pnniRouteAddrAddress, pnniMapAddrAdvertisingNodeId=pnniMapAddrAdvertisingNodeId, pnniNodeMinGroup=pnniNodeMinGroup, pnniMetrics4=pnniMetrics4, pnniGeneralMinGroup=pnniGeneralMinGroup, pnniSummaryAddressAddress=pnniSummaryAddressAddress, pnniNbrPeerXmtPtseReqs=pnniNbrPeerXmtPtseReqs, pnniSvccRccVersion=pnniSvccRccVersion, pnniMapVPCapability=pnniMapVPCapability, pnniLinkDerivedAggrToken=pnniLinkDerivedAggrToken, pnniNbrPeerPortId=pnniNbrPeerPortId, PnniMetricsTag=PnniMetricsTag, pnniLinkRemotePortId=pnniLinkRemotePortId, pnniMapNodeRestrictedBranching=pnniMapNodeRestrictedBranching)
