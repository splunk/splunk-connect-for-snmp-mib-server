#
# PySNMP MIB module HPSWITCH-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/HPSWITCH-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:30:27 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ConstraintsUnion, ValueSizeConstraint, ConstraintsIntersection, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ConstraintsUnion", "ValueSizeConstraint", "ConstraintsIntersection", "ValueRangeConstraint")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
Unsigned32, Counter32, Gauge32, ModuleIdentity, ObjectIdentity, Bits, IpAddress, NotificationType, MibScalar, MibTable, MibTableRow, MibTableColumn, Integer32, enterprises, TimeTicks, iso, MibIdentifier, Counter64 = mibBuilder.importSymbols("SNMPv2-SMI", "Unsigned32", "Counter32", "Gauge32", "ModuleIdentity", "ObjectIdentity", "Bits", "IpAddress", "NotificationType", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Integer32", "enterprises", "TimeTicks", "iso", "MibIdentifier", "Counter64")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
class MacAddr(OctetString):
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(6, 6)
    fixedLength = 6

hp = MibIdentifier((1, 3, 6, 1, 4, 1, 11))
nm = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2))
icf = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14))
icfEswitch = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 6))
hpEs = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 6, 1))
hpEsMain = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 6, 1, 1))
hpEsConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 6, 1, 1, 1))
hpEsFwVer = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 6, 1, 1, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpEsFwVer.setStatus('mandatory')
hpEsHwVer = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 6, 1, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpEsHwVer.setStatus('mandatory')
hpEsIpAddr = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 6, 1, 1, 1, 3), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpEsIpAddr.setStatus('mandatory')
hpEsNetMask = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 6, 1, 1, 1, 4), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpEsNetMask.setStatus('mandatory')
hpEsDefaultGateway = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 6, 1, 1, 1, 5), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpEsDefaultGateway.setStatus('mandatory')
hpEsTrapRcvrMaxEnt = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 6, 1, 1, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpEsTrapRcvrMaxEnt.setStatus('mandatory')
hpEsTrapRcvrCurEnt = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 6, 1, 1, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpEsTrapRcvrCurEnt.setStatus('mandatory')
hpEsTrapRcvrNext = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 6, 1, 1, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 655535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpEsTrapRcvrNext.setStatus('mandatory')
hpEsTrapRcvrTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 6, 1, 1, 1, 9), )
if mibBuilder.loadTexts: hpEsTrapRcvrTable.setStatus('mandatory')
hpEsTrapRcvrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 6, 1, 1, 1, 9, 1), ).setIndexNames((0, "HPSWITCH-MIB", "hpEsTrapRcvrIndex"))
if mibBuilder.loadTexts: hpEsTrapRcvrEntry.setStatus('mandatory')
hpEsTrapRcvrIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 6, 1, 1, 1, 9, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpEsTrapRcvrIndex.setStatus('mandatory')
hpEsTrapRcvrStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 6, 1, 1, 1, 9, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("other", 1), ("valid", 2), ("invalid", 3), ("create", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpEsTrapRcvrStatus.setStatus('mandatory')
hpEsTrapRcvrIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 6, 1, 1, 1, 9, 1, 3), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpEsTrapRcvrIpAddress.setStatus('mandatory')
hpEsTrapRcvrComm = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 6, 1, 1, 1, 9, 1, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpEsTrapRcvrComm.setStatus('mandatory')
hpEsSys = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 6, 1, 1, 2))
hpEsNumPorts = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 6, 1, 1, 2, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpEsNumPorts.setStatus('mandatory')
hpEsNumStations = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 6, 1, 1, 2, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpEsNumStations.setStatus('mandatory')
hpEsMostStations = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 6, 1, 1, 2, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpEsMostStations.setStatus('mandatory')
hpEsMaxStations = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 6, 1, 1, 2, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpEsMaxStations.setStatus('mandatory')
hpEsReset = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 6, 1, 1, 2, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("other", 1), ("running", 2), ("softReset", 3), ("hardReset", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpEsReset.setStatus('mandatory')
hpEsNumResets = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 6, 1, 1, 2, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpEsNumResets.setStatus('mandatory')
hpEsAddrAgingTime = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 6, 1, 1, 2, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 9999))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpEsAddrAgingTime.setStatus('mandatory')
hpEsSysStaTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 6, 1, 1, 2, 9), )
if mibBuilder.loadTexts: hpEsSysStaTable.setStatus('mandatory')
hpEsSysStaEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 6, 1, 1, 2, 9, 1), ).setIndexNames((0, "HPSWITCH-MIB", "hpEsSysStaMacAddr"))
if mibBuilder.loadTexts: hpEsSysStaEntry.setStatus('mandatory')
hpEsSysStaMacAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 6, 1, 1, 2, 9, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(6, 6)).setFixedLength(6)).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpEsSysStaMacAddr.setStatus('mandatory')
hpEsSysStaPort = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 6, 1, 1, 2, 9, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpEsSysStaPort.setStatus('mandatory')
hpEsSysStaTraffic = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 6, 1, 1, 2, 9, 1, 3), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpEsSysStaTraffic.setStatus('mandatory')
hpEsTop = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 6, 1, 2))
hpEsPort = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 6, 1, 3))
hpEsPortTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 6, 1, 3, 1), )
if mibBuilder.loadTexts: hpEsPortTable.setStatus('mandatory')
hpEsPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 6, 1, 3, 1, 1), ).setIndexNames((0, "HPSWITCH-MIB", "hpEsPortIndex"))
if mibBuilder.loadTexts: hpEsPortEntry.setStatus('mandatory')
hpEsPortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 6, 1, 3, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpEsPortIndex.setStatus('mandatory')
hpEsPortOprStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 6, 1, 3, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpEsPortOprStatus.setStatus('mandatory')
hpEsPortExtConn = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 6, 1, 3, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("other", 1), ("aui", 2), ("rj45", 3), ("noExternal", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpEsPortExtConn.setStatus('mandatory')
hpEsPortDuplex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 6, 1, 3, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("fullDuplex", 1), ("halfDuplex", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpEsPortDuplex.setStatus('mandatory')
hpEsPortRcvLocalFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 6, 1, 3, 1, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpEsPortRcvLocalFrames.setStatus('mandatory')
hpEsPortForwardedFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 6, 1, 3, 1, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpEsPortForwardedFrames.setStatus('mandatory')
hpEsPortMostStations = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 6, 1, 3, 1, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpEsPortMostStations.setStatus('mandatory')
hpEsPortMaxStations = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 6, 1, 3, 1, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpEsPortMaxStations.setStatus('mandatory')
hpEsPortSWHandledFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 6, 1, 3, 1, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpEsPortSWHandledFrames.setStatus('mandatory')
hpEsPortLocalStations = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 6, 1, 3, 1, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpEsPortLocalStations.setStatus('mandatory')
hpEsPortRemoteStations = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 6, 1, 3, 1, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpEsPortRemoteStations.setStatus('mandatory')
hpEsPortUnknownStaFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 6, 1, 3, 1, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpEsPortUnknownStaFrames.setStatus('mandatory')
hpEsPortResetStats = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 6, 1, 3, 1, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("running", 2), ("reset", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpEsPortResetStats.setStatus('mandatory')
hpEsPortResetTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 6, 1, 3, 1, 1, 17), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpEsPortResetTimer.setStatus('mandatory')
hpEsPortResetAddrs = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 6, 1, 3, 1, 1, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("running", 2), ("reset", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpEsPortResetAddrs.setStatus('mandatory')
hpEsPortRcvBcasts = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 6, 1, 3, 1, 1, 20), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpEsPortRcvBcasts.setStatus('mandatory')
hpEsPortSwitchedFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 6, 1, 3, 1, 1, 25), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpEsPortSwitchedFrames.setStatus('mandatory')
mibBuilder.exportSymbols("HPSWITCH-MIB", hpEs=hpEs, hpEsPortResetStats=hpEsPortResetStats, hpEsPortRemoteStations=hpEsPortRemoteStations, hpEsConfig=hpEsConfig, hpEsNumPorts=hpEsNumPorts, hpEsPortOprStatus=hpEsPortOprStatus, hpEsPortForwardedFrames=hpEsPortForwardedFrames, hpEsPortResetTimer=hpEsPortResetTimer, hpEsTrapRcvrTable=hpEsTrapRcvrTable, hpEsPortSwitchedFrames=hpEsPortSwitchedFrames, hpEsTrapRcvrMaxEnt=hpEsTrapRcvrMaxEnt, hpEsPortUnknownStaFrames=hpEsPortUnknownStaFrames, hpEsPortMaxStations=hpEsPortMaxStations, hpEsReset=hpEsReset, hpEsNetMask=hpEsNetMask, hpEsMostStations=hpEsMostStations, hpEsPortRcvBcasts=hpEsPortRcvBcasts, hpEsPortEntry=hpEsPortEntry, hpEsTrapRcvrCurEnt=hpEsTrapRcvrCurEnt, hpEsTrapRcvrStatus=hpEsTrapRcvrStatus, MacAddr=MacAddr, hpEsSysStaTraffic=hpEsSysStaTraffic, hpEsSysStaPort=hpEsSysStaPort, hpEsTrapRcvrComm=hpEsTrapRcvrComm, hpEsHwVer=hpEsHwVer, hpEsSys=hpEsSys, hpEsSysStaMacAddr=hpEsSysStaMacAddr, hpEsTrapRcvrNext=hpEsTrapRcvrNext, hpEsTrapRcvrIpAddress=hpEsTrapRcvrIpAddress, hpEsPortIndex=hpEsPortIndex, hpEsFwVer=hpEsFwVer, hpEsTop=hpEsTop, hpEsPortResetAddrs=hpEsPortResetAddrs, hpEsDefaultGateway=hpEsDefaultGateway, hpEsSysStaTable=hpEsSysStaTable, hpEsPortLocalStations=hpEsPortLocalStations, hpEsMaxStations=hpEsMaxStations, hpEsIpAddr=hpEsIpAddr, hpEsTrapRcvrEntry=hpEsTrapRcvrEntry, hpEsNumResets=hpEsNumResets, hpEsPortRcvLocalFrames=hpEsPortRcvLocalFrames, hpEsPort=hpEsPort, hpEsSysStaEntry=hpEsSysStaEntry, nm=nm, hpEsAddrAgingTime=hpEsAddrAgingTime, icf=icf, hpEsPortTable=hpEsPortTable, hpEsTrapRcvrIndex=hpEsTrapRcvrIndex, hpEsPortExtConn=hpEsPortExtConn, hpEsPortSWHandledFrames=hpEsPortSWHandledFrames, icfEswitch=icfEswitch, hpEsPortMostStations=hpEsPortMostStations, hpEsPortDuplex=hpEsPortDuplex, hp=hp, hpEsMain=hpEsMain, hpEsNumStations=hpEsNumStations)
