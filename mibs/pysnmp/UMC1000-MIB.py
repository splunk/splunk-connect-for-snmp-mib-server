#
# PySNMP MIB module UMC1000-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/UMC1000-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 21:21:18 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
umc1000, = mibBuilder.importSymbols("AFC-OIDS", "umc1000")
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ValueSizeConstraint, ConstraintsUnion, SingleValueConstraint, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ValueSizeConstraint", "ConstraintsUnion", "SingleValueConstraint", "ValueRangeConstraint")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
iso, Unsigned32, ModuleIdentity, IpAddress, TimeTicks, Gauge32, ObjectIdentity, MibIdentifier, Bits, Counter64, NotificationType, Integer32, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter32 = mibBuilder.importSymbols("SNMPv2-SMI", "iso", "Unsigned32", "ModuleIdentity", "IpAddress", "TimeTicks", "Gauge32", "ObjectIdentity", "MibIdentifier", "Bits", "Counter64", "NotificationType", "Integer32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter32")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
class TerminalIdType(Integer32):
    pass

class ShelfIdType(Integer32):
    pass

class SlotIdType(Integer32):
    pass

class PlugInType(Integer32):
    pass

class DbActionType(Integer32):
    pass

class V5GroupIdType(Integer32):
    pass

class DataOperation(Integer32):
    pass

umc1System = MibIdentifier((1, 3, 6, 1, 4, 1, 2067, 1, 1, 2, 1))
umc1Terminal = MibIdentifier((1, 3, 6, 1, 4, 1, 2067, 1, 1, 2, 3))
umc1Alarm = MibIdentifier((1, 3, 6, 1, 4, 1, 2067, 1, 1, 2, 8))
umc1ManagerIf = MibIdentifier((1, 3, 6, 1, 4, 1, 2067, 1, 1, 2, 9))
umc1Topology = MibIdentifier((1, 3, 6, 1, 4, 1, 2067, 1, 1, 2, 10))
umc1DataService = MibIdentifier((1, 3, 6, 1, 4, 1, 2067, 1, 1, 2, 11))
umc1Trap = MibIdentifier((1, 3, 6, 1, 4, 1, 2067, 1, 1, 2, 100))
umc1Inventory = MibIdentifier((1, 3, 6, 1, 4, 1, 2067, 1, 1, 2, 2))
umc1ACOSnapTopology = MibIdentifier((1, 3, 6, 1, 4, 1, 2067, 1, 1, 2, 4))
umc1CommandResponse = MibIdentifier((1, 3, 6, 1, 4, 1, 2067, 1, 1, 2, 5))
umc1Span = MibIdentifier((1, 3, 6, 1, 4, 1, 2067, 1, 1, 2, 6))
umc1InventoryShelf = MibIdentifier((1, 3, 6, 1, 4, 1, 2067, 1, 1, 2, 2, 1))
umc1InventoryShelfExtended = MibIdentifier((1, 3, 6, 1, 4, 1, 2067, 1, 1, 2, 2, 2))
umc1InventoryPlugin = MibIdentifier((1, 3, 6, 1, 4, 1, 2067, 1, 1, 2, 2, 3))
umc1InventoryPluginExtended = MibIdentifier((1, 3, 6, 1, 4, 1, 2067, 1, 1, 2, 2, 4))
umc1SystemDateTime = MibScalar((1, 3, 6, 1, 4, 1, 2067, 1, 1, 2, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(11, 11)).setFixedLength(11)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: umc1SystemDateTime.setStatus('mandatory')
umc1SystemSysProv = MibIdentifier((1, 3, 6, 1, 4, 1, 2067, 1, 1, 2, 1, 2))
umc1SystemSysProvTableChangeSeqNum = MibScalar((1, 3, 6, 1, 4, 1, 2067, 1, 1, 2, 1, 2, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: umc1SystemSysProvTableChangeSeqNum.setStatus('mandatory')
umc1SystemSysProvBerTable = MibTable((1, 3, 6, 1, 4, 1, 2067, 1, 1, 2, 1, 2, 1), )
if mibBuilder.loadTexts: umc1SystemSysProvBerTable.setStatus('mandatory')
umc1SystemSysProvBerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2067, 1, 1, 2, 1, 2, 1, 1), ).setIndexNames((0, "UMC1000-MIB", "umc1SystemSysProvBerPit"))
if mibBuilder.loadTexts: umc1SystemSysProvBerEntry.setStatus('mandatory')
umc1SystemSysProvBerPit = MibTableColumn((1, 3, 6, 1, 4, 1, 2067, 1, 1, 2, 1, 2, 1, 1, 1), PlugInType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: umc1SystemSysProvBerPit.setStatus('mandatory')
umc1SystemSysProvBerRedThresh = MibTableColumn((1, 3, 6, 1, 4, 1, 2067, 1, 1, 2, 1, 2, 1, 1, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: umc1SystemSysProvBerRedThresh.setStatus('mandatory')
umc1SystemSysProvBerMaintThresh = MibTableColumn((1, 3, 6, 1, 4, 1, 2067, 1, 1, 2, 1, 2, 1, 1, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: umc1SystemSysProvBerMaintThresh.setStatus('mandatory')
umc1SystemSysProvBerMarginData = MibTableColumn((1, 3, 6, 1, 4, 1, 2067, 1, 1, 2, 1, 2, 1, 1, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: umc1SystemSysProvBerMarginData.setStatus('mandatory')
umc1SystemSysProvSystemCcsThresh = MibScalar((1, 3, 6, 1, 4, 1, 2067, 1, 1, 2, 1, 2, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: umc1SystemSysProvSystemCcsThresh.setStatus('mandatory')
umc1SystemSysProvPsuRingVoltage = MibScalar((1, 3, 6, 1, 4, 1, 2067, 1, 1, 2, 1, 2, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: umc1SystemSysProvPsuRingVoltage.setStatus('mandatory')
umc1SystemSysProvPsuPulseMeterTone = MibScalar((1, 3, 6, 1, 4, 1, 2067, 1, 1, 2, 1, 2, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: umc1SystemSysProvPsuPulseMeterTone.setStatus('mandatory')
umc1SystemSysProvPsuRingFreq = MibScalar((1, 3, 6, 1, 4, 1, 2067, 1, 1, 2, 1, 2, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: umc1SystemSysProvPsuRingFreq.setStatus('mandatory')
umc1SystemSysProvChgTable = MibTable((1, 3, 6, 1, 4, 1, 2067, 1, 1, 2, 1, 2, 6), )
if mibBuilder.loadTexts: umc1SystemSysProvChgTable.setStatus('mandatory')
umc1SystemSysProvChgEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2067, 1, 1, 2, 1, 2, 6, 1), ).setIndexNames((0, "UMC1000-MIB", "umc1SystemSysProvChgSeqNbr"))
if mibBuilder.loadTexts: umc1SystemSysProvChgEntry.setStatus('mandatory')
umc1SystemSysProvChgSeqNbr = MibTableColumn((1, 3, 6, 1, 4, 1, 2067, 1, 1, 2, 1, 2, 6, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: umc1SystemSysProvChgSeqNbr.setStatus('mandatory')
umc1SystemSysProvChgData = MibTableColumn((1, 3, 6, 1, 4, 1, 2067, 1, 1, 2, 1, 2, 6, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: umc1SystemSysProvChgData.setStatus('mandatory')
umc1SystemSysProvACOConfig = MibScalar((1, 3, 6, 1, 4, 1, 2067, 1, 1, 2, 1, 2, 8), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: umc1SystemSysProvACOConfig.setStatus('mandatory')
umc1SystemSysTimingSource = MibScalar((1, 3, 6, 1, 4, 1, 2067, 1, 1, 2, 1, 2, 9), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: umc1SystemSysTimingSource.setStatus('mandatory')
umc1SystemSysTemperature = MibScalar((1, 3, 6, 1, 4, 1, 2067, 1, 1, 2, 1, 2, 10), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: umc1SystemSysTemperature.setStatus('mandatory')
umc1SystemSysProvCATable = MibTable((1, 3, 6, 1, 4, 1, 2067, 1, 1, 2, 1, 2, 11), )
if mibBuilder.loadTexts: umc1SystemSysProvCATable.setStatus('mandatory')
umc1SystemSysProvCAEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2067, 1, 1, 2, 1, 2, 11, 1), ).setIndexNames((0, "UMC1000-MIB", "umc1SystemSysProvCAIndex"))
if mibBuilder.loadTexts: umc1SystemSysProvCAEntry.setStatus('mandatory')
umc1SystemSysProvCAIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2067, 1, 1, 2, 1, 2, 11, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: umc1SystemSysProvCAIndex.setStatus('mandatory')
umc1SystemSysProvCAData = MibTableColumn((1, 3, 6, 1, 4, 1, 2067, 1, 1, 2, 1, 2, 11, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: umc1SystemSysProvCAData.setStatus('mandatory')
umc1SystemPitProv = MibIdentifier((1, 3, 6, 1, 4, 1, 2067, 1, 1, 2, 1, 3))
umc1SystemPitProvTable = MibTable((1, 3, 6, 1, 4, 1, 2067, 1, 1, 2, 1, 3, 1), )
if mibBuilder.loadTexts: umc1SystemPitProvTable.setStatus('mandatory')
umc1SystemPitProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2067, 1, 1, 2, 1, 3, 1, 1), ).setIndexNames((0, "UMC1000-MIB", "umc1SystemPitProvTerminalId"), (0, "UMC1000-MIB", "umc1SystemPitProvShelfId"), (0, "UMC1000-MIB", "umc1SystemPitProvSlotId"), (0, "UMC1000-MIB", "umc1SystemPitProvPit"))
if mibBuilder.loadTexts: umc1SystemPitProvEntry.setStatus('mandatory')
umc1SystemPitProvTerminalId = MibTableColumn((1, 3, 6, 1, 4, 1, 2067, 1, 1, 2, 1, 3, 1, 1, 1), TerminalIdType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: umc1SystemPitProvTerminalId.setStatus('mandatory')
umc1SystemPitProvShelfId = MibTableColumn((1, 3, 6, 1, 4, 1, 2067, 1, 1, 2, 1, 3, 1, 1, 2), ShelfIdType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: umc1SystemPitProvShelfId.setStatus('mandatory')
umc1SystemPitProvSlotId = MibTableColumn((1, 3, 6, 1, 4, 1, 2067, 1, 1, 2, 1, 3, 1, 1, 3), SlotIdType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: umc1SystemPitProvSlotId.setStatus('mandatory')
umc1SystemPitProvPit = MibTableColumn((1, 3, 6, 1, 4, 1, 2067, 1, 1, 2, 1, 3, 1, 1, 4), PlugInType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: umc1SystemPitProvPit.setStatus('mandatory')
umc1SystemPitProvData = MibTableColumn((1, 3, 6, 1, 4, 1, 2067, 1, 1, 2, 1, 3, 1, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: umc1SystemPitProvData.setStatus('mandatory')
umc1SystemDefPitProvTable = MibTable((1, 3, 6, 1, 4, 1, 2067, 1, 1, 2, 1, 3, 2), )
if mibBuilder.loadTexts: umc1SystemDefPitProvTable.setStatus('mandatory')
umc1SystemDefPitProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2067, 1, 1, 2, 1, 3, 2, 1), ).setIndexNames((0, "UMC1000-MIB", "umc1SystemDefPitProvTerminalId"), (0, "UMC1000-MIB", "umc1SystemDefPitProvShelfId"), (0, "UMC1000-MIB", "umc1SystemDefPitProvSlotId"), (0, "UMC1000-MIB", "umc1SystemDefPitProvPit"))
if mibBuilder.loadTexts: umc1SystemDefPitProvEntry.setStatus('mandatory')
umc1SystemDefPitProvTerminalId = MibTableColumn((1, 3, 6, 1, 4, 1, 2067, 1, 1, 2, 1, 3, 2, 1, 1), TerminalIdType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: umc1SystemDefPitProvTerminalId.setStatus('mandatory')
umc1SystemDefPitProvShelfId = MibTableColumn((1, 3, 6, 1, 4, 1, 2067, 1, 1, 2, 1, 3, 2, 1, 2), ShelfIdType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: umc1SystemDefPitProvShelfId.setStatus('mandatory')
umc1SystemDefPitProvSlotId = MibTableColumn((1, 3, 6, 1, 4, 1, 2067, 1, 1, 2, 1, 3, 2, 1, 3), SlotIdType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: umc1SystemDefPitProvSlotId.setStatus('mandatory')
umc1SystemDefPitProvPit = MibTableColumn((1, 3, 6, 1, 4, 1, 2067, 1, 1, 2, 1, 3, 2, 1, 4), PlugInType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: umc1SystemDefPitProvPit.setStatus('mandatory')
umc1SystemDefPitProvData = MibTableColumn((1, 3, 6, 1, 4, 1, 2067, 1, 1, 2, 1, 3, 2, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: umc1SystemDefPitProvData.setStatus('mandatory')
umc1SystemPitProvChgTable = MibTable((1, 3, 6, 1, 4, 1, 2067, 1, 1, 2, 1, 3, 3), )
if mibBuilder.loadTexts: umc1SystemPitProvChgTable.setStatus('mandatory')
umc1SystemPitProvChgEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2067, 1, 1, 2, 1, 3, 3, 1), ).setIndexNames((0, "UMC1000-MIB", "umc1SystemPitProvChgSeqNbr"))
if mibBuilder.loadTexts: umc1SystemPitProvChgEntry.setStatus('mandatory')
umc1SystemPitProvChgSeqNbr = MibTableColumn((1, 3, 6, 1, 4, 1, 2067, 1, 1, 2, 1, 3, 3, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: umc1SystemPitProvChgSeqNbr.setStatus('mandatory')
umc1SystemPitProvChgData = MibTableColumn((1, 3, 6, 1, 4, 1, 2067, 1, 1, 2, 1, 3, 3, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(6, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: umc1SystemPitProvChgData.setStatus('mandatory')
umc1SystemPitProvTableChangeSeqNum = MibScalar((1, 3, 6, 1, 4, 1, 2067, 1, 1, 2, 1, 3, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: umc1SystemPitProvTableChangeSeqNum.setStatus('mandatory')
umc1FacAlmStringTableChangeSeqNum = MibScalar((1, 3, 6, 1, 4, 1, 2067, 1, 1, 2, 1, 3, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: umc1FacAlmStringTableChangeSeqNum.setStatus('mandatory')
umc1FacAlmStringTable = MibTable((1, 3, 6, 1, 4, 1, 2067, 1, 1, 2, 1, 3, 6), )
if mibBuilder.loadTexts: umc1FacAlmStringTable.setStatus('mandatory')
umc1FacAlmStringEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2067, 1, 1, 2, 1, 3, 6, 1), ).setIndexNames((0, "UMC1000-MIB", "umc1FacAlmStringTerminalId"), (0, "UMC1000-MIB", "umc1FacAlmStringShelfId"), (0, "UMC1000-MIB", "umc1FacAlmStringSlotId"), (0, "UMC1000-MIB", "umc1FacAlmStringFacilityId"), (0, "UMC1000-MIB", "umc1FacAlmStringPluginType"))
if mibBuilder.loadTexts: umc1FacAlmStringEntry.setStatus('mandatory')
umc1FacAlmStringTerminalId = MibTableColumn((1, 3, 6, 1, 4, 1, 2067, 1, 1, 2, 1, 3, 6, 1, 1), TerminalIdType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: umc1FacAlmStringTerminalId.setStatus('mandatory')
umc1FacAlmStringShelfId = MibTableColumn((1, 3, 6, 1, 4, 1, 2067, 1, 1, 2, 1, 3, 6, 1, 2), ShelfIdType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: umc1FacAlmStringShelfId.setStatus('mandatory')
umc1FacAlmStringSlotId = MibTableColumn((1, 3, 6, 1, 4, 1, 2067, 1, 1, 2, 1, 3, 6, 1, 3), SlotIdType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: umc1FacAlmStringSlotId.setStatus('mandatory')
umc1FacAlmStringFacilityId = MibTableColumn((1, 3, 6, 1, 4, 1, 2067, 1, 1, 2, 1, 3, 6, 1, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: umc1FacAlmStringFacilityId.setStatus('mandatory')
umc1FacAlmStringPluginType = MibTableColumn((1, 3, 6, 1, 4, 1, 2067, 1, 1, 2, 1, 3, 6, 1, 5), PlugInType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: umc1FacAlmStringPluginType.setStatus('mandatory')
umc1FacAlmStringData = MibTableColumn((1, 3, 6, 1, 4, 1, 2067, 1, 1, 2, 1, 3, 6, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: umc1FacAlmStringData.setStatus('mandatory')
umc1FacAlmStringChgTable = MibTable((1, 3, 6, 1, 4, 1, 2067, 1, 1, 2, 1, 3, 7), )
if mibBuilder.loadTexts: umc1FacAlmStringChgTable.setStatus('mandatory')
umc1FacAlmStringChgEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2067, 1, 1, 2, 1, 3, 7, 1), ).setIndexNames((0, "UMC1000-MIB", "umc1FacAlmStringChgSeqNum"))
if mibBuilder.loadTexts: umc1FacAlmStringChgEntry.setStatus('mandatory')
umc1FacAlmStringChgSeqNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2067, 1, 1, 2, 1, 3, 7, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: umc1FacAlmStringChgSeqNum.setStatus('mandatory')
umc1FacAlmStringChgData = MibTableColumn((1, 3, 6, 1, 4, 1, 2067, 1, 1, 2, 1, 3, 7, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: umc1FacAlmStringChgData.setStatus('mandatory')
umc1TL1IfProvTableChangeSeqNum = MibScalar((1, 3, 6, 1, 4, 1, 2067, 1, 1, 2, 1, 3, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: umc1TL1IfProvTableChangeSeqNum.setStatus('mandatory')
umc1TL1IfProvTable = MibTable((1, 3, 6, 1, 4, 1, 2067, 1, 1, 2, 1, 3, 9), )
if mibBuilder.loadTexts: umc1TL1IfProvTable.setStatus('mandatory')
umc1TL1IfProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2067, 1, 1, 2, 1, 3, 9, 1), ).setIndexNames((0, "UMC1000-MIB", "umc1TL1IfProvTerminalId"), (0, "UMC1000-MIB", "umc1TL1IfProvShelfId"), (0, "UMC1000-MIB", "umc1TL1IfProvSlotId"), (0, "UMC1000-MIB", "umc1TL1IfProvInterfaceId"))
if mibBuilder.loadTexts: umc1TL1IfProvEntry.setStatus('mandatory')
umc1TL1IfProvTerminalId = MibTableColumn((1, 3, 6, 1, 4, 1, 2067, 1, 1, 2, 1, 3, 9, 1, 1), TerminalIdType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: umc1TL1IfProvTerminalId.setStatus('mandatory')
umc1TL1IfProvShelfId = MibTableColumn((1, 3, 6, 1, 4, 1, 2067, 1, 1, 2, 1, 3, 9, 1, 2), ShelfIdType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: umc1TL1IfProvShelfId.setStatus('mandatory')
umc1TL1IfProvSlotId = MibTableColumn((1, 3, 6, 1, 4, 1, 2067, 1, 1, 2, 1, 3, 9, 1, 3), SlotIdType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: umc1TL1IfProvSlotId.setStatus('mandatory')
umc1TL1IfProvInterfaceId = MibTableColumn((1, 3, 6, 1, 4, 1, 2067, 1, 1, 2, 1, 3, 9, 1, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: umc1TL1IfProvInterfaceId.setStatus('mandatory')
umc1TL1IfProvPluginType = MibTableColumn((1, 3, 6, 1, 4, 1, 2067, 1, 1, 2, 1, 3, 9, 1, 5), PlugInType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: umc1TL1IfProvPluginType.setStatus('mandatory')
umc1TL1IfProvData = MibTableColumn((1, 3, 6, 1, 4, 1, 2067, 1, 1, 2, 1, 3, 9, 1, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: umc1TL1IfProvData.setStatus('mandatory')
umc1TL1IfProvChgTable = MibTable((1, 3, 6, 1, 4, 1, 2067, 1, 1, 2, 1, 3, 10), )
if mibBuilder.loadTexts: umc1TL1IfProvChgTable.setStatus('mandatory')
umc1TL1IfProvChgEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2067, 1, 1, 2, 1, 3, 10, 1), ).setIndexNames((0, "UMC1000-MIB", "umc1TL1IfProvChgSeqNum"))
if mibBuilder.loadTexts: umc1TL1IfProvChgEntry.setStatus('mandatory')
umc1TL1IfProvChgSeqNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2067, 1, 1, 2, 1, 3, 10, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: umc1TL1IfProvChgSeqNum.setStatus('mandatory')
umc1TL1IfProvChgData = MibTableColumn((1, 3, 6, 1, 4, 1, 2067, 1, 1, 2, 1, 3, 10, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: umc1TL1IfProvChgData.setStatus('mandatory')
umc1CpuSoftwareFeatures = MibScalar((1, 3, 6, 1, 4, 1, 2067, 1, 1, 2, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: umc1CpuSoftwareFeatures.setStatus('mandatory')
umc1SystemRelearnTrapSeqNum = MibScalar((1, 3, 6, 1, 4, 1, 2067, 1, 1, 2, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: umc1SystemRelearnTrapSeqNum.setStatus('mandatory')
umc1RestrictedAccess = MibScalar((1, 3, 6, 1, 4, 1, 2067, 1, 1, 2, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: umc1RestrictedAccess.setStatus('mandatory')
umc1Service = MibIdentifier((1, 3, 6, 1, 4, 1, 2067, 1, 1, 2, 1, 7))
umc1GR303Grp = MibIdentifier((1, 3, 6, 1, 4, 1, 2067, 1, 1, 2, 1, 7, 1))
umc1GR303TableChangeSeqNum = MibScalar((1, 3, 6, 1, 4, 1, 2067, 1, 1, 2, 1, 7, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: umc1GR303TableChangeSeqNum.setStatus('mandatory')
umc1GR303Table = MibTable((1, 3, 6, 1, 4, 1, 2067, 1, 1, 2, 1, 7, 1, 2), )
if mibBuilder.loadTexts: umc1GR303Table.setStatus('mandatory')
umc1GR303Entry = MibTableRow((1, 3, 6, 1, 4, 1, 2067, 1, 1, 2, 1, 7, 1, 2, 1), ).setIndexNames((0, "UMC1000-MIB", "umc1Gr303Index"))
if mibBuilder.loadTexts: umc1GR303Entry.setStatus('mandatory')
umc1Gr303Index = MibTableColumn((1, 3, 6, 1, 4, 1, 2067, 1, 1, 2, 1, 7, 1, 2, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: umc1Gr303Index.setStatus('mandatory')
umc1Gr303Data = MibTableColumn((1, 3, 6, 1, 4, 1, 2067, 1, 1, 2, 1, 7, 1, 2, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: umc1Gr303Data.setStatus('mandatory')
umc1GR303ChgTable = MibTable((1, 3, 6, 1, 4, 1, 2067, 1, 1, 2, 1, 7, 2), )
if mibBuilder.loadTexts: umc1GR303ChgTable.setStatus('mandatory')
umc1GR303ChgEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2067, 1, 1, 2, 1, 7, 2, 1), ).setIndexNames((0, "UMC1000-MIB", "umc1GR303ChgSeqNum"))
if mibBuilder.loadTexts: umc1GR303ChgEntry.setStatus('mandatory')
umc1GR303ChgSeqNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2067, 1, 1, 2, 1, 7, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: umc1GR303ChgSeqNum.setStatus('mandatory')
umc1GR303ChgData = MibTableColumn((1, 3, 6, 1, 4, 1, 2067, 1, 1, 2, 1, 7, 2, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: umc1GR303ChgData.setStatus('mandatory')
umc1TR8Grp = MibIdentifier((1, 3, 6, 1, 4, 1, 2067, 1, 1, 2, 1, 7, 3))
umc1TR8TableChangeSeqNum = MibScalar((1, 3, 6, 1, 4, 1, 2067, 1, 1, 2, 1, 7, 3, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: umc1TR8TableChangeSeqNum.setStatus('mandatory')
umc1TR8Table = MibTable((1, 3, 6, 1, 4, 1, 2067, 1, 1, 2, 1, 7, 3, 2), )
if mibBuilder.loadTexts: umc1TR8Table.setStatus('mandatory')
umc1TR8Entry = MibTableRow((1, 3, 6, 1, 4, 1, 2067, 1, 1, 2, 1, 7, 3, 2, 1), ).setIndexNames((0, "UMC1000-MIB", "umc1TR8Index"))
if mibBuilder.loadTexts: umc1TR8Entry.setStatus('mandatory')
umc1TR8Index = MibTableColumn((1, 3, 6, 1, 4, 1, 2067, 1, 1, 2, 1, 7, 3, 2, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: umc1TR8Index.setStatus('mandatory')
umc1TR8Data = MibTableColumn((1, 3, 6, 1, 4, 1, 2067, 1, 1, 2, 1, 7, 3, 2, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: umc1TR8Data.setStatus('mandatory')
umc1TR8ChgTable = MibTable((1, 3, 6, 1, 4, 1, 2067, 1, 1, 2, 1, 7, 4), )
if mibBuilder.loadTexts: umc1TR8ChgTable.setStatus('mandatory')
umc1TR8ChgEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2067, 1, 1, 2, 1, 7, 4, 1), ).setIndexNames((0, "UMC1000-MIB", "umc1TR8ChgSeqNum"))
if mibBuilder.loadTexts: umc1TR8ChgEntry.setStatus('mandatory')
umc1TR8ChgSeqNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2067, 1, 1, 2, 1, 7, 4, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: umc1TR8ChgSeqNum.setStatus('mandatory')
umc1TR8ChgData = MibTableColumn((1, 3, 6, 1, 4, 1, 2067, 1, 1, 2, 1, 7, 4, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: umc1TR8ChgData.setStatus('mandatory')
umc1V5Grp = MibIdentifier((1, 3, 6, 1, 4, 1, 2067, 1, 1, 2, 1, 7, 5))
umc1V5TableChangeSeqNum = MibScalar((1, 3, 6, 1, 4, 1, 2067, 1, 1, 2, 1, 7, 5, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: umc1V5TableChangeSeqNum.setStatus('mandatory')
umc1V5Table = MibTable((1, 3, 6, 1, 4, 1, 2067, 1, 1, 2, 1, 7, 5, 2), )
if mibBuilder.loadTexts: umc1V5Table.setStatus('mandatory')
umc1V5Entry = MibTableRow((1, 3, 6, 1, 4, 1, 2067, 1, 1, 2, 1, 7, 5, 2, 1), ).setIndexNames((0, "UMC1000-MIB", "umc1V5Index"))
if mibBuilder.loadTexts: umc1V5Entry.setStatus('mandatory')
umc1V5Index = MibTableColumn((1, 3, 6, 1, 4, 1, 2067, 1, 1, 2, 1, 7, 5, 2, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(4, 5))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: umc1V5Index.setStatus('mandatory')
umc1V5Data = MibTableColumn((1, 3, 6, 1, 4, 1, 2067, 1, 1, 2, 1, 7, 5, 2, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: umc1V5Data.setStatus('mandatory')
umc1V5ChgTable = MibTable((1, 3, 6, 1, 4, 1, 2067, 1, 1, 2, 1, 7, 6), )
if mibBuilder.loadTexts: umc1V5ChgTable.setStatus('mandatory')
umc1V5ChgEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2067, 1, 1, 2, 1, 7, 6, 1), ).setIndexNames((0, "UMC1000-MIB", "umc1V5ChgSeqNum"))
if mibBuilder.loadTexts: umc1V5ChgEntry.setStatus('mandatory')
umc1V5ChgSeqNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2067, 1, 1, 2, 1, 7, 6, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: umc1V5ChgSeqNum.setStatus('mandatory')
umc1V5ChgData = MibTableColumn((1, 3, 6, 1, 4, 1, 2067, 1, 1, 2, 1, 7, 6, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: umc1V5ChgData.setStatus('mandatory')
umc1XConnect = MibIdentifier((1, 3, 6, 1, 4, 1, 2067, 1, 1, 2, 1, 8))
umc1XCTableChangeSeqNum = MibScalar((1, 3, 6, 1, 4, 1, 2067, 1, 1, 2, 1, 8, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: umc1XCTableChangeSeqNum.setStatus('mandatory')
umc1XCTable = MibTable((1, 3, 6, 1, 4, 1, 2067, 1, 1, 2, 1, 8, 2), )
if mibBuilder.loadTexts: umc1XCTable.setStatus('mandatory')
umc1XCEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2067, 1, 1, 2, 1, 8, 2, 1), ).setIndexNames((0, "UMC1000-MIB", "umc1XCIndex"))
if mibBuilder.loadTexts: umc1XCEntry.setStatus('mandatory')
umc1XCIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2067, 1, 1, 2, 1, 8, 2, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: umc1XCIndex.setStatus('mandatory')
umc1XCData = MibTableColumn((1, 3, 6, 1, 4, 1, 2067, 1, 1, 2, 1, 8, 2, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: umc1XCData.setStatus('mandatory')
umc1XCChgTable = MibTable((1, 3, 6, 1, 4, 1, 2067, 1, 1, 2, 1, 8, 3), )
if mibBuilder.loadTexts: umc1XCChgTable.setStatus('mandatory')
umc1XCChgEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2067, 1, 1, 2, 1, 8, 3, 1), ).setIndexNames((0, "UMC1000-MIB", "umc1XCChgSeqNum"))
if mibBuilder.loadTexts: umc1XCChgEntry.setStatus('mandatory')
umc1XCChgSeqNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2067, 1, 1, 2, 1, 8, 3, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: umc1XCChgSeqNum.setStatus('mandatory')
umc1XCChgData = MibTableColumn((1, 3, 6, 1, 4, 1, 2067, 1, 1, 2, 1, 8, 3, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: umc1XCChgData.setStatus('mandatory')
umc1Security = MibIdentifier((1, 3, 6, 1, 4, 1, 2067, 1, 1, 2, 1, 17))
umc1SecurityDataTableChangeSeqNum = MibScalar((1, 3, 6, 1, 4, 1, 2067, 1, 1, 2, 1, 17, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: umc1SecurityDataTableChangeSeqNum.setStatus('mandatory')
umc1SecurityDataTable = MibTable((1, 3, 6, 1, 4, 1, 2067, 1, 1, 2, 1, 17, 2), )
if mibBuilder.loadTexts: umc1SecurityDataTable.setStatus('mandatory')
umc1SecurityDataEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2067, 1, 1, 2, 1, 17, 2, 1), ).setIndexNames((0, "UMC1000-MIB", "umc1SecurityDataTableIndex"))
if mibBuilder.loadTexts: umc1SecurityDataEntry.setStatus('mandatory')
umc1SecurityDataTableIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2067, 1, 1, 2, 1, 17, 2, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: umc1SecurityDataTableIndex.setStatus('mandatory')
umc1SecurityDataTableData = MibTableColumn((1, 3, 6, 1, 4, 1, 2067, 1, 1, 2, 1, 17, 2, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: umc1SecurityDataTableData.setStatus('mandatory')
umc1SecurityDataChgTable = MibTable((1, 3, 6, 1, 4, 1, 2067, 1, 1, 2, 1, 17, 3), )
if mibBuilder.loadTexts: umc1SecurityDataChgTable.setStatus('mandatory')
umc1SecurityDataChgEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2067, 1, 1, 2, 1, 17, 3, 1), ).setIndexNames((0, "UMC1000-MIB", "umc1SecurityDataChgSeqNum"))
if mibBuilder.loadTexts: umc1SecurityDataChgEntry.setStatus('mandatory')
umc1SecurityDataChgSeqNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2067, 1, 1, 2, 1, 17, 3, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: umc1SecurityDataChgSeqNum.setStatus('mandatory')
umc1SecurityDataChgData = MibTableColumn((1, 3, 6, 1, 4, 1, 2067, 1, 1, 2, 1, 17, 3, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: umc1SecurityDataChgData.setStatus('mandatory')
umc1TerminalSpanTableChangeSeqNum = MibScalar((1, 3, 6, 1, 4, 1, 2067, 1, 1, 2, 6, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: umc1TerminalSpanTableChangeSeqNum.setStatus('mandatory')
umc1TerminalSpanTable = MibTable((1, 3, 6, 1, 4, 1, 2067, 1, 1, 2, 6, 2), )
if mibBuilder.loadTexts: umc1TerminalSpanTable.setStatus('mandatory')
umc1TerminalSpanTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2067, 1, 1, 2, 6, 2, 1), ).setIndexNames((0, "UMC1000-MIB", "umc1TermSpanNearEndTerminalId"), (0, "UMC1000-MIB", "umc1TermSpanNearEndShelfId"), (0, "UMC1000-MIB", "umc1TermSpanNearEndSlotId"))
if mibBuilder.loadTexts: umc1TerminalSpanTableEntry.setStatus('mandatory')
umc1TermSpanNearEndTerminalId = MibTableColumn((1, 3, 6, 1, 4, 1, 2067, 1, 1, 2, 6, 2, 1, 1), TerminalIdType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: umc1TermSpanNearEndTerminalId.setStatus('mandatory')
umc1TermSpanNearEndShelfId = MibTableColumn((1, 3, 6, 1, 4, 1, 2067, 1, 1, 2, 6, 2, 1, 2), ShelfIdType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: umc1TermSpanNearEndShelfId.setStatus('mandatory')
umc1TermSpanNearEndSlotId = MibTableColumn((1, 3, 6, 1, 4, 1, 2067, 1, 1, 2, 6, 2, 1, 3), SlotIdType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: umc1TermSpanNearEndSlotId.setStatus('mandatory')
umc1TermSpanNearEndPitType = MibTableColumn((1, 3, 6, 1, 4, 1, 2067, 1, 1, 2, 6, 2, 1, 4), PlugInType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: umc1TermSpanNearEndPitType.setStatus('mandatory')
umc1TermSpanFarEndTerminalId = MibTableColumn((1, 3, 6, 1, 4, 1, 2067, 1, 1, 2, 6, 2, 1, 5), TerminalIdType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: umc1TermSpanFarEndTerminalId.setStatus('mandatory')
umc1TermSpanFarEndShelfId = MibTableColumn((1, 3, 6, 1, 4, 1, 2067, 1, 1, 2, 6, 2, 1, 6), ShelfIdType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: umc1TermSpanFarEndShelfId.setStatus('mandatory')
umc1TermSpanFarEndSlotId = MibTableColumn((1, 3, 6, 1, 4, 1, 2067, 1, 1, 2, 6, 2, 1, 7), SlotIdType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: umc1TermSpanFarEndSlotId.setStatus('mandatory')
umc1TerminalSpanTableChangeHistoryTable = MibTable((1, 3, 6, 1, 4, 1, 2067, 1, 1, 2, 6, 3), )
if mibBuilder.loadTexts: umc1TerminalSpanTableChangeHistoryTable.setStatus('mandatory')
umc1TerminalSpanTableChangeHistoryEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2067, 1, 1, 2, 6, 3, 1), ).setIndexNames((0, "UMC1000-MIB", "umc1TerminalSpanTableChangeHistoryIndex"))
if mibBuilder.loadTexts: umc1TerminalSpanTableChangeHistoryEntry.setStatus('mandatory')
umc1TerminalSpanTableChangeHistoryIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2067, 1, 1, 2, 6, 3, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: umc1TerminalSpanTableChangeHistoryIndex.setStatus('mandatory')
umc1TerminalSpanTableChangeHistoryData = MibTableColumn((1, 3, 6, 1, 4, 1, 2067, 1, 1, 2, 6, 3, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: umc1TerminalSpanTableChangeHistoryData.setStatus('mandatory')
umc1ShelfSpanTableChangeSeqNum = MibScalar((1, 3, 6, 1, 4, 1, 2067, 1, 1, 2, 6, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: umc1ShelfSpanTableChangeSeqNum.setStatus('mandatory')
umc1ShelfSpanTable = MibTable((1, 3, 6, 1, 4, 1, 2067, 1, 1, 2, 6, 5), )
if mibBuilder.loadTexts: umc1ShelfSpanTable.setStatus('mandatory')
umc1ShelfSpanTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2067, 1, 1, 2, 6, 5, 1), ).setIndexNames((0, "UMC1000-MIB", "umc1ShelfSpanNearEndTerminalId"), (0, "UMC1000-MIB", "umc1ShelfSpanNearEndShelfId"), (0, "UMC1000-MIB", "umc1ShelfSpanNearEndSlotId"))
if mibBuilder.loadTexts: umc1ShelfSpanTableEntry.setStatus('mandatory')
umc1ShelfSpanNearEndTerminalId = MibTableColumn((1, 3, 6, 1, 4, 1, 2067, 1, 1, 2, 6, 5, 1, 1), TerminalIdType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: umc1ShelfSpanNearEndTerminalId.setStatus('mandatory')
umc1ShelfSpanNearEndShelfId = MibTableColumn((1, 3, 6, 1, 4, 1, 2067, 1, 1, 2, 6, 5, 1, 2), ShelfIdType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: umc1ShelfSpanNearEndShelfId.setStatus('mandatory')
umc1ShelfSpanNearEndSlotId = MibTableColumn((1, 3, 6, 1, 4, 1, 2067, 1, 1, 2, 6, 5, 1, 3), SlotIdType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: umc1ShelfSpanNearEndSlotId.setStatus('mandatory')
umc1ShelfSpanNearEndPitType = MibTableColumn((1, 3, 6, 1, 4, 1, 2067, 1, 1, 2, 6, 5, 1, 4), PlugInType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: umc1ShelfSpanNearEndPitType.setStatus('mandatory')
umc1ShelfSpanFarEndShelfId = MibTableColumn((1, 3, 6, 1, 4, 1, 2067, 1, 1, 2, 6, 5, 1, 5), ShelfIdType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: umc1ShelfSpanFarEndShelfId.setStatus('mandatory')
umc1ShelfSpanFarEndSlotId = MibTableColumn((1, 3, 6, 1, 4, 1, 2067, 1, 1, 2, 6, 5, 1, 6), SlotIdType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: umc1ShelfSpanFarEndSlotId.setStatus('mandatory')
umc1ShelfSpanFarEndPitType = MibTableColumn((1, 3, 6, 1, 4, 1, 2067, 1, 1, 2, 6, 5, 1, 7), PlugInType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: umc1ShelfSpanFarEndPitType.setStatus('mandatory')
umc1ShelfSpanTableChangeHistoryTable = MibTable((1, 3, 6, 1, 4, 1, 2067, 1, 1, 2, 6, 6), )
if mibBuilder.loadTexts: umc1ShelfSpanTableChangeHistoryTable.setStatus('mandatory')
umc1ShelfSpanTableChangeHistoryEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2067, 1, 1, 2, 6, 6, 1), ).setIndexNames((0, "UMC1000-MIB", "umc1ShelfSpanTableChangeHistoryIndex"))
if mibBuilder.loadTexts: umc1ShelfSpanTableChangeHistoryEntry.setStatus('mandatory')
umc1ShelfSpanTableChangeHistoryIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2067, 1, 1, 2, 6, 6, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: umc1ShelfSpanTableChangeHistoryIndex.setStatus('mandatory')
umc1ShelfSpanTableChangeHistoryData = MibTableColumn((1, 3, 6, 1, 4, 1, 2067, 1, 1, 2, 6, 6, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: umc1ShelfSpanTableChangeHistoryData.setStatus('mandatory')
umc1TerminalStatusChangeSeqNum = MibScalar((1, 3, 6, 1, 4, 1, 2067, 1, 1, 2, 3, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: umc1TerminalStatusChangeSeqNum.setStatus('mandatory')
umc1TerminalStatusTable = MibTable((1, 3, 6, 1, 4, 1, 2067, 1, 1, 2, 3, 2), )
if mibBuilder.loadTexts: umc1TerminalStatusTable.setStatus('mandatory')
umc1TerminalStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2067, 1, 1, 2, 3, 2, 1), ).setIndexNames((0, "UMC1000-MIB", "umc1TerminalStatusTerminalId"))
if mibBuilder.loadTexts: umc1TerminalStatusEntry.setStatus('mandatory')
umc1TerminalStatusTerminalId = MibTableColumn((1, 3, 6, 1, 4, 1, 2067, 1, 1, 2, 3, 2, 1, 1), TerminalIdType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: umc1TerminalStatusTerminalId.setStatus('mandatory')
umc1TerminalStatusValue = MibTableColumn((1, 3, 6, 1, 4, 1, 2067, 1, 1, 2, 3, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 255))).clone(namedValues=NamedValues(("normal", 1), ("minor", 2), ("major", 3), ("critical", 4), ("unreachable", 255)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: umc1TerminalStatusValue.setStatus('mandatory')
umc1TerminalInfoChangeSeqNum = MibScalar((1, 3, 6, 1, 4, 1, 2067, 1, 1, 2, 3, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: umc1TerminalInfoChangeSeqNum.setStatus('mandatory')
umc1TerminalInfoTable = MibTable((1, 3, 6, 1, 4, 1, 2067, 1, 1, 2, 3, 4), )
if mibBuilder.loadTexts: umc1TerminalInfoTable.setStatus('mandatory')
umc1TerminalInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2067, 1, 1, 2, 3, 4, 1), ).setIndexNames((0, "UMC1000-MIB", "umc1TerminalInfoTerminalId"))
if mibBuilder.loadTexts: umc1TerminalInfoEntry.setStatus('mandatory')
umc1TerminalInfoTerminalId = MibTableColumn((1, 3, 6, 1, 4, 1, 2067, 1, 1, 2, 3, 4, 1, 1), TerminalIdType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: umc1TerminalInfoTerminalId.setStatus('mandatory')
umc1TerminalInfoName = MibTableColumn((1, 3, 6, 1, 4, 1, 2067, 1, 1, 2, 3, 4, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 20))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: umc1TerminalInfoName.setStatus('mandatory')
umc1TerminalInfoSerialDeviceType = MibTableColumn((1, 3, 6, 1, 4, 1, 2067, 1, 1, 2, 3, 4, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 255))).clone(namedValues=NamedValues(("modem", 1), ("other", 255)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: umc1TerminalInfoSerialDeviceType.setStatus('mandatory')
umc1TerminalInfoBaudRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2067, 1, 1, 2, 3, 4, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 255))).clone(namedValues=NamedValues(("autobaud", 1), ("baud1200", 2), ("baud2400", 3), ("baud9600", 4), ("other", 255)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: umc1TerminalInfoBaudRate.setStatus('mandatory')
umc1TerminalInfoNewTerminalId = MibTableColumn((1, 3, 6, 1, 4, 1, 2067, 1, 1, 2, 3, 4, 1, 5), TerminalIdType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: umc1TerminalInfoNewTerminalId.setStatus('mandatory')
umc1AlmSeqTableChangeSeqNum = MibScalar((1, 3, 6, 1, 4, 1, 2067, 1, 1, 2, 8, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: umc1AlmSeqTableChangeSeqNum.setStatus('mandatory')
umc1AlmSeqTable = MibTable((1, 3, 6, 1, 4, 1, 2067, 1, 1, 2, 8, 2), )
if mibBuilder.loadTexts: umc1AlmSeqTable.setStatus('mandatory')
umc1AlmSeqEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2067, 1, 1, 2, 8, 2, 1), ).setIndexNames((0, "UMC1000-MIB", "umc1AlmSeqTerminalId"))
if mibBuilder.loadTexts: umc1AlmSeqEntry.setStatus('mandatory')
umc1AlmSeqTerminalId = MibTableColumn((1, 3, 6, 1, 4, 1, 2067, 1, 1, 2, 8, 2, 1, 1), TerminalIdType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: umc1AlmSeqTerminalId.setStatus('mandatory')
umc1AlmSeqNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2067, 1, 1, 2, 8, 2, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: umc1AlmSeqNumber.setStatus('mandatory')
umc1CurAlmTable = MibTable((1, 3, 6, 1, 4, 1, 2067, 1, 1, 2, 8, 3), )
if mibBuilder.loadTexts: umc1CurAlmTable.setStatus('mandatory')
umc1CurAlmEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2067, 1, 1, 2, 8, 3, 1), ).setIndexNames((0, "UMC1000-MIB", "umc1CurAlmTerminalId"), (0, "UMC1000-MIB", "umc1CurAlmOccurrenceIndex"))
if mibBuilder.loadTexts: umc1CurAlmEntry.setStatus('mandatory')
umc1CurAlmTerminalId = MibTableColumn((1, 3, 6, 1, 4, 1, 2067, 1, 1, 2, 8, 3, 1, 1), TerminalIdType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: umc1CurAlmTerminalId.setStatus('mandatory')
umc1CurAlmOccurrenceIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2067, 1, 1, 2, 8, 3, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(8, 8)).setFixedLength(8)).setMaxAccess("readonly")
if mibBuilder.loadTexts: umc1CurAlmOccurrenceIndex.setStatus('mandatory')
umc1CurAlmTL1Message = MibTableColumn((1, 3, 6, 1, 4, 1, 2067, 1, 1, 2, 8, 3, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: umc1CurAlmTL1Message.setStatus('mandatory')
umc1CurAlmDetails = MibTableColumn((1, 3, 6, 1, 4, 1, 2067, 1, 1, 2, 8, 3, 1, 4), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: umc1CurAlmDetails.setStatus('mandatory')
umc1Snmp = MibIdentifier((1, 3, 6, 1, 4, 1, 2067, 1, 1, 2, 9, 1))
umc1SnmpCommName = MibScalar((1, 3, 6, 1, 4, 1, 2067, 1, 1, 2, 9, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 8))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: umc1SnmpCommName.setStatus('mandatory')
umc1SnmpTrapTypesEnabled = MibScalar((1, 3, 6, 1, 4, 1, 2067, 1, 1, 2, 9, 1, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: umc1SnmpTrapTypesEnabled.setStatus('mandatory')
umc1SnmpTrapRcvrAddress = MibScalar((1, 3, 6, 1, 4, 1, 2067, 1, 1, 2, 9, 1, 4), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: umc1SnmpTrapRcvrAddress.setStatus('mandatory')
umc1SnmpTrapRcvrPort = MibScalar((1, 3, 6, 1, 4, 1, 2067, 1, 1, 2, 9, 1, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: umc1SnmpTrapRcvrPort.setStatus('mandatory')
umc1SnmpMgmtHost2Address = MibScalar((1, 3, 6, 1, 4, 1, 2067, 1, 1, 2, 9, 1, 6), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: umc1SnmpMgmtHost2Address.setStatus('mandatory')
umc1SnmpMgmtHost2TrapsEnabled = MibScalar((1, 3, 6, 1, 4, 1, 2067, 1, 1, 2, 9, 1, 7), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: umc1SnmpMgmtHost2TrapsEnabled.setStatus('mandatory')
umc1SnmpMgmtHost3Address = MibScalar((1, 3, 6, 1, 4, 1, 2067, 1, 1, 2, 9, 1, 8), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: umc1SnmpMgmtHost3Address.setStatus('mandatory')
umc1SnmpMgmtHost3TrapsEnabled = MibScalar((1, 3, 6, 1, 4, 1, 2067, 1, 1, 2, 9, 1, 9), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: umc1SnmpMgmtHost3TrapsEnabled.setStatus('mandatory')
umc1SnmpTrustedHostsEnabled = MibScalar((1, 3, 6, 1, 4, 1, 2067, 1, 1, 2, 9, 1, 10), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: umc1SnmpTrustedHostsEnabled.setStatus('mandatory')
umc1SnmpTelnetPort = MibScalar((1, 3, 6, 1, 4, 1, 2067, 1, 1, 2, 9, 1, 11), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: umc1SnmpTelnetPort.setStatus('mandatory')
umc1TopologyChangeSeqNum = MibScalar((1, 3, 6, 1, 4, 1, 2067, 1, 1, 2, 10, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: umc1TopologyChangeSeqNum.setStatus('mandatory')
umc1TopologyThisTerminal = MibScalar((1, 3, 6, 1, 4, 1, 2067, 1, 1, 2, 10, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: umc1TopologyThisTerminal.setStatus('mandatory')
umc1TopologyLinkTable = MibTable((1, 3, 6, 1, 4, 1, 2067, 1, 1, 2, 10, 3), )
if mibBuilder.loadTexts: umc1TopologyLinkTable.setStatus('mandatory')
umc1TopologyLinkEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2067, 1, 1, 2, 10, 3, 1), ).setIndexNames((0, "UMC1000-MIB", "umc1TopologyLinkTerminalA"), (0, "UMC1000-MIB", "umc1TopologyLinkTerminalB"))
if mibBuilder.loadTexts: umc1TopologyLinkEntry.setStatus('mandatory')
umc1TopologyLinkTerminalA = MibTableColumn((1, 3, 6, 1, 4, 1, 2067, 1, 1, 2, 10, 3, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: umc1TopologyLinkTerminalA.setStatus('mandatory')
umc1TopologyLinkTerminalB = MibTableColumn((1, 3, 6, 1, 4, 1, 2067, 1, 1, 2, 10, 3, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: umc1TopologyLinkTerminalB.setStatus('mandatory')
umc1DsPlugInNameTable = MibTable((1, 3, 6, 1, 4, 1, 2067, 1, 1, 2, 11, 1), )
if mibBuilder.loadTexts: umc1DsPlugInNameTable.setStatus('mandatory')
umc1DsPlugInNameEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2067, 1, 1, 2, 11, 1, 1), ).setIndexNames((0, "UMC1000-MIB", "umc1DsPlugInType"))
if mibBuilder.loadTexts: umc1DsPlugInNameEntry.setStatus('mandatory')
umc1DsPlugInType = MibTableColumn((1, 3, 6, 1, 4, 1, 2067, 1, 1, 2, 11, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: umc1DsPlugInType.setStatus('mandatory')
umc1DsPlugInName = MibTableColumn((1, 3, 6, 1, 4, 1, 2067, 1, 1, 2, 11, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: umc1DsPlugInName.setStatus('mandatory')
umc1DsAlarmStringTable = MibTable((1, 3, 6, 1, 4, 1, 2067, 1, 1, 2, 11, 2), )
if mibBuilder.loadTexts: umc1DsAlarmStringTable.setStatus('mandatory')
umc1DsAlarmStringEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2067, 1, 1, 2, 11, 2, 1), ).setIndexNames((0, "UMC1000-MIB", "umc1DsAlarmFacilityNumber"))
if mibBuilder.loadTexts: umc1DsAlarmStringEntry.setStatus('mandatory')
umc1DsAlarmFacilityNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2067, 1, 1, 2, 11, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: umc1DsAlarmFacilityNumber.setStatus('mandatory')
umc1DsAlarmString = MibTableColumn((1, 3, 6, 1, 4, 1, 2067, 1, 1, 2, 11, 2, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: umc1DsAlarmString.setStatus('mandatory')
umc1SoftwareDiagMessageTimestamp = MibScalar((1, 3, 6, 1, 4, 1, 2067, 1, 1, 2, 100, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(7, 7)).setFixedLength(7)).setMaxAccess("readonly")
if mibBuilder.loadTexts: umc1SoftwareDiagMessageTimestamp.setStatus('mandatory')
umc1SoftwareDiagMessageType = MibScalar((1, 3, 6, 1, 4, 1, 2067, 1, 1, 2, 100, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(5, 5)).setFixedLength(5)).setMaxAccess("readonly")
if mibBuilder.loadTexts: umc1SoftwareDiagMessageType.setStatus('mandatory')
umc1SoftwareDiagMessageString = MibScalar((1, 3, 6, 1, 4, 1, 2067, 1, 1, 2, 100, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: umc1SoftwareDiagMessageString.setStatus('mandatory')
umc1InventoryShelfTableChangeSeqNum = MibScalar((1, 3, 6, 1, 4, 1, 2067, 1, 1, 2, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: umc1InventoryShelfTableChangeSeqNum.setStatus('mandatory')
umc1InventoryShelfTable = MibTable((1, 3, 6, 1, 4, 1, 2067, 1, 1, 2, 2, 1, 2), )
if mibBuilder.loadTexts: umc1InventoryShelfTable.setStatus('mandatory')
umc1InventoryShelfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2067, 1, 1, 2, 2, 1, 2, 1), ).setIndexNames((0, "UMC1000-MIB", "umc1InventoryShelfTerminalId"), (0, "UMC1000-MIB", "umc1InventoryShelfShelfId"))
if mibBuilder.loadTexts: umc1InventoryShelfEntry.setStatus('mandatory')
umc1InventoryShelfTerminalId = MibTableColumn((1, 3, 6, 1, 4, 1, 2067, 1, 1, 2, 2, 1, 2, 1, 1), TerminalIdType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: umc1InventoryShelfTerminalId.setStatus('mandatory')
umc1InventoryShelfShelfId = MibTableColumn((1, 3, 6, 1, 4, 1, 2067, 1, 1, 2, 2, 1, 2, 1, 2), ShelfIdType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: umc1InventoryShelfShelfId.setStatus('mandatory')
umc1InventoryShelfType = MibTableColumn((1, 3, 6, 1, 4, 1, 2067, 1, 1, 2, 2, 1, 2, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 1)).setFixedLength(1)).setMaxAccess("readonly")
if mibBuilder.loadTexts: umc1InventoryShelfType.setStatus('mandatory')
umc1InventoryShelfTableChangeHistoryTable = MibTable((1, 3, 6, 1, 4, 1, 2067, 1, 1, 2, 2, 1, 3), )
if mibBuilder.loadTexts: umc1InventoryShelfTableChangeHistoryTable.setStatus('mandatory')
umc1InventoryShelfTableChangeHistoryEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2067, 1, 1, 2, 2, 1, 3, 1), ).setIndexNames((0, "UMC1000-MIB", "umc1InventoryShelfTableChangeHistoryIndex"))
if mibBuilder.loadTexts: umc1InventoryShelfTableChangeHistoryEntry.setStatus('mandatory')
umc1InventoryShelfTableChangeHistoryIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2067, 1, 1, 2, 2, 1, 3, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: umc1InventoryShelfTableChangeHistoryIndex.setStatus('mandatory')
umc1InventoryShelfTableChangeHistoryData = MibTableColumn((1, 3, 6, 1, 4, 1, 2067, 1, 1, 2, 2, 1, 3, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: umc1InventoryShelfTableChangeHistoryData.setStatus('mandatory')
umc1InventoryShelfExtendedTable = MibTable((1, 3, 6, 1, 4, 1, 2067, 1, 1, 2, 2, 2, 1), )
if mibBuilder.loadTexts: umc1InventoryShelfExtendedTable.setStatus('mandatory')
umc1InventoryShelfExtendedEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2067, 1, 1, 2, 2, 2, 1, 1), ).setIndexNames((0, "UMC1000-MIB", "umc1InventoryShelfExtendedTerminalId"), (0, "UMC1000-MIB", "umc1InventoryShelfExtendedShelfId"))
if mibBuilder.loadTexts: umc1InventoryShelfExtendedEntry.setStatus('mandatory')
umc1InventoryShelfExtendedTerminalId = MibTableColumn((1, 3, 6, 1, 4, 1, 2067, 1, 1, 2, 2, 2, 1, 1, 1), TerminalIdType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: umc1InventoryShelfExtendedTerminalId.setStatus('mandatory')
umc1InventoryShelfExtendedShelfId = MibTableColumn((1, 3, 6, 1, 4, 1, 2067, 1, 1, 2, 2, 2, 1, 1, 2), ShelfIdType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: umc1InventoryShelfExtendedShelfId.setStatus('mandatory')
umc1InventoryShelfExtendedVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 2067, 1, 1, 2, 2, 2, 1, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(2, 2)).setFixedLength(2)).setMaxAccess("readonly")
if mibBuilder.loadTexts: umc1InventoryShelfExtendedVersion.setStatus('mandatory')
umc1InventoryShelfExtendedAssemblyNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2067, 1, 1, 2, 2, 2, 1, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(9, 9)).setFixedLength(9)).setMaxAccess("readonly")
if mibBuilder.loadTexts: umc1InventoryShelfExtendedAssemblyNumber.setStatus('mandatory')
umc1InventoryShelfExtendedSerialNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2067, 1, 1, 2, 2, 2, 1, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(11, 11)).setFixedLength(11)).setMaxAccess("readonly")
if mibBuilder.loadTexts: umc1InventoryShelfExtendedSerialNumber.setStatus('mandatory')
umc1InventoryShelfExtendedCLEICode = MibTableColumn((1, 3, 6, 1, 4, 1, 2067, 1, 1, 2, 2, 2, 1, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(10, 10)).setFixedLength(10)).setMaxAccess("readonly")
if mibBuilder.loadTexts: umc1InventoryShelfExtendedCLEICode.setStatus('mandatory')
umc1InventoryPluginTableChangeSeqNum = MibScalar((1, 3, 6, 1, 4, 1, 2067, 1, 1, 2, 2, 3, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: umc1InventoryPluginTableChangeSeqNum.setStatus('mandatory')
umc1InventoryPluginTable = MibTable((1, 3, 6, 1, 4, 1, 2067, 1, 1, 2, 2, 3, 2), )
if mibBuilder.loadTexts: umc1InventoryPluginTable.setStatus('mandatory')
umc1InventoryPluginEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2067, 1, 1, 2, 2, 3, 2, 1), ).setIndexNames((0, "UMC1000-MIB", "umc1InventoryPluginTerminalId"), (0, "UMC1000-MIB", "umc1InventoryPluginShelfId"), (0, "UMC1000-MIB", "umc1InventoryPluginSlotId"))
if mibBuilder.loadTexts: umc1InventoryPluginEntry.setStatus('mandatory')
umc1InventoryPluginTerminalId = MibTableColumn((1, 3, 6, 1, 4, 1, 2067, 1, 1, 2, 2, 3, 2, 1, 1), TerminalIdType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: umc1InventoryPluginTerminalId.setStatus('mandatory')
umc1InventoryPluginShelfId = MibTableColumn((1, 3, 6, 1, 4, 1, 2067, 1, 1, 2, 2, 3, 2, 1, 2), ShelfIdType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: umc1InventoryPluginShelfId.setStatus('mandatory')
umc1InventoryPluginSlotId = MibTableColumn((1, 3, 6, 1, 4, 1, 2067, 1, 1, 2, 2, 3, 2, 1, 3), SlotIdType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: umc1InventoryPluginSlotId.setStatus('mandatory')
umc1InventoryPluginType = MibTableColumn((1, 3, 6, 1, 4, 1, 2067, 1, 1, 2, 2, 3, 2, 1, 4), PlugInType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: umc1InventoryPluginType.setStatus('mandatory')
umc1InventoryPluginTableChangeHistoryTable = MibTable((1, 3, 6, 1, 4, 1, 2067, 1, 1, 2, 2, 3, 3), )
if mibBuilder.loadTexts: umc1InventoryPluginTableChangeHistoryTable.setStatus('mandatory')
umc1InventoryPluginTableChangeHistoryEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2067, 1, 1, 2, 2, 3, 3, 1), ).setIndexNames((0, "UMC1000-MIB", "umc1InventoryPluginTableChangeHistoryIndex"))
if mibBuilder.loadTexts: umc1InventoryPluginTableChangeHistoryEntry.setStatus('mandatory')
umc1InventoryPluginTableChangeHistoryIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2067, 1, 1, 2, 2, 3, 3, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: umc1InventoryPluginTableChangeHistoryIndex.setStatus('mandatory')
umc1InventoryPluginTableChangeHistoryData = MibTableColumn((1, 3, 6, 1, 4, 1, 2067, 1, 1, 2, 2, 3, 3, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: umc1InventoryPluginTableChangeHistoryData.setStatus('mandatory')
umc1InventoryPluginExtendedTable = MibTable((1, 3, 6, 1, 4, 1, 2067, 1, 1, 2, 2, 4, 1), )
if mibBuilder.loadTexts: umc1InventoryPluginExtendedTable.setStatus('mandatory')
umc1InventoryPluginExtendedEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2067, 1, 1, 2, 2, 4, 1, 1), ).setIndexNames((0, "UMC1000-MIB", "umc1InventoryPluginExtendedTerminalId"), (0, "UMC1000-MIB", "umc1InventoryPluginExtendedShelfId"), (0, "UMC1000-MIB", "umc1InventoryPluginExtendedSlotId"))
if mibBuilder.loadTexts: umc1InventoryPluginExtendedEntry.setStatus('mandatory')
umc1InventoryPluginExtendedTerminalId = MibTableColumn((1, 3, 6, 1, 4, 1, 2067, 1, 1, 2, 2, 4, 1, 1, 1), TerminalIdType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: umc1InventoryPluginExtendedTerminalId.setStatus('mandatory')
umc1InventoryPluginExtendedShelfId = MibTableColumn((1, 3, 6, 1, 4, 1, 2067, 1, 1, 2, 2, 4, 1, 1, 2), ShelfIdType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: umc1InventoryPluginExtendedShelfId.setStatus('mandatory')
umc1InventoryPluginExtendedSlotId = MibTableColumn((1, 3, 6, 1, 4, 1, 2067, 1, 1, 2, 2, 4, 1, 1, 3), SlotIdType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: umc1InventoryPluginExtendedSlotId.setStatus('mandatory')
umc1InventoryPluginExtendedStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2067, 1, 1, 2, 2, 4, 1, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: umc1InventoryPluginExtendedStatus.setStatus('mandatory')
umc1InventoryPluginExtendedVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 2067, 1, 1, 2, 2, 4, 1, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(12, 12)).setFixedLength(12)).setMaxAccess("readonly")
if mibBuilder.loadTexts: umc1InventoryPluginExtendedVersion.setStatus('mandatory')
umc1InventoryPluginExtendedAssemblyNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2067, 1, 1, 2, 2, 4, 1, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(9, 9)).setFixedLength(9)).setMaxAccess("readonly")
if mibBuilder.loadTexts: umc1InventoryPluginExtendedAssemblyNumber.setStatus('mandatory')
umc1InventoryPluginExtendedSerialNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2067, 1, 1, 2, 2, 4, 1, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(11, 11)).setFixedLength(11)).setMaxAccess("readonly")
if mibBuilder.loadTexts: umc1InventoryPluginExtendedSerialNumber.setStatus('mandatory')
umc1InventoryPluginExtendedCLEICode = MibTableColumn((1, 3, 6, 1, 4, 1, 2067, 1, 1, 2, 2, 4, 1, 1, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(10, 10)).setFixedLength(10)).setMaxAccess("readonly")
if mibBuilder.loadTexts: umc1InventoryPluginExtendedCLEICode.setStatus('mandatory')
umc1ACOSnapTopologySeqNum = MibScalar((1, 3, 6, 1, 4, 1, 2067, 1, 1, 2, 4, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: umc1ACOSnapTopologySeqNum.setStatus('mandatory')
umc1ACOSnapTopologyLinkTable = MibTable((1, 3, 6, 1, 4, 1, 2067, 1, 1, 2, 4, 2), )
if mibBuilder.loadTexts: umc1ACOSnapTopologyLinkTable.setStatus('mandatory')
umc1ACOSnapTopologyLinkEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2067, 1, 1, 2, 4, 2, 1), ).setIndexNames((0, "UMC1000-MIB", "umc1ACOSnapTopologyLinkTerminalA"), (0, "UMC1000-MIB", "umc1ACOSnapTopologyLinkTerminalB"))
if mibBuilder.loadTexts: umc1ACOSnapTopologyLinkEntry.setStatus('mandatory')
umc1ACOSnapTopologyLinkTerminalA = MibTableColumn((1, 3, 6, 1, 4, 1, 2067, 1, 1, 2, 4, 2, 1, 1), TerminalIdType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: umc1ACOSnapTopologyLinkTerminalA.setStatus('mandatory')
umc1ACOSnapTopologyLinkTerminalB = MibTableColumn((1, 3, 6, 1, 4, 1, 2067, 1, 1, 2, 4, 2, 1, 2), TerminalIdType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: umc1ACOSnapTopologyLinkTerminalB.setStatus('mandatory')
umc1SystemAllSeqNbr = MibScalar((1, 3, 6, 1, 4, 1, 2067, 1, 1, 2, 1, 9), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: umc1SystemAllSeqNbr.setStatus('mandatory')
umc1CommandTable = MibTable((1, 3, 6, 1, 4, 1, 2067, 1, 1, 2, 5, 1), )
if mibBuilder.loadTexts: umc1CommandTable.setStatus('mandatory')
umc1CommandTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2067, 1, 1, 2, 5, 1, 1), ).setIndexNames((0, "UMC1000-MIB", "umc1CommandId"), (0, "UMC1000-MIB", "umc1CommandArg"))
if mibBuilder.loadTexts: umc1CommandTableEntry.setStatus('mandatory')
umc1CommandId = MibTableColumn((1, 3, 6, 1, 4, 1, 2067, 1, 1, 2, 5, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: umc1CommandId.setStatus('mandatory')
umc1CommandArg = MibTableColumn((1, 3, 6, 1, 4, 1, 2067, 1, 1, 2, 5, 1, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: umc1CommandArg.setStatus('mandatory')
umc1CommandTransNbr = MibTableColumn((1, 3, 6, 1, 4, 1, 2067, 1, 1, 2, 5, 1, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: umc1CommandTransNbr.setStatus('mandatory')
umc1ResponseTable = MibTable((1, 3, 6, 1, 4, 1, 2067, 1, 1, 2, 5, 2), )
if mibBuilder.loadTexts: umc1ResponseTable.setStatus('mandatory')
umc1ResponseTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2067, 1, 1, 2, 5, 2, 1), ).setIndexNames((0, "UMC1000-MIB", "umc1ResponseTransNbr"), (0, "UMC1000-MIB", "umc1ResponseSeqNbr"))
if mibBuilder.loadTexts: umc1ResponseTableEntry.setStatus('mandatory')
umc1ResponseTransNbr = MibTableColumn((1, 3, 6, 1, 4, 1, 2067, 1, 1, 2, 5, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: umc1ResponseTransNbr.setStatus('mandatory')
umc1ResponseSeqNbr = MibTableColumn((1, 3, 6, 1, 4, 1, 2067, 1, 1, 2, 5, 2, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: umc1ResponseSeqNbr.setStatus('mandatory')
umc1ResponseData = MibTableColumn((1, 3, 6, 1, 4, 1, 2067, 1, 1, 2, 5, 2, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: umc1ResponseData.setStatus('mandatory')
umc1AtmProtTableChangeSeqNum = MibScalar((1, 3, 6, 1, 4, 1, 2067, 1, 1, 2, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: umc1AtmProtTableChangeSeqNum.setStatus('mandatory')
umc1AtmProtGrpTable = MibTable((1, 3, 6, 1, 4, 1, 2067, 1, 1, 2, 1, 11), )
if mibBuilder.loadTexts: umc1AtmProtGrpTable.setStatus('mandatory')
umc1AtmProtGrpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2067, 1, 1, 2, 1, 11, 1), ).setIndexNames((0, "UMC1000-MIB", "umc1AtmProtGrpIndex"))
if mibBuilder.loadTexts: umc1AtmProtGrpEntry.setStatus('mandatory')
umc1AtmProtGrpIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2067, 1, 1, 2, 1, 11, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: umc1AtmProtGrpIndex.setStatus('mandatory')
umc1AtmProtGrpData = MibTableColumn((1, 3, 6, 1, 4, 1, 2067, 1, 1, 2, 1, 11, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: umc1AtmProtGrpData.setStatus('mandatory')
umc1AtmProtGrpChgTable = MibTable((1, 3, 6, 1, 4, 1, 2067, 1, 1, 2, 1, 12), )
if mibBuilder.loadTexts: umc1AtmProtGrpChgTable.setStatus('mandatory')
umc1AtmProtGrpChgEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2067, 1, 1, 2, 1, 12, 1), ).setIndexNames((0, "UMC1000-MIB", "umc1AtmProtGrpChgSeqNum"))
if mibBuilder.loadTexts: umc1AtmProtGrpChgEntry.setStatus('mandatory')
umc1AtmProtGrpChgSeqNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2067, 1, 1, 2, 1, 12, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: umc1AtmProtGrpChgSeqNum.setStatus('mandatory')
umc1AtmProtGrpChgData = MibTableColumn((1, 3, 6, 1, 4, 1, 2067, 1, 1, 2, 1, 12, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: umc1AtmProtGrpChgData.setStatus('mandatory')
umc1PortProfTableChangeSeqNum = MibScalar((1, 3, 6, 1, 4, 1, 2067, 1, 1, 2, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: umc1PortProfTableChangeSeqNum.setStatus('mandatory')
umc1PortProfTable = MibTable((1, 3, 6, 1, 4, 1, 2067, 1, 1, 2, 1, 14), )
if mibBuilder.loadTexts: umc1PortProfTable.setStatus('mandatory')
umc1PortProfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2067, 1, 1, 2, 1, 14, 1), ).setIndexNames((0, "UMC1000-MIB", "umc1PortProfIndex"))
if mibBuilder.loadTexts: umc1PortProfEntry.setStatus('mandatory')
umc1PortProfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2067, 1, 1, 2, 1, 14, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: umc1PortProfIndex.setStatus('mandatory')
umc1PortProfData = MibTableColumn((1, 3, 6, 1, 4, 1, 2067, 1, 1, 2, 1, 14, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: umc1PortProfData.setStatus('mandatory')
umc1PortProfChgTable = MibTable((1, 3, 6, 1, 4, 1, 2067, 1, 1, 2, 1, 15), )
if mibBuilder.loadTexts: umc1PortProfChgTable.setStatus('mandatory')
umc1PortProfChgEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2067, 1, 1, 2, 1, 15, 1), ).setIndexNames((0, "UMC1000-MIB", "umc1PortProfChgSeqNum"))
if mibBuilder.loadTexts: umc1PortProfChgEntry.setStatus('mandatory')
umc1PortProfChgSeqNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2067, 1, 1, 2, 1, 15, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: umc1PortProfChgSeqNum.setStatus('mandatory')
umc1PortProfChgData = MibTableColumn((1, 3, 6, 1, 4, 1, 2067, 1, 1, 2, 1, 15, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: umc1PortProfChgData.setStatus('mandatory')
umc1MyAgentSoftwareFeatures = MibScalar((1, 3, 6, 1, 4, 1, 2067, 1, 1, 2, 1, 16), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: umc1MyAgentSoftwareFeatures.setStatus('mandatory')
umc1SystemGenericDbProv = MibIdentifier((1, 3, 6, 1, 4, 1, 2067, 1, 1, 2, 1, 18))
umc1SystemGenericDbProvTableSeqNum = MibScalar((1, 3, 6, 1, 4, 1, 2067, 1, 1, 2, 1, 18, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: umc1SystemGenericDbProvTableSeqNum.setStatus('mandatory')
umc1SystemGenericDbProvTable = MibTable((1, 3, 6, 1, 4, 1, 2067, 1, 1, 2, 1, 18, 2), )
if mibBuilder.loadTexts: umc1SystemGenericDbProvTable.setStatus('mandatory')
umc1SystemGenericDbProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2067, 1, 1, 2, 1, 18, 2, 1), ).setIndexNames((0, "UMC1000-MIB", "umc1SystemGenericDbProvIndex"))
if mibBuilder.loadTexts: umc1SystemGenericDbProvEntry.setStatus('mandatory')
umc1SystemGenericDbProvIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2067, 1, 1, 2, 1, 18, 2, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: umc1SystemGenericDbProvIndex.setStatus('mandatory')
umc1SystemGenericDbProvData = MibTableColumn((1, 3, 6, 1, 4, 1, 2067, 1, 1, 2, 1, 18, 2, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: umc1SystemGenericDbProvData.setStatus('mandatory')
umc1SystemGenericDbProvChgTable = MibTable((1, 3, 6, 1, 4, 1, 2067, 1, 1, 2, 1, 18, 3), )
if mibBuilder.loadTexts: umc1SystemGenericDbProvChgTable.setStatus('mandatory')
umc1SystemGenericDbProvChgEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2067, 1, 1, 2, 1, 18, 3, 1), ).setIndexNames((0, "UMC1000-MIB", "umc1SystemGenericDbProvChgTableSeqNum"))
if mibBuilder.loadTexts: umc1SystemGenericDbProvChgEntry.setStatus('mandatory')
umc1SystemGenericDbProvChgTableSeqNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2067, 1, 1, 2, 1, 18, 3, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: umc1SystemGenericDbProvChgTableSeqNum.setStatus('mandatory')
umc1SystemGenericDbProvChgData = MibTableColumn((1, 3, 6, 1, 4, 1, 2067, 1, 1, 2, 1, 18, 3, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: umc1SystemGenericDbProvChgData.setStatus('mandatory')
umc1MibVersion = MibScalar((1, 3, 6, 1, 4, 1, 2067, 1, 1, 2, 1, 19), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 255)).clone(hexValue="01050003")).setMaxAccess("readonly")
if mibBuilder.loadTexts: umc1MibVersion.setStatus('mandatory')
umc1DbRecordChangeTrapHandleMask = MibScalar((1, 3, 6, 1, 4, 1, 2067, 1, 1, 2, 1, 20), OctetString().subtype(subtypeSpec=ValueSizeConstraint(3, 3)).setFixedLength(3).clone(hexValue="010100")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: umc1DbRecordChangeTrapHandleMask.setStatus('mandatory')
umc1SystemAutonomousEvent = MibIdentifier((1, 3, 6, 1, 4, 1, 2067, 1, 1, 2, 1, 21))
umc1SystemAutonomousEventSeqNum = MibScalar((1, 3, 6, 1, 4, 1, 2067, 1, 1, 2, 1, 21, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: umc1SystemAutonomousEventSeqNum.setStatus('mandatory')
umc1SystemAutonomousEventTable = MibTable((1, 3, 6, 1, 4, 1, 2067, 1, 1, 2, 1, 21, 2), )
if mibBuilder.loadTexts: umc1SystemAutonomousEventTable.setStatus('mandatory')
umc1SystemAutonomousEventTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2067, 1, 1, 2, 1, 21, 2, 1), ).setIndexNames((0, "UMC1000-MIB", "umc1SystemAutonomousEventTableSeqNum"))
if mibBuilder.loadTexts: umc1SystemAutonomousEventTableEntry.setStatus('mandatory')
umc1SystemAutonomousEventTableSeqNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2067, 1, 1, 2, 1, 21, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: umc1SystemAutonomousEventTableSeqNum.setStatus('mandatory')
umc1SystemAutonomousEventTableData = MibTableColumn((1, 3, 6, 1, 4, 1, 2067, 1, 1, 2, 1, 21, 2, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: umc1SystemAutonomousEventTableData.setStatus('mandatory')
umc1SystemTcaEvent = MibIdentifier((1, 3, 6, 1, 4, 1, 2067, 1, 1, 2, 13))
umc1SystemTCASeqNum = MibScalar((1, 3, 6, 1, 4, 1, 2067, 1, 1, 2, 13, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: umc1SystemTCASeqNum.setStatus('mandatory')
umc1SystemTCAHistoryTable = MibTable((1, 3, 6, 1, 4, 1, 2067, 1, 1, 2, 13, 2), )
if mibBuilder.loadTexts: umc1SystemTCAHistoryTable.setStatus('mandatory')
umc1SystemTCAHistoryTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2067, 1, 1, 2, 13, 2, 1), ).setIndexNames((0, "UMC1000-MIB", "umc1SystemTCAHistoryTableSeqNum"))
if mibBuilder.loadTexts: umc1SystemTCAHistoryTableEntry.setStatus('mandatory')
umc1SystemTCAHistoryTableSeqNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2067, 1, 1, 2, 13, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: umc1SystemTCAHistoryTableSeqNum.setStatus('mandatory')
umc1SystemTCAHistoryTableChgData = MibTableColumn((1, 3, 6, 1, 4, 1, 2067, 1, 1, 2, 13, 2, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: umc1SystemTCAHistoryTableChgData.setStatus('mandatory')
umc1TriggerTrapAllSeqNumbers = MibScalar((1, 3, 6, 1, 4, 1, 2067, 1, 1, 2, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: umc1TriggerTrapAllSeqNumbers.setStatus('mandatory')
umc1F5Loopback = MibIdentifier((1, 3, 6, 1, 4, 1, 2067, 1, 1, 2, 17))
umc1F5LoopbackRequestTable = MibTable((1, 3, 6, 1, 4, 1, 2067, 1, 1, 2, 17, 1), )
if mibBuilder.loadTexts: umc1F5LoopbackRequestTable.setStatus('mandatory')
umc1F5LoopbackRequestEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2067, 1, 1, 2, 17, 1, 1), ).setIndexNames((0, "UMC1000-MIB", "umc1F5LoopbackTransactionNumber"))
if mibBuilder.loadTexts: umc1F5LoopbackRequestEntry.setStatus('mandatory')
umc1F5LoopbackTransactionNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2067, 1, 1, 2, 17, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: umc1F5LoopbackTransactionNumber.setStatus('mandatory')
umc1F5LoopbackTransactionIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 2067, 1, 1, 2, 17, 1, 1, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: umc1F5LoopbackTransactionIpAddress.setStatus('mandatory')
umc1F5LoopbackTransactionIbMessage = MibTableColumn((1, 3, 6, 1, 4, 1, 2067, 1, 1, 2, 17, 1, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(36, 36)).setFixedLength(36)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: umc1F5LoopbackTransactionIbMessage.setStatus('mandatory')
umc1LoopDiagnostics = MibIdentifier((1, 3, 6, 1, 4, 1, 2067, 1, 1, 2, 18))
umc1LoopDiagnosticsRequestTable = MibTable((1, 3, 6, 1, 4, 1, 2067, 1, 1, 2, 18, 1), )
if mibBuilder.loadTexts: umc1LoopDiagnosticsRequestTable.setStatus('mandatory')
umc1LoopDiagnosticsRequestEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2067, 1, 1, 2, 18, 1, 1), ).setIndexNames((0, "UMC1000-MIB", "umc1LoopDiagnosticsRequestTransactionNumber"), (0, "UMC1000-MIB", "umc1LoopDiagnosticsRequestIpAddress"))
if mibBuilder.loadTexts: umc1LoopDiagnosticsRequestEntry.setStatus('mandatory')
umc1LoopDiagnosticsRequestTransactionNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2067, 1, 1, 2, 18, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: umc1LoopDiagnosticsRequestTransactionNumber.setStatus('mandatory')
umc1LoopDiagnosticsRequestIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 2067, 1, 1, 2, 18, 1, 1, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: umc1LoopDiagnosticsRequestIpAddress.setStatus('mandatory')
umc1LoopDiagnosticsRequestData = MibTableColumn((1, 3, 6, 1, 4, 1, 2067, 1, 1, 2, 18, 1, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(5, 5)).setFixedLength(5)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: umc1LoopDiagnosticsRequestData.setStatus('mandatory')
umc1LoopDiagnosticsResponseTable = MibTable((1, 3, 6, 1, 4, 1, 2067, 1, 1, 2, 18, 2), )
if mibBuilder.loadTexts: umc1LoopDiagnosticsResponseTable.setStatus('mandatory')
umc1LoopDiagnosticsResponseEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2067, 1, 1, 2, 18, 2, 1), ).setIndexNames((0, "UMC1000-MIB", "umc1LoopDiagnosticsResponseTransactionNumber"), (0, "UMC1000-MIB", "umc1LoopDiagnosticsResponseIpAddress"), (0, "UMC1000-MIB", "umc1LoopDiagnosticsResponseStartToneIdentifier"))
if mibBuilder.loadTexts: umc1LoopDiagnosticsResponseEntry.setStatus('mandatory')
umc1LoopDiagnosticsResponseTransactionNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2067, 1, 1, 2, 18, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: umc1LoopDiagnosticsResponseTransactionNumber.setStatus('mandatory')
umc1LoopDiagnosticsResponseIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 2067, 1, 1, 2, 18, 2, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: umc1LoopDiagnosticsResponseIpAddress.setStatus('mandatory')
umc1LoopDiagnosticsResponseStartToneIdentifier = MibTableColumn((1, 3, 6, 1, 4, 1, 2067, 1, 1, 2, 18, 2, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: umc1LoopDiagnosticsResponseStartToneIdentifier.setStatus('mandatory')
umc1LoopDiagnosticsResponseEndToneIdentifier = MibTableColumn((1, 3, 6, 1, 4, 1, 2067, 1, 1, 2, 18, 2, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: umc1LoopDiagnosticsResponseEndToneIdentifier.setStatus('mandatory')
umc1LoopDiagnosticsResponseData = MibScalar((1, 3, 6, 1, 4, 1, 2067, 1, 1, 2, 18, 2, 1, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(36, 36)).setFixedLength(36)).setMaxAccess("readonly")
if mibBuilder.loadTexts: umc1LoopDiagnosticsResponseData.setStatus('mandatory')
mibBuilder.exportSymbols("UMC1000-MIB", umc1TR8Data=umc1TR8Data, DbActionType=DbActionType, umc1FacAlmStringChgData=umc1FacAlmStringChgData, umc1TL1IfProvInterfaceId=umc1TL1IfProvInterfaceId, umc1ACOSnapTopologyLinkEntry=umc1ACOSnapTopologyLinkEntry, umc1SecurityDataTableIndex=umc1SecurityDataTableIndex, umc1ShelfSpanTableChangeHistoryIndex=umc1ShelfSpanTableChangeHistoryIndex, umc1SystemPitProvTableChangeSeqNum=umc1SystemPitProvTableChangeSeqNum, umc1InventoryPluginExtended=umc1InventoryPluginExtended, umc1TermSpanFarEndShelfId=umc1TermSpanFarEndShelfId, umc1TerminalSpanTableChangeHistoryTable=umc1TerminalSpanTableChangeHistoryTable, umc1SystemTCAHistoryTableChgData=umc1SystemTCAHistoryTableChgData, umc1InventoryShelf=umc1InventoryShelf, umc1LoopDiagnosticsResponseIpAddress=umc1LoopDiagnosticsResponseIpAddress, umc1FacAlmStringFacilityId=umc1FacAlmStringFacilityId, umc1DsAlarmStringEntry=umc1DsAlarmStringEntry, umc1Security=umc1Security, umc1ACOSnapTopologyLinkTable=umc1ACOSnapTopologyLinkTable, umc1ResponseTableEntry=umc1ResponseTableEntry, umc1RestrictedAccess=umc1RestrictedAccess, umc1SystemSysProvBerTable=umc1SystemSysProvBerTable, umc1FacAlmStringChgTable=umc1FacAlmStringChgTable, umc1DsAlarmFacilityNumber=umc1DsAlarmFacilityNumber, umc1XCTable=umc1XCTable, umc1TerminalSpanTableChangeHistoryData=umc1TerminalSpanTableChangeHistoryData, umc1SystemPitProvPit=umc1SystemPitProvPit, umc1SystemDefPitProvTable=umc1SystemDefPitProvTable, umc1TermSpanFarEndSlotId=umc1TermSpanFarEndSlotId, umc1ShelfSpanFarEndShelfId=umc1ShelfSpanFarEndShelfId, umc1V5ChgData=umc1V5ChgData, umc1InventoryPluginTerminalId=umc1InventoryPluginTerminalId, umc1SystemSysProvPsuRingVoltage=umc1SystemSysProvPsuRingVoltage, umc1ShelfSpanFarEndSlotId=umc1ShelfSpanFarEndSlotId, umc1CommandTableEntry=umc1CommandTableEntry, umc1ShelfSpanNearEndPitType=umc1ShelfSpanNearEndPitType, umc1InventoryPluginExtendedCLEICode=umc1InventoryPluginExtendedCLEICode, umc1GR303Entry=umc1GR303Entry, umc1SystemPitProvTable=umc1SystemPitProvTable, umc1TriggerTrapAllSeqNumbers=umc1TriggerTrapAllSeqNumbers, umc1SystemPitProv=umc1SystemPitProv, umc1SystemSysTimingSource=umc1SystemSysTimingSource, umc1TR8Index=umc1TR8Index, umc1CommandTransNbr=umc1CommandTransNbr, umc1SystemSysProvBerEntry=umc1SystemSysProvBerEntry, umc1SystemAutonomousEventSeqNum=umc1SystemAutonomousEventSeqNum, umc1V5Table=umc1V5Table, umc1XCChgTable=umc1XCChgTable, umc1SnmpCommName=umc1SnmpCommName, umc1InventoryShelfType=umc1InventoryShelfType, umc1TerminalSpanTableEntry=umc1TerminalSpanTableEntry, umc1TL1IfProvPluginType=umc1TL1IfProvPluginType, umc1SnmpTrustedHostsEnabled=umc1SnmpTrustedHostsEnabled, umc1ShelfSpanNearEndTerminalId=umc1ShelfSpanNearEndTerminalId, umc1InventoryShelfExtendedShelfId=umc1InventoryShelfExtendedShelfId, umc1AtmProtGrpChgTable=umc1AtmProtGrpChgTable, umc1TopologyLinkTerminalB=umc1TopologyLinkTerminalB, umc1AlmSeqTableChangeSeqNum=umc1AlmSeqTableChangeSeqNum, umc1InventoryPluginShelfId=umc1InventoryPluginShelfId, umc1SystemGenericDbProvChgData=umc1SystemGenericDbProvChgData, umc1TopologyThisTerminal=umc1TopologyThisTerminal, umc1Alarm=umc1Alarm, umc1XCChgSeqNum=umc1XCChgSeqNum, umc1SystemPitProvTerminalId=umc1SystemPitProvTerminalId, umc1LoopDiagnosticsRequestEntry=umc1LoopDiagnosticsRequestEntry, umc1SystemAllSeqNbr=umc1SystemAllSeqNbr, umc1LoopDiagnosticsResponseTransactionNumber=umc1LoopDiagnosticsResponseTransactionNumber, umc1InventoryPluginTableChangeHistoryTable=umc1InventoryPluginTableChangeHistoryTable, umc1InventoryShelfExtendedAssemblyNumber=umc1InventoryShelfExtendedAssemblyNumber, umc1AtmProtGrpChgSeqNum=umc1AtmProtGrpChgSeqNum, umc1SystemDefPitProvTerminalId=umc1SystemDefPitProvTerminalId, umc1AtmProtGrpEntry=umc1AtmProtGrpEntry, umc1System=umc1System, umc1Topology=umc1Topology, umc1V5Data=umc1V5Data, umc1InventoryPluginExtendedSlotId=umc1InventoryPluginExtendedSlotId, umc1SystemPitProvChgData=umc1SystemPitProvChgData, umc1SystemGenericDbProvTable=umc1SystemGenericDbProvTable, umc1InventoryPluginSlotId=umc1InventoryPluginSlotId, umc1AlmSeqTerminalId=umc1AlmSeqTerminalId, umc1V5ChgSeqNum=umc1V5ChgSeqNum, umc1SnmpTelnetPort=umc1SnmpTelnetPort, umc1InventoryPlugin=umc1InventoryPlugin, umc1SystemGenericDbProvData=umc1SystemGenericDbProvData, umc1ShelfSpanTableEntry=umc1ShelfSpanTableEntry, umc1F5LoopbackTransactionIpAddress=umc1F5LoopbackTransactionIpAddress, umc1TR8TableChangeSeqNum=umc1TR8TableChangeSeqNum, umc1V5TableChangeSeqNum=umc1V5TableChangeSeqNum, umc1SecurityDataChgData=umc1SecurityDataChgData, umc1DsPlugInNameTable=umc1DsPlugInNameTable, umc1SystemPitProvChgSeqNbr=umc1SystemPitProvChgSeqNbr, umc1MyAgentSoftwareFeatures=umc1MyAgentSoftwareFeatures, umc1InventoryShelfExtendedCLEICode=umc1InventoryShelfExtendedCLEICode, umc1InventoryShelfTableChangeHistoryIndex=umc1InventoryShelfTableChangeHistoryIndex, umc1ShelfSpanNearEndShelfId=umc1ShelfSpanNearEndShelfId, umc1PortProfData=umc1PortProfData, umc1SystemSysProvSystemCcsThresh=umc1SystemSysProvSystemCcsThresh, umc1SystemSysProvACOConfig=umc1SystemSysProvACOConfig, umc1ShelfSpanTableChangeSeqNum=umc1ShelfSpanTableChangeSeqNum, umc1SoftwareDiagMessageString=umc1SoftwareDiagMessageString, umc1InventoryShelfTable=umc1InventoryShelfTable, umc1ShelfSpanTableChangeHistoryData=umc1ShelfSpanTableChangeHistoryData, umc1SystemDefPitProvData=umc1SystemDefPitProvData, umc1SystemPitProvChgTable=umc1SystemPitProvChgTable, umc1Service=umc1Service, umc1FacAlmStringChgEntry=umc1FacAlmStringChgEntry, umc1SecurityDataChgEntry=umc1SecurityDataChgEntry, umc1TR8Table=umc1TR8Table, umc1AtmProtGrpChgData=umc1AtmProtGrpChgData, umc1TermSpanNearEndShelfId=umc1TermSpanNearEndShelfId, umc1CurAlmTable=umc1CurAlmTable, umc1FacAlmStringChgSeqNum=umc1FacAlmStringChgSeqNum, umc1ManagerIf=umc1ManagerIf, umc1LoopDiagnosticsRequestData=umc1LoopDiagnosticsRequestData, umc1TL1IfProvTable=umc1TL1IfProvTable, umc1SystemGenericDbProvIndex=umc1SystemGenericDbProvIndex, umc1CommandId=umc1CommandId, umc1InventoryShelfTableChangeHistoryData=umc1InventoryShelfTableChangeHistoryData, umc1SystemSysProvBerPit=umc1SystemSysProvBerPit, umc1AtmProtGrpData=umc1AtmProtGrpData, umc1SnmpMgmtHost3Address=umc1SnmpMgmtHost3Address, umc1SnmpTrapTypesEnabled=umc1SnmpTrapTypesEnabled, umc1CommandResponse=umc1CommandResponse, umc1SystemSysProvCAData=umc1SystemSysProvCAData, umc1SecurityDataEntry=umc1SecurityDataEntry, umc1ResponseTransNbr=umc1ResponseTransNbr, umc1V5Index=umc1V5Index, umc1ShelfSpanTableChangeHistoryTable=umc1ShelfSpanTableChangeHistoryTable, umc1InventoryShelfTerminalId=umc1InventoryShelfTerminalId, umc1TR8Entry=umc1TR8Entry, umc1CurAlmTL1Message=umc1CurAlmTL1Message, umc1GR303ChgTable=umc1GR303ChgTable, umc1F5Loopback=umc1F5Loopback, umc1LoopDiagnosticsResponseData=umc1LoopDiagnosticsResponseData, umc1DsAlarmString=umc1DsAlarmString, umc1TL1IfProvTableChangeSeqNum=umc1TL1IfProvTableChangeSeqNum, umc1Inventory=umc1Inventory, umc1FacAlmStringPluginType=umc1FacAlmStringPluginType, umc1PortProfIndex=umc1PortProfIndex, umc1AtmProtTableChangeSeqNum=umc1AtmProtTableChangeSeqNum, umc1TL1IfProvEntry=umc1TL1IfProvEntry, umc1SystemAutonomousEvent=umc1SystemAutonomousEvent, umc1F5LoopbackRequestTable=umc1F5LoopbackRequestTable, umc1V5ChgTable=umc1V5ChgTable, umc1TR8Grp=umc1TR8Grp, umc1SystemDefPitProvPit=umc1SystemDefPitProvPit, umc1SystemTcaEvent=umc1SystemTcaEvent, umc1PortProfChgEntry=umc1PortProfChgEntry, umc1InventoryShelfExtendedTerminalId=umc1InventoryShelfExtendedTerminalId, umc1LoopDiagnosticsResponseStartToneIdentifier=umc1LoopDiagnosticsResponseStartToneIdentifier, umc1AlmSeqEntry=umc1AlmSeqEntry, umc1TL1IfProvChgTable=umc1TL1IfProvChgTable, umc1TL1IfProvSlotId=umc1TL1IfProvSlotId, umc1TR8ChgSeqNum=umc1TR8ChgSeqNum, umc1SystemSysProv=umc1SystemSysProv, umc1TerminalStatusChangeSeqNum=umc1TerminalStatusChangeSeqNum, umc1SecurityDataChgTable=umc1SecurityDataChgTable, umc1SystemPitProvData=umc1SystemPitProvData, umc1TerminalSpanTableChangeHistoryIndex=umc1TerminalSpanTableChangeHistoryIndex, umc1TerminalInfoChangeSeqNum=umc1TerminalInfoChangeSeqNum, umc1LoopDiagnosticsResponseEndToneIdentifier=umc1LoopDiagnosticsResponseEndToneIdentifier, umc1GR303TableChangeSeqNum=umc1GR303TableChangeSeqNum, umc1GR303ChgData=umc1GR303ChgData, umc1TL1IfProvChgSeqNum=umc1TL1IfProvChgSeqNum, umc1DsAlarmStringTable=umc1DsAlarmStringTable, umc1ACOSnapTopologySeqNum=umc1ACOSnapTopologySeqNum, umc1TerminalSpanTable=umc1TerminalSpanTable, umc1InventoryPluginType=umc1InventoryPluginType, umc1InventoryShelfTableChangeHistoryEntry=umc1InventoryShelfTableChangeHistoryEntry, umc1TerminalInfoEntry=umc1TerminalInfoEntry, umc1SystemGenericDbProvChgTableSeqNum=umc1SystemGenericDbProvChgTableSeqNum, umc1SystemGenericDbProvChgTable=umc1SystemGenericDbProvChgTable, umc1SystemSysProvCAEntry=umc1SystemSysProvCAEntry, umc1CurAlmTerminalId=umc1CurAlmTerminalId, umc1CurAlmDetails=umc1CurAlmDetails, umc1TermSpanNearEndSlotId=umc1TermSpanNearEndSlotId, umc1SystemSysProvPsuPulseMeterTone=umc1SystemSysProvPsuPulseMeterTone, umc1SnmpTrapRcvrAddress=umc1SnmpTrapRcvrAddress, umc1GR303Table=umc1GR303Table, umc1SystemSysProvPsuRingFreq=umc1SystemSysProvPsuRingFreq, umc1TerminalStatusValue=umc1TerminalStatusValue, umc1SnmpTrapRcvrPort=umc1SnmpTrapRcvrPort, umc1PortProfChgData=umc1PortProfChgData, umc1ResponseData=umc1ResponseData, umc1SystemSysProvCATable=umc1SystemSysProvCATable, umc1SystemPitProvEntry=umc1SystemPitProvEntry, umc1InventoryPluginEntry=umc1InventoryPluginEntry, umc1AtmProtGrpChgEntry=umc1AtmProtGrpChgEntry, umc1SnmpMgmtHost3TrapsEnabled=umc1SnmpMgmtHost3TrapsEnabled, umc1F5LoopbackTransactionNumber=umc1F5LoopbackTransactionNumber, umc1TermSpanFarEndTerminalId=umc1TermSpanFarEndTerminalId, umc1ShelfSpanTable=umc1ShelfSpanTable, umc1SystemPitProvChgEntry=umc1SystemPitProvChgEntry, umc1SystemTCAHistoryTableSeqNum=umc1SystemTCAHistoryTableSeqNum, umc1CpuSoftwareFeatures=umc1CpuSoftwareFeatures, umc1Terminal=umc1Terminal, umc1SystemSysProvChgEntry=umc1SystemSysProvChgEntry, umc1GR303Grp=umc1GR303Grp, umc1XCTableChangeSeqNum=umc1XCTableChangeSeqNum, umc1InventoryPluginExtendedVersion=umc1InventoryPluginExtendedVersion, umc1PortProfChgTable=umc1PortProfChgTable, umc1FacAlmStringTerminalId=umc1FacAlmStringTerminalId, umc1TopologyLinkTerminalA=umc1TopologyLinkTerminalA, umc1MibVersion=umc1MibVersion, umc1SecurityDataTable=umc1SecurityDataTable, umc1Gr303Index=umc1Gr303Index, umc1AtmProtGrpIndex=umc1AtmProtGrpIndex, umc1InventoryPluginExtendedStatus=umc1InventoryPluginExtendedStatus, umc1SystemSysProvBerRedThresh=umc1SystemSysProvBerRedThresh, umc1ShelfSpanTableChangeHistoryEntry=umc1ShelfSpanTableChangeHistoryEntry, umc1DbRecordChangeTrapHandleMask=umc1DbRecordChangeTrapHandleMask, umc1SystemRelearnTrapSeqNum=umc1SystemRelearnTrapSeqNum, umc1Span=umc1Span, umc1InventoryPluginTableChangeHistoryData=umc1InventoryPluginTableChangeHistoryData, umc1XCChgEntry=umc1XCChgEntry, umc1InventoryShelfExtendedTable=umc1InventoryShelfExtendedTable, umc1LoopDiagnosticsResponseEntry=umc1LoopDiagnosticsResponseEntry, umc1DataService=umc1DataService, umc1XCEntry=umc1XCEntry, umc1TR8ChgData=umc1TR8ChgData, umc1CurAlmEntry=umc1CurAlmEntry, umc1TL1IfProvShelfId=umc1TL1IfProvShelfId, umc1SystemDefPitProvShelfId=umc1SystemDefPitProvShelfId, umc1SnmpMgmtHost2TrapsEnabled=umc1SnmpMgmtHost2TrapsEnabled, umc1TerminalSpanTableChangeSeqNum=umc1TerminalSpanTableChangeSeqNum, umc1V5Grp=umc1V5Grp, umc1FacAlmStringData=umc1FacAlmStringData, umc1XConnect=umc1XConnect, umc1TopologyLinkEntry=umc1TopologyLinkEntry, umc1InventoryPluginExtendedEntry=umc1InventoryPluginExtendedEntry, umc1TerminalInfoTable=umc1TerminalInfoTable, umc1DsPlugInName=umc1DsPlugInName, umc1CommandTable=umc1CommandTable, umc1TopologyChangeSeqNum=umc1TopologyChangeSeqNum, SlotIdType=SlotIdType, umc1FacAlmStringTable=umc1FacAlmStringTable, umc1DsPlugInType=umc1DsPlugInType, umc1SecurityDataTableChangeSeqNum=umc1SecurityDataTableChangeSeqNum, umc1SystemPitProvSlotId=umc1SystemPitProvSlotId, umc1SystemSysTemperature=umc1SystemSysTemperature, TerminalIdType=TerminalIdType, umc1XCData=umc1XCData, umc1SystemAutonomousEventTableEntry=umc1SystemAutonomousEventTableEntry, umc1ACOSnapTopologyLinkTerminalB=umc1ACOSnapTopologyLinkTerminalB, umc1LoopDiagnosticsRequestIpAddress=umc1LoopDiagnosticsRequestIpAddress, umc1InventoryPluginTable=umc1InventoryPluginTable, umc1InventoryPluginExtendedTable=umc1InventoryPluginExtendedTable, umc1SystemGenericDbProv=umc1SystemGenericDbProv, umc1SystemSysProvBerMarginData=umc1SystemSysProvBerMarginData, umc1InventoryPluginExtendedSerialNumber=umc1InventoryPluginExtendedSerialNumber, umc1GR303ChgSeqNum=umc1GR303ChgSeqNum, umc1SystemTCASeqNum=umc1SystemTCASeqNum, umc1TerminalInfoName=umc1TerminalInfoName, umc1DsPlugInNameEntry=umc1DsPlugInNameEntry, umc1InventoryShelfTableChangeSeqNum=umc1InventoryShelfTableChangeSeqNum)
mibBuilder.exportSymbols("UMC1000-MIB", umc1ResponseTable=umc1ResponseTable, umc1SystemDefPitProvEntry=umc1SystemDefPitProvEntry, umc1SystemSysProvChgData=umc1SystemSysProvChgData, umc1AtmProtGrpTable=umc1AtmProtGrpTable, ShelfIdType=ShelfIdType, umc1TermSpanNearEndPitType=umc1TermSpanNearEndPitType, umc1TerminalInfoTerminalId=umc1TerminalInfoTerminalId, umc1SnmpMgmtHost2Address=umc1SnmpMgmtHost2Address, umc1TermSpanNearEndTerminalId=umc1TermSpanNearEndTerminalId, umc1ShelfSpanFarEndPitType=umc1ShelfSpanFarEndPitType, umc1ResponseSeqNbr=umc1ResponseSeqNbr, umc1InventoryPluginExtendedTerminalId=umc1InventoryPluginExtendedTerminalId, umc1SystemTCAHistoryTableEntry=umc1SystemTCAHistoryTableEntry, umc1FacAlmStringSlotId=umc1FacAlmStringSlotId, umc1TerminalInfoNewTerminalId=umc1TerminalInfoNewTerminalId, umc1SoftwareDiagMessageTimestamp=umc1SoftwareDiagMessageTimestamp, umc1InventoryPluginTableChangeSeqNum=umc1InventoryPluginTableChangeSeqNum, umc1F5LoopbackTransactionIbMessage=umc1F5LoopbackTransactionIbMessage, umc1F5LoopbackRequestEntry=umc1F5LoopbackRequestEntry, umc1SystemTCAHistoryTable=umc1SystemTCAHistoryTable, umc1TL1IfProvChgEntry=umc1TL1IfProvChgEntry, umc1PortProfTable=umc1PortProfTable, umc1FacAlmStringEntry=umc1FacAlmStringEntry, umc1SystemGenericDbProvTableSeqNum=umc1SystemGenericDbProvTableSeqNum, umc1TerminalInfoBaudRate=umc1TerminalInfoBaudRate, V5GroupIdType=V5GroupIdType, umc1LoopDiagnosticsRequestTransactionNumber=umc1LoopDiagnosticsRequestTransactionNumber, umc1InventoryShelfExtended=umc1InventoryShelfExtended, umc1SystemPitProvShelfId=umc1SystemPitProvShelfId, umc1TL1IfProvTerminalId=umc1TL1IfProvTerminalId, umc1SystemGenericDbProvEntry=umc1SystemGenericDbProvEntry, umc1TopologyLinkTable=umc1TopologyLinkTable, umc1V5Entry=umc1V5Entry, umc1TerminalStatusTerminalId=umc1TerminalStatusTerminalId, umc1InventoryPluginTableChangeHistoryIndex=umc1InventoryPluginTableChangeHistoryIndex, umc1LoopDiagnostics=umc1LoopDiagnostics, umc1PortProfChgSeqNum=umc1PortProfChgSeqNum, umc1SystemSysProvBerMaintThresh=umc1SystemSysProvBerMaintThresh, umc1InventoryShelfExtendedEntry=umc1InventoryShelfExtendedEntry, umc1PortProfTableChangeSeqNum=umc1PortProfTableChangeSeqNum, umc1TL1IfProvData=umc1TL1IfProvData, umc1SystemAutonomousEventTableData=umc1SystemAutonomousEventTableData, umc1LoopDiagnosticsRequestTable=umc1LoopDiagnosticsRequestTable, umc1LoopDiagnosticsResponseTable=umc1LoopDiagnosticsResponseTable, umc1SystemGenericDbProvChgEntry=umc1SystemGenericDbProvChgEntry, umc1SoftwareDiagMessageType=umc1SoftwareDiagMessageType, umc1SystemDefPitProvSlotId=umc1SystemDefPitProvSlotId, umc1FacAlmStringTableChangeSeqNum=umc1FacAlmStringTableChangeSeqNum, umc1InventoryShelfExtendedSerialNumber=umc1InventoryShelfExtendedSerialNumber, DataOperation=DataOperation, umc1Snmp=umc1Snmp, umc1GR303ChgEntry=umc1GR303ChgEntry, umc1TerminalStatusTable=umc1TerminalStatusTable, umc1ACOSnapTopologyLinkTerminalA=umc1ACOSnapTopologyLinkTerminalA, umc1AlmSeqTable=umc1AlmSeqTable, umc1SecurityDataChgSeqNum=umc1SecurityDataChgSeqNum, umc1InventoryShelfShelfId=umc1InventoryShelfShelfId, umc1SystemAutonomousEventTable=umc1SystemAutonomousEventTable, umc1SecurityDataTableData=umc1SecurityDataTableData, umc1TR8ChgTable=umc1TR8ChgTable, umc1TerminalSpanTableChangeHistoryEntry=umc1TerminalSpanTableChangeHistoryEntry, umc1TerminalStatusEntry=umc1TerminalStatusEntry, umc1InventoryPluginExtendedAssemblyNumber=umc1InventoryPluginExtendedAssemblyNumber, umc1SystemAutonomousEventTableSeqNum=umc1SystemAutonomousEventTableSeqNum, umc1ACOSnapTopology=umc1ACOSnapTopology, umc1XCChgData=umc1XCChgData, umc1CurAlmOccurrenceIndex=umc1CurAlmOccurrenceIndex, umc1SystemSysProvCAIndex=umc1SystemSysProvCAIndex, umc1TR8ChgEntry=umc1TR8ChgEntry, umc1TL1IfProvChgData=umc1TL1IfProvChgData, umc1FacAlmStringShelfId=umc1FacAlmStringShelfId, umc1V5ChgEntry=umc1V5ChgEntry, PlugInType=PlugInType, umc1AlmSeqNumber=umc1AlmSeqNumber, umc1SystemSysProvTableChangeSeqNum=umc1SystemSysProvTableChangeSeqNum, umc1ShelfSpanNearEndSlotId=umc1ShelfSpanNearEndSlotId, umc1Trap=umc1Trap, umc1SystemSysProvChgSeqNbr=umc1SystemSysProvChgSeqNbr, umc1XCIndex=umc1XCIndex, umc1Gr303Data=umc1Gr303Data, umc1PortProfEntry=umc1PortProfEntry, umc1CommandArg=umc1CommandArg, umc1InventoryShelfExtendedVersion=umc1InventoryShelfExtendedVersion, umc1SystemDateTime=umc1SystemDateTime, umc1TerminalInfoSerialDeviceType=umc1TerminalInfoSerialDeviceType, umc1InventoryPluginExtendedShelfId=umc1InventoryPluginExtendedShelfId, umc1InventoryShelfTableChangeHistoryTable=umc1InventoryShelfTableChangeHistoryTable, umc1InventoryShelfEntry=umc1InventoryShelfEntry, umc1InventoryPluginTableChangeHistoryEntry=umc1InventoryPluginTableChangeHistoryEntry, umc1SystemSysProvChgTable=umc1SystemSysProvChgTable)
