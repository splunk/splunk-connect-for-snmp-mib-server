#
# PySNMP MIB module HARMONIC-INC-NSG9000-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/HARMONIC-INC-NSG9000-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:11:45 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ConstraintsUnion, ConstraintsIntersection, ValueSizeConstraint, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ConstraintsUnion", "ConstraintsIntersection", "ValueSizeConstraint", "SingleValueConstraint")
entPhysicalIndex, = mibBuilder.importSymbols("ENTITY-MIB", "entPhysicalIndex")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Bits, enterprises, Integer32, Unsigned32, iso, Counter64, MibScalar, MibTable, MibTableRow, MibTableColumn, ModuleIdentity, ObjectIdentity, IpAddress, MibIdentifier, NotificationType, Gauge32, NotificationType, Counter32, TimeTicks = mibBuilder.importSymbols("SNMPv2-SMI", "Bits", "enterprises", "Integer32", "Unsigned32", "iso", "Counter64", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ModuleIdentity", "ObjectIdentity", "IpAddress", "MibIdentifier", "NotificationType", "Gauge32", "NotificationType", "Counter32", "TimeTicks")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
harmonicInc = MibIdentifier((1, 3, 6, 1, 4, 1, 1563))
hOids = MibIdentifier((1, 3, 6, 1, 4, 1, 1563, 1))
hObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 1563, 2))
hTrapFields = MibIdentifier((1, 3, 6, 1, 4, 1, 1563, 3))
hModuleOids = MibIdentifier((1, 3, 6, 1, 4, 1, 1563, 1, 1))
hSystemOid = MibIdentifier((1, 3, 6, 1, 4, 1, 1563, 1, 1, 1))
hPlatformOid = MibIdentifier((1, 3, 6, 1, 4, 1, 1563, 1, 1, 2))
hGbePortOid = MibIdentifier((1, 3, 6, 1, 4, 1, 1563, 1, 1, 3))
hSlotOid = MibIdentifier((1, 3, 6, 1, 4, 1, 1563, 1, 1, 4))
hRfModuleOid = MibIdentifier((1, 3, 6, 1, 4, 1, 1563, 1, 1, 5))
hRfPortOid = MibIdentifier((1, 3, 6, 1, 4, 1, 1563, 1, 1, 6))
hQamChannelOid = MibIdentifier((1, 3, 6, 1, 4, 1, 1563, 1, 1, 7))
hSystem = MibIdentifier((1, 3, 6, 1, 4, 1, 1563, 2, 1))
hTrapTimeLastGenerated = MibScalar((1, 3, 6, 1, 4, 1, 1563, 2, 1, 3), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hTrapTimeLastGenerated.setStatus('mandatory')
hTrapForwardTable = MibTable((1, 3, 6, 1, 4, 1, 1563, 2, 1, 4), )
if mibBuilder.loadTexts: hTrapForwardTable.setStatus('mandatory')
hTrapForwardEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1563, 2, 1, 4, 1), ).setIndexNames((0, "HARMONIC-INC-NSG9000-MIB", "hTrapDestAddr"))
if mibBuilder.loadTexts: hTrapForwardEntry.setStatus('mandatory')
hTrapDestAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 1563, 2, 1, 4, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hTrapDestAddr.setStatus('mandatory')
hTrapDestAddrStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 1563, 2, 1, 4, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 4, 6))).clone(namedValues=NamedValues(("active", 1), ("createAndGo", 4), ("destroy", 6)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hTrapDestAddrStatus.setStatus('mandatory')
hAlarmStatus = MibIdentifier((1, 3, 6, 1, 4, 1, 1563, 3, 1))
hAlarmSeverity = MibIdentifier((1, 3, 6, 1, 4, 1, 1563, 3, 2))
hAlarmDesc = MibIdentifier((1, 3, 6, 1, 4, 1, 1563, 3, 3))
hTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 1563, 1, 2))
hPlatformTempFailTrap = NotificationType((1, 3, 6, 1, 4, 1, 1563, 1, 2) + (0,1)).setObjects(("HARMONIC-INC-NSG9000-MIB", "hAlarmStatus"), ("HARMONIC-INC-NSG9000-MIB", "hAlarmSeverity"), ("HARMONIC-INC-NSG9000-MIB", "hAlarmDesc"), ("ENTITY-MIB", "entPhysicalIndex"))
hPlatformVoltageFailTrap = NotificationType((1, 3, 6, 1, 4, 1, 1563, 1, 2) + (0,2)).setObjects(("HARMONIC-INC-NSG9000-MIB", "hAlarmStatus"), ("HARMONIC-INC-NSG9000-MIB", "hAlarmSeverity"), ("HARMONIC-INC-NSG9000-MIB", "hAlarmDesc"), ("ENTITY-MIB", "entPhysicalIndex"))
hPlatformFan1FailTrap = NotificationType((1, 3, 6, 1, 4, 1, 1563, 1, 2) + (0,3)).setObjects(("HARMONIC-INC-NSG9000-MIB", "hAlarmStatus"), ("HARMONIC-INC-NSG9000-MIB", "hAlarmSeverity"), ("HARMONIC-INC-NSG9000-MIB", "hAlarmDesc"), ("ENTITY-MIB", "entPhysicalIndex"))
hPlatformFan2FailTrap = NotificationType((1, 3, 6, 1, 4, 1, 1563, 1, 2) + (0,4)).setObjects(("HARMONIC-INC-NSG9000-MIB", "hAlarmStatus"), ("HARMONIC-INC-NSG9000-MIB", "hAlarmSeverity"), ("HARMONIC-INC-NSG9000-MIB", "hAlarmDesc"), ("ENTITY-MIB", "entPhysicalIndex"))
hPlatformFan3FailTrap = NotificationType((1, 3, 6, 1, 4, 1, 1563, 1, 2) + (0,5)).setObjects(("HARMONIC-INC-NSG9000-MIB", "hAlarmStatus"), ("HARMONIC-INC-NSG9000-MIB", "hAlarmSeverity"), ("HARMONIC-INC-NSG9000-MIB", "hAlarmDesc"), ("ENTITY-MIB", "entPhysicalIndex"))
hPlatformFan4FailTrap = NotificationType((1, 3, 6, 1, 4, 1, 1563, 1, 2) + (0,6)).setObjects(("HARMONIC-INC-NSG9000-MIB", "hAlarmStatus"), ("HARMONIC-INC-NSG9000-MIB", "hAlarmSeverity"), ("HARMONIC-INC-NSG9000-MIB", "hAlarmDesc"), ("ENTITY-MIB", "entPhysicalIndex"))
hPlatformPS1VoltageFailTrap = NotificationType((1, 3, 6, 1, 4, 1, 1563, 1, 2) + (0,7)).setObjects(("HARMONIC-INC-NSG9000-MIB", "hAlarmStatus"), ("HARMONIC-INC-NSG9000-MIB", "hAlarmSeverity"), ("HARMONIC-INC-NSG9000-MIB", "hAlarmDesc"), ("ENTITY-MIB", "entPhysicalIndex"))
hPlatformPS2VoltageFailTrap = NotificationType((1, 3, 6, 1, 4, 1, 1563, 1, 2) + (0,8)).setObjects(("HARMONIC-INC-NSG9000-MIB", "hAlarmStatus"), ("HARMONIC-INC-NSG9000-MIB", "hAlarmSeverity"), ("HARMONIC-INC-NSG9000-MIB", "hAlarmDesc"), ("ENTITY-MIB", "entPhysicalIndex"))
hPlatformR6ConnLossTrap = NotificationType((1, 3, 6, 1, 4, 1, 1563, 1, 2) + (0,9)).setObjects(("HARMONIC-INC-NSG9000-MIB", "hAlarmStatus"), ("HARMONIC-INC-NSG9000-MIB", "hAlarmSeverity"), ("HARMONIC-INC-NSG9000-MIB", "hAlarmDesc"), ("ENTITY-MIB", "entPhysicalIndex"))
hPlatformD6ConnLossTrap = NotificationType((1, 3, 6, 1, 4, 1, 1563, 1, 2) + (0,10)).setObjects(("HARMONIC-INC-NSG9000-MIB", "hAlarmStatus"), ("HARMONIC-INC-NSG9000-MIB", "hAlarmSeverity"), ("HARMONIC-INC-NSG9000-MIB", "hAlarmDesc"), ("ENTITY-MIB", "entPhysicalIndex"))
hGbePortLinkDownTrap = NotificationType((1, 3, 6, 1, 4, 1, 1563, 1, 2) + (0,11)).setObjects(("HARMONIC-INC-NSG9000-MIB", "hAlarmStatus"), ("HARMONIC-INC-NSG9000-MIB", "hAlarmSeverity"), ("HARMONIC-INC-NSG9000-MIB", "hAlarmDesc"), ("ENTITY-MIB", "entPhysicalIndex"))
hRfModuleHwFailTrap = NotificationType((1, 3, 6, 1, 4, 1, 1563, 1, 2) + (0,12)).setObjects(("HARMONIC-INC-NSG9000-MIB", "hAlarmStatus"), ("HARMONIC-INC-NSG9000-MIB", "hAlarmSeverity"), ("HARMONIC-INC-NSG9000-MIB", "hAlarmDesc"), ("ENTITY-MIB", "entPhysicalIndex"))
hRfModuleTempFailTrap = NotificationType((1, 3, 6, 1, 4, 1, 1563, 1, 2) + (0,13)).setObjects(("HARMONIC-INC-NSG9000-MIB", "hAlarmStatus"), ("HARMONIC-INC-NSG9000-MIB", "hAlarmSeverity"), ("HARMONIC-INC-NSG9000-MIB", "hAlarmDesc"), ("ENTITY-MIB", "entPhysicalIndex"))
hRfPortHwFailTrap = NotificationType((1, 3, 6, 1, 4, 1, 1563, 1, 2) + (0,14)).setObjects(("HARMONIC-INC-NSG9000-MIB", "hAlarmStatus"), ("HARMONIC-INC-NSG9000-MIB", "hAlarmSeverity"), ("HARMONIC-INC-NSG9000-MIB", "hAlarmDesc"), ("ENTITY-MIB", "entPhysicalIndex"))
hRfPortTempFailTrap = NotificationType((1, 3, 6, 1, 4, 1, 1563, 1, 2) + (0,15)).setObjects(("HARMONIC-INC-NSG9000-MIB", "hAlarmStatus"), ("HARMONIC-INC-NSG9000-MIB", "hAlarmSeverity"), ("HARMONIC-INC-NSG9000-MIB", "hAlarmDesc"), ("ENTITY-MIB", "entPhysicalIndex"))
hQamChanneOverflowTrap = NotificationType((1, 3, 6, 1, 4, 1, 1563, 1, 2) + (0,16)).setObjects(("HARMONIC-INC-NSG9000-MIB", "hAlarmStatus"), ("HARMONIC-INC-NSG9000-MIB", "hAlarmSeverity"), ("HARMONIC-INC-NSG9000-MIB", "hAlarmDesc"), ("ENTITY-MIB", "entPhysicalIndex"))
hServicePatMissing = NotificationType((1, 3, 6, 1, 4, 1, 1563, 1, 2) + (0,17)).setObjects(("HARMONIC-INC-NSG9000-MIB", "hAlarmStatus"), ("HARMONIC-INC-NSG9000-MIB", "hAlarmSeverity"), ("HARMONIC-INC-NSG9000-MIB", "hAlarmDesc"), ("ENTITY-MIB", "entPhysicalIndex"))
hServicePmtMissing = NotificationType((1, 3, 6, 1, 4, 1, 1563, 1, 2) + (0,18)).setObjects(("HARMONIC-INC-NSG9000-MIB", "hAlarmStatus"), ("HARMONIC-INC-NSG9000-MIB", "hAlarmSeverity"), ("HARMONIC-INC-NSG9000-MIB", "hAlarmDesc"), ("ENTITY-MIB", "entPhysicalIndex"))
hSwitchToAlternateSource = NotificationType((1, 3, 6, 1, 4, 1, 1563, 1, 2) + (0,19)).setObjects(("HARMONIC-INC-NSG9000-MIB", "hAlarmStatus"), ("HARMONIC-INC-NSG9000-MIB", "hAlarmSeverity"), ("HARMONIC-INC-NSG9000-MIB", "hAlarmDesc"), ("ENTITY-MIB", "entPhysicalIndex"))
hPassThroughSourceFailure = NotificationType((1, 3, 6, 1, 4, 1, 1563, 1, 2) + (0,20)).setObjects(("HARMONIC-INC-NSG9000-MIB", "hAlarmStatus"), ("HARMONIC-INC-NSG9000-MIB", "hAlarmSeverity"), ("HARMONIC-INC-NSG9000-MIB", "hAlarmDesc"), ("ENTITY-MIB", "entPhysicalIndex"))
hPidRemuxSourceFailure = NotificationType((1, 3, 6, 1, 4, 1, 1563, 1, 2) + (0,21)).setObjects(("HARMONIC-INC-NSG9000-MIB", "hAlarmStatus"), ("HARMONIC-INC-NSG9000-MIB", "hAlarmSeverity"), ("HARMONIC-INC-NSG9000-MIB", "hAlarmDesc"), ("ENTITY-MIB", "entPhysicalIndex"))
hDtiCardMissing = NotificationType((1, 3, 6, 1, 4, 1, 1563, 1, 2) + (0,22)).setObjects(("HARMONIC-INC-NSG9000-MIB", "hAlarmStatus"), ("HARMONIC-INC-NSG9000-MIB", "hAlarmSeverity"), ("HARMONIC-INC-NSG9000-MIB", "hAlarmDesc"), ("ENTITY-MIB", "entPhysicalIndex"))
hMcECMMissing = NotificationType((1, 3, 6, 1, 4, 1, 1563, 1, 2) + (0,23)).setObjects(("HARMONIC-INC-NSG9000-MIB", "hAlarmStatus"), ("HARMONIC-INC-NSG9000-MIB", "hAlarmSeverity"), ("HARMONIC-INC-NSG9000-MIB", "hAlarmDesc"), ("ENTITY-MIB", "entPhysicalIndex"))
hMcECMNearingExpiration = NotificationType((1, 3, 6, 1, 4, 1, 1563, 1, 2) + (0,24)).setObjects(("HARMONIC-INC-NSG9000-MIB", "hAlarmStatus"), ("HARMONIC-INC-NSG9000-MIB", "hAlarmSeverity"), ("HARMONIC-INC-NSG9000-MIB", "hAlarmDesc"), ("ENTITY-MIB", "entPhysicalIndex"))
hMcECMExpired = NotificationType((1, 3, 6, 1, 4, 1, 1563, 1, 2) + (0,25)).setObjects(("HARMONIC-INC-NSG9000-MIB", "hAlarmStatus"), ("HARMONIC-INC-NSG9000-MIB", "hAlarmSeverity"), ("HARMONIC-INC-NSG9000-MIB", "hAlarmDesc"), ("ENTITY-MIB", "entPhysicalIndex"))
hDtiClientLinkDown = NotificationType((1, 3, 6, 1, 4, 1, 1563, 1, 2) + (0,26)).setObjects(("HARMONIC-INC-NSG9000-MIB", "hAlarmStatus"), ("HARMONIC-INC-NSG9000-MIB", "hAlarmSeverity"), ("HARMONIC-INC-NSG9000-MIB", "hAlarmDesc"), ("ENTITY-MIB", "entPhysicalIndex"))
hDtiClientNotLocked = NotificationType((1, 3, 6, 1, 4, 1, 1563, 1, 2) + (0,27)).setObjects(("HARMONIC-INC-NSG9000-MIB", "hAlarmStatus"), ("HARMONIC-INC-NSG9000-MIB", "hAlarmSeverity"), ("HARMONIC-INC-NSG9000-MIB", "hAlarmDesc"), ("ENTITY-MIB", "entPhysicalIndex"))
mibBuilder.exportSymbols("HARMONIC-INC-NSG9000-MIB", hTrapTimeLastGenerated=hTrapTimeLastGenerated, hGbePortOid=hGbePortOid, hTrapFields=hTrapFields, hRfPortOid=hRfPortOid, hObjects=hObjects, hServicePatMissing=hServicePatMissing, hGbePortLinkDownTrap=hGbePortLinkDownTrap, hQamChannelOid=hQamChannelOid, hModuleOids=hModuleOids, hDtiClientNotLocked=hDtiClientNotLocked, hPlatformOid=hPlatformOid, hServicePmtMissing=hServicePmtMissing, hPlatformFan2FailTrap=hPlatformFan2FailTrap, hAlarmSeverity=hAlarmSeverity, hRfModuleOid=hRfModuleOid, hPlatformPS1VoltageFailTrap=hPlatformPS1VoltageFailTrap, hRfPortHwFailTrap=hRfPortHwFailTrap, hSwitchToAlternateSource=hSwitchToAlternateSource, hMcECMNearingExpiration=hMcECMNearingExpiration, hSystem=hSystem, hMcECMMissing=hMcECMMissing, hPlatformTempFailTrap=hPlatformTempFailTrap, hPlatformVoltageFailTrap=hPlatformVoltageFailTrap, harmonicInc=harmonicInc, hPlatformFan1FailTrap=hPlatformFan1FailTrap, hQamChanneOverflowTrap=hQamChanneOverflowTrap, hMcECMExpired=hMcECMExpired, hPlatformFan3FailTrap=hPlatformFan3FailTrap, hPlatformD6ConnLossTrap=hPlatformD6ConnLossTrap, hTrapDestAddrStatus=hTrapDestAddrStatus, hTrapForwardEntry=hTrapForwardEntry, hPlatformFan4FailTrap=hPlatformFan4FailTrap, hRfModuleTempFailTrap=hRfModuleTempFailTrap, hPidRemuxSourceFailure=hPidRemuxSourceFailure, hTrapForwardTable=hTrapForwardTable, hPlatformPS2VoltageFailTrap=hPlatformPS2VoltageFailTrap, hRfModuleHwFailTrap=hRfModuleHwFailTrap, hTraps=hTraps, hSlotOid=hSlotOid, hAlarmStatus=hAlarmStatus, hPlatformR6ConnLossTrap=hPlatformR6ConnLossTrap, hOids=hOids, hAlarmDesc=hAlarmDesc, hRfPortTempFailTrap=hRfPortTempFailTrap, hPassThroughSourceFailure=hPassThroughSourceFailure, hDtiCardMissing=hDtiCardMissing, hSystemOid=hSystemOid, hTrapDestAddr=hTrapDestAddr, hDtiClientLinkDown=hDtiClientLinkDown)
