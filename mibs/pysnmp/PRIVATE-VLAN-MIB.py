#
# PySNMP MIB module PRIVATE-VLAN-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/PRIVATE-VLAN-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 20:33:21 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ConstraintsUnion, SingleValueConstraint, ValueSizeConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ConstraintsUnion", "SingleValueConstraint", "ValueSizeConstraint", "ConstraintsIntersection")
dlink_common_mgmt, = mibBuilder.importSymbols("DLINK-ID-REC-MIB", "dlink-common-mgmt")
VlanIdOrNone, VlanId, PortList = mibBuilder.importSymbols("Q-BRIDGE-MIB", "VlanIdOrNone", "VlanId", "PortList")
ModuleCompliance, ObjectGroup, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "ObjectGroup", "NotificationGroup")
Unsigned32, Counter64, ObjectIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, Gauge32, MibIdentifier, ModuleIdentity, iso, TimeTicks, NotificationType, Bits, IpAddress, Integer32, Counter32 = mibBuilder.importSymbols("SNMPv2-SMI", "Unsigned32", "Counter64", "ObjectIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Gauge32", "MibIdentifier", "ModuleIdentity", "iso", "TimeTicks", "NotificationType", "Bits", "IpAddress", "Integer32", "Counter32")
TextualConvention, RowStatus, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "RowStatus", "DisplayString")
swPrivateVLANMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 171, 12, 69))
if mibBuilder.loadTexts: swPrivateVLANMIB.setLastUpdated('200808110000Z')
if mibBuilder.loadTexts: swPrivateVLANMIB.setOrganization('D-Link Corp.')
class SecondaryVlanType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("isolated", 1), ("community", 2))

swPrivateVlanCtrl = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 12, 69, 1))
swPrivateVlanInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 12, 69, 2))
swPrivateVlanMgmt = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 12, 69, 3))
swPrivateVlanTable = MibTable((1, 3, 6, 1, 4, 1, 171, 12, 69, 3, 1), )
if mibBuilder.loadTexts: swPrivateVlanTable.setStatus('current')
swPrivateVlanEntry = MibTableRow((1, 3, 6, 1, 4, 1, 171, 12, 69, 3, 1, 1), ).setIndexNames((0, "PRIVATE-VLAN-MIB", "swPrivateVlanId"))
if mibBuilder.loadTexts: swPrivateVlanEntry.setStatus('current')
swPrivateVlanId = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 69, 3, 1, 1, 1), VlanId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: swPrivateVlanId.setStatus('current')
swPrivateVlanName = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 69, 3, 1, 1, 2), DisplayString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: swPrivateVlanName.setStatus('current')
swPrivateVlanPromiscuousPorts = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 69, 3, 1, 1, 3), PortList()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swPrivateVlanPromiscuousPorts.setStatus('current')
swPrivateVlanTrunkPorts = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 69, 3, 1, 1, 4), PortList()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swPrivateVlanTrunkPorts.setStatus('current')
swPrivateVlanRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 69, 3, 1, 1, 5), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: swPrivateVlanRowStatus.setStatus('current')
swSecondaryVlanTable = MibTable((1, 3, 6, 1, 4, 1, 171, 12, 69, 3, 2), )
if mibBuilder.loadTexts: swSecondaryVlanTable.setStatus('current')
swSecondaryVlanEntry = MibTableRow((1, 3, 6, 1, 4, 1, 171, 12, 69, 3, 2, 1), ).setIndexNames((0, "PRIVATE-VLAN-MIB", "swPrivateVlanId"), (0, "PRIVATE-VLAN-MIB", "swSecondaryVlanId"))
if mibBuilder.loadTexts: swSecondaryVlanEntry.setStatus('current')
swSecondaryVlanId = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 69, 3, 2, 1, 1), VlanId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: swSecondaryVlanId.setStatus('current')
swSecondaryVlanType = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 69, 3, 2, 1, 2), SecondaryVlanType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: swSecondaryVlanType.setStatus('current')
swSecondaryVlanPorts = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 69, 3, 2, 1, 3), PortList()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swSecondaryVlanPorts.setStatus('current')
swSecondaryVlanRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 69, 3, 2, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: swSecondaryVlanRowStatus.setStatus('current')
mibBuilder.exportSymbols("PRIVATE-VLAN-MIB", swSecondaryVlanRowStatus=swSecondaryVlanRowStatus, swSecondaryVlanPorts=swSecondaryVlanPorts, swSecondaryVlanEntry=swSecondaryVlanEntry, swSecondaryVlanId=swSecondaryVlanId, swPrivateVlanTrunkPorts=swPrivateVlanTrunkPorts, swSecondaryVlanTable=swSecondaryVlanTable, swPrivateVlanId=swPrivateVlanId, swPrivateVlanTable=swPrivateVlanTable, swSecondaryVlanType=swSecondaryVlanType, swPrivateVlanPromiscuousPorts=swPrivateVlanPromiscuousPorts, PYSNMP_MODULE_ID=swPrivateVLANMIB, SecondaryVlanType=SecondaryVlanType, swPrivateVlanCtrl=swPrivateVlanCtrl, swPrivateVlanName=swPrivateVlanName, swPrivateVlanMgmt=swPrivateVlanMgmt, swPrivateVlanRowStatus=swPrivateVlanRowStatus, swPrivateVlanInfo=swPrivateVlanInfo, swPrivateVLANMIB=swPrivateVLANMIB, swPrivateVlanEntry=swPrivateVlanEntry)
