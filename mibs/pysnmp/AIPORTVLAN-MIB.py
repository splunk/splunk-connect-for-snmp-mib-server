#
# PySNMP MIB module AIPORTVLAN-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/AIPORTVLAN-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:00:41 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
PositiveInteger, = mibBuilder.importSymbols("AISYSTEM-MIB", "PositiveInteger")
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, SingleValueConstraint, ConstraintsIntersection, ValueSizeConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "SingleValueConstraint", "ConstraintsIntersection", "ValueSizeConstraint", "ConstraintsUnion")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
TimeTicks, iso, ObjectIdentity, enterprises, Gauge32, IpAddress, Unsigned32, ModuleIdentity, Integer32, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter64, MibIdentifier, NotificationType, Counter32, Bits = mibBuilder.importSymbols("SNMPv2-SMI", "TimeTicks", "iso", "ObjectIdentity", "enterprises", "Gauge32", "IpAddress", "Unsigned32", "ModuleIdentity", "Integer32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter64", "MibIdentifier", "NotificationType", "Counter32", "Bits")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
aii = MibIdentifier((1, 3, 6, 1, 4, 1, 539))
aiSystemOID = MibIdentifier((1, 3, 6, 1, 4, 1, 539, 2))
aiPortVlan = ModuleIdentity((1, 3, 6, 1, 4, 1, 539, 29))
if mibBuilder.loadTexts: aiPortVlan.setLastUpdated('980803164411Z')
if mibBuilder.loadTexts: aiPortVlan.setOrganization('Applied Innovation Incorporated')
aiPortVlanCnf = MibIdentifier((1, 3, 6, 1, 4, 1, 539, 29, 1))
portVlanCnfTable = MibTable((1, 3, 6, 1, 4, 1, 539, 29, 1, 1), )
if mibBuilder.loadTexts: portVlanCnfTable.setStatus('current')
portVlanCnfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 539, 29, 1, 1, 1), ).setIndexNames((0, "AIPORTVLAN-MIB", "portVlanIndex"))
if mibBuilder.loadTexts: portVlanCnfEntry.setStatus('current')
portVlanIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 539, 29, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1024))).setMaxAccess("readonly")
if mibBuilder.loadTexts: portVlanIndex.setStatus('current')
portVlanName = MibTableColumn((1, 3, 6, 1, 4, 1, 539, 29, 1, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 30))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: portVlanName.setStatus('current')
portVlanOverlap = MibTableColumn((1, 3, 6, 1, 4, 1, 539, 29, 1, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: portVlanOverlap.setStatus('current')
portVlanMembershipTable = MibTable((1, 3, 6, 1, 4, 1, 539, 29, 1, 2), )
if mibBuilder.loadTexts: portVlanMembershipTable.setStatus('current')
portVlanMembershipEntry = MibTableRow((1, 3, 6, 1, 4, 1, 539, 29, 1, 2, 1), ).setIndexNames((0, "AIPORTVLAN-MIB", "portVlanMembershipVlanIndex"), (0, "AIPORTVLAN-MIB", "portVlanMembershipPortIndex"))
if mibBuilder.loadTexts: portVlanMembershipEntry.setStatus('current')
portVlanMembershipVlanIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 539, 29, 1, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1024))).setMaxAccess("readonly")
if mibBuilder.loadTexts: portVlanMembershipVlanIndex.setStatus('current')
portVlanMembershipPortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 539, 29, 1, 2, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1024))).setMaxAccess("readonly")
if mibBuilder.loadTexts: portVlanMembershipPortIndex.setStatus('current')
portVlanMembershipStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 539, 29, 1, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("member", 1), ("nonmember", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: portVlanMembershipStatus.setStatus('current')
mibBuilder.exportSymbols("AIPORTVLAN-MIB", portVlanCnfEntry=portVlanCnfEntry, aiPortVlanCnf=aiPortVlanCnf, aii=aii, aiPortVlan=aiPortVlan, portVlanOverlap=portVlanOverlap, aiSystemOID=aiSystemOID, portVlanIndex=portVlanIndex, portVlanMembershipStatus=portVlanMembershipStatus, portVlanMembershipEntry=portVlanMembershipEntry, portVlanCnfTable=portVlanCnfTable, portVlanName=portVlanName, portVlanMembershipTable=portVlanMembershipTable, portVlanMembershipPortIndex=portVlanMembershipPortIndex, portVlanMembershipVlanIndex=portVlanMembershipVlanIndex, PYSNMP_MODULE_ID=aiPortVlan)
