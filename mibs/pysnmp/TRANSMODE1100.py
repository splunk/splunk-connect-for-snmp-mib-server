#
# PySNMP MIB module TRANSMODE1100 (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/TRANSMODE1100
# Produced by pysmi-0.3.4 at Mon Apr 29 21:19:37 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ValueRangeConstraint, SingleValueConstraint, ConstraintsIntersection, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ValueRangeConstraint", "SingleValueConstraint", "ConstraintsIntersection", "ConstraintsUnion")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
NotificationType, Gauge32, IpAddress, enterprises, ObjectIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, TimeTicks, Counter64, ModuleIdentity, Bits, Integer32, MibIdentifier, Counter32, Unsigned32, iso = mibBuilder.importSymbols("SNMPv2-SMI", "NotificationType", "Gauge32", "IpAddress", "enterprises", "ObjectIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "TimeTicks", "Counter64", "ModuleIdentity", "Bits", "Integer32", "MibIdentifier", "Counter32", "Unsigned32", "iso")
TextualConvention, DisplayString, DateAndTime = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString", "DateAndTime")
transmode = ModuleIdentity((1, 3, 6, 1, 4, 1, 11857))
transmode.setRevisions(('2003-10-06 11:00', '2003-05-13 16:30', '2003-05-13 16:30', '2003-04-04 11:30', '2003-03-26 15:40', '2003-02-20 13:10', '2002-11-27 14:45', '2002-11-18 16:35', '2002-11-05 15:20', '2002-10-30 17:05', '2002-10-23 16:05', '2002-09-30 13:57',))
if mibBuilder.loadTexts: transmode.setLastUpdated('200310061100Z')
if mibBuilder.loadTexts: transmode.setOrganization('Transmode Systems AB')
class AlarmClass(TextualConvention, Integer32):
    status = 'current'
    displayHint = ''
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5))
    namedValues = NamedValues(("unknown", 0), ("communications", 1), ("qos", 2), ("processing", 3), ("equipment", 4), ("environmental", 5))

class PerceivedSeverity(TextualConvention, Integer32):
    status = 'current'
    displayHint = ''
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5))
    namedValues = NamedValues(("indeterminate", 0), ("critical", 1), ("major", 2), ("minor", 3), ("warning", 4), ("cleared", 5))

class AlarmSeverity(TextualConvention, Integer32):
    status = 'current'
    displayHint = ''
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))
    namedValues = NamedValues(("critical", 1), ("major", 2), ("minor", 3), ("warning", 4), ("none", 5))

class RowStatus(TextualConvention, Integer32):
    status = 'current'
    displayHint = ''
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))
    namedValues = NamedValues(("active", 1), ("notInService", 2), ("notReady", 3), ("createAndGo", 4), ("createAndWait", 5), ("destroy", 6))

class OwnerString(DisplayString):
    status = 'current'
    displayHint = '255a'
    subtypeSpec = DisplayString.subtypeSpec + ValueSizeConstraint(0, 127)

class TrafficStatus(TextualConvention, Integer32):
    status = 'current'
    displayHint = ''
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("notraffic", 1), ("traffic", 2))

class TxMode76(TextualConvention, Integer32):
    status = 'current'
    displayHint = ''
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3))
    namedValues = NamedValues(("normal", 1), ("disabled", 2), ("forcedon", 3))

class TxMode75(TextualConvention, Integer32):
    status = 'current'
    displayHint = ''
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("normal", 1), ("disabled", 2))

class Present(TextualConvention, Integer32):
    status = 'current'
    displayHint = ''
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("yes", 1), ("no", 2))

class PowerStatus(TextualConvention, Integer32):
    status = 'current'
    displayHint = ''
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("off", 1), ("on", 2))

class PowerType(TextualConvention, Integer32):
    status = 'current'
    displayHint = ''
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))
    namedValues = NamedValues(("unknown", 1), ("power9048", 2), ("power9220", 3), ("power9148", 4), ("power9122", 5))

class MuxType(TextualConvention, Integer32):
    status = 'current'
    displayHint = ''
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))
    namedValues = NamedValues(("none", 1), ("mux8030", 2), ("mux8031", 3), ("mux8032", 4), ("mux8033", 5), ("mux8034", 6))

class ExternalAlarmLevel(TextualConvention, Integer32):
    status = 'current'
    displayHint = ''
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("activelow", 1), ("activehigh", 2))

class AlarmStatus(TextualConvention, Integer32):
    status = 'current'
    displayHint = ''
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("active", 1), ("ceased", 2))

class Switch(TextualConvention, Integer32):
    status = 'current'
    displayHint = ''
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("off", 1), ("on", 2))

class PortType(TextualConvention, Integer32):
    status = 'current'
    displayHint = ''
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("line", 1), ("client", 2))

class RackNumber(TextualConvention, Integer32):
    status = 'current'
    displayHint = ''
    subtypeSpec = Integer32.subtypeSpec + ValueRangeConstraint(1, 5)

class SlotNumber(TextualConvention, Integer32):
    status = 'current'
    displayHint = ''
    subtypeSpec = Integer32.subtypeSpec + ValueRangeConstraint(1, 17)

class BoardNumber(TextualConvention, Integer32):
    status = 'current'
    displayHint = ''
    subtypeSpec = Integer32.subtypeSpec + ValueRangeConstraint(1, 12)

class SlotNumberPS(TextualConvention, Integer32):
    status = 'current'
    displayHint = ''
    subtypeSpec = Integer32.subtypeSpec + ValueRangeConstraint(10, 15)

class SlotNumberNmb(TextualConvention, Integer32):
    status = 'current'
    displayHint = ''
    subtypeSpec = Integer32.subtypeSpec + ValueRangeConstraint(9, 13)

class AlarmAcknowledge(TextualConvention, Integer32):
    status = 'current'
    displayHint = ''
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1))
    namedValues = NamedValues(("acknowledge", 1))

class LineLoopMode(TextualConvention, Integer32):
    status = 'current'
    displayHint = ''
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("normal", 1), ("looptest", 2))

class CDRMode(TextualConvention, Integer32):
    status = 'current'
    displayHint = ''
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12))
    namedValues = NamedValues(("auto3R", 1), ("bypass2R", 2), ("custom", 3), ("fddiOR100Base-FX", 4), ("stm1orOC-3", 5), ("video270Mbps", 6), ("stm4orOC-12", 7), ("gigabitEthernet", 8), ("fibreChannel", 9), ("fibreChannelx2", 10), ("stm16orOC-48", 11), ("gigabitEthernetx2", 12))

class TrmDate(DisplayString):
    status = 'current'
    displayHint = ''
    subtypeSpec = DisplayString.subtypeSpec + ValueSizeConstraint(0, 10)

class TrmTime(DisplayString):
    status = 'current'
    displayHint = ''
    subtypeSpec = DisplayString.subtypeSpec + ValueSizeConstraint(0, 8)

class SecurityMode(TextualConvention, Integer32):
    status = 'current'
    displayHint = ''
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("activated", 1), ("deactivated", 2))

class SpeedLimit75(TextualConvention, Integer32):
    status = 'current'
    displayHint = ''
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3))
    namedValues = NamedValues(("noLimit", 1), ("lowLimit", 2), ("mediumLimit", 3))

class SpeedLimit76(TextualConvention, Integer32):
    status = 'current'
    displayHint = ''
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))
    namedValues = NamedValues(("noLimit", 1), ("lowLimit", 2), ("mediumLimit", 3), ("highLimit", 4))

class CascadeStatus(TextualConvention, Integer32):
    status = 'current'
    displayHint = ''
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))
    namedValues = NamedValues(("deactivated", 1), ("initializing", 2), ("ok", 3), ("failure", 4), ("disconnecting", 5))

class CascadeMode(TextualConvention, Integer32):
    status = 'current'
    displayHint = ''
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("activate", 1), ("deactivate", 2))

class CDR55Mode(TextualConvention, Integer32):
    status = 'current'
    displayHint = ''
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))
    namedValues = NamedValues(("escon", 1), ("stm1orOC-3", 2), ("fddiOR100Base-FX", 3), ("syncSignal16-32Mbps", 4))

org = MibIdentifier((1, 3))
dod = MibIdentifier((1, 3, 6))
internet = MibIdentifier((1, 3, 6, 1))
private = MibIdentifier((1, 3, 6, 1, 4))
enterprises = MibIdentifier((1, 3, 6, 1, 4, 1))
system1100 = MibIdentifier((1, 3, 6, 1, 4, 1, 11857, 1))
trmAlarmHandling = MibIdentifier((1, 3, 6, 1, 4, 1, 11857, 1, 1))
trmAlarmConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 11857, 1, 1, 1))
trmAlarmLog = MibIdentifier((1, 3, 6, 1, 4, 1, 11857, 1, 1, 2))
trmAlarmActive = MibIdentifier((1, 3, 6, 1, 4, 1, 11857, 1, 1, 3))
trmAlarmGeneral = MibIdentifier((1, 3, 6, 1, 4, 1, 11857, 1, 1, 1, 1))
trmAutoAcknowledge = MibScalar((1, 3, 6, 1, 4, 1, 11857, 1, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("on", 1), ("off", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: trmAutoAcknowledge.setStatus('current')
trmClearAlarmLog = MibScalar((1, 3, 6, 1, 4, 1, 11857, 1, 1, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("clear", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: trmClearAlarmLog.setStatus('current')
trmTemperature = MibScalar((1, 3, 6, 1, 4, 1, 11857, 1, 1, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("celsius", 1), ("farenheit", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: trmTemperature.setStatus('current')
trmAlarmTemperatureHigh = MibScalar((1, 3, 6, 1, 4, 1, 11857, 1, 1, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-32767, 32768))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: trmAlarmTemperatureHigh.setStatus('current')
trmAlarmTemperatureHighHyst = MibScalar((1, 3, 6, 1, 4, 1, 11857, 1, 1, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-32767, 32768))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: trmAlarmTemperatureHighHyst.setStatus('current')
trmAlarmTemperatureLow = MibScalar((1, 3, 6, 1, 4, 1, 11857, 1, 1, 1, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-32767, 32768))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: trmAlarmTemperatureLow.setStatus('current')
trmAlarmTemperatureLowHyst = MibScalar((1, 3, 6, 1, 4, 1, 11857, 1, 1, 1, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-32767, 32768))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: trmAlarmTemperatureLowHyst.setStatus('current')
trmPluginReset = MibScalar((1, 3, 6, 1, 4, 1, 11857, 1, 1, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("reset", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: trmPluginReset.setStatus('current')
trmOpticalInputPowerHighPINLine = MibScalar((1, 3, 6, 1, 4, 1, 11857, 1, 1, 1, 1, 9), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: trmOpticalInputPowerHighPINLine.setStatus('current')
trmOpticalInputPowerHighAPDLine = MibScalar((1, 3, 6, 1, 4, 1, 11857, 1, 1, 1, 1, 10), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: trmOpticalInputPowerHighAPDLine.setStatus('current')
trmOpticalInputPowerLowPINLine = MibScalar((1, 3, 6, 1, 4, 1, 11857, 1, 1, 1, 1, 11), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: trmOpticalInputPowerLowPINLine.setStatus('current')
trmOpticalInputPowerLowAPDLine = MibScalar((1, 3, 6, 1, 4, 1, 11857, 1, 1, 1, 1, 12), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: trmOpticalInputPowerLowAPDLine.setStatus('current')
trmCascade = MibScalar((1, 3, 6, 1, 4, 1, 11857, 1, 1, 1, 1, 13), CascadeMode()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: trmCascade.setStatus('current')
trmCascadeStatus = MibScalar((1, 3, 6, 1, 4, 1, 11857, 1, 1, 1, 1, 14), CascadeStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trmCascadeStatus.setStatus('current')
trmOpticalInputPowerHighAPDLine2 = MibScalar((1, 3, 6, 1, 4, 1, 11857, 1, 1, 1, 1, 15), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: trmOpticalInputPowerHighAPDLine2.setStatus('current')
trmOpticalInputPowerLowAPDLine2 = MibScalar((1, 3, 6, 1, 4, 1, 11857, 1, 1, 1, 1, 16), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: trmOpticalInputPowerLowAPDLine2.setStatus('current')
trmOpticalInputPowerHigh850Client = MibScalar((1, 3, 6, 1, 4, 1, 11857, 1, 1, 1, 1, 17), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: trmOpticalInputPowerHigh850Client.setStatus('current')
trmOpticalInputPowerHigh1310Client = MibScalar((1, 3, 6, 1, 4, 1, 11857, 1, 1, 1, 1, 18), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: trmOpticalInputPowerHigh1310Client.setStatus('current')
trmOpticalInputPowerLow850Client = MibScalar((1, 3, 6, 1, 4, 1, 11857, 1, 1, 1, 1, 19), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: trmOpticalInputPowerLow850Client.setStatus('current')
trmOpticalInputPowerLow1310Client = MibScalar((1, 3, 6, 1, 4, 1, 11857, 1, 1, 1, 1, 20), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: trmOpticalInputPowerLow1310Client.setStatus('current')
trmAlarmSeverity = MibIdentifier((1, 3, 6, 1, 4, 1, 11857, 1, 1, 1, 2))
trmAlarmSeverityTable = MibTable((1, 3, 6, 1, 4, 1, 11857, 1, 1, 1, 2, 1), )
if mibBuilder.loadTexts: trmAlarmSeverityTable.setStatus('current')
trmAlarmSeverityEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11857, 1, 1, 1, 2, 1, 1), ).setIndexNames((0, "TRANSMODE1100", "trmAlarmSeverityId"))
if mibBuilder.loadTexts: trmAlarmSeverityEntry.setStatus('current')
trmAlarmSeverityId = MibTableColumn((1, 3, 6, 1, 4, 1, 11857, 1, 1, 1, 2, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: trmAlarmSeverityId.setStatus('current')
trmAlarmSeverityName = MibTableColumn((1, 3, 6, 1, 4, 1, 11857, 1, 1, 1, 2, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trmAlarmSeverityName.setStatus('current')
trmAlarmSeverityLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 11857, 1, 1, 1, 2, 1, 1, 3), AlarmSeverity()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: trmAlarmSeverityLevel.setStatus('current')
trmAlarmExternal = MibIdentifier((1, 3, 6, 1, 4, 1, 11857, 1, 1, 1, 3))
trmAlarmExternalTable = MibTable((1, 3, 6, 1, 4, 1, 11857, 1, 1, 1, 3, 1), )
if mibBuilder.loadTexts: trmAlarmExternalTable.setStatus('current')
trmAlarmExternalEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11857, 1, 1, 1, 3, 1, 1), ).setIndexNames((0, "TRANSMODE1100", "trmAlarmExternalId"))
if mibBuilder.loadTexts: trmAlarmExternalEntry.setStatus('current')
trmAlarmExternalId = MibTableColumn((1, 3, 6, 1, 4, 1, 11857, 1, 1, 1, 3, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: trmAlarmExternalId.setStatus('current')
trmAlarmExternalName = MibTableColumn((1, 3, 6, 1, 4, 1, 11857, 1, 1, 1, 3, 1, 1, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: trmAlarmExternalName.setStatus('current')
trmAlarmExternalLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 11857, 1, 1, 1, 3, 1, 1, 3), ExternalAlarmLevel()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: trmAlarmExternalLevel.setStatus('current')
trmAlarmLogTable = MibTable((1, 3, 6, 1, 4, 1, 11857, 1, 1, 2, 1), )
if mibBuilder.loadTexts: trmAlarmLogTable.setStatus('current')
trmAlarmLogEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11857, 1, 1, 2, 1, 1), ).setIndexNames((0, "TRANSMODE1100", "trmAlarmLogIndex"))
if mibBuilder.loadTexts: trmAlarmLogEntry.setStatus('current')
trmAlarmLogIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11857, 1, 1, 2, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: trmAlarmLogIndex.setStatus('current')
trmAlarmLogRackNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 11857, 1, 1, 2, 1, 1, 2), RackNumber()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trmAlarmLogRackNumber.setStatus('current')
trmAlarmLogSlotNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 11857, 1, 1, 2, 1, 1, 3), SlotNumber()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trmAlarmLogSlotNumber.setStatus('current')
trmAlarmLogName = MibTableColumn((1, 3, 6, 1, 4, 1, 11857, 1, 1, 2, 1, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trmAlarmLogName.setStatus('current')
trmAlarmLogSeverity = MibTableColumn((1, 3, 6, 1, 4, 1, 11857, 1, 1, 2, 1, 1, 5), PerceivedSeverity()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trmAlarmLogSeverity.setStatus('current')
trmAlarmLogUnit = MibTableColumn((1, 3, 6, 1, 4, 1, 11857, 1, 1, 2, 1, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trmAlarmLogUnit.setStatus('current')
trmAlarmLogSerialNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 11857, 1, 1, 2, 1, 1, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trmAlarmLogSerialNumber.setStatus('current')
trmAlarmLogActTime = MibTableColumn((1, 3, 6, 1, 4, 1, 11857, 1, 1, 2, 1, 1, 8), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trmAlarmLogActTime.setStatus('current')
trmAlarmLogDeactTime = MibTableColumn((1, 3, 6, 1, 4, 1, 11857, 1, 1, 2, 1, 1, 9), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trmAlarmLogDeactTime.setStatus('current')
trmAlarmLogAckTime = MibTableColumn((1, 3, 6, 1, 4, 1, 11857, 1, 1, 2, 1, 1, 10), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trmAlarmLogAckTime.setStatus('current')
trmAlarmLogAckUser = MibTableColumn((1, 3, 6, 1, 4, 1, 11857, 1, 1, 2, 1, 1, 11), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trmAlarmLogAckUser.setStatus('current')
trmAlarmActiveGeneral = MibIdentifier((1, 3, 6, 1, 4, 1, 11857, 1, 1, 3, 1))
trmAlarmActiveCounter = MibScalar((1, 3, 6, 1, 4, 1, 11857, 1, 1, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 32768))).setMaxAccess("readonly")
if mibBuilder.loadTexts: trmAlarmActiveCounter.setStatus('current')
trmAlarmActiveAcknowledgeAllDeact = MibScalar((1, 3, 6, 1, 4, 1, 11857, 1, 1, 3, 1, 2), AlarmAcknowledge()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: trmAlarmActiveAcknowledgeAllDeact.setStatus('current')
trmAlarmActiveAcknowledgeAll = MibScalar((1, 3, 6, 1, 4, 1, 11857, 1, 1, 3, 1, 3), AlarmAcknowledge()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: trmAlarmActiveAcknowledgeAll.setStatus('current')
trmAlarmActiveTable = MibTable((1, 3, 6, 1, 4, 1, 11857, 1, 1, 3, 2), )
if mibBuilder.loadTexts: trmAlarmActiveTable.setStatus('current')
trmAlarmActiveEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11857, 1, 1, 3, 2, 1), ).setIndexNames((0, "TRANSMODE1100", "trmAlarmActiveIndex"))
if mibBuilder.loadTexts: trmAlarmActiveEntry.setStatus('current')
trmAlarmActiveIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11857, 1, 1, 3, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: trmAlarmActiveIndex.setStatus('current')
trmAlarmActiveRackNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 11857, 1, 1, 3, 2, 1, 2), RackNumber()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trmAlarmActiveRackNumber.setStatus('current')
trmAlarmActiveSlotNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 11857, 1, 1, 3, 2, 1, 3), SlotNumber()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trmAlarmActiveSlotNumber.setStatus('current')
trmAlarmActiveName = MibTableColumn((1, 3, 6, 1, 4, 1, 11857, 1, 1, 3, 2, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trmAlarmActiveName.setStatus('current')
trmAlarmActiveSeverity = MibTableColumn((1, 3, 6, 1, 4, 1, 11857, 1, 1, 3, 2, 1, 5), PerceivedSeverity()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trmAlarmActiveSeverity.setStatus('current')
trmAlarmActiveUnit = MibTableColumn((1, 3, 6, 1, 4, 1, 11857, 1, 1, 3, 2, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trmAlarmActiveUnit.setStatus('current')
trmAlarmActiveSerialNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 11857, 1, 1, 3, 2, 1, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trmAlarmActiveSerialNumber.setStatus('current')
trmAlarmActiveActTime = MibTableColumn((1, 3, 6, 1, 4, 1, 11857, 1, 1, 3, 2, 1, 8), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trmAlarmActiveActTime.setStatus('current')
trmAlarmActiveDeactTime = MibTableColumn((1, 3, 6, 1, 4, 1, 11857, 1, 1, 3, 2, 1, 9), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trmAlarmActiveDeactTime.setStatus('current')
trmAlarmActiveAcknowledge = MibTableColumn((1, 3, 6, 1, 4, 1, 11857, 1, 1, 3, 2, 1, 10), AlarmAcknowledge()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: trmAlarmActiveAcknowledge.setStatus('current')
trmSubrack = MibIdentifier((1, 3, 6, 1, 4, 1, 11857, 1, 2))
trmSubrackList = MibIdentifier((1, 3, 6, 1, 4, 1, 11857, 1, 2, 1))
trmSubrackListTable = MibTable((1, 3, 6, 1, 4, 1, 11857, 1, 2, 1, 1), )
if mibBuilder.loadTexts: trmSubrackListTable.setStatus('current')
trmSubrackListEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11857, 1, 2, 1, 1, 1), ).setIndexNames((0, "TRANSMODE1100", "trmListRackNumber"), (0, "TRANSMODE1100", "trmListSlotNumber"))
if mibBuilder.loadTexts: trmSubrackListEntry.setStatus('current')
trmListRackNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 11857, 1, 2, 1, 1, 1, 1), RackNumber())
if mibBuilder.loadTexts: trmListRackNumber.setStatus('current')
trmListSlotNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 11857, 1, 2, 1, 1, 1, 2), SlotNumber())
if mibBuilder.loadTexts: trmListSlotNumber.setStatus('current')
trmListUnitPresent = MibTableColumn((1, 3, 6, 1, 4, 1, 11857, 1, 2, 1, 1, 1, 3), Present()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trmListUnitPresent.setStatus('current')
trmListProductNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 11857, 1, 2, 1, 1, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trmListProductNumber.setStatus('current')
trmListProductDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 11857, 1, 2, 1, 1, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trmListProductDescription.setStatus('current')
trmListHwRevision = MibTableColumn((1, 3, 6, 1, 4, 1, 11857, 1, 2, 1, 1, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trmListHwRevision.setStatus('current')
trmListSerialNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 11857, 1, 2, 1, 1, 1, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trmListSerialNumber.setStatus('current')
trmListManufacturingDate = MibTableColumn((1, 3, 6, 1, 4, 1, 11857, 1, 2, 1, 1, 1, 8), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trmListManufacturingDate.setStatus('current')
trmListSoftwareProdNo = MibTableColumn((1, 3, 6, 1, 4, 1, 11857, 1, 2, 1, 1, 1, 9), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trmListSoftwareProdNo.setStatus('current')
trmListSwVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 11857, 1, 2, 1, 1, 1, 10), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trmListSwVersion.setStatus('current')
trmSubrackUnits = MibIdentifier((1, 3, 6, 1, 4, 1, 11857, 1, 2, 2))
trm6001 = MibIdentifier((1, 3, 6, 1, 4, 1, 11857, 1, 2, 2, 1))
trm6001PM = MibIdentifier((1, 3, 6, 1, 4, 1, 11857, 1, 2, 2, 1, 1))
trm6001Table = MibTable((1, 3, 6, 1, 4, 1, 11857, 1, 2, 2, 1, 1, 1), )
if mibBuilder.loadTexts: trm6001Table.setStatus('current')
trm6001Entry = MibTableRow((1, 3, 6, 1, 4, 1, 11857, 1, 2, 2, 1, 1, 1, 1), ).setIndexNames((0, "TRANSMODE1100", "trm6001RackNumber"), (0, "TRANSMODE1100", "trm6001SlotNumber"))
if mibBuilder.loadTexts: trm6001Entry.setStatus('current')
trm6001RackNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 11857, 1, 2, 2, 1, 1, 1, 1, 1), RackNumber())
if mibBuilder.loadTexts: trm6001RackNumber.setStatus('current')
trm6001SlotNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 11857, 1, 2, 2, 1, 1, 1, 1, 2), SlotNumberNmb())
if mibBuilder.loadTexts: trm6001SlotNumber.setStatus('current')
trm6001IPAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 11857, 1, 2, 2, 1, 1, 1, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trm6001IPAddress.setStatus('current')
trm6001MACAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 11857, 1, 2, 2, 1, 1, 1, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trm6001MACAddress.setStatus('current')
trm6001Temperature = MibTableColumn((1, 3, 6, 1, 4, 1, 11857, 1, 2, 2, 1, 1, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: trm6001Temperature.setStatus('current')
trm6001UpTime = MibTableColumn((1, 3, 6, 1, 4, 1, 11857, 1, 2, 2, 1, 1, 1, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trm6001UpTime.setStatus('current')
trm6001Date = MibTableColumn((1, 3, 6, 1, 4, 1, 11857, 1, 2, 2, 1, 1, 1, 1, 7), TrmDate()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: trm6001Date.setStatus('current')
trm6001Time = MibTableColumn((1, 3, 6, 1, 4, 1, 11857, 1, 2, 2, 1, 1, 1, 1, 8), TrmTime()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: trm6001Time.setStatus('current')
trm6001SwReset = MibTableColumn((1, 3, 6, 1, 4, 1, 11857, 1, 2, 2, 1, 1, 1, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("reset", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: trm6001SwReset.setStatus('current')
trm6001FM = MibIdentifier((1, 3, 6, 1, 4, 1, 11857, 1, 2, 2, 1, 2))
trm6001Traps = MibIdentifier((1, 3, 6, 1, 4, 1, 11857, 1, 2, 2, 1, 2, 0))
trm6001TrapExternal1 = NotificationType((1, 3, 6, 1, 4, 1, 11857, 1, 2, 2, 1, 2, 0, 1)).setObjects(("TRANSMODE1100", "trmAlarmActiveName"), ("TRANSMODE1100", "trmAlarmActiveSeverity"), ("TRANSMODE1100", "trmAlarmActiveActTime"), ("TRANSMODE1100", "trmAlarmActiveUnit"), ("TRANSMODE1100", "trmAlarmActiveRackNumber"), ("TRANSMODE1100", "trmAlarmActiveSlotNumber"), ("TRANSMODE1100", "trmAlarmActiveSerialNumber"))
if mibBuilder.loadTexts: trm6001TrapExternal1.setStatus('current')
trm6001TrapExternal2 = NotificationType((1, 3, 6, 1, 4, 1, 11857, 1, 2, 2, 1, 2, 0, 2)).setObjects(("TRANSMODE1100", "trmAlarmActiveName"), ("TRANSMODE1100", "trmAlarmActiveSeverity"), ("TRANSMODE1100", "trmAlarmActiveActTime"), ("TRANSMODE1100", "trmAlarmActiveUnit"), ("TRANSMODE1100", "trmAlarmActiveRackNumber"), ("TRANSMODE1100", "trmAlarmActiveSlotNumber"), ("TRANSMODE1100", "trmAlarmActiveSerialNumber"))
if mibBuilder.loadTexts: trm6001TrapExternal2.setStatus('current')
trm6001TrapExternal3 = NotificationType((1, 3, 6, 1, 4, 1, 11857, 1, 2, 2, 1, 2, 0, 3)).setObjects(("TRANSMODE1100", "trmAlarmActiveName"), ("TRANSMODE1100", "trmAlarmActiveSeverity"), ("TRANSMODE1100", "trmAlarmActiveActTime"), ("TRANSMODE1100", "trmAlarmActiveUnit"), ("TRANSMODE1100", "trmAlarmActiveRackNumber"), ("TRANSMODE1100", "trmAlarmActiveSlotNumber"), ("TRANSMODE1100", "trmAlarmActiveSerialNumber"))
if mibBuilder.loadTexts: trm6001TrapExternal3.setStatus('current')
trm6001CascadeFailure = NotificationType((1, 3, 6, 1, 4, 1, 11857, 1, 2, 2, 1, 2, 0, 4)).setObjects(("TRANSMODE1100", "trmAlarmActiveName"), ("TRANSMODE1100", "trmAlarmActiveSeverity"), ("TRANSMODE1100", "trmAlarmActiveActTime"), ("TRANSMODE1100", "trmAlarmActiveUnit"), ("TRANSMODE1100", "trmAlarmActiveRackNumber"), ("TRANSMODE1100", "trmAlarmActiveSlotNumber"), ("TRANSMODE1100", "trmAlarmActiveSerialNumber"))
if mibBuilder.loadTexts: trm6001CascadeFailure.setStatus('current')
trm9xxx = MibIdentifier((1, 3, 6, 1, 4, 1, 11857, 1, 2, 2, 2))
trm9xxxPM = MibIdentifier((1, 3, 6, 1, 4, 1, 11857, 1, 2, 2, 2, 1))
trm9xxxTable = MibTable((1, 3, 6, 1, 4, 1, 11857, 1, 2, 2, 2, 1, 1), )
if mibBuilder.loadTexts: trm9xxxTable.setStatus('current')
trm9xxxEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11857, 1, 2, 2, 2, 1, 1, 1), ).setIndexNames((0, "TRANSMODE1100", "trm9xxxRackNumber"), (0, "TRANSMODE1100", "trm9xxxSlotNumber"))
if mibBuilder.loadTexts: trm9xxxEntry.setStatus('current')
trm9xxxRackNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 11857, 1, 2, 2, 2, 1, 1, 1, 1), RackNumber())
if mibBuilder.loadTexts: trm9xxxRackNumber.setStatus('current')
trm9xxxSlotNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 11857, 1, 2, 2, 2, 1, 1, 1, 2), SlotNumberPS())
if mibBuilder.loadTexts: trm9xxxSlotNumber.setStatus('current')
trm9xxxPresent = MibTableColumn((1, 3, 6, 1, 4, 1, 11857, 1, 2, 2, 2, 1, 1, 1, 3), Present()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trm9xxxPresent.setStatus('current')
trm9xxxType = MibTableColumn((1, 3, 6, 1, 4, 1, 11857, 1, 2, 2, 2, 1, 1, 1, 4), PowerType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trm9xxxType.setStatus('current')
trm9xxxStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11857, 1, 2, 2, 2, 1, 1, 1, 5), PowerStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trm9xxxStatus.setStatus('current')
trm9xxxFM = MibIdentifier((1, 3, 6, 1, 4, 1, 11857, 1, 2, 2, 2, 2))
trm9xxxTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 11857, 1, 2, 2, 2, 2, 0))
trm9xxxTrapFailure = NotificationType((1, 3, 6, 1, 4, 1, 11857, 1, 2, 2, 2, 2, 0, 1)).setObjects(("TRANSMODE1100", "trmAlarmActiveName"), ("TRANSMODE1100", "trmAlarmActiveSeverity"), ("TRANSMODE1100", "trmAlarmActiveActTime"), ("TRANSMODE1100", "trmAlarmActiveUnit"), ("TRANSMODE1100", "trmAlarmActiveRackNumber"), ("TRANSMODE1100", "trmAlarmActiveSlotNumber"), ("TRANSMODE1100", "trmAlarmActiveSerialNumber"))
if mibBuilder.loadTexts: trm9xxxTrapFailure.setStatus('current')
trm9xxxTrapMissing = NotificationType((1, 3, 6, 1, 4, 1, 11857, 1, 2, 2, 2, 2, 0, 2)).setObjects(("TRANSMODE1100", "trmAlarmActiveName"), ("TRANSMODE1100", "trmAlarmActiveSeverity"), ("TRANSMODE1100", "trmAlarmActiveActTime"), ("TRANSMODE1100", "trmAlarmActiveUnit"), ("TRANSMODE1100", "trmAlarmActiveRackNumber"), ("TRANSMODE1100", "trmAlarmActiveSlotNumber"), ("TRANSMODE1100", "trmAlarmActiveSerialNumber"))
if mibBuilder.loadTexts: trm9xxxTrapMissing.setStatus('current')
trm75xx = MibIdentifier((1, 3, 6, 1, 4, 1, 11857, 1, 2, 2, 3))
trm75xxPM = MibIdentifier((1, 3, 6, 1, 4, 1, 11857, 1, 2, 2, 3, 1))
trm75xxTable = MibTable((1, 3, 6, 1, 4, 1, 11857, 1, 2, 2, 3, 1, 1), )
if mibBuilder.loadTexts: trm75xxTable.setStatus('current')
trm75xxEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11857, 1, 2, 2, 3, 1, 1, 1), ).setIndexNames((0, "TRANSMODE1100", "trm75xxRackNumber"), (0, "TRANSMODE1100", "trm75xxSlotNumber"))
if mibBuilder.loadTexts: trm75xxEntry.setStatus('current')
trm75xxRackNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 11857, 1, 2, 2, 3, 1, 1, 1, 1), RackNumber())
if mibBuilder.loadTexts: trm75xxRackNumber.setStatus('current')
trm75xxSlotNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 11857, 1, 2, 2, 3, 1, 1, 1, 2), BoardNumber())
if mibBuilder.loadTexts: trm75xxSlotNumber.setStatus('current')
trm75xxRxLine = MibTableColumn((1, 3, 6, 1, 4, 1, 11857, 1, 2, 2, 3, 1, 1, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trm75xxRxLine.setStatus('current')
trm75xxEstProtLine = MibTableColumn((1, 3, 6, 1, 4, 1, 11857, 1, 2, 2, 3, 1, 1, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trm75xxEstProtLine.setStatus('current')
trm75xxEstFibRateLine = MibTableColumn((1, 3, 6, 1, 4, 1, 11857, 1, 2, 2, 3, 1, 1, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trm75xxEstFibRateLine.setStatus('current')
trm75xxTxLine = MibTableColumn((1, 3, 6, 1, 4, 1, 11857, 1, 2, 2, 3, 1, 1, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trm75xxTxLine.setStatus('current')
trm75xxTxMode = MibTableColumn((1, 3, 6, 1, 4, 1, 11857, 1, 2, 2, 3, 1, 1, 1, 7), TxMode75()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: trm75xxTxMode.setStatus('current')
trm75xxWavelengthLine = MibTableColumn((1, 3, 6, 1, 4, 1, 11857, 1, 2, 2, 3, 1, 1, 1, 8), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trm75xxWavelengthLine.setStatus('current')
trm75xxRxClient = MibTableColumn((1, 3, 6, 1, 4, 1, 11857, 1, 2, 2, 3, 1, 1, 1, 9), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trm75xxRxClient.setStatus('current')
trm75xxEstProtClient = MibTableColumn((1, 3, 6, 1, 4, 1, 11857, 1, 2, 2, 3, 1, 1, 1, 10), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trm75xxEstProtClient.setStatus('current')
trm75xxEstFibRateClient = MibTableColumn((1, 3, 6, 1, 4, 1, 11857, 1, 2, 2, 3, 1, 1, 1, 11), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trm75xxEstFibRateClient.setStatus('current')
trm75xxTxClient = MibTableColumn((1, 3, 6, 1, 4, 1, 11857, 1, 2, 2, 3, 1, 1, 1, 12), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trm75xxTxClient.setStatus('current')
trm75xxTxModeClient = MibTableColumn((1, 3, 6, 1, 4, 1, 11857, 1, 2, 2, 3, 1, 1, 1, 13), TxMode75()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trm75xxTxModeClient.setStatus('obsolete')
trm75xxIDStringClient = MibTableColumn((1, 3, 6, 1, 4, 1, 11857, 1, 2, 2, 3, 1, 1, 1, 14), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: trm75xxIDStringClient.setStatus('current')
trm75xxIPAddressClient = MibTableColumn((1, 3, 6, 1, 4, 1, 11857, 1, 2, 2, 3, 1, 1, 1, 15), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: trm75xxIPAddressClient.setStatus('current')
trm75xxWavelengthClient = MibTableColumn((1, 3, 6, 1, 4, 1, 11857, 1, 2, 2, 3, 1, 1, 1, 16), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trm75xxWavelengthClient.setStatus('current')
trm75xxSpeedLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 11857, 1, 2, 2, 3, 1, 1, 1, 17), SpeedLimit75()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: trm75xxSpeedLimit.setStatus('current')
trm75xxFM = MibIdentifier((1, 3, 6, 1, 4, 1, 11857, 1, 2, 2, 3, 2))
trm75xxTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 11857, 1, 2, 2, 3, 2, 0))
trm75xxTrapGlitchLine = NotificationType((1, 3, 6, 1, 4, 1, 11857, 1, 2, 2, 3, 2, 0, 1)).setObjects(("TRANSMODE1100", "trmAlarmActiveName"), ("TRANSMODE1100", "trmAlarmActiveSeverity"), ("TRANSMODE1100", "trmAlarmActiveActTime"), ("TRANSMODE1100", "trmAlarmActiveUnit"), ("TRANSMODE1100", "trmAlarmActiveRackNumber"), ("TRANSMODE1100", "trmAlarmActiveSlotNumber"), ("TRANSMODE1100", "trmAlarmActiveSerialNumber"))
if mibBuilder.loadTexts: trm75xxTrapGlitchLine.setStatus('current')
trm75xxTrapLopLine = NotificationType((1, 3, 6, 1, 4, 1, 11857, 1, 2, 2, 3, 2, 0, 2)).setObjects(("TRANSMODE1100", "trmAlarmActiveName"), ("TRANSMODE1100", "trmAlarmActiveSeverity"), ("TRANSMODE1100", "trmAlarmActiveActTime"), ("TRANSMODE1100", "trmAlarmActiveUnit"), ("TRANSMODE1100", "trmAlarmActiveRackNumber"), ("TRANSMODE1100", "trmAlarmActiveSlotNumber"), ("TRANSMODE1100", "trmAlarmActiveSerialNumber"))
if mibBuilder.loadTexts: trm75xxTrapLopLine.setStatus('current')
trm75xxTrapTxLine = NotificationType((1, 3, 6, 1, 4, 1, 11857, 1, 2, 2, 3, 2, 0, 3)).setObjects(("TRANSMODE1100", "trmAlarmActiveName"), ("TRANSMODE1100", "trmAlarmActiveSeverity"), ("TRANSMODE1100", "trmAlarmActiveActTime"), ("TRANSMODE1100", "trmAlarmActiveUnit"), ("TRANSMODE1100", "trmAlarmActiveRackNumber"), ("TRANSMODE1100", "trmAlarmActiveSlotNumber"), ("TRANSMODE1100", "trmAlarmActiveSerialNumber"))
if mibBuilder.loadTexts: trm75xxTrapTxLine.setStatus('current')
trm75xxTrapTxDisableLine = NotificationType((1, 3, 6, 1, 4, 1, 11857, 1, 2, 2, 3, 2, 0, 4)).setObjects(("TRANSMODE1100", "trmAlarmActiveName"), ("TRANSMODE1100", "trmAlarmActiveSeverity"), ("TRANSMODE1100", "trmAlarmActiveActTime"), ("TRANSMODE1100", "trmAlarmActiveUnit"), ("TRANSMODE1100", "trmAlarmActiveRackNumber"), ("TRANSMODE1100", "trmAlarmActiveSlotNumber"), ("TRANSMODE1100", "trmAlarmActiveSerialNumber"))
if mibBuilder.loadTexts: trm75xxTrapTxDisableLine.setStatus('current')
trm75xxTrapGlitchClient = NotificationType((1, 3, 6, 1, 4, 1, 11857, 1, 2, 2, 3, 2, 0, 5)).setObjects(("TRANSMODE1100", "trmAlarmActiveName"), ("TRANSMODE1100", "trmAlarmActiveSeverity"), ("TRANSMODE1100", "trmAlarmActiveActTime"), ("TRANSMODE1100", "trmAlarmActiveUnit"), ("TRANSMODE1100", "trmAlarmActiveRackNumber"), ("TRANSMODE1100", "trmAlarmActiveSlotNumber"), ("TRANSMODE1100", "trmAlarmActiveSerialNumber"))
if mibBuilder.loadTexts: trm75xxTrapGlitchClient.setStatus('current')
trm75xxTrapLopClient = NotificationType((1, 3, 6, 1, 4, 1, 11857, 1, 2, 2, 3, 2, 0, 6)).setObjects(("TRANSMODE1100", "trmAlarmActiveName"), ("TRANSMODE1100", "trmAlarmActiveSeverity"), ("TRANSMODE1100", "trmAlarmActiveActTime"), ("TRANSMODE1100", "trmAlarmActiveUnit"), ("TRANSMODE1100", "trmAlarmActiveRackNumber"), ("TRANSMODE1100", "trmAlarmActiveSlotNumber"), ("TRANSMODE1100", "trmAlarmActiveSerialNumber"))
if mibBuilder.loadTexts: trm75xxTrapLopClient.setStatus('current')
trm75xxTrapTxClient = NotificationType((1, 3, 6, 1, 4, 1, 11857, 1, 2, 2, 3, 2, 0, 7)).setObjects(("TRANSMODE1100", "trmAlarmActiveName"), ("TRANSMODE1100", "trmAlarmActiveSeverity"), ("TRANSMODE1100", "trmAlarmActiveActTime"), ("TRANSMODE1100", "trmAlarmActiveUnit"), ("TRANSMODE1100", "trmAlarmActiveRackNumber"), ("TRANSMODE1100", "trmAlarmActiveSlotNumber"), ("TRANSMODE1100", "trmAlarmActiveSerialNumber"))
if mibBuilder.loadTexts: trm75xxTrapTxClient.setStatus('current')
trm75xxTrapTxDisableClient = NotificationType((1, 3, 6, 1, 4, 1, 11857, 1, 2, 2, 3, 2, 0, 8)).setObjects(("TRANSMODE1100", "trmAlarmActiveName"), ("TRANSMODE1100", "trmAlarmActiveSeverity"), ("TRANSMODE1100", "trmAlarmActiveActTime"), ("TRANSMODE1100", "trmAlarmActiveUnit"), ("TRANSMODE1100", "trmAlarmActiveRackNumber"), ("TRANSMODE1100", "trmAlarmActiveSlotNumber"), ("TRANSMODE1100", "trmAlarmActiveSerialNumber"))
if mibBuilder.loadTexts: trm75xxTrapTxDisableClient.setStatus('current')
trm76xx = MibIdentifier((1, 3, 6, 1, 4, 1, 11857, 1, 2, 2, 4))
trm76xxPM = MibIdentifier((1, 3, 6, 1, 4, 1, 11857, 1, 2, 2, 4, 1))
trm76xxTable = MibTable((1, 3, 6, 1, 4, 1, 11857, 1, 2, 2, 4, 1, 1), )
if mibBuilder.loadTexts: trm76xxTable.setStatus('current')
trm76xxEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11857, 1, 2, 2, 4, 1, 1, 1), ).setIndexNames((0, "TRANSMODE1100", "trm76xxRackNumber"), (0, "TRANSMODE1100", "trm76xxSlotNumber"))
if mibBuilder.loadTexts: trm76xxEntry.setStatus('current')
trm76xxRackNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 11857, 1, 2, 2, 4, 1, 1, 1, 1), RackNumber())
if mibBuilder.loadTexts: trm76xxRackNumber.setStatus('current')
trm76xxSlotNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 11857, 1, 2, 2, 4, 1, 1, 1, 2), BoardNumber())
if mibBuilder.loadTexts: trm76xxSlotNumber.setStatus('current')
trm76xxTemperature = MibTableColumn((1, 3, 6, 1, 4, 1, 11857, 1, 2, 2, 4, 1, 1, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trm76xxTemperature.setStatus('current')
trm76xxCDR = MibTableColumn((1, 3, 6, 1, 4, 1, 11857, 1, 2, 2, 4, 1, 1, 1, 4), CDRMode()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: trm76xxCDR.setStatus('current')
trm76xxCustomFibRate = MibTableColumn((1, 3, 6, 1, 4, 1, 11857, 1, 2, 2, 4, 1, 1, 1, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: trm76xxCustomFibRate.setStatus('current')
trm76xxTxMode = MibTableColumn((1, 3, 6, 1, 4, 1, 11857, 1, 2, 2, 4, 1, 1, 1, 6), TxMode76()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: trm76xxTxMode.setStatus('current')
trm76xxLineLoopMode = MibTableColumn((1, 3, 6, 1, 4, 1, 11857, 1, 2, 2, 4, 1, 1, 1, 7), LineLoopMode()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: trm76xxLineLoopMode.setStatus('current')
trm76xxSwReset = MibTableColumn((1, 3, 6, 1, 4, 1, 11857, 1, 2, 2, 4, 1, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("reset", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: trm76xxSwReset.setStatus('current')
trm76xxRxLine = MibTableColumn((1, 3, 6, 1, 4, 1, 11857, 1, 2, 2, 4, 1, 1, 1, 9), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trm76xxRxLine.setStatus('current')
trm76xxOpticalInPowLine = MibTableColumn((1, 3, 6, 1, 4, 1, 11857, 1, 2, 2, 4, 1, 1, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trm76xxOpticalInPowLine.setStatus('current')
trm76xxSpeedLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 11857, 1, 2, 2, 4, 1, 1, 1, 11), SpeedLimit76()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: trm76xxSpeedLimit.setStatus('current')
trm76xxEstProtLine = MibTableColumn((1, 3, 6, 1, 4, 1, 11857, 1, 2, 2, 4, 1, 1, 1, 12), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trm76xxEstProtLine.setStatus('current')
trm76xxEstFibRateLine = MibTableColumn((1, 3, 6, 1, 4, 1, 11857, 1, 2, 2, 4, 1, 1, 1, 13), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trm76xxEstFibRateLine.setStatus('current')
trm76xxTxLine = MibTableColumn((1, 3, 6, 1, 4, 1, 11857, 1, 2, 2, 4, 1, 1, 1, 14), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trm76xxTxLine.setStatus('current')
trm76xxOpticalOutPowLine = MibTableColumn((1, 3, 6, 1, 4, 1, 11857, 1, 2, 2, 4, 1, 1, 1, 15), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trm76xxOpticalOutPowLine.setStatus('current')
trm76xxProdOutPowLine = MibTableColumn((1, 3, 6, 1, 4, 1, 11857, 1, 2, 2, 4, 1, 1, 1, 16), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trm76xxProdOutPowLine.setStatus('current')
trm76xxLaserBiasCurLine = MibTableColumn((1, 3, 6, 1, 4, 1, 11857, 1, 2, 2, 4, 1, 1, 1, 17), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trm76xxLaserBiasCurLine.setStatus('current')
trm76xxProdLaserBiasCurLine = MibTableColumn((1, 3, 6, 1, 4, 1, 11857, 1, 2, 2, 4, 1, 1, 1, 18), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trm76xxProdLaserBiasCurLine.setStatus('current')
trm76xxWavelengthLine = MibTableColumn((1, 3, 6, 1, 4, 1, 11857, 1, 2, 2, 4, 1, 1, 1, 19), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trm76xxWavelengthLine.setStatus('current')
trm76xxRxClient = MibTableColumn((1, 3, 6, 1, 4, 1, 11857, 1, 2, 2, 4, 1, 1, 1, 20), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trm76xxRxClient.setStatus('current')
trm76xxEstProtClient = MibTableColumn((1, 3, 6, 1, 4, 1, 11857, 1, 2, 2, 4, 1, 1, 1, 21), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trm76xxEstProtClient.setStatus('current')
trm76xxEstFibRateClient = MibTableColumn((1, 3, 6, 1, 4, 1, 11857, 1, 2, 2, 4, 1, 1, 1, 22), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trm76xxEstFibRateClient.setStatus('current')
trm76xxTxClient = MibTableColumn((1, 3, 6, 1, 4, 1, 11857, 1, 2, 2, 4, 1, 1, 1, 23), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trm76xxTxClient.setStatus('current')
trm76xxIDStringClient = MibTableColumn((1, 3, 6, 1, 4, 1, 11857, 1, 2, 2, 4, 1, 1, 1, 24), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: trm76xxIDStringClient.setStatus('current')
trm76xxIPAddressClient = MibTableColumn((1, 3, 6, 1, 4, 1, 11857, 1, 2, 2, 4, 1, 1, 1, 25), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: trm76xxIPAddressClient.setStatus('current')
trm76xxWavelengthClient = MibTableColumn((1, 3, 6, 1, 4, 1, 11857, 1, 2, 2, 4, 1, 1, 1, 26), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trm76xxWavelengthClient.setStatus('current')
trm76xxOpticalInPowClient = MibTableColumn((1, 3, 6, 1, 4, 1, 11857, 1, 2, 2, 4, 1, 1, 1, 27), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trm76xxOpticalInPowClient.setStatus('current')
trm76xxOpticalOutPowClient = MibTableColumn((1, 3, 6, 1, 4, 1, 11857, 1, 2, 2, 4, 1, 1, 1, 28), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trm76xxOpticalOutPowClient.setStatus('current')
trm76xxLaserBiasCurClient = MibTableColumn((1, 3, 6, 1, 4, 1, 11857, 1, 2, 2, 4, 1, 1, 1, 29), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trm76xxLaserBiasCurClient.setStatus('current')
trm76xxFM = MibIdentifier((1, 3, 6, 1, 4, 1, 11857, 1, 2, 2, 4, 2))
trm76xxTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 11857, 1, 2, 2, 4, 2, 0))
trm76xxTrapCDRAutoModeRangeChangeLine = NotificationType((1, 3, 6, 1, 4, 1, 11857, 1, 2, 2, 4, 2, 0, 1)).setObjects(("TRANSMODE1100", "trmAlarmActiveName"), ("TRANSMODE1100", "trmAlarmActiveSeverity"), ("TRANSMODE1100", "trmAlarmActiveActTime"), ("TRANSMODE1100", "trmAlarmActiveUnit"), ("TRANSMODE1100", "trmAlarmActiveRackNumber"), ("TRANSMODE1100", "trmAlarmActiveSlotNumber"), ("TRANSMODE1100", "trmAlarmActiveSerialNumber"))
if mibBuilder.loadTexts: trm76xxTrapCDRAutoModeRangeChangeLine.setStatus('current')
trm76xxTrapRxGlitchLine = NotificationType((1, 3, 6, 1, 4, 1, 11857, 1, 2, 2, 4, 2, 0, 2)).setObjects(("TRANSMODE1100", "trmAlarmActiveName"), ("TRANSMODE1100", "trmAlarmActiveSeverity"), ("TRANSMODE1100", "trmAlarmActiveActTime"), ("TRANSMODE1100", "trmAlarmActiveUnit"), ("TRANSMODE1100", "trmAlarmActiveRackNumber"), ("TRANSMODE1100", "trmAlarmActiveSlotNumber"), ("TRANSMODE1100", "trmAlarmActiveSerialNumber"))
if mibBuilder.loadTexts: trm76xxTrapRxGlitchLine.setStatus('current')
trm76xxTrapLopLine = NotificationType((1, 3, 6, 1, 4, 1, 11857, 1, 2, 2, 4, 2, 0, 3)).setObjects(("TRANSMODE1100", "trmAlarmActiveName"), ("TRANSMODE1100", "trmAlarmActiveSeverity"), ("TRANSMODE1100", "trmAlarmActiveActTime"), ("TRANSMODE1100", "trmAlarmActiveUnit"), ("TRANSMODE1100", "trmAlarmActiveRackNumber"), ("TRANSMODE1100", "trmAlarmActiveSlotNumber"), ("TRANSMODE1100", "trmAlarmActiveSerialNumber"))
if mibBuilder.loadTexts: trm76xxTrapLopLine.setStatus('current')
trm76xxTrapRxHighPowerLine = NotificationType((1, 3, 6, 1, 4, 1, 11857, 1, 2, 2, 4, 2, 0, 4)).setObjects(("TRANSMODE1100", "trmAlarmActiveName"), ("TRANSMODE1100", "trmAlarmActiveSeverity"), ("TRANSMODE1100", "trmAlarmActiveActTime"), ("TRANSMODE1100", "trmAlarmActiveUnit"), ("TRANSMODE1100", "trmAlarmActiveRackNumber"), ("TRANSMODE1100", "trmAlarmActiveSlotNumber"), ("TRANSMODE1100", "trmAlarmActiveSerialNumber"))
if mibBuilder.loadTexts: trm76xxTrapRxHighPowerLine.setStatus('current')
trm76xxTrapRxLowPowerLine = NotificationType((1, 3, 6, 1, 4, 1, 11857, 1, 2, 2, 4, 2, 0, 5)).setObjects(("TRANSMODE1100", "trmAlarmActiveName"), ("TRANSMODE1100", "trmAlarmActiveSeverity"), ("TRANSMODE1100", "trmAlarmActiveActTime"), ("TRANSMODE1100", "trmAlarmActiveUnit"), ("TRANSMODE1100", "trmAlarmActiveRackNumber"), ("TRANSMODE1100", "trmAlarmActiveSlotNumber"), ("TRANSMODE1100", "trmAlarmActiveSerialNumber"))
if mibBuilder.loadTexts: trm76xxTrapRxLowPowerLine.setStatus('current')
trm76xxTrapLoLLine = NotificationType((1, 3, 6, 1, 4, 1, 11857, 1, 2, 2, 4, 2, 0, 6)).setObjects(("TRANSMODE1100", "trmAlarmActiveName"), ("TRANSMODE1100", "trmAlarmActiveSeverity"), ("TRANSMODE1100", "trmAlarmActiveActTime"), ("TRANSMODE1100", "trmAlarmActiveUnit"), ("TRANSMODE1100", "trmAlarmActiveRackNumber"), ("TRANSMODE1100", "trmAlarmActiveSlotNumber"), ("TRANSMODE1100", "trmAlarmActiveSerialNumber"))
if mibBuilder.loadTexts: trm76xxTrapLoLLine.setStatus('current')
trm76xxTrapTxLine = NotificationType((1, 3, 6, 1, 4, 1, 11857, 1, 2, 2, 4, 2, 0, 7)).setObjects(("TRANSMODE1100", "trmAlarmActiveName"), ("TRANSMODE1100", "trmAlarmActiveSeverity"), ("TRANSMODE1100", "trmAlarmActiveActTime"), ("TRANSMODE1100", "trmAlarmActiveUnit"), ("TRANSMODE1100", "trmAlarmActiveRackNumber"), ("TRANSMODE1100", "trmAlarmActiveSlotNumber"), ("TRANSMODE1100", "trmAlarmActiveSerialNumber"))
if mibBuilder.loadTexts: trm76xxTrapTxLine.setStatus('current')
trm76xxTrapSFPFailureLine = NotificationType((1, 3, 6, 1, 4, 1, 11857, 1, 2, 2, 4, 2, 0, 8)).setObjects(("TRANSMODE1100", "trmAlarmActiveName"), ("TRANSMODE1100", "trmAlarmActiveSeverity"), ("TRANSMODE1100", "trmAlarmActiveActTime"), ("TRANSMODE1100", "trmAlarmActiveUnit"), ("TRANSMODE1100", "trmAlarmActiveRackNumber"), ("TRANSMODE1100", "trmAlarmActiveSlotNumber"), ("TRANSMODE1100", "trmAlarmActiveSerialNumber"))
if mibBuilder.loadTexts: trm76xxTrapSFPFailureLine.setStatus('obsolete')
trm76xxTrapSFPMissingLine = NotificationType((1, 3, 6, 1, 4, 1, 11857, 1, 2, 2, 4, 2, 0, 9)).setObjects(("TRANSMODE1100", "trmAlarmActiveName"), ("TRANSMODE1100", "trmAlarmActiveSeverity"), ("TRANSMODE1100", "trmAlarmActiveActTime"), ("TRANSMODE1100", "trmAlarmActiveUnit"), ("TRANSMODE1100", "trmAlarmActiveRackNumber"), ("TRANSMODE1100", "trmAlarmActiveSlotNumber"), ("TRANSMODE1100", "trmAlarmActiveSerialNumber"))
if mibBuilder.loadTexts: trm76xxTrapSFPMissingLine.setStatus('obsolete')
trm76xxTrapCDRAutoModeRangeChangeClient = NotificationType((1, 3, 6, 1, 4, 1, 11857, 1, 2, 2, 4, 2, 0, 10)).setObjects(("TRANSMODE1100", "trmAlarmActiveName"), ("TRANSMODE1100", "trmAlarmActiveSeverity"), ("TRANSMODE1100", "trmAlarmActiveActTime"), ("TRANSMODE1100", "trmAlarmActiveUnit"), ("TRANSMODE1100", "trmAlarmActiveRackNumber"), ("TRANSMODE1100", "trmAlarmActiveSlotNumber"), ("TRANSMODE1100", "trmAlarmActiveSerialNumber"))
if mibBuilder.loadTexts: trm76xxTrapCDRAutoModeRangeChangeClient.setStatus('current')
trm76xxTrapRxGlitchClient = NotificationType((1, 3, 6, 1, 4, 1, 11857, 1, 2, 2, 4, 2, 0, 11)).setObjects(("TRANSMODE1100", "trmAlarmActiveName"), ("TRANSMODE1100", "trmAlarmActiveSeverity"), ("TRANSMODE1100", "trmAlarmActiveActTime"), ("TRANSMODE1100", "trmAlarmActiveUnit"), ("TRANSMODE1100", "trmAlarmActiveRackNumber"), ("TRANSMODE1100", "trmAlarmActiveSlotNumber"), ("TRANSMODE1100", "trmAlarmActiveSerialNumber"))
if mibBuilder.loadTexts: trm76xxTrapRxGlitchClient.setStatus('current')
trm76xxTrapLopClient = NotificationType((1, 3, 6, 1, 4, 1, 11857, 1, 2, 2, 4, 2, 0, 12)).setObjects(("TRANSMODE1100", "trmAlarmActiveName"), ("TRANSMODE1100", "trmAlarmActiveSeverity"), ("TRANSMODE1100", "trmAlarmActiveActTime"), ("TRANSMODE1100", "trmAlarmActiveUnit"), ("TRANSMODE1100", "trmAlarmActiveRackNumber"), ("TRANSMODE1100", "trmAlarmActiveSlotNumber"), ("TRANSMODE1100", "trmAlarmActiveSerialNumber"))
if mibBuilder.loadTexts: trm76xxTrapLopClient.setStatus('current')
trm76xxTrapRxHighPowerClient = NotificationType((1, 3, 6, 1, 4, 1, 11857, 1, 2, 2, 4, 2, 0, 13)).setObjects(("TRANSMODE1100", "trmAlarmActiveName"), ("TRANSMODE1100", "trmAlarmActiveSeverity"), ("TRANSMODE1100", "trmAlarmActiveActTime"), ("TRANSMODE1100", "trmAlarmActiveUnit"), ("TRANSMODE1100", "trmAlarmActiveRackNumber"), ("TRANSMODE1100", "trmAlarmActiveSlotNumber"), ("TRANSMODE1100", "trmAlarmActiveSerialNumber"))
if mibBuilder.loadTexts: trm76xxTrapRxHighPowerClient.setStatus('obsolete')
trm76xxTrapRxLowPowerClient = NotificationType((1, 3, 6, 1, 4, 1, 11857, 1, 2, 2, 4, 2, 0, 14)).setObjects(("TRANSMODE1100", "trmAlarmActiveName"), ("TRANSMODE1100", "trmAlarmActiveSeverity"), ("TRANSMODE1100", "trmAlarmActiveActTime"), ("TRANSMODE1100", "trmAlarmActiveUnit"), ("TRANSMODE1100", "trmAlarmActiveRackNumber"), ("TRANSMODE1100", "trmAlarmActiveSlotNumber"), ("TRANSMODE1100", "trmAlarmActiveSerialNumber"))
if mibBuilder.loadTexts: trm76xxTrapRxLowPowerClient.setStatus('obsolete')
trm76xxTrapLoLClient = NotificationType((1, 3, 6, 1, 4, 1, 11857, 1, 2, 2, 4, 2, 0, 15)).setObjects(("TRANSMODE1100", "trmAlarmActiveName"), ("TRANSMODE1100", "trmAlarmActiveSeverity"), ("TRANSMODE1100", "trmAlarmActiveActTime"), ("TRANSMODE1100", "trmAlarmActiveUnit"), ("TRANSMODE1100", "trmAlarmActiveRackNumber"), ("TRANSMODE1100", "trmAlarmActiveSlotNumber"), ("TRANSMODE1100", "trmAlarmActiveSerialNumber"))
if mibBuilder.loadTexts: trm76xxTrapLoLClient.setStatus('current')
trm76xxTrapTxClient = NotificationType((1, 3, 6, 1, 4, 1, 11857, 1, 2, 2, 4, 2, 0, 16)).setObjects(("TRANSMODE1100", "trmAlarmActiveName"), ("TRANSMODE1100", "trmAlarmActiveSeverity"), ("TRANSMODE1100", "trmAlarmActiveActTime"), ("TRANSMODE1100", "trmAlarmActiveUnit"), ("TRANSMODE1100", "trmAlarmActiveRackNumber"), ("TRANSMODE1100", "trmAlarmActiveSlotNumber"), ("TRANSMODE1100", "trmAlarmActiveSerialNumber"))
if mibBuilder.loadTexts: trm76xxTrapTxClient.setStatus('current')
trm76xxTrapSFPFailureClient = NotificationType((1, 3, 6, 1, 4, 1, 11857, 1, 2, 2, 4, 2, 0, 17)).setObjects(("TRANSMODE1100", "trmAlarmActiveName"), ("TRANSMODE1100", "trmAlarmActiveSeverity"), ("TRANSMODE1100", "trmAlarmActiveActTime"), ("TRANSMODE1100", "trmAlarmActiveUnit"), ("TRANSMODE1100", "trmAlarmActiveRackNumber"), ("TRANSMODE1100", "trmAlarmActiveSlotNumber"), ("TRANSMODE1100", "trmAlarmActiveSerialNumber"))
if mibBuilder.loadTexts: trm76xxTrapSFPFailureClient.setStatus('current')
trm76xxTrapSFPMissingClient = NotificationType((1, 3, 6, 1, 4, 1, 11857, 1, 2, 2, 4, 2, 0, 18)).setObjects(("TRANSMODE1100", "trmAlarmActiveName"), ("TRANSMODE1100", "trmAlarmActiveSeverity"), ("TRANSMODE1100", "trmAlarmActiveActTime"), ("TRANSMODE1100", "trmAlarmActiveUnit"), ("TRANSMODE1100", "trmAlarmActiveRackNumber"), ("TRANSMODE1100", "trmAlarmActiveSlotNumber"), ("TRANSMODE1100", "trmAlarmActiveSerialNumber"))
if mibBuilder.loadTexts: trm76xxTrapSFPMissingClient.setStatus('current')
trm76xxTrapTxDisable = NotificationType((1, 3, 6, 1, 4, 1, 11857, 1, 2, 2, 4, 2, 0, 19)).setObjects(("TRANSMODE1100", "trmAlarmActiveName"), ("TRANSMODE1100", "trmAlarmActiveSeverity"), ("TRANSMODE1100", "trmAlarmActiveActTime"), ("TRANSMODE1100", "trmAlarmActiveUnit"), ("TRANSMODE1100", "trmAlarmActiveRackNumber"), ("TRANSMODE1100", "trmAlarmActiveSlotNumber"), ("TRANSMODE1100", "trmAlarmActiveSerialNumber"))
if mibBuilder.loadTexts: trm76xxTrapTxDisable.setStatus('current')
trm76xxTrapLaserDegradationLine = NotificationType((1, 3, 6, 1, 4, 1, 11857, 1, 2, 2, 4, 2, 0, 20)).setObjects(("TRANSMODE1100", "trmAlarmActiveName"), ("TRANSMODE1100", "trmAlarmActiveSeverity"), ("TRANSMODE1100", "trmAlarmActiveActTime"), ("TRANSMODE1100", "trmAlarmActiveUnit"), ("TRANSMODE1100", "trmAlarmActiveRackNumber"), ("TRANSMODE1100", "trmAlarmActiveSlotNumber"), ("TRANSMODE1100", "trmAlarmActiveSerialNumber"))
if mibBuilder.loadTexts: trm76xxTrapLaserDegradationLine.setStatus('current')
trm76xxTrapEyeQualityLine = NotificationType((1, 3, 6, 1, 4, 1, 11857, 1, 2, 2, 4, 2, 0, 21)).setObjects(("TRANSMODE1100", "trmAlarmActiveName"), ("TRANSMODE1100", "trmAlarmActiveSeverity"), ("TRANSMODE1100", "trmAlarmActiveActTime"), ("TRANSMODE1100", "trmAlarmActiveUnit"), ("TRANSMODE1100", "trmAlarmActiveRackNumber"), ("TRANSMODE1100", "trmAlarmActiveSlotNumber"), ("TRANSMODE1100", "trmAlarmActiveSerialNumber"))
if mibBuilder.loadTexts: trm76xxTrapEyeQualityLine.setStatus('current')
trm76xxTrapEyeQualityClient = NotificationType((1, 3, 6, 1, 4, 1, 11857, 1, 2, 2, 4, 2, 0, 22)).setObjects(("TRANSMODE1100", "trmAlarmActiveName"), ("TRANSMODE1100", "trmAlarmActiveSeverity"), ("TRANSMODE1100", "trmAlarmActiveActTime"), ("TRANSMODE1100", "trmAlarmActiveUnit"), ("TRANSMODE1100", "trmAlarmActiveRackNumber"), ("TRANSMODE1100", "trmAlarmActiveSlotNumber"), ("TRANSMODE1100", "trmAlarmActiveSerialNumber"))
if mibBuilder.loadTexts: trm76xxTrapEyeQualityClient.setStatus('current')
trm803x = MibIdentifier((1, 3, 6, 1, 4, 1, 11857, 1, 2, 2, 5))
trm803xPM = MibIdentifier((1, 3, 6, 1, 4, 1, 11857, 1, 2, 2, 5, 1))
trm803xTable = MibTable((1, 3, 6, 1, 4, 1, 11857, 1, 2, 2, 5, 1, 1), )
if mibBuilder.loadTexts: trm803xTable.setStatus('current')
trm803xEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11857, 1, 2, 2, 5, 1, 1, 1), ).setIndexNames((0, "TRANSMODE1100", "trm803xRackNumber"), (0, "TRANSMODE1100", "trm803xSlotNumber"))
if mibBuilder.loadTexts: trm803xEntry.setStatus('current')
trm803xRackNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 11857, 1, 2, 2, 5, 1, 1, 1, 1), RackNumber())
if mibBuilder.loadTexts: trm803xRackNumber.setStatus('current')
trm803xSlotNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 11857, 1, 2, 2, 5, 1, 1, 1, 2), Integer32())
if mibBuilder.loadTexts: trm803xSlotNumber.setStatus('current')
trm803xMuxType = MibTableColumn((1, 3, 6, 1, 4, 1, 11857, 1, 2, 2, 5, 1, 1, 1, 3), MuxType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trm803xMuxType.setStatus('current')
trm803xIDStringLine = MibTableColumn((1, 3, 6, 1, 4, 1, 11857, 1, 2, 2, 5, 1, 1, 1, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: trm803xIDStringLine.setStatus('current')
trm803xIPAddressLine = MibTableColumn((1, 3, 6, 1, 4, 1, 11857, 1, 2, 2, 5, 1, 1, 1, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: trm803xIPAddressLine.setStatus('current')
trm2204 = MibIdentifier((1, 3, 6, 1, 4, 1, 11857, 1, 2, 2, 6))
trm2204PM = MibIdentifier((1, 3, 6, 1, 4, 1, 11857, 1, 2, 2, 6, 1))
trm2204Table = MibTable((1, 3, 6, 1, 4, 1, 11857, 1, 2, 2, 6, 1, 1), )
if mibBuilder.loadTexts: trm2204Table.setStatus('current')
trm2204Entry = MibTableRow((1, 3, 6, 1, 4, 1, 11857, 1, 2, 2, 6, 1, 1, 1), ).setIndexNames((0, "TRANSMODE1100", "trm2204RackNumber"), (0, "TRANSMODE1100", "trm2204SlotNumber"))
if mibBuilder.loadTexts: trm2204Entry.setStatus('current')
trm2204RackNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 11857, 1, 2, 2, 6, 1, 1, 1, 1), RackNumber())
if mibBuilder.loadTexts: trm2204RackNumber.setStatus('current')
trm2204SlotNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 11857, 1, 2, 2, 6, 1, 1, 1, 2), Integer32())
if mibBuilder.loadTexts: trm2204SlotNumber.setStatus('current')
trm2204SecurityMode = MibTableColumn((1, 3, 6, 1, 4, 1, 11857, 1, 2, 2, 6, 1, 1, 1, 3), SecurityMode()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: trm2204SecurityMode.setStatus('current')
trm26xx = MibIdentifier((1, 3, 6, 1, 4, 1, 11857, 1, 2, 2, 7))
trm26xxPM = MibIdentifier((1, 3, 6, 1, 4, 1, 11857, 1, 2, 2, 7, 1))
trm26xxTable = MibTable((1, 3, 6, 1, 4, 1, 11857, 1, 2, 2, 7, 1, 1), )
if mibBuilder.loadTexts: trm26xxTable.setStatus('current')
trm26xxEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11857, 1, 2, 2, 7, 1, 1, 1), ).setIndexNames((0, "TRANSMODE1100", "trm26xxRackNumber"), (0, "TRANSMODE1100", "trm26xxSlotNumber"))
if mibBuilder.loadTexts: trm26xxEntry.setStatus('current')
trm26xxRackNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 11857, 1, 2, 2, 7, 1, 1, 1, 1), RackNumber())
if mibBuilder.loadTexts: trm26xxRackNumber.setStatus('current')
trm26xxSlotNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 11857, 1, 2, 2, 7, 1, 1, 1, 2), BoardNumber())
if mibBuilder.loadTexts: trm26xxSlotNumber.setStatus('current')
trm26xxStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11857, 1, 2, 2, 7, 1, 1, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trm26xxStatus.setStatus('current')
trm26xxTemperature = MibTableColumn((1, 3, 6, 1, 4, 1, 11857, 1, 2, 2, 7, 1, 1, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trm26xxTemperature.setStatus('current')
trm26xxTxMode = MibTableColumn((1, 3, 6, 1, 4, 1, 11857, 1, 2, 2, 7, 1, 1, 1, 5), TxMode75()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: trm26xxTxMode.setStatus('current')
trm26xxSwReset = MibTableColumn((1, 3, 6, 1, 4, 1, 11857, 1, 2, 2, 7, 1, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("reset", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: trm26xxSwReset.setStatus('current')
trm26xxOpticalPowerPIN1 = MibTableColumn((1, 3, 6, 1, 4, 1, 11857, 1, 2, 2, 7, 1, 1, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trm26xxOpticalPowerPIN1.setStatus('current')
trm26xxOpticalPowerPIN2 = MibTableColumn((1, 3, 6, 1, 4, 1, 11857, 1, 2, 2, 7, 1, 1, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trm26xxOpticalPowerPIN2.setStatus('current')
trm26xxLogOpticalPower = MibTableColumn((1, 3, 6, 1, 4, 1, 11857, 1, 2, 2, 7, 1, 1, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trm26xxLogOpticalPower.setStatus('current')
trm26xxTemperatureTEC1 = MibTableColumn((1, 3, 6, 1, 4, 1, 11857, 1, 2, 2, 7, 1, 1, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trm26xxTemperatureTEC1.setStatus('current')
trm26xxTemperatureTEC2 = MibTableColumn((1, 3, 6, 1, 4, 1, 11857, 1, 2, 2, 7, 1, 1, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trm26xxTemperatureTEC2.setStatus('current')
trm26xxVoltageTEC1 = MibTableColumn((1, 3, 6, 1, 4, 1, 11857, 1, 2, 2, 7, 1, 1, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trm26xxVoltageTEC1.setStatus('current')
trm26xxVoltageTEC2 = MibTableColumn((1, 3, 6, 1, 4, 1, 11857, 1, 2, 2, 7, 1, 1, 1, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trm26xxVoltageTEC2.setStatus('obsolete')
trm26xxCurrentTEC1 = MibTableColumn((1, 3, 6, 1, 4, 1, 11857, 1, 2, 2, 7, 1, 1, 1, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trm26xxCurrentTEC1.setStatus('current')
trm26xxCurrentTEC2 = MibTableColumn((1, 3, 6, 1, 4, 1, 11857, 1, 2, 2, 7, 1, 1, 1, 15), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trm26xxCurrentTEC2.setStatus('current')
trm26xxCurrentBIAS1 = MibTableColumn((1, 3, 6, 1, 4, 1, 11857, 1, 2, 2, 7, 1, 1, 1, 16), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trm26xxCurrentBIAS1.setStatus('current')
trm26xxCurrentBIAS2 = MibTableColumn((1, 3, 6, 1, 4, 1, 11857, 1, 2, 2, 7, 1, 1, 1, 17), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trm26xxCurrentBIAS2.setStatus('current')
trm26xxVoltageBIAS1 = MibTableColumn((1, 3, 6, 1, 4, 1, 11857, 1, 2, 2, 7, 1, 1, 1, 18), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trm26xxVoltageBIAS1.setStatus('current')
trm26xxVoltageBIAS2 = MibTableColumn((1, 3, 6, 1, 4, 1, 11857, 1, 2, 2, 7, 1, 1, 1, 19), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trm26xxVoltageBIAS2.setStatus('current')
trm26xxFM = MibIdentifier((1, 3, 6, 1, 4, 1, 11857, 1, 2, 2, 7, 2))
trm26xxTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 11857, 1, 2, 2, 7, 2, 0))
trm26xxTrapTEC1Faulty = NotificationType((1, 3, 6, 1, 4, 1, 11857, 1, 2, 2, 7, 2, 0, 1)).setObjects(("TRANSMODE1100", "trmAlarmActiveName"), ("TRANSMODE1100", "trmAlarmActiveSeverity"), ("TRANSMODE1100", "trmAlarmActiveActTime"), ("TRANSMODE1100", "trmAlarmActiveUnit"), ("TRANSMODE1100", "trmAlarmActiveRackNumber"), ("TRANSMODE1100", "trmAlarmActiveSlotNumber"), ("TRANSMODE1100", "trmAlarmActiveSerialNumber"))
if mibBuilder.loadTexts: trm26xxTrapTEC1Faulty.setStatus('current')
trm26xxTrapTEC2Faulty = NotificationType((1, 3, 6, 1, 4, 1, 11857, 1, 2, 2, 7, 2, 0, 2)).setObjects(("TRANSMODE1100", "trmAlarmActiveName"), ("TRANSMODE1100", "trmAlarmActiveSeverity"), ("TRANSMODE1100", "trmAlarmActiveActTime"), ("TRANSMODE1100", "trmAlarmActiveUnit"), ("TRANSMODE1100", "trmAlarmActiveRackNumber"), ("TRANSMODE1100", "trmAlarmActiveSlotNumber"), ("TRANSMODE1100", "trmAlarmActiveSerialNumber"))
if mibBuilder.loadTexts: trm26xxTrapTEC2Faulty.setStatus('current')
trm26xxTrapBIAS1Faulty = NotificationType((1, 3, 6, 1, 4, 1, 11857, 1, 2, 2, 7, 2, 0, 3)).setObjects(("TRANSMODE1100", "trmAlarmActiveName"), ("TRANSMODE1100", "trmAlarmActiveSeverity"), ("TRANSMODE1100", "trmAlarmActiveActTime"), ("TRANSMODE1100", "trmAlarmActiveUnit"), ("TRANSMODE1100", "trmAlarmActiveRackNumber"), ("TRANSMODE1100", "trmAlarmActiveSlotNumber"), ("TRANSMODE1100", "trmAlarmActiveSerialNumber"))
if mibBuilder.loadTexts: trm26xxTrapBIAS1Faulty.setStatus('current')
trm26xxTrapBIAS2Faulty = NotificationType((1, 3, 6, 1, 4, 1, 11857, 1, 2, 2, 7, 2, 0, 4)).setObjects(("TRANSMODE1100", "trmAlarmActiveName"), ("TRANSMODE1100", "trmAlarmActiveSeverity"), ("TRANSMODE1100", "trmAlarmActiveActTime"), ("TRANSMODE1100", "trmAlarmActiveUnit"), ("TRANSMODE1100", "trmAlarmActiveRackNumber"), ("TRANSMODE1100", "trmAlarmActiveSlotNumber"), ("TRANSMODE1100", "trmAlarmActiveSerialNumber"))
if mibBuilder.loadTexts: trm26xxTrapBIAS2Faulty.setStatus('current')
trm26xxTrapPIUTempShutdown = NotificationType((1, 3, 6, 1, 4, 1, 11857, 1, 2, 2, 7, 2, 0, 5)).setObjects(("TRANSMODE1100", "trmAlarmActiveName"), ("TRANSMODE1100", "trmAlarmActiveSeverity"), ("TRANSMODE1100", "trmAlarmActiveActTime"), ("TRANSMODE1100", "trmAlarmActiveUnit"), ("TRANSMODE1100", "trmAlarmActiveRackNumber"), ("TRANSMODE1100", "trmAlarmActiveSlotNumber"), ("TRANSMODE1100", "trmAlarmActiveSerialNumber"))
if mibBuilder.loadTexts: trm26xxTrapPIUTempShutdown.setStatus('current')
trm26xxTrapOpticalLinkdown = NotificationType((1, 3, 6, 1, 4, 1, 11857, 1, 2, 2, 7, 2, 0, 6)).setObjects(("TRANSMODE1100", "trmAlarmActiveName"), ("TRANSMODE1100", "trmAlarmActiveSeverity"), ("TRANSMODE1100", "trmAlarmActiveActTime"), ("TRANSMODE1100", "trmAlarmActiveUnit"), ("TRANSMODE1100", "trmAlarmActiveRackNumber"), ("TRANSMODE1100", "trmAlarmActiveSlotNumber"), ("TRANSMODE1100", "trmAlarmActiveSerialNumber"))
if mibBuilder.loadTexts: trm26xxTrapOpticalLinkdown.setStatus('current')
trm26xxTrapTxDisable = NotificationType((1, 3, 6, 1, 4, 1, 11857, 1, 2, 2, 7, 2, 0, 7)).setObjects(("TRANSMODE1100", "trmAlarmActiveName"), ("TRANSMODE1100", "trmAlarmActiveSeverity"), ("TRANSMODE1100", "trmAlarmActiveActTime"), ("TRANSMODE1100", "trmAlarmActiveUnit"), ("TRANSMODE1100", "trmAlarmActiveRackNumber"), ("TRANSMODE1100", "trmAlarmActiveSlotNumber"), ("TRANSMODE1100", "trmAlarmActiveSerialNumber"))
if mibBuilder.loadTexts: trm26xxTrapTxDisable.setStatus('current')
trm25xx = MibIdentifier((1, 3, 6, 1, 4, 1, 11857, 1, 2, 2, 8))
trm25xxPM = MibIdentifier((1, 3, 6, 1, 4, 1, 11857, 1, 2, 2, 8, 1))
trm25xxTable = MibTable((1, 3, 6, 1, 4, 1, 11857, 1, 2, 2, 8, 1, 1), )
if mibBuilder.loadTexts: trm25xxTable.setStatus('current')
trm25xxEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11857, 1, 2, 2, 8, 1, 1, 1), ).setIndexNames((0, "TRANSMODE1100", "trm25xxRackNumber"), (0, "TRANSMODE1100", "trm25xxSlotNumber"))
if mibBuilder.loadTexts: trm25xxEntry.setStatus('current')
trm25xxRackNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 11857, 1, 2, 2, 8, 1, 1, 1, 1), RackNumber())
if mibBuilder.loadTexts: trm25xxRackNumber.setStatus('current')
trm25xxSlotNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 11857, 1, 2, 2, 8, 1, 1, 1, 2), BoardNumber())
if mibBuilder.loadTexts: trm25xxSlotNumber.setStatus('current')
trm25xxWorkingLineStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11857, 1, 2, 2, 8, 1, 1, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trm25xxWorkingLineStatus.setStatus('current')
trm25xxProtectingLineStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11857, 1, 2, 2, 8, 1, 1, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trm25xxProtectingLineStatus.setStatus('current')
trm25xxTemperature = MibTableColumn((1, 3, 6, 1, 4, 1, 11857, 1, 2, 2, 8, 1, 1, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trm25xxTemperature.setStatus('current')
trm25xxSwReset = MibTableColumn((1, 3, 6, 1, 4, 1, 11857, 1, 2, 2, 8, 1, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("reset", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: trm25xxSwReset.setStatus('current')
trm25xxRxLine = MibTableColumn((1, 3, 6, 1, 4, 1, 11857, 1, 2, 2, 8, 1, 1, 1, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trm25xxRxLine.setStatus('current')
trm25xxOpticalInPowLine = MibTableColumn((1, 3, 6, 1, 4, 1, 11857, 1, 2, 2, 8, 1, 1, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trm25xxOpticalInPowLine.setStatus('current')
trm25xxSpeedLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 11857, 1, 2, 2, 8, 1, 1, 1, 9), SpeedLimit76()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: trm25xxSpeedLimit.setStatus('current')
trm25xxEstProtLine = MibTableColumn((1, 3, 6, 1, 4, 1, 11857, 1, 2, 2, 8, 1, 1, 1, 10), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trm25xxEstProtLine.setStatus('current')
trm25xxEstFibRateLine = MibTableColumn((1, 3, 6, 1, 4, 1, 11857, 1, 2, 2, 8, 1, 1, 1, 11), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trm25xxEstFibRateLine.setStatus('current')
trm25xxTxLine = MibTableColumn((1, 3, 6, 1, 4, 1, 11857, 1, 2, 2, 8, 1, 1, 1, 12), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trm25xxTxLine.setStatus('current')
trm25xxOpticalOutPowLine = MibTableColumn((1, 3, 6, 1, 4, 1, 11857, 1, 2, 2, 8, 1, 1, 1, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trm25xxOpticalOutPowLine.setStatus('current')
trm25xxProdOutPowLine = MibTableColumn((1, 3, 6, 1, 4, 1, 11857, 1, 2, 2, 8, 1, 1, 1, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trm25xxProdOutPowLine.setStatus('current')
trm25xxLaserBiasCurLine = MibTableColumn((1, 3, 6, 1, 4, 1, 11857, 1, 2, 2, 8, 1, 1, 1, 15), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trm25xxLaserBiasCurLine.setStatus('current')
trm25xxProdLaserBiasCurLine = MibTableColumn((1, 3, 6, 1, 4, 1, 11857, 1, 2, 2, 8, 1, 1, 1, 16), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trm25xxProdLaserBiasCurLine.setStatus('current')
trm25xxCDR = MibTableColumn((1, 3, 6, 1, 4, 1, 11857, 1, 2, 2, 8, 1, 1, 1, 17), CDRMode()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: trm25xxCDR.setStatus('current')
trm25xxCustomFibRate = MibTableColumn((1, 3, 6, 1, 4, 1, 11857, 1, 2, 2, 8, 1, 1, 1, 18), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: trm25xxCustomFibRate.setStatus('current')
trm25xxTxMode = MibTableColumn((1, 3, 6, 1, 4, 1, 11857, 1, 2, 2, 8, 1, 1, 1, 19), TxMode76()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: trm25xxTxMode.setStatus('current')
trm25xxFM = MibIdentifier((1, 3, 6, 1, 4, 1, 11857, 1, 2, 2, 8, 2))
trm25xxTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 11857, 1, 2, 2, 8, 2, 0))
trm25xxTrapWorkingLineFailure = NotificationType((1, 3, 6, 1, 4, 1, 11857, 1, 2, 2, 8, 2, 0, 1)).setObjects(("TRANSMODE1100", "trmAlarmActiveName"), ("TRANSMODE1100", "trmAlarmActiveSeverity"), ("TRANSMODE1100", "trmAlarmActiveActTime"), ("TRANSMODE1100", "trmAlarmActiveUnit"), ("TRANSMODE1100", "trmAlarmActiveRackNumber"), ("TRANSMODE1100", "trmAlarmActiveSlotNumber"), ("TRANSMODE1100", "trmAlarmActiveSerialNumber"))
if mibBuilder.loadTexts: trm25xxTrapWorkingLineFailure.setStatus('current')
trm25xxTrapProtectingLineFailure = NotificationType((1, 3, 6, 1, 4, 1, 11857, 1, 2, 2, 8, 2, 0, 2)).setObjects(("TRANSMODE1100", "trmAlarmActiveName"), ("TRANSMODE1100", "trmAlarmActiveSeverity"), ("TRANSMODE1100", "trmAlarmActiveActTime"), ("TRANSMODE1100", "trmAlarmActiveUnit"), ("TRANSMODE1100", "trmAlarmActiveRackNumber"), ("TRANSMODE1100", "trmAlarmActiveSlotNumber"), ("TRANSMODE1100", "trmAlarmActiveSerialNumber"))
if mibBuilder.loadTexts: trm25xxTrapProtectingLineFailure.setStatus('current')
trm25xxTrapWorkingAndProtectingLineFailure = NotificationType((1, 3, 6, 1, 4, 1, 11857, 1, 2, 2, 8, 2, 0, 3)).setObjects(("TRANSMODE1100", "trmAlarmActiveName"), ("TRANSMODE1100", "trmAlarmActiveSeverity"), ("TRANSMODE1100", "trmAlarmActiveActTime"), ("TRANSMODE1100", "trmAlarmActiveUnit"), ("TRANSMODE1100", "trmAlarmActiveRackNumber"), ("TRANSMODE1100", "trmAlarmActiveSlotNumber"), ("TRANSMODE1100", "trmAlarmActiveSerialNumber"))
if mibBuilder.loadTexts: trm25xxTrapWorkingAndProtectingLineFailure.setStatus('current')
trm53005500 = MibIdentifier((1, 3, 6, 1, 4, 1, 11857, 1, 2, 2, 9))
trm53005500PM = MibIdentifier((1, 3, 6, 1, 4, 1, 11857, 1, 2, 2, 9, 1))
trm53005500Table = MibTable((1, 3, 6, 1, 4, 1, 11857, 1, 2, 2, 9, 1, 1), )
if mibBuilder.loadTexts: trm53005500Table.setStatus('current')
trm53005500Entry = MibTableRow((1, 3, 6, 1, 4, 1, 11857, 1, 2, 2, 9, 1, 1, 1), ).setIndexNames((0, "TRANSMODE1100", "trm53005500RackNumber"), (0, "TRANSMODE1100", "trm53005500SlotNumber"))
if mibBuilder.loadTexts: trm53005500Entry.setStatus('current')
trm53005500RackNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 11857, 1, 2, 2, 9, 1, 1, 1, 1), RackNumber())
if mibBuilder.loadTexts: trm53005500RackNumber.setStatus('current')
trm53005500SlotNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 11857, 1, 2, 2, 9, 1, 1, 1, 2), BoardNumber())
if mibBuilder.loadTexts: trm53005500SlotNumber.setStatus('current')
trm53005500Temperature = MibTableColumn((1, 3, 6, 1, 4, 1, 11857, 1, 2, 2, 9, 1, 1, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trm53005500Temperature.setStatus('current')
trm53005500SwReset = MibTableColumn((1, 3, 6, 1, 4, 1, 11857, 1, 2, 2, 9, 1, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("reset", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: trm53005500SwReset.setStatus('current')
trm53005500WavelengthLine = MibTableColumn((1, 3, 6, 1, 4, 1, 11857, 1, 2, 2, 9, 1, 1, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trm53005500WavelengthLine.setStatus('current')
trm53005500RxLine = MibTableColumn((1, 3, 6, 1, 4, 1, 11857, 1, 2, 2, 9, 1, 1, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trm53005500RxLine.setStatus('current')
trm53005500OpticalInPowLine = MibTableColumn((1, 3, 6, 1, 4, 1, 11857, 1, 2, 2, 9, 1, 1, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trm53005500OpticalInPowLine.setStatus('current')
trm53005500TxLine = MibTableColumn((1, 3, 6, 1, 4, 1, 11857, 1, 2, 2, 9, 1, 1, 1, 8), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trm53005500TxLine.setStatus('current')
trm53005500TxModeLine = MibTableColumn((1, 3, 6, 1, 4, 1, 11857, 1, 2, 2, 9, 1, 1, 1, 9), TxMode75()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: trm53005500TxModeLine.setStatus('current')
trm53005500WavelengthClient1 = MibTableColumn((1, 3, 6, 1, 4, 1, 11857, 1, 2, 2, 9, 1, 1, 1, 10), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trm53005500WavelengthClient1.setStatus('current')
trm53005500RxClient1 = MibTableColumn((1, 3, 6, 1, 4, 1, 11857, 1, 2, 2, 9, 1, 1, 1, 11), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trm53005500RxClient1.setStatus('current')
trm53005500CDRClient1 = MibTableColumn((1, 3, 6, 1, 4, 1, 11857, 1, 2, 2, 9, 1, 1, 1, 12), CDR55Mode()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: trm53005500CDRClient1.setStatus('current')
trm53005500TxClient1 = MibTableColumn((1, 3, 6, 1, 4, 1, 11857, 1, 2, 2, 9, 1, 1, 1, 13), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trm53005500TxClient1.setStatus('current')
trm53005500TxModeClient1 = MibTableColumn((1, 3, 6, 1, 4, 1, 11857, 1, 2, 2, 9, 1, 1, 1, 14), TxMode76()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: trm53005500TxModeClient1.setStatus('current')
trm53005500IDStringClient1 = MibTableColumn((1, 3, 6, 1, 4, 1, 11857, 1, 2, 2, 9, 1, 1, 1, 15), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: trm53005500IDStringClient1.setStatus('current')
trm53005500IPAddressClient1 = MibTableColumn((1, 3, 6, 1, 4, 1, 11857, 1, 2, 2, 9, 1, 1, 1, 16), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: trm53005500IPAddressClient1.setStatus('current')
trm53005500WavelengthClient2 = MibTableColumn((1, 3, 6, 1, 4, 1, 11857, 1, 2, 2, 9, 1, 1, 1, 17), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trm53005500WavelengthClient2.setStatus('current')
trm53005500RxClient2 = MibTableColumn((1, 3, 6, 1, 4, 1, 11857, 1, 2, 2, 9, 1, 1, 1, 18), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trm53005500RxClient2.setStatus('current')
trm53005500CDRClient2 = MibTableColumn((1, 3, 6, 1, 4, 1, 11857, 1, 2, 2, 9, 1, 1, 1, 19), CDR55Mode()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: trm53005500CDRClient2.setStatus('current')
trm53005500TxClient2 = MibTableColumn((1, 3, 6, 1, 4, 1, 11857, 1, 2, 2, 9, 1, 1, 1, 20), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trm53005500TxClient2.setStatus('current')
trm53005500TxModeClient2 = MibTableColumn((1, 3, 6, 1, 4, 1, 11857, 1, 2, 2, 9, 1, 1, 1, 21), TxMode76()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: trm53005500TxModeClient2.setStatus('current')
trm53005500IDStringClient2 = MibTableColumn((1, 3, 6, 1, 4, 1, 11857, 1, 2, 2, 9, 1, 1, 1, 22), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: trm53005500IDStringClient2.setStatus('current')
trm53005500IPAddressClient2 = MibTableColumn((1, 3, 6, 1, 4, 1, 11857, 1, 2, 2, 9, 1, 1, 1, 23), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: trm53005500IPAddressClient2.setStatus('current')
trm53005500WavelengthClient3 = MibTableColumn((1, 3, 6, 1, 4, 1, 11857, 1, 2, 2, 9, 1, 1, 1, 24), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trm53005500WavelengthClient3.setStatus('current')
trm53005500RxClient3 = MibTableColumn((1, 3, 6, 1, 4, 1, 11857, 1, 2, 2, 9, 1, 1, 1, 25), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trm53005500RxClient3.setStatus('current')
trm53005500CDRClient3 = MibTableColumn((1, 3, 6, 1, 4, 1, 11857, 1, 2, 2, 9, 1, 1, 1, 26), CDR55Mode()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: trm53005500CDRClient3.setStatus('current')
trm53005500TxClient3 = MibTableColumn((1, 3, 6, 1, 4, 1, 11857, 1, 2, 2, 9, 1, 1, 1, 27), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trm53005500TxClient3.setStatus('current')
trm53005500TxModeClient3 = MibTableColumn((1, 3, 6, 1, 4, 1, 11857, 1, 2, 2, 9, 1, 1, 1, 28), TxMode76()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: trm53005500TxModeClient3.setStatus('current')
trm53005500IDStringClient3 = MibTableColumn((1, 3, 6, 1, 4, 1, 11857, 1, 2, 2, 9, 1, 1, 1, 29), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: trm53005500IDStringClient3.setStatus('current')
trm53005500IPAddressClient3 = MibTableColumn((1, 3, 6, 1, 4, 1, 11857, 1, 2, 2, 9, 1, 1, 1, 30), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: trm53005500IPAddressClient3.setStatus('current')
trm53005500WavelengthClient4 = MibTableColumn((1, 3, 6, 1, 4, 1, 11857, 1, 2, 2, 9, 1, 1, 1, 31), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trm53005500WavelengthClient4.setStatus('current')
trm53005500RxClient4 = MibTableColumn((1, 3, 6, 1, 4, 1, 11857, 1, 2, 2, 9, 1, 1, 1, 32), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trm53005500RxClient4.setStatus('current')
trm53005500CDRClient4 = MibTableColumn((1, 3, 6, 1, 4, 1, 11857, 1, 2, 2, 9, 1, 1, 1, 33), CDR55Mode()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: trm53005500CDRClient4.setStatus('current')
trm53005500TxClient4 = MibTableColumn((1, 3, 6, 1, 4, 1, 11857, 1, 2, 2, 9, 1, 1, 1, 34), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trm53005500TxClient4.setStatus('current')
trm53005500TxModeClient4 = MibTableColumn((1, 3, 6, 1, 4, 1, 11857, 1, 2, 2, 9, 1, 1, 1, 35), TxMode76()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: trm53005500TxModeClient4.setStatus('current')
trm53005500IDStringClient4 = MibTableColumn((1, 3, 6, 1, 4, 1, 11857, 1, 2, 2, 9, 1, 1, 1, 36), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: trm53005500IDStringClient4.setStatus('current')
trm53005500IPAddressClient4 = MibTableColumn((1, 3, 6, 1, 4, 1, 11857, 1, 2, 2, 9, 1, 1, 1, 37), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: trm53005500IPAddressClient4.setStatus('current')
trm53005500FM = MibIdentifier((1, 3, 6, 1, 4, 1, 11857, 1, 2, 2, 9, 2))
trm53005500Traps = MibIdentifier((1, 3, 6, 1, 4, 1, 11857, 1, 2, 2, 9, 2, 0))
trm53005500TrapRxLinkdownLine = NotificationType((1, 3, 6, 1, 4, 1, 11857, 1, 2, 2, 9, 2, 0, 1)).setObjects(("TRANSMODE1100", "trmAlarmActiveName"), ("TRANSMODE1100", "trmAlarmActiveSeverity"), ("TRANSMODE1100", "trmAlarmActiveActTime"), ("TRANSMODE1100", "trmAlarmActiveUnit"), ("TRANSMODE1100", "trmAlarmActiveRackNumber"), ("TRANSMODE1100", "trmAlarmActiveSlotNumber"), ("TRANSMODE1100", "trmAlarmActiveSerialNumber"))
if mibBuilder.loadTexts: trm53005500TrapRxLinkdownLine.setStatus('current')
trm53005500TrapExternalsyncFailureLine = NotificationType((1, 3, 6, 1, 4, 1, 11857, 1, 2, 2, 9, 2, 0, 2)).setObjects(("TRANSMODE1100", "trmAlarmActiveName"), ("TRANSMODE1100", "trmAlarmActiveSeverity"), ("TRANSMODE1100", "trmAlarmActiveActTime"), ("TRANSMODE1100", "trmAlarmActiveUnit"), ("TRANSMODE1100", "trmAlarmActiveRackNumber"), ("TRANSMODE1100", "trmAlarmActiveSlotNumber"), ("TRANSMODE1100", "trmAlarmActiveSerialNumber"))
if mibBuilder.loadTexts: trm53005500TrapExternalsyncFailureLine.setStatus('current')
trm53005500TrapSfpMissingLine = NotificationType((1, 3, 6, 1, 4, 1, 11857, 1, 2, 2, 9, 2, 0, 3)).setObjects(("TRANSMODE1100", "trmAlarmActiveName"), ("TRANSMODE1100", "trmAlarmActiveSeverity"), ("TRANSMODE1100", "trmAlarmActiveActTime"), ("TRANSMODE1100", "trmAlarmActiveUnit"), ("TRANSMODE1100", "trmAlarmActiveRackNumber"), ("TRANSMODE1100", "trmAlarmActiveSlotNumber"), ("TRANSMODE1100", "trmAlarmActiveSerialNumber"))
if mibBuilder.loadTexts: trm53005500TrapSfpMissingLine.setStatus('current')
trm53005500TrapSfpBadTypeLine = NotificationType((1, 3, 6, 1, 4, 1, 11857, 1, 2, 2, 9, 2, 0, 4)).setObjects(("TRANSMODE1100", "trmAlarmActiveName"), ("TRANSMODE1100", "trmAlarmActiveSeverity"), ("TRANSMODE1100", "trmAlarmActiveActTime"), ("TRANSMODE1100", "trmAlarmActiveUnit"), ("TRANSMODE1100", "trmAlarmActiveRackNumber"), ("TRANSMODE1100", "trmAlarmActiveSlotNumber"), ("TRANSMODE1100", "trmAlarmActiveSerialNumber"))
if mibBuilder.loadTexts: trm53005500TrapSfpBadTypeLine.setStatus('current')
trm53005500TrapSfpFaultyLine = NotificationType((1, 3, 6, 1, 4, 1, 11857, 1, 2, 2, 9, 2, 0, 5)).setObjects(("TRANSMODE1100", "trmAlarmActiveName"), ("TRANSMODE1100", "trmAlarmActiveSeverity"), ("TRANSMODE1100", "trmAlarmActiveActTime"), ("TRANSMODE1100", "trmAlarmActiveUnit"), ("TRANSMODE1100", "trmAlarmActiveRackNumber"), ("TRANSMODE1100", "trmAlarmActiveSlotNumber"), ("TRANSMODE1100", "trmAlarmActiveSerialNumber"))
if mibBuilder.loadTexts: trm53005500TrapSfpFaultyLine.setStatus('current')
trm53005500TrapRxGlitchLine = NotificationType((1, 3, 6, 1, 4, 1, 11857, 1, 2, 2, 9, 2, 0, 6)).setObjects(("TRANSMODE1100", "trmAlarmActiveName"), ("TRANSMODE1100", "trmAlarmActiveSeverity"), ("TRANSMODE1100", "trmAlarmActiveActTime"), ("TRANSMODE1100", "trmAlarmActiveUnit"), ("TRANSMODE1100", "trmAlarmActiveRackNumber"), ("TRANSMODE1100", "trmAlarmActiveSlotNumber"), ("TRANSMODE1100", "trmAlarmActiveSerialNumber"))
if mibBuilder.loadTexts: trm53005500TrapRxGlitchLine.setStatus('current')
trm53005500TrapTxGlitchLine = NotificationType((1, 3, 6, 1, 4, 1, 11857, 1, 2, 2, 9, 2, 0, 7)).setObjects(("TRANSMODE1100", "trmAlarmActiveName"), ("TRANSMODE1100", "trmAlarmActiveSeverity"), ("TRANSMODE1100", "trmAlarmActiveActTime"), ("TRANSMODE1100", "trmAlarmActiveUnit"), ("TRANSMODE1100", "trmAlarmActiveRackNumber"), ("TRANSMODE1100", "trmAlarmActiveSlotNumber"), ("TRANSMODE1100", "trmAlarmActiveSerialNumber"))
if mibBuilder.loadTexts: trm53005500TrapTxGlitchLine.setStatus('current')
trm53005500TrapTxDisabledLine = NotificationType((1, 3, 6, 1, 4, 1, 11857, 1, 2, 2, 9, 2, 0, 8)).setObjects(("TRANSMODE1100", "trmAlarmActiveName"), ("TRANSMODE1100", "trmAlarmActiveSeverity"), ("TRANSMODE1100", "trmAlarmActiveActTime"), ("TRANSMODE1100", "trmAlarmActiveUnit"), ("TRANSMODE1100", "trmAlarmActiveRackNumber"), ("TRANSMODE1100", "trmAlarmActiveSlotNumber"), ("TRANSMODE1100", "trmAlarmActiveSerialNumber"))
if mibBuilder.loadTexts: trm53005500TrapTxDisabledLine.setStatus('current')
trm53005500TrapRxLinkDownClient1 = NotificationType((1, 3, 6, 1, 4, 1, 11857, 1, 2, 2, 9, 2, 0, 9)).setObjects(("TRANSMODE1100", "trmAlarmActiveName"), ("TRANSMODE1100", "trmAlarmActiveSeverity"), ("TRANSMODE1100", "trmAlarmActiveActTime"), ("TRANSMODE1100", "trmAlarmActiveUnit"), ("TRANSMODE1100", "trmAlarmActiveRackNumber"), ("TRANSMODE1100", "trmAlarmActiveSlotNumber"), ("TRANSMODE1100", "trmAlarmActiveSerialNumber"))
if mibBuilder.loadTexts: trm53005500TrapRxLinkDownClient1.setStatus('current')
trm53005500TrapTxOutOfSyncClient1 = NotificationType((1, 3, 6, 1, 4, 1, 11857, 1, 2, 2, 9, 2, 0, 10)).setObjects(("TRANSMODE1100", "trmAlarmActiveName"), ("TRANSMODE1100", "trmAlarmActiveSeverity"), ("TRANSMODE1100", "trmAlarmActiveActTime"), ("TRANSMODE1100", "trmAlarmActiveUnit"), ("TRANSMODE1100", "trmAlarmActiveRackNumber"), ("TRANSMODE1100", "trmAlarmActiveSlotNumber"), ("TRANSMODE1100", "trmAlarmActiveSerialNumber"))
if mibBuilder.loadTexts: trm53005500TrapTxOutOfSyncClient1.setStatus('current')
trm53005500TrapSfpMissingClient1 = NotificationType((1, 3, 6, 1, 4, 1, 11857, 1, 2, 2, 9, 2, 0, 11)).setObjects(("TRANSMODE1100", "trmAlarmActiveName"), ("TRANSMODE1100", "trmAlarmActiveSeverity"), ("TRANSMODE1100", "trmAlarmActiveActTime"), ("TRANSMODE1100", "trmAlarmActiveUnit"), ("TRANSMODE1100", "trmAlarmActiveRackNumber"), ("TRANSMODE1100", "trmAlarmActiveSlotNumber"), ("TRANSMODE1100", "trmAlarmActiveSerialNumber"))
if mibBuilder.loadTexts: trm53005500TrapSfpMissingClient1.setStatus('current')
trm53005500TrapSfpBadTypeClient1 = NotificationType((1, 3, 6, 1, 4, 1, 11857, 1, 2, 2, 9, 2, 0, 12)).setObjects(("TRANSMODE1100", "trmAlarmActiveName"), ("TRANSMODE1100", "trmAlarmActiveSeverity"), ("TRANSMODE1100", "trmAlarmActiveActTime"), ("TRANSMODE1100", "trmAlarmActiveUnit"), ("TRANSMODE1100", "trmAlarmActiveRackNumber"), ("TRANSMODE1100", "trmAlarmActiveSlotNumber"), ("TRANSMODE1100", "trmAlarmActiveSerialNumber"))
if mibBuilder.loadTexts: trm53005500TrapSfpBadTypeClient1.setStatus('current')
trm53005500TrapSfpFaultyClient1 = NotificationType((1, 3, 6, 1, 4, 1, 11857, 1, 2, 2, 9, 2, 0, 13)).setObjects(("TRANSMODE1100", "trmAlarmActiveName"), ("TRANSMODE1100", "trmAlarmActiveSeverity"), ("TRANSMODE1100", "trmAlarmActiveActTime"), ("TRANSMODE1100", "trmAlarmActiveUnit"), ("TRANSMODE1100", "trmAlarmActiveRackNumber"), ("TRANSMODE1100", "trmAlarmActiveSlotNumber"), ("TRANSMODE1100", "trmAlarmActiveSerialNumber"))
if mibBuilder.loadTexts: trm53005500TrapSfpFaultyClient1.setStatus('current')
trm53005500TrapTxGlitchClient1 = NotificationType((1, 3, 6, 1, 4, 1, 11857, 1, 2, 2, 9, 2, 0, 14)).setObjects(("TRANSMODE1100", "trmAlarmActiveName"), ("TRANSMODE1100", "trmAlarmActiveSeverity"), ("TRANSMODE1100", "trmAlarmActiveActTime"), ("TRANSMODE1100", "trmAlarmActiveUnit"), ("TRANSMODE1100", "trmAlarmActiveRackNumber"), ("TRANSMODE1100", "trmAlarmActiveSlotNumber"), ("TRANSMODE1100", "trmAlarmActiveSerialNumber"))
if mibBuilder.loadTexts: trm53005500TrapTxGlitchClient1.setStatus('current')
trm53005500TrapRxGlitchClient1 = NotificationType((1, 3, 6, 1, 4, 1, 11857, 1, 2, 2, 9, 2, 0, 15)).setObjects(("TRANSMODE1100", "trmAlarmActiveName"), ("TRANSMODE1100", "trmAlarmActiveSeverity"), ("TRANSMODE1100", "trmAlarmActiveActTime"), ("TRANSMODE1100", "trmAlarmActiveUnit"), ("TRANSMODE1100", "trmAlarmActiveRackNumber"), ("TRANSMODE1100", "trmAlarmActiveSlotNumber"), ("TRANSMODE1100", "trmAlarmActiveSerialNumber"))
if mibBuilder.loadTexts: trm53005500TrapRxGlitchClient1.setStatus('current')
trm53005500TrapTxDisabledClient1 = NotificationType((1, 3, 6, 1, 4, 1, 11857, 1, 2, 2, 9, 2, 0, 16)).setObjects(("TRANSMODE1100", "trmAlarmActiveName"), ("TRANSMODE1100", "trmAlarmActiveSeverity"), ("TRANSMODE1100", "trmAlarmActiveActTime"), ("TRANSMODE1100", "trmAlarmActiveUnit"), ("TRANSMODE1100", "trmAlarmActiveRackNumber"), ("TRANSMODE1100", "trmAlarmActiveSlotNumber"), ("TRANSMODE1100", "trmAlarmActiveSerialNumber"))
if mibBuilder.loadTexts: trm53005500TrapTxDisabledClient1.setStatus('current')
trm53005500TrapRxLinkDownClient2 = NotificationType((1, 3, 6, 1, 4, 1, 11857, 1, 2, 2, 9, 2, 0, 17)).setObjects(("TRANSMODE1100", "trmAlarmActiveName"), ("TRANSMODE1100", "trmAlarmActiveSeverity"), ("TRANSMODE1100", "trmAlarmActiveActTime"), ("TRANSMODE1100", "trmAlarmActiveUnit"), ("TRANSMODE1100", "trmAlarmActiveRackNumber"), ("TRANSMODE1100", "trmAlarmActiveSlotNumber"), ("TRANSMODE1100", "trmAlarmActiveSerialNumber"))
if mibBuilder.loadTexts: trm53005500TrapRxLinkDownClient2.setStatus('current')
trm53005500TrapTxOutOfSyncClient2 = NotificationType((1, 3, 6, 1, 4, 1, 11857, 1, 2, 2, 9, 2, 0, 18)).setObjects(("TRANSMODE1100", "trmAlarmActiveName"), ("TRANSMODE1100", "trmAlarmActiveSeverity"), ("TRANSMODE1100", "trmAlarmActiveActTime"), ("TRANSMODE1100", "trmAlarmActiveUnit"), ("TRANSMODE1100", "trmAlarmActiveRackNumber"), ("TRANSMODE1100", "trmAlarmActiveSlotNumber"), ("TRANSMODE1100", "trmAlarmActiveSerialNumber"))
if mibBuilder.loadTexts: trm53005500TrapTxOutOfSyncClient2.setStatus('current')
trm53005500TrapSfpMissingClient2 = NotificationType((1, 3, 6, 1, 4, 1, 11857, 1, 2, 2, 9, 2, 0, 19)).setObjects(("TRANSMODE1100", "trmAlarmActiveName"), ("TRANSMODE1100", "trmAlarmActiveSeverity"), ("TRANSMODE1100", "trmAlarmActiveActTime"), ("TRANSMODE1100", "trmAlarmActiveUnit"), ("TRANSMODE1100", "trmAlarmActiveRackNumber"), ("TRANSMODE1100", "trmAlarmActiveSlotNumber"), ("TRANSMODE1100", "trmAlarmActiveSerialNumber"))
if mibBuilder.loadTexts: trm53005500TrapSfpMissingClient2.setStatus('current')
trm53005500TrapSfpBadTypeClient2 = NotificationType((1, 3, 6, 1, 4, 1, 11857, 1, 2, 2, 9, 2, 0, 20)).setObjects(("TRANSMODE1100", "trmAlarmActiveName"), ("TRANSMODE1100", "trmAlarmActiveSeverity"), ("TRANSMODE1100", "trmAlarmActiveActTime"), ("TRANSMODE1100", "trmAlarmActiveUnit"), ("TRANSMODE1100", "trmAlarmActiveRackNumber"), ("TRANSMODE1100", "trmAlarmActiveSlotNumber"), ("TRANSMODE1100", "trmAlarmActiveSerialNumber"))
if mibBuilder.loadTexts: trm53005500TrapSfpBadTypeClient2.setStatus('current')
trm53005500TrapSfpFaultyClient2 = NotificationType((1, 3, 6, 1, 4, 1, 11857, 1, 2, 2, 9, 2, 0, 21)).setObjects(("TRANSMODE1100", "trmAlarmActiveName"), ("TRANSMODE1100", "trmAlarmActiveSeverity"), ("TRANSMODE1100", "trmAlarmActiveActTime"), ("TRANSMODE1100", "trmAlarmActiveUnit"), ("TRANSMODE1100", "trmAlarmActiveRackNumber"), ("TRANSMODE1100", "trmAlarmActiveSlotNumber"), ("TRANSMODE1100", "trmAlarmActiveSerialNumber"))
if mibBuilder.loadTexts: trm53005500TrapSfpFaultyClient2.setStatus('current')
trm53005500TrapTxGlitchClient2 = NotificationType((1, 3, 6, 1, 4, 1, 11857, 1, 2, 2, 9, 2, 0, 22)).setObjects(("TRANSMODE1100", "trmAlarmActiveName"), ("TRANSMODE1100", "trmAlarmActiveSeverity"), ("TRANSMODE1100", "trmAlarmActiveActTime"), ("TRANSMODE1100", "trmAlarmActiveUnit"), ("TRANSMODE1100", "trmAlarmActiveRackNumber"), ("TRANSMODE1100", "trmAlarmActiveSlotNumber"), ("TRANSMODE1100", "trmAlarmActiveSerialNumber"))
if mibBuilder.loadTexts: trm53005500TrapTxGlitchClient2.setStatus('current')
trm53005500TrapRxGlitchClient2 = NotificationType((1, 3, 6, 1, 4, 1, 11857, 1, 2, 2, 9, 2, 0, 23)).setObjects(("TRANSMODE1100", "trmAlarmActiveName"), ("TRANSMODE1100", "trmAlarmActiveSeverity"), ("TRANSMODE1100", "trmAlarmActiveActTime"), ("TRANSMODE1100", "trmAlarmActiveUnit"), ("TRANSMODE1100", "trmAlarmActiveRackNumber"), ("TRANSMODE1100", "trmAlarmActiveSlotNumber"), ("TRANSMODE1100", "trmAlarmActiveSerialNumber"))
if mibBuilder.loadTexts: trm53005500TrapRxGlitchClient2.setStatus('current')
trm53005500TrapTxDisabledClient2 = NotificationType((1, 3, 6, 1, 4, 1, 11857, 1, 2, 2, 9, 2, 0, 24)).setObjects(("TRANSMODE1100", "trmAlarmActiveName"), ("TRANSMODE1100", "trmAlarmActiveSeverity"), ("TRANSMODE1100", "trmAlarmActiveActTime"), ("TRANSMODE1100", "trmAlarmActiveUnit"), ("TRANSMODE1100", "trmAlarmActiveRackNumber"), ("TRANSMODE1100", "trmAlarmActiveSlotNumber"), ("TRANSMODE1100", "trmAlarmActiveSerialNumber"))
if mibBuilder.loadTexts: trm53005500TrapTxDisabledClient2.setStatus('current')
trm53005500TrapRxLinkDownClient3 = NotificationType((1, 3, 6, 1, 4, 1, 11857, 1, 2, 2, 9, 2, 0, 25)).setObjects(("TRANSMODE1100", "trmAlarmActiveName"), ("TRANSMODE1100", "trmAlarmActiveSeverity"), ("TRANSMODE1100", "trmAlarmActiveActTime"), ("TRANSMODE1100", "trmAlarmActiveUnit"), ("TRANSMODE1100", "trmAlarmActiveRackNumber"), ("TRANSMODE1100", "trmAlarmActiveSlotNumber"), ("TRANSMODE1100", "trmAlarmActiveSerialNumber"))
if mibBuilder.loadTexts: trm53005500TrapRxLinkDownClient3.setStatus('current')
trm53005500TrapTxOutOfSyncClient3 = NotificationType((1, 3, 6, 1, 4, 1, 11857, 1, 2, 2, 9, 2, 0, 26)).setObjects(("TRANSMODE1100", "trmAlarmActiveName"), ("TRANSMODE1100", "trmAlarmActiveSeverity"), ("TRANSMODE1100", "trmAlarmActiveActTime"), ("TRANSMODE1100", "trmAlarmActiveUnit"), ("TRANSMODE1100", "trmAlarmActiveRackNumber"), ("TRANSMODE1100", "trmAlarmActiveSlotNumber"), ("TRANSMODE1100", "trmAlarmActiveSerialNumber"))
if mibBuilder.loadTexts: trm53005500TrapTxOutOfSyncClient3.setStatus('current')
trm53005500TrapSfpMissingClient3 = NotificationType((1, 3, 6, 1, 4, 1, 11857, 1, 2, 2, 9, 2, 0, 27)).setObjects(("TRANSMODE1100", "trmAlarmActiveName"), ("TRANSMODE1100", "trmAlarmActiveSeverity"), ("TRANSMODE1100", "trmAlarmActiveActTime"), ("TRANSMODE1100", "trmAlarmActiveUnit"), ("TRANSMODE1100", "trmAlarmActiveRackNumber"), ("TRANSMODE1100", "trmAlarmActiveSlotNumber"), ("TRANSMODE1100", "trmAlarmActiveSerialNumber"))
if mibBuilder.loadTexts: trm53005500TrapSfpMissingClient3.setStatus('current')
trm53005500TrapSfpBadTypeClient3 = NotificationType((1, 3, 6, 1, 4, 1, 11857, 1, 2, 2, 9, 2, 0, 28)).setObjects(("TRANSMODE1100", "trmAlarmActiveName"), ("TRANSMODE1100", "trmAlarmActiveSeverity"), ("TRANSMODE1100", "trmAlarmActiveActTime"), ("TRANSMODE1100", "trmAlarmActiveUnit"), ("TRANSMODE1100", "trmAlarmActiveRackNumber"), ("TRANSMODE1100", "trmAlarmActiveSlotNumber"), ("TRANSMODE1100", "trmAlarmActiveSerialNumber"))
if mibBuilder.loadTexts: trm53005500TrapSfpBadTypeClient3.setStatus('current')
trm53005500TrapSfpFaultyClient3 = NotificationType((1, 3, 6, 1, 4, 1, 11857, 1, 2, 2, 9, 2, 0, 29)).setObjects(("TRANSMODE1100", "trmAlarmActiveName"), ("TRANSMODE1100", "trmAlarmActiveSeverity"), ("TRANSMODE1100", "trmAlarmActiveActTime"), ("TRANSMODE1100", "trmAlarmActiveUnit"), ("TRANSMODE1100", "trmAlarmActiveRackNumber"), ("TRANSMODE1100", "trmAlarmActiveSlotNumber"), ("TRANSMODE1100", "trmAlarmActiveSerialNumber"))
if mibBuilder.loadTexts: trm53005500TrapSfpFaultyClient3.setStatus('current')
trm53005500TrapTxGlitchClient3 = NotificationType((1, 3, 6, 1, 4, 1, 11857, 1, 2, 2, 9, 2, 0, 30)).setObjects(("TRANSMODE1100", "trmAlarmActiveName"), ("TRANSMODE1100", "trmAlarmActiveSeverity"), ("TRANSMODE1100", "trmAlarmActiveActTime"), ("TRANSMODE1100", "trmAlarmActiveUnit"), ("TRANSMODE1100", "trmAlarmActiveRackNumber"), ("TRANSMODE1100", "trmAlarmActiveSlotNumber"), ("TRANSMODE1100", "trmAlarmActiveSerialNumber"))
if mibBuilder.loadTexts: trm53005500TrapTxGlitchClient3.setStatus('current')
trm53005500TrapRxGlitchClient3 = NotificationType((1, 3, 6, 1, 4, 1, 11857, 1, 2, 2, 9, 2, 0, 31)).setObjects(("TRANSMODE1100", "trmAlarmActiveName"), ("TRANSMODE1100", "trmAlarmActiveSeverity"), ("TRANSMODE1100", "trmAlarmActiveActTime"), ("TRANSMODE1100", "trmAlarmActiveUnit"), ("TRANSMODE1100", "trmAlarmActiveRackNumber"), ("TRANSMODE1100", "trmAlarmActiveSlotNumber"), ("TRANSMODE1100", "trmAlarmActiveSerialNumber"))
if mibBuilder.loadTexts: trm53005500TrapRxGlitchClient3.setStatus('current')
trm53005500TrapTxDisabledClient3 = NotificationType((1, 3, 6, 1, 4, 1, 11857, 1, 2, 2, 9, 2, 0, 32)).setObjects(("TRANSMODE1100", "trmAlarmActiveName"), ("TRANSMODE1100", "trmAlarmActiveSeverity"), ("TRANSMODE1100", "trmAlarmActiveActTime"), ("TRANSMODE1100", "trmAlarmActiveUnit"), ("TRANSMODE1100", "trmAlarmActiveRackNumber"), ("TRANSMODE1100", "trmAlarmActiveSlotNumber"), ("TRANSMODE1100", "trmAlarmActiveSerialNumber"))
if mibBuilder.loadTexts: trm53005500TrapTxDisabledClient3.setStatus('current')
trm53005500TrapRxLinkDownClient4 = NotificationType((1, 3, 6, 1, 4, 1, 11857, 1, 2, 2, 9, 2, 0, 33)).setObjects(("TRANSMODE1100", "trmAlarmActiveName"), ("TRANSMODE1100", "trmAlarmActiveSeverity"), ("TRANSMODE1100", "trmAlarmActiveActTime"), ("TRANSMODE1100", "trmAlarmActiveUnit"), ("TRANSMODE1100", "trmAlarmActiveRackNumber"), ("TRANSMODE1100", "trmAlarmActiveSlotNumber"), ("TRANSMODE1100", "trmAlarmActiveSerialNumber"))
if mibBuilder.loadTexts: trm53005500TrapRxLinkDownClient4.setStatus('current')
trm53005500TrapTxOutOfSyncClient4 = NotificationType((1, 3, 6, 1, 4, 1, 11857, 1, 2, 2, 9, 2, 0, 34)).setObjects(("TRANSMODE1100", "trmAlarmActiveName"), ("TRANSMODE1100", "trmAlarmActiveSeverity"), ("TRANSMODE1100", "trmAlarmActiveActTime"), ("TRANSMODE1100", "trmAlarmActiveUnit"), ("TRANSMODE1100", "trmAlarmActiveRackNumber"), ("TRANSMODE1100", "trmAlarmActiveSlotNumber"), ("TRANSMODE1100", "trmAlarmActiveSerialNumber"))
if mibBuilder.loadTexts: trm53005500TrapTxOutOfSyncClient4.setStatus('current')
trm53005500TrapSfpMissingClient4 = NotificationType((1, 3, 6, 1, 4, 1, 11857, 1, 2, 2, 9, 2, 0, 35)).setObjects(("TRANSMODE1100", "trmAlarmActiveName"), ("TRANSMODE1100", "trmAlarmActiveSeverity"), ("TRANSMODE1100", "trmAlarmActiveActTime"), ("TRANSMODE1100", "trmAlarmActiveUnit"), ("TRANSMODE1100", "trmAlarmActiveRackNumber"), ("TRANSMODE1100", "trmAlarmActiveSlotNumber"), ("TRANSMODE1100", "trmAlarmActiveSerialNumber"))
if mibBuilder.loadTexts: trm53005500TrapSfpMissingClient4.setStatus('current')
trm53005500TrapSfpBadTypeClient4 = NotificationType((1, 3, 6, 1, 4, 1, 11857, 1, 2, 2, 9, 2, 0, 36)).setObjects(("TRANSMODE1100", "trmAlarmActiveName"), ("TRANSMODE1100", "trmAlarmActiveSeverity"), ("TRANSMODE1100", "trmAlarmActiveActTime"), ("TRANSMODE1100", "trmAlarmActiveUnit"), ("TRANSMODE1100", "trmAlarmActiveRackNumber"), ("TRANSMODE1100", "trmAlarmActiveSlotNumber"), ("TRANSMODE1100", "trmAlarmActiveSerialNumber"))
if mibBuilder.loadTexts: trm53005500TrapSfpBadTypeClient4.setStatus('current')
trm53005500TrapSfpFaultyClient4 = NotificationType((1, 3, 6, 1, 4, 1, 11857, 1, 2, 2, 9, 2, 0, 37)).setObjects(("TRANSMODE1100", "trmAlarmActiveName"), ("TRANSMODE1100", "trmAlarmActiveSeverity"), ("TRANSMODE1100", "trmAlarmActiveActTime"), ("TRANSMODE1100", "trmAlarmActiveUnit"), ("TRANSMODE1100", "trmAlarmActiveRackNumber"), ("TRANSMODE1100", "trmAlarmActiveSlotNumber"), ("TRANSMODE1100", "trmAlarmActiveSerialNumber"))
if mibBuilder.loadTexts: trm53005500TrapSfpFaultyClient4.setStatus('current')
trm53005500TrapTxGlitchClient4 = NotificationType((1, 3, 6, 1, 4, 1, 11857, 1, 2, 2, 9, 2, 0, 38)).setObjects(("TRANSMODE1100", "trmAlarmActiveName"), ("TRANSMODE1100", "trmAlarmActiveSeverity"), ("TRANSMODE1100", "trmAlarmActiveActTime"), ("TRANSMODE1100", "trmAlarmActiveUnit"), ("TRANSMODE1100", "trmAlarmActiveRackNumber"), ("TRANSMODE1100", "trmAlarmActiveSlotNumber"), ("TRANSMODE1100", "trmAlarmActiveSerialNumber"))
if mibBuilder.loadTexts: trm53005500TrapTxGlitchClient4.setStatus('current')
trm53005500TrapRxGlitchClient4 = NotificationType((1, 3, 6, 1, 4, 1, 11857, 1, 2, 2, 9, 2, 0, 39)).setObjects(("TRANSMODE1100", "trmAlarmActiveName"), ("TRANSMODE1100", "trmAlarmActiveSeverity"), ("TRANSMODE1100", "trmAlarmActiveActTime"), ("TRANSMODE1100", "trmAlarmActiveUnit"), ("TRANSMODE1100", "trmAlarmActiveRackNumber"), ("TRANSMODE1100", "trmAlarmActiveSlotNumber"), ("TRANSMODE1100", "trmAlarmActiveSerialNumber"))
if mibBuilder.loadTexts: trm53005500TrapRxGlitchClient4.setStatus('current')
trm53005500TrapTxDisabledClient4 = NotificationType((1, 3, 6, 1, 4, 1, 11857, 1, 2, 2, 9, 2, 0, 40)).setObjects(("TRANSMODE1100", "trmAlarmActiveName"), ("TRANSMODE1100", "trmAlarmActiveSeverity"), ("TRANSMODE1100", "trmAlarmActiveActTime"), ("TRANSMODE1100", "trmAlarmActiveUnit"), ("TRANSMODE1100", "trmAlarmActiveRackNumber"), ("TRANSMODE1100", "trmAlarmActiveSlotNumber"), ("TRANSMODE1100", "trmAlarmActiveSerialNumber"))
if mibBuilder.loadTexts: trm53005500TrapTxDisabledClient4.setStatus('current')
trm53005500TrapHwFailure = NotificationType((1, 3, 6, 1, 4, 1, 11857, 1, 2, 2, 9, 2, 0, 41)).setObjects(("TRANSMODE1100", "trmAlarmActiveName"), ("TRANSMODE1100", "trmAlarmActiveSeverity"), ("TRANSMODE1100", "trmAlarmActiveActTime"), ("TRANSMODE1100", "trmAlarmActiveUnit"), ("TRANSMODE1100", "trmAlarmActiveRackNumber"), ("TRANSMODE1100", "trmAlarmActiveSlotNumber"), ("TRANSMODE1100", "trmAlarmActiveSerialNumber"))
if mibBuilder.loadTexts: trm53005500TrapHwFailure.setStatus('current')
trmSubrackFM = MibIdentifier((1, 3, 6, 1, 4, 1, 11857, 1, 2, 3))
trmSubrackTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 11857, 1, 2, 3, 0))
trmTrapBmiLost = NotificationType((1, 3, 6, 1, 4, 1, 11857, 1, 2, 3, 0, 1)).setObjects(("TRANSMODE1100", "trmAlarmActiveName"), ("TRANSMODE1100", "trmAlarmActiveSeverity"), ("TRANSMODE1100", "trmAlarmActiveActTime"), ("TRANSMODE1100", "trmAlarmActiveUnit"), ("TRANSMODE1100", "trmAlarmActiveRackNumber"), ("TRANSMODE1100", "trmAlarmActiveSlotNumber"), ("TRANSMODE1100", "trmAlarmActiveSerialNumber"))
if mibBuilder.loadTexts: trmTrapBmiLost.setStatus('current')
trmTrapBmiError = NotificationType((1, 3, 6, 1, 4, 1, 11857, 1, 2, 3, 0, 2)).setObjects(("TRANSMODE1100", "trmAlarmActiveName"), ("TRANSMODE1100", "trmAlarmActiveSeverity"), ("TRANSMODE1100", "trmAlarmActiveActTime"), ("TRANSMODE1100", "trmAlarmActiveUnit"), ("TRANSMODE1100", "trmAlarmActiveRackNumber"), ("TRANSMODE1100", "trmAlarmActiveSlotNumber"), ("TRANSMODE1100", "trmAlarmActiveSerialNumber"))
if mibBuilder.loadTexts: trmTrapBmiError.setStatus('current')
trmTrapHighTemp = NotificationType((1, 3, 6, 1, 4, 1, 11857, 1, 2, 3, 0, 3)).setObjects(("TRANSMODE1100", "trmAlarmActiveName"), ("TRANSMODE1100", "trmAlarmActiveSeverity"), ("TRANSMODE1100", "trmAlarmActiveActTime"), ("TRANSMODE1100", "trmAlarmActiveUnit"), ("TRANSMODE1100", "trmAlarmActiveRackNumber"), ("TRANSMODE1100", "trmAlarmActiveSlotNumber"), ("TRANSMODE1100", "trmAlarmActiveSerialNumber"))
if mibBuilder.loadTexts: trmTrapHighTemp.setStatus('current')
trmTrapLowTemp = NotificationType((1, 3, 6, 1, 4, 1, 11857, 1, 2, 3, 0, 4)).setObjects(("TRANSMODE1100", "trmAlarmActiveName"), ("TRANSMODE1100", "trmAlarmActiveSeverity"), ("TRANSMODE1100", "trmAlarmActiveActTime"), ("TRANSMODE1100", "trmAlarmActiveUnit"), ("TRANSMODE1100", "trmAlarmActiveRackNumber"), ("TRANSMODE1100", "trmAlarmActiveSlotNumber"), ("TRANSMODE1100", "trmAlarmActiveSerialNumber"))
if mibBuilder.loadTexts: trmTrapLowTemp.setStatus('current')
trmTrapVeryHighTemp = NotificationType((1, 3, 6, 1, 4, 1, 11857, 1, 2, 3, 0, 5)).setObjects(("TRANSMODE1100", "trmAlarmActiveName"), ("TRANSMODE1100", "trmAlarmActiveSeverity"), ("TRANSMODE1100", "trmAlarmActiveActTime"), ("TRANSMODE1100", "trmAlarmActiveUnit"), ("TRANSMODE1100", "trmAlarmActiveRackNumber"), ("TRANSMODE1100", "trmAlarmActiveSlotNumber"), ("TRANSMODE1100", "trmAlarmActiveSerialNumber"))
if mibBuilder.loadTexts: trmTrapVeryHighTemp.setStatus('current')
trmTrapSpeedLimitExceeded = NotificationType((1, 3, 6, 1, 4, 1, 11857, 1, 2, 3, 0, 6)).setObjects(("TRANSMODE1100", "trmAlarmActiveName"), ("TRANSMODE1100", "trmAlarmActiveSeverity"), ("TRANSMODE1100", "trmAlarmActiveActTime"), ("TRANSMODE1100", "trmAlarmActiveUnit"), ("TRANSMODE1100", "trmAlarmActiveRackNumber"), ("TRANSMODE1100", "trmAlarmActiveSlotNumber"), ("TRANSMODE1100", "trmAlarmActiveSerialNumber"))
if mibBuilder.loadTexts: trmTrapSpeedLimitExceeded.setStatus('current')
mibBuilder.exportSymbols("TRANSMODE1100", trm26xxTrapTxDisable=trm26xxTrapTxDisable, trm6001Time=trm6001Time, trm26xxTrapBIAS2Faulty=trm26xxTrapBIAS2Faulty, trm9xxxSlotNumber=trm9xxxSlotNumber, trm53005500TrapExternalsyncFailureLine=trm53005500TrapExternalsyncFailureLine, trm76xxProdOutPowLine=trm76xxProdOutPowLine, trmAlarmSeverity=trmAlarmSeverity, trm53005500TrapTxGlitchClient2=trm53005500TrapTxGlitchClient2, trm25xxEstFibRateLine=trm25xxEstFibRateLine, trm53005500TrapSfpBadTypeLine=trm53005500TrapSfpBadTypeLine, trm53005500TrapSfpBadTypeClient2=trm53005500TrapSfpBadTypeClient2, trm76xxEstProtClient=trm76xxEstProtClient, trm6001FM=trm6001FM, trm75xxTxLine=trm75xxTxLine, trm76xxTrapSFPFailureClient=trm76xxTrapSFPFailureClient, trm2204PM=trm2204PM, trm53005500Traps=trm53005500Traps, trm76xxLaserBiasCurClient=trm76xxLaserBiasCurClient, trmSubrackUnits=trmSubrackUnits, trm9xxxFM=trm9xxxFM, trm76xxCustomFibRate=trm76xxCustomFibRate, trm26xxSwReset=trm26xxSwReset, AlarmSeverity=AlarmSeverity, trm803xTable=trm803xTable, trm6001MACAddress=trm6001MACAddress, trm26xxTemperature=trm26xxTemperature, trm26xxTrapTEC1Faulty=trm26xxTrapTEC1Faulty, OwnerString=OwnerString, trm25xxSpeedLimit=trm25xxSpeedLimit, trm76xxEstProtLine=trm76xxEstProtLine, trm76xxRackNumber=trm76xxRackNumber, trm75xxEstFibRateClient=trm75xxEstFibRateClient, trmAlarmLogRackNumber=trmAlarmLogRackNumber, trm53005500IDStringClient1=trm53005500IDStringClient1, trm53005500OpticalInPowLine=trm53005500OpticalInPowLine, trm76xxTrapSFPMissingLine=trm76xxTrapSFPMissingLine, trm75xxTrapGlitchLine=trm75xxTrapGlitchLine, TrmTime=TrmTime, trmAlarmActiveSeverity=trmAlarmActiveSeverity, trm76xxIDStringClient=trm76xxIDStringClient, trmPluginReset=trmPluginReset, trmTrapSpeedLimitExceeded=trmTrapSpeedLimitExceeded, trm53005500WavelengthClient2=trm53005500WavelengthClient2, trm26xxOpticalPowerPIN1=trm26xxOpticalPowerPIN1, trmAlarmLogSlotNumber=trmAlarmLogSlotNumber, trmAlarmLogAckUser=trmAlarmLogAckUser, trm26xxPM=trm26xxPM, trm75xxSlotNumber=trm75xxSlotNumber, trm6001Entry=trm6001Entry, trm76xxPM=trm76xxPM, trm76xx=trm76xx, trm75xxTraps=trm75xxTraps, trm26xxTable=trm26xxTable, trmAlarmActive=trmAlarmActive, trm25xxTraps=trm25xxTraps, trm53005500SwReset=trm53005500SwReset, trm26xxTrapBIAS1Faulty=trm26xxTrapBIAS1Faulty, trmClearAlarmLog=trmClearAlarmLog, trmOpticalInputPowerLowPINLine=trmOpticalInputPowerLowPINLine, trm2204=trm2204, TrmDate=TrmDate, trmSubrackListEntry=trmSubrackListEntry, trm76xxLaserBiasCurLine=trm76xxLaserBiasCurLine, trmAlarmExternalName=trmAlarmExternalName, MuxType=MuxType, CDR55Mode=CDR55Mode, trm75xxRxLine=trm75xxRxLine, trm26xxRackNumber=trm26xxRackNumber, trm6001TrapExternal2=trm6001TrapExternal2, trm53005500WavelengthLine=trm53005500WavelengthLine, trm75xxTrapLopLine=trm75xxTrapLopLine, trmListRackNumber=trmListRackNumber, trm75xxRackNumber=trm75xxRackNumber, trm26xxCurrentBIAS2=trm26xxCurrentBIAS2, trm53005500IDStringClient4=trm53005500IDStringClient4, trmAlarmExternalLevel=trmAlarmExternalLevel, trm53005500TrapTxGlitchClient3=trm53005500TrapTxGlitchClient3, trm53005500WavelengthClient1=trm53005500WavelengthClient1, trm53005500TrapRxGlitchClient3=trm53005500TrapRxGlitchClient3, trm25xxTrapWorkingAndProtectingLineFailure=trm25xxTrapWorkingAndProtectingLineFailure, trmSubrackList=trmSubrackList, trm76xxEntry=trm76xxEntry, trm53005500PM=trm53005500PM, trmListSlotNumber=trmListSlotNumber, trm53005500TrapSfpMissingClient4=trm53005500TrapSfpMissingClient4, trmOpticalInputPowerLow1310Client=trmOpticalInputPowerLow1310Client, trm6001UpTime=trm6001UpTime, trmAlarmActiveAcknowledgeAllDeact=trmAlarmActiveAcknowledgeAllDeact, trmOpticalInputPowerHighAPDLine=trmOpticalInputPowerHighAPDLine, trm76xxLineLoopMode=trm76xxLineLoopMode, trmAlarmActiveGeneral=trmAlarmActiveGeneral, trm6001Temperature=trm6001Temperature, AlarmStatus=AlarmStatus, trmAlarmExternal=trmAlarmExternal, trm53005500TrapTxDisabledClient2=trm53005500TrapTxDisabledClient2, trm76xxTrapSFPFailureLine=trm76xxTrapSFPFailureLine, internet=internet, trm53005500TrapSfpMissingClient3=trm53005500TrapSfpMissingClient3, trmOpticalInputPowerLow850Client=trmOpticalInputPowerLow850Client, Switch=Switch, SlotNumberPS=SlotNumberPS, trmAlarmLogDeactTime=trmAlarmLogDeactTime, trmTrapBmiError=trmTrapBmiError, trmAlarmSeverityTable=trmAlarmSeverityTable, trmListSwVersion=trmListSwVersion, trm53005500TrapTxGlitchClient4=trm53005500TrapTxGlitchClient4, CascadeMode=CascadeMode, trm26xxVoltageTEC2=trm26xxVoltageTEC2, trmAlarmLogName=trmAlarmLogName, PYSNMP_MODULE_ID=transmode, TxMode76=TxMode76, trm53005500TxClient4=trm53005500TxClient4, trm53005500TrapTxOutOfSyncClient1=trm53005500TrapTxOutOfSyncClient1, trmAlarmSeverityName=trmAlarmSeverityName, trm53005500TrapRxGlitchClient1=trm53005500TrapRxGlitchClient1, trm53005500RxLine=trm53005500RxLine, trm53005500TrapTxDisabledClient4=trm53005500TrapTxDisabledClient4, trm25xxTxMode=trm25xxTxMode, trm25xxOpticalOutPowLine=trm25xxOpticalOutPowLine, trm25xxWorkingLineStatus=trm25xxWorkingLineStatus, trm26xxCurrentTEC1=trm26xxCurrentTEC1, trm9xxxTrapMissing=trm9xxxTrapMissing, trm75xxFM=trm75xxFM, trm26xxOpticalPowerPIN2=trm26xxOpticalPowerPIN2, trmAlarmActiveIndex=trmAlarmActiveIndex, trmListUnitPresent=trmListUnitPresent, trm53005500TrapRxLinkDownClient3=trm53005500TrapRxLinkDownClient3, trmAlarmTemperatureHigh=trmAlarmTemperatureHigh, trm26xxStatus=trm26xxStatus, trm76xxSlotNumber=trm76xxSlotNumber, trm26xxTraps=trm26xxTraps, trm53005500TrapTxOutOfSyncClient3=trm53005500TrapTxOutOfSyncClient3, trm53005500IDStringClient2=trm53005500IDStringClient2, trm26xxLogOpticalPower=trm26xxLogOpticalPower, trm76xxTrapCDRAutoModeRangeChangeClient=trm76xxTrapCDRAutoModeRangeChangeClient, trm76xxTxMode=trm76xxTxMode, trmAlarmTemperatureHighHyst=trmAlarmTemperatureHighHyst, trm803xMuxType=trm803xMuxType, trm25xxTrapProtectingLineFailure=trm25xxTrapProtectingLineFailure, trm803x=trm803x, system1100=system1100, trm53005500TrapSfpFaultyClient1=trm53005500TrapSfpFaultyClient1, trm75xxIPAddressClient=trm75xxIPAddressClient, trm9xxxTrapFailure=trm9xxxTrapFailure, TxMode75=TxMode75, trmTemperature=trmTemperature, trm53005500TrapRxLinkDownClient2=trm53005500TrapRxLinkDownClient2, trm76xxTrapLopClient=trm76xxTrapLopClient, trm6001Traps=trm6001Traps, trm26xxVoltageBIAS2=trm26xxVoltageBIAS2, trm6001SwReset=trm6001SwReset, RowStatus=RowStatus, trm25xxTrapWorkingLineFailure=trm25xxTrapWorkingLineFailure, trm76xxProdLaserBiasCurLine=trm76xxProdLaserBiasCurLine, trm76xxTrapLopLine=trm76xxTrapLopLine, trmListSoftwareProdNo=trmListSoftwareProdNo, trm25xxTxLine=trm25xxTxLine, trm53005500=trm53005500, trm9xxxTraps=trm9xxxTraps, trm53005500IPAddressClient1=trm53005500IPAddressClient1, trm53005500TrapRxLinkDownClient4=trm53005500TrapRxLinkDownClient4, trm803xIPAddressLine=trm803xIPAddressLine, trm53005500TrapRxLinkDownClient1=trm53005500TrapRxLinkDownClient1, trm75xxPM=trm75xxPM, TrafficStatus=TrafficStatus, trmCascade=trmCascade, trm76xxCDR=trm76xxCDR, trm25xxCustomFibRate=trm25xxCustomFibRate, trm75xxTxClient=trm75xxTxClient, trm803xEntry=trm803xEntry, trm53005500TxModeClient3=trm53005500TxModeClient3, trmAlarmLogTable=trmAlarmLogTable, trmOpticalInputPowerHigh850Client=trmOpticalInputPowerHigh850Client, PerceivedSeverity=PerceivedSeverity, trm75xxTrapTxDisableLine=trm75xxTrapTxDisableLine, trm76xxTrapRxGlitchClient=trm76xxTrapRxGlitchClient, dod=dod, trmAlarmActiveSerialNumber=trmAlarmActiveSerialNumber, trm26xxCurrentTEC2=trm26xxCurrentTEC2, enterprises=enterprises, trmOpticalInputPowerHighAPDLine2=trmOpticalInputPowerHighAPDLine2, trm76xxWavelengthClient=trm76xxWavelengthClient, trm26xxFM=trm26xxFM, trm76xxOpticalInPowClient=trm76xxOpticalInPowClient, PortType=PortType, trmListManufacturingDate=trmListManufacturingDate, trm53005500IPAddressClient4=trm53005500IPAddressClient4, trm53005500CDRClient1=trm53005500CDRClient1, trm76xxTrapLoLLine=trm76xxTrapLoLLine, trm25xxLaserBiasCurLine=trm25xxLaserBiasCurLine, trmAlarmExternalId=trmAlarmExternalId, trm76xxSwReset=trm76xxSwReset, trm76xxIPAddressClient=trm76xxIPAddressClient, RackNumber=RackNumber, trm75xxTable=trm75xxTable, trm75xxTrapTxClient=trm75xxTrapTxClient, trm53005500RxClient1=trm53005500RxClient1, PowerType=PowerType, trmCascadeStatus=trmCascadeStatus, trm53005500TrapSfpFaultyClient4=trm53005500TrapSfpFaultyClient4, trm2204RackNumber=trm2204RackNumber, trm2204SlotNumber=trm2204SlotNumber, trm75xxIDStringClient=trm75xxIDStringClient, trm9xxxPresent=trm9xxxPresent, trm26xxTemperatureTEC2=trm26xxTemperatureTEC2, trm76xxTrapRxHighPowerClient=trm76xxTrapRxHighPowerClient, trmAlarmExternalEntry=trmAlarmExternalEntry, trmListSerialNumber=trmListSerialNumber, trm76xxTrapTxLine=trm76xxTrapTxLine, trm25xxEntry=trm25xxEntry, trm76xxTrapRxLowPowerClient=trm76xxTrapRxLowPowerClient, trm53005500TxClient2=trm53005500TxClient2, trm53005500TxModeClient4=trm53005500TxModeClient4, trm803xIDStringLine=trm803xIDStringLine, trm53005500TrapSfpFaultyClient3=trm53005500TrapSfpFaultyClient3, trm53005500TrapRxGlitchClient2=trm53005500TrapRxGlitchClient2, trm76xxRxClient=trm76xxRxClient, trm76xxTrapEyeQualityLine=trm76xxTrapEyeQualityLine, trm25xxTemperature=trm25xxTemperature, trm25xxRackNumber=trm25xxRackNumber, trm26xxEntry=trm26xxEntry, trm25xxCDR=trm25xxCDR, trmAlarmSeverityEntry=trmAlarmSeverityEntry, trm26xxTrapTEC2Faulty=trm26xxTrapTEC2Faulty, trm25xxRxLine=trm25xxRxLine, trm53005500Table=trm53005500Table, trm75xxEntry=trm75xxEntry, trmAutoAcknowledge=trmAutoAcknowledge, trm53005500TrapSfpBadTypeClient4=trm53005500TrapSfpBadTypeClient4, trm76xxOpticalInPowLine=trm76xxOpticalInPowLine, trm76xxTrapRxHighPowerLine=trm76xxTrapRxHighPowerLine, trmTrapHighTemp=trmTrapHighTemp, trm76xxTrapLaserDegradationLine=trm76xxTrapLaserDegradationLine, trmAlarmLogSeverity=trmAlarmLogSeverity, trmAlarmExternalTable=trmAlarmExternalTable, trm53005500TrapSfpBadTypeClient3=trm53005500TrapSfpBadTypeClient3, trm6001IPAddress=trm6001IPAddress, trm53005500FM=trm53005500FM, trm26xxTemperatureTEC1=trm26xxTemperatureTEC1, trm25xxProdLaserBiasCurLine=trm25xxProdLaserBiasCurLine, trm6001Table=trm6001Table, trm76xxEstFibRateLine=trm76xxEstFibRateLine, trm76xxEstFibRateClient=trm76xxEstFibRateClient, trmSubrackTraps=trmSubrackTraps, trm76xxTraps=trm76xxTraps, CascadeStatus=CascadeStatus, private=private, trmSubrackFM=trmSubrackFM, trm25xxPM=trm25xxPM, CDRMode=CDRMode, trmAlarmConfig=trmAlarmConfig, trm53005500IPAddressClient3=trm53005500IPAddressClient3, trmAlarmActiveName=trmAlarmActiveName, trmOpticalInputPowerHigh1310Client=trmOpticalInputPowerHigh1310Client)
mibBuilder.exportSymbols("TRANSMODE1100", trm9xxxStatus=trm9xxxStatus, trmAlarmSeverityId=trmAlarmSeverityId, trm76xxTrapEyeQualityClient=trm76xxTrapEyeQualityClient, trm75xxRxClient=trm75xxRxClient, trm53005500TrapHwFailure=trm53005500TrapHwFailure, trmAlarmActiveDeactTime=trmAlarmActiveDeactTime, PowerStatus=PowerStatus, trmAlarmLogEntry=trmAlarmLogEntry, trm76xxTrapTxClient=trm76xxTrapTxClient, trmOpticalInputPowerHighPINLine=trmOpticalInputPowerHighPINLine, trmAlarmActiveRackNumber=trmAlarmActiveRackNumber, trm53005500CDRClient2=trm53005500CDRClient2, trm9xxxType=trm9xxxType, trm53005500RxClient3=trm53005500RxClient3, trmAlarmActiveCounter=trmAlarmActiveCounter, trm6001TrapExternal1=trm6001TrapExternal1, trm25xxEstProtLine=trm25xxEstProtLine, trm53005500TxModeClient2=trm53005500TxModeClient2, trm26xxVoltageBIAS1=trm26xxVoltageBIAS1, trm76xxRxLine=trm76xxRxLine, trm2204Entry=trm2204Entry, trm803xSlotNumber=trm803xSlotNumber, trm2204SecurityMode=trm2204SecurityMode, trm53005500Entry=trm53005500Entry, SecurityMode=SecurityMode, trm76xxTxClient=trm76xxTxClient, trm6001=trm6001, trm803xPM=trm803xPM, trm76xxTrapTxDisable=trm76xxTrapTxDisable, trm25xxFM=trm25xxFM, trmTrapLowTemp=trmTrapLowTemp, trmAlarmLogIndex=trmAlarmLogIndex, trm53005500WavelengthClient4=trm53005500WavelengthClient4, org=org, SpeedLimit75=SpeedLimit75, trm26xx=trm26xx, trm75xxTrapTxLine=trm75xxTrapTxLine, trm75xxTrapTxDisableClient=trm75xxTrapTxDisableClient, Present=Present, BoardNumber=BoardNumber, trm53005500RxClient2=trm53005500RxClient2, trm76xxWavelengthLine=trm76xxWavelengthLine, trm76xxTrapCDRAutoModeRangeChangeLine=trm76xxTrapCDRAutoModeRangeChangeLine, trm53005500SlotNumber=trm53005500SlotNumber, trmTrapVeryHighTemp=trmTrapVeryHighTemp, trm75xxTrapLopClient=trm75xxTrapLopClient, trm53005500TrapTxOutOfSyncClient2=trm53005500TrapTxOutOfSyncClient2, trm75xxTrapGlitchClient=trm75xxTrapGlitchClient, trm53005500RackNumber=trm53005500RackNumber, trmListHwRevision=trmListHwRevision, trm76xxFM=trm76xxFM, trm76xxTable=trm76xxTable, trm2204Table=trm2204Table, trm53005500TxModeClient1=trm53005500TxModeClient1, trm53005500TrapRxLinkdownLine=trm53005500TrapRxLinkdownLine, AlarmAcknowledge=AlarmAcknowledge, trm26xxTrapOpticalLinkdown=trm26xxTrapOpticalLinkdown, trm75xxEstProtLine=trm75xxEstProtLine, trm76xxTrapRxGlitchLine=trm76xxTrapRxGlitchLine, trm9xxx=trm9xxx, trm53005500IPAddressClient2=trm53005500IPAddressClient2, trm53005500TrapTxGlitchClient1=trm53005500TrapTxGlitchClient1, trm53005500TrapTxDisabledLine=trm53005500TrapTxDisabledLine, trm76xxTrapSFPMissingClient=trm76xxTrapSFPMissingClient, trm53005500Temperature=trm53005500Temperature, trmAlarmHandling=trmAlarmHandling, trmAlarmTemperatureLowHyst=trmAlarmTemperatureLowHyst, trmAlarmActiveEntry=trmAlarmActiveEntry, LineLoopMode=LineLoopMode, trm803xRackNumber=trm803xRackNumber, trm53005500TxClient3=trm53005500TxClient3, trm75xxWavelengthClient=trm75xxWavelengthClient, trm75xxTxMode=trm75xxTxMode, trm9xxxPM=trm9xxxPM, trm6001RackNumber=trm6001RackNumber, trm76xxTrapLoLClient=trm76xxTrapLoLClient, trmAlarmGeneral=trmAlarmGeneral, trm53005500TxClient1=trm53005500TxClient1, trm26xxSlotNumber=trm26xxSlotNumber, trmSubrackListTable=trmSubrackListTable, trm53005500TrapTxGlitchLine=trm53005500TrapTxGlitchLine, trmAlarmActiveUnit=trmAlarmActiveUnit, trm53005500TrapSfpFaultyClient2=trm53005500TrapSfpFaultyClient2, trm6001PM=trm6001PM, trm53005500RxClient4=trm53005500RxClient4, trm25xxProtectingLineStatus=trm25xxProtectingLineStatus, AlarmClass=AlarmClass, trm53005500TrapSfpBadTypeClient1=trm53005500TrapSfpBadTypeClient1, trmAlarmActiveTable=trmAlarmActiveTable, trm53005500TrapSfpMissingClient2=trm53005500TrapSfpMissingClient2, trmAlarmActiveAcknowledge=trmAlarmActiveAcknowledge, trm76xxSpeedLimit=trm76xxSpeedLimit, trm25xxProdOutPowLine=trm25xxProdOutPowLine, trm75xxSpeedLimit=trm75xxSpeedLimit, trmTrapBmiLost=trmTrapBmiLost, trm25xxSwReset=trm25xxSwReset, trm53005500TrapSfpMissingLine=trm53005500TrapSfpMissingLine, trm26xxVoltageTEC1=trm26xxVoltageTEC1, trm53005500TrapRxGlitchLine=trm53005500TrapRxGlitchLine, trm53005500TrapTxDisabledClient1=trm53005500TrapTxDisabledClient1, trmAlarmLogUnit=trmAlarmLogUnit, trm53005500TrapTxOutOfSyncClient4=trm53005500TrapTxOutOfSyncClient4, trm26xxTrapPIUTempShutdown=trm26xxTrapPIUTempShutdown, SlotNumber=SlotNumber, trm26xxCurrentBIAS1=trm26xxCurrentBIAS1, trmOpticalInputPowerLowAPDLine=trmOpticalInputPowerLowAPDLine, trm76xxTxLine=trm76xxTxLine, trm6001SlotNumber=trm6001SlotNumber, trm53005500TrapTxDisabledClient3=trm53005500TrapTxDisabledClient3, trm53005500TrapSfpMissingClient1=trm53005500TrapSfpMissingClient1, trmAlarmActiveAcknowledgeAll=trmAlarmActiveAcknowledgeAll, trm6001CascadeFailure=trm6001CascadeFailure, trm25xxOpticalInPowLine=trm25xxOpticalInPowLine, trm75xxEstProtClient=trm75xxEstProtClient, trm9xxxRackNumber=trm9xxxRackNumber, trm9xxxTable=trm9xxxTable, trm53005500WavelengthClient3=trm53005500WavelengthClient3, SpeedLimit76=SpeedLimit76, trmAlarmLogSerialNumber=trmAlarmLogSerialNumber, trmAlarmActiveSlotNumber=trmAlarmActiveSlotNumber, trm75xxWavelengthLine=trm75xxWavelengthLine, trm53005500TrapSfpFaultyLine=trm53005500TrapSfpFaultyLine, trm76xxTemperature=trm76xxTemperature, trmListProductNumber=trmListProductNumber, trm76xxTrapRxLowPowerLine=trm76xxTrapRxLowPowerLine, trm75xxTxModeClient=trm75xxTxModeClient, trm6001TrapExternal3=trm6001TrapExternal3, trm75xx=trm75xx, trm76xxOpticalOutPowClient=trm76xxOpticalOutPowClient, trmAlarmTemperatureLow=trmAlarmTemperatureLow, trm53005500TxModeLine=trm53005500TxModeLine, trmAlarmLog=trmAlarmLog, trmAlarmActiveActTime=trmAlarmActiveActTime, trm76xxOpticalOutPowLine=trm76xxOpticalOutPowLine, ExternalAlarmLevel=ExternalAlarmLevel, trm25xxSlotNumber=trm25xxSlotNumber, trmSubrack=trmSubrack, trm53005500CDRClient3=trm53005500CDRClient3, trm53005500IDStringClient3=trm53005500IDStringClient3, trmAlarmLogAckTime=trmAlarmLogAckTime, trm6001Date=trm6001Date, SlotNumberNmb=SlotNumberNmb, trmAlarmLogActTime=trmAlarmLogActTime, trm53005500TrapRxGlitchClient4=trm53005500TrapRxGlitchClient4, trmListProductDescription=trmListProductDescription, trm53005500CDRClient4=trm53005500CDRClient4, trm25xx=trm25xx, trm75xxEstFibRateLine=trm75xxEstFibRateLine, trm26xxTxMode=trm26xxTxMode, trm53005500TxLine=trm53005500TxLine, trm9xxxEntry=trm9xxxEntry, trmAlarmSeverityLevel=trmAlarmSeverityLevel, trm25xxTable=trm25xxTable, transmode=transmode, trmOpticalInputPowerLowAPDLine2=trmOpticalInputPowerLowAPDLine2)
