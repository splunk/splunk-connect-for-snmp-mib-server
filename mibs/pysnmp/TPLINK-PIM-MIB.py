#
# PySNMP MIB module TPLINK-PIM-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/TPLINK-PIM-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 21:18:00 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ConstraintsUnion, SingleValueConstraint, ValueSizeConstraint, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ConstraintsUnion", "SingleValueConstraint", "ValueSizeConstraint", "ValueRangeConstraint")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
ObjectIdentity, MibIdentifier, Gauge32, TimeTicks, Counter64, Unsigned32, Counter32, ModuleIdentity, Bits, iso, NotificationType, Integer32, MibScalar, MibTable, MibTableRow, MibTableColumn, IpAddress = mibBuilder.importSymbols("SNMPv2-SMI", "ObjectIdentity", "MibIdentifier", "Gauge32", "TimeTicks", "Counter64", "Unsigned32", "Counter32", "ModuleIdentity", "Bits", "iso", "NotificationType", "Integer32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "IpAddress")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
tplinkMgmt, = mibBuilder.importSymbols("TPLINK-MIB", "tplinkMgmt")
tplinkPimMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 11863, 6, 77))
tplinkPimMIB.setRevisions(('2012-12-13 09:30',))
if mibBuilder.loadTexts: tplinkPimMIB.setLastUpdated('201212130930Z')
if mibBuilder.loadTexts: tplinkPimMIB.setOrganization('TPLINK')
tplinkPimMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 11863, 6, 77, 1))
tplinkPimNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 11863, 6, 77, 2))
tpPim = MibIdentifier((1, 3, 6, 1, 4, 1, 11863, 6, 77, 1, 1))
tpSGExpiryTimer = MibScalar((1, 3, 6, 1, 4, 1, 11863, 6, 77, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(60, 65535))).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: tpSGExpiryTimer.setStatus('current')
tpPimdataThresholdRate = MibScalar((1, 3, 6, 1, 4, 1, 11863, 6, 77, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("zero", 0), ("infinity", 1)))).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: tpPimdataThresholdRate.setStatus('current')
tpPimInterfaceTable = MibTable((1, 3, 6, 1, 4, 1, 11863, 6, 77, 1, 1, 3), )
if mibBuilder.loadTexts: tpPimInterfaceTable.setStatus('current')
tpPimInterfaceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11863, 6, 77, 1, 1, 3, 1), ).setIndexNames((0, "TPLINK-PIM-MIB", "tpPimInterfaceIndex"))
if mibBuilder.loadTexts: tpPimInterfaceEntry.setStatus('current')
tpPimInterface = MibTableColumn((1, 3, 6, 1, 4, 1, 11863, 6, 77, 1, 1, 3, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 25))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tpPimInterface.setStatus('current')
tpPimInterfaceIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11863, 6, 77, 1, 1, 3, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tpPimInterfaceIndex.setStatus('current')
tpPimInterfaceType = MibTableColumn((1, 3, 6, 1, 4, 1, 11863, 6, 77, 1, 1, 3, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("vlan", 0), ("loopback", 1), ("routeport", 2))).clone('vlan')).setMaxAccess("readonly")
if mibBuilder.loadTexts: tpPimInterfaceType.setStatus('current')
tpPimInterfaceAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 11863, 6, 77, 1, 1, 3, 1, 4), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tpPimInterfaceAddress.setStatus('current')
tpPimInterfaceNetMask = MibTableColumn((1, 3, 6, 1, 4, 1, 11863, 6, 77, 1, 1, 3, 1, 5), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tpPimInterfaceNetMask.setStatus('current')
tpPimInterfaceMode = MibTableColumn((1, 3, 6, 1, 4, 1, 11863, 6, 77, 1, 1, 3, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("disable", 0), ("dense", 1), ("sparse", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tpPimInterfaceMode.setStatus('current')
tpPimInterfaceDRPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 11863, 6, 77, 1, 1, 3, 1, 7), Integer32().clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tpPimInterfaceDRPriority.setStatus('current')
tpPimInterfaceDRAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 11863, 6, 77, 1, 1, 3, 1, 8), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tpPimInterfaceDRAddress.setStatus('current')
tpPimInterfaceHelloInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 11863, 6, 77, 1, 1, 3, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 18725)).clone(30)).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: tpPimInterfaceHelloInterval.setStatus('current')
tpPimInterfaceBsrBorder = MibTableColumn((1, 3, 6, 1, 4, 1, 11863, 6, 77, 1, 1, 3, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tpPimInterfaceBsrBorder.setStatus('current')
tpPimInterfaceJoinPruneInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 11863, 6, 77, 1, 1, 3, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 18724)).clone(60)).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: tpPimInterfaceJoinPruneInterval.setStatus('current')
tpPimNeighborTable = MibTable((1, 3, 6, 1, 4, 1, 11863, 6, 77, 1, 1, 4), )
if mibBuilder.loadTexts: tpPimNeighborTable.setStatus('current')
tpPimNeighborEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11863, 6, 77, 1, 1, 4, 1), ).setIndexNames((0, "TPLINK-PIM-MIB", "tpPimNeighborAddress"))
if mibBuilder.loadTexts: tpPimNeighborEntry.setStatus('current')
tpPimNeighborInterface = MibTableColumn((1, 3, 6, 1, 4, 1, 11863, 6, 77, 1, 1, 4, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 25))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tpPimNeighborInterface.setStatus('current')
tpPimNeighborInterfaceIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11863, 6, 77, 1, 1, 4, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tpPimNeighborInterfaceIndex.setStatus('current')
tpPimNeighborAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 11863, 6, 77, 1, 1, 4, 1, 3), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tpPimNeighborAddress.setStatus('current')
tpPimNeighborUpTime = MibTableColumn((1, 3, 6, 1, 4, 1, 11863, 6, 77, 1, 1, 4, 1, 4), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tpPimNeighborUpTime.setStatus('current')
tpPimNeighborExpiryTime = MibTableColumn((1, 3, 6, 1, 4, 1, 11863, 6, 77, 1, 1, 4, 1, 5), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tpPimNeighborExpiryTime.setStatus('current')
tpPimNeighborMode = MibTableColumn((1, 3, 6, 1, 4, 1, 11863, 6, 77, 1, 1, 4, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("dense", 1), ("sparse", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tpPimNeighborMode.setStatus('deprecated')
tpPimCandidateBSRSet = MibIdentifier((1, 3, 6, 1, 4, 1, 11863, 6, 77, 1, 1, 5))
tpPimCBSRInterface = MibScalar((1, 3, 6, 1, 4, 1, 11863, 6, 77, 1, 1, 5, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 25))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tpPimCBSRInterface.setStatus('current')
tpPimCBSRInterfaceIndex = MibScalar((1, 3, 6, 1, 4, 1, 11863, 6, 77, 1, 1, 5, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tpPimCBSRInterfaceIndex.setStatus('current')
tpPimCBSRHashMaskLength = MibScalar((1, 3, 6, 1, 4, 1, 11863, 6, 77, 1, 1, 5, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 32)).clone(30)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tpPimCBSRHashMaskLength.setStatus('current')
tpPimCBSRPriority = MibScalar((1, 3, 6, 1, 4, 1, 11863, 6, 77, 1, 1, 5, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255)).clone(64)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tpPimCBSRPriority.setStatus('current')
tpPimStaticRpSet = MibIdentifier((1, 3, 6, 1, 4, 1, 11863, 6, 77, 1, 1, 6))
tpPimStaticRpAddress = MibScalar((1, 3, 6, 1, 4, 1, 11863, 6, 77, 1, 1, 6, 1), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tpPimStaticRpAddress.setStatus('current')
tpPimStaticRpOverride = MibScalar((1, 3, 6, 1, 4, 1, 11863, 6, 77, 1, 1, 6, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tpPimStaticRpOverride.setStatus('current')
tpPimCandidateRPSetTable = MibTable((1, 3, 6, 1, 4, 1, 11863, 6, 77, 1, 1, 7), )
if mibBuilder.loadTexts: tpPimCandidateRPSetTable.setStatus('current')
tpPimCandidateRPSetEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11863, 6, 77, 1, 1, 7, 1), ).setIndexNames((0, "TPLINK-PIM-MIB", "tpPimCRPSetInterfaceIndex"))
if mibBuilder.loadTexts: tpPimCandidateRPSetEntry.setStatus('current')
tpPimCRPSetInterface = MibTableColumn((1, 3, 6, 1, 4, 1, 11863, 6, 77, 1, 1, 7, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 25))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tpPimCRPSetInterface.setStatus('current')
tpPimCRPSetInterfaceIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11863, 6, 77, 1, 1, 7, 1, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tpPimCRPSetInterfaceIndex.setStatus('current')
tpPimCRPSetInterfaceType = MibTableColumn((1, 3, 6, 1, 4, 1, 11863, 6, 77, 1, 1, 7, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("vlan", 0), ("loopback", 1), ("routeport", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tpPimCRPSetInterfaceType.setStatus('deprecated')
tpPimCRPSetPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 11863, 6, 77, 1, 1, 7, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255)).clone(192)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tpPimCRPSetPriority.setStatus('current')
tpPimCRPSetInterVal = MibTableColumn((1, 3, 6, 1, 4, 1, 11863, 6, 77, 1, 1, 7, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255)).clone(60)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tpPimCRPSetInterVal.setStatus('current')
tpPimCRPSetNextAdvertisementTime = MibTableColumn((1, 3, 6, 1, 4, 1, 11863, 6, 77, 1, 1, 7, 1, 6), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tpPimCRPSetNextAdvertisementTime.setStatus('current')
tpPimCRPSetInterfaceStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11863, 6, 77, 1, 1, 7, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tpPimCRPSetInterfaceStatus.setStatus('deprecated')
tpPimRPMappingTable = MibTable((1, 3, 6, 1, 4, 1, 11863, 6, 77, 1, 1, 8), )
if mibBuilder.loadTexts: tpPimRPMappingTable.setStatus('deprecated')
tpPimRPMappingEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11863, 6, 77, 1, 1, 8, 1), ).setIndexNames((0, "TPLINK-PIM-MIB", "tpPimRPGroupAddress"), (0, "TPLINK-PIM-MIB", "tpPimRPAddress"))
if mibBuilder.loadTexts: tpPimRPMappingEntry.setStatus('deprecated')
tpPimRPGroupAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 11863, 6, 77, 1, 1, 8, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tpPimRPGroupAddress.setStatus('deprecated')
tpPimRPAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 11863, 6, 77, 1, 1, 8, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tpPimRPAddress.setStatus('deprecated')
tpPimRPInfoSource = MibTableColumn((1, 3, 6, 1, 4, 1, 11863, 6, 77, 1, 1, 8, 1, 3), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tpPimRPInfoSource.setStatus('deprecated')
tpPimRPPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 11863, 6, 77, 1, 1, 8, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tpPimRPPriority.setStatus('deprecated')
tpPimRPHoldTime = MibTableColumn((1, 3, 6, 1, 4, 1, 11863, 6, 77, 1, 1, 8, 1, 5), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tpPimRPHoldTime.setStatus('deprecated')
tpPimRPExpire = MibTableColumn((1, 3, 6, 1, 4, 1, 11863, 6, 77, 1, 1, 8, 1, 6), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tpPimRPExpire.setStatus('deprecated')
mibBuilder.exportSymbols("TPLINK-PIM-MIB", tpPimCandidateRPSetTable=tpPimCandidateRPSetTable, tpPimInterfaceTable=tpPimInterfaceTable, tpPimCBSRInterfaceIndex=tpPimCBSRInterfaceIndex, tpPimNeighborInterfaceIndex=tpPimNeighborInterfaceIndex, tpSGExpiryTimer=tpSGExpiryTimer, tpPimCRPSetInterVal=tpPimCRPSetInterVal, tpPimNeighborTable=tpPimNeighborTable, tpPimRPPriority=tpPimRPPriority, tpPimCRPSetInterfaceStatus=tpPimCRPSetInterfaceStatus, tpPimRPHoldTime=tpPimRPHoldTime, tpPimNeighborUpTime=tpPimNeighborUpTime, tpPimNeighborInterface=tpPimNeighborInterface, tpPimCandidateBSRSet=tpPimCandidateBSRSet, tpPimInterfaceHelloInterval=tpPimInterfaceHelloInterval, tpPimNeighborMode=tpPimNeighborMode, tplinkPimMIBObjects=tplinkPimMIBObjects, PYSNMP_MODULE_ID=tplinkPimMIB, tpPimInterfaceIndex=tpPimInterfaceIndex, tpPimCRPSetPriority=tpPimCRPSetPriority, tpPimStaticRpOverride=tpPimStaticRpOverride, tpPimNeighborExpiryTime=tpPimNeighborExpiryTime, tpPimInterfaceDRAddress=tpPimInterfaceDRAddress, tpPimCandidateRPSetEntry=tpPimCandidateRPSetEntry, tpPimInterfaceEntry=tpPimInterfaceEntry, tplinkPimNotifications=tplinkPimNotifications, tpPimInterfaceMode=tpPimInterfaceMode, tpPimInterfaceJoinPruneInterval=tpPimInterfaceJoinPruneInterval, tpPimInterfaceBsrBorder=tpPimInterfaceBsrBorder, tpPimRPMappingEntry=tpPimRPMappingEntry, tpPimCRPSetNextAdvertisementTime=tpPimCRPSetNextAdvertisementTime, tpPimRPInfoSource=tpPimRPInfoSource, tplinkPimMIB=tplinkPimMIB, tpPimCBSRInterface=tpPimCBSRInterface, tpPimdataThresholdRate=tpPimdataThresholdRate, tpPimNeighborAddress=tpPimNeighborAddress, tpPimCBSRHashMaskLength=tpPimCBSRHashMaskLength, tpPim=tpPim, tpPimStaticRpSet=tpPimStaticRpSet, tpPimStaticRpAddress=tpPimStaticRpAddress, tpPimRPGroupAddress=tpPimRPGroupAddress, tpPimNeighborEntry=tpPimNeighborEntry, tpPimInterfaceNetMask=tpPimInterfaceNetMask, tpPimRPMappingTable=tpPimRPMappingTable, tpPimCRPSetInterfaceType=tpPimCRPSetInterfaceType, tpPimInterface=tpPimInterface, tpPimCRPSetInterfaceIndex=tpPimCRPSetInterfaceIndex, tpPimRPAddress=tpPimRPAddress, tpPimInterfaceAddress=tpPimInterfaceAddress, tpPimCRPSetInterface=tpPimCRPSetInterface, tpPimRPExpire=tpPimRPExpire, tpPimInterfaceDRPriority=tpPimInterfaceDRPriority, tpPimCBSRPriority=tpPimCBSRPriority, tpPimInterfaceType=tpPimInterfaceType)
