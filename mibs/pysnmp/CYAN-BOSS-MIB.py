#
# PySNMP MIB module CYAN-BOSS-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CYAN-BOSS-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 18:18:14 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ValueRangeConstraint, ConstraintsIntersection, SingleValueConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ValueRangeConstraint", "ConstraintsIntersection", "SingleValueConstraint", "ConstraintsUnion")
cyanEntityModules, CyanTypeTc = mibBuilder.importSymbols("CYAN-MIB", "cyanEntityModules", "CyanTypeTc")
CyanOpStateTc, CyanOpStateQualTc, CyanSecServiceStateTc, CyanOffOnTc, CyanAdminStateTc, CyanLEDTc, CyanActvStdbyTc = mibBuilder.importSymbols("CYAN-TC-MIB", "CyanOpStateTc", "CyanOpStateQualTc", "CyanSecServiceStateTc", "CyanOffOnTc", "CyanAdminStateTc", "CyanLEDTc", "CyanActvStdbyTc")
NotificationGroup, ModuleCompliance, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance", "ObjectGroup")
Unsigned32, Counter32, Gauge32, IpAddress, MibIdentifier, TimeTicks, NotificationType, ModuleIdentity, Counter64, MibScalar, MibTable, MibTableRow, MibTableColumn, iso, Bits, Integer32, ObjectIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "Unsigned32", "Counter32", "Gauge32", "IpAddress", "MibIdentifier", "TimeTicks", "NotificationType", "ModuleIdentity", "Counter64", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "iso", "Bits", "Integer32", "ObjectIdentity")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
cyanBossModule = ModuleIdentity((1, 3, 6, 1, 4, 1, 28533, 5, 30, 100))
cyanBossModule.setRevisions(('2014-12-07 05:45',))
if mibBuilder.loadTexts: cyanBossModule.setLastUpdated('201412070545Z')
if mibBuilder.loadTexts: cyanBossModule.setOrganization('Cyan, Inc.')
cyanBossMibObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 28533, 5, 30, 100, 1))
cyanBossTable = MibTable((1, 3, 6, 1, 4, 1, 28533, 5, 30, 100, 1, 1), )
if mibBuilder.loadTexts: cyanBossTable.setStatus('current')
cyanBossEntry = MibTableRow((1, 3, 6, 1, 4, 1, 28533, 5, 30, 100, 1, 1, 1), ).setIndexNames((0, "CYAN-BOSS-MIB", "cyanBossShelfId"), (0, "CYAN-BOSS-MIB", "cyanBossBossId"))
if mibBuilder.loadTexts: cyanBossEntry.setStatus('current')
cyanBossShelfId = MibTableColumn((1, 3, 6, 1, 4, 1, 28533, 5, 30, 100, 1, 1, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255)))
if mibBuilder.loadTexts: cyanBossShelfId.setStatus('current')
cyanBossBossId = MibTableColumn((1, 3, 6, 1, 4, 1, 28533, 5, 30, 100, 1, 1, 1, 2), Unsigned32())
if mibBuilder.loadTexts: cyanBossBossId.setStatus('current')
cyanBossActiveLed = MibTableColumn((1, 3, 6, 1, 4, 1, 28533, 5, 30, 100, 1, 1, 1, 3), CyanLEDTc()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyanBossActiveLed.setStatus('current')
cyanBossActivestandbyState = MibTableColumn((1, 3, 6, 1, 4, 1, 28533, 5, 30, 100, 1, 1, 1, 4), CyanActvStdbyTc()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyanBossActivestandbyState.setStatus('current')
cyanBossAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 28533, 5, 30, 100, 1, 1, 1, 5), CyanAdminStateTc()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyanBossAdminState.setStatus('current')
cyanBossAlarmLed = MibTableColumn((1, 3, 6, 1, 4, 1, 28533, 5, 30, 100, 1, 1, 1, 6), CyanLEDTc()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyanBossAlarmLed.setStatus('current')
cyanBossAssetTag = MibTableColumn((1, 3, 6, 1, 4, 1, 28533, 5, 30, 100, 1, 1, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 124))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyanBossAssetTag.setStatus('current')
cyanBossAutoinserviceSoakTimeSec = MibTableColumn((1, 3, 6, 1, 4, 1, 28533, 5, 30, 100, 1, 1, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyanBossAutoinserviceSoakTimeSec.setStatus('current')
cyanBossBaseMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 28533, 5, 30, 100, 1, 1, 1, 9), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyanBossBaseMacAddress.setStatus('current')
cyanBossCurrCyanSwBuildVersions = MibTableColumn((1, 3, 6, 1, 4, 1, 28533, 5, 30, 100, 1, 1, 1, 10), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyanBossCurrCyanSwBuildVersions.setStatus('current')
cyanBossCurrCyanSwRelease = MibTableColumn((1, 3, 6, 1, 4, 1, 28533, 5, 30, 100, 1, 1, 1, 11), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyanBossCurrCyanSwRelease.setStatus('current')
cyanBossCurrent = MibTableColumn((1, 3, 6, 1, 4, 1, 28533, 5, 30, 100, 1, 1, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyanBossCurrent.setStatus('current')
cyanBossDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 28533, 5, 30, 100, 1, 1, 1, 13), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyanBossDescription.setStatus('current')
cyanBossExhaustAirTemp = MibTableColumn((1, 3, 6, 1, 4, 1, 28533, 5, 30, 100, 1, 1, 1, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-128000, 128000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyanBossExhaustAirTemp.setStatus('current')
cyanBossExhaustTempAlarmHighThres = MibTableColumn((1, 3, 6, 1, 4, 1, 28533, 5, 30, 100, 1, 1, 1, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-128000, 128000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyanBossExhaustTempAlarmHighThres.setStatus('current')
cyanBossExhaustTempAlarmLowThres = MibTableColumn((1, 3, 6, 1, 4, 1, 28533, 5, 30, 100, 1, 1, 1, 16), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-128000, 128000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyanBossExhaustTempAlarmLowThres.setStatus('current')
cyanBossExhaustTempWarnHighThres = MibTableColumn((1, 3, 6, 1, 4, 1, 28533, 5, 30, 100, 1, 1, 1, 17), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-128000, 128000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyanBossExhaustTempWarnHighThres.setStatus('current')
cyanBossExhaustTempWarnLowThres = MibTableColumn((1, 3, 6, 1, 4, 1, 28533, 5, 30, 100, 1, 1, 1, 18), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-128000, 128000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyanBossExhaustTempWarnLowThres.setStatus('current')
cyanBossExpectedTemperatureRise = MibTableColumn((1, 3, 6, 1, 4, 1, 28533, 5, 30, 100, 1, 1, 1, 19), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyanBossExpectedTemperatureRise.setStatus('current')
cyanBossIdentifier = MibTableColumn((1, 3, 6, 1, 4, 1, 28533, 5, 30, 100, 1, 1, 1, 20), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyanBossIdentifier.setStatus('current')
cyanBossIntakeAirTemp = MibTableColumn((1, 3, 6, 1, 4, 1, 28533, 5, 30, 100, 1, 1, 1, 21), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-128000, 128000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyanBossIntakeAirTemp.setStatus('current')
cyanBossIntakeTempAlarmHighThres = MibTableColumn((1, 3, 6, 1, 4, 1, 28533, 5, 30, 100, 1, 1, 1, 22), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-128000, 128000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyanBossIntakeTempAlarmHighThres.setStatus('current')
cyanBossIntakeTempAlarmLowThres = MibTableColumn((1, 3, 6, 1, 4, 1, 28533, 5, 30, 100, 1, 1, 1, 23), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-128000, 128000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyanBossIntakeTempAlarmLowThres.setStatus('current')
cyanBossIntakeTempWarnHighThres = MibTableColumn((1, 3, 6, 1, 4, 1, 28533, 5, 30, 100, 1, 1, 1, 24), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-128000, 128000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyanBossIntakeTempWarnHighThres.setStatus('current')
cyanBossIntakeTempWarnLowThres = MibTableColumn((1, 3, 6, 1, 4, 1, 28533, 5, 30, 100, 1, 1, 1, 25), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-128000, 128000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyanBossIntakeTempWarnLowThres.setStatus('current')
cyanBossLedTest = MibTableColumn((1, 3, 6, 1, 4, 1, 28533, 5, 30, 100, 1, 1, 1, 26), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyanBossLedTest.setStatus('current')
cyanBossMacBlockSize = MibTableColumn((1, 3, 6, 1, 4, 1, 28533, 5, 30, 100, 1, 1, 1, 27), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyanBossMacBlockSize.setStatus('current')
cyanBossMfgCleiCode = MibTableColumn((1, 3, 6, 1, 4, 1, 28533, 5, 30, 100, 1, 1, 1, 28), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 10))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyanBossMfgCleiCode.setStatus('current')
cyanBossMfgEciCode = MibTableColumn((1, 3, 6, 1, 4, 1, 28533, 5, 30, 100, 1, 1, 1, 29), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 6))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyanBossMfgEciCode.setStatus('current')
cyanBossMfgModuleId = MibTableColumn((1, 3, 6, 1, 4, 1, 28533, 5, 30, 100, 1, 1, 1, 30), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyanBossMfgModuleId.setStatus('current')
cyanBossMfgPartNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 28533, 5, 30, 100, 1, 1, 1, 31), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyanBossMfgPartNumber.setStatus('current')
cyanBossMfgRevision = MibTableColumn((1, 3, 6, 1, 4, 1, 28533, 5, 30, 100, 1, 1, 1, 32), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 4))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyanBossMfgRevision.setStatus('current')
cyanBossMfgSerialNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 28533, 5, 30, 100, 1, 1, 1, 33), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyanBossMfgSerialNumber.setStatus('current')
cyanBossName = MibTableColumn((1, 3, 6, 1, 4, 1, 28533, 5, 30, 100, 1, 1, 1, 34), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyanBossName.setStatus('current')
cyanBossOidClass = MibTableColumn((1, 3, 6, 1, 4, 1, 28533, 5, 30, 100, 1, 1, 1, 35), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyanBossOidClass.setStatus('current')
cyanBossOperState = MibTableColumn((1, 3, 6, 1, 4, 1, 28533, 5, 30, 100, 1, 1, 1, 36), CyanOpStateTc()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyanBossOperState.setStatus('current')
cyanBossOperStateQual = MibTableColumn((1, 3, 6, 1, 4, 1, 28533, 5, 30, 100, 1, 1, 1, 37), CyanOpStateQualTc()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyanBossOperStateQual.setStatus('current')
cyanBossOssLabel = MibTableColumn((1, 3, 6, 1, 4, 1, 28533, 5, 30, 100, 1, 1, 1, 38), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 80))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyanBossOssLabel.setStatus('current')
cyanBossOvervoltageThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 28533, 5, 30, 100, 1, 1, 1, 39), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyanBossOvervoltageThreshold.setStatus('current')
cyanBossOwner = MibTableColumn((1, 3, 6, 1, 4, 1, 28533, 5, 30, 100, 1, 1, 1, 40), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 80))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyanBossOwner.setStatus('current')
cyanBossPartNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 28533, 5, 30, 100, 1, 1, 1, 41), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 11))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyanBossPartNumber.setStatus('current')
cyanBossPowerLed = MibTableColumn((1, 3, 6, 1, 4, 1, 28533, 5, 30, 100, 1, 1, 1, 42), CyanLEDTc()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyanBossPowerLed.setStatus('current')
cyanBossPsuTemperature = MibTableColumn((1, 3, 6, 1, 4, 1, 28533, 5, 30, 100, 1, 1, 1, 43), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-25000, 85000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyanBossPsuTemperature.setStatus('current')
cyanBossPwrFeedAStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 28533, 5, 30, 100, 1, 1, 1, 44), CyanOffOnTc()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyanBossPwrFeedAStatus.setStatus('current')
cyanBossPwrFeedAVoltage = MibTableColumn((1, 3, 6, 1, 4, 1, 28533, 5, 30, 100, 1, 1, 1, 45), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyanBossPwrFeedAVoltage.setStatus('current')
cyanBossPwrFeedBStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 28533, 5, 30, 100, 1, 1, 1, 46), CyanOffOnTc()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyanBossPwrFeedBStatus.setStatus('current')
cyanBossPwrFeedBVoltage = MibTableColumn((1, 3, 6, 1, 4, 1, 28533, 5, 30, 100, 1, 1, 1, 47), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyanBossPwrFeedBVoltage.setStatus('current')
cyanBossRevertCyanSwBuildVersions = MibTableColumn((1, 3, 6, 1, 4, 1, 28533, 5, 30, 100, 1, 1, 1, 48), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyanBossRevertCyanSwBuildVersions.setStatus('current')
cyanBossRevertCyanSwRelease = MibTableColumn((1, 3, 6, 1, 4, 1, 28533, 5, 30, 100, 1, 1, 1, 49), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyanBossRevertCyanSwRelease.setStatus('current')
cyanBossSecServState = MibTableColumn((1, 3, 6, 1, 4, 1, 28533, 5, 30, 100, 1, 1, 1, 50), CyanSecServiceStateTc()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyanBossSecServState.setStatus('current')
cyanBossSynchLed = MibTableColumn((1, 3, 6, 1, 4, 1, 28533, 5, 30, 100, 1, 1, 1, 51), CyanLEDTc()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyanBossSynchLed.setStatus('current')
cyanBossType = MibTableColumn((1, 3, 6, 1, 4, 1, 28533, 5, 30, 100, 1, 1, 1, 52), CyanTypeTc()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyanBossType.setStatus('current')
cyanBossUndervoltageThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 28533, 5, 30, 100, 1, 1, 1, 53), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyanBossUndervoltageThreshold.setStatus('current')
cyanBossUpgradeCyanSwBuildVersions = MibTableColumn((1, 3, 6, 1, 4, 1, 28533, 5, 30, 100, 1, 1, 1, 54), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyanBossUpgradeCyanSwBuildVersions.setStatus('current')
cyanBossUpgradeCyanSwRelease = MibTableColumn((1, 3, 6, 1, 4, 1, 28533, 5, 30, 100, 1, 1, 1, 55), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyanBossUpgradeCyanSwRelease.setStatus('current')
cyanBossObjectGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 28533, 5, 30, 100, 20)).setObjects(("CYAN-BOSS-MIB", "cyanBossActiveLed"), ("CYAN-BOSS-MIB", "cyanBossActivestandbyState"), ("CYAN-BOSS-MIB", "cyanBossAdminState"), ("CYAN-BOSS-MIB", "cyanBossAlarmLed"), ("CYAN-BOSS-MIB", "cyanBossAssetTag"), ("CYAN-BOSS-MIB", "cyanBossAutoinserviceSoakTimeSec"), ("CYAN-BOSS-MIB", "cyanBossBaseMacAddress"), ("CYAN-BOSS-MIB", "cyanBossCurrCyanSwBuildVersions"), ("CYAN-BOSS-MIB", "cyanBossCurrCyanSwRelease"), ("CYAN-BOSS-MIB", "cyanBossCurrent"), ("CYAN-BOSS-MIB", "cyanBossDescription"), ("CYAN-BOSS-MIB", "cyanBossExhaustAirTemp"), ("CYAN-BOSS-MIB", "cyanBossExhaustTempAlarmHighThres"), ("CYAN-BOSS-MIB", "cyanBossExhaustTempAlarmLowThres"), ("CYAN-BOSS-MIB", "cyanBossExhaustTempWarnHighThres"), ("CYAN-BOSS-MIB", "cyanBossExhaustTempWarnLowThres"), ("CYAN-BOSS-MIB", "cyanBossExpectedTemperatureRise"), ("CYAN-BOSS-MIB", "cyanBossIdentifier"), ("CYAN-BOSS-MIB", "cyanBossIntakeAirTemp"), ("CYAN-BOSS-MIB", "cyanBossIntakeTempAlarmHighThres"), ("CYAN-BOSS-MIB", "cyanBossIntakeTempAlarmLowThres"), ("CYAN-BOSS-MIB", "cyanBossIntakeTempWarnHighThres"), ("CYAN-BOSS-MIB", "cyanBossIntakeTempWarnLowThres"), ("CYAN-BOSS-MIB", "cyanBossLedTest"), ("CYAN-BOSS-MIB", "cyanBossMacBlockSize"), ("CYAN-BOSS-MIB", "cyanBossMfgCleiCode"), ("CYAN-BOSS-MIB", "cyanBossMfgEciCode"), ("CYAN-BOSS-MIB", "cyanBossMfgModuleId"), ("CYAN-BOSS-MIB", "cyanBossMfgPartNumber"), ("CYAN-BOSS-MIB", "cyanBossMfgRevision"), ("CYAN-BOSS-MIB", "cyanBossMfgSerialNumber"), ("CYAN-BOSS-MIB", "cyanBossName"), ("CYAN-BOSS-MIB", "cyanBossOidClass"), ("CYAN-BOSS-MIB", "cyanBossOperState"), ("CYAN-BOSS-MIB", "cyanBossOperStateQual"), ("CYAN-BOSS-MIB", "cyanBossOssLabel"), ("CYAN-BOSS-MIB", "cyanBossOvervoltageThreshold"), ("CYAN-BOSS-MIB", "cyanBossOwner"), ("CYAN-BOSS-MIB", "cyanBossPartNumber"), ("CYAN-BOSS-MIB", "cyanBossPowerLed"), ("CYAN-BOSS-MIB", "cyanBossPsuTemperature"), ("CYAN-BOSS-MIB", "cyanBossPwrFeedAStatus"), ("CYAN-BOSS-MIB", "cyanBossPwrFeedAVoltage"), ("CYAN-BOSS-MIB", "cyanBossPwrFeedBStatus"), ("CYAN-BOSS-MIB", "cyanBossPwrFeedBVoltage"), ("CYAN-BOSS-MIB", "cyanBossRevertCyanSwBuildVersions"), ("CYAN-BOSS-MIB", "cyanBossRevertCyanSwRelease"), ("CYAN-BOSS-MIB", "cyanBossSecServState"), ("CYAN-BOSS-MIB", "cyanBossSynchLed"), ("CYAN-BOSS-MIB", "cyanBossType"), ("CYAN-BOSS-MIB", "cyanBossUndervoltageThreshold"), ("CYAN-BOSS-MIB", "cyanBossUpgradeCyanSwBuildVersions"), ("CYAN-BOSS-MIB", "cyanBossUpgradeCyanSwRelease"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cyanBossObjectGroup = cyanBossObjectGroup.setStatus('current')
cyanBossCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 28533, 5, 30, 100, 30)).setObjects(("CYAN-BOSS-MIB", "cyanBossObjectGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cyanBossCompliance = cyanBossCompliance.setStatus('current')
mibBuilder.exportSymbols("CYAN-BOSS-MIB", cyanBossExhaustTempAlarmLowThres=cyanBossExhaustTempAlarmLowThres, cyanBossMfgPartNumber=cyanBossMfgPartNumber, cyanBossExpectedTemperatureRise=cyanBossExpectedTemperatureRise, cyanBossCompliance=cyanBossCompliance, cyanBossEntry=cyanBossEntry, cyanBossUpgradeCyanSwRelease=cyanBossUpgradeCyanSwRelease, cyanBossOperStateQual=cyanBossOperStateQual, PYSNMP_MODULE_ID=cyanBossModule, cyanBossAdminState=cyanBossAdminState, cyanBossActiveLed=cyanBossActiveLed, cyanBossModule=cyanBossModule, cyanBossPwrFeedAVoltage=cyanBossPwrFeedAVoltage, cyanBossCurrent=cyanBossCurrent, cyanBossLedTest=cyanBossLedTest, cyanBossOssLabel=cyanBossOssLabel, cyanBossPwrFeedAStatus=cyanBossPwrFeedAStatus, cyanBossUpgradeCyanSwBuildVersions=cyanBossUpgradeCyanSwBuildVersions, cyanBossIntakeTempAlarmLowThres=cyanBossIntakeTempAlarmLowThres, cyanBossName=cyanBossName, cyanBossOidClass=cyanBossOidClass, cyanBossSecServState=cyanBossSecServState, cyanBossTable=cyanBossTable, cyanBossRevertCyanSwRelease=cyanBossRevertCyanSwRelease, cyanBossIntakeTempWarnHighThres=cyanBossIntakeTempWarnHighThres, cyanBossPowerLed=cyanBossPowerLed, cyanBossMfgModuleId=cyanBossMfgModuleId, cyanBossMfgEciCode=cyanBossMfgEciCode, cyanBossMacBlockSize=cyanBossMacBlockSize, cyanBossCurrCyanSwRelease=cyanBossCurrCyanSwRelease, cyanBossIntakeTempAlarmHighThres=cyanBossIntakeTempAlarmHighThres, cyanBossUndervoltageThreshold=cyanBossUndervoltageThreshold, cyanBossIdentifier=cyanBossIdentifier, cyanBossPsuTemperature=cyanBossPsuTemperature, cyanBossBaseMacAddress=cyanBossBaseMacAddress, cyanBossMfgCleiCode=cyanBossMfgCleiCode, cyanBossMfgRevision=cyanBossMfgRevision, cyanBossDescription=cyanBossDescription, cyanBossMfgSerialNumber=cyanBossMfgSerialNumber, cyanBossSynchLed=cyanBossSynchLed, cyanBossOvervoltageThreshold=cyanBossOvervoltageThreshold, cyanBossPwrFeedBVoltage=cyanBossPwrFeedBVoltage, cyanBossAlarmLed=cyanBossAlarmLed, cyanBossActivestandbyState=cyanBossActivestandbyState, cyanBossExhaustTempWarnHighThres=cyanBossExhaustTempWarnHighThres, cyanBossBossId=cyanBossBossId, cyanBossExhaustTempWarnLowThres=cyanBossExhaustTempWarnLowThres, cyanBossShelfId=cyanBossShelfId, cyanBossAutoinserviceSoakTimeSec=cyanBossAutoinserviceSoakTimeSec, cyanBossIntakeTempWarnLowThres=cyanBossIntakeTempWarnLowThres, cyanBossExhaustAirTemp=cyanBossExhaustAirTemp, cyanBossIntakeAirTemp=cyanBossIntakeAirTemp, cyanBossOperState=cyanBossOperState, cyanBossPartNumber=cyanBossPartNumber, cyanBossRevertCyanSwBuildVersions=cyanBossRevertCyanSwBuildVersions, cyanBossObjectGroup=cyanBossObjectGroup, cyanBossPwrFeedBStatus=cyanBossPwrFeedBStatus, cyanBossType=cyanBossType, cyanBossCurrCyanSwBuildVersions=cyanBossCurrCyanSwBuildVersions, cyanBossMibObjects=cyanBossMibObjects, cyanBossAssetTag=cyanBossAssetTag, cyanBossOwner=cyanBossOwner, cyanBossExhaustTempAlarmHighThres=cyanBossExhaustTempAlarmHighThres)
