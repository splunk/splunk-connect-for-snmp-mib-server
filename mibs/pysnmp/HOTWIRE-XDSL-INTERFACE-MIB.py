#
# PySNMP MIB module HOTWIRE-XDSL-INTERFACE-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/HOTWIRE-XDSL-INTERFACE-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:20:21 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ValueSizeConstraint, ValueRangeConstraint, ConstraintsIntersection, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ValueSizeConstraint", "ValueRangeConstraint", "ConstraintsIntersection", "ConstraintsUnion")
pdnPortConfigVNID, = mibBuilder.importSymbols("HOT-DOMAIN-MIB", "pdnPortConfigVNID")
ifIndex, = mibBuilder.importSymbols("IF-MIB", "ifIndex")
xdsl, = mibBuilder.importSymbols("PDN-HEADER-MIB", "xdsl")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
MibIdentifier, NotificationType, Counter32, TimeTicks, ObjectIdentity, ModuleIdentity, Unsigned32, IpAddress, iso, Counter64, Bits, NotificationType, Gauge32, MibScalar, MibTable, MibTableRow, MibTableColumn, Integer32 = mibBuilder.importSymbols("SNMPv2-SMI", "MibIdentifier", "NotificationType", "Counter32", "TimeTicks", "ObjectIdentity", "ModuleIdentity", "Unsigned32", "IpAddress", "iso", "Counter64", "Bits", "NotificationType", "Gauge32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Integer32")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
xdslDevice = MibIdentifier((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 8, 1))
class DisplayString(OctetString):
    pass

xdslDevIfStats = MibIdentifier((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 8, 1, 1))
xdslDevIfConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 8, 1, 2))
xdslRemoteSys = MibIdentifier((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 8, 1, 3))
xdslRemoteDTEStatus = MibIdentifier((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 8, 1, 4))
xdslDevMvlIfConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 8, 1, 5))
xdslDevNAPCustomerAccount = MibIdentifier((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 8, 1, 6))
xdslLinkUpDownInformation = MibIdentifier((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 8, 1, 7))
xdslRemoteInjection = MibIdentifier((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 8, 1, 8))
xdslDevIDSLConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 8, 1, 9))
xdslDevIfIntervalStatsTable = MibTable((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 8, 1, 1, 1), )
if mibBuilder.loadTexts: xdslDevIfIntervalStatsTable.setStatus('mandatory')
xdslDevIfIntervalStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 8, 1, 1, 1, 1), ).setIndexNames((0, "HOTWIRE-XDSL-INTERFACE-MIB", "xdslDevIfStatsIfIndex"), (0, "HOTWIRE-XDSL-INTERFACE-MIB", "xdslDevIfStatsInterval"))
if mibBuilder.loadTexts: xdslDevIfIntervalStatsEntry.setStatus('mandatory')
xdslDevIfStatsIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 8, 1, 1, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xdslDevIfStatsIfIndex.setStatus('mandatory')
xdslDevIfStatsInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 8, 1, 1, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32))).clone(namedValues=NamedValues(("first15MinuteSlice", 1), ("second15MinuteSlice", 2), ("third15MinuteSlice", 3), ("fourth15MinuteSlice", 4), ("currentHour", 5), ("current15Minutes", 6), ("hour1of24hrs", 7), ("hour2of24hrs", 8), ("hour3of24hrs", 9), ("hour4of24hrs", 10), ("hour5of24hrs", 11), ("hour6of24hrs", 12), ("hour7of24hrs", 13), ("hour8of24hrs", 14), ("hour9of24hrs", 15), ("hour10of24hrs", 16), ("hour11of24hrs", 17), ("hour12of24hrs", 18), ("hour13of24hrs", 19), ("hour14of24hrs", 20), ("hour15of24hrs", 21), ("hour16of24hrs", 22), ("hour17of24hrs", 23), ("hour18of24hrs", 24), ("hour19of24hrs", 25), ("hour20of24hrs", 26), ("hour21of24hrs", 27), ("hour22of24hrs", 28), ("hour23of24hrs", 29), ("hour24of24hrs", 30), ("current24Hours", 31), ("previousDay", 32)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: xdslDevIfStatsInterval.setStatus('mandatory')
xdslDevIfStatsValid15MinuteIntervalCount = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 8, 1, 1, 1, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xdslDevIfStatsValid15MinuteIntervalCount.setStatus('mandatory')
xdslDevIfStatsElapsedTimeLinkUp = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 8, 1, 1, 1, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xdslDevIfStatsElapsedTimeLinkUp.setStatus('mandatory')
xdslDevIfStatsLinkDownCount = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 8, 1, 1, 1, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xdslDevIfStatsLinkDownCount.setStatus('mandatory')
xdslDevIfStatsUpStreamSpeed = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 8, 1, 1, 1, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xdslDevIfStatsUpStreamSpeed.setStatus('mandatory')
xdslDevIfStatsCentralReceiverGain = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 8, 1, 1, 1, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xdslDevIfStatsCentralReceiverGain.setStatus('mandatory')
xdslDevIfStatsCentralRecMargin = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 8, 1, 1, 1, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xdslDevIfStatsCentralRecMargin.setStatus('mandatory')
xdslDevIfStatsCentralRecAttenuationEstimate = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 8, 1, 1, 1, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xdslDevIfStatsCentralRecAttenuationEstimate.setStatus('mandatory')
xdslDevIfStatsCentralRecTransmitPower = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 8, 1, 1, 1, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xdslDevIfStatsCentralRecTransmitPower.setStatus('mandatory')
xdslDevIfStatsCentralRecErrorRate = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 8, 1, 1, 1, 1, 11), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: xdslDevIfStatsCentralRecErrorRate.setStatus('mandatory')
xdslDevIfStatsCentralRecErroredSeconds = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 8, 1, 1, 1, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xdslDevIfStatsCentralRecErroredSeconds.setStatus('mandatory')
xdslDevIfStatsCentralRecSeverelyErroredSeconds = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 8, 1, 1, 1, 1, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xdslDevIfStatsCentralRecSeverelyErroredSeconds.setStatus('mandatory')
xdslDevIfStatsRemoteReceiverGain = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 8, 1, 1, 1, 1, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xdslDevIfStatsRemoteReceiverGain.setStatus('mandatory')
xdslDevIfStatsRemoteRecMargin = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 8, 1, 1, 1, 1, 15), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xdslDevIfStatsRemoteRecMargin.setStatus('mandatory')
xdslDevIfStatsRemoteRecAttenuationEstimate = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 8, 1, 1, 1, 1, 16), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xdslDevIfStatsRemoteRecAttenuationEstimate.setStatus('mandatory')
xdslDevIfStatsRemoteRecTransmitPower = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 8, 1, 1, 1, 1, 17), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xdslDevIfStatsRemoteRecTransmitPower.setStatus('mandatory')
xdslDevIfStatsRemoteRecErrorRate = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 8, 1, 1, 1, 1, 18), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: xdslDevIfStatsRemoteRecErrorRate.setStatus('mandatory')
xdslDevIfStatsRemoteRecErroredSeconds = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 8, 1, 1, 1, 1, 19), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xdslDevIfStatsRemoteRecErroredSeconds.setStatus('mandatory')
xdslDevIfStatsRemoteRecSeverelyErroredSeconds = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 8, 1, 1, 1, 1, 20), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xdslDevIfStatsRemoteRecSeverelyErroredSeconds.setStatus('mandatory')
xdslDevIfStatsRemoteOctetsCorrected = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 8, 1, 1, 1, 1, 21), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xdslDevIfStatsRemoteOctetsCorrected.setStatus('mandatory')
xdslDevIfStatsRemoteOctetsNotCorrected = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 8, 1, 1, 1, 1, 22), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xdslDevIfStatsRemoteOctetsNotCorrected.setStatus('mandatory')
xdslDevIfStatsRemoteReceivedKiloOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 8, 1, 1, 1, 1, 23), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xdslDevIfStatsRemoteReceivedKiloOctets.setStatus('mandatory')
xdslDevIfStatsRemoteReceivedPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 8, 1, 1, 1, 1, 24), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xdslDevIfStatsRemoteReceivedPkts.setStatus('mandatory')
xdslDevIfStatsRemoteRecErrPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 8, 1, 1, 1, 1, 25), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xdslDevIfStatsRemoteRecErrPkts.setStatus('mandatory')
xdslDevIfStatsRemoteDroppedPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 8, 1, 1, 1, 1, 26), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xdslDevIfStatsRemoteDroppedPkts.setStatus('mandatory')
xdslDevIfStatsRemoteTransmittedKiloOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 8, 1, 1, 1, 1, 27), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xdslDevIfStatsRemoteTransmittedKiloOctets.setStatus('mandatory')
xdslDevIfStatsRemoteTransmittedPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 8, 1, 1, 1, 1, 28), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xdslDevIfStatsRemoteTransmittedPkts.setStatus('mandatory')
xdslDevIfStatsCentralRecErroredMinutes = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 8, 1, 1, 1, 1, 29), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xdslDevIfStatsCentralRecErroredMinutes.setStatus('mandatory')
xdslDevIfStatsCentralRecSeverelyErroredMinutes = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 8, 1, 1, 1, 1, 30), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xdslDevIfStatsCentralRecSeverelyErroredMinutes.setStatus('mandatory')
xdslDevIfStatsRemoteRecErroredMinutes = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 8, 1, 1, 1, 1, 31), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xdslDevIfStatsRemoteRecErroredMinutes.setStatus('mandatory')
xdslDevIfStatsRemoteRecSeverelyErroredMinutes = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 8, 1, 1, 1, 1, 32), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xdslDevIfStatsRemoteRecSeverelyErroredMinutes.setStatus('mandatory')
xdslDevIfStatsCentralReceivedKiloOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 8, 1, 1, 1, 1, 33), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xdslDevIfStatsCentralReceivedKiloOctets.setStatus('mandatory')
xdslDevIfStatsCentralTransmittedKiloOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 8, 1, 1, 1, 1, 34), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xdslDevIfStatsCentralTransmittedKiloOctets.setStatus('mandatory')
xdslDevIfStatsCentralTransmittedPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 8, 1, 1, 1, 1, 35), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xdslDevIfStatsCentralTransmittedPkts.setStatus('mandatory')
xdslDevIfStatsCentralReceivedPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 8, 1, 1, 1, 1, 36), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xdslDevIfStatsCentralReceivedPkts.setStatus('mandatory')
xdslDevIfStatsCentralErrPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 8, 1, 1, 1, 1, 37), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xdslDevIfStatsCentralErrPkts.setStatus('mandatory')
xdslDevIfConfigTable = MibTable((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 8, 1, 2, 1), )
if mibBuilder.loadTexts: xdslDevIfConfigTable.setStatus('mandatory')
xdslDevIfConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 8, 1, 2, 1, 1), ).setIndexNames((0, "HOTWIRE-XDSL-INTERFACE-MIB", "xdslDevIfConfigIfIndex"))
if mibBuilder.loadTexts: xdslDevIfConfigEntry.setStatus('mandatory')
xdslDevIfConfigIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 8, 1, 2, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xdslDevIfConfigIfIndex.setStatus('mandatory')
xdslDevIfConfigPortSpeedBehaviour = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 8, 1, 2, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("fixed", 1), ("adaptive", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xdslDevIfConfigPortSpeedBehaviour.setStatus('mandatory')
xdslDevIfConfigUpFixedPortSpeed = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 8, 1, 2, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29))).clone(namedValues=NamedValues(("s272", 1), ("s408", 2), ("s544", 3), ("s680", 4), ("s816", 5), ("s952", 6), ("s1088", 7), ("s91", 8), ("s476", 9), ("s340", 10), ("s204", 11), ("s136", 12), ("s119", 13), ("s102", 14), ("s85", 15), ("s68", 16), ("s51", 17), ("s45", 18), ("s34", 19), ("s11", 20), ("s2320", 21), ("s2046", 22), ("s1552", 23), ("s1040", 24), ("s784", 25), ("s528", 26), ("s400", 27), ("s277", 28), ("s144", 29)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xdslDevIfConfigUpFixedPortSpeed.setStatus('mandatory')
xdslDevIfConfigDownFixedPortSpeed = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 8, 1, 2, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28))).clone(namedValues=NamedValues(("s640", 1), ("s960", 2), ("s1280", 3), ("s1600", 4), ("s1920", 5), ("s2240", 6), ("s2560", 7), ("s2688", 8), ("s3200", 9), ("s4480", 10), ("s5120", 11), ("s6272", 12), ("s7168", 13), ("s1024", 14), ("s896", 15), ("s768", 16), ("s512", 17), ("s384", 18), ("s256", 19), ("s2320", 20), ("s2046", 21), ("s1552", 22), ("s1040", 23), ("s784", 24), ("s528", 25), ("s400", 26), ("s277", 27), ("s144", 28)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xdslDevIfConfigDownFixedPortSpeed.setStatus('mandatory')
xdslDevIfConfigUpAdaptiveUpperBoundPortSpeed = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 8, 1, 2, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20))).clone(namedValues=NamedValues(("s272", 1), ("s408", 2), ("s544", 3), ("s680", 4), ("s816", 5), ("s952", 6), ("s1088", 7), ("s91", 8), ("s476", 9), ("s340", 10), ("s204", 11), ("s136", 12), ("s119", 13), ("s102", 14), ("s85", 15), ("s68", 16), ("s51", 17), ("s45", 18), ("s34", 19), ("s11", 20)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xdslDevIfConfigUpAdaptiveUpperBoundPortSpeed.setStatus('mandatory')
xdslDevIfConfigUpAdaptiveLowerBoundPortSpeed = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 8, 1, 2, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20))).clone(namedValues=NamedValues(("s272", 1), ("s408", 2), ("s544", 3), ("s680", 4), ("s816", 5), ("s952", 6), ("s1088", 7), ("s91", 8), ("s476", 9), ("s340", 10), ("s204", 11), ("s136", 12), ("s119", 13), ("s102", 14), ("s85", 15), ("s68", 16), ("s51", 17), ("s45", 18), ("s34", 19), ("s11", 20)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xdslDevIfConfigUpAdaptiveLowerBoundPortSpeed.setStatus('mandatory')
xdslDevIfConfigDownAdaptiveUpperBoundPortSpeed = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 8, 1, 2, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19))).clone(namedValues=NamedValues(("s640", 1), ("s960", 2), ("s1280", 3), ("s1600", 4), ("s1920", 5), ("s2240", 6), ("s2560", 7), ("s2688", 8), ("s3200", 9), ("s4480", 10), ("s5120", 11), ("s6272", 12), ("s7168", 13), ("s1024", 14), ("s896", 15), ("s768", 16), ("s512", 17), ("s384", 18), ("s256", 19)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xdslDevIfConfigDownAdaptiveUpperBoundPortSpeed.setStatus('mandatory')
xdslDevIfConfigDownAdaptiveLowerBoundPortSpeed = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 8, 1, 2, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19))).clone(namedValues=NamedValues(("s640", 1), ("s960", 2), ("s1280", 3), ("s1600", 4), ("s1920", 5), ("s2240", 6), ("s2560", 7), ("s2688", 8), ("s3200", 9), ("s4480", 10), ("s5120", 11), ("s6272", 12), ("s7168", 13), ("s1024", 14), ("s896", 15), ("s768", 16), ("s512", 17), ("s384", 18), ("s256", 19)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xdslDevIfConfigDownAdaptiveLowerBoundPortSpeed.setStatus('mandatory')
xdslDevIfConfigReedSolomonDownForwardErrorCorrection = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 8, 1, 2, 1, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("minimizeError", 1), ("minimizeDelay", 2), ("reedSolomonNotSupported", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xdslDevIfConfigReedSolomonDownForwardErrorCorrection.setStatus('mandatory')
xdslDevIfConfigMarginThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 8, 1, 2, 1, 1, 10), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xdslDevIfConfigMarginThreshold.setStatus('mandatory')
xdslDevIfConfigEstimatedHrErrRateThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 8, 1, 2, 1, 1, 11), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xdslDevIfConfigEstimatedHrErrRateThreshold.setStatus('mandatory')
xdslDevIfConfigEstimatedDayErrRateThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 8, 1, 2, 1, 1, 12), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xdslDevIfConfigEstimatedDayErrRateThreshold.setStatus('mandatory')
xdslDevIfConfigPortID = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 8, 1, 2, 1, 1, 13), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 40))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xdslDevIfConfigPortID.setStatus('mandatory')
xdslDevIfLinkUpDownTransitionThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 8, 1, 2, 1, 1, 14), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xdslDevIfLinkUpDownTransitionThreshold.setStatus('mandatory')
xdslDevIfConfigStartUpMargin = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 8, 1, 2, 1, 1, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-3, 9))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xdslDevIfConfigStartUpMargin.setStatus('mandatory')
xdslDevIfConfigTxPowerAttenuation = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 8, 1, 2, 1, 1, 16), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xdslDevIfConfigTxPowerAttenuation.setStatus('mandatory')
xdslDevIfConfigSnTxPowerAttenuation = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 8, 1, 2, 1, 1, 17), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xdslDevIfConfigSnTxPowerAttenuation.setStatus('mandatory')
xdslRemoteSysTable = MibTable((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 8, 1, 3, 1), )
if mibBuilder.loadTexts: xdslRemoteSysTable.setStatus('mandatory')
xdslRemoteSysEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 8, 1, 3, 1, 1), ).setIndexNames((0, "HOTWIRE-XDSL-INTERFACE-MIB", "xdslRemoteSysIndex"))
if mibBuilder.loadTexts: xdslRemoteSysEntry.setStatus('mandatory')
xdslRemoteSysIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 8, 1, 3, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xdslRemoteSysIndex.setStatus('mandatory')
xdslRemoteSysDescr = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 8, 1, 3, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: xdslRemoteSysDescr.setStatus('mandatory')
xdslRemoteSysObjectID = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 8, 1, 3, 1, 1, 3), ObjectIdentifier()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xdslRemoteSysObjectID.setStatus('mandatory')
xdslRemoteSysUpTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 8, 1, 3, 1, 1, 4), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xdslRemoteSysUpTime.setStatus('mandatory')
xdslRemoteSysContact = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 8, 1, 3, 1, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xdslRemoteSysContact.setStatus('mandatory')
xdslRemoteSysName = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 8, 1, 3, 1, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xdslRemoteSysName.setStatus('mandatory')
xdslRemoteSysLocation = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 8, 1, 3, 1, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xdslRemoteSysLocation.setStatus('mandatory')
xdslRemoteSysServices = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 8, 1, 3, 1, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 127))).setMaxAccess("readonly")
if mibBuilder.loadTexts: xdslRemoteSysServices.setStatus('mandatory')
xdslRemoteSysCircuitId = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 8, 1, 3, 1, 1, 9), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: xdslRemoteSysCircuitId.setStatus('mandatory')
xdslRemoteDTEStatusTable = MibTable((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 8, 1, 4, 1), )
if mibBuilder.loadTexts: xdslRemoteDTEStatusTable.setStatus('mandatory')
xdslRemoteDTEStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 8, 1, 4, 1, 1), ).setIndexNames((0, "HOTWIRE-XDSL-INTERFACE-MIB", "xdslRemoteDTEStatusIndex"))
if mibBuilder.loadTexts: xdslRemoteDTEStatusEntry.setStatus('mandatory')
xdslRemoteDTEStatusIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 8, 1, 4, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xdslRemoteDTEStatusIndex.setStatus('mandatory')
xdslRemoteDTEState = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 8, 1, 4, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("inService", 1), ("outOfService", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: xdslRemoteDTEState.setStatus('mandatory')
xdslRemoteDTEType = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 8, 1, 4, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("v35", 1), ("eia530", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: xdslRemoteDTEType.setStatus('mandatory')
xdslRemoteDTEClockSource = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 8, 1, 4, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("internal", 1), ("external", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: xdslRemoteDTEClockSource.setStatus('mandatory')
xdslRemoteDTEStrobe = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 8, 1, 4, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("risingEdge", 1), ("fallingEdge", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: xdslRemoteDTEStrobe.setStatus('mandatory')
xdslRemoteDTELoopbackState = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 8, 1, 4, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("on", 1), ("off", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: xdslRemoteDTELoopbackState.setStatus('mandatory')
xdslDevMvlIfConfigTable = MibTable((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 8, 1, 5, 1), )
if mibBuilder.loadTexts: xdslDevMvlIfConfigTable.setStatus('mandatory')
xdslDevMvlIfConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 8, 1, 5, 1, 1), ).setIndexNames((0, "HOTWIRE-XDSL-INTERFACE-MIB", "xdslDevMvlIfConfigIfIndex"))
if mibBuilder.loadTexts: xdslDevMvlIfConfigEntry.setStatus('mandatory')
xdslDevMvlIfConfigIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 8, 1, 5, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xdslDevMvlIfConfigIfIndex.setStatus('mandatory')
xdslDevMvlIfConfigUpperBoundPortSpeed = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 8, 1, 5, 1, 1, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xdslDevMvlIfConfigUpperBoundPortSpeed.setStatus('mandatory')
xdslDevMvlIfConfigMarginThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 8, 1, 5, 1, 1, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xdslDevMvlIfConfigMarginThreshold.setStatus('mandatory')
xdslDevMvlIfConfigPortID = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 8, 1, 5, 1, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 40))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xdslDevMvlIfConfigPortID.setStatus('mandatory')
xdslDevMvlIfLinkUpDownTransitionThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 8, 1, 5, 1, 1, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xdslDevMvlIfLinkUpDownTransitionThreshold.setStatus('mandatory')
xdslDevMvlIfConfigOnHookTxPowerAttenuation = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 8, 1, 5, 1, 1, 6), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xdslDevMvlIfConfigOnHookTxPowerAttenuation.setStatus('mandatory')
xdslDevMvlIfConfigOffHookTxPowerAttenuation = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 8, 1, 5, 1, 1, 7), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xdslDevMvlIfConfigOffHookTxPowerAttenuation.setStatus('mandatory')
xdslDevNAPCustomerAccountTable = MibTable((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 8, 1, 6, 1), )
if mibBuilder.loadTexts: xdslDevNAPCustomerAccountTable.setStatus('mandatory')
xdslDevNAPCustomerAccountEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 8, 1, 6, 1, 1), ).setIndexNames((0, "HOTWIRE-XDSL-INTERFACE-MIB", "xdslDevNAPCustomerAccountIfIndex"), (0, "HOTWIRE-XDSL-INTERFACE-MIB", "xdslDevNAPCustomerAccountInterval"))
if mibBuilder.loadTexts: xdslDevNAPCustomerAccountEntry.setStatus('mandatory')
xdslDevNAPCustomerAccountIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 8, 1, 6, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xdslDevNAPCustomerAccountIfIndex.setStatus('mandatory')
xdslDevNAPCustomerAccountInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 8, 1, 6, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("currentDay", 1), ("previousDay", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: xdslDevNAPCustomerAccountInterval.setStatus('mandatory')
xdslDevNAPCustomerAccountRecKiloOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 8, 1, 6, 1, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xdslDevNAPCustomerAccountRecKiloOctets.setStatus('mandatory')
xdslDevNAPCustomerAccountTrxKiloOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 8, 1, 6, 1, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xdslDevNAPCustomerAccountTrxKiloOctets.setStatus('mandatory')
xdslDevIDSLConfigTable = MibTable((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 8, 1, 9, 1), )
if mibBuilder.loadTexts: xdslDevIDSLConfigTable.setStatus('mandatory')
xdslDevIDSLConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 8, 1, 9, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: xdslDevIDSLConfigEntry.setStatus('mandatory')
xdslDevIDSLConfigPortSpeedBehaviour = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 8, 1, 9, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("fixed", 1), ("adaptive", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xdslDevIDSLConfigPortSpeedBehaviour.setStatus('mandatory')
xdslDevIDSLConfigPortSpeed = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 8, 1, 9, 1, 1, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xdslDevIDSLConfigPortSpeed.setStatus('mandatory')
xdslDevIDSLConfigPortID = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 8, 1, 9, 1, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 40))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xdslDevIDSLConfigPortID.setStatus('mandatory')
xdslDevIDSLTimingPortTransceiverMode = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 8, 1, 9, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("networkTiming", 1), ("localTiming", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xdslDevIDSLTimingPortTransceiverMode.setStatus('mandatory')
xdslDevIDSLConfigMarginThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 8, 1, 9, 1, 1, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xdslDevIDSLConfigMarginThreshold.setStatus('mandatory')
xdslDevIDSLLinkUpDownTransitionThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 8, 1, 9, 1, 1, 6), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xdslDevIDSLLinkUpDownTransitionThreshold.setStatus('mandatory')
xdslLinkDownReason = MibScalar((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 8, 1, 7, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 255)))
if mibBuilder.loadTexts: xdslLinkDownReason.setStatus('mandatory')
xdslRemoteInjectionType = MibScalar((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 8, 1, 8, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("filter", 1))))
if mibBuilder.loadTexts: xdslRemoteInjectionType.setStatus('deprecated')
xdslLinkUpDownTransitions = NotificationType((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 8, 1) + (0,1)).setObjects(("IF-MIB", "ifIndex"))
xdslPortSpeedLow = NotificationType((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 8, 1) + (0,2)).setObjects(("IF-MIB", "ifIndex"))
xdslPortSpeedNormal = NotificationType((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 8, 1) + (0,102)).setObjects(("IF-MIB", "ifIndex"))
xdslMarginLow = NotificationType((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 8, 1) + (0,3)).setObjects(("IF-MIB", "ifIndex"))
xdslMarginNormal = NotificationType((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 8, 1) + (0,103)).setObjects(("IF-MIB", "ifIndex"))
xdslErrorRateHigh = NotificationType((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 8, 1) + (0,4)).setObjects(("IF-MIB", "ifIndex"))
xdslErrorRateNormal = NotificationType((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 8, 1) + (0,104)).setObjects(("IF-MIB", "ifIndex"))
xdslPortFailure = NotificationType((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 8, 1) + (0,5)).setObjects(("IF-MIB", "ifIndex"))
xdslPortOperational = NotificationType((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 8, 1) + (0,105)).setObjects(("IF-MIB", "ifIndex"))
xdslTestStart = NotificationType((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 8, 1) + (0,6)).setObjects(("IF-MIB", "ifIndex"))
xdslTestOver = NotificationType((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 8, 1) + (0,106)).setObjects(("IF-MIB", "ifIndex"))
xdslRtuTypeMismatch = NotificationType((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 8, 1) + (0,7)).setObjects(("IF-MIB", "ifIndex"))
xdslRtuTypeMismatchClear = NotificationType((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 8, 1) + (0,107)).setObjects(("IF-MIB", "ifIndex"))
xdslRtuSelfTestFail = NotificationType((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 8, 1) + (0,16)).setObjects(("IF-MIB", "ifIndex"))
xdslRtuLastGasp = NotificationType((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 8, 1) + (0,17)).setObjects(("IF-MIB", "ifIndex"))
xdslSNDeviceFail = NotificationType((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 8, 1) + (0,18)).setObjects(("IF-MIB", "ifIndex"))
xdslSNSelfTestFail = NotificationType((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 8, 1) + (0,19)).setObjects(("IF-MIB", "ifIndex"))
xdslSNFatalReset = NotificationType((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 8, 1) + (0,20)).setObjects(("IF-MIB", "ifIndex"))
xdslLinkDownAnalysisTrap = NotificationType((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 8, 1) + (0,21)).setObjects(("IF-MIB", "ifIndex"), ("HOTWIRE-XDSL-INTERFACE-MIB", "xdslLinkDownReason"))
xdslRemoteInjectionFailureTrap = NotificationType((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 8, 1) + (0,22)).setObjects(("IF-MIB", "ifIndex"), ("HOT-DOMAIN-MIB", "pdnPortConfigVNID"), ("HOTWIRE-XDSL-INTERFACE-MIB", "xdslRemoteInjectionType"))
xdslRemoteInjectionIncompatibleTrap = NotificationType((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 8, 1) + (0,23)).setObjects(("IF-MIB", "ifIndex"), ("HOT-DOMAIN-MIB", "pdnPortConfigVNID"), ("HOTWIRE-XDSL-INTERFACE-MIB", "xdslRemoteInjectionType"))
xdslLossOfNetworkTimingSignalTrap = NotificationType((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 8, 1) + (0,24)).setObjects(("IF-MIB", "ifIndex"))
mibBuilder.exportSymbols("HOTWIRE-XDSL-INTERFACE-MIB", xdslLinkUpDownInformation=xdslLinkUpDownInformation, xdslDevNAPCustomerAccountIfIndex=xdslDevNAPCustomerAccountIfIndex, xdslDevMvlIfLinkUpDownTransitionThreshold=xdslDevMvlIfLinkUpDownTransitionThreshold, xdslDevIfConfigDownAdaptiveLowerBoundPortSpeed=xdslDevIfConfigDownAdaptiveLowerBoundPortSpeed, xdslPortSpeedLow=xdslPortSpeedLow, xdslRemoteSysDescr=xdslRemoteSysDescr, xdslDevMvlIfConfigUpperBoundPortSpeed=xdslDevMvlIfConfigUpperBoundPortSpeed, xdslLinkDownReason=xdslLinkDownReason, xdslDevIDSLTimingPortTransceiverMode=xdslDevIDSLTimingPortTransceiverMode, xdslDevIfStatsLinkDownCount=xdslDevIfStatsLinkDownCount, xdslDevIfStatsCentralReceiverGain=xdslDevIfStatsCentralReceiverGain, xdslDevMvlIfConfigOffHookTxPowerAttenuation=xdslDevMvlIfConfigOffHookTxPowerAttenuation, xdslRemoteSysLocation=xdslRemoteSysLocation, xdslDevMvlIfConfigPortID=xdslDevMvlIfConfigPortID, xdslSNSelfTestFail=xdslSNSelfTestFail, xdslDevIDSLConfigPortID=xdslDevIDSLConfigPortID, xdslDevIDSLConfigPortSpeed=xdslDevIDSLConfigPortSpeed, xdslLossOfNetworkTimingSignalTrap=xdslLossOfNetworkTimingSignalTrap, xdslRemoteDTEStatusEntry=xdslRemoteDTEStatusEntry, xdslDevIfStatsCentralTransmittedKiloOctets=xdslDevIfStatsCentralTransmittedKiloOctets, xdslDevIfStatsRemoteRecErroredSeconds=xdslDevIfStatsRemoteRecErroredSeconds, xdslDevMvlIfConfig=xdslDevMvlIfConfig, xdslRemoteSysCircuitId=xdslRemoteSysCircuitId, xdslRemoteSysIndex=xdslRemoteSysIndex, xdslDevIfStatsRemoteTransmittedPkts=xdslDevIfStatsRemoteTransmittedPkts, xdslDevIfStatsCentralRecSeverelyErroredMinutes=xdslDevIfStatsCentralRecSeverelyErroredMinutes, xdslDevNAPCustomerAccountEntry=xdslDevNAPCustomerAccountEntry, xdslDevIfStatsCentralRecAttenuationEstimate=xdslDevIfStatsCentralRecAttenuationEstimate, xdslLinkDownAnalysisTrap=xdslLinkDownAnalysisTrap, xdslDevIfStatsRemoteRecErrPkts=xdslDevIfStatsRemoteRecErrPkts, xdslDevNAPCustomerAccountTrxKiloOctets=xdslDevNAPCustomerAccountTrxKiloOctets, xdslDevIfIntervalStatsEntry=xdslDevIfIntervalStatsEntry, xdslRtuTypeMismatch=xdslRtuTypeMismatch, xdslDevIfStatsRemoteRecErrorRate=xdslDevIfStatsRemoteRecErrorRate, xdslDevIfStatsRemoteRecSeverelyErroredSeconds=xdslDevIfStatsRemoteRecSeverelyErroredSeconds, xdslDevNAPCustomerAccountTable=xdslDevNAPCustomerAccountTable, xdslMarginNormal=xdslMarginNormal, xdslRemoteSysServices=xdslRemoteSysServices, xdslRtuLastGasp=xdslRtuLastGasp, xdslRemoteDTEStatus=xdslRemoteDTEStatus, xdslDevIfLinkUpDownTransitionThreshold=xdslDevIfLinkUpDownTransitionThreshold, xdslDevIfStatsRemoteReceivedKiloOctets=xdslDevIfStatsRemoteReceivedKiloOctets, xdslDevIfStatsRemoteRecErroredMinutes=xdslDevIfStatsRemoteRecErroredMinutes, xdslTestStart=xdslTestStart, xdslErrorRateHigh=xdslErrorRateHigh, xdslDevIfConfigStartUpMargin=xdslDevIfConfigStartUpMargin, xdslDevIfConfigEstimatedDayErrRateThreshold=xdslDevIfConfigEstimatedDayErrRateThreshold, xdslRemoteDTEStrobe=xdslRemoteDTEStrobe, xdslDevIfStatsValid15MinuteIntervalCount=xdslDevIfStatsValid15MinuteIntervalCount, xdslDevNAPCustomerAccountInterval=xdslDevNAPCustomerAccountInterval, xdslRtuTypeMismatchClear=xdslRtuTypeMismatchClear, xdslDevIDSLConfigEntry=xdslDevIDSLConfigEntry, xdslDevNAPCustomerAccount=xdslDevNAPCustomerAccount, xdslDevIDSLConfigTable=xdslDevIDSLConfigTable, xdslDevNAPCustomerAccountRecKiloOctets=xdslDevNAPCustomerAccountRecKiloOctets, xdslDevIfConfigIfIndex=xdslDevIfConfigIfIndex, xdslDevIDSLLinkUpDownTransitionThreshold=xdslDevIDSLLinkUpDownTransitionThreshold, xdslDevIDSLConfigMarginThreshold=xdslDevIDSLConfigMarginThreshold, xdslDevIfStatsInterval=xdslDevIfStatsInterval, xdslDevIfStatsCentralRecErroredMinutes=xdslDevIfStatsCentralRecErroredMinutes, xdslRemoteDTEClockSource=xdslRemoteDTEClockSource, xdslDevIfStatsRemoteRecTransmitPower=xdslDevIfStatsRemoteRecTransmitPower, xdslDevIfStatsRemoteTransmittedKiloOctets=xdslDevIfStatsRemoteTransmittedKiloOctets, xdslDevIfStatsCentralRecErroredSeconds=xdslDevIfStatsCentralRecErroredSeconds, xdslRemoteSysUpTime=xdslRemoteSysUpTime, xdslDevIfStatsElapsedTimeLinkUp=xdslDevIfStatsElapsedTimeLinkUp, xdslDevIfConfigSnTxPowerAttenuation=xdslDevIfConfigSnTxPowerAttenuation, xdslDevIfStatsCentralErrPkts=xdslDevIfStatsCentralErrPkts, xdslDevIfStatsRemoteOctetsNotCorrected=xdslDevIfStatsRemoteOctetsNotCorrected, xdslDevIfConfigUpAdaptiveLowerBoundPortSpeed=xdslDevIfConfigUpAdaptiveLowerBoundPortSpeed, xdslDevIfStatsCentralRecTransmitPower=xdslDevIfStatsCentralRecTransmitPower, xdslDevIfConfigEstimatedHrErrRateThreshold=xdslDevIfConfigEstimatedHrErrRateThreshold, xdslLinkUpDownTransitions=xdslLinkUpDownTransitions, xdslMarginLow=xdslMarginLow, xdslSNFatalReset=xdslSNFatalReset, xdslDevIfConfigUpAdaptiveUpperBoundPortSpeed=xdslDevIfConfigUpAdaptiveUpperBoundPortSpeed, xdslDevIfStatsRemoteOctetsCorrected=xdslDevIfStatsRemoteOctetsCorrected, xdslDevIfStatsRemoteDroppedPkts=xdslDevIfStatsRemoteDroppedPkts, xdslRemoteDTEStatusTable=xdslRemoteDTEStatusTable, xdslDevMvlIfConfigMarginThreshold=xdslDevMvlIfConfigMarginThreshold, xdslDevIfStatsCentralReceivedPkts=xdslDevIfStatsCentralReceivedPkts, DisplayString=DisplayString, xdslRemoteDTEType=xdslRemoteDTEType, xdslDevIfStatsCentralReceivedKiloOctets=xdslDevIfStatsCentralReceivedKiloOctets, xdslDevIfConfig=xdslDevIfConfig, xdslDevIDSLConfigPortSpeedBehaviour=xdslDevIDSLConfigPortSpeedBehaviour, xdslRemoteInjectionType=xdslRemoteInjectionType, xdslDevMvlIfConfigTable=xdslDevMvlIfConfigTable, xdslDevIfConfigDownAdaptiveUpperBoundPortSpeed=xdslDevIfConfigDownAdaptiveUpperBoundPortSpeed, xdslTestOver=xdslTestOver, xdslDevIfStatsCentralRecErrorRate=xdslDevIfStatsCentralRecErrorRate, xdslDevIfStatsRemoteRecSeverelyErroredMinutes=xdslDevIfStatsRemoteRecSeverelyErroredMinutes, xdslDevIfConfigReedSolomonDownForwardErrorCorrection=xdslDevIfConfigReedSolomonDownForwardErrorCorrection, xdslDevIfConfigTxPowerAttenuation=xdslDevIfConfigTxPowerAttenuation, xdslRemoteInjection=xdslRemoteInjection, xdslDevIfConfigTable=xdslDevIfConfigTable, xdslDevIfConfigPortID=xdslDevIfConfigPortID, xdslDevIfConfigMarginThreshold=xdslDevIfConfigMarginThreshold, xdslDevIfStatsCentralRecSeverelyErroredSeconds=xdslDevIfStatsCentralRecSeverelyErroredSeconds, xdslPortOperational=xdslPortOperational, xdslRemoteSys=xdslRemoteSys, xdslDevIfStatsRemoteRecAttenuationEstimate=xdslDevIfStatsRemoteRecAttenuationEstimate, xdslRtuSelfTestFail=xdslRtuSelfTestFail, xdslDevIfConfigUpFixedPortSpeed=xdslDevIfConfigUpFixedPortSpeed, xdslDevIfStats=xdslDevIfStats, xdslDevIDSLConfig=xdslDevIDSLConfig, xdslErrorRateNormal=xdslErrorRateNormal, xdslRemoteDTELoopbackState=xdslRemoteDTELoopbackState, xdslRemoteInjectionFailureTrap=xdslRemoteInjectionFailureTrap, xdslDevIfConfigDownFixedPortSpeed=xdslDevIfConfigDownFixedPortSpeed, xdslDevice=xdslDevice, xdslDevMvlIfConfigIfIndex=xdslDevMvlIfConfigIfIndex, xdslDevIfStatsRemoteRecMargin=xdslDevIfStatsRemoteRecMargin, xdslDevIfStatsUpStreamSpeed=xdslDevIfStatsUpStreamSpeed, xdslDevIfConfigPortSpeedBehaviour=xdslDevIfConfigPortSpeedBehaviour, xdslDevIfStatsIfIndex=xdslDevIfStatsIfIndex, xdslDevIfStatsCentralTransmittedPkts=xdslDevIfStatsCentralTransmittedPkts, xdslDevIfStatsRemoteReceiverGain=xdslDevIfStatsRemoteReceiverGain, xdslPortFailure=xdslPortFailure, xdslRemoteDTEState=xdslRemoteDTEState, xdslRemoteSysEntry=xdslRemoteSysEntry, xdslDevIfConfigEntry=xdslDevIfConfigEntry, xdslDevMvlIfConfigOnHookTxPowerAttenuation=xdslDevMvlIfConfigOnHookTxPowerAttenuation, xdslRemoteSysName=xdslRemoteSysName, xdslDevIfStatsRemoteReceivedPkts=xdslDevIfStatsRemoteReceivedPkts, xdslDevIfIntervalStatsTable=xdslDevIfIntervalStatsTable, xdslDevIfStatsCentralRecMargin=xdslDevIfStatsCentralRecMargin, xdslDevMvlIfConfigEntry=xdslDevMvlIfConfigEntry, xdslRemoteSysContact=xdslRemoteSysContact, xdslRemoteDTEStatusIndex=xdslRemoteDTEStatusIndex, xdslSNDeviceFail=xdslSNDeviceFail, xdslRemoteInjectionIncompatibleTrap=xdslRemoteInjectionIncompatibleTrap, xdslPortSpeedNormal=xdslPortSpeedNormal, xdslRemoteSysObjectID=xdslRemoteSysObjectID, xdslRemoteSysTable=xdslRemoteSysTable)
