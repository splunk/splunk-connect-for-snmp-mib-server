#
# PySNMP MIB module BULK-DATA-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/BULK-DATA-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:24:48 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ConstraintsIntersection, ValueSizeConstraint, ValueRangeConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ConstraintsIntersection", "ValueSizeConstraint", "ValueRangeConstraint", "ConstraintsUnion")
InetAddress, InetAddressType = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddress", "InetAddressType")
ObjectGroup, NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "NotificationGroup", "ModuleCompliance")
experimental, IpAddress, Unsigned32, Integer32, Counter32, ObjectIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, NotificationType, iso, TimeTicks, Counter64, MibIdentifier, ModuleIdentity, Bits, Gauge32 = mibBuilder.importSymbols("SNMPv2-SMI", "experimental", "IpAddress", "Unsigned32", "Integer32", "Counter32", "ObjectIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "NotificationType", "iso", "TimeTicks", "Counter64", "MibIdentifier", "ModuleIdentity", "Bits", "Gauge32")
TextualConvention, RowStatus, TimeStamp, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "RowStatus", "TimeStamp", "DisplayString")
bulkDataMIB = ModuleIdentity((1, 3, 6, 1, 3, 999))
if mibBuilder.loadTexts: bulkDataMIB.setLastUpdated('200228021100Z')
if mibBuilder.loadTexts: bulkDataMIB.setOrganization('EOS (Evolution of SNMP)')
bulkDataAgentCapabilities = MibIdentifier((1, 3, 6, 1, 3, 999, 1))
bulkDataObjects = MibIdentifier((1, 3, 6, 1, 3, 999, 2))
bulkDataTraps = MibIdentifier((1, 3, 6, 1, 3, 999, 3))
acFileEncoding = MibScalar((1, 3, 6, 1, 3, 999, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("ascii", 1), ("xml", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acFileEncoding.setStatus('current')
acFileCompression = MibScalar((1, 3, 6, 1, 3, 999, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("noCompression", 1), ("bzip", 2), ("gzip", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acFileCompression.setStatus('current')
acXferProtocol = MibScalar((1, 3, 6, 1, 3, 999, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("cp", 1), ("ftp", 2), ("scp", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acXferProtocol.setStatus('current')
sliceTable = MibTable((1, 3, 6, 1, 3, 999, 2, 1), )
if mibBuilder.loadTexts: sliceTable.setStatus('current')
sliceEntry = MibTableRow((1, 3, 6, 1, 3, 999, 2, 1, 1), ).setIndexNames((0, "BULK-DATA-MIB", "sliceIndex"), (0, "BULK-DATA-MIB", "sliceSubId"))
if mibBuilder.loadTexts: sliceEntry.setStatus('current')
sliceIndex = MibTableColumn((1, 3, 6, 1, 3, 999, 2, 1, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295)))
if mibBuilder.loadTexts: sliceIndex.setStatus('current')
sliceSubId = MibTableColumn((1, 3, 6, 1, 3, 999, 2, 1, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295)))
if mibBuilder.loadTexts: sliceSubId.setStatus('current')
sliceColumnOID = MibTableColumn((1, 3, 6, 1, 3, 999, 2, 1, 1, 3), ObjectIdentifier()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: sliceColumnOID.setStatus('current')
sliceSnmpContext = MibTableColumn((1, 3, 6, 1, 3, 999, 2, 1, 1, 4), DisplayString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: sliceSnmpContext.setStatus('current')
sliceColumnDisplayHint = MibTableColumn((1, 3, 6, 1, 3, 999, 2, 1, 1, 5), DisplayString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: sliceColumnDisplayHint.setStatus('current')
sliceAdminString = MibTableColumn((1, 3, 6, 1, 3, 999, 2, 1, 1, 6), DisplayString().clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: sliceAdminString.setStatus('current')
sliceEntryStatus = MibTableColumn((1, 3, 6, 1, 3, 999, 2, 1, 1, 7), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: sliceEntryStatus.setStatus('current')
xferTable = MibTable((1, 3, 6, 1, 3, 999, 2, 2), )
if mibBuilder.loadTexts: xferTable.setStatus('current')
xferEntry = MibTableRow((1, 3, 6, 1, 3, 999, 2, 2, 1), ).setIndexNames((0, "BULK-DATA-MIB", "xferIndex"), (0, "BULK-DATA-MIB", "xferSubId"))
if mibBuilder.loadTexts: xferEntry.setStatus('current')
xferIndex = MibTableColumn((1, 3, 6, 1, 3, 999, 2, 2, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295)))
if mibBuilder.loadTexts: xferIndex.setStatus('current')
xferSubId = MibTableColumn((1, 3, 6, 1, 3, 999, 2, 2, 1, 2), Unsigned32())
if mibBuilder.loadTexts: xferSubId.setStatus('current')
xferHostIpType = MibTableColumn((1, 3, 6, 1, 3, 999, 2, 2, 1, 3), InetAddressType().clone('ipv4')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: xferHostIpType.setStatus('current')
xferHostIpAddr = MibTableColumn((1, 3, 6, 1, 3, 999, 2, 2, 1, 4), InetAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: xferHostIpAddr.setStatus('current')
xferProtocol = MibTableColumn((1, 3, 6, 1, 3, 999, 2, 2, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("cp", 1), ("ftp", 2), ("scp", 3))).clone('ftp')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: xferProtocol.setStatus('current')
xferWriteControl = MibTableColumn((1, 3, 6, 1, 3, 999, 2, 2, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("failIfExists", 1), ("overwrite", 2))).clone('failIfExists')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: xferWriteControl.setStatus('current')
xferFilePath = MibTableColumn((1, 3, 6, 1, 3, 999, 2, 2, 1, 7), DisplayString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: xferFilePath.setStatus('current')
xferAuthUsername = MibTableColumn((1, 3, 6, 1, 3, 999, 2, 2, 1, 8), DisplayString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: xferAuthUsername.setStatus('current')
xferAuthPassword = MibTableColumn((1, 3, 6, 1, 3, 999, 2, 2, 1, 9), DisplayString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: xferAuthPassword.setStatus('current')
xferAdminString = MibTableColumn((1, 3, 6, 1, 3, 999, 2, 2, 1, 10), DisplayString().clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: xferAdminString.setStatus('current')
xferEntryStatus = MibTableColumn((1, 3, 6, 1, 3, 999, 2, 2, 1, 11), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: xferEntryStatus.setStatus('current')
snapshotTable = MibTable((1, 3, 6, 1, 3, 999, 2, 3), )
if mibBuilder.loadTexts: snapshotTable.setStatus('current')
snapshotEntry = MibTableRow((1, 3, 6, 1, 3, 999, 2, 3, 1), ).setIndexNames((0, "BULK-DATA-MIB", "snapshotIndex"), (0, "BULK-DATA-MIB", "snapshotSliceIndex"), (0, "BULK-DATA-MIB", "snapshotXferId"))
if mibBuilder.loadTexts: snapshotEntry.setStatus('current')
snapshotIndex = MibTableColumn((1, 3, 6, 1, 3, 999, 2, 3, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295)))
if mibBuilder.loadTexts: snapshotIndex.setStatus('current')
snapshotSliceIndex = MibTableColumn((1, 3, 6, 1, 3, 999, 2, 3, 1, 2), Unsigned32())
if mibBuilder.loadTexts: snapshotSliceIndex.setStatus('current')
snapshotXferId = MibTableColumn((1, 3, 6, 1, 3, 999, 2, 3, 1, 3), Unsigned32())
if mibBuilder.loadTexts: snapshotXferId.setStatus('current')
snapshotSnapFileName = MibTableColumn((1, 3, 6, 1, 3, 999, 2, 3, 1, 4), DisplayString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: snapshotSnapFileName.setStatus('current')
snapshotFileEncoding = MibTableColumn((1, 3, 6, 1, 3, 999, 2, 3, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("ascii", 1), ("xml", 2))).clone('ascii')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: snapshotFileEncoding.setStatus('current')
snapshotFileCompression = MibTableColumn((1, 3, 6, 1, 3, 999, 2, 3, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("noCompression", 1), ("bzip", 2), ("gzip", 3))).clone('noCompression')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: snapshotFileCompression.setStatus('current')
snapshotStartTime = MibTableColumn((1, 3, 6, 1, 3, 999, 2, 3, 1, 7), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snapshotStartTime.setStatus('current')
snapshotCompletionTime = MibTableColumn((1, 3, 6, 1, 3, 999, 2, 3, 1, 8), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snapshotCompletionTime.setStatus('current')
snapshotFileSize = MibTableColumn((1, 3, 6, 1, 3, 999, 2, 3, 1, 9), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snapshotFileSize.setStatus('current')
snapshotState = MibTableColumn((1, 3, 6, 1, 3, 999, 2, 3, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("running", 1), ("ready", 2), ("noSpace", 3), ("badName", 4), ("writeErr", 5), ("noMem", 6), ("aborted", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: snapshotState.setStatus('current')
snapshotAdminString = MibTableColumn((1, 3, 6, 1, 3, 999, 2, 3, 1, 11), DisplayString().clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: snapshotAdminString.setStatus('current')
snapshotEntryStatus = MibTableColumn((1, 3, 6, 1, 3, 999, 2, 3, 1, 12), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: snapshotEntryStatus.setStatus('current')
xferCtlTable = MibTable((1, 3, 6, 1, 3, 999, 2, 4), )
if mibBuilder.loadTexts: xferCtlTable.setStatus('current')
xferCtlEntry = MibTableRow((1, 3, 6, 1, 3, 999, 2, 4, 1), ).setIndexNames((0, "BULK-DATA-MIB", "xferCtlIndex"), (0, "BULK-DATA-MIB", "sliceIndex"), (0, "BULK-DATA-MIB", "xferIndex"), (0, "BULK-DATA-MIB", "xferSubId"))
if mibBuilder.loadTexts: xferCtlEntry.setStatus('current')
xferCtlIndex = MibTableColumn((1, 3, 6, 1, 3, 999, 2, 4, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295)))
if mibBuilder.loadTexts: xferCtlIndex.setStatus('current')
xferCtlStartTime = MibTableColumn((1, 3, 6, 1, 3, 999, 2, 4, 1, 2), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xferCtlStartTime.setStatus('current')
xferCtlCompletionTime = MibTableColumn((1, 3, 6, 1, 3, 999, 2, 4, 1, 3), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xferCtlCompletionTime.setStatus('current')
xferCtlPercentXferred = MibTableColumn((1, 3, 6, 1, 3, 999, 2, 4, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: xferCtlPercentXferred.setStatus('current')
xferCtlStatus = MibTableColumn((1, 3, 6, 1, 3, 999, 2, 4, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9))).clone(namedValues=NamedValues(("inProgress", 1), ("complete", 2), ("noSpace", 3), ("badName", 4), ("writeErr", 5), ("badLogin", 6), ("abortXfer", 7), ("retryXfer", 8), ("deleteRow", 9)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xferCtlStatus.setStatus('current')
bulkDataXfer = NotificationType((1, 3, 6, 1, 3, 999, 3, 1)).setObjects(("BULK-DATA-MIB", "xferCtlStatus"))
if mibBuilder.loadTexts: bulkDataXfer.setStatus('current')
bulkMIBConformance = MibIdentifier((1, 3, 6, 1, 3, 999, 4))
bulkMIBCompliances = MibIdentifier((1, 3, 6, 1, 3, 999, 4, 1))
bulkMIBGroups = MibIdentifier((1, 3, 6, 1, 3, 999, 4, 2))
bulkMIBCompliance = ModuleCompliance((1, 3, 6, 1, 3, 999, 4, 1, 1)).setObjects(("BULK-DATA-MIB", "bulkCapabilitiesGroup"), ("BULK-DATA-MIB", "bulkSliceGroup"), ("BULK-DATA-MIB", "bulkFileTransferGroup"), ("BULK-DATA-MIB", "bulkSnapshotGroup"), ("BULK-DATA-MIB", "bulkXferCtlGroup"), ("BULK-DATA-MIB", "bulkTrapGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    bulkMIBCompliance = bulkMIBCompliance.setStatus('current')
bulkCapabilitiesGroup = ObjectGroup((1, 3, 6, 1, 3, 999, 4, 2, 1)).setObjects(("BULK-DATA-MIB", "acFileEncoding"), ("BULK-DATA-MIB", "acFileCompression"), ("BULK-DATA-MIB", "acXferProtocol"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    bulkCapabilitiesGroup = bulkCapabilitiesGroup.setStatus('current')
bulkSliceGroup = ObjectGroup((1, 3, 6, 1, 3, 999, 4, 2, 2)).setObjects(("BULK-DATA-MIB", "sliceColumnOID"), ("BULK-DATA-MIB", "sliceSnmpContext"), ("BULK-DATA-MIB", "sliceColumnDisplayHint"), ("BULK-DATA-MIB", "sliceAdminString"), ("BULK-DATA-MIB", "sliceEntryStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    bulkSliceGroup = bulkSliceGroup.setStatus('current')
bulkFileTransferGroup = ObjectGroup((1, 3, 6, 1, 3, 999, 4, 2, 3)).setObjects(("BULK-DATA-MIB", "xferHostIpType"), ("BULK-DATA-MIB", "xferHostIpAddr"), ("BULK-DATA-MIB", "xferProtocol"), ("BULK-DATA-MIB", "xferWriteControl"), ("BULK-DATA-MIB", "xferFilePath"), ("BULK-DATA-MIB", "xferAuthUsername"), ("BULK-DATA-MIB", "xferAuthPassword"), ("BULK-DATA-MIB", "xferAdminString"), ("BULK-DATA-MIB", "xferEntryStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    bulkFileTransferGroup = bulkFileTransferGroup.setStatus('current')
bulkSnapshotGroup = ObjectGroup((1, 3, 6, 1, 3, 999, 4, 2, 4)).setObjects(("BULK-DATA-MIB", "snapshotSnapFileName"), ("BULK-DATA-MIB", "snapshotFileEncoding"), ("BULK-DATA-MIB", "snapshotFileCompression"), ("BULK-DATA-MIB", "snapshotStartTime"), ("BULK-DATA-MIB", "snapshotCompletionTime"), ("BULK-DATA-MIB", "snapshotFileSize"), ("BULK-DATA-MIB", "snapshotState"), ("BULK-DATA-MIB", "snapshotAdminString"), ("BULK-DATA-MIB", "snapshotEntryStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    bulkSnapshotGroup = bulkSnapshotGroup.setStatus('current')
bulkXferCtlGroup = ObjectGroup((1, 3, 6, 1, 3, 999, 4, 2, 5)).setObjects(("BULK-DATA-MIB", "xferCtlStartTime"), ("BULK-DATA-MIB", "xferCtlCompletionTime"), ("BULK-DATA-MIB", "xferCtlPercentXferred"), ("BULK-DATA-MIB", "xferCtlStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    bulkXferCtlGroup = bulkXferCtlGroup.setStatus('current')
bulkTrapGroup = NotificationGroup((1, 3, 6, 1, 3, 999, 4, 2, 6)).setObjects(("BULK-DATA-MIB", "bulkDataXfer"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    bulkTrapGroup = bulkTrapGroup.setStatus('current')
mibBuilder.exportSymbols("BULK-DATA-MIB", bulkSnapshotGroup=bulkSnapshotGroup, bulkCapabilitiesGroup=bulkCapabilitiesGroup, bulkSliceGroup=bulkSliceGroup, sliceSubId=sliceSubId, snapshotSliceIndex=snapshotSliceIndex, snapshotSnapFileName=snapshotSnapFileName, snapshotTable=snapshotTable, xferSubId=xferSubId, bulkDataMIB=bulkDataMIB, xferTable=xferTable, xferHostIpType=xferHostIpType, bulkMIBCompliances=bulkMIBCompliances, xferEntry=xferEntry, sliceSnmpContext=sliceSnmpContext, bulkFileTransferGroup=bulkFileTransferGroup, xferWriteControl=xferWriteControl, xferHostIpAddr=xferHostIpAddr, xferEntryStatus=xferEntryStatus, xferCtlTable=xferCtlTable, sliceEntryStatus=sliceEntryStatus, xferCtlEntry=xferCtlEntry, bulkDataXfer=bulkDataXfer, snapshotStartTime=snapshotStartTime, bulkDataTraps=bulkDataTraps, acFileEncoding=acFileEncoding, acFileCompression=acFileCompression, sliceColumnDisplayHint=sliceColumnDisplayHint, snapshotFileCompression=snapshotFileCompression, xferCtlCompletionTime=xferCtlCompletionTime, acXferProtocol=acXferProtocol, sliceAdminString=sliceAdminString, xferProtocol=xferProtocol, sliceIndex=sliceIndex, snapshotXferId=snapshotXferId, sliceColumnOID=sliceColumnOID, snapshotFileSize=snapshotFileSize, bulkXferCtlGroup=bulkXferCtlGroup, xferCtlStatus=xferCtlStatus, xferAuthUsername=xferAuthUsername, xferFilePath=xferFilePath, snapshotEntry=snapshotEntry, sliceEntry=sliceEntry, xferIndex=xferIndex, xferAuthPassword=xferAuthPassword, PYSNMP_MODULE_ID=bulkDataMIB, xferAdminString=xferAdminString, snapshotIndex=snapshotIndex, snapshotState=snapshotState, bulkMIBConformance=bulkMIBConformance, xferCtlStartTime=xferCtlStartTime, bulkDataAgentCapabilities=bulkDataAgentCapabilities, bulkTrapGroup=bulkTrapGroup, snapshotFileEncoding=snapshotFileEncoding, xferCtlIndex=xferCtlIndex, xferCtlPercentXferred=xferCtlPercentXferred, bulkMIBGroups=bulkMIBGroups, bulkDataObjects=bulkDataObjects, snapshotAdminString=snapshotAdminString, bulkMIBCompliance=bulkMIBCompliance, snapshotEntryStatus=snapshotEntryStatus, snapshotCompletionTime=snapshotCompletionTime, sliceTable=sliceTable)
