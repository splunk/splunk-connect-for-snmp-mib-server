#
# PySNMP MIB module CPQSANEVENT-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CPQSANEVENT-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 18:12:10 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ConstraintsUnion, ValueRangeConstraint, ConstraintsIntersection, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ConstraintsUnion", "ValueRangeConstraint", "ConstraintsIntersection", "ValueSizeConstraint")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
MibScalar, MibTable, MibTableRow, MibTableColumn, Unsigned32, NotificationType, IpAddress, Counter64, ModuleIdentity, MibIdentifier, enterprises, NotificationType, Integer32, Gauge32, ObjectIdentity, Bits, Counter32, iso, TimeTicks = mibBuilder.importSymbols("SNMPv2-SMI", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Unsigned32", "NotificationType", "IpAddress", "Counter64", "ModuleIdentity", "MibIdentifier", "enterprises", "NotificationType", "Integer32", "Gauge32", "ObjectIdentity", "Bits", "Counter32", "iso", "TimeTicks")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
compaq = MibIdentifier((1, 3, 6, 1, 4, 1, 232))
cpqSanAppliance = MibIdentifier((1, 3, 6, 1, 4, 1, 232, 151))
sanEvent = MibIdentifier((1, 3, 6, 1, 4, 1, 232, 151, 101))
sanEventObj = MibIdentifier((1, 3, 6, 1, 4, 1, 232, 151, 101, 100))
sanEventEventCode = MibScalar((1, 3, 6, 1, 4, 1, 232, 151, 101, 100, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(128, 128)).setFixedLength(128)).setMaxAccess("readonly")
if mibBuilder.loadTexts: sanEventEventCode.setStatus('mandatory')
sanEventIPAddress = MibScalar((1, 3, 6, 1, 4, 1, 232, 151, 101, 100, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(128, 128)).setFixedLength(128)).setMaxAccess("readonly")
if mibBuilder.loadTexts: sanEventIPAddress.setStatus('mandatory')
sanEventSeverity = MibScalar((1, 3, 6, 1, 4, 1, 232, 151, 101, 100, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sanEventSeverity.setStatus('mandatory')
sanEventCategory = MibScalar((1, 3, 6, 1, 4, 1, 232, 151, 101, 100, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sanEventCategory.setStatus('mandatory')
sanEventGroup = MibScalar((1, 3, 6, 1, 4, 1, 232, 151, 101, 100, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(128, 128)).setFixedLength(128)).setMaxAccess("readonly")
if mibBuilder.loadTexts: sanEventGroup.setStatus('optional')
sanEventSourceType = MibScalar((1, 3, 6, 1, 4, 1, 232, 151, 101, 100, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(128, 128)).setFixedLength(128)).setMaxAccess("readonly")
if mibBuilder.loadTexts: sanEventSourceType.setStatus('optional')
sanEventSourceSubtype = MibScalar((1, 3, 6, 1, 4, 1, 232, 151, 101, 100, 7), OctetString().subtype(subtypeSpec=ValueSizeConstraint(128, 128)).setFixedLength(128)).setMaxAccess("readonly")
if mibBuilder.loadTexts: sanEventSourceSubtype.setStatus('optional')
sanEventURL = MibScalar((1, 3, 6, 1, 4, 1, 232, 151, 101, 100, 8), OctetString().subtype(subtypeSpec=ValueSizeConstraint(128, 128)).setFixedLength(128)).setMaxAccess("readonly")
if mibBuilder.loadTexts: sanEventURL.setStatus('optional')
sanEventDesc = MibScalar((1, 3, 6, 1, 4, 1, 232, 151, 101, 100, 9), OctetString().subtype(subtypeSpec=ValueSizeConstraint(512, 512)).setFixedLength(512)).setMaxAccess("readonly")
if mibBuilder.loadTexts: sanEventDesc.setStatus('optional')
sanEventTrap = NotificationType((1, 3, 6, 1, 4, 1, 232, 151, 101) + (0,1)).setObjects(("CPQSANEVENT-MIB", "sanEventEventCode"), ("CPQSANEVENT-MIB", "sanEventIPAddress"), ("CPQSANEVENT-MIB", "sanEventSeverity"), ("CPQSANEVENT-MIB", "sanEventCategory"), ("CPQSANEVENT-MIB", "sanEventGroup"), ("CPQSANEVENT-MIB", "sanEventSourceType"), ("CPQSANEVENT-MIB", "sanEventSourceSubtype"), ("CPQSANEVENT-MIB", "sanEventURL"), ("CPQSANEVENT-MIB", "sanEventDesc"))
sanTestTrap = NotificationType((1, 3, 6, 1, 4, 1, 232, 151, 101) + (0,2)).setObjects(("CPQSANEVENT-MIB", "sanEventIPAddress"), ("CPQSANEVENT-MIB", "sanEventSeverity"), ("CPQSANEVENT-MIB", "sanEventSourceType"), ("CPQSANEVENT-MIB", "sanEventSourceSubtype"), ("CPQSANEVENT-MIB", "sanEventURL"))
mibBuilder.exportSymbols("CPQSANEVENT-MIB", sanEventSeverity=sanEventSeverity, sanEvent=sanEvent, sanEventGroup=sanEventGroup, compaq=compaq, sanEventDesc=sanEventDesc, sanEventTrap=sanEventTrap, sanEventSourceType=sanEventSourceType, sanEventCategory=sanEventCategory, cpqSanAppliance=cpqSanAppliance, sanEventSourceSubtype=sanEventSourceSubtype, sanEventURL=sanEventURL, sanEventIPAddress=sanEventIPAddress, sanEventEventCode=sanEventEventCode, sanEventObj=sanEventObj, sanTestTrap=sanTestTrap)
