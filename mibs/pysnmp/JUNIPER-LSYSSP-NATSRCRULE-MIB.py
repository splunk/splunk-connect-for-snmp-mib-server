#
# PySNMP MIB module JUNIPER-LSYSSP-NATSRCRULE-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/JUNIPER-LSYSSP-NATSRCRULE-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:49:09 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ConstraintsUnion, SingleValueConstraint, ValueSizeConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ConstraintsUnion", "SingleValueConstraint", "ValueSizeConstraint", "ConstraintsIntersection")
jnxLsysSpNATsrcrule, = mibBuilder.importSymbols("JUNIPER-LSYS-SECURITYPROFILE-MIB", "jnxLsysSpNATsrcrule")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
NotificationType, Bits, TimeTicks, Counter64, Unsigned32, ObjectIdentity, Gauge32, iso, ModuleIdentity, Counter32, MibScalar, MibTable, MibTableRow, MibTableColumn, MibIdentifier, Integer32, IpAddress = mibBuilder.importSymbols("SNMPv2-SMI", "NotificationType", "Bits", "TimeTicks", "Counter64", "Unsigned32", "ObjectIdentity", "Gauge32", "iso", "ModuleIdentity", "Counter32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "MibIdentifier", "Integer32", "IpAddress")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
jnxLsysSpNATsrcruleMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 17, 12, 1))
if mibBuilder.loadTexts: jnxLsysSpNATsrcruleMIB.setLastUpdated('201005191644Z')
if mibBuilder.loadTexts: jnxLsysSpNATsrcruleMIB.setOrganization('Juniper Networks, Inc.')
jnxLsysSpNATsrcruleObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 17, 12, 1, 1))
jnxLsysSpNATsrcruleSummary = MibIdentifier((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 17, 12, 1, 2))
jnxLsysSpNATsrcruleTable = MibTable((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 17, 12, 1, 1, 1), )
if mibBuilder.loadTexts: jnxLsysSpNATsrcruleTable.setStatus('current')
jnxLsysSpNATsrcruleEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 17, 12, 1, 1, 1, 1), ).setIndexNames((1, "JUNIPER-LSYSSP-NATSRCRULE-MIB", "jnxLsysSpNATsrcruleLsysName"))
if mibBuilder.loadTexts: jnxLsysSpNATsrcruleEntry.setStatus('current')
jnxLsysSpNATsrcruleLsysName = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 17, 12, 1, 1, 1, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 64)))
if mibBuilder.loadTexts: jnxLsysSpNATsrcruleLsysName.setStatus('current')
jnxLsysSpNATsrcruleProfileName = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 17, 12, 1, 1, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxLsysSpNATsrcruleProfileName.setStatus('current')
jnxLsysSpNATsrcruleUsage = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 17, 12, 1, 1, 1, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxLsysSpNATsrcruleUsage.setStatus('current')
jnxLsysSpNATsrcruleReserved = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 17, 12, 1, 1, 1, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxLsysSpNATsrcruleReserved.setStatus('current')
jnxLsysSpNATsrcruleMaximum = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 17, 12, 1, 1, 1, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxLsysSpNATsrcruleMaximum.setStatus('current')
jnxLsysSpNATsrcruleUsedAmount = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 17, 12, 1, 2, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxLsysSpNATsrcruleUsedAmount.setStatus('current')
jnxLsysSpNATsrcruleMaxQuota = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 17, 12, 1, 2, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxLsysSpNATsrcruleMaxQuota.setStatus('current')
jnxLsysSpNATsrcruleAvailableAmount = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 17, 12, 1, 2, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxLsysSpNATsrcruleAvailableAmount.setStatus('current')
jnxLsysSpNATsrcruleHeaviestUsage = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 17, 12, 1, 2, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxLsysSpNATsrcruleHeaviestUsage.setStatus('current')
jnxLsysSpNATsrcruleHeaviestUser = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 17, 12, 1, 2, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxLsysSpNATsrcruleHeaviestUser.setStatus('current')
jnxLsysSpNATsrcruleLightestUsage = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 17, 12, 1, 2, 6), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxLsysSpNATsrcruleLightestUsage.setStatus('current')
jnxLsysSpNATsrcruleLightestUser = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 17, 12, 1, 2, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxLsysSpNATsrcruleLightestUser.setStatus('current')
mibBuilder.exportSymbols("JUNIPER-LSYSSP-NATSRCRULE-MIB", jnxLsysSpNATsrcruleMIB=jnxLsysSpNATsrcruleMIB, jnxLsysSpNATsrcruleLightestUser=jnxLsysSpNATsrcruleLightestUser, jnxLsysSpNATsrcruleAvailableAmount=jnxLsysSpNATsrcruleAvailableAmount, jnxLsysSpNATsrcruleMaxQuota=jnxLsysSpNATsrcruleMaxQuota, jnxLsysSpNATsrcruleHeaviestUser=jnxLsysSpNATsrcruleHeaviestUser, jnxLsysSpNATsrcruleLightestUsage=jnxLsysSpNATsrcruleLightestUsage, PYSNMP_MODULE_ID=jnxLsysSpNATsrcruleMIB, jnxLsysSpNATsrcruleEntry=jnxLsysSpNATsrcruleEntry, jnxLsysSpNATsrcruleUsedAmount=jnxLsysSpNATsrcruleUsedAmount, jnxLsysSpNATsrcruleTable=jnxLsysSpNATsrcruleTable, jnxLsysSpNATsrcruleProfileName=jnxLsysSpNATsrcruleProfileName, jnxLsysSpNATsrcruleHeaviestUsage=jnxLsysSpNATsrcruleHeaviestUsage, jnxLsysSpNATsrcruleMaximum=jnxLsysSpNATsrcruleMaximum, jnxLsysSpNATsrcruleReserved=jnxLsysSpNATsrcruleReserved, jnxLsysSpNATsrcruleUsage=jnxLsysSpNATsrcruleUsage, jnxLsysSpNATsrcruleSummary=jnxLsysSpNATsrcruleSummary, jnxLsysSpNATsrcruleLsysName=jnxLsysSpNATsrcruleLsysName, jnxLsysSpNATsrcruleObjects=jnxLsysSpNATsrcruleObjects)
