#
# PySNMP MIB module OMNI-gx2litePS-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/OMNI-gx2litePS-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 20:24:42 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ConstraintsUnion, SingleValueConstraint, ConstraintsIntersection, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ConstraintsUnion", "SingleValueConstraint", "ConstraintsIntersection", "ValueRangeConstraint")
gx2Liteps, = mibBuilder.importSymbols("GX2HFC-MIB", "gx2Liteps")
gi, motproxies = mibBuilder.importSymbols("NLS-BBNIDENT-MIB", "gi", "motproxies")
trapNetworkElemModelNumber, trapText, trapIdentifier, trapNETrapLastTrapTimeStamp, trapPerceivedSeverity, trapNetworkElemAvailStatus, trapNetworkElemSerialNum, trapNetworkElemAlarmStatus, trapChangedObjectId, trapNetworkElemAdminState, trapChangedValueDisplayString, trapChangedValueInteger, trapNetworkElemOperState = mibBuilder.importSymbols("NLSBBN-TRAPS-MIB", "trapNetworkElemModelNumber", "trapText", "trapIdentifier", "trapNETrapLastTrapTimeStamp", "trapPerceivedSeverity", "trapNetworkElemAvailStatus", "trapNetworkElemSerialNum", "trapNetworkElemAlarmStatus", "trapChangedObjectId", "trapNetworkElemAdminState", "trapChangedValueDisplayString", "trapChangedValueInteger", "trapNetworkElemOperState")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
sysUpTime, = mibBuilder.importSymbols("SNMPv2-MIB", "sysUpTime")
Bits, NotificationType, Counter32, Integer32, TimeTicks, ModuleIdentity, Unsigned32, Gauge32, MibIdentifier, NotificationType, IpAddress, ObjectIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, iso, Counter64 = mibBuilder.importSymbols("SNMPv2-SMI", "Bits", "NotificationType", "Counter32", "Integer32", "TimeTicks", "ModuleIdentity", "Unsigned32", "Gauge32", "MibIdentifier", "NotificationType", "IpAddress", "ObjectIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "iso", "Counter64")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
class Float(Counter32):
    pass

gx2LitepsDescriptor = MibIdentifier((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 23, 1))
gx2LitepsAnalogTable = MibTable((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 23, 2), )
if mibBuilder.loadTexts: gx2LitepsAnalogTable.setStatus('mandatory')
gx2LitepsAnalogEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 23, 2, 1), ).setIndexNames((0, "OMNI-gx2litePS-MIB", "gx2LitepsAnalogTableIndex"))
if mibBuilder.loadTexts: gx2LitepsAnalogEntry.setStatus('mandatory')
gx2LitepsStatusTable = MibTable((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 23, 3), )
if mibBuilder.loadTexts: gx2LitepsStatusTable.setStatus('mandatory')
gx2LitepsStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 23, 3, 2), ).setIndexNames((0, "OMNI-gx2litePS-MIB", "gx2LitepsStatusTableIndex"))
if mibBuilder.loadTexts: gx2LitepsStatusEntry.setStatus('mandatory')
gx2LitepsAnalogTableIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 23, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: gx2LitepsAnalogTableIndex.setStatus('mandatory')
litepslabel12Volt = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 23, 2, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 80))).setMaxAccess("readonly")
if mibBuilder.loadTexts: litepslabel12Volt.setStatus('optional')
litepsuom12Volt = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 23, 2, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 80))).setMaxAccess("readonly")
if mibBuilder.loadTexts: litepsuom12Volt.setStatus('optional')
litepsmajorHigh12Volt = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 23, 2, 1, 4), Float()).setMaxAccess("readonly")
if mibBuilder.loadTexts: litepsmajorHigh12Volt.setStatus('mandatory')
litepsmajorLow12Volt = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 23, 2, 1, 5), Float()).setMaxAccess("readonly")
if mibBuilder.loadTexts: litepsmajorLow12Volt.setStatus('mandatory')
litepsminorHigh12Volt = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 23, 2, 1, 6), Float()).setMaxAccess("readonly")
if mibBuilder.loadTexts: litepsminorHigh12Volt.setStatus('mandatory')
litepsminorLow12Volt = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 23, 2, 1, 7), Float()).setMaxAccess("readonly")
if mibBuilder.loadTexts: litepsminorLow12Volt.setStatus('mandatory')
litepscurrentValue12Volt = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 23, 2, 1, 8), Float()).setMaxAccess("readonly")
if mibBuilder.loadTexts: litepscurrentValue12Volt.setStatus('mandatory')
litepsstateFlag12Volt = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 23, 2, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("hidden", 1), ("read-only", 2), ("updateable", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: litepsstateFlag12Volt.setStatus('mandatory')
litepsminValue12Volt = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 23, 2, 1, 10), Float()).setMaxAccess("readonly")
if mibBuilder.loadTexts: litepsminValue12Volt.setStatus('mandatory')
litepsmaxValue12Volt = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 23, 2, 1, 11), Float()).setMaxAccess("readonly")
if mibBuilder.loadTexts: litepsmaxValue12Volt.setStatus('mandatory')
litepsalarmState12Volt = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 23, 2, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("noAlarm", 1), ("majorLowAlarm", 2), ("minorLowAlarm", 3), ("minorHighAlarm", 4), ("majorHighAlarm", 5), ("informational", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: litepsalarmState12Volt.setStatus('mandatory')
litepslabel5Volt = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 23, 2, 1, 13), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 80))).setMaxAccess("readonly")
if mibBuilder.loadTexts: litepslabel5Volt.setStatus('optional')
litepsuom5Volt = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 23, 2, 1, 14), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 80))).setMaxAccess("readonly")
if mibBuilder.loadTexts: litepsuom5Volt.setStatus('optional')
litepsmajorHigh5Volt = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 23, 2, 1, 15), Float()).setMaxAccess("readonly")
if mibBuilder.loadTexts: litepsmajorHigh5Volt.setStatus('mandatory')
litepsmajorLow5Volt = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 23, 2, 1, 16), Float()).setMaxAccess("readonly")
if mibBuilder.loadTexts: litepsmajorLow5Volt.setStatus('mandatory')
litepsminorHigh5Volt = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 23, 2, 1, 17), Float()).setMaxAccess("readonly")
if mibBuilder.loadTexts: litepsminorHigh5Volt.setStatus('mandatory')
litepsminorLow5Volt = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 23, 2, 1, 18), Float()).setMaxAccess("readonly")
if mibBuilder.loadTexts: litepsminorLow5Volt.setStatus('mandatory')
litepscurrentValue5Volt = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 23, 2, 1, 19), Float()).setMaxAccess("readonly")
if mibBuilder.loadTexts: litepscurrentValue5Volt.setStatus('mandatory')
litepsstateFlag5Volt = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 23, 2, 1, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("hidden", 1), ("read-only", 2), ("updateable", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: litepsstateFlag5Volt.setStatus('mandatory')
litepsminValue5Volt = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 23, 2, 1, 21), Float()).setMaxAccess("readonly")
if mibBuilder.loadTexts: litepsminValue5Volt.setStatus('mandatory')
litepsmaxValue5Volt = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 23, 2, 1, 22), Float()).setMaxAccess("readonly")
if mibBuilder.loadTexts: litepsmaxValue5Volt.setStatus('mandatory')
litepsalarmState5Volt = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 23, 2, 1, 23), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("noAlarm", 1), ("majorLowAlarm", 2), ("minorLowAlarm", 3), ("minorHighAlarm", 4), ("majorHighAlarm", 5), ("informational", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: litepsalarmState5Volt.setStatus('mandatory')
litepslabel3Volt = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 23, 2, 1, 24), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 80))).setMaxAccess("readonly")
if mibBuilder.loadTexts: litepslabel3Volt.setStatus('optional')
litepsuom3Volt = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 23, 2, 1, 25), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 80))).setMaxAccess("readonly")
if mibBuilder.loadTexts: litepsuom3Volt.setStatus('optional')
litepsmajorHigh3Volt = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 23, 2, 1, 26), Float()).setMaxAccess("readonly")
if mibBuilder.loadTexts: litepsmajorHigh3Volt.setStatus('mandatory')
litepsmajorLow3Volt = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 23, 2, 1, 27), Float()).setMaxAccess("readonly")
if mibBuilder.loadTexts: litepsmajorLow3Volt.setStatus('mandatory')
litepsminorHigh3Volt = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 23, 2, 1, 28), Float()).setMaxAccess("readonly")
if mibBuilder.loadTexts: litepsminorHigh3Volt.setStatus('mandatory')
litepsminorLow3Volt = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 23, 2, 1, 29), Float()).setMaxAccess("readonly")
if mibBuilder.loadTexts: litepsminorLow3Volt.setStatus('mandatory')
litepscurrentValue3Volt = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 23, 2, 1, 30), Float()).setMaxAccess("readonly")
if mibBuilder.loadTexts: litepscurrentValue3Volt.setStatus('mandatory')
litepsstateFlag3Volt = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 23, 2, 1, 31), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("hidden", 1), ("read-only", 2), ("updateable", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: litepsstateFlag3Volt.setStatus('mandatory')
litepsminValue3Volt = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 23, 2, 1, 32), Float()).setMaxAccess("readonly")
if mibBuilder.loadTexts: litepsminValue3Volt.setStatus('mandatory')
litepsmaxValue3Volt = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 23, 2, 1, 33), Float()).setMaxAccess("readonly")
if mibBuilder.loadTexts: litepsmaxValue3Volt.setStatus('mandatory')
litepsalarmState3Volt = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 23, 2, 1, 34), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("noAlarm", 1), ("majorLowAlarm", 2), ("minorLowAlarm", 3), ("minorHighAlarm", 4), ("majorHighAlarm", 5), ("informational", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: litepsalarmState3Volt.setStatus('mandatory')
gx2LitepsStatusTableIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 23, 3, 2, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: gx2LitepsStatusTableIndex.setStatus('mandatory')
litepslabelFan1Status = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 23, 3, 2, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 80))).setMaxAccess("readonly")
if mibBuilder.loadTexts: litepslabelFan1Status.setStatus('optional')
litepsvalueFan1Status = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 23, 3, 2, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("ok", 1), ("undetermined", 2), ("warning", 3), ("minor", 4), ("major", 5), ("critical", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: litepsvalueFan1Status.setStatus('mandatory')
litepsstateflagFan1Status = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 23, 3, 2, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("hidden", 1), ("read-only", 2), ("updateable", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: litepsstateflagFan1Status.setStatus('mandatory')
litepslabelFan2Status = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 23, 3, 2, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 80))).setMaxAccess("readonly")
if mibBuilder.loadTexts: litepslabelFan2Status.setStatus('optional')
litepsvalueFan2Status = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 23, 3, 2, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("ok", 1), ("undetermined", 2), ("warning", 3), ("minor", 4), ("major", 5), ("critical", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: litepsvalueFan2Status.setStatus('mandatory')
litepsstateflagFan2Status = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 23, 3, 2, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("hidden", 1), ("read-only", 2), ("updateable", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: litepsstateflagFan2Status.setStatus('mandatory')
trapLitepsConfigChangeInteger = NotificationType((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 23) + (0,1)).setObjects(("NLSBBN-TRAPS-MIB", "trapIdentifier"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemModelNumber"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemSerialNum"), ("NLSBBN-TRAPS-MIB", "trapPerceivedSeverity"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemOperState"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemAlarmStatus"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemAdminState"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemAvailStatus"), ("NLSBBN-TRAPS-MIB", "trapText"), ("NLSBBN-TRAPS-MIB", "trapChangedObjectId"), ("NLSBBN-TRAPS-MIB", "trapChangedValueInteger"), ("NLSBBN-TRAPS-MIB", "trapNETrapLastTrapTimeStamp"))
trapLitepsConfigChangeDisplayString = NotificationType((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 23) + (0,2)).setObjects(("NLSBBN-TRAPS-MIB", "trapIdentifier"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemModelNumber"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemSerialNum"), ("NLSBBN-TRAPS-MIB", "trapPerceivedSeverity"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemOperState"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemAlarmStatus"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemAdminState"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemAvailStatus"), ("NLSBBN-TRAPS-MIB", "trapText"), ("NLSBBN-TRAPS-MIB", "trapChangedObjectId"), ("NLSBBN-TRAPS-MIB", "trapChangedValueDisplayString"), ("NLSBBN-TRAPS-MIB", "trapNETrapLastTrapTimeStamp"))
trapLitepsFanCurrent1 = NotificationType((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 23) + (0,3)).setObjects(("NLSBBN-TRAPS-MIB", "trapIdentifier"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemModelNumber"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemSerialNum"), ("NLSBBN-TRAPS-MIB", "trapPerceivedSeverity"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemOperState"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemAlarmStatus"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemAdminState"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemAvailStatus"), ("NLSBBN-TRAPS-MIB", "trapText"), ("NLSBBN-TRAPS-MIB", "trapChangedObjectId"), ("NLSBBN-TRAPS-MIB", "trapChangedValueInteger"), ("NLSBBN-TRAPS-MIB", "trapNETrapLastTrapTimeStamp"))
trapLitepsFanCurrent2 = NotificationType((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 23) + (0,4)).setObjects(("NLSBBN-TRAPS-MIB", "trapIdentifier"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemModelNumber"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemSerialNum"), ("NLSBBN-TRAPS-MIB", "trapPerceivedSeverity"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemOperState"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemAlarmStatus"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemAdminState"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemAvailStatus"), ("NLSBBN-TRAPS-MIB", "trapText"), ("NLSBBN-TRAPS-MIB", "trapChangedObjectId"), ("NLSBBN-TRAPS-MIB", "trapChangedValueInteger"), ("NLSBBN-TRAPS-MIB", "trapNETrapLastTrapTimeStamp"))
trapLiteps12Volt = NotificationType((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 23) + (0,5)).setObjects(("NLSBBN-TRAPS-MIB", "trapIdentifier"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemModelNumber"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemSerialNum"), ("NLSBBN-TRAPS-MIB", "trapPerceivedSeverity"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemOperState"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemAlarmStatus"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemAdminState"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemAvailStatus"), ("NLSBBN-TRAPS-MIB", "trapText"), ("NLSBBN-TRAPS-MIB", "trapChangedObjectId"), ("NLSBBN-TRAPS-MIB", "trapChangedValueInteger"), ("NLSBBN-TRAPS-MIB", "trapNETrapLastTrapTimeStamp"))
trapLiteps5Volt = NotificationType((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 23) + (0,6)).setObjects(("NLSBBN-TRAPS-MIB", "trapIdentifier"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemModelNumber"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemSerialNum"), ("NLSBBN-TRAPS-MIB", "trapPerceivedSeverity"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemOperState"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemAlarmStatus"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemAdminState"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemAvailStatus"), ("NLSBBN-TRAPS-MIB", "trapText"), ("NLSBBN-TRAPS-MIB", "trapChangedObjectId"), ("NLSBBN-TRAPS-MIB", "trapChangedValueInteger"), ("NLSBBN-TRAPS-MIB", "trapNETrapLastTrapTimeStamp"))
trapLiteps3Volt = NotificationType((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 23) + (0,7)).setObjects(("NLSBBN-TRAPS-MIB", "trapIdentifier"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemModelNumber"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemSerialNum"), ("NLSBBN-TRAPS-MIB", "trapPerceivedSeverity"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemOperState"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemAlarmStatus"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemAdminState"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemAvailStatus"), ("NLSBBN-TRAPS-MIB", "trapText"), ("NLSBBN-TRAPS-MIB", "trapChangedObjectId"), ("NLSBBN-TRAPS-MIB", "trapChangedValueInteger"), ("NLSBBN-TRAPS-MIB", "trapNETrapLastTrapTimeStamp"))
mibBuilder.exportSymbols("OMNI-gx2litePS-MIB", litepslabelFan2Status=litepslabelFan2Status, litepsalarmState5Volt=litepsalarmState5Volt, litepsalarmState12Volt=litepsalarmState12Volt, litepsvalueFan1Status=litepsvalueFan1Status, litepsmajorHigh3Volt=litepsmajorHigh3Volt, litepsmaxValue12Volt=litepsmaxValue12Volt, litepsmajorLow12Volt=litepsmajorLow12Volt, litepsminValue5Volt=litepsminValue5Volt, litepsmaxValue3Volt=litepsmaxValue3Volt, trapLitepsFanCurrent2=trapLitepsFanCurrent2, trapLiteps3Volt=trapLiteps3Volt, litepsmajorLow5Volt=litepsmajorLow5Volt, litepsmajorLow3Volt=litepsmajorLow3Volt, litepsminValue3Volt=litepsminValue3Volt, litepslabel5Volt=litepslabel5Volt, litepscurrentValue12Volt=litepscurrentValue12Volt, litepscurrentValue5Volt=litepscurrentValue5Volt, gx2LitepsDescriptor=gx2LitepsDescriptor, trapLitepsConfigChangeInteger=trapLitepsConfigChangeInteger, litepscurrentValue3Volt=litepscurrentValue3Volt, litepsuom5Volt=litepsuom5Volt, litepsminorLow3Volt=litepsminorLow3Volt, trapLitepsFanCurrent1=trapLitepsFanCurrent1, litepsuom3Volt=litepsuom3Volt, litepsminValue12Volt=litepsminValue12Volt, litepsmajorHigh12Volt=litepsmajorHigh12Volt, gx2LitepsStatusTable=gx2LitepsStatusTable, trapLiteps5Volt=trapLiteps5Volt, litepsminorLow12Volt=litepsminorLow12Volt, litepsstateFlag12Volt=litepsstateFlag12Volt, litepsminorHigh3Volt=litepsminorHigh3Volt, litepsmajorHigh5Volt=litepsmajorHigh5Volt, trapLitepsConfigChangeDisplayString=trapLitepsConfigChangeDisplayString, litepsminorHigh12Volt=litepsminorHigh12Volt, litepsminorHigh5Volt=litepsminorHigh5Volt, litepsstateFlag3Volt=litepsstateFlag3Volt, litepsminorLow5Volt=litepsminorLow5Volt, gx2LitepsStatusTableIndex=gx2LitepsStatusTableIndex, litepsstateflagFan2Status=litepsstateflagFan2Status, trapLiteps12Volt=trapLiteps12Volt, gx2LitepsAnalogTableIndex=gx2LitepsAnalogTableIndex, litepsuom12Volt=litepsuom12Volt, litepsvalueFan2Status=litepsvalueFan2Status, gx2LitepsAnalogEntry=gx2LitepsAnalogEntry, gx2LitepsAnalogTable=gx2LitepsAnalogTable, litepslabel12Volt=litepslabel12Volt, litepsstateflagFan1Status=litepsstateflagFan1Status, Float=Float, litepslabel3Volt=litepslabel3Volt, gx2LitepsStatusEntry=gx2LitepsStatusEntry, litepslabelFan1Status=litepslabelFan1Status, litepsmaxValue5Volt=litepsmaxValue5Volt, litepsalarmState3Volt=litepsalarmState3Volt, litepsstateFlag5Volt=litepsstateFlag5Volt)
