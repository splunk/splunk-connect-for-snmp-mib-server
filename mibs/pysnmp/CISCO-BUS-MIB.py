#
# PySNMP MIB module CISCO-BUS-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CISCO-BUS-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:34:16 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ConstraintsIntersection, ValueSizeConstraint, ConstraintsUnion, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ConstraintsIntersection", "ValueSizeConstraint", "ConstraintsUnion", "ValueRangeConstraint")
ciscoMgmt, = mibBuilder.importSymbols("CISCO-SMI", "ciscoMgmt")
AtmLaneAddress, = mibBuilder.importSymbols("LAN-EMULATION-CLIENT-MIB", "AtmLaneAddress")
ObjectGroup, ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "ModuleCompliance", "NotificationGroup")
Bits, ModuleIdentity, Unsigned32, Counter32, TimeTicks, Counter64, Integer32, MibScalar, MibTable, MibTableRow, MibTableColumn, Gauge32, ObjectIdentity, NotificationType, MibIdentifier, IpAddress, iso = mibBuilder.importSymbols("SNMPv2-SMI", "Bits", "ModuleIdentity", "Unsigned32", "Counter32", "TimeTicks", "Counter64", "Integer32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Gauge32", "ObjectIdentity", "NotificationType", "MibIdentifier", "IpAddress", "iso")
TextualConvention, TimeStamp, DisplayString, RowStatus = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "TimeStamp", "DisplayString", "RowStatus")
ciscoBusMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 9, 9, 40))
if mibBuilder.loadTexts: ciscoBusMIB.setLastUpdated('9509151702Z')
if mibBuilder.loadTexts: ciscoBusMIB.setOrganization('Cisco Systems Inc.')
ciscoBusMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 40, 1))
class CiscoVpiInteger(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ValueRangeConstraint(-1, 255)

class CiscoVciInteger(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ValueRangeConstraint(-1, 65535)

busTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 40, 1, 1), )
if mibBuilder.loadTexts: busTable.setStatus('current')
busEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 40, 1, 1, 1), ).setIndexNames((0, "CISCO-BUS-MIB", "busElanName"), (0, "CISCO-BUS-MIB", "busIndex"))
if mibBuilder.loadTexts: busEntry.setStatus('current')
busElanName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 40, 1, 1, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32)))
if mibBuilder.loadTexts: busElanName.setStatus('current')
busIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 40, 1, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: busIndex.setStatus('current')
busAtmAddrSpec = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 40, 1, 1, 1, 3), AtmLaneAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: busAtmAddrSpec.setStatus('current')
busAtmAddrMask = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 40, 1, 1, 1, 4), OctetString().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(20, 20), ))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: busAtmAddrMask.setStatus('current')
busAtmAddrActl = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 40, 1, 1, 1, 5), AtmLaneAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: busAtmAddrActl.setStatus('current')
busIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 40, 1, 1, 1, 6), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: busIfIndex.setStatus('current')
busSubIfNum = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 40, 1, 1, 1, 7), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: busSubIfNum.setStatus('current')
busUpTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 40, 1, 1, 1, 8), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: busUpTime.setStatus('current')
busLanType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 40, 1, 1, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("dot3", 1), ("dot5", 2))).clone('dot3')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: busLanType.setStatus('current')
busMaxFrm = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 40, 1, 1, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1516, 4544, 9234, 18190))).clone(namedValues=NamedValues(("dot3", 1516), ("tr4Mb", 4544), ("rfc1626", 9234), ("tr16Mb", 18190))).clone('dot3')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: busMaxFrm.setStatus('current')
busMaxFrmAge = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 40, 1, 1, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4)).clone(1)).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: busMaxFrmAge.setStatus('current')
busOutFwdOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 40, 1, 1, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: busOutFwdOctets.setStatus('current')
busOutFwdUcastFrms = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 40, 1, 1, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: busOutFwdUcastFrms.setStatus('current')
busOutFwdNUcastFrms = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 40, 1, 1, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: busOutFwdNUcastFrms.setStatus('current')
busFrmTimeOuts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 40, 1, 1, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: busFrmTimeOuts.setStatus('current')
busMultiFwdVpi = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 40, 1, 1, 1, 16), CiscoVpiInteger()).setMaxAccess("readonly")
if mibBuilder.loadTexts: busMultiFwdVpi.setStatus('current')
busMultiFwdVci = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 40, 1, 1, 1, 17), CiscoVciInteger()).setMaxAccess("readonly")
if mibBuilder.loadTexts: busMultiFwdVci.setStatus('current')
busOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 40, 1, 1, 1, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("active", 1), ("inactive", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: busOperStatus.setStatus('current')
busAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 40, 1, 1, 1, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("active", 1), ("inactive", 2))).clone('active')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: busAdminStatus.setStatus('current')
busStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 40, 1, 1, 1, 20), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: busStatus.setStatus('current')
busClientTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 40, 1, 2), )
if mibBuilder.loadTexts: busClientTable.setStatus('current')
busClientEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 40, 1, 2, 1), ).setIndexNames((0, "CISCO-BUS-MIB", "busElanName"), (0, "CISCO-BUS-MIB", "busIndex"), (0, "CISCO-BUS-MIB", "busClientId"))
if mibBuilder.loadTexts: busClientEntry.setStatus('current')
busClientId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 40, 1, 2, 1, 1), Integer32())
if mibBuilder.loadTexts: busClientId.setStatus('current')
busClientIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 40, 1, 2, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: busClientIfIndex.setStatus('current')
busClientMSendVpi = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 40, 1, 2, 1, 3), CiscoVpiInteger()).setMaxAccess("readonly")
if mibBuilder.loadTexts: busClientMSendVpi.setStatus('current')
busClientMSendVci = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 40, 1, 2, 1, 4), CiscoVciInteger()).setMaxAccess("readonly")
if mibBuilder.loadTexts: busClientMSendVci.setStatus('current')
busClientAtmAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 40, 1, 2, 1, 5), AtmLaneAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: busClientAtmAddress.setStatus('current')
ciscoBusMIBConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 40, 2))
ciscoBusMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 40, 2, 1))
ciscoBusMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 40, 2, 2))
ciscoBusGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 40, 2, 1, 1)).setObjects(("CISCO-BUS-MIB", "busAtmAddrSpec"), ("CISCO-BUS-MIB", "busAtmAddrMask"), ("CISCO-BUS-MIB", "busAtmAddrActl"), ("CISCO-BUS-MIB", "busIfIndex"), ("CISCO-BUS-MIB", "busUpTime"), ("CISCO-BUS-MIB", "busLanType"), ("CISCO-BUS-MIB", "busMaxFrm"), ("CISCO-BUS-MIB", "busMaxFrmAge"), ("CISCO-BUS-MIB", "busOutFwdOctets"), ("CISCO-BUS-MIB", "busOutFwdUcastFrms"), ("CISCO-BUS-MIB", "busOutFwdNUcastFrms"), ("CISCO-BUS-MIB", "busFrmTimeOuts"), ("CISCO-BUS-MIB", "busMultiFwdVpi"), ("CISCO-BUS-MIB", "busMultiFwdVci"), ("CISCO-BUS-MIB", "busOperStatus"), ("CISCO-BUS-MIB", "busAdminStatus"), ("CISCO-BUS-MIB", "busStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoBusGroup = ciscoBusGroup.setStatus('current')
ciscoBusSubIfGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 40, 2, 1, 2)).setObjects(("CISCO-BUS-MIB", "busSubIfNum"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoBusSubIfGroup = ciscoBusSubIfGroup.setStatus('current')
ciscoBusClientGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 40, 2, 1, 3)).setObjects(("CISCO-BUS-MIB", "busClientIfIndex"), ("CISCO-BUS-MIB", "busClientMSendVpi"), ("CISCO-BUS-MIB", "busClientMSendVci"), ("CISCO-BUS-MIB", "busClientAtmAddress"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoBusClientGroup = ciscoBusClientGroup.setStatus('current')
ciscoBusMIBCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 40, 2, 2, 1)).setObjects(("CISCO-BUS-MIB", "ciscoBusGroup"), ("CISCO-BUS-MIB", "ciscoBusSubIfGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoBusMIBCompliance = ciscoBusMIBCompliance.setStatus('current')
mibBuilder.exportSymbols("CISCO-BUS-MIB", busSubIfNum=busSubIfNum, busAdminStatus=busAdminStatus, busUpTime=busUpTime, PYSNMP_MODULE_ID=ciscoBusMIB, busIfIndex=busIfIndex, ciscoBusGroup=ciscoBusGroup, busAtmAddrMask=busAtmAddrMask, busStatus=busStatus, busElanName=busElanName, busMaxFrmAge=busMaxFrmAge, busClientIfIndex=busClientIfIndex, busAtmAddrActl=busAtmAddrActl, busLanType=busLanType, busOutFwdNUcastFrms=busOutFwdNUcastFrms, busOutFwdUcastFrms=busOutFwdUcastFrms, ciscoBusMIBConformance=ciscoBusMIBConformance, busFrmTimeOuts=busFrmTimeOuts, busClientAtmAddress=busClientAtmAddress, ciscoBusMIBGroups=ciscoBusMIBGroups, busEntry=busEntry, ciscoBusMIB=ciscoBusMIB, busClientMSendVpi=busClientMSendVpi, CiscoVciInteger=CiscoVciInteger, busTable=busTable, busMaxFrm=busMaxFrm, busMultiFwdVci=busMultiFwdVci, busAtmAddrSpec=busAtmAddrSpec, ciscoBusMIBCompliances=ciscoBusMIBCompliances, ciscoBusSubIfGroup=ciscoBusSubIfGroup, ciscoBusClientGroup=ciscoBusClientGroup, ciscoBusMIBCompliance=ciscoBusMIBCompliance, busClientEntry=busClientEntry, CiscoVpiInteger=CiscoVpiInteger, busClientMSendVci=busClientMSendVci, busOperStatus=busOperStatus, busOutFwdOctets=busOutFwdOctets, busMultiFwdVpi=busMultiFwdVpi, busClientId=busClientId, busIndex=busIndex, ciscoBusMIBObjects=ciscoBusMIBObjects, busClientTable=busClientTable)
