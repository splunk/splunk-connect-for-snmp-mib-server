#
# PySNMP MIB module IPAD-DHCP-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/IPAD-DHCP-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:44:31 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ValueRangeConstraint, ValueSizeConstraint, ConstraintsUnion, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ValueRangeConstraint", "ValueSizeConstraint", "ConstraintsUnion", "ConstraintsIntersection")
ipad, = mibBuilder.importSymbols("IPADv2-MIB", "ipad")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Integer32, NotificationType, Gauge32, ObjectIdentity, Unsigned32, Counter64, iso, MibIdentifier, MibScalar, MibTable, MibTableRow, MibTableColumn, IpAddress, TimeTicks, Bits, ModuleIdentity, Counter32 = mibBuilder.importSymbols("SNMPv2-SMI", "Integer32", "NotificationType", "Gauge32", "ObjectIdentity", "Unsigned32", "Counter64", "iso", "MibIdentifier", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "IpAddress", "TimeTicks", "Bits", "ModuleIdentity", "Counter32")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
ipadDhcp = ModuleIdentity((1, 3, 6, 1, 4, 1, 321, 100, 1, 27))
if mibBuilder.loadTexts: ipadDhcp.setLastUpdated('0005290001Z')
if mibBuilder.loadTexts: ipadDhcp.setOrganization('Verilink Corporation')
ipadDhcpParms = MibIdentifier((1, 3, 6, 1, 4, 1, 321, 100, 1, 27, 1))
ipadDhcpPortParms = MibIdentifier((1, 3, 6, 1, 4, 1, 321, 100, 1, 27, 2))
ipadDhcpEnable = MibScalar((1, 3, 6, 1, 4, 1, 321, 100, 1, 27, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("disable", 2), ("enable", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipadDhcpEnable.setStatus('current')
ipadDhcpNumberPorts = MibScalar((1, 3, 6, 1, 4, 1, 321, 100, 1, 27, 1, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipadDhcpNumberPorts.setStatus('current')
ipadDhcpTTL = MibScalar((1, 3, 6, 1, 4, 1, 321, 100, 1, 27, 1, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipadDhcpTTL.setStatus('current')
ipadDhcpServiceType = MibScalar((1, 3, 6, 1, 4, 1, 321, 100, 1, 27, 1, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipadDhcpServiceType.setStatus('current')
ipadDhcpLeaseTime = MibScalar((1, 3, 6, 1, 4, 1, 321, 100, 1, 27, 1, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipadDhcpLeaseTime.setStatus('current')
ipadDhcpServerDatabasePrimaryDnsIpAddress = MibScalar((1, 3, 6, 1, 4, 1, 321, 100, 1, 27, 1, 6), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipadDhcpServerDatabasePrimaryDnsIpAddress.setStatus('current')
ipadDhcpServerDatabaseSecondaryDnsIpAddress = MibScalar((1, 3, 6, 1, 4, 1, 321, 100, 1, 27, 1, 7), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipadDhcpServerDatabaseSecondaryDnsIpAddress.setStatus('current')
ipadDhcpServerDatabaseDomainName = MibScalar((1, 3, 6, 1, 4, 1, 321, 100, 1, 27, 1, 8), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipadDhcpServerDatabaseDomainName.setStatus('current')
ipadDhcpServerDatabaseRouterIpAddress = MibScalar((1, 3, 6, 1, 4, 1, 321, 100, 1, 27, 1, 9), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipadDhcpServerDatabaseRouterIpAddress.setStatus('current')
ipadDhcpServerHostNameTable = MibTable((1, 3, 6, 1, 4, 1, 321, 100, 1, 27, 1, 10), )
if mibBuilder.loadTexts: ipadDhcpServerHostNameTable.setStatus('current')
ipadDhcpServerHostNameTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 321, 100, 1, 27, 1, 10, 1), ).setIndexNames((0, "IPAD-DHCP-MIB", "ipadDhcpServerHostIndex"))
if mibBuilder.loadTexts: ipadDhcpServerHostNameTableEntry.setStatus('current')
ipadDhcpServerHostIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 321, 100, 1, 27, 1, 10, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipadDhcpServerHostIndex.setStatus('current')
ipadDhcpServerHostName = MibTableColumn((1, 3, 6, 1, 4, 1, 321, 100, 1, 27, 1, 10, 1, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipadDhcpServerHostName.setStatus('current')
ipadDhcpServerHostAdd = MibScalar((1, 3, 6, 1, 4, 1, 321, 100, 1, 27, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("other", 1), ("addnew", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipadDhcpServerHostAdd.setStatus('current')
ipadDhcpServerHostDelete = MibScalar((1, 3, 6, 1, 4, 1, 321, 100, 1, 27, 1, 12), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipadDhcpServerHostDelete.setStatus('current')
ipadDhcpStaticEntryTable = MibTable((1, 3, 6, 1, 4, 1, 321, 100, 1, 27, 1, 13), )
if mibBuilder.loadTexts: ipadDhcpStaticEntryTable.setStatus('current')
ipadDhcpStaticEntryTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 321, 100, 1, 27, 1, 13, 1), ).setIndexNames((0, "IPAD-DHCP-MIB", "ipadDhcpStaticEntryIndex"))
if mibBuilder.loadTexts: ipadDhcpStaticEntryTableEntry.setStatus('current')
ipadDhcpStaticEntryIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 321, 100, 1, 27, 1, 13, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipadDhcpStaticEntryIndex.setStatus('current')
ipadDhcpStaticEntryMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 321, 100, 1, 27, 1, 13, 1, 2), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipadDhcpStaticEntryMacAddress.setStatus('current')
ipadDhcpStaticEntryIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 321, 100, 1, 27, 1, 13, 1, 3), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipadDhcpStaticEntryIpAddress.setStatus('current')
ipadDhcpStaticEntryMaskAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 321, 100, 1, 27, 1, 13, 1, 4), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipadDhcpStaticEntryMaskAddress.setStatus('current')
ipadDhcpStaticEntryHostName = MibTableColumn((1, 3, 6, 1, 4, 1, 321, 100, 1, 27, 1, 13, 1, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipadDhcpStaticEntryHostName.setStatus('current')
ipadDhcpStaticEntryAdd = MibScalar((1, 3, 6, 1, 4, 1, 321, 100, 1, 27, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("other", 1), ("addnew", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipadDhcpStaticEntryAdd.setStatus('current')
ipadDhcpStaticEntryDelete = MibScalar((1, 3, 6, 1, 4, 1, 321, 100, 1, 27, 1, 15), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipadDhcpStaticEntryDelete.setStatus('current')
ipadDhcpAddressListTable = MibTable((1, 3, 6, 1, 4, 1, 321, 100, 1, 27, 1, 16), )
if mibBuilder.loadTexts: ipadDhcpAddressListTable.setStatus('current')
ipadDhcpAddressListTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 321, 100, 1, 27, 1, 16, 1), ).setIndexNames((0, "IPAD-DHCP-MIB", "ipadDhcpAddressListIndex"))
if mibBuilder.loadTexts: ipadDhcpAddressListTableEntry.setStatus('current')
ipadDhcpAddressListIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 321, 100, 1, 27, 1, 16, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipadDhcpAddressListIndex.setStatus('current')
ipadDhcpAddressListIpStart = MibTableColumn((1, 3, 6, 1, 4, 1, 321, 100, 1, 27, 1, 16, 1, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipadDhcpAddressListIpStart.setStatus('current')
ipadDhcpAddressListIpEnd = MibTableColumn((1, 3, 6, 1, 4, 1, 321, 100, 1, 27, 1, 16, 1, 3), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipadDhcpAddressListIpEnd.setStatus('current')
ipadDhcpAddressListSubnetMask = MibTableColumn((1, 3, 6, 1, 4, 1, 321, 100, 1, 27, 1, 16, 1, 4), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipadDhcpAddressListSubnetMask.setStatus('current')
ipadDhcpAddressListIpExcludeStart = MibTableColumn((1, 3, 6, 1, 4, 1, 321, 100, 1, 27, 1, 16, 1, 5), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipadDhcpAddressListIpExcludeStart.setStatus('current')
ipadDhcpAddressListIpExcludeEnd = MibTableColumn((1, 3, 6, 1, 4, 1, 321, 100, 1, 27, 1, 16, 1, 6), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipadDhcpAddressListIpExcludeEnd.setStatus('current')
ipadDhcpAddressListAdd = MibScalar((1, 3, 6, 1, 4, 1, 321, 100, 1, 27, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("other", 1), ("addnew", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipadDhcpAddressListAdd.setStatus('current')
ipadDhcpAddressListDelete = MibScalar((1, 3, 6, 1, 4, 1, 321, 100, 1, 27, 1, 18), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipadDhcpAddressListDelete.setStatus('current')
ipadDhcpAddressStatusTable = MibTable((1, 3, 6, 1, 4, 1, 321, 100, 1, 27, 1, 19), )
if mibBuilder.loadTexts: ipadDhcpAddressStatusTable.setStatus('current')
ipadDhcpServerDatabaseWinsPrimary = MibScalar((1, 3, 6, 1, 4, 1, 321, 100, 1, 27, 1, 20), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipadDhcpServerDatabaseWinsPrimary.setStatus('current')
ipadDhcpServerDatabaseWinsSecondary = MibScalar((1, 3, 6, 1, 4, 1, 321, 100, 1, 27, 1, 21), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipadDhcpServerDatabaseWinsSecondary.setStatus('current')
ipadDhcpAddressStatusTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 321, 100, 1, 27, 1, 19, 1), ).setIndexNames((0, "IPAD-DHCP-MIB", "ipadDhcpAddressStatusIndex"))
if mibBuilder.loadTexts: ipadDhcpAddressStatusTableEntry.setStatus('current')
ipadDhcpAddressStatusIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 321, 100, 1, 27, 1, 19, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipadDhcpAddressStatusIndex.setStatus('current')
ipadDhcpAddressStatusMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 321, 100, 1, 27, 1, 19, 1, 2), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipadDhcpAddressStatusMacAddress.setStatus('current')
ipadDhcpAddressStatusIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 321, 100, 1, 27, 1, 19, 1, 3), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipadDhcpAddressStatusIpAddress.setStatus('current')
ipadDhcpAddressStatusStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 321, 100, 1, 27, 1, 19, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("available", 2), ("assigned", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipadDhcpAddressStatusStatus.setStatus('current')
ipadDhcpPortTable = MibTable((1, 3, 6, 1, 4, 1, 321, 100, 1, 27, 2, 1), )
if mibBuilder.loadTexts: ipadDhcpPortTable.setStatus('current')
ipadDhcpPortTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 321, 100, 1, 27, 2, 1, 1), ).setIndexNames((0, "IPAD-DHCP-MIB", "ipadDhcpPortIndex"))
if mibBuilder.loadTexts: ipadDhcpPortTableEntry.setStatus('current')
ipadDhcpPortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 321, 100, 1, 27, 2, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipadDhcpPortIndex.setStatus('current')
ipadDhcpPortIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 321, 100, 1, 27, 2, 1, 1, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipadDhcpPortIpAddress.setStatus('current')
ipadDhcpPortEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 321, 100, 1, 27, 2, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("disable", 2), ("enable", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipadDhcpPortEnable.setStatus('current')
ipadDhcpPortAdd = MibScalar((1, 3, 6, 1, 4, 1, 321, 100, 1, 27, 2, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipadDhcpPortAdd.setStatus('current')
ipadDhcpPortDelete = MibScalar((1, 3, 6, 1, 4, 1, 321, 100, 1, 27, 2, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipadDhcpPortDelete.setStatus('current')
mibBuilder.exportSymbols("IPAD-DHCP-MIB", ipadDhcpAddressListIndex=ipadDhcpAddressListIndex, ipadDhcpServerDatabaseDomainName=ipadDhcpServerDatabaseDomainName, ipadDhcpServiceType=ipadDhcpServiceType, ipadDhcpServerDatabaseRouterIpAddress=ipadDhcpServerDatabaseRouterIpAddress, ipadDhcpServerHostAdd=ipadDhcpServerHostAdd, ipadDhcpPortIpAddress=ipadDhcpPortIpAddress, ipadDhcpPortTableEntry=ipadDhcpPortTableEntry, ipadDhcpStaticEntryDelete=ipadDhcpStaticEntryDelete, ipadDhcpStaticEntryTable=ipadDhcpStaticEntryTable, ipadDhcpStaticEntryIndex=ipadDhcpStaticEntryIndex, ipadDhcpAddressStatusTableEntry=ipadDhcpAddressStatusTableEntry, ipadDhcpServerDatabaseSecondaryDnsIpAddress=ipadDhcpServerDatabaseSecondaryDnsIpAddress, ipadDhcp=ipadDhcp, ipadDhcpServerHostName=ipadDhcpServerHostName, ipadDhcpServerHostDelete=ipadDhcpServerHostDelete, ipadDhcpStaticEntryMaskAddress=ipadDhcpStaticEntryMaskAddress, ipadDhcpAddressListTable=ipadDhcpAddressListTable, PYSNMP_MODULE_ID=ipadDhcp, ipadDhcpStaticEntryMacAddress=ipadDhcpStaticEntryMacAddress, ipadDhcpLeaseTime=ipadDhcpLeaseTime, ipadDhcpServerDatabaseWinsSecondary=ipadDhcpServerDatabaseWinsSecondary, ipadDhcpPortDelete=ipadDhcpPortDelete, ipadDhcpNumberPorts=ipadDhcpNumberPorts, ipadDhcpServerDatabaseWinsPrimary=ipadDhcpServerDatabaseWinsPrimary, ipadDhcpPortEnable=ipadDhcpPortEnable, ipadDhcpServerHostNameTable=ipadDhcpServerHostNameTable, ipadDhcpAddressListAdd=ipadDhcpAddressListAdd, ipadDhcpAddressListIpExcludeEnd=ipadDhcpAddressListIpExcludeEnd, ipadDhcpPortIndex=ipadDhcpPortIndex, ipadDhcpPortParms=ipadDhcpPortParms, ipadDhcpStaticEntryIpAddress=ipadDhcpStaticEntryIpAddress, ipadDhcpStaticEntryTableEntry=ipadDhcpStaticEntryTableEntry, ipadDhcpEnable=ipadDhcpEnable, ipadDhcpAddressStatusTable=ipadDhcpAddressStatusTable, ipadDhcpPortAdd=ipadDhcpPortAdd, ipadDhcpStaticEntryAdd=ipadDhcpStaticEntryAdd, ipadDhcpServerHostNameTableEntry=ipadDhcpServerHostNameTableEntry, ipadDhcpAddressListIpEnd=ipadDhcpAddressListIpEnd, ipadDhcpAddressListSubnetMask=ipadDhcpAddressListSubnetMask, ipadDhcpParms=ipadDhcpParms, ipadDhcpServerDatabasePrimaryDnsIpAddress=ipadDhcpServerDatabasePrimaryDnsIpAddress, ipadDhcpServerHostIndex=ipadDhcpServerHostIndex, ipadDhcpStaticEntryHostName=ipadDhcpStaticEntryHostName, ipadDhcpAddressStatusIpAddress=ipadDhcpAddressStatusIpAddress, ipadDhcpAddressStatusStatus=ipadDhcpAddressStatusStatus, ipadDhcpAddressListTableEntry=ipadDhcpAddressListTableEntry, ipadDhcpAddressListIpExcludeStart=ipadDhcpAddressListIpExcludeStart, ipadDhcpAddressStatusMacAddress=ipadDhcpAddressStatusMacAddress, ipadDhcpTTL=ipadDhcpTTL, ipadDhcpAddressListDelete=ipadDhcpAddressListDelete, ipadDhcpPortTable=ipadDhcpPortTable, ipadDhcpAddressStatusIndex=ipadDhcpAddressStatusIndex, ipadDhcpAddressListIpStart=ipadDhcpAddressListIpStart)
