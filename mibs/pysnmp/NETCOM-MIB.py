#
# PySNMP MIB module NETCOM-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/NETCOM-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 20:08:51 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ValueRangeConstraint, ValueSizeConstraint, ConstraintsUnion, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ValueRangeConstraint", "ValueSizeConstraint", "ConstraintsUnion", "ConstraintsIntersection")
NotificationGroup, ModuleCompliance, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance", "ObjectGroup")
Bits, NotificationType, ObjectIdentity, TimeTicks, Integer32, IpAddress, MibIdentifier, MibScalar, MibTable, MibTableRow, MibTableColumn, Gauge32, iso, ModuleIdentity, enterprises, Counter32, Counter64, Unsigned32, NotificationType = mibBuilder.importSymbols("SNMPv2-SMI", "Bits", "NotificationType", "ObjectIdentity", "TimeTicks", "Integer32", "IpAddress", "MibIdentifier", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Gauge32", "iso", "ModuleIdentity", "enterprises", "Counter32", "Counter64", "Unsigned32", "NotificationType")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
sinetica = MibIdentifier((1, 3, 6, 1, 4, 1, 3711))
netcom = MibIdentifier((1, 3, 6, 1, 4, 1, 3711, 7))
netcom1 = MibIdentifier((1, 3, 6, 1, 4, 1, 3711, 7, 1))
netcomObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 3711, 7, 1, 1))
netcomEnvironment = MibIdentifier((1, 3, 6, 1, 4, 1, 3711, 7, 1, 1, 1))
netcomContact = MibIdentifier((1, 3, 6, 1, 4, 1, 3711, 7, 1, 1, 2))
netcomEnvHumidity = MibIdentifier((1, 3, 6, 1, 4, 1, 3711, 7, 1, 1, 1, 1))
netcomEnvTemperature = MibIdentifier((1, 3, 6, 1, 4, 1, 3711, 7, 1, 1, 1, 2))
netcomEnvHumidityEnableMonitoring = MibScalar((1, 3, 6, 1, 4, 1, 3711, 7, 1, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: netcomEnvHumidityEnableMonitoring.setStatus('mandatory')
netcomEnvCurrentHumidity = MibScalar((1, 3, 6, 1, 4, 1, 3711, 7, 1, 1, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: netcomEnvCurrentHumidity.setStatus('mandatory')
netcomEnvHumidityLowerThreshold = MibScalar((1, 3, 6, 1, 4, 1, 3711, 7, 1, 1, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: netcomEnvHumidityLowerThreshold.setStatus('mandatory')
netcomEnvHumidityUpperThreshold = MibScalar((1, 3, 6, 1, 4, 1, 3711, 7, 1, 1, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: netcomEnvHumidityUpperThreshold.setStatus('mandatory')
netcomEnvHumidityCalibrationOffset = MibScalar((1, 3, 6, 1, 4, 1, 3711, 7, 1, 1, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-100, 100))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: netcomEnvHumidityCalibrationOffset.setStatus('mandatory')
netcomLowHumidity = NotificationType((1, 3, 6, 1, 4, 1, 3711, 7, 1, 1, 1, 1) + (0,21)).setObjects(("NETCOM-MIB", "netcomEnvCurrentHumidity"))
netcomHighHumidity = NotificationType((1, 3, 6, 1, 4, 1, 3711, 7, 1, 1, 1, 1) + (0,22)).setObjects(("NETCOM-MIB", "netcomEnvCurrentHumidity"))
netcomHumidityReturnToNormal = NotificationType((1, 3, 6, 1, 4, 1, 3711, 7, 1, 1, 1, 1) + (0,23)).setObjects(("NETCOM-MIB", "netcomEnvCurrentHumidity"))
netcomEnvTemperatureEnableMonitoring = MibScalar((1, 3, 6, 1, 4, 1, 3711, 7, 1, 1, 1, 2, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: netcomEnvTemperatureEnableMonitoring.setStatus('mandatory')
netcomEnvCurrentTemperature = MibScalar((1, 3, 6, 1, 4, 1, 3711, 7, 1, 1, 1, 2, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-200, 1000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: netcomEnvCurrentTemperature.setStatus('mandatory')
netcomEnvTemperatureLowerThreshold = MibScalar((1, 3, 6, 1, 4, 1, 3711, 7, 1, 1, 1, 2, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-200, 1000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: netcomEnvTemperatureLowerThreshold.setStatus('mandatory')
netcomEnvTemperatureUpperThreshold = MibScalar((1, 3, 6, 1, 4, 1, 3711, 7, 1, 1, 1, 2, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-200, 1000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: netcomEnvTemperatureUpperThreshold.setStatus('mandatory')
netcomEnvTemperatureCalibrationOffset = MibScalar((1, 3, 6, 1, 4, 1, 3711, 7, 1, 1, 1, 2, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-100, 100))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: netcomEnvTemperatureCalibrationOffset.setStatus('mandatory')
netcomLowTemperature = NotificationType((1, 3, 6, 1, 4, 1, 3711, 7, 1, 1, 1, 2) + (0,31)).setObjects(("NETCOM-MIB", "netcomEnvCurrentTemperature"))
netcomHighTemperature = NotificationType((1, 3, 6, 1, 4, 1, 3711, 7, 1, 1, 1, 2) + (0,32)).setObjects(("NETCOM-MIB", "netcomEnvCurrentTemperature"))
netcomTemperatureReturnToNormal = NotificationType((1, 3, 6, 1, 4, 1, 3711, 7, 1, 1, 1, 2) + (0,33)).setObjects(("NETCOM-MIB", "netcomEnvCurrentTemperature"))
netcomContactEnable = MibScalar((1, 3, 6, 1, 4, 1, 3711, 7, 1, 1, 2, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: netcomContactEnable.setStatus('mandatory')
netcomContactNormalStates = MibIdentifier((1, 3, 6, 1, 4, 1, 3711, 7, 1, 1, 2, 2))
netcomContactCurrentStates = MibIdentifier((1, 3, 6, 1, 4, 1, 3711, 7, 1, 1, 2, 3))
netcomContact1NormalState = MibScalar((1, 3, 6, 1, 4, 1, 3711, 7, 1, 1, 2, 2, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: netcomContact1NormalState.setStatus('mandatory')
netcomContact2NormalState = MibScalar((1, 3, 6, 1, 4, 1, 3711, 7, 1, 1, 2, 2, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: netcomContact2NormalState.setStatus('mandatory')
netcomContact3NormalState = MibScalar((1, 3, 6, 1, 4, 1, 3711, 7, 1, 1, 2, 2, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: netcomContact3NormalState.setStatus('mandatory')
netcomContact4NormalState = MibScalar((1, 3, 6, 1, 4, 1, 3711, 7, 1, 1, 2, 2, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: netcomContact4NormalState.setStatus('mandatory')
netcomContact5NormalState = MibScalar((1, 3, 6, 1, 4, 1, 3711, 7, 1, 1, 2, 2, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: netcomContact5NormalState.setStatus('mandatory')
netcomContact6NormalState = MibScalar((1, 3, 6, 1, 4, 1, 3711, 7, 1, 1, 2, 2, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: netcomContact6NormalState.setStatus('mandatory')
netcomContact7NormalState = MibScalar((1, 3, 6, 1, 4, 1, 3711, 7, 1, 1, 2, 2, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: netcomContact7NormalState.setStatus('mandatory')
netcomContact1CurrentState = MibScalar((1, 3, 6, 1, 4, 1, 3711, 7, 1, 1, 2, 3, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setMaxAccess("readonly")
if mibBuilder.loadTexts: netcomContact1CurrentState.setStatus('mandatory')
netcomContact2CurrentState = MibScalar((1, 3, 6, 1, 4, 1, 3711, 7, 1, 1, 2, 3, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setMaxAccess("readonly")
if mibBuilder.loadTexts: netcomContact2CurrentState.setStatus('mandatory')
netcomContact3CurrentState = MibScalar((1, 3, 6, 1, 4, 1, 3711, 7, 1, 1, 2, 3, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setMaxAccess("readonly")
if mibBuilder.loadTexts: netcomContact3CurrentState.setStatus('mandatory')
netcomContact4CurrentState = MibScalar((1, 3, 6, 1, 4, 1, 3711, 7, 1, 1, 2, 3, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setMaxAccess("readonly")
if mibBuilder.loadTexts: netcomContact4CurrentState.setStatus('mandatory')
netcomContact5CurrentState = MibScalar((1, 3, 6, 1, 4, 1, 3711, 7, 1, 1, 2, 3, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setMaxAccess("readonly")
if mibBuilder.loadTexts: netcomContact5CurrentState.setStatus('mandatory')
netcomContact6CurrentState = MibScalar((1, 3, 6, 1, 4, 1, 3711, 7, 1, 1, 2, 3, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setMaxAccess("readonly")
if mibBuilder.loadTexts: netcomContact6CurrentState.setStatus('mandatory')
netcomContact7CurrentState = MibScalar((1, 3, 6, 1, 4, 1, 3711, 7, 1, 1, 2, 3, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setMaxAccess("readonly")
if mibBuilder.loadTexts: netcomContact7CurrentState.setStatus('mandatory')
netcomContact1NonNormal = NotificationType((1, 3, 6, 1, 4, 1, 3711, 7, 1, 1, 2) + (0,1))
netcomContact1ReturnToNormal = NotificationType((1, 3, 6, 1, 4, 1, 3711, 7, 1, 1, 2) + (0,11))
netcomContact2NonNormal = NotificationType((1, 3, 6, 1, 4, 1, 3711, 7, 1, 1, 2) + (0,2))
netcomContact2ReturnToNormal = NotificationType((1, 3, 6, 1, 4, 1, 3711, 7, 1, 1, 2) + (0,12))
netcomContact3NonNormal = NotificationType((1, 3, 6, 1, 4, 1, 3711, 7, 1, 1, 2) + (0,3))
netcomContact3ReturnToNormal = NotificationType((1, 3, 6, 1, 4, 1, 3711, 7, 1, 1, 2) + (0,13))
netcomContact4NonNormal = NotificationType((1, 3, 6, 1, 4, 1, 3711, 7, 1, 1, 2) + (0,4))
netcomContact4ReturnToNormal = NotificationType((1, 3, 6, 1, 4, 1, 3711, 7, 1, 1, 2) + (0,14))
netcomContact5NonNormal = NotificationType((1, 3, 6, 1, 4, 1, 3711, 7, 1, 1, 2) + (0,5))
netcomContact5ReturnToNormal = NotificationType((1, 3, 6, 1, 4, 1, 3711, 7, 1, 1, 2) + (0,15))
netcomContact6NonNormal = NotificationType((1, 3, 6, 1, 4, 1, 3711, 7, 1, 1, 2) + (0,6))
netcomContact6ReturnToNormal = NotificationType((1, 3, 6, 1, 4, 1, 3711, 7, 1, 1, 2) + (0,16))
netcomContact7NonNormal = NotificationType((1, 3, 6, 1, 4, 1, 3711, 7, 1, 1, 2) + (0,7))
netcomContact7ReturnToNormal = NotificationType((1, 3, 6, 1, 4, 1, 3711, 7, 1, 1, 2) + (0,17))
mibBuilder.exportSymbols("NETCOM-MIB", netcomContact4CurrentState=netcomContact4CurrentState, netcomEnvTemperatureEnableMonitoring=netcomEnvTemperatureEnableMonitoring, netcomContact3CurrentState=netcomContact3CurrentState, sinetica=sinetica, netcomContact2ReturnToNormal=netcomContact2ReturnToNormal, netcomEnvTemperatureCalibrationOffset=netcomEnvTemperatureCalibrationOffset, netcomEnvHumidityEnableMonitoring=netcomEnvHumidityEnableMonitoring, netcomEnvTemperatureLowerThreshold=netcomEnvTemperatureLowerThreshold, netcomLowHumidity=netcomLowHumidity, netcomContact4NonNormal=netcomContact4NonNormal, netcomEnvironment=netcomEnvironment, netcomLowTemperature=netcomLowTemperature, netcomContact1ReturnToNormal=netcomContact1ReturnToNormal, netcomContact5NormalState=netcomContact5NormalState, netcomTemperatureReturnToNormal=netcomTemperatureReturnToNormal, netcomContact6NormalState=netcomContact6NormalState, netcomContact7NormalState=netcomContact7NormalState, netcomHumidityReturnToNormal=netcomHumidityReturnToNormal, netcomContact=netcomContact, netcomContact1NormalState=netcomContact1NormalState, netcomContact3NonNormal=netcomContact3NonNormal, netcomContactNormalStates=netcomContactNormalStates, netcomContact6ReturnToNormal=netcomContact6ReturnToNormal, netcom=netcom, netcomContact7ReturnToNormal=netcomContact7ReturnToNormal, netcomEnvHumidityUpperThreshold=netcomEnvHumidityUpperThreshold, netcomContact1CurrentState=netcomContact1CurrentState, netcomContactEnable=netcomContactEnable, netcomContact5NonNormal=netcomContact5NonNormal, netcomContact6CurrentState=netcomContact6CurrentState, netcomEnvHumidityLowerThreshold=netcomEnvHumidityLowerThreshold, netcomEnvCurrentHumidity=netcomEnvCurrentHumidity, netcomEnvHumidity=netcomEnvHumidity, netcomHighTemperature=netcomHighTemperature, netcomContact7NonNormal=netcomContact7NonNormal, netcomContact3NormalState=netcomContact3NormalState, netcomContact6NonNormal=netcomContact6NonNormal, netcomObjects=netcomObjects, netcomEnvCurrentTemperature=netcomEnvCurrentTemperature, netcom1=netcom1, netcomEnvHumidityCalibrationOffset=netcomEnvHumidityCalibrationOffset, netcomEnvTemperature=netcomEnvTemperature, netcomEnvTemperatureUpperThreshold=netcomEnvTemperatureUpperThreshold, netcomContact4NormalState=netcomContact4NormalState, netcomContact3ReturnToNormal=netcomContact3ReturnToNormal, netcomHighHumidity=netcomHighHumidity, netcomContact7CurrentState=netcomContact7CurrentState, netcomContact4ReturnToNormal=netcomContact4ReturnToNormal, netcomContact2CurrentState=netcomContact2CurrentState, netcomContactCurrentStates=netcomContactCurrentStates, netcomContact1NonNormal=netcomContact1NonNormal, netcomContact5CurrentState=netcomContact5CurrentState, netcomContact2NormalState=netcomContact2NormalState, netcomContact5ReturnToNormal=netcomContact5ReturnToNormal, netcomContact2NonNormal=netcomContact2NonNormal)
