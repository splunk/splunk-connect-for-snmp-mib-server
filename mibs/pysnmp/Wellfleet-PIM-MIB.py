#
# PySNMP MIB module Wellfleet-PIM-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/Wellfleet-PIM-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 21:34:41 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ConstraintsUnion, ValueRangeConstraint, SingleValueConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ConstraintsUnion", "ValueRangeConstraint", "SingleValueConstraint", "ConstraintsIntersection")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
TimeTicks, NotificationType, Counter64, MibIdentifier, ModuleIdentity, ObjectIdentity, Bits, Counter32, IpAddress, MibScalar, MibTable, MibTableRow, MibTableColumn, Gauge32, Integer32, iso, Unsigned32 = mibBuilder.importSymbols("SNMPv2-SMI", "TimeTicks", "NotificationType", "Counter64", "MibIdentifier", "ModuleIdentity", "ObjectIdentity", "Bits", "Counter32", "IpAddress", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Gauge32", "Integer32", "iso", "Unsigned32")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
wfPimGroup, = mibBuilder.importSymbols("Wellfleet-COMMON-MIB", "wfPimGroup")
wfPim = MibIdentifier((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 14, 1))
wfPimDelete = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 14, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("created", 1), ("deleted", 2))).clone('created')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfPimDelete.setStatus('mandatory')
wfPimDisable = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 14, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfPimDisable.setStatus('mandatory')
wfPimState = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 14, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("init", 3), ("notpres", 4))).clone('notpres')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfPimState.setStatus('mandatory')
wfPimInfoWarning = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 14, 1, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfPimInfoWarning.setStatus('mandatory')
wfPimDebug = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 14, 1, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfPimDebug.setStatus('mandatory')
wfPimTrace = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 14, 1, 6), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfPimTrace.setStatus('mandatory')
wfPimTotalCacheEntries = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 14, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfPimTotalCacheEntries.setStatus('mandatory')
wfPimJoinPruneInterval = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 14, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(5, 18724)).clone(60)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfPimJoinPruneInterval.setStatus('mandatory')
wfPimLastHopDataThresholdDisable = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 14, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfPimLastHopDataThresholdDisable.setStatus('mandatory')
wfPimLastHopDataThreshold = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 14, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)).clone(2048)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfPimLastHopDataThreshold.setStatus('mandatory')
wfPimRPDataThresholdDisable = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 14, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfPimRPDataThresholdDisable.setStatus('mandatory')
wfPimRPDataThreshold = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 14, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)).clone(1024)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfPimRPDataThreshold.setStatus('mandatory')
wfPimThresholdSampleInterval = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 14, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(16, 300)).clone(16)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfPimThresholdSampleInterval.setStatus('mandatory')
wfPimPMBREnable = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 14, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfPimPMBREnable.setStatus('mandatory')
wfPimHelloOptionGenIdDisable = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 14, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfPimHelloOptionGenIdDisable.setStatus('mandatory')
wfPimBSRAddress = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 14, 1, 16), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfPimBSRAddress.setStatus('mandatory')
wfPimBSRPriority = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 14, 1, 17), Integer32().clone(1)).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfPimBSRPriority.setStatus('mandatory')
wfPimBSRHoldTime = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 14, 1, 18), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfPimBSRHoldTime.setStatus('mandatory')
wfPimBSRHashMaskLen = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 14, 1, 19), Integer32().clone(30)).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfPimBSRHashMaskLen.setStatus('mandatory')
wfPimCBSREnable = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 14, 1, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfPimCBSREnable.setStatus('mandatory')
wfPimCBSRAddress = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 14, 1, 21), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfPimCBSRAddress.setStatus('mandatory')
wfPimCBSRPriority = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 14, 1, 22), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfPimCBSRPriority.setStatus('mandatory')
wfPimCBSRInterval = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 14, 1, 23), Integer32().subtype(subtypeSpec=ValueRangeConstraint(5, 32757)).clone(60)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfPimCBSRInterval.setStatus('mandatory')
wfPimCBSRHashMaskLen = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 14, 1, 24), Integer32().subtype(subtypeSpec=ValueRangeConstraint(4, 32)).clone(30)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfPimCBSRHashMaskLen.setStatus('mandatory')
wfPimCRPEnable = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 14, 1, 25), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfPimCRPEnable.setStatus('mandatory')
wfPimCRPAddress = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 14, 1, 26), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfPimCRPAddress.setStatus('mandatory')
wfPimCRPPriority = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 14, 1, 27), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfPimCRPPriority.setStatus('mandatory')
wfPimCRPGrPrefix = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 14, 1, 28), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfPimCRPGrPrefix.setStatus('mandatory')
wfPimCRPAdvInterval = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 14, 1, 29), Integer32().subtype(subtypeSpec=ValueRangeConstraint(5, 26214)).clone(60)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfPimCRPAdvInterval.setStatus('mandatory')
wfPimCRPHoldTime = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 14, 1, 30), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfPimCRPHoldTime.setStatus('mandatory')
wfPimRPRcvRegisterCacheTimeout = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 14, 1, 31), Integer32().subtype(subtypeSpec=ValueRangeConstraint(5, 65535)).clone(210)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfPimRPRcvRegisterCacheTimeout.setStatus('mandatory')
wfPimRPRegisterDisable = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 14, 1, 32), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfPimRPRegisterDisable.setStatus('mandatory')
wfPimRegisterSuppressTimeout = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 14, 1, 33), Integer32().subtype(subtypeSpec=ValueRangeConstraint(5, 65535)).clone(60)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfPimRegisterSuppressTimeout.setStatus('mandatory')
wfPimProbeTime = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 14, 1, 34), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)).clone(5)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfPimProbeTime.setStatus('mandatory')
wfPimCiscoCompatibilityEnable = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 14, 1, 35), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfPimCiscoCompatibilityEnable.setStatus('obsolete')
wfPimRfcComplianceDisable = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 14, 1, 36), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfPimRfcComplianceDisable.setStatus('mandatory')
wfPimIfTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 14, 2), )
if mibBuilder.loadTexts: wfPimIfTable.setStatus('mandatory')
wfPimIfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 14, 2, 1), ).setIndexNames((0, "Wellfleet-PIM-MIB", "wfPimIfCct"))
if mibBuilder.loadTexts: wfPimIfEntry.setStatus('mandatory')
wfPimIfDelete = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 14, 2, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("created", 1), ("deleted", 2))).clone('created')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfPimIfDelete.setStatus('mandatory')
wfPimIfDisable = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 14, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfPimIfDisable.setStatus('mandatory')
wfPimIfState = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 14, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("init", 3), ("notpres", 4))).clone('notpres')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfPimIfState.setStatus('mandatory')
wfPimIfCct = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 14, 2, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfPimIfCct.setStatus('mandatory')
wfPimIfIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 14, 2, 1, 5), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfPimIfIpAddress.setStatus('mandatory')
wfPimIfIpMask = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 14, 2, 1, 6), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfPimIfIpMask.setStatus('mandatory')
wfPimIfHelloInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 14, 2, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)).clone(30)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfPimIfHelloInterval.setStatus('mandatory')
wfPimIfMode = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 14, 2, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("dense", 1), ("sparse", 2))).clone('sparse')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfPimIfMode.setStatus('mandatory')
wfPimIfCacheTimeOut = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 14, 2, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(5, 2147483647)).clone(210)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfPimIfCacheTimeOut.setStatus('mandatory')
wfPimIfDefaultGlobalJoinPruneIntervalDisable = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 14, 2, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfPimIfDefaultGlobalJoinPruneIntervalDisable.setStatus('mandatory')
wfPimIfJoinPruneInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 14, 2, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(5, 18724)).clone(60)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfPimIfJoinPruneInterval.setStatus('mandatory')
wfPimIfDownstreamIgmpRelayEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 14, 2, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfPimIfDownstreamIgmpRelayEnable.setStatus('mandatory')
wfPimIfLocalDRPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 14, 2, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfPimIfLocalDRPriority.setStatus('mandatory')
wfPimIfDR = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 14, 2, 1, 14), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfPimIfDR.setStatus('mandatory')
wfPimIfDRPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 14, 2, 1, 15), Integer32().clone(1)).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfPimIfDRPriority.setStatus('mandatory')
wfPimIfInHellos = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 14, 2, 1, 16), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfPimIfInHellos.setStatus('mandatory')
wfPimIfOutHellos = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 14, 2, 1, 17), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfPimIfOutHellos.setStatus('mandatory')
wfPimIfInPrunes = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 14, 2, 1, 18), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfPimIfInPrunes.setStatus('mandatory')
wfPimIfOutPrunes = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 14, 2, 1, 19), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfPimIfOutPrunes.setStatus('mandatory')
wfPimIfInGrafts = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 14, 2, 1, 20), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfPimIfInGrafts.setStatus('mandatory')
wfPimIfOutGrafts = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 14, 2, 1, 21), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfPimIfOutGrafts.setStatus('mandatory')
wfPimIfInCRPAdvs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 14, 2, 1, 22), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfPimIfInCRPAdvs.setStatus('mandatory')
wfPimIfOutCRPAdvs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 14, 2, 1, 23), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfPimIfOutCRPAdvs.setStatus('mandatory')
wfPimIfInRPSets = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 14, 2, 1, 24), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfPimIfInRPSets.setStatus('mandatory')
wfPimIfOutRPSets = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 14, 2, 1, 25), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfPimIfOutRPSets.setStatus('mandatory')
wfPimIfInRegisters = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 14, 2, 1, 26), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfPimIfInRegisters.setStatus('mandatory')
wfPimIfOutRegisters = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 14, 2, 1, 27), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfPimIfOutRegisters.setStatus('mandatory')
wfPimIfInRegStop = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 14, 2, 1, 28), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfPimIfInRegStop.setStatus('mandatory')
wfPimIfOutRegStop = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 14, 2, 1, 29), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfPimIfOutRegStop.setStatus('mandatory')
wfPimIfInJoinPrunes = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 14, 2, 1, 30), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfPimIfInJoinPrunes.setStatus('mandatory')
wfPimIfOutJoinPrunes = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 14, 2, 1, 31), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfPimIfOutJoinPrunes.setStatus('mandatory')
wfPimIfBootstrapBorder = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 14, 2, 1, 32), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfPimIfBootstrapBorder.setStatus('mandatory')
wfPimNeighborTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 14, 3), )
if mibBuilder.loadTexts: wfPimNeighborTable.setStatus('mandatory')
wfPimNeighborEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 14, 3, 1), ).setIndexNames((0, "Wellfleet-PIM-MIB", "wfPimNeighborAddress"))
if mibBuilder.loadTexts: wfPimNeighborEntry.setStatus('mandatory')
wfPimNeighborAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 14, 3, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfPimNeighborAddress.setStatus('mandatory')
wfPimNeighborCct = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 14, 3, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfPimNeighborCct.setStatus('mandatory')
wfPimNeighborUpTime = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 14, 3, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfPimNeighborUpTime.setStatus('mandatory')
wfPimNeighborExpiryTime = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 14, 3, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfPimNeighborExpiryTime.setStatus('mandatory')
wfPimNeighboringRouterGenId = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 14, 3, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfPimNeighboringRouterGenId.setStatus('mandatory')
wfPimNeighboringRouterDRPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 14, 3, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfPimNeighboringRouterDRPriority.setStatus('mandatory')
mibBuilder.exportSymbols("Wellfleet-PIM-MIB", wfPimIfBootstrapBorder=wfPimIfBootstrapBorder, wfPimCBSRHashMaskLen=wfPimCBSRHashMaskLen, wfPimIfOutHellos=wfPimIfOutHellos, wfPimIfIpAddress=wfPimIfIpAddress, wfPimIfEntry=wfPimIfEntry, wfPimNeighborEntry=wfPimNeighborEntry, wfPimCBSRPriority=wfPimCBSRPriority, wfPimIfOutGrafts=wfPimIfOutGrafts, wfPimCRPAddress=wfPimCRPAddress, wfPimJoinPruneInterval=wfPimJoinPruneInterval, wfPimIfTable=wfPimIfTable, wfPimIfInPrunes=wfPimIfInPrunes, wfPimDebug=wfPimDebug, wfPimDisable=wfPimDisable, wfPimBSRHashMaskLen=wfPimBSRHashMaskLen, wfPimNeighborExpiryTime=wfPimNeighborExpiryTime, wfPimBSRPriority=wfPimBSRPriority, wfPimTrace=wfPimTrace, wfPimIfOutJoinPrunes=wfPimIfOutJoinPrunes, wfPimIfCacheTimeOut=wfPimIfCacheTimeOut, wfPimRegisterSuppressTimeout=wfPimRegisterSuppressTimeout, wfPimIfMode=wfPimIfMode, wfPimIfDRPriority=wfPimIfDRPriority, wfPimBSRHoldTime=wfPimBSRHoldTime, wfPimCRPGrPrefix=wfPimCRPGrPrefix, wfPimIfInCRPAdvs=wfPimIfInCRPAdvs, wfPimCRPEnable=wfPimCRPEnable, wfPimIfInRegisters=wfPimIfInRegisters, wfPimLastHopDataThreshold=wfPimLastHopDataThreshold, wfPimIfOutCRPAdvs=wfPimIfOutCRPAdvs, wfPimCBSREnable=wfPimCBSREnable, wfPimIfDefaultGlobalJoinPruneIntervalDisable=wfPimIfDefaultGlobalJoinPruneIntervalDisable, wfPimCRPHoldTime=wfPimCRPHoldTime, wfPimNeighboringRouterGenId=wfPimNeighboringRouterGenId, wfPimIfOutRegStop=wfPimIfOutRegStop, wfPimIfCct=wfPimIfCct, wfPimIfDR=wfPimIfDR, wfPimIfOutRegisters=wfPimIfOutRegisters, wfPimIfState=wfPimIfState, wfPimCBSRAddress=wfPimCBSRAddress, wfPimIfInRPSets=wfPimIfInRPSets, wfPimRfcComplianceDisable=wfPimRfcComplianceDisable, wfPimIfOutPrunes=wfPimIfOutPrunes, wfPimHelloOptionGenIdDisable=wfPimHelloOptionGenIdDisable, wfPimTotalCacheEntries=wfPimTotalCacheEntries, wfPimBSRAddress=wfPimBSRAddress, wfPimIfLocalDRPriority=wfPimIfLocalDRPriority, wfPimNeighborTable=wfPimNeighborTable, wfPimIfIpMask=wfPimIfIpMask, wfPimNeighborAddress=wfPimNeighborAddress, wfPimThresholdSampleInterval=wfPimThresholdSampleInterval, wfPimState=wfPimState, wfPimIfInHellos=wfPimIfInHellos, wfPimRPDataThreshold=wfPimRPDataThreshold, wfPimProbeTime=wfPimProbeTime, wfPimCRPAdvInterval=wfPimCRPAdvInterval, wfPimRPRegisterDisable=wfPimRPRegisterDisable, wfPimNeighborCct=wfPimNeighborCct, wfPimIfDownstreamIgmpRelayEnable=wfPimIfDownstreamIgmpRelayEnable, wfPim=wfPim, wfPimIfDisable=wfPimIfDisable, wfPimPMBREnable=wfPimPMBREnable, wfPimIfHelloInterval=wfPimIfHelloInterval, wfPimDelete=wfPimDelete, wfPimIfInGrafts=wfPimIfInGrafts, wfPimIfDelete=wfPimIfDelete, wfPimIfInJoinPrunes=wfPimIfInJoinPrunes, wfPimIfJoinPruneInterval=wfPimIfJoinPruneInterval, wfPimIfOutRPSets=wfPimIfOutRPSets, wfPimCRPPriority=wfPimCRPPriority, wfPimRPRcvRegisterCacheTimeout=wfPimRPRcvRegisterCacheTimeout, wfPimRPDataThresholdDisable=wfPimRPDataThresholdDisable, wfPimInfoWarning=wfPimInfoWarning, wfPimCBSRInterval=wfPimCBSRInterval, wfPimLastHopDataThresholdDisable=wfPimLastHopDataThresholdDisable, wfPimCiscoCompatibilityEnable=wfPimCiscoCompatibilityEnable, wfPimIfInRegStop=wfPimIfInRegStop, wfPimNeighborUpTime=wfPimNeighborUpTime, wfPimNeighboringRouterDRPriority=wfPimNeighboringRouterDRPriority)
