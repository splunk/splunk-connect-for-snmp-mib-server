#
# PySNMP MIB module CYBER-ARK-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file://text/CYBER-ARK-MIB
# Produced by pysmi-0.3.4 at Mon Sep 20 11:08:33 2021
# On host C02YJ1DPJHD2 platform Darwin version 20.4.0 by user mpipaliya
# Using Python version 3.7.4 (default, Oct 12 2019, 18:55:28) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ValueRangeConstraint, SingleValueConstraint, ValueSizeConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ValueRangeConstraint", "SingleValueConstraint", "ValueSizeConstraint", "ConstraintsIntersection")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Counter32, enterprises, ModuleIdentity, iso, Integer32, Unsigned32, ObjectIdentity, NotificationType, TimeTicks, Bits, Gauge32, IpAddress, MibIdentifier, Counter64, MibScalar, MibTable, MibTableRow, MibTableColumn = mibBuilder.importSymbols("SNMPv2-SMI", "Counter32", "enterprises", "ModuleIdentity", "iso", "Integer32", "Unsigned32", "ObjectIdentity", "NotificationType", "TimeTicks", "Bits", "Gauge32", "IpAddress", "MibIdentifier", "Counter64", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
cyberArkMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 11536))
if mibBuilder.loadTexts: cyberArkMIB.setLastUpdated('200901190000Z')
if mibBuilder.loadTexts: cyberArkMIB.setOrganization('Cyber ark software ltd.')
cyberArkTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 11536, 3))
cyberArkTrapPrefix = MibIdentifier((1, 3, 6, 1, 4, 1, 11536, 3, 6))
paInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 11536, 1))
osInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 11536, 2))
paVaultInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 11536, 1, 1))
paCIFSInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 11536, 1, 2))
paFTPInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 11536, 1, 3))
paSMTPInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 11536, 1, 4))
paDRInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 11536, 1, 5))
paCVMInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 11536, 1, 6))
osEventLogInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 11536, 2, 1))
osDiskUsage = MibIdentifier((1, 3, 6, 1, 4, 1, 11536, 2, 3))
osMemoryUsage = MibIdentifier((1, 3, 6, 1, 4, 1, 11536, 2, 4))
osService = MibIdentifier((1, 3, 6, 1, 4, 1, 11536, 2, 5))
paVaultLogInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 11536, 1, 1, 1))
paCIFSLogInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 11536, 1, 2, 1))
paFTPLogInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 11536, 1, 3, 1))
paSMTPLogInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 11536, 1, 4, 1))
paDRLogInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 11536, 1, 5, 1))
paCVMLogInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 11536, 1, 6, 1))
osDiskDrive = MibScalar((1, 3, 6, 1, 4, 1, 11536, 2, 3, 1), OctetString().clone('NoDrive')).setMaxAccess("readonly")
if mibBuilder.loadTexts: osDiskDrive.setStatus('current')
osDiskPercentageFreeSpace = MibScalar((1, 3, 6, 1, 4, 1, 11536, 2, 3, 2), OctetString().clone('0')).setMaxAccess("readonly")
if mibBuilder.loadTexts: osDiskPercentageFreeSpace.setStatus('current')
osDiskFreeSpace = MibScalar((1, 3, 6, 1, 4, 1, 11536, 2, 3, 3), OctetString().clone('0')).setMaxAccess("readonly")
if mibBuilder.loadTexts: osDiskFreeSpace.setStatus('current')
osDiskTrapState = MibScalar((1, 3, 6, 1, 4, 1, 11536, 2, 3, 4), OctetString().clone('None')).setMaxAccess("readonly")
if mibBuilder.loadTexts: osDiskTrapState.setStatus('current')
osCpuUsage = MibScalar((1, 3, 6, 1, 4, 1, 11536, 2, 2), OctetString().clone('Idle')).setMaxAccess("readonly")
if mibBuilder.loadTexts: osCpuUsage.setStatus('current')
osCpuTrapState = MibScalar((1, 3, 6, 1, 4, 1, 11536, 2, 6), OctetString().clone('State')).setMaxAccess("readonly")
if mibBuilder.loadTexts: osCpuTrapState.setStatus('current')
osELName = MibScalar((1, 3, 6, 1, 4, 1, 11536, 2, 1, 1), OctetString().clone('Unknown')).setMaxAccess("readonly")
if mibBuilder.loadTexts: osELName.setStatus('current')
osELEventId = MibScalar((1, 3, 6, 1, 4, 1, 11536, 2, 1, 2), Integer32().clone(1)).setMaxAccess("readonly")
if mibBuilder.loadTexts: osELEventId.setStatus('current')
osELTimeGenerated = MibScalar((1, 3, 6, 1, 4, 1, 11536, 2, 1, 3), OctetString().clone('Now')).setMaxAccess("readonly")
if mibBuilder.loadTexts: osELTimeGenerated.setStatus('current')
osELEventType = MibScalar((1, 3, 6, 1, 4, 1, 11536, 2, 1, 4), Integer32().clone(1)).setMaxAccess("readonly")
if mibBuilder.loadTexts: osELEventType.setStatus('current')
osELEventSource = MibScalar((1, 3, 6, 1, 4, 1, 11536, 2, 1, 5), OctetString().clone('System')).setMaxAccess("readonly")
if mibBuilder.loadTexts: osELEventSource.setStatus('current')
osELComputerName = MibScalar((1, 3, 6, 1, 4, 1, 11536, 2, 1, 6), OctetString().clone('Localhost')).setMaxAccess("readonly")
if mibBuilder.loadTexts: osELComputerName.setStatus('current')
osELEventDescription = MibScalar((1, 3, 6, 1, 4, 1, 11536, 2, 1, 7), OctetString().clone('None')).setMaxAccess("readonly")
if mibBuilder.loadTexts: osELEventDescription.setStatus('current')
osMemoryTotalKbPhysical = MibScalar((1, 3, 6, 1, 4, 1, 11536, 2, 4, 1), Integer32().clone('None')).setMaxAccess("readonly")
if mibBuilder.loadTexts: osMemoryTotalKbPhysical.setStatus('current')
osMemoryAvailKbPhysical = MibScalar((1, 3, 6, 1, 4, 1, 11536, 2, 4, 2), Integer32().clone('None')).setMaxAccess("readonly")
if mibBuilder.loadTexts: osMemoryAvailKbPhysical.setStatus('current')
osMemoryTotalKbSwap = MibScalar((1, 3, 6, 1, 4, 1, 11536, 2, 4, 3), Integer32().clone('None')).setMaxAccess("readonly")
if mibBuilder.loadTexts: osMemoryTotalKbSwap.setStatus('current')
osMemoryAvailKbSwap = MibScalar((1, 3, 6, 1, 4, 1, 11536, 2, 4, 4), Integer32().clone('None')).setMaxAccess("readonly")
if mibBuilder.loadTexts: osMemoryAvailKbSwap.setStatus('current')
osMemoryTrapState = MibScalar((1, 3, 6, 1, 4, 1, 11536, 2, 4, 5), OctetString().clone('0')).setMaxAccess("readonly")
if mibBuilder.loadTexts: osMemoryTrapState.setStatus('current')
osServiceName = MibScalar((1, 3, 6, 1, 4, 1, 11536, 2, 5, 1), OctetString().clone('None')).setMaxAccess("readonly")
if mibBuilder.loadTexts: osServiceName.setStatus('current')
osServiceStatus = MibScalar((1, 3, 6, 1, 4, 1, 11536, 2, 5, 2), OctetString().clone('None')).setMaxAccess("readonly")
if mibBuilder.loadTexts: osServiceStatus.setStatus('current')
osServiceTrapState = MibScalar((1, 3, 6, 1, 4, 1, 11536, 2, 5, 3), OctetString().clone('0')).setMaxAccess("readonly")
if mibBuilder.loadTexts: osServiceTrapState.setStatus('current')
paVaultLogName = MibScalar((1, 3, 6, 1, 4, 1, 11536, 1, 1, 1, 1), OctetString().clone('None')).setMaxAccess("readonly")
if mibBuilder.loadTexts: paVaultLogName.setStatus('current')
paVaultLogSource = MibScalar((1, 3, 6, 1, 4, 1, 11536, 1, 1, 1, 2), OctetString().clone('None')).setMaxAccess("readonly")
if mibBuilder.loadTexts: paVaultLogSource.setStatus('current')
paVaultLogRecord = MibScalar((1, 3, 6, 1, 4, 1, 11536, 1, 1, 1, 3), OctetString().clone('None')).setMaxAccess("readonly")
if mibBuilder.loadTexts: paVaultLogRecord.setStatus('current')
paCIFSLogName = MibScalar((1, 3, 6, 1, 4, 1, 11536, 1, 2, 1, 1), OctetString().clone('None')).setMaxAccess("readonly")
if mibBuilder.loadTexts: paCIFSLogName.setStatus('current')
paCIFSLogSource = MibScalar((1, 3, 6, 1, 4, 1, 11536, 1, 2, 1, 2), OctetString().clone('None')).setMaxAccess("readonly")
if mibBuilder.loadTexts: paCIFSLogSource.setStatus('current')
paCIFSLogRecord = MibScalar((1, 3, 6, 1, 4, 1, 11536, 1, 2, 1, 3), OctetString().clone('None')).setMaxAccess("readonly")
if mibBuilder.loadTexts: paCIFSLogRecord.setStatus('current')
paFTPLogName = MibScalar((1, 3, 6, 1, 4, 1, 11536, 1, 3, 1, 1), OctetString().clone('None')).setMaxAccess("readonly")
if mibBuilder.loadTexts: paFTPLogName.setStatus('current')
paFTPLogSource = MibScalar((1, 3, 6, 1, 4, 1, 11536, 1, 3, 1, 2), OctetString().clone('None')).setMaxAccess("readonly")
if mibBuilder.loadTexts: paFTPLogSource.setStatus('current')
paFTPLogRecord = MibScalar((1, 3, 6, 1, 4, 1, 11536, 1, 3, 1, 3), OctetString().clone('None')).setMaxAccess("readonly")
if mibBuilder.loadTexts: paFTPLogRecord.setStatus('current')
paSMTPLogName = MibScalar((1, 3, 6, 1, 4, 1, 11536, 1, 4, 1, 1), OctetString().clone('None')).setMaxAccess("readonly")
if mibBuilder.loadTexts: paSMTPLogName.setStatus('current')
paSMTPLogSource = MibScalar((1, 3, 6, 1, 4, 1, 11536, 1, 4, 1, 2), OctetString().clone('None')).setMaxAccess("readonly")
if mibBuilder.loadTexts: paSMTPLogSource.setStatus('current')
paSMTPLogRecord = MibScalar((1, 3, 6, 1, 4, 1, 11536, 1, 4, 1, 3), OctetString().clone('None')).setMaxAccess("readonly")
if mibBuilder.loadTexts: paSMTPLogRecord.setStatus('current')
paDRLogName = MibScalar((1, 3, 6, 1, 4, 1, 11536, 1, 5, 1, 1), OctetString().clone('None')).setMaxAccess("readonly")
if mibBuilder.loadTexts: paDRLogName.setStatus('current')
paDRLogSource = MibScalar((1, 3, 6, 1, 4, 1, 11536, 1, 5, 1, 2), OctetString().clone('None')).setMaxAccess("readonly")
if mibBuilder.loadTexts: paDRLogSource.setStatus('current')
paDRLogRecord = MibScalar((1, 3, 6, 1, 4, 1, 11536, 1, 5, 1, 3), OctetString().clone('None')).setMaxAccess("readonly")
if mibBuilder.loadTexts: paDRLogRecord.setStatus('current')
paCVMLogName = MibScalar((1, 3, 6, 1, 4, 1, 11536, 1, 6, 1, 1), OctetString().clone('None')).setMaxAccess("readonly")
if mibBuilder.loadTexts: paCVMLogName.setStatus('current')
paCVMLogSource = MibScalar((1, 3, 6, 1, 4, 1, 11536, 1, 6, 1, 2), OctetString().clone('None')).setMaxAccess("readonly")
if mibBuilder.loadTexts: paCVMLogSource.setStatus('current')
paCVMLogRecord = MibScalar((1, 3, 6, 1, 4, 1, 11536, 1, 6, 1, 3), OctetString().clone('None')).setMaxAccess("readonly")
if mibBuilder.loadTexts: paCVMLogRecord.setStatus('current')
osDiskFreeSpaceNotification = NotificationType((1, 3, 6, 1, 4, 1, 11536, 3, 6, 3)).setObjects(("CYBER-ARK-MIB", "osDiskDrive"), ("CYBER-ARK-MIB", "osDiskPercentageFreeSpace"), ("CYBER-ARK-MIB", "osDiskFreeSpace"), ("CYBER-ARK-MIB", "osDiskTrapState"))
if mibBuilder.loadTexts: osDiskFreeSpaceNotification.setStatus('current')
osCpuUsageNotification = NotificationType((1, 3, 6, 1, 4, 1, 11536, 3, 6, 1)).setObjects(("CYBER-ARK-MIB", "osCpuUsage"), ("CYBER-ARK-MIB", "osCpuTrapState"))
if mibBuilder.loadTexts: osCpuUsageNotification.setStatus('current')
osEventLogInfoNotification = NotificationType((1, 3, 6, 1, 4, 1, 11536, 3, 6, 0)).setObjects(("CYBER-ARK-MIB", "osELName"), ("CYBER-ARK-MIB", "osELEventId"), ("CYBER-ARK-MIB", "osELTimeGenerated"), ("CYBER-ARK-MIB", "osELEventType"), ("CYBER-ARK-MIB", "osELEventSource"), ("CYBER-ARK-MIB", "osELComputerName"), ("CYBER-ARK-MIB", "osELEventDescription"))
if mibBuilder.loadTexts: osEventLogInfoNotification.setStatus('current')
osMemoryUsageNotification = NotificationType((1, 3, 6, 1, 4, 1, 11536, 3, 6, 2)).setObjects(("CYBER-ARK-MIB", "osMemoryTotalKbPhysical"), ("CYBER-ARK-MIB", "osMemoryAvailKbPhysical"), ("CYBER-ARK-MIB", "osMemoryTotalKbSwap"), ("CYBER-ARK-MIB", "osMemoryAvailKbSwap"), ("CYBER-ARK-MIB", "osMemoryTrapState"))
if mibBuilder.loadTexts: osMemoryUsageNotification.setStatus('current')
osSwapMemoryUsageNotification = NotificationType((1, 3, 6, 1, 4, 1, 11536, 3, 6, 5)).setObjects(("CYBER-ARK-MIB", "osMemoryTotalKbPhysical"), ("CYBER-ARK-MIB", "osMemoryAvailKbPhysical"), ("CYBER-ARK-MIB", "osMemoryTotalKbSwap"), ("CYBER-ARK-MIB", "osMemoryAvailKbSwap"), ("CYBER-ARK-MIB", "osMemoryTrapState"))
if mibBuilder.loadTexts: osSwapMemoryUsageNotification.setStatus('current')
osServiceNameNotification = NotificationType((1, 3, 6, 1, 4, 1, 11536, 3, 6, 4)).setObjects(("CYBER-ARK-MIB", "osServiceName"), ("CYBER-ARK-MIB", "osServiceStatus"), ("CYBER-ARK-MIB", "osServiceTrapState"))
if mibBuilder.loadTexts: osServiceNameNotification.setStatus('current')
paVaultLogInfoNotification = NotificationType((1, 3, 6, 1, 4, 1, 11536, 3, 6, 1000)).setObjects(("CYBER-ARK-MIB", "paVaultLogRecord"), ("CYBER-ARK-MIB", "paVaultLogSource"), ("CYBER-ARK-MIB", "paVaultLogName"))
if mibBuilder.loadTexts: paVaultLogInfoNotification.setStatus('current')
paVaultServiceNameNotification = NotificationType((1, 3, 6, 1, 4, 1, 11536, 3, 6, 1001)).setObjects(("CYBER-ARK-MIB", "osServiceName"), ("CYBER-ARK-MIB", "osServiceStatus"), ("CYBER-ARK-MIB", "osServiceTrapState"))
if mibBuilder.loadTexts: paVaultServiceNameNotification.setStatus('current')
paDRLogInfoNotification = NotificationType((1, 3, 6, 1, 4, 1, 11536, 3, 6, 5000)).setObjects(("CYBER-ARK-MIB", "paDRLogName"), ("CYBER-ARK-MIB", "paDRLogSource"), ("CYBER-ARK-MIB", "paDRLogRecord"))
if mibBuilder.loadTexts: paDRLogInfoNotification.setStatus('current')
osDRServiceNameNotification = NotificationType((1, 3, 6, 1, 4, 1, 11536, 3, 6, 5001)).setObjects(("CYBER-ARK-MIB", "osServiceName"), ("CYBER-ARK-MIB", "osServiceStatus"), ("CYBER-ARK-MIB", "osServiceTrapState"))
if mibBuilder.loadTexts: osDRServiceNameNotification.setStatus('current')
paCVMLogInfoNotification = NotificationType((1, 3, 6, 1, 4, 1, 11536, 3, 6, 6000)).setObjects(("CYBER-ARK-MIB", "paCVMLogName"), ("CYBER-ARK-MIB", "paCVMLogSource"), ("CYBER-ARK-MIB", "paCVMLogRecord"))
if mibBuilder.loadTexts: paCVMLogInfoNotification.setStatus('current')
osCVMServiceNameNotification = NotificationType((1, 3, 6, 1, 4, 1, 11536, 3, 6, 6001)).setObjects(("CYBER-ARK-MIB", "osServiceName"), ("CYBER-ARK-MIB", "osServiceStatus"), ("CYBER-ARK-MIB", "osServiceTrapState"))
if mibBuilder.loadTexts: osCVMServiceNameNotification.setStatus('current')
paCIFSLogInfoNotification = NotificationType((1, 3, 6, 1, 4, 1, 11536, 3, 6, 2000)).setObjects(("CYBER-ARK-MIB", "paCIFSLogRecord"), ("CYBER-ARK-MIB", "paCIFSLogSource"), ("CYBER-ARK-MIB", "paCIFSLogName"))
if mibBuilder.loadTexts: paCIFSLogInfoNotification.setStatus('current')
osCIFSServiceNameNotification = NotificationType((1, 3, 6, 1, 4, 1, 11536, 3, 6, 2001)).setObjects(("CYBER-ARK-MIB", "osServiceName"), ("CYBER-ARK-MIB", "osServiceStatus"))
if mibBuilder.loadTexts: osCIFSServiceNameNotification.setStatus('current')
paFTPLogInfoNotification = NotificationType((1, 3, 6, 1, 4, 1, 11536, 3, 6, 3000)).setObjects(("CYBER-ARK-MIB", "paFTPLogRecord"), ("CYBER-ARK-MIB", "paFTPLogSource"), ("CYBER-ARK-MIB", "paFTPLogName"))
if mibBuilder.loadTexts: paFTPLogInfoNotification.setStatus('current')
paSMTPLogInfoNotification = NotificationType((1, 3, 6, 1, 4, 1, 11536, 3, 6, 4000)).setObjects(("CYBER-ARK-MIB", "paSMTPLogRecord"), ("CYBER-ARK-MIB", "paSMTPLogSource"), ("CYBER-ARK-MIB", "paSMTPLogName"))
if mibBuilder.loadTexts: paSMTPLogInfoNotification.setStatus('current')
cyberArkTrapGroup0 = NotificationGroup((1, 3, 6, 1, 4, 1, 11536, 5)).setObjects(("CYBER-ARK-MIB", "osDiskFreeSpaceNotification"), ("CYBER-ARK-MIB", "osCpuUsageNotification"), ("CYBER-ARK-MIB", "osEventLogInfoNotification"), ("CYBER-ARK-MIB", "osMemoryUsageNotification"), ("CYBER-ARK-MIB", "osServiceNameNotification"), ("CYBER-ARK-MIB", "paVaultLogInfoNotification"), ("CYBER-ARK-MIB", "paVaultServiceNameNotification"), ("CYBER-ARK-MIB", "paDRLogInfoNotification"), ("CYBER-ARK-MIB", "osDRServiceNameNotification"), ("CYBER-ARK-MIB", "paCIFSLogInfoNotification"), ("CYBER-ARK-MIB", "osCIFSServiceNameNotification"), ("CYBER-ARK-MIB", "paFTPLogInfoNotification"), ("CYBER-ARK-MIB", "paSMTPLogInfoNotification"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cyberArkTrapGroup0 = cyberArkTrapGroup0.setStatus('current')
cyberArkTrapGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 11536, 6)).setObjects(("CYBER-ARK-MIB", "osDiskFreeSpaceNotification"), ("CYBER-ARK-MIB", "osCpuUsageNotification"), ("CYBER-ARK-MIB", "osEventLogInfoNotification"), ("CYBER-ARK-MIB", "osMemoryUsageNotification"), ("CYBER-ARK-MIB", "osServiceNameNotification"), ("CYBER-ARK-MIB", "paVaultLogInfoNotification"), ("CYBER-ARK-MIB", "paVaultServiceNameNotification"), ("CYBER-ARK-MIB", "paCVMLogInfoNotification"), ("CYBER-ARK-MIB", "osCVMServiceNameNotification"), ("CYBER-ARK-MIB", "paCIFSLogInfoNotification"), ("CYBER-ARK-MIB", "osCIFSServiceNameNotification"), ("CYBER-ARK-MIB", "paFTPLogInfoNotification"), ("CYBER-ARK-MIB", "paSMTPLogInfoNotification"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cyberArkTrapGroup = cyberArkTrapGroup.setStatus('current')
mibBuilder.exportSymbols("CYBER-ARK-MIB", cyberArkTrapGroup0=cyberArkTrapGroup0, osDiskFreeSpace=osDiskFreeSpace, cyberArkTrapPrefix=cyberArkTrapPrefix, osELEventSource=osELEventSource, paCIFSLogInfoNotification=paCIFSLogInfoNotification, paCIFSLogInfo=paCIFSLogInfo, osMemoryAvailKbSwap=osMemoryAvailKbSwap, paCIFSLogSource=paCIFSLogSource, osMemoryTrapState=osMemoryTrapState, paSMTPLogName=paSMTPLogName, osServiceStatus=osServiceStatus, paVaultInfo=paVaultInfo, osELName=osELName, paVaultLogSource=paVaultLogSource, osServiceName=osServiceName, paFTPLogRecord=paFTPLogRecord, paSMTPLogRecord=paSMTPLogRecord, paCVMLogInfoNotification=paCVMLogInfoNotification, cyberArkMIB=cyberArkMIB, paCVMLogInfo=paCVMLogInfo, paDRLogInfo=paDRLogInfo, osCpuUsageNotification=osCpuUsageNotification, paFTPLogInfo=paFTPLogInfo, osService=osService, paDRLogInfoNotification=paDRLogInfoNotification, cyberArkTrapGroup=cyberArkTrapGroup, paFTPLogSource=paFTPLogSource, osELComputerName=osELComputerName, paDRLogName=paDRLogName, osDiskTrapState=osDiskTrapState, osInfo=osInfo, paDRInfo=paDRInfo, PYSNMP_MODULE_ID=cyberArkMIB, paCIFSInfo=paCIFSInfo, osDiskDrive=osDiskDrive, osELTimeGenerated=osELTimeGenerated, paFTPInfo=paFTPInfo, paVaultLogName=paVaultLogName, osEventLogInfo=osEventLogInfo, paVaultServiceNameNotification=paVaultServiceNameNotification, osCpuUsage=osCpuUsage, paSMTPLogSource=paSMTPLogSource, paVaultLogInfoNotification=paVaultLogInfoNotification, paSMTPLogInfo=paSMTPLogInfo, paFTPLogInfoNotification=paFTPLogInfoNotification, paSMTPLogInfoNotification=paSMTPLogInfoNotification, osDRServiceNameNotification=osDRServiceNameNotification, paSMTPInfo=paSMTPInfo, osELEventId=osELEventId, paCIFSLogName=paCIFSLogName, osCpuTrapState=osCpuTrapState, osMemoryAvailKbPhysical=osMemoryAvailKbPhysical, osDiskUsage=osDiskUsage, osMemoryUsage=osMemoryUsage, paDRLogRecord=paDRLogRecord, osCVMServiceNameNotification=osCVMServiceNameNotification, paVaultLogInfo=paVaultLogInfo, paCVMLogName=paCVMLogName, paCVMLogSource=paCVMLogSource, osMemoryTotalKbPhysical=osMemoryTotalKbPhysical, osDiskPercentageFreeSpace=osDiskPercentageFreeSpace, osEventLogInfoNotification=osEventLogInfoNotification, osServiceNameNotification=osServiceNameNotification, paInfo=paInfo, osELEventType=osELEventType, osCIFSServiceNameNotification=osCIFSServiceNameNotification, osELEventDescription=osELEventDescription, cyberArkTraps=cyberArkTraps, paVaultLogRecord=paVaultLogRecord, osMemoryTotalKbSwap=osMemoryTotalKbSwap, osMemoryUsageNotification=osMemoryUsageNotification, paCIFSLogRecord=paCIFSLogRecord, paCVMLogRecord=paCVMLogRecord, osSwapMemoryUsageNotification=osSwapMemoryUsageNotification, paCVMInfo=paCVMInfo, paFTPLogName=paFTPLogName, paDRLogSource=paDRLogSource, osServiceTrapState=osServiceTrapState, osDiskFreeSpaceNotification=osDiskFreeSpaceNotification)
