#
# PySNMP MIB module CISCOSB-WBA-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CISCOSB-WBA-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 18:08:06 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ConstraintsUnion, SingleValueConstraint, ConstraintsIntersection, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ConstraintsUnion", "SingleValueConstraint", "ConstraintsIntersection", "ValueSizeConstraint")
switch001, = mibBuilder.importSymbols("CISCOSB-MIB", "switch001")
InetAddressIPv6, InetAddress, InetAddressType = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddressIPv6", "InetAddress", "InetAddressType")
SnmpAdminString, = mibBuilder.importSymbols("SNMP-FRAMEWORK-MIB", "SnmpAdminString")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Integer32, MibScalar, MibTable, MibTableRow, MibTableColumn, Unsigned32, Counter32, Gauge32, Counter64, NotificationType, IpAddress, MibIdentifier, ObjectIdentity, ModuleIdentity, iso, Bits, TimeTicks = mibBuilder.importSymbols("SNMPv2-SMI", "Integer32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Unsigned32", "Counter32", "Gauge32", "Counter64", "NotificationType", "IpAddress", "MibIdentifier", "ObjectIdentity", "ModuleIdentity", "iso", "Bits", "TimeTicks")
TextualConvention, DisplayString, MacAddress = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString", "MacAddress")
rlWBA = ModuleIdentity((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 228))
rlWBA.setRevisions(('2010-07-05 00:00',))
if mibBuilder.loadTexts: rlWBA.setLastUpdated('201007050000Z')
if mibBuilder.loadTexts: rlWBA.setOrganization('Cisco Small Business')
class RlWBAStatusType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6))
    namedValues = NamedValues(("unknown", 0), ("inProcess", 1), ("failAuthen", 2), ("pending", 3), ("authenticating", 4), ("authenticated", 5), ("waitAck", 6))

class RlWBARetryFlagOp(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1))
    namedValues = NamedValues(("off", 0), ("on", 1))

rlWBAAuxiliaryTable = MibTable((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 228, 1), )
if mibBuilder.loadTexts: rlWBAAuxiliaryTable.setStatus('current')
rlWBAAuxiliaryEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 228, 1, 1), ).setIndexNames((0, "CISCOSB-WBA-MIB", "rlWBAIp"))
if mibBuilder.loadTexts: rlWBAAuxiliaryEntry.setStatus('current')
rlWBAIp = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 228, 1, 1, 1), InetAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlWBAIp.setStatus('current')
rlWBAStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 228, 1, 1, 2), RlWBAStatusType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlWBAStatus.setStatus('current')
rlAuxFailReason = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 228, 1, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlAuxFailReason.setStatus('current')
rlIsRetryFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 228, 1, 1, 4), RlWBARetryFlagOp().clone('off')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlIsRetryFlag.setStatus('current')
rlWBAUsername = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 228, 1, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlWBAUsername.setStatus('current')
rlWBAPassword = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 228, 1, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlWBAPassword.setStatus('current')
rlWBAImageTable = MibTable((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 228, 2), )
if mibBuilder.loadTexts: rlWBAImageTable.setStatus('current')
rlWBAImageEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 228, 2, 1), ).setIndexNames((0, "CISCOSB-WBA-MIB", "rlWBAImageNumber"), (0, "CISCOSB-WBA-MIB", "rlWBAImageIndex"))
if mibBuilder.loadTexts: rlWBAImageEntry.setStatus('current')
rlWBAImageNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 228, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 10)))
if mibBuilder.loadTexts: rlWBAImageNumber.setStatus('current')
rlWBAImageIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 228, 2, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1000)))
if mibBuilder.loadTexts: rlWBAImageIndex.setStatus('current')
rlWBAImageText = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 228, 2, 1, 3), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlWBAImageText.setStatus('current')
rlWBADataTable = MibTable((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 228, 3), )
if mibBuilder.loadTexts: rlWBADataTable.setStatus('current')
rlWBADataEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 228, 3, 1), ).setIndexNames((0, "CISCOSB-WBA-MIB", "rlWBADataNumber"), (0, "CISCOSB-WBA-MIB", "rlWBADataIndex"))
if mibBuilder.loadTexts: rlWBADataEntry.setStatus('current')
rlWBADataNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 228, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 10)))
if mibBuilder.loadTexts: rlWBADataNumber.setStatus('current')
rlWBADataIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 228, 3, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1000)))
if mibBuilder.loadTexts: rlWBADataIndex.setStatus('current')
rlWBADataText = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 228, 3, 1, 3), SnmpAdminString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlWBADataText.setStatus('current')
rlWBAImageInfoTable = MibTable((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 228, 4), )
if mibBuilder.loadTexts: rlWBAImageInfoTable.setStatus('current')
rlWBAImageInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 228, 4, 1), ).setIndexNames((0, "CISCOSB-WBA-MIB", "rlWBAImageInfoNumber"))
if mibBuilder.loadTexts: rlWBAImageInfoEntry.setStatus('current')
rlWBAImageInfoNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 228, 4, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 10)))
if mibBuilder.loadTexts: rlWBAImageInfoNumber.setStatus('current')
rlWBAImageInfoName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 228, 4, 1, 2), SnmpAdminString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlWBAImageInfoName.setStatus('current')
rlWBAImageInfoSize = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 228, 4, 1, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlWBAImageInfoSize.setStatus('current')
rlWBAImageClear = MibScalar((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 228, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlWBAImageClear.setStatus('current')
rlWBADataClear = MibScalar((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 228, 6), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlWBADataClear.setStatus('current')
rlWBAImageDownloadFinishStatus = MibScalar((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 228, 7), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlWBAImageDownloadFinishStatus.setStatus('current')
mibBuilder.exportSymbols("CISCOSB-WBA-MIB", rlWBAAuxiliaryEntry=rlWBAAuxiliaryEntry, rlWBADataNumber=rlWBADataNumber, rlWBA=rlWBA, rlWBAImageInfoTable=rlWBAImageInfoTable, rlWBAImageTable=rlWBAImageTable, rlWBAPassword=rlWBAPassword, rlWBAImageEntry=rlWBAImageEntry, rlIsRetryFlag=rlIsRetryFlag, rlWBAStatus=rlWBAStatus, rlWBAImageInfoEntry=rlWBAImageInfoEntry, rlWBAImageText=rlWBAImageText, rlWBADataIndex=rlWBADataIndex, rlWBAImageInfoSize=rlWBAImageInfoSize, rlWBAIp=rlWBAIp, rlWBADataClear=rlWBADataClear, rlAuxFailReason=rlAuxFailReason, RlWBARetryFlagOp=RlWBARetryFlagOp, PYSNMP_MODULE_ID=rlWBA, rlWBAImageInfoNumber=rlWBAImageInfoNumber, rlWBAImageClear=rlWBAImageClear, rlWBADataEntry=rlWBADataEntry, rlWBAUsername=rlWBAUsername, rlWBAAuxiliaryTable=rlWBAAuxiliaryTable, RlWBAStatusType=RlWBAStatusType, rlWBAImageNumber=rlWBAImageNumber, rlWBAImageIndex=rlWBAImageIndex, rlWBADataTable=rlWBADataTable, rlWBADataText=rlWBADataText, rlWBAImageDownloadFinishStatus=rlWBAImageDownloadFinishStatus, rlWBAImageInfoName=rlWBAImageInfoName)
