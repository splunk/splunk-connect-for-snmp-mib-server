#
# PySNMP MIB module A3COM-HUAWEI-LswMSTP-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/A3COM-HUAWEI-LswMSTP-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 16:51:07 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
lswCommon, = mibBuilder.importSymbols("A3COM-HUAWEI-OID-MIB", "lswCommon")
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ValueRangeConstraint, ValueSizeConstraint, SingleValueConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ValueRangeConstraint", "ValueSizeConstraint", "SingleValueConstraint", "ConstraintsUnion")
dot1dStpPort, dot1dStpPortEntry = mibBuilder.importSymbols("BRIDGE-MIB", "dot1dStpPort", "dot1dStpPortEntry")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
ObjectIdentity, NotificationType, IpAddress, Counter32, Bits, Counter64, Unsigned32, Gauge32, ModuleIdentity, iso, Integer32, TimeTicks, MibIdentifier, MibScalar, MibTable, MibTableRow, MibTableColumn = mibBuilder.importSymbols("SNMPv2-SMI", "ObjectIdentity", "NotificationType", "IpAddress", "Counter32", "Bits", "Counter64", "Unsigned32", "Gauge32", "ModuleIdentity", "iso", "Integer32", "TimeTicks", "MibIdentifier", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn")
DisplayString, TextualConvention, TruthValue = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention", "TruthValue")
hwdot1sMstp = ModuleIdentity((1, 3, 6, 1, 4, 1, 43, 45, 1, 2, 23, 1, 14))
hwdot1sMstp.setRevisions(('2001-06-29 00:00',))
if mibBuilder.loadTexts: hwdot1sMstp.setLastUpdated('200106290000Z')
if mibBuilder.loadTexts: hwdot1sMstp.setOrganization('')
class EnabledStatus(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("enabled", 1), ("disabled", 2))

class BridgeId(OctetString):
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(8, 8)
    fixedLength = 8

class Hwdot1sFormatStatus(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3))
    namedValues = NamedValues(("legacy", 1), ("dot1s", 2), ("auto", 3))

hwdot1sStpStatus = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 2, 23, 1, 14, 1), EnabledStatus().clone(2)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwdot1sStpStatus.setStatus('current')
hwdot1sStpForceVersion = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 2, 23, 1, 14, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 2, 3))).clone(namedValues=NamedValues(("stp", 0), ("rstp", 2), ("mstp", 3))).clone('mstp')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwdot1sStpForceVersion.setStatus('current')
hwdot1sStpDiameter = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 2, 23, 1, 14, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(2, 7)).clone(7)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwdot1sStpDiameter.setStatus('current')
hwdot1sMstBridgeMaxHops = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 2, 23, 1, 14, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 40)).clone(20)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwdot1sMstBridgeMaxHops.setStatus('current')
hwdot1sMstMasterBridgeID = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 2, 23, 1, 14, 5), BridgeId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwdot1sMstMasterBridgeID.setStatus('current')
hwdot1sMstMasterPathCost = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 2, 23, 1, 14, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwdot1sMstMasterPathCost.setStatus('current')
hwdot1sMstBpduGuard = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 2, 23, 1, 14, 7), EnabledStatus().clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwdot1sMstBpduGuard.setStatus('current')
hwdot1sMstAdminFormatSelector = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 2, 23, 1, 14, 8), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwdot1sMstAdminFormatSelector.setStatus('current')
hwdot1sMstAdminRegionName = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 2, 23, 1, 14, 9), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwdot1sMstAdminRegionName.setStatus('current')
hwdot1sMstAdminRevisionLevel = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 2, 23, 1, 14, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwdot1sMstAdminRevisionLevel.setStatus('current')
hwdot1sMstOperFormatSelector = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 2, 23, 1, 14, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwdot1sMstOperFormatSelector.setStatus('current')
hwdot1sMstOperRegionName = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 2, 23, 1, 14, 12), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwdot1sMstOperRegionName.setStatus('current')
hwdot1sMstOperRevisionLevel = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 2, 23, 1, 14, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwdot1sMstOperRevisionLevel.setStatus('current')
hwdot1sMstOperConfigDigest = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 2, 23, 1, 14, 14), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwdot1sMstOperConfigDigest.setStatus('current')
hwdot1sMstRegionConfActive = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 2, 23, 1, 14, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwdot1sMstRegionConfActive.setStatus('current')
hwdot1sMstDefaultVlanAllo = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 2, 23, 1, 14, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 65535))).clone(namedValues=NamedValues(("enable", 1), ("unused", 65535)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwdot1sMstDefaultVlanAllo.setStatus('current')
hwdot1sMstDefaultRegionName = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 2, 23, 1, 14, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 65535))).clone(namedValues=NamedValues(("enable", 1), ("unused", 65535)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwdot1sMstDefaultRegionName.setStatus('current')
hwdot1sVIDAllocationTable = MibTable((1, 3, 6, 1, 4, 1, 43, 45, 1, 2, 23, 1, 14, 18), )
if mibBuilder.loadTexts: hwdot1sVIDAllocationTable.setStatus('current')
hwdot1sVIDAllocationEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 45, 1, 2, 23, 1, 14, 18, 1), ).setIndexNames((0, "A3COM-HUAWEI-LswMSTP-MIB", "hwdot1sMstVID"))
if mibBuilder.loadTexts: hwdot1sVIDAllocationEntry.setStatus('current')
hwdot1sMstVID = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 2, 23, 1, 14, 18, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4094))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwdot1sMstVID.setStatus('current')
hwdot1sAdminMstID = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 2, 23, 1, 14, 18, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4094))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwdot1sAdminMstID.setStatus('current')
hwdot1sOperMstID = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 2, 23, 1, 14, 18, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4094))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwdot1sOperMstID.setStatus('current')
hwdot1sInstanceTable = MibTable((1, 3, 6, 1, 4, 1, 43, 45, 1, 2, 23, 1, 14, 19), )
if mibBuilder.loadTexts: hwdot1sInstanceTable.setStatus('current')
hwdot1sInstanceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 45, 1, 2, 23, 1, 14, 19, 1), ).setIndexNames((0, "A3COM-HUAWEI-LswMSTP-MIB", "hwdot1sInstanceID"))
if mibBuilder.loadTexts: hwdot1sInstanceEntry.setStatus('current')
hwdot1sInstanceID = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 2, 23, 1, 14, 19, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4094))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwdot1sInstanceID.setStatus('current')
hwdot1sMstiBridgeID = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 2, 23, 1, 14, 19, 1, 2), BridgeId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwdot1sMstiBridgeID.setStatus('current')
hwdot1sMstiBridgePriority = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 2, 23, 1, 14, 19, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 61440)).clone(32768)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwdot1sMstiBridgePriority.setStatus('current')
hwdot1sMstiDesignedRoot = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 2, 23, 1, 14, 19, 1, 4), BridgeId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwdot1sMstiDesignedRoot.setStatus('current')
hwdot1sMstiRootPathCost = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 2, 23, 1, 14, 19, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwdot1sMstiRootPathCost.setStatus('current')
hwdot1sMstiRootPort = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 2, 23, 1, 14, 19, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwdot1sMstiRootPort.setStatus('current')
hwdot1sMstiRootType = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 2, 23, 1, 14, 19, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("normal", 0), ("secondary", 1), ("primary", 2))).clone('normal')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwdot1sMstiRootType.setStatus('current')
hwdot1sMstiRemainingHops = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 2, 23, 1, 14, 19, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwdot1sMstiRemainingHops.setStatus('current')
hwdot1sMstiAdminMappedVlanListLow = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 2, 23, 1, 14, 19, 1, 9), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwdot1sMstiAdminMappedVlanListLow.setStatus('current')
hwdot1sMstiAdminMappedVlanListHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 2, 23, 1, 14, 19, 1, 10), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwdot1sMstiAdminMappedVlanListHigh.setStatus('current')
hwdot1sMstiOperMappedVlanListLow = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 2, 23, 1, 14, 19, 1, 11), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwdot1sMstiOperMappedVlanListLow.setStatus('current')
hwdot1sMstiOperMappedVlanListHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 2, 23, 1, 14, 19, 1, 12), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwdot1sMstiOperMappedVlanListHigh.setStatus('current')
hwdot1sPortTable = MibTable((1, 3, 6, 1, 4, 1, 43, 45, 1, 2, 23, 1, 14, 20), )
if mibBuilder.loadTexts: hwdot1sPortTable.setStatus('current')
hwdot1sPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 45, 1, 2, 23, 1, 14, 20, 1), ).setIndexNames((0, "A3COM-HUAWEI-LswMSTP-MIB", "hwdot1sInstanceID"), (0, "A3COM-HUAWEI-LswMSTP-MIB", "hwdot1sMstiPortIndex"))
if mibBuilder.loadTexts: hwdot1sPortEntry.setStatus('current')
hwdot1sMstiPortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 2, 23, 1, 14, 20, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwdot1sMstiPortIndex.setStatus('current')
hwdot1sMstiState = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 2, 23, 1, 14, 20, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 4, 5))).clone(namedValues=NamedValues(("disabled", 1), ("discarding", 2), ("learning", 4), ("forwarding", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwdot1sMstiState.setStatus('current')
hwdot1sMstiPortPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 2, 23, 1, 14, 20, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 240)).clone(128)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwdot1sMstiPortPriority.setStatus('current')
hwdot1sMstiPathCost = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 2, 23, 1, 14, 20, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 200000000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwdot1sMstiPathCost.setStatus('current')
hwdot1sMstiDesignatedRoot = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 2, 23, 1, 14, 20, 1, 5), BridgeId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwdot1sMstiDesignatedRoot.setStatus('current')
hwdot1sMstiDesignatedCost = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 2, 23, 1, 14, 20, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwdot1sMstiDesignatedCost.setStatus('current')
hwdot1sMstiDesignatedBridge = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 2, 23, 1, 14, 20, 1, 7), BridgeId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwdot1sMstiDesignatedBridge.setStatus('current')
hwdot1sMstiDesignatedPort = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 2, 23, 1, 14, 20, 1, 8), OctetString().subtype(subtypeSpec=ValueSizeConstraint(2, 2)).setFixedLength(2)).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwdot1sMstiDesignatedPort.setStatus('current')
hwdot1sMstiMasterBridgeID = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 2, 23, 1, 14, 20, 1, 9), BridgeId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwdot1sMstiMasterBridgeID.setStatus('current')
hwdot1sMstiMasterPortCost = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 2, 23, 1, 14, 20, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwdot1sMstiMasterPortCost.setStatus('current')
hwdot1sMstiStpPortEdgeport = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 2, 23, 1, 14, 20, 1, 11), EnabledStatus().clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwdot1sMstiStpPortEdgeport.setStatus('current')
hwdot1sMstiStpPortPointToPoint = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 2, 23, 1, 14, 20, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("forceTrue", 1), ("forceFalse", 2), ("auto", 3))).clone('auto')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwdot1sMstiStpPortPointToPoint.setStatus('current')
hwdot1sMstiStpMcheck = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 2, 23, 1, 14, 20, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 65535))).clone(namedValues=NamedValues(("enable", 1), ("unused", 65535)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwdot1sMstiStpMcheck.setStatus('current')
hwdot1sMstiStpTransLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 2, 23, 1, 14, 20, 1, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwdot1sMstiStpTransLimit.setStatus('current')
hwdot1sMstiStpRXStpBPDU = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 2, 23, 1, 14, 20, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwdot1sMstiStpRXStpBPDU.setStatus('current')
hwdot1sMstiStpTXStpBPDU = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 2, 23, 1, 14, 20, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwdot1sMstiStpTXStpBPDU.setStatus('current')
hwdot1sMstiStpRXTCNBPDU = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 2, 23, 1, 14, 20, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwdot1sMstiStpRXTCNBPDU.setStatus('current')
hwdot1sMstiStpTXTCNBPDU = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 2, 23, 1, 14, 20, 1, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwdot1sMstiStpTXTCNBPDU.setStatus('current')
hwdot1sMstiStpRXRSTPBPDU = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 2, 23, 1, 14, 20, 1, 19), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwdot1sMstiStpRXRSTPBPDU.setStatus('current')
hwdot1sMstiStpTXRSTPBPDU = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 2, 23, 1, 14, 20, 1, 20), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwdot1sMstiStpTXRSTPBPDU.setStatus('current')
hwdot1sMstiStpRXMSTPBPDU = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 2, 23, 1, 14, 20, 1, 21), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwdot1sMstiStpRXMSTPBPDU.setStatus('current')
hwdot1sMstiStpTXMSTPBPDU = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 2, 23, 1, 14, 20, 1, 22), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwdot1sMstiStpTXMSTPBPDU.setStatus('current')
hwdot1sMstiStpClearStatistics = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 2, 23, 1, 14, 20, 1, 23), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 65535))).clone(namedValues=NamedValues(("clear", 1), ("unused", 65535)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwdot1sMstiStpClearStatistics.setStatus('current')
hwdot1sMstiStpDefaultPortCost = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 2, 23, 1, 14, 20, 1, 24), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 65535))).clone(namedValues=NamedValues(("enable", 1), ("unused", 65535)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwdot1sMstiStpDefaultPortCost.setStatus('current')
hwdot1sMstiStpStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 2, 23, 1, 14, 20, 1, 25), EnabledStatus().clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwdot1sMstiStpStatus.setStatus('current')
hwdot1sMstiPortRootGuard = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 2, 23, 1, 14, 20, 1, 26), EnabledStatus().clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwdot1sMstiPortRootGuard.setStatus('current')
hwdot1sMstiPortLoopGuard = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 2, 23, 1, 14, 20, 1, 27), EnabledStatus().clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwdot1sMstiPortLoopGuard.setStatus('current')
hwdot1sMstiStpPortSendingBPDUType = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 2, 23, 1, 14, 20, 1, 28), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("stp", 1), ("rstp", 2), ("mstp", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwdot1sMstiStpPortSendingBPDUType.setStatus('current')
hwdot1sMstiStpOperPortPointToPoint = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 2, 23, 1, 14, 20, 1, 29), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("true", 1), ("false", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwdot1sMstiStpOperPortPointToPoint.setStatus('current')
hwdot1sMstiStpPortAdminBPDUFmt = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 2, 23, 1, 14, 20, 1, 30), Hwdot1sFormatStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwdot1sMstiStpPortAdminBPDUFmt.setStatus('current')
hwdot1sMstiStpPortOperBPDUFmt = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 2, 23, 1, 14, 20, 1, 31), Hwdot1sFormatStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwdot1sMstiStpPortOperBPDUFmt.setStatus('current')
hwdot1sMstiStpPortRoleRestriction = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 2, 23, 1, 14, 20, 1, 32), EnabledStatus().clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwdot1sMstiStpPortRoleRestriction.setStatus('current')
hwdot1sMstiStpPortTcRestriction = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 2, 23, 1, 14, 20, 1, 33), EnabledStatus().clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwdot1sMstiStpPortTcRestriction.setStatus('current')
hwdot1sMstiStpPortDisputed = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 2, 23, 1, 14, 20, 1, 34), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwdot1sMstiStpPortDisputed.setStatus('current')
hwdot1sStpPathCostStandard = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 2, 23, 1, 14, 21), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("legacy", 0), ("dot1d-1998", 1), ("dot1t", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwdot1sStpPathCostStandard.setStatus('current')
hwMstpEventsV2 = ObjectIdentity((1, 3, 6, 1, 4, 1, 43, 45, 1, 2, 23, 1, 14, 0))
if mibBuilder.loadTexts: hwMstpEventsV2.setStatus('current')
hwPortMstiStateForwarding = NotificationType((1, 3, 6, 1, 4, 1, 43, 45, 1, 2, 23, 1, 14, 0, 1)).setObjects(("A3COM-HUAWEI-LswMSTP-MIB", "hwdot1sInstanceID"), ("A3COM-HUAWEI-LswMSTP-MIB", "hwdot1sMstiPortIndex"))
if mibBuilder.loadTexts: hwPortMstiStateForwarding.setStatus('current')
hwPortMstiStateDiscarding = NotificationType((1, 3, 6, 1, 4, 1, 43, 45, 1, 2, 23, 1, 14, 0, 2)).setObjects(("A3COM-HUAWEI-LswMSTP-MIB", "hwdot1sInstanceID"), ("A3COM-HUAWEI-LswMSTP-MIB", "hwdot1sMstiPortIndex"))
if mibBuilder.loadTexts: hwPortMstiStateDiscarding.setStatus('current')
hwBridgeLostRootPrimary = NotificationType((1, 3, 6, 1, 4, 1, 43, 45, 1, 2, 23, 1, 14, 0, 3)).setObjects(("A3COM-HUAWEI-LswMSTP-MIB", "hwdot1sInstanceID"))
if mibBuilder.loadTexts: hwBridgeLostRootPrimary.setStatus('current')
hwPortMstiRootGuarded = NotificationType((1, 3, 6, 1, 4, 1, 43, 45, 1, 2, 23, 1, 14, 0, 4)).setObjects(("A3COM-HUAWEI-LswMSTP-MIB", "hwdot1sInstanceID"), ("A3COM-HUAWEI-LswMSTP-MIB", "hwdot1sMstiPortIndex"))
if mibBuilder.loadTexts: hwPortMstiRootGuarded.setStatus('current')
hwPortMstiBpduGuarded = NotificationType((1, 3, 6, 1, 4, 1, 43, 45, 1, 2, 23, 1, 14, 0, 5)).setObjects(("BRIDGE-MIB", "dot1dStpPort"))
if mibBuilder.loadTexts: hwPortMstiBpduGuarded.setStatus('current')
hwPortMstiLoopGuarded = NotificationType((1, 3, 6, 1, 4, 1, 43, 45, 1, 2, 23, 1, 14, 0, 6)).setObjects(("A3COM-HUAWEI-LswMSTP-MIB", "hwdot1sInstanceID"), ("A3COM-HUAWEI-LswMSTP-MIB", "hwdot1sMstiPortIndex"))
if mibBuilder.loadTexts: hwPortMstiLoopGuarded.setStatus('current')
mibBuilder.exportSymbols("A3COM-HUAWEI-LswMSTP-MIB", hwdot1sVIDAllocationTable=hwdot1sVIDAllocationTable, hwdot1sMstiStpTXTCNBPDU=hwdot1sMstiStpTXTCNBPDU, hwdot1sMstBpduGuard=hwdot1sMstBpduGuard, hwdot1sMstiStpRXRSTPBPDU=hwdot1sMstiStpRXRSTPBPDU, hwdot1sMstOperFormatSelector=hwdot1sMstOperFormatSelector, hwdot1sMstp=hwdot1sMstp, hwdot1sMstiBridgeID=hwdot1sMstiBridgeID, hwdot1sMstAdminFormatSelector=hwdot1sMstAdminFormatSelector, hwPortMstiRootGuarded=hwPortMstiRootGuarded, hwdot1sInstanceEntry=hwdot1sInstanceEntry, hwdot1sMstiStpClearStatistics=hwdot1sMstiStpClearStatistics, hwdot1sStpDiameter=hwdot1sStpDiameter, hwdot1sMstiStpRXMSTPBPDU=hwdot1sMstiStpRXMSTPBPDU, hwdot1sMstiStpOperPortPointToPoint=hwdot1sMstiStpOperPortPointToPoint, hwdot1sMstDefaultRegionName=hwdot1sMstDefaultRegionName, hwdot1sMstiDesignatedPort=hwdot1sMstiDesignatedPort, BridgeId=BridgeId, hwdot1sMstiDesignedRoot=hwdot1sMstiDesignedRoot, hwdot1sPortTable=hwdot1sPortTable, hwdot1sMstiDesignatedBridge=hwdot1sMstiDesignatedBridge, Hwdot1sFormatStatus=Hwdot1sFormatStatus, hwdot1sMstiRootPort=hwdot1sMstiRootPort, hwdot1sMstiRemainingHops=hwdot1sMstiRemainingHops, hwdot1sMstDefaultVlanAllo=hwdot1sMstDefaultVlanAllo, hwdot1sMstiStpPortAdminBPDUFmt=hwdot1sMstiStpPortAdminBPDUFmt, hwdot1sMstiPathCost=hwdot1sMstiPathCost, hwMstpEventsV2=hwMstpEventsV2, hwdot1sMstMasterPathCost=hwdot1sMstMasterPathCost, hwdot1sMstiStpPortEdgeport=hwdot1sMstiStpPortEdgeport, hwdot1sMstiStpRXStpBPDU=hwdot1sMstiStpRXStpBPDU, hwdot1sMstiStpPortSendingBPDUType=hwdot1sMstiStpPortSendingBPDUType, hwdot1sStpPathCostStandard=hwdot1sStpPathCostStandard, hwdot1sOperMstID=hwdot1sOperMstID, hwdot1sMstiDesignatedRoot=hwdot1sMstiDesignatedRoot, hwdot1sMstiStpPortPointToPoint=hwdot1sMstiStpPortPointToPoint, hwdot1sMstiStpDefaultPortCost=hwdot1sMstiStpDefaultPortCost, hwPortMstiBpduGuarded=hwPortMstiBpduGuarded, hwdot1sMstiAdminMappedVlanListLow=hwdot1sMstiAdminMappedVlanListLow, hwdot1sPortEntry=hwdot1sPortEntry, hwdot1sMstiStpPortTcRestriction=hwdot1sMstiStpPortTcRestriction, hwdot1sAdminMstID=hwdot1sAdminMstID, hwdot1sMstiPortRootGuard=hwdot1sMstiPortRootGuard, hwdot1sMstVID=hwdot1sMstVID, hwdot1sMstiStpRXTCNBPDU=hwdot1sMstiStpRXTCNBPDU, hwdot1sMstiBridgePriority=hwdot1sMstiBridgePriority, hwdot1sMstiMasterBridgeID=hwdot1sMstiMasterBridgeID, hwdot1sMstiPortLoopGuard=hwdot1sMstiPortLoopGuard, hwdot1sVIDAllocationEntry=hwdot1sVIDAllocationEntry, hwPortMstiStateForwarding=hwPortMstiStateForwarding, hwdot1sMstiStpPortOperBPDUFmt=hwdot1sMstiStpPortOperBPDUFmt, hwdot1sMstiDesignatedCost=hwdot1sMstiDesignatedCost, hwdot1sMstiOperMappedVlanListHigh=hwdot1sMstiOperMappedVlanListHigh, hwPortMstiStateDiscarding=hwPortMstiStateDiscarding, hwdot1sStpForceVersion=hwdot1sStpForceVersion, hwdot1sMstiOperMappedVlanListLow=hwdot1sMstiOperMappedVlanListLow, hwdot1sStpStatus=hwdot1sStpStatus, hwdot1sInstanceTable=hwdot1sInstanceTable, hwdot1sMstiRootPathCost=hwdot1sMstiRootPathCost, hwdot1sMstOperRevisionLevel=hwdot1sMstOperRevisionLevel, hwdot1sMstiStpTransLimit=hwdot1sMstiStpTransLimit, hwdot1sMstMasterBridgeID=hwdot1sMstMasterBridgeID, hwdot1sMstiStpMcheck=hwdot1sMstiStpMcheck, hwdot1sMstAdminRegionName=hwdot1sMstAdminRegionName, hwPortMstiLoopGuarded=hwPortMstiLoopGuarded, hwdot1sMstAdminRevisionLevel=hwdot1sMstAdminRevisionLevel, hwdot1sMstiStpPortRoleRestriction=hwdot1sMstiStpPortRoleRestriction, hwdot1sInstanceID=hwdot1sInstanceID, hwdot1sMstiMasterPortCost=hwdot1sMstiMasterPortCost, hwdot1sMstiStpTXRSTPBPDU=hwdot1sMstiStpTXRSTPBPDU, hwdot1sMstRegionConfActive=hwdot1sMstRegionConfActive, hwdot1sMstiPortPriority=hwdot1sMstiPortPriority, hwdot1sMstiRootType=hwdot1sMstiRootType, hwdot1sMstiStpTXStpBPDU=hwdot1sMstiStpTXStpBPDU, hwdot1sMstiStpPortDisputed=hwdot1sMstiStpPortDisputed, hwdot1sMstOperRegionName=hwdot1sMstOperRegionName, hwdot1sMstBridgeMaxHops=hwdot1sMstBridgeMaxHops, hwdot1sMstiPortIndex=hwdot1sMstiPortIndex, hwdot1sMstiState=hwdot1sMstiState, hwdot1sMstOperConfigDigest=hwdot1sMstOperConfigDigest, PYSNMP_MODULE_ID=hwdot1sMstp, hwdot1sMstiAdminMappedVlanListHigh=hwdot1sMstiAdminMappedVlanListHigh, hwdot1sMstiStpStatus=hwdot1sMstiStpStatus, hwdot1sMstiStpTXMSTPBPDU=hwdot1sMstiStpTXMSTPBPDU, hwBridgeLostRootPrimary=hwBridgeLostRootPrimary, EnabledStatus=EnabledStatus)
