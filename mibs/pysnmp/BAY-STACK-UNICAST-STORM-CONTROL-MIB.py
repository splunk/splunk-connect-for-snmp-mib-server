#
# PySNMP MIB module BAY-STACK-UNICAST-STORM-CONTROL-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/BAY-STACK-UNICAST-STORM-CONTROL-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:19:32 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ValueRangeConstraint, SingleValueConstraint, ConstraintsUnion, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ValueRangeConstraint", "SingleValueConstraint", "ConstraintsUnion", "ConstraintsIntersection")
InterfaceIndex, ifIndex = mibBuilder.importSymbols("IF-MIB", "InterfaceIndex", "ifIndex")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
MibScalar, MibTable, MibTableRow, MibTableColumn, iso, Integer32, Gauge32, Bits, Unsigned32, ModuleIdentity, ObjectIdentity, IpAddress, NotificationType, Counter32, TimeTicks, MibIdentifier, Counter64 = mibBuilder.importSymbols("SNMPv2-SMI", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "iso", "Integer32", "Gauge32", "Bits", "Unsigned32", "ModuleIdentity", "ObjectIdentity", "IpAddress", "NotificationType", "Counter32", "TimeTicks", "MibIdentifier", "Counter64")
DisplayString, TextualConvention, TimeInterval, TruthValue = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention", "TimeInterval", "TruthValue")
bayStackMibs, = mibBuilder.importSymbols("SYNOPTICS-ROOT-MIB", "bayStackMibs")
bayStackUnicastStormControlMib = ModuleIdentity((1, 3, 6, 1, 4, 1, 45, 5, 22))
bayStackUnicastStormControlMib.setRevisions(('2007-06-07 00:00',))
if mibBuilder.loadTexts: bayStackUnicastStormControlMib.setLastUpdated('200706070000Z')
if mibBuilder.loadTexts: bayStackUnicastStormControlMib.setOrganization('Nortel Ltd.')
bsUnicastStormControlNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 45, 5, 22, 0))
bsUnicastStormControlObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 45, 5, 22, 1))
bsUnicastStormControlScalars = MibIdentifier((1, 3, 6, 1, 4, 1, 45, 5, 22, 1, 1))
bsUnicastStormControlEnabled = MibScalar((1, 3, 6, 1, 4, 1, 45, 5, 22, 1, 1, 1), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bsUnicastStormControlEnabled.setStatus('current')
bsUnicastStormControlLowWatermark = MibScalar((1, 3, 6, 1, 4, 1, 45, 5, 22, 1, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(10, 100000000)).clone(200)).setUnits('packets per second').setMaxAccess("readwrite")
if mibBuilder.loadTexts: bsUnicastStormControlLowWatermark.setStatus('current')
bsUnicastStormControlHighWatermark = MibScalar((1, 3, 6, 1, 4, 1, 45, 5, 22, 1, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(10, 100000000)).clone(500)).setUnits('packets per second').setMaxAccess("readwrite")
if mibBuilder.loadTexts: bsUnicastStormControlHighWatermark.setStatus('current')
bsUnicastStormControlPollInterval = MibScalar((1, 3, 6, 1, 4, 1, 45, 5, 22, 1, 1, 4), TimeInterval().subtype(subtypeSpec=ValueRangeConstraint(500, 30000)).clone(3000)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bsUnicastStormControlPollInterval.setStatus('current')
bsUnicastStormControlTrapInterval = MibScalar((1, 3, 6, 1, 4, 1, 45, 5, 22, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1000)).clone(5)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bsUnicastStormControlTrapInterval.setStatus('current')
bsUnicastStormControlPollValue = MibScalar((1, 3, 6, 1, 4, 1, 45, 5, 22, 1, 1, 6), Unsigned32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: bsUnicastStormControlPollValue.setStatus('current')
bsUnicastStormControlIfTable = MibTable((1, 3, 6, 1, 4, 1, 45, 5, 22, 1, 2), )
if mibBuilder.loadTexts: bsUnicastStormControlIfTable.setStatus('current')
bsUnicastStormControlIfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 45, 5, 22, 1, 2, 1), ).setIndexNames((0, "BAY-STACK-UNICAST-STORM-CONTROL-MIB", "bsUnicastStormControlIfIndex"))
if mibBuilder.loadTexts: bsUnicastStormControlIfEntry.setStatus('current')
bsUnicastStormControlIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 5, 22, 1, 2, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: bsUnicastStormControlIfIndex.setStatus('current')
bsUnicastStormControlIfEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 5, 22, 1, 2, 1, 2), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bsUnicastStormControlIfEnabled.setStatus('current')
bsUnicastStormControlBelowLowWatermark = NotificationType((1, 3, 6, 1, 4, 1, 45, 5, 22, 0, 1)).setObjects(("IF-MIB", "ifIndex"), ("BAY-STACK-UNICAST-STORM-CONTROL-MIB", "bsUnicastStormControlPollValue"), ("BAY-STACK-UNICAST-STORM-CONTROL-MIB", "bsUnicastStormControlLowWatermark"))
if mibBuilder.loadTexts: bsUnicastStormControlBelowLowWatermark.setStatus('current')
bsUnicastStormControlAboveHighWatermark = NotificationType((1, 3, 6, 1, 4, 1, 45, 5, 22, 0, 2)).setObjects(("IF-MIB", "ifIndex"), ("BAY-STACK-UNICAST-STORM-CONTROL-MIB", "bsUnicastStormControlPollValue"), ("BAY-STACK-UNICAST-STORM-CONTROL-MIB", "bsUnicastStormControlHighWatermark"))
if mibBuilder.loadTexts: bsUnicastStormControlAboveHighWatermark.setStatus('current')
mibBuilder.exportSymbols("BAY-STACK-UNICAST-STORM-CONTROL-MIB", bsUnicastStormControlAboveHighWatermark=bsUnicastStormControlAboveHighWatermark, bsUnicastStormControlNotifications=bsUnicastStormControlNotifications, bsUnicastStormControlIfTable=bsUnicastStormControlIfTable, bsUnicastStormControlTrapInterval=bsUnicastStormControlTrapInterval, bsUnicastStormControlEnabled=bsUnicastStormControlEnabled, bsUnicastStormControlLowWatermark=bsUnicastStormControlLowWatermark, bsUnicastStormControlIfIndex=bsUnicastStormControlIfIndex, bsUnicastStormControlIfEnabled=bsUnicastStormControlIfEnabled, bsUnicastStormControlScalars=bsUnicastStormControlScalars, PYSNMP_MODULE_ID=bayStackUnicastStormControlMib, bsUnicastStormControlPollValue=bsUnicastStormControlPollValue, bsUnicastStormControlPollInterval=bsUnicastStormControlPollInterval, bsUnicastStormControlIfEntry=bsUnicastStormControlIfEntry, bsUnicastStormControlObjects=bsUnicastStormControlObjects, bsUnicastStormControlHighWatermark=bsUnicastStormControlHighWatermark, bsUnicastStormControlBelowLowWatermark=bsUnicastStormControlBelowLowWatermark, bayStackUnicastStormControlMib=bayStackUnicastStormControlMib)
