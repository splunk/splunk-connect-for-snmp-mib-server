#
# PySNMP MIB module WLSX-CTS-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/WLSX-CTS-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 21:29:51 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
wlsxEnterpriseMibModules, = mibBuilder.importSymbols("ARUBA-MIB", "wlsxEnterpriseMibModules")
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ConstraintsUnion, ValueSizeConstraint, SingleValueConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ConstraintsUnion", "ValueSizeConstraint", "SingleValueConstraint", "ConstraintsIntersection")
ModuleCompliance, NotificationGroup, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup", "ObjectGroup")
IpAddress, TimeTicks, snmpModules, Integer32, MibScalar, MibTable, MibTableRow, MibTableColumn, NotificationType, Counter32, Counter64, iso, MibIdentifier, TextualConvention, Bits, Unsigned32, Gauge32, ObjectIdentity, ModuleIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "IpAddress", "TimeTicks", "snmpModules", "Integer32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "NotificationType", "Counter32", "Counter64", "iso", "MibIdentifier", "TextualConvention", "Bits", "Unsigned32", "Gauge32", "ObjectIdentity", "ModuleIdentity")
TDomain, TAddress, DisplayString, TruthValue, TimeInterval, StorageType, TextualConvention, PhysAddress, TestAndIncr, RowStatus, MacAddress = mibBuilder.importSymbols("SNMPv2-TC", "TDomain", "TAddress", "DisplayString", "TruthValue", "TimeInterval", "StorageType", "TextualConvention", "PhysAddress", "TestAndIncr", "RowStatus", "MacAddress")
wlsxCtsMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 11))
wlsxCtsMIB.setRevisions(('1907-08-06 05:18',))
if mibBuilder.loadTexts: wlsxCtsMIB.setLastUpdated('0708060518Z')
if mibBuilder.loadTexts: wlsxCtsMIB.setOrganization('Aruba Wireless Networks')
wlsxCtsOpGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 11, 1))
wlsxCtsRequestTable = MibTable((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 11, 1, 1), )
if mibBuilder.loadTexts: wlsxCtsRequestTable.setStatus('current')
wlsxCtsRequestEntry = MibTableRow((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 11, 1, 1, 1), ).setIndexNames((0, "WLSX-CTS-MIB", "wlsxCtsIndex"))
if mibBuilder.loadTexts: wlsxCtsRequestEntry.setStatus('current')
wlsxCtsIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 11, 1, 1, 1, 1), Integer32())
if mibBuilder.loadTexts: wlsxCtsIndex.setStatus('current')
wlsxCtsOpcode = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 11, 1, 1, 1, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wlsxCtsOpcode.setStatus('current')
wlsxCtsCookie = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 11, 1, 1, 1, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wlsxCtsCookie.setStatus('current')
wlsxCtsURL = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 11, 1, 1, 1, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wlsxCtsURL.setStatus('current')
wlsxCtsFlags = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 11, 1, 1, 1, 5), Bits().clone(namedValues=NamedValues(("wlsxCtsFlagForce", 0), ("wlsxCtsFlagUseCert", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wlsxCtsFlags.setStatus('current')
wlsxCtsStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 11, 1, 1, 1, 6), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wlsxCtsStatus.setStatus('current')
mibBuilder.exportSymbols("WLSX-CTS-MIB", wlsxCtsIndex=wlsxCtsIndex, wlsxCtsMIB=wlsxCtsMIB, wlsxCtsRequestEntry=wlsxCtsRequestEntry, wlsxCtsFlags=wlsxCtsFlags, wlsxCtsRequestTable=wlsxCtsRequestTable, wlsxCtsOpGroup=wlsxCtsOpGroup, wlsxCtsOpcode=wlsxCtsOpcode, wlsxCtsURL=wlsxCtsURL, wlsxCtsCookie=wlsxCtsCookie, PYSNMP_MODULE_ID=wlsxCtsMIB, wlsxCtsStatus=wlsxCtsStatus)
