#
# PySNMP MIB module COLUBRIS-802DOT11-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/COLUBRIS-802DOT11-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 18:09:45 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, SingleValueConstraint, ConstraintsUnion, ValueSizeConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "SingleValueConstraint", "ConstraintsUnion", "ValueSizeConstraint", "ConstraintsIntersection")
colubrisMgmtV2, = mibBuilder.importSymbols("COLUBRIS-SMI", "colubrisMgmtV2")
ColubrisNotificationEnable, ColubrisSSID, ColubrisRadioType, ColubrisSSIDOrNone, ColubrisDataRate = mibBuilder.importSymbols("COLUBRIS-TC", "ColubrisNotificationEnable", "ColubrisSSID", "ColubrisRadioType", "ColubrisSSIDOrNone", "ColubrisDataRate")
coVirtualAccessPointConfigEntry, coVirtualApSSID = mibBuilder.importSymbols("COLUBRIS-VIRTUAL-AP-MIB", "coVirtualAccessPointConfigEntry", "coVirtualApSSID")
ifIndex, InterfaceIndex, ifDescr = mibBuilder.importSymbols("IF-MIB", "ifIndex", "InterfaceIndex", "ifDescr")
ModuleCompliance, ObjectGroup, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "ObjectGroup", "NotificationGroup")
IpAddress, Gauge32, ModuleIdentity, TimeTicks, MibIdentifier, NotificationType, ObjectIdentity, Counter64, Unsigned32, Integer32, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter32, iso, Bits = mibBuilder.importSymbols("SNMPv2-SMI", "IpAddress", "Gauge32", "ModuleIdentity", "TimeTicks", "MibIdentifier", "NotificationType", "ObjectIdentity", "Counter64", "Unsigned32", "Integer32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter32", "iso", "Bits")
DisplayString, TextualConvention, MacAddress, TruthValue = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention", "MacAddress", "TruthValue")
colubris802dot11 = ModuleIdentity((1, 3, 6, 1, 4, 1, 8744, 5, 4))
if mibBuilder.loadTexts: colubris802dot11.setLastUpdated('200910200000Z')
if mibBuilder.loadTexts: colubris802dot11.setOrganization('Colubris Networks, Inc.')
coDot11ap = MibIdentifier((1, 3, 6, 1, 4, 1, 8744, 5, 4, 1))
coDot11mac = MibIdentifier((1, 3, 6, 1, 4, 1, 8744, 5, 4, 2))
coDot11phy = MibIdentifier((1, 3, 6, 1, 4, 1, 8744, 5, 4, 3))
class WEPKeytype(TextualConvention, OctetString):
    status = 'current'
    displayHint = '255a'
    subtypeSpec = OctetString.subtypeSpec + ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(5, 5), ValueSizeConstraint(13, 13), )
coDot11AccessPointConfigTable = MibTable((1, 3, 6, 1, 4, 1, 8744, 5, 4, 1, 1), )
if mibBuilder.loadTexts: coDot11AccessPointConfigTable.setStatus('current')
coDot11AccessPointConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 8744, 5, 4, 1, 1, 1), )
coVirtualAccessPointConfigEntry.registerAugmentions(("COLUBRIS-802DOT11-MIB", "coDot11AccessPointConfigEntry"))
coDot11AccessPointConfigEntry.setIndexNames(*coVirtualAccessPointConfigEntry.getIndexNames())
if mibBuilder.loadTexts: coDot11AccessPointConfigEntry.setStatus('current')
coDot11RelayBetweenStation = MibTableColumn((1, 3, 6, 1, 4, 1, 8744, 5, 4, 1, 1, 1, 1), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: coDot11RelayBetweenStation.setStatus('current')
coDot11BeaconPeriod = MibTableColumn((1, 3, 6, 1, 4, 1, 8744, 5, 4, 1, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDot11BeaconPeriod.setStatus('current')
coDot11DTIMPeriod = MibTableColumn((1, 3, 6, 1, 4, 1, 8744, 5, 4, 1, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: coDot11DTIMPeriod.setStatus('current')
coDot11PrivacyOptionImplemented = MibTableColumn((1, 3, 6, 1, 4, 1, 8744, 5, 4, 1, 1, 1, 4), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDot11PrivacyOptionImplemented.setStatus('current')
coDot11RSNAOptionImplemented = MibTableColumn((1, 3, 6, 1, 4, 1, 8744, 5, 4, 1, 1, 1, 5), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDot11RSNAOptionImplemented.setStatus('current')
coDot11NumberOfUsers = MibTableColumn((1, 3, 6, 1, 4, 1, 8744, 5, 4, 1, 1, 1, 6), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDot11NumberOfUsers.setStatus('current')
coDot11AddToAssociationNotification = MibTableColumn((1, 3, 6, 1, 4, 1, 8744, 5, 4, 1, 1, 1, 7), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: coDot11AddToAssociationNotification.setStatus('current')
coDot11PhyTxPowerAdminLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 8744, 5, 4, 1, 1, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 23))).setUnits('dBm').setMaxAccess("readwrite")
if mibBuilder.loadTexts: coDot11PhyTxPowerAdminLevel.setStatus('current')
coDot11PhyTxPowerOperLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 8744, 5, 4, 1, 1, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 23))).setUnits('dBm').setMaxAccess("readonly")
if mibBuilder.loadTexts: coDot11PhyTxPowerOperLevel.setStatus('current')
coDot11CurrentSNRLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 8744, 5, 4, 1, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 92))).setUnits('dBm').setMaxAccess("readonly")
if mibBuilder.loadTexts: coDot11CurrentSNRLevel.setStatus('current')
coDot11BSSID = MibTableColumn((1, 3, 6, 1, 4, 1, 8744, 5, 4, 1, 1, 1, 11), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDot11BSSID.setStatus('current')
coDot11AdminMinimumDataRate = MibTableColumn((1, 3, 6, 1, 4, 1, 8744, 5, 4, 1, 1, 1, 12), ColubrisDataRate()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: coDot11AdminMinimumDataRate.setStatus('deprecated')
coDot11AdminMaximumDataRate = MibTableColumn((1, 3, 6, 1, 4, 1, 8744, 5, 4, 1, 1, 1, 13), ColubrisDataRate()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: coDot11AdminMaximumDataRate.setStatus('deprecated')
coDot11HighThroughputOptionImplemented = MibTableColumn((1, 3, 6, 1, 4, 1, 8744, 5, 4, 1, 1, 1, 14), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDot11HighThroughputOptionImplemented.setStatus('current')
coDot11AuthenticationAlgorithmsTable = MibTable((1, 3, 6, 1, 4, 1, 8744, 5, 4, 1, 2), )
if mibBuilder.loadTexts: coDot11AuthenticationAlgorithmsTable.setStatus('current')
coDot11AuthenticationAlgorithmsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 8744, 5, 4, 1, 2, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "COLUBRIS-802DOT11-MIB", "coDot11AuthenticationAlgorithmsIndex"))
if mibBuilder.loadTexts: coDot11AuthenticationAlgorithmsEntry.setStatus('current')
coDot11AuthenticationAlgorithmsIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 8744, 5, 4, 1, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: coDot11AuthenticationAlgorithmsIndex.setStatus('current')
coDot11AuthenticationAlgorithm = MibTableColumn((1, 3, 6, 1, 4, 1, 8744, 5, 4, 1, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("openSystem", 1), ("sharedKey", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDot11AuthenticationAlgorithm.setStatus('current')
coDot11AuthenticationAlgorithmsEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 8744, 5, 4, 1, 2, 1, 3), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDot11AuthenticationAlgorithmsEnable.setStatus('current')
coDot11WEPDefaultKeysTable = MibTable((1, 3, 6, 1, 4, 1, 8744, 5, 4, 1, 3), )
if mibBuilder.loadTexts: coDot11WEPDefaultKeysTable.setStatus('current')
coDot11WEPDefaultKeysEntry = MibTableRow((1, 3, 6, 1, 4, 1, 8744, 5, 4, 1, 3, 1), )
coVirtualAccessPointConfigEntry.registerAugmentions(("COLUBRIS-802DOT11-MIB", "coDot11WEPDefaultKeysEntry"))
coDot11WEPDefaultKeysEntry.setIndexNames(*coVirtualAccessPointConfigEntry.getIndexNames())
if mibBuilder.loadTexts: coDot11WEPDefaultKeysEntry.setStatus('current')
coDot11WEPDefaultKey1Value = MibTableColumn((1, 3, 6, 1, 4, 1, 8744, 5, 4, 1, 3, 1, 1), WEPKeytype()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: coDot11WEPDefaultKey1Value.setStatus('current')
coDot11WEPDefaultKey2Value = MibTableColumn((1, 3, 6, 1, 4, 1, 8744, 5, 4, 1, 3, 1, 2), WEPKeytype()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: coDot11WEPDefaultKey2Value.setStatus('current')
coDot11WEPDefaultKey3Value = MibTableColumn((1, 3, 6, 1, 4, 1, 8744, 5, 4, 1, 3, 1, 3), WEPKeytype()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: coDot11WEPDefaultKey3Value.setStatus('current')
coDot11WEPDefaultKey4Value = MibTableColumn((1, 3, 6, 1, 4, 1, 8744, 5, 4, 1, 3, 1, 4), WEPKeytype()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: coDot11WEPDefaultKey4Value.setStatus('current')
coDot11PrivacyTable = MibTable((1, 3, 6, 1, 4, 1, 8744, 5, 4, 1, 4), )
if mibBuilder.loadTexts: coDot11PrivacyTable.setStatus('current')
coDot11PrivacyEntry = MibTableRow((1, 3, 6, 1, 4, 1, 8744, 5, 4, 1, 4, 1), )
coVirtualAccessPointConfigEntry.registerAugmentions(("COLUBRIS-802DOT11-MIB", "coDot11PrivacyEntry"))
coDot11PrivacyEntry.setIndexNames(*coVirtualAccessPointConfigEntry.getIndexNames())
if mibBuilder.loadTexts: coDot11PrivacyEntry.setStatus('current')
coDot11PrivacyInvoked = MibTableColumn((1, 3, 6, 1, 4, 1, 8744, 5, 4, 1, 4, 1, 1), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDot11PrivacyInvoked.setStatus('current')
coDot11WEPDefaultKeyID = MibTableColumn((1, 3, 6, 1, 4, 1, 8744, 5, 4, 1, 4, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 3))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: coDot11WEPDefaultKeyID.setStatus('current')
coDot11ExcludeUnencrypted = MibTableColumn((1, 3, 6, 1, 4, 1, 8744, 5, 4, 1, 4, 1, 3), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDot11ExcludeUnencrypted.setStatus('current')
coDot11WEPICVErrorCount = MibTableColumn((1, 3, 6, 1, 4, 1, 8744, 5, 4, 1, 4, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDot11WEPICVErrorCount.setStatus('current')
coDot11WEPExcludedCount = MibTableColumn((1, 3, 6, 1, 4, 1, 8744, 5, 4, 1, 4, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDot11WEPExcludedCount.setStatus('current')
coDot11RSNAEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 8744, 5, 4, 1, 4, 1, 6), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDot11RSNAEnabled.setStatus('current')
coDot11AssociationTable = MibTable((1, 3, 6, 1, 4, 1, 8744, 5, 4, 1, 5), )
if mibBuilder.loadTexts: coDot11AssociationTable.setStatus('current')
coDot11AssociationEntry = MibTableRow((1, 3, 6, 1, 4, 1, 8744, 5, 4, 1, 5, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "COLUBRIS-802DOT11-MIB", "coDot11AssociationIndex"))
if mibBuilder.loadTexts: coDot11AssociationEntry.setStatus('current')
coDot11AssociationIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 8744, 5, 4, 1, 5, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: coDot11AssociationIndex.setStatus('current')
coDot11StationMACAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 8744, 5, 4, 1, 5, 1, 2), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDot11StationMACAddress.setStatus('current')
coDot11StationConnectTime = MibTableColumn((1, 3, 6, 1, 4, 1, 8744, 5, 4, 1, 5, 1, 3), Counter32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: coDot11StationConnectTime.setStatus('current')
coDot11SignalLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 8744, 5, 4, 1, 5, 1, 4), Integer32()).setUnits('dBm').setMaxAccess("readonly")
if mibBuilder.loadTexts: coDot11SignalLevel.setStatus('current')
coDot11NoiseLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 8744, 5, 4, 1, 5, 1, 5), Integer32()).setUnits('dBm').setMaxAccess("readonly")
if mibBuilder.loadTexts: coDot11NoiseLevel.setStatus('current')
coDot11SNR = MibTableColumn((1, 3, 6, 1, 4, 1, 8744, 5, 4, 1, 5, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDot11SNR.setStatus('current')
coDot11PktsRate1 = MibTableColumn((1, 3, 6, 1, 4, 1, 8744, 5, 4, 1, 5, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDot11PktsRate1.setStatus('current')
coDot11PktsRate2 = MibTableColumn((1, 3, 6, 1, 4, 1, 8744, 5, 4, 1, 5, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDot11PktsRate2.setStatus('current')
coDot11PktsRate5dot5 = MibTableColumn((1, 3, 6, 1, 4, 1, 8744, 5, 4, 1, 5, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDot11PktsRate5dot5.setStatus('current')
coDot11PktsRate11 = MibTableColumn((1, 3, 6, 1, 4, 1, 8744, 5, 4, 1, 5, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDot11PktsRate11.setStatus('current')
coDot11PktsRate6 = MibTableColumn((1, 3, 6, 1, 4, 1, 8744, 5, 4, 1, 5, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDot11PktsRate6.setStatus('current')
coDot11PktsRate9 = MibTableColumn((1, 3, 6, 1, 4, 1, 8744, 5, 4, 1, 5, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDot11PktsRate9.setStatus('current')
coDot11PktsRate12 = MibTableColumn((1, 3, 6, 1, 4, 1, 8744, 5, 4, 1, 5, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDot11PktsRate12.setStatus('current')
coDot11PktsRate18 = MibTableColumn((1, 3, 6, 1, 4, 1, 8744, 5, 4, 1, 5, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDot11PktsRate18.setStatus('current')
coDot11PktsRate24 = MibTableColumn((1, 3, 6, 1, 4, 1, 8744, 5, 4, 1, 5, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDot11PktsRate24.setStatus('current')
coDot11PktsRate36 = MibTableColumn((1, 3, 6, 1, 4, 1, 8744, 5, 4, 1, 5, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDot11PktsRate36.setStatus('current')
coDot11PktsRate48 = MibTableColumn((1, 3, 6, 1, 4, 1, 8744, 5, 4, 1, 5, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDot11PktsRate48.setStatus('current')
coDot11PktsRate54 = MibTableColumn((1, 3, 6, 1, 4, 1, 8744, 5, 4, 1, 5, 1, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDot11PktsRate54.setStatus('current')
coDot11TransmitRate = MibTableColumn((1, 3, 6, 1, 4, 1, 8744, 5, 4, 1, 5, 1, 19), Unsigned32()).setUnits('500Kb/s').setMaxAccess("readonly")
if mibBuilder.loadTexts: coDot11TransmitRate.setStatus('current')
coDot11ReceiveRate = MibTableColumn((1, 3, 6, 1, 4, 1, 8744, 5, 4, 1, 5, 1, 20), Unsigned32()).setUnits('500Kb/s').setMaxAccess("readonly")
if mibBuilder.loadTexts: coDot11ReceiveRate.setStatus('current')
coDot11InPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 8744, 5, 4, 1, 5, 1, 21), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDot11InPkts.setStatus('current')
coDot11OutPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 8744, 5, 4, 1, 5, 1, 22), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDot11OutPkts.setStatus('current')
coDot11InOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 8744, 5, 4, 1, 5, 1, 23), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDot11InOctets.setStatus('current')
coDot11OutOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 8744, 5, 4, 1, 5, 1, 24), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDot11OutOctets.setStatus('current')
coDot11StationSSID = MibTableColumn((1, 3, 6, 1, 4, 1, 8744, 5, 4, 1, 5, 1, 25), ColubrisSSIDOrNone()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDot11StationSSID.setStatus('current')
coDot11StationName = MibTableColumn((1, 3, 6, 1, 4, 1, 8744, 5, 4, 1, 5, 1, 26), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDot11StationName.setStatus('current')
coDot11StationIPAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 8744, 5, 4, 1, 5, 1, 27), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDot11StationIPAddress.setStatus('current')
coDot11StationVLAN = MibTableColumn((1, 3, 6, 1, 4, 1, 8744, 5, 4, 1, 5, 1, 28), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4094))).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDot11StationVLAN.setStatus('current')
coDot11StationLocalInterface = MibTableColumn((1, 3, 6, 1, 4, 1, 8744, 5, 4, 1, 5, 1, 29), InterfaceIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDot11StationLocalInterface.setStatus('current')
coDot11StaHT = MibTableColumn((1, 3, 6, 1, 4, 1, 8744, 5, 4, 1, 5, 1, 30), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDot11StaHT.setStatus('current')
coDot11StaEncryptionType = MibTableColumn((1, 3, 6, 1, 4, 1, 8744, 5, 4, 1, 5, 1, 31), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("none", 1), ("wep", 2), ("tkip", 3), ("aes", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDot11StaEncryptionType.setStatus('current')
coDot11PktsTxRate1 = MibTableColumn((1, 3, 6, 1, 4, 1, 8744, 5, 4, 1, 5, 1, 32), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDot11PktsTxRate1.setStatus('current')
coDot11PktsTxRate2 = MibTableColumn((1, 3, 6, 1, 4, 1, 8744, 5, 4, 1, 5, 1, 33), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDot11PktsTxRate2.setStatus('current')
coDot11PktsTxRate5dot5 = MibTableColumn((1, 3, 6, 1, 4, 1, 8744, 5, 4, 1, 5, 1, 34), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDot11PktsTxRate5dot5.setStatus('current')
coDot11PktsTxRate11 = MibTableColumn((1, 3, 6, 1, 4, 1, 8744, 5, 4, 1, 5, 1, 35), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDot11PktsTxRate11.setStatus('current')
coDot11PktsTxRate6 = MibTableColumn((1, 3, 6, 1, 4, 1, 8744, 5, 4, 1, 5, 1, 36), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDot11PktsTxRate6.setStatus('current')
coDot11PktsTxRate9 = MibTableColumn((1, 3, 6, 1, 4, 1, 8744, 5, 4, 1, 5, 1, 37), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDot11PktsTxRate9.setStatus('current')
coDot11PktsTxRate12 = MibTableColumn((1, 3, 6, 1, 4, 1, 8744, 5, 4, 1, 5, 1, 38), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDot11PktsTxRate12.setStatus('current')
coDot11PktsTxRate18 = MibTableColumn((1, 3, 6, 1, 4, 1, 8744, 5, 4, 1, 5, 1, 39), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDot11PktsTxRate18.setStatus('current')
coDot11PktsTxRate24 = MibTableColumn((1, 3, 6, 1, 4, 1, 8744, 5, 4, 1, 5, 1, 40), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDot11PktsTxRate24.setStatus('current')
coDot11PktsTxRate36 = MibTableColumn((1, 3, 6, 1, 4, 1, 8744, 5, 4, 1, 5, 1, 41), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDot11PktsTxRate36.setStatus('current')
coDot11PktsTxRate48 = MibTableColumn((1, 3, 6, 1, 4, 1, 8744, 5, 4, 1, 5, 1, 42), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDot11PktsTxRate48.setStatus('current')
coDot11PktsTxRate54 = MibTableColumn((1, 3, 6, 1, 4, 1, 8744, 5, 4, 1, 5, 1, 43), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDot11PktsTxRate54.setStatus('current')
coDot11WDSPortTable = MibTable((1, 3, 6, 1, 4, 1, 8744, 5, 4, 1, 6), )
if mibBuilder.loadTexts: coDot11WDSPortTable.setStatus('current')
coDot11WDSPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 8744, 5, 4, 1, 6, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "COLUBRIS-802DOT11-MIB", "coDot11WDSPortIndex"))
if mibBuilder.loadTexts: coDot11WDSPortEntry.setStatus('current')
coDot11WDSPortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 8744, 5, 4, 1, 6, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 6)))
if mibBuilder.loadTexts: coDot11WDSPortIndex.setStatus('current')
coDot11WDSPortMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 8744, 5, 4, 1, 6, 1, 2), MacAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: coDot11WDSPortMacAddress.setStatus('current')
coDot11WDSPortCurrentRate = MibTableColumn((1, 3, 6, 1, 4, 1, 8744, 5, 4, 1, 6, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDot11WDSPortCurrentRate.setStatus('current')
coDot11WDSPortSNRLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 8744, 5, 4, 1, 6, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDot11WDSPortSNRLevel.setStatus('current')
coDot11WDSPortTxPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 8744, 5, 4, 1, 6, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDot11WDSPortTxPackets.setStatus('current')
coDot11WDSPortTxDropped = MibTableColumn((1, 3, 6, 1, 4, 1, 8744, 5, 4, 1, 6, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDot11WDSPortTxDropped.setStatus('current')
coDot11WDSPortTxErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 8744, 5, 4, 1, 6, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDot11WDSPortTxErrors.setStatus('current')
coDot11WDSPortRxPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 8744, 5, 4, 1, 6, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDot11WDSPortRxPackets.setStatus('current')
coDot11WDSPortRxDropped = MibTableColumn((1, 3, 6, 1, 4, 1, 8744, 5, 4, 1, 6, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDot11WDSPortRxDropped.setStatus('current')
coDot11WDSPortRxErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 8744, 5, 4, 1, 6, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDot11WDSPortRxErrors.setStatus('current')
coDot11ScanTable = MibTable((1, 3, 6, 1, 4, 1, 8744, 5, 4, 1, 7), )
if mibBuilder.loadTexts: coDot11ScanTable.setStatus('current')
coDot11ScanEntry = MibTableRow((1, 3, 6, 1, 4, 1, 8744, 5, 4, 1, 7, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "COLUBRIS-802DOT11-MIB", "coDot11ScanIndex"))
if mibBuilder.loadTexts: coDot11ScanEntry.setStatus('current')
coDot11ScanIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 8744, 5, 4, 1, 7, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: coDot11ScanIndex.setStatus('current')
coDot11ScanMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 8744, 5, 4, 1, 7, 1, 2), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDot11ScanMacAddress.setStatus('current')
coDot11ScanChannel = MibTableColumn((1, 3, 6, 1, 4, 1, 8744, 5, 4, 1, 7, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDot11ScanChannel.setStatus('current')
coDot11ScanSSID = MibTableColumn((1, 3, 6, 1, 4, 1, 8744, 5, 4, 1, 7, 1, 4), ColubrisSSIDOrNone()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDot11ScanSSID.setStatus('current')
coDot11ScanSignalLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 8744, 5, 4, 1, 7, 1, 5), Integer32()).setUnits('dBm').setMaxAccess("readonly")
if mibBuilder.loadTexts: coDot11ScanSignalLevel.setStatus('current')
coDot11ScanNoiseLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 8744, 5, 4, 1, 7, 1, 6), Integer32()).setUnits('dBm').setMaxAccess("readonly")
if mibBuilder.loadTexts: coDot11ScanNoiseLevel.setStatus('current')
coDot11ScanSNR = MibTableColumn((1, 3, 6, 1, 4, 1, 8744, 5, 4, 1, 7, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDot11ScanSNR.setStatus('current')
coDot11ScanStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 8744, 5, 4, 1, 7, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("unknown", 0), ("authorized", 1), ("unauthorized", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDot11ScanStatus.setStatus('current')
coDot11ScanPHYType = MibTableColumn((1, 3, 6, 1, 4, 1, 8744, 5, 4, 1, 7, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("ieee802dot11a", 1), ("ieee802dot11b", 2), ("ieee802dot11g", 3), ("ieee802dot11na", 4), ("ieee802dot11ng", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDot11ScanPHYType.setStatus('current')
coDot11ScanInactivityTime = MibTableColumn((1, 3, 6, 1, 4, 1, 8744, 5, 4, 1, 7, 1, 10), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDot11ScanInactivityTime.setStatus('current')
coDot11ScanNetworkType = MibTableColumn((1, 3, 6, 1, 4, 1, 8744, 5, 4, 1, 7, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("ess", 1), ("ibss", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDot11ScanNetworkType.setStatus('current')
coDot11ScanSecurity = MibTableColumn((1, 3, 6, 1, 4, 1, 8744, 5, 4, 1, 7, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("none", 1), ("wep", 2), ("wpa", 3), ("wpa2", 4), ("wpaAndWpa2", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDot11ScanSecurity.setStatus('current')
coDot11ScanEnabled = MibScalar((1, 3, 6, 1, 4, 1, 8744, 5, 4, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: coDot11ScanEnabled.setStatus('current')
coDot11ScanPeriodicity = MibScalar((1, 3, 6, 1, 4, 1, 8744, 5, 4, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(10, 3600)).clone(600)).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: coDot11ScanPeriodicity.setStatus('current')
coDot11ScanAuthorizedListURL = MibScalar((1, 3, 6, 1, 4, 1, 8744, 5, 4, 1, 10), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: coDot11ScanAuthorizedListURL.setStatus('current')
coDot11UnauthorizedAPNotificationEnabled = MibScalar((1, 3, 6, 1, 4, 1, 8744, 5, 4, 1, 11), ColubrisNotificationEnable().clone('enable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: coDot11UnauthorizedAPNotificationEnabled.setStatus('current')
coDot11UnauthorizedAPNotificationInterval = MibScalar((1, 3, 6, 1, 4, 1, 8744, 5, 4, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1000000))).setUnits('minutes').setMaxAccess("readwrite")
if mibBuilder.loadTexts: coDot11UnauthorizedAPNotificationInterval.setStatus('current')
coDot11AssociationNotificationEnabled = MibScalar((1, 3, 6, 1, 4, 1, 8744, 5, 4, 1, 13), ColubrisNotificationEnable().clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: coDot11AssociationNotificationEnabled.setStatus('current')
coDot11AssociationNotificationInterval = MibScalar((1, 3, 6, 1, 4, 1, 8744, 5, 4, 1, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1000000))).setUnits('minutes').setMaxAccess("readwrite")
if mibBuilder.loadTexts: coDot11AssociationNotificationInterval.setStatus('current')
coDot11StationHTTable = MibTable((1, 3, 6, 1, 4, 1, 8744, 5, 4, 1, 15), )
if mibBuilder.loadTexts: coDot11StationHTTable.setStatus('current')
coDot11StationHTEntry = MibTableRow((1, 3, 6, 1, 4, 1, 8744, 5, 4, 1, 15, 1), )
coDot11AssociationEntry.registerAugmentions(("COLUBRIS-802DOT11-MIB", "coDot11StationHTEntry"))
coDot11StationHTEntry.setIndexNames(*coDot11AssociationEntry.getIndexNames())
if mibBuilder.loadTexts: coDot11StationHTEntry.setStatus('current')
coDot11StaTransmitMCS = MibTableColumn((1, 3, 6, 1, 4, 1, 8744, 5, 4, 1, 15, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDot11StaTransmitMCS.setStatus('current')
coDot11StaReceiveMCS = MibTableColumn((1, 3, 6, 1, 4, 1, 8744, 5, 4, 1, 15, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDot11StaReceiveMCS.setStatus('current')
coDot11StaChannelWidth = MibTableColumn((1, 3, 6, 1, 4, 1, 8744, 5, 4, 1, 15, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("cw20MHz", 1), ("cw40MHz", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDot11StaChannelWidth.setStatus('current')
coDot11StaShortGI = MibTableColumn((1, 3, 6, 1, 4, 1, 8744, 5, 4, 1, 15, 1, 4), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDot11StaShortGI.setStatus('current')
coDot11StaPktsTxMCS0 = MibTableColumn((1, 3, 6, 1, 4, 1, 8744, 5, 4, 1, 15, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDot11StaPktsTxMCS0.setStatus('current')
coDot11StaPktsTxMCS1 = MibTableColumn((1, 3, 6, 1, 4, 1, 8744, 5, 4, 1, 15, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDot11StaPktsTxMCS1.setStatus('current')
coDot11StaPktsTxMCS2 = MibTableColumn((1, 3, 6, 1, 4, 1, 8744, 5, 4, 1, 15, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDot11StaPktsTxMCS2.setStatus('current')
coDot11StaPktsTxMCS3 = MibTableColumn((1, 3, 6, 1, 4, 1, 8744, 5, 4, 1, 15, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDot11StaPktsTxMCS3.setStatus('current')
coDot11StaPktsTxMCS4 = MibTableColumn((1, 3, 6, 1, 4, 1, 8744, 5, 4, 1, 15, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDot11StaPktsTxMCS4.setStatus('current')
coDot11StaPktsTxMCS5 = MibTableColumn((1, 3, 6, 1, 4, 1, 8744, 5, 4, 1, 15, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDot11StaPktsTxMCS5.setStatus('current')
coDot11StaPktsTxMCS6 = MibTableColumn((1, 3, 6, 1, 4, 1, 8744, 5, 4, 1, 15, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDot11StaPktsTxMCS6.setStatus('current')
coDot11StaPktsTxMCS7 = MibTableColumn((1, 3, 6, 1, 4, 1, 8744, 5, 4, 1, 15, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDot11StaPktsTxMCS7.setStatus('current')
coDot11StaPktsTxMCS8 = MibTableColumn((1, 3, 6, 1, 4, 1, 8744, 5, 4, 1, 15, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDot11StaPktsTxMCS8.setStatus('current')
coDot11StaPktsTxMCS9 = MibTableColumn((1, 3, 6, 1, 4, 1, 8744, 5, 4, 1, 15, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDot11StaPktsTxMCS9.setStatus('current')
coDot11StaPktsTxMCS10 = MibTableColumn((1, 3, 6, 1, 4, 1, 8744, 5, 4, 1, 15, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDot11StaPktsTxMCS10.setStatus('current')
coDot11StaPktsTxMCS11 = MibTableColumn((1, 3, 6, 1, 4, 1, 8744, 5, 4, 1, 15, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDot11StaPktsTxMCS11.setStatus('current')
coDot11StaPktsTxMCS12 = MibTableColumn((1, 3, 6, 1, 4, 1, 8744, 5, 4, 1, 15, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDot11StaPktsTxMCS12.setStatus('current')
coDot11StaPktsTxMCS13 = MibTableColumn((1, 3, 6, 1, 4, 1, 8744, 5, 4, 1, 15, 1, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDot11StaPktsTxMCS13.setStatus('current')
coDot11StaPktsTxMCS14 = MibTableColumn((1, 3, 6, 1, 4, 1, 8744, 5, 4, 1, 15, 1, 19), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDot11StaPktsTxMCS14.setStatus('current')
coDot11StaPktsTxMCS15 = MibTableColumn((1, 3, 6, 1, 4, 1, 8744, 5, 4, 1, 15, 1, 20), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDot11StaPktsTxMCS15.setStatus('current')
coDot11StaPktsRxMCS0 = MibTableColumn((1, 3, 6, 1, 4, 1, 8744, 5, 4, 1, 15, 1, 21), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDot11StaPktsRxMCS0.setStatus('current')
coDot11StaPktsRxMCS1 = MibTableColumn((1, 3, 6, 1, 4, 1, 8744, 5, 4, 1, 15, 1, 22), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDot11StaPktsRxMCS1.setStatus('current')
coDot11StaPktsRxMCS2 = MibTableColumn((1, 3, 6, 1, 4, 1, 8744, 5, 4, 1, 15, 1, 23), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDot11StaPktsRxMCS2.setStatus('current')
coDot11StaPktsRxMCS3 = MibTableColumn((1, 3, 6, 1, 4, 1, 8744, 5, 4, 1, 15, 1, 24), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDot11StaPktsRxMCS3.setStatus('current')
coDot11StaPktsRxMCS4 = MibTableColumn((1, 3, 6, 1, 4, 1, 8744, 5, 4, 1, 15, 1, 25), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDot11StaPktsRxMCS4.setStatus('current')
coDot11StaPktsRxMCS5 = MibTableColumn((1, 3, 6, 1, 4, 1, 8744, 5, 4, 1, 15, 1, 26), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDot11StaPktsRxMCS5.setStatus('current')
coDot11StaPktsRxMCS6 = MibTableColumn((1, 3, 6, 1, 4, 1, 8744, 5, 4, 1, 15, 1, 27), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDot11StaPktsRxMCS6.setStatus('current')
coDot11StaPktsRxMCS7 = MibTableColumn((1, 3, 6, 1, 4, 1, 8744, 5, 4, 1, 15, 1, 28), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDot11StaPktsRxMCS7.setStatus('current')
coDot11StaPktsRxMCS8 = MibTableColumn((1, 3, 6, 1, 4, 1, 8744, 5, 4, 1, 15, 1, 29), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDot11StaPktsRxMCS8.setStatus('current')
coDot11StaPktsRxMCS9 = MibTableColumn((1, 3, 6, 1, 4, 1, 8744, 5, 4, 1, 15, 1, 30), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDot11StaPktsRxMCS9.setStatus('current')
coDot11StaPktsRxMCS10 = MibTableColumn((1, 3, 6, 1, 4, 1, 8744, 5, 4, 1, 15, 1, 31), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDot11StaPktsRxMCS10.setStatus('current')
coDot11StaPktsRxMCS11 = MibTableColumn((1, 3, 6, 1, 4, 1, 8744, 5, 4, 1, 15, 1, 32), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDot11StaPktsRxMCS11.setStatus('current')
coDot11StaPktsRxMCS12 = MibTableColumn((1, 3, 6, 1, 4, 1, 8744, 5, 4, 1, 15, 1, 33), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDot11StaPktsRxMCS12.setStatus('current')
coDot11StaPktsRxMCS13 = MibTableColumn((1, 3, 6, 1, 4, 1, 8744, 5, 4, 1, 15, 1, 34), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDot11StaPktsRxMCS13.setStatus('current')
coDot11StaPktsRxMCS14 = MibTableColumn((1, 3, 6, 1, 4, 1, 8744, 5, 4, 1, 15, 1, 35), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDot11StaPktsRxMCS14.setStatus('current')
coDot11StaPktsRxMCS15 = MibTableColumn((1, 3, 6, 1, 4, 1, 8744, 5, 4, 1, 15, 1, 36), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDot11StaPktsRxMCS15.setStatus('current')
coDot11NbDetectedStation = MibScalar((1, 3, 6, 1, 4, 1, 8744, 5, 4, 1, 16), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDot11NbDetectedStation.setStatus('current')
coDot11DetectedStationTable = MibTable((1, 3, 6, 1, 4, 1, 8744, 5, 4, 1, 17), )
if mibBuilder.loadTexts: coDot11DetectedStationTable.setStatus('current')
coDot11DetectedStationEntry = MibTableRow((1, 3, 6, 1, 4, 1, 8744, 5, 4, 1, 17, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "COLUBRIS-802DOT11-MIB", "coDot11DetStaIndex"))
if mibBuilder.loadTexts: coDot11DetectedStationEntry.setStatus('current')
coDot11DetStaIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 8744, 5, 4, 1, 17, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: coDot11DetStaIndex.setStatus('current')
coDot11DetStaMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 8744, 5, 4, 1, 17, 1, 2), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDot11DetStaMacAddress.setStatus('current')
coDot11DetStaChannel = MibTableColumn((1, 3, 6, 1, 4, 1, 8744, 5, 4, 1, 17, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDot11DetStaChannel.setStatus('current')
coDot11DetStaSignalLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 8744, 5, 4, 1, 17, 1, 4), Integer32()).setUnits('dBm').setMaxAccess("readonly")
if mibBuilder.loadTexts: coDot11DetStaSignalLevel.setStatus('current')
coDot11DetStaNoiseLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 8744, 5, 4, 1, 17, 1, 5), Integer32()).setUnits('dBm').setMaxAccess("readonly")
if mibBuilder.loadTexts: coDot11DetStaNoiseLevel.setStatus('current')
coDot11DetStaNbProbeReq = MibTableColumn((1, 3, 6, 1, 4, 1, 8744, 5, 4, 1, 17, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDot11DetStaNbProbeReq.setStatus('current')
coDot11DetStaRate = MibTableColumn((1, 3, 6, 1, 4, 1, 8744, 5, 4, 1, 17, 1, 7), Unsigned32()).setUnits('500Kb/s').setMaxAccess("readonly")
if mibBuilder.loadTexts: coDot11DetStaRate.setStatus('current')
coDot11DetStaSSID = MibTableColumn((1, 3, 6, 1, 4, 1, 8744, 5, 4, 1, 17, 1, 8), ColubrisSSID()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDot11DetStaSSID.setStatus('current')
coDot11DetStaTimeDiscovered = MibTableColumn((1, 3, 6, 1, 4, 1, 8744, 5, 4, 1, 17, 1, 9), Counter32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: coDot11DetStaTimeDiscovered.setStatus('current')
coDot11DetStaTimeLastSeen = MibTableColumn((1, 3, 6, 1, 4, 1, 8744, 5, 4, 1, 17, 1, 10), Unsigned32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: coDot11DetStaTimeLastSeen.setStatus('current')
coDot11OperationTable = MibTable((1, 3, 6, 1, 4, 1, 8744, 5, 4, 2, 1), )
if mibBuilder.loadTexts: coDot11OperationTable.setStatus('current')
coDot11OperationEntry = MibTableRow((1, 3, 6, 1, 4, 1, 8744, 5, 4, 2, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: coDot11OperationEntry.setStatus('current')
coDot11MACAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 8744, 5, 4, 2, 1, 1, 1), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDot11MACAddress.setStatus('current')
coDot11RTSThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 8744, 5, 4, 2, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(128, 1540), ValueRangeConstraint(2347, 2347), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: coDot11RTSThreshold.setStatus('current')
coDot11ShortRetryLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 8744, 5, 4, 2, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDot11ShortRetryLimit.setStatus('current')
coDot11LongRetryLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 8744, 5, 4, 2, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDot11LongRetryLimit.setStatus('current')
coDot11FragmentationThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 8744, 5, 4, 2, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(256, 2346))).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDot11FragmentationThreshold.setStatus('current')
coDot11MaxTransmitMSDULifetime = MibTableColumn((1, 3, 6, 1, 4, 1, 8744, 5, 4, 2, 1, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDot11MaxTransmitMSDULifetime.setStatus('current')
coDot11MaxReceiveLifetime = MibTableColumn((1, 3, 6, 1, 4, 1, 8744, 5, 4, 2, 1, 1, 7), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDot11MaxReceiveLifetime.setStatus('current')
coDot11ManufacturerID = MibTableColumn((1, 3, 6, 1, 4, 1, 8744, 5, 4, 2, 1, 1, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDot11ManufacturerID.setStatus('current')
coDot11ProductID = MibTableColumn((1, 3, 6, 1, 4, 1, 8744, 5, 4, 2, 1, 1, 9), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDot11ProductID.setStatus('current')
coDot11RadioType = MibTableColumn((1, 3, 6, 1, 4, 1, 8744, 5, 4, 2, 1, 1, 10), ColubrisRadioType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDot11RadioType.setStatus('current')
coDot11StationDetectionState = MibTableColumn((1, 3, 6, 1, 4, 1, 8744, 5, 4, 2, 1, 1, 11), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: coDot11StationDetectionState.setStatus('current')
coDot11CountersTable = MibTable((1, 3, 6, 1, 4, 1, 8744, 5, 4, 2, 2), )
if mibBuilder.loadTexts: coDot11CountersTable.setStatus('current')
coDot11CountersEntry = MibTableRow((1, 3, 6, 1, 4, 1, 8744, 5, 4, 2, 2, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: coDot11CountersEntry.setStatus('current')
coDot11TransmittedFragmentCount = MibTableColumn((1, 3, 6, 1, 4, 1, 8744, 5, 4, 2, 2, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDot11TransmittedFragmentCount.setStatus('current')
coDot11MulticastTransmittedFrameCount = MibTableColumn((1, 3, 6, 1, 4, 1, 8744, 5, 4, 2, 2, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDot11MulticastTransmittedFrameCount.setStatus('current')
coDot11FailedCount = MibTableColumn((1, 3, 6, 1, 4, 1, 8744, 5, 4, 2, 2, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDot11FailedCount.setStatus('current')
coDot11RetryCount = MibTableColumn((1, 3, 6, 1, 4, 1, 8744, 5, 4, 2, 2, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDot11RetryCount.setStatus('current')
coDot11MultipleRetryCount = MibTableColumn((1, 3, 6, 1, 4, 1, 8744, 5, 4, 2, 2, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDot11MultipleRetryCount.setStatus('current')
coDot11FrameDuplicateCount = MibTableColumn((1, 3, 6, 1, 4, 1, 8744, 5, 4, 2, 2, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDot11FrameDuplicateCount.setStatus('current')
coDot11RTSSuccessCount = MibTableColumn((1, 3, 6, 1, 4, 1, 8744, 5, 4, 2, 2, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDot11RTSSuccessCount.setStatus('current')
coDot11RTSFailureCount = MibTableColumn((1, 3, 6, 1, 4, 1, 8744, 5, 4, 2, 2, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDot11RTSFailureCount.setStatus('current')
coDot11ACKFailureCount = MibTableColumn((1, 3, 6, 1, 4, 1, 8744, 5, 4, 2, 2, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDot11ACKFailureCount.setStatus('current')
coDot11ReceivedFragmentCount = MibTableColumn((1, 3, 6, 1, 4, 1, 8744, 5, 4, 2, 2, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDot11ReceivedFragmentCount.setStatus('current')
coDot11MulticastReceivedFrameCount = MibTableColumn((1, 3, 6, 1, 4, 1, 8744, 5, 4, 2, 2, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDot11MulticastReceivedFrameCount.setStatus('current')
coDot11FCSErrorCount = MibTableColumn((1, 3, 6, 1, 4, 1, 8744, 5, 4, 2, 2, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDot11FCSErrorCount.setStatus('current')
coDot11TransmittedFrameCount = MibTableColumn((1, 3, 6, 1, 4, 1, 8744, 5, 4, 2, 2, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDot11TransmittedFrameCount.setStatus('current')
coDot11WEPUndecryptableCount = MibTableColumn((1, 3, 6, 1, 4, 1, 8744, 5, 4, 2, 2, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDot11WEPUndecryptableCount.setStatus('current')
coDot11PhyOperationTable = MibTable((1, 3, 6, 1, 4, 1, 8744, 5, 4, 3, 1), )
if mibBuilder.loadTexts: coDot11PhyOperationTable.setStatus('current')
coDot11PhyOperationEntry = MibTableRow((1, 3, 6, 1, 4, 1, 8744, 5, 4, 3, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: coDot11PhyOperationEntry.setStatus('current')
coDot11PHYType = MibTableColumn((1, 3, 6, 1, 4, 1, 8744, 5, 4, 3, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 7))).clone(namedValues=NamedValues(("fhss", 1), ("dsss", 2), ("irbaseband", 3), ("ofdm", 4), ("ht", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDot11PHYType.setStatus('current')
coDot11CurrentRegDomain = MibTableColumn((1, 3, 6, 1, 4, 1, 8744, 5, 4, 3, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDot11CurrentRegDomain.setStatus('current')
coDot11TempType = MibTableColumn((1, 3, 6, 1, 4, 1, 8744, 5, 4, 3, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("tempType1", 1), ("tempType2", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDot11TempType.setStatus('current')
coDot11CurrentOperFrequency = MibTableColumn((1, 3, 6, 1, 4, 1, 8744, 5, 4, 3, 1, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDot11CurrentOperFrequency.setStatus('current')
coDot11CurrentOperPHYType = MibTableColumn((1, 3, 6, 1, 4, 1, 8744, 5, 4, 3, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("ieee802dot11a", 1), ("ieee802dot11b", 2), ("ieee802dot11g", 3), ("ieee802dot11bAndg", 4), ("ieee802dot11aTurbo", 5), ("ieee802dot11n", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDot11CurrentOperPHYType.setStatus('current')
coDot11Sensitivity = MibTableColumn((1, 3, 6, 1, 4, 1, 8744, 5, 4, 3, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("large", 1), ("medium", 2), ("small", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: coDot11Sensitivity.setStatus('current')
coDot11RadioEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 8744, 5, 4, 3, 1, 1, 7), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: coDot11RadioEnabled.setStatus('current')
coDot11OperatingMode = MibTableColumn((1, 3, 6, 1, 4, 1, 8744, 5, 4, 3, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("accessPointAndWirelessLinks", 1), ("accessPointOnly", 2), ("wirelessLinksOnly", 3), ("monitor", 4), ("sensor", 5)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: coDot11OperatingMode.setStatus('current')
coDot11AutoChannelEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 8744, 5, 4, 3, 1, 1, 9), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: coDot11AutoChannelEnabled.setStatus('current')
coDot11AutoChannelInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 8744, 5, 4, 3, 1, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 60, 120, 240, 480, 720, 1440))).clone(namedValues=NamedValues(("disable", 0), ("timeOfDay", 1), ("oneHour", 60), ("twoHours", 120), ("fourHours", 240), ("eightHours", 480), ("twelveHours", 720), ("tweentyFourHours", 1440)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: coDot11AutoChannelInterval.setStatus('current')
coDot11AutoPowerEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 8744, 5, 4, 3, 1, 1, 11), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: coDot11AutoPowerEnabled.setStatus('current')
coDot11AutoPowerInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 8744, 5, 4, 3, 1, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(60, 120, 240, 480, 720, 1440))).clone(namedValues=NamedValues(("oneHour", 60), ("twoHours", 120), ("fourHours", 240), ("eightHours", 480), ("twelveHours", 720), ("tweentyFourHours", 1440)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: coDot11AutoPowerInterval.setStatus('current')
coDot11PhyAntennaTable = MibTable((1, 3, 6, 1, 4, 1, 8744, 5, 4, 3, 2), )
if mibBuilder.loadTexts: coDot11PhyAntennaTable.setStatus('current')
coDot11PhyAntennaEntry = MibTableRow((1, 3, 6, 1, 4, 1, 8744, 5, 4, 3, 2, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: coDot11PhyAntennaEntry.setStatus('current')
coDot11CurrentTxAntenna = MibTableColumn((1, 3, 6, 1, 4, 1, 8744, 5, 4, 3, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDot11CurrentTxAntenna.setStatus('current')
coDot11DiversitySupport = MibTableColumn((1, 3, 6, 1, 4, 1, 8744, 5, 4, 3, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("fixedlist", 1), ("notsupported", 2), ("dynamic", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDot11DiversitySupport.setStatus('current')
coDot11CurrentRxAntenna = MibTableColumn((1, 3, 6, 1, 4, 1, 8744, 5, 4, 3, 2, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDot11CurrentRxAntenna.setStatus('current')
coDot11PhyConfigTable = MibTable((1, 3, 6, 1, 4, 1, 8744, 5, 4, 3, 3), )
if mibBuilder.loadTexts: coDot11PhyConfigTable.setStatus('current')
coDot11PhyConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 8744, 5, 4, 3, 3, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: coDot11PhyConfigEntry.setStatus('current')
coDot11PhyAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 8744, 5, 4, 3, 3, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("up", 1), ("down", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: coDot11PhyAdminStatus.setStatus('current')
coDot11PhyOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 8744, 5, 4, 3, 3, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("up", 1), ("down", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDot11PhyOperStatus.setStatus('current')
coDot11PhyDSSSTable = MibTable((1, 3, 6, 1, 4, 1, 8744, 5, 4, 3, 4), )
if mibBuilder.loadTexts: coDot11PhyDSSSTable.setStatus('current')
coDot11PhyDSSSEntry = MibTableRow((1, 3, 6, 1, 4, 1, 8744, 5, 4, 3, 4, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: coDot11PhyDSSSEntry.setStatus('current')
coDot11CurrentChannel = MibTableColumn((1, 3, 6, 1, 4, 1, 8744, 5, 4, 3, 4, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 14))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: coDot11CurrentChannel.setStatus('current')
coDot11CCAModeSupported = MibTableColumn((1, 3, 6, 1, 4, 1, 8744, 5, 4, 3, 4, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 7))).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDot11CCAModeSupported.setStatus('current')
coDot11CurrentCCAMode = MibTableColumn((1, 3, 6, 1, 4, 1, 8744, 5, 4, 3, 4, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 4))).clone(namedValues=NamedValues(("edonly", 1), ("csonly", 2), ("edandcs", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDot11CurrentCCAMode.setStatus('current')
coDot11RegDomainsSupportedTable = MibTable((1, 3, 6, 1, 4, 1, 8744, 5, 4, 3, 5), )
if mibBuilder.loadTexts: coDot11RegDomainsSupportedTable.setStatus('current')
coDot11RegDomainsSupportedEntry = MibTableRow((1, 3, 6, 1, 4, 1, 8744, 5, 4, 3, 5, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "COLUBRIS-802DOT11-MIB", "coDot11RegDomainsSupportIndex"))
if mibBuilder.loadTexts: coDot11RegDomainsSupportedEntry.setStatus('current')
coDot11RegDomainsSupportIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 8744, 5, 4, 3, 5, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: coDot11RegDomainsSupportIndex.setStatus('current')
coDot11RegDomainsSupportValue = MibTableColumn((1, 3, 6, 1, 4, 1, 8744, 5, 4, 3, 5, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(16, 32, 48, 49, 50, 65))).clone(namedValues=NamedValues(("fcc", 16), ("doc", 32), ("etsi", 48), ("spain", 49), ("france", 50), ("japan", 65)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDot11RegDomainsSupportValue.setStatus('current')
coDot11AntennasListTable = MibTable((1, 3, 6, 1, 4, 1, 8744, 5, 4, 3, 6), )
if mibBuilder.loadTexts: coDot11AntennasListTable.setStatus('current')
coDot11AntennasListEntry = MibTableRow((1, 3, 6, 1, 4, 1, 8744, 5, 4, 3, 6, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "COLUBRIS-802DOT11-MIB", "coDot11AntennaListIndex"))
if mibBuilder.loadTexts: coDot11AntennasListEntry.setStatus('current')
coDot11AntennaListIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 8744, 5, 4, 3, 6, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255)))
if mibBuilder.loadTexts: coDot11AntennaListIndex.setStatus('current')
coDot11SupportedTxAntenna = MibTableColumn((1, 3, 6, 1, 4, 1, 8744, 5, 4, 3, 6, 1, 2), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDot11SupportedTxAntenna.setStatus('current')
coDot11SupportedRxAntenna = MibTableColumn((1, 3, 6, 1, 4, 1, 8744, 5, 4, 3, 6, 1, 3), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDot11SupportedRxAntenna.setStatus('current')
coDot11DiversitySelectionRx = MibTableColumn((1, 3, 6, 1, 4, 1, 8744, 5, 4, 3, 6, 1, 4), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDot11DiversitySelectionRx.setStatus('current')
coDot11SupportedDataRatesTxTable = MibTable((1, 3, 6, 1, 4, 1, 8744, 5, 4, 3, 7), )
if mibBuilder.loadTexts: coDot11SupportedDataRatesTxTable.setStatus('current')
coDot11SupportedDataRatesTxEntry = MibTableRow((1, 3, 6, 1, 4, 1, 8744, 5, 4, 3, 7, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "COLUBRIS-802DOT11-MIB", "coDot11SupportedDataRatesTxIndex"))
if mibBuilder.loadTexts: coDot11SupportedDataRatesTxEntry.setStatus('current')
coDot11SupportedDataRatesTxIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 8744, 5, 4, 3, 7, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 12)))
if mibBuilder.loadTexts: coDot11SupportedDataRatesTxIndex.setStatus('current')
coDot11SupportedDataRatesTxValue = MibTableColumn((1, 3, 6, 1, 4, 1, 8744, 5, 4, 3, 7, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(2, 127))).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDot11SupportedDataRatesTxValue.setStatus('current')
coDot11SupportedDataRatesRxTable = MibTable((1, 3, 6, 1, 4, 1, 8744, 5, 4, 3, 8), )
if mibBuilder.loadTexts: coDot11SupportedDataRatesRxTable.setStatus('current')
coDot11SupportedDataRatesRxEntry = MibTableRow((1, 3, 6, 1, 4, 1, 8744, 5, 4, 3, 8, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "COLUBRIS-802DOT11-MIB", "coDot11SupportedDataRatesRxIndex"))
if mibBuilder.loadTexts: coDot11SupportedDataRatesRxEntry.setStatus('current')
coDot11SupportedDataRatesRxIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 8744, 5, 4, 3, 8, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 12)))
if mibBuilder.loadTexts: coDot11SupportedDataRatesRxIndex.setStatus('current')
coDot11SupportedDataRatesRxValue = MibTableColumn((1, 3, 6, 1, 4, 1, 8744, 5, 4, 3, 8, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(2, 127))).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDot11SupportedDataRatesRxValue.setStatus('current')
coDot11PhyOFDMTable = MibTable((1, 3, 6, 1, 4, 1, 8744, 5, 4, 3, 9), )
if mibBuilder.loadTexts: coDot11PhyOFDMTable.setStatus('current')
coDot11PhyOFDMEntry = MibTableRow((1, 3, 6, 1, 4, 1, 8744, 5, 4, 3, 9, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: coDot11PhyOFDMEntry.setStatus('current')
coDot11CurrentFrequency = MibTableColumn((1, 3, 6, 1, 4, 1, 8744, 5, 4, 3, 9, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 200))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: coDot11CurrentFrequency.setStatus('current')
coDot11TIThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 8744, 5, 4, 3, 9, 1, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: coDot11TIThreshold.setStatus('current')
coDot11FrequencyBandsSupported = MibTableColumn((1, 3, 6, 1, 4, 1, 8744, 5, 4, 3, 9, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 7))).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDot11FrequencyBandsSupported.setStatus('current')
coDot11MinimumSNRLevel = MibScalar((1, 3, 6, 1, 4, 1, 8744, 5, 4, 3, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 92))).setUnits('dBm').setMaxAccess("readwrite")
if mibBuilder.loadTexts: coDot11MinimumSNRLevel.setStatus('current')
coDot11SNRLevelNotificationEnabled = MibScalar((1, 3, 6, 1, 4, 1, 8744, 5, 4, 3, 11), ColubrisNotificationEnable().clone('enable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: coDot11SNRLevelNotificationEnabled.setStatus('current')
coDot11SNRLevelNotificationInterval = MibScalar((1, 3, 6, 1, 4, 1, 8744, 5, 4, 3, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1000000))).setUnits('minutes').setMaxAccess("readwrite")
if mibBuilder.loadTexts: coDot11SNRLevelNotificationInterval.setStatus('current')
coDot11CountryCode = MibScalar((1, 3, 6, 1, 4, 1, 8744, 5, 4, 3, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 8, 12, 31, 32, 36, 40, 48, 51, 56, 68, 76, 84, 96, 100, 112, 124, 152, 156, 158, 170, 188, 191, 196, 203, 208, 214, 218, 222, 233, 246, 250, 268, 276, 300, 320, 340, 344, 348, 352, 356, 360, 364, 372, 376, 380, 392, 393, 395, 396, 397, 398, 400, 404, 408, 410, 414, 422, 428, 438, 440, 442, 446, 458, 484, 492, 504, 512, 528, 554, 578, 586, 591, 604, 608, 616, 620, 630, 634, 642, 643, 682, 702, 703, 704, 705, 710, 716, 724, 752, 756, 760, 764, 780, 784, 788, 792, 804, 807, 818, 826, 827, 840, 858, 860, 862, 887))).clone(namedValues=NamedValues(("world", 1), ("albania", 8), ("algeria", 12), ("azerbaijan", 31), ("argentina", 32), ("australia", 36), ("austria", 40), ("bahrain", 48), ("armenia", 51), ("belgium", 56), ("bolivia", 68), ("brazil", 76), ("belize", 84), ("bruneiDarussalam", 96), ("bulgaria", 100), ("belarus", 112), ("canada", 124), ("chile", 152), ("china", 156), ("taiwan", 158), ("colombia", 170), ("costaRica", 188), ("croatia", 191), ("cyprus", 196), ("czechRepublic", 203), ("denmark", 208), ("dominicanRepublic", 214), ("ecuador", 218), ("elSalvador", 222), ("estonia", 233), ("finland", 246), ("france", 250), ("georgia", 268), ("germany", 276), ("greece", 300), ("guatemala", 320), ("honduras", 340), ("hongkong", 344), ("hungary", 348), ("iceland", 352), ("india", 356), ("indonesia", 360), ("iran", 364), ("ireland", 372), ("israel", 376), ("italy", 380), ("japanW52W53", 392), ("japanW52W53J52", 393), ("japanJ52", 395), ("japanJ5280211j", 396), ("japanClient", 397), ("kazakhstan", 398), ("jordan", 400), ("kenya", 404), ("northKorea", 408), ("southKorea", 410), ("kuwait", 414), ("lebanon", 422), ("latvia", 428), ("liechtenstein", 438), ("lithuania", 440), ("luxembourg", 442), ("macau", 446), ("malaysia", 458), ("mexico", 484), ("monaco", 492), ("morocco", 504), ("oman", 512), ("netherlands", 528), ("newZealand", 554), ("norway", 578), ("pakistan", 586), ("panama", 591), ("peru", 604), ("philippines", 608), ("poland", 616), ("portugal", 620), ("puertoRico", 630), ("qatar", 634), ("romania", 642), ("russianFederation", 643), ("saudiArabia", 682), ("singapore", 702), ("slovakia", 703), ("vietNam", 704), ("slovenia", 705), ("southAfrica", 710), ("zimbabwe", 716), ("spain", 724), ("sweden", 752), ("switzerland", 756), ("syria", 760), ("thailand", 764), ("trinidadAndTobago", 780), ("unitedArabEmirates", 784), ("tunisia", 788), ("turkey", 792), ("ukraine", 804), ("macedonia", 807), ("egypt", 818), ("unitedKingdom", 826), ("unitedKingdom58GHz", 827), ("unitedStates", 840), ("uruguay", 858), ("uzbekistan", 860), ("venezuela", 862), ("yemen", 887)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDot11CountryCode.setStatus('current')
coDot11PhyHTTable = MibTable((1, 3, 6, 1, 4, 1, 8744, 5, 4, 3, 14), )
if mibBuilder.loadTexts: coDot11PhyHTTable.setStatus('current')
coDot11PhyHTEntry = MibTableRow((1, 3, 6, 1, 4, 1, 8744, 5, 4, 3, 14, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: coDot11PhyHTEntry.setStatus('current')
coDot11FortyMHzOperationImplemented = MibTableColumn((1, 3, 6, 1, 4, 1, 8744, 5, 4, 3, 14, 1, 1), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDot11FortyMHzOperationImplemented.setStatus('current')
coDot11FortyMHzOperationEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 8744, 5, 4, 3, 14, 1, 2), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDot11FortyMHzOperationEnabled.setStatus('current')
coDot11CurrentPrimaryChannel = MibTableColumn((1, 3, 6, 1, 4, 1, 8744, 5, 4, 3, 14, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDot11CurrentPrimaryChannel.setStatus('current')
coDot11CurrentSecondaryChannel = MibTableColumn((1, 3, 6, 1, 4, 1, 8744, 5, 4, 3, 14, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDot11CurrentSecondaryChannel.setStatus('current')
coDot11GreenfieldOptionImplemented = MibTableColumn((1, 3, 6, 1, 4, 1, 8744, 5, 4, 3, 14, 1, 5), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDot11GreenfieldOptionImplemented.setStatus('current')
coDot11GreenfieldOptionEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 8744, 5, 4, 3, 14, 1, 6), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDot11GreenfieldOptionEnabled.setStatus('current')
coDot11ShortGIOptionInTwentyImplemented = MibTableColumn((1, 3, 6, 1, 4, 1, 8744, 5, 4, 3, 14, 1, 7), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDot11ShortGIOptionInTwentyImplemented.setStatus('current')
coDot11ShortGIOptionInTwentyEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 8744, 5, 4, 3, 14, 1, 8), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDot11ShortGIOptionInTwentyEnabled.setStatus('current')
coDot11ShortGIOptionInFortyImplemented = MibTableColumn((1, 3, 6, 1, 4, 1, 8744, 5, 4, 3, 14, 1, 9), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDot11ShortGIOptionInFortyImplemented.setStatus('current')
coDot11ShortGIOptionInFortyEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 8744, 5, 4, 3, 14, 1, 10), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDot11ShortGIOptionInFortyEnabled.setStatus('current')
coDot11HighestSupportedDataRate = MibTableColumn((1, 3, 6, 1, 4, 1, 8744, 5, 4, 3, 14, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 600))).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDot11HighestSupportedDataRate.setStatus('current')
coDot11RSNAStatsTable = MibTable((1, 3, 6, 1, 4, 1, 8744, 5, 4, 4), )
if mibBuilder.loadTexts: coDot11RSNAStatsTable.setStatus('current')
coDot11RSNAStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 8744, 5, 4, 4, 1), )
coVirtualAccessPointConfigEntry.registerAugmentions(("COLUBRIS-802DOT11-MIB", "coDot11RSNAStatsEntry"))
coDot11RSNAStatsEntry.setIndexNames(*coVirtualAccessPointConfigEntry.getIndexNames())
if mibBuilder.loadTexts: coDot11RSNAStatsEntry.setStatus('current')
coDot11RSNAStatsVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 8744, 5, 4, 4, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDot11RSNAStatsVersion.setStatus('current')
coDot11RSNAStatsSelectedPairwiseCipher = MibTableColumn((1, 3, 6, 1, 4, 1, 8744, 5, 4, 4, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(4, 4)).setFixedLength(4)).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDot11RSNAStatsSelectedPairwiseCipher.setStatus('current')
coDot11RSNAStatsTKIPICVErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 8744, 5, 4, 4, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDot11RSNAStatsTKIPICVErrors.setStatus('current')
coDot11RSNAStatsTKIPLocalMICFailures = MibTableColumn((1, 3, 6, 1, 4, 1, 8744, 5, 4, 4, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDot11RSNAStatsTKIPLocalMICFailures.setStatus('current')
coDot11RSNAStatsTKIPRemoteMICFailures = MibTableColumn((1, 3, 6, 1, 4, 1, 8744, 5, 4, 4, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDot11RSNAStatsTKIPRemoteMICFailures.setStatus('current')
coDot11RSNAStatsTKIPCounterMeasuresInvoked = MibTableColumn((1, 3, 6, 1, 4, 1, 8744, 5, 4, 4, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDot11RSNAStatsTKIPCounterMeasuresInvoked.setStatus('current')
coDot11RSNAStatsCCMPFormatErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 8744, 5, 4, 4, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDot11RSNAStatsCCMPFormatErrors.setStatus('current')
coDot11RSNAStatsCCMPReplays = MibTableColumn((1, 3, 6, 1, 4, 1, 8744, 5, 4, 4, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDot11RSNAStatsCCMPReplays.setStatus('current')
coDot11RSNAStatsCCMPDecryptErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 8744, 5, 4, 4, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDot11RSNAStatsCCMPDecryptErrors.setStatus('current')
coDot11RSNAStatsTKIPReplays = MibTableColumn((1, 3, 6, 1, 4, 1, 8744, 5, 4, 4, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDot11RSNAStatsTKIPReplays.setStatus('current')
coDot11RSNAStats4WayHandshakeFailures = MibTableColumn((1, 3, 6, 1, 4, 1, 8744, 5, 4, 4, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDot11RSNAStats4WayHandshakeFailures.setStatus('current')
coDot11ManagementMIBNotificationPrefix = MibIdentifier((1, 3, 6, 1, 4, 1, 8744, 5, 4, 5))
coDot11ManagementMIBNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 8744, 5, 4, 5, 0))
coDot11SNRLevelNotification = NotificationType((1, 3, 6, 1, 4, 1, 8744, 5, 4, 5, 0, 1)).setObjects(("IF-MIB", "ifIndex"), ("IF-MIB", "ifDescr"), ("COLUBRIS-VIRTUAL-AP-MIB", "coVirtualApSSID"), ("COLUBRIS-802DOT11-MIB", "coDot11CurrentSNRLevel"))
if mibBuilder.loadTexts: coDot11SNRLevelNotification.setStatus('current')
coDot11AssociationNotification = NotificationType((1, 3, 6, 1, 4, 1, 8744, 5, 4, 5, 0, 2)).setObjects(("IF-MIB", "ifIndex"), ("IF-MIB", "ifDescr"), ("COLUBRIS-802DOT11-MIB", "coDot11StationName"), ("COLUBRIS-802DOT11-MIB", "coDot11StationSSID"), ("COLUBRIS-802DOT11-MIB", "coDot11StationIPAddress"), ("COLUBRIS-802DOT11-MIB", "coDot11StationMACAddress"), ("COLUBRIS-802DOT11-MIB", "coDot11SignalLevel"), ("COLUBRIS-802DOT11-MIB", "coDot11SNR"), ("COLUBRIS-802DOT11-MIB", "coDot11TransmitRate"), ("COLUBRIS-802DOT11-MIB", "coDot11NumberOfUsers"))
if mibBuilder.loadTexts: coDot11AssociationNotification.setStatus('current')
coDot11UnauthorizedAPNotification = NotificationType((1, 3, 6, 1, 4, 1, 8744, 5, 4, 5, 0, 3)).setObjects(("IF-MIB", "ifIndex"), ("IF-MIB", "ifDescr"), ("COLUBRIS-802DOT11-MIB", "coDot11ScanSSID"), ("COLUBRIS-802DOT11-MIB", "coDot11ScanMacAddress"), ("COLUBRIS-802DOT11-MIB", "coDot11ScanChannel"), ("COLUBRIS-802DOT11-MIB", "coDot11ScanPHYType"))
if mibBuilder.loadTexts: coDot11UnauthorizedAPNotification.setStatus('current')
coDot11Conformance = MibIdentifier((1, 3, 6, 1, 4, 1, 8744, 5, 4, 6))
coDot11Groups = MibIdentifier((1, 3, 6, 1, 4, 1, 8744, 5, 4, 6, 1))
coDot11Compliances = MibIdentifier((1, 3, 6, 1, 4, 1, 8744, 5, 4, 6, 2))
coDot11Compliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 8744, 5, 4, 6, 2, 1)).setObjects(("COLUBRIS-802DOT11-MIB", "coDot11APBaseGroup"), ("COLUBRIS-802DOT11-MIB", "coDot11MACBaseGroup"), ("COLUBRIS-802DOT11-MIB", "coDot11CountersGroup"), ("COLUBRIS-802DOT11-MIB", "coDot11SmtAuthenticationAlgorithmsGroup"), ("COLUBRIS-802DOT11-MIB", "coDot11PhyConfigComplianceGroup"), ("COLUBRIS-802DOT11-MIB", "coDot11PhyConfigGroup"), ("COLUBRIS-802DOT11-MIB", "coDot11APPrivacyGroup"), ("COLUBRIS-802DOT11-MIB", "coDot11MACStatisticsGroup"), ("COLUBRIS-802DOT11-MIB", "coDot11PhyAntennaComplianceGroup"), ("COLUBRIS-802DOT11-MIB", "coDot11PhyRegDomainsSupportGroup"), ("COLUBRIS-802DOT11-MIB", "coDot11PhyAntennasListGroup"), ("COLUBRIS-802DOT11-MIB", "coDot11PhyRateGroup"), ("COLUBRIS-802DOT11-MIB", "coDot11AssociationGroup"), ("COLUBRIS-802DOT11-MIB", "coDot11AssociationConfigGroup"), ("COLUBRIS-802DOT11-MIB", "coDot11ScanGroup"), ("COLUBRIS-802DOT11-MIB", "coDot11ScanConfigGroup"), ("COLUBRIS-802DOT11-MIB", "coDot11WDSComplianceGroup"), ("COLUBRIS-802DOT11-MIB", "coDot11NotificationGroup"), ("COLUBRIS-802DOT11-MIB", "coDot11StationHTGroup"), ("COLUBRIS-802DOT11-MIB", "coDot11PhyDSSSComplianceGroup"), ("COLUBRIS-802DOT11-MIB", "coDot11PhyOFDMComplianceGroup"), ("COLUBRIS-802DOT11-MIB", "coDot11PhyHTComplianceGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    coDot11Compliance = coDot11Compliance.setStatus('deprecated')
coDot11RSNCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 8744, 5, 4, 6, 2, 2)).setObjects(("COLUBRIS-802DOT11-MIB", "coDot11RSNBase"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    coDot11RSNCompliance = coDot11RSNCompliance.setStatus('current')
coDot11ComplianceExt = ModuleCompliance((1, 3, 6, 1, 4, 1, 8744, 5, 4, 6, 2, 3)).setObjects(("COLUBRIS-802DOT11-MIB", "coDot11APBaseGroupExt"), ("COLUBRIS-802DOT11-MIB", "coDot11MACBaseGroup"), ("COLUBRIS-802DOT11-MIB", "coDot11CountersGroup"), ("COLUBRIS-802DOT11-MIB", "coDot11SmtAuthenticationAlgorithmsGroup"), ("COLUBRIS-802DOT11-MIB", "coDot11PhyConfigComplianceGroup"), ("COLUBRIS-802DOT11-MIB", "coDot11PhyConfigGroup"), ("COLUBRIS-802DOT11-MIB", "coDot11APPrivacyGroup"), ("COLUBRIS-802DOT11-MIB", "coDot11MACStatisticsGroup"), ("COLUBRIS-802DOT11-MIB", "coDot11PhyAntennaComplianceGroup"), ("COLUBRIS-802DOT11-MIB", "coDot11PhyRegDomainsSupportGroup"), ("COLUBRIS-802DOT11-MIB", "coDot11PhyAntennasListGroup"), ("COLUBRIS-802DOT11-MIB", "coDot11PhyRateGroup"), ("COLUBRIS-802DOT11-MIB", "coDot11AssociationGroup"), ("COLUBRIS-802DOT11-MIB", "coDot11AssociationConfigGroup"), ("COLUBRIS-802DOT11-MIB", "coDot11ScanGroup"), ("COLUBRIS-802DOT11-MIB", "coDot11ScanConfigGroup"), ("COLUBRIS-802DOT11-MIB", "coDot11WDSComplianceGroup"), ("COLUBRIS-802DOT11-MIB", "coDot11NotificationGroup"), ("COLUBRIS-802DOT11-MIB", "coDot11StationHTGroup"), ("COLUBRIS-802DOT11-MIB", "coDot11StationDetectionGroup"), ("COLUBRIS-802DOT11-MIB", "coDot11PhyDSSSComplianceGroup"), ("COLUBRIS-802DOT11-MIB", "coDot11PhyOFDMComplianceGroup"), ("COLUBRIS-802DOT11-MIB", "coDot11PhyHTComplianceGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    coDot11ComplianceExt = coDot11ComplianceExt.setStatus('current')
coDot11APBaseGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 8744, 5, 4, 6, 1, 1)).setObjects(("COLUBRIS-802DOT11-MIB", "coDot11RelayBetweenStation"), ("COLUBRIS-802DOT11-MIB", "coDot11PrivacyOptionImplemented"), ("COLUBRIS-802DOT11-MIB", "coDot11RSNAOptionImplemented"), ("COLUBRIS-802DOT11-MIB", "coDot11BeaconPeriod"), ("COLUBRIS-802DOT11-MIB", "coDot11DTIMPeriod"), ("COLUBRIS-802DOT11-MIB", "coDot11NumberOfUsers"), ("COLUBRIS-802DOT11-MIB", "coDot11AddToAssociationNotification"), ("COLUBRIS-802DOT11-MIB", "coDot11PhyTxPowerAdminLevel"), ("COLUBRIS-802DOT11-MIB", "coDot11PhyTxPowerOperLevel"), ("COLUBRIS-802DOT11-MIB", "coDot11BSSID"), ("COLUBRIS-802DOT11-MIB", "coDot11AdminMinimumDataRate"), ("COLUBRIS-802DOT11-MIB", "coDot11AdminMaximumDataRate"), ("COLUBRIS-802DOT11-MIB", "coDot11HighThroughputOptionImplemented"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    coDot11APBaseGroup = coDot11APBaseGroup.setStatus('deprecated')
coDot11APPrivacyGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 8744, 5, 4, 6, 1, 2)).setObjects(("COLUBRIS-802DOT11-MIB", "coDot11PrivacyInvoked"), ("COLUBRIS-802DOT11-MIB", "coDot11ExcludeUnencrypted"), ("COLUBRIS-802DOT11-MIB", "coDot11WEPICVErrorCount"), ("COLUBRIS-802DOT11-MIB", "coDot11WEPExcludedCount"), ("COLUBRIS-802DOT11-MIB", "coDot11WEPDefaultKeyID"), ("COLUBRIS-802DOT11-MIB", "coDot11WEPDefaultKey1Value"), ("COLUBRIS-802DOT11-MIB", "coDot11WEPDefaultKey2Value"), ("COLUBRIS-802DOT11-MIB", "coDot11WEPDefaultKey3Value"), ("COLUBRIS-802DOT11-MIB", "coDot11WEPDefaultKey4Value"), ("COLUBRIS-802DOT11-MIB", "coDot11RSNAEnabled"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    coDot11APPrivacyGroup = coDot11APPrivacyGroup.setStatus('current')
coDot11MACBaseGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 8744, 5, 4, 6, 1, 3)).setObjects(("COLUBRIS-802DOT11-MIB", "coDot11MACAddress"), ("COLUBRIS-802DOT11-MIB", "coDot11RTSThreshold"), ("COLUBRIS-802DOT11-MIB", "coDot11ShortRetryLimit"), ("COLUBRIS-802DOT11-MIB", "coDot11LongRetryLimit"), ("COLUBRIS-802DOT11-MIB", "coDot11FragmentationThreshold"), ("COLUBRIS-802DOT11-MIB", "coDot11MaxTransmitMSDULifetime"), ("COLUBRIS-802DOT11-MIB", "coDot11MaxReceiveLifetime"), ("COLUBRIS-802DOT11-MIB", "coDot11ManufacturerID"), ("COLUBRIS-802DOT11-MIB", "coDot11ProductID"), ("COLUBRIS-802DOT11-MIB", "coDot11RadioType"), ("COLUBRIS-802DOT11-MIB", "coDot11StationDetectionState"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    coDot11MACBaseGroup = coDot11MACBaseGroup.setStatus('current')
coDot11MACStatisticsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 8744, 5, 4, 6, 1, 4)).setObjects(("COLUBRIS-802DOT11-MIB", "coDot11RetryCount"), ("COLUBRIS-802DOT11-MIB", "coDot11MultipleRetryCount"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    coDot11MACStatisticsGroup = coDot11MACStatisticsGroup.setStatus('current')
coDot11SmtAuthenticationAlgorithmsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 8744, 5, 4, 6, 1, 5)).setObjects(("COLUBRIS-802DOT11-MIB", "coDot11AuthenticationAlgorithm"), ("COLUBRIS-802DOT11-MIB", "coDot11AuthenticationAlgorithmsEnable"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    coDot11SmtAuthenticationAlgorithmsGroup = coDot11SmtAuthenticationAlgorithmsGroup.setStatus('current')
coDot11PhyConfigComplianceGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 8744, 5, 4, 6, 1, 6)).setObjects(("COLUBRIS-802DOT11-MIB", "coDot11MinimumSNRLevel"), ("COLUBRIS-802DOT11-MIB", "coDot11CurrentSNRLevel"), ("COLUBRIS-802DOT11-MIB", "coDot11Sensitivity"), ("COLUBRIS-802DOT11-MIB", "coDot11PhyAdminStatus"), ("COLUBRIS-802DOT11-MIB", "coDot11PhyOperStatus"), ("COLUBRIS-802DOT11-MIB", "coDot11PHYType"), ("COLUBRIS-802DOT11-MIB", "coDot11CurrentRegDomain"), ("COLUBRIS-802DOT11-MIB", "coDot11TempType"), ("COLUBRIS-802DOT11-MIB", "coDot11CurrentOperFrequency"), ("COLUBRIS-802DOT11-MIB", "coDot11CurrentOperPHYType"), ("COLUBRIS-802DOT11-MIB", "coDot11RadioEnabled"), ("COLUBRIS-802DOT11-MIB", "coDot11OperatingMode"), ("COLUBRIS-802DOT11-MIB", "coDot11AutoChannelEnabled"), ("COLUBRIS-802DOT11-MIB", "coDot11AutoChannelInterval"), ("COLUBRIS-802DOT11-MIB", "coDot11AutoPowerEnabled"), ("COLUBRIS-802DOT11-MIB", "coDot11AutoPowerInterval"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    coDot11PhyConfigComplianceGroup = coDot11PhyConfigComplianceGroup.setStatus('current')
coDot11PhyConfigGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 8744, 5, 4, 6, 1, 7)).setObjects(("COLUBRIS-802DOT11-MIB", "coDot11SNRLevelNotificationEnabled"), ("COLUBRIS-802DOT11-MIB", "coDot11SNRLevelNotificationInterval"), ("COLUBRIS-802DOT11-MIB", "coDot11CountryCode"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    coDot11PhyConfigGroup = coDot11PhyConfigGroup.setStatus('current')
coDot11PhyAntennaComplianceGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 8744, 5, 4, 6, 1, 8)).setObjects(("COLUBRIS-802DOT11-MIB", "coDot11CurrentTxAntenna"), ("COLUBRIS-802DOT11-MIB", "coDot11DiversitySupport"), ("COLUBRIS-802DOT11-MIB", "coDot11CurrentRxAntenna"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    coDot11PhyAntennaComplianceGroup = coDot11PhyAntennaComplianceGroup.setStatus('current')
coDot11PhyDSSSComplianceGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 8744, 5, 4, 6, 1, 9)).setObjects(("COLUBRIS-802DOT11-MIB", "coDot11CurrentChannel"), ("COLUBRIS-802DOT11-MIB", "coDot11CCAModeSupported"), ("COLUBRIS-802DOT11-MIB", "coDot11CurrentCCAMode"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    coDot11PhyDSSSComplianceGroup = coDot11PhyDSSSComplianceGroup.setStatus('current')
coDot11PhyRegDomainsSupportGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 8744, 5, 4, 6, 1, 10)).setObjects(("COLUBRIS-802DOT11-MIB", "coDot11RegDomainsSupportValue"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    coDot11PhyRegDomainsSupportGroup = coDot11PhyRegDomainsSupportGroup.setStatus('current')
coDot11PhyAntennasListGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 8744, 5, 4, 6, 1, 11)).setObjects(("COLUBRIS-802DOT11-MIB", "coDot11SupportedTxAntenna"), ("COLUBRIS-802DOT11-MIB", "coDot11SupportedRxAntenna"), ("COLUBRIS-802DOT11-MIB", "coDot11DiversitySelectionRx"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    coDot11PhyAntennasListGroup = coDot11PhyAntennasListGroup.setStatus('current')
coDot11PhyRateGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 8744, 5, 4, 6, 1, 12)).setObjects(("COLUBRIS-802DOT11-MIB", "coDot11SupportedDataRatesTxValue"), ("COLUBRIS-802DOT11-MIB", "coDot11SupportedDataRatesRxValue"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    coDot11PhyRateGroup = coDot11PhyRateGroup.setStatus('current')
coDot11CountersGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 8744, 5, 4, 6, 1, 13)).setObjects(("COLUBRIS-802DOT11-MIB", "coDot11TransmittedFragmentCount"), ("COLUBRIS-802DOT11-MIB", "coDot11MulticastTransmittedFrameCount"), ("COLUBRIS-802DOT11-MIB", "coDot11FailedCount"), ("COLUBRIS-802DOT11-MIB", "coDot11FrameDuplicateCount"), ("COLUBRIS-802DOT11-MIB", "coDot11RTSSuccessCount"), ("COLUBRIS-802DOT11-MIB", "coDot11RTSFailureCount"), ("COLUBRIS-802DOT11-MIB", "coDot11ACKFailureCount"), ("COLUBRIS-802DOT11-MIB", "coDot11ReceivedFragmentCount"), ("COLUBRIS-802DOT11-MIB", "coDot11MulticastReceivedFrameCount"), ("COLUBRIS-802DOT11-MIB", "coDot11FCSErrorCount"), ("COLUBRIS-802DOT11-MIB", "coDot11WEPUndecryptableCount"), ("COLUBRIS-802DOT11-MIB", "coDot11TransmittedFrameCount"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    coDot11CountersGroup = coDot11CountersGroup.setStatus('current')
coDot11AssociationGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 8744, 5, 4, 6, 1, 14)).setObjects(("COLUBRIS-802DOT11-MIB", "coDot11StationMACAddress"), ("COLUBRIS-802DOT11-MIB", "coDot11StationConnectTime"), ("COLUBRIS-802DOT11-MIB", "coDot11SignalLevel"), ("COLUBRIS-802DOT11-MIB", "coDot11NoiseLevel"), ("COLUBRIS-802DOT11-MIB", "coDot11SNR"), ("COLUBRIS-802DOT11-MIB", "coDot11PktsRate1"), ("COLUBRIS-802DOT11-MIB", "coDot11PktsRate2"), ("COLUBRIS-802DOT11-MIB", "coDot11PktsRate5dot5"), ("COLUBRIS-802DOT11-MIB", "coDot11PktsRate6"), ("COLUBRIS-802DOT11-MIB", "coDot11PktsRate9"), ("COLUBRIS-802DOT11-MIB", "coDot11PktsRate11"), ("COLUBRIS-802DOT11-MIB", "coDot11PktsRate12"), ("COLUBRIS-802DOT11-MIB", "coDot11PktsRate18"), ("COLUBRIS-802DOT11-MIB", "coDot11PktsRate24"), ("COLUBRIS-802DOT11-MIB", "coDot11PktsRate36"), ("COLUBRIS-802DOT11-MIB", "coDot11PktsRate48"), ("COLUBRIS-802DOT11-MIB", "coDot11PktsRate54"), ("COLUBRIS-802DOT11-MIB", "coDot11TransmitRate"), ("COLUBRIS-802DOT11-MIB", "coDot11ReceiveRate"), ("COLUBRIS-802DOT11-MIB", "coDot11InPkts"), ("COLUBRIS-802DOT11-MIB", "coDot11OutPkts"), ("COLUBRIS-802DOT11-MIB", "coDot11InOctets"), ("COLUBRIS-802DOT11-MIB", "coDot11OutOctets"), ("COLUBRIS-802DOT11-MIB", "coDot11StationSSID"), ("COLUBRIS-802DOT11-MIB", "coDot11StationName"), ("COLUBRIS-802DOT11-MIB", "coDot11StationIPAddress"), ("COLUBRIS-802DOT11-MIB", "coDot11StationVLAN"), ("COLUBRIS-802DOT11-MIB", "coDot11StationLocalInterface"), ("COLUBRIS-802DOT11-MIB", "coDot11StaHT"), ("COLUBRIS-802DOT11-MIB", "coDot11StaEncryptionType"), ("COLUBRIS-802DOT11-MIB", "coDot11PktsTxRate1"), ("COLUBRIS-802DOT11-MIB", "coDot11PktsTxRate2"), ("COLUBRIS-802DOT11-MIB", "coDot11PktsTxRate5dot5"), ("COLUBRIS-802DOT11-MIB", "coDot11PktsTxRate11"), ("COLUBRIS-802DOT11-MIB", "coDot11PktsTxRate6"), ("COLUBRIS-802DOT11-MIB", "coDot11PktsTxRate9"), ("COLUBRIS-802DOT11-MIB", "coDot11PktsTxRate12"), ("COLUBRIS-802DOT11-MIB", "coDot11PktsTxRate18"), ("COLUBRIS-802DOT11-MIB", "coDot11PktsTxRate24"), ("COLUBRIS-802DOT11-MIB", "coDot11PktsTxRate36"), ("COLUBRIS-802DOT11-MIB", "coDot11PktsTxRate48"), ("COLUBRIS-802DOT11-MIB", "coDot11PktsTxRate54"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    coDot11AssociationGroup = coDot11AssociationGroup.setStatus('current')
coDot11AssociationConfigGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 8744, 5, 4, 6, 1, 15)).setObjects(("COLUBRIS-802DOT11-MIB", "coDot11AssociationNotificationEnabled"), ("COLUBRIS-802DOT11-MIB", "coDot11AssociationNotificationInterval"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    coDot11AssociationConfigGroup = coDot11AssociationConfigGroup.setStatus('current')
coDot11ScanGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 8744, 5, 4, 6, 1, 16)).setObjects(("COLUBRIS-802DOT11-MIB", "coDot11ScanMacAddress"), ("COLUBRIS-802DOT11-MIB", "coDot11ScanChannel"), ("COLUBRIS-802DOT11-MIB", "coDot11ScanSSID"), ("COLUBRIS-802DOT11-MIB", "coDot11ScanSignalLevel"), ("COLUBRIS-802DOT11-MIB", "coDot11ScanNoiseLevel"), ("COLUBRIS-802DOT11-MIB", "coDot11ScanSNR"), ("COLUBRIS-802DOT11-MIB", "coDot11ScanStatus"), ("COLUBRIS-802DOT11-MIB", "coDot11ScanPHYType"), ("COLUBRIS-802DOT11-MIB", "coDot11ScanInactivityTime"), ("COLUBRIS-802DOT11-MIB", "coDot11ScanNetworkType"), ("COLUBRIS-802DOT11-MIB", "coDot11ScanSecurity"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    coDot11ScanGroup = coDot11ScanGroup.setStatus('current')
coDot11ScanConfigGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 8744, 5, 4, 6, 1, 17)).setObjects(("COLUBRIS-802DOT11-MIB", "coDot11ScanEnabled"), ("COLUBRIS-802DOT11-MIB", "coDot11ScanPeriodicity"), ("COLUBRIS-802DOT11-MIB", "coDot11ScanAuthorizedListURL"), ("COLUBRIS-802DOT11-MIB", "coDot11UnauthorizedAPNotificationEnabled"), ("COLUBRIS-802DOT11-MIB", "coDot11UnauthorizedAPNotificationInterval"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    coDot11ScanConfigGroup = coDot11ScanConfigGroup.setStatus('current')
coDot11WDSComplianceGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 8744, 5, 4, 6, 1, 18)).setObjects(("COLUBRIS-802DOT11-MIB", "coDot11WDSPortMacAddress"), ("COLUBRIS-802DOT11-MIB", "coDot11WDSPortCurrentRate"), ("COLUBRIS-802DOT11-MIB", "coDot11WDSPortSNRLevel"), ("COLUBRIS-802DOT11-MIB", "coDot11WDSPortTxPackets"), ("COLUBRIS-802DOT11-MIB", "coDot11WDSPortTxDropped"), ("COLUBRIS-802DOT11-MIB", "coDot11WDSPortTxErrors"), ("COLUBRIS-802DOT11-MIB", "coDot11WDSPortRxPackets"), ("COLUBRIS-802DOT11-MIB", "coDot11WDSPortRxDropped"), ("COLUBRIS-802DOT11-MIB", "coDot11WDSPortRxErrors"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    coDot11WDSComplianceGroup = coDot11WDSComplianceGroup.setStatus('current')
coDot11NotificationGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 8744, 5, 4, 6, 1, 19)).setObjects(("COLUBRIS-802DOT11-MIB", "coDot11SNRLevelNotification"), ("COLUBRIS-802DOT11-MIB", "coDot11AssociationNotification"), ("COLUBRIS-802DOT11-MIB", "coDot11UnauthorizedAPNotification"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    coDot11NotificationGroup = coDot11NotificationGroup.setStatus('current')
coDot11RSNBase = ObjectGroup((1, 3, 6, 1, 4, 1, 8744, 5, 4, 6, 1, 20)).setObjects(("COLUBRIS-802DOT11-MIB", "coDot11RSNAStatsVersion"), ("COLUBRIS-802DOT11-MIB", "coDot11RSNAStatsSelectedPairwiseCipher"), ("COLUBRIS-802DOT11-MIB", "coDot11RSNAStatsTKIPICVErrors"), ("COLUBRIS-802DOT11-MIB", "coDot11RSNAStatsTKIPLocalMICFailures"), ("COLUBRIS-802DOT11-MIB", "coDot11RSNAStatsTKIPRemoteMICFailures"), ("COLUBRIS-802DOT11-MIB", "coDot11RSNAStatsTKIPCounterMeasuresInvoked"), ("COLUBRIS-802DOT11-MIB", "coDot11RSNAStatsCCMPFormatErrors"), ("COLUBRIS-802DOT11-MIB", "coDot11RSNAStatsCCMPReplays"), ("COLUBRIS-802DOT11-MIB", "coDot11RSNAStatsCCMPDecryptErrors"), ("COLUBRIS-802DOT11-MIB", "coDot11RSNAStatsTKIPReplays"), ("COLUBRIS-802DOT11-MIB", "coDot11RSNAStats4WayHandshakeFailures"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    coDot11RSNBase = coDot11RSNBase.setStatus('current')
coDot11PhyOFDMComplianceGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 8744, 5, 4, 6, 1, 21)).setObjects(("COLUBRIS-802DOT11-MIB", "coDot11CurrentFrequency"), ("COLUBRIS-802DOT11-MIB", "coDot11TIThreshold"), ("COLUBRIS-802DOT11-MIB", "coDot11FrequencyBandsSupported"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    coDot11PhyOFDMComplianceGroup = coDot11PhyOFDMComplianceGroup.setStatus('current')
coDot11StationHTGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 8744, 5, 4, 6, 1, 22)).setObjects(("COLUBRIS-802DOT11-MIB", "coDot11StaTransmitMCS"), ("COLUBRIS-802DOT11-MIB", "coDot11StaReceiveMCS"), ("COLUBRIS-802DOT11-MIB", "coDot11StaChannelWidth"), ("COLUBRIS-802DOT11-MIB", "coDot11StaShortGI"), ("COLUBRIS-802DOT11-MIB", "coDot11StaPktsTxMCS0"), ("COLUBRIS-802DOT11-MIB", "coDot11StaPktsTxMCS1"), ("COLUBRIS-802DOT11-MIB", "coDot11StaPktsTxMCS2"), ("COLUBRIS-802DOT11-MIB", "coDot11StaPktsTxMCS3"), ("COLUBRIS-802DOT11-MIB", "coDot11StaPktsTxMCS4"), ("COLUBRIS-802DOT11-MIB", "coDot11StaPktsTxMCS5"), ("COLUBRIS-802DOT11-MIB", "coDot11StaPktsTxMCS6"), ("COLUBRIS-802DOT11-MIB", "coDot11StaPktsTxMCS7"), ("COLUBRIS-802DOT11-MIB", "coDot11StaPktsTxMCS8"), ("COLUBRIS-802DOT11-MIB", "coDot11StaPktsTxMCS9"), ("COLUBRIS-802DOT11-MIB", "coDot11StaPktsTxMCS10"), ("COLUBRIS-802DOT11-MIB", "coDot11StaPktsTxMCS11"), ("COLUBRIS-802DOT11-MIB", "coDot11StaPktsTxMCS12"), ("COLUBRIS-802DOT11-MIB", "coDot11StaPktsTxMCS13"), ("COLUBRIS-802DOT11-MIB", "coDot11StaPktsTxMCS14"), ("COLUBRIS-802DOT11-MIB", "coDot11StaPktsTxMCS15"), ("COLUBRIS-802DOT11-MIB", "coDot11StaPktsRxMCS0"), ("COLUBRIS-802DOT11-MIB", "coDot11StaPktsRxMCS1"), ("COLUBRIS-802DOT11-MIB", "coDot11StaPktsRxMCS2"), ("COLUBRIS-802DOT11-MIB", "coDot11StaPktsRxMCS3"), ("COLUBRIS-802DOT11-MIB", "coDot11StaPktsRxMCS4"), ("COLUBRIS-802DOT11-MIB", "coDot11StaPktsRxMCS5"), ("COLUBRIS-802DOT11-MIB", "coDot11StaPktsRxMCS6"), ("COLUBRIS-802DOT11-MIB", "coDot11StaPktsRxMCS7"), ("COLUBRIS-802DOT11-MIB", "coDot11StaPktsRxMCS8"), ("COLUBRIS-802DOT11-MIB", "coDot11StaPktsRxMCS9"), ("COLUBRIS-802DOT11-MIB", "coDot11StaPktsRxMCS10"), ("COLUBRIS-802DOT11-MIB", "coDot11StaPktsRxMCS11"), ("COLUBRIS-802DOT11-MIB", "coDot11StaPktsRxMCS12"), ("COLUBRIS-802DOT11-MIB", "coDot11StaPktsRxMCS13"), ("COLUBRIS-802DOT11-MIB", "coDot11StaPktsRxMCS14"), ("COLUBRIS-802DOT11-MIB", "coDot11StaPktsRxMCS15"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    coDot11StationHTGroup = coDot11StationHTGroup.setStatus('current')
coDot11PhyHTComplianceGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 8744, 5, 4, 6, 1, 23)).setObjects(("COLUBRIS-802DOT11-MIB", "coDot11FortyMHzOperationImplemented"), ("COLUBRIS-802DOT11-MIB", "coDot11FortyMHzOperationEnabled"), ("COLUBRIS-802DOT11-MIB", "coDot11CurrentPrimaryChannel"), ("COLUBRIS-802DOT11-MIB", "coDot11CurrentSecondaryChannel"), ("COLUBRIS-802DOT11-MIB", "coDot11GreenfieldOptionImplemented"), ("COLUBRIS-802DOT11-MIB", "coDot11GreenfieldOptionEnabled"), ("COLUBRIS-802DOT11-MIB", "coDot11ShortGIOptionInTwentyImplemented"), ("COLUBRIS-802DOT11-MIB", "coDot11ShortGIOptionInTwentyEnabled"), ("COLUBRIS-802DOT11-MIB", "coDot11ShortGIOptionInFortyImplemented"), ("COLUBRIS-802DOT11-MIB", "coDot11ShortGIOptionInFortyEnabled"), ("COLUBRIS-802DOT11-MIB", "coDot11HighestSupportedDataRate"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    coDot11PhyHTComplianceGroup = coDot11PhyHTComplianceGroup.setStatus('current')
coDot11APBaseGroupExt = ObjectGroup((1, 3, 6, 1, 4, 1, 8744, 5, 4, 6, 1, 24)).setObjects(("COLUBRIS-802DOT11-MIB", "coDot11RelayBetweenStation"), ("COLUBRIS-802DOT11-MIB", "coDot11PrivacyOptionImplemented"), ("COLUBRIS-802DOT11-MIB", "coDot11RSNAOptionImplemented"), ("COLUBRIS-802DOT11-MIB", "coDot11BeaconPeriod"), ("COLUBRIS-802DOT11-MIB", "coDot11DTIMPeriod"), ("COLUBRIS-802DOT11-MIB", "coDot11NumberOfUsers"), ("COLUBRIS-802DOT11-MIB", "coDot11AddToAssociationNotification"), ("COLUBRIS-802DOT11-MIB", "coDot11PhyTxPowerAdminLevel"), ("COLUBRIS-802DOT11-MIB", "coDot11PhyTxPowerOperLevel"), ("COLUBRIS-802DOT11-MIB", "coDot11BSSID"), ("COLUBRIS-802DOT11-MIB", "coDot11HighThroughputOptionImplemented"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    coDot11APBaseGroupExt = coDot11APBaseGroupExt.setStatus('current')
coDot11StationDetectionGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 8744, 5, 4, 6, 1, 25)).setObjects(("COLUBRIS-802DOT11-MIB", "coDot11NbDetectedStation"), ("COLUBRIS-802DOT11-MIB", "coDot11DetStaMacAddress"), ("COLUBRIS-802DOT11-MIB", "coDot11DetStaChannel"), ("COLUBRIS-802DOT11-MIB", "coDot11DetStaSignalLevel"), ("COLUBRIS-802DOT11-MIB", "coDot11DetStaNoiseLevel"), ("COLUBRIS-802DOT11-MIB", "coDot11DetStaNbProbeReq"), ("COLUBRIS-802DOT11-MIB", "coDot11DetStaRate"), ("COLUBRIS-802DOT11-MIB", "coDot11DetStaSSID"), ("COLUBRIS-802DOT11-MIB", "coDot11DetStaTimeDiscovered"), ("COLUBRIS-802DOT11-MIB", "coDot11DetStaTimeLastSeen"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    coDot11StationDetectionGroup = coDot11StationDetectionGroup.setStatus('current')
mibBuilder.exportSymbols("COLUBRIS-802DOT11-MIB", coDot11DetStaNoiseLevel=coDot11DetStaNoiseLevel, coDot11OperationTable=coDot11OperationTable, coDot11MulticastTransmittedFrameCount=coDot11MulticastTransmittedFrameCount, coDot11SupportedDataRatesTxEntry=coDot11SupportedDataRatesTxEntry, coDot11PktsRate48=coDot11PktsRate48, coDot11WEPDefaultKey1Value=coDot11WEPDefaultKey1Value, coDot11PhyAntennasListGroup=coDot11PhyAntennasListGroup, coDot11ReceiveRate=coDot11ReceiveRate, coDot11StaPktsRxMCS2=coDot11StaPktsRxMCS2, coDot11OutPkts=coDot11OutPkts, coDot11FragmentationThreshold=coDot11FragmentationThreshold, coDot11InOctets=coDot11InOctets, coDot11RegDomainsSupportIndex=coDot11RegDomainsSupportIndex, coDot11RSNAStatsTable=coDot11RSNAStatsTable, coDot11StaPktsRxMCS9=coDot11StaPktsRxMCS9, coDot11PhyDSSSComplianceGroup=coDot11PhyDSSSComplianceGroup, coDot11StaTransmitMCS=coDot11StaTransmitMCS, coDot11MACAddress=coDot11MACAddress, coDot11CurrentFrequency=coDot11CurrentFrequency, coDot11AuthenticationAlgorithmsEnable=coDot11AuthenticationAlgorithmsEnable, coDot11PktsRate1=coDot11PktsRate1, coDot11PhyConfigEntry=coDot11PhyConfigEntry, coDot11AutoPowerInterval=coDot11AutoPowerInterval, coDot11DetStaIndex=coDot11DetStaIndex, coDot11StationIPAddress=coDot11StationIPAddress, coDot11AntennaListIndex=coDot11AntennaListIndex, coDot11PhyTxPowerAdminLevel=coDot11PhyTxPowerAdminLevel, coDot11StationVLAN=coDot11StationVLAN, coDot11WDSPortTable=coDot11WDSPortTable, coDot11RadioType=coDot11RadioType, coDot11RegDomainsSupportedEntry=coDot11RegDomainsSupportedEntry, coDot11DetStaSSID=coDot11DetStaSSID, coDot11DiversitySupport=coDot11DiversitySupport, coDot11PktsRate5dot5=coDot11PktsRate5dot5, coDot11PktsTxRate54=coDot11PktsTxRate54, coDot11MACStatisticsGroup=coDot11MACStatisticsGroup, coDot11AssociationTable=coDot11AssociationTable, WEPKeytype=WEPKeytype, coDot11AccessPointConfigEntry=coDot11AccessPointConfigEntry, coDot11CurrentRxAntenna=coDot11CurrentRxAntenna, coDot11PhyTxPowerOperLevel=coDot11PhyTxPowerOperLevel, coDot11StaPktsTxMCS8=coDot11StaPktsTxMCS8, coDot11ScanAuthorizedListURL=coDot11ScanAuthorizedListURL, coDot11DiversitySelectionRx=coDot11DiversitySelectionRx, coDot11RSNAStatsCCMPDecryptErrors=coDot11RSNAStatsCCMPDecryptErrors, coDot11PhyAntennaEntry=coDot11PhyAntennaEntry, coDot11PktsRate12=coDot11PktsRate12, coDot11StaPktsTxMCS10=coDot11StaPktsTxMCS10, coDot11CurrentCCAMode=coDot11CurrentCCAMode, coDot11CurrentOperPHYType=coDot11CurrentOperPHYType, coDot11ScanPeriodicity=coDot11ScanPeriodicity, coDot11FortyMHzOperationImplemented=coDot11FortyMHzOperationImplemented, coDot11RSNAStatsTKIPReplays=coDot11RSNAStatsTKIPReplays, coDot11DetStaMacAddress=coDot11DetStaMacAddress, coDot11PktsTxRate2=coDot11PktsTxRate2, coDot11TransmittedFrameCount=coDot11TransmittedFrameCount, coDot11AssociationNotificationEnabled=coDot11AssociationNotificationEnabled, coDot11CountersEntry=coDot11CountersEntry, coDot11SupportedDataRatesRxTable=coDot11SupportedDataRatesRxTable, coDot11NbDetectedStation=coDot11NbDetectedStation, coDot11InPkts=coDot11InPkts, coDot11mac=coDot11mac, coDot11StationMACAddress=coDot11StationMACAddress, coDot11WDSPortTxPackets=coDot11WDSPortTxPackets, coDot11StationConnectTime=coDot11StationConnectTime, coDot11StaHT=coDot11StaHT, coDot11ComplianceExt=coDot11ComplianceExt, coDot11PhyAntennaComplianceGroup=coDot11PhyAntennaComplianceGroup, coDot11ShortGIOptionInTwentyEnabled=coDot11ShortGIOptionInTwentyEnabled, coDot11RSNAStatsSelectedPairwiseCipher=coDot11RSNAStatsSelectedPairwiseCipher, coDot11StationHTEntry=coDot11StationHTEntry, coDot11RetryCount=coDot11RetryCount, coDot11StationDetectionGroup=coDot11StationDetectionGroup, coDot11StaPktsRxMCS12=coDot11StaPktsRxMCS12, coDot11ShortGIOptionInFortyImplemented=coDot11ShortGIOptionInFortyImplemented, coDot11WDSPortTxErrors=coDot11WDSPortTxErrors, coDot11WEPExcludedCount=coDot11WEPExcludedCount, coDot11StaPktsRxMCS10=coDot11StaPktsRxMCS10, coDot11PktsRate2=coDot11PktsRate2, coDot11StaPktsTxMCS2=coDot11StaPktsTxMCS2, coDot11StaPktsRxMCS6=coDot11StaPktsRxMCS6, coDot11PhyRateGroup=coDot11PhyRateGroup, coDot11AntennasListEntry=coDot11AntennasListEntry, coDot11RegDomainsSupportValue=coDot11RegDomainsSupportValue, coDot11ScanNetworkType=coDot11ScanNetworkType, coDot11SNRLevelNotification=coDot11SNRLevelNotification, coDot11WEPICVErrorCount=coDot11WEPICVErrorCount, coDot11CurrentOperFrequency=coDot11CurrentOperFrequency, coDot11ScanEnabled=coDot11ScanEnabled, coDot11ManagementMIBNotificationPrefix=coDot11ManagementMIBNotificationPrefix, coDot11TransmitRate=coDot11TransmitRate, coDot11BSSID=coDot11BSSID, coDot11DTIMPeriod=coDot11DTIMPeriod, coDot11SupportedDataRatesTxValue=coDot11SupportedDataRatesTxValue, coDot11PhyDSSSEntry=coDot11PhyDSSSEntry, coDot11PhyHTEntry=coDot11PhyHTEntry, coDot11PktsRate18=coDot11PktsRate18, coDot11AccessPointConfigTable=coDot11AccessPointConfigTable, coDot11RSNCompliance=coDot11RSNCompliance, coDot11DetStaNbProbeReq=coDot11DetStaNbProbeReq, coDot11FCSErrorCount=coDot11FCSErrorCount, coDot11AntennasListTable=coDot11AntennasListTable, coDot11SNRLevelNotificationInterval=coDot11SNRLevelNotificationInterval, coDot11PktsRate24=coDot11PktsRate24, coDot11StationHTGroup=coDot11StationHTGroup, coDot11StaPktsTxMCS13=coDot11StaPktsTxMCS13, coDot11AutoChannelEnabled=coDot11AutoChannelEnabled, coDot11ScanInactivityTime=coDot11ScanInactivityTime, coDot11StaShortGI=coDot11StaShortGI, coDot11UnauthorizedAPNotificationEnabled=coDot11UnauthorizedAPNotificationEnabled, coDot11PhyOFDMTable=coDot11PhyOFDMTable, coDot11WDSPortIndex=coDot11WDSPortIndex, coDot11StaPktsRxMCS13=coDot11StaPktsRxMCS13, coDot11PhyConfigTable=coDot11PhyConfigTable, coDot11ScanChannel=coDot11ScanChannel, coDot11PhyOFDMComplianceGroup=coDot11PhyOFDMComplianceGroup, coDot11phy=coDot11phy, coDot11StationDetectionState=coDot11StationDetectionState, coDot11Sensitivity=coDot11Sensitivity, coDot11PktsRate9=coDot11PktsRate9, coDot11ScanGroup=coDot11ScanGroup, coDot11CountryCode=coDot11CountryCode, coDot11StaPktsRxMCS8=coDot11StaPktsRxMCS8, coDot11StaPktsTxMCS12=coDot11StaPktsTxMCS12, coDot11AuthenticationAlgorithmsEntry=coDot11AuthenticationAlgorithmsEntry, coDot11Compliance=coDot11Compliance, coDot11WEPUndecryptableCount=coDot11WEPUndecryptableCount, coDot11StaPktsRxMCS3=coDot11StaPktsRxMCS3, coDot11AssociationIndex=coDot11AssociationIndex, coDot11PhyConfigGroup=coDot11PhyConfigGroup, coDot11SignalLevel=coDot11SignalLevel, coDot11DetectedStationEntry=coDot11DetectedStationEntry, coDot11NoiseLevel=coDot11NoiseLevel, coDot11APBaseGroupExt=coDot11APBaseGroupExt, coDot11APBaseGroup=coDot11APBaseGroup, coDot11ScanPHYType=coDot11ScanPHYType, coDot11Compliances=coDot11Compliances, coDot11PhyAdminStatus=coDot11PhyAdminStatus, coDot11AdminMinimumDataRate=coDot11AdminMinimumDataRate, coDot11NotificationGroup=coDot11NotificationGroup, coDot11HighestSupportedDataRate=coDot11HighestSupportedDataRate, coDot11RTSFailureCount=coDot11RTSFailureCount, coDot11SmtAuthenticationAlgorithmsGroup=coDot11SmtAuthenticationAlgorithmsGroup, coDot11SupportedTxAntenna=coDot11SupportedTxAntenna, coDot11PktsRate54=coDot11PktsRate54, coDot11WDSPortEntry=coDot11WDSPortEntry, coDot11StaPktsTxMCS14=coDot11StaPktsTxMCS14, coDot11ShortGIOptionInFortyEnabled=coDot11ShortGIOptionInFortyEnabled, coDot11ScanConfigGroup=coDot11ScanConfigGroup, coDot11CurrentPrimaryChannel=coDot11CurrentPrimaryChannel, PYSNMP_MODULE_ID=colubris802dot11, coDot11StaPktsTxMCS3=coDot11StaPktsTxMCS3, coDot11StaPktsRxMCS11=coDot11StaPktsRxMCS11, coDot11NumberOfUsers=coDot11NumberOfUsers, coDot11MultipleRetryCount=coDot11MultipleRetryCount, coDot11ACKFailureCount=coDot11ACKFailureCount, coDot11RSNAStatsTKIPICVErrors=coDot11RSNAStatsTKIPICVErrors, coDot11GreenfieldOptionEnabled=coDot11GreenfieldOptionEnabled, coDot11ScanSSID=coDot11ScanSSID, coDot11RSNAStatsVersion=coDot11RSNAStatsVersion, coDot11ScanSecurity=coDot11ScanSecurity, coDot11DetStaTimeLastSeen=coDot11DetStaTimeLastSeen, coDot11APPrivacyGroup=coDot11APPrivacyGroup, coDot11StationLocalInterface=coDot11StationLocalInterface, coDot11ScanSNR=coDot11ScanSNR, coDot11MaxTransmitMSDULifetime=coDot11MaxTransmitMSDULifetime, coDot11WDSPortSNRLevel=coDot11WDSPortSNRLevel, coDot11PrivacyEntry=coDot11PrivacyEntry, coDot11StaPktsRxMCS1=coDot11StaPktsRxMCS1, coDot11StaPktsTxMCS4=coDot11StaPktsTxMCS4, coDot11FortyMHzOperationEnabled=coDot11FortyMHzOperationEnabled, coDot11SupportedDataRatesRxValue=coDot11SupportedDataRatesRxValue, coDot11AdminMaximumDataRate=coDot11AdminMaximumDataRate, coDot11ShortGIOptionInTwentyImplemented=coDot11ShortGIOptionInTwentyImplemented, coDot11ScanStatus=coDot11ScanStatus, coDot11ap=coDot11ap, coDot11PktsTxRate12=coDot11PktsTxRate12, coDot11TempType=coDot11TempType, coDot11AssociationEntry=coDot11AssociationEntry, coDot11Conformance=coDot11Conformance, coDot11CurrentRegDomain=coDot11CurrentRegDomain, coDot11PktsTxRate11=coDot11PktsTxRate11, coDot11DetStaChannel=coDot11DetStaChannel, coDot11DetStaRate=coDot11DetStaRate, coDot11RSNAStatsTKIPCounterMeasuresInvoked=coDot11RSNAStatsTKIPCounterMeasuresInvoked, coDot11PhyHTComplianceGroup=coDot11PhyHTComplianceGroup, coDot11GreenfieldOptionImplemented=coDot11GreenfieldOptionImplemented, coDot11MulticastReceivedFrameCount=coDot11MulticastReceivedFrameCount, coDot11ManufacturerID=coDot11ManufacturerID, coDot11RelayBetweenStation=coDot11RelayBetweenStation, coDot11PrivacyTable=coDot11PrivacyTable, coDot11StaPktsTxMCS7=coDot11StaPktsTxMCS7, coDot11RTSSuccessCount=coDot11RTSSuccessCount, coDot11ExcludeUnencrypted=coDot11ExcludeUnencrypted, coDot11SNR=coDot11SNR, coDot11RegDomainsSupportedTable=coDot11RegDomainsSupportedTable, coDot11RTSThreshold=coDot11RTSThreshold, coDot11PktsTxRate36=coDot11PktsTxRate36, coDot11WDSPortTxDropped=coDot11WDSPortTxDropped, coDot11SupportedDataRatesTxIndex=coDot11SupportedDataRatesTxIndex, coDot11AuthenticationAlgorithmsTable=coDot11AuthenticationAlgorithmsTable, coDot11ProductID=coDot11ProductID, coDot11StaPktsTxMCS0=coDot11StaPktsTxMCS0, coDot11WEPDefaultKey4Value=coDot11WEPDefaultKey4Value, coDot11CurrentChannel=coDot11CurrentChannel, coDot11MACBaseGroup=coDot11MACBaseGroup, coDot11AssociationNotificationInterval=coDot11AssociationNotificationInterval, coDot11StaPktsRxMCS5=coDot11StaPktsRxMCS5, coDot11ReceivedFragmentCount=coDot11ReceivedFragmentCount, coDot11ShortRetryLimit=coDot11ShortRetryLimit, coDot11CurrentSecondaryChannel=coDot11CurrentSecondaryChannel, coDot11RSNBase=coDot11RSNBase, coDot11WDSPortRxPackets=coDot11WDSPortRxPackets, coDot11PktsTxRate24=coDot11PktsTxRate24, coDot11AssociationConfigGroup=coDot11AssociationConfigGroup, coDot11PhyOperStatus=coDot11PhyOperStatus, coDot11MaxReceiveLifetime=coDot11MaxReceiveLifetime, coDot11PktsTxRate48=coDot11PktsTxRate48, coDot11FailedCount=coDot11FailedCount, coDot11PktsTxRate5dot5=coDot11PktsTxRate5dot5, coDot11TIThreshold=coDot11TIThreshold, coDot11PhyConfigComplianceGroup=coDot11PhyConfigComplianceGroup, coDot11SupportedDataRatesTxTable=coDot11SupportedDataRatesTxTable, coDot11SupportedDataRatesRxIndex=coDot11SupportedDataRatesRxIndex, coDot11OperatingMode=coDot11OperatingMode, coDot11PktsRate36=coDot11PktsRate36, coDot11WDSPortMacAddress=coDot11WDSPortMacAddress, coDot11StaPktsTxMCS1=coDot11StaPktsTxMCS1, coDot11WDSPortRxErrors=coDot11WDSPortRxErrors, coDot11StationSSID=coDot11StationSSID, coDot11PhyRegDomainsSupportGroup=coDot11PhyRegDomainsSupportGroup, coDot11PrivacyOptionImplemented=coDot11PrivacyOptionImplemented, coDot11CCAModeSupported=coDot11CCAModeSupported, coDot11PhyHTTable=coDot11PhyHTTable, coDot11AutoChannelInterval=coDot11AutoChannelInterval, coDot11UnauthorizedAPNotification=coDot11UnauthorizedAPNotification, coDot11AssociationNotification=coDot11AssociationNotification, coDot11StaPktsRxMCS0=coDot11StaPktsRxMCS0, coDot11LongRetryLimit=coDot11LongRetryLimit, coDot11WEPDefaultKeyID=coDot11WEPDefaultKeyID, coDot11ScanMacAddress=coDot11ScanMacAddress, coDot11DetectedStationTable=coDot11DetectedStationTable, coDot11AuthenticationAlgorithm=coDot11AuthenticationAlgorithm, coDot11DetStaSignalLevel=coDot11DetStaSignalLevel, coDot11UnauthorizedAPNotificationInterval=coDot11UnauthorizedAPNotificationInterval, coDot11BeaconPeriod=coDot11BeaconPeriod, coDot11StaPktsTxMCS15=coDot11StaPktsTxMCS15, coDot11PktsRate6=coDot11PktsRate6, coDot11CountersTable=coDot11CountersTable, coDot11RSNAStatsCCMPFormatErrors=coDot11RSNAStatsCCMPFormatErrors, coDot11StaReceiveMCS=coDot11StaReceiveMCS, coDot11MinimumSNRLevel=coDot11MinimumSNRLevel, coDot11AssociationGroup=coDot11AssociationGroup, coDot11WEPDefaultKeysEntry=coDot11WEPDefaultKeysEntry)
mibBuilder.exportSymbols("COLUBRIS-802DOT11-MIB", coDot11HighThroughputOptionImplemented=coDot11HighThroughputOptionImplemented, coDot11CurrentTxAntenna=coDot11CurrentTxAntenna, coDot11OutOctets=coDot11OutOctets, coDot11FrameDuplicateCount=coDot11FrameDuplicateCount, coDot11StaEncryptionType=coDot11StaEncryptionType, coDot11PhyOFDMEntry=coDot11PhyOFDMEntry, coDot11WEPDefaultKeysTable=coDot11WEPDefaultKeysTable, coDot11SupportedDataRatesRxEntry=coDot11SupportedDataRatesRxEntry, coDot11AddToAssociationNotification=coDot11AddToAssociationNotification, coDot11PktsRate11=coDot11PktsRate11, coDot11WDSPortRxDropped=coDot11WDSPortRxDropped, coDot11RSNAOptionImplemented=coDot11RSNAOptionImplemented, coDot11StaPktsRxMCS15=coDot11StaPktsRxMCS15, coDot11FrequencyBandsSupported=coDot11FrequencyBandsSupported, coDot11PktsTxRate6=coDot11PktsTxRate6, coDot11RSNAStatsTKIPRemoteMICFailures=coDot11RSNAStatsTKIPRemoteMICFailures, coDot11CountersGroup=coDot11CountersGroup, coDot11StationName=coDot11StationName, coDot11StaPktsRxMCS14=coDot11StaPktsRxMCS14, coDot11PktsTxRate18=coDot11PktsTxRate18, coDot11PhyAntennaTable=coDot11PhyAntennaTable, coDot11StaChannelWidth=coDot11StaChannelWidth, coDot11PrivacyInvoked=coDot11PrivacyInvoked, colubris802dot11=colubris802dot11, coDot11Groups=coDot11Groups, coDot11StaPktsRxMCS4=coDot11StaPktsRxMCS4, coDot11DetStaTimeDiscovered=coDot11DetStaTimeDiscovered, coDot11WDSComplianceGroup=coDot11WDSComplianceGroup, coDot11ScanNoiseLevel=coDot11ScanNoiseLevel, coDot11ScanEntry=coDot11ScanEntry, coDot11StaPktsRxMCS7=coDot11StaPktsRxMCS7, coDot11StaPktsTxMCS9=coDot11StaPktsTxMCS9, coDot11WDSPortCurrentRate=coDot11WDSPortCurrentRate, coDot11WEPDefaultKey2Value=coDot11WEPDefaultKey2Value, coDot11RSNAStatsEntry=coDot11RSNAStatsEntry, coDot11StationHTTable=coDot11StationHTTable, coDot11OperationEntry=coDot11OperationEntry, coDot11AutoPowerEnabled=coDot11AutoPowerEnabled, coDot11RSNAStatsTKIPLocalMICFailures=coDot11RSNAStatsTKIPLocalMICFailures, coDot11RSNAStatsCCMPReplays=coDot11RSNAStatsCCMPReplays, coDot11CurrentSNRLevel=coDot11CurrentSNRLevel, coDot11PktsTxRate1=coDot11PktsTxRate1, coDot11WEPDefaultKey3Value=coDot11WEPDefaultKey3Value, coDot11PhyOperationEntry=coDot11PhyOperationEntry, coDot11ScanIndex=coDot11ScanIndex, coDot11ManagementMIBNotifications=coDot11ManagementMIBNotifications, coDot11ScanSignalLevel=coDot11ScanSignalLevel, coDot11StaPktsTxMCS11=coDot11StaPktsTxMCS11, coDot11PHYType=coDot11PHYType, coDot11RadioEnabled=coDot11RadioEnabled, coDot11PktsTxRate9=coDot11PktsTxRate9, coDot11AuthenticationAlgorithmsIndex=coDot11AuthenticationAlgorithmsIndex, coDot11RSNAEnabled=coDot11RSNAEnabled, coDot11TransmittedFragmentCount=coDot11TransmittedFragmentCount, coDot11SupportedRxAntenna=coDot11SupportedRxAntenna, coDot11RSNAStats4WayHandshakeFailures=coDot11RSNAStats4WayHandshakeFailures, coDot11PhyOperationTable=coDot11PhyOperationTable, coDot11PhyDSSSTable=coDot11PhyDSSSTable, coDot11ScanTable=coDot11ScanTable, coDot11StaPktsTxMCS6=coDot11StaPktsTxMCS6, coDot11StaPktsTxMCS5=coDot11StaPktsTxMCS5, coDot11SNRLevelNotificationEnabled=coDot11SNRLevelNotificationEnabled)
