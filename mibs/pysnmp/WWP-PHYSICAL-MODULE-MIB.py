#
# PySNMP MIB module WWP-PHYSICAL-MODULE-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/WWP-PHYSICAL-MODULE-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 21:31:53 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, SingleValueConstraint, ConstraintsIntersection, ConstraintsUnion, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "SingleValueConstraint", "ConstraintsIntersection", "ConstraintsUnion", "ValueRangeConstraint")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
Unsigned32, Integer32, iso, TimeTicks, MibScalar, MibTable, MibTableRow, MibTableColumn, IpAddress, Bits, Gauge32, MibIdentifier, Counter32, ModuleIdentity, NotificationType, Counter64, ObjectIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "Unsigned32", "Integer32", "iso", "TimeTicks", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "IpAddress", "Bits", "Gauge32", "MibIdentifier", "Counter32", "ModuleIdentity", "NotificationType", "Counter64", "ObjectIdentity")
TextualConvention, DisplayString, DateAndTime, MacAddress = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString", "DateAndTime", "MacAddress")
wwpModules, = mibBuilder.importSymbols("WWP-SMI", "wwpModules")
wwpPhyModuleMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 6141, 2, 3))
wwpPhyModuleMIB.setRevisions(('2001-04-03 17:00',))
if mibBuilder.loadTexts: wwpPhyModuleMIB.setLastUpdated('200104031700Z')
if mibBuilder.loadTexts: wwpPhyModuleMIB.setOrganization('World Wide Packets, Inc')
wwpPhyModuleMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 6141, 2, 3, 1))
wwpPhyModuleInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 6141, 2, 3, 1, 1))
wwpPhyModuleRebootAttr = MibIdentifier((1, 3, 6, 1, 4, 1, 6141, 2, 3, 1, 2))
wwpPhyModuleMIBNotificationPrefix = MibIdentifier((1, 3, 6, 1, 4, 1, 6141, 2, 3, 2))
wwpPhyModuleMIBNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 6141, 2, 3, 2, 0))
wwpPhyModuleMIBConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 6141, 2, 3, 3))
wwpPhyModuleMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 6141, 2, 3, 3, 1))
wwpPhyModuleMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 6141, 2, 3, 3, 2))
wwpPhyModSerialNum = MibScalar((1, 3, 6, 1, 4, 1, 6141, 2, 3, 1, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 127))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpPhyModSerialNum.setStatus('current')
wwpPhyModBoardRevision = MibScalar((1, 3, 6, 1, 4, 1, 6141, 2, 3, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 127))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpPhyModBoardRevision.setStatus('current')
wwpPhyModNumResets = MibScalar((1, 3, 6, 1, 4, 1, 6141, 2, 3, 1, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpPhyModNumResets.setStatus('current')
wwpPhyModFwVer = MibScalar((1, 3, 6, 1, 4, 1, 6141, 2, 3, 1, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpPhyModFwVer.setStatus('current')
wwpPhyModAppVer = MibScalar((1, 3, 6, 1, 4, 1, 6141, 2, 3, 1, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 127))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpPhyModAppVer.setStatus('current')
wwpPhyModPostResults = MibScalar((1, 3, 6, 1, 4, 1, 6141, 2, 3, 1, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpPhyModPostResults.setStatus('current')
wwpPhyModPostCode = MibScalar((1, 3, 6, 1, 4, 1, 6141, 2, 3, 1, 1, 7), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpPhyModPostCode.setStatus('current')
wwpPhyModBootLoaderVer = MibScalar((1, 3, 6, 1, 4, 1, 6141, 2, 3, 1, 1, 8), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpPhyModBootLoaderVer.setStatus('current')
wwpPhyModMfgDate = MibScalar((1, 3, 6, 1, 4, 1, 6141, 2, 3, 1, 1, 9), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpPhyModMfgDate.setStatus('current')
wwpPhyModBoardType = MibScalar((1, 3, 6, 1, 4, 1, 6141, 2, 3, 1, 1, 10), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpPhyModBoardType.setStatus('current')
wwpPhyModMktDesc = MibScalar((1, 3, 6, 1, 4, 1, 6141, 2, 3, 1, 1, 11), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 127))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpPhyModMktDesc.setStatus('current')
wwpPhyModRebootOperation = MibScalar((1, 3, 6, 1, 4, 1, 6141, 2, 3, 1, 2, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("none", 0), ("reboot", 1), ("rebootReinit", 2), ("rebootDefault", 3))).clone('none')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpPhyModRebootOperation.setStatus('current')
wwpPhyModLastRebootTime = MibScalar((1, 3, 6, 1, 4, 1, 6141, 2, 3, 1, 2, 2), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpPhyModLastRebootTime.setStatus('current')
wwpPhyModLastRebootReason = MibScalar((1, 3, 6, 1, 4, 1, 6141, 2, 3, 1, 2, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("hostRequest", 1), ("pwrFail", 2), ("unknown", 3), ("softwareForced", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpPhyModLastRebootReason.setStatus('current')
mibBuilder.exportSymbols("WWP-PHYSICAL-MODULE-MIB", wwpPhyModuleMIBConformance=wwpPhyModuleMIBConformance, wwpPhyModLastRebootReason=wwpPhyModLastRebootReason, wwpPhyModBootLoaderVer=wwpPhyModBootLoaderVer, wwpPhyModuleRebootAttr=wwpPhyModuleRebootAttr, PYSNMP_MODULE_ID=wwpPhyModuleMIB, wwpPhyModAppVer=wwpPhyModAppVer, wwpPhyModuleMIBCompliances=wwpPhyModuleMIBCompliances, wwpPhyModuleInfo=wwpPhyModuleInfo, wwpPhyModBoardRevision=wwpPhyModBoardRevision, wwpPhyModNumResets=wwpPhyModNumResets, wwpPhyModuleMIBNotificationPrefix=wwpPhyModuleMIBNotificationPrefix, wwpPhyModMfgDate=wwpPhyModMfgDate, wwpPhyModuleMIBGroups=wwpPhyModuleMIBGroups, wwpPhyModSerialNum=wwpPhyModSerialNum, wwpPhyModuleMIB=wwpPhyModuleMIB, wwpPhyModMktDesc=wwpPhyModMktDesc, wwpPhyModPostResults=wwpPhyModPostResults, wwpPhyModFwVer=wwpPhyModFwVer, wwpPhyModBoardType=wwpPhyModBoardType, wwpPhyModuleMIBNotifications=wwpPhyModuleMIBNotifications, wwpPhyModuleMIBObjects=wwpPhyModuleMIBObjects, wwpPhyModLastRebootTime=wwpPhyModLastRebootTime, wwpPhyModPostCode=wwpPhyModPostCode, wwpPhyModRebootOperation=wwpPhyModRebootOperation)
