#
# PySNMP MIB module CISCO-IETF-MPLS-TE-P2MP-STD-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CISCO-IETF-MPLS-TE-P2MP-STD-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:43:25 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ConstraintsIntersection, SingleValueConstraint, ValueSizeConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ConstraintsIntersection", "SingleValueConstraint", "ValueSizeConstraint", "ConstraintsUnion")
ciscoExperiment, = mibBuilder.importSymbols("CISCO-SMI", "ciscoExperiment")
IndexInteger, IndexIntegerNextFree = mibBuilder.importSymbols("DIFFSERV-MIB", "IndexInteger", "IndexIntegerNextFree")
InterfaceIndexOrZero, = mibBuilder.importSymbols("IF-MIB", "InterfaceIndexOrZero")
InetAddressType, InetAddress = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddressType", "InetAddress")
MplsIndexType, = mibBuilder.importSymbols("MPLS-LSR-STD-MIB", "MplsIndexType")
MplsLabel, MplsPathIndexOrZero = mibBuilder.importSymbols("MPLS-TC-STD-MIB", "MplsLabel", "MplsPathIndexOrZero")
mplsTunnelIndex, mplsTunnelIngressLSRId, mplsTunnelEgressLSRId, mplsTunnelInstance = mibBuilder.importSymbols("MPLS-TE-STD-MIB", "mplsTunnelIndex", "mplsTunnelIngressLSRId", "mplsTunnelEgressLSRId", "mplsTunnelInstance")
ObjectGroup, NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "NotificationGroup", "ModuleCompliance")
NotificationType, MibIdentifier, iso, Bits, ObjectIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, Unsigned32, ModuleIdentity, Integer32, Counter64, TimeTicks, IpAddress, Counter32, Gauge32 = mibBuilder.importSymbols("SNMPv2-SMI", "NotificationType", "MibIdentifier", "iso", "Bits", "ObjectIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Unsigned32", "ModuleIdentity", "Integer32", "Counter64", "TimeTicks", "IpAddress", "Counter32", "Gauge32")
TextualConvention, RowStatus, StorageType, TruthValue, DisplayString, TimeStamp = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "RowStatus", "StorageType", "TruthValue", "DisplayString", "TimeStamp")
cmplsTeP2mpStdMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 9, 10, 142))
cmplsTeP2mpStdMIB.setRevisions(('2009-09-30 00:00', '2009-09-01 00:00', '2009-05-07 00:00',))
if mibBuilder.loadTexts: cmplsTeP2mpStdMIB.setLastUpdated('200909300000Z')
if mibBuilder.loadTexts: cmplsTeP2mpStdMIB.setOrganization('Cisco Systems, Inc.')
cmplsTeP2mpNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 10, 142, 0))
cmplsTeP2mpScalars = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 10, 142, 1))
cmplsTeP2mpObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 10, 142, 2))
cmplsTeP2mpConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 10, 142, 3))
cmplsTeP2mpTunnelConfigured = MibScalar((1, 3, 6, 1, 4, 1, 9, 10, 142, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmplsTeP2mpTunnelConfigured.setStatus('current')
cmplsTeP2mpTunnelActive = MibScalar((1, 3, 6, 1, 4, 1, 9, 10, 142, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmplsTeP2mpTunnelActive.setStatus('current')
cmplsTeP2mpTunnelTotalMaxHops = MibScalar((1, 3, 6, 1, 4, 1, 9, 10, 142, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmplsTeP2mpTunnelTotalMaxHops.setStatus('current')
cmplsTeP2mpTunnelTable = MibTable((1, 3, 6, 1, 4, 1, 9, 10, 142, 2, 1), )
if mibBuilder.loadTexts: cmplsTeP2mpTunnelTable.setStatus('current')
cmplsTeP2mpTunnelEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 10, 142, 2, 1, 1), ).setIndexNames((0, "MPLS-TE-STD-MIB", "mplsTunnelIndex"), (0, "MPLS-TE-STD-MIB", "mplsTunnelInstance"), (0, "MPLS-TE-STD-MIB", "mplsTunnelIngressLSRId"), (0, "MPLS-TE-STD-MIB", "mplsTunnelEgressLSRId"))
if mibBuilder.loadTexts: cmplsTeP2mpTunnelEntry.setStatus('current')
cmplsTeP2mpTunnelP2mpIntegrity = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 142, 2, 1, 1, 2), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cmplsTeP2mpTunnelP2mpIntegrity.setStatus('current')
cmplsTeP2mpTunnelBranchRole = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 142, 2, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("notBranch", 1), ("branch", 2), ("bud", 3))).clone('notBranch')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cmplsTeP2mpTunnelBranchRole.setStatus('current')
cmplsTeP2mpTunnelP2mpXcIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 142, 2, 1, 1, 4), MplsIndexType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmplsTeP2mpTunnelP2mpXcIndex.setStatus('current')
cmplsTeP2mpTunnelRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 142, 2, 1, 1, 5), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cmplsTeP2mpTunnelRowStatus.setStatus('current')
cmplsTeP2mpTunnelStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 142, 2, 1, 1, 6), StorageType().clone('volatile')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cmplsTeP2mpTunnelStorageType.setStatus('current')
cmplsTeP2mpTunnelSubGroupIDNext = MibScalar((1, 3, 6, 1, 4, 1, 9, 10, 142, 2, 2), IndexIntegerNextFree().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmplsTeP2mpTunnelSubGroupIDNext.setStatus('current')
cmplsTeP2mpTunnelDestTable = MibTable((1, 3, 6, 1, 4, 1, 9, 10, 142, 2, 3), )
if mibBuilder.loadTexts: cmplsTeP2mpTunnelDestTable.setStatus('current')
cmplsTeP2mpTunnelDestEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 10, 142, 2, 3, 1), ).setIndexNames((0, "MPLS-TE-STD-MIB", "mplsTunnelIndex"), (0, "MPLS-TE-STD-MIB", "mplsTunnelInstance"), (0, "MPLS-TE-STD-MIB", "mplsTunnelIngressLSRId"), (0, "MPLS-TE-STD-MIB", "mplsTunnelEgressLSRId"), (0, "CISCO-IETF-MPLS-TE-P2MP-STD-MIB", "cmplsTeP2mpTunnelDestSrcSubGroupOriginType"), (0, "CISCO-IETF-MPLS-TE-P2MP-STD-MIB", "cmplsTeP2mpTunnelDestSrcSubGroupOrigin"), (0, "CISCO-IETF-MPLS-TE-P2MP-STD-MIB", "cmplsTeP2mpTunnelDestSrcSubGroupID"), (0, "CISCO-IETF-MPLS-TE-P2MP-STD-MIB", "cmplsTeP2mpTunnelDestSubGroupOriginType"), (0, "CISCO-IETF-MPLS-TE-P2MP-STD-MIB", "cmplsTeP2mpTunnelDestSubGroupOrigin"), (0, "CISCO-IETF-MPLS-TE-P2MP-STD-MIB", "cmplsTeP2mpTunnelDestSubGroupID"), (0, "CISCO-IETF-MPLS-TE-P2MP-STD-MIB", "cmplsTeP2mpTunnelDestDestinationType"), (0, "CISCO-IETF-MPLS-TE-P2MP-STD-MIB", "cmplsTeP2mpTunnelDestDestination"))
if mibBuilder.loadTexts: cmplsTeP2mpTunnelDestEntry.setStatus('current')
cmplsTeP2mpTunnelDestSrcSubGroupOriginType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 142, 2, 3, 1, 1), InetAddressType())
if mibBuilder.loadTexts: cmplsTeP2mpTunnelDestSrcSubGroupOriginType.setStatus('current')
cmplsTeP2mpTunnelDestSrcSubGroupOrigin = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 142, 2, 3, 1, 2), InetAddress().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(4, 4), ValueSizeConstraint(16, 16), )))
if mibBuilder.loadTexts: cmplsTeP2mpTunnelDestSrcSubGroupOrigin.setStatus('current')
cmplsTeP2mpTunnelDestSrcSubGroupID = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 142, 2, 3, 1, 3), IndexInteger().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)))
if mibBuilder.loadTexts: cmplsTeP2mpTunnelDestSrcSubGroupID.setStatus('current')
cmplsTeP2mpTunnelDestSubGroupOriginType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 142, 2, 3, 1, 4), InetAddressType())
if mibBuilder.loadTexts: cmplsTeP2mpTunnelDestSubGroupOriginType.setStatus('current')
cmplsTeP2mpTunnelDestSubGroupOrigin = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 142, 2, 3, 1, 5), InetAddress().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(4, 4), ValueSizeConstraint(16, 16), )))
if mibBuilder.loadTexts: cmplsTeP2mpTunnelDestSubGroupOrigin.setStatus('current')
cmplsTeP2mpTunnelDestSubGroupID = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 142, 2, 3, 1, 6), IndexInteger().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)))
if mibBuilder.loadTexts: cmplsTeP2mpTunnelDestSubGroupID.setStatus('current')
cmplsTeP2mpTunnelDestDestinationType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 142, 2, 3, 1, 7), InetAddressType())
if mibBuilder.loadTexts: cmplsTeP2mpTunnelDestDestinationType.setStatus('current')
cmplsTeP2mpTunnelDestDestination = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 142, 2, 3, 1, 8), InetAddress().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(4, 4), ValueSizeConstraint(16, 16), )))
if mibBuilder.loadTexts: cmplsTeP2mpTunnelDestDestination.setStatus('current')
cmplsTeP2mpTunnelDestBranchOutSegment = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 142, 2, 3, 1, 9), MplsIndexType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmplsTeP2mpTunnelDestBranchOutSegment.setStatus('current')
cmplsTeP2mpTunnelDestHopTableIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 142, 2, 3, 1, 10), MplsPathIndexOrZero()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cmplsTeP2mpTunnelDestHopTableIndex.setStatus('current')
cmplsTeP2mpTunnelDestPathInUse = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 142, 2, 3, 1, 11), MplsPathIndexOrZero()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cmplsTeP2mpTunnelDestPathInUse.setStatus('current')
cmplsTeP2mpTunnelDestCHopTableIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 142, 2, 3, 1, 12), MplsPathIndexOrZero()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmplsTeP2mpTunnelDestCHopTableIndex.setStatus('current')
cmplsTeP2mpTunnelDestARHopTableIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 142, 2, 3, 1, 13), MplsPathIndexOrZero()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmplsTeP2mpTunnelDestARHopTableIndex.setStatus('current')
cmplsTeP2mpTunnelDestTotalUpTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 142, 2, 3, 1, 14), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmplsTeP2mpTunnelDestTotalUpTime.setStatus('current')
cmplsTeP2mpTunnelDestInstanceUpTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 142, 2, 3, 1, 15), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmplsTeP2mpTunnelDestInstanceUpTime.setStatus('current')
cmplsTeP2mpTunnelDestPathChanges = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 142, 2, 3, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmplsTeP2mpTunnelDestPathChanges.setStatus('current')
cmplsTeP2mpTunnelDestLastPathChange = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 142, 2, 3, 1, 17), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmplsTeP2mpTunnelDestLastPathChange.setStatus('current')
cmplsTeP2mpTunnelDestCreationTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 142, 2, 3, 1, 18), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmplsTeP2mpTunnelDestCreationTime.setStatus('current')
cmplsTeP2mpTunnelDestStateTransitions = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 142, 2, 3, 1, 19), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmplsTeP2mpTunnelDestStateTransitions.setStatus('current')
cmplsTeP2mpTunnelDestDiscontinuityTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 142, 2, 3, 1, 20), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmplsTeP2mpTunnelDestDiscontinuityTime.setStatus('current')
cmplsTeP2mpTunnelDestAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 142, 2, 3, 1, 21), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("testing", 3))).clone('up')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cmplsTeP2mpTunnelDestAdminStatus.setStatus('current')
cmplsTeP2mpTunnelDestOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 142, 2, 3, 1, 22), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 7))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("testing", 3), ("unknown", 4), ("lowerLayerDown", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmplsTeP2mpTunnelDestOperStatus.setStatus('current')
cmplsTeP2mpTunnelDestRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 142, 2, 3, 1, 23), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cmplsTeP2mpTunnelDestRowStatus.setStatus('current')
cmplsTeP2mpTunnelDestStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 142, 2, 3, 1, 24), StorageType().clone('volatile')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cmplsTeP2mpTunnelDestStorageType.setStatus('current')
cmplsTeP2mpTunnelBranchPerfTable = MibTable((1, 3, 6, 1, 4, 1, 9, 10, 142, 2, 4), )
if mibBuilder.loadTexts: cmplsTeP2mpTunnelBranchPerfTable.setStatus('current')
cmplsTeP2mpTunnelBranchPerfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 10, 142, 2, 4, 1), ).setIndexNames((0, "MPLS-TE-STD-MIB", "mplsTunnelIndex"), (0, "MPLS-TE-STD-MIB", "mplsTunnelInstance"), (0, "MPLS-TE-STD-MIB", "mplsTunnelIngressLSRId"), (0, "MPLS-TE-STD-MIB", "mplsTunnelEgressLSRId"), (0, "CISCO-IETF-MPLS-TE-P2MP-STD-MIB", "cmplsTeP2mpTunnelBranchPerfBranch"))
if mibBuilder.loadTexts: cmplsTeP2mpTunnelBranchPerfEntry.setStatus('current')
cmplsTeP2mpTunnelBranchPerfBranch = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 142, 2, 4, 1, 1), MplsIndexType())
if mibBuilder.loadTexts: cmplsTeP2mpTunnelBranchPerfBranch.setStatus('current')
cmplsTeP2mpTunnelBranchPerfPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 142, 2, 4, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmplsTeP2mpTunnelBranchPerfPackets.setStatus('current')
cmplsTeP2mpTunnelBranchPerfHCPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 142, 2, 4, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmplsTeP2mpTunnelBranchPerfHCPackets.setStatus('current')
cmplsTeP2mpTunnelBranchPerfErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 142, 2, 4, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmplsTeP2mpTunnelBranchPerfErrors.setStatus('current')
cmplsTeP2mpTunnelBranchPerfBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 142, 2, 4, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmplsTeP2mpTunnelBranchPerfBytes.setStatus('current')
cmplsTeP2mpTunnelBranchPerfHCBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 142, 2, 4, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmplsTeP2mpTunnelBranchPerfHCBytes.setStatus('current')
cmplsTeP2mpTunnelBranchDiscontinuityTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 142, 2, 4, 1, 7), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmplsTeP2mpTunnelBranchDiscontinuityTime.setStatus('current')
cmplsTeP2mpTunnelBranchLocalLabel = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 142, 2, 4, 1, 8), MplsLabel()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmplsTeP2mpTunnelBranchLocalLabel.setStatus('current')
cmplsTeP2mpTunnelBranchOutIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 142, 2, 4, 1, 9), InterfaceIndexOrZero()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmplsTeP2mpTunnelBranchOutIfIndex.setStatus('current')
cmplsTeP2mpTunnelBranchOutLabel = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 142, 2, 4, 1, 10), MplsLabel()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmplsTeP2mpTunnelBranchOutLabel.setStatus('current')
cmplsTeP2mpTunnelBranchSignalArea = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 142, 2, 4, 1, 11), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmplsTeP2mpTunnelBranchSignalArea.setStatus('current')
cmplsTeP2mpTunnelBranchInIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 142, 2, 4, 1, 12), InterfaceIndexOrZero()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmplsTeP2mpTunnelBranchInIfIndex.setStatus('current')
cmplsTeP2mpTunnelNotificationEnable = MibScalar((1, 3, 6, 1, 4, 1, 9, 10, 142, 2, 5), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cmplsTeP2mpTunnelNotificationEnable.setStatus('current')
cmplsTeP2mpTunnelDestUp = NotificationType((1, 3, 6, 1, 4, 1, 9, 10, 142, 0, 1)).setObjects(("CISCO-IETF-MPLS-TE-P2MP-STD-MIB", "cmplsTeP2mpTunnelDestAdminStatus"), ("CISCO-IETF-MPLS-TE-P2MP-STD-MIB", "cmplsTeP2mpTunnelDestOperStatus"))
if mibBuilder.loadTexts: cmplsTeP2mpTunnelDestUp.setStatus('current')
cmplsTeP2mpTunnelDestDown = NotificationType((1, 3, 6, 1, 4, 1, 9, 10, 142, 0, 2)).setObjects(("CISCO-IETF-MPLS-TE-P2MP-STD-MIB", "cmplsTeP2mpTunnelDestAdminStatus"), ("CISCO-IETF-MPLS-TE-P2MP-STD-MIB", "cmplsTeP2mpTunnelDestOperStatus"))
if mibBuilder.loadTexts: cmplsTeP2mpTunnelDestDown.setStatus('current')
cmplsTeP2mpGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 10, 142, 3, 1))
cmplsTeP2mpCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 10, 142, 3, 2))
cmplsTeP2mpModuleFullCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 10, 142, 3, 2, 1)).setObjects(("CISCO-IETF-MPLS-TE-P2MP-STD-MIB", "cmplsTeP2mpGeneralGroup"), ("CISCO-IETF-MPLS-TE-P2MP-STD-MIB", "cmplsTeP2mpNotifGroup"), ("CISCO-IETF-MPLS-TE-P2MP-STD-MIB", "cmplsTeP2mpScalarGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cmplsTeP2mpModuleFullCompliance = cmplsTeP2mpModuleFullCompliance.setStatus('deprecated')
cmplsTeP2mpModuleReadOnlyCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 10, 142, 3, 2, 2)).setObjects(("CISCO-IETF-MPLS-TE-P2MP-STD-MIB", "cmplsTeP2mpGeneralGroup"), ("CISCO-IETF-MPLS-TE-P2MP-STD-MIB", "cmplsTeP2mpScalarGroup"), ("CISCO-IETF-MPLS-TE-P2MP-STD-MIB", "cmplsTeP2mpNotifGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cmplsTeP2mpModuleReadOnlyCompliance = cmplsTeP2mpModuleReadOnlyCompliance.setStatus('deprecated')
cmplsTeP2mpModuleFullComplianceRev1 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 10, 142, 3, 2, 3)).setObjects(("CISCO-IETF-MPLS-TE-P2MP-STD-MIB", "cmplsTeP2mpGeneralGroup"), ("CISCO-IETF-MPLS-TE-P2MP-STD-MIB", "cmplsTeP2mpGeneralGroupSup1"), ("CISCO-IETF-MPLS-TE-P2MP-STD-MIB", "cmplsTeP2mpNotifGroup"), ("CISCO-IETF-MPLS-TE-P2MP-STD-MIB", "cmplsTeP2mpScalarGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cmplsTeP2mpModuleFullComplianceRev1 = cmplsTeP2mpModuleFullComplianceRev1.setStatus('deprecated')
cmplsTeP2mpModuleReadOnlyComplianceRev1 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 10, 142, 3, 2, 4)).setObjects(("CISCO-IETF-MPLS-TE-P2MP-STD-MIB", "cmplsTeP2mpGeneralGroup"), ("CISCO-IETF-MPLS-TE-P2MP-STD-MIB", "cmplsTeP2mpGeneralGroupSup1"), ("CISCO-IETF-MPLS-TE-P2MP-STD-MIB", "cmplsTeP2mpScalarGroup"), ("CISCO-IETF-MPLS-TE-P2MP-STD-MIB", "cmplsTeP2mpNotifGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cmplsTeP2mpModuleReadOnlyComplianceRev1 = cmplsTeP2mpModuleReadOnlyComplianceRev1.setStatus('deprecated')
cmplsTeP2mpModuleFullComplianceRev2 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 10, 142, 3, 2, 5)).setObjects(("CISCO-IETF-MPLS-TE-P2MP-STD-MIB", "cmplsTeP2mpGeneralGroup"), ("CISCO-IETF-MPLS-TE-P2MP-STD-MIB", "cmplsTeP2mpGeneralGroupSup1"), ("CISCO-IETF-MPLS-TE-P2MP-STD-MIB", "cmplsTeP2mpGeneralGroupSup2"), ("CISCO-IETF-MPLS-TE-P2MP-STD-MIB", "cmplsTeP2mpNotifGroup"), ("CISCO-IETF-MPLS-TE-P2MP-STD-MIB", "cmplsTeP2mpScalarGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cmplsTeP2mpModuleFullComplianceRev2 = cmplsTeP2mpModuleFullComplianceRev2.setStatus('current')
cmplsTeP2mpModuleReadOnlyComplianceRev2 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 10, 142, 3, 2, 6)).setObjects(("CISCO-IETF-MPLS-TE-P2MP-STD-MIB", "cmplsTeP2mpGeneralGroup"), ("CISCO-IETF-MPLS-TE-P2MP-STD-MIB", "cmplsTeP2mpGeneralGroupSup1"), ("CISCO-IETF-MPLS-TE-P2MP-STD-MIB", "cmplsTeP2mpGeneralGroupSup2"), ("CISCO-IETF-MPLS-TE-P2MP-STD-MIB", "cmplsTeP2mpScalarGroup"), ("CISCO-IETF-MPLS-TE-P2MP-STD-MIB", "cmplsTeP2mpNotifGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cmplsTeP2mpModuleReadOnlyComplianceRev2 = cmplsTeP2mpModuleReadOnlyComplianceRev2.setStatus('current')
cmplsTeP2mpGeneralGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 10, 142, 3, 1, 1)).setObjects(("CISCO-IETF-MPLS-TE-P2MP-STD-MIB", "cmplsTeP2mpTunnelConfigured"), ("CISCO-IETF-MPLS-TE-P2MP-STD-MIB", "cmplsTeP2mpTunnelActive"), ("CISCO-IETF-MPLS-TE-P2MP-STD-MIB", "cmplsTeP2mpTunnelTotalMaxHops"), ("CISCO-IETF-MPLS-TE-P2MP-STD-MIB", "cmplsTeP2mpTunnelP2mpIntegrity"), ("CISCO-IETF-MPLS-TE-P2MP-STD-MIB", "cmplsTeP2mpTunnelBranchRole"), ("CISCO-IETF-MPLS-TE-P2MP-STD-MIB", "cmplsTeP2mpTunnelP2mpXcIndex"), ("CISCO-IETF-MPLS-TE-P2MP-STD-MIB", "cmplsTeP2mpTunnelRowStatus"), ("CISCO-IETF-MPLS-TE-P2MP-STD-MIB", "cmplsTeP2mpTunnelStorageType"), ("CISCO-IETF-MPLS-TE-P2MP-STD-MIB", "cmplsTeP2mpTunnelSubGroupIDNext"), ("CISCO-IETF-MPLS-TE-P2MP-STD-MIB", "cmplsTeP2mpTunnelDestBranchOutSegment"), ("CISCO-IETF-MPLS-TE-P2MP-STD-MIB", "cmplsTeP2mpTunnelDestHopTableIndex"), ("CISCO-IETF-MPLS-TE-P2MP-STD-MIB", "cmplsTeP2mpTunnelDestPathInUse"), ("CISCO-IETF-MPLS-TE-P2MP-STD-MIB", "cmplsTeP2mpTunnelDestCHopTableIndex"), ("CISCO-IETF-MPLS-TE-P2MP-STD-MIB", "cmplsTeP2mpTunnelDestARHopTableIndex"), ("CISCO-IETF-MPLS-TE-P2MP-STD-MIB", "cmplsTeP2mpTunnelDestTotalUpTime"), ("CISCO-IETF-MPLS-TE-P2MP-STD-MIB", "cmplsTeP2mpTunnelDestInstanceUpTime"), ("CISCO-IETF-MPLS-TE-P2MP-STD-MIB", "cmplsTeP2mpTunnelDestPathChanges"), ("CISCO-IETF-MPLS-TE-P2MP-STD-MIB", "cmplsTeP2mpTunnelDestLastPathChange"), ("CISCO-IETF-MPLS-TE-P2MP-STD-MIB", "cmplsTeP2mpTunnelDestCreationTime"), ("CISCO-IETF-MPLS-TE-P2MP-STD-MIB", "cmplsTeP2mpTunnelDestStateTransitions"), ("CISCO-IETF-MPLS-TE-P2MP-STD-MIB", "cmplsTeP2mpTunnelDestDiscontinuityTime"), ("CISCO-IETF-MPLS-TE-P2MP-STD-MIB", "cmplsTeP2mpTunnelDestAdminStatus"), ("CISCO-IETF-MPLS-TE-P2MP-STD-MIB", "cmplsTeP2mpTunnelDestOperStatus"), ("CISCO-IETF-MPLS-TE-P2MP-STD-MIB", "cmplsTeP2mpTunnelDestRowStatus"), ("CISCO-IETF-MPLS-TE-P2MP-STD-MIB", "cmplsTeP2mpTunnelDestStorageType"), ("CISCO-IETF-MPLS-TE-P2MP-STD-MIB", "cmplsTeP2mpTunnelBranchPerfPackets"), ("CISCO-IETF-MPLS-TE-P2MP-STD-MIB", "cmplsTeP2mpTunnelBranchPerfHCPackets"), ("CISCO-IETF-MPLS-TE-P2MP-STD-MIB", "cmplsTeP2mpTunnelBranchPerfErrors"), ("CISCO-IETF-MPLS-TE-P2MP-STD-MIB", "cmplsTeP2mpTunnelBranchPerfBytes"), ("CISCO-IETF-MPLS-TE-P2MP-STD-MIB", "cmplsTeP2mpTunnelBranchPerfHCBytes"), ("CISCO-IETF-MPLS-TE-P2MP-STD-MIB", "cmplsTeP2mpTunnelBranchDiscontinuityTime"), ("CISCO-IETF-MPLS-TE-P2MP-STD-MIB", "cmplsTeP2mpTunnelBranchLocalLabel"), ("CISCO-IETF-MPLS-TE-P2MP-STD-MIB", "cmplsTeP2mpTunnelBranchOutIfIndex"), ("CISCO-IETF-MPLS-TE-P2MP-STD-MIB", "cmplsTeP2mpTunnelBranchOutLabel"), ("CISCO-IETF-MPLS-TE-P2MP-STD-MIB", "cmplsTeP2mpTunnelBranchSignalArea"), ("CISCO-IETF-MPLS-TE-P2MP-STD-MIB", "cmplsTeP2mpTunnelBranchInIfIndex"), ("CISCO-IETF-MPLS-TE-P2MP-STD-MIB", "cmplsTeP2mpTunnelNotificationEnable"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cmplsTeP2mpGeneralGroup = cmplsTeP2mpGeneralGroup.setStatus('current')
cmplsTeP2mpNotifGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 9, 10, 142, 3, 1, 2)).setObjects(("CISCO-IETF-MPLS-TE-P2MP-STD-MIB", "cmplsTeP2mpTunnelDestUp"), ("CISCO-IETF-MPLS-TE-P2MP-STD-MIB", "cmplsTeP2mpTunnelDestDown"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cmplsTeP2mpNotifGroup = cmplsTeP2mpNotifGroup.setStatus('current')
cmplsTeP2mpScalarGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 10, 142, 3, 1, 3)).setObjects(("CISCO-IETF-MPLS-TE-P2MP-STD-MIB", "cmplsTeP2mpTunnelConfigured"), ("CISCO-IETF-MPLS-TE-P2MP-STD-MIB", "cmplsTeP2mpTunnelActive"), ("CISCO-IETF-MPLS-TE-P2MP-STD-MIB", "cmplsTeP2mpTunnelTotalMaxHops"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cmplsTeP2mpScalarGroup = cmplsTeP2mpScalarGroup.setStatus('current')
cmplsTeP2mpGeneralGroupSup1 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 10, 142, 3, 1, 4)).setObjects(("CISCO-IETF-MPLS-TE-P2MP-STD-MIB", "cmplsTeP2mpTunnelBranchLocalLabel"), ("CISCO-IETF-MPLS-TE-P2MP-STD-MIB", "cmplsTeP2mpTunnelBranchOutIfIndex"), ("CISCO-IETF-MPLS-TE-P2MP-STD-MIB", "cmplsTeP2mpTunnelBranchOutLabel"), ("CISCO-IETF-MPLS-TE-P2MP-STD-MIB", "cmplsTeP2mpTunnelBranchSignalArea"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cmplsTeP2mpGeneralGroupSup1 = cmplsTeP2mpGeneralGroupSup1.setStatus('current')
cmplsTeP2mpGeneralGroupSup2 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 10, 142, 3, 1, 5)).setObjects(("CISCO-IETF-MPLS-TE-P2MP-STD-MIB", "cmplsTeP2mpTunnelBranchInIfIndex"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cmplsTeP2mpGeneralGroupSup2 = cmplsTeP2mpGeneralGroupSup2.setStatus('current')
mibBuilder.exportSymbols("CISCO-IETF-MPLS-TE-P2MP-STD-MIB", cmplsTeP2mpTunnelDestDestination=cmplsTeP2mpTunnelDestDestination, cmplsTeP2mpTunnelBranchInIfIndex=cmplsTeP2mpTunnelBranchInIfIndex, cmplsTeP2mpTunnelDestPathChanges=cmplsTeP2mpTunnelDestPathChanges, cmplsTeP2mpTunnelDestUp=cmplsTeP2mpTunnelDestUp, cmplsTeP2mpTunnelTotalMaxHops=cmplsTeP2mpTunnelTotalMaxHops, cmplsTeP2mpTunnelDestSubGroupOriginType=cmplsTeP2mpTunnelDestSubGroupOriginType, cmplsTeP2mpTunnelDestHopTableIndex=cmplsTeP2mpTunnelDestHopTableIndex, cmplsTeP2mpTunnelBranchPerfPackets=cmplsTeP2mpTunnelBranchPerfPackets, cmplsTeP2mpTunnelBranchPerfBytes=cmplsTeP2mpTunnelBranchPerfBytes, cmplsTeP2mpTunnelNotificationEnable=cmplsTeP2mpTunnelNotificationEnable, cmplsTeP2mpModuleFullComplianceRev1=cmplsTeP2mpModuleFullComplianceRev1, cmplsTeP2mpTunnelDestSubGroupID=cmplsTeP2mpTunnelDestSubGroupID, cmplsTeP2mpTunnelDestSrcSubGroupID=cmplsTeP2mpTunnelDestSrcSubGroupID, cmplsTeP2mpNotifGroup=cmplsTeP2mpNotifGroup, cmplsTeP2mpTunnelDestSrcSubGroupOrigin=cmplsTeP2mpTunnelDestSrcSubGroupOrigin, cmplsTeP2mpTunnelBranchPerfEntry=cmplsTeP2mpTunnelBranchPerfEntry, cmplsTeP2mpTunnelDestRowStatus=cmplsTeP2mpTunnelDestRowStatus, cmplsTeP2mpTunnelDestDiscontinuityTime=cmplsTeP2mpTunnelDestDiscontinuityTime, PYSNMP_MODULE_ID=cmplsTeP2mpStdMIB, cmplsTeP2mpModuleReadOnlyCompliance=cmplsTeP2mpModuleReadOnlyCompliance, cmplsTeP2mpScalars=cmplsTeP2mpScalars, cmplsTeP2mpTunnelBranchPerfHCPackets=cmplsTeP2mpTunnelBranchPerfHCPackets, cmplsTeP2mpTunnelDestSubGroupOrigin=cmplsTeP2mpTunnelDestSubGroupOrigin, cmplsTeP2mpTunnelActive=cmplsTeP2mpTunnelActive, cmplsTeP2mpTunnelDestStateTransitions=cmplsTeP2mpTunnelDestStateTransitions, cmplsTeP2mpTunnelDestTotalUpTime=cmplsTeP2mpTunnelDestTotalUpTime, cmplsTeP2mpScalarGroup=cmplsTeP2mpScalarGroup, cmplsTeP2mpStdMIB=cmplsTeP2mpStdMIB, cmplsTeP2mpConformance=cmplsTeP2mpConformance, cmplsTeP2mpTunnelDestDestinationType=cmplsTeP2mpTunnelDestDestinationType, cmplsTeP2mpTunnelEntry=cmplsTeP2mpTunnelEntry, cmplsTeP2mpTunnelDestBranchOutSegment=cmplsTeP2mpTunnelDestBranchOutSegment, cmplsTeP2mpGeneralGroup=cmplsTeP2mpGeneralGroup, cmplsTeP2mpTunnelDestTable=cmplsTeP2mpTunnelDestTable, cmplsTeP2mpTunnelBranchRole=cmplsTeP2mpTunnelBranchRole, cmplsTeP2mpModuleFullCompliance=cmplsTeP2mpModuleFullCompliance, cmplsTeP2mpTunnelBranchDiscontinuityTime=cmplsTeP2mpTunnelBranchDiscontinuityTime, cmplsTeP2mpTunnelBranchLocalLabel=cmplsTeP2mpTunnelBranchLocalLabel, cmplsTeP2mpGeneralGroupSup1=cmplsTeP2mpGeneralGroupSup1, cmplsTeP2mpTunnelP2mpIntegrity=cmplsTeP2mpTunnelP2mpIntegrity, cmplsTeP2mpTunnelBranchOutIfIndex=cmplsTeP2mpTunnelBranchOutIfIndex, cmplsTeP2mpTunnelDestLastPathChange=cmplsTeP2mpTunnelDestLastPathChange, cmplsTeP2mpObjects=cmplsTeP2mpObjects, cmplsTeP2mpTunnelConfigured=cmplsTeP2mpTunnelConfigured, cmplsTeP2mpTunnelDestAdminStatus=cmplsTeP2mpTunnelDestAdminStatus, cmplsTeP2mpTunnelDestCreationTime=cmplsTeP2mpTunnelDestCreationTime, cmplsTeP2mpTunnelDestSrcSubGroupOriginType=cmplsTeP2mpTunnelDestSrcSubGroupOriginType, cmplsTeP2mpGroups=cmplsTeP2mpGroups, cmplsTeP2mpTunnelDestARHopTableIndex=cmplsTeP2mpTunnelDestARHopTableIndex, cmplsTeP2mpModuleReadOnlyComplianceRev2=cmplsTeP2mpModuleReadOnlyComplianceRev2, cmplsTeP2mpTunnelDestStorageType=cmplsTeP2mpTunnelDestStorageType, cmplsTeP2mpTunnelBranchOutLabel=cmplsTeP2mpTunnelBranchOutLabel, cmplsTeP2mpTunnelBranchSignalArea=cmplsTeP2mpTunnelBranchSignalArea, cmplsTeP2mpTunnelDestPathInUse=cmplsTeP2mpTunnelDestPathInUse, cmplsTeP2mpTunnelBranchPerfBranch=cmplsTeP2mpTunnelBranchPerfBranch, cmplsTeP2mpTunnelDestEntry=cmplsTeP2mpTunnelDestEntry, cmplsTeP2mpTunnelTable=cmplsTeP2mpTunnelTable, cmplsTeP2mpTunnelP2mpXcIndex=cmplsTeP2mpTunnelP2mpXcIndex, cmplsTeP2mpTunnelRowStatus=cmplsTeP2mpTunnelRowStatus, cmplsTeP2mpGeneralGroupSup2=cmplsTeP2mpGeneralGroupSup2, cmplsTeP2mpNotifications=cmplsTeP2mpNotifications, cmplsTeP2mpTunnelDestInstanceUpTime=cmplsTeP2mpTunnelDestInstanceUpTime, cmplsTeP2mpTunnelBranchPerfTable=cmplsTeP2mpTunnelBranchPerfTable, cmplsTeP2mpTunnelBranchPerfHCBytes=cmplsTeP2mpTunnelBranchPerfHCBytes, cmplsTeP2mpModuleFullComplianceRev2=cmplsTeP2mpModuleFullComplianceRev2, cmplsTeP2mpTunnelDestOperStatus=cmplsTeP2mpTunnelDestOperStatus, cmplsTeP2mpTunnelBranchPerfErrors=cmplsTeP2mpTunnelBranchPerfErrors, cmplsTeP2mpTunnelStorageType=cmplsTeP2mpTunnelStorageType, cmplsTeP2mpTunnelDestDown=cmplsTeP2mpTunnelDestDown, cmplsTeP2mpTunnelSubGroupIDNext=cmplsTeP2mpTunnelSubGroupIDNext, cmplsTeP2mpModuleReadOnlyComplianceRev1=cmplsTeP2mpModuleReadOnlyComplianceRev1, cmplsTeP2mpCompliances=cmplsTeP2mpCompliances, cmplsTeP2mpTunnelDestCHopTableIndex=cmplsTeP2mpTunnelDestCHopTableIndex)
