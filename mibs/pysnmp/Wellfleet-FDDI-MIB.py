#
# PySNMP MIB module Wellfleet-FDDI-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/Wellfleet-FDDI-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 21:33:27 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ConstraintsUnion, ValueRangeConstraint, ValueSizeConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ConstraintsUnion", "ValueRangeConstraint", "ValueSizeConstraint", "ConstraintsIntersection")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
Gauge32, Bits, iso, Counter64, Counter32, Integer32, TimeTicks, NotificationType, Unsigned32, ObjectIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, MibIdentifier, ModuleIdentity, IpAddress = mibBuilder.importSymbols("SNMPv2-SMI", "Gauge32", "Bits", "iso", "Counter64", "Counter32", "Integer32", "TimeTicks", "NotificationType", "Unsigned32", "ObjectIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "MibIdentifier", "ModuleIdentity", "IpAddress")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
wfLine, wfFddiGroup = mibBuilder.importSymbols("Wellfleet-COMMON-MIB", "wfLine", "wfFddiGroup")
wfFddiSmtGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 18, 3, 4, 15, 1))
wfFddiMacGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 18, 3, 4, 15, 2))
wfFddiPathGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 18, 3, 4, 15, 3))
wfFddiPortGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 18, 3, 4, 15, 4))
wfFddiXGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 18, 3, 4, 15, 5))
wfFddiTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 4, 4), )
if mibBuilder.loadTexts: wfFddiTable.setStatus('mandatory')
wfFddiEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 4, 4, 1), ).setIndexNames((0, "Wellfleet-FDDI-MIB", "wfFDDISlot"), (0, "Wellfleet-FDDI-MIB", "wfFDDINode"))
if mibBuilder.loadTexts: wfFddiEntry.setStatus('mandatory')
wfFDDIDelete = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 4, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("create", 1), ("delete", 2))).clone('create')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFDDIDelete.setStatus('mandatory')
wfFDDIEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 4, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('enable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFDDIEnable.setStatus('mandatory')
wfFDDIState = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 4, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("init", 3), ("notpresent", 4))).clone('notpresent')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFDDIState.setStatus('mandatory')
wfFDDISlot = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 4, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 14))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFDDISlot.setStatus('mandatory')
wfFDDINode = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 4, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 44))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFDDINode.setStatus('mandatory')
wfFDDICct = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 4, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1023))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFDDICct.setStatus('mandatory')
wfFDDIBofl = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 4, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('enable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFDDIBofl.setStatus('mandatory')
wfFDDIBoflTmo = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 4, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 3600)).clone(3)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFDDIBoflTmo.setStatus('mandatory')
wfFDDIMtu = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 4, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(4495))).clone(namedValues=NamedValues(("default", 4495))).clone('default')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFDDIMtu.setStatus('mandatory')
wfFDDIMadr = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 4, 1, 10), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFDDIMadr.setStatus('mandatory')
wfFDDIOctetsRxOk = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 4, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFDDIOctetsRxOk.setStatus('mandatory')
wfFDDIFramesRxOk = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 4, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFDDIFramesRxOk.setStatus('mandatory')
wfFDDIOctetsTxOk = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 4, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFDDIOctetsTxOk.setStatus('mandatory')
wfFDDIFramesTxOk = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 4, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFDDIFramesTxOk.setStatus('mandatory')
wfFDDICrcErrRx = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 4, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFDDICrcErrRx.setStatus('mandatory')
wfFDDIOverrunRx = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 4, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFDDIOverrunRx.setStatus('mandatory')
wfFDDIParityErrRx = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 4, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFDDIParityErrRx.setStatus('mandatory')
wfFDDIMacErrRx = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 4, 1, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFDDIMacErrRx.setStatus('mandatory')
wfFDDIRingErrRx = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 4, 1, 19), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFDDIRingErrRx.setStatus('mandatory')
wfFDDISmtRingErrRx = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 4, 1, 20), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFDDISmtRingErrRx.setStatus('mandatory')
wfFDDIRingOverrunRx = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 4, 1, 21), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFDDIRingOverrunRx.setStatus('mandatory')
wfFDDISmtRingOverrunRx = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 4, 1, 22), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFDDISmtRingOverrunRx.setStatus('mandatory')
wfFDDIAbortTx = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 4, 1, 23), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFDDIAbortTx.setStatus('mandatory')
wfFDDIUnderrunTx = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 4, 1, 24), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFDDIUnderrunTx.setStatus('mandatory')
wfFDDIParityErrTx = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 4, 1, 25), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFDDIParityErrTx.setStatus('mandatory')
wfFDDIRingErrTx = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 4, 1, 26), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFDDIRingErrTx.setStatus('mandatory')
wfFDDIPortOpErr = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 4, 1, 27), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFDDIPortOpErr.setStatus('mandatory')
wfFDDIInternOpErr = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 4, 1, 28), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFDDIInternOpErr.setStatus('mandatory')
wfFDDIHostErr = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 4, 1, 29), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFDDIHostErr.setStatus('mandatory')
wfFDDISmtConnectionPolicy = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 4, 1, 30), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(65381))).clone(namedValues=NamedValues(("default", 65381))).clone('default')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFDDISmtConnectionPolicy.setStatus('mandatory')
wfFDDISmtTNotify = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 4, 1, 31), Integer32().subtype(subtypeSpec=ValueRangeConstraint(2, 30)).clone(22)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFDDISmtTNotify.setStatus('mandatory')
wfFDDIMacTReq = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 4, 1, 32), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(2062500))).clone(namedValues=NamedValues(("default", 2062500))).clone('default')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFDDIMacTReq.setStatus('mandatory')
wfFDDIMacTMax = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 4, 1, 33), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFDDIMacTMax.setStatus('mandatory')
wfFDDIMacTvxValue = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 4, 1, 34), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFDDIMacTvxValue.setStatus('mandatory')
wfFDDIMacTMin = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 4, 1, 35), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(50000))).clone(namedValues=NamedValues(("default", 50000))).clone('default')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFDDIMacTMin.setStatus('mandatory')
wfFDDIHardwareFilter = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 4, 1, 36), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFDDIHardwareFilter.setStatus('mandatory')
wfFDDISmtEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 4, 1, 37), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('enable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFDDISmtEnable.setStatus('mandatory')
wfFDDITxQueueLength = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 4, 1, 38), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFDDITxQueueLength.setStatus('mandatory')
wfFDDIRxQueueLength = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 4, 1, 39), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFDDIRxQueueLength.setStatus('mandatory')
wfFDDITxClipFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 4, 1, 40), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFDDITxClipFrames.setStatus('mandatory')
wfFDDIRxReplenMisses = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 4, 1, 41), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFDDIRxReplenMisses.setStatus('mandatory')
wfFDDICfgTxQueueLength = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 4, 1, 42), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFDDICfgTxQueueLength.setStatus('mandatory')
wfFDDICfgRxQueueLength = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 4, 1, 43), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFDDICfgRxQueueLength.setStatus('mandatory')
wfFDDILineNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 4, 1, 44), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFDDILineNumber.setStatus('mandatory')
wfFDDIForcePeerTree = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 4, 1, 45), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFDDIForcePeerTree.setStatus('mandatory')
wfFDDIInvalidFrameStatusRx = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 4, 1, 46), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFDDIInvalidFrameStatusRx.setStatus('mandatory')
wfFDDIRxOversizedFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 4, 1, 47), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFDDIRxOversizedFrames.setStatus('mandatory')
wfFDDIRxSmtOversizedFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 4, 1, 48), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFDDIRxSmtOversizedFrames.setStatus('mandatory')
wfFDDIRxUndersizedFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 4, 1, 49), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFDDIRxUndersizedFrames.setStatus('mandatory')
wfFDDIRxSmtUndersizedFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 4, 1, 50), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFDDIRxSmtUndersizedFrames.setStatus('mandatory')
wfFDDIModule = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 4, 1, 51), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("one", 1), ("two", 2), ("three", 3), ("four", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFDDIModule.setStatus('mandatory')
wfFDDIActualNode = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 4, 1, 52), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("one", 1), ("two", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFDDIActualNode.setStatus('mandatory')
wfFDDILastChange = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 4, 1, 53), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFDDILastChange.setStatus('mandatory')
wfFDDIOutQLen = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 4, 1, 54), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFDDIOutQLen.setStatus('mandatory')
wfFDDIRxSmtOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 4, 1, 55), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFDDIRxSmtOctets.setStatus('mandatory')
wfFDDIRxSmtFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 4, 1, 56), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFDDIRxSmtFrames.setStatus('mandatory')
wfFDDIIntProcessings = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 4, 1, 57), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFDDIIntProcessings.setStatus('mandatory')
wfFDDITxProcessings = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 4, 1, 58), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFDDITxProcessings.setStatus('mandatory')
wfFDDIRxProcessings = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 4, 1, 59), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFDDIRxProcessings.setStatus('mandatory')
wfFDDITxRNRProcessings = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 4, 1, 60), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFDDITxRNRProcessings.setStatus('mandatory')
wfFDDISmtRxProcessings = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 4, 1, 61), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFDDISmtRxProcessings.setStatus('mandatory')
wfFDDIPhyALogPtr = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 4, 1, 62), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFDDIPhyALogPtr.setStatus('mandatory')
wfFDDIPhyBLogPtr = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 4, 1, 63), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFDDIPhyBLogPtr.setStatus('mandatory')
wfFDDIPromiscuous = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 4, 1, 64), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('enable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFDDIPromiscuous.setStatus('mandatory')
wfFDDILLCFrameControl = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 4, 1, 65), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("async", 1), ("sync", 2))).clone('async')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFDDILLCFrameControl.setStatus('mandatory')
wfFDDITurboBofl = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 4, 1, 66), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFDDITurboBofl.setStatus('mandatory')
wfFDDIBoflNum = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 4, 1, 67), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 127)).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFDDIBoflNum.setStatus('mandatory')
wfFDDIBoflLen = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 4, 1, 68), Integer32().subtype(subtypeSpec=ValueRangeConstraint(22, 4450)).clone(200)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFDDIBoflLen.setStatus('mandatory')
wfFddiSmtTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 4, 15, 1, 2), )
if mibBuilder.loadTexts: wfFddiSmtTable.setStatus('mandatory')
wfFddiSmtEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 4, 15, 1, 2, 1), ).setIndexNames((0, "Wellfleet-FDDI-MIB", "wfFddiSmtSlot"), (0, "Wellfleet-FDDI-MIB", "wfFddiSmtNode"))
if mibBuilder.loadTexts: wfFddiSmtEntry.setStatus('mandatory')
wfFddiSmtSlot = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 15, 1, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFddiSmtSlot.setStatus('mandatory')
wfFddiSmtNode = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 15, 1, 2, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFddiSmtNode.setStatus('mandatory')
wfFddiSmtCct = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 15, 1, 2, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFddiSmtCct.setStatus('mandatory')
wfFddiSmtStationId = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 15, 1, 2, 1, 4), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFddiSmtStationId.setStatus('mandatory')
wfFddiSmtOpVersionId = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 15, 1, 2, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFddiSmtOpVersionId.setStatus('mandatory')
wfFddiSmtMacCt = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 15, 1, 2, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFddiSmtMacCt.setStatus('mandatory')
wfFddiSmtNonMasterCt = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 15, 1, 2, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFddiSmtNonMasterCt.setStatus('mandatory')
wfFddiSmtEcmState = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 15, 1, 2, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("out", 1), ("in", 2), ("trace", 3), ("leave", 4), ("pathtest", 5), ("insert", 6), ("check", 7), ("deinsert", 8)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFddiSmtEcmState.setStatus('mandatory')
wfFddiSmtCfState = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 15, 1, 2, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13))).clone(namedValues=NamedValues(("isolated", 1), ("wraps", 2), ("wrapa", 3), ("wrapb", 4), ("wrapab", 5), ("thru", 6), ("locala", 7), ("localb", 8), ("localab", 9), ("locals", 10), ("cwrapa", 11), ("cwrapb", 12), ("cwraps", 13)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFddiSmtCfState.setStatus('mandatory')
wfFddiSmtBypassPresent = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 15, 1, 2, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("true", 1), ("false", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFddiSmtBypassPresent.setStatus('mandatory')
wfFddiSmtRemoteDisconnectFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 15, 1, 2, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("true", 1), ("false", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFddiSmtRemoteDisconnectFlag.setStatus('mandatory')
wfFddiSmtStationStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 15, 1, 2, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("concatenated", 1), ("seperated", 2), ("thru", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFddiSmtStationStatus.setStatus('mandatory')
wfFddiSmtPeerWrapFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 15, 1, 2, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("true", 1), ("false", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFddiSmtPeerWrapFlag.setStatus('mandatory')
wfFddiSmtExtTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 4, 15, 1, 3), )
if mibBuilder.loadTexts: wfFddiSmtExtTable.setStatus('mandatory')
wfFddiSmtExtEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 4, 15, 1, 3, 1), ).setIndexNames((0, "Wellfleet-FDDI-MIB", "wfFddiSmtExtSlot"), (0, "Wellfleet-FDDI-MIB", "wfFddiSmtExtNode"))
if mibBuilder.loadTexts: wfFddiSmtExtEntry.setStatus('mandatory')
wfFddiSmtDelete = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 15, 1, 3, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("created", 1), ("deleted", 2))).clone('created')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFddiSmtDelete.setStatus('mandatory')
wfFddiSmtExtSlot = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 15, 1, 3, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFddiSmtExtSlot.setStatus('mandatory')
wfFddiSmtExtNode = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 15, 1, 3, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFddiSmtExtNode.setStatus('mandatory')
wfFddiSmtExtCct = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 15, 1, 3, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFddiSmtExtCct.setStatus('mandatory')
wfFddiSmtHiVersionId = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 15, 1, 3, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(2))).clone(namedValues=NamedValues(("id", 2))).clone('id')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFddiSmtHiVersionId.setStatus('mandatory')
wfFddiSmtLoVersionId = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 15, 1, 3, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(2))).clone(namedValues=NamedValues(("id", 2))).clone('id')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFddiSmtLoVersionId.setStatus('mandatory')
wfFddiSmtManufacturerData = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 15, 1, 3, 1, 7), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFddiSmtManufacturerData.setStatus('mandatory')
wfFddiSmtUserData = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 15, 1, 3, 1, 8), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFddiSmtUserData.setStatus('mandatory')
wfFddiSmtMibVersionId = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 15, 1, 3, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("id", 1))).clone('id')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFddiSmtMibVersionId.setStatus('mandatory')
wfFddiSmtMasterCts = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 15, 1, 3, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFddiSmtMasterCts.setStatus('mandatory')
wfFddiSmtAvailablePaths = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 15, 1, 3, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 4))).clone(namedValues=NamedValues(("p", 1), ("s", 2), ("l", 4))).clone('p')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFddiSmtAvailablePaths.setStatus('mandatory')
wfFddiSmtConfigCapabilities = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 15, 1, 3, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("avail", 1), ("ab", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFddiSmtConfigCapabilities.setStatus('mandatory')
wfFddiSmtConfigPolicy = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 15, 1, 3, 1, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFddiSmtConfigPolicy.setStatus('mandatory')
wfFddiSmtStatRptPolicy = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 15, 1, 3, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('enable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFddiSmtStatRptPolicy.setStatus('mandatory')
wfFddiSmtTraceMaxExpiration = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 15, 1, 3, 1, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(6001, 256000)).clone(7000)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFddiSmtTraceMaxExpiration.setStatus('mandatory')
wfFddiSmtTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 15, 1, 3, 1, 16), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFddiSmtTimeStamp.setStatus('mandatory')
wfFddiSmtTransitionTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 15, 1, 3, 1, 17), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFddiSmtTransitionTimeStamp.setStatus('mandatory')
wfFddiSmtDatProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 15, 1, 3, 1, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('enable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFddiSmtDatProtocol.setStatus('mandatory')
wfFddiSmtActionTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 4, 15, 1, 4), )
if mibBuilder.loadTexts: wfFddiSmtActionTable.setStatus('mandatory')
wfFddiSmtActionEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 4, 15, 1, 4, 1), ).setIndexNames((0, "Wellfleet-FDDI-MIB", "wfFddiSmtActionSlot"), (0, "Wellfleet-FDDI-MIB", "wfFddiSmtActionNode"))
if mibBuilder.loadTexts: wfFddiSmtActionEntry.setStatus('mandatory')
wfFddiSmtActionDelete = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 15, 1, 4, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("created", 1), ("deleted", 2))).clone('created')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFddiSmtActionDelete.setStatus('mandatory')
wfFddiSmtActionSlot = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 15, 1, 4, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFddiSmtActionSlot.setStatus('mandatory')
wfFddiSmtActionNode = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 15, 1, 4, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFddiSmtActionNode.setStatus('mandatory')
wfFddiSmtActionCct = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 15, 1, 4, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFddiSmtActionCct.setStatus('mandatory')
wfFddiSmtStationAction = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 15, 1, 4, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("other", 1), ("connect", 2), ("disconnect", 3), ("pathtest", 4), ("selftest", 5), ("disablea", 6), ("disableb", 7), ("disablem", 8)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFddiSmtStationAction.setStatus('mandatory')
wfFddiMacTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 4, 15, 2, 2), )
if mibBuilder.loadTexts: wfFddiMacTable.setStatus('mandatory')
wfFddiMacEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 4, 15, 2, 2, 1), ).setIndexNames((0, "Wellfleet-FDDI-MIB", "wfFddiMacSlot"), (0, "Wellfleet-FDDI-MIB", "wfFddiMacNode"))
if mibBuilder.loadTexts: wfFddiMacEntry.setStatus('mandatory')
wfFddiMacSlot = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 15, 2, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFddiMacSlot.setStatus('mandatory')
wfFddiMacNode = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 15, 2, 2, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFddiMacNode.setStatus('mandatory')
wfFddiMacCct = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 15, 2, 2, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFddiMacCct.setStatus('mandatory')
wfFddiMacUpstreamNbr = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 15, 2, 2, 1, 4), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFddiMacUpstreamNbr.setStatus('mandatory')
wfFddiMacDownstreamNbr = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 15, 2, 2, 1, 5), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFddiMacDownstreamNbr.setStatus('mandatory')
wfFddiMacSmtAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 15, 2, 2, 1, 6), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFddiMacSmtAddress.setStatus('mandatory')
wfFddiMacTNeg = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 15, 2, 2, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFddiMacTNeg.setStatus('mandatory')
wfFddiMacRmtState = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 15, 2, 2, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("isolated", 1), ("nonop", 2), ("ringop", 3), ("detect", 4), ("nonopdup", 5), ("ringopdup", 6), ("directed", 7), ("trace", 8)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFddiMacRmtState.setStatus('mandatory')
wfFddiMacOldUpstreamNbr = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 15, 2, 2, 1, 9), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFddiMacOldUpstreamNbr.setStatus('mandatory')
wfFddiMacOldDownstreamNbr = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 15, 2, 2, 1, 10), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFddiMacOldDownstreamNbr.setStatus('mandatory')
wfFddiMacTokenCts = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 15, 2, 2, 1, 11), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFddiMacTokenCts.setStatus('mandatory')
wfFddiMacErrorCts = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 15, 2, 2, 1, 12), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFddiMacErrorCts.setStatus('mandatory')
wfFddiMacLostCts = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 15, 2, 2, 1, 13), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFddiMacLostCts.setStatus('mandatory')
wfFddiMacDaFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 15, 2, 2, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("true", 1), ("false", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFddiMacDaFlag.setStatus('mandatory')
wfFddiMacUnaDaFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 15, 2, 2, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("true", 1), ("false", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFddiMacUnaDaFlag.setStatus('mandatory')
wfFddiMacFrameErrorFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 15, 2, 2, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("true", 1), ("false", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFddiMacFrameErrorFlag.setStatus('mandatory')
wfFddiMacMaUnitDataAvailable = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 15, 2, 2, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("true", 1), ("false", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFddiMacMaUnitDataAvailable.setStatus('mandatory')
wfFddiMacDownstreamPortType = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 15, 2, 2, 1, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("typea", 1), ("typeb", 2), ("types", 3), ("typem", 4), ("typenone", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFddiMacDownstreamPortType.setStatus('mandatory')
wfFddiMacExtTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 4, 15, 2, 3), )
if mibBuilder.loadTexts: wfFddiMacExtTable.setStatus('mandatory')
wfFddiMacExtEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 4, 15, 2, 3, 1), ).setIndexNames((0, "Wellfleet-FDDI-MIB", "wfFddiMacExtSlot"), (0, "Wellfleet-FDDI-MIB", "wfFddiMacExtNode"))
if mibBuilder.loadTexts: wfFddiMacExtEntry.setStatus('mandatory')
wfFddiMacDelete = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 15, 2, 3, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("created", 1), ("deleted", 2))).clone('created')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFddiMacDelete.setStatus('mandatory')
wfFddiMacExtSlot = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 15, 2, 3, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFddiMacExtSlot.setStatus('mandatory')
wfFddiMacExtNode = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 15, 2, 3, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFddiMacExtNode.setStatus('mandatory')
wfFddiMacExtCct = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 15, 2, 3, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFddiMacExtCct.setStatus('mandatory')
wfFddiMacFrameStatusFunctions = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 15, 2, 3, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 4))).clone(namedValues=NamedValues(("repeat", 1), ("set", 2), ("clear", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFddiMacFrameStatusFunctions.setStatus('mandatory')
wfFddiMacBridgeFunctions = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 15, 2, 3, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 4))).clone(namedValues=NamedValues(("transparent", 1), ("srcroute", 2), ("srt", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFddiMacBridgeFunctions.setStatus('mandatory')
wfFddiMacTMaxCapability = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 15, 2, 3, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1336934400))).clone(namedValues=NamedValues(("default", 1336934400))).clone('default')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFddiMacTMaxCapability.setStatus('mandatory')
wfFddiMacTvxCapability = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 15, 2, 3, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(5222400))).clone(namedValues=NamedValues(("default", 5222400))).clone('default')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFddiMacTvxCapability.setStatus('mandatory')
wfFddiMacAvailablePaths = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 15, 2, 3, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 4))).clone(namedValues=NamedValues(("p", 1), ("s", 2), ("l", 4))).clone('p')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFddiMacAvailablePaths.setStatus('mandatory')
wfFddiMacCurrentPath = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 15, 2, 3, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("isolated", 1), ("local", 2), ("secondary", 3), ("primary", 4), ("concatenated", 5), ("thru", 6))).clone('isolated')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFddiMacCurrentPath.setStatus('mandatory')
wfFddiMacDupAddrTest = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 15, 2, 3, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("none", 1), ("pass", 2), ("fail", 3))).clone('none')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFddiMacDupAddrTest.setStatus('mandatory')
wfFddiMacRequestedPaths = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 15, 2, 3, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 4, 8, 16, 32, 64, 128))).clone(namedValues=NamedValues(("local", 1), ("salt", 2), ("palt", 4), ("calt", 8), ("spref", 16), ("ppref", 32), ("cpref", 64), ("thru", 128))).clone('palt')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFddiMacRequestedPaths.setStatus('mandatory')
wfFddiMacCopiedCts = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 15, 2, 3, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFddiMacCopiedCts.setStatus('mandatory')
wfFddiMacFrameErrorThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 15, 2, 3, 1, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFddiMacFrameErrorThreshold.setStatus('mandatory')
wfFddiMacFrameErrorRatio = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 15, 2, 3, 1, 15), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFddiMacFrameErrorRatio.setStatus('mandatory')
wfFddiMacHardwarePresent = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 15, 2, 3, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("notpresent", 1), ("present", 2))).clone('present')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFddiMacHardwarePresent.setStatus('mandatory')
wfFddiMacMaUnitDataEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 15, 2, 3, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('enable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFddiMacMaUnitDataEnable.setStatus('mandatory')
wfFddiMacTvxExpiredCts = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 15, 2, 3, 1, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFddiMacTvxExpiredCts.setStatus('mandatory')
wfFddiMacLateCts = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 15, 2, 3, 1, 19), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFddiMacLateCts.setStatus('mandatory')
wfFddiMacRingOpCts = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 15, 2, 3, 1, 20), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFddiMacRingOpCts.setStatus('mandatory')
wfFddiMacDuplicateTokenCts = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 15, 2, 3, 1, 21), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFddiMacDuplicateTokenCts.setStatus('mandatory')
wfFddiPathTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 4, 15, 3, 2), )
if mibBuilder.loadTexts: wfFddiPathTable.setStatus('mandatory')
wfFddiPathEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 4, 15, 3, 2, 1), ).setIndexNames((0, "Wellfleet-FDDI-MIB", "wfFddiPathSlot"), (0, "Wellfleet-FDDI-MIB", "wfFddiPathNode"))
if mibBuilder.loadTexts: wfFddiPathEntry.setStatus('mandatory')
wfFddiPathSlot = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 15, 3, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFddiPathSlot.setStatus('mandatory')
wfFddiPathNode = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 15, 3, 2, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFddiPathNode.setStatus('mandatory')
wfFddiPathCct = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 15, 3, 2, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFddiPathCct.setStatus('mandatory')
wfFddiPathConfiguration = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 15, 3, 2, 1, 4), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFddiPathConfiguration.setStatus('mandatory')
wfFddiPathExtTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 4, 15, 3, 3), )
if mibBuilder.loadTexts: wfFddiPathExtTable.setStatus('mandatory')
wfFddiPathExtEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 4, 15, 3, 3, 1), ).setIndexNames((0, "Wellfleet-FDDI-MIB", "wfFddiPathExtSlot"), (0, "Wellfleet-FDDI-MIB", "wfFddiPathExtNode"))
if mibBuilder.loadTexts: wfFddiPathExtEntry.setStatus('mandatory')
wfFddiPathDelete = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 15, 3, 3, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("created", 1), ("deleted", 2))).clone('created')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFddiPathDelete.setStatus('mandatory')
wfFddiPathExtSlot = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 15, 3, 3, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFddiPathExtSlot.setStatus('mandatory')
wfFddiPathExtNode = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 15, 3, 3, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFddiPathExtNode.setStatus('mandatory')
wfFddiPathExtCct = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 15, 3, 3, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFddiPathExtCct.setStatus('mandatory')
wfFddiPathTvxLowerBound = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 15, 3, 3, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(2500000))).clone(namedValues=NamedValues(("default", 2500000))).clone('default')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFddiPathTvxLowerBound.setStatus('mandatory')
wfFddiPathTMaxLowerBound = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 15, 3, 3, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(165000000))).clone(namedValues=NamedValues(("default", 165000000))).clone('default')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFddiPathTMaxLowerBound.setStatus('mandatory')
wfFddiPathMaxTReq = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 15, 3, 3, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFddiPathMaxTReq.setStatus('mandatory')
wfFddiPortTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 4, 15, 4, 2), )
if mibBuilder.loadTexts: wfFddiPortTable.setStatus('mandatory')
wfFddiPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 4, 15, 4, 2, 1), ).setIndexNames((0, "Wellfleet-FDDI-MIB", "wfFddiPortSlot"), (0, "Wellfleet-FDDI-MIB", "wfFddiPortNode"), (0, "Wellfleet-FDDI-MIB", "wfFddiPortIndex"))
if mibBuilder.loadTexts: wfFddiPortEntry.setStatus('mandatory')
wfFddiPortSlot = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 15, 4, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFddiPortSlot.setStatus('mandatory')
wfFddiPortNode = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 15, 4, 2, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFddiPortNode.setStatus('mandatory')
wfFddiPortCct = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 15, 4, 2, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFddiPortCct.setStatus('mandatory')
wfFddiPortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 15, 4, 2, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFddiPortIndex.setStatus('mandatory')
wfFddiPortPcType = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 15, 4, 2, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("a", 1), ("b", 2), ("s", 3), ("m", 4), ("none", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFddiPortPcType.setStatus('mandatory')
wfFddiPortPcNeighbor = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 15, 4, 2, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("a", 1), ("b", 2), ("s", 3), ("m", 4), ("unknown", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFddiPortPcNeighbor.setStatus('mandatory')
wfFddiPortPcmState = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 15, 4, 2, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10))).clone(namedValues=NamedValues(("off", 1), ("break", 2), ("trace", 3), ("connect", 4), ("next", 5), ("signal", 6), ("join", 7), ("verify", 8), ("active", 9), ("maint", 10)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFddiPortPcmState.setStatus('mandatory')
wfFddiPortRequestedPaths = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 15, 4, 2, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFddiPortRequestedPaths.setStatus('mandatory')
wfFddiPortBsFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 15, 4, 2, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("true", 1), ("false", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFddiPortBsFlag.setStatus('mandatory')
wfFddiPortLerFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 15, 4, 2, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("true", 1), ("false", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFddiPortLerFlag.setStatus('mandatory')
wfFddiPortConnectState = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 15, 4, 2, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("disabled", 1), ("connecting", 2), ("standby", 3), ("active", 4), ("unknown", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFddiPortConnectState.setStatus('mandatory')
wfFddiPortMacIndicated = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 15, 4, 2, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("ff", 1), ("ft", 2), ("tf", 3), ("tt", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFddiPortMacIndicated.setStatus('mandatory')
wfFddiPortExtTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 4, 15, 4, 3), )
if mibBuilder.loadTexts: wfFddiPortExtTable.setStatus('mandatory')
wfFddiPortExtEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 4, 15, 4, 3, 1), ).setIndexNames((0, "Wellfleet-FDDI-MIB", "wfFddiPortExtSlot"), (0, "Wellfleet-FDDI-MIB", "wfFddiPortExtNode"), (0, "Wellfleet-FDDI-MIB", "wfFddiPortExtIndex"))
if mibBuilder.loadTexts: wfFddiPortExtEntry.setStatus('mandatory')
wfFddiPortDelete = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 15, 4, 3, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("created", 1), ("deleted", 2))).clone('created')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFddiPortDelete.setStatus('mandatory')
wfFddiPortExtSlot = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 15, 4, 3, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFddiPortExtSlot.setStatus('mandatory')
wfFddiPortExtNode = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 15, 4, 3, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFddiPortExtNode.setStatus('mandatory')
wfFddiPortExtCct = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 15, 4, 3, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFddiPortExtCct.setStatus('mandatory')
wfFddiPortExtIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 15, 4, 3, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFddiPortExtIndex.setStatus('mandatory')
wfFddiPortConnectionPolicies = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 15, 4, 3, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("maclct", 1), ("macloop", 2))).clone('maclct')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFddiPortConnectionPolicies.setStatus('mandatory')
wfFddiPortCurrentPath = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 15, 4, 3, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("isolated", 1), ("local", 2), ("secondary", 3), ("primary", 4), ("concatenated", 5), ("thru", 6))).clone('isolated')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFddiPortCurrentPath.setStatus('mandatory')
wfFddiPortMacPlacement = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 15, 4, 3, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFddiPortMacPlacement.setStatus('mandatory')
wfFddiPortAvailablePaths = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 15, 4, 3, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 4))).clone(namedValues=NamedValues(("p", 1), ("s", 2), ("l", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFddiPortAvailablePaths.setStatus('mandatory')
wfFddiPortPmdClass = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 15, 4, 3, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("multimode", 1), ("mode1", 2), ("mode2", 3), ("sonet", 4), ("fiber", 5), ("twistedpair", 6), ("unknown", 7), ("unspecified", 8)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFddiPortPmdClass.setStatus('mandatory')
wfFddiPortConnectionCapabilities = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 15, 4, 3, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("maclct", 1), ("macloop", 2))).clone('maclct')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFddiPortConnectionCapabilities.setStatus('mandatory')
wfFddiPortEbErrorCts = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 15, 4, 3, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFddiPortEbErrorCts.setStatus('mandatory')
wfFddiPortLctFailCts = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 15, 4, 3, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFddiPortLctFailCts.setStatus('mandatory')
wfFddiPortLerEstimate = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 15, 4, 3, 1, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(4, 15)).clone(15)).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFddiPortLerEstimate.setStatus('mandatory')
wfFddiPortLemRejectCts = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 15, 4, 3, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFddiPortLemRejectCts.setStatus('mandatory')
wfFddiPortLemCts = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 15, 4, 3, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFddiPortLemCts.setStatus('mandatory')
wfFddiPortLerCutOff = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 15, 4, 3, 1, 17), Integer32().subtype(subtypeSpec=ValueRangeConstraint(4, 15)).clone(7)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFddiPortLerCutOff.setStatus('mandatory')
wfFddiPortLerAlarm = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 15, 4, 3, 1, 18), Integer32().subtype(subtypeSpec=ValueRangeConstraint(4, 15)).clone(8)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFddiPortLerAlarm.setStatus('mandatory')
wfFddiPortPcWithhold = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 15, 4, 3, 1, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("none", 1), ("mtom", 2), ("otherincompatible", 3), ("pathnotavailable", 4))).clone('none')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFddiPortPcWithhold.setStatus('mandatory')
wfFddiPortHardwarePresent = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 15, 4, 3, 1, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("notpresent", 1), ("present", 2))).clone('present')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFddiPortHardwarePresent.setStatus('mandatory')
wfFddiPortActionTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 4, 15, 4, 4), )
if mibBuilder.loadTexts: wfFddiPortActionTable.setStatus('mandatory')
wfFddiPortActionEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 4, 15, 4, 4, 1), ).setIndexNames((0, "Wellfleet-FDDI-MIB", "wfFddiPortActionSlot"), (0, "Wellfleet-FDDI-MIB", "wfFddiPortActionNode"), (0, "Wellfleet-FDDI-MIB", "wfFddiPortActionIndex"))
if mibBuilder.loadTexts: wfFddiPortActionEntry.setStatus('mandatory')
wfFddiPortActionDelete = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 15, 4, 4, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("created", 1), ("deleted", 2))).clone('created')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFddiPortActionDelete.setStatus('mandatory')
wfFddiPortActionSlot = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 15, 4, 4, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFddiPortActionSlot.setStatus('mandatory')
wfFddiPortActionNode = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 15, 4, 4, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFddiPortActionNode.setStatus('mandatory')
wfFddiPortActionCct = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 15, 4, 4, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFddiPortActionCct.setStatus('mandatory')
wfFddiPortActionIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 15, 4, 4, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFddiPortActionIndex.setStatus('mandatory')
wfFddiPortAction = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 15, 4, 4, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("other", 1), ("maint", 2), ("enable", 3), ("disable", 4), ("start", 5), ("stop", 6)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFddiPortAction.setStatus('mandatory')
wfFddiXLineCfgTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 4, 15, 5, 1), )
if mibBuilder.loadTexts: wfFddiXLineCfgTable.setStatus('mandatory')
wfFddiXLineCfgEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 4, 15, 5, 1, 1), ).setIndexNames((0, "Wellfleet-FDDI-MIB", "wfFddiXLineCfgSlot"), (0, "Wellfleet-FDDI-MIB", "wfFddiXLineCfgNode"))
if mibBuilder.loadTexts: wfFddiXLineCfgEntry.setStatus('mandatory')
wfFddiXLineCfgDelete = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 15, 5, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("create", 1), ("delete", 2))).clone('create')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFddiXLineCfgDelete.setStatus('mandatory')
wfFddiXLineCfgEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 15, 5, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('enable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFddiXLineCfgEnable.setStatus('mandatory')
wfFddiXLineCfgLossOfServiceTmo = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 15, 5, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647)).clone(3)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFddiXLineCfgLossOfServiceTmo.setStatus('mandatory')
wfFddiXLineCfgSmtEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 15, 5, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('enable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFddiXLineCfgSmtEnable.setStatus('mandatory')
wfFddiXLineCfgSmtDatProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 15, 5, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('enable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFddiXLineCfgSmtDatProtocol.setStatus('mandatory')
wfFddiXLineCfgLineNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 15, 5, 1, 1, 6), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFddiXLineCfgLineNumber.setStatus('mandatory')
wfFddiXLineCfgForcePeerTree = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 15, 5, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFddiXLineCfgForcePeerTree.setStatus('mandatory')
wfFddiXLineCfgSlot = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 15, 5, 1, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 14))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFddiXLineCfgSlot.setStatus('mandatory')
wfFddiXLineCfgModule = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 15, 5, 1, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("one", 1), ("two", 2), ("three", 3), ("four", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFddiXLineCfgModule.setStatus('mandatory')
wfFddiXLineCfgActualNode = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 15, 5, 1, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("one", 1), ("two", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFddiXLineCfgActualNode.setStatus('mandatory')
wfFddiXLineCfgNode = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 15, 5, 1, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 44))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFddiXLineCfgNode.setStatus('mandatory')
wfFddiXLineCfgSmtIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 15, 5, 1, 1, 12), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFddiXLineCfgSmtIndex.setStatus('mandatory')
wfFddiXLineCfgIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 15, 5, 1, 1, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFddiXLineCfgIfIndex.setStatus('mandatory')
wfFddiXLineTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 4, 15, 5, 2), )
if mibBuilder.loadTexts: wfFddiXLineTable.setStatus('mandatory')
wfFddiXLineEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 4, 15, 5, 2, 1), ).setIndexNames((0, "Wellfleet-FDDI-MIB", "wfFddiXLineIfIndex"))
if mibBuilder.loadTexts: wfFddiXLineEntry.setStatus('mandatory')
wfFddiXLineSlot = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 15, 5, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 14))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFddiXLineSlot.setStatus('mandatory')
wfFddiXLineModule = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 15, 5, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("one", 1), ("two", 2), ("three", 3), ("four", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFddiXLineModule.setStatus('mandatory')
wfFddiXLineActualNode = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 15, 5, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("one", 1), ("two", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFddiXLineActualNode.setStatus('mandatory')
wfFddiXLineNode = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 15, 5, 2, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 44))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFddiXLineNode.setStatus('mandatory')
wfFddiXLineSmtIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 15, 5, 2, 1, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFddiXLineSmtIndex.setStatus('mandatory')
wfFddiXLineIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 15, 5, 2, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFddiXLineIfIndex.setStatus('mandatory')
wfFddiXLineTxErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 15, 5, 2, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFddiXLineTxErrors.setStatus('mandatory')
wfFddiXLineTxAborts = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 15, 5, 2, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFddiXLineTxAborts.setStatus('mandatory')
wfFddiXLineTxOverruns = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 15, 5, 2, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFddiXLineTxOverruns.setStatus('mandatory')
wfFddiXLineTxUnderruns = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 15, 5, 2, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFddiXLineTxUnderruns.setStatus('mandatory')
wfFddiXLineRxErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 15, 5, 2, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFddiXLineRxErrors.setStatus('mandatory')
wfFddiXLineRxCrcErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 15, 5, 2, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFddiXLineRxCrcErrors.setStatus('mandatory')
wfFddiXLineRxSmtCrcErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 15, 5, 2, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFddiXLineRxSmtCrcErrors.setStatus('mandatory')
wfFddiXLineRxInvalidFrameStatusErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 15, 5, 2, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFddiXLineRxInvalidFrameStatusErrors.setStatus('mandatory')
wfFddiXLineRxSmtInvalidFrameStatusErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 15, 5, 2, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFddiXLineRxSmtInvalidFrameStatusErrors.setStatus('mandatory')
wfFddiXLineRxMacErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 15, 5, 2, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFddiXLineRxMacErrors.setStatus('mandatory')
wfFddiXLineRxSmtMacErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 15, 5, 2, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFddiXLineRxSmtMacErrors.setStatus('mandatory')
wfFddiXLineRxFormatErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 15, 5, 2, 1, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFddiXLineRxFormatErrors.setStatus('mandatory')
wfFddiXLineRxSmtFormatErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 15, 5, 2, 1, 19), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFddiXLineRxSmtFormatErrors.setStatus('mandatory')
wfFddiXLineRxFragmentErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 15, 5, 2, 1, 20), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFddiXLineRxFragmentErrors.setStatus('mandatory')
wfFddiXLineRxSmtFragmentErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 15, 5, 2, 1, 21), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFddiXLineRxSmtFragmentErrors.setStatus('mandatory')
wfFddiXLineRxInvalidLengthErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 15, 5, 2, 1, 22), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFddiXLineRxInvalidLengthErrors.setStatus('mandatory')
wfFddiXLineRxSmtInvalidLengthErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 15, 5, 2, 1, 23), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFddiXLineRxSmtInvalidLengthErrors.setStatus('mandatory')
wfFddiXLineRxAbortErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 15, 5, 2, 1, 24), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFddiXLineRxAbortErrors.setStatus('mandatory')
wfFddiXLineRxSmtAbortErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 15, 5, 2, 1, 25), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFddiXLineRxSmtAbortErrors.setStatus('mandatory')
wfFddiXLineRxEDataUnknownErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 15, 5, 2, 1, 26), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFddiXLineRxEDataUnknownErrors.setStatus('mandatory')
wfFddiXLineRxSmtEDataUnknownErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 15, 5, 2, 1, 27), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFddiXLineRxSmtEDataUnknownErrors.setStatus('mandatory')
wfFddiXLineRxLastEDataFStatusErrorVal = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 15, 5, 2, 1, 28), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFddiXLineRxLastEDataFStatusErrorVal.setStatus('mandatory')
wfFddiXLineRxSmtLastEDataFStatusErrorVal = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 15, 5, 2, 1, 29), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFddiXLineRxSmtLastEDataFStatusErrorVal.setStatus('mandatory')
wfFddiXLineRxOverruns = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 15, 5, 2, 1, 30), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFddiXLineRxOverruns.setStatus('mandatory')
wfFddiXLineRxUnderruns = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 15, 5, 2, 1, 31), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFddiXLineRxUnderruns.setStatus('mandatory')
wfFddiXLineRxOversizedFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 15, 5, 2, 1, 32), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFddiXLineRxOversizedFrames.setStatus('mandatory')
wfFddiXLineRxSmtOversizedFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 15, 5, 2, 1, 33), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFddiXLineRxSmtOversizedFrames.setStatus('mandatory')
wfFddiXLineRxUndersizedFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 15, 5, 2, 1, 34), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFddiXLineRxUndersizedFrames.setStatus('mandatory')
wfFddiXLineRxSmtUndersizedFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 15, 5, 2, 1, 35), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFddiXLineRxSmtUndersizedFrames.setStatus('mandatory')
wfFddiXLineRxSmtSecondaryNsaFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 15, 5, 2, 1, 36), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFddiXLineRxSmtSecondaryNsaFrames.setStatus('mandatory')
wfFddiXLineUnexpectedFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 15, 5, 2, 1, 37), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFddiXLineUnexpectedFrames.setStatus('mandatory')
wfFddiXLineRxSmtOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 15, 5, 2, 1, 38), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFddiXLineRxSmtOctets.setStatus('mandatory')
wfFddiXLineRxSmtFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 15, 5, 2, 1, 39), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFddiXLineRxSmtFrames.setStatus('mandatory')
wfFddiXLineTxSmtOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 15, 5, 2, 1, 40), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFddiXLineTxSmtOctets.setStatus('mandatory')
wfFddiXLineTxSmtFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 15, 5, 2, 1, 41), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFddiXLineTxSmtFrames.setStatus('mandatory')
wfFddiXLinePhyALogPtr = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 15, 5, 2, 1, 42), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFddiXLinePhyALogPtr.setStatus('mandatory')
wfFddiXLinePhyBLogPtr = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 15, 5, 2, 1, 43), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFddiXLinePhyBLogPtr.setStatus('mandatory')
wfFddiXSmtTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 4, 15, 5, 3), )
if mibBuilder.loadTexts: wfFddiXSmtTable.setStatus('mandatory')
wfFddiXSmtEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 4, 15, 5, 3, 1), ).setIndexNames((0, "Wellfleet-FDDI-MIB", "wfFddiXSmtIndex"))
if mibBuilder.loadTexts: wfFddiXSmtEntry.setStatus('mandatory')
wfFddiXSmtIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 15, 5, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFddiXSmtIndex.setStatus('mandatory')
wfFddiXSmtManufacturerData = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 15, 5, 3, 1, 2), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFddiXSmtManufacturerData.setStatus('mandatory')
wfFddiXMacTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 4, 15, 5, 4), )
if mibBuilder.loadTexts: wfFddiXMacTable.setStatus('mandatory')
wfFddiXMacEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 4, 15, 5, 4, 1), ).setIndexNames((0, "Wellfleet-FDDI-MIB", "wfFddiXMacSmtIndex"), (0, "Wellfleet-FDDI-MIB", "wfFddiXMacIndex"))
if mibBuilder.loadTexts: wfFddiXMacEntry.setStatus('mandatory')
wfFddiXMacSmtIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 15, 5, 4, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFddiXMacSmtIndex.setStatus('mandatory')
wfFddiXMacIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 15, 5, 4, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFddiXMacIndex.setStatus('mandatory')
wfFddiXMacBridgeFunctions = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 15, 5, 4, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 4))).clone(namedValues=NamedValues(("transparent", 1), ("srcroute", 2), ("srt", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFddiXMacBridgeFunctions.setStatus('mandatory')
wfFddiXMacDuplicateTokenCts = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 15, 5, 4, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFddiXMacDuplicateTokenCts.setStatus('mandatory')
wfFddiXPortTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 4, 15, 5, 5), )
if mibBuilder.loadTexts: wfFddiXPortTable.setStatus('mandatory')
wfFddiXPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 4, 15, 5, 5, 1), ).setIndexNames((0, "Wellfleet-FDDI-MIB", "wfFddiXPortSmtIndex"), (0, "Wellfleet-FDDI-MIB", "wfFddiXPortIndex"))
if mibBuilder.loadTexts: wfFddiXPortEntry.setStatus('mandatory')
wfFddiXPortSmtIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 15, 5, 5, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFddiXPortSmtIndex.setStatus('mandatory')
wfFddiXPortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 15, 5, 5, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFddiXPortIndex.setStatus('mandatory')
wfFddiXPortEbErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 15, 5, 5, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFddiXPortEbErrors.setStatus('mandatory')
mibBuilder.exportSymbols("Wellfleet-FDDI-MIB", wfFddiPathExtCct=wfFddiPathExtCct, wfFDDIOutQLen=wfFDDIOutQLen, wfFddiMacCurrentPath=wfFddiMacCurrentPath, wfFddiXLineRxSmtUndersizedFrames=wfFddiXLineRxSmtUndersizedFrames, wfFddiPortNode=wfFddiPortNode, wfFddiXLineCfgEntry=wfFddiXLineCfgEntry, wfFddiMacDownstreamNbr=wfFddiMacDownstreamNbr, wfFddiPathConfiguration=wfFddiPathConfiguration, wfFddiXLineRxSmtLastEDataFStatusErrorVal=wfFddiXLineRxSmtLastEDataFStatusErrorVal, wfFddiPortActionCct=wfFddiPortActionCct, wfFddiPortActionSlot=wfFddiPortActionSlot, wfFddiMacHardwarePresent=wfFddiMacHardwarePresent, wfFddiSmtConfigCapabilities=wfFddiSmtConfigCapabilities, wfFddiMacTMaxCapability=wfFddiMacTMaxCapability, wfFddiXLineCfgModule=wfFddiXLineCfgModule, wfFddiXSmtIndex=wfFddiXSmtIndex, wfFddiXSmtManufacturerData=wfFddiXSmtManufacturerData, wfFddiXLineUnexpectedFrames=wfFddiXLineUnexpectedFrames, wfFddiXMacTable=wfFddiXMacTable, wfFddiSmtActionEntry=wfFddiSmtActionEntry, wfFDDITxProcessings=wfFDDITxProcessings, wfFDDIForcePeerTree=wfFDDIForcePeerTree, wfFddiPortMacPlacement=wfFddiPortMacPlacement, wfFDDICrcErrRx=wfFDDICrcErrRx, wfFDDICfgRxQueueLength=wfFDDICfgRxQueueLength, wfFddiPortBsFlag=wfFddiPortBsFlag, wfFddiPortExtCct=wfFddiPortExtCct, wfFDDIRxSmtUndersizedFrames=wfFDDIRxSmtUndersizedFrames, wfFddiPortGroup=wfFddiPortGroup, wfFDDIBoflLen=wfFDDIBoflLen, wfFddiPortPmdClass=wfFddiPortPmdClass, wfFddiSmtExtNode=wfFddiSmtExtNode, wfFddiXLineTxUnderruns=wfFddiXLineTxUnderruns, wfFDDIActualNode=wfFDDIActualNode, wfFddiPathGroup=wfFddiPathGroup, wfFddiSmtEntry=wfFddiSmtEntry, wfFddiXLineRxCrcErrors=wfFddiXLineRxCrcErrors, wfFDDISmtRingErrRx=wfFDDISmtRingErrRx, wfFDDIEnable=wfFDDIEnable, wfFddiXLinePhyBLogPtr=wfFddiXLinePhyBLogPtr, wfFddiPathTMaxLowerBound=wfFddiPathTMaxLowerBound, wfFddiMacAvailablePaths=wfFddiMacAvailablePaths, wfFddiPortHardwarePresent=wfFddiPortHardwarePresent, wfFddiMacExtCct=wfFddiMacExtCct, wfFddiMacExtTable=wfFddiMacExtTable, wfFddiSmtActionDelete=wfFddiSmtActionDelete, wfFddiXPortEbErrors=wfFddiXPortEbErrors, wfFddiPathTable=wfFddiPathTable, wfFddiXLineCfgIfIndex=wfFddiXLineCfgIfIndex, wfFddiPortLerEstimate=wfFddiPortLerEstimate, wfFddiSmtGroup=wfFddiSmtGroup, wfFDDIAbortTx=wfFDDIAbortTx, wfFDDISlot=wfFDDISlot, wfFddiPortPcWithhold=wfFddiPortPcWithhold, wfFddiMacLostCts=wfFddiMacLostCts, wfFddiXLineSmtIndex=wfFddiXLineSmtIndex, wfFddiMacDuplicateTokenCts=wfFddiMacDuplicateTokenCts, wfFddiMacTvxCapability=wfFddiMacTvxCapability, wfFddiXLineCfgSlot=wfFddiXLineCfgSlot, wfFDDIState=wfFDDIState, wfFDDILineNumber=wfFDDILineNumber, wfFddiPortLerFlag=wfFddiPortLerFlag, wfFddiXLineCfgLineNumber=wfFddiXLineCfgLineNumber, wfFDDIBofl=wfFDDIBofl, wfFddiPathMaxTReq=wfFddiPathMaxTReq, wfFDDIPortOpErr=wfFDDIPortOpErr, wfFDDIPhyALogPtr=wfFDDIPhyALogPtr, wfFddiMacSlot=wfFddiMacSlot, wfFddiMacRmtState=wfFddiMacRmtState, wfFddiPortEntry=wfFddiPortEntry, wfFddiPortPcType=wfFddiPortPcType, wfFddiPortActionEntry=wfFddiPortActionEntry, wfFddiXLineRxMacErrors=wfFddiXLineRxMacErrors, wfFddiSmtLoVersionId=wfFddiSmtLoVersionId, wfFddiXSmtEntry=wfFddiXSmtEntry, wfFDDIInvalidFrameStatusRx=wfFDDIInvalidFrameStatusRx, wfFddiSmtBypassPresent=wfFddiSmtBypassPresent, wfFddiMacTNeg=wfFddiMacTNeg, wfFddiPortLemRejectCts=wfFddiPortLemRejectCts, wfFddiPathExtSlot=wfFddiPathExtSlot, wfFddiXPortIndex=wfFddiXPortIndex, wfFddiTable=wfFddiTable, wfFddiMacExtEntry=wfFddiMacExtEntry, wfFDDIRxReplenMisses=wfFDDIRxReplenMisses, wfFddiMacExtSlot=wfFddiMacExtSlot, wfFddiXLineTable=wfFddiXLineTable, wfFddiPortLctFailCts=wfFddiPortLctFailCts, wfFDDIFramesRxOk=wfFDDIFramesRxOk, wfFddiXMacSmtIndex=wfFddiXMacSmtIndex, wfFddiXPortEntry=wfFddiXPortEntry, wfFddiSmtActionCct=wfFddiSmtActionCct, wfFDDIPromiscuous=wfFDDIPromiscuous, wfFddiSmtExtTable=wfFddiSmtExtTable, wfFddiMacLateCts=wfFddiMacLateCts, wfFddiPortLerAlarm=wfFddiPortLerAlarm, wfFddiSmtStatRptPolicy=wfFddiSmtStatRptPolicy, wfFddiMacCopiedCts=wfFddiMacCopiedCts, wfFddiXLineRxLastEDataFStatusErrorVal=wfFddiXLineRxLastEDataFStatusErrorVal, wfFddiXLineRxSmtFrames=wfFddiXLineRxSmtFrames, wfFddiSmtConfigPolicy=wfFddiSmtConfigPolicy, wfFddiMacTable=wfFddiMacTable, wfFddiXLineNode=wfFddiXLineNode, wfFddiXLineRxSmtAbortErrors=wfFddiXLineRxSmtAbortErrors, wfFddiMacOldDownstreamNbr=wfFddiMacOldDownstreamNbr, wfFDDIMacTvxValue=wfFDDIMacTvxValue, wfFddiSmtOpVersionId=wfFddiSmtOpVersionId, wfFddiMacFrameErrorFlag=wfFddiMacFrameErrorFlag, wfFddiPortPcmState=wfFddiPortPcmState, wfFddiPortExtIndex=wfFddiPortExtIndex, wfFddiXLineTxAborts=wfFddiXLineTxAborts, wfFDDILLCFrameControl=wfFDDILLCFrameControl, wfFddiXLineRxFormatErrors=wfFddiXLineRxFormatErrors, wfFddiPortSlot=wfFddiPortSlot, wfFddiSmtManufacturerData=wfFddiSmtManufacturerData, wfFddiMacErrorCts=wfFddiMacErrorCts, wfFddiPathExtNode=wfFddiPathExtNode, wfFddiXLineRxAbortErrors=wfFddiXLineRxAbortErrors, wfFDDIMacTMin=wfFDDIMacTMin, wfFddiPortConnectionPolicies=wfFddiPortConnectionPolicies, wfFddiMacTvxExpiredCts=wfFddiMacTvxExpiredCts, wfFDDISmtRxProcessings=wfFDDISmtRxProcessings, wfFddiXLineRxErrors=wfFddiXLineRxErrors, wfFddiSmtCfState=wfFddiSmtCfState, wfFddiPathExtTable=wfFddiPathExtTable, wfFddiSmtRemoteDisconnectFlag=wfFddiSmtRemoteDisconnectFlag, wfFddiXLineSlot=wfFddiXLineSlot, wfFddiSmtStationAction=wfFddiSmtStationAction, wfFddiXLineTxSmtFrames=wfFddiXLineTxSmtFrames, wfFddiPortActionIndex=wfFddiPortActionIndex, wfFddiXLineRxSmtEDataUnknownErrors=wfFddiXLineRxSmtEDataUnknownErrors, wfFddiXLinePhyALogPtr=wfFddiXLinePhyALogPtr, wfFddiSmtDatProtocol=wfFddiSmtDatProtocol, wfFddiPathDelete=wfFddiPathDelete, wfFddiXLineTxErrors=wfFddiXLineTxErrors, wfFddiMacDelete=wfFddiMacDelete, wfFddiXLineCfgForcePeerTree=wfFddiXLineCfgForcePeerTree, wfFDDISmtRingOverrunRx=wfFDDISmtRingOverrunRx, wfFddiSmtAvailablePaths=wfFddiSmtAvailablePaths, wfFddiPortPcNeighbor=wfFddiPortPcNeighbor, wfFddiSmtTable=wfFddiSmtTable, wfFddiPortExtTable=wfFddiPortExtTable, wfFDDIBoflNum=wfFDDIBoflNum, wfFddiPortEbErrorCts=wfFddiPortEbErrorCts, wfFDDIFramesTxOk=wfFDDIFramesTxOk, wfFDDITurboBofl=wfFDDITurboBofl, wfFddiXLineRxSmtInvalidLengthErrors=wfFddiXLineRxSmtInvalidLengthErrors, wfFddiPortLerCutOff=wfFddiPortLerCutOff, wfFddiMacMaUnitDataEnable=wfFddiMacMaUnitDataEnable, wfFddiMacDownstreamPortType=wfFddiMacDownstreamPortType, wfFddiXLineRxSmtCrcErrors=wfFddiXLineRxSmtCrcErrors, wfFddiMacGroup=wfFddiMacGroup, wfFddiXSmtTable=wfFddiXSmtTable, wfFddiXLineCfgSmtIndex=wfFddiXLineCfgSmtIndex, wfFddiPathSlot=wfFddiPathSlot, wfFddiSmtCct=wfFddiSmtCct, wfFDDIModule=wfFDDIModule, wfFDDITxRNRProcessings=wfFDDITxRNRProcessings, wfFddiPortCurrentPath=wfFddiPortCurrentPath, wfFddiSmtExtCct=wfFddiSmtExtCct, wfFddiXLineCfgDelete=wfFddiXLineCfgDelete, wfFddiSmtActionSlot=wfFddiSmtActionSlot, wfFddiSmtEcmState=wfFddiSmtEcmState, wfFddiXLineRxSmtFragmentErrors=wfFddiXLineRxSmtFragmentErrors, wfFddiEntry=wfFddiEntry, wfFddiMacDupAddrTest=wfFddiMacDupAddrTest, wfFddiPortIndex=wfFddiPortIndex, wfFddiPortExtEntry=wfFddiPortExtEntry, wfFddiXMacBridgeFunctions=wfFddiXMacBridgeFunctions, wfFddiMacSmtAddress=wfFddiMacSmtAddress, wfFddiXLineIfIndex=wfFddiXLineIfIndex, wfFddiXLineRxSmtInvalidFrameStatusErrors=wfFddiXLineRxSmtInvalidFrameStatusErrors, wfFddiPortActionNode=wfFddiPortActionNode, wfFDDIUnderrunTx=wfFDDIUnderrunTx, wfFddiMacRequestedPaths=wfFddiMacRequestedPaths, wfFDDIRingOverrunRx=wfFDDIRingOverrunRx, wfFddiMacFrameErrorThreshold=wfFddiMacFrameErrorThreshold, wfFddiPathNode=wfFddiPathNode, wfFddiPortRequestedPaths=wfFddiPortRequestedPaths, wfFddiXLineCfgSmtEnable=wfFddiXLineCfgSmtEnable, wfFddiPathTvxLowerBound=wfFddiPathTvxLowerBound, wfFDDIInternOpErr=wfFDDIInternOpErr, wfFDDIMacTMax=wfFDDIMacTMax, wfFDDIRxSmtOversizedFrames=wfFDDIRxSmtOversizedFrames, wfFddiXLineCfgTable=wfFddiXLineCfgTable, wfFddiXLineCfgNode=wfFddiXLineCfgNode, wfFddiSmtMasterCts=wfFddiSmtMasterCts, wfFddiMacExtNode=wfFddiMacExtNode, wfFddiSmtStationStatus=wfFddiSmtStationStatus, wfFDDIBoflTmo=wfFDDIBoflTmo, wfFddiPortExtSlot=wfFddiPortExtSlot, wfFddiXLineCfgActualNode=wfFddiXLineCfgActualNode, wfFddiXLineRxEDataUnknownErrors=wfFddiXLineRxEDataUnknownErrors, wfFddiSmtSlot=wfFddiSmtSlot, wfFddiMacTokenCts=wfFddiMacTokenCts, wfFddiXLineRxUnderruns=wfFddiXLineRxUnderruns, wfFddiMacFrameStatusFunctions=wfFddiMacFrameStatusFunctions, wfFddiPortExtNode=wfFddiPortExtNode, wfFddiMacUnaDaFlag=wfFddiMacUnaDaFlag, wfFddiSmtNonMasterCt=wfFddiSmtNonMasterCt, wfFddiPortLemCts=wfFddiPortLemCts, wfFDDITxClipFrames=wfFDDITxClipFrames, wfFddiXLineCfgLossOfServiceTmo=wfFddiXLineCfgLossOfServiceTmo, wfFDDIRxQueueLength=wfFDDIRxQueueLength, wfFddiPortConnectionCapabilities=wfFddiPortConnectionCapabilities, wfFddiSmtTraceMaxExpiration=wfFddiSmtTraceMaxExpiration, wfFddiSmtTransitionTimeStamp=wfFddiSmtTransitionTimeStamp, wfFDDIParityErrTx=wfFDDIParityErrTx, wfFDDITxQueueLength=wfFDDITxQueueLength, wfFDDICct=wfFDDICct, wfFddiMacBridgeFunctions=wfFddiMacBridgeFunctions, wfFddiXLineRxSmtOctets=wfFddiXLineRxSmtOctets, wfFDDIHardwareFilter=wfFDDIHardwareFilter, wfFddiMacMaUnitDataAvailable=wfFddiMacMaUnitDataAvailable, wfFddiXLineRxUndersizedFrames=wfFddiXLineRxUndersizedFrames, wfFDDIIntProcessings=wfFDDIIntProcessings, wfFddiPortTable=wfFddiPortTable, wfFddiMacFrameErrorRatio=wfFddiMacFrameErrorRatio, wfFDDIRxSmtOctets=wfFDDIRxSmtOctets, wfFddiMacOldUpstreamNbr=wfFddiMacOldUpstreamNbr, wfFddiXLineActualNode=wfFddiXLineActualNode, wfFddiXLineRxOverruns=wfFddiXLineRxOverruns, wfFddiSmtActionTable=wfFddiSmtActionTable, wfFddiXLineRxSmtMacErrors=wfFddiXLineRxSmtMacErrors, wfFddiSmtTimeStamp=wfFddiSmtTimeStamp, wfFddiXLineRxInvalidLengthErrors=wfFddiXLineRxInvalidLengthErrors, wfFDDIMadr=wfFDDIMadr, wfFDDILastChange=wfFDDILastChange, wfFddiSmtExtEntry=wfFddiSmtExtEntry, wfFddiSmtStationId=wfFddiSmtStationId, wfFddiXLineRxSmtSecondaryNsaFrames=wfFddiXLineRxSmtSecondaryNsaFrames, wfFddiXLineCfgSmtDatProtocol=wfFddiXLineCfgSmtDatProtocol, wfFddiMacDaFlag=wfFddiMacDaFlag, wfFDDIRxProcessings=wfFDDIRxProcessings, wfFddiMacUpstreamNbr=wfFddiMacUpstreamNbr, wfFDDIRxUndersizedFrames=wfFDDIRxUndersizedFrames, wfFddiSmtExtSlot=wfFddiSmtExtSlot, wfFddiMacRingOpCts=wfFddiMacRingOpCts, wfFddiXLineTxOverruns=wfFddiXLineTxOverruns, wfFDDIRxOversizedFrames=wfFDDIRxOversizedFrames, wfFDDIDelete=wfFDDIDelete, wfFDDIParityErrRx=wfFDDIParityErrRx, wfFDDIMacErrRx=wfFDDIMacErrRx, wfFDDICfgTxQueueLength=wfFDDICfgTxQueueLength, wfFddiSmtPeerWrapFlag=wfFddiSmtPeerWrapFlag, wfFddiXMacIndex=wfFddiXMacIndex, wfFddiXPortSmtIndex=wfFddiXPortSmtIndex, wfFddiXMacEntry=wfFddiXMacEntry, wfFddiSmtHiVersionId=wfFddiSmtHiVersionId, wfFddiXLineCfgEnable=wfFddiXLineCfgEnable, wfFddiXLineModule=wfFddiXLineModule, wfFddiXLineRxSmtFormatErrors=wfFddiXLineRxSmtFormatErrors, wfFddiXMacDuplicateTokenCts=wfFddiXMacDuplicateTokenCts, wfFDDIPhyBLogPtr=wfFDDIPhyBLogPtr, wfFddiSmtMacCt=wfFddiSmtMacCt)
mibBuilder.exportSymbols("Wellfleet-FDDI-MIB", wfFddiPortActionTable=wfFddiPortActionTable, wfFDDIRingErrRx=wfFDDIRingErrRx, wfFddiXLineRxOversizedFrames=wfFddiXLineRxOversizedFrames, wfFDDISmtTNotify=wfFDDISmtTNotify, wfFDDIMacTReq=wfFDDIMacTReq, wfFddiMacNode=wfFddiMacNode, wfFddiSmtNode=wfFddiSmtNode, wfFddiPortAvailablePaths=wfFddiPortAvailablePaths, wfFddiXLineEntry=wfFddiXLineEntry, wfFddiXLineRxInvalidFrameStatusErrors=wfFddiXLineRxInvalidFrameStatusErrors, wfFDDIOctetsTxOk=wfFDDIOctetsTxOk, wfFddiPortMacIndicated=wfFddiPortMacIndicated, wfFddiXLineRxFragmentErrors=wfFddiXLineRxFragmentErrors, wfFDDIHostErr=wfFDDIHostErr, wfFDDIOverrunRx=wfFDDIOverrunRx, wfFddiSmtUserData=wfFddiSmtUserData, wfFddiPathEntry=wfFddiPathEntry, wfFddiPortAction=wfFddiPortAction, wfFDDISmtConnectionPolicy=wfFDDISmtConnectionPolicy, wfFddiPortDelete=wfFddiPortDelete, wfFDDIOctetsRxOk=wfFDDIOctetsRxOk, wfFDDIMtu=wfFDDIMtu, wfFDDIRingErrTx=wfFDDIRingErrTx, wfFddiSmtMibVersionId=wfFddiSmtMibVersionId, wfFDDISmtEnable=wfFDDISmtEnable, wfFddiPathCct=wfFddiPathCct, wfFddiPortCct=wfFddiPortCct, wfFddiSmtDelete=wfFddiSmtDelete, wfFddiXLineRxSmtOversizedFrames=wfFddiXLineRxSmtOversizedFrames, wfFddiMacEntry=wfFddiMacEntry, wfFddiSmtActionNode=wfFddiSmtActionNode, wfFddiXLineTxSmtOctets=wfFddiXLineTxSmtOctets, wfFddiXPortTable=wfFddiXPortTable, wfFddiXGroup=wfFddiXGroup, wfFDDIRxSmtFrames=wfFDDIRxSmtFrames, wfFddiPortActionDelete=wfFddiPortActionDelete, wfFDDINode=wfFDDINode, wfFddiMacCct=wfFddiMacCct, wfFddiPathExtEntry=wfFddiPathExtEntry, wfFddiPortConnectState=wfFddiPortConnectState)
