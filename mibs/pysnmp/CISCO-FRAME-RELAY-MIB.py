#
# PySNMP MIB module CISCO-FRAME-RELAY-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CISCO-FRAME-RELAY-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:36:11 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ConstraintsIntersection, ConstraintsUnion, ValueSizeConstraint, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ConstraintsIntersection", "ConstraintsUnion", "ValueSizeConstraint", "ValueRangeConstraint")
ciscoMgmt, = mibBuilder.importSymbols("CISCO-SMI", "ciscoMgmt")
ifIndex, InterfaceIndex = mibBuilder.importSymbols("IF-MIB", "ifIndex", "InterfaceIndex")
frDlcmiEntry, frCircuitDlci, frCircuitEntry, frCircuitIfIndex = mibBuilder.importSymbols("RFC1315-MIB", "frDlcmiEntry", "frCircuitDlci", "frCircuitEntry", "frCircuitIfIndex")
NotificationGroup, ModuleCompliance, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance", "ObjectGroup")
Gauge32, MibIdentifier, Counter64, ModuleIdentity, Integer32, IpAddress, Bits, Unsigned32, iso, TimeTicks, NotificationType, ObjectIdentity, Counter32, MibScalar, MibTable, MibTableRow, MibTableColumn = mibBuilder.importSymbols("SNMPv2-SMI", "Gauge32", "MibIdentifier", "Counter64", "ModuleIdentity", "Integer32", "IpAddress", "Bits", "Unsigned32", "iso", "TimeTicks", "NotificationType", "ObjectIdentity", "Counter32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn")
TruthValue, DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "TruthValue", "DisplayString", "TextualConvention")
ciscoFrameRelayMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 9, 9, 49))
ciscoFrameRelayMIB.setRevisions(('2000-10-13 00:00', '2000-05-22 00:00', '2000-05-16 00:00', '2000-04-26 00:00', '1999-08-21 00:00', '1996-08-15 00:00',))
if mibBuilder.loadTexts: ciscoFrameRelayMIB.setLastUpdated('200010130000Z')
if mibBuilder.loadTexts: ciscoFrameRelayMIB.setOrganization('Cisco Systems, Inc.')
ciscoFrMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 49, 1))
cfrLmiObjs = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 49, 1, 1))
cfrCircuitObjs = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 49, 1, 2))
cfrMapObjs = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 49, 1, 3))
cfrSvcObjs = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 49, 1, 4))
cfrElmiObjs = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 49, 1, 5))
cfrFragObjs = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 49, 1, 6))
cfrConnectionObjs = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 49, 1, 7))
class DlciNumber(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ValueRangeConstraint(0, 1023)

class CfrMapProtocols(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 6, 7, 10, 11, 12, 13, 16, 18, 22, 25, 37, 38, 39, 40, 47, 48, 49, 53, 63, 74, 83, 999))
    namedValues = NamedValues(("arp", 1), ("serialArp", 6), ("ip", 7), ("xns", 10), ("novell", 11), ("apollo", 12), ("vines", 13), ("appletalk", 16), ("ieeeSpanning", 18), ("decnet", 22), ("clns", 25), ("rsrb", 37), ("bridge", 38), ("stun", 39), ("frArp", 40), ("uncompressedTcp", 47), ("compressedTcp", 48), ("llc2", 49), ("frSwitch", 53), ("dlsw", 63), ("nhrp", 74), ("compressedRtp", 83), ("wildcard", 999))

cfrLmiTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 49, 1, 1, 1), )
if mibBuilder.loadTexts: cfrLmiTable.setStatus('current')
cfrLmiEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 49, 1, 1, 1, 1), )
frDlcmiEntry.registerAugmentions(("CISCO-FRAME-RELAY-MIB", "cfrLmiEntry"))
cfrLmiEntry.setIndexNames(*frDlcmiEntry.getIndexNames())
if mibBuilder.loadTexts: cfrLmiEntry.setStatus('current')
cfrLmiLinkstatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 49, 1, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("up", 1), ("down", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfrLmiLinkstatus.setStatus('current')
cfrLmiLinkType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 49, 1, 1, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("dte", 1), ("dce", 2), ("nni", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfrLmiLinkType.setStatus('current')
cfrLmiEnquiryIns = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 49, 1, 1, 1, 1, 3), Counter32()).setUnits('messages').setMaxAccess("readonly")
if mibBuilder.loadTexts: cfrLmiEnquiryIns.setStatus('current')
cfrLmiEnquiryOuts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 49, 1, 1, 1, 1, 4), Counter32()).setUnits('messages').setMaxAccess("readonly")
if mibBuilder.loadTexts: cfrLmiEnquiryOuts.setStatus('current')
cfrLmiStatusIns = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 49, 1, 1, 1, 1, 5), Counter32()).setUnits('messages').setMaxAccess("readonly")
if mibBuilder.loadTexts: cfrLmiStatusIns.setStatus('current')
cfrLmiStatusOuts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 49, 1, 1, 1, 1, 6), Counter32()).setUnits('messages').setMaxAccess("readonly")
if mibBuilder.loadTexts: cfrLmiStatusOuts.setStatus('current')
cfrLmiUpdateStatusIns = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 49, 1, 1, 1, 1, 7), Counter32()).setUnits('messages').setMaxAccess("readonly")
if mibBuilder.loadTexts: cfrLmiUpdateStatusIns.setStatus('current')
cfrLmiUpdateStatusOuts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 49, 1, 1, 1, 1, 8), Counter32()).setUnits('messages').setMaxAccess("readonly")
if mibBuilder.loadTexts: cfrLmiUpdateStatusOuts.setStatus('current')
cfrLmiStatusTimeouts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 49, 1, 1, 1, 1, 9), Counter32()).setUnits('times').setMaxAccess("readonly")
if mibBuilder.loadTexts: cfrLmiStatusTimeouts.setStatus('current')
cfrLmiStatusEnqTimeouts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 49, 1, 1, 1, 1, 10), Counter32()).setUnits('times').setMaxAccess("readonly")
if mibBuilder.loadTexts: cfrLmiStatusEnqTimeouts.setStatus('current')
cfrLmiN392Dce = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 49, 1, 1, 1, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 10))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfrLmiN392Dce.setStatus('current')
cfrLmiN393Dce = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 49, 1, 1, 1, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 10))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfrLmiN393Dce.setStatus('current')
cfrLmiT392Dce = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 49, 1, 1, 1, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 30))).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: cfrLmiT392Dce.setStatus('current')
cfrCircuitTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 49, 1, 2, 1), )
if mibBuilder.loadTexts: cfrCircuitTable.setStatus('current')
cfrCircuitEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 49, 1, 2, 1, 1), )
frCircuitEntry.registerAugmentions(("CISCO-FRAME-RELAY-MIB", "cfrCircuitEntry"))
cfrCircuitEntry.setIndexNames(*frCircuitEntry.getIndexNames())
if mibBuilder.loadTexts: cfrCircuitEntry.setStatus('current')
cfrCircuitDEins = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 49, 1, 2, 1, 1, 1), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cfrCircuitDEins.setStatus('current')
cfrCircuitDEouts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 49, 1, 2, 1, 1, 2), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cfrCircuitDEouts.setStatus('current')
cfrCircuitDropPktsOuts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 49, 1, 2, 1, 1, 3), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cfrCircuitDropPktsOuts.setStatus('current')
cfrCircuitType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 49, 1, 2, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("pvc", 1), ("svc", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfrCircuitType.setStatus('current')
cfrExtCircuitTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 49, 1, 2, 2), )
if mibBuilder.loadTexts: cfrExtCircuitTable.setStatus('current')
cfrExtCircuitEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 49, 1, 2, 2, 1), )
frCircuitEntry.registerAugmentions(("CISCO-FRAME-RELAY-MIB", "cfrExtCircuitEntry"))
cfrExtCircuitEntry.setIndexNames(*frCircuitEntry.getIndexNames())
if mibBuilder.loadTexts: cfrExtCircuitEntry.setStatus('current')
cfrExtCircuitIfName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 49, 1, 2, 2, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfrExtCircuitIfName.setStatus('current')
cfrExtCircuitIfType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 49, 1, 2, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("mainInterface", 1), ("pointToPoint", 2), ("multipoint", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfrExtCircuitIfType.setStatus('current')
cfrExtCircuitSubifIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 49, 1, 2, 2, 1, 3), InterfaceIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfrExtCircuitSubifIndex.setStatus('current')
cfrExtCircuitMapStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 49, 1, 2, 2, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2047))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfrExtCircuitMapStatus.setStatus('current')
cfrExtCircuitCreateType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 49, 1, 2, 2, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("dynamic", 1), ("static", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfrExtCircuitCreateType.setStatus('current')
cfrExtCircuitMulticast = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 49, 1, 2, 2, 1, 6), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfrExtCircuitMulticast.setStatus('current')
cfrExtCircuitRoutedDlci = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 49, 1, 2, 2, 1, 7), DlciNumber()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfrExtCircuitRoutedDlci.setStatus('current')
cfrExtCircuitRoutedIf = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 49, 1, 2, 2, 1, 8), InterfaceIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfrExtCircuitRoutedIf.setStatus('current')
cfrExtCircuitUncompressIns = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 49, 1, 2, 2, 1, 9), Counter32()).setUnits('octets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cfrExtCircuitUncompressIns.setStatus('current')
cfrExtCircuitUncompressOuts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 49, 1, 2, 2, 1, 10), Counter32()).setUnits('octets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cfrExtCircuitUncompressOuts.setStatus('current')
cfrExtCircuitFECNOuts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 49, 1, 2, 2, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfrExtCircuitFECNOuts.setStatus('current')
cfrExtCircuitBECNOuts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 49, 1, 2, 2, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfrExtCircuitBECNOuts.setStatus('current')
cfrExtCircuitMinThruputOut = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 49, 1, 2, 2, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(9600, 1544000))).setUnits('bits per second').setMaxAccess("readonly")
if mibBuilder.loadTexts: cfrExtCircuitMinThruputOut.setStatus('current')
cfrExtCircuitMinThruputIn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 49, 1, 2, 2, 1, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(9600, 1544000))).setUnits('bits per second').setMaxAccess("readonly")
if mibBuilder.loadTexts: cfrExtCircuitMinThruputIn.setStatus('current')
cfrExtCircuitBcastPktOuts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 49, 1, 2, 2, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfrExtCircuitBcastPktOuts.setStatus('current')
cfrExtCircuitBcastByteOuts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 49, 1, 2, 2, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfrExtCircuitBcastByteOuts.setStatus('current')
cfrExtCircuitBandwidth = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 49, 1, 2, 2, 1, 17), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 16777215))).setUnits('bits per second').setMaxAccess("readonly")
if mibBuilder.loadTexts: cfrExtCircuitBandwidth.setStatus('current')
cfrExtCircuitShapeByteLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 49, 1, 2, 2, 1, 18), Integer32().subtype(subtypeSpec=ValueRangeConstraint(125, 2147483647))).setUnits('octets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cfrExtCircuitShapeByteLimit.setStatus('current')
cfrExtCircuitShapeInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 49, 1, 2, 2, 1, 19), Integer32().subtype(subtypeSpec=ValueRangeConstraint(10, 125))).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: cfrExtCircuitShapeInterval.setStatus('current')
cfrExtCircuitShapeByteIncrement = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 49, 1, 2, 2, 1, 20), Integer32().subtype(subtypeSpec=ValueRangeConstraint(125, 2147483647))).setUnits('octets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cfrExtCircuitShapeByteIncrement.setStatus('current')
cfrExtCircuitShapePkts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 49, 1, 2, 2, 1, 21), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfrExtCircuitShapePkts.setStatus('current')
cfrExtCircuitShapeBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 49, 1, 2, 2, 1, 22), Counter32()).setUnits('octets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cfrExtCircuitShapeBytes.setStatus('current')
cfrExtCircuitShapePktsDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 49, 1, 2, 2, 1, 23), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfrExtCircuitShapePktsDelay.setStatus('current')
cfrExtCircuitShapeBytesDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 49, 1, 2, 2, 1, 24), Counter32()).setUnits('octets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cfrExtCircuitShapeBytesDelay.setStatus('current')
cfrExtCircuitShapeActive = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 49, 1, 2, 2, 1, 25), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfrExtCircuitShapeActive.setStatus('current')
cfrExtCircuitShapeAdapting = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 49, 1, 2, 2, 1, 26), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("none", 1), ("becn", 2), ("foreSight", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfrExtCircuitShapeAdapting.setStatus('current')
cfrExtCircuitTxDataRate = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 49, 1, 2, 2, 1, 27), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 45000000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfrExtCircuitTxDataRate.setStatus('current')
cfrExtCircuitTxPktRate = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 49, 1, 2, 2, 1, 28), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 45000000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfrExtCircuitTxPktRate.setStatus('current')
cfrExtCircuitRcvDataRate = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 49, 1, 2, 2, 1, 29), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 45000000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfrExtCircuitRcvDataRate.setStatus('current')
cfrExtCircuitRcvPktRate = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 49, 1, 2, 2, 1, 30), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 45000000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfrExtCircuitRcvPktRate.setStatus('current')
cfrMapTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 49, 1, 3, 1), )
if mibBuilder.loadTexts: cfrMapTable.setStatus('current')
cfrMapEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 49, 1, 3, 1, 1), ).setIndexNames((0, "RFC1315-MIB", "frCircuitIfIndex"), (0, "RFC1315-MIB", "frCircuitDlci"), (0, "CISCO-FRAME-RELAY-MIB", "cfrMapIndex"))
if mibBuilder.loadTexts: cfrMapEntry.setStatus('current')
cfrMapIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 49, 1, 3, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 999))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfrMapIndex.setStatus('current')
cfrMapProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 49, 1, 3, 1, 1, 2), CfrMapProtocols()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfrMapProtocol.setStatus('current')
cfrMapAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 49, 1, 3, 1, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfrMapAddress.setStatus('current')
cfrMapType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 49, 1, 3, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("static", 1), ("dynamic", 2), ("svc", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfrMapType.setStatus('current')
cfrMapEncaps = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 49, 1, 3, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("ietf", 1), ("cisco", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfrMapEncaps.setStatus('current')
cfrMapBroadcast = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 49, 1, 3, 1, 1, 6), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfrMapBroadcast.setStatus('current')
cfrMapPayloadCompress = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 49, 1, 3, 1, 1, 7), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfrMapPayloadCompress.setStatus('deprecated')
cfrMapTcpHdrCompress = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 49, 1, 3, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("inapplicable", 1), ("passive", 2), ("active", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfrMapTcpHdrCompress.setStatus('current')
cfrMapRtpHdrCompress = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 49, 1, 3, 1, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("inapplicable", 1), ("passive", 2), ("active", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfrMapRtpHdrCompress.setStatus('current')
cfrMapPayloadCompressType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 49, 1, 3, 1, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("inapplicable", 1), ("cisco", 2), ("frf9Software", 3), ("frf9Hardware", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfrMapPayloadCompressType.setStatus('current')
cfrSvcTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 49, 1, 4, 1), )
if mibBuilder.loadTexts: cfrSvcTable.setStatus('current')
cfrSvcEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 49, 1, 4, 1, 1), ).setIndexNames((0, "RFC1315-MIB", "frCircuitIfIndex"), (0, "RFC1315-MIB", "frCircuitDlci"))
if mibBuilder.loadTexts: cfrSvcEntry.setStatus('current')
cfrSvcAddrLocal = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 49, 1, 4, 1, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfrSvcAddrLocal.setStatus('current')
cfrSvcAddrRemote = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 49, 1, 4, 1, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfrSvcAddrRemote.setStatus('current')
cfrSvcThroughputIn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 49, 1, 4, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(9600, 1544000))).setUnits('bits per second').setMaxAccess("readonly")
if mibBuilder.loadTexts: cfrSvcThroughputIn.setStatus('current')
cfrSvcMinThruputOut = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 49, 1, 4, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(9600, 1544000))).setUnits('bits per second').setMaxAccess("readonly")
if mibBuilder.loadTexts: cfrSvcMinThruputOut.setStatus('deprecated')
cfrSvcMinThruputIn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 49, 1, 4, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(9600, 1544000))).setUnits('bits per second').setMaxAccess("readonly")
if mibBuilder.loadTexts: cfrSvcMinThruputIn.setStatus('deprecated')
cfrSvcCommitBurstIn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 49, 1, 4, 1, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(9600, 1544000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfrSvcCommitBurstIn.setStatus('current')
cfrSvcExcessBurstIn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 49, 1, 4, 1, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(9600, 2440000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfrSvcExcessBurstIn.setStatus('current')
cfrSvcIdleTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 49, 1, 4, 1, 1, 8), Integer32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: cfrSvcIdleTime.setStatus('current')
cfrElmiIpAddr = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 49, 1, 5, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfrElmiIpAddr.setStatus('current')
cfrElmiTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 49, 1, 5, 2), )
if mibBuilder.loadTexts: cfrElmiTable.setStatus('current')
cfrElmiEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 49, 1, 5, 2, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: cfrElmiEntry.setStatus('current')
cfrElmiLinkStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 49, 1, 5, 2, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfrElmiLinkStatus.setStatus('current')
cfrElmiArStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 49, 1, 5, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfrElmiArStatus.setStatus('current')
cfrElmiRemoteStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 49, 1, 5, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfrElmiRemoteStatus.setStatus('current')
cfrElmiNeighborTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 49, 1, 5, 3), )
if mibBuilder.loadTexts: cfrElmiNeighborTable.setStatus('current')
cfrElmiNeighborEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 49, 1, 5, 3, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: cfrElmiNeighborEntry.setStatus('current')
cfrElmiNeighborArStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 49, 1, 5, 3, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("notsupported", 1), ("enabled", 2), ("disabled", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfrElmiNeighborArStatus.setStatus('current')
cfrElmiNeighborIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 49, 1, 5, 3, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfrElmiNeighborIpAddress.setStatus('current')
cfrElmiNeighborIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 49, 1, 5, 3, 1, 3), InterfaceIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfrElmiNeighborIfIndex.setStatus('current')
cfrElmiNeighborVendorName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 49, 1, 5, 3, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfrElmiNeighborVendorName.setStatus('current')
cfrElmiNeighborPlatformName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 49, 1, 5, 3, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfrElmiNeighborPlatformName.setStatus('current')
cfrElmiNeighborDeviceName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 49, 1, 5, 3, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfrElmiNeighborDeviceName.setStatus('current')
cfrFragTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 49, 1, 6, 1), )
if mibBuilder.loadTexts: cfrFragTable.setStatus('current')
cfrFragEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 49, 1, 6, 1, 1), ).setIndexNames((0, "RFC1315-MIB", "frCircuitIfIndex"), (0, "RFC1315-MIB", "frCircuitDlci"))
if mibBuilder.loadTexts: cfrFragEntry.setStatus('current')
cfrFragSize = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 49, 1, 6, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(16, 1600))).setUnits('octets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cfrFragSize.setStatus('current')
cfrFragType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 49, 1, 6, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfrFragType.setStatus('current')
cfrFragInPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 49, 1, 6, 1, 1, 3), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cfrFragInPkts.setStatus('current')
cfrFragOutPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 49, 1, 6, 1, 1, 4), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cfrFragOutPkts.setStatus('current')
cfrFragInOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 49, 1, 6, 1, 1, 5), Counter32()).setUnits('octets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cfrFragInOctets.setStatus('current')
cfrFragOutOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 49, 1, 6, 1, 1, 6), Counter32()).setUnits('octets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cfrFragOutOctets.setStatus('current')
cfrFragNotInPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 49, 1, 6, 1, 1, 7), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cfrFragNotInPkts.setStatus('current')
cfrFragNotOutPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 49, 1, 6, 1, 1, 8), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cfrFragNotOutPkts.setStatus('current')
cfrFragNotInOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 49, 1, 6, 1, 1, 9), Counter32()).setUnits('octets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cfrFragNotInOctets.setStatus('current')
cfrFragNotOutOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 49, 1, 6, 1, 1, 10), Counter32()).setUnits('octets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cfrFragNotOutOctets.setStatus('current')
cfrFragAssembledInPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 49, 1, 6, 1, 1, 11), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cfrFragAssembledInPkts.setStatus('current')
cfrFragAssembledInOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 49, 1, 6, 1, 1, 12), Counter32()).setUnits('octets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cfrFragAssembledInOctets.setStatus('current')
cfrFragPreOutPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 49, 1, 6, 1, 1, 13), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cfrFragPreOutPkts.setStatus('current')
cfrFragPreOutOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 49, 1, 6, 1, 1, 14), Counter32()).setUnits('octets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cfrFragPreOutOctets.setStatus('current')
cfrFragDroppedReAssembledInPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 49, 1, 6, 1, 1, 15), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cfrFragDroppedReAssembledInPkts.setStatus('current')
cfrFragDroppedFragmentedOutPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 49, 1, 6, 1, 1, 16), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cfrFragDroppedFragmentedOutPkts.setStatus('current')
cfrFragTimeoutsIn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 49, 1, 6, 1, 1, 17), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfrFragTimeoutsIn.setStatus('current')
cfrFragOutOfSeqFragPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 49, 1, 6, 1, 1, 18), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cfrFragOutOfSeqFragPkts.setStatus('current')
cfrFragUnexpectedBBitSetPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 49, 1, 6, 1, 1, 19), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cfrFragUnexpectedBBitSetPkts.setStatus('current')
cfrFragSeqMissedPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 49, 1, 6, 1, 1, 20), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cfrFragSeqMissedPkts.setStatus('current')
cfrFragInterleavedOutPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 49, 1, 6, 1, 1, 21), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cfrFragInterleavedOutPkts.setStatus('current')
cfrConnectionTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 49, 1, 7, 1), )
if mibBuilder.loadTexts: cfrConnectionTable.setStatus('current')
cfrConnectionEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 49, 1, 7, 1, 1), ).setIndexNames((0, "RFC1315-MIB", "frCircuitIfIndex"), (0, "RFC1315-MIB", "frCircuitDlci"))
if mibBuilder.loadTexts: cfrConnectionEntry.setStatus('current')
cfrConnName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 49, 1, 7, 1, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfrConnName.setStatus('current')
cfrConnID = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 49, 1, 7, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfrConnID.setStatus('current')
cfrConnState = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 49, 1, 7, 1, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfrConnState.setStatus('current')
cfrConnSegment1Name = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 49, 1, 7, 1, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfrConnSegment1Name.setStatus('current')
cfrConnSegment1VCGroup = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 49, 1, 7, 1, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfrConnSegment1VCGroup.setStatus('current')
cfrConnSegment1Dlci = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 49, 1, 7, 1, 1, 6), DlciNumber()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfrConnSegment1Dlci.setStatus('current')
cfrConnSegment2Name = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 49, 1, 7, 1, 1, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfrConnSegment2Name.setStatus('current')
cfrConnSegment2Vpi = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 49, 1, 7, 1, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4095))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfrConnSegment2Vpi.setStatus('current')
cfrConnSegment2Vci = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 49, 1, 7, 1, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4095))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfrConnSegment2Vci.setStatus('current')
cfrConnServiceTranslation = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 49, 1, 7, 1, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("serviceTranslationEnabled", 1), ("serviceTranslationNotEnabled", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfrConnServiceTranslation.setStatus('current')
cfrConnFrSscsDlci = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 49, 1, 7, 1, 1, 11), DlciNumber()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfrConnFrSscsDlci.setStatus('current')
cfrConnEfciBit = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 49, 1, 7, 1, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("mapFecn", 1), ("notMapFecn", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfrConnEfciBit.setStatus('current')
cfrConnDeBit = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 49, 1, 7, 1, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("noMapClp", 1), ("mapClp", 2), ("setDe0", 3), ("setDe1", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfrConnDeBit.setStatus('current')
cfrConnClpBit = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 49, 1, 7, 1, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("setClpTo0AndCopyDeToFrsscsDe", 1), ("setClpTo1AndCopyDeToFrsscsDe", 2), ("copyDeToFrsscsDeAndClp", 3), ("copyDeToClp", 4), ("setClp1", 5), ("setClp0", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfrConnClpBit.setStatus('current')
ciscoFrMIBConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 49, 3))
ciscoFrMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 49, 3, 1))
ciscoFrMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 49, 3, 2))
ciscoFrMIBCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 49, 3, 1, 1)).setObjects(("CISCO-FRAME-RELAY-MIB", "ciscoFrMIBGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoFrMIBCompliance = ciscoFrMIBCompliance.setStatus('obsolete')
ciscoFrMIBCompliancesRev1 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 49, 3, 1, 2)).setObjects(("CISCO-FRAME-RELAY-MIB", "ciscoFrMIBGroupRev1"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoFrMIBCompliancesRev1 = ciscoFrMIBCompliancesRev1.setStatus('obsolete')
ciscoFrMIBCompliancesRev2 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 49, 3, 1, 3)).setObjects(("CISCO-FRAME-RELAY-MIB", "ciscoFrLmiMIBGroup"), ("CISCO-FRAME-RELAY-MIB", "ciscoFrCircuitMIBGroup"), ("CISCO-FRAME-RELAY-MIB", "ciscoExtCircuitMIBGroup"), ("CISCO-FRAME-RELAY-MIB", "ciscoFrTsMIBGroup"), ("CISCO-FRAME-RELAY-MIB", "ciscoFrMapMIBGroup"), ("CISCO-FRAME-RELAY-MIB", "ciscoFrSvcMIBGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoFrMIBCompliancesRev2 = ciscoFrMIBCompliancesRev2.setStatus('obsolete')
ciscoFrMIBCompliancesRev3 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 49, 3, 1, 4)).setObjects(("CISCO-FRAME-RELAY-MIB", "ciscoFrLmiMIBGroup"), ("CISCO-FRAME-RELAY-MIB", "ciscoFrCircuitMIBGroup"), ("CISCO-FRAME-RELAY-MIB", "ciscoExtCircuitMIBGroup"), ("CISCO-FRAME-RELAY-MIB", "ciscoFrTsMIBGroup"), ("CISCO-FRAME-RELAY-MIB", "ciscoFrMapMIBGroup"), ("CISCO-FRAME-RELAY-MIB", "ciscoFrSvcMIBGroup"), ("CISCO-FRAME-RELAY-MIB", "ciscoFrElmiMIBGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoFrMIBCompliancesRev3 = ciscoFrMIBCompliancesRev3.setStatus('deprecated')
ciscoFrMIBCompliancesRev4 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 49, 3, 1, 5)).setObjects(("CISCO-FRAME-RELAY-MIB", "ciscoFrLmiMIBGroup"), ("CISCO-FRAME-RELAY-MIB", "ciscoFrCircuitMIBGroup"), ("CISCO-FRAME-RELAY-MIB", "ciscoExtCircuitMIBGroup1"), ("CISCO-FRAME-RELAY-MIB", "ciscoFrTsMIBGroup"), ("CISCO-FRAME-RELAY-MIB", "ciscoFrMapMIBGroup"), ("CISCO-FRAME-RELAY-MIB", "ciscoFrSvcMIBGroup"), ("CISCO-FRAME-RELAY-MIB", "ciscoFrElmiMIBGroup1"), ("CISCO-FRAME-RELAY-MIB", "ciscoFrFragMIBGroup"), ("CISCO-FRAME-RELAY-MIB", "ciscoFrConnMIBGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoFrMIBCompliancesRev4 = ciscoFrMIBCompliancesRev4.setStatus('current')
ciscoFrMIBGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 49, 3, 2, 1)).setObjects(("CISCO-FRAME-RELAY-MIB", "cfrLmiLinkstatus"), ("CISCO-FRAME-RELAY-MIB", "cfrLmiLinkType"), ("CISCO-FRAME-RELAY-MIB", "cfrLmiEnquiryIns"), ("CISCO-FRAME-RELAY-MIB", "cfrLmiEnquiryOuts"), ("CISCO-FRAME-RELAY-MIB", "cfrLmiStatusIns"), ("CISCO-FRAME-RELAY-MIB", "cfrLmiStatusOuts"), ("CISCO-FRAME-RELAY-MIB", "cfrLmiUpdateStatusIns"), ("CISCO-FRAME-RELAY-MIB", "cfrLmiUpdateStatusOuts"), ("CISCO-FRAME-RELAY-MIB", "cfrLmiStatusTimeouts"), ("CISCO-FRAME-RELAY-MIB", "cfrLmiStatusEnqTimeouts"), ("CISCO-FRAME-RELAY-MIB", "cfrLmiN392Dce"), ("CISCO-FRAME-RELAY-MIB", "cfrLmiN393Dce"), ("CISCO-FRAME-RELAY-MIB", "cfrLmiT392Dce"), ("CISCO-FRAME-RELAY-MIB", "cfrCircuitDEins"), ("CISCO-FRAME-RELAY-MIB", "cfrCircuitDEouts"), ("CISCO-FRAME-RELAY-MIB", "cfrCircuitDropPktsOuts"), ("CISCO-FRAME-RELAY-MIB", "cfrCircuitType"), ("CISCO-FRAME-RELAY-MIB", "cfrExtCircuitIfName"), ("CISCO-FRAME-RELAY-MIB", "cfrExtCircuitIfType"), ("CISCO-FRAME-RELAY-MIB", "cfrExtCircuitSubifIndex"), ("CISCO-FRAME-RELAY-MIB", "cfrExtCircuitMapStatus"), ("CISCO-FRAME-RELAY-MIB", "cfrExtCircuitCreateType"), ("CISCO-FRAME-RELAY-MIB", "cfrExtCircuitMulticast"), ("CISCO-FRAME-RELAY-MIB", "cfrExtCircuitRoutedDlci"), ("CISCO-FRAME-RELAY-MIB", "cfrExtCircuitRoutedIf"), ("CISCO-FRAME-RELAY-MIB", "cfrMapIndex"), ("CISCO-FRAME-RELAY-MIB", "cfrMapProtocol"), ("CISCO-FRAME-RELAY-MIB", "cfrMapAddress"), ("CISCO-FRAME-RELAY-MIB", "cfrMapType"), ("CISCO-FRAME-RELAY-MIB", "cfrMapEncaps"), ("CISCO-FRAME-RELAY-MIB", "cfrMapBroadcast"), ("CISCO-FRAME-RELAY-MIB", "cfrMapPayloadCompress"), ("CISCO-FRAME-RELAY-MIB", "cfrMapTcpHdrCompress"), ("CISCO-FRAME-RELAY-MIB", "cfrSvcAddrLocal"), ("CISCO-FRAME-RELAY-MIB", "cfrSvcAddrRemote"), ("CISCO-FRAME-RELAY-MIB", "cfrSvcThroughputIn"), ("CISCO-FRAME-RELAY-MIB", "cfrSvcMinThruputOut"), ("CISCO-FRAME-RELAY-MIB", "cfrSvcMinThruputIn"), ("CISCO-FRAME-RELAY-MIB", "cfrSvcCommitBurstIn"), ("CISCO-FRAME-RELAY-MIB", "cfrSvcExcessBurstIn"), ("CISCO-FRAME-RELAY-MIB", "cfrSvcIdleTime"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoFrMIBGroup = ciscoFrMIBGroup.setStatus('deprecated')
ciscoFrMIBGroupRev1 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 49, 3, 2, 2)).setObjects(("CISCO-FRAME-RELAY-MIB", "cfrLmiLinkstatus"), ("CISCO-FRAME-RELAY-MIB", "cfrLmiLinkType"), ("CISCO-FRAME-RELAY-MIB", "cfrLmiEnquiryIns"), ("CISCO-FRAME-RELAY-MIB", "cfrLmiEnquiryOuts"), ("CISCO-FRAME-RELAY-MIB", "cfrLmiStatusIns"), ("CISCO-FRAME-RELAY-MIB", "cfrLmiStatusOuts"), ("CISCO-FRAME-RELAY-MIB", "cfrLmiUpdateStatusIns"), ("CISCO-FRAME-RELAY-MIB", "cfrLmiUpdateStatusOuts"), ("CISCO-FRAME-RELAY-MIB", "cfrLmiStatusTimeouts"), ("CISCO-FRAME-RELAY-MIB", "cfrLmiStatusEnqTimeouts"), ("CISCO-FRAME-RELAY-MIB", "cfrLmiN392Dce"), ("CISCO-FRAME-RELAY-MIB", "cfrLmiN393Dce"), ("CISCO-FRAME-RELAY-MIB", "cfrLmiT392Dce"), ("CISCO-FRAME-RELAY-MIB", "cfrCircuitDEins"), ("CISCO-FRAME-RELAY-MIB", "cfrCircuitDEouts"), ("CISCO-FRAME-RELAY-MIB", "cfrCircuitDropPktsOuts"), ("CISCO-FRAME-RELAY-MIB", "cfrCircuitType"), ("CISCO-FRAME-RELAY-MIB", "cfrExtCircuitIfName"), ("CISCO-FRAME-RELAY-MIB", "cfrExtCircuitIfType"), ("CISCO-FRAME-RELAY-MIB", "cfrExtCircuitSubifIndex"), ("CISCO-FRAME-RELAY-MIB", "cfrExtCircuitMapStatus"), ("CISCO-FRAME-RELAY-MIB", "cfrExtCircuitCreateType"), ("CISCO-FRAME-RELAY-MIB", "cfrExtCircuitMulticast"), ("CISCO-FRAME-RELAY-MIB", "cfrExtCircuitRoutedDlci"), ("CISCO-FRAME-RELAY-MIB", "cfrExtCircuitRoutedIf"), ("CISCO-FRAME-RELAY-MIB", "cfrExtCircuitUncompressIns"), ("CISCO-FRAME-RELAY-MIB", "cfrExtCircuitUncompressOuts"), ("CISCO-FRAME-RELAY-MIB", "cfrMapIndex"), ("CISCO-FRAME-RELAY-MIB", "cfrMapProtocol"), ("CISCO-FRAME-RELAY-MIB", "cfrMapAddress"), ("CISCO-FRAME-RELAY-MIB", "cfrMapType"), ("CISCO-FRAME-RELAY-MIB", "cfrMapEncaps"), ("CISCO-FRAME-RELAY-MIB", "cfrMapBroadcast"), ("CISCO-FRAME-RELAY-MIB", "cfrMapTcpHdrCompress"), ("CISCO-FRAME-RELAY-MIB", "cfrMapRtpHdrCompress"), ("CISCO-FRAME-RELAY-MIB", "cfrMapPayloadCompressType"), ("CISCO-FRAME-RELAY-MIB", "cfrSvcAddrLocal"), ("CISCO-FRAME-RELAY-MIB", "cfrSvcAddrRemote"), ("CISCO-FRAME-RELAY-MIB", "cfrSvcThroughputIn"), ("CISCO-FRAME-RELAY-MIB", "cfrSvcMinThruputOut"), ("CISCO-FRAME-RELAY-MIB", "cfrSvcMinThruputIn"), ("CISCO-FRAME-RELAY-MIB", "cfrSvcCommitBurstIn"), ("CISCO-FRAME-RELAY-MIB", "cfrSvcExcessBurstIn"), ("CISCO-FRAME-RELAY-MIB", "cfrSvcIdleTime"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoFrMIBGroupRev1 = ciscoFrMIBGroupRev1.setStatus('deprecated')
ciscoFrLmiMIBGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 49, 3, 2, 3)).setObjects(("CISCO-FRAME-RELAY-MIB", "cfrLmiLinkstatus"), ("CISCO-FRAME-RELAY-MIB", "cfrLmiLinkType"), ("CISCO-FRAME-RELAY-MIB", "cfrLmiEnquiryIns"), ("CISCO-FRAME-RELAY-MIB", "cfrLmiEnquiryOuts"), ("CISCO-FRAME-RELAY-MIB", "cfrLmiStatusIns"), ("CISCO-FRAME-RELAY-MIB", "cfrLmiStatusOuts"), ("CISCO-FRAME-RELAY-MIB", "cfrLmiUpdateStatusIns"), ("CISCO-FRAME-RELAY-MIB", "cfrLmiUpdateStatusOuts"), ("CISCO-FRAME-RELAY-MIB", "cfrLmiStatusTimeouts"), ("CISCO-FRAME-RELAY-MIB", "cfrLmiStatusEnqTimeouts"), ("CISCO-FRAME-RELAY-MIB", "cfrLmiN392Dce"), ("CISCO-FRAME-RELAY-MIB", "cfrLmiN393Dce"), ("CISCO-FRAME-RELAY-MIB", "cfrLmiT392Dce"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoFrLmiMIBGroup = ciscoFrLmiMIBGroup.setStatus('current')
ciscoFrCircuitMIBGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 49, 3, 2, 4)).setObjects(("CISCO-FRAME-RELAY-MIB", "cfrCircuitDEins"), ("CISCO-FRAME-RELAY-MIB", "cfrCircuitDEouts"), ("CISCO-FRAME-RELAY-MIB", "cfrCircuitDropPktsOuts"), ("CISCO-FRAME-RELAY-MIB", "cfrCircuitType"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoFrCircuitMIBGroup = ciscoFrCircuitMIBGroup.setStatus('current')
ciscoExtCircuitMIBGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 49, 3, 2, 5)).setObjects(("CISCO-FRAME-RELAY-MIB", "cfrExtCircuitIfName"), ("CISCO-FRAME-RELAY-MIB", "cfrExtCircuitIfType"), ("CISCO-FRAME-RELAY-MIB", "cfrExtCircuitSubifIndex"), ("CISCO-FRAME-RELAY-MIB", "cfrExtCircuitMapStatus"), ("CISCO-FRAME-RELAY-MIB", "cfrExtCircuitCreateType"), ("CISCO-FRAME-RELAY-MIB", "cfrExtCircuitMulticast"), ("CISCO-FRAME-RELAY-MIB", "cfrExtCircuitRoutedDlci"), ("CISCO-FRAME-RELAY-MIB", "cfrExtCircuitRoutedIf"), ("CISCO-FRAME-RELAY-MIB", "cfrExtCircuitUncompressIns"), ("CISCO-FRAME-RELAY-MIB", "cfrExtCircuitUncompressOuts"), ("CISCO-FRAME-RELAY-MIB", "cfrExtCircuitFECNOuts"), ("CISCO-FRAME-RELAY-MIB", "cfrExtCircuitBECNOuts"), ("CISCO-FRAME-RELAY-MIB", "cfrExtCircuitMinThruputOut"), ("CISCO-FRAME-RELAY-MIB", "cfrExtCircuitMinThruputIn"), ("CISCO-FRAME-RELAY-MIB", "cfrExtCircuitBcastPktOuts"), ("CISCO-FRAME-RELAY-MIB", "cfrExtCircuitBcastByteOuts"), ("CISCO-FRAME-RELAY-MIB", "cfrExtCircuitBandwidth"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoExtCircuitMIBGroup = ciscoExtCircuitMIBGroup.setStatus('deprecated')
ciscoExtCircuitMIBGroup1 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 49, 3, 2, 13)).setObjects(("CISCO-FRAME-RELAY-MIB", "cfrExtCircuitIfName"), ("CISCO-FRAME-RELAY-MIB", "cfrExtCircuitIfType"), ("CISCO-FRAME-RELAY-MIB", "cfrExtCircuitSubifIndex"), ("CISCO-FRAME-RELAY-MIB", "cfrExtCircuitMapStatus"), ("CISCO-FRAME-RELAY-MIB", "cfrExtCircuitCreateType"), ("CISCO-FRAME-RELAY-MIB", "cfrExtCircuitMulticast"), ("CISCO-FRAME-RELAY-MIB", "cfrExtCircuitRoutedDlci"), ("CISCO-FRAME-RELAY-MIB", "cfrExtCircuitRoutedIf"), ("CISCO-FRAME-RELAY-MIB", "cfrExtCircuitUncompressIns"), ("CISCO-FRAME-RELAY-MIB", "cfrExtCircuitUncompressOuts"), ("CISCO-FRAME-RELAY-MIB", "cfrExtCircuitFECNOuts"), ("CISCO-FRAME-RELAY-MIB", "cfrExtCircuitBECNOuts"), ("CISCO-FRAME-RELAY-MIB", "cfrExtCircuitMinThruputOut"), ("CISCO-FRAME-RELAY-MIB", "cfrExtCircuitMinThruputIn"), ("CISCO-FRAME-RELAY-MIB", "cfrExtCircuitBcastPktOuts"), ("CISCO-FRAME-RELAY-MIB", "cfrExtCircuitBcastByteOuts"), ("CISCO-FRAME-RELAY-MIB", "cfrExtCircuitBandwidth"), ("CISCO-FRAME-RELAY-MIB", "cfrExtCircuitTxDataRate"), ("CISCO-FRAME-RELAY-MIB", "cfrExtCircuitTxPktRate"), ("CISCO-FRAME-RELAY-MIB", "cfrExtCircuitRcvDataRate"), ("CISCO-FRAME-RELAY-MIB", "cfrExtCircuitRcvPktRate"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoExtCircuitMIBGroup1 = ciscoExtCircuitMIBGroup1.setStatus('current')
ciscoFrTsMIBGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 49, 3, 2, 6)).setObjects(("CISCO-FRAME-RELAY-MIB", "cfrExtCircuitShapeByteLimit"), ("CISCO-FRAME-RELAY-MIB", "cfrExtCircuitShapeInterval"), ("CISCO-FRAME-RELAY-MIB", "cfrExtCircuitShapeByteIncrement"), ("CISCO-FRAME-RELAY-MIB", "cfrExtCircuitShapePkts"), ("CISCO-FRAME-RELAY-MIB", "cfrExtCircuitShapeBytes"), ("CISCO-FRAME-RELAY-MIB", "cfrExtCircuitShapePktsDelay"), ("CISCO-FRAME-RELAY-MIB", "cfrExtCircuitShapeBytesDelay"), ("CISCO-FRAME-RELAY-MIB", "cfrExtCircuitShapeActive"), ("CISCO-FRAME-RELAY-MIB", "cfrExtCircuitShapeAdapting"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoFrTsMIBGroup = ciscoFrTsMIBGroup.setStatus('current')
ciscoFrMapMIBGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 49, 3, 2, 7)).setObjects(("CISCO-FRAME-RELAY-MIB", "cfrMapIndex"), ("CISCO-FRAME-RELAY-MIB", "cfrMapProtocol"), ("CISCO-FRAME-RELAY-MIB", "cfrMapAddress"), ("CISCO-FRAME-RELAY-MIB", "cfrMapType"), ("CISCO-FRAME-RELAY-MIB", "cfrMapEncaps"), ("CISCO-FRAME-RELAY-MIB", "cfrMapBroadcast"), ("CISCO-FRAME-RELAY-MIB", "cfrMapTcpHdrCompress"), ("CISCO-FRAME-RELAY-MIB", "cfrMapRtpHdrCompress"), ("CISCO-FRAME-RELAY-MIB", "cfrMapPayloadCompressType"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoFrMapMIBGroup = ciscoFrMapMIBGroup.setStatus('current')
ciscoFrSvcMIBGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 49, 3, 2, 8)).setObjects(("CISCO-FRAME-RELAY-MIB", "cfrSvcAddrLocal"), ("CISCO-FRAME-RELAY-MIB", "cfrSvcAddrRemote"), ("CISCO-FRAME-RELAY-MIB", "cfrSvcThroughputIn"), ("CISCO-FRAME-RELAY-MIB", "cfrSvcCommitBurstIn"), ("CISCO-FRAME-RELAY-MIB", "cfrSvcExcessBurstIn"), ("CISCO-FRAME-RELAY-MIB", "cfrSvcIdleTime"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoFrSvcMIBGroup = ciscoFrSvcMIBGroup.setStatus('current')
ciscoFrElmiMIBGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 49, 3, 2, 9)).setObjects(("CISCO-FRAME-RELAY-MIB", "cfrElmiIpAddr"), ("CISCO-FRAME-RELAY-MIB", "cfrElmiArStatus"), ("CISCO-FRAME-RELAY-MIB", "cfrElmiRemoteStatus"), ("CISCO-FRAME-RELAY-MIB", "cfrElmiNeighborArStatus"), ("CISCO-FRAME-RELAY-MIB", "cfrElmiNeighborIpAddress"), ("CISCO-FRAME-RELAY-MIB", "cfrElmiNeighborIfIndex"), ("CISCO-FRAME-RELAY-MIB", "cfrElmiNeighborVendorName"), ("CISCO-FRAME-RELAY-MIB", "cfrElmiNeighborPlatformName"), ("CISCO-FRAME-RELAY-MIB", "cfrElmiNeighborDeviceName"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoFrElmiMIBGroup = ciscoFrElmiMIBGroup.setStatus('deprecated')
ciscoFrElmiMIBGroup1 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 49, 3, 2, 10)).setObjects(("CISCO-FRAME-RELAY-MIB", "cfrElmiIpAddr"), ("CISCO-FRAME-RELAY-MIB", "cfrElmiArStatus"), ("CISCO-FRAME-RELAY-MIB", "cfrElmiRemoteStatus"), ("CISCO-FRAME-RELAY-MIB", "cfrElmiNeighborArStatus"), ("CISCO-FRAME-RELAY-MIB", "cfrElmiNeighborIpAddress"), ("CISCO-FRAME-RELAY-MIB", "cfrElmiNeighborIfIndex"), ("CISCO-FRAME-RELAY-MIB", "cfrElmiNeighborVendorName"), ("CISCO-FRAME-RELAY-MIB", "cfrElmiNeighborPlatformName"), ("CISCO-FRAME-RELAY-MIB", "cfrElmiNeighborDeviceName"), ("CISCO-FRAME-RELAY-MIB", "cfrElmiLinkStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoFrElmiMIBGroup1 = ciscoFrElmiMIBGroup1.setStatus('current')
ciscoFrFragMIBGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 49, 3, 2, 11)).setObjects(("CISCO-FRAME-RELAY-MIB", "cfrFragSize"), ("CISCO-FRAME-RELAY-MIB", "cfrFragType"), ("CISCO-FRAME-RELAY-MIB", "cfrFragInPkts"), ("CISCO-FRAME-RELAY-MIB", "cfrFragOutPkts"), ("CISCO-FRAME-RELAY-MIB", "cfrFragInOctets"), ("CISCO-FRAME-RELAY-MIB", "cfrFragOutOctets"), ("CISCO-FRAME-RELAY-MIB", "cfrFragNotInPkts"), ("CISCO-FRAME-RELAY-MIB", "cfrFragNotOutPkts"), ("CISCO-FRAME-RELAY-MIB", "cfrFragNotInOctets"), ("CISCO-FRAME-RELAY-MIB", "cfrFragNotOutOctets"), ("CISCO-FRAME-RELAY-MIB", "cfrFragAssembledInPkts"), ("CISCO-FRAME-RELAY-MIB", "cfrFragAssembledInOctets"), ("CISCO-FRAME-RELAY-MIB", "cfrFragPreOutPkts"), ("CISCO-FRAME-RELAY-MIB", "cfrFragPreOutOctets"), ("CISCO-FRAME-RELAY-MIB", "cfrFragDroppedReAssembledInPkts"), ("CISCO-FRAME-RELAY-MIB", "cfrFragDroppedFragmentedOutPkts"), ("CISCO-FRAME-RELAY-MIB", "cfrFragTimeoutsIn"), ("CISCO-FRAME-RELAY-MIB", "cfrFragOutOfSeqFragPkts"), ("CISCO-FRAME-RELAY-MIB", "cfrFragUnexpectedBBitSetPkts"), ("CISCO-FRAME-RELAY-MIB", "cfrFragSeqMissedPkts"), ("CISCO-FRAME-RELAY-MIB", "cfrFragInterleavedOutPkts"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoFrFragMIBGroup = ciscoFrFragMIBGroup.setStatus('current')
ciscoFrConnMIBGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 49, 3, 2, 12)).setObjects(("CISCO-FRAME-RELAY-MIB", "cfrConnName"), ("CISCO-FRAME-RELAY-MIB", "cfrConnID"), ("CISCO-FRAME-RELAY-MIB", "cfrConnState"), ("CISCO-FRAME-RELAY-MIB", "cfrConnSegment1Name"), ("CISCO-FRAME-RELAY-MIB", "cfrConnSegment1VCGroup"), ("CISCO-FRAME-RELAY-MIB", "cfrConnSegment1Dlci"), ("CISCO-FRAME-RELAY-MIB", "cfrConnSegment2Name"), ("CISCO-FRAME-RELAY-MIB", "cfrConnSegment2Vpi"), ("CISCO-FRAME-RELAY-MIB", "cfrConnSegment2Vci"), ("CISCO-FRAME-RELAY-MIB", "cfrConnServiceTranslation"), ("CISCO-FRAME-RELAY-MIB", "cfrConnFrSscsDlci"), ("CISCO-FRAME-RELAY-MIB", "cfrConnEfciBit"), ("CISCO-FRAME-RELAY-MIB", "cfrConnDeBit"), ("CISCO-FRAME-RELAY-MIB", "cfrConnClpBit"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoFrConnMIBGroup = ciscoFrConnMIBGroup.setStatus('current')
mibBuilder.exportSymbols("CISCO-FRAME-RELAY-MIB", cfrFragObjs=cfrFragObjs, cfrElmiIpAddr=cfrElmiIpAddr, cfrMapPayloadCompressType=cfrMapPayloadCompressType, cfrElmiTable=cfrElmiTable, cfrConnDeBit=cfrConnDeBit, cfrLmiStatusEnqTimeouts=cfrLmiStatusEnqTimeouts, ciscoFrMIBCompliancesRev3=ciscoFrMIBCompliancesRev3, cfrMapIndex=cfrMapIndex, cfrLmiEntry=cfrLmiEntry, cfrLmiEnquiryIns=cfrLmiEnquiryIns, cfrLmiUpdateStatusOuts=cfrLmiUpdateStatusOuts, cfrMapEncaps=cfrMapEncaps, cfrElmiNeighborArStatus=cfrElmiNeighborArStatus, cfrSvcTable=cfrSvcTable, cfrLmiStatusTimeouts=cfrLmiStatusTimeouts, cfrSvcAddrRemote=cfrSvcAddrRemote, cfrCircuitTable=cfrCircuitTable, cfrLmiTable=cfrLmiTable, cfrFragAssembledInPkts=cfrFragAssembledInPkts, cfrConnClpBit=cfrConnClpBit, cfrExtCircuitShapeBytesDelay=cfrExtCircuitShapeBytesDelay, cfrFragPreOutPkts=cfrFragPreOutPkts, cfrLmiStatusIns=cfrLmiStatusIns, cfrMapObjs=cfrMapObjs, cfrConnState=cfrConnState, cfrFragTimeoutsIn=cfrFragTimeoutsIn, cfrCircuitType=cfrCircuitType, cfrFragInOctets=cfrFragInOctets, cfrMapTable=cfrMapTable, ciscoFrMIBGroup=ciscoFrMIBGroup, cfrConnSegment1Dlci=cfrConnSegment1Dlci, cfrSvcEntry=cfrSvcEntry, cfrFragEntry=cfrFragEntry, ciscoFrTsMIBGroup=ciscoFrTsMIBGroup, cfrCircuitDEouts=cfrCircuitDEouts, cfrFragOutPkts=cfrFragOutPkts, cfrExtCircuitTxDataRate=cfrExtCircuitTxDataRate, ciscoFrameRelayMIB=ciscoFrameRelayMIB, cfrFragOutOfSeqFragPkts=cfrFragOutOfSeqFragPkts, cfrConnSegment1VCGroup=cfrConnSegment1VCGroup, cfrExtCircuitBECNOuts=cfrExtCircuitBECNOuts, ciscoFrMIBCompliancesRev4=ciscoFrMIBCompliancesRev4, cfrExtCircuitFECNOuts=cfrExtCircuitFECNOuts, cfrExtCircuitRoutedDlci=cfrExtCircuitRoutedDlci, cfrConnSegment2Vci=cfrConnSegment2Vci, cfrElmiNeighborVendorName=cfrElmiNeighborVendorName, cfrFragTable=cfrFragTable, ciscoFrMIBCompliances=ciscoFrMIBCompliances, ciscoFrLmiMIBGroup=ciscoFrLmiMIBGroup, ciscoFrMIBConformance=ciscoFrMIBConformance, cfrExtCircuitShapeBytes=cfrExtCircuitShapeBytes, cfrConnectionEntry=cfrConnectionEntry, cfrElmiNeighborTable=cfrElmiNeighborTable, cfrMapProtocol=cfrMapProtocol, cfrConnSegment2Vpi=cfrConnSegment2Vpi, cfrConnectionObjs=cfrConnectionObjs, cfrElmiNeighborDeviceName=cfrElmiNeighborDeviceName, cfrFragNotOutPkts=cfrFragNotOutPkts, cfrConnFrSscsDlci=cfrConnFrSscsDlci, cfrMapTcpHdrCompress=cfrMapTcpHdrCompress, ciscoFrSvcMIBGroup=ciscoFrSvcMIBGroup, cfrLmiEnquiryOuts=cfrLmiEnquiryOuts, ciscoFrMIBObjects=ciscoFrMIBObjects, ciscoFrMapMIBGroup=ciscoFrMapMIBGroup, cfrElmiLinkStatus=cfrElmiLinkStatus, cfrMapAddress=cfrMapAddress, cfrExtCircuitUncompressOuts=cfrExtCircuitUncompressOuts, cfrConnName=cfrConnName, cfrExtCircuitEntry=cfrExtCircuitEntry, cfrExtCircuitCreateType=cfrExtCircuitCreateType, cfrExtCircuitIfName=cfrExtCircuitIfName, cfrLmiLinkType=cfrLmiLinkType, cfrExtCircuitShapeInterval=cfrExtCircuitShapeInterval, cfrExtCircuitShapePktsDelay=cfrExtCircuitShapePktsDelay, cfrLmiObjs=cfrLmiObjs, ciscoFrMIBCompliancesRev1=ciscoFrMIBCompliancesRev1, DlciNumber=DlciNumber, cfrExtCircuitRcvDataRate=cfrExtCircuitRcvDataRate, cfrSvcThroughputIn=cfrSvcThroughputIn, cfrFragInPkts=cfrFragInPkts, cfrExtCircuitSubifIndex=cfrExtCircuitSubifIndex, cfrSvcIdleTime=cfrSvcIdleTime, cfrConnSegment1Name=cfrConnSegment1Name, cfrFragAssembledInOctets=cfrFragAssembledInOctets, cfrConnSegment2Name=cfrConnSegment2Name, cfrExtCircuitShapeAdapting=cfrExtCircuitShapeAdapting, cfrElmiArStatus=cfrElmiArStatus, cfrExtCircuitShapeByteLimit=cfrExtCircuitShapeByteLimit, cfrMapRtpHdrCompress=cfrMapRtpHdrCompress, cfrSvcAddrLocal=cfrSvcAddrLocal, cfrExtCircuitBcastPktOuts=cfrExtCircuitBcastPktOuts, cfrExtCircuitTable=cfrExtCircuitTable, cfrExtCircuitShapeByteIncrement=cfrExtCircuitShapeByteIncrement, cfrExtCircuitShapeActive=cfrExtCircuitShapeActive, cfrFragUnexpectedBBitSetPkts=cfrFragUnexpectedBBitSetPkts, cfrMapPayloadCompress=cfrMapPayloadCompress, cfrSvcMinThruputIn=cfrSvcMinThruputIn, ciscoFrMIBGroupRev1=ciscoFrMIBGroupRev1, cfrExtCircuitRcvPktRate=cfrExtCircuitRcvPktRate, cfrExtCircuitMinThruputIn=cfrExtCircuitMinThruputIn, cfrFragDroppedReAssembledInPkts=cfrFragDroppedReAssembledInPkts, ciscoFrFragMIBGroup=ciscoFrFragMIBGroup, PYSNMP_MODULE_ID=ciscoFrameRelayMIB, ciscoExtCircuitMIBGroup=ciscoExtCircuitMIBGroup, CfrMapProtocols=CfrMapProtocols, cfrElmiNeighborIpAddress=cfrElmiNeighborIpAddress, cfrFragOutOctets=cfrFragOutOctets, cfrCircuitEntry=cfrCircuitEntry, cfrCircuitDropPktsOuts=cfrCircuitDropPktsOuts, ciscoFrConnMIBGroup=ciscoFrConnMIBGroup, cfrExtCircuitMulticast=cfrExtCircuitMulticast, cfrElmiEntry=cfrElmiEntry, cfrFragType=cfrFragType, cfrFragDroppedFragmentedOutPkts=cfrFragDroppedFragmentedOutPkts, cfrLmiLinkstatus=cfrLmiLinkstatus, cfrSvcExcessBurstIn=cfrSvcExcessBurstIn, cfrElmiNeighborIfIndex=cfrElmiNeighborIfIndex, cfrFragSeqMissedPkts=cfrFragSeqMissedPkts, cfrElmiNeighborEntry=cfrElmiNeighborEntry, ciscoFrMIBGroups=ciscoFrMIBGroups, cfrLmiN393Dce=cfrLmiN393Dce, cfrElmiObjs=cfrElmiObjs, cfrSvcObjs=cfrSvcObjs, ciscoExtCircuitMIBGroup1=ciscoExtCircuitMIBGroup1, cfrExtCircuitMapStatus=cfrExtCircuitMapStatus, cfrConnServiceTranslation=cfrConnServiceTranslation, ciscoFrMIBCompliancesRev2=ciscoFrMIBCompliancesRev2, cfrConnEfciBit=cfrConnEfciBit, cfrExtCircuitRoutedIf=cfrExtCircuitRoutedIf, cfrLmiT392Dce=cfrLmiT392Dce, cfrFragNotInPkts=cfrFragNotInPkts, cfrLmiN392Dce=cfrLmiN392Dce, cfrMapType=cfrMapType, cfrSvcCommitBurstIn=cfrSvcCommitBurstIn, cfrMapEntry=cfrMapEntry, ciscoFrCircuitMIBGroup=ciscoFrCircuitMIBGroup, cfrExtCircuitMinThruputOut=cfrExtCircuitMinThruputOut, cfrExtCircuitShapePkts=cfrExtCircuitShapePkts, cfrMapBroadcast=cfrMapBroadcast, cfrSvcMinThruputOut=cfrSvcMinThruputOut, cfrElmiRemoteStatus=cfrElmiRemoteStatus, cfrFragSize=cfrFragSize, cfrExtCircuitBandwidth=cfrExtCircuitBandwidth, cfrFragInterleavedOutPkts=cfrFragInterleavedOutPkts, cfrCircuitObjs=cfrCircuitObjs, ciscoFrElmiMIBGroup=ciscoFrElmiMIBGroup, cfrCircuitDEins=cfrCircuitDEins, ciscoFrMIBCompliance=ciscoFrMIBCompliance, cfrConnID=cfrConnID, cfrExtCircuitIfType=cfrExtCircuitIfType, cfrExtCircuitBcastByteOuts=cfrExtCircuitBcastByteOuts, cfrLmiStatusOuts=cfrLmiStatusOuts, cfrFragNotInOctets=cfrFragNotInOctets, cfrFragPreOutOctets=cfrFragPreOutOctets, cfrExtCircuitUncompressIns=cfrExtCircuitUncompressIns, ciscoFrElmiMIBGroup1=ciscoFrElmiMIBGroup1, cfrExtCircuitTxPktRate=cfrExtCircuitTxPktRate, cfrFragNotOutOctets=cfrFragNotOutOctets, cfrElmiNeighborPlatformName=cfrElmiNeighborPlatformName, cfrConnectionTable=cfrConnectionTable, cfrLmiUpdateStatusIns=cfrLmiUpdateStatusIns)
