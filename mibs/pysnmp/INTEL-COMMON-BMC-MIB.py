#
# PySNMP MIB module INTEL-COMMON-BMC-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/INTEL-COMMON-BMC-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:42:41 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ConstraintsIntersection, ValueRangeConstraint, SingleValueConstraint, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ConstraintsIntersection", "ValueRangeConstraint", "SingleValueConstraint", "ValueSizeConstraint")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
TimeTicks, Bits, MibIdentifier, Gauge32, enterprises, ObjectIdentity, Counter32, IpAddress, ModuleIdentity, Unsigned32, MibScalar, MibTable, MibTableRow, MibTableColumn, Integer32, NotificationType, Counter64, iso, NotificationType = mibBuilder.importSymbols("SNMPv2-SMI", "TimeTicks", "Bits", "MibIdentifier", "Gauge32", "enterprises", "ObjectIdentity", "Counter32", "IpAddress", "ModuleIdentity", "Unsigned32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Integer32", "NotificationType", "Counter64", "iso", "NotificationType")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
wired_for_management = MibIdentifier((1, 3, 6, 1, 4, 1, 3183)).setLabel("wired-for-management")
pet = MibIdentifier((1, 3, 6, 1, 4, 1, 3183, 1))
pet_events = MibIdentifier((1, 3, 6, 1, 4, 1, 3183, 1, 1)).setLabel("pet-events")
tempUpperNonCriticalGoingHigh = NotificationType((1, 3, 6, 1, 4, 1, 3183, 1, 1) + (0,65799))
tempUpperCriticalGoingHigh = NotificationType((1, 3, 6, 1, 4, 1, 3183, 1, 1) + (0,65801))
voltageLowerNonCriticalGoingLow = NotificationType((1, 3, 6, 1, 4, 1, 3183, 1, 1) + (0,131328))
voltageLowerCriticalGoingLow = NotificationType((1, 3, 6, 1, 4, 1, 3183, 1, 1) + (0,131330))
voltageUpperNonCriticalGoingHigh = NotificationType((1, 3, 6, 1, 4, 1, 3183, 1, 1) + (0,131335))
voltageUpperCriticalGoingHigh = NotificationType((1, 3, 6, 1, 4, 1, 3183, 1, 1) + (0,131337))
fanFailureLowerNonCriticalGoingLow = NotificationType((1, 3, 6, 1, 4, 1, 3183, 1, 1) + (0,262400))
fanFailureLowerCriticalGoingLow = NotificationType((1, 3, 6, 1, 4, 1, 3183, 1, 1) + (0,262402))
chassisIntrusionEvent = NotificationType((1, 3, 6, 1, 4, 1, 3183, 1, 1) + (0,356096))
chassisIntrusionEventLANLeashLost = NotificationType((1, 3, 6, 1, 4, 1, 3183, 1, 1) + (0,356100))
powerSupplyPresence = NotificationType((1, 3, 6, 1, 4, 1, 3183, 1, 1) + (0,552704))
powerSupplyFailure = NotificationType((1, 3, 6, 1, 4, 1, 3183, 1, 1) + (0,552705))
powerSupplyPredictiveFailure = NotificationType((1, 3, 6, 1, 4, 1, 3183, 1, 1) + (0,552706))
powerSupplyACLost = NotificationType((1, 3, 6, 1, 4, 1, 3183, 1, 1) + (0,552707))
powerSupplyConfigurationError = NotificationType((1, 3, 6, 1, 4, 1, 3183, 1, 1) + (0,552710))
uncorrectableECCError = NotificationType((1, 3, 6, 1, 4, 1, 3183, 1, 1) + (0,814849))
postError = NotificationType((1, 3, 6, 1, 4, 1, 3183, 1, 1) + (0,1011456))
thermalTripError = NotificationType((1, 3, 6, 1, 4, 1, 3183, 1, 1) + (0,487169))
cpuPresence = NotificationType((1, 3, 6, 1, 4, 1, 3183, 1, 1) + (0,487175))
procDisabledError = NotificationType((1, 3, 6, 1, 4, 1, 3183, 1, 1) + (0,459521))
fatalNMIError = NotificationType((1, 3, 6, 1, 4, 1, 3183, 1, 1) + (0,1273600))
timerExpired = NotificationType((1, 3, 6, 1, 4, 1, 3183, 1, 1) + (0,2322176))
hardReset = NotificationType((1, 3, 6, 1, 4, 1, 3183, 1, 1) + (0,2322177))
powerDown = NotificationType((1, 3, 6, 1, 4, 1, 3183, 1, 1) + (0,2322178))
powerReset = NotificationType((1, 3, 6, 1, 4, 1, 3183, 1, 1) + (0,2322179))
timerInterrupt = NotificationType((1, 3, 6, 1, 4, 1, 3183, 1, 1) + (0,2322184))
oemSystemBootEvent = NotificationType((1, 3, 6, 1, 4, 1, 3183, 1, 1) + (0,1208065))
selLogAreaReset = NotificationType((1, 3, 6, 1, 4, 1, 3183, 1, 1) + (0,1076994))
smiTimeoutError = NotificationType((1, 3, 6, 1, 4, 1, 3183, 1, 1) + (0,258817))
drivePresence = NotificationType((1, 3, 6, 1, 4, 1, 3183, 1, 1) + (0,880384))
driveFault = NotificationType((1, 3, 6, 1, 4, 1, 3183, 1, 1) + (0,880385))
drivePredictiveFailure = NotificationType((1, 3, 6, 1, 4, 1, 3183, 1, 1) + (0,880386))
driveRebuild = NotificationType((1, 3, 6, 1, 4, 1, 3183, 1, 1) + (0,880391))
powerOffPowerUnit = NotificationType((1, 3, 6, 1, 4, 1, 3183, 1, 1) + (0,618240))
acLostPowerUnit = NotificationType((1, 3, 6, 1, 4, 1, 3183, 1, 1) + (0,618244))
softPowerControlPowerUnit = NotificationType((1, 3, 6, 1, 4, 1, 3183, 1, 1) + (0,618245))
powerUnitFailure = NotificationType((1, 3, 6, 1, 4, 1, 3183, 1, 1) + (0,618246))
mibBuilder.exportSymbols("INTEL-COMMON-BMC-MIB", tempUpperCriticalGoingHigh=tempUpperCriticalGoingHigh, postError=postError, powerUnitFailure=powerUnitFailure, pet=pet, voltageLowerCriticalGoingLow=voltageLowerCriticalGoingLow, powerSupplyPredictiveFailure=powerSupplyPredictiveFailure, chassisIntrusionEvent=chassisIntrusionEvent, fanFailureLowerNonCriticalGoingLow=fanFailureLowerNonCriticalGoingLow, tempUpperNonCriticalGoingHigh=tempUpperNonCriticalGoingHigh, thermalTripError=thermalTripError, powerOffPowerUnit=powerOffPowerUnit, acLostPowerUnit=acLostPowerUnit, powerDown=powerDown, fatalNMIError=fatalNMIError, powerSupplyFailure=powerSupplyFailure, powerReset=powerReset, fanFailureLowerCriticalGoingLow=fanFailureLowerCriticalGoingLow, voltageUpperCriticalGoingHigh=voltageUpperCriticalGoingHigh, pet_events=pet_events, hardReset=hardReset, cpuPresence=cpuPresence, powerSupplyACLost=powerSupplyACLost, selLogAreaReset=selLogAreaReset, smiTimeoutError=smiTimeoutError, driveFault=driveFault, chassisIntrusionEventLANLeashLost=chassisIntrusionEventLANLeashLost, timerInterrupt=timerInterrupt, timerExpired=timerExpired, powerSupplyPresence=powerSupplyPresence, softPowerControlPowerUnit=softPowerControlPowerUnit, powerSupplyConfigurationError=powerSupplyConfigurationError, uncorrectableECCError=uncorrectableECCError, oemSystemBootEvent=oemSystemBootEvent, procDisabledError=procDisabledError, drivePredictiveFailure=drivePredictiveFailure, drivePresence=drivePresence, driveRebuild=driveRebuild, voltageLowerNonCriticalGoingLow=voltageLowerNonCriticalGoingLow, voltageUpperNonCriticalGoingHigh=voltageUpperNonCriticalGoingHigh, wired_for_management=wired_for_management)
