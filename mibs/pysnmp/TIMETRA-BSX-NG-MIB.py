#
# PySNMP MIB module TIMETRA-BSX-NG-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/TIMETRA-BSX-NG-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 21:09:43 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ConstraintsUnion, ValueSizeConstraint, SingleValueConstraint, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ConstraintsUnion", "ValueSizeConstraint", "SingleValueConstraint", "ValueRangeConstraint")
InetAddressType, InetAddress, InetAddressPrefixLength = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddressType", "InetAddress", "InetAddressPrefixLength")
SnmpAdminString, = mibBuilder.importSymbols("SNMP-FRAMEWORK-MIB", "SnmpAdminString")
ModuleCompliance, ObjectGroup, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "ObjectGroup", "NotificationGroup")
MibIdentifier, Counter32, iso, NotificationType, TimeTicks, Unsigned32, Counter64, Bits, Gauge32, ModuleIdentity, IpAddress, Integer32, MibScalar, MibTable, MibTableRow, MibTableColumn, ObjectIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "MibIdentifier", "Counter32", "iso", "NotificationType", "TimeTicks", "Unsigned32", "Counter64", "Bits", "Gauge32", "ModuleIdentity", "IpAddress", "Integer32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ObjectIdentity")
StorageType, TruthValue, TextualConvention, DisplayString, TimeStamp, RowStatus = mibBuilder.importSymbols("SNMPv2-TC", "StorageType", "TruthValue", "TextualConvention", "DisplayString", "TimeStamp", "RowStatus")
TmnxSlotNumOrZero, tmnxChassisIndex, TmnxHwIndexOrZero, tmnxMDASlotNum = mibBuilder.importSymbols("TIMETRA-CHASSIS-MIB", "TmnxSlotNumOrZero", "tmnxChassisIndex", "TmnxHwIndexOrZero", "tmnxMDASlotNum")
TEntryId, = mibBuilder.importSymbols("TIMETRA-FILTER-MIB", "TEntryId")
tmnxSRConfs, timetraSRMIBModules, tmnxSRNotifyPrefix, tmnxSRObjs = mibBuilder.importSymbols("TIMETRA-GLOBAL-MIB", "tmnxSRConfs", "timetraSRMIBModules", "tmnxSRNotifyPrefix", "tmnxSRObjs")
tmnxLogFileIdLogId, tmnxLogNotifyApInterval = mibBuilder.importSymbols("TIMETRA-LOG-MIB", "tmnxLogFileIdLogId", "tmnxLogNotifyApInterval")
TmnxPortEncapType, = mibBuilder.importSymbols("TIMETRA-PORT-MIB", "TmnxPortEncapType")
tFCName, = mibBuilder.importSymbols("TIMETRA-QOS-MIB", "tFCName")
TTcpUdpPort, TmnxSubRadServAlgorithm, TmnxOperState, TNamedItem, TmnxBsxTransitIpPolicyId, TmnxEncapVal, TmnxEnabledDisabled, SdpBindId, TAdaptationRule, TmnxAdminState, TNamedItemOrEmpty, TFCNameOrEmpty, TCIRRate, TQueueId, TmnxBsxAarpId, TPIRRate, TmnxBsxTransPrefPolicyIdOrZero, TmnxVRtrIDOrZero, TmnxServId, TmnxPortID, TItemDescription, TmnxBsxTransPrefPolicyId, TDSCPNameOrEmpty, TmnxActionType, TIpProtocol, TmnxBsxTransitIpPolicyIdOrZero, TPriorityOrDefault = mibBuilder.importSymbols("TIMETRA-TC-MIB", "TTcpUdpPort", "TmnxSubRadServAlgorithm", "TmnxOperState", "TNamedItem", "TmnxBsxTransitIpPolicyId", "TmnxEncapVal", "TmnxEnabledDisabled", "SdpBindId", "TAdaptationRule", "TmnxAdminState", "TNamedItemOrEmpty", "TFCNameOrEmpty", "TCIRRate", "TQueueId", "TmnxBsxAarpId", "TPIRRate", "TmnxBsxTransPrefPolicyIdOrZero", "TmnxVRtrIDOrZero", "TmnxServId", "TmnxPortID", "TItemDescription", "TmnxBsxTransPrefPolicyId", "TDSCPNameOrEmpty", "TmnxActionType", "TIpProtocol", "TmnxBsxTransitIpPolicyIdOrZero", "TPriorityOrDefault")
tmnxBsxNgMIBModule = ModuleIdentity((1, 3, 6, 1, 4, 1, 6527, 1, 1, 3, 63))
tmnxBsxNgMIBModule.setRevisions(('1911-02-01 00:00', '1908-12-03 00:00',))
if mibBuilder.loadTexts: tmnxBsxNgMIBModule.setLastUpdated('201102010000Z')
if mibBuilder.loadTexts: tmnxBsxNgMIBModule.setOrganization('Alcatel-Lucent')
tmnxBsxObjs = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63))
tmnxBsxMdaObjs = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1))
tmnxBsxPolicyObjs = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2))
tmnxBsxStatsObjs = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3))
tmnxBsxNotifObjs = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 4))
tmnxBsxCflowdObjs = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 5))
tmnxBsxOvrdObjs = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 6))
tmnxBsxTransitObjs = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 7))
tmnxBsxHttpRedirObjs = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 8))
tmnxBsxStaticDataObjs = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 9))
tmnxBsxRedundancyObjs = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 10))
tmnxBsxHttpEnrichObjs = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 11))
tmnxBsxRadApObjs = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 12))
tmnxBsxNotifyPrefix = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 63))
tmnxBsxNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 63, 0))
tmnxBsxConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 63))
tmnxBsxCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 63, 1))
tmnxBsxGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 63, 2))
class TmnxBsxIsaAaGroupIndex(TextualConvention, Unsigned32):
    status = 'current'
    subtypeSpec = Unsigned32.subtypeSpec + ValueRangeConstraint(1, 255)

class TmnxBsxIsaAaGroupIndexOrZero(TextualConvention, Unsigned32):
    status = 'current'
    subtypeSpec = Unsigned32.subtypeSpec + ValueRangeConstraint(0, 255)

class TmnxBsxAaGrpPartIndex(TextualConvention, Unsigned32):
    status = 'current'

class TmnxBsxFailToMode(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1))
    namedValues = NamedValues(("failToWire", 0), ("failToOpen", 1))

class TmnxBsxPolicyVersion(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1))
    namedValues = NamedValues(("admin", 0), ("oper", 1))

class TmnxBsxDirection(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2))
    namedValues = NamedValues(("sub2net", 0), ("net2sub", 1), ("both", 2))

class TmnxBsxPolicerType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))
    namedValues = NamedValues(("none", 0), ("singleBucketBandwidth", 1), ("dualBucketBandwidth", 2), ("flowRateLimit", 3), ("flowCountLimit", 4))

class TmnxBsxGranularity(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2))
    namedValues = NamedValues(("none", 0), ("system", 1), ("subscriber", 2))

class TmnxBsxPolicerAction(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1))
    namedValues = NamedValues(("permitDeny", 0), ("priorityMark", 1))

class TmnxBsxBurstSize(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ValueRangeConstraint(0, 131071)

class TmnxBsxOperator(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5))
    namedValues = NamedValues(("none", 0), ("eq", 1), ("neq", 2), ("lt", 3), ("gt", 4), ("range", 5))

class TmnxBsxMdaRole(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1))
    namedValues = NamedValues(("primary", 0), ("backup", 1))

class TmnxBsxMdaActivityState(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2))
    namedValues = NamedValues(("unavailable", 0), ("active", 1), ("standby", 2))

class TmnxBsxAaSubscriberType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5))
    namedValues = NamedValues(("unknown", 0), ("esm", 1), ("sap", 2), ("spokeSdp", 3), ("transit", 4), ("mobile", 5))

class TmnxBsxAaSubscriber(TextualConvention, OctetString):
    status = 'current'
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(0, 32)

class TmnxBsxStatAaAcctCfgType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6))
    namedValues = NamedValues(("unknown", 0), ("protocol", 1), ("application", 2), ("app-group", 3), ("aa-sub", 4), ("aa-sub-study-protocol", 5), ("aa-sub-study-application", 6))

class TmnxBsxAaStatType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))
    namedValues = NamedValues(("unknown", 0), ("protocol", 1), ("application", 2), ("app-group", 3), ("chargingGroup", 4))

class TmnxBsxAaStatExportMethod(TextualConvention, Bits):
    status = 'current'
    namedValues = NamedValues(("accountingPolicy", 0), ("radiusAccountingPolicy", 1))

class TmnxBsxExprSubStringIndex(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ValueRangeConstraint(1, 255)

class TmnxBsxExprSubStringType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11))
    namedValues = NamedValues(("none", 0), ("httpHost", 1), ("httpUri", 2), ("httpReferrer", 3), ("sipUa", 4), ("sipUri", 5), ("sipMt", 6), ("citrixApp", 7), ("httpUserAgent", 8), ("h323ProductId", 9), ("tlsCsOrgName", 10), ("tlsCsCommonName", 11))

class TmnxBsxExprSubString(DisplayString):
    status = 'current'
    subtypeSpec = DisplayString.subtypeSpec + ValueSizeConstraint(0, 255)

class TmnxBsxFirstPacketPolicy(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2))
    namedValues = NamedValues(("none", 0), ("first-packet-trusted", 1), ("first-packet-validate", 2))

class TmnxBsxActionStatus(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2))
    namedValues = NamedValues(("none", 0), ("start", 1), ("stop", 2))

class TmnxBsxAdminCtrl(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3))
    namedValues = NamedValues(("none", 1), ("initialize", 2), ("commit", 3))

class TmnxBsxCustProtExprSubString(DisplayString):
    status = 'current'
    subtypeSpec = DisplayString.subtypeSpec + ValueSizeConstraint(0, 255)

class TmnxBsxProtocolDirection(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))
    namedValues = NamedValues(("none", 0), ("client2server", 1), ("server2client", 2), ("any", 3))

class TmnxBsxLoadBalanceStatus(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1))
    namedValues = NamedValues(("balancing", 0), ("complete", 1))

class TmnxBsxCflowdExpType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))
    namedValues = NamedValues(("none", 0), ("volume", 1), ("tcpPerformance", 2), ("rtpPerformance", 3))

class TmnxBsxCflowdPerfMeasType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2))
    namedValues = NamedValues(("none", 0), ("tcp", 1), ("rtp", 2))

class TmnxBsxAaSubStatsInterval(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2))
    namedValues = NamedValues(("unknown", 0), ("realtime", 1), ("snapshot", 2))

class TmnxBsxAaSubAcctLossReason(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1))
    namedValues = NamedValues(("noLoss", 0), ("acctInvlExpiry", 1))

class TmnxBsxAaSubAsoValDerivedFrom(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))
    namedValues = NamedValues(("none", 0), ("asoDefault", 1), ("appProfile", 2), ("override", 3))

class TmnxBsxAaSubPolicerResStatus(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))
    namedValues = NamedValues(("none", 0), ("okay", 1), ("unknown", 2), ("exceeded", 3))

class TmnxBsxStatIsaAaCfgType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1))
    namedValues = NamedValues(("unknown", 0), ("aaPerformance", 1))

class TmnxBsxTransitSubOrigin(TextualConvention, Bits):
    status = 'current'
    namedValues = NamedValues(("static", 0), ("dhcp", 1), ("radius", 2), ("autoSeenIp", 3))

class TmnxBsxTListAttribType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2))
    namedValues = NamedValues(("none", 0), ("uint", 1), ("string", 2))

class TmnxBsxTListAttribValue(TextualConvention, OctetString):
    status = 'current'
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(0, 80)

class TmnxBsxAqpHttpRedirFlowType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1))
    namedValues = NamedValues(("none", 0), ("droppedFlows", 1))

class TmnxBsxAarpInstState(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))
    namedValues = NamedValues(("standAlone", 0), ("remote", 1), ("master", 2), ("backup", 3))

class TmnxBsxAarpInstOperFlags(TextualConvention, Bits):
    status = 'current'
    namedValues = NamedValues(("adminDown", 0), ("noSubConfigd", 1), ("peerDown", 2), ("peerAarpDown", 3), ("subTypeMismatch", 4), ("subDown", 5), ("shuntsDown", 6), ("divertCapDown", 7), ("appProfNoDivert", 8), ("subSidePipeMismatch", 9), ("subSideIfMismatch", 10), ("netSidePipeMismatch", 11), ("netSideIfMismatch", 12), ("unsupportedIoms", 13))

class TmnxBsxAarpCommand(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1))
    namedValues = NamedValues(("noCmd", 0), ("forceEvaluate", 1))

class TmnxBsxAarpServPointRole(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5))
    namedValues = NamedValues(("none", 0), ("dualHomed", 1), ("pipeShuntSub", 2), ("pipeShuntNet", 3), ("interfaceShuntSub", 4), ("interfaceShuntNet", 5))

class TmnxBsxAarpServPointType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2))
    namedValues = NamedValues(("unknown", 0), ("sap", 1), ("spokeSdp", 2))

class TmnxBsxAarpServPoint(TextualConvention, OctetString):
    status = 'current'
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(0, 32)

tmnxBsxMdaScalars = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 1))
tmnxBsxIsaAaGrpLastChangeTime = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 1, 1), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxIsaAaGrpLastChangeTime.setStatus('current')
tmnxBsxIsaAaGrpFcLastChangeTime = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 1, 2), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxIsaAaGrpFcLastChangeTime.setStatus('current')
tmnxBsxIsaAaGrpMdaLastChangeTime = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 1, 3), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxIsaAaGrpMdaLastChangeTime.setStatus('current')
tmnxBsxAaGrpPartLastChangeTime = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 1, 4), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxAaGrpPartLastChangeTime.setStatus('current')
tmnxBsxAaWap1xLastChangeTime = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 1, 5), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxAaWap1xLastChangeTime.setStatus('current')
tmnxBsxIsaAaGrpTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 2), )
if mibBuilder.loadTexts: tmnxBsxIsaAaGrpTable.setStatus('current')
tmnxBsxIsaAaGrpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 2, 1), ).setIndexNames((0, "TIMETRA-BSX-NG-MIB", "tmnxBsxIsaAaGroupIndex"))
if mibBuilder.loadTexts: tmnxBsxIsaAaGrpEntry.setStatus('current')
tmnxBsxIsaAaGroupIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 2, 1, 1), TmnxBsxIsaAaGroupIndex())
if mibBuilder.loadTexts: tmnxBsxIsaAaGroupIndex.setStatus('current')
tmnxBsxIsaAaGrpRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 2, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxIsaAaGrpRowStatus.setStatus('current')
tmnxBsxIsaAaGrpRowLastChange = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 2, 1, 3), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxIsaAaGrpRowLastChange.setStatus('current')
tmnxBsxIsaAaGrpDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 2, 1, 4), TItemDescription()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxIsaAaGrpDescription.setStatus('current')
tmnxBsxIsaAaGrpAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 2, 1, 5), TmnxAdminState().clone('outOfService')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxIsaAaGrpAdminState.setStatus('current')
tmnxBsxIsaAaGrpOperState = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 2, 1, 6), TmnxOperState().clone('outOfService')).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxIsaAaGrpOperState.setStatus('current')
tmnxBsxIsaAaGrpFailToMode = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 2, 1, 7), TmnxBsxFailToMode().clone('failToWire')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxIsaAaGrpFailToMode.setStatus('current')
tmnxBsxIsaAaGrpFromSubPool = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 2, 1, 8), TNamedItem().clone('default')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxIsaAaGrpFromSubPool.setStatus('current')
tmnxBsxIsaAaGrpFromSubResvCbs = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 2, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(-1, -1), ValueRangeConstraint(0, 100), )).clone(-1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxIsaAaGrpFromSubResvCbs.setStatus('current')
tmnxBsxIsaAaGrpFromSubSlpPolicy = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 2, 1, 10), TNamedItem().clone('default')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxIsaAaGrpFromSubSlpPolicy.setStatus('current')
tmnxBsxIsaAaGrpFromSubQuePolicy = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 2, 1, 11), TNamedItem().clone('default')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxIsaAaGrpFromSubQuePolicy.setStatus('current')
tmnxBsxIsaAaGrpFromSubSchPolicy = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 2, 1, 12), TNamedItemOrEmpty()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxIsaAaGrpFromSubSchPolicy.setStatus('current')
tmnxBsxIsaAaGrpToSubPool = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 2, 1, 13), TNamedItem().clone('default')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxIsaAaGrpToSubPool.setStatus('current')
tmnxBsxIsaAaGrpToSubResvCbs = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 2, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(-1, -1), ValueRangeConstraint(0, 100), )).clone(-1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxIsaAaGrpToSubResvCbs.setStatus('current')
tmnxBsxIsaAaGrpToSubSlpPolicy = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 2, 1, 15), TNamedItem().clone('default')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxIsaAaGrpToSubSlpPolicy.setStatus('current')
tmnxBsxIsaAaGrpToSubQuePolicy = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 2, 1, 16), TNamedItem().clone('default')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxIsaAaGrpToSubQuePolicy.setStatus('current')
tmnxBsxIsaAaGrpToSubSchPolicy = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 2, 1, 17), TNamedItemOrEmpty()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxIsaAaGrpToSubSchPolicy.setStatus('current')
tmnxBsxIsaAaGrpIngressPool = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 2, 1, 18), TNamedItem().clone('default')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxIsaAaGrpIngressPool.setStatus('obsolete')
tmnxBsxIsaAaGrpIngressResvCbs = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 2, 1, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(-1, -1), ValueRangeConstraint(0, 100), )).clone(-1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxIsaAaGrpIngressResvCbs.setStatus('obsolete')
tmnxBsxIsaAaGrpIngressSlpPolicy = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 2, 1, 20), TNamedItem().clone('default')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxIsaAaGrpIngressSlpPolicy.setStatus('obsolete')
tmnxBsxIsaAaGrpIngressQuePolicy = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 2, 1, 21), TNamedItem().clone('default')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxIsaAaGrpIngressQuePolicy.setStatus('obsolete')
tmnxBsxIsaAaGrpActivityChange = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 2, 1, 22), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxIsaAaGrpActivityChange.setStatus('current')
tmnxBsxIsaAaGrpPartitions = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 2, 1, 23), TmnxEnabledDisabled().clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxIsaAaGrpPartitions.setStatus('current')
tmnxBsxIsaAaGrpCapCostLowThres = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 2, 1, 24), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxIsaAaGrpCapCostLowThres.setStatus('current')
tmnxBsxIsaAaGrpCapCostHighThres = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 2, 1, 25), Unsigned32().clone(4294967295)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxIsaAaGrpCapCostHighThres.setStatus('current')
tmnxBsxIsaAaGrpLoadBalanceStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 2, 1, 26), TmnxBsxLoadBalanceStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxIsaAaGrpLoadBalanceStatus.setStatus('current')
tmnxBsxIsaAaGrpUnassignedEsmSubs = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 2, 1, 27), Gauge32()).setUnits('subscribers').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxIsaAaGrpUnassignedEsmSubs.setStatus('current')
tmnxBsxIsaAaGrpUnassignedSapSubs = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 2, 1, 28), Gauge32()).setUnits('subscribers').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxIsaAaGrpUnassignedSapSubs.setStatus('current')
tmnxBsxIsaAaGrpUnassignedSpkSubs = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 2, 1, 29), Gauge32()).setUnits('subscribers').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxIsaAaGrpUnassignedSpkSubs.setStatus('current')
tmnxBsxIsaAaGrpUnassignedTIpSubs = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 2, 1, 30), Gauge32()).setUnits('subscribers').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxIsaAaGrpUnassignedTIpSubs.setStatus('obsolete')
tmnxBsxIsaAaGrpAaSubScale = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 2, 1, 31), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("residential", 0), ("vpn", 1), ("mobileGateway", 2))).clone('residential')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxIsaAaGrpAaSubScale.setStatus('current')
tmnxBsxIsaAaGrpOverloadCutThru = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 2, 1, 32), TmnxEnabledDisabled().clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxIsaAaGrpOverloadCutThru.setStatus('current')
tmnxBsxIsaAaGrpFromSubWaSBfHiWmk = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 2, 1, 33), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(-1, -1), ValueRangeConstraint(1, 100), )).clone(-1)).setUnits('percent').setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxIsaAaGrpFromSubWaSBfHiWmk.setStatus('current')
tmnxBsxIsaAaGrpFromSubWaSBfLoWmk = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 2, 1, 34), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 99))).setUnits('percent').setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxIsaAaGrpFromSubWaSBfLoWmk.setStatus('current')
tmnxBsxIsaAaGrpToSubWaSBfHiWmk = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 2, 1, 35), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(-1, -1), ValueRangeConstraint(1, 100), )).clone(-1)).setUnits('percent').setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxIsaAaGrpToSubWaSBfHiWmk.setStatus('current')
tmnxBsxIsaAaGrpToSubWaSBfLoWmk = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 2, 1, 36), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 99))).setUnits('percent').setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxIsaAaGrpToSubWaSBfLoWmk.setStatus('current')
tmnxBsxIsaAaGrpTransPrefV4NmEntr = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 2, 1, 37), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxIsaAaGrpTransPrefV4NmEntr.setStatus('current')
tmnxBsxIsaAaGrpTransPrefV6NmEntr = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 2, 1, 38), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxIsaAaGrpTransPrefV6NmEntr.setStatus('current')
tmnxBsxIsaAaGrpTransPrefV6RmEntr = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 2, 1, 39), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxIsaAaGrpTransPrefV6RmEntr.setStatus('current')
tmnxBsxIsaAaGrpFcTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 3), )
if mibBuilder.loadTexts: tmnxBsxIsaAaGrpFcTable.setStatus('current')
tmnxBsxIsaAaGrpFcEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 3, 1), ).setIndexNames((0, "TIMETRA-BSX-NG-MIB", "tmnxBsxIsaAaGroupIndex"), (0, "TIMETRA-QOS-MIB", "tFCName"))
if mibBuilder.loadTexts: tmnxBsxIsaAaGrpFcEntry.setStatus('current')
tmnxBsxIsaAaGrpFcRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 3, 1, 1), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxIsaAaGrpFcRowStatus.setStatus('current')
tmnxBsxIsaAaGrpFcRowLastChange = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 3, 1, 2), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxIsaAaGrpFcRowLastChange.setStatus('current')
tmnxBsxGrpMdaTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 4), )
if mibBuilder.loadTexts: tmnxBsxGrpMdaTable.setStatus('current')
tmnxBsxGrpMdaEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 4, 1), ).setIndexNames((0, "TIMETRA-BSX-NG-MIB", "tmnxBsxIsaAaGroupIndex"), (0, "TIMETRA-CHASSIS-MIB", "tmnxChassisIndex"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxCardSlotNum"), (0, "TIMETRA-CHASSIS-MIB", "tmnxMDASlotNum"))
if mibBuilder.loadTexts: tmnxBsxGrpMdaEntry.setStatus('current')
tmnxBsxCardSlotNum = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 4, 1, 1), TmnxSlotNumOrZero())
if mibBuilder.loadTexts: tmnxBsxCardSlotNum.setStatus('current')
tmnxBsxGrpMdaRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 4, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxGrpMdaRowStatus.setStatus('current')
tmnxBsxGrpMdaRowLastChange = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 4, 1, 3), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpMdaRowLastChange.setStatus('current')
tmnxBsxGrpMdaRole = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 4, 1, 4), TmnxBsxMdaRole().clone('primary')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxGrpMdaRole.setStatus('current')
tmnxBsxGrpMdaActivityState = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 4, 1, 5), TmnxBsxMdaActivityState().clone('unavailable')).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpMdaActivityState.setStatus('current')
tmnxBsxGrpMdaActivityChange = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 4, 1, 6), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpMdaActivityChange.setStatus('current')
tmnxBsxGrpMdaEsmSubscribers = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 4, 1, 7), Gauge32()).setUnits('subscribers').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpMdaEsmSubscribers.setStatus('current')
tmnxBsxGrpMdaSapSubscribers = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 4, 1, 8), Gauge32()).setUnits('subscribers').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpMdaSapSubscribers.setStatus('current')
tmnxBsxGrpMdaSpokeSdpSubscribers = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 4, 1, 9), Gauge32()).setUnits('subscribers').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpMdaSpokeSdpSubscribers.setStatus('current')
tmnxBsxGrpMdaCapacityCost = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 4, 1, 10), Gauge32()).setUnits('cost').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpMdaCapacityCost.setStatus('current')
tmnxBsxGrpMdaStatsResourceCount = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 4, 1, 11), Gauge32()).setUnits('resources').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpMdaStatsResourceCount.setStatus('current')
tmnxBsxGrpMdaTransitIpSubs = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 4, 1, 12), Gauge32()).setUnits('subscribers').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpMdaTransitIpSubs.setStatus('current')
tmnxBsxGrpMdaTransitIpAddrs = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 4, 1, 13), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpMdaTransitIpAddrs.setStatus('current')
tmnxBsxGrpMdaTransitSubs = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 4, 1, 14), Gauge32()).setUnits('subscribers').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpMdaTransitSubs.setStatus('current')
tmnxBsxGrpMdaTransPrefEntries = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 4, 1, 15), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpMdaTransPrefEntries.setStatus('obsolete')
tmnxBsxGrpMdaTransPrefV4Entr = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 4, 1, 16), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpMdaTransPrefV4Entr.setStatus('current')
tmnxBsxGrpMdaTransPrefV6Entr = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 4, 1, 17), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpMdaTransPrefV6Entr.setStatus('current')
tmnxBsxGrpMdaTransPrefV6RemEntr = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 4, 1, 18), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpMdaTransPrefV6RemEntr.setStatus('current')
tmnxBsxGrpStatusTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 5), )
if mibBuilder.loadTexts: tmnxBsxGrpStatusTable.setStatus('current')
tmnxBsxGrpStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 5, 1), ).setIndexNames((0, "TIMETRA-BSX-NG-MIB", "tmnxBsxIsaAaGroupIndex"), (0, "TIMETRA-CHASSIS-MIB", "tmnxChassisIndex"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxCardSlotNum"), (0, "TIMETRA-CHASSIS-MIB", "tmnxMDASlotNum"))
if mibBuilder.loadTexts: tmnxBsxGrpStatusEntry.setStatus('current')
tmnxBsxGrpStatusDiscontTime = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 5, 1, 1), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusDiscontTime.setStatus('current')
tmnxBsxGrpStatusOctsIn = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 5, 1, 2), Counter32()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusOctsIn.setStatus('current')
tmnxBsxGrpStatusPktsIn = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 5, 1, 3), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusPktsIn.setStatus('current')
tmnxBsxGrpStatusPktsInPChipErs = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 5, 1, 4), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusPktsInPChipErs.setStatus('current')
tmnxBsxGrpStatusOctsDiscCongIn = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 5, 1, 5), Counter32()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusOctsDiscCongIn.setStatus('current')
tmnxBsxGrpStatusPktsDiscCongIn = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 5, 1, 6), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusPktsDiscCongIn.setStatus('current')
tmnxBsxGrpStatusOctsToMda = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 5, 1, 7), Counter32()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusOctsToMda.setStatus('current')
tmnxBsxGrpStatusPktsToMda = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 5, 1, 8), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusPktsToMda.setStatus('current')
tmnxBsxGrpStatusOctsDisCongMda = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 5, 1, 9), Counter32()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusOctsDisCongMda.setStatus('current')
tmnxBsxGrpStatusPktsDisCongMda = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 5, 1, 10), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusPktsDisCongMda.setStatus('current')
tmnxBsxGrpStatusOctsDiscErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 5, 1, 11), Counter32()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusOctsDiscErrors.setStatus('current')
tmnxBsxGrpStatusPktsDiscErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 5, 1, 12), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusPktsDiscErrors.setStatus('current')
tmnxBsxGrpStatusOctsPolicyByps = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 5, 1, 13), Counter32()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusOctsPolicyByps.setStatus('current')
tmnxBsxGrpStatusPktsPolicyByps = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 5, 1, 14), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusPktsPolicyByps.setStatus('current')
tmnxBsxGrpStatusOctsInspected = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 5, 1, 15), Counter32()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusOctsInspected.setStatus('current')
tmnxBsxGrpStatusPktsInspected = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 5, 1, 16), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusPktsInspected.setStatus('current')
tmnxBsxGrpStatusOctsDiscPolicy = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 5, 1, 17), Counter32()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusOctsDiscPolicy.setStatus('current')
tmnxBsxGrpStatusPktsDiscPolicy = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 5, 1, 18), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusPktsDiscPolicy.setStatus('current')
tmnxBsxGrpStatusOctsInMda = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 5, 1, 19), Counter32()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusOctsInMda.setStatus('current')
tmnxBsxGrpStatusPktsInMda = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 5, 1, 20), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusPktsInMda.setStatus('current')
tmnxBsxGrpStatusOctsFromMda = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 5, 1, 21), Counter32()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusOctsFromMda.setStatus('current')
tmnxBsxGrpStatusPktsFromMda = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 5, 1, 22), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusPktsFromMda.setStatus('current')
tmnxBsxGrpStatusPktsOutPChipEr = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 5, 1, 23), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusPktsOutPChipEr.setStatus('current')
tmnxBsxGrpStatusOctsDisCongOut = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 5, 1, 24), Counter32()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusOctsDisCongOut.setStatus('current')
tmnxBsxGrpStatusPktsDisCongOut = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 5, 1, 25), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusPktsDisCongOut.setStatus('current')
tmnxBsxGrpStatusOctsOut = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 5, 1, 26), Counter32()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusOctsOut.setStatus('current')
tmnxBsxGrpStatusPktsOut = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 5, 1, 27), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusPktsOut.setStatus('current')
tmnxBsxGrpStatusFlows = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 5, 1, 28), Counter32()).setUnits('flows').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusFlows.setStatus('current')
tmnxBsxGrpStatusFlowsCurrent = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 5, 1, 29), Gauge32()).setUnits('flows').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusFlowsCurrent.setStatus('current')
tmnxBsxGrpStatusFlowSetupRate = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 5, 1, 30), Gauge32()).setUnits('flows per second').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusFlowSetupRate.setStatus('current')
tmnxBsxGrpStatusSubsDiverted = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 5, 1, 31), Gauge32()).setUnits('subscribers').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusSubsDiverted.setStatus('current')
tmnxBsxGrpStatusSubsCurrent = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 5, 1, 32), Gauge32()).setUnits('subscribers').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusSubsCurrent.setStatus('current')
tmnxBsxGrpStatusTrafficRate = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 5, 1, 33), Gauge32()).setUnits('kbps').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusTrafficRate.setStatus('current')
tmnxBsxGrpStatusHCOctsIn = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 5, 1, 34), Counter64()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusHCOctsIn.setStatus('current')
tmnxBsxGrpStatusHCPktsIn = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 5, 1, 35), Counter64()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusHCPktsIn.setStatus('current')
tmnxBsxGrpStatusHCPktsInPChipErs = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 5, 1, 36), Counter64()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusHCPktsInPChipErs.setStatus('current')
tmnxBsxGrpStatusHCOctsDiscCongIn = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 5, 1, 37), Counter64()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusHCOctsDiscCongIn.setStatus('current')
tmnxBsxGrpStatusHCPktsDiscCongIn = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 5, 1, 38), Counter64()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusHCPktsDiscCongIn.setStatus('current')
tmnxBsxGrpStatusHCOctsToMda = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 5, 1, 39), Counter64()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusHCOctsToMda.setStatus('current')
tmnxBsxGrpStatusHCPktsToMda = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 5, 1, 40), Counter64()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusHCPktsToMda.setStatus('current')
tmnxBsxGrpStatusHCOctsDisCongMda = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 5, 1, 41), Counter64()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusHCOctsDisCongMda.setStatus('current')
tmnxBsxGrpStatusHCPktsDisCongMda = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 5, 1, 42), Counter64()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusHCPktsDisCongMda.setStatus('current')
tmnxBsxGrpStatusHCOctsDiscErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 5, 1, 43), Counter64()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusHCOctsDiscErrors.setStatus('current')
tmnxBsxGrpStatusHCPktsDiscErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 5, 1, 44), Counter64()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusHCPktsDiscErrors.setStatus('current')
tmnxBsxGrpStatusHCOctsPolicyByps = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 5, 1, 45), Counter64()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusHCOctsPolicyByps.setStatus('current')
tmnxBsxGrpStatusHCPktsPolicyByps = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 5, 1, 46), Counter64()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusHCPktsPolicyByps.setStatus('current')
tmnxBsxGrpStatusHCOctsInspected = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 5, 1, 47), Counter64()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusHCOctsInspected.setStatus('current')
tmnxBsxGrpStatusHCPktsInspected = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 5, 1, 48), Counter64()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusHCPktsInspected.setStatus('current')
tmnxBsxGrpStatusHCOctsDiscPolicy = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 5, 1, 49), Counter64()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusHCOctsDiscPolicy.setStatus('current')
tmnxBsxGrpStatusHCPktsDiscPolicy = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 5, 1, 50), Counter64()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusHCPktsDiscPolicy.setStatus('current')
tmnxBsxGrpStatusHCOctsInMda = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 5, 1, 51), Counter64()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusHCOctsInMda.setStatus('current')
tmnxBsxGrpStatusHCPktsInMda = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 5, 1, 52), Counter64()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusHCPktsInMda.setStatus('current')
tmnxBsxGrpStatusHCOctsFromMda = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 5, 1, 53), Counter64()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusHCOctsFromMda.setStatus('current')
tmnxBsxGrpStatusHCPktsFromMda = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 5, 1, 54), Counter64()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusHCPktsFromMda.setStatus('current')
tmnxBsxGrpStatusHCPktsOutPChipEr = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 5, 1, 55), Counter64()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusHCPktsOutPChipEr.setStatus('current')
tmnxBsxGrpStatusHCOctsDisCongOut = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 5, 1, 56), Counter64()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusHCOctsDisCongOut.setStatus('current')
tmnxBsxGrpStatusHCPktsDisCongOut = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 5, 1, 57), Counter64()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusHCPktsDisCongOut.setStatus('current')
tmnxBsxGrpStatusHCOctsOut = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 5, 1, 58), Counter64()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusHCOctsOut.setStatus('current')
tmnxBsxGrpStatusHCPktsOut = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 5, 1, 59), Counter64()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusHCPktsOut.setStatus('current')
tmnxBsxGrpStatusHCFlows = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 5, 1, 60), Counter64()).setUnits('flows').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusHCFlows.setStatus('current')
tmnxBsxGrpStatusFlowsAverage = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 5, 1, 61), Gauge32()).setUnits('flows').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusFlowsAverage.setStatus('current')
tmnxBsxGrpStatusFlowsPeak = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 5, 1, 62), Gauge32()).setUnits('flows').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusFlowsPeak.setStatus('current')
tmnxBsxGrpStatusFlowSetupRateAvg = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 5, 1, 63), Gauge32()).setUnits('flows per second').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusFlowSetupRateAvg.setStatus('current')
tmnxBsxGrpStatusFlowSetupRatePk = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 5, 1, 64), Gauge32()).setUnits('flows per second').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusFlowSetupRatePk.setStatus('current')
tmnxBsxGrpStatusSubsDivertedAvg = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 5, 1, 65), Gauge32()).setUnits('subscribers').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusSubsDivertedAvg.setStatus('current')
tmnxBsxGrpStatusSubsDivertedPk = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 5, 1, 66), Gauge32()).setUnits('subscribers').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusSubsDivertedPk.setStatus('current')
tmnxBsxGrpStatusSubsAverage = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 5, 1, 67), Gauge32()).setUnits('subscribers').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusSubsAverage.setStatus('current')
tmnxBsxGrpStatusSubsPeak = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 5, 1, 68), Gauge32()).setUnits('subscribers').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusSubsPeak.setStatus('current')
tmnxBsxGrpStatusTrafficRateAvg = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 5, 1, 69), Gauge32()).setUnits('kbps').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusTrafficRateAvg.setStatus('current')
tmnxBsxGrpStatusTrafficRatePeak = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 5, 1, 70), Gauge32()).setUnits('kbps').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusTrafficRatePeak.setStatus('current')
tmnxBsxGrpStatusPacketRate = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 5, 1, 71), Gauge32()).setUnits('packets per second').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusPacketRate.setStatus('current')
tmnxBsxGrpStatusPacketRateAvg = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 5, 1, 72), Gauge32()).setUnits('packets per second').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusPacketRateAvg.setStatus('current')
tmnxBsxGrpStatusPacketRatePeak = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 5, 1, 73), Gauge32()).setUnits('packets per second').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusPacketRatePeak.setStatus('current')
tmnxBsxGrpStatusFlowResInUse = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 5, 1, 74), Gauge32()).setUnits('flow resources').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusFlowResInUse.setStatus('current')
tmnxBsxGrpStatusHCPktSzIncPk = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 5, 1, 75), Counter64()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusHCPktSzIncPk.setStatus('current')
tmnxBsxGrpStatusPktSzIncPkLo = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 5, 1, 76), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusPktSzIncPkLo.setStatus('current')
tmnxBsxGrpStatusPktSzIncPkHi = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 5, 1, 77), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusPktSzIncPkHi.setStatus('current')
tmnxBsxGrpStatusHCPktSzDecPk = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 5, 1, 78), Counter64()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusHCPktSzDecPk.setStatus('current')
tmnxBsxGrpStatusPktSzDecPkLo = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 5, 1, 79), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusPktSzDecPkLo.setStatus('current')
tmnxBsxGrpStatusPktSzDecPkHi = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 5, 1, 80), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusPktSzDecPkHi.setStatus('current')
tmnxBsxGrpStatusHCPktSzIncOc = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 5, 1, 81), Counter64()).setUnits('octets').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusHCPktSzIncOc.setStatus('current')
tmnxBsxGrpStatusPktSzIncOcLo = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 5, 1, 82), Counter32()).setUnits('octets').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusPktSzIncOcLo.setStatus('current')
tmnxBsxGrpStatusPktSzIncOcHi = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 5, 1, 83), Counter32()).setUnits('octets').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusPktSzIncOcHi.setStatus('current')
tmnxBsxGrpStatusHCPktSzDecOc = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 5, 1, 84), Counter64()).setUnits('octets').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusHCPktSzDecOc.setStatus('current')
tmnxBsxGrpStatusPktSzDecOcLo = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 5, 1, 85), Counter32()).setUnits('octets').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusPktSzDecOcLo.setStatus('current')
tmnxBsxGrpStatusPktSzDecOcHi = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 5, 1, 86), Counter32()).setUnits('octets').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusPktSzDecOcHi.setStatus('current')
tmnxBsxGrpStatusIngQTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 6), )
if mibBuilder.loadTexts: tmnxBsxGrpStatusIngQTable.setStatus('current')
tmnxBsxGrpStatusIngQEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 6, 1), ).setIndexNames((0, "TIMETRA-BSX-NG-MIB", "tmnxBsxIsaAaGroupIndex"), (0, "TIMETRA-CHASSIS-MIB", "tmnxChassisIndex"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxCardSlotNum"), (0, "TIMETRA-CHASSIS-MIB", "tmnxMDASlotNum"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusInQDirection"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusInQIndex"))
if mibBuilder.loadTexts: tmnxBsxGrpStatusIngQEntry.setStatus('current')
tmnxBsxGrpStatusInQDirection = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 6, 1, 1), TmnxBsxDirection())
if mibBuilder.loadTexts: tmnxBsxGrpStatusInQDirection.setStatus('current')
tmnxBsxGrpStatusInQIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 6, 1, 2), TQueueId())
if mibBuilder.loadTexts: tmnxBsxGrpStatusInQIndex.setStatus('current')
tmnxBsxGrpStatusIngQDiscontTime = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 6, 1, 3), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusIngQDiscontTime.setStatus('current')
tmnxBsxGrpStatusIngQFwdInPPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 6, 1, 4), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusIngQFwdInPPkts.setStatus('current')
tmnxBsxGrpStatusIngQFwdOutPPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 6, 1, 5), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusIngQFwdOutPPkts.setStatus('current')
tmnxBsxGrpStatusIngQFwdInPOcts = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 6, 1, 6), Counter32()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusIngQFwdInPOcts.setStatus('current')
tmnxBsxGrpStatusIngQFwdOutPOcts = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 6, 1, 7), Counter32()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusIngQFwdOutPOcts.setStatus('current')
tmnxBsxGrpStatusIngQDroInPPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 6, 1, 8), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusIngQDroInPPkts.setStatus('current')
tmnxBsxGrpStatusIngQDroOutPPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 6, 1, 9), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusIngQDroOutPPkts.setStatus('current')
tmnxBsxGrpStatusIngQDroInPOcts = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 6, 1, 10), Counter32()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusIngQDroInPOcts.setStatus('current')
tmnxBsxGrpStatusIngQDroOutPOcts = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 6, 1, 11), Counter32()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusIngQDroOutPOcts.setStatus('current')
tmnxBsxGrpStatusIngQHCFwdInPPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 6, 1, 12), Counter64()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusIngQHCFwdInPPkts.setStatus('current')
tmnxBsxGrpStatusIngQHCFwdOutPPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 6, 1, 13), Counter64()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusIngQHCFwdOutPPkts.setStatus('current')
tmnxBsxGrpStatusIngQHCFwdInPOcts = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 6, 1, 14), Counter64()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusIngQHCFwdInPOcts.setStatus('current')
tmnxBsxGrpStatusIngQHCFwdOutPOcts = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 6, 1, 15), Counter64()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusIngQHCFwdOutPOcts.setStatus('current')
tmnxBsxGrpStatusIngQHCDroInPPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 6, 1, 16), Counter64()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusIngQHCDroInPPkts.setStatus('current')
tmnxBsxGrpStatusIngQHCDroOutPPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 6, 1, 17), Counter64()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusIngQHCDroOutPPkts.setStatus('current')
tmnxBsxGrpStatusIngQHCDroInPOcts = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 6, 1, 18), Counter64()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusIngQHCDroInPOcts.setStatus('current')
tmnxBsxGrpStatusIngQHCDroOutPOcts = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 6, 1, 19), Counter64()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusIngQHCDroOutPOcts.setStatus('current')
tmnxBsxGrpStatusEgrQTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 7), )
if mibBuilder.loadTexts: tmnxBsxGrpStatusEgrQTable.setStatus('current')
tmnxBsxGrpStatusEgrQEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 7, 1), ).setIndexNames((0, "TIMETRA-BSX-NG-MIB", "tmnxBsxIsaAaGroupIndex"), (0, "TIMETRA-CHASSIS-MIB", "tmnxChassisIndex"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxCardSlotNum"), (0, "TIMETRA-CHASSIS-MIB", "tmnxMDASlotNum"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusEgrQDirection"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusEgrQIndex"))
if mibBuilder.loadTexts: tmnxBsxGrpStatusEgrQEntry.setStatus('current')
tmnxBsxGrpStatusEgrQDirection = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 7, 1, 1), TmnxBsxDirection())
if mibBuilder.loadTexts: tmnxBsxGrpStatusEgrQDirection.setStatus('current')
tmnxBsxGrpStatusEgrQIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 7, 1, 2), TQueueId())
if mibBuilder.loadTexts: tmnxBsxGrpStatusEgrQIndex.setStatus('current')
tmnxBsxGrpStatusEgrQDiscontTime = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 7, 1, 3), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusEgrQDiscontTime.setStatus('current')
tmnxBsxGrpStatusEgrQFwdInPPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 7, 1, 4), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusEgrQFwdInPPkts.setStatus('current')
tmnxBsxGrpStatusEgrQFwdOutPPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 7, 1, 5), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusEgrQFwdOutPPkts.setStatus('current')
tmnxBsxGrpStatusEgrQFwdInPOcts = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 7, 1, 6), Counter32()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusEgrQFwdInPOcts.setStatus('current')
tmnxBsxGrpStatusEgrQFwdOutPOcts = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 7, 1, 7), Counter32()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusEgrQFwdOutPOcts.setStatus('current')
tmnxBsxGrpStatusEgrQDroInPPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 7, 1, 8), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusEgrQDroInPPkts.setStatus('current')
tmnxBsxGrpStatusEgrQDroOutPPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 7, 1, 9), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusEgrQDroOutPPkts.setStatus('current')
tmnxBsxGrpStatusEgrQDroInPOcts = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 7, 1, 10), Counter32()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusEgrQDroInPOcts.setStatus('current')
tmnxBsxGrpStatusEgrQDroOutPOcts = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 7, 1, 11), Counter32()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusEgrQDroOutPOcts.setStatus('current')
tmnxBsxGrpStatusEgrQHCFwdInPPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 7, 1, 12), Counter64()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusEgrQHCFwdInPPkts.setStatus('current')
tmnxBsxGrpStatusEgrQHCFwdOutPPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 7, 1, 13), Counter64()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusEgrQHCFwdOutPPkts.setStatus('current')
tmnxBsxGrpStatusEgrQHCFwdInPOcts = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 7, 1, 14), Counter64()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusEgrQHCFwdInPOcts.setStatus('current')
tmnxBsxGrpStatusEgrQHCFwdOutPOcts = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 7, 1, 15), Counter64()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusEgrQHCFwdOutPOcts.setStatus('current')
tmnxBsxGrpStatusEgrQHCDroInPPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 7, 1, 16), Counter64()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusEgrQHCDroInPPkts.setStatus('current')
tmnxBsxGrpStatusEgrQHCDroOutPPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 7, 1, 17), Counter64()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusEgrQHCDroOutPPkts.setStatus('current')
tmnxBsxGrpStatusEgrQHCDroInPOcts = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 7, 1, 18), Counter64()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusEgrQHCDroInPOcts.setStatus('current')
tmnxBsxGrpStatusEgrQHCDroOutPOcts = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 7, 1, 19), Counter64()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusEgrQHCDroOutPOcts.setStatus('current')
tmnxBsxAaSubSumTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 8), )
if mibBuilder.loadTexts: tmnxBsxAaSubSumTable.setStatus('current')
tmnxBsxAaSubSumEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 8, 1), ).setIndexNames((0, "TIMETRA-BSX-NG-MIB", "tmnxBsxAaGrpPartIndex"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxAaSubStatsInterval"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxAaSubscriberType"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxAaSubscriber"))
if mibBuilder.loadTexts: tmnxBsxAaSubSumEntry.setStatus('current')
tmnxBsxAaSubStatsInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 8, 1, 1), TmnxBsxAaSubStatsInterval())
if mibBuilder.loadTexts: tmnxBsxAaSubStatsInterval.setStatus('current')
tmnxBsxAaSubSumMdaSlotNum = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 8, 1, 2), TmnxSlotNumOrZero()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxAaSubSumMdaSlotNum.setStatus('current')
tmnxBsxAaSubSumMdaMdaNum = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 8, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxAaSubSumMdaMdaNum.setStatus('current')
tmnxBsxAaSubSumAppProfName = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 8, 1, 4), TNamedItem()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxAaSubSumAppProfName.setStatus('current')
tmnxBsxAaSubSumDiscontTime = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 8, 1, 5), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxAaSubSumDiscontTime.setStatus('current')
tmnxBsxAaSubSumOctsAdmFmSb = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 8, 1, 6), Counter32()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxAaSubSumOctsAdmFmSb.setStatus('current')
tmnxBsxAaSubSumPktsAdmFmSb = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 8, 1, 7), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxAaSubSumPktsAdmFmSb.setStatus('current')
tmnxBsxAaSubSumFlwsAdmFmSb = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 8, 1, 8), Counter32()).setUnits('flows').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxAaSubSumFlwsAdmFmSb.setStatus('current')
tmnxBsxAaSubSumOctsDnyFmSb = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 8, 1, 9), Counter32()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxAaSubSumOctsDnyFmSb.setStatus('current')
tmnxBsxAaSubSumPktsDnyFmSb = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 8, 1, 10), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxAaSubSumPktsDnyFmSb.setStatus('current')
tmnxBsxAaSubSumFlwsDnyFmSb = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 8, 1, 11), Counter32()).setUnits('flows').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxAaSubSumFlwsDnyFmSb.setStatus('current')
tmnxBsxAaSubSumOctsAdmToSb = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 8, 1, 12), Counter32()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxAaSubSumOctsAdmToSb.setStatus('current')
tmnxBsxAaSubSumPktsAdmToSb = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 8, 1, 13), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxAaSubSumPktsAdmToSb.setStatus('current')
tmnxBsxAaSubSumFlwsAdmToSb = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 8, 1, 14), Counter32()).setUnits('flows').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxAaSubSumFlwsAdmToSb.setStatus('current')
tmnxBsxAaSubSumOctsDnyToSb = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 8, 1, 15), Counter32()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxAaSubSumOctsDnyToSb.setStatus('current')
tmnxBsxAaSubSumPktsDnyToSb = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 8, 1, 16), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxAaSubSumPktsDnyToSb.setStatus('current')
tmnxBsxAaSubSumFlwsDnyToSb = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 8, 1, 17), Counter32()).setUnits('flows').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxAaSubSumFlwsDnyToSb.setStatus('current')
tmnxBsxAaSubSumTermFlwDur = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 8, 1, 18), Counter32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxAaSubSumTermFlwDur.setStatus('current')
tmnxBsxAaSubSumTermFlws = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 8, 1, 19), Counter32()).setUnits('flows').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxAaSubSumTermFlws.setStatus('current')
tmnxBsxAaSubSumShrtDurFlws = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 8, 1, 20), Counter32()).setUnits('flows').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxAaSubSumShrtDurFlws.setStatus('current')
tmnxBsxAaSubSumMedDurFlws = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 8, 1, 21), Counter32()).setUnits('flows').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxAaSubSumMedDurFlws.setStatus('current')
tmnxBsxAaSubSumLngDurFlws = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 8, 1, 22), Counter32()).setUnits('flows').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxAaSubSumLngDurFlws.setStatus('current')
tmnxBsxAaSubSumActFlwsFmSb = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 8, 1, 23), Gauge32()).setUnits('flows').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxAaSubSumActFlwsFmSb.setStatus('current')
tmnxBsxAaSubSumActFlwsToSb = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 8, 1, 24), Gauge32()).setUnits('flows').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxAaSubSumActFlwsToSb.setStatus('current')
tmnxBsxAaSubSumHCOctsAdmFmSb = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 8, 1, 25), Counter64()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxAaSubSumHCOctsAdmFmSb.setStatus('current')
tmnxBsxAaSubSumHCPktsAdmFmSb = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 8, 1, 26), Counter64()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxAaSubSumHCPktsAdmFmSb.setStatus('current')
tmnxBsxAaSubSumHCFlwsAdmFmSb = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 8, 1, 27), Counter64()).setUnits('flows').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxAaSubSumHCFlwsAdmFmSb.setStatus('current')
tmnxBsxAaSubSumHCOctsDnyFmSb = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 8, 1, 28), Counter64()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxAaSubSumHCOctsDnyFmSb.setStatus('current')
tmnxBsxAaSubSumHCPktsDnyFmSb = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 8, 1, 29), Counter64()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxAaSubSumHCPktsDnyFmSb.setStatus('current')
tmnxBsxAaSubSumHCFlwsDnyFmSb = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 8, 1, 30), Counter64()).setUnits('flows').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxAaSubSumHCFlwsDnyFmSb.setStatus('current')
tmnxBsxAaSubSumHCOctsAdmToSb = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 8, 1, 31), Counter64()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxAaSubSumHCOctsAdmToSb.setStatus('current')
tmnxBsxAaSubSumHCPktsAdmToSb = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 8, 1, 32), Counter64()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxAaSubSumHCPktsAdmToSb.setStatus('current')
tmnxBsxAaSubSumHCFlwsAdmToSb = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 8, 1, 33), Counter64()).setUnits('flows').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxAaSubSumHCFlwsAdmToSb.setStatus('current')
tmnxBsxAaSubSumHCOctsDnyToSb = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 8, 1, 34), Counter64()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxAaSubSumHCOctsDnyToSb.setStatus('current')
tmnxBsxAaSubSumHCPktsDnyToSb = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 8, 1, 35), Counter64()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxAaSubSumHCPktsDnyToSb.setStatus('current')
tmnxBsxAaSubSumHCFlwsDnyToSb = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 8, 1, 36), Counter64()).setUnits('flows').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxAaSubSumHCFlwsDnyToSb.setStatus('current')
tmnxBsxAaSubSumHCTermFlwDur = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 8, 1, 37), Counter64()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxAaSubSumHCTermFlwDur.setStatus('current')
tmnxBsxAaSubSumHCTermFlws = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 8, 1, 38), Counter64()).setUnits('flows').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxAaSubSumHCTermFlws.setStatus('current')
tmnxBsxAaSubSumHCShrtDurFlws = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 8, 1, 39), Counter64()).setUnits('flows').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxAaSubSumHCShrtDurFlws.setStatus('current')
tmnxBsxAaSubSumHCMedDurFlws = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 8, 1, 40), Counter64()).setUnits('flows').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxAaSubSumHCMedDurFlws.setStatus('current')
tmnxBsxAaSubSumHCLngDurFlws = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 8, 1, 41), Counter64()).setUnits('flows').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxAaSubSumHCLngDurFlws.setStatus('current')
tmnxBsxAaGrpPartTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 9), )
if mibBuilder.loadTexts: tmnxBsxAaGrpPartTable.setStatus('current')
tmnxBsxAaGrpPartEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 9, 1), ).setIndexNames((0, "TIMETRA-BSX-NG-MIB", "tmnxBsxAaGrpPartIndex"))
if mibBuilder.loadTexts: tmnxBsxAaGrpPartEntry.setStatus('current')
tmnxBsxAaGrpPartIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 9, 1, 1), TmnxBsxAaGrpPartIndex())
if mibBuilder.loadTexts: tmnxBsxAaGrpPartIndex.setStatus('current')
tmnxBsxAaGrpPartRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 9, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxAaGrpPartRowStatus.setStatus('current')
tmnxBsxAaGrpPartRowLastChange = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 9, 1, 3), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxAaGrpPartRowLastChange.setStatus('current')
tmnxBsxAaGrpPartDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 9, 1, 4), TItemDescription()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxAaGrpPartDescription.setStatus('current')
tmnxBsxAaGrpPartXOnlineHost = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 9, 1, 5), TmnxEnabledDisabled().clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxAaGrpPartXOnlineHost.setStatus('current')
tmnxBsxAaGrpPartHttpMatchAllReq = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 9, 1, 6), TmnxEnabledDisabled().clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxAaGrpPartHttpMatchAllReq.setStatus('current')
tmnxBsxAaGrpPartAaSubRemote = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 9, 1, 7), TmnxEnabledDisabled().clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxAaGrpPartAaSubRemote.setStatus('current')
tmnxBsxIsaLoadBalUnSubTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 10), )
if mibBuilder.loadTexts: tmnxBsxIsaLoadBalUnSubTable.setStatus('current')
tmnxBsxIsaLoadBalUnSubEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 10, 1), ).setIndexNames((0, "TIMETRA-BSX-NG-MIB", "tmnxBsxIsaAaGroupIndex"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxAaSubscriberType"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxIsaLoadBalUnSub"))
if mibBuilder.loadTexts: tmnxBsxIsaLoadBalUnSubEntry.setStatus('current')
tmnxBsxIsaLoadBalUnSub = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 10, 1, 1), TmnxBsxAaSubscriber()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxIsaLoadBalUnSub.setStatus('current')
tmnxBsxIsaLoadBalUnSubTransit = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 10, 1, 2), Gauge32()).setUnits('subscribers').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxIsaLoadBalUnSubTransit.setStatus('current')
tmnxBsxAaSubTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 11), )
if mibBuilder.loadTexts: tmnxBsxAaSubTable.setStatus('current')
tmnxBsxAaSubEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 11, 1), ).setIndexNames((0, "TIMETRA-BSX-NG-MIB", "tmnxBsxAaGrpPartIndex"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxAaSubscriberType"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxAaSubscriber"))
if mibBuilder.loadTexts: tmnxBsxAaSubEntry.setStatus('current')
tmnxBsxAaSubMdaSlotNum = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 11, 1, 1), TmnxSlotNumOrZero()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxAaSubMdaSlotNum.setStatus('current')
tmnxBsxAaSubMdaMdaNum = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 11, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxAaSubMdaMdaNum.setStatus('current')
tmnxBsxAaSubAppProfName = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 11, 1, 3), TNamedItem()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxAaSubAppProfName.setStatus('current')
tmnxBsxAaSubHasOverrides = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 11, 1, 4), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxAaSubHasOverrides.setStatus('current')
tmnxBsxAaSubTransitIpPolicyId = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 11, 1, 5), TmnxBsxTransitIpPolicyIdOrZero()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxAaSubTransitIpPolicyId.setStatus('current')
tmnxBsxAaSubTransPrefPolicyId = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 11, 1, 6), TmnxBsxTransPrefPolicyIdOrZero()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxAaSubTransPrefPolicyId.setStatus('current')
tmnxBsxAaWap1xTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 12), )
if mibBuilder.loadTexts: tmnxBsxAaWap1xTable.setStatus('current')
tmnxBsxAaWap1xEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 12, 1), )
tmnxBsxAaGrpPartEntry.registerAugmentions(("TIMETRA-BSX-NG-MIB", "tmnxBsxAaWap1xEntry"))
tmnxBsxAaWap1xEntry.setIndexNames(*tmnxBsxAaGrpPartEntry.getIndexNames())
if mibBuilder.loadTexts: tmnxBsxAaWap1xEntry.setStatus('current')
tmnxBsxAaWap1xRowLastChange = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 12, 1, 1), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxAaWap1xRowLastChange.setStatus('current')
tmnxBsxAaWap1xAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 12, 1, 2), TmnxAdminState().clone('outOfService')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxAaWap1xAdminState.setStatus('current')
tmnxBsxProtTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 1), )
if mibBuilder.loadTexts: tmnxBsxProtTable.setStatus('current')
tmnxBsxProtEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 1, 1), ).setIndexNames((1, "TIMETRA-BSX-NG-MIB", "tmnxBsxProtName"))
if mibBuilder.loadTexts: tmnxBsxProtEntry.setStatus('current')
tmnxBsxProtName = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 1, 1, 1), TNamedItem())
if mibBuilder.loadTexts: tmnxBsxProtName.setStatus('current')
tmnxBsxProtDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 1, 1, 2), TItemDescription()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxProtDescription.setStatus('current')
tmnxBsxProtParentName = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 1, 1, 3), TNamedItemOrEmpty()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxProtParentName.setStatus('current')
tmnxBsxProtAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 1, 1, 4), TmnxAdminState().clone('outOfService')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxProtAdminState.setStatus('current')
tmnxBsxProtObsolete = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 1, 1, 5), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxProtObsolete.setStatus('current')
tmnxBsxAppGrpCfgTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 2), )
if mibBuilder.loadTexts: tmnxBsxAppGrpCfgTable.setStatus('current')
tmnxBsxAppGrpCfgEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 2, 1), ).setIndexNames((0, "TIMETRA-BSX-NG-MIB", "tmnxBsxAppGrpPolicyVersion"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxAaGrpPartIndex"), (1, "TIMETRA-BSX-NG-MIB", "tmnxBsxAppGrpName"))
if mibBuilder.loadTexts: tmnxBsxAppGrpCfgEntry.setStatus('current')
tmnxBsxAppGrpPolicyVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 2, 1, 1), TmnxBsxPolicyVersion())
if mibBuilder.loadTexts: tmnxBsxAppGrpPolicyVersion.setStatus('current')
tmnxBsxAppGrpName = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 2, 1, 2), TNamedItem())
if mibBuilder.loadTexts: tmnxBsxAppGrpName.setStatus('current')
tmnxBsxAppGrpRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 2, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxAppGrpRowStatus.setStatus('current')
tmnxBsxAppGrpStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 2, 1, 4), StorageType().clone('nonVolatile')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxAppGrpStorageType.setStatus('current')
tmnxBsxAppGrpDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 2, 1, 5), TItemDescription()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxAppGrpDescription.setStatus('current')
tmnxBsxAppGrpAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 2, 1, 6), TmnxAdminState().clone('outOfService')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxAppGrpAdminState.setStatus('obsolete')
tmnxBsxAppGrpChargeGrp = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 2, 1, 7), TNamedItemOrEmpty()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxAppGrpChargeGrp.setStatus('current')
tmnxBsxAppCfgTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 3), )
if mibBuilder.loadTexts: tmnxBsxAppCfgTable.setStatus('current')
tmnxBsxAppCfgEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 3, 1), ).setIndexNames((0, "TIMETRA-BSX-NG-MIB", "tmnxBsxAppPolicyVersion"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxAaGrpPartIndex"), (1, "TIMETRA-BSX-NG-MIB", "tmnxBsxAppName"))
if mibBuilder.loadTexts: tmnxBsxAppCfgEntry.setStatus('current')
tmnxBsxAppPolicyVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 3, 1, 1), TmnxBsxPolicyVersion())
if mibBuilder.loadTexts: tmnxBsxAppPolicyVersion.setStatus('current')
tmnxBsxAppName = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 3, 1, 2), TNamedItem())
if mibBuilder.loadTexts: tmnxBsxAppName.setStatus('current')
tmnxBsxAppRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 3, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxAppRowStatus.setStatus('current')
tmnxBsxAppStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 3, 1, 4), StorageType().clone('nonVolatile')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxAppStorageType.setStatus('current')
tmnxBsxAppDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 3, 1, 5), TItemDescription()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxAppDescription.setStatus('current')
tmnxBsxAppAppGroup = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 3, 1, 6), TNamedItem().clone('Unknown')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxAppAppGroup.setStatus('current')
tmnxBsxAppChargeGrp = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 3, 1, 7), TNamedItemOrEmpty()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxAppChargeGrp.setStatus('current')
tmnxBsxAppFilterTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 4), )
if mibBuilder.loadTexts: tmnxBsxAppFilterTable.setStatus('current')
tmnxBsxAppFilterEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 4, 1), ).setIndexNames((0, "TIMETRA-BSX-NG-MIB", "tmnxBsxAppFilterPolicyVersion"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxAaGrpPartIndex"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxAppFilterEntryId"))
if mibBuilder.loadTexts: tmnxBsxAppFilterEntry.setStatus('current')
tmnxBsxAppFilterPolicyVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 4, 1, 1), TmnxBsxPolicyVersion())
if mibBuilder.loadTexts: tmnxBsxAppFilterPolicyVersion.setStatus('current')
tmnxBsxAppFilterEntryId = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 4, 1, 2), TEntryId())
if mibBuilder.loadTexts: tmnxBsxAppFilterEntryId.setStatus('current')
tmnxBsxAppFilterRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 4, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxAppFilterRowStatus.setStatus('current')
tmnxBsxAppFilterDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 4, 1, 4), TItemDescription()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxAppFilterDescription.setStatus('current')
tmnxBsxAppFilterAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 4, 1, 5), TmnxAdminState().clone('outOfService')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxAppFilterAdminState.setStatus('current')
tmnxBsxAppFilterProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 4, 1, 6), TNamedItemOrEmpty()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxAppFilterProtocol.setStatus('current')
tmnxBsxAppFilterProtocolOp = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 4, 1, 7), TmnxBsxOperator().clone('none')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxAppFilterProtocolOp.setStatus('current')
tmnxBsxAppFilterFlowSetupDir = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 4, 1, 8), TmnxBsxDirection().clone('both')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxAppFilterFlowSetupDir.setStatus('current')
tmnxBsxAppFilterIpProtocolNum = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 4, 1, 9), TIpProtocol().clone(-1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxAppFilterIpProtocolNum.setStatus('current')
tmnxBsxAppFilterIpProtocolNumOp = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 4, 1, 10), TmnxBsxOperator().clone('none')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxAppFilterIpProtocolNumOp.setStatus('current')
tmnxBsxAppFilterServerAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 4, 1, 11), InetAddressType().clone('unknown')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxAppFilterServerAddrType.setStatus('current')
tmnxBsxAppFilterServerAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 4, 1, 12), InetAddress().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(4, 4), ValueSizeConstraint(16, 16), )).clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxAppFilterServerAddr.setStatus('current')
tmnxBsxAppFilterServerAddrLen = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 4, 1, 13), InetAddressPrefixLength()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxAppFilterServerAddrLen.setStatus('current')
tmnxBsxAppFilterServerAddrOp = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 4, 1, 14), TmnxBsxOperator().clone('none')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxAppFilterServerAddrOp.setStatus('current')
tmnxBsxAppFilterServerPort = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 4, 1, 15), TTcpUdpPort()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxAppFilterServerPort.setStatus('obsolete')
tmnxBsxAppFilterServerPortOp = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 4, 1, 16), TmnxBsxOperator().clone('none')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxAppFilterServerPortOp.setStatus('current')
tmnxBsxAppFilterServerPortFpp = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 4, 1, 17), TmnxBsxFirstPacketPolicy().clone('none')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxAppFilterServerPortFpp.setStatus('current')
tmnxBsxAppFilterServerPortLow = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 4, 1, 18), TTcpUdpPort()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxAppFilterServerPortLow.setStatus('current')
tmnxBsxAppFilterServerPortHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 4, 1, 19), TTcpUdpPort()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxAppFilterServerPortHigh.setStatus('current')
tmnxBsxAppFilterApplication = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 4, 1, 99), TNamedItem().clone('Unknown')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxAppFilterApplication.setStatus('current')
tmnxBsxAsoTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 5), )
if mibBuilder.loadTexts: tmnxBsxAsoTable.setStatus('current')
tmnxBsxAsoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 5, 1), ).setIndexNames((0, "TIMETRA-BSX-NG-MIB", "tmnxBsxAsoPolicyVersion"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxAaGrpPartIndex"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxAsoCharName"))
if mibBuilder.loadTexts: tmnxBsxAsoEntry.setStatus('current')
tmnxBsxAsoPolicyVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 5, 1, 1), TmnxBsxPolicyVersion())
if mibBuilder.loadTexts: tmnxBsxAsoPolicyVersion.setStatus('current')
tmnxBsxAsoCharName = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 5, 1, 2), TNamedItem())
if mibBuilder.loadTexts: tmnxBsxAsoCharName.setStatus('current')
tmnxBsxAsoRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 5, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxAsoRowStatus.setStatus('current')
tmnxBsxAsoDefValName = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 5, 1, 4), TNamedItemOrEmpty()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxAsoDefValName.setStatus('current')
tmnxBsxAsoValTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 6), )
if mibBuilder.loadTexts: tmnxBsxAsoValTable.setStatus('current')
tmnxBsxAsoValEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 6, 1), ).setIndexNames((0, "TIMETRA-BSX-NG-MIB", "tmnxBsxAsoValPolicyVersion"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxAaGrpPartIndex"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxAsoValCharName"), (1, "TIMETRA-BSX-NG-MIB", "tmnxBsxAsoValValName"))
if mibBuilder.loadTexts: tmnxBsxAsoValEntry.setStatus('current')
tmnxBsxAsoValPolicyVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 6, 1, 1), TmnxBsxPolicyVersion())
if mibBuilder.loadTexts: tmnxBsxAsoValPolicyVersion.setStatus('current')
tmnxBsxAsoValCharName = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 6, 1, 2), TNamedItem())
if mibBuilder.loadTexts: tmnxBsxAsoValCharName.setStatus('current')
tmnxBsxAsoValValName = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 6, 1, 3), TNamedItem())
if mibBuilder.loadTexts: tmnxBsxAsoValValName.setStatus('current')
tmnxBsxAsoValRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 6, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxAsoValRowStatus.setStatus('current')
tmnxBsxAppProfTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 7), )
if mibBuilder.loadTexts: tmnxBsxAppProfTable.setStatus('current')
tmnxBsxAppProfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 7, 1), ).setIndexNames((0, "TIMETRA-BSX-NG-MIB", "tmnxBsxAppPolicyVersion"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxAaGrpPartIndex"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxAppProfName"))
if mibBuilder.loadTexts: tmnxBsxAppProfEntry.setStatus('current')
tmnxBsxAppProfName = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 7, 1, 1), TNamedItem())
if mibBuilder.loadTexts: tmnxBsxAppProfName.setStatus('current')
tmnxBsxAppProfRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 7, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxAppProfRowStatus.setStatus('current')
tmnxBsxAppProfDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 7, 1, 3), TItemDescription()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxAppProfDescription.setStatus('current')
tmnxBsxAppProfDivert = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 7, 1, 4), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxAppProfDivert.setStatus('current')
tmnxBsxAppProfCapacityCost = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 7, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)).clone(1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxAppProfCapacityCost.setStatus('current')
tmnxBsxAppProfCharTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 8), )
if mibBuilder.loadTexts: tmnxBsxAppProfCharTable.setStatus('current')
tmnxBsxAppProfCharEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 8, 1), ).setIndexNames((0, "TIMETRA-BSX-NG-MIB", "tmnxBsxAppProfCharPolicyVersion"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxAaGrpPartIndex"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxAppProfCharProfName"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxAppProfCharCharName"))
if mibBuilder.loadTexts: tmnxBsxAppProfCharEntry.setStatus('current')
tmnxBsxAppProfCharPolicyVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 8, 1, 1), TmnxBsxPolicyVersion())
if mibBuilder.loadTexts: tmnxBsxAppProfCharPolicyVersion.setStatus('current')
tmnxBsxAppProfCharProfName = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 8, 1, 2), TNamedItem())
if mibBuilder.loadTexts: tmnxBsxAppProfCharProfName.setStatus('current')
tmnxBsxAppProfCharCharName = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 8, 1, 3), TNamedItem())
if mibBuilder.loadTexts: tmnxBsxAppProfCharCharName.setStatus('current')
tmnxBsxAppProfCharRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 8, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxAppProfCharRowStatus.setStatus('current')
tmnxBsxAppProfCharValName = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 8, 1, 5), TNamedItem()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxAppProfCharValName.setStatus('current')
tmnxBsxAqpTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 9), )
if mibBuilder.loadTexts: tmnxBsxAqpTable.setStatus('current')
tmnxBsxAqpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 9, 1), ).setIndexNames((0, "TIMETRA-BSX-NG-MIB", "tmnxBsxAqpPolicyVersion"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxAaGrpPartIndex"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxAqpEntryId"))
if mibBuilder.loadTexts: tmnxBsxAqpEntry.setStatus('current')
tmnxBsxAqpPolicyVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 9, 1, 1), TmnxBsxPolicyVersion())
if mibBuilder.loadTexts: tmnxBsxAqpPolicyVersion.setStatus('current')
tmnxBsxAqpEntryId = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 9, 1, 2), TEntryId())
if mibBuilder.loadTexts: tmnxBsxAqpEntryId.setStatus('current')
tmnxBsxAqpRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 9, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxAqpRowStatus.setStatus('current')
tmnxBsxAqpDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 9, 1, 4), TItemDescription()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxAqpDescription.setStatus('current')
tmnxBsxAqpAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 9, 1, 5), TmnxAdminState().clone('outOfService')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxAqpAdminState.setStatus('current')
tmnxBsxAqpApplication = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 9, 1, 6), TNamedItemOrEmpty()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxAqpApplication.setStatus('current')
tmnxBsxAqpApplicationOp = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 9, 1, 7), TmnxBsxOperator().clone('none')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxAqpApplicationOp.setStatus('current')
tmnxBsxAqpAppGroup = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 9, 1, 8), TNamedItemOrEmpty()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxAqpAppGroup.setStatus('current')
tmnxBsxAqpAppGroupOp = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 9, 1, 9), TmnxBsxOperator().clone('none')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxAqpAppGroupOp.setStatus('current')
tmnxBsxAqpTrafficDir = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 9, 1, 10), TmnxBsxDirection().clone('both')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxAqpTrafficDir.setStatus('current')
tmnxBsxAqpSubscriber = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 9, 1, 11), TNamedItemOrEmpty()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxAqpSubscriber.setStatus('obsolete')
tmnxBsxAqpSubscriberOp = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 9, 1, 12), TmnxBsxOperator().clone('none')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxAqpSubscriberOp.setStatus('obsolete')
tmnxBsxAqpDscp = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 9, 1, 13), TDSCPNameOrEmpty()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxAqpDscp.setStatus('current')
tmnxBsxAqpDscpOp = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 9, 1, 14), TmnxBsxOperator().clone('none')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxAqpDscpOp.setStatus('current')
tmnxBsxAqpSapSubscrPortId = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 9, 1, 15), TmnxPortID()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxAqpSapSubscrPortId.setStatus('obsolete')
tmnxBsxAqpSapSubscrEncapValue = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 9, 1, 16), TmnxEncapVal()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxAqpSapSubscrEncapValue.setStatus('obsolete')
tmnxBsxAqpSapSubscrOp = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 9, 1, 17), TmnxBsxOperator().clone('none')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxAqpSapSubscrOp.setStatus('obsolete')
tmnxBsxAqpSrcAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 9, 1, 18), InetAddressType().clone('unknown')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxAqpSrcAddressType.setStatus('current')
tmnxBsxAqpSrcAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 9, 1, 19), InetAddress().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(4, 4), ValueSizeConstraint(16, 16), )).clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxAqpSrcAddress.setStatus('current')
tmnxBsxAqpSrcAddressLength = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 9, 1, 20), InetAddressPrefixLength()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxAqpSrcAddressLength.setStatus('current')
tmnxBsxAqpSrcAddressOp = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 9, 1, 21), TmnxBsxOperator().clone('none')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxAqpSrcAddressOp.setStatus('current')
tmnxBsxAqpSrcPortOp = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 9, 1, 22), TmnxBsxOperator().clone('none')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxAqpSrcPortOp.setStatus('current')
tmnxBsxAqpSrcPortLowValue = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 9, 1, 23), TTcpUdpPort()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxAqpSrcPortLowValue.setStatus('current')
tmnxBsxAqpSrcPortHighValue = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 9, 1, 24), TTcpUdpPort()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxAqpSrcPortHighValue.setStatus('current')
tmnxBsxAqpDstAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 9, 1, 25), InetAddressType().clone('unknown')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxAqpDstAddressType.setStatus('current')
tmnxBsxAqpDstAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 9, 1, 26), InetAddress().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(4, 4), ValueSizeConstraint(16, 16), )).clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxAqpDstAddress.setStatus('current')
tmnxBsxAqpDstAddressLength = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 9, 1, 27), InetAddressPrefixLength()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxAqpDstAddressLength.setStatus('current')
tmnxBsxAqpDstAddressOp = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 9, 1, 28), TmnxBsxOperator().clone('none')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxAqpDstAddressOp.setStatus('current')
tmnxBsxAqpDstPortOp = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 9, 1, 29), TmnxBsxOperator().clone('none')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxAqpDstPortOp.setStatus('current')
tmnxBsxAqpDstPortLowValue = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 9, 1, 30), TTcpUdpPort()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxAqpDstPortLowValue.setStatus('current')
tmnxBsxAqpDstPortHighValue = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 9, 1, 31), TTcpUdpPort()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxAqpDstPortHighValue.setStatus('current')
tmnxBsxAqpSpokeSdpSubscr = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 9, 1, 32), SdpBindId().clone(hexValue="0")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxAqpSpokeSdpSubscr.setStatus('obsolete')
tmnxBsxAqpSpokeSdpSubscrOp = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 9, 1, 33), TmnxBsxOperator().clone('none')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxAqpSpokeSdpSubscrOp.setStatus('obsolete')
tmnxBsxAqpAaSubscriberType = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 9, 1, 34), TmnxBsxAaSubscriberType().clone('unknown')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxAqpAaSubscriberType.setStatus('current')
tmnxBsxAqpAaSubscriber = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 9, 1, 35), TmnxBsxAaSubscriber()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxAqpAaSubscriber.setStatus('current')
tmnxBsxAqpAaSubscriberOp = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 9, 1, 36), TmnxBsxOperator().clone('none')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxAqpAaSubscriberOp.setStatus('current')
tmnxBsxAqpDrop = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 9, 1, 50), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxAqpDrop.setStatus('current')
tmnxBsxAqpBwLimitPolicer = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 9, 1, 51), TNamedItemOrEmpty()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxAqpBwLimitPolicer.setStatus('current')
tmnxBsxAqpFlowRatePolicer = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 9, 1, 52), TNamedItemOrEmpty()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxAqpFlowRatePolicer.setStatus('current')
tmnxBsxAqpFlowCountPolicer = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 9, 1, 53), TNamedItemOrEmpty()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxAqpFlowCountPolicer.setStatus('current')
tmnxBsxAqpRemarkFc = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 9, 1, 54), TFCNameOrEmpty().clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxAqpRemarkFc.setStatus('current')
tmnxBsxAqpRemarkPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 9, 1, 55), TPriorityOrDefault().clone('default')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxAqpRemarkPriority.setStatus('current')
tmnxBsxAqpRemarkDscpInProfile = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 9, 1, 56), TDSCPNameOrEmpty().clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxAqpRemarkDscpInProfile.setStatus('current')
tmnxBsxAqpRemarkDscpOutProfile = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 9, 1, 57), TDSCPNameOrEmpty().clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxAqpRemarkDscpOutProfile.setStatus('current')
tmnxBsxAqpMirrorSource = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 9, 1, 58), TmnxServId()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxAqpMirrorSource.setStatus('current')
tmnxBsxAqpMirrorSourceAllIncl = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 9, 1, 59), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxAqpMirrorSourceAllIncl.setStatus('current')
tmnxBsxAqpHttpErrRedirName = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 9, 1, 60), TNamedItemOrEmpty()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxAqpHttpErrRedirName.setStatus('current')
tmnxBsxAqpHttpRedirName = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 9, 1, 61), TNamedItemOrEmpty()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxAqpHttpRedirName.setStatus('current')
tmnxBsxAqpHttpRedirFlowType = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 9, 1, 62), TmnxBsxAqpHttpRedirFlowType().clone('none')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxAqpHttpRedirFlowType.setStatus('current')
tmnxBsxAqpHttpEnrichName = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 9, 1, 63), TNamedItemOrEmpty()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxAqpHttpEnrichName.setStatus('current')
tmnxBsxAdminControl = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 10))
tmnxBsxAdminOwner = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 10, 1), TNamedItemOrEmpty()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tmnxBsxAdminOwner.setStatus('obsolete')
tmnxBsxAdminControlApply = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 10, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("none", 1), ("initialize", 2), ("commit", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tmnxBsxAdminControlApply.setStatus('obsolete')
tmnxBsxAdminLastChangeTime = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 10, 3), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxAdminLastChangeTime.setStatus('obsolete')
tmnxBsxAdminCtrlTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 10, 4), )
if mibBuilder.loadTexts: tmnxBsxAdminCtrlTable.setStatus('current')
tmnxBsxAdminCtrlEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 10, 4, 1), ).setIndexNames((0, "TIMETRA-BSX-NG-MIB", "tmnxBsxAaGrpPartIndex"))
if mibBuilder.loadTexts: tmnxBsxAdminCtrlEntry.setStatus('current')
tmnxBsxAdminCtrlLastChTime = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 10, 4, 1, 1), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxAdminCtrlLastChTime.setStatus('current')
tmnxBsxAdminCtrlConfigOwner = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 10, 4, 1, 2), TNamedItemOrEmpty()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tmnxBsxAdminCtrlConfigOwner.setStatus('current')
tmnxBsxAdminCtrlApply = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 10, 4, 1, 3), TmnxBsxAdminCtrl()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tmnxBsxAdminCtrlApply.setStatus('current')
tmnxBsxPolicerTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 11), )
if mibBuilder.loadTexts: tmnxBsxPolicerTable.setStatus('current')
tmnxBsxPolicerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 11, 1), ).setIndexNames((0, "TIMETRA-BSX-NG-MIB", "tmnxBsxIsaAaGroupIndex"), (1, "TIMETRA-BSX-NG-MIB", "tmnxBsxPolicerName"))
if mibBuilder.loadTexts: tmnxBsxPolicerEntry.setStatus('current')
tmnxBsxPolicerName = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 11, 1, 1), TNamedItem())
if mibBuilder.loadTexts: tmnxBsxPolicerName.setStatus('current')
tmnxBsxPolicerRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 11, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxPolicerRowStatus.setStatus('current')
tmnxBsxPolicerDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 11, 1, 3), TItemDescription()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxPolicerDescription.setStatus('current')
tmnxBsxPolicerType = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 11, 1, 4), TmnxBsxPolicerType().clone('none')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxPolicerType.setStatus('current')
tmnxBsxPolicerGranularity = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 11, 1, 5), TmnxBsxGranularity().clone('none')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxPolicerGranularity.setStatus('current')
tmnxBsxPolicerAction = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 11, 1, 6), TmnxBsxPolicerAction().clone('permitDeny')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxPolicerAction.setStatus('current')
tmnxBsxPolicerAdminPIR = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 11, 1, 7), TPIRRate().clone(-1)).setUnits('kbps or flows').setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxPolicerAdminPIR.setStatus('current')
tmnxBsxPolicerAdminCIR = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 11, 1, 8), TCIRRate()).setUnits('kbps or flows').setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxPolicerAdminCIR.setStatus('current')
tmnxBsxPolicerMBS = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 11, 1, 9), TmnxBsxBurstSize()).setUnits('KB or flows').setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxPolicerMBS.setStatus('current')
tmnxBsxPolicerCBS = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 11, 1, 10), TmnxBsxBurstSize()).setUnits('KB or flows').setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxPolicerCBS.setStatus('current')
tmnxBsxPolicerPIRAdaptation = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 11, 1, 11), TAdaptationRule().clone('closest')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxPolicerPIRAdaptation.setStatus('current')
tmnxBsxPolicerCIRAdaptation = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 11, 1, 12), TAdaptationRule().clone('closest')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxPolicerCIRAdaptation.setStatus('current')
tmnxBsxIsaAaTim = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 12))
tmnxBsxUpgrade = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 12, 1), TmnxActionType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tmnxBsxUpgrade.setStatus('current')
tmnxBsxVersion = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 12, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxVersion.setStatus('current')
tmnxBsxAqpStatsTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 13), )
if mibBuilder.loadTexts: tmnxBsxAqpStatsTable.setStatus('current')
tmnxBsxAqpStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 13, 1), ).setIndexNames((0, "TIMETRA-BSX-NG-MIB", "tmnxBsxAaGrpPartIndex"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxAqpEntryId"))
if mibBuilder.loadTexts: tmnxBsxAqpStatsEntry.setStatus('current')
tmnxBsxAqpStatsFlows = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 13, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxAqpStatsFlows.setStatus('obsolete')
tmnxBsxAqpStatsConflicts = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 13, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxAqpStatsConflicts.setStatus('obsolete')
tmnxBsxAqpStatsHCFlows = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 13, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxAqpStatsHCFlows.setStatus('current')
tmnxBsxAqpStatsFlowsLo = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 13, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxAqpStatsFlowsLo.setStatus('current')
tmnxBsxAqpStatsFlowsHi = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 13, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxAqpStatsFlowsHi.setStatus('current')
tmnxBsxAqpStatsHCConflicts = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 13, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxAqpStatsHCConflicts.setStatus('current')
tmnxBsxAqpStatsConflictsLo = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 13, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxAqpStatsConflictsLo.setStatus('current')
tmnxBsxAqpStatsConflictsHi = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 13, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxAqpStatsConflictsHi.setStatus('current')
tmnxBsxInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 14))
tmnxBsxFlowFullHighWatermark = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 14, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100)).clone(95)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tmnxBsxFlowFullHighWatermark.setStatus('current')
tmnxBsxFlowFullLowWatermark = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 14, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100)).clone(90)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tmnxBsxFlowFullLowWatermark.setStatus('current')
tmnxBsxFlowSetupHighWatermark = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 14, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(-1, -1), ValueRangeConstraint(1, 2147483647), )).clone(-1)).setUnits('flows per second').setMaxAccess("readwrite")
if mibBuilder.loadTexts: tmnxBsxFlowSetupHighWatermark.setStatus('current')
tmnxBsxFlowSetupLowWatermark = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 14, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setUnits('flows per second').setMaxAccess("readwrite")
if mibBuilder.loadTexts: tmnxBsxFlowSetupLowWatermark.setStatus('current')
tmnxBsxPacketRateHighWatermark = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 14, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(-1, -1), ValueRangeConstraint(1, 2147483647), )).clone(-1)).setUnits('packets per second').setMaxAccess("readwrite")
if mibBuilder.loadTexts: tmnxBsxPacketRateHighWatermark.setStatus('current')
tmnxBsxPacketRateLowWatermark = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 14, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setUnits('packets per second').setMaxAccess("readwrite")
if mibBuilder.loadTexts: tmnxBsxPacketRateLowWatermark.setStatus('current')
tmnxBsxBitRateHighWatermark = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 14, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(-1, -1), ValueRangeConstraint(1, 2147483647), )).clone(-1)).setUnits('megabits per second').setMaxAccess("readwrite")
if mibBuilder.loadTexts: tmnxBsxBitRateHighWatermark.setStatus('current')
tmnxBsxBitRateLowWatermark = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 14, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setUnits('megabits per second').setMaxAccess("readwrite")
if mibBuilder.loadTexts: tmnxBsxBitRateLowWatermark.setStatus('current')
tmnxBsxAqpCharTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 15), )
if mibBuilder.loadTexts: tmnxBsxAqpCharTable.setStatus('current')
tmnxBsxAqpCharEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 15, 1), ).setIndexNames((0, "TIMETRA-BSX-NG-MIB", "tmnxBsxAqpPolicyVersion"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxAaGrpPartIndex"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxAqpEntryId"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxAsoCharName"), (1, "TIMETRA-BSX-NG-MIB", "tmnxBsxAsoValValName"))
if mibBuilder.loadTexts: tmnxBsxAqpCharEntry.setStatus('current')
tmnxBsxAqpCharRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 15, 1, 1), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxAqpCharRowStatus.setStatus('current')
tmnxBsxAqpCharOperator = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 15, 1, 2), TmnxBsxOperator().clone('none')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxAqpCharOperator.setStatus('current')
tmnxBsxAppFilterExprTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 16), )
if mibBuilder.loadTexts: tmnxBsxAppFilterExprTable.setStatus('current')
tmnxBsxAppFilterExprEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 16, 1), ).setIndexNames((0, "TIMETRA-BSX-NG-MIB", "tmnxBsxAppFilterPolicyVersion"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxAaGrpPartIndex"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxAppFilterEntryId"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxAppFilterExprIndex"))
if mibBuilder.loadTexts: tmnxBsxAppFilterExprEntry.setStatus('current')
tmnxBsxAppFilterExprIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 16, 1, 1), TmnxBsxExprSubStringIndex())
if mibBuilder.loadTexts: tmnxBsxAppFilterExprIndex.setStatus('current')
tmnxBsxAppFilterExprRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 16, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxAppFilterExprRowStatus.setStatus('current')
tmnxBsxAppFilterExprType = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 16, 1, 3), TmnxBsxExprSubStringType().clone('none')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxAppFilterExprType.setStatus('current')
tmnxBsxAppFilterExprOperator = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 16, 1, 4), TmnxBsxOperator().clone('none')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxAppFilterExprOperator.setStatus('current')
tmnxBsxAppFilterExprStr = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 16, 1, 5), TmnxBsxExprSubString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxAppFilterExprStr.setStatus('current')
tmnxBsxCustProtTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 17), )
if mibBuilder.loadTexts: tmnxBsxCustProtTable.setStatus('current')
tmnxBsxCustProtEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 17, 1), ).setIndexNames((0, "TIMETRA-BSX-NG-MIB", "tmnxBsxCustProtPolicyVersion"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxAaGrpPartIndex"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxCustProtEntryId"))
if mibBuilder.loadTexts: tmnxBsxCustProtEntry.setStatus('current')
tmnxBsxCustProtPolicyVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 17, 1, 1), TmnxBsxPolicyVersion())
if mibBuilder.loadTexts: tmnxBsxCustProtPolicyVersion.setStatus('current')
tmnxBsxCustProtEntryId = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 17, 1, 2), TEntryId())
if mibBuilder.loadTexts: tmnxBsxCustProtEntryId.setStatus('current')
tmnxBsxCustProtRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 17, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxCustProtRowStatus.setStatus('current')
tmnxBsxCustProtRowLastChange = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 17, 1, 4), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxCustProtRowLastChange.setStatus('current')
tmnxBsxCustProtIpProtocolNum = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 17, 1, 5), TIpProtocol().clone(-1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxCustProtIpProtocolNum.setStatus('current')
tmnxBsxCustProtDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 17, 1, 6), TItemDescription()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxCustProtDescription.setStatus('current')
tmnxBsxCustProtAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 17, 1, 7), TmnxAdminState().clone('outOfService')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxCustProtAdminState.setStatus('current')
tmnxBsxCustProtExprTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 18), )
if mibBuilder.loadTexts: tmnxBsxCustProtExprTable.setStatus('current')
tmnxBsxCustProtExprEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 18, 1), ).setIndexNames((0, "TIMETRA-BSX-NG-MIB", "tmnxBsxCustProtPolicyVersion"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxAaGrpPartIndex"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxCustProtEntryId"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxCustProtExprIndex"))
if mibBuilder.loadTexts: tmnxBsxCustProtExprEntry.setStatus('current')
tmnxBsxCustProtExprIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 18, 1, 1), TmnxBsxExprSubStringIndex())
if mibBuilder.loadTexts: tmnxBsxCustProtExprIndex.setStatus('current')
tmnxBsxCustProtExprRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 18, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxCustProtExprRowStatus.setStatus('current')
tmnxBsxCustProtExprRowLastChange = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 18, 1, 3), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxCustProtExprRowLastChange.setStatus('current')
tmnxBsxCustProtExprOffset = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 18, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 127))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxCustProtExprOffset.setStatus('current')
tmnxBsxCustProtExprDirection = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 18, 1, 5), TmnxBsxProtocolDirection().clone('none')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxCustProtExprDirection.setStatus('current')
tmnxBsxCustProtExprOperator = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 18, 1, 6), TmnxBsxOperator().clone('none')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxCustProtExprOperator.setStatus('current')
tmnxBsxCustProtExprStr = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 18, 1, 7), TmnxBsxCustProtExprSubString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxCustProtExprStr.setStatus('current')
tmnxBsxAaSubAsoValTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 19), )
if mibBuilder.loadTexts: tmnxBsxAaSubAsoValTable.setStatus('current')
tmnxBsxAaSubAsoValEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 19, 1), ).setIndexNames((0, "TIMETRA-BSX-NG-MIB", "tmnxBsxAaGrpPartIndex"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxAaSubscriberType"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxAaSubscriber"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxAsoValCharName"))
if mibBuilder.loadTexts: tmnxBsxAaSubAsoValEntry.setStatus('current')
tmnxBsxAaSubAsoValName = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 19, 1, 1), TNamedItem()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxAaSubAsoValName.setStatus('current')
tmnxBsxAaSubAsoValDerivedFrom = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 19, 1, 2), TmnxBsxAaSubAsoValDerivedFrom()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxAaSubAsoValDerivedFrom.setStatus('current')
tmnxBsxAaSubPolicerTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 20), )
if mibBuilder.loadTexts: tmnxBsxAaSubPolicerTable.setStatus('current')
tmnxBsxAaSubPolicerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 20, 1), ).setIndexNames((0, "TIMETRA-BSX-NG-MIB", "tmnxBsxAaGrpPartIndex"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxAaSubscriberType"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxAaSubscriber"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxAaSubPolicerType"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxAaSubPolicerDirection"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxAaSubPolicerIndex"))
if mibBuilder.loadTexts: tmnxBsxAaSubPolicerEntry.setStatus('current')
tmnxBsxAaSubPolicerType = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 20, 1, 1), TmnxBsxPolicerType())
if mibBuilder.loadTexts: tmnxBsxAaSubPolicerType.setStatus('current')
tmnxBsxAaSubPolicerDirection = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 20, 1, 2), TmnxBsxDirection())
if mibBuilder.loadTexts: tmnxBsxAaSubPolicerDirection.setStatus('current')
tmnxBsxAaSubPolicerIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 20, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4096)))
if mibBuilder.loadTexts: tmnxBsxAaSubPolicerIndex.setStatus('current')
tmnxBsxAaSubPolicerAqpEntryId = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 20, 1, 4), TEntryId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxAaSubPolicerAqpEntryId.setStatus('current')
tmnxBsxAaSubPolicerName = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 20, 1, 5), TNamedItem()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxAaSubPolicerName.setStatus('current')
tmnxBsxAaSubPolResExTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 21), )
if mibBuilder.loadTexts: tmnxBsxAaSubPolResExTable.setStatus('current')
tmnxBsxAaSubPolResExEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 21, 1), ).setIndexNames((0, "TIMETRA-BSX-NG-MIB", "tmnxBsxAaGrpPartIndex"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxAaSubscriberType"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxAaSubscriber"))
if mibBuilder.loadTexts: tmnxBsxAaSubPolResExEntry.setStatus('current')
tmnxBsxAaSubPolResExStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 21, 1, 1), TmnxBsxAaSubPolicerResStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxAaSubPolResExStatus.setStatus('current')
tmnxBsxPolicyScalars = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 22))
tmnxBsxPlcyCfgLastChTime = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 22, 1), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxPlcyCfgLastChTime.setStatus('current')
tmnxBsxChargeGrpLastChTime = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 22, 2), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxChargeGrpLastChTime.setStatus('current')
tmnxBsxChargeGrpCfgTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 23), )
if mibBuilder.loadTexts: tmnxBsxChargeGrpCfgTable.setStatus('current')
tmnxBsxChargeGrpCfgEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 23, 1), ).setIndexNames((0, "TIMETRA-BSX-NG-MIB", "tmnxBsxChargeGrpPolicyVersion"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxAaGrpPartIndex"), (1, "TIMETRA-BSX-NG-MIB", "tmnxBsxChargeGrpName"))
if mibBuilder.loadTexts: tmnxBsxChargeGrpCfgEntry.setStatus('current')
tmnxBsxChargeGrpPolicyVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 23, 1, 1), TmnxBsxPolicyVersion())
if mibBuilder.loadTexts: tmnxBsxChargeGrpPolicyVersion.setStatus('current')
tmnxBsxChargeGrpName = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 23, 1, 2), TNamedItem())
if mibBuilder.loadTexts: tmnxBsxChargeGrpName.setStatus('current')
tmnxBsxChargeGrpRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 23, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxChargeGrpRowStatus.setStatus('current')
tmnxBsxChargeGrpRowLastCh = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 23, 1, 4), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxChargeGrpRowLastCh.setStatus('current')
tmnxBsxChargeGrpDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 23, 1, 5), TItemDescription()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxChargeGrpDescription.setStatus('current')
tmnxBsxChargeGrpExportId = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 23, 1, 6), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 255), ))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxChargeGrpExportId.setStatus('current')
tmnxBsxPlcyCfgTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 24), )
if mibBuilder.loadTexts: tmnxBsxPlcyCfgTable.setStatus('current')
tmnxBsxPlcyCfgEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 24, 1), ).setIndexNames((0, "TIMETRA-BSX-NG-MIB", "tmnxBsxPlcyPolicyVersion"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxAaGrpPartIndex"))
if mibBuilder.loadTexts: tmnxBsxPlcyCfgEntry.setStatus('current')
tmnxBsxPlcyPolicyVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 24, 1, 1), TmnxBsxPolicyVersion())
if mibBuilder.loadTexts: tmnxBsxPlcyPolicyVersion.setStatus('current')
tmnxBsxPlcyRowLastCh = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 24, 1, 2), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxPlcyRowLastCh.setStatus('current')
tmnxBsxPlcyDefChargeGrp = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 24, 1, 3), TNamedItemOrEmpty()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxPlcyDefChargeGrp.setStatus('current')
tmnxBsxStatsAccounting = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 1))
tmnxBsxStatAaAcctLastChTime = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 1, 1), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxStatAaAcctLastChTime.setStatus('current')
tmnxBsxStatAaSubLastChTime = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 1, 2), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxStatAaSubLastChTime.setStatus('current')
tmnxBsxStatAaSubSdyLastChTime = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 1, 3), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxStatAaSubSdyLastChTime.setStatus('current')
tmnxBsxStatIsaAaCfgLastChTime = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 1, 4), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxStatIsaAaCfgLastChTime.setStatus('current')
tmnxBsxStatAaAcctCfgTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 2), )
if mibBuilder.loadTexts: tmnxBsxStatAaAcctCfgTable.setStatus('current')
tmnxBsxStatAaAcctCfgEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 2, 1), ).setIndexNames((0, "TIMETRA-BSX-NG-MIB", "tmnxBsxAaGrpPartIndex"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxStatAaAcctCfgType"))
if mibBuilder.loadTexts: tmnxBsxStatAaAcctCfgEntry.setStatus('current')
tmnxBsxStatAaAcctCfgType = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 2, 1, 1), TmnxBsxStatAaAcctCfgType())
if mibBuilder.loadTexts: tmnxBsxStatAaAcctCfgType.setStatus('current')
tmnxBsxStatAaAcctCfgCollStats = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 2, 1, 2), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tmnxBsxStatAaAcctCfgCollStats.setStatus('current')
tmnxBsxStatAaAcctCfgPolicy = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 2, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 99))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tmnxBsxStatAaAcctCfgPolicy.setStatus('current')
tmnxBsxStatAaAcctCfgAggrStats = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 2, 1, 4), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tmnxBsxStatAaAcctCfgAggrStats.setStatus('current')
tmnxBsxStatAaAcctCfgAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 2, 1, 5), TmnxAdminState().clone('inService')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tmnxBsxStatAaAcctCfgAdminState.setStatus('current')
tmnxBsxStatAaAcctCfgMaxThruStats = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 2, 1, 6), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tmnxBsxStatAaAcctCfgMaxThruStats.setStatus('current')
tmnxBsxStatAaAcctCfgRadiusPlcy = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 2, 1, 7), TNamedItemOrEmpty()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tmnxBsxStatAaAcctCfgRadiusPlcy.setStatus('current')
tmnxBsxStatAaSubTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 3), )
if mibBuilder.loadTexts: tmnxBsxStatAaSubTable.setStatus('current')
tmnxBsxStatAaSubEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 3, 1), ).setIndexNames((0, "TIMETRA-BSX-NG-MIB", "tmnxBsxAaGrpPartIndex"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxAaSubStatsInterval"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxAaSubscriberType"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxAaSubscriber"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxStatAaType"), (1, "TIMETRA-BSX-NG-MIB", "tmnxBsxStatAaName"))
if mibBuilder.loadTexts: tmnxBsxStatAaSubEntry.setStatus('current')
tmnxBsxAaSubscriberType = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 3, 1, 1), TmnxBsxAaSubscriberType())
if mibBuilder.loadTexts: tmnxBsxAaSubscriberType.setStatus('current')
tmnxBsxAaSubscriber = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 3, 1, 2), TmnxBsxAaSubscriber())
if mibBuilder.loadTexts: tmnxBsxAaSubscriber.setStatus('current')
tmnxBsxStatAaType = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 3, 1, 3), TmnxBsxAaStatType())
if mibBuilder.loadTexts: tmnxBsxStatAaType.setStatus('current')
tmnxBsxStatAaName = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 3, 1, 4), TNamedItem())
if mibBuilder.loadTexts: tmnxBsxStatAaName.setStatus('current')
tmnxBsxStatAaSubDiscontTime = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 3, 1, 5), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxStatAaSubDiscontTime.setStatus('current')
tmnxBsxStatAaSubOctsAdmFmSb = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 3, 1, 6), Counter32()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxStatAaSubOctsAdmFmSb.setStatus('current')
tmnxBsxStatAaSubPktsAdmFmSb = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 3, 1, 7), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxStatAaSubPktsAdmFmSb.setStatus('current')
tmnxBsxStatAaSubFlwsAdmFmSb = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 3, 1, 8), Counter32()).setUnits('flows').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxStatAaSubFlwsAdmFmSb.setStatus('current')
tmnxBsxStatAaSubOctsDnyFmSb = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 3, 1, 9), Counter32()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxStatAaSubOctsDnyFmSb.setStatus('current')
tmnxBsxStatAaSubPktsDnyFmSb = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 3, 1, 10), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxStatAaSubPktsDnyFmSb.setStatus('current')
tmnxBsxStatAaSubFlwsDnyFmSb = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 3, 1, 11), Counter32()).setUnits('flows').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxStatAaSubFlwsDnyFmSb.setStatus('current')
tmnxBsxStatAaSubOctsAdmToSb = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 3, 1, 12), Counter32()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxStatAaSubOctsAdmToSb.setStatus('current')
tmnxBsxStatAaSubPktsAdmToSb = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 3, 1, 13), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxStatAaSubPktsAdmToSb.setStatus('current')
tmnxBsxStatAaSubFlwsAdmToSb = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 3, 1, 14), Counter32()).setUnits('flows').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxStatAaSubFlwsAdmToSb.setStatus('current')
tmnxBsxStatAaSubOctsDnyToSb = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 3, 1, 15), Counter32()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxStatAaSubOctsDnyToSb.setStatus('current')
tmnxBsxStatAaSubPktsDnyToSb = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 3, 1, 16), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxStatAaSubPktsDnyToSb.setStatus('current')
tmnxBsxStatAaSubFlwsDnyToSb = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 3, 1, 17), Counter32()).setUnits('flows').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxStatAaSubFlwsDnyToSb.setStatus('current')
tmnxBsxStatAaSubTermFlwDur = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 3, 1, 18), Counter32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxStatAaSubTermFlwDur.setStatus('current')
tmnxBsxStatAaSubTermFlws = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 3, 1, 19), Counter32()).setUnits('flows').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxStatAaSubTermFlws.setStatus('current')
tmnxBsxStatAaSubShrtDurFlws = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 3, 1, 20), Counter32()).setUnits('flows').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxStatAaSubShrtDurFlws.setStatus('current')
tmnxBsxStatAaSubMedDurFlws = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 3, 1, 21), Counter32()).setUnits('flows').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxStatAaSubMedDurFlws.setStatus('current')
tmnxBsxStatAaSubLngDurFlws = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 3, 1, 22), Counter32()).setUnits('flows').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxStatAaSubLngDurFlws.setStatus('current')
tmnxBsxStatAaSubActFlwsFmSb = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 3, 1, 23), Gauge32()).setUnits('flows').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxStatAaSubActFlwsFmSb.setStatus('current')
tmnxBsxStatAaSubActFlwsToSb = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 3, 1, 24), Gauge32()).setUnits('flows').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxStatAaSubActFlwsToSb.setStatus('current')
tmnxBsxStatAaSubHCOctsAdmFmSb = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 3, 1, 25), Counter64()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxStatAaSubHCOctsAdmFmSb.setStatus('current')
tmnxBsxStatAaSubHCPktsAdmFmSb = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 3, 1, 26), Counter64()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxStatAaSubHCPktsAdmFmSb.setStatus('current')
tmnxBsxStatAaSubHCFlwsAdmFmSb = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 3, 1, 27), Counter64()).setUnits('flows').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxStatAaSubHCFlwsAdmFmSb.setStatus('current')
tmnxBsxStatAaSubHCOctsDnyFmSb = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 3, 1, 28), Counter64()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxStatAaSubHCOctsDnyFmSb.setStatus('current')
tmnxBsxStatAaSubHCPktsDnyFmSb = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 3, 1, 29), Counter64()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxStatAaSubHCPktsDnyFmSb.setStatus('current')
tmnxBsxStatAaSubHCFlwsDnyFmSb = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 3, 1, 30), Counter64()).setUnits('flows').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxStatAaSubHCFlwsDnyFmSb.setStatus('current')
tmnxBsxStatAaSubHCOctsAdmToSb = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 3, 1, 31), Counter64()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxStatAaSubHCOctsAdmToSb.setStatus('current')
tmnxBsxStatAaSubHCPktsAdmToSb = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 3, 1, 32), Counter64()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxStatAaSubHCPktsAdmToSb.setStatus('current')
tmnxBsxStatAaSubHCFlwsAdmToSb = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 3, 1, 33), Counter64()).setUnits('flows').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxStatAaSubHCFlwsAdmToSb.setStatus('current')
tmnxBsxStatAaSubHCOctsDnyToSb = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 3, 1, 34), Counter64()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxStatAaSubHCOctsDnyToSb.setStatus('current')
tmnxBsxStatAaSubHCPktsDnyToSb = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 3, 1, 35), Counter64()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxStatAaSubHCPktsDnyToSb.setStatus('current')
tmnxBsxStatAaSubHCFlwsDnyToSb = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 3, 1, 36), Counter64()).setUnits('flows').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxStatAaSubHCFlwsDnyToSb.setStatus('current')
tmnxBsxStatAaSubHCTermFlwDur = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 3, 1, 37), Counter64()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxStatAaSubHCTermFlwDur.setStatus('current')
tmnxBsxStatAaSubHCTermFlws = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 3, 1, 38), Counter64()).setUnits('flows').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxStatAaSubHCTermFlws.setStatus('current')
tmnxBsxStatAaSubHCShrtDurFlws = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 3, 1, 39), Counter64()).setUnits('flows').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxStatAaSubHCShrtDurFlws.setStatus('current')
tmnxBsxStatAaSubHCMedDurFlws = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 3, 1, 40), Counter64()).setUnits('flows').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxStatAaSubHCMedDurFlws.setStatus('current')
tmnxBsxStatAaSubHCLngDurFlws = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 3, 1, 41), Counter64()).setUnits('flows').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxStatAaSubHCLngDurFlws.setStatus('current')
tmnxBsxStatAaSubSdyTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 4), )
if mibBuilder.loadTexts: tmnxBsxStatAaSubSdyTable.setStatus('current')
tmnxBsxStatAaSubSdyEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 4, 1), ).setIndexNames((0, "TIMETRA-BSX-NG-MIB", "tmnxBsxAaGrpPartIndex"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxAaSubStatsInterval"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxStatAaType"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxAaSubscriberType"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxAaSubscriber"), (1, "TIMETRA-BSX-NG-MIB", "tmnxBsxStatAaName"))
if mibBuilder.loadTexts: tmnxBsxStatAaSubSdyEntry.setStatus('current')
tmnxBsxStatAaSubSdyDiscontTime = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 4, 1, 1), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxStatAaSubSdyDiscontTime.setStatus('current')
tmnxBsxStatAaSubSdyOctsAdmFmSb = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 4, 1, 2), Counter32()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxStatAaSubSdyOctsAdmFmSb.setStatus('current')
tmnxBsxStatAaSubSdyPktsAdmFmSb = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 4, 1, 3), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxStatAaSubSdyPktsAdmFmSb.setStatus('current')
tmnxBsxStatAaSubSdyFlwsAdmFmSb = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 4, 1, 4), Counter32()).setUnits('flows').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxStatAaSubSdyFlwsAdmFmSb.setStatus('current')
tmnxBsxStatAaSubSdyOctsDnyFmSb = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 4, 1, 5), Counter32()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxStatAaSubSdyOctsDnyFmSb.setStatus('current')
tmnxBsxStatAaSubSdyPktsDnyFmSb = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 4, 1, 6), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxStatAaSubSdyPktsDnyFmSb.setStatus('current')
tmnxBsxStatAaSubSdyFlwsDnyFmSb = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 4, 1, 7), Counter32()).setUnits('flows').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxStatAaSubSdyFlwsDnyFmSb.setStatus('current')
tmnxBsxStatAaSubSdyOctsAdmToSb = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 4, 1, 8), Counter32()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxStatAaSubSdyOctsAdmToSb.setStatus('current')
tmnxBsxStatAaSubSdyPktsAdmToSb = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 4, 1, 9), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxStatAaSubSdyPktsAdmToSb.setStatus('current')
tmnxBsxStatAaSubSdyFlwsAdmToSb = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 4, 1, 10), Counter32()).setUnits('flows').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxStatAaSubSdyFlwsAdmToSb.setStatus('current')
tmnxBsxStatAaSubSdyOctsDnyToSb = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 4, 1, 11), Counter32()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxStatAaSubSdyOctsDnyToSb.setStatus('current')
tmnxBsxStatAaSubSdyPktsDnyToSb = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 4, 1, 12), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxStatAaSubSdyPktsDnyToSb.setStatus('current')
tmnxBsxStatAaSubSdyFlwsDnyToSb = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 4, 1, 13), Counter32()).setUnits('flows').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxStatAaSubSdyFlwsDnyToSb.setStatus('current')
tmnxBsxStatAaSubSdyTermFlwDur = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 4, 1, 14), Counter32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxStatAaSubSdyTermFlwDur.setStatus('current')
tmnxBsxStatAaSubSdyTermFlws = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 4, 1, 15), Counter32()).setUnits('flows').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxStatAaSubSdyTermFlws.setStatus('current')
tmnxBsxStatAaSubSdyShrtDurFlws = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 4, 1, 16), Counter32()).setUnits('flows').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxStatAaSubSdyShrtDurFlws.setStatus('current')
tmnxBsxStatAaSubSdyMedDurFlws = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 4, 1, 17), Counter32()).setUnits('flows').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxStatAaSubSdyMedDurFlws.setStatus('current')
tmnxBsxStatAaSubSdyLngDurFlws = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 4, 1, 18), Counter32()).setUnits('flows').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxStatAaSubSdyLngDurFlws.setStatus('current')
tmnxBsxStatAaSubSdyActFlwsFmSb = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 4, 1, 19), Gauge32()).setUnits('flows').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxStatAaSubSdyActFlwsFmSb.setStatus('current')
tmnxBsxStatAaSubSdyActFlwsToSb = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 4, 1, 20), Gauge32()).setUnits('flows').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxStatAaSubSdyActFlwsToSb.setStatus('current')
tmnxBsxStatAaSubSdyHCOctsAdmFmSb = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 4, 1, 21), Counter64()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxStatAaSubSdyHCOctsAdmFmSb.setStatus('current')
tmnxBsxStatAaSubSdyHCPktsAdmFmSb = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 4, 1, 22), Counter64()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxStatAaSubSdyHCPktsAdmFmSb.setStatus('current')
tmnxBsxStatAaSubSdyHCFlwsAdmFmSb = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 4, 1, 23), Counter64()).setUnits('flows').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxStatAaSubSdyHCFlwsAdmFmSb.setStatus('current')
tmnxBsxStatAaSubSdyHCOctsDnyFmSb = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 4, 1, 24), Counter64()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxStatAaSubSdyHCOctsDnyFmSb.setStatus('current')
tmnxBsxStatAaSubSdyHCPktsDnyFmSb = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 4, 1, 25), Counter64()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxStatAaSubSdyHCPktsDnyFmSb.setStatus('current')
tmnxBsxStatAaSubSdyHCFlwsDnyFmSb = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 4, 1, 26), Counter64()).setUnits('flows').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxStatAaSubSdyHCFlwsDnyFmSb.setStatus('current')
tmnxBsxStatAaSubSdyHCOctsAdmToSb = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 4, 1, 27), Counter64()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxStatAaSubSdyHCOctsAdmToSb.setStatus('current')
tmnxBsxStatAaSubSdyHCPktsAdmToSb = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 4, 1, 28), Counter64()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxStatAaSubSdyHCPktsAdmToSb.setStatus('current')
tmnxBsxStatAaSubSdyHCFlwsAdmToSb = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 4, 1, 29), Counter64()).setUnits('flows').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxStatAaSubSdyHCFlwsAdmToSb.setStatus('current')
tmnxBsxStatAaSubSdyHCOctsDnyToSb = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 4, 1, 30), Counter64()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxStatAaSubSdyHCOctsDnyToSb.setStatus('current')
tmnxBsxStatAaSubSdyHCPktsDnyToSb = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 4, 1, 31), Counter64()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxStatAaSubSdyHCPktsDnyToSb.setStatus('current')
tmnxBsxStatAaSubSdyHCFlwsDnyToSb = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 4, 1, 32), Counter64()).setUnits('flows').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxStatAaSubSdyHCFlwsDnyToSb.setStatus('current')
tmnxBsxStatAaSubSdyHCTermFlwDur = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 4, 1, 33), Counter64()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxStatAaSubSdyHCTermFlwDur.setStatus('current')
tmnxBsxStatAaSubSdyHCTermFlws = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 4, 1, 34), Counter64()).setUnits('flows').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxStatAaSubSdyHCTermFlws.setStatus('current')
tmnxBsxStatAaSubSdyHCShrtDurFlws = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 4, 1, 35), Counter64()).setUnits('flows').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxStatAaSubSdyHCShrtDurFlws.setStatus('current')
tmnxBsxStatAaSubSdyHCMedDurFlws = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 4, 1, 36), Counter64()).setUnits('flows').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxStatAaSubSdyHCMedDurFlws.setStatus('current')
tmnxBsxStatAaSubSdyHCLngDurFlws = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 4, 1, 37), Counter64()).setUnits('flows').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxStatAaSubSdyHCLngDurFlws.setStatus('current')
tmnxBsxStatAaSubCfgTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 5), )
if mibBuilder.loadTexts: tmnxBsxStatAaSubCfgTable.setStatus('current')
tmnxBsxStatAaSubCfgEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 5, 1), ).setIndexNames((0, "TIMETRA-BSX-NG-MIB", "tmnxBsxAaGrpPartIndex"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxStatAaType"), (1, "TIMETRA-BSX-NG-MIB", "tmnxBsxStatAaName"))
if mibBuilder.loadTexts: tmnxBsxStatAaSubCfgEntry.setStatus('current')
tmnxBsxStatAaSubCfgRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 5, 1, 1), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxStatAaSubCfgRowStatus.setStatus('current')
tmnxBsxStatAaSubCfgExportMethod = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 5, 1, 2), TmnxBsxAaStatExportMethod()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxStatAaSubCfgExportMethod.setStatus('current')
tmnxBsxStatAaSubSdyCfgTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 6), )
if mibBuilder.loadTexts: tmnxBsxStatAaSubSdyCfgTable.setStatus('current')
tmnxBsxStatAaSubSdyCfgEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 6, 1), ).setIndexNames((0, "TIMETRA-BSX-NG-MIB", "tmnxBsxAaGrpPartIndex"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxStatAaType"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxAaSubscriberType"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxAaSubscriber"))
if mibBuilder.loadTexts: tmnxBsxStatAaSubSdyCfgEntry.setStatus('current')
tmnxBsxStatAaSubSdyRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 6, 1, 1), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxStatAaSubSdyRowStatus.setStatus('current')
tmnxBsxStatAaTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 7), )
if mibBuilder.loadTexts: tmnxBsxStatAaTable.setStatus('current')
tmnxBsxStatAaEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 7, 1), ).setIndexNames((0, "TIMETRA-BSX-NG-MIB", "tmnxBsxAaGrpPartIndex"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxStatAaType"), (1, "TIMETRA-BSX-NG-MIB", "tmnxBsxStatAaName"))
if mibBuilder.loadTexts: tmnxBsxStatAaEntry.setStatus('current')
tmnxBsxStatAaDiscontTime = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 7, 1, 1), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxStatAaDiscontTime.setStatus('current')
tmnxBsxStatAaOctsAdmFmSb = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 7, 1, 2), Counter32()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxStatAaOctsAdmFmSb.setStatus('current')
tmnxBsxStatAaPktsAdmFmSb = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 7, 1, 3), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxStatAaPktsAdmFmSb.setStatus('current')
tmnxBsxStatAaFlwsAdmFmSb = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 7, 1, 4), Counter32()).setUnits('flows').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxStatAaFlwsAdmFmSb.setStatus('current')
tmnxBsxStatAaOctsDnyFmSb = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 7, 1, 5), Counter32()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxStatAaOctsDnyFmSb.setStatus('current')
tmnxBsxStatAaPktsDnyFmSb = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 7, 1, 6), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxStatAaPktsDnyFmSb.setStatus('current')
tmnxBsxStatAaFlwsDnyFmSb = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 7, 1, 7), Counter32()).setUnits('flows').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxStatAaFlwsDnyFmSb.setStatus('current')
tmnxBsxStatAaOctsAdmToSb = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 7, 1, 8), Counter32()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxStatAaOctsAdmToSb.setStatus('current')
tmnxBsxStatAaPktsAdmToSb = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 7, 1, 9), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxStatAaPktsAdmToSb.setStatus('current')
tmnxBsxStatAaFlwsAdmToSb = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 7, 1, 10), Counter32()).setUnits('flows').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxStatAaFlwsAdmToSb.setStatus('current')
tmnxBsxStatAaOctsDnyToSb = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 7, 1, 11), Counter32()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxStatAaOctsDnyToSb.setStatus('current')
tmnxBsxStatAaPktsDnyToSb = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 7, 1, 12), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxStatAaPktsDnyToSb.setStatus('current')
tmnxBsxStatAaFlwsDnyToSb = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 7, 1, 13), Counter32()).setUnits('flows').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxStatAaFlwsDnyToSb.setStatus('current')
tmnxBsxStatAaTermFlwDur = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 7, 1, 14), Counter32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxStatAaTermFlwDur.setStatus('current')
tmnxBsxStatAaTermFlws = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 7, 1, 15), Counter32()).setUnits('flows').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxStatAaTermFlws.setStatus('current')
tmnxBsxStatAaShrtDurFlws = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 7, 1, 16), Counter32()).setUnits('flows').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxStatAaShrtDurFlws.setStatus('current')
tmnxBsxStatAaMedDurFlws = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 7, 1, 17), Counter32()).setUnits('flows').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxStatAaMedDurFlws.setStatus('current')
tmnxBsxStatAaLngDurFlws = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 7, 1, 18), Counter32()).setUnits('flows').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxStatAaLngDurFlws.setStatus('current')
tmnxBsxStatAaActFlwsFmSb = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 7, 1, 19), Gauge32()).setUnits('flows').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxStatAaActFlwsFmSb.setStatus('current')
tmnxBsxStatAaActFlwsToSb = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 7, 1, 20), Gauge32()).setUnits('flows').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxStatAaActFlwsToSb.setStatus('current')
tmnxBsxStatAaNumSubscribers = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 7, 1, 21), Gauge32()).setUnits('subscribers').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxStatAaNumSubscribers.setStatus('current')
tmnxBsxStatAaHCOctsAdmFmSb = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 7, 1, 22), Counter64()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxStatAaHCOctsAdmFmSb.setStatus('current')
tmnxBsxStatAaHCPktsAdmFmSb = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 7, 1, 23), Counter64()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxStatAaHCPktsAdmFmSb.setStatus('current')
tmnxBsxStatAaHCFlwsAdmFmSb = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 7, 1, 24), Counter64()).setUnits('flows').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxStatAaHCFlwsAdmFmSb.setStatus('current')
tmnxBsxStatAaHCOctsDnyFmSb = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 7, 1, 25), Counter64()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxStatAaHCOctsDnyFmSb.setStatus('current')
tmnxBsxStatAaHCPktsDnyFmSb = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 7, 1, 26), Counter64()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxStatAaHCPktsDnyFmSb.setStatus('current')
tmnxBsxStatAaHCFlwsDnyFmSb = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 7, 1, 27), Counter64()).setUnits('flows').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxStatAaHCFlwsDnyFmSb.setStatus('current')
tmnxBsxStatAaHCOctsAdmToSb = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 7, 1, 28), Counter64()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxStatAaHCOctsAdmToSb.setStatus('current')
tmnxBsxStatAaHCPktsAdmToSb = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 7, 1, 29), Counter64()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxStatAaHCPktsAdmToSb.setStatus('current')
tmnxBsxStatAaHCFlwsAdmToSb = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 7, 1, 30), Counter64()).setUnits('flows').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxStatAaHCFlwsAdmToSb.setStatus('current')
tmnxBsxStatAaHCOctsDnyToSb = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 7, 1, 31), Counter64()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxStatAaHCOctsDnyToSb.setStatus('current')
tmnxBsxStatAaHCPktsDnyToSb = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 7, 1, 32), Counter64()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxStatAaHCPktsDnyToSb.setStatus('current')
tmnxBsxStatAaHCFlwsDnyToSb = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 7, 1, 33), Counter64()).setUnits('flows').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxStatAaHCFlwsDnyToSb.setStatus('current')
tmnxBsxStatAaHCTermFlwDur = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 7, 1, 34), Counter64()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxStatAaHCTermFlwDur.setStatus('current')
tmnxBsxStatAaHCTermFlws = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 7, 1, 35), Counter64()).setUnits('flows').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxStatAaHCTermFlws.setStatus('current')
tmnxBsxStatAaHCShrtDurFlws = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 7, 1, 36), Counter64()).setUnits('flows').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxStatAaHCShrtDurFlws.setStatus('current')
tmnxBsxStatAaHCMedDurFlws = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 7, 1, 37), Counter64()).setUnits('flows').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxStatAaHCMedDurFlws.setStatus('current')
tmnxBsxStatAaHCLngDurFlws = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 7, 1, 38), Counter64()).setUnits('flows').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxStatAaHCLngDurFlws.setStatus('current')
tmnxBsxStatAaAppFilterTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 8), )
if mibBuilder.loadTexts: tmnxBsxStatAaAppFilterTable.setStatus('current')
tmnxBsxStatAaAppFilterEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 8, 1), ).setIndexNames((0, "TIMETRA-BSX-NG-MIB", "tmnxBsxAaGrpPartIndex"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxAppFilterEntryId"))
if mibBuilder.loadTexts: tmnxBsxStatAaAppFilterEntry.setStatus('current')
tmnxBsxStatAaAppFilterHCFlows = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 8, 1, 1), Counter64()).setUnits('flows').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxStatAaAppFilterHCFlows.setStatus('current')
tmnxBsxStatAaAppFilterFlowsLo = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 8, 1, 2), Counter32()).setUnits('flows').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxStatAaAppFilterFlowsLo.setStatus('current')
tmnxBsxStatAaAppFilterFlowsHi = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 8, 1, 3), Counter32()).setUnits('flows').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxStatAaAppFilterFlowsHi.setStatus('current')
tmnxBsxStatAaAppFilterFlowHCOctC = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 8, 1, 4), Counter64()).setUnits('octets').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxStatAaAppFilterFlowHCOctC.setStatus('current')
tmnxBsxStatAaAppFilterFlowOctCLo = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 8, 1, 5), Counter32()).setUnits('octets').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxStatAaAppFilterFlowOctCLo.setStatus('current')
tmnxBsxStatAaAppFilterFlowOctCHi = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 8, 1, 6), Counter32()).setUnits('octets').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxStatAaAppFilterFlowOctCHi.setStatus('current')
tmnxBsxStatIsaAaCfgTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 9), )
if mibBuilder.loadTexts: tmnxBsxStatIsaAaCfgTable.setStatus('current')
tmnxBsxStatIsaAaCfgEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 9, 1), ).setIndexNames((0, "TIMETRA-BSX-NG-MIB", "tmnxBsxIsaAaGroupIndex"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxStatIsaAaCfgType"))
if mibBuilder.loadTexts: tmnxBsxStatIsaAaCfgEntry.setStatus('current')
tmnxBsxStatIsaAaCfgType = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 9, 1, 1), TmnxBsxStatIsaAaCfgType())
if mibBuilder.loadTexts: tmnxBsxStatIsaAaCfgType.setStatus('current')
tmnxBsxStatIsaAaCfgCollStats = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 9, 1, 2), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tmnxBsxStatIsaAaCfgCollStats.setStatus('current')
tmnxBsxStatIsaAaCfgPolicy = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 9, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 99))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tmnxBsxStatIsaAaCfgPolicy.setStatus('current')
tmnxBsxNotifyIsaAaGroupIndex = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 4, 1), TmnxBsxIsaAaGroupIndex()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: tmnxBsxNotifyIsaAaGroupIndex.setStatus('current')
tmnxBsxNotifyActiveMda = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 4, 2), TmnxHwIndexOrZero()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: tmnxBsxNotifyActiveMda.setStatus('current')
tmnxBsxNotifyActionStatus = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 4, 3), TmnxBsxActionStatus()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: tmnxBsxNotifyActionStatus.setStatus('current')
tmnxBsxNotifyAaSubscriberType = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 4, 4), TmnxBsxAaSubscriberType()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: tmnxBsxNotifyAaSubscriberType.setStatus('current')
tmnxBsxNotifyAaSubscriberName = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 4, 5), TmnxBsxAaSubscriber()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: tmnxBsxNotifyAaSubscriberName.setStatus('current')
tmnxBsxNotifyAaSubAcctLossReason = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 4, 6), TmnxBsxAaSubAcctLossReason()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: tmnxBsxNotifyAaSubAcctLossReason.setStatus('current')
tmnxBsxNotifyAaGrpPartIndex = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 4, 7), TmnxBsxAaGrpPartIndex()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: tmnxBsxNotifyAaGrpPartIndex.setStatus('current')
tmnxBsxNotifyTransitIpPolicyId = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 4, 8), TmnxBsxTransitIpPolicyId()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: tmnxBsxNotifyTransitIpPolicyId.setStatus('current')
tmnxBsxNotifyRadiusCoAAuditState = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 4, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("start", 1), ("end", 2)))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: tmnxBsxNotifyRadiusCoAAuditState.setStatus('current')
tmnxBsxNotifyReason = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 4, 10), DisplayString()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: tmnxBsxNotifyReason.setStatus('current')
tmnxBsxIsaAaGrpNonRedundantClear = NotificationType((1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 63, 0, 1)).setObjects(("TIMETRA-BSX-NG-MIB", "tmnxBsxNotifyIsaAaGroupIndex"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxNotifyActiveMda"))
if mibBuilder.loadTexts: tmnxBsxIsaAaGrpNonRedundantClear.setStatus('current')
tmnxBsxIsaAaGrpSwitchover = NotificationType((1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 63, 0, 2)).setObjects(("TIMETRA-BSX-NG-MIB", "tmnxBsxNotifyIsaAaGroupIndex"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxNotifyActiveMda"))
if mibBuilder.loadTexts: tmnxBsxIsaAaGrpSwitchover.setStatus('current')
tmnxBsxIsaAaGrpFlowFull = NotificationType((1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 63, 0, 3)).setObjects(("TIMETRA-BSX-NG-MIB", "tmnxBsxNotifyIsaAaGroupIndex"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxNotifyActiveMda"))
if mibBuilder.loadTexts: tmnxBsxIsaAaGrpFlowFull.setStatus('current')
tmnxBsxIsaAaGrpFlowFullClear = NotificationType((1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 63, 0, 4)).setObjects(("TIMETRA-BSX-NG-MIB", "tmnxBsxNotifyIsaAaGroupIndex"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxNotifyActiveMda"))
if mibBuilder.loadTexts: tmnxBsxIsaAaGrpFlowFullClear.setStatus('current')
tmnxBsxIsaAaGrpFailureV2 = NotificationType((1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 63, 0, 5)).setObjects(("TIMETRA-BSX-NG-MIB", "tmnxBsxNotifyIsaAaGroupIndex"))
if mibBuilder.loadTexts: tmnxBsxIsaAaGrpFailureV2.setStatus('current')
tmnxBsxIsaAaGrpFailureClearV2 = NotificationType((1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 63, 0, 6)).setObjects(("TIMETRA-BSX-NG-MIB", "tmnxBsxNotifyIsaAaGroupIndex"))
if mibBuilder.loadTexts: tmnxBsxIsaAaGrpFailureClearV2.setStatus('current')
tmnxBsxIsaAaGrpNonRedundantV2 = NotificationType((1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 63, 0, 7)).setObjects(("TIMETRA-BSX-NG-MIB", "tmnxBsxNotifyIsaAaGroupIndex"))
if mibBuilder.loadTexts: tmnxBsxIsaAaGrpNonRedundantV2.setStatus('current')
tmnxBsxIsaAaSubLoadBalance = NotificationType((1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 63, 0, 8)).setObjects(("TIMETRA-BSX-NG-MIB", "tmnxBsxNotifyIsaAaGroupIndex"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxNotifyActionStatus"))
if mibBuilder.loadTexts: tmnxBsxIsaAaSubLoadBalance.setStatus('current')
tmnxBsxIsaAaGrpCapCostThres = NotificationType((1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 63, 0, 9)).setObjects(("TIMETRA-BSX-NG-MIB", "tmnxBsxNotifyActiveMda"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxIsaAaGrpCapCostHighThres"))
if mibBuilder.loadTexts: tmnxBsxIsaAaGrpCapCostThres.setStatus('current')
tmnxBsxIsaAaGrpCapCostThresClear = NotificationType((1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 63, 0, 10)).setObjects(("TIMETRA-BSX-NG-MIB", "tmnxBsxNotifyActiveMda"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxIsaAaGrpCapCostLowThres"))
if mibBuilder.loadTexts: tmnxBsxIsaAaGrpCapCostThresClear.setStatus('current')
tmnxBsxAaSubscribersUnassigned = NotificationType((1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 63, 0, 11)).setObjects(("TIMETRA-BSX-NG-MIB", "tmnxBsxNotifyIsaAaGroupIndex"))
if mibBuilder.loadTexts: tmnxBsxAaSubscribersUnassigned.setStatus('current')
tmnxBsxAaSubscriberAcctDataLoss = NotificationType((1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 63, 0, 12)).setObjects(("TIMETRA-LOG-MIB", "tmnxLogFileIdLogId"), ("TIMETRA-LOG-MIB", "tmnxLogNotifyApInterval"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxNotifyAaSubscriberType"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxNotifyAaSubscriberName"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxNotifyAaSubAcctLossReason"))
if mibBuilder.loadTexts: tmnxBsxAaSubscriberAcctDataLoss.setStatus('current')
tmnxBsxAaSubPolResExceeded = NotificationType((1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 63, 0, 13)).setObjects(("TIMETRA-BSX-NG-MIB", "tmnxBsxNotifyAaGrpPartIndex"))
if mibBuilder.loadTexts: tmnxBsxAaSubPolResExceeded.setStatus('current')
tmnxBsxAaSubPolResExceededClear = NotificationType((1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 63, 0, 14)).setObjects(("TIMETRA-BSX-NG-MIB", "tmnxBsxNotifyAaGrpPartIndex"))
if mibBuilder.loadTexts: tmnxBsxAaSubPolResExceededClear.setStatus('current')
tmnxBsxIsaAaGrpFlowSetup = NotificationType((1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 63, 0, 15)).setObjects(("TIMETRA-BSX-NG-MIB", "tmnxBsxNotifyIsaAaGroupIndex"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxNotifyActiveMda"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxFlowSetupHighWatermark"))
if mibBuilder.loadTexts: tmnxBsxIsaAaGrpFlowSetup.setStatus('current')
tmnxBsxIsaAaGrpFlowSetupClear = NotificationType((1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 63, 0, 16)).setObjects(("TIMETRA-BSX-NG-MIB", "tmnxBsxNotifyIsaAaGroupIndex"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxNotifyActiveMda"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxFlowSetupLowWatermark"))
if mibBuilder.loadTexts: tmnxBsxIsaAaGrpFlowSetupClear.setStatus('current')
tmnxBsxIsaAaGrpPacketRate = NotificationType((1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 63, 0, 17)).setObjects(("TIMETRA-BSX-NG-MIB", "tmnxBsxNotifyIsaAaGroupIndex"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxNotifyActiveMda"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxPacketRateHighWatermark"))
if mibBuilder.loadTexts: tmnxBsxIsaAaGrpPacketRate.setStatus('current')
tmnxBsxIsaAaGrpPacketRateClear = NotificationType((1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 63, 0, 18)).setObjects(("TIMETRA-BSX-NG-MIB", "tmnxBsxNotifyIsaAaGroupIndex"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxNotifyActiveMda"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxPacketRateLowWatermark"))
if mibBuilder.loadTexts: tmnxBsxIsaAaGrpPacketRateClear.setStatus('current')
tmnxBsxIsaAaGrpBitRate = NotificationType((1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 63, 0, 19)).setObjects(("TIMETRA-BSX-NG-MIB", "tmnxBsxNotifyIsaAaGroupIndex"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxNotifyActiveMda"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxBitRateHighWatermark"))
if mibBuilder.loadTexts: tmnxBsxIsaAaGrpBitRate.setStatus('current')
tmnxBsxIsaAaGrpBitRateClear = NotificationType((1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 63, 0, 20)).setObjects(("TIMETRA-BSX-NG-MIB", "tmnxBsxNotifyIsaAaGroupIndex"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxNotifyActiveMda"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxBitRateLowWatermark"))
if mibBuilder.loadTexts: tmnxBsxIsaAaGrpBitRateClear.setStatus('current')
tmnxBsxTransIpPolAaSubCreated = NotificationType((1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 63, 0, 21)).setObjects(("TIMETRA-BSX-NG-MIB", "tmnxBsxNotifyAaGrpPartIndex"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxNotifyTransitIpPolicyId"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxNotifyAaSubscriberName"))
if mibBuilder.loadTexts: tmnxBsxTransIpPolAaSubCreated.setStatus('current')
tmnxBsxTransIpPolAaSubDeleted = NotificationType((1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 63, 0, 22)).setObjects(("TIMETRA-BSX-NG-MIB", "tmnxBsxNotifyAaGrpPartIndex"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxNotifyTransitIpPolicyId"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxNotifyAaSubscriberName"))
if mibBuilder.loadTexts: tmnxBsxTransIpPolAaSubDeleted.setStatus('current')
tmnxBsxTransIpPolRadCoAAudit = NotificationType((1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 63, 0, 23)).setObjects(("TIMETRA-BSX-NG-MIB", "tmnxBsxNotifyAaGrpPartIndex"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxNotifyTransitIpPolicyId"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxNotifyRadiusCoAAuditState"))
if mibBuilder.loadTexts: tmnxBsxTransIpPolRadCoAAudit.setStatus('current')
tmnxBsxTransIpPolRadCoAError = NotificationType((1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 63, 0, 24)).setObjects(("TIMETRA-BSX-NG-MIB", "tmnxBsxNotifyAaGrpPartIndex"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxNotifyTransitIpPolicyId"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxNotifyReason"))
if mibBuilder.loadTexts: tmnxBsxTransIpPolRadCoAError.setStatus('current')
tmnxBsxTransIpPolRadDiscError = NotificationType((1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 63, 0, 25)).setObjects(("TIMETRA-BSX-NG-MIB", "tmnxBsxNotifyAaGrpPartIndex"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxNotifyTransitIpPolicyId"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxNotifyReason"))
if mibBuilder.loadTexts: tmnxBsxTransIpPolRadDiscError.setStatus('current')
tmnxBsxTransIpPolDhcpAddWarning = NotificationType((1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 63, 0, 26)).setObjects(("TIMETRA-BSX-NG-MIB", "tmnxBsxNotifyAaGrpPartIndex"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxNotifyTransitIpPolicyId"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxNotifyReason"))
if mibBuilder.loadTexts: tmnxBsxTransIpPolDhcpAddWarning.setStatus('current')
tmnxBsxTransIpPolDhcpDelWarning = NotificationType((1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 63, 0, 27)).setObjects(("TIMETRA-BSX-NG-MIB", "tmnxBsxNotifyAaGrpPartIndex"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxNotifyTransitIpPolicyId"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxNotifyReason"))
if mibBuilder.loadTexts: tmnxBsxTransIpPolDhcpDelWarning.setStatus('current')
tmnxBsxIsaAaGrpFmSbWaSBufOvld = NotificationType((1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 63, 0, 28)).setObjects(("TIMETRA-BSX-NG-MIB", "tmnxBsxIsaAaGrpFromSubWaSBfHiWmk"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxNotifyActiveMda"))
if mibBuilder.loadTexts: tmnxBsxIsaAaGrpFmSbWaSBufOvld.setStatus('current')
tmnxBsxIsaAaGrpFmSbWaSBufOvldClr = NotificationType((1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 63, 0, 29)).setObjects(("TIMETRA-BSX-NG-MIB", "tmnxBsxIsaAaGrpFromSubWaSBfLoWmk"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxNotifyActiveMda"))
if mibBuilder.loadTexts: tmnxBsxIsaAaGrpFmSbWaSBufOvldClr.setStatus('current')
tmnxBsxIsaAaGrpToSbWaSBufOvld = NotificationType((1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 63, 0, 30)).setObjects(("TIMETRA-BSX-NG-MIB", "tmnxBsxIsaAaGrpToSubWaSBfHiWmk"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxNotifyActiveMda"))
if mibBuilder.loadTexts: tmnxBsxIsaAaGrpToSbWaSBufOvld.setStatus('current')
tmnxBsxIsaAaGrpToSbWaSBufOvldClr = NotificationType((1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 63, 0, 31)).setObjects(("TIMETRA-BSX-NG-MIB", "tmnxBsxIsaAaGrpToSubWaSBfLoWmk"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxNotifyActiveMda"))
if mibBuilder.loadTexts: tmnxBsxIsaAaGrpToSbWaSBufOvldClr.setStatus('current')
tmnxBsxIsaAaGrpOvrldCutthru = NotificationType((1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 63, 0, 32)).setObjects(("TIMETRA-BSX-NG-MIB", "tmnxBsxNotifyIsaAaGroupIndex"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxNotifyActiveMda"))
if mibBuilder.loadTexts: tmnxBsxIsaAaGrpOvrldCutthru.setStatus('current')
tmnxBsxIsaAaGrpOvrldCutthruClr = NotificationType((1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 63, 0, 33)).setObjects(("TIMETRA-BSX-NG-MIB", "tmnxBsxNotifyIsaAaGroupIndex"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxNotifyActiveMda"))
if mibBuilder.loadTexts: tmnxBsxIsaAaGrpOvrldCutthruClr.setStatus('current')
tmnxBsxTransitIpPersistenceWarn = NotificationType((1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 63, 0, 34)).setObjects(("TIMETRA-BSX-NG-MIB", "tmnxBsxNotifyAaGrpPartIndex"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxNotifyTransitIpPolicyId"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxNotifyReason"))
if mibBuilder.loadTexts: tmnxBsxTransitIpPersistenceWarn.setStatus('current')
tmnxBsxAarpInstOperStateChanged = NotificationType((1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 63, 0, 35)).setObjects(("TIMETRA-BSX-NG-MIB", "tmnxBsxAarpInstOperState"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAarpInstOperFlags"))
if mibBuilder.loadTexts: tmnxBsxAarpInstOperStateChanged.setStatus('current')
tmnxBsxAarpInstStateChanged = NotificationType((1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 63, 0, 36)).setObjects(("TIMETRA-BSX-NG-MIB", "tmnxBsxAarpInstState"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAarpInstOperFlags"))
if mibBuilder.loadTexts: tmnxBsxAarpInstStateChanged.setStatus('current')
tmnxBsxRadApFailure = NotificationType((1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 63, 0, 37)).setObjects(("TIMETRA-BSX-NG-MIB", "tmnxBsxRadApDescription"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxNotifyReason"))
if mibBuilder.loadTexts: tmnxBsxRadApFailure.setStatus('current')
tmnxBsxRadApServOperStateChange = NotificationType((1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 63, 0, 38)).setObjects(("TIMETRA-BSX-NG-MIB", "tmnxBsxRadApServAddrType"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxRadApServAddr"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxRadApServOperState"))
if mibBuilder.loadTexts: tmnxBsxRadApServOperStateChange.setStatus('current')
tmnxBsxCflowdScalars = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 5, 1))
tmnxBsxCflowdLastChangeTime = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 5, 1, 1), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxCflowdLastChangeTime.setStatus('current')
tmnxBsxCflowdCollLastChangeTime = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 5, 1, 2), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxCflowdCollLastChangeTime.setStatus('current')
tmnxBsxCflowdPerfLastChangeTime = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 5, 1, 3), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxCflowdPerfLastChangeTime.setStatus('current')
tmnxBsxCflowdExpLastChangeTime = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 5, 1, 4), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxCflowdExpLastChangeTime.setStatus('current')
tmnxBsxCflowdPerfExpLastChTime = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 5, 1, 5), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxCflowdPerfExpLastChTime.setStatus('current')
tmnxBsxCflowdTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 5, 2), )
if mibBuilder.loadTexts: tmnxBsxCflowdTable.setStatus('current')
tmnxBsxCflowdEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 5, 2, 1), ).setIndexNames((0, "TIMETRA-BSX-NG-MIB", "tmnxBsxIsaAaGroupIndex"))
if mibBuilder.loadTexts: tmnxBsxCflowdEntry.setStatus('current')
tmnxBsxCflowdRowLastChange = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 5, 2, 1, 1), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxCflowdRowLastChange.setStatus('current')
tmnxBsxCflowdAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 5, 2, 1, 2), TmnxAdminState().clone('outOfService')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tmnxBsxCflowdAdminState.setStatus('current')
tmnxBsxCflowdVolRate = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 5, 2, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 10000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tmnxBsxCflowdVolRate.setStatus('current')
tmnxBsxCflowdTemplateRetransmit = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 5, 2, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(10, 600)).clone(600)).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: tmnxBsxCflowdTemplateRetransmit.setStatus('current')
tmnxBsxCflowdCollTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 5, 3), )
if mibBuilder.loadTexts: tmnxBsxCflowdCollTable.setStatus('current')
tmnxBsxCflowdCollEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 5, 3, 1), ).setIndexNames((0, "TIMETRA-BSX-NG-MIB", "tmnxBsxIsaAaGroupIndex"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxCflowdCollAddressType"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxCflowdCollAddress"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxCflowdCollPort"))
if mibBuilder.loadTexts: tmnxBsxCflowdCollEntry.setStatus('current')
tmnxBsxCflowdCollAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 5, 3, 1, 1), InetAddressType())
if mibBuilder.loadTexts: tmnxBsxCflowdCollAddressType.setStatus('current')
tmnxBsxCflowdCollAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 5, 3, 1, 2), InetAddress().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(4, 4), ValueSizeConstraint(16, 16), )))
if mibBuilder.loadTexts: tmnxBsxCflowdCollAddress.setStatus('current')
tmnxBsxCflowdCollPort = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 5, 3, 1, 3), TTcpUdpPort().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)))
if mibBuilder.loadTexts: tmnxBsxCflowdCollPort.setStatus('current')
tmnxBsxCflowdCollRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 5, 3, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxCflowdCollRowStatus.setStatus('current')
tmnxBsxCflowdCollRowLastChange = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 5, 3, 1, 5), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxCflowdCollRowLastChange.setStatus('current')
tmnxBsxCflowdCollDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 5, 3, 1, 6), TItemDescription()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxCflowdCollDescription.setStatus('current')
tmnxBsxCflowdCollAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 5, 3, 1, 7), TmnxAdminState().clone('outOfService')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxCflowdCollAdminState.setStatus('current')
tmnxBsxCflowdCollOperState = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 5, 3, 1, 8), TmnxOperState().clone('outOfService')).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxCflowdCollOperState.setStatus('current')
tmnxBsxCflowdCollVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 5, 3, 1, 9), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(10, 10)).clone(10)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxCflowdCollVersion.setStatus('current')
tmnxBsxCflowdPerfTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 5, 4), )
if mibBuilder.loadTexts: tmnxBsxCflowdPerfTable.setStatus('current')
tmnxBsxCflowdPerfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 5, 4, 1), ).setIndexNames((0, "TIMETRA-BSX-NG-MIB", "tmnxBsxIsaAaGroupIndex"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxCflowdPerfMeasType"))
if mibBuilder.loadTexts: tmnxBsxCflowdPerfEntry.setStatus('current')
tmnxBsxCflowdPerfMeasType = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 5, 4, 1, 1), TmnxBsxCflowdPerfMeasType())
if mibBuilder.loadTexts: tmnxBsxCflowdPerfMeasType.setStatus('current')
tmnxBsxCflowdPerfRowLastChange = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 5, 4, 1, 2), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxCflowdPerfRowLastChange.setStatus('current')
tmnxBsxCflowdPerfFlowRate = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 5, 4, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 1000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tmnxBsxCflowdPerfFlowRate.setStatus('current')
tmnxBsxCflowdPerfFlowRate2 = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 5, 4, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 1000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tmnxBsxCflowdPerfFlowRate2.setStatus('current')
tmnxBsxCflowdExpTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 5, 5), )
if mibBuilder.loadTexts: tmnxBsxCflowdExpTable.setStatus('current')
tmnxBsxCflowdExpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 5, 5, 1), ).setIndexNames((0, "TIMETRA-BSX-NG-MIB", "tmnxBsxAaGrpPartIndex"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxCflowdExpType"))
if mibBuilder.loadTexts: tmnxBsxCflowdExpEntry.setStatus('current')
tmnxBsxCflowdExpType = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 5, 5, 1, 1), TmnxBsxCflowdExpType())
if mibBuilder.loadTexts: tmnxBsxCflowdExpType.setStatus('current')
tmnxBsxCflowdExpRowLastChange = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 5, 5, 1, 2), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxCflowdExpRowLastChange.setStatus('current')
tmnxBsxCflowdExpAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 5, 5, 1, 3), TmnxAdminState().clone('outOfService')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tmnxBsxCflowdExpAdminState.setStatus('current')
tmnxBsxCflowdPerfExpTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 5, 6), )
if mibBuilder.loadTexts: tmnxBsxCflowdPerfExpTable.setStatus('current')
tmnxBsxCflowdPerfExpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 5, 6, 1), ).setIndexNames((0, "TIMETRA-BSX-NG-MIB", "tmnxBsxAaGrpPartIndex"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxStatAaType"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxStatAaName"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxCflowdPerfMeasType"))
if mibBuilder.loadTexts: tmnxBsxCflowdPerfExpEntry.setStatus('current')
tmnxBsxCflowdPerfExpRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 5, 6, 1, 1), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxCflowdPerfExpRowStatus.setStatus('current')
tmnxBsxCflowdPerfExpRowLastChnge = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 5, 6, 1, 2), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxCflowdPerfExpRowLastChnge.setStatus('current')
tmnxBsxCflowdPerfExpRateNum = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 5, 6, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 2)).clone(1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxCflowdPerfExpRateNum.setStatus('current')
tmnxBsxCflowdStatusTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 5, 7), )
if mibBuilder.loadTexts: tmnxBsxCflowdStatusTable.setStatus('current')
tmnxBsxCflowdStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 5, 7, 1), ).setIndexNames((0, "TIMETRA-BSX-NG-MIB", "tmnxBsxIsaAaGroupIndex"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxCflowdExpType"), (0, "TIMETRA-CHASSIS-MIB", "tmnxChassisIndex"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxCardSlotNum"), (0, "TIMETRA-CHASSIS-MIB", "tmnxMDASlotNum"))
if mibBuilder.loadTexts: tmnxBsxCflowdStatusEntry.setStatus('current')
tmnxBsxCflowdStatusDiscontTime = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 5, 7, 1, 1), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxCflowdStatusDiscontTime.setStatus('current')
tmnxBsxCflowdStatusActFlowsCurr = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 5, 7, 1, 2), Gauge32()).setUnits('flows').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxCflowdStatusActFlowsCurr.setStatus('current')
tmnxBsxCflowdStatusRecRateCurr = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 5, 7, 1, 3), Gauge32()).setUnits('records per second').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxCflowdStatusRecRateCurr.setStatus('current')
tmnxBsxCflowdStatusPktRateCurr = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 5, 7, 1, 4), Gauge32()).setUnits('packets per second').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxCflowdStatusPktRateCurr.setStatus('current')
tmnxBsxCflowdStatusRecReported = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 5, 7, 1, 5), Counter32()).setUnits('records').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxCflowdStatusRecReported.setStatus('current')
tmnxBsxCflowdStatusHCRecReported = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 5, 7, 1, 6), Counter64()).setUnits('records').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxCflowdStatusHCRecReported.setStatus('current')
tmnxBsxCflowdStatusRecDropped = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 5, 7, 1, 7), Counter32()).setUnits('records').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxCflowdStatusRecDropped.setStatus('current')
tmnxBsxCflowdStatusHCRecDropped = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 5, 7, 1, 8), Counter64()).setUnits('records').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxCflowdStatusHCRecDropped.setStatus('current')
tmnxBsxCflowdStatusPktsSent = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 5, 7, 1, 9), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxCflowdStatusPktsSent.setStatus('current')
tmnxBsxCflowdStatusHCPktsSent = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 5, 7, 1, 10), Counter64()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxCflowdStatusHCPktsSent.setStatus('current')
tmnxBsxCflowdStatusFlowsNoRes = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 5, 7, 1, 11), Counter32()).setUnits('flows').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxCflowdStatusFlowsNoRes.setStatus('current')
tmnxBsxCflowdStatusHCFlowsNoRes = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 5, 7, 1, 12), Counter64()).setUnits('flows').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxCflowdStatusHCFlowsNoRes.setStatus('current')
tmnxBsxCflowdStatusHCUSupSSRCSt = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 5, 7, 1, 13), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxCflowdStatusHCUSupSSRCSt.setStatus('current')
tmnxBsxCflowdStatusUSupSSRCStLo = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 5, 7, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxCflowdStatusUSupSSRCStLo.setStatus('current')
tmnxBsxCflowdStatusUSupSSRCStHi = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 5, 7, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxCflowdStatusUSupSSRCStHi.setStatus('current')
tmnxBsxCflowdCollStatTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 5, 8), )
if mibBuilder.loadTexts: tmnxBsxCflowdCollStatTable.setStatus('current')
tmnxBsxCflowdCollStatEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 5, 8, 1), ).setIndexNames((0, "TIMETRA-BSX-NG-MIB", "tmnxBsxIsaAaGroupIndex"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxCflowdCollAddressType"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxCflowdCollAddress"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxCflowdCollPort"))
if mibBuilder.loadTexts: tmnxBsxCflowdCollStatEntry.setStatus('current')
tmnxBsxCflowdCollStatDiscontTime = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 5, 8, 1, 1), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxCflowdCollStatDiscontTime.setStatus('current')
tmnxBsxCflowdCollStatRecSent = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 5, 8, 1, 2), Counter32()).setUnits('records').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxCflowdCollStatRecSent.setStatus('current')
tmnxBsxCflowdCollStatHCRecSent = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 5, 8, 1, 3), Counter64()).setUnits('records').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxCflowdCollStatHCRecSent.setStatus('current')
tmnxBsxCflowdExpStatTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 5, 9), )
if mibBuilder.loadTexts: tmnxBsxCflowdExpStatTable.setStatus('current')
tmnxBsxCflowdExpStatEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 5, 9, 1), ).setIndexNames((0, "TIMETRA-BSX-NG-MIB", "tmnxBsxAaGrpPartIndex"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxCflowdExpType"))
if mibBuilder.loadTexts: tmnxBsxCflowdExpStatEntry.setStatus('current')
tmnxBsxCflowdExpStatDiscontTime = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 5, 9, 1, 1), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxCflowdExpStatDiscontTime.setStatus('current')
tmnxBsxCflowdExpStatRecReport = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 5, 9, 1, 2), Counter32()).setUnits('records').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxCflowdExpStatRecReport.setStatus('current')
tmnxBsxCflowdExpStatHCRecReport = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 5, 9, 1, 3), Counter64()).setUnits('records').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxCflowdExpStatHCRecReport.setStatus('current')
tmnxBsxCflowdExpStatRecDropped = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 5, 9, 1, 4), Counter32()).setUnits('records').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxCflowdExpStatRecDropped.setStatus('current')
tmnxBsxCflowdExpStatHCRecDropped = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 5, 9, 1, 5), Counter64()).setUnits('records').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxCflowdExpStatHCRecDropped.setStatus('current')
tmnxBsxCflowdExpStatFlowsNoRes = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 5, 9, 1, 6), Counter32()).setUnits('flows').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxCflowdExpStatFlowsNoRes.setStatus('current')
tmnxBsxCflowdExpStatHCFlowsNoRes = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 5, 9, 1, 7), Counter64()).setUnits('flows').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxCflowdExpStatHCFlowsNoRes.setStatus('current')
tmnxBsxCflowdExpStatHCUSupSSRCSt = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 5, 9, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxCflowdExpStatHCUSupSSRCSt.setStatus('current')
tmnxBsxCflowdExpStatUSupSSRCStLo = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 5, 9, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxCflowdExpStatUSupSSRCStLo.setStatus('current')
tmnxBsxCflowdExpStatUSupSSRCStHi = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 5, 9, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxCflowdExpStatUSupSSRCStHi.setStatus('current')
tmnxBsxOvrdScalars = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 6, 1))
tmnxBsxOvrdAaSubLastChTime = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 6, 1, 1), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxOvrdAaSubLastChTime.setStatus('current')
tmnxBsxOvrdAaSubCharLastChTm = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 6, 1, 2), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxOvrdAaSubCharLastChTm.setStatus('current')
tmnxBsxOvrdAaSubTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 6, 2), )
if mibBuilder.loadTexts: tmnxBsxOvrdAaSubTable.setStatus('current')
tmnxBsxOvrdAaSubEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 6, 2, 1), ).setIndexNames((0, "TIMETRA-BSX-NG-MIB", "tmnxBsxAaGrpPartIndex"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxAaSubscriberType"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxAaSubscriber"))
if mibBuilder.loadTexts: tmnxBsxOvrdAaSubEntry.setStatus('current')
tmnxBsxOvrdAaSubRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 6, 2, 1, 1), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxOvrdAaSubRowStatus.setStatus('current')
tmnxBsxOvrdAaSubRowLastCh = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 6, 2, 1, 2), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxOvrdAaSubRowLastCh.setStatus('current')
tmnxBsxOvrdAaSubCharTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 6, 3), )
if mibBuilder.loadTexts: tmnxBsxOvrdAaSubCharTable.setStatus('current')
tmnxBsxOvrdAaSubCharEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 6, 3, 1), ).setIndexNames((0, "TIMETRA-BSX-NG-MIB", "tmnxBsxAaGrpPartIndex"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxAaSubscriberType"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxAaSubscriber"), (1, "TIMETRA-BSX-NG-MIB", "tmnxBsxAsoCharName"))
if mibBuilder.loadTexts: tmnxBsxOvrdAaSubCharEntry.setStatus('current')
tmnxBsxOvrdAaSubCharRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 6, 3, 1, 1), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxOvrdAaSubCharRowStatus.setStatus('current')
tmnxBsxOvrdAaSubCharRowLastCh = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 6, 3, 1, 2), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxOvrdAaSubCharRowLastCh.setStatus('current')
tmnxBsxOvrdAaSubCharValName = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 6, 3, 1, 3), TNamedItem()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxOvrdAaSubCharValName.setStatus('current')
tmnxBsxTransitScalars = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 7, 1))
tmnxBsxTransitIpPolicyLastChTime = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 7, 1, 1), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxTransitIpPolicyLastChTime.setStatus('current')
tmnxBsxTransIpPlcySubLastChTime = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 7, 1, 2), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxTransIpPlcySubLastChTime.setStatus('current')
tmnxBsxTransIpPlcyAddrLastChTime = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 7, 1, 3), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxTransIpPlcyAddrLastChTime.setStatus('current')
tmnxBsxTransPrefPlcyLastChTime = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 7, 1, 4), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxTransPrefPlcyLastChTime.setStatus('current')
tmnxBsxTransPrefSubLastChTime = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 7, 1, 5), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxTransPrefSubLastChTime.setStatus('current')
tmnxBsxTransPrefEntryLastChTime = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 7, 1, 6), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxTransPrefEntryLastChTime.setStatus('current')
tmnxBsxTransitIpPolicyTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 7, 2), )
if mibBuilder.loadTexts: tmnxBsxTransitIpPolicyTable.setStatus('current')
tmnxBsxTransitIpPolicyEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 7, 2, 1), ).setIndexNames((0, "TIMETRA-BSX-NG-MIB", "tmnxBsxAaGrpPartIndex"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxTransitIpPolicyId"))
if mibBuilder.loadTexts: tmnxBsxTransitIpPolicyEntry.setStatus('current')
tmnxBsxTransitIpPolicyId = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 7, 2, 1, 1), TmnxBsxTransitIpPolicyId())
if mibBuilder.loadTexts: tmnxBsxTransitIpPolicyId.setStatus('current')
tmnxBsxTransitIpPolicyRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 7, 2, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxTransitIpPolicyRowStatus.setStatus('current')
tmnxBsxTransitIpPolicyRowLastCh = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 7, 2, 1, 3), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxTransitIpPolicyRowLastCh.setStatus('current')
tmnxBsxTransitIpPolicyDesc = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 7, 2, 1, 4), TItemDescription()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxTransitIpPolicyDesc.setStatus('current')
tmnxBsxTransitIpPolicyDefAppProf = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 7, 2, 1, 5), TNamedItemOrEmpty()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxTransitIpPolicyDefAppProf.setStatus('current')
tmnxBsxTransitIpPolicySubIdPlcy = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 7, 2, 1, 6), TNamedItemOrEmpty()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxTransitIpPolicySubIdPlcy.setStatus('current')
tmnxBsxTransitIpPolicyRadius = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 7, 2, 1, 7), TmnxEnabledDisabled().clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxTransitIpPolicyRadius.setStatus('current')
tmnxBsxTransitIpPolicyRadAuthPlc = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 7, 2, 1, 8), TNamedItemOrEmpty()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxTransitIpPolicyRadAuthPlc.setStatus('current')
tmnxBsxTransitIpPolicyDhcp = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 7, 2, 1, 9), TmnxEnabledDisabled().clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxTransitIpPolicyDhcp.setStatus('current')
tmnxBsxTransitIpPolicyIPv6PfxLen = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 7, 2, 1, 10), InetAddressPrefixLength()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxTransitIpPolicyIPv6PfxLen.setStatus('current')
tmnxBsxTransitIpPolicySubsCount = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 7, 2, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxTransitIpPolicySubsCount.setStatus('current')
tmnxBsxTransitIpPolicyIPv4EntCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 7, 2, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxTransitIpPolicyIPv4EntCnt.setStatus('current')
tmnxBsxTransitIpPolicyIPv6EntCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 7, 2, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxTransitIpPolicyIPv6EntCnt.setStatus('current')
tmnxBsxTransitIpPolicySeenIp = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 7, 2, 1, 14), TmnxEnabledDisabled().clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxTransitIpPolicySeenIp.setStatus('current')
tmnxBsxTransitIpPolicyAutoCreate = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 7, 2, 1, 15), TmnxEnabledDisabled().clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxTransitIpPolicyAutoCreate.setStatus('current')
tmnxBsxTransitIpPolicySeenIpRad = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 7, 2, 1, 16), TNamedItemOrEmpty()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxTransitIpPolicySeenIpRad.setStatus('current')
tmnxBsxTransitIpPolicySubTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 7, 3), )
if mibBuilder.loadTexts: tmnxBsxTransitIpPolicySubTable.setStatus('current')
tmnxBsxTransitIpPolicySubEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 7, 3, 1), ).setIndexNames((0, "TIMETRA-BSX-NG-MIB", "tmnxBsxAaGrpPartIndex"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxTransitIpPolicyId"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxTransitIpPolicySubscriber"))
if mibBuilder.loadTexts: tmnxBsxTransitIpPolicySubEntry.setStatus('current')
tmnxBsxTransitIpPolicySubscriber = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 7, 3, 1, 1), TNamedItem())
if mibBuilder.loadTexts: tmnxBsxTransitIpPolicySubscriber.setStatus('current')
tmnxBsxTransIpPlcySubRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 7, 3, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxTransIpPlcySubRowStatus.setStatus('current')
tmnxBsxTransIpPlcySubRowLastCh = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 7, 3, 1, 3), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxTransIpPlcySubRowLastCh.setStatus('current')
tmnxBsxTransIpPlcySubAppProfNm = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 7, 3, 1, 4), TNamedItem()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxTransIpPlcySubAppProfNm.setStatus('current')
tmnxBsxTransIpPlcySubRefCount = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 7, 3, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxTransIpPlcySubRefCount.setStatus('current')
tmnxBsxTransitIpPolicyAddrTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 7, 4), )
if mibBuilder.loadTexts: tmnxBsxTransitIpPolicyAddrTable.setStatus('current')
tmnxBsxTransitIpPolicyAddrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 7, 4, 1), ).setIndexNames((0, "TIMETRA-BSX-NG-MIB", "tmnxBsxAaGrpPartIndex"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxTransitIpPolicyId"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxTransitIpPolicyAddrType"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxTransitIpPolicyAddr"))
if mibBuilder.loadTexts: tmnxBsxTransitIpPolicyAddrEntry.setStatus('current')
tmnxBsxTransitIpPolicyAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 7, 4, 1, 1), InetAddressType())
if mibBuilder.loadTexts: tmnxBsxTransitIpPolicyAddrType.setStatus('current')
tmnxBsxTransitIpPolicyAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 7, 4, 1, 2), InetAddress().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(4, 4), ValueSizeConstraint(16, 16), )))
if mibBuilder.loadTexts: tmnxBsxTransitIpPolicyAddr.setStatus('current')
tmnxBsxTransIpPlcyAddrRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 7, 4, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxTransIpPlcyAddrRowStatus.setStatus('current')
tmnxBsxTransIpPlcyAddrRowLastCh = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 7, 4, 1, 4), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxTransIpPlcyAddrRowLastCh.setStatus('current')
tmnxBsxTransIpPlcyAddrSubscriber = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 7, 4, 1, 5), TNamedItem()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxTransIpPlcyAddrSubscriber.setStatus('current')
tmnxBsxTransitIpSumTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 7, 5), )
if mibBuilder.loadTexts: tmnxBsxTransitIpSumTable.setStatus('current')
tmnxBsxTransitIpSumEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 7, 5, 1), ).setIndexNames((0, "TIMETRA-BSX-NG-MIB", "tmnxBsxAaGrpPartIndex"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxTransitIpPolicyId"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxTransitIpPolicySubscriber"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxTransitIpPolicyAddrType"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxTransitIpPolicyAddr"))
if mibBuilder.loadTexts: tmnxBsxTransitIpSumEntry.setStatus('current')
tmnxBsxTransitIpSumUpdateTime = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 7, 5, 1, 1), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxTransitIpSumUpdateTime.setStatus('current')
tmnxBsxTransitIpSumParentSubType = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 7, 5, 1, 2), TmnxBsxAaSubscriberType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxTransitIpSumParentSubType.setStatus('current')
tmnxBsxTransitIpSumParentSub = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 7, 5, 1, 3), TmnxBsxAaSubscriber()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxTransitIpSumParentSub.setStatus('current')
tmnxBsxTransitIpSumAppProfNm = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 7, 5, 1, 4), TNamedItem()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxTransitIpSumAppProfNm.setStatus('current')
tmnxBsxTransitIpSumIpOriginMask = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 7, 5, 1, 5), TmnxBsxTransitSubOrigin()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxTransitIpSumIpOriginMask.setStatus('current')
tmnxBsxTransPrefPolicyTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 7, 6), )
if mibBuilder.loadTexts: tmnxBsxTransPrefPolicyTable.setStatus('current')
tmnxBsxTransPrefPolicyEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 7, 6, 1), ).setIndexNames((0, "TIMETRA-BSX-NG-MIB", "tmnxBsxAaGrpPartIndex"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxTransPrefPolicyId"))
if mibBuilder.loadTexts: tmnxBsxTransPrefPolicyEntry.setStatus('current')
tmnxBsxTransPrefPolicyId = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 7, 6, 1, 1), TmnxBsxTransPrefPolicyId())
if mibBuilder.loadTexts: tmnxBsxTransPrefPolicyId.setStatus('current')
tmnxBsxTransPrefPolicyRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 7, 6, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxTransPrefPolicyRowStatus.setStatus('current')
tmnxBsxTransPrefPolicyRowLastCh = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 7, 6, 1, 3), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxTransPrefPolicyRowLastCh.setStatus('current')
tmnxBsxTransPrefPolicyDesc = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 7, 6, 1, 4), TItemDescription()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxTransPrefPolicyDesc.setStatus('current')
tmnxBsxTransPrefPolicySubsCount = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 7, 6, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxTransPrefPolicySubsCount.setStatus('current')
tmnxBsxTransPrefPolicyEntCount = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 7, 6, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxTransPrefPolicyEntCount.setStatus('current')
tmnxBsxTransPrefPolicyIPv4EntCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 7, 6, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxTransPrefPolicyIPv4EntCnt.setStatus('current')
tmnxBsxTransPrefPolicyIPv6EntCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 7, 6, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxTransPrefPolicyIPv6EntCnt.setStatus('current')
tmnxBsxTransPrefSubTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 7, 7), )
if mibBuilder.loadTexts: tmnxBsxTransPrefSubTable.setStatus('current')
tmnxBsxTransPrefSubEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 7, 7, 1), ).setIndexNames((0, "TIMETRA-BSX-NG-MIB", "tmnxBsxAaGrpPartIndex"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxTransPrefPolicyId"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxTransPrefSubscriber"))
if mibBuilder.loadTexts: tmnxBsxTransPrefSubEntry.setStatus('current')
tmnxBsxTransPrefSubscriber = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 7, 7, 1, 1), TNamedItem())
if mibBuilder.loadTexts: tmnxBsxTransPrefSubscriber.setStatus('current')
tmnxBsxTransPrefSubRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 7, 7, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxTransPrefSubRowStatus.setStatus('current')
tmnxBsxTransPrefSubRowLastCh = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 7, 7, 1, 3), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxTransPrefSubRowLastCh.setStatus('current')
tmnxBsxTransPrefSubIsRemote = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 7, 7, 1, 4), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxTransPrefSubIsRemote.setStatus('current')
tmnxBsxTransPrefSubAppProfNm = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 7, 7, 1, 5), TNamedItem()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxTransPrefSubAppProfNm.setStatus('current')
tmnxBsxTransPrefSubRefCount = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 7, 7, 1, 6), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxTransPrefSubRefCount.setStatus('current')
tmnxBsxTransPrefTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 7, 8), )
if mibBuilder.loadTexts: tmnxBsxTransPrefTable.setStatus('current')
tmnxBsxTransPrefEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 7, 8, 1), ).setIndexNames((0, "TIMETRA-BSX-NG-MIB", "tmnxBsxAaGrpPartIndex"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxTransPrefPolicyId"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxTransPrefEntryId"))
if mibBuilder.loadTexts: tmnxBsxTransPrefEntry.setStatus('current')
tmnxBsxTransPrefEntryId = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 7, 8, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295)))
if mibBuilder.loadTexts: tmnxBsxTransPrefEntryId.setStatus('current')
tmnxBsxTransPrefEntryRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 7, 8, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxTransPrefEntryRowStatus.setStatus('current')
tmnxBsxTransPrefEntryRowLastCh = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 7, 8, 1, 3), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxTransPrefEntryRowLastCh.setStatus('current')
tmnxBsxTransPrefEntrySubAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 7, 8, 1, 4), InetAddressType().clone('unknown')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxTransPrefEntrySubAddrType.setStatus('current')
tmnxBsxTransPrefEntrySubAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 7, 8, 1, 5), InetAddress().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(4, 4), ValueSizeConstraint(16, 16), )).clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxTransPrefEntrySubAddr.setStatus('current')
tmnxBsxTransPrefEntrySubAddrLen = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 7, 8, 1, 6), InetAddressPrefixLength()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxTransPrefEntrySubAddrLen.setStatus('current')
tmnxBsxTransPrefEntryNetAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 7, 8, 1, 7), InetAddressType().clone('unknown')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxTransPrefEntryNetAddrType.setStatus('current')
tmnxBsxTransPrefEntryNetAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 7, 8, 1, 8), InetAddress().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(4, 4), ValueSizeConstraint(16, 16), )).clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxTransPrefEntryNetAddr.setStatus('current')
tmnxBsxTransPrefEntryNetAddrLen = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 7, 8, 1, 9), InetAddressPrefixLength()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxTransPrefEntryNetAddrLen.setStatus('current')
tmnxBsxTransPrefEntrySubscriber = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 7, 8, 1, 10), TNamedItemOrEmpty()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxTransPrefEntrySubscriber.setStatus('current')
tmnxBsxTransPrefSumTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 7, 9), )
if mibBuilder.loadTexts: tmnxBsxTransPrefSumTable.setStatus('current')
tmnxBsxTransPrefSumEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 7, 9, 1), ).setIndexNames((0, "TIMETRA-BSX-NG-MIB", "tmnxBsxAaGrpPartIndex"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxTransPrefPolicyId"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxTransPrefSubscriber"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxTransPrefEntryId"))
if mibBuilder.loadTexts: tmnxBsxTransPrefSumEntry.setStatus('current')
tmnxBsxTransPrefSumUpdateTime = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 7, 9, 1, 1), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxTransPrefSumUpdateTime.setStatus('current')
tmnxBsxTransPrefSumSubAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 7, 9, 1, 2), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxTransPrefSumSubAddrType.setStatus('current')
tmnxBsxTransPrefSumSubAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 7, 9, 1, 3), InetAddress().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(4, 4), ValueSizeConstraint(16, 16), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxTransPrefSumSubAddr.setStatus('current')
tmnxBsxTransPrefSumSubAddrLen = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 7, 9, 1, 4), InetAddressPrefixLength()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxTransPrefSumSubAddrLen.setStatus('current')
tmnxBsxTransPrefSumNetAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 7, 9, 1, 5), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxTransPrefSumNetAddrType.setStatus('current')
tmnxBsxTransPrefSumNetAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 7, 9, 1, 6), InetAddress().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(4, 4), ValueSizeConstraint(16, 16), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxTransPrefSumNetAddr.setStatus('current')
tmnxBsxTransPrefSumNetAddrLen = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 7, 9, 1, 7), InetAddressPrefixLength()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxTransPrefSumNetAddrLen.setStatus('current')
tmnxBsxTransPrefSumParentSubType = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 7, 9, 1, 8), TmnxBsxAaSubscriberType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxTransPrefSumParentSubType.setStatus('current')
tmnxBsxTransPrefSumParentSub = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 7, 9, 1, 9), TmnxBsxAaSubscriber()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxTransPrefSumParentSub.setStatus('current')
tmnxBsxTransPrefSumAppProfNm = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 7, 9, 1, 10), TNamedItem()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxTransPrefSumAppProfNm.setStatus('current')
tmnxBsxHttpRedirScalars = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 8, 1))
tmnxBsxHttpRedirErrLastChTime = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 8, 1, 1), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxHttpRedirErrLastChTime.setStatus('current')
tmnxBsxHttpRedirErrCodeLastCh = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 8, 1, 2), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxHttpRedirErrCodeLastCh.setStatus('current')
tmnxBsxHttpRedirLastCh = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 8, 1, 3), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxHttpRedirLastCh.setStatus('current')
tmnxBsxHttpRedirErrTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 8, 2), )
if mibBuilder.loadTexts: tmnxBsxHttpRedirErrTable.setStatus('current')
tmnxBsxHttpRedirErrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 8, 2, 1), ).setIndexNames((0, "TIMETRA-BSX-NG-MIB", "tmnxBsxIsaAaGroupIndex"), (1, "TIMETRA-BSX-NG-MIB", "tmnxBsxHttpRedirErrName"))
if mibBuilder.loadTexts: tmnxBsxHttpRedirErrEntry.setStatus('current')
tmnxBsxHttpRedirErrName = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 8, 2, 1, 1), TNamedItem())
if mibBuilder.loadTexts: tmnxBsxHttpRedirErrName.setStatus('current')
tmnxBsxHttpRedirErrRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 8, 2, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxHttpRedirErrRowStatus.setStatus('current')
tmnxBsxHttpRedirErrRowLastCh = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 8, 2, 1, 3), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxHttpRedirErrRowLastCh.setStatus('current')
tmnxBsxHttpRedirErrEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 8, 2, 1, 4), TmnxEnabledDisabled().clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxHttpRedirErrEnabled.setStatus('current')
tmnxBsxHttpRedirErrDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 8, 2, 1, 5), TItemDescription()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxHttpRedirErrDescription.setStatus('current')
tmnxBsxHttpRedirErrTemplateId = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 8, 2, 1, 6), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxHttpRedirErrTemplateId.setStatus('current')
tmnxBsxHttpRedirErrHttpHost = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 8, 2, 1, 7), SnmpAdminString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxHttpRedirErrHttpHost.setStatus('current')
tmnxBsxHttpRedirErrParticipantId = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 8, 2, 1, 8), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxHttpRedirErrParticipantId.setStatus('current')
tmnxBsxHttpRedirErrCodeTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 8, 3), )
if mibBuilder.loadTexts: tmnxBsxHttpRedirErrCodeTable.setStatus('current')
tmnxBsxHttpRedirErrCodeEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 8, 3, 1), ).setIndexNames((0, "TIMETRA-BSX-NG-MIB", "tmnxBsxIsaAaGroupIndex"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxHttpRedirErrName"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxHttpRedirErrCode"))
if mibBuilder.loadTexts: tmnxBsxHttpRedirErrCodeEntry.setStatus('current')
tmnxBsxHttpRedirErrCode = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 8, 3, 1, 1), Unsigned32())
if mibBuilder.loadTexts: tmnxBsxHttpRedirErrCode.setStatus('current')
tmnxBsxHttpRedirErrCodeRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 8, 3, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxHttpRedirErrCodeRowStatus.setStatus('current')
tmnxBsxHttpRedirErrCodeRowLastCh = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 8, 3, 1, 3), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxHttpRedirErrCodeRowLastCh.setStatus('current')
tmnxBsxHttpRedirErrorCodeMsgSize = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 8, 3, 1, 4), Unsigned32().clone(1024)).setUnits('octets').setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxHttpRedirErrorCodeMsgSize.setStatus('current')
tmnxBsxHttpRdStatTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 8, 4), )
if mibBuilder.loadTexts: tmnxBsxHttpRdStatTable.setStatus('current')
tmnxBsxHttpRdStatEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 8, 4, 1), ).setIndexNames((0, "TIMETRA-BSX-NG-MIB", "tmnxBsxAaGrpPartIndex"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxHttpRedirErrName"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxHttpRedirErrCode"), (0, "TIMETRA-CHASSIS-MIB", "tmnxChassisIndex"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxCardSlotNum"), (0, "TIMETRA-CHASSIS-MIB", "tmnxMDASlotNum"))
if mibBuilder.loadTexts: tmnxBsxHttpRdStatEntry.setStatus('current')
tmnxBsxHttpRdStatDiscontTime = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 8, 4, 1, 1), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxHttpRdStatDiscontTime.setStatus('current')
tmnxBsxHttpRdStatHCRedir = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 8, 4, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxHttpRdStatHCRedir.setStatus('current')
tmnxBsxHttpRdStatRedirLo = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 8, 4, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxHttpRdStatRedirLo.setStatus('current')
tmnxBsxHttpRdStatRedirHi = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 8, 4, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxHttpRdStatRedirHi.setStatus('current')
tmnxBsxHttpRdStatHCSizeExceeded = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 8, 4, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxHttpRdStatHCSizeExceeded.setStatus('current')
tmnxBsxHttpRdStatSizeExceededLo = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 8, 4, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxHttpRdStatSizeExceededLo.setStatus('current')
tmnxBsxHttpRdStatSizeExceededHi = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 8, 4, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxHttpRdStatSizeExceededHi.setStatus('current')
tmnxBsxHttpRdStatHCOutOfResource = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 8, 4, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxHttpRdStatHCOutOfResource.setStatus('current')
tmnxBsxHttpRdStatOutOfResourceLo = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 8, 4, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxHttpRdStatOutOfResourceLo.setStatus('current')
tmnxBsxHttpRdStatOutOfResourceHi = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 8, 4, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxHttpRdStatOutOfResourceHi.setStatus('current')
tmnxBsxHttpRdStatHCNotRedirFType = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 8, 4, 1, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxHttpRdStatHCNotRedirFType.setStatus('current')
tmnxBsxHttpRdStatNotRedirFTypeLo = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 8, 4, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxHttpRdStatNotRedirFTypeLo.setStatus('current')
tmnxBsxHttpRdStatNotRedirFTypeHi = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 8, 4, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxHttpRdStatNotRedirFTypeHi.setStatus('current')
tmnxBsxHttpRdStatHCNotRedir = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 8, 4, 1, 14), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxHttpRdStatHCNotRedir.setStatus('current')
tmnxBsxHttpRdStatNotRedirLo = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 8, 4, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxHttpRdStatNotRedirLo.setStatus('current')
tmnxBsxHttpRdStatNotRedirHi = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 8, 4, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxHttpRdStatNotRedirHi.setStatus('current')
tmnxBsxHttpRedirTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 8, 5), )
if mibBuilder.loadTexts: tmnxBsxHttpRedirTable.setStatus('current')
tmnxBsxHttpRedirEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 8, 5, 1), ).setIndexNames((0, "TIMETRA-BSX-NG-MIB", "tmnxBsxIsaAaGroupIndex"), (1, "TIMETRA-BSX-NG-MIB", "tmnxBsxHttpRedirName"))
if mibBuilder.loadTexts: tmnxBsxHttpRedirEntry.setStatus('current')
tmnxBsxHttpRedirName = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 8, 5, 1, 1), TNamedItem())
if mibBuilder.loadTexts: tmnxBsxHttpRedirName.setStatus('current')
tmnxBsxHttpRedirRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 8, 5, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxHttpRedirRowStatus.setStatus('current')
tmnxBsxHttpRedirRowLastCh = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 8, 5, 1, 3), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxHttpRedirRowLastCh.setStatus('current')
tmnxBsxHttpRedirEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 8, 5, 1, 4), TmnxEnabledDisabled().clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxHttpRedirEnabled.setStatus('current')
tmnxBsxHttpRedirDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 8, 5, 1, 5), TItemDescription()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxHttpRedirDescription.setStatus('current')
tmnxBsxHttpRedirTemplateId = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 8, 5, 1, 6), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxHttpRedirTemplateId.setStatus('current')
tmnxBsxHttpRedirHttpHost = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 8, 5, 1, 7), SnmpAdminString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxHttpRedirHttpHost.setStatus('current')
tmnxBsxHttpPcyRdStatTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 8, 6), )
if mibBuilder.loadTexts: tmnxBsxHttpPcyRdStatTable.setStatus('current')
tmnxBsxHttpPcyRdStatEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 8, 6, 1), ).setIndexNames((0, "TIMETRA-BSX-NG-MIB", "tmnxBsxAaGrpPartIndex"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxHttpRedirName"), (0, "TIMETRA-CHASSIS-MIB", "tmnxChassisIndex"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxCardSlotNum"), (0, "TIMETRA-CHASSIS-MIB", "tmnxMDASlotNum"))
if mibBuilder.loadTexts: tmnxBsxHttpPcyRdStatEntry.setStatus('current')
tmnxBsxHttpPcyRdStatDiscontTime = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 8, 6, 1, 1), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxHttpPcyRdStatDiscontTime.setStatus('current')
tmnxBsxHttpPcyRdStatHCRedir = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 8, 6, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxHttpPcyRdStatHCRedir.setStatus('current')
tmnxBsxHttpPcyRdStatRedirLo = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 8, 6, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxHttpPcyRdStatRedirLo.setStatus('current')
tmnxBsxHttpPcyRdStatRedirHi = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 8, 6, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxHttpPcyRdStatRedirHi.setStatus('current')
tmnxBsxHttpPcyRdStatHCOutOfRes = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 8, 6, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxHttpPcyRdStatHCOutOfRes.setStatus('current')
tmnxBsxHttpPcyRdStatOutOfResLo = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 8, 6, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxHttpPcyRdStatOutOfResLo.setStatus('current')
tmnxBsxHttpPcyRdStatOutOfResHi = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 8, 6, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxHttpPcyRdStatOutOfResHi.setStatus('current')
tmnxBsxHttpPcyRdStatHCNotRedir = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 8, 6, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxHttpPcyRdStatHCNotRedir.setStatus('current')
tmnxBsxHttpPcyRdStatNotRedirLo = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 8, 6, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxHttpPcyRdStatNotRedirLo.setStatus('current')
tmnxBsxHttpPcyRdStatNotRedirHi = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 8, 6, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxHttpPcyRdStatNotRedirHi.setStatus('current')
tmnxBsxStaticObjScalars = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 9, 1))
tmnxBsxTListTableLastUpdateT = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 9, 1, 1), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxTListTableLastUpdateT.setStatus('current')
tmnxBsxTListAttribTableLUpdateT = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 9, 1, 2), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxTListAttribTableLUpdateT.setStatus('current')
tmnxBsxTListTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 9, 2), )
if mibBuilder.loadTexts: tmnxBsxTListTable.setStatus('current')
tmnxBsxTListEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 9, 2, 1), ).setIndexNames((0, "TIMETRA-BSX-NG-MIB", "tmnxBsxTListName"))
if mibBuilder.loadTexts: tmnxBsxTListEntry.setStatus('current')
tmnxBsxTListName = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 9, 2, 1, 1), TNamedItem())
if mibBuilder.loadTexts: tmnxBsxTListName.setStatus('current')
tmnxBsxTListRowLastUpdateT = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 9, 2, 1, 2), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxTListRowLastUpdateT.setStatus('current')
tmnxBsxTListDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 9, 2, 1, 3), TItemDescription()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxTListDescription.setStatus('current')
tmnxBsxTListAttribTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 9, 3), )
if mibBuilder.loadTexts: tmnxBsxTListAttribTable.setStatus('current')
tmnxBsxTListAttribEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 9, 3, 1), ).setIndexNames((0, "TIMETRA-BSX-NG-MIB", "tmnxBsxTListName"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxTListAttribName"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxTListAttribSet"))
if mibBuilder.loadTexts: tmnxBsxTListAttribEntry.setStatus('current')
tmnxBsxTListAttribName = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 9, 3, 1, 1), TNamedItem())
if mibBuilder.loadTexts: tmnxBsxTListAttribName.setStatus('current')
tmnxBsxTListAttribSet = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 9, 3, 1, 2), Unsigned32())
if mibBuilder.loadTexts: tmnxBsxTListAttribSet.setStatus('current')
tmnxBsxTListAttribRowLastUpdateT = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 9, 3, 1, 3), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxTListAttribRowLastUpdateT.setStatus('current')
tmnxBsxTListAttribType = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 9, 3, 1, 4), TmnxBsxTListAttribType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxTListAttribType.setStatus('current')
tmnxBsxTListAttribValue = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 9, 3, 1, 5), TmnxBsxTListAttribValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxTListAttribValue.setStatus('current')
tmnxBsxRedundancyObjScalars = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 10, 1))
tmnxBsxAarpTableLastChTime = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 10, 1, 1), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxAarpTableLastChTime.setStatus('current')
tmnxBsxAarpInstTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 10, 2), )
if mibBuilder.loadTexts: tmnxBsxAarpInstTable.setStatus('current')
tmnxBsxAarpInstEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 10, 2, 1), ).setIndexNames((0, "TIMETRA-BSX-NG-MIB", "tmnxBsxAarpInstId"))
if mibBuilder.loadTexts: tmnxBsxAarpInstEntry.setStatus('current')
tmnxBsxAarpInstId = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 10, 2, 1, 1), TmnxBsxAarpId())
if mibBuilder.loadTexts: tmnxBsxAarpInstId.setStatus('current')
tmnxBsxAarpInstRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 10, 2, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxAarpInstRowStatus.setStatus('current')
tmnxBsxAarpInstLastCh = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 10, 2, 1, 3), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxAarpInstLastCh.setStatus('current')
tmnxBsxAarpInstDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 10, 2, 1, 4), TItemDescription()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxAarpInstDescription.setStatus('current')
tmnxBsxAarpInstPeerIpType = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 10, 2, 1, 5), InetAddressType().clone('unknown')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxAarpInstPeerIpType.setStatus('current')
tmnxBsxAarpInstPeerIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 10, 2, 1, 6), InetAddress().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(4, 4), ValueSizeConstraint(16, 16), )).clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxAarpInstPeerIpAddr.setStatus('current')
tmnxBsxAarpInstPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 10, 2, 1, 7), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255)).clone(100)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxAarpInstPriority.setStatus('current')
tmnxBsxAarpInstAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 10, 2, 1, 8), TmnxAdminState().clone('outOfService')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxAarpInstAdminState.setStatus('current')
tmnxBsxAarpInstOperState = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 10, 2, 1, 9), TmnxOperState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxAarpInstOperState.setStatus('current')
tmnxBsxAarpInstState = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 10, 2, 1, 10), TmnxBsxAarpInstState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxAarpInstState.setStatus('current')
tmnxBsxAarpInstOperFlags = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 10, 2, 1, 11), TmnxBsxAarpInstOperFlags()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxAarpInstOperFlags.setStatus('current')
tmnxBsxAarpInstPeerPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 10, 2, 1, 12), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxAarpInstPeerPriority.setStatus('current')
tmnxBsxAarpInstPeerState = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 10, 2, 1, 13), TmnxBsxAarpInstState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxAarpInstPeerState.setStatus('current')
tmnxBsxAarpInstPeerOperFlags = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 10, 2, 1, 14), TmnxBsxAarpInstOperFlags()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxAarpInstPeerOperFlags.setStatus('current')
tmnxBsxAarpInstPeerSubRefType = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 10, 2, 1, 15), TmnxBsxAaSubscriberType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxAarpInstPeerSubRefType.setStatus('current')
tmnxBsxAarpInstPeerEPSapPortId = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 10, 2, 1, 16), TmnxPortID().clone(503316480)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxAarpInstPeerEPSapPortId.setStatus('current')
tmnxBsxAarpInstPeerEPSapEncap = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 10, 2, 1, 17), TmnxEncapVal()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxAarpInstPeerEPSapEncap.setStatus('current')
tmnxBsxAarpInstPeerEPSapEncType = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 10, 2, 1, 18), TmnxPortEncapType().clone('unknown')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxAarpInstPeerEPSapEncType.setStatus('current')
tmnxBsxAarpInstPeerEPSdpBindId = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 10, 2, 1, 19), SdpBindId().clone(hexValue="0")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxAarpInstPeerEPSdpBindId.setStatus('current')
tmnxBsxAarpCommandTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 10, 3), )
if mibBuilder.loadTexts: tmnxBsxAarpCommandTable.setStatus('current')
tmnxBsxAarpCommandEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 10, 3, 1), )
tmnxBsxAarpInstEntry.registerAugmentions(("TIMETRA-BSX-NG-MIB", "tmnxBsxAarpCommandEntry"))
tmnxBsxAarpCommandEntry.setIndexNames(*tmnxBsxAarpInstEntry.getIndexNames())
if mibBuilder.loadTexts: tmnxBsxAarpCommandEntry.setStatus('current')
tmnxBsxAarpCommandControl = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 10, 3, 1, 1), TmnxBsxAarpCommand().clone('noCmd')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxAarpCommandControl.setStatus('current')
tmnxBsxAarpServPointTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 10, 4), )
if mibBuilder.loadTexts: tmnxBsxAarpServPointTable.setStatus('current')
tmnxBsxAarpServPointEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 10, 4, 1), ).setIndexNames((0, "TIMETRA-BSX-NG-MIB", "tmnxBsxAarpInstId"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxAarpServPointRole"))
if mibBuilder.loadTexts: tmnxBsxAarpServPointEntry.setStatus('current')
tmnxBsxAarpServPointRole = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 10, 4, 1, 1), TmnxBsxAarpServPointRole())
if mibBuilder.loadTexts: tmnxBsxAarpServPointRole.setStatus('current')
tmnxBsxAarpServPointType = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 10, 4, 1, 2), TmnxBsxAarpServPointType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxAarpServPointType.setStatus('current')
tmnxBsxAarpServPoint = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 10, 4, 1, 3), TmnxBsxAarpServPoint()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxAarpServPoint.setStatus('current')
tmnxBsxHttpEnrichScalars = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 11, 1))
tmnxBsxHttpEnrichLastChTime = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 11, 1, 1), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxHttpEnrichLastChTime.setStatus('current')
tmnxBsxHttpEnrichFieldLastChTime = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 11, 1, 2), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxHttpEnrichFieldLastChTime.setStatus('current')
tmnxBsxHttpEnrichTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 11, 2), )
if mibBuilder.loadTexts: tmnxBsxHttpEnrichTable.setStatus('current')
tmnxBsxHttpEnrichEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 11, 2, 1), ).setIndexNames((0, "TIMETRA-BSX-NG-MIB", "tmnxBsxIsaAaGroupIndex"), (1, "TIMETRA-BSX-NG-MIB", "tmnxBsxHttpEnrichName"))
if mibBuilder.loadTexts: tmnxBsxHttpEnrichEntry.setStatus('current')
tmnxBsxHttpEnrichName = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 11, 2, 1, 1), TNamedItem())
if mibBuilder.loadTexts: tmnxBsxHttpEnrichName.setStatus('current')
tmnxBsxHttpEnrichRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 11, 2, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxHttpEnrichRowStatus.setStatus('current')
tmnxBsxHttpEnrichRowLastCh = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 11, 2, 1, 3), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxHttpEnrichRowLastCh.setStatus('current')
tmnxBsxHttpEnrichEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 11, 2, 1, 4), TmnxEnabledDisabled().clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxHttpEnrichEnabled.setStatus('current')
tmnxBsxHttpEnrichDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 11, 2, 1, 5), TItemDescription()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxHttpEnrichDescription.setStatus('current')
tmnxBsxHttpEnrichFieldTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 11, 3), )
if mibBuilder.loadTexts: tmnxBsxHttpEnrichFieldTable.setStatus('current')
tmnxBsxHttpEnrichFieldEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 11, 3, 1), ).setIndexNames((0, "TIMETRA-BSX-NG-MIB", "tmnxBsxIsaAaGroupIndex"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxHttpEnrichName"), (1, "TIMETRA-BSX-NG-MIB", "tmnxBsxHttpEnrichFieldName"))
if mibBuilder.loadTexts: tmnxBsxHttpEnrichFieldEntry.setStatus('current')
tmnxBsxHttpEnrichFieldName = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 11, 3, 1, 1), TNamedItem())
if mibBuilder.loadTexts: tmnxBsxHttpEnrichFieldName.setStatus('current')
tmnxBsxHttpEnrichFieldRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 11, 3, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxHttpEnrichFieldRowStatus.setStatus('current')
tmnxBsxHttpEnrichFieldRowLastCh = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 11, 3, 1, 3), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxHttpEnrichFieldRowLastCh.setStatus('current')
tmnxBsxHttpEnrichFieldHeaderName = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 11, 3, 1, 4), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxHttpEnrichFieldHeaderName.setStatus('current')
tmnxBsxHttpEnrichStatTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 11, 4), )
if mibBuilder.loadTexts: tmnxBsxHttpEnrichStatTable.setStatus('current')
tmnxBsxHttpEnrichStatEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 11, 4, 1), ).setIndexNames((0, "TIMETRA-BSX-NG-MIB", "tmnxBsxAaGrpPartIndex"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxHttpEnrichName"), (0, "TIMETRA-CHASSIS-MIB", "tmnxChassisIndex"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxCardSlotNum"), (0, "TIMETRA-CHASSIS-MIB", "tmnxMDASlotNum"))
if mibBuilder.loadTexts: tmnxBsxHttpEnrichStatEntry.setStatus('current')
tmnxBsxHttpEnrichStatDiscontTime = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 11, 4, 1, 1), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxHttpEnrichStatDiscontTime.setStatus('current')
tmnxBsxHttpEnrichHCNumEnriched = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 11, 4, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxHttpEnrichHCNumEnriched.setStatus('current')
tmnxBsxHttpEnrichNumEnrichedLo = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 11, 4, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxHttpEnrichNumEnrichedLo.setStatus('current')
tmnxBsxHttpEnrichNumEnrichedHi = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 11, 4, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxHttpEnrichNumEnrichedHi.setStatus('current')
tmnxBsxHttpEnrichHCNumNoResource = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 11, 4, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxHttpEnrichHCNumNoResource.setStatus('current')
tmnxBsxHttpEnrichNumNoResourceLo = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 11, 4, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxHttpEnrichNumNoResourceLo.setStatus('current')
tmnxBsxHttpEnrichNumNoResourceHi = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 11, 4, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxHttpEnrichNumNoResourceHi.setStatus('current')
tmnxBsxHttpEnrichHCMissngSubData = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 11, 4, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxHttpEnrichHCMissngSubData.setStatus('current')
tmnxBsxHttpEnrichMissngSubDataLo = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 11, 4, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxHttpEnrichMissngSubDataLo.setStatus('current')
tmnxBsxHttpEnrichMissngSubDataHi = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 11, 4, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxHttpEnrichMissngSubDataHi.setStatus('current')
tmnxBsxHttpEnrichHCTplNotEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 11, 4, 1, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxHttpEnrichHCTplNotEnabled.setStatus('current')
tmnxBsxHttpEnrichTplNotEnabledLo = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 11, 4, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxHttpEnrichTplNotEnabledLo.setStatus('current')
tmnxBsxHttpEnrichTplNotEnabledHi = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 11, 4, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxHttpEnrichTplNotEnabledHi.setStatus('current')
tmnxBsxHttpEnrichHCTrafficChar = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 11, 4, 1, 14), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxHttpEnrichHCTrafficChar.setStatus('current')
tmnxBsxHttpEnrichTrafficCharLo = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 11, 4, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxHttpEnrichTrafficCharLo.setStatus('current')
tmnxBsxHttpEnrichTrafficCharHi = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 11, 4, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxHttpEnrichTrafficCharHi.setStatus('current')
tmnxBsxRadApScalars = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 12, 1))
tmnxBsxRadApLastChTime = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 12, 1, 1), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxRadApLastChTime.setStatus('current')
tmnxBsxRadApTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 12, 2), )
if mibBuilder.loadTexts: tmnxBsxRadApTable.setStatus('current')
tmnxBsxRadApEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 12, 2, 1), ).setIndexNames((0, "TIMETRA-BSX-NG-MIB", "tmnxBsxRadApName"))
if mibBuilder.loadTexts: tmnxBsxRadApEntry.setStatus('current')
tmnxBsxRadApName = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 12, 2, 1, 1), TNamedItem())
if mibBuilder.loadTexts: tmnxBsxRadApName.setStatus('current')
tmnxBsxRadApRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 12, 2, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxRadApRowStatus.setStatus('current')
tmnxBsxRadApRowLastChange = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 12, 2, 1, 3), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxRadApRowLastChange.setStatus('current')
tmnxBsxRadApDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 12, 2, 1, 4), TItemDescription()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxRadApDescription.setStatus('current')
tmnxBsxRadApServerRetry = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 12, 2, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 10)).clone(3)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxRadApServerRetry.setStatus('current')
tmnxBsxRadApServerTimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 12, 2, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 90)).clone(5)).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxRadApServerTimeout.setStatus('current')
tmnxBsxRadApServerVRtrID = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 12, 2, 1, 7), TmnxVRtrIDOrZero()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxRadApServerVRtrID.setStatus('current')
tmnxBsxRadApServerSrcAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 12, 2, 1, 8), InetAddressType().clone('unknown')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxRadApServerSrcAddrType.setStatus('current')
tmnxBsxRadApServerSrcAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 12, 2, 1, 9), InetAddress().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(4, 4), ValueSizeConstraint(16, 16), )).clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxRadApServerSrcAddr.setStatus('current')
tmnxBsxRadApServerAlgorithm = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 12, 2, 1, 10), TmnxSubRadServAlgorithm().clone('direct')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxRadApServerAlgorithm.setStatus('current')
tmnxBsxRadApIntrmUpdateInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 12, 2, 1, 11), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(5, 1080), ))).setUnits('minutes').setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxRadApIntrmUpdateInterval.setStatus('current')
tmnxBsxRadApSignfcntChangeDelta = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 12, 2, 1, 12), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxRadApSignfcntChangeDelta.setStatus('current')
tmnxBsxRadApServLastChTime = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 12, 1, 2), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxRadApServLastChTime.setStatus('current')
tmnxBsxRadApServTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 12, 3), )
if mibBuilder.loadTexts: tmnxBsxRadApServTable.setStatus('current')
tmnxBsxRadApServEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 12, 3, 1), ).setIndexNames((0, "TIMETRA-BSX-NG-MIB", "tmnxBsxRadApName"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxRadApServIndex"))
if mibBuilder.loadTexts: tmnxBsxRadApServEntry.setStatus('current')
tmnxBsxRadApServIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 12, 3, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 5)))
if mibBuilder.loadTexts: tmnxBsxRadApServIndex.setStatus('current')
tmnxBsxRadApServRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 12, 3, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxRadApServRowStatus.setStatus('current')
tmnxBsxRadApServRowLastChange = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 12, 3, 1, 3), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxRadApServRowLastChange.setStatus('current')
tmnxBsxRadApServAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 12, 3, 1, 4), InetAddressType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxRadApServAddrType.setStatus('current')
tmnxBsxRadApServAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 12, 3, 1, 5), InetAddress().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(4, 4), ValueSizeConstraint(16, 16), ))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxRadApServAddr.setStatus('current')
tmnxBsxRadApServSecret = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 12, 3, 1, 6), DisplayString().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(1, 20), ))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxRadApServSecret.setStatus('current')
tmnxBsxRadApServAcctPort = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 12, 3, 1, 7), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)).clone(1813)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxRadApServAcctPort.setStatus('current')
tmnxBsxRadApServOperState = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 12, 3, 1, 8), TmnxOperState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxRadApServOperState.setStatus('current')
tmnxBsxRadApStatTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 12, 4), )
if mibBuilder.loadTexts: tmnxBsxRadApStatTable.setStatus('current')
tmnxBsxRadApStatEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 12, 4, 1), )
tmnxBsxRadApEntry.registerAugmentions(("TIMETRA-BSX-NG-MIB", "tmnxBsxRadApStatEntry"))
tmnxBsxRadApStatEntry.setIndexNames(*tmnxBsxRadApEntry.getIndexNames())
if mibBuilder.loadTexts: tmnxBsxRadApStatEntry.setStatus('current')
tmnxBsxRadApTxRequests = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 12, 4, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxRadApTxRequests.setStatus('current')
tmnxBsxRadApRxResponses = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 12, 4, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxRadApRxResponses.setStatus('current')
tmnxBsxRadApReqTimeouts = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 12, 4, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxRadApReqTimeouts.setStatus('current')
tmnxBsxRadApSendRetries = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 12, 4, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxRadApSendRetries.setStatus('current')
tmnxBsxRadApSendFail = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 12, 4, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxRadApSendFail.setStatus('current')
tmnxBsxRadApServStatTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 12, 5), )
if mibBuilder.loadTexts: tmnxBsxRadApServStatTable.setStatus('current')
tmnxBsxRadApServStatEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 12, 5, 1), )
tmnxBsxRadApServEntry.registerAugmentions(("TIMETRA-BSX-NG-MIB", "tmnxBsxRadApServStatEntry"))
tmnxBsxRadApServStatEntry.setIndexNames(*tmnxBsxRadApServEntry.getIndexNames())
if mibBuilder.loadTexts: tmnxBsxRadApServStatEntry.setStatus('current')
tmnxBsxRadApServTxRequests = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 12, 5, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxRadApServTxRequests.setStatus('current')
tmnxBsxRadApServRxResponses = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 12, 5, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxRadApServRxResponses.setStatus('current')
tmnxBsxRadApServReqTimeouts = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 12, 5, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxRadApServReqTimeouts.setStatus('current')
tmnxBsxRadApServReqSendFail = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 12, 5, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxRadApServReqSendFail.setStatus('current')
tmnxBsxCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 63, 1, 1)).setObjects(("TIMETRA-BSX-NG-MIB", "tmnxBsxMdaGroup"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxPolicyGroup"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxStatsGroup"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxNotificationGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxBsxCompliance = tmnxBsxCompliance.setStatus('obsolete')
tmnxBsxComplianceV7v0 = ModuleCompliance((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 63, 1, 2)).setObjects(("TIMETRA-BSX-NG-MIB", "tmnxBsxMdaGroupV7v0"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxPolicyGroup"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxStatsGroup"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxNotificationGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxBsxComplianceV7v0 = tmnxBsxComplianceV7v0.setStatus('obsolete')
tmnxBsxComplianceV8v0 = ModuleCompliance((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 63, 1, 3)).setObjects(("TIMETRA-BSX-NG-MIB", "tmnxBsxMdaGroupV7v0"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxMdaGroupV8v0"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxMdaGroupMG3v0"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxPolicyGroupV8v0"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxStatsGroup"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxNotifyObjsGroup"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxNotifyObjsGroupV7v0"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxNotificationGroup"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxNotificationGroupV7v0"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxNotificationGroupV8v0"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxCflowdGroup"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxOvrdGroup"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxMobileGatewayGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxBsxComplianceV8v0 = tmnxBsxComplianceV8v0.setStatus('obsolete')
tmnxBsxComplianceV9v0 = ModuleCompliance((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 63, 1, 4)).setObjects(("TIMETRA-BSX-NG-MIB", "tmnxBsxMdaGroupV7v0"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxMdaGroupV8v0"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxMdaGroupV9v0"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxPolicyGroupV9v0"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxStatsGroup"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxStatsGroupV9v0"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxNotifyObjsGroup"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxNotifyObjsGroupV7v0"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxNotifyObjsGroupV8v0"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxNotificationGroup"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxNotificationGroupV7v0"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxNotificationGroupV8v0"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxNotificationGroupV9v0"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxCflowdGroup"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxCflowdGroupV9v0"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxOvrdGroup"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxTransitGroup"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxMobileGatewayGroup"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxHttpRedirErrGroup"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxStaticObjGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxBsxComplianceV9v0 = tmnxBsxComplianceV9v0.setStatus('obsolete')
tmnxBsxComplianceV10v0 = ModuleCompliance((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 63, 1, 5)).setObjects(("TIMETRA-BSX-NG-MIB", "tmnxBsxMdaGroupV7v0"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxMdaGroupV8v0"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxMdaGroupV10v0"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxPolicyGroupV10v0"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxStatsGroup"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxStatsGroupV9v0"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxNotifyObjsGroup"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxNotifyObjsGroupV7v0"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxNotifyObjsGroupV8v0"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxNotificationGroup"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxNotificationGroupV7v0"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxNotificationGroupV8v0"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxNotificationGroupV9v0"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxNotificationGroupV10v0"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxRadApNotificationGroup"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxCflowdGroup"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxCflowdGroupV9v0"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxCflowdGroupV10v0"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxOvrdGroup"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxTransitGroup"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxTransitGroupV10v0"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxMobileGatewayGroup"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxHttpRedirErrGroup"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxHttpRedirGroup"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxStaticObjGroup"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxRedundancyObjGroup"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxHttpEnrichObjGroup"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxHttpEnrichStatObjGroup"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxTransitSeenIpGroup"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxRadiusAccountingObjGroup"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxRadApObjGroup"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxRadApStatObjGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxBsxComplianceV10v0 = tmnxBsxComplianceV10v0.setStatus('current')
tmnxBsxMdaGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 63, 2, 1)).setObjects(("TIMETRA-BSX-NG-MIB", "tmnxBsxIsaAaGrpLastChangeTime"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxIsaAaGrpFcLastChangeTime"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxIsaAaGrpMdaLastChangeTime"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxIsaAaGrpRowStatus"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxIsaAaGrpRowLastChange"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxIsaAaGrpDescription"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxIsaAaGrpAdminState"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxIsaAaGrpOperState"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxIsaAaGrpFailToMode"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxIsaAaGrpFromSubPool"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxIsaAaGrpFromSubResvCbs"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxIsaAaGrpFromSubSlpPolicy"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxIsaAaGrpFromSubQuePolicy"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxIsaAaGrpFromSubSchPolicy"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxIsaAaGrpToSubPool"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxIsaAaGrpToSubResvCbs"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxIsaAaGrpToSubSlpPolicy"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxIsaAaGrpToSubQuePolicy"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxIsaAaGrpToSubSchPolicy"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxIsaAaGrpIngressPool"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxIsaAaGrpIngressResvCbs"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxIsaAaGrpIngressSlpPolicy"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxIsaAaGrpIngressQuePolicy"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxIsaAaGrpFcRowStatus"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxIsaAaGrpFcRowLastChange"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpMdaRowStatus"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpMdaRowLastChange"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpMdaActivityState"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpMdaActivityChange"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpMdaRole"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxIsaAaGrpActivityChange"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusDiscontTime"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusOctsIn"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusPktsIn"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusPktsInPChipErs"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusOctsDiscCongIn"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusPktsDiscCongIn"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusOctsToMda"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusPktsToMda"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusOctsDisCongMda"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusPktsDisCongMda"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusOctsDiscErrors"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusPktsDiscErrors"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusOctsPolicyByps"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusPktsPolicyByps"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusOctsInspected"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusPktsInspected"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusOctsDiscPolicy"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusPktsDiscPolicy"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusOctsInMda"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusPktsInMda"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusOctsFromMda"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusPktsFromMda"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusPktsOutPChipEr"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusOctsDisCongOut"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusPktsDisCongOut"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusOctsOut"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusPktsOut"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusFlows"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusFlowsCurrent"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusFlowSetupRate"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusSubsDiverted"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusSubsCurrent"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusTrafficRate"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusHCOctsIn"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusHCPktsIn"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusHCPktsInPChipErs"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusHCOctsDiscCongIn"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusHCPktsDiscCongIn"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusHCOctsToMda"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusHCPktsToMda"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusHCOctsDisCongMda"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusHCPktsDisCongMda"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusHCOctsDiscErrors"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusHCPktsDiscErrors"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusHCOctsPolicyByps"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusHCPktsPolicyByps"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusHCOctsInspected"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusHCPktsInspected"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusHCOctsDiscPolicy"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusHCPktsDiscPolicy"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusHCOctsInMda"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusHCPktsInMda"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusHCOctsFromMda"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusHCPktsFromMda"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusHCPktsOutPChipEr"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusHCOctsDisCongOut"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusHCPktsDisCongOut"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusHCOctsOut"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusHCPktsOut"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusHCFlows"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusIngQDiscontTime"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusIngQFwdInPPkts"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusIngQFwdOutPPkts"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusIngQFwdInPOcts"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusIngQFwdOutPOcts"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusIngQDroInPPkts"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusIngQDroOutPPkts"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusIngQDroInPOcts"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusIngQDroOutPOcts"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusIngQHCFwdInPPkts"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusIngQHCFwdOutPPkts"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusIngQHCFwdInPOcts"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusIngQHCFwdOutPOcts"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusIngQHCDroInPPkts"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusIngQHCDroOutPPkts"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusIngQHCDroInPOcts"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusIngQHCDroOutPOcts"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusEgrQDiscontTime"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusEgrQFwdInPPkts"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusEgrQFwdOutPPkts"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusEgrQFwdInPOcts"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusEgrQFwdOutPOcts"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusEgrQDroInPPkts"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusEgrQDroOutPPkts"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusEgrQDroInPOcts"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusEgrQDroOutPOcts"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusEgrQHCFwdInPPkts"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusEgrQHCFwdOutPPkts"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusEgrQHCFwdInPOcts"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusEgrQHCFwdOutPOcts"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusEgrQHCDroInPPkts"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusEgrQHCDroOutPPkts"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusEgrQHCDroInPOcts"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusEgrQHCDroOutPOcts"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpMdaEsmSubscribers"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpMdaSapSubscribers"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAaSubSumMdaSlotNum"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAaSubSumMdaMdaNum"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAaSubSumAppProfName"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAaSubSumDiscontTime"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAaSubSumOctsAdmFmSb"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAaSubSumPktsAdmFmSb"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAaSubSumFlwsAdmFmSb"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAaSubSumOctsDnyFmSb"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAaSubSumPktsDnyFmSb"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAaSubSumFlwsDnyFmSb"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAaSubSumOctsAdmToSb"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAaSubSumPktsAdmToSb"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAaSubSumFlwsAdmToSb"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAaSubSumOctsDnyToSb"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAaSubSumPktsDnyToSb"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAaSubSumFlwsDnyToSb"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAaSubSumTermFlwDur"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAaSubSumTermFlws"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAaSubSumShrtDurFlws"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAaSubSumMedDurFlws"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAaSubSumLngDurFlws"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAaSubSumActFlwsFmSb"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAaSubSumActFlwsToSb"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAaSubSumHCOctsAdmFmSb"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAaSubSumHCPktsAdmFmSb"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAaSubSumHCFlwsAdmFmSb"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAaSubSumHCOctsDnyFmSb"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAaSubSumHCPktsDnyFmSb"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAaSubSumHCFlwsDnyFmSb"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAaSubSumHCOctsAdmToSb"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAaSubSumHCPktsAdmToSb"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAaSubSumHCFlwsAdmToSb"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAaSubSumHCOctsDnyToSb"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAaSubSumHCPktsDnyToSb"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAaSubSumHCFlwsDnyToSb"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAaSubSumHCTermFlwDur"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAaSubSumHCTermFlws"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAaSubSumHCShrtDurFlws"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAaSubSumHCMedDurFlws"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAaSubSumHCLngDurFlws"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxBsxMdaGroup = tmnxBsxMdaGroup.setStatus('obsolete')
tmnxBsxPolicyGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 63, 2, 2)).setObjects(("TIMETRA-BSX-NG-MIB", "tmnxBsxProtDescription"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAppGrpRowStatus"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAppGrpStorageType"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAppGrpDescription"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAppGrpAdminState"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAppRowStatus"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAppStorageType"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAppDescription"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAppAppGroup"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAppFilterRowStatus"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAppFilterDescription"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAppFilterAdminState"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAppFilterProtocol"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAppFilterProtocolOp"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAppFilterFlowSetupDir"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAppFilterIpProtocolNum"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAppFilterIpProtocolNumOp"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAppFilterServerAddrType"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAppFilterServerAddr"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAppFilterServerAddrLen"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAppFilterServerAddrOp"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAppFilterServerPort"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAppFilterServerPortOp"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAppFilterServerPortFpp"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAppFilterApplication"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAppFilterExprRowStatus"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAppFilterExprType"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAppFilterExprOperator"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAppFilterExprStr"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAsoRowStatus"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAsoDefValName"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAsoValRowStatus"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAppProfRowStatus"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAppProfDescription"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAppProfDivert"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAppProfCharRowStatus"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAppProfCharValName"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxPolicerRowStatus"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxPolicerDescription"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxPolicerType"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxPolicerGranularity"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxPolicerAction"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxPolicerAdminPIR"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxPolicerAdminCIR"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxPolicerCBS"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxPolicerMBS"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxPolicerCIRAdaptation"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxPolicerPIRAdaptation"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpRowStatus"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpDescription"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpAdminState"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpApplication"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpApplicationOp"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpAppGroup"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpAppGroupOp"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpTrafficDir"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpSubscriber"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpSubscriberOp"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpDscp"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpDscpOp"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpDrop"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpBwLimitPolicer"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpFlowRatePolicer"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpFlowCountPolicer"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAdminOwner"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAdminControlApply"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAdminLastChangeTime"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxUpgrade"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxVersion"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpStatsFlows"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxFlowFullHighWatermark"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxFlowFullLowWatermark"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpCharRowStatus"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpCharOperator"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpStatsConflicts"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpSapSubscrPortId"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpSapSubscrEncapValue"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpSapSubscrOp"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpSrcAddressType"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpSrcAddress"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpSrcAddressLength"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpSrcAddressOp"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpSrcPortOp"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpSrcPortLowValue"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpSrcPortHighValue"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpDstAddressType"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpDstAddress"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpDstAddressLength"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpDstAddressOp"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpDstPortOp"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpDstPortLowValue"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpDstPortHighValue"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpRemarkFc"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpRemarkPriority"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpRemarkDscpInProfile"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpRemarkDscpOutProfile"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpMirrorSource"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpMirrorSourceAllIncl"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAdminCtrlLastChTime"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAdminCtrlConfigOwner"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAdminCtrlApply"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxBsxPolicyGroup = tmnxBsxPolicyGroup.setStatus('obsolete')
tmnxBsxStatsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 63, 2, 3)).setObjects(("TIMETRA-BSX-NG-MIB", "tmnxBsxStatAaAcctLastChTime"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxStatAaAcctCfgCollStats"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxStatAaAcctCfgPolicy"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxStatAaSubLastChTime"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxStatAaSubSdyLastChTime"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxStatAaSubDiscontTime"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxStatAaSubOctsAdmFmSb"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxStatAaSubPktsAdmFmSb"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxStatAaSubFlwsAdmFmSb"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxStatAaSubOctsDnyFmSb"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxStatAaSubPktsDnyFmSb"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxStatAaSubFlwsDnyFmSb"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxStatAaSubOctsAdmToSb"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxStatAaSubPktsAdmToSb"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxStatAaSubFlwsAdmToSb"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxStatAaSubOctsDnyToSb"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxStatAaSubPktsDnyToSb"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxStatAaSubFlwsDnyToSb"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxStatAaSubTermFlwDur"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxStatAaSubTermFlws"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxStatAaSubShrtDurFlws"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxStatAaSubMedDurFlws"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxStatAaSubLngDurFlws"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxStatAaSubActFlwsFmSb"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxStatAaSubActFlwsToSb"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxStatAaSubHCOctsAdmFmSb"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxStatAaSubHCPktsAdmFmSb"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxStatAaSubHCFlwsAdmFmSb"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxStatAaSubHCOctsDnyFmSb"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxStatAaSubHCPktsDnyFmSb"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxStatAaSubHCFlwsDnyFmSb"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxStatAaSubHCOctsAdmToSb"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxStatAaSubHCPktsAdmToSb"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxStatAaSubHCFlwsAdmToSb"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxStatAaSubHCOctsDnyToSb"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxStatAaSubHCPktsDnyToSb"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxStatAaSubHCFlwsDnyToSb"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxStatAaSubHCTermFlwDur"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxStatAaSubHCTermFlws"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxStatAaSubHCShrtDurFlws"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxStatAaSubHCMedDurFlws"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxStatAaSubHCLngDurFlws"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxStatAaSubSdyDiscontTime"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxStatAaSubSdyOctsAdmFmSb"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxStatAaSubSdyPktsAdmFmSb"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxStatAaSubSdyFlwsAdmFmSb"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxStatAaSubSdyOctsDnyFmSb"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxStatAaSubSdyPktsDnyFmSb"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxStatAaSubSdyFlwsDnyFmSb"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxStatAaSubSdyOctsAdmToSb"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxStatAaSubSdyPktsAdmToSb"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxStatAaSubSdyFlwsAdmToSb"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxStatAaSubSdyOctsDnyToSb"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxStatAaSubSdyPktsDnyToSb"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxStatAaSubSdyFlwsDnyToSb"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxStatAaSubSdyTermFlwDur"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxStatAaSubSdyTermFlws"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxStatAaSubSdyShrtDurFlws"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxStatAaSubSdyMedDurFlws"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxStatAaSubSdyLngDurFlws"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxStatAaSubSdyActFlwsFmSb"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxStatAaSubSdyActFlwsToSb"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxStatAaSubSdyHCOctsAdmFmSb"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxStatAaSubSdyHCPktsAdmFmSb"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxStatAaSubSdyHCFlwsAdmFmSb"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxStatAaSubSdyHCOctsDnyFmSb"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxStatAaSubSdyHCPktsDnyFmSb"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxStatAaSubSdyHCFlwsDnyFmSb"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxStatAaSubSdyHCOctsAdmToSb"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxStatAaSubSdyHCPktsAdmToSb"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxStatAaSubSdyHCFlwsAdmToSb"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxStatAaSubSdyHCOctsDnyToSb"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxStatAaSubSdyHCPktsDnyToSb"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxStatAaSubSdyHCFlwsDnyToSb"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxStatAaSubSdyHCTermFlwDur"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxStatAaSubSdyHCTermFlws"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxStatAaSubSdyHCShrtDurFlws"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxStatAaSubSdyHCMedDurFlws"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxStatAaSubSdyHCLngDurFlws"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxStatAaSubCfgRowStatus"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxStatAaSubSdyRowStatus"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxStatAaDiscontTime"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxStatAaOctsAdmFmSb"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxStatAaPktsAdmFmSb"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxStatAaFlwsAdmFmSb"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxStatAaOctsDnyFmSb"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxStatAaPktsDnyFmSb"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxStatAaFlwsDnyFmSb"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxStatAaOctsAdmToSb"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxStatAaPktsAdmToSb"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxStatAaFlwsAdmToSb"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxStatAaOctsDnyToSb"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxStatAaPktsDnyToSb"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxStatAaFlwsDnyToSb"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxStatAaTermFlwDur"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxStatAaTermFlws"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxStatAaShrtDurFlws"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxStatAaMedDurFlws"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxStatAaLngDurFlws"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxStatAaActFlwsFmSb"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxStatAaActFlwsToSb"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxStatAaNumSubscribers"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxStatAaHCOctsAdmFmSb"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxStatAaHCPktsAdmFmSb"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxStatAaHCFlwsAdmFmSb"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxStatAaHCOctsDnyFmSb"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxStatAaHCPktsDnyFmSb"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxStatAaHCFlwsDnyFmSb"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxStatAaHCOctsAdmToSb"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxStatAaHCPktsAdmToSb"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxStatAaHCFlwsAdmToSb"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxStatAaHCOctsDnyToSb"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxStatAaHCPktsDnyToSb"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxStatAaHCFlwsDnyToSb"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxStatAaHCTermFlwDur"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxStatAaHCTermFlws"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxStatAaHCShrtDurFlws"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxStatAaHCMedDurFlws"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxStatAaHCLngDurFlws"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxBsxStatsGroup = tmnxBsxStatsGroup.setStatus('current')
tmnxBsxNotifyObjsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 63, 2, 4)).setObjects(("TIMETRA-BSX-NG-MIB", "tmnxBsxNotifyIsaAaGroupIndex"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxNotifyActiveMda"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxNotifyActionStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxBsxNotifyObjsGroup = tmnxBsxNotifyObjsGroup.setStatus('current')
tmnxBsxNotificationGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 63, 2, 5)).setObjects(("TIMETRA-BSX-NG-MIB", "tmnxBsxIsaAaGrpFailureV2"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxIsaAaGrpFailureClearV2"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxIsaAaGrpNonRedundantV2"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxIsaAaGrpNonRedundantClear"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxIsaAaGrpSwitchover"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxIsaAaGrpFlowFull"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxIsaAaGrpFlowFullClear"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxIsaAaSubLoadBalance"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxBsxNotificationGroup = tmnxBsxNotificationGroup.setStatus('current')
tmnxBsxMdaGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 63, 2, 6))
tmnxBsxMdaGroupV7v0 = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 63, 2, 6, 1)).setObjects(("TIMETRA-BSX-NG-MIB", "tmnxBsxIsaAaGrpLastChangeTime"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxIsaAaGrpFcLastChangeTime"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxIsaAaGrpMdaLastChangeTime"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxIsaAaGrpRowStatus"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxIsaAaGrpRowLastChange"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxIsaAaGrpDescription"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxIsaAaGrpAdminState"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxIsaAaGrpOperState"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxIsaAaGrpFailToMode"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxIsaAaGrpFromSubPool"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxIsaAaGrpFromSubResvCbs"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxIsaAaGrpFromSubSlpPolicy"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxIsaAaGrpFromSubQuePolicy"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxIsaAaGrpFromSubSchPolicy"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxIsaAaGrpToSubPool"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxIsaAaGrpToSubResvCbs"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxIsaAaGrpToSubSlpPolicy"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxIsaAaGrpToSubQuePolicy"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxIsaAaGrpToSubSchPolicy"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxIsaAaGrpFcRowStatus"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxIsaAaGrpFcRowLastChange"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpMdaRowStatus"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpMdaRowLastChange"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpMdaActivityState"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpMdaActivityChange"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpMdaRole"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxIsaAaGrpActivityChange"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusDiscontTime"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusOctsIn"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusPktsIn"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusPktsInPChipErs"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusOctsDiscCongIn"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusPktsDiscCongIn"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusOctsToMda"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusPktsToMda"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusOctsDisCongMda"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusPktsDisCongMda"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusOctsDiscErrors"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusPktsDiscErrors"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusOctsPolicyByps"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusPktsPolicyByps"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusOctsInspected"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusPktsInspected"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusOctsDiscPolicy"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusPktsDiscPolicy"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusOctsInMda"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusPktsInMda"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusOctsFromMda"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusPktsFromMda"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusPktsOutPChipEr"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusOctsDisCongOut"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusPktsDisCongOut"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusOctsOut"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusPktsOut"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusFlows"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusFlowsCurrent"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusFlowSetupRate"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusSubsDiverted"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusSubsCurrent"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusTrafficRate"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusHCOctsIn"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusHCPktsIn"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusHCPktsInPChipErs"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusHCOctsDiscCongIn"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusHCPktsDiscCongIn"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusHCOctsToMda"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusHCPktsToMda"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusHCOctsDisCongMda"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusHCPktsDisCongMda"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusHCOctsDiscErrors"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusHCPktsDiscErrors"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusHCOctsPolicyByps"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusHCPktsPolicyByps"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusHCOctsInspected"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusHCPktsInspected"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusHCOctsDiscPolicy"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusHCPktsDiscPolicy"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusHCOctsInMda"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusHCPktsInMda"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusHCOctsFromMda"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusHCPktsFromMda"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusHCPktsOutPChipEr"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusHCOctsDisCongOut"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusHCPktsDisCongOut"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusHCOctsOut"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusHCPktsOut"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusHCFlows"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusIngQDiscontTime"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusIngQFwdInPPkts"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusIngQFwdOutPPkts"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusIngQFwdInPOcts"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusIngQFwdOutPOcts"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusIngQDroInPPkts"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusIngQDroOutPPkts"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusIngQDroInPOcts"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusIngQDroOutPOcts"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusIngQHCFwdInPPkts"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusIngQHCFwdOutPPkts"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusIngQHCFwdInPOcts"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusIngQHCFwdOutPOcts"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusIngQHCDroInPPkts"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusIngQHCDroOutPPkts"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusIngQHCDroInPOcts"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusIngQHCDroOutPOcts"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusEgrQDiscontTime"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusEgrQFwdInPPkts"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusEgrQFwdOutPPkts"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusEgrQFwdInPOcts"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusEgrQFwdOutPOcts"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusEgrQDroInPPkts"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusEgrQDroOutPPkts"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusEgrQDroInPOcts"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusEgrQDroOutPOcts"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusEgrQHCFwdInPPkts"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusEgrQHCFwdOutPPkts"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusEgrQHCFwdInPOcts"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusEgrQHCFwdOutPOcts"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusEgrQHCDroInPPkts"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusEgrQHCDroOutPPkts"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusEgrQHCDroInPOcts"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusEgrQHCDroOutPOcts"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpMdaEsmSubscribers"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpMdaSapSubscribers"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAaSubSumMdaSlotNum"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAaSubSumMdaMdaNum"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAaSubSumAppProfName"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAaSubSumDiscontTime"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAaSubSumOctsAdmFmSb"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAaSubSumPktsAdmFmSb"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAaSubSumFlwsAdmFmSb"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAaSubSumOctsDnyFmSb"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAaSubSumPktsDnyFmSb"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAaSubSumFlwsDnyFmSb"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAaSubSumOctsAdmToSb"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAaSubSumPktsAdmToSb"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAaSubSumFlwsAdmToSb"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAaSubSumOctsDnyToSb"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAaSubSumPktsDnyToSb"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAaSubSumFlwsDnyToSb"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAaSubSumTermFlwDur"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAaSubSumTermFlws"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAaSubSumShrtDurFlws"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAaSubSumMedDurFlws"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAaSubSumLngDurFlws"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAaSubSumActFlwsFmSb"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAaSubSumActFlwsToSb"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAaSubSumHCOctsAdmFmSb"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAaSubSumHCPktsAdmFmSb"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAaSubSumHCFlwsAdmFmSb"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAaSubSumHCOctsDnyFmSb"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAaSubSumHCPktsDnyFmSb"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAaSubSumHCFlwsDnyFmSb"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAaSubSumHCOctsAdmToSb"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAaSubSumHCPktsAdmToSb"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAaSubSumHCFlwsAdmToSb"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAaSubSumHCOctsDnyToSb"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAaSubSumHCPktsDnyToSb"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAaSubSumHCFlwsDnyToSb"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAaSubSumHCTermFlwDur"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAaSubSumHCTermFlws"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAaSubSumHCShrtDurFlws"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAaSubSumHCMedDurFlws"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAaSubSumHCLngDurFlws"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxBsxMdaGroupV7v0 = tmnxBsxMdaGroupV7v0.setStatus('current')
tmnxBsxMdaGroupV8v0 = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 63, 2, 6, 2)).setObjects(("TIMETRA-BSX-NG-MIB", "tmnxBsxAaGrpPartLastChangeTime"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAaGrpPartRowStatus"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAaGrpPartRowLastChange"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAaGrpPartDescription"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxIsaAaGrpPartitions"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxIsaAaGrpCapCostLowThres"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxIsaAaGrpCapCostHighThres"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxIsaAaGrpLoadBalanceStatus"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxIsaAaGrpUnassignedEsmSubs"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxIsaAaGrpUnassignedSapSubs"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxIsaAaGrpUnassignedSpkSubs"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxIsaAaGrpAaSubScale"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxIsaAaGrpOverloadCutThru"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpMdaSpokeSdpSubscribers"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpMdaCapacityCost"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpMdaStatsResourceCount"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusFlowsAverage"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusFlowsPeak"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusFlowSetupRateAvg"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusFlowSetupRatePk"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusSubsDivertedAvg"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusSubsDivertedPk"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusSubsAverage"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusSubsPeak"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusTrafficRateAvg"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusTrafficRatePeak"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxIsaLoadBalUnSub"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAaSubMdaSlotNum"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAaSubMdaMdaNum"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAaSubAppProfName"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAaSubHasOverrides"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxBsxMdaGroupV8v0 = tmnxBsxMdaGroupV8v0.setStatus('current')
tmnxBsxMdaGroupV9v0 = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 63, 2, 6, 3)).setObjects(("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusPacketRate"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusPacketRateAvg"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusPacketRatePeak"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusFlowResInUse"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpMdaTransitIpSubs"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpMdaTransitIpAddrs"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpMdaTransitSubs"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpMdaTransPrefEntries"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxIsaAaGrpFromSubWaSBfHiWmk"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxIsaAaGrpFromSubWaSBfLoWmk"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxIsaAaGrpToSubWaSBfHiWmk"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxIsaAaGrpToSubWaSBfLoWmk"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAaSubTransitIpPolicyId"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAaSubTransPrefPolicyId"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxIsaAaGrpTransPrefV4NmEntr"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxIsaLoadBalUnSubTransit"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAaGrpPartXOnlineHost"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAaGrpPartHttpMatchAllReq"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusHCPktSzIncPk"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusPktSzIncPkLo"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusPktSzIncPkHi"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusHCPktSzDecPk"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusPktSzDecPkLo"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusPktSzDecPkHi"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusHCPktSzIncOc"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusPktSzIncOcLo"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusPktSzIncOcHi"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusHCPktSzDecOc"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusPktSzDecOcLo"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusPktSzDecOcHi"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxBsxMdaGroupV9v0 = tmnxBsxMdaGroupV9v0.setStatus('obsolete')
tmnxBsxMdaGroupV10v0 = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 63, 2, 6, 4)).setObjects(("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusPacketRate"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusPacketRateAvg"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusPacketRatePeak"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusFlowResInUse"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpMdaTransitIpSubs"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpMdaTransitIpAddrs"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpMdaTransitSubs"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxIsaAaGrpFromSubWaSBfHiWmk"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxIsaAaGrpFromSubWaSBfLoWmk"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxIsaAaGrpToSubWaSBfHiWmk"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxIsaAaGrpToSubWaSBfLoWmk"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAaSubTransitIpPolicyId"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAaSubTransPrefPolicyId"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxIsaAaGrpTransPrefV4NmEntr"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxIsaLoadBalUnSubTransit"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAaGrpPartXOnlineHost"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAaGrpPartHttpMatchAllReq"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAaGrpPartAaSubRemote"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusHCPktSzIncPk"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusPktSzIncPkLo"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusPktSzIncPkHi"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusHCPktSzDecPk"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusPktSzDecPkLo"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusPktSzDecPkHi"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusHCPktSzIncOc"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusPktSzIncOcLo"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusPktSzIncOcHi"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusHCPktSzDecOc"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusPktSzDecOcLo"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusPktSzDecOcHi"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxIsaAaGrpTransPrefV6NmEntr"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxIsaAaGrpTransPrefV6RmEntr"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpMdaTransPrefV4Entr"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpMdaTransPrefV6Entr"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpMdaTransPrefV6RemEntr"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxBsxMdaGroupV10v0 = tmnxBsxMdaGroupV10v0.setStatus('current')
tmnxBsxMdaGroupMG3v0 = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 63, 2, 6, 5)).setObjects(("TIMETRA-BSX-NG-MIB", "tmnxBsxAaGrpPartXOnlineHost"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAaGrpPartHttpMatchAllReq"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxBsxMdaGroupMG3v0 = tmnxBsxMdaGroupMG3v0.setStatus('obsolete')
tmnxBsxObsoleteGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 63, 2, 7))
tmnxBsxObsoleteGroupV7v0 = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 63, 2, 7, 1)).setObjects(("TIMETRA-BSX-NG-MIB", "tmnxBsxIsaAaGrpIngressPool"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxIsaAaGrpIngressResvCbs"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxIsaAaGrpIngressSlpPolicy"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxIsaAaGrpIngressQuePolicy"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxBsxObsoleteGroupV7v0 = tmnxBsxObsoleteGroupV7v0.setStatus('current')
tmnxBsxObsoleteGroupV8v0 = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 63, 2, 7, 2)).setObjects(("TIMETRA-BSX-NG-MIB", "tmnxBsxAdminOwner"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAdminControlApply"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAdminLastChangeTime"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAppFilterServerPort"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxBsxObsoleteGroupV8v0 = tmnxBsxObsoleteGroupV8v0.setStatus('current')
tmnxBsxObsoleteGroupsV9v0 = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 63, 2, 7, 3)).setObjects(("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpStatsFlows"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpStatsConflicts"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpSubscriber"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpSubscriberOp"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpSapSubscrPortId"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpSapSubscrEncapValue"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpSapSubscrOp"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpSpokeSdpSubscr"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpSpokeSdpSubscrOp"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxIsaAaGrpUnassignedTIpSubs"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxBsxObsoleteGroupsV9v0 = tmnxBsxObsoleteGroupsV9v0.setStatus('current')
tmnxBsxObsoleteGroupV10v0 = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 63, 2, 7, 4)).setObjects(("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpMdaTransPrefEntries"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAppGrpAdminState"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxBsxObsoleteGroupV10v0 = tmnxBsxObsoleteGroupV10v0.setStatus('current')
tmnxBsxPolicyGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 63, 2, 8))
tmnxBsxPolicyGroupV8v0 = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 63, 2, 8, 1)).setObjects(("TIMETRA-BSX-NG-MIB", "tmnxBsxProtDescription"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxProtParentName"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxProtAdminState"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAppGrpRowStatus"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAppGrpStorageType"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAppGrpDescription"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAppGrpAdminState"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAppRowStatus"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAppStorageType"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAppDescription"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAppAppGroup"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAppFilterRowStatus"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAppFilterDescription"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAppFilterAdminState"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAppFilterProtocol"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAppFilterProtocolOp"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAppFilterFlowSetupDir"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAppFilterIpProtocolNum"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAppFilterIpProtocolNumOp"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAppFilterServerAddrType"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAppFilterServerAddr"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAppFilterServerAddrLen"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAppFilterServerAddrOp"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAppFilterServerPortOp"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAppFilterServerPortFpp"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAppFilterServerPortLow"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAppFilterServerPortHigh"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAppFilterApplication"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAppFilterExprRowStatus"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAppFilterExprType"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAppFilterExprOperator"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAppFilterExprStr"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAsoRowStatus"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAsoDefValName"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAsoValRowStatus"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAppProfRowStatus"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAppProfDescription"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAppProfDivert"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAppProfCapacityCost"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAppProfCharRowStatus"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAppProfCharValName"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxPolicerRowStatus"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxPolicerDescription"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxPolicerType"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxPolicerGranularity"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxPolicerAction"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxPolicerAdminPIR"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxPolicerAdminCIR"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxPolicerCBS"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxPolicerMBS"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxPolicerCIRAdaptation"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxPolicerPIRAdaptation"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpRowStatus"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpDescription"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpAdminState"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpApplication"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpApplicationOp"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpAppGroup"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpAppGroupOp"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpTrafficDir"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpSubscriber"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpSubscriberOp"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpDscp"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpDscpOp"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpDrop"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpBwLimitPolicer"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpFlowRatePolicer"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpFlowCountPolicer"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxUpgrade"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxVersion"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpStatsFlows"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxFlowFullHighWatermark"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxFlowFullLowWatermark"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpCharRowStatus"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpCharOperator"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpStatsConflicts"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpSapSubscrPortId"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpSapSubscrEncapValue"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpSapSubscrOp"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpSrcAddressType"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpSrcAddress"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpSrcAddressLength"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpSrcAddressOp"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpSrcPortOp"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpSrcPortLowValue"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpSrcPortHighValue"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpDstAddressType"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpDstAddress"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpDstAddressLength"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpDstAddressOp"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpDstPortOp"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpDstPortLowValue"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpDstPortHighValue"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpSpokeSdpSubscr"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpSpokeSdpSubscrOp"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpRemarkFc"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpRemarkPriority"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpRemarkDscpInProfile"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpRemarkDscpOutProfile"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpMirrorSource"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpMirrorSourceAllIncl"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAdminCtrlLastChTime"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAdminCtrlConfigOwner"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAdminCtrlApply"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxCustProtRowStatus"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxCustProtRowLastChange"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxCustProtIpProtocolNum"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxCustProtDescription"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxCustProtAdminState"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxCustProtExprRowStatus"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxCustProtExprRowLastChange"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxCustProtExprOffset"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxCustProtExprDirection"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxCustProtExprOperator"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxCustProtExprStr"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAaSubAsoValName"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAaSubAsoValDerivedFrom"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAaSubPolicerAqpEntryId"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAaSubPolicerName"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAaSubPolResExStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxBsxPolicyGroupV8v0 = tmnxBsxPolicyGroupV8v0.setStatus('obsolete')
tmnxBsxPolicyGroupV9v0 = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 63, 2, 8, 2)).setObjects(("TIMETRA-BSX-NG-MIB", "tmnxBsxProtDescription"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxProtParentName"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxProtAdminState"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAppGrpRowStatus"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAppGrpStorageType"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAppGrpDescription"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAppGrpAdminState"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAppRowStatus"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAppStorageType"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAppDescription"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAppAppGroup"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAppFilterRowStatus"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAppFilterDescription"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAppFilterAdminState"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAppFilterProtocol"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAppFilterProtocolOp"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAppFilterFlowSetupDir"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAppFilterIpProtocolNum"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAppFilterIpProtocolNumOp"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAppFilterServerAddrType"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAppFilterServerAddr"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAppFilterServerAddrLen"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAppFilterServerAddrOp"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAppFilterServerPortOp"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAppFilterServerPortFpp"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAppFilterServerPortLow"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAppFilterServerPortHigh"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAppFilterApplication"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAppFilterExprRowStatus"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAppFilterExprType"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAppFilterExprOperator"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAppFilterExprStr"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAsoRowStatus"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAsoDefValName"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAsoValRowStatus"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAppProfRowStatus"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAppProfDescription"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAppProfDivert"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAppProfCapacityCost"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAppProfCharRowStatus"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAppProfCharValName"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxPolicerRowStatus"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxPolicerDescription"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxPolicerType"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxPolicerGranularity"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxPolicerAction"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxPolicerAdminPIR"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxPolicerAdminCIR"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxPolicerCBS"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxPolicerMBS"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxPolicerCIRAdaptation"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxPolicerPIRAdaptation"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpRowStatus"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpDescription"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpAdminState"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpApplication"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpApplicationOp"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpAppGroup"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpAppGroupOp"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpTrafficDir"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpDscp"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpDscpOp"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpDrop"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpBwLimitPolicer"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpFlowRatePolicer"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpFlowCountPolicer"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxUpgrade"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxVersion"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxFlowFullHighWatermark"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxFlowFullLowWatermark"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpCharRowStatus"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpCharOperator"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpSrcAddressType"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpSrcAddress"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpSrcAddressLength"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpSrcAddressOp"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpSrcPortOp"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpSrcPortLowValue"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpSrcPortHighValue"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpDstAddressType"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpDstAddress"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpDstAddressLength"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpDstAddressOp"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpDstPortOp"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpDstPortLowValue"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpDstPortHighValue"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpRemarkFc"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpRemarkPriority"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpRemarkDscpInProfile"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpRemarkDscpOutProfile"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpMirrorSource"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpMirrorSourceAllIncl"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAdminCtrlLastChTime"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAdminCtrlConfigOwner"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAdminCtrlApply"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxCustProtRowStatus"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxCustProtRowLastChange"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxCustProtIpProtocolNum"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxCustProtDescription"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxCustProtAdminState"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxCustProtExprRowStatus"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxCustProtExprRowLastChange"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxCustProtExprOffset"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxCustProtExprDirection"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxCustProtExprOperator"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxCustProtExprStr"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAaSubAsoValName"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAaSubAsoValDerivedFrom"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAaSubPolicerAqpEntryId"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAaSubPolicerName"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAaSubPolResExStatus"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpAaSubscriberType"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpAaSubscriber"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpAaSubscriberOp"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxFlowSetupHighWatermark"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxFlowSetupLowWatermark"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxPacketRateHighWatermark"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxPacketRateLowWatermark"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxBitRateHighWatermark"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxBitRateLowWatermark"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpStatsHCFlows"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpStatsFlowsLo"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpStatsFlowsHi"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpStatsHCConflicts"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpStatsConflictsLo"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpStatsConflictsHi"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpHttpErrRedirName"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxBsxPolicyGroupV9v0 = tmnxBsxPolicyGroupV9v0.setStatus('obsolete')
tmnxBsxPolicyGroupV10v0 = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 63, 2, 8, 3)).setObjects(("TIMETRA-BSX-NG-MIB", "tmnxBsxProtDescription"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxProtParentName"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxProtAdminState"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxProtObsolete"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAppGrpRowStatus"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAppGrpStorageType"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAppGrpDescription"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAppRowStatus"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAppStorageType"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAppDescription"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAppAppGroup"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAppFilterRowStatus"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAppFilterDescription"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAppFilterAdminState"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAppFilterProtocol"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAppFilterProtocolOp"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAppFilterFlowSetupDir"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAppFilterIpProtocolNum"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAppFilterIpProtocolNumOp"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAppFilterServerAddrType"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAppFilterServerAddr"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAppFilterServerAddrLen"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAppFilterServerAddrOp"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAppFilterServerPortOp"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAppFilterServerPortFpp"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAppFilterServerPortLow"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAppFilterServerPortHigh"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAppFilterApplication"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAppFilterExprRowStatus"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAppFilterExprType"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAppFilterExprOperator"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAppFilterExprStr"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAsoRowStatus"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAsoDefValName"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAsoValRowStatus"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAppProfRowStatus"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAppProfDescription"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAppProfDivert"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAppProfCapacityCost"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAppProfCharRowStatus"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAppProfCharValName"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxPolicerRowStatus"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxPolicerDescription"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxPolicerType"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxPolicerGranularity"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxPolicerAction"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxPolicerAdminPIR"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxPolicerAdminCIR"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxPolicerCBS"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxPolicerMBS"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxPolicerCIRAdaptation"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxPolicerPIRAdaptation"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpRowStatus"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpDescription"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpAdminState"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpApplication"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpApplicationOp"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpAppGroup"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpAppGroupOp"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpTrafficDir"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpDscp"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpDscpOp"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpDrop"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpBwLimitPolicer"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpFlowRatePolicer"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpFlowCountPolicer"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxUpgrade"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxVersion"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxFlowFullHighWatermark"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxFlowFullLowWatermark"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpCharRowStatus"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpCharOperator"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpSrcAddressType"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpSrcAddress"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpSrcAddressLength"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpSrcAddressOp"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpSrcPortOp"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpSrcPortLowValue"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpSrcPortHighValue"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpDstAddressType"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpDstAddress"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpDstAddressLength"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpDstAddressOp"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpDstPortOp"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpDstPortLowValue"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpDstPortHighValue"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpRemarkFc"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpRemarkPriority"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpRemarkDscpInProfile"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpRemarkDscpOutProfile"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpMirrorSource"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpMirrorSourceAllIncl"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAdminCtrlLastChTime"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAdminCtrlConfigOwner"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAdminCtrlApply"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxCustProtRowStatus"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxCustProtRowLastChange"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxCustProtIpProtocolNum"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxCustProtDescription"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxCustProtAdminState"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxCustProtExprRowStatus"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxCustProtExprRowLastChange"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxCustProtExprOffset"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxCustProtExprDirection"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxCustProtExprOperator"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxCustProtExprStr"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAaSubAsoValName"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAaSubAsoValDerivedFrom"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAaSubPolicerAqpEntryId"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAaSubPolicerName"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAaSubPolResExStatus"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpAaSubscriberType"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpAaSubscriber"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpAaSubscriberOp"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxFlowSetupHighWatermark"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxFlowSetupLowWatermark"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxPacketRateHighWatermark"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxPacketRateLowWatermark"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxBitRateHighWatermark"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxBitRateLowWatermark"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpStatsHCFlows"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpStatsFlowsLo"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpStatsFlowsHi"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpStatsHCConflicts"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpStatsConflictsLo"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpStatsConflictsHi"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpHttpErrRedirName"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxBsxPolicyGroupV10v0 = tmnxBsxPolicyGroupV10v0.setStatus('current')
tmnxBsxNotificationGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 63, 2, 10))
tmnxBsxNotificationGroupV8v0 = NotificationGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 63, 2, 10, 1)).setObjects(("TIMETRA-BSX-NG-MIB", "tmnxBsxIsaAaGrpCapCostThres"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxIsaAaGrpCapCostThresClear"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAaSubscribersUnassigned"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAaSubPolResExceeded"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAaSubPolResExceededClear"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxBsxNotificationGroupV8v0 = tmnxBsxNotificationGroupV8v0.setStatus('current')
tmnxBsxNotificationGroupV7v0 = NotificationGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 63, 2, 10, 2)).setObjects(("TIMETRA-BSX-NG-MIB", "tmnxBsxAaSubscriberAcctDataLoss"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxBsxNotificationGroupV7v0 = tmnxBsxNotificationGroupV7v0.setStatus('current')
tmnxBsxNotificationGroupV9v0 = NotificationGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 63, 2, 10, 3)).setObjects(("TIMETRA-BSX-NG-MIB", "tmnxBsxIsaAaGrpBitRate"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxIsaAaGrpBitRateClear"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxIsaAaGrpFlowSetup"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxIsaAaGrpFlowSetupClear"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxIsaAaGrpPacketRate"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxIsaAaGrpPacketRateClear"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxTransIpPolAaSubCreated"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxTransIpPolAaSubDeleted"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxTransIpPolRadCoAAudit"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxTransIpPolRadCoAError"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxTransIpPolRadDiscError"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxTransIpPolDhcpAddWarning"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxTransIpPolDhcpDelWarning"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxIsaAaGrpFmSbWaSBufOvld"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxIsaAaGrpFmSbWaSBufOvldClr"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxIsaAaGrpToSbWaSBufOvld"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxIsaAaGrpToSbWaSBufOvldClr"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxIsaAaGrpOvrldCutthru"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxIsaAaGrpOvrldCutthruClr"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxTransitIpPersistenceWarn"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxBsxNotificationGroupV9v0 = tmnxBsxNotificationGroupV9v0.setStatus('current')
tmnxBsxNotificationGroupV10v0 = NotificationGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 63, 2, 10, 4)).setObjects(("TIMETRA-BSX-NG-MIB", "tmnxBsxAarpInstOperStateChanged"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAarpInstStateChanged"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxBsxNotificationGroupV10v0 = tmnxBsxNotificationGroupV10v0.setStatus('current')
tmnxBsxRadApNotificationGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 63, 2, 10, 5)).setObjects(("TIMETRA-BSX-NG-MIB", "tmnxBsxRadApFailure"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxRadApServOperStateChange"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxBsxRadApNotificationGroup = tmnxBsxRadApNotificationGroup.setStatus('current')
tmnxBsxCflowdGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 63, 2, 11))
tmnxBsxCflowdGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 63, 2, 11, 1)).setObjects(("TIMETRA-BSX-NG-MIB", "tmnxBsxCflowdLastChangeTime"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxCflowdCollLastChangeTime"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxCflowdPerfLastChangeTime"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxCflowdExpLastChangeTime"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxCflowdPerfExpLastChTime"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxCflowdRowLastChange"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxCflowdVolRate"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxCflowdTemplateRetransmit"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxCflowdAdminState"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxCflowdCollRowStatus"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxCflowdCollRowLastChange"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxCflowdCollDescription"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxCflowdCollAdminState"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxCflowdCollOperState"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxCflowdCollVersion"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxCflowdPerfRowLastChange"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxCflowdPerfFlowRate"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxCflowdExpRowLastChange"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxCflowdExpAdminState"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxCflowdPerfExpRowStatus"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxCflowdPerfExpRowLastChnge"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxCflowdStatusDiscontTime"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxCflowdStatusRecReported"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxCflowdStatusRecDropped"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxCflowdStatusPktsSent"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxCflowdStatusFlowsNoRes"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxCflowdStatusActFlowsCurr"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxCflowdStatusRecRateCurr"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxCflowdStatusPktRateCurr"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxCflowdStatusHCRecReported"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxCflowdStatusHCRecDropped"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxCflowdStatusHCPktsSent"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxCflowdStatusHCFlowsNoRes"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxCflowdCollStatDiscontTime"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxCflowdCollStatRecSent"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxCflowdCollStatHCRecSent"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxCflowdExpStatDiscontTime"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxCflowdExpStatRecReport"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxCflowdExpStatHCRecReport"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxCflowdExpStatRecDropped"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxCflowdExpStatHCRecDropped"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxCflowdExpStatFlowsNoRes"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxCflowdExpStatHCFlowsNoRes"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxBsxCflowdGroup = tmnxBsxCflowdGroup.setStatus('current')
tmnxBsxCflowdGroupV9v0 = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 63, 2, 11, 2)).setObjects(("TIMETRA-BSX-NG-MIB", "tmnxBsxCflowdStatusHCUSupSSRCSt"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxCflowdStatusUSupSSRCStLo"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxCflowdStatusUSupSSRCStHi"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxCflowdExpStatHCUSupSSRCSt"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxCflowdExpStatUSupSSRCStLo"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxCflowdExpStatUSupSSRCStHi"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxBsxCflowdGroupV9v0 = tmnxBsxCflowdGroupV9v0.setStatus('current')
tmnxBsxCflowdGroupV10v0 = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 63, 2, 11, 3)).setObjects(("TIMETRA-BSX-NG-MIB", "tmnxBsxCflowdPerfFlowRate2"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxCflowdPerfExpRateNum"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxBsxCflowdGroupV10v0 = tmnxBsxCflowdGroupV10v0.setStatus('current')
tmnxBsxOvrdGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 63, 2, 12))
tmnxBsxOvrdGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 63, 2, 12, 1)).setObjects(("TIMETRA-BSX-NG-MIB", "tmnxBsxOvrdAaSubLastChTime"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxOvrdAaSubCharLastChTm"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxOvrdAaSubRowStatus"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxOvrdAaSubRowLastCh"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxOvrdAaSubCharRowStatus"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxOvrdAaSubCharRowLastCh"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxOvrdAaSubCharValName"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxBsxOvrdGroup = tmnxBsxOvrdGroup.setStatus('current')
tmnxBsxNotifyObjsGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 63, 2, 13))
tmnxBsxNotifyObjsGroupV7v0 = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 63, 2, 13, 1)).setObjects(("TIMETRA-BSX-NG-MIB", "tmnxBsxNotifyAaSubscriberType"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxNotifyAaSubscriberName"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxNotifyAaSubAcctLossReason"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxBsxNotifyObjsGroupV7v0 = tmnxBsxNotifyObjsGroupV7v0.setStatus('current')
tmnxBsxNotifyObjsGroupV8v0 = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 63, 2, 13, 2)).setObjects(("TIMETRA-BSX-NG-MIB", "tmnxBsxNotifyAaGrpPartIndex"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxBsxNotifyObjsGroupV8v0 = tmnxBsxNotifyObjsGroupV8v0.setStatus('current')
tmnxBsxNotifyObjsGroupV9v0 = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 63, 2, 13, 3)).setObjects(("TIMETRA-BSX-NG-MIB", "tmnxBsxNotifyRadiusCoAAuditState"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxNotifyReason"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxNotifyTransitIpPolicyId"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxBsxNotifyObjsGroupV9v0 = tmnxBsxNotifyObjsGroupV9v0.setStatus('current')
tmnxBsxTransitGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 63, 2, 14))
tmnxBsxTransitGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 63, 2, 14, 1)).setObjects(("TIMETRA-BSX-NG-MIB", "tmnxBsxTransitIpPolicyLastChTime"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxTransIpPlcySubLastChTime"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxTransIpPlcyAddrLastChTime"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxTransitIpPolicyRowStatus"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxTransitIpPolicyRowLastCh"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxTransitIpPolicyDesc"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxTransitIpPolicyDefAppProf"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxTransitIpPolicySubIdPlcy"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxTransitIpPolicyRadius"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxTransitIpPolicyRadAuthPlc"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxTransitIpPolicyDhcp"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxTransIpPlcySubRowStatus"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxTransIpPlcySubRowLastCh"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxTransIpPlcySubAppProfNm"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxTransIpPlcySubRefCount"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxTransIpPlcyAddrRowStatus"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxTransIpPlcyAddrRowLastCh"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxTransIpPlcyAddrSubscriber"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxTransitIpSumParentSubType"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxTransitIpSumParentSub"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxTransitIpSumAppProfNm"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxTransitIpSumIpOriginMask"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxTransitIpSumUpdateTime"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxTransPrefPlcyLastChTime"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxTransPrefSubLastChTime"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxTransPrefEntryLastChTime"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxTransPrefPolicyRowStatus"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxTransPrefPolicyRowLastCh"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxTransPrefPolicyDesc"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxTransPrefSubRowStatus"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxTransPrefSubRowLastCh"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxTransPrefSubIsRemote"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxTransPrefSubAppProfNm"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxTransPrefSubRefCount"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxTransPrefEntryRowStatus"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxTransPrefEntryRowLastCh"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxTransPrefEntrySubAddrType"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxTransPrefEntrySubAddr"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxTransPrefEntrySubAddrLen"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxTransPrefEntryNetAddrType"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxTransPrefEntryNetAddr"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxTransPrefEntryNetAddrLen"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxTransPrefEntrySubscriber"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxTransPrefSumSubAddrType"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxTransPrefSumSubAddr"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxTransPrefSumSubAddrLen"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxTransPrefSumNetAddrType"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxTransPrefSumNetAddr"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxTransPrefSumNetAddrLen"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxTransPrefSumUpdateTime"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxTransPrefSumParentSubType"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxTransPrefSumParentSub"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxTransPrefSumAppProfNm"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxTransitIpPolicySubsCount"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxTransitIpPolicyIPv4EntCnt"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxTransPrefPolicySubsCount"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxTransPrefPolicyEntCount"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxTransPrefPolicyIPv4EntCnt"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxBsxTransitGroup = tmnxBsxTransitGroup.setStatus('current')
tmnxBsxTransitGroupV10v0 = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 63, 2, 14, 2)).setObjects(("TIMETRA-BSX-NG-MIB", "tmnxBsxTransitIpPolicyIPv6PfxLen"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxTransitIpPolicyIPv6EntCnt"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxTransPrefPolicyIPv6EntCnt"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxBsxTransitGroupV10v0 = tmnxBsxTransitGroupV10v0.setStatus('current')
tmnxBsxTransitSeenIpGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 63, 2, 14, 3)).setObjects(("TIMETRA-BSX-NG-MIB", "tmnxBsxTransitIpPolicySeenIp"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxTransitIpPolicyAutoCreate"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxTransitIpPolicySeenIpRad"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAarpInstPeerEPSapPortId"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAarpInstPeerEPSapEncap"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAarpInstPeerEPSapEncType"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAarpInstPeerEPSdpBindId"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxBsxTransitSeenIpGroup = tmnxBsxTransitSeenIpGroup.setStatus('current')
tmnxBsxStatsGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 63, 2, 15))
tmnxBsxStatsGroupV9v0 = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 63, 2, 15, 1)).setObjects(("TIMETRA-BSX-NG-MIB", "tmnxBsxStatAaAcctCfgAggrStats"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxStatAaAppFilterHCFlows"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxStatAaAppFilterFlowsLo"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxStatAaAppFilterFlowsHi"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxStatAaAppFilterFlowHCOctC"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxStatAaAppFilterFlowOctCLo"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxStatAaAppFilterFlowOctCHi"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxStatAaAcctCfgAdminState"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxStatAaAcctCfgMaxThruStats"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxStatIsaAaCfgLastChTime"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxStatIsaAaCfgCollStats"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxStatIsaAaCfgPolicy"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxBsxStatsGroupV9v0 = tmnxBsxStatsGroupV9v0.setStatus('current')
tmnxBsxMobileGatewayGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 63, 2, 16))
tmnxBsxMobileGatewayGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 63, 2, 16, 1)).setObjects(("TIMETRA-BSX-NG-MIB", "tmnxBsxAaWap1xLastChangeTime"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAaWap1xRowLastChange"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAaWap1xAdminState"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxBsxMobileGatewayGroup = tmnxBsxMobileGatewayGroup.setStatus('current')
tmnxBsxHttpRedirGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 63, 2, 17))
tmnxBsxHttpRedirErrGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 63, 2, 17, 1)).setObjects(("TIMETRA-BSX-NG-MIB", "tmnxBsxHttpRedirErrLastChTime"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxHttpRedirErrCodeLastCh"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxHttpRedirErrRowStatus"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxHttpRedirErrRowLastCh"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxHttpRedirErrEnabled"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxHttpRedirErrDescription"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxHttpRedirErrTemplateId"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxHttpRedirErrHttpHost"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxHttpRedirErrParticipantId"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxHttpRedirErrCodeRowStatus"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxHttpRedirErrCodeRowLastCh"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxHttpRedirErrorCodeMsgSize"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxHttpRdStatDiscontTime"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxHttpRdStatHCRedir"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxHttpRdStatRedirLo"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxHttpRdStatRedirHi"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxHttpRdStatHCSizeExceeded"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxHttpRdStatSizeExceededLo"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxHttpRdStatSizeExceededHi"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxHttpRdStatHCOutOfResource"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxHttpRdStatOutOfResourceLo"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxHttpRdStatOutOfResourceHi"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxHttpRdStatHCNotRedirFType"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxHttpRdStatNotRedirFTypeLo"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxHttpRdStatNotRedirFTypeHi"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxHttpRdStatHCNotRedir"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxHttpRdStatNotRedirLo"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxHttpRdStatNotRedirHi"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxBsxHttpRedirErrGroup = tmnxBsxHttpRedirErrGroup.setStatus('current')
tmnxBsxHttpRedirGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 63, 2, 17, 2)).setObjects(("TIMETRA-BSX-NG-MIB", "tmnxBsxHttpRedirLastCh"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxHttpRedirRowStatus"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxHttpRedirRowLastCh"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxHttpRedirEnabled"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxHttpRedirDescription"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxHttpRedirTemplateId"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxHttpRedirHttpHost"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpHttpRedirName"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpHttpRedirFlowType"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxHttpPcyRdStatDiscontTime"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxHttpPcyRdStatHCRedir"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxHttpPcyRdStatRedirLo"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxHttpPcyRdStatRedirHi"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxHttpPcyRdStatHCOutOfRes"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxHttpPcyRdStatOutOfResLo"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxHttpPcyRdStatOutOfResHi"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxHttpPcyRdStatHCNotRedir"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxHttpPcyRdStatNotRedirLo"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxHttpPcyRdStatNotRedirHi"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxBsxHttpRedirGroup = tmnxBsxHttpRedirGroup.setStatus('current')
tmnxBsxStaticObjGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 63, 2, 18))
tmnxBsxStaticObjGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 63, 2, 18, 1)).setObjects(("TIMETRA-BSX-NG-MIB", "tmnxBsxTListTableLastUpdateT"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxTListAttribTableLUpdateT"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxTListRowLastUpdateT"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxTListDescription"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxTListAttribRowLastUpdateT"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxTListAttribType"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxTListAttribValue"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxBsxStaticObjGroup = tmnxBsxStaticObjGroup.setStatus('current')
tmnxBsxRedundancyObjGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 63, 2, 19))
tmnxBsxRedundancyObjGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 63, 2, 19, 1)).setObjects(("TIMETRA-BSX-NG-MIB", "tmnxBsxAarpTableLastChTime"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAarpInstRowStatus"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAarpInstLastCh"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAarpInstDescription"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAarpInstPeerIpType"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAarpInstPeerIpAddr"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAarpInstPriority"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAarpInstAdminState"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAarpInstOperState"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAarpInstState"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAarpInstOperFlags"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAarpInstPeerPriority"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAarpInstPeerState"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAarpInstPeerOperFlags"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAarpInstPeerSubRefType"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAarpCommandControl"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAarpServPointType"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAarpServPoint"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxBsxRedundancyObjGroup = tmnxBsxRedundancyObjGroup.setStatus('current')
tmnxBsxHttpEnrichObjGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 63, 2, 20))
tmnxBsxHttpEnrichObjGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 63, 2, 20, 1)).setObjects(("TIMETRA-BSX-NG-MIB", "tmnxBsxHttpEnrichLastChTime"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxHttpEnrichFieldLastChTime"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxHttpEnrichRowStatus"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxHttpEnrichRowLastCh"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxHttpEnrichEnabled"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxHttpEnrichDescription"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxHttpEnrichFieldRowStatus"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxHttpEnrichFieldRowLastCh"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxHttpEnrichFieldHeaderName"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpHttpEnrichName"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxBsxHttpEnrichObjGroup = tmnxBsxHttpEnrichObjGroup.setStatus('current')
tmnxBsxHttpEnrichStatObjGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 63, 2, 20, 2)).setObjects(("TIMETRA-BSX-NG-MIB", "tmnxBsxHttpEnrichStatDiscontTime"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxHttpEnrichHCNumEnriched"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxHttpEnrichNumEnrichedLo"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxHttpEnrichNumEnrichedHi"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxHttpEnrichHCNumNoResource"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxHttpEnrichNumNoResourceLo"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxHttpEnrichNumNoResourceHi"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxHttpEnrichHCMissngSubData"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxHttpEnrichMissngSubDataLo"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxHttpEnrichMissngSubDataHi"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxHttpEnrichHCTplNotEnabled"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxHttpEnrichTplNotEnabledLo"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxHttpEnrichTplNotEnabledHi"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxHttpEnrichHCTrafficChar"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxHttpEnrichTrafficCharLo"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxHttpEnrichTrafficCharHi"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxBsxHttpEnrichStatObjGroup = tmnxBsxHttpEnrichStatObjGroup.setStatus('current')
tmnxBsxRadiusAccountingGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 63, 2, 21))
tmnxBsxRadiusAccountingObjGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 63, 2, 21, 1)).setObjects(("TIMETRA-BSX-NG-MIB", "tmnxBsxAppChargeGrp"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAppGrpChargeGrp"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxChargeGrpRowStatus"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxChargeGrpDescription"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxChargeGrpExportId"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxChargeGrpLastChTime"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxChargeGrpRowLastCh"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxPlcyCfgLastChTime"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxPlcyDefChargeGrp"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxPlcyRowLastCh"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxStatAaAcctCfgRadiusPlcy"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxStatAaSubCfgExportMethod"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxBsxRadiusAccountingObjGroup = tmnxBsxRadiusAccountingObjGroup.setStatus('current')
tmnxBsxRadApObjGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 63, 2, 21, 2)).setObjects(("TIMETRA-BSX-NG-MIB", "tmnxBsxRadApLastChTime"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxRadApServLastChTime"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxRadApRowStatus"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxRadApRowLastChange"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxRadApDescription"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxRadApServerRetry"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxRadApServerTimeout"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxRadApServerVRtrID"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxRadApServerSrcAddrType"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxRadApServerSrcAddr"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxRadApServerAlgorithm"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxRadApIntrmUpdateInterval"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxRadApSignfcntChangeDelta"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxRadApServRowStatus"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxRadApServRowLastChange"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxRadApServAddrType"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxRadApServAddr"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxRadApServSecret"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxRadApServAcctPort"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxRadApServOperState"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxBsxRadApObjGroup = tmnxBsxRadApObjGroup.setStatus('current')
tmnxBsxRadApStatObjGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 63, 2, 21, 3)).setObjects(("TIMETRA-BSX-NG-MIB", "tmnxBsxRadApTxRequests"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxRadApRxResponses"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxRadApReqTimeouts"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxRadApSendRetries"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxRadApSendFail"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxRadApServTxRequests"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxRadApServRxResponses"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxRadApServReqTimeouts"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxRadApServReqSendFail"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxBsxRadApStatObjGroup = tmnxBsxRadApStatObjGroup.setStatus('current')
mibBuilder.exportSymbols("TIMETRA-BSX-NG-MIB", tmnxBsxHttpRdStatHCNotRedir=tmnxBsxHttpRdStatHCNotRedir, tmnxBsxAarpCommandTable=tmnxBsxAarpCommandTable, tmnxBsxAaSubAppProfName=tmnxBsxAaSubAppProfName, tmnxBsxStatAaSubSdyHCTermFlwDur=tmnxBsxStatAaSubSdyHCTermFlwDur, tmnxBsxRadApServAddr=tmnxBsxRadApServAddr, tmnxBsxTransPrefSubIsRemote=tmnxBsxTransPrefSubIsRemote, tmnxBsxCflowdPerfExpRowLastChnge=tmnxBsxCflowdPerfExpRowLastChnge, tmnxBsxCflowdPerfExpTable=tmnxBsxCflowdPerfExpTable, tmnxBsxGrpStatusHCOctsDisCongOut=tmnxBsxGrpStatusHCOctsDisCongOut, tmnxBsxStatAaSubSdyOctsDnyFmSb=tmnxBsxStatAaSubSdyOctsDnyFmSb, tmnxBsxTransPrefEntryLastChTime=tmnxBsxTransPrefEntryLastChTime, tmnxBsxTransPrefPolicyEntry=tmnxBsxTransPrefPolicyEntry, tmnxBsxTransIpPlcySubRowLastCh=tmnxBsxTransIpPlcySubRowLastCh, tmnxBsxAaSubSumTable=tmnxBsxAaSubSumTable, tmnxBsxGrpStatusPktsPolicyByps=tmnxBsxGrpStatusPktsPolicyByps, tmnxBsxAarpInstPeerEPSapPortId=tmnxBsxAarpInstPeerEPSapPortId, tmnxBsxAaSubSumOctsAdmToSb=tmnxBsxAaSubSumOctsAdmToSb, tmnxBsxStatAaSubSdyTermFlws=tmnxBsxStatAaSubSdyTermFlws, tmnxBsxCflowdCollRowStatus=tmnxBsxCflowdCollRowStatus, tmnxBsxAqpDscp=tmnxBsxAqpDscp, tmnxBsxCustProtExprStr=tmnxBsxCustProtExprStr, tmnxBsxStatAaSubHCFlwsDnyToSb=tmnxBsxStatAaSubHCFlwsDnyToSb, tmnxBsxStatAaSubSdyFlwsDnyFmSb=tmnxBsxStatAaSubSdyFlwsDnyFmSb, tmnxBsxHttpRedirErrEntry=tmnxBsxHttpRedirErrEntry, tmnxBsxAqpDstAddressOp=tmnxBsxAqpDstAddressOp, tmnxBsxStatAaFlwsAdmToSb=tmnxBsxStatAaFlwsAdmToSb, tmnxBsxCflowdStatusHCUSupSSRCSt=tmnxBsxCflowdStatusHCUSupSSRCSt, tmnxBsxTransitObjs=tmnxBsxTransitObjs, tmnxBsxGrpStatusIngQEntry=tmnxBsxGrpStatusIngQEntry, tmnxBsxStatAaAppFilterHCFlows=tmnxBsxStatAaAppFilterHCFlows, tmnxBsxTransitIpPolicyDhcp=tmnxBsxTransitIpPolicyDhcp, tmnxBsxHttpPcyRdStatOutOfResLo=tmnxBsxHttpPcyRdStatOutOfResLo, tmnxBsxAppFilterProtocolOp=tmnxBsxAppFilterProtocolOp, tmnxBsxCflowdStatusUSupSSRCStLo=tmnxBsxCflowdStatusUSupSSRCStLo, tmnxBsxGrpStatusIngQFwdOutPPkts=tmnxBsxGrpStatusIngQFwdOutPPkts, tmnxBsxIsaAaGrpIngressResvCbs=tmnxBsxIsaAaGrpIngressResvCbs, tmnxBsxIsaAaGrpToSubWaSBfHiWmk=tmnxBsxIsaAaGrpToSubWaSBfHiWmk, tmnxBsxAqpDescription=tmnxBsxAqpDescription, tmnxBsxIsaAaGrpFailToMode=tmnxBsxIsaAaGrpFailToMode, tmnxBsxTListAttribValue=tmnxBsxTListAttribValue, tmnxBsxHttpEnrichRowLastCh=tmnxBsxHttpEnrichRowLastCh, tmnxBsxAaSubSumActFlwsFmSb=tmnxBsxAaSubSumActFlwsFmSb, tmnxBsxCflowdCollLastChangeTime=tmnxBsxCflowdCollLastChangeTime, tmnxBsxCflowdTable=tmnxBsxCflowdTable, tmnxBsxAppAppGroup=tmnxBsxAppAppGroup, tmnxBsxAppGrpAdminState=tmnxBsxAppGrpAdminState, tmnxBsxStatAaSubActFlwsToSb=tmnxBsxStatAaSubActFlwsToSb, tmnxBsxTransitIpPolicyRadius=tmnxBsxTransitIpPolicyRadius, tmnxBsxAarpInstOperStateChanged=tmnxBsxAarpInstOperStateChanged, TmnxBsxPolicerType=TmnxBsxPolicerType, tmnxBsxFlowFullHighWatermark=tmnxBsxFlowFullHighWatermark, tmnxBsxGrpStatusHCOctsIn=tmnxBsxGrpStatusHCOctsIn, tmnxBsxHttpRdStatTable=tmnxBsxHttpRdStatTable, tmnxBsxCflowdExpStatTable=tmnxBsxCflowdExpStatTable, tmnxBsxAaWap1xRowLastChange=tmnxBsxAaWap1xRowLastChange, tmnxBsxGrpStatusHCOctsOut=tmnxBsxGrpStatusHCOctsOut, tmnxBsxAaSubSumFlwsAdmToSb=tmnxBsxAaSubSumFlwsAdmToSb, tmnxBsxAppCfgTable=tmnxBsxAppCfgTable, tmnxBsxHttpRedirErrCode=tmnxBsxHttpRedirErrCode, tmnxBsxGrpMdaRowLastChange=tmnxBsxGrpMdaRowLastChange, tmnxBsxTransitIpPolicyAddrEntry=tmnxBsxTransitIpPolicyAddrEntry, tmnxBsxIsaLoadBalUnSub=tmnxBsxIsaLoadBalUnSub, tmnxBsxGrpStatusHCPktSzIncPk=tmnxBsxGrpStatusHCPktSzIncPk, tmnxBsxStatAaNumSubscribers=tmnxBsxStatAaNumSubscribers, tmnxBsxAaSubscriberAcctDataLoss=tmnxBsxAaSubscriberAcctDataLoss, tmnxBsxStatAaSubSdyCfgEntry=tmnxBsxStatAaSubSdyCfgEntry, tmnxBsxGrpStatusPktsDisCongMda=tmnxBsxGrpStatusPktsDisCongMda, tmnxBsxCflowdPerfExpEntry=tmnxBsxCflowdPerfExpEntry, tmnxBsxHttpRedirEnabled=tmnxBsxHttpRedirEnabled, tmnxBsxGrpStatusHCOctsFromMda=tmnxBsxGrpStatusHCOctsFromMda, tmnxBsxCflowdStatusHCPktsSent=tmnxBsxCflowdStatusHCPktsSent, tmnxBsxHttpEnrichStatEntry=tmnxBsxHttpEnrichStatEntry, tmnxBsxAsoDefValName=tmnxBsxAsoDefValName, tmnxBsxCflowdCollVersion=tmnxBsxCflowdCollVersion, tmnxBsxPolicyGroupV8v0=tmnxBsxPolicyGroupV8v0, TmnxBsxAaSubStatsInterval=TmnxBsxAaSubStatsInterval, tmnxBsxGrpStatusHCOctsToMda=tmnxBsxGrpStatusHCOctsToMda, tmnxBsxStatIsaAaCfgLastChTime=tmnxBsxStatIsaAaCfgLastChTime, tmnxBsxAppProfCharValName=tmnxBsxAppProfCharValName, tmnxBsxAarpServPointTable=tmnxBsxAarpServPointTable, tmnxBsxCflowdStatusHCRecDropped=tmnxBsxCflowdStatusHCRecDropped, tmnxBsxGrpStatusFlows=tmnxBsxGrpStatusFlows, tmnxBsxGrpStatusEgrQEntry=tmnxBsxGrpStatusEgrQEntry, tmnxBsxAppFilterExprEntry=tmnxBsxAppFilterExprEntry, tmnxBsxStatAaSubSdyLngDurFlws=tmnxBsxStatAaSubSdyLngDurFlws, tmnxBsxTransPrefSubRowStatus=tmnxBsxTransPrefSubRowStatus, tmnxBsxAarpInstState=tmnxBsxAarpInstState, tmnxBsxGrpStatusHCPktsIn=tmnxBsxGrpStatusHCPktsIn, tmnxBsxStatAaSubHCFlwsDnyFmSb=tmnxBsxStatAaSubHCFlwsDnyFmSb, tmnxBsxAppFilterServerAddrType=tmnxBsxAppFilterServerAddrType, tmnxBsxStatAaSubSdyRowStatus=tmnxBsxStatAaSubSdyRowStatus, tmnxBsxPolicyGroups=tmnxBsxPolicyGroups, tmnxBsxNotifyActionStatus=tmnxBsxNotifyActionStatus, tmnxBsxCustProtExprOffset=tmnxBsxCustProtExprOffset, tmnxBsxChargeGrpPolicyVersion=tmnxBsxChargeGrpPolicyVersion, tmnxBsxAqpApplicationOp=tmnxBsxAqpApplicationOp, tmnxBsxCustProtEntry=tmnxBsxCustProtEntry, tmnxBsxStatAaSubTermFlws=tmnxBsxStatAaSubTermFlws, tmnxBsxIsaAaGrpEntry=tmnxBsxIsaAaGrpEntry, tmnxBsxGrpStatusOctsDiscErrors=tmnxBsxGrpStatusOctsDiscErrors, tmnxBsxPolicerCBS=tmnxBsxPolicerCBS, tmnxBsxAaSubSumFlwsAdmFmSb=tmnxBsxAaSubSumFlwsAdmFmSb, tmnxBsxAaGrpPartAaSubRemote=tmnxBsxAaGrpPartAaSubRemote, tmnxBsxStatAaSubSdyActFlwsFmSb=tmnxBsxStatAaSubSdyActFlwsFmSb, tmnxBsxStatAaHCPktsAdmToSb=tmnxBsxStatAaHCPktsAdmToSb, tmnxBsxTransIpPolRadDiscError=tmnxBsxTransIpPolRadDiscError, tmnxBsxTransPrefEntry=tmnxBsxTransPrefEntry, tmnxBsxRadApServerSrcAddr=tmnxBsxRadApServerSrcAddr, tmnxBsxGrpStatusEgrQHCDroOutPOcts=tmnxBsxGrpStatusEgrQHCDroOutPOcts, tmnxBsxAaSubAsoValTable=tmnxBsxAaSubAsoValTable, tmnxBsxHttpEnrichTable=tmnxBsxHttpEnrichTable, tmnxBsxPolicerCIRAdaptation=tmnxBsxPolicerCIRAdaptation, tmnxBsxHttpRedirErrEnabled=tmnxBsxHttpRedirErrEnabled, tmnxBsxAaWap1xEntry=tmnxBsxAaWap1xEntry, tmnxBsxCflowdScalars=tmnxBsxCflowdScalars, tmnxBsxStatAaHCFlwsAdmFmSb=tmnxBsxStatAaHCFlwsAdmFmSb, tmnxBsxAqpSubscriber=tmnxBsxAqpSubscriber, tmnxBsxAaSubPolicerTable=tmnxBsxAaSubPolicerTable, tmnxBsxBitRateHighWatermark=tmnxBsxBitRateHighWatermark, tmnxBsxRadApServRowLastChange=tmnxBsxRadApServRowLastChange, tmnxBsxGrpStatusHCPktsOutPChipEr=tmnxBsxGrpStatusHCPktsOutPChipEr, tmnxBsxGrpStatusIngQHCDroInPPkts=tmnxBsxGrpStatusIngQHCDroInPPkts, tmnxBsxStatAaType=tmnxBsxStatAaType, tmnxBsxAqpPolicyVersion=tmnxBsxAqpPolicyVersion, tmnxBsxAaSubSumHCPktsDnyToSb=tmnxBsxAaSubSumHCPktsDnyToSb, tmnxBsxPlcyPolicyVersion=tmnxBsxPlcyPolicyVersion, tmnxBsxAppFilterServerAddrOp=tmnxBsxAppFilterServerAddrOp, tmnxBsxTListTableLastUpdateT=tmnxBsxTListTableLastUpdateT, tmnxBsxCflowdExpStatHCRecDropped=tmnxBsxCflowdExpStatHCRecDropped, tmnxBsxPolicyObjs=tmnxBsxPolicyObjs, tmnxBsxCflowdObjs=tmnxBsxCflowdObjs, tmnxBsxHttpRedirErrName=tmnxBsxHttpRedirErrName, tmnxBsxTransitIpPolicySubEntry=tmnxBsxTransitIpPolicySubEntry, TmnxBsxPolicyVersion=TmnxBsxPolicyVersion, tmnxBsxStatAaSubSdyOctsAdmToSb=tmnxBsxStatAaSubSdyOctsAdmToSb, tmnxBsxIsaAaSubLoadBalance=tmnxBsxIsaAaSubLoadBalance, tmnxBsxTransIpPlcySubRowStatus=tmnxBsxTransIpPlcySubRowStatus, tmnxBsxGrpStatusPktSzDecPkHi=tmnxBsxGrpStatusPktSzDecPkHi, tmnxBsxChargeGrpDescription=tmnxBsxChargeGrpDescription, tmnxBsxIsaAaGrpLoadBalanceStatus=tmnxBsxIsaAaGrpLoadBalanceStatus, tmnxBsxAqpStatsFlows=tmnxBsxAqpStatsFlows, tmnxBsxStatAaSubSdyShrtDurFlws=tmnxBsxStatAaSubSdyShrtDurFlws, tmnxBsxAaSubSumHCPktsAdmToSb=tmnxBsxAaSubSumHCPktsAdmToSb, tmnxBsxAaSubPolResExceededClear=tmnxBsxAaSubPolResExceededClear, tmnxBsxPolicerRowStatus=tmnxBsxPolicerRowStatus, tmnxBsxGrpStatusIngQDroOutPOcts=tmnxBsxGrpStatusIngQDroOutPOcts, tmnxBsxAppProfCharCharName=tmnxBsxAppProfCharCharName, tmnxBsxStatAaSubSdyDiscontTime=tmnxBsxStatAaSubSdyDiscontTime, tmnxBsxIsaAaGrpDescription=tmnxBsxIsaAaGrpDescription, tmnxBsxAaSubStatsInterval=tmnxBsxAaSubStatsInterval, tmnxBsxCustProtEntryId=tmnxBsxCustProtEntryId, tmnxBsxMdaGroups=tmnxBsxMdaGroups, tmnxBsxStatAaTable=tmnxBsxStatAaTable, tmnxBsxStatIsaAaCfgTable=tmnxBsxStatIsaAaCfgTable, tmnxBsxStatAaHCOctsAdmToSb=tmnxBsxStatAaHCOctsAdmToSb, tmnxBsxIsaAaGrpPacketRate=tmnxBsxIsaAaGrpPacketRate, tmnxBsxCflowdPerfLastChangeTime=tmnxBsxCflowdPerfLastChangeTime, tmnxBsxAaSubSumHCOctsAdmToSb=tmnxBsxAaSubSumHCOctsAdmToSb, tmnxBsxHttpRdStatDiscontTime=tmnxBsxHttpRdStatDiscontTime, tmnxBsxAaSubSumAppProfName=tmnxBsxAaSubSumAppProfName, tmnxBsxAppFilterServerPortFpp=tmnxBsxAppFilterServerPortFpp, tmnxBsxOvrdAaSubLastChTime=tmnxBsxOvrdAaSubLastChTime, tmnxBsxAqpDrop=tmnxBsxAqpDrop, tmnxBsxCflowdStatusRecReported=tmnxBsxCflowdStatusRecReported, tmnxBsxStatAaAcctCfgType=tmnxBsxStatAaAcctCfgType, tmnxBsxIsaAaGrpToSbWaSBufOvldClr=tmnxBsxIsaAaGrpToSbWaSBufOvldClr, tmnxBsxAsoValTable=tmnxBsxAsoValTable, tmnxBsxGrpStatusPktSzIncPkHi=tmnxBsxGrpStatusPktSzIncPkHi, tmnxBsxCflowdExpStatUSupSSRCStLo=tmnxBsxCflowdExpStatUSupSSRCStLo, tmnxBsxAarpInstPeerPriority=tmnxBsxAarpInstPeerPriority, tmnxBsxCustProtPolicyVersion=tmnxBsxCustProtPolicyVersion, tmnxBsxTransPrefPolicyRowLastCh=tmnxBsxTransPrefPolicyRowLastCh, tmnxBsxChargeGrpExportId=tmnxBsxChargeGrpExportId, tmnxBsxOvrdAaSubTable=tmnxBsxOvrdAaSubTable, tmnxBsxAppProfCharPolicyVersion=tmnxBsxAppProfCharPolicyVersion, tmnxBsxStatAaDiscontTime=tmnxBsxStatAaDiscontTime, tmnxBsxStatAaSubSdyPktsDnyToSb=tmnxBsxStatAaSubSdyPktsDnyToSb, tmnxBsxStatAaSubOctsAdmFmSb=tmnxBsxStatAaSubOctsAdmFmSb, tmnxBsxStatAaTermFlwDur=tmnxBsxStatAaTermFlwDur, tmnxBsxHttpPcyRdStatHCOutOfRes=tmnxBsxHttpPcyRdStatHCOutOfRes, tmnxBsxGroups=tmnxBsxGroups, tmnxBsxIsaLoadBalUnSubEntry=tmnxBsxIsaLoadBalUnSubEntry, tmnxBsxTransIpPolRadCoAAudit=tmnxBsxTransIpPolRadCoAAudit, tmnxBsxAaSubMdaMdaNum=tmnxBsxAaSubMdaMdaNum, tmnxBsxHttpEnrichTplNotEnabledHi=tmnxBsxHttpEnrichTplNotEnabledHi, tmnxBsxStatAaHCFlwsDnyFmSb=tmnxBsxStatAaHCFlwsDnyFmSb, tmnxBsxIsaAaGroupIndex=tmnxBsxIsaAaGroupIndex, tmnxBsxObsoleteGroupsV9v0=tmnxBsxObsoleteGroupsV9v0, tmnxBsxPolicerType=tmnxBsxPolicerType, tmnxBsxStatAaSubHCOctsDnyToSb=tmnxBsxStatAaSubHCOctsDnyToSb, tmnxBsxTransPrefEntryNetAddrLen=tmnxBsxTransPrefEntryNetAddrLen, tmnxBsxAsoRowStatus=tmnxBsxAsoRowStatus, TmnxBsxExprSubStringIndex=TmnxBsxExprSubStringIndex, tmnxBsxProtObsolete=tmnxBsxProtObsolete, tmnxBsxCflowdGroupV9v0=tmnxBsxCflowdGroupV9v0, tmnxBsxProtTable=tmnxBsxProtTable, tmnxBsxHttpEnrichName=tmnxBsxHttpEnrichName, tmnxBsxTransPrefEntrySubAddrLen=tmnxBsxTransPrefEntrySubAddrLen, tmnxBsxAppProfDivert=tmnxBsxAppProfDivert, tmnxBsxGrpStatusTrafficRatePeak=tmnxBsxGrpStatusTrafficRatePeak, tmnxBsxAarpInstEntry=tmnxBsxAarpInstEntry, tmnxBsxHttpEnrichFieldName=tmnxBsxHttpEnrichFieldName, tmnxBsxTransitIpPolicyIPv6PfxLen=tmnxBsxTransitIpPolicyIPv6PfxLen, tmnxBsxPolicerAdminPIR=tmnxBsxPolicerAdminPIR, tmnxBsxStatAaAcctCfgRadiusPlcy=tmnxBsxStatAaAcctCfgRadiusPlcy, tmnxBsxStatAaSubActFlwsFmSb=tmnxBsxStatAaSubActFlwsFmSb, tmnxBsxAaSubSumFlwsDnyToSb=tmnxBsxAaSubSumFlwsDnyToSb, tmnxBsxAaWap1xAdminState=tmnxBsxAaWap1xAdminState, tmnxBsxAaSubSumEntry=tmnxBsxAaSubSumEntry, tmnxBsxGrpStatusIngQDroOutPPkts=tmnxBsxGrpStatusIngQDroOutPPkts, tmnxBsxAqpStatsConflicts=tmnxBsxAqpStatsConflicts, tmnxBsxOvrdAaSubCharEntry=tmnxBsxOvrdAaSubCharEntry, tmnxBsxStatsGroupV9v0=tmnxBsxStatsGroupV9v0, tmnxBsxGrpStatusPktsIn=tmnxBsxGrpStatusPktsIn, tmnxBsxGrpStatusSubsAverage=tmnxBsxGrpStatusSubsAverage, tmnxBsxCompliances=tmnxBsxCompliances, tmnxBsxHttpRedirErrHttpHost=tmnxBsxHttpRedirErrHttpHost, tmnxBsxHttpEnrichHCMissngSubData=tmnxBsxHttpEnrichHCMissngSubData, tmnxBsxRadApTxRequests=tmnxBsxRadApTxRequests, tmnxBsxGrpStatusEgrQDroInPPkts=tmnxBsxGrpStatusEgrQDroInPPkts, tmnxBsxGrpStatusTable=tmnxBsxGrpStatusTable, TmnxBsxStatIsaAaCfgType=TmnxBsxStatIsaAaCfgType, tmnxBsxStatAaHCShrtDurFlws=tmnxBsxStatAaHCShrtDurFlws, tmnxBsxTransIpPlcyAddrRowStatus=tmnxBsxTransIpPlcyAddrRowStatus, tmnxBsxOvrdAaSubEntry=tmnxBsxOvrdAaSubEntry, tmnxBsxRadApRxResponses=tmnxBsxRadApRxResponses, tmnxBsxGrpStatusPktsDiscErrors=tmnxBsxGrpStatusPktsDiscErrors, tmnxBsxIsaAaGrpIngressPool=tmnxBsxIsaAaGrpIngressPool, tmnxBsxCflowdPerfFlowRate=tmnxBsxCflowdPerfFlowRate, tmnxBsxAaSubSumHCOctsDnyFmSb=tmnxBsxAaSubSumHCOctsDnyFmSb, tmnxBsxIsaAaGrpLastChangeTime=tmnxBsxIsaAaGrpLastChangeTime, tmnxBsxTransitIpPolicyId=tmnxBsxTransitIpPolicyId, tmnxBsxGrpStatusSubsCurrent=tmnxBsxGrpStatusSubsCurrent, tmnxBsxAdminOwner=tmnxBsxAdminOwner, tmnxBsxTransIpPlcyAddrSubscriber=tmnxBsxTransIpPlcyAddrSubscriber, tmnxBsxAppFilterServerPort=tmnxBsxAppFilterServerPort, tmnxBsxHttpRedirName=tmnxBsxHttpRedirName, tmnxBsxCflowdExpStatFlowsNoRes=tmnxBsxCflowdExpStatFlowsNoRes, tmnxBsxMdaGroup=tmnxBsxMdaGroup, tmnxBsxRadApServRowStatus=tmnxBsxRadApServRowStatus, tmnxBsxAqpAdminState=tmnxBsxAqpAdminState, tmnxBsxStatAaAppFilterFlowsLo=tmnxBsxStatAaAppFilterFlowsLo, tmnxBsxIsaAaGrpToSubResvCbs=tmnxBsxIsaAaGrpToSubResvCbs, tmnxBsxGrpStatusHCOctsPolicyByps=tmnxBsxGrpStatusHCOctsPolicyByps, tmnxBsxAppFilterRowStatus=tmnxBsxAppFilterRowStatus, tmnxBsxHttpRdStatHCNotRedirFType=tmnxBsxHttpRdStatHCNotRedirFType, tmnxBsxAppFilterServerAddr=tmnxBsxAppFilterServerAddr, tmnxBsxHttpRedirHttpHost=tmnxBsxHttpRedirHttpHost, tmnxBsxStatAaSubDiscontTime=tmnxBsxStatAaSubDiscontTime, tmnxBsxStaticObjGroup=tmnxBsxStaticObjGroup, tmnxBsxHttpEnrichFieldTable=tmnxBsxHttpEnrichFieldTable, tmnxBsxRadApDescription=tmnxBsxRadApDescription, tmnxBsxRadApServAddrType=tmnxBsxRadApServAddrType, tmnxBsxPolicerMBS=tmnxBsxPolicerMBS)
mibBuilder.exportSymbols("TIMETRA-BSX-NG-MIB", tmnxBsxRadApStatEntry=tmnxBsxRadApStatEntry, tmnxBsxTransIpPlcyAddrLastChTime=tmnxBsxTransIpPlcyAddrLastChTime, tmnxBsxMdaGroupMG3v0=tmnxBsxMdaGroupMG3v0, tmnxBsxAsoTable=tmnxBsxAsoTable, tmnxBsxHttpPcyRdStatTable=tmnxBsxHttpPcyRdStatTable, tmnxBsxTransPrefPolicySubsCount=tmnxBsxTransPrefPolicySubsCount, tmnxBsxCustProtExprEntry=tmnxBsxCustProtExprEntry, tmnxBsxAppFilterIpProtocolNumOp=tmnxBsxAppFilterIpProtocolNumOp, tmnxBsxAarpServPoint=tmnxBsxAarpServPoint, tmnxBsxStatAaPktsDnyToSb=tmnxBsxStatAaPktsDnyToSb, tmnxBsxIsaAaGrpCapCostThres=tmnxBsxIsaAaGrpCapCostThres, tmnxBsxStatAaSubPktsDnyToSb=tmnxBsxStatAaSubPktsDnyToSb, tmnxBsxAsoValPolicyVersion=tmnxBsxAsoValPolicyVersion, tmnxBsxAppProfCharTable=tmnxBsxAppProfCharTable, tmnxBsxAaWap1xTable=tmnxBsxAaWap1xTable, tmnxBsxGrpMdaTransitIpSubs=tmnxBsxGrpMdaTransitIpSubs, tmnxBsxStatAaSubHCOctsAdmFmSb=tmnxBsxStatAaSubHCOctsAdmFmSb, tmnxBsxCflowdCollStatEntry=tmnxBsxCflowdCollStatEntry, tmnxBsxRadApServIndex=tmnxBsxRadApServIndex, tmnxBsxAaSubSumActFlwsToSb=tmnxBsxAaSubSumActFlwsToSb, tmnxBsxTransitGroup=tmnxBsxTransitGroup, tmnxBsxAaSubAsoValName=tmnxBsxAaSubAsoValName, tmnxBsxStatAaSubFlwsDnyFmSb=tmnxBsxStatAaSubFlwsDnyFmSb, tmnxBsxCflowdStatusUSupSSRCStHi=tmnxBsxCflowdStatusUSupSSRCStHi, tmnxBsxAarpInstPeerIpType=tmnxBsxAarpInstPeerIpType, tmnxBsxHttpEnrichEnabled=tmnxBsxHttpEnrichEnabled, tmnxBsxIsaAaGrpFromSubResvCbs=tmnxBsxIsaAaGrpFromSubResvCbs, tmnxBsxCflowdCollOperState=tmnxBsxCflowdCollOperState, tmnxBsxNotifyObjsGroupV9v0=tmnxBsxNotifyObjsGroupV9v0, tmnxBsxAppFilterServerPortLow=tmnxBsxAppFilterServerPortLow, tmnxBsxRadApObjGroup=tmnxBsxRadApObjGroup, tmnxBsxAarpServPointEntry=tmnxBsxAarpServPointEntry, tmnxBsxPolicyScalars=tmnxBsxPolicyScalars, tmnxBsxStatAaTermFlws=tmnxBsxStatAaTermFlws, tmnxBsxAaSubTransitIpPolicyId=tmnxBsxAaSubTransitIpPolicyId, tmnxBsxStatIsaAaCfgCollStats=tmnxBsxStatIsaAaCfgCollStats, tmnxBsxTransitIpPersistenceWarn=tmnxBsxTransitIpPersistenceWarn, tmnxBsxCflowdExpType=tmnxBsxCflowdExpType, tmnxBsxStatAaSubSdyHCPktsDnyToSb=tmnxBsxStatAaSubSdyHCPktsDnyToSb, tmnxBsxAsoValValName=tmnxBsxAsoValValName, tmnxBsxTransPrefEntrySubAddr=tmnxBsxTransPrefEntrySubAddr, tmnxBsxStatAaSubShrtDurFlws=tmnxBsxStatAaSubShrtDurFlws, tmnxBsxCflowdPerfExpRateNum=tmnxBsxCflowdPerfExpRateNum, tmnxBsxRadApServerSrcAddrType=tmnxBsxRadApServerSrcAddrType, tmnxBsxAppFilterAdminState=tmnxBsxAppFilterAdminState, tmnxBsxAaSubSumHCShrtDurFlws=tmnxBsxAaSubSumHCShrtDurFlws, TmnxBsxPolicerAction=TmnxBsxPolicerAction, tmnxBsxGrpStatusEgrQFwdOutPPkts=tmnxBsxGrpStatusEgrQFwdOutPPkts, tmnxBsxAppFilterIpProtocolNum=tmnxBsxAppFilterIpProtocolNum, tmnxBsxGrpStatusPacketRate=tmnxBsxGrpStatusPacketRate, tmnxBsxAqpSrcAddressLength=tmnxBsxAqpSrcAddressLength, tmnxBsxGrpStatusHCPktsDiscPolicy=tmnxBsxGrpStatusHCPktsDiscPolicy, tmnxBsxGrpStatusTrafficRateAvg=tmnxBsxGrpStatusTrafficRateAvg, tmnxBsxOvrdAaSubRowLastCh=tmnxBsxOvrdAaSubRowLastCh, tmnxBsxAaSubMdaSlotNum=tmnxBsxAaSubMdaSlotNum, tmnxBsxTransPrefSumSubAddrLen=tmnxBsxTransPrefSumSubAddrLen, tmnxBsxAaGrpPartRowLastChange=tmnxBsxAaGrpPartRowLastChange, tmnxBsxRadApServSecret=tmnxBsxRadApServSecret, tmnxBsxAaSubPolResExStatus=tmnxBsxAaSubPolResExStatus, tmnxBsxTransIpPolRadCoAError=tmnxBsxTransIpPolRadCoAError, tmnxBsxHttpRdStatHCRedir=tmnxBsxHttpRdStatHCRedir, tmnxBsxHttpRedirDescription=tmnxBsxHttpRedirDescription, tmnxBsxAppFilterEntryId=tmnxBsxAppFilterEntryId, tmnxBsxAqpStatsTable=tmnxBsxAqpStatsTable, tmnxBsxHttpEnrichObjs=tmnxBsxHttpEnrichObjs, tmnxBsxAppGrpName=tmnxBsxAppGrpName, tmnxBsxNotificationGroupV7v0=tmnxBsxNotificationGroupV7v0, TmnxBsxActionStatus=TmnxBsxActionStatus, tmnxBsxAaWap1xLastChangeTime=tmnxBsxAaWap1xLastChangeTime, tmnxBsxStatAaSubLastChTime=tmnxBsxStatAaSubLastChTime, tmnxBsxStatAaSubSdyPktsDnyFmSb=tmnxBsxStatAaSubSdyPktsDnyFmSb, tmnxBsxTransPrefSumAppProfNm=tmnxBsxTransPrefSumAppProfNm, tmnxBsxRadApServLastChTime=tmnxBsxRadApServLastChTime, tmnxBsxStatsGroups=tmnxBsxStatsGroups, tmnxBsxIsaAaGrpToSubQuePolicy=tmnxBsxIsaAaGrpToSubQuePolicy, tmnxBsxGrpStatusIngQFwdInPPkts=tmnxBsxGrpStatusIngQFwdInPPkts, tmnxBsxHttpEnrichTrafficCharHi=tmnxBsxHttpEnrichTrafficCharHi, tmnxBsxCflowdExpStatHCFlowsNoRes=tmnxBsxCflowdExpStatHCFlowsNoRes, tmnxBsxAaSubEntry=tmnxBsxAaSubEntry, tmnxBsxGrpStatusHCOctsDiscPolicy=tmnxBsxGrpStatusHCOctsDiscPolicy, tmnxBsxAaSubscribersUnassigned=tmnxBsxAaSubscribersUnassigned, tmnxBsxGrpStatusHCPktsPolicyByps=tmnxBsxGrpStatusHCPktsPolicyByps, tmnxBsxRadApServOperStateChange=tmnxBsxRadApServOperStateChange, tmnxBsxStatIsaAaCfgType=tmnxBsxStatIsaAaCfgType, tmnxBsxStatAaSubOctsAdmToSb=tmnxBsxStatAaSubOctsAdmToSb, tmnxBsxAaSubSumHCFlwsAdmToSb=tmnxBsxAaSubSumHCFlwsAdmToSb, tmnxBsxCflowdEntry=tmnxBsxCflowdEntry, tmnxBsxObjs=tmnxBsxObjs, TmnxBsxAaSubPolicerResStatus=TmnxBsxAaSubPolicerResStatus, tmnxBsxAarpInstDescription=tmnxBsxAarpInstDescription, tmnxBsxPlcyCfgEntry=tmnxBsxPlcyCfgEntry, tmnxBsxRadApSignfcntChangeDelta=tmnxBsxRadApSignfcntChangeDelta, tmnxBsxStatAaHCLngDurFlws=tmnxBsxStatAaHCLngDurFlws, tmnxBsxCflowdCollEntry=tmnxBsxCflowdCollEntry, tmnxBsxAqpSrcAddress=tmnxBsxAqpSrcAddress, tmnxBsxTListRowLastUpdateT=tmnxBsxTListRowLastUpdateT, tmnxBsxTListDescription=tmnxBsxTListDescription, tmnxBsxStatAaSubSdyHCFlwsAdmFmSb=tmnxBsxStatAaSubSdyHCFlwsAdmFmSb, tmnxBsxStatAaPktsDnyFmSb=tmnxBsxStatAaPktsDnyFmSb, tmnxBsxHttpRedirErrRowLastCh=tmnxBsxHttpRedirErrRowLastCh, tmnxBsxHttpPcyRdStatHCNotRedir=tmnxBsxHttpPcyRdStatHCNotRedir, tmnxBsxGrpStatusHCPktsToMda=tmnxBsxGrpStatusHCPktsToMda, tmnxBsxTransitIpPolicyDesc=tmnxBsxTransitIpPolicyDesc, tmnxBsxHttpEnrichHCTplNotEnabled=tmnxBsxHttpEnrichHCTplNotEnabled, tmnxBsxGrpStatusPktSzDecOcHi=tmnxBsxGrpStatusPktSzDecOcHi, tmnxBsxStatAaAcctLastChTime=tmnxBsxStatAaAcctLastChTime, tmnxBsxStatAaAcctCfgTable=tmnxBsxStatAaAcctCfgTable, tmnxBsxChargeGrpLastChTime=tmnxBsxChargeGrpLastChTime, tmnxBsxPolicerDescription=tmnxBsxPolicerDescription, tmnxBsxStatAaSubSdyHCMedDurFlws=tmnxBsxStatAaSubSdyHCMedDurFlws, tmnxBsxAarpInstOperFlags=tmnxBsxAarpInstOperFlags, tmnxBsxProtName=tmnxBsxProtName, tmnxBsxAsoCharName=tmnxBsxAsoCharName, tmnxBsxAppFilterEntry=tmnxBsxAppFilterEntry, tmnxBsxAppGrpStorageType=tmnxBsxAppGrpStorageType, tmnxBsxStatAaSubSdyHCFlwsAdmToSb=tmnxBsxStatAaSubSdyHCFlwsAdmToSb, tmnxBsxTransitIpPolicyLastChTime=tmnxBsxTransitIpPolicyLastChTime, tmnxBsxAqpDstPortOp=tmnxBsxAqpDstPortOp, tmnxBsxStatAaActFlwsFmSb=tmnxBsxStatAaActFlwsFmSb, tmnxBsxAqpStatsConflictsLo=tmnxBsxAqpStatsConflictsLo, tmnxBsxRadApServStatTable=tmnxBsxRadApServStatTable, tmnxBsxStatAaHCOctsAdmFmSb=tmnxBsxStatAaHCOctsAdmFmSb, tmnxBsxTListAttribName=tmnxBsxTListAttribName, tmnxBsxTransPrefPolicyDesc=tmnxBsxTransPrefPolicyDesc, tmnxBsxHttpEnrichFieldLastChTime=tmnxBsxHttpEnrichFieldLastChTime, tmnxBsxRadApRowLastChange=tmnxBsxRadApRowLastChange, TmnxBsxIsaAaGroupIndexOrZero=TmnxBsxIsaAaGroupIndexOrZero, tmnxBsxStatAaHCFlwsAdmToSb=tmnxBsxStatAaHCFlwsAdmToSb, tmnxBsxUpgrade=tmnxBsxUpgrade, tmnxBsxStatAaSubLngDurFlws=tmnxBsxStatAaSubLngDurFlws, tmnxBsxCflowdVolRate=tmnxBsxCflowdVolRate, tmnxBsxRadApSendFail=tmnxBsxRadApSendFail, tmnxBsxIsaAaGrpUnassignedTIpSubs=tmnxBsxIsaAaGrpUnassignedTIpSubs, tmnxBsxRedundancyObjGroup=tmnxBsxRedundancyObjGroup, tmnxBsxMdaGroupV7v0=tmnxBsxMdaGroupV7v0, tmnxBsxGrpMdaCapacityCost=tmnxBsxGrpMdaCapacityCost, tmnxBsxGrpMdaTransitIpAddrs=tmnxBsxGrpMdaTransitIpAddrs, tmnxBsxStatAaSubHCOctsAdmToSb=tmnxBsxStatAaSubHCOctsAdmToSb, tmnxBsxIsaAaGrpFcLastChangeTime=tmnxBsxIsaAaGrpFcLastChangeTime, tmnxBsxGrpStatusFlowSetupRate=tmnxBsxGrpStatusFlowSetupRate, tmnxBsxNotifyPrefix=tmnxBsxNotifyPrefix, tmnxBsxGrpMdaEntry=tmnxBsxGrpMdaEntry, tmnxBsxNotifyAaSubscriberType=tmnxBsxNotifyAaSubscriberType, tmnxBsxRadApServRxResponses=tmnxBsxRadApServRxResponses, tmnxBsxAqpHttpErrRedirName=tmnxBsxAqpHttpErrRedirName, tmnxBsxCflowdCollPort=tmnxBsxCflowdCollPort, tmnxBsxRadiusAccountingObjGroup=tmnxBsxRadiusAccountingObjGroup, tmnxBsxTransPrefTable=tmnxBsxTransPrefTable, tmnxBsxAqpAaSubscriberType=tmnxBsxAqpAaSubscriberType, tmnxBsxGrpStatusFlowsPeak=tmnxBsxGrpStatusFlowsPeak, tmnxBsxCflowdStatusTable=tmnxBsxCflowdStatusTable, tmnxBsxStatAaSubSdyCfgTable=tmnxBsxStatAaSubSdyCfgTable, tmnxBsxAqpStatsConflictsHi=tmnxBsxAqpStatsConflictsHi, tmnxBsxGrpMdaRowStatus=tmnxBsxGrpMdaRowStatus, tmnxBsxTListEntry=tmnxBsxTListEntry, tmnxBsxHttpRedirErrorCodeMsgSize=tmnxBsxHttpRedirErrorCodeMsgSize, tmnxBsxGrpMdaTransPrefV6RemEntr=tmnxBsxGrpMdaTransPrefV6RemEntr, tmnxBsxIsaAaGrpCapCostThresClear=tmnxBsxIsaAaGrpCapCostThresClear, TmnxBsxCflowdExpType=TmnxBsxCflowdExpType, tmnxBsxGrpStatusEgrQHCDroInPPkts=tmnxBsxGrpStatusEgrQHCDroInPPkts, tmnxBsxCflowdExpAdminState=tmnxBsxCflowdExpAdminState, tmnxBsxTransPrefSubRefCount=tmnxBsxTransPrefSubRefCount, tmnxBsxGrpStatusIngQHCDroInPOcts=tmnxBsxGrpStatusIngQHCDroInPOcts, tmnxBsxAqpSubscriberOp=tmnxBsxAqpSubscriberOp, TmnxBsxAarpServPointRole=TmnxBsxAarpServPointRole, tmnxBsxNotifications=tmnxBsxNotifications, tmnxBsxAqpMirrorSource=tmnxBsxAqpMirrorSource, tmnxBsxStatAaSubSdyLastChTime=tmnxBsxStatAaSubSdyLastChTime, tmnxBsxAaSubscriber=tmnxBsxAaSubscriber, tmnxBsxAqpFlowRatePolicer=tmnxBsxAqpFlowRatePolicer, tmnxBsxHttpEnrichMissngSubDataHi=tmnxBsxHttpEnrichMissngSubDataHi, tmnxBsxStatAaLngDurFlws=tmnxBsxStatAaLngDurFlws, tmnxBsxAppGrpPolicyVersion=tmnxBsxAppGrpPolicyVersion, tmnxBsxAppProfTable=tmnxBsxAppProfTable, tmnxBsxNotificationGroups=tmnxBsxNotificationGroups, tmnxBsxTransitIpSumIpOriginMask=tmnxBsxTransitIpSumIpOriginMask, tmnxBsxStatAaSubHCOctsDnyFmSb=tmnxBsxStatAaSubHCOctsDnyFmSb, tmnxBsxGrpStatusOctsInspected=tmnxBsxGrpStatusOctsInspected, tmnxBsxPlcyDefChargeGrp=tmnxBsxPlcyDefChargeGrp, tmnxBsxNotifyAaSubscriberName=tmnxBsxNotifyAaSubscriberName, tmnxBsxCflowdCollStatRecSent=tmnxBsxCflowdCollStatRecSent, tmnxBsxGrpStatusPktsDiscPolicy=tmnxBsxGrpStatusPktsDiscPolicy, tmnxBsxGrpStatusEgrQDroInPOcts=tmnxBsxGrpStatusEgrQDroInPOcts, tmnxBsxCflowdExpLastChangeTime=tmnxBsxCflowdExpLastChangeTime, tmnxBsxIsaAaGrpTransPrefV6NmEntr=tmnxBsxIsaAaGrpTransPrefV6NmEntr, tmnxBsxStatAaSubSdyHCPktsAdmFmSb=tmnxBsxStatAaSubSdyHCPktsAdmFmSb, tmnxBsxStatAaSubSdyHCFlwsDnyFmSb=tmnxBsxStatAaSubSdyHCFlwsDnyFmSb, tmnxBsxIsaAaGrpFailureV2=tmnxBsxIsaAaGrpFailureV2, tmnxBsxCustProtExprTable=tmnxBsxCustProtExprTable, tmnxBsxStaticObjGroups=tmnxBsxStaticObjGroups, tmnxBsxGrpStatusDiscontTime=tmnxBsxGrpStatusDiscontTime, tmnxBsxHttpRedirErrParticipantId=tmnxBsxHttpRedirErrParticipantId, tmnxBsxRadApServerAlgorithm=tmnxBsxRadApServerAlgorithm, tmnxBsxAaSubTransPrefPolicyId=tmnxBsxAaSubTransPrefPolicyId, tmnxBsxHttpRedirErrDescription=tmnxBsxHttpRedirErrDescription, tmnxBsxHttpEnrichFieldHeaderName=tmnxBsxHttpEnrichFieldHeaderName, tmnxBsxAarpInstOperState=tmnxBsxAarpInstOperState, tmnxBsxStatAaSubHCShrtDurFlws=tmnxBsxStatAaSubHCShrtDurFlws, tmnxBsxGrpStatusHCPktsInMda=tmnxBsxGrpStatusHCPktsInMda, tmnxBsxAppStorageType=tmnxBsxAppStorageType, TmnxBsxGranularity=TmnxBsxGranularity, TmnxBsxAaStatType=TmnxBsxAaStatType, tmnxBsxAqpHttpRedirFlowType=tmnxBsxAqpHttpRedirFlowType, tmnxBsxStatAaSubHCPktsAdmToSb=tmnxBsxStatAaSubHCPktsAdmToSb, tmnxBsxStatAaHCFlwsDnyToSb=tmnxBsxStatAaHCFlwsDnyToSb, tmnxBsxStatAaSubSdyPktsAdmFmSb=tmnxBsxStatAaSubSdyPktsAdmFmSb, tmnxBsxTransPrefEntryNetAddr=tmnxBsxTransPrefEntryNetAddr, tmnxBsxGrpStatusEgrQHCFwdOutPOcts=tmnxBsxGrpStatusEgrQHCFwdOutPOcts, tmnxBsxCustProtExprIndex=tmnxBsxCustProtExprIndex, tmnxBsxOvrdScalars=tmnxBsxOvrdScalars, tmnxBsxIsaAaGrpAaSubScale=tmnxBsxIsaAaGrpAaSubScale, tmnxBsxStatAaSubSdyHCShrtDurFlws=tmnxBsxStatAaSubSdyHCShrtDurFlws, tmnxBsxCflowdStatusHCFlowsNoRes=tmnxBsxCflowdStatusHCFlowsNoRes, tmnxBsxStaticObjScalars=tmnxBsxStaticObjScalars, tmnxBsxGrpStatusTrafficRate=tmnxBsxGrpStatusTrafficRate, tmnxBsxAaGrpPartDescription=tmnxBsxAaGrpPartDescription, tmnxBsxAdminCtrlEntry=tmnxBsxAdminCtrlEntry, tmnxBsxAqpStatsEntry=tmnxBsxAqpStatsEntry, tmnxBsxNotificationGroupV9v0=tmnxBsxNotificationGroupV9v0, TmnxBsxAarpCommand=TmnxBsxAarpCommand, tmnxBsxGrpMdaTransPrefEntries=tmnxBsxGrpMdaTransPrefEntries, tmnxBsxStatAaSubOctsDnyFmSb=tmnxBsxStatAaSubOctsDnyFmSb, tmnxBsxPolicerGranularity=tmnxBsxPolicerGranularity, tmnxBsxStatAaFlwsAdmFmSb=tmnxBsxStatAaFlwsAdmFmSb, tmnxBsxTransitIpSumTable=tmnxBsxTransitIpSumTable, tmnxBsxStatAaSubHCFlwsAdmToSb=tmnxBsxStatAaSubHCFlwsAdmToSb, tmnxBsxGrpStatusEgrQDroOutPOcts=tmnxBsxGrpStatusEgrQDroOutPOcts, tmnxBsxHttpRdStatOutOfResourceHi=tmnxBsxHttpRdStatOutOfResourceHi, tmnxBsxGrpStatusHCOctsInMda=tmnxBsxGrpStatusHCOctsInMda, tmnxBsxAarpInstPeerState=tmnxBsxAarpInstPeerState, tmnxBsxTListAttribRowLastUpdateT=tmnxBsxTListAttribRowLastUpdateT, tmnxBsxTransPrefEntryRowLastCh=tmnxBsxTransPrefEntryRowLastCh, tmnxBsxAaSubAsoValDerivedFrom=tmnxBsxAaSubAsoValDerivedFrom, tmnxBsxGrpStatusInQDirection=tmnxBsxGrpStatusInQDirection, tmnxBsxTransPrefEntryNetAddrType=tmnxBsxTransPrefEntryNetAddrType, tmnxBsxGrpStatusSubsDivertedAvg=tmnxBsxGrpStatusSubsDivertedAvg, tmnxBsxHttpRedirRowStatus=tmnxBsxHttpRedirRowStatus, tmnxBsxTransPrefSumNetAddr=tmnxBsxTransPrefSumNetAddr, tmnxBsxHttpRedirTable=tmnxBsxHttpRedirTable, tmnxBsxStatAaMedDurFlws=tmnxBsxStatAaMedDurFlws, tmnxBsxCflowdRowLastChange=tmnxBsxCflowdRowLastChange, tmnxBsxTransPrefSumNetAddrType=tmnxBsxTransPrefSumNetAddrType, tmnxBsxTListAttribEntry=tmnxBsxTListAttribEntry, tmnxBsxTransPrefSumNetAddrLen=tmnxBsxTransPrefSumNetAddrLen, tmnxBsxIsaAaGrpToSubPool=tmnxBsxIsaAaGrpToSubPool, tmnxBsxCflowdCollStatHCRecSent=tmnxBsxCflowdCollStatHCRecSent, tmnxBsxAqpSrcPortOp=tmnxBsxAqpSrcPortOp, tmnxBsxGrpStatusOctsInMda=tmnxBsxGrpStatusOctsInMda, TmnxBsxAarpInstState=TmnxBsxAarpInstState, tmnxBsxCustProtIpProtocolNum=tmnxBsxCustProtIpProtocolNum, tmnxBsxStatAaOctsAdmToSb=tmnxBsxStatAaOctsAdmToSb, tmnxBsxAqpSrcPortHighValue=tmnxBsxAqpSrcPortHighValue, tmnxBsxHttpRdStatNotRedirLo=tmnxBsxHttpRdStatNotRedirLo, tmnxBsxInfo=tmnxBsxInfo)
mibBuilder.exportSymbols("TIMETRA-BSX-NG-MIB", tmnxBsxTransitSeenIpGroup=tmnxBsxTransitSeenIpGroup, tmnxBsxGrpStatusHCPktsFromMda=tmnxBsxGrpStatusHCPktsFromMda, tmnxBsxAaSubPolicerAqpEntryId=tmnxBsxAaSubPolicerAqpEntryId, tmnxBsxNotifyTransitIpPolicyId=tmnxBsxNotifyTransitIpPolicyId, tmnxBsxTransPrefSumParentSubType=tmnxBsxTransPrefSumParentSubType, tmnxBsxStatAaHCOctsDnyToSb=tmnxBsxStatAaHCOctsDnyToSb, tmnxBsxGrpStatusInQIndex=tmnxBsxGrpStatusInQIndex, tmnxBsxHttpEnrichFieldEntry=tmnxBsxHttpEnrichFieldEntry, tmnxBsxTransPrefSubRowLastCh=tmnxBsxTransPrefSubRowLastCh, tmnxBsxPacketRateLowWatermark=tmnxBsxPacketRateLowWatermark, tmnxBsxGrpStatusEgrQFwdOutPOcts=tmnxBsxGrpStatusEgrQFwdOutPOcts, tmnxBsxAaSubSumHCLngDurFlws=tmnxBsxAaSubSumHCLngDurFlws, tmnxBsxAqpDstAddressLength=tmnxBsxAqpDstAddressLength, tmnxBsxMdaGroupV9v0=tmnxBsxMdaGroupV9v0, tmnxBsxRadApServOperState=tmnxBsxRadApServOperState, tmnxBsxHttpEnrichObjGroup=tmnxBsxHttpEnrichObjGroup, TmnxBsxBurstSize=TmnxBsxBurstSize, tmnxBsxIsaAaGrpUnassignedEsmSubs=tmnxBsxIsaAaGrpUnassignedEsmSubs, TmnxBsxAaSubscriberType=TmnxBsxAaSubscriberType, tmnxBsxIsaAaGrpUnassignedSpkSubs=tmnxBsxIsaAaGrpUnassignedSpkSubs, tmnxBsxIsaAaGrpPacketRateClear=tmnxBsxIsaAaGrpPacketRateClear, tmnxBsxHttpEnrichNumNoResourceHi=tmnxBsxHttpEnrichNumNoResourceHi, tmnxBsxRadApLastChTime=tmnxBsxRadApLastChTime, tmnxBsxHttpEnrichHCTrafficChar=tmnxBsxHttpEnrichHCTrafficChar, tmnxBsxGrpStatusPktSzIncOcLo=tmnxBsxGrpStatusPktSzIncOcLo, tmnxBsxAsoEntry=tmnxBsxAsoEntry, tmnxBsxIsaLoadBalUnSubTable=tmnxBsxIsaLoadBalUnSubTable, tmnxBsxAarpInstPeerOperFlags=tmnxBsxAarpInstPeerOperFlags, tmnxBsxTransitIpPolicyTable=tmnxBsxTransitIpPolicyTable, tmnxBsxAdminCtrlApply=tmnxBsxAdminCtrlApply, tmnxBsxTransitIpPolicySubsCount=tmnxBsxTransitIpPolicySubsCount, tmnxBsxGrpStatusOctsDiscPolicy=tmnxBsxGrpStatusOctsDiscPolicy, tmnxBsxAppGrpRowStatus=tmnxBsxAppGrpRowStatus, tmnxBsxTransitIpPolicyAddrType=tmnxBsxTransitIpPolicyAddrType, tmnxBsxTransIpPlcySubAppProfNm=tmnxBsxTransIpPlcySubAppProfNm, tmnxBsxStatAaAcctCfgCollStats=tmnxBsxStatAaAcctCfgCollStats, tmnxBsxAarpInstLastCh=tmnxBsxAarpInstLastCh, tmnxBsxHttpRedirErrTemplateId=tmnxBsxHttpRedirErrTemplateId, tmnxBsxAarpInstPeerIpAddr=tmnxBsxAarpInstPeerIpAddr, tmnxBsxAqpDscpOp=tmnxBsxAqpDscpOp, tmnxBsxAdminCtrlTable=tmnxBsxAdminCtrlTable, TmnxBsxStatAaAcctCfgType=TmnxBsxStatAaAcctCfgType, tmnxBsxGrpStatusHCPktsDisCongOut=tmnxBsxGrpStatusHCPktsDisCongOut, tmnxBsxGrpStatusPktSzDecPkLo=tmnxBsxGrpStatusPktSzDecPkLo, tmnxBsxGrpStatusHCPktsDiscCongIn=tmnxBsxGrpStatusHCPktsDiscCongIn, tmnxBsxStatAaHCPktsAdmFmSb=tmnxBsxStatAaHCPktsAdmFmSb, tmnxBsxStatAaHCPktsDnyFmSb=tmnxBsxStatAaHCPktsDnyFmSb, tmnxBsxGrpMdaTransPrefV4Entr=tmnxBsxGrpMdaTransPrefV4Entr, tmnxBsxStatAaSubSdyHCTermFlws=tmnxBsxStatAaSubSdyHCTermFlws, tmnxBsxNotifyAaSubAcctLossReason=tmnxBsxNotifyAaSubAcctLossReason, tmnxBsxCustProtExprOperator=tmnxBsxCustProtExprOperator, tmnxBsxGrpStatusHCPktsDiscErrors=tmnxBsxGrpStatusHCPktsDiscErrors, tmnxBsxHttpRdStatOutOfResourceLo=tmnxBsxHttpRdStatOutOfResourceLo, tmnxBsxHttpEnrichScalars=tmnxBsxHttpEnrichScalars, TmnxBsxAqpHttpRedirFlowType=TmnxBsxAqpHttpRedirFlowType, tmnxBsxAaSubSumHCPktsAdmFmSb=tmnxBsxAaSubSumHCPktsAdmFmSb, tmnxBsxAqpAaSubscriber=tmnxBsxAqpAaSubscriber, tmnxBsxStatAaSubHCTermFlwDur=tmnxBsxStatAaSubHCTermFlwDur, tmnxBsxStatAaSubSdyHCOctsDnyFmSb=tmnxBsxStatAaSubSdyHCOctsDnyFmSb, tmnxBsxAarpCommandEntry=tmnxBsxAarpCommandEntry, tmnxBsxStatAaSubHCFlwsAdmFmSb=tmnxBsxStatAaSubHCFlwsAdmFmSb, tmnxBsxAarpCommandControl=tmnxBsxAarpCommandControl, tmnxBsxConformance=tmnxBsxConformance, tmnxBsxGrpStatusFlowResInUse=tmnxBsxGrpStatusFlowResInUse, tmnxBsxStatAaSubSdyFlwsAdmFmSb=tmnxBsxStatAaSubSdyFlwsAdmFmSb, tmnxBsxTransIpPolDhcpAddWarning=tmnxBsxTransIpPolDhcpAddWarning, tmnxBsxGrpStatusIngQHCFwdInPPkts=tmnxBsxGrpStatusIngQHCFwdInPPkts, tmnxBsxRadApServAcctPort=tmnxBsxRadApServAcctPort, tmnxBsxHttpRedirLastCh=tmnxBsxHttpRedirLastCh, tmnxBsxStatAaSubFlwsAdmFmSb=tmnxBsxStatAaSubFlwsAdmFmSb, tmnxBsxAqpDstAddressType=tmnxBsxAqpDstAddressType, tmnxBsxAaGrpPartTable=tmnxBsxAaGrpPartTable, tmnxBsxRadApStatObjGroup=tmnxBsxRadApStatObjGroup, tmnxBsxAqpFlowCountPolicer=tmnxBsxAqpFlowCountPolicer, tmnxBsxGrpStatusPktSzIncPkLo=tmnxBsxGrpStatusPktSzIncPkLo, tmnxBsxGrpStatusIngQHCFwdOutPPkts=tmnxBsxGrpStatusIngQHCFwdOutPPkts, tmnxBsxAppFilterServerPortHigh=tmnxBsxAppFilterServerPortHigh, tmnxBsxStatAaSubHCPktsDnyToSb=tmnxBsxStatAaSubHCPktsDnyToSb, tmnxBsxProtParentName=tmnxBsxProtParentName, tmnxBsxTransitIpPolicySubIdPlcy=tmnxBsxTransitIpPolicySubIdPlcy, tmnxBsxCflowdTemplateRetransmit=tmnxBsxCflowdTemplateRetransmit, tmnxBsxAaSubSumFlwsDnyFmSb=tmnxBsxAaSubSumFlwsDnyFmSb, tmnxBsxAqpCharOperator=tmnxBsxAqpCharOperator, tmnxBsxStatAaAppFilterEntry=tmnxBsxStatAaAppFilterEntry, tmnxBsxStatAaSubSdyPktsAdmToSb=tmnxBsxStatAaSubSdyPktsAdmToSb, tmnxBsxHttpRedirErrCodeRowLastCh=tmnxBsxHttpRedirErrCodeRowLastCh, tmnxBsxStatAaSubCfgExportMethod=tmnxBsxStatAaSubCfgExportMethod, tmnxBsxAqpApplication=tmnxBsxAqpApplication, tmnxBsxIsaAaGrpOvrldCutthruClr=tmnxBsxIsaAaGrpOvrldCutthruClr, tmnxBsxAppFilterExprTable=tmnxBsxAppFilterExprTable, tmnxBsxTransitIpPolicySeenIpRad=tmnxBsxTransitIpPolicySeenIpRad, tmnxBsxHttpEnrichHCNumNoResource=tmnxBsxHttpEnrichHCNumNoResource, tmnxBsxStatAaHCOctsDnyFmSb=tmnxBsxStatAaHCOctsDnyFmSb, tmnxBsxStatAaAcctCfgEntry=tmnxBsxStatAaAcctCfgEntry, tmnxBsxGrpStatusPacketRatePeak=tmnxBsxGrpStatusPacketRatePeak, tmnxBsxAqpRemarkDscpOutProfile=tmnxBsxAqpRemarkDscpOutProfile, tmnxBsxAppProfCapacityCost=tmnxBsxAppProfCapacityCost, tmnxBsxStatAaAppFilterFlowsHi=tmnxBsxStatAaAppFilterFlowsHi, tmnxBsxCflowdExpEntry=tmnxBsxCflowdExpEntry, TmnxBsxTransitSubOrigin=TmnxBsxTransitSubOrigin, tmnxBsxHttpEnrichStatTable=tmnxBsxHttpEnrichStatTable, tmnxBsxAppFilterTable=tmnxBsxAppFilterTable, tmnxBsxNotifyReason=tmnxBsxNotifyReason, tmnxBsxGrpStatusOctsIn=tmnxBsxGrpStatusOctsIn, tmnxBsxAaGrpPartHttpMatchAllReq=tmnxBsxAaGrpPartHttpMatchAllReq, tmnxBsxAqpDstAddress=tmnxBsxAqpDstAddress, tmnxBsxStatAaAppFilterFlowHCOctC=tmnxBsxStatAaAppFilterFlowHCOctC, tmnxBsxTransPrefSubLastChTime=tmnxBsxTransPrefSubLastChTime, tmnxBsxIsaAaGrpFromSubQuePolicy=tmnxBsxIsaAaGrpFromSubQuePolicy, tmnxBsxAaSubSumShrtDurFlws=tmnxBsxAaSubSumShrtDurFlws, tmnxBsxIsaAaGrpPartitions=tmnxBsxIsaAaGrpPartitions, tmnxBsxGrpStatusIngQDroInPPkts=tmnxBsxGrpStatusIngQDroInPPkts, tmnxBsxAdminCtrlConfigOwner=tmnxBsxAdminCtrlConfigOwner, tmnxBsxTransitIpPolicyAutoCreate=tmnxBsxTransitIpPolicyAutoCreate, tmnxBsxHttpPcyRdStatRedirLo=tmnxBsxHttpPcyRdStatRedirLo, tmnxBsxIsaAaGrpFromSubWaSBfHiWmk=tmnxBsxIsaAaGrpFromSubWaSBfHiWmk, tmnxBsxAppGrpDescription=tmnxBsxAppGrpDescription, tmnxBsxHttpRedirErrCodeLastCh=tmnxBsxHttpRedirErrCodeLastCh, tmnxBsxHttpRedirTemplateId=tmnxBsxHttpRedirTemplateId, tmnxBsxAppFilterPolicyVersion=tmnxBsxAppFilterPolicyVersion, tmnxBsxAaSubPolicerEntry=tmnxBsxAaSubPolicerEntry, tmnxBsxGrpStatusIngQHCDroOutPOcts=tmnxBsxGrpStatusIngQHCDroOutPOcts, tmnxBsxTransitIpPolicyDefAppProf=tmnxBsxTransitIpPolicyDefAppProf, tmnxBsxHttpEnrichRowStatus=tmnxBsxHttpEnrichRowStatus, tmnxBsxGrpStatusPktsDisCongOut=tmnxBsxGrpStatusPktsDisCongOut, tmnxBsxGrpStatusPktSzDecOcLo=tmnxBsxGrpStatusPktSzDecOcLo, tmnxBsxStatAaSubTable=tmnxBsxStatAaSubTable, tmnxBsxIsaAaGrpFailureClearV2=tmnxBsxIsaAaGrpFailureClearV2, tmnxBsxTransPrefEntryId=tmnxBsxTransPrefEntryId, tmnxBsxHttpPcyRdStatDiscontTime=tmnxBsxHttpPcyRdStatDiscontTime, tmnxBsxIsaAaGrpFromSubPool=tmnxBsxIsaAaGrpFromSubPool, tmnxBsxGrpStatusHCPktSzDecOc=tmnxBsxGrpStatusHCPktSzDecOc, tmnxBsxStatAaSubSdyHCLngDurFlws=tmnxBsxStatAaSubSdyHCLngDurFlws, tmnxBsxAaSubSumPktsAdmToSb=tmnxBsxAaSubSumPktsAdmToSb, tmnxBsxAaGrpPartIndex=tmnxBsxAaGrpPartIndex, tmnxBsxTransIpPolDhcpDelWarning=tmnxBsxTransIpPolDhcpDelWarning, tmnxBsxTransitIpPolicySubscriber=tmnxBsxTransitIpPolicySubscriber, tmnxBsxAppGrpCfgTable=tmnxBsxAppGrpCfgTable, TmnxBsxExprSubString=TmnxBsxExprSubString, tmnxBsxAdminControlApply=tmnxBsxAdminControlApply, tmnxBsxAarpServPointRole=tmnxBsxAarpServPointRole, tmnxBsxAaSubSumHCPktsDnyFmSb=tmnxBsxAaSubSumHCPktsDnyFmSb, tmnxBsxGrpStatusPktsInPChipErs=tmnxBsxGrpStatusPktsInPChipErs, tmnxBsxAqpHttpEnrichName=tmnxBsxAqpHttpEnrichName, tmnxBsxIsaAaGrpFlowSetup=tmnxBsxIsaAaGrpFlowSetup, tmnxBsxIsaAaGrpFlowFull=tmnxBsxIsaAaGrpFlowFull, tmnxBsxGrpStatusHCFlows=tmnxBsxGrpStatusHCFlows, tmnxBsxCflowdCollAddressType=tmnxBsxCflowdCollAddressType, tmnxBsxCflowdCollRowLastChange=tmnxBsxCflowdCollRowLastChange, TmnxBsxLoadBalanceStatus=TmnxBsxLoadBalanceStatus, tmnxBsxCustProtExprDirection=tmnxBsxCustProtExprDirection, TmnxBsxFailToMode=TmnxBsxFailToMode, tmnxBsxStatAaSubSdyHCPktsAdmToSb=tmnxBsxStatAaSubSdyHCPktsAdmToSb, tmnxBsxHttpEnrichLastChTime=tmnxBsxHttpEnrichLastChTime, tmnxBsxHttpEnrichNumEnrichedLo=tmnxBsxHttpEnrichNumEnrichedLo, tmnxBsxStatAaSubEntry=tmnxBsxStatAaSubEntry, tmnxBsxRadApTable=tmnxBsxRadApTable, tmnxBsxGrpStatusEgrQFwdInPPkts=tmnxBsxGrpStatusEgrQFwdInPPkts, tmnxBsxCflowdPerfExpLastChTime=tmnxBsxCflowdPerfExpLastChTime, tmnxBsxGrpStatusHCPktSzDecPk=tmnxBsxGrpStatusHCPktSzDecPk, tmnxBsxHttpRdStatEntry=tmnxBsxHttpRdStatEntry, tmnxBsxRadApNotificationGroup=tmnxBsxRadApNotificationGroup, tmnxBsxCflowdCollTable=tmnxBsxCflowdCollTable, tmnxBsxTransitIpPolicyIPv4EntCnt=tmnxBsxTransitIpPolicyIPv4EntCnt, tmnxBsxCflowdExpStatEntry=tmnxBsxCflowdExpStatEntry, tmnxBsxAaSubSumMdaSlotNum=tmnxBsxAaSubSumMdaSlotNum, tmnxBsxStatAaName=tmnxBsxStatAaName, tmnxBsxTransitIpPolicyAddrTable=tmnxBsxTransitIpPolicyAddrTable, tmnxBsxGrpMdaTransPrefV6Entr=tmnxBsxGrpMdaTransPrefV6Entr, tmnxBsxAqpStatsHCConflicts=tmnxBsxAqpStatsHCConflicts, tmnxBsxCustProtRowLastChange=tmnxBsxCustProtRowLastChange, tmnxBsxStatAaShrtDurFlws=tmnxBsxStatAaShrtDurFlws, tmnxBsxVersion=tmnxBsxVersion, tmnxBsxIsaAaGrpNonRedundantV2=tmnxBsxIsaAaGrpNonRedundantV2, tmnxBsxTransitGroupV10v0=tmnxBsxTransitGroupV10v0, tmnxBsxCflowdExpTable=tmnxBsxCflowdExpTable, tmnxBsxStatAaHCPktsDnyToSb=tmnxBsxStatAaHCPktsDnyToSb, tmnxBsxHttpEnrichHCNumEnriched=tmnxBsxHttpEnrichHCNumEnriched, tmnxBsxGrpStatusEgrQHCFwdInPPkts=tmnxBsxGrpStatusEgrQHCFwdInPPkts, tmnxBsxAaSubSumHCFlwsDnyToSb=tmnxBsxAaSubSumHCFlwsDnyToSb, tmnxBsxAqpEntry=tmnxBsxAqpEntry, tmnxBsxGrpStatusEgrQHCFwdOutPPkts=tmnxBsxGrpStatusEgrQHCFwdOutPPkts, tmnxBsxHttpRdStatHCSizeExceeded=tmnxBsxHttpRdStatHCSizeExceeded, tmnxBsxPolicerAction=tmnxBsxPolicerAction, tmnxBsxAqpAppGroupOp=tmnxBsxAqpAppGroupOp, tmnxBsxStatsGroup=tmnxBsxStatsGroup, tmnxBsxAaSubSumHCOctsDnyToSb=tmnxBsxAaSubSumHCOctsDnyToSb, TmnxBsxDirection=TmnxBsxDirection, tmnxBsxAppFilterExprRowStatus=tmnxBsxAppFilterExprRowStatus, tmnxBsxCflowdLastChangeTime=tmnxBsxCflowdLastChangeTime, tmnxBsxIsaAaGrpFcRowStatus=tmnxBsxIsaAaGrpFcRowStatus, tmnxBsxRadApObjs=tmnxBsxRadApObjs, tmnxBsxTransitIpPolicyRadAuthPlc=tmnxBsxTransitIpPolicyRadAuthPlc, tmnxBsxStatAaSubHCLngDurFlws=tmnxBsxStatAaSubHCLngDurFlws, tmnxBsxObsoleteGroups=tmnxBsxObsoleteGroups, TmnxBsxMdaRole=TmnxBsxMdaRole, tmnxBsxChargeGrpRowLastCh=tmnxBsxChargeGrpRowLastCh, tmnxBsxIsaAaGrpTable=tmnxBsxIsaAaGrpTable, tmnxBsxIsaAaGrpToSbWaSBufOvld=tmnxBsxIsaAaGrpToSbWaSBufOvld, tmnxBsxAaGrpPartLastChangeTime=tmnxBsxAaGrpPartLastChangeTime, tmnxBsxAqpDstPortHighValue=tmnxBsxAqpDstPortHighValue, tmnxBsxNotifObjs=tmnxBsxNotifObjs, tmnxBsxStatAaAppFilterFlowOctCHi=tmnxBsxStatAaAppFilterFlowOctCHi, tmnxBsxCflowdExpRowLastChange=tmnxBsxCflowdExpRowLastChange, tmnxBsxHttpRdStatHCOutOfResource=tmnxBsxHttpRdStatHCOutOfResource, tmnxBsxTransPrefPolicyRowStatus=tmnxBsxTransPrefPolicyRowStatus, tmnxBsxStatAaSubSdyHCOctsAdmFmSb=tmnxBsxStatAaSubSdyHCOctsAdmFmSb, tmnxBsxTransPrefSubAppProfNm=tmnxBsxTransPrefSubAppProfNm, tmnxBsxAaSubSumLngDurFlws=tmnxBsxAaSubSumLngDurFlws, tmnxBsxIsaAaGrpRowLastChange=tmnxBsxIsaAaGrpRowLastChange, tmnxBsxGrpStatusEgrQDirection=tmnxBsxGrpStatusEgrQDirection, tmnxBsxFlowSetupHighWatermark=tmnxBsxFlowSetupHighWatermark, tmnxBsxStatAaSubSdyEntry=tmnxBsxStatAaSubSdyEntry, tmnxBsxIsaAaGrpFlowSetupClear=tmnxBsxIsaAaGrpFlowSetupClear, tmnxBsxTransitIpSumEntry=tmnxBsxTransitIpSumEntry, tmnxBsxAarpInstPeerEPSapEncap=tmnxBsxAarpInstPeerEPSapEncap, tmnxBsxPolicyGroupV10v0=tmnxBsxPolicyGroupV10v0, tmnxBsxHttpRedirErrCodeEntry=tmnxBsxHttpRedirErrCodeEntry, tmnxBsxGrpStatusHCPktsOut=tmnxBsxGrpStatusHCPktsOut, tmnxBsxStatAaSubSdyTermFlwDur=tmnxBsxStatAaSubSdyTermFlwDur, tmnxBsxGrpStatusEgrQHCFwdInPOcts=tmnxBsxGrpStatusEgrQHCFwdInPOcts, tmnxBsxHttpRedirObjs=tmnxBsxHttpRedirObjs, tmnxBsxAqpMirrorSourceAllIncl=tmnxBsxAqpMirrorSourceAllIncl, tmnxBsxStatAaSubSdyOctsAdmFmSb=tmnxBsxStatAaSubSdyOctsAdmFmSb, tmnxBsxAaSubSumOctsDnyFmSb=tmnxBsxAaSubSumOctsDnyFmSb, tmnxBsxGrpStatusEgrQTable=tmnxBsxGrpStatusEgrQTable, tmnxBsxAppProfDescription=tmnxBsxAppProfDescription, tmnxBsxIsaAaGrpOperState=tmnxBsxIsaAaGrpOperState, tmnxBsxGrpStatusFlowsCurrent=tmnxBsxGrpStatusFlowsCurrent, tmnxBsxAppProfCharProfName=tmnxBsxAppProfCharProfName, tmnxBsxStatAaSubSdyMedDurFlws=tmnxBsxStatAaSubSdyMedDurFlws, tmnxBsxIsaAaGrpCapCostLowThres=tmnxBsxIsaAaGrpCapCostLowThres, tmnxBsxObsoleteGroupV7v0=tmnxBsxObsoleteGroupV7v0, tmnxBsxAqpSrcAddressType=tmnxBsxAqpSrcAddressType, tmnxBsxHttpRdStatSizeExceededLo=tmnxBsxHttpRdStatSizeExceededLo, tmnxBsxAaSubSumMdaMdaNum=tmnxBsxAaSubSumMdaMdaNum, tmnxBsxAaSubSumOctsAdmFmSb=tmnxBsxAaSubSumOctsAdmFmSb, tmnxBsxAaGrpPartXOnlineHost=tmnxBsxAaGrpPartXOnlineHost, tmnxBsxGrpStatusPacketRateAvg=tmnxBsxGrpStatusPacketRateAvg, tmnxBsxCflowdCollStatDiscontTime=tmnxBsxCflowdCollStatDiscontTime, tmnxBsxCflowdExpStatDiscontTime=tmnxBsxCflowdExpStatDiscontTime, TmnxBsxAarpServPointType=TmnxBsxAarpServPointType, tmnxBsxStatAaSubPktsAdmFmSb=tmnxBsxStatAaSubPktsAdmFmSb, tmnxBsxHttpEnrichTplNotEnabledLo=tmnxBsxHttpEnrichTplNotEnabledLo, tmnxBsxMobileGatewayGroup=tmnxBsxMobileGatewayGroup, tmnxBsxCflowdStatusPktsSent=tmnxBsxCflowdStatusPktsSent, tmnxBsxRadApServTable=tmnxBsxRadApServTable, tmnxBsxAsoValRowStatus=tmnxBsxAsoValRowStatus, tmnxBsxCflowdStatusPktRateCurr=tmnxBsxCflowdStatusPktRateCurr, tmnxBsxNotifyRadiusCoAAuditState=tmnxBsxNotifyRadiusCoAAuditState, tmnxBsxGrpStatusFlowsAverage=tmnxBsxGrpStatusFlowsAverage, tmnxBsxRadApServEntry=tmnxBsxRadApServEntry, tmnxBsxOvrdAaSubRowStatus=tmnxBsxOvrdAaSubRowStatus, tmnxBsxGrpStatusIngQTable=tmnxBsxGrpStatusIngQTable)
mibBuilder.exportSymbols("TIMETRA-BSX-NG-MIB", tmnxBsxAaSubPolicerIndex=tmnxBsxAaSubPolicerIndex, tmnxBsxStatAaOctsDnyToSb=tmnxBsxStatAaOctsDnyToSb, tmnxBsxIsaAaGrpOvrldCutthru=tmnxBsxIsaAaGrpOvrldCutthru, tmnxBsxStatAaSubSdyFlwsDnyToSb=tmnxBsxStatAaSubSdyFlwsDnyToSb, tmnxBsxGrpStatusIngQHCDroOutPPkts=tmnxBsxGrpStatusIngQHCDroOutPPkts, tmnxBsxAppDescription=tmnxBsxAppDescription, tmnxBsxRadApRowStatus=tmnxBsxRadApRowStatus, tmnxBsxGrpMdaRole=tmnxBsxGrpMdaRole, tmnxBsxAaSubSumTermFlwDur=tmnxBsxAaSubSumTermFlwDur, tmnxBsxAqpTrafficDir=tmnxBsxAqpTrafficDir, tmnxBsxIsaAaGrpIngressSlpPolicy=tmnxBsxIsaAaGrpIngressSlpPolicy, tmnxBsxMdaScalars=tmnxBsxMdaScalars, tmnxBsxCflowdExpStatHCRecReport=tmnxBsxCflowdExpStatHCRecReport, tmnxBsxStatAaSubPktsDnyFmSb=tmnxBsxStatAaSubPktsDnyFmSb, tmnxBsxOvrdAaSubCharRowLastCh=tmnxBsxOvrdAaSubCharRowLastCh, tmnxBsxHttpRedirErrRowStatus=tmnxBsxHttpRedirErrRowStatus, tmnxBsxTransIpPlcySubRefCount=tmnxBsxTransIpPlcySubRefCount, tmnxBsxStatAaAppFilterFlowOctCLo=tmnxBsxStatAaAppFilterFlowOctCLo, tmnxBsxCustProtExprRowStatus=tmnxBsxCustProtExprRowStatus, tmnxBsxCflowdStatusRecRateCurr=tmnxBsxCflowdStatusRecRateCurr, TmnxBsxExprSubStringType=TmnxBsxExprSubStringType, tmnxBsxStatAaFlwsDnyToSb=tmnxBsxStatAaFlwsDnyToSb, tmnxBsxHttpEnrichEntry=tmnxBsxHttpEnrichEntry, TmnxBsxFirstPacketPolicy=TmnxBsxFirstPacketPolicy, tmnxBsxHttpEnrichNumNoResourceLo=tmnxBsxHttpEnrichNumNoResourceLo, tmnxBsxCflowdExpStatRecReport=tmnxBsxCflowdExpStatRecReport, TmnxBsxCustProtExprSubString=TmnxBsxCustProtExprSubString, tmnxBsxIsaAaGrpMdaLastChangeTime=tmnxBsxIsaAaGrpMdaLastChangeTime, tmnxBsxAqpRemarkDscpInProfile=tmnxBsxAqpRemarkDscpInProfile, tmnxBsxCustProtDescription=tmnxBsxCustProtDescription, tmnxBsxStatAaSubSdyHCOctsAdmToSb=tmnxBsxStatAaSubSdyHCOctsAdmToSb, tmnxBsxAaSubSumHCOctsAdmFmSb=tmnxBsxAaSubSumHCOctsAdmFmSb, tmnxBsxAaSubSumHCTermFlwDur=tmnxBsxAaSubSumHCTermFlwDur, tmnxBsxTransPrefPlcyLastChTime=tmnxBsxTransPrefPlcyLastChTime, tmnxBsxTransPrefEntryRowStatus=tmnxBsxTransPrefEntryRowStatus, tmnxBsxTransPrefSumEntry=tmnxBsxTransPrefSumEntry, tmnxBsxChargeGrpCfgTable=tmnxBsxChargeGrpCfgTable, tmnxBsxStatAaSubSdyHCOctsDnyToSb=tmnxBsxStatAaSubSdyHCOctsDnyToSb, tmnxBsxTListAttribTableLUpdateT=tmnxBsxTListAttribTableLUpdateT, tmnxBsxStatAaSubFlwsDnyToSb=tmnxBsxStatAaSubFlwsDnyToSb, tmnxBsxStatAaSubCfgTable=tmnxBsxStatAaSubCfgTable, tmnxBsxAsoPolicyVersion=tmnxBsxAsoPolicyVersion, tmnxBsxAqpCharEntry=tmnxBsxAqpCharEntry, tmnxBsxOvrdObjs=tmnxBsxOvrdObjs, tmnxBsxAqpAaSubscriberOp=tmnxBsxAqpAaSubscriberOp, tmnxBsxStatAaSubMedDurFlws=tmnxBsxStatAaSubMedDurFlws, tmnxBsxAaGrpPartRowStatus=tmnxBsxAaGrpPartRowStatus, tmnxBsxStatAaActFlwsToSb=tmnxBsxStatAaActFlwsToSb, tmnxBsxHttpRdStatRedirLo=tmnxBsxHttpRdStatRedirLo, tmnxBsxPolicyGroupV9v0=tmnxBsxPolicyGroupV9v0, tmnxBsxCflowdCollDescription=tmnxBsxCflowdCollDescription, tmnxBsxTransPrefPolicyEntCount=tmnxBsxTransPrefPolicyEntCount, tmnxBsxCflowdStatusHCRecReported=tmnxBsxCflowdStatusHCRecReported, tmnxBsxGrpMdaTable=tmnxBsxGrpMdaTable, tmnxBsxAppProfCharRowStatus=tmnxBsxAppProfCharRowStatus, tmnxBsxIsaAaGrpTransPrefV4NmEntr=tmnxBsxIsaAaGrpTransPrefV4NmEntr, tmnxBsxStatAaAcctCfgAdminState=tmnxBsxStatAaAcctCfgAdminState, tmnxBsxPlcyCfgTable=tmnxBsxPlcyCfgTable, tmnxBsxTransitScalars=tmnxBsxTransitScalars, tmnxBsxProtEntry=tmnxBsxProtEntry, tmnxBsxCflowdAdminState=tmnxBsxCflowdAdminState, tmnxBsxAarpInstAdminState=tmnxBsxAarpInstAdminState, tmnxBsxIsaAaGrpAdminState=tmnxBsxIsaAaGrpAdminState, tmnxBsxAppProfName=tmnxBsxAppProfName, tmnxBsxPolicerPIRAdaptation=tmnxBsxPolicerPIRAdaptation, tmnxBsxStatAaPktsAdmFmSb=tmnxBsxStatAaPktsAdmFmSb, tmnxBsxRadApServReqTimeouts=tmnxBsxRadApServReqTimeouts, TmnxBsxAaSubscriber=TmnxBsxAaSubscriber, tmnxBsxAppFilterExprStr=tmnxBsxAppFilterExprStr, tmnxBsxStatAaSubSdyHCPktsDnyFmSb=tmnxBsxStatAaSubSdyHCPktsDnyFmSb, tmnxBsxCflowdPerfEntry=tmnxBsxCflowdPerfEntry, tmnxBsxCflowdPerfMeasType=tmnxBsxCflowdPerfMeasType, tmnxBsxCflowdExpStatUSupSSRCStHi=tmnxBsxCflowdExpStatUSupSSRCStHi, tmnxBsxTransPrefSubEntry=tmnxBsxTransPrefSubEntry, tmnxBsxHttpEnrichFieldRowStatus=tmnxBsxHttpEnrichFieldRowStatus, tmnxBsxAaSubSumMedDurFlws=tmnxBsxAaSubSumMedDurFlws, tmnxBsxOvrdAaSubCharValName=tmnxBsxOvrdAaSubCharValName, tmnxBsxHttpPcyRdStatRedirHi=tmnxBsxHttpPcyRdStatRedirHi, tmnxBsxAqpSapSubscrEncapValue=tmnxBsxAqpSapSubscrEncapValue, tmnxBsxTListAttribSet=tmnxBsxTListAttribSet, tmnxBsxAppFilterServerAddrLen=tmnxBsxAppFilterServerAddrLen, tmnxBsxPolicerName=tmnxBsxPolicerName, tmnxBsxStatAaAcctCfgMaxThruStats=tmnxBsxStatAaAcctCfgMaxThruStats, tmnxBsxRadApFailure=tmnxBsxRadApFailure, tmnxBsxTransitIpPolicySeenIp=tmnxBsxTransitIpPolicySeenIp, tmnxBsxAppFilterExprIndex=tmnxBsxAppFilterExprIndex, tmnxBsxCflowdStatusDiscontTime=tmnxBsxCflowdStatusDiscontTime, tmnxBsxAppProfCharEntry=tmnxBsxAppProfCharEntry, tmnxBsxHttpRedirRowLastCh=tmnxBsxHttpRedirRowLastCh, tmnxBsxHttpRedirGroup=tmnxBsxHttpRedirGroup, tmnxBsxPolicerEntry=tmnxBsxPolicerEntry, tmnxBsxHttpRedirErrCodeTable=tmnxBsxHttpRedirErrCodeTable, tmnxBsxNotifyObjsGroup=tmnxBsxNotifyObjsGroup, tmnxBsxGrpStatusHCPktSzIncOc=tmnxBsxGrpStatusHCPktSzIncOc, tmnxBsxOvrdAaSubCharTable=tmnxBsxOvrdAaSubCharTable, tmnxBsxComplianceV7v0=tmnxBsxComplianceV7v0, tmnxBsxAqpSapSubscrOp=tmnxBsxAqpSapSubscrOp, tmnxBsxIsaAaGrpActivityChange=tmnxBsxIsaAaGrpActivityChange, tmnxBsxTransIpPlcyAddrRowLastCh=tmnxBsxTransIpPlcyAddrRowLastCh, tmnxBsxGrpStatusOctsDisCongOut=tmnxBsxGrpStatusOctsDisCongOut, tmnxBsxAqpSpokeSdpSubscrOp=tmnxBsxAqpSpokeSdpSubscrOp, tmnxBsxPolicerTable=tmnxBsxPolicerTable, tmnxBsxCustProtRowStatus=tmnxBsxCustProtRowStatus, tmnxBsxGrpMdaActivityState=tmnxBsxGrpMdaActivityState, tmnxBsxHttpPcyRdStatNotRedirHi=tmnxBsxHttpPcyRdStatNotRedirHi, tmnxBsxPolicerAdminCIR=tmnxBsxPolicerAdminCIR, TmnxBsxAarpInstOperFlags=TmnxBsxAarpInstOperFlags, TmnxBsxOperator=TmnxBsxOperator, tmnxBsxCflowdCollAddress=tmnxBsxCflowdCollAddress, tmnxBsxAaSubPolResExEntry=tmnxBsxAaSubPolResExEntry, tmnxBsxHttpEnrichDescription=tmnxBsxHttpEnrichDescription, tmnxBsxRadApIntrmUpdateInterval=tmnxBsxRadApIntrmUpdateInterval, tmnxBsxAqpBwLimitPolicer=tmnxBsxAqpBwLimitPolicer, tmnxBsxStatAaSubSdyHCFlwsDnyToSb=tmnxBsxStatAaSubSdyHCFlwsDnyToSb, tmnxBsxHttpRedirGroups=tmnxBsxHttpRedirGroups, tmnxBsxIsaAaGrpFromSubSlpPolicy=tmnxBsxIsaAaGrpFromSubSlpPolicy, tmnxBsxIsaAaGrpToSubSchPolicy=tmnxBsxIsaAaGrpToSubSchPolicy, tmnxBsxCflowdExpStatHCUSupSSRCSt=tmnxBsxCflowdExpStatHCUSupSSRCSt, tmnxBsxAaSubSumOctsDnyToSb=tmnxBsxAaSubSumOctsDnyToSb, tmnxBsxTransitIpSumAppProfNm=tmnxBsxTransitIpSumAppProfNm, tmnxBsxTransPrefSumSubAddr=tmnxBsxTransPrefSumSubAddr, tmnxBsxRedundancyObjs=tmnxBsxRedundancyObjs, tmnxBsxTListAttribTable=tmnxBsxTListAttribTable, tmnxBsxIsaAaGrpFmSbWaSBufOvld=tmnxBsxIsaAaGrpFmSbWaSBufOvld, tmnxBsxGrpStatusPktsInMda=tmnxBsxGrpStatusPktsInMda, tmnxBsxStatAaHCTermFlws=tmnxBsxStatAaHCTermFlws, tmnxBsxAaSubPolResExTable=tmnxBsxAaSubPolResExTable, tmnxBsxCflowdStatusFlowsNoRes=tmnxBsxCflowdStatusFlowsNoRes, tmnxBsxTransPrefSumTable=tmnxBsxTransPrefSumTable, tmnxBsxAppFilterServerPortOp=tmnxBsxAppFilterServerPortOp, tmnxBsxRedundancyObjGroups=tmnxBsxRedundancyObjGroups, tmnxBsxGrpStatusEgrQFwdInPOcts=tmnxBsxGrpStatusEgrQFwdInPOcts, tmnxBsxCflowdPerfFlowRate2=tmnxBsxCflowdPerfFlowRate2, tmnxBsxNotifyActiveMda=tmnxBsxNotifyActiveMda, tmnxBsxStatAaHCMedDurFlws=tmnxBsxStatAaHCMedDurFlws, tmnxBsxNotifyObjsGroups=tmnxBsxNotifyObjsGroups, tmnxBsxChargeGrpName=tmnxBsxChargeGrpName, tmnxBsxAppGrpCfgEntry=tmnxBsxAppGrpCfgEntry, tmnxBsxStatAaAcctCfgPolicy=tmnxBsxStatAaAcctCfgPolicy, tmnxBsxHttpEnrichObjGroups=tmnxBsxHttpEnrichObjGroups, TmnxBsxTListAttribType=TmnxBsxTListAttribType, tmnxBsxHttpRedirErrTable=tmnxBsxHttpRedirErrTable, tmnxBsxGrpStatusOctsDisCongMda=tmnxBsxGrpStatusOctsDisCongMda, tmnxBsxStatsObjs=tmnxBsxStatsObjs, tmnxBsxStatAaSubSdyActFlwsToSb=tmnxBsxStatAaSubSdyActFlwsToSb, tmnxBsxOvrdGroups=tmnxBsxOvrdGroups, tmnxBsxGrpStatusPktsOut=tmnxBsxGrpStatusPktsOut, tmnxBsxStatAaHCTermFlwDur=tmnxBsxStatAaHCTermFlwDur, tmnxBsxCompliance=tmnxBsxCompliance, tmnxBsxHttpPcyRdStatEntry=tmnxBsxHttpPcyRdStatEntry, tmnxBsxRadApServTxRequests=tmnxBsxRadApServTxRequests, tmnxBsxCflowdGroupV10v0=tmnxBsxCflowdGroupV10v0, tmnxBsxGrpStatusIngQDroInPOcts=tmnxBsxGrpStatusIngQDroInPOcts, tmnxBsxAaSubAsoValEntry=tmnxBsxAaSubAsoValEntry, tmnxBsxProtAdminState=tmnxBsxProtAdminState, tmnxBsxCustProtExprRowLastChange=tmnxBsxCustProtExprRowLastChange, tmnxBsxStatAaAppFilterTable=tmnxBsxStatAaAppFilterTable, tmnxBsxIsaAaGrpRowStatus=tmnxBsxIsaAaGrpRowStatus, tmnxBsxStatAaSubOctsDnyToSb=tmnxBsxStatAaSubOctsDnyToSb, tmnxBsxTransIpPolAaSubDeleted=tmnxBsxTransIpPolAaSubDeleted, tmnxBsxRadiusAccountingGroups=tmnxBsxRadiusAccountingGroups, tmnxBsxChargeGrpCfgEntry=tmnxBsxChargeGrpCfgEntry, tmnxBsxGrpStatusEntry=tmnxBsxGrpStatusEntry, tmnxBsxAqpSrcAddressOp=tmnxBsxAqpSrcAddressOp, tmnxBsxHttpRedirErrCodeRowStatus=tmnxBsxHttpRedirErrCodeRowStatus, tmnxBsxAaSubSumHCFlwsAdmFmSb=tmnxBsxAaSubSumHCFlwsAdmFmSb, tmnxBsxCustProtTable=tmnxBsxCustProtTable, tmnxBsxTransitIpSumParentSub=tmnxBsxTransitIpSumParentSub, tmnxBsxStatAaSubHCMedDurFlws=tmnxBsxStatAaSubHCMedDurFlws, tmnxBsxIsaAaGrpFmSbWaSBufOvldClr=tmnxBsxIsaAaGrpFmSbWaSBufOvldClr, tmnxBsxHttpEnrichNumEnrichedHi=tmnxBsxHttpEnrichNumEnrichedHi, tmnxBsxAqpSrcPortLowValue=tmnxBsxAqpSrcPortLowValue, tmnxBsxGrpStatusPktSzIncOcHi=tmnxBsxGrpStatusPktSzIncOcHi, tmnxBsxRedundancyObjScalars=tmnxBsxRedundancyObjScalars, tmnxBsxMdaGroupV10v0=tmnxBsxMdaGroupV10v0, tmnxBsxCflowdPerfRowLastChange=tmnxBsxCflowdPerfRowLastChange, tmnxBsxAqpHttpRedirName=tmnxBsxAqpHttpRedirName, tmnxBsxTransPrefSubscriber=tmnxBsxTransPrefSubscriber, tmnxBsxHttpRedirEntry=tmnxBsxHttpRedirEntry, tmnxBsxRadApScalars=tmnxBsxRadApScalars, tmnxBsxStaticDataObjs=tmnxBsxStaticDataObjs, tmnxBsxNotifyAaGrpPartIndex=tmnxBsxNotifyAaGrpPartIndex, tmnxBsxIsaAaGrpNonRedundantClear=tmnxBsxIsaAaGrpNonRedundantClear, tmnxBsxCflowdCollStatTable=tmnxBsxCflowdCollStatTable, tmnxBsxTransitIpPolicyEntry=tmnxBsxTransitIpPolicyEntry, tmnxBsxHttpEnrichFieldRowLastCh=tmnxBsxHttpEnrichFieldRowLastCh, tmnxBsxIsaAaGrpFcEntry=tmnxBsxIsaAaGrpFcEntry, tmnxBsxGrpStatusHCPktsInPChipErs=tmnxBsxGrpStatusHCPktsInPChipErs, tmnxBsxAppProfEntry=tmnxBsxAppProfEntry, tmnxBsxAppFilterDescription=tmnxBsxAppFilterDescription, tmnxBsxAqpRowStatus=tmnxBsxAqpRowStatus, tmnxBsxCflowdPerfTable=tmnxBsxCflowdPerfTable, tmnxBsxAdminLastChangeTime=tmnxBsxAdminLastChangeTime, tmnxBsxAqpSpokeSdpSubscr=tmnxBsxAqpSpokeSdpSubscr, tmnxBsxStatAaSubFlwsAdmToSb=tmnxBsxStatAaSubFlwsAdmToSb, tmnxBsxStatAaSubSdyTable=tmnxBsxStatAaSubSdyTable, tmnxBsxStatAaSubCfgEntry=tmnxBsxStatAaSubCfgEntry, tmnxBsxAarpInstId=tmnxBsxAarpInstId, tmnxBsxIsaAaGrpOverloadCutThru=tmnxBsxIsaAaGrpOverloadCutThru, tmnxBsxRadApStatTable=tmnxBsxRadApStatTable, tmnxBsxAaSubHasOverrides=tmnxBsxAaSubHasOverrides, tmnxBsxFlowSetupLowWatermark=tmnxBsxFlowSetupLowWatermark, tmnxBsxProtDescription=tmnxBsxProtDescription, tmnxBsxRadApSendRetries=tmnxBsxRadApSendRetries, tmnxBsxPolicyGroup=tmnxBsxPolicyGroup, tmnxBsxTransitIpSumParentSubType=tmnxBsxTransitIpSumParentSubType, tmnxBsxIsaAaGrpFromSubSchPolicy=tmnxBsxIsaAaGrpFromSubSchPolicy, tmnxBsxHttpRedirErrLastChTime=tmnxBsxHttpRedirErrLastChTime, tmnxBsxGrpMdaStatsResourceCount=tmnxBsxGrpMdaStatsResourceCount, tmnxBsxGrpStatusIngQDiscontTime=tmnxBsxGrpStatusIngQDiscontTime, tmnxBsxAppProfRowStatus=tmnxBsxAppProfRowStatus, tmnxBsxCflowdPerfExpRowStatus=tmnxBsxCflowdPerfExpRowStatus, tmnxBsxTransPrefSumSubAddrType=tmnxBsxTransPrefSumSubAddrType, tmnxBsxRadApServStatEntry=tmnxBsxRadApServStatEntry, tmnxBsxIsaAaGrpToSubWaSBfLoWmk=tmnxBsxIsaAaGrpToSubWaSBfLoWmk, tmnxBsxAaSubSumTermFlws=tmnxBsxAaSubSumTermFlws, tmnxBsxAaSubTable=tmnxBsxAaSubTable, tmnxBsxOvrdAaSubCharLastChTm=tmnxBsxOvrdAaSubCharLastChTm, tmnxBsxPlcyCfgLastChTime=tmnxBsxPlcyCfgLastChTime, tmnxBsxAqpRemarkPriority=tmnxBsxAqpRemarkPriority, tmnxBsxTransPrefPolicyIPv4EntCnt=tmnxBsxTransPrefPolicyIPv4EntCnt, tmnxBsxAaSubSumPktsAdmFmSb=tmnxBsxAaSubSumPktsAdmFmSb, tmnxBsxStatAaAcctCfgAggrStats=tmnxBsxStatAaAcctCfgAggrStats, tmnxBsxNotifyObjsGroupV8v0=tmnxBsxNotifyObjsGroupV8v0, tmnxBsxGrpStatusFlowSetupRateAvg=tmnxBsxGrpStatusFlowSetupRateAvg, tmnxBsxGrpStatusSubsDivertedPk=tmnxBsxGrpStatusSubsDivertedPk, tmnxBsxStatAaSubCfgRowStatus=tmnxBsxStatAaSubCfgRowStatus, tmnxBsxTransPrefPolicyIPv6EntCnt=tmnxBsxTransPrefPolicyIPv6EntCnt, tmnxBsxStatAaEntry=tmnxBsxStatAaEntry, tmnxBsxAdminCtrlLastChTime=tmnxBsxAdminCtrlLastChTime, tmnxBsxCflowdGroup=tmnxBsxCflowdGroup, tmnxBsxGrpStatusFlowSetupRatePk=tmnxBsxGrpStatusFlowSetupRatePk, tmnxBsxAppChargeGrp=tmnxBsxAppChargeGrp, tmnxBsxTransPrefEntrySubscriber=tmnxBsxTransPrefEntrySubscriber, tmnxBsxAarpTableLastChTime=tmnxBsxAarpTableLastChTime, tmnxBsxRadApReqTimeouts=tmnxBsxRadApReqTimeouts, tmnxBsxStatAaSubHCPktsAdmFmSb=tmnxBsxStatAaSubHCPktsAdmFmSb, tmnxBsxIsaAaGrpBitRate=tmnxBsxIsaAaGrpBitRate, tmnxBsxTransIpPlcySubLastChTime=tmnxBsxTransIpPlcySubLastChTime, tmnxBsxCflowdStatusActFlowsCurr=tmnxBsxCflowdStatusActFlowsCurr, tmnxBsxMdaObjs=tmnxBsxMdaObjs, tmnxBsxAppFilterExprType=tmnxBsxAppFilterExprType, tmnxBsxCflowdExpStatRecDropped=tmnxBsxCflowdExpStatRecDropped, tmnxBsxCardSlotNum=tmnxBsxCardSlotNum, tmnxBsxTransPrefSumUpdateTime=tmnxBsxTransPrefSumUpdateTime, tmnxBsxGrpStatusHCOctsInspected=tmnxBsxGrpStatusHCOctsInspected, PYSNMP_MODULE_ID=tmnxBsxNgMIBModule, tmnxBsxAaSubPolicerType=tmnxBsxAaSubPolicerType, tmnxBsxHttpRedirScalars=tmnxBsxHttpRedirScalars, tmnxBsxNotifyIsaAaGroupIndex=tmnxBsxNotifyIsaAaGroupIndex, tmnxBsxRadApEntry=tmnxBsxRadApEntry, tmnxBsxTransitIpPolicySubTable=tmnxBsxTransitIpPolicySubTable, tmnxBsxGrpMdaSpokeSdpSubscribers=tmnxBsxGrpMdaSpokeSdpSubscribers, tmnxBsxNotificationGroupV10v0=tmnxBsxNotificationGroupV10v0)
mibBuilder.exportSymbols("TIMETRA-BSX-NG-MIB", tmnxBsxHttpEnrichMissngSubDataLo=tmnxBsxHttpEnrichMissngSubDataLo, tmnxBsxTransPrefSumParentSub=tmnxBsxTransPrefSumParentSub, tmnxBsxRadApServerRetry=tmnxBsxRadApServerRetry, TmnxBsxMdaActivityState=TmnxBsxMdaActivityState, tmnxBsxGrpMdaTransitSubs=tmnxBsxGrpMdaTransitSubs, tmnxBsxGrpStatusEgrQIndex=tmnxBsxGrpStatusEgrQIndex, TmnxBsxAarpServPoint=TmnxBsxAarpServPoint, tmnxBsxPlcyRowLastCh=tmnxBsxPlcyRowLastCh, tmnxBsxIsaAaGrpFromSubWaSBfLoWmk=tmnxBsxIsaAaGrpFromSubWaSBfLoWmk, tmnxBsxStatIsaAaCfgEntry=tmnxBsxStatIsaAaCfgEntry, tmnxBsxAqpStatsFlowsLo=tmnxBsxAqpStatsFlowsLo, tmnxBsxAqpStatsFlowsHi=tmnxBsxAqpStatsFlowsHi, TmnxBsxAaStatExportMethod=TmnxBsxAaStatExportMethod, tmnxBsxGrpStatusHCOctsDiscErrors=tmnxBsxGrpStatusHCOctsDiscErrors, tmnxBsxIsaAaGrpFlowFullClear=tmnxBsxIsaAaGrpFlowFullClear, tmnxBsxAaSubPolResExceeded=tmnxBsxAaSubPolResExceeded, tmnxBsxTransitIpPolicyRowStatus=tmnxBsxTransitIpPolicyRowStatus, tmnxBsxTransitIpPolicyAddr=tmnxBsxTransitIpPolicyAddr, tmnxBsxNotificationGroupV8v0=tmnxBsxNotificationGroupV8v0, tmnxBsxGrpMdaActivityChange=tmnxBsxGrpMdaActivityChange, tmnxBsxAqpEntryId=tmnxBsxAqpEntryId, tmnxBsxNgMIBModule=tmnxBsxNgMIBModule, tmnxBsxHttpPcyRdStatOutOfResHi=tmnxBsxHttpPcyRdStatOutOfResHi, tmnxBsxIsaAaGrpUnassignedSapSubs=tmnxBsxIsaAaGrpUnassignedSapSubs, tmnxBsxGrpStatusOctsToMda=tmnxBsxGrpStatusOctsToMda, tmnxBsxCflowdStatusEntry=tmnxBsxCflowdStatusEntry, tmnxBsxAppName=tmnxBsxAppName, tmnxBsxAdminControl=tmnxBsxAdminControl, tmnxBsxAarpInstPeerEPSapEncType=tmnxBsxAarpInstPeerEPSapEncType, tmnxBsxAsoValCharName=tmnxBsxAsoValCharName, tmnxBsxHttpRdStatSizeExceededHi=tmnxBsxHttpRdStatSizeExceededHi, tmnxBsxTListTable=tmnxBsxTListTable, tmnxBsxGrpStatusIngQHCFwdInPOcts=tmnxBsxGrpStatusIngQHCFwdInPOcts, tmnxBsxCflowdStatusRecDropped=tmnxBsxCflowdStatusRecDropped, tmnxBsxHttpRdStatNotRedirFTypeHi=tmnxBsxHttpRdStatNotRedirFTypeHi, tmnxBsxAarpServPointType=tmnxBsxAarpServPointType, tmnxBsxGrpStatusIngQHCFwdOutPOcts=tmnxBsxGrpStatusIngQHCFwdOutPOcts, tmnxBsxGrpStatusEgrQHCDroInPOcts=tmnxBsxGrpStatusEgrQHCDroInPOcts, tmnxBsxComplianceV10v0=tmnxBsxComplianceV10v0, tmnxBsxChargeGrpRowStatus=tmnxBsxChargeGrpRowStatus, tmnxBsxGrpStatusOctsDiscCongIn=tmnxBsxGrpStatusOctsDiscCongIn, TmnxBsxAaSubAsoValDerivedFrom=TmnxBsxAaSubAsoValDerivedFrom, tmnxBsxAppFilterFlowSetupDir=tmnxBsxAppFilterFlowSetupDir, tmnxBsxTransPrefPolicyId=tmnxBsxTransPrefPolicyId, tmnxBsxObsoleteGroupV10v0=tmnxBsxObsoleteGroupV10v0, tmnxBsxAppFilterApplication=tmnxBsxAppFilterApplication, tmnxBsxStatsAccounting=tmnxBsxStatsAccounting, tmnxBsxTransIpPolAaSubCreated=tmnxBsxTransIpPolAaSubCreated, tmnxBsxStatIsaAaCfgPolicy=tmnxBsxStatIsaAaCfgPolicy, tmnxBsxTListName=tmnxBsxTListName, tmnxBsxRadApName=tmnxBsxRadApName, tmnxBsxMobileGatewayGroups=tmnxBsxMobileGatewayGroups, tmnxBsxAarpInstTable=tmnxBsxAarpInstTable, tmnxBsxAaSubSumPktsDnyToSb=tmnxBsxAaSubSumPktsDnyToSb, tmnxBsxGrpStatusPktsOutPChipEr=tmnxBsxGrpStatusPktsOutPChipEr, tmnxBsxAqpTable=tmnxBsxAqpTable, tmnxBsxBitRateLowWatermark=tmnxBsxBitRateLowWatermark, tmnxBsxPacketRateHighWatermark=tmnxBsxPacketRateHighWatermark, tmnxBsxHttpRedirErrGroup=tmnxBsxHttpRedirErrGroup, TmnxBsxTListAttribValue=TmnxBsxTListAttribValue, tmnxBsxGrpStatusPktsDiscCongIn=tmnxBsxGrpStatusPktsDiscCongIn, tmnxBsxGrpStatusPktsInspected=tmnxBsxGrpStatusPktsInspected, tmnxBsxHttpRdStatRedirHi=tmnxBsxHttpRdStatRedirHi, tmnxBsxObsoleteGroupV8v0=tmnxBsxObsoleteGroupV8v0, tmnxBsxAaSubSumHCFlwsDnyFmSb=tmnxBsxAaSubSumHCFlwsDnyFmSb, tmnxBsxGrpStatusOctsPolicyByps=tmnxBsxGrpStatusOctsPolicyByps, tmnxBsxGrpStatusSubsDiverted=tmnxBsxGrpStatusSubsDiverted, tmnxBsxIsaAaTim=tmnxBsxIsaAaTim, tmnxBsxHttpRdStatNotRedirHi=tmnxBsxHttpRdStatNotRedirHi, tmnxBsxAaSubSumPktsDnyFmSb=tmnxBsxAaSubSumPktsDnyFmSb, tmnxBsxGrpStatusHCPktsInspected=tmnxBsxGrpStatusHCPktsInspected, tmnxBsxAqpStatsHCFlows=tmnxBsxAqpStatsHCFlows, TmnxBsxProtocolDirection=TmnxBsxProtocolDirection, tmnxBsxHttpEnrichStatObjGroup=tmnxBsxHttpEnrichStatObjGroup, tmnxBsxFlowFullLowWatermark=tmnxBsxFlowFullLowWatermark, tmnxBsxTransitIpSumUpdateTime=tmnxBsxTransitIpSumUpdateTime, tmnxBsxIsaAaGrpBitRateClear=tmnxBsxIsaAaGrpBitRateClear, tmnxBsxAppFilterExprOperator=tmnxBsxAppFilterExprOperator, tmnxBsxOvrdAaSubCharRowStatus=tmnxBsxOvrdAaSubCharRowStatus, tmnxBsxRadApServReqSendFail=tmnxBsxRadApServReqSendFail, tmnxBsxIsaAaGrpSwitchover=tmnxBsxIsaAaGrpSwitchover, tmnxBsxIsaAaGrpCapCostHighThres=tmnxBsxIsaAaGrpCapCostHighThres, tmnxBsxTransitGroups=tmnxBsxTransitGroups, tmnxBsxRadApServerTimeout=tmnxBsxRadApServerTimeout, tmnxBsxIsaAaGrpFcRowLastChange=tmnxBsxIsaAaGrpFcRowLastChange, tmnxBsxTransitIpPolicyRowLastCh=tmnxBsxTransitIpPolicyRowLastCh, tmnxBsxHttpRdStatNotRedirFTypeLo=tmnxBsxHttpRdStatNotRedirFTypeLo, tmnxBsxComplianceV9v0=tmnxBsxComplianceV9v0, tmnxBsxCflowdCollAdminState=tmnxBsxCflowdCollAdminState, tmnxBsxHttpEnrichTrafficCharLo=tmnxBsxHttpEnrichTrafficCharLo, tmnxBsxTListAttribType=tmnxBsxTListAttribType, tmnxBsxAarpInstStateChanged=tmnxBsxAarpInstStateChanged, tmnxBsxIsaAaGrpFcTable=tmnxBsxIsaAaGrpFcTable, tmnxBsxAppRowStatus=tmnxBsxAppRowStatus, tmnxBsxComplianceV8v0=tmnxBsxComplianceV8v0, tmnxBsxTransitIpPolicyIPv6EntCnt=tmnxBsxTransitIpPolicyIPv6EntCnt, tmnxBsxStatAaSubTermFlwDur=tmnxBsxStatAaSubTermFlwDur, tmnxBsxAqpCharTable=tmnxBsxAqpCharTable, tmnxBsxStatAaSubPktsAdmToSb=tmnxBsxStatAaSubPktsAdmToSb, tmnxBsxIsaAaGrpIngressQuePolicy=tmnxBsxIsaAaGrpIngressQuePolicy, tmnxBsxGrpStatusHCOctsDiscCongIn=tmnxBsxGrpStatusHCOctsDiscCongIn, tmnxBsxOvrdGroup=tmnxBsxOvrdGroup, tmnxBsxAqpAppGroup=tmnxBsxAqpAppGroup, tmnxBsxAaSubPolicerName=tmnxBsxAaSubPolicerName, tmnxBsxGrpStatusPktsFromMda=tmnxBsxGrpStatusPktsFromMda, tmnxBsxAarpInstRowStatus=tmnxBsxAarpInstRowStatus, tmnxBsxGrpStatusPktsToMda=tmnxBsxGrpStatusPktsToMda, tmnxBsxStatAaOctsAdmFmSb=tmnxBsxStatAaOctsAdmFmSb, tmnxBsxStatAaOctsDnyFmSb=tmnxBsxStatAaOctsDnyFmSb, tmnxBsxTransPrefSubTable=tmnxBsxTransPrefSubTable, tmnxBsxStatAaSubHCTermFlws=tmnxBsxStatAaSubHCTermFlws, tmnxBsxStatAaSubSdyOctsDnyToSb=tmnxBsxStatAaSubSdyOctsDnyToSb, tmnxBsxGrpStatusEgrQHCDroOutPPkts=tmnxBsxGrpStatusEgrQHCDroOutPPkts, tmnxBsxGrpStatusEgrQDroOutPPkts=tmnxBsxGrpStatusEgrQDroOutPPkts, TmnxBsxAaSubAcctLossReason=TmnxBsxAaSubAcctLossReason, tmnxBsxIsaLoadBalUnSubTransit=tmnxBsxIsaLoadBalUnSubTransit, tmnxBsxHttpEnrichStatDiscontTime=tmnxBsxHttpEnrichStatDiscontTime, tmnxBsxAppCfgEntry=tmnxBsxAppCfgEntry, tmnxBsxAaGrpPartEntry=tmnxBsxAaGrpPartEntry, tmnxBsxGrpMdaEsmSubscribers=tmnxBsxGrpMdaEsmSubscribers, tmnxBsxGrpStatusHCPktsDisCongMda=tmnxBsxGrpStatusHCPktsDisCongMda, tmnxBsxGrpStatusSubsPeak=tmnxBsxGrpStatusSubsPeak, tmnxBsxAqpCharRowStatus=tmnxBsxAqpCharRowStatus, tmnxBsxGrpStatusOctsFromMda=tmnxBsxGrpStatusOctsFromMda, tmnxBsxTransPrefEntrySubAddrType=tmnxBsxTransPrefEntrySubAddrType, tmnxBsxNotificationGroup=tmnxBsxNotificationGroup, tmnxBsxNotifyObjsGroupV7v0=tmnxBsxNotifyObjsGroupV7v0, TmnxBsxAdminCtrl=TmnxBsxAdminCtrl, tmnxBsxGrpMdaSapSubscribers=tmnxBsxGrpMdaSapSubscribers, TmnxBsxAaGrpPartIndex=TmnxBsxAaGrpPartIndex, tmnxBsxAaSubPolicerDirection=tmnxBsxAaSubPolicerDirection, tmnxBsxAaSubscriberType=tmnxBsxAaSubscriberType, tmnxBsxAsoValEntry=tmnxBsxAsoValEntry, tmnxBsxStatAaPktsAdmToSb=tmnxBsxStatAaPktsAdmToSb, tmnxBsxGrpStatusIngQFwdInPOcts=tmnxBsxGrpStatusIngQFwdInPOcts, tmnxBsxAarpInstPriority=tmnxBsxAarpInstPriority, tmnxBsxGrpStatusOctsOut=tmnxBsxGrpStatusOctsOut, tmnxBsxCflowdGroups=tmnxBsxCflowdGroups, tmnxBsxAqpSapSubscrPortId=tmnxBsxAqpSapSubscrPortId, tmnxBsxIsaAaGrpToSubSlpPolicy=tmnxBsxIsaAaGrpToSubSlpPolicy, tmnxBsxHttpPcyRdStatHCRedir=tmnxBsxHttpPcyRdStatHCRedir, tmnxBsxMdaGroupV8v0=tmnxBsxMdaGroupV8v0, tmnxBsxAarpInstPeerSubRefType=tmnxBsxAarpInstPeerSubRefType, tmnxBsxGrpStatusEgrQDiscontTime=tmnxBsxGrpStatusEgrQDiscontTime, tmnxBsxGrpStatusHCOctsDisCongMda=tmnxBsxGrpStatusHCOctsDisCongMda, tmnxBsxHttpPcyRdStatNotRedirLo=tmnxBsxHttpPcyRdStatNotRedirLo, tmnxBsxAqpRemarkFc=tmnxBsxAqpRemarkFc, tmnxBsxAaSubSumDiscontTime=tmnxBsxAaSubSumDiscontTime, tmnxBsxStatAaSubHCPktsDnyFmSb=tmnxBsxStatAaSubHCPktsDnyFmSb, tmnxBsxStatAaSubSdyFlwsAdmToSb=tmnxBsxStatAaSubSdyFlwsAdmToSb, tmnxBsxAaSubSumHCMedDurFlws=tmnxBsxAaSubSumHCMedDurFlws, tmnxBsxAppFilterProtocol=tmnxBsxAppFilterProtocol, tmnxBsxRadApServerVRtrID=tmnxBsxRadApServerVRtrID, tmnxBsxAppPolicyVersion=tmnxBsxAppPolicyVersion, tmnxBsxCustProtAdminState=tmnxBsxCustProtAdminState, tmnxBsxGrpStatusIngQFwdOutPOcts=tmnxBsxGrpStatusIngQFwdOutPOcts, TmnxBsxIsaAaGroupIndex=TmnxBsxIsaAaGroupIndex, tmnxBsxAqpDstPortLowValue=tmnxBsxAqpDstPortLowValue, tmnxBsxTransPrefPolicyTable=tmnxBsxTransPrefPolicyTable, tmnxBsxStatAaFlwsDnyFmSb=tmnxBsxStatAaFlwsDnyFmSb, tmnxBsxAaSubSumHCTermFlws=tmnxBsxAaSubSumHCTermFlws, TmnxBsxCflowdPerfMeasType=TmnxBsxCflowdPerfMeasType, tmnxBsxAppGrpChargeGrp=tmnxBsxAppGrpChargeGrp, tmnxBsxAarpInstPeerEPSdpBindId=tmnxBsxAarpInstPeerEPSdpBindId, tmnxBsxIsaAaGrpTransPrefV6RmEntr=tmnxBsxIsaAaGrpTransPrefV6RmEntr)
