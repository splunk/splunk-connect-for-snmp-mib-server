#
# PySNMP MIB module APPIAN-PPORT-COMMON-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/APPIAN-PPORT-COMMON-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:07:58 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
AcSlotNumber, AcPortNumber, AcOpStatus, AcNodeId, AcAdminStatus, acPport = mibBuilder.importSymbols("APPIAN-SMI-MIB", "AcSlotNumber", "AcPortNumber", "AcOpStatus", "AcNodeId", "AcAdminStatus", "acPport")
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, SingleValueConstraint, ConstraintsIntersection, ConstraintsUnion, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "SingleValueConstraint", "ConstraintsIntersection", "ConstraintsUnion", "ValueRangeConstraint")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Bits, MibIdentifier, Counter32, TimeTicks, Counter64, Unsigned32, ObjectIdentity, Integer32, iso, IpAddress, Gauge32, ModuleIdentity, NotificationType, MibScalar, MibTable, MibTableRow, MibTableColumn = mibBuilder.importSymbols("SNMPv2-SMI", "Bits", "MibIdentifier", "Counter32", "TimeTicks", "Counter64", "Unsigned32", "ObjectIdentity", "Integer32", "iso", "IpAddress", "Gauge32", "ModuleIdentity", "NotificationType", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
acPportCommon = ModuleIdentity((1, 3, 6, 1, 4, 1, 2785, 2, 3, 1))
acPportCommon.setRevisions(('1900-03-04 00:00',))
if mibBuilder.loadTexts: acPportCommon.setLastUpdated('0003040000Z')
if mibBuilder.loadTexts: acPportCommon.setOrganization('Appian Communications, Inc.')
acInterfaceTable = MibTable((1, 3, 6, 1, 4, 1, 2785, 2, 3, 1, 1), )
if mibBuilder.loadTexts: acInterfaceTable.setStatus('current')
acInterfaceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2785, 2, 3, 1, 1, 1), ).setIndexNames((0, "APPIAN-PPORT-COMMON-MIB", "acInterfaceNodeId"), (0, "APPIAN-PPORT-COMMON-MIB", "acInterfaceSlot"), (0, "APPIAN-PPORT-COMMON-MIB", "acInterfacePort"))
if mibBuilder.loadTexts: acInterfaceEntry.setStatus('current')
acInterfaceNodeId = MibTableColumn((1, 3, 6, 1, 4, 1, 2785, 2, 3, 1, 1, 1, 1), AcNodeId()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: acInterfaceNodeId.setStatus('current')
acInterfaceSlot = MibTableColumn((1, 3, 6, 1, 4, 1, 2785, 2, 3, 1, 1, 1, 2), AcSlotNumber()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: acInterfaceSlot.setStatus('current')
acInterfacePort = MibTableColumn((1, 3, 6, 1, 4, 1, 2785, 2, 3, 1, 1, 1, 3), AcPortNumber()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: acInterfacePort.setStatus('current')
acInterfaceType = MibTableColumn((1, 3, 6, 1, 4, 1, 2785, 2, 3, 1, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("unknown", 0), ("enet", 1), ("ds1", 2), ("ds3", 3), ("sonet", 4))).clone('unknown')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acInterfaceType.setStatus('current')
acInterfaceChannel = MibTableColumn((1, 3, 6, 1, 4, 1, 2785, 2, 3, 1, 1, 1, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acInterfaceChannel.setStatus('current')
acInterfaceIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2785, 2, 3, 1, 1, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acInterfaceIfIndex.setStatus('current')
acInterfaceAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2785, 2, 3, 1, 1, 1, 7), AcAdminStatus().clone('inactivate')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acInterfaceAdminStatus.setStatus('current')
acInterfaceOpStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2785, 2, 3, 1, 1, 1, 8), AcOpStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acInterfaceOpStatus.setStatus('current')
acInterfaceInterfaceName = MibTableColumn((1, 3, 6, 1, 4, 1, 2785, 2, 3, 1, 1, 1, 9), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acInterfaceInterfaceName.setStatus('current')
acInterfaceSubscriberId = MibTableColumn((1, 3, 6, 1, 4, 1, 2785, 2, 3, 1, 1, 1, 10), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acInterfaceSubscriberId.setStatus('current')
acInterfaceSubscriberName = MibTableColumn((1, 3, 6, 1, 4, 1, 2785, 2, 3, 1, 1, 1, 11), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acInterfaceSubscriberName.setStatus('current')
acInterfaceResellerId = MibTableColumn((1, 3, 6, 1, 4, 1, 2785, 2, 3, 1, 1, 1, 12), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acInterfaceResellerId.setStatus('current')
acInterfaceResellerName = MibTableColumn((1, 3, 6, 1, 4, 1, 2785, 2, 3, 1, 1, 1, 13), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acInterfaceResellerName.setStatus('current')
mibBuilder.exportSymbols("APPIAN-PPORT-COMMON-MIB", acInterfaceChannel=acInterfaceChannel, acInterfaceInterfaceName=acInterfaceInterfaceName, acPportCommon=acPportCommon, acInterfaceResellerId=acInterfaceResellerId, acInterfaceType=acInterfaceType, acInterfaceAdminStatus=acInterfaceAdminStatus, acInterfaceNodeId=acInterfaceNodeId, acInterfaceTable=acInterfaceTable, acInterfaceOpStatus=acInterfaceOpStatus, acInterfaceSubscriberName=acInterfaceSubscriberName, PYSNMP_MODULE_ID=acPportCommon, acInterfaceIfIndex=acInterfaceIfIndex, acInterfaceSubscriberId=acInterfaceSubscriberId, acInterfacePort=acInterfacePort, acInterfaceResellerName=acInterfaceResellerName, acInterfaceEntry=acInterfaceEntry, acInterfaceSlot=acInterfaceSlot)
