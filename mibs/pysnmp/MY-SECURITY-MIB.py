#
# PySNMP MIB module MY-SECURITY-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/MY-SECURITY-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 20:06:43 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ValueSizeConstraint, ConstraintsUnion, SingleValueConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ValueSizeConstraint", "ConstraintsUnion", "SingleValueConstraint", "ConstraintsIntersection")
ifIndex, = mibBuilder.importSymbols("IF-MIB", "ifIndex")
myMgmt, = mibBuilder.importSymbols("MY-SMI", "myMgmt")
IfIndex, ConfigStatus = mibBuilder.importSymbols("MY-TC", "IfIndex", "ConfigStatus")
EnabledStatus, = mibBuilder.importSymbols("P-BRIDGE-MIB", "EnabledStatus")
ObjectGroup, ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "ModuleCompliance", "NotificationGroup")
IpAddress, Counter64, TimeTicks, Counter32, Unsigned32, Integer32, NotificationType, ModuleIdentity, Gauge32, MibScalar, MibTable, MibTableRow, MibTableColumn, MibIdentifier, ObjectIdentity, Bits, iso = mibBuilder.importSymbols("SNMPv2-SMI", "IpAddress", "Counter64", "TimeTicks", "Counter32", "Unsigned32", "Integer32", "NotificationType", "ModuleIdentity", "Gauge32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "MibIdentifier", "ObjectIdentity", "Bits", "iso")
RowStatus, TruthValue, MacAddress, DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "RowStatus", "TruthValue", "MacAddress", "DisplayString", "TextualConvention")
mySecurityMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 6))
mySecurityMIB.setRevisions(('2002-03-20 00:00',))
if mibBuilder.loadTexts: mySecurityMIB.setLastUpdated('200203200000Z')
if mibBuilder.loadTexts: mySecurityMIB.setOrganization('D-Link Crop.')
mySecurityMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 6, 1))
myUserManagementObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 6, 1, 1))
mySecurityAddressObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 6, 1, 2))
myPortSecrrityObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 6, 1, 3))
myEnableSnmpAgent = MibScalar((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 6, 1, 1, 1), EnabledStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: myEnableSnmpAgent.setStatus('current')
myEnableWeb = MibScalar((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 6, 1, 1, 2), EnabledStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: myEnableWeb.setStatus('current')
myEnableTelnet = MibScalar((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 6, 1, 1, 3), EnabledStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: myEnableTelnet.setStatus('current')
myTelnetHostIpTable = MibTable((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 6, 1, 1, 4), )
if mibBuilder.loadTexts: myTelnetHostIpTable.setStatus('current')
myTelnetHostIpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 6, 1, 1, 4, 1), ).setIndexNames((0, "MY-SECURITY-MIB", "myTelnetHostIpAddress"))
if mibBuilder.loadTexts: myTelnetHostIpEntry.setStatus('current')
myTelnetHostIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 6, 1, 1, 4, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: myTelnetHostIpAddress.setStatus('current')
myTelnetHostIpEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 6, 1, 1, 4, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: myTelnetHostIpEnable.setStatus('current')
myWebHostIpTable = MibTable((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 6, 1, 1, 5), )
if mibBuilder.loadTexts: myWebHostIpTable.setStatus('current')
myWebHostIpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 6, 1, 1, 5, 1), ).setIndexNames((0, "MY-SECURITY-MIB", "myWebHostIpAddress"))
if mibBuilder.loadTexts: myWebHostIpEntry.setStatus('current')
myWebHostIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 6, 1, 1, 5, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: myWebHostIpAddress.setStatus('current')
myWebHostIpEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 6, 1, 1, 5, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: myWebHostIpEnable.setStatus('current')
mySecurityAddressTable = MibTable((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 6, 1, 2, 1), )
if mibBuilder.loadTexts: mySecurityAddressTable.setStatus('current')
mySecurityAddressEntry = MibTableRow((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 6, 1, 2, 1, 1), ).setIndexNames((0, "MY-SECURITY-MIB", "mySecurityAddressFdbId"), (0, "MY-SECURITY-MIB", "mySecurityAddressAddress"), (0, "MY-SECURITY-MIB", "mySecurityAddressPort"), (0, "MY-SECURITY-MIB", "mySecurityAddressIpAddr"))
if mibBuilder.loadTexts: mySecurityAddressEntry.setStatus('current')
mySecurityAddressFdbId = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 6, 1, 2, 1, 1, 1), Unsigned32())
if mibBuilder.loadTexts: mySecurityAddressFdbId.setStatus('current')
mySecurityAddressAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 6, 1, 2, 1, 1, 2), MacAddress())
if mibBuilder.loadTexts: mySecurityAddressAddress.setStatus('current')
mySecurityAddressPort = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 6, 1, 2, 1, 1, 3), IfIndex())
if mibBuilder.loadTexts: mySecurityAddressPort.setStatus('current')
mySecurityAddressIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 6, 1, 2, 1, 1, 4), IpAddress())
if mibBuilder.loadTexts: mySecurityAddressIpAddr.setStatus('current')
mySecurityAddressIfBindIp = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 6, 1, 2, 1, 1, 5), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mySecurityAddressIfBindIp.setStatus('current')
mySecurityAddressRemainAge = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 6, 1, 2, 1, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mySecurityAddressRemainAge.setStatus('current')
mySecurityAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 6, 1, 2, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("secureConfigured", 1), ("dynamicLearn", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mySecurityAddressType.setStatus('current')
mySecurityAddressStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 6, 1, 2, 1, 1, 8), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: mySecurityAddressStatus.setStatus('current')
myBindAddressTable = MibTable((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 6, 1, 2, 2), )
if mibBuilder.loadTexts: myBindAddressTable.setStatus('current')
myBindAddressEntry = MibTableRow((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 6, 1, 2, 2, 1), ).setIndexNames((0, "MY-SECURITY-MIB", "myBindAddressIpAddr"))
if mibBuilder.loadTexts: myBindAddressEntry.setStatus('current')
myBindAddressIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 6, 1, 2, 2, 1, 1), IpAddress())
if mibBuilder.loadTexts: myBindAddressIpAddr.setStatus('current')
myBindMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 6, 1, 2, 2, 1, 2), MacAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: myBindMacAddress.setStatus('current')
myBindAddressStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 6, 1, 2, 2, 1, 3), ConfigStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: myBindAddressStatus.setStatus('current')
myPortSecurityTable = MibTable((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 6, 1, 3, 1), )
if mibBuilder.loadTexts: myPortSecurityTable.setStatus('current')
myPortSecurityEntry = MibTableRow((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 6, 1, 3, 1, 1), ).setIndexNames((0, "MY-SECURITY-MIB", "myPortSecurityPortIndex"))
if mibBuilder.loadTexts: myPortSecurityEntry.setStatus('current')
myPortSecurityPortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 6, 1, 3, 1, 1, 1), IfIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: myPortSecurityPortIndex.setStatus('current')
myPortSecurityStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 6, 1, 3, 1, 1, 2), EnabledStatus().clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: myPortSecurityStatus.setStatus('current')
myPortSecurViolationType = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 6, 1, 3, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("violation-protect", 1), ("violation-restrict", 2), ("violation-shutdown", 3))).clone('violation-protect')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: myPortSecurViolationType.setStatus('current')
myPortSecurityAddrNum = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 6, 1, 3, 1, 1, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: myPortSecurityAddrNum.setStatus('current')
myPortSecurityAddrAge = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 6, 1, 3, 1, 1, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: myPortSecurityAddrAge.setStatus('current')
myPortStaticSecurAddrIfAge = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 6, 1, 3, 1, 1, 6), EnabledStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: myPortStaticSecurAddrIfAge.setStatus('current')
myPortSecurityAddressCurrentNum = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 6, 1, 3, 1, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: myPortSecurityAddressCurrentNum.setStatus('current')
myPortStaticSecurAddrCurrentNum = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 6, 1, 3, 1, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: myPortStaticSecurAddrCurrentNum.setStatus('current')
myPortSecurityIpDistrMode = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 6, 1, 3, 1, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("static", 1), ("dynamic", 2), ("staticAndDynamic", 3), ("unSpecified", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: myPortSecurityIpDistrMode.setStatus('current')
mySecurityTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 6, 2))
portSecurityViolate = NotificationType((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 6, 2, 1)).setObjects(("IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: portSecurityViolate.setStatus('current')
mySecurityMIBConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 6, 3))
mySecurityMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 6, 3, 1))
mySecurityMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 6, 3, 2))
mySecurityMIBCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 6, 3, 1, 1)).setObjects(("MY-SECURITY-MIB", "myUserManageMIBGroup"), ("MY-SECURITY-MIB", "mySecurityAddressMIBGroup"), ("MY-SECURITY-MIB", "myPortSecurityMIBGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    mySecurityMIBCompliance = mySecurityMIBCompliance.setStatus('current')
myUserManageMIBGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 6, 3, 2, 1)).setObjects(("MY-SECURITY-MIB", "myEnableSnmpAgent"), ("MY-SECURITY-MIB", "myEnableWeb"), ("MY-SECURITY-MIB", "myEnableTelnet"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    myUserManageMIBGroup = myUserManageMIBGroup.setStatus('current')
mySecurityAddressMIBGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 6, 3, 2, 2)).setObjects(("MY-SECURITY-MIB", "mySecurityAddressIfBindIp"), ("MY-SECURITY-MIB", "mySecurityAddressRemainAge"), ("MY-SECURITY-MIB", "mySecurityAddressType"), ("MY-SECURITY-MIB", "mySecurityAddressStatus"), ("MY-SECURITY-MIB", "myBindMacAddress"), ("MY-SECURITY-MIB", "myBindAddressStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    mySecurityAddressMIBGroup = mySecurityAddressMIBGroup.setStatus('current')
myPortSecurityMIBGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 6, 3, 2, 3)).setObjects(("MY-SECURITY-MIB", "myPortSecurityPortIndex"), ("MY-SECURITY-MIB", "myPortSecurityStatus"), ("MY-SECURITY-MIB", "myPortSecurViolationType"), ("MY-SECURITY-MIB", "myPortSecurityAddrNum"), ("MY-SECURITY-MIB", "myPortSecurityAddrAge"), ("MY-SECURITY-MIB", "myPortStaticSecurAddrIfAge"), ("MY-SECURITY-MIB", "myPortSecurityAddressCurrentNum"), ("MY-SECURITY-MIB", "myPortStaticSecurAddrCurrentNum"), ("MY-SECURITY-MIB", "myPortSecurityIpDistrMode"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    myPortSecurityMIBGroup = myPortSecurityMIBGroup.setStatus('current')
mibBuilder.exportSymbols("MY-SECURITY-MIB", myUserManageMIBGroup=myUserManageMIBGroup, mySecurityAddressType=mySecurityAddressType, myPortSecurityMIBGroup=myPortSecurityMIBGroup, myPortSecurityAddrAge=myPortSecurityAddrAge, myWebHostIpTable=myWebHostIpTable, myTelnetHostIpEnable=myTelnetHostIpEnable, mySecurityAddressAddress=mySecurityAddressAddress, myWebHostIpEnable=myWebHostIpEnable, myPortSecurityAddressCurrentNum=myPortSecurityAddressCurrentNum, mySecurityMIBCompliances=mySecurityMIBCompliances, myPortSecurViolationType=myPortSecurViolationType, mySecurityMIBConformance=mySecurityMIBConformance, myBindAddressIpAddr=myBindAddressIpAddr, myBindMacAddress=myBindMacAddress, mySecurityMIB=mySecurityMIB, myTelnetHostIpEntry=myTelnetHostIpEntry, myPortSecurityPortIndex=myPortSecurityPortIndex, myTelnetHostIpTable=myTelnetHostIpTable, mySecurityAddressFdbId=mySecurityAddressFdbId, myBindAddressStatus=myBindAddressStatus, myEnableSnmpAgent=myEnableSnmpAgent, mySecurityTraps=mySecurityTraps, myBindAddressTable=myBindAddressTable, myPortSecurityStatus=myPortSecurityStatus, myPortSecurityEntry=myPortSecurityEntry, mySecurityAddressPort=mySecurityAddressPort, mySecurityAddressMIBGroup=mySecurityAddressMIBGroup, myUserManagementObjects=myUserManagementObjects, mySecurityAddressIfBindIp=mySecurityAddressIfBindIp, myPortSecurityIpDistrMode=myPortSecurityIpDistrMode, myPortSecrrityObjects=myPortSecrrityObjects, mySecurityAddressIpAddr=mySecurityAddressIpAddr, myBindAddressEntry=myBindAddressEntry, myPortStaticSecurAddrIfAge=myPortStaticSecurAddrIfAge, myEnableTelnet=myEnableTelnet, myWebHostIpAddress=myWebHostIpAddress, mySecurityMIBGroups=mySecurityMIBGroups, mySecurityAddressTable=mySecurityAddressTable, mySecurityMIBCompliance=mySecurityMIBCompliance, myEnableWeb=myEnableWeb, PYSNMP_MODULE_ID=mySecurityMIB, myWebHostIpEntry=myWebHostIpEntry, myPortSecurityTable=myPortSecurityTable, portSecurityViolate=portSecurityViolate, mySecurityAddressObjects=mySecurityAddressObjects, myPortStaticSecurAddrCurrentNum=myPortStaticSecurAddrCurrentNum, mySecurityAddressEntry=mySecurityAddressEntry, mySecurityMIBObjects=mySecurityMIBObjects, mySecurityAddressStatus=mySecurityAddressStatus, myPortSecurityAddrNum=myPortSecurityAddrNum, mySecurityAddressRemainAge=mySecurityAddressRemainAge, myTelnetHostIpAddress=myTelnetHostIpAddress)
