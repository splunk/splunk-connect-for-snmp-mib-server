#
# PySNMP MIB module Nortel-Magellan-Passport-VoiceNetworkingMIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/Nortel-Magellan-Passport-VoiceNetworkingMIB
# Produced by pysmi-0.3.4 at Mon Apr 29 20:19:14 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, SingleValueConstraint, ConstraintsIntersection, ValueSizeConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "SingleValueConstraint", "ConstraintsIntersection", "ValueSizeConstraint", "ConstraintsUnion")
StorageType, PassportCounter64, RowStatus, RowPointer, Gauge32, InterfaceIndex, Counter32, Integer32, Unsigned32, DisplayString = mibBuilder.importSymbols("Nortel-Magellan-Passport-StandardTextualConventionsMIB", "StorageType", "PassportCounter64", "RowStatus", "RowPointer", "Gauge32", "InterfaceIndex", "Counter32", "Integer32", "Unsigned32", "DisplayString")
Hex, NonReplicated, AsciiString, Link, EnterpriseDateAndTime, DigitString = mibBuilder.importSymbols("Nortel-Magellan-Passport-TextualConventionsMIB", "Hex", "NonReplicated", "AsciiString", "Link", "EnterpriseDateAndTime", "DigitString")
passportMIBs, components = mibBuilder.importSymbols("Nortel-Magellan-Passport-UsefulDefinitionsMIB", "passportMIBs", "components")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
ObjectIdentity, Bits, MibScalar, MibTable, MibTableRow, MibTableColumn, NotificationType, IpAddress, MibIdentifier, iso, TimeTicks, Counter64, Integer32, Counter32, Gauge32, Unsigned32, ModuleIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "ObjectIdentity", "Bits", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "NotificationType", "IpAddress", "MibIdentifier", "iso", "TimeTicks", "Counter64", "Integer32", "Counter32", "Gauge32", "Unsigned32", "ModuleIdentity")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
voiceNetworkingMIB = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 109))
sigChan = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115))
sigChanRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 1), )
if mibBuilder.loadTexts: sigChanRowStatusTable.setStatus('mandatory')
sigChanRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VoiceNetworkingMIB", "sigChanIndex"))
if mibBuilder.loadTexts: sigChanRowStatusEntry.setStatus('mandatory')
sigChanRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sigChanRowStatus.setStatus('mandatory')
sigChanComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sigChanComponentName.setStatus('mandatory')
sigChanStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sigChanStorageType.setStatus('mandatory')
sigChanIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16)))
if mibBuilder.loadTexts: sigChanIndex.setStatus('mandatory')
sigChanCidDataTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 100), )
if mibBuilder.loadTexts: sigChanCidDataTable.setStatus('mandatory')
sigChanCidDataEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 100, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VoiceNetworkingMIB", "sigChanIndex"))
if mibBuilder.loadTexts: sigChanCidDataEntry.setStatus('mandatory')
sigChanCustomerIdentifier = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 100, 1, 1), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 8191), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sigChanCustomerIdentifier.setStatus('mandatory')
sigChanIfEntryTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 101), )
if mibBuilder.loadTexts: sigChanIfEntryTable.setStatus('mandatory')
sigChanIfEntryEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 101, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VoiceNetworkingMIB", "sigChanIndex"))
if mibBuilder.loadTexts: sigChanIfEntryEntry.setStatus('mandatory')
sigChanIfAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 101, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("testing", 3))).clone('up')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sigChanIfAdminStatus.setStatus('mandatory')
sigChanIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 101, 1, 2), InterfaceIndex().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sigChanIfIndex.setStatus('mandatory')
sigChanOperStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 102), )
if mibBuilder.loadTexts: sigChanOperStatusTable.setStatus('mandatory')
sigChanOperStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 102, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VoiceNetworkingMIB", "sigChanIndex"))
if mibBuilder.loadTexts: sigChanOperStatusEntry.setStatus('mandatory')
sigChanSnmpOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 102, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("testing", 3))).clone('up')).setMaxAccess("readonly")
if mibBuilder.loadTexts: sigChanSnmpOperStatus.setStatus('mandatory')
sigChanStateTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 103), )
if mibBuilder.loadTexts: sigChanStateTable.setStatus('mandatory')
sigChanStateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 103, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VoiceNetworkingMIB", "sigChanIndex"))
if mibBuilder.loadTexts: sigChanStateEntry.setStatus('mandatory')
sigChanAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 103, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("locked", 0), ("unlocked", 1), ("shuttingDown", 2))).clone('unlocked')).setMaxAccess("readonly")
if mibBuilder.loadTexts: sigChanAdminState.setStatus('mandatory')
sigChanOperationalState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 103, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1))).clone('disabled')).setMaxAccess("readonly")
if mibBuilder.loadTexts: sigChanOperationalState.setStatus('mandatory')
sigChanUsageState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 103, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("idle", 0), ("active", 1), ("busy", 2))).clone('idle')).setMaxAccess("readonly")
if mibBuilder.loadTexts: sigChanUsageState.setStatus('mandatory')
sigChanProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 104), )
if mibBuilder.loadTexts: sigChanProvTable.setStatus('mandatory')
sigChanProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 104, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VoiceNetworkingMIB", "sigChanIndex"))
if mibBuilder.loadTexts: sigChanProvEntry.setStatus('mandatory')
sigChanCommentText = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 104, 1, 1), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(0, 40))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sigChanCommentText.setStatus('mandatory')
sigChanOctothorpeEod = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 104, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("yes", 0), ("no", 1))).clone('no')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sigChanOctothorpeEod.setStatus('mandatory')
sigChanForceNpiTon = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 104, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("yes", 0), ("no", 1))).clone('no')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sigChanForceNpiTon.setStatus('mandatory')
sigChanDefaultNpiTon = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 104, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12))).clone(namedValues=NamedValues(("unknown", 0), ("international", 1), ("national", 2), ("subscriber", 3), ("p0", 4), ("p1", 5), ("p2", 6), ("p3", 7), ("p4", 8), ("p5", 9), ("p6", 10), ("p7", 11), ("casUnknown", 12))).clone('casUnknown')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sigChanDefaultNpiTon.setStatus('mandatory')
sigChanSubroutesTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 307), )
if mibBuilder.loadTexts: sigChanSubroutesTable.setStatus('mandatory')
sigChanSubroutesEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 307, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VoiceNetworkingMIB", "sigChanIndex"), (0, "Nortel-Magellan-Passport-VoiceNetworkingMIB", "sigChanSubroutesValue"))
if mibBuilder.loadTexts: sigChanSubroutesEntry.setStatus('mandatory')
sigChanSubroutesValue = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 307, 1, 1), Link()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sigChanSubroutesValue.setStatus('mandatory')
sigChanSubroutesRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 307, 1, 2), RowStatus()).setMaxAccess("writeonly")
if mibBuilder.loadTexts: sigChanSubroutesRowStatus.setStatus('mandatory')
sigChanDegradedSubroutesTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 308), )
if mibBuilder.loadTexts: sigChanDegradedSubroutesTable.setStatus('mandatory')
sigChanDegradedSubroutesEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 308, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VoiceNetworkingMIB", "sigChanIndex"), (0, "Nortel-Magellan-Passport-VoiceNetworkingMIB", "sigChanDegradedSubroutesValue"))
if mibBuilder.loadTexts: sigChanDegradedSubroutesEntry.setStatus('mandatory')
sigChanDegradedSubroutesValue = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 308, 1, 1), RowPointer()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sigChanDegradedSubroutesValue.setStatus('mandatory')
sigChanBch = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 7))
sigChanBchRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 7, 1), )
if mibBuilder.loadTexts: sigChanBchRowStatusTable.setStatus('mandatory')
sigChanBchRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 7, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VoiceNetworkingMIB", "sigChanIndex"), (0, "Nortel-Magellan-Passport-VoiceNetworkingMIB", "sigChanBchIndex"))
if mibBuilder.loadTexts: sigChanBchRowStatusEntry.setStatus('mandatory')
sigChanBchRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 7, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sigChanBchRowStatus.setStatus('mandatory')
sigChanBchComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 7, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sigChanBchComponentName.setStatus('mandatory')
sigChanBchStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 7, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sigChanBchStorageType.setStatus('mandatory')
sigChanBchIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 7, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 331)))
if mibBuilder.loadTexts: sigChanBchIndex.setStatus('mandatory')
sigChanBchOperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 7, 4), )
if mibBuilder.loadTexts: sigChanBchOperTable.setStatus('mandatory')
sigChanBchOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 7, 4, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VoiceNetworkingMIB", "sigChanIndex"), (0, "Nortel-Magellan-Passport-VoiceNetworkingMIB", "sigChanBchIndex"))
if mibBuilder.loadTexts: sigChanBchOperEntry.setStatus('mandatory')
sigChanBchStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 7, 4, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9))).clone(namedValues=NamedValues(("unknown", 0), ("maintB", 1), ("idle", 2), ("busy", 3), ("ingress", 4), ("egress", 5), ("idleMaintenance", 6), ("ingressMaintenance", 7), ("egressMaintenance", 8), ("outOfService", 9))).clone('unknown')).setMaxAccess("readonly")
if mibBuilder.loadTexts: sigChanBchStatus.setStatus('mandatory')
sigChanBchTimeSlot = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 7, 4, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sigChanBchTimeSlot.setStatus('mandatory')
sigChanBchVsrInstance = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 7, 4, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sigChanBchVsrInstance.setStatus('mandatory')
sigChanBchCalledDirectoryNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 7, 4, 1, 4), DigitString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sigChanBchCalledDirectoryNumber.setStatus('mandatory')
sigChanGw = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 15))
sigChanGwRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 15, 1), )
if mibBuilder.loadTexts: sigChanGwRowStatusTable.setStatus('mandatory')
sigChanGwRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 15, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VoiceNetworkingMIB", "sigChanIndex"), (0, "Nortel-Magellan-Passport-VoiceNetworkingMIB", "sigChanGwIndex"))
if mibBuilder.loadTexts: sigChanGwRowStatusEntry.setStatus('mandatory')
sigChanGwRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 15, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sigChanGwRowStatus.setStatus('mandatory')
sigChanGwComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 15, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sigChanGwComponentName.setStatus('mandatory')
sigChanGwStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 15, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sigChanGwStorageType.setStatus('mandatory')
sigChanGwIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 15, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: sigChanGwIndex.setStatus('mandatory')
sigChanGwStatsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 15, 101), )
if mibBuilder.loadTexts: sigChanGwStatsTable.setStatus('mandatory')
sigChanGwStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 15, 101, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VoiceNetworkingMIB", "sigChanIndex"), (0, "Nortel-Magellan-Passport-VoiceNetworkingMIB", "sigChanGwIndex"))
if mibBuilder.loadTexts: sigChanGwStatsEntry.setStatus('mandatory')
sigChanGwRequiredConversions = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 15, 101, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sigChanGwRequiredConversions.setStatus('mandatory')
sigChanGwUnsupportedConversions = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 15, 101, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sigChanGwUnsupportedConversions.setStatus('mandatory')
sigChanGwGwcTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 15, 301), )
if mibBuilder.loadTexts: sigChanGwGwcTable.setStatus('obsolete')
sigChanGwGwcEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 15, 301, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VoiceNetworkingMIB", "sigChanIndex"), (0, "Nortel-Magellan-Passport-VoiceNetworkingMIB", "sigChanGwIndex"), (0, "Nortel-Magellan-Passport-VoiceNetworkingMIB", "sigChanGwGwcIndex"))
if mibBuilder.loadTexts: sigChanGwGwcEntry.setStatus('obsolete')
sigChanGwGwcIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 15, 301, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("etsiQsigPG", 0), ("nisPG", 1), ("analogAndCasPG", 2), ("euroIsdnPG", 3), ("mcdnPG", 4), ("mcdnUniPG", 5))))
if mibBuilder.loadTexts: sigChanGwGwcIndex.setStatus('obsolete')
sigChanGwGwcValue = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 15, 301, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("noGw", 0), ("singleEndedGw", 1), ("doubleEndedGw", 2), ("singleOrDoubleEndedGw", 3), ("nativePG", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sigChanGwGwcValue.setStatus('obsolete')
sigChanGwGatewayCapTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 15, 302), )
if mibBuilder.loadTexts: sigChanGwGatewayCapTable.setStatus('mandatory')
sigChanGwGatewayCapEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 15, 302, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VoiceNetworkingMIB", "sigChanIndex"), (0, "Nortel-Magellan-Passport-VoiceNetworkingMIB", "sigChanGwIndex"), (0, "Nortel-Magellan-Passport-VoiceNetworkingMIB", "sigChanGwGatewayCapIndex"))
if mibBuilder.loadTexts: sigChanGwGatewayCapEntry.setStatus('mandatory')
sigChanGwGatewayCapIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 15, 302, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("etsiQsigPG", 0), ("mcdnPG", 1), ("analogAndCasPG", 2), ("euroIsdnPG", 3))))
if mibBuilder.loadTexts: sigChanGwGatewayCapIndex.setStatus('mandatory')
sigChanGwGatewayCapValue = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 15, 302, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("noGw", 0), ("singleEndedGw", 1), ("doubleEndedGw", 2), ("singleOrDoubleEndedGw", 3), ("nativePG", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sigChanGwGatewayCapValue.setStatus('mandatory')
sigChanNcas = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 16))
sigChanNcasRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 16, 1), )
if mibBuilder.loadTexts: sigChanNcasRowStatusTable.setStatus('mandatory')
sigChanNcasRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 16, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VoiceNetworkingMIB", "sigChanIndex"), (0, "Nortel-Magellan-Passport-VoiceNetworkingMIB", "sigChanNcasIndex"))
if mibBuilder.loadTexts: sigChanNcasRowStatusEntry.setStatus('mandatory')
sigChanNcasRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 16, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sigChanNcasRowStatus.setStatus('mandatory')
sigChanNcasComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 16, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sigChanNcasComponentName.setStatus('mandatory')
sigChanNcasStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 16, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sigChanNcasStorageType.setStatus('mandatory')
sigChanNcasIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 16, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)))
if mibBuilder.loadTexts: sigChanNcasIndex.setStatus('mandatory')
sigChanNcasOperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 16, 100), )
if mibBuilder.loadTexts: sigChanNcasOperTable.setStatus('mandatory')
sigChanNcasOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 16, 100, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VoiceNetworkingMIB", "sigChanIndex"), (0, "Nortel-Magellan-Passport-VoiceNetworkingMIB", "sigChanNcasIndex"))
if mibBuilder.loadTexts: sigChanNcasOperEntry.setStatus('mandatory')
sigChanNcasDirection = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 16, 100, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("ingress", 1), ("egress", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sigChanNcasDirection.setStatus('mandatory')
sigChanNcasCallReference = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 16, 100, 1, 2), Hex().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sigChanNcasCallReference.setStatus('mandatory')
sigChanNcasCalledDirectoryNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 16, 100, 1, 3), DigitString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sigChanNcasCalledDirectoryNumber.setStatus('mandatory')
sigChanNcasDuration = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 16, 100, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sigChanNcasDuration.setStatus('mandatory')
sigChanICmap = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 18))
sigChanICmapRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 18, 1), )
if mibBuilder.loadTexts: sigChanICmapRowStatusTable.setStatus('mandatory')
sigChanICmapRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 18, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VoiceNetworkingMIB", "sigChanIndex"), (0, "Nortel-Magellan-Passport-VoiceNetworkingMIB", "sigChanICmapIndex"))
if mibBuilder.loadTexts: sigChanICmapRowStatusEntry.setStatus('mandatory')
sigChanICmapRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 18, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sigChanICmapRowStatus.setStatus('mandatory')
sigChanICmapComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 18, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sigChanICmapComponentName.setStatus('mandatory')
sigChanICmapStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 18, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sigChanICmapStorageType.setStatus('mandatory')
sigChanICmapIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 18, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: sigChanICmapIndex.setStatus('mandatory')
sigChanICmapIntCauseTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 18, 100), )
if mibBuilder.loadTexts: sigChanICmapIntCauseTable.setStatus('mandatory')
sigChanICmapIntCauseEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 18, 100, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VoiceNetworkingMIB", "sigChanIndex"), (0, "Nortel-Magellan-Passport-VoiceNetworkingMIB", "sigChanICmapIndex"))
if mibBuilder.loadTexts: sigChanICmapIntCauseEntry.setStatus('mandatory')
sigChanICmapEgressLinkOutOfServCause = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 18, 100, 1, 1), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 127), ValueRangeConstraint(128, 128), )).clone(128)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sigChanICmapEgressLinkOutOfServCause.setStatus('mandatory')
sigChanICmapChanOrCircNotAvailCause = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 18, 100, 1, 2), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 127), ValueRangeConstraint(128, 128), )).clone(128)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sigChanICmapChanOrCircNotAvailCause.setStatus('mandatory')
sigChanICmapTempFailureCause = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 18, 100, 1, 3), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 127), ValueRangeConstraint(128, 128), )).clone(128)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sigChanICmapTempFailureCause.setStatus('mandatory')
sigChanICmapSwitchCongestCause = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 18, 100, 1, 4), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 127), ValueRangeConstraint(128, 128), )).clone(128)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sigChanICmapSwitchCongestCause.setStatus('mandatory')
sigChanICmapReqChanOrCircNotAvailCause = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 18, 100, 1, 5), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 127), ValueRangeConstraint(128, 128), )).clone(128)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sigChanICmapReqChanOrCircNotAvailCause.setStatus('mandatory')
sigChanICmapResourceUnavailCause = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 18, 100, 1, 6), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 127), ValueRangeConstraint(128, 128), )).clone(128)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sigChanICmapResourceUnavailCause.setStatus('mandatory')
sigChanICmapServNotAllowedCause = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 18, 100, 1, 7), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 127), ValueRangeConstraint(128, 128), )).clone(128)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sigChanICmapServNotAllowedCause.setStatus('mandatory')
sigChanICmapNoSuchChannelCause = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 18, 100, 1, 8), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 127), ValueRangeConstraint(128, 128), )).clone(128)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sigChanICmapNoSuchChannelCause.setStatus('mandatory')
sigChanICmapIncompatDestCause = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 18, 100, 1, 9), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 127), ValueRangeConstraint(128, 128), )).clone(128)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sigChanICmapIncompatDestCause.setStatus('mandatory')
vRoute = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 116))
vRouteRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 116, 1), )
if mibBuilder.loadTexts: vRouteRowStatusTable.setStatus('mandatory')
vRouteRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 116, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VoiceNetworkingMIB", "vRouteIndex"))
if mibBuilder.loadTexts: vRouteRowStatusEntry.setStatus('mandatory')
vRouteRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 116, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vRouteRowStatus.setStatus('mandatory')
vRouteComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 116, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vRouteComponentName.setStatus('mandatory')
vRouteStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 116, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vRouteStorageType.setStatus('mandatory')
vRouteIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 116, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16)))
if mibBuilder.loadTexts: vRouteIndex.setStatus('mandatory')
vRouteProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 116, 10), )
if mibBuilder.loadTexts: vRouteProvTable.setStatus('mandatory')
vRouteProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 116, 10, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VoiceNetworkingMIB", "vRouteIndex"))
if mibBuilder.loadTexts: vRouteProvEntry.setStatus('mandatory')
vRouteCommentText = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 116, 10, 1, 1), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(0, 40))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vRouteCommentText.setStatus('mandatory')
vRouteTypeOfRoute = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 116, 10, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("voice", 0), ("data", 1), ("voiceData", 2))).clone('voiceData')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vRouteTypeOfRoute.setStatus('mandatory')
vRouteDiallingPlan0 = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 116, 10, 1, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(2, 2)).setFixedLength(2).clone(hexValue="fff8")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vRouteDiallingPlan0.setStatus('mandatory')
vRouteDiallingPlan1 = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 116, 10, 1, 7), OctetString().subtype(subtypeSpec=ValueSizeConstraint(2, 2)).setFixedLength(2)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vRouteDiallingPlan1.setStatus('mandatory')
vRouteDiallingPlan2 = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 116, 10, 1, 8), OctetString().subtype(subtypeSpec=ValueSizeConstraint(2, 2)).setFixedLength(2)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vRouteDiallingPlan2.setStatus('mandatory')
vRouteHuntingAlgorithm = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 116, 10, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("bottomUpLinear", 0), ("topDownLinear", 1))).clone('bottomUpLinear')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vRouteHuntingAlgorithm.setStatus('mandatory')
vRouteMinimumDigitsToRoute = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 116, 10, 1, 10), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 16)).clone(3)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vRouteMinimumDigitsToRoute.setStatus('mandatory')
vRouteVoiceNetworkingCallServer = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 116, 10, 1, 11), Link()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vRouteVoiceNetworkingCallServer.setStatus('mandatory')
vRouteOverrideDirectoryNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 116, 10, 1, 12), DigitString().subtype(subtypeSpec=ValueSizeConstraint(0, 24)).clone(hexValue="")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vRouteOverrideDirectoryNumber.setStatus('mandatory')
vRoutePrivateNetworkIdentifer = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 116, 10, 1, 13), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 32700))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vRoutePrivateNetworkIdentifer.setStatus('mandatory')
vRouteCidDataTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 116, 11), )
if mibBuilder.loadTexts: vRouteCidDataTable.setStatus('mandatory')
vRouteCidDataEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 116, 11, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VoiceNetworkingMIB", "vRouteIndex"))
if mibBuilder.loadTexts: vRouteCidDataEntry.setStatus('mandatory')
vRouteCustomerIdentifier = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 116, 11, 1, 1), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 8191), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vRouteCustomerIdentifier.setStatus('mandatory')
vRouteIfEntryTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 116, 12), )
if mibBuilder.loadTexts: vRouteIfEntryTable.setStatus('mandatory')
vRouteIfEntryEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 116, 12, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VoiceNetworkingMIB", "vRouteIndex"))
if mibBuilder.loadTexts: vRouteIfEntryEntry.setStatus('mandatory')
vRouteIfAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 116, 12, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("testing", 3))).clone('up')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vRouteIfAdminStatus.setStatus('mandatory')
vRouteIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 116, 12, 1, 2), InterfaceIndex().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vRouteIfIndex.setStatus('mandatory')
vRouteStateTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 116, 13), )
if mibBuilder.loadTexts: vRouteStateTable.setStatus('mandatory')
vRouteStateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 116, 13, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VoiceNetworkingMIB", "vRouteIndex"))
if mibBuilder.loadTexts: vRouteStateEntry.setStatus('mandatory')
vRouteAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 116, 13, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("locked", 0), ("unlocked", 1), ("shuttingDown", 2))).clone('unlocked')).setMaxAccess("readonly")
if mibBuilder.loadTexts: vRouteAdminState.setStatus('mandatory')
vRouteOperationalState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 116, 13, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1))).clone('disabled')).setMaxAccess("readonly")
if mibBuilder.loadTexts: vRouteOperationalState.setStatus('mandatory')
vRouteUsageState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 116, 13, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("idle", 0), ("active", 1), ("busy", 2))).clone('idle')).setMaxAccess("readonly")
if mibBuilder.loadTexts: vRouteUsageState.setStatus('mandatory')
vRouteOperStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 116, 14), )
if mibBuilder.loadTexts: vRouteOperStatusTable.setStatus('mandatory')
vRouteOperStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 116, 14, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VoiceNetworkingMIB", "vRouteIndex"))
if mibBuilder.loadTexts: vRouteOperStatusEntry.setStatus('mandatory')
vRouteSnmpOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 116, 14, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("testing", 3))).clone('up')).setMaxAccess("readonly")
if mibBuilder.loadTexts: vRouteSnmpOperStatus.setStatus('mandatory')
vRouteStatsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 116, 15), )
if mibBuilder.loadTexts: vRouteStatsTable.setStatus('mandatory')
vRouteStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 116, 15, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VoiceNetworkingMIB", "vRouteIndex"))
if mibBuilder.loadTexts: vRouteStatsEntry.setStatus('mandatory')
vRouteTotalCallsFromSubnet = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 116, 15, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vRouteTotalCallsFromSubnet.setStatus('mandatory')
vRouteCallsClearedNoChannel = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 116, 15, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vRouteCallsClearedNoChannel.setStatus('mandatory')
vRouteCallsClearedOutOfService = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 116, 15, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vRouteCallsClearedOutOfService.setStatus('mandatory')
vRouteCallsRejected = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 116, 15, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vRouteCallsRejected.setStatus('mandatory')
vRouteSubroutesTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 116, 309), )
if mibBuilder.loadTexts: vRouteSubroutesTable.setStatus('mandatory')
vRouteSubroutesEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 116, 309, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VoiceNetworkingMIB", "vRouteIndex"), (0, "Nortel-Magellan-Passport-VoiceNetworkingMIB", "vRouteSubroutesValue"))
if mibBuilder.loadTexts: vRouteSubroutesEntry.setStatus('mandatory')
vRouteSubroutesValue = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 116, 309, 1, 1), Link()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vRouteSubroutesValue.setStatus('mandatory')
vRouteSubroutesRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 116, 309, 1, 2), RowStatus()).setMaxAccess("writeonly")
if mibBuilder.loadTexts: vRouteSubroutesRowStatus.setStatus('mandatory')
vRouteDegradedSubroutesTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 116, 310), )
if mibBuilder.loadTexts: vRouteDegradedSubroutesTable.setStatus('mandatory')
vRouteDegradedSubroutesEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 116, 310, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VoiceNetworkingMIB", "vRouteIndex"), (0, "Nortel-Magellan-Passport-VoiceNetworkingMIB", "vRouteDegradedSubroutesValue"))
if mibBuilder.loadTexts: vRouteDegradedSubroutesEntry.setStatus('mandatory')
vRouteDegradedSubroutesValue = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 116, 310, 1, 1), RowPointer()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vRouteDegradedSubroutesValue.setStatus('mandatory')
vRouteDebug = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 116, 2))
vRouteDebugRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 116, 2, 1), )
if mibBuilder.loadTexts: vRouteDebugRowStatusTable.setStatus('mandatory')
vRouteDebugRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 116, 2, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VoiceNetworkingMIB", "vRouteIndex"), (0, "Nortel-Magellan-Passport-VoiceNetworkingMIB", "vRouteDebugIndex"))
if mibBuilder.loadTexts: vRouteDebugRowStatusEntry.setStatus('mandatory')
vRouteDebugRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 116, 2, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vRouteDebugRowStatus.setStatus('mandatory')
vRouteDebugComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 116, 2, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vRouteDebugComponentName.setStatus('mandatory')
vRouteDebugStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 116, 2, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vRouteDebugStorageType.setStatus('mandatory')
vRouteDebugIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 116, 2, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: vRouteDebugIndex.setStatus('mandatory')
vRouteInterface = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 116, 3))
vRouteInterfaceRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 116, 3, 1), )
if mibBuilder.loadTexts: vRouteInterfaceRowStatusTable.setStatus('mandatory')
vRouteInterfaceRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 116, 3, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VoiceNetworkingMIB", "vRouteIndex"), (0, "Nortel-Magellan-Passport-VoiceNetworkingMIB", "vRouteInterfaceIndex"))
if mibBuilder.loadTexts: vRouteInterfaceRowStatusEntry.setStatus('mandatory')
vRouteInterfaceRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 116, 3, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vRouteInterfaceRowStatus.setStatus('mandatory')
vRouteInterfaceComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 116, 3, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vRouteInterfaceComponentName.setStatus('mandatory')
vRouteInterfaceStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 116, 3, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vRouteInterfaceStorageType.setStatus('mandatory')
vRouteInterfaceIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 116, 3, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: vRouteInterfaceIndex.setStatus('mandatory')
vRouteInterfaceProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 116, 3, 10), )
if mibBuilder.loadTexts: vRouteInterfaceProvTable.setStatus('mandatory')
vRouteInterfaceProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 116, 3, 10, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VoiceNetworkingMIB", "vRouteIndex"), (0, "Nortel-Magellan-Passport-VoiceNetworkingMIB", "vRouteInterfaceIndex"))
if mibBuilder.loadTexts: vRouteInterfaceProvEntry.setStatus('mandatory')
vRouteInterfaceIngressAudioGain = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 116, 3, 10, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-12, 12))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vRouteInterfaceIngressAudioGain.setStatus('mandatory')
vRouteInterfaceEgressAudioGain = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 116, 3, 10, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-12, 12))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vRouteInterfaceEgressAudioGain.setStatus('mandatory')
vRouteInterfaceTandemPassThrough = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 116, 3, 10, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vRouteInterfaceTandemPassThrough.setStatus('mandatory')
vRouteInterfaceEchoCancellation = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 116, 3, 10, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("on", 1))).clone('on')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vRouteInterfaceEchoCancellation.setStatus('obsolete')
vRouteInterfaceComfortNoiseCap = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 116, 3, 10, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(-78, -78), ValueRangeConstraint(-65, -65), ValueRangeConstraint(-60, -60), ValueRangeConstraint(-54, -54), ValueRangeConstraint(-52, -52), ValueRangeConstraint(-50, -50), ValueRangeConstraint(-48, -48), ValueRangeConstraint(-46, -46), ValueRangeConstraint(-44, -44), ValueRangeConstraint(-42, -42), ValueRangeConstraint(-40, -40), )).clone(-40)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vRouteInterfaceComfortNoiseCap.setStatus('mandatory')
vRouteInterfaceSpeechHangoverTime = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 116, 3, 10, 1, 7), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(10, 500)).clone(150)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vRouteInterfaceSpeechHangoverTime.setStatus('mandatory')
vRouteInterfaceFaxHangoverTimeG711G726 = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 116, 3, 10, 1, 8), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(300, 20000)).clone(1000)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vRouteInterfaceFaxHangoverTimeG711G726.setStatus('mandatory')
vRouteInterfaceModemFaxSpeechDiscrim = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 116, 3, 10, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("on", 1))).clone('on')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vRouteInterfaceModemFaxSpeechDiscrim.setStatus('mandatory')
vRouteInterfaceEchoTailDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 116, 3, 10, 1, 10), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(32, 32), ValueRangeConstraint(64, 64), )).clone(64)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vRouteInterfaceEchoTailDelay.setStatus('mandatory')
vRouteInterfaceEchoReturnLoss = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 116, 3, 10, 1, 11), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(3, 3), ValueRangeConstraint(6, 6), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vRouteInterfaceEchoReturnLoss.setStatus('mandatory')
vRouteInterfaceEcanBypassMode = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 116, 3, 10, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("g164", 0), ("g165", 1), ("never", 2))).clone('g165')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vRouteInterfaceEcanBypassMode.setStatus('mandatory')
vRouteInterfaceStructuredEchoCancellationTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 116, 3, 472), )
if mibBuilder.loadTexts: vRouteInterfaceStructuredEchoCancellationTable.setStatus('mandatory')
vRouteInterfaceStructuredEchoCancellationEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 116, 3, 472, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VoiceNetworkingMIB", "vRouteIndex"), (0, "Nortel-Magellan-Passport-VoiceNetworkingMIB", "vRouteInterfaceIndex"), (0, "Nortel-Magellan-Passport-VoiceNetworkingMIB", "vRouteInterfaceStructuredEchoCancellationIndex"))
if mibBuilder.loadTexts: vRouteInterfaceStructuredEchoCancellationEntry.setStatus('mandatory')
vRouteInterfaceStructuredEchoCancellationIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 116, 3, 472, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("v1", 0), ("v2", 1))))
if mibBuilder.loadTexts: vRouteInterfaceStructuredEchoCancellationIndex.setStatus('mandatory')
vRouteInterfaceStructuredEchoCancellationValue = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 116, 3, 472, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("on", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vRouteInterfaceStructuredEchoCancellationValue.setStatus('mandatory')
vRouteDna = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 116, 4))
vRouteDnaRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 116, 4, 1), )
if mibBuilder.loadTexts: vRouteDnaRowStatusTable.setStatus('mandatory')
vRouteDnaRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 116, 4, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VoiceNetworkingMIB", "vRouteIndex"), (0, "Nortel-Magellan-Passport-VoiceNetworkingMIB", "vRouteDnaIndex"))
if mibBuilder.loadTexts: vRouteDnaRowStatusEntry.setStatus('mandatory')
vRouteDnaRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 116, 4, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vRouteDnaRowStatus.setStatus('mandatory')
vRouteDnaComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 116, 4, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vRouteDnaComponentName.setStatus('mandatory')
vRouteDnaStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 116, 4, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vRouteDnaStorageType.setStatus('mandatory')
vRouteDnaIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 116, 4, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: vRouteDnaIndex.setStatus('mandatory')
vRouteDnaAddressTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 116, 4, 10), )
if mibBuilder.loadTexts: vRouteDnaAddressTable.setStatus('mandatory')
vRouteDnaAddressEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 116, 4, 10, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VoiceNetworkingMIB", "vRouteIndex"), (0, "Nortel-Magellan-Passport-VoiceNetworkingMIB", "vRouteDnaIndex"))
if mibBuilder.loadTexts: vRouteDnaAddressEntry.setStatus('mandatory')
vRouteDnaNumberingPlanIndicator = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 116, 4, 10, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("x121", 0), ("e164", 1))).clone('e164')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vRouteDnaNumberingPlanIndicator.setStatus('mandatory')
vRouteDnaDataNetworkAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 116, 4, 10, 1, 2), DigitString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vRouteDnaDataNetworkAddress.setStatus('mandatory')
vRouteDnaHgm = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 116, 4, 3))
vRouteDnaHgmRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 116, 4, 3, 1), )
if mibBuilder.loadTexts: vRouteDnaHgmRowStatusTable.setStatus('mandatory')
vRouteDnaHgmRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 116, 4, 3, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VoiceNetworkingMIB", "vRouteIndex"), (0, "Nortel-Magellan-Passport-VoiceNetworkingMIB", "vRouteDnaIndex"), (0, "Nortel-Magellan-Passport-VoiceNetworkingMIB", "vRouteDnaHgmIndex"))
if mibBuilder.loadTexts: vRouteDnaHgmRowStatusEntry.setStatus('mandatory')
vRouteDnaHgmRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 116, 4, 3, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vRouteDnaHgmRowStatus.setStatus('mandatory')
vRouteDnaHgmComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 116, 4, 3, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vRouteDnaHgmComponentName.setStatus('mandatory')
vRouteDnaHgmStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 116, 4, 3, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vRouteDnaHgmStorageType.setStatus('mandatory')
vRouteDnaHgmIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 116, 4, 3, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: vRouteDnaHgmIndex.setStatus('mandatory')
vRouteDnaHgmIfTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 116, 4, 3, 10), )
if mibBuilder.loadTexts: vRouteDnaHgmIfTable.setStatus('mandatory')
vRouteDnaHgmIfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 116, 4, 3, 10, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VoiceNetworkingMIB", "vRouteIndex"), (0, "Nortel-Magellan-Passport-VoiceNetworkingMIB", "vRouteDnaIndex"), (0, "Nortel-Magellan-Passport-VoiceNetworkingMIB", "vRouteDnaHgmIndex"))
if mibBuilder.loadTexts: vRouteDnaHgmIfEntry.setStatus('mandatory')
vRouteDnaHgmUsageDeltaUpdateThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 116, 4, 3, 10, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4096)).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vRouteDnaHgmUsageDeltaUpdateThreshold.setStatus('mandatory')
vRouteDnaHgmOpTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 116, 4, 3, 11), )
if mibBuilder.loadTexts: vRouteDnaHgmOpTable.setStatus('mandatory')
vRouteDnaHgmOpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 116, 4, 3, 11, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VoiceNetworkingMIB", "vRouteIndex"), (0, "Nortel-Magellan-Passport-VoiceNetworkingMIB", "vRouteDnaIndex"), (0, "Nortel-Magellan-Passport-VoiceNetworkingMIB", "vRouteDnaHgmIndex"))
if mibBuilder.loadTexts: vRouteDnaHgmOpEntry.setStatus('mandatory')
vRouteDnaHgmMaxAvailableChannels = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 116, 4, 3, 11, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4096))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vRouteDnaHgmMaxAvailableChannels.setStatus('mandatory')
vRouteDnaHgmAvailableChannels = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 116, 4, 3, 11, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4096))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vRouteDnaHgmAvailableChannels.setStatus('mandatory')
vRouteDnaHgmAvailabilityDelta = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 116, 4, 3, 11, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-4096, 4096))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vRouteDnaHgmAvailabilityDelta.setStatus('mandatory')
vRouteDnaHgmHgAddr = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 116, 4, 3, 2))
vRouteDnaHgmHgAddrRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 116, 4, 3, 2, 1), )
if mibBuilder.loadTexts: vRouteDnaHgmHgAddrRowStatusTable.setStatus('mandatory')
vRouteDnaHgmHgAddrRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 116, 4, 3, 2, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VoiceNetworkingMIB", "vRouteIndex"), (0, "Nortel-Magellan-Passport-VoiceNetworkingMIB", "vRouteDnaIndex"), (0, "Nortel-Magellan-Passport-VoiceNetworkingMIB", "vRouteDnaHgmIndex"), (0, "Nortel-Magellan-Passport-VoiceNetworkingMIB", "vRouteDnaHgmHgAddrIndex"))
if mibBuilder.loadTexts: vRouteDnaHgmHgAddrRowStatusEntry.setStatus('mandatory')
vRouteDnaHgmHgAddrRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 116, 4, 3, 2, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vRouteDnaHgmHgAddrRowStatus.setStatus('mandatory')
vRouteDnaHgmHgAddrComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 116, 4, 3, 2, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vRouteDnaHgmHgAddrComponentName.setStatus('mandatory')
vRouteDnaHgmHgAddrStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 116, 4, 3, 2, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vRouteDnaHgmHgAddrStorageType.setStatus('mandatory')
vRouteDnaHgmHgAddrIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 116, 4, 3, 2, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1)))
if mibBuilder.loadTexts: vRouteDnaHgmHgAddrIndex.setStatus('mandatory')
vRouteDnaHgmHgAddrAddrTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 116, 4, 3, 2, 10), )
if mibBuilder.loadTexts: vRouteDnaHgmHgAddrAddrTable.setStatus('mandatory')
vRouteDnaHgmHgAddrAddrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 116, 4, 3, 2, 10, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VoiceNetworkingMIB", "vRouteIndex"), (0, "Nortel-Magellan-Passport-VoiceNetworkingMIB", "vRouteDnaIndex"), (0, "Nortel-Magellan-Passport-VoiceNetworkingMIB", "vRouteDnaHgmIndex"), (0, "Nortel-Magellan-Passport-VoiceNetworkingMIB", "vRouteDnaHgmHgAddrIndex"))
if mibBuilder.loadTexts: vRouteDnaHgmHgAddrAddrEntry.setStatus('mandatory')
vRouteDnaHgmHgAddrNumberingPlanIndicator = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 116, 4, 3, 2, 10, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("x121", 0), ("e164", 1))).clone('x121')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vRouteDnaHgmHgAddrNumberingPlanIndicator.setStatus('mandatory')
vRouteDnaHgmHgAddrDataNetworkAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 116, 4, 3, 2, 10, 1, 2), DigitString().subtype(subtypeSpec=ValueSizeConstraint(1, 15))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vRouteDnaHgmHgAddrDataNetworkAddress.setStatus('mandatory')
vRouteAcct = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 116, 5))
vRouteAcctRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 116, 5, 1), )
if mibBuilder.loadTexts: vRouteAcctRowStatusTable.setStatus('mandatory')
vRouteAcctRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 116, 5, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VoiceNetworkingMIB", "vRouteIndex"), (0, "Nortel-Magellan-Passport-VoiceNetworkingMIB", "vRouteAcctIndex"))
if mibBuilder.loadTexts: vRouteAcctRowStatusEntry.setStatus('mandatory')
vRouteAcctRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 116, 5, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vRouteAcctRowStatus.setStatus('mandatory')
vRouteAcctComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 116, 5, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vRouteAcctComponentName.setStatus('mandatory')
vRouteAcctStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 116, 5, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vRouteAcctStorageType.setStatus('mandatory')
vRouteAcctIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 116, 5, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: vRouteAcctIndex.setStatus('mandatory')
vRouteAcctProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 116, 5, 2), )
if mibBuilder.loadTexts: vRouteAcctProvTable.setStatus('mandatory')
vRouteAcctProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 116, 5, 2, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VoiceNetworkingMIB", "vRouteIndex"), (0, "Nortel-Magellan-Passport-VoiceNetworkingMIB", "vRouteAcctIndex"))
if mibBuilder.loadTexts: vRouteAcctProvEntry.setStatus('mandatory')
vRouteAcctAccountCollection = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 116, 5, 2, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 1)).setFixedLength(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vRouteAcctAccountCollection.setStatus('mandatory')
vRouteAcctAccountClass = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 116, 5, 2, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vRouteAcctAccountClass.setStatus('mandatory')
vRouteAcctServiceExchange = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 116, 5, 2, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vRouteAcctServiceExchange.setStatus('mandatory')
vRouteAcctDigitsSuppressed = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 116, 5, 2, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 8))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vRouteAcctDigitsSuppressed.setStatus('mandatory')
vRouteAcctAccountingOptions = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 116, 5, 2, 1, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 1)).setFixedLength(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vRouteAcctAccountingOptions.setStatus('mandatory')
vsr = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 117))
vsrRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 117, 1), )
if mibBuilder.loadTexts: vsrRowStatusTable.setStatus('mandatory')
vsrRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 117, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VoiceNetworkingMIB", "vsrIndex"))
if mibBuilder.loadTexts: vsrRowStatusEntry.setStatus('mandatory')
vsrRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 117, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vsrRowStatus.setStatus('mandatory')
vsrComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 117, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vsrComponentName.setStatus('mandatory')
vsrStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 117, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vsrStorageType.setStatus('mandatory')
vsrIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 117, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255)))
if mibBuilder.loadTexts: vsrIndex.setStatus('mandatory')
vsrCidDataTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 117, 10), )
if mibBuilder.loadTexts: vsrCidDataTable.setStatus('mandatory')
vsrCidDataEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 117, 10, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VoiceNetworkingMIB", "vsrIndex"))
if mibBuilder.loadTexts: vsrCidDataEntry.setStatus('mandatory')
vsrCustomerIdentifier = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 117, 10, 1, 1), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 8191), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vsrCustomerIdentifier.setStatus('mandatory')
vsrIfEntryTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 117, 11), )
if mibBuilder.loadTexts: vsrIfEntryTable.setStatus('mandatory')
vsrIfEntryEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 117, 11, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VoiceNetworkingMIB", "vsrIndex"))
if mibBuilder.loadTexts: vsrIfEntryEntry.setStatus('mandatory')
vsrIfAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 117, 11, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("testing", 3))).clone('up')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vsrIfAdminStatus.setStatus('mandatory')
vsrIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 117, 11, 1, 2), InterfaceIndex().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vsrIfIndex.setStatus('mandatory')
vsrProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 117, 12), )
if mibBuilder.loadTexts: vsrProvTable.setStatus('mandatory')
vsrProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 117, 12, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VoiceNetworkingMIB", "vsrIndex"))
if mibBuilder.loadTexts: vsrProvEntry.setStatus('mandatory')
vsrCommentText = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 117, 12, 1, 1), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(0, 40))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vsrCommentText.setStatus('mandatory')
vsrVoiceRoute = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 117, 12, 1, 3), Link()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vsrVoiceRoute.setStatus('mandatory')
vsrSignallingChannel = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 117, 12, 1, 311), Link()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vsrSignallingChannel.setStatus('mandatory')
vsrStateTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 117, 13), )
if mibBuilder.loadTexts: vsrStateTable.setStatus('mandatory')
vsrStateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 117, 13, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VoiceNetworkingMIB", "vsrIndex"))
if mibBuilder.loadTexts: vsrStateEntry.setStatus('mandatory')
vsrAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 117, 13, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("locked", 0), ("unlocked", 1), ("shuttingDown", 2))).clone('unlocked')).setMaxAccess("readonly")
if mibBuilder.loadTexts: vsrAdminState.setStatus('mandatory')
vsrOperationalState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 117, 13, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1))).clone('disabled')).setMaxAccess("readonly")
if mibBuilder.loadTexts: vsrOperationalState.setStatus('mandatory')
vsrUsageState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 117, 13, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("idle", 0), ("active", 1), ("busy", 2))).clone('idle')).setMaxAccess("readonly")
if mibBuilder.loadTexts: vsrUsageState.setStatus('mandatory')
vsrOperStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 117, 14), )
if mibBuilder.loadTexts: vsrOperStatusTable.setStatus('mandatory')
vsrOperStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 117, 14, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VoiceNetworkingMIB", "vsrIndex"))
if mibBuilder.loadTexts: vsrOperStatusEntry.setStatus('mandatory')
vsrSnmpOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 117, 14, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("testing", 3))).clone('up')).setMaxAccess("readonly")
if mibBuilder.loadTexts: vsrSnmpOperStatus.setStatus('mandatory')
vsrStatsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 117, 15), )
if mibBuilder.loadTexts: vsrStatsTable.setStatus('mandatory')
vsrStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 117, 15, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VoiceNetworkingMIB", "vsrIndex"))
if mibBuilder.loadTexts: vsrStatsEntry.setStatus('mandatory')
vsrTotalCallsFromIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 117, 15, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vsrTotalCallsFromIf.setStatus('mandatory')
vsrTotalFailedCallsFromIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 117, 15, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vsrTotalFailedCallsFromIf.setStatus('mandatory')
vsrInvalidNumberingPlanCalls = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 117, 15, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vsrInvalidNumberingPlanCalls.setStatus('mandatory')
vsrAddressResolutionFailedCalls = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 117, 15, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vsrAddressResolutionFailedCalls.setStatus('mandatory')
vsrAddressIncompleteCalls = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 117, 15, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vsrAddressIncompleteCalls.setStatus('mandatory')
vsrPathAttributesNotMetCalls = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 117, 15, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vsrPathAttributesNotMetCalls.setStatus('mandatory')
vsrPathSetupTimeOutCalls = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 117, 15, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vsrPathSetupTimeOutCalls.setStatus('mandatory')
vsrCallsRejectedLocally = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 117, 15, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vsrCallsRejectedLocally.setStatus('mandatory')
vsrCallsRejectedByFarEnd = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 117, 15, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vsrCallsRejectedByFarEnd.setStatus('mandatory')
vsrOperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 117, 16), )
if mibBuilder.loadTexts: vsrOperTable.setStatus('mandatory')
vsrOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 117, 16, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VoiceNetworkingMIB", "vsrIndex"))
if mibBuilder.loadTexts: vsrOperEntry.setStatus('mandatory')
vsrActiveChannels = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 117, 16, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vsrActiveChannels.setStatus('mandatory')
vsrPeakActiveChannels = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 117, 16, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vsrPeakActiveChannels.setStatus('mandatory')
vsrActiveVoiceChannels = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 117, 16, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vsrActiveVoiceChannels.setStatus('mandatory')
vsrActiveModemChannels = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 117, 16, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vsrActiveModemChannels.setStatus('mandatory')
vsrActiveDataChannels = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 117, 16, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vsrActiveDataChannels.setStatus('mandatory')
vsrPeakActiveVoiceChannels = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 117, 16, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vsrPeakActiveVoiceChannels.setStatus('mandatory')
vsrPeakActiveModemChannels = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 117, 16, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vsrPeakActiveModemChannels.setStatus('mandatory')
vsrPeakActiveDataChannels = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 117, 16, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vsrPeakActiveDataChannels.setStatus('mandatory')
vsrActiveFaxRelayChannels = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 117, 16, 1, 10), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 30))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vsrActiveFaxRelayChannels.setStatus('mandatory')
vsrActiveTptChannels = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 117, 16, 1, 11), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vsrActiveTptChannels.setStatus('mandatory')
vsrPeakActiveFaxRelayChannels = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 117, 16, 1, 12), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 30))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vsrPeakActiveFaxRelayChannels.setStatus('mandatory')
vsrPeakActiveTptChannels = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 117, 16, 1, 13), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 30))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vsrPeakActiveTptChannels.setStatus('mandatory')
vsrSvs = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 117, 2))
vsrSvsRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 117, 2, 1), )
if mibBuilder.loadTexts: vsrSvsRowStatusTable.setStatus('mandatory')
vsrSvsRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 117, 2, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VoiceNetworkingMIB", "vsrIndex"), (0, "Nortel-Magellan-Passport-VoiceNetworkingMIB", "vsrSvsIndex"))
if mibBuilder.loadTexts: vsrSvsRowStatusEntry.setStatus('mandatory')
vsrSvsRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 117, 2, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vsrSvsRowStatus.setStatus('mandatory')
vsrSvsComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 117, 2, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vsrSvsComponentName.setStatus('mandatory')
vsrSvsStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 117, 2, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vsrSvsStorageType.setStatus('mandatory')
vsrSvsIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 117, 2, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 32)))
if mibBuilder.loadTexts: vsrSvsIndex.setStatus('mandatory')
vsrSvsIfEntryTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 117, 2, 11), )
if mibBuilder.loadTexts: vsrSvsIfEntryTable.setStatus('mandatory')
vsrSvsIfEntryEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 117, 2, 11, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VoiceNetworkingMIB", "vsrIndex"), (0, "Nortel-Magellan-Passport-VoiceNetworkingMIB", "vsrSvsIndex"))
if mibBuilder.loadTexts: vsrSvsIfEntryEntry.setStatus('mandatory')
vsrSvsIfAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 117, 2, 11, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("testing", 3))).clone('up')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vsrSvsIfAdminStatus.setStatus('mandatory')
vsrSvsIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 117, 2, 11, 1, 2), InterfaceIndex().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vsrSvsIfIndex.setStatus('mandatory')
vsrSvsOperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 117, 2, 12), )
if mibBuilder.loadTexts: vsrSvsOperTable.setStatus('mandatory')
vsrSvsOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 117, 2, 12, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VoiceNetworkingMIB", "vsrIndex"), (0, "Nortel-Magellan-Passport-VoiceNetworkingMIB", "vsrSvsIndex"))
if mibBuilder.loadTexts: vsrSvsOperEntry.setStatus('mandatory')
vsrSvsStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 117, 2, 12, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("idle", 0), ("seized", 1), ("answered", 2), ("clearing", 3), ("lockout", 4), ("idleMaintenance", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vsrSvsStatus.setStatus('mandatory')
vsrSvsProfileNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 117, 2, 12, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vsrSvsProfileNumber.setStatus('mandatory')
vsrSvsCallType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 117, 2, 12, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("voice", 0), ("data", 1), ("modem", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vsrSvsCallType.setStatus('mandatory')
vsrSvsCalledNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 117, 2, 12, 1, 4), DigitString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vsrSvsCalledNumber.setStatus('mandatory')
vsrSvsCallingNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 117, 2, 12, 1, 5), DigitString().subtype(subtypeSpec=ValueSizeConstraint(1, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vsrSvsCallingNumber.setStatus('mandatory')
vsrSvsClearCauseCode = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 117, 2, 12, 1, 6), Hex().subtype(subtypeSpec=ValueRangeConstraint(0, 127))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vsrSvsClearCauseCode.setStatus('mandatory')
vsrSvsStatsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 117, 2, 13), )
if mibBuilder.loadTexts: vsrSvsStatsTable.setStatus('mandatory')
vsrSvsStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 117, 2, 13, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VoiceNetworkingMIB", "vsrIndex"), (0, "Nortel-Magellan-Passport-VoiceNetworkingMIB", "vsrSvsIndex"))
if mibBuilder.loadTexts: vsrSvsStatsEntry.setStatus('mandatory')
vsrSvsTotalCalls = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 117, 2, 13, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vsrSvsTotalCalls.setStatus('mandatory')
vsrSvsTotalCallSeconds = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 117, 2, 13, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vsrSvsTotalCallSeconds.setStatus('mandatory')
vsrSvsStateTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 117, 2, 14), )
if mibBuilder.loadTexts: vsrSvsStateTable.setStatus('mandatory')
vsrSvsStateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 117, 2, 14, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VoiceNetworkingMIB", "vsrIndex"), (0, "Nortel-Magellan-Passport-VoiceNetworkingMIB", "vsrSvsIndex"))
if mibBuilder.loadTexts: vsrSvsStateEntry.setStatus('mandatory')
vsrSvsAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 117, 2, 14, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("locked", 0), ("unlocked", 1), ("shuttingDown", 2))).clone('unlocked')).setMaxAccess("readonly")
if mibBuilder.loadTexts: vsrSvsAdminState.setStatus('mandatory')
vsrSvsOperationalState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 117, 2, 14, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1))).clone('disabled')).setMaxAccess("readonly")
if mibBuilder.loadTexts: vsrSvsOperationalState.setStatus('mandatory')
vsrSvsUsageState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 117, 2, 14, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("idle", 0), ("active", 1), ("busy", 2))).clone('idle')).setMaxAccess("readonly")
if mibBuilder.loadTexts: vsrSvsUsageState.setStatus('mandatory')
vsrSvsOperStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 117, 2, 15), )
if mibBuilder.loadTexts: vsrSvsOperStatusTable.setStatus('mandatory')
vsrSvsOperStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 117, 2, 15, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VoiceNetworkingMIB", "vsrIndex"), (0, "Nortel-Magellan-Passport-VoiceNetworkingMIB", "vsrSvsIndex"))
if mibBuilder.loadTexts: vsrSvsOperStatusEntry.setStatus('mandatory')
vsrSvsSnmpOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 117, 2, 15, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("testing", 3))).clone('up')).setMaxAccess("readonly")
if mibBuilder.loadTexts: vsrSvsSnmpOperStatus.setStatus('mandatory')
vsrSvsFramer = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 117, 2, 2))
vsrSvsFramerRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 117, 2, 2, 1), )
if mibBuilder.loadTexts: vsrSvsFramerRowStatusTable.setStatus('mandatory')
vsrSvsFramerRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 117, 2, 2, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VoiceNetworkingMIB", "vsrIndex"), (0, "Nortel-Magellan-Passport-VoiceNetworkingMIB", "vsrSvsIndex"), (0, "Nortel-Magellan-Passport-VoiceNetworkingMIB", "vsrSvsFramerIndex"))
if mibBuilder.loadTexts: vsrSvsFramerRowStatusEntry.setStatus('mandatory')
vsrSvsFramerRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 117, 2, 2, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vsrSvsFramerRowStatus.setStatus('mandatory')
vsrSvsFramerComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 117, 2, 2, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vsrSvsFramerComponentName.setStatus('mandatory')
vsrSvsFramerStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 117, 2, 2, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vsrSvsFramerStorageType.setStatus('mandatory')
vsrSvsFramerIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 117, 2, 2, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: vsrSvsFramerIndex.setStatus('mandatory')
vsrSvsFramerProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 117, 2, 2, 10), )
if mibBuilder.loadTexts: vsrSvsFramerProvTable.setStatus('mandatory')
vsrSvsFramerProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 117, 2, 2, 10, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VoiceNetworkingMIB", "vsrIndex"), (0, "Nortel-Magellan-Passport-VoiceNetworkingMIB", "vsrSvsIndex"), (0, "Nortel-Magellan-Passport-VoiceNetworkingMIB", "vsrSvsFramerIndex"))
if mibBuilder.loadTexts: vsrSvsFramerProvEntry.setStatus('mandatory')
vsrSvsFramerInterfaceName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 117, 2, 2, 10, 1, 1), Link()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vsrSvsFramerInterfaceName.setStatus('mandatory')
vsrSvsFramerStateTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 117, 2, 2, 14), )
if mibBuilder.loadTexts: vsrSvsFramerStateTable.setStatus('mandatory')
vsrSvsFramerStateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 117, 2, 2, 14, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VoiceNetworkingMIB", "vsrIndex"), (0, "Nortel-Magellan-Passport-VoiceNetworkingMIB", "vsrSvsIndex"), (0, "Nortel-Magellan-Passport-VoiceNetworkingMIB", "vsrSvsFramerIndex"))
if mibBuilder.loadTexts: vsrSvsFramerStateEntry.setStatus('mandatory')
vsrSvsFramerAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 117, 2, 2, 14, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("locked", 0), ("unlocked", 1), ("shuttingDown", 2))).clone('unlocked')).setMaxAccess("readonly")
if mibBuilder.loadTexts: vsrSvsFramerAdminState.setStatus('mandatory')
vsrSvsFramerOperationalState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 117, 2, 2, 14, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1))).clone('disabled')).setMaxAccess("readonly")
if mibBuilder.loadTexts: vsrSvsFramerOperationalState.setStatus('mandatory')
vsrSvsFramerUsageState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 117, 2, 2, 14, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("idle", 0), ("active", 1), ("busy", 2))).clone('idle')).setMaxAccess("readonly")
if mibBuilder.loadTexts: vsrSvsFramerUsageState.setStatus('mandatory')
vsrSvsFramerStatsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 117, 2, 2, 15), )
if mibBuilder.loadTexts: vsrSvsFramerStatsTable.setStatus('mandatory')
vsrSvsFramerStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 117, 2, 2, 15, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VoiceNetworkingMIB", "vsrIndex"), (0, "Nortel-Magellan-Passport-VoiceNetworkingMIB", "vsrSvsIndex"), (0, "Nortel-Magellan-Passport-VoiceNetworkingMIB", "vsrSvsFramerIndex"))
if mibBuilder.loadTexts: vsrSvsFramerStatsEntry.setStatus('mandatory')
vsrSvsFramerTotalCells = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 117, 2, 2, 15, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vsrSvsFramerTotalCells.setStatus('mandatory')
vsrSvsFramerAudioCells = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 117, 2, 2, 15, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vsrSvsFramerAudioCells.setStatus('mandatory')
vsrSvsFramerSilenceCells = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 117, 2, 2, 15, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vsrSvsFramerSilenceCells.setStatus('mandatory')
vsrSvsFramerModemCells = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 117, 2, 2, 15, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vsrSvsFramerModemCells.setStatus('obsolete')
vsrSvsFramerCurrentEncodingRate = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 117, 2, 2, 15, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15))).clone(namedValues=NamedValues(("n640", 1), ("n320", 2), ("n240", 3), ("n160", 4), ("n80", 5), ("n144", 6), ("n120", 7), ("n96", 8), ("n72", 9), ("n63", 10), ("n53", 11), ("n48", 12), ("n24", 13), ("n12", 14), ("n03", 15)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vsrSvsFramerCurrentEncodingRate.setStatus('obsolete')
vsrSvsFramerLrcErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 117, 2, 2, 15, 1, 7), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vsrSvsFramerLrcErrors.setStatus('mandatory')
vsrSvsFramerFrmLostInNetwork = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 117, 2, 2, 15, 1, 8), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vsrSvsFramerFrmLostInNetwork.setStatus('mandatory')
vsrSvsFramerFrmUnderRuns = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 117, 2, 2, 15, 1, 9), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vsrSvsFramerFrmUnderRuns.setStatus('mandatory')
vsrSvsFramerFrmDumped = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 117, 2, 2, 15, 1, 10), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vsrSvsFramerFrmDumped.setStatus('mandatory')
vsrSvsFramerModemSilenceCells = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 117, 2, 2, 15, 1, 26), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vsrSvsFramerModemSilenceCells.setStatus('obsolete')
vsrSvsFramerCurrentEncoding = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 117, 2, 2, 15, 1, 27), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 32, 33, 64, 65, 66, 67, 255))).clone(namedValues=NamedValues(("g729", 1), ("g728", 2), ("g723", 3), ("g726", 4), ("g711", 5), ("v22", 32), ("v22bis", 33), ("faxRelay", 64), ("v27", 65), ("v29", 66), ("v17", 67), ("none", 255)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vsrSvsFramerCurrentEncoding.setStatus('obsolete')
vsrSvsFramerTptStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 117, 2, 2, 15, 1, 28), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("operating", 0), ("rejected", 1), ("monitoring", 2), ("disabled", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vsrSvsFramerTptStatus.setStatus('obsolete')
vsrSvsFramerFaxRelayCells = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 117, 2, 2, 15, 1, 35), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vsrSvsFramerFaxRelayCells.setStatus('mandatory')
vsrSvsFramerModemFaxCells = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 117, 2, 2, 15, 1, 36), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vsrSvsFramerModemFaxCells.setStatus('mandatory')
vsrSvsFramerFaxIdleCells = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 117, 2, 2, 15, 1, 37), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vsrSvsFramerFaxIdleCells.setStatus('mandatory')
vsrSvsFramerOperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 117, 2, 2, 16), )
if mibBuilder.loadTexts: vsrSvsFramerOperTable.setStatus('mandatory')
vsrSvsFramerOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 117, 2, 2, 16, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VoiceNetworkingMIB", "vsrIndex"), (0, "Nortel-Magellan-Passport-VoiceNetworkingMIB", "vsrSvsIndex"), (0, "Nortel-Magellan-Passport-VoiceNetworkingMIB", "vsrSvsFramerIndex"))
if mibBuilder.loadTexts: vsrSvsFramerOperEntry.setStatus('mandatory')
vsrSvsFramerOpCurrentEncoding = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 117, 2, 2, 16, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 32, 33, 64, 65, 66, 67, 255))).clone(namedValues=NamedValues(("g729", 1), ("g728", 2), ("g723", 3), ("g726", 4), ("g711", 5), ("v22", 32), ("v22bis", 33), ("faxRelay", 64), ("v27", 65), ("v29", 66), ("v17", 67), ("none", 255)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vsrSvsFramerOpCurrentEncoding.setStatus('mandatory')
vsrSvsFramerCurrentRate = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 117, 2, 2, 16, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15))).clone(namedValues=NamedValues(("n0", 0), ("n640", 1), ("n320", 2), ("n240", 3), ("n160", 4), ("n80", 5), ("n144", 6), ("n120", 7), ("n96", 8), ("n72", 9), ("n63", 10), ("n53", 11), ("n48", 12), ("n24", 13), ("n12", 14), ("n03", 15)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vsrSvsFramerCurrentRate.setStatus('mandatory')
vsrSvsFramerOpTptStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 117, 2, 2, 16, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 2, 3))).clone(namedValues=NamedValues(("operating", 0), ("monitoring", 2), ("disabled", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vsrSvsFramerOpTptStatus.setStatus('mandatory')
vsrSvsFramerNegTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 117, 2, 2, 17), )
if mibBuilder.loadTexts: vsrSvsFramerNegTable.setStatus('mandatory')
vsrSvsFramerNegEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 117, 2, 2, 17, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VoiceNetworkingMIB", "vsrIndex"), (0, "Nortel-Magellan-Passport-VoiceNetworkingMIB", "vsrSvsIndex"), (0, "Nortel-Magellan-Passport-VoiceNetworkingMIB", "vsrSvsFramerIndex"))
if mibBuilder.loadTexts: vsrSvsFramerNegEntry.setStatus('mandatory')
vsrSvsFramerNegotiatedSilenceSuppression = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 117, 2, 2, 17, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("off", 0), ("on", 1), ("congested", 2), ("slow", 3), ("slowAndCongested", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vsrSvsFramerNegotiatedSilenceSuppression.setStatus('mandatory')
vsrSvsFramerNegotiatedFisG711G726 = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 117, 2, 2, 17, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("on", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vsrSvsFramerNegotiatedFisG711G726.setStatus('mandatory')
vsrSvsFramerNegotiatedDtmfRegeneration = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 117, 2, 2, 17, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("on", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vsrSvsFramerNegotiatedDtmfRegeneration.setStatus('mandatory')
vsrSvsFramerNegotiatedV17AsG711G726 = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 117, 2, 2, 17, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vsrSvsFramerNegotiatedV17AsG711G726.setStatus('mandatory')
vsrSvsFramerNegotiatedTandemPassThrough = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 117, 2, 2, 17, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vsrSvsFramerNegotiatedTandemPassThrough.setStatus('mandatory')
vsrSvsFramerFrmToNetworkTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 117, 2, 2, 315), )
if mibBuilder.loadTexts: vsrSvsFramerFrmToNetworkTable.setStatus('mandatory')
vsrSvsFramerFrmToNetworkEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 117, 2, 2, 315, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VoiceNetworkingMIB", "vsrIndex"), (0, "Nortel-Magellan-Passport-VoiceNetworkingMIB", "vsrSvsIndex"), (0, "Nortel-Magellan-Passport-VoiceNetworkingMIB", "vsrSvsFramerIndex"), (0, "Nortel-Magellan-Passport-VoiceNetworkingMIB", "vsrSvsFramerFrmToNetworkIndex"))
if mibBuilder.loadTexts: vsrSvsFramerFrmToNetworkEntry.setStatus('mandatory')
vsrSvsFramerFrmToNetworkIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 117, 2, 2, 315, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("n64KbitS", 0), ("n32KbitS", 1), ("n24KbitS", 2), ("n16KbitS", 3), ("n8KbitS", 4))))
if mibBuilder.loadTexts: vsrSvsFramerFrmToNetworkIndex.setStatus('mandatory')
vsrSvsFramerFrmToNetworkValue = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 117, 2, 2, 315, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vsrSvsFramerFrmToNetworkValue.setStatus('mandatory')
vsrSvsFramerFrmFromNetworkTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 117, 2, 2, 316), )
if mibBuilder.loadTexts: vsrSvsFramerFrmFromNetworkTable.setStatus('mandatory')
vsrSvsFramerFrmFromNetworkEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 117, 2, 2, 316, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VoiceNetworkingMIB", "vsrIndex"), (0, "Nortel-Magellan-Passport-VoiceNetworkingMIB", "vsrSvsIndex"), (0, "Nortel-Magellan-Passport-VoiceNetworkingMIB", "vsrSvsFramerIndex"), (0, "Nortel-Magellan-Passport-VoiceNetworkingMIB", "vsrSvsFramerFrmFromNetworkIndex"))
if mibBuilder.loadTexts: vsrSvsFramerFrmFromNetworkEntry.setStatus('mandatory')
vsrSvsFramerFrmFromNetworkIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 117, 2, 2, 316, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("n64KbitS", 0), ("n32KbitS", 1), ("n24KbitS", 2), ("n16KbitS", 3), ("n8KbitS", 4))))
if mibBuilder.loadTexts: vsrSvsFramerFrmFromNetworkIndex.setStatus('mandatory')
vsrSvsFramerFrmFromNetworkValue = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 117, 2, 2, 316, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vsrSvsFramerFrmFromNetworkValue.setStatus('mandatory')
vsrSvsFramerNEncodingTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 117, 2, 2, 467), )
if mibBuilder.loadTexts: vsrSvsFramerNEncodingTable.setStatus('mandatory')
vsrSvsFramerNEncodingEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 117, 2, 2, 467, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VoiceNetworkingMIB", "vsrIndex"), (0, "Nortel-Magellan-Passport-VoiceNetworkingMIB", "vsrSvsIndex"), (0, "Nortel-Magellan-Passport-VoiceNetworkingMIB", "vsrSvsFramerIndex"), (0, "Nortel-Magellan-Passport-VoiceNetworkingMIB", "vsrSvsFramerNEncodingIndex"))
if mibBuilder.loadTexts: vsrSvsFramerNEncodingEntry.setStatus('mandatory')
vsrSvsFramerNEncodingIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 117, 2, 2, 467, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("voice", 0), ("modemFax", 1), ("fax", 2))))
if mibBuilder.loadTexts: vsrSvsFramerNEncodingIndex.setStatus('mandatory')
vsrSvsFramerNEncodingValue = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 117, 2, 2, 467, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 4, 5, 31, 64, 68, 255))).clone(namedValues=NamedValues(("g729", 1), ("g728", 2), ("g726", 4), ("g711", 5), ("g711G726", 31), ("v29V27Relay", 64), ("v17V29V27Relay", 68), ("none", 255)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vsrSvsFramerNEncodingValue.setStatus('mandatory')
vsrSvsFramerNRatesTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 117, 2, 2, 479), )
if mibBuilder.loadTexts: vsrSvsFramerNRatesTable.setStatus('mandatory')
vsrSvsFramerNRatesEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 117, 2, 2, 479, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VoiceNetworkingMIB", "vsrIndex"), (0, "Nortel-Magellan-Passport-VoiceNetworkingMIB", "vsrSvsIndex"), (0, "Nortel-Magellan-Passport-VoiceNetworkingMIB", "vsrSvsFramerIndex"), (0, "Nortel-Magellan-Passport-VoiceNetworkingMIB", "vsrSvsFramerNRatesTrafficIndex"), (0, "Nortel-Magellan-Passport-VoiceNetworkingMIB", "vsrSvsFramerNRatesRateIndex"))
if mibBuilder.loadTexts: vsrSvsFramerNRatesEntry.setStatus('mandatory')
vsrSvsFramerNRatesTrafficIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 117, 2, 2, 479, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("voice", 0), ("modemFax", 1), ("fax", 2))))
if mibBuilder.loadTexts: vsrSvsFramerNRatesTrafficIndex.setStatus('mandatory')
vsrSvsFramerNRatesRateIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 117, 2, 2, 479, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("min", 0), ("max", 1))))
if mibBuilder.loadTexts: vsrSvsFramerNRatesRateIndex.setStatus('mandatory')
vsrSvsFramerNRatesValue = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 117, 2, 2, 479, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 66, 67, 68, 69, 70))).clone(namedValues=NamedValues(("n00", 0), ("n03", 1), ("n12", 2), ("n24", 3), ("n48", 4), ("n72", 5), ("n96", 6), ("n120", 7), ("n144", 8), ("n80", 66), ("n160", 67), ("n240", 68), ("n320", 69), ("n640", 70)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vsrSvsFramerNRatesValue.setStatus('mandatory')
vsrSvsFramerVfpDebug = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 117, 2, 2, 5))
vsrSvsFramerVfpDebugRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 117, 2, 2, 5, 1), )
if mibBuilder.loadTexts: vsrSvsFramerVfpDebugRowStatusTable.setStatus('mandatory')
vsrSvsFramerVfpDebugRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 117, 2, 2, 5, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VoiceNetworkingMIB", "vsrIndex"), (0, "Nortel-Magellan-Passport-VoiceNetworkingMIB", "vsrSvsIndex"), (0, "Nortel-Magellan-Passport-VoiceNetworkingMIB", "vsrSvsFramerIndex"), (0, "Nortel-Magellan-Passport-VoiceNetworkingMIB", "vsrSvsFramerVfpDebugIndex"))
if mibBuilder.loadTexts: vsrSvsFramerVfpDebugRowStatusEntry.setStatus('mandatory')
vsrSvsFramerVfpDebugRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 117, 2, 2, 5, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vsrSvsFramerVfpDebugRowStatus.setStatus('mandatory')
vsrSvsFramerVfpDebugComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 117, 2, 2, 5, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vsrSvsFramerVfpDebugComponentName.setStatus('mandatory')
vsrSvsFramerVfpDebugStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 117, 2, 2, 5, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vsrSvsFramerVfpDebugStorageType.setStatus('mandatory')
vsrSvsFramerVfpDebugIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 117, 2, 2, 5, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: vsrSvsFramerVfpDebugIndex.setStatus('mandatory')
vsrSvsFramerMvpDebug = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 117, 2, 2, 6))
vsrSvsFramerMvpDebugRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 117, 2, 2, 6, 1), )
if mibBuilder.loadTexts: vsrSvsFramerMvpDebugRowStatusTable.setStatus('mandatory')
vsrSvsFramerMvpDebugRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 117, 2, 2, 6, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VoiceNetworkingMIB", "vsrIndex"), (0, "Nortel-Magellan-Passport-VoiceNetworkingMIB", "vsrSvsIndex"), (0, "Nortel-Magellan-Passport-VoiceNetworkingMIB", "vsrSvsFramerIndex"), (0, "Nortel-Magellan-Passport-VoiceNetworkingMIB", "vsrSvsFramerMvpDebugIndex"))
if mibBuilder.loadTexts: vsrSvsFramerMvpDebugRowStatusEntry.setStatus('mandatory')
vsrSvsFramerMvpDebugRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 117, 2, 2, 6, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vsrSvsFramerMvpDebugRowStatus.setStatus('mandatory')
vsrSvsFramerMvpDebugComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 117, 2, 2, 6, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vsrSvsFramerMvpDebugComponentName.setStatus('mandatory')
vsrSvsFramerMvpDebugStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 117, 2, 2, 6, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vsrSvsFramerMvpDebugStorageType.setStatus('mandatory')
vsrSvsFramerMvpDebugIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 117, 2, 2, 6, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: vsrSvsFramerMvpDebugIndex.setStatus('mandatory')
vsrSvsFramerPcmCapture = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 117, 2, 2, 7))
vsrSvsFramerPcmCaptureRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 117, 2, 2, 7, 1), )
if mibBuilder.loadTexts: vsrSvsFramerPcmCaptureRowStatusTable.setStatus('mandatory')
vsrSvsFramerPcmCaptureRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 117, 2, 2, 7, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VoiceNetworkingMIB", "vsrIndex"), (0, "Nortel-Magellan-Passport-VoiceNetworkingMIB", "vsrSvsIndex"), (0, "Nortel-Magellan-Passport-VoiceNetworkingMIB", "vsrSvsFramerIndex"), (0, "Nortel-Magellan-Passport-VoiceNetworkingMIB", "vsrSvsFramerPcmCaptureIndex"))
if mibBuilder.loadTexts: vsrSvsFramerPcmCaptureRowStatusEntry.setStatus('mandatory')
vsrSvsFramerPcmCaptureRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 117, 2, 2, 7, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vsrSvsFramerPcmCaptureRowStatus.setStatus('mandatory')
vsrSvsFramerPcmCaptureComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 117, 2, 2, 7, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vsrSvsFramerPcmCaptureComponentName.setStatus('mandatory')
vsrSvsFramerPcmCaptureStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 117, 2, 2, 7, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vsrSvsFramerPcmCaptureStorageType.setStatus('mandatory')
vsrSvsFramerPcmCaptureIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 117, 2, 2, 7, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: vsrSvsFramerPcmCaptureIndex.setStatus('mandatory')
vsrSvsLCo = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 117, 2, 3))
vsrSvsLCoRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 117, 2, 3, 1), )
if mibBuilder.loadTexts: vsrSvsLCoRowStatusTable.setStatus('mandatory')
vsrSvsLCoRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 117, 2, 3, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VoiceNetworkingMIB", "vsrIndex"), (0, "Nortel-Magellan-Passport-VoiceNetworkingMIB", "vsrSvsIndex"), (0, "Nortel-Magellan-Passport-VoiceNetworkingMIB", "vsrSvsLCoIndex"))
if mibBuilder.loadTexts: vsrSvsLCoRowStatusEntry.setStatus('mandatory')
vsrSvsLCoRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 117, 2, 3, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vsrSvsLCoRowStatus.setStatus('mandatory')
vsrSvsLCoComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 117, 2, 3, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vsrSvsLCoComponentName.setStatus('mandatory')
vsrSvsLCoStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 117, 2, 3, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vsrSvsLCoStorageType.setStatus('mandatory')
vsrSvsLCoIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 117, 2, 3, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: vsrSvsLCoIndex.setStatus('mandatory')
vsrSvsLCoPathDataTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 117, 2, 3, 10), )
if mibBuilder.loadTexts: vsrSvsLCoPathDataTable.setStatus('mandatory')
vsrSvsLCoPathDataEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 117, 2, 3, 10, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VoiceNetworkingMIB", "vsrIndex"), (0, "Nortel-Magellan-Passport-VoiceNetworkingMIB", "vsrSvsIndex"), (0, "Nortel-Magellan-Passport-VoiceNetworkingMIB", "vsrSvsLCoIndex"))
if mibBuilder.loadTexts: vsrSvsLCoPathDataEntry.setStatus('mandatory')
vsrSvsLCoState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 117, 2, 3, 10, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("pathDown", 0), ("selectingRoute", 1), ("connecting", 2), ("pathUp", 3), ("pathDownRetrying", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vsrSvsLCoState.setStatus('mandatory')
vsrSvsLCoOverrideRemoteName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 117, 2, 3, 10, 1, 2), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(0, 40))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vsrSvsLCoOverrideRemoteName.setStatus('mandatory')
vsrSvsLCoEnd = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 117, 2, 3, 10, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("calling", 0), ("called", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vsrSvsLCoEnd.setStatus('mandatory')
vsrSvsLCoCostMetric = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 117, 2, 3, 10, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vsrSvsLCoCostMetric.setStatus('mandatory')
vsrSvsLCoDelayMetric = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 117, 2, 3, 10, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 100000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vsrSvsLCoDelayMetric.setStatus('mandatory')
vsrSvsLCoRoundTripDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 117, 2, 3, 10, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 200000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vsrSvsLCoRoundTripDelay.setStatus('mandatory')
vsrSvsLCoSetupPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 117, 2, 3, 10, 1, 7), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vsrSvsLCoSetupPriority.setStatus('mandatory')
vsrSvsLCoHoldingPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 117, 2, 3, 10, 1, 8), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vsrSvsLCoHoldingPriority.setStatus('mandatory')
vsrSvsLCoRequiredTxBandwidth = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 117, 2, 3, 10, 1, 9), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vsrSvsLCoRequiredTxBandwidth.setStatus('mandatory')
vsrSvsLCoRequiredRxBandwidth = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 117, 2, 3, 10, 1, 10), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vsrSvsLCoRequiredRxBandwidth.setStatus('mandatory')
vsrSvsLCoRequiredTrafficType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 117, 2, 3, 10, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("voice", 0), ("data", 1), ("video", 2), ("trafficType1", 3), ("trafficType2", 4), ("trafficType3", 5), ("trafficType4", 6), ("trafficType5", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vsrSvsLCoRequiredTrafficType.setStatus('mandatory')
vsrSvsLCoPermittedTrunkTypes = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 117, 2, 3, 10, 1, 12), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 1)).setFixedLength(1)).setMaxAccess("readonly")
if mibBuilder.loadTexts: vsrSvsLCoPermittedTrunkTypes.setStatus('mandatory')
vsrSvsLCoRequiredSecurity = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 117, 2, 3, 10, 1, 13), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vsrSvsLCoRequiredSecurity.setStatus('mandatory')
vsrSvsLCoRequiredCustomerParameter = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 117, 2, 3, 10, 1, 14), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vsrSvsLCoRequiredCustomerParameter.setStatus('mandatory')
vsrSvsLCoEmissionPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 117, 2, 3, 10, 1, 15), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vsrSvsLCoEmissionPriority.setStatus('mandatory')
vsrSvsLCoDiscardPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 117, 2, 3, 10, 1, 16), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 3))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vsrSvsLCoDiscardPriority.setStatus('mandatory')
vsrSvsLCoPathType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 117, 2, 3, 10, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("normal", 0), ("manual", 1), ("forced", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vsrSvsLCoPathType.setStatus('mandatory')
vsrSvsLCoRetryCount = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 117, 2, 3, 10, 1, 18), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vsrSvsLCoRetryCount.setStatus('mandatory')
vsrSvsLCoPathFailureCount = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 117, 2, 3, 10, 1, 19), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vsrSvsLCoPathFailureCount.setStatus('mandatory')
vsrSvsLCoReasonForNoRoute = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 117, 2, 3, 10, 1, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14))).clone(namedValues=NamedValues(("none", 0), ("destinationNameTooLong", 1), ("destinationNotSpecified", 2), ("unknownDestinationName", 3), ("incorrectDestination", 4), ("incorrectDestinationEndPoint", 5), ("unknownSource", 6), ("unknownDestination", 7), ("sameNode", 8), ("routeCostTooMuch", 9), ("routesDelayTooLong", 10), ("attributesNotMet", 11), ("anError", 12), ("attributeProfileProblem", 13), ("manualPathIndexProblem", 14))).clone('none')).setMaxAccess("readonly")
if mibBuilder.loadTexts: vsrSvsLCoReasonForNoRoute.setStatus('mandatory')
vsrSvsLCoLastTearDownReason = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 117, 2, 3, 10, 1, 21), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23))).clone(namedValues=NamedValues(("none", 0), ("normalShutDown", 1), ("insufficientTxLcOrBandwidth", 2), ("insufficientRxLcOrBandwidth", 3), ("trunkFailure", 4), ("trunkCardFailure", 5), ("operatorForced", 6), ("lostLcnClash", 7), ("networkCongestion", 8), ("trunkNotFound", 9), ("farEndNotFound", 10), ("wrongModuleReached", 11), ("farEndBusy", 12), ("callLoopedBack", 13), ("unknownReason", 14), ("farEndNotReady", 15), ("remoteNameMismatch", 16), ("serviceTypeMismatch", 17), ("reconnectFromFarEnd", 18), ("bumped", 19), ("accessCardFailure", 20), ("optimized", 21), ("overrideRemoteName", 22), ("trunkOrFarEndDidNotSupportMode", 23))).clone('none')).setMaxAccess("readonly")
if mibBuilder.loadTexts: vsrSvsLCoLastTearDownReason.setStatus('mandatory')
vsrSvsLCoPathFailureAction = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 117, 2, 3, 10, 1, 22), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disconnectConnection", 0), ("reRoutePath", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vsrSvsLCoPathFailureAction.setStatus('mandatory')
vsrSvsLCoBumpPreference = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 117, 2, 3, 10, 1, 23), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("bumpWhenNecessary", 0), ("bumpToObtainBestRoute", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vsrSvsLCoBumpPreference.setStatus('mandatory')
vsrSvsLCoOptimization = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 117, 2, 3, 10, 1, 24), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vsrSvsLCoOptimization.setStatus('mandatory')
vsrSvsLCoPathUpDateTime = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 117, 2, 3, 10, 1, 25), EnterpriseDateAndTime().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(19, 19), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vsrSvsLCoPathUpDateTime.setStatus('mandatory')
vsrSvsLCoStatsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 117, 2, 3, 11), )
if mibBuilder.loadTexts: vsrSvsLCoStatsTable.setStatus('mandatory')
vsrSvsLCoStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 117, 2, 3, 11, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VoiceNetworkingMIB", "vsrIndex"), (0, "Nortel-Magellan-Passport-VoiceNetworkingMIB", "vsrSvsIndex"), (0, "Nortel-Magellan-Passport-VoiceNetworkingMIB", "vsrSvsLCoIndex"))
if mibBuilder.loadTexts: vsrSvsLCoStatsEntry.setStatus('mandatory')
vsrSvsLCoPktsToNetwork = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 117, 2, 3, 11, 1, 1), PassportCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vsrSvsLCoPktsToNetwork.setStatus('mandatory')
vsrSvsLCoBytesToNetwork = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 117, 2, 3, 11, 1, 2), PassportCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vsrSvsLCoBytesToNetwork.setStatus('mandatory')
vsrSvsLCoPktsFromNetwork = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 117, 2, 3, 11, 1, 3), PassportCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vsrSvsLCoPktsFromNetwork.setStatus('mandatory')
vsrSvsLCoBytesFromNetwork = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 117, 2, 3, 11, 1, 4), PassportCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vsrSvsLCoBytesFromNetwork.setStatus('mandatory')
vsrSvsLCoPathTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 117, 2, 3, 264), )
if mibBuilder.loadTexts: vsrSvsLCoPathTable.setStatus('mandatory')
vsrSvsLCoPathEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 117, 2, 3, 264, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VoiceNetworkingMIB", "vsrIndex"), (0, "Nortel-Magellan-Passport-VoiceNetworkingMIB", "vsrSvsIndex"), (0, "Nortel-Magellan-Passport-VoiceNetworkingMIB", "vsrSvsLCoIndex"), (0, "Nortel-Magellan-Passport-VoiceNetworkingMIB", "vsrSvsLCoPathValue"))
if mibBuilder.loadTexts: vsrSvsLCoPathEntry.setStatus('mandatory')
vsrSvsLCoPathValue = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 117, 2, 3, 264, 1, 1), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(0, 40))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vsrSvsLCoPathValue.setStatus('mandatory')
vsrSvsDebug = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 117, 2, 4))
vsrSvsDebugRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 117, 2, 4, 1), )
if mibBuilder.loadTexts: vsrSvsDebugRowStatusTable.setStatus('mandatory')
vsrSvsDebugRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 117, 2, 4, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VoiceNetworkingMIB", "vsrIndex"), (0, "Nortel-Magellan-Passport-VoiceNetworkingMIB", "vsrSvsIndex"), (0, "Nortel-Magellan-Passport-VoiceNetworkingMIB", "vsrSvsDebugIndex"))
if mibBuilder.loadTexts: vsrSvsDebugRowStatusEntry.setStatus('mandatory')
vsrSvsDebugRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 117, 2, 4, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vsrSvsDebugRowStatus.setStatus('mandatory')
vsrSvsDebugComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 117, 2, 4, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vsrSvsDebugComponentName.setStatus('mandatory')
vsrSvsDebugStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 117, 2, 4, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vsrSvsDebugStorageType.setStatus('mandatory')
vsrSvsDebugIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 117, 2, 4, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: vsrSvsDebugIndex.setStatus('mandatory')
vsrDebug = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 117, 3))
vsrDebugRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 117, 3, 1), )
if mibBuilder.loadTexts: vsrDebugRowStatusTable.setStatus('mandatory')
vsrDebugRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 117, 3, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VoiceNetworkingMIB", "vsrIndex"), (0, "Nortel-Magellan-Passport-VoiceNetworkingMIB", "vsrDebugIndex"))
if mibBuilder.loadTexts: vsrDebugRowStatusEntry.setStatus('mandatory')
vsrDebugRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 117, 3, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vsrDebugRowStatus.setStatus('mandatory')
vsrDebugComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 117, 3, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vsrDebugComponentName.setStatus('mandatory')
vsrDebugStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 117, 3, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vsrDebugStorageType.setStatus('mandatory')
vsrDebugIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 117, 3, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: vsrDebugIndex.setStatus('mandatory')
voiceNetworkingGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 109, 1))
voiceNetworkingGroupBE = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 109, 1, 5))
voiceNetworkingGroupBE01 = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 109, 1, 5, 2))
voiceNetworkingGroupBE01A = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 109, 1, 5, 2, 2))
voiceNetworkingCapabilities = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 109, 3))
voiceNetworkingCapabilitiesBE = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 109, 3, 5))
voiceNetworkingCapabilitiesBE01 = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 109, 3, 5, 2))
voiceNetworkingCapabilitiesBE01A = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 109, 3, 5, 2, 2))
mibBuilder.exportSymbols("Nortel-Magellan-Passport-VoiceNetworkingMIB", sigChanStateEntry=sigChanStateEntry, sigChanGwStatsTable=sigChanGwStatsTable, vRouteAcctProvEntry=vRouteAcctProvEntry, sigChanRowStatus=sigChanRowStatus, vsrProvEntry=vsrProvEntry, vRouteDnaHgmHgAddrAddrTable=vRouteDnaHgmHgAddrAddrTable, sigChanICmapComponentName=sigChanICmapComponentName, sigChanRowStatusTable=sigChanRowStatusTable, vsrSvsFramerNegotiatedDtmfRegeneration=vsrSvsFramerNegotiatedDtmfRegeneration, vsrSvsFramerVfpDebug=vsrSvsFramerVfpDebug, sigChanBchRowStatusTable=sigChanBchRowStatusTable, vRouteVoiceNetworkingCallServer=vRouteVoiceNetworkingCallServer, vRouteAcctServiceExchange=vRouteAcctServiceExchange, sigChanGwGatewayCapValue=sigChanGwGatewayCapValue, vRouteStatsTable=vRouteStatsTable, vRouteComponentName=vRouteComponentName, vsrStateEntry=vsrStateEntry, vsrSvsFramerVfpDebugIndex=vsrSvsFramerVfpDebugIndex, sigChanIfEntryEntry=sigChanIfEntryEntry, vRouteAcctDigitsSuppressed=vRouteAcctDigitsSuppressed, vRouteAcctRowStatusTable=vRouteAcctRowStatusTable, sigChanDegradedSubroutesEntry=sigChanDegradedSubroutesEntry, sigChanBchStorageType=sigChanBchStorageType, vsrActiveTptChannels=vsrActiveTptChannels, vsrSvsFramerFrmToNetworkTable=vsrSvsFramerFrmToNetworkTable, vRouteDnaNumberingPlanIndicator=vRouteDnaNumberingPlanIndicator, vsrSvsFramerComponentName=vsrSvsFramerComponentName, vRouteDnaHgmRowStatus=vRouteDnaHgmRowStatus, vRouteDebugStorageType=vRouteDebugStorageType, vsrSvsFramerStorageType=vsrSvsFramerStorageType, sigChanGwStatsEntry=sigChanGwStatsEntry, vRouteIfAdminStatus=vRouteIfAdminStatus, voiceNetworkingGroupBE01=voiceNetworkingGroupBE01, vsrComponentName=vsrComponentName, vsrSvsFramerPcmCaptureStorageType=vsrSvsFramerPcmCaptureStorageType, sigChanGw=sigChanGw, sigChanNcasComponentName=sigChanNcasComponentName, vsrSvsFramerNegotiatedV17AsG711G726=vsrSvsFramerNegotiatedV17AsG711G726, vRouteIfEntryTable=vRouteIfEntryTable, vRouteRowStatusEntry=vRouteRowStatusEntry, vRouteProvEntry=vRouteProvEntry, vsrSvsLCoReasonForNoRoute=vsrSvsLCoReasonForNoRoute, vsrSvsFramerUsageState=vsrSvsFramerUsageState, sigChanProvEntry=sigChanProvEntry, sigChanGwRowStatus=sigChanGwRowStatus, vsrSvsOperStatusEntry=vsrSvsOperStatusEntry, sigChanNcasRowStatus=sigChanNcasRowStatus, sigChanICmapIntCauseEntry=sigChanICmapIntCauseEntry, vsrSvsFramerFaxIdleCells=vsrSvsFramerFaxIdleCells, sigChan=sigChan, vsrSvsFramerIndex=vsrSvsFramerIndex, vsrCustomerIdentifier=vsrCustomerIdentifier, vsrSvsFramerFaxRelayCells=vsrSvsFramerFaxRelayCells, vsrStatsTable=vsrStatsTable, vRouteInterfaceStructuredEchoCancellationValue=vRouteInterfaceStructuredEchoCancellationValue, sigChanBch=sigChanBch, vsrSvsFramerPcmCaptureRowStatus=vsrSvsFramerPcmCaptureRowStatus, vsrIfAdminStatus=vsrIfAdminStatus, vsrSvsLCoPathFailureAction=vsrSvsLCoPathFailureAction, vRouteTypeOfRoute=vRouteTypeOfRoute, vRoute=vRoute, sigChanIfAdminStatus=sigChanIfAdminStatus, vsrSvsTotalCallSeconds=vsrSvsTotalCallSeconds, vRouteDnaHgmIndex=vRouteDnaHgmIndex, vRouteAcctComponentName=vRouteAcctComponentName, vsrPathAttributesNotMetCalls=vsrPathAttributesNotMetCalls, sigChanGwGwcIndex=sigChanGwGwcIndex, vsrSvsStatsEntry=vsrSvsStatsEntry, sigChanSubroutesRowStatus=sigChanSubroutesRowStatus, vRouteCallsClearedNoChannel=vRouteCallsClearedNoChannel, vRouteDebugRowStatus=vRouteDebugRowStatus, vRouteIndex=vRouteIndex, vsrPeakActiveModemChannels=vsrPeakActiveModemChannels, vsrRowStatus=vsrRowStatus, vRouteHuntingAlgorithm=vRouteHuntingAlgorithm, vRouteInterfaceModemFaxSpeechDiscrim=vRouteInterfaceModemFaxSpeechDiscrim, vsrOperationalState=vsrOperationalState, vsrSvsFramerNRatesTrafficIndex=vsrSvsFramerNRatesTrafficIndex, vRouteDnaHgmHgAddrComponentName=vRouteDnaHgmHgAddrComponentName, vsrSvsLCoCostMetric=vsrSvsLCoCostMetric, sigChanGwGwcEntry=sigChanGwGwcEntry, vRouteInterfaceIndex=vRouteInterfaceIndex, sigChanIfIndex=sigChanIfIndex, vsrSvsLCoRowStatusEntry=vsrSvsLCoRowStatusEntry, vsrSvsLCoPathTable=vsrSvsLCoPathTable, vRouteDebug=vRouteDebug, vsrSvsFramerFrmUnderRuns=vsrSvsFramerFrmUnderRuns, vRoutePrivateNetworkIdentifer=vRoutePrivateNetworkIdentifer, vsrSvsLCoPktsToNetwork=vsrSvsLCoPktsToNetwork, vRouteInterfaceRowStatusEntry=vRouteInterfaceRowStatusEntry, sigChanICmapServNotAllowedCause=sigChanICmapServNotAllowedCause, vRouteSubroutesValue=vRouteSubroutesValue, vRouteInterfaceEcanBypassMode=vRouteInterfaceEcanBypassMode, vRouteAcctAccountClass=vRouteAcctAccountClass, sigChanCidDataTable=sigChanCidDataTable, vRouteOperationalState=vRouteOperationalState, sigChanICmapIntCauseTable=sigChanICmapIntCauseTable, vsrRowStatusTable=vsrRowStatusTable, vsrSvsFramerOpTptStatus=vsrSvsFramerOpTptStatus, vsrActiveFaxRelayChannels=vsrActiveFaxRelayChannels, sigChanSnmpOperStatus=sigChanSnmpOperStatus, vRouteDnaRowStatus=vRouteDnaRowStatus, vRouteDnaDataNetworkAddress=vRouteDnaDataNetworkAddress, vRouteDegradedSubroutesEntry=vRouteDegradedSubroutesEntry, vsr=vsr, vRouteInterfaceComfortNoiseCap=vRouteInterfaceComfortNoiseCap, vsrSvsFramerMvpDebug=vsrSvsFramerMvpDebug, vRouteDnaHgmUsageDeltaUpdateThreshold=vRouteDnaHgmUsageDeltaUpdateThreshold, vsrSvsFramerNRatesTable=vsrSvsFramerNRatesTable, vRouteDegradedSubroutesTable=vRouteDegradedSubroutesTable, vRouteDnaHgmMaxAvailableChannels=vRouteDnaHgmMaxAvailableChannels, vsrPeakActiveDataChannels=vsrPeakActiveDataChannels, vsrSvsFramerNegEntry=vsrSvsFramerNegEntry, vsrDebugRowStatusTable=vsrDebugRowStatusTable, sigChanGwGatewayCapTable=sigChanGwGatewayCapTable, vRouteDnaHgmRowStatusEntry=vRouteDnaHgmRowStatusEntry, vsrSvsLCoSetupPriority=vsrSvsLCoSetupPriority, vRouteSubroutesRowStatus=vRouteSubroutesRowStatus, sigChanICmapRowStatusEntry=sigChanICmapRowStatusEntry, vsrSvsFramerNegTable=vsrSvsFramerNegTable, sigChanStorageType=sigChanStorageType, sigChanBchRowStatus=sigChanBchRowStatus, vsrSvsLCoRequiredRxBandwidth=vsrSvsLCoRequiredRxBandwidth, vsrSvsFramerCurrentEncodingRate=vsrSvsFramerCurrentEncodingRate, vsrSvsLCoBytesToNetwork=vsrSvsLCoBytesToNetwork, vRouteInterface=vRouteInterface, vsrSvsOperStatusTable=vsrSvsOperStatusTable, sigChanBchVsrInstance=sigChanBchVsrInstance, sigChanCidDataEntry=sigChanCidDataEntry, sigChanNcasCallReference=sigChanNcasCallReference, vsrSvsFramerMvpDebugRowStatusEntry=vsrSvsFramerMvpDebugRowStatusEntry, vsrSvsFramerMvpDebugStorageType=vsrSvsFramerMvpDebugStorageType, vRouteInterfaceTandemPassThrough=vRouteInterfaceTandemPassThrough, vsrTotalCallsFromIf=vsrTotalCallsFromIf, vsrSvsFramerNEncodingValue=vsrSvsFramerNEncodingValue, vsrAddressIncompleteCalls=vsrAddressIncompleteCalls, vsrSvsAdminState=vsrSvsAdminState, sigChanBchTimeSlot=sigChanBchTimeSlot, sigChanICmapReqChanOrCircNotAvailCause=sigChanICmapReqChanOrCircNotAvailCause, vsrSvsLCoPathFailureCount=vsrSvsLCoPathFailureCount, sigChanICmapTempFailureCause=sigChanICmapTempFailureCause, vRouteDebugIndex=vRouteDebugIndex, vsrCallsRejectedByFarEnd=vsrCallsRejectedByFarEnd, vRouteDnaComponentName=vRouteDnaComponentName, vsrIfEntryTable=vsrIfEntryTable, vRouteDnaHgmHgAddr=vRouteDnaHgmHgAddr, vsrVoiceRoute=vsrVoiceRoute, vsrUsageState=vsrUsageState, vsrSvsOperEntry=vsrSvsOperEntry, vsrSvsLCoStatsEntry=vsrSvsLCoStatsEntry, vsrSvsLCoOverrideRemoteName=vsrSvsLCoOverrideRemoteName, vsrSvsFramerNRatesEntry=vsrSvsFramerNRatesEntry, sigChanGwRowStatusTable=sigChanGwRowStatusTable, vsrSvsStateEntry=vsrSvsStateEntry, vsrSvsDebugRowStatusTable=vsrSvsDebugRowStatusTable, vRouteSnmpOperStatus=vRouteSnmpOperStatus, vsrTotalFailedCallsFromIf=vsrTotalFailedCallsFromIf, vsrSvsLCoComponentName=vsrSvsLCoComponentName, vRouteSubroutesEntry=vRouteSubroutesEntry, vsrPeakActiveChannels=vsrPeakActiveChannels, vsrSvsFramerSilenceCells=vsrSvsFramerSilenceCells, vsrSvsFramerNegotiatedTandemPassThrough=vsrSvsFramerNegotiatedTandemPassThrough, vsrSvsFramerFrmLostInNetwork=vsrSvsFramerFrmLostInNetwork, vRouteDnaHgmHgAddrStorageType=vRouteDnaHgmHgAddrStorageType, vsrSvsTotalCalls=vsrSvsTotalCalls, vsrDebugIndex=vsrDebugIndex, vsrSvsFramerPcmCaptureIndex=vsrSvsFramerPcmCaptureIndex, vRouteDna=vRouteDna, vsrSvsLCoRequiredTrafficType=vsrSvsLCoRequiredTrafficType, vsrSvsFramerRowStatusEntry=vsrSvsFramerRowStatusEntry, vRouteOperStatusEntry=vRouteOperStatusEntry, vRouteOperStatusTable=vRouteOperStatusTable, sigChanGwComponentName=sigChanGwComponentName, vsrSvsFramerMvpDebugIndex=vsrSvsFramerMvpDebugIndex, sigChanIfEntryTable=sigChanIfEntryTable, vRouteDegradedSubroutesValue=vRouteDegradedSubroutesValue, vRouteInterfaceRowStatus=vRouteInterfaceRowStatus, vRouteAcctRowStatusEntry=vRouteAcctRowStatusEntry, vsrSvsFramerModemFaxCells=vsrSvsFramerModemFaxCells, sigChanNcasIndex=sigChanNcasIndex, vsrSvsLCoPathType=vsrSvsLCoPathType, vsrIndex=vsrIndex, vRouteInterfaceProvEntry=vRouteInterfaceProvEntry, vRouteDiallingPlan0=vRouteDiallingPlan0, vRouteIfIndex=vRouteIfIndex, vsrCidDataTable=vsrCidDataTable, vsrPeakActiveVoiceChannels=vsrPeakActiveVoiceChannels, vRouteUsageState=vRouteUsageState, vsrSvsLCo=vsrSvsLCo, vsrSvsFramerNRatesRateIndex=vsrSvsFramerNRatesRateIndex, sigChanForceNpiTon=sigChanForceNpiTon, vsrSvsFramerAudioCells=vsrSvsFramerAudioCells, vRouteStorageType=vRouteStorageType, sigChanNcasRowStatusEntry=sigChanNcasRowStatusEntry, vsrIfEntryEntry=vsrIfEntryEntry, sigChanGwGwcTable=sigChanGwGwcTable, vsrSvsFramerModemSilenceCells=vsrSvsFramerModemSilenceCells, vsrSvsFramerFrmFromNetworkIndex=vsrSvsFramerFrmFromNetworkIndex, sigChanBchRowStatusEntry=sigChanBchRowStatusEntry, vsrOperEntry=vsrOperEntry, sigChanICmapStorageType=sigChanICmapStorageType, vRouteDebugRowStatusEntry=vRouteDebugRowStatusEntry, vRouteInterfaceStructuredEchoCancellationTable=vRouteInterfaceStructuredEchoCancellationTable, vRouteInterfaceFaxHangoverTimeG711G726=vRouteInterfaceFaxHangoverTimeG711G726, sigChanBchCalledDirectoryNumber=sigChanBchCalledDirectoryNumber, vsrSvsFramerLrcErrors=vsrSvsFramerLrcErrors, vsrSignallingChannel=vsrSignallingChannel, sigChanGwGatewayCapEntry=sigChanGwGatewayCapEntry, vRouteAcctProvTable=vRouteAcctProvTable, vRouteSubroutesTable=vRouteSubroutesTable, vsrOperStatusTable=vsrOperStatusTable, vsrSvsDebug=vsrSvsDebug, vRouteDnaHgmHgAddrRowStatus=vRouteDnaHgmHgAddrRowStatus, vsrSvsOperTable=vsrSvsOperTable, vsrSvsFramerNegotiatedSilenceSuppression=vsrSvsFramerNegotiatedSilenceSuppression, vsrSvsLCoRowStatusTable=vsrSvsLCoRowStatusTable, sigChanIndex=sigChanIndex, sigChanDefaultNpiTon=sigChanDefaultNpiTon, sigChanSubroutesEntry=sigChanSubroutesEntry, vRouteInterfaceStructuredEchoCancellationEntry=vRouteInterfaceStructuredEchoCancellationEntry, sigChanDegradedSubroutesValue=sigChanDegradedSubroutesValue, vsrSvsLCoRoundTripDelay=vsrSvsLCoRoundTripDelay, vsrSvsFramerStateEntry=vsrSvsFramerStateEntry, vsrSvsIfEntryTable=vsrSvsIfEntryTable, vsrSvsFramerCurrentEncoding=vsrSvsFramerCurrentEncoding, voiceNetworkingCapabilitiesBE=voiceNetworkingCapabilitiesBE, sigChanNcasOperEntry=sigChanNcasOperEntry, vsrSvsFramerTptStatus=vsrSvsFramerTptStatus, vsrSvsLCoStorageType=vsrSvsLCoStorageType, vsrSvsLCoDiscardPriority=vsrSvsLCoDiscardPriority, vsrSvsLCoEnd=vsrSvsLCoEnd, sigChanStateTable=sigChanStateTable, sigChanICmapEgressLinkOutOfServCause=sigChanICmapEgressLinkOutOfServCause, vRouteDiallingPlan2=vRouteDiallingPlan2, vsrSvs=vsrSvs, vsrSvsFramerFrmToNetworkEntry=vsrSvsFramerFrmToNetworkEntry, sigChanCustomerIdentifier=sigChanCustomerIdentifier, vsrStateTable=vsrStateTable, vsrDebug=vsrDebug, vsrProvTable=vsrProvTable, vRouteCidDataTable=vRouteCidDataTable, vRouteStateEntry=vRouteStateEntry, vRouteInterfaceProvTable=vRouteInterfaceProvTable, vsrActiveModemChannels=vsrActiveModemChannels, vRouteInterfaceStorageType=vRouteInterfaceStorageType, vRouteInterfaceEchoReturnLoss=vRouteInterfaceEchoReturnLoss, sigChanNcas=sigChanNcas, vRouteInterfaceComponentName=vRouteInterfaceComponentName, vRouteCallsRejected=vRouteCallsRejected, vsrSvsFramerOpCurrentEncoding=vsrSvsFramerOpCurrentEncoding, vsrSvsFramerProvEntry=vsrSvsFramerProvEntry, sigChanUsageState=sigChanUsageState, sigChanNcasOperTable=sigChanNcasOperTable, vsrSvsLCoPathUpDateTime=vsrSvsLCoPathUpDateTime)
mibBuilder.exportSymbols("Nortel-Magellan-Passport-VoiceNetworkingMIB", vsrSvsDebugStorageType=vsrSvsDebugStorageType, sigChanNcasStorageType=sigChanNcasStorageType, vsrSvsFramerStatsEntry=vsrSvsFramerStatsEntry, vRouteDnaRowStatusTable=vRouteDnaRowStatusTable, sigChanOctothorpeEod=sigChanOctothorpeEod, vsrSvsFramerCurrentRate=vsrSvsFramerCurrentRate, vsrSvsLCoOptimization=vsrSvsLCoOptimization, vsrSvsStatus=vsrSvsStatus, vsrSvsFramerVfpDebugRowStatus=vsrSvsFramerVfpDebugRowStatus, vRouteDiallingPlan1=vRouteDiallingPlan1, vsrSvsLCoPktsFromNetwork=vsrSvsLCoPktsFromNetwork, vRouteStateTable=vRouteStateTable, vRouteInterfaceRowStatusTable=vRouteInterfaceRowStatusTable, sigChanRowStatusEntry=sigChanRowStatusEntry, vsrSvsLCoPathDataEntry=vsrSvsLCoPathDataEntry, vsrSvsLCoRequiredCustomerParameter=vsrSvsLCoRequiredCustomerParameter, vsrDebugRowStatus=vsrDebugRowStatus, sigChanGwRowStatusEntry=sigChanGwRowStatusEntry, vRouteRowStatus=vRouteRowStatus, sigChanOperationalState=sigChanOperationalState, vsrActiveDataChannels=vsrActiveDataChannels, vRouteDnaHgmHgAddrIndex=vRouteDnaHgmHgAddrIndex, vsrSvsIfAdminStatus=vsrSvsIfAdminStatus, sigChanICmapSwitchCongestCause=sigChanICmapSwitchCongestCause, vsrOperStatusEntry=vsrOperStatusEntry, vsrOperTable=vsrOperTable, vsrSvsFramerVfpDebugStorageType=vsrSvsFramerVfpDebugStorageType, vsrSvsFramerPcmCaptureRowStatusTable=vsrSvsFramerPcmCaptureRowStatusTable, vsrSvsFramerStatsTable=vsrSvsFramerStatsTable, sigChanNcasDuration=sigChanNcasDuration, vRouteCidDataEntry=vRouteCidDataEntry, sigChanICmap=sigChanICmap, vsrSvsLCoPermittedTrunkTypes=vsrSvsLCoPermittedTrunkTypes, vsrSvsComponentName=vsrSvsComponentName, vsrSvsLCoRetryCount=vsrSvsLCoRetryCount, vsrSvsOperationalState=vsrSvsOperationalState, vRouteDnaHgmHgAddrDataNetworkAddress=vRouteDnaHgmHgAddrDataNetworkAddress, vsrSvsFramerOperationalState=vsrSvsFramerOperationalState, vsrSvsFramerNEncodingEntry=vsrSvsFramerNEncodingEntry, sigChanGwUnsupportedConversions=sigChanGwUnsupportedConversions, vRouteDnaAddressTable=vRouteDnaAddressTable, sigChanBchIndex=sigChanBchIndex, vRouteAcct=vRouteAcct, vsrSvsFramerTotalCells=vsrSvsFramerTotalCells, sigChanICmapNoSuchChannelCause=sigChanICmapNoSuchChannelCause, vRouteDnaHgmIfEntry=vRouteDnaHgmIfEntry, vsrDebugRowStatusEntry=vsrDebugRowStatusEntry, vRouteOverrideDirectoryNumber=vRouteOverrideDirectoryNumber, vsrSvsLCoBumpPreference=vsrSvsLCoBumpPreference, vsrSvsFramerVfpDebugRowStatusEntry=vsrSvsFramerVfpDebugRowStatusEntry, vRouteDnaHgmHgAddrAddrEntry=vRouteDnaHgmHgAddrAddrEntry, vsrSvsLCoBytesFromNetwork=vsrSvsLCoBytesFromNetwork, vsrSvsLCoHoldingPriority=vsrSvsLCoHoldingPriority, sigChanGwGatewayCapIndex=sigChanGwGatewayCapIndex, sigChanBchOperTable=sigChanBchOperTable, vsrSvsFramerRowStatus=vsrSvsFramerRowStatus, vRouteDnaHgmAvailableChannels=vRouteDnaHgmAvailableChannels, vRouteDnaHgmRowStatusTable=vRouteDnaHgmRowStatusTable, vsrCommentText=vsrCommentText, vRouteDnaIndex=vRouteDnaIndex, vsrSvsLCoRowStatus=vsrSvsLCoRowStatus, voiceNetworkingCapabilitiesBE01A=voiceNetworkingCapabilitiesBE01A, sigChanICmapIndex=sigChanICmapIndex, vsrSvsFramerPcmCapture=vsrSvsFramerPcmCapture, vsrSvsRowStatusTable=vsrSvsRowStatusTable, vsrIfIndex=vsrIfIndex, vsrSvsCallingNumber=vsrSvsCallingNumber, vsrSvsFramerAdminState=vsrSvsFramerAdminState, vsrInvalidNumberingPlanCalls=vsrInvalidNumberingPlanCalls, vRouteDnaHgmStorageType=vRouteDnaHgmStorageType, vsrSvsStateTable=vsrSvsStateTable, sigChanGwRequiredConversions=sigChanGwRequiredConversions, sigChanSubroutesTable=sigChanSubroutesTable, vsrSvsClearCauseCode=vsrSvsClearCauseCode, vsrSvsFramerVfpDebugComponentName=vsrSvsFramerVfpDebugComponentName, vRouteDnaRowStatusEntry=vRouteDnaRowStatusEntry, voiceNetworkingCapabilities=voiceNetworkingCapabilities, sigChanNcasDirection=sigChanNcasDirection, sigChanNcasCalledDirectoryNumber=sigChanNcasCalledDirectoryNumber, sigChanICmapResourceUnavailCause=sigChanICmapResourceUnavailCause, vsrSvsFramerRowStatusTable=vsrSvsFramerRowStatusTable, vsrSvsFramerNegotiatedFisG711G726=vsrSvsFramerNegotiatedFisG711G726, sigChanProvTable=sigChanProvTable, vRouteDnaStorageType=vRouteDnaStorageType, vRouteRowStatusTable=vRouteRowStatusTable, vRouteAcctAccountCollection=vRouteAcctAccountCollection, vRouteDnaHgmOpTable=vRouteDnaHgmOpTable, vsrDebugStorageType=vsrDebugStorageType, vsrSvsFramerFrmFromNetworkValue=vsrSvsFramerFrmFromNetworkValue, vRouteDnaAddressEntry=vRouteDnaAddressEntry, vRouteCallsClearedOutOfService=vRouteCallsClearedOutOfService, vsrSvsCalledNumber=vsrSvsCalledNumber, sigChanOperStatusEntry=sigChanOperStatusEntry, vRouteProvTable=vRouteProvTable, vsrSvsFramerOperEntry=vsrSvsFramerOperEntry, sigChanBchOperEntry=sigChanBchOperEntry, vsrSvsLCoPathValue=vsrSvsLCoPathValue, vsrSvsFramerProvTable=vsrSvsFramerProvTable, sigChanNcasRowStatusTable=sigChanNcasRowStatusTable, vsrSvsFramerNRatesValue=vsrSvsFramerNRatesValue, vRouteDnaHgmHgAddrRowStatusEntry=vRouteDnaHgmHgAddrRowStatusEntry, vRouteDnaHgmAvailabilityDelta=vRouteDnaHgmAvailabilityDelta, vsrSvsFramerOperTable=vsrSvsFramerOperTable, vRouteIfEntryEntry=vRouteIfEntryEntry, sigChanCommentText=sigChanCommentText, vRouteDnaHgmHgAddrRowStatusTable=vRouteDnaHgmHgAddrRowStatusTable, sigChanICmapRowStatus=sigChanICmapRowStatus, vsrSvsProfileNumber=vsrSvsProfileNumber, vRouteDnaHgmHgAddrNumberingPlanIndicator=vRouteDnaHgmHgAddrNumberingPlanIndicator, vRouteCustomerIdentifier=vRouteCustomerIdentifier, sigChanGwIndex=sigChanGwIndex, vRouteAcctIndex=vRouteAcctIndex, sigChanBchStatus=sigChanBchStatus, vsrCallsRejectedLocally=vsrCallsRejectedLocally, vsrActiveVoiceChannels=vsrActiveVoiceChannels, vRouteDnaHgm=vRouteDnaHgm, vsrSvsFramerNEncodingTable=vsrSvsFramerNEncodingTable, sigChanSubroutesValue=sigChanSubroutesValue, sigChanGwStorageType=sigChanGwStorageType, sigChanGwGwcValue=sigChanGwGwcValue, vsrSvsFramerPcmCaptureComponentName=vsrSvsFramerPcmCaptureComponentName, vsrSvsStatsTable=vsrSvsStatsTable, vsrSvsDebugRowStatusEntry=vsrSvsDebugRowStatusEntry, vRouteInterfaceEchoTailDelay=vRouteInterfaceEchoTailDelay, vsrSvsFramerPcmCaptureRowStatusEntry=vsrSvsFramerPcmCaptureRowStatusEntry, vsrPathSetupTimeOutCalls=vsrPathSetupTimeOutCalls, vsrCidDataEntry=vsrCidDataEntry, vRouteInterfaceStructuredEchoCancellationIndex=vRouteInterfaceStructuredEchoCancellationIndex, vsrSvsLCoDelayMetric=vsrSvsLCoDelayMetric, voiceNetworkingGroupBE=voiceNetworkingGroupBE, sigChanAdminState=sigChanAdminState, vsrSvsIfIndex=vsrSvsIfIndex, vsrSvsLCoState=vsrSvsLCoState, vRouteInterfaceEchoCancellation=vRouteInterfaceEchoCancellation, vsrAdminState=vsrAdminState, vsrSvsIfEntryEntry=vsrSvsIfEntryEntry, vsrStatsEntry=vsrStatsEntry, vsrSvsSnmpOperStatus=vsrSvsSnmpOperStatus, vsrSvsFramerMvpDebugRowStatusTable=vsrSvsFramerMvpDebugRowStatusTable, vRouteDebugRowStatusTable=vRouteDebugRowStatusTable, sigChanICmapRowStatusTable=sigChanICmapRowStatusTable, vsrSvsFramerFrmDumped=vsrSvsFramerFrmDumped, vsrSvsFramerMvpDebugRowStatus=vsrSvsFramerMvpDebugRowStatus, vsrSvsFramerFrmFromNetworkEntry=vsrSvsFramerFrmFromNetworkEntry, vRouteCommentText=vRouteCommentText, vRouteAcctAccountingOptions=vRouteAcctAccountingOptions, vsrSvsFramerFrmToNetworkIndex=vsrSvsFramerFrmToNetworkIndex, vsrSvsFramerInterfaceName=vsrSvsFramerInterfaceName, vsrDebugComponentName=vsrDebugComponentName, vRouteTotalCallsFromSubnet=vRouteTotalCallsFromSubnet, vRouteAdminState=vRouteAdminState, vsrSvsFramerFrmToNetworkValue=vsrSvsFramerFrmToNetworkValue, vRouteAcctStorageType=vRouteAcctStorageType, sigChanICmapChanOrCircNotAvailCause=sigChanICmapChanOrCircNotAvailCause, vsrSvsFramer=vsrSvsFramer, vsrSvsRowStatusEntry=vsrSvsRowStatusEntry, vRouteDebugComponentName=vRouteDebugComponentName, vsrSvsDebugComponentName=vsrSvsDebugComponentName, vRouteInterfaceIngressAudioGain=vRouteInterfaceIngressAudioGain, sigChanICmapIncompatDestCause=sigChanICmapIncompatDestCause, vsrSvsUsageState=vsrSvsUsageState, vRouteAcctRowStatus=vRouteAcctRowStatus, vRouteInterfaceEgressAudioGain=vRouteInterfaceEgressAudioGain, voiceNetworkingMIB=voiceNetworkingMIB, vRouteStatsEntry=vRouteStatsEntry, vsrRowStatusEntry=vsrRowStatusEntry, vsrSvsDebugRowStatus=vsrSvsDebugRowStatus, vsrSvsLCoPathEntry=vsrSvsLCoPathEntry, vsrSvsFramerStateTable=vsrSvsFramerStateTable, vsrSvsLCoRequiredSecurity=vsrSvsLCoRequiredSecurity, vsrSvsFramerMvpDebugComponentName=vsrSvsFramerMvpDebugComponentName, vRouteDnaHgmIfTable=vRouteDnaHgmIfTable, voiceNetworkingGroupBE01A=voiceNetworkingGroupBE01A, vRouteDnaHgmComponentName=vRouteDnaHgmComponentName, vsrSvsLCoPathDataTable=vsrSvsLCoPathDataTable, vsrSvsStorageType=vsrSvsStorageType, vsrSvsFramerModemCells=vsrSvsFramerModemCells, sigChanOperStatusTable=sigChanOperStatusTable, sigChanDegradedSubroutesTable=sigChanDegradedSubroutesTable, vsrSnmpOperStatus=vsrSnmpOperStatus, vsrSvsFramerNEncodingIndex=vsrSvsFramerNEncodingIndex, vsrSvsCallType=vsrSvsCallType, vsrSvsLCoStatsTable=vsrSvsLCoStatsTable, vsrSvsDebugIndex=vsrSvsDebugIndex, sigChanBchComponentName=sigChanBchComponentName, vsrPeakActiveFaxRelayChannels=vsrPeakActiveFaxRelayChannels, voiceNetworkingGroup=voiceNetworkingGroup, vsrStorageType=vsrStorageType, voiceNetworkingCapabilitiesBE01=voiceNetworkingCapabilitiesBE01, vRouteMinimumDigitsToRoute=vRouteMinimumDigitsToRoute, vsrSvsFramerVfpDebugRowStatusTable=vsrSvsFramerVfpDebugRowStatusTable, vRouteDnaHgmOpEntry=vRouteDnaHgmOpEntry, vsrSvsLCoIndex=vsrSvsLCoIndex, vsrSvsIndex=vsrSvsIndex, vsrSvsFramerFrmFromNetworkTable=vsrSvsFramerFrmFromNetworkTable, vsrSvsLCoRequiredTxBandwidth=vsrSvsLCoRequiredTxBandwidth, vsrSvsLCoEmissionPriority=vsrSvsLCoEmissionPriority, vsrSvsLCoLastTearDownReason=vsrSvsLCoLastTearDownReason, vsrPeakActiveTptChannels=vsrPeakActiveTptChannels, vsrActiveChannels=vsrActiveChannels, sigChanComponentName=sigChanComponentName, vsrAddressResolutionFailedCalls=vsrAddressResolutionFailedCalls, vRouteInterfaceSpeechHangoverTime=vRouteInterfaceSpeechHangoverTime, vsrSvsRowStatus=vsrSvsRowStatus)
