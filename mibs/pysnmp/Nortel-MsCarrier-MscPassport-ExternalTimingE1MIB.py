#
# PySNMP MIB module Nortel-MsCarrier-MscPassport-ExternalTimingE1MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/Nortel-MsCarrier-MscPassport-ExternalTimingE1MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 20:20:34 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ConstraintsUnion, ValueSizeConstraint, ValueRangeConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ConstraintsUnion", "ValueSizeConstraint", "ValueRangeConstraint", "ConstraintsIntersection")
mscLp, mscLpIndex = mibBuilder.importSymbols("Nortel-MsCarrier-MscPassport-LogicalProcessorMIB", "mscLp", "mscLpIndex")
StorageType, Integer32, DisplayString, RowStatus = mibBuilder.importSymbols("Nortel-MsCarrier-MscPassport-StandardTextualConventionsMIB", "StorageType", "Integer32", "DisplayString", "RowStatus")
mscPassportMIBs, = mibBuilder.importSymbols("Nortel-MsCarrier-MscPassport-UsefulDefinitionsMIB", "mscPassportMIBs")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
MibScalar, MibTable, MibTableRow, MibTableColumn, Unsigned32, IpAddress, MibIdentifier, Counter64, Bits, Counter32, Gauge32, Integer32, TimeTicks, ModuleIdentity, NotificationType, ObjectIdentity, iso = mibBuilder.importSymbols("SNMPv2-SMI", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Unsigned32", "IpAddress", "MibIdentifier", "Counter64", "Bits", "Counter32", "Gauge32", "Integer32", "TimeTicks", "ModuleIdentity", "NotificationType", "ObjectIdentity", "iso")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
externalTimingE1MIB = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 152))
mscLpEE1 = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 29))
mscLpEE1RowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 29, 1), )
if mibBuilder.loadTexts: mscLpEE1RowStatusTable.setStatus('mandatory')
mscLpEE1RowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 29, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-LogicalProcessorMIB", "mscLpIndex"), (0, "Nortel-MsCarrier-MscPassport-ExternalTimingE1MIB", "mscLpEE1Index"))
if mibBuilder.loadTexts: mscLpEE1RowStatusEntry.setStatus('mandatory')
mscLpEE1RowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 29, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscLpEE1RowStatus.setStatus('mandatory')
mscLpEE1ComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 29, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpEE1ComponentName.setStatus('mandatory')
mscLpEE1StorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 29, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpEE1StorageType.setStatus('mandatory')
mscLpEE1Index = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 29, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1)))
if mibBuilder.loadTexts: mscLpEE1Index.setStatus('mandatory')
mscLpEE1OperStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 29, 14), )
if mibBuilder.loadTexts: mscLpEE1OperStatusTable.setStatus('mandatory')
mscLpEE1OperStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 29, 14, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-LogicalProcessorMIB", "mscLpIndex"), (0, "Nortel-MsCarrier-MscPassport-ExternalTimingE1MIB", "mscLpEE1Index"))
if mibBuilder.loadTexts: mscLpEE1OperStatusEntry.setStatus('mandatory')
mscLpEE1SnmpOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 29, 14, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("testing", 3))).clone('up')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpEE1SnmpOperStatus.setStatus('mandatory')
mscLpEE1StateTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 29, 15), )
if mibBuilder.loadTexts: mscLpEE1StateTable.setStatus('mandatory')
mscLpEE1StateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 29, 15, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-LogicalProcessorMIB", "mscLpIndex"), (0, "Nortel-MsCarrier-MscPassport-ExternalTimingE1MIB", "mscLpEE1Index"))
if mibBuilder.loadTexts: mscLpEE1StateEntry.setStatus('mandatory')
mscLpEE1AdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 29, 15, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("locked", 0), ("unlocked", 1), ("shuttingDown", 2))).clone('unlocked')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpEE1AdminState.setStatus('mandatory')
mscLpEE1OperationalState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 29, 15, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1))).clone('disabled')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpEE1OperationalState.setStatus('mandatory')
mscLpEE1UsageState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 29, 15, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("idle", 0), ("active", 1), ("busy", 2))).clone('idle')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpEE1UsageState.setStatus('mandatory')
mscLpEE1AvailabilityStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 29, 15, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(2, 2)).setFixedLength(2)).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpEE1AvailabilityStatus.setStatus('mandatory')
mscLpEE1ProceduralStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 29, 15, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 1)).setFixedLength(1)).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpEE1ProceduralStatus.setStatus('mandatory')
mscLpEE1ControlStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 29, 15, 1, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 1)).setFixedLength(1)).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpEE1ControlStatus.setStatus('mandatory')
mscLpEE1AlarmStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 29, 15, 1, 7), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 1)).setFixedLength(1)).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpEE1AlarmStatus.setStatus('mandatory')
mscLpEE1StandbyStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 29, 15, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 15))).clone(namedValues=NamedValues(("hotStandby", 0), ("coldStandby", 1), ("providingService", 2), ("notSet", 15))).clone('notSet')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpEE1StandbyStatus.setStatus('mandatory')
mscLpEE1UnknownStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 29, 15, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("false", 0), ("true", 1))).clone('false')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpEE1UnknownStatus.setStatus('mandatory')
mscLpEE1OperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 29, 16), )
if mibBuilder.loadTexts: mscLpEE1OperTable.setStatus('mandatory')
mscLpEE1OperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 29, 16, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-LogicalProcessorMIB", "mscLpIndex"), (0, "Nortel-MsCarrier-MscPassport-ExternalTimingE1MIB", "mscLpEE1Index"))
if mibBuilder.loadTexts: mscLpEE1OperEntry.setStatus('mandatory')
mscLpEE1LosAlarm = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 29, 16, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("on", 0), ("off", 1))).clone('off')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpEE1LosAlarm.setStatus('mandatory')
mscLpEE1LofAlarm = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 29, 16, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("on", 0), ("off", 1))).clone('off')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpEE1LofAlarm.setStatus('mandatory')
mscLpEE1RxAisAlarm = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 29, 16, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("on", 0), ("off", 1))).clone('off')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpEE1RxAisAlarm.setStatus('mandatory')
externalTimingE1Group = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 152, 1))
externalTimingE1GroupCA = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 152, 1, 1))
externalTimingE1GroupCA02 = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 152, 1, 1, 3))
externalTimingE1GroupCA02A = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 152, 1, 1, 3, 2))
externalTimingE1Capabilities = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 152, 3))
externalTimingE1CapabilitiesCA = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 152, 3, 1))
externalTimingE1CapabilitiesCA02 = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 152, 3, 1, 3))
externalTimingE1CapabilitiesCA02A = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 152, 3, 1, 3, 2))
mibBuilder.exportSymbols("Nortel-MsCarrier-MscPassport-ExternalTimingE1MIB", mscLpEE1AvailabilityStatus=mscLpEE1AvailabilityStatus, externalTimingE1Group=externalTimingE1Group, mscLpEE1StateTable=mscLpEE1StateTable, mscLpEE1ProceduralStatus=mscLpEE1ProceduralStatus, mscLpEE1StorageType=mscLpEE1StorageType, mscLpEE1StandbyStatus=mscLpEE1StandbyStatus, mscLpEE1UsageState=mscLpEE1UsageState, mscLpEE1RxAisAlarm=mscLpEE1RxAisAlarm, mscLpEE1RowStatus=mscLpEE1RowStatus, externalTimingE1GroupCA=externalTimingE1GroupCA, mscLpEE1UnknownStatus=mscLpEE1UnknownStatus, mscLpEE1RowStatusEntry=mscLpEE1RowStatusEntry, externalTimingE1CapabilitiesCA02=externalTimingE1CapabilitiesCA02, mscLpEE1AdminState=mscLpEE1AdminState, mscLpEE1ControlStatus=mscLpEE1ControlStatus, mscLpEE1OperEntry=mscLpEE1OperEntry, mscLpEE1LosAlarm=mscLpEE1LosAlarm, externalTimingE1GroupCA02A=externalTimingE1GroupCA02A, externalTimingE1CapabilitiesCA=externalTimingE1CapabilitiesCA, mscLpEE1=mscLpEE1, mscLpEE1ComponentName=mscLpEE1ComponentName, mscLpEE1OperationalState=mscLpEE1OperationalState, externalTimingE1Capabilities=externalTimingE1Capabilities, externalTimingE1MIB=externalTimingE1MIB, mscLpEE1OperStatusEntry=mscLpEE1OperStatusEntry, mscLpEE1OperStatusTable=mscLpEE1OperStatusTable, mscLpEE1RowStatusTable=mscLpEE1RowStatusTable, externalTimingE1CapabilitiesCA02A=externalTimingE1CapabilitiesCA02A, mscLpEE1SnmpOperStatus=mscLpEE1SnmpOperStatus, mscLpEE1StateEntry=mscLpEE1StateEntry, mscLpEE1AlarmStatus=mscLpEE1AlarmStatus, mscLpEE1Index=mscLpEE1Index, mscLpEE1LofAlarm=mscLpEE1LofAlarm, mscLpEE1OperTable=mscLpEE1OperTable, externalTimingE1GroupCA02=externalTimingE1GroupCA02)
