#
# PySNMP MIB module ZYXEL-VRRP-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/ZYXEL-VRRP-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 21:46:16 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, SingleValueConstraint, ValueSizeConstraint, ConstraintsUnion, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "SingleValueConstraint", "ValueSizeConstraint", "ConstraintsUnion", "ValueRangeConstraint")
EnabledStatus, = mibBuilder.importSymbols("P-BRIDGE-MIB", "EnabledStatus")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
TimeTicks, Integer32, Unsigned32, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter32, Bits, MibIdentifier, Gauge32, iso, Counter64, ModuleIdentity, NotificationType, ObjectIdentity, IpAddress = mibBuilder.importSymbols("SNMPv2-SMI", "TimeTicks", "Integer32", "Unsigned32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter32", "Bits", "MibIdentifier", "Gauge32", "iso", "Counter64", "ModuleIdentity", "NotificationType", "ObjectIdentity", "IpAddress")
RowStatus, TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "RowStatus", "TextualConvention", "DisplayString")
esMgmt, = mibBuilder.importSymbols("ZYXEL-ES-SMI", "esMgmt")
zyRouteDomainIpAddress, zyRouteDomainIpMaskBits = mibBuilder.importSymbols("ZYXEL-IP-FORWARD-MIB", "zyRouteDomainIpAddress", "zyRouteDomainIpMaskBits")
zyxelVrrp = ModuleIdentity((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 91))
if mibBuilder.loadTexts: zyxelVrrp.setLastUpdated('201207010000Z')
if mibBuilder.loadTexts: zyxelVrrp.setOrganization('Enterprise Solution ZyXEL')
zyxelVrrpSetup = MibIdentifier((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 91, 1))
zyxelVrrpStatus = MibIdentifier((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 91, 2))
zyVrrpMaxNumberOfVirtualRouters = MibScalar((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 91, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zyVrrpMaxNumberOfVirtualRouters.setStatus('current')
zyxelVrrpTable = MibTable((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 91, 1, 2), )
if mibBuilder.loadTexts: zyxelVrrpTable.setStatus('current')
zyxelVrrpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 91, 1, 2, 1), ).setIndexNames((0, "ZYXEL-IP-FORWARD-MIB", "zyRouteDomainIpAddress"), (0, "ZYXEL-IP-FORWARD-MIB", "zyRouteDomainIpMaskBits"), (0, "ZYXEL-VRRP-MIB", "zyVrrpVirtualId"), (0, "ZYXEL-VRRP-MIB", "zyVrrpUplinkGateway"))
if mibBuilder.loadTexts: zyxelVrrpEntry.setStatus('current')
zyVrrpVirtualId = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 91, 1, 2, 1, 1), Integer32())
if mibBuilder.loadTexts: zyVrrpVirtualId.setStatus('current')
zyVrrpUplinkGateway = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 91, 1, 2, 1, 2), IpAddress())
if mibBuilder.loadTexts: zyVrrpUplinkGateway.setStatus('current')
zyVrrpPreemptState = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 91, 1, 2, 1, 3), EnabledStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zyVrrpPreemptState.setStatus('current')
zyVrrpInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 91, 1, 2, 1, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zyVrrpInterval.setStatus('current')
zyVrrpPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 91, 1, 2, 1, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zyVrrpPriority.setStatus('current')
zyVrrpPrimaryVirtualpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 91, 1, 2, 1, 6), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zyVrrpPrimaryVirtualpAddress.setStatus('current')
zyVrrpName = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 91, 1, 2, 1, 7), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zyVrrpName.setStatus('current')
zyVrrpSecondaryVirtualIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 91, 1, 2, 1, 8), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zyVrrpSecondaryVirtualIpAddress.setStatus('current')
zyVrrpPingState = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 91, 1, 2, 1, 9), EnabledStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zyVrrpPingState.setStatus('current')
zyVrrpRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 91, 1, 2, 1, 10), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: zyVrrpRowStatus.setStatus('current')
zyxelVrrpDomainTable = MibTable((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 91, 1, 3), )
if mibBuilder.loadTexts: zyxelVrrpDomainTable.setStatus('current')
zyxelVrrpDomainEntry = MibTableRow((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 91, 1, 3, 1), ).setIndexNames((0, "ZYXEL-IP-FORWARD-MIB", "zyRouteDomainIpAddress"), (0, "ZYXEL-IP-FORWARD-MIB", "zyRouteDomainIpMaskBits"))
if mibBuilder.loadTexts: zyxelVrrpDomainEntry.setStatus('current')
zyVrrpDomainAuthenticationType = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 91, 1, 3, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("none", 0), ("simple", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zyVrrpDomainAuthenticationType.setStatus('current')
zyVrrpDomainAuthenticationKey = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 91, 1, 3, 1, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zyVrrpDomainAuthenticationKey.setStatus('current')
zyxelVrrpInfoTable = MibTable((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 91, 2, 1), )
if mibBuilder.loadTexts: zyxelVrrpInfoTable.setStatus('current')
zyxelVrrpInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 91, 2, 1, 1), ).setIndexNames((0, "ZYXEL-VRRP-MIB", "zyVrrpInfoIpAddress"), (0, "ZYXEL-VRRP-MIB", "zyVrrpInfoIpMaskBits"), (0, "ZYXEL-VRRP-MIB", "zyVrrpInfoVirtualId"))
if mibBuilder.loadTexts: zyxelVrrpInfoEntry.setStatus('current')
zyVrrpInfoIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 91, 2, 1, 1, 1), IpAddress())
if mibBuilder.loadTexts: zyVrrpInfoIpAddress.setStatus('current')
zyVrrpInfoIpMaskBits = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 91, 2, 1, 1, 2), Integer32())
if mibBuilder.loadTexts: zyVrrpInfoIpMaskBits.setStatus('current')
zyVrrpInfoVirtualId = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 91, 2, 1, 1, 3), Integer32())
if mibBuilder.loadTexts: zyVrrpInfoVirtualId.setStatus('current')
zyVrrpInfoVirtualRouterStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 91, 2, 1, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zyVrrpInfoVirtualRouterStatus.setStatus('current')
zyVrrpInfoUplinkStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 91, 2, 1, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zyVrrpInfoUplinkStatus.setStatus('current')
mibBuilder.exportSymbols("ZYXEL-VRRP-MIB", zyVrrpPrimaryVirtualpAddress=zyVrrpPrimaryVirtualpAddress, zyxelVrrpSetup=zyxelVrrpSetup, zyxelVrrpStatus=zyxelVrrpStatus, zyxelVrrpDomainTable=zyxelVrrpDomainTable, zyVrrpName=zyVrrpName, zyVrrpDomainAuthenticationKey=zyVrrpDomainAuthenticationKey, zyVrrpInterval=zyVrrpInterval, zyxelVrrpInfoTable=zyxelVrrpInfoTable, zyVrrpInfoIpAddress=zyVrrpInfoIpAddress, zyVrrpDomainAuthenticationType=zyVrrpDomainAuthenticationType, PYSNMP_MODULE_ID=zyxelVrrp, zyxelVrrpTable=zyxelVrrpTable, zyVrrpRowStatus=zyVrrpRowStatus, zyVrrpInfoVirtualRouterStatus=zyVrrpInfoVirtualRouterStatus, zyVrrpPriority=zyVrrpPriority, zyxelVrrpInfoEntry=zyxelVrrpInfoEntry, zyVrrpInfoVirtualId=zyVrrpInfoVirtualId, zyxelVrrp=zyxelVrrp, zyVrrpPingState=zyVrrpPingState, zyVrrpUplinkGateway=zyVrrpUplinkGateway, zyxelVrrpEntry=zyxelVrrpEntry, zyVrrpPreemptState=zyVrrpPreemptState, zyVrrpMaxNumberOfVirtualRouters=zyVrrpMaxNumberOfVirtualRouters, zyVrrpInfoUplinkStatus=zyVrrpInfoUplinkStatus, zyVrrpInfoIpMaskBits=zyVrrpInfoIpMaskBits, zyVrrpSecondaryVirtualIpAddress=zyVrrpSecondaryVirtualIpAddress, zyVrrpVirtualId=zyVrrpVirtualId, zyxelVrrpDomainEntry=zyxelVrrpDomainEntry)
