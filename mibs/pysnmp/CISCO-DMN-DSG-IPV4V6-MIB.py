#
# PySNMP MIB module CISCO-DMN-DSG-IPV4V6-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CISCO-DMN-DSG-IPV4V6-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:37:42 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ValueRangeConstraint, ValueSizeConstraint, ConstraintsIntersection, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ValueRangeConstraint", "ValueSizeConstraint", "ConstraintsIntersection", "SingleValueConstraint")
ciscoDSGUtilities, = mibBuilder.importSymbols("CISCO-DMN-DSG-ROOT-MIB", "ciscoDSGUtilities")
NotificationGroup, ModuleCompliance, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance", "ObjectGroup")
Bits, MibIdentifier, IpAddress, ModuleIdentity, Counter32, iso, Integer32, Gauge32, Unsigned32, TimeTicks, ObjectIdentity, Counter64, MibScalar, MibTable, MibTableRow, MibTableColumn, NotificationType = mibBuilder.importSymbols("SNMPv2-SMI", "Bits", "MibIdentifier", "IpAddress", "ModuleIdentity", "Counter32", "iso", "Integer32", "Gauge32", "Unsigned32", "TimeTicks", "ObjectIdentity", "Counter64", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "NotificationType")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
ciscoDSGIPv4v6 = ModuleIdentity((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 25))
ciscoDSGIPv4v6.setRevisions(('2012-03-20 11:00', '2010-08-30 11:00', '2010-04-30 05:00', '2010-04-12 05:00', '2010-03-22 05:00', '2009-12-20 12:00',))
if mibBuilder.loadTexts: ciscoDSGIPv4v6.setLastUpdated('201203201100Z')
if mibBuilder.loadTexts: ciscoDSGIPv4v6.setOrganization('Cisco Systems, Inc.')
ipV4v6Table = MibIdentifier((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 25, 2))
macInfoTable = MibTable((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 25, 2, 1), )
if mibBuilder.loadTexts: macInfoTable.setStatus('current')
macInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 25, 2, 1, 1), ).setIndexNames((0, "CISCO-DMN-DSG-IPV4V6-MIB", "macInfoMacIndex"))
if mibBuilder.loadTexts: macInfoEntry.setStatus('current')
macInfoMacIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 25, 2, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: macInfoMacIndex.setStatus('current')
macInfoMacAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 25, 2, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 17))).setMaxAccess("readonly")
if mibBuilder.loadTexts: macInfoMacAddr.setStatus('current')
ipConfigTable = MibTable((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 25, 2, 2), )
if mibBuilder.loadTexts: ipConfigTable.setStatus('current')
ipConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 25, 2, 2, 1), ).setIndexNames((0, "CISCO-DMN-DSG-IPV4V6-MIB", "ipConfigPortIdKey"))
if mibBuilder.loadTexts: ipConfigEntry.setStatus('current')
ipConfigPortIdKey = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 25, 2, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipConfigPortIdKey.setStatus('current')
ipConfigName = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 25, 2, 2, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 24))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipConfigName.setStatus('current')
ipConfigCurIPAddressV4 = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 25, 2, 2, 1, 3), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipConfigCurIPAddressV4.setStatus('current')
ipConfigCurNetworkMaskV4 = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 25, 2, 2, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(8, 30))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipConfigCurNetworkMaskV4.setStatus('current')
ipConfigCurDefaultGatewayV4 = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 25, 2, 2, 1, 5), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipConfigCurDefaultGatewayV4.setStatus('current')
ipConfigV4V6Flag = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 25, 2, 2, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("ipV4", 1), ("ipV6", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipConfigV4V6Flag.setStatus('current')
ipConfigPortMode = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 25, 2, 2, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("auto", 1), ("hd10", 2), ("fd10", 3), ("hd100", 4), ("fd100", 5), ("hd1000", 6), ("fd1000", 7)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipConfigPortMode.setStatus('current')
ethStatusLink = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 25, 2, 2, 1, 11), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ethStatusLink.setStatus('current')
ethStatusSpeed = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 25, 2, 2, 1, 12), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ethStatusSpeed.setStatus('current')
ethStatusDuplex = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 25, 2, 2, 1, 13), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ethStatusDuplex.setStatus('current')
ethStatusXover = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 25, 2, 2, 1, 14), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ethStatusXover.setStatus('current')
ethBackupTable = MibTable((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 25, 2, 3), )
if mibBuilder.loadTexts: ethBackupTable.setStatus('current')
ethBackupEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 25, 2, 3, 1), ).setIndexNames((0, "CISCO-DMN-DSG-IPV4V6-MIB", "ethBackupIndex"))
if mibBuilder.loadTexts: ethBackupEntry.setStatus('current')
ethBackupIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 25, 2, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ethBackupIndex.setStatus('current')
ethBackupMode = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 25, 2, 3, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("mirroring", 1), ("backupPrimaryData1", 2), ("backupPrimaryData2", 3), ("manualData1", 4), ("manualData2", 5)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ethBackupMode.setStatus('current')
ethBackupDirection = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 25, 2, 3, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("nonRevertive", 1), ("revertive", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ethBackupDirection.setStatus('current')
ethBackupDelayForward = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 25, 2, 3, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 10000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ethBackupDelayForward.setStatus('current')
ethBackupDelayBack = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 25, 2, 3, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 120))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ethBackupDelayBack.setStatus('current')
ethBackupStatusTable = MibTable((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 25, 2, 4), )
if mibBuilder.loadTexts: ethBackupStatusTable.setStatus('current')
ethBackupStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 25, 2, 4, 1), ).setIndexNames((0, "CISCO-DMN-DSG-IPV4V6-MIB", "ethBackupStatusIndex"))
if mibBuilder.loadTexts: ethBackupStatusEntry.setStatus('current')
ethBackupStatusIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 25, 2, 4, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ethBackupStatusIndex.setStatus('current')
ethBackupStatusPortsInUse = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 25, 2, 4, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ethBackupStatusPortsInUse.setStatus('current')
ethBackupStatusChangeReason = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 25, 2, 4, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ethBackupStatusChangeReason.setStatus('current')
ethBackupStatusChangeDateTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 25, 2, 4, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 30))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ethBackupStatusChangeDateTime.setStatus('current')
mibBuilder.exportSymbols("CISCO-DMN-DSG-IPV4V6-MIB", ipConfigPortIdKey=ipConfigPortIdKey, macInfoMacAddr=macInfoMacAddr, ipConfigCurNetworkMaskV4=ipConfigCurNetworkMaskV4, ethBackupStatusTable=ethBackupStatusTable, ethBackupDelayBack=ethBackupDelayBack, ipConfigTable=ipConfigTable, ethBackupDelayForward=ethBackupDelayForward, ethBackupStatusPortsInUse=ethBackupStatusPortsInUse, ipConfigCurDefaultGatewayV4=ipConfigCurDefaultGatewayV4, ethBackupDirection=ethBackupDirection, ciscoDSGIPv4v6=ciscoDSGIPv4v6, macInfoEntry=macInfoEntry, ethBackupMode=ethBackupMode, ethBackupStatusChangeReason=ethBackupStatusChangeReason, ethBackupTable=ethBackupTable, ipV4v6Table=ipV4v6Table, ethStatusXover=ethStatusXover, ethStatusLink=ethStatusLink, macInfoMacIndex=macInfoMacIndex, ipConfigV4V6Flag=ipConfigV4V6Flag, ethBackupEntry=ethBackupEntry, ethBackupStatusIndex=ethBackupStatusIndex, ethStatusDuplex=ethStatusDuplex, ethBackupStatusChangeDateTime=ethBackupStatusChangeDateTime, ipConfigCurIPAddressV4=ipConfigCurIPAddressV4, macInfoTable=macInfoTable, ethBackupStatusEntry=ethBackupStatusEntry, ipConfigEntry=ipConfigEntry, ipConfigName=ipConfigName, ipConfigPortMode=ipConfigPortMode, ethStatusSpeed=ethStatusSpeed, ethBackupIndex=ethBackupIndex, PYSNMP_MODULE_ID=ciscoDSGIPv4v6)
