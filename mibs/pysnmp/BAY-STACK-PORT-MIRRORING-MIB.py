#
# PySNMP MIB module BAY-STACK-PORT-MIRRORING-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/BAY-STACK-PORT-MIRRORING-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:19:24 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ValueSizeConstraint, SingleValueConstraint, ConstraintsUnion, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ValueSizeConstraint", "SingleValueConstraint", "ConstraintsUnion", "ConstraintsIntersection")
InterfaceIndex, = mibBuilder.importSymbols("IF-MIB", "InterfaceIndex")
PortList, = mibBuilder.importSymbols("Q-BRIDGE-MIB", "PortList")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
Bits, ObjectIdentity, Counter64, Integer32, MibScalar, MibTable, MibTableRow, MibTableColumn, IpAddress, MibIdentifier, Unsigned32, NotificationType, Gauge32, Counter32, TimeTicks, ModuleIdentity, iso = mibBuilder.importSymbols("SNMPv2-SMI", "Bits", "ObjectIdentity", "Counter64", "Integer32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "IpAddress", "MibIdentifier", "Unsigned32", "NotificationType", "Gauge32", "Counter32", "TimeTicks", "ModuleIdentity", "iso")
TruthValue, MacAddress, RowStatus, TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TruthValue", "MacAddress", "RowStatus", "TextualConvention", "DisplayString")
bayStackMibs, = mibBuilder.importSymbols("SYNOPTICS-ROOT-MIB", "bayStackMibs")
bayStackPortMirroringMib = ModuleIdentity((1, 3, 6, 1, 4, 1, 45, 5, 28))
bayStackPortMirroringMib.setRevisions(('2012-10-10 00:00', '2009-05-28 00:00', '2008-01-18 00:00',))
if mibBuilder.loadTexts: bayStackPortMirroringMib.setLastUpdated('201210100000Z')
if mibBuilder.loadTexts: bayStackPortMirroringMib.setOrganization('Nortel Networks')
bsPortMirroringNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 45, 5, 28, 0))
bsPortMirroringObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 45, 5, 28, 1))
bsPortMirroringCtrlTable = MibTable((1, 3, 6, 1, 4, 1, 45, 5, 28, 1, 1), )
if mibBuilder.loadTexts: bsPortMirroringCtrlTable.setStatus('current')
bsPortMirroringCtrlEntry = MibTableRow((1, 3, 6, 1, 4, 1, 45, 5, 28, 1, 1, 1), ).setIndexNames((0, "BAY-STACK-PORT-MIRRORING-MIB", "bsPortMirroringCtrlInstance"))
if mibBuilder.loadTexts: bsPortMirroringCtrlEntry.setStatus('current')
bsPortMirroringCtrlInstance = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 5, 28, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4)))
if mibBuilder.loadTexts: bsPortMirroringCtrlInstance.setStatus('current')
bsPortMirroringCtrlPortMode = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 5, 28, 1, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15))).clone(namedValues=NamedValues(("disable", 1), ("adst", 2), ("asrc", 3), ("asrcBdst", 4), ("asrcBdstOrBsrcAdst", 5), ("asrcOrAdst", 6), ("manytoOneRx", 7), ("manytoOneRxTx", 8), ("manytoOneTx", 9), ("xrx", 10), ("xrxOrXtx", 11), ("xrxOrYtx", 12), ("xrxYtx", 13), ("xrxYtxOrYrxXtx", 14), ("xtx", 15)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: bsPortMirroringCtrlPortMode.setStatus('current')
bsPortMirroringCtrlMonitorPort = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 5, 28, 1, 1, 1, 3), InterfaceIndex()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: bsPortMirroringCtrlMonitorPort.setStatus('current')
bsPortMirroringCtrlPortListX = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 5, 28, 1, 1, 1, 4), PortList().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: bsPortMirroringCtrlPortListX.setStatus('current')
bsPortMirroringCtrlPortListY = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 5, 28, 1, 1, 1, 5), PortList().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: bsPortMirroringCtrlPortListY.setStatus('current')
bsPortMirroringCtrlMacAddressA = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 5, 28, 1, 1, 1, 6), MacAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: bsPortMirroringCtrlMacAddressA.setStatus('current')
bsPortMirroringCtrlMacAddressB = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 5, 28, 1, 1, 1, 7), MacAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: bsPortMirroringCtrlMacAddressB.setStatus('current')
bsPortMirroringCtrlRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 5, 28, 1, 1, 1, 8), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: bsPortMirroringCtrlRowStatus.setStatus('current')
bsPortMirroringCtrlAllowTraffic = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 5, 28, 1, 1, 1, 9), TruthValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: bsPortMirroringCtrlAllowTraffic.setStatus('current')
bsPortMirroringCtrlRspanVlan = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 5, 28, 1, 1, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(2, 4094), ))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: bsPortMirroringCtrlRspanVlan.setStatus('current')
bsPortMirroringRspanTable = MibTable((1, 3, 6, 1, 4, 1, 45, 5, 28, 1, 2), )
if mibBuilder.loadTexts: bsPortMirroringRspanTable.setStatus('current')
bsPortMirroringRspanEntry = MibTableRow((1, 3, 6, 1, 4, 1, 45, 5, 28, 1, 2, 1), ).setIndexNames((0, "BAY-STACK-PORT-MIRRORING-MIB", "bsPortMirroringRspanInstance"))
if mibBuilder.loadTexts: bsPortMirroringRspanEntry.setStatus('current')
bsPortMirroringRspanInstance = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 5, 28, 1, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4)))
if mibBuilder.loadTexts: bsPortMirroringRspanInstance.setStatus('current')
bsPortMirroringRspanMtp = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 5, 28, 1, 2, 1, 2), InterfaceIndex()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: bsPortMirroringRspanMtp.setStatus('current')
bsPortMirroringRspanVlan = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 5, 28, 1, 2, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(2, 4094))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: bsPortMirroringRspanVlan.setStatus('current')
bsPortMirroringRspanRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 5, 28, 1, 2, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: bsPortMirroringRspanRowStatus.setStatus('current')
mibBuilder.exportSymbols("BAY-STACK-PORT-MIRRORING-MIB", PYSNMP_MODULE_ID=bayStackPortMirroringMib, bsPortMirroringCtrlMacAddressB=bsPortMirroringCtrlMacAddressB, bsPortMirroringCtrlRspanVlan=bsPortMirroringCtrlRspanVlan, bsPortMirroringRspanTable=bsPortMirroringRspanTable, bsPortMirroringNotifications=bsPortMirroringNotifications, bsPortMirroringCtrlEntry=bsPortMirroringCtrlEntry, bsPortMirroringRspanEntry=bsPortMirroringRspanEntry, bsPortMirroringObjects=bsPortMirroringObjects, bsPortMirroringRspanInstance=bsPortMirroringRspanInstance, bsPortMirroringCtrlRowStatus=bsPortMirroringCtrlRowStatus, bsPortMirroringCtrlMonitorPort=bsPortMirroringCtrlMonitorPort, bsPortMirroringRspanRowStatus=bsPortMirroringRspanRowStatus, bsPortMirroringCtrlPortMode=bsPortMirroringCtrlPortMode, bsPortMirroringRspanMtp=bsPortMirroringRspanMtp, bsPortMirroringCtrlMacAddressA=bsPortMirroringCtrlMacAddressA, bsPortMirroringCtrlAllowTraffic=bsPortMirroringCtrlAllowTraffic, bsPortMirroringCtrlPortListX=bsPortMirroringCtrlPortListX, bsPortMirroringCtrlInstance=bsPortMirroringCtrlInstance, bsPortMirroringRspanVlan=bsPortMirroringRspanVlan, bayStackPortMirroringMib=bayStackPortMirroringMib, bsPortMirroringCtrlPortListY=bsPortMirroringCtrlPortListY, bsPortMirroringCtrlTable=bsPortMirroringCtrlTable)
