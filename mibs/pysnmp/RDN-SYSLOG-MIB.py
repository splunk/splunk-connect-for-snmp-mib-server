#
# PySNMP MIB module RDN-SYSLOG-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/RDN-SYSLOG-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 20:46:36 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, SingleValueConstraint, ValueSizeConstraint, ValueRangeConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "SingleValueConstraint", "ValueSizeConstraint", "ValueRangeConstraint", "ConstraintsUnion")
riverdelta, = mibBuilder.importSymbols("RDN-MIB", "riverdelta")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
Integer32, NotificationType, Bits, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter64, Unsigned32, ModuleIdentity, ObjectIdentity, Counter32, TimeTicks, Gauge32, MibIdentifier, iso, IpAddress = mibBuilder.importSymbols("SNMPv2-SMI", "Integer32", "NotificationType", "Bits", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter64", "Unsigned32", "ModuleIdentity", "ObjectIdentity", "Counter32", "TimeTicks", "Gauge32", "MibIdentifier", "iso", "IpAddress")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
rdnSyslog = ModuleIdentity((1, 3, 6, 1, 4, 1, 4981, 3))
rdnSyslog.setRevisions(('2008-08-08 00:00', '2004-01-23 00:00', '2003-11-05 00:00', '2003-01-30 00:00', '2000-06-14 00:00', '2000-06-08 00:00', '2000-05-23 00:00', '2000-05-17 00:00',))
if mibBuilder.loadTexts: rdnSyslog.setLastUpdated('200808080000Z')
if mibBuilder.loadTexts: rdnSyslog.setOrganization('Motorola')
rdnSyslogSize = MibScalar((1, 3, 6, 1, 4, 1, 4981, 3, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rdnSyslogSize.setStatus('current')
rdnSyslogMaxSize = MibScalar((1, 3, 6, 1, 4, 1, 4981, 3, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(4096, 5242880)).clone(4096)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rdnSyslogMaxSize.setStatus('current')
rdnSyslogServerEnable = MibScalar((1, 3, 6, 1, 4, 1, 4981, 3, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rdnSyslogServerEnable.setStatus('current')
rdnSyslogServerTable = MibTable((1, 3, 6, 1, 4, 1, 4981, 3, 4), )
if mibBuilder.loadTexts: rdnSyslogServerTable.setStatus('current')
rdnSyslogServerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4981, 3, 4, 1), ).setIndexNames((0, "RDN-SYSLOG-MIB", "rdnSyslogServerIndex"))
if mibBuilder.loadTexts: rdnSyslogServerEntry.setStatus('current')
rdnSyslogServerIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4981, 3, 4, 1, 1), Integer32())
if mibBuilder.loadTexts: rdnSyslogServerIndex.setStatus('current')
rdnSyslogServerAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 4981, 3, 4, 1, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rdnSyslogServerAddress.setStatus('current')
rdnSyslogServerStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 4981, 3, 4, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rdnSyslogServerStatus.setStatus('current')
rdnSyslogSeverity = MibScalar((1, 3, 6, 1, 4, 1, 4981, 3, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("disable", 0), ("informational", 1), ("notifications", 2), ("warnings", 3), ("errors", 4), ("critical", 5), ("alerts", 6), ("emergencies", 7)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rdnSyslogSeverity.setStatus('current')
rdnSyslogConsoleSeverity = MibScalar((1, 3, 6, 1, 4, 1, 4981, 3, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("disable", 0), ("informational", 1), ("notifications", 2), ("warnings", 3), ("errors", 4), ("critical", 5), ("alerts", 6), ("emergencies", 7)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rdnSyslogConsoleSeverity.setStatus('current')
rdnSyslogClear = MibScalar((1, 3, 6, 1, 4, 1, 4981, 3, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("true", 1), ("false", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rdnSyslogClear.setStatus('current')
rdnSyslogTrapSeverity = MibScalar((1, 3, 6, 1, 4, 1, 4981, 3, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("disable", 0), ("informational", 1), ("notifications", 2), ("warnings", 3), ("errors", 4), ("critical", 5), ("alerts", 6), ("emergencies", 7)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rdnSyslogTrapSeverity.setStatus('current')
rdnSyslogMessageTable = MibTable((1, 3, 6, 1, 4, 1, 4981, 3, 9), )
if mibBuilder.loadTexts: rdnSyslogMessageTable.setStatus('current')
rdnSyslogMessageTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4981, 3, 9, 1), ).setIndexNames((0, "RDN-SYSLOG-MIB", "rdnSyslogMessageIndex"))
if mibBuilder.loadTexts: rdnSyslogMessageTableEntry.setStatus('current')
rdnSyslogMessageIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4981, 3, 9, 1, 1), Integer32())
if mibBuilder.loadTexts: rdnSyslogMessageIndex.setStatus('current')
rdnSyslogMessageString = MibTableColumn((1, 3, 6, 1, 4, 1, 4981, 3, 9, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 512))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rdnSyslogMessageString.setStatus('current')
rdnSyslogRateLimitAutoRestart = MibScalar((1, 3, 6, 1, 4, 1, 4981, 3, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rdnSyslogRateLimitAutoRestart.setStatus('obsolete')
rdnSyslogMIB = MibIdentifier((1, 3, 6, 1, 4, 1, 4981, 3, 0))
rdnSyslogTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 4981, 3, 0, 0))
rdnSyslogSeverityTrap = NotificationType((1, 3, 6, 1, 4, 1, 4981, 3, 0, 0, 1)).setObjects(("RDN-SYSLOG-MIB", "rdnSyslogTrapSeverity"))
if mibBuilder.loadTexts: rdnSyslogSeverityTrap.setStatus('current')
mibBuilder.exportSymbols("RDN-SYSLOG-MIB", rdnSyslogServerEnable=rdnSyslogServerEnable, rdnSyslogServerEntry=rdnSyslogServerEntry, rdnSyslogServerAddress=rdnSyslogServerAddress, rdnSyslogSeverityTrap=rdnSyslogSeverityTrap, rdnSyslogTrapSeverity=rdnSyslogTrapSeverity, rdnSyslogMaxSize=rdnSyslogMaxSize, rdnSyslogServerStatus=rdnSyslogServerStatus, rdnSyslogMessageTable=rdnSyslogMessageTable, rdnSyslogTraps=rdnSyslogTraps, rdnSyslogClear=rdnSyslogClear, rdnSyslogSize=rdnSyslogSize, rdnSyslogMessageString=rdnSyslogMessageString, rdnSyslogServerIndex=rdnSyslogServerIndex, rdnSyslogMessageTableEntry=rdnSyslogMessageTableEntry, PYSNMP_MODULE_ID=rdnSyslog, rdnSyslog=rdnSyslog, rdnSyslogMessageIndex=rdnSyslogMessageIndex, rdnSyslogMIB=rdnSyslogMIB, rdnSyslogSeverity=rdnSyslogSeverity, rdnSyslogConsoleSeverity=rdnSyslogConsoleSeverity, rdnSyslogRateLimitAutoRestart=rdnSyslogRateLimitAutoRestart, rdnSyslogServerTable=rdnSyslogServerTable)
