#
# PySNMP MIB module ZHNIPFORWARDING (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/ZHNIPFORWARDING
# Produced by pysmi-0.3.4 at Mon Apr 29 21:40:16 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ConstraintsUnion, SingleValueConstraint, ValueSizeConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ConstraintsUnion", "SingleValueConstraint", "ValueSizeConstraint", "ConstraintsIntersection")
ObjectGroup, NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "NotificationGroup", "ModuleCompliance")
TimeTicks, enterprises, Unsigned32, Integer32, Counter32, Counter64, NotificationType, MibIdentifier, IpAddress, iso, ModuleIdentity, Gauge32, ObjectIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, Bits = mibBuilder.importSymbols("SNMPv2-SMI", "TimeTicks", "enterprises", "Unsigned32", "Integer32", "Counter32", "Counter64", "NotificationType", "MibIdentifier", "IpAddress", "iso", "ModuleIdentity", "Gauge32", "ObjectIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Bits")
RowStatus, MacAddress, TextualConvention, TruthValue, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "RowStatus", "MacAddress", "TextualConvention", "TruthValue", "DisplayString")
zhoneWtn, = mibBuilder.importSymbols("Zhone", "zhoneWtn")
ZhoneRowStatus, = mibBuilder.importSymbols("Zhone-TC", "ZhoneRowStatus")
zhnIpForwarding = ModuleIdentity((1, 3, 6, 1, 4, 1, 5504, 2, 5, 44))
zhnIpForwarding.setRevisions(('2012-01-27 12:00', '2012-04-20 12:00',))
if mibBuilder.loadTexts: zhnIpForwarding.setLastUpdated('201204201200Z')
if mibBuilder.loadTexts: zhnIpForwarding.setOrganization('Zhone Technologies, Inc.')
zhnIpForwardingObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 5504, 2, 5, 44, 1))
ipForwardingTable = MibTable((1, 3, 6, 1, 4, 1, 5504, 2, 5, 44, 1, 1), )
if mibBuilder.loadTexts: ipForwardingTable.setStatus('current')
ipForwardingEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5504, 2, 5, 44, 1, 1, 1), ).setIndexNames((0, "ZHNIPFORWARDING", "ipForwardingIndex"))
if mibBuilder.loadTexts: ipForwardingEntry.setStatus('current')
ipForwardingIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 2, 5, 44, 1, 1, 1, 1), Unsigned32())
if mibBuilder.loadTexts: ipForwardingIndex.setStatus('current')
ipForwardingIPVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 2, 5, 44, 1, 1, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipForwardingIPVersion.setStatus('current')
ipForwardingDestIPAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 2, 5, 44, 1, 1, 1, 3), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipForwardingDestIPAddress.setStatus('current')
ipForwardingDestSubnetMask = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 2, 5, 44, 1, 1, 1, 4), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipForwardingDestSubnetMask.setStatus('current')
ipForwardingInterface = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 2, 5, 44, 1, 1, 1, 5), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipForwardingInterface.setStatus('current')
ipForwardingGatewayIPAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 2, 5, 44, 1, 1, 1, 6), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipForwardingGatewayIPAddress.setStatus('current')
ipForwardingForwardingMetric = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 2, 5, 44, 1, 1, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipForwardingForwardingMetric.setStatus('current')
ipForwardingTableRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 2, 5, 44, 1, 1, 1, 8), ZhoneRowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipForwardingTableRowStatus.setStatus('current')
zhnIpForwardingConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 5504, 2, 5, 44, 2))
zhnIpForwardingGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 5504, 2, 5, 44, 2, 1))
zhnIpForwardingCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 5504, 2, 5, 44, 2, 2))
zhnIpForwardingCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 5504, 2, 5, 44, 2, 2, 1)).setObjects(("ZHNIPFORWARDING", "zhnIpForwardingGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    zhnIpForwardingCompliance = zhnIpForwardingCompliance.setStatus('current')
zhnIpForwardingGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 5504, 2, 5, 44, 2, 1, 1)).setObjects(("ZHNIPFORWARDING", "ipForwardingIPVersion"), ("ZHNIPFORWARDING", "ipForwardingDestIPAddress"), ("ZHNIPFORWARDING", "ipForwardingDestSubnetMask"), ("ZHNIPFORWARDING", "ipForwardingInterface"), ("ZHNIPFORWARDING", "ipForwardingGatewayIPAddress"), ("ZHNIPFORWARDING", "ipForwardingForwardingMetric"), ("ZHNIPFORWARDING", "ipForwardingTableRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    zhnIpForwardingGroup = zhnIpForwardingGroup.setStatus('current')
mibBuilder.exportSymbols("ZHNIPFORWARDING", ipForwardingDestIPAddress=ipForwardingDestIPAddress, PYSNMP_MODULE_ID=zhnIpForwarding, zhnIpForwardingObjects=zhnIpForwardingObjects, ipForwardingTableRowStatus=ipForwardingTableRowStatus, ipForwardingTable=ipForwardingTable, ipForwardingIPVersion=ipForwardingIPVersion, zhnIpForwardingGroup=zhnIpForwardingGroup, ipForwardingIndex=ipForwardingIndex, zhnIpForwardingConformance=zhnIpForwardingConformance, zhnIpForwarding=zhnIpForwarding, ipForwardingEntry=ipForwardingEntry, ipForwardingDestSubnetMask=ipForwardingDestSubnetMask, ipForwardingInterface=ipForwardingInterface, zhnIpForwardingGroups=zhnIpForwardingGroups, zhnIpForwardingCompliance=zhnIpForwardingCompliance, ipForwardingGatewayIPAddress=ipForwardingGatewayIPAddress, zhnIpForwardingCompliances=zhnIpForwardingCompliances, ipForwardingForwardingMetric=ipForwardingForwardingMetric)
