#
# PySNMP MIB module PW-TDM-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/PW-TDM-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 20:34:16 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ConstraintsUnion, ValueRangeConstraint, ConstraintsIntersection, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ConstraintsUnion", "ValueRangeConstraint", "ConstraintsIntersection", "ValueSizeConstraint")
InterfaceIndexOrZero, = mibBuilder.importSymbols("IF-MIB", "InterfaceIndexOrZero")
pwIndex, = mibBuilder.importSymbols("PW-STD-MIB", "pwIndex")
PwCfgIndexOrzero, = mibBuilder.importSymbols("PW-TC-STD-MIB", "PwCfgIndexOrzero")
PerfCurrentCount, PerfIntervalCount = mibBuilder.importSymbols("PerfHist-TC-MIB", "PerfCurrentCount", "PerfIntervalCount")
SnmpAdminString, = mibBuilder.importSymbols("SNMP-FRAMEWORK-MIB", "SnmpAdminString")
ObjectGroup, NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "NotificationGroup", "ModuleCompliance")
Counter64, Unsigned32, Integer32, IpAddress, NotificationType, mib_2, TimeTicks, Bits, MibIdentifier, MibScalar, MibTable, MibTableRow, MibTableColumn, ModuleIdentity, Gauge32, Counter32, ObjectIdentity, iso = mibBuilder.importSymbols("SNMPv2-SMI", "Counter64", "Unsigned32", "Integer32", "IpAddress", "NotificationType", "mib-2", "TimeTicks", "Bits", "MibIdentifier", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ModuleIdentity", "Gauge32", "Counter32", "ObjectIdentity", "iso")
RowStatus, StorageType, TimeStamp, TruthValue, TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "RowStatus", "StorageType", "TimeStamp", "TruthValue", "TextualConvention", "DisplayString")
pwTDMMIB = ModuleIdentity((1, 3, 6, 1, 2, 1, 186))
pwTDMMIB.setRevisions(('2009-06-15 00:00',))
if mibBuilder.loadTexts: pwTDMMIB.setLastUpdated('200906150000Z')
if mibBuilder.loadTexts: pwTDMMIB.setOrganization('Pseudo-Wire Emulation Edge-to-Edge (PWE3) Working Group')
class PwTDMCfgIndex(TextualConvention, Unsigned32):
    status = 'current'
    subtypeSpec = Unsigned32.subtypeSpec + ValueRangeConstraint(1, 4294967295)

pwTDMNotifications = MibIdentifier((1, 3, 6, 1, 2, 1, 186, 0))
pwTDMObjects = MibIdentifier((1, 3, 6, 1, 2, 1, 186, 1))
pwTDMConformance = MibIdentifier((1, 3, 6, 1, 2, 1, 186, 2))
pwTDMTable = MibTable((1, 3, 6, 1, 2, 1, 186, 1, 1), )
if mibBuilder.loadTexts: pwTDMTable.setStatus('current')
pwTDMEntry = MibTableRow((1, 3, 6, 1, 2, 1, 186, 1, 1, 1), ).setIndexNames((0, "PW-STD-MIB", "pwIndex"))
if mibBuilder.loadTexts: pwTDMEntry.setStatus('current')
pwTDMRate = MibTableColumn((1, 3, 6, 1, 2, 1, 186, 1, 1, 1, 1), Integer32().clone(32)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pwTDMRate.setStatus('current')
pwTDMIfIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 186, 1, 1, 1, 2), InterfaceIndexOrZero()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pwTDMIfIndex.setStatus('current')
pwGenTDMCfgIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 186, 1, 1, 1, 3), PwCfgIndexOrzero()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pwGenTDMCfgIndex.setStatus('current')
pwRelTDMCfgIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 186, 1, 1, 1, 4), PwCfgIndexOrzero()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pwRelTDMCfgIndex.setStatus('current')
pwTDMConfigError = MibTableColumn((1, 3, 6, 1, 2, 1, 186, 1, 1, 1, 5), Bits().clone(namedValues=NamedValues(("notApplicable", 0), ("tdmTypeIncompatible", 1), ("peerRtpIncompatible", 2), ("peerPayloadSizeIncompatible", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pwTDMConfigError.setStatus('current')
pwTDMTimeElapsed = MibTableColumn((1, 3, 6, 1, 2, 1, 186, 1, 1, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 900))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pwTDMTimeElapsed.setStatus('current')
pwTDMValidIntervals = MibTableColumn((1, 3, 6, 1, 2, 1, 186, 1, 1, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 96))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pwTDMValidIntervals.setStatus('current')
pwTDMValidDayIntervals = MibTableColumn((1, 3, 6, 1, 2, 1, 186, 1, 1, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 30))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pwTDMValidDayIntervals.setStatus('current')
pwTDMLastEsTimeStamp = MibTableColumn((1, 3, 6, 1, 2, 1, 186, 1, 1, 1, 11), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pwTDMLastEsTimeStamp.setStatus('current')
pwTDMCfgIndexNext = MibScalar((1, 3, 6, 1, 2, 1, 186, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pwTDMCfgIndexNext.setStatus('current')
pwTDMCfgTable = MibTable((1, 3, 6, 1, 2, 1, 186, 1, 3), )
if mibBuilder.loadTexts: pwTDMCfgTable.setStatus('current')
pwTDMCfgEntry = MibTableRow((1, 3, 6, 1, 2, 1, 186, 1, 3, 1), ).setIndexNames((0, "PW-TDM-MIB", "pwTDMCfgIndex"))
if mibBuilder.loadTexts: pwTDMCfgEntry.setStatus('current')
pwTDMCfgIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 186, 1, 3, 1, 1), PwTDMCfgIndex())
if mibBuilder.loadTexts: pwTDMCfgIndex.setStatus('current')
pwTDMCfgRowStatus = MibTableColumn((1, 3, 6, 1, 2, 1, 186, 1, 3, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: pwTDMCfgRowStatus.setStatus('current')
pwTDMCfgPayloadSize = MibTableColumn((1, 3, 6, 1, 2, 1, 186, 1, 3, 1, 4), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: pwTDMCfgPayloadSize.setStatus('current')
pwTDMCfgPktReorder = MibTableColumn((1, 3, 6, 1, 2, 1, 186, 1, 3, 1, 5), TruthValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: pwTDMCfgPktReorder.setStatus('current')
pwTDMCfgRtpHdrUsed = MibTableColumn((1, 3, 6, 1, 2, 1, 186, 1, 3, 1, 6), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: pwTDMCfgRtpHdrUsed.setStatus('current')
pwTDMCfgJtrBfrDepth = MibTableColumn((1, 3, 6, 1, 2, 1, 186, 1, 3, 1, 7), Unsigned32().clone(3000)).setUnits('microsecond').setMaxAccess("readcreate")
if mibBuilder.loadTexts: pwTDMCfgJtrBfrDepth.setStatus('current')
pwTDMCfgPayloadSuppression = MibTableColumn((1, 3, 6, 1, 2, 1, 186, 1, 3, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: pwTDMCfgPayloadSuppression.setStatus('current')
pwTDMCfgConsecPktsInSynch = MibTableColumn((1, 3, 6, 1, 2, 1, 186, 1, 3, 1, 9), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 10)).clone(2)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: pwTDMCfgConsecPktsInSynch.setStatus('current')
pwTDMCfgConsecMissPktsOutSynch = MibTableColumn((1, 3, 6, 1, 2, 1, 186, 1, 3, 1, 10), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 15)).clone(10)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: pwTDMCfgConsecMissPktsOutSynch.setStatus('current')
pwTDMCfgSetUp2SynchTimeOut = MibTableColumn((1, 3, 6, 1, 2, 1, 186, 1, 3, 1, 11), Unsigned32().clone(5000)).setUnits('millisecond').setMaxAccess("readcreate")
if mibBuilder.loadTexts: pwTDMCfgSetUp2SynchTimeOut.setStatus('current')
pwTDMCfgPktReplacePolicy = MibTableColumn((1, 3, 6, 1, 2, 1, 186, 1, 3, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("allOnes", 1), ("implementationSpecific", 2), ("filler", 3))).clone('allOnes')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: pwTDMCfgPktReplacePolicy.setStatus('current')
pwTDMCfgAvePktLossTimeWindow = MibTableColumn((1, 3, 6, 1, 2, 1, 186, 1, 3, 1, 13), Integer32()).setUnits('millisecond').setMaxAccess("readcreate")
if mibBuilder.loadTexts: pwTDMCfgAvePktLossTimeWindow.setStatus('current')
pwTDMCfgExcessivePktLossThreshold = MibTableColumn((1, 3, 6, 1, 2, 1, 186, 1, 3, 1, 14), Unsigned32()).setUnits('Percent').setMaxAccess("readcreate")
if mibBuilder.loadTexts: pwTDMCfgExcessivePktLossThreshold.setStatus('current')
pwTDMCfgAlarmThreshold = MibTableColumn((1, 3, 6, 1, 2, 1, 186, 1, 3, 1, 15), Unsigned32().clone(2500)).setUnits('milisec').setMaxAccess("readcreate")
if mibBuilder.loadTexts: pwTDMCfgAlarmThreshold.setStatus('current')
pwTDMCfgClearAlarmThreshold = MibTableColumn((1, 3, 6, 1, 2, 1, 186, 1, 3, 1, 16), Unsigned32().clone(10000)).setUnits('milisec').setMaxAccess("readcreate")
if mibBuilder.loadTexts: pwTDMCfgClearAlarmThreshold.setStatus('current')
pwTDMCfgMissingPktsToSes = MibTableColumn((1, 3, 6, 1, 2, 1, 186, 1, 3, 1, 17), Unsigned32().clone(30)).setUnits('Percent').setMaxAccess("readcreate")
if mibBuilder.loadTexts: pwTDMCfgMissingPktsToSes.setStatus('current')
pwTDMCfgTimestampMode = MibTableColumn((1, 3, 6, 1, 2, 1, 186, 1, 3, 1, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("notApplicable", 1), ("absolute", 2), ("differential", 3)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: pwTDMCfgTimestampMode.setStatus('current')
pwTDMCfgStorageType = MibTableColumn((1, 3, 6, 1, 2, 1, 186, 1, 3, 1, 19), StorageType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: pwTDMCfgStorageType.setStatus('current')
pwTDMCfgPktFiller = MibTableColumn((1, 3, 6, 1, 2, 1, 186, 1, 3, 1, 20), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255)).clone(255)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: pwTDMCfgPktFiller.setStatus('current')
pwTDMCfgName = MibTableColumn((1, 3, 6, 1, 2, 1, 186, 1, 3, 1, 21), SnmpAdminString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: pwTDMCfgName.setStatus('current')
pwTDMPerfCurrentTable = MibTable((1, 3, 6, 1, 2, 1, 186, 1, 5), )
if mibBuilder.loadTexts: pwTDMPerfCurrentTable.setStatus('current')
pwTDMPerfCurrentEntry = MibTableRow((1, 3, 6, 1, 2, 1, 186, 1, 5, 1), ).setIndexNames((0, "PW-STD-MIB", "pwIndex"))
if mibBuilder.loadTexts: pwTDMPerfCurrentEntry.setStatus('current')
pwTDMPerfCurrentMissingPkts = MibTableColumn((1, 3, 6, 1, 2, 1, 186, 1, 5, 1, 1), PerfCurrentCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pwTDMPerfCurrentMissingPkts.setStatus('current')
pwTDMPerfCurrentPktsReOrder = MibTableColumn((1, 3, 6, 1, 2, 1, 186, 1, 5, 1, 2), PerfCurrentCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pwTDMPerfCurrentPktsReOrder.setStatus('current')
pwTDMPerfCurrentJtrBfrUnderruns = MibTableColumn((1, 3, 6, 1, 2, 1, 186, 1, 5, 1, 3), PerfCurrentCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pwTDMPerfCurrentJtrBfrUnderruns.setStatus('current')
pwTDMPerfCurrentMisOrderDropped = MibTableColumn((1, 3, 6, 1, 2, 1, 186, 1, 5, 1, 4), PerfCurrentCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pwTDMPerfCurrentMisOrderDropped.setStatus('current')
pwTDMPerfCurrentMalformedPkt = MibTableColumn((1, 3, 6, 1, 2, 1, 186, 1, 5, 1, 5), PerfCurrentCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pwTDMPerfCurrentMalformedPkt.setStatus('current')
pwTDMPerfCurrentESs = MibTableColumn((1, 3, 6, 1, 2, 1, 186, 1, 5, 1, 6), PerfCurrentCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pwTDMPerfCurrentESs.setStatus('current')
pwTDMPerfCurrentSESs = MibTableColumn((1, 3, 6, 1, 2, 1, 186, 1, 5, 1, 7), PerfCurrentCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pwTDMPerfCurrentSESs.setStatus('current')
pwTDMPerfCurrentUASs = MibTableColumn((1, 3, 6, 1, 2, 1, 186, 1, 5, 1, 8), PerfCurrentCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pwTDMPerfCurrentUASs.setStatus('current')
pwTDMPerfCurrentFC = MibTableColumn((1, 3, 6, 1, 2, 1, 186, 1, 5, 1, 9), PerfCurrentCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pwTDMPerfCurrentFC.setStatus('current')
pwTDMPerfIntervalTable = MibTable((1, 3, 6, 1, 2, 1, 186, 1, 6), )
if mibBuilder.loadTexts: pwTDMPerfIntervalTable.setStatus('current')
pwTDMPerfIntervalEntry = MibTableRow((1, 3, 6, 1, 2, 1, 186, 1, 6, 1), ).setIndexNames((0, "PW-STD-MIB", "pwIndex"), (0, "PW-TDM-MIB", "pwTDMPerfIntervalNumber"))
if mibBuilder.loadTexts: pwTDMPerfIntervalEntry.setStatus('current')
pwTDMPerfIntervalNumber = MibTableColumn((1, 3, 6, 1, 2, 1, 186, 1, 6, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 96)))
if mibBuilder.loadTexts: pwTDMPerfIntervalNumber.setStatus('current')
pwTDMPerfIntervalValidData = MibTableColumn((1, 3, 6, 1, 2, 1, 186, 1, 6, 1, 2), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pwTDMPerfIntervalValidData.setStatus('current')
pwTDMPerfIntervalDuration = MibTableColumn((1, 3, 6, 1, 2, 1, 186, 1, 6, 1, 3), Unsigned32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: pwTDMPerfIntervalDuration.setStatus('current')
pwTDMPerfIntervalMissingPkts = MibTableColumn((1, 3, 6, 1, 2, 1, 186, 1, 6, 1, 4), PerfIntervalCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pwTDMPerfIntervalMissingPkts.setStatus('current')
pwTDMPerfIntervalPktsReOrder = MibTableColumn((1, 3, 6, 1, 2, 1, 186, 1, 6, 1, 5), PerfIntervalCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pwTDMPerfIntervalPktsReOrder.setStatus('current')
pwTDMPerfIntervalJtrBfrUnderruns = MibTableColumn((1, 3, 6, 1, 2, 1, 186, 1, 6, 1, 6), PerfIntervalCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pwTDMPerfIntervalJtrBfrUnderruns.setStatus('current')
pwTDMPerfIntervalMisOrderDropped = MibTableColumn((1, 3, 6, 1, 2, 1, 186, 1, 6, 1, 7), PerfIntervalCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pwTDMPerfIntervalMisOrderDropped.setStatus('current')
pwTDMPerfIntervalMalformedPkt = MibTableColumn((1, 3, 6, 1, 2, 1, 186, 1, 6, 1, 8), PerfIntervalCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pwTDMPerfIntervalMalformedPkt.setStatus('current')
pwTDMPerfIntervalESs = MibTableColumn((1, 3, 6, 1, 2, 1, 186, 1, 6, 1, 9), PerfIntervalCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pwTDMPerfIntervalESs.setStatus('current')
pwTDMPerfIntervalSESs = MibTableColumn((1, 3, 6, 1, 2, 1, 186, 1, 6, 1, 10), PerfIntervalCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pwTDMPerfIntervalSESs.setStatus('current')
pwTDMPerfIntervalUASs = MibTableColumn((1, 3, 6, 1, 2, 1, 186, 1, 6, 1, 11), PerfIntervalCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pwTDMPerfIntervalUASs.setStatus('current')
pwTDMPerfIntervalFC = MibTableColumn((1, 3, 6, 1, 2, 1, 186, 1, 6, 1, 12), PerfIntervalCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pwTDMPerfIntervalFC.setStatus('current')
pwTDMPerf1DayIntervalTable = MibTable((1, 3, 6, 1, 2, 1, 186, 1, 7), )
if mibBuilder.loadTexts: pwTDMPerf1DayIntervalTable.setStatus('current')
pwTDMPerf1DayIntervalEntry = MibTableRow((1, 3, 6, 1, 2, 1, 186, 1, 7, 1), ).setIndexNames((0, "PW-STD-MIB", "pwIndex"), (0, "PW-TDM-MIB", "pwTDMPerf1DayIntervalNumber"))
if mibBuilder.loadTexts: pwTDMPerf1DayIntervalEntry.setStatus('current')
pwTDMPerf1DayIntervalNumber = MibTableColumn((1, 3, 6, 1, 2, 1, 186, 1, 7, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 30)))
if mibBuilder.loadTexts: pwTDMPerf1DayIntervalNumber.setStatus('current')
pwTDMPerf1DayIntervalValidData = MibTableColumn((1, 3, 6, 1, 2, 1, 186, 1, 7, 1, 2), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pwTDMPerf1DayIntervalValidData.setStatus('current')
pwTDMPerf1DayIntervalDuration = MibTableColumn((1, 3, 6, 1, 2, 1, 186, 1, 7, 1, 3), Unsigned32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: pwTDMPerf1DayIntervalDuration.setStatus('current')
pwTDMPerf1DayIntervalMissingPkts = MibTableColumn((1, 3, 6, 1, 2, 1, 186, 1, 7, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pwTDMPerf1DayIntervalMissingPkts.setStatus('current')
pwTDMPerf1DayIntervalPktsReOrder = MibTableColumn((1, 3, 6, 1, 2, 1, 186, 1, 7, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pwTDMPerf1DayIntervalPktsReOrder.setStatus('current')
pwTDMPerf1DayIntervalJtrBfrUnderruns = MibTableColumn((1, 3, 6, 1, 2, 1, 186, 1, 7, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pwTDMPerf1DayIntervalJtrBfrUnderruns.setStatus('current')
pwTDMPerf1DayIntervalMisOrderDropped = MibTableColumn((1, 3, 6, 1, 2, 1, 186, 1, 7, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pwTDMPerf1DayIntervalMisOrderDropped.setStatus('current')
pwTDMPerf1DayIntervalMalformedPkt = MibTableColumn((1, 3, 6, 1, 2, 1, 186, 1, 7, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pwTDMPerf1DayIntervalMalformedPkt.setStatus('current')
pwTDMPerf1DayIntervalESs = MibTableColumn((1, 3, 6, 1, 2, 1, 186, 1, 7, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pwTDMPerf1DayIntervalESs.setStatus('current')
pwTDMPerf1DayIntervalSESs = MibTableColumn((1, 3, 6, 1, 2, 1, 186, 1, 7, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pwTDMPerf1DayIntervalSESs.setStatus('current')
pwTDMPerf1DayIntervalUASs = MibTableColumn((1, 3, 6, 1, 2, 1, 186, 1, 7, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pwTDMPerf1DayIntervalUASs.setStatus('current')
pwTDMPerf1DayIntervalFC = MibTableColumn((1, 3, 6, 1, 2, 1, 186, 1, 7, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pwTDMPerf1DayIntervalFC.setStatus('current')
pwTDMCompliances = MibIdentifier((1, 3, 6, 1, 2, 1, 186, 2, 1))
pwTDMGroups = MibIdentifier((1, 3, 6, 1, 2, 1, 186, 2, 2))
pwTDMModuleCompliance = ModuleCompliance((1, 3, 6, 1, 2, 1, 186, 2, 1, 1)).setObjects(("PW-TDM-MIB", "pwTDMGroup"), ("PW-TDM-MIB", "pwTDMPerfCurrentGroup"), ("PW-TDM-MIB", "pwTDMPerfIntervalGroup"), ("PW-TDM-MIB", "pwTDMPerf1DayIntervalGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    pwTDMModuleCompliance = pwTDMModuleCompliance.setStatus('current')
pwTDMGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 186, 2, 2, 1)).setObjects(("PW-TDM-MIB", "pwTDMRate"), ("PW-TDM-MIB", "pwTDMIfIndex"), ("PW-TDM-MIB", "pwGenTDMCfgIndex"), ("PW-TDM-MIB", "pwRelTDMCfgIndex"), ("PW-TDM-MIB", "pwTDMConfigError"), ("PW-TDM-MIB", "pwTDMTimeElapsed"), ("PW-TDM-MIB", "pwTDMValidIntervals"), ("PW-TDM-MIB", "pwTDMValidDayIntervals"), ("PW-TDM-MIB", "pwTDMLastEsTimeStamp"), ("PW-TDM-MIB", "pwTDMCfgIndexNext"), ("PW-TDM-MIB", "pwTDMCfgRowStatus"), ("PW-TDM-MIB", "pwTDMCfgPayloadSize"), ("PW-TDM-MIB", "pwTDMCfgPktReorder"), ("PW-TDM-MIB", "pwTDMCfgRtpHdrUsed"), ("PW-TDM-MIB", "pwTDMCfgJtrBfrDepth"), ("PW-TDM-MIB", "pwTDMCfgPayloadSuppression"), ("PW-TDM-MIB", "pwTDMCfgConsecPktsInSynch"), ("PW-TDM-MIB", "pwTDMCfgConsecMissPktsOutSynch"), ("PW-TDM-MIB", "pwTDMCfgSetUp2SynchTimeOut"), ("PW-TDM-MIB", "pwTDMCfgPktReplacePolicy"), ("PW-TDM-MIB", "pwTDMCfgAvePktLossTimeWindow"), ("PW-TDM-MIB", "pwTDMCfgExcessivePktLossThreshold"), ("PW-TDM-MIB", "pwTDMCfgAlarmThreshold"), ("PW-TDM-MIB", "pwTDMCfgClearAlarmThreshold"), ("PW-TDM-MIB", "pwTDMCfgMissingPktsToSes"), ("PW-TDM-MIB", "pwTDMCfgTimestampMode"), ("PW-TDM-MIB", "pwTDMCfgStorageType"), ("PW-TDM-MIB", "pwTDMCfgPktFiller"), ("PW-TDM-MIB", "pwTDMCfgName"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    pwTDMGroup = pwTDMGroup.setStatus('current')
pwTDMPerfCurrentGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 186, 2, 2, 2)).setObjects(("PW-TDM-MIB", "pwTDMPerfCurrentMissingPkts"), ("PW-TDM-MIB", "pwTDMPerfCurrentPktsReOrder"), ("PW-TDM-MIB", "pwTDMPerfCurrentJtrBfrUnderruns"), ("PW-TDM-MIB", "pwTDMPerfCurrentMisOrderDropped"), ("PW-TDM-MIB", "pwTDMPerfCurrentMalformedPkt"), ("PW-TDM-MIB", "pwTDMPerfCurrentESs"), ("PW-TDM-MIB", "pwTDMPerfCurrentSESs"), ("PW-TDM-MIB", "pwTDMPerfCurrentUASs"), ("PW-TDM-MIB", "pwTDMPerfCurrentFC"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    pwTDMPerfCurrentGroup = pwTDMPerfCurrentGroup.setStatus('current')
pwTDMPerfIntervalGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 186, 2, 2, 3)).setObjects(("PW-TDM-MIB", "pwTDMPerfIntervalValidData"), ("PW-TDM-MIB", "pwTDMPerfIntervalDuration"), ("PW-TDM-MIB", "pwTDMPerfIntervalMissingPkts"), ("PW-TDM-MIB", "pwTDMPerfIntervalPktsReOrder"), ("PW-TDM-MIB", "pwTDMPerfIntervalJtrBfrUnderruns"), ("PW-TDM-MIB", "pwTDMPerfIntervalMisOrderDropped"), ("PW-TDM-MIB", "pwTDMPerfIntervalMalformedPkt"), ("PW-TDM-MIB", "pwTDMPerfIntervalESs"), ("PW-TDM-MIB", "pwTDMPerfIntervalSESs"), ("PW-TDM-MIB", "pwTDMPerfIntervalUASs"), ("PW-TDM-MIB", "pwTDMPerfIntervalFC"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    pwTDMPerfIntervalGroup = pwTDMPerfIntervalGroup.setStatus('current')
pwTDMPerf1DayIntervalGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 186, 2, 2, 4)).setObjects(("PW-TDM-MIB", "pwTDMPerf1DayIntervalValidData"), ("PW-TDM-MIB", "pwTDMPerf1DayIntervalDuration"), ("PW-TDM-MIB", "pwTDMPerf1DayIntervalMissingPkts"), ("PW-TDM-MIB", "pwTDMPerf1DayIntervalPktsReOrder"), ("PW-TDM-MIB", "pwTDMPerf1DayIntervalJtrBfrUnderruns"), ("PW-TDM-MIB", "pwTDMPerf1DayIntervalMisOrderDropped"), ("PW-TDM-MIB", "pwTDMPerf1DayIntervalMalformedPkt"), ("PW-TDM-MIB", "pwTDMPerf1DayIntervalESs"), ("PW-TDM-MIB", "pwTDMPerf1DayIntervalSESs"), ("PW-TDM-MIB", "pwTDMPerf1DayIntervalUASs"), ("PW-TDM-MIB", "pwTDMPerf1DayIntervalFC"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    pwTDMPerf1DayIntervalGroup = pwTDMPerf1DayIntervalGroup.setStatus('current')
mibBuilder.exportSymbols("PW-TDM-MIB", pwTDMLastEsTimeStamp=pwTDMLastEsTimeStamp, pwTDMPerfCurrentMisOrderDropped=pwTDMPerfCurrentMisOrderDropped, pwTDMPerf1DayIntervalTable=pwTDMPerf1DayIntervalTable, pwTDMPerfIntervalValidData=pwTDMPerfIntervalValidData, pwTDMPerfIntervalGroup=pwTDMPerfIntervalGroup, pwTDMPerfIntervalFC=pwTDMPerfIntervalFC, pwTDMPerf1DayIntervalJtrBfrUnderruns=pwTDMPerf1DayIntervalJtrBfrUnderruns, pwTDMPerfIntervalTable=pwTDMPerfIntervalTable, pwTDMRate=pwTDMRate, pwTDMValidDayIntervals=pwTDMValidDayIntervals, pwTDMCfgPayloadSuppression=pwTDMCfgPayloadSuppression, pwTDMPerf1DayIntervalFC=pwTDMPerf1DayIntervalFC, pwTDMNotifications=pwTDMNotifications, pwTDMPerfCurrentJtrBfrUnderruns=pwTDMPerfCurrentJtrBfrUnderruns, pwTDMCfgEntry=pwTDMCfgEntry, pwTDMPerfIntervalSESs=pwTDMPerfIntervalSESs, pwRelTDMCfgIndex=pwRelTDMCfgIndex, pwTDMTable=pwTDMTable, pwTDMCfgRtpHdrUsed=pwTDMCfgRtpHdrUsed, pwTDMPerfIntervalUASs=pwTDMPerfIntervalUASs, pwTDMPerfCurrentEntry=pwTDMPerfCurrentEntry, PYSNMP_MODULE_ID=pwTDMMIB, pwTDMCfgClearAlarmThreshold=pwTDMCfgClearAlarmThreshold, pwTDMPerfIntervalEntry=pwTDMPerfIntervalEntry, pwTDMPerfIntervalESs=pwTDMPerfIntervalESs, pwTDMModuleCompliance=pwTDMModuleCompliance, pwTDMPerfCurrentMalformedPkt=pwTDMPerfCurrentMalformedPkt, pwTDMPerfCurrentUASs=pwTDMPerfCurrentUASs, pwTDMPerf1DayIntervalGroup=pwTDMPerf1DayIntervalGroup, pwTDMEntry=pwTDMEntry, pwTDMCfgName=pwTDMCfgName, pwTDMPerfIntervalMalformedPkt=pwTDMPerfIntervalMalformedPkt, pwTDMPerf1DayIntervalMissingPkts=pwTDMPerf1DayIntervalMissingPkts, pwTDMPerfCurrentGroup=pwTDMPerfCurrentGroup, pwTDMCfgIndex=pwTDMCfgIndex, pwTDMCfgStorageType=pwTDMCfgStorageType, pwTDMPerfIntervalMissingPkts=pwTDMPerfIntervalMissingPkts, pwTDMPerf1DayIntervalPktsReOrder=pwTDMPerf1DayIntervalPktsReOrder, pwTDMPerf1DayIntervalMalformedPkt=pwTDMPerf1DayIntervalMalformedPkt, pwTDMPerfCurrentPktsReOrder=pwTDMPerfCurrentPktsReOrder, pwTDMPerfCurrentTable=pwTDMPerfCurrentTable, pwTDMCfgExcessivePktLossThreshold=pwTDMCfgExcessivePktLossThreshold, pwTDMCompliances=pwTDMCompliances, pwTDMPerfIntervalMisOrderDropped=pwTDMPerfIntervalMisOrderDropped, pwTDMCfgPayloadSize=pwTDMCfgPayloadSize, pwTDMPerfIntervalDuration=pwTDMPerfIntervalDuration, PwTDMCfgIndex=PwTDMCfgIndex, pwTDMPerf1DayIntervalNumber=pwTDMPerf1DayIntervalNumber, pwGenTDMCfgIndex=pwGenTDMCfgIndex, pwTDMTimeElapsed=pwTDMTimeElapsed, pwTDMObjects=pwTDMObjects, pwTDMMIB=pwTDMMIB, pwTDMPerf1DayIntervalUASs=pwTDMPerf1DayIntervalUASs, pwTDMCfgPktReplacePolicy=pwTDMCfgPktReplacePolicy, pwTDMCfgAvePktLossTimeWindow=pwTDMCfgAvePktLossTimeWindow, pwTDMCfgPktReorder=pwTDMCfgPktReorder, pwTDMConfigError=pwTDMConfigError, pwTDMCfgPktFiller=pwTDMCfgPktFiller, pwTDMCfgTimestampMode=pwTDMCfgTimestampMode, pwTDMCfgSetUp2SynchTimeOut=pwTDMCfgSetUp2SynchTimeOut, pwTDMCfgIndexNext=pwTDMCfgIndexNext, pwTDMPerf1DayIntervalValidData=pwTDMPerf1DayIntervalValidData, pwTDMPerfCurrentSESs=pwTDMPerfCurrentSESs, pwTDMGroups=pwTDMGroups, pwTDMGroup=pwTDMGroup, pwTDMPerfIntervalNumber=pwTDMPerfIntervalNumber, pwTDMCfgTable=pwTDMCfgTable, pwTDMValidIntervals=pwTDMValidIntervals, pwTDMPerf1DayIntervalMisOrderDropped=pwTDMPerf1DayIntervalMisOrderDropped, pwTDMCfgJtrBfrDepth=pwTDMCfgJtrBfrDepth, pwTDMPerfIntervalJtrBfrUnderruns=pwTDMPerfIntervalJtrBfrUnderruns, pwTDMCfgMissingPktsToSes=pwTDMCfgMissingPktsToSes, pwTDMConformance=pwTDMConformance, pwTDMCfgConsecPktsInSynch=pwTDMCfgConsecPktsInSynch, pwTDMPerf1DayIntervalSESs=pwTDMPerf1DayIntervalSESs, pwTDMPerf1DayIntervalESs=pwTDMPerf1DayIntervalESs, pwTDMPerfCurrentFC=pwTDMPerfCurrentFC, pwTDMPerfIntervalPktsReOrder=pwTDMPerfIntervalPktsReOrder, pwTDMIfIndex=pwTDMIfIndex, pwTDMPerf1DayIntervalEntry=pwTDMPerf1DayIntervalEntry, pwTDMCfgRowStatus=pwTDMCfgRowStatus, pwTDMPerfCurrentMissingPkts=pwTDMPerfCurrentMissingPkts, pwTDMPerfCurrentESs=pwTDMPerfCurrentESs, pwTDMPerf1DayIntervalDuration=pwTDMPerf1DayIntervalDuration, pwTDMCfgAlarmThreshold=pwTDMCfgAlarmThreshold, pwTDMCfgConsecMissPktsOutSynch=pwTDMCfgConsecMissPktsOutSynch)
