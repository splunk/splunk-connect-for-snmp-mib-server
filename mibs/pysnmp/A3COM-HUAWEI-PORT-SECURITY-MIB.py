#
# PySNMP MIB module A3COM-HUAWEI-PORT-SECURITY-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/A3COM-HUAWEI-PORT-SECURITY-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 16:51:49 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
h3cPortSecurity, = mibBuilder.importSymbols("A3COM-HUAWEI-OID-MIB", "h3cPortSecurity")
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ConstraintsUnion, SingleValueConstraint, ValueSizeConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ConstraintsUnion", "SingleValueConstraint", "ValueSizeConstraint", "ConstraintsIntersection")
dot1xPaePortNumber, dot1xAuthSessionTerminateCause, dot1xAuthSessionAuthenticMethod, dot1xAuthSessionUserName = mibBuilder.importSymbols("IEEE8021-PAE-MIB", "dot1xPaePortNumber", "dot1xAuthSessionTerminateCause", "dot1xAuthSessionAuthenticMethod", "dot1xAuthSessionUserName")
ifAdminStatus, ifIndex = mibBuilder.importSymbols("IF-MIB", "ifAdminStatus", "ifIndex")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
NotificationType, Gauge32, ObjectIdentity, TimeTicks, Bits, Unsigned32, ModuleIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter32, MibIdentifier, iso, Counter64, Integer32, IpAddress = mibBuilder.importSymbols("SNMPv2-SMI", "NotificationType", "Gauge32", "ObjectIdentity", "TimeTicks", "Bits", "Unsigned32", "ModuleIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter32", "MibIdentifier", "iso", "Counter64", "Integer32", "IpAddress")
TruthValue, TextualConvention, MacAddress, DisplayString, RowStatus = mibBuilder.importSymbols("SNMPv2-TC", "TruthValue", "TextualConvention", "MacAddress", "DisplayString", "RowStatus")
h3cPortSecurityMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 26, 1))
h3cPortSecurityMIB.setRevisions(('2004-11-24 00:00',))
if mibBuilder.loadTexts: h3cPortSecurityMIB.setLastUpdated('200411240000Z')
if mibBuilder.loadTexts: h3cPortSecurityMIB.setOrganization('Huawei-3COM Technologies Co.,Ltd.')
h3cPortSecurityLeaf = MibIdentifier((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 26, 1, 1))
h3cSecurePortSecurityControl = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 26, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cSecurePortSecurityControl.setStatus('current')
h3cSecurePortVlanMembershipList = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 26, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: h3cSecurePortVlanMembershipList.setStatus('current')
h3cSecureRalmObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 26, 1, 1, 4))
h3cSecureRalmDefaultSessionTime = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 26, 1, 1, 4, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1000000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cSecureRalmDefaultSessionTime.setStatus('current')
h3cSecureRalmHoldoffTime = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 26, 1, 1, 4, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1000000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cSecureRalmHoldoffTime.setStatus('current')
h3cSecureRalmReauthenticate = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 26, 1, 1, 4, 3), MacAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cSecureRalmReauthenticate.setStatus('current')
h3cSecureRalmAuthMode = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 26, 1, 1, 4, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("papUsernameAsMacAddress", 1), ("papUsernameFixed", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cSecureRalmAuthMode.setStatus('current')
h3cSecureRalmAuthUsername = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 26, 1, 1, 4, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 80))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cSecureRalmAuthUsername.setStatus('current')
h3cSecureRalmAuthPassword = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 26, 1, 1, 4, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 63))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cSecureRalmAuthPassword.setStatus('current')
h3cSecureRalmAuthDomain = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 26, 1, 1, 4, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 24))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cSecureRalmAuthDomain.setStatus('current')
h3cSecureRalmAuthOfflineTime = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 26, 1, 1, 4, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)).clone(300)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cSecureRalmAuthOfflineTime.setStatus('current')
h3cSecureRalmAuthServerTimeoutTime = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 26, 1, 1, 4, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)).clone(100)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cSecureRalmAuthServerTimeoutTime.setStatus('current')
h3cSecureMacControl = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 26, 1, 1, 4, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cSecureMacControl.setStatus('current')
h3cPortSecurityTables = MibIdentifier((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 26, 1, 2))
h3cSecurePortTable = MibTable((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 26, 1, 2, 1), )
if mibBuilder.loadTexts: h3cSecurePortTable.setStatus('current')
h3cSecurePortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 26, 1, 2, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: h3cSecurePortEntry.setStatus('current')
h3cSecurePortMode = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 26, 1, 2, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15))).clone(namedValues=NamedValues(("noRestrictions", 1), ("continuousLearning", 2), ("autoLearn", 3), ("secure", 4), ("userLogin", 5), ("userLoginSecure", 6), ("userLoginWithOUI", 7), ("macAddressWithRadius", 8), ("macAddressOrUserLoginSecure", 9), ("macAddressElseUserLoginSecure", 10), ("userLoginSecureExt", 11), ("macAddressOrUserLoginSecureExt", 12), ("macAddressElseUserLoginSecureExt", 13), ("macAddressAndUserLoginSecure", 14), ("macAddressAndUserLoginSecureExt", 15)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cSecurePortMode.setStatus('current')
h3cSecureNeedToKnowMode = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 26, 1, 2, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("notAvailable", 1), ("disabled", 2), ("needToKnowOnly", 3), ("needToKnowWithBroadcastsAllowed", 4), ("needToKnowWithMulticastsAllowed", 5), ("permanentNeedToKnowOnly", 6), ("permanentNeedToKnowWithBroadcastsAllowed", 7), ("permanentNeedToKnowWithMulticastsAllowed", 8)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cSecureNeedToKnowMode.setStatus('current')
h3cSecureIntrusionAction = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 26, 1, 2, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("notAvailable", 1), ("noAction", 2), ("disablePort", 3), ("disablePortTemporarily", 4), ("allowDefaultAccess", 5), ("blockMacAddress", 6)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cSecureIntrusionAction.setStatus('current')
h3cSecureNumberAddresses = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 26, 1, 2, 1, 1, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cSecureNumberAddresses.setStatus('current')
h3cSecureNumberAddressesStored = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 26, 1, 2, 1, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cSecureNumberAddressesStored.setStatus('current')
h3cSecureMaximumAddresses = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 26, 1, 2, 1, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cSecureMaximumAddresses.setStatus('current')
h3cSecureAddressTable = MibTable((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 26, 1, 2, 2), )
if mibBuilder.loadTexts: h3cSecureAddressTable.setStatus('current')
h3cSecureAddressEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 26, 1, 2, 2, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "A3COM-HUAWEI-PORT-SECURITY-MIB", "h3cSecureAddrMAC"), (0, "A3COM-HUAWEI-PORT-SECURITY-MIB", "h3cSecureAddrVlanID"))
if mibBuilder.loadTexts: h3cSecureAddressEntry.setStatus('current')
h3cSecureAddrMAC = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 26, 1, 2, 2, 1, 1), MacAddress()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: h3cSecureAddrMAC.setStatus('current')
h3cSecureAddrVlanID = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 26, 1, 2, 2, 1, 2), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cSecureAddrVlanID.setStatus('current')
h3cSecureAddrMACStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 26, 1, 2, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("addressBlackhole", 1), ("addressUserConfig", 2), ("addressDot1xAuth", 3), ("addressRALM", 4)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cSecureAddrMACStatus.setStatus('current')
h3cSecureAddrRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 26, 1, 2, 2, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cSecureAddrRowStatus.setStatus('current')
h3cSecureOUITable = MibTable((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 26, 1, 2, 3), )
if mibBuilder.loadTexts: h3cSecureOUITable.setStatus('current')
h3cSecureOUIEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 26, 1, 2, 3, 1), ).setIndexNames((0, "A3COM-HUAWEI-PORT-SECURITY-MIB", "h3cSecureOUIIndex"))
if mibBuilder.loadTexts: h3cSecureOUIEntry.setStatus('current')
h3cSecureOUIIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 26, 1, 2, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1024)))
if mibBuilder.loadTexts: h3cSecureOUIIndex.setStatus('current')
h3cSecureOUI = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 26, 1, 2, 3, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(3, 3)).setFixedLength(3)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cSecureOUI.setStatus('current')
h3cSecureOUIRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 26, 1, 2, 3, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cSecureOUIRowStatus.setStatus('current')
h3cSecureBindingTable = MibTable((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 26, 1, 2, 4), )
if mibBuilder.loadTexts: h3cSecureBindingTable.setStatus('current')
h3cSecureBindingEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 26, 1, 2, 4, 1), ).setIndexNames((0, "A3COM-HUAWEI-PORT-SECURITY-MIB", "h3cSecureBindingIndex"))
if mibBuilder.loadTexts: h3cSecureBindingEntry.setStatus('current')
h3cSecureBindingIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 26, 1, 2, 4, 1, 1), Integer32())
if mibBuilder.loadTexts: h3cSecureBindingIndex.setStatus('current')
h3cSecureBindingPort = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 26, 1, 2, 4, 1, 2), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cSecureBindingPort.setStatus('current')
h3cSecureBindingAddrMAC = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 26, 1, 2, 4, 1, 3), MacAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cSecureBindingAddrMAC.setStatus('current')
h3cSecureBindingAddrIp = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 26, 1, 2, 4, 1, 4), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cSecureBindingAddrIp.setStatus('current')
h3cSecureBindingRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 26, 1, 2, 4, 1, 5), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cSecureBindingRowStatus.setStatus('current')
h3cSecureAssignTable = MibTable((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 26, 1, 2, 5), )
if mibBuilder.loadTexts: h3cSecureAssignTable.setStatus('current')
h3cSecureAssignEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 26, 1, 2, 5, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: h3cSecureAssignEntry.setStatus('current')
h3cSecureAssignEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 26, 1, 2, 5, 1, 1), TruthValue().clone('true')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cSecureAssignEnable.setStatus('current')
h3cSecureVlanAssignment = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 26, 1, 2, 5, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cSecureVlanAssignment.setStatus('current')
h3cPortSecurityNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 26, 1, 3))
h3cSecureAddressLearned = NotificationType((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 26, 1, 3, 1)).setObjects(("IF-MIB", "ifIndex"), ("A3COM-HUAWEI-PORT-SECURITY-MIB", "h3cSecureAddrMAC"))
if mibBuilder.loadTexts: h3cSecureAddressLearned.setStatus('current')
h3cSecureViolation = NotificationType((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 26, 1, 3, 2)).setObjects(("IF-MIB", "ifIndex"), ("A3COM-HUAWEI-PORT-SECURITY-MIB", "h3cSecureAddrMAC"), ("IF-MIB", "ifAdminStatus"))
if mibBuilder.loadTexts: h3cSecureViolation.setStatus('current')
h3cSecureLoginFailure = NotificationType((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 26, 1, 3, 3)).setObjects(("IF-MIB", "ifIndex"), ("A3COM-HUAWEI-PORT-SECURITY-MIB", "h3cSecureAddrMAC"), ("IEEE8021-PAE-MIB", "dot1xAuthSessionUserName"))
if mibBuilder.loadTexts: h3cSecureLoginFailure.setStatus('current')
h3cSecureLogon = NotificationType((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 26, 1, 3, 4)).setObjects(("IF-MIB", "ifIndex"), ("A3COM-HUAWEI-PORT-SECURITY-MIB", "h3cSecureAddrMAC"), ("IEEE8021-PAE-MIB", "dot1xAuthSessionUserName"), ("IEEE8021-PAE-MIB", "dot1xAuthSessionAuthenticMethod"), ("A3COM-HUAWEI-PORT-SECURITY-MIB", "h3cSecurePortVlanMembershipList"))
if mibBuilder.loadTexts: h3cSecureLogon.setStatus('current')
h3cSecureLogoff = NotificationType((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 26, 1, 3, 5)).setObjects(("IF-MIB", "ifIndex"), ("A3COM-HUAWEI-PORT-SECURITY-MIB", "h3cSecureAddrMAC"), ("IEEE8021-PAE-MIB", "dot1xAuthSessionUserName"), ("IEEE8021-PAE-MIB", "dot1xAuthSessionTerminateCause"), ("A3COM-HUAWEI-PORT-SECURITY-MIB", "h3cSecurePortVlanMembershipList"))
if mibBuilder.loadTexts: h3cSecureLogoff.setStatus('current')
h3cSecureRalmLoginFailure = NotificationType((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 26, 1, 3, 6)).setObjects(("IF-MIB", "ifIndex"), ("A3COM-HUAWEI-PORT-SECURITY-MIB", "h3cSecureAddrMAC"), ("A3COM-HUAWEI-PORT-SECURITY-MIB", "h3cSecureRalmAuthMode"), ("A3COM-HUAWEI-PORT-SECURITY-MIB", "h3cSecureRalmAuthUsername"))
if mibBuilder.loadTexts: h3cSecureRalmLoginFailure.setStatus('current')
h3cSecureRalmLogon = NotificationType((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 26, 1, 3, 7)).setObjects(("IF-MIB", "ifIndex"), ("A3COM-HUAWEI-PORT-SECURITY-MIB", "h3cSecureAddrMAC"), ("A3COM-HUAWEI-PORT-SECURITY-MIB", "h3cSecureRalmAuthMode"), ("A3COM-HUAWEI-PORT-SECURITY-MIB", "h3cSecureRalmAuthUsername"), ("A3COM-HUAWEI-PORT-SECURITY-MIB", "h3cSecurePortVlanMembershipList"))
if mibBuilder.loadTexts: h3cSecureRalmLogon.setStatus('current')
h3cSecureRalmLogoff = NotificationType((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 26, 1, 3, 8)).setObjects(("IF-MIB", "ifIndex"), ("A3COM-HUAWEI-PORT-SECURITY-MIB", "h3cSecureAddrMAC"), ("A3COM-HUAWEI-PORT-SECURITY-MIB", "h3cSecureRalmAuthMode"), ("A3COM-HUAWEI-PORT-SECURITY-MIB", "h3cSecureRalmAuthUsername"), ("A3COM-HUAWEI-PORT-SECURITY-MIB", "h3cSecurePortVlanMembershipList"))
if mibBuilder.loadTexts: h3cSecureRalmLogoff.setStatus('current')
mibBuilder.exportSymbols("A3COM-HUAWEI-PORT-SECURITY-MIB", h3cSecureRalmAuthDomain=h3cSecureRalmAuthDomain, h3cSecureAddressEntry=h3cSecureAddressEntry, h3cPortSecurityTables=h3cPortSecurityTables, h3cSecureAddrMAC=h3cSecureAddrMAC, h3cSecurePortSecurityControl=h3cSecurePortSecurityControl, h3cSecureOUI=h3cSecureOUI, h3cSecureOUIEntry=h3cSecureOUIEntry, h3cSecureBindingPort=h3cSecureBindingPort, h3cSecurePortTable=h3cSecurePortTable, h3cSecureMaximumAddresses=h3cSecureMaximumAddresses, h3cSecureAddressTable=h3cSecureAddressTable, PYSNMP_MODULE_ID=h3cPortSecurityMIB, h3cSecureAssignTable=h3cSecureAssignTable, h3cSecureRalmAuthServerTimeoutTime=h3cSecureRalmAuthServerTimeoutTime, h3cSecureRalmReauthenticate=h3cSecureRalmReauthenticate, h3cSecureBindingTable=h3cSecureBindingTable, h3cSecureViolation=h3cSecureViolation, h3cSecureBindingRowStatus=h3cSecureBindingRowStatus, h3cSecureLoginFailure=h3cSecureLoginFailure, h3cSecureRalmAuthOfflineTime=h3cSecureRalmAuthOfflineTime, h3cPortSecurityLeaf=h3cPortSecurityLeaf, h3cSecureAddrVlanID=h3cSecureAddrVlanID, h3cSecureIntrusionAction=h3cSecureIntrusionAction, h3cSecureRalmAuthUsername=h3cSecureRalmAuthUsername, h3cSecureAssignEntry=h3cSecureAssignEntry, h3cSecureRalmAuthPassword=h3cSecureRalmAuthPassword, h3cSecureBindingAddrMAC=h3cSecureBindingAddrMAC, h3cSecureAddrMACStatus=h3cSecureAddrMACStatus, h3cSecureNumberAddresses=h3cSecureNumberAddresses, h3cSecureVlanAssignment=h3cSecureVlanAssignment, h3cSecureOUITable=h3cSecureOUITable, h3cSecurePortMode=h3cSecurePortMode, h3cSecureRalmHoldoffTime=h3cSecureRalmHoldoffTime, h3cPortSecurityMIB=h3cPortSecurityMIB, h3cSecureRalmLoginFailure=h3cSecureRalmLoginFailure, h3cSecureBindingAddrIp=h3cSecureBindingAddrIp, h3cPortSecurityNotifications=h3cPortSecurityNotifications, h3cSecureRalmObjects=h3cSecureRalmObjects, h3cSecurePortVlanMembershipList=h3cSecurePortVlanMembershipList, h3cSecurePortEntry=h3cSecurePortEntry, h3cSecureLogoff=h3cSecureLogoff, h3cSecureAddrRowStatus=h3cSecureAddrRowStatus, h3cSecureRalmLogon=h3cSecureRalmLogon, h3cSecureAssignEnable=h3cSecureAssignEnable, h3cSecureMacControl=h3cSecureMacControl, h3cSecureAddressLearned=h3cSecureAddressLearned, h3cSecureBindingIndex=h3cSecureBindingIndex, h3cSecureOUIIndex=h3cSecureOUIIndex, h3cSecureRalmDefaultSessionTime=h3cSecureRalmDefaultSessionTime, h3cSecureBindingEntry=h3cSecureBindingEntry, h3cSecureLogon=h3cSecureLogon, h3cSecureRalmLogoff=h3cSecureRalmLogoff, h3cSecureNeedToKnowMode=h3cSecureNeedToKnowMode, h3cSecureRalmAuthMode=h3cSecureRalmAuthMode, h3cSecureOUIRowStatus=h3cSecureOUIRowStatus, h3cSecureNumberAddressesStored=h3cSecureNumberAddressesStored)
