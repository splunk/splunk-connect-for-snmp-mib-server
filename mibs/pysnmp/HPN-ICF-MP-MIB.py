#
# PySNMP MIB module HPN-ICF-MP-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/HPN-ICF-MP-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:28:03 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, SingleValueConstraint, ValueRangeConstraint, ValueSizeConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "SingleValueConstraint", "ValueRangeConstraint", "ValueSizeConstraint", "ConstraintsUnion")
hpnicfRhw, = mibBuilder.importSymbols("HPN-ICF-OID-MIB", "hpnicfRhw")
ifIndex, = mibBuilder.importSymbols("IF-MIB", "ifIndex")
ObjectGroup, NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "NotificationGroup", "ModuleCompliance")
Counter32, TimeTicks, Gauge32, ObjectIdentity, iso, Unsigned32, Counter64, MibIdentifier, NotificationType, Integer32, MibScalar, MibTable, MibTableRow, MibTableColumn, Bits, IpAddress, ModuleIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "Counter32", "TimeTicks", "Gauge32", "ObjectIdentity", "iso", "Unsigned32", "Counter64", "MibIdentifier", "NotificationType", "Integer32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Bits", "IpAddress", "ModuleIdentity")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
hpnicfMultilinkPPP = ModuleIdentity((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 33))
if mibBuilder.loadTexts: hpnicfMultilinkPPP.setLastUpdated('200405180000Z')
if mibBuilder.loadTexts: hpnicfMultilinkPPP.setOrganization('')
hpnicfMpObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 33, 1))
hpnicfMpMultilinkTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 33, 1, 1), )
if mibBuilder.loadTexts: hpnicfMpMultilinkTable.setStatus('current')
hpnicfMpMultilinkEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 33, 1, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: hpnicfMpMultilinkEntry.setStatus('current')
hpnicfMpMultilinkDescr = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 33, 1, 1, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfMpMultilinkDescr.setStatus('current')
hpnicfMpBundleName = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 33, 1, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfMpBundleName.setStatus('current')
hpnicfMpBundledSlot = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 33, 1, 1, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfMpBundledSlot.setStatus('current')
hpnicfMpBundledMemberCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 33, 1, 1, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfMpBundledMemberCnt.setStatus('current')
hpnicfMpLostFragments = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 33, 1, 1, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfMpLostFragments.setStatus('current')
hpnicfMpReorderedPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 33, 1, 1, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfMpReorderedPkts.setStatus('current')
hpnicfMpUnassignedPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 33, 1, 1, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfMpUnassignedPkts.setStatus('current')
hpnicfMpInterleavedPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 33, 1, 1, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfMpInterleavedPkts.setStatus('current')
hpnicfMpRcvdSequence = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 33, 1, 1, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfMpRcvdSequence.setStatus('current')
hpnicfMpSentSequence = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 33, 1, 1, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfMpSentSequence.setStatus('current')
hpnicfMpMemberlinkTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 33, 1, 2), )
if mibBuilder.loadTexts: hpnicfMpMemberlinkTable.setStatus('current')
hpnicfMpMemberlinkEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 33, 1, 2, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "HPN-ICF-MP-MIB", "hpnicfMpMemberlinkSeqNumber"))
if mibBuilder.loadTexts: hpnicfMpMemberlinkEntry.setStatus('current')
hpnicfMpMemberlinkSeqNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 33, 1, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfMpMemberlinkSeqNumber.setStatus('current')
hpnicfMpMemberlinkIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 33, 1, 2, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfMpMemberlinkIfIndex.setStatus('current')
hpnicfMpMemberlinkDescr = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 33, 1, 2, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfMpMemberlinkDescr.setStatus('current')
hpnicfMpMemberlinkMpStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 33, 1, 2, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfMpMemberlinkMpStatus.setStatus('current')
hpnicfMpNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 33, 2))
hpnicfMpConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 33, 3))
hpnicfMpCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 33, 3, 1))
hpnicfMpCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 33, 3, 1, 1)).setObjects(("HPN-ICF-MP-MIB", "hpnicfMpMandatoryGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpnicfMpCompliance = hpnicfMpCompliance.setStatus('current')
hpnicfMpGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 33, 3, 2))
hpnicfMpMandatoryGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 33, 3, 2, 1)).setObjects(("HPN-ICF-MP-MIB", "hpnicfMpBundledMemberCnt"), ("HPN-ICF-MP-MIB", "hpnicfMpMemberlinkSeqNumber"), ("HPN-ICF-MP-MIB", "hpnicfMpMemberlinkIfIndex"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpnicfMpMandatoryGroup = hpnicfMpMandatoryGroup.setStatus('current')
hpnicfMpInfoGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 33, 3, 2, 2)).setObjects(("HPN-ICF-MP-MIB", "hpnicfMpMultilinkDescr"), ("HPN-ICF-MP-MIB", "hpnicfMpBundleName"), ("HPN-ICF-MP-MIB", "hpnicfMpBundledSlot"), ("HPN-ICF-MP-MIB", "hpnicfMpBundledMemberCnt"), ("HPN-ICF-MP-MIB", "hpnicfMpLostFragments"), ("HPN-ICF-MP-MIB", "hpnicfMpReorderedPkts"), ("HPN-ICF-MP-MIB", "hpnicfMpUnassignedPkts"), ("HPN-ICF-MP-MIB", "hpnicfMpInterleavedPkts"), ("HPN-ICF-MP-MIB", "hpnicfMpRcvdSequence"), ("HPN-ICF-MP-MIB", "hpnicfMpSentSequence"), ("HPN-ICF-MP-MIB", "hpnicfMpMemberlinkDescr"), ("HPN-ICF-MP-MIB", "hpnicfMpMemberlinkMpStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpnicfMpInfoGroup = hpnicfMpInfoGroup.setStatus('current')
mibBuilder.exportSymbols("HPN-ICF-MP-MIB", hpnicfMpMemberlinkDescr=hpnicfMpMemberlinkDescr, hpnicfMpMultilinkTable=hpnicfMpMultilinkTable, hpnicfMpCompliance=hpnicfMpCompliance, hpnicfMpNotifications=hpnicfMpNotifications, hpnicfMpGroups=hpnicfMpGroups, hpnicfMpMandatoryGroup=hpnicfMpMandatoryGroup, hpnicfMpMultilinkDescr=hpnicfMpMultilinkDescr, hpnicfMpLostFragments=hpnicfMpLostFragments, hpnicfMpMemberlinkEntry=hpnicfMpMemberlinkEntry, hpnicfMpMemberlinkMpStatus=hpnicfMpMemberlinkMpStatus, hpnicfMpUnassignedPkts=hpnicfMpUnassignedPkts, hpnicfMpObjects=hpnicfMpObjects, hpnicfMpBundledMemberCnt=hpnicfMpBundledMemberCnt, PYSNMP_MODULE_ID=hpnicfMultilinkPPP, hpnicfMpReorderedPkts=hpnicfMpReorderedPkts, hpnicfMultilinkPPP=hpnicfMultilinkPPP, hpnicfMpRcvdSequence=hpnicfMpRcvdSequence, hpnicfMpBundleName=hpnicfMpBundleName, hpnicfMpMemberlinkTable=hpnicfMpMemberlinkTable, hpnicfMpMultilinkEntry=hpnicfMpMultilinkEntry, hpnicfMpBundledSlot=hpnicfMpBundledSlot, hpnicfMpConformance=hpnicfMpConformance, hpnicfMpInterleavedPkts=hpnicfMpInterleavedPkts, hpnicfMpSentSequence=hpnicfMpSentSequence, hpnicfMpInfoGroup=hpnicfMpInfoGroup, hpnicfMpCompliances=hpnicfMpCompliances, hpnicfMpMemberlinkSeqNumber=hpnicfMpMemberlinkSeqNumber, hpnicfMpMemberlinkIfIndex=hpnicfMpMemberlinkIfIndex)
