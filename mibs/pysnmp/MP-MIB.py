#
# PySNMP MIB module MP-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/MP-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 20:03:48 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ConstraintsIntersection, ValueRangeConstraint, ValueSizeConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ConstraintsIntersection", "ValueRangeConstraint", "ValueSizeConstraint", "ConstraintsUnion")
MmEndpointID, MmGlobalIdentifier, MmTAddressTag, MmGatekeeperID = mibBuilder.importSymbols("MULTI-MEDIA-MIB-TC", "MmEndpointID", "MmGlobalIdentifier", "MmTAddressTag", "MmGatekeeperID")
ModuleCompliance, ObjectGroup, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "ObjectGroup", "NotificationGroup")
TimeTicks, Integer32, Counter32, enterprises, IpAddress, NotificationType, MibScalar, MibTable, MibTableRow, MibTableColumn, ModuleIdentity, Bits, Counter64, Gauge32, iso, MibIdentifier, ObjectIdentity, Unsigned32 = mibBuilder.importSymbols("SNMPv2-SMI", "TimeTicks", "Integer32", "Counter32", "enterprises", "IpAddress", "NotificationType", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ModuleIdentity", "Bits", "Counter64", "Gauge32", "iso", "MibIdentifier", "ObjectIdentity", "Unsigned32")
DisplayString, RowStatus, TAddress, DateAndTime, TruthValue, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "RowStatus", "TAddress", "DateAndTime", "TruthValue", "TextualConvention")
media = MibIdentifier((1, 3, 6, 1, 4, 1, 3011, 2))
h323MP = ModuleIdentity((1, 3, 6, 1, 4, 1, 3011, 2, 2))
if mibBuilder.loadTexts: h323MP.setLastUpdated('9808062253Z')
if mibBuilder.loadTexts: h323MP.setOrganization('VideoServer')
mpConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 3011, 2, 2, 1))
mpConference = MibIdentifier((1, 3, 6, 1, 4, 1, 3011, 2, 2, 2))
mpConfigMaxAudioMixCount = MibScalar((1, 3, 6, 1, 4, 1, 3011, 2, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpConfigMaxAudioMixCount.setStatus('current')
mpConfigMaxVideoMixCount = MibScalar((1, 3, 6, 1, 4, 1, 3011, 2, 2, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpConfigMaxVideoMixCount.setStatus('current')
mpConferenceTable = MibTable((1, 3, 6, 1, 4, 1, 3011, 2, 2, 2, 1), )
if mibBuilder.loadTexts: mpConferenceTable.setStatus('current')
mpConferenceTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3011, 2, 2, 2, 1, 1), ).setIndexNames((0, "MP-MIB", "mpConferenceConferenceId"))
if mibBuilder.loadTexts: mpConferenceTableEntry.setStatus('current')
mpConferenceConferenceId = MibTableColumn((1, 3, 6, 1, 4, 1, 3011, 2, 2, 2, 1, 1, 1), MmGlobalIdentifier()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpConferenceConferenceId.setStatus('current')
mpConferenceAudioNoiseThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 3011, 2, 2, 2, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpConferenceAudioNoiseThreshold.setStatus('current')
mpConferenceLipSyncEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 3011, 2, 2, 2, 1, 1, 3), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpConferenceLipSyncEnable.setStatus('current')
mpConferenceParticipantsTable = MibTable((1, 3, 6, 1, 4, 1, 3011, 2, 2, 2, 2), )
if mibBuilder.loadTexts: mpConferenceParticipantsTable.setStatus('current')
mpConferenceParticipantsTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3011, 2, 2, 2, 2, 1), ).setIndexNames((0, "MP-MIB", "mpConferenceConferenceId"), (0, "MP-MIB", "mpConferenceParticipantsTableIndex"))
if mibBuilder.loadTexts: mpConferenceParticipantsTableEntry.setStatus('current')
mpConferenceParticipantsTableIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3011, 2, 2, 2, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpConferenceParticipantsTableIndex.setStatus('current')
mpConferenceParticipantsEndpointId = MibTableColumn((1, 3, 6, 1, 4, 1, 3011, 2, 2, 2, 2, 1, 2), MmEndpointID()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpConferenceParticipantsEndpointId.setStatus('current')
mpConferenceParticipantsTransmitAudioState = MibTableColumn((1, 3, 6, 1, 4, 1, 3011, 2, 2, 2, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("normal", 1), ("mute", 2), ("toneGeneration", 3), ("off", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpConferenceParticipantsTransmitAudioState.setStatus('current')
mpConferenceParticipantsReceiveAudioState = MibTableColumn((1, 3, 6, 1, 4, 1, 3011, 2, 2, 2, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("normal", 1), ("loopBack", 2), ("block", 3), ("off", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpConferenceParticipantsReceiveAudioState.setStatus('current')
mpConferenceParticipantsTransmitVideoState = MibTableColumn((1, 3, 6, 1, 4, 1, 3011, 2, 2, 2, 2, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("on", 1), ("off", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpConferenceParticipantsTransmitVideoState.setStatus('current')
mpConferenceParticipantsReceiveVideoState = MibTableColumn((1, 3, 6, 1, 4, 1, 3011, 2, 2, 2, 2, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("normal", 1), ("block", 2), ("off", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpConferenceParticipantsReceiveVideoState.setStatus('current')
mpConferenceParticipantsLoudnessMeasurement = MibTableColumn((1, 3, 6, 1, 4, 1, 3011, 2, 2, 2, 2, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpConferenceParticipantsLoudnessMeasurement.setStatus('current')
mpConferenceParticipantsVoiceActivity = MibTableColumn((1, 3, 6, 1, 4, 1, 3011, 2, 2, 2, 2, 1, 8), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpConferenceParticipantsVoiceActivity.setStatus('current')
mpConferenceParticipantsInputAudioGain = MibTableColumn((1, 3, 6, 1, 4, 1, 3011, 2, 2, 2, 2, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpConferenceParticipantsInputAudioGain.setStatus('current')
mpConferenceParticipantsOutputAudioGain = MibTableColumn((1, 3, 6, 1, 4, 1, 3011, 2, 2, 2, 2, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpConferenceParticipantsOutputAudioGain.setStatus('current')
mpConferenceParticipantsMaxAudioEncoderPayloadSize = MibTableColumn((1, 3, 6, 1, 4, 1, 3011, 2, 2, 2, 2, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpConferenceParticipantsMaxAudioEncoderPayloadSize.setStatus('current')
mpConferenceParticipantsMaxAudioDecoderPayloadSize = MibTableColumn((1, 3, 6, 1, 4, 1, 3011, 2, 2, 2, 2, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpConferenceParticipantsMaxAudioDecoderPayloadSize.setStatus('current')
mpConferenceParticipantsTotalPacketsTransmitted = MibTableColumn((1, 3, 6, 1, 4, 1, 3011, 2, 2, 2, 2, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpConferenceParticipantsTotalPacketsTransmitted.setStatus('current')
mpConferenceParticipantsTotalPacketsReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 3011, 2, 2, 2, 2, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpConferenceParticipantsTotalPacketsReceived.setStatus('current')
mpConferenceParticipantsInvalidPacketErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 3011, 2, 2, 2, 2, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpConferenceParticipantsInvalidPacketErrors.setStatus('current')
mpConferenceParticipantsLateAudioPacketsDropped = MibTableColumn((1, 3, 6, 1, 4, 1, 3011, 2, 2, 2, 2, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpConferenceParticipantsLateAudioPacketsDropped.setStatus('current')
mpConferenceParticipantsReceivedSilencePackets = MibTableColumn((1, 3, 6, 1, 4, 1, 3011, 2, 2, 2, 2, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpConferenceParticipantsReceivedSilencePackets.setStatus('current')
mpConferenceParticipantsSilencePacketsGenerated = MibTableColumn((1, 3, 6, 1, 4, 1, 3011, 2, 2, 2, 2, 1, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpConferenceParticipantsSilencePacketsGenerated.setStatus('current')
mpConferenceParticipantsVideoFrameRate = MibTableColumn((1, 3, 6, 1, 4, 1, 3011, 2, 2, 2, 2, 1, 19), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpConferenceParticipantsVideoFrameRate.setStatus('current')
mpConferenceParticipantsVideoResolution = MibTableColumn((1, 3, 6, 1, 4, 1, 3011, 2, 2, 2, 2, 1, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("h263SubQCIF", 1), ("h263QCIF", 2), ("h263CIF", 3), ("h2634CIF", 4), ("h26316CIF", 5), ("h263Reserved", 6), ("h261QCIF", 7), ("h261CIF", 8)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpConferenceParticipantsVideoResolution.setStatus('current')
mpConferenceParticipantsFullPictureCounter = MibTableColumn((1, 3, 6, 1, 4, 1, 3011, 2, 2, 2, 2, 1, 21), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpConferenceParticipantsFullPictureCounter.setStatus('current')
mpConferenceGlobalAudioMixTable = MibTable((1, 3, 6, 1, 4, 1, 3011, 2, 2, 2, 3), )
if mibBuilder.loadTexts: mpConferenceGlobalAudioMixTable.setStatus('current')
mpConferenceGlobalAudioMixTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3011, 2, 2, 2, 3, 1), ).setIndexNames((0, "MP-MIB", "mpConferenceConferenceId"), (0, "MP-MIB", "mpConferenceGlobalAudioMixTableIndex"))
if mibBuilder.loadTexts: mpConferenceGlobalAudioMixTableEntry.setStatus('current')
mpConferenceGlobalAudioMixTableIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3011, 2, 2, 2, 3, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpConferenceGlobalAudioMixTableIndex.setStatus('current')
mpConferenceGlobalAudioMixTerminalIdentifier = MibTableColumn((1, 3, 6, 1, 4, 1, 3011, 2, 2, 2, 3, 1, 2), MmEndpointID()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpConferenceGlobalAudioMixTerminalIdentifier.setStatus('current')
mpConferenceGlobalVideoMixTable = MibTable((1, 3, 6, 1, 4, 1, 3011, 2, 2, 2, 4), )
if mibBuilder.loadTexts: mpConferenceGlobalVideoMixTable.setStatus('current')
mpConferenceGlobalVideoMixTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3011, 2, 2, 2, 4, 1), ).setIndexNames((0, "MP-MIB", "mpConferenceConferenceId"), (0, "MP-MIB", "mpConferenceGlobalVideoMixTableIndex"))
if mibBuilder.loadTexts: mpConferenceGlobalVideoMixTableEntry.setStatus('current')
mpConferenceGlobalVideoMixTableIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3011, 2, 2, 2, 4, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpConferenceGlobalVideoMixTableIndex.setStatus('current')
mpConferenceGlobalVideoMixTerminalIdentifier = MibTableColumn((1, 3, 6, 1, 4, 1, 3011, 2, 2, 2, 4, 1, 2), MmEndpointID()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpConferenceGlobalVideoMixTerminalIdentifier.setStatus('current')
mpMIBConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 3011, 2, 2, 3))
mpMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 3011, 2, 2, 3, 1))
mpConfigGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 3011, 2, 2, 3, 1, 1)).setObjects(("MP-MIB", "mpConfigMaxAudioMixCount"), ("MP-MIB", "mpConfigMaxVideoMixCount"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    mpConfigGroup = mpConfigGroup.setStatus('current')
mpConferenceGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 3011, 2, 2, 3, 1, 2)).setObjects(("MP-MIB", "mpConferenceConferenceId"), ("MP-MIB", "mpConferenceAudioNoiseThreshold"), ("MP-MIB", "mpConferenceLipSyncEnable"), ("MP-MIB", "mpConferenceParticipantsTableIndex"), ("MP-MIB", "mpConferenceParticipantsEndpointId"), ("MP-MIB", "mpConferenceParticipantsTransmitAudioState"), ("MP-MIB", "mpConferenceParticipantsReceiveAudioState"), ("MP-MIB", "mpConferenceParticipantsTransmitVideoState"), ("MP-MIB", "mpConferenceParticipantsReceiveVideoState"), ("MP-MIB", "mpConferenceParticipantsLoudnessMeasurement"), ("MP-MIB", "mpConferenceParticipantsVoiceActivity"), ("MP-MIB", "mpConferenceParticipantsInputAudioGain"), ("MP-MIB", "mpConferenceParticipantsOutputAudioGain"), ("MP-MIB", "mpConferenceParticipantsMaxAudioEncoderPayloadSize"), ("MP-MIB", "mpConferenceParticipantsMaxAudioDecoderPayloadSize"), ("MP-MIB", "mpConferenceParticipantsTotalPacketsTransmitted"), ("MP-MIB", "mpConferenceParticipantsTotalPacketsReceived"), ("MP-MIB", "mpConferenceParticipantsLateAudioPacketsDropped"), ("MP-MIB", "mpConferenceParticipantsReceivedSilencePackets"), ("MP-MIB", "mpConferenceParticipantsSilencePacketsGenerated"), ("MP-MIB", "mpConferenceParticipantsVideoFrameRate"), ("MP-MIB", "mpConferenceParticipantsVideoResolution"), ("MP-MIB", "mpConferenceParticipantsFullPictureCounter"), ("MP-MIB", "mpConferenceGlobalAudioMixTableIndex"), ("MP-MIB", "mpConferenceGlobalAudioMixTerminalIdentifier"), ("MP-MIB", "mpConferenceGlobalVideoMixTableIndex"), ("MP-MIB", "mpConferenceGlobalVideoMixTerminalIdentifier"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    mpConferenceGroup = mpConferenceGroup.setStatus('current')
mpMIBCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 3011, 2, 2, 3, 2)).setObjects(("MP-MIB", "mpConfigGroup"), ("MP-MIB", "mpConferenceGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    mpMIBCompliance = mpMIBCompliance.setStatus('current')
mibBuilder.exportSymbols("MP-MIB", mpConferenceParticipantsReceivedSilencePackets=mpConferenceParticipantsReceivedSilencePackets, mpMIBCompliance=mpMIBCompliance, mpConferenceLipSyncEnable=mpConferenceLipSyncEnable, PYSNMP_MODULE_ID=h323MP, mpConferenceParticipantsInvalidPacketErrors=mpConferenceParticipantsInvalidPacketErrors, mpConferenceTable=mpConferenceTable, mpConferenceParticipantsFullPictureCounter=mpConferenceParticipantsFullPictureCounter, mpConferenceParticipantsReceiveAudioState=mpConferenceParticipantsReceiveAudioState, mpMIBConformance=mpMIBConformance, mpConferenceParticipantsVideoFrameRate=mpConferenceParticipantsVideoFrameRate, mpConfigGroup=mpConfigGroup, mpConferenceGlobalVideoMixTerminalIdentifier=mpConferenceGlobalVideoMixTerminalIdentifier, mpConferenceParticipantsReceiveVideoState=mpConferenceParticipantsReceiveVideoState, mpConferenceParticipantsTransmitVideoState=mpConferenceParticipantsTransmitVideoState, mpConferenceConferenceId=mpConferenceConferenceId, mpConferenceParticipantsVideoResolution=mpConferenceParticipantsVideoResolution, mpConfig=mpConfig, mpConfigMaxVideoMixCount=mpConfigMaxVideoMixCount, mpConferenceParticipantsSilencePacketsGenerated=mpConferenceParticipantsSilencePacketsGenerated, mpConferenceGlobalAudioMixTableIndex=mpConferenceGlobalAudioMixTableIndex, mpConferenceParticipantsTable=mpConferenceParticipantsTable, mpConferenceGlobalVideoMixTableIndex=mpConferenceGlobalVideoMixTableIndex, mpConferenceParticipantsMaxAudioEncoderPayloadSize=mpConferenceParticipantsMaxAudioEncoderPayloadSize, mpConferenceGroup=mpConferenceGroup, mpConferenceParticipantsTransmitAudioState=mpConferenceParticipantsTransmitAudioState, media=media, mpConferenceParticipantsTableEntry=mpConferenceParticipantsTableEntry, mpConferenceParticipantsEndpointId=mpConferenceParticipantsEndpointId, mpConferenceParticipantsOutputAudioGain=mpConferenceParticipantsOutputAudioGain, mpConfigMaxAudioMixCount=mpConfigMaxAudioMixCount, mpConferenceParticipantsTableIndex=mpConferenceParticipantsTableIndex, mpConference=mpConference, mpConferenceGlobalVideoMixTable=mpConferenceGlobalVideoMixTable, mpConferenceParticipantsVoiceActivity=mpConferenceParticipantsVoiceActivity, mpMIBGroups=mpMIBGroups, h323MP=h323MP, mpConferenceParticipantsTotalPacketsTransmitted=mpConferenceParticipantsTotalPacketsTransmitted, mpConferenceParticipantsTotalPacketsReceived=mpConferenceParticipantsTotalPacketsReceived, mpConferenceParticipantsLateAudioPacketsDropped=mpConferenceParticipantsLateAudioPacketsDropped, mpConferenceAudioNoiseThreshold=mpConferenceAudioNoiseThreshold, mpConferenceParticipantsMaxAudioDecoderPayloadSize=mpConferenceParticipantsMaxAudioDecoderPayloadSize, mpConferenceParticipantsLoudnessMeasurement=mpConferenceParticipantsLoudnessMeasurement, mpConferenceGlobalAudioMixTableEntry=mpConferenceGlobalAudioMixTableEntry, mpConferenceGlobalAudioMixTerminalIdentifier=mpConferenceGlobalAudioMixTerminalIdentifier, mpConferenceTableEntry=mpConferenceTableEntry, mpConferenceParticipantsInputAudioGain=mpConferenceParticipantsInputAudioGain, mpConferenceGlobalAudioMixTable=mpConferenceGlobalAudioMixTable, mpConferenceGlobalVideoMixTableEntry=mpConferenceGlobalVideoMixTableEntry)
