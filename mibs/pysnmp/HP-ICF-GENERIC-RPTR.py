#
# PySNMP MIB module HP-ICF-GENERIC-RPTR (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/HP-ICF-GENERIC-RPTR
# Produced by pysmi-0.3.4 at Mon Apr 29 19:21:25 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ConstraintsUnion, ValueRangeConstraint, ValueSizeConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ConstraintsUnion", "ValueRangeConstraint", "ValueSizeConstraint", "ConstraintsIntersection")
hpicfObjectModules, icfHub, hpicfGenericRepeater, hpicfGenRptrTrapsPrefix = mibBuilder.importSymbols("HP-ICF-OID", "hpicfObjectModules", "icfHub", "hpicfGenericRepeater", "hpicfGenRptrTrapsPrefix")
ObjectGroup, ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "ModuleCompliance", "NotificationGroup")
ObjectIdentity, Unsigned32, MibScalar, MibTable, MibTableRow, MibTableColumn, MibIdentifier, Gauge32, ModuleIdentity, TimeTicks, iso, Counter64, Counter32, Integer32, IpAddress, NotificationType, Bits = mibBuilder.importSymbols("SNMPv2-SMI", "ObjectIdentity", "Unsigned32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "MibIdentifier", "Gauge32", "ModuleIdentity", "TimeTicks", "iso", "Counter64", "Counter32", "Integer32", "IpAddress", "NotificationType", "Bits")
DisplayString, RowStatus, TextualConvention, TimeStamp, MacAddress = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "RowStatus", "TextualConvention", "TimeStamp", "MacAddress")
hpicfGenRptrMib = ModuleIdentity((1, 3, 6, 1, 4, 1, 11, 2, 14, 10, 2, 8))
hpicfGenRptrMib.setRevisions(('2009-10-26 12:03', '2003-06-09 22:37', '2000-11-03 07:17', '1998-07-23 01:03', '1997-03-06 03:37', '1996-09-10 02:28', '1995-10-23 23:47', '1995-01-18 00:00', '1993-07-09 00:00',))
if mibBuilder.loadTexts: hpicfGenRptrMib.setLastUpdated('200910261203Z')
if mibBuilder.loadTexts: hpicfGenRptrMib.setOrganization('HP Networking')
hpGRpBasic = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 4, 1))
hpGRpBasicGlobal = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 4, 1, 1))
hpGRpSelfHealEnable = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 4, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpGRpSelfHealEnable.setStatus('current')
hpGRpRepeaterTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 4, 1, 1, 2), )
if mibBuilder.loadTexts: hpGRpRepeaterTable.setStatus('current')
hpGRpRepeaterEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 4, 1, 1, 2, 1), ).setIndexNames((0, "HP-ICF-GENERIC-RPTR", "hpGRpRepeaterIndex"))
if mibBuilder.loadTexts: hpGRpRepeaterEntry.setStatus('current')
hpGRpRepeaterIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 4, 1, 1, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: hpGRpRepeaterIndex.setStatus('current')
hpGRpRepeaterIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 4, 1, 1, 2, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpGRpRepeaterIfIndex.setStatus('current')
hpGRpRepeaterName = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 4, 1, 1, 2, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpGRpRepeaterName.setStatus('current')
hpGRpRepeaterVlanIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 4, 1, 1, 2, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpGRpRepeaterVlanIndex.setStatus('current')
hubSecurity = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 2, 10))
hubSecurePortTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 2, 10, 1), )
if mibBuilder.loadTexts: hubSecurePortTable.setStatus('current')
hubSecurePortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 2, 10, 1, 1), ).setIndexNames((0, "HP-ICF-GENERIC-RPTR", "hubSecPtGroupIndex"), (0, "HP-ICF-GENERIC-RPTR", "hubSecPtPortIndex"))
if mibBuilder.loadTexts: hubSecurePortEntry.setStatus('current')
hubSecPtGroupIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 2, 10, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hubSecPtGroupIndex.setStatus('current')
hubSecPtPortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 2, 10, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hubSecPtPortIndex.setStatus('current')
hubSecPtSecurityAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 2, 10, 1, 1, 3), MacAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hubSecPtSecurityAddress.setStatus('current')
hubSecPtAuthorizedAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 2, 10, 1, 1, 4), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hubSecPtAuthorizedAddress.setStatus('current')
hubSecPtPreventEavesdrop = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 2, 10, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hubSecPtPreventEavesdrop.setStatus('current')
hubSecPtAlarmEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 2, 10, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hubSecPtAlarmEnable.setStatus('current')
hubSecPtIntrusionFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 2, 10, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("intrusion", 1), ("noIntrusion", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hubSecPtIntrusionFlag.setStatus('current')
hubIntruderLogTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 2, 10, 2), )
if mibBuilder.loadTexts: hubIntruderLogTable.setStatus('current')
hubIntruderLogEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 2, 10, 2, 1), ).setIndexNames((0, "HP-ICF-GENERIC-RPTR", "hubIntruderIndex"))
if mibBuilder.loadTexts: hubIntruderLogEntry.setStatus('current')
hubIntruderIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 2, 10, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 20))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hubIntruderIndex.setStatus('current')
hubIntruderGroup = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 2, 10, 2, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hubIntruderGroup.setStatus('current')
hubIntruderPort = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 2, 10, 2, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hubIntruderPort.setStatus('current')
hubIntruderAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 2, 10, 2, 1, 4), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hubIntruderAddress.setStatus('current')
hubIntruderTime = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 2, 10, 2, 1, 5), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hubIntruderTime.setStatus('current')
hubIntruderType = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 2, 10, 2, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("address", 1), ("training", 2), ("both", 3), ("none", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hubIntruderType.setStatus('current')
hubIntruderTrainingViolation = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 2, 10, 2, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("noViolation", 1), ("promiscuousViolation", 2), ("repeaterViolation", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hubIntruderTrainingViolation.setStatus('current')
hpSecurePortTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 2, 10, 3), )
if mibBuilder.loadTexts: hpSecurePortTable.setStatus('current')
hpSecurePortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 2, 10, 3, 1), ).setIndexNames((0, "HP-ICF-GENERIC-RPTR", "hpSecPtGroupIndex"), (0, "HP-ICF-GENERIC-RPTR", "hpSecPtPortIndex"))
if mibBuilder.loadTexts: hpSecurePortEntry.setStatus('current')
hpSecPtGroupIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 2, 10, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: hpSecPtGroupIndex.setStatus('current')
hpSecPtPortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 2, 10, 3, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: hpSecPtPortIndex.setStatus('current')
hpSecPtAddressLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 2, 10, 3, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpSecPtAddressLimit.setStatus('deprecated')
hpSecPtLearnMode = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 2, 10, 3, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("learnContinuous", 1), ("learnFirstN", 2), ("learnFirstNConditionally", 3), ("configureSpecific", 4), ("learn8021xAuthorized", 5), ("learnLimitedContinuous", 6)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpSecPtLearnMode.setStatus('current')
hpSecPtPreventEavesdrop = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 2, 10, 3, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpSecPtPreventEavesdrop.setStatus('deprecated')
hpSecPtAlarmEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 2, 10, 3, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("disable", 1), ("sendTrap", 2), ("sendTrapAndDisablePort", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpSecPtAlarmEnable.setStatus('current')
hpSecPtIntrusionFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 2, 10, 3, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("intrusion", 1), ("noIntrusion", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpSecPtIntrusionFlag.setStatus('current')
hpSecPtAddressLimit2 = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 2, 10, 3, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpSecPtAddressLimit2.setStatus('current')
hpSecureCfgAddrTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 2, 10, 4), )
if mibBuilder.loadTexts: hpSecureCfgAddrTable.setStatus('current')
hpSecureCfgAddrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 2, 10, 4, 1), ).setIndexNames((0, "HP-ICF-GENERIC-RPTR", "hpSecCfgAddrGroupIndex"), (0, "HP-ICF-GENERIC-RPTR", "hpSecCfgAddrPortIndex"), (0, "HP-ICF-GENERIC-RPTR", "hpSecCfgAddress"))
if mibBuilder.loadTexts: hpSecureCfgAddrEntry.setStatus('current')
hpSecCfgAddrGroupIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 2, 10, 4, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: hpSecCfgAddrGroupIndex.setStatus('current')
hpSecCfgAddrPortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 2, 10, 4, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: hpSecCfgAddrPortIndex.setStatus('current')
hpSecCfgAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 2, 10, 4, 1, 3), MacAddress())
if mibBuilder.loadTexts: hpSecCfgAddress.setStatus('current')
hpSecCfgStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 2, 10, 4, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpSecCfgStatus.setStatus('current')
hpSecureAuthAddrTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 2, 10, 5), )
if mibBuilder.loadTexts: hpSecureAuthAddrTable.setStatus('current')
hpSecureAuthAddrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 2, 10, 5, 1), ).setIndexNames((0, "HP-ICF-GENERIC-RPTR", "hpSecAuthAddrGroupIndex"), (0, "HP-ICF-GENERIC-RPTR", "hpSecAuthAddrPortIndex"), (0, "HP-ICF-GENERIC-RPTR", "hpSecAuthAddress"))
if mibBuilder.loadTexts: hpSecureAuthAddrEntry.setStatus('current')
hpSecAuthAddrGroupIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 2, 10, 5, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: hpSecAuthAddrGroupIndex.setStatus('current')
hpSecAuthAddrPortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 2, 10, 5, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: hpSecAuthAddrPortIndex.setStatus('current')
hpSecAuthAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 2, 10, 5, 1, 3), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpSecAuthAddress.setStatus('current')
hpicfGRpBackupLinks = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 4, 2))
hpicfBackupLinkNextIndex = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 4, 2, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpicfBackupLinkNextIndex.setStatus('current')
hpicfBackupLinkTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 4, 2, 2), )
if mibBuilder.loadTexts: hpicfBackupLinkTable.setStatus('current')
hpicfBackupLinkEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 4, 2, 2, 1), ).setIndexNames((0, "HP-ICF-GENERIC-RPTR", "hpicfBackupLinkIndex"))
if mibBuilder.loadTexts: hpicfBackupLinkEntry.setStatus('current')
hpicfBackupLinkIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 4, 2, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)))
if mibBuilder.loadTexts: hpicfBackupLinkIndex.setStatus('current')
hpicfBackupLinkPrimaryGroup = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 4, 2, 2, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpicfBackupLinkPrimaryGroup.setStatus('current')
hpicfBackupLinkPrimaryPort = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 4, 2, 2, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpicfBackupLinkPrimaryPort.setStatus('current')
hpicfBackupLinkBackupGroup = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 4, 2, 2, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpicfBackupLinkBackupGroup.setStatus('current')
hpicfBackupLinkBackupPort = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 4, 2, 2, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpicfBackupLinkBackupPort.setStatus('current')
hpicfBackupLinkAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 4, 2, 2, 1, 6), MacAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpicfBackupLinkAddress.setStatus('current')
hpicfBackupLinkTestTime = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 4, 2, 2, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 15)).clone(1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpicfBackupLinkTestTime.setStatus('current')
hpicfBackupLinkConsecFailures = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 4, 2, 2, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16)).clone(2)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpicfBackupLinkConsecFailures.setStatus('current')
hpicfBackupLinkState = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 4, 2, 2, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("notActive", 1), ("usingPrimary", 2), ("usingBackup", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfBackupLinkState.setStatus('current')
hpicfBackupLinkFailEventIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 4, 2, 2, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpicfBackupLinkFailEventIndex.setStatus('current')
hpicfBackupLinkStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 4, 2, 2, 1, 11), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpicfBackupLinkStatus.setStatus('current')
hpGRpPortMapping = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 4, 3))
hpGRpPMSegmentTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 4, 3, 1), )
if mibBuilder.loadTexts: hpGRpPMSegmentTable.setStatus('current')
hpGRpPMSegmentEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 4, 3, 1, 1), ).setIndexNames((0, "HP-ICF-GENERIC-RPTR", "hpGRpPMSegmentIndex"))
if mibBuilder.loadTexts: hpGRpPMSegmentEntry.setStatus('current')
hpGRpPMSegmentIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 4, 3, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: hpGRpPMSegmentIndex.setStatus('current')
hpGRpPMCurrentRptrIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 4, 3, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpGRpPMCurrentRptrIndex.setStatus('current')
hpGRpPMSegAllowedRptrTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 4, 3, 2), )
if mibBuilder.loadTexts: hpGRpPMSegAllowedRptrTable.setStatus('current')
hpGRpPMSegAllowedRptrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 4, 3, 2, 1), ).setIndexNames((0, "HP-ICF-GENERIC-RPTR", "hpGRpPMSegmentIndex"), (0, "HP-ICF-GENERIC-RPTR", "hpGRpPMSegAllowedRptrIndex"))
if mibBuilder.loadTexts: hpGRpPMSegAllowedRptrEntry.setStatus('current')
hpGRpPMSegAllowedRptrIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 4, 3, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpGRpPMSegAllowedRptrIndex.setStatus('current')
hpGRpPMPortTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 4, 3, 3), )
if mibBuilder.loadTexts: hpGRpPMPortTable.setStatus('current')
hpGRpPMPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 4, 3, 3, 1), ).setIndexNames((0, "HP-ICF-GENERIC-RPTR", "hpGRpPMPortGroupIndex"), (0, "HP-ICF-GENERIC-RPTR", "hpGRpPMPortIndex"))
if mibBuilder.loadTexts: hpGRpPMPortEntry.setStatus('current')
hpGRpPMPortGroupIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 4, 3, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: hpGRpPMPortGroupIndex.setStatus('current')
hpGRpPMPortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 4, 3, 3, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: hpGRpPMPortIndex.setStatus('current')
hpGRpPMPortEntPhysicalIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 4, 3, 3, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpGRpPMPortEntPhysicalIndex.setStatus('current')
hpGRpPMPortCurrentRptrIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 4, 3, 3, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpGRpPMPortCurrentRptrIndex.setStatus('current')
hpGRpPMPortAllowedRptrTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 4, 3, 4), )
if mibBuilder.loadTexts: hpGRpPMPortAllowedRptrTable.setStatus('current')
hpGRpPMPortAllowedRptrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 4, 3, 4, 1), ).setIndexNames((0, "HP-ICF-GENERIC-RPTR", "hpGRpPMPortGroupIndex"), (0, "HP-ICF-GENERIC-RPTR", "hpGRpPMPortIndex"), (0, "HP-ICF-GENERIC-RPTR", "hpGRpPMPortAllowedRptrIndex"))
if mibBuilder.loadTexts: hpGRpPMPortAllowedRptrEntry.setStatus('current')
hpGRpPMPortAllowedRptrIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 4, 3, 4, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpGRpPMPortAllowedRptrIndex.setStatus('current')
hpGRpLoadBalancing = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 4, 4))
hpGRpPortMapAutoConfigEnable = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 4, 4, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpGRpPortMapAutoConfigEnable.setStatus('current')
hpGRpLoadBalanceNow = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 4, 4, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("cantUndo", 1), ("balancing", 2), ("completed", 3), ("undoLast", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpGRpLoadBalanceNow.setStatus('current')
hpGRpLastLoadBalanceTime = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 4, 4, 3), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpGRpLastLoadBalanceTime.setStatus('current')
hpicfGRpSwitchConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 4, 5))
hpicfGRpSwitchTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 4, 5, 1), )
if mibBuilder.loadTexts: hpicfGRpSwitchTable.setStatus('current')
hpicfGRpSwitchEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 4, 5, 1, 1), ).setIndexNames((0, "HP-ICF-GENERIC-RPTR", "hpicfGRpSwitchIndex"))
if mibBuilder.loadTexts: hpicfGRpSwitchEntry.setStatus('current')
hpicfGRpSwitchIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 4, 5, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 31)))
if mibBuilder.loadTexts: hpicfGRpSwitchIndex.setStatus('current')
hpicfGRpSwitchType = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 4, 5, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("internal", 1), ("external", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfGRpSwitchType.setStatus('current')
hpicfGRpSwitchEntPhysicalIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 4, 5, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfGRpSwitchEntPhysicalIndex.setStatus('current')
hpicfGRpSwitchLinkCount = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 4, 5, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpicfGRpSwitchLinkCount.setStatus('current')
hpicfGRpSwitchStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 4, 5, 1, 1, 5), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpicfGRpSwitchStatus.setStatus('current')
hpicfGRpSwitchLinkTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 4, 5, 2), )
if mibBuilder.loadTexts: hpicfGRpSwitchLinkTable.setStatus('current')
hpicfGRpSwitchLinkEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 4, 5, 2, 1), ).setIndexNames((0, "HP-ICF-GENERIC-RPTR", "hpicfGRpSwitchIndex"), (0, "HP-ICF-GENERIC-RPTR", "hpicfGRpSwitchLinkIndex"))
if mibBuilder.loadTexts: hpicfGRpSwitchLinkEntry.setStatus('current')
hpicfGRpSwitchLinkIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 4, 5, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255)))
if mibBuilder.loadTexts: hpicfGRpSwitchLinkIndex.setStatus('current')
hpicfGRpSwitchLinkRptrGroup = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 4, 5, 2, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpicfGRpSwitchLinkRptrGroup.setStatus('current')
hpicfGRpSwitchLinkRptrPort = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 4, 5, 2, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpicfGRpSwitchLinkRptrPort.setStatus('current')
hpicfGRpSwitchLinkState = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 4, 5, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("active", 1), ("redundant", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpicfGRpSwitchLinkState.setStatus('current')
hpicfGRpCurrentPrimarySwitch = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 4, 5, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 31))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfGRpCurrentPrimarySwitch.setStatus('current')
hpicfGRpDesiredPrimarySwitch = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 4, 5, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpicfGRpDesiredPrimarySwitch.setStatus('current')
hpicfGRpBridge = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 4, 6))
hpGRpBridgeAdminStatus = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 4, 6, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpGRpBridgeAdminStatus.setStatus('current')
hpicfIntrusionTrap = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 14, 12, 4, 0, 1)).setObjects(("HP-ICF-GENERIC-RPTR", "hubIntruderGroup"), ("HP-ICF-GENERIC-RPTR", "hubIntruderPort"), ("HP-ICF-GENERIC-RPTR", "hubIntruderAddress"), ("HP-ICF-GENERIC-RPTR", "hubIntruderType"), ("HP-ICF-GENERIC-RPTR", "hubIntruderTrainingViolation"))
if mibBuilder.loadTexts: hpicfIntrusionTrap.setStatus('current')
hpicfBackupLinkTrap = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 14, 12, 4, 0, 2)).setObjects(("HP-ICF-GENERIC-RPTR", "hpicfBackupLinkState"))
if mibBuilder.loadTexts: hpicfBackupLinkTrap.setStatus('current')
hpicfGenRptrConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 10, 2, 8, 1))
hpicfGenRptrCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 10, 2, 8, 1, 1))
hpicfGenRptrGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 10, 2, 8, 1, 2))
hpicfHubSecurityCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 11, 2, 14, 10, 2, 8, 1, 1, 1)).setObjects(("HP-ICF-GENERIC-RPTR", "hpicfHubSecurityGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfHubSecurityCompliance = hpicfHubSecurityCompliance.setStatus('deprecated')
hpicfGenRptrBasicCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 11, 2, 14, 10, 2, 8, 1, 1, 2)).setObjects(("HP-ICF-GENERIC-RPTR", "hpicfGenRptrBasicGroup"), ("HP-ICF-GENERIC-RPTR", "hpicfGenRptrSecPtGroup"), ("HP-ICF-GENERIC-RPTR", "hpicfGenRptrSecNotifyGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfGenRptrBasicCompliance = hpicfGenRptrBasicCompliance.setStatus('deprecated')
hpicfGenRptrSecurityCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 11, 2, 14, 10, 2, 8, 1, 1, 3)).setObjects(("HP-ICF-GENERIC-RPTR", "hpicfGenRptrSecPtGroup"), ("HP-ICF-GENERIC-RPTR", "hpicfGenRptrSecNotifyGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfGenRptrSecurityCompliance = hpicfGenRptrSecurityCompliance.setStatus('deprecated')
hpicfGenRptrCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 11, 2, 14, 10, 2, 8, 1, 1, 4)).setObjects(("HP-ICF-GENERIC-RPTR", "hpicfGenRptrBasicGroup"), ("HP-ICF-GENERIC-RPTR", "hpicfGenRptrInfoGroup"), ("HP-ICF-GENERIC-RPTR", "hpicfGenRptrSecPtGroup"), ("HP-ICF-GENERIC-RPTR", "hpicfGenRptrSecNotifyGroup"), ("HP-ICF-GENERIC-RPTR", "hpicfGenRptrBkpLinkGroup"), ("HP-ICF-GENERIC-RPTR", "hpicfGenRptrBkpLinkNotifyGroup"), ("HP-ICF-GENERIC-RPTR", "hpicfGenRptrPortMappingGroup"), ("HP-ICF-GENERIC-RPTR", "hpicfGenRptrLoadBalanceGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfGenRptrCompliance = hpicfGenRptrCompliance.setStatus('deprecated')
hpicfGenRptrCompliance2 = ModuleCompliance((1, 3, 6, 1, 4, 1, 11, 2, 14, 10, 2, 8, 1, 1, 5)).setObjects(("HP-ICF-GENERIC-RPTR", "hpicfGenRptrBasicGroup"), ("HP-ICF-GENERIC-RPTR", "hpicfGenRptrInfoGroup"), ("HP-ICF-GENERIC-RPTR", "hpicfGenRptrSecPtGroup"), ("HP-ICF-GENERIC-RPTR", "hpicfGenRptrSecNotifyGroup"), ("HP-ICF-GENERIC-RPTR", "hpicfGenRptrBkpLinkGroup"), ("HP-ICF-GENERIC-RPTR", "hpicfGenRptrBkpLinkNotifyGroup"), ("HP-ICF-GENERIC-RPTR", "hpicfGenRptrPortMappingGroup"), ("HP-ICF-GENERIC-RPTR", "hpicfGenRptrLoadBalanceGroup"), ("HP-ICF-GENERIC-RPTR", "hpicfGenRptrSwitchConfigGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfGenRptrCompliance2 = hpicfGenRptrCompliance2.setStatus('current')
hpicfGenRptrCompliance3 = ModuleCompliance((1, 3, 6, 1, 4, 1, 11, 2, 14, 10, 2, 8, 1, 1, 6)).setObjects(("HP-ICF-GENERIC-RPTR", "hpicfGenRptrBasicGroup"), ("HP-ICF-GENERIC-RPTR", "hpicfGenRptrInfoGroup"), ("HP-ICF-GENERIC-RPTR", "hpicfGenRptrSecPtGroup"), ("HP-ICF-GENERIC-RPTR", "hpicfSecPtGroup"), ("HP-ICF-GENERIC-RPTR", "hpicfGenRptrSecNotifyGroup"), ("HP-ICF-GENERIC-RPTR", "hpicfGenRptrBkpLinkGroup"), ("HP-ICF-GENERIC-RPTR", "hpicfGenRptrBkpLinkNotifyGroup"), ("HP-ICF-GENERIC-RPTR", "hpicfGenRptrPortMappingGroup"), ("HP-ICF-GENERIC-RPTR", "hpicfGenRptrLoadBalanceGroup"), ("HP-ICF-GENERIC-RPTR", "hpicfGenRptrSwitchConfigGroup"), ("HP-ICF-GENERIC-RPTR", "hpicfGenRptrBridgeGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfGenRptrCompliance3 = hpicfGenRptrCompliance3.setStatus('current')
hpicfGenRptrMultiSecOnlyCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 11, 2, 14, 10, 2, 8, 1, 1, 7)).setObjects(("HP-ICF-GENERIC-RPTR", "hpicfSecPtGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfGenRptrMultiSecOnlyCompliance = hpicfGenRptrMultiSecOnlyCompliance.setStatus('deprecated')
hpicfGenRptrMultiSecOnlyCompliance2 = ModuleCompliance((1, 3, 6, 1, 4, 1, 11, 2, 14, 10, 2, 8, 1, 1, 8)).setObjects(("HP-ICF-GENERIC-RPTR", "hpicfSecPtGroup2"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfGenRptrMultiSecOnlyCompliance2 = hpicfGenRptrMultiSecOnlyCompliance2.setStatus('deprecated')
hpicfGenRptrMultiSecOnlyCompliance3 = ModuleCompliance((1, 3, 6, 1, 4, 1, 11, 2, 14, 10, 2, 8, 1, 1, 9)).setObjects(("HP-ICF-GENERIC-RPTR", "hpicfSecPtGroup3"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfGenRptrMultiSecOnlyCompliance3 = hpicfGenRptrMultiSecOnlyCompliance3.setStatus('current')
hpicfHubSecurityGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 10, 2, 8, 1, 2, 1)).setObjects(("HP-ICF-GENERIC-RPTR", "hubSecPtGroupIndex"), ("HP-ICF-GENERIC-RPTR", "hubSecPtPortIndex"), ("HP-ICF-GENERIC-RPTR", "hubSecPtSecurityAddress"), ("HP-ICF-GENERIC-RPTR", "hubSecPtAuthorizedAddress"), ("HP-ICF-GENERIC-RPTR", "hubSecPtPreventEavesdrop"), ("HP-ICF-GENERIC-RPTR", "hubSecPtAlarmEnable"), ("HP-ICF-GENERIC-RPTR", "hubSecPtIntrusionFlag"), ("HP-ICF-GENERIC-RPTR", "hubIntruderIndex"), ("HP-ICF-GENERIC-RPTR", "hubIntruderGroup"), ("HP-ICF-GENERIC-RPTR", "hubIntruderPort"), ("HP-ICF-GENERIC-RPTR", "hubIntruderAddress"), ("HP-ICF-GENERIC-RPTR", "hubIntruderTime"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfHubSecurityGroup = hpicfHubSecurityGroup.setStatus('deprecated')
hpicfGenRptrBasicGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 10, 2, 8, 1, 2, 2)).setObjects(("HP-ICF-GENERIC-RPTR", "hpGRpSelfHealEnable"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfGenRptrBasicGroup = hpicfGenRptrBasicGroup.setStatus('current')
hpicfGenRptrSecPtGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 10, 2, 8, 1, 2, 3)).setObjects(("HP-ICF-GENERIC-RPTR", "hubSecPtGroupIndex"), ("HP-ICF-GENERIC-RPTR", "hubSecPtPortIndex"), ("HP-ICF-GENERIC-RPTR", "hubSecPtSecurityAddress"), ("HP-ICF-GENERIC-RPTR", "hubSecPtAuthorizedAddress"), ("HP-ICF-GENERIC-RPTR", "hubSecPtPreventEavesdrop"), ("HP-ICF-GENERIC-RPTR", "hubSecPtAlarmEnable"), ("HP-ICF-GENERIC-RPTR", "hubSecPtIntrusionFlag"), ("HP-ICF-GENERIC-RPTR", "hubIntruderIndex"), ("HP-ICF-GENERIC-RPTR", "hubIntruderGroup"), ("HP-ICF-GENERIC-RPTR", "hubIntruderPort"), ("HP-ICF-GENERIC-RPTR", "hubIntruderAddress"), ("HP-ICF-GENERIC-RPTR", "hubIntruderTime"), ("HP-ICF-GENERIC-RPTR", "hubIntruderType"), ("HP-ICF-GENERIC-RPTR", "hubIntruderTrainingViolation"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfGenRptrSecPtGroup = hpicfGenRptrSecPtGroup.setStatus('current')
hpicfGenRptrInfoGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 10, 2, 8, 1, 2, 4)).setObjects(("HP-ICF-GENERIC-RPTR", "hpGRpRepeaterIfIndex"), ("HP-ICF-GENERIC-RPTR", "hpGRpRepeaterName"), ("HP-ICF-GENERIC-RPTR", "hpGRpRepeaterVlanIndex"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfGenRptrInfoGroup = hpicfGenRptrInfoGroup.setStatus('current')
hpicfGenRptrBkpLinkGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 10, 2, 8, 1, 2, 5)).setObjects(("HP-ICF-GENERIC-RPTR", "hpicfBackupLinkNextIndex"), ("HP-ICF-GENERIC-RPTR", "hpicfBackupLinkPrimaryGroup"), ("HP-ICF-GENERIC-RPTR", "hpicfBackupLinkPrimaryPort"), ("HP-ICF-GENERIC-RPTR", "hpicfBackupLinkBackupGroup"), ("HP-ICF-GENERIC-RPTR", "hpicfBackupLinkBackupPort"), ("HP-ICF-GENERIC-RPTR", "hpicfBackupLinkAddress"), ("HP-ICF-GENERIC-RPTR", "hpicfBackupLinkTestTime"), ("HP-ICF-GENERIC-RPTR", "hpicfBackupLinkConsecFailures"), ("HP-ICF-GENERIC-RPTR", "hpicfBackupLinkState"), ("HP-ICF-GENERIC-RPTR", "hpicfBackupLinkFailEventIndex"), ("HP-ICF-GENERIC-RPTR", "hpicfBackupLinkStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfGenRptrBkpLinkGroup = hpicfGenRptrBkpLinkGroup.setStatus('current')
hpicfGenRptrPortMappingGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 10, 2, 8, 1, 2, 6)).setObjects(("HP-ICF-GENERIC-RPTR", "hpGRpPMCurrentRptrIndex"), ("HP-ICF-GENERIC-RPTR", "hpGRpPMSegAllowedRptrIndex"), ("HP-ICF-GENERIC-RPTR", "hpGRpPMPortEntPhysicalIndex"), ("HP-ICF-GENERIC-RPTR", "hpGRpPMPortCurrentRptrIndex"), ("HP-ICF-GENERIC-RPTR", "hpGRpPMPortAllowedRptrIndex"), ("HP-ICF-GENERIC-RPTR", "hpGRpPortMapAutoConfigEnable"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfGenRptrPortMappingGroup = hpicfGenRptrPortMappingGroup.setStatus('current')
hpicfGenRptrLoadBalanceGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 10, 2, 8, 1, 2, 7)).setObjects(("HP-ICF-GENERIC-RPTR", "hpGRpLoadBalanceNow"), ("HP-ICF-GENERIC-RPTR", "hpGRpLastLoadBalanceTime"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfGenRptrLoadBalanceGroup = hpicfGenRptrLoadBalanceGroup.setStatus('current')
hpicfGenRptrSwitchConfigGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 10, 2, 8, 1, 2, 8)).setObjects(("HP-ICF-GENERIC-RPTR", "hpicfGRpSwitchType"), ("HP-ICF-GENERIC-RPTR", "hpicfGRpSwitchEntPhysicalIndex"), ("HP-ICF-GENERIC-RPTR", "hpicfGRpSwitchLinkCount"), ("HP-ICF-GENERIC-RPTR", "hpicfGRpSwitchStatus"), ("HP-ICF-GENERIC-RPTR", "hpicfGRpSwitchLinkRptrGroup"), ("HP-ICF-GENERIC-RPTR", "hpicfGRpSwitchLinkRptrPort"), ("HP-ICF-GENERIC-RPTR", "hpicfGRpSwitchLinkState"), ("HP-ICF-GENERIC-RPTR", "hpicfGRpCurrentPrimarySwitch"), ("HP-ICF-GENERIC-RPTR", "hpicfGRpDesiredPrimarySwitch"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfGenRptrSwitchConfigGroup = hpicfGenRptrSwitchConfigGroup.setStatus('current')
hpicfGenRptrSecNotifyGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 10, 2, 8, 1, 2, 9)).setObjects(("HP-ICF-GENERIC-RPTR", "hpicfIntrusionTrap"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfGenRptrSecNotifyGroup = hpicfGenRptrSecNotifyGroup.setStatus('current')
hpicfGenRptrBkpLinkNotifyGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 10, 2, 8, 1, 2, 10)).setObjects(("HP-ICF-GENERIC-RPTR", "hpicfBackupLinkTrap"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfGenRptrBkpLinkNotifyGroup = hpicfGenRptrBkpLinkNotifyGroup.setStatus('current')
hpicfSecPtGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 10, 2, 8, 1, 2, 11)).setObjects(("HP-ICF-GENERIC-RPTR", "hpSecPtAddressLimit"), ("HP-ICF-GENERIC-RPTR", "hpSecPtLearnMode"), ("HP-ICF-GENERIC-RPTR", "hpSecPtPreventEavesdrop"), ("HP-ICF-GENERIC-RPTR", "hpSecPtAlarmEnable"), ("HP-ICF-GENERIC-RPTR", "hpSecPtIntrusionFlag"), ("HP-ICF-GENERIC-RPTR", "hpSecCfgStatus"), ("HP-ICF-GENERIC-RPTR", "hpSecAuthAddress"), ("HP-ICF-GENERIC-RPTR", "hubIntruderIndex"), ("HP-ICF-GENERIC-RPTR", "hubIntruderGroup"), ("HP-ICF-GENERIC-RPTR", "hubIntruderPort"), ("HP-ICF-GENERIC-RPTR", "hubIntruderAddress"), ("HP-ICF-GENERIC-RPTR", "hubIntruderTime"), ("HP-ICF-GENERIC-RPTR", "hubIntruderType"), ("HP-ICF-GENERIC-RPTR", "hubIntruderTrainingViolation"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfSecPtGroup = hpicfSecPtGroup.setStatus('deprecated')
hpicfGenRptrBridgeGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 10, 2, 8, 1, 2, 12)).setObjects(("HP-ICF-GENERIC-RPTR", "hpGRpBridgeAdminStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfGenRptrBridgeGroup = hpicfGenRptrBridgeGroup.setStatus('current')
hpicfSecPtGroup2 = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 10, 2, 8, 1, 2, 13)).setObjects(("HP-ICF-GENERIC-RPTR", "hpSecPtAddressLimit"), ("HP-ICF-GENERIC-RPTR", "hpSecPtLearnMode"), ("HP-ICF-GENERIC-RPTR", "hpSecPtAlarmEnable"), ("HP-ICF-GENERIC-RPTR", "hpSecPtIntrusionFlag"), ("HP-ICF-GENERIC-RPTR", "hpSecCfgStatus"), ("HP-ICF-GENERIC-RPTR", "hpSecAuthAddress"), ("HP-ICF-GENERIC-RPTR", "hubIntruderIndex"), ("HP-ICF-GENERIC-RPTR", "hubIntruderGroup"), ("HP-ICF-GENERIC-RPTR", "hubIntruderPort"), ("HP-ICF-GENERIC-RPTR", "hubIntruderAddress"), ("HP-ICF-GENERIC-RPTR", "hubIntruderTime"), ("HP-ICF-GENERIC-RPTR", "hubIntruderType"), ("HP-ICF-GENERIC-RPTR", "hubIntruderTrainingViolation"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfSecPtGroup2 = hpicfSecPtGroup2.setStatus('deprecated')
hpicfSecPtGroup3 = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 10, 2, 8, 1, 2, 14)).setObjects(("HP-ICF-GENERIC-RPTR", "hpSecPtAddressLimit"), ("HP-ICF-GENERIC-RPTR", "hpSecPtLearnMode"), ("HP-ICF-GENERIC-RPTR", "hpSecPtAlarmEnable"), ("HP-ICF-GENERIC-RPTR", "hpSecPtIntrusionFlag"), ("HP-ICF-GENERIC-RPTR", "hpSecCfgStatus"), ("HP-ICF-GENERIC-RPTR", "hpSecAuthAddress"), ("HP-ICF-GENERIC-RPTR", "hubIntruderIndex"), ("HP-ICF-GENERIC-RPTR", "hubIntruderGroup"), ("HP-ICF-GENERIC-RPTR", "hubIntruderPort"), ("HP-ICF-GENERIC-RPTR", "hubIntruderAddress"), ("HP-ICF-GENERIC-RPTR", "hubIntruderTime"), ("HP-ICF-GENERIC-RPTR", "hubIntruderType"), ("HP-ICF-GENERIC-RPTR", "hubIntruderTrainingViolation"), ("HP-ICF-GENERIC-RPTR", "hpSecPtAddressLimit2"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfSecPtGroup3 = hpicfSecPtGroup3.setStatus('current')
mibBuilder.exportSymbols("HP-ICF-GENERIC-RPTR", hpicfGenRptrConformance=hpicfGenRptrConformance, hpGRpPMSegmentIndex=hpGRpPMSegmentIndex, hpGRpBasicGlobal=hpGRpBasicGlobal, hpSecureCfgAddrTable=hpSecureCfgAddrTable, hpicfHubSecurityCompliance=hpicfHubSecurityCompliance, hpicfSecPtGroup2=hpicfSecPtGroup2, hpicfGRpSwitchLinkCount=hpicfGRpSwitchLinkCount, hubSecPtGroupIndex=hubSecPtGroupIndex, hubSecurePortEntry=hubSecurePortEntry, hubIntruderLogTable=hubIntruderLogTable, hubSecPtAuthorizedAddress=hubSecPtAuthorizedAddress, hpicfGenRptrSwitchConfigGroup=hpicfGenRptrSwitchConfigGroup, hpicfGRpSwitchType=hpicfGRpSwitchType, hpSecPtIntrusionFlag=hpSecPtIntrusionFlag, hpGRpPMSegmentEntry=hpGRpPMSegmentEntry, hpicfGenRptrBridgeGroup=hpicfGenRptrBridgeGroup, hpSecAuthAddrPortIndex=hpSecAuthAddrPortIndex, hpSecCfgAddress=hpSecCfgAddress, hpGRpBridgeAdminStatus=hpGRpBridgeAdminStatus, hpicfGRpBackupLinks=hpicfGRpBackupLinks, hpicfGRpSwitchEntry=hpicfGRpSwitchEntry, hpicfGRpSwitchLinkEntry=hpicfGRpSwitchLinkEntry, hpicfBackupLinkEntry=hpicfBackupLinkEntry, hpicfGenRptrMultiSecOnlyCompliance2=hpicfGenRptrMultiSecOnlyCompliance2, hubSecurity=hubSecurity, hpicfBackupLinkPrimaryGroup=hpicfBackupLinkPrimaryGroup, hpSecPtPreventEavesdrop=hpSecPtPreventEavesdrop, hpGRpPMPortCurrentRptrIndex=hpGRpPMPortCurrentRptrIndex, hpicfGenRptrBasicCompliance=hpicfGenRptrBasicCompliance, hpicfGRpSwitchEntPhysicalIndex=hpicfGRpSwitchEntPhysicalIndex, hpGRpLoadBalancing=hpGRpLoadBalancing, hpGRpPMPortEntPhysicalIndex=hpGRpPMPortEntPhysicalIndex, hpicfBackupLinkTestTime=hpicfBackupLinkTestTime, hpicfBackupLinkPrimaryPort=hpicfBackupLinkPrimaryPort, hubIntruderType=hubIntruderType, hpGRpPMSegAllowedRptrIndex=hpGRpPMSegAllowedRptrIndex, hpGRpPMSegmentTable=hpGRpPMSegmentTable, hpicfGRpSwitchLinkTable=hpicfGRpSwitchLinkTable, hpGRpRepeaterName=hpGRpRepeaterName, hpSecAuthAddrGroupIndex=hpSecAuthAddrGroupIndex, hpSecPtAlarmEnable=hpSecPtAlarmEnable, hpicfBackupLinkBackupPort=hpicfBackupLinkBackupPort, hpicfBackupLinkTrap=hpicfBackupLinkTrap, hpicfGenRptrLoadBalanceGroup=hpicfGenRptrLoadBalanceGroup, hpSecureAuthAddrTable=hpSecureAuthAddrTable, hpicfGRpSwitchLinkRptrGroup=hpicfGRpSwitchLinkRptrGroup, hpSecPtLearnMode=hpSecPtLearnMode, hpicfSecPtGroup3=hpicfSecPtGroup3, hpicfGenRptrSecurityCompliance=hpicfGenRptrSecurityCompliance, hubIntruderTrainingViolation=hubIntruderTrainingViolation, hpicfHubSecurityGroup=hpicfHubSecurityGroup, hubIntruderGroup=hubIntruderGroup, hubSecPtAlarmEnable=hubSecPtAlarmEnable, hubSecPtPreventEavesdrop=hubSecPtPreventEavesdrop, hpicfGenRptrInfoGroup=hpicfGenRptrInfoGroup, hpSecPtAddressLimit2=hpSecPtAddressLimit2, hpSecAuthAddress=hpSecAuthAddress, hpGRpPMPortGroupIndex=hpGRpPMPortGroupIndex, hpicfGRpSwitchLinkIndex=hpicfGRpSwitchLinkIndex, hpGRpRepeaterEntry=hpGRpRepeaterEntry, hpSecurePortTable=hpSecurePortTable, hpGRpPMSegAllowedRptrEntry=hpGRpPMSegAllowedRptrEntry, hubIntruderIndex=hubIntruderIndex, hpicfGRpSwitchStatus=hpicfGRpSwitchStatus, hpGRpBasic=hpGRpBasic, hubIntruderTime=hubIntruderTime, hpicfBackupLinkAddress=hpicfBackupLinkAddress, hpicfBackupLinkBackupGroup=hpicfBackupLinkBackupGroup, hpicfGenRptrMultiSecOnlyCompliance3=hpicfGenRptrMultiSecOnlyCompliance3, hpSecCfgAddrPortIndex=hpSecCfgAddrPortIndex, hpGRpPMPortAllowedRptrIndex=hpGRpPMPortAllowedRptrIndex, hpSecureCfgAddrEntry=hpSecureCfgAddrEntry, hpSecPtAddressLimit=hpSecPtAddressLimit, hpSecCfgAddrGroupIndex=hpSecCfgAddrGroupIndex, hpGRpPMSegAllowedRptrTable=hpGRpPMSegAllowedRptrTable, hpicfGenRptrMib=hpicfGenRptrMib, hpGRpRepeaterIfIndex=hpGRpRepeaterIfIndex, hpicfBackupLinkFailEventIndex=hpicfBackupLinkFailEventIndex, hpicfGenRptrSecPtGroup=hpicfGenRptrSecPtGroup, hpSecurePortEntry=hpSecurePortEntry, hpicfGenRptrCompliance=hpicfGenRptrCompliance, hpGRpRepeaterIndex=hpGRpRepeaterIndex, hubIntruderAddress=hubIntruderAddress, hpicfGenRptrBkpLinkGroup=hpicfGenRptrBkpLinkGroup, hpicfIntrusionTrap=hpicfIntrusionTrap, hpGRpPMPortIndex=hpGRpPMPortIndex, hubSecurePortTable=hubSecurePortTable, hpGRpPortMapAutoConfigEnable=hpGRpPortMapAutoConfigEnable, hpicfSecPtGroup=hpicfSecPtGroup, hpicfGenRptrBasicGroup=hpicfGenRptrBasicGroup, hpGRpRepeaterVlanIndex=hpGRpRepeaterVlanIndex, hubSecPtSecurityAddress=hubSecPtSecurityAddress, hpGRpSelfHealEnable=hpGRpSelfHealEnable, hpicfGRpBridge=hpicfGRpBridge, hpicfGenRptrMultiSecOnlyCompliance=hpicfGenRptrMultiSecOnlyCompliance, hpGRpRepeaterTable=hpGRpRepeaterTable, hpGRpLoadBalanceNow=hpGRpLoadBalanceNow, hpicfGRpSwitchConfig=hpicfGRpSwitchConfig, hpicfGenRptrCompliances=hpicfGenRptrCompliances, hpicfGRpSwitchIndex=hpicfGRpSwitchIndex, hpicfGRpCurrentPrimarySwitch=hpicfGRpCurrentPrimarySwitch, hubSecPtPortIndex=hubSecPtPortIndex, hubSecPtIntrusionFlag=hubSecPtIntrusionFlag, hpSecPtGroupIndex=hpSecPtGroupIndex, hpSecCfgStatus=hpSecCfgStatus, hpicfBackupLinkIndex=hpicfBackupLinkIndex, hpicfGRpSwitchLinkRptrPort=hpicfGRpSwitchLinkRptrPort, hpicfGRpDesiredPrimarySwitch=hpicfGRpDesiredPrimarySwitch, hpGRpPMPortEntry=hpGRpPMPortEntry, hpicfBackupLinkTable=hpicfBackupLinkTable, hpGRpLastLoadBalanceTime=hpGRpLastLoadBalanceTime, hpicfGenRptrCompliance2=hpicfGenRptrCompliance2, hpicfBackupLinkStatus=hpicfBackupLinkStatus, hpGRpPMPortAllowedRptrEntry=hpGRpPMPortAllowedRptrEntry, hpicfBackupLinkNextIndex=hpicfBackupLinkNextIndex, hpGRpPMPortAllowedRptrTable=hpGRpPMPortAllowedRptrTable, hpGRpPMCurrentRptrIndex=hpGRpPMCurrentRptrIndex, hpicfGRpSwitchTable=hpicfGRpSwitchTable, hpicfGenRptrGroups=hpicfGenRptrGroups, hpicfBackupLinkConsecFailures=hpicfBackupLinkConsecFailures, hpicfGenRptrCompliance3=hpicfGenRptrCompliance3, hpSecureAuthAddrEntry=hpSecureAuthAddrEntry, hpicfBackupLinkState=hpicfBackupLinkState, hubIntruderPort=hubIntruderPort, hpicfGRpSwitchLinkState=hpicfGRpSwitchLinkState, PYSNMP_MODULE_ID=hpicfGenRptrMib, hpicfGenRptrSecNotifyGroup=hpicfGenRptrSecNotifyGroup, hubIntruderLogEntry=hubIntruderLogEntry, hpicfGenRptrBkpLinkNotifyGroup=hpicfGenRptrBkpLinkNotifyGroup, hpSecPtPortIndex=hpSecPtPortIndex, hpGRpPMPortTable=hpGRpPMPortTable, hpGRpPortMapping=hpGRpPortMapping, hpicfGenRptrPortMappingGroup=hpicfGenRptrPortMappingGroup)
