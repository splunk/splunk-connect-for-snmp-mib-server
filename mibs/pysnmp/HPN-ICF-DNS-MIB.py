#
# PySNMP MIB module HPN-ICF-DNS-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/HPN-ICF-DNS-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:25:37 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, SingleValueConstraint, ValueRangeConstraint, ConstraintsIntersection, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "SingleValueConstraint", "ValueRangeConstraint", "ConstraintsIntersection", "ValueSizeConstraint")
hpnicfCommon, = mibBuilder.importSymbols("HPN-ICF-OID-MIB", "hpnicfCommon")
InetAddressType, InetAddress = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddressType", "InetAddress")
ModuleCompliance, ObjectGroup, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "ObjectGroup", "NotificationGroup")
iso, IpAddress, TimeTicks, ObjectIdentity, MibIdentifier, Bits, Integer32, Counter32, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter64, NotificationType, Gauge32, Unsigned32, ModuleIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "iso", "IpAddress", "TimeTicks", "ObjectIdentity", "MibIdentifier", "Bits", "Integer32", "Counter32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter64", "NotificationType", "Gauge32", "Unsigned32", "ModuleIdentity")
DisplayString, RowStatus, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "RowStatus", "TextualConvention")
hpnicfDns = ModuleIdentity((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 97))
hpnicfDns.setRevisions(('2009-02-12 00:00',))
if mibBuilder.loadTexts: hpnicfDns.setLastUpdated('200902120000Z')
if mibBuilder.loadTexts: hpnicfDns.setOrganization('')
hpnicfDnsObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 97, 1))
hpnicfDnsStaticSrvIpTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 97, 1, 1), )
if mibBuilder.loadTexts: hpnicfDnsStaticSrvIpTable.setStatus('current')
hpnicfDnsStaticSrvIpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 97, 1, 1, 1), ).setIndexNames((0, "HPN-ICF-DNS-MIB", "hpnicfDnsStaticSrvIpType"), (0, "HPN-ICF-DNS-MIB", "hpnicfDnsStaticSrvIpAddr"))
if mibBuilder.loadTexts: hpnicfDnsStaticSrvIpEntry.setStatus('current')
hpnicfDnsStaticSrvIpType = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 97, 1, 1, 1, 1), InetAddressType())
if mibBuilder.loadTexts: hpnicfDnsStaticSrvIpType.setStatus('current')
hpnicfDnsStaticSrvIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 97, 1, 1, 1, 2), InetAddress().subtype(subtypeSpec=ValueSizeConstraint(1, 64)))
if mibBuilder.loadTexts: hpnicfDnsStaticSrvIpAddr.setStatus('current')
hpnicfDnsStaticSrvIpPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 97, 1, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfDnsStaticSrvIpPriority.setStatus('current')
hpnicfDnsStaticSrvIpRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 97, 1, 1, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfDnsStaticSrvIpRowStatus.setStatus('current')
hpnicfDnsDynamicSrvIpTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 97, 1, 2), )
if mibBuilder.loadTexts: hpnicfDnsDynamicSrvIpTable.setStatus('current')
hpnicfDnsDynamicSrvIpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 97, 1, 2, 1), ).setIndexNames((0, "HPN-ICF-DNS-MIB", "hpnicfDnsDynamicSrvIpType"), (0, "HPN-ICF-DNS-MIB", "hpnicfDnsDynamicSrvIpAddr"))
if mibBuilder.loadTexts: hpnicfDnsDynamicSrvIpEntry.setStatus('current')
hpnicfDnsDynamicSrvIpType = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 97, 1, 2, 1, 1), InetAddressType())
if mibBuilder.loadTexts: hpnicfDnsDynamicSrvIpType.setStatus('current')
hpnicfDnsDynamicSrvIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 97, 1, 2, 1, 2), InetAddress().subtype(subtypeSpec=ValueSizeConstraint(1, 64)))
if mibBuilder.loadTexts: hpnicfDnsDynamicSrvIpAddr.setStatus('current')
hpnicfDnsDynamicSrvIpPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 97, 1, 2, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfDnsDynamicSrvIpPriority.setStatus('current')
hpnicfDnsMIBConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 97, 2))
hpnicfDnsMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 97, 2, 1))
hpnicfDnsMIBCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 97, 2, 1, 1)).setObjects(("HPN-ICF-DNS-MIB", "hpnicfDnsStaticSrvIpGroup"), ("HPN-ICF-DNS-MIB", "hpnicfDnsDynamicSrvIpGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpnicfDnsMIBCompliance = hpnicfDnsMIBCompliance.setStatus('current')
hpnicfDnsMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 97, 2, 2))
hpnicfDnsStaticSrvIpGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 97, 2, 2, 1)).setObjects(("HPN-ICF-DNS-MIB", "hpnicfDnsStaticSrvIpPriority"), ("HPN-ICF-DNS-MIB", "hpnicfDnsStaticSrvIpRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpnicfDnsStaticSrvIpGroup = hpnicfDnsStaticSrvIpGroup.setStatus('current')
hpnicfDnsDynamicSrvIpGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 97, 2, 2, 2)).setObjects(("HPN-ICF-DNS-MIB", "hpnicfDnsDynamicSrvIpPriority"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpnicfDnsDynamicSrvIpGroup = hpnicfDnsDynamicSrvIpGroup.setStatus('current')
mibBuilder.exportSymbols("HPN-ICF-DNS-MIB", hpnicfDnsStaticSrvIpAddr=hpnicfDnsStaticSrvIpAddr, hpnicfDnsDynamicSrvIpGroup=hpnicfDnsDynamicSrvIpGroup, hpnicfDnsMIBGroups=hpnicfDnsMIBGroups, PYSNMP_MODULE_ID=hpnicfDns, hpnicfDnsDynamicSrvIpAddr=hpnicfDnsDynamicSrvIpAddr, hpnicfDnsStaticSrvIpType=hpnicfDnsStaticSrvIpType, hpnicfDnsMIBConformance=hpnicfDnsMIBConformance, hpnicfDnsStaticSrvIpPriority=hpnicfDnsStaticSrvIpPriority, hpnicfDnsMIBCompliance=hpnicfDnsMIBCompliance, hpnicfDns=hpnicfDns, hpnicfDnsStaticSrvIpRowStatus=hpnicfDnsStaticSrvIpRowStatus, hpnicfDnsStaticSrvIpGroup=hpnicfDnsStaticSrvIpGroup, hpnicfDnsDynamicSrvIpPriority=hpnicfDnsDynamicSrvIpPriority, hpnicfDnsStaticSrvIpEntry=hpnicfDnsStaticSrvIpEntry, hpnicfDnsStaticSrvIpTable=hpnicfDnsStaticSrvIpTable, hpnicfDnsDynamicSrvIpEntry=hpnicfDnsDynamicSrvIpEntry, hpnicfDnsDynamicSrvIpType=hpnicfDnsDynamicSrvIpType, hpnicfDnsObjects=hpnicfDnsObjects, hpnicfDnsDynamicSrvIpTable=hpnicfDnsDynamicSrvIpTable, hpnicfDnsMIBCompliances=hpnicfDnsMIBCompliances)
