#
# PySNMP MIB module HPN-ICF-DOT11-SA-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/HPN-ICF-DOT11-SA-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:25:51 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, SingleValueConstraint, ConstraintsIntersection, ConstraintsUnion, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "SingleValueConstraint", "ConstraintsIntersection", "ConstraintsUnion", "ValueSizeConstraint")
hpnicfDot11, HpnicfDot11ChannelScopeType, HpnicfDot11RadioScopeType, HpnicfDot11SaIntfDevType, HpnicfDot11ObjectIDType = mibBuilder.importSymbols("HPN-ICF-DOT11-REF-MIB", "hpnicfDot11", "HpnicfDot11ChannelScopeType", "HpnicfDot11RadioScopeType", "HpnicfDot11SaIntfDevType", "HpnicfDot11ObjectIDType")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Gauge32, IpAddress, MibIdentifier, iso, Bits, Counter64, Integer32, NotificationType, ObjectIdentity, Unsigned32, Counter32, TimeTicks, MibScalar, MibTable, MibTableRow, MibTableColumn, ModuleIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "Gauge32", "IpAddress", "MibIdentifier", "iso", "Bits", "Counter64", "Integer32", "NotificationType", "ObjectIdentity", "Unsigned32", "Counter32", "TimeTicks", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ModuleIdentity")
DateAndTime, TextualConvention, TruthValue, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "DateAndTime", "TextualConvention", "TruthValue", "DisplayString")
hpnicfDot11Sa = ModuleIdentity((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 13))
hpnicfDot11Sa.setRevisions(('2011-08-26 20:00',))
if mibBuilder.loadTexts: hpnicfDot11Sa.setLastUpdated('201108262000Z')
if mibBuilder.loadTexts: hpnicfDot11Sa.setOrganization('')
hpnicfDot11SaCfgGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 13, 1))
hpnicfDot11SaStatusGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 13, 2))
hpnicfDot11SaNotifyGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 13, 3))
hpnicfDot11SaCfgTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 13, 1, 1), )
if mibBuilder.loadTexts: hpnicfDot11SaCfgTable.setStatus('current')
hpnicfDot11SaCfgEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 13, 1, 1, 1), ).setIndexNames((0, "HPN-ICF-DOT11-SA-MIB", "hpnicfDot11SaCfgRadioType"))
if mibBuilder.loadTexts: hpnicfDot11SaCfgEntry.setStatus('current')
hpnicfDot11SaCfgRadioType = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 13, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("dot11bg", 1), ("dot11a", 2))))
if mibBuilder.loadTexts: hpnicfDot11SaCfgRadioType.setStatus('current')
hpnicfDot11SaEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 13, 1, 1, 1, 2), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfDot11SaEnable.setStatus('current')
hpnicfDot11SaRptDevType = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 13, 1, 1, 1, 3), Bits().clone(namedValues=NamedValues(("microwave", 0), ("microwaveInverter", 1), ("bluetooth", 2), ("fixedFreqOthers", 3), ("fixedFreqCordlessPhone", 4), ("fixedFreqVideo", 5), ("fixedFreqAudio", 6), ("freqHopperOthers", 7), ("freqHopperCordlessBase", 8), ("freqHopperCordlessNetwork", 9), ("freqHopperXbox", 10), ("genericInterferer", 11)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfDot11SaRptDevType.setStatus('current')
hpnicfDot11SaTrapDevEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 13, 1, 1, 1, 4), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfDot11SaTrapDevEnable.setStatus('current')
hpnicfDot11SaTrapDevType = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 13, 1, 1, 1, 5), Bits().clone(namedValues=NamedValues(("microwave", 0), ("microwaveInverter", 1), ("bluetooth", 2), ("fixedFreqOthers", 3), ("fixedFreqCordlessPhone", 4), ("fixedFreqVideo", 5), ("fixedFreqAudio", 6), ("freqHopperOthers", 7), ("freqHopperCordlessBase", 8), ("freqHopperCordlessNetwork", 9), ("freqHopperXbox", 10), ("genericInterferer", 11)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfDot11SaTrapDevType.setStatus('current')
hpnicfDot11SaTrapAQEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 13, 1, 1, 1, 6), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfDot11SaTrapAQEnable.setStatus('current')
hpnicfDot11SaTrapAQThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 13, 1, 1, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 100))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfDot11SaTrapAQThreshold.setStatus('current')
hpnicfDot11SaDrivenRRMEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 13, 1, 1, 1, 8), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfDot11SaDrivenRRMEnable.setStatus('current')
hpnicfDot11SaDrivenRRMSnt = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 13, 1, 1, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("low", 1), ("medium", 2), ("high", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfDot11SaDrivenRRMSnt.setStatus('current')
hpnicfDot11SaRtFFTDataTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 13, 2, 1), )
if mibBuilder.loadTexts: hpnicfDot11SaRtFFTDataTable.setStatus('current')
hpnicfDot11SaRtFFTDataEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 13, 2, 1, 1), ).setIndexNames((0, "HPN-ICF-DOT11-SA-MIB", "hpnicfDot11SaAPID"), (0, "HPN-ICF-DOT11-SA-MIB", "hpnicfDot11SaRadioID"), (0, "HPN-ICF-DOT11-SA-MIB", "hpnicfDot11SaRtDataGroupID"), (0, "HPN-ICF-DOT11-SA-MIB", "hpnicfDot11SaFrequency"))
if mibBuilder.loadTexts: hpnicfDot11SaRtFFTDataEntry.setStatus('current')
hpnicfDot11SaAPID = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 13, 2, 1, 1, 1), HpnicfDot11ObjectIDType())
if mibBuilder.loadTexts: hpnicfDot11SaAPID.setStatus('current')
hpnicfDot11SaRadioID = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 13, 2, 1, 1, 2), HpnicfDot11RadioScopeType())
if mibBuilder.loadTexts: hpnicfDot11SaRadioID.setStatus('current')
hpnicfDot11SaRtDataGroupID = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 13, 2, 1, 1, 3), Integer32())
if mibBuilder.loadTexts: hpnicfDot11SaRtDataGroupID.setStatus('current')
hpnicfDot11SaFrequency = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 13, 2, 1, 1, 4), Integer32())
if mibBuilder.loadTexts: hpnicfDot11SaFrequency.setStatus('current')
hpnicfDot11SaRtFreqPower = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 13, 2, 1, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfDot11SaRtFreqPower.setStatus('current')
hpnicfDot11SaRtFreqMaxPower = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 13, 2, 1, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfDot11SaRtFreqMaxPower.setStatus('current')
hpnicfDot11SaRtFreqDutyCycle = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 13, 2, 1, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfDot11SaRtFreqDutyCycle.setStatus('current')
hpnicfDot11SaRtFreqDataSeqNo = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 13, 2, 1, 1, 8), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfDot11SaRtFreqDataSeqNo.setStatus('current')
hpnicfDot11SaIntfDevTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 13, 2, 2), )
if mibBuilder.loadTexts: hpnicfDot11SaIntfDevTable.setStatus('current')
hpnicfDot11SaIntfDevEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 13, 2, 2, 1), ).setIndexNames((0, "HPN-ICF-DOT11-SA-MIB", "hpnicfDot11SaAPID"), (0, "HPN-ICF-DOT11-SA-MIB", "hpnicfDot11SaRadioID"), (0, "HPN-ICF-DOT11-SA-MIB", "hpnicfDot11SaDevID"))
if mibBuilder.loadTexts: hpnicfDot11SaIntfDevEntry.setStatus('current')
hpnicfDot11SaDevID = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 13, 2, 2, 1, 1), Integer32())
if mibBuilder.loadTexts: hpnicfDot11SaDevID.setStatus('current')
hpnicfDot11SaDevType = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 13, 2, 2, 1, 2), HpnicfDot11SaIntfDevType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfDot11SaDevType.setStatus('current')
hpnicfDot11SaDevSI = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 13, 2, 2, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfDot11SaDevSI.setStatus('current')
hpnicfDot11SaDevRSSI = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 13, 2, 2, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfDot11SaDevRSSI.setStatus('current')
hpnicfDot11SaDevDutyCycle = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 13, 2, 2, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfDot11SaDevDutyCycle.setStatus('current')
hpnicfDot11SaDevAffectedChls = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 13, 2, 2, 1, 6), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfDot11SaDevAffectedChls.setStatus('current')
hpnicfDot11SaDevDetectedTime = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 13, 2, 2, 1, 7), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfDot11SaDevDetectedTime.setStatus('current')
hpnicfDot11SaAirQualityTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 13, 2, 3), )
if mibBuilder.loadTexts: hpnicfDot11SaAirQualityTable.setStatus('current')
hpnicfDot11SaAirQualityEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 13, 2, 3, 1), ).setIndexNames((0, "HPN-ICF-DOT11-SA-MIB", "hpnicfDot11SaAPID"), (0, "HPN-ICF-DOT11-SA-MIB", "hpnicfDot11SaRadioID"), (0, "HPN-ICF-DOT11-SA-MIB", "hpnicfDot11SaChlNum"))
if mibBuilder.loadTexts: hpnicfDot11SaAirQualityEntry.setStatus('current')
hpnicfDot11SaChlNum = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 13, 2, 3, 1, 1), HpnicfDot11ChannelScopeType())
if mibBuilder.loadTexts: hpnicfDot11SaChlNum.setStatus('current')
hpnicfDot11SaAvgQuality = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 13, 2, 3, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfDot11SaAvgQuality.setStatus('current')
hpnicfDot11SaMinQuality = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 13, 2, 3, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfDot11SaMinQuality.setStatus('current')
hpnicfDot11SaIntfDevNum = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 13, 2, 3, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfDot11SaIntfDevNum.setStatus('current')
hpnicfDot11SaWiFiUtil = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 13, 2, 3, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfDot11SaWiFiUtil.setStatus('current')
hpnicfDot11SaNonWiFiUtil = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 13, 2, 3, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfDot11SaNonWiFiUtil.setStatus('current')
hpnicfDot11SaNoiseFloor = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 13, 2, 3, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfDot11SaNoiseFloor.setStatus('current')
hpnicfDot11SaTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 13, 3, 0))
hpnicfDot11SaIntfDevDetected = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 13, 3, 0, 1)).setObjects(("HPN-ICF-DOT11-SA-MIB", "hpnicfDot11SaTrapAPID"), ("HPN-ICF-DOT11-SA-MIB", "hpnicfDot11SaTrapRadioID"), ("HPN-ICF-DOT11-SA-MIB", "hpnicfDot11SaTrapDevID"), ("HPN-ICF-DOT11-SA-MIB", "hpnicfDot11SaTrapIntfDevType"), ("HPN-ICF-DOT11-SA-MIB", "hpnicfDot11APTrapDevSI"), ("HPN-ICF-DOT11-SA-MIB", "hpnicfDot11SaTrapDevRSSI"), ("HPN-ICF-DOT11-SA-MIB", "hpnicfDot11APTrapDevDC"), ("HPN-ICF-DOT11-SA-MIB", "hpnicfDot11APTrapDevChls"), ("HPN-ICF-DOT11-SA-MIB", "hpnicfDot11APTrapDevDctTime"))
if mibBuilder.loadTexts: hpnicfDot11SaIntfDevDetected.setStatus('current')
hpnicfDot11SaIntfDevDisappear = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 13, 3, 0, 2)).setObjects(("HPN-ICF-DOT11-SA-MIB", "hpnicfDot11SaTrapAPID"), ("HPN-ICF-DOT11-SA-MIB", "hpnicfDot11SaTrapRadioID"), ("HPN-ICF-DOT11-SA-MIB", "hpnicfDot11SaTrapDevID"), ("HPN-ICF-DOT11-SA-MIB", "hpnicfDot11SaTrapIntfDevType"))
if mibBuilder.loadTexts: hpnicfDot11SaIntfDevDisappear.setStatus('current')
hpnicfDot11SaChlQltLow = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 13, 3, 0, 3)).setObjects(("HPN-ICF-DOT11-SA-MIB", "hpnicfDot11SaTrapAPID"), ("HPN-ICF-DOT11-SA-MIB", "hpnicfDot11SaTrapRadioID"), ("HPN-ICF-DOT11-SA-MIB", "hpnicfDot11SaTrapChlNum"), ("HPN-ICF-DOT11-SA-MIB", "hpnicfDot11SaTrapChlQlt"), ("HPN-ICF-DOT11-SA-MIB", "hpnicfDot11SaTrapChlIntfNum"))
if mibBuilder.loadTexts: hpnicfDot11SaChlQltLow.setStatus('current')
hpnicfDot11SaChlQltRecover = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 13, 3, 0, 4)).setObjects(("HPN-ICF-DOT11-SA-MIB", "hpnicfDot11SaTrapAPID"), ("HPN-ICF-DOT11-SA-MIB", "hpnicfDot11SaTrapRadioID"), ("HPN-ICF-DOT11-SA-MIB", "hpnicfDot11SaTrapChlNum"), ("HPN-ICF-DOT11-SA-MIB", "hpnicfDot11SaTrapChlQlt"), ("HPN-ICF-DOT11-SA-MIB", "hpnicfDot11SaTrapChlIntfNum"))
if mibBuilder.loadTexts: hpnicfDot11SaChlQltRecover.setStatus('current')
hpnicfDot11SaTrapVars = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 13, 3, 1))
hpnicfDot11SaTrapAPID = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 13, 3, 1, 1), HpnicfDot11ObjectIDType()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hpnicfDot11SaTrapAPID.setStatus('current')
hpnicfDot11SaTrapRadioID = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 13, 3, 1, 2), HpnicfDot11RadioScopeType()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hpnicfDot11SaTrapRadioID.setStatus('current')
hpnicfDot11SaTrapDevID = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 13, 3, 1, 3), Integer32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hpnicfDot11SaTrapDevID.setStatus('current')
hpnicfDot11SaTrapIntfDevType = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 13, 3, 1, 4), HpnicfDot11SaIntfDevType()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hpnicfDot11SaTrapIntfDevType.setStatus('current')
hpnicfDot11APTrapDevSI = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 13, 3, 1, 5), Integer32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hpnicfDot11APTrapDevSI.setStatus('current')
hpnicfDot11SaTrapDevRSSI = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 13, 3, 1, 6), Integer32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hpnicfDot11SaTrapDevRSSI.setStatus('current')
hpnicfDot11APTrapDevDC = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 13, 3, 1, 7), Integer32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hpnicfDot11APTrapDevDC.setStatus('current')
hpnicfDot11APTrapDevChls = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 13, 3, 1, 8), OctetString()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hpnicfDot11APTrapDevChls.setStatus('current')
hpnicfDot11APTrapDevDctTime = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 13, 3, 1, 9), DateAndTime()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hpnicfDot11APTrapDevDctTime.setStatus('current')
hpnicfDot11SaTrapChlNum = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 13, 3, 1, 10), HpnicfDot11ChannelScopeType()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hpnicfDot11SaTrapChlNum.setStatus('current')
hpnicfDot11SaTrapChlQlt = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 13, 3, 1, 11), Integer32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hpnicfDot11SaTrapChlQlt.setStatus('current')
hpnicfDot11SaTrapChlIntfNum = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 13, 3, 1, 12), Integer32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hpnicfDot11SaTrapChlIntfNum.setStatus('current')
mibBuilder.exportSymbols("HPN-ICF-DOT11-SA-MIB", hpnicfDot11SaTraps=hpnicfDot11SaTraps, hpnicfDot11SaCfgTable=hpnicfDot11SaCfgTable, hpnicfDot11SaChlQltRecover=hpnicfDot11SaChlQltRecover, hpnicfDot11SaTrapIntfDevType=hpnicfDot11SaTrapIntfDevType, hpnicfDot11SaChlQltLow=hpnicfDot11SaChlQltLow, hpnicfDot11SaDevDetectedTime=hpnicfDot11SaDevDetectedTime, hpnicfDot11SaAirQualityTable=hpnicfDot11SaAirQualityTable, hpnicfDot11SaRtFreqPower=hpnicfDot11SaRtFreqPower, hpnicfDot11SaTrapVars=hpnicfDot11SaTrapVars, hpnicfDot11SaFrequency=hpnicfDot11SaFrequency, hpnicfDot11SaNoiseFloor=hpnicfDot11SaNoiseFloor, hpnicfDot11APTrapDevDctTime=hpnicfDot11APTrapDevDctTime, hpnicfDot11SaDevID=hpnicfDot11SaDevID, hpnicfDot11SaTrapDevEnable=hpnicfDot11SaTrapDevEnable, hpnicfDot11SaIntfDevEntry=hpnicfDot11SaIntfDevEntry, hpnicfDot11SaDevAffectedChls=hpnicfDot11SaDevAffectedChls, hpnicfDot11SaChlNum=hpnicfDot11SaChlNum, hpnicfDot11SaCfgRadioType=hpnicfDot11SaCfgRadioType, hpnicfDot11SaDevDutyCycle=hpnicfDot11SaDevDutyCycle, hpnicfDot11SaTrapDevID=hpnicfDot11SaTrapDevID, hpnicfDot11SaAirQualityEntry=hpnicfDot11SaAirQualityEntry, hpnicfDot11SaDevType=hpnicfDot11SaDevType, hpnicfDot11SaNonWiFiUtil=hpnicfDot11SaNonWiFiUtil, hpnicfDot11SaCfgGroup=hpnicfDot11SaCfgGroup, hpnicfDot11SaRtFFTDataEntry=hpnicfDot11SaRtFFTDataEntry, hpnicfDot11SaDevRSSI=hpnicfDot11SaDevRSSI, hpnicfDot11SaIntfDevDisappear=hpnicfDot11SaIntfDevDisappear, hpnicfDot11SaRtFreqMaxPower=hpnicfDot11SaRtFreqMaxPower, hpnicfDot11SaTrapAPID=hpnicfDot11SaTrapAPID, hpnicfDot11SaNotifyGroup=hpnicfDot11SaNotifyGroup, hpnicfDot11SaCfgEntry=hpnicfDot11SaCfgEntry, hpnicfDot11SaRadioID=hpnicfDot11SaRadioID, hpnicfDot11SaTrapDevType=hpnicfDot11SaTrapDevType, hpnicfDot11APTrapDevChls=hpnicfDot11APTrapDevChls, hpnicfDot11SaAvgQuality=hpnicfDot11SaAvgQuality, hpnicfDot11SaTrapRadioID=hpnicfDot11SaTrapRadioID, hpnicfDot11SaRtDataGroupID=hpnicfDot11SaRtDataGroupID, hpnicfDot11SaDevSI=hpnicfDot11SaDevSI, hpnicfDot11APTrapDevDC=hpnicfDot11APTrapDevDC, hpnicfDot11SaTrapDevRSSI=hpnicfDot11SaTrapDevRSSI, hpnicfDot11SaTrapAQThreshold=hpnicfDot11SaTrapAQThreshold, hpnicfDot11SaEnable=hpnicfDot11SaEnable, hpnicfDot11SaRtFFTDataTable=hpnicfDot11SaRtFFTDataTable, hpnicfDot11APTrapDevSI=hpnicfDot11APTrapDevSI, hpnicfDot11Sa=hpnicfDot11Sa, hpnicfDot11SaIntfDevTable=hpnicfDot11SaIntfDevTable, hpnicfDot11SaMinQuality=hpnicfDot11SaMinQuality, PYSNMP_MODULE_ID=hpnicfDot11Sa, hpnicfDot11SaIntfDevDetected=hpnicfDot11SaIntfDevDetected, hpnicfDot11SaAPID=hpnicfDot11SaAPID, hpnicfDot11SaIntfDevNum=hpnicfDot11SaIntfDevNum, hpnicfDot11SaRptDevType=hpnicfDot11SaRptDevType, hpnicfDot11SaTrapChlNum=hpnicfDot11SaTrapChlNum, hpnicfDot11SaTrapChlIntfNum=hpnicfDot11SaTrapChlIntfNum, hpnicfDot11SaRtFreqDutyCycle=hpnicfDot11SaRtFreqDutyCycle, hpnicfDot11SaTrapChlQlt=hpnicfDot11SaTrapChlQlt, hpnicfDot11SaDrivenRRMEnable=hpnicfDot11SaDrivenRRMEnable, hpnicfDot11SaTrapAQEnable=hpnicfDot11SaTrapAQEnable, hpnicfDot11SaStatusGroup=hpnicfDot11SaStatusGroup, hpnicfDot11SaDrivenRRMSnt=hpnicfDot11SaDrivenRRMSnt, hpnicfDot11SaWiFiUtil=hpnicfDot11SaWiFiUtil, hpnicfDot11SaRtFreqDataSeqNo=hpnicfDot11SaRtFreqDataSeqNo)
