#
# PySNMP MIB module Com-Server-Intern-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/Com-Server-Intern-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 18:20:59 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ValueRangeConstraint, ValueSizeConstraint, ConstraintsUnion, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ValueRangeConstraint", "ValueSizeConstraint", "ConstraintsUnion", "SingleValueConstraint")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
IpAddress, NotificationType, Integer32, NotificationType, iso, Counter32, Gauge32, enterprises, ModuleIdentity, Bits, Unsigned32, ObjectIdentity, TimeTicks, MibIdentifier, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter64 = mibBuilder.importSymbols("SNMPv2-SMI", "IpAddress", "NotificationType", "Integer32", "NotificationType", "iso", "Counter32", "Gauge32", "enterprises", "ModuleIdentity", "Bits", "Unsigned32", "ObjectIdentity", "TimeTicks", "MibIdentifier", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter64")
DisplayString, PhysAddress, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "PhysAddress", "TextualConvention")
wut = MibIdentifier((1, 3, 6, 1, 4, 1, 5040))
wtComServer = MibIdentifier((1, 3, 6, 1, 4, 1, 5040, 1))
wtComServerIntern = MibIdentifier((1, 3, 6, 1, 4, 1, 5040, 1, 1))
wtConfiguration = MibIdentifier((1, 3, 6, 1, 4, 1, 5040, 1, 1, 1))
wtDeaDriver = MibIdentifier((1, 3, 6, 1, 4, 1, 5040, 1, 1, 2))
wtSystem = MibIdentifier((1, 3, 6, 1, 4, 1, 5040, 1, 1, 1, 1))
wtNetSetup = MibIdentifier((1, 3, 6, 1, 4, 1, 5040, 1, 1, 1, 2))
wtSeriPortSetup = MibIdentifier((1, 3, 6, 1, 4, 1, 5040, 1, 1, 1, 3))
wtDeaPortSetup = MibIdentifier((1, 3, 6, 1, 4, 1, 5040, 1, 1, 1, 4))
wtCableType = MibScalar((1, 3, 6, 1, 4, 1, 5040, 1, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 8, 16))).clone(namedValues=NamedValues(("wtCoax", 1), ("wtTwistedPair", 2), ("wtAui", 3), ("wtTwistedPair10FD", 4), ("wtTwistedPair100HD", 8), ("wtTwistedPair100FD", 16)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wtCableType.setStatus('mandatory')
wtMacAddress = MibScalar((1, 3, 6, 1, 4, 1, 5040, 1, 1, 1, 1, 2), PhysAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wtMacAddress.setStatus('mandatory')
wtSwDate = MibScalar((1, 3, 6, 1, 4, 1, 5040, 1, 1, 1, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wtSwDate.setStatus('mandatory')
wtSwRev = MibScalar((1, 3, 6, 1, 4, 1, 5040, 1, 1, 1, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wtSwRev.setStatus('mandatory')
wtDevType = MibScalar((1, 3, 6, 1, 4, 1, 5040, 1, 1, 1, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wtDevType.setStatus('mandatory')
wtMibRev = MibScalar((1, 3, 6, 1, 4, 1, 5040, 1, 1, 1, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wtMibRev.setStatus('mandatory')
wtRunTime = MibScalar((1, 3, 6, 1, 4, 1, 5040, 1, 1, 1, 1, 7), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wtRunTime.setStatus('mandatory')
wtPhysPorts = MibScalar((1, 3, 6, 1, 4, 1, 5040, 1, 1, 1, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wtPhysPorts.setStatus('mandatory')
wtConfigMode = MibScalar((1, 3, 6, 1, 4, 1, 5040, 1, 1, 1, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("wtConfigModeOff", 1), ("wtConfigModeOn", 2), ("wtSaveConfig", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wtConfigMode.setStatus('mandatory')
wtPassword = MibScalar((1, 3, 6, 1, 4, 1, 5040, 1, 1, 1, 1, 17), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(8, 8)).setFixedLength(8)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wtPassword.setStatus('mandatory')
wtSysPswd = MibScalar((1, 3, 6, 1, 4, 1, 5040, 1, 1, 1, 1, 18), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wtSysPswd.setStatus('mandatory')
wtSysName = MibScalar((1, 3, 6, 1, 4, 1, 5040, 1, 1, 1, 1, 19), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wtSysName.setStatus('mandatory')
wtIpAddress = MibScalar((1, 3, 6, 1, 4, 1, 5040, 1, 1, 1, 2, 1), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wtIpAddress.setStatus('mandatory')
wtSubnetMask = MibScalar((1, 3, 6, 1, 4, 1, 5040, 1, 1, 1, 2, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wtSubnetMask.setStatus('mandatory')
wtGateway = MibScalar((1, 3, 6, 1, 4, 1, 5040, 1, 1, 1, 2, 3), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wtGateway.setStatus('mandatory')
wtMtu = MibScalar((1, 3, 6, 1, 4, 1, 5040, 1, 1, 1, 2, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(512, 1024))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wtMtu.setStatus('mandatory')
wtBootpClient = MibScalar((1, 3, 6, 1, 4, 1, 5040, 1, 1, 1, 2, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("wtBootpClientOff", 1), ("wtBootpClientOn", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wtBootpClient.setStatus('mandatory')
wtKeepAlive = MibScalar((1, 3, 6, 1, 4, 1, 5040, 1, 1, 1, 2, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(2, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wtKeepAlive.setStatus('mandatory')
wtRetransmTimeout = MibScalar((1, 3, 6, 1, 4, 1, 5040, 1, 1, 1, 2, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wtRetransmTimeout.setStatus('mandatory')
wtDhcpClient = MibScalar((1, 3, 6, 1, 4, 1, 5040, 1, 1, 1, 2, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("wtDhcpClientOff", 1), ("wtChcpClientOn", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wtDhcpClient.setStatus('mandatory')
wtWbmPort = MibScalar((1, 3, 6, 1, 4, 1, 5040, 1, 1, 1, 2, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wtWbmPort.setStatus('mandatory')
wtDnsSrv = MibScalar((1, 3, 6, 1, 4, 1, 5040, 1, 1, 1, 2, 10), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wtDnsSrv.setStatus('mandatory')
wtLinkSpeed = MibScalar((1, 3, 6, 1, 4, 1, 5040, 1, 1, 1, 2, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("wtLinkSpeedAutonegotiation", 1), ("wtLinkSpeed10HD", 2), ("wtLinkSpeed10FD", 3), ("wtLinkSpeed100HD", 4), ("wtLinkSpeed100FD", 5)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wtLinkSpeed.setStatus('mandatory')
wtSerialPorts = MibScalar((1, 3, 6, 1, 4, 1, 5040, 1, 1, 1, 3, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wtSerialPorts.setStatus('mandatory')
wtSeriInterfaceTable = MibTable((1, 3, 6, 1, 4, 1, 5040, 1, 1, 1, 3, 2), )
if mibBuilder.loadTexts: wtSeriInterfaceTable.setStatus('mandatory')
wtSeriInterfaceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5040, 1, 1, 1, 3, 2, 1), ).setIndexNames((0, "Com-Server-Intern-MIB", "wtSeriInterfaceNo"))
if mibBuilder.loadTexts: wtSeriInterfaceEntry.setStatus('mandatory')
wtSeriInterfaceNo = MibTableColumn((1, 3, 6, 1, 4, 1, 5040, 1, 1, 1, 3, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wtSeriInterfaceNo.setStatus('mandatory')
wtSeriUartTable = MibTable((1, 3, 6, 1, 4, 1, 5040, 1, 1, 1, 3, 3), )
if mibBuilder.loadTexts: wtSeriUartTable.setStatus('mandatory')
wtSeriUartEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5040, 1, 1, 1, 3, 3, 1), ).setIndexNames((0, "Com-Server-Intern-MIB", "wtSeriInterfaceNo"))
if mibBuilder.loadTexts: wtSeriUartEntry.setStatus('mandatory')
wtBaudrate = MibTableColumn((1, 3, 6, 1, 4, 1, 5040, 1, 1, 1, 3, 3, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18))).clone(namedValues=NamedValues(("wtBaudrate-57600", 1), ("wtBaudrate-38400", 2), ("wtBaudrate-19200", 3), ("wtBaudrate-14400", 4), ("wtBaudrate-9600", 5), ("wtBaudrate-4800", 6), ("wtBaudrate-2400", 7), ("wtBaudrate-1200", 8), ("wtBaudrate-600", 9), ("wtBaudrate-300", 10), ("wtBaudrate-150", 11), ("wtBaudrate-110", 12), ("wtBaudrate-75", 13), ("wtBaudrate-50", 14), ("wtBaudrate-230400", 15), ("wtBaudrate-115200", 16), ("wtBaudrate-7200", 17), ("wtBaudrate-special", 18)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wtBaudrate.setStatus('mandatory')
wtParity = MibTableColumn((1, 3, 6, 1, 4, 1, 5040, 1, 1, 1, 3, 3, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("wtNoParity", 1), ("wtOddParity", 2), ("wtEvenParity", 3), ("wtMarkOddParity", 4), ("wtMarkEvenParity", 5)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wtParity.setStatus('mandatory')
wtDatabits = MibTableColumn((1, 3, 6, 1, 4, 1, 5040, 1, 1, 1, 3, 3, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("wtDataBits-8", 1), ("wtDataBits-7", 2), ("wtDataBits-6", 3), ("wtDataBits-5", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wtDatabits.setStatus('mandatory')
wtStopbits = MibTableColumn((1, 3, 6, 1, 4, 1, 5040, 1, 1, 1, 3, 3, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("wtStopBits-1", 1), ("wtStopBits-2", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wtStopbits.setStatus('mandatory')
wtHsLines = MibTableColumn((1, 3, 6, 1, 4, 1, 5040, 1, 1, 1, 3, 3, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(2, 2)).setFixedLength(2)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wtHsLines.setStatus('mandatory')
wtHsFunctions = MibTableColumn((1, 3, 6, 1, 4, 1, 5040, 1, 1, 1, 3, 3, 1, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 1)).setFixedLength(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wtHsFunctions.setStatus('mandatory')
wtUartFifo = MibTableColumn((1, 3, 6, 1, 4, 1, 5040, 1, 1, 1, 3, 3, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 3, 5, 7))).clone(namedValues=NamedValues(("wtUartFifo-disable", 0), ("wtUartFifo-8-8", 1), ("wtUartFifo-16-16", 3), ("wtUartFifo-32-56", 5), ("wtUartFifo-56-60", 7)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wtUartFifo.setStatus('mandatory')
wtUartBaudrate = MibTableColumn((1, 3, 6, 1, 4, 1, 5040, 1, 1, 1, 3, 3, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18))).clone(namedValues=NamedValues(("wtUartBaudrate-230400", 1), ("wtUartBaudrate-153600", 2), ("wtUartBaudrate-115200", 3), ("wtUartBaudrate-57600", 4), ("wtUartBaudrate-38400", 5), ("wtUartBaudrate-19200", 6), ("wtUartBaudrate-9600", 7), ("wtUartBaudrate-7200", 8), ("wtUartBaudrate-4800", 9), ("wtUartBaudrate-2400", 10), ("wtUartBaudrate-1200", 11), ("wtUartBaudrate-600", 12), ("wtUartBaudrate-300", 13), ("wtUartBaudrate-150", 14), ("wtUartBaudrate-75", 15), ("wtUartBaudrate-50", 16), ("wtUartBaudrate-110", 17), ("wtUartBaudrate-special", 18)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wtUartBaudrate.setStatus('mandatory')
wtBaudDivisor = MibTableColumn((1, 3, 6, 1, 4, 1, 5040, 1, 1, 1, 3, 3, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 32767))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wtBaudDivisor.setStatus('mandatory')
wtSeriInQueue = MibTableColumn((1, 3, 6, 1, 4, 1, 5040, 1, 1, 1, 3, 3, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(32, 4094))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wtSeriInQueue.setStatus('mandatory')
wtSeriPortTable = MibTable((1, 3, 6, 1, 4, 1, 5040, 1, 1, 1, 3, 4), )
if mibBuilder.loadTexts: wtSeriPortTable.setStatus('mandatory')
wtSeriPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5040, 1, 1, 1, 3, 4, 1), ).setIndexNames((0, "Com-Server-Intern-MIB", "wtSeriInterfaceNo"))
if mibBuilder.loadTexts: wtSeriPortEntry.setStatus('mandatory')
wtSeriLocalPort = MibTableColumn((1, 3, 6, 1, 4, 1, 5040, 1, 1, 1, 3, 4, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wtSeriLocalPort.setStatus('mandatory')
wtSeriPortMode = MibTableColumn((1, 3, 6, 1, 4, 1, 5040, 1, 1, 1, 3, 4, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11))).clone(namedValues=NamedValues(("wtSeriServerMode", 1), ("wtSeriTcpClient", 2), ("wtSeriTelnetClient", 3), ("wtSeriFtpClient", 4), ("wtSeriBox2BoxMaster", 5), ("wtSeriUdpMode", 6), ("wtSeriMultiportProtokoll", 7), ("wtSeriBox2BoxSlave", 8), ("wtSeriSlipMode", 9), ("wtSeriIpBusSlave", 10), ("wtSeriIpBusMaster", 11)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wtSeriPortMode.setStatus('mandatory')
wtSeriControlPort = MibTableColumn((1, 3, 6, 1, 4, 1, 5040, 1, 1, 1, 3, 4, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wtSeriControlPort.setStatus('mandatory')
wtSeriPortState = MibTableColumn((1, 3, 6, 1, 4, 1, 5040, 1, 1, 1, 3, 4, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("wtSeriPortFree", 0), ("wtSeriPortInUse", 1), ("wtSeriPortLockScanning", 2), ("wtSeriPortLockConnected", 3), ("wtSeriPortLockUnconnected", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wtSeriPortState.setStatus('mandatory')
wtSeriRemotePort = MibTableColumn((1, 3, 6, 1, 4, 1, 5040, 1, 1, 1, 3, 4, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wtSeriRemotePort.setStatus('mandatory')
wtSeriRemoteIP = MibTableColumn((1, 3, 6, 1, 4, 1, 5040, 1, 1, 1, 3, 4, 1, 6), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wtSeriRemoteIP.setStatus('mandatory')
wtSeriNetPckDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 5040, 1, 1, 1, 3, 4, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wtSeriNetPckDelay.setStatus('mandatory')
wtSeriFlushBuf = MibTableColumn((1, 3, 6, 1, 4, 1, 5040, 1, 1, 1, 3, 4, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("wtSeriFlushBufOff", 1), ("wtSeriFlushBufOn", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wtSeriFlushBuf.setStatus('mandatory')
wtSeriTelnetEcho = MibTableColumn((1, 3, 6, 1, 4, 1, 5040, 1, 1, 1, 3, 4, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("wtSeriTelnetEchoOff", 1), ("wtSeriTelnetEchoOn", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wtSeriTelnetEcho.setStatus('mandatory')
wtSeriTcpClientTable = MibTable((1, 3, 6, 1, 4, 1, 5040, 1, 1, 1, 3, 5), )
if mibBuilder.loadTexts: wtSeriTcpClientTable.setStatus('mandatory')
wtSeriTcpClientEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5040, 1, 1, 1, 3, 5, 1), ).setIndexNames((0, "Com-Server-Intern-MIB", "wtSeriInterfaceNo"))
if mibBuilder.loadTexts: wtSeriTcpClientEntry.setStatus('mandatory')
wtSeriTcpServerPort = MibTableColumn((1, 3, 6, 1, 4, 1, 5040, 1, 1, 1, 3, 5, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wtSeriTcpServerPort.setStatus('mandatory')
wtSeriTcpServerIp = MibTableColumn((1, 3, 6, 1, 4, 1, 5040, 1, 1, 1, 3, 5, 1, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wtSeriTcpServerIp.setStatus('mandatory')
wtSeriTcpInactTimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 5040, 1, 1, 1, 3, 5, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wtSeriTcpInactTimeout.setStatus('mandatory')
wtSeriTcpConnectTimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 5040, 1, 1, 1, 3, 5, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wtSeriTcpConnectTimeout.setStatus('mandatory')
wtSeriTcpDisconnectChar = MibTableColumn((1, 3, 6, 1, 4, 1, 5040, 1, 1, 1, 3, 5, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 1)).setFixedLength(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wtSeriTcpDisconnectChar.setStatus('mandatory')
wtSeriTcpDispString1 = MibTableColumn((1, 3, 6, 1, 4, 1, 5040, 1, 1, 1, 3, 5, 1, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(2, 2)).setFixedLength(2)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wtSeriTcpDispString1.setStatus('mandatory')
wtSeriTcpDispString2 = MibTableColumn((1, 3, 6, 1, 4, 1, 5040, 1, 1, 1, 3, 5, 1, 7), OctetString().subtype(subtypeSpec=ValueSizeConstraint(2, 2)).setFixedLength(2)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wtSeriTcpDispString2.setStatus('mandatory')
wtSeriTcpCAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 5040, 1, 1, 1, 3, 5, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("wtSeriTcpCAddressOff", 1), ("wtSeriTcpCAddressOn", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wtSeriTcpCAddress.setStatus('mandatory')
wtSeriTcpResponseMode = MibTableColumn((1, 3, 6, 1, 4, 1, 5040, 1, 1, 1, 3, 5, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("wtSeriTcpRespModeOff", 1), ("wtSeriTcpRespModeOn", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wtSeriTcpResponseMode.setStatus('mandatory')
wtSeriTcpServerUrl = MibTableColumn((1, 3, 6, 1, 4, 1, 5040, 1, 1, 1, 3, 5, 1, 11), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wtSeriTcpServerUrl.setStatus('mandatory')
wtSeriUdpClientTable = MibTable((1, 3, 6, 1, 4, 1, 5040, 1, 1, 1, 3, 6), )
if mibBuilder.loadTexts: wtSeriUdpClientTable.setStatus('mandatory')
wtSeriUdpClientEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5040, 1, 1, 1, 3, 6, 1), ).setIndexNames((0, "Com-Server-Intern-MIB", "wtSeriInterfaceNo"))
if mibBuilder.loadTexts: wtSeriUdpClientEntry.setStatus('mandatory')
wtSeriUdpServerPort = MibTableColumn((1, 3, 6, 1, 4, 1, 5040, 1, 1, 1, 3, 6, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wtSeriUdpServerPort.setStatus('mandatory')
wtSeriUdpServerIp = MibTableColumn((1, 3, 6, 1, 4, 1, 5040, 1, 1, 1, 3, 6, 1, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wtSeriUdpServerIp.setStatus('mandatory')
wtSeriUdpDispString1 = MibTableColumn((1, 3, 6, 1, 4, 1, 5040, 1, 1, 1, 3, 6, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(2, 2)).setFixedLength(2)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wtSeriUdpDispString1.setStatus('mandatory')
wtSeriUdpDispString2 = MibTableColumn((1, 3, 6, 1, 4, 1, 5040, 1, 1, 1, 3, 6, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(2, 2)).setFixedLength(2)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wtSeriUdpDispString2.setStatus('mandatory')
wtSeriUdpSeriProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 5040, 1, 1, 1, 3, 6, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("wtSeriUdpProtocolOff", 1), ("wtSeriUdpProtocolOn", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wtSeriUdpSeriProtocol.setStatus('mandatory')
wtSeriUdpSeriCoding = MibTableColumn((1, 3, 6, 1, 4, 1, 5040, 1, 1, 1, 3, 6, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("wtSeriUdpSeriCodingOff", 1), ("wtSeriUdpSeriCodingOn", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wtSeriUdpSeriCoding.setStatus('mandatory')
wtSeriUdpCAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 5040, 1, 1, 1, 3, 6, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("wtSeriUdpCAddressOff", 1), ("wtSeriUdpCAddressOn", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wtSeriUdpCAddress.setStatus('mandatory')
wtSeriUdpWrCAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 5040, 1, 1, 1, 3, 6, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("wtSeriUdpWrCAddressOff", 1), ("wtSeriUdpWrCAddressOn", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wtSeriUdpWrCAddress.setStatus('mandatory')
wtSeriUdpDisconnectChar = MibTableColumn((1, 3, 6, 1, 4, 1, 5040, 1, 1, 1, 3, 6, 1, 9), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 1)).setFixedLength(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wtSeriUdpDisconnectChar.setStatus('mandatory')
wtSeriUdpServerUrl = MibTableColumn((1, 3, 6, 1, 4, 1, 5040, 1, 1, 1, 3, 6, 1, 10), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wtSeriUdpServerUrl.setStatus('mandatory')
wtSeriTelnetClientTable = MibTable((1, 3, 6, 1, 4, 1, 5040, 1, 1, 1, 3, 7), )
if mibBuilder.loadTexts: wtSeriTelnetClientTable.setStatus('mandatory')
wtSeriTelnetClientEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5040, 1, 1, 1, 3, 7, 1), ).setIndexNames((0, "Com-Server-Intern-MIB", "wtSeriInterfaceNo"))
if mibBuilder.loadTexts: wtSeriTelnetClientEntry.setStatus('mandatory')
wtSeriTelnetServerPort = MibTableColumn((1, 3, 6, 1, 4, 1, 5040, 1, 1, 1, 3, 7, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wtSeriTelnetServerPort.setStatus('mandatory')
wtSeriTelnetServerIp = MibTableColumn((1, 3, 6, 1, 4, 1, 5040, 1, 1, 1, 3, 7, 1, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wtSeriTelnetServerIp.setStatus('mandatory')
wtSeriTelnetInactTimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 5040, 1, 1, 1, 3, 7, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wtSeriTelnetInactTimeout.setStatus('mandatory')
wtSeriTelnetDisconnectChar = MibTableColumn((1, 3, 6, 1, 4, 1, 5040, 1, 1, 1, 3, 7, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 1)).setFixedLength(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wtSeriTelnetDisconnectChar.setStatus('mandatory')
wtSeriTelnetChangeLineout = MibTableColumn((1, 3, 6, 1, 4, 1, 5040, 1, 1, 1, 3, 7, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("wtSeriTelnetChangeLineoutOff", 1), ("wtSeriTelnetChangeLineoutOn", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wtSeriTelnetChangeLineout.setStatus('mandatory')
wtSeriTelnetServerUrl = MibTableColumn((1, 3, 6, 1, 4, 1, 5040, 1, 1, 1, 3, 7, 1, 6), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wtSeriTelnetServerUrl.setStatus('mandatory')
wtSeriFtpClientTable = MibTable((1, 3, 6, 1, 4, 1, 5040, 1, 1, 1, 3, 8), )
if mibBuilder.loadTexts: wtSeriFtpClientTable.setStatus('mandatory')
wtSeriFtpClientEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5040, 1, 1, 1, 3, 8, 1), ).setIndexNames((0, "Com-Server-Intern-MIB", "wtSeriInterfaceNo"))
if mibBuilder.loadTexts: wtSeriFtpClientEntry.setStatus('mandatory')
wtSeriFtpServerPort = MibTableColumn((1, 3, 6, 1, 4, 1, 5040, 1, 1, 1, 3, 8, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wtSeriFtpServerPort.setStatus('mandatory')
wtSeriFtpServerIp = MibTableColumn((1, 3, 6, 1, 4, 1, 5040, 1, 1, 1, 3, 8, 1, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wtSeriFtpServerIp.setStatus('mandatory')
wtSeriFtpAutoFtp = MibTableColumn((1, 3, 6, 1, 4, 1, 5040, 1, 1, 1, 3, 8, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("wtSeriAutoFtpOff", 1), ("wtSeriAutoFtpOn", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wtSeriFtpAutoFtp.setStatus('mandatory')
wtSeriFtpLoginString = MibTableColumn((1, 3, 6, 1, 4, 1, 5040, 1, 1, 1, 3, 8, 1, 4), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wtSeriFtpLoginString.setStatus('mandatory')
wtSeriFtpInactTimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 5040, 1, 1, 1, 3, 8, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wtSeriFtpInactTimeout.setStatus('mandatory')
wtSeriFtpConnectTimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 5040, 1, 1, 1, 3, 8, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wtSeriFtpConnectTimeout.setStatus('mandatory')
wtSeriFtpProtocolChar = MibTableColumn((1, 3, 6, 1, 4, 1, 5040, 1, 1, 1, 3, 8, 1, 7), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 1)).setFixedLength(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wtSeriFtpProtocolChar.setStatus('mandatory')
wtSeriFtpServerUrl = MibTableColumn((1, 3, 6, 1, 4, 1, 5040, 1, 1, 1, 3, 8, 1, 8), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wtSeriFtpServerUrl.setStatus('mandatory')
wtSeriMultiPortPrtTable = MibTable((1, 3, 6, 1, 4, 1, 5040, 1, 1, 1, 3, 9), )
if mibBuilder.loadTexts: wtSeriMultiPortPrtTable.setStatus('mandatory')
wtSeriMultiPortPrtEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5040, 1, 1, 1, 3, 9, 1), ).setIndexNames((0, "Com-Server-Intern-MIB", "wtSeriInterfaceNo"))
if mibBuilder.loadTexts: wtSeriMultiPortPrtEntry.setStatus('mandatory')
wtSeriPrtSeriProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 5040, 1, 1, 1, 3, 9, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("wtSeriPrtSeriProtocolOff", 1), ("wtSeriPrtSeriProtocolOn", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wtSeriPrtSeriProtocol.setStatus('mandatory')
wtSeriPrtSeriCoding = MibTableColumn((1, 3, 6, 1, 4, 1, 5040, 1, 1, 1, 3, 9, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("wtSeriPrtSeriCodingOff", 1), ("wtSeriPrtSeriCodingOn", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wtSeriPrtSeriCoding.setStatus('mandatory')
wtSeriPrtProtocolChar = MibTableColumn((1, 3, 6, 1, 4, 1, 5040, 1, 1, 1, 3, 9, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 1)).setFixedLength(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wtSeriPrtProtocolChar.setStatus('mandatory')
wtSeriB2bMasterTable = MibTable((1, 3, 6, 1, 4, 1, 5040, 1, 1, 1, 3, 10), )
if mibBuilder.loadTexts: wtSeriB2bMasterTable.setStatus('mandatory')
wtSeriB2bMasterEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5040, 1, 1, 1, 3, 10, 1), ).setIndexNames((0, "Com-Server-Intern-MIB", "wtSeriInterfaceNo"))
if mibBuilder.loadTexts: wtSeriB2bMasterEntry.setStatus('mandatory')
wtSeriB2bMaster_SlavePort = MibScalar((1, 3, 6, 1, 4, 1, 5040, 1, 1, 1, 3, 10, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setLabel("wtSeriB2bMaster-SlavePort").setMaxAccess("readwrite")
if mibBuilder.loadTexts: wtSeriB2bMaster_SlavePort.setStatus('mandatory')
wtSeriB2bMaster_SlaveIp = MibScalar((1, 3, 6, 1, 4, 1, 5040, 1, 1, 1, 3, 10, 1, 2), IpAddress()).setLabel("wtSeriB2bMaster-SlaveIp").setMaxAccess("readwrite")
if mibBuilder.loadTexts: wtSeriB2bMaster_SlaveIp.setStatus('mandatory')
wtSeriB2bMaster_DispString1 = MibScalar((1, 3, 6, 1, 4, 1, 5040, 1, 1, 1, 3, 10, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(2, 2)).setFixedLength(2)).setLabel("wtSeriB2bMaster-DispString1").setMaxAccess("readwrite")
if mibBuilder.loadTexts: wtSeriB2bMaster_DispString1.setStatus('mandatory')
wtSeriB2bMaster_DispString2 = MibScalar((1, 3, 6, 1, 4, 1, 5040, 1, 1, 1, 3, 10, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(2, 2)).setFixedLength(2)).setLabel("wtSeriB2bMaster-DispString2").setMaxAccess("readwrite")
if mibBuilder.loadTexts: wtSeriB2bMaster_DispString2.setStatus('mandatory')
wtSeriB2bSlaveTable = MibTable((1, 3, 6, 1, 4, 1, 5040, 1, 1, 1, 3, 11), )
if mibBuilder.loadTexts: wtSeriB2bSlaveTable.setStatus('mandatory')
wtSeriB2bSlaveEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5040, 1, 1, 1, 3, 11, 1), ).setIndexNames((0, "Com-Server-Intern-MIB", "wtSeriInterfaceNo"))
if mibBuilder.loadTexts: wtSeriB2bSlaveEntry.setStatus('mandatory')
wtSeriB2bSlave_MasterPort = MibScalar((1, 3, 6, 1, 4, 1, 5040, 1, 1, 1, 3, 11, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setLabel("wtSeriB2bSlave-MasterPort").setMaxAccess("readonly")
if mibBuilder.loadTexts: wtSeriB2bSlave_MasterPort.setStatus('mandatory')
wtSeriB2bSlave_MasterIp = MibScalar((1, 3, 6, 1, 4, 1, 5040, 1, 1, 1, 3, 11, 1, 2), IpAddress()).setLabel("wtSeriB2bSlave-MasterIp").setMaxAccess("readonly")
if mibBuilder.loadTexts: wtSeriB2bSlave_MasterIp.setStatus('mandatory')
wtSeriB2bSlave_DispString1 = MibScalar((1, 3, 6, 1, 4, 1, 5040, 1, 1, 1, 3, 11, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(2, 2)).setFixedLength(2)).setLabel("wtSeriB2bSlave-DispString1").setMaxAccess("readwrite")
if mibBuilder.loadTexts: wtSeriB2bSlave_DispString1.setStatus('mandatory')
wtSeriB2bSlave_DispString2 = MibScalar((1, 3, 6, 1, 4, 1, 5040, 1, 1, 1, 3, 11, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(2, 2)).setFixedLength(2)).setLabel("wtSeriB2bSlave-DispString2").setMaxAccess("readwrite")
if mibBuilder.loadTexts: wtSeriB2bSlave_DispString2.setStatus('mandatory')
wtSeriIpBusTable = MibTable((1, 3, 6, 1, 4, 1, 5040, 1, 1, 1, 3, 12), )
if mibBuilder.loadTexts: wtSeriIpBusTable.setStatus('mandatory')
wtSeriIpBusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5040, 1, 1, 1, 3, 12, 1), ).setIndexNames((0, "Com-Server-Intern-MIB", "wtSeriInterfaceNo"))
if mibBuilder.loadTexts: wtSeriIpBusEntry.setStatus('mandatory')
wtSeriBusSlave_MasterIp = MibScalar((1, 3, 6, 1, 4, 1, 5040, 1, 1, 1, 3, 12, 1, 1), IpAddress()).setLabel("wtSeriBusSlave-MasterIp").setMaxAccess("readwrite")
if mibBuilder.loadTexts: wtSeriBusSlave_MasterIp.setStatus('mandatory')
wtSeriBusMaster_SubnetIp = MibScalar((1, 3, 6, 1, 4, 1, 5040, 1, 1, 1, 3, 12, 1, 2), IpAddress()).setLabel("wtSeriBusMaster-SubnetIp").setMaxAccess("readwrite")
if mibBuilder.loadTexts: wtSeriBusMaster_SubnetIp.setStatus('mandatory')
wtSeriSlipTable = MibTable((1, 3, 6, 1, 4, 1, 5040, 1, 1, 1, 3, 13), )
if mibBuilder.loadTexts: wtSeriSlipTable.setStatus('mandatory')
wtSeriSlipEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5040, 1, 1, 1, 3, 13, 1), ).setIndexNames((0, "Com-Server-Intern-MIB", "wtSeriInterfaceNo"))
if mibBuilder.loadTexts: wtSeriSlipEntry.setStatus('mandatory')
wtSeriSlipNetAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 5040, 1, 1, 1, 3, 13, 1, 1), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wtSeriSlipNetAddress.setStatus('mandatory')
wtSeriSlipNetRouting = MibTableColumn((1, 3, 6, 1, 4, 1, 5040, 1, 1, 1, 3, 13, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("wtSeriSlipNetRoutingOff", 1), ("wtSeriSlipNetRoutingOn", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wtSeriSlipNetRouting.setStatus('mandatory')
wtDeaPorts = MibScalar((1, 3, 6, 1, 4, 1, 5040, 1, 1, 1, 4, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wtDeaPorts.setStatus('mandatory')
wtDeaInterfaceTable = MibTable((1, 3, 6, 1, 4, 1, 5040, 1, 1, 1, 4, 2), )
if mibBuilder.loadTexts: wtDeaInterfaceTable.setStatus('mandatory')
wtDeaInterfaceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5040, 1, 1, 1, 4, 2, 1), ).setIndexNames((0, "Com-Server-Intern-MIB", "wtDeaInterfaceNo"))
if mibBuilder.loadTexts: wtDeaInterfaceEntry.setStatus('mandatory')
wtDeaInterfaceNo = MibTableColumn((1, 3, 6, 1, 4, 1, 5040, 1, 1, 1, 4, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wtDeaInterfaceNo.setStatus('mandatory')
wtDeaPortTable = MibTable((1, 3, 6, 1, 4, 1, 5040, 1, 1, 1, 4, 3), )
if mibBuilder.loadTexts: wtDeaPortTable.setStatus('mandatory')
wtDeaPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5040, 1, 1, 1, 4, 3, 1), ).setIndexNames((0, "Com-Server-Intern-MIB", "wtDeaInterfaceNo"))
if mibBuilder.loadTexts: wtDeaPortEntry.setStatus('mandatory')
wtDeaLocalPort = MibTableColumn((1, 3, 6, 1, 4, 1, 5040, 1, 1, 1, 4, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(49152, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wtDeaLocalPort.setStatus('mandatory')
wtDeaPortMode = MibTableColumn((1, 3, 6, 1, 4, 1, 5040, 1, 1, 1, 4, 3, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("wtDeaServerMode", 1), ("wtDeaTcpClient", 2), ("wtDeaBox2BoxMaster", 3), ("wtDeaUdpMode", 4), ("wtDeaSnmpAgent", 5), ("wtDeaBox2BoxSlave", 6)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wtDeaPortMode.setStatus('mandatory')
wtDeaDrvWatchdog = MibTableColumn((1, 3, 6, 1, 4, 1, 5040, 1, 1, 1, 4, 3, 1, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wtDeaDrvWatchdog.setStatus('mandatory')
wtDeaTcpClientTable = MibTable((1, 3, 6, 1, 4, 1, 5040, 1, 1, 1, 4, 4), )
if mibBuilder.loadTexts: wtDeaTcpClientTable.setStatus('mandatory')
wtDeaTcpClientEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5040, 1, 1, 1, 4, 4, 1), ).setIndexNames((0, "Com-Server-Intern-MIB", "wtDeaInterfaceNo"))
if mibBuilder.loadTexts: wtDeaTcpClientEntry.setStatus('mandatory')
wtDeaTcpServerPort = MibTableColumn((1, 3, 6, 1, 4, 1, 5040, 1, 1, 1, 4, 4, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wtDeaTcpServerPort.setStatus('mandatory')
wtDeaTcpServerIp = MibTableColumn((1, 3, 6, 1, 4, 1, 5040, 1, 1, 1, 4, 4, 1, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wtDeaTcpServerIp.setStatus('mandatory')
wtDeaTcpInactTimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 5040, 1, 1, 1, 4, 4, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wtDeaTcpInactTimeout.setStatus('mandatory')
wtDeaTcpConnectTimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 5040, 1, 1, 1, 4, 4, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wtDeaTcpConnectTimeout.setStatus('mandatory')
wtDeaTcpInputMask = MibTableColumn((1, 3, 6, 1, 4, 1, 5040, 1, 1, 1, 4, 4, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(2, 2)).setFixedLength(2)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wtDeaTcpInputMask.setStatus('mandatory')
wtDeaUdpClientTable = MibTable((1, 3, 6, 1, 4, 1, 5040, 1, 1, 1, 4, 5), )
if mibBuilder.loadTexts: wtDeaUdpClientTable.setStatus('mandatory')
wtDeaUdpClientEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5040, 1, 1, 1, 4, 5, 1), ).setIndexNames((0, "Com-Server-Intern-MIB", "wtDeaInterfaceNo"))
if mibBuilder.loadTexts: wtDeaUdpClientEntry.setStatus('mandatory')
wtDeaUdpServerPort = MibTableColumn((1, 3, 6, 1, 4, 1, 5040, 1, 1, 1, 4, 5, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wtDeaUdpServerPort.setStatus('mandatory')
wtDeaUdpServerIp = MibTableColumn((1, 3, 6, 1, 4, 1, 5040, 1, 1, 1, 4, 5, 1, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wtDeaUdpServerIp.setStatus('mandatory')
wtDeaUdpPacketProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 5040, 1, 1, 1, 4, 5, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("wtDeaUdpPacketProtocolOff", 1), ("wtDeaUdpPacketProtocolOn", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wtDeaUdpPacketProtocol.setStatus('mandatory')
wtDeaUdpInputMask = MibTableColumn((1, 3, 6, 1, 4, 1, 5040, 1, 1, 1, 4, 5, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(2, 2)).setFixedLength(2)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wtDeaUdpInputMask.setStatus('mandatory')
wtDeaUdpSendInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 5040, 1, 1, 1, 4, 5, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wtDeaUdpSendInterval.setStatus('mandatory')
wtDeaSnmpAgentTable = MibTable((1, 3, 6, 1, 4, 1, 5040, 1, 1, 1, 4, 6), )
if mibBuilder.loadTexts: wtDeaSnmpAgentTable.setStatus('mandatory')
wtDeaSnmpAgentEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5040, 1, 1, 1, 4, 6, 1), ).setIndexNames((0, "Com-Server-Intern-MIB", "wtDeaInterfaceNo"))
if mibBuilder.loadTexts: wtDeaSnmpAgentEntry.setStatus('mandatory')
wtDeaSnmpManagerIp = MibTableColumn((1, 3, 6, 1, 4, 1, 5040, 1, 1, 1, 4, 6, 1, 1), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wtDeaSnmpManagerIp.setStatus('mandatory')
wtDeaSnmpInputMask = MibTableColumn((1, 3, 6, 1, 4, 1, 5040, 1, 1, 1, 4, 6, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(2, 2)).setFixedLength(2)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wtDeaSnmpInputMask.setStatus('mandatory')
wtDeaSnmpSendInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 5040, 1, 1, 1, 4, 6, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wtDeaSnmpSendInterval.setStatus('mandatory')
wtDeaB2bMasterTable = MibTable((1, 3, 6, 1, 4, 1, 5040, 1, 1, 1, 4, 7), )
if mibBuilder.loadTexts: wtDeaB2bMasterTable.setStatus('mandatory')
wtDeaB2bMasterEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5040, 1, 1, 1, 4, 7, 1), ).setIndexNames((0, "Com-Server-Intern-MIB", "wtDeaInterfaceNo"))
if mibBuilder.loadTexts: wtDeaB2bMasterEntry.setStatus('mandatory')
wtDeaB2bMaster_SlavePort = MibScalar((1, 3, 6, 1, 4, 1, 5040, 1, 1, 1, 4, 7, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setLabel("wtDeaB2bMaster-SlavePort").setMaxAccess("readwrite")
if mibBuilder.loadTexts: wtDeaB2bMaster_SlavePort.setStatus('mandatory')
wtDeaB2bMaster_SlaveIp = MibScalar((1, 3, 6, 1, 4, 1, 5040, 1, 1, 1, 4, 7, 1, 2), IpAddress()).setLabel("wtDeaB2bMaster-SlaveIp").setMaxAccess("readwrite")
if mibBuilder.loadTexts: wtDeaB2bMaster_SlaveIp.setStatus('mandatory')
wtDeaB2bMaster_InputMask = MibScalar((1, 3, 6, 1, 4, 1, 5040, 1, 1, 1, 4, 7, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(2, 2)).setFixedLength(2)).setLabel("wtDeaB2bMaster-InputMask").setMaxAccess("readwrite")
if mibBuilder.loadTexts: wtDeaB2bMaster_InputMask.setStatus('mandatory')
wtDeaB2bMaster_SendInterval = MibScalar((1, 3, 6, 1, 4, 1, 5040, 1, 1, 1, 4, 7, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setLabel("wtDeaB2bMaster-SendInterval").setMaxAccess("readwrite")
if mibBuilder.loadTexts: wtDeaB2bMaster_SendInterval.setStatus('mandatory')
wtDeaB2bSlaveTable = MibTable((1, 3, 6, 1, 4, 1, 5040, 1, 1, 1, 4, 8), )
if mibBuilder.loadTexts: wtDeaB2bSlaveTable.setStatus('mandatory')
wtDeaB2bSlaveEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5040, 1, 1, 1, 4, 8, 1), ).setIndexNames((0, "Com-Server-Intern-MIB", "wtDeaInterfaceNo"))
if mibBuilder.loadTexts: wtDeaB2bSlaveEntry.setStatus('mandatory')
wtDeaB2bSlave_MasterPort = MibScalar((1, 3, 6, 1, 4, 1, 5040, 1, 1, 1, 4, 8, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setLabel("wtDeaB2bSlave-MasterPort").setMaxAccess("readonly")
if mibBuilder.loadTexts: wtDeaB2bSlave_MasterPort.setStatus('mandatory')
wtDeaB2bSlave_MasterIp = MibScalar((1, 3, 6, 1, 4, 1, 5040, 1, 1, 1, 4, 8, 1, 2), IpAddress()).setLabel("wtDeaB2bSlave-MasterIp").setMaxAccess("readonly")
if mibBuilder.loadTexts: wtDeaB2bSlave_MasterIp.setStatus('mandatory')
wtDeaB2bSlave_InputMask = MibScalar((1, 3, 6, 1, 4, 1, 5040, 1, 1, 1, 4, 8, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(2, 2)).setFixedLength(2)).setLabel("wtDeaB2bSlave-InputMask").setMaxAccess("readwrite")
if mibBuilder.loadTexts: wtDeaB2bSlave_InputMask.setStatus('mandatory')
wtDeaB2bSlave_SendInterval = MibScalar((1, 3, 6, 1, 4, 1, 5040, 1, 1, 1, 4, 8, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setLabel("wtDeaB2bSlave-SendInterval").setMaxAccess("readwrite")
if mibBuilder.loadTexts: wtDeaB2bSlave_SendInterval.setStatus('mandatory')
wtDeaDrvTable = MibTable((1, 3, 6, 1, 4, 1, 5040, 1, 1, 2, 1), )
if mibBuilder.loadTexts: wtDeaDrvTable.setStatus('mandatory')
wtDeaDrvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5040, 1, 1, 2, 1, 1), ).setIndexNames((0, "Com-Server-Intern-MIB", "wtDeaDrvInterfaceNo"))
if mibBuilder.loadTexts: wtDeaDrvEntry.setStatus('mandatory')
wtDeaDrvInterfaceNo = MibTableColumn((1, 3, 6, 1, 4, 1, 5040, 1, 1, 2, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wtDeaDrvInterfaceNo.setStatus('mandatory')
wtDeaDrvInputRegister = MibTableColumn((1, 3, 6, 1, 4, 1, 5040, 1, 1, 2, 1, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(2, 2)).setFixedLength(2)).setMaxAccess("readonly")
if mibBuilder.loadTexts: wtDeaDrvInputRegister.setStatus('mandatory')
wtDeaDrvOutputRegister = MibTableColumn((1, 3, 6, 1, 4, 1, 5040, 1, 1, 2, 1, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(2, 2)).setFixedLength(2)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wtDeaDrvOutputRegister.setStatus('mandatory')
wtDeaDrvSetBit = MibTableColumn((1, 3, 6, 1, 4, 1, 5040, 1, 1, 2, 1, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(4, 4)).setFixedLength(4)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wtDeaDrvSetBit.setStatus('mandatory')
wtDeaDrvTrapInputMask = MibTableColumn((1, 3, 6, 1, 4, 1, 5040, 1, 1, 2, 1, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(2, 2)).setFixedLength(2)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wtDeaDrvTrapInputMask.setStatus('mandatory')
wtDeaDrvTrapInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 5040, 1, 1, 2, 1, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wtDeaDrvTrapInterval.setStatus('mandatory')
deaInputChangedAlert = NotificationType((1, 3, 6, 1, 4, 1, 5040, 1, 1, 2, 1, 1) + (0,1)).setObjects(("Com-Server-Intern-MIB", "wtDeaDrvInputRegister"))
deaIntervalExpiredAlert = NotificationType((1, 3, 6, 1, 4, 1, 5040, 1, 1, 2, 1, 1) + (0,2)).setObjects(("Com-Server-Intern-MIB", "wtDeaDrvInputRegister"))
mibBuilder.exportSymbols("Com-Server-Intern-MIB", wtSeriLocalPort=wtSeriLocalPort, wtSeriTcpDispString2=wtSeriTcpDispString2, wtDeaB2bSlaveTable=wtDeaB2bSlaveTable, wtSeriTcpInactTimeout=wtSeriTcpInactTimeout, wtSeriFtpServerUrl=wtSeriFtpServerUrl, wtComServerIntern=wtComServerIntern, wtDeaTcpServerPort=wtDeaTcpServerPort, wtSeriMultiPortPrtEntry=wtSeriMultiPortPrtEntry, wtSerialPorts=wtSerialPorts, wtDeaUdpServerPort=wtDeaUdpServerPort, wtSeriUdpClientTable=wtSeriUdpClientTable, wtSeriPrtSeriCoding=wtSeriPrtSeriCoding, wtSeriB2bMaster_SlaveIp=wtSeriB2bMaster_SlaveIp, wtSeriSlipNetAddress=wtSeriSlipNetAddress, wtSeriTelnetServerIp=wtSeriTelnetServerIp, wtSeriControlPort=wtSeriControlPort, wtDatabits=wtDatabits, wtSeriPortSetup=wtSeriPortSetup, wtSubnetMask=wtSubnetMask, wtDeaDrvTrapInterval=wtDeaDrvTrapInterval, wtSeriB2bMaster_DispString1=wtSeriB2bMaster_DispString1, wtSeriUdpSeriCoding=wtSeriUdpSeriCoding, wtDeaB2bSlaveEntry=wtDeaB2bSlaveEntry, wtDeaPortSetup=wtDeaPortSetup, wtSeriFtpConnectTimeout=wtSeriFtpConnectTimeout, wtSeriBusSlave_MasterIp=wtSeriBusSlave_MasterIp, wtStopbits=wtStopbits, wtDeaB2bMaster_SendInterval=wtDeaB2bMaster_SendInterval, wtSeriB2bMaster_SlavePort=wtSeriB2bMaster_SlavePort, wtDeaTcpInactTimeout=wtDeaTcpInactTimeout, wtSeriPortMode=wtSeriPortMode, wtDeaDrvEntry=wtDeaDrvEntry, wtSeriB2bSlave_DispString2=wtSeriB2bSlave_DispString2, wtKeepAlive=wtKeepAlive, wtMacAddress=wtMacAddress, wtMibRev=wtMibRev, wtSeriUartEntry=wtSeriUartEntry, wtBaudDivisor=wtBaudDivisor, wtDeaInterfaceNo=wtDeaInterfaceNo, wtSeriInQueue=wtSeriInQueue, wtSeriMultiPortPrtTable=wtSeriMultiPortPrtTable, wtSeriSlipTable=wtSeriSlipTable, wtGateway=wtGateway, wtDeaUdpClientTable=wtDeaUdpClientTable, wtSystem=wtSystem, wtDeaUdpSendInterval=wtDeaUdpSendInterval, wtHsFunctions=wtHsFunctions, wtSeriRemotePort=wtSeriRemotePort, wtSeriUdpCAddress=wtSeriUdpCAddress, wtSeriInterfaceTable=wtSeriInterfaceTable, wtDeaUdpPacketProtocol=wtDeaUdpPacketProtocol, wtDhcpClient=wtDhcpClient, wtSeriTcpClientTable=wtSeriTcpClientTable, wtSeriFtpClientTable=wtSeriFtpClientTable, wtSeriUdpClientEntry=wtSeriUdpClientEntry, wtDeaSnmpAgentTable=wtDeaSnmpAgentTable, wtRunTime=wtRunTime, wtSeriFtpClientEntry=wtSeriFtpClientEntry, wtDeaUdpInputMask=wtDeaUdpInputMask, deaIntervalExpiredAlert=deaIntervalExpiredAlert, wtSysName=wtSysName, wtSeriTcpConnectTimeout=wtSeriTcpConnectTimeout, wtSeriFtpServerIp=wtSeriFtpServerIp, wtSeriPrtProtocolChar=wtSeriPrtProtocolChar, wtSeriUdpDispString2=wtSeriUdpDispString2, wtSeriTelnetClientEntry=wtSeriTelnetClientEntry, wtDeaB2bSlave_SendInterval=wtDeaB2bSlave_SendInterval, wtSeriUdpServerIp=wtSeriUdpServerIp, wtDeaPortTable=wtDeaPortTable, wtSeriFtpLoginString=wtSeriFtpLoginString, wtSeriUdpDisconnectChar=wtSeriUdpDisconnectChar, wtNetSetup=wtNetSetup, wtDeaDrvTable=wtDeaDrvTable, wtSeriPortEntry=wtSeriPortEntry, wtParity=wtParity, wtSeriTelnetDisconnectChar=wtSeriTelnetDisconnectChar, wtSeriTcpDispString1=wtSeriTcpDispString1, wtDeaInterfaceTable=wtDeaInterfaceTable, wtDeaDrvWatchdog=wtDeaDrvWatchdog, wtSeriInterfaceNo=wtSeriInterfaceNo, wtSeriTcpServerUrl=wtSeriTcpServerUrl, wtHsLines=wtHsLines, wtSwRev=wtSwRev, wtLinkSpeed=wtLinkSpeed, deaInputChangedAlert=deaInputChangedAlert, wtConfiguration=wtConfiguration, wtDeaB2bMaster_InputMask=wtDeaB2bMaster_InputMask, wtDeaB2bSlave_MasterIp=wtDeaB2bSlave_MasterIp, wtSeriUdpServerPort=wtSeriUdpServerPort, wtSeriTelnetChangeLineout=wtSeriTelnetChangeLineout, wtDeaPortMode=wtDeaPortMode, wtSeriFtpAutoFtp=wtSeriFtpAutoFtp, wtDeaSnmpManagerIp=wtDeaSnmpManagerIp, wtSeriNetPckDelay=wtSeriNetPckDelay, wtSysPswd=wtSysPswd, wtPassword=wtPassword, wtDeaB2bMaster_SlavePort=wtDeaB2bMaster_SlavePort, wtSeriBusMaster_SubnetIp=wtSeriBusMaster_SubnetIp, wtUartFifo=wtUartFifo, wtSeriB2bSlaveTable=wtSeriB2bSlaveTable, wtSeriTelnetServerUrl=wtSeriTelnetServerUrl, wtSeriTcpResponseMode=wtSeriTcpResponseMode, wtMtu=wtMtu, wtSeriPrtSeriProtocol=wtSeriPrtSeriProtocol, wtSeriIpBusTable=wtSeriIpBusTable, wtSeriB2bMasterEntry=wtSeriB2bMasterEntry, wtSeriUdpSeriProtocol=wtSeriUdpSeriProtocol, wtSeriFlushBuf=wtSeriFlushBuf, wut=wut, wtSeriB2bSlave_DispString1=wtSeriB2bSlave_DispString1, wtConfigMode=wtConfigMode, wtDeaDrvOutputRegister=wtDeaDrvOutputRegister, wtDeaB2bMaster_SlaveIp=wtDeaB2bMaster_SlaveIp, wtDeaSnmpSendInterval=wtDeaSnmpSendInterval, wtDeaLocalPort=wtDeaLocalPort, wtCableType=wtCableType, wtDeaB2bSlave_InputMask=wtDeaB2bSlave_InputMask, wtSeriIpBusEntry=wtSeriIpBusEntry, wtSeriFtpInactTimeout=wtSeriFtpInactTimeout, wtSeriTcpCAddress=wtSeriTcpCAddress, wtSeriTelnetInactTimeout=wtSeriTelnetInactTimeout, wtDeaTcpConnectTimeout=wtDeaTcpConnectTimeout, wtDeaUdpClientEntry=wtDeaUdpClientEntry, wtSeriFtpProtocolChar=wtSeriFtpProtocolChar, wtDeaTcpClientTable=wtDeaTcpClientTable, wtSwDate=wtSwDate, wtDeaDrvTrapInputMask=wtDeaDrvTrapInputMask, wtDeaTcpServerIp=wtDeaTcpServerIp, wtDeaSnmpAgentEntry=wtDeaSnmpAgentEntry, wtDeaDrvSetBit=wtDeaDrvSetBit, wtSeriPortTable=wtSeriPortTable, wtSeriTelnetClientTable=wtSeriTelnetClientTable, wtDeaSnmpInputMask=wtDeaSnmpInputMask, wtUartBaudrate=wtUartBaudrate, wtBootpClient=wtBootpClient, wtSeriSlipEntry=wtSeriSlipEntry, wtSeriUdpServerUrl=wtSeriUdpServerUrl, wtSeriSlipNetRouting=wtSeriSlipNetRouting, wtSeriB2bMasterTable=wtSeriB2bMasterTable, wtDeaTcpClientEntry=wtDeaTcpClientEntry, wtSeriFtpServerPort=wtSeriFtpServerPort, wtSeriUdpWrCAddress=wtSeriUdpWrCAddress, wtRetransmTimeout=wtRetransmTimeout, wtSeriB2bSlave_MasterPort=wtSeriB2bSlave_MasterPort, wtSeriTelnetServerPort=wtSeriTelnetServerPort, wtPhysPorts=wtPhysPorts, wtSeriTcpDisconnectChar=wtSeriTcpDisconnectChar, wtSeriB2bSlaveEntry=wtSeriB2bSlaveEntry, wtSeriB2bSlave_MasterIp=wtSeriB2bSlave_MasterIp, wtDeaInterfaceEntry=wtDeaInterfaceEntry, wtDeaUdpServerIp=wtDeaUdpServerIp, wtSeriInterfaceEntry=wtSeriInterfaceEntry, wtDeaDriver=wtDeaDriver, wtDeaDrvInterfaceNo=wtDeaDrvInterfaceNo, wtSeriTcpClientEntry=wtSeriTcpClientEntry, wtDeaB2bMasterEntry=wtDeaB2bMasterEntry, wtSeriPortState=wtSeriPortState, wtSeriRemoteIP=wtSeriRemoteIP, wtDeaDrvInputRegister=wtDeaDrvInputRegister, wtBaudrate=wtBaudrate, wtComServer=wtComServer, wtSeriB2bMaster_DispString2=wtSeriB2bMaster_DispString2, wtDeaPortEntry=wtDeaPortEntry, wtSeriTcpServerPort=wtSeriTcpServerPort, wtSeriUartTable=wtSeriUartTable, wtDeaTcpInputMask=wtDeaTcpInputMask, wtDeaB2bSlave_MasterPort=wtDeaB2bSlave_MasterPort, wtSeriTelnetEcho=wtSeriTelnetEcho, wtDevType=wtDevType, wtSeriTcpServerIp=wtSeriTcpServerIp, wtDnsSrv=wtDnsSrv, wtIpAddress=wtIpAddress, wtDeaPorts=wtDeaPorts, wtWbmPort=wtWbmPort, wtDeaB2bMasterTable=wtDeaB2bMasterTable, wtSeriUdpDispString1=wtSeriUdpDispString1)
