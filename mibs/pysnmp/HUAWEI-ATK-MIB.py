#
# PySNMP MIB module HUAWEI-ATK-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/HUAWEI-ATK-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:30:54 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ConstraintsUnion, ValueSizeConstraint, ValueRangeConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ConstraintsUnion", "ValueSizeConstraint", "ValueRangeConstraint", "ConstraintsIntersection")
hwDatacomm, = mibBuilder.importSymbols("HUAWEI-MIB", "hwDatacomm")
mplsVpnVrfName, = mibBuilder.importSymbols("MPLS-VPN-MIB", "mplsVpnVrfName")
NotificationGroup, ModuleCompliance, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance", "ObjectGroup")
Counter32, ModuleIdentity, iso, Integer32, Bits, Counter64, TimeTicks, MibScalar, MibTable, MibTableRow, MibTableColumn, Unsigned32, Gauge32, IpAddress, MibIdentifier, ObjectIdentity, NotificationType = mibBuilder.importSymbols("SNMPv2-SMI", "Counter32", "ModuleIdentity", "iso", "Integer32", "Bits", "Counter64", "TimeTicks", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Unsigned32", "Gauge32", "IpAddress", "MibIdentifier", "ObjectIdentity", "NotificationType")
TruthValue, DisplayString, RowStatus, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "TruthValue", "DisplayString", "RowStatus", "TextualConvention")
hwATKComm = ModuleIdentity((1, 3, 6, 1, 4, 1, 2011, 5, 25, 10, 1))
if mibBuilder.loadTexts: hwATKComm.setLastUpdated('200304110900Z')
if mibBuilder.loadTexts: hwATKComm.setOrganization('Huawei Technologies co.,Ltd.')
hwATK = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 10))
hwAtkGlobalMibObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 10, 1, 1))
hwAtkIpSpoofingSw = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 10, 1, 1, 1), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwAtkIpSpoofingSw.setStatus('current')
hwAtkLandSw = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 10, 1, 1, 2), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwAtkLandSw.setStatus('current')
hwAtkSmurfSw = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 10, 1, 1, 3), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwAtkSmurfSw.setStatus('current')
hwAtkFraggleSw = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 10, 1, 1, 4), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwAtkFraggleSw.setStatus('current')
hwAtkWinNukeSw = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 10, 1, 1, 5), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwAtkWinNukeSw.setStatus('current')
hwAtkIcmpRedirectSw = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 10, 1, 1, 6), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwAtkIcmpRedirectSw.setStatus('current')
hwAtkIcmpUnReachSw = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 10, 1, 1, 7), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwAtkIcmpUnReachSw.setStatus('current')
hwAtkSourceRouteSw = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 10, 1, 1, 8), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwAtkSourceRouteSw.setStatus('current')
hwAtkRouteRecordSw = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 10, 1, 1, 9), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwAtkRouteRecordSw.setStatus('current')
hwAtkTracertSw = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 10, 1, 1, 10), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwAtkTracertSw.setStatus('current')
hwAtkTcpFlagSw = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 10, 1, 1, 11), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwAtkTcpFlagSw.setStatus('current')
hwAtkPingOfDeathSw = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 10, 1, 1, 12), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwAtkPingOfDeathSw.setStatus('current')
hwAtkTeardropSw = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 10, 1, 1, 13), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwAtkTeardropSw.setStatus('current')
hwAtkFragFlagSw = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 10, 1, 1, 14), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwAtkFragFlagSw.setStatus('current')
hwAtkIPSweepSw = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 10, 1, 1, 15), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwAtkIPSweepSw.setStatus('current')
hwAtkIpSweepSpeed = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 10, 1, 1, 16), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 10000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwAtkIpSweepSpeed.setStatus('current')
hwAtkIPSweepBlsTime = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 10, 1, 1, 17), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwAtkIPSweepBlsTime.setStatus('current')
hwAtkPortScanSw = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 10, 1, 1, 18), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwAtkPortScanSw.setStatus('current')
hwAtkPortScanSpeed = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 10, 1, 1, 19), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 10000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwAtkPortScanSpeed.setStatus('current')
hwAtkPortScanBlsTime = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 10, 1, 1, 20), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwAtkPortScanBlsTime.setStatus('current')
hwAtkLargeIcmpSw = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 10, 1, 1, 21), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwAtkLargeIcmpSw.setStatus('current')
hwAtkIcmpLength = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 10, 1, 1, 22), Integer32().subtype(subtypeSpec=ValueRangeConstraint(8, 65535)).clone(4000)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwAtkIcmpLength.setStatus('current')
hwAtkSynFloodSw = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 10, 1, 1, 23), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwAtkSynFloodSw.setStatus('current')
hwAtkUdpFloodSw = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 10, 1, 1, 24), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwAtkUdpFloodSw.setStatus('current')
hwAtkIcmpFloodSw = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 10, 1, 1, 25), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwAtkIcmpFloodSw.setStatus('current')
hwAtkIPMibObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 10, 1, 2))
hwAtkSynFloodIPTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 10, 1, 2, 1), )
if mibBuilder.loadTexts: hwAtkSynFloodIPTable.setStatus('current')
hwAtkSynFloodIPEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 10, 1, 2, 1, 1), ).setIndexNames((0, "MPLS-VPN-MIB", "mplsVpnVrfName"), (0, "HUAWEI-ATK-MIB", "hwAtkSynFloodIP"))
if mibBuilder.loadTexts: hwAtkSynFloodIPEntry.setStatus('current')
hwAtkSynFloodIP = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 10, 1, 2, 1, 1, 1), IpAddress())
if mibBuilder.loadTexts: hwAtkSynFloodIP.setStatus('current')
hwAtkIPSynFloodSynSpeed = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 10, 1, 2, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1000000)).clone(1000)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwAtkIPSynFloodSynSpeed.setStatus('current')
hwAtkIPSynFloodHalfMax = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 10, 1, 2, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 10000000))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwAtkIPSynFloodHalfMax.setStatus('current')
hwAtkIPSynFloodHalfAge = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 10, 1, 2, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)).clone(20)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwAtkIPSynFloodHalfAge.setStatus('current')
hwAtkIPSynFloodProxy = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 10, 1, 2, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("auto", 1), ("on", 2), ("off", 3))).clone('auto')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwAtkIPSynFloodProxy.setStatus('current')
hwAtkIPSynFloodStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 10, 1, 2, 1, 1, 6), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwAtkIPSynFloodStatus.setStatus('current')
hwAtkUdpFloodIPTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 10, 1, 2, 2), )
if mibBuilder.loadTexts: hwAtkUdpFloodIPTable.setStatus('current')
hwAtkUdpFloodIPEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 10, 1, 2, 2, 1), ).setIndexNames((0, "MPLS-VPN-MIB", "mplsVpnVrfName"), (0, "HUAWEI-ATK-MIB", "hwAtkUdpFloodIP"))
if mibBuilder.loadTexts: hwAtkUdpFloodIPEntry.setStatus('current')
hwAtkUdpFloodIP = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 10, 1, 2, 2, 1, 1), IpAddress())
if mibBuilder.loadTexts: hwAtkUdpFloodIP.setStatus('current')
hwAtkIPUdpFloodSpeed = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 10, 1, 2, 2, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1000000)).clone(1000)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwAtkIPUdpFloodSpeed.setStatus('current')
hwAtkIPUdpFloodStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 10, 1, 2, 2, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwAtkIPUdpFloodStatus.setStatus('current')
hwAtkIcmpFloodIPTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 10, 1, 2, 3), )
if mibBuilder.loadTexts: hwAtkIcmpFloodIPTable.setStatus('current')
hwAtkIcmpFloodIPEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 10, 1, 2, 3, 1), ).setIndexNames((0, "MPLS-VPN-MIB", "mplsVpnVrfName"), (0, "HUAWEI-ATK-MIB", "hwAtkIcmpFloodIP"))
if mibBuilder.loadTexts: hwAtkIcmpFloodIPEntry.setStatus('current')
hwAtkIcmpFloodIP = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 10, 1, 2, 3, 1, 1), IpAddress())
if mibBuilder.loadTexts: hwAtkIcmpFloodIP.setStatus('current')
hwAtkIPIcmpFloodSpeed = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 10, 1, 2, 3, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1000000)).clone(1000)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwAtkIPIcmpFloodSpeed.setStatus('current')
hwAtkIPIcmpFloodStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 10, 1, 2, 3, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwAtkIPIcmpFloodStatus.setStatus('current')
hwAtkCommConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 10, 1, 3))
hwAtkCommCompliance = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 10, 1, 3, 1))
hwAtkCommMibGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 10, 1, 3, 2))
hwAtkGlobalCfgGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 10, 1, 3, 2, 1)).setObjects(("HUAWEI-ATK-MIB", "hwAtkIpSpoofingSw"), ("HUAWEI-ATK-MIB", "hwAtkLandSw"), ("HUAWEI-ATK-MIB", "hwAtkSmurfSw"), ("HUAWEI-ATK-MIB", "hwAtkFraggleSw"), ("HUAWEI-ATK-MIB", "hwAtkWinNukeSw"), ("HUAWEI-ATK-MIB", "hwAtkIcmpRedirectSw"), ("HUAWEI-ATK-MIB", "hwAtkIcmpUnReachSw"), ("HUAWEI-ATK-MIB", "hwAtkSourceRouteSw"), ("HUAWEI-ATK-MIB", "hwAtkRouteRecordSw"), ("HUAWEI-ATK-MIB", "hwAtkTracertSw"), ("HUAWEI-ATK-MIB", "hwAtkTcpFlagSw"), ("HUAWEI-ATK-MIB", "hwAtkPingOfDeathSw"), ("HUAWEI-ATK-MIB", "hwAtkTeardropSw"), ("HUAWEI-ATK-MIB", "hwAtkFragFlagSw"), ("HUAWEI-ATK-MIB", "hwAtkIPSweepSw"), ("HUAWEI-ATK-MIB", "hwAtkIpSweepSpeed"), ("HUAWEI-ATK-MIB", "hwAtkIPSweepBlsTime"), ("HUAWEI-ATK-MIB", "hwAtkPortScanSw"), ("HUAWEI-ATK-MIB", "hwAtkPortScanSpeed"), ("HUAWEI-ATK-MIB", "hwAtkPortScanBlsTime"), ("HUAWEI-ATK-MIB", "hwAtkLargeIcmpSw"), ("HUAWEI-ATK-MIB", "hwAtkIcmpLength"), ("HUAWEI-ATK-MIB", "hwAtkSynFloodSw"), ("HUAWEI-ATK-MIB", "hwAtkUdpFloodSw"), ("HUAWEI-ATK-MIB", "hwAtkIcmpFloodSw"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwAtkGlobalCfgGroup = hwAtkGlobalCfgGroup.setStatus('current')
hwAtkCommSynFloodGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 10, 1, 3, 2, 2)).setObjects(("HUAWEI-ATK-MIB", "hwAtkIPSynFloodSynSpeed"), ("HUAWEI-ATK-MIB", "hwAtkIPSynFloodHalfMax"), ("HUAWEI-ATK-MIB", "hwAtkIPSynFloodHalfAge"), ("HUAWEI-ATK-MIB", "hwAtkIPSynFloodProxy"), ("HUAWEI-ATK-MIB", "hwAtkIPSynFloodStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwAtkCommSynFloodGroup = hwAtkCommSynFloodGroup.setStatus('current')
hwAtkCommUdpFloodGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 10, 1, 3, 2, 3)).setObjects(("HUAWEI-ATK-MIB", "hwAtkIPUdpFloodSpeed"), ("HUAWEI-ATK-MIB", "hwAtkIPUdpFloodStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwAtkCommUdpFloodGroup = hwAtkCommUdpFloodGroup.setStatus('current')
hwAtkCommIcmpFloodGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 10, 1, 3, 2, 4)).setObjects(("HUAWEI-ATK-MIB", "hwAtkIPIcmpFloodSpeed"), ("HUAWEI-ATK-MIB", "hwAtkIPIcmpFloodStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwAtkCommIcmpFloodGroup = hwAtkCommIcmpFloodGroup.setStatus('current')
mibBuilder.exportSymbols("HUAWEI-ATK-MIB", hwAtkCommUdpFloodGroup=hwAtkCommUdpFloodGroup, hwAtkFragFlagSw=hwAtkFragFlagSw, hwAtkTracertSw=hwAtkTracertSw, hwAtkGlobalMibObjects=hwAtkGlobalMibObjects, hwAtkPortScanBlsTime=hwAtkPortScanBlsTime, hwAtkUdpFloodIPTable=hwAtkUdpFloodIPTable, hwAtkIPIcmpFloodStatus=hwAtkIPIcmpFloodStatus, hwAtkIPUdpFloodStatus=hwAtkIPUdpFloodStatus, hwAtkIcmpLength=hwAtkIcmpLength, hwAtkSynFloodSw=hwAtkSynFloodSw, hwAtkSynFloodIP=hwAtkSynFloodIP, hwAtkIPMibObjects=hwAtkIPMibObjects, hwAtkIPUdpFloodSpeed=hwAtkIPUdpFloodSpeed, hwAtkIPSynFloodStatus=hwAtkIPSynFloodStatus, hwAtkIpSweepSpeed=hwAtkIpSweepSpeed, hwAtkIPSynFloodHalfAge=hwAtkIPSynFloodHalfAge, hwAtkUdpFloodIP=hwAtkUdpFloodIP, hwAtkIPSweepSw=hwAtkIPSweepSw, hwAtkPingOfDeathSw=hwAtkPingOfDeathSw, hwAtkIPSweepBlsTime=hwAtkIPSweepBlsTime, hwAtkIPSynFloodHalfMax=hwAtkIPSynFloodHalfMax, hwAtkIpSpoofingSw=hwAtkIpSpoofingSw, hwAtkCommConformance=hwAtkCommConformance, hwAtkIcmpFloodSw=hwAtkIcmpFloodSw, hwAtkCommIcmpFloodGroup=hwAtkCommIcmpFloodGroup, hwAtkIPSynFloodProxy=hwAtkIPSynFloodProxy, hwAtkIcmpFloodIPTable=hwAtkIcmpFloodIPTable, hwAtkIcmpFloodIPEntry=hwAtkIcmpFloodIPEntry, hwAtkFraggleSw=hwAtkFraggleSw, hwAtkCommCompliance=hwAtkCommCompliance, hwAtkGlobalCfgGroup=hwAtkGlobalCfgGroup, hwAtkUdpFloodSw=hwAtkUdpFloodSw, hwAtkCommMibGroups=hwAtkCommMibGroups, hwAtkLandSw=hwAtkLandSw, hwATK=hwATK, hwAtkSynFloodIPTable=hwAtkSynFloodIPTable, hwAtkSourceRouteSw=hwAtkSourceRouteSw, hwAtkPortScanSw=hwAtkPortScanSw, hwAtkSynFloodIPEntry=hwAtkSynFloodIPEntry, hwAtkSmurfSw=hwAtkSmurfSw, hwAtkCommSynFloodGroup=hwAtkCommSynFloodGroup, hwAtkWinNukeSw=hwAtkWinNukeSw, hwAtkIcmpFloodIP=hwAtkIcmpFloodIP, hwAtkIcmpRedirectSw=hwAtkIcmpRedirectSw, hwAtkIPSynFloodSynSpeed=hwAtkIPSynFloodSynSpeed, hwAtkTcpFlagSw=hwAtkTcpFlagSw, PYSNMP_MODULE_ID=hwATKComm, hwAtkTeardropSw=hwAtkTeardropSw, hwAtkRouteRecordSw=hwAtkRouteRecordSw, hwAtkLargeIcmpSw=hwAtkLargeIcmpSw, hwAtkIPIcmpFloodSpeed=hwAtkIPIcmpFloodSpeed, hwATKComm=hwATKComm, hwAtkIcmpUnReachSw=hwAtkIcmpUnReachSw, hwAtkUdpFloodIPEntry=hwAtkUdpFloodIPEntry, hwAtkPortScanSpeed=hwAtkPortScanSpeed)
