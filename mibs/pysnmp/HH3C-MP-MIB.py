#
# PySNMP MIB module HH3C-MP-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/HH3C-MP-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:15:35 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ValueSizeConstraint, ConstraintsIntersection, SingleValueConstraint, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ValueSizeConstraint", "ConstraintsIntersection", "SingleValueConstraint", "ValueRangeConstraint")
hh3cRhw, = mibBuilder.importSymbols("HH3C-OID-MIB", "hh3cRhw")
ifIndex, = mibBuilder.importSymbols("IF-MIB", "ifIndex")
ObjectGroup, NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "NotificationGroup", "ModuleCompliance")
NotificationType, Gauge32, TimeTicks, Counter64, ObjectIdentity, IpAddress, Integer32, Bits, iso, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter32, Unsigned32, MibIdentifier, ModuleIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "NotificationType", "Gauge32", "TimeTicks", "Counter64", "ObjectIdentity", "IpAddress", "Integer32", "Bits", "iso", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter32", "Unsigned32", "MibIdentifier", "ModuleIdentity")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
hh3cMultilinkPPP = ModuleIdentity((1, 3, 6, 1, 4, 1, 25506, 8, 33))
if mibBuilder.loadTexts: hh3cMultilinkPPP.setLastUpdated('200405180000Z')
if mibBuilder.loadTexts: hh3cMultilinkPPP.setOrganization('Hangzhou H3C Tech. Co., Ltd.')
hh3cMpObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 25506, 8, 33, 1))
hh3cMpMultilinkTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 8, 33, 1, 1), )
if mibBuilder.loadTexts: hh3cMpMultilinkTable.setStatus('current')
hh3cMpMultilinkEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 8, 33, 1, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: hh3cMpMultilinkEntry.setStatus('current')
hh3cMpMultilinkDescr = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 33, 1, 1, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cMpMultilinkDescr.setStatus('current')
hh3cMpBundleName = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 33, 1, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cMpBundleName.setStatus('current')
hh3cMpBundledSlot = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 33, 1, 1, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cMpBundledSlot.setStatus('current')
hh3cMpBundledMemberCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 33, 1, 1, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cMpBundledMemberCnt.setStatus('current')
hh3cMpLostFragments = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 33, 1, 1, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cMpLostFragments.setStatus('current')
hh3cMpReorderedPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 33, 1, 1, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cMpReorderedPkts.setStatus('current')
hh3cMpUnassignedPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 33, 1, 1, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cMpUnassignedPkts.setStatus('current')
hh3cMpInterleavedPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 33, 1, 1, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cMpInterleavedPkts.setStatus('current')
hh3cMpRcvdSequence = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 33, 1, 1, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cMpRcvdSequence.setStatus('current')
hh3cMpSentSequence = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 33, 1, 1, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cMpSentSequence.setStatus('current')
hh3cMpMemberlinkTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 8, 33, 1, 2), )
if mibBuilder.loadTexts: hh3cMpMemberlinkTable.setStatus('current')
hh3cMpMemberlinkEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 8, 33, 1, 2, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "HH3C-MP-MIB", "hh3cMpMemberlinkSeqNumber"))
if mibBuilder.loadTexts: hh3cMpMemberlinkEntry.setStatus('current')
hh3cMpMemberlinkSeqNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 33, 1, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cMpMemberlinkSeqNumber.setStatus('current')
hh3cMpMemberlinkIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 33, 1, 2, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cMpMemberlinkIfIndex.setStatus('current')
hh3cMpMemberlinkDescr = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 33, 1, 2, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cMpMemberlinkDescr.setStatus('current')
hh3cMpMemberlinkMpStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 33, 1, 2, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cMpMemberlinkMpStatus.setStatus('current')
hh3cMpNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 25506, 8, 33, 2))
hh3cMpConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 25506, 8, 33, 3))
hh3cMpCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 25506, 8, 33, 3, 1))
hh3cMpCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 25506, 8, 33, 3, 1, 1)).setObjects(("HH3C-MP-MIB", "hh3cMpMandatoryGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hh3cMpCompliance = hh3cMpCompliance.setStatus('current')
hh3cMpGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 25506, 8, 33, 3, 2))
hh3cMpMandatoryGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 25506, 8, 33, 3, 2, 1)).setObjects(("HH3C-MP-MIB", "hh3cMpBundledMemberCnt"), ("HH3C-MP-MIB", "hh3cMpMemberlinkSeqNumber"), ("HH3C-MP-MIB", "hh3cMpMemberlinkIfIndex"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hh3cMpMandatoryGroup = hh3cMpMandatoryGroup.setStatus('current')
hh3cMpInfoGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 25506, 8, 33, 3, 2, 2)).setObjects(("HH3C-MP-MIB", "hh3cMpMultilinkDescr"), ("HH3C-MP-MIB", "hh3cMpBundleName"), ("HH3C-MP-MIB", "hh3cMpBundledSlot"), ("HH3C-MP-MIB", "hh3cMpBundledMemberCnt"), ("HH3C-MP-MIB", "hh3cMpLostFragments"), ("HH3C-MP-MIB", "hh3cMpReorderedPkts"), ("HH3C-MP-MIB", "hh3cMpUnassignedPkts"), ("HH3C-MP-MIB", "hh3cMpInterleavedPkts"), ("HH3C-MP-MIB", "hh3cMpRcvdSequence"), ("HH3C-MP-MIB", "hh3cMpSentSequence"), ("HH3C-MP-MIB", "hh3cMpMemberlinkDescr"), ("HH3C-MP-MIB", "hh3cMpMemberlinkMpStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hh3cMpInfoGroup = hh3cMpInfoGroup.setStatus('current')
mibBuilder.exportSymbols("HH3C-MP-MIB", hh3cMpMemberlinkTable=hh3cMpMemberlinkTable, hh3cMpNotifications=hh3cMpNotifications, hh3cMpBundleName=hh3cMpBundleName, hh3cMpMultilinkEntry=hh3cMpMultilinkEntry, hh3cMpInterleavedPkts=hh3cMpInterleavedPkts, hh3cMpCompliances=hh3cMpCompliances, hh3cMpMultilinkTable=hh3cMpMultilinkTable, hh3cMpMemberlinkDescr=hh3cMpMemberlinkDescr, hh3cMultilinkPPP=hh3cMultilinkPPP, hh3cMpBundledMemberCnt=hh3cMpBundledMemberCnt, hh3cMpObjects=hh3cMpObjects, hh3cMpUnassignedPkts=hh3cMpUnassignedPkts, hh3cMpMemberlinkSeqNumber=hh3cMpMemberlinkSeqNumber, hh3cMpMemberlinkEntry=hh3cMpMemberlinkEntry, hh3cMpCompliance=hh3cMpCompliance, hh3cMpSentSequence=hh3cMpSentSequence, hh3cMpMultilinkDescr=hh3cMpMultilinkDescr, hh3cMpLostFragments=hh3cMpLostFragments, hh3cMpMemberlinkIfIndex=hh3cMpMemberlinkIfIndex, hh3cMpConformance=hh3cMpConformance, hh3cMpRcvdSequence=hh3cMpRcvdSequence, hh3cMpMemberlinkMpStatus=hh3cMpMemberlinkMpStatus, PYSNMP_MODULE_ID=hh3cMultilinkPPP, hh3cMpGroups=hh3cMpGroups, hh3cMpInfoGroup=hh3cMpInfoGroup, hh3cMpMandatoryGroup=hh3cMpMandatoryGroup, hh3cMpBundledSlot=hh3cMpBundledSlot, hh3cMpReorderedPkts=hh3cMpReorderedPkts)
