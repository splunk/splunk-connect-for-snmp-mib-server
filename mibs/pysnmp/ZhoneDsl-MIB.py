#
# PySNMP MIB module ZhoneDsl-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/ZhoneDsl-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 21:46:38 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ConstraintsUnion, ValueSizeConstraint, ConstraintsIntersection, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ConstraintsUnion", "ValueSizeConstraint", "ConstraintsIntersection", "ValueRangeConstraint")
ifIndex, = mibBuilder.importSymbols("IF-MIB", "ifIndex")
SnmpAdminString, = mibBuilder.importSymbols("SNMP-FRAMEWORK-MIB", "SnmpAdminString")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
Gauge32, ModuleIdentity, Counter32, MibScalar, MibTable, MibTableRow, MibTableColumn, Bits, Counter64, IpAddress, Unsigned32, ObjectIdentity, MibIdentifier, TimeTicks, NotificationType, Integer32, iso = mibBuilder.importSymbols("SNMPv2-SMI", "Gauge32", "ModuleIdentity", "Counter32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Bits", "Counter64", "IpAddress", "Unsigned32", "ObjectIdentity", "MibIdentifier", "TimeTicks", "NotificationType", "Integer32", "iso")
TextualConvention, DisplayString, VariablePointer = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString", "VariablePointer")
zhoneDsl, zhoneModules = mibBuilder.importSymbols("Zhone", "zhoneDsl", "zhoneModules")
ZhoneRowStatus, ZhoneAdminString = mibBuilder.importSymbols("Zhone-TC", "ZhoneRowStatus", "ZhoneAdminString")
zhoneDsl_MIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 5504, 6, 3)).setLabel("zhoneDsl-MIB")
zhoneDsl_MIB.setRevisions(('2000-04-26 17:53',))
if mibBuilder.loadTexts: zhoneDsl_MIB.setLastUpdated('200005111753Z')
if mibBuilder.loadTexts: zhoneDsl_MIB.setOrganization('Zhone')
zhoneDslLineTable = MibTable((1, 3, 6, 1, 4, 1, 5504, 5, 4, 1), )
if mibBuilder.loadTexts: zhoneDslLineTable.setStatus('current')
zhoneDslLineEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5504, 5, 4, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: zhoneDslLineEntry.setStatus('current')
zhoneDslLineType = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 5, 4, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 96))).clone(namedValues=NamedValues(("hdsl", 1), ("hdsl2", 2), ("shdsl", 3), ("sdsl", 96))).clone('hdsl2')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: zhoneDslLineType.setStatus('current')
zhoneDslLineCapabilities = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 5, 4, 1, 1, 2), Bits().clone(namedValues=NamedValues(("hdsl", 1), ("hdsl2", 2), ("shdsl", 4), ("sdsl", 8)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: zhoneDslLineCapabilities.setStatus('current')
zhoneDslLineStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 5, 4, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("down", 1), ("downloading", 2), ("activated", 3), ("training", 4), ("up", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: zhoneDslLineStatus.setStatus('current')
zhoneDslUpLineRate = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 5, 4, 1, 1, 4), Gauge32()).setUnits('bps').setMaxAccess("readonly")
if mibBuilder.loadTexts: zhoneDslUpLineRate.setStatus('current')
zhoneDslDownLineRate = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 5, 4, 1, 1, 5), Gauge32()).setUnits('bps').setMaxAccess("readonly")
if mibBuilder.loadTexts: zhoneDslDownLineRate.setStatus('current')
zhoneDslLineConfigProfile = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 5, 4, 1, 1, 6), ZhoneAdminString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: zhoneDslLineConfigProfile.setStatus('current')
zhoneDslLineAlarmProfile = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 5, 4, 1, 1, 7), ZhoneAdminString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: zhoneDslLineAlarmProfile.setStatus('current')
zhoneDslLineRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 5, 4, 1, 1, 8), ZhoneRowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zhoneDslLineRowStatus.setStatus('current')
zhoneHdsl2ConfigProfileTable = MibTable((1, 3, 6, 1, 4, 1, 5504, 5, 4, 3), )
if mibBuilder.loadTexts: zhoneHdsl2ConfigProfileTable.setStatus('current')
zhoneHdsl2ConfigProfileEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5504, 5, 4, 3, 1), ).setIndexNames((1, "ZhoneDsl-MIB", "zhoneHdsl2ConfigProfileName"))
if mibBuilder.loadTexts: zhoneHdsl2ConfigProfileEntry.setStatus('current')
zhoneHdsl2ConfigProfileName = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 5, 4, 3, 1, 1), ZhoneAdminString())
if mibBuilder.loadTexts: zhoneHdsl2ConfigProfileName.setStatus('current')
zhoneHdsl2ConfigUnitMode = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 5, 4, 3, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("co", 1), ("cpe", 2))).clone('co')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: zhoneHdsl2ConfigUnitMode.setStatus('current')
zhoneHdsl2ConfigTransmitPowerbackoffMode = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 5, 4, 3, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("backoff-disable", 1), ("backoff-enable", 2), ("no-change-backoff", 3))).clone('backoff-disable')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: zhoneHdsl2ConfigTransmitPowerbackoffMode.setStatus('current')
zhoneHdsl2ConfigDecoderCoeffA = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 5, 4, 3, 1, 4), Integer32().clone(970752)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: zhoneHdsl2ConfigDecoderCoeffA.setStatus('current')
zhoneHdsl2ConfigDecoderCoeffB = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 5, 4, 3, 1, 5), Integer32().clone(970752)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: zhoneHdsl2ConfigDecoderCoeffB.setStatus('current')
zhoneHdsl2ConfigFrameSyncWord = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 5, 4, 3, 1, 6), Integer32().clone(45)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: zhoneHdsl2ConfigFrameSyncWord.setStatus('current')
zhoneHdsl2ConfigStuffBits = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 5, 4, 3, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 15)).clone(15)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: zhoneHdsl2ConfigStuffBits.setStatus('current')
zhoneHdsl2ConfigRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 5, 4, 3, 1, 8), ZhoneRowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: zhoneHdsl2ConfigRowStatus.setStatus('current')
zhoneHdsl2StatusTable = MibTable((1, 3, 6, 1, 4, 1, 5504, 5, 4, 4), )
if mibBuilder.loadTexts: zhoneHdsl2StatusTable.setStatus('current')
zhoneHdsl2StatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5504, 5, 4, 4, 1), )
ifIndex.registerAugmentions(("ZhoneDsl-MIB", "zhoneHdsl2StatusEntry"))
zhoneHdsl2StatusEntry.setIndexNames(*ifIndex.getIndexNames())
if mibBuilder.loadTexts: zhoneHdsl2StatusEntry.setStatus('current')
zhoneHdsl2DriftAlarm = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 5, 4, 4, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("rx-clk-alarm", 1), ("tx-clk-alarm", 2), ("tx-rx-clk-alarm", 3), ("no-drift-alarm", 4), ("not-applicable", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: zhoneHdsl2DriftAlarm.setStatus('current')
zhoneHdsl2FramerIBStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 5, 4, 4, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 1)).setFixedLength(1)).setMaxAccess("readonly")
if mibBuilder.loadTexts: zhoneHdsl2FramerIBStatus.setStatus('current')
zhoneHdsl2LocalPSDMaskStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 5, 4, 4, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zhoneHdsl2LocalPSDMaskStatus.setStatus('current')
zhoneHdsl2LoopAttenuation = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 5, 4, 4, 1, 4), Integer32()).setUnits('tenth DB').setMaxAccess("readonly")
if mibBuilder.loadTexts: zhoneHdsl2LoopAttenuation.setStatus('current')
zhoneHdsl2LossWordStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 5, 4, 4, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("no-lossw-defect", 1), ("lossw-defect", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: zhoneHdsl2LossWordStatus.setStatus('current')
zhoneHdsl2RmtPSDMaskStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 5, 4, 4, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zhoneHdsl2RmtPSDMaskStatus.setStatus('current')
zhoneHdsl2RmtCountryCode = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 5, 4, 4, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zhoneHdsl2RmtCountryCode.setStatus('current')
zhoneHdsl2RmtVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 5, 4, 4, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zhoneHdsl2RmtVersion.setStatus('current')
zhoneHdsl2RmtProviderCode = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 5, 4, 4, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zhoneHdsl2RmtProviderCode.setStatus('current')
zhoneHdsl2RmtVendorData = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 5, 4, 4, 1, 10), OctetString().subtype(subtypeSpec=ValueSizeConstraint(8, 8)).setFixedLength(8)).setMaxAccess("readonly")
if mibBuilder.loadTexts: zhoneHdsl2RmtVendorData.setStatus('current')
zhoneHdsl2RmtTxEncoderA = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 5, 4, 4, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zhoneHdsl2RmtTxEncoderA.setStatus('current')
zhoneHdsl2RmtTxEncoderB = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 5, 4, 4, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zhoneHdsl2RmtTxEncoderB.setStatus('current')
zhoneHdsl2TipRingStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 5, 4, 4, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("normal", 1), ("reverse", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: zhoneHdsl2TipRingStatus.setStatus('current')
zhoneHdsl2FrameSyncWord = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 5, 4, 4, 1, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zhoneHdsl2FrameSyncWord.setStatus('current')
zhoneHdsl2StuffBits = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 5, 4, 4, 1, 15), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zhoneHdsl2StuffBits.setStatus('current')
zhoneDslPerfDataTable = MibTable((1, 3, 6, 1, 4, 1, 5504, 5, 4, 5), )
if mibBuilder.loadTexts: zhoneDslPerfDataTable.setStatus('current')
zhoneDslPerfDataEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5504, 5, 4, 5, 1), )
zhoneDslLineEntry.registerAugmentions(("ZhoneDsl-MIB", "zhoneDslPerfDataEntry"))
zhoneDslPerfDataEntry.setIndexNames(*zhoneDslLineEntry.getIndexNames())
if mibBuilder.loadTexts: zhoneDslPerfDataEntry.setStatus('current')
zhoneDslPerfLofs = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 5, 4, 5, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zhoneDslPerfLofs.setStatus('current')
zhoneDslPerfLoss = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 5, 4, 5, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zhoneDslPerfLoss.setStatus('current')
zhoneDslPerfLols = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 5, 4, 5, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zhoneDslPerfLols.setStatus('current')
zhoneDslPerfInits = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 5, 4, 5, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zhoneDslPerfInits.setStatus('current')
zhoneDslPerfCur15MinTimeElapsed = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 5, 4, 5, 1, 5), Gauge32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: zhoneDslPerfCur15MinTimeElapsed.setStatus('current')
zhoneDslPerfCur15MinLofs = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 5, 4, 5, 1, 6), Gauge32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: zhoneDslPerfCur15MinLofs.setStatus('current')
zhoneDslPerfCur15MinLoss = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 5, 4, 5, 1, 7), Gauge32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: zhoneDslPerfCur15MinLoss.setStatus('current')
zhoneDslPerfCur15MinLols = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 5, 4, 5, 1, 8), Gauge32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: zhoneDslPerfCur15MinLols.setStatus('current')
zhoneDslPerfCur15MinInits = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 5, 4, 5, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zhoneDslPerfCur15MinInits.setStatus('current')
zhoneDslAlarmProfileTable = MibTable((1, 3, 6, 1, 4, 1, 5504, 5, 4, 6), )
if mibBuilder.loadTexts: zhoneDslAlarmProfileTable.setStatus('current')
zhoneDslAlarmProfileEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5504, 5, 4, 6, 1), ).setIndexNames((1, "ZhoneDsl-MIB", "zhoneDslAlarmProfileName"))
if mibBuilder.loadTexts: zhoneDslAlarmProfileEntry.setStatus('current')
zhoneDslAlarmProfileName = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 5, 4, 6, 1, 1), ZhoneAdminString())
if mibBuilder.loadTexts: zhoneDslAlarmProfileName.setStatus('current')
zhoneDslThreshold15MinLoss = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 5, 4, 6, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 900))).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: zhoneDslThreshold15MinLoss.setStatus('current')
zhoneDslThreshold15MinLols = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 5, 4, 6, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 900))).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: zhoneDslThreshold15MinLols.setStatus('current')
zhoneDslThreshold15MinLofs = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 5, 4, 6, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 900))).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: zhoneDslThreshold15MinLofs.setStatus('current')
zhoneDslAlarmProfileRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 5, 4, 6, 1, 5), ZhoneAdminString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zhoneDslAlarmProfileRowStatus.setStatus('current')
mibBuilder.exportSymbols("ZhoneDsl-MIB", zhoneDslPerfCur15MinLofs=zhoneDslPerfCur15MinLofs, zhoneDslPerfDataEntry=zhoneDslPerfDataEntry, zhoneHdsl2ConfigUnitMode=zhoneHdsl2ConfigUnitMode, zhoneDslAlarmProfileEntry=zhoneDslAlarmProfileEntry, zhoneDslThreshold15MinLofs=zhoneDslThreshold15MinLofs, zhoneDslLineConfigProfile=zhoneDslLineConfigProfile, zhoneHdsl2ConfigStuffBits=zhoneHdsl2ConfigStuffBits, zhoneHdsl2StuffBits=zhoneHdsl2StuffBits, zhoneDslPerfLols=zhoneDslPerfLols, zhoneHdsl2LossWordStatus=zhoneHdsl2LossWordStatus, zhoneHdsl2LoopAttenuation=zhoneHdsl2LoopAttenuation, zhoneDslLineRowStatus=zhoneDslLineRowStatus, zhoneHdsl2LocalPSDMaskStatus=zhoneHdsl2LocalPSDMaskStatus, zhoneDslPerfCur15MinInits=zhoneDslPerfCur15MinInits, zhoneHdsl2RmtVendorData=zhoneHdsl2RmtVendorData, zhoneDslPerfDataTable=zhoneDslPerfDataTable, zhoneHdsl2ConfigProfileEntry=zhoneHdsl2ConfigProfileEntry, zhoneHdsl2RmtProviderCode=zhoneHdsl2RmtProviderCode, zhoneDslAlarmProfileRowStatus=zhoneDslAlarmProfileRowStatus, zhoneDslUpLineRate=zhoneDslUpLineRate, zhoneHdsl2FramerIBStatus=zhoneHdsl2FramerIBStatus, zhoneDslPerfCur15MinTimeElapsed=zhoneDslPerfCur15MinTimeElapsed, zhoneDslLineCapabilities=zhoneDslLineCapabilities, zhoneDslLineTable=zhoneDslLineTable, zhoneHdsl2RmtVersion=zhoneHdsl2RmtVersion, zhoneHdsl2ConfigProfileName=zhoneHdsl2ConfigProfileName, zhoneHdsl2ConfigDecoderCoeffA=zhoneHdsl2ConfigDecoderCoeffA, zhoneDslLineType=zhoneDslLineType, zhoneDslAlarmProfileTable=zhoneDslAlarmProfileTable, zhoneHdsl2ConfigFrameSyncWord=zhoneHdsl2ConfigFrameSyncWord, zhoneDslThreshold15MinLoss=zhoneDslThreshold15MinLoss, zhoneHdsl2ConfigRowStatus=zhoneHdsl2ConfigRowStatus, zhoneDslPerfLofs=zhoneDslPerfLofs, zhoneDslLineEntry=zhoneDslLineEntry, zhoneDslPerfLoss=zhoneDslPerfLoss, zhoneHdsl2ConfigTransmitPowerbackoffMode=zhoneHdsl2ConfigTransmitPowerbackoffMode, zhoneDslLineStatus=zhoneDslLineStatus, zhoneHdsl2DriftAlarm=zhoneHdsl2DriftAlarm, zhoneHdsl2RmtTxEncoderB=zhoneHdsl2RmtTxEncoderB, zhoneDslPerfInits=zhoneDslPerfInits, zhoneDslPerfCur15MinLols=zhoneDslPerfCur15MinLols, zhoneHdsl2ConfigProfileTable=zhoneHdsl2ConfigProfileTable, zhoneDslPerfCur15MinLoss=zhoneDslPerfCur15MinLoss, zhoneDsl_MIB=zhoneDsl_MIB, zhoneHdsl2StatusTable=zhoneHdsl2StatusTable, zhoneDslThreshold15MinLols=zhoneDslThreshold15MinLols, zhoneHdsl2RmtTxEncoderA=zhoneHdsl2RmtTxEncoderA, zhoneDslDownLineRate=zhoneDslDownLineRate, zhoneHdsl2RmtPSDMaskStatus=zhoneHdsl2RmtPSDMaskStatus, zhoneDslLineAlarmProfile=zhoneDslLineAlarmProfile, zhoneHdsl2ConfigDecoderCoeffB=zhoneHdsl2ConfigDecoderCoeffB, zhoneHdsl2TipRingStatus=zhoneHdsl2TipRingStatus, zhoneHdsl2RmtCountryCode=zhoneHdsl2RmtCountryCode, PYSNMP_MODULE_ID=zhoneDsl_MIB, zhoneHdsl2StatusEntry=zhoneHdsl2StatusEntry, zhoneDslAlarmProfileName=zhoneDslAlarmProfileName, zhoneHdsl2FrameSyncWord=zhoneHdsl2FrameSyncWord)
