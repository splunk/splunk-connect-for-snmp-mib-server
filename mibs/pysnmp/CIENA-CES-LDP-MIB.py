#
# PySNMP MIB module CIENA-CES-LDP-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CIENA-CES-LDP-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:31:45 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ConstraintsUnion, SingleValueConstraint, ValueSizeConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ConstraintsUnion", "SingleValueConstraint", "ValueSizeConstraint", "ConstraintsIntersection")
cienaCesNotifications, cienaCesConfig = mibBuilder.importSymbols("CIENA-SMI", "cienaCesNotifications", "cienaCesConfig")
CienaGlobalState, = mibBuilder.importSymbols("CIENA-TC", "CienaGlobalState")
MplsLdpIdentifier, = mibBuilder.importSymbols("MPLS-TC-STD-MIB", "MplsLdpIdentifier")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Bits, iso, Integer32, MibIdentifier, Counter32, Counter64, NotificationType, MibScalar, MibTable, MibTableRow, MibTableColumn, TimeTicks, Gauge32, IpAddress, ObjectIdentity, Unsigned32, ModuleIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "Bits", "iso", "Integer32", "MibIdentifier", "Counter32", "Counter64", "NotificationType", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "TimeTicks", "Gauge32", "IpAddress", "ObjectIdentity", "Unsigned32", "ModuleIdentity")
DisplayString, TruthValue, TextualConvention, MacAddress, RowStatus = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TruthValue", "TextualConvention", "MacAddress", "RowStatus")
cienaCesLdpMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 1271, 2, 1, 17))
cienaCesLdpMIB.setRevisions(('2016-07-15 00:00', '2016-07-11 00:00', '2013-04-18 00:00', '2011-02-02 00:00',))
if mibBuilder.loadTexts: cienaCesLdpMIB.setLastUpdated('201607150000Z')
if mibBuilder.loadTexts: cienaCesLdpMIB.setOrganization('Ciena, Inc')
cienaCesLdpMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 1271, 2, 1, 17, 1))
cienaCesLdpObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 1271, 2, 1, 17, 1, 1))
cienaCesLdp = MibIdentifier((1, 3, 6, 1, 4, 1, 1271, 2, 1, 17, 1, 2))
cienaCesLdpAdminStatus = MibScalar((1, 3, 6, 1, 4, 1, 1271, 2, 1, 17, 1, 1, 1), CienaGlobalState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesLdpAdminStatus.setStatus('current')
cienaCesLdpOperStatus = MibScalar((1, 3, 6, 1, 4, 1, 1271, 2, 1, 17, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("unknown", 0), ("up", 1), ("down", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesLdpOperStatus.setStatus('current')
cienaCesLdpHelloHoldTime = MibScalar((1, 3, 6, 1, 4, 1, 1271, 2, 1, 17, 1, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesLdpHelloHoldTime.setStatus('current')
cienaCesLdpKeepAliveHoldTime = MibScalar((1, 3, 6, 1, 4, 1, 1271, 2, 1, 17, 1, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesLdpKeepAliveHoldTime.setStatus('current')
cienaCesLdpGRAdminStatus = MibScalar((1, 3, 6, 1, 4, 1, 1271, 2, 1, 17, 1, 1, 5), CienaGlobalState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesLdpGRAdminStatus.setStatus('current')
cienaCesLdpGRMode = MibScalar((1, 3, 6, 1, 4, 1, 1271, 2, 1, 17, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("helpNeighbor", 1), ("restartCapable", 2), ("notApplicable", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesLdpGRMode.setStatus('current')
cienaCesLdpReconnectTime = MibScalar((1, 3, 6, 1, 4, 1, 1271, 2, 1, 17, 1, 1, 7), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 600000)).clone(60000)).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesLdpReconnectTime.setStatus('current')
cienaCesLdpRecoveryTime = MibScalar((1, 3, 6, 1, 4, 1, 1271, 2, 1, 17, 1, 1, 8), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 600000)).clone(180000)).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesLdpRecoveryTime.setStatus('current')
cienaCesLdpMaxPeerReconnect = MibScalar((1, 3, 6, 1, 4, 1, 1271, 2, 1, 17, 1, 1, 9), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 600000)).clone(180000)).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesLdpMaxPeerReconnect.setStatus('current')
cienaCesLdpMaxPeerRecovery = MibScalar((1, 3, 6, 1, 4, 1, 1271, 2, 1, 17, 1, 1, 10), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 600000)).clone(240000)).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesLdpMaxPeerRecovery.setStatus('current')
cienaCesLdpSessionTable = MibTable((1, 3, 6, 1, 4, 1, 1271, 2, 1, 17, 1, 2, 1), )
if mibBuilder.loadTexts: cienaCesLdpSessionTable.setStatus('current')
cienaCesLdpSessionEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1271, 2, 1, 17, 1, 2, 1, 1), ).setIndexNames((0, "CIENA-CES-LDP-MIB", "cienaCesLdpEntityLdpId"), (0, "CIENA-CES-LDP-MIB", "cienaCesLdpEntityIndex"), (0, "CIENA-CES-LDP-MIB", "cienaCesLdpPeerLdpId"))
if mibBuilder.loadTexts: cienaCesLdpSessionEntry.setStatus('current')
cienaCesLdpEntityLdpId = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 17, 1, 2, 1, 1, 1), MplsLdpIdentifier())
if mibBuilder.loadTexts: cienaCesLdpEntityLdpId.setStatus('current')
cienaCesLdpEntityIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 17, 1, 2, 1, 1, 2), Unsigned32())
if mibBuilder.loadTexts: cienaCesLdpEntityIndex.setStatus('current')
cienaCesLdpPeerLdpId = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 17, 1, 2, 1, 1, 3), MplsLdpIdentifier())
if mibBuilder.loadTexts: cienaCesLdpPeerLdpId.setStatus('current')
cienaCesLdpSessionConfiguredHoldTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 17, 1, 2, 1, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesLdpSessionConfiguredHoldTime.setStatus('current')
cienaCesLdpSessionPeerHoldTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 17, 1, 2, 1, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesLdpSessionPeerHoldTime.setStatus('current')
cienaCesLdpSessionHoldTimeInUse = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 17, 1, 2, 1, 1, 6), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesLdpSessionHoldTimeInUse.setStatus('current')
cienaCesLdpHelloAdjacencyTable = MibTable((1, 3, 6, 1, 4, 1, 1271, 2, 1, 17, 1, 2, 2), )
if mibBuilder.loadTexts: cienaCesLdpHelloAdjacencyTable.setStatus('current')
cienaCesLdpHelloAdjacencyEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1271, 2, 1, 17, 1, 2, 2, 1), ).setIndexNames((0, "CIENA-CES-LDP-MIB", "cienaCesLdpEntityLdpId"), (0, "CIENA-CES-LDP-MIB", "cienaCesLdpEntityIndex"), (0, "CIENA-CES-LDP-MIB", "cienaCesLdpPeerLdpId"), (0, "CIENA-CES-LDP-MIB", "cienaCesLdpHelloAdjacencyIndex"))
if mibBuilder.loadTexts: cienaCesLdpHelloAdjacencyEntry.setStatus('current')
cienaCesLdpHelloAdjacencyIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 17, 1, 2, 2, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295)))
if mibBuilder.loadTexts: cienaCesLdpHelloAdjacencyIndex.setStatus('current')
cienaCesLdpHelloAdjacencyConfiguredHoldTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 17, 1, 2, 2, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesLdpHelloAdjacencyConfiguredHoldTime.setStatus('current')
cienaCesLdpHelloAdjacencyPeerHoldTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 17, 1, 2, 2, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesLdpHelloAdjacencyPeerHoldTime.setStatus('current')
mibBuilder.exportSymbols("CIENA-CES-LDP-MIB", cienaCesLdpObjects=cienaCesLdpObjects, cienaCesLdpKeepAliveHoldTime=cienaCesLdpKeepAliveHoldTime, cienaCesLdpMaxPeerReconnect=cienaCesLdpMaxPeerReconnect, cienaCesLdpRecoveryTime=cienaCesLdpRecoveryTime, cienaCesLdpHelloHoldTime=cienaCesLdpHelloHoldTime, cienaCesLdpMaxPeerRecovery=cienaCesLdpMaxPeerRecovery, cienaCesLdpSessionTable=cienaCesLdpSessionTable, cienaCesLdpSessionEntry=cienaCesLdpSessionEntry, cienaCesLdpSessionHoldTimeInUse=cienaCesLdpSessionHoldTimeInUse, cienaCesLdpMIBObjects=cienaCesLdpMIBObjects, cienaCesLdpOperStatus=cienaCesLdpOperStatus, cienaCesLdpGRMode=cienaCesLdpGRMode, cienaCesLdpGRAdminStatus=cienaCesLdpGRAdminStatus, cienaCesLdpPeerLdpId=cienaCesLdpPeerLdpId, cienaCesLdpEntityIndex=cienaCesLdpEntityIndex, cienaCesLdp=cienaCesLdp, cienaCesLdpHelloAdjacencyIndex=cienaCesLdpHelloAdjacencyIndex, cienaCesLdpReconnectTime=cienaCesLdpReconnectTime, cienaCesLdpEntityLdpId=cienaCesLdpEntityLdpId, cienaCesLdpHelloAdjacencyTable=cienaCesLdpHelloAdjacencyTable, PYSNMP_MODULE_ID=cienaCesLdpMIB, cienaCesLdpSessionConfiguredHoldTime=cienaCesLdpSessionConfiguredHoldTime, cienaCesLdpMIB=cienaCesLdpMIB, cienaCesLdpHelloAdjacencyPeerHoldTime=cienaCesLdpHelloAdjacencyPeerHoldTime, cienaCesLdpHelloAdjacencyConfiguredHoldTime=cienaCesLdpHelloAdjacencyConfiguredHoldTime, cienaCesLdpSessionPeerHoldTime=cienaCesLdpSessionPeerHoldTime, cienaCesLdpAdminStatus=cienaCesLdpAdminStatus, cienaCesLdpHelloAdjacencyEntry=cienaCesLdpHelloAdjacencyEntry)
