#
# PySNMP MIB module NETRANGER (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/NETRANGER
# Produced by pysmi-0.3.4 at Mon Apr 29 20:10:09 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ValueSizeConstraint, ConstraintsIntersection, SingleValueConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ValueSizeConstraint", "ConstraintsIntersection", "SingleValueConstraint", "ConstraintsUnion")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
Bits, Gauge32, ObjectIdentity, Counter64, iso, NotificationType, Unsigned32, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter32, Integer32, enterprises, IpAddress, TimeTicks, MibIdentifier, ModuleIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "Bits", "Gauge32", "ObjectIdentity", "Counter64", "iso", "NotificationType", "Unsigned32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter32", "Integer32", "enterprises", "IpAddress", "TimeTicks", "MibIdentifier", "ModuleIdentity")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
wheelgroup = MibIdentifier((1, 3, 6, 1, 4, 1, 2252))
securityMgmt = MibIdentifier((1, 3, 6, 1, 4, 1, 2252, 1))
networkMgmt = MibIdentifier((1, 3, 6, 1, 4, 1, 2252, 3))
system = MibIdentifier((1, 3, 6, 1, 4, 1, 2252, 3, 1))
ip = MibIdentifier((1, 3, 6, 1, 4, 1, 2252, 3, 3))
snmp = MibIdentifier((1, 3, 6, 1, 4, 1, 2252, 3, 5))
netranger = MibIdentifier((1, 3, 6, 1, 4, 1, 2252, 1, 1))
autospa = MibIdentifier((1, 3, 6, 1, 4, 1, 2252, 1, 3))
nrTrapVars = MibIdentifier((1, 3, 6, 1, 4, 1, 2252, 1, 1, 1))
services = MibIdentifier((1, 3, 6, 1, 4, 1, 2252, 1, 1, 3))
general = MibIdentifier((1, 3, 6, 1, 4, 1, 2252, 1, 1, 5))
postoffice = MibIdentifier((1, 3, 6, 1, 4, 1, 2252, 1, 1, 3, 0))
sensor = MibIdentifier((1, 3, 6, 1, 4, 1, 2252, 1, 1, 3, 1))
config = MibIdentifier((1, 3, 6, 1, 4, 1, 2252, 1, 1, 3, 2))
manage = MibIdentifier((1, 3, 6, 1, 4, 1, 2252, 1, 1, 3, 3))
event = MibIdentifier((1, 3, 6, 1, 4, 1, 2252, 1, 1, 3, 4))
logger = MibIdentifier((1, 3, 6, 1, 4, 1, 2252, 1, 1, 3, 5))
smi = MibIdentifier((1, 3, 6, 1, 4, 1, 2252, 1, 1, 3, 6))
sap = MibIdentifier((1, 3, 6, 1, 4, 1, 2252, 1, 1, 3, 7))
packet = MibIdentifier((1, 3, 6, 1, 4, 1, 2252, 1, 1, 3, 8))
commonServices = MibIdentifier((1, 3, 6, 1, 4, 1, 2252, 1, 1, 3, 9))
commonVars = MibIdentifier((1, 3, 6, 1, 4, 1, 2252, 1, 1, 1, 0))
command = MibIdentifier((1, 3, 6, 1, 4, 1, 2252, 1, 1, 1, 1))
error = MibIdentifier((1, 3, 6, 1, 4, 1, 2252, 1, 1, 1, 2))
commandLog = MibIdentifier((1, 3, 6, 1, 4, 1, 2252, 1, 1, 1, 3))
alarm = MibIdentifier((1, 3, 6, 1, 4, 1, 2252, 1, 1, 1, 4))
ipLog = MibIdentifier((1, 3, 6, 1, 4, 1, 2252, 1, 1, 1, 5))
redirect = MibIdentifier((1, 3, 6, 1, 4, 1, 2252, 1, 1, 1, 6))
addressing = MibIdentifier((1, 3, 6, 1, 4, 1, 2252, 1, 1, 1, 4, 1))
tcpip = MibIdentifier((1, 3, 6, 1, 4, 1, 2252, 1, 1, 1, 4, 1, 1))
messageType = MibScalar((1, 3, 6, 1, 4, 1, 2252, 1, 1, 1, 0, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: messageType.setStatus('mandatory')
recordId = MibScalar((1, 3, 6, 1, 4, 1, 2252, 1, 1, 1, 0, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: recordId.setStatus('mandatory')
globalTime = MibScalar((1, 3, 6, 1, 4, 1, 2252, 1, 1, 1, 0, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: globalTime.setStatus('mandatory')
localTime = MibScalar((1, 3, 6, 1, 4, 1, 2252, 1, 1, 1, 0, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: localTime.setStatus('mandatory')
dateString = MibScalar((1, 3, 6, 1, 4, 1, 2252, 1, 1, 1, 0, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dateString.setStatus('mandatory')
timeString = MibScalar((1, 3, 6, 1, 4, 1, 2252, 1, 1, 1, 0, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: timeString.setStatus('mandatory')
appId = MibScalar((1, 3, 6, 1, 4, 1, 2252, 1, 1, 1, 0, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: appId.setStatus('mandatory')
hostId = MibScalar((1, 3, 6, 1, 4, 1, 2252, 1, 1, 1, 0, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hostId.setStatus('mandatory')
orgId = MibScalar((1, 3, 6, 1, 4, 1, 2252, 1, 1, 1, 0, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: orgId.setStatus('mandatory')
errorMessage = MibScalar((1, 3, 6, 1, 4, 1, 2252, 1, 1, 1, 2, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: errorMessage.setStatus('mandatory')
sourceAppId = MibScalar((1, 3, 6, 1, 4, 1, 2252, 1, 1, 1, 3, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sourceAppId.setStatus('mandatory')
sourceHostId = MibScalar((1, 3, 6, 1, 4, 1, 2252, 1, 1, 1, 3, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sourceHostId.setStatus('mandatory')
sourceOrgId = MibScalar((1, 3, 6, 1, 4, 1, 2252, 1, 1, 1, 3, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sourceOrgId.setStatus('mandatory')
commandMessage = MibScalar((1, 3, 6, 1, 4, 1, 2252, 1, 1, 1, 3, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: commandMessage.setStatus('mandatory')
srcDirection = MibScalar((1, 3, 6, 1, 4, 1, 2252, 1, 1, 1, 4, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: srcDirection.setStatus('mandatory')
dstDirection = MibScalar((1, 3, 6, 1, 4, 1, 2252, 1, 1, 1, 4, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dstDirection.setStatus('mandatory')
eventLevel = MibScalar((1, 3, 6, 1, 4, 1, 2252, 1, 1, 1, 4, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eventLevel.setStatus('mandatory')
sigId = MibScalar((1, 3, 6, 1, 4, 1, 2252, 1, 1, 1, 4, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sigId.setStatus('mandatory')
subSigId = MibScalar((1, 3, 6, 1, 4, 1, 2252, 1, 1, 1, 4, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: subSigId.setStatus('mandatory')
protocol = MibScalar((1, 3, 6, 1, 4, 1, 2252, 1, 1, 1, 4, 13), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: protocol.setStatus('mandatory')
srcIpAddr = MibScalar((1, 3, 6, 1, 4, 1, 2252, 1, 1, 1, 4, 1, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: srcIpAddr.setStatus('mandatory')
dstIpAddr = MibScalar((1, 3, 6, 1, 4, 1, 2252, 1, 1, 1, 4, 1, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dstIpAddr.setStatus('mandatory')
srcIpPort = MibScalar((1, 3, 6, 1, 4, 1, 2252, 1, 1, 1, 4, 1, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: srcIpPort.setStatus('mandatory')
dstIpPort = MibScalar((1, 3, 6, 1, 4, 1, 2252, 1, 1, 1, 4, 1, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dstIpPort.setStatus('mandatory')
rtrIpAddr = MibScalar((1, 3, 6, 1, 4, 1, 2252, 1, 1, 1, 4, 1, 1, 9), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rtrIpAddr.setStatus('mandatory')
alarmMessage = MibScalar((1, 3, 6, 1, 4, 1, 2252, 1, 1, 1, 4, 15), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alarmMessage.setStatus('mandatory')
mibBuilder.exportSymbols("NETRANGER", sap=sap, orgId=orgId, nrTrapVars=nrTrapVars, event=event, redirect=redirect, tcpip=tcpip, general=general, alarmMessage=alarmMessage, srcIpPort=srcIpPort, packet=packet, netranger=netranger, system=system, commandLog=commandLog, hostId=hostId, eventLevel=eventLevel, alarm=alarm, commandMessage=commandMessage, messageType=messageType, services=services, smi=smi, dstIpPort=dstIpPort, rtrIpAddr=rtrIpAddr, dateString=dateString, srcIpAddr=srcIpAddr, sourceHostId=sourceHostId, dstDirection=dstDirection, config=config, addressing=addressing, srcDirection=srcDirection, autospa=autospa, globalTime=globalTime, error=error, command=command, networkMgmt=networkMgmt, dstIpAddr=dstIpAddr, logger=logger, recordId=recordId, commonServices=commonServices, postoffice=postoffice, wheelgroup=wheelgroup, ipLog=ipLog, snmp=snmp, ip=ip, localTime=localTime, timeString=timeString, securityMgmt=securityMgmt, sourceAppId=sourceAppId, protocol=protocol, sourceOrgId=sourceOrgId, errorMessage=errorMessage, appId=appId, subSigId=subSigId, commonVars=commonVars, sensor=sensor, manage=manage, sigId=sigId)
