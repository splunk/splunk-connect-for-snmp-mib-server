#
# PySNMP MIB module HUAWEI-SYS-MAN-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/HUAWEI-SYS-MAN-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:37:08 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ValueSizeConstraint, ConstraintsIntersection, SingleValueConstraint, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ValueSizeConstraint", "ConstraintsIntersection", "SingleValueConstraint", "ValueRangeConstraint")
entPhysicalIndex, entPhysicalName, PhysicalIndex = mibBuilder.importSymbols("ENTITY-MIB", "entPhysicalIndex", "entPhysicalName", "PhysicalIndex")
hwDatacomm, = mibBuilder.importSymbols("HUAWEI-MIB", "hwDatacomm")
EnabledStatus, = mibBuilder.importSymbols("P-BRIDGE-MIB", "EnabledStatus")
ModuleCompliance, ObjectGroup, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "ObjectGroup", "NotificationGroup")
TimeTicks, MibIdentifier, IpAddress, Unsigned32, Counter32, Integer32, Counter64, Bits, Gauge32, iso, ObjectIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, NotificationType, ModuleIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "TimeTicks", "MibIdentifier", "IpAddress", "Unsigned32", "Counter32", "Integer32", "Counter64", "Bits", "Gauge32", "iso", "ObjectIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "NotificationType", "ModuleIdentity")
DisplayString, RowPointer, TextualConvention, DateAndTime, RowStatus = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "RowPointer", "TextualConvention", "DateAndTime", "RowStatus")
huaweiSystemManMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 2011, 5, 25, 19))
huaweiSystemManMIB.setRevisions(('2015-03-10 00:00', '2015-01-12 00:00', '2014-09-15 00:00', '2014-09-12 00:00', '2014-09-03 00:00', '2014-07-28 00:00', '2014-07-23 00:00', '2014-07-08 00:00', '2014-06-03 00:00', '2014-05-22 00:00', '2014-03-27 00:00', '2014-03-18 00:00', '2014-03-17 00:00', '2013-10-21 00:00',))
if mibBuilder.loadTexts: huaweiSystemManMIB.setLastUpdated('201503100000Z')
if mibBuilder.loadTexts: huaweiSystemManMIB.setOrganization('Huawei Technologies Co.,Ltd.')
class HWPatchErrorType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 103, 104, 30, 40, 41, 42, 43, 44, 45, 46, 47, 55, 56, 57, 58, 59, 70, 71, 72, 73, 80, 81, 82, 90, 91, 92, 93, 95, 100, 101, 102, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 169, 170, 173, 174, 176, 177, 178, 179, 180, 171, 172, 183, 185, 184, 186, 181, 182, 187, 188, 189, 190, 65535))
    namedValues = NamedValues(("initNoMemory", 1), ("initMemProtectFail", 2), ("fetchInputIsNull", 5), ("fetchFlagNotSame", 6), ("fetchProgVerInvalid", 7), ("fetchProgCrcInvalid", 8), ("fetchPatNoInvalid", 9), ("fetchTotalNumInvalid", 10), ("fetchUnitCrcInvalid", 11), ("fetchFuncNumTooMany", 12), ("fetchTypeInvalid", 13), ("fetchCommonAfterTemp", 14), ("fetchLengthNotSuited", 15), ("fetchCodeAddrNotSuited", 16), ("fetchDataAddrNotSuited", 17), ("fetchBaseAddrNotSuited", 18), ("fetchCodeLenOverflow", 19), ("fetchDataLenOverflow", 20), ("fetchOldAfterIndependent", 103), ("fetchUpdateDependency", 104), ("chgproChangeModeFailed", 30), ("activeNumInvalid", 40), ("activeHasBeenActived", 41), ("activeNotExist", 42), ("activeStateInvalid", 43), ("activeCodeAddrNotSuited", 44), ("activeDataAddrNotSuited", 45), ("activeBaseAddrNotSuited", 46), ("activeFormatUnknown", 47), ("runNumInvalid", 55), ("runHasInRunning", 56), ("runNotActive", 57), ("runIdleState", 58), ("runBadState", 59), ("deactNumInvalid", 70), ("deactRunOrActive", 71), ("deactRunningState", 72), ("deactBadState", 73), ("removeNumInvalid", 80), ("removeHasInIdle", 81), ("removeBadStatus", 82), ("caclcrcFileCrcInvalid", 90), ("caclcrcUnitCrcInvalid", 91), ("caclcrcOutputIsNull", 92), ("caclcrcNumInvalid", 93), ("caclcrcBadUnitCrc", 95), ("showNumInvalid", 100), ("showCodeLenIsZero", 101), ("showDataLenIsZero", 102), ("addlistBadParam", 105), ("addlistMemAllocFail", 106), ("depToListBadParamDep", 107), ("depToListBadParamList", 108), ("depToListMemFreeFail", 109), ("depToListAddItemFail", 110), ("listToDepBadParamDep", 111), ("listToDepBadParamList", 112), ("listToDepBadParamDepCount", 113), ("updateDepBadParam", 114), ("updateDepMemAllocFail", 115), ("updateDepDepToListFail", 116), ("updateDepToInterFail", 117), ("updateDepFromInterFail", 118), ("updateDepListToDepFail", 119), ("depToInterBadParam", 120), ("depToInterInvalidNo", 121), ("depToInterAddFail", 122), ("interToDepBadParam", 123), ("interToDepAppendFail", 124), ("appendListBadParam", 125), ("appendListAddFail", 126), ("indActiveBadParam", 127), ("indActiveAlreadyActive", 128), ("indActiveListFail", 129), ("indActiveListGenFail", 130), ("indActiveListAppendFail", 131), ("indActiveMemFreeFail", 132), ("indActiveDepIdle", 133), ("indActiveDepInvalid", 134), ("indActiveCodeAddrNotSuited", 135), ("indActiveDataAddrNotSuited", 136), ("indActiveBaseAddrNotSuited", 137), ("indActiveNotLoaded", 138), ("indActiveFuncFail", 139), ("indPatchFileNoInd", 140), ("indRunFail", 141), ("indDeactiveFail", 142), ("indRemoveFail", 143), ("indGetDepOfPara", 144), ("indGetDepOnPara", 145), ("indGetDepOnFail", 146), ("fetchBufferPara", 147), ("fetchBufferFail", 148), ("getStatePara", 149), ("indActiveAlreadyRunning", 150), ("indFreeListInputNull", 151), ("indFreeListMemFreeErr", 152), ("indBitTblToArrayInputNull", 153), ("indBitTblToArrayFreeFail", 154), ("indBitTblToArrayAllocFail", 155), ("indBitTblToArrayBitsetMore", 156), ("indBitTblToArrayBitsetLess", 157), ("listToDepBadParamAllocFail", 158), ("listToDepBadParamFreeFail", 159), ("indDeactiveFreeNull", 160), ("indRemoveFreeFail", 161), ("getInfoBufNull", 162), ("getInfoOutputNull", 163), ("getInfoFlagNotSame", 164), ("getInfoProgCrcInvalid", 165), ("getInfoFileCrcInvalid", 166), ("getInfoUnitCrcInvalid", 167), ("indPatchOpNotconfig", 169), ("normalOpNotconfig", 170), ("indDeactiveDeative", 173), ("indDeactiveRunning", 174), ("indDeactiveInvalid", 176), ("indRunDeactive", 177), ("indRunRunning", 178), ("indRunIdle", 179), ("indRunInvalid", 180), ("indActiveIdle", 171), ("indActiveInvalid", 172), ("indFetchActive", 183), ("indFetchRunning", 185), ("indFetchDeactive", 184), ("indFetchInvalid", 186), ("indRemoveIdle", 181), ("indRemoveInvalid", 182), ("patchFileNotExist", 187), ("patchRestoreFailed", 188), ("patchPackageError", 189), ("patchMisoperation", 190), ("unknown", 65535))

huaweiSystemManMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 19, 1))
hwSysClock = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 19, 1, 1))
hwSysLocalClock = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 19, 1, 1, 1), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwSysLocalClock.setStatus('current')
hwSysCurrent = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 19, 1, 2))
hwSysCurTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 19, 1, 2, 1), )
if mibBuilder.loadTexts: hwSysCurTable.setStatus('current')
hwSysCurEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 19, 1, 2, 1, 1), ).setIndexNames((0, "HUAWEI-SYS-MAN-MIB", "hwSysCurEntPhysicalIndex"))
if mibBuilder.loadTexts: hwSysCurEntry.setStatus('current')
hwSysCurEntPhysicalIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 19, 1, 2, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647)))
if mibBuilder.loadTexts: hwSysCurEntPhysicalIndex.setStatus('current')
hwSysCurCFGFileIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 19, 1, 2, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwSysCurCFGFileIndex.setStatus('current')
hwSysCurImageIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 19, 1, 2, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwSysCurImageIndex.setStatus('current')
hwSysCurPafFileIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 19, 1, 2, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwSysCurPafFileIndex.setStatus('current')
hwSysCurLicenseIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 19, 1, 2, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwSysCurLicenseIndex.setStatus('current')
hwSysCurPatchFileIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 19, 1, 2, 1, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwSysCurPatchFileIndex.setStatus('current')
hwSysCurVoiceFileIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 19, 1, 2, 1, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwSysCurVoiceFileIndex.setStatus('current')
hwSysReload = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 19, 1, 3))
hwSysReloadSchedule = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 19, 1, 3, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwSysReloadSchedule.setStatus('obsolete')
hwSysReloadAction = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 19, 1, 3, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("reloadUnavailable", 1), ("reloadOnSchedule", 2), ("reloadAtOnce", 3), ("reloadCancel", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwSysReloadAction.setStatus('current')
hwSysReloadScheduleTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 19, 1, 3, 3), )
if mibBuilder.loadTexts: hwSysReloadScheduleTable.setStatus('current')
hwSysReloadScheduleEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 19, 1, 3, 3, 1), ).setIndexNames((0, "HUAWEI-SYS-MAN-MIB", "hwSysReloadScheduleIndex"))
if mibBuilder.loadTexts: hwSysReloadScheduleEntry.setStatus('current')
hwSysReloadScheduleIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 19, 1, 3, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647)))
if mibBuilder.loadTexts: hwSysReloadScheduleIndex.setStatus('current')
hwSysReloadEntity = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 19, 1, 3, 3, 1, 2), PhysicalIndex()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwSysReloadEntity.setStatus('current')
hwSysReloadCfgFile = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 19, 1, 3, 3, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwSysReloadCfgFile.setStatus('current')
hwSysReloadImage = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 19, 1, 3, 3, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwSysReloadImage.setStatus('current')
hwSysReloadReason = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 19, 1, 3, 3, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwSysReloadReason.setStatus('current')
hwSysReloadScheduleTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 19, 1, 3, 3, 1, 6), DateAndTime().subtype(subtypeSpec=ValueSizeConstraint(8, 8)).setFixedLength(8)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwSysReloadScheduleTime.setStatus('current')
hwSysReloadRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 19, 1, 3, 3, 1, 7), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwSysReloadRowStatus.setStatus('current')
hwSysReloadPafFile = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 19, 1, 3, 3, 1, 8), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwSysReloadPafFile.setStatus('current')
hwSysReloadLicenseFile = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 19, 1, 3, 3, 1, 9), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwSysReloadLicenseFile.setStatus('current')
hwSysReloadPatchFile = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 19, 1, 3, 3, 1, 10), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwSysReloadPatchFile.setStatus('current')
hwSysReloadPatchState = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 19, 1, 3, 3, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 255))).clone(namedValues=NamedValues(("run", 1), ("unused", 255)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwSysReloadPatchState.setStatus('current')
hwSysReloadOperateDestType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 19, 1, 3, 3, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("all", 1), ("slave", 2), ("chassis", 3), ("unused", 4)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwSysReloadOperateDestType.setStatus('current')
hwSysReloadOperateDestIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 19, 1, 3, 3, 1, 13), DisplayString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwSysReloadOperateDestIndex.setStatus('current')
hwSysReloadVoiceFile = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 19, 1, 3, 3, 1, 14), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwSysReloadVoiceFile.setStatus('current')
hwSysReloadAndroidFile = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 19, 1, 3, 3, 1, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwSysReloadAndroidFile.setStatus('current')
hwSysReboot = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 19, 1, 3, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("unused", 1), ("rebootWholeRoute", 2), ("rebootSlave", 3), ("slaveSwitch", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwSysReboot.setStatus('current')
hwSysSlaveSwitchEnable = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 19, 1, 3, 5), EnabledStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwSysSlaveSwitchEnable.setStatus('current')
hwSysLatestRebootErrorInfo = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 19, 1, 3, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwSysLatestRebootErrorInfo.setStatus('current')
hwSysSlaveSwitchTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 19, 1, 3, 7), )
if mibBuilder.loadTexts: hwSysSlaveSwitchTable.setStatus('current')
hwSysSlaveSwitchEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 19, 1, 3, 7, 1), ).setIndexNames((0, "HUAWEI-SYS-MAN-MIB", "hwSysSlaveSwitchIndex"))
if mibBuilder.loadTexts: hwSysSlaveSwitchEntry.setStatus('current')
hwSysSlaveSwitchIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 19, 1, 3, 7, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 80)))
if mibBuilder.loadTexts: hwSysSlaveSwitchIndex.setStatus('current')
hwSysSlaveSwitchChassisNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 19, 1, 3, 7, 1, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwSysSlaveSwitchChassisNum.setStatus('current')
hwSysSlaveSwitchOperType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 19, 1, 3, 7, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("unused", 1), ("slaveSwitch", 2), ("slaveSwitchLock", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwSysSlaveSwitchOperType.setStatus('current')
hwSysSlaveSwitchEnableStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 19, 1, 3, 7, 1, 4), EnabledStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwSysSlaveSwitchEnableStatus.setStatus('current')
hwSysSlaveSwitchSrc = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 19, 1, 3, 7, 1, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwSysSlaveSwitchSrc.setStatus('current')
hwSysSlaveSwitchDst = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 19, 1, 3, 7, 1, 6), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwSysSlaveSwitchDst.setStatus('current')
hwSysDelayReboot = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 19, 1, 3, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwSysDelayReboot.setStatus('current')
hwSysImage = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 19, 1, 4))
hwSysImageNum = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 19, 1, 4, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwSysImageNum.setStatus('current')
hwSysImageTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 19, 1, 4, 2), )
if mibBuilder.loadTexts: hwSysImageTable.setStatus('current')
hwSysImageEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 19, 1, 4, 2, 1), ).setIndexNames((0, "HUAWEI-SYS-MAN-MIB", "hwSysImageIndex"))
if mibBuilder.loadTexts: hwSysImageEntry.setStatus('current')
hwSysImageIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 19, 1, 4, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: hwSysImageIndex.setStatus('current')
hwSysImageName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 19, 1, 4, 2, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwSysImageName.setStatus('current')
hwSysImageSize = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 19, 1, 4, 2, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwSysImageSize.setStatus('current')
hwSysImageLocation = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 19, 1, 4, 2, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwSysImageLocation.setStatus('current')
hwSysImageVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 19, 1, 4, 2, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwSysImageVersion.setStatus('current')
hwSysImageReason = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 19, 1, 4, 2, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwSysImageReason.setStatus('current')
hwSysCFGFile = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 19, 1, 5))
hwSysCFGFileNum = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 19, 1, 5, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwSysCFGFileNum.setStatus('current')
hwSysCFGFileTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 19, 1, 5, 2), )
if mibBuilder.loadTexts: hwSysCFGFileTable.setStatus('current')
hwSysCFGFileEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 19, 1, 5, 2, 1), ).setIndexNames((0, "HUAWEI-SYS-MAN-MIB", "hwSysCFGFileIndex"))
if mibBuilder.loadTexts: hwSysCFGFileEntry.setStatus('current')
hwSysCFGFileIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 19, 1, 5, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: hwSysCFGFileIndex.setStatus('current')
hwSysCFGFileName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 19, 1, 5, 2, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwSysCFGFileName.setStatus('current')
hwSysCFGFileSize = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 19, 1, 5, 2, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwSysCFGFileSize.setStatus('current')
hwSysCFGFileLocation = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 19, 1, 5, 2, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwSysCFGFileLocation.setStatus('current')
hwSysCFGFileReason = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 19, 1, 5, 2, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwSysCFGFileReason.setStatus('current')
hwSysPafFile = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 19, 1, 6))
hwSysPafFileNum = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 19, 1, 6, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwSysPafFileNum.setStatus('current')
hwSysPafFileTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 19, 1, 6, 2), )
if mibBuilder.loadTexts: hwSysPafFileTable.setStatus('current')
hwSysPafFileEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 19, 1, 6, 2, 1), ).setIndexNames((0, "HUAWEI-SYS-MAN-MIB", "hwSysPafFileIndex"))
if mibBuilder.loadTexts: hwSysPafFileEntry.setStatus('current')
hwSysPafFileIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 19, 1, 6, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: hwSysPafFileIndex.setStatus('current')
hwSysPafFileName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 19, 1, 6, 2, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwSysPafFileName.setStatus('current')
hwSysPafFileSize = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 19, 1, 6, 2, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwSysPafFileSize.setStatus('current')
hwSysPafFileLocation = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 19, 1, 6, 2, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwSysPafFileLocation.setStatus('current')
hwSysPafFileVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 19, 1, 6, 2, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwSysPafFileVersion.setStatus('current')
hwSysLicenseFile = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 19, 1, 7))
hwSysLicenseFileNum = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 19, 1, 7, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwSysLicenseFileNum.setStatus('current')
hwSysLicenseFileTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 19, 1, 7, 2), )
if mibBuilder.loadTexts: hwSysLicenseFileTable.setStatus('current')
hwSysLicenseFileEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 19, 1, 7, 2, 1), ).setIndexNames((0, "HUAWEI-SYS-MAN-MIB", "hwSysLicenseFileIndex"))
if mibBuilder.loadTexts: hwSysLicenseFileEntry.setStatus('current')
hwSysLicenseFileIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 19, 1, 7, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: hwSysLicenseFileIndex.setStatus('current')
hwSysLicenseFileName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 19, 1, 7, 2, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwSysLicenseFileName.setStatus('current')
hwSysLicenseFileSize = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 19, 1, 7, 2, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwSysLicenseFileSize.setStatus('current')
hwSysLicenseFileLocation = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 19, 1, 7, 2, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwSysLicenseFileLocation.setStatus('current')
hwPatch = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 19, 1, 8))
hwPatchBase = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 19, 1, 8, 1))
hwPatchFileNum = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 19, 1, 8, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwPatchFileNum.setStatus('current')
hwPatchRecordReset = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 19, 1, 8, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("unused", 1), ("resetPatchHistory", 2), ("resetPatchError", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwPatchRecordReset.setStatus('current')
hwPatchHistoryTableMax = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 19, 1, 8, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwPatchHistoryTableMax.setStatus('current')
hwPatchTrapEnble = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 19, 1, 8, 1, 4), EnabledStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwPatchTrapEnble.setStatus('current')
hwPatchErrorTableMax = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 19, 1, 8, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwPatchErrorTableMax.setStatus('current')
hwPatchId = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 19, 1, 8, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwPatchId.setStatus('current')
hwPatchLatestId = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 19, 1, 8, 1, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwPatchLatestId.setStatus('current')
hwPatchFailReason = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 19, 1, 8, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 8, 9))).clone(namedValues=NamedValues(("patchOpenErr", 1), ("getPatchErr", 2), ("patchSpaceShortage", 3), ("patchConflict", 4), ("versionErr", 5), ("synchronizePatchPackageError", 8), ("patchConfigInconsistError", 9)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwPatchFailReason.setStatus('current')
hwPatchFileTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 19, 1, 8, 2), )
if mibBuilder.loadTexts: hwPatchFileTable.setStatus('current')
hwPatchFileEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 19, 1, 8, 2, 1), ).setIndexNames((0, "HUAWEI-SYS-MAN-MIB", "hwPatchFileIndex"))
if mibBuilder.loadTexts: hwPatchFileEntry.setStatus('current')
hwPatchFileIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 19, 1, 8, 2, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: hwPatchFileIndex.setStatus('current')
hwPatchFileName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 19, 1, 8, 2, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwPatchFileName.setStatus('current')
hwPatchFileSize = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 19, 1, 8, 2, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwPatchFileSize.setStatus('current')
hwPatchFileLocation = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 19, 1, 8, 2, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwPatchFileLocation.setStatus('current')
hwPatchFileVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 19, 1, 8, 2, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwPatchFileVersion.setStatus('current')
hwLoadPatchTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 19, 1, 8, 4), )
if mibBuilder.loadTexts: hwLoadPatchTable.setStatus('current')
hwLoadPatchEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 19, 1, 8, 4, 1), ).setIndexNames((0, "HUAWEI-SYS-MAN-MIB", "hwPatchSlotIndex"), (0, "HUAWEI-SYS-MAN-MIB", "hwPatchFileIndex"))
if mibBuilder.loadTexts: hwLoadPatchEntry.setStatus('current')
hwPatchLoadDestType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 19, 1, 8, 4, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("all", 1), ("slave", 2), ("slot", 3), ("chassis", 4), ("unused", 5)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwPatchLoadDestType.setStatus('current')
hwPatchLoadDestIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 19, 1, 8, 4, 1, 2), DisplayString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwPatchLoadDestIndex.setStatus('current')
hwPatchLoadState = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 19, 1, 8, 4, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("loading", 1), ("success", 2), ("failure", 3), ("none", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwPatchLoadState.setStatus('current')
hwLoadPatchRowState = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 19, 1, 8, 4, 1, 51), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwLoadPatchRowState.setStatus('current')
hwPatchInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 19, 1, 8, 5))
hwPatchTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 19, 1, 8, 5, 1), )
if mibBuilder.loadTexts: hwPatchTable.setStatus('current')
hwPatchEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 19, 1, 8, 5, 1, 1), ).setIndexNames((0, "HUAWEI-SYS-MAN-MIB", "hwPatchSlotIndex"), (0, "HUAWEI-SYS-MAN-MIB", "hwPatchIndex"))
if mibBuilder.loadTexts: hwPatchEntry.setStatus('current')
hwPatchSlotIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 19, 1, 8, 5, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255)))
if mibBuilder.loadTexts: hwPatchSlotIndex.setStatus('current')
hwPatchIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 19, 1, 8, 5, 1, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)))
if mibBuilder.loadTexts: hwPatchIndex.setStatus('current')
hwPatchUsedFileName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 19, 1, 8, 5, 1, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwPatchUsedFileName.setStatus('current')
hwPatchVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 19, 1, 8, 5, 1, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwPatchVersion.setStatus('current')
hwPatchDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 19, 1, 8, 5, 1, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwPatchDescription.setStatus('current')
hwPatchProgramVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 19, 1, 8, 5, 1, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwPatchProgramVersion.setStatus('current')
hwPatchFuncNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 19, 1, 8, 5, 1, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwPatchFuncNum.setStatus('current')
hwPatchTextLen = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 19, 1, 8, 5, 1, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwPatchTextLen.setStatus('current')
hwPatchDataLen = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 19, 1, 8, 5, 1, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwPatchDataLen.setStatus('current')
hwPatchType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 19, 1, 8, 5, 1, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("hotCommon", 1), ("hotTemporary", 2), ("coolCommon", 3), ("coolTemporary", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwPatchType.setStatus('current')
hwPatchBuildTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 19, 1, 8, 5, 1, 1, 11), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwPatchBuildTime.setStatus('current')
hwPatchActiveTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 19, 1, 8, 5, 1, 1, 12), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwPatchActiveTime.setStatus('current')
hwPatchAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 19, 1, 8, 5, 1, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("run", 1), ("active", 2), ("deactive", 3), ("delete", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwPatchAdminStatus.setStatus('current')
hwPatchOperateState = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 19, 1, 8, 5, 1, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("patchRunning", 1), ("patchActive", 2), ("patchDeactive", 3), ("patchDeleting", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwPatchOperateState.setStatus('current')
hwPatchOperateDestType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 19, 1, 8, 5, 1, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("all", 1), ("slave", 2), ("slot", 3), ("chassis", 4), ("unused", 5)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwPatchOperateDestType.setStatus('current')
hwPatchOperateDestIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 19, 1, 8, 5, 1, 1, 16), DisplayString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwPatchOperateDestIndex.setStatus('current')
hwPatchStateTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 19, 1, 8, 5, 2), )
if mibBuilder.loadTexts: hwPatchStateTable.setStatus('current')
hwPatchStateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 19, 1, 8, 5, 2, 1), ).setIndexNames((0, "HUAWEI-SYS-MAN-MIB", "hwPatchSlotIndex"))
if mibBuilder.loadTexts: hwPatchStateEntry.setStatus('current')
hwPatchNumMax = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 19, 1, 8, 5, 2, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwPatchNumMax.setStatus('current')
hwPatchIdleNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 19, 1, 8, 5, 2, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwPatchIdleNum.setStatus('current')
hwPatchTextMax = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 19, 1, 8, 5, 2, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwPatchTextMax.setStatus('current')
hwPatchDataMax = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 19, 1, 8, 5, 2, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwPatchDataMax.setStatus('current')
hwPatchStateTextUsed = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 19, 1, 8, 5, 2, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwPatchStateTextUsed.setStatus('current')
hwPatchStateDataUsed = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 19, 1, 8, 5, 2, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwPatchStateDataUsed.setStatus('current')
hwPatchStateTotalPatchNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 19, 1, 8, 5, 2, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwPatchStateTotalPatchNum.setStatus('current')
hwPatchStateTempPatchNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 19, 1, 8, 5, 2, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwPatchStateTempPatchNum.setStatus('current')
hwPatchStateCommonPatchNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 19, 1, 8, 5, 2, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwPatchStateCommonPatchNum.setStatus('current')
hwPatchStateRuningPatchNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 19, 1, 8, 5, 2, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwPatchStateRuningPatchNum.setStatus('current')
hwPatchStateActivePatchNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 19, 1, 8, 5, 2, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwPatchStateActivePatchNum.setStatus('current')
hwPatchStateDeactivePatchNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 19, 1, 8, 5, 2, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwPatchStateDeactivePatchNum.setStatus('current')
hwPatchHistoryTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 19, 1, 8, 5, 3), )
if mibBuilder.loadTexts: hwPatchHistoryTable.setStatus('current')
hwPatchHistoryEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 19, 1, 8, 5, 3, 1), ).setIndexNames((0, "HUAWEI-SYS-MAN-MIB", "hwPatchHistoryIndex"))
if mibBuilder.loadTexts: hwPatchHistoryEntry.setStatus('current')
hwPatchHistoryIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 19, 1, 8, 5, 3, 1, 1), Unsigned32())
if mibBuilder.loadTexts: hwPatchHistoryIndex.setStatus('current')
hwPatchHistoryProgrameVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 19, 1, 8, 5, 3, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwPatchHistoryProgrameVersion.setStatus('current')
hwPatchHistoryVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 19, 1, 8, 5, 3, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwPatchHistoryVersion.setStatus('current')
hwSlotId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 19, 1, 8, 5, 3, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwSlotId.setStatus('current')
hwPatchBeginIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 19, 1, 8, 5, 3, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwPatchBeginIndex.setStatus('current')
hwPatchEndIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 19, 1, 8, 5, 3, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwPatchEndIndex.setStatus('current')
hwPatchHistoryAction = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 19, 1, 8, 5, 3, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("running", 1), ("active", 2), ("deactive", 3), ("delete", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwPatchHistoryAction.setStatus('current')
hwPatchHistoryBeginTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 19, 1, 8, 5, 3, 1, 8), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwPatchHistoryBeginTime.setStatus('current')
hwPatchHistoryEndTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 19, 1, 8, 5, 3, 1, 9), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwPatchHistoryEndTime.setStatus('current')
hwPatchErrorTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 19, 1, 8, 5, 4), )
if mibBuilder.loadTexts: hwPatchErrorTable.setStatus('current')
hwPatchErrorEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 19, 1, 8, 5, 4, 1), ).setIndexNames((0, "HUAWEI-SYS-MAN-MIB", "hwPatchErrorIndex"))
if mibBuilder.loadTexts: hwPatchErrorEntry.setStatus('current')
hwPatchErrorIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 19, 1, 8, 5, 4, 1, 1), Unsigned32())
if mibBuilder.loadTexts: hwPatchErrorIndex.setStatus('current')
hwPatchErrorSlot = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 19, 1, 8, 5, 4, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwPatchErrorSlot.setStatus('current')
hwPatchErrorPatchFileName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 19, 1, 8, 5, 4, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwPatchErrorPatchFileName.setStatus('current')
hwPatchErrorPatchIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 19, 1, 8, 5, 4, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwPatchErrorPatchIndex.setStatus('current')
hwPatchErrorCode = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 19, 1, 8, 5, 4, 1, 5), HWPatchErrorType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwPatchErrorCode.setStatus('current')
hwBootRom = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 19, 1, 11))
hwBootRomTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 19, 1, 11, 1), )
if mibBuilder.loadTexts: hwBootRomTable.setStatus('current')
hwBootRomEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 19, 1, 11, 1, 1), ).setIndexNames((0, "HUAWEI-SYS-MAN-MIB", "hwBootRomIndex"))
if mibBuilder.loadTexts: hwBootRomEntry.setStatus('current')
hwBootRomIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 19, 1, 11, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("master", 1), ("slave", 2))))
if mibBuilder.loadTexts: hwBootRomIndex.setStatus('current')
hwBootRomBootDevice = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 19, 1, 11, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwBootRomBootDevice.setStatus('current')
hwBootRomProcessorNo = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 19, 1, 11, 1, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwBootRomProcessorNo.setStatus('current')
hwBootRomHostName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 19, 1, 11, 1, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwBootRomHostName.setStatus('current')
hwBootRomFileName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 19, 1, 11, 1, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwBootRomFileName.setStatus('current')
hwBootRomIpOnEthernet = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 19, 1, 11, 1, 1, 6), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwBootRomIpOnEthernet.setStatus('current')
hwBootRomIpOnBackPlane = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 19, 1, 11, 1, 1, 7), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwBootRomIpOnBackPlane.setStatus('current')
hwBootRomHostIp = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 19, 1, 11, 1, 1, 8), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwBootRomHostIp.setStatus('current')
hwBootRomGatewayIp = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 19, 1, 11, 1, 1, 9), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwBootRomGatewayIp.setStatus('current')
hwBootRomUserName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 19, 1, 11, 1, 1, 10), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwBootRomUserName.setStatus('current')
hwBootRomPassword = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 19, 1, 11, 1, 1, 11), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwBootRomPassword.setStatus('current')
hwBootRomTargetName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 19, 1, 11, 1, 1, 12), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwBootRomTargetName.setStatus('current')
hwBootRomStartupScript = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 19, 1, 11, 1, 1, 13), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwBootRomStartupScript.setStatus('current')
hwBootRomXModemBaudRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 19, 1, 11, 1, 1, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwBootRomXModemBaudRate.setStatus('current')
hwBootRomVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 19, 1, 11, 1, 1, 15), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwBootRomVersion.setStatus('current')
hwSysUpgrade = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 19, 1, 12))
hwSysUpgradeTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 19, 1, 12, 1), )
if mibBuilder.loadTexts: hwSysUpgradeTable.setStatus('current')
hwSysUpgradeEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 19, 1, 12, 1, 1), ).setIndexNames((0, "HUAWEI-SYS-MAN-MIB", "hwIssuIndex"))
if mibBuilder.loadTexts: hwSysUpgradeEntry.setStatus('current')
hwIssuIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 19, 1, 12, 1, 1, 1), Integer32())
if mibBuilder.loadTexts: hwIssuIndex.setStatus('current')
hwIssuMode = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 19, 1, 12, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("issuUpgrade", 1), ("issuPrecheck", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwIssuMode.setStatus('current')
hwIssuImageFile = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 19, 1, 12, 1, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 127))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwIssuImageFile.setStatus('current')
hwIssuPafFile = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 19, 1, 12, 1, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 127))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwIssuPafFile.setStatus('current')
hwIssuLicenseFile = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 19, 1, 12, 1, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 127))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwIssuLicenseFile.setStatus('current')
hwIssuPatchFile = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 19, 1, 12, 1, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(5, 127))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwIssuPatchFile.setStatus('current')
hwIssuState = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 19, 1, 12, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("noIssuUpgrading", 1), ("issuUpgrading", 2), ("issuExceptional", 3), ("issuRollBackByUserCancel", 4), ("issuRollBackByExceptional", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwIssuState.setStatus('current')
hwIssuConditionCheck = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 19, 1, 12, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("normal", 1), ("notRealtimeBackup", 2), ("slotAbnormal", 3), ("configurationChange", 4), ("otherAbnormal", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwIssuConditionCheck.setStatus('current')
hwSysSourceIndex = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 19, 1, 13))
hwSysSourceIndexTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 19, 1, 13, 1), )
if mibBuilder.loadTexts: hwSysSourceIndexTable.setStatus('current')
hwSysSourceIndexEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 19, 1, 13, 1, 1), ).setIndexNames((0, "HUAWEI-SYS-MAN-MIB", "hwSysFileType"), (0, "HUAWEI-SYS-MAN-MIB", "hwSysFileName"))
if mibBuilder.loadTexts: hwSysSourceIndexEntry.setStatus('current')
hwSysFileType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 19, 1, 13, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("image", 1), ("config", 2), ("paf", 3), ("license", 4), ("patch", 5))))
if mibBuilder.loadTexts: hwSysFileType.setStatus('current')
hwSysFileName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 19, 1, 13, 1, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 110)))
if mibBuilder.loadTexts: hwSysFileName.setStatus('current')
hwSysFileIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 19, 1, 13, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwSysFileIndex.setStatus('current')
hwSysRebootInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 19, 1, 14))
hwSysRebootTimes = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 19, 1, 14, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwSysRebootTimes.setStatus('current')
hwSysRebootRecordTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 19, 1, 14, 2), )
if mibBuilder.loadTexts: hwSysRebootRecordTable.setStatus('current')
hwSysRebootRecordEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 19, 1, 14, 2, 1), ).setIndexNames((0, "HUAWEI-SYS-MAN-MIB", "hwSysRebootRecordIndex"))
if mibBuilder.loadTexts: hwSysRebootRecordEntry.setStatus('current')
hwSysRebootRecordIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 19, 1, 14, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: hwSysRebootRecordIndex.setStatus('current')
hwSysRebootReason = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 19, 1, 14, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("manual", 1), ("powerOff", 2), ("unknown", 3), ("schedule", 4), ("software", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwSysRebootReason.setStatus('current')
hwSysRebootTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 19, 1, 14, 2, 1, 3), DateAndTime().subtype(subtypeSpec=ValueSizeConstraint(8, 8)).setFixedLength(8)).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwSysRebootTime.setStatus('current')
hwSysDeviceCheck = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 19, 1, 15))
hwSysDeviceCheckStart = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 19, 1, 15, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("checkStart", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwSysDeviceCheckStart.setStatus('current')
hwSysDeviceCheckState = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 19, 1, 15, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("done", 1), ("checking", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwSysDeviceCheckState.setStatus('current')
hwSysSwitchoverState = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 19, 1, 19))
hwSysSwitchoverStateTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 19, 1, 19, 1), )
if mibBuilder.loadTexts: hwSysSwitchoverStateTable.setStatus('current')
hwSysSwitchoverStateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 19, 1, 19, 1, 1), ).setIndexNames((0, "HUAWEI-SYS-MAN-MIB", "hwSysSwitchoverStateIndex"))
if mibBuilder.loadTexts: hwSysSwitchoverStateEntry.setStatus('current')
hwSysSwitchoverStateIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 19, 1, 19, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: hwSysSwitchoverStateIndex.setStatus('current')
hwSysSwitchoverSlotId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 19, 1, 19, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwSysSwitchoverSlotId.setStatus('current')
hwSysSwitchoverBoardType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 19, 1, 19, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("master", 1), ("slave", 2), ("systemMaster", 3), ("systemSlave", 4), ("issuOldMaster", 5), ("issuNewMaster", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwSysSwitchoverBoardType.setStatus('current')
hwSysSwitchoverInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 19, 1, 19, 1, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 190))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwSysSwitchoverInfo.setStatus('current')
hwSysSwitchoverStateMultiTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 19, 1, 19, 2), )
if mibBuilder.loadTexts: hwSysSwitchoverStateMultiTable.setStatus('current')
hwSysSwitchoverStateMultiEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 19, 1, 19, 2, 1), ).setIndexNames((0, "HUAWEI-SYS-MAN-MIB", "hwSysMultiSwtStateIndex"))
if mibBuilder.loadTexts: hwSysSwitchoverStateMultiEntry.setStatus('current')
hwSysMultiSwtStateIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 19, 1, 19, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: hwSysMultiSwtStateIndex.setStatus('current')
hwSysMultiSwtChassisId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 19, 1, 19, 2, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwSysMultiSwtChassisId.setStatus('current')
hwSysMultiSwtSlotId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 19, 1, 19, 2, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwSysMultiSwtSlotId.setStatus('current')
hwSysMultiSwtBoardType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 19, 1, 19, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("master", 1), ("slave", 2), ("systemMaster", 3), ("systemSlave", 4), ("issuOldMaster", 5), ("issuNewMaster", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwSysMultiSwtBoardType.setStatus('current')
hwSysMultiSwtInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 19, 1, 19, 2, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 190))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwSysMultiSwtInfo.setStatus('current')
hwSysVoiceFile = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 19, 1, 20))
hwSysVoiceFileNum = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 19, 1, 20, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwSysVoiceFileNum.setStatus('current')
hwSysVoiceFileTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 19, 1, 20, 2), )
if mibBuilder.loadTexts: hwSysVoiceFileTable.setStatus('current')
hwSysVoiceFileEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 19, 1, 20, 2, 1), ).setIndexNames((0, "HUAWEI-SYS-MAN-MIB", "hwSysVoiceFileIndex"))
if mibBuilder.loadTexts: hwSysVoiceFileEntry.setStatus('current')
hwSysVoiceFileIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 19, 1, 20, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: hwSysVoiceFileIndex.setStatus('current')
hwSysVoiceFileName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 19, 1, 20, 2, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwSysVoiceFileName.setStatus('current')
hwSysVoiceFileSize = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 19, 1, 20, 2, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwSysVoiceFileSize.setStatus('current')
hwSysVoiceFileLocation = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 19, 1, 20, 2, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwSysVoiceFileLocation.setStatus('current')
hwSysWlanApUpgrade = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 19, 1, 24))
hwSysWlanApUpgradeCmd = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 19, 1, 24, 1))
hwSysWlanApUpgradeMode = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 19, 1, 24, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("ftp", 1), ("sftp", 2), ("tftp", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwSysWlanApUpgradeMode.setStatus('current')
hwSysWlanApUpgradeFileName = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 19, 1, 24, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 127))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwSysWlanApUpgradeFileName.setStatus('current')
hwSysWlanApUpgradeServerIp = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 19, 1, 24, 1, 3), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwSysWlanApUpgradeServerIp.setStatus('current')
hwSysWlanApUpgradeServerUserName = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 19, 1, 24, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwSysWlanApUpgradeServerUserName.setStatus('current')
hwSysWlanApUpgradeServerPassword = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 19, 1, 24, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 63))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwSysWlanApUpgradeServerPassword.setStatus('current')
hwSysWlanApUpgradeStatus = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 19, 1, 24, 2))
hwSysWlanApUpgradeProgressStatus = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 19, 1, 24, 2, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 4, 5, 6, 7, 8, 9, 10))).clone(namedValues=NamedValues(("updating", 0), ("updateSuccessful", 1), ("updateFailed", 2), ("failToDownloadFile", 4), ("efsAndVersionMismatched", 5), ("invalidFileName", 6), ("efsAndApTypeMismatched", 7), ("fileContentError", 8), ("writingMemoryError", 9), ("noUpdateResult", 10)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwSysWlanApUpgradeProgressStatus.setStatus('current')
hwSysWlanApUpgradeLoadProgress = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 19, 1, 24, 2, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwSysWlanApUpgradeLoadProgress.setStatus('current')
hwSysWlanApUpgradeStorageProgress = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 19, 1, 24, 2, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwSysWlanApUpgradeStorageProgress.setStatus('current')
hwSysWlanApUpgradeNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 19, 1, 24, 3))
hwSysWlanApUpgradeBeginNotify = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 19, 1, 24, 3, 1))
if mibBuilder.loadTexts: hwSysWlanApUpgradeBeginNotify.setStatus('current')
hwSysWlanApUpgradeResultNotify = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 19, 1, 24, 3, 2)).setObjects(("HUAWEI-SYS-MAN-MIB", "hwSysWlanApUpgradeProgressStatus"))
if mibBuilder.loadTexts: hwSysWlanApUpgradeResultNotify.setStatus('current')
hwSysWlanApUpgradeUbootNotMatchNotify = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 19, 1, 24, 3, 3))
if mibBuilder.loadTexts: hwSysWlanApUpgradeUbootNotMatchNotify.setStatus('current')
hwSysWlanApUpgradeAssistantPackageNotMatchNotify = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 19, 1, 24, 3, 4))
if mibBuilder.loadTexts: hwSysWlanApUpgradeAssistantPackageNotMatchNotify.setStatus('current')
hwSysAndroidFile = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 19, 1, 25))
hwSysAndroidFileNum = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 19, 1, 25, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwSysAndroidFileNum.setStatus('current')
hwSysAndroidFileTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 19, 1, 25, 2), )
if mibBuilder.loadTexts: hwSysAndroidFileTable.setStatus('current')
hwSysAndroidFileEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 19, 1, 25, 2, 1), ).setIndexNames((0, "HUAWEI-SYS-MAN-MIB", "hwSysAndroidFileIndex"))
if mibBuilder.loadTexts: hwSysAndroidFileEntry.setStatus('current')
hwSysAndroidFileIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 19, 1, 25, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: hwSysAndroidFileIndex.setStatus('current')
hwSysAndroidFileName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 19, 1, 25, 2, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwSysAndroidFileName.setStatus('current')
hwSysAndroidFileSize = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 19, 1, 25, 2, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwSysAndroidFileSize.setStatus('current')
hwSysAndroidFileLocation = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 19, 1, 25, 2, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwSysAndroidFileLocation.setStatus('current')
hwSysAndroidFileReason = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 19, 1, 25, 2, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwSysAndroidFileReason.setStatus('current')
huaweiSystemManMIBNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 19, 2))
hwSysClockChangedNotification = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 19, 2, 1)).setObjects(("HUAWEI-SYS-MAN-MIB", "hwSysLocalClock"))
if mibBuilder.loadTexts: hwSysClockChangedNotification.setStatus('current')
hwSysReloadNotification = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 19, 2, 2)).setObjects(("HUAWEI-SYS-MAN-MIB", "hwSysReloadImage"), ("HUAWEI-SYS-MAN-MIB", "hwSysReloadCfgFile"), ("HUAWEI-SYS-MAN-MIB", "hwSysReloadReason"), ("HUAWEI-SYS-MAN-MIB", "hwSysReloadScheduleTime"), ("HUAWEI-SYS-MAN-MIB", "hwSysReloadAction"), ("HUAWEI-SYS-MAN-MIB", "hwSysReloadPafFile"), ("HUAWEI-SYS-MAN-MIB", "hwSysReloadLicenseFile"), ("HUAWEI-SYS-MAN-MIB", "hwSysReloadPatchFile"), ("HUAWEI-SYS-MAN-MIB", "hwSysReloadAndroidFile"))
if mibBuilder.loadTexts: hwSysReloadNotification.setStatus('current')
hwSysMasterHDError = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 19, 2, 3))
if mibBuilder.loadTexts: hwSysMasterHDError.setStatus('current')
hwSysSlaveHDError = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 19, 2, 4))
if mibBuilder.loadTexts: hwSysSlaveHDError.setStatus('current')
hwPatchTrap = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 19, 2, 5))
hwPatchErrorTrap = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 19, 2, 5, 1)).setObjects(("HUAWEI-SYS-MAN-MIB", "hwPatchErrorSlot"), ("HUAWEI-SYS-MAN-MIB", "hwPatchErrorPatchIndex"), ("HUAWEI-SYS-MAN-MIB", "hwPatchErrorCode"), ("HUAWEI-SYS-MAN-MIB", "hwPatchErrorPatchFileName"))
if mibBuilder.loadTexts: hwPatchErrorTrap.setStatus('current')
hwPatchActiveOverTimeTrap = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 19, 2, 5, 2)).setObjects(("HUAWEI-SYS-MAN-MIB", "hwPatchOperateState"))
if mibBuilder.loadTexts: hwPatchActiveOverTimeTrap.setStatus('current')
hwPatchMalfunctionComebackTrap = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 19, 2, 5, 3)).setObjects(("HUAWEI-SYS-MAN-MIB", "hwPatchOperateState"))
if mibBuilder.loadTexts: hwPatchMalfunctionComebackTrap.setStatus('current')
hwPatchUpdateTrap = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 19, 2, 5, 4)).setObjects(("HUAWEI-SYS-MAN-MIB", "hwPatchVersion"), ("HUAWEI-SYS-MAN-MIB", "hwPatchType"), ("HUAWEI-SYS-MAN-MIB", "hwPatchOperateState"))
if mibBuilder.loadTexts: hwPatchUpdateTrap.setStatus('current')
hwSysMasterCfcardError = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 19, 2, 6))
if mibBuilder.loadTexts: hwSysMasterCfcardError.setStatus('current')
hwSysSlaveCfcardError = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 19, 2, 7))
if mibBuilder.loadTexts: hwSysSlaveCfcardError.setStatus('current')
hwSysSlaveSwitchSuccessNotification = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 19, 2, 8)).setObjects(("HUAWEI-SYS-MAN-MIB", "hwSysSlaveSwitchChassisNum"), ("HUAWEI-SYS-MAN-MIB", "hwSysSlaveSwitchSrc"), ("HUAWEI-SYS-MAN-MIB", "hwSysSlaveSwitchDst"))
if mibBuilder.loadTexts: hwSysSlaveSwitchSuccessNotification.setStatus('current')
hwSysSlaveSwitchFailNotification = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 19, 2, 9)).setObjects(("HUAWEI-SYS-MAN-MIB", "hwSysSlaveSwitchChassisNum"))
if mibBuilder.loadTexts: hwSysSlaveSwitchFailNotification.setStatus('current')
hwSysIssuNotification = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 19, 2, 10)).setObjects(("HUAWEI-SYS-MAN-MIB", "hwIssuState"), ("HUAWEI-SYS-MAN-MIB", "hwIssuConditionCheck"))
if mibBuilder.loadTexts: hwSysIssuNotification.setStatus('current')
hwPatchInstallFail = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 19, 2, 11)).setObjects(("HUAWEI-SYS-MAN-MIB", "hwPatchUsedFileName"), ("HUAWEI-SYS-MAN-MIB", "hwPatchVersion"), ("HUAWEI-SYS-MAN-MIB", "hwPatchFailReason"))
if mibBuilder.loadTexts: hwPatchInstallFail.setStatus('current')
hwPatchInstallFailClear = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 19, 2, 12)).setObjects(("HUAWEI-SYS-MAN-MIB", "hwPatchUsedFileName"), ("HUAWEI-SYS-MAN-MIB", "hwPatchVersion"), ("HUAWEI-SYS-MAN-MIB", "hwPatchFailReason"))
if mibBuilder.loadTexts: hwPatchInstallFailClear.setStatus('current')
hwSumUpgradeSuccess = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 19, 2, 13)).setObjects(("HUAWEI-SYS-MAN-MIB", "hwSysImageVersion"))
if mibBuilder.loadTexts: hwSumUpgradeSuccess.setStatus('current')
hwSysCfgFileErrorNotification = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 19, 2, 14)).setObjects(("HUAWEI-SYS-MAN-MIB", "hwSysCFGFileName"), ("HUAWEI-SYS-MAN-MIB", "hwSysCFGFileReason"))
if mibBuilder.loadTexts: hwSysCfgFileErrorNotification.setStatus('current')
hwSysImageErrorNotification = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 19, 2, 15)).setObjects(("HUAWEI-SYS-MAN-MIB", "hwSysImageName"), ("HUAWEI-SYS-MAN-MIB", "hwSysImageName"), ("HUAWEI-SYS-MAN-MIB", "hwSysImageReason"))
if mibBuilder.loadTexts: hwSysImageErrorNotification.setStatus('current')
hwSysPafChangeNotification = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 19, 2, 16)).setObjects(("HUAWEI-SYS-MAN-MIB", "hwSysReloadEntity"), ("HUAWEI-SYS-MAN-MIB", "hwSysPafFileName"))
if mibBuilder.loadTexts: hwSysPafChangeNotification.setStatus('current')
hwSysLicenseChangeNotification = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 19, 2, 17)).setObjects(("HUAWEI-SYS-MAN-MIB", "hwSysReloadEntity"), ("HUAWEI-SYS-MAN-MIB", "hwSysLicenseFileName"))
if mibBuilder.loadTexts: hwSysLicenseChangeNotification.setStatus('current')
hwSystemBoardExclude = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 19, 2, 18)).setObjects(("ENTITY-MIB", "entPhysicalIndex"), ("ENTITY-MIB", "entPhysicalName"))
if mibBuilder.loadTexts: hwSystemBoardExclude.setStatus('current')
hwSystemBoardExcludeClear = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 19, 2, 19)).setObjects(("ENTITY-MIB", "entPhysicalIndex"), ("ENTITY-MIB", "entPhysicalName"))
if mibBuilder.loadTexts: hwSystemBoardExcludeClear.setStatus('current')
hwSysEvmTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 19, 2, 20))
hwSysEvmTrapsObject = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 19, 2, 20, 1))
hwSysEvmRoleName = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 19, 2, 20, 1, 1), OctetString()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hwSysEvmRoleName.setStatus('current')
hwSysEvmDownloadFileName = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 19, 2, 20, 1, 2), OctetString()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hwSysEvmDownloadFileName.setStatus('current')
hwSysEvmInstallFileName = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 19, 2, 20, 1, 3), OctetString()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hwSysEvmInstallFileName.setStatus('current')
hwSysEvmNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 19, 2, 20, 2))
hwEvmVmAbnormalRunNotification = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 19, 2, 20, 2, 1)).setObjects(("HUAWEI-SYS-MAN-MIB", "hwSysEvmRoleName"))
if mibBuilder.loadTexts: hwEvmVmAbnormalRunNotification.setStatus('current')
hwEvmVmNotRunningNotification = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 19, 2, 20, 2, 2)).setObjects(("HUAWEI-SYS-MAN-MIB", "hwSysEvmRoleName"))
if mibBuilder.loadTexts: hwEvmVmNotRunningNotification.setStatus('current')
hwEvmVmAbnormalRestartNotification = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 19, 2, 20, 2, 3)).setObjects(("HUAWEI-SYS-MAN-MIB", "hwSysEvmRoleName"))
if mibBuilder.loadTexts: hwEvmVmAbnormalRestartNotification.setStatus('current')
hwEvmDownloadFailedNotification = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 19, 2, 20, 2, 4)).setObjects(("HUAWEI-SYS-MAN-MIB", "hwSysEvmDownloadFileName"))
if mibBuilder.loadTexts: hwEvmDownloadFailedNotification.setStatus('current')
hwEvmInstallFailedNotification = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 19, 2, 20, 2, 5)).setObjects(("HUAWEI-SYS-MAN-MIB", "hwSysEvmInstallFileName"))
if mibBuilder.loadTexts: hwEvmInstallFailedNotification.setStatus('current')
huaweiSystemManMIBConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 19, 3))
huaweiSystemManMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 19, 3, 1))
huaweiSystemManMIBCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 2011, 5, 25, 19, 3, 1, 1)).setObjects(("HUAWEI-SYS-MAN-MIB", "huaweiSysClockGroup"), ("HUAWEI-SYS-MAN-MIB", "huaweiSysReloadGroup"), ("HUAWEI-SYS-MAN-MIB", "huaweiSysImageGroup"), ("HUAWEI-SYS-MAN-MIB", "huaweiSysCFGFileGroup"), ("HUAWEI-SYS-MAN-MIB", "huaweiSystemManNotificationGroup"), ("HUAWEI-SYS-MAN-MIB", "huaweihwSysEvmTrapsObjectGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    huaweiSystemManMIBCompliance = huaweiSystemManMIBCompliance.setStatus('current')
huaweiSystemManMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 19, 3, 2))
huaweiSysClockGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 19, 3, 2, 1)).setObjects(("HUAWEI-SYS-MAN-MIB", "hwSysLocalClock"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    huaweiSysClockGroup = huaweiSysClockGroup.setStatus('current')
huaweiSysReloadGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 19, 3, 2, 2)).setObjects(("HUAWEI-SYS-MAN-MIB", "hwSysReloadSchedule"), ("HUAWEI-SYS-MAN-MIB", "hwSysReloadAction"), ("HUAWEI-SYS-MAN-MIB", "hwSysReloadImage"), ("HUAWEI-SYS-MAN-MIB", "hwSysReloadCfgFile"), ("HUAWEI-SYS-MAN-MIB", "hwSysReloadReason"), ("HUAWEI-SYS-MAN-MIB", "hwSysReloadPatchFile"), ("HUAWEI-SYS-MAN-MIB", "hwSysReloadLicenseFile"), ("HUAWEI-SYS-MAN-MIB", "hwSysReloadPafFile"), ("HUAWEI-SYS-MAN-MIB", "hwSysReloadPatchState"), ("HUAWEI-SYS-MAN-MIB", "hwSysLatestRebootErrorInfo"), ("HUAWEI-SYS-MAN-MIB", "hwSysReloadScheduleTime"), ("HUAWEI-SYS-MAN-MIB", "hwSysReloadEntity"), ("HUAWEI-SYS-MAN-MIB", "hwSysReloadRowStatus"), ("HUAWEI-SYS-MAN-MIB", "hwSysReloadOperateDestType"), ("HUAWEI-SYS-MAN-MIB", "hwSysReloadOperateDestIndex"), ("HUAWEI-SYS-MAN-MIB", "hwSysSlaveSwitchChassisNum"), ("HUAWEI-SYS-MAN-MIB", "hwSysSlaveSwitchOperType"), ("HUAWEI-SYS-MAN-MIB", "hwSysSlaveSwitchEnableStatus"), ("HUAWEI-SYS-MAN-MIB", "hwSysDelayReboot"), ("HUAWEI-SYS-MAN-MIB", "hwSysReloadAndroidFile"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    huaweiSysReloadGroup = huaweiSysReloadGroup.setStatus('current')
huaweiSysImageGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 19, 3, 2, 3)).setObjects(("HUAWEI-SYS-MAN-MIB", "hwSysImageNum"), ("HUAWEI-SYS-MAN-MIB", "hwSysImageName"), ("HUAWEI-SYS-MAN-MIB", "hwSysImageSize"), ("HUAWEI-SYS-MAN-MIB", "hwSysImageLocation"), ("HUAWEI-SYS-MAN-MIB", "hwSysImageVersion"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    huaweiSysImageGroup = huaweiSysImageGroup.setStatus('current')
huaweiSysCFGFileGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 19, 3, 2, 4)).setObjects(("HUAWEI-SYS-MAN-MIB", "hwSysCFGFileNum"), ("HUAWEI-SYS-MAN-MIB", "hwSysCFGFileName"), ("HUAWEI-SYS-MAN-MIB", "hwSysCFGFileSize"), ("HUAWEI-SYS-MAN-MIB", "hwSysCFGFileLocation"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    huaweiSysCFGFileGroup = huaweiSysCFGFileGroup.setStatus('current')
hwSysCurGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 19, 3, 2, 5)).setObjects(("HUAWEI-SYS-MAN-MIB", "hwSysCurCFGFileIndex"), ("HUAWEI-SYS-MAN-MIB", "hwSysCurImageIndex"), ("HUAWEI-SYS-MAN-MIB", "hwSysCurPafFileIndex"), ("HUAWEI-SYS-MAN-MIB", "hwSysCurLicenseIndex"), ("HUAWEI-SYS-MAN-MIB", "hwSysCurPatchFileIndex"), ("HUAWEI-SYS-MAN-MIB", "hwSysCurVoiceFileIndex"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwSysCurGroup = hwSysCurGroup.setStatus('current')
huaweiSystemManNotificationGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 19, 3, 2, 6)).setObjects(("HUAWEI-SYS-MAN-MIB", "hwSysClockChangedNotification"), ("HUAWEI-SYS-MAN-MIB", "hwSysReloadNotification"), ("HUAWEI-SYS-MAN-MIB", "hwSysSlaveSwitchSuccessNotification"), ("HUAWEI-SYS-MAN-MIB", "hwSysSlaveSwitchFailNotification"), ("HUAWEI-SYS-MAN-MIB", "hwSysIssuNotification"), ("HUAWEI-SYS-MAN-MIB", "hwPatchInstallFail"), ("HUAWEI-SYS-MAN-MIB", "hwPatchInstallFailClear"), ("HUAWEI-SYS-MAN-MIB", "hwSumUpgradeSuccess"), ("HUAWEI-SYS-MAN-MIB", "hwSysCfgFileErrorNotification"), ("HUAWEI-SYS-MAN-MIB", "hwSysImageErrorNotification"), ("HUAWEI-SYS-MAN-MIB", "hwSysPafChangeNotification"), ("HUAWEI-SYS-MAN-MIB", "hwSysLicenseChangeNotification"), ("HUAWEI-SYS-MAN-MIB", "hwSystemBoardExclude"), ("HUAWEI-SYS-MAN-MIB", "hwSystemBoardExcludeClear"), ("HUAWEI-SYS-MAN-MIB", "hwEvmVmAbnormalRunNotification"), ("HUAWEI-SYS-MAN-MIB", "hwEvmVmNotRunningNotification"), ("HUAWEI-SYS-MAN-MIB", "hwEvmVmAbnormalRestartNotification"), ("HUAWEI-SYS-MAN-MIB", "hwEvmDownloadFailedNotification"), ("HUAWEI-SYS-MAN-MIB", "hwEvmInstallFailedNotification"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    huaweiSystemManNotificationGroup = huaweiSystemManNotificationGroup.setStatus('current')
huaweiSystemHDNotificationGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 19, 3, 2, 7)).setObjects(("HUAWEI-SYS-MAN-MIB", "hwSysMasterHDError"), ("HUAWEI-SYS-MAN-MIB", "hwSysSlaveHDError"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    huaweiSystemHDNotificationGroup = huaweiSystemHDNotificationGroup.setStatus('current')
hwPatchLoadGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 19, 3, 2, 8)).setObjects(("HUAWEI-SYS-MAN-MIB", "hwPatchLoadDestType"), ("HUAWEI-SYS-MAN-MIB", "hwPatchLoadDestIndex"), ("HUAWEI-SYS-MAN-MIB", "hwLoadPatchRowState"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwPatchLoadGroup = hwPatchLoadGroup.setStatus('current')
hwPatchTrapsGrop = NotificationGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 19, 3, 2, 9)).setObjects(("HUAWEI-SYS-MAN-MIB", "hwPatchErrorTrap"), ("HUAWEI-SYS-MAN-MIB", "hwPatchActiveOverTimeTrap"), ("HUAWEI-SYS-MAN-MIB", "hwPatchMalfunctionComebackTrap"), ("HUAWEI-SYS-MAN-MIB", "hwPatchUpdateTrap"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwPatchTrapsGrop = hwPatchTrapsGrop.setStatus('current')
hwPatchInfoGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 19, 3, 2, 10)).setObjects(("HUAWEI-SYS-MAN-MIB", "hwPatchDescription"), ("HUAWEI-SYS-MAN-MIB", "hwPatchFuncNum"), ("HUAWEI-SYS-MAN-MIB", "hwPatchTextLen"), ("HUAWEI-SYS-MAN-MIB", "hwPatchDataLen"), ("HUAWEI-SYS-MAN-MIB", "hwPatchType"), ("HUAWEI-SYS-MAN-MIB", "hwPatchAdminStatus"), ("HUAWEI-SYS-MAN-MIB", "hwPatchStateTempPatchNum"), ("HUAWEI-SYS-MAN-MIB", "hwPatchStateCommonPatchNum"), ("HUAWEI-SYS-MAN-MIB", "hwPatchStateRuningPatchNum"), ("HUAWEI-SYS-MAN-MIB", "hwPatchStateActivePatchNum"), ("HUAWEI-SYS-MAN-MIB", "hwPatchStateDeactivePatchNum"), ("HUAWEI-SYS-MAN-MIB", "hwPatchHistoryVersion"), ("HUAWEI-SYS-MAN-MIB", "hwPatchStateTotalPatchNum"), ("HUAWEI-SYS-MAN-MIB", "hwPatchStateDataUsed"), ("HUAWEI-SYS-MAN-MIB", "hwPatchStateTextUsed"), ("HUAWEI-SYS-MAN-MIB", "hwPatchDataMax"), ("HUAWEI-SYS-MAN-MIB", "hwPatchTextMax"), ("HUAWEI-SYS-MAN-MIB", "hwPatchIdleNum"), ("HUAWEI-SYS-MAN-MIB", "hwPatchNumMax"), ("HUAWEI-SYS-MAN-MIB", "hwPatchActiveTime"), ("HUAWEI-SYS-MAN-MIB", "hwPatchBuildTime"), ("HUAWEI-SYS-MAN-MIB", "hwPatchVersion"), ("HUAWEI-SYS-MAN-MIB", "hwPatchHistoryProgrameVersion"), ("HUAWEI-SYS-MAN-MIB", "hwPatchFileName"), ("HUAWEI-SYS-MAN-MIB", "hwPatchUsedFileName"), ("HUAWEI-SYS-MAN-MIB", "hwPatchErrorTableMax"), ("HUAWEI-SYS-MAN-MIB", "hwPatchHistoryTableMax"), ("HUAWEI-SYS-MAN-MIB", "hwPatchRecordReset"), ("HUAWEI-SYS-MAN-MIB", "hwPatchProgramVersion"), ("HUAWEI-SYS-MAN-MIB", "hwPatchOperateState"), ("HUAWEI-SYS-MAN-MIB", "hwPatchErrorSlot"), ("HUAWEI-SYS-MAN-MIB", "hwPatchErrorPatchIndex"), ("HUAWEI-SYS-MAN-MIB", "hwPatchErrorCode"), ("HUAWEI-SYS-MAN-MIB", "hwPatchHistoryBeginTime"), ("HUAWEI-SYS-MAN-MIB", "hwPatchHistoryEndTime"), ("HUAWEI-SYS-MAN-MIB", "hwPatchHistoryAction"), ("HUAWEI-SYS-MAN-MIB", "hwPatchEndIndex"), ("HUAWEI-SYS-MAN-MIB", "hwPatchTrapEnble"), ("HUAWEI-SYS-MAN-MIB", "hwPatchBeginIndex"), ("HUAWEI-SYS-MAN-MIB", "hwPatchId"), ("HUAWEI-SYS-MAN-MIB", "hwPatchLatestId"), ("HUAWEI-SYS-MAN-MIB", "hwSlotId"), ("HUAWEI-SYS-MAN-MIB", "hwPatchErrorPatchFileName"), ("HUAWEI-SYS-MAN-MIB", "hwPatchFailReason"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwPatchInfoGroup = hwPatchInfoGroup.setStatus('current')
hwPatchFileGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 19, 3, 2, 11)).setObjects(("HUAWEI-SYS-MAN-MIB", "hwPatchFileName"), ("HUAWEI-SYS-MAN-MIB", "hwPatchFileSize"), ("HUAWEI-SYS-MAN-MIB", "hwPatchFileLocation"), ("HUAWEI-SYS-MAN-MIB", "hwPatchFileVersion"), ("HUAWEI-SYS-MAN-MIB", "hwPatchFileNum"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwPatchFileGroup = hwPatchFileGroup.setStatus('current')
hwSysPafFileGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 19, 3, 2, 13)).setObjects(("HUAWEI-SYS-MAN-MIB", "hwSysPafFileName"), ("HUAWEI-SYS-MAN-MIB", "hwSysPafFileSize"), ("HUAWEI-SYS-MAN-MIB", "hwSysPafFileLocation"), ("HUAWEI-SYS-MAN-MIB", "hwSysPafFileVersion"), ("HUAWEI-SYS-MAN-MIB", "hwSysPafFileNum"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwSysPafFileGroup = hwSysPafFileGroup.setStatus('current')
hwSysPafLicenseGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 19, 3, 2, 14)).setObjects(("HUAWEI-SYS-MAN-MIB", "hwSysLicenseFileNum"), ("HUAWEI-SYS-MAN-MIB", "hwSysLicenseFileName"), ("HUAWEI-SYS-MAN-MIB", "hwSysLicenseFileSize"), ("HUAWEI-SYS-MAN-MIB", "hwSysLicenseFileLocation"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwSysPafLicenseGroup = hwSysPafLicenseGroup.setStatus('current')
hwSysRebootAndSwitchGrop = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 19, 3, 2, 15)).setObjects(("HUAWEI-SYS-MAN-MIB", "hwSysReboot"), ("HUAWEI-SYS-MAN-MIB", "hwSysSlaveSwitchEnable"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwSysRebootAndSwitchGrop = hwSysRebootAndSwitchGrop.setStatus('current')
hwBootRomGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 19, 3, 2, 16)).setObjects(("HUAWEI-SYS-MAN-MIB", "hwBootRomBootDevice"), ("HUAWEI-SYS-MAN-MIB", "hwBootRomHostName"), ("HUAWEI-SYS-MAN-MIB", "hwBootRomFileName"), ("HUAWEI-SYS-MAN-MIB", "hwBootRomIpOnEthernet"), ("HUAWEI-SYS-MAN-MIB", "hwBootRomIpOnBackPlane"), ("HUAWEI-SYS-MAN-MIB", "hwBootRomHostIp"), ("HUAWEI-SYS-MAN-MIB", "hwBootRomGatewayIp"), ("HUAWEI-SYS-MAN-MIB", "hwBootRomUserName"), ("HUAWEI-SYS-MAN-MIB", "hwBootRomPassword"), ("HUAWEI-SYS-MAN-MIB", "hwBootRomTargetName"), ("HUAWEI-SYS-MAN-MIB", "hwBootRomStartupScript"), ("HUAWEI-SYS-MAN-MIB", "hwBootRomXModemBaudRate"), ("HUAWEI-SYS-MAN-MIB", "hwBootRomVersion"), ("HUAWEI-SYS-MAN-MIB", "hwBootRomProcessorNo"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwBootRomGroup = hwBootRomGroup.setStatus('current')
hwSystemCfcardNotificationGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 19, 3, 2, 17)).setObjects(("HUAWEI-SYS-MAN-MIB", "hwSysMasterCfcardError"), ("HUAWEI-SYS-MAN-MIB", "hwSysSlaveCfcardError"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwSystemCfcardNotificationGroup = hwSystemCfcardNotificationGroup.setStatus('current')
hwSysUpgradeGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 19, 3, 2, 18)).setObjects(("HUAWEI-SYS-MAN-MIB", "hwIssuMode"), ("HUAWEI-SYS-MAN-MIB", "hwIssuImageFile"), ("HUAWEI-SYS-MAN-MIB", "hwIssuPafFile"), ("HUAWEI-SYS-MAN-MIB", "hwIssuLicenseFile"), ("HUAWEI-SYS-MAN-MIB", "hwIssuPatchFile"), ("HUAWEI-SYS-MAN-MIB", "hwIssuState"), ("HUAWEI-SYS-MAN-MIB", "hwIssuConditionCheck"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwSysUpgradeGroup = hwSysUpgradeGroup.setStatus('current')
hwSysRebootInfoGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 19, 3, 2, 19)).setObjects(("HUAWEI-SYS-MAN-MIB", "hwSysRebootTimes"), ("HUAWEI-SYS-MAN-MIB", "hwSysRebootReason"), ("HUAWEI-SYS-MAN-MIB", "hwSysRebootTime"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwSysRebootInfoGroup = hwSysRebootInfoGroup.setStatus('current')
hwSysDeviceCheckGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 19, 3, 2, 20)).setObjects(("HUAWEI-SYS-MAN-MIB", "hwSysDeviceCheckStart"), ("HUAWEI-SYS-MAN-MIB", "hwSysDeviceCheckState"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwSysDeviceCheckGroup = hwSysDeviceCheckGroup.setStatus('current')
huaweiSysVoiceFileGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 19, 3, 2, 21)).setObjects(("HUAWEI-SYS-MAN-MIB", "hwSysVoiceFileNum"), ("HUAWEI-SYS-MAN-MIB", "hwSysVoiceFileName"), ("HUAWEI-SYS-MAN-MIB", "hwSysVoiceFileSize"), ("HUAWEI-SYS-MAN-MIB", "hwSysVoiceFileLocation"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    huaweiSysVoiceFileGroup = huaweiSysVoiceFileGroup.setStatus('current')
hwSysWlanApUpgradeCmdGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 19, 3, 2, 22)).setObjects(("HUAWEI-SYS-MAN-MIB", "hwSysWlanApUpgradeMode"), ("HUAWEI-SYS-MAN-MIB", "hwSysWlanApUpgradeFileName"), ("HUAWEI-SYS-MAN-MIB", "hwSysWlanApUpgradeServerIp"), ("HUAWEI-SYS-MAN-MIB", "hwSysWlanApUpgradeServerUserName"), ("HUAWEI-SYS-MAN-MIB", "hwSysWlanApUpgradeServerPassword"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwSysWlanApUpgradeCmdGroup = hwSysWlanApUpgradeCmdGroup.setStatus('current')
hwSysWlanApUpgradeStatusGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 19, 3, 2, 23)).setObjects(("HUAWEI-SYS-MAN-MIB", "hwSysWlanApUpgradeProgressStatus"), ("HUAWEI-SYS-MAN-MIB", "hwSysWlanApUpgradeLoadProgress"), ("HUAWEI-SYS-MAN-MIB", "hwSysWlanApUpgradeStorageProgress"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwSysWlanApUpgradeStatusGroup = hwSysWlanApUpgradeStatusGroup.setStatus('current')
hwSysWlanApUpgradeNotificationsGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 19, 3, 2, 24)).setObjects(("HUAWEI-SYS-MAN-MIB", "hwSysWlanApUpgradeBeginNotify"), ("HUAWEI-SYS-MAN-MIB", "hwSysWlanApUpgradeResultNotify"), ("HUAWEI-SYS-MAN-MIB", "hwSysWlanApUpgradeUbootNotMatchNotify"), ("HUAWEI-SYS-MAN-MIB", "hwSysWlanApUpgradeAssistantPackageNotMatchNotify"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwSysWlanApUpgradeNotificationsGroup = hwSysWlanApUpgradeNotificationsGroup.setStatus('current')
huaweiSysAndroidFileGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 19, 3, 2, 25)).setObjects(("HUAWEI-SYS-MAN-MIB", "hwSysAndroidFileNum"), ("HUAWEI-SYS-MAN-MIB", "hwSysAndroidFileName"), ("HUAWEI-SYS-MAN-MIB", "hwSysAndroidFileSize"), ("HUAWEI-SYS-MAN-MIB", "hwSysAndroidFileLocation"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    huaweiSysAndroidFileGroup = huaweiSysAndroidFileGroup.setStatus('current')
huaweihwSysEvmTrapsObjectGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 19, 3, 2, 26)).setObjects(("HUAWEI-SYS-MAN-MIB", "hwSysEvmRoleName"), ("HUAWEI-SYS-MAN-MIB", "hwSysEvmDownloadFileName"), ("HUAWEI-SYS-MAN-MIB", "hwSysEvmInstallFileName"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    huaweihwSysEvmTrapsObjectGroup = huaweihwSysEvmTrapsObjectGroup.setStatus('current')
mibBuilder.exportSymbols("HUAWEI-SYS-MAN-MIB", hwSysReloadScheduleTime=hwSysReloadScheduleTime, hwPatchLoadDestType=hwPatchLoadDestType, hwPatchBuildTime=hwPatchBuildTime, huaweiSystemHDNotificationGroup=huaweiSystemHDNotificationGroup, hwSysWlanApUpgradeCmdGroup=hwSysWlanApUpgradeCmdGroup, hwSysReload=hwSysReload, hwPatchStateRuningPatchNum=hwPatchStateRuningPatchNum, hwSysPafFileNum=hwSysPafFileNum, hwSysCurVoiceFileIndex=hwSysCurVoiceFileIndex, hwEvmDownloadFailedNotification=hwEvmDownloadFailedNotification, hwSysWlanApUpgradeProgressStatus=hwSysWlanApUpgradeProgressStatus, hwSysAndroidFileIndex=hwSysAndroidFileIndex, hwSystemBoardExclude=hwSystemBoardExclude, hwBootRomIpOnEthernet=hwBootRomIpOnEthernet, hwSysSlaveSwitchEntry=hwSysSlaveSwitchEntry, hwSysDeviceCheck=hwSysDeviceCheck, hwPatchInfo=hwPatchInfo, hwSysWlanApUpgradeServerUserName=hwSysWlanApUpgradeServerUserName, hwSysWlanApUpgradeResultNotify=hwSysWlanApUpgradeResultNotify, hwLoadPatchRowState=hwLoadPatchRowState, hwSysWlanApUpgradeMode=hwSysWlanApUpgradeMode, hwPatchFileName=hwPatchFileName, hwPatchHistoryTable=hwPatchHistoryTable, hwPatchVersion=hwPatchVersion, hwBootRomUserName=hwBootRomUserName, hwSysLicenseFileLocation=hwSysLicenseFileLocation, hwSysCFGFileReason=hwSysCFGFileReason, hwSysReloadImage=hwSysReloadImage, hwSysRebootAndSwitchGrop=hwSysRebootAndSwitchGrop, hwPatchErrorIndex=hwPatchErrorIndex, hwSysSlaveSwitchIndex=hwSysSlaveSwitchIndex, hwPatchFileSize=hwPatchFileSize, huaweiSystemManMIBCompliance=huaweiSystemManMIBCompliance, hwPatchStateDeactivePatchNum=hwPatchStateDeactivePatchNum, hwSysReloadScheduleTable=hwSysReloadScheduleTable, hwPatchNumMax=hwPatchNumMax, huaweihwSysEvmTrapsObjectGroup=huaweihwSysEvmTrapsObjectGroup, hwSysCurGroup=hwSysCurGroup, hwSysUpgrade=hwSysUpgrade, hwPatchActiveOverTimeTrap=hwPatchActiveOverTimeTrap, hwPatchHistoryTableMax=hwPatchHistoryTableMax, hwSysWlanApUpgradeLoadProgress=hwSysWlanApUpgradeLoadProgress, hwEvmVmAbnormalRestartNotification=hwEvmVmAbnormalRestartNotification, hwSysReloadCfgFile=hwSysReloadCfgFile, hwPatchStateActivePatchNum=hwPatchStateActivePatchNum, hwSysLicenseFileIndex=hwSysLicenseFileIndex, hwSysReboot=hwSysReboot, hwSysReloadReason=hwSysReloadReason, hwSysSlaveHDError=hwSysSlaveHDError, hwPatchFileTable=hwPatchFileTable, hwSysEvmInstallFileName=hwSysEvmInstallFileName, hwPatchFuncNum=hwPatchFuncNum, hwPatchLoadGroup=hwPatchLoadGroup, hwSysAndroidFileName=hwSysAndroidFileName, hwSysVoiceFileLocation=hwSysVoiceFileLocation, hwLoadPatchEntry=hwLoadPatchEntry, hwPatchTrap=hwPatchTrap, hwPatchErrorCode=hwPatchErrorCode, hwPatchErrorPatchFileName=hwPatchErrorPatchFileName, hwSysSwitchoverInfo=hwSysSwitchoverInfo, hwSysWlanApUpgradeNotifications=hwSysWlanApUpgradeNotifications, hwPatchDescription=hwPatchDescription, hwIssuIndex=hwIssuIndex, hwSysReloadOperateDestType=hwSysReloadOperateDestType, hwSysSlaveSwitchTable=hwSysSlaveSwitchTable, hwSysMultiSwtStateIndex=hwSysMultiSwtStateIndex, hwSysReloadNotification=hwSysReloadNotification, hwSysLicenseFileTable=hwSysLicenseFileTable, hwSysAndroidFile=hwSysAndroidFile, hwSysAndroidFileSize=hwSysAndroidFileSize, hwSysImageNum=hwSysImageNum, hwSysUpgradeTable=hwSysUpgradeTable, hwSysReloadScheduleEntry=hwSysReloadScheduleEntry, hwSysWlanApUpgrade=hwSysWlanApUpgrade, hwSysImageEntry=hwSysImageEntry, hwSysSlaveSwitchSrc=hwSysSlaveSwitchSrc, hwSysCurCFGFileIndex=hwSysCurCFGFileIndex, hwSysSlaveSwitchChassisNum=hwSysSlaveSwitchChassisNum, hwSysClockChangedNotification=hwSysClockChangedNotification, hwPatchLoadState=hwPatchLoadState, hwSysFileName=hwSysFileName, hwPatchEntry=hwPatchEntry, hwSysVoiceFile=hwSysVoiceFile, hwEvmInstallFailedNotification=hwEvmInstallFailedNotification, hwSysSlaveSwitchFailNotification=hwSysSlaveSwitchFailNotification, hwSysRebootTime=hwSysRebootTime, hwSysVoiceFileName=hwSysVoiceFileName, hwSysSwitchoverStateEntry=hwSysSwitchoverStateEntry, hwSysCFGFileEntry=hwSysCFGFileEntry, hwSysSlaveSwitchEnableStatus=hwSysSlaveSwitchEnableStatus, hwPatchFileGroup=hwPatchFileGroup, hwPatchHistoryAction=hwPatchHistoryAction, hwSumUpgradeSuccess=hwSumUpgradeSuccess, hwPatchTextMax=hwPatchTextMax, hwSysReloadPatchState=hwSysReloadPatchState, hwPatchBase=hwPatchBase, hwSysImageLocation=hwSysImageLocation, hwSysSwitchoverBoardType=hwSysSwitchoverBoardType, hwPatchErrorPatchIndex=hwPatchErrorPatchIndex, hwPatchFileNum=hwPatchFileNum, hwBootRomVersion=hwBootRomVersion, hwSysSwitchoverStateTable=hwSysSwitchoverStateTable, hwSysReloadScheduleIndex=hwSysReloadScheduleIndex, hwSysWlanApUpgradeServerPassword=hwSysWlanApUpgradeServerPassword, hwEvmVmNotRunningNotification=hwEvmVmNotRunningNotification, hwPatchRecordReset=hwPatchRecordReset, hwPatchFileEntry=hwPatchFileEntry, hwPatchHistoryIndex=hwPatchHistoryIndex, hwLoadPatchTable=hwLoadPatchTable, hwPatchErrorEntry=hwPatchErrorEntry, hwSysPafLicenseGroup=hwSysPafLicenseGroup, hwIssuImageFile=hwIssuImageFile, hwPatchFileLocation=hwPatchFileLocation, hwPatchEndIndex=hwPatchEndIndex, hwBootRomGroup=hwBootRomGroup, hwSysRebootReason=hwSysRebootReason, hwSysReloadAction=hwSysReloadAction, hwSysSlaveSwitchOperType=hwSysSlaveSwitchOperType, hwSysRebootRecordTable=hwSysRebootRecordTable, hwSysLicenseFileName=hwSysLicenseFileName, hwSysWlanApUpgradeCmd=hwSysWlanApUpgradeCmd, huaweiSystemManMIBNotifications=huaweiSystemManMIBNotifications, hwSysAndroidFileEntry=hwSysAndroidFileEntry, hwPatch=hwPatch, hwSysUpgradeEntry=hwSysUpgradeEntry, hwIssuState=hwIssuState, hwPatchActiveTime=hwPatchActiveTime, hwSysDeviceCheckStart=hwSysDeviceCheckStart, hwBootRom=hwBootRom, hwSystemBoardExcludeClear=hwSystemBoardExcludeClear, hwSysAndroidFileNum=hwSysAndroidFileNum, hwSysWlanApUpgradeUbootNotMatchNotify=hwSysWlanApUpgradeUbootNotMatchNotify, hwPatchInstallFail=hwPatchInstallFail, hwPatchFailReason=hwPatchFailReason, huaweiSysCFGFileGroup=huaweiSysCFGFileGroup, hwSysLocalClock=hwSysLocalClock, hwPatchErrorTableMax=hwPatchErrorTableMax, hwSysPafFileEntry=hwSysPafFileEntry, hwPatchLatestId=hwPatchLatestId, hwSysLicenseFile=hwSysLicenseFile, hwPatchHistoryBeginTime=hwPatchHistoryBeginTime, hwSysUpgradeGroup=hwSysUpgradeGroup, hwSysRebootRecordEntry=hwSysRebootRecordEntry, hwBootRomGatewayIp=hwBootRomGatewayIp, hwSysImageReason=hwSysImageReason, hwPatchErrorTrap=hwPatchErrorTrap, hwPatchSlotIndex=hwPatchSlotIndex, hwSysDeviceCheckGroup=hwSysDeviceCheckGroup, hwIssuPafFile=hwIssuPafFile, hwBootRomEntry=hwBootRomEntry, hwSysLatestRebootErrorInfo=hwSysLatestRebootErrorInfo, hwSysAndroidFileLocation=hwSysAndroidFileLocation, hwSysVoiceFileEntry=hwSysVoiceFileEntry, hwPatchStateDataUsed=hwPatchStateDataUsed, hwSysReloadPafFile=hwSysReloadPafFile, hwSysSlaveCfcardError=hwSysSlaveCfcardError, hwSysCurImageIndex=hwSysCurImageIndex, hwPatchTrapsGrop=hwPatchTrapsGrop, hwSysSlaveSwitchDst=hwSysSlaveSwitchDst, hwPatchAdminStatus=hwPatchAdminStatus, hwSysCurPatchFileIndex=hwSysCurPatchFileIndex, huaweiSystemManMIB=huaweiSystemManMIB, hwSysMultiSwtChassisId=hwSysMultiSwtChassisId, hwPatchStateCommonPatchNum=hwPatchStateCommonPatchNum, hwPatchProgramVersion=hwPatchProgramVersion, huaweiSystemManMIBGroups=huaweiSystemManMIBGroups, hwSysReloadOperateDestIndex=hwSysReloadOperateDestIndex, hwPatchMalfunctionComebackTrap=hwPatchMalfunctionComebackTrap, hwPatchErrorSlot=hwPatchErrorSlot, hwSysRebootTimes=hwSysRebootTimes, hwBootRomBootDevice=hwBootRomBootDevice, hwSysCFGFileIndex=hwSysCFGFileIndex, hwPatchHistoryVersion=hwPatchHistoryVersion, hwSysFileType=hwSysFileType, huaweiSysClockGroup=huaweiSysClockGroup, hwSysImageVersion=hwSysImageVersion, hwPatchBeginIndex=hwPatchBeginIndex, hwSysWlanApUpgradeNotificationsGroup=hwSysWlanApUpgradeNotificationsGroup, hwSysCurEntry=hwSysCurEntry, hwBootRomTable=hwBootRomTable, hwSysCurTable=hwSysCurTable, hwSysSwitchoverSlotId=hwSysSwitchoverSlotId, hwSysSlaveSwitchEnable=hwSysSlaveSwitchEnable, hwIssuConditionCheck=hwIssuConditionCheck, hwSysMultiSwtBoardType=hwSysMultiSwtBoardType, hwSysReloadEntity=hwSysReloadEntity, hwPatchUsedFileName=hwPatchUsedFileName, hwSysCurEntPhysicalIndex=hwSysCurEntPhysicalIndex, hwPatchInstallFailClear=hwPatchInstallFailClear, huaweiSysImageGroup=huaweiSysImageGroup, hwSysEvmTraps=hwSysEvmTraps, hwSysImageErrorNotification=hwSysImageErrorNotification, hwPatchTextLen=hwPatchTextLen, hwPatchStateEntry=hwPatchStateEntry, hwSysMasterHDError=hwSysMasterHDError, hwSysAndroidFileTable=hwSysAndroidFileTable, hwSysVoiceFileSize=hwSysVoiceFileSize, hwSysSwitchoverStateIndex=hwSysSwitchoverStateIndex, hwPatchTrapEnble=hwPatchTrapEnble, hwIssuLicenseFile=hwIssuLicenseFile, hwIssuMode=hwIssuMode, hwSysCurrent=hwSysCurrent, hwPatchFileIndex=hwPatchFileIndex, hwSysSwitchoverState=hwSysSwitchoverState, hwSysPafFileLocation=hwSysPafFileLocation, hwPatchDataMax=hwPatchDataMax, hwSysSwitchoverStateMultiEntry=hwSysSwitchoverStateMultiEntry, hwSysImageName=hwSysImageName, hwSysReloadAndroidFile=hwSysReloadAndroidFile, hwSysWlanApUpgradeFileName=hwSysWlanApUpgradeFileName, hwSysRebootInfoGroup=hwSysRebootInfoGroup, hwEvmVmAbnormalRunNotification=hwEvmVmAbnormalRunNotification, hwSysImageTable=hwSysImageTable, hwSysPafFileIndex=hwSysPafFileIndex, hwSysDeviceCheckState=hwSysDeviceCheckState, huaweiSysVoiceFileGroup=huaweiSysVoiceFileGroup, hwSysSwitchoverStateMultiTable=hwSysSwitchoverStateMultiTable, hwPatchLoadDestIndex=hwPatchLoadDestIndex, hwSysVoiceFileTable=hwSysVoiceFileTable, hwSysPafFileVersion=hwSysPafFileVersion, hwPatchOperateState=hwPatchOperateState, hwSysWlanApUpgradeStorageProgress=hwSysWlanApUpgradeStorageProgress, hwSysCfgFileErrorNotification=hwSysCfgFileErrorNotification, hwSysCurPafFileIndex=hwSysCurPafFileIndex, hwSysCFGFileLocation=hwSysCFGFileLocation, hwSysPafFileTable=hwSysPafFileTable, hwSysWlanApUpgradeBeginNotify=hwSysWlanApUpgradeBeginNotify, hwSysPafFileSize=hwSysPafFileSize, hwPatchStateTextUsed=hwPatchStateTextUsed, hwSysVoiceFileNum=hwSysVoiceFileNum, hwPatchInfoGroup=hwPatchInfoGroup, hwSysWlanApUpgradeStatusGroup=hwSysWlanApUpgradeStatusGroup, hwSysReloadRowStatus=hwSysReloadRowStatus, hwPatchHistoryEntry=hwPatchHistoryEntry, hwSysAndroidFileReason=hwSysAndroidFileReason, hwSysMultiSwtSlotId=hwSysMultiSwtSlotId, hwPatchTable=hwPatchTable, hwPatchType=hwPatchType, huaweiSystemManMIBConformance=huaweiSystemManMIBConformance, hwSysLicenseFileNum=hwSysLicenseFileNum, hwPatchOperateDestIndex=hwPatchOperateDestIndex, hwSysRebootRecordIndex=hwSysRebootRecordIndex, hwSysImageIndex=hwSysImageIndex, hwSysEvmNotifications=hwSysEvmNotifications, hwSysLicenseFileEntry=hwSysLicenseFileEntry, HWPatchErrorType=HWPatchErrorType, hwSysWlanApUpgradeAssistantPackageNotMatchNotify=hwSysWlanApUpgradeAssistantPackageNotMatchNotify, hwBootRomHostIp=hwBootRomHostIp, hwSysReloadSchedule=hwSysReloadSchedule, hwBootRomHostName=hwBootRomHostName, hwPatchDataLen=hwPatchDataLen, hwSysReloadLicenseFile=hwSysReloadLicenseFile, hwBootRomStartupScript=hwBootRomStartupScript, hwSysRebootInfo=hwSysRebootInfo)
mibBuilder.exportSymbols("HUAWEI-SYS-MAN-MIB", hwSysImageSize=hwSysImageSize, hwBootRomXModemBaudRate=hwBootRomXModemBaudRate, hwSysMasterCfcardError=hwSysMasterCfcardError, hwSysCurLicenseIndex=hwSysCurLicenseIndex, hwSysEvmDownloadFileName=hwSysEvmDownloadFileName, huaweiSysAndroidFileGroup=huaweiSysAndroidFileGroup, hwSysCFGFile=hwSysCFGFile, hwPatchErrorTable=hwPatchErrorTable, hwPatchId=hwPatchId, hwSysCFGFileSize=hwSysCFGFileSize, PYSNMP_MODULE_ID=huaweiSystemManMIB, hwBootRomIpOnBackPlane=hwBootRomIpOnBackPlane, hwSysMultiSwtInfo=hwSysMultiSwtInfo, hwSlotId=hwSlotId, hwPatchOperateDestType=hwPatchOperateDestType, hwSystemCfcardNotificationGroup=hwSystemCfcardNotificationGroup, hwSysFileIndex=hwSysFileIndex, hwSysCFGFileTable=hwSysCFGFileTable, hwSysWlanApUpgradeServerIp=hwSysWlanApUpgradeServerIp, hwBootRomTargetName=hwBootRomTargetName, hwSysWlanApUpgradeStatus=hwSysWlanApUpgradeStatus, hwIssuPatchFile=hwIssuPatchFile, hwPatchStateTable=hwPatchStateTable, hwPatchUpdateTrap=hwPatchUpdateTrap, hwPatchFileVersion=hwPatchFileVersion, hwSysVoiceFileIndex=hwSysVoiceFileIndex, hwBootRomIndex=hwBootRomIndex, huaweiSystemManNotificationGroup=huaweiSystemManNotificationGroup, hwSysPafFileGroup=hwSysPafFileGroup, hwPatchIndex=hwPatchIndex, hwBootRomFileName=hwBootRomFileName, hwSysCFGFileName=hwSysCFGFileName, hwSysSlaveSwitchSuccessNotification=hwSysSlaveSwitchSuccessNotification, hwSysIssuNotification=hwSysIssuNotification, hwSysLicenseFileSize=hwSysLicenseFileSize, hwSysSourceIndexEntry=hwSysSourceIndexEntry, hwSysImage=hwSysImage, hwSysEvmTrapsObject=hwSysEvmTrapsObject, huaweiSystemManMIBCompliances=huaweiSystemManMIBCompliances, hwBootRomPassword=hwBootRomPassword, hwBootRomProcessorNo=hwBootRomProcessorNo, hwPatchIdleNum=hwPatchIdleNum, huaweiSysReloadGroup=huaweiSysReloadGroup, hwPatchStateTotalPatchNum=hwPatchStateTotalPatchNum, hwSysReloadVoiceFile=hwSysReloadVoiceFile, hwSysCFGFileNum=hwSysCFGFileNum, huaweiSystemManMIBObjects=huaweiSystemManMIBObjects, hwSysSourceIndex=hwSysSourceIndex, hwPatchHistoryEndTime=hwPatchHistoryEndTime, hwSysDelayReboot=hwSysDelayReboot, hwPatchStateTempPatchNum=hwPatchStateTempPatchNum, hwSysPafChangeNotification=hwSysPafChangeNotification, hwSysPafFileName=hwSysPafFileName, hwSysReloadPatchFile=hwSysReloadPatchFile, hwSysSourceIndexTable=hwSysSourceIndexTable, hwSysClock=hwSysClock, hwSysLicenseChangeNotification=hwSysLicenseChangeNotification, hwSysPafFile=hwSysPafFile, hwSysEvmRoleName=hwSysEvmRoleName, hwPatchHistoryProgrameVersion=hwPatchHistoryProgrameVersion)
