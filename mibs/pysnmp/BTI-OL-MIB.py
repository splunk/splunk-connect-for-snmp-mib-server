#
# PySNMP MIB module BTI-OL-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/BTI-OL-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:24:42 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ConstraintsUnion, ValueSizeConstraint, ConstraintsIntersection, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ConstraintsUnion", "ValueSizeConstraint", "ConstraintsIntersection", "SingleValueConstraint")
tcaMontype, evtDateAndTime, tcaDateAndTime, evtCodeType, tcaThreshold, trapSeqNum, tcaValue, condDescription, condObjectType, evtDescription, condCodeType, olCondNotifications, tcaIntervalType, opticalLayer, condReportType, condServiceAffecting, condDateAndTime, olEvtNotifications, condSeverity, evtObjectType = mibBuilder.importSymbols("BTI-7000-MIB", "tcaMontype", "evtDateAndTime", "tcaDateAndTime", "evtCodeType", "tcaThreshold", "trapSeqNum", "tcaValue", "condDescription", "condObjectType", "evtDescription", "condCodeType", "olCondNotifications", "tcaIntervalType", "opticalLayer", "condReportType", "condServiceAffecting", "condDateAndTime", "olEvtNotifications", "condSeverity", "evtObjectType")
btiModules, = mibBuilder.importSymbols("BTI-MIB", "btiModules")
FixedX10, FixedX100, PMIntervalType, HoursAndMinutes, AdminStatus, CpType, OperStatQlfr, BERType, InitializeCmd, OperStatus, FiberType, PMValidity = mibBuilder.importSymbols("BTI-TC-MIB", "FixedX10", "FixedX100", "PMIntervalType", "HoursAndMinutes", "AdminStatus", "CpType", "OperStatQlfr", "BERType", "InitializeCmd", "OperStatus", "FiberType", "PMValidity")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
Counter32, Bits, NotificationType, Unsigned32, Gauge32, MibScalar, MibTable, MibTableRow, MibTableColumn, ModuleIdentity, ObjectIdentity, MibIdentifier, Counter64, Integer32, IpAddress, TimeTicks, iso = mibBuilder.importSymbols("SNMPv2-SMI", "Counter32", "Bits", "NotificationType", "Unsigned32", "Gauge32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ModuleIdentity", "ObjectIdentity", "MibIdentifier", "Counter64", "Integer32", "IpAddress", "TimeTicks", "iso")
RowStatus, DisplayString, TextualConvention, DateAndTime = mibBuilder.importSymbols("SNMPv2-TC", "RowStatus", "DisplayString", "TextualConvention", "DateAndTime")
olMib = ModuleIdentity((1, 3, 6, 1, 4, 1, 18070, 1, 6))
olMib.setRevisions(('2012-08-17 12:00', '2012-02-10 12:00', '2011-09-26 12:00',))
if mibBuilder.loadTexts: olMib.setLastUpdated('201208171200Z')
if mibBuilder.loadTexts: olMib.setOrganization('BTI Systems Inc.')
class OlGroupType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))
    namedValues = NamedValues(("none", 1), ("noEqlzTerm", 2), ("eqlzTerm", 3), ("noEqlzLine", 4), ("eqlzLine", 5), ("roadm", 6))

class OlPortType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))
    namedValues = NamedValues(("line", 1), ("client", 2), ("dcm", 3), ("channel", 4), ("expansion", 5))

olGroupTable = MibTable((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 1), )
if mibBuilder.loadTexts: olGroupTable.setStatus('current')
olGroupEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 1, 1), ).setIndexNames((0, "BTI-OL-MIB", "olGroupIdx"))
if mibBuilder.loadTexts: olGroupEntry.setStatus('current')
olGroupIdx = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255)))
if mibBuilder.loadTexts: olGroupIdx.setStatus('current')
olGroupType = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 1, 1, 2), OlGroupType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: olGroupType.setStatus('current')
olGroupId = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 1, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: olGroupId.setStatus('current')
olGroupCustom1 = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 1, 1, 4), DisplayString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: olGroupCustom1.setStatus('current')
olGroupCustom2 = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 1, 1, 5), DisplayString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: olGroupCustom2.setStatus('current')
olGroupCustom3 = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 1, 1, 6), DisplayString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: olGroupCustom3.setStatus('current')
olGroupRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 1, 1, 100), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: olGroupRowStatus.setStatus('current')
olEqptTable = MibTable((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 3), )
if mibBuilder.loadTexts: olEqptTable.setStatus('current')
olEqptEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 3, 1), ).setIndexNames((0, "BTI-OL-MIB", "olEqptCpTypeIdx"), (0, "BTI-OL-MIB", "olEqptShelfIdx"), (0, "BTI-OL-MIB", "olEqptSlotIdx"))
if mibBuilder.loadTexts: olEqptEntry.setStatus('current')
olEqptCpTypeIdx = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 3, 1, 1), CpType())
if mibBuilder.loadTexts: olEqptCpTypeIdx.setStatus('current')
olEqptShelfIdx = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 3, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 1), ValueRangeConstraint(11, 11), ValueRangeConstraint(21, 21), ValueRangeConstraint(31, 31), )))
if mibBuilder.loadTexts: olEqptShelfIdx.setStatus('current')
olEqptSlotIdx = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 3, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255)))
if mibBuilder.loadTexts: olEqptSlotIdx.setStatus('current')
olEqptGroupNum = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 3, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: olEqptGroupNum.setStatus('current')
olEqptDegreeNum = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 3, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: olEqptDegreeNum.setStatus('current')
olEqptRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 3, 1, 100), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: olEqptRowStatus.setStatus('current')
olPortTable = MibTable((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 4), )
if mibBuilder.loadTexts: olPortTable.setStatus('current')
olPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 4, 1), ).setIndexNames((0, "BTI-OL-MIB", "olPortCpTypeIdx"), (0, "BTI-OL-MIB", "olPortShelfIdx"), (0, "BTI-OL-MIB", "olPortSlotIdx"), (0, "BTI-OL-MIB", "olPortTypeIdx"), (0, "BTI-OL-MIB", "olPortIdx"))
if mibBuilder.loadTexts: olPortEntry.setStatus('current')
olPortCpTypeIdx = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 4, 1, 1), CpType())
if mibBuilder.loadTexts: olPortCpTypeIdx.setStatus('current')
olPortShelfIdx = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 4, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 1), ValueRangeConstraint(11, 11), ValueRangeConstraint(21, 21), ValueRangeConstraint(31, 31), )))
if mibBuilder.loadTexts: olPortShelfIdx.setStatus('current')
olPortSlotIdx = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 4, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255)))
if mibBuilder.loadTexts: olPortSlotIdx.setStatus('current')
olPortTypeIdx = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 4, 1, 4), OlPortType())
if mibBuilder.loadTexts: olPortTypeIdx.setStatus('current')
olPortIdx = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 4, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 600)))
if mibBuilder.loadTexts: olPortIdx.setStatus('current')
olPortId = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 4, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: olPortId.setStatus('current')
olPortCustom1 = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 4, 1, 7), DisplayString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: olPortCustom1.setStatus('current')
olPortCustom2 = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 4, 1, 8), DisplayString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: olPortCustom2.setStatus('current')
olPortCustom3 = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 4, 1, 9), DisplayString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: olPortCustom3.setStatus('current')
olPortDWDMType = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 4, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("native", 1), ("alien", 2))).clone('native')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: olPortDWDMType.setStatus('current')
olPortGrid = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 4, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("ghz100", 1), ("ghz50", 2))).clone('ghz100')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: olPortGrid.setStatus('current')
olPortWavelength = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 4, 1, 12), FixedX100()).setUnits('nanometers/100').setMaxAccess("readonly")
if mibBuilder.loadTexts: olPortWavelength.setStatus('current')
olPortFrequency = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 4, 1, 13), FixedX100()).setUnits('terahertz/100').setMaxAccess("readonly")
if mibBuilder.loadTexts: olPortFrequency.setStatus('current')
olPortOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 4, 1, 14), OperStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: olPortOperStatus.setStatus('current')
olPortOperStatQlfr = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 4, 1, 15), OperStatQlfr()).setMaxAccess("readonly")
if mibBuilder.loadTexts: olPortOperStatQlfr.setStatus('current')
olPortRemoteId = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 4, 1, 16), DisplayString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: olPortRemoteId.setStatus('current')
olPortExpCnxDegree = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 4, 1, 17), Integer32().subtype(subtypeSpec=ValueRangeConstraint(2, 4))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: olPortExpCnxDegree.setStatus('current')
olPortActCnxDegree = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 4, 1, 18), Integer32().subtype(subtypeSpec=ValueRangeConstraint(2, 4))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: olPortActCnxDegree.setStatus('current')
olPortRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 4, 1, 100), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: olPortRowStatus.setStatus('current')
eqptConnTable = MibTable((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 5), )
if mibBuilder.loadTexts: eqptConnTable.setStatus('current')
eqptConnEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 5, 1), ).setIndexNames((0, "BTI-OL-MIB", "eqptConnSrcCpTypeIdx"), (0, "BTI-OL-MIB", "eqptConnSrcShelfIdx"), (0, "BTI-OL-MIB", "eqptConnSrcSlotIdx"), (0, "BTI-OL-MIB", "eqptConnSrcPortTypeIdx"), (0, "BTI-OL-MIB", "eqptConnSrcIdx"), (0, "BTI-OL-MIB", "eqptConnDstCpTypeIdx"), (0, "BTI-OL-MIB", "eqptConnDstShelfIdx"), (0, "BTI-OL-MIB", "eqptConnDstSlotIdx"), (0, "BTI-OL-MIB", "eqptConnDstPortTypeIdx"), (0, "BTI-OL-MIB", "eqptConnDstIdx"))
if mibBuilder.loadTexts: eqptConnEntry.setStatus('current')
eqptConnSrcCpTypeIdx = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 5, 1, 1), CpType())
if mibBuilder.loadTexts: eqptConnSrcCpTypeIdx.setStatus('current')
eqptConnSrcShelfIdx = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 5, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 1), ValueRangeConstraint(11, 11), ValueRangeConstraint(21, 21), ValueRangeConstraint(31, 31), )))
if mibBuilder.loadTexts: eqptConnSrcShelfIdx.setStatus('current')
eqptConnSrcSlotIdx = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 5, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255)))
if mibBuilder.loadTexts: eqptConnSrcSlotIdx.setStatus('current')
eqptConnSrcPortTypeIdx = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 5, 1, 4), OlPortType())
if mibBuilder.loadTexts: eqptConnSrcPortTypeIdx.setStatus('current')
eqptConnSrcIdx = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 5, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 600)))
if mibBuilder.loadTexts: eqptConnSrcIdx.setStatus('current')
eqptConnDstCpTypeIdx = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 5, 1, 6), CpType())
if mibBuilder.loadTexts: eqptConnDstCpTypeIdx.setStatus('current')
eqptConnDstShelfIdx = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 5, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 1), ValueRangeConstraint(11, 11), ValueRangeConstraint(21, 21), ValueRangeConstraint(31, 31), )))
if mibBuilder.loadTexts: eqptConnDstShelfIdx.setStatus('current')
eqptConnDstSlotIdx = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 5, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255)))
if mibBuilder.loadTexts: eqptConnDstSlotIdx.setStatus('current')
eqptConnDstPortTypeIdx = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 5, 1, 9), OlPortType())
if mibBuilder.loadTexts: eqptConnDstPortTypeIdx.setStatus('current')
eqptConnDstIdx = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 5, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 600)))
if mibBuilder.loadTexts: eqptConnDstIdx.setStatus('current')
eqptConnType = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 5, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("duplex", 1), ("loopback", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: eqptConnType.setStatus('current')
eqptConnRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 5, 1, 100), RowStatus()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: eqptConnRowStatus.setStatus('current')
olOSCTable = MibTable((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 6), )
if mibBuilder.loadTexts: olOSCTable.setStatus('current')
olOSCEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 6, 1), ).setIndexNames((0, "BTI-OL-MIB", "olOSCCpTypeIdx"), (0, "BTI-OL-MIB", "olOSCShelfIdx"), (0, "BTI-OL-MIB", "olOSCSlotIdx"), (0, "BTI-OL-MIB", "olOSCLineIdx"))
if mibBuilder.loadTexts: olOSCEntry.setStatus('current')
olOSCCpTypeIdx = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 6, 1, 1), CpType())
if mibBuilder.loadTexts: olOSCCpTypeIdx.setStatus('current')
olOSCShelfIdx = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 6, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(1, 1), ValueRangeConstraint(11, 11), ValueRangeConstraint(21, 21), ValueRangeConstraint(31, 31), )))
if mibBuilder.loadTexts: olOSCShelfIdx.setStatus('current')
olOSCSlotIdx = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 6, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 20)))
if mibBuilder.loadTexts: olOSCSlotIdx.setStatus('current')
olOSCLineIdx = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 6, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1)))
if mibBuilder.loadTexts: olOSCLineIdx.setStatus('current')
olOSCAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 6, 1, 5), AdminStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: olOSCAdminStatus.setStatus('current')
olOSCOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 6, 1, 6), OperStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: olOSCOperStatus.setStatus('current')
olOSCOperStatQlfr = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 6, 1, 7), OperStatQlfr()).setMaxAccess("readonly")
if mibBuilder.loadTexts: olOSCOperStatQlfr.setStatus('current')
olOSCAutoEnableTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 6, 1, 8), HoursAndMinutes()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: olOSCAutoEnableTimer.setStatus('current')
olOSCActAutoEnableTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 6, 1, 9), HoursAndMinutes()).setMaxAccess("readonly")
if mibBuilder.loadTexts: olOSCActAutoEnableTimer.setStatus('current')
olOSCId = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 6, 1, 10), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: olOSCId.setStatus('current')
olOSCCustom1 = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 6, 1, 11), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: olOSCCustom1.setStatus('current')
olOSCCustom2 = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 6, 1, 12), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: olOSCCustom2.setStatus('current')
olOSCCustom3 = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 6, 1, 13), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: olOSCCustom3.setStatus('current')
olOSCFEIMMon = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 6, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: olOSCFEIMMon.setStatus('current')
olOSCExpFESysName = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 6, 1, 15), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 20))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: olOSCExpFESysName.setStatus('current')
olOSCExpFEIPAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 6, 1, 16), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: olOSCExpFEIPAddr.setStatus('current')
olOSCExpFEGrp = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 6, 1, 17), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: olOSCExpFEGrp.setStatus('current')
olOSCExpFEDegr = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 6, 1, 18), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: olOSCExpFEDegr.setStatus('current')
olOSCFESysName = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 6, 1, 19), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 20))).setMaxAccess("readonly")
if mibBuilder.loadTexts: olOSCFESysName.setStatus('current')
olOSCFEIPAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 6, 1, 20), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: olOSCFEIPAddr.setStatus('current')
olOSCFEGrp = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 6, 1, 21), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: olOSCFEGrp.setStatus('current')
olOSCFEDegr = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 6, 1, 22), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4))).setMaxAccess("readonly")
if mibBuilder.loadTexts: olOSCFEDegr.setStatus('current')
olOSCFEGrpType = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 6, 1, 23), OlGroupType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: olOSCFEGrpType.setStatus('current')
olOSCRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 6, 1, 100), RowStatus()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: olOSCRowStatus.setStatus('current')
odccTable = MibTable((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 7), )
if mibBuilder.loadTexts: odccTable.setStatus('current')
odccEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 7, 1), ).setIndexNames((0, "BTI-OL-MIB", "odccCpTypeIdx"), (0, "BTI-OL-MIB", "odccShelfIdx"), (0, "BTI-OL-MIB", "odccSlotIdx"), (0, "BTI-OL-MIB", "odccLineIdx"))
if mibBuilder.loadTexts: odccEntry.setStatus('current')
odccCpTypeIdx = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 7, 1, 1), CpType())
if mibBuilder.loadTexts: odccCpTypeIdx.setStatus('current')
odccShelfIdx = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 7, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(1, 1), ValueRangeConstraint(11, 11), ValueRangeConstraint(21, 21), ValueRangeConstraint(31, 31), )))
if mibBuilder.loadTexts: odccShelfIdx.setStatus('current')
odccSlotIdx = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 7, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 20)))
if mibBuilder.loadTexts: odccSlotIdx.setStatus('current')
odccLineIdx = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 7, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1)))
if mibBuilder.loadTexts: odccLineIdx.setStatus('current')
odccAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 7, 1, 5), AdminStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: odccAdminStatus.setStatus('current')
odccRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 7, 1, 100), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: odccRowStatus.setStatus('current')
wdmTable = MibTable((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 8), )
if mibBuilder.loadTexts: wdmTable.setStatus('current')
wdmEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 8, 1), ).setIndexNames((0, "BTI-OL-MIB", "wdmCpTypeIdx"), (0, "BTI-OL-MIB", "wdmShelfIdx"), (0, "BTI-OL-MIB", "wdmSlotIdx"), (0, "BTI-OL-MIB", "wdmLineIdx"))
if mibBuilder.loadTexts: wdmEntry.setStatus('current')
wdmCpTypeIdx = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 8, 1, 1), CpType())
if mibBuilder.loadTexts: wdmCpTypeIdx.setStatus('current')
wdmShelfIdx = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 8, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(1, 1), ValueRangeConstraint(11, 11), ValueRangeConstraint(21, 21), ValueRangeConstraint(31, 31), )))
if mibBuilder.loadTexts: wdmShelfIdx.setStatus('current')
wdmSlotIdx = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 8, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 20)))
if mibBuilder.loadTexts: wdmSlotIdx.setStatus('current')
wdmLineIdx = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 8, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1)))
if mibBuilder.loadTexts: wdmLineIdx.setStatus('current')
wdmAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 8, 1, 5), AdminStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wdmAdminStatus.setStatus('current')
wdmOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 8, 1, 6), OperStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wdmOperStatus.setStatus('current')
wdmOperStatQlfr = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 8, 1, 7), OperStatQlfr()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wdmOperStatQlfr.setStatus('current')
wdmAutoEnableTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 8, 1, 8), HoursAndMinutes()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wdmAutoEnableTimer.setStatus('current')
wdmActAutoEnableTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 8, 1, 9), HoursAndMinutes()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wdmActAutoEnableTimer.setStatus('current')
wdmId = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 8, 1, 10), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wdmId.setStatus('current')
wdmCustom1 = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 8, 1, 11), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wdmCustom1.setStatus('current')
wdmCustom2 = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 8, 1, 12), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wdmCustom2.setStatus('current')
wdmCustom3 = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 8, 1, 13), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wdmCustom3.setStatus('current')
wdmFiberType = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 8, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("smf", 1))).clone('smf')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wdmFiberType.setStatus('current')
wdmSpanLength = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 8, 1, 15), Unsigned32()).setUnits('kilometers').setMaxAccess("readonly")
if mibBuilder.loadTexts: wdmSpanLength.setStatus('current')
wdmSpanLossRxHighTh = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 8, 1, 16), FixedX10()).setUnits('dB/10').setMaxAccess("readwrite")
if mibBuilder.loadTexts: wdmSpanLossRxHighTh.setStatus('current')
wdmSpanLossSpecMax = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 8, 1, 17), FixedX10()).setUnits('dB/10').setMaxAccess("readonly")
if mibBuilder.loadTexts: wdmSpanLossSpecMax.setStatus('current')
wdmNumChannels = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 8, 1, 18), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 44))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wdmNumChannels.setStatus('current')
wdmRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 8, 1, 100), RowStatus()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: wdmRowStatus.setStatus('current')
wchXCTable = MibTable((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 9), )
if mibBuilder.loadTexts: wchXCTable.setStatus('current')
wchXCEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 9, 1), ).setIndexNames((0, "BTI-OL-MIB", "wchXCSrcCpTypeIdx"), (0, "BTI-OL-MIB", "wchXCSrcShelfIdx"), (0, "BTI-OL-MIB", "wchXCSrcSlotIdx"), (0, "BTI-OL-MIB", "wchXCSrcPortTypeIdx"), (0, "BTI-OL-MIB", "wchXCSrcPortIdx"), (0, "BTI-OL-MIB", "wchXCSrcChannelIdx"), (0, "BTI-OL-MIB", "wchXCDstCpTypeIdx"), (0, "BTI-OL-MIB", "wchXCDstShelfIdx"), (0, "BTI-OL-MIB", "wchXCDstSlotIdx"), (0, "BTI-OL-MIB", "wchXCDstPortTypeIdx"), (0, "BTI-OL-MIB", "wchXCDstPortIdx"), (0, "BTI-OL-MIB", "wchXCDstChannelIdx"))
if mibBuilder.loadTexts: wchXCEntry.setStatus('current')
wchXCSrcCpTypeIdx = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 9, 1, 1), CpType())
if mibBuilder.loadTexts: wchXCSrcCpTypeIdx.setStatus('current')
wchXCSrcShelfIdx = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 9, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 1), ValueRangeConstraint(11, 11), ValueRangeConstraint(21, 21), ValueRangeConstraint(31, 31), )))
if mibBuilder.loadTexts: wchXCSrcShelfIdx.setStatus('current')
wchXCSrcSlotIdx = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 9, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255)))
if mibBuilder.loadTexts: wchXCSrcSlotIdx.setStatus('current')
wchXCSrcPortTypeIdx = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 9, 1, 4), OlPortType())
if mibBuilder.loadTexts: wchXCSrcPortTypeIdx.setStatus('current')
wchXCSrcPortIdx = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 9, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 600)))
if mibBuilder.loadTexts: wchXCSrcPortIdx.setStatus('current')
wchXCSrcChannelIdx = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 9, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(135, 610)))
if mibBuilder.loadTexts: wchXCSrcChannelIdx.setStatus('current')
wchXCDstCpTypeIdx = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 9, 1, 7), CpType())
if mibBuilder.loadTexts: wchXCDstCpTypeIdx.setStatus('current')
wchXCDstShelfIdx = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 9, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 1), ValueRangeConstraint(11, 11), ValueRangeConstraint(21, 21), ValueRangeConstraint(31, 31), )))
if mibBuilder.loadTexts: wchXCDstShelfIdx.setStatus('current')
wchXCDstSlotIdx = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 9, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255)))
if mibBuilder.loadTexts: wchXCDstSlotIdx.setStatus('current')
wchXCDstPortTypeIdx = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 9, 1, 10), OlPortType())
if mibBuilder.loadTexts: wchXCDstPortTypeIdx.setStatus('current')
wchXCDstPortIdx = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 9, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 600)))
if mibBuilder.loadTexts: wchXCDstPortIdx.setStatus('current')
wchXCDstChannelIdx = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 9, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(135, 610)))
if mibBuilder.loadTexts: wchXCDstChannelIdx.setStatus('current')
wchXCServiceName = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 9, 1, 13), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wchXCServiceName.setStatus('current')
wchXCRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 9, 1, 100), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wchXCRowStatus.setStatus('current')
wchTable = MibTable((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 10), )
if mibBuilder.loadTexts: wchTable.setStatus('current')
wchEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 10, 1), ).setIndexNames((0, "BTI-OL-MIB", "wchCpTypeIdx"), (0, "BTI-OL-MIB", "wchShelfIdx"), (0, "BTI-OL-MIB", "wchSlotIdx"), (0, "BTI-OL-MIB", "wchPortTypeIdx"), (0, "BTI-OL-MIB", "wchPortIdx"), (0, "BTI-OL-MIB", "wchIdx"))
if mibBuilder.loadTexts: wchEntry.setStatus('current')
wchCpTypeIdx = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 10, 1, 1), CpType())
if mibBuilder.loadTexts: wchCpTypeIdx.setStatus('current')
wchShelfIdx = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 10, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(1, 1), ValueRangeConstraint(11, 11), ValueRangeConstraint(21, 21), ValueRangeConstraint(31, 31), )))
if mibBuilder.loadTexts: wchShelfIdx.setStatus('current')
wchSlotIdx = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 10, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 20)))
if mibBuilder.loadTexts: wchSlotIdx.setStatus('current')
wchPortTypeIdx = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 10, 1, 4), OlPortType())
if mibBuilder.loadTexts: wchPortTypeIdx.setStatus('current')
wchPortIdx = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 10, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4)))
if mibBuilder.loadTexts: wchPortIdx.setStatus('current')
wchIdx = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 10, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(135, 610)))
if mibBuilder.loadTexts: wchIdx.setStatus('current')
wchAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 10, 1, 7), AdminStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wchAdminStatus.setStatus('current')
wchOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 10, 1, 8), OperStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wchOperStatus.setStatus('current')
wchOperStatQlfr = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 10, 1, 9), OperStatQlfr()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wchOperStatQlfr.setStatus('current')
wchAutoEnableTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 10, 1, 10), HoursAndMinutes()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wchAutoEnableTimer.setStatus('current')
wchActAutoEnableTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 10, 1, 11), HoursAndMinutes()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wchActAutoEnableTimer.setStatus('current')
wchId = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 10, 1, 12), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wchId.setStatus('current')
wchCustom1 = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 10, 1, 13), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wchCustom1.setStatus('current')
wchCustom2 = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 10, 1, 14), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wchCustom2.setStatus('current')
wchCustom3 = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 10, 1, 15), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wchCustom3.setStatus('current')
wchBitrate = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 10, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("tenGig", 1))).clone('tenGig')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wchBitrate.setStatus('current')
wchGrid = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 10, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("ghz100", 1), ("ghz50", 2))).clone('ghz100')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wchGrid.setStatus('current')
wchWavelength = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 10, 1, 18), FixedX100()).setUnits('nanometers/100').setMaxAccess("readonly")
if mibBuilder.loadTexts: wchWavelength.setStatus('current')
wchFrequency = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 10, 1, 19), FixedX100()).setUnits('terahertz/100').setMaxAccess("readonly")
if mibBuilder.loadTexts: wchFrequency.setStatus('current')
wchRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 10, 1, 100), RowStatus()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: wchRowStatus.setStatus('current')
olGroupMerge = MibIdentifier((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 11))
olGroupMergeCmd = MibScalar((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 11, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("idle", 1), ("invoke", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: olGroupMergeCmd.setStatus('current')
olGroupMergePrimary = MibScalar((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 11, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: olGroupMergePrimary.setStatus('current')
olGroupMergeSecondary = MibScalar((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 11, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: olGroupMergeSecondary.setStatus('current')
olPerformance = MibIdentifier((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 12))
olOSCCrntPMTable = MibTable((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 12, 1), )
if mibBuilder.loadTexts: olOSCCrntPMTable.setStatus('current')
olOSCCrntPMEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 12, 1, 1), ).setIndexNames((0, "BTI-OL-MIB", "olOSCCrntPMCpTypeIdx"), (0, "BTI-OL-MIB", "olOSCCrntPMShelfIdx"), (0, "BTI-OL-MIB", "olOSCCrntPMSlotIdx"), (0, "BTI-OL-MIB", "olOSCCrntPMLineIdx"), (0, "BTI-OL-MIB", "olOSCCrntPMIntervalTypeIdx"))
if mibBuilder.loadTexts: olOSCCrntPMEntry.setStatus('current')
olOSCCrntPMCpTypeIdx = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 12, 1, 1, 1), CpType())
if mibBuilder.loadTexts: olOSCCrntPMCpTypeIdx.setStatus('current')
olOSCCrntPMShelfIdx = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 12, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(1, 1), ValueRangeConstraint(11, 11), ValueRangeConstraint(21, 21), ValueRangeConstraint(31, 31), )))
if mibBuilder.loadTexts: olOSCCrntPMShelfIdx.setStatus('current')
olOSCCrntPMSlotIdx = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 12, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 20)))
if mibBuilder.loadTexts: olOSCCrntPMSlotIdx.setStatus('current')
olOSCCrntPMLineIdx = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 12, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1)))
if mibBuilder.loadTexts: olOSCCrntPMLineIdx.setStatus('current')
olOSCCrntPMIntervalTypeIdx = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 12, 1, 1, 5), PMIntervalType())
if mibBuilder.loadTexts: olOSCCrntPMIntervalTypeIdx.setStatus('current')
olOSCCrntPMOPRValue = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 12, 1, 1, 6), FixedX10()).setUnits('dBm/10').setMaxAccess("readonly")
if mibBuilder.loadTexts: olOSCCrntPMOPRValue.setStatus('current')
olOSCCrntPMOPRTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 12, 1, 1, 7), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: olOSCCrntPMOPRTimeStamp.setStatus('current')
olOSCCrntPMOPRValidity = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 12, 1, 1, 8), PMValidity()).setMaxAccess("readonly")
if mibBuilder.loadTexts: olOSCCrntPMOPRValidity.setStatus('current')
olOSCCrntPMOPTValue = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 12, 1, 1, 9), FixedX10()).setUnits('dBm/10').setMaxAccess("readonly")
if mibBuilder.loadTexts: olOSCCrntPMOPTValue.setStatus('current')
olOSCCrntPMOPTTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 12, 1, 1, 10), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: olOSCCrntPMOPTTimeStamp.setStatus('current')
olOSCCrntPMOPTValidity = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 12, 1, 1, 11), PMValidity()).setMaxAccess("readonly")
if mibBuilder.loadTexts: olOSCCrntPMOPTValidity.setStatus('current')
olOSCCrntPMOBRValue = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 12, 1, 1, 12), FixedX10()).setUnits('dB/10').setMaxAccess("readonly")
if mibBuilder.loadTexts: olOSCCrntPMOBRValue.setStatus('current')
olOSCCrntPMOBRTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 12, 1, 1, 13), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: olOSCCrntPMOBRTimeStamp.setStatus('current')
olOSCCrntPMOBRValidity = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 12, 1, 1, 14), PMValidity()).setMaxAccess("readonly")
if mibBuilder.loadTexts: olOSCCrntPMOBRValidity.setStatus('current')
olOSCCrntPMCVSValue = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 12, 1, 1, 15), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: olOSCCrntPMCVSValue.setStatus('current')
olOSCCrntPMCVSTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 12, 1, 1, 16), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: olOSCCrntPMCVSTimeStamp.setStatus('current')
olOSCCrntPMCVSValidity = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 12, 1, 1, 17), PMValidity()).setMaxAccess("readonly")
if mibBuilder.loadTexts: olOSCCrntPMCVSValidity.setStatus('current')
olOSCCrntPMCVSInitialize = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 12, 1, 1, 18), InitializeCmd()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: olOSCCrntPMCVSInitialize.setStatus('current')
olOSCCrntPMESSValue = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 12, 1, 1, 19), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: olOSCCrntPMESSValue.setStatus('current')
olOSCCrntPMESSTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 12, 1, 1, 20), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: olOSCCrntPMESSTimeStamp.setStatus('current')
olOSCCrntPMESSValidity = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 12, 1, 1, 21), PMValidity()).setMaxAccess("readonly")
if mibBuilder.loadTexts: olOSCCrntPMESSValidity.setStatus('current')
olOSCCrntPMESSInitialize = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 12, 1, 1, 22), InitializeCmd()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: olOSCCrntPMESSInitialize.setStatus('current')
olOSCCrntPMSESSValue = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 12, 1, 1, 23), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: olOSCCrntPMSESSValue.setStatus('current')
olOSCCrntPMSESSTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 12, 1, 1, 24), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: olOSCCrntPMSESSTimeStamp.setStatus('current')
olOSCCrntPMSESSValidity = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 12, 1, 1, 25), PMValidity()).setMaxAccess("readonly")
if mibBuilder.loadTexts: olOSCCrntPMSESSValidity.setStatus('current')
olOSCCrntPMSESSInitialize = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 12, 1, 1, 26), InitializeCmd()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: olOSCCrntPMSESSInitialize.setStatus('current')
olOSCCrntPMSEFSSValue = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 12, 1, 1, 27), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: olOSCCrntPMSEFSSValue.setStatus('current')
olOSCCrntPMSEFSSTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 12, 1, 1, 28), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: olOSCCrntPMSEFSSTimeStamp.setStatus('current')
olOSCCrntPMSEFSSValidity = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 12, 1, 1, 29), PMValidity()).setMaxAccess("readonly")
if mibBuilder.loadTexts: olOSCCrntPMSEFSSValidity.setStatus('current')
olOSCCrntPMSEFSSInitialize = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 12, 1, 1, 30), InitializeCmd()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: olOSCCrntPMSEFSSInitialize.setStatus('current')
olOSCCrntPMUASSValue = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 12, 1, 1, 31), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: olOSCCrntPMUASSValue.setStatus('current')
olOSCCrntPMUASSTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 12, 1, 1, 32), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: olOSCCrntPMUASSTimeStamp.setStatus('current')
olOSCCrntPMUASSValidity = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 12, 1, 1, 33), PMValidity()).setMaxAccess("readonly")
if mibBuilder.loadTexts: olOSCCrntPMUASSValidity.setStatus('current')
olOSCCrntPMUASSInitialize = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 12, 1, 1, 34), InitializeCmd()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: olOSCCrntPMUASSInitialize.setStatus('current')
olOSCHistPMTable = MibTable((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 12, 2), )
if mibBuilder.loadTexts: olOSCHistPMTable.setStatus('current')
olOSCHistPMEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 12, 2, 1), ).setIndexNames((0, "BTI-OL-MIB", "olOSCHistPMCpTypeIdx"), (0, "BTI-OL-MIB", "olOSCHistPMShelfIdx"), (0, "BTI-OL-MIB", "olOSCHistPMSlotIdx"), (0, "BTI-OL-MIB", "olOSCHistPMLineIdx"), (0, "BTI-OL-MIB", "olOSCHistPMIntervalTypeIdx"), (0, "BTI-OL-MIB", "olOSCHistPMIntervalIdx"))
if mibBuilder.loadTexts: olOSCHistPMEntry.setStatus('current')
olOSCHistPMCpTypeIdx = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 12, 2, 1, 1), CpType())
if mibBuilder.loadTexts: olOSCHistPMCpTypeIdx.setStatus('current')
olOSCHistPMShelfIdx = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 12, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(1, 1), ValueRangeConstraint(11, 11), ValueRangeConstraint(21, 21), ValueRangeConstraint(31, 31), )))
if mibBuilder.loadTexts: olOSCHistPMShelfIdx.setStatus('current')
olOSCHistPMSlotIdx = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 12, 2, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 20)))
if mibBuilder.loadTexts: olOSCHistPMSlotIdx.setStatus('current')
olOSCHistPMLineIdx = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 12, 2, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1)))
if mibBuilder.loadTexts: olOSCHistPMLineIdx.setStatus('current')
olOSCHistPMIntervalTypeIdx = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 12, 2, 1, 5), PMIntervalType())
if mibBuilder.loadTexts: olOSCHistPMIntervalTypeIdx.setStatus('current')
olOSCHistPMIntervalIdx = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 12, 2, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 96)))
if mibBuilder.loadTexts: olOSCHistPMIntervalIdx.setStatus('current')
olOSCHistPMOPRValue = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 12, 2, 1, 7), FixedX10()).setUnits('dBm/10').setMaxAccess("readonly")
if mibBuilder.loadTexts: olOSCHistPMOPRValue.setStatus('current')
olOSCHistPMOPRTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 12, 2, 1, 8), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: olOSCHistPMOPRTimeStamp.setStatus('current')
olOSCHistPMOPRValidity = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 12, 2, 1, 9), PMValidity()).setMaxAccess("readonly")
if mibBuilder.loadTexts: olOSCHistPMOPRValidity.setStatus('current')
olOSCHistPMOPTValue = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 12, 2, 1, 10), FixedX10()).setUnits('dBm/10').setMaxAccess("readonly")
if mibBuilder.loadTexts: olOSCHistPMOPTValue.setStatus('current')
olOSCHistPMOPTTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 12, 2, 1, 11), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: olOSCHistPMOPTTimeStamp.setStatus('current')
olOSCHistPMOPTValidity = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 12, 2, 1, 12), PMValidity()).setMaxAccess("readonly")
if mibBuilder.loadTexts: olOSCHistPMOPTValidity.setStatus('current')
olOSCHistPMOBRValue = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 12, 2, 1, 13), FixedX10()).setUnits('dBm/10').setMaxAccess("readonly")
if mibBuilder.loadTexts: olOSCHistPMOBRValue.setStatus('current')
olOSCHistPMOBRTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 12, 2, 1, 14), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: olOSCHistPMOBRTimeStamp.setStatus('current')
olOSCHistPMOBRValidity = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 12, 2, 1, 15), PMValidity()).setMaxAccess("readonly")
if mibBuilder.loadTexts: olOSCHistPMOBRValidity.setStatus('current')
olOSCHistPMCVSValue = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 12, 2, 1, 16), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: olOSCHistPMCVSValue.setStatus('current')
olOSCHistPMCVSTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 12, 2, 1, 17), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: olOSCHistPMCVSTimeStamp.setStatus('current')
olOSCHistPMCVSValidity = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 12, 2, 1, 18), PMValidity()).setMaxAccess("readonly")
if mibBuilder.loadTexts: olOSCHistPMCVSValidity.setStatus('current')
olOSCHistPMCVSInitialize = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 12, 2, 1, 19), InitializeCmd()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: olOSCHistPMCVSInitialize.setStatus('current')
olOSCHistPMESSValue = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 12, 2, 1, 20), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: olOSCHistPMESSValue.setStatus('current')
olOSCHistPMESSTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 12, 2, 1, 21), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: olOSCHistPMESSTimeStamp.setStatus('current')
olOSCHistPMESSValidity = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 12, 2, 1, 22), PMValidity()).setMaxAccess("readonly")
if mibBuilder.loadTexts: olOSCHistPMESSValidity.setStatus('current')
olOSCHistPMESSInitialize = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 12, 2, 1, 23), InitializeCmd()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: olOSCHistPMESSInitialize.setStatus('current')
olOSCHistPMSESSValue = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 12, 2, 1, 24), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: olOSCHistPMSESSValue.setStatus('current')
olOSCHistPMSESSTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 12, 2, 1, 25), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: olOSCHistPMSESSTimeStamp.setStatus('current')
olOSCHistPMSESSValidity = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 12, 2, 1, 26), PMValidity()).setMaxAccess("readonly")
if mibBuilder.loadTexts: olOSCHistPMSESSValidity.setStatus('current')
olOSCHistPMSESSInitialize = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 12, 2, 1, 27), InitializeCmd()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: olOSCHistPMSESSInitialize.setStatus('current')
olOSCHistPMSEFSSValue = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 12, 2, 1, 28), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: olOSCHistPMSEFSSValue.setStatus('current')
olOSCHistPMSEFSSTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 12, 2, 1, 29), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: olOSCHistPMSEFSSTimeStamp.setStatus('current')
olOSCHistPMSEFSSValidity = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 12, 2, 1, 30), PMValidity()).setMaxAccess("readonly")
if mibBuilder.loadTexts: olOSCHistPMSEFSSValidity.setStatus('current')
olOSCHistPMSEFSSInitialize = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 12, 2, 1, 31), InitializeCmd()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: olOSCHistPMSEFSSInitialize.setStatus('current')
olOSCHistPMUASSValue = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 12, 2, 1, 32), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: olOSCHistPMUASSValue.setStatus('current')
olOSCHistPMUASSTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 12, 2, 1, 33), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: olOSCHistPMUASSTimeStamp.setStatus('current')
olOSCHistPMUASSValidity = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 12, 2, 1, 34), PMValidity()).setMaxAccess("readonly")
if mibBuilder.loadTexts: olOSCHistPMUASSValidity.setStatus('current')
olOSCHistPMUASSInitialize = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 12, 2, 1, 35), InitializeCmd()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: olOSCHistPMUASSInitialize.setStatus('current')
olOSCPMThresholdTable = MibTable((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 12, 3), )
if mibBuilder.loadTexts: olOSCPMThresholdTable.setStatus('current')
olOSCPMThresholdEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 12, 3, 1), ).setIndexNames((0, "BTI-OL-MIB", "olOSCPMThresholdCpTypeIdx"), (0, "BTI-OL-MIB", "olOSCPMThresholdShelfIdx"), (0, "BTI-OL-MIB", "olOSCPMThresholdSlotIdx"), (0, "BTI-OL-MIB", "olOSCPMThresholdLineIdx"), (0, "BTI-OL-MIB", "olOSCPMThresholdIntervalTypeIdx"))
if mibBuilder.loadTexts: olOSCPMThresholdEntry.setStatus('current')
olOSCPMThresholdCpTypeIdx = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 12, 3, 1, 1), CpType())
if mibBuilder.loadTexts: olOSCPMThresholdCpTypeIdx.setStatus('current')
olOSCPMThresholdShelfIdx = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 12, 3, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(1, 1), ValueRangeConstraint(11, 11), ValueRangeConstraint(21, 21), ValueRangeConstraint(31, 31), )))
if mibBuilder.loadTexts: olOSCPMThresholdShelfIdx.setStatus('current')
olOSCPMThresholdSlotIdx = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 12, 3, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 20)))
if mibBuilder.loadTexts: olOSCPMThresholdSlotIdx.setStatus('current')
olOSCPMThresholdLineIdx = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 12, 3, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1)))
if mibBuilder.loadTexts: olOSCPMThresholdLineIdx.setStatus('current')
olOSCPMThresholdIntervalTypeIdx = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 12, 3, 1, 5), PMIntervalType())
if mibBuilder.loadTexts: olOSCPMThresholdIntervalTypeIdx.setStatus('current')
olOSCPMThresholdCVSValue = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 12, 3, 1, 6), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: olOSCPMThresholdCVSValue.setStatus('current')
olOSCPMThresholdESSValue = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 12, 3, 1, 7), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: olOSCPMThresholdESSValue.setStatus('current')
olOSCPMThresholdSESSValue = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 12, 3, 1, 8), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: olOSCPMThresholdSESSValue.setStatus('current')
olOSCPMThresholdSEFSSValue = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 12, 3, 1, 9), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: olOSCPMThresholdSEFSSValue.setStatus('current')
olOSCPMThresholdUASSValue = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 12, 3, 1, 10), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: olOSCPMThresholdUASSValue.setStatus('current')
olPortCrntPMTable = MibTable((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 12, 4), )
if mibBuilder.loadTexts: olPortCrntPMTable.setStatus('current')
olPortCrntPMEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 12, 4, 1), ).setIndexNames((0, "BTI-OL-MIB", "olPortCrntPMCpTypeIdx"), (0, "BTI-OL-MIB", "olPortCrntPMShelfIdx"), (0, "BTI-OL-MIB", "olPortCrntPMSlotIdx"), (0, "BTI-OL-MIB", "olPortCrntPMTypeIdx"), (0, "BTI-OL-MIB", "olPortCrntPMIdx"), (0, "BTI-OL-MIB", "olPortCrntPMIntervalTypeIdx"))
if mibBuilder.loadTexts: olPortCrntPMEntry.setStatus('current')
olPortCrntPMCpTypeIdx = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 12, 4, 1, 1), CpType())
if mibBuilder.loadTexts: olPortCrntPMCpTypeIdx.setStatus('current')
olPortCrntPMShelfIdx = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 12, 4, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(1, 1), ValueRangeConstraint(11, 11), ValueRangeConstraint(21, 21), ValueRangeConstraint(31, 31), )))
if mibBuilder.loadTexts: olPortCrntPMShelfIdx.setStatus('current')
olPortCrntPMSlotIdx = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 12, 4, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 20)))
if mibBuilder.loadTexts: olPortCrntPMSlotIdx.setStatus('current')
olPortCrntPMTypeIdx = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 12, 4, 1, 4), OlPortType())
if mibBuilder.loadTexts: olPortCrntPMTypeIdx.setStatus('current')
olPortCrntPMIdx = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 12, 4, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4)))
if mibBuilder.loadTexts: olPortCrntPMIdx.setStatus('current')
olPortCrntPMIntervalTypeIdx = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 12, 4, 1, 6), PMIntervalType())
if mibBuilder.loadTexts: olPortCrntPMIntervalTypeIdx.setStatus('current')
olPortCrntPMOPRValue = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 12, 4, 1, 7), FixedX10()).setUnits('dBm/10').setMaxAccess("readonly")
if mibBuilder.loadTexts: olPortCrntPMOPRValue.setStatus('current')
olPortCrntPMOPRTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 12, 4, 1, 8), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: olPortCrntPMOPRTimeStamp.setStatus('current')
olPortCrntPMOPRValidity = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 12, 4, 1, 9), PMValidity()).setMaxAccess("readonly")
if mibBuilder.loadTexts: olPortCrntPMOPRValidity.setStatus('current')
olPortCrntPMOPRMinValue = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 12, 4, 1, 10), FixedX10()).setUnits('dBm/10').setMaxAccess("readonly")
if mibBuilder.loadTexts: olPortCrntPMOPRMinValue.setStatus('current')
olPortCrntPMOPRMinTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 12, 4, 1, 11), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: olPortCrntPMOPRMinTimeStamp.setStatus('current')
olPortCrntPMOPRMinValidity = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 12, 4, 1, 12), PMValidity()).setMaxAccess("readonly")
if mibBuilder.loadTexts: olPortCrntPMOPRMinValidity.setStatus('current')
olPortCrntPMOPRMaxValue = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 12, 4, 1, 13), FixedX10()).setUnits('dBm/10').setMaxAccess("readonly")
if mibBuilder.loadTexts: olPortCrntPMOPRMaxValue.setStatus('current')
olPortCrntPMOPRMaxTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 12, 4, 1, 14), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: olPortCrntPMOPRMaxTimeStamp.setStatus('current')
olPortCrntPMOPRMaxValidity = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 12, 4, 1, 15), PMValidity()).setMaxAccess("readonly")
if mibBuilder.loadTexts: olPortCrntPMOPRMaxValidity.setStatus('current')
olPortCrntPMOPRAvgValue = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 12, 4, 1, 16), FixedX10()).setUnits('dBm/10').setMaxAccess("readonly")
if mibBuilder.loadTexts: olPortCrntPMOPRAvgValue.setStatus('current')
olPortCrntPMOPRAvgTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 12, 4, 1, 17), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: olPortCrntPMOPRAvgTimeStamp.setStatus('current')
olPortCrntPMOPRAvgValidity = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 12, 4, 1, 18), PMValidity()).setMaxAccess("readonly")
if mibBuilder.loadTexts: olPortCrntPMOPRAvgValidity.setStatus('current')
olPortCrntPMOPRStdDevValue = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 12, 4, 1, 19), FixedX10()).setUnits('dB/10').setMaxAccess("readonly")
if mibBuilder.loadTexts: olPortCrntPMOPRStdDevValue.setStatus('current')
olPortCrntPMOPRStdDevTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 12, 4, 1, 20), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: olPortCrntPMOPRStdDevTimeStamp.setStatus('current')
olPortCrntPMOPRStdDevValidity = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 12, 4, 1, 21), PMValidity()).setMaxAccess("readonly")
if mibBuilder.loadTexts: olPortCrntPMOPRStdDevValidity.setStatus('current')
olPortCrntPMOPTValue = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 12, 4, 1, 22), FixedX10()).setUnits('dBm/10').setMaxAccess("readonly")
if mibBuilder.loadTexts: olPortCrntPMOPTValue.setStatus('current')
olPortCrntPMOPTTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 12, 4, 1, 23), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: olPortCrntPMOPTTimeStamp.setStatus('current')
olPortCrntPMOPTValidity = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 12, 4, 1, 24), PMValidity()).setMaxAccess("readonly")
if mibBuilder.loadTexts: olPortCrntPMOPTValidity.setStatus('current')
olPortCrntPMOPTMinValue = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 12, 4, 1, 25), FixedX10()).setUnits('dBm/10').setMaxAccess("readonly")
if mibBuilder.loadTexts: olPortCrntPMOPTMinValue.setStatus('current')
olPortCrntPMOPTMinTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 12, 4, 1, 26), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: olPortCrntPMOPTMinTimeStamp.setStatus('current')
olPortCrntPMOPTMinValidity = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 12, 4, 1, 27), PMValidity()).setMaxAccess("readonly")
if mibBuilder.loadTexts: olPortCrntPMOPTMinValidity.setStatus('current')
olPortCrntPMOPTMaxValue = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 12, 4, 1, 28), FixedX10()).setUnits('dBm/10').setMaxAccess("readonly")
if mibBuilder.loadTexts: olPortCrntPMOPTMaxValue.setStatus('current')
olPortCrntPMOPTMaxTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 12, 4, 1, 29), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: olPortCrntPMOPTMaxTimeStamp.setStatus('current')
olPortCrntPMOPTMaxValidity = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 12, 4, 1, 30), PMValidity()).setMaxAccess("readonly")
if mibBuilder.loadTexts: olPortCrntPMOPTMaxValidity.setStatus('current')
olPortCrntPMOPTAvgValue = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 12, 4, 1, 31), FixedX10()).setUnits('dBm/10').setMaxAccess("readonly")
if mibBuilder.loadTexts: olPortCrntPMOPTAvgValue.setStatus('current')
olPortCrntPMOPTAvgTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 12, 4, 1, 32), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: olPortCrntPMOPTAvgTimeStamp.setStatus('current')
olPortCrntPMOPTAvgValidity = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 12, 4, 1, 33), PMValidity()).setMaxAccess("readonly")
if mibBuilder.loadTexts: olPortCrntPMOPTAvgValidity.setStatus('current')
olPortCrntPMOPTStdDevValue = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 12, 4, 1, 34), FixedX10()).setUnits('dB/10').setMaxAccess("readonly")
if mibBuilder.loadTexts: olPortCrntPMOPTStdDevValue.setStatus('current')
olPortCrntPMOPTStdDevTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 12, 4, 1, 35), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: olPortCrntPMOPTStdDevTimeStamp.setStatus('current')
olPortCrntPMOPTStdDevValidity = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 12, 4, 1, 36), PMValidity()).setMaxAccess("readonly")
if mibBuilder.loadTexts: olPortCrntPMOPTStdDevValidity.setStatus('current')
olPortCrntPMLossRxValue = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 12, 4, 1, 37), FixedX10()).setUnits('dB/10').setMaxAccess("readonly")
if mibBuilder.loadTexts: olPortCrntPMLossRxValue.setStatus('current')
olPortCrntPMLossRxTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 12, 4, 1, 38), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: olPortCrntPMLossRxTimeStamp.setStatus('current')
olPortCrntPMLossRxValidity = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 12, 4, 1, 39), PMValidity()).setMaxAccess("readonly")
if mibBuilder.loadTexts: olPortCrntPMLossRxValidity.setStatus('current')
olPortCrntPMLossTxValue = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 12, 4, 1, 40), FixedX10()).setUnits('dB/10').setMaxAccess("readonly")
if mibBuilder.loadTexts: olPortCrntPMLossTxValue.setStatus('current')
olPortCrntPMLossTxTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 12, 4, 1, 41), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: olPortCrntPMLossTxTimeStamp.setStatus('current')
olPortCrntPMLossTxValidity = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 12, 4, 1, 42), PMValidity()).setMaxAccess("readonly")
if mibBuilder.loadTexts: olPortCrntPMLossTxValidity.setStatus('current')
olPortCrntPMInitializeAll = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 12, 4, 1, 43), InitializeCmd()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: olPortCrntPMInitializeAll.setStatus('current')
olPortHistPMTable = MibTable((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 12, 5), )
if mibBuilder.loadTexts: olPortHistPMTable.setStatus('current')
olPortHistPMEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 12, 5, 1), ).setIndexNames((0, "BTI-OL-MIB", "olPortHistPMCpTypeIdx"), (0, "BTI-OL-MIB", "olPortHistPMShelfIdx"), (0, "BTI-OL-MIB", "olPortHistPMSlotIdx"), (0, "BTI-OL-MIB", "olPortHistPMTypeIdx"), (0, "BTI-OL-MIB", "olPortHistPMIdx"), (0, "BTI-OL-MIB", "olPortHistPMIntervalTypeIdx"), (0, "BTI-OL-MIB", "olPortHistPMIntervalIdx"))
if mibBuilder.loadTexts: olPortHistPMEntry.setStatus('current')
olPortHistPMCpTypeIdx = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 12, 5, 1, 1), CpType())
if mibBuilder.loadTexts: olPortHistPMCpTypeIdx.setStatus('current')
olPortHistPMShelfIdx = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 12, 5, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(1, 1), ValueRangeConstraint(11, 11), ValueRangeConstraint(21, 21), ValueRangeConstraint(31, 31), )))
if mibBuilder.loadTexts: olPortHistPMShelfIdx.setStatus('current')
olPortHistPMSlotIdx = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 12, 5, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 20)))
if mibBuilder.loadTexts: olPortHistPMSlotIdx.setStatus('current')
olPortHistPMTypeIdx = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 12, 5, 1, 4), OlPortType())
if mibBuilder.loadTexts: olPortHistPMTypeIdx.setStatus('current')
olPortHistPMIdx = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 12, 5, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4)))
if mibBuilder.loadTexts: olPortHistPMIdx.setStatus('current')
olPortHistPMIntervalTypeIdx = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 12, 5, 1, 6), PMIntervalType())
if mibBuilder.loadTexts: olPortHistPMIntervalTypeIdx.setStatus('current')
olPortHistPMIntervalIdx = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 12, 5, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 96)))
if mibBuilder.loadTexts: olPortHistPMIntervalIdx.setStatus('current')
olPortHistPMOPRValue = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 12, 5, 1, 8), FixedX10()).setUnits('dBm/10').setMaxAccess("readonly")
if mibBuilder.loadTexts: olPortHistPMOPRValue.setStatus('current')
olPortHistPMOPRTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 12, 5, 1, 9), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: olPortHistPMOPRTimeStamp.setStatus('current')
olPortHistPMOPRValidity = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 12, 5, 1, 10), PMValidity()).setMaxAccess("readonly")
if mibBuilder.loadTexts: olPortHistPMOPRValidity.setStatus('current')
olPortHistPMOPRMinValue = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 12, 5, 1, 11), FixedX10()).setUnits('dBm/10').setMaxAccess("readonly")
if mibBuilder.loadTexts: olPortHistPMOPRMinValue.setStatus('current')
olPortHistPMOPRMinTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 12, 5, 1, 12), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: olPortHistPMOPRMinTimeStamp.setStatus('current')
olPortHistPMOPRMinValidity = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 12, 5, 1, 13), PMValidity()).setMaxAccess("readonly")
if mibBuilder.loadTexts: olPortHistPMOPRMinValidity.setStatus('current')
olPortHistPMOPRMaxValue = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 12, 5, 1, 14), FixedX10()).setUnits('dBm/10').setMaxAccess("readonly")
if mibBuilder.loadTexts: olPortHistPMOPRMaxValue.setStatus('current')
olPortHistPMOPRMaxTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 12, 5, 1, 15), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: olPortHistPMOPRMaxTimeStamp.setStatus('current')
olPortHistPMOPRMaxValidity = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 12, 5, 1, 16), PMValidity()).setMaxAccess("readonly")
if mibBuilder.loadTexts: olPortHistPMOPRMaxValidity.setStatus('current')
olPortHistPMOPRAvgValue = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 12, 5, 1, 17), FixedX10()).setUnits('dBm/10').setMaxAccess("readonly")
if mibBuilder.loadTexts: olPortHistPMOPRAvgValue.setStatus('current')
olPortHistPMOPRAvgTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 12, 5, 1, 18), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: olPortHistPMOPRAvgTimeStamp.setStatus('current')
olPortHistPMOPRAvgValidity = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 12, 5, 1, 19), PMValidity()).setMaxAccess("readonly")
if mibBuilder.loadTexts: olPortHistPMOPRAvgValidity.setStatus('current')
olPortHistPMOPRStdDevValue = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 12, 5, 1, 20), FixedX10()).setUnits('dB/10').setMaxAccess("readonly")
if mibBuilder.loadTexts: olPortHistPMOPRStdDevValue.setStatus('current')
olPortHistPMOPRStdDevTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 12, 5, 1, 21), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: olPortHistPMOPRStdDevTimeStamp.setStatus('current')
olPortHistPMOPRStdDevValidity = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 12, 5, 1, 22), PMValidity()).setMaxAccess("readonly")
if mibBuilder.loadTexts: olPortHistPMOPRStdDevValidity.setStatus('current')
olPortHistPMOPTValue = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 12, 5, 1, 23), FixedX10()).setUnits('dBm/10').setMaxAccess("readonly")
if mibBuilder.loadTexts: olPortHistPMOPTValue.setStatus('current')
olPortHistPMOPTTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 12, 5, 1, 24), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: olPortHistPMOPTTimeStamp.setStatus('current')
olPortHistPMOPTValidity = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 12, 5, 1, 25), PMValidity()).setMaxAccess("readonly")
if mibBuilder.loadTexts: olPortHistPMOPTValidity.setStatus('current')
olPortHistPMOPTMinValue = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 12, 5, 1, 26), FixedX10()).setUnits('dBm/10').setMaxAccess("readonly")
if mibBuilder.loadTexts: olPortHistPMOPTMinValue.setStatus('current')
olPortHistPMOPTMinTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 12, 5, 1, 27), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: olPortHistPMOPTMinTimeStamp.setStatus('current')
olPortHistPMOPTMinValidity = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 12, 5, 1, 28), PMValidity()).setMaxAccess("readonly")
if mibBuilder.loadTexts: olPortHistPMOPTMinValidity.setStatus('current')
olPortHistPMOPTMaxValue = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 12, 5, 1, 29), FixedX10()).setUnits('dBm/10').setMaxAccess("readonly")
if mibBuilder.loadTexts: olPortHistPMOPTMaxValue.setStatus('current')
olPortHistPMOPTMaxTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 12, 5, 1, 30), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: olPortHistPMOPTMaxTimeStamp.setStatus('current')
olPortHistPMOPTMaxValidity = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 12, 5, 1, 31), PMValidity()).setMaxAccess("readonly")
if mibBuilder.loadTexts: olPortHistPMOPTMaxValidity.setStatus('current')
olPortHistPMOPTAvgValue = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 12, 5, 1, 32), FixedX10()).setUnits('dBm/10').setMaxAccess("readonly")
if mibBuilder.loadTexts: olPortHistPMOPTAvgValue.setStatus('current')
olPortHistPMOPTAvgTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 12, 5, 1, 33), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: olPortHistPMOPTAvgTimeStamp.setStatus('current')
olPortHistPMOPTAvgValidity = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 12, 5, 1, 34), PMValidity()).setMaxAccess("readonly")
if mibBuilder.loadTexts: olPortHistPMOPTAvgValidity.setStatus('current')
olPortHistPMOPTStdDevValue = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 12, 5, 1, 35), FixedX10()).setUnits('dB/10').setMaxAccess("readonly")
if mibBuilder.loadTexts: olPortHistPMOPTStdDevValue.setStatus('current')
olPortHistPMOPTStdDevTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 12, 5, 1, 36), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: olPortHistPMOPTStdDevTimeStamp.setStatus('current')
olPortHistPMOPTStdDevValidity = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 12, 5, 1, 37), PMValidity()).setMaxAccess("readonly")
if mibBuilder.loadTexts: olPortHistPMOPTStdDevValidity.setStatus('current')
olPortHistPMLossRxValue = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 12, 5, 1, 38), FixedX10()).setUnits('dB/10').setMaxAccess("readonly")
if mibBuilder.loadTexts: olPortHistPMLossRxValue.setStatus('current')
olPortHistPMLossRxTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 12, 5, 1, 39), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: olPortHistPMLossRxTimeStamp.setStatus('current')
olPortHistPMLossRxValidity = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 12, 5, 1, 40), PMValidity()).setMaxAccess("readonly")
if mibBuilder.loadTexts: olPortHistPMLossRxValidity.setStatus('current')
olPortHistPMLossTxValue = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 12, 5, 1, 41), FixedX10()).setUnits('dB/10').setMaxAccess("readonly")
if mibBuilder.loadTexts: olPortHistPMLossTxValue.setStatus('current')
olPortHistPMLossTxTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 12, 5, 1, 42), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: olPortHistPMLossTxTimeStamp.setStatus('current')
olPortHistPMLossTxValidity = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 12, 5, 1, 43), PMValidity()).setMaxAccess("readonly")
if mibBuilder.loadTexts: olPortHistPMLossTxValidity.setStatus('current')
olPortHistPMInitializeAll = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 12, 5, 1, 44), InitializeCmd()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: olPortHistPMInitializeAll.setStatus('current')
wchCrntPMTable = MibTable((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 12, 6), )
if mibBuilder.loadTexts: wchCrntPMTable.setStatus('current')
wchCrntPMEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 12, 6, 1), ).setIndexNames((0, "BTI-OL-MIB", "wchCrntPMCpTypeIdx"), (0, "BTI-OL-MIB", "wchCrntPMShelfIdx"), (0, "BTI-OL-MIB", "wchCrntPMSlotIdx"), (0, "BTI-OL-MIB", "wchCrntPMPortTypeIdx"), (0, "BTI-OL-MIB", "wchCrntPMPortIdx"), (0, "BTI-OL-MIB", "wchCrntPMIdx"), (0, "BTI-OL-MIB", "wchCrntPMIntervalTypeIdx"))
if mibBuilder.loadTexts: wchCrntPMEntry.setStatus('current')
wchCrntPMCpTypeIdx = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 12, 6, 1, 1), CpType())
if mibBuilder.loadTexts: wchCrntPMCpTypeIdx.setStatus('current')
wchCrntPMShelfIdx = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 12, 6, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(1, 1), ValueRangeConstraint(11, 11), ValueRangeConstraint(21, 21), ValueRangeConstraint(31, 31), )))
if mibBuilder.loadTexts: wchCrntPMShelfIdx.setStatus('current')
wchCrntPMSlotIdx = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 12, 6, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 20)))
if mibBuilder.loadTexts: wchCrntPMSlotIdx.setStatus('current')
wchCrntPMPortTypeIdx = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 12, 6, 1, 4), OlPortType())
if mibBuilder.loadTexts: wchCrntPMPortTypeIdx.setStatus('current')
wchCrntPMPortIdx = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 12, 6, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4)))
if mibBuilder.loadTexts: wchCrntPMPortIdx.setStatus('current')
wchCrntPMIdx = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 12, 6, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(135, 610)))
if mibBuilder.loadTexts: wchCrntPMIdx.setStatus('current')
wchCrntPMIntervalTypeIdx = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 12, 6, 1, 7), PMIntervalType())
if mibBuilder.loadTexts: wchCrntPMIntervalTypeIdx.setStatus('current')
wchCrntPMOPRValue = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 12, 6, 1, 8), FixedX10()).setUnits('dBm/10').setMaxAccess("readonly")
if mibBuilder.loadTexts: wchCrntPMOPRValue.setStatus('current')
wchCrntPMOPRTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 12, 6, 1, 9), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wchCrntPMOPRTimeStamp.setStatus('current')
wchCrntPMOPRValidity = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 12, 6, 1, 10), PMValidity()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wchCrntPMOPRValidity.setStatus('current')
wchCrntPMOPRMinValue = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 12, 6, 1, 11), FixedX10()).setUnits('dBm/10').setMaxAccess("readwrite")
if mibBuilder.loadTexts: wchCrntPMOPRMinValue.setStatus('current')
wchCrntPMOPRMinTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 12, 6, 1, 12), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wchCrntPMOPRMinTimeStamp.setStatus('current')
wchCrntPMOPRMinValidity = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 12, 6, 1, 13), PMValidity()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wchCrntPMOPRMinValidity.setStatus('current')
wchCrntPMOPRMinInitialize = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 12, 6, 1, 14), InitializeCmd()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wchCrntPMOPRMinInitialize.setStatus('current')
wchCrntPMOPRMaxValue = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 12, 6, 1, 15), FixedX10()).setUnits('dBm/10').setMaxAccess("readwrite")
if mibBuilder.loadTexts: wchCrntPMOPRMaxValue.setStatus('current')
wchCrntPMOPRMaxTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 12, 6, 1, 16), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wchCrntPMOPRMaxTimeStamp.setStatus('current')
wchCrntPMOPRMaxValidity = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 12, 6, 1, 17), PMValidity()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wchCrntPMOPRMaxValidity.setStatus('current')
wchCrntPMOPRMaxInitialize = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 12, 6, 1, 18), InitializeCmd()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wchCrntPMOPRMaxInitialize.setStatus('current')
wchCrntPMOPTValue = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 12, 6, 1, 19), FixedX10()).setUnits('dBm/10').setMaxAccess("readonly")
if mibBuilder.loadTexts: wchCrntPMOPTValue.setStatus('current')
wchCrntPMOPTTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 12, 6, 1, 20), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wchCrntPMOPTTimeStamp.setStatus('current')
wchCrntPMOPTValidity = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 12, 6, 1, 21), PMValidity()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wchCrntPMOPTValidity.setStatus('current')
wchCrntPMOPTMinValue = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 12, 6, 1, 22), FixedX10()).setUnits('dBm/10').setMaxAccess("readwrite")
if mibBuilder.loadTexts: wchCrntPMOPTMinValue.setStatus('current')
wchCrntPMOPTMinTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 12, 6, 1, 23), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wchCrntPMOPTMinTimeStamp.setStatus('current')
wchCrntPMOPTMinValidity = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 12, 6, 1, 24), PMValidity()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wchCrntPMOPTMinValidity.setStatus('current')
wchCrntPMOPTMinInitialize = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 12, 6, 1, 25), InitializeCmd()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wchCrntPMOPTMinInitialize.setStatus('current')
wchCrntPMOPTMaxValue = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 12, 6, 1, 26), FixedX10()).setUnits('dBm/10').setMaxAccess("readwrite")
if mibBuilder.loadTexts: wchCrntPMOPTMaxValue.setStatus('current')
wchCrntPMOPTMaxTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 12, 6, 1, 27), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wchCrntPMOPTMaxTimeStamp.setStatus('current')
wchCrntPMOPTMaxValidity = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 12, 6, 1, 28), PMValidity()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wchCrntPMOPTMaxValidity.setStatus('current')
wchCrntPMOPTMaxInitialize = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 12, 6, 1, 29), InitializeCmd()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wchCrntPMOPTMaxInitialize.setStatus('current')
wchHistPMTable = MibTable((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 12, 7), )
if mibBuilder.loadTexts: wchHistPMTable.setStatus('current')
wchHistPMEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 12, 7, 1), ).setIndexNames((0, "BTI-OL-MIB", "wchHistPMCpTypeIdx"), (0, "BTI-OL-MIB", "wchHistPMShelfIdx"), (0, "BTI-OL-MIB", "wchHistPMSlotIdx"), (0, "BTI-OL-MIB", "wchHistPMPortTypeIdx"), (0, "BTI-OL-MIB", "wchHistPMPortIdx"), (0, "BTI-OL-MIB", "wchHistPMIdx"), (0, "BTI-OL-MIB", "wchHistPMIntervalTypeIdx"), (0, "BTI-OL-MIB", "wchHistPMIntervalIdx"))
if mibBuilder.loadTexts: wchHistPMEntry.setStatus('current')
wchHistPMCpTypeIdx = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 12, 7, 1, 1), CpType())
if mibBuilder.loadTexts: wchHistPMCpTypeIdx.setStatus('current')
wchHistPMShelfIdx = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 12, 7, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(1, 1), ValueRangeConstraint(11, 11), ValueRangeConstraint(21, 21), ValueRangeConstraint(31, 31), )))
if mibBuilder.loadTexts: wchHistPMShelfIdx.setStatus('current')
wchHistPMSlotIdx = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 12, 7, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 20)))
if mibBuilder.loadTexts: wchHistPMSlotIdx.setStatus('current')
wchHistPMPortTypeIdx = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 12, 7, 1, 4), OlPortType())
if mibBuilder.loadTexts: wchHistPMPortTypeIdx.setStatus('current')
wchHistPMPortIdx = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 12, 7, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4)))
if mibBuilder.loadTexts: wchHistPMPortIdx.setStatus('current')
wchHistPMIdx = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 12, 7, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(135, 610)))
if mibBuilder.loadTexts: wchHistPMIdx.setStatus('current')
wchHistPMIntervalTypeIdx = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 12, 7, 1, 7), PMIntervalType())
if mibBuilder.loadTexts: wchHistPMIntervalTypeIdx.setStatus('current')
wchHistPMIntervalIdx = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 12, 7, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 96)))
if mibBuilder.loadTexts: wchHistPMIntervalIdx.setStatus('current')
wchHistPMOPRValue = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 12, 7, 1, 9), FixedX10()).setUnits('dBm/10').setMaxAccess("readonly")
if mibBuilder.loadTexts: wchHistPMOPRValue.setStatus('current')
wchHistPMOPRTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 12, 7, 1, 10), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wchHistPMOPRTimeStamp.setStatus('current')
wchHistPMOPRValidity = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 12, 7, 1, 11), PMValidity()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wchHistPMOPRValidity.setStatus('current')
wchHistPMOPRMinValue = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 12, 7, 1, 12), FixedX10()).setUnits('dBm/10').setMaxAccess("readwrite")
if mibBuilder.loadTexts: wchHistPMOPRMinValue.setStatus('current')
wchHistPMOPRMinTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 12, 7, 1, 13), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wchHistPMOPRMinTimeStamp.setStatus('current')
wchHistPMOPRMinValidity = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 12, 7, 1, 14), PMValidity()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wchHistPMOPRMinValidity.setStatus('current')
wchHistPMOPRMinInitialize = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 12, 7, 1, 15), InitializeCmd()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wchHistPMOPRMinInitialize.setStatus('current')
wchHistPMOPRMaxValue = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 12, 7, 1, 16), FixedX10()).setUnits('dBm/10').setMaxAccess("readwrite")
if mibBuilder.loadTexts: wchHistPMOPRMaxValue.setStatus('current')
wchHistPMOPRMaxTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 12, 7, 1, 17), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wchHistPMOPRMaxTimeStamp.setStatus('current')
wchHistPMOPRMaxValidity = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 12, 7, 1, 18), PMValidity()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wchHistPMOPRMaxValidity.setStatus('current')
wchHistPMOPRMaxInitialize = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 12, 7, 1, 19), InitializeCmd()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wchHistPMOPRMaxInitialize.setStatus('current')
wchHistPMOPTValue = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 12, 7, 1, 20), FixedX10()).setUnits('dBm/10').setMaxAccess("readonly")
if mibBuilder.loadTexts: wchHistPMOPTValue.setStatus('current')
wchHistPMOPTTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 12, 7, 1, 21), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wchHistPMOPTTimeStamp.setStatus('current')
wchHistPMOPTValidity = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 12, 7, 1, 22), PMValidity()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wchHistPMOPTValidity.setStatus('current')
wchHistPMOPTMinValue = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 12, 7, 1, 23), FixedX10()).setUnits('dBm/10').setMaxAccess("readwrite")
if mibBuilder.loadTexts: wchHistPMOPTMinValue.setStatus('current')
wchHistPMOPTMinTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 12, 7, 1, 24), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wchHistPMOPTMinTimeStamp.setStatus('current')
wchHistPMOPTMinValidity = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 12, 7, 1, 25), PMValidity()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wchHistPMOPTMinValidity.setStatus('current')
wchHistPMOPTMinInitialize = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 12, 7, 1, 26), InitializeCmd()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wchHistPMOPTMinInitialize.setStatus('current')
wchHistPMOPTMaxValue = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 12, 7, 1, 27), FixedX10()).setUnits('dBm/10').setMaxAccess("readwrite")
if mibBuilder.loadTexts: wchHistPMOPTMaxValue.setStatus('current')
wchHistPMOPTMaxTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 12, 7, 1, 28), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wchHistPMOPTMaxTimeStamp.setStatus('current')
wchHistPMOPTMaxValidity = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 12, 7, 1, 29), PMValidity()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wchHistPMOPTMaxValidity.setStatus('current')
wchHistPMOPTMaxInitialize = MibTableColumn((1, 3, 6, 1, 4, 1, 18070, 2, 2, 1, 16, 12, 7, 1, 30), InitializeCmd()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wchHistPMOPTMaxInitialize.setStatus('current')
olOSCEvtNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 18070, 2, 2, 2, 1, 33, 1))
olPortEvtNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 18070, 2, 2, 2, 1, 33, 2))
wdmEvtNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 18070, 2, 2, 2, 1, 33, 3))
wchEvtNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 18070, 2, 2, 2, 1, 33, 4))
olOSCCondNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 18070, 2, 2, 2, 2, 28, 1))
olPortCondNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 18070, 2, 2, 2, 2, 28, 2))
wdmCondNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 18070, 2, 2, 2, 2, 28, 3))
wchCondNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 18070, 2, 2, 2, 2, 28, 4))
olOSCStatusChangeEvt = NotificationType((1, 3, 6, 1, 4, 1, 18070, 2, 2, 2, 1, 33, 1, 0, 1)).setObjects(("BTI-OL-MIB", "olOSCCpTypeIdx"), ("BTI-OL-MIB", "olOSCShelfIdx"), ("BTI-OL-MIB", "olOSCSlotIdx"), ("BTI-OL-MIB", "olOSCLineIdx"), ("BTI-OL-MIB", "olOSCOperStatus"), ("BTI-OL-MIB", "olOSCOperStatQlfr"), ("BTI-7000-MIB", "evtDateAndTime"), ("BTI-7000-MIB", "trapSeqNum"), ("BTI-7000-MIB", "evtDescription"), ("BTI-7000-MIB", "evtObjectType"), ("BTI-7000-MIB", "evtCodeType"))
if mibBuilder.loadTexts: olOSCStatusChangeEvt.setStatus('current')
olOSCTcaEvt = NotificationType((1, 3, 6, 1, 4, 1, 18070, 2, 2, 2, 1, 33, 1, 0, 2)).setObjects(("BTI-OL-MIB", "olOSCCpTypeIdx"), ("BTI-OL-MIB", "olOSCShelfIdx"), ("BTI-OL-MIB", "olOSCSlotIdx"), ("BTI-OL-MIB", "olOSCLineIdx"), ("BTI-7000-MIB", "tcaIntervalType"), ("BTI-7000-MIB", "tcaDateAndTime"), ("BTI-7000-MIB", "tcaMontype"), ("BTI-7000-MIB", "tcaValue"), ("BTI-7000-MIB", "tcaThreshold"), ("BTI-7000-MIB", "evtDateAndTime"), ("BTI-7000-MIB", "trapSeqNum"), ("BTI-7000-MIB", "evtDescription"), ("BTI-7000-MIB", "evtObjectType"), ("BTI-7000-MIB", "evtCodeType"))
if mibBuilder.loadTexts: olOSCTcaEvt.setStatus('current')
olPortStatusChangeEvt = NotificationType((1, 3, 6, 1, 4, 1, 18070, 2, 2, 2, 1, 33, 2, 0, 1)).setObjects(("BTI-OL-MIB", "olPortCpTypeIdx"), ("BTI-OL-MIB", "olPortShelfIdx"), ("BTI-OL-MIB", "olPortSlotIdx"), ("BTI-OL-MIB", "olPortTypeIdx"), ("BTI-OL-MIB", "olPortIdx"), ("BTI-OL-MIB", "olPortOperStatus"), ("BTI-OL-MIB", "olPortOperStatQlfr"), ("BTI-7000-MIB", "evtDateAndTime"), ("BTI-7000-MIB", "trapSeqNum"), ("BTI-7000-MIB", "evtDescription"), ("BTI-7000-MIB", "evtObjectType"), ("BTI-7000-MIB", "evtCodeType"))
if mibBuilder.loadTexts: olPortStatusChangeEvt.setStatus('current')
wdmStatusChangeEvt = NotificationType((1, 3, 6, 1, 4, 1, 18070, 2, 2, 2, 1, 33, 3, 0, 1)).setObjects(("BTI-OL-MIB", "wdmCpTypeIdx"), ("BTI-OL-MIB", "wdmShelfIdx"), ("BTI-OL-MIB", "wdmSlotIdx"), ("BTI-OL-MIB", "wdmLineIdx"), ("BTI-OL-MIB", "olPortIdx"), ("BTI-OL-MIB", "wdmOperStatus"), ("BTI-OL-MIB", "wdmOperStatQlfr"), ("BTI-7000-MIB", "evtDateAndTime"), ("BTI-7000-MIB", "trapSeqNum"), ("BTI-7000-MIB", "evtDescription"), ("BTI-7000-MIB", "evtObjectType"), ("BTI-7000-MIB", "evtCodeType"))
if mibBuilder.loadTexts: wdmStatusChangeEvt.setStatus('current')
wchStatusChangeEvt = NotificationType((1, 3, 6, 1, 4, 1, 18070, 2, 2, 2, 1, 33, 4, 0, 1)).setObjects(("BTI-OL-MIB", "wchCpTypeIdx"), ("BTI-OL-MIB", "wchShelfIdx"), ("BTI-OL-MIB", "wchSlotIdx"), ("BTI-OL-MIB", "wchPortTypeIdx"), ("BTI-OL-MIB", "wchPortIdx"), ("BTI-OL-MIB", "wchIdx"), ("BTI-OL-MIB", "wchOperStatus"), ("BTI-OL-MIB", "wchOperStatQlfr"), ("BTI-7000-MIB", "evtDateAndTime"), ("BTI-7000-MIB", "trapSeqNum"), ("BTI-7000-MIB", "evtDescription"), ("BTI-7000-MIB", "evtObjectType"), ("BTI-7000-MIB", "evtCodeType"))
if mibBuilder.loadTexts: wchStatusChangeEvt.setStatus('current')
olOSCLossOfLightRxCond = NotificationType((1, 3, 6, 1, 4, 1, 18070, 2, 2, 2, 2, 28, 1, 0, 1)).setObjects(("BTI-OL-MIB", "olOSCCpTypeIdx"), ("BTI-OL-MIB", "olOSCShelfIdx"), ("BTI-OL-MIB", "olOSCSlotIdx"), ("BTI-OL-MIB", "olOSCLineIdx"), ("BTI-7000-MIB", "condReportType"), ("BTI-7000-MIB", "condDateAndTime"), ("BTI-7000-MIB", "condSeverity"), ("BTI-7000-MIB", "condServiceAffecting"), ("BTI-7000-MIB", "trapSeqNum"), ("BTI-7000-MIB", "condDescription"), ("BTI-7000-MIB", "condObjectType"), ("BTI-7000-MIB", "condCodeType"))
if mibBuilder.loadTexts: olOSCLossOfLightRxCond.setStatus('current')
olOSCLossOfLightRxClear = NotificationType((1, 3, 6, 1, 4, 1, 18070, 2, 2, 2, 2, 28, 1, 0, 2)).setObjects(("BTI-OL-MIB", "olOSCCpTypeIdx"), ("BTI-OL-MIB", "olOSCShelfIdx"), ("BTI-OL-MIB", "olOSCSlotIdx"), ("BTI-OL-MIB", "olOSCLineIdx"), ("BTI-7000-MIB", "condReportType"), ("BTI-7000-MIB", "condDateAndTime"), ("BTI-7000-MIB", "condSeverity"), ("BTI-7000-MIB", "condServiceAffecting"), ("BTI-7000-MIB", "trapSeqNum"), ("BTI-7000-MIB", "condDescription"), ("BTI-7000-MIB", "condObjectType"), ("BTI-7000-MIB", "condCodeType"))
if mibBuilder.loadTexts: olOSCLossOfLightRxClear.setStatus('current')
olOSCLossOfFrameCond = NotificationType((1, 3, 6, 1, 4, 1, 18070, 2, 2, 2, 2, 28, 1, 0, 3)).setObjects(("BTI-OL-MIB", "olOSCCpTypeIdx"), ("BTI-OL-MIB", "olOSCShelfIdx"), ("BTI-OL-MIB", "olOSCSlotIdx"), ("BTI-OL-MIB", "olOSCLineIdx"), ("BTI-7000-MIB", "condReportType"), ("BTI-7000-MIB", "condDateAndTime"), ("BTI-7000-MIB", "condSeverity"), ("BTI-7000-MIB", "condServiceAffecting"), ("BTI-7000-MIB", "trapSeqNum"), ("BTI-7000-MIB", "condDescription"), ("BTI-7000-MIB", "condObjectType"), ("BTI-7000-MIB", "condCodeType"))
if mibBuilder.loadTexts: olOSCLossOfFrameCond.setStatus('current')
olOSCLossOfFrameClear = NotificationType((1, 3, 6, 1, 4, 1, 18070, 2, 2, 2, 2, 28, 1, 0, 4)).setObjects(("BTI-OL-MIB", "olOSCCpTypeIdx"), ("BTI-OL-MIB", "olOSCShelfIdx"), ("BTI-OL-MIB", "olOSCSlotIdx"), ("BTI-OL-MIB", "olOSCLineIdx"), ("BTI-7000-MIB", "condReportType"), ("BTI-7000-MIB", "condDateAndTime"), ("BTI-7000-MIB", "condSeverity"), ("BTI-7000-MIB", "condServiceAffecting"), ("BTI-7000-MIB", "trapSeqNum"), ("BTI-7000-MIB", "condDescription"), ("BTI-7000-MIB", "condObjectType"), ("BTI-7000-MIB", "condCodeType"))
if mibBuilder.loadTexts: olOSCLossOfFrameClear.setStatus('current')
olOSCLossOfLightTxCond = NotificationType((1, 3, 6, 1, 4, 1, 18070, 2, 2, 2, 2, 28, 1, 0, 5)).setObjects(("BTI-OL-MIB", "olOSCCpTypeIdx"), ("BTI-OL-MIB", "olOSCShelfIdx"), ("BTI-OL-MIB", "olOSCSlotIdx"), ("BTI-OL-MIB", "olOSCLineIdx"), ("BTI-7000-MIB", "condReportType"), ("BTI-7000-MIB", "condDateAndTime"), ("BTI-7000-MIB", "condSeverity"), ("BTI-7000-MIB", "condServiceAffecting"), ("BTI-7000-MIB", "trapSeqNum"), ("BTI-7000-MIB", "condDescription"), ("BTI-7000-MIB", "condObjectType"), ("BTI-7000-MIB", "condCodeType"))
if mibBuilder.loadTexts: olOSCLossOfLightTxCond.setStatus('current')
olOSCLossOfLightTxClear = NotificationType((1, 3, 6, 1, 4, 1, 18070, 2, 2, 2, 2, 28, 1, 0, 6)).setObjects(("BTI-OL-MIB", "olOSCCpTypeIdx"), ("BTI-OL-MIB", "olOSCShelfIdx"), ("BTI-OL-MIB", "olOSCSlotIdx"), ("BTI-OL-MIB", "olOSCLineIdx"), ("BTI-7000-MIB", "condReportType"), ("BTI-7000-MIB", "condDateAndTime"), ("BTI-7000-MIB", "condSeverity"), ("BTI-7000-MIB", "condServiceAffecting"), ("BTI-7000-MIB", "trapSeqNum"), ("BTI-7000-MIB", "condDescription"), ("BTI-7000-MIB", "condObjectType"), ("BTI-7000-MIB", "condCodeType"))
if mibBuilder.loadTexts: olOSCLossOfLightTxClear.setStatus('current')
olOSCFarEndIdMismatchCond = NotificationType((1, 3, 6, 1, 4, 1, 18070, 2, 2, 2, 2, 28, 1, 0, 7)).setObjects(("BTI-OL-MIB", "olOSCCpTypeIdx"), ("BTI-OL-MIB", "olOSCShelfIdx"), ("BTI-OL-MIB", "olOSCSlotIdx"), ("BTI-OL-MIB", "olOSCLineIdx"), ("BTI-7000-MIB", "condReportType"), ("BTI-7000-MIB", "condDateAndTime"), ("BTI-7000-MIB", "condSeverity"), ("BTI-7000-MIB", "condServiceAffecting"), ("BTI-7000-MIB", "trapSeqNum"), ("BTI-7000-MIB", "condDescription"), ("BTI-7000-MIB", "condObjectType"), ("BTI-7000-MIB", "condCodeType"))
if mibBuilder.loadTexts: olOSCFarEndIdMismatchCond.setStatus('current')
olOSCFarEndIdMismatchClear = NotificationType((1, 3, 6, 1, 4, 1, 18070, 2, 2, 2, 2, 28, 1, 0, 8)).setObjects(("BTI-OL-MIB", "olOSCCpTypeIdx"), ("BTI-OL-MIB", "olOSCShelfIdx"), ("BTI-OL-MIB", "olOSCSlotIdx"), ("BTI-OL-MIB", "olOSCLineIdx"), ("BTI-7000-MIB", "condReportType"), ("BTI-7000-MIB", "condDateAndTime"), ("BTI-7000-MIB", "condSeverity"), ("BTI-7000-MIB", "condServiceAffecting"), ("BTI-7000-MIB", "trapSeqNum"), ("BTI-7000-MIB", "condDescription"), ("BTI-7000-MIB", "condObjectType"), ("BTI-7000-MIB", "condCodeType"))
if mibBuilder.loadTexts: olOSCFarEndIdMismatchClear.setStatus('current')
olOSCFarEndNodeCnfgInconsistentCond = NotificationType((1, 3, 6, 1, 4, 1, 18070, 2, 2, 2, 2, 28, 1, 0, 9)).setObjects(("BTI-OL-MIB", "olOSCCpTypeIdx"), ("BTI-OL-MIB", "olOSCShelfIdx"), ("BTI-OL-MIB", "olOSCSlotIdx"), ("BTI-OL-MIB", "olOSCLineIdx"), ("BTI-7000-MIB", "condReportType"), ("BTI-7000-MIB", "condDateAndTime"), ("BTI-7000-MIB", "condSeverity"), ("BTI-7000-MIB", "condServiceAffecting"), ("BTI-7000-MIB", "trapSeqNum"), ("BTI-7000-MIB", "condDescription"), ("BTI-7000-MIB", "condObjectType"), ("BTI-7000-MIB", "condCodeType"))
if mibBuilder.loadTexts: olOSCFarEndNodeCnfgInconsistentCond.setStatus('current')
olOSCFarEndNodeCnfgInconsistentClear = NotificationType((1, 3, 6, 1, 4, 1, 18070, 2, 2, 2, 2, 28, 1, 0, 10)).setObjects(("BTI-OL-MIB", "olOSCCpTypeIdx"), ("BTI-OL-MIB", "olOSCShelfIdx"), ("BTI-OL-MIB", "olOSCSlotIdx"), ("BTI-OL-MIB", "olOSCLineIdx"), ("BTI-7000-MIB", "condReportType"), ("BTI-7000-MIB", "condDateAndTime"), ("BTI-7000-MIB", "condSeverity"), ("BTI-7000-MIB", "condServiceAffecting"), ("BTI-7000-MIB", "trapSeqNum"), ("BTI-7000-MIB", "condDescription"), ("BTI-7000-MIB", "condObjectType"), ("BTI-7000-MIB", "condCodeType"))
if mibBuilder.loadTexts: olOSCFarEndNodeCnfgInconsistentClear.setStatus('current')
olOSCSpanContCommCond = NotificationType((1, 3, 6, 1, 4, 1, 18070, 2, 2, 2, 2, 28, 1, 0, 11)).setObjects(("BTI-OL-MIB", "olOSCCpTypeIdx"), ("BTI-OL-MIB", "olOSCShelfIdx"), ("BTI-OL-MIB", "olOSCSlotIdx"), ("BTI-OL-MIB", "olOSCLineIdx"), ("BTI-7000-MIB", "condReportType"), ("BTI-7000-MIB", "condDateAndTime"), ("BTI-7000-MIB", "condSeverity"), ("BTI-7000-MIB", "condServiceAffecting"), ("BTI-7000-MIB", "trapSeqNum"), ("BTI-7000-MIB", "condDescription"), ("BTI-7000-MIB", "condObjectType"), ("BTI-7000-MIB", "condCodeType"))
if mibBuilder.loadTexts: olOSCSpanContCommCond.setStatus('current')
olOSCSpanContCommClear = NotificationType((1, 3, 6, 1, 4, 1, 18070, 2, 2, 2, 2, 28, 1, 0, 12)).setObjects(("BTI-OL-MIB", "olOSCCpTypeIdx"), ("BTI-OL-MIB", "olOSCShelfIdx"), ("BTI-OL-MIB", "olOSCSlotIdx"), ("BTI-OL-MIB", "olOSCLineIdx"), ("BTI-7000-MIB", "condReportType"), ("BTI-7000-MIB", "condDateAndTime"), ("BTI-7000-MIB", "condSeverity"), ("BTI-7000-MIB", "condServiceAffecting"), ("BTI-7000-MIB", "trapSeqNum"), ("BTI-7000-MIB", "condDescription"), ("BTI-7000-MIB", "condObjectType"), ("BTI-7000-MIB", "condCodeType"))
if mibBuilder.loadTexts: olOSCSpanContCommClear.setStatus('current')
olOSCEqlzContCommCond = NotificationType((1, 3, 6, 1, 4, 1, 18070, 2, 2, 2, 2, 28, 1, 0, 13)).setObjects(("BTI-OL-MIB", "olOSCCpTypeIdx"), ("BTI-OL-MIB", "olOSCShelfIdx"), ("BTI-OL-MIB", "olOSCSlotIdx"), ("BTI-OL-MIB", "olOSCLineIdx"), ("BTI-7000-MIB", "condReportType"), ("BTI-7000-MIB", "condDateAndTime"), ("BTI-7000-MIB", "condSeverity"), ("BTI-7000-MIB", "condServiceAffecting"), ("BTI-7000-MIB", "trapSeqNum"), ("BTI-7000-MIB", "condDescription"), ("BTI-7000-MIB", "condObjectType"), ("BTI-7000-MIB", "condCodeType"))
if mibBuilder.loadTexts: olOSCEqlzContCommCond.setStatus('current')
olOSCEqlzContCommClear = NotificationType((1, 3, 6, 1, 4, 1, 18070, 2, 2, 2, 2, 28, 1, 0, 14)).setObjects(("BTI-OL-MIB", "olOSCCpTypeIdx"), ("BTI-OL-MIB", "olOSCShelfIdx"), ("BTI-OL-MIB", "olOSCSlotIdx"), ("BTI-OL-MIB", "olOSCLineIdx"), ("BTI-7000-MIB", "condReportType"), ("BTI-7000-MIB", "condDateAndTime"), ("BTI-7000-MIB", "condSeverity"), ("BTI-7000-MIB", "condServiceAffecting"), ("BTI-7000-MIB", "trapSeqNum"), ("BTI-7000-MIB", "condDescription"), ("BTI-7000-MIB", "condObjectType"), ("BTI-7000-MIB", "condCodeType"))
if mibBuilder.loadTexts: olOSCEqlzContCommClear.setStatus('current')
olOSCOpticalBackReflOutOfSpecCond = NotificationType((1, 3, 6, 1, 4, 1, 18070, 2, 2, 2, 2, 28, 1, 0, 15)).setObjects(("BTI-OL-MIB", "olOSCCpTypeIdx"), ("BTI-OL-MIB", "olOSCShelfIdx"), ("BTI-OL-MIB", "olOSCSlotIdx"), ("BTI-OL-MIB", "olOSCLineIdx"), ("BTI-7000-MIB", "condReportType"), ("BTI-7000-MIB", "condDateAndTime"), ("BTI-7000-MIB", "condSeverity"), ("BTI-7000-MIB", "condServiceAffecting"), ("BTI-7000-MIB", "trapSeqNum"), ("BTI-7000-MIB", "condDescription"), ("BTI-7000-MIB", "condObjectType"), ("BTI-7000-MIB", "condCodeType"))
if mibBuilder.loadTexts: olOSCOpticalBackReflOutOfSpecCond.setStatus('current')
olOSCOpticalBackReflOutOfSpecClear = NotificationType((1, 3, 6, 1, 4, 1, 18070, 2, 2, 2, 2, 28, 1, 0, 16)).setObjects(("BTI-OL-MIB", "olOSCCpTypeIdx"), ("BTI-OL-MIB", "olOSCShelfIdx"), ("BTI-OL-MIB", "olOSCSlotIdx"), ("BTI-OL-MIB", "olOSCLineIdx"), ("BTI-7000-MIB", "condReportType"), ("BTI-7000-MIB", "condDateAndTime"), ("BTI-7000-MIB", "condSeverity"), ("BTI-7000-MIB", "condServiceAffecting"), ("BTI-7000-MIB", "trapSeqNum"), ("BTI-7000-MIB", "condDescription"), ("BTI-7000-MIB", "condObjectType"), ("BTI-7000-MIB", "condCodeType"))
if mibBuilder.loadTexts: olOSCOpticalBackReflOutOfSpecClear.setStatus('current')
olOSCOpticalBackReflHighThCond = NotificationType((1, 3, 6, 1, 4, 1, 18070, 2, 2, 2, 2, 28, 1, 0, 17)).setObjects(("BTI-OL-MIB", "olOSCCpTypeIdx"), ("BTI-OL-MIB", "olOSCShelfIdx"), ("BTI-OL-MIB", "olOSCSlotIdx"), ("BTI-OL-MIB", "olOSCLineIdx"), ("BTI-7000-MIB", "condReportType"), ("BTI-7000-MIB", "condDateAndTime"), ("BTI-7000-MIB", "condSeverity"), ("BTI-7000-MIB", "condServiceAffecting"), ("BTI-7000-MIB", "trapSeqNum"), ("BTI-7000-MIB", "condDescription"), ("BTI-7000-MIB", "condObjectType"), ("BTI-7000-MIB", "condCodeType"))
if mibBuilder.loadTexts: olOSCOpticalBackReflHighThCond.setStatus('current')
olOSCOpticalBackReflHighThClear = NotificationType((1, 3, 6, 1, 4, 1, 18070, 2, 2, 2, 2, 28, 1, 0, 18)).setObjects(("BTI-OL-MIB", "olOSCCpTypeIdx"), ("BTI-OL-MIB", "olOSCShelfIdx"), ("BTI-OL-MIB", "olOSCSlotIdx"), ("BTI-OL-MIB", "olOSCLineIdx"), ("BTI-7000-MIB", "condReportType"), ("BTI-7000-MIB", "condDateAndTime"), ("BTI-7000-MIB", "condSeverity"), ("BTI-7000-MIB", "condServiceAffecting"), ("BTI-7000-MIB", "trapSeqNum"), ("BTI-7000-MIB", "condDescription"), ("BTI-7000-MIB", "condObjectType"), ("BTI-7000-MIB", "condCodeType"))
if mibBuilder.loadTexts: olOSCOpticalBackReflHighThClear.setStatus('current')
olPortPowerOutOfSpecRxCond = NotificationType((1, 3, 6, 1, 4, 1, 18070, 2, 2, 2, 2, 28, 2, 0, 1)).setObjects(("BTI-OL-MIB", "olPortCpTypeIdx"), ("BTI-OL-MIB", "olPortShelfIdx"), ("BTI-OL-MIB", "olPortSlotIdx"), ("BTI-OL-MIB", "olPortTypeIdx"), ("BTI-OL-MIB", "olPortIdx"), ("BTI-7000-MIB", "condReportType"), ("BTI-7000-MIB", "condDateAndTime"), ("BTI-7000-MIB", "condSeverity"), ("BTI-7000-MIB", "condServiceAffecting"), ("BTI-7000-MIB", "trapSeqNum"), ("BTI-7000-MIB", "condDescription"), ("BTI-7000-MIB", "condObjectType"), ("BTI-7000-MIB", "condCodeType"))
if mibBuilder.loadTexts: olPortPowerOutOfSpecRxCond.setStatus('current')
olPortPowerOutOfSpecRxClear = NotificationType((1, 3, 6, 1, 4, 1, 18070, 2, 2, 2, 2, 28, 2, 0, 2)).setObjects(("BTI-OL-MIB", "olPortCpTypeIdx"), ("BTI-OL-MIB", "olPortShelfIdx"), ("BTI-OL-MIB", "olPortSlotIdx"), ("BTI-OL-MIB", "olPortTypeIdx"), ("BTI-OL-MIB", "olPortIdx"), ("BTI-7000-MIB", "condReportType"), ("BTI-7000-MIB", "condDateAndTime"), ("BTI-7000-MIB", "condSeverity"), ("BTI-7000-MIB", "condServiceAffecting"), ("BTI-7000-MIB", "trapSeqNum"), ("BTI-7000-MIB", "condDescription"), ("BTI-7000-MIB", "condObjectType"), ("BTI-7000-MIB", "condCodeType"))
if mibBuilder.loadTexts: olPortPowerOutOfSpecRxClear.setStatus('current')
olPortLossOfLightRxCond = NotificationType((1, 3, 6, 1, 4, 1, 18070, 2, 2, 2, 2, 28, 2, 0, 3)).setObjects(("BTI-OL-MIB", "olPortCpTypeIdx"), ("BTI-OL-MIB", "olPortShelfIdx"), ("BTI-OL-MIB", "olPortSlotIdx"), ("BTI-OL-MIB", "olPortTypeIdx"), ("BTI-OL-MIB", "olPortIdx"), ("BTI-7000-MIB", "condReportType"), ("BTI-7000-MIB", "condDateAndTime"), ("BTI-7000-MIB", "condSeverity"), ("BTI-7000-MIB", "condServiceAffecting"), ("BTI-7000-MIB", "trapSeqNum"), ("BTI-7000-MIB", "condDescription"), ("BTI-7000-MIB", "condObjectType"), ("BTI-7000-MIB", "condCodeType"))
if mibBuilder.loadTexts: olPortLossOfLightRxCond.setStatus('current')
olPortLossOfLightRxClear = NotificationType((1, 3, 6, 1, 4, 1, 18070, 2, 2, 2, 2, 28, 2, 0, 4)).setObjects(("BTI-OL-MIB", "olPortCpTypeIdx"), ("BTI-OL-MIB", "olPortShelfIdx"), ("BTI-OL-MIB", "olPortSlotIdx"), ("BTI-OL-MIB", "olPortTypeIdx"), ("BTI-OL-MIB", "olPortIdx"), ("BTI-7000-MIB", "condReportType"), ("BTI-7000-MIB", "condDateAndTime"), ("BTI-7000-MIB", "condSeverity"), ("BTI-7000-MIB", "condServiceAffecting"), ("BTI-7000-MIB", "trapSeqNum"), ("BTI-7000-MIB", "condDescription"), ("BTI-7000-MIB", "condObjectType"), ("BTI-7000-MIB", "condCodeType"))
if mibBuilder.loadTexts: olPortLossOfLightRxClear.setStatus('current')
olPortLossRxOutOfSpecCond = NotificationType((1, 3, 6, 1, 4, 1, 18070, 2, 2, 2, 2, 28, 2, 0, 5)).setObjects(("BTI-OL-MIB", "olPortCpTypeIdx"), ("BTI-OL-MIB", "olPortShelfIdx"), ("BTI-OL-MIB", "olPortSlotIdx"), ("BTI-OL-MIB", "olPortTypeIdx"), ("BTI-OL-MIB", "olPortIdx"), ("BTI-7000-MIB", "condReportType"), ("BTI-7000-MIB", "condDateAndTime"), ("BTI-7000-MIB", "condSeverity"), ("BTI-7000-MIB", "condServiceAffecting"), ("BTI-7000-MIB", "trapSeqNum"), ("BTI-7000-MIB", "condDescription"), ("BTI-7000-MIB", "condObjectType"), ("BTI-7000-MIB", "condCodeType"))
if mibBuilder.loadTexts: olPortLossRxOutOfSpecCond.setStatus('current')
olPortLossRxOutOfSpecClear = NotificationType((1, 3, 6, 1, 4, 1, 18070, 2, 2, 2, 2, 28, 2, 0, 6)).setObjects(("BTI-OL-MIB", "olPortCpTypeIdx"), ("BTI-OL-MIB", "olPortShelfIdx"), ("BTI-OL-MIB", "olPortSlotIdx"), ("BTI-OL-MIB", "olPortTypeIdx"), ("BTI-OL-MIB", "olPortIdx"), ("BTI-7000-MIB", "condReportType"), ("BTI-7000-MIB", "condDateAndTime"), ("BTI-7000-MIB", "condSeverity"), ("BTI-7000-MIB", "condServiceAffecting"), ("BTI-7000-MIB", "trapSeqNum"), ("BTI-7000-MIB", "condDescription"), ("BTI-7000-MIB", "condObjectType"), ("BTI-7000-MIB", "condCodeType"))
if mibBuilder.loadTexts: olPortLossRxOutOfSpecClear.setStatus('current')
olPortLossRxHighThCond = NotificationType((1, 3, 6, 1, 4, 1, 18070, 2, 2, 2, 2, 28, 2, 0, 7)).setObjects(("BTI-OL-MIB", "olPortCpTypeIdx"), ("BTI-OL-MIB", "olPortShelfIdx"), ("BTI-OL-MIB", "olPortSlotIdx"), ("BTI-OL-MIB", "olPortTypeIdx"), ("BTI-OL-MIB", "olPortIdx"), ("BTI-7000-MIB", "condReportType"), ("BTI-7000-MIB", "condDateAndTime"), ("BTI-7000-MIB", "condSeverity"), ("BTI-7000-MIB", "condServiceAffecting"), ("BTI-7000-MIB", "trapSeqNum"), ("BTI-7000-MIB", "condDescription"), ("BTI-7000-MIB", "condObjectType"), ("BTI-7000-MIB", "condCodeType"))
if mibBuilder.loadTexts: olPortLossRxHighThCond.setStatus('current')
olPortLossRxHighThClear = NotificationType((1, 3, 6, 1, 4, 1, 18070, 2, 2, 2, 2, 28, 2, 0, 8)).setObjects(("BTI-OL-MIB", "olPortCpTypeIdx"), ("BTI-OL-MIB", "olPortShelfIdx"), ("BTI-OL-MIB", "olPortSlotIdx"), ("BTI-OL-MIB", "olPortTypeIdx"), ("BTI-OL-MIB", "olPortIdx"), ("BTI-7000-MIB", "condReportType"), ("BTI-7000-MIB", "condDateAndTime"), ("BTI-7000-MIB", "condSeverity"), ("BTI-7000-MIB", "condServiceAffecting"), ("BTI-7000-MIB", "trapSeqNum"), ("BTI-7000-MIB", "condDescription"), ("BTI-7000-MIB", "condObjectType"), ("BTI-7000-MIB", "condCodeType"))
if mibBuilder.loadTexts: olPortLossRxHighThClear.setStatus('current')
olPortAPSDCond = NotificationType((1, 3, 6, 1, 4, 1, 18070, 2, 2, 2, 2, 28, 2, 0, 9)).setObjects(("BTI-OL-MIB", "olPortCpTypeIdx"), ("BTI-OL-MIB", "olPortShelfIdx"), ("BTI-OL-MIB", "olPortSlotIdx"), ("BTI-OL-MIB", "olPortTypeIdx"), ("BTI-OL-MIB", "olPortIdx"), ("BTI-7000-MIB", "condReportType"), ("BTI-7000-MIB", "condDateAndTime"), ("BTI-7000-MIB", "condSeverity"), ("BTI-7000-MIB", "condServiceAffecting"), ("BTI-7000-MIB", "trapSeqNum"), ("BTI-7000-MIB", "condDescription"), ("BTI-7000-MIB", "condObjectType"), ("BTI-7000-MIB", "condCodeType"))
if mibBuilder.loadTexts: olPortAPSDCond.setStatus('current')
olPortAPSDClear = NotificationType((1, 3, 6, 1, 4, 1, 18070, 2, 2, 2, 2, 28, 2, 0, 10)).setObjects(("BTI-OL-MIB", "olPortCpTypeIdx"), ("BTI-OL-MIB", "olPortShelfIdx"), ("BTI-OL-MIB", "olPortSlotIdx"), ("BTI-OL-MIB", "olPortTypeIdx"), ("BTI-OL-MIB", "olPortIdx"), ("BTI-7000-MIB", "condReportType"), ("BTI-7000-MIB", "condDateAndTime"), ("BTI-7000-MIB", "condSeverity"), ("BTI-7000-MIB", "condServiceAffecting"), ("BTI-7000-MIB", "trapSeqNum"), ("BTI-7000-MIB", "condDescription"), ("BTI-7000-MIB", "condObjectType"), ("BTI-7000-MIB", "condCodeType"))
if mibBuilder.loadTexts: olPortAPSDClear.setStatus('current')
olPortPayloadMissingIndCond = NotificationType((1, 3, 6, 1, 4, 1, 18070, 2, 2, 2, 2, 28, 2, 0, 11)).setObjects(("BTI-OL-MIB", "olPortCpTypeIdx"), ("BTI-OL-MIB", "olPortShelfIdx"), ("BTI-OL-MIB", "olPortSlotIdx"), ("BTI-OL-MIB", "olPortTypeIdx"), ("BTI-OL-MIB", "olPortIdx"), ("BTI-7000-MIB", "condReportType"), ("BTI-7000-MIB", "condDateAndTime"), ("BTI-7000-MIB", "condSeverity"), ("BTI-7000-MIB", "condServiceAffecting"), ("BTI-7000-MIB", "trapSeqNum"), ("BTI-7000-MIB", "condDescription"), ("BTI-7000-MIB", "condObjectType"), ("BTI-7000-MIB", "condCodeType"))
if mibBuilder.loadTexts: olPortPayloadMissingIndCond.setStatus('current')
olPortPayloadMissingIndClear = NotificationType((1, 3, 6, 1, 4, 1, 18070, 2, 2, 2, 2, 28, 2, 0, 12)).setObjects(("BTI-OL-MIB", "olPortCpTypeIdx"), ("BTI-OL-MIB", "olPortShelfIdx"), ("BTI-OL-MIB", "olPortSlotIdx"), ("BTI-OL-MIB", "olPortTypeIdx"), ("BTI-OL-MIB", "olPortIdx"), ("BTI-7000-MIB", "condReportType"), ("BTI-7000-MIB", "condDateAndTime"), ("BTI-7000-MIB", "condSeverity"), ("BTI-7000-MIB", "condServiceAffecting"), ("BTI-7000-MIB", "trapSeqNum"), ("BTI-7000-MIB", "condDescription"), ("BTI-7000-MIB", "condObjectType"), ("BTI-7000-MIB", "condCodeType"))
if mibBuilder.loadTexts: olPortPayloadMissingIndClear.setStatus('current')
olPortBackwardDefectIndCond = NotificationType((1, 3, 6, 1, 4, 1, 18070, 2, 2, 2, 2, 28, 2, 0, 13)).setObjects(("BTI-OL-MIB", "olPortCpTypeIdx"), ("BTI-OL-MIB", "olPortShelfIdx"), ("BTI-OL-MIB", "olPortSlotIdx"), ("BTI-OL-MIB", "olPortTypeIdx"), ("BTI-OL-MIB", "olPortIdx"), ("BTI-7000-MIB", "condReportType"), ("BTI-7000-MIB", "condDateAndTime"), ("BTI-7000-MIB", "condSeverity"), ("BTI-7000-MIB", "condServiceAffecting"), ("BTI-7000-MIB", "trapSeqNum"), ("BTI-7000-MIB", "condDescription"), ("BTI-7000-MIB", "condObjectType"), ("BTI-7000-MIB", "condCodeType"))
if mibBuilder.loadTexts: olPortBackwardDefectIndCond.setStatus('current')
olPortBackwardDefectIndClear = NotificationType((1, 3, 6, 1, 4, 1, 18070, 2, 2, 2, 2, 28, 2, 0, 14)).setObjects(("BTI-OL-MIB", "olPortCpTypeIdx"), ("BTI-OL-MIB", "olPortShelfIdx"), ("BTI-OL-MIB", "olPortSlotIdx"), ("BTI-OL-MIB", "olPortTypeIdx"), ("BTI-OL-MIB", "olPortIdx"), ("BTI-7000-MIB", "condReportType"), ("BTI-7000-MIB", "condDateAndTime"), ("BTI-7000-MIB", "condSeverity"), ("BTI-7000-MIB", "condServiceAffecting"), ("BTI-7000-MIB", "trapSeqNum"), ("BTI-7000-MIB", "condDescription"), ("BTI-7000-MIB", "condObjectType"), ("BTI-7000-MIB", "condCodeType"))
if mibBuilder.loadTexts: olPortBackwardDefectIndClear.setStatus('current')
olPortChannelCountDeficiencyCond = NotificationType((1, 3, 6, 1, 4, 1, 18070, 2, 2, 2, 2, 28, 2, 0, 15)).setObjects(("BTI-OL-MIB", "olPortCpTypeIdx"), ("BTI-OL-MIB", "olPortShelfIdx"), ("BTI-OL-MIB", "olPortSlotIdx"), ("BTI-OL-MIB", "olPortTypeIdx"), ("BTI-OL-MIB", "olPortIdx"), ("BTI-7000-MIB", "condReportType"), ("BTI-7000-MIB", "condDateAndTime"), ("BTI-7000-MIB", "condSeverity"), ("BTI-7000-MIB", "condServiceAffecting"), ("BTI-7000-MIB", "trapSeqNum"), ("BTI-7000-MIB", "condDescription"), ("BTI-7000-MIB", "condObjectType"), ("BTI-7000-MIB", "condCodeType"))
if mibBuilder.loadTexts: olPortChannelCountDeficiencyCond.setStatus('current')
olPortChannelCountDeficiencyClear = NotificationType((1, 3, 6, 1, 4, 1, 18070, 2, 2, 2, 2, 28, 2, 0, 16)).setObjects(("BTI-OL-MIB", "olPortCpTypeIdx"), ("BTI-OL-MIB", "olPortShelfIdx"), ("BTI-OL-MIB", "olPortSlotIdx"), ("BTI-OL-MIB", "olPortTypeIdx"), ("BTI-OL-MIB", "olPortIdx"), ("BTI-7000-MIB", "condReportType"), ("BTI-7000-MIB", "condDateAndTime"), ("BTI-7000-MIB", "condSeverity"), ("BTI-7000-MIB", "condServiceAffecting"), ("BTI-7000-MIB", "trapSeqNum"), ("BTI-7000-MIB", "condDescription"), ("BTI-7000-MIB", "condObjectType"), ("BTI-7000-MIB", "condCodeType"))
if mibBuilder.loadTexts: olPortChannelCountDeficiencyClear.setStatus('current')
olPortConnectionMismatchCond = NotificationType((1, 3, 6, 1, 4, 1, 18070, 2, 2, 2, 2, 28, 2, 0, 17)).setObjects(("BTI-OL-MIB", "olPortCpTypeIdx"), ("BTI-OL-MIB", "olPortShelfIdx"), ("BTI-OL-MIB", "olPortSlotIdx"), ("BTI-OL-MIB", "olPortTypeIdx"), ("BTI-OL-MIB", "olPortIdx"), ("BTI-OL-MIB", "olPortExpCnxDegree"), ("BTI-OL-MIB", "olPortActCnxDegree"), ("BTI-7000-MIB", "condReportType"), ("BTI-7000-MIB", "condDateAndTime"), ("BTI-7000-MIB", "condSeverity"), ("BTI-7000-MIB", "condServiceAffecting"), ("BTI-7000-MIB", "trapSeqNum"), ("BTI-7000-MIB", "condDescription"), ("BTI-7000-MIB", "condObjectType"), ("BTI-7000-MIB", "condCodeType"))
if mibBuilder.loadTexts: olPortConnectionMismatchCond.setStatus('current')
olPortConnectionMismatchClear = NotificationType((1, 3, 6, 1, 4, 1, 18070, 2, 2, 2, 2, 28, 2, 0, 18)).setObjects(("BTI-OL-MIB", "olPortCpTypeIdx"), ("BTI-OL-MIB", "olPortShelfIdx"), ("BTI-OL-MIB", "olPortSlotIdx"), ("BTI-OL-MIB", "olPortTypeIdx"), ("BTI-OL-MIB", "olPortIdx"), ("BTI-7000-MIB", "condReportType"), ("BTI-7000-MIB", "condDateAndTime"), ("BTI-7000-MIB", "condSeverity"), ("BTI-7000-MIB", "condServiceAffecting"), ("BTI-7000-MIB", "trapSeqNum"), ("BTI-7000-MIB", "condDescription"), ("BTI-7000-MIB", "condObjectType"), ("BTI-7000-MIB", "condCodeType"))
if mibBuilder.loadTexts: olPortConnectionMismatchClear.setStatus('current')
olPortConnectionValidationTimeoutCond = NotificationType((1, 3, 6, 1, 4, 1, 18070, 2, 2, 2, 2, 28, 2, 0, 19)).setObjects(("BTI-OL-MIB", "olPortCpTypeIdx"), ("BTI-OL-MIB", "olPortShelfIdx"), ("BTI-OL-MIB", "olPortSlotIdx"), ("BTI-OL-MIB", "olPortTypeIdx"), ("BTI-OL-MIB", "olPortIdx"), ("BTI-7000-MIB", "condReportType"), ("BTI-7000-MIB", "condDateAndTime"), ("BTI-7000-MIB", "condSeverity"), ("BTI-7000-MIB", "condServiceAffecting"), ("BTI-7000-MIB", "trapSeqNum"), ("BTI-7000-MIB", "condDescription"), ("BTI-7000-MIB", "condObjectType"), ("BTI-7000-MIB", "condCodeType"))
if mibBuilder.loadTexts: olPortConnectionValidationTimeoutCond.setStatus('current')
olPortConnectionValidationTimeoutClear = NotificationType((1, 3, 6, 1, 4, 1, 18070, 2, 2, 2, 2, 28, 2, 0, 20)).setObjects(("BTI-OL-MIB", "olPortCpTypeIdx"), ("BTI-OL-MIB", "olPortShelfIdx"), ("BTI-OL-MIB", "olPortSlotIdx"), ("BTI-OL-MIB", "olPortTypeIdx"), ("BTI-OL-MIB", "olPortIdx"), ("BTI-7000-MIB", "condReportType"), ("BTI-7000-MIB", "condDateAndTime"), ("BTI-7000-MIB", "condSeverity"), ("BTI-7000-MIB", "condServiceAffecting"), ("BTI-7000-MIB", "trapSeqNum"), ("BTI-7000-MIB", "condDescription"), ("BTI-7000-MIB", "condObjectType"), ("BTI-7000-MIB", "condCodeType"))
if mibBuilder.loadTexts: olPortConnectionValidationTimeoutClear.setStatus('current')
wdmInvalidPreAmpOperCnfgCond = NotificationType((1, 3, 6, 1, 4, 1, 18070, 2, 2, 2, 2, 28, 3, 0, 1)).setObjects(("BTI-OL-MIB", "wdmCpTypeIdx"), ("BTI-OL-MIB", "wdmShelfIdx"), ("BTI-OL-MIB", "wdmSlotIdx"), ("BTI-OL-MIB", "wdmLineIdx"), ("BTI-7000-MIB", "condReportType"), ("BTI-7000-MIB", "condDateAndTime"), ("BTI-7000-MIB", "condSeverity"), ("BTI-7000-MIB", "condServiceAffecting"), ("BTI-7000-MIB", "trapSeqNum"), ("BTI-7000-MIB", "condDescription"), ("BTI-7000-MIB", "condObjectType"), ("BTI-7000-MIB", "condCodeType"))
if mibBuilder.loadTexts: wdmInvalidPreAmpOperCnfgCond.setStatus('current')
wdmInvalidPreAmpOperCnfgClear = NotificationType((1, 3, 6, 1, 4, 1, 18070, 2, 2, 2, 2, 28, 3, 0, 2)).setObjects(("BTI-OL-MIB", "wdmCpTypeIdx"), ("BTI-OL-MIB", "wdmShelfIdx"), ("BTI-OL-MIB", "wdmSlotIdx"), ("BTI-OL-MIB", "wdmLineIdx"), ("BTI-7000-MIB", "condReportType"), ("BTI-7000-MIB", "condDateAndTime"), ("BTI-7000-MIB", "condSeverity"), ("BTI-7000-MIB", "condServiceAffecting"), ("BTI-7000-MIB", "trapSeqNum"), ("BTI-7000-MIB", "condDescription"), ("BTI-7000-MIB", "condObjectType"), ("BTI-7000-MIB", "condCodeType"))
if mibBuilder.loadTexts: wdmInvalidPreAmpOperCnfgClear.setStatus('current')
wdmInvalidMidAmpOperCnfgCond = NotificationType((1, 3, 6, 1, 4, 1, 18070, 2, 2, 2, 2, 28, 3, 0, 3)).setObjects(("BTI-OL-MIB", "wdmCpTypeIdx"), ("BTI-OL-MIB", "wdmShelfIdx"), ("BTI-OL-MIB", "wdmSlotIdx"), ("BTI-OL-MIB", "wdmLineIdx"), ("BTI-7000-MIB", "condReportType"), ("BTI-7000-MIB", "condDateAndTime"), ("BTI-7000-MIB", "condSeverity"), ("BTI-7000-MIB", "condServiceAffecting"), ("BTI-7000-MIB", "trapSeqNum"), ("BTI-7000-MIB", "condDescription"), ("BTI-7000-MIB", "condObjectType"), ("BTI-7000-MIB", "condCodeType"))
if mibBuilder.loadTexts: wdmInvalidMidAmpOperCnfgCond.setStatus('current')
wdmInvalidMidAmpOperCnfgClear = NotificationType((1, 3, 6, 1, 4, 1, 18070, 2, 2, 2, 2, 28, 3, 0, 4)).setObjects(("BTI-OL-MIB", "wdmCpTypeIdx"), ("BTI-OL-MIB", "wdmShelfIdx"), ("BTI-OL-MIB", "wdmSlotIdx"), ("BTI-OL-MIB", "wdmLineIdx"), ("BTI-7000-MIB", "condReportType"), ("BTI-7000-MIB", "condDateAndTime"), ("BTI-7000-MIB", "condSeverity"), ("BTI-7000-MIB", "condServiceAffecting"), ("BTI-7000-MIB", "trapSeqNum"), ("BTI-7000-MIB", "condDescription"), ("BTI-7000-MIB", "condObjectType"), ("BTI-7000-MIB", "condCodeType"))
if mibBuilder.loadTexts: wdmInvalidMidAmpOperCnfgClear.setStatus('current')
wdmInvalidBoostAmpOperCnfgCond = NotificationType((1, 3, 6, 1, 4, 1, 18070, 2, 2, 2, 2, 28, 3, 0, 5)).setObjects(("BTI-OL-MIB", "wdmCpTypeIdx"), ("BTI-OL-MIB", "wdmShelfIdx"), ("BTI-OL-MIB", "wdmSlotIdx"), ("BTI-OL-MIB", "wdmLineIdx"), ("BTI-7000-MIB", "condReportType"), ("BTI-7000-MIB", "condDateAndTime"), ("BTI-7000-MIB", "condSeverity"), ("BTI-7000-MIB", "condServiceAffecting"), ("BTI-7000-MIB", "trapSeqNum"), ("BTI-7000-MIB", "condDescription"), ("BTI-7000-MIB", "condObjectType"), ("BTI-7000-MIB", "condCodeType"))
if mibBuilder.loadTexts: wdmInvalidBoostAmpOperCnfgCond.setStatus('current')
wdmInvalidBoostAmpOperCnfgClear = NotificationType((1, 3, 6, 1, 4, 1, 18070, 2, 2, 2, 2, 28, 3, 0, 6)).setObjects(("BTI-OL-MIB", "wdmCpTypeIdx"), ("BTI-OL-MIB", "wdmShelfIdx"), ("BTI-OL-MIB", "wdmSlotIdx"), ("BTI-OL-MIB", "wdmLineIdx"), ("BTI-7000-MIB", "condReportType"), ("BTI-7000-MIB", "condDateAndTime"), ("BTI-7000-MIB", "condSeverity"), ("BTI-7000-MIB", "condServiceAffecting"), ("BTI-7000-MIB", "trapSeqNum"), ("BTI-7000-MIB", "condDescription"), ("BTI-7000-MIB", "condObjectType"), ("BTI-7000-MIB", "condCodeType"))
if mibBuilder.loadTexts: wdmInvalidBoostAmpOperCnfgClear.setStatus('current')
wchPowerOutOfSpecRxCond = NotificationType((1, 3, 6, 1, 4, 1, 18070, 2, 2, 2, 2, 28, 4, 0, 1)).setObjects(("BTI-OL-MIB", "wchCpTypeIdx"), ("BTI-OL-MIB", "wchShelfIdx"), ("BTI-OL-MIB", "wchSlotIdx"), ("BTI-OL-MIB", "wchPortTypeIdx"), ("BTI-OL-MIB", "wchPortIdx"), ("BTI-OL-MIB", "wchIdx"), ("BTI-7000-MIB", "condReportType"), ("BTI-7000-MIB", "condDateAndTime"), ("BTI-7000-MIB", "condSeverity"), ("BTI-7000-MIB", "condServiceAffecting"), ("BTI-7000-MIB", "trapSeqNum"), ("BTI-7000-MIB", "condDescription"), ("BTI-7000-MIB", "condObjectType"), ("BTI-7000-MIB", "condCodeType"))
if mibBuilder.loadTexts: wchPowerOutOfSpecRxCond.setStatus('deprecated')
wchPowerOutOfSpecRxClear = NotificationType((1, 3, 6, 1, 4, 1, 18070, 2, 2, 2, 2, 28, 4, 0, 2)).setObjects(("BTI-OL-MIB", "wchCpTypeIdx"), ("BTI-OL-MIB", "wchShelfIdx"), ("BTI-OL-MIB", "wchSlotIdx"), ("BTI-OL-MIB", "wchPortTypeIdx"), ("BTI-OL-MIB", "wchPortIdx"), ("BTI-OL-MIB", "wchIdx"), ("BTI-7000-MIB", "condReportType"), ("BTI-7000-MIB", "condDateAndTime"), ("BTI-7000-MIB", "condSeverity"), ("BTI-7000-MIB", "condServiceAffecting"), ("BTI-7000-MIB", "trapSeqNum"), ("BTI-7000-MIB", "condDescription"), ("BTI-7000-MIB", "condObjectType"), ("BTI-7000-MIB", "condCodeType"))
if mibBuilder.loadTexts: wchPowerOutOfSpecRxClear.setStatus('deprecated')
wchLossOfLightRxCond = NotificationType((1, 3, 6, 1, 4, 1, 18070, 2, 2, 2, 2, 28, 4, 0, 3)).setObjects(("BTI-OL-MIB", "wchCpTypeIdx"), ("BTI-OL-MIB", "wchShelfIdx"), ("BTI-OL-MIB", "wchSlotIdx"), ("BTI-OL-MIB", "wchPortTypeIdx"), ("BTI-OL-MIB", "wchPortIdx"), ("BTI-OL-MIB", "wchIdx"), ("BTI-7000-MIB", "condReportType"), ("BTI-7000-MIB", "condDateAndTime"), ("BTI-7000-MIB", "condSeverity"), ("BTI-7000-MIB", "condServiceAffecting"), ("BTI-7000-MIB", "trapSeqNum"), ("BTI-7000-MIB", "condDescription"), ("BTI-7000-MIB", "condObjectType"), ("BTI-7000-MIB", "condCodeType"))
if mibBuilder.loadTexts: wchLossOfLightRxCond.setStatus('current')
wchLossOfLightRxClear = NotificationType((1, 3, 6, 1, 4, 1, 18070, 2, 2, 2, 2, 28, 4, 0, 4)).setObjects(("BTI-OL-MIB", "wchCpTypeIdx"), ("BTI-OL-MIB", "wchShelfIdx"), ("BTI-OL-MIB", "wchSlotIdx"), ("BTI-OL-MIB", "wchPortTypeIdx"), ("BTI-OL-MIB", "wchPortIdx"), ("BTI-OL-MIB", "wchIdx"), ("BTI-7000-MIB", "condReportType"), ("BTI-7000-MIB", "condDateAndTime"), ("BTI-7000-MIB", "condSeverity"), ("BTI-7000-MIB", "condServiceAffecting"), ("BTI-7000-MIB", "trapSeqNum"), ("BTI-7000-MIB", "condDescription"), ("BTI-7000-MIB", "condObjectType"), ("BTI-7000-MIB", "condCodeType"))
if mibBuilder.loadTexts: wchLossOfLightRxClear.setStatus('current')
wchPowerOutOfSpecTxCond = NotificationType((1, 3, 6, 1, 4, 1, 18070, 2, 2, 2, 2, 28, 4, 0, 5)).setObjects(("BTI-OL-MIB", "wchCpTypeIdx"), ("BTI-OL-MIB", "wchShelfIdx"), ("BTI-OL-MIB", "wchSlotIdx"), ("BTI-OL-MIB", "wchPortTypeIdx"), ("BTI-OL-MIB", "wchPortIdx"), ("BTI-OL-MIB", "wchIdx"), ("BTI-7000-MIB", "condReportType"), ("BTI-7000-MIB", "condDateAndTime"), ("BTI-7000-MIB", "condSeverity"), ("BTI-7000-MIB", "condServiceAffecting"), ("BTI-7000-MIB", "trapSeqNum"), ("BTI-7000-MIB", "condDescription"), ("BTI-7000-MIB", "condObjectType"), ("BTI-7000-MIB", "condCodeType"))
if mibBuilder.loadTexts: wchPowerOutOfSpecTxCond.setStatus('current')
wchPowerOutOfSpecTxClear = NotificationType((1, 3, 6, 1, 4, 1, 18070, 2, 2, 2, 2, 28, 4, 0, 6)).setObjects(("BTI-OL-MIB", "wchCpTypeIdx"), ("BTI-OL-MIB", "wchShelfIdx"), ("BTI-OL-MIB", "wchSlotIdx"), ("BTI-OL-MIB", "wchPortTypeIdx"), ("BTI-OL-MIB", "wchPortIdx"), ("BTI-OL-MIB", "wchIdx"), ("BTI-7000-MIB", "condReportType"), ("BTI-7000-MIB", "condDateAndTime"), ("BTI-7000-MIB", "condSeverity"), ("BTI-7000-MIB", "condServiceAffecting"), ("BTI-7000-MIB", "trapSeqNum"), ("BTI-7000-MIB", "condDescription"), ("BTI-7000-MIB", "condObjectType"), ("BTI-7000-MIB", "condCodeType"))
if mibBuilder.loadTexts: wchPowerOutOfSpecTxClear.setStatus('current')
wchLossOfLightTxCond = NotificationType((1, 3, 6, 1, 4, 1, 18070, 2, 2, 2, 2, 28, 4, 0, 7)).setObjects(("BTI-OL-MIB", "wchCpTypeIdx"), ("BTI-OL-MIB", "wchShelfIdx"), ("BTI-OL-MIB", "wchSlotIdx"), ("BTI-OL-MIB", "wchPortTypeIdx"), ("BTI-OL-MIB", "wchPortIdx"), ("BTI-OL-MIB", "wchIdx"), ("BTI-7000-MIB", "condReportType"), ("BTI-7000-MIB", "condDateAndTime"), ("BTI-7000-MIB", "condSeverity"), ("BTI-7000-MIB", "condServiceAffecting"), ("BTI-7000-MIB", "trapSeqNum"), ("BTI-7000-MIB", "condDescription"), ("BTI-7000-MIB", "condObjectType"), ("BTI-7000-MIB", "condCodeType"))
if mibBuilder.loadTexts: wchLossOfLightTxCond.setStatus('current')
wchLossOfLightTxClear = NotificationType((1, 3, 6, 1, 4, 1, 18070, 2, 2, 2, 2, 28, 4, 0, 8)).setObjects(("BTI-OL-MIB", "wchCpTypeIdx"), ("BTI-OL-MIB", "wchShelfIdx"), ("BTI-OL-MIB", "wchSlotIdx"), ("BTI-OL-MIB", "wchPortTypeIdx"), ("BTI-OL-MIB", "wchPortIdx"), ("BTI-OL-MIB", "wchIdx"), ("BTI-7000-MIB", "condReportType"), ("BTI-7000-MIB", "condDateAndTime"), ("BTI-7000-MIB", "condSeverity"), ("BTI-7000-MIB", "condServiceAffecting"), ("BTI-7000-MIB", "trapSeqNum"), ("BTI-7000-MIB", "condDescription"), ("BTI-7000-MIB", "condObjectType"), ("BTI-7000-MIB", "condCodeType"))
if mibBuilder.loadTexts: wchLossOfLightTxClear.setStatus('current')
wchUnequippedCond = NotificationType((1, 3, 6, 1, 4, 1, 18070, 2, 2, 2, 2, 28, 4, 0, 9)).setObjects(("BTI-OL-MIB", "wchCpTypeIdx"), ("BTI-OL-MIB", "wchShelfIdx"), ("BTI-OL-MIB", "wchSlotIdx"), ("BTI-OL-MIB", "wchPortTypeIdx"), ("BTI-OL-MIB", "wchPortIdx"), ("BTI-OL-MIB", "wchIdx"), ("BTI-7000-MIB", "condReportType"), ("BTI-7000-MIB", "condDateAndTime"), ("BTI-7000-MIB", "condSeverity"), ("BTI-7000-MIB", "condServiceAffecting"), ("BTI-7000-MIB", "trapSeqNum"), ("BTI-7000-MIB", "condDescription"), ("BTI-7000-MIB", "condObjectType"), ("BTI-7000-MIB", "condCodeType"))
if mibBuilder.loadTexts: wchUnequippedCond.setStatus('current')
wchUnequippedClear = NotificationType((1, 3, 6, 1, 4, 1, 18070, 2, 2, 2, 2, 28, 4, 0, 10)).setObjects(("BTI-OL-MIB", "wchCpTypeIdx"), ("BTI-OL-MIB", "wchShelfIdx"), ("BTI-OL-MIB", "wchSlotIdx"), ("BTI-OL-MIB", "wchPortTypeIdx"), ("BTI-OL-MIB", "wchPortIdx"), ("BTI-OL-MIB", "wchIdx"), ("BTI-7000-MIB", "condReportType"), ("BTI-7000-MIB", "condDateAndTime"), ("BTI-7000-MIB", "condSeverity"), ("BTI-7000-MIB", "condServiceAffecting"), ("BTI-7000-MIB", "trapSeqNum"), ("BTI-7000-MIB", "condDescription"), ("BTI-7000-MIB", "condObjectType"), ("BTI-7000-MIB", "condCodeType"))
if mibBuilder.loadTexts: wchUnequippedClear.setStatus('current')
wchAISCond = NotificationType((1, 3, 6, 1, 4, 1, 18070, 2, 2, 2, 2, 28, 4, 0, 11)).setObjects(("BTI-OL-MIB", "wchCpTypeIdx"), ("BTI-OL-MIB", "wchShelfIdx"), ("BTI-OL-MIB", "wchSlotIdx"), ("BTI-OL-MIB", "wchPortTypeIdx"), ("BTI-OL-MIB", "wchPortIdx"), ("BTI-OL-MIB", "wchIdx"), ("BTI-7000-MIB", "condReportType"), ("BTI-7000-MIB", "condDateAndTime"), ("BTI-7000-MIB", "condSeverity"), ("BTI-7000-MIB", "condServiceAffecting"), ("BTI-7000-MIB", "trapSeqNum"), ("BTI-7000-MIB", "condDescription"), ("BTI-7000-MIB", "condObjectType"), ("BTI-7000-MIB", "condCodeType"))
if mibBuilder.loadTexts: wchAISCond.setStatus('current')
wchAISClear = NotificationType((1, 3, 6, 1, 4, 1, 18070, 2, 2, 2, 2, 28, 4, 0, 12)).setObjects(("BTI-OL-MIB", "wchCpTypeIdx"), ("BTI-OL-MIB", "wchShelfIdx"), ("BTI-OL-MIB", "wchSlotIdx"), ("BTI-OL-MIB", "wchPortTypeIdx"), ("BTI-OL-MIB", "wchPortIdx"), ("BTI-OL-MIB", "wchIdx"), ("BTI-7000-MIB", "condReportType"), ("BTI-7000-MIB", "condDateAndTime"), ("BTI-7000-MIB", "condSeverity"), ("BTI-7000-MIB", "condServiceAffecting"), ("BTI-7000-MIB", "trapSeqNum"), ("BTI-7000-MIB", "condDescription"), ("BTI-7000-MIB", "condObjectType"), ("BTI-7000-MIB", "condCodeType"))
if mibBuilder.loadTexts: wchAISClear.setStatus('current')
wchPowerOutOfSpecRxHighCond = NotificationType((1, 3, 6, 1, 4, 1, 18070, 2, 2, 2, 2, 28, 4, 0, 13)).setObjects(("BTI-OL-MIB", "wchCpTypeIdx"), ("BTI-OL-MIB", "wchShelfIdx"), ("BTI-OL-MIB", "wchSlotIdx"), ("BTI-OL-MIB", "wchPortTypeIdx"), ("BTI-OL-MIB", "wchPortIdx"), ("BTI-OL-MIB", "wchIdx"), ("BTI-7000-MIB", "condReportType"), ("BTI-7000-MIB", "condDateAndTime"), ("BTI-7000-MIB", "condSeverity"), ("BTI-7000-MIB", "condServiceAffecting"), ("BTI-7000-MIB", "trapSeqNum"), ("BTI-7000-MIB", "condDescription"), ("BTI-7000-MIB", "condObjectType"), ("BTI-7000-MIB", "condCodeType"))
if mibBuilder.loadTexts: wchPowerOutOfSpecRxHighCond.setStatus('deprecated')
wchPowerOutOfSpecRxHighClear = NotificationType((1, 3, 6, 1, 4, 1, 18070, 2, 2, 2, 2, 28, 4, 0, 14)).setObjects(("BTI-OL-MIB", "wchCpTypeIdx"), ("BTI-OL-MIB", "wchShelfIdx"), ("BTI-OL-MIB", "wchSlotIdx"), ("BTI-OL-MIB", "wchPortTypeIdx"), ("BTI-OL-MIB", "wchPortIdx"), ("BTI-OL-MIB", "wchIdx"), ("BTI-7000-MIB", "condReportType"), ("BTI-7000-MIB", "condDateAndTime"), ("BTI-7000-MIB", "condSeverity"), ("BTI-7000-MIB", "condServiceAffecting"), ("BTI-7000-MIB", "trapSeqNum"), ("BTI-7000-MIB", "condDescription"), ("BTI-7000-MIB", "condObjectType"), ("BTI-7000-MIB", "condCodeType"))
if mibBuilder.loadTexts: wchPowerOutOfSpecRxHighClear.setStatus('deprecated')
wchPowerOutOfSpecRxLowCond = NotificationType((1, 3, 6, 1, 4, 1, 18070, 2, 2, 2, 2, 28, 4, 0, 15)).setObjects(("BTI-OL-MIB", "wchCpTypeIdx"), ("BTI-OL-MIB", "wchShelfIdx"), ("BTI-OL-MIB", "wchSlotIdx"), ("BTI-OL-MIB", "wchPortTypeIdx"), ("BTI-OL-MIB", "wchPortIdx"), ("BTI-OL-MIB", "wchIdx"), ("BTI-7000-MIB", "condReportType"), ("BTI-7000-MIB", "condDateAndTime"), ("BTI-7000-MIB", "condSeverity"), ("BTI-7000-MIB", "condServiceAffecting"), ("BTI-7000-MIB", "trapSeqNum"), ("BTI-7000-MIB", "condDescription"), ("BTI-7000-MIB", "condObjectType"), ("BTI-7000-MIB", "condCodeType"))
if mibBuilder.loadTexts: wchPowerOutOfSpecRxLowCond.setStatus('deprecated')
wchPowerOutOfSpecRxLowClear = NotificationType((1, 3, 6, 1, 4, 1, 18070, 2, 2, 2, 2, 28, 4, 0, 16)).setObjects(("BTI-OL-MIB", "wchCpTypeIdx"), ("BTI-OL-MIB", "wchShelfIdx"), ("BTI-OL-MIB", "wchSlotIdx"), ("BTI-OL-MIB", "wchPortTypeIdx"), ("BTI-OL-MIB", "wchPortIdx"), ("BTI-OL-MIB", "wchIdx"), ("BTI-7000-MIB", "condReportType"), ("BTI-7000-MIB", "condDateAndTime"), ("BTI-7000-MIB", "condSeverity"), ("BTI-7000-MIB", "condServiceAffecting"), ("BTI-7000-MIB", "trapSeqNum"), ("BTI-7000-MIB", "condDescription"), ("BTI-7000-MIB", "condObjectType"), ("BTI-7000-MIB", "condCodeType"))
if mibBuilder.loadTexts: wchPowerOutOfSpecRxLowClear.setStatus('deprecated')
wchPowerRxHighFailCond = NotificationType((1, 3, 6, 1, 4, 1, 18070, 2, 2, 2, 2, 28, 4, 0, 17)).setObjects(("BTI-OL-MIB", "wchCpTypeIdx"), ("BTI-OL-MIB", "wchShelfIdx"), ("BTI-OL-MIB", "wchSlotIdx"), ("BTI-OL-MIB", "wchPortTypeIdx"), ("BTI-OL-MIB", "wchPortIdx"), ("BTI-OL-MIB", "wchIdx"), ("BTI-7000-MIB", "condReportType"), ("BTI-7000-MIB", "condDateAndTime"), ("BTI-7000-MIB", "condSeverity"), ("BTI-7000-MIB", "condServiceAffecting"), ("BTI-7000-MIB", "trapSeqNum"), ("BTI-7000-MIB", "condDescription"), ("BTI-7000-MIB", "condObjectType"), ("BTI-7000-MIB", "condCodeType"))
if mibBuilder.loadTexts: wchPowerRxHighFailCond.setStatus('deprecated')
wchPowerRxHighFailClear = NotificationType((1, 3, 6, 1, 4, 1, 18070, 2, 2, 2, 2, 28, 4, 0, 18)).setObjects(("BTI-OL-MIB", "wchCpTypeIdx"), ("BTI-OL-MIB", "wchShelfIdx"), ("BTI-OL-MIB", "wchSlotIdx"), ("BTI-OL-MIB", "wchPortTypeIdx"), ("BTI-OL-MIB", "wchPortIdx"), ("BTI-OL-MIB", "wchIdx"), ("BTI-7000-MIB", "condReportType"), ("BTI-7000-MIB", "condDateAndTime"), ("BTI-7000-MIB", "condSeverity"), ("BTI-7000-MIB", "condServiceAffecting"), ("BTI-7000-MIB", "trapSeqNum"), ("BTI-7000-MIB", "condDescription"), ("BTI-7000-MIB", "condObjectType"), ("BTI-7000-MIB", "condCodeType"))
if mibBuilder.loadTexts: wchPowerRxHighFailClear.setStatus('deprecated')
mibBuilder.exportSymbols("BTI-OL-MIB", olPortCrntPMOPTMaxValue=olPortCrntPMOPTMaxValue, olOSCEntry=olOSCEntry, olOSCCrntPMSESSInitialize=olOSCCrntPMSESSInitialize, wchHistPMOPRValue=wchHistPMOPRValue, olOSCCrntPMOPRTimeStamp=olOSCCrntPMOPRTimeStamp, wchHistPMOPTMinInitialize=wchHistPMOPTMinInitialize, olPortCrntPMOPTAvgTimeStamp=olPortCrntPMOPTAvgTimeStamp, eqptConnRowStatus=eqptConnRowStatus, olEqptSlotIdx=olEqptSlotIdx, wchCrntPMOPRValidity=wchCrntPMOPRValidity, olPortHistPMOPRAvgValue=olPortHistPMOPRAvgValue, olPortCrntPMOPRAvgTimeStamp=olPortCrntPMOPRAvgTimeStamp, olPortLossRxHighThCond=olPortLossRxHighThCond, olOSCHistPMLineIdx=olOSCHistPMLineIdx, olOSCCustom1=olOSCCustom1, wchCustom2=wchCustom2, olOSCHistPMESSValidity=olOSCHistPMESSValidity, wchAISClear=wchAISClear, olPortHistPMOPRStdDevValidity=olPortHistPMOPRStdDevValidity, olPortRowStatus=olPortRowStatus, olOSCCrntPMOPTTimeStamp=olOSCCrntPMOPTTimeStamp, wchCrntPMOPRMinTimeStamp=wchCrntPMOPRMinTimeStamp, wchHistPMOPRMinValue=wchHistPMOPRMinValue, olPortCrntPMOPTValidity=olPortCrntPMOPTValidity, olOSCFEGrp=olOSCFEGrp, olPortCrntPMOPTMinValidity=olPortCrntPMOPTMinValidity, olOSCFarEndNodeCnfgInconsistentCond=olOSCFarEndNodeCnfgInconsistentCond, olPortCrntPMIntervalTypeIdx=olPortCrntPMIntervalTypeIdx, olOSCHistPMOPTValue=olOSCHistPMOPTValue, olPortHistPMEntry=olPortHistPMEntry, olPortCrntPMOPRMaxValue=olPortCrntPMOPRMaxValue, wchHistPMOPRValidity=wchHistPMOPRValidity, olOSCHistPMCVSValidity=olOSCHistPMCVSValidity, olOSCCrntPMESSValue=olOSCCrntPMESSValue, olPortCrntPMIdx=olPortCrntPMIdx, olPortCrntPMEntry=olPortCrntPMEntry, olPortExpCnxDegree=olPortExpCnxDegree, odccShelfIdx=odccShelfIdx, olPortCrntPMTypeIdx=olPortCrntPMTypeIdx, olPortHistPMLossTxValidity=olPortHistPMLossTxValidity, olOSCLossOfLightRxCond=olOSCLossOfLightRxCond, wchXCEntry=wchXCEntry, wchXCServiceName=wchXCServiceName, wchXCDstPortIdx=wchXCDstPortIdx, olOSCHistPMSEFSSValidity=olOSCHistPMSEFSSValidity, olOSCHistPMESSValue=olOSCHistPMESSValue, olPortCondNotifications=olPortCondNotifications, olOSCStatusChangeEvt=olOSCStatusChangeEvt, olPortCrntPMOPRValue=olPortCrntPMOPRValue, olGroupMergeSecondary=olGroupMergeSecondary, olOSCHistPMUASSValue=olOSCHistPMUASSValue, wchHistPMOPTMaxValue=wchHistPMOPTMaxValue, olOSCPMThresholdCpTypeIdx=olOSCPMThresholdCpTypeIdx, wdmInvalidPreAmpOperCnfgCond=wdmInvalidPreAmpOperCnfgCond, olPortCpTypeIdx=olPortCpTypeIdx, olPortConnectionMismatchClear=olPortConnectionMismatchClear, wdmCustom3=wdmCustom3, olGroupMergePrimary=olGroupMergePrimary, olOSCCrntPMOBRValidity=olOSCCrntPMOBRValidity, olOSCHistPMSEFSSTimeStamp=olOSCHistPMSEFSSTimeStamp, olOSCSlotIdx=olOSCSlotIdx, eqptConnSrcSlotIdx=eqptConnSrcSlotIdx, olPortHistPMOPTMaxTimeStamp=olPortHistPMOPTMaxTimeStamp, wchHistPMTable=wchHistPMTable, wchLossOfLightTxClear=wchLossOfLightTxClear, olOSCHistPMEntry=olOSCHistPMEntry, olGroupEntry=olGroupEntry, olOSCFEDegr=olOSCFEDegr, olOSCEvtNotifications=olOSCEvtNotifications, olPortHistPMOPTMinValue=olPortHistPMOPTMinValue, eqptConnDstShelfIdx=eqptConnDstShelfIdx, olOSCHistPMESSTimeStamp=olOSCHistPMESSTimeStamp, wdmCustom1=wdmCustom1, wchXCSrcPortTypeIdx=wchXCSrcPortTypeIdx, eqptConnSrcPortTypeIdx=eqptConnSrcPortTypeIdx, olOSCFESysName=olOSCFESysName, olPortHistPMOPRAvgTimeStamp=olPortHistPMOPRAvgTimeStamp, olOSCHistPMOBRValue=olOSCHistPMOBRValue, wchCrntPMOPTMinInitialize=wchCrntPMOPTMinInitialize, wchHistPMOPTMinValue=wchHistPMOPTMinValue, wchXCDstCpTypeIdx=wchXCDstCpTypeIdx, olOSCHistPMUASSValidity=olOSCHistPMUASSValidity, wdmSpanLossSpecMax=wdmSpanLossSpecMax, olOSCPMThresholdUASSValue=olOSCPMThresholdUASSValue, olOSCPMThresholdESSValue=olOSCPMThresholdESSValue, olOSCHistPMOPRValue=olOSCHistPMOPRValue, wdmEntry=wdmEntry, eqptConnTable=eqptConnTable, olPortHistPMTable=olPortHistPMTable, olOSCPMThresholdSESSValue=olOSCPMThresholdSESSValue, wchCrntPMOPTMaxValue=wchCrntPMOPTMaxValue, olOSCFEIMMon=olOSCFEIMMon, wdmId=wdmId, olPortHistPMOPTMaxValue=olPortHistPMOPTMaxValue, olPortHistPMOPRAvgValidity=olPortHistPMOPRAvgValidity, wchCrntPMOPRMinValue=wchCrntPMOPRMinValue, olPortHistPMOPRMaxValue=olPortHistPMOPRMaxValue, olPortHistPMIntervalIdx=olPortHistPMIntervalIdx, olPortCrntPMOPTAvgValue=olPortCrntPMOPTAvgValue, wchPowerOutOfSpecRxHighCond=wchPowerOutOfSpecRxHighCond, olPortCrntPMOPTAvgValidity=olPortCrntPMOPTAvgValidity, wchCrntPMOPRMinValidity=wchCrntPMOPRMinValidity, olOSCSpanContCommCond=olOSCSpanContCommCond, wchHistPMIntervalTypeIdx=wchHistPMIntervalTypeIdx, olPortCrntPMCpTypeIdx=olPortCrntPMCpTypeIdx, olOSCExpFEIPAddr=olOSCExpFEIPAddr, wchPowerOutOfSpecRxCond=wchPowerOutOfSpecRxCond, wchHistPMOPTMinTimeStamp=wchHistPMOPTMinTimeStamp, olOSCHistPMOBRValidity=olOSCHistPMOBRValidity, olPortDWDMType=olPortDWDMType, wchIdx=wchIdx, olOSCOperStatQlfr=olOSCOperStatQlfr, olPortFrequency=olPortFrequency, wdmActAutoEnableTimer=wdmActAutoEnableTimer, olOSCOpticalBackReflHighThCond=olOSCOpticalBackReflHighThCond, olOSCPMThresholdLineIdx=olOSCPMThresholdLineIdx, olOSCLossOfFrameClear=olOSCLossOfFrameClear, olPortHistPMOPTValue=olPortHistPMOPTValue, olOSCHistPMUASSInitialize=olOSCHistPMUASSInitialize, wchPowerOutOfSpecRxLowClear=wchPowerOutOfSpecRxLowClear, olOSCCrntPMCpTypeIdx=olOSCCrntPMCpTypeIdx, olOSCHistPMOBRTimeStamp=olOSCHistPMOBRTimeStamp, wchCrntPMShelfIdx=wchCrntPMShelfIdx, olPortCrntPMOPTMaxValidity=olPortCrntPMOPTMaxValidity, olPortCrntPMLossRxValue=olPortCrntPMLossRxValue, olOSCPMThresholdTable=olOSCPMThresholdTable, wchHistPMOPTValue=wchHistPMOPTValue, wchOperStatQlfr=wchOperStatQlfr, wchHistPMOPRMinTimeStamp=wchHistPMOPRMinTimeStamp, olPortHistPMOPRMaxTimeStamp=olPortHistPMOPRMaxTimeStamp, olOSCCrntPMUASSValidity=olOSCCrntPMUASSValidity, wchHistPMOPTMaxValidity=wchHistPMOPTMaxValidity, olOSCPMThresholdSlotIdx=olOSCPMThresholdSlotIdx, olOSCCrntPMSESSTimeStamp=olOSCCrntPMSESSTimeStamp, olOSCCustom2=olOSCCustom2, olOSCCrntPMCVSInitialize=olOSCCrntPMCVSInitialize, olPortLossOfLightRxCond=olPortLossOfLightRxCond, olOSCOpticalBackReflOutOfSpecCond=olOSCOpticalBackReflOutOfSpecCond, olPortCrntPMOPTMinValue=olPortCrntPMOPTMinValue, wchPowerOutOfSpecRxLowCond=wchPowerOutOfSpecRxLowCond, olGroupCustom3=olGroupCustom3, olPortCrntPMOPTStdDevTimeStamp=olPortCrntPMOPTStdDevTimeStamp, wchCrntPMOPRMaxInitialize=wchCrntPMOPRMaxInitialize, olPortAPSDClear=olPortAPSDClear, olEqptShelfIdx=olEqptShelfIdx, wchHistPMCpTypeIdx=wchHistPMCpTypeIdx, olPortCustom2=olPortCustom2, wchHistPMOPRMaxValue=wchHistPMOPRMaxValue, wchXCSrcCpTypeIdx=wchXCSrcCpTypeIdx, olPortHistPMOPRMinValidity=olPortHistPMOPRMinValidity, wchCrntPMIntervalTypeIdx=wchCrntPMIntervalTypeIdx, wdmOperStatus=wdmOperStatus, eqptConnDstPortTypeIdx=eqptConnDstPortTypeIdx, wdmSpanLength=wdmSpanLength, wchStatusChangeEvt=wchStatusChangeEvt, olGroupMerge=olGroupMerge, olOSCRowStatus=olOSCRowStatus, wchCrntPMOPTTimeStamp=wchCrntPMOPTTimeStamp, olOSCLossOfFrameCond=olOSCLossOfFrameCond, olPortConnectionMismatchCond=olPortConnectionMismatchCond, olPortTable=olPortTable, wchPowerRxHighFailClear=wchPowerRxHighFailClear, olEqptDegreeNum=olEqptDegreeNum, olPortGrid=olPortGrid, olPortHistPMInitializeAll=olPortHistPMInitializeAll, OlGroupType=OlGroupType, wchXCDstChannelIdx=wchXCDstChannelIdx, olOSCCrntPMOPRValidity=olOSCCrntPMOPRValidity, wchHistPMOPRMaxInitialize=wchHistPMOPRMaxInitialize, wchActAutoEnableTimer=wchActAutoEnableTimer, wchHistPMOPTValidity=wchHistPMOPTValidity, olPortHistPMOPRMaxValidity=olPortHistPMOPRMaxValidity, wchXCSrcShelfIdx=wchXCSrcShelfIdx, olOSCCrntPMCVSTimeStamp=olOSCCrntPMCVSTimeStamp, olPortCrntPMOPRMinValidity=olPortCrntPMOPRMinValidity, olPortCrntPMOPRMaxTimeStamp=olPortCrntPMOPRMaxTimeStamp, wchCustom1=wchCustom1, olOSCSpanContCommClear=olOSCSpanContCommClear, olEqptGroupNum=olEqptGroupNum, olPortPowerOutOfSpecRxCond=olPortPowerOutOfSpecRxCond, wchPowerOutOfSpecTxClear=wchPowerOutOfSpecTxClear, wchHistPMIntervalIdx=wchHistPMIntervalIdx, odccLineIdx=odccLineIdx, wchCrntPMTable=wchCrntPMTable, olPortCrntPMOPRValidity=olPortCrntPMOPRValidity, wchHistPMEntry=wchHistPMEntry, olOSCPMThresholdSEFSSValue=olOSCPMThresholdSEFSSValue, wchHistPMOPRMinValidity=wchHistPMOPRMinValidity, olPortHistPMOPRValue=olPortHistPMOPRValue, olOSCPMThresholdShelfIdx=olOSCPMThresholdShelfIdx, wchXCDstSlotIdx=wchXCDstSlotIdx, wchCrntPMOPRMaxValue=wchCrntPMOPRMaxValue, odccEntry=odccEntry, olPortCrntPMOPRMaxValidity=olPortCrntPMOPRMaxValidity, olPortHistPMSlotIdx=olPortHistPMSlotIdx, olPortHistPMOPTTimeStamp=olPortHistPMOPTTimeStamp, olPortHistPMLossRxValue=olPortHistPMLossRxValue, olPortCrntPMOPTMaxTimeStamp=olPortCrntPMOPTMaxTimeStamp, wchCondNotifications=wchCondNotifications, olPortLossRxOutOfSpecClear=olPortLossRxOutOfSpecClear, wchCrntPMOPTMinValidity=wchCrntPMOPTMinValidity, olMib=olMib, olPortCrntPMOPRMinValue=olPortCrntPMOPRMinValue, olPortHistPMCpTypeIdx=olPortHistPMCpTypeIdx, wchCrntPMOPRMaxTimeStamp=wchCrntPMOPRMaxTimeStamp, olPortAPSDCond=olPortAPSDCond, olPortCrntPMLossRxValidity=olPortCrntPMLossRxValidity, wchAdminStatus=wchAdminStatus, olOSCShelfIdx=olOSCShelfIdx, eqptConnSrcShelfIdx=eqptConnSrcShelfIdx, olOSCLossOfLightTxClear=olOSCLossOfLightTxClear, wchCrntPMOPTValidity=wchCrntPMOPTValidity, olOSCEqlzContCommClear=olOSCEqlzContCommClear, olOSCHistPMCpTypeIdx=olOSCHistPMCpTypeIdx, olOSCCrntPMOPTValue=olOSCCrntPMOPTValue, wchCrntPMIdx=wchCrntPMIdx, wchHistPMPortIdx=wchHistPMPortIdx, olOSCCpTypeIdx=olOSCCpTypeIdx, olPortPayloadMissingIndCond=olPortPayloadMissingIndCond, wchTable=wchTable, olPortCustom3=olPortCustom3, wchBitrate=wchBitrate, olPortHistPMOPTValidity=olPortHistPMOPTValidity, wdmCondNotifications=wdmCondNotifications, olOSCCrntPMCVSValidity=olOSCCrntPMCVSValidity, wchCrntPMOPTMinValue=wchCrntPMOPTMinValue, olPortCustom1=olPortCustom1, olOSCHistPMUASSTimeStamp=olOSCHistPMUASSTimeStamp, wchEntry=wchEntry, olOSCPMThresholdEntry=olOSCPMThresholdEntry, olOSCFarEndNodeCnfgInconsistentClear=olOSCFarEndNodeCnfgInconsistentClear, wdmInvalidPreAmpOperCnfgClear=wdmInvalidPreAmpOperCnfgClear, eqptConnType=eqptConnType, olPortCrntPMLossTxValue=olPortCrntPMLossTxValue, olPerformance=olPerformance, olGroupCustom1=olGroupCustom1, wchCrntPMEntry=wchCrntPMEntry, olPortChannelCountDeficiencyCond=olPortChannelCountDeficiencyCond, olOSCCrntPMSESSValue=olOSCCrntPMSESSValue, olPortCrntPMOPTValue=olPortCrntPMOPTValue, olPortHistPMOPTMinTimeStamp=olPortHistPMOPTMinTimeStamp, wchHistPMOPRMinInitialize=wchHistPMOPRMinInitialize, wchXCTable=wchXCTable, wdmCustom2=wdmCustom2, olPortHistPMOPTStdDevTimeStamp=olPortHistPMOPTStdDevTimeStamp, olOSCAdminStatus=olOSCAdminStatus, wchHistPMShelfIdx=wchHistPMShelfIdx, olOSCPMThresholdCVSValue=olOSCPMThresholdCVSValue, olPortHistPMLossTxValue=olPortHistPMLossTxValue, olOSCAutoEnableTimer=olOSCAutoEnableTimer, olOSCHistPMCVSInitialize=olOSCHistPMCVSInitialize, olPortIdx=olPortIdx, olPortCrntPMShelfIdx=olPortCrntPMShelfIdx, olOSCCrntPMLineIdx=olOSCCrntPMLineIdx)
mibBuilder.exportSymbols("BTI-OL-MIB", olOSCHistPMOPTTimeStamp=olOSCHistPMOPTTimeStamp, olPortHistPMOPRMinTimeStamp=olPortHistPMOPRMinTimeStamp, wchCrntPMOPTMaxTimeStamp=wchCrntPMOPTMaxTimeStamp, wchHistPMOPRMaxTimeStamp=wchHistPMOPRMaxTimeStamp, olOSCHistPMCVSValue=olOSCHistPMCVSValue, wchCrntPMOPTMinTimeStamp=wchCrntPMOPTMinTimeStamp, wdmCpTypeIdx=wdmCpTypeIdx, wdmAutoEnableTimer=wdmAutoEnableTimer, olOSCCrntPMShelfIdx=olOSCCrntPMShelfIdx, odccTable=odccTable, wchCrntPMOPRTimeStamp=wchCrntPMOPRTimeStamp, olOSCHistPMSlotIdx=olOSCHistPMSlotIdx, odccCpTypeIdx=odccCpTypeIdx, olPortCrntPMOPRTimeStamp=olPortCrntPMOPRTimeStamp, olPortRemoteId=olPortRemoteId, wdmInvalidMidAmpOperCnfgCond=wdmInvalidMidAmpOperCnfgCond, olPortLossRxHighThClear=olPortLossRxHighThClear, olOSCCrntPMSEFSSValue=olOSCCrntPMSEFSSValue, olPortOperStatQlfr=olPortOperStatQlfr, olOSCTable=olOSCTable, wchXCSrcChannelIdx=wchXCSrcChannelIdx, olPortHistPMOPTAvgValue=olPortHistPMOPTAvgValue, wchHistPMOPTTimeStamp=wchHistPMOPTTimeStamp, olPortHistPMIntervalTypeIdx=olPortHistPMIntervalTypeIdx, wchHistPMOPRTimeStamp=wchHistPMOPRTimeStamp, wdmInvalidMidAmpOperCnfgClear=wdmInvalidMidAmpOperCnfgClear, olOSCLineIdx=olOSCLineIdx, olPortCrntPMSlotIdx=olPortCrntPMSlotIdx, olOSCCrntPMSEFSSInitialize=olOSCCrntPMSEFSSInitialize, wchCrntPMSlotIdx=wchCrntPMSlotIdx, wdmShelfIdx=wdmShelfIdx, olOSCCrntPMOPRValue=olOSCCrntPMOPRValue, olPortCrntPMOPRMinTimeStamp=olPortCrntPMOPRMinTimeStamp, olPortHistPMLossRxValidity=olPortHistPMLossRxValidity, olPortOperStatus=olPortOperStatus, olPortHistPMOPTMaxValidity=olPortHistPMOPTMaxValidity, olPortHistPMOPRMinValue=olPortHistPMOPRMinValue, wchCrntPMOPRMinInitialize=wchCrntPMOPRMinInitialize, olOSCHistPMOPRValidity=olOSCHistPMOPRValidity, olPortCrntPMOPRStdDevTimeStamp=olPortCrntPMOPRStdDevTimeStamp, olPortCrntPMOPTMinTimeStamp=olPortCrntPMOPTMinTimeStamp, olPortHistPMLossTxTimeStamp=olPortHistPMLossTxTimeStamp, odccSlotIdx=odccSlotIdx, wchCpTypeIdx=wchCpTypeIdx, olPortCrntPMLossTxTimeStamp=olPortCrntPMLossTxTimeStamp, olPortChannelCountDeficiencyClear=olPortChannelCountDeficiencyClear, wchCrntPMPortTypeIdx=wchCrntPMPortTypeIdx, olOSCOpticalBackReflOutOfSpecClear=olOSCOpticalBackReflOutOfSpecClear, olOSCExpFESysName=olOSCExpFESysName, eqptConnDstCpTypeIdx=eqptConnDstCpTypeIdx, olOSCHistPMTable=olOSCHistPMTable, olPortBackwardDefectIndClear=olPortBackwardDefectIndClear, olGroupCustom2=olGroupCustom2, olGroupIdx=olGroupIdx, wchPortTypeIdx=wchPortTypeIdx, wchLossOfLightRxCond=wchLossOfLightRxCond, olOSCCrntPMESSInitialize=olOSCCrntPMESSInitialize, olOSCActAutoEnableTimer=olOSCActAutoEnableTimer, wchCrntPMOPTValue=wchCrntPMOPTValue, olPortHistPMShelfIdx=olPortHistPMShelfIdx, olEqptEntry=olEqptEntry, olPortLossOfLightRxClear=olPortLossOfLightRxClear, olPortCrntPMTable=olPortCrntPMTable, olOSCEqlzContCommCond=olOSCEqlzContCommCond, olOSCHistPMOPTValidity=olOSCHistPMOPTValidity, olOSCHistPMSEFSSInitialize=olOSCHistPMSEFSSInitialize, olOSCHistPMIntervalIdx=olOSCHistPMIntervalIdx, wchXCDstPortTypeIdx=wchXCDstPortTypeIdx, wchPowerOutOfSpecRxClear=wchPowerOutOfSpecRxClear, olOSCCrntPMOPTValidity=olOSCCrntPMOPTValidity, olOSCCrntPMCVSValue=olOSCCrntPMCVSValue, olOSCFEGrpType=olOSCFEGrpType, wchHistPMSlotIdx=wchHistPMSlotIdx, olPortCrntPMOPRStdDevValue=olPortCrntPMOPRStdDevValue, wchHistPMOPTMaxTimeStamp=wchHistPMOPTMaxTimeStamp, olOSCFarEndIdMismatchCond=olOSCFarEndIdMismatchCond, olOSCHistPMSESSTimeStamp=olOSCHistPMSESSTimeStamp, wchHistPMPortTypeIdx=wchHistPMPortTypeIdx, eqptConnDstIdx=eqptConnDstIdx, olOSCFEIPAddr=olOSCFEIPAddr, olOSCCrntPMESSTimeStamp=olOSCCrntPMESSTimeStamp, wchXCDstShelfIdx=wchXCDstShelfIdx, olOSCHistPMSESSValidity=olOSCHistPMSESSValidity, olPortConnectionValidationTimeoutCond=olPortConnectionValidationTimeoutCond, olOSCFarEndIdMismatchClear=olOSCFarEndIdMismatchClear, wchOperStatus=wchOperStatus, wchXCRowStatus=wchXCRowStatus, olPortPowerOutOfSpecRxClear=olPortPowerOutOfSpecRxClear, olOSCCustom3=olOSCCustom3, olPortHistPMOPTStdDevValidity=olPortHistPMOPTStdDevValidity, wchGrid=wchGrid, wchEvtNotifications=wchEvtNotifications, wchPowerOutOfSpecTxCond=wchPowerOutOfSpecTxCond, olOSCCrntPMOBRTimeStamp=olOSCCrntPMOBRTimeStamp, olPortHistPMLossRxTimeStamp=olPortHistPMLossRxTimeStamp, wdmTable=wdmTable, wchFrequency=wchFrequency, olOSCCrntPMESSValidity=olOSCCrntPMESSValidity, olOSCCrntPMSEFSSValidity=olOSCCrntPMSEFSSValidity, olPortHistPMOPTMinValidity=olPortHistPMOPTMinValidity, olOSCPMThresholdIntervalTypeIdx=olOSCPMThresholdIntervalTypeIdx, wchHistPMOPTMinValidity=wchHistPMOPTMinValidity, wchPowerOutOfSpecRxHighClear=wchPowerOutOfSpecRxHighClear, olPortTypeIdx=olPortTypeIdx, olPortHistPMOPRStdDevValue=olPortHistPMOPRStdDevValue, wdmSlotIdx=wdmSlotIdx, olGroupType=olGroupType, olGroupTable=olGroupTable, wdmRowStatus=wdmRowStatus, olPortHistPMTypeIdx=olPortHistPMTypeIdx, olPortHistPMOPRValidity=olPortHistPMOPRValidity, wdmFiberType=wdmFiberType, wdmStatusChangeEvt=wdmStatusChangeEvt, olPortStatusChangeEvt=olPortStatusChangeEvt, olPortHistPMOPTAvgValidity=olPortHistPMOPTAvgValidity, olPortHistPMIdx=olPortHistPMIdx, olOSCExpFEDegr=olOSCExpFEDegr, olPortEntry=olPortEntry, wdmAdminStatus=wdmAdminStatus, olOSCHistPMOPRTimeStamp=olOSCHistPMOPRTimeStamp, olPortPayloadMissingIndClear=olPortPayloadMissingIndClear, wdmSpanLossRxHighTh=wdmSpanLossRxHighTh, olOSCCrntPMUASSTimeStamp=olOSCCrntPMUASSTimeStamp, olEqptRowStatus=olEqptRowStatus, wchXCSrcSlotIdx=wchXCSrcSlotIdx, olOSCCrntPMSlotIdx=olOSCCrntPMSlotIdx, olPortId=olPortId, eqptConnEntry=eqptConnEntry, olPortCrntPMOPRAvgValue=olPortCrntPMOPRAvgValue, olOSCHistPMSESSValue=olOSCHistPMSESSValue, olPortHistPMOPTAvgTimeStamp=olPortHistPMOPTAvgTimeStamp, wchHistPMOPTMaxInitialize=wchHistPMOPTMaxInitialize, olOSCHistPMShelfIdx=olOSCHistPMShelfIdx, wchAutoEnableTimer=wchAutoEnableTimer, olPortBackwardDefectIndCond=olPortBackwardDefectIndCond, olOSCCrntPMTable=olOSCCrntPMTable, olPortCrntPMOPTTimeStamp=olPortCrntPMOPTTimeStamp, olGroupId=olGroupId, olPortCrntPMOPTStdDevValidity=olPortCrntPMOPTStdDevValidity, olPortCrntPMOPRAvgValidity=olPortCrntPMOPRAvgValidity, wdmInvalidBoostAmpOperCnfgClear=wdmInvalidBoostAmpOperCnfgClear, olPortWavelength=olPortWavelength, wdmEvtNotifications=wdmEvtNotifications, wchHistPMIdx=wchHistPMIdx, wchPortIdx=wchPortIdx, olOSCCrntPMOBRValue=olOSCCrntPMOBRValue, wchLossOfLightTxCond=wchLossOfLightTxCond, olPortCrntPMLossTxValidity=olPortCrntPMLossTxValidity, wchCrntPMCpTypeIdx=wchCrntPMCpTypeIdx, olOSCId=olOSCId, wchUnequippedClear=wchUnequippedClear, olOSCCrntPMIntervalTypeIdx=olOSCCrntPMIntervalTypeIdx, wchCrntPMOPRValue=wchCrntPMOPRValue, olOSCTcaEvt=olOSCTcaEvt, olOSCHistPMCVSTimeStamp=olOSCHistPMCVSTimeStamp, olOSCLossOfLightTxCond=olOSCLossOfLightTxCond, wchId=wchId, olPortActCnxDegree=olPortActCnxDegree, olOSCCondNotifications=olOSCCondNotifications, olPortHistPMOPRStdDevTimeStamp=olPortHistPMOPRStdDevTimeStamp, olPortLossRxOutOfSpecCond=olPortLossRxOutOfSpecCond, wchSlotIdx=wchSlotIdx, OlPortType=OlPortType, wchXCSrcPortIdx=wchXCSrcPortIdx, odccRowStatus=odccRowStatus, olPortCrntPMOPTStdDevValue=olPortCrntPMOPTStdDevValue, olOSCHistPMESSInitialize=olOSCHistPMESSInitialize, olOSCOperStatus=olOSCOperStatus, PYSNMP_MODULE_ID=olMib, olPortSlotIdx=olPortSlotIdx, wchHistPMOPRMaxValidity=wchHistPMOPRMaxValidity, olOSCHistPMIntervalTypeIdx=olOSCHistPMIntervalTypeIdx, wchUnequippedCond=wchUnequippedCond, wchRowStatus=wchRowStatus, wchShelfIdx=wchShelfIdx, olEqptCpTypeIdx=olEqptCpTypeIdx, wdmInvalidBoostAmpOperCnfgCond=wdmInvalidBoostAmpOperCnfgCond, wdmNumChannels=wdmNumChannels, eqptConnSrcIdx=eqptConnSrcIdx, olGroupMergeCmd=olGroupMergeCmd, wchCrntPMOPTMaxInitialize=wchCrntPMOPTMaxInitialize, olPortHistPMOPTStdDevValue=olPortHistPMOPTStdDevValue, olPortCrntPMInitializeAll=olPortCrntPMInitializeAll, olOSCHistPMSEFSSValue=olOSCHistPMSEFSSValue, olOSCHistPMSESSInitialize=olOSCHistPMSESSInitialize, olGroupRowStatus=olGroupRowStatus, wdmOperStatQlfr=wdmOperStatQlfr, wchCustom3=wchCustom3, olPortCrntPMOPRStdDevValidity=olPortCrntPMOPRStdDevValidity, olOSCExpFEGrp=olOSCExpFEGrp, olOSCCrntPMUASSValue=olOSCCrntPMUASSValue, olOSCCrntPMSESSValidity=olOSCCrntPMSESSValidity, olPortEvtNotifications=olPortEvtNotifications, eqptConnSrcCpTypeIdx=eqptConnSrcCpTypeIdx, wchWavelength=wchWavelength, wchCrntPMOPRMaxValidity=wchCrntPMOPRMaxValidity, wchPowerRxHighFailCond=wchPowerRxHighFailCond, wchCrntPMPortIdx=wchCrntPMPortIdx, wdmLineIdx=wdmLineIdx, olPortConnectionValidationTimeoutClear=olPortConnectionValidationTimeoutClear, olOSCLossOfLightRxClear=olOSCLossOfLightRxClear, olPortHistPMOPRTimeStamp=olPortHistPMOPRTimeStamp, olOSCOpticalBackReflHighThClear=olOSCOpticalBackReflHighThClear, odccAdminStatus=odccAdminStatus, olEqptTable=olEqptTable, olOSCCrntPMUASSInitialize=olOSCCrntPMUASSInitialize, olOSCCrntPMSEFSSTimeStamp=olOSCCrntPMSEFSSTimeStamp, wchAISCond=wchAISCond, olOSCCrntPMEntry=olOSCCrntPMEntry, wchCrntPMOPTMaxValidity=wchCrntPMOPTMaxValidity, olPortCrntPMLossRxTimeStamp=olPortCrntPMLossRxTimeStamp, olPortShelfIdx=olPortShelfIdx, eqptConnDstSlotIdx=eqptConnDstSlotIdx, wchLossOfLightRxClear=wchLossOfLightRxClear)
