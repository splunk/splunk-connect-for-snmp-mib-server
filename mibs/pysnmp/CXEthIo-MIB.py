#
# PySNMP MIB module CXEthIo-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CXEthIo-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 18:17:02 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, SingleValueConstraint, ValueSizeConstraint, ConstraintsIntersection, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "SingleValueConstraint", "ValueSizeConstraint", "ConstraintsIntersection", "ValueRangeConstraint")
cxEthIo, Alias = mibBuilder.importSymbols("CXProduct-SMI", "cxEthIo", "Alias")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
iso, Bits, Counter64, ModuleIdentity, NotificationType, Unsigned32, ObjectIdentity, IpAddress, MibIdentifier, Counter32, MibScalar, MibTable, MibTableRow, MibTableColumn, Gauge32, Integer32, TimeTicks = mibBuilder.importSymbols("SNMPv2-SMI", "iso", "Bits", "Counter64", "ModuleIdentity", "NotificationType", "Unsigned32", "ObjectIdentity", "IpAddress", "MibIdentifier", "Counter32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Gauge32", "Integer32", "TimeTicks")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
ethSapOprTable = MibTable((1, 3, 6, 1, 4, 1, 495, 2, 1, 6, 45, 1), )
if mibBuilder.loadTexts: ethSapOprTable.setStatus('mandatory')
ethSapOprEntry = MibTableRow((1, 3, 6, 1, 4, 1, 495, 2, 1, 6, 45, 1, 1), ).setIndexNames((0, "CXEthIo-MIB", "ethSapOprNumber"))
if mibBuilder.loadTexts: ethSapOprEntry.setStatus('mandatory')
ethSapOprNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 495, 2, 1, 6, 45, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ethSapOprNumber.setStatus('mandatory')
ethSapOprAlias = MibTableColumn((1, 3, 6, 1, 4, 1, 495, 2, 1, 6, 45, 1, 1, 2), Alias()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ethSapOprAlias.setStatus('mandatory')
ethSapOprConnectorType = MibTableColumn((1, 3, 6, 1, 4, 1, 495, 2, 1, 6, 45, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("auto", 1), ("aui", 2), ("tbaset", 3), ("baset-100", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ethSapOprConnectorType.setStatus('mandatory')
ethSapOprDataGenerator = MibTableColumn((1, 3, 6, 1, 4, 1, 495, 2, 1, 6, 45, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2), ("enabled-verify", 3), ("retrigger", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ethSapOprDataGenerator.setStatus('mandatory')
ethSapOprGenFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 495, 2, 1, 6, 45, 1, 1, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ethSapOprGenFrames.setStatus('mandatory')
ethSapOprGenFrameSize = MibTableColumn((1, 3, 6, 1, 4, 1, 495, 2, 1, 6, 45, 1, 1, 6), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ethSapOprGenFrameSize.setStatus('mandatory')
ethSapOprLoopbackType = MibTableColumn((1, 3, 6, 1, 4, 1, 495, 2, 1, 6, 45, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("none", 1), ("local", 2), ("remote", 3), ("both", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ethSapOprLoopbackType.setStatus('mandatory')
ethOprControlStats = MibTableColumn((1, 3, 6, 1, 4, 1, 495, 2, 1, 6, 45, 1, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("clearSapStats", 1)))).setMaxAccess("writeonly")
if mibBuilder.loadTexts: ethOprControlStats.setStatus('mandatory')
ethStatOprLinkState = MibTableColumn((1, 3, 6, 1, 4, 1, 495, 2, 1, 6, 45, 1, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("up", 1), ("down", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ethStatOprLinkState.setStatus('mandatory')
ethStatOprInFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 495, 2, 1, 6, 45, 1, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ethStatOprInFrames.setStatus('mandatory')
ethStatOprInOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 495, 2, 1, 6, 45, 1, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ethStatOprInOctets.setStatus('mandatory')
ethStatOprInErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 495, 2, 1, 6, 45, 1, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ethStatOprInErrors.setStatus('mandatory')
ethStatOprInDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 495, 2, 1, 6, 45, 1, 1, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ethStatOprInDiscards.setStatus('mandatory')
ethStatOprInBusyDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 495, 2, 1, 6, 45, 1, 1, 19), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ethStatOprInBusyDiscards.setStatus('mandatory')
ethStatOprOutFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 495, 2, 1, 6, 45, 1, 1, 20), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ethStatOprOutFrames.setStatus('mandatory')
ethStatOprOutOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 495, 2, 1, 6, 45, 1, 1, 21), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ethStatOprOutOctets.setStatus('mandatory')
ethStatOprOutErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 495, 2, 1, 6, 45, 1, 1, 22), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ethStatOprOutErrors.setStatus('mandatory')
ethStatOprOutDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 495, 2, 1, 6, 45, 1, 1, 23), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ethStatOprOutDiscards.setStatus('mandatory')
ethStatOprOutCSLostFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 495, 2, 1, 6, 45, 1, 1, 24), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ethStatOprOutCSLostFrames.setStatus('mandatory')
ethStatOprRxGenErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 495, 2, 1, 6, 45, 1, 1, 25), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ethStatOprRxGenErrors.setStatus('mandatory')
ethSapAdmTable = MibTable((1, 3, 6, 1, 4, 1, 495, 2, 1, 6, 45, 2), )
if mibBuilder.loadTexts: ethSapAdmTable.setStatus('mandatory')
ethSapAdmEntry = MibTableRow((1, 3, 6, 1, 4, 1, 495, 2, 1, 6, 45, 2, 1), ).setIndexNames((0, "CXEthIo-MIB", "ethSapAdmNumber"))
if mibBuilder.loadTexts: ethSapAdmEntry.setStatus('mandatory')
ethSapAdmNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 495, 2, 1, 6, 45, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ethSapAdmNumber.setStatus('mandatory')
ethSapAdmAlias = MibTableColumn((1, 3, 6, 1, 4, 1, 495, 2, 1, 6, 45, 2, 1, 2), Alias()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ethSapAdmAlias.setStatus('mandatory')
ethSapAdmConnectorType = MibTableColumn((1, 3, 6, 1, 4, 1, 495, 2, 1, 6, 45, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("auto", 1), ("aui", 2), ("tbaseT", 3), ("baset-100", 4))).clone('auto')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ethSapAdmConnectorType.setStatus('mandatory')
ethSapAdmDataGenerator = MibTableColumn((1, 3, 6, 1, 4, 1, 495, 2, 1, 6, 45, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2), ("enabled-verify", 3))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ethSapAdmDataGenerator.setStatus('mandatory')
ethSapAdmGenFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 495, 2, 1, 6, 45, 2, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255)).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ethSapAdmGenFrames.setStatus('mandatory')
ethSapAdmGenFrameSize = MibTableColumn((1, 3, 6, 1, 4, 1, 495, 2, 1, 6, 45, 2, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1514)).clone(512)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ethSapAdmGenFrameSize.setStatus('mandatory')
ethSapAdmLoopbackType = MibTableColumn((1, 3, 6, 1, 4, 1, 495, 2, 1, 6, 45, 2, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("none", 1), ("local", 2), ("remote", 3), ("both", 4))).clone('none')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ethSapAdmLoopbackType.setStatus('mandatory')
mibBuilder.exportSymbols("CXEthIo-MIB", ethSapAdmLoopbackType=ethSapAdmLoopbackType, ethSapOprGenFrames=ethSapOprGenFrames, ethSapAdmGenFrames=ethSapAdmGenFrames, ethSapOprAlias=ethSapOprAlias, ethStatOprInFrames=ethStatOprInFrames, ethStatOprOutErrors=ethStatOprOutErrors, ethStatOprOutFrames=ethStatOprOutFrames, ethSapAdmDataGenerator=ethSapAdmDataGenerator, ethSapAdmTable=ethSapAdmTable, ethSapOprEntry=ethSapOprEntry, ethStatOprInOctets=ethStatOprInOctets, ethSapAdmGenFrameSize=ethSapAdmGenFrameSize, ethStatOprInBusyDiscards=ethStatOprInBusyDiscards, ethSapAdmConnectorType=ethSapAdmConnectorType, ethSapOprGenFrameSize=ethSapOprGenFrameSize, ethSapOprConnectorType=ethSapOprConnectorType, ethSapOprLoopbackType=ethSapOprLoopbackType, ethStatOprLinkState=ethStatOprLinkState, ethStatOprOutCSLostFrames=ethStatOprOutCSLostFrames, ethSapAdmAlias=ethSapAdmAlias, ethSapAdmNumber=ethSapAdmNumber, ethSapOprDataGenerator=ethSapOprDataGenerator, ethSapOprNumber=ethSapOprNumber, ethStatOprInDiscards=ethStatOprInDiscards, ethStatOprInErrors=ethStatOprInErrors, ethOprControlStats=ethOprControlStats, ethStatOprOutDiscards=ethStatOprOutDiscards, ethStatOprRxGenErrors=ethStatOprRxGenErrors, ethSapAdmEntry=ethSapAdmEntry, ethStatOprOutOctets=ethStatOprOutOctets, ethSapOprTable=ethSapOprTable)
