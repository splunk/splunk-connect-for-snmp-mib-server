#
# PySNMP MIB module HP-ICF-SVCS-APP-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/HP-ICF-SVCS-APP-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:23:01 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, SingleValueConstraint, ConstraintsIntersection, ConstraintsUnion, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "SingleValueConstraint", "ConstraintsIntersection", "ConstraintsUnion", "ValueSizeConstraint")
entPhysicalIndex, = mibBuilder.importSymbols("ENTITY-MIB", "entPhysicalIndex")
hpSwitch, = mibBuilder.importSymbols("HP-ICF-OID", "hpSwitch")
InetAddress, InetAddressType = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddress", "InetAddressType")
PortList, = mibBuilder.importSymbols("Q-BRIDGE-MIB", "PortList")
SnmpAdminString, = mibBuilder.importSymbols("SNMP-FRAMEWORK-MIB", "SnmpAdminString")
ObjectGroup, NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "NotificationGroup", "ModuleCompliance")
Counter64, IpAddress, iso, Counter32, Gauge32, Integer32, NotificationType, Bits, MibScalar, MibTable, MibTableRow, MibTableColumn, ObjectIdentity, TimeTicks, ModuleIdentity, MibIdentifier, Unsigned32 = mibBuilder.importSymbols("SNMPv2-SMI", "Counter64", "IpAddress", "iso", "Counter32", "Gauge32", "Integer32", "NotificationType", "Bits", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ObjectIdentity", "TimeTicks", "ModuleIdentity", "MibIdentifier", "Unsigned32")
DisplayString, TruthValue, AutonomousType, RowStatus, MacAddress, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TruthValue", "AutonomousType", "RowStatus", "MacAddress", "TextualConvention")
hpicfSvcsAppMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 86))
hpicfSvcsAppMIB.setRevisions(('2011-05-27 00:00',))
if mibBuilder.loadTexts: hpicfSvcsAppMIB.setLastUpdated('201105270000Z')
if mibBuilder.loadTexts: hpicfSvcsAppMIB.setOrganization('HP Networking')
hpicfSvcsAppNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 86, 0))
hpicfSvcsAppObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 86, 1))
hpicfSvcsAppConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 86, 2))
class AppStatus(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12))
    namedValues = NamedValues(("other", 1), ("unknown", 2), ("bootInit", 3), ("booting", 4), ("bootFailure", 5), ("halted", 6), ("rebooting", 7), ("ready", 8), ("appInit", 9), ("appError", 10), ("appRunning", 11), ("shuttingDown", 12))

hpicfSvcsInstalledAppTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 86, 1, 1), )
if mibBuilder.loadTexts: hpicfSvcsInstalledAppTable.setStatus('current')
hpicfSvcsInstalledAppEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 86, 1, 1, 1), ).setIndexNames((0, "ENTITY-MIB", "entPhysicalIndex"))
if mibBuilder.loadTexts: hpicfSvcsInstalledAppEntry.setStatus('current')
hpicfSvcsInstalledAppPlatformType = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 86, 1, 1, 1, 1), AutonomousType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpicfSvcsInstalledAppPlatformType.setStatus('current')
hpicfSvcsInstalledAppDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 86, 1, 1, 1, 2), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpicfSvcsInstalledAppDescription.setStatus('current')
hpicfSvcsInstalledAppVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 86, 1, 1, 1, 3), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpicfSvcsInstalledAppVersion.setStatus('current')
hpicfSvcsInstalledAppStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 86, 1, 1, 1, 4), AppStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpicfSvcsInstalledAppStatus.setStatus('current')
hpicfSvcsInstalledAppJNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 86, 1, 1, 1, 5), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpicfSvcsInstalledAppJNumber.setStatus('current')
hpicfSvcsInstalledAppLicensingStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 86, 1, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("active", 1), ("expired", 2), ("unknown", 3)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpicfSvcsInstalledAppLicensingStatus.setStatus('current')
hpicfSvcsInstalledAppRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 86, 1, 1, 1, 7), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpicfSvcsInstalledAppRowStatus.setStatus('current')
hpicfSvcsV1AppTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 86, 1, 2), )
if mibBuilder.loadTexts: hpicfSvcsV1AppTable.setStatus('current')
hpicfSvcsV1AppEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 86, 1, 2, 1), ).setIndexNames((0, "ENTITY-MIB", "entPhysicalIndex"))
if mibBuilder.loadTexts: hpicfSvcsV1AppEntry.setStatus('current')
hpicfSvcsV1AppIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 86, 1, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpicfSvcsV1AppIndex.setStatus('current')
hpicfSvcsV1AppCLIAvailable = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 86, 1, 2, 1, 2), TruthValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpicfSvcsV1AppCLIAvailable.setStatus('current')
hpicfSvcsV1AppName = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 86, 1, 2, 1, 3), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpicfSvcsV1AppName.setStatus('current')
hpicfSvcsV1AppDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 86, 1, 2, 1, 4), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpicfSvcsV1AppDescription.setStatus('current')
hpicfSvcsV1AppVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 86, 1, 2, 1, 5), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpicfSvcsV1AppVersion.setStatus('current')
hpicfSvcsV1AppStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 86, 1, 2, 1, 6), AppStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpicfSvcsV1AppStatus.setStatus('current')
hpicfSvcsV1AppJNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 86, 1, 2, 1, 7), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpicfSvcsV1AppJNumber.setStatus('current')
hpicfSvcsV1AppURL = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 86, 1, 2, 1, 8), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpicfSvcsV1AppURL.setStatus('current')
hpicfSvcsV1AppRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 86, 1, 2, 1, 9), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpicfSvcsV1AppRowStatus.setStatus('current')
hpicfSvcsAppCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 86, 2, 1))
hpicfSvcsAppGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 86, 2, 2))
hpicfSvcsAppCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 86, 2, 1, 1)).setObjects(("HP-ICF-SVCS-APP-MIB", "hpicfSvcsInstalledAppGroup"), ("HP-ICF-SVCS-APP-MIB", "hpicfSvcsV1AppGroup"), ("HP-ICF-SVCS-APP-MIB", "hpicfSvcsInstalledAppGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfSvcsAppCompliance = hpicfSvcsAppCompliance.setStatus('current')
hpicfSvcsInstalledAppGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 86, 2, 2, 1)).setObjects(("HP-ICF-SVCS-APP-MIB", "hpicfSvcsInstalledAppPlatformType"), ("HP-ICF-SVCS-APP-MIB", "hpicfSvcsInstalledAppDescription"), ("HP-ICF-SVCS-APP-MIB", "hpicfSvcsInstalledAppVersion"), ("HP-ICF-SVCS-APP-MIB", "hpicfSvcsInstalledAppStatus"), ("HP-ICF-SVCS-APP-MIB", "hpicfSvcsInstalledAppJNumber"), ("HP-ICF-SVCS-APP-MIB", "hpicfSvcsInstalledAppLicensingStatus"), ("HP-ICF-SVCS-APP-MIB", "hpicfSvcsInstalledAppRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfSvcsInstalledAppGroup = hpicfSvcsInstalledAppGroup.setStatus('current')
hpicfSvcsV1AppGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 86, 2, 2, 2)).setObjects(("HP-ICF-SVCS-APP-MIB", "hpicfSvcsV1AppIndex"), ("HP-ICF-SVCS-APP-MIB", "hpicfSvcsV1AppCLIAvailable"), ("HP-ICF-SVCS-APP-MIB", "hpicfSvcsV1AppName"), ("HP-ICF-SVCS-APP-MIB", "hpicfSvcsV1AppDescription"), ("HP-ICF-SVCS-APP-MIB", "hpicfSvcsV1AppVersion"), ("HP-ICF-SVCS-APP-MIB", "hpicfSvcsV1AppStatus"), ("HP-ICF-SVCS-APP-MIB", "hpicfSvcsV1AppJNumber"), ("HP-ICF-SVCS-APP-MIB", "hpicfSvcsV1AppURL"), ("HP-ICF-SVCS-APP-MIB", "hpicfSvcsV1AppRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfSvcsV1AppGroup = hpicfSvcsV1AppGroup.setStatus('current')
mibBuilder.exportSymbols("HP-ICF-SVCS-APP-MIB", PYSNMP_MODULE_ID=hpicfSvcsAppMIB, hpicfSvcsAppGroups=hpicfSvcsAppGroups, hpicfSvcsV1AppTable=hpicfSvcsV1AppTable, hpicfSvcsInstalledAppLicensingStatus=hpicfSvcsInstalledAppLicensingStatus, hpicfSvcsV1AppStatus=hpicfSvcsV1AppStatus, hpicfSvcsAppObjects=hpicfSvcsAppObjects, hpicfSvcsInstalledAppDescription=hpicfSvcsInstalledAppDescription, hpicfSvcsV1AppName=hpicfSvcsV1AppName, hpicfSvcsAppCompliances=hpicfSvcsAppCompliances, hpicfSvcsAppMIB=hpicfSvcsAppMIB, hpicfSvcsInstalledAppStatus=hpicfSvcsInstalledAppStatus, hpicfSvcsInstalledAppPlatformType=hpicfSvcsInstalledAppPlatformType, hpicfSvcsInstalledAppEntry=hpicfSvcsInstalledAppEntry, hpicfSvcsV1AppVersion=hpicfSvcsV1AppVersion, hpicfSvcsV1AppEntry=hpicfSvcsV1AppEntry, hpicfSvcsV1AppURL=hpicfSvcsV1AppURL, hpicfSvcsInstalledAppTable=hpicfSvcsInstalledAppTable, hpicfSvcsV1AppIndex=hpicfSvcsV1AppIndex, hpicfSvcsInstalledAppJNumber=hpicfSvcsInstalledAppJNumber, hpicfSvcsAppNotifications=hpicfSvcsAppNotifications, hpicfSvcsV1AppRowStatus=hpicfSvcsV1AppRowStatus, hpicfSvcsV1AppJNumber=hpicfSvcsV1AppJNumber, hpicfSvcsAppCompliance=hpicfSvcsAppCompliance, hpicfSvcsInstalledAppRowStatus=hpicfSvcsInstalledAppRowStatus, hpicfSvcsAppConformance=hpicfSvcsAppConformance, hpicfSvcsInstalledAppVersion=hpicfSvcsInstalledAppVersion, hpicfSvcsInstalledAppGroup=hpicfSvcsInstalledAppGroup, AppStatus=AppStatus, hpicfSvcsV1AppCLIAvailable=hpicfSvcsV1AppCLIAvailable, hpicfSvcsV1AppDescription=hpicfSvcsV1AppDescription, hpicfSvcsV1AppGroup=hpicfSvcsV1AppGroup)
