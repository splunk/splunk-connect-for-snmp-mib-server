#
# PySNMP MIB module TPLINK-IPADDR-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/TPLINK-IPADDR-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 21:17:29 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ConstraintsIntersection, SingleValueConstraint, ConstraintsUnion, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ConstraintsIntersection", "SingleValueConstraint", "ConstraintsUnion", "ValueSizeConstraint")
ifIndex, = mibBuilder.importSymbols("IF-MIB", "ifIndex")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
MibScalar, MibTable, MibTableRow, MibTableColumn, Bits, MibIdentifier, iso, Counter32, Unsigned32, TimeTicks, Gauge32, ObjectIdentity, Integer32, IpAddress, NotificationType, ModuleIdentity, Counter64 = mibBuilder.importSymbols("SNMPv2-SMI", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Bits", "MibIdentifier", "iso", "Counter32", "Unsigned32", "TimeTicks", "Gauge32", "ObjectIdentity", "Integer32", "IpAddress", "NotificationType", "ModuleIdentity", "Counter64")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
tplinkMgmt, = mibBuilder.importSymbols("TPLINK-MIB", "tplinkMgmt")
TPRowStatus, = mibBuilder.importSymbols("TPLINK-TC-MIB", "TPRowStatus")
class TpInterfaceMode(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))
    namedValues = NamedValues(("none", 0), ("manual", 1), ("dhcp", 2), ("bootp", 3))

class TpInterfaceMode2(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1))
    namedValues = NamedValues(("none", 0), ("manual", 1))

class TpPortLinkMode(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1))
    namedValues = NamedValues(("bridge", 0), ("route", 1))

tplinkIpAddrMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 11863, 6, 6))
tplinkIpAddrMIB.setRevisions(('2012-12-13 09:30',))
if mibBuilder.loadTexts: tplinkIpAddrMIB.setLastUpdated('201212130930Z')
if mibBuilder.loadTexts: tplinkIpAddrMIB.setOrganization('TPLINK')
tplinkIpAddrMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 11863, 6, 6, 1))
tplinkIpAddrNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 11863, 6, 6, 2))
tpInterfaceConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 11863, 6, 6, 1, 1))
tpVlanInterfaceTable = MibTable((1, 3, 6, 1, 4, 1, 11863, 6, 6, 1, 1, 1), )
if mibBuilder.loadTexts: tpVlanInterfaceTable.setStatus('current')
tpVlanInterfaceConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11863, 6, 6, 1, 1, 1, 1), ).setIndexNames((0, "TPLINK-IPADDR-MIB", "tpVlanInterfaceVlanId"), (0, "TPLINK-IPADDR-MIB", "tpVlanInterfaceIp"), (0, "TPLINK-IPADDR-MIB", "tpVlanInterfaceSecondary"))
if mibBuilder.loadTexts: tpVlanInterfaceConfigEntry.setStatus('current')
tpVlanInterfaceVlanId = MibTableColumn((1, 3, 6, 1, 4, 1, 11863, 6, 6, 1, 1, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tpVlanInterfaceVlanId.setStatus('current')
tpVlanInterfaceSecondary = MibTableColumn((1, 3, 6, 1, 4, 1, 11863, 6, 6, 1, 1, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tpVlanInterfaceSecondary.setStatus('current')
tpVlanInterfaceMode = MibTableColumn((1, 3, 6, 1, 4, 1, 11863, 6, 6, 1, 1, 1, 1, 3), TpInterfaceMode()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tpVlanInterfaceMode.setStatus('current')
tpVlanInterfaceIp = MibTableColumn((1, 3, 6, 1, 4, 1, 11863, 6, 6, 1, 1, 1, 1, 4), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tpVlanInterfaceIp.setStatus('current')
tpVlanInterfaceMsk = MibTableColumn((1, 3, 6, 1, 4, 1, 11863, 6, 6, 1, 1, 1, 1, 5), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tpVlanInterfaceMsk.setStatus('current')
tpVlanInterfaceName = MibTableColumn((1, 3, 6, 1, 4, 1, 11863, 6, 6, 1, 1, 1, 1, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 20))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tpVlanInterfaceName.setStatus('current')
tpVlanInterfaceStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11863, 6, 6, 1, 1, 1, 1, 7), TPRowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tpVlanInterfaceStatus.setStatus('current')
tpLoopbackInterfaceTable = MibTable((1, 3, 6, 1, 4, 1, 11863, 6, 6, 1, 1, 2), )
if mibBuilder.loadTexts: tpLoopbackInterfaceTable.setStatus('current')
tpLoopbackInterfaceConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11863, 6, 6, 1, 1, 2, 1), ).setIndexNames((0, "TPLINK-IPADDR-MIB", "tpLoopbackInterfaceId"), (0, "TPLINK-IPADDR-MIB", "tpLoopbackInterfaceIp"), (0, "TPLINK-IPADDR-MIB", "tpLoopbackInterfaceSecondary"))
if mibBuilder.loadTexts: tpLoopbackInterfaceConfigEntry.setStatus('current')
tpLoopbackInterfaceId = MibTableColumn((1, 3, 6, 1, 4, 1, 11863, 6, 6, 1, 1, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tpLoopbackInterfaceId.setStatus('current')
tpLoopbackInterfaceSecondary = MibTableColumn((1, 3, 6, 1, 4, 1, 11863, 6, 6, 1, 1, 2, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tpLoopbackInterfaceSecondary.setStatus('current')
tpLoopbackInterfaceMode = MibTableColumn((1, 3, 6, 1, 4, 1, 11863, 6, 6, 1, 1, 2, 1, 3), TpInterfaceMode2()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tpLoopbackInterfaceMode.setStatus('current')
tpLoopbackInterfaceIp = MibTableColumn((1, 3, 6, 1, 4, 1, 11863, 6, 6, 1, 1, 2, 1, 4), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tpLoopbackInterfaceIp.setStatus('current')
tpLoopbackInterfaceMsk = MibTableColumn((1, 3, 6, 1, 4, 1, 11863, 6, 6, 1, 1, 2, 1, 5), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tpLoopbackInterfaceMsk.setStatus('current')
tpLoopbackInterfaceName = MibTableColumn((1, 3, 6, 1, 4, 1, 11863, 6, 6, 1, 1, 2, 1, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 20))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tpLoopbackInterfaceName.setStatus('current')
tpLoopbackInterfaceStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11863, 6, 6, 1, 1, 2, 1, 7), TPRowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tpLoopbackInterfaceStatus.setStatus('current')
tpRoutedPortTable = MibTable((1, 3, 6, 1, 4, 1, 11863, 6, 6, 1, 1, 3), )
if mibBuilder.loadTexts: tpRoutedPortTable.setStatus('current')
tpRoutedPortConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11863, 6, 6, 1, 1, 3, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "TPLINK-IPADDR-MIB", "tpRoutedPortIp"), (0, "TPLINK-IPADDR-MIB", "tpRoutedPortSecondary"))
if mibBuilder.loadTexts: tpRoutedPortConfigEntry.setStatus('current')
tpRoutedPortId = MibTableColumn((1, 3, 6, 1, 4, 1, 11863, 6, 6, 1, 1, 3, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tpRoutedPortId.setStatus('current')
tpRoutedPortSecondary = MibTableColumn((1, 3, 6, 1, 4, 1, 11863, 6, 6, 1, 1, 3, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tpRoutedPortSecondary.setStatus('current')
tpRoutedPortMode = MibTableColumn((1, 3, 6, 1, 4, 1, 11863, 6, 6, 1, 1, 3, 1, 3), TpInterfaceMode()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tpRoutedPortMode.setStatus('current')
tpRoutedPortIp = MibTableColumn((1, 3, 6, 1, 4, 1, 11863, 6, 6, 1, 1, 3, 1, 4), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tpRoutedPortIp.setStatus('current')
tpRoutedPortMsk = MibTableColumn((1, 3, 6, 1, 4, 1, 11863, 6, 6, 1, 1, 3, 1, 5), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tpRoutedPortMsk.setStatus('current')
tpRoutedPortName = MibTableColumn((1, 3, 6, 1, 4, 1, 11863, 6, 6, 1, 1, 3, 1, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 20))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tpRoutedPortName.setStatus('current')
tpRoutedPortStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11863, 6, 6, 1, 1, 3, 1, 7), TPRowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tpRoutedPortStatus.setStatus('current')
tpPortChannelTable = MibTable((1, 3, 6, 1, 4, 1, 11863, 6, 6, 1, 1, 4), )
if mibBuilder.loadTexts: tpPortChannelTable.setStatus('current')
tpPortChannelConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11863, 6, 6, 1, 1, 4, 1), ).setIndexNames((0, "TPLINK-IPADDR-MIB", "tpPortChannelId"), (0, "TPLINK-IPADDR-MIB", "tpPortChannelIp"), (0, "TPLINK-IPADDR-MIB", "tpPortChannelSecondary"))
if mibBuilder.loadTexts: tpPortChannelConfigEntry.setStatus('current')
tpPortChannelId = MibTableColumn((1, 3, 6, 1, 4, 1, 11863, 6, 6, 1, 1, 4, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tpPortChannelId.setStatus('current')
tpPortChannelSecondary = MibTableColumn((1, 3, 6, 1, 4, 1, 11863, 6, 6, 1, 1, 4, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tpPortChannelSecondary.setStatus('current')
tpPortChannelMode = MibTableColumn((1, 3, 6, 1, 4, 1, 11863, 6, 6, 1, 1, 4, 1, 3), TpInterfaceMode()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tpPortChannelMode.setStatus('current')
tpPortChannelIp = MibTableColumn((1, 3, 6, 1, 4, 1, 11863, 6, 6, 1, 1, 4, 1, 4), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tpPortChannelIp.setStatus('current')
tpPortChannelMsk = MibTableColumn((1, 3, 6, 1, 4, 1, 11863, 6, 6, 1, 1, 4, 1, 5), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tpPortChannelMsk.setStatus('current')
tpPortChannelName = MibTableColumn((1, 3, 6, 1, 4, 1, 11863, 6, 6, 1, 1, 4, 1, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 20))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tpPortChannelName.setStatus('current')
tpPortChannelStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11863, 6, 6, 1, 1, 4, 1, 7), TPRowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tpPortChannelStatus.setStatus('current')
mibBuilder.exportSymbols("TPLINK-IPADDR-MIB", tpVlanInterfaceMode=tpVlanInterfaceMode, tpPortChannelIp=tpPortChannelIp, tpRoutedPortIp=tpRoutedPortIp, tpPortChannelSecondary=tpPortChannelSecondary, tpVlanInterfaceVlanId=tpVlanInterfaceVlanId, tpLoopbackInterfaceId=tpLoopbackInterfaceId, tplinkIpAddrMIB=tplinkIpAddrMIB, tpVlanInterfaceMsk=tpVlanInterfaceMsk, tpInterfaceConfig=tpInterfaceConfig, TpInterfaceMode=TpInterfaceMode, tpLoopbackInterfaceName=tpLoopbackInterfaceName, tpRoutedPortSecondary=tpRoutedPortSecondary, tpPortChannelMsk=tpPortChannelMsk, tpRoutedPortStatus=tpRoutedPortStatus, tpRoutedPortId=tpRoutedPortId, tpPortChannelMode=tpPortChannelMode, tpVlanInterfaceConfigEntry=tpVlanInterfaceConfigEntry, tpRoutedPortConfigEntry=tpRoutedPortConfigEntry, tpRoutedPortMode=tpRoutedPortMode, TpInterfaceMode2=TpInterfaceMode2, tpRoutedPortMsk=tpRoutedPortMsk, tpLoopbackInterfaceConfigEntry=tpLoopbackInterfaceConfigEntry, tpPortChannelName=tpPortChannelName, tplinkIpAddrNotifications=tplinkIpAddrNotifications, tpLoopbackInterfaceMsk=tpLoopbackInterfaceMsk, tpVlanInterfaceTable=tpVlanInterfaceTable, tpVlanInterfaceName=tpVlanInterfaceName, tpVlanInterfaceStatus=tpVlanInterfaceStatus, PYSNMP_MODULE_ID=tplinkIpAddrMIB, tpPortChannelTable=tpPortChannelTable, tpLoopbackInterfaceStatus=tpLoopbackInterfaceStatus, tpPortChannelStatus=tpPortChannelStatus, tpRoutedPortTable=tpRoutedPortTable, tpPortChannelConfigEntry=tpPortChannelConfigEntry, tpLoopbackInterfaceIp=tpLoopbackInterfaceIp, tpRoutedPortName=tpRoutedPortName, tpPortChannelId=tpPortChannelId, TpPortLinkMode=TpPortLinkMode, tplinkIpAddrMIBObjects=tplinkIpAddrMIBObjects, tpVlanInterfaceIp=tpVlanInterfaceIp, tpLoopbackInterfaceSecondary=tpLoopbackInterfaceSecondary, tpVlanInterfaceSecondary=tpVlanInterfaceSecondary, tpLoopbackInterfaceTable=tpLoopbackInterfaceTable, tpLoopbackInterfaceMode=tpLoopbackInterfaceMode)
