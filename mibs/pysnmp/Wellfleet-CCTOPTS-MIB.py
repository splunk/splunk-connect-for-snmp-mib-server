#
# PySNMP MIB module Wellfleet-CCTOPTS-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/Wellfleet-CCTOPTS-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 21:32:57 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ConstraintsUnion, ValueRangeConstraint, ConstraintsIntersection, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ConstraintsUnion", "ValueRangeConstraint", "ConstraintsIntersection", "ValueSizeConstraint")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
NotificationType, Bits, Counter64, MibScalar, MibTable, MibTableRow, MibTableColumn, ObjectIdentity, TimeTicks, Counter32, Unsigned32, ModuleIdentity, iso, IpAddress, Gauge32, Integer32, MibIdentifier = mibBuilder.importSymbols("SNMPv2-SMI", "NotificationType", "Bits", "Counter64", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ObjectIdentity", "TimeTicks", "Counter32", "Unsigned32", "ModuleIdentity", "iso", "IpAddress", "Gauge32", "Integer32", "MibIdentifier")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
wfCircuitOptsGroup, = mibBuilder.importSymbols("Wellfleet-COMMON-MIB", "wfCircuitOptsGroup")
wfCctOptsTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 1), )
if mibBuilder.loadTexts: wfCctOptsTable.setStatus('mandatory')
wfCctOptsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 1, 1), ).setIndexNames((0, "Wellfleet-CCTOPTS-MIB", "wfCctOptsCct"))
if mibBuilder.loadTexts: wfCctOptsEntry.setStatus('mandatory')
wfCctOptsDelete = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("created", 1), ("deleted", 2))).clone('created')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfCctOptsDelete.setStatus('mandatory')
wfCctOptsPriorityQueueingDisable = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfCctOptsPriorityQueueingDisable.setStatus('mandatory')
wfCctOptsCct = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 1, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfCctOptsCct.setStatus('mandatory')
wfCctOptsHighPriorityQueueLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(20))).clone(namedValues=NamedValues(("default", 20))).clone('default')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfCctOptsHighPriorityQueueLimit.setStatus('mandatory')
wfCctOptsNormalPriorityQueueLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(20))).clone(namedValues=NamedValues(("default", 20))).clone('default')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfCctOptsNormalPriorityQueueLimit.setStatus('mandatory')
wfCctOptsLowPriorityQueueLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(20))).clone(namedValues=NamedValues(("default", 20))).clone('default')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfCctOptsLowPriorityQueueLimit.setStatus('mandatory')
wfCctOptsMaxInterruptQueueLatency = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 1, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(100, 5000)).clone(2500)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfCctOptsMaxInterruptQueueLatency.setStatus('mandatory')
wfCctOptsMaxHighPriorityQueueLatency = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 1, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(100, 5000)).clone(250)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfCctOptsMaxHighPriorityQueueLatency.setStatus('mandatory')
wfCctOptsHiXmits = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 1, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfCctOptsHiXmits.setStatus('mandatory')
wfCctOptsNormalXmits = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 1, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfCctOptsNormalXmits.setStatus('mandatory')
wfCctOptsLoXmits = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 1, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfCctOptsLoXmits.setStatus('mandatory')
wfCctOptsHiClippedPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 1, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfCctOptsHiClippedPkts.setStatus('mandatory')
wfCctOptsNormalClippedPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 1, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfCctOptsNormalClippedPkts.setStatus('mandatory')
wfCctOptsLoClippedPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 1, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfCctOptsLoClippedPkts.setStatus('mandatory')
wfCctOptsIntrQHighWaterPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 1, 1, 15), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfCctOptsIntrQHighWaterPkts.setStatus('mandatory')
wfCctOptsHiQHighWaterPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 1, 1, 16), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfCctOptsHiQHighWaterPkts.setStatus('mandatory')
wfCctOptsNormalQHighWaterPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 1, 1, 17), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfCctOptsNormalQHighWaterPkts.setStatus('mandatory')
wfCctOptsLoQHighWaterPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 1, 1, 18), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfCctOptsLoQHighWaterPkts.setStatus('mandatory')
wfCctOptsHighWaterPktsClear = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 1, 1, 19), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfCctOptsHighWaterPktsClear.setStatus('mandatory')
wfCctOptsDroppedPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 1, 1, 20), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfCctOptsDroppedPkts.setStatus('mandatory')
wfCctOptsLargePkts = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 1, 1, 21), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfCctOptsLargePkts.setStatus('mandatory')
wfCctOptsRxPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 1, 1, 22), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfCctOptsRxPkts.setStatus('mandatory')
wfCctOptsChooserType = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 1, 1, 23), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("random", 1), ("addrbased", 2), ("multilinkfr", 3))).clone('addrbased')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfCctOptsChooserType.setStatus('mandatory')
wfCctOptsPqDequeueAlgType = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 1, 1, 24), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("prioritization", 1), ("allocation", 2))).clone('allocation')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfCctOptsPqDequeueAlgType.setStatus('mandatory')
wfCctOptsHiPercent = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 1, 1, 25), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(70))).clone(namedValues=NamedValues(("default", 70))).clone('default')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfCctOptsHiPercent.setStatus('mandatory')
wfCctOptsNormalPercent = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 1, 1, 26), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(20))).clone(namedValues=NamedValues(("default", 20))).clone('default')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfCctOptsNormalPercent.setStatus('mandatory')
wfCctOptsLoPercent = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 1, 1, 27), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(10))).clone(namedValues=NamedValues(("default", 10))).clone('default')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfCctOptsLoPercent.setStatus('mandatory')
wfCctOptsHiTotalOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 1, 1, 28), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfCctOptsHiTotalOctets.setStatus('mandatory')
wfCctOptsNormalTotalOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 1, 1, 29), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfCctOptsNormalTotalOctets.setStatus('mandatory')
wfCctOptsLoTotalOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 1, 1, 30), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfCctOptsLoTotalOctets.setStatus('mandatory')
wfCctOptsCircuitType = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 1, 1, 31), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 99))).clone(namedValues=NamedValues(("normal", 1), ("primary", 2), ("dialondemand", 3), ("bandwidthondemand", 4), ("standbyprimary", 5), ("unused", 99))).clone('normal')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfCctOptsCircuitType.setStatus('mandatory')
wfCctOptsBackupCct = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 1, 1, 32), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfCctOptsBackupCct.setStatus('mandatory')
wfCctOptsPrimaryCctWanProtocolType = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 1, 1, 33), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("unknown", 1), ("ppp", 2), ("relay", 3), ("sync", 4))).clone('unknown')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfCctOptsPrimaryCctWanProtocolType.setStatus('mandatory')
wfCctOptsMacFilterFormat = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 1, 1, 34), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("default", 1), ("tokenring", 2))).clone('default')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfCctOptsMacFilterFormat.setStatus('mandatory')
wfCctOptsPktsNotQueued = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 1, 1, 35), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfCctOptsPktsNotQueued.setStatus('mandatory')
wfCctOptsBitsShiftCount = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 1, 1, 36), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 30))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfCctOptsBitsShiftCount.setStatus('mandatory')
wfCctOptsFrSetDeLowQ = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 1, 1, 37), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("default", 1), ("dontsetdebit", 2))).clone('default')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfCctOptsFrSetDeLowQ.setStatus('mandatory')
wfCctOptsFrSetDeNormQ = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 1, 1, 38), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("default", 1), ("setdebit", 2))).clone('default')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfCctOptsFrSetDeNormQ.setStatus('mandatory')
wfCctOptsShapedPriorityQueueLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 1, 1, 39), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(200))).clone(namedValues=NamedValues(("default", 200))).clone('default')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfCctOptsShapedPriorityQueueLimit.setStatus('mandatory')
wfCctOptsMaxShapedPriorityQueueLatency = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 1, 1, 40), Integer32().subtype(subtypeSpec=ValueRangeConstraint(100, 5000)).clone(250)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfCctOptsMaxShapedPriorityQueueLatency.setStatus('mandatory')
wfCctOptsShapedXmits = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 1, 1, 41), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfCctOptsShapedXmits.setStatus('mandatory')
wfCctOptsShapedClippedPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 1, 1, 42), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfCctOptsShapedClippedPkts.setStatus('mandatory')
wfCctOptsShapedQHighWaterPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 1, 1, 43), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfCctOptsShapedQHighWaterPkts.setStatus('mandatory')
wfCctOptsShapedTotalOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 1, 1, 44), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfCctOptsShapedTotalOctets.setStatus('mandatory')
wfCctOptsPpqDebugLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 1, 1, 45), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4)).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfCctOptsPpqDebugLevel.setStatus('mandatory')
wfDequeueAtLineRate = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 1, 1, 46), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDequeueAtLineRate.setStatus('mandatory')
wfCctOptsBrFilterTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 2), )
if mibBuilder.loadTexts: wfCctOptsBrFilterTable.setStatus('mandatory')
wfCctOptsBrFilterEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 2, 1), ).setIndexNames((0, "Wellfleet-CCTOPTS-MIB", "wfCctOptsBrFilterCct"), (0, "Wellfleet-CCTOPTS-MIB", "wfCctOptsBrFilterRuleNumber"), (0, "Wellfleet-CCTOPTS-MIB", "wfCctOptsBrFilterFragment"))
if mibBuilder.loadTexts: wfCctOptsBrFilterEntry.setStatus('mandatory')
wfCctOptsBrFilterCreate = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 2, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("created", 1), ("deleted", 2))).clone('created')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfCctOptsBrFilterCreate.setStatus('mandatory')
wfCctOptsBrFilterEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfCctOptsBrFilterEnable.setStatus('mandatory')
wfCctOptsBrFilterState = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("active", 1), ("error", 2), ("inactive", 3))).clone('inactive')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfCctOptsBrFilterState.setStatus('mandatory')
wfCctOptsBrFilterCounter = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 2, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfCctOptsBrFilterCounter.setStatus('mandatory')
wfCctOptsBrFilterDefinition = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 2, 1, 5), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfCctOptsBrFilterDefinition.setStatus('mandatory')
wfCctOptsBrFilterReserved = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 2, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfCctOptsBrFilterReserved.setStatus('mandatory')
wfCctOptsBrFilterCct = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 2, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfCctOptsBrFilterCct.setStatus('mandatory')
wfCctOptsBrFilterRuleNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 2, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfCctOptsBrFilterRuleNumber.setStatus('mandatory')
wfCctOptsBrFilterFragment = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 2, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfCctOptsBrFilterFragment.setStatus('mandatory')
wfCctOptsBrFilterName = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 2, 1, 10), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfCctOptsBrFilterName.setStatus('mandatory')
wfCctOptsIpFilterTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 3), )
if mibBuilder.loadTexts: wfCctOptsIpFilterTable.setStatus('mandatory')
wfCctOptsIpFilterEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 3, 1), ).setIndexNames((0, "Wellfleet-CCTOPTS-MIB", "wfCctOptsIpFilterCct"), (0, "Wellfleet-CCTOPTS-MIB", "wfCctOptsIpFilterRuleNumber"), (0, "Wellfleet-CCTOPTS-MIB", "wfCctOptsIpFilterFragment"))
if mibBuilder.loadTexts: wfCctOptsIpFilterEntry.setStatus('mandatory')
wfCctOptsIpFilterCreate = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 3, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("created", 1), ("deleted", 2))).clone('created')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfCctOptsIpFilterCreate.setStatus('mandatory')
wfCctOptsIpFilterEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 3, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfCctOptsIpFilterEnable.setStatus('mandatory')
wfCctOptsIpFilterState = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 3, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("active", 1), ("error", 2), ("inactive", 3))).clone('inactive')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfCctOptsIpFilterState.setStatus('mandatory')
wfCctOptsIpFilterCounter = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 3, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfCctOptsIpFilterCounter.setStatus('mandatory')
wfCctOptsIpFilterDefinition = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 3, 1, 5), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfCctOptsIpFilterDefinition.setStatus('mandatory')
wfCctOptsIpFilterReserved = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 3, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfCctOptsIpFilterReserved.setStatus('mandatory')
wfCctOptsIpFilterCct = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 3, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfCctOptsIpFilterCct.setStatus('mandatory')
wfCctOptsIpFilterRuleNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 3, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfCctOptsIpFilterRuleNumber.setStatus('mandatory')
wfCctOptsIpFilterFragment = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 3, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfCctOptsIpFilterFragment.setStatus('mandatory')
wfCctOptsIpFilterName = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 3, 1, 10), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfCctOptsIpFilterName.setStatus('mandatory')
wfCctOptsLengthBasedTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 4), )
if mibBuilder.loadTexts: wfCctOptsLengthBasedTable.setStatus('mandatory')
wfCctOptsLengthBasedEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 4, 1), ).setIndexNames((0, "Wellfleet-CCTOPTS-MIB", "wfCctOptsLengthBasedCct"), (0, "Wellfleet-CCTOPTS-MIB", "wfCctOptsLengthBasedMux"), (0, "Wellfleet-CCTOPTS-MIB", "wfCctOptsLengthBasedData"))
if mibBuilder.loadTexts: wfCctOptsLengthBasedEntry.setStatus('mandatory')
wfCctOptsLengthBasedDelete = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 4, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("created", 1), ("deleted", 2))).clone('created')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfCctOptsLengthBasedDelete.setStatus('mandatory')
wfCctOptsLengthBasedDisable = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 4, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfCctOptsLengthBasedDisable.setStatus('mandatory')
wfCctOptsLengthBasedState = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 4, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("active", 1), ("error", 2), ("inactive", 3))).clone('inactive')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfCctOptsLengthBasedState.setStatus('mandatory')
wfCctOptsLengthBasedCct = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 4, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfCctOptsLengthBasedCct.setStatus('mandatory')
wfCctOptsLengthBasedMux = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 4, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("etype", 1), ("lsap", 2), ("snap", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfCctOptsLengthBasedMux.setStatus('mandatory')
wfCctOptsLengthBasedData = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 4, 1, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(5, 5)).setFixedLength(5)).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfCctOptsLengthBasedData.setStatus('mandatory')
wfCctOptsLengthBasedLength = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 4, 1, 7), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfCctOptsLengthBasedLength.setStatus('mandatory')
wfCctOptsLengthBasedLessThanQ = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 4, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(3, 2, 1))).clone(namedValues=NamedValues(("hi", 3), ("normal", 2), ("lo", 1))).clone('normal')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfCctOptsLengthBasedLessThanQ.setStatus('mandatory')
wfCctOptsLengthBasedGreaterThanQ = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 4, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(3, 2, 1))).clone(namedValues=NamedValues(("hi", 3), ("normal", 2), ("lo", 1))).clone('lo')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfCctOptsLengthBasedGreaterThanQ.setStatus('mandatory')
wfSwservOptsTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 5), )
if mibBuilder.loadTexts: wfSwservOptsTable.setStatus('mandatory')
wfSwservOptsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 5, 1), ).setIndexNames((0, "Wellfleet-CCTOPTS-MIB", "wfSwservOptsCct"))
if mibBuilder.loadTexts: wfSwservOptsEntry.setStatus('mandatory')
wfSwservOptsDelete = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 5, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("created", 1), ("deleted", 2))).clone('created')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfSwservOptsDelete.setStatus('mandatory')
wfSwservOptsCct = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 5, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfSwservOptsCct.setStatus('mandatory')
wfSwservOptsCircuitType = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 5, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("normal", 1), ("primary", 2), ("dialondemand", 3), ("bandwidthondemand", 4))).clone('normal')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfSwservOptsCircuitType.setStatus('mandatory')
wfSwservOptsBackupCct = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 5, 1, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfSwservOptsBackupCct.setStatus('mandatory')
wfSwservOptsBackupPool = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 5, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfSwservOptsBackupPool.setStatus('mandatory')
wfSwservOptsDemandPool = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 5, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfSwservOptsDemandPool.setStatus('mandatory')
wfSwservOptsBackupMode = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 5, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("master", 1), ("slave", 2))).clone('master')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfSwservOptsBackupMode.setStatus('mandatory')
wfSwservOptsActiveBackupCct = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 5, 1, 8), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfSwservOptsActiveBackupCct.setStatus('mandatory')
wfSwservOptsForcedDial = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 5, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfSwservOptsForcedDial.setStatus('mandatory')
wfSwservOptsMaxUpTime = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 5, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 999999)).clone(60)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfSwservOptsMaxUpTime.setStatus('mandatory')
wfSwservOptsBringUpHour = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 5, 1, 11), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfSwservOptsBringUpHour.setStatus('mandatory')
wfSwservOptsBringUpMinute = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 5, 1, 12), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfSwservOptsBringUpMinute.setStatus('mandatory')
wfSwservOptsTakeDownHour = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 5, 1, 13), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfSwservOptsTakeDownHour.setStatus('mandatory')
wfSwservOptsTakeDownMinute = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 5, 1, 14), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfSwservOptsTakeDownMinute.setStatus('mandatory')
wfSwservOptsInactivityTime = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 5, 1, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)).clone(60)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfSwservOptsInactivityTime.setStatus('mandatory')
wfSwservOptsCircuitState = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 5, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("active", 1), ("inactive", 2), ("notpresent", 3))).clone('notpresent')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfSwservOptsCircuitState.setStatus('mandatory')
wfSwservOptsPrimaryDownTime = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 5, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(5))).clone(namedValues=NamedValues(("default", 5))).clone('default')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfSwservOptsPrimaryDownTime.setStatus('mandatory')
wfSwservOptsNumOutgoingConn = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 5, 1, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfSwservOptsNumOutgoingConn.setStatus('mandatory')
wfSwservOptsNumIncomingConn = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 5, 1, 19), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfSwservOptsNumIncomingConn.setStatus('mandatory')
wfSwservOptsActiveSlot = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 5, 1, 20), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfSwservOptsActiveSlot.setStatus('mandatory')
wfSwservOptsActiveLine = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 5, 1, 21), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfSwservOptsActiveLine.setStatus('mandatory')
wfSwservOptsPacketsDropped = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 5, 1, 22), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfSwservOptsPacketsDropped.setStatus('mandatory')
wfSwservOptsTimeLastPktDropped = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 5, 1, 23), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfSwservOptsTimeLastPktDropped.setStatus('mandatory')
wfSwservOptsForcedTakedown = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 5, 1, 24), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfSwservOptsForcedTakedown.setStatus('mandatory')
wfSwservOptsRetryMax = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 5, 1, 25), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 10)).clone(2)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfSwservOptsRetryMax.setStatus('mandatory')
wfSwservOptsRetryCount = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 5, 1, 26), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfSwservOptsRetryCount.setStatus('mandatory')
wfSwservOptsRetryDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 5, 1, 27), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 60)).clone(3)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfSwservOptsRetryDelay.setStatus('mandatory')
wfSwservOptsDemandConnectionMode = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 5, 1, 28), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("nodial", 1), ("collmaster", 2), ("collslave", 3))).clone('collmaster')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfSwservOptsDemandConnectionMode.setStatus('mandatory')
wfSwservOptsAutoDemandTermination = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 5, 1, 29), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfSwservOptsAutoDemandTermination.setStatus('mandatory')
wfSwservOptsAutoDemandTermReset = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 5, 1, 30), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 999999)).clone(60)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfSwservOptsAutoDemandTermReset.setStatus('mandatory')
wfSwservOptsChapLocalName = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 5, 1, 31), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfSwservOptsChapLocalName.setStatus('mandatory')
wfSwservOptsChapSecret = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 5, 1, 32), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfSwservOptsChapSecret.setStatus('mandatory')
wfSwservOptsMaxUpTermination = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 5, 1, 33), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfSwservOptsMaxUpTermination.setStatus('mandatory')
wfSwservOptsMaxUpTermReset = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 5, 1, 34), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 999999)).clone(60)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfSwservOptsMaxUpTermReset.setStatus('mandatory')
wfSwservOptsBandwidthPool = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 5, 1, 35), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfSwservOptsBandwidthPool.setStatus('mandatory')
wfSwservOptsBandwidthMode = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 5, 1, 36), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("monitor", 1), ("normal", 2))).clone('normal')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfSwservOptsBandwidthMode.setStatus('mandatory')
wfSwservOptsPapId = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 5, 1, 37), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfSwservOptsPapId.setStatus('mandatory')
wfSwservOptsPapPassword = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 5, 1, 38), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfSwservOptsPapPassword.setStatus('mandatory')
wfSwservOptsDebugMsgLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 5, 1, 39), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("one", 1), ("two", 2), ("three", 3), ("debug", 4))).clone('debug')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfSwservOptsDebugMsgLevel.setStatus('mandatory')
wfSwservOptsDmdCctGroupNum = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 5, 1, 40), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfSwservOptsDmdCctGroupNum.setStatus('mandatory')
wfSwservOptsWanProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 5, 1, 41), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("unknown", 1), ("ppp", 2), ("fr", 3), ("frswitch", 4))).clone('ppp')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfSwservOptsWanProtocol.setStatus('mandatory')
wfSwservOptsSecondaryCct = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 5, 1, 42), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfSwservOptsSecondaryCct.setStatus('mandatory')
wfSwservOptsPoolLineNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 5, 1, 43), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfSwservOptsPoolLineNumber.setStatus('mandatory')
wfSwservOptsPoolLineIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 5, 1, 44), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfSwservOptsPoolLineIndex.setStatus('mandatory')
wfSwservOptsMinDuration = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 5, 1, 45), Integer32().subtype(subtypeSpec=ValueRangeConstraint(10, 2147483647)).clone(60)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfSwservOptsMinDuration.setStatus('mandatory')
wfSwservOptsInactivityMode = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 5, 1, 46), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("bothdirection", 1), ("transmitonly", 2), ("receiveonly", 3), ("eitherdirection", 4))).clone('bothdirection')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfSwservOptsInactivityMode.setStatus('mandatory')
wfSwservOptsOpportunityRouting = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 5, 1, 47), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfSwservOptsOpportunityRouting.setStatus('mandatory')
wfSwservOptsOutboundAuth = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 5, 1, 48), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfSwservOptsOutboundAuth.setStatus('mandatory')
wfSwservOptsOverSubRetryTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 5, 1, 49), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1440)).clone(2)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfSwservOptsOverSubRetryTimer.setStatus('mandatory')
wfSwservOptsStandbyMode = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 5, 1, 50), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("demandnormal", 1), ("standbynormal", 2), ("standbyhot", 3))).clone('demandnormal')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfSwservOptsStandbyMode.setStatus('mandatory')
wfSwservOptsStandbyFailBackMode = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 5, 1, 51), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("none", 1), ("automatic", 2), ("manual", 3))).clone('none')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfSwservOptsStandbyFailBackMode.setStatus('mandatory')
wfSwservOptsManualStandbyAction = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 5, 1, 52), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("noaction", 1), ("activate", 2), ("deactivate", 3))).clone('noaction')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfSwservOptsManualStandbyAction.setStatus('mandatory')
wfSwservOptsCallbackMode = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 5, 1, 53), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9))).clone(namedValues=NamedValues(("inactive", 1), ("server", 2), ("client", 3), ("server-callid", 4), ("client-one-charge", 5), ("server-one-charge", 6), ("server-one-charge-callid", 7), ("client-rfc1570", 8), ("server-rfc1570", 9))).clone('inactive')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfSwservOptsCallbackMode.setStatus('mandatory')
wfSwservOptsCallbackServerDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 5, 1, 54), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1800))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfSwservOptsCallbackServerDelay.setStatus('mandatory')
wfSwservOptsCallbackClientDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 5, 1, 55), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1800)).clone(5)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfSwservOptsCallbackClientDelay.setStatus('mandatory')
wfSwservOptsQueueSize = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 5, 1, 56), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 20)).clone(6)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfSwservOptsQueueSize.setStatus('mandatory')
wfSwservOptsDequeueWaitTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 5, 1, 57), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 600))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfSwservOptsDequeueWaitTimer.setStatus('mandatory')
wfSwservOptsMru = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 5, 1, 58), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4600)).clone(1500)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfSwservOptsMru.setStatus('mandatory')
wfSwservOptsRfc1661Compliance = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 5, 1, 59), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfSwservOptsRfc1661Compliance.setStatus('mandatory')
wfSwservOptsBootupDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 5, 1, 60), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfSwservOptsBootupDelay.setStatus('mandatory')
wfSwservOptsCallbackOptRfc1570 = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 5, 1, 61), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("location", 1), ("dialstring", 2), ("locationid", 3), ("e164number", 4), ("name", 5))).clone('dialstring')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfSwservOptsCallbackOptRfc1570.setStatus('mandatory')
wfSwservOptsCallbackDataRfc1570 = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 5, 1, 62), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfSwservOptsCallbackDataRfc1570.setStatus('mandatory')
wfSwservOutPhoneNumTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 6), )
if mibBuilder.loadTexts: wfSwservOutPhoneNumTable.setStatus('mandatory')
wfSwservOutPhoneNumEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 6, 1), ).setIndexNames((0, "Wellfleet-CCTOPTS-MIB", "wfSwservOutPhoneNumCct"), (0, "Wellfleet-CCTOPTS-MIB", "wfSwservOutPhoneNumIndex"))
if mibBuilder.loadTexts: wfSwservOutPhoneNumEntry.setStatus('mandatory')
wfSwservOutPhoneNumDelete = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 6, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("create", 1), ("delete", 2))).clone('create')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfSwservOutPhoneNumDelete.setStatus('mandatory')
wfSwservOutPhoneNumCct = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 6, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1023))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfSwservOutPhoneNumCct.setStatus('mandatory')
wfSwservOutPhoneNumIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 6, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfSwservOutPhoneNumIndex.setStatus('mandatory')
wfSwservOutPhoneNumRmtStationNum = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 6, 1, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfSwservOutPhoneNumRmtStationNum.setStatus('mandatory')
wfSwservOutPhoneNumSubAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 6, 1, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfSwservOutPhoneNumSubAddr.setStatus('mandatory')
wfSwservOutPhoneNumDelimiter = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 6, 1, 6), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfSwservOutPhoneNumDelimiter.setStatus('mandatory')
wfSwservOutPhoneNumType = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 6, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("dial", 1), ("isdn", 2), ("dialasync", 3))).clone('dial')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfSwservOutPhoneNumType.setStatus('mandatory')
wfSwservOutPhoneNumTypeofNum = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 6, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 16, 32, 48, 64, 96))).clone(namedValues=NamedValues(("unknown", 1), ("international", 16), ("national", 32), ("specific", 48), ("subscriber", 64), ("abbreviated", 96))).clone('unknown')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfSwservOutPhoneNumTypeofNum.setStatus('mandatory')
wfSwservOutPhoneNumPlan = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 6, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(16, 1, 3, 4, 8, 9))).clone(namedValues=NamedValues(("unknown", 16), ("telephony", 1), ("x121", 3), ("telex", 4), ("standard", 8), ("private", 9))).clone('unknown')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfSwservOutPhoneNumPlan.setStatus('mandatory')
wfSwservOutPhoneNumRateAdaption = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 6, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("rate64", 1), ("rate56", 2))).clone('rate64')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfSwservOutPhoneNumRateAdaption.setStatus('mandatory')
wfSwservOutPhoneNumRemotePoolType = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 6, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("dialondemand", 1), ("bandwidthondemand", 2), ("dialandbandwidth", 3))).clone('dialandbandwidth')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfSwservOutPhoneNumRemotePoolType.setStatus('mandatory')
wfSwservOutPhoneNumConnectionType = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 6, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("single", 1), ("multiple", 2))).clone('multiple')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfSwservOutPhoneNumConnectionType.setStatus('mandatory')
wfSwservOutPhoneNumChannelType = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 6, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("bchannel", 1), ("multirate", 2))).clone('bchannel')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfSwservOutPhoneNumChannelType.setStatus('mandatory')
wfSwservOutPhoneNumAggrChanCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 6, 1, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(2, 23))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfSwservOutPhoneNumAggrChanCnt.setStatus('mandatory')
wfSwservOutPhoneNumPrefix = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 6, 1, 15), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfSwservOutPhoneNumPrefix.setStatus('mandatory')
wfSwservOutPhoneNumBearerService = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 6, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("voice", 1), ("data", 2))).clone('data')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfSwservOutPhoneNumBearerService.setStatus('mandatory')
wfSwservInPhoneNumTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 7), )
if mibBuilder.loadTexts: wfSwservInPhoneNumTable.setStatus('mandatory')
wfSwservInPhoneNumEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 7, 1), ).setIndexNames((0, "Wellfleet-CCTOPTS-MIB", "wfSwservInPhoneNumIndex"))
if mibBuilder.loadTexts: wfSwservInPhoneNumEntry.setStatus('mandatory')
wfSwservInPhoneNumDelete = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 7, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("create", 1), ("delete", 2))).clone('create')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfSwservInPhoneNumDelete.setStatus('mandatory')
wfSwservInPhoneNumIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 7, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfSwservInPhoneNumIndex.setStatus('mandatory')
wfSwservInPhoneNumRmtStationNum = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 7, 1, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfSwservInPhoneNumRmtStationNum.setStatus('mandatory')
wfSwservInPhoneNumSubAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 7, 1, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfSwservInPhoneNumSubAddr.setStatus('mandatory')
wfSwservInPhoneNumDelimiter = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 7, 1, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfSwservInPhoneNumDelimiter.setStatus('mandatory')
wfSwservInPhoneNumType = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 7, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("dial", 1), ("isdn", 2))).clone('dial')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfSwservInPhoneNumType.setStatus('mandatory')
wfSwservInPhoneNumTypeofNum = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 7, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 16, 32, 48, 64, 96))).clone(namedValues=NamedValues(("unknown", 1), ("international", 16), ("national", 32), ("specific", 48), ("subscriber", 64), ("abbreviated", 96))).clone('unknown')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfSwservInPhoneNumTypeofNum.setStatus('mandatory')
wfSwservInPhoneNumPlan = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 7, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(16, 1, 3, 4, 8, 9))).clone(namedValues=NamedValues(("unknown", 16), ("telephony", 1), ("x121", 3), ("telex", 4), ("standard", 8), ("private", 9))).clone('unknown')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfSwservInPhoneNumPlan.setStatus('mandatory')
wfSwservInPhoneNumCct = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 7, 1, 9), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfSwservInPhoneNumCct.setStatus('mandatory')
wfCctOptsBrBuPppFilterTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 8), )
if mibBuilder.loadTexts: wfCctOptsBrBuPppFilterTable.setStatus('mandatory')
wfCctOptsBrBuPppFilterEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 8, 1), ).setIndexNames((0, "Wellfleet-CCTOPTS-MIB", "wfCctOptsBrBuPppFilterCct"), (0, "Wellfleet-CCTOPTS-MIB", "wfCctOptsBrBuPppFilterRuleNumber"), (0, "Wellfleet-CCTOPTS-MIB", "wfCctOptsBrBuPppFilterFragment"))
if mibBuilder.loadTexts: wfCctOptsBrBuPppFilterEntry.setStatus('mandatory')
wfCctOptsBrBuPppFilterCreate = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 8, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("created", 1), ("deleted", 2))).clone('created')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfCctOptsBrBuPppFilterCreate.setStatus('mandatory')
wfCctOptsBrBuPppFilterEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 8, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfCctOptsBrBuPppFilterEnable.setStatus('mandatory')
wfCctOptsBrBuPppFilterState = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 8, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("active", 1), ("error", 2), ("inactive", 3))).clone('inactive')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfCctOptsBrBuPppFilterState.setStatus('mandatory')
wfCctOptsBrBuPppFilterCounter = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 8, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfCctOptsBrBuPppFilterCounter.setStatus('mandatory')
wfCctOptsBrBuPppFilterDefinition = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 8, 1, 5), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfCctOptsBrBuPppFilterDefinition.setStatus('mandatory')
wfCctOptsBrBuPppFilterReserved = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 8, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfCctOptsBrBuPppFilterReserved.setStatus('mandatory')
wfCctOptsBrBuPppFilterCct = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 8, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfCctOptsBrBuPppFilterCct.setStatus('mandatory')
wfCctOptsBrBuPppFilterRuleNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 8, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfCctOptsBrBuPppFilterRuleNumber.setStatus('mandatory')
wfCctOptsBrBuPppFilterFragment = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 8, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfCctOptsBrBuPppFilterFragment.setStatus('mandatory')
wfCctOptsBrBuPppFilterName = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 8, 1, 10), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfCctOptsBrBuPppFilterName.setStatus('mandatory')
wfCctOptsIpBuPppFilterTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 9), )
if mibBuilder.loadTexts: wfCctOptsIpBuPppFilterTable.setStatus('mandatory')
wfCctOptsIpBuPppFilterEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 9, 1), ).setIndexNames((0, "Wellfleet-CCTOPTS-MIB", "wfCctOptsIpBuPppFilterCct"), (0, "Wellfleet-CCTOPTS-MIB", "wfCctOptsIpBuPppFilterRuleNumber"), (0, "Wellfleet-CCTOPTS-MIB", "wfCctOptsIpBuPppFilterFragment"))
if mibBuilder.loadTexts: wfCctOptsIpBuPppFilterEntry.setStatus('mandatory')
wfCctOptsIpBuPppFilterCreate = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 9, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("created", 1), ("deleted", 2))).clone('created')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfCctOptsIpBuPppFilterCreate.setStatus('mandatory')
wfCctOptsIpBuPppFilterEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 9, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfCctOptsIpBuPppFilterEnable.setStatus('mandatory')
wfCctOptsIpBuPppFilterState = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 9, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("active", 1), ("error", 2), ("inactive", 3))).clone('inactive')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfCctOptsIpBuPppFilterState.setStatus('mandatory')
wfCctOptsIpBuPppFilterCounter = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 9, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfCctOptsIpBuPppFilterCounter.setStatus('mandatory')
wfCctOptsIpBuPppFilterDefinition = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 9, 1, 5), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfCctOptsIpBuPppFilterDefinition.setStatus('mandatory')
wfCctOptsIpBuPppFilterReserved = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 9, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfCctOptsIpBuPppFilterReserved.setStatus('mandatory')
wfCctOptsIpBuPppFilterCct = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 9, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfCctOptsIpBuPppFilterCct.setStatus('mandatory')
wfCctOptsIpBuPppFilterRuleNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 9, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfCctOptsIpBuPppFilterRuleNumber.setStatus('mandatory')
wfCctOptsIpBuPppFilterFragment = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 9, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfCctOptsIpBuPppFilterFragment.setStatus('mandatory')
wfCctOptsIpBuPppFilterName = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 9, 1, 10), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfCctOptsIpBuPppFilterName.setStatus('mandatory')
wfCctOptsCngcTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 10), )
if mibBuilder.loadTexts: wfCctOptsCngcTable.setStatus('mandatory')
wfCctOptsCngcEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 10, 1), ).setIndexNames((0, "Wellfleet-CCTOPTS-MIB", "wfCctOptsCngcCct"))
if mibBuilder.loadTexts: wfCctOptsCngcEntry.setStatus('mandatory')
wfCctOptsCngcDelete = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 10, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("created", 1), ("deleted", 2))).clone('created')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfCctOptsCngcDelete.setStatus('mandatory')
wfCctOptsCngcDisable = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 10, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfCctOptsCngcDisable.setStatus('mandatory')
wfCctOptsCngcCct = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 10, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfCctOptsCngcCct.setStatus('mandatory')
wfCctOptsCngcSmdsDiscardability = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 10, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("datagram", 1), ("frde", 2), ("frnde", 3))).clone('datagram')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfCctOptsCngcSmdsDiscardability.setStatus('mandatory')
wfCctOptsCngcCfgSwtxqThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 10, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 256))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfCctOptsCngcCfgSwtxqThreshold.setStatus('mandatory')
wfCctOptsCngcSwtxqThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 10, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfCctOptsCngcSwtxqThreshold.setStatus('mandatory')
wfCctOptsCngcCngLevel0Threshold = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 10, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 100)).clone(25)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfCctOptsCngcCngLevel0Threshold.setStatus('mandatory')
wfCctOptsCngcCngLevel1Threshold = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 10, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 100)).clone(50)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfCctOptsCngcCngLevel1Threshold.setStatus('mandatory')
wfCctOptsCngcCngLevel2Threshold = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 10, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 100)).clone(75)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfCctOptsCngcCngLevel2Threshold.setStatus('mandatory')
wfCctOptsCngcLinkType = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 10, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("access", 1), ("nodal", 2))).clone('access')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfCctOptsCngcLinkType.setStatus('mandatory')
wfCctOptsCngcTrfPriorityEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 10, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfCctOptsCngcTrfPriorityEnable.setStatus('mandatory')
wfCctOptsCngcPortIPTrfPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 10, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("one", 1), ("two", 2), ("three", 3))).clone('two')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfCctOptsCngcPortIPTrfPriority.setStatus('mandatory')
wfCctOptsCngcPortTrfDiscardLvl = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 10, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("one", 1), ("two", 2), ("three", 3), ("four", 4))).clone('two')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfCctOptsCngcPortTrfDiscardLvl.setStatus('mandatory')
wfCctOptsCngcPortTrfPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 10, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("one", 1), ("two", 2), ("three", 3))).clone('two')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfCctOptsCngcPortTrfPriority.setStatus('mandatory')
wfCctOptsCngcCfgHwtxQThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 10, 1, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 64))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfCctOptsCngcCfgHwtxQThreshold.setStatus('mandatory')
wfCctOptsCngcHwtxQThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 10, 1, 16), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfCctOptsCngcHwtxQThreshold.setStatus('mandatory')
wfCctOptsCngcSndTrapForPktsDropped = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 10, 1, 17), Integer32().subtype(subtypeSpec=ValueRangeConstraint(100, 1000000)).clone(100000)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfCctOptsCngcSndTrapForPktsDropped.setStatus('mandatory')
wfCctOptsCngcCfgQp0Threshold = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 10, 1, 18), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2048))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfCctOptsCngcCfgQp0Threshold.setStatus('mandatory')
wfCctOptsCngcQp0Threshold = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 10, 1, 19), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfCctOptsCngcQp0Threshold.setStatus('mandatory')
wfCctOptsCngcQp0CngLvl0Threshold = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 10, 1, 20), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 100)).clone(25)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfCctOptsCngcQp0CngLvl0Threshold.setStatus('mandatory')
wfCctOptsCngcQp0CngLvl1Threshold = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 10, 1, 21), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 100)).clone(50)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfCctOptsCngcQp0CngLvl1Threshold.setStatus('mandatory')
wfCctOptsCngcQp0CngLvl2Threshold = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 10, 1, 22), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 100)).clone(75)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfCctOptsCngcQp0CngLvl2Threshold.setStatus('mandatory')
wfCctOptsCngcQp0PktsServPriNxtQ = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 10, 1, 23), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 20)).clone(2)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfCctOptsCngcQp0PktsServPriNxtQ.setStatus('mandatory')
wfCctOptsCngcCfgQp1Threshold = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 10, 1, 24), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2048))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfCctOptsCngcCfgQp1Threshold.setStatus('mandatory')
wfCctOptsCngcQp1Threshold = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 10, 1, 25), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfCctOptsCngcQp1Threshold.setStatus('mandatory')
wfCctOptsCngcQp1CngLvl0Threshold = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 10, 1, 26), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 100)).clone(25)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfCctOptsCngcQp1CngLvl0Threshold.setStatus('mandatory')
wfCctOptsCngcQp1CngLvl1Threshold = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 10, 1, 27), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 100)).clone(50)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfCctOptsCngcQp1CngLvl1Threshold.setStatus('mandatory')
wfCctOptsCngcQp1CngLvl2Threshold = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 10, 1, 28), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 100)).clone(75)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfCctOptsCngcQp1CngLvl2Threshold.setStatus('mandatory')
wfCctOptsCngcQp1PktsServPriNxtQ = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 10, 1, 29), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 20)).clone(2)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfCctOptsCngcQp1PktsServPriNxtQ.setStatus('mandatory')
wfCctOptsCngcCfgQp2Threshold = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 10, 1, 30), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2048))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfCctOptsCngcCfgQp2Threshold.setStatus('mandatory')
wfCctOptsCngcQp2Threshold = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 10, 1, 31), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfCctOptsCngcQp2Threshold.setStatus('mandatory')
wfCctOptsCngcQp2CngLvl0Threshold = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 10, 1, 32), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 100)).clone(25)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfCctOptsCngcQp2CngLvl0Threshold.setStatus('mandatory')
wfCctOptsCngcQp2CngLvl1Threshold = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 10, 1, 33), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 100)).clone(50)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfCctOptsCngcQp2CngLvl1Threshold.setStatus('mandatory')
wfCctOptsCngcQp2CngLvl2Threshold = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 10, 1, 34), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 100)).clone(75)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfCctOptsCngcQp2CngLvl2Threshold.setStatus('mandatory')
wfCctOptsCngcQp2PktsServPriNxtQ = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 10, 1, 35), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 20)).clone(2)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfCctOptsCngcQp2PktsServPriNxtQ.setStatus('mandatory')
wfCctOptsCngcCfgQp3Threshold = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 10, 1, 36), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2048))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfCctOptsCngcCfgQp3Threshold.setStatus('mandatory')
wfCctOptsCngcQp3Threshold = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 10, 1, 37), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfCctOptsCngcQp3Threshold.setStatus('mandatory')
wfCctOptsCngcQp3CngLvl0Threshold = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 10, 1, 38), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 100)).clone(25)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfCctOptsCngcQp3CngLvl0Threshold.setStatus('mandatory')
wfCctOptsCngcQp3CngLvl1Threshold = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 10, 1, 39), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 100)).clone(50)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfCctOptsCngcQp3CngLvl1Threshold.setStatus('mandatory')
wfCctOptsCngcQp3CngLvl2Threshold = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 10, 1, 40), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 100)).clone(75)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfCctOptsCngcQp3CngLvl2Threshold.setStatus('mandatory')
wfCctOptsCngcPriority0TxPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 10, 1, 41), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfCctOptsCngcPriority0TxPkts.setStatus('mandatory')
wfCctOptsCngcPriority0TxOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 10, 1, 42), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfCctOptsCngcPriority0TxOctets.setStatus('mandatory')
wfCctOptsCngcPriority0DropPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 10, 1, 43), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfCctOptsCngcPriority0DropPkts.setStatus('mandatory')
wfCctOptsCngcPriority0DropOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 10, 1, 44), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfCctOptsCngcPriority0DropOctets.setStatus('mandatory')
wfCctOptsCngcPriority1TxPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 10, 1, 45), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfCctOptsCngcPriority1TxPkts.setStatus('mandatory')
wfCctOptsCngcPriority1TxOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 10, 1, 46), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfCctOptsCngcPriority1TxOctets.setStatus('mandatory')
wfCctOptsCngcPriority1DropPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 10, 1, 47), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfCctOptsCngcPriority1DropPkts.setStatus('mandatory')
wfCctOptsCngcPriority1DropOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 10, 1, 48), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfCctOptsCngcPriority1DropOctets.setStatus('mandatory')
wfCctOptsCngcPriority2TxPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 10, 1, 49), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfCctOptsCngcPriority2TxPkts.setStatus('mandatory')
wfCctOptsCngcPriority2TxOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 10, 1, 50), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfCctOptsCngcPriority2TxOctets.setStatus('mandatory')
wfCctOptsCngcPriority2DropPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 10, 1, 51), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfCctOptsCngcPriority2DropPkts.setStatus('mandatory')
wfCctOptsCngcPriority2DropOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 10, 1, 52), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfCctOptsCngcPriority2DropOctets.setStatus('mandatory')
wfCctOptsCngcPriority3TxPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 10, 1, 53), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfCctOptsCngcPriority3TxPkts.setStatus('mandatory')
wfCctOptsCngcPriority3TxOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 10, 1, 54), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfCctOptsCngcPriority3TxOctets.setStatus('mandatory')
wfCctOptsCngcPriority3DropPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 10, 1, 55), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfCctOptsCngcPriority3DropPkts.setStatus('mandatory')
wfCctOptsCngcPriority3DropOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 10, 1, 56), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfCctOptsCngcPriority3DropOctets.setStatus('mandatory')
wfCctOptsCngcTxFRNonDePkts = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 10, 1, 57), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfCctOptsCngcTxFRNonDePkts.setStatus('mandatory')
wfCctOptsCngcTxFRNonDeOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 10, 1, 58), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfCctOptsCngcTxFRNonDeOctets.setStatus('mandatory')
wfCctOptsCngcTxFRDePkts = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 10, 1, 59), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfCctOptsCngcTxFRDePkts.setStatus('mandatory')
wfCctOptsCngcTxFRDeOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 10, 1, 60), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfCctOptsCngcTxFRDeOctets.setStatus('mandatory')
wfCctOptsCngcDropFRNonDePkts = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 10, 1, 61), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfCctOptsCngcDropFRNonDePkts.setStatus('mandatory')
wfCctOptsCngcDropFRNonDeOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 10, 1, 62), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfCctOptsCngcDropFRNonDeOctets.setStatus('mandatory')
wfCctOptsCngcDropFRDePkts = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 10, 1, 63), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfCctOptsCngcDropFRDePkts.setStatus('mandatory')
wfCctOptsCngcDropFRDeOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 10, 1, 64), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfCctOptsCngcDropFRDeOctets.setStatus('mandatory')
wfCctOptsCngcFRSetFecnPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 10, 1, 65), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfCctOptsCngcFRSetFecnPkts.setStatus('mandatory')
wfCctOptsCngcFRSetFecnOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 10, 1, 66), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfCctOptsCngcFRSetFecnOctets.setStatus('mandatory')
wfCctOptsCngcFRSetBecnPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 10, 1, 67), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfCctOptsCngcFRSetBecnPkts.setStatus('mandatory')
wfCctOptsCngcFRSetBecnOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 10, 1, 68), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfCctOptsCngcFRSetBecnOctets.setStatus('mandatory')
wfCctOptsCngcDropNonFRPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 10, 1, 69), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfCctOptsCngcDropNonFRPkts.setStatus('mandatory')
wfCctOptsCngcDropNonFROctets = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 10, 1, 70), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfCctOptsCngcDropNonFROctets.setStatus('mandatory')
wfCctOptsCngcLogPower = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 10, 1, 71), Integer32().subtype(subtypeSpec=ValueRangeConstraint(10, 31)).clone(31)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfCctOptsCngcLogPower.setStatus('mandatory')
wfSwservTODTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 11), )
if mibBuilder.loadTexts: wfSwservTODTable.setStatus('mandatory')
wfSwservTODEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 11, 1), ).setIndexNames((0, "Wellfleet-CCTOPTS-MIB", "wfSwservTODCct"), (0, "Wellfleet-CCTOPTS-MIB", "wfSwservTODIndex"))
if mibBuilder.loadTexts: wfSwservTODEntry.setStatus('mandatory')
wfSwservTODDelete = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 11, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("create", 1), ("delete", 2))).clone('create')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfSwservTODDelete.setStatus('mandatory')
wfSwservTODCct = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 11, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1023))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfSwservTODCct.setStatus('mandatory')
wfSwservTODIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 11, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 24))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfSwservTODIndex.setStatus('mandatory')
wfSwservTODType = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 11, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9))).clone(namedValues=NamedValues(("sun", 1), ("mon", 2), ("tues", 3), ("wed", 4), ("thurs", 5), ("fri", 6), ("sat", 7), ("weekday", 8), ("weekend", 9))).clone('weekday')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfSwservTODType.setStatus('mandatory')
wfSwservTODStartTime = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 11, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2400))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfSwservTODStartTime.setStatus('mandatory')
wfSwservTODEndTime = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 11, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2400)).clone(2400)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfSwservTODEndTime.setStatus('mandatory')
wfSwservTODInactivityEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 11, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfSwservTODInactivityEnable.setStatus('mandatory')
wfSwservTODAvailabilityMode = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 11, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("available", 1), ("notavailable", 2))).clone('available')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfSwservTODAvailabilityMode.setStatus('mandatory')
wfSwservTODStandbyFailBackMode = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 11, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("automatic", 1), ("manual", 2))).clone('automatic')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfSwservTODStandbyFailBackMode.setStatus('mandatory')
wfSwservTODStandbyFailBackTime = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 11, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1439))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfSwservTODStandbyFailBackTime.setStatus('mandatory')
wfDemandCctGrpTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 12), )
if mibBuilder.loadTexts: wfDemandCctGrpTable.setStatus('mandatory')
wfDemandCctGrpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 12, 1), ).setIndexNames((0, "Wellfleet-CCTOPTS-MIB", "wfDmdCctGroupNum"), (0, "Wellfleet-CCTOPTS-MIB", "wfDmdCctGroupPoolId"))
if mibBuilder.loadTexts: wfDemandCctGrpEntry.setStatus('mandatory')
wfDmdCctGroupDelete = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 12, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("created", 1), ("deleted", 2))).clone('created')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDmdCctGroupDelete.setStatus('mandatory')
wfDmdCctGroupNum = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 12, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDmdCctGroupNum.setStatus('mandatory')
wfDmdCctGroupPoolId = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 12, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDmdCctGroupPoolId.setStatus('mandatory')
wfDmdCctGroupNumofCcts = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 12, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 124)).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDmdCctGroupNumofCcts.setStatus('mandatory')
wfDmdCctGroupIPEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 12, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDmdCctGroupIPEnable.setStatus('mandatory')
wfDmdCctGroupIPUnnumAssoc = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 12, 1, 6), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDmdCctGroupIPUnnumAssoc.setStatus('mandatory')
wfDmdCctGroupRIPEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 12, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDmdCctGroupRIPEnable.setStatus('mandatory')
wfDmdCctGroupOSPFEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 12, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDmdCctGroupOSPFEnable.setStatus('mandatory')
wfDmdCctGroupIPXEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 12, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDmdCctGroupIPXEnable.setStatus('mandatory')
wfDmdCctGroupBridgeEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 12, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDmdCctGroupBridgeEnable.setStatus('mandatory')
wfDmdCctGroupCctList = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 12, 1, 11), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDmdCctGroupCctList.setStatus('mandatory')
wfDmdCctGroupIPXRouting = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 12, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("rip", 1), ("nlsp", 2), ("ripnlsp", 3))).clone('rip')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDmdCctGroupIPXRouting.setStatus('mandatory')
wfDmdCctGroupIPXWANEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 12, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDmdCctGroupIPXWANEnable.setStatus('mandatory')
wfDmdCctGroupRadiusEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 4, 12, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDmdCctGroupRadiusEnable.setStatus('mandatory')
mibBuilder.exportSymbols("Wellfleet-CCTOPTS-MIB", wfCctOptsBrBuPppFilterCounter=wfCctOptsBrBuPppFilterCounter, wfSwservOutPhoneNumRemotePoolType=wfSwservOutPhoneNumRemotePoolType, wfSwservInPhoneNumPlan=wfSwservInPhoneNumPlan, wfCctOptsNormalPriorityQueueLimit=wfCctOptsNormalPriorityQueueLimit, wfDmdCctGroupCctList=wfDmdCctGroupCctList, wfSwservOptsPapPassword=wfSwservOptsPapPassword, wfCctOptsCngcQp1PktsServPriNxtQ=wfCctOptsCngcQp1PktsServPriNxtQ, wfCctOptsIpFilterReserved=wfCctOptsIpFilterReserved, wfCctOptsCngcHwtxQThreshold=wfCctOptsCngcHwtxQThreshold, wfSwservTODAvailabilityMode=wfSwservTODAvailabilityMode, wfCctOptsCngcPriority2TxOctets=wfCctOptsCngcPriority2TxOctets, wfSwservOptsMru=wfSwservOptsMru, wfSwservOutPhoneNumType=wfSwservOutPhoneNumType, wfSwservOptsChapSecret=wfSwservOptsChapSecret, wfCctOptsIpBuPppFilterRuleNumber=wfCctOptsIpBuPppFilterRuleNumber, wfSwservOptsDemandConnectionMode=wfSwservOptsDemandConnectionMode, wfCctOptsBrFilterRuleNumber=wfCctOptsBrFilterRuleNumber, wfDmdCctGroupDelete=wfDmdCctGroupDelete, wfCctOptsHiQHighWaterPkts=wfCctOptsHiQHighWaterPkts, wfSwservOptsCallbackServerDelay=wfSwservOptsCallbackServerDelay, wfDmdCctGroupIPXRouting=wfDmdCctGroupIPXRouting, wfSwservOptsBandwidthPool=wfSwservOptsBandwidthPool, wfCctOptsCngcDisable=wfCctOptsCngcDisable, wfCctOptsLoClippedPkts=wfCctOptsLoClippedPkts, wfCctOptsCngcCct=wfCctOptsCngcCct, wfCctOptsIpBuPppFilterTable=wfCctOptsIpBuPppFilterTable, wfCctOptsBrFilterName=wfCctOptsBrFilterName, wfSwservTODEndTime=wfSwservTODEndTime, wfCctOptsCngcQp0CngLvl1Threshold=wfCctOptsCngcQp0CngLvl1Threshold, wfDequeueAtLineRate=wfDequeueAtLineRate, wfCctOptsDroppedPkts=wfCctOptsDroppedPkts, wfSwservInPhoneNumTypeofNum=wfSwservInPhoneNumTypeofNum, wfCctOptsPktsNotQueued=wfCctOptsPktsNotQueued, wfCctOptsCngcQp1CngLvl0Threshold=wfCctOptsCngcQp1CngLvl0Threshold, wfCctOptsCngcTxFRNonDePkts=wfCctOptsCngcTxFRNonDePkts, wfCctOptsBrBuPppFilterTable=wfCctOptsBrBuPppFilterTable, wfCctOptsShapedPriorityQueueLimit=wfCctOptsShapedPriorityQueueLimit, wfCctOptsCngcDelete=wfCctOptsCngcDelete, wfCctOptsLengthBasedLength=wfCctOptsLengthBasedLength, wfCctOptsTable=wfCctOptsTable, wfCctOptsLengthBasedDisable=wfCctOptsLengthBasedDisable, wfCctOptsCngcDropNonFROctets=wfCctOptsCngcDropNonFROctets, wfCctOptsPpqDebugLevel=wfCctOptsPpqDebugLevel, wfCctOptsBrBuPppFilterState=wfCctOptsBrBuPppFilterState, wfCctOptsLoXmits=wfCctOptsLoXmits, wfCctOptsCngcPriority1TxPkts=wfCctOptsCngcPriority1TxPkts, wfSwservInPhoneNumEntry=wfSwservInPhoneNumEntry, wfDmdCctGroupOSPFEnable=wfDmdCctGroupOSPFEnable, wfCctOptsCngcSndTrapForPktsDropped=wfCctOptsCngcSndTrapForPktsDropped, wfCctOptsCngcTxFRNonDeOctets=wfCctOptsCngcTxFRNonDeOctets, wfCctOptsCngcDropNonFRPkts=wfCctOptsCngcDropNonFRPkts, wfSwservInPhoneNumCct=wfSwservInPhoneNumCct, wfSwservOptsSecondaryCct=wfSwservOptsSecondaryCct, wfSwservOptsForcedTakedown=wfSwservOptsForcedTakedown, wfCctOptsBrBuPppFilterRuleNumber=wfCctOptsBrBuPppFilterRuleNumber, wfCctOptsBrFilterEntry=wfCctOptsBrFilterEntry, wfCctOptsCngcQp3Threshold=wfCctOptsCngcQp3Threshold, wfSwservOutPhoneNumRmtStationNum=wfSwservOutPhoneNumRmtStationNum, wfSwservTODType=wfSwservTODType, wfSwservOptsNumOutgoingConn=wfSwservOptsNumOutgoingConn, wfSwservTODInactivityEnable=wfSwservTODInactivityEnable, wfCctOptsCngcPriority2DropPkts=wfCctOptsCngcPriority2DropPkts, wfSwservOptsTable=wfSwservOptsTable, wfCctOptsIpFilterTable=wfCctOptsIpFilterTable, wfCctOptsCngcQp0Threshold=wfCctOptsCngcQp0Threshold, wfCctOptsCngcDropFRDePkts=wfCctOptsCngcDropFRDePkts, wfSwservOptsChapLocalName=wfSwservOptsChapLocalName, wfCctOptsLengthBasedLessThanQ=wfCctOptsLengthBasedLessThanQ, wfSwservOptsDequeueWaitTimer=wfSwservOptsDequeueWaitTimer, wfSwservOptsCct=wfSwservOptsCct, wfCctOptsNormalXmits=wfCctOptsNormalXmits, wfSwservOptsAutoDemandTermReset=wfSwservOptsAutoDemandTermReset, wfCctOptsShapedClippedPkts=wfCctOptsShapedClippedPkts, wfSwservOptsInactivityTime=wfSwservOptsInactivityTime, wfSwservOutPhoneNumTable=wfSwservOutPhoneNumTable, wfCctOptsCircuitType=wfCctOptsCircuitType, wfSwservOptsStandbyMode=wfSwservOptsStandbyMode, wfCctOptsBitsShiftCount=wfCctOptsBitsShiftCount, wfCctOptsFrSetDeNormQ=wfCctOptsFrSetDeNormQ, wfSwservOptsPacketsDropped=wfSwservOptsPacketsDropped, wfCctOptsCngcCngLevel2Threshold=wfCctOptsCngcCngLevel2Threshold, wfCctOptsLengthBasedTable=wfCctOptsLengthBasedTable, wfCctOptsCngcQp1CngLvl2Threshold=wfCctOptsCngcQp1CngLvl2Threshold, wfSwservOptsInactivityMode=wfSwservOptsInactivityMode, wfDmdCctGroupPoolId=wfDmdCctGroupPoolId, wfSwservOptsActiveLine=wfSwservOptsActiveLine, wfCctOptsLengthBasedEntry=wfCctOptsLengthBasedEntry, wfSwservOptsMinDuration=wfSwservOptsMinDuration, wfDmdCctGroupIPEnable=wfDmdCctGroupIPEnable, wfCctOptsCngcPriority3DropOctets=wfCctOptsCngcPriority3DropOctets, wfCctOptsLengthBasedDelete=wfCctOptsLengthBasedDelete, wfSwservInPhoneNumRmtStationNum=wfSwservInPhoneNumRmtStationNum, wfCctOptsBrBuPppFilterEntry=wfCctOptsBrBuPppFilterEntry, wfCctOptsCngcFRSetBecnOctets=wfCctOptsCngcFRSetBecnOctets, wfCctOptsChooserType=wfCctOptsChooserType, wfCctOptsCngcTable=wfCctOptsCngcTable, wfCctOptsNormalClippedPkts=wfCctOptsNormalClippedPkts, wfCctOptsCngcQp1CngLvl1Threshold=wfCctOptsCngcQp1CngLvl1Threshold, wfCctOptsCngcCfgQp2Threshold=wfCctOptsCngcCfgQp2Threshold, wfCctOptsLargePkts=wfCctOptsLargePkts, wfCctOptsCngcQp3CngLvl0Threshold=wfCctOptsCngcQp3CngLvl0Threshold, wfDmdCctGroupIPXWANEnable=wfDmdCctGroupIPXWANEnable, wfCctOptsIpFilterName=wfCctOptsIpFilterName, wfCctOptsCngcSmdsDiscardability=wfCctOptsCngcSmdsDiscardability, wfCctOptsBrFilterCct=wfCctOptsBrFilterCct, wfDmdCctGroupBridgeEnable=wfDmdCctGroupBridgeEnable, wfSwservOptsBringUpMinute=wfSwservOptsBringUpMinute, wfSwservOutPhoneNumBearerService=wfSwservOutPhoneNumBearerService, wfCctOptsLowPriorityQueueLimit=wfCctOptsLowPriorityQueueLimit, wfCctOptsCngcCfgQp1Threshold=wfCctOptsCngcCfgQp1Threshold, wfCctOptsIpFilterEnable=wfCctOptsIpFilterEnable, wfCctOptsEntry=wfCctOptsEntry, wfSwservOptsBackupCct=wfSwservOptsBackupCct, wfCctOptsHiPercent=wfCctOptsHiPercent, wfCctOptsCngcCfgSwtxqThreshold=wfCctOptsCngcCfgSwtxqThreshold, wfCctOptsCngcQp0PktsServPriNxtQ=wfCctOptsCngcQp0PktsServPriNxtQ, wfCctOptsHiClippedPkts=wfCctOptsHiClippedPkts, wfCctOptsLoTotalOctets=wfCctOptsLoTotalOctets, wfSwservOptsEntry=wfSwservOptsEntry, wfCctOptsBrBuPppFilterCreate=wfCctOptsBrBuPppFilterCreate, wfCctOptsMaxHighPriorityQueueLatency=wfCctOptsMaxHighPriorityQueueLatency, wfSwservTODDelete=wfSwservTODDelete, wfSwservOutPhoneNumPlan=wfSwservOutPhoneNumPlan, wfSwservInPhoneNumTable=wfSwservInPhoneNumTable, wfSwservTODEntry=wfSwservTODEntry, wfCctOptsDelete=wfCctOptsDelete, wfSwservOutPhoneNumChannelType=wfSwservOutPhoneNumChannelType, wfCctOptsCngcPriority1DropPkts=wfCctOptsCngcPriority1DropPkts, wfCctOptsPqDequeueAlgType=wfCctOptsPqDequeueAlgType, wfCctOptsMacFilterFormat=wfCctOptsMacFilterFormat, wfSwservOptsAutoDemandTermination=wfSwservOptsAutoDemandTermination, wfCctOptsCngcQp3CngLvl1Threshold=wfCctOptsCngcQp3CngLvl1Threshold, wfCctOptsCngcPriority0DropOctets=wfCctOptsCngcPriority0DropOctets, wfCctOptsIntrQHighWaterPkts=wfCctOptsIntrQHighWaterPkts, wfCctOptsNormalTotalOctets=wfCctOptsNormalTotalOctets, wfCctOptsIpBuPppFilterCounter=wfCctOptsIpBuPppFilterCounter, wfSwservInPhoneNumIndex=wfSwservInPhoneNumIndex, wfSwservInPhoneNumSubAddr=wfSwservInPhoneNumSubAddr, wfCctOptsNormalPercent=wfCctOptsNormalPercent, wfSwservOptsBootupDelay=wfSwservOptsBootupDelay, wfSwservInPhoneNumDelimiter=wfSwservInPhoneNumDelimiter, wfDmdCctGroupNum=wfDmdCctGroupNum, wfCctOptsCngcCngLevel1Threshold=wfCctOptsCngcCngLevel1Threshold, wfCctOptsCngcPriority1TxOctets=wfCctOptsCngcPriority1TxOctets, wfSwservOptsBackupPool=wfSwservOptsBackupPool, wfSwservInPhoneNumDelete=wfSwservInPhoneNumDelete, wfCctOptsCngcPortTrfPriority=wfCctOptsCngcPortTrfPriority, wfCctOptsHighWaterPktsClear=wfCctOptsHighWaterPktsClear, wfCctOptsShapedTotalOctets=wfCctOptsShapedTotalOctets, wfCctOptsLengthBasedGreaterThanQ=wfCctOptsLengthBasedGreaterThanQ, wfSwservOptsCallbackClientDelay=wfSwservOptsCallbackClientDelay, wfCctOptsCngcTrfPriorityEnable=wfCctOptsCngcTrfPriorityEnable, wfCctOptsCngcPriority2DropOctets=wfCctOptsCngcPriority2DropOctets, wfSwservOptsManualStandbyAction=wfSwservOptsManualStandbyAction, wfSwservOptsRetryCount=wfSwservOptsRetryCount, wfSwservOutPhoneNumDelimiter=wfSwservOutPhoneNumDelimiter, wfCctOptsIpFilterCounter=wfCctOptsIpFilterCounter, wfCctOptsBackupCct=wfCctOptsBackupCct, wfCctOptsIpBuPppFilterDefinition=wfCctOptsIpBuPppFilterDefinition, wfCctOptsHiTotalOctets=wfCctOptsHiTotalOctets, wfCctOptsCngcFRSetFecnOctets=wfCctOptsCngcFRSetFecnOctets, wfCctOptsLengthBasedData=wfCctOptsLengthBasedData, wfSwservOptsCircuitState=wfSwservOptsCircuitState, wfCctOptsIpFilterDefinition=wfCctOptsIpFilterDefinition, wfCctOptsCngcFRSetFecnPkts=wfCctOptsCngcFRSetFecnPkts, wfCctOptsCngcQp2CngLvl2Threshold=wfCctOptsCngcQp2CngLvl2Threshold, wfCctOptsCngcSwtxqThreshold=wfCctOptsCngcSwtxqThreshold, wfCctOptsCngcPriority3TxOctets=wfCctOptsCngcPriority3TxOctets, wfCctOptsCngcEntry=wfCctOptsCngcEntry, wfCctOptsIpBuPppFilterEntry=wfCctOptsIpBuPppFilterEntry, wfCctOptsCngcPriority2TxPkts=wfCctOptsCngcPriority2TxPkts, wfSwservOptsOverSubRetryTimer=wfSwservOptsOverSubRetryTimer, wfSwservOutPhoneNumCct=wfSwservOutPhoneNumCct, wfDmdCctGroupIPUnnumAssoc=wfDmdCctGroupIPUnnumAssoc, wfSwservOptsMaxUpTermReset=wfSwservOptsMaxUpTermReset, wfCctOptsCngcQp3CngLvl2Threshold=wfCctOptsCngcQp3CngLvl2Threshold, wfCctOptsCngcPriority0DropPkts=wfCctOptsCngcPriority0DropPkts, wfSwservOutPhoneNumIndex=wfSwservOutPhoneNumIndex, wfSwservOutPhoneNumTypeofNum=wfSwservOutPhoneNumTypeofNum, wfCctOptsBrBuPppFilterName=wfCctOptsBrBuPppFilterName, wfCctOptsIpFilterEntry=wfCctOptsIpFilterEntry, wfSwservOptsPapId=wfSwservOptsPapId, wfSwservOptsCallbackOptRfc1570=wfSwservOptsCallbackOptRfc1570, wfSwservOutPhoneNumDelete=wfSwservOutPhoneNumDelete, wfSwservOutPhoneNumAggrChanCnt=wfSwservOutPhoneNumAggrChanCnt, wfCctOptsIpBuPppFilterFragment=wfCctOptsIpBuPppFilterFragment, wfDmdCctGroupIPXEnable=wfDmdCctGroupIPXEnable, wfDemandCctGrpEntry=wfDemandCctGrpEntry, wfCctOptsCngcCfgHwtxQThreshold=wfCctOptsCngcCfgHwtxQThreshold, wfSwservOptsDebugMsgLevel=wfSwservOptsDebugMsgLevel, wfCctOptsBrFilterEnable=wfCctOptsBrFilterEnable, wfSwservOptsRetryDelay=wfSwservOptsRetryDelay, wfSwservOutPhoneNumPrefix=wfSwservOutPhoneNumPrefix, wfCctOptsCngcQp2CngLvl1Threshold=wfCctOptsCngcQp2CngLvl1Threshold, wfSwservOutPhoneNumRateAdaption=wfSwservOutPhoneNumRateAdaption, wfCctOptsCngcTxFRDeOctets=wfCctOptsCngcTxFRDeOctets, wfSwservOptsCallbackMode=wfSwservOptsCallbackMode, wfSwservTODStandbyFailBackMode=wfSwservTODStandbyFailBackMode, wfCctOptsFrSetDeLowQ=wfCctOptsFrSetDeLowQ, wfCctOptsCct=wfCctOptsCct, wfCctOptsCngcQp0CngLvl2Threshold=wfCctOptsCngcQp0CngLvl2Threshold, wfSwservOptsTakeDownHour=wfSwservOptsTakeDownHour, wfCctOptsHighPriorityQueueLimit=wfCctOptsHighPriorityQueueLimit, wfSwservInPhoneNumType=wfSwservInPhoneNumType, wfCctOptsIpBuPppFilterCreate=wfCctOptsIpBuPppFilterCreate, wfCctOptsLoPercent=wfCctOptsLoPercent, wfCctOptsCngcLinkType=wfCctOptsCngcLinkType, wfCctOptsBrFilterReserved=wfCctOptsBrFilterReserved, wfCctOptsLengthBasedCct=wfCctOptsLengthBasedCct, wfSwservOptsWanProtocol=wfSwservOptsWanProtocol, wfSwservOptsRetryMax=wfSwservOptsRetryMax, wfCctOptsBrBuPppFilterDefinition=wfCctOptsBrBuPppFilterDefinition, wfCctOptsCngcPortIPTrfPriority=wfCctOptsCngcPortIPTrfPriority, wfCctOptsNormalQHighWaterPkts=wfCctOptsNormalQHighWaterPkts, wfSwservOptsCallbackDataRfc1570=wfSwservOptsCallbackDataRfc1570, wfDmdCctGroupRIPEnable=wfDmdCctGroupRIPEnable, wfSwservOptsQueueSize=wfSwservOptsQueueSize, wfSwservOptsPoolLineIndex=wfSwservOptsPoolLineIndex, wfDmdCctGroupNumofCcts=wfDmdCctGroupNumofCcts, wfCctOptsCngcPortTrfDiscardLvl=wfCctOptsCngcPortTrfDiscardLvl, wfSwservOptsDmdCctGroupNum=wfSwservOptsDmdCctGroupNum, wfCctOptsPriorityQueueingDisable=wfCctOptsPriorityQueueingDisable, wfCctOptsBrBuPppFilterFragment=wfCctOptsBrBuPppFilterFragment, wfSwservOptsOutboundAuth=wfSwservOptsOutboundAuth, wfSwservOptsOpportunityRouting=wfSwservOptsOpportunityRouting, wfCctOptsIpBuPppFilterEnable=wfCctOptsIpBuPppFilterEnable, wfCctOptsCngcQp2Threshold=wfCctOptsCngcQp2Threshold, wfSwservOptsTimeLastPktDropped=wfSwservOptsTimeLastPktDropped, wfCctOptsIpFilterFragment=wfCctOptsIpFilterFragment, wfSwservOptsBringUpHour=wfSwservOptsBringUpHour, wfSwservOptsTakeDownMinute=wfSwservOptsTakeDownMinute, wfSwservOutPhoneNumSubAddr=wfSwservOutPhoneNumSubAddr, wfDemandCctGrpTable=wfDemandCctGrpTable, wfSwservOptsActiveBackupCct=wfSwservOptsActiveBackupCct, wfCctOptsCngcPriority1DropOctets=wfCctOptsCngcPriority1DropOctets, wfCctOptsBrBuPppFilterEnable=wfCctOptsBrBuPppFilterEnable, wfSwservOptsBandwidthMode=wfSwservOptsBandwidthMode, wfCctOptsCngcCfgQp0Threshold=wfCctOptsCngcCfgQp0Threshold, wfCctOptsBrFilterCounter=wfCctOptsBrFilterCounter, wfSwservOptsNumIncomingConn=wfSwservOptsNumIncomingConn, wfCctOptsCngcFRSetBecnPkts=wfCctOptsCngcFRSetBecnPkts, wfCctOptsIpBuPppFilterReserved=wfCctOptsIpBuPppFilterReserved, wfCctOptsRxPkts=wfCctOptsRxPkts, wfSwservOptsRfc1661Compliance=wfSwservOptsRfc1661Compliance, wfCctOptsIpBuPppFilterCct=wfCctOptsIpBuPppFilterCct, wfCctOptsIpBuPppFilterName=wfCctOptsIpBuPppFilterName, wfCctOptsCngcPriority0TxPkts=wfCctOptsCngcPriority0TxPkts, wfSwservTODStartTime=wfSwservTODStartTime, wfCctOptsBrFilterState=wfCctOptsBrFilterState, wfSwservOptsActiveSlot=wfSwservOptsActiveSlot, wfCctOptsShapedXmits=wfCctOptsShapedXmits, wfSwservOptsDemandPool=wfSwservOptsDemandPool, wfCctOptsBrFilterTable=wfCctOptsBrFilterTable, wfSwservOptsPrimaryDownTime=wfSwservOptsPrimaryDownTime)
mibBuilder.exportSymbols("Wellfleet-CCTOPTS-MIB", wfCctOptsBrBuPppFilterReserved=wfCctOptsBrBuPppFilterReserved, wfCctOptsCngcLogPower=wfCctOptsCngcLogPower, wfCctOptsCngcQp1Threshold=wfCctOptsCngcQp1Threshold, wfSwservTODCct=wfSwservTODCct, wfCctOptsIpBuPppFilterState=wfCctOptsIpBuPppFilterState, wfSwservTODIndex=wfSwservTODIndex, wfSwservOptsForcedDial=wfSwservOptsForcedDial, wfCctOptsPrimaryCctWanProtocolType=wfCctOptsPrimaryCctWanProtocolType, wfSwservOptsDelete=wfSwservOptsDelete, wfCctOptsIpFilterCct=wfCctOptsIpFilterCct, wfSwservOptsCircuitType=wfSwservOptsCircuitType, wfCctOptsBrBuPppFilterCct=wfCctOptsBrBuPppFilterCct, wfCctOptsCngcCngLevel0Threshold=wfCctOptsCngcCngLevel0Threshold, wfCctOptsIpFilterRuleNumber=wfCctOptsIpFilterRuleNumber, wfCctOptsCngcQp2PktsServPriNxtQ=wfCctOptsCngcQp2PktsServPriNxtQ, wfCctOptsCngcCfgQp3Threshold=wfCctOptsCngcCfgQp3Threshold, wfCctOptsCngcDropFRNonDeOctets=wfCctOptsCngcDropFRNonDeOctets, wfCctOptsIpFilterState=wfCctOptsIpFilterState, wfCctOptsMaxShapedPriorityQueueLatency=wfCctOptsMaxShapedPriorityQueueLatency, wfCctOptsCngcQp2CngLvl0Threshold=wfCctOptsCngcQp2CngLvl0Threshold, wfSwservOutPhoneNumEntry=wfSwservOutPhoneNumEntry, wfSwservTODTable=wfSwservTODTable, wfCctOptsLengthBasedState=wfCctOptsLengthBasedState, wfSwservOptsBackupMode=wfSwservOptsBackupMode, wfCctOptsCngcPriority0TxOctets=wfCctOptsCngcPriority0TxOctets, wfSwservOptsMaxUpTermination=wfSwservOptsMaxUpTermination, wfSwservOptsPoolLineNumber=wfSwservOptsPoolLineNumber, wfCctOptsCngcQp0CngLvl0Threshold=wfCctOptsCngcQp0CngLvl0Threshold, wfCctOptsHiXmits=wfCctOptsHiXmits, wfCctOptsBrFilterDefinition=wfCctOptsBrFilterDefinition, wfCctOptsCngcTxFRDePkts=wfCctOptsCngcTxFRDePkts, wfCctOptsCngcDropFRDeOctets=wfCctOptsCngcDropFRDeOctets, wfCctOptsBrFilterCreate=wfCctOptsBrFilterCreate, wfCctOptsShapedQHighWaterPkts=wfCctOptsShapedQHighWaterPkts, wfCctOptsIpFilterCreate=wfCctOptsIpFilterCreate, wfSwservOptsMaxUpTime=wfSwservOptsMaxUpTime, wfDmdCctGroupRadiusEnable=wfDmdCctGroupRadiusEnable, wfCctOptsBrFilterFragment=wfCctOptsBrFilterFragment, wfCctOptsLengthBasedMux=wfCctOptsLengthBasedMux, wfSwservOptsStandbyFailBackMode=wfSwservOptsStandbyFailBackMode, wfCctOptsLoQHighWaterPkts=wfCctOptsLoQHighWaterPkts, wfCctOptsCngcDropFRNonDePkts=wfCctOptsCngcDropFRNonDePkts, wfSwservTODStandbyFailBackTime=wfSwservTODStandbyFailBackTime, wfCctOptsMaxInterruptQueueLatency=wfCctOptsMaxInterruptQueueLatency, wfCctOptsCngcPriority3TxPkts=wfCctOptsCngcPriority3TxPkts, wfSwservOutPhoneNumConnectionType=wfSwservOutPhoneNumConnectionType, wfCctOptsCngcPriority3DropPkts=wfCctOptsCngcPriority3DropPkts)
