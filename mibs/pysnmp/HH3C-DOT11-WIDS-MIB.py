#
# PySNMP MIB module HH3C-DOT11-WIDS-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/HH3C-DOT11-WIDS-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:13:22 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ConstraintsIntersection, ValueRangeConstraint, ConstraintsUnion, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ConstraintsIntersection", "ValueRangeConstraint", "ConstraintsUnion", "ValueSizeConstraint")
Hh3cDot11SSIDStringType, Hh3cDot11RadioScopeType, Hh3cDot11ChannelScopeType, Hh3cDot11RadioType, Hh3cDot11ObjectIDType, hh3cDot11 = mibBuilder.importSymbols("HH3C-DOT11-REF-MIB", "Hh3cDot11SSIDStringType", "Hh3cDot11RadioScopeType", "Hh3cDot11ChannelScopeType", "Hh3cDot11RadioType", "Hh3cDot11ObjectIDType", "hh3cDot11")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
IpAddress, ModuleIdentity, Integer32, iso, MibIdentifier, Counter32, Counter64, Bits, Gauge32, MibScalar, MibTable, MibTableRow, MibTableColumn, Unsigned32, TimeTicks, ObjectIdentity, NotificationType = mibBuilder.importSymbols("SNMPv2-SMI", "IpAddress", "ModuleIdentity", "Integer32", "iso", "MibIdentifier", "Counter32", "Counter64", "Bits", "Gauge32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Unsigned32", "TimeTicks", "ObjectIdentity", "NotificationType")
DateAndTime, MacAddress, RowStatus, TextualConvention, TruthValue, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "DateAndTime", "MacAddress", "RowStatus", "TextualConvention", "TruthValue", "DisplayString")
hh3cDot11WIDS = ModuleIdentity((1, 3, 6, 1, 4, 1, 25506, 2, 75, 5))
hh3cDot11WIDS.setRevisions(('2010-05-31 18:00', '2009-07-29 18:00', '2009-05-07 20:00', '2008-07-25 19:00', '2007-06-19 19:00', '2007-05-16 19:00', '2006-08-20 19:00',))
if mibBuilder.loadTexts: hh3cDot11WIDS.setLastUpdated('201005311800Z')
if mibBuilder.loadTexts: hh3cDot11WIDS.setOrganization('Hangzhou H3C Technologies Co., Ltd.')
class Hh3cDot11WIDSDevType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))
    namedValues = NamedValues(("client", 1), ("ap", 2), ("adhoc", 3), ("wirelessBridge", 4), ("unknown", 5))

class Hh3cDot11WIDSDevPermitType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("permit", 1), ("rogue", 2))

class Hh3cDot11WIDSAtkType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12))
    namedValues = NamedValues(("act", 1), ("asr", 2), ("aur", 3), ("daf", 4), ("dar", 5), ("ndf", 6), ("pbr", 7), ("rar", 8), ("saf", 9), ("sdf", 10), ("wiv", 11), ("unknown", 12))

hh3cDot11WIDSConfigGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 25506, 2, 75, 5, 1))
hh3cDot11WIDSGlobalConfigGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 25506, 2, 75, 5, 1, 1))
hh3cDot11WIDSDetectGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 25506, 2, 75, 5, 2))
hh3cDot11WIDSNotifyGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 25506, 2, 75, 5, 3))
hh3cDot11WIDSScanMode = MibScalar((1, 3, 6, 1, 4, 1, 25506, 2, 75, 5, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("all", 1), ("auto", 2))).clone('auto')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cDot11WIDSScanMode.setStatus('current')
hh3cDot11WIDSScanChannelList = MibScalar((1, 3, 6, 1, 4, 1, 25506, 2, 75, 5, 1, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cDot11WIDSScanChannelList.setStatus('obsolete')
hh3cDot11CntMsrMode = MibScalar((1, 3, 6, 1, 4, 1, 25506, 2, 75, 5, 1, 1, 3), Bits().clone(namedValues=NamedValues(("rogue", 0), ("adhoc", 1), ("config", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cDot11CntMsrMode.setStatus('current')
hh3cDot11DevAgingTime = MibScalar((1, 3, 6, 1, 4, 1, 25506, 2, 75, 5, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(300, 1800))).setUnits('second').setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cDot11DevAgingTime.setStatus('current')
hh3cDot11DynBlkListEnable = MibScalar((1, 3, 6, 1, 4, 1, 25506, 2, 75, 5, 1, 1, 5), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cDot11DynBlkListEnable.setStatus('current')
hh3cDot11DynBlkListLifeTime = MibScalar((1, 3, 6, 1, 4, 1, 25506, 2, 75, 5, 1, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(60, 3600))).setUnits('second').setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cDot11DynBlkListLifeTime.setStatus('current')
hh3cDot11FloodAtkDctEnable = MibScalar((1, 3, 6, 1, 4, 1, 25506, 2, 75, 5, 1, 1, 7), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cDot11FloodAtkDctEnable.setStatus('current')
hh3cDot11SpoofAtkDctEnable = MibScalar((1, 3, 6, 1, 4, 1, 25506, 2, 75, 5, 1, 1, 8), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cDot11SpoofAtkDctEnable.setStatus('current')
hh3cDot11WeakIVAtkDctEnable = MibScalar((1, 3, 6, 1, 4, 1, 25506, 2, 75, 5, 1, 1, 9), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cDot11WeakIVAtkDctEnable.setStatus('current')
hh3cDot11ResetWIDSRogueHistory = MibScalar((1, 3, 6, 1, 4, 1, 25506, 2, 75, 5, 1, 1, 10), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cDot11ResetWIDSRogueHistory.setStatus('current')
hh3cDot11ResetWIDSHistroy = MibScalar((1, 3, 6, 1, 4, 1, 25506, 2, 75, 5, 1, 1, 11), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cDot11ResetWIDSHistroy.setStatus('current')
hh3cDot11ResetWIDSStatistics = MibScalar((1, 3, 6, 1, 4, 1, 25506, 2, 75, 5, 1, 1, 12), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cDot11ResetWIDSStatistics.setStatus('current')
hh3cDot11ResetAllDynBlkList = MibScalar((1, 3, 6, 1, 4, 1, 25506, 2, 75, 5, 1, 1, 13), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cDot11ResetAllDynBlkList.setStatus('current')
hh3cDot11ResetAllStcBlkList = MibScalar((1, 3, 6, 1, 4, 1, 25506, 2, 75, 5, 1, 1, 14), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cDot11ResetAllStcBlkList.setStatus('current')
hh3cDot11ResetAllWhtBlkList = MibScalar((1, 3, 6, 1, 4, 1, 25506, 2, 75, 5, 1, 1, 15), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cDot11ResetAllWhtBlkList.setStatus('current')
hh3cDot11ResetAllDctRogueAP = MibScalar((1, 3, 6, 1, 4, 1, 25506, 2, 75, 5, 1, 1, 16), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cDot11ResetAllDctRogueAP.setStatus('current')
hh3cDot11ResetAllDctRogueSta = MibScalar((1, 3, 6, 1, 4, 1, 25506, 2, 75, 5, 1, 1, 17), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cDot11ResetAllDctRogueSta.setStatus('current')
hh3cDot11ResetAllDctAdhoc = MibScalar((1, 3, 6, 1, 4, 1, 25506, 2, 75, 5, 1, 1, 18), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cDot11ResetAllDctAdhoc.setStatus('current')
hh3cDot11ResetAllDctDevice = MibScalar((1, 3, 6, 1, 4, 1, 25506, 2, 75, 5, 1, 1, 19), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cDot11ResetAllDctDevice.setStatus('current')
hh3cDot11ResetAllDctSSID = MibScalar((1, 3, 6, 1, 4, 1, 25506, 2, 75, 5, 1, 1, 20), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cDot11ResetAllDctSSID.setStatus('current')
hh3cDot11WidsFloodInterval = MibScalar((1, 3, 6, 1, 4, 1, 25506, 2, 75, 5, 1, 1, 21), Unsigned32().clone(1)).setUnits('second').setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cDot11WidsFloodInterval.setStatus('current')
hh3cDot11WidsBlackListThreshold = MibScalar((1, 3, 6, 1, 4, 1, 25506, 2, 75, 5, 1, 1, 22), Unsigned32().clone(100)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cDot11WidsBlackListThreshold.setStatus('current')
hh3cDot11SSIDFilterOnOff = MibScalar((1, 3, 6, 1, 4, 1, 25506, 2, 75, 5, 1, 1, 23), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("on", 1), ("off", 2))).clone('on')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cDot11SSIDFilterOnOff.setStatus('current')
hh3cDot11BSSIDFilterOnOff = MibScalar((1, 3, 6, 1, 4, 1, 25506, 2, 75, 5, 1, 1, 24), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("on", 1), ("off", 2))).clone('on')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cDot11BSSIDFilterOnOff.setStatus('current')
hh3cDot11WIDSPermitVendorTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 2, 75, 5, 1, 2), )
if mibBuilder.loadTexts: hh3cDot11WIDSPermitVendorTable.setStatus('current')
hh3cDot11WIDSPermitVendorEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 2, 75, 5, 1, 2, 1), ).setIndexNames((0, "HH3C-DOT11-WIDS-MIB", "hh3cDot11VendorOUI"))
if mibBuilder.loadTexts: hh3cDot11WIDSPermitVendorEntry.setStatus('current')
hh3cDot11VendorOUI = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 75, 5, 1, 2, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(3, 3)).setFixedLength(3))
if mibBuilder.loadTexts: hh3cDot11VendorOUI.setStatus('current')
hh3cDot11PermitVendorRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 75, 5, 1, 2, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cDot11PermitVendorRowStatus.setStatus('current')
hh3cDot11VendorName = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 75, 5, 1, 2, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 127))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cDot11VendorName.setStatus('current')
hh3cDot11WIDSPermitSSIDTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 2, 75, 5, 1, 3), )
if mibBuilder.loadTexts: hh3cDot11WIDSPermitSSIDTable.setStatus('current')
hh3cDot11WIDSPermitSSIDEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 2, 75, 5, 1, 3, 1), ).setIndexNames((0, "HH3C-DOT11-WIDS-MIB", "hh3cDot11PermitSSID"))
if mibBuilder.loadTexts: hh3cDot11WIDSPermitSSIDEntry.setStatus('current')
hh3cDot11PermitSSID = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 75, 5, 1, 3, 1, 1), Hh3cDot11SSIDStringType().subtype(subtypeSpec=ValueSizeConstraint(0, 127)))
if mibBuilder.loadTexts: hh3cDot11PermitSSID.setStatus('current')
hh3cDot11PermitSSIDRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 75, 5, 1, 3, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cDot11PermitSSIDRowStatus.setStatus('current')
hh3cDot11PermitSSIDDetected = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 75, 5, 1, 3, 1, 3), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cDot11PermitSSIDDetected.setStatus('current')
hh3cDot11WIDSIgnoreListTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 2, 75, 5, 1, 4), )
if mibBuilder.loadTexts: hh3cDot11WIDSIgnoreListTable.setStatus('current')
hh3cDot11WIDSIgnoreListEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 2, 75, 5, 1, 4, 1), ).setIndexNames((0, "HH3C-DOT11-WIDS-MIB", "hh3cDot11IgnoreMAC"))
if mibBuilder.loadTexts: hh3cDot11WIDSIgnoreListEntry.setStatus('current')
hh3cDot11IgnoreMAC = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 75, 5, 1, 4, 1, 1), MacAddress())
if mibBuilder.loadTexts: hh3cDot11IgnoreMAC.setStatus('current')
hh3cDot11IgnoreListRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 75, 5, 1, 4, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cDot11IgnoreListRowStatus.setStatus('current')
hh3cDot11IgnoreMACDetected = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 75, 5, 1, 4, 1, 3), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cDot11IgnoreMACDetected.setStatus('current')
hh3cDot11IgnoreDevType = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 75, 5, 1, 4, 1, 4), Hh3cDot11WIDSDevType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cDot11IgnoreDevType.setStatus('current')
hh3cDot11WIDSAttackListTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 2, 75, 5, 1, 5), )
if mibBuilder.loadTexts: hh3cDot11WIDSAttackListTable.setStatus('current')
hh3cDot11WIDSAttackListEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 2, 75, 5, 1, 5, 1), ).setIndexNames((0, "HH3C-DOT11-WIDS-MIB", "hh3cDot11AttackDeviceMac"))
if mibBuilder.loadTexts: hh3cDot11WIDSAttackListEntry.setStatus('current')
hh3cDot11AttackDeviceMac = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 75, 5, 1, 5, 1, 1), MacAddress())
if mibBuilder.loadTexts: hh3cDot11AttackDeviceMac.setStatus('current')
hh3cDot11AttackListRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 75, 5, 1, 5, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cDot11AttackListRowStatus.setStatus('current')
hh3cDot11AttackDevDetected = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 75, 5, 1, 5, 1, 3), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cDot11AttackDevDetected.setStatus('current')
hh3cDot11AttackDevType = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 75, 5, 1, 5, 1, 4), Hh3cDot11WIDSDevType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cDot11AttackDevType.setStatus('current')
hh3cDot11StaticWhiteListTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 2, 75, 5, 1, 6), )
if mibBuilder.loadTexts: hh3cDot11StaticWhiteListTable.setStatus('current')
hh3cDot11StaticWhiteListEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 2, 75, 5, 1, 6, 1), ).setIndexNames((0, "HH3C-DOT11-WIDS-MIB", "hh3cDot11StaticWhiteListMAC"))
if mibBuilder.loadTexts: hh3cDot11StaticWhiteListEntry.setStatus('current')
hh3cDot11StaticWhiteListMAC = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 75, 5, 1, 6, 1, 1), MacAddress())
if mibBuilder.loadTexts: hh3cDot11StaticWhiteListMAC.setStatus('current')
hh3cDot11StaticWhiteListRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 75, 5, 1, 6, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cDot11StaticWhiteListRowStatus.setStatus('current')
hh3cDot11StaticBlackListTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 2, 75, 5, 1, 7), )
if mibBuilder.loadTexts: hh3cDot11StaticBlackListTable.setStatus('current')
hh3cDot11StaticBlackListEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 2, 75, 5, 1, 7, 1), ).setIndexNames((0, "HH3C-DOT11-WIDS-MIB", "hh3cDot11StaticBlackListMAC"))
if mibBuilder.loadTexts: hh3cDot11StaticBlackListEntry.setStatus('current')
hh3cDot11StaticBlackListMAC = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 75, 5, 1, 7, 1, 1), MacAddress())
if mibBuilder.loadTexts: hh3cDot11StaticBlackListMAC.setStatus('current')
hh3cDot11StaticBlackListRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 75, 5, 1, 7, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cDot11StaticBlackListRowStatus.setStatus('current')
hh3cDot11WIDSPermitBSSIDTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 2, 75, 5, 1, 8), )
if mibBuilder.loadTexts: hh3cDot11WIDSPermitBSSIDTable.setStatus('current')
hh3cDot11WIDSPermitBSSIDEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 2, 75, 5, 1, 8, 1), ).setIndexNames((0, "HH3C-DOT11-WIDS-MIB", "hh3cDot11PermitBSSID"))
if mibBuilder.loadTexts: hh3cDot11WIDSPermitBSSIDEntry.setStatus('current')
hh3cDot11PermitBSSID = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 75, 5, 1, 8, 1, 1), MacAddress())
if mibBuilder.loadTexts: hh3cDot11PermitBSSID.setStatus('current')
hh3cDot11PermitBSSIDDetected = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 75, 5, 1, 8, 1, 2), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cDot11PermitBSSIDDetected.setStatus('current')
hh3cDot11PermitBSSIDRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 75, 5, 1, 8, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cDot11PermitBSSIDRowStatus.setStatus('current')
hh3cDot11WIDSRogueAPTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 2, 75, 5, 2, 1), )
if mibBuilder.loadTexts: hh3cDot11WIDSRogueAPTable.setStatus('current')
hh3cDot11WIDSRogueAPEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 2, 75, 5, 2, 1, 1), ).setIndexNames((0, "HH3C-DOT11-WIDS-MIB", "hh3cDot11RogueAPBSSMAC"))
if mibBuilder.loadTexts: hh3cDot11WIDSRogueAPEntry.setStatus('current')
hh3cDot11RogueAPBSSMAC = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 75, 5, 2, 1, 1, 1), MacAddress())
if mibBuilder.loadTexts: hh3cDot11RogueAPBSSMAC.setStatus('current')
hh3cDot11RogueAPVendorName = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 75, 5, 2, 1, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 127))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cDot11RogueAPVendorName.setStatus('current')
hh3cDot11RogueAPMonitorNum = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 75, 5, 2, 1, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cDot11RogueAPMonitorNum.setStatus('current')
hh3cDot11RogueAPFirstDetectTm = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 75, 5, 2, 1, 1, 4), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cDot11RogueAPFirstDetectTm.setStatus('current')
hh3cDot11RogueAPLastDetectTm = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 75, 5, 2, 1, 1, 5), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cDot11RogueAPLastDetectTm.setStatus('current')
hh3cDot11RogueAPSSID = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 75, 5, 2, 1, 1, 6), Hh3cDot11SSIDStringType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cDot11RogueAPSSID.setStatus('current')
hh3cDot11RogueAPMaxSigStrength = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 75, 5, 2, 1, 1, 7), Integer32()).setUnits('dBm').setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cDot11RogueAPMaxSigStrength.setStatus('current')
hh3cDot11RogueAPChannel = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 75, 5, 2, 1, 1, 8), Hh3cDot11ChannelScopeType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cDot11RogueAPChannel.setStatus('current')
hh3cDot11RogueAPBeaconInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 75, 5, 2, 1, 1, 9), Integer32()).setUnits('millisecond').setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cDot11RogueAPBeaconInterval.setStatus('current')
hh3cDot11RogueAPAttackedStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 75, 5, 2, 1, 1, 10), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cDot11RogueAPAttackedStatus.setStatus('current')
hh3cDot11RogueAPToIgnore = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 75, 5, 2, 1, 1, 11), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cDot11RogueAPToIgnore.setStatus('current')
hh3cDot11RogueAPEncryptStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 75, 5, 2, 1, 1, 12), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cDot11RogueAPEncryptStatus.setStatus('current')
hh3cDot11RogueAPReset = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 75, 5, 2, 1, 1, 13), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cDot11RogueAPReset.setStatus('current')
hh3cDot11RogueAPFirstDetectTmStr = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 75, 5, 2, 1, 1, 14), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cDot11RogueAPFirstDetectTmStr.setStatus('current')
hh3cDot11RogueAPLastDetectTmStr = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 75, 5, 2, 1, 1, 15), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cDot11RogueAPLastDetectTmStr.setStatus('current')
hh3cDot11WIDSRogueAPExtTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 2, 75, 5, 2, 2), )
if mibBuilder.loadTexts: hh3cDot11WIDSRogueAPExtTable.setStatus('current')
hh3cDot11WIDSRogueAPExtEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 2, 75, 5, 2, 2, 1), ).setIndexNames((0, "HH3C-DOT11-WIDS-MIB", "hh3cDot11RogueAPBSSMAC"), (0, "HH3C-DOT11-WIDS-MIB", "hh3cDot11WIDSAPID"))
if mibBuilder.loadTexts: hh3cDot11WIDSRogueAPExtEntry.setStatus('current')
hh3cDot11WIDSAPID = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 75, 5, 2, 2, 1, 1), Hh3cDot11ObjectIDType())
if mibBuilder.loadTexts: hh3cDot11WIDSAPID.setStatus('current')
hh3cDot11DetectCurAPSigStrength = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 75, 5, 2, 2, 1, 2), Integer32()).setUnits('dBm').setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cDot11DetectCurAPSigStrength.setStatus('current')
hh3cDot11DetectAPByChannel = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 75, 5, 2, 2, 1, 3), Hh3cDot11ChannelScopeType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cDot11DetectAPByChannel.setStatus('current')
hh3cDot11DetectAPByRadioID = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 75, 5, 2, 2, 1, 4), Hh3cDot11RadioScopeType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cDot11DetectAPByRadioID.setStatus('current')
hh3cDot11AttackAPStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 75, 5, 2, 2, 1, 5), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cDot11AttackAPStatus.setStatus('current')
hh3cDot11DetectAPFirstTm = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 75, 5, 2, 2, 1, 6), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cDot11DetectAPFirstTm.setStatus('current')
hh3cDot11DetectAPLastTm = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 75, 5, 2, 2, 1, 7), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cDot11DetectAPLastTm.setStatus('current')
hh3cDot11WIDSRogueStaTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 2, 75, 5, 2, 3), )
if mibBuilder.loadTexts: hh3cDot11WIDSRogueStaTable.setStatus('current')
hh3cDot11WIDSRogueStaEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 2, 75, 5, 2, 3, 1), ).setIndexNames((0, "HH3C-DOT11-WIDS-MIB", "hh3cDot11RogueStaMAC"))
if mibBuilder.loadTexts: hh3cDot11WIDSRogueStaEntry.setStatus('current')
hh3cDot11RogueStaMAC = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 75, 5, 2, 3, 1, 1), MacAddress())
if mibBuilder.loadTexts: hh3cDot11RogueStaMAC.setStatus('current')
hh3cDot11RogueStaVendorName = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 75, 5, 2, 3, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 127))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cDot11RogueStaVendorName.setStatus('current')
hh3cDot11RogueStaMonitorNum = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 75, 5, 2, 3, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cDot11RogueStaMonitorNum.setStatus('current')
hh3cDot11RogueStaFirstDetectTm = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 75, 5, 2, 3, 1, 4), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cDot11RogueStaFirstDetectTm.setStatus('current')
hh3cDot11RogueStaLastDetectTm = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 75, 5, 2, 3, 1, 5), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cDot11RogueStaLastDetectTm.setStatus('current')
hh3cDot11RogueStaAccessBSSID = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 75, 5, 2, 3, 1, 6), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cDot11RogueStaAccessBSSID.setStatus('current')
hh3cDot11RogueStaMaxSigStrength = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 75, 5, 2, 3, 1, 7), Integer32()).setUnits('dBm').setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cDot11RogueStaMaxSigStrength.setStatus('current')
hh3cDot11RogueStaChannel = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 75, 5, 2, 3, 1, 8), Hh3cDot11ChannelScopeType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cDot11RogueStaChannel.setStatus('current')
hh3cDot11RogueStaAttackedStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 75, 5, 2, 3, 1, 9), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cDot11RogueStaAttackedStatus.setStatus('current')
hh3cDot11RogueStaToIgnore = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 75, 5, 2, 3, 1, 10), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cDot11RogueStaToIgnore.setStatus('current')
hh3cDot11RogueStaAdHocStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 75, 5, 2, 3, 1, 11), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cDot11RogueStaAdHocStatus.setStatus('current')
hh3cDot11RogueStaReset = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 75, 5, 2, 3, 1, 12), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cDot11RogueStaReset.setStatus('current')
hh3cDot11RogueStaFirstDetectTmStr = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 75, 5, 2, 3, 1, 13), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cDot11RogueStaFirstDetectTmStr.setStatus('current')
hh3cDot11RogueStaLastDetectTmStr = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 75, 5, 2, 3, 1, 14), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cDot11RogueStaLastDetectTmStr.setStatus('current')
hh3cDot11WIDSRogueStaExtTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 2, 75, 5, 2, 4), )
if mibBuilder.loadTexts: hh3cDot11WIDSRogueStaExtTable.setStatus('current')
hh3cDot11WIDSRogueStaExtEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 2, 75, 5, 2, 4, 1), ).setIndexNames((0, "HH3C-DOT11-WIDS-MIB", "hh3cDot11RogueStaMAC"), (0, "HH3C-DOT11-WIDS-MIB", "hh3cDot11WIDSAPID"))
if mibBuilder.loadTexts: hh3cDot11WIDSRogueStaExtEntry.setStatus('current')
hh3cDot11DetectCurStaSigStrength = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 75, 5, 2, 4, 1, 1), Integer32()).setUnits('dBm').setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cDot11DetectCurStaSigStrength.setStatus('current')
hh3cDot11DetectStaByChannel = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 75, 5, 2, 4, 1, 2), Hh3cDot11ChannelScopeType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cDot11DetectStaByChannel.setStatus('current')
hh3cDot11DetectStaByRadioID = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 75, 5, 2, 4, 1, 3), Hh3cDot11RadioScopeType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cDot11DetectStaByRadioID.setStatus('current')
hh3cDot11AttackStaStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 75, 5, 2, 4, 1, 4), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cDot11AttackStaStatus.setStatus('current')
hh3cDot11DetectStaFirstTm = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 75, 5, 2, 4, 1, 5), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cDot11DetectStaFirstTm.setStatus('current')
hh3cDot11DetectStaLastTm = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 75, 5, 2, 4, 1, 6), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cDot11DetectStaLastTm.setStatus('current')
hh3cDot11WIDSDetectedDevTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 2, 75, 5, 2, 5), )
if mibBuilder.loadTexts: hh3cDot11WIDSDetectedDevTable.setStatus('current')
hh3cDot11WIDSDetectedDevEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 2, 75, 5, 2, 5, 1), ).setIndexNames((0, "HH3C-DOT11-WIDS-MIB", "hh3cDot11WIDSDevMAC"))
if mibBuilder.loadTexts: hh3cDot11WIDSDetectedDevEntry.setStatus('current')
hh3cDot11WIDSDevMAC = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 75, 5, 2, 5, 1, 1), MacAddress())
if mibBuilder.loadTexts: hh3cDot11WIDSDevMAC.setStatus('current')
hh3cDot11WIDSDevType = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 75, 5, 2, 5, 1, 2), Hh3cDot11WIDSDevType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cDot11WIDSDevType.setStatus('current')
hh3cDot11WIDSDevPermitType = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 75, 5, 2, 5, 1, 3), Hh3cDot11WIDSDevPermitType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cDot11WIDSDevPermitType.setStatus('current')
hh3cDot11WIDSDevVendor = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 75, 5, 2, 5, 1, 4), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cDot11WIDSDevVendor.setStatus('current')
hh3cDot11WIDSDevMonitorNum = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 75, 5, 2, 5, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cDot11WIDSDevMonitorNum.setStatus('current')
hh3cDot11WIDSDevSSID = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 75, 5, 2, 5, 1, 6), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cDot11WIDSDevSSID.setStatus('current')
hh3cDot11WIDSDevBSSID = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 75, 5, 2, 5, 1, 7), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cDot11WIDSDevBSSID.setStatus('current')
hh3cDot11WIDSDevChannel = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 75, 5, 2, 5, 1, 8), Hh3cDot11ChannelScopeType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cDot11WIDSDevChannel.setStatus('current')
hh3cDot11WIDSDevMaxRSSI = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 75, 5, 2, 5, 1, 9), Integer32()).setUnits('dbm').setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cDot11WIDSDevMaxRSSI.setStatus('current')
hh3cDot11WIDSDevBeaconIntvl = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 75, 5, 2, 5, 1, 10), Integer32()).setUnits('millionsecond').setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cDot11WIDSDevBeaconIntvl.setStatus('current')
hh3cDot11WIDSDevFstDctTime = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 75, 5, 2, 5, 1, 11), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cDot11WIDSDevFstDctTime.setStatus('current')
hh3cDot11WIDSDevLstDctTime = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 75, 5, 2, 5, 1, 12), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cDot11WIDSDevLstDctTime.setStatus('current')
hh3cDot11WIDSDevReset = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 75, 5, 2, 5, 1, 13), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cDot11WIDSDevReset.setStatus('current')
hh3cDot11WIDSDevSnr = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 75, 5, 2, 5, 1, 14), Integer32()).setUnits('dB').setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cDot11WIDSDevSnr.setStatus('current')
hh3cDot11WIDSRptAPTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 2, 75, 5, 2, 6), )
if mibBuilder.loadTexts: hh3cDot11WIDSRptAPTable.setStatus('current')
hh3cDot11WIDSRptAPEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 2, 75, 5, 2, 6, 1), ).setIndexNames((0, "HH3C-DOT11-WIDS-MIB", "hh3cDot11WIDSDevMAC"), (0, "HH3C-DOT11-WIDS-MIB", "hh3cDot11WIDSRptAPMAC"))
if mibBuilder.loadTexts: hh3cDot11WIDSRptAPEntry.setStatus('current')
hh3cDot11WIDSRptAPMAC = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 75, 5, 2, 6, 1, 1), MacAddress())
if mibBuilder.loadTexts: hh3cDot11WIDSRptAPMAC.setStatus('current')
hh3cDot11WIDSRptAPName = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 75, 5, 2, 6, 1, 2), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cDot11WIDSRptAPName.setStatus('current')
hh3cDot11WIDSRptAPRadioID = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 75, 5, 2, 6, 1, 3), Hh3cDot11RadioScopeType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cDot11WIDSRptAPRadioID.setStatus('current')
hh3cDot11WIDSRptAPMaxRSSI = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 75, 5, 2, 6, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cDot11WIDSRptAPMaxRSSI.setStatus('current')
hh3cDot11WIDSRptAPFstDctTime = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 75, 5, 2, 6, 1, 5), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cDot11WIDSRptAPFstDctTime.setStatus('current')
hh3cDot11WIDSRptAPLstDctTime = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 75, 5, 2, 6, 1, 6), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cDot11WIDSRptAPLstDctTime.setStatus('current')
hh3cDot11DynBlackListTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 2, 75, 5, 2, 7), )
if mibBuilder.loadTexts: hh3cDot11DynBlackListTable.setStatus('current')
hh3cDot11DynBlackListEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 2, 75, 5, 2, 7, 1), ).setIndexNames((0, "HH3C-DOT11-WIDS-MIB", "hh3cDot11DynBlackListMAC"))
if mibBuilder.loadTexts: hh3cDot11DynBlackListEntry.setStatus('current')
hh3cDot11DynBlackListMAC = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 75, 5, 2, 7, 1, 1), MacAddress())
if mibBuilder.loadTexts: hh3cDot11DynBlackListMAC.setStatus('current')
hh3cDot11DynBlackListTime = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 75, 5, 2, 7, 1, 2), Unsigned32()).setUnits('second').setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cDot11DynBlackListTime.setStatus('current')
hh3cDot11DynBlackListReason = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 75, 5, 2, 7, 1, 3), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cDot11DynBlackListReason.setStatus('current')
hh3cDot11DynBlackListReset = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 75, 5, 2, 7, 1, 4), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cDot11DynBlackListReset.setStatus('current')
hh3cDot11DynBlackListTimeTicks = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 75, 5, 2, 7, 1, 5), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cDot11DynBlackListTimeTicks.setStatus('current')
hh3cDot11WIDSRogueHistoryTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 2, 75, 5, 2, 8), )
if mibBuilder.loadTexts: hh3cDot11WIDSRogueHistoryTable.setStatus('current')
hh3cDot11WIDSRogueHistoryEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 2, 75, 5, 2, 8, 1), ).setIndexNames((0, "HH3C-DOT11-WIDS-MIB", "hh3cDot11WIDSRogueHisIndex"))
if mibBuilder.loadTexts: hh3cDot11WIDSRogueHistoryEntry.setStatus('current')
hh3cDot11WIDSRogueHisIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 75, 5, 2, 8, 1, 1), Integer32())
if mibBuilder.loadTexts: hh3cDot11WIDSRogueHisIndex.setStatus('current')
hh3cDot11WIDSRogueHisMAC = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 75, 5, 2, 8, 1, 2), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cDot11WIDSRogueHisMAC.setStatus('current')
hh3cDot11WIDSRogueHisVendor = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 75, 5, 2, 8, 1, 3), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cDot11WIDSRogueHisVendor.setStatus('current')
hh3cDot11WIDSRogueHisType = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 75, 5, 2, 8, 1, 4), Hh3cDot11WIDSDevType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cDot11WIDSRogueHisType.setStatus('current')
hh3cDot11WIDSRogueHisChl = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 75, 5, 2, 8, 1, 5), Hh3cDot11ChannelScopeType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cDot11WIDSRogueHisChl.setStatus('current')
hh3cDot11WIDSRogueHisSSID = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 75, 5, 2, 8, 1, 6), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cDot11WIDSRogueHisSSID.setStatus('current')
hh3cDot11WIDSRogueHisLastDctTime = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 75, 5, 2, 8, 1, 7), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cDot11WIDSRogueHisLastDctTime.setStatus('current')
hh3cDot11WIDSAtkHistroyTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 2, 75, 5, 2, 9), )
if mibBuilder.loadTexts: hh3cDot11WIDSAtkHistroyTable.setStatus('current')
hh3cDot11WIDSAtkHistroyEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 2, 75, 5, 2, 9, 1), ).setIndexNames((0, "HH3C-DOT11-WIDS-MIB", "hh3cDot11WIDSAtkHisIndex"))
if mibBuilder.loadTexts: hh3cDot11WIDSAtkHistroyEntry.setStatus('current')
hh3cDot11WIDSAtkHisIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 75, 5, 2, 9, 1, 1), Integer32())
if mibBuilder.loadTexts: hh3cDot11WIDSAtkHisIndex.setStatus('current')
hh3cDot11WIDSAtkHisMAC = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 75, 5, 2, 9, 1, 2), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cDot11WIDSAtkHisMAC.setStatus('current')
hh3cDot11WIDSAtkHisType = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 75, 5, 2, 9, 1, 3), Hh3cDot11WIDSAtkType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cDot11WIDSAtkHisType.setStatus('current')
hh3cDot11WIDSAtkHisChl = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 75, 5, 2, 9, 1, 4), Hh3cDot11ChannelScopeType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cDot11WIDSAtkHisChl.setStatus('current')
hh3cDot11WIDSAtkHisRSSI = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 75, 5, 2, 9, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cDot11WIDSAtkHisRSSI.setStatus('current')
hh3cDot11WIDSAtkHisDctTime = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 75, 5, 2, 9, 1, 6), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cDot11WIDSAtkHisDctTime.setStatus('current')
hh3cDot11WIDSAtkHisAPName = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 75, 5, 2, 9, 1, 7), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cDot11WIDSAtkHisAPName.setStatus('current')
hh3cDot11WIDSAtkStatis = MibIdentifier((1, 3, 6, 1, 4, 1, 25506, 2, 75, 5, 2, 10))
hh3cDot11WIDSAtkStasStartTime = MibScalar((1, 3, 6, 1, 4, 1, 25506, 2, 75, 5, 2, 10, 1), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cDot11WIDSAtkStasStartTime.setStatus('current')
hh3cDot11WIDSAtkStasTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 2, 75, 5, 2, 10, 2), )
if mibBuilder.loadTexts: hh3cDot11WIDSAtkStasTable.setStatus('current')
hh3cDot11WIDSAtkStasEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 2, 75, 5, 2, 10, 2, 1), ).setIndexNames((0, "HH3C-DOT11-WIDS-MIB", "hh3cDot11WIDSAtkStasType"))
if mibBuilder.loadTexts: hh3cDot11WIDSAtkStasEntry.setStatus('current')
hh3cDot11WIDSAtkStasType = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 75, 5, 2, 10, 2, 1, 1), Hh3cDot11WIDSAtkType())
if mibBuilder.loadTexts: hh3cDot11WIDSAtkStasType.setStatus('current')
hh3cDot11WIDSAtkStasCurCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 75, 5, 2, 10, 2, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cDot11WIDSAtkStasCurCnt.setStatus('current')
hh3cDot11WIDSAtkStasTotalCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 75, 5, 2, 10, 2, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cDot11WIDSAtkStasTotalCnt.setStatus('current')
hh3cDot11BlackListTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 2, 75, 5, 2, 11), )
if mibBuilder.loadTexts: hh3cDot11BlackListTable.setStatus('current')
hh3cDot11BlackListEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 2, 75, 5, 2, 11, 1), ).setIndexNames((0, "HH3C-DOT11-WIDS-MIB", "hh3cDot11BlackListMAC"))
if mibBuilder.loadTexts: hh3cDot11BlackListEntry.setStatus('current')
hh3cDot11BlackListMAC = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 75, 5, 2, 11, 1, 1), MacAddress())
if mibBuilder.loadTexts: hh3cDot11BlackListMAC.setStatus('current')
hh3cDot11BlackListTime = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 75, 5, 2, 11, 1, 2), Unsigned32()).setUnits('minutes').setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cDot11BlackListTime.setStatus('current')
hh3cDot11BlackListReason = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 75, 5, 2, 11, 1, 3), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cDot11BlackListReason.setStatus('current')
hh3cDot11BlackListRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 75, 5, 2, 11, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cDot11BlackListRowStatus.setStatus('current')
hh3cDot11BlackListTimeTicks = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 75, 5, 2, 11, 1, 5), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cDot11BlackListTimeTicks.setStatus('current')
hh3cDot11WIDSTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 25506, 2, 75, 5, 3, 1))
hh3cDot11WIDSDetectRogueTrap = NotificationType((1, 3, 6, 1, 4, 1, 25506, 2, 75, 5, 3, 1, 1)).setObjects(("HH3C-DOT11-WIDS-MIB", "hh3cDot11WIDSRogueMAC"), ("HH3C-DOT11-WIDS-MIB", "hh3cDot11WIDSRogueType"), ("HH3C-DOT11-WIDS-MIB", "hh3cDot11WIDSMonitorMAC"), ("HH3C-DOT11-WIDS-MIB", "hh3cDot11MonitorAPID"), ("HH3C-DOT11-WIDS-MIB", "hh3cDot11MonitorApRadioID"))
if mibBuilder.loadTexts: hh3cDot11WIDSDetectRogueTrap.setStatus('current')
hh3cDot11WIDSAdHocTrap = NotificationType((1, 3, 6, 1, 4, 1, 25506, 2, 75, 5, 3, 1, 2)).setObjects(("HH3C-DOT11-WIDS-MIB", "hh3cDot11WIDSAdHocMAC"), ("HH3C-DOT11-WIDS-MIB", "hh3cDot11WIDSMonitorMAC"))
if mibBuilder.loadTexts: hh3cDot11WIDSAdHocTrap.setStatus('current')
hh3cDot11WIDSUnauthorSSIDTrap = NotificationType((1, 3, 6, 1, 4, 1, 25506, 2, 75, 5, 3, 1, 3)).setObjects(("HH3C-DOT11-WIDS-MIB", "hh3cDot11UnauthorSSIDName"), ("HH3C-DOT11-WIDS-MIB", "hh3cDot11WIDSMonitorMAC"), ("HH3C-DOT11-WIDS-MIB", "hh3cDot11MonitorAPID"), ("HH3C-DOT11-WIDS-MIB", "hh3cDot11MonitorApRadioID"))
if mibBuilder.loadTexts: hh3cDot11WIDSUnauthorSSIDTrap.setStatus('current')
hh3cDot11WIDSDisappearRogueTrap = NotificationType((1, 3, 6, 1, 4, 1, 25506, 2, 75, 5, 3, 1, 4)).setObjects(("HH3C-DOT11-WIDS-MIB", "hh3cDot11WIDSRogueMAC"))
if mibBuilder.loadTexts: hh3cDot11WIDSDisappearRogueTrap.setStatus('current')
hh3cDot11WIDSDetectAttack = NotificationType((1, 3, 6, 1, 4, 1, 25506, 2, 75, 5, 3, 1, 5)).setObjects(("HH3C-DOT11-WIDS-MIB", "hh3cDot11WIDSAtkHisType"), ("HH3C-DOT11-WIDS-MIB", "hh3cDot11WIDSAtkHisChl"), ("HH3C-DOT11-WIDS-MIB", "hh3cDot11WIDSAtkHisDctTime"), ("HH3C-DOT11-WIDS-MIB", "hh3cDot11WIDSAtkHisAPName"))
if mibBuilder.loadTexts: hh3cDot11WIDSDetectAttack.setStatus('current')
hh3cDot11WIDSDetectWBridge = NotificationType((1, 3, 6, 1, 4, 1, 25506, 2, 75, 5, 3, 1, 6)).setObjects(("HH3C-DOT11-WIDS-MIB", "hh3cDot11WIDSRptAPName"), ("HH3C-DOT11-WIDS-MIB", "hh3cDot11WIDSRptAPRadioID"), ("HH3C-DOT11-WIDS-MIB", "hh3cDot11WIDSRptAPLstDctTime"))
if mibBuilder.loadTexts: hh3cDot11WIDSDetectWBridge.setStatus('current')
hh3cDot11WIDSFloodTrap = NotificationType((1, 3, 6, 1, 4, 1, 25506, 2, 75, 5, 3, 1, 7)).setObjects(("HH3C-DOT11-WIDS-MIB", "hh3cDot11WIDSAtkMac"), ("HH3C-DOT11-WIDS-MIB", "hh3cDot11WIDSAtkFrameType"))
if mibBuilder.loadTexts: hh3cDot11WIDSFloodTrap.setStatus('current')
hh3cDot11WIDSSpoofTrap = NotificationType((1, 3, 6, 1, 4, 1, 25506, 2, 75, 5, 3, 1, 8)).setObjects(("HH3C-DOT11-WIDS-MIB", "hh3cDot11WIDSAtkMac"), ("HH3C-DOT11-WIDS-MIB", "hh3cDot11WIDSAtkFrameType"), ("HH3C-DOT11-WIDS-MIB", "hh3cDot11WIDSAtkChannel"), ("HH3C-DOT11-WIDS-MIB", "hh3cDot11WIDSAtkTime"), ("HH3C-DOT11-WIDS-MIB", "hh3cDot11WIDSAtkDestMac"))
if mibBuilder.loadTexts: hh3cDot11WIDSSpoofTrap.setStatus('current')
hh3cDot11WIDSWeakIVTrap = NotificationType((1, 3, 6, 1, 4, 1, 25506, 2, 75, 5, 3, 1, 9)).setObjects(("HH3C-DOT11-WIDS-MIB", "hh3cDot11WIDSAtkMac"), ("HH3C-DOT11-WIDS-MIB", "hh3cDot11WIDSAtkChannel"), ("HH3C-DOT11-WIDS-MIB", "hh3cDot11WIDSAtkTime"), ("HH3C-DOT11-WIDS-MIB", "hh3cDot11WIDSAtkDestMac"))
if mibBuilder.loadTexts: hh3cDot11WIDSWeakIVTrap.setStatus('current')
hh3cDot11WIDSTrapVarObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 25506, 2, 75, 5, 3, 2))
hh3cDot11WIDSRogueMAC = MibScalar((1, 3, 6, 1, 4, 1, 25506, 2, 75, 5, 3, 2, 1), MacAddress()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hh3cDot11WIDSRogueMAC.setStatus('current')
hh3cDot11WIDSRogueType = MibScalar((1, 3, 6, 1, 4, 1, 25506, 2, 75, 5, 3, 2, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("rogueAp", 1), ("rogueStation", 2)))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hh3cDot11WIDSRogueType.setStatus('current')
hh3cDot11WIDSMonitorMAC = MibScalar((1, 3, 6, 1, 4, 1, 25506, 2, 75, 5, 3, 2, 3), MacAddress()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hh3cDot11WIDSMonitorMAC.setStatus('current')
hh3cDot11WIDSAdHocMAC = MibScalar((1, 3, 6, 1, 4, 1, 25506, 2, 75, 5, 3, 2, 4), MacAddress()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hh3cDot11WIDSAdHocMAC.setStatus('current')
hh3cDot11UnauthorSSIDName = MibScalar((1, 3, 6, 1, 4, 1, 25506, 2, 75, 5, 3, 2, 5), Hh3cDot11SSIDStringType()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hh3cDot11UnauthorSSIDName.setStatus('current')
hh3cDot11MonitorAPID = MibScalar((1, 3, 6, 1, 4, 1, 25506, 2, 75, 5, 3, 2, 6), Hh3cDot11ObjectIDType()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hh3cDot11MonitorAPID.setStatus('current')
hh3cDot11MonitorApRadioID = MibScalar((1, 3, 6, 1, 4, 1, 25506, 2, 75, 5, 3, 2, 7), Hh3cDot11RadioScopeType()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hh3cDot11MonitorApRadioID.setStatus('current')
hh3cDot11WIDSAtkMac = MibScalar((1, 3, 6, 1, 4, 1, 25506, 2, 75, 5, 3, 2, 8), MacAddress()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hh3cDot11WIDSAtkMac.setStatus('current')
hh3cDot11WIDSAtkFrameType = MibScalar((1, 3, 6, 1, 4, 1, 25506, 2, 75, 5, 3, 2, 9), OctetString()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hh3cDot11WIDSAtkFrameType.setStatus('current')
hh3cDot11WIDSAtkChannel = MibScalar((1, 3, 6, 1, 4, 1, 25506, 2, 75, 5, 3, 2, 10), Hh3cDot11ChannelScopeType()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hh3cDot11WIDSAtkChannel.setStatus('current')
hh3cDot11WIDSAtkTime = MibScalar((1, 3, 6, 1, 4, 1, 25506, 2, 75, 5, 3, 2, 11), OctetString()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hh3cDot11WIDSAtkTime.setStatus('current')
hh3cDot11WIDSAtkDestMac = MibScalar((1, 3, 6, 1, 4, 1, 25506, 2, 75, 5, 3, 2, 12), MacAddress()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hh3cDot11WIDSAtkDestMac.setStatus('current')
mibBuilder.exportSymbols("HH3C-DOT11-WIDS-MIB", hh3cDot11ResetAllDctRogueAP=hh3cDot11ResetAllDctRogueAP, hh3cDot11DetectAPByChannel=hh3cDot11DetectAPByChannel, hh3cDot11BlackListMAC=hh3cDot11BlackListMAC, hh3cDot11DynBlackListMAC=hh3cDot11DynBlackListMAC, hh3cDot11WIDSDevLstDctTime=hh3cDot11WIDSDevLstDctTime, hh3cDot11RogueStaChannel=hh3cDot11RogueStaChannel, hh3cDot11StaticBlackListTable=hh3cDot11StaticBlackListTable, hh3cDot11WIDSRogueMAC=hh3cDot11WIDSRogueMAC, hh3cDot11WIDS=hh3cDot11WIDS, hh3cDot11WIDSDetectRogueTrap=hh3cDot11WIDSDetectRogueTrap, hh3cDot11WIDSAtkHisMAC=hh3cDot11WIDSAtkHisMAC, hh3cDot11WIDSIgnoreListEntry=hh3cDot11WIDSIgnoreListEntry, hh3cDot11WIDSAtkChannel=hh3cDot11WIDSAtkChannel, hh3cDot11WIDSAtkDestMac=hh3cDot11WIDSAtkDestMac, Hh3cDot11WIDSAtkType=Hh3cDot11WIDSAtkType, hh3cDot11MonitorAPID=hh3cDot11MonitorAPID, hh3cDot11WIDSWeakIVTrap=hh3cDot11WIDSWeakIVTrap, hh3cDot11WIDSAtkStasStartTime=hh3cDot11WIDSAtkStasStartTime, hh3cDot11RogueStaAttackedStatus=hh3cDot11RogueStaAttackedStatus, hh3cDot11WIDSConfigGroup=hh3cDot11WIDSConfigGroup, hh3cDot11RogueAPBeaconInterval=hh3cDot11RogueAPBeaconInterval, hh3cDot11BlackListRowStatus=hh3cDot11BlackListRowStatus, hh3cDot11BlackListTable=hh3cDot11BlackListTable, hh3cDot11WIDSAtkHistroyEntry=hh3cDot11WIDSAtkHistroyEntry, hh3cDot11RogueAPFirstDetectTmStr=hh3cDot11RogueAPFirstDetectTmStr, hh3cDot11WIDSUnauthorSSIDTrap=hh3cDot11WIDSUnauthorSSIDTrap, hh3cDot11WIDSRptAPName=hh3cDot11WIDSRptAPName, hh3cDot11RogueStaMAC=hh3cDot11RogueStaMAC, hh3cDot11RogueAPChannel=hh3cDot11RogueAPChannel, hh3cDot11RogueStaAccessBSSID=hh3cDot11RogueStaAccessBSSID, hh3cDot11WIDSRogueStaTable=hh3cDot11WIDSRogueStaTable, hh3cDot11WIDSAtkStasTable=hh3cDot11WIDSAtkStasTable, hh3cDot11WIDSDetectedDevEntry=hh3cDot11WIDSDetectedDevEntry, hh3cDot11BSSIDFilterOnOff=hh3cDot11BSSIDFilterOnOff, hh3cDot11WIDSDevMaxRSSI=hh3cDot11WIDSDevMaxRSSI, hh3cDot11StaticBlackListMAC=hh3cDot11StaticBlackListMAC, hh3cDot11WIDSRptAPMAC=hh3cDot11WIDSRptAPMAC, hh3cDot11AttackDevDetected=hh3cDot11AttackDevDetected, hh3cDot11WIDSDevBeaconIntvl=hh3cDot11WIDSDevBeaconIntvl, hh3cDot11RogueAPMonitorNum=hh3cDot11RogueAPMonitorNum, hh3cDot11WIDSDevSnr=hh3cDot11WIDSDevSnr, hh3cDot11WIDSDevReset=hh3cDot11WIDSDevReset, hh3cDot11WIDSAtkHisIndex=hh3cDot11WIDSAtkHisIndex, hh3cDot11WIDSAtkTime=hh3cDot11WIDSAtkTime, hh3cDot11WIDSRogueStaExtTable=hh3cDot11WIDSRogueStaExtTable, hh3cDot11AttackAPStatus=hh3cDot11AttackAPStatus, hh3cDot11WIDSAtkStasEntry=hh3cDot11WIDSAtkStasEntry, hh3cDot11WIDSFloodTrap=hh3cDot11WIDSFloodTrap, hh3cDot11RogueAPEncryptStatus=hh3cDot11RogueAPEncryptStatus, hh3cDot11BlackListEntry=hh3cDot11BlackListEntry, hh3cDot11BlackListTimeTicks=hh3cDot11BlackListTimeTicks, hh3cDot11WIDSDisappearRogueTrap=hh3cDot11WIDSDisappearRogueTrap, hh3cDot11AttackDeviceMac=hh3cDot11AttackDeviceMac, hh3cDot11WIDSRptAPMaxRSSI=hh3cDot11WIDSRptAPMaxRSSI, hh3cDot11WIDSDevVendor=hh3cDot11WIDSDevVendor, hh3cDot11VendorOUI=hh3cDot11VendorOUI, hh3cDot11WIDSDevBSSID=hh3cDot11WIDSDevBSSID, hh3cDot11WIDSRogueAPExtEntry=hh3cDot11WIDSRogueAPExtEntry, hh3cDot11DynBlackListEntry=hh3cDot11DynBlackListEntry, hh3cDot11BlackListReason=hh3cDot11BlackListReason, hh3cDot11IgnoreListRowStatus=hh3cDot11IgnoreListRowStatus, PYSNMP_MODULE_ID=hh3cDot11WIDS, hh3cDot11WIDSDevFstDctTime=hh3cDot11WIDSDevFstDctTime, hh3cDot11WIDSMonitorMAC=hh3cDot11WIDSMonitorMAC, hh3cDot11WIDSAttackListEntry=hh3cDot11WIDSAttackListEntry, hh3cDot11WIDSRogueHisType=hh3cDot11WIDSRogueHisType, hh3cDot11WIDSNotifyGroup=hh3cDot11WIDSNotifyGroup, hh3cDot11PermitBSSIDDetected=hh3cDot11PermitBSSIDDetected, hh3cDot11AttackStaStatus=hh3cDot11AttackStaStatus, hh3cDot11WIDSDevMAC=hh3cDot11WIDSDevMAC, hh3cDot11DynBlkListEnable=hh3cDot11DynBlkListEnable, hh3cDot11MonitorApRadioID=hh3cDot11MonitorApRadioID, hh3cDot11ResetAllDynBlkList=hh3cDot11ResetAllDynBlkList, hh3cDot11WIDSRogueHisMAC=hh3cDot11WIDSRogueHisMAC, hh3cDot11WIDSAtkStasTotalCnt=hh3cDot11WIDSAtkStasTotalCnt, hh3cDot11WIDSRogueType=hh3cDot11WIDSRogueType, hh3cDot11WIDSAtkHistroyTable=hh3cDot11WIDSAtkHistroyTable, hh3cDot11WIDSPermitSSIDEntry=hh3cDot11WIDSPermitSSIDEntry, hh3cDot11RogueStaFirstDetectTm=hh3cDot11RogueStaFirstDetectTm, hh3cDot11RogueStaReset=hh3cDot11RogueStaReset, hh3cDot11WIDSRogueStaEntry=hh3cDot11WIDSRogueStaEntry, hh3cDot11DynBlackListTimeTicks=hh3cDot11DynBlackListTimeTicks, hh3cDot11RogueAPLastDetectTmStr=hh3cDot11RogueAPLastDetectTmStr, hh3cDot11StaticWhiteListEntry=hh3cDot11StaticWhiteListEntry, hh3cDot11WIDSDevPermitType=hh3cDot11WIDSDevPermitType, hh3cDot11WIDSRogueHisChl=hh3cDot11WIDSRogueHisChl, hh3cDot11DynBlkListLifeTime=hh3cDot11DynBlkListLifeTime, hh3cDot11RogueStaLastDetectTm=hh3cDot11RogueStaLastDetectTm, hh3cDot11RogueAPReset=hh3cDot11RogueAPReset, hh3cDot11DynBlackListTime=hh3cDot11DynBlackListTime, hh3cDot11DynBlackListReason=hh3cDot11DynBlackListReason, hh3cDot11StaticBlackListRowStatus=hh3cDot11StaticBlackListRowStatus, hh3cDot11WIDSDevChannel=hh3cDot11WIDSDevChannel, hh3cDot11WIDSRptAPEntry=hh3cDot11WIDSRptAPEntry, hh3cDot11WIDSDevType=hh3cDot11WIDSDevType, hh3cDot11WIDSAdHocTrap=hh3cDot11WIDSAdHocTrap, hh3cDot11DetectAPFirstTm=hh3cDot11DetectAPFirstTm, hh3cDot11RogueAPBSSMAC=hh3cDot11RogueAPBSSMAC, hh3cDot11DetectCurStaSigStrength=hh3cDot11DetectCurStaSigStrength, hh3cDot11PermitSSIDDetected=hh3cDot11PermitSSIDDetected, hh3cDot11WIDSPermitBSSIDEntry=hh3cDot11WIDSPermitBSSIDEntry, hh3cDot11FloodAtkDctEnable=hh3cDot11FloodAtkDctEnable, hh3cDot11RogueStaMaxSigStrength=hh3cDot11RogueStaMaxSigStrength, hh3cDot11PermitVendorRowStatus=hh3cDot11PermitVendorRowStatus, hh3cDot11ResetAllDctSSID=hh3cDot11ResetAllDctSSID, hh3cDot11ResetAllDctDevice=hh3cDot11ResetAllDctDevice, hh3cDot11StaticWhiteListMAC=hh3cDot11StaticWhiteListMAC, hh3cDot11RogueStaFirstDetectTmStr=hh3cDot11RogueStaFirstDetectTmStr, hh3cDot11WIDSRogueAPTable=hh3cDot11WIDSRogueAPTable, hh3cDot11PermitBSSID=hh3cDot11PermitBSSID, hh3cDot11RogueAPMaxSigStrength=hh3cDot11RogueAPMaxSigStrength, hh3cDot11RogueAPAttackedStatus=hh3cDot11RogueAPAttackedStatus, hh3cDot11DetectStaLastTm=hh3cDot11DetectStaLastTm, hh3cDot11DetectStaByRadioID=hh3cDot11DetectStaByRadioID, hh3cDot11WIDSRptAPRadioID=hh3cDot11WIDSRptAPRadioID, hh3cDot11WIDSRptAPLstDctTime=hh3cDot11WIDSRptAPLstDctTime, hh3cDot11ResetAllStcBlkList=hh3cDot11ResetAllStcBlkList, hh3cDot11WIDSGlobalConfigGroup=hh3cDot11WIDSGlobalConfigGroup, hh3cDot11IgnoreMACDetected=hh3cDot11IgnoreMACDetected, hh3cDot11WIDSScanChannelList=hh3cDot11WIDSScanChannelList, hh3cDot11WIDSAtkHisAPName=hh3cDot11WIDSAtkHisAPName, hh3cDot11WeakIVAtkDctEnable=hh3cDot11WeakIVAtkDctEnable, hh3cDot11WIDSAtkHisChl=hh3cDot11WIDSAtkHisChl, hh3cDot11RogueAPLastDetectTm=hh3cDot11RogueAPLastDetectTm, hh3cDot11WIDSRptAPTable=hh3cDot11WIDSRptAPTable, hh3cDot11DetectAPByRadioID=hh3cDot11DetectAPByRadioID, hh3cDot11WIDSDevMonitorNum=hh3cDot11WIDSDevMonitorNum, hh3cDot11WIDSTrapVarObjects=hh3cDot11WIDSTrapVarObjects, hh3cDot11WIDSAtkMac=hh3cDot11WIDSAtkMac, hh3cDot11WIDSRogueStaExtEntry=hh3cDot11WIDSRogueStaExtEntry, hh3cDot11DynBlackListReset=hh3cDot11DynBlackListReset, hh3cDot11RogueStaToIgnore=hh3cDot11RogueStaToIgnore, hh3cDot11DynBlackListTable=hh3cDot11DynBlackListTable, hh3cDot11WIDSRogueHistoryTable=hh3cDot11WIDSRogueHistoryTable, hh3cDot11WIDSAtkHisRSSI=hh3cDot11WIDSAtkHisRSSI, hh3cDot11RogueStaLastDetectTmStr=hh3cDot11RogueStaLastDetectTmStr, hh3cDot11WIDSSpoofTrap=hh3cDot11WIDSSpoofTrap, hh3cDot11StaticWhiteListRowStatus=hh3cDot11StaticWhiteListRowStatus, hh3cDot11IgnoreDevType=hh3cDot11IgnoreDevType, hh3cDot11WIDSAttackListTable=hh3cDot11WIDSAttackListTable, hh3cDot11DevAgingTime=hh3cDot11DevAgingTime, hh3cDot11WIDSPermitSSIDTable=hh3cDot11WIDSPermitSSIDTable, hh3cDot11StaticWhiteListTable=hh3cDot11StaticWhiteListTable, hh3cDot11WIDSRogueHistoryEntry=hh3cDot11WIDSRogueHistoryEntry, hh3cDot11ResetWIDSRogueHistory=hh3cDot11ResetWIDSRogueHistory, hh3cDot11WidsBlackListThreshold=hh3cDot11WidsBlackListThreshold, hh3cDot11PermitSSID=hh3cDot11PermitSSID, hh3cDot11ResetAllDctAdhoc=hh3cDot11ResetAllDctAdhoc, hh3cDot11WIDSRogueHisVendor=hh3cDot11WIDSRogueHisVendor, hh3cDot11DetectStaByChannel=hh3cDot11DetectStaByChannel, hh3cDot11WIDSRogueAPEntry=hh3cDot11WIDSRogueAPEntry, hh3cDot11WIDSDevSSID=hh3cDot11WIDSDevSSID, hh3cDot11WIDSAdHocMAC=hh3cDot11WIDSAdHocMAC, Hh3cDot11WIDSDevType=Hh3cDot11WIDSDevType, hh3cDot11StaticBlackListEntry=hh3cDot11StaticBlackListEntry, hh3cDot11RogueAPSSID=hh3cDot11RogueAPSSID, Hh3cDot11WIDSDevPermitType=Hh3cDot11WIDSDevPermitType, hh3cDot11RogueAPToIgnore=hh3cDot11RogueAPToIgnore, hh3cDot11RogueStaMonitorNum=hh3cDot11RogueStaMonitorNum, hh3cDot11RogueStaAdHocStatus=hh3cDot11RogueStaAdHocStatus, hh3cDot11WIDSAtkHisDctTime=hh3cDot11WIDSAtkHisDctTime, hh3cDot11PermitSSIDRowStatus=hh3cDot11PermitSSIDRowStatus, hh3cDot11ResetAllWhtBlkList=hh3cDot11ResetAllWhtBlkList, hh3cDot11VendorName=hh3cDot11VendorName, hh3cDot11ResetAllDctRogueSta=hh3cDot11ResetAllDctRogueSta, hh3cDot11RogueAPVendorName=hh3cDot11RogueAPVendorName, hh3cDot11WIDSIgnoreListTable=hh3cDot11WIDSIgnoreListTable, hh3cDot11WIDSPermitVendorTable=hh3cDot11WIDSPermitVendorTable, hh3cDot11IgnoreMAC=hh3cDot11IgnoreMAC, hh3cDot11WIDSRogueHisLastDctTime=hh3cDot11WIDSRogueHisLastDctTime, hh3cDot11WIDSAtkStasCurCnt=hh3cDot11WIDSAtkStasCurCnt, hh3cDot11PermitBSSIDRowStatus=hh3cDot11PermitBSSIDRowStatus, hh3cDot11WIDSTraps=hh3cDot11WIDSTraps, hh3cDot11ResetWIDSHistroy=hh3cDot11ResetWIDSHistroy, hh3cDot11WIDSPermitBSSIDTable=hh3cDot11WIDSPermitBSSIDTable, hh3cDot11WIDSAPID=hh3cDot11WIDSAPID, hh3cDot11DetectStaFirstTm=hh3cDot11DetectStaFirstTm, hh3cDot11WIDSAtkStatis=hh3cDot11WIDSAtkStatis, hh3cDot11WIDSAtkStasType=hh3cDot11WIDSAtkStasType, hh3cDot11ResetWIDSStatistics=hh3cDot11ResetWIDSStatistics, hh3cDot11WIDSDetectWBridge=hh3cDot11WIDSDetectWBridge, hh3cDot11WIDSAtkFrameType=hh3cDot11WIDSAtkFrameType, hh3cDot11CntMsrMode=hh3cDot11CntMsrMode, hh3cDot11UnauthorSSIDName=hh3cDot11UnauthorSSIDName, hh3cDot11WIDSDetectAttack=hh3cDot11WIDSDetectAttack, hh3cDot11RogueStaVendorName=hh3cDot11RogueStaVendorName, hh3cDot11SpoofAtkDctEnable=hh3cDot11SpoofAtkDctEnable, hh3cDot11BlackListTime=hh3cDot11BlackListTime, hh3cDot11AttackDevType=hh3cDot11AttackDevType, hh3cDot11DetectCurAPSigStrength=hh3cDot11DetectCurAPSigStrength, hh3cDot11WIDSAtkHisType=hh3cDot11WIDSAtkHisType, hh3cDot11WIDSRogueHisSSID=hh3cDot11WIDSRogueHisSSID, hh3cDot11WIDSPermitVendorEntry=hh3cDot11WIDSPermitVendorEntry, hh3cDot11DetectAPLastTm=hh3cDot11DetectAPLastTm, hh3cDot11WIDSDetectGroup=hh3cDot11WIDSDetectGroup, hh3cDot11WIDSScanMode=hh3cDot11WIDSScanMode, hh3cDot11WIDSRptAPFstDctTime=hh3cDot11WIDSRptAPFstDctTime, hh3cDot11SSIDFilterOnOff=hh3cDot11SSIDFilterOnOff, hh3cDot11AttackListRowStatus=hh3cDot11AttackListRowStatus, hh3cDot11WIDSDetectedDevTable=hh3cDot11WIDSDetectedDevTable, hh3cDot11WIDSRogueHisIndex=hh3cDot11WIDSRogueHisIndex, hh3cDot11WIDSRogueAPExtTable=hh3cDot11WIDSRogueAPExtTable, hh3cDot11WidsFloodInterval=hh3cDot11WidsFloodInterval, hh3cDot11RogueAPFirstDetectTm=hh3cDot11RogueAPFirstDetectTm)
