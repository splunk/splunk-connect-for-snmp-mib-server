#
# PySNMP MIB module SYSLOG-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/SYSLOG-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 21:06:54 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ValueSizeConstraint, ConstraintsIntersection, SingleValueConstraint, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ValueSizeConstraint", "ConstraintsIntersection", "SingleValueConstraint", "ValueRangeConstraint")
dlink_common_mgmt, = mibBuilder.importSymbols("DLINK-ID-REC-MIB", "dlink-common-mgmt")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
Counter64, Gauge32, Integer32, ObjectIdentity, ModuleIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, MibIdentifier, IpAddress, Bits, Counter32, iso, TimeTicks, NotificationType, Unsigned32 = mibBuilder.importSymbols("SNMPv2-SMI", "Counter64", "Gauge32", "Integer32", "ObjectIdentity", "ModuleIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "MibIdentifier", "IpAddress", "Bits", "Counter32", "iso", "TimeTicks", "NotificationType", "Unsigned32")
TextualConvention, RowStatus, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "RowStatus", "DisplayString")
swSysLogMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 171, 12, 12))
if mibBuilder.loadTexts: swSysLogMIB.setLastUpdated('0007150000Z')
if mibBuilder.loadTexts: swSysLogMIB.setOrganization(' ')
swSysLogCtrlState = MibScalar((1, 3, 6, 1, 4, 1, 171, 12, 12, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("disabled", 2), ("enabled", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swSysLogCtrlState.setStatus('current')
swSysLogServerTable = MibTable((1, 3, 6, 1, 4, 1, 171, 12, 12, 2), )
if mibBuilder.loadTexts: swSysLogServerTable.setStatus('current')
swSysLogServerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 171, 12, 12, 2, 1), ).setIndexNames((0, "SYSLOG-MIB", "swSysLogServerIndex"))
if mibBuilder.loadTexts: swSysLogServerEntry.setStatus('current')
swSysLogServerIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 12, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4))).setMaxAccess("readonly")
if mibBuilder.loadTexts: swSysLogServerIndex.setStatus('current')
swSysLogServerIPAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 12, 2, 1, 2), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: swSysLogServerIPAddress.setStatus('current')
swSysLogServerFacility = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 12, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("local0", 0), ("local1", 1), ("local2", 2), ("local3", 3), ("local4", 4), ("local5", 5), ("local6", 6), ("local7", 7)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: swSysLogServerFacility.setStatus('current')
swSysLogServerSeverity = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 12, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("all", 1), ("warning", 2), ("informational", 3)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: swSysLogServerSeverity.setStatus('current')
swSysLogServerUDPPort = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 12, 2, 1, 5), Integer32().clone(514)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: swSysLogServerUDPPort.setStatus('current')
swSysLogServerState = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 12, 2, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("disabled", 2), ("enabled", 3)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: swSysLogServerState.setStatus('current')
swSysLogServerRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 12, 2, 1, 7), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: swSysLogServerRowStatus.setStatus('current')
swLogSaveCtrl = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 12, 12, 3))
swLogSaveMethod = MibScalar((1, 3, 6, 1, 4, 1, 171, 12, 12, 3, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("time-interval", 1), ("on-demand", 2), ("log-trigger", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swLogSaveMethod.setStatus('current')
swLogSaveTimeInterval = MibScalar((1, 3, 6, 1, 4, 1, 171, 12, 12, 3, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swLogSaveTimeInterval.setStatus('current')
swSysLogCtrl = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 12, 12, 4))
swSysLogCtrlClearLog = MibScalar((1, 3, 6, 1, 4, 1, 171, 12, 12, 4, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("other", 1), ("start", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swSysLogCtrlClearLog.setStatus('current')
mibBuilder.exportSymbols("SYSLOG-MIB", swSysLogServerIndex=swSysLogServerIndex, swSysLogCtrl=swSysLogCtrl, swSysLogServerRowStatus=swSysLogServerRowStatus, swSysLogMIB=swSysLogMIB, swSysLogServerIPAddress=swSysLogServerIPAddress, swLogSaveTimeInterval=swLogSaveTimeInterval, PYSNMP_MODULE_ID=swSysLogMIB, swSysLogCtrlState=swSysLogCtrlState, swSysLogServerSeverity=swSysLogServerSeverity, swSysLogServerEntry=swSysLogServerEntry, swSysLogServerState=swSysLogServerState, swLogSaveMethod=swLogSaveMethod, swLogSaveCtrl=swLogSaveCtrl, swSysLogServerFacility=swSysLogServerFacility, swSysLogCtrlClearLog=swSysLogCtrlClearLog, swSysLogServerUDPPort=swSysLogServerUDPPort, swSysLogServerTable=swSysLogServerTable)
