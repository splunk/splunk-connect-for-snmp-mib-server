#
# PySNMP MIB module CISCO-CIDS-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CISCO-CIDS-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:35:57 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ConstraintsIntersection, SingleValueConstraint, ValueRangeConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ConstraintsIntersection", "SingleValueConstraint", "ValueRangeConstraint", "ConstraintsUnion")
ciscoMgmt, = mibBuilder.importSymbols("CISCO-SMI", "ciscoMgmt")
CiscoIpProtocol, Unsigned64 = mibBuilder.importSymbols("CISCO-TC", "CiscoIpProtocol", "Unsigned64")
InterfaceIndex, = mibBuilder.importSymbols("IF-MIB", "InterfaceIndex")
SnmpAdminString, = mibBuilder.importSymbols("SNMP-FRAMEWORK-MIB", "SnmpAdminString")
ObjectGroup, NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "NotificationGroup", "ModuleCompliance")
NotificationType, IpAddress, TimeTicks, Counter64, ModuleIdentity, Integer32, MibScalar, MibTable, MibTableRow, MibTableColumn, ObjectIdentity, MibIdentifier, iso, Counter32, Gauge32, Unsigned32, Bits = mibBuilder.importSymbols("SNMPv2-SMI", "NotificationType", "IpAddress", "TimeTicks", "Counter64", "ModuleIdentity", "Integer32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ObjectIdentity", "MibIdentifier", "iso", "Counter32", "Gauge32", "Unsigned32", "Bits")
DisplayString, DateAndTime, TruthValue, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "DateAndTime", "TruthValue", "TextualConvention")
ciscoCidsMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 9, 9, 383))
ciscoCidsMIB.setRevisions(('2013-08-08 00:00', '2008-06-26 00:00', '2006-03-02 00:00', '2005-10-10 00:00', '2003-12-18 00:00',))
if mibBuilder.loadTexts: ciscoCidsMIB.setLastUpdated('201308090000Z')
if mibBuilder.loadTexts: ciscoCidsMIB.setOrganization('Cisco Systems, Inc.')
ciscoCidsMIBNotifs = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 383, 0))
ciscoCidsMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 383, 1))
ciscoCidsMIBConform = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 383, 2))
cidsGeneral = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 383, 1, 1))
cidsAlert = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 383, 1, 2))
cidsError = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 383, 1, 3))
class CidsHealthStatusColor(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3))
    namedValues = NamedValues(("green", 1), ("yellow", 2), ("red", 3))

class CidsApplicationStatus(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9))
    namedValues = NamedValues(("notResponding", 1), ("notRunning", 2), ("processingTransaction", 3), ("reconfiguring", 4), ("running", 5), ("starting", 6), ("stopping", 7), ("unknown", 8), ("upgradeInprogress", 9))

cidsHealth = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 383, 1, 4))
class CidsErrorCode(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16))
    namedValues = NamedValues(("errAuthenticationTokenExpired", 1), ("errConfigCollision", 2), ("errInUse", 3), ("errInvalidDocument", 4), ("errLimitExceeded", 5), ("errNotAvailable", 6), ("errNotFound", 7), ("errNotSupported", 8), ("errPermissionDenied", 9), ("errSyslog", 10), ("errSystemError", 11), ("errTransport", 12), ("errUnacceptableValue", 13), ("errUnclassified", 14), ("errWarning", 15), ("errEngineBuildFailed", 16))

class CidsTargetValue(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))
    namedValues = NamedValues(("zeroValue", 1), ("low", 2), ("medium", 3), ("high", 4), ("missionCritical", 5))

class CidsAttackRelevance(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3))
    namedValues = NamedValues(("relevant", 1), ("notRelevant", 2), ("unknown", 3))

cidsGeneralEventId = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 383, 1, 1, 1), Unsigned64()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: cidsGeneralEventId.setStatus('current')
cidsGeneralLocalTime = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 383, 1, 1, 2), DateAndTime()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: cidsGeneralLocalTime.setStatus('current')
cidsGeneralUTCTime = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 383, 1, 1, 3), DateAndTime()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: cidsGeneralUTCTime.setStatus('current')
cidsGeneralOriginatorHostId = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 383, 1, 1, 4), SnmpAdminString()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: cidsGeneralOriginatorHostId.setStatus('current')
cidsGeneralOriginatorAppName = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 383, 1, 1, 5), SnmpAdminString()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: cidsGeneralOriginatorAppName.setStatus('current')
cidsGeneralOriginatorAppId = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 383, 1, 1, 6), SnmpAdminString()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: cidsGeneralOriginatorAppId.setStatus('current')
cidsNotificationsEnabled = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 383, 1, 1, 7), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cidsNotificationsEnabled.setStatus('current')
cidsAlertSeverity = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 383, 1, 2, 1), SnmpAdminString()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: cidsAlertSeverity.setStatus('current')
cidsAlertAlarmTraits = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 383, 1, 2, 2), Unsigned32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: cidsAlertAlarmTraits.setStatus('current')
cidsAlertSignature = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 383, 1, 2, 3), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 64))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: cidsAlertSignature.setStatus('current')
cidsAlertSignatureSigName = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 383, 1, 2, 4), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 64))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: cidsAlertSignatureSigName.setStatus('current')
cidsAlertSignatureSigId = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 383, 1, 2, 5), Unsigned32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: cidsAlertSignatureSigId.setStatus('current')
cidsAlertSignatureSubSigId = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 383, 1, 2, 6), Unsigned32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: cidsAlertSignatureSubSigId.setStatus('current')
cidsAlertSignatureVersion = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 383, 1, 2, 7), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 64))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: cidsAlertSignatureVersion.setStatus('current')
cidsAlertSummary = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 383, 1, 2, 8), Unsigned32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: cidsAlertSummary.setStatus('current')
cidsAlertSummaryType = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 383, 1, 2, 9), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: cidsAlertSummaryType.setStatus('current')
cidsAlertSummaryFinal = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 383, 1, 2, 10), TruthValue()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: cidsAlertSummaryFinal.setStatus('current')
cidsAlertSummaryInitialAlert = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 383, 1, 2, 11), Unsigned64()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: cidsAlertSummaryInitialAlert.setStatus('current')
cidsAlertInterfaceGroup = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 383, 1, 2, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: cidsAlertInterfaceGroup.setStatus('deprecated')
cidsAlertVlan = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 383, 1, 2, 13), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: cidsAlertVlan.setStatus('current')
cidsAlertVictimContext = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 383, 1, 2, 14), SnmpAdminString()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: cidsAlertVictimContext.setStatus('current')
cidsAlertAttackerContext = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 383, 1, 2, 15), SnmpAdminString()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: cidsAlertAttackerContext.setStatus('current')
cidsAlertAttackerAddress = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 383, 1, 2, 16), SnmpAdminString()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: cidsAlertAttackerAddress.setStatus('current')
cidsAlertVictimAddress = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 383, 1, 2, 17), SnmpAdminString()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: cidsAlertVictimAddress.setStatus('current')
cidsAlertIpLoggingActivated = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 383, 1, 2, 18), TruthValue()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: cidsAlertIpLoggingActivated.setStatus('current')
cidsAlertTcpResetSent = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 383, 1, 2, 19), TruthValue()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: cidsAlertTcpResetSent.setStatus('current')
cidsAlertShunRequested = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 383, 1, 2, 20), TruthValue()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: cidsAlertShunRequested.setStatus('current')
cidsAlertDetails = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 383, 1, 2, 21), SnmpAdminString()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: cidsAlertDetails.setStatus('current')
cidsAlertIpLogId = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 383, 1, 2, 22), SnmpAdminString()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: cidsAlertIpLogId.setStatus('current')
cidsThreatResponseStatus = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 383, 1, 2, 23), SnmpAdminString()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: cidsThreatResponseStatus.setStatus('current')
cidsThreatResponseSeverity = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 383, 1, 2, 24), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: cidsThreatResponseSeverity.setStatus('current')
cidsAlertEventRiskRating = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 383, 1, 2, 25), Unsigned32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: cidsAlertEventRiskRating.setStatus('current')
cidsAlertIfIndex = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 383, 1, 2, 26), InterfaceIndex()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: cidsAlertIfIndex.setStatus('current')
cidsAlertProtocol = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 383, 1, 2, 27), CiscoIpProtocol()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: cidsAlertProtocol.setStatus('current')
cidsAlertDeniedAttacker = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 383, 1, 2, 28), TruthValue()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: cidsAlertDeniedAttacker.setStatus('current')
cidsAlertDeniedFlow = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 383, 1, 2, 29), TruthValue()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: cidsAlertDeniedFlow.setStatus('current')
cidsAlertDenyPacketReqNotPerf = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 383, 1, 2, 30), TruthValue()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: cidsAlertDenyPacketReqNotPerf.setStatus('current')
cidsAlertDenyFlowReqNotPerf = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 383, 1, 2, 31), TruthValue()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: cidsAlertDenyFlowReqNotPerf.setStatus('current')
cidsAlertDenyAttackerReqNotPerf = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 383, 1, 2, 32), TruthValue()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: cidsAlertDenyAttackerReqNotPerf.setStatus('current')
cidsAlertBlockConnectionReq = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 383, 1, 2, 33), TruthValue()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: cidsAlertBlockConnectionReq.setStatus('current')
cidsAlertLogAttackerPacketsAct = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 383, 1, 2, 34), TruthValue()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: cidsAlertLogAttackerPacketsAct.setStatus('current')
cidsAlertLogVictimPacketsAct = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 383, 1, 2, 35), TruthValue()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: cidsAlertLogVictimPacketsAct.setStatus('current')
cidsAlertLogPairPacketsActivated = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 383, 1, 2, 36), TruthValue()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: cidsAlertLogPairPacketsActivated.setStatus('current')
cidsAlertRateLimitRequested = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 383, 1, 2, 37), TruthValue()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: cidsAlertRateLimitRequested.setStatus('current')
cidsAlertDeniedAttackVictimPair = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 383, 1, 2, 38), TruthValue()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: cidsAlertDeniedAttackVictimPair.setStatus('current')
cidsAlertDeniedAttackSericePair = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 383, 1, 2, 39), TruthValue()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: cidsAlertDeniedAttackSericePair.setStatus('current')
cidsAlertDenyAttackVicReqNotPerf = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 383, 1, 2, 40), TruthValue()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: cidsAlertDenyAttackVicReqNotPerf.setStatus('current')
cidsAlertDenyAttackSerReqNotPerf = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 383, 1, 2, 41), TruthValue()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: cidsAlertDenyAttackSerReqNotPerf.setStatus('current')
cidsAlertThreatValueRating = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 383, 1, 2, 42), Unsigned32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: cidsAlertThreatValueRating.setStatus('current')
cidsAlertRiskRatingTargetValue = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 383, 1, 2, 43), CidsTargetValue()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: cidsAlertRiskRatingTargetValue.setStatus('current')
cidsAlertRiskRatingRelevance = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 383, 1, 2, 44), CidsAttackRelevance()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: cidsAlertRiskRatingRelevance.setStatus('current')
cidsAlertRiskRatingWatchList = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 383, 1, 2, 45), Unsigned32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: cidsAlertRiskRatingWatchList.setStatus('current')
cidsAlertDenyPacket = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 383, 1, 2, 46), TruthValue()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: cidsAlertDenyPacket.setStatus('current')
cidsAlertBlockHost = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 383, 1, 2, 47), TruthValue()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: cidsAlertBlockHost.setStatus('current')
cidsAlertTcpOneWayResetSent = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 383, 1, 2, 48), TruthValue()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: cidsAlertTcpOneWayResetSent.setStatus('current')
cidsAlertVirtualSensor = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 383, 1, 2, 49), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 64))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: cidsAlertVirtualSensor.setStatus('current')
cidsErrorSeverity = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 383, 1, 3, 1), SnmpAdminString()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: cidsErrorSeverity.setStatus('current')
cidsErrorName = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 383, 1, 3, 2), CidsErrorCode()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: cidsErrorName.setStatus('current')
cidsErrorMessage = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 383, 1, 3, 3), SnmpAdminString()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: cidsErrorMessage.setStatus('current')
cidsHealthPacketLoss = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 383, 1, 4, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setUnits('percent').setMaxAccess("readonly")
if mibBuilder.loadTexts: cidsHealthPacketLoss.setStatus('current')
cidsHealthPacketDenialRate = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 383, 1, 4, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setUnits('percent').setMaxAccess("readonly")
if mibBuilder.loadTexts: cidsHealthPacketDenialRate.setStatus('current')
cidsHealthAlarmsGenerated = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 383, 1, 4, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cidsHealthAlarmsGenerated.setStatus('current')
cidsHealthFragmentsInFRU = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 383, 1, 4, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cidsHealthFragmentsInFRU.setStatus('current')
cidsHealthDatagramsInFRU = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 383, 1, 4, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cidsHealthDatagramsInFRU.setStatus('current')
cidsHealthTcpEmbryonicStreams = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 383, 1, 4, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cidsHealthTcpEmbryonicStreams.setStatus('current')
cidsHealthTCPEstablishedStreams = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 383, 1, 4, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cidsHealthTCPEstablishedStreams.setStatus('current')
cidsHealthTcpClosingStreams = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 383, 1, 4, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cidsHealthTcpClosingStreams.setStatus('current')
cidsHealthTcpStreams = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 383, 1, 4, 9), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cidsHealthTcpStreams.setStatus('current')
cidsHealthActiveNodes = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 383, 1, 4, 10), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cidsHealthActiveNodes.setStatus('current')
cidsHealthTcpDualIpAndPorts = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 383, 1, 4, 11), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cidsHealthTcpDualIpAndPorts.setStatus('current')
cidsHealthUdpDualIpAndPorts = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 383, 1, 4, 12), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cidsHealthUdpDualIpAndPorts.setStatus('current')
cidsHealthIpDualIp = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 383, 1, 4, 13), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cidsHealthIpDualIp.setStatus('current')
cidsHealthIsSensorMemoryCritical = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 383, 1, 4, 14), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 10))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cidsHealthIsSensorMemoryCritical.setStatus('current')
cidsHealthIsSensorActive = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 383, 1, 4, 15), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cidsHealthIsSensorActive.setStatus('current')
cidsHealthCommandAndControlPort = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 383, 1, 4, 16), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cidsHealthCommandAndControlPort.setStatus('current')
cidsHealthSensorStatsResetTime = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 383, 1, 4, 17), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cidsHealthSensorStatsResetTime.setStatus('current')
cidsHealthSecMonAvailability = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 383, 1, 4, 18), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cidsHealthSecMonAvailability.setStatus('current')
cidsHealthSecMonOverallHealth = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 383, 1, 4, 19), CidsHealthStatusColor()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cidsHealthSecMonOverallHealth.setStatus('current')
cidsHealthSecMonSoftwareVersion = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 383, 1, 4, 20), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cidsHealthSecMonSoftwareVersion.setStatus('current')
cidsHealthSecMonSignatureVersion = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 383, 1, 4, 21), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cidsHealthSecMonSignatureVersion.setStatus('current')
cidsHealthSecMonLicenseStatus = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 383, 1, 4, 22), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cidsHealthSecMonLicenseStatus.setStatus('current')
cidsHealthSecMonOverallAppColor = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 383, 1, 4, 23), CidsHealthStatusColor()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: cidsHealthSecMonOverallAppColor.setStatus('current')
cidsHealthSecMonMainAppStatus = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 383, 1, 4, 24), CidsApplicationStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cidsHealthSecMonMainAppStatus.setStatus('current')
cidsHealthSecMonAnalysisEngineStatus = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 383, 1, 4, 25), CidsApplicationStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cidsHealthSecMonAnalysisEngineStatus.setStatus('current')
cidsHealthSecMonCollaborationAppStatus = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 383, 1, 4, 26), CidsApplicationStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cidsHealthSecMonCollaborationAppStatus.setStatus('current')
cidsHealthSecMonByPassMode = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 383, 1, 4, 27), TruthValue()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: cidsHealthSecMonByPassMode.setStatus('current')
cidsHealthSecMonMissedPktPctAndThresh = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 383, 1, 4, 28), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cidsHealthSecMonMissedPktPctAndThresh.setStatus('current')
cidsHealthSecMonAnalysisEngMemPercent = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 383, 1, 4, 29), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setUnits('percent').setMaxAccess("readonly")
if mibBuilder.loadTexts: cidsHealthSecMonAnalysisEngMemPercent.setStatus('current')
cidsHealthSecMonSensorLoad = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 383, 1, 4, 30), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cidsHealthSecMonSensorLoad.setStatus('current')
cidsHealthSecMonSensorLoadColor = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 383, 1, 4, 31), CidsHealthStatusColor()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: cidsHealthSecMonSensorLoadColor.setStatus('current')
cidsHealthSecMonVirtSensorStatusTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 383, 1, 4, 32), )
if mibBuilder.loadTexts: cidsHealthSecMonVirtSensorStatusTable.setStatus('current')
cidsHealthSecMonVirtSensorStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 383, 1, 4, 32, 1), ).setIndexNames((0, "CISCO-CIDS-MIB", "cidsHealthSecMonVirtSensorName"))
if mibBuilder.loadTexts: cidsHealthSecMonVirtSensorStatusEntry.setStatus('current')
cidsHealthSecMonVirtSensorName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 383, 1, 4, 32, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 64)))
if mibBuilder.loadTexts: cidsHealthSecMonVirtSensorName.setStatus('current')
cidsHealthSecMonVirtSensorStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 383, 1, 4, 32, 1, 2), CidsHealthStatusColor()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cidsHealthSecMonVirtSensorStatus.setStatus('current')
cidsHealthSecMonDataStorageTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 383, 1, 4, 33), )
if mibBuilder.loadTexts: cidsHealthSecMonDataStorageTable.setStatus('current')
cidsHealthSecMonDataStorageEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 383, 1, 4, 33, 1), ).setIndexNames((0, "CISCO-CIDS-MIB", "cidsHealthSecMonPartitionName"))
if mibBuilder.loadTexts: cidsHealthSecMonDataStorageEntry.setStatus('current')
cidsHealthSecMonPartitionName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 383, 1, 4, 33, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 64)))
if mibBuilder.loadTexts: cidsHealthSecMonPartitionName.setStatus('current')
cidsHealthSecMonTotalPartitionSpace = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 383, 1, 4, 33, 1, 2), Unsigned32()).setUnits('MB').setMaxAccess("readonly")
if mibBuilder.loadTexts: cidsHealthSecMonTotalPartitionSpace.setStatus('current')
cidsHealthSecMonUtilizedPartitionSpace = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 383, 1, 4, 33, 1, 3), Unsigned32()).setUnits('MB').setMaxAccess("readonly")
if mibBuilder.loadTexts: cidsHealthSecMonUtilizedPartitionSpace.setStatus('current')
ciscoCidsAlert = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 383, 0, 1)).setObjects(("CISCO-CIDS-MIB", "cidsGeneralEventId"), ("CISCO-CIDS-MIB", "cidsGeneralLocalTime"), ("CISCO-CIDS-MIB", "cidsGeneralUTCTime"), ("CISCO-CIDS-MIB", "cidsGeneralOriginatorHostId"), ("CISCO-CIDS-MIB", "cidsAlertSeverity"), ("CISCO-CIDS-MIB", "cidsAlertSignatureSigName"), ("CISCO-CIDS-MIB", "cidsAlertSignatureSigId"), ("CISCO-CIDS-MIB", "cidsAlertSignatureSubSigId"), ("CISCO-CIDS-MIB", "cidsAlertAlarmTraits"), ("CISCO-CIDS-MIB", "cidsAlertAttackerAddress"), ("CISCO-CIDS-MIB", "cidsAlertVictimAddress"))
if mibBuilder.loadTexts: ciscoCidsAlert.setStatus('current')
ciscoCidsError = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 383, 0, 2)).setObjects(("CISCO-CIDS-MIB", "cidsGeneralEventId"), ("CISCO-CIDS-MIB", "cidsGeneralLocalTime"), ("CISCO-CIDS-MIB", "cidsGeneralUTCTime"), ("CISCO-CIDS-MIB", "cidsGeneralOriginatorHostId"), ("CISCO-CIDS-MIB", "cidsErrorSeverity"), ("CISCO-CIDS-MIB", "cidsErrorName"), ("CISCO-CIDS-MIB", "cidsErrorMessage"))
if mibBuilder.loadTexts: ciscoCidsError.setStatus('current')
ciscoCidsHealthHeartBeat = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 383, 0, 3)).setObjects(("CISCO-CIDS-MIB", "cidsGeneralEventId"), ("CISCO-CIDS-MIB", "cidsGeneralOriginatorHostId"), ("CISCO-CIDS-MIB", "cidsGeneralLocalTime"), ("CISCO-CIDS-MIB", "cidsGeneralUTCTime"), ("CISCO-CIDS-MIB", "cidsHealthSecMonOverallAppColor"), ("CISCO-CIDS-MIB", "cidsHealthSecMonSensorLoadColor"), ("CISCO-CIDS-MIB", "cidsHealthSecMonOverallHealth"))
if mibBuilder.loadTexts: ciscoCidsHealthHeartBeat.setStatus('current')
ciscoCidsHealthMetricChange = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 383, 0, 4)).setObjects(("CISCO-CIDS-MIB", "cidsGeneralEventId"), ("CISCO-CIDS-MIB", "cidsGeneralOriginatorHostId"), ("CISCO-CIDS-MIB", "cidsGeneralLocalTime"), ("CISCO-CIDS-MIB", "cidsGeneralUTCTime"), ("CISCO-CIDS-MIB", "cidsHealthSecMonOverallAppColor"), ("CISCO-CIDS-MIB", "cidsHealthSecMonSensorLoadColor"), ("CISCO-CIDS-MIB", "cidsHealthSecMonOverallHealth"))
if mibBuilder.loadTexts: ciscoCidsHealthMetricChange.setStatus('current')
ciscoCidsMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 383, 2, 1))
ciscoCidsMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 383, 2, 2))
ciscoCidsMIBCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 383, 2, 1, 1)).setObjects(("CISCO-CIDS-MIB", "ciscoCidsGeneralObjectGroup"), ("CISCO-CIDS-MIB", "ciscoCidsAlertObjectGroup"), ("CISCO-CIDS-MIB", "ciscoCidsErrorObjectGroup"), ("CISCO-CIDS-MIB", "ciscoCidsHealthObjectGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoCidsMIBCompliance = ciscoCidsMIBCompliance.setStatus('deprecated')
ciscoCidsMIBComplianceRev1 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 383, 2, 1, 2)).setObjects(("CISCO-CIDS-MIB", "ciscoCidsGeneralObjectGroupRev1"), ("CISCO-CIDS-MIB", "ciscoCidsAlertObjectGroupRev1"), ("CISCO-CIDS-MIB", "ciscoCidsErrorObjectGroup"), ("CISCO-CIDS-MIB", "ciscoCidsHealthObjectGroup"), ("CISCO-CIDS-MIB", "ciscoCidsNotificationsGroup"), ("CISCO-CIDS-MIB", "ciscoCidsOptionalObjectGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoCidsMIBComplianceRev1 = ciscoCidsMIBComplianceRev1.setStatus('deprecated')
ciscoCidsMIBComplianceRev2 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 383, 2, 1, 3)).setObjects(("CISCO-CIDS-MIB", "ciscoCidsGeneralObjectGroupRev1"), ("CISCO-CIDS-MIB", "ciscoCidsAlertObjectGroupRev1"), ("CISCO-CIDS-MIB", "ciscoCidsErrorObjectGroup"), ("CISCO-CIDS-MIB", "ciscoCidsHealthObjectGroup"), ("CISCO-CIDS-MIB", "ciscoCidsNotificationsGroup"), ("CISCO-CIDS-MIB", "ciscoCidsOptionalObjectGroupRev1"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoCidsMIBComplianceRev2 = ciscoCidsMIBComplianceRev2.setStatus('deprecated')
ciscoCidsMIBComplianceRev3 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 383, 2, 1, 4)).setObjects(("CISCO-CIDS-MIB", "ciscoCidsGeneralObjectGroupRev1"), ("CISCO-CIDS-MIB", "ciscoCidsAlertObjectGroupRev1"), ("CISCO-CIDS-MIB", "ciscoCidsErrorObjectGroup"), ("CISCO-CIDS-MIB", "ciscoCidsHealthObjectGroup"), ("CISCO-CIDS-MIB", "ciscoCidsNotificationsGroup"), ("CISCO-CIDS-MIB", "ciscoCidsOptionalObjectGroupRev2"), ("CISCO-CIDS-MIB", "ciscoCidsOptionalObjectGroupRev1"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoCidsMIBComplianceRev3 = ciscoCidsMIBComplianceRev3.setStatus('deprecated')
ciscoCidsMIBComplianceRev4 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 383, 2, 1, 5)).setObjects(("CISCO-CIDS-MIB", "ciscoCidsErrorObjectGroup"), ("CISCO-CIDS-MIB", "ciscoCidsGeneralObjectGroupRev1"), ("CISCO-CIDS-MIB", "ciscoCidsAlertObjectGroupRev2"), ("CISCO-CIDS-MIB", "ciscoCidsHealthObjectGroupRev1"), ("CISCO-CIDS-MIB", "ciscoCidsNotificationsGroupRev1"), ("CISCO-CIDS-MIB", "ciscoCidsHealthObjectGroup"), ("CISCO-CIDS-MIB", "ciscoCidsNotificationsGroup"), ("CISCO-CIDS-MIB", "ciscoCidsAlertObjectGroupRev1"), ("CISCO-CIDS-MIB", "ciscoCidsOptionalObjectGroupRev3"), ("CISCO-CIDS-MIB", "ciscoCidsOptionalObjectGroupRev2"), ("CISCO-CIDS-MIB", "ciscoCidsOptionalObjectGroupRev1"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoCidsMIBComplianceRev4 = ciscoCidsMIBComplianceRev4.setStatus('current')
ciscoCidsGeneralObjectGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 383, 2, 2, 1)).setObjects(("CISCO-CIDS-MIB", "cidsGeneralEventId"), ("CISCO-CIDS-MIB", "cidsGeneralLocalTime"), ("CISCO-CIDS-MIB", "cidsGeneralUTCTime"), ("CISCO-CIDS-MIB", "cidsGeneralOriginatorHostId"), ("CISCO-CIDS-MIB", "cidsGeneralOriginatorAppName"), ("CISCO-CIDS-MIB", "cidsGeneralOriginatorAppId"), ("CISCO-CIDS-MIB", "cidsNotificationsEnabled"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoCidsGeneralObjectGroup = ciscoCidsGeneralObjectGroup.setStatus('deprecated')
ciscoCidsAlertObjectGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 383, 2, 2, 2)).setObjects(("CISCO-CIDS-MIB", "cidsAlertSeverity"), ("CISCO-CIDS-MIB", "cidsAlertAlarmTraits"), ("CISCO-CIDS-MIB", "cidsAlertSignature"), ("CISCO-CIDS-MIB", "cidsAlertSignatureSigName"), ("CISCO-CIDS-MIB", "cidsAlertSignatureSigId"), ("CISCO-CIDS-MIB", "cidsAlertSignatureSubSigId"), ("CISCO-CIDS-MIB", "cidsAlertSignatureVersion"), ("CISCO-CIDS-MIB", "cidsAlertSummary"), ("CISCO-CIDS-MIB", "cidsAlertSummaryType"), ("CISCO-CIDS-MIB", "cidsAlertSummaryFinal"), ("CISCO-CIDS-MIB", "cidsAlertSummaryInitialAlert"), ("CISCO-CIDS-MIB", "cidsAlertInterfaceGroup"), ("CISCO-CIDS-MIB", "cidsAlertVlan"), ("CISCO-CIDS-MIB", "cidsAlertVictimContext"), ("CISCO-CIDS-MIB", "cidsAlertAttackerContext"), ("CISCO-CIDS-MIB", "cidsAlertVictimAddress"), ("CISCO-CIDS-MIB", "cidsAlertAttackerAddress"), ("CISCO-CIDS-MIB", "cidsAlertIpLoggingActivated"), ("CISCO-CIDS-MIB", "cidsAlertTcpResetSent"), ("CISCO-CIDS-MIB", "cidsAlertShunRequested"), ("CISCO-CIDS-MIB", "cidsAlertDetails"), ("CISCO-CIDS-MIB", "cidsAlertIpLogId"), ("CISCO-CIDS-MIB", "cidsThreatResponseStatus"), ("CISCO-CIDS-MIB", "cidsThreatResponseSeverity"), ("CISCO-CIDS-MIB", "cidsAlertEventRiskRating"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoCidsAlertObjectGroup = ciscoCidsAlertObjectGroup.setStatus('deprecated')
ciscoCidsErrorObjectGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 383, 2, 2, 3)).setObjects(("CISCO-CIDS-MIB", "cidsErrorSeverity"), ("CISCO-CIDS-MIB", "cidsErrorName"), ("CISCO-CIDS-MIB", "cidsErrorMessage"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoCidsErrorObjectGroup = ciscoCidsErrorObjectGroup.setStatus('current')
ciscoCidsNotificationsGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 9, 9, 383, 2, 2, 4)).setObjects(("CISCO-CIDS-MIB", "ciscoCidsAlert"), ("CISCO-CIDS-MIB", "ciscoCidsError"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoCidsNotificationsGroup = ciscoCidsNotificationsGroup.setStatus('current')
ciscoCidsHealthObjectGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 383, 2, 2, 5)).setObjects(("CISCO-CIDS-MIB", "cidsHealthPacketLoss"), ("CISCO-CIDS-MIB", "cidsHealthPacketDenialRate"), ("CISCO-CIDS-MIB", "cidsHealthAlarmsGenerated"), ("CISCO-CIDS-MIB", "cidsHealthFragmentsInFRU"), ("CISCO-CIDS-MIB", "cidsHealthDatagramsInFRU"), ("CISCO-CIDS-MIB", "cidsHealthTcpEmbryonicStreams"), ("CISCO-CIDS-MIB", "cidsHealthTCPEstablishedStreams"), ("CISCO-CIDS-MIB", "cidsHealthTcpClosingStreams"), ("CISCO-CIDS-MIB", "cidsHealthTcpStreams"), ("CISCO-CIDS-MIB", "cidsHealthActiveNodes"), ("CISCO-CIDS-MIB", "cidsHealthTcpDualIpAndPorts"), ("CISCO-CIDS-MIB", "cidsHealthUdpDualIpAndPorts"), ("CISCO-CIDS-MIB", "cidsHealthIpDualIp"), ("CISCO-CIDS-MIB", "cidsHealthIsSensorMemoryCritical"), ("CISCO-CIDS-MIB", "cidsHealthIsSensorActive"), ("CISCO-CIDS-MIB", "cidsHealthCommandAndControlPort"), ("CISCO-CIDS-MIB", "cidsHealthSensorStatsResetTime"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoCidsHealthObjectGroup = ciscoCidsHealthObjectGroup.setStatus('current')
ciscoCidsGeneralObjectGroupRev1 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 383, 2, 2, 6)).setObjects(("CISCO-CIDS-MIB", "cidsGeneralEventId"), ("CISCO-CIDS-MIB", "cidsGeneralLocalTime"), ("CISCO-CIDS-MIB", "cidsGeneralUTCTime"), ("CISCO-CIDS-MIB", "cidsGeneralOriginatorHostId"), ("CISCO-CIDS-MIB", "cidsNotificationsEnabled"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoCidsGeneralObjectGroupRev1 = ciscoCidsGeneralObjectGroupRev1.setStatus('current')
ciscoCidsAlertObjectGroupRev1 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 383, 2, 2, 7)).setObjects(("CISCO-CIDS-MIB", "cidsAlertSeverity"), ("CISCO-CIDS-MIB", "cidsAlertAlarmTraits"), ("CISCO-CIDS-MIB", "cidsAlertSignatureSigName"), ("CISCO-CIDS-MIB", "cidsAlertSignatureSigId"), ("CISCO-CIDS-MIB", "cidsAlertSignatureSubSigId"), ("CISCO-CIDS-MIB", "cidsAlertVictimAddress"), ("CISCO-CIDS-MIB", "cidsAlertAttackerAddress"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoCidsAlertObjectGroupRev1 = ciscoCidsAlertObjectGroupRev1.setStatus('current')
ciscoCidsOptionalObjectGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 383, 2, 2, 8)).setObjects(("CISCO-CIDS-MIB", "cidsGeneralOriginatorAppName"), ("CISCO-CIDS-MIB", "cidsGeneralOriginatorAppId"), ("CISCO-CIDS-MIB", "cidsAlertSignature"), ("CISCO-CIDS-MIB", "cidsAlertSignatureVersion"), ("CISCO-CIDS-MIB", "cidsAlertSummary"), ("CISCO-CIDS-MIB", "cidsAlertSummaryType"), ("CISCO-CIDS-MIB", "cidsAlertSummaryFinal"), ("CISCO-CIDS-MIB", "cidsAlertSummaryInitialAlert"), ("CISCO-CIDS-MIB", "cidsAlertInterfaceGroup"), ("CISCO-CIDS-MIB", "cidsAlertVlan"), ("CISCO-CIDS-MIB", "cidsAlertVictimContext"), ("CISCO-CIDS-MIB", "cidsAlertAttackerContext"), ("CISCO-CIDS-MIB", "cidsAlertIpLoggingActivated"), ("CISCO-CIDS-MIB", "cidsAlertTcpResetSent"), ("CISCO-CIDS-MIB", "cidsAlertShunRequested"), ("CISCO-CIDS-MIB", "cidsAlertDetails"), ("CISCO-CIDS-MIB", "cidsAlertIpLogId"), ("CISCO-CIDS-MIB", "cidsThreatResponseStatus"), ("CISCO-CIDS-MIB", "cidsThreatResponseSeverity"), ("CISCO-CIDS-MIB", "cidsAlertEventRiskRating"), ("CISCO-CIDS-MIB", "cidsAlertIfIndex"), ("CISCO-CIDS-MIB", "cidsAlertProtocol"), ("CISCO-CIDS-MIB", "cidsAlertDeniedAttacker"), ("CISCO-CIDS-MIB", "cidsAlertDeniedFlow"), ("CISCO-CIDS-MIB", "cidsAlertDenyPacketReqNotPerf"), ("CISCO-CIDS-MIB", "cidsAlertDenyFlowReqNotPerf"), ("CISCO-CIDS-MIB", "cidsAlertDenyAttackerReqNotPerf"), ("CISCO-CIDS-MIB", "cidsAlertBlockConnectionReq"), ("CISCO-CIDS-MIB", "cidsAlertLogAttackerPacketsAct"), ("CISCO-CIDS-MIB", "cidsAlertLogVictimPacketsAct"), ("CISCO-CIDS-MIB", "cidsAlertLogPairPacketsActivated"), ("CISCO-CIDS-MIB", "cidsAlertRateLimitRequested"), ("CISCO-CIDS-MIB", "cidsAlertDeniedAttackVictimPair"), ("CISCO-CIDS-MIB", "cidsAlertDeniedAttackSericePair"), ("CISCO-CIDS-MIB", "cidsAlertDenyAttackVicReqNotPerf"), ("CISCO-CIDS-MIB", "cidsAlertDenyAttackSerReqNotPerf"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoCidsOptionalObjectGroup = ciscoCidsOptionalObjectGroup.setStatus('deprecated')
ciscoCidsOptionalObjectGroupRev1 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 383, 2, 2, 9)).setObjects(("CISCO-CIDS-MIB", "cidsGeneralOriginatorAppName"), ("CISCO-CIDS-MIB", "cidsGeneralOriginatorAppId"), ("CISCO-CIDS-MIB", "cidsAlertSignature"), ("CISCO-CIDS-MIB", "cidsAlertSignatureVersion"), ("CISCO-CIDS-MIB", "cidsAlertSummary"), ("CISCO-CIDS-MIB", "cidsAlertSummaryType"), ("CISCO-CIDS-MIB", "cidsAlertSummaryFinal"), ("CISCO-CIDS-MIB", "cidsAlertSummaryInitialAlert"), ("CISCO-CIDS-MIB", "cidsAlertInterfaceGroup"), ("CISCO-CIDS-MIB", "cidsAlertVlan"), ("CISCO-CIDS-MIB", "cidsAlertVictimContext"), ("CISCO-CIDS-MIB", "cidsAlertAttackerContext"), ("CISCO-CIDS-MIB", "cidsAlertIpLoggingActivated"), ("CISCO-CIDS-MIB", "cidsAlertTcpResetSent"), ("CISCO-CIDS-MIB", "cidsAlertShunRequested"), ("CISCO-CIDS-MIB", "cidsAlertDetails"), ("CISCO-CIDS-MIB", "cidsAlertIpLogId"), ("CISCO-CIDS-MIB", "cidsThreatResponseStatus"), ("CISCO-CIDS-MIB", "cidsThreatResponseSeverity"), ("CISCO-CIDS-MIB", "cidsAlertEventRiskRating"), ("CISCO-CIDS-MIB", "cidsAlertIfIndex"), ("CISCO-CIDS-MIB", "cidsAlertProtocol"), ("CISCO-CIDS-MIB", "cidsAlertDeniedAttacker"), ("CISCO-CIDS-MIB", "cidsAlertDeniedFlow"), ("CISCO-CIDS-MIB", "cidsAlertDenyPacketReqNotPerf"), ("CISCO-CIDS-MIB", "cidsAlertDenyFlowReqNotPerf"), ("CISCO-CIDS-MIB", "cidsAlertDenyAttackerReqNotPerf"), ("CISCO-CIDS-MIB", "cidsAlertBlockConnectionReq"), ("CISCO-CIDS-MIB", "cidsAlertLogAttackerPacketsAct"), ("CISCO-CIDS-MIB", "cidsAlertLogVictimPacketsAct"), ("CISCO-CIDS-MIB", "cidsAlertLogPairPacketsActivated"), ("CISCO-CIDS-MIB", "cidsAlertRateLimitRequested"), ("CISCO-CIDS-MIB", "cidsAlertDeniedAttackVictimPair"), ("CISCO-CIDS-MIB", "cidsAlertDeniedAttackSericePair"), ("CISCO-CIDS-MIB", "cidsAlertDenyAttackVicReqNotPerf"), ("CISCO-CIDS-MIB", "cidsAlertDenyAttackSerReqNotPerf"), ("CISCO-CIDS-MIB", "cidsAlertThreatValueRating"), ("CISCO-CIDS-MIB", "cidsAlertRiskRatingTargetValue"), ("CISCO-CIDS-MIB", "cidsAlertRiskRatingRelevance"), ("CISCO-CIDS-MIB", "cidsAlertRiskRatingWatchList"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoCidsOptionalObjectGroupRev1 = ciscoCidsOptionalObjectGroupRev1.setStatus('current')
ciscoCidsOptionalObjectGroupRev2 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 383, 2, 2, 10)).setObjects(("CISCO-CIDS-MIB", "cidsAlertDenyPacket"), ("CISCO-CIDS-MIB", "cidsAlertBlockHost"), ("CISCO-CIDS-MIB", "cidsAlertTcpOneWayResetSent"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoCidsOptionalObjectGroupRev2 = ciscoCidsOptionalObjectGroupRev2.setStatus('current')
ciscoCidsAlertObjectGroupRev2 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 383, 2, 2, 11)).setObjects(("CISCO-CIDS-MIB", "cidsAlertSignature"), ("CISCO-CIDS-MIB", "cidsAlertSignatureVersion"), ("CISCO-CIDS-MIB", "cidsAlertSummary"), ("CISCO-CIDS-MIB", "cidsAlertSummaryType"), ("CISCO-CIDS-MIB", "cidsAlertSummaryFinal"), ("CISCO-CIDS-MIB", "cidsAlertSummaryInitialAlert"), ("CISCO-CIDS-MIB", "cidsAlertVlan"), ("CISCO-CIDS-MIB", "cidsAlertVictimContext"), ("CISCO-CIDS-MIB", "cidsAlertAttackerContext"), ("CISCO-CIDS-MIB", "cidsAlertIpLoggingActivated"), ("CISCO-CIDS-MIB", "cidsAlertTcpResetSent"), ("CISCO-CIDS-MIB", "cidsAlertShunRequested"), ("CISCO-CIDS-MIB", "cidsAlertDetails"), ("CISCO-CIDS-MIB", "cidsAlertIpLogId"), ("CISCO-CIDS-MIB", "cidsThreatResponseStatus"), ("CISCO-CIDS-MIB", "cidsThreatResponseSeverity"), ("CISCO-CIDS-MIB", "cidsAlertEventRiskRating"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoCidsAlertObjectGroupRev2 = ciscoCidsAlertObjectGroupRev2.setStatus('current')
ciscoCidsHealthObjectGroupRev1 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 383, 2, 2, 12)).setObjects(("CISCO-CIDS-MIB", "cidsHealthSecMonAvailability"), ("CISCO-CIDS-MIB", "cidsHealthSecMonOverallHealth"), ("CISCO-CIDS-MIB", "cidsHealthSecMonSoftwareVersion"), ("CISCO-CIDS-MIB", "cidsHealthSecMonSignatureVersion"), ("CISCO-CIDS-MIB", "cidsHealthSecMonLicenseStatus"), ("CISCO-CIDS-MIB", "cidsHealthSecMonMainAppStatus"), ("CISCO-CIDS-MIB", "cidsHealthSecMonAnalysisEngineStatus"), ("CISCO-CIDS-MIB", "cidsHealthSecMonByPassMode"), ("CISCO-CIDS-MIB", "cidsHealthSecMonMissedPktPctAndThresh"), ("CISCO-CIDS-MIB", "cidsHealthSecMonAnalysisEngMemPercent"), ("CISCO-CIDS-MIB", "cidsHealthSecMonSensorLoad"), ("CISCO-CIDS-MIB", "cidsHealthSecMonVirtSensorStatus"), ("CISCO-CIDS-MIB", "cidsHealthSecMonCollaborationAppStatus"), ("CISCO-CIDS-MIB", "cidsHealthSecMonTotalPartitionSpace"), ("CISCO-CIDS-MIB", "cidsHealthSecMonUtilizedPartitionSpace"), ("CISCO-CIDS-MIB", "cidsHealthSecMonOverallAppColor"), ("CISCO-CIDS-MIB", "cidsHealthSecMonSensorLoadColor"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoCidsHealthObjectGroupRev1 = ciscoCidsHealthObjectGroupRev1.setStatus('current')
ciscoCidsOptionalObjectGroupRev3 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 383, 2, 2, 13)).setObjects(("CISCO-CIDS-MIB", "cidsAlertVirtualSensor"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoCidsOptionalObjectGroupRev3 = ciscoCidsOptionalObjectGroupRev3.setStatus('current')
ciscoCidsNotificationsGroupRev1 = NotificationGroup((1, 3, 6, 1, 4, 1, 9, 9, 383, 2, 2, 14)).setObjects(("CISCO-CIDS-MIB", "ciscoCidsHealthHeartBeat"), ("CISCO-CIDS-MIB", "ciscoCidsHealthMetricChange"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoCidsNotificationsGroupRev1 = ciscoCidsNotificationsGroupRev1.setStatus('current')
mibBuilder.exportSymbols("CISCO-CIDS-MIB", CidsErrorCode=CidsErrorCode, cidsAlertDeniedAttacker=cidsAlertDeniedAttacker, cidsAlertThreatValueRating=cidsAlertThreatValueRating, cidsGeneralOriginatorAppId=cidsGeneralOriginatorAppId, cidsGeneralOriginatorAppName=cidsGeneralOriginatorAppName, cidsAlertDenyPacketReqNotPerf=cidsAlertDenyPacketReqNotPerf, cidsAlertAttackerContext=cidsAlertAttackerContext, cidsAlertSeverity=cidsAlertSeverity, cidsAlertLogPairPacketsActivated=cidsAlertLogPairPacketsActivated, cidsGeneral=cidsGeneral, ciscoCidsOptionalObjectGroupRev1=ciscoCidsOptionalObjectGroupRev1, cidsAlertIfIndex=cidsAlertIfIndex, PYSNMP_MODULE_ID=ciscoCidsMIB, cidsAlertEventRiskRating=cidsAlertEventRiskRating, cidsHealthSecMonCollaborationAppStatus=cidsHealthSecMonCollaborationAppStatus, ciscoCidsOptionalObjectGroup=ciscoCidsOptionalObjectGroup, cidsAlertVlan=cidsAlertVlan, cidsHealthSecMonSoftwareVersion=cidsHealthSecMonSoftwareVersion, cidsAlertDeniedAttackSericePair=cidsAlertDeniedAttackSericePair, cidsAlertBlockHost=cidsAlertBlockHost, ciscoCidsError=ciscoCidsError, ciscoCidsMIBCompliance=ciscoCidsMIBCompliance, CidsHealthStatusColor=CidsHealthStatusColor, ciscoCidsAlert=ciscoCidsAlert, cidsHealthSecMonMissedPktPctAndThresh=cidsHealthSecMonMissedPktPctAndThresh, cidsHealthSecMonDataStorageTable=cidsHealthSecMonDataStorageTable, cidsHealthSecMonOverallAppColor=cidsHealthSecMonOverallAppColor, ciscoCidsMIBComplianceRev4=ciscoCidsMIBComplianceRev4, cidsAlertTcpResetSent=cidsAlertTcpResetSent, CidsApplicationStatus=CidsApplicationStatus, ciscoCidsNotificationsGroupRev1=ciscoCidsNotificationsGroupRev1, cidsHealthCommandAndControlPort=cidsHealthCommandAndControlPort, cidsHealthSecMonUtilizedPartitionSpace=cidsHealthSecMonUtilizedPartitionSpace, cidsErrorName=cidsErrorName, cidsHealthSecMonVirtSensorStatusEntry=cidsHealthSecMonVirtSensorStatusEntry, cidsAlertRateLimitRequested=cidsAlertRateLimitRequested, cidsAlertDeniedFlow=cidsAlertDeniedFlow, cidsThreatResponseStatus=cidsThreatResponseStatus, ciscoCidsMIBComplianceRev1=ciscoCidsMIBComplianceRev1, cidsAlertDenyAttackerReqNotPerf=cidsAlertDenyAttackerReqNotPerf, ciscoCidsGeneralObjectGroupRev1=ciscoCidsGeneralObjectGroupRev1, cidsAlertLogAttackerPacketsAct=cidsAlertLogAttackerPacketsAct, cidsNotificationsEnabled=cidsNotificationsEnabled, cidsAlertDenyFlowReqNotPerf=cidsAlertDenyFlowReqNotPerf, cidsAlertVictimContext=cidsAlertVictimContext, cidsGeneralEventId=cidsGeneralEventId, cidsAlertDenyAttackSerReqNotPerf=cidsAlertDenyAttackSerReqNotPerf, ciscoCidsHealthHeartBeat=ciscoCidsHealthHeartBeat, cidsAlertProtocol=cidsAlertProtocol, ciscoCidsHealthObjectGroup=ciscoCidsHealthObjectGroup, cidsThreatResponseSeverity=cidsThreatResponseSeverity, cidsAlertRiskRatingTargetValue=cidsAlertRiskRatingTargetValue, cidsAlertSignature=cidsAlertSignature, cidsGeneralLocalTime=cidsGeneralLocalTime, cidsHealthAlarmsGenerated=cidsHealthAlarmsGenerated, cidsHealthSecMonVirtSensorStatus=cidsHealthSecMonVirtSensorStatus, cidsAlertSignatureSigId=cidsAlertSignatureSigId, ciscoCidsMIB=ciscoCidsMIB, ciscoCidsAlertObjectGroup=ciscoCidsAlertObjectGroup, cidsAlertDenyPacket=cidsAlertDenyPacket, cidsAlertDetails=cidsAlertDetails, cidsAlertLogVictimPacketsAct=cidsAlertLogVictimPacketsAct, cidsError=cidsError, cidsGeneralUTCTime=cidsGeneralUTCTime, ciscoCidsMIBNotifs=ciscoCidsMIBNotifs, ciscoCidsHealthObjectGroupRev1=ciscoCidsHealthObjectGroupRev1, cidsAlertInterfaceGroup=cidsAlertInterfaceGroup, cidsHealthSecMonDataStorageEntry=cidsHealthSecMonDataStorageEntry, ciscoCidsOptionalObjectGroupRev2=ciscoCidsOptionalObjectGroupRev2, cidsHealthFragmentsInFRU=cidsHealthFragmentsInFRU, cidsHealthUdpDualIpAndPorts=cidsHealthUdpDualIpAndPorts, ciscoCidsAlertObjectGroupRev2=ciscoCidsAlertObjectGroupRev2, cidsAlertVictimAddress=cidsAlertVictimAddress, ciscoCidsGeneralObjectGroup=ciscoCidsGeneralObjectGroup, cidsAlertSignatureSigName=cidsAlertSignatureSigName, cidsHealthPacketLoss=cidsHealthPacketLoss, cidsAlertBlockConnectionReq=cidsAlertBlockConnectionReq, cidsAlertIpLogId=cidsAlertIpLogId, cidsGeneralOriginatorHostId=cidsGeneralOriginatorHostId, ciscoCidsErrorObjectGroup=ciscoCidsErrorObjectGroup, cidsHealthIsSensorActive=cidsHealthIsSensorActive, cidsAlertSignatureSubSigId=cidsAlertSignatureSubSigId, cidsHealthPacketDenialRate=cidsHealthPacketDenialRate, cidsHealthIsSensorMemoryCritical=cidsHealthIsSensorMemoryCritical, CidsAttackRelevance=CidsAttackRelevance, cidsHealthSecMonTotalPartitionSpace=cidsHealthSecMonTotalPartitionSpace, cidsHealthSensorStatsResetTime=cidsHealthSensorStatsResetTime, ciscoCidsMIBGroups=ciscoCidsMIBGroups, ciscoCidsMIBComplianceRev3=ciscoCidsMIBComplianceRev3, cidsHealth=cidsHealth, cidsHealthIpDualIp=cidsHealthIpDualIp, cidsHealthSecMonSensorLoadColor=cidsHealthSecMonSensorLoadColor, ciscoCidsHealthMetricChange=ciscoCidsHealthMetricChange, ciscoCidsMIBCompliances=ciscoCidsMIBCompliances, ciscoCidsMIBComplianceRev2=ciscoCidsMIBComplianceRev2, cidsAlertSummaryFinal=cidsAlertSummaryFinal, cidsAlertSummaryInitialAlert=cidsAlertSummaryInitialAlert, cidsHealthTcpEmbryonicStreams=cidsHealthTcpEmbryonicStreams, cidsAlertTcpOneWayResetSent=cidsAlertTcpOneWayResetSent, cidsHealthActiveNodes=cidsHealthActiveNodes, cidsHealthSecMonAvailability=cidsHealthSecMonAvailability, cidsAlertDeniedAttackVictimPair=cidsAlertDeniedAttackVictimPair, cidsHealthSecMonLicenseStatus=cidsHealthSecMonLicenseStatus, cidsHealthSecMonSensorLoad=cidsHealthSecMonSensorLoad, cidsErrorMessage=cidsErrorMessage, cidsHealthSecMonOverallHealth=cidsHealthSecMonOverallHealth, cidsAlertSummary=cidsAlertSummary, ciscoCidsMIBObjects=ciscoCidsMIBObjects, cidsAlertVirtualSensor=cidsAlertVirtualSensor, cidsErrorSeverity=cidsErrorSeverity, CidsTargetValue=CidsTargetValue, cidsHealthSecMonMainAppStatus=cidsHealthSecMonMainAppStatus, cidsAlertAlarmTraits=cidsAlertAlarmTraits, cidsHealthDatagramsInFRU=cidsHealthDatagramsInFRU, cidsHealthSecMonPartitionName=cidsHealthSecMonPartitionName, cidsAlertShunRequested=cidsAlertShunRequested, cidsHealthSecMonAnalysisEngMemPercent=cidsHealthSecMonAnalysisEngMemPercent, cidsHealthSecMonVirtSensorStatusTable=cidsHealthSecMonVirtSensorStatusTable, cidsHealthTcpClosingStreams=cidsHealthTcpClosingStreams, cidsAlertAttackerAddress=cidsAlertAttackerAddress, cidsHealthSecMonByPassMode=cidsHealthSecMonByPassMode, cidsHealthTCPEstablishedStreams=cidsHealthTCPEstablishedStreams, cidsHealthTcpStreams=cidsHealthTcpStreams, ciscoCidsAlertObjectGroupRev1=ciscoCidsAlertObjectGroupRev1, cidsAlertRiskRatingWatchList=cidsAlertRiskRatingWatchList, cidsHealthTcpDualIpAndPorts=cidsHealthTcpDualIpAndPorts, ciscoCidsMIBConform=ciscoCidsMIBConform, cidsAlertDenyAttackVicReqNotPerf=cidsAlertDenyAttackVicReqNotPerf, ciscoCidsOptionalObjectGroupRev3=ciscoCidsOptionalObjectGroupRev3, cidsHealthSecMonVirtSensorName=cidsHealthSecMonVirtSensorName, cidsAlertRiskRatingRelevance=cidsAlertRiskRatingRelevance, ciscoCidsNotificationsGroup=ciscoCidsNotificationsGroup, cidsAlertSummaryType=cidsAlertSummaryType, cidsHealthSecMonSignatureVersion=cidsHealthSecMonSignatureVersion, cidsHealthSecMonAnalysisEngineStatus=cidsHealthSecMonAnalysisEngineStatus, cidsAlert=cidsAlert, cidsAlertSignatureVersion=cidsAlertSignatureVersion, cidsAlertIpLoggingActivated=cidsAlertIpLoggingActivated)
