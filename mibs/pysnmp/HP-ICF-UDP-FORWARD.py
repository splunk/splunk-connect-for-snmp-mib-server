#
# PySNMP MIB module HP-ICF-UDP-FORWARD (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/HP-ICF-UDP-FORWARD
# Produced by pysmi-0.3.4 at Mon Apr 29 19:23:12 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ConstraintsIntersection, ValueRangeConstraint, ValueSizeConstraint, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ConstraintsIntersection", "ValueRangeConstraint", "ValueSizeConstraint", "SingleValueConstraint")
hpSwitch, = mibBuilder.importSymbols("HP-ICF-OID", "hpSwitch")
InetAddressType, InetPortNumber, InetAddress = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddressType", "InetPortNumber", "InetAddress")
VlanId, = mibBuilder.importSymbols("Q-BRIDGE-MIB", "VlanId")
ObjectGroup, NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "NotificationGroup", "ModuleCompliance")
TimeTicks, iso, ModuleIdentity, Gauge32, Counter32, ObjectIdentity, NotificationType, Counter64, IpAddress, Integer32, MibScalar, MibTable, MibTableRow, MibTableColumn, MibIdentifier, Bits, Unsigned32 = mibBuilder.importSymbols("SNMPv2-SMI", "TimeTicks", "iso", "ModuleIdentity", "Gauge32", "Counter32", "ObjectIdentity", "NotificationType", "Counter64", "IpAddress", "Integer32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "MibIdentifier", "Bits", "Unsigned32")
DisplayString, RowStatus, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "RowStatus", "TextualConvention")
hpicfUdpFwd = ModuleIdentity((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 23))
hpicfUdpFwd.setRevisions(('2017-06-13 06:30', '2013-01-04 06:30', '2009-08-04 06:30', '2004-05-19 06:30',))
if mibBuilder.loadTexts: hpicfUdpFwd.setLastUpdated('201706130630Z')
if mibBuilder.loadTexts: hpicfUdpFwd.setOrganization('HP Networking')
hpicfUdpFwdNotification = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 23, 0))
hpicfUdpFwdObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 23, 1))
hpicfUdpBcastFwdAdminStatus = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 23, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpicfUdpBcastFwdAdminStatus.setStatus('current')
hpicfUdpFwdServersTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 23, 1, 2), )
if mibBuilder.loadTexts: hpicfUdpFwdServersTable.setStatus('current')
hpicfUdpFwdServersEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 23, 1, 2, 1), ).setIndexNames((0, "HP-ICF-UDP-FORWARD", "hpicfUdpFwdVlanId"), (0, "HP-ICF-UDP-FORWARD", "hpicfUdpFwdServerIndex"))
if mibBuilder.loadTexts: hpicfUdpFwdServersEntry.setStatus('current')
hpicfUdpFwdVlanId = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 23, 1, 2, 1, 1), VlanId())
if mibBuilder.loadTexts: hpicfUdpFwdVlanId.setStatus('current')
hpicfUdpFwdServerIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 23, 1, 2, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4094)))
if mibBuilder.loadTexts: hpicfUdpFwdServerIndex.setStatus('current')
hpicfUdpFwdServerAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 23, 1, 2, 1, 3), InetAddressType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpicfUdpFwdServerAddressType.setStatus('current')
hpicfUdpFwdServerAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 23, 1, 2, 1, 4), InetAddress().subtype(subtypeSpec=ValueSizeConstraint(0, 36))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpicfUdpFwdServerAddress.setStatus('current')
hpicfUdpFwdPortNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 23, 1, 2, 1, 5), InetPortNumber()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpicfUdpFwdPortNumber.setStatus('current')
hpicfUdpFwdRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 23, 1, 2, 1, 6), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpicfUdpFwdRowStatus.setStatus('current')
hpicfUdpFwdDhcpRelayClientDiscards = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 23, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfUdpFwdDhcpRelayClientDiscards.setStatus('current')
hpicfUdpFwdDhcpRelayClientForwards = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 23, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfUdpFwdDhcpRelayClientForwards.setStatus('current')
hpicfUdpFwdDhcpRelayServerDiscards = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 23, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfUdpFwdDhcpRelayServerDiscards.setStatus('current')
hpicfUdpFwdDhcpRelayServerForwards = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 23, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfUdpFwdDhcpRelayServerForwards.setStatus('current')
hpicfUdpFwdDhcpRelayAdminStatus = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 23, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpicfUdpFwdDhcpRelayAdminStatus.setStatus('current')
hpicfUdpFwdDhcpRelayOption82Objects = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 23, 1, 8))
hpicfUdpFwdDhcpRelayOption82AdminStatus = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 23, 1, 8, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpicfUdpFwdDhcpRelayOption82AdminStatus.setStatus('current')
hpicfUdpFwdDhcpRelayOption82Policy = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 23, 1, 8, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("replace", 1), ("keep", 2), ("drop", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpicfUdpFwdDhcpRelayOption82Policy.setStatus('current')
hpicfUdpFwdDhcpRelayOption82ResponseValidate = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 23, 1, 8, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpicfUdpFwdDhcpRelayOption82ResponseValidate.setStatus('current')
hpicfUdpFwdDhcpRelayOption82RemoteId = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 23, 1, 8, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("mac", 1), ("ip", 2), ("mgmtvlan", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpicfUdpFwdDhcpRelayOption82RemoteId.setStatus('current')
hpicfUdpFwdDhcpRelayHopCount = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 23, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpicfUdpFwdDhcpRelayHopCount.setStatus('current')
hpicfUdpFwdConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 23, 2))
hpicfUdpFwdCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 23, 2, 1))
hpicfUdpFwdGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 23, 2, 2))
hpicfUdpFwdCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 23, 2, 1, 1)).setObjects(("HP-ICF-UDP-FORWARD", "hpicfUdpFwdCfgGroup"), ("HP-ICF-UDP-FORWARD", "hpicfUdpFwdServerTableGroup"), ("HP-ICF-UDP-FORWARD", "hpicfUdpFwdCfgGroup"), ("HP-ICF-UDP-FORWARD", "hpicfUdpFwdServerTableGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfUdpFwdCompliance = hpicfUdpFwdCompliance.setStatus('current')
hpicfUdpFwdStatCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 23, 2, 1, 2)).setObjects(("HP-ICF-UDP-FORWARD", "hpicfUdpFwdDhcpRelayStatsGroup"), ("HP-ICF-UDP-FORWARD", "hpicfUdpFwdDhcpRelayStatsGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfUdpFwdStatCompliance = hpicfUdpFwdStatCompliance.setStatus('current')
hpicfUdpFwdDhcpRelayCfgCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 23, 2, 1, 3)).setObjects(("HP-ICF-UDP-FORWARD", "hpicfUdpFwdDhcpRelayCfgGroup"), ("HP-ICF-UDP-FORWARD", "hpicfUdpFwdDhcpRelayCfgGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfUdpFwdDhcpRelayCfgCompliance = hpicfUdpFwdDhcpRelayCfgCompliance.setStatus('current')
hpicfUdpFwdCfgGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 23, 2, 2, 1)).setObjects(("HP-ICF-UDP-FORWARD", "hpicfUdpBcastFwdAdminStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfUdpFwdCfgGroup = hpicfUdpFwdCfgGroup.setStatus('current')
hpicfUdpFwdServerTableGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 23, 2, 2, 2)).setObjects(("HP-ICF-UDP-FORWARD", "hpicfUdpFwdServerAddressType"), ("HP-ICF-UDP-FORWARD", "hpicfUdpFwdServerAddress"), ("HP-ICF-UDP-FORWARD", "hpicfUdpFwdPortNumber"), ("HP-ICF-UDP-FORWARD", "hpicfUdpFwdRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfUdpFwdServerTableGroup = hpicfUdpFwdServerTableGroup.setStatus('current')
hpicfUdpFwdDhcpRelayStatsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 23, 2, 2, 3)).setObjects(("HP-ICF-UDP-FORWARD", "hpicfUdpFwdDhcpRelayClientDiscards"), ("HP-ICF-UDP-FORWARD", "hpicfUdpFwdDhcpRelayClientForwards"), ("HP-ICF-UDP-FORWARD", "hpicfUdpFwdDhcpRelayServerDiscards"), ("HP-ICF-UDP-FORWARD", "hpicfUdpFwdDhcpRelayServerForwards"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfUdpFwdDhcpRelayStatsGroup = hpicfUdpFwdDhcpRelayStatsGroup.setStatus('current')
hpicfUdpFwdDhcpRelayCfgGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 23, 2, 2, 4)).setObjects(("HP-ICF-UDP-FORWARD", "hpicfUdpFwdDhcpRelayAdminStatus"), ("HP-ICF-UDP-FORWARD", "hpicfUdpFwdDhcpRelayOption82AdminStatus"), ("HP-ICF-UDP-FORWARD", "hpicfUdpFwdDhcpRelayOption82Policy"), ("HP-ICF-UDP-FORWARD", "hpicfUdpFwdDhcpRelayOption82ResponseValidate"), ("HP-ICF-UDP-FORWARD", "hpicfUdpFwdDhcpRelayOption82RemoteId"), ("HP-ICF-UDP-FORWARD", "hpicfUdpFwdDhcpRelayHopCount"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfUdpFwdDhcpRelayCfgGroup = hpicfUdpFwdDhcpRelayCfgGroup.setStatus('current')
mibBuilder.exportSymbols("HP-ICF-UDP-FORWARD", hpicfUdpFwdServerAddressType=hpicfUdpFwdServerAddressType, hpicfUdpFwdDhcpRelayOption82RemoteId=hpicfUdpFwdDhcpRelayOption82RemoteId, hpicfUdpFwdDhcpRelayStatsGroup=hpicfUdpFwdDhcpRelayStatsGroup, hpicfUdpFwdCompliance=hpicfUdpFwdCompliance, hpicfUdpFwdDhcpRelayOption82Objects=hpicfUdpFwdDhcpRelayOption82Objects, hpicfUdpFwdNotification=hpicfUdpFwdNotification, hpicfUdpFwdServerIndex=hpicfUdpFwdServerIndex, hpicfUdpFwdDhcpRelayClientDiscards=hpicfUdpFwdDhcpRelayClientDiscards, hpicfUdpFwdDhcpRelayAdminStatus=hpicfUdpFwdDhcpRelayAdminStatus, hpicfUdpFwdPortNumber=hpicfUdpFwdPortNumber, hpicfUdpFwdGroups=hpicfUdpFwdGroups, hpicfUdpFwdDhcpRelayOption82ResponseValidate=hpicfUdpFwdDhcpRelayOption82ResponseValidate, hpicfUdpFwdDhcpRelayServerForwards=hpicfUdpFwdDhcpRelayServerForwards, hpicfUdpFwdObjects=hpicfUdpFwdObjects, hpicfUdpFwdStatCompliance=hpicfUdpFwdStatCompliance, hpicfUdpFwdServersTable=hpicfUdpFwdServersTable, hpicfUdpFwdCompliances=hpicfUdpFwdCompliances, hpicfUdpFwdConformance=hpicfUdpFwdConformance, hpicfUdpFwdServerTableGroup=hpicfUdpFwdServerTableGroup, hpicfUdpFwdDhcpRelayCfgGroup=hpicfUdpFwdDhcpRelayCfgGroup, hpicfUdpFwdServersEntry=hpicfUdpFwdServersEntry, hpicfUdpFwdDhcpRelayOption82Policy=hpicfUdpFwdDhcpRelayOption82Policy, hpicfUdpFwdVlanId=hpicfUdpFwdVlanId, hpicfUdpFwdDhcpRelayOption82AdminStatus=hpicfUdpFwdDhcpRelayOption82AdminStatus, hpicfUdpFwd=hpicfUdpFwd, PYSNMP_MODULE_ID=hpicfUdpFwd, hpicfUdpBcastFwdAdminStatus=hpicfUdpBcastFwdAdminStatus, hpicfUdpFwdDhcpRelayHopCount=hpicfUdpFwdDhcpRelayHopCount, hpicfUdpFwdRowStatus=hpicfUdpFwdRowStatus, hpicfUdpFwdServerAddress=hpicfUdpFwdServerAddress, hpicfUdpFwdDhcpRelayServerDiscards=hpicfUdpFwdDhcpRelayServerDiscards, hpicfUdpFwdDhcpRelayCfgCompliance=hpicfUdpFwdDhcpRelayCfgCompliance, hpicfUdpFwdCfgGroup=hpicfUdpFwdCfgGroup, hpicfUdpFwdDhcpRelayClientForwards=hpicfUdpFwdDhcpRelayClientForwards)
