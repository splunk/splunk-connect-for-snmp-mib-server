#
# PySNMP MIB module FR-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/FR-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:02:20 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ValueSizeConstraint, ConstraintsUnion, ConstraintsIntersection, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ValueSizeConstraint", "ConstraintsUnion", "ConstraintsIntersection", "ValueRangeConstraint")
nnbundleId, = mibBuilder.importSymbols("BUNDLE-MIB", "nnbundleId")
ntEnterpriseDataTasmanMgmt, = mibBuilder.importSymbols("NT-ENTERPRISE-DATA-MIB", "ntEnterpriseDataTasmanMgmt")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
ModuleIdentity, Integer32, Unsigned32, MibIdentifier, iso, Counter64, Bits, ObjectIdentity, NotificationType, MibScalar, MibTable, MibTableRow, MibTableColumn, Gauge32, Counter32, IpAddress, TimeTicks = mibBuilder.importSymbols("SNMPv2-SMI", "ModuleIdentity", "Integer32", "Unsigned32", "MibIdentifier", "iso", "Counter64", "Bits", "ObjectIdentity", "NotificationType", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Gauge32", "Counter32", "IpAddress", "TimeTicks")
DisplayString, RowStatus, TruthValue, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "RowStatus", "TruthValue", "TextualConvention")
nnfrMib = ModuleIdentity((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 1, 16))
nnfrMib.setRevisions(('1999-04-23 00:00',))
if mibBuilder.loadTexts: nnfrMib.setLastUpdated('9907010000Z')
if mibBuilder.loadTexts: nnfrMib.setOrganization('Nortel Networks')
nnfrTable = MibTable((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 1, 16, 1), )
if mibBuilder.loadTexts: nnfrTable.setStatus('current')
nnfrTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 1, 16, 1, 1), ).setIndexNames((0, "BUNDLE-MIB", "nnbundleId"))
if mibBuilder.loadTexts: nnfrTableEntry.setStatus('current')
nnfrIfEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 1, 16, 1, 1, 1), TruthValue().clone('true')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nnfrIfEnable.setStatus('current')
nnfrEnablePvcAll = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 1, 16, 1, 1, 2), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nnfrEnablePvcAll.setStatus('current')
nnfrFrameSize = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 1, 16, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(56, 4096)).clone(1600)).setUnits('bytes').setMaxAccess("readwrite")
if mibBuilder.loadTexts: nnfrFrameSize.setStatus('current')
nnfrIfType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 1, 16, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("dce", 1), ("dte", 2), ("nni", 3))).clone('dte')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nnfrIfType.setStatus('current')
nnfrLmiType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 1, 16, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 2, 3, 4))).clone(namedValues=NamedValues(("none", 0), ("cisco", 2), ("ansi", 3), ("q933a", 4))).clone('ansi')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nnfrLmiType.setStatus('current')
nnfrLmiDceN392 = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 1, 16, 1, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 10)).clone(9)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nnfrLmiDceN392.setStatus('current')
nnfrLmiDceN393 = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 1, 16, 1, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 10)).clone(10)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nnfrLmiDceN393.setStatus('current')
nnfrLmiDteN392 = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 1, 16, 1, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 10)).clone(9)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nnfrLmiDteN392.setStatus('current')
nnfrLmiDteN393 = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 1, 16, 1, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 10)).clone(10)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nnfrLmiDteN393.setStatus('current')
nnfrLmiDteN391 = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 1, 16, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255)).clone(6)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nnfrLmiDteN391.setStatus('current')
nnfrLmiKeepalive = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 1, 16, 1, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(5, 255)).clone(10)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nnfrLmiKeepalive.setStatus('current')
nnmfrAckMsgTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 1, 16, 1, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 10)).clone(4)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nnmfrAckMsgTimer.setStatus('current')
nnmfrAckMsgMaxRetry = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 1, 16, 1, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 5)).clone(2)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nnmfrAckMsgMaxRetry.setStatus('current')
nnmfrClass = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 1, 16, 1, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("classA", 1), ("classB", 2), ("classC", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nnmfrClass.setStatus('current')
nnmfrClassThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 1, 16, 1, 1, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 28))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nnmfrClassThreshold.setStatus('current')
nnmfrFrameSize = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 1, 16, 1, 1, 16), Integer32().subtype(subtypeSpec=ValueRangeConstraint(56, 4096))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nnmfrFrameSize.setStatus('current')
nnmfrHelloTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 1, 16, 1, 1, 17), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 180))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nnmfrHelloTimer.setStatus('current')
nnmfrSegThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 1, 16, 1, 1, 18), Integer32().subtype(subtypeSpec=ValueRangeConstraint(56, 4096))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nnmfrSegThreshold.setStatus('current')
nnmfrDiffDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 1, 16, 1, 1, 19), Integer32().subtype(subtypeSpec=ValueRangeConstraint(10, 128))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nnmfrDiffDelay.setStatus('current')
nnfrPvcTable = MibTable((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 1, 16, 2), )
if mibBuilder.loadTexts: nnfrPvcTable.setStatus('current')
nnfrPvcTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 1, 16, 2, 1), ).setIndexNames((0, "BUNDLE-MIB", "nnbundleId"), (0, "FR-MIB", "nnfrPvcDlci"))
if mibBuilder.loadTexts: nnfrPvcTableEntry.setStatus('current')
nnfrPvcDlci = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 1, 16, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(16, 991)))
if mibBuilder.loadTexts: nnfrPvcDlci.setStatus('current')
nnfrPvcEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 1, 16, 2, 1, 2), TruthValue().clone('true')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: nnfrPvcEnable.setStatus('current')
nnfrPvcDescr = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 1, 16, 2, 1, 3), DisplayString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: nnfrPvcDescr.setStatus('current')
nnfrPvcIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 1, 16, 2, 1, 4), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: nnfrPvcIpAddr.setStatus('current')
nnfrPvcIpSubnetMask = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 1, 16, 2, 1, 5), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: nnfrPvcIpSubnetMask.setStatus('current')
nnfrPvcRemoteIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 1, 16, 2, 1, 6), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: nnfrPvcRemoteIpAddr.setStatus('current')
nnfrPvcPolicingEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 1, 16, 2, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 2))).clone(namedValues=NamedValues(("none", 0), ("standard", 2))).clone('standard')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: nnfrPvcPolicingEnable.setStatus('current')
nnfrPvcPolicingDe = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 1, 16, 2, 1, 8), TruthValue().clone('true')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: nnfrPvcPolicingDe.setStatus('current')
nnfrPvcPolicingCir = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 1, 16, 2, 1, 9), Integer32()).setUnits('bps').setMaxAccess("readcreate")
if mibBuilder.loadTexts: nnfrPvcPolicingCir.setStatus('current')
nnfrPvcPolicingBc = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 1, 16, 2, 1, 10), Integer32()).setUnits('bps').setMaxAccess("readcreate")
if mibBuilder.loadTexts: nnfrPvcPolicingBc.setStatus('current')
nnfrPvcPolicingBe = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 1, 16, 2, 1, 11), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: nnfrPvcPolicingBe.setStatus('current')
nnfrPvcShapingCir = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 1, 16, 2, 1, 12), Integer32()).setUnits('bps').setMaxAccess("readcreate")
if mibBuilder.loadTexts: nnfrPvcShapingCir.setStatus('current')
nnfrPvcShapingBcMax = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 1, 16, 2, 1, 13), Integer32()).setUnits('bps').setMaxAccess("readcreate")
if mibBuilder.loadTexts: nnfrPvcShapingBcMax.setStatus('current')
nnfrPvcShapingBcMin = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 1, 16, 2, 1, 14), Integer32()).setUnits('bps').setMaxAccess("readcreate")
if mibBuilder.loadTexts: nnfrPvcShapingBcMin.setStatus('current')
nnfrPvcShapingBe = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 1, 16, 2, 1, 15), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: nnfrPvcShapingBe.setStatus('current')
nnfrPvcDlciForSwitching = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 1, 16, 2, 1, 16), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: nnfrPvcDlciForSwitching.setStatus('current')
nnfrPvcBundleNameForSwitching = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 1, 16, 2, 1, 17), DisplayString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: nnfrPvcBundleNameForSwitching.setStatus('current')
nnfrPvcRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 1, 16, 2, 1, 18), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: nnfrPvcRowStatus.setStatus('current')
nnfrStatsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 1, 16, 3), )
if mibBuilder.loadTexts: nnfrStatsTable.setStatus('current')
nnfrStatsTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 1, 16, 3, 1), ).setIndexNames((0, "BUNDLE-MIB", "nnbundleId"))
if mibBuilder.loadTexts: nnfrStatsTableEntry.setStatus('current')
nnfrStatsFramesRx = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 1, 16, 3, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nnfrStatsFramesRx.setStatus('current')
nnfrStatsInvFramesRx = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 1, 16, 3, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nnfrStatsInvFramesRx.setStatus('current')
nnfrStatsFECNsRx = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 1, 16, 3, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nnfrStatsFECNsRx.setStatus('current')
nnfrStatsBECNsRx = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 1, 16, 3, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nnfrStatsBECNsRx.setStatus('current')
nnfrStatsShortFramesRx = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 1, 16, 3, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nnfrStatsShortFramesRx.setStatus('current')
nnfrStatsLongFramesRx = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 1, 16, 3, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nnfrStatsLongFramesRx.setStatus('current')
nnfrStatsInvDLCIsRx = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 1, 16, 3, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nnfrStatsInvDLCIsRx.setStatus('current')
nnfrStatsUnknownDLCIsRx = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 1, 16, 3, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nnfrStatsUnknownDLCIsRx.setStatus('current')
nnfrStatsFramesTx = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 1, 16, 3, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nnfrStatsFramesTx.setStatus('current')
nnfrPvcStatsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 1, 16, 4), )
if mibBuilder.loadTexts: nnfrPvcStatsTable.setStatus('current')
nnfrPvcStatsTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 1, 16, 4, 1), ).setIndexNames((0, "BUNDLE-MIB", "nnbundleId"), (0, "FR-MIB", "nnfrPvcDlci"))
if mibBuilder.loadTexts: nnfrPvcStatsTableEntry.setStatus('current')
nnfrPvcStatsBytesRxLastBootOrClear = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 1, 16, 4, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nnfrPvcStatsBytesRxLastBootOrClear.setStatus('current')
nnfrPvcStatsBytesTxLastBootOrClear = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 1, 16, 4, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nnfrPvcStatsBytesTxLastBootOrClear.setStatus('current')
nnfrPvcStatsPktsRxLastBootOrClear = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 1, 16, 4, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nnfrPvcStatsPktsRxLastBootOrClear.setStatus('current')
nnfrPvcStatsPktsTxLastBootOrClear = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 1, 16, 4, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nnfrPvcStatsPktsTxLastBootOrClear.setStatus('current')
nnfrPvcStatsErrPktsRxLastBootOrClear = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 1, 16, 4, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nnfrPvcStatsErrPktsRxLastBootOrClear.setStatus('current')
nnfrPvcStatsUpDownStatesLastBootOrClear = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 1, 16, 4, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nnfrPvcStatsUpDownStatesLastBootOrClear.setStatus('current')
nnfrPvcStatsBytesRxLastFiveMins = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 1, 16, 4, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nnfrPvcStatsBytesRxLastFiveMins.setStatus('current')
nnfrPvcStatsBytesTxLastFiveMins = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 1, 16, 4, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nnfrPvcStatsBytesTxLastFiveMins.setStatus('current')
nnfrPvcStatsPktsRxLastFiveMins = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 1, 16, 4, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nnfrPvcStatsPktsRxLastFiveMins.setStatus('current')
nnfrPvcStatsPktsTxLastFiveMins = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 1, 16, 4, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nnfrPvcStatsPktsTxLastFiveMins.setStatus('current')
nnfrPvcStatsErrPktsRxLastFiveMins = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 1, 16, 4, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nnfrPvcStatsErrPktsRxLastFiveMins.setStatus('current')
nnfrPvcStatsUpDownStatesLastFiveMins = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 1, 16, 4, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nnfrPvcStatsUpDownStatesLastFiveMins.setStatus('current')
nnfrAvcTable = MibTable((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 1, 16, 5), )
if mibBuilder.loadTexts: nnfrAvcTable.setStatus('current')
nnfrAvcTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 1, 16, 5, 1), ).setIndexNames((0, "FR-MIB", "nnfrAvcId"))
if mibBuilder.loadTexts: nnfrAvcTableEntry.setStatus('current')
nnfrAvcId = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 1, 16, 5, 1, 1), Integer32())
if mibBuilder.loadTexts: nnfrAvcId.setStatus('current')
nnfrAvcDlci = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 1, 16, 5, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(16, 991))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: nnfrAvcDlci.setStatus('current')
nnfrAvcName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 1, 16, 5, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 8))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: nnfrAvcName.setStatus('current')
nnfrAvcIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 1, 16, 5, 1, 4), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: nnfrAvcIpAddr.setStatus('current')
nnfrAvcIpSubnetMask = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 1, 16, 5, 1, 5), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: nnfrAvcIpSubnetMask.setStatus('current')
nnfrAvcRemoteIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 1, 16, 5, 1, 6), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: nnfrAvcRemoteIpAddr.setStatus('current')
nnfrAvcClass = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 1, 16, 5, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("classA", 1), ("classB", 2), ("classC", 3), ("classD", 4), ("classE", 5)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nnfrAvcClass.setStatus('current')
nnfrAvcClassThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 1, 16, 5, 1, 8), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nnfrAvcClassThreshold.setStatus('current')
nnfrAvcFragmentSize = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 1, 16, 5, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(56, 4096))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nnfrAvcFragmentSize.setStatus('current')
nnfrAvcSegThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 1, 16, 5, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(56, 4096))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nnfrAvcSegThreshold.setStatus('current')
nnfrAvcSequence = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 1, 16, 5, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("short", 1), ("long", 2))).clone('long')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nnfrAvcSequence.setStatus('current')
nnfrAvcDiffDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 1, 16, 5, 1, 12), Integer32().clone(80)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nnfrAvcDiffDelay.setStatus('current')
nnfrAvcEnhancedMode = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 1, 16, 5, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nnfrAvcEnhancedMode.setStatus('current')
nnfrAvcNoOfCvcs = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 1, 16, 5, 1, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nnfrAvcNoOfCvcs.setStatus('current')
nnfrAvcTotalBw = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 1, 16, 5, 1, 15), Integer32()).setUnits('kbps').setMaxAccess("readonly")
if mibBuilder.loadTexts: nnfrAvcTotalBw.setStatus('current')
nnfrAvcEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 1, 16, 5, 1, 16), TruthValue().clone('true')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: nnfrAvcEnable.setStatus('current')
nnfrAvcRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 1, 16, 5, 1, 17), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: nnfrAvcRowStatus.setStatus('current')
nnfrCvcTable = MibTable((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 1, 16, 6), )
if mibBuilder.loadTexts: nnfrCvcTable.setStatus('current')
nnfrCvcTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 1, 16, 6, 1), ).setIndexNames((0, "FR-MIB", "nnfrAvcId"), (0, "BUNDLE-MIB", "nnbundleId"), (0, "FR-MIB", "nnfrPvcDlci"))
if mibBuilder.loadTexts: nnfrCvcTableEntry.setStatus('current')
nnfrCvcBundleName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 1, 16, 6, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nnfrCvcBundleName.setStatus('current')
nnfrCvcEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 1, 16, 6, 1, 2), TruthValue().clone('true')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: nnfrCvcEnable.setStatus('current')
nnfrCvcRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 1, 16, 6, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: nnfrCvcRowStatus.setStatus('current')
nnfrAvcStatsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 1, 16, 7), )
if mibBuilder.loadTexts: nnfrAvcStatsTable.setStatus('current')
nnfrAvcStatsTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 1, 16, 7, 1), ).setIndexNames((0, "FR-MIB", "nnfrAvcId"))
if mibBuilder.loadTexts: nnfrAvcStatsTableEntry.setStatus('current')
nnfrAvcStatsBytesRxLastBootOrClear = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 1, 16, 7, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nnfrAvcStatsBytesRxLastBootOrClear.setStatus('current')
nnfrAvcStatsBytesTxLastBootOrClear = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 1, 16, 7, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nnfrAvcStatsBytesTxLastBootOrClear.setStatus('current')
nnfrAvcStatsPktsRxLastBootOrClear = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 1, 16, 7, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nnfrAvcStatsPktsRxLastBootOrClear.setStatus('current')
nnfrAvcStatsPktsTxLastBootOrClear = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 1, 16, 7, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nnfrAvcStatsPktsTxLastBootOrClear.setStatus('current')
nnfrAvcStatsErrPktsRxLastBootOrClear = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 1, 16, 7, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nnfrAvcStatsErrPktsRxLastBootOrClear.setStatus('current')
nnfrAvcStatsUpDownStatesLastBootOrClear = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 1, 16, 7, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nnfrAvcStatsUpDownStatesLastBootOrClear.setStatus('current')
nnfrAvcStatsBytesRxLastFiveMins = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 1, 16, 7, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nnfrAvcStatsBytesRxLastFiveMins.setStatus('current')
nnfrAvcStatsBytesTxLastFiveMins = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 1, 16, 7, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nnfrAvcStatsBytesTxLastFiveMins.setStatus('current')
nnfrAvcStatsPktsRxLastFiveMins = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 1, 16, 7, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nnfrAvcStatsPktsRxLastFiveMins.setStatus('current')
nnfrAvcStatsPktsTxLastFiveMins = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 1, 16, 7, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nnfrAvcStatsPktsTxLastFiveMins.setStatus('current')
nnfrAvcStatsErrPktsRxLastFiveMins = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 1, 16, 7, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nnfrAvcStatsErrPktsRxLastFiveMins.setStatus('current')
nnfrAvcStatsUpDownStatesLastFiveMins = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 1, 16, 7, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nnfrAvcStatsUpDownStatesLastFiveMins.setStatus('current')
mibBuilder.exportSymbols("FR-MIB", PYSNMP_MODULE_ID=nnfrMib, nnfrPvcEnable=nnfrPvcEnable, nnfrAvcSequence=nnfrAvcSequence, nnfrPvcShapingBe=nnfrPvcShapingBe, nnfrCvcTable=nnfrCvcTable, nnfrAvcClass=nnfrAvcClass, nnfrPvcRowStatus=nnfrPvcRowStatus, nnfrLmiDceN393=nnfrLmiDceN393, nnfrLmiDteN393=nnfrLmiDteN393, nnfrAvcTableEntry=nnfrAvcTableEntry, nnfrPvcShapingBcMin=nnfrPvcShapingBcMin, nnfrAvcTable=nnfrAvcTable, nnfrAvcStatsUpDownStatesLastFiveMins=nnfrAvcStatsUpDownStatesLastFiveMins, nnfrTableEntry=nnfrTableEntry, nnfrPvcRemoteIpAddr=nnfrPvcRemoteIpAddr, nnfrMib=nnfrMib, nnfrPvcStatsBytesTxLastBootOrClear=nnfrPvcStatsBytesTxLastBootOrClear, nnfrLmiDceN392=nnfrLmiDceN392, nnfrStatsLongFramesRx=nnfrStatsLongFramesRx, nnmfrDiffDelay=nnmfrDiffDelay, nnfrCvcBundleName=nnfrCvcBundleName, nnfrPvcStatsErrPktsRxLastFiveMins=nnfrPvcStatsErrPktsRxLastFiveMins, nnmfrAckMsgTimer=nnmfrAckMsgTimer, nnfrAvcIpAddr=nnfrAvcIpAddr, nnfrPvcTableEntry=nnfrPvcTableEntry, nnfrPvcShapingBcMax=nnfrPvcShapingBcMax, nnfrPvcIpAddr=nnfrPvcIpAddr, nnfrPvcDlci=nnfrPvcDlci, nnfrAvcStatsPktsTxLastBootOrClear=nnfrAvcStatsPktsTxLastBootOrClear, nnfrStatsUnknownDLCIsRx=nnfrStatsUnknownDLCIsRx, nnfrStatsFECNsRx=nnfrStatsFECNsRx, nnfrPvcStatsUpDownStatesLastFiveMins=nnfrPvcStatsUpDownStatesLastFiveMins, nnfrPvcStatsPktsTxLastBootOrClear=nnfrPvcStatsPktsTxLastBootOrClear, nnmfrClass=nnmfrClass, nnfrIfEnable=nnfrIfEnable, nnfrAvcRowStatus=nnfrAvcRowStatus, nnfrStatsTableEntry=nnfrStatsTableEntry, nnfrPvcStatsBytesRxLastBootOrClear=nnfrPvcStatsBytesRxLastBootOrClear, nnfrCvcEnable=nnfrCvcEnable, nnfrAvcEnable=nnfrAvcEnable, nnfrPvcDlciForSwitching=nnfrPvcDlciForSwitching, nnfrPvcStatsPktsRxLastBootOrClear=nnfrPvcStatsPktsRxLastBootOrClear, nnfrPvcPolicingEnable=nnfrPvcPolicingEnable, nnfrLmiKeepalive=nnfrLmiKeepalive, nnfrPvcStatsTableEntry=nnfrPvcStatsTableEntry, nnfrStatsFramesTx=nnfrStatsFramesTx, nnfrStatsInvDLCIsRx=nnfrStatsInvDLCIsRx, nnfrPvcShapingCir=nnfrPvcShapingCir, nnfrAvcDlci=nnfrAvcDlci, nnfrStatsShortFramesRx=nnfrStatsShortFramesRx, nnfrPvcPolicingBc=nnfrPvcPolicingBc, nnfrLmiDteN392=nnfrLmiDteN392, nnmfrHelloTimer=nnmfrHelloTimer, nnfrPvcStatsTable=nnfrPvcStatsTable, nnfrPvcPolicingBe=nnfrPvcPolicingBe, nnfrPvcBundleNameForSwitching=nnfrPvcBundleNameForSwitching, nnfrAvcStatsBytesRxLastBootOrClear=nnfrAvcStatsBytesRxLastBootOrClear, nnfrCvcRowStatus=nnfrCvcRowStatus, nnfrAvcStatsPktsRxLastFiveMins=nnfrAvcStatsPktsRxLastFiveMins, nnfrPvcStatsBytesTxLastFiveMins=nnfrPvcStatsBytesTxLastFiveMins, nnfrAvcName=nnfrAvcName, nnfrPvcStatsPktsTxLastFiveMins=nnfrPvcStatsPktsTxLastFiveMins, nnfrAvcStatsTableEntry=nnfrAvcStatsTableEntry, nnfrAvcSegThreshold=nnfrAvcSegThreshold, nnfrCvcTableEntry=nnfrCvcTableEntry, nnfrAvcStatsBytesRxLastFiveMins=nnfrAvcStatsBytesRxLastFiveMins, nnfrPvcPolicingCir=nnfrPvcPolicingCir, nnfrAvcStatsErrPktsRxLastFiveMins=nnfrAvcStatsErrPktsRxLastFiveMins, nnfrTable=nnfrTable, nnfrStatsFramesRx=nnfrStatsFramesRx, nnfrAvcDiffDelay=nnfrAvcDiffDelay, nnfrAvcNoOfCvcs=nnfrAvcNoOfCvcs, nnfrPvcStatsUpDownStatesLastBootOrClear=nnfrPvcStatsUpDownStatesLastBootOrClear, nnfrAvcStatsErrPktsRxLastBootOrClear=nnfrAvcStatsErrPktsRxLastBootOrClear, nnfrAvcEnhancedMode=nnfrAvcEnhancedMode, nnfrAvcFragmentSize=nnfrAvcFragmentSize, nnfrAvcClassThreshold=nnfrAvcClassThreshold, nnfrAvcRemoteIpAddr=nnfrAvcRemoteIpAddr, nnfrPvcIpSubnetMask=nnfrPvcIpSubnetMask, nnmfrSegThreshold=nnmfrSegThreshold, nnfrStatsInvFramesRx=nnfrStatsInvFramesRx, nnfrPvcTable=nnfrPvcTable, nnfrPvcStatsErrPktsRxLastBootOrClear=nnfrPvcStatsErrPktsRxLastBootOrClear, nnfrLmiDteN391=nnfrLmiDteN391, nnfrAvcIpSubnetMask=nnfrAvcIpSubnetMask, nnfrEnablePvcAll=nnfrEnablePvcAll, nnmfrFrameSize=nnmfrFrameSize, nnfrAvcStatsPktsRxLastBootOrClear=nnfrAvcStatsPktsRxLastBootOrClear, nnfrIfType=nnfrIfType, nnfrAvcId=nnfrAvcId, nnmfrClassThreshold=nnmfrClassThreshold, nnfrPvcDescr=nnfrPvcDescr, nnfrStatsBECNsRx=nnfrStatsBECNsRx, nnfrStatsTable=nnfrStatsTable, nnfrFrameSize=nnfrFrameSize, nnfrAvcStatsBytesTxLastFiveMins=nnfrAvcStatsBytesTxLastFiveMins, nnfrAvcStatsTable=nnfrAvcStatsTable, nnfrAvcStatsPktsTxLastFiveMins=nnfrAvcStatsPktsTxLastFiveMins, nnfrLmiType=nnfrLmiType, nnfrAvcStatsBytesTxLastBootOrClear=nnfrAvcStatsBytesTxLastBootOrClear, nnfrPvcStatsPktsRxLastFiveMins=nnfrPvcStatsPktsRxLastFiveMins, nnfrAvcStatsUpDownStatesLastBootOrClear=nnfrAvcStatsUpDownStatesLastBootOrClear, nnfrPvcStatsBytesRxLastFiveMins=nnfrPvcStatsBytesRxLastFiveMins, nnfrPvcPolicingDe=nnfrPvcPolicingDe, nnfrAvcTotalBw=nnfrAvcTotalBw, nnmfrAckMsgMaxRetry=nnmfrAckMsgMaxRetry)
