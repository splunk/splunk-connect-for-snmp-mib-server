#
# PySNMP MIB module CISCO-FCTRACEROUTE-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CISCO-FCTRACEROUTE-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:41:16 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, SingleValueConstraint, ValueRangeConstraint, ConstraintsUnion, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "SingleValueConstraint", "ValueRangeConstraint", "ConstraintsUnion", "ValueSizeConstraint")
FcStartOper, = mibBuilder.importSymbols("CISCO-FCPING-MIB", "FcStartOper")
ciscoMgmt, = mibBuilder.importSymbols("CISCO-SMI", "ciscoMgmt")
FcAddress, FcNameId, FcAddressType, VsanIndex = mibBuilder.importSymbols("CISCO-ST-TC", "FcAddress", "FcNameId", "FcAddressType", "VsanIndex")
NotificationGroup, ModuleCompliance, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance", "ObjectGroup")
iso, Counter64, TimeTicks, ObjectIdentity, IpAddress, Integer32, MibIdentifier, ModuleIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, Gauge32, Unsigned32, Bits, NotificationType, Counter32 = mibBuilder.importSymbols("SNMPv2-SMI", "iso", "Counter64", "TimeTicks", "ObjectIdentity", "IpAddress", "Integer32", "MibIdentifier", "ModuleIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Gauge32", "Unsigned32", "Bits", "NotificationType", "Counter32")
RowStatus, TruthValue, DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "RowStatus", "TruthValue", "DisplayString", "TextualConvention")
ciscoFcTraceRouteMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 9, 9, 296))
ciscoFcTraceRouteMIB.setRevisions(('2002-10-07 00:00',))
if mibBuilder.loadTexts: ciscoFcTraceRouteMIB.setLastUpdated('200210070000Z')
if mibBuilder.loadTexts: ciscoFcTraceRouteMIB.setOrganization('Cisco Systems Inc.')
ciscoFcTraceRouteMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 296, 1))
fcTraceRouteMIBConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 296, 2))
fcTraceRouteConfiguration = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 296, 1, 1))
fcTraceRouteResults = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 296, 1, 2))
fcTraceRouteNotification = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 296, 1, 3))
fcTraceRouteNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 296, 1, 3, 0))
fcTraceRouteTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 296, 1, 1, 1), )
if mibBuilder.loadTexts: fcTraceRouteTable.setStatus('current')
fcTraceRouteEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 296, 1, 1, 1, 1), ).setIndexNames((0, "CISCO-FCTRACEROUTE-MIB", "fcTraceRouteIndex"))
if mibBuilder.loadTexts: fcTraceRouteEntry.setStatus('current')
fcTraceRouteIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 296, 1, 1, 1, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: fcTraceRouteIndex.setStatus('current')
fcTraceRouteVsanIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 296, 1, 1, 1, 1, 2), VsanIndex().clone(1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: fcTraceRouteVsanIndex.setStatus('current')
fcTraceRouteTargetAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 296, 1, 1, 1, 1, 3), FcAddressType().clone('wwn')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: fcTraceRouteTargetAddrType.setStatus('current')
fcTraceRouteTargetAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 296, 1, 1, 1, 1, 4), FcAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: fcTraceRouteTargetAddr.setStatus('current')
fcTraceRouteTimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 296, 1, 1, 1, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(5, 25)).clone(10)).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: fcTraceRouteTimeout.setStatus('current')
fcTraceRouteAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 296, 1, 1, 1, 1, 6), FcStartOper().clone('disable')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: fcTraceRouteAdminStatus.setStatus('current')
fcTraceRouteOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 296, 1, 1, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("inProgress", 1), ("success", 2), ("partialSuccess", 3), ("failure", 4), ("disabled", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fcTraceRouteOperStatus.setStatus('current')
fcTraceRouteAgeInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 296, 1, 1, 1, 1, 8), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(500000, 900000)).clone(500000)).setUnits('milliseconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: fcTraceRouteAgeInterval.setStatus('current')
fcTraceRouteTrapOnCompletion = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 296, 1, 1, 1, 1, 9), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: fcTraceRouteTrapOnCompletion.setStatus('current')
fcTraceRouteRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 296, 1, 1, 1, 1, 10), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: fcTraceRouteRowStatus.setStatus('current')
fcTraceRouteHopsTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 296, 1, 2, 1), )
if mibBuilder.loadTexts: fcTraceRouteHopsTable.setStatus('current')
fcTraceRouteHopsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 296, 1, 2, 1, 1), ).setIndexNames((0, "CISCO-FCTRACEROUTE-MIB", "fcTraceRouteIndex"), (0, "CISCO-FCTRACEROUTE-MIB", "fcTraceRouteHopsHopIndex"))
if mibBuilder.loadTexts: fcTraceRouteHopsEntry.setStatus('current')
fcTraceRouteHopsHopIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 296, 1, 2, 1, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: fcTraceRouteHopsHopIndex.setStatus('current')
fcTraceRouteHopsHopAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 296, 1, 2, 1, 1, 2), FcNameId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fcTraceRouteHopsHopAddr.setStatus('current')
fcTraceRouteHopsHopLatencyValid = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 296, 1, 2, 1, 1, 3), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fcTraceRouteHopsHopLatencyValid.setStatus('current')
fcTraceRouteHopsHopLatency = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 296, 1, 2, 1, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 25000000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fcTraceRouteHopsHopLatency.setStatus('current')
fcTraceRouteCompletionNotify = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 296, 1, 3, 0, 1)).setObjects(("CISCO-FCTRACEROUTE-MIB", "fcTraceRouteTargetAddr"), ("CISCO-FCTRACEROUTE-MIB", "fcTraceRouteOperStatus"))
if mibBuilder.loadTexts: fcTraceRouteCompletionNotify.setStatus('current')
fcTraceRouteMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 296, 2, 1))
fcTraceRouteMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 296, 2, 2))
fcTraceRouteMIBCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 296, 2, 1, 1)).setObjects(("CISCO-FCTRACEROUTE-MIB", "fcTraceRouteConfigGroup"), ("CISCO-FCTRACEROUTE-MIB", "fcTraceRouteResultsGroup"), ("CISCO-FCTRACEROUTE-MIB", "fcTraceRouteNotifyGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    fcTraceRouteMIBCompliance = fcTraceRouteMIBCompliance.setStatus('current')
fcTraceRouteConfigGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 296, 2, 2, 1)).setObjects(("CISCO-FCTRACEROUTE-MIB", "fcTraceRouteVsanIndex"), ("CISCO-FCTRACEROUTE-MIB", "fcTraceRouteTargetAddrType"), ("CISCO-FCTRACEROUTE-MIB", "fcTraceRouteTargetAddr"), ("CISCO-FCTRACEROUTE-MIB", "fcTraceRouteTimeout"), ("CISCO-FCTRACEROUTE-MIB", "fcTraceRouteAdminStatus"), ("CISCO-FCTRACEROUTE-MIB", "fcTraceRouteOperStatus"), ("CISCO-FCTRACEROUTE-MIB", "fcTraceRouteAgeInterval"), ("CISCO-FCTRACEROUTE-MIB", "fcTraceRouteTrapOnCompletion"), ("CISCO-FCTRACEROUTE-MIB", "fcTraceRouteRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    fcTraceRouteConfigGroup = fcTraceRouteConfigGroup.setStatus('current')
fcTraceRouteResultsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 296, 2, 2, 2)).setObjects(("CISCO-FCTRACEROUTE-MIB", "fcTraceRouteHopsHopAddr"), ("CISCO-FCTRACEROUTE-MIB", "fcTraceRouteHopsHopLatencyValid"), ("CISCO-FCTRACEROUTE-MIB", "fcTraceRouteHopsHopLatency"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    fcTraceRouteResultsGroup = fcTraceRouteResultsGroup.setStatus('current')
fcTraceRouteNotifyGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 9, 9, 296, 2, 2, 3)).setObjects(("CISCO-FCTRACEROUTE-MIB", "fcTraceRouteCompletionNotify"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    fcTraceRouteNotifyGroup = fcTraceRouteNotifyGroup.setStatus('current')
mibBuilder.exportSymbols("CISCO-FCTRACEROUTE-MIB", fcTraceRouteHopsEntry=fcTraceRouteHopsEntry, fcTraceRouteMIBConformance=fcTraceRouteMIBConformance, fcTraceRouteTrapOnCompletion=fcTraceRouteTrapOnCompletion, fcTraceRouteHopsTable=fcTraceRouteHopsTable, fcTraceRouteOperStatus=fcTraceRouteOperStatus, fcTraceRouteMIBGroups=fcTraceRouteMIBGroups, ciscoFcTraceRouteMIB=ciscoFcTraceRouteMIB, fcTraceRouteConfigGroup=fcTraceRouteConfigGroup, fcTraceRouteHopsHopAddr=fcTraceRouteHopsHopAddr, fcTraceRouteAdminStatus=fcTraceRouteAdminStatus, fcTraceRouteHopsHopIndex=fcTraceRouteHopsHopIndex, fcTraceRouteTable=fcTraceRouteTable, fcTraceRouteVsanIndex=fcTraceRouteVsanIndex, fcTraceRouteHopsHopLatency=fcTraceRouteHopsHopLatency, fcTraceRouteNotifications=fcTraceRouteNotifications, fcTraceRouteMIBCompliances=fcTraceRouteMIBCompliances, fcTraceRouteResultsGroup=fcTraceRouteResultsGroup, fcTraceRouteRowStatus=fcTraceRouteRowStatus, fcTraceRouteTimeout=fcTraceRouteTimeout, ciscoFcTraceRouteMIBObjects=ciscoFcTraceRouteMIBObjects, fcTraceRouteIndex=fcTraceRouteIndex, fcTraceRouteNotifyGroup=fcTraceRouteNotifyGroup, fcTraceRouteConfiguration=fcTraceRouteConfiguration, fcTraceRouteCompletionNotify=fcTraceRouteCompletionNotify, PYSNMP_MODULE_ID=ciscoFcTraceRouteMIB, fcTraceRouteNotification=fcTraceRouteNotification, fcTraceRouteResults=fcTraceRouteResults, fcTraceRouteHopsHopLatencyValid=fcTraceRouteHopsHopLatencyValid, fcTraceRouteEntry=fcTraceRouteEntry, fcTraceRouteMIBCompliance=fcTraceRouteMIBCompliance, fcTraceRouteAgeInterval=fcTraceRouteAgeInterval, fcTraceRouteTargetAddrType=fcTraceRouteTargetAddrType, fcTraceRouteTargetAddr=fcTraceRouteTargetAddr)
