#
# PySNMP MIB module Nortel-Magellan-Passport-AlarmMIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/Nortel-Magellan-Passport-AlarmMIB
# Produced by pysmi-0.3.4 at Mon Apr 29 20:16:37 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ConstraintsIntersection, ValueSizeConstraint, ValueRangeConstraint, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ConstraintsIntersection", "ValueSizeConstraint", "ValueRangeConstraint", "SingleValueConstraint")
DateAndTime, RowPointer, DisplayString, Unsigned32 = mibBuilder.importSymbols("Nortel-Magellan-Passport-StandardTextualConventionsMIB", "DateAndTime", "RowPointer", "DisplayString", "Unsigned32")
Hex, HexString, DigitString, AsciiString = mibBuilder.importSymbols("Nortel-Magellan-Passport-TextualConventionsMIB", "Hex", "HexString", "DigitString", "AsciiString")
passportMIBs, passportTraps = mibBuilder.importSymbols("Nortel-Magellan-Passport-UsefulDefinitionsMIB", "passportMIBs", "passportTraps")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Integer32, IpAddress, Counter64, ModuleIdentity, Unsigned32, NotificationType, Gauge32, TimeTicks, ObjectIdentity, iso, Counter32, NotificationType, Bits, MibScalar, MibTable, MibTableRow, MibTableColumn, MibIdentifier = mibBuilder.importSymbols("SNMPv2-SMI", "Integer32", "IpAddress", "Counter64", "ModuleIdentity", "Unsigned32", "NotificationType", "Gauge32", "TimeTicks", "ObjectIdentity", "iso", "Counter32", "NotificationType", "Bits", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "MibIdentifier")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
alarmMIB = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 4))
alarmTrap = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 3, 2))
mandatoryAlarmInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 3, 2, 7))
componentRowPointer = MibScalar((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 3, 2, 7, 1), RowPointer())
if mibBuilder.loadTexts: componentRowPointer.setStatus('mandatory')
componentName = MibScalar((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 3, 2, 7, 2), DisplayString())
if mibBuilder.loadTexts: componentName.setStatus('mandatory')
eventTime = MibScalar((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 3, 2, 7, 3), DateAndTime())
if mibBuilder.loadTexts: eventTime.setStatus('mandatory')
activeListStatus = MibScalar((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 3, 2, 7, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("message", 0), ("set", 1), ("clear", 2))))
if mibBuilder.loadTexts: activeListStatus.setStatus('mandatory')
severity = MibScalar((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 3, 2, 7, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("indeterminate", 0), ("critical", 1), ("major", 2), ("minor", 3), ("warning", 4), ("cleared", 5))))
if mibBuilder.loadTexts: severity.setStatus('mandatory')
alarmType = MibScalar((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 3, 2, 7, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("communications", 0), ("qualityOfService", 1), ("processing", 2), ("equipment", 3), ("environmental", 4), ("security", 5), ("operator", 6), ("debug", 7), ("unknown", 8))))
if mibBuilder.loadTexts: alarmType.setStatus('mandatory')
probableCause = MibScalar((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 3, 2, 7, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 20, 21, 22, 23, 24, 25, 26, 27, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 80, 81, 82, 83, 84, 90, 91, 92, 93, 100, 101, 102, 110, 111, 112, 113, 114, 120, 121, 122, 200, 201, 202, 203, 204))).clone(namedValues=NamedValues(("lossOfSignal", 0), ("lossOfFrame", 1), ("framingError", 2), ("localTransmissionError", 3), ("remoteTransmissionError", 4), ("callEstablishmentError", 5), ("degradedSignal", 6), ("commSubsystemFailure", 7), ("commProtocolError", 8), ("lanError", 9), ("dteDceInterfaceError", 10), ("responseTimeExcessive", 20), ("queueSizeExceeded", 21), ("bandwidthReduced", 22), ("retransmissionRateReduced", 23), ("thresholdCrossed", 24), ("performanceDegraded", 25), ("congestion", 26), ("atOrNearCapacity", 27), ("storageCapacityProblem", 40), ("versionMismatch", 41), ("corruptData", 42), ("cpuCyclesLimitExceeded", 43), ("softwareError", 44), ("softwareProgramError", 45), ("softwareProgramTermination", 46), ("fileError", 47), ("outOfMemory", 48), ("underlyingResourceUnavail", 49), ("applicationSubsystemFailure", 50), ("configurationError", 51), ("powerProblem", 60), ("timingProblem", 61), ("processorProblem", 62), ("datasetModemError", 63), ("multiplexorProblem", 64), ("receiverFailure", 65), ("transmitterFailure", 66), ("outputDeviceError", 67), ("inputDeviceError", 68), ("ioDeviceError", 69), ("equipmentFailure", 70), ("adapterError", 71), ("duplicateInfo", 80), ("infoMissing", 81), ("infoModification", 82), ("infoOutOfSequence", 83), ("unexpectedInfo", 84), ("denialOfService", 90), ("outOfService", 91), ("proceduralError", 92), ("otherOperational", 93), ("cableTamper", 100), ("intrusionDetection", 101), ("otherPhysical", 102), ("authenticationFailure", 110), ("breachOfConfidence", 111), ("nonRepudiationFailure", 112), ("unauthorizedAccess", 113), ("otherSecurityService", 114), ("delayedInfo", 120), ("keyExpired", 121), ("outOfHoursActivity", 122), ("operationalCondition", 200), ("debugging", 201), ("unknown", 202), ("inactiveVirtualCircuit", 203), ("networkServerIntervention", 204))))
if mibBuilder.loadTexts: probableCause.setStatus('mandatory')
ntpIndex = MibScalar((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 3, 2, 7, 8), DigitString().subtype(subtypeSpec=ValueSizeConstraint(8, 8)).setFixedLength(8))
if mibBuilder.loadTexts: ntpIndex.setStatus('mandatory')
commentData = MibScalar((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 3, 2, 7, 9), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(0, 750)))
if mibBuilder.loadTexts: commentData.setStatus('mandatory')
optionalAlarmInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 3, 2, 8))
notificationID = MibScalar((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 3, 2, 8, 1), Hex())
if mibBuilder.loadTexts: notificationID.setStatus('mandatory')
lpForHierClear = MibScalar((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 3, 2, 8, 2), RowPointer())
if mibBuilder.loadTexts: lpForHierClear.setStatus('mandatory')
operatorData = MibScalar((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 3, 2, 8, 3), HexString().subtype(subtypeSpec=ValueSizeConstraint(0, 750)))
if mibBuilder.loadTexts: operatorData.setStatus('mandatory')
pid = MibScalar((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 3, 2, 8, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 25)))
if mibBuilder.loadTexts: pid.setStatus('mandatory')
fileName = MibScalar((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 3, 2, 8, 5), DisplayString())
if mibBuilder.loadTexts: fileName.setStatus('mandatory')
fileLineNumber = MibScalar((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 3, 2, 8, 6), Unsigned32())
if mibBuilder.loadTexts: fileLineNumber.setStatus('mandatory')
fileVersion = MibScalar((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 3, 2, 8, 7), DisplayString())
if mibBuilder.loadTexts: fileVersion.setStatus('mandatory')
internalData = MibScalar((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 3, 2, 8, 8), HexString().subtype(subtypeSpec=ValueSizeConstraint(0, 750)))
if mibBuilder.loadTexts: internalData.setStatus('mandatory')
provisionalAlarmInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 3, 2, 9))
cid = MibScalar((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 3, 2, 9, 1), Unsigned32())
if mibBuilder.loadTexts: cid.setStatus('mandatory')
criticalAlarm = NotificationType((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 3, 2) + (0,1)).setObjects(("Nortel-Magellan-Passport-AlarmMIB", "componentRowPointer"), ("Nortel-Magellan-Passport-AlarmMIB", "componentName"), ("Nortel-Magellan-Passport-AlarmMIB", "eventTime"), ("Nortel-Magellan-Passport-AlarmMIB", "activeListStatus"), ("Nortel-Magellan-Passport-AlarmMIB", "severity"), ("Nortel-Magellan-Passport-AlarmMIB", "alarmType"), ("Nortel-Magellan-Passport-AlarmMIB", "probableCause"), ("Nortel-Magellan-Passport-AlarmMIB", "ntpIndex"), ("Nortel-Magellan-Passport-AlarmMIB", "commentData"))
majorAlarm = NotificationType((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 3, 2) + (0,2)).setObjects(("Nortel-Magellan-Passport-AlarmMIB", "componentRowPointer"), ("Nortel-Magellan-Passport-AlarmMIB", "componentName"), ("Nortel-Magellan-Passport-AlarmMIB", "eventTime"), ("Nortel-Magellan-Passport-AlarmMIB", "activeListStatus"), ("Nortel-Magellan-Passport-AlarmMIB", "severity"), ("Nortel-Magellan-Passport-AlarmMIB", "alarmType"), ("Nortel-Magellan-Passport-AlarmMIB", "probableCause"), ("Nortel-Magellan-Passport-AlarmMIB", "ntpIndex"), ("Nortel-Magellan-Passport-AlarmMIB", "commentData"))
minorAlarm = NotificationType((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 3, 2) + (0,3)).setObjects(("Nortel-Magellan-Passport-AlarmMIB", "componentRowPointer"), ("Nortel-Magellan-Passport-AlarmMIB", "componentName"), ("Nortel-Magellan-Passport-AlarmMIB", "eventTime"), ("Nortel-Magellan-Passport-AlarmMIB", "activeListStatus"), ("Nortel-Magellan-Passport-AlarmMIB", "severity"), ("Nortel-Magellan-Passport-AlarmMIB", "alarmType"), ("Nortel-Magellan-Passport-AlarmMIB", "probableCause"), ("Nortel-Magellan-Passport-AlarmMIB", "ntpIndex"), ("Nortel-Magellan-Passport-AlarmMIB", "commentData"))
warningAlarm = NotificationType((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 3, 2) + (0,4)).setObjects(("Nortel-Magellan-Passport-AlarmMIB", "componentRowPointer"), ("Nortel-Magellan-Passport-AlarmMIB", "componentName"), ("Nortel-Magellan-Passport-AlarmMIB", "eventTime"), ("Nortel-Magellan-Passport-AlarmMIB", "activeListStatus"), ("Nortel-Magellan-Passport-AlarmMIB", "severity"), ("Nortel-Magellan-Passport-AlarmMIB", "alarmType"), ("Nortel-Magellan-Passport-AlarmMIB", "probableCause"), ("Nortel-Magellan-Passport-AlarmMIB", "ntpIndex"), ("Nortel-Magellan-Passport-AlarmMIB", "commentData"))
clearedAlarm = NotificationType((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 3, 2) + (0,5)).setObjects(("Nortel-Magellan-Passport-AlarmMIB", "componentRowPointer"), ("Nortel-Magellan-Passport-AlarmMIB", "componentName"), ("Nortel-Magellan-Passport-AlarmMIB", "eventTime"), ("Nortel-Magellan-Passport-AlarmMIB", "activeListStatus"), ("Nortel-Magellan-Passport-AlarmMIB", "severity"), ("Nortel-Magellan-Passport-AlarmMIB", "alarmType"), ("Nortel-Magellan-Passport-AlarmMIB", "probableCause"), ("Nortel-Magellan-Passport-AlarmMIB", "ntpIndex"), ("Nortel-Magellan-Passport-AlarmMIB", "commentData"))
indeterminateAlarm = NotificationType((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 3, 2) + (0,6)).setObjects(("Nortel-Magellan-Passport-AlarmMIB", "componentRowPointer"), ("Nortel-Magellan-Passport-AlarmMIB", "componentName"), ("Nortel-Magellan-Passport-AlarmMIB", "eventTime"), ("Nortel-Magellan-Passport-AlarmMIB", "activeListStatus"), ("Nortel-Magellan-Passport-AlarmMIB", "severity"), ("Nortel-Magellan-Passport-AlarmMIB", "alarmType"), ("Nortel-Magellan-Passport-AlarmMIB", "probableCause"), ("Nortel-Magellan-Passport-AlarmMIB", "ntpIndex"), ("Nortel-Magellan-Passport-AlarmMIB", "commentData"))
alarmGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 4, 1))
alarmGroupBC = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 4, 1, 3))
alarmGroupBC02 = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 4, 1, 3, 2))
alarmGroupBC02A = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 4, 1, 3, 2, 2))
alarmNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 4, 2))
alarmNotificationsGroupBC02A = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 4, 2, 1))
alarmCapabilities = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 4, 3))
alarmCapabilitiesBC = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 4, 3, 3))
alarmCapabilitiesBC02 = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 4, 3, 3, 2))
alarmCapabilitiesBC02A = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 4, 3, 3, 2, 2))
mibBuilder.exportSymbols("Nortel-Magellan-Passport-AlarmMIB", alarmCapabilitiesBC02A=alarmCapabilitiesBC02A, alarmCapabilities=alarmCapabilities, fileVersion=fileVersion, alarmNotifications=alarmNotifications, alarmCapabilitiesBC02=alarmCapabilitiesBC02, ntpIndex=ntpIndex, alarmCapabilitiesBC=alarmCapabilitiesBC, notificationID=notificationID, fileName=fileName, indeterminateAlarm=indeterminateAlarm, alarmNotificationsGroupBC02A=alarmNotificationsGroupBC02A, mandatoryAlarmInfo=mandatoryAlarmInfo, eventTime=eventTime, componentRowPointer=componentRowPointer, provisionalAlarmInfo=provisionalAlarmInfo, operatorData=operatorData, alarmTrap=alarmTrap, severity=severity, fileLineNumber=fileLineNumber, alarmGroupBC02A=alarmGroupBC02A, warningAlarm=warningAlarm, majorAlarm=majorAlarm, minorAlarm=minorAlarm, alarmGroupBC=alarmGroupBC, pid=pid, probableCause=probableCause, alarmGroupBC02=alarmGroupBC02, alarmType=alarmType, activeListStatus=activeListStatus, cid=cid, clearedAlarm=clearedAlarm, lpForHierClear=lpForHierClear, commentData=commentData, criticalAlarm=criticalAlarm, alarmMIB=alarmMIB, optionalAlarmInfo=optionalAlarmInfo, internalData=internalData, componentName=componentName, alarmGroup=alarmGroup)
