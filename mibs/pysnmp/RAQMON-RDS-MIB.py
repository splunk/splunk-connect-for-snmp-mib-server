#
# PySNMP MIB module RAQMON-RDS-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/RAQMON-RDS-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 20:43:43 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ConstraintsUnion, ValueSizeConstraint, ValueRangeConstraint, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ConstraintsUnion", "ValueSizeConstraint", "ValueRangeConstraint", "SingleValueConstraint")
Dscp, = mibBuilder.importSymbols("DIFFSERV-DSCP-TC", "Dscp")
InetAddress, InetAddressType, InetPortNumber = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddress", "InetAddressType", "InetPortNumber")
rmon, = mibBuilder.importSymbols("RMON-MIB", "rmon")
SnmpAdminString, = mibBuilder.importSymbols("SNMP-FRAMEWORK-MIB", "SnmpAdminString")
NotificationGroup, ObjectGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ObjectGroup", "ModuleCompliance")
ObjectIdentity, Counter64, MibIdentifier, Counter32, Integer32, NotificationType, MibScalar, MibTable, MibTableRow, MibTableColumn, iso, IpAddress, ModuleIdentity, TimeTicks, Bits, Unsigned32, Gauge32 = mibBuilder.importSymbols("SNMPv2-SMI", "ObjectIdentity", "Counter64", "MibIdentifier", "Counter32", "Integer32", "NotificationType", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "iso", "IpAddress", "ModuleIdentity", "TimeTicks", "Bits", "Unsigned32", "Gauge32")
TextualConvention, DisplayString, DateAndTime = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString", "DateAndTime")
raqmonDsMIB = ModuleIdentity((1, 3, 6, 1, 2, 1, 16, 32))
raqmonDsMIB.setRevisions(('2006-10-10 00:00',))
if mibBuilder.loadTexts: raqmonDsMIB.setLastUpdated('200610100000Z')
if mibBuilder.loadTexts: raqmonDsMIB.setOrganization('RMON Working Group')
raqmonDsNotifications = MibIdentifier((1, 3, 6, 1, 2, 1, 16, 32, 0))
raqmonDsMIBObjects = MibIdentifier((1, 3, 6, 1, 2, 1, 16, 32, 1))
raqmonDsConformance = MibIdentifier((1, 3, 6, 1, 2, 1, 16, 32, 2))
raqmonDsNotificationTable = MibTable((1, 3, 6, 1, 2, 1, 16, 32, 1, 1), )
if mibBuilder.loadTexts: raqmonDsNotificationTable.setStatus('current')
raqmonDsNotificationEntry = MibTableRow((1, 3, 6, 1, 2, 1, 16, 32, 1, 1, 1), ).setIndexNames((0, "RAQMON-RDS-MIB", "raqmonDsDSRC"), (0, "RAQMON-RDS-MIB", "raqmonDsRCN"), (0, "RAQMON-RDS-MIB", "raqmonDsPeerAddrType"), (0, "RAQMON-RDS-MIB", "raqmonDsPeerAddr"))
if mibBuilder.loadTexts: raqmonDsNotificationEntry.setStatus('current')
raqmonDsDSRC = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 32, 1, 1, 1, 1), Unsigned32())
if mibBuilder.loadTexts: raqmonDsDSRC.setStatus('current')
raqmonDsRCN = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 32, 1, 1, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 15)))
if mibBuilder.loadTexts: raqmonDsRCN.setStatus('current')
raqmonDsPeerAddrType = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 32, 1, 1, 1, 3), InetAddressType())
if mibBuilder.loadTexts: raqmonDsPeerAddrType.setStatus('current')
raqmonDsPeerAddr = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 32, 1, 1, 1, 4), InetAddress())
if mibBuilder.loadTexts: raqmonDsPeerAddr.setStatus('current')
raqmonDsAppName = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 32, 1, 1, 1, 5), SnmpAdminString()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: raqmonDsAppName.setStatus('current')
raqmonDsDataSourceDevicePort = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 32, 1, 1, 1, 6), InetPortNumber()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: raqmonDsDataSourceDevicePort.setStatus('current')
raqmonDsReceiverDevicePort = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 32, 1, 1, 1, 7), InetPortNumber()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: raqmonDsReceiverDevicePort.setStatus('current')
raqmonDsSessionSetupDateTime = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 32, 1, 1, 1, 8), DateAndTime()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: raqmonDsSessionSetupDateTime.setStatus('current')
raqmonDsSessionSetupDelay = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 32, 1, 1, 1, 9), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setUnits('milliseconds').setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: raqmonDsSessionSetupDelay.setStatus('current')
raqmonDsSessionDuration = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 32, 1, 1, 1, 10), Unsigned32()).setUnits('seconds').setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: raqmonDsSessionDuration.setStatus('current')
raqmonDsSessionSetupStatus = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 32, 1, 1, 1, 11), SnmpAdminString()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: raqmonDsSessionSetupStatus.setStatus('current')
raqmonDsRoundTripEndToEndNetDelay = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 32, 1, 1, 1, 12), Unsigned32()).setUnits('milliseconds').setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: raqmonDsRoundTripEndToEndNetDelay.setStatus('current')
raqmonDsOneWayEndToEndNetDelay = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 32, 1, 1, 1, 13), Unsigned32()).setUnits('milliseconds').setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: raqmonDsOneWayEndToEndNetDelay.setStatus('current')
raqmonDsApplicationDelay = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 32, 1, 1, 1, 14), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setUnits('milliseconds').setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: raqmonDsApplicationDelay.setStatus('current')
raqmonDsInterArrivalJitter = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 32, 1, 1, 1, 15), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setUnits('milliseconds').setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: raqmonDsInterArrivalJitter.setStatus('current')
raqmonDsIPPacketDelayVariation = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 32, 1, 1, 1, 16), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setUnits('milliseconds').setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: raqmonDsIPPacketDelayVariation.setStatus('current')
raqmonDsTotalPacketsReceived = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 32, 1, 1, 1, 17), Counter32()).setUnits('packets').setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: raqmonDsTotalPacketsReceived.setStatus('current')
raqmonDsTotalPacketsSent = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 32, 1, 1, 1, 18), Counter32()).setUnits('packets').setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: raqmonDsTotalPacketsSent.setStatus('current')
raqmonDsTotalOctetsReceived = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 32, 1, 1, 1, 19), Counter32()).setUnits('octets').setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: raqmonDsTotalOctetsReceived.setStatus('current')
raqmonDsTotalOctetsSent = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 32, 1, 1, 1, 20), Counter32()).setUnits('octets').setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: raqmonDsTotalOctetsSent.setStatus('current')
raqmonDsCumulativePacketLoss = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 32, 1, 1, 1, 21), Counter32()).setUnits('packets').setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: raqmonDsCumulativePacketLoss.setStatus('current')
raqmonDsPacketLossFraction = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 32, 1, 1, 1, 22), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setUnits('percentage of packets sent').setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: raqmonDsPacketLossFraction.setStatus('current')
raqmonDsCumulativeDiscards = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 32, 1, 1, 1, 23), Counter32()).setUnits('packets').setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: raqmonDsCumulativeDiscards.setStatus('current')
raqmonDsDiscardsFraction = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 32, 1, 1, 1, 24), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setUnits('percentage of packets sent').setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: raqmonDsDiscardsFraction.setStatus('current')
raqmonDsSourcePayloadType = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 32, 1, 1, 1, 25), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 127))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: raqmonDsSourcePayloadType.setStatus('current')
raqmonDsReceiverPayloadType = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 32, 1, 1, 1, 26), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 127))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: raqmonDsReceiverPayloadType.setStatus('current')
raqmonDsSourceLayer2Priority = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 32, 1, 1, 1, 27), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: raqmonDsSourceLayer2Priority.setStatus('current')
raqmonDsSourceDscp = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 32, 1, 1, 1, 28), Dscp()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: raqmonDsSourceDscp.setStatus('current')
raqmonDsDestinationLayer2Priority = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 32, 1, 1, 1, 29), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: raqmonDsDestinationLayer2Priority.setStatus('current')
raqmonDsDestinationDscp = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 32, 1, 1, 1, 30), Dscp()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: raqmonDsDestinationDscp.setStatus('current')
raqmonDsCpuUtilization = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 32, 1, 1, 1, 31), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setUnits('percent').setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: raqmonDsCpuUtilization.setStatus('current')
raqmonDsMemoryUtilization = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 32, 1, 1, 1, 32), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setUnits('percent').setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: raqmonDsMemoryUtilization.setStatus('current')
raqmonDsStaticNotification = NotificationType((1, 3, 6, 1, 2, 1, 16, 32, 0, 1)).setObjects(("RAQMON-RDS-MIB", "raqmonDsAppName"))
if mibBuilder.loadTexts: raqmonDsStaticNotification.setStatus('current')
raqmonDsDynamicNotification = NotificationType((1, 3, 6, 1, 2, 1, 16, 32, 0, 2)).setObjects(("RAQMON-RDS-MIB", "raqmonDsTotalPacketsReceived"))
if mibBuilder.loadTexts: raqmonDsDynamicNotification.setStatus('current')
raqmonDsByeNotification = NotificationType((1, 3, 6, 1, 2, 1, 16, 32, 0, 3)).setObjects(("RAQMON-RDS-MIB", "raqmonDsAppName"))
if mibBuilder.loadTexts: raqmonDsByeNotification.setStatus('current')
raqmonDsCompliance = MibIdentifier((1, 3, 6, 1, 2, 1, 16, 32, 2, 1))
raqmonDsGroups = MibIdentifier((1, 3, 6, 1, 2, 1, 16, 32, 2, 2))
raqmonDsBasicCompliance = ModuleCompliance((1, 3, 6, 1, 2, 1, 16, 32, 2, 1, 1)).setObjects(("RAQMON-RDS-MIB", "raqmonDsNotificationGroup"), ("RAQMON-RDS-MIB", "raqmonDsPayloadGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    raqmonDsBasicCompliance = raqmonDsBasicCompliance.setStatus('current')
raqmonDsNotificationGroup = NotificationGroup((1, 3, 6, 1, 2, 1, 16, 32, 2, 2, 1)).setObjects(("RAQMON-RDS-MIB", "raqmonDsStaticNotification"), ("RAQMON-RDS-MIB", "raqmonDsDynamicNotification"), ("RAQMON-RDS-MIB", "raqmonDsByeNotification"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    raqmonDsNotificationGroup = raqmonDsNotificationGroup.setStatus('current')
raqmonDsPayloadGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 16, 32, 2, 2, 2)).setObjects(("RAQMON-RDS-MIB", "raqmonDsAppName"), ("RAQMON-RDS-MIB", "raqmonDsDataSourceDevicePort"), ("RAQMON-RDS-MIB", "raqmonDsReceiverDevicePort"), ("RAQMON-RDS-MIB", "raqmonDsSessionSetupDateTime"), ("RAQMON-RDS-MIB", "raqmonDsSessionSetupDelay"), ("RAQMON-RDS-MIB", "raqmonDsSessionDuration"), ("RAQMON-RDS-MIB", "raqmonDsSessionSetupStatus"), ("RAQMON-RDS-MIB", "raqmonDsRoundTripEndToEndNetDelay"), ("RAQMON-RDS-MIB", "raqmonDsOneWayEndToEndNetDelay"), ("RAQMON-RDS-MIB", "raqmonDsApplicationDelay"), ("RAQMON-RDS-MIB", "raqmonDsInterArrivalJitter"), ("RAQMON-RDS-MIB", "raqmonDsIPPacketDelayVariation"), ("RAQMON-RDS-MIB", "raqmonDsTotalPacketsReceived"), ("RAQMON-RDS-MIB", "raqmonDsTotalPacketsSent"), ("RAQMON-RDS-MIB", "raqmonDsTotalOctetsReceived"), ("RAQMON-RDS-MIB", "raqmonDsTotalOctetsSent"), ("RAQMON-RDS-MIB", "raqmonDsCumulativePacketLoss"), ("RAQMON-RDS-MIB", "raqmonDsPacketLossFraction"), ("RAQMON-RDS-MIB", "raqmonDsCumulativeDiscards"), ("RAQMON-RDS-MIB", "raqmonDsDiscardsFraction"), ("RAQMON-RDS-MIB", "raqmonDsSourcePayloadType"), ("RAQMON-RDS-MIB", "raqmonDsReceiverPayloadType"), ("RAQMON-RDS-MIB", "raqmonDsSourceLayer2Priority"), ("RAQMON-RDS-MIB", "raqmonDsSourceDscp"), ("RAQMON-RDS-MIB", "raqmonDsDestinationLayer2Priority"), ("RAQMON-RDS-MIB", "raqmonDsDestinationDscp"), ("RAQMON-RDS-MIB", "raqmonDsCpuUtilization"), ("RAQMON-RDS-MIB", "raqmonDsMemoryUtilization"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    raqmonDsPayloadGroup = raqmonDsPayloadGroup.setStatus('current')
mibBuilder.exportSymbols("RAQMON-RDS-MIB", raqmonDsSourceDscp=raqmonDsSourceDscp, raqmonDsPeerAddr=raqmonDsPeerAddr, raqmonDsDynamicNotification=raqmonDsDynamicNotification, raqmonDsApplicationDelay=raqmonDsApplicationDelay, raqmonDsTotalOctetsSent=raqmonDsTotalOctetsSent, raqmonDsTotalPacketsReceived=raqmonDsTotalPacketsReceived, raqmonDsSessionDuration=raqmonDsSessionDuration, raqmonDsDestinationDscp=raqmonDsDestinationDscp, raqmonDsOneWayEndToEndNetDelay=raqmonDsOneWayEndToEndNetDelay, raqmonDsStaticNotification=raqmonDsStaticNotification, raqmonDsSourcePayloadType=raqmonDsSourcePayloadType, raqmonDsMemoryUtilization=raqmonDsMemoryUtilization, raqmonDsPayloadGroup=raqmonDsPayloadGroup, raqmonDsPacketLossFraction=raqmonDsPacketLossFraction, raqmonDsIPPacketDelayVariation=raqmonDsIPPacketDelayVariation, raqmonDsCompliance=raqmonDsCompliance, raqmonDsSourceLayer2Priority=raqmonDsSourceLayer2Priority, raqmonDsNotificationGroup=raqmonDsNotificationGroup, raqmonDsAppName=raqmonDsAppName, raqmonDsInterArrivalJitter=raqmonDsInterArrivalJitter, raqmonDsBasicCompliance=raqmonDsBasicCompliance, raqmonDsDSRC=raqmonDsDSRC, PYSNMP_MODULE_ID=raqmonDsMIB, raqmonDsTotalOctetsReceived=raqmonDsTotalOctetsReceived, raqmonDsCumulativePacketLoss=raqmonDsCumulativePacketLoss, raqmonDsNotifications=raqmonDsNotifications, raqmonDsPeerAddrType=raqmonDsPeerAddrType, raqmonDsGroups=raqmonDsGroups, raqmonDsNotificationEntry=raqmonDsNotificationEntry, raqmonDsMIBObjects=raqmonDsMIBObjects, raqmonDsDiscardsFraction=raqmonDsDiscardsFraction, raqmonDsSessionSetupDateTime=raqmonDsSessionSetupDateTime, raqmonDsTotalPacketsSent=raqmonDsTotalPacketsSent, raqmonDsCpuUtilization=raqmonDsCpuUtilization, raqmonDsRCN=raqmonDsRCN, raqmonDsReceiverDevicePort=raqmonDsReceiverDevicePort, raqmonDsSessionSetupDelay=raqmonDsSessionSetupDelay, raqmonDsNotificationTable=raqmonDsNotificationTable, raqmonDsCumulativeDiscards=raqmonDsCumulativeDiscards, raqmonDsMIB=raqmonDsMIB, raqmonDsReceiverPayloadType=raqmonDsReceiverPayloadType, raqmonDsByeNotification=raqmonDsByeNotification, raqmonDsRoundTripEndToEndNetDelay=raqmonDsRoundTripEndToEndNetDelay, raqmonDsConformance=raqmonDsConformance, raqmonDsDataSourceDevicePort=raqmonDsDataSourceDevicePort, raqmonDsDestinationLayer2Priority=raqmonDsDestinationLayer2Priority, raqmonDsSessionSetupStatus=raqmonDsSessionSetupStatus)
