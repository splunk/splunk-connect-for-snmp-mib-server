#
# PySNMP MIB module ENGENIUS-MESH-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/ENGENIUS-MESH-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 18:48:33 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ValueRangeConstraint, ConstraintsIntersection, ValueSizeConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ValueRangeConstraint", "ConstraintsIntersection", "ValueSizeConstraint", "ConstraintsUnion")
ifIndex, = mibBuilder.importSymbols("IF-MIB", "ifIndex")
InetAddress, InetAddressType = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddress", "InetAddressType")
ObjectGroup, NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "NotificationGroup", "ModuleCompliance")
MibScalar, MibTable, MibTableRow, MibTableColumn, ModuleIdentity, Bits, Counter32, Unsigned32, enterprises, IpAddress, Gauge32, TimeTicks, Integer32, Counter64, iso, NotificationType, MibIdentifier, ObjectIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ModuleIdentity", "Bits", "Counter32", "Unsigned32", "enterprises", "IpAddress", "Gauge32", "TimeTicks", "Integer32", "Counter64", "iso", "NotificationType", "MibIdentifier", "ObjectIdentity")
TextualConvention, TimeStamp, RowStatus, DateAndTime, DisplayString, MacAddress, TruthValue, TimeInterval = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "TimeStamp", "RowStatus", "DateAndTime", "DisplayString", "MacAddress", "TruthValue", "TimeInterval")
engeniusmesh = ModuleIdentity((1, 3, 6, 1, 4, 1, 14125, 1))
engeniusmesh.setRevisions(('2008-03-07 10:00', '2008-03-04 10:00', '2008-02-28 16:00', '2008-02-26 17:00', '2008-01-21 16:00', '2007-11-29 15:00', '2007-11-23 17:00', '2007-10-05 10:00', '2007-10-02 10:30', '2007-09-26 19:00', '2007-09-20 13:00', '2007-09-13 12:00', '2007-08-29 17:00', '2007-08-21 17:00', '2007-08-03 11:00', '2007-07-18 17:00', '2007-07-11 17:00', '2007-07-10 14:00', '2007-06-20 17:00', '2007-06-08 16:00', '2007-06-01 15:00', '2007-05-08 17:00', '2007-04-25 16:00', '2007-04-10 10:00', '2007-04-02 10:00', '2007-02-09 17:00', '2007-02-08 18:00', '2007-02-08 10:00', '2007-01-15 10:00', '2007-01-11 10:00', '2007-01-08 10:00', '2006-12-14 10:00', '2006-12-01 10:00', '2006-11-29 10:00', '2006-11-28 10:00', '2006-11-23 10:00', '2006-11-10 10:00', '2006-11-08 10:00', '2006-11-06 10:00', '2006-11-02 10:00', '2006-10-30 10:00', '2006-10-27 10:00', '2006-10-18 10:00', '2006-10-05 10:00', '2006-10-01 00:00',))
if mibBuilder.loadTexts: engeniusmesh.setLastUpdated('200803071000Z')
if mibBuilder.loadTexts: engeniusmesh.setOrganization('Senao Networks, Inc.')
engenius = MibIdentifier((1, 3, 6, 1, 4, 1, 14125))
nodeStatus = MibIdentifier((1, 3, 6, 1, 4, 1, 14125, 1, 1))
nodeConfiguration = MibIdentifier((1, 3, 6, 1, 4, 1, 14125, 1, 2))
nodeCommand = MibIdentifier((1, 3, 6, 1, 4, 1, 14125, 1, 3))
nodeStatusSystem = MibIdentifier((1, 3, 6, 1, 4, 1, 14125, 1, 1, 1))
nodeStatusTrap = MibIdentifier((1, 3, 6, 1, 4, 1, 14125, 1, 1, 2))
nodeConfigurationSystem = MibIdentifier((1, 3, 6, 1, 4, 1, 14125, 1, 2, 1))
nodeConfigurationEthernet = MibIdentifier((1, 3, 6, 1, 4, 1, 14125, 1, 2, 2))
nodeConfigurationWireless = MibIdentifier((1, 3, 6, 1, 4, 1, 14125, 1, 2, 3))
nodeConfigurationVlan = MibIdentifier((1, 3, 6, 1, 4, 1, 14125, 1, 2, 4))
nodeConfigurationBridge = MibIdentifier((1, 3, 6, 1, 4, 1, 14125, 1, 2, 5))
nodeConfigurationIpaddress = MibIdentifier((1, 3, 6, 1, 4, 1, 14125, 1, 2, 6))
nodeConfigurationNetwork = MibIdentifier((1, 3, 6, 1, 4, 1, 14125, 1, 2, 7))
nodeConfigurationSyslog = MibIdentifier((1, 3, 6, 1, 4, 1, 14125, 1, 2, 8))
nodeConfigurationOlsr = MibIdentifier((1, 3, 6, 1, 4, 1, 14125, 1, 2, 9))
nodeConfigurationRoute = MibIdentifier((1, 3, 6, 1, 4, 1, 14125, 1, 2, 10))
nodeConfigurationNtp = MibIdentifier((1, 3, 6, 1, 4, 1, 14125, 1, 2, 11))
nodeConfigurationDhcpd = MibIdentifier((1, 3, 6, 1, 4, 1, 14125, 1, 2, 12))
nodeConfigurationDns = MibIdentifier((1, 3, 6, 1, 4, 1, 14125, 1, 2, 13))
nodeConfigurationTopology = MibIdentifier((1, 3, 6, 1, 4, 1, 14125, 1, 2, 14))
nodeConfigurationFirewall = MibIdentifier((1, 3, 6, 1, 4, 1, 14125, 1, 2, 15))
nodeConfigurationMacaccess = MibIdentifier((1, 3, 6, 1, 4, 1, 14125, 1, 2, 16))
nodeConfigurationNat = MibIdentifier((1, 3, 6, 1, 4, 1, 14125, 1, 2, 17))
nodeConfigurationOlsrGW = MibIdentifier((1, 3, 6, 1, 4, 1, 14125, 1, 2, 18))
nodeConfigurationShaping = MibIdentifier((1, 3, 6, 1, 4, 1, 14125, 1, 2, 19))
nodeConfigurationPppoe = MibIdentifier((1, 3, 6, 1, 4, 1, 14125, 1, 2, 20))
nodeConfigurationPptp = MibIdentifier((1, 3, 6, 1, 4, 1, 14125, 1, 2, 21))
nodeConfigurationTmipd = MibIdentifier((1, 3, 6, 1, 4, 1, 14125, 1, 2, 22))
nodeConfigurationCaptive = MibIdentifier((1, 3, 6, 1, 4, 1, 14125, 1, 2, 23))
nodeConfigurationRadiusClient = MibIdentifier((1, 3, 6, 1, 4, 1, 14125, 1, 2, 24))
nodeConfigurationHttpd = MibIdentifier((1, 3, 6, 1, 4, 1, 14125, 1, 2, 25))
nodeConfigurationSnmpd = MibIdentifier((1, 3, 6, 1, 4, 1, 14125, 1, 2, 26))
nodeConfigurationTrap = MibIdentifier((1, 3, 6, 1, 4, 1, 14125, 1, 2, 27))
nodeConfigurationDdns = MibIdentifier((1, 3, 6, 1, 4, 1, 14125, 1, 2, 28))
nodeConfigurationZeroconfig = MibIdentifier((1, 3, 6, 1, 4, 1, 14125, 1, 2, 29))
nodeConfigurationSignallevel = MibIdentifier((1, 3, 6, 1, 4, 1, 14125, 1, 2, 30))
nodeConfigurationIpsec = MibIdentifier((1, 3, 6, 1, 4, 1, 14125, 1, 2, 31))
nodeConfigurationL2tpc = MibIdentifier((1, 3, 6, 1, 4, 1, 14125, 1, 2, 32))
nodeConfigurationAutoip = MibIdentifier((1, 3, 6, 1, 4, 1, 14125, 1, 2, 33))
nodeConfigurationInterfaces = MibIdentifier((1, 3, 6, 1, 4, 1, 14125, 1, 2, 34))
nodeConfigurationMlrd = MibIdentifier((1, 3, 6, 1, 4, 1, 14125, 1, 2, 35))
nodeConfigurationRoutedog = MibIdentifier((1, 3, 6, 1, 4, 1, 14125, 1, 2, 36))
nodeConfigurationLinuxdog = MibIdentifier((1, 3, 6, 1, 4, 1, 14125, 1, 2, 37))
nodeConfigurationAdvTunning = MibIdentifier((1, 3, 6, 1, 4, 1, 14125, 1, 2, 38))
nodeConfigurationSshd = MibIdentifier((1, 3, 6, 1, 4, 1, 14125, 1, 2, 39))
nodeConfigutationWme = MibIdentifier((1, 3, 6, 1, 4, 1, 14125, 1, 2, 40))
nodeConfigurationTm75 = MibIdentifier((1, 3, 6, 1, 4, 1, 14125, 1, 2, 41))
nodeConfigurationNmsAddress = MibIdentifier((1, 3, 6, 1, 4, 1, 14125, 1, 2, 42))
nodeConfigurationUserDb = MibIdentifier((1, 3, 6, 1, 4, 1, 14125, 1, 2, 43))
nodeConfigurationUserGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 14125, 1, 2, 44))
nodeConfigurationStatickey = MibIdentifier((1, 3, 6, 1, 4, 1, 14125, 1, 2, 45))
nodeConfigurationDhcrelay = MibIdentifier((1, 3, 6, 1, 4, 1, 14125, 1, 2, 46))
nodeConfigurationMulticast = MibIdentifier((1, 3, 6, 1, 4, 1, 14125, 1, 2, 47))
nodeConfigurationOspfd = MibIdentifier((1, 3, 6, 1, 4, 1, 14125, 1, 2, 48))
nodeConfigurationEbtables = MibIdentifier((1, 3, 6, 1, 4, 1, 14125, 1, 2, 49))
nodeCommandReboot = MibIdentifier((1, 3, 6, 1, 4, 1, 14125, 1, 3, 1))
nodeCommandReset = MibIdentifier((1, 3, 6, 1, 4, 1, 14125, 1, 3, 2))
nodeCommandUpload = MibIdentifier((1, 3, 6, 1, 4, 1, 14125, 1, 3, 3))
nodeCommandLogoutBlock = MibIdentifier((1, 3, 6, 1, 4, 1, 14125, 1, 3, 4))
nodeCommandRestartSnmp = MibIdentifier((1, 3, 6, 1, 4, 1, 14125, 1, 3, 5))
systemUptime = MibScalar((1, 3, 6, 1, 4, 1, 14125, 1, 1, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 50))).setMaxAccess("readonly")
if mibBuilder.loadTexts: systemUptime.setStatus('current')
systemMemory = MibScalar((1, 3, 6, 1, 4, 1, 14125, 1, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: systemMemory.setStatus('current')
systemDevicename = MibScalar((1, 3, 6, 1, 4, 1, 14125, 1, 1, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 50))).setMaxAccess("readonly")
if mibBuilder.loadTexts: systemDevicename.setStatus('current')
systemCheckingState = MibScalar((1, 3, 6, 1, 4, 1, 14125, 1, 1, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: systemCheckingState.setStatus('current')
trapVariable = MibIdentifier((1, 3, 6, 1, 4, 1, 14125, 1, 1, 2, 1))
genericTrapVariable = MibScalar((1, 3, 6, 1, 4, 1, 14125, 1, 1, 2, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genericTrapVariable.setStatus('current')
genericTrapVarMACAddress = MibScalar((1, 3, 6, 1, 4, 1, 14125, 1, 1, 2, 1, 2), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genericTrapVarMACAddress.setStatus('current')
genericTrapVarHostIPAddress = MibScalar((1, 3, 6, 1, 4, 1, 14125, 1, 1, 2, 1, 3), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genericTrapVarHostIPAddress.setStatus('current')
genericTrapVarHostname = MibScalar((1, 3, 6, 1, 4, 1, 14125, 1, 1, 2, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genericTrapVarHostname.setStatus('current')
genericTrapVarInterface = MibScalar((1, 3, 6, 1, 4, 1, 14125, 1, 1, 2, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genericTrapVarInterface.setStatus('current')
genericTrapVarWirelessCard = MibScalar((1, 3, 6, 1, 4, 1, 14125, 1, 1, 2, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("cardA", 1), ("cardB", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: genericTrapVarWirelessCard.setStatus('current')
genericTrapVarEthernetPort = MibScalar((1, 3, 6, 1, 4, 1, 14125, 1, 1, 2, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("ethPortA", 1), ("ethPortB", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: genericTrapVarEthernetPort.setStatus('current')
genericTrapVarCount = MibScalar((1, 3, 6, 1, 4, 1, 14125, 1, 1, 2, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genericTrapVarCount.setStatus('current')
adminTraps = ObjectIdentity((1, 3, 6, 1, 4, 1, 14125, 1, 1, 2, 2))
if mibBuilder.loadTexts: adminTraps.setStatus('current')
adminTrapsAdminConf = NotificationType((1, 3, 6, 1, 4, 1, 14125, 1, 1, 2, 2, 1)).setObjects(("ENGENIUS-MESH-MIB", "genericTrapVarHostIPAddress"), ("ENGENIUS-MESH-MIB", "genericTrapVariable"))
if mibBuilder.loadTexts: adminTrapsAdminConf.setStatus('current')
adminTrapsAdminCmd = NotificationType((1, 3, 6, 1, 4, 1, 14125, 1, 1, 2, 2, 2)).setObjects(("ENGENIUS-MESH-MIB", "genericTrapVarHostIPAddress"), ("ENGENIUS-MESH-MIB", "genericTrapVariable"))
if mibBuilder.loadTexts: adminTrapsAdminCmd.setStatus('current')
userTraps = ObjectIdentity((1, 3, 6, 1, 4, 1, 14125, 1, 1, 2, 3))
if mibBuilder.loadTexts: userTraps.setStatus('current')
userTrapsUserLogin = NotificationType((1, 3, 6, 1, 4, 1, 14125, 1, 1, 2, 3, 1)).setObjects(("ENGENIUS-MESH-MIB", "genericTrapVarHostIPAddress"), ("ENGENIUS-MESH-MIB", "genericTrapVariable"))
if mibBuilder.loadTexts: userTrapsUserLogin.setStatus('current')
userTrapsUserLogout = NotificationType((1, 3, 6, 1, 4, 1, 14125, 1, 1, 2, 3, 2)).setObjects(("ENGENIUS-MESH-MIB", "genericTrapVarHostIPAddress"), ("ENGENIUS-MESH-MIB", "genericTrapVariable"))
if mibBuilder.loadTexts: userTrapsUserLogout.setStatus('current')
systemTraps = ObjectIdentity((1, 3, 6, 1, 4, 1, 14125, 1, 1, 2, 4))
if mibBuilder.loadTexts: systemTraps.setStatus('current')
systemTrapsSystemReboot = NotificationType((1, 3, 6, 1, 4, 1, 14125, 1, 1, 2, 4, 1)).setObjects(("ENGENIUS-MESH-MIB", "genericTrapVarHostIPAddress"), ("ENGENIUS-MESH-MIB", "genericTrapVariable"))
if mibBuilder.loadTexts: systemTrapsSystemReboot.setStatus('current')
systemTrapsSystemRestore = NotificationType((1, 3, 6, 1, 4, 1, 14125, 1, 1, 2, 4, 2)).setObjects(("ENGENIUS-MESH-MIB", "genericTrapVarHostIPAddress"), ("ENGENIUS-MESH-MIB", "genericTrapVariable"))
if mibBuilder.loadTexts: systemTrapsSystemRestore.setStatus('current')
systemTrapsSystemUpgrade = NotificationType((1, 3, 6, 1, 4, 1, 14125, 1, 1, 2, 4, 3)).setObjects(("ENGENIUS-MESH-MIB", "genericTrapVarHostIPAddress"), ("ENGENIUS-MESH-MIB", "genericTrapVariable"))
if mibBuilder.loadTexts: systemTrapsSystemUpgrade.setStatus('current')
systemTrapsSystemConf = NotificationType((1, 3, 6, 1, 4, 1, 14125, 1, 1, 2, 4, 4)).setObjects(("ENGENIUS-MESH-MIB", "genericTrapVarHostIPAddress"), ("ENGENIUS-MESH-MIB", "genericTrapVariable"))
if mibBuilder.loadTexts: systemTrapsSystemConf.setStatus('current')
systemTrapsSystemStatus = NotificationType((1, 3, 6, 1, 4, 1, 14125, 1, 1, 2, 4, 5)).setObjects(("ENGENIUS-MESH-MIB", "genericTrapVarHostIPAddress"), ("ENGENIUS-MESH-MIB", "genericTrapVariable"))
if mibBuilder.loadTexts: systemTrapsSystemStatus.setStatus('current')
systemName = MibScalar((1, 3, 6, 1, 4, 1, 14125, 1, 2, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32)).clone('Nil')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: systemName.setStatus('current')
systemLocation = MibScalar((1, 3, 6, 1, 4, 1, 14125, 1, 2, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32)).clone('Unknown')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: systemLocation.setStatus('current')
systemContactName = MibScalar((1, 3, 6, 1, 4, 1, 14125, 1, 2, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32)).clone('Unknown')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: systemContactName.setStatus('current')
systemContactMail = MibScalar((1, 3, 6, 1, 4, 1, 14125, 1, 2, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32)).clone('Unknown')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: systemContactMail.setStatus('current')
systemContactPhone = MibScalar((1, 3, 6, 1, 4, 1, 14125, 1, 2, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32)).clone('Unknown')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: systemContactPhone.setStatus('current')
systemDescription = MibScalar((1, 3, 6, 1, 4, 1, 14125, 1, 2, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32)).clone('Nil')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: systemDescription.setStatus('current')
systemObjectid = MibScalar((1, 3, 6, 1, 4, 1, 14125, 1, 2, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32)).clone('Nil')).setMaxAccess("readonly")
if mibBuilder.loadTexts: systemObjectid.setStatus('current')
systemOperatemode = MibScalar((1, 3, 6, 1, 4, 1, 14125, 1, 2, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18))).clone(namedValues=NamedValues(("gateway", 1), ("relay", 2), ("clientrelay", 3), ("layer2gw", 4), ("layer2", 5), ("bridge", 6), ("router", 7), ("dualradiogw", 8), ("dualradiorelay", 9), ("dualradiocrelay", 10), ("mlrd", 11), ("slavebridge", 12), ("masterbridge", 13), ("wdsbridge", 14), ("repeater", 15), ("client", 16), ("clientrouter", 17), ("wdsrouter", 18))).clone('gateway')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: systemOperatemode.setStatus('current')
systemUpdateMode = MibScalar((1, 3, 6, 1, 4, 1, 14125, 1, 2, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 13))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: systemUpdateMode.setStatus('current')
ethernetInterfaceTable = MibTable((1, 3, 6, 1, 4, 1, 14125, 1, 2, 2, 1), )
if mibBuilder.loadTexts: ethernetInterfaceTable.setStatus('current')
ethernetInterfaceTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 14125, 1, 2, 2, 1, 1), ).setIndexNames((0, "ENGENIUS-MESH-MIB", "ethInterfaceTableIndex"))
if mibBuilder.loadTexts: ethernetInterfaceTableEntry.setStatus('current')
ethInterfaceTableIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 2, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2)))
if mibBuilder.loadTexts: ethInterfaceTableIndex.setStatus('current')
ethInterfaceTableName = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 2, 1, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 32)).clone('Nil')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ethInterfaceTableName.setStatus('current')
ethInterfaceTableBase = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 2, 1, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 32)).clone('Nil')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ethInterfaceTableBase.setStatus('current')
ethInterfaceTableMac = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 2, 1, 1, 4), MacAddress().clone('Nil')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ethInterfaceTableMac.setStatus('current')
ethInterfaceTableBridge = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 2, 1, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 32)).clone('Nil')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ethInterfaceTableBridge.setStatus('current')
ethInterfaceTableBridgeCost = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 2, 1, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65536))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ethInterfaceTableBridgeCost.setStatus('current')
ethInterfaceTableBridgePrio = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 2, 1, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65536))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ethInterfaceTableBridgePrio.setStatus('current')
ethInterfaceTableComments = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 2, 1, 1, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32)).clone('Nil')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ethInterfaceTableComments.setStatus('current')
ethInterfaceTableActive = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 2, 1, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('enable')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ethInterfaceTableActive.setStatus('current')
ethInterfaceTableRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 2, 1, 1, 10), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ethInterfaceTableRowStatus.setStatus('current')
wirelessInterfaceTable = MibTable((1, 3, 6, 1, 4, 1, 14125, 1, 2, 3, 1), )
if mibBuilder.loadTexts: wirelessInterfaceTable.setStatus('current')
wirelessInterfaceTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 14125, 1, 2, 3, 1, 1), ).setIndexNames((0, "ENGENIUS-MESH-MIB", "wlanInterfaceTableIndex"))
if mibBuilder.loadTexts: wirelessInterfaceTableEntry.setStatus('current')
wlanInterfaceTableIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 3, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 52)))
if mibBuilder.loadTexts: wlanInterfaceTableIndex.setStatus('current')
wlanInterfaceTableName = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 3, 1, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 32)).clone('Nil')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wlanInterfaceTableName.setStatus('current')
wlanInterfaceTableBase = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 3, 1, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 32)).clone('Nil')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wlanInterfaceTableBase.setStatus('current')
wlanInterfaceTableBridge = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 3, 1, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 32)).clone('Nil')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wlanInterfaceTableBridge.setStatus('current')
wlanInterfaceTableBridgeCost = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 3, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65536)).clone(100)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wlanInterfaceTableBridgeCost.setStatus('current')
wlanInterfaceTableBridgePrio = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 3, 1, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65536)).clone(100)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wlanInterfaceTableBridgePrio.setStatus('current')
wlanInterfaceTableMode = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 3, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("ap", 1), ("sta", 2), ("adhoc", 3), ("wds", 4)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wlanInterfaceTableMode.setStatus('current')
wlanInterfaceTableBand = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 3, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("dot11a", 1), ("dot11b", 2), ("dot11g", 3)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wlanInterfaceTableBand.setStatus('current')
wlanInterfaceTableEssid = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 3, 1, 1, 9), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32)).clone('Nil')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wlanInterfaceTableEssid.setStatus('current')
wlanInterfaceTableFreq = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 3, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65536))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wlanInterfaceTableFreq.setStatus('current')
wlanInterfaceTableMac = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 3, 1, 1, 11), MacAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wlanInterfaceTableMac.setStatus('current')
wlanInterfaceTableSecurity = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 3, 1, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("open", 1), ("wep", 2), ("wpa1", 3), ("aes", 4), ("wpa2", 5), ("wpa1n2", 6))).clone('open')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wlanInterfaceTableSecurity.setStatus('current')
wlanInterfaceTableWpaType = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 3, 1, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("tkip", 1), ("aes", 2))).clone('tkip')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wlanInterfaceTableWpaType.setStatus('current')
wlanInterfaceTableDot1x = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 3, 1, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("true", 1), ("false", 2))).clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wlanInterfaceTableDot1x.setStatus('current')
wlanInterfaceTableEncryptionKey = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 3, 1, 1, 15), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 64)).clone('Nil')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wlanInterfaceTableEncryptionKey.setStatus('current')
wlanInterfaceTableBroadcastSsid = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 3, 1, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('enable')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wlanInterfaceTableBroadcastSsid.setStatus('current')
wlanInterfaceTableBeaconInt = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 3, 1, 1, 17), Integer32().subtype(subtypeSpec=ValueRangeConstraint(20, 1000)).clone(100)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wlanInterfaceTableBeaconInt.setStatus('current')
wlanInterfaceTableRtsThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 3, 1, 1, 18), Integer32().subtype(subtypeSpec=ValueRangeConstraint(256, 2346)).clone(2346)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wlanInterfaceTableRtsThreshold.setStatus('current')
wlanInterfaceTableFragThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 3, 1, 1, 19), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1500, 2346)).clone(2346)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wlanInterfaceTableFragThreshold.setStatus('current')
wlanInterfaceTableDtimInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 3, 1, 1, 20), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 256)).clone(1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wlanInterfaceTableDtimInterval.setStatus('current')
wlanInterfaceTableDatarate = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 3, 1, 1, 21), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 54))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wlanInterfaceTableDatarate.setStatus('current')
wlanInterfaceTableDiversity = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 3, 1, 1, 22), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2), ("carddefault", 3))).clone('carddefault')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wlanInterfaceTableDiversity.setStatus('current')
wlanInterfaceTableTxAntenna = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 3, 1, 1, 23), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("diversity", 0), ("port1", 1), ("port2", 2), ("carddefault", 3))).clone('carddefault')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wlanInterfaceTableTxAntenna.setStatus('current')
wlanInterfaceTableRxAntenna = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 3, 1, 1, 24), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("diversity", 0), ("port1", 1), ("port2", 2), ("carddefault", 3))).clone('carddefault')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wlanInterfaceTableRxAntenna.setStatus('current')
wlanInterfaceTableCrntTxPower = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 3, 1, 1, 25), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 9999))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wlanInterfaceTableCrntTxPower.setStatus('current')
wlanInterfaceTableTxPower = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 3, 1, 1, 26), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 9999)).clone(9999)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wlanInterfaceTableTxPower.setStatus('current')
wlanInterfaceTableSeperation = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 3, 1, 1, 27), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wlanInterfaceTableSeperation.setStatus('current')
wlanInterfaceTableComments = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 3, 1, 1, 28), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32)).clone('Nil')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wlanInterfaceTableComments.setStatus('current')
wlanInterfaceTableActive = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 3, 1, 1, 29), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('enable')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wlanInterfaceTableActive.setStatus('current')
wlanInterfaceTableRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 3, 1, 1, 30), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wlanInterfaceTableRowStatus.setStatus('current')
wirelessFrequencyMeshTable = MibTable((1, 3, 6, 1, 4, 1, 14125, 1, 2, 3, 2), )
if mibBuilder.loadTexts: wirelessFrequencyMeshTable.setStatus('current')
wirelessFrequencyMeshTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 14125, 1, 2, 3, 2, 1), ).setIndexNames((0, "ENGENIUS-MESH-MIB", "wlanFrequencyMeshTableIndex"))
if mibBuilder.loadTexts: wirelessFrequencyMeshTableEntry.setStatus('current')
wlanFrequencyMeshTableIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 3, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100)))
if mibBuilder.loadTexts: wlanFrequencyMeshTableIndex.setStatus('current')
wlanFrequencyMeshTableChannel = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 3, 2, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlanFrequencyMeshTableChannel.setStatus('current')
wlanFrequencyMeshTableFrequency = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 3, 2, 1, 3), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlanFrequencyMeshTableFrequency.setStatus('current')
wlanFrequencyMeshTableRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 3, 2, 1, 4), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlanFrequencyMeshTableRowStatus.setStatus('current')
wirelessFrequencyAp0Table = MibTable((1, 3, 6, 1, 4, 1, 14125, 1, 2, 3, 3), )
if mibBuilder.loadTexts: wirelessFrequencyAp0Table.setStatus('current')
wirelessFrequencyAp0TableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 14125, 1, 2, 3, 3, 1), ).setIndexNames((0, "ENGENIUS-MESH-MIB", "wlanFrequencyAp0TableIndex"))
if mibBuilder.loadTexts: wirelessFrequencyAp0TableEntry.setStatus('current')
wlanFrequencyAp0TableIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 3, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100)))
if mibBuilder.loadTexts: wlanFrequencyAp0TableIndex.setStatus('current')
wlanFrequencyAp0TableChannel = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 3, 3, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlanFrequencyAp0TableChannel.setStatus('current')
wlanFrequencyAp0TableFrequency = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 3, 3, 1, 3), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlanFrequencyAp0TableFrequency.setStatus('current')
wlanFrequencyAp0TableRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 3, 3, 1, 4), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlanFrequencyAp0TableRowStatus.setStatus('current')
wirelessFrequencyAp1Table = MibTable((1, 3, 6, 1, 4, 1, 14125, 1, 2, 3, 4), )
if mibBuilder.loadTexts: wirelessFrequencyAp1Table.setStatus('current')
wirelessFrequencyAp1TableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 14125, 1, 2, 3, 4, 1), ).setIndexNames((0, "ENGENIUS-MESH-MIB", "wlanFrequencyAp1TableIndex"))
if mibBuilder.loadTexts: wirelessFrequencyAp1TableEntry.setStatus('current')
wlanFrequencyAp1TableIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 3, 4, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100)))
if mibBuilder.loadTexts: wlanFrequencyAp1TableIndex.setStatus('current')
wlanFrequencyAp1TableChannel = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 3, 4, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlanFrequencyAp1TableChannel.setStatus('current')
wlanFrequencyAp1TableFrequency = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 3, 4, 1, 3), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlanFrequencyAp1TableFrequency.setStatus('current')
wlanFrequencyAp1TableRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 3, 4, 1, 4), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlanFrequencyAp1TableRowStatus.setStatus('current')
vlanInterfaceTable = MibTable((1, 3, 6, 1, 4, 1, 14125, 1, 2, 4, 1), )
if mibBuilder.loadTexts: vlanInterfaceTable.setStatus('current')
vlanInterfaceTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 14125, 1, 2, 4, 1, 1), ).setIndexNames((0, "ENGENIUS-MESH-MIB", "vlanInterfaceTableIndex"))
if mibBuilder.loadTexts: vlanInterfaceTableEntry.setStatus('current')
vlanInterfaceTableIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 4, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 32)))
if mibBuilder.loadTexts: vlanInterfaceTableIndex.setStatus('current')
vlanInterfaceTableName = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 4, 1, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 32)).clone('Nil')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: vlanInterfaceTableName.setStatus('current')
vlanInterfaceTableBase = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 4, 1, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 32)).clone('Nil')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: vlanInterfaceTableBase.setStatus('current')
vlanInterfaceTableMac = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 4, 1, 1, 4), MacAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: vlanInterfaceTableMac.setStatus('current')
vlanInterfaceTableId = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 4, 1, 1, 5), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: vlanInterfaceTableId.setStatus('current')
vlanInterfaceTableBridge = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 4, 1, 1, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 32)).clone('Nil')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: vlanInterfaceTableBridge.setStatus('current')
vlanInterfaceTableBridgeCost = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 4, 1, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65536)).clone(100)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: vlanInterfaceTableBridgeCost.setStatus('current')
vlanInterfaceTableBridgePrio = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 4, 1, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65536)).clone(100)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: vlanInterfaceTableBridgePrio.setStatus('current')
vlanInterfaceTableComments = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 4, 1, 1, 9), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32)).clone('Nil')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: vlanInterfaceTableComments.setStatus('current')
vlanInterfaceTableActive = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 4, 1, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('enable')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: vlanInterfaceTableActive.setStatus('current')
vlanInterfaceTableRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 4, 1, 1, 11), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: vlanInterfaceTableRowStatus.setStatus('current')
bridgeInterfaceTable = MibTable((1, 3, 6, 1, 4, 1, 14125, 1, 2, 5, 1), )
if mibBuilder.loadTexts: bridgeInterfaceTable.setStatus('current')
bridgeInterfaceTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 14125, 1, 2, 5, 1, 1), ).setIndexNames((0, "ENGENIUS-MESH-MIB", "bridgeInterfaceTableIndex"))
if mibBuilder.loadTexts: bridgeInterfaceTableEntry.setStatus('current')
bridgeInterfaceTableIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 5, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 16)))
if mibBuilder.loadTexts: bridgeInterfaceTableIndex.setStatus('current')
bridgeInterfaceTableName = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 5, 1, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 32)).clone('Nil')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: bridgeInterfaceTableName.setStatus('current')
bridgeInterfaceTableMac = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 5, 1, 1, 3), MacAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: bridgeInterfaceTableMac.setStatus('current')
bridgeInterfaceTableAge = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 5, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65536)).clone(300)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: bridgeInterfaceTableAge.setStatus('current')
bridgeInterfaceTablePrio = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 5, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65536)).clone(32768)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: bridgeInterfaceTablePrio.setStatus('current')
bridgeInterfaceTableFwdDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 5, 1, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65536)).clone(15)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: bridgeInterfaceTableFwdDelay.setStatus('current')
bridgeInterfaceTableHelloInt = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 5, 1, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65536)).clone(2)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: bridgeInterfaceTableHelloInt.setStatus('current')
bridgeInterfaceTableMaxAge = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 5, 1, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65536)).clone(20)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: bridgeInterfaceTableMaxAge.setStatus('current')
bridgeInterfaceTableStp = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 5, 1, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("on", 1), ("off", 2))).clone(2)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: bridgeInterfaceTableStp.setStatus('current')
bridgeInterfaceTableComments = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 5, 1, 1, 10), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32)).clone('Nil')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: bridgeInterfaceTableComments.setStatus('current')
bridgeInterfaceTableActive = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 5, 1, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('enable')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: bridgeInterfaceTableActive.setStatus('current')
bridgeInterfaceTableRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 5, 1, 1, 12), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: bridgeInterfaceTableRowStatus.setStatus('current')
ipAddressesTable = MibTable((1, 3, 6, 1, 4, 1, 14125, 1, 2, 6, 1), )
if mibBuilder.loadTexts: ipAddressesTable.setStatus('current')
ipAddressesTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 14125, 1, 2, 6, 1, 1), ).setIndexNames((0, "ENGENIUS-MESH-MIB", "ipAddressesTableIndex"))
if mibBuilder.loadTexts: ipAddressesTableEntry.setStatus('current')
ipAddressesTableIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 6, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 64)))
if mibBuilder.loadTexts: ipAddressesTableIndex.setStatus('current')
ipAddressesTableIface = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 6, 1, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 32)).clone('Nil')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ipAddressesTableIface.setStatus('current')
ipAddressesTableType = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 6, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("static", 1), ("dhcp", 2), ("pppoe", 3), ("ipalias", 4))).clone('dhcp')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ipAddressesTableType.setStatus('current')
ipAddressesTableIp = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 6, 1, 1, 4), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ipAddressesTableIp.setStatus('current')
ipAddressesTableNetmask = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 6, 1, 1, 5), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ipAddressesTableNetmask.setStatus('current')
ipAddressesTableBroadcast = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 6, 1, 1, 6), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ipAddressesTableBroadcast.setStatus('current')
ipAddressesTableGateway = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 6, 1, 1, 7), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ipAddressesTableGateway.setStatus('current')
ipAddressesTableRouted = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 6, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("routable", 1), ("nat", 2))).clone('routable')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ipAddressesTableRouted.setStatus('current')
ipAddressesTableComments = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 6, 1, 1, 9), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32)).clone('Nil')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ipAddressesTableComments.setStatus('current')
ipAddressesTableActive = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 6, 1, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('enable')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ipAddressesTableActive.setStatus('current')
ipAddressesTableRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 6, 1, 1, 11), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ipAddressesTableRowStatus.setStatus('current')
networkPrimaryDns = MibScalar((1, 3, 6, 1, 4, 1, 14125, 1, 2, 7, 1), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: networkPrimaryDns.setStatus('current')
networkSecondaryDns = MibScalar((1, 3, 6, 1, 4, 1, 14125, 1, 2, 7, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: networkSecondaryDns.setStatus('current')
networkDomain = MibScalar((1, 3, 6, 1, 4, 1, 14125, 1, 2, 7, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 32)).clone('Nil')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: networkDomain.setStatus('current')
syslogActive = MibScalar((1, 3, 6, 1, 4, 1, 14125, 1, 2, 8, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('enable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: syslogActive.setStatus('current')
syslogKlog = MibScalar((1, 3, 6, 1, 4, 1, 14125, 1, 2, 8, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: syslogKlog.setStatus('current')
syslogLevel = MibScalar((1, 3, 6, 1, 4, 1, 14125, 1, 2, 8, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7)).clone(5)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: syslogLevel.setStatus('current')
syslogRemoteActive = MibScalar((1, 3, 6, 1, 4, 1, 14125, 1, 2, 8, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: syslogRemoteActive.setStatus('current')
syslogRemoteAddress = MibScalar((1, 3, 6, 1, 4, 1, 14125, 1, 2, 8, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 512)).clone('Nil')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: syslogRemoteAddress.setStatus('current')
olsrActive = MibScalar((1, 3, 6, 1, 4, 1, 14125, 1, 2, 9, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('enable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: olsrActive.setStatus('current')
olsrTosValue = MibScalar((1, 3, 6, 1, 4, 1, 14125, 1, 2, 9, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 16)).clone(16)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: olsrTosValue.setStatus('current')
olsrWillingnessActive = MibScalar((1, 3, 6, 1, 4, 1, 14125, 1, 2, 9, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('enable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: olsrWillingnessActive.setStatus('current')
olsrWillingness = MibScalar((1, 3, 6, 1, 4, 1, 14125, 1, 2, 9, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7)).clone(4)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: olsrWillingness.setStatus('current')
olsrHysteresisActive = MibScalar((1, 3, 6, 1, 4, 1, 14125, 1, 2, 9, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: olsrHysteresisActive.setStatus('current')
olsrHysteresisScaling = MibScalar((1, 3, 6, 1, 4, 1, 14125, 1, 2, 9, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 32)).clone('0.50')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: olsrHysteresisScaling.setStatus('current')
olsrHysteresisThrHigh = MibScalar((1, 3, 6, 1, 4, 1, 14125, 1, 2, 9, 7), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 32)).clone('0.80')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: olsrHysteresisThrHigh.setStatus('current')
olsrHysteresisThrLow = MibScalar((1, 3, 6, 1, 4, 1, 14125, 1, 2, 9, 8), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 32)).clone('0.30')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: olsrHysteresisThrLow.setStatus('current')
olsrLinkQualityType = MibScalar((1, 3, 6, 1, 4, 1, 14125, 1, 2, 9, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("disable", 0), ("useformpr", 1), ("useformprandrouting", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: olsrLinkQualityType.setStatus('current')
olsrLinkQualitySize = MibScalar((1, 3, 6, 1, 4, 1, 14125, 1, 2, 9, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(3, 128)).clone(10)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: olsrLinkQualitySize.setStatus('current')
olsrPollRate = MibScalar((1, 3, 6, 1, 4, 1, 14125, 1, 2, 9, 11), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 32)).clone('0.05')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: olsrPollRate.setStatus('current')
olsrTcType = MibScalar((1, 3, 6, 1, 4, 1, 14125, 1, 2, 9, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("sendonlymprselectors", 0), ("sendonlymprselectorsandmprs", 1), ("sendallneighbors", 2))).clone('sendonlymprselectors')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: olsrTcType.setStatus('current')
olsrMpr = MibScalar((1, 3, 6, 1, 4, 1, 14125, 1, 2, 9, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 20)).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: olsrMpr.setStatus('current')
olsrSharedKey = MibScalar((1, 3, 6, 1, 4, 1, 14125, 1, 2, 9, 14), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32)).clone('Nil')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: olsrSharedKey.setStatus('current')
olsrInterfaceTable = MibTable((1, 3, 6, 1, 4, 1, 14125, 1, 2, 9, 15), )
if mibBuilder.loadTexts: olsrInterfaceTable.setStatus('current')
olsrInterfaceTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 14125, 1, 2, 9, 15, 1), ).setIndexNames((0, "ENGENIUS-MESH-MIB", "olsrInterfaceTableIndex"))
if mibBuilder.loadTexts: olsrInterfaceTableEntry.setStatus('current')
olsrInterfaceTableIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 9, 15, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 10)))
if mibBuilder.loadTexts: olsrInterfaceTableIndex.setStatus('current')
olsrInterfaceTableIface = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 9, 15, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: olsrInterfaceTableIface.setStatus('current')
olsrInterfaceTableHelloInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 9, 15, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 32)).clone('2.0')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: olsrInterfaceTableHelloInterval.setStatus('current')
olsrInterfaceTableHelloValidity = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 9, 15, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 32)).clone('30.0')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: olsrInterfaceTableHelloValidity.setStatus('current')
olsrInterfaceTableTcInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 9, 15, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 32)).clone('5.0')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: olsrInterfaceTableTcInterval.setStatus('current')
olsrInterfaceTableTcValidity = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 9, 15, 1, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 32)).clone('60.0')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: olsrInterfaceTableTcValidity.setStatus('current')
olsrInterfaceTableMidInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 9, 15, 1, 7), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 32)).clone('5.0')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: olsrInterfaceTableMidInterval.setStatus('current')
olsrInterfaceTableMidValidity = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 9, 15, 1, 8), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 32)).clone('60.0')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: olsrInterfaceTableMidValidity.setStatus('current')
olsrInterfaceTableHnaInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 9, 15, 1, 9), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 32)).clone('5.0')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: olsrInterfaceTableHnaInterval.setStatus('current')
olsrInterfaceTableHnaValidity = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 9, 15, 1, 10), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 32)).clone('60.0')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: olsrInterfaceTableHnaValidity.setStatus('current')
olsrInterfaceTableComments = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 9, 15, 1, 11), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32)).clone('none')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: olsrInterfaceTableComments.setStatus('current')
olsrInterfaceTableActive = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 9, 15, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('enable')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: olsrInterfaceTableActive.setStatus('current')
olsrInterfaceTableRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 9, 15, 1, 13), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: olsrInterfaceTableRowStatus.setStatus('current')
olsrGatewayTable = MibTable((1, 3, 6, 1, 4, 1, 14125, 1, 2, 18, 1), )
if mibBuilder.loadTexts: olsrGatewayTable.setStatus('current')
olsrGatewayTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 14125, 1, 2, 18, 1, 1), ).setIndexNames((0, "ENGENIUS-MESH-MIB", "olsrGatewayTableIndex"))
if mibBuilder.loadTexts: olsrGatewayTableEntry.setStatus('current')
olsrGatewayTableIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 18, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 10)))
if mibBuilder.loadTexts: olsrGatewayTableIndex.setStatus('current')
olsrGatewayTableSubnet = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 18, 1, 1, 2), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: olsrGatewayTableSubnet.setStatus('current')
olsrGatewayTableNetmask = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 18, 1, 1, 3), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: olsrGatewayTableNetmask.setStatus('current')
olsrGatewayTableComments = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 18, 1, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32)).clone('none')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: olsrGatewayTableComments.setStatus('current')
olsrGatewayTableActive = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 18, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('enable')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: olsrGatewayTableActive.setStatus('current')
olsrGatewayTableRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 18, 1, 1, 6), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: olsrGatewayTableRowStatus.setStatus('current')
routeTable = MibTable((1, 3, 6, 1, 4, 1, 14125, 1, 2, 10, 1), )
if mibBuilder.loadTexts: routeTable.setStatus('current')
routeTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 14125, 1, 2, 10, 1, 1), ).setIndexNames((0, "ENGENIUS-MESH-MIB", "routeTableIndex"))
if mibBuilder.loadTexts: routeTableEntry.setStatus('current')
routeTableIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 10, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 128)))
if mibBuilder.loadTexts: routeTableIndex.setStatus('current')
routeTableSubnet = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 10, 1, 1, 2), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: routeTableSubnet.setStatus('current')
routeTableNetmask = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 10, 1, 1, 3), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: routeTableNetmask.setStatus('current')
routeTableGateway = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 10, 1, 1, 4), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: routeTableGateway.setStatus('current')
routeTableDevice = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 10, 1, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: routeTableDevice.setStatus('current')
routeTableDirect = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 10, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("direct", 1), ("indirect", 2))).clone('direct')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: routeTableDirect.setStatus('current')
routeTableComments = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 10, 1, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32)).clone('Nil')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: routeTableComments.setStatus('current')
routeTableActive = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 10, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('enable')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: routeTableActive.setStatus('current')
routeTableRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 10, 1, 1, 9), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: routeTableRowStatus.setStatus('current')
ntpActive = MibScalar((1, 3, 6, 1, 4, 1, 14125, 1, 2, 11, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('enable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ntpActive.setStatus('current')
ntpTimezone = MibScalar((1, 3, 6, 1, 4, 1, 14125, 1, 2, 11, 2), DisplayString().clone('337')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ntpTimezone.setStatus('current')
ntpTable = MibTable((1, 3, 6, 1, 4, 1, 14125, 1, 2, 11, 3), )
if mibBuilder.loadTexts: ntpTable.setStatus('current')
ntpTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 14125, 1, 2, 11, 3, 1), ).setIndexNames((0, "ENGENIUS-MESH-MIB", "ntpTableIndex"))
if mibBuilder.loadTexts: ntpTableEntry.setStatus('current')
ntpTableIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 11, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 8)))
if mibBuilder.loadTexts: ntpTableIndex.setStatus('current')
ntpTableServer = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 11, 3, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 32)).clone('Nil')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ntpTableServer.setStatus('current')
ntpTableMinPoll = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 11, 3, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 10))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ntpTableMinPoll.setStatus('current')
ntpTableMaxPoll = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 11, 3, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ntpTableMaxPoll.setStatus('current')
ntpTableComments = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 11, 3, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32)).clone('Nil')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ntpTableComments.setStatus('current')
ntpTableActive = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 11, 3, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('enable')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ntpTableActive.setStatus('current')
ntpTableRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 11, 3, 1, 7), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ntpTableRowStatus.setStatus('current')
dhcpdTable = MibTable((1, 3, 6, 1, 4, 1, 14125, 1, 2, 12, 1), )
if mibBuilder.loadTexts: dhcpdTable.setStatus('current')
dhcpdTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 14125, 1, 2, 12, 1, 1), ).setIndexNames((0, "ENGENIUS-MESH-MIB", "dhcpdTableIndex"))
if mibBuilder.loadTexts: dhcpdTableEntry.setStatus('current')
dhcpdTableIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 12, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 16)))
if mibBuilder.loadTexts: dhcpdTableIndex.setStatus('current')
dhcpdTableIface = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 12, 1, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 32)).clone('Nil')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: dhcpdTableIface.setStatus('current')
dhcpdTableSubnet = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 12, 1, 1, 3), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: dhcpdTableSubnet.setStatus('current')
dhcpdTableNetstart = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 12, 1, 1, 4), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: dhcpdTableNetstart.setStatus('current')
dhcpdTableNetend = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 12, 1, 1, 5), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: dhcpdTableNetend.setStatus('current')
dhcpdTableNetmask = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 12, 1, 1, 6), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: dhcpdTableNetmask.setStatus('current')
dhcpdTableMaxLease = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 12, 1, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(600, 864000))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: dhcpdTableMaxLease.setStatus('current')
dhcpdTableLease = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 12, 1, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(600, 864000))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: dhcpdTableLease.setStatus('current')
dhcpdTableDomain = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 12, 1, 1, 9), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 32)).clone('Nil')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: dhcpdTableDomain.setStatus('current')
dhcpdTableDns = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 12, 1, 1, 10), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: dhcpdTableDns.setStatus('current')
dhcpdTableRouter = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 12, 1, 1, 11), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: dhcpdTableRouter.setStatus('current')
dhcpdTableComments = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 12, 1, 1, 12), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32)).clone('Nil')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: dhcpdTableComments.setStatus('current')
dhcpdTableActive = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 12, 1, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('enable')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: dhcpdTableActive.setStatus('current')
dhcpdTableRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 12, 1, 1, 14), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: dhcpdTableRowStatus.setStatus('current')
dhcpdActive = MibScalar((1, 3, 6, 1, 4, 1, 14125, 1, 2, 12, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('enable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dhcpdActive.setStatus('current')
dhcpClientExecute = MibScalar((1, 3, 6, 1, 4, 1, 14125, 1, 2, 12, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dhcpClientExecute.setStatus('current')
dhcpClientTable = MibTable((1, 3, 6, 1, 4, 1, 14125, 1, 2, 12, 4), )
if mibBuilder.loadTexts: dhcpClientTable.setStatus('current')
dhcpClientTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 14125, 1, 2, 12, 4, 1), ).setIndexNames((0, "ENGENIUS-MESH-MIB", "dhcpClientTableIndex"))
if mibBuilder.loadTexts: dhcpClientTableEntry.setStatus('current')
dhcpClientTableIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 12, 4, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 254)))
if mibBuilder.loadTexts: dhcpClientTableIndex.setStatus('current')
dhcpClientTableIp = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 12, 4, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dhcpClientTableIp.setStatus('current')
dhcpClientTableMac = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 12, 4, 1, 3), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dhcpClientTableMac.setStatus('current')
dhcpClientTableHostname = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 12, 4, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dhcpClientTableHostname.setStatus('current')
dnsActive = MibScalar((1, 3, 6, 1, 4, 1, 14125, 1, 2, 13, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('enable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dnsActive.setStatus('current')
dnsDomainNeeded = MibScalar((1, 3, 6, 1, 4, 1, 14125, 1, 2, 13, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readonly")
if mibBuilder.loadTexts: dnsDomainNeeded.setStatus('current')
dnsBogusPriv = MibScalar((1, 3, 6, 1, 4, 1, 14125, 1, 2, 13, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readonly")
if mibBuilder.loadTexts: dnsBogusPriv.setStatus('current')
dnsFilterWin2k = MibScalar((1, 3, 6, 1, 4, 1, 14125, 1, 2, 13, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('enable')).setMaxAccess("readonly")
if mibBuilder.loadTexts: dnsFilterWin2k.setStatus('current')
dnsStrictOrder = MibScalar((1, 3, 6, 1, 4, 1, 14125, 1, 2, 13, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('enable')).setMaxAccess("readonly")
if mibBuilder.loadTexts: dnsStrictOrder.setStatus('current')
dnsTable = MibTable((1, 3, 6, 1, 4, 1, 14125, 1, 2, 13, 6), )
if mibBuilder.loadTexts: dnsTable.setStatus('current')
dnsTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 14125, 1, 2, 13, 6, 1), ).setIndexNames((0, "ENGENIUS-MESH-MIB", "dnsTableIndex"))
if mibBuilder.loadTexts: dnsTableEntry.setStatus('current')
dnsTableIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 13, 6, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 128)))
if mibBuilder.loadTexts: dnsTableIndex.setStatus('current')
dnsTableDns = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 13, 6, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 32)).clone('Nil')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: dnsTableDns.setStatus('current')
dnsTableIpaddress = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 13, 6, 1, 3), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: dnsTableIpaddress.setStatus('current')
dnsTableComments = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 13, 6, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32)).clone('Nil')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: dnsTableComments.setStatus('current')
dnsTableActive = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 13, 6, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('enable')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: dnsTableActive.setStatus('current')
dnsTableRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 13, 6, 1, 6), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: dnsTableRowStatus.setStatus('current')
topologyTable = MibTable((1, 3, 6, 1, 4, 1, 14125, 1, 2, 14, 1), )
if mibBuilder.loadTexts: topologyTable.setStatus('current')
topologyTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 14125, 1, 2, 14, 1, 1), ).setIndexNames((0, "ENGENIUS-MESH-MIB", "topologyTableIndex"))
if mibBuilder.loadTexts: topologyTableEntry.setStatus('current')
topologyTableIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 14, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4096)))
if mibBuilder.loadTexts: topologyTableIndex.setStatus('current')
topologyTableSource = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 14, 1, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(7, 17))).setMaxAccess("readonly")
if mibBuilder.loadTexts: topologyTableSource.setStatus('current')
topologyTableDestination = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 14, 1, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(7, 17))).setMaxAccess("readonly")
if mibBuilder.loadTexts: topologyTableDestination.setStatus('current')
topologyTableLabel = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 14, 1, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: topologyTableLabel.setStatus('current')
topologyTableStyle = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 14, 1, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: topologyTableStyle.setStatus('current')
firewallActive = MibScalar((1, 3, 6, 1, 4, 1, 14125, 1, 2, 15, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: firewallActive.setStatus('current')
firewallTable = MibTable((1, 3, 6, 1, 4, 1, 14125, 1, 2, 15, 2), )
if mibBuilder.loadTexts: firewallTable.setStatus('current')
firewallTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 14125, 1, 2, 15, 2, 1), ).setIndexNames((0, "ENGENIUS-MESH-MIB", "firewallTableIndex"))
if mibBuilder.loadTexts: firewallTableEntry.setStatus('current')
firewallTableIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 15, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1024)))
if mibBuilder.loadTexts: firewallTableIndex.setStatus('current')
firewallTableTarget = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 15, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("allow", 1), ("deny", 2))).clone('allow')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: firewallTableTarget.setStatus('current')
firewallTableSrcIface = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 15, 2, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 32)).clone('Nil')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: firewallTableSrcIface.setStatus('current')
firewallTableDstIface = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 15, 2, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 32)).clone('Nil')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: firewallTableDstIface.setStatus('current')
firewallTableSrcIp = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 15, 2, 1, 5), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: firewallTableSrcIp.setStatus('current')
firewallTableSrcMask = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 15, 2, 1, 6), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: firewallTableSrcMask.setStatus('current')
firewallTableDstIp = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 15, 2, 1, 7), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: firewallTableDstIp.setStatus('current')
firewallTableDstMask = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 15, 2, 1, 8), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: firewallTableDstMask.setStatus('current')
firewallTableProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 15, 2, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: firewallTableProtocol.setStatus('current')
firewallTableStartPort = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 15, 2, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 65535)).clone(-1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: firewallTableStartPort.setStatus('current')
firewallTableEndPort = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 15, 2, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 65535)).clone(-1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: firewallTableEndPort.setStatus('current')
firewallTableUserGroup = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 15, 2, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 999999)).clone(-1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: firewallTableUserGroup.setStatus('current')
firewallTableComment = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 15, 2, 1, 13), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32)).clone('Nil')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: firewallTableComment.setStatus('current')
firewallTableActive = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 15, 2, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('enable')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: firewallTableActive.setStatus('current')
firewallTableRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 15, 2, 1, 15), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: firewallTableRowStatus.setStatus('current')
macaccessActive = MibScalar((1, 3, 6, 1, 4, 1, 14125, 1, 2, 16, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: macaccessActive.setStatus('current')
macaccessType = MibScalar((1, 3, 6, 1, 4, 1, 14125, 1, 2, 16, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("allow", 1), ("deny", 2))).clone('allow')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: macaccessType.setStatus('current')
macaccessTable = MibTable((1, 3, 6, 1, 4, 1, 14125, 1, 2, 16, 4), )
if mibBuilder.loadTexts: macaccessTable.setStatus('current')
macaccessTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 14125, 1, 2, 16, 4, 1), ).setIndexNames((0, "ENGENIUS-MESH-MIB", "macaccessTableIndex"))
if mibBuilder.loadTexts: macaccessTableEntry.setStatus('current')
macaccessTableIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 16, 4, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1024)))
if mibBuilder.loadTexts: macaccessTableIndex.setStatus('current')
macaccessTableMac = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 16, 4, 1, 2), MacAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: macaccessTableMac.setStatus('current')
macaccessTableType = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 16, 4, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("allow", 1), ("deny", 2))).clone('deny')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: macaccessTableType.setStatus('current')
macaccessTableComment = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 16, 4, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32)).clone('Nil')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: macaccessTableComment.setStatus('current')
macaccessTableActive = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 16, 4, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('enable')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: macaccessTableActive.setStatus('current')
macaccessTableRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 16, 4, 1, 6), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: macaccessTableRowStatus.setStatus('current')
macActiveListExecute = MibScalar((1, 3, 6, 1, 4, 1, 14125, 1, 2, 16, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: macActiveListExecute.setStatus('current')
macActiveTable = MibTable((1, 3, 6, 1, 4, 1, 14125, 1, 2, 16, 5), )
if mibBuilder.loadTexts: macActiveTable.setStatus('current')
macActiveTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 14125, 1, 2, 16, 5, 1), ).setIndexNames((0, "ENGENIUS-MESH-MIB", "macActiveTableIndex"))
if mibBuilder.loadTexts: macActiveTableEntry.setStatus('current')
macActiveTableIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 16, 5, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1024)))
if mibBuilder.loadTexts: macActiveTableIndex.setStatus('current')
macActiveTableMac = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 16, 5, 1, 2), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: macActiveTableMac.setStatus('current')
macActiveTableIp = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 16, 5, 1, 3), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: macActiveTableIp.setStatus('current')
natActive = MibScalar((1, 3, 6, 1, 4, 1, 14125, 1, 2, 17, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: natActive.setStatus('current')
natTable = MibTable((1, 3, 6, 1, 4, 1, 14125, 1, 2, 17, 2), )
if mibBuilder.loadTexts: natTable.setStatus('current')
natTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 14125, 1, 2, 17, 2, 1), ).setIndexNames((0, "ENGENIUS-MESH-MIB", "natTableIndex"))
if mibBuilder.loadTexts: natTableEntry.setStatus('current')
natTableIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 17, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 256)))
if mibBuilder.loadTexts: natTableIndex.setStatus('current')
natTableProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 17, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("tcp", 1), ("udp", 2), ("both", 3))).clone('tcp')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: natTableProtocol.setStatus('current')
natTablePort = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 17, 2, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: natTablePort.setStatus('current')
natTableIp = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 17, 2, 1, 4), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: natTableIp.setStatus('current')
natTableComment = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 17, 2, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32)).clone('Nil')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: natTableComment.setStatus('current')
natTableActive = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 17, 2, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('enable')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: natTableActive.setStatus('current')
natTableRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 17, 2, 1, 7), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: natTableRowStatus.setStatus('current')
shapingActive = MibScalar((1, 3, 6, 1, 4, 1, 14125, 1, 2, 19, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: shapingActive.setStatus('current')
shapingWanRateup = MibScalar((1, 3, 6, 1, 4, 1, 14125, 1, 2, 19, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(5, 100)).clone(100)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: shapingWanRateup.setStatus('current')
shapingWanRatedown = MibScalar((1, 3, 6, 1, 4, 1, 14125, 1, 2, 19, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(5, 100)).clone(100)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: shapingWanRatedown.setStatus('current')
shapingMeshRateup = MibScalar((1, 3, 6, 1, 4, 1, 14125, 1, 2, 19, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)).clone(100)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: shapingMeshRateup.setStatus('current')
shapingMeshRatedown = MibScalar((1, 3, 6, 1, 4, 1, 14125, 1, 2, 19, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)).clone(100)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: shapingMeshRatedown.setStatus('current')
shapingVlanRateup = MibScalar((1, 3, 6, 1, 4, 1, 14125, 1, 2, 19, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)).clone(100)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: shapingVlanRateup.setStatus('current')
shapingVlanRatedown = MibScalar((1, 3, 6, 1, 4, 1, 14125, 1, 2, 19, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)).clone(100)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: shapingVlanRatedown.setStatus('current')
shapingDefaultup = MibScalar((1, 3, 6, 1, 4, 1, 14125, 1, 2, 19, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(32, 65535)).clone(256)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: shapingDefaultup.setStatus('current')
shapingDefaultdown = MibScalar((1, 3, 6, 1, 4, 1, 14125, 1, 2, 19, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(32, 65535)).clone(256)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: shapingDefaultdown.setStatus('current')
shapingTable = MibTable((1, 3, 6, 1, 4, 1, 14125, 1, 2, 19, 10), )
if mibBuilder.loadTexts: shapingTable.setStatus('current')
shapingTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 14125, 1, 2, 19, 10, 1), ).setIndexNames((0, "ENGENIUS-MESH-MIB", "shapingTableIndex"))
if mibBuilder.loadTexts: shapingTableEntry.setStatus('current')
shapingTableIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 19, 10, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1024)))
if mibBuilder.loadTexts: shapingTableIndex.setStatus('current')
shapingTableProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 19, 10, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("tcp", 1), ("udp", 2), ("both", 3))).clone('tcp')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: shapingTableProtocol.setStatus('current')
shapingTablePort = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 19, 10, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: shapingTablePort.setStatus('current')
shapingTableMinsize = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 19, 10, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: shapingTableMinsize.setStatus('current')
shapingTableMaxsize = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 19, 10, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: shapingTableMaxsize.setStatus('current')
shapingTablePriority = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 19, 10, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("background", 1), ("video", 2), ("voice", 3), ("besteffort", 4))).clone('background')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: shapingTablePriority.setStatus('current')
shapingTableComment = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 19, 10, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32)).clone('Nil')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: shapingTableComment.setStatus('current')
shapingTableActive = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 19, 10, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('enable')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: shapingTableActive.setStatus('current')
shapingTableRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 19, 10, 1, 9), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: shapingTableRowStatus.setStatus('current')
pppoeActive = MibScalar((1, 3, 6, 1, 4, 1, 14125, 1, 2, 20, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pppoeActive.setStatus('current')
pppoeUsername = MibScalar((1, 3, 6, 1, 4, 1, 14125, 1, 2, 20, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32)).clone('Nil')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pppoeUsername.setStatus('current')
pppoePassword = MibScalar((1, 3, 6, 1, 4, 1, 14125, 1, 2, 20, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32)).clone('Nil')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pppoePassword.setStatus('current')
pppoeAuthType = MibScalar((1, 3, 6, 1, 4, 1, 14125, 1, 2, 20, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("pap", 1), ("chap", 2))).clone('pap')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pppoeAuthType.setStatus('current')
pppoeUseChap = MibScalar((1, 3, 6, 1, 4, 1, 14125, 1, 2, 20, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pppoeUseChap.setStatus('current')
pppoeChapUsername = MibScalar((1, 3, 6, 1, 4, 1, 14125, 1, 2, 20, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32)).clone('Nil')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pppoeChapUsername.setStatus('current')
pppoeChapPassword = MibScalar((1, 3, 6, 1, 4, 1, 14125, 1, 2, 20, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32)).clone('Nil')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pppoeChapPassword.setStatus('current')
pptpActive = MibScalar((1, 3, 6, 1, 4, 1, 14125, 1, 2, 21, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('enable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pptpActive.setStatus('current')
pptpTable = MibTable((1, 3, 6, 1, 4, 1, 14125, 1, 2, 21, 2), )
if mibBuilder.loadTexts: pptpTable.setStatus('current')
pptpTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 14125, 1, 2, 21, 2, 1), ).setIndexNames((0, "ENGENIUS-MESH-MIB", "pptpTableIndex"))
if mibBuilder.loadTexts: pptpTableEntry.setStatus('current')
pptpTableIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 21, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 10)))
if mibBuilder.loadTexts: pptpTableIndex.setStatus('current')
pptpTableUsername = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 21, 2, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32)).clone('Nil')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: pptpTableUsername.setStatus('current')
pptpTablePassword = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 21, 2, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32)).clone('Nil')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: pptpTablePassword.setStatus('current')
pptpTableIp = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 21, 2, 1, 4), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: pptpTableIp.setStatus('current')
pptpTableComment = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 21, 2, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32)).clone('Nil')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: pptpTableComment.setStatus('current')
pptpTableActive = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 21, 2, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('enable')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: pptpTableActive.setStatus('current')
pptpTableRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 21, 2, 1, 7), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: pptpTableRowStatus.setStatus('current')
pptpServerip = MibScalar((1, 3, 6, 1, 4, 1, 14125, 1, 2, 21, 3), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pptpServerip.setStatus('current')
pptpStartip = MibScalar((1, 3, 6, 1, 4, 1, 14125, 1, 2, 21, 4), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pptpStartip.setStatus('current')
pptpEndip = MibScalar((1, 3, 6, 1, 4, 1, 14125, 1, 2, 21, 5), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pptpEndip.setStatus('current')
tmipdActive = MibScalar((1, 3, 6, 1, 4, 1, 14125, 1, 2, 22, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tmipdActive.setStatus('current')
tmipdNetname = MibScalar((1, 3, 6, 1, 4, 1, 14125, 1, 2, 22, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 32)).clone('Nil')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tmipdNetname.setStatus('current')
tmipdMlrdip = MibScalar((1, 3, 6, 1, 4, 1, 14125, 1, 2, 22, 3), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tmipdMlrdip.setStatus('current')
tmipdVlan = MibScalar((1, 3, 6, 1, 4, 1, 14125, 1, 2, 22, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 32)).clone('vlan0')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tmipdVlan.setStatus('current')
captiveActive = MibScalar((1, 3, 6, 1, 4, 1, 14125, 1, 2, 23, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: captiveActive.setStatus('current')
captiveRedirect = MibScalar((1, 3, 6, 1, 4, 1, 14125, 1, 2, 23, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 512)).clone('Nil')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: captiveRedirect.setStatus('current')
captivePop3push = MibScalar((1, 3, 6, 1, 4, 1, 14125, 1, 2, 23, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('enable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: captivePop3push.setStatus('current')
captiveExternalActive = MibScalar((1, 3, 6, 1, 4, 1, 14125, 1, 2, 23, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: captiveExternalActive.setStatus('current')
captiveExternalServer = MibScalar((1, 3, 6, 1, 4, 1, 14125, 1, 2, 23, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 512)).clone('Nil')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: captiveExternalServer.setStatus('current')
captiveDefaultIdleTimeout = MibScalar((1, 3, 6, 1, 4, 1, 14125, 1, 2, 23, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)).clone(300)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: captiveDefaultIdleTimeout.setStatus('current')
captiveDefaultSessionTimeout = MibScalar((1, 3, 6, 1, 4, 1, 14125, 1, 2, 23, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)).clone(65000)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: captiveDefaultSessionTimeout.setStatus('current')
captiveHttpActive = MibScalar((1, 3, 6, 1, 4, 1, 14125, 1, 2, 23, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('enable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: captiveHttpActive.setStatus('current')
captiveHttpPort = MibScalar((1, 3, 6, 1, 4, 1, 14125, 1, 2, 23, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1000, 65535)).clone(3000)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: captiveHttpPort.setStatus('current')
captiveHttpsActive = MibScalar((1, 3, 6, 1, 4, 1, 14125, 1, 2, 23, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('enable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: captiveHttpsActive.setStatus('current')
captiveHttpsPort = MibScalar((1, 3, 6, 1, 4, 1, 14125, 1, 2, 23, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1000, 65535)).clone(3001)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: captiveHttpsPort.setStatus('current')
captiveWebspaceActive = MibScalar((1, 3, 6, 1, 4, 1, 14125, 1, 2, 23, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('enable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: captiveWebspaceActive.setStatus('current')
captiveWebspacePort = MibScalar((1, 3, 6, 1, 4, 1, 14125, 1, 2, 23, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1000, 65535)).clone(3002)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: captiveWebspacePort.setStatus('current')
captiveDefaultLanguage = MibScalar((1, 3, 6, 1, 4, 1, 14125, 1, 2, 23, 14), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32)).clone('english')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: captiveDefaultLanguage.setStatus('current')
captiveMultipleUsername = MibScalar((1, 3, 6, 1, 4, 1, 14125, 1, 2, 23, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: captiveMultipleUsername.setStatus('current')
captive1xLogin = MibScalar((1, 3, 6, 1, 4, 1, 14125, 1, 2, 23, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('enable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: captive1xLogin.setStatus('current')
radiusclientActive = MibScalar((1, 3, 6, 1, 4, 1, 14125, 1, 2, 24, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('enable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: radiusclientActive.setStatus('current')
radiusclientNasid = MibScalar((1, 3, 6, 1, 4, 1, 14125, 1, 2, 24, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32)).clone('Nil')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: radiusclientNasid.setStatus('current')
radiusclientCalledstationid = MibScalar((1, 3, 6, 1, 4, 1, 14125, 1, 2, 24, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32)).clone('Nil')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: radiusclientCalledstationid.setStatus('current')
radiusclientNasport = MibScalar((1, 3, 6, 1, 4, 1, 14125, 1, 2, 24, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: radiusclientNasport.setStatus('current')
radiusclientNasporttype = MibScalar((1, 3, 6, 1, 4, 1, 14125, 1, 2, 24, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)).clone(19)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: radiusclientNasporttype.setStatus('current')
radiusclientInterimupdate = MibScalar((1, 3, 6, 1, 4, 1, 14125, 1, 2, 24, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)).clone(300)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: radiusclientInterimupdate.setStatus('current')
radiusclientTable = MibTable((1, 3, 6, 1, 4, 1, 14125, 1, 2, 24, 7), )
if mibBuilder.loadTexts: radiusclientTable.setStatus('current')
radiusclientTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 14125, 1, 2, 24, 7, 1), ).setIndexNames((0, "ENGENIUS-MESH-MIB", "radiusclientTableIndex"))
if mibBuilder.loadTexts: radiusclientTableEntry.setStatus('current')
radiusclientTableIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 24, 7, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 8)))
if mibBuilder.loadTexts: radiusclientTableIndex.setStatus('current')
radiusclientTableServername = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 24, 7, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32)).clone('Nil')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: radiusclientTableServername.setStatus('current')
radiusclientTableServertype = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 24, 7, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("authenticate", 1), ("accounting", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: radiusclientTableServertype.setStatus('current')
radiusclientTableServerport = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 24, 7, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: radiusclientTableServerport.setStatus('current')
radiusclientTableServersecret = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 24, 7, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32)).clone('Nil')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: radiusclientTableServersecret.setStatus('current')
radiusclientTableComment = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 24, 7, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32)).clone('Nil')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: radiusclientTableComment.setStatus('current')
radiusclientTableActive = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 24, 7, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('enable')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: radiusclientTableActive.setStatus('current')
radiusclientTableRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 24, 7, 1, 8), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: radiusclientTableRowStatus.setStatus('current')
httpdActive = MibScalar((1, 3, 6, 1, 4, 1, 14125, 1, 2, 25, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('enable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: httpdActive.setStatus('current')
httpdPort = MibScalar((1, 3, 6, 1, 4, 1, 14125, 1, 2, 25, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)).clone(443)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: httpdPort.setStatus('current')
httpdUsername = MibScalar((1, 3, 6, 1, 4, 1, 14125, 1, 2, 25, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32)).clone('admin')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: httpdUsername.setStatus('current')
httpdPassword = MibScalar((1, 3, 6, 1, 4, 1, 14125, 1, 2, 25, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32)).clone('admin')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: httpdPassword.setStatus('current')
httpdAccessctrl = MibScalar((1, 3, 6, 1, 4, 1, 14125, 1, 2, 25, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('enable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: httpdAccessctrl.setStatus('current')
httpdTable = MibTable((1, 3, 6, 1, 4, 1, 14125, 1, 2, 25, 6), )
if mibBuilder.loadTexts: httpdTable.setStatus('current')
httpdTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 14125, 1, 2, 25, 6, 1), ).setIndexNames((0, "ENGENIUS-MESH-MIB", "httpdTableIndex"))
if mibBuilder.loadTexts: httpdTableEntry.setStatus('current')
httpdTableIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 25, 6, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 64)))
if mibBuilder.loadTexts: httpdTableIndex.setStatus('current')
httpdTableDevice = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 25, 6, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 32)).clone('Nil')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: httpdTableDevice.setStatus('current')
httpdTableSubnet = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 25, 6, 1, 3), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: httpdTableSubnet.setStatus('current')
httpdTableNetmask = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 25, 6, 1, 4), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: httpdTableNetmask.setStatus('current')
httpdTableDevnet = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 25, 6, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("device", 1), ("network", 2))).clone('device')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: httpdTableDevnet.setStatus('current')
httpdTableComment = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 25, 6, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32)).clone('Nil')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: httpdTableComment.setStatus('current')
httpdTableActive = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 25, 6, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('enable')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: httpdTableActive.setStatus('current')
httpdTableRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 25, 6, 1, 8), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: httpdTableRowStatus.setStatus('current')
httpdCertPassword = MibScalar((1, 3, 6, 1, 4, 1, 14125, 1, 2, 25, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32)).clone('httpconf')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: httpdCertPassword.setStatus('current')
snmpdActive = MibScalar((1, 3, 6, 1, 4, 1, 14125, 1, 2, 26, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('enable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snmpdActive.setStatus('current')
snmpdVersion = MibScalar((1, 3, 6, 1, 4, 1, 14125, 1, 2, 26, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("v1o2c", 1), ("v3", 2), ("all", 3))).clone('v1o2c')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snmpdVersion.setStatus('current')
snmpdPort = MibScalar((1, 3, 6, 1, 4, 1, 14125, 1, 2, 26, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)).clone(161)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snmpdPort.setStatus('current')
snmpdReadcommunity = MibScalar((1, 3, 6, 1, 4, 1, 14125, 1, 2, 26, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(4, 32)).clone('public')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snmpdReadcommunity.setStatus('current')
snmpdWritecommunity = MibScalar((1, 3, 6, 1, 4, 1, 14125, 1, 2, 26, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(4, 32)).clone('private')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snmpdWritecommunity.setStatus('current')
snmpdReadusername = MibScalar((1, 3, 6, 1, 4, 1, 14125, 1, 2, 26, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(8, 50)).clone('snmpv3rouser')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snmpdReadusername.setStatus('current')
snmpdWriteusername = MibScalar((1, 3, 6, 1, 4, 1, 14125, 1, 2, 26, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(8, 50)).clone('snmpv3rwuser')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snmpdWriteusername.setStatus('current')
snmpdPassword = MibScalar((1, 3, 6, 1, 4, 1, 14125, 1, 2, 26, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(8, 50)).clone('snmpv3password')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snmpdPassword.setStatus('current')
snmpdPassphrase = MibScalar((1, 3, 6, 1, 4, 1, 14125, 1, 2, 26, 9), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(8, 50)).clone('snmpv3passphrase')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snmpdPassphrase.setStatus('current')
snmpdAccessctrl = MibScalar((1, 3, 6, 1, 4, 1, 14125, 1, 2, 26, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('enable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snmpdAccessctrl.setStatus('current')
snmpdTable = MibTable((1, 3, 6, 1, 4, 1, 14125, 1, 2, 26, 11), )
if mibBuilder.loadTexts: snmpdTable.setStatus('current')
snmpdTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 14125, 1, 2, 26, 11, 1), ).setIndexNames((0, "ENGENIUS-MESH-MIB", "snmpdTableIndex"))
if mibBuilder.loadTexts: snmpdTableEntry.setStatus('current')
snmpdTableIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 26, 11, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 64)))
if mibBuilder.loadTexts: snmpdTableIndex.setStatus('current')
snmpdTableDevice = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 26, 11, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 32)).clone('Nil')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: snmpdTableDevice.setStatus('current')
snmpdTableSubnet = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 26, 11, 1, 3), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: snmpdTableSubnet.setStatus('current')
snmpdTableNetmask = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 26, 11, 1, 4), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: snmpdTableNetmask.setStatus('current')
snmpdTableDevnet = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 26, 11, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("device", 1), ("network", 2))).clone('device')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: snmpdTableDevnet.setStatus('current')
snmpdTableComment = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 26, 11, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32)).clone('Nil')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: snmpdTableComment.setStatus('current')
snmpdTableActive = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 26, 11, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('enable')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: snmpdTableActive.setStatus('current')
snmpdTableRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 26, 11, 1, 8), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: snmpdTableRowStatus.setStatus('current')
trapActive = MibScalar((1, 3, 6, 1, 4, 1, 14125, 1, 2, 27, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: trapActive.setStatus('current')
trapConfiguration = MibScalar((1, 3, 6, 1, 4, 1, 14125, 1, 2, 27, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('enable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: trapConfiguration.setStatus('current')
trapSecurity = MibScalar((1, 3, 6, 1, 4, 1, 14125, 1, 2, 27, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('enable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: trapSecurity.setStatus('current')
trapWireless = MibScalar((1, 3, 6, 1, 4, 1, 14125, 1, 2, 27, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('enable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: trapWireless.setStatus('current')
trapOperational = MibScalar((1, 3, 6, 1, 4, 1, 14125, 1, 2, 27, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('enable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: trapOperational.setStatus('current')
trapFlash = MibScalar((1, 3, 6, 1, 4, 1, 14125, 1, 2, 27, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('enable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: trapFlash.setStatus('current')
trapTftp = MibScalar((1, 3, 6, 1, 4, 1, 14125, 1, 2, 27, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('enable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: trapTftp.setStatus('current')
trapImage = MibScalar((1, 3, 6, 1, 4, 1, 14125, 1, 2, 27, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('enable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: trapImage.setStatus('current')
trapAuthentication = MibScalar((1, 3, 6, 1, 4, 1, 14125, 1, 2, 27, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('enable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: trapAuthentication.setStatus('current')
trapTable = MibTable((1, 3, 6, 1, 4, 1, 14125, 1, 2, 27, 10), )
if mibBuilder.loadTexts: trapTable.setStatus('current')
trapTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 14125, 1, 2, 27, 10, 1), ).setIndexNames((0, "ENGENIUS-MESH-MIB", "trapTableIndex"))
if mibBuilder.loadTexts: trapTableEntry.setStatus('current')
trapTableIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 27, 10, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 8)))
if mibBuilder.loadTexts: trapTableIndex.setStatus('current')
trapTableIp = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 27, 10, 1, 2), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: trapTableIp.setStatus('current')
trapTableCommunity = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 27, 10, 1, 3), DisplayString().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(4, 32), )).clone('Nil')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: trapTableCommunity.setStatus('current')
trapTableUsername = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 27, 10, 1, 4), DisplayString().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(8, 50), )).clone('Nil')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: trapTableUsername.setStatus('current')
trapTableAuthpasswd = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 27, 10, 1, 5), DisplayString().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(8, 50), )).clone('Nil')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: trapTableAuthpasswd.setStatus('current')
trapTablePrivpasswd = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 27, 10, 1, 6), DisplayString().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(8, 50), )).clone('Nil')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: trapTablePrivpasswd.setStatus('current')
trapTableVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 27, 10, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("version2c", 1), ("version3", 2))).clone('version2c')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: trapTableVersion.setStatus('current')
trapTableComment = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 27, 10, 1, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32)).clone('Nil')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: trapTableComment.setStatus('current')
trapTableActive = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 27, 10, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('enable')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: trapTableActive.setStatus('current')
trapTableRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 27, 10, 1, 10), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: trapTableRowStatus.setStatus('current')
ddnsActive = MibScalar((1, 3, 6, 1, 4, 1, 14125, 1, 2, 28, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('enable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ddnsActive.setStatus('current')
ddnsServer = MibScalar((1, 3, 6, 1, 4, 1, 14125, 1, 2, 28, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("dyndns", 1), ("easydns", 2), ("no-ip", 3), ("zoneedit", 4), ("tzo", 5))).clone('dyndns')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ddnsServer.setStatus('current')
ddnsHostname = MibScalar((1, 3, 6, 1, 4, 1, 14125, 1, 2, 28, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 512)).clone('Nil')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ddnsHostname.setStatus('current')
ddnsUsername = MibScalar((1, 3, 6, 1, 4, 1, 14125, 1, 2, 28, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32)).clone('Nil')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ddnsUsername.setStatus('current')
ddnsPassword = MibScalar((1, 3, 6, 1, 4, 1, 14125, 1, 2, 28, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32)).clone('Nil')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ddnsPassword.setStatus('current')
zeroconfigActive = MibScalar((1, 3, 6, 1, 4, 1, 14125, 1, 2, 29, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zeroconfigActive.setStatus('current')
zeroconfigProxyActive = MibScalar((1, 3, 6, 1, 4, 1, 14125, 1, 2, 29, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('enable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zeroconfigProxyActive.setStatus('current')
zeroconfigProxyport = MibScalar((1, 3, 6, 1, 4, 1, 14125, 1, 2, 29, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1000, 65535)).clone(8080)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zeroconfigProxyport.setStatus('current')
zeroconfigStaticipActive = MibScalar((1, 3, 6, 1, 4, 1, 14125, 1, 2, 29, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('enable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zeroconfigStaticipActive.setStatus('current')
signallevelExecute = MibScalar((1, 3, 6, 1, 4, 1, 14125, 1, 2, 30, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: signallevelExecute.setStatus('current')
signallevelTable = MibTable((1, 3, 6, 1, 4, 1, 14125, 1, 2, 30, 2), )
if mibBuilder.loadTexts: signallevelTable.setStatus('current')
signallevelTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 14125, 1, 2, 30, 2, 1), ).setIndexNames((0, "ENGENIUS-MESH-MIB", "signallevelTableIndex"))
if mibBuilder.loadTexts: signallevelTableEntry.setStatus('current')
signallevelTableIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 30, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 32)))
if mibBuilder.loadTexts: signallevelTableIndex.setStatus('current')
signallevelTableSource = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 30, 2, 1, 2), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: signallevelTableSource.setStatus('current')
signallevelTableDestination = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 30, 2, 1, 3), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: signallevelTableDestination.setStatus('current')
signallevelTableRssi = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 30, 2, 1, 4), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: signallevelTableRssi.setStatus('current')
clientInfoTable = MibTable((1, 3, 6, 1, 4, 1, 14125, 1, 2, 30, 3), )
if mibBuilder.loadTexts: clientInfoTable.setStatus('current')
clientInfoTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 14125, 1, 2, 30, 3, 1), ).setIndexNames((0, "ENGENIUS-MESH-MIB", "clientInfoTableIndex"))
if mibBuilder.loadTexts: clientInfoTableEntry.setStatus('current')
clientInfoTableIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 30, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4096)))
if mibBuilder.loadTexts: clientInfoTableIndex.setStatus('current')
clientInfoTableEssid = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 30, 3, 1, 2), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: clientInfoTableEssid.setStatus('current')
clientInfoTableMac = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 30, 3, 1, 3), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: clientInfoTableMac.setStatus('current')
clientInfoTableChannel = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 30, 3, 1, 4), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: clientInfoTableChannel.setStatus('current')
clientInfoTableRate = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 30, 3, 1, 5), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: clientInfoTableRate.setStatus('current')
clientInfoTableRssi = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 30, 3, 1, 6), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: clientInfoTableRssi.setStatus('current')
clientInfoTableIdletime = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 30, 3, 1, 7), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: clientInfoTableIdletime.setStatus('current')
clientStatTable = MibTable((1, 3, 6, 1, 4, 1, 14125, 1, 2, 30, 4), )
if mibBuilder.loadTexts: clientStatTable.setStatus('current')
clientStatTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 14125, 1, 2, 30, 4, 1), ).setIndexNames((0, "ENGENIUS-MESH-MIB", "clientStatTableIndex"))
if mibBuilder.loadTexts: clientStatTableEntry.setStatus('current')
clientStatTableIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 30, 4, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 512)))
if mibBuilder.loadTexts: clientStatTableIndex.setStatus('current')
clientStatTableIp = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 30, 4, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: clientStatTableIp.setStatus('current')
clientStatTableMac = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 30, 4, 1, 3), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: clientStatTableMac.setStatus('current')
clientStatTableTx = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 30, 4, 1, 4), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: clientStatTableTx.setStatus('current')
clientStatTableRx = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 30, 4, 1, 5), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: clientStatTableRx.setStatus('current')
clientStatTableTxPkt = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 30, 4, 1, 6), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: clientStatTableTxPkt.setStatus('current')
clientStatTableRxPkt = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 30, 4, 1, 7), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: clientStatTableRxPkt.setStatus('current')
clientStatTableOnlinetime = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 30, 4, 1, 8), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: clientStatTableOnlinetime.setStatus('current')
ipsecActive = MibScalar((1, 3, 6, 1, 4, 1, 14125, 1, 2, 31, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('enable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipsecActive.setStatus('current')
ipsecType = MibScalar((1, 3, 6, 1, 4, 1, 14125, 1, 2, 31, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("x509", 1), ("rsa", 2), ("psk", 3))).clone('x509')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipsecType.setStatus('current')
ipsecLocalId = MibScalar((1, 3, 6, 1, 4, 1, 14125, 1, 2, 31, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 64)).clone('Nil')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipsecLocalId.setStatus('current')
ipsecRemoteId = MibScalar((1, 3, 6, 1, 4, 1, 14125, 1, 2, 31, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 64)).clone('Nil')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipsecRemoteId.setStatus('current')
ipsecRemoteIp = MibScalar((1, 3, 6, 1, 4, 1, 14125, 1, 2, 31, 5), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipsecRemoteIp.setStatus('current')
ipsecRemoteSubnet = MibScalar((1, 3, 6, 1, 4, 1, 14125, 1, 2, 31, 6), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipsecRemoteSubnet.setStatus('current')
ipsecRemoteNetmask = MibScalar((1, 3, 6, 1, 4, 1, 14125, 1, 2, 31, 7), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipsecRemoteNetmask.setStatus('current')
ipsecLocalCertpass = MibScalar((1, 3, 6, 1, 4, 1, 14125, 1, 2, 31, 8), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 128)).clone('Nil')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipsecLocalCertpass.setStatus('current')
ipsecLocalRsa = MibScalar((1, 3, 6, 1, 4, 1, 14125, 1, 2, 31, 9), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 1024)).clone('Nil')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipsecLocalRsa.setStatus('current')
ipsecRemoteRsa = MibScalar((1, 3, 6, 1, 4, 1, 14125, 1, 2, 31, 10), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 1024)).clone('Nil')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipsecRemoteRsa.setStatus('current')
ipsecPsk = MibScalar((1, 3, 6, 1, 4, 1, 14125, 1, 2, 31, 11), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 1024)).clone('Nil')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipsecPsk.setStatus('current')
l2tpcActive = MibScalar((1, 3, 6, 1, 4, 1, 14125, 1, 2, 32, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('enable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: l2tpcActive.setStatus('current')
l2tpcLns = MibScalar((1, 3, 6, 1, 4, 1, 14125, 1, 2, 32, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 128)).clone('Nil')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: l2tpcLns.setStatus('current')
l2tpcUsername = MibScalar((1, 3, 6, 1, 4, 1, 14125, 1, 2, 32, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 128)).clone('Nil')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: l2tpcUsername.setStatus('current')
l2tpcSecret = MibScalar((1, 3, 6, 1, 4, 1, 14125, 1, 2, 32, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 128)).clone('Nil')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: l2tpcSecret.setStatus('current')
autoipActive = MibScalar((1, 3, 6, 1, 4, 1, 14125, 1, 2, 33, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('enable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: autoipActive.setStatus('current')
autoipMeship = MibScalar((1, 3, 6, 1, 4, 1, 14125, 1, 2, 33, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255)).clone(10)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: autoipMeship.setStatus('current')
autoipVlanip = MibScalar((1, 3, 6, 1, 4, 1, 14125, 1, 2, 33, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255)).clone(172)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: autoipVlanip.setStatus('current')
interfacesTable = MibTable((1, 3, 6, 1, 4, 1, 14125, 1, 2, 34, 1), )
if mibBuilder.loadTexts: interfacesTable.setStatus('current')
interfacesTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 14125, 1, 2, 34, 1, 1), ).setIndexNames((0, "ENGENIUS-MESH-MIB", "interfacesTableIndex"))
if mibBuilder.loadTexts: interfacesTableEntry.setStatus('current')
interfacesTableIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 34, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 64)))
if mibBuilder.loadTexts: interfacesTableIndex.setStatus('current')
interfacesTableDev = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 34, 1, 1, 2), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: interfacesTableDev.setStatus('current')
interfacesTableLabel = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 34, 1, 1, 3), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: interfacesTableLabel.setStatus('current')
mlrdActive = MibScalar((1, 3, 6, 1, 4, 1, 14125, 1, 2, 35, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('enable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mlrdActive.setStatus('current')
mlrdNetname = MibScalar((1, 3, 6, 1, 4, 1, 14125, 1, 2, 35, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 32)).clone('Nil')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mlrdNetname.setStatus('current')
mlrdBackupActive = MibScalar((1, 3, 6, 1, 4, 1, 14125, 1, 2, 35, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mlrdBackupActive.setStatus('current')
mlrdRole = MibScalar((1, 3, 6, 1, 4, 1, 14125, 1, 2, 35, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("primary", 1), ("backup", 2))).clone('primary')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mlrdRole.setStatus('current')
mlrdPeer = MibScalar((1, 3, 6, 1, 4, 1, 14125, 1, 2, 35, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 128)).clone('Nil')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mlrdPeer.setStatus('current')
mlrdBackupInterval = MibScalar((1, 3, 6, 1, 4, 1, 14125, 1, 2, 35, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(2, 9999)).clone(5)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mlrdBackupInterval.setStatus('current')
mlrdStaticActive = MibScalar((1, 3, 6, 1, 4, 1, 14125, 1, 2, 35, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mlrdStaticActive.setStatus('current')
mlrdTable = MibTable((1, 3, 6, 1, 4, 1, 14125, 1, 2, 35, 8), )
if mibBuilder.loadTexts: mlrdTable.setStatus('current')
mlrdTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 14125, 1, 2, 35, 8, 1), ).setIndexNames((0, "ENGENIUS-MESH-MIB", "mlrdTableIndex"))
if mibBuilder.loadTexts: mlrdTableEntry.setStatus('current')
mlrdTableIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 35, 8, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 8)))
if mibBuilder.loadTexts: mlrdTableIndex.setStatus('current')
mlrdTableMac = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 35, 8, 1, 2), MacAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: mlrdTableMac.setStatus('current')
mlrdTableIp = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 35, 8, 1, 3), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: mlrdTableIp.setStatus('current')
mlrdTableParent = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 35, 8, 1, 4), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: mlrdTableParent.setStatus('current')
mlrdTableDefaultRoute = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 35, 8, 1, 5), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: mlrdTableDefaultRoute.setStatus('current')
mlrdTableComment = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 35, 8, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32)).clone('Nil')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: mlrdTableComment.setStatus('current')
mlrdTableActive = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 35, 8, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('enable')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: mlrdTableActive.setStatus('current')
mlrdTableRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 35, 8, 1, 8), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: mlrdTableRowStatus.setStatus('current')
routedogActive = MibScalar((1, 3, 6, 1, 4, 1, 14125, 1, 2, 36, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('enable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: routedogActive.setStatus('current')
routedogSsid = MibScalar((1, 3, 6, 1, 4, 1, 14125, 1, 2, 36, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32)).clone('ServiceDown')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: routedogSsid.setStatus('current')
routedogInterval = MibScalar((1, 3, 6, 1, 4, 1, 14125, 1, 2, 36, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(10, 60)).clone(30)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: routedogInterval.setStatus('current')
routedogReboot = MibScalar((1, 3, 6, 1, 4, 1, 14125, 1, 2, 36, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: routedogReboot.setStatus('current')
routedogIntervaCount = MibScalar((1, 3, 6, 1, 4, 1, 14125, 1, 2, 36, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255)).clone(10)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: routedogIntervaCount.setStatus('current')
linuxdogActive = MibScalar((1, 3, 6, 1, 4, 1, 14125, 1, 2, 37, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('enable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: linuxdogActive.setStatus('current')
linuxdogInterval = MibScalar((1, 3, 6, 1, 4, 1, 14125, 1, 2, 37, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(10, 60)).clone(60)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: linuxdogInterval.setStatus('current')
advTunningConntrackMax = MibScalar((1, 3, 6, 1, 4, 1, 14125, 1, 2, 38, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(4096, 212368)).clone(212368)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: advTunningConntrackMax.setStatus('current')
advTunningConntrackGenericTimeout = MibScalar((1, 3, 6, 1, 4, 1, 14125, 1, 2, 38, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(50, 1200)).clone(600)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: advTunningConntrackGenericTimeout.setStatus('current')
advTunningConntrackIcmpTimeout = MibScalar((1, 3, 6, 1, 4, 1, 14125, 1, 2, 38, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(10, 60)).clone(30)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: advTunningConntrackIcmpTimeout.setStatus('current')
advTunningConntrackTcpcloseTimeout = MibScalar((1, 3, 6, 1, 4, 1, 14125, 1, 2, 38, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(5, 30)).clone(10)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: advTunningConntrackTcpcloseTimeout.setStatus('current')
advTunningConntrackTcpclosewaitTimeout = MibScalar((1, 3, 6, 1, 4, 1, 14125, 1, 2, 38, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(10, 120)).clone(60)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: advTunningConntrackTcpclosewaitTimeout.setStatus('current')
advTunningConntrackTcpestablishTimeout = MibScalar((1, 3, 6, 1, 4, 1, 14125, 1, 2, 38, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(600, 864000)).clone(3600)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: advTunningConntrackTcpestablishTimeout.setStatus('current')
advTunningConntrackTcpfinwaitTimeout = MibScalar((1, 3, 6, 1, 4, 1, 14125, 1, 2, 38, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(10, 3600)).clone(120)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: advTunningConntrackTcpfinwaitTimeout.setStatus('current')
advTunningConntrackTcplastackTimeout = MibScalar((1, 3, 6, 1, 4, 1, 14125, 1, 2, 38, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(10, 60)).clone(30)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: advTunningConntrackTcplastackTimeout.setStatus('current')
advTunningConntrackTcpsynrecvTimeout = MibScalar((1, 3, 6, 1, 4, 1, 14125, 1, 2, 38, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(10, 120)).clone(60)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: advTunningConntrackTcpsynrecvTimeout.setStatus('current')
advTunningConntrackTcpsynsentTimeout = MibScalar((1, 3, 6, 1, 4, 1, 14125, 1, 2, 38, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(10, 240)).clone(120)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: advTunningConntrackTcpsynsentTimeout.setStatus('current')
advTunningConntrackTcptimewaitTimeout = MibScalar((1, 3, 6, 1, 4, 1, 14125, 1, 2, 38, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(10, 240)).clone(120)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: advTunningConntrackTcptimewaitTimeout.setStatus('current')
advTunningConntrackUdpTimeout = MibScalar((1, 3, 6, 1, 4, 1, 14125, 1, 2, 38, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(10, 60)).clone(30)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: advTunningConntrackUdpTimeout.setStatus('current')
advTunningConntrackUdpstreamTimeout = MibScalar((1, 3, 6, 1, 4, 1, 14125, 1, 2, 38, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(10, 360)).clone(180)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: advTunningConntrackUdpstreamTimeout.setStatus('current')
advTunningWirelessRadio0Distance = MibScalar((1, 3, 6, 1, 4, 1, 14125, 1, 2, 38, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(100, 10000)).clone(400)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: advTunningWirelessRadio0Distance.setStatus('current')
advTunningWirelessRadio1Distance = MibScalar((1, 3, 6, 1, 4, 1, 14125, 1, 2, 38, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(100, 10000)).clone(400)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: advTunningWirelessRadio1Distance.setStatus('current')
advTunningWirelessRadio2Distance = MibScalar((1, 3, 6, 1, 4, 1, 14125, 1, 2, 38, 16), Integer32().subtype(subtypeSpec=ValueRangeConstraint(100, 10000)).clone(400)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: advTunningWirelessRadio2Distance.setStatus('current')
advTunningWirelessRadio3Distance = MibScalar((1, 3, 6, 1, 4, 1, 14125, 1, 2, 38, 17), Integer32().subtype(subtypeSpec=ValueRangeConstraint(100, 10000)).clone(400)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: advTunningWirelessRadio3Distance.setStatus('current')
advTunningWirelessRegionDomain = MibScalar((1, 3, 6, 1, 4, 1, 14125, 1, 2, 38, 18), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 9999)).clone(10)).setMaxAccess("readonly")
if mibBuilder.loadTexts: advTunningWirelessRegionDomain.setStatus('current')
advTunningWirelessCountry = MibScalar((1, 3, 6, 1, 4, 1, 14125, 1, 2, 38, 19), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 9999)).clone(840)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: advTunningWirelessCountry.setStatus('current')
advTunningWirelessOutdoor = MibScalar((1, 3, 6, 1, 4, 1, 14125, 1, 2, 38, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('enable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: advTunningWirelessOutdoor.setStatus('current')
advTunningWirelessXChannel = MibScalar((1, 3, 6, 1, 4, 1, 14125, 1, 2, 38, 21), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: advTunningWirelessXChannel.setStatus('current')
sshdActive = MibScalar((1, 3, 6, 1, 4, 1, 14125, 1, 2, 39, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('enable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sshdActive.setStatus('current')
sshdPort = MibScalar((1, 3, 6, 1, 4, 1, 14125, 1, 2, 39, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)).clone(22)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sshdPort.setStatus('current')
wmeTable = MibTable((1, 3, 6, 1, 4, 1, 14125, 1, 2, 40, 1), )
if mibBuilder.loadTexts: wmeTable.setStatus('current')
wmeTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 14125, 1, 2, 40, 1, 1), ).setIndexNames((0, "ENGENIUS-MESH-MIB", "wmeTableIndex"))
if mibBuilder.loadTexts: wmeTableEntry.setStatus('current')
wmeTableIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 40, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 16)))
if mibBuilder.loadTexts: wmeTableIndex.setStatus('current')
wmeTableName = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 40, 1, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 32)).clone('Nil')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wmeTableName.setStatus('current')
wmeTableCwminBe = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 40, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255)).clone(4)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wmeTableCwminBe.setStatus('current')
wmeTableCwminBk = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 40, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255)).clone(4)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wmeTableCwminBk.setStatus('current')
wmeTableCwminVi = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 40, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255)).clone(3)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wmeTableCwminVi.setStatus('current')
wmeTableCwminVo = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 40, 1, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255)).clone(2)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wmeTableCwminVo.setStatus('current')
wmeTableBssCwminBe = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 40, 1, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255)).clone(4)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wmeTableBssCwminBe.setStatus('current')
wmeTableBssCwminBk = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 40, 1, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255)).clone(4)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wmeTableBssCwminBk.setStatus('current')
wmeTableBssCwminVi = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 40, 1, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255)).clone(3)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wmeTableBssCwminVi.setStatus('current')
wmeTableBssCwminVo = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 40, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255)).clone(2)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wmeTableBssCwminVo.setStatus('current')
wmeTableCwmaxBe = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 40, 1, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255)).clone(6)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wmeTableCwmaxBe.setStatus('current')
wmeTableCwmaxBk = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 40, 1, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255)).clone(10)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wmeTableCwmaxBk.setStatus('current')
wmeTableCwmaxVi = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 40, 1, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255)).clone(4)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wmeTableCwmaxVi.setStatus('current')
wmeTableCwmaxVo = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 40, 1, 1, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255)).clone(3)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wmeTableCwmaxVo.setStatus('current')
wmeTableBssCwmaxBe = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 40, 1, 1, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255)).clone(10)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wmeTableBssCwmaxBe.setStatus('current')
wmeTableBssCwmaxBk = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 40, 1, 1, 16), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255)).clone(10)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wmeTableBssCwmaxBk.setStatus('current')
wmeTableBssCwmaxVi = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 40, 1, 1, 17), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255)).clone(4)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wmeTableBssCwmaxVi.setStatus('current')
wmeTableBssCwmaxVo = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 40, 1, 1, 18), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255)).clone(3)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wmeTableBssCwmaxVo.setStatus('current')
wmeTableAifsnBe = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 40, 1, 1, 19), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255)).clone(3)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wmeTableAifsnBe.setStatus('current')
wmeTableAifsnBk = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 40, 1, 1, 20), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255)).clone(7)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wmeTableAifsnBk.setStatus('current')
wmeTableAifsnVi = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 40, 1, 1, 21), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255)).clone(1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wmeTableAifsnVi.setStatus('current')
wmeTableAifsnVo = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 40, 1, 1, 22), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255)).clone(1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wmeTableAifsnVo.setStatus('current')
wmeTableBssAifsnBe = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 40, 1, 1, 23), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255)).clone(3)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wmeTableBssAifsnBe.setStatus('current')
wmeTableBssAifsnBk = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 40, 1, 1, 24), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255)).clone(7)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wmeTableBssAifsnBk.setStatus('current')
wmeTableBssAifsnVi = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 40, 1, 1, 25), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255)).clone(2)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wmeTableBssAifsnVi.setStatus('current')
wmeTableBssAifsnVo = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 40, 1, 1, 26), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255)).clone(2)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wmeTableBssAifsnVo.setStatus('current')
wmeTableTxoplimitBe = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 40, 1, 1, 27), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wmeTableTxoplimitBe.setStatus('current')
wmeTableTxoplimitBk = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 40, 1, 1, 28), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wmeTableTxoplimitBk.setStatus('current')
wmeTableTxoplimitVi = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 40, 1, 1, 29), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)).clone(3008)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wmeTableTxoplimitVi.setStatus('current')
wmeTableTxoplimitVo = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 40, 1, 1, 30), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)).clone(1504)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wmeTableTxoplimitVo.setStatus('current')
wmeTableBssTxoplimitBe = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 40, 1, 1, 31), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wmeTableBssTxoplimitBe.setStatus('current')
wmeTableBssTxoplimitBk = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 40, 1, 1, 32), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wmeTableBssTxoplimitBk.setStatus('current')
wmeTableBssTxoplimitVi = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 40, 1, 1, 33), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)).clone(3008)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wmeTableBssTxoplimitVi.setStatus('current')
wmeTableBssTxoplimitVo = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 40, 1, 1, 34), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)).clone(1504)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wmeTableBssTxoplimitVo.setStatus('current')
wmeTableAcmBe = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 40, 1, 1, 35), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wmeTableAcmBe.setStatus('current')
wmeTableAcmBk = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 40, 1, 1, 36), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wmeTableAcmBk.setStatus('current')
wmeTableAcmVi = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 40, 1, 1, 37), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wmeTableAcmVi.setStatus('current')
wmeTableAcmVo = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 40, 1, 1, 38), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wmeTableAcmVo.setStatus('current')
wmeTableNoackpolicyBe = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 40, 1, 1, 39), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wmeTableNoackpolicyBe.setStatus('current')
wmeTableNoackpolicyBk = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 40, 1, 1, 40), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wmeTableNoackpolicyBk.setStatus('current')
wmeTableNoackpolicyVi = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 40, 1, 1, 41), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wmeTableNoackpolicyVi.setStatus('current')
wmeTableNoackpolicyVo = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 40, 1, 1, 42), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wmeTableNoackpolicyVo.setStatus('current')
wmeTableComment = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 40, 1, 1, 43), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32)).clone('Nil')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wmeTableComment.setStatus('current')
wmeTableActive = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 40, 1, 1, 44), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('enable')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wmeTableActive.setStatus('current')
wmeTableRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 40, 1, 1, 45), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wmeTableRowStatus.setStatus('current')
tm75Active = MibScalar((1, 3, 6, 1, 4, 1, 14125, 1, 2, 41, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('enable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tm75Active.setStatus('current')
tm75Resolution = MibScalar((1, 3, 6, 1, 4, 1, 14125, 1, 2, 41, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("pt5c", 0), ("pt25c", 1), ("pt125c", 2), ("pt0625c", 3))).clone('pt5c')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tm75Resolution.setStatus('current')
tm75Temperature = MibScalar((1, 3, 6, 1, 4, 1, 14125, 1, 2, 41, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 512)).clone('X')).setMaxAccess("readonly")
if mibBuilder.loadTexts: tm75Temperature.setStatus('current')
nmsAddressTable = MibTable((1, 3, 6, 1, 4, 1, 14125, 1, 2, 42, 1), )
if mibBuilder.loadTexts: nmsAddressTable.setStatus('current')
nmsAddressTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 14125, 1, 2, 42, 1, 1), ).setIndexNames((0, "ENGENIUS-MESH-MIB", "nmsAddressTableIndex"))
if mibBuilder.loadTexts: nmsAddressTableEntry.setStatus('current')
nmsAddressTableIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 42, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 128)))
if mibBuilder.loadTexts: nmsAddressTableIndex.setStatus('current')
nmsAddressTableAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 42, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255)).clone('Nil')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: nmsAddressTableAddress.setStatus('current')
nmsAddressTablePort = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 42, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)).clone(80)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: nmsAddressTablePort.setStatus('current')
nmsAddressTableInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 42, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(60, 300000))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: nmsAddressTableInterval.setStatus('current')
nmsAddressTableComment = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 42, 1, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32)).clone('Nil')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: nmsAddressTableComment.setStatus('current')
nmsAddressTableActive = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 42, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('enable')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: nmsAddressTableActive.setStatus('current')
nmsAddressTableRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 42, 1, 1, 7), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: nmsAddressTableRowStatus.setStatus('current')
userDbUsername = MibScalar((1, 3, 6, 1, 4, 1, 14125, 1, 2, 43, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: userDbUsername.setStatus('current')
userDbPassword = MibScalar((1, 3, 6, 1, 4, 1, 14125, 1, 2, 43, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: userDbPassword.setStatus('current')
userDbGroupid = MibScalar((1, 3, 6, 1, 4, 1, 14125, 1, 2, 43, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: userDbGroupid.setStatus('current')
userDbAddCmd = MibScalar((1, 3, 6, 1, 4, 1, 14125, 1, 2, 43, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: userDbAddCmd.setStatus('current')
userDbEditCmd = MibScalar((1, 3, 6, 1, 4, 1, 14125, 1, 2, 43, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: userDbEditCmd.setStatus('current')
userDbDelCmd = MibScalar((1, 3, 6, 1, 4, 1, 14125, 1, 2, 43, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 999999))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: userDbDelCmd.setStatus('current')
userDbTable = MibTable((1, 3, 6, 1, 4, 1, 14125, 1, 2, 43, 7), )
if mibBuilder.loadTexts: userDbTable.setStatus('current')
userDbTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 14125, 1, 2, 43, 7, 1), ).setIndexNames((0, "ENGENIUS-MESH-MIB", "userDbTableIndex"))
if mibBuilder.loadTexts: userDbTableEntry.setStatus('current')
userDbTableIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 43, 7, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 128)))
if mibBuilder.loadTexts: userDbTableIndex.setStatus('current')
userDbTableName = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 43, 7, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: userDbTableName.setStatus('current')
userDbTablePassword = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 43, 7, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: userDbTablePassword.setStatus('current')
userDbTableGid = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 43, 7, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 999999))).setMaxAccess("readonly")
if mibBuilder.loadTexts: userDbTableGid.setStatus('current')
userDbTableStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 43, 7, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("enable", 1), ("loggedin", 2), ("idle", 3), ("expired", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: userDbTableStatus.setStatus('current')
userGroupId = MibScalar((1, 3, 6, 1, 4, 1, 14125, 1, 2, 44, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: userGroupId.setStatus('current')
userGroupName = MibScalar((1, 3, 6, 1, 4, 1, 14125, 1, 2, 44, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: userGroupName.setStatus('current')
userGroupLanguage = MibScalar((1, 3, 6, 1, 4, 1, 14125, 1, 2, 44, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: userGroupLanguage.setStatus('current')
userGroupUpload = MibScalar((1, 3, 6, 1, 4, 1, 14125, 1, 2, 44, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: userGroupUpload.setStatus('current')
userGroupDownload = MibScalar((1, 3, 6, 1, 4, 1, 14125, 1, 2, 44, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: userGroupDownload.setStatus('current')
userGroupIdleTimeout = MibScalar((1, 3, 6, 1, 4, 1, 14125, 1, 2, 44, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: userGroupIdleTimeout.setStatus('current')
userGroupSessionTimeout = MibScalar((1, 3, 6, 1, 4, 1, 14125, 1, 2, 44, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: userGroupSessionTimeout.setStatus('current')
userGroupUrl = MibScalar((1, 3, 6, 1, 4, 1, 14125, 1, 2, 44, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 512))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: userGroupUrl.setStatus('current')
userGroupComment = MibScalar((1, 3, 6, 1, 4, 1, 14125, 1, 2, 44, 9), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: userGroupComment.setStatus('current')
userGroupAddCmd = MibScalar((1, 3, 6, 1, 4, 1, 14125, 1, 2, 44, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: userGroupAddCmd.setStatus('current')
userGroupEditCmd = MibScalar((1, 3, 6, 1, 4, 1, 14125, 1, 2, 44, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: userGroupEditCmd.setStatus('current')
userGroupDelCmd = MibScalar((1, 3, 6, 1, 4, 1, 14125, 1, 2, 44, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 999999))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: userGroupDelCmd.setStatus('current')
userGroupTable = MibTable((1, 3, 6, 1, 4, 1, 14125, 1, 2, 44, 13), )
if mibBuilder.loadTexts: userGroupTable.setStatus('current')
userGroupTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 14125, 1, 2, 44, 13, 1), ).setIndexNames((0, "ENGENIUS-MESH-MIB", "userGroupTableIndex"))
if mibBuilder.loadTexts: userGroupTableEntry.setStatus('current')
userGroupTableIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 44, 13, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 16)))
if mibBuilder.loadTexts: userGroupTableIndex.setStatus('current')
userGroupTableGid = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 44, 13, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 999999))).setMaxAccess("readonly")
if mibBuilder.loadTexts: userGroupTableGid.setStatus('current')
userGroupTableName = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 44, 13, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: userGroupTableName.setStatus('current')
userGroupTableLanguage = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 44, 13, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: userGroupTableLanguage.setStatus('current')
userGroupTableUpload = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 44, 13, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(32, 300000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: userGroupTableUpload.setStatus('current')
userGroupTableDownload = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 44, 13, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(32, 300000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: userGroupTableDownload.setStatus('current')
userGroupTableIdleTimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 44, 13, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 300000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: userGroupTableIdleTimeout.setStatus('current')
userGroupTableSessTimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 44, 13, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 300000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: userGroupTableSessTimeout.setStatus('current')
userGroupTableUrl = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 44, 13, 1, 9), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 512))).setMaxAccess("readonly")
if mibBuilder.loadTexts: userGroupTableUrl.setStatus('current')
userGroupTableComment = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 44, 13, 1, 10), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: userGroupTableComment.setStatus('current')
statickeyWifi0Key0 = MibScalar((1, 3, 6, 1, 4, 1, 14125, 1, 2, 45, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: statickeyWifi0Key0.setStatus('current')
statickeyWifi0Key1 = MibScalar((1, 3, 6, 1, 4, 1, 14125, 1, 2, 45, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: statickeyWifi0Key1.setStatus('current')
statickeyWifi0Key2 = MibScalar((1, 3, 6, 1, 4, 1, 14125, 1, 2, 45, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: statickeyWifi0Key2.setStatus('current')
statickeyWifi0Key3 = MibScalar((1, 3, 6, 1, 4, 1, 14125, 1, 2, 45, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: statickeyWifi0Key3.setStatus('current')
statickeyWifi1Key0 = MibScalar((1, 3, 6, 1, 4, 1, 14125, 1, 2, 45, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: statickeyWifi1Key0.setStatus('current')
statickeyWifi1Key1 = MibScalar((1, 3, 6, 1, 4, 1, 14125, 1, 2, 45, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: statickeyWifi1Key1.setStatus('current')
statickeyWifi1Key2 = MibScalar((1, 3, 6, 1, 4, 1, 14125, 1, 2, 45, 7), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: statickeyWifi1Key2.setStatus('current')
statickeyWifi1Key3 = MibScalar((1, 3, 6, 1, 4, 1, 14125, 1, 2, 45, 8), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: statickeyWifi1Key3.setStatus('current')
dhcrelayActive = MibScalar((1, 3, 6, 1, 4, 1, 14125, 1, 2, 46, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dhcrelayActive.setStatus('current')
dhcrelayPort = MibScalar((1, 3, 6, 1, 4, 1, 14125, 1, 2, 46, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)).clone(67)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dhcrelayPort.setStatus('current')
dhcrelayHopcount = MibScalar((1, 3, 6, 1, 4, 1, 14125, 1, 2, 46, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255)).clone(10)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dhcrelayHopcount.setStatus('current')
dhcrelayPktsize = MibScalar((1, 3, 6, 1, 4, 1, 14125, 1, 2, 46, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(600, 1400)).clone(1400)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dhcrelayPktsize.setStatus('current')
dhcrelayTable = MibTable((1, 3, 6, 1, 4, 1, 14125, 1, 2, 46, 5), )
if mibBuilder.loadTexts: dhcrelayTable.setStatus('current')
dhcrelayTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 14125, 1, 2, 46, 5, 1), ).setIndexNames((0, "ENGENIUS-MESH-MIB", "dhcrelayTableIndex"))
if mibBuilder.loadTexts: dhcrelayTableEntry.setStatus('current')
dhcrelayTableIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 46, 5, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 32)))
if mibBuilder.loadTexts: dhcrelayTableIndex.setStatus('current')
dhcrelayTableType = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 46, 5, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("server", 1), ("interface", 2))).clone('interface')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: dhcrelayTableType.setStatus('current')
dhcrelayTableExtra = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 46, 5, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32)).clone('Nil')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: dhcrelayTableExtra.setStatus('current')
dhcrelayTableComments = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 46, 5, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32)).clone('Nil')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: dhcrelayTableComments.setStatus('current')
dhcrelayTableActive = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 46, 5, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('enable')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: dhcrelayTableActive.setStatus('current')
dhcrelayTableRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 46, 5, 1, 6), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: dhcrelayTableRowStatus.setStatus('current')
multicastActive = MibScalar((1, 3, 6, 1, 4, 1, 14125, 1, 2, 47, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('enable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: multicastActive.setStatus('current')
ospfdActive = MibScalar((1, 3, 6, 1, 4, 1, 14125, 1, 2, 48, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ospfdActive.setStatus('current')
ebtablesActive = MibScalar((1, 3, 6, 1, 4, 1, 14125, 1, 2, 49, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ebtablesActive.setStatus('current')
ebTable = MibTable((1, 3, 6, 1, 4, 1, 14125, 1, 2, 49, 2), )
if mibBuilder.loadTexts: ebTable.setStatus('current')
ebTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 14125, 1, 2, 49, 2, 1), ).setIndexNames((0, "ENGENIUS-MESH-MIB", "ebTableIndex"))
if mibBuilder.loadTexts: ebTableEntry.setStatus('current')
ebTableIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 49, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 64)))
if mibBuilder.loadTexts: ebTableIndex.setStatus('current')
ebTableTarget = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 49, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("allow", 1), ("deny", 2))).clone('allow')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ebTableTarget.setStatus('current')
ebTableSrcIface = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 49, 2, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 32)).clone('Nil')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ebTableSrcIface.setStatus('current')
ebTableDstIface = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 49, 2, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 32)).clone('Nil')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ebTableDstIface.setStatus('current')
ebTableMatchMac = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 49, 2, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('enable')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ebTableMatchMac.setStatus('current')
ebTableSrcMac = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 49, 2, 1, 6), MacAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ebTableSrcMac.setStatus('current')
ebTableDstMac = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 49, 2, 1, 7), MacAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ebTableDstMac.setStatus('current')
ebTableProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 49, 2, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("ipv4", 1), ("arp", 2), ("e802dot1q", 3), ("ppp", 4))).clone('ipv4')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ebTableProtocol.setStatus('current')
ebTableSrcIp = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 49, 2, 1, 9), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ebTableSrcIp.setStatus('current')
ebTableSrcMask = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 49, 2, 1, 10), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ebTableSrcMask.setStatus('current')
ebTableDstIp = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 49, 2, 1, 11), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ebTableDstIp.setStatus('current')
ebTableDstMask = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 49, 2, 1, 12), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ebTableDstMask.setStatus('current')
ebTableIpProt = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 49, 2, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 6, 17))).clone(namedValues=NamedValues(("icmp", 1), ("tcp", 6), ("udp", 17))).clone('icmp')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ebTableIpProt.setStatus('current')
ebTableSrcPortStart = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 49, 2, 1, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 65536)).clone(-1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ebTableSrcPortStart.setStatus('current')
ebTableSrcPortEnd = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 49, 2, 1, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 65536)).clone(-1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ebTableSrcPortEnd.setStatus('current')
ebTableDstPortStart = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 49, 2, 1, 16), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 65536)).clone(-1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ebTableDstPortStart.setStatus('current')
ebTableDstPortEnd = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 49, 2, 1, 17), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 65536)).clone(-1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ebTableDstPortEnd.setStatus('current')
ebTableVlanid = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 49, 2, 1, 18), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4096))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ebTableVlanid.setStatus('current')
ebTableComments = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 49, 2, 1, 19), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ebTableComments.setStatus('current')
ebTableActive = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 49, 2, 1, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('enable')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ebTableActive.setStatus('current')
ebTableRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 49, 2, 1, 21), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ebTableRowStatus.setStatus('current')
rebootTime = MibScalar((1, 3, 6, 1, 4, 1, 14125, 1, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 300)).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rebootTime.setStatus('current')
resetToDefault = MibScalar((1, 3, 6, 1, 4, 1, 14125, 1, 3, 2, 1), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: resetToDefault.setStatus('current')
uploadDownloadFilename = MibScalar((1, 3, 6, 1, 4, 1, 14125, 1, 3, 3, 1), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: uploadDownloadFilename.setStatus('current')
uploadDownloadFiletype = MibScalar((1, 3, 6, 1, 4, 1, 14125, 1, 3, 3, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("config", 1), ("firmware", 2), ("ipx509local", 3), ("ipx509remote", 4), ("iprsa", 5)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: uploadDownloadFiletype.setStatus('current')
uploadDownloadIpaddress = MibScalar((1, 3, 6, 1, 4, 1, 14125, 1, 3, 3, 3), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: uploadDownloadIpaddress.setStatus('current')
uploadDownloadPassword = MibScalar((1, 3, 6, 1, 4, 1, 14125, 1, 3, 3, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: uploadDownloadPassword.setStatus('current')
uploadDownloadOperationtype = MibScalar((1, 3, 6, 1, 4, 1, 14125, 1, 3, 3, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("download", 1), ("upload", 2), ("uploadandreboot", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: uploadDownloadOperationtype.setStatus('current')
uploadDownloadExecutetftp = MibScalar((1, 3, 6, 1, 4, 1, 14125, 1, 3, 3, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("execute", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: uploadDownloadExecutetftp.setStatus('current')
logoutAndBlockAction = MibScalar((1, 3, 6, 1, 4, 1, 14125, 1, 3, 4, 1), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: logoutAndBlockAction.setStatus('current')
restartSnmpService = MibScalar((1, 3, 6, 1, 4, 1, 14125, 1, 3, 5, 1), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: restartSnmpService.setStatus('current')
mibBuilder.exportSymbols("ENGENIUS-MESH-MIB", advTunningConntrackUdpstreamTimeout=advTunningConntrackUdpstreamTimeout, radiusclientTableEntry=radiusclientTableEntry, httpdUsername=httpdUsername, syslogLevel=syslogLevel, shapingWanRateup=shapingWanRateup, ebTableIpProt=ebTableIpProt, clientStatTableIp=clientStatTableIp, radiusclientNasport=radiusclientNasport, vlanInterfaceTable=vlanInterfaceTable, ipsecLocalRsa=ipsecLocalRsa, genericTrapVarHostIPAddress=genericTrapVarHostIPAddress, wmeTableAcmBk=wmeTableAcmBk, wmeTableCwmaxVi=wmeTableCwmaxVi, wlanFrequencyAp1TableIndex=wlanFrequencyAp1TableIndex, advTunningConntrackIcmpTimeout=advTunningConntrackIcmpTimeout, snmpdTableDevice=snmpdTableDevice, ebTableSrcIp=ebTableSrcIp, logoutAndBlockAction=logoutAndBlockAction, bridgeInterfaceTableFwdDelay=bridgeInterfaceTableFwdDelay, wmeTableEntry=wmeTableEntry, ipAddressesTableIface=ipAddressesTableIface, nodeConfiguration=nodeConfiguration, ethInterfaceTableBridgeCost=ethInterfaceTableBridgeCost, dhcpClientTableIp=dhcpClientTableIp, ethInterfaceTableIndex=ethInterfaceTableIndex, wmeTableName=wmeTableName, snmpdVersion=snmpdVersion, httpdTableSubnet=httpdTableSubnet, snmpdWritecommunity=snmpdWritecommunity, snmpdTable=snmpdTable, userDbTableGid=userDbTableGid, httpdTableDevnet=httpdTableDevnet, olsrInterfaceTable=olsrInterfaceTable, pptpActive=pptpActive, userGroupTableIdleTimeout=userGroupTableIdleTimeout, captive1xLogin=captive1xLogin, nodeConfigurationCaptive=nodeConfigurationCaptive, httpdTableIndex=httpdTableIndex, dhcpdTableNetstart=dhcpdTableNetstart, olsrInterfaceTableHelloInterval=olsrInterfaceTableHelloInterval, ebTableSrcIface=ebTableSrcIface, wlanInterfaceTableEssid=wlanInterfaceTableEssid, ipsecPsk=ipsecPsk, nodeConfigurationMacaccess=nodeConfigurationMacaccess, wlanInterfaceTableTxAntenna=wlanInterfaceTableTxAntenna, syslogKlog=syslogKlog, wmeTableBssCwmaxBe=wmeTableBssCwmaxBe, wmeTableTxoplimitBk=wmeTableTxoplimitBk, httpdTableActive=httpdTableActive, wmeTableBssTxoplimitVi=wmeTableBssTxoplimitVi, natActive=natActive, ipsecRemoteNetmask=ipsecRemoteNetmask, wmeTableBssTxoplimitBk=wmeTableBssTxoplimitBk, bridgeInterfaceTableMaxAge=bridgeInterfaceTableMaxAge, wlanFrequencyAp1TableFrequency=wlanFrequencyAp1TableFrequency, macaccessType=macaccessType, snmpdTableSubnet=snmpdTableSubnet, nodeConfigurationDhcpd=nodeConfigurationDhcpd, trapSecurity=trapSecurity, bridgeInterfaceTableIndex=bridgeInterfaceTableIndex, dnsTableIndex=dnsTableIndex, wlanInterfaceTableDtimInterval=wlanInterfaceTableDtimInterval, macaccessTableEntry=macaccessTableEntry, wlanInterfaceTableBridge=wlanInterfaceTableBridge, olsrInterfaceTableIface=olsrInterfaceTableIface, dhcpClientTableIndex=dhcpClientTableIndex, shapingTableMinsize=shapingTableMinsize, olsrHysteresisThrHigh=olsrHysteresisThrHigh, PYSNMP_MODULE_ID=engeniusmesh, genericTrapVarEthernetPort=genericTrapVarEthernetPort, olsrInterfaceTableActive=olsrInterfaceTableActive, clientInfoTableRate=clientInfoTableRate, firewallTableRowStatus=firewallTableRowStatus, engeniusmesh=engeniusmesh, nodeConfigurationVlan=nodeConfigurationVlan, dhcpdTableMaxLease=dhcpdTableMaxLease, ebTable=ebTable, shapingVlanRatedown=shapingVlanRatedown, nodeStatusTrap=nodeStatusTrap, mlrdTableParent=mlrdTableParent, advTunningConntrackTcpfinwaitTimeout=advTunningConntrackTcpfinwaitTimeout, routedogIntervaCount=routedogIntervaCount, advTunningConntrackTcpclosewaitTimeout=advTunningConntrackTcpclosewaitTimeout, wmeTableCwminVo=wmeTableCwminVo, ntpTableMaxPoll=ntpTableMaxPoll, l2tpcSecret=l2tpcSecret, ipAddressesTableEntry=ipAddressesTableEntry, linuxdogInterval=linuxdogInterval, dhcpdTableRouter=dhcpdTableRouter, nodeConfigurationInterfaces=nodeConfigurationInterfaces, restartSnmpService=restartSnmpService, advTunningWirelessOutdoor=advTunningWirelessOutdoor, captiveDefaultLanguage=captiveDefaultLanguage, topologyTableSource=topologyTableSource, ipsecLocalId=ipsecLocalId, topologyTable=topologyTable, nodeConfigurationIpsec=nodeConfigurationIpsec, bridgeInterfaceTableComments=bridgeInterfaceTableComments, bridgeInterfaceTableHelloInt=bridgeInterfaceTableHelloInt, nodeConfigurationTrap=nodeConfigurationTrap, wlanInterfaceTableSecurity=wlanInterfaceTableSecurity, wirelessFrequencyAp1TableEntry=wirelessFrequencyAp1TableEntry, nodeConfigurationAutoip=nodeConfigurationAutoip, vlanInterfaceTableComments=vlanInterfaceTableComments, olsrLinkQualitySize=olsrLinkQualitySize, engenius=engenius, dhcpdTableEntry=dhcpdTableEntry, dhcpdTableComments=dhcpdTableComments, firewallTableSrcIface=firewallTableSrcIface, nodeConfigurationHttpd=nodeConfigurationHttpd, nodeConfigurationNtp=nodeConfigurationNtp, snmpdWriteusername=snmpdWriteusername, ntpTableIndex=ntpTableIndex, olsrGatewayTableRowStatus=olsrGatewayTableRowStatus, wlanInterfaceTableFreq=wlanInterfaceTableFreq, wmeTableBssTxoplimitVo=wmeTableBssTxoplimitVo, userTrapsUserLogin=userTrapsUserLogin, wlanInterfaceTableFragThreshold=wlanInterfaceTableFragThreshold, wmeTableCwmaxBk=wmeTableCwmaxBk, firewallTable=firewallTable, wmeTableTxoplimitVo=wmeTableTxoplimitVo, natTableProtocol=natTableProtocol, httpdTableEntry=httpdTableEntry, dhcrelayTableEntry=dhcrelayTableEntry, nodeConfigurationMulticast=nodeConfigurationMulticast, wlanInterfaceTableRowStatus=wlanInterfaceTableRowStatus, wirelessFrequencyMeshTableEntry=wirelessFrequencyMeshTableEntry, trapFlash=trapFlash, nodeConfigurationUserDb=nodeConfigurationUserDb, dhcpdTableIface=dhcpdTableIface, ebtablesActive=ebtablesActive, olsrInterfaceTableTcValidity=olsrInterfaceTableTcValidity, wmeTableCwmaxVo=wmeTableCwmaxVo, ipsecRemoteIp=ipsecRemoteIp, captiveExternalActive=captiveExternalActive, wmeTableBssCwmaxBk=wmeTableBssCwmaxBk, ebTableActive=ebTableActive, mlrdActive=mlrdActive, wlanInterfaceTableRtsThreshold=wlanInterfaceTableRtsThreshold, olsrInterfaceTableTcInterval=olsrInterfaceTableTcInterval, dnsTableRowStatus=dnsTableRowStatus, interfacesTable=interfacesTable, radiusclientTableServerport=radiusclientTableServerport, natTableActive=natTableActive, vlanInterfaceTableIndex=vlanInterfaceTableIndex, trapTableUsername=trapTableUsername, advTunningConntrackGenericTimeout=advTunningConntrackGenericTimeout, wlanInterfaceTableMode=wlanInterfaceTableMode, wlanInterfaceTableRxAntenna=wlanInterfaceTableRxAntenna, natTableRowStatus=natTableRowStatus, wmeTableBssAifsnBe=wmeTableBssAifsnBe, ethInterfaceTableName=ethInterfaceTableName, wmeTableTxoplimitVi=wmeTableTxoplimitVi, advTunningConntrackTcpestablishTimeout=advTunningConntrackTcpestablishTimeout, userGroupUrl=userGroupUrl, wirelessFrequencyMeshTable=wirelessFrequencyMeshTable, bridgeInterfaceTableRowStatus=bridgeInterfaceTableRowStatus, snmpdTableNetmask=snmpdTableNetmask, nodeConfigurationMlrd=nodeConfigurationMlrd, trapTableActive=trapTableActive, tmipdNetname=tmipdNetname, bridgeInterfaceTable=bridgeInterfaceTable, macaccessTableActive=macaccessTableActive, networkDomain=networkDomain, trapTableVersion=trapTableVersion, wlanInterfaceTableBridgePrio=wlanInterfaceTableBridgePrio, vlanInterfaceTableBase=vlanInterfaceTableBase, snmpdReadcommunity=snmpdReadcommunity, dhcpdTableLease=dhcpdTableLease, trapTablePrivpasswd=trapTablePrivpasswd, pppoeUsername=pppoeUsername, wlanInterfaceTableEncryptionKey=wlanInterfaceTableEncryptionKey, systemContactName=systemContactName, radiusclientCalledstationid=radiusclientCalledstationid, ntpTableEntry=ntpTableEntry, statickeyWifi1Key1=statickeyWifi1Key1, nodeConfigurationAdvTunning=nodeConfigurationAdvTunning, systemContactMail=systemContactMail, tmipdActive=tmipdActive, radiusclientNasporttype=radiusclientNasporttype, dhcpdTable=dhcpdTable, systemObjectid=systemObjectid, wmeTableIndex=wmeTableIndex, dnsTableComments=dnsTableComments, firewallTableDstIface=firewallTableDstIface, userDbTablePassword=userDbTablePassword, captiveRedirect=captiveRedirect, olsrGatewayTableEntry=olsrGatewayTableEntry, wmeTableAifsnBe=wmeTableAifsnBe, shapingTableRowStatus=shapingTableRowStatus, radiusclientTableComment=radiusclientTableComment, dhcpClientTableEntry=dhcpClientTableEntry, dnsActive=dnsActive, captiveExternalServer=captiveExternalServer, mlrdBackupActive=mlrdBackupActive, bridgeInterfaceTableEntry=bridgeInterfaceTableEntry, firewallTableSrcIp=firewallTableSrcIp, userGroupTableDownload=userGroupTableDownload, httpdActive=httpdActive, vlanInterfaceTableBridgeCost=vlanInterfaceTableBridgeCost, bridgeInterfaceTablePrio=bridgeInterfaceTablePrio, clientInfoTableEssid=clientInfoTableEssid, trapTableComment=trapTableComment, trapAuthentication=trapAuthentication, ipAddressesTable=ipAddressesTable, dnsTable=dnsTable, radiusclientTableActive=radiusclientTableActive, mlrdStaticActive=mlrdStaticActive, macActiveTable=macActiveTable, ebTableDstPortStart=ebTableDstPortStart, ddnsServer=ddnsServer, firewallTableEndPort=firewallTableEndPort, mlrdTableComment=mlrdTableComment, wlanFrequencyMeshTableRowStatus=wlanFrequencyMeshTableRowStatus, olsrActive=olsrActive, bridgeInterfaceTableAge=bridgeInterfaceTableAge, advTunningConntrackTcpsynrecvTimeout=advTunningConntrackTcpsynrecvTimeout, userGroupTableSessTimeout=userGroupTableSessTimeout, systemCheckingState=systemCheckingState, nodeConfigurationTopology=nodeConfigurationTopology, ntpTableServer=ntpTableServer, olsrGatewayTable=olsrGatewayTable, nodeCommand=nodeCommand, systemTrapsSystemConf=systemTrapsSystemConf, ipAddressesTableGateway=ipAddressesTableGateway, clientInfoTableIndex=clientInfoTableIndex, topologyTableEntry=topologyTableEntry, autoipActive=autoipActive, userGroupUpload=userGroupUpload, advTunningWirelessRegionDomain=advTunningWirelessRegionDomain, wlanInterfaceTableDatarate=wlanInterfaceTableDatarate, macaccessTableRowStatus=macaccessTableRowStatus, ebTableSrcPortEnd=ebTableSrcPortEnd, nodeConfigurationDhcrelay=nodeConfigurationDhcrelay, olsrGatewayTableSubnet=olsrGatewayTableSubnet, clientStatTableRxPkt=clientStatTableRxPkt, dhcrelayPktsize=dhcrelayPktsize, nodeConfigurationZeroconfig=nodeConfigurationZeroconfig, clientInfoTableChannel=clientInfoTableChannel, shapingDefaultdown=shapingDefaultdown, macaccessTableMac=macaccessTableMac, topologyTableIndex=topologyTableIndex, shapingTableIndex=shapingTableIndex, tm75Temperature=tm75Temperature, nodeConfigurationSyslog=nodeConfigurationSyslog, macActiveListExecute=macActiveListExecute, trapTableCommunity=trapTableCommunity, ethInterfaceTableActive=ethInterfaceTableActive, userDbAddCmd=userDbAddCmd, userGroupEditCmd=userGroupEditCmd, nodeConfigurationBridge=nodeConfigurationBridge, adminTrapsAdminCmd=adminTrapsAdminCmd, l2tpcLns=l2tpcLns, ebTableSrcPortStart=ebTableSrcPortStart)
mibBuilder.exportSymbols("ENGENIUS-MESH-MIB", nodeConfigurationSnmpd=nodeConfigurationSnmpd, shapingTableEntry=shapingTableEntry, userDbTableEntry=userDbTableEntry, systemDevicename=systemDevicename, ddnsPassword=ddnsPassword, macActiveTableEntry=macActiveTableEntry, nodeConfigurationNetwork=nodeConfigurationNetwork, olsrPollRate=olsrPollRate, nodeConfigurationUserGroup=nodeConfigurationUserGroup, pptpTableIp=pptpTableIp, wlanInterfaceTableCrntTxPower=wlanInterfaceTableCrntTxPower, advTunningWirelessRadio2Distance=advTunningWirelessRadio2Distance, ebTableProtocol=ebTableProtocol, wmeTableAcmVi=wmeTableAcmVi, ntpTable=ntpTable, shapingVlanRateup=shapingVlanRateup, wlanFrequencyMeshTableChannel=wlanFrequencyMeshTableChannel, wlanFrequencyMeshTableFrequency=wlanFrequencyMeshTableFrequency, wmeTableBssAifsnVo=wmeTableBssAifsnVo, userDbTableIndex=userDbTableIndex, clientStatTableEntry=clientStatTableEntry, shapingTableMaxsize=shapingTableMaxsize, nodeConfigurationL2tpc=nodeConfigurationL2tpc, ntpTableRowStatus=ntpTableRowStatus, dnsBogusPriv=dnsBogusPriv, dhcrelayActive=dhcrelayActive, l2tpcUsername=l2tpcUsername, nodeConfigurationLinuxdog=nodeConfigurationLinuxdog, dnsFilterWin2k=dnsFilterWin2k, shapingTable=shapingTable, dhcrelayTableRowStatus=dhcrelayTableRowStatus, wlanFrequencyAp0TableFrequency=wlanFrequencyAp0TableFrequency, ipsecLocalCertpass=ipsecLocalCertpass, networkPrimaryDns=networkPrimaryDns, captiveHttpsPort=captiveHttpsPort, mlrdTableIp=mlrdTableIp, sshdActive=sshdActive, ebTableEntry=ebTableEntry, shapingTableComment=shapingTableComment, ebTableDstPortEnd=ebTableDstPortEnd, nodeConfigurationOlsr=nodeConfigurationOlsr, httpdCertPassword=httpdCertPassword, wlanFrequencyAp1TableChannel=wlanFrequencyAp1TableChannel, bridgeInterfaceTableStp=bridgeInterfaceTableStp, dnsTableIpaddress=dnsTableIpaddress, userDbDelCmd=userDbDelCmd, natTableComment=natTableComment, tmipdVlan=tmipdVlan, pppoeChapUsername=pppoeChapUsername, mlrdPeer=mlrdPeer, systemUptime=systemUptime, advTunningConntrackUdpTimeout=advTunningConntrackUdpTimeout, mlrdBackupInterval=mlrdBackupInterval, ipAddressesTableComments=ipAddressesTableComments, snmpdReadusername=snmpdReadusername, nodeConfigurationNmsAddress=nodeConfigurationNmsAddress, userGroupSessionTimeout=userGroupSessionTimeout, nodeCommandReset=nodeCommandReset, olsrWillingnessActive=olsrWillingnessActive, interfacesTableLabel=interfacesTableLabel, advTunningWirelessRadio1Distance=advTunningWirelessRadio1Distance, ipAddressesTableNetmask=ipAddressesTableNetmask, nodeStatus=nodeStatus, firewallTableTarget=firewallTableTarget, tm75Resolution=tm75Resolution, captiveDefaultIdleTimeout=captiveDefaultIdleTimeout, olsrHysteresisScaling=olsrHysteresisScaling, captiveDefaultSessionTimeout=captiveDefaultSessionTimeout, systemOperatemode=systemOperatemode, advTunningConntrackMax=advTunningConntrackMax, genericTrapVariable=genericTrapVariable, olsrInterfaceTableComments=olsrInterfaceTableComments, vlanInterfaceTableEntry=vlanInterfaceTableEntry, statickeyWifi0Key3=statickeyWifi0Key3, nmsAddressTable=nmsAddressTable, ethInterfaceTableBase=ethInterfaceTableBase, wmeTableBssAifsnVi=wmeTableBssAifsnVi, routedogActive=routedogActive, nodeConfigurationPppoe=nodeConfigurationPppoe, snmpdTableDevnet=snmpdTableDevnet, ipAddressesTableIndex=ipAddressesTableIndex, captivePop3push=captivePop3push, routedogSsid=routedogSsid, wmeTableBssTxoplimitBe=wmeTableBssTxoplimitBe, wlanInterfaceTableName=wlanInterfaceTableName, snmpdActive=snmpdActive, userGroupTableUrl=userGroupTableUrl, ebTableDstMask=ebTableDstMask, uploadDownloadPassword=uploadDownloadPassword, olsrGatewayTableNetmask=olsrGatewayTableNetmask, wmeTableCwminBe=wmeTableCwminBe, bridgeInterfaceTableName=bridgeInterfaceTableName, uploadDownloadFilename=uploadDownloadFilename, systemMemory=systemMemory, systemDescription=systemDescription, ipsecRemoteId=ipsecRemoteId, routedogReboot=routedogReboot, userTraps=userTraps, wmeTableAcmVo=wmeTableAcmVo, vlanInterfaceTableId=vlanInterfaceTableId, statickeyWifi0Key1=statickeyWifi0Key1, olsrWillingness=olsrWillingness, radiusclientNasid=radiusclientNasid, olsrInterfaceTableRowStatus=olsrInterfaceTableRowStatus, httpdTableDevice=httpdTableDevice, dnsTableDns=dnsTableDns, nodeConfigurationEthernet=nodeConfigurationEthernet, genericTrapVarInterface=genericTrapVarInterface, dhcpClientTable=dhcpClientTable, userDbTableName=userDbTableName, clientStatTableTx=clientStatTableTx, bridgeInterfaceTableMac=bridgeInterfaceTableMac, userDbPassword=userDbPassword, snmpdTableActive=snmpdTableActive, advTunningWirelessCountry=advTunningWirelessCountry, wmeTableTxoplimitBe=wmeTableTxoplimitBe, ddnsHostname=ddnsHostname, captiveActive=captiveActive, olsrInterfaceTableHnaInterval=olsrInterfaceTableHnaInterval, advTunningWirelessRadio3Distance=advTunningWirelessRadio3Distance, macaccessTableIndex=macaccessTableIndex, linuxdogActive=linuxdogActive, uploadDownloadFiletype=uploadDownloadFiletype, snmpdAccessctrl=snmpdAccessctrl, wmeTableCwmaxBe=wmeTableCwmaxBe, wmeTableCwminVi=wmeTableCwminVi, trapTableEntry=trapTableEntry, statickeyWifi1Key2=statickeyWifi1Key2, firewallTableIndex=firewallTableIndex, ebTableDstIface=ebTableDstIface, userGroupTableLanguage=userGroupTableLanguage, httpdPassword=httpdPassword, advTunningConntrackTcpsynsentTimeout=advTunningConntrackTcpsynsentTimeout, wlanInterfaceTableIndex=wlanInterfaceTableIndex, userDbTableStatus=userDbTableStatus, tmipdMlrdip=tmipdMlrdip, mlrdTableRowStatus=mlrdTableRowStatus, dnsStrictOrder=dnsStrictOrder, syslogRemoteActive=syslogRemoteActive, mlrdTableIndex=mlrdTableIndex, dhcrelayTable=dhcrelayTable, wlanInterfaceTableBase=wlanInterfaceTableBase, wlanInterfaceTableBroadcastSsid=wlanInterfaceTableBroadcastSsid, pppoeActive=pppoeActive, networkSecondaryDns=networkSecondaryDns, wlanFrequencyAp1TableRowStatus=wlanFrequencyAp1TableRowStatus, snmpdTableIndex=snmpdTableIndex, interfacesTableDev=interfacesTableDev, userGroupId=userGroupId, httpdTableComment=httpdTableComment, nmsAddressTableActive=nmsAddressTableActive, systemTrapsSystemStatus=systemTrapsSystemStatus, wlanInterfaceTableBridgeCost=wlanInterfaceTableBridgeCost, wlanFrequencyMeshTableIndex=wlanFrequencyMeshTableIndex, pptpEndip=pptpEndip, captiveWebspaceActive=captiveWebspaceActive, httpdPort=httpdPort, nodeConfigurationFirewall=nodeConfigurationFirewall, nodeConfigurationRadiusClient=nodeConfigurationRadiusClient, natTableIndex=natTableIndex, olsrInterfaceTableMidInterval=olsrInterfaceTableMidInterval, captiveMultipleUsername=captiveMultipleUsername, wirelessFrequencyAp0TableEntry=wirelessFrequencyAp0TableEntry, userGroupComment=userGroupComment, topologyTableDestination=topologyTableDestination, userDbGroupid=userDbGroupid, trapVariable=trapVariable, signallevelTableRssi=signallevelTableRssi, nodeConfigurationOlsrGW=nodeConfigurationOlsrGW, olsrSharedKey=olsrSharedKey, dhcrelayTableActive=dhcrelayTableActive, genericTrapVarHostname=genericTrapVarHostname, wmeTableBssCwminVi=wmeTableBssCwminVi, dhcrelayTableType=dhcrelayTableType, dhcrelayTableComments=dhcrelayTableComments, nodeConfigurationEbtables=nodeConfigurationEbtables, statickeyWifi1Key0=statickeyWifi1Key0, zeroconfigProxyActive=zeroconfigProxyActive, wlanInterfaceTableWpaType=wlanInterfaceTableWpaType, pppoePassword=pppoePassword, nodeConfigurationOspfd=nodeConfigurationOspfd, syslogActive=syslogActive, radiusclientTableServersecret=radiusclientTableServersecret, userGroupTableEntry=userGroupTableEntry, pppoeAuthType=pppoeAuthType, httpdTable=httpdTable, systemTrapsSystemUpgrade=systemTrapsSystemUpgrade, natTableIp=natTableIp, ebTableDstIp=ebTableDstIp, systemTraps=systemTraps, nmsAddressTableRowStatus=nmsAddressTableRowStatus, mlrdTableDefaultRoute=mlrdTableDefaultRoute, ipAddressesTableBroadcast=ipAddressesTableBroadcast, routeTable=routeTable, systemTrapsSystemReboot=systemTrapsSystemReboot, nodeConfigurationWireless=nodeConfigurationWireless, signallevelTable=signallevelTable, wmeTable=wmeTable, userGroupDelCmd=userGroupDelCmd, ebTableTarget=ebTableTarget, ipsecRemoteRsa=ipsecRemoteRsa, firewallTableUserGroup=firewallTableUserGroup, routeTableSubnet=routeTableSubnet, mlrdTableEntry=mlrdTableEntry, nmsAddressTableComment=nmsAddressTableComment, dhcrelayPort=dhcrelayPort, wirelessFrequencyAp0Table=wirelessFrequencyAp0Table, advTunningWirelessRadio0Distance=advTunningWirelessRadio0Distance, nodeStatusSystem=nodeStatusSystem, userGroupAddCmd=userGroupAddCmd, routeTableDevice=routeTableDevice, ntpTableMinPoll=ntpTableMinPoll, userDbEditCmd=userDbEditCmd, wmeTableRowStatus=wmeTableRowStatus, clientInfoTableMac=clientInfoTableMac, ethernetInterfaceTableEntry=ethernetInterfaceTableEntry, signallevelTableIndex=signallevelTableIndex, userTrapsUserLogout=userTrapsUserLogout, pptpTableComment=pptpTableComment, ipsecType=ipsecType, shapingDefaultup=shapingDefaultup, nodeCommandReboot=nodeCommandReboot, ipsecActive=ipsecActive, ethInterfaceTableComments=ethInterfaceTableComments, topologyTableStyle=topologyTableStyle, pptpServerip=pptpServerip, nodeConfigurationNat=nodeConfigurationNat, ebTableComments=ebTableComments, firewallActive=firewallActive, ebTableSrcMask=ebTableSrcMask, nodeCommandLogoutBlock=nodeCommandLogoutBlock, genericTrapVarMACAddress=genericTrapVarMACAddress, pptpTableActive=pptpTableActive, ipsecRemoteSubnet=ipsecRemoteSubnet, dhcpClientTableHostname=dhcpClientTableHostname, dhcpdTableDns=dhcpdTableDns, zeroconfigProxyport=zeroconfigProxyport, macActiveTableMac=macActiveTableMac, tm75Active=tm75Active, nodeConfigurationStatickey=nodeConfigurationStatickey, sshdPort=sshdPort, routeTableNetmask=routeTableNetmask, wlanFrequencyAp0TableChannel=wlanFrequencyAp0TableChannel, signallevelExecute=signallevelExecute, dnsDomainNeeded=dnsDomainNeeded, ethInterfaceTableMac=ethInterfaceTableMac, olsrInterfaceTableEntry=olsrInterfaceTableEntry, natTable=natTable, clientInfoTable=clientInfoTable, routedogInterval=routedogInterval, wmeTableNoackpolicyBe=wmeTableNoackpolicyBe, interfacesTableEntry=interfacesTableEntry, nodeConfigutationWme=nodeConfigutationWme, adminTraps=adminTraps)
mibBuilder.exportSymbols("ENGENIUS-MESH-MIB", captiveHttpActive=captiveHttpActive, captiveHttpPort=captiveHttpPort, nodeConfigurationSystem=nodeConfigurationSystem, wmeTableNoackpolicyVi=wmeTableNoackpolicyVi, shapingTablePort=shapingTablePort, routeTableIndex=routeTableIndex, snmpdPassword=snmpdPassword, wmeTableAcmBe=wmeTableAcmBe, ospfdActive=ospfdActive, mlrdRole=mlrdRole, wmeTableAifsnBk=wmeTableAifsnBk, olsrHysteresisThrLow=olsrHysteresisThrLow, trapTable=trapTable, nodeConfigurationIpaddress=nodeConfigurationIpaddress, genericTrapVarCount=genericTrapVarCount, statickeyWifi1Key3=statickeyWifi1Key3, autoipVlanip=autoipVlanip, wmeTableBssCwminBe=wmeTableBssCwminBe, trapOperational=trapOperational, userGroupIdleTimeout=userGroupIdleTimeout, dhcpClientExecute=dhcpClientExecute, zeroconfigActive=zeroconfigActive, pptpTableUsername=pptpTableUsername, olsrLinkQualityType=olsrLinkQualityType, firewallTableSrcMask=firewallTableSrcMask, wmeTableBssAifsnBk=wmeTableBssAifsnBk, captiveWebspacePort=captiveWebspacePort, pptpTableEntry=pptpTableEntry, pptpTableIndex=pptpTableIndex, clientStatTable=clientStatTable, wmeTableComment=wmeTableComment, genericTrapVarWirelessCard=genericTrapVarWirelessCard, macaccessTable=macaccessTable, pptpTablePassword=pptpTablePassword, firewallTableComment=firewallTableComment, mlrdTableMac=mlrdTableMac, nodeConfigurationRoute=nodeConfigurationRoute, clientStatTableOnlinetime=clientStatTableOnlinetime, wmeTableBssCwminBk=wmeTableBssCwminBk, dhcpdTableIndex=dhcpdTableIndex, pptpTableRowStatus=pptpTableRowStatus, signallevelTableSource=signallevelTableSource, nodeCommandRestartSnmp=nodeCommandRestartSnmp, bridgeInterfaceTableActive=bridgeInterfaceTableActive, nmsAddressTablePort=nmsAddressTablePort, trapActive=trapActive, routeTableGateway=routeTableGateway, macActiveTableIp=macActiveTableIp, shapingMeshRatedown=shapingMeshRatedown, dhcpClientTableMac=dhcpClientTableMac, ntpTableComments=ntpTableComments, nodeConfigurationDns=nodeConfigurationDns, nodeConfigurationDdns=nodeConfigurationDdns, wirelessFrequencyAp1Table=wirelessFrequencyAp1Table, wmeTableBssCwmaxVi=wmeTableBssCwmaxVi, userGroupName=userGroupName, ebTableVlanid=ebTableVlanid, ntpTimezone=ntpTimezone, wmeTableNoackpolicyBk=wmeTableNoackpolicyBk, nodeConfigurationTm75=nodeConfigurationTm75, wirelessInterfaceTableEntry=wirelessInterfaceTableEntry, clientStatTableTxPkt=clientStatTableTxPkt, userGroupTableGid=userGroupTableGid, ebTableSrcMac=ebTableSrcMac, shapingTableProtocol=shapingTableProtocol, httpdTableNetmask=httpdTableNetmask, vlanInterfaceTableMac=vlanInterfaceTableMac, radiusclientTableRowStatus=radiusclientTableRowStatus, wlanFrequencyAp0TableIndex=wlanFrequencyAp0TableIndex, wlanInterfaceTableBeaconInt=wlanInterfaceTableBeaconInt, clientInfoTableRssi=clientInfoTableRssi, dnsTableActive=dnsTableActive, advTunningConntrackTcpcloseTimeout=advTunningConntrackTcpcloseTimeout, ebTableRowStatus=ebTableRowStatus, routeTableActive=routeTableActive, pptpTable=pptpTable, systemUpdateMode=systemUpdateMode, wlanInterfaceTableBand=wlanInterfaceTableBand, userDbUsername=userDbUsername, shapingWanRatedown=shapingWanRatedown, wmeTableAifsnVo=wmeTableAifsnVo, statickeyWifi0Key2=statickeyWifi0Key2, trapConfiguration=trapConfiguration, ethInterfaceTableBridgePrio=ethInterfaceTableBridgePrio, userGroupTableName=userGroupTableName, ipAddressesTableType=ipAddressesTableType, olsrInterfaceTableIndex=olsrInterfaceTableIndex, pptpStartip=pptpStartip, dhcpdTableDomain=dhcpdTableDomain, userGroupLanguage=userGroupLanguage, ntpActive=ntpActive, httpdTableRowStatus=httpdTableRowStatus, ntpTableActive=ntpTableActive, snmpdTableEntry=snmpdTableEntry, olsrGatewayTableIndex=olsrGatewayTableIndex, dhcpdTableNetmask=dhcpdTableNetmask, dhcrelayTableIndex=dhcrelayTableIndex, olsrGatewayTableComments=olsrGatewayTableComments, snmpdPassphrase=snmpdPassphrase, nodeConfigurationPptp=nodeConfigurationPptp, nodeConfigurationShaping=nodeConfigurationShaping, radiusclientTableIndex=radiusclientTableIndex, trapTftp=trapTftp, dhcrelayTableExtra=dhcrelayTableExtra, shapingTablePriority=shapingTablePriority, dhcpdTableActive=dhcpdTableActive, trapImage=trapImage, snmpdPort=snmpdPort, olsrInterfaceTableHelloValidity=olsrInterfaceTableHelloValidity, wirelessInterfaceTable=wirelessInterfaceTable, ipAddressesTableActive=ipAddressesTableActive, trapTableIp=trapTableIp, systemName=systemName, advTunningWirelessXChannel=advTunningWirelessXChannel, dhcpdActive=dhcpdActive, mlrdTableActive=mlrdTableActive, uploadDownloadIpaddress=uploadDownloadIpaddress, macaccessActive=macaccessActive, snmpdTableRowStatus=snmpdTableRowStatus, autoipMeship=autoipMeship, ebTableIndex=ebTableIndex, wlanInterfaceTableDiversity=wlanInterfaceTableDiversity, wmeTableNoackpolicyVo=wmeTableNoackpolicyVo, shapingTableActive=shapingTableActive, trapTableAuthpasswd=trapTableAuthpasswd, routeTableComments=routeTableComments, mlrdTable=mlrdTable, firewallTableStartPort=firewallTableStartPort, wmeTableActive=wmeTableActive, vlanInterfaceTableBridgePrio=vlanInterfaceTableBridgePrio, macActiveTableIndex=macActiveTableIndex, wlanInterfaceTableSeperation=wlanInterfaceTableSeperation, httpdAccessctrl=httpdAccessctrl, l2tpcActive=l2tpcActive, uploadDownloadExecutetftp=uploadDownloadExecutetftp, vlanInterfaceTableRowStatus=vlanInterfaceTableRowStatus, radiusclientInterimupdate=radiusclientInterimupdate, firewallTableProtocol=firewallTableProtocol, systemContactPhone=systemContactPhone, nodeConfigurationSignallevel=nodeConfigurationSignallevel, clientStatTableRx=clientStatTableRx, userDbTable=userDbTable, zeroconfigStaticipActive=zeroconfigStaticipActive, adminTrapsAdminConf=adminTrapsAdminConf, routeTableEntry=routeTableEntry, ddnsUsername=ddnsUsername, routeTableRowStatus=routeTableRowStatus, olsrGatewayTableActive=olsrGatewayTableActive, firewallTableDstMask=firewallTableDstMask, nodeConfigurationTmipd=nodeConfigurationTmipd, clientInfoTableEntry=clientInfoTableEntry, clientStatTableMac=clientStatTableMac, vlanInterfaceTableName=vlanInterfaceTableName, ethInterfaceTableBridge=ethInterfaceTableBridge, trapTableIndex=trapTableIndex, ddnsActive=ddnsActive, multicastActive=multicastActive, natTableEntry=natTableEntry, wlanInterfaceTableDot1x=wlanInterfaceTableDot1x, olsrInterfaceTableHnaValidity=olsrInterfaceTableHnaValidity, trapWireless=trapWireless, topologyTableLabel=topologyTableLabel, ipAddressesTableRowStatus=ipAddressesTableRowStatus, captiveHttpsActive=captiveHttpsActive, snmpdTableComment=snmpdTableComment, ebTableMatchMac=ebTableMatchMac, wlanInterfaceTableMac=wlanInterfaceTableMac, wmeTableBssCwmaxVo=wmeTableBssCwmaxVo, macaccessTableComment=macaccessTableComment, nodeConfigurationRoutedog=nodeConfigurationRoutedog, statickeyWifi0Key0=statickeyWifi0Key0, nmsAddressTableAddress=nmsAddressTableAddress, olsrTcType=olsrTcType, nodeConfigurationSshd=nodeConfigurationSshd, ethernetInterfaceTable=ethernetInterfaceTable, userGroupTableUpload=userGroupTableUpload, wmeTableCwminBk=wmeTableCwminBk, userGroupTable=userGroupTable, dhcpdTableNetend=dhcpdTableNetend, mlrdNetname=mlrdNetname, pppoeChapPassword=pppoeChapPassword, systemTrapsSystemRestore=systemTrapsSystemRestore, wlanFrequencyAp0TableRowStatus=wlanFrequencyAp0TableRowStatus, signallevelTableDestination=signallevelTableDestination, routeTableDirect=routeTableDirect, vlanInterfaceTableActive=vlanInterfaceTableActive, olsrInterfaceTableMidValidity=olsrInterfaceTableMidValidity, wmeTableAifsnVi=wmeTableAifsnVi, nmsAddressTableIndex=nmsAddressTableIndex, olsrMpr=olsrMpr, shapingMeshRateup=shapingMeshRateup, dnsTableEntry=dnsTableEntry, ipAddressesTableIp=ipAddressesTableIp, radiusclientActive=radiusclientActive, syslogRemoteAddress=syslogRemoteAddress, dhcpdTableRowStatus=dhcpdTableRowStatus, nmsAddressTableInterval=nmsAddressTableInterval, rebootTime=rebootTime, firewallTableEntry=firewallTableEntry, dhcrelayHopcount=dhcrelayHopcount, trapTableRowStatus=trapTableRowStatus, vlanInterfaceTableBridge=vlanInterfaceTableBridge, firewallTableDstIp=firewallTableDstIp, radiusclientTableServertype=radiusclientTableServertype, natTablePort=natTablePort, firewallTableActive=firewallTableActive, wlanInterfaceTableTxPower=wlanInterfaceTableTxPower, radiusclientTableServername=radiusclientTableServername, systemLocation=systemLocation, ipAddressesTableRouted=ipAddressesTableRouted, userGroupDownload=userGroupDownload, uploadDownloadOperationtype=uploadDownloadOperationtype, wlanInterfaceTableActive=wlanInterfaceTableActive, nodeCommandUpload=nodeCommandUpload, clientInfoTableIdletime=clientInfoTableIdletime, shapingActive=shapingActive, dhcpdTableSubnet=dhcpdTableSubnet, radiusclientTable=radiusclientTable, clientStatTableIndex=clientStatTableIndex, userGroupTableComment=userGroupTableComment, nmsAddressTableEntry=nmsAddressTableEntry, pppoeUseChap=pppoeUseChap, resetToDefault=resetToDefault, ebTableDstMac=ebTableDstMac, ethInterfaceTableRowStatus=ethInterfaceTableRowStatus, wmeTableBssCwminVo=wmeTableBssCwminVo, olsrHysteresisActive=olsrHysteresisActive, macaccessTableType=macaccessTableType, userGroupTableIndex=userGroupTableIndex, interfacesTableIndex=interfacesTableIndex, signallevelTableEntry=signallevelTableEntry, advTunningConntrackTcplastackTimeout=advTunningConntrackTcplastackTimeout, advTunningConntrackTcptimewaitTimeout=advTunningConntrackTcptimewaitTimeout, olsrTosValue=olsrTosValue, wlanInterfaceTableComments=wlanInterfaceTableComments)
