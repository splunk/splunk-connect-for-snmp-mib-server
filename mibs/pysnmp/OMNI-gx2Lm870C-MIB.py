#
# PySNMP MIB module OMNI-gx2Lm870C-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/OMNI-gx2Lm870C-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 20:24:15 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ConstraintsUnion, ConstraintsIntersection, ValueRangeConstraint, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ConstraintsUnion", "ConstraintsIntersection", "ValueRangeConstraint", "SingleValueConstraint")
gx2Lm870C, = mibBuilder.importSymbols("GX2HFC-MIB", "gx2Lm870C")
motproxies, gi = mibBuilder.importSymbols("NLS-BBNIDENT-MIB", "motproxies", "gi")
trapText, trapNETrapLastTrapTimeStamp, trapChangedObjectId, trapNetworkElemSerialNum, trapNetworkElemAvailStatus, trapNetworkElemAdminState, trapChangedValueInteger, trapNetworkElemAlarmStatus, trapChangedValueDisplayString, trapNetworkElemModelNumber, trapNetworkElemOperState, trapPerceivedSeverity, trapIdentifier = mibBuilder.importSymbols("NLSBBN-TRAPS-MIB", "trapText", "trapNETrapLastTrapTimeStamp", "trapChangedObjectId", "trapNetworkElemSerialNum", "trapNetworkElemAvailStatus", "trapNetworkElemAdminState", "trapChangedValueInteger", "trapNetworkElemAlarmStatus", "trapChangedValueDisplayString", "trapNetworkElemModelNumber", "trapNetworkElemOperState", "trapPerceivedSeverity", "trapIdentifier")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
sysUpTime, = mibBuilder.importSymbols("SNMPv2-MIB", "sysUpTime")
Gauge32, NotificationType, TimeTicks, ModuleIdentity, NotificationType, Bits, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter32, iso, MibIdentifier, Integer32, Unsigned32, ObjectIdentity, Counter64, IpAddress = mibBuilder.importSymbols("SNMPv2-SMI", "Gauge32", "NotificationType", "TimeTicks", "ModuleIdentity", "NotificationType", "Bits", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter32", "iso", "MibIdentifier", "Integer32", "Unsigned32", "ObjectIdentity", "Counter64", "IpAddress")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
class Float(Counter32):
    pass

gx2Lm870CDescriptor = MibIdentifier((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 10, 1))
gx2lm870CAnalogTable = MibTable((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 10, 2), )
if mibBuilder.loadTexts: gx2lm870CAnalogTable.setStatus('mandatory')
gx2lm870CAnalogEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 10, 2, 1), ).setIndexNames((0, "OMNI-gx2Lm870C-MIB", "gx2Lm870CAnalogTableIndex"))
if mibBuilder.loadTexts: gx2lm870CAnalogEntry.setStatus('mandatory')
gx2lm870CDigitalTable = MibTable((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 10, 3), )
if mibBuilder.loadTexts: gx2lm870CDigitalTable.setStatus('mandatory')
gx2lm870CDigitalEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 10, 3, 2), ).setIndexNames((0, "OMNI-gx2Lm870C-MIB", "gx2Lm870CDigitalTableIndex"))
if mibBuilder.loadTexts: gx2lm870CDigitalEntry.setStatus('mandatory')
gx2lm870CStatusTable = MibTable((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 10, 4), )
if mibBuilder.loadTexts: gx2lm870CStatusTable.setStatus('mandatory')
gx2lm870CStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 10, 4, 3), ).setIndexNames((0, "OMNI-gx2Lm870C-MIB", "gx2Lm870CStatusTableIndex"))
if mibBuilder.loadTexts: gx2lm870CStatusEntry.setStatus('mandatory')
gx2lm870CFactoryTable = MibTable((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 10, 5), )
if mibBuilder.loadTexts: gx2lm870CFactoryTable.setStatus('mandatory')
gx2lm870CFactoryEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 10, 5, 4), ).setIndexNames((0, "OMNI-gx2Lm870C-MIB", "gx2Lm870CFactoryTableIndex"))
if mibBuilder.loadTexts: gx2lm870CFactoryEntry.setStatus('mandatory')
gx2Lm870CAnalogTableIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 10, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: gx2Lm870CAnalogTableIndex.setStatus('mandatory')
lm870ClabelFanCurrent = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 10, 2, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 80))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lm870ClabelFanCurrent.setStatus('optional')
lm870CuomFanCurrent = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 10, 2, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 80))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lm870CuomFanCurrent.setStatus('optional')
lm870CmajorHighFanCurrent = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 10, 2, 1, 4), Float()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lm870CmajorHighFanCurrent.setStatus('mandatory')
lm870CmajorLowFanCurrent = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 10, 2, 1, 5), Float()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lm870CmajorLowFanCurrent.setStatus('mandatory')
lm870CminorHighFanCurrent = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 10, 2, 1, 6), Float()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lm870CminorHighFanCurrent.setStatus('mandatory')
lm870CminorLowFanCurrent = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 10, 2, 1, 7), Float()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lm870CminorLowFanCurrent.setStatus('mandatory')
lm870CcurrentValueFanCurrent = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 10, 2, 1, 8), Float()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lm870CcurrentValueFanCurrent.setStatus('mandatory')
lm870CstateFlagFanCurrent = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 10, 2, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("hidden", 1), ("read-only", 2), ("updateable", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lm870CstateFlagFanCurrent.setStatus('mandatory')
lm870CminValueFanCurrent = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 10, 2, 1, 10), Float()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lm870CminValueFanCurrent.setStatus('mandatory')
lm870CmaxValueFanCurrent = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 10, 2, 1, 11), Float()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lm870CmaxValueFanCurrent.setStatus('mandatory')
lm870CalarmStateFanCurrent = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 10, 2, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("noAlarm", 1), ("majorLowAlarm", 2), ("minorLowAlarm", 3), ("minorHighAlarm", 4), ("majorHighAlarm", 5), ("informational", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lm870CalarmStateFanCurrent.setStatus('mandatory')
lm870Clabel12Volt = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 10, 2, 1, 13), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 80))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lm870Clabel12Volt.setStatus('optional')
lm870Cuom12Volt = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 10, 2, 1, 14), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 80))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lm870Cuom12Volt.setStatus('optional')
lm870CmajorHigh12Volt = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 10, 2, 1, 15), Float()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lm870CmajorHigh12Volt.setStatus('mandatory')
lm870CmajorLow12Volt = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 10, 2, 1, 16), Float()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lm870CmajorLow12Volt.setStatus('mandatory')
lm870CminorHigh12Volt = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 10, 2, 1, 17), Float()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lm870CminorHigh12Volt.setStatus('mandatory')
lm870CminorLow12Volt = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 10, 2, 1, 18), Float()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lm870CminorLow12Volt.setStatus('mandatory')
lm870CcurrentValue12Volt = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 10, 2, 1, 19), Float()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lm870CcurrentValue12Volt.setStatus('mandatory')
lm870CstateFlag12Volt = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 10, 2, 1, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("hidden", 1), ("read-only", 2), ("updateable", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lm870CstateFlag12Volt.setStatus('mandatory')
lm870CminValue12Volt = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 10, 2, 1, 21), Float()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lm870CminValue12Volt.setStatus('mandatory')
lm870CmaxValue12Volt = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 10, 2, 1, 22), Float()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lm870CmaxValue12Volt.setStatus('mandatory')
lm870CalarmState12Volt = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 10, 2, 1, 23), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("noAlarm", 1), ("majorLowAlarm", 2), ("minorLowAlarm", 3), ("minorHighAlarm", 4), ("majorHighAlarm", 5), ("informational", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lm870CalarmState12Volt.setStatus('mandatory')
lm870ClabelModTemp = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 10, 2, 1, 24), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 80))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lm870ClabelModTemp.setStatus('optional')
lm870CuomModTemp = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 10, 2, 1, 25), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 80))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lm870CuomModTemp.setStatus('optional')
lm870CmajorHighModTemp = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 10, 2, 1, 26), Float()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lm870CmajorHighModTemp.setStatus('mandatory')
lm870CmajorLowModTemp = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 10, 2, 1, 27), Float()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lm870CmajorLowModTemp.setStatus('mandatory')
lm870CminorHighModTemp = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 10, 2, 1, 28), Float()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lm870CminorHighModTemp.setStatus('mandatory')
lm870CminorLowModTemp = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 10, 2, 1, 29), Float()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lm870CminorLowModTemp.setStatus('mandatory')
lm870CcurrentValueModTemp = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 10, 2, 1, 30), Float()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lm870CcurrentValueModTemp.setStatus('mandatory')
lm870CstateFlagModTemp = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 10, 2, 1, 31), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("hidden", 1), ("read-only", 2), ("updateable", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lm870CstateFlagModTemp.setStatus('mandatory')
lm870CminValueModTemp = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 10, 2, 1, 32), Float()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lm870CminValueModTemp.setStatus('mandatory')
lm870CmaxValueModTemp = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 10, 2, 1, 33), Float()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lm870CmaxValueModTemp.setStatus('mandatory')
lm870CalarmStateModTemp = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 10, 2, 1, 34), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("noAlarm", 1), ("majorLowAlarm", 2), ("minorLowAlarm", 3), ("minorHighAlarm", 4), ("majorHighAlarm", 5), ("informational", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lm870CalarmStateModTemp.setStatus('mandatory')
lm870ClabelOmiOffset = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 10, 2, 1, 35), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 80))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lm870ClabelOmiOffset.setStatus('optional')
lm870CuomOmiOffset = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 10, 2, 1, 36), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 80))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lm870CuomOmiOffset.setStatus('optional')
lm870CmajorHighOmiOffset = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 10, 2, 1, 37), Float()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lm870CmajorHighOmiOffset.setStatus('mandatory')
lm870CmajorLowOmiOffset = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 10, 2, 1, 38), Float()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lm870CmajorLowOmiOffset.setStatus('mandatory')
lm870CminorHighOmiOffset = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 10, 2, 1, 39), Float()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lm870CminorHighOmiOffset.setStatus('mandatory')
lm870CminorLowOmiOffset = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 10, 2, 1, 40), Float()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lm870CminorLowOmiOffset.setStatus('mandatory')
lm870CcurrentValueOmiOffset = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 10, 2, 1, 41), Float()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lm870CcurrentValueOmiOffset.setStatus('mandatory')
lm870CstateFlagOmiOffset = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 10, 2, 1, 42), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("hidden", 1), ("read-only", 2), ("updateable", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lm870CstateFlagOmiOffset.setStatus('mandatory')
lm870CminValueOmiOffset = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 10, 2, 1, 43), Float()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lm870CminValueOmiOffset.setStatus('mandatory')
lm870CmaxValueOmiOffset = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 10, 2, 1, 44), Float()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lm870CmaxValueOmiOffset.setStatus('mandatory')
lm870CalarmStateOmiOffset = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 10, 2, 1, 45), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("noAlarm", 1), ("majorLowAlarm", 2), ("minorLowAlarm", 3), ("minorHighAlarm", 4), ("majorHighAlarm", 5), ("informational", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lm870CalarmStateOmiOffset.setStatus('mandatory')
lm870ClabelOPTPower = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 10, 2, 1, 46), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 80))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lm870ClabelOPTPower.setStatus('optional')
lm870CuomOPTPower = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 10, 2, 1, 47), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 80))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lm870CuomOPTPower.setStatus('optional')
lm870CmajorHighOPTPower = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 10, 2, 1, 48), Float()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lm870CmajorHighOPTPower.setStatus('mandatory')
lm870CmajorLowOPTPower = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 10, 2, 1, 49), Float()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lm870CmajorLowOPTPower.setStatus('mandatory')
lm870CminorHighOPTPower = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 10, 2, 1, 50), Float()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lm870CminorHighOPTPower.setStatus('mandatory')
lm870CminorLowOPTPower = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 10, 2, 1, 51), Float()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lm870CminorLowOPTPower.setStatus('mandatory')
lm870CcurrentValueOPTPower = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 10, 2, 1, 52), Float()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lm870CcurrentValueOPTPower.setStatus('mandatory')
lm870CstateFlagOPTPower = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 10, 2, 1, 53), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("hidden", 1), ("read-only", 2), ("updateable", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lm870CstateFlagOPTPower.setStatus('mandatory')
lm870CminValueOPTPower = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 10, 2, 1, 54), Float()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lm870CminValueOPTPower.setStatus('mandatory')
lm870CmaxValueOPTPower = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 10, 2, 1, 55), Float()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lm870CmaxValueOPTPower.setStatus('mandatory')
lm870CalarmStateOPTPower = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 10, 2, 1, 56), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("noAlarm", 1), ("majorLowAlarm", 2), ("minorLowAlarm", 3), ("minorHighAlarm", 4), ("majorHighAlarm", 5), ("informational", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lm870CalarmStateOPTPower.setStatus('mandatory')
lm870ClabelLaserBias = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 10, 2, 1, 57), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 80))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lm870ClabelLaserBias.setStatus('optional')
lm870CuomLaserBias = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 10, 2, 1, 58), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 80))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lm870CuomLaserBias.setStatus('optional')
lm870CmajorHighLaserBias = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 10, 2, 1, 59), Float()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lm870CmajorHighLaserBias.setStatus('mandatory')
lm870CmajorLowLaserBias = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 10, 2, 1, 60), Float()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lm870CmajorLowLaserBias.setStatus('mandatory')
lm870CminorHighLaserBias = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 10, 2, 1, 61), Float()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lm870CminorHighLaserBias.setStatus('mandatory')
lm870CminorLowLaserBias = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 10, 2, 1, 62), Float()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lm870CminorLowLaserBias.setStatus('mandatory')
lm870CcurrentValueLaserBias = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 10, 2, 1, 63), Float()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lm870CcurrentValueLaserBias.setStatus('mandatory')
lm870CstateFlagLaserBias = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 10, 2, 1, 64), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("hidden", 1), ("read-only", 2), ("updateable", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lm870CstateFlagLaserBias.setStatus('mandatory')
lm870CminValueLaserBias = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 10, 2, 1, 65), Float()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lm870CminValueLaserBias.setStatus('mandatory')
lm870CmaxValueLaserBias = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 10, 2, 1, 66), Float()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lm870CmaxValueLaserBias.setStatus('mandatory')
lm870CalarmStateLaserBias = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 10, 2, 1, 67), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("noAlarm", 1), ("majorLowAlarm", 2), ("minorLowAlarm", 3), ("minorHighAlarm", 4), ("majorHighAlarm", 5), ("informational", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lm870CalarmStateLaserBias.setStatus('mandatory')
lm870ClabelTecCurrent = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 10, 2, 1, 68), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 80))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lm870ClabelTecCurrent.setStatus('optional')
lm870CuomTecCurrent = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 10, 2, 1, 69), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 80))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lm870CuomTecCurrent.setStatus('optional')
lm870CmajorHighTecCurrent = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 10, 2, 1, 70), Float()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lm870CmajorHighTecCurrent.setStatus('mandatory')
lm870CmajorLowTecCurrent = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 10, 2, 1, 71), Float()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lm870CmajorLowTecCurrent.setStatus('mandatory')
lm870CminorHighTecCurrent = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 10, 2, 1, 72), Float()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lm870CminorHighTecCurrent.setStatus('mandatory')
lm870CminorLowTecCurrent = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 10, 2, 1, 73), Float()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lm870CminorLowTecCurrent.setStatus('mandatory')
lm870CcurrentValueTecCurrent = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 10, 2, 1, 74), Float()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lm870CcurrentValueTecCurrent.setStatus('mandatory')
lm870CstateFlagTecCurrent = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 10, 2, 1, 75), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("hidden", 1), ("read-only", 2), ("updateable", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lm870CstateFlagTecCurrent.setStatus('mandatory')
lm870CminValueTecCurrent = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 10, 2, 1, 76), Float()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lm870CminValueTecCurrent.setStatus('mandatory')
lm870CmaxValueTecCurrent = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 10, 2, 1, 77), Float()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lm870CmaxValueTecCurrent.setStatus('mandatory')
lm870CalarmStateTecCurrent = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 10, 2, 1, 78), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("noAlarm", 1), ("majorLowAlarm", 2), ("minorLowAlarm", 3), ("minorHighAlarm", 4), ("majorHighAlarm", 5), ("informational", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lm870CalarmStateTecCurrent.setStatus('mandatory')
lm870ClabelOmiAlarmSetpoint = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 10, 2, 1, 79), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 80))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lm870ClabelOmiAlarmSetpoint.setStatus('optional')
lm870CuomOmiAlarmSetpoint = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 10, 2, 1, 80), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 80))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lm870CuomOmiAlarmSetpoint.setStatus('optional')
lm870CmajorHighOmiAlarmSetpoint = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 10, 2, 1, 81), Float()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lm870CmajorHighOmiAlarmSetpoint.setStatus('mandatory')
lm870CmajorLowOmiAlarmSetpoint = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 10, 2, 1, 82), Float()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lm870CmajorLowOmiAlarmSetpoint.setStatus('mandatory')
lm870CminorHighOmiAlarmSetpoint = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 10, 2, 1, 83), Float()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lm870CminorHighOmiAlarmSetpoint.setStatus('mandatory')
lm870CminorLowOmiAlarmSetpoint = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 10, 2, 1, 84), Float()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lm870CminorLowOmiAlarmSetpoint.setStatus('mandatory')
lm870CcurrentValueOmiAlarmSetpoint = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 10, 2, 1, 85), Float()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lm870CcurrentValueOmiAlarmSetpoint.setStatus('mandatory')
lm870CstateFlagOmiAlarmSetpoint = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 10, 2, 1, 86), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("hidden", 1), ("read-only", 2), ("updateable", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lm870CstateFlagOmiAlarmSetpoint.setStatus('mandatory')
lm870CminValueOmiAlarmSetpoint = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 10, 2, 1, 87), Float()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lm870CminValueOmiAlarmSetpoint.setStatus('mandatory')
lm870CmaxValueOmiAlarmSetpoint = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 10, 2, 1, 88), Float()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lm870CmaxValueOmiAlarmSetpoint.setStatus('mandatory')
lm870CalarmStateOmiAlarmSetpoint = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 10, 2, 1, 89), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("noAlarm", 1), ("majorLowAlarm", 2), ("minorLowAlarm", 3), ("minorHighAlarm", 4), ("majorHighAlarm", 5), ("informational", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lm870CalarmStateOmiAlarmSetpoint.setStatus('mandatory')
gx2Lm870CDigitalTableIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 10, 3, 2, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: gx2Lm870CDigitalTableIndex.setStatus('mandatory')
lm870ClabelOMIOffsetAlarms = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 10, 3, 2, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 80))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lm870ClabelOMIOffsetAlarms.setStatus('optional')
lm870CenumOMIOffsetAlarms = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 10, 3, 2, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 80))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lm870CenumOMIOffsetAlarms.setStatus('optional')
lm870CvalueOMIOffsetAlarms = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 10, 3, 2, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("off", 1), ("on", 2), ("set", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lm870CvalueOMIOffsetAlarms.setStatus('mandatory')
lm870CstateFlagOMIOffsetAlarms = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 10, 3, 2, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("hidden", 1), ("read-only", 2), ("updateable", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lm870CstateFlagOMIOffsetAlarms.setStatus('mandatory')
lm870ClabelFactoryDefault = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 10, 3, 2, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 80))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lm870ClabelFactoryDefault.setStatus('optional')
lm870CenumFactoryDefault = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 10, 3, 2, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 80))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lm870CenumFactoryDefault.setStatus('optional')
lm870CvalueFactoryDefault = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 10, 3, 2, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("off", 1), ("on", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lm870CvalueFactoryDefault.setStatus('mandatory')
lm870CstateFlagFactoryDefault = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 10, 3, 2, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("hidden", 1), ("read-only", 2), ("updateable", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lm870CstateFlagFactoryDefault.setStatus('mandatory')
lm870ClabelOMISetpoint = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 10, 3, 2, 10), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 80))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lm870ClabelOMISetpoint.setStatus('obsolete')
lm870CenumOMISetpoint = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 10, 3, 2, 11), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 80))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lm870CenumOMISetpoint.setStatus('obsolete')
lm870CvalueOMISetpoint = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 10, 3, 2, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lm870CvalueOMISetpoint.setStatus('obsolete')
lm870CstateFlagOMISetpoint = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 10, 3, 2, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("hidden", 1), ("read-only", 2), ("updateable", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lm870CstateFlagOMISetpoint.setStatus('obsolete')
gx2Lm870CStatusTableIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 10, 4, 3, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: gx2Lm870CStatusTableIndex.setStatus('mandatory')
lm870ClabelBoot = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 10, 4, 3, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 80))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lm870ClabelBoot.setStatus('optional')
lm870CvalueBoot = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 10, 4, 3, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("ok", 1), ("undetermined", 2), ("warning", 3), ("minor", 4), ("major", 5), ("critical", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lm870CvalueBoot.setStatus('mandatory')
lm870CstateflagBoot = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 10, 4, 3, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("hidden", 1), ("read-only", 2), ("updateable", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lm870CstateflagBoot.setStatus('mandatory')
lm870ClabelFlash = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 10, 4, 3, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 80))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lm870ClabelFlash.setStatus('optional')
lm870CvalueFlash = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 10, 4, 3, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("ok", 1), ("undetermined", 2), ("warning", 3), ("minor", 4), ("major", 5), ("critical", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lm870CvalueFlash.setStatus('mandatory')
lm870CstateflagFlash = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 10, 4, 3, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("hidden", 1), ("read-only", 2), ("updateable", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lm870CstateflagFlash.setStatus('mandatory')
lm870ClabelRFOverload = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 10, 4, 3, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 80))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lm870ClabelRFOverload.setStatus('optional')
lm870CvalueRFOverload = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 10, 4, 3, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("ok", 1), ("undetermined", 2), ("warning", 3), ("minor", 4), ("major", 5), ("critical", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lm870CvalueRFOverload.setStatus('mandatory')
lm870CstateflagRFOverload = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 10, 4, 3, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("hidden", 1), ("read-only", 2), ("updateable", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lm870CstateflagRFOverload.setStatus('mandatory')
lm870ClabelRFPower = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 10, 4, 3, 11), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 80))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lm870ClabelRFPower.setStatus('optional')
lm870CvalueRFPower = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 10, 4, 3, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("ok", 1), ("undetermined", 2), ("warning", 3), ("minor", 4), ("major", 5), ("critical", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lm870CvalueRFPower.setStatus('mandatory')
lm870CstateflagRFPower = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 10, 4, 3, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("hidden", 1), ("read-only", 2), ("updateable", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lm870CstateflagRFPower.setStatus('mandatory')
lm870ClabelFactoryDataCRC = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 10, 4, 3, 14), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 80))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lm870ClabelFactoryDataCRC.setStatus('optional')
lm870CvalueFactoryDataCRC = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 10, 4, 3, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("ok", 1), ("undetermined", 2), ("warning", 3), ("minor", 4), ("major", 5), ("critical", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lm870CvalueFactoryDataCRC.setStatus('mandatory')
lm870CstateflagFactoryDataCRC = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 10, 4, 3, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("hidden", 1), ("read-only", 2), ("updateable", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lm870CstateflagFactoryDataCRC.setStatus('mandatory')
lm870ClabelAlarmDataCrc = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 10, 4, 3, 17), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 80))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lm870ClabelAlarmDataCrc.setStatus('optional')
lm870CvalueAlarmDataCrc = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 10, 4, 3, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("ok", 1), ("undetermined", 2), ("warning", 3), ("minor", 4), ("major", 5), ("critical", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lm870CvalueAlarmDataCrc.setStatus('mandatory')
lm870CstateflagAlarmDataCrc = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 10, 4, 3, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("hidden", 1), ("read-only", 2), ("updateable", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lm870CstateflagAlarmDataCrc.setStatus('mandatory')
lm870ClabelModSetDataCRC = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 10, 4, 3, 20), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 80))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lm870ClabelModSetDataCRC.setStatus('optional')
lm870CvalueModSetDataCRC = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 10, 4, 3, 21), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("ok", 1), ("undetermined", 2), ("warning", 3), ("minor", 4), ("major", 5), ("critical", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lm870CvalueModSetDataCRC.setStatus('mandatory')
lm870CstateflagModSetDataCRC = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 10, 4, 3, 22), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("hidden", 1), ("read-only", 2), ("updateable", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lm870CstateflagModSetDataCRC.setStatus('mandatory')
lm870ClabelOptCalDataCRC = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 10, 4, 3, 23), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 80))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lm870ClabelOptCalDataCRC.setStatus('optional')
lm870CvalueOptCalDataCRC = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 10, 4, 3, 24), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("ok", 1), ("undetermined", 2), ("warning", 3), ("minor", 4), ("major", 5), ("critical", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lm870CvalueOptCalDataCRC.setStatus('mandatory')
lm870CstateflagOptCalDataCRC = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 10, 4, 3, 25), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("hidden", 1), ("read-only", 2), ("updateable", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lm870CstateflagOptCalDataCRC.setStatus('mandatory')
lm870ClabelRFCalDataCRC = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 10, 4, 3, 26), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 80))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lm870ClabelRFCalDataCRC.setStatus('optional')
lm870CvalueRFCalDataCRC = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 10, 4, 3, 27), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("ok", 1), ("undetermined", 2), ("warning", 3), ("minor", 4), ("major", 5), ("critical", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lm870CvalueRFCalDataCRC.setStatus('mandatory')
lm870CstateflagRFCalDataCRC = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 10, 4, 3, 28), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("hidden", 1), ("read-only", 2), ("updateable", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lm870CstateflagRFCalDataCRC.setStatus('mandatory')
gx2Lm870CFactoryTableIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 10, 5, 4, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: gx2Lm870CFactoryTableIndex.setStatus('mandatory')
lm870CbootControlByte = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 10, 5, 4, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lm870CbootControlByte.setStatus('mandatory')
lm870CbootStatusByte = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 10, 5, 4, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lm870CbootStatusByte.setStatus('mandatory')
lm870Cbank1CRC = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 10, 5, 4, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lm870Cbank1CRC.setStatus('mandatory')
lm870Cbank2CRC = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 10, 5, 4, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lm870Cbank2CRC.setStatus('mandatory')
lm870CprgEEPROMByte = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 10, 5, 4, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lm870CprgEEPROMByte.setStatus('mandatory')
lm870CfactoryCRC = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 10, 5, 4, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lm870CfactoryCRC.setStatus('mandatory')
lm870CcalculateCRC = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 10, 5, 4, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("factory", 1), ("settings", 2), ("alarm", 3), ("opticalCal", 4), ("rfCal", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lm870CcalculateCRC.setStatus('mandatory')
lm870ChourMeter = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 10, 5, 4, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lm870ChourMeter.setStatus('mandatory')
lm870CflashPrgCntA = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 10, 5, 4, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lm870CflashPrgCntA.setStatus('mandatory')
lm870CflashPrgCntB = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 10, 5, 4, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lm870CflashPrgCntB.setStatus('mandatory')
lm870CflashBankARev = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 10, 5, 4, 12), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 80))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lm870CflashBankARev.setStatus('mandatory')
lm870CflashBankBRev = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 10, 5, 4, 13), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 80))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lm870CflashBankBRev.setStatus('mandatory')
trapLM870CConfigChangeInteger = NotificationType((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 10) + (0,1)).setObjects(("NLSBBN-TRAPS-MIB", "trapIdentifier"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemModelNumber"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemSerialNum"), ("NLSBBN-TRAPS-MIB", "trapPerceivedSeverity"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemOperState"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemAlarmStatus"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemAdminState"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemAvailStatus"), ("NLSBBN-TRAPS-MIB", "trapText"), ("NLSBBN-TRAPS-MIB", "trapChangedObjectId"), ("NLSBBN-TRAPS-MIB", "trapChangedValueInteger"), ("NLSBBN-TRAPS-MIB", "trapNETrapLastTrapTimeStamp"))
trapLMCConfigChangeDisplayString = NotificationType((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 10) + (0,2)).setObjects(("NLSBBN-TRAPS-MIB", "trapIdentifier"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemModelNumber"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemSerialNum"), ("NLSBBN-TRAPS-MIB", "trapPerceivedSeverity"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemOperState"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemAlarmStatus"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemAdminState"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemAvailStatus"), ("NLSBBN-TRAPS-MIB", "trapText"), ("NLSBBN-TRAPS-MIB", "trapChangedObjectId"), ("NLSBBN-TRAPS-MIB", "trapChangedValueDisplayString"), ("NLSBBN-TRAPS-MIB", "trapNETrapLastTrapTimeStamp"))
trapLMCFanCurrentAlarm = NotificationType((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 10) + (0,3)).setObjects(("NLSBBN-TRAPS-MIB", "trapIdentifier"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemModelNumber"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemSerialNum"), ("NLSBBN-TRAPS-MIB", "trapPerceivedSeverity"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemOperState"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemAlarmStatus"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemAdminState"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemAvailStatus"), ("NLSBBN-TRAPS-MIB", "trapText"), ("NLSBBN-TRAPS-MIB", "trapChangedObjectId"), ("NLSBBN-TRAPS-MIB", "trapChangedValueInteger"), ("NLSBBN-TRAPS-MIB", "trapNETrapLastTrapTimeStamp"))
trapLMC12vAlarm = NotificationType((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 10) + (0,4)).setObjects(("NLSBBN-TRAPS-MIB", "trapIdentifier"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemModelNumber"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemSerialNum"), ("NLSBBN-TRAPS-MIB", "trapPerceivedSeverity"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemOperState"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemAlarmStatus"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemAdminState"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemAvailStatus"), ("NLSBBN-TRAPS-MIB", "trapText"), ("NLSBBN-TRAPS-MIB", "trapChangedObjectId"), ("NLSBBN-TRAPS-MIB", "trapChangedValueInteger"), ("NLSBBN-TRAPS-MIB", "trapNETrapLastTrapTimeStamp"))
trapLMCModuleTempAlarm = NotificationType((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 10) + (0,5)).setObjects(("NLSBBN-TRAPS-MIB", "trapIdentifier"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemModelNumber"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemSerialNum"), ("NLSBBN-TRAPS-MIB", "trapPerceivedSeverity"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemOperState"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemAlarmStatus"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemAdminState"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemAvailStatus"), ("NLSBBN-TRAPS-MIB", "trapText"), ("NLSBBN-TRAPS-MIB", "trapChangedObjectId"), ("NLSBBN-TRAPS-MIB", "trapChangedValueInteger"), ("NLSBBN-TRAPS-MIB", "trapNETrapLastTrapTimeStamp"))
trapLMCRFPowerAlarm = NotificationType((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 10) + (0,6)).setObjects(("NLSBBN-TRAPS-MIB", "trapIdentifier"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemModelNumber"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemSerialNum"), ("NLSBBN-TRAPS-MIB", "trapPerceivedSeverity"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemOperState"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemAlarmStatus"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemAdminState"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemAvailStatus"), ("NLSBBN-TRAPS-MIB", "trapText"), ("NLSBBN-TRAPS-MIB", "trapChangedObjectId"), ("NLSBBN-TRAPS-MIB", "trapChangedValueInteger"), ("NLSBBN-TRAPS-MIB", "trapNETrapLastTrapTimeStamp"))
trapLMCOPTPowerAlarm = NotificationType((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 10) + (0,7)).setObjects(("NLSBBN-TRAPS-MIB", "trapIdentifier"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemModelNumber"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemSerialNum"), ("NLSBBN-TRAPS-MIB", "trapPerceivedSeverity"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemOperState"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemAlarmStatus"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemAdminState"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemAvailStatus"), ("NLSBBN-TRAPS-MIB", "trapText"), ("NLSBBN-TRAPS-MIB", "trapChangedObjectId"), ("NLSBBN-TRAPS-MIB", "trapChangedValueInteger"), ("NLSBBN-TRAPS-MIB", "trapNETrapLastTrapTimeStamp"))
trapLMCLaserBiasAlarm = NotificationType((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 10) + (0,8)).setObjects(("NLSBBN-TRAPS-MIB", "trapIdentifier"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemModelNumber"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemSerialNum"), ("NLSBBN-TRAPS-MIB", "trapPerceivedSeverity"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemOperState"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemAlarmStatus"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemAdminState"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemAvailStatus"), ("NLSBBN-TRAPS-MIB", "trapText"), ("NLSBBN-TRAPS-MIB", "trapChangedObjectId"), ("NLSBBN-TRAPS-MIB", "trapChangedValueInteger"), ("NLSBBN-TRAPS-MIB", "trapNETrapLastTrapTimeStamp"))
trapLMCTECCurrentAlarm = NotificationType((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 10) + (0,9)).setObjects(("NLSBBN-TRAPS-MIB", "trapIdentifier"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemModelNumber"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemSerialNum"), ("NLSBBN-TRAPS-MIB", "trapPerceivedSeverity"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemOperState"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemAlarmStatus"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemAdminState"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemAvailStatus"), ("NLSBBN-TRAPS-MIB", "trapText"), ("NLSBBN-TRAPS-MIB", "trapChangedObjectId"), ("NLSBBN-TRAPS-MIB", "trapChangedValueInteger"), ("NLSBBN-TRAPS-MIB", "trapNETrapLastTrapTimeStamp"))
trapLMCFlashAlarm = NotificationType((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 10) + (0,10)).setObjects(("NLSBBN-TRAPS-MIB", "trapIdentifier"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemModelNumber"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemSerialNum"), ("NLSBBN-TRAPS-MIB", "trapPerceivedSeverity"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemOperState"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemAlarmStatus"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemAdminState"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemAvailStatus"), ("NLSBBN-TRAPS-MIB", "trapText"), ("NLSBBN-TRAPS-MIB", "trapChangedObjectId"), ("NLSBBN-TRAPS-MIB", "trapChangedValueInteger"), ("NLSBBN-TRAPS-MIB", "trapNETrapLastTrapTimeStamp"))
trapLMCBankBootAlarm = NotificationType((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 10) + (0,11)).setObjects(("NLSBBN-TRAPS-MIB", "trapIdentifier"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemModelNumber"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemSerialNum"), ("NLSBBN-TRAPS-MIB", "trapPerceivedSeverity"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemOperState"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemAlarmStatus"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemAdminState"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemAvailStatus"), ("NLSBBN-TRAPS-MIB", "trapText"), ("NLSBBN-TRAPS-MIB", "trapChangedObjectId"), ("NLSBBN-TRAPS-MIB", "trapChangedValueInteger"), ("NLSBBN-TRAPS-MIB", "trapNETrapLastTrapTimeStamp"))
trapLMCAlarmDataCRCAlarm = NotificationType((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 10) + (0,12)).setObjects(("NLSBBN-TRAPS-MIB", "trapIdentifier"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemModelNumber"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemSerialNum"), ("NLSBBN-TRAPS-MIB", "trapPerceivedSeverity"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemOperState"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemAlarmStatus"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemAdminState"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemAvailStatus"), ("NLSBBN-TRAPS-MIB", "trapText"), ("NLSBBN-TRAPS-MIB", "trapChangedObjectId"), ("NLSBBN-TRAPS-MIB", "trapChangedValueInteger"), ("NLSBBN-TRAPS-MIB", "trapNETrapLastTrapTimeStamp"))
trapLMCModSetDataCRCAlarm = NotificationType((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 10) + (0,13)).setObjects(("NLSBBN-TRAPS-MIB", "trapIdentifier"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemModelNumber"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemSerialNum"), ("NLSBBN-TRAPS-MIB", "trapPerceivedSeverity"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemOperState"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemAlarmStatus"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemAdminState"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemAvailStatus"), ("NLSBBN-TRAPS-MIB", "trapText"), ("NLSBBN-TRAPS-MIB", "trapChangedObjectId"), ("NLSBBN-TRAPS-MIB", "trapChangedValueInteger"), ("NLSBBN-TRAPS-MIB", "trapNETrapLastTrapTimeStamp"))
trapLMCFactoryDataCRCAlarm = NotificationType((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 10) + (0,14)).setObjects(("NLSBBN-TRAPS-MIB", "trapIdentifier"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemModelNumber"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemSerialNum"), ("NLSBBN-TRAPS-MIB", "trapPerceivedSeverity"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemOperState"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemAlarmStatus"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemAdminState"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemAvailStatus"), ("NLSBBN-TRAPS-MIB", "trapText"), ("NLSBBN-TRAPS-MIB", "trapChangedObjectId"), ("NLSBBN-TRAPS-MIB", "trapChangedValueInteger"), ("NLSBBN-TRAPS-MIB", "trapNETrapLastTrapTimeStamp"))
trapLMCResetFactoryDefaultAlarm = NotificationType((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 10) + (0,15)).setObjects(("NLSBBN-TRAPS-MIB", "trapIdentifier"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemModelNumber"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemSerialNum"), ("NLSBBN-TRAPS-MIB", "trapPerceivedSeverity"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemOperState"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemAlarmStatus"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemAdminState"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemAvailStatus"), ("NLSBBN-TRAPS-MIB", "trapText"), ("NLSBBN-TRAPS-MIB", "trapChangedObjectId"), ("NLSBBN-TRAPS-MIB", "trapChangedValueInteger"), ("NLSBBN-TRAPS-MIB", "trapNETrapLastTrapTimeStamp"))
trapLMCOPCalDataCRCAlarm = NotificationType((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 10) + (0,16)).setObjects(("NLSBBN-TRAPS-MIB", "trapIdentifier"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemModelNumber"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemSerialNum"), ("NLSBBN-TRAPS-MIB", "trapPerceivedSeverity"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemOperState"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemAlarmStatus"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemAdminState"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemAvailStatus"), ("NLSBBN-TRAPS-MIB", "trapText"), ("NLSBBN-TRAPS-MIB", "trapChangedObjectId"), ("NLSBBN-TRAPS-MIB", "trapChangedValueInteger"), ("NLSBBN-TRAPS-MIB", "trapNETrapLastTrapTimeStamp"))
trapLMCRFCalDataCRCAlarm = NotificationType((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 10) + (0,17)).setObjects(("NLSBBN-TRAPS-MIB", "trapIdentifier"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemModelNumber"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemSerialNum"), ("NLSBBN-TRAPS-MIB", "trapPerceivedSeverity"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemOperState"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemAlarmStatus"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemAdminState"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemAvailStatus"), ("NLSBBN-TRAPS-MIB", "trapText"), ("NLSBBN-TRAPS-MIB", "trapChangedObjectId"), ("NLSBBN-TRAPS-MIB", "trapChangedValueInteger"), ("NLSBBN-TRAPS-MIB", "trapNETrapLastTrapTimeStamp"))
trapLMCRFOverloadAlarm = NotificationType((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 10) + (0,18)).setObjects(("NLSBBN-TRAPS-MIB", "trapIdentifier"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemModelNumber"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemSerialNum"), ("NLSBBN-TRAPS-MIB", "trapPerceivedSeverity"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemOperState"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemAlarmStatus"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemAdminState"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemAvailStatus"), ("NLSBBN-TRAPS-MIB", "trapText"), ("NLSBBN-TRAPS-MIB", "trapChangedObjectId"), ("NLSBBN-TRAPS-MIB", "trapChangedValueInteger"), ("NLSBBN-TRAPS-MIB", "trapNETrapLastTrapTimeStamp"))
trapLMCOMIoffsetAlarm = NotificationType((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 10) + (0,19)).setObjects(("NLSBBN-TRAPS-MIB", "trapIdentifier"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemModelNumber"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemSerialNum"), ("NLSBBN-TRAPS-MIB", "trapPerceivedSeverity"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemOperState"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemAlarmStatus"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemAdminState"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemAvailStatus"), ("NLSBBN-TRAPS-MIB", "trapText"), ("NLSBBN-TRAPS-MIB", "trapChangedObjectId"), ("NLSBBN-TRAPS-MIB", "trapChangedValueInteger"), ("NLSBBN-TRAPS-MIB", "trapNETrapLastTrapTimeStamp"))
mibBuilder.exportSymbols("OMNI-gx2Lm870C-MIB", trapLMC12vAlarm=trapLMC12vAlarm, lm870CminValueFanCurrent=lm870CminValueFanCurrent, lm870CminorHighFanCurrent=lm870CminorHighFanCurrent, lm870CminorHigh12Volt=lm870CminorHigh12Volt, lm870CcalculateCRC=lm870CcalculateCRC, lm870CstateFlagOPTPower=lm870CstateFlagOPTPower, lm870CalarmStateModTemp=lm870CalarmStateModTemp, lm870CmajorHighTecCurrent=lm870CmajorHighTecCurrent, lm870CcurrentValueOPTPower=lm870CcurrentValueOPTPower, lm870CalarmStateLaserBias=lm870CalarmStateLaserBias, lm870CalarmStateOPTPower=lm870CalarmStateOPTPower, lm870CcurrentValueModTemp=lm870CcurrentValueModTemp, trapLMCModuleTempAlarm=trapLMCModuleTempAlarm, lm870CvalueFlash=lm870CvalueFlash, lm870ClabelRFPower=lm870ClabelRFPower, lm870ClabelRFOverload=lm870ClabelRFOverload, lm870CflashPrgCntA=lm870CflashPrgCntA, lm870ClabelRFCalDataCRC=lm870ClabelRFCalDataCRC, lm870CmaxValueModTemp=lm870CmaxValueModTemp, lm870CminorHighLaserBias=lm870CminorHighLaserBias, lm870CmajorLowLaserBias=lm870CmajorLowLaserBias, lm870CstateflagRFCalDataCRC=lm870CstateflagRFCalDataCRC, lm870CmaxValueLaserBias=lm870CmaxValueLaserBias, lm870CfactoryCRC=lm870CfactoryCRC, trapLMCFlashAlarm=trapLMCFlashAlarm, lm870CalarmStateOmiAlarmSetpoint=lm870CalarmStateOmiAlarmSetpoint, lm870CmajorLowOmiOffset=lm870CmajorLowOmiOffset, lm870ClabelOptCalDataCRC=lm870ClabelOptCalDataCRC, lm870CmaxValueOmiAlarmSetpoint=lm870CmaxValueOmiAlarmSetpoint, lm870CmajorLowOmiAlarmSetpoint=lm870CmajorLowOmiAlarmSetpoint, lm870CstateFlagOMISetpoint=lm870CstateFlagOMISetpoint, lm870CminValueTecCurrent=lm870CminValueTecCurrent, lm870CmajorHighFanCurrent=lm870CmajorHighFanCurrent, lm870CmajorHigh12Volt=lm870CmajorHigh12Volt, lm870CuomOmiOffset=lm870CuomOmiOffset, gx2lm870CAnalogEntry=gx2lm870CAnalogEntry, lm870CminValueLaserBias=lm870CminValueLaserBias, lm870CstateFlagOmiAlarmSetpoint=lm870CstateFlagOmiAlarmSetpoint, lm870CenumFactoryDefault=lm870CenumFactoryDefault, lm870CalarmStateOmiOffset=lm870CalarmStateOmiOffset, lm870CstateflagFlash=lm870CstateflagFlash, lm870CstateFlagFanCurrent=lm870CstateFlagFanCurrent, gx2lm870CFactoryTable=gx2lm870CFactoryTable, lm870CmaxValueOmiOffset=lm870CmaxValueOmiOffset, lm870CmajorHighLaserBias=lm870CmajorHighLaserBias, lm870CstateflagModSetDataCRC=lm870CstateflagModSetDataCRC, trapLMCTECCurrentAlarm=trapLMCTECCurrentAlarm, lm870ClabelModTemp=lm870ClabelModTemp, lm870CcurrentValueFanCurrent=lm870CcurrentValueFanCurrent, lm870CminorLowOmiOffset=lm870CminorLowOmiOffset, lm870CstateflagBoot=lm870CstateflagBoot, lm870CstateflagOptCalDataCRC=lm870CstateflagOptCalDataCRC, lm870ClabelModSetDataCRC=lm870ClabelModSetDataCRC, gx2lm870CStatusTable=gx2lm870CStatusTable, lm870CmaxValueFanCurrent=lm870CmaxValueFanCurrent, trapLMCBankBootAlarm=trapLMCBankBootAlarm, lm870CstateFlagLaserBias=lm870CstateFlagLaserBias, lm870CuomLaserBias=lm870CuomLaserBias, lm870CminorLow12Volt=lm870CminorLow12Volt, trapLMCLaserBiasAlarm=trapLMCLaserBiasAlarm, lm870CminorLowOmiAlarmSetpoint=lm870CminorLowOmiAlarmSetpoint, lm870CminValueOPTPower=lm870CminValueOPTPower, lm870Cbank2CRC=lm870Cbank2CRC, lm870CvalueOMISetpoint=lm870CvalueOMISetpoint, lm870CflashBankBRev=lm870CflashBankBRev, lm870Clabel12Volt=lm870Clabel12Volt, lm870CcurrentValueOmiAlarmSetpoint=lm870CcurrentValueOmiAlarmSetpoint, trapLMCRFCalDataCRCAlarm=trapLMCRFCalDataCRCAlarm, lm870ClabelFactoryDefault=lm870ClabelFactoryDefault, lm870Cuom12Volt=lm870Cuom12Volt, lm870CmajorHighModTemp=lm870CmajorHighModTemp, lm870CminorLowModTemp=lm870CminorLowModTemp, trapLMCOPTPowerAlarm=trapLMCOPTPowerAlarm, trapLMCModSetDataCRCAlarm=trapLMCModSetDataCRCAlarm, lm870CminValueOmiAlarmSetpoint=lm870CminValueOmiAlarmSetpoint, gx2Lm870CAnalogTableIndex=gx2Lm870CAnalogTableIndex, lm870CalarmStateFanCurrent=lm870CalarmStateFanCurrent, trapLMCOPCalDataCRCAlarm=trapLMCOPCalDataCRCAlarm, lm870ClabelTecCurrent=lm870ClabelTecCurrent, lm870CuomOmiAlarmSetpoint=lm870CuomOmiAlarmSetpoint, lm870ClabelAlarmDataCrc=lm870ClabelAlarmDataCrc, trapLMCResetFactoryDefaultAlarm=trapLMCResetFactoryDefaultAlarm, lm870CvalueModSetDataCRC=lm870CvalueModSetDataCRC, lm870ChourMeter=lm870ChourMeter, lm870CcurrentValueTecCurrent=lm870CcurrentValueTecCurrent, gx2Lm870CDescriptor=gx2Lm870CDescriptor, lm870CmajorHighOmiAlarmSetpoint=lm870CmajorHighOmiAlarmSetpoint, lm870CstateflagFactoryDataCRC=lm870CstateflagFactoryDataCRC, lm870CminValueOmiOffset=lm870CminValueOmiOffset, gx2lm870CFactoryEntry=gx2lm870CFactoryEntry, trapLMCConfigChangeDisplayString=trapLMCConfigChangeDisplayString, lm870CvalueFactoryDataCRC=lm870CvalueFactoryDataCRC, lm870CflashBankARev=lm870CflashBankARev, lm870CstateFlagOMIOffsetAlarms=lm870CstateFlagOMIOffsetAlarms, gx2Lm870CStatusTableIndex=gx2Lm870CStatusTableIndex, lm870CstateFlagFactoryDefault=lm870CstateFlagFactoryDefault, lm870CvalueFactoryDefault=lm870CvalueFactoryDefault, lm870CminorHighTecCurrent=lm870CminorHighTecCurrent, lm870CminorLowTecCurrent=lm870CminorLowTecCurrent, lm870CuomTecCurrent=lm870CuomTecCurrent, lm870CmajorLowTecCurrent=lm870CmajorLowTecCurrent, lm870CvalueBoot=lm870CvalueBoot, lm870CminorHighOPTPower=lm870CminorHighOPTPower, lm870CmajorHighOmiOffset=lm870CmajorHighOmiOffset, trapLMCFactoryDataCRCAlarm=trapLMCFactoryDataCRCAlarm, trapLM870CConfigChangeInteger=trapLM870CConfigChangeInteger, lm870CstateflagRFPower=lm870CstateflagRFPower, lm870ClabelFanCurrent=lm870ClabelFanCurrent, gx2Lm870CDigitalTableIndex=gx2Lm870CDigitalTableIndex, Float=Float, lm870CmajorLowFanCurrent=lm870CmajorLowFanCurrent, trapLMCFanCurrentAlarm=trapLMCFanCurrentAlarm, lm870CenumOMIOffsetAlarms=lm870CenumOMIOffsetAlarms, lm870CvalueOMIOffsetAlarms=lm870CvalueOMIOffsetAlarms, lm870CalarmState12Volt=lm870CalarmState12Volt, lm870CenumOMISetpoint=lm870CenumOMISetpoint, lm870CminorHighModTemp=lm870CminorHighModTemp, lm870CminorHighOmiOffset=lm870CminorHighOmiOffset, lm870CstateflagRFOverload=lm870CstateflagRFOverload, trapLMCRFPowerAlarm=trapLMCRFPowerAlarm, lm870CvalueOptCalDataCRC=lm870CvalueOptCalDataCRC, lm870CminorLowFanCurrent=lm870CminorLowFanCurrent, lm870CmaxValueTecCurrent=lm870CmaxValueTecCurrent, lm870CstateflagAlarmDataCrc=lm870CstateflagAlarmDataCrc, lm870ClabelFactoryDataCRC=lm870ClabelFactoryDataCRC, lm870ClabelOmiOffset=lm870ClabelOmiOffset, lm870CmajorHighOPTPower=lm870CmajorHighOPTPower, lm870CstateFlagOmiOffset=lm870CstateFlagOmiOffset, lm870CminorHighOmiAlarmSetpoint=lm870CminorHighOmiAlarmSetpoint, lm870ClabelOPTPower=lm870ClabelOPTPower, gx2lm870CDigitalTable=gx2lm870CDigitalTable, lm870CvalueRFPower=lm870CvalueRFPower, lm870Cbank1CRC=lm870Cbank1CRC, lm870CuomModTemp=lm870CuomModTemp, trapLMCOMIoffsetAlarm=trapLMCOMIoffsetAlarm, gx2lm870CStatusEntry=gx2lm870CStatusEntry, lm870CcurrentValueLaserBias=lm870CcurrentValueLaserBias, lm870CstateFlagModTemp=lm870CstateFlagModTemp, lm870CstateFlagTecCurrent=lm870CstateFlagTecCurrent, lm870ClabelBoot=lm870ClabelBoot, lm870CcurrentValue12Volt=lm870CcurrentValue12Volt, lm870CminValueModTemp=lm870CminValueModTemp, lm870CbootStatusByte=lm870CbootStatusByte, trapLMCAlarmDataCRCAlarm=trapLMCAlarmDataCRCAlarm, lm870CmajorLowOPTPower=lm870CmajorLowOPTPower, lm870CcurrentValueOmiOffset=lm870CcurrentValueOmiOffset, lm870CvalueAlarmDataCrc=lm870CvalueAlarmDataCrc, lm870ClabelOmiAlarmSetpoint=lm870ClabelOmiAlarmSetpoint, lm870CvalueRFOverload=lm870CvalueRFOverload, gx2lm870CAnalogTable=gx2lm870CAnalogTable, lm870ClabelOMISetpoint=lm870ClabelOMISetpoint, gx2Lm870CFactoryTableIndex=gx2Lm870CFactoryTableIndex, lm870CmaxValue12Volt=lm870CmaxValue12Volt, lm870CminorLowOPTPower=lm870CminorLowOPTPower, lm870CmaxValueOPTPower=lm870CmaxValueOPTPower, lm870CbootControlByte=lm870CbootControlByte, lm870CminorLowLaserBias=lm870CminorLowLaserBias, lm870CprgEEPROMByte=lm870CprgEEPROMByte, lm870ClabelOMIOffsetAlarms=lm870ClabelOMIOffsetAlarms, lm870CmajorLow12Volt=lm870CmajorLow12Volt, lm870ClabelLaserBias=lm870ClabelLaserBias, lm870ClabelFlash=lm870ClabelFlash, lm870CuomOPTPower=lm870CuomOPTPower, lm870CalarmStateTecCurrent=lm870CalarmStateTecCurrent, gx2lm870CDigitalEntry=gx2lm870CDigitalEntry, lm870CuomFanCurrent=lm870CuomFanCurrent, trapLMCRFOverloadAlarm=trapLMCRFOverloadAlarm, lm870CmajorLowModTemp=lm870CmajorLowModTemp, lm870CflashPrgCntB=lm870CflashPrgCntB, lm870CvalueRFCalDataCRC=lm870CvalueRFCalDataCRC, lm870CstateFlag12Volt=lm870CstateFlag12Volt, lm870CminValue12Volt=lm870CminValue12Volt)
