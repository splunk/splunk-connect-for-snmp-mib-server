#
# PySNMP MIB module CLNS-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CLNS-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 18:09:11 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ValueRangeConstraint, ConstraintsIntersection, ConstraintsUnion, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ValueRangeConstraint", "ConstraintsIntersection", "ConstraintsUnion", "SingleValueConstraint")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Counter32, MibScalar, MibTable, MibTableRow, MibTableColumn, MibIdentifier, IpAddress, experimental, Gauge32, ObjectIdentity, NotificationType, Counter64, TimeTicks, Integer32, Unsigned32, ModuleIdentity, iso, Bits = mibBuilder.importSymbols("SNMPv2-SMI", "Counter32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "MibIdentifier", "IpAddress", "experimental", "Gauge32", "ObjectIdentity", "NotificationType", "Counter64", "TimeTicks", "Integer32", "Unsigned32", "ModuleIdentity", "iso", "Bits")
DisplayString, PhysAddress, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "PhysAddress", "TextualConvention")
clns = MibIdentifier((1, 3, 6, 1, 3, 1))
class ClnpAddress(OctetString):
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(1, 21)

clnp = MibIdentifier((1, 3, 6, 1, 3, 1, 1))
error = MibIdentifier((1, 3, 6, 1, 3, 1, 2))
echo = MibIdentifier((1, 3, 6, 1, 3, 1, 3))
es_is = MibIdentifier((1, 3, 6, 1, 3, 1, 4)).setLabel("es-is")
clnpForwarding = MibScalar((1, 3, 6, 1, 3, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("is", 1), ("es", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: clnpForwarding.setStatus('mandatory')
clnpDefaultLifeTime = MibScalar((1, 3, 6, 1, 3, 1, 1, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: clnpDefaultLifeTime.setStatus('mandatory')
clnpInReceives = MibScalar((1, 3, 6, 1, 3, 1, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: clnpInReceives.setStatus('mandatory')
clnpInHdrErrors = MibScalar((1, 3, 6, 1, 3, 1, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: clnpInHdrErrors.setStatus('mandatory')
clnpInAddrErrors = MibScalar((1, 3, 6, 1, 3, 1, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: clnpInAddrErrors.setStatus('mandatory')
clnpForwPDUs = MibScalar((1, 3, 6, 1, 3, 1, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: clnpForwPDUs.setStatus('mandatory')
clnpInUnknownNLPs = MibScalar((1, 3, 6, 1, 3, 1, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: clnpInUnknownNLPs.setStatus('mandatory')
clnpInUnknownULPs = MibScalar((1, 3, 6, 1, 3, 1, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: clnpInUnknownULPs.setStatus('mandatory')
clnpInDiscards = MibScalar((1, 3, 6, 1, 3, 1, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: clnpInDiscards.setStatus('mandatory')
clnpInDelivers = MibScalar((1, 3, 6, 1, 3, 1, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: clnpInDelivers.setStatus('mandatory')
clnpOutRequests = MibScalar((1, 3, 6, 1, 3, 1, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: clnpOutRequests.setStatus('mandatory')
clnpOutDiscards = MibScalar((1, 3, 6, 1, 3, 1, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: clnpOutDiscards.setStatus('mandatory')
clnpOutNoRoutes = MibScalar((1, 3, 6, 1, 3, 1, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: clnpOutNoRoutes.setStatus('mandatory')
clnpReasmTimeout = MibScalar((1, 3, 6, 1, 3, 1, 1, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: clnpReasmTimeout.setStatus('mandatory')
clnpReasmReqds = MibScalar((1, 3, 6, 1, 3, 1, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: clnpReasmReqds.setStatus('mandatory')
clnpReasmOKs = MibScalar((1, 3, 6, 1, 3, 1, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: clnpReasmOKs.setStatus('mandatory')
clnpReasmFails = MibScalar((1, 3, 6, 1, 3, 1, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: clnpReasmFails.setStatus('mandatory')
clnpSegOKs = MibScalar((1, 3, 6, 1, 3, 1, 1, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: clnpSegOKs.setStatus('mandatory')
clnpSegFails = MibScalar((1, 3, 6, 1, 3, 1, 1, 19), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: clnpSegFails.setStatus('mandatory')
clnpSegCreates = MibScalar((1, 3, 6, 1, 3, 1, 1, 20), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: clnpSegCreates.setStatus('mandatory')
clnpInOpts = MibScalar((1, 3, 6, 1, 3, 1, 1, 25), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: clnpInOpts.setStatus('mandatory')
clnpOutOpts = MibScalar((1, 3, 6, 1, 3, 1, 1, 26), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: clnpOutOpts.setStatus('mandatory')
clnpRoutingDiscards = MibScalar((1, 3, 6, 1, 3, 1, 1, 27), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: clnpRoutingDiscards.setStatus('mandatory')
clnpAddrTable = MibTable((1, 3, 6, 1, 3, 1, 1, 21), )
if mibBuilder.loadTexts: clnpAddrTable.setStatus('mandatory')
clnpAddrEntry = MibTableRow((1, 3, 6, 1, 3, 1, 1, 21, 1), ).setIndexNames((0, "CLNS-MIB", "clnpAdEntAddr"))
if mibBuilder.loadTexts: clnpAddrEntry.setStatus('mandatory')
clnpAdEntAddr = MibTableColumn((1, 3, 6, 1, 3, 1, 1, 21, 1, 1), ClnpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: clnpAdEntAddr.setStatus('mandatory')
clnpAdEntIfIndex = MibTableColumn((1, 3, 6, 1, 3, 1, 1, 21, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: clnpAdEntIfIndex.setStatus('mandatory')
clnpAdEntReasmMaxSize = MibTableColumn((1, 3, 6, 1, 3, 1, 1, 21, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: clnpAdEntReasmMaxSize.setStatus('mandatory')
clnpRoutingTable = MibTable((1, 3, 6, 1, 3, 1, 1, 22), )
if mibBuilder.loadTexts: clnpRoutingTable.setStatus('mandatory')
clnpRouteEntry = MibTableRow((1, 3, 6, 1, 3, 1, 1, 22, 1), ).setIndexNames((0, "CLNS-MIB", "clnpRouteDest"))
if mibBuilder.loadTexts: clnpRouteEntry.setStatus('mandatory')
clnpRouteDest = MibTableColumn((1, 3, 6, 1, 3, 1, 1, 22, 1, 1), ClnpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: clnpRouteDest.setStatus('mandatory')
clnpRouteIfIndex = MibTableColumn((1, 3, 6, 1, 3, 1, 1, 22, 1, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: clnpRouteIfIndex.setStatus('mandatory')
clnpRouteMetric1 = MibTableColumn((1, 3, 6, 1, 3, 1, 1, 22, 1, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: clnpRouteMetric1.setStatus('mandatory')
clnpRouteMetric2 = MibTableColumn((1, 3, 6, 1, 3, 1, 1, 22, 1, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: clnpRouteMetric2.setStatus('mandatory')
clnpRouteMetric3 = MibTableColumn((1, 3, 6, 1, 3, 1, 1, 22, 1, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: clnpRouteMetric3.setStatus('mandatory')
clnpRouteMetric4 = MibTableColumn((1, 3, 6, 1, 3, 1, 1, 22, 1, 6), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: clnpRouteMetric4.setStatus('mandatory')
clnpRouteNextHop = MibTableColumn((1, 3, 6, 1, 3, 1, 1, 22, 1, 7), ClnpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: clnpRouteNextHop.setStatus('mandatory')
clnpRouteType = MibTableColumn((1, 3, 6, 1, 3, 1, 1, 22, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("other", 1), ("invalid", 2), ("direct", 3), ("remote", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: clnpRouteType.setStatus('mandatory')
clnpRouteProto = MibTableColumn((1, 3, 6, 1, 3, 1, 1, 22, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 9, 11, 12, 13, 14))).clone(namedValues=NamedValues(("other", 1), ("local", 2), ("netmgmt", 3), ("is-is", 9), ("ciscoIgrp", 11), ("bbnSpfIgp", 12), ("ospf", 13), ("bgp", 14)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: clnpRouteProto.setStatus('mandatory')
clnpRouteAge = MibTableColumn((1, 3, 6, 1, 3, 1, 1, 22, 1, 10), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: clnpRouteAge.setStatus('mandatory')
clnpRouteMetric5 = MibTableColumn((1, 3, 6, 1, 3, 1, 1, 22, 1, 11), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: clnpRouteMetric5.setStatus('mandatory')
clnpRouteInfo = MibTableColumn((1, 3, 6, 1, 3, 1, 1, 22, 1, 12), ObjectIdentifier()).setMaxAccess("readonly")
if mibBuilder.loadTexts: clnpRouteInfo.setStatus('mandatory')
clnpNetToMediaTable = MibTable((1, 3, 6, 1, 3, 1, 1, 23), )
if mibBuilder.loadTexts: clnpNetToMediaTable.setStatus('mandatory')
clnpNetToMediaEntry = MibTableRow((1, 3, 6, 1, 3, 1, 1, 23, 1), ).setIndexNames((0, "CLNS-MIB", "clnpNetToMediaIfIndex"), (0, "CLNS-MIB", "clnpNetToMediaNetAddress"))
if mibBuilder.loadTexts: clnpNetToMediaEntry.setStatus('mandatory')
clnpNetToMediaIfIndex = MibTableColumn((1, 3, 6, 1, 3, 1, 1, 23, 1, 1), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: clnpNetToMediaIfIndex.setStatus('mandatory')
clnpNetToMediaPhysAddress = MibTableColumn((1, 3, 6, 1, 3, 1, 1, 23, 1, 2), PhysAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: clnpNetToMediaPhysAddress.setStatus('mandatory')
clnpNetToMediaNetAddress = MibTableColumn((1, 3, 6, 1, 3, 1, 1, 23, 1, 3), ClnpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: clnpNetToMediaNetAddress.setStatus('mandatory')
clnpNetToMediaType = MibTableColumn((1, 3, 6, 1, 3, 1, 1, 23, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("other", 1), ("invalid", 2), ("dynamic", 3), ("static", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: clnpNetToMediaType.setStatus('mandatory')
clnpNetToMediaAge = MibTableColumn((1, 3, 6, 1, 3, 1, 1, 23, 1, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: clnpNetToMediaAge.setStatus('mandatory')
clnpNetToMediaHoldTime = MibTableColumn((1, 3, 6, 1, 3, 1, 1, 23, 1, 6), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: clnpNetToMediaHoldTime.setStatus('mandatory')
clnpMediaToNetTable = MibTable((1, 3, 6, 1, 3, 1, 1, 24), )
if mibBuilder.loadTexts: clnpMediaToNetTable.setStatus('mandatory')
clnpMediaToNetEntry = MibTableRow((1, 3, 6, 1, 3, 1, 1, 24, 1), ).setIndexNames((0, "CLNS-MIB", "clnpMediaToNetIfIndex"), (0, "CLNS-MIB", "clnpMediaToNetPhysAddress"))
if mibBuilder.loadTexts: clnpMediaToNetEntry.setStatus('mandatory')
clnpMediaToNetIfIndex = MibTableColumn((1, 3, 6, 1, 3, 1, 1, 24, 1, 1), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: clnpMediaToNetIfIndex.setStatus('mandatory')
clnpMediaToNetAddress = MibScalar((1, 3, 6, 1, 3, 1, 1, 24, 1, 2), ClnpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: clnpMediaToNetAddress.setStatus('mandatory')
clnpMediaToNetPhysAddress = MibTableColumn((1, 3, 6, 1, 3, 1, 1, 24, 1, 3), PhysAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: clnpMediaToNetPhysAddress.setStatus('mandatory')
clnpMediaToNetType = MibTableColumn((1, 3, 6, 1, 3, 1, 1, 24, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("other", 1), ("invalid", 2), ("dynamic", 3), ("static", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: clnpMediaToNetType.setStatus('mandatory')
clnpMediaToNetAge = MibTableColumn((1, 3, 6, 1, 3, 1, 1, 24, 1, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: clnpMediaToNetAge.setStatus('mandatory')
clnpMediaToNetHoldTime = MibTableColumn((1, 3, 6, 1, 3, 1, 1, 24, 1, 6), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: clnpMediaToNetHoldTime.setStatus('mandatory')
clnpInErrors = MibScalar((1, 3, 6, 1, 3, 1, 2, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: clnpInErrors.setStatus('mandatory')
clnpOutErrors = MibScalar((1, 3, 6, 1, 3, 1, 2, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: clnpOutErrors.setStatus('mandatory')
clnpInErrUnspecs = MibScalar((1, 3, 6, 1, 3, 1, 2, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: clnpInErrUnspecs.setStatus('mandatory')
clnpInErrProcs = MibScalar((1, 3, 6, 1, 3, 1, 2, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: clnpInErrProcs.setStatus('mandatory')
clnpInErrCksums = MibScalar((1, 3, 6, 1, 3, 1, 2, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: clnpInErrCksums.setStatus('mandatory')
clnpInErrCongests = MibScalar((1, 3, 6, 1, 3, 1, 2, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: clnpInErrCongests.setStatus('mandatory')
clnpInErrHdrs = MibScalar((1, 3, 6, 1, 3, 1, 2, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: clnpInErrHdrs.setStatus('mandatory')
clnpInErrSegs = MibScalar((1, 3, 6, 1, 3, 1, 2, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: clnpInErrSegs.setStatus('mandatory')
clnpInErrIncomps = MibScalar((1, 3, 6, 1, 3, 1, 2, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: clnpInErrIncomps.setStatus('mandatory')
clnpInErrDups = MibScalar((1, 3, 6, 1, 3, 1, 2, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: clnpInErrDups.setStatus('mandatory')
clnpInErrUnreachDsts = MibScalar((1, 3, 6, 1, 3, 1, 2, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: clnpInErrUnreachDsts.setStatus('mandatory')
clnpInErrUnknownDsts = MibScalar((1, 3, 6, 1, 3, 1, 2, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: clnpInErrUnknownDsts.setStatus('mandatory')
clnpInErrSRUnspecs = MibScalar((1, 3, 6, 1, 3, 1, 2, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: clnpInErrSRUnspecs.setStatus('mandatory')
clnpInErrSRSyntaxes = MibScalar((1, 3, 6, 1, 3, 1, 2, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: clnpInErrSRSyntaxes.setStatus('mandatory')
clnpInErrSRUnkAddrs = MibScalar((1, 3, 6, 1, 3, 1, 2, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: clnpInErrSRUnkAddrs.setStatus('mandatory')
clnpInErrSRBadPaths = MibScalar((1, 3, 6, 1, 3, 1, 2, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: clnpInErrSRBadPaths.setStatus('mandatory')
clnpInErrHops = MibScalar((1, 3, 6, 1, 3, 1, 2, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: clnpInErrHops.setStatus('mandatory')
clnpInErrHopReassms = MibScalar((1, 3, 6, 1, 3, 1, 2, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: clnpInErrHopReassms.setStatus('mandatory')
clnpInErrUnsOptions = MibScalar((1, 3, 6, 1, 3, 1, 2, 19), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: clnpInErrUnsOptions.setStatus('mandatory')
clnpInErrUnsVersions = MibScalar((1, 3, 6, 1, 3, 1, 2, 20), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: clnpInErrUnsVersions.setStatus('mandatory')
clnpInErrUnsSecurities = MibScalar((1, 3, 6, 1, 3, 1, 2, 21), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: clnpInErrUnsSecurities.setStatus('mandatory')
clnpInErrUnsSRs = MibScalar((1, 3, 6, 1, 3, 1, 2, 22), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: clnpInErrUnsSRs.setStatus('mandatory')
clnpInErrUnsRRs = MibScalar((1, 3, 6, 1, 3, 1, 2, 23), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: clnpInErrUnsRRs.setStatus('mandatory')
clnpInErrInterferences = MibScalar((1, 3, 6, 1, 3, 1, 2, 24), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: clnpInErrInterferences.setStatus('mandatory')
clnpOutErrUnspecs = MibScalar((1, 3, 6, 1, 3, 1, 2, 25), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: clnpOutErrUnspecs.setStatus('mandatory')
clnpOutErrProcs = MibScalar((1, 3, 6, 1, 3, 1, 2, 26), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: clnpOutErrProcs.setStatus('mandatory')
clnpOutErrCksums = MibScalar((1, 3, 6, 1, 3, 1, 2, 27), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: clnpOutErrCksums.setStatus('mandatory')
clnpOutErrCongests = MibScalar((1, 3, 6, 1, 3, 1, 2, 28), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: clnpOutErrCongests.setStatus('mandatory')
clnpOutErrHdrs = MibScalar((1, 3, 6, 1, 3, 1, 2, 29), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: clnpOutErrHdrs.setStatus('mandatory')
clnpOutErrSegs = MibScalar((1, 3, 6, 1, 3, 1, 2, 30), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: clnpOutErrSegs.setStatus('mandatory')
clnpOutErrIncomps = MibScalar((1, 3, 6, 1, 3, 1, 2, 31), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: clnpOutErrIncomps.setStatus('mandatory')
clnpOutErrDups = MibScalar((1, 3, 6, 1, 3, 1, 2, 32), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: clnpOutErrDups.setStatus('mandatory')
clnpOutErrUnreachDsts = MibScalar((1, 3, 6, 1, 3, 1, 2, 33), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: clnpOutErrUnreachDsts.setStatus('mandatory')
clnpOutErrUnknownDsts = MibScalar((1, 3, 6, 1, 3, 1, 2, 34), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: clnpOutErrUnknownDsts.setStatus('mandatory')
clnpOutErrSRUnspecs = MibScalar((1, 3, 6, 1, 3, 1, 2, 35), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: clnpOutErrSRUnspecs.setStatus('mandatory')
clnpOutErrSRSyntaxes = MibScalar((1, 3, 6, 1, 3, 1, 2, 36), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: clnpOutErrSRSyntaxes.setStatus('mandatory')
clnpOutErrSRUnkAddrs = MibScalar((1, 3, 6, 1, 3, 1, 2, 37), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: clnpOutErrSRUnkAddrs.setStatus('mandatory')
clnpOutErrSRBadPaths = MibScalar((1, 3, 6, 1, 3, 1, 2, 38), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: clnpOutErrSRBadPaths.setStatus('mandatory')
clnpOutErrHops = MibScalar((1, 3, 6, 1, 3, 1, 2, 39), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: clnpOutErrHops.setStatus('mandatory')
clnpOutErrHopReassms = MibScalar((1, 3, 6, 1, 3, 1, 2, 40), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: clnpOutErrHopReassms.setStatus('mandatory')
clnpOutErrUnsOptions = MibScalar((1, 3, 6, 1, 3, 1, 2, 41), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: clnpOutErrUnsOptions.setStatus('mandatory')
clnpOutErrUnsVersions = MibScalar((1, 3, 6, 1, 3, 1, 2, 42), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: clnpOutErrUnsVersions.setStatus('mandatory')
clnpOutErrUnsSecurities = MibScalar((1, 3, 6, 1, 3, 1, 2, 43), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: clnpOutErrUnsSecurities.setStatus('mandatory')
clnpOutErrUnsSRs = MibScalar((1, 3, 6, 1, 3, 1, 2, 44), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: clnpOutErrUnsSRs.setStatus('mandatory')
clnpOutErrUnsRRs = MibScalar((1, 3, 6, 1, 3, 1, 2, 45), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: clnpOutErrUnsRRs.setStatus('mandatory')
clnpOutErrInterferences = MibScalar((1, 3, 6, 1, 3, 1, 2, 46), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: clnpOutErrInterferences.setStatus('mandatory')
esisESHins = MibScalar((1, 3, 6, 1, 3, 1, 4, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: esisESHins.setStatus('mandatory')
esisESHouts = MibScalar((1, 3, 6, 1, 3, 1, 4, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: esisESHouts.setStatus('mandatory')
esisISHins = MibScalar((1, 3, 6, 1, 3, 1, 4, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: esisISHins.setStatus('mandatory')
esisISHouts = MibScalar((1, 3, 6, 1, 3, 1, 4, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: esisISHouts.setStatus('mandatory')
esisRDUins = MibScalar((1, 3, 6, 1, 3, 1, 4, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: esisRDUins.setStatus('mandatory')
esisRDUouts = MibScalar((1, 3, 6, 1, 3, 1, 4, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: esisRDUouts.setStatus('mandatory')
mibBuilder.exportSymbols("CLNS-MIB", clnpMediaToNetIfIndex=clnpMediaToNetIfIndex, clnpOutErrUnsRRs=clnpOutErrUnsRRs, clnpNetToMediaTable=clnpNetToMediaTable, esisESHins=esisESHins, clnpNetToMediaIfIndex=clnpNetToMediaIfIndex, clnpInErrCongests=clnpInErrCongests, clnpOutErrSegs=clnpOutErrSegs, clnpOutDiscards=clnpOutDiscards, clnpOutErrSRSyntaxes=clnpOutErrSRSyntaxes, clns=clns, clnpOutErrUnsOptions=clnpOutErrUnsOptions, clnpAddrTable=clnpAddrTable, clnpInErrUnspecs=clnpInErrUnspecs, clnpInUnknownULPs=clnpInUnknownULPs, ClnpAddress=ClnpAddress, clnpInErrUnreachDsts=clnpInErrUnreachDsts, clnpRouteMetric3=clnpRouteMetric3, clnpInReceives=clnpInReceives, clnpRoutingDiscards=clnpRoutingDiscards, clnpOutOpts=clnpOutOpts, clnpNetToMediaPhysAddress=clnpNetToMediaPhysAddress, clnpNetToMediaNetAddress=clnpNetToMediaNetAddress, clnpReasmFails=clnpReasmFails, esisESHouts=esisESHouts, clnpOutErrHdrs=clnpOutErrHdrs, clnp=clnp, clnpOutErrUnknownDsts=clnpOutErrUnknownDsts, clnpMediaToNetTable=clnpMediaToNetTable, clnpInHdrErrors=clnpInHdrErrors, clnpForwarding=clnpForwarding, echo=echo, clnpOutErrSRUnspecs=clnpOutErrSRUnspecs, clnpForwPDUs=clnpForwPDUs, clnpRouteIfIndex=clnpRouteIfIndex, clnpRouteMetric4=clnpRouteMetric4, clnpRouteNextHop=clnpRouteNextHop, clnpRouteMetric5=clnpRouteMetric5, esisRDUouts=esisRDUouts, clnpOutErrIncomps=clnpOutErrIncomps, error=error, clnpInAddrErrors=clnpInAddrErrors, clnpRoutingTable=clnpRoutingTable, clnpOutErrUnreachDsts=clnpOutErrUnreachDsts, clnpOutErrSRUnkAddrs=clnpOutErrSRUnkAddrs, clnpInErrHops=clnpInErrHops, esisISHins=esisISHins, clnpRouteEntry=clnpRouteEntry, clnpInErrUnknownDsts=clnpInErrUnknownDsts, clnpInErrUnsSRs=clnpInErrUnsSRs, clnpInDelivers=clnpInDelivers, clnpInErrUnsSecurities=clnpInErrUnsSecurities, clnpInErrProcs=clnpInErrProcs, clnpInErrSRUnkAddrs=clnpInErrSRUnkAddrs, clnpSegCreates=clnpSegCreates, clnpOutErrProcs=clnpOutErrProcs, clnpInErrUnsOptions=clnpInErrUnsOptions, clnpInErrIncomps=clnpInErrIncomps, clnpRouteAge=clnpRouteAge, clnpReasmTimeout=clnpReasmTimeout, clnpOutErrHopReassms=clnpOutErrHopReassms, clnpNetToMediaEntry=clnpNetToMediaEntry, clnpMediaToNetType=clnpMediaToNetType, clnpInErrHopReassms=clnpInErrHopReassms, clnpMediaToNetAddress=clnpMediaToNetAddress, clnpRouteMetric2=clnpRouteMetric2, clnpOutErrInterferences=clnpOutErrInterferences, clnpRouteProto=clnpRouteProto, clnpReasmOKs=clnpReasmOKs, clnpInErrSRUnspecs=clnpInErrSRUnspecs, clnpRouteInfo=clnpRouteInfo, clnpMediaToNetHoldTime=clnpMediaToNetHoldTime, clnpInErrors=clnpInErrors, clnpDefaultLifeTime=clnpDefaultLifeTime, clnpInErrCksums=clnpInErrCksums, clnpRouteDest=clnpRouteDest, clnpAdEntIfIndex=clnpAdEntIfIndex, clnpInDiscards=clnpInDiscards, clnpInErrSRBadPaths=clnpInErrSRBadPaths, esisISHouts=esisISHouts, clnpOutErrDups=clnpOutErrDups, clnpInOpts=clnpInOpts, clnpAdEntAddr=clnpAdEntAddr, clnpOutErrUnspecs=clnpOutErrUnspecs, clnpOutErrHops=clnpOutErrHops, clnpInErrSegs=clnpInErrSegs, clnpNetToMediaType=clnpNetToMediaType, clnpOutErrUnsVersions=clnpOutErrUnsVersions, es_is=es_is, clnpSegOKs=clnpSegOKs, clnpOutErrUnsSRs=clnpOutErrUnsSRs, clnpMediaToNetAge=clnpMediaToNetAge, clnpInErrUnsVersions=clnpInErrUnsVersions, clnpSegFails=clnpSegFails, clnpAdEntReasmMaxSize=clnpAdEntReasmMaxSize, clnpOutErrCksums=clnpOutErrCksums, clnpRouteType=clnpRouteType, clnpMediaToNetPhysAddress=clnpMediaToNetPhysAddress, clnpInErrInterferences=clnpInErrInterferences, clnpRouteMetric1=clnpRouteMetric1, esisRDUins=esisRDUins, clnpAddrEntry=clnpAddrEntry, clnpMediaToNetEntry=clnpMediaToNetEntry, clnpOutNoRoutes=clnpOutNoRoutes, clnpInErrDups=clnpInErrDups, clnpOutErrUnsSecurities=clnpOutErrUnsSecurities, clnpOutErrCongests=clnpOutErrCongests, clnpOutRequests=clnpOutRequests, clnpInErrHdrs=clnpInErrHdrs, clnpInErrUnsRRs=clnpInErrUnsRRs, clnpOutErrors=clnpOutErrors, clnpOutErrSRBadPaths=clnpOutErrSRBadPaths, clnpInErrSRSyntaxes=clnpInErrSRSyntaxes, clnpNetToMediaHoldTime=clnpNetToMediaHoldTime, clnpReasmReqds=clnpReasmReqds, clnpInUnknownNLPs=clnpInUnknownNLPs, clnpNetToMediaAge=clnpNetToMediaAge)
