#
# PySNMP MIB module PDN-INET-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/PDN-INET-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 20:30:07 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ConstraintsIntersection, ConstraintsUnion, ValueSizeConstraint, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ConstraintsIntersection", "ConstraintsUnion", "ValueSizeConstraint", "ValueRangeConstraint")
ifIndex, = mibBuilder.importSymbols("IF-MIB", "ifIndex")
pdn_inet, = mibBuilder.importSymbols("PDN-HEADER-MIB", "pdn-inet")
InetAddressType, = mibBuilder.importSymbols("PDN-TC", "InetAddressType")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
ObjectIdentity, iso, NotificationType, Counter64, Gauge32, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter32, Integer32, IpAddress, NotificationType, ModuleIdentity, TimeTicks, MibIdentifier, Bits, Unsigned32 = mibBuilder.importSymbols("SNMPv2-SMI", "ObjectIdentity", "iso", "NotificationType", "Counter64", "Gauge32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter32", "Integer32", "IpAddress", "NotificationType", "ModuleIdentity", "TimeTicks", "MibIdentifier", "Bits", "Unsigned32")
TextualConvention, DisplayString, RowStatus = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString", "RowStatus")
pdnInetMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 26, 1))
pdnInetMIBTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 26, 2))
pdnInetTelnetServerPort = MibScalar((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 26, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)).clone(23)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pdnInetTelnetServerPort.setStatus('mandatory')
pdnInetFtpServerControlPort = MibScalar((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 26, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)).clone(21)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pdnInetFtpServerControlPort.setStatus('mandatory')
pdnInetFtpServerDataPort = MibScalar((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 26, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)).clone(20)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pdnInetFtpServerDataPort.setStatus('mandatory')
pdnInetIpAddressTableMaxIpSubnets = MibScalar((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 26, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pdnInetIpAddressTableMaxIpSubnets.setStatus('mandatory')
pdnInetIpAddressTableCurrentIpSubnets = MibScalar((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 26, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pdnInetIpAddressTableCurrentIpSubnets.setStatus('mandatory')
pdnInetIpAddressTable = MibTable((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 26, 1, 6), )
if mibBuilder.loadTexts: pdnInetIpAddressTable.setStatus('mandatory')
pdnInetIpAddressTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 26, 1, 6, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "PDN-INET-MIB", "pdnInetIpAddress"))
if mibBuilder.loadTexts: pdnInetIpAddressTableEntry.setStatus('mandatory')
pdnInetIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 26, 1, 6, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pdnInetIpAddress.setStatus('mandatory')
pdnInetIpSubnetMask = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 26, 1, 6, 1, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pdnInetIpSubnetMask.setStatus('mandatory')
pdnInetIpAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 26, 1, 6, 1, 3), InetAddressType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pdnInetIpAddressType.setStatus('mandatory')
pdnInetIpRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 26, 1, 6, 1, 4), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pdnInetIpRowStatus.setStatus('mandatory')
mibBuilder.exportSymbols("PDN-INET-MIB", pdnInetIpRowStatus=pdnInetIpRowStatus, pdnInetMIBObjects=pdnInetMIBObjects, pdnInetIpAddressTableMaxIpSubnets=pdnInetIpAddressTableMaxIpSubnets, pdnInetIpAddressTableCurrentIpSubnets=pdnInetIpAddressTableCurrentIpSubnets, pdnInetIpAddressTableEntry=pdnInetIpAddressTableEntry, pdnInetIpAddressTable=pdnInetIpAddressTable, pdnInetIpSubnetMask=pdnInetIpSubnetMask, pdnInetFtpServerDataPort=pdnInetFtpServerDataPort, pdnInetIpAddress=pdnInetIpAddress, pdnInetFtpServerControlPort=pdnInetFtpServerControlPort, pdnInetTelnetServerPort=pdnInetTelnetServerPort, pdnInetIpAddressType=pdnInetIpAddressType, pdnInetMIBTraps=pdnInetMIBTraps)
