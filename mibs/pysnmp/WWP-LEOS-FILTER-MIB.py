#
# PySNMP MIB module WWP-LEOS-FILTER-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/WWP-LEOS-FILTER-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 21:31:08 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ConstraintsIntersection, ConstraintsUnion, ValueRangeConstraint, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ConstraintsIntersection", "ConstraintsUnion", "ValueRangeConstraint", "SingleValueConstraint")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
Counter32, ModuleIdentity, TimeTicks, iso, Bits, MibIdentifier, MibScalar, MibTable, MibTableRow, MibTableColumn, Integer32, NotificationType, IpAddress, Gauge32, Unsigned32, ObjectIdentity, Counter64 = mibBuilder.importSymbols("SNMPv2-SMI", "Counter32", "ModuleIdentity", "TimeTicks", "iso", "Bits", "MibIdentifier", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Integer32", "NotificationType", "IpAddress", "Gauge32", "Unsigned32", "ObjectIdentity", "Counter64")
RowStatus, TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "RowStatus", "TextualConvention", "DisplayString")
wwpModules, wwpModulesLeos = mibBuilder.importSymbols("WWP-SMI", "wwpModules", "wwpModulesLeos")
wwpLeosFilterMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 6141, 2, 60, 15))
wwpLeosFilterMIB.setRevisions(('2006-02-17 18:45', '2003-01-15 17:00',))
if mibBuilder.loadTexts: wwpLeosFilterMIB.setLastUpdated('200602171830Z')
if mibBuilder.loadTexts: wwpLeosFilterMIB.setOrganization('World Wide Packets, Inc')
wwpLeosFilterMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 6141, 2, 60, 15, 1))
wwpLeosFilter = MibIdentifier((1, 3, 6, 1, 4, 1, 6141, 2, 60, 15, 1, 1))
wwpLeosFilterMIBNotificationPrefix = MibIdentifier((1, 3, 6, 1, 4, 1, 6141, 2, 60, 15, 2))
wwpLeosFilterMIBNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 6141, 2, 60, 15, 2, 0))
wwpLeosFilterMIBConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 6141, 2, 60, 15, 3))
wwpLeosFilterMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 6141, 2, 60, 15, 3, 1))
wwpLeosFilterMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 6141, 2, 60, 15, 3, 2))
wwpLeosFilterResources = MibIdentifier((1, 3, 6, 1, 4, 1, 6141, 2, 60, 15, 1, 1, 1))
wwpLeosFilterMaxHardwareResources = MibScalar((1, 3, 6, 1, 4, 1, 6141, 2, 60, 15, 1, 1, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosFilterMaxHardwareResources.setStatus('current')
wwpLeosFilterUsedHardwareResources = MibScalar((1, 3, 6, 1, 4, 1, 6141, 2, 60, 15, 1, 1, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosFilterUsedHardwareResources.setStatus('current')
wwpLeosFilterCreated = MibScalar((1, 3, 6, 1, 4, 1, 6141, 2, 60, 15, 1, 1, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosFilterCreated.setStatus('current')
wwpLeosFilterCountersMax = MibScalar((1, 3, 6, 1, 4, 1, 6141, 2, 60, 15, 1, 1, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosFilterCountersMax.setStatus('current')
wwpLeosFilterCountersUsed = MibScalar((1, 3, 6, 1, 4, 1, 6141, 2, 60, 15, 1, 1, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosFilterCountersUsed.setStatus('current')
wwpLeosFilterTable = MibTable((1, 3, 6, 1, 4, 1, 6141, 2, 60, 15, 1, 1, 2), )
if mibBuilder.loadTexts: wwpLeosFilterTable.setStatus('current')
wwpLeosFilterEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6141, 2, 60, 15, 1, 1, 2, 1), ).setIndexNames((0, "WWP-LEOS-FILTER-MIB", "wwpLeosFilterIndex"))
if mibBuilder.loadTexts: wwpLeosFilterEntry.setStatus('current')
wwpLeosFilterIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 15, 1, 1, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosFilterIndex.setStatus('current')
wwpLeosFilterName = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 15, 1, 1, 2, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 16))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wwpLeosFilterName.setStatus('current')
wwpLeosFilterAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 15, 1, 1, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wwpLeosFilterAdminState.setStatus('current')
wwpLeosFilterOperState = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 15, 1, 1, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosFilterOperState.setStatus('current')
wwpLeosFilterCounter = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 15, 1, 1, 2, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("on", 1), ("off", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wwpLeosFilterCounter.setStatus('current')
wwpLeosFilterStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 15, 1, 1, 2, 1, 6), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wwpLeosFilterStatus.setStatus('current')
wwpLeosFilterProtocolTable = MibTable((1, 3, 6, 1, 4, 1, 6141, 2, 60, 15, 1, 1, 3), )
if mibBuilder.loadTexts: wwpLeosFilterProtocolTable.setStatus('current')
wwpLeosFilterProtocolEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6141, 2, 60, 15, 1, 1, 3, 1), ).setIndexNames((0, "WWP-LEOS-FILTER-MIB", "wwpLeosFilterProtocolIndex"))
if mibBuilder.loadTexts: wwpLeosFilterProtocolEntry.setStatus('current')
wwpLeosFilterProtocolIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 15, 1, 1, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 41))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosFilterProtocolIndex.setStatus('current')
wwpLeosFilterProtocolName = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 15, 1, 1, 3, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 16))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wwpLeosFilterProtocolName.setStatus('current')
wwpLeosFilterProtocolType = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 15, 1, 1, 3, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wwpLeosFilterProtocolType.setStatus('current')
wwpLeosFilterProtocolSrcPort = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 15, 1, 1, 3, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wwpLeosFilterProtocolSrcPort.setStatus('current')
wwpLeosFilterProtocolDstPort = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 15, 1, 1, 3, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wwpLeosFilterProtocolDstPort.setStatus('current')
wwpLeosFilterProtocolStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 15, 1, 1, 3, 1, 6), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wwpLeosFilterProtocolStatus.setStatus('current')
wwpLeosFilterMemTable = MibTable((1, 3, 6, 1, 4, 1, 6141, 2, 60, 15, 1, 1, 4), )
if mibBuilder.loadTexts: wwpLeosFilterMemTable.setStatus('current')
wwpLeosFilterMemEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6141, 2, 60, 15, 1, 1, 4, 1), ).setIndexNames((0, "WWP-LEOS-FILTER-MIB", "wwpLeosFilterIndex"), (0, "WWP-LEOS-FILTER-MIB", "wwpLeosFilterVlan"), (0, "WWP-LEOS-FILTER-MIB", "wwpLeosFilterPortId"))
if mibBuilder.loadTexts: wwpLeosFilterMemEntry.setStatus('current')
wwpLeosFilterVlan = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 15, 1, 1, 4, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 24576))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosFilterVlan.setStatus('current')
wwpLeosFilterPortId = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 15, 1, 1, 4, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosFilterPortId.setStatus('current')
wwpLeosFilterMemStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 15, 1, 1, 4, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wwpLeosFilterMemStatus.setStatus('current')
wwpLeosFilterMemRule = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 15, 1, 1, 4, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("block", 1), ("allow", 2))).clone('block')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wwpLeosFilterMemRule.setStatus('current')
wwpLeosFilterProtocolMemTable = MibTable((1, 3, 6, 1, 4, 1, 6141, 2, 60, 15, 1, 1, 5), )
if mibBuilder.loadTexts: wwpLeosFilterProtocolMemTable.setStatus('current')
wwpLeosFilterProtocolMemEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6141, 2, 60, 15, 1, 1, 5, 1), ).setIndexNames((0, "WWP-LEOS-FILTER-MIB", "wwpLeosFilterIndex"), (0, "WWP-LEOS-FILTER-MIB", "wwpLeosFilterProtocolIndex"))
if mibBuilder.loadTexts: wwpLeosFilterProtocolMemEntry.setStatus('current')
wwpLeosFilterProtocolMemStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 15, 1, 1, 5, 1, 1), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wwpLeosFilterProtocolMemStatus.setStatus('current')
wwpLeosFilterStatsTable = MibTable((1, 3, 6, 1, 4, 1, 6141, 2, 60, 15, 1, 1, 6), )
if mibBuilder.loadTexts: wwpLeosFilterStatsTable.setStatus('current')
wwpLeosFilterStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6141, 2, 60, 15, 1, 1, 6, 1), ).setIndexNames((0, "WWP-LEOS-FILTER-MIB", "wwpLeosFilterIndex"))
if mibBuilder.loadTexts: wwpLeosFilterStatsEntry.setStatus('current')
wwpLeosFilterDropBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 15, 1, 1, 6, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosFilterDropBytes.setStatus('current')
mibBuilder.exportSymbols("WWP-LEOS-FILTER-MIB", wwpLeosFilterProtocolStatus=wwpLeosFilterProtocolStatus, wwpLeosFilterMemRule=wwpLeosFilterMemRule, wwpLeosFilterResources=wwpLeosFilterResources, wwpLeosFilterMIBConformance=wwpLeosFilterMIBConformance, wwpLeosFilterName=wwpLeosFilterName, wwpLeosFilterMIBObjects=wwpLeosFilterMIBObjects, wwpLeosFilterProtocolSrcPort=wwpLeosFilterProtocolSrcPort, wwpLeosFilterMIBNotifications=wwpLeosFilterMIBNotifications, wwpLeosFilterDropBytes=wwpLeosFilterDropBytes, wwpLeosFilter=wwpLeosFilter, wwpLeosFilterCreated=wwpLeosFilterCreated, wwpLeosFilterEntry=wwpLeosFilterEntry, wwpLeosFilterProtocolMemEntry=wwpLeosFilterProtocolMemEntry, wwpLeosFilterMemTable=wwpLeosFilterMemTable, wwpLeosFilterIndex=wwpLeosFilterIndex, wwpLeosFilterProtocolIndex=wwpLeosFilterProtocolIndex, wwpLeosFilterMIB=wwpLeosFilterMIB, wwpLeosFilterMaxHardwareResources=wwpLeosFilterMaxHardwareResources, wwpLeosFilterOperState=wwpLeosFilterOperState, wwpLeosFilterTable=wwpLeosFilterTable, wwpLeosFilterStatus=wwpLeosFilterStatus, wwpLeosFilterMemStatus=wwpLeosFilterMemStatus, wwpLeosFilterVlan=wwpLeosFilterVlan, wwpLeosFilterProtocolTable=wwpLeosFilterProtocolTable, wwpLeosFilterProtocolEntry=wwpLeosFilterProtocolEntry, wwpLeosFilterProtocolDstPort=wwpLeosFilterProtocolDstPort, PYSNMP_MODULE_ID=wwpLeosFilterMIB, wwpLeosFilterMIBNotificationPrefix=wwpLeosFilterMIBNotificationPrefix, wwpLeosFilterProtocolType=wwpLeosFilterProtocolType, wwpLeosFilterStatsEntry=wwpLeosFilterStatsEntry, wwpLeosFilterUsedHardwareResources=wwpLeosFilterUsedHardwareResources, wwpLeosFilterMemEntry=wwpLeosFilterMemEntry, wwpLeosFilterCountersUsed=wwpLeosFilterCountersUsed, wwpLeosFilterProtocolMemTable=wwpLeosFilterProtocolMemTable, wwpLeosFilterProtocolMemStatus=wwpLeosFilterProtocolMemStatus, wwpLeosFilterStatsTable=wwpLeosFilterStatsTable, wwpLeosFilterMIBGroups=wwpLeosFilterMIBGroups, wwpLeosFilterMIBCompliances=wwpLeosFilterMIBCompliances, wwpLeosFilterPortId=wwpLeosFilterPortId, wwpLeosFilterCounter=wwpLeosFilterCounter, wwpLeosFilterCountersMax=wwpLeosFilterCountersMax, wwpLeosFilterProtocolName=wwpLeosFilterProtocolName, wwpLeosFilterAdminState=wwpLeosFilterAdminState)
