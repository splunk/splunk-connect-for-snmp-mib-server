#
# PySNMP MIB module DIFF-SERV-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/DIFF-SERV-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 18:07:06 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ValueSizeConstraint, ConstraintsUnion, ValueRangeConstraint, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ValueSizeConstraint", "ConstraintsUnion", "ValueRangeConstraint", "SingleValueConstraint")
ifIndex, = mibBuilder.importSymbols("IF-MIB", "ifIndex")
InetAddress, InetAddressType = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddress", "InetAddressType")
BurstSize, = mibBuilder.importSymbols("INTEGRATED-SERVICES-MIB", "BurstSize")
ObjectGroup, ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "ModuleCompliance", "NotificationGroup")
zeroDotZero, ObjectIdentity, ModuleIdentity, Counter32, Unsigned32, MibScalar, MibTable, MibTableRow, MibTableColumn, Integer32, Gauge32, Counter64, iso, MibIdentifier, NotificationType, mib_2, TimeTicks, Bits, IpAddress = mibBuilder.importSymbols("SNMPv2-SMI", "zeroDotZero", "ObjectIdentity", "ModuleIdentity", "Counter32", "Unsigned32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Integer32", "Gauge32", "Counter64", "iso", "MibIdentifier", "NotificationType", "mib-2", "TimeTicks", "Bits", "IpAddress")
RowPointer, TimeStamp, RowStatus, DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "RowPointer", "TimeStamp", "RowStatus", "DisplayString", "TextualConvention")
diffServMib = ModuleIdentity((1, 3, 6, 1, 2, 1, 12345))
diffServMib.setRevisions(('2000-07-13 00:00',))
if mibBuilder.loadTexts: diffServMib.setLastUpdated('200007130000Z')
if mibBuilder.loadTexts: diffServMib.setOrganization('IETF Diffserv WG')
diffServObjects = MibIdentifier((1, 3, 6, 1, 2, 1, 12345, 1))
diffServTables = MibIdentifier((1, 3, 6, 1, 2, 1, 12345, 2))
diffServMIBConformance = MibIdentifier((1, 3, 6, 1, 2, 1, 12345, 3))
class Dscp(TextualConvention, Integer32):
    status = 'current'
    displayHint = 'd'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(ValueRangeConstraint(-1, -1), ValueRangeConstraint(0, 63), )
class SixTupleClfrL4Port(TextualConvention, Integer32):
    status = 'current'
    displayHint = 'd'
    subtypeSpec = Integer32.subtypeSpec + ValueRangeConstraint(0, 65535)

class IfDirection(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("inbound", 1), ("outbound", 2))

diffServClassifierTable = MibTable((1, 3, 6, 1, 2, 1, 12345, 2, 1), )
if mibBuilder.loadTexts: diffServClassifierTable.setStatus('current')
diffServClassifierEntry = MibTableRow((1, 3, 6, 1, 2, 1, 12345, 2, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "DIFF-SERV-MIB", "diffServClassifierIfDirection"), (0, "DIFF-SERV-MIB", "diffServClassifierTcb"), (0, "DIFF-SERV-MIB", "diffServClassifierId"))
if mibBuilder.loadTexts: diffServClassifierEntry.setStatus('current')
diffServClassifierIfDirection = MibTableColumn((1, 3, 6, 1, 2, 1, 12345, 2, 1, 1, 1), IfDirection())
if mibBuilder.loadTexts: diffServClassifierIfDirection.setStatus('current')
diffServClassifierTcb = MibTableColumn((1, 3, 6, 1, 2, 1, 12345, 2, 1, 1, 2), Unsigned32())
if mibBuilder.loadTexts: diffServClassifierTcb.setStatus('current')
diffServClassifierId = MibTableColumn((1, 3, 6, 1, 2, 1, 12345, 2, 1, 1, 3), Unsigned32())
if mibBuilder.loadTexts: diffServClassifierId.setStatus('current')
diffServClassifierFilter = MibTableColumn((1, 3, 6, 1, 2, 1, 12345, 2, 1, 1, 4), RowPointer().clone((0, 0))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: diffServClassifierFilter.setStatus('current')
diffServClassifierNext = MibTableColumn((1, 3, 6, 1, 2, 1, 12345, 2, 1, 1, 5), RowPointer()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: diffServClassifierNext.setStatus('current')
diffServClassifierPrecedence = MibTableColumn((1, 3, 6, 1, 2, 1, 12345, 2, 1, 1, 6), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: diffServClassifierPrecedence.setStatus('current')
diffServClassifierStatus = MibTableColumn((1, 3, 6, 1, 2, 1, 12345, 2, 1, 1, 7), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: diffServClassifierStatus.setStatus('current')
diffServClassifierNextFree = MibScalar((1, 3, 6, 1, 2, 1, 12345, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: diffServClassifierNextFree.setStatus('current')
diffServSixTupleClfrTable = MibTable((1, 3, 6, 1, 2, 1, 12345, 2, 2), )
if mibBuilder.loadTexts: diffServSixTupleClfrTable.setStatus('current')
diffServSixTupleClfrEntry = MibTableRow((1, 3, 6, 1, 2, 1, 12345, 2, 2, 1), ).setIndexNames((0, "DIFF-SERV-MIB", "diffServSixTupleClfrId"))
if mibBuilder.loadTexts: diffServSixTupleClfrEntry.setStatus('current')
diffServSixTupleClfrId = MibTableColumn((1, 3, 6, 1, 2, 1, 12345, 2, 2, 1, 1), Unsigned32())
if mibBuilder.loadTexts: diffServSixTupleClfrId.setStatus('current')
diffServSixTupleClfrDstAddrType = MibTableColumn((1, 3, 6, 1, 2, 1, 12345, 2, 2, 1, 2), InetAddressType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: diffServSixTupleClfrDstAddrType.setStatus('current')
diffServSixTupleClfrDstAddr = MibTableColumn((1, 3, 6, 1, 2, 1, 12345, 2, 2, 1, 3), InetAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: diffServSixTupleClfrDstAddr.setStatus('current')
diffServSixTupleClfrDstAddrMask = MibTableColumn((1, 3, 6, 1, 2, 1, 12345, 2, 2, 1, 4), Unsigned32()).setUnits('bits').setMaxAccess("readcreate")
if mibBuilder.loadTexts: diffServSixTupleClfrDstAddrMask.setStatus('current')
diffServSixTupleClfrSrcAddrType = MibTableColumn((1, 3, 6, 1, 2, 1, 12345, 2, 2, 1, 5), InetAddressType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: diffServSixTupleClfrSrcAddrType.setStatus('current')
diffServSixTupleClfrSrcAddr = MibTableColumn((1, 3, 6, 1, 2, 1, 12345, 2, 2, 1, 6), InetAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: diffServSixTupleClfrSrcAddr.setStatus('current')
diffServSixTupleClfrSrcAddrMask = MibTableColumn((1, 3, 6, 1, 2, 1, 12345, 2, 2, 1, 7), Unsigned32()).setUnits('bits').setMaxAccess("readcreate")
if mibBuilder.loadTexts: diffServSixTupleClfrSrcAddrMask.setStatus('current')
diffServSixTupleClfrDscp = MibTableColumn((1, 3, 6, 1, 2, 1, 12345, 2, 2, 1, 8), Dscp().clone(-1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: diffServSixTupleClfrDscp.setStatus('current')
diffServSixTupleClfrProtocol = MibTableColumn((1, 3, 6, 1, 2, 1, 12345, 2, 2, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: diffServSixTupleClfrProtocol.setStatus('current')
diffServSixTupleClfrDstL4PortMin = MibTableColumn((1, 3, 6, 1, 2, 1, 12345, 2, 2, 1, 10), SixTupleClfrL4Port()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: diffServSixTupleClfrDstL4PortMin.setStatus('current')
diffServSixTupleClfrDstL4PortMax = MibTableColumn((1, 3, 6, 1, 2, 1, 12345, 2, 2, 1, 11), SixTupleClfrL4Port().clone(65535)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: diffServSixTupleClfrDstL4PortMax.setStatus('current')
diffServSixTupleClfrSrcL4PortMin = MibTableColumn((1, 3, 6, 1, 2, 1, 12345, 2, 2, 1, 12), SixTupleClfrL4Port()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: diffServSixTupleClfrSrcL4PortMin.setStatus('current')
diffServSixTupleClfrSrcL4PortMax = MibTableColumn((1, 3, 6, 1, 2, 1, 12345, 2, 2, 1, 13), SixTupleClfrL4Port().clone(65535)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: diffServSixTupleClfrSrcL4PortMax.setStatus('current')
diffServSixTupleClfrStatus = MibTableColumn((1, 3, 6, 1, 2, 1, 12345, 2, 2, 1, 14), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: diffServSixTupleClfrStatus.setStatus('current')
diffServSixTupleClfrNextFree = MibScalar((1, 3, 6, 1, 2, 1, 12345, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: diffServSixTupleClfrNextFree.setStatus('current')
diffServMeterTable = MibTable((1, 3, 6, 1, 2, 1, 12345, 2, 3), )
if mibBuilder.loadTexts: diffServMeterTable.setStatus('current')
diffServMeterEntry = MibTableRow((1, 3, 6, 1, 2, 1, 12345, 2, 3, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "DIFF-SERV-MIB", "diffServMeterIfDirection"), (0, "DIFF-SERV-MIB", "diffServMeterId"))
if mibBuilder.loadTexts: diffServMeterEntry.setStatus('current')
diffServMeterIfDirection = MibTableColumn((1, 3, 6, 1, 2, 1, 12345, 2, 3, 1, 1), IfDirection())
if mibBuilder.loadTexts: diffServMeterIfDirection.setStatus('current')
diffServMeterId = MibTableColumn((1, 3, 6, 1, 2, 1, 12345, 2, 3, 1, 2), Unsigned32())
if mibBuilder.loadTexts: diffServMeterId.setStatus('current')
diffServMeterSucceedNext = MibTableColumn((1, 3, 6, 1, 2, 1, 12345, 2, 3, 1, 3), RowPointer().clone((0, 0))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: diffServMeterSucceedNext.setStatus('current')
diffServMeterFailNext = MibTableColumn((1, 3, 6, 1, 2, 1, 12345, 2, 3, 1, 4), RowPointer().clone((0, 0))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: diffServMeterFailNext.setStatus('current')
diffServMeterSpecific = MibTableColumn((1, 3, 6, 1, 2, 1, 12345, 2, 3, 1, 5), ObjectIdentifier()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: diffServMeterSpecific.setStatus('current')
diffServMeterStatus = MibTableColumn((1, 3, 6, 1, 2, 1, 12345, 2, 3, 1, 6), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: diffServMeterStatus.setStatus('current')
diffServMeterNextFree = MibScalar((1, 3, 6, 1, 2, 1, 12345, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: diffServMeterNextFree.setStatus('current')
diffServTBMeterTable = MibTable((1, 3, 6, 1, 2, 1, 12345, 2, 4), )
if mibBuilder.loadTexts: diffServTBMeterTable.setStatus('current')
diffServTBMeterEntry = MibTableRow((1, 3, 6, 1, 2, 1, 12345, 2, 4, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "DIFF-SERV-MIB", "diffServMeterIfDirection"), (0, "DIFF-SERV-MIB", "diffServMeterId"))
if mibBuilder.loadTexts: diffServTBMeterEntry.setStatus('current')
diffServTBMeterRate = MibTableColumn((1, 3, 6, 1, 2, 1, 12345, 2, 4, 1, 1), Unsigned32()).setUnits('kilobits per second').setMaxAccess("readcreate")
if mibBuilder.loadTexts: diffServTBMeterRate.setStatus('current')
diffServTBMeterBurstSize = MibTableColumn((1, 3, 6, 1, 2, 1, 12345, 2, 4, 1, 2), BurstSize()).setUnits('Bytes').setMaxAccess("readcreate")
if mibBuilder.loadTexts: diffServTBMeterBurstSize.setStatus('current')
diffServTBMeterStatus = MibTableColumn((1, 3, 6, 1, 2, 1, 12345, 2, 4, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: diffServTBMeterStatus.setStatus('current')
diffServActionTable = MibTable((1, 3, 6, 1, 2, 1, 12345, 2, 5), )
if mibBuilder.loadTexts: diffServActionTable.setStatus('current')
diffServActionEntry = MibTableRow((1, 3, 6, 1, 2, 1, 12345, 2, 5, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "DIFF-SERV-MIB", "diffServActionIfDirection"), (0, "DIFF-SERV-MIB", "diffServActionId"))
if mibBuilder.loadTexts: diffServActionEntry.setStatus('current')
diffServActionIfDirection = MibTableColumn((1, 3, 6, 1, 2, 1, 12345, 2, 5, 1, 1), IfDirection())
if mibBuilder.loadTexts: diffServActionIfDirection.setStatus('current')
diffServActionId = MibTableColumn((1, 3, 6, 1, 2, 1, 12345, 2, 5, 1, 2), Unsigned32())
if mibBuilder.loadTexts: diffServActionId.setStatus('current')
diffServActionNext = MibTableColumn((1, 3, 6, 1, 2, 1, 12345, 2, 5, 1, 3), RowPointer().clone((0, 0))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: diffServActionNext.setStatus('current')
diffServActionSpecific = MibTableColumn((1, 3, 6, 1, 2, 1, 12345, 2, 5, 1, 4), ObjectIdentifier()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: diffServActionSpecific.setStatus('current')
diffServActionStatus = MibTableColumn((1, 3, 6, 1, 2, 1, 12345, 2, 5, 1, 5), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: diffServActionStatus.setStatus('current')
diffServActionNextFree = MibScalar((1, 3, 6, 1, 2, 1, 12345, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: diffServActionNextFree.setStatus('current')
diffServDscpMarkActTable = MibTable((1, 3, 6, 1, 2, 1, 12345, 2, 6), )
if mibBuilder.loadTexts: diffServDscpMarkActTable.setStatus('current')
diffServDscpMarkActEntry = MibTableRow((1, 3, 6, 1, 2, 1, 12345, 2, 6, 1), ).setIndexNames((0, "DIFF-SERV-MIB", "diffServDscpMarkActDscp"))
if mibBuilder.loadTexts: diffServDscpMarkActEntry.setStatus('current')
diffServDscpMarkActDscp = MibTableColumn((1, 3, 6, 1, 2, 1, 12345, 2, 6, 1, 1), Dscp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: diffServDscpMarkActDscp.setStatus('current')
diffServCountActTable = MibTable((1, 3, 6, 1, 2, 1, 12345, 2, 7), )
if mibBuilder.loadTexts: diffServCountActTable.setStatus('current')
diffServCountActEntry = MibTableRow((1, 3, 6, 1, 2, 1, 12345, 2, 7, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "DIFF-SERV-MIB", "diffServActionIfDirection"), (0, "DIFF-SERV-MIB", "diffServActionId"))
if mibBuilder.loadTexts: diffServCountActEntry.setStatus('current')
diffServCountActOctets = MibTableColumn((1, 3, 6, 1, 2, 1, 12345, 2, 7, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: diffServCountActOctets.setStatus('current')
diffServCountActHCOctets = MibTableColumn((1, 3, 6, 1, 2, 1, 12345, 2, 7, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: diffServCountActHCOctets.setStatus('current')
diffServCountActPkts = MibTableColumn((1, 3, 6, 1, 2, 1, 12345, 2, 7, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: diffServCountActPkts.setStatus('current')
diffServCountActHCPkts = MibTableColumn((1, 3, 6, 1, 2, 1, 12345, 2, 7, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: diffServCountActHCPkts.setStatus('current')
diffServCountActDiscontTime = MibTableColumn((1, 3, 6, 1, 2, 1, 12345, 2, 7, 1, 5), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: diffServCountActDiscontTime.setStatus('current')
diffServCountActStatus = MibTableColumn((1, 3, 6, 1, 2, 1, 12345, 2, 7, 1, 6), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: diffServCountActStatus.setStatus('current')
diffServAbsoluteDropAction = ObjectIdentity((1, 3, 6, 1, 2, 1, 12345, 1, 6))
if mibBuilder.loadTexts: diffServAbsoluteDropAction.setStatus('current')
diffServAlgDropTable = MibTable((1, 3, 6, 1, 2, 1, 12345, 2, 8), )
if mibBuilder.loadTexts: diffServAlgDropTable.setStatus('current')
diffServAlgDropEntry = MibTableRow((1, 3, 6, 1, 2, 1, 12345, 2, 8, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "DIFF-SERV-MIB", "diffServAlgDropIfDirection"), (0, "DIFF-SERV-MIB", "diffServAlgDropId"))
if mibBuilder.loadTexts: diffServAlgDropEntry.setStatus('current')
diffServAlgDropIfDirection = MibTableColumn((1, 3, 6, 1, 2, 1, 12345, 2, 8, 1, 1), IfDirection())
if mibBuilder.loadTexts: diffServAlgDropIfDirection.setStatus('current')
diffServAlgDropId = MibTableColumn((1, 3, 6, 1, 2, 1, 12345, 2, 8, 1, 2), Unsigned32())
if mibBuilder.loadTexts: diffServAlgDropId.setStatus('current')
diffServAlgDropType = MibTableColumn((1, 3, 6, 1, 2, 1, 12345, 2, 8, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("other", 1), ("tailDrop", 2), ("headDrop", 3), ("randomDrop", 4)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: diffServAlgDropType.setStatus('current')
diffServAlgDropNext = MibTableColumn((1, 3, 6, 1, 2, 1, 12345, 2, 8, 1, 4), RowPointer()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: diffServAlgDropNext.setStatus('current')
diffServAlgDropQMeasure = MibTableColumn((1, 3, 6, 1, 2, 1, 12345, 2, 8, 1, 5), RowPointer()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: diffServAlgDropQMeasure.setStatus('current')
diffServAlgDropQThreshold = MibTableColumn((1, 3, 6, 1, 2, 1, 12345, 2, 8, 1, 6), Unsigned32()).setUnits('Bytes').setMaxAccess("readcreate")
if mibBuilder.loadTexts: diffServAlgDropQThreshold.setStatus('current')
diffServAlgDropSpecific = MibTableColumn((1, 3, 6, 1, 2, 1, 12345, 2, 8, 1, 7), ObjectIdentifier()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: diffServAlgDropSpecific.setStatus('current')
diffServAlgDropOctets = MibTableColumn((1, 3, 6, 1, 2, 1, 12345, 2, 8, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: diffServAlgDropOctets.setStatus('current')
diffServAlgDropHCOctets = MibTableColumn((1, 3, 6, 1, 2, 1, 12345, 2, 8, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: diffServAlgDropHCOctets.setStatus('current')
diffServAlgDropPkts = MibTableColumn((1, 3, 6, 1, 2, 1, 12345, 2, 8, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: diffServAlgDropPkts.setStatus('current')
diffServAlgDropHCPkts = MibTableColumn((1, 3, 6, 1, 2, 1, 12345, 2, 8, 1, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: diffServAlgDropHCPkts.setStatus('current')
diffServAlgDropStatus = MibTableColumn((1, 3, 6, 1, 2, 1, 12345, 2, 8, 1, 12), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: diffServAlgDropStatus.setStatus('current')
diffServAlgDropNextFree = MibScalar((1, 3, 6, 1, 2, 1, 12345, 1, 7), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: diffServAlgDropNextFree.setStatus('current')
diffServRandomDropTable = MibTable((1, 3, 6, 1, 2, 1, 12345, 2, 9), )
if mibBuilder.loadTexts: diffServRandomDropTable.setStatus('current')
diffServRandomDropEntry = MibTableRow((1, 3, 6, 1, 2, 1, 12345, 2, 9, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "DIFF-SERV-MIB", "diffServAlgDropIfDirection"), (0, "DIFF-SERV-MIB", "diffServAlgDropId"))
if mibBuilder.loadTexts: diffServRandomDropEntry.setStatus('current')
diffServRandomDropMinThreshBytes = MibTableColumn((1, 3, 6, 1, 2, 1, 12345, 2, 9, 1, 1), Unsigned32()).setUnits('bytes').setMaxAccess("readcreate")
if mibBuilder.loadTexts: diffServRandomDropMinThreshBytes.setStatus('current')
diffServRandomDropMinThreshPkts = MibTableColumn((1, 3, 6, 1, 2, 1, 12345, 2, 9, 1, 2), Unsigned32()).setUnits('packets').setMaxAccess("readcreate")
if mibBuilder.loadTexts: diffServRandomDropMinThreshPkts.setStatus('current')
diffServRandomDropMaxThreshBytes = MibTableColumn((1, 3, 6, 1, 2, 1, 12345, 2, 9, 1, 3), Unsigned32()).setUnits('bytes').setMaxAccess("readcreate")
if mibBuilder.loadTexts: diffServRandomDropMaxThreshBytes.setStatus('current')
diffServRandomDropMaxThreshPkts = MibTableColumn((1, 3, 6, 1, 2, 1, 12345, 2, 9, 1, 4), Unsigned32()).setUnits('packets').setMaxAccess("readcreate")
if mibBuilder.loadTexts: diffServRandomDropMaxThreshPkts.setStatus('current')
diffServRandomDropInvWeight = MibTableColumn((1, 3, 6, 1, 2, 1, 12345, 2, 9, 1, 5), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: diffServRandomDropInvWeight.setStatus('current')
diffServRandomDropProbMax = MibTableColumn((1, 3, 6, 1, 2, 1, 12345, 2, 9, 1, 6), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: diffServRandomDropProbMax.setStatus('current')
diffServRandomDropStatus = MibTableColumn((1, 3, 6, 1, 2, 1, 12345, 2, 9, 1, 7), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: diffServRandomDropStatus.setStatus('current')
diffServQTable = MibTable((1, 3, 6, 1, 2, 1, 12345, 2, 10), )
if mibBuilder.loadTexts: diffServQTable.setStatus('current')
diffServQEntry = MibTableRow((1, 3, 6, 1, 2, 1, 12345, 2, 10, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "DIFF-SERV-MIB", "diffServQIfDirection"), (0, "DIFF-SERV-MIB", "diffServQId"))
if mibBuilder.loadTexts: diffServQEntry.setStatus('current')
diffServQIfDirection = MibTableColumn((1, 3, 6, 1, 2, 1, 12345, 2, 10, 1, 1), IfDirection())
if mibBuilder.loadTexts: diffServQIfDirection.setStatus('current')
diffServQId = MibTableColumn((1, 3, 6, 1, 2, 1, 12345, 2, 10, 1, 2), Unsigned32())
if mibBuilder.loadTexts: diffServQId.setStatus('current')
diffServQNext = MibTableColumn((1, 3, 6, 1, 2, 1, 12345, 2, 10, 1, 3), RowPointer()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: diffServQNext.setStatus('current')
diffServQPriority = MibTableColumn((1, 3, 6, 1, 2, 1, 12345, 2, 10, 1, 4), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: diffServQPriority.setStatus('current')
diffServQMinRateAbs = MibTableColumn((1, 3, 6, 1, 2, 1, 12345, 2, 10, 1, 5), Unsigned32()).setUnits('kilobits per second').setMaxAccess("readcreate")
if mibBuilder.loadTexts: diffServQMinRateAbs.setStatus('current')
diffServQMinRateRel = MibTableColumn((1, 3, 6, 1, 2, 1, 12345, 2, 10, 1, 6), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: diffServQMinRateRel.setStatus('current')
diffServQMaxRateAbs = MibTableColumn((1, 3, 6, 1, 2, 1, 12345, 2, 10, 1, 7), Unsigned32()).setUnits('kilobits per second').setMaxAccess("readcreate")
if mibBuilder.loadTexts: diffServQMaxRateAbs.setStatus('current')
diffServQMaxRateRel = MibTableColumn((1, 3, 6, 1, 2, 1, 12345, 2, 10, 1, 8), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: diffServQMaxRateRel.setStatus('current')
diffServQStatus = MibTableColumn((1, 3, 6, 1, 2, 1, 12345, 2, 10, 1, 9), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: diffServQStatus.setStatus('current')
diffServQNextFree = MibScalar((1, 3, 6, 1, 2, 1, 12345, 1, 8), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: diffServQNextFree.setStatus('current')
diffServSchedulerTable = MibTable((1, 3, 6, 1, 2, 1, 12345, 2, 11), )
if mibBuilder.loadTexts: diffServSchedulerTable.setStatus('current')
diffServSchedulerEntry = MibTableRow((1, 3, 6, 1, 2, 1, 12345, 2, 11, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "DIFF-SERV-MIB", "diffServSchedulerIfDirection"), (0, "DIFF-SERV-MIB", "diffServSchedulerId"))
if mibBuilder.loadTexts: diffServSchedulerEntry.setStatus('current')
diffServSchedulerIfDirection = MibTableColumn((1, 3, 6, 1, 2, 1, 12345, 2, 11, 1, 1), IfDirection())
if mibBuilder.loadTexts: diffServSchedulerIfDirection.setStatus('current')
diffServSchedulerId = MibTableColumn((1, 3, 6, 1, 2, 1, 12345, 2, 11, 1, 2), Unsigned32())
if mibBuilder.loadTexts: diffServSchedulerId.setStatus('current')
diffServSchedulerMethod = MibTableColumn((1, 3, 6, 1, 2, 1, 12345, 2, 11, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("priorityq", 2), ("wrr", 3)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: diffServSchedulerMethod.setStatus('current')
diffServSchedulerNext = MibTableColumn((1, 3, 6, 1, 2, 1, 12345, 2, 11, 1, 4), RowPointer().clone((0, 0))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: diffServSchedulerNext.setStatus('current')
diffServSchedulerStatus = MibTableColumn((1, 3, 6, 1, 2, 1, 12345, 2, 11, 1, 5), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: diffServSchedulerStatus.setStatus('current')
diffServSchedulerNextFree = MibScalar((1, 3, 6, 1, 2, 1, 12345, 1, 9), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: diffServSchedulerNextFree.setStatus('current')
diffServMIBCompliances = MibIdentifier((1, 3, 6, 1, 2, 1, 12345, 3, 1))
diffServMIBGroups = MibIdentifier((1, 3, 6, 1, 2, 1, 12345, 3, 2))
diffServMIBCompliance = ModuleCompliance((1, 3, 6, 1, 2, 1, 12345, 3, 1, 1)).setObjects(("DIFF-SERV-MIB", "diffServMIBClassifierGroup"), ("DIFF-SERV-MIB", "diffServMIBSixTupleClfrGroup"), ("DIFF-SERV-MIB", "diffServMIBActionGroup"), ("DIFF-SERV-MIB", "diffServMIBAlgDropGroup"), ("DIFF-SERV-MIB", "diffServMIBQueueGroup"), ("DIFF-SERV-MIB", "diffServMIBSchedulerGroup"), ("DIFF-SERV-MIB", "diffServMIBCounterGroup"), ("DIFF-SERV-MIB", "diffServMIBHCCounterGroup"), ("DIFF-SERV-MIB", "diffServMIBVHCCounterGroup"), ("DIFF-SERV-MIB", "diffServMIBMeterGroup"), ("DIFF-SERV-MIB", "diffServMIBTokenBucketMeterGroup"), ("DIFF-SERV-MIB", "diffServMIBDscpMarkActionGroup"), ("DIFF-SERV-MIB", "diffServMIBRandomDropGroup"), ("DIFF-SERV-MIB", "diffServMIBStaticGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    diffServMIBCompliance = diffServMIBCompliance.setStatus('current')
diffServMIBClassifierGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 12345, 3, 2, 1)).setObjects(("DIFF-SERV-MIB", "diffServClassifierFilter"), ("DIFF-SERV-MIB", "diffServClassifierNext"), ("DIFF-SERV-MIB", "diffServClassifierPrecedence"), ("DIFF-SERV-MIB", "diffServClassifierStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    diffServMIBClassifierGroup = diffServMIBClassifierGroup.setStatus('current')
diffServMIBSixTupleClfrGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 12345, 3, 2, 2)).setObjects(("DIFF-SERV-MIB", "diffServSixTupleClfrDstAddrType"), ("DIFF-SERV-MIB", "diffServSixTupleClfrDstAddr"), ("DIFF-SERV-MIB", "diffServSixTupleClfrDstAddrMask"), ("DIFF-SERV-MIB", "diffServSixTupleClfrDstAddrType"), ("DIFF-SERV-MIB", "diffServSixTupleClfrSrcAddrType"), ("DIFF-SERV-MIB", "diffServSixTupleClfrSrcAddrMask"), ("DIFF-SERV-MIB", "diffServSixTupleClfrDscp"), ("DIFF-SERV-MIB", "diffServSixTupleClfrProtocol"), ("DIFF-SERV-MIB", "diffServSixTupleClfrDstL4PortMin"), ("DIFF-SERV-MIB", "diffServSixTupleClfrDstL4PortMax"), ("DIFF-SERV-MIB", "diffServSixTupleClfrSrcL4PortMin"), ("DIFF-SERV-MIB", "diffServSixTupleClfrSrcL4PortMax"), ("DIFF-SERV-MIB", "diffServSixTupleClfrStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    diffServMIBSixTupleClfrGroup = diffServMIBSixTupleClfrGroup.setStatus('current')
diffServMIBMeterGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 12345, 3, 2, 3)).setObjects(("DIFF-SERV-MIB", "diffServMeterSucceedNext"), ("DIFF-SERV-MIB", "diffServMeterFailNext"), ("DIFF-SERV-MIB", "diffServMeterSpecific"), ("DIFF-SERV-MIB", "diffServMeterStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    diffServMIBMeterGroup = diffServMIBMeterGroup.setStatus('current')
diffServMIBTokenBucketMeterGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 12345, 3, 2, 4)).setObjects(("DIFF-SERV-MIB", "diffServTBMeterRate"), ("DIFF-SERV-MIB", "diffServTBMeterBurstSize"), ("DIFF-SERV-MIB", "diffServTBMeterStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    diffServMIBTokenBucketMeterGroup = diffServMIBTokenBucketMeterGroup.setStatus('current')
diffServMIBActionGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 12345, 3, 2, 5)).setObjects(("DIFF-SERV-MIB", "diffServActionNext"), ("DIFF-SERV-MIB", "diffServActionSpecific"), ("DIFF-SERV-MIB", "diffServActionStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    diffServMIBActionGroup = diffServMIBActionGroup.setStatus('current')
diffServMIBDscpMarkActionGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 12345, 3, 2, 6)).setObjects(("DIFF-SERV-MIB", "diffServDscpMarkActDscp"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    diffServMIBDscpMarkActionGroup = diffServMIBDscpMarkActionGroup.setStatus('current')
diffServMIBCounterGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 12345, 3, 2, 7)).setObjects(("DIFF-SERV-MIB", "diffServCountActOctets"), ("DIFF-SERV-MIB", "diffServCountActPkts"), ("DIFF-SERV-MIB", "diffServCountActStatus"), ("DIFF-SERV-MIB", "diffServAlgDropOctets"), ("DIFF-SERV-MIB", "diffServAlgDropPkts"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    diffServMIBCounterGroup = diffServMIBCounterGroup.setStatus('current')
diffServMIBHCCounterGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 12345, 3, 2, 8)).setObjects(("DIFF-SERV-MIB", "diffServCountActOctets"), ("DIFF-SERV-MIB", "diffServCountActHCOctets"), ("DIFF-SERV-MIB", "diffServCountActPkts"), ("DIFF-SERV-MIB", "diffServCountActStatus"), ("DIFF-SERV-MIB", "diffServAlgDropOctets"), ("DIFF-SERV-MIB", "diffServAlgDropHCOctets"), ("DIFF-SERV-MIB", "diffServAlgDropPkts"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    diffServMIBHCCounterGroup = diffServMIBHCCounterGroup.setStatus('current')
diffServMIBVHCCounterGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 12345, 3, 2, 9)).setObjects(("DIFF-SERV-MIB", "diffServCountActOctets"), ("DIFF-SERV-MIB", "diffServCountActHCOctets"), ("DIFF-SERV-MIB", "diffServCountActPkts"), ("DIFF-SERV-MIB", "diffServCountActHCPkts"), ("DIFF-SERV-MIB", "diffServCountActStatus"), ("DIFF-SERV-MIB", "diffServAlgDropOctets"), ("DIFF-SERV-MIB", "diffServAlgDropHCOctets"), ("DIFF-SERV-MIB", "diffServAlgDropPkts"), ("DIFF-SERV-MIB", "diffServAlgDropHCPkts"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    diffServMIBVHCCounterGroup = diffServMIBVHCCounterGroup.setStatus('current')
diffServMIBAlgDropGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 12345, 3, 2, 10)).setObjects(("DIFF-SERV-MIB", "diffServAlgDropType"), ("DIFF-SERV-MIB", "diffServAlgDropNext"), ("DIFF-SERV-MIB", "diffServAlgDropQMeasure"), ("DIFF-SERV-MIB", "diffServAlgDropQThreshold"), ("DIFF-SERV-MIB", "diffServAlgDropSpecific"), ("DIFF-SERV-MIB", "diffServAlgDropStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    diffServMIBAlgDropGroup = diffServMIBAlgDropGroup.setStatus('current')
diffServMIBRandomDropGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 12345, 3, 2, 11)).setObjects(("DIFF-SERV-MIB", "diffServRandomDropMinThreshBytes"), ("DIFF-SERV-MIB", "diffServRandomDropMinThreshPkts"), ("DIFF-SERV-MIB", "diffServRandomDropMaxThreshBytes"), ("DIFF-SERV-MIB", "diffServRandomDropMaxThreshPkts"), ("DIFF-SERV-MIB", "diffServRandomDropInvWeight"), ("DIFF-SERV-MIB", "diffServRandomDropProbMax"), ("DIFF-SERV-MIB", "diffServRandomDropStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    diffServMIBRandomDropGroup = diffServMIBRandomDropGroup.setStatus('current')
diffServMIBQueueGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 12345, 3, 2, 12)).setObjects(("DIFF-SERV-MIB", "diffServQPriority"), ("DIFF-SERV-MIB", "diffServQNext"), ("DIFF-SERV-MIB", "diffServQMinRateAbs"), ("DIFF-SERV-MIB", "diffServQMinRateRel"), ("DIFF-SERV-MIB", "diffServQMaxRateAbs"), ("DIFF-SERV-MIB", "diffServQMaxRateRel"), ("DIFF-SERV-MIB", "diffServQStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    diffServMIBQueueGroup = diffServMIBQueueGroup.setStatus('current')
diffServMIBSchedulerGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 12345, 3, 2, 13)).setObjects(("DIFF-SERV-MIB", "diffServSchedulerMethod"), ("DIFF-SERV-MIB", "diffServSchedulerNext"), ("DIFF-SERV-MIB", "diffServSchedulerStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    diffServMIBSchedulerGroup = diffServMIBSchedulerGroup.setStatus('current')
diffServMIBStaticGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 12345, 3, 2, 14)).setObjects(("DIFF-SERV-MIB", "diffServClassifierNextFree"), ("DIFF-SERV-MIB", "diffServSixTupleClfrNextFree"), ("DIFF-SERV-MIB", "diffServMeterNextFree"), ("DIFF-SERV-MIB", "diffServActionNextFree"), ("DIFF-SERV-MIB", "diffServAlgDropNextFree"), ("DIFF-SERV-MIB", "diffServQNextFree"), ("DIFF-SERV-MIB", "diffServSchedulerNextFree"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    diffServMIBStaticGroup = diffServMIBStaticGroup.setStatus('current')
mibBuilder.exportSymbols("DIFF-SERV-MIB", diffServSixTupleClfrDstAddrMask=diffServSixTupleClfrDstAddrMask, diffServRandomDropMinThreshPkts=diffServRandomDropMinThreshPkts, diffServQMinRateRel=diffServQMinRateRel, diffServAlgDropNext=diffServAlgDropNext, diffServActionSpecific=diffServActionSpecific, diffServAlgDropEntry=diffServAlgDropEntry, diffServActionIfDirection=diffServActionIfDirection, diffServSixTupleClfrSrcL4PortMax=diffServSixTupleClfrSrcL4PortMax, diffServSixTupleClfrNextFree=diffServSixTupleClfrNextFree, diffServSchedulerIfDirection=diffServSchedulerIfDirection, diffServSchedulerMethod=diffServSchedulerMethod, diffServAlgDropIfDirection=diffServAlgDropIfDirection, diffServAlgDropId=diffServAlgDropId, diffServMeterSpecific=diffServMeterSpecific, diffServAlgDropHCPkts=diffServAlgDropHCPkts, diffServAlgDropNextFree=diffServAlgDropNextFree, diffServActionStatus=diffServActionStatus, diffServCountActTable=diffServCountActTable, diffServMeterNextFree=diffServMeterNextFree, diffServTables=diffServTables, diffServCountActHCPkts=diffServCountActHCPkts, diffServMIBStaticGroup=diffServMIBStaticGroup, diffServMeterId=diffServMeterId, diffServSixTupleClfrStatus=diffServSixTupleClfrStatus, diffServMeterSucceedNext=diffServMeterSucceedNext, diffServCountActStatus=diffServCountActStatus, diffServSixTupleClfrDstAddrType=diffServSixTupleClfrDstAddrType, diffServAlgDropStatus=diffServAlgDropStatus, diffServCountActEntry=diffServCountActEntry, diffServMIBQueueGroup=diffServMIBQueueGroup, diffServSixTupleClfrProtocol=diffServSixTupleClfrProtocol, PYSNMP_MODULE_ID=diffServMib, diffServDscpMarkActTable=diffServDscpMarkActTable, diffServQTable=diffServQTable, IfDirection=IfDirection, diffServTBMeterRate=diffServTBMeterRate, diffServQPriority=diffServQPriority, diffServAlgDropOctets=diffServAlgDropOctets, diffServSchedulerNext=diffServSchedulerNext, diffServRandomDropStatus=diffServRandomDropStatus, diffServTBMeterStatus=diffServTBMeterStatus, diffServSixTupleClfrDstL4PortMax=diffServSixTupleClfrDstL4PortMax, diffServSixTupleClfrSrcL4PortMin=diffServSixTupleClfrSrcL4PortMin, diffServActionEntry=diffServActionEntry, diffServCountActHCOctets=diffServCountActHCOctets, diffServAlgDropPkts=diffServAlgDropPkts, diffServMIBHCCounterGroup=diffServMIBHCCounterGroup, diffServRandomDropMaxThreshBytes=diffServRandomDropMaxThreshBytes, diffServClassifierIfDirection=diffServClassifierIfDirection, diffServCountActPkts=diffServCountActPkts, diffServRandomDropMinThreshBytes=diffServRandomDropMinThreshBytes, diffServMeterIfDirection=diffServMeterIfDirection, diffServSixTupleClfrDstAddr=diffServSixTupleClfrDstAddr, diffServDscpMarkActEntry=diffServDscpMarkActEntry, Dscp=Dscp, diffServTBMeterTable=diffServTBMeterTable, diffServRandomDropInvWeight=diffServRandomDropInvWeight, diffServMIBClassifierGroup=diffServMIBClassifierGroup, diffServClassifierFilter=diffServClassifierFilter, diffServMIBCompliances=diffServMIBCompliances, diffServRandomDropTable=diffServRandomDropTable, SixTupleClfrL4Port=SixTupleClfrL4Port, diffServAlgDropType=diffServAlgDropType, diffServTBMeterEntry=diffServTBMeterEntry, diffServSixTupleClfrSrcAddr=diffServSixTupleClfrSrcAddr, diffServMib=diffServMib, diffServObjects=diffServObjects, diffServCountActDiscontTime=diffServCountActDiscontTime, diffServActionNext=diffServActionNext, diffServSixTupleClfrId=diffServSixTupleClfrId, diffServSchedulerTable=diffServSchedulerTable, diffServMIBConformance=diffServMIBConformance, diffServQId=diffServQId, diffServRandomDropProbMax=diffServRandomDropProbMax, diffServMeterTable=diffServMeterTable, diffServAbsoluteDropAction=diffServAbsoluteDropAction, diffServTBMeterBurstSize=diffServTBMeterBurstSize, diffServClassifierEntry=diffServClassifierEntry, diffServRandomDropEntry=diffServRandomDropEntry, diffServActionTable=diffServActionTable, diffServMeterStatus=diffServMeterStatus, diffServActionNextFree=diffServActionNextFree, diffServAlgDropQThreshold=diffServAlgDropQThreshold, diffServAlgDropHCOctets=diffServAlgDropHCOctets, diffServQNextFree=diffServQNextFree, diffServMIBCompliance=diffServMIBCompliance, diffServCountActOctets=diffServCountActOctets, diffServMIBMeterGroup=diffServMIBMeterGroup, diffServSixTupleClfrDstL4PortMin=diffServSixTupleClfrDstL4PortMin, diffServMeterFailNext=diffServMeterFailNext, diffServActionId=diffServActionId, diffServQIfDirection=diffServQIfDirection, diffServClassifierNext=diffServClassifierNext, diffServQStatus=diffServQStatus, diffServRandomDropMaxThreshPkts=diffServRandomDropMaxThreshPkts, diffServClassifierStatus=diffServClassifierStatus, diffServSixTupleClfrDscp=diffServSixTupleClfrDscp, diffServSixTupleClfrSrcAddrType=diffServSixTupleClfrSrcAddrType, diffServSchedulerEntry=diffServSchedulerEntry, diffServClassifierPrecedence=diffServClassifierPrecedence, diffServSixTupleClfrSrcAddrMask=diffServSixTupleClfrSrcAddrMask, diffServSixTupleClfrEntry=diffServSixTupleClfrEntry, diffServMIBDscpMarkActionGroup=diffServMIBDscpMarkActionGroup, diffServSixTupleClfrTable=diffServSixTupleClfrTable, diffServAlgDropSpecific=diffServAlgDropSpecific, diffServMIBGroups=diffServMIBGroups, diffServSchedulerStatus=diffServSchedulerStatus, diffServMIBSixTupleClfrGroup=diffServMIBSixTupleClfrGroup, diffServQMaxRateRel=diffServQMaxRateRel, diffServClassifierTable=diffServClassifierTable, diffServMeterEntry=diffServMeterEntry, diffServQMaxRateAbs=diffServQMaxRateAbs, diffServQMinRateAbs=diffServQMinRateAbs, diffServClassifierNextFree=diffServClassifierNextFree, diffServQEntry=diffServQEntry, diffServMIBRandomDropGroup=diffServMIBRandomDropGroup, diffServMIBTokenBucketMeterGroup=diffServMIBTokenBucketMeterGroup, diffServSchedulerNextFree=diffServSchedulerNextFree, diffServMIBSchedulerGroup=diffServMIBSchedulerGroup, diffServMIBAlgDropGroup=diffServMIBAlgDropGroup, diffServMIBVHCCounterGroup=diffServMIBVHCCounterGroup, diffServMIBCounterGroup=diffServMIBCounterGroup, diffServQNext=diffServQNext, diffServAlgDropTable=diffServAlgDropTable, diffServSchedulerId=diffServSchedulerId, diffServClassifierTcb=diffServClassifierTcb, diffServMIBActionGroup=diffServMIBActionGroup, diffServClassifierId=diffServClassifierId, diffServAlgDropQMeasure=diffServAlgDropQMeasure, diffServDscpMarkActDscp=diffServDscpMarkActDscp)
