#
# PySNMP MIB module CPQTHRSH-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CPQTHRSH-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 18:12:24 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ValueRangeConstraint, ConstraintsUnion, ConstraintsIntersection, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ValueRangeConstraint", "ConstraintsUnion", "ConstraintsIntersection", "ValueSizeConstraint")
cpqHoTrapFlags, compaq = mibBuilder.importSymbols("CPQHOST-MIB", "cpqHoTrapFlags", "compaq")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
sysName, = mibBuilder.importSymbols("SNMPv2-MIB", "sysName")
Integer32, Counter64, ObjectIdentity, MibIdentifier, NotificationType, ModuleIdentity, iso, NotificationType, enterprises, Bits, Gauge32, Unsigned32, IpAddress, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter32, TimeTicks = mibBuilder.importSymbols("SNMPv2-SMI", "Integer32", "Counter64", "ObjectIdentity", "MibIdentifier", "NotificationType", "ModuleIdentity", "iso", "NotificationType", "enterprises", "Bits", "Gauge32", "Unsigned32", "IpAddress", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter32", "TimeTicks")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
cpqThresholdMgmt = MibIdentifier((1, 3, 6, 1, 4, 1, 232, 10))
cpqMeMibRev = MibIdentifier((1, 3, 6, 1, 4, 1, 232, 10, 1))
cpqMeComponent = MibIdentifier((1, 3, 6, 1, 4, 1, 232, 10, 2))
cpqMeInterface = MibIdentifier((1, 3, 6, 1, 4, 1, 232, 10, 2, 1))
cpqMeAlarm = MibIdentifier((1, 3, 6, 1, 4, 1, 232, 10, 2, 2))
cpqMeOsCommon = MibIdentifier((1, 3, 6, 1, 4, 1, 232, 10, 2, 1, 4))
cpqMeMibRevMajor = MibScalar((1, 3, 6, 1, 4, 1, 232, 10, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cpqMeMibRevMajor.setStatus('mandatory')
cpqMeMibRevMinor = MibScalar((1, 3, 6, 1, 4, 1, 232, 10, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cpqMeMibRevMinor.setStatus('mandatory')
cpqMeMibCondition = MibScalar((1, 3, 6, 1, 4, 1, 232, 10, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("other", 1), ("ok", 2), ("degraded", 3), ("failed", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cpqMeMibCondition.setStatus('mandatory')
cpqMeOsCommonPollFreq = MibScalar((1, 3, 6, 1, 4, 1, 232, 10, 2, 1, 4, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cpqMeOsCommonPollFreq.setStatus('mandatory')
cpqMeOsCommonModuleTable = MibTable((1, 3, 6, 1, 4, 1, 232, 10, 2, 1, 4, 2), )
if mibBuilder.loadTexts: cpqMeOsCommonModuleTable.setStatus('deprecated')
cpqMeOsCommonModuleEntry = MibTableRow((1, 3, 6, 1, 4, 1, 232, 10, 2, 1, 4, 2, 1), ).setIndexNames((0, "CPQTHRSH-MIB", "cpqMeOsCommonModuleIndex"))
if mibBuilder.loadTexts: cpqMeOsCommonModuleEntry.setStatus('deprecated')
cpqMeOsCommonModuleIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 232, 10, 2, 1, 4, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cpqMeOsCommonModuleIndex.setStatus('deprecated')
cpqMeOsCommonModuleName = MibTableColumn((1, 3, 6, 1, 4, 1, 232, 10, 2, 1, 4, 2, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cpqMeOsCommonModuleName.setStatus('deprecated')
cpqMeOsCommonModuleVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 232, 10, 2, 1, 4, 2, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 5))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cpqMeOsCommonModuleVersion.setStatus('deprecated')
cpqMeOsCommonModuleDate = MibTableColumn((1, 3, 6, 1, 4, 1, 232, 10, 2, 1, 4, 2, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(7, 7)).setFixedLength(7)).setMaxAccess("readonly")
if mibBuilder.loadTexts: cpqMeOsCommonModuleDate.setStatus('deprecated')
cpqMeOsCommonModulePurpose = MibTableColumn((1, 3, 6, 1, 4, 1, 232, 10, 2, 1, 4, 2, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cpqMeOsCommonModulePurpose.setStatus('deprecated')
cpqMeAlarmNextIndex = MibScalar((1, 3, 6, 1, 4, 1, 232, 10, 2, 2, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cpqMeAlarmNextIndex.setStatus('mandatory')
cpqMeAlarmTable = MibTable((1, 3, 6, 1, 4, 1, 232, 10, 2, 2, 2), )
if mibBuilder.loadTexts: cpqMeAlarmTable.setStatus('mandatory')
cpqMeAlarmEntry = MibTableRow((1, 3, 6, 1, 4, 1, 232, 10, 2, 2, 2, 1), ).setIndexNames((0, "CPQTHRSH-MIB", "cpqMeAlarmIndex"))
if mibBuilder.loadTexts: cpqMeAlarmEntry.setStatus('mandatory')
cpqMeAlarmIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 232, 10, 2, 2, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cpqMeAlarmIndex.setStatus('mandatory')
cpqMeAlarmInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 232, 10, 2, 2, 2, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cpqMeAlarmInterval.setStatus('mandatory')
cpqMeAlarmVariable = MibTableColumn((1, 3, 6, 1, 4, 1, 232, 10, 2, 2, 2, 1, 3), ObjectIdentifier()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cpqMeAlarmVariable.setStatus('mandatory')
cpqMeAlarmSampleType = MibTableColumn((1, 3, 6, 1, 4, 1, 232, 10, 2, 2, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("absoluteValue", 1), ("deltaValue", 2), ("absSuppressRisingTrap", 3), ("absSuppressFallingTrap", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cpqMeAlarmSampleType.setStatus('mandatory')
cpqMeAlarmValue = MibTableColumn((1, 3, 6, 1, 4, 1, 232, 10, 2, 2, 2, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cpqMeAlarmValue.setStatus('mandatory')
cpqMeAlarmStartupAlarm = MibTableColumn((1, 3, 6, 1, 4, 1, 232, 10, 2, 2, 2, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("risingAlarm", 1), ("fallingAlarm", 2), ("risingOrFallingAlarm", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cpqMeAlarmStartupAlarm.setStatus('mandatory')
cpqMeAlarmRisingThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 232, 10, 2, 2, 2, 1, 7), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cpqMeAlarmRisingThreshold.setStatus('mandatory')
cpqMeAlarmFallingThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 232, 10, 2, 2, 2, 1, 8), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cpqMeAlarmFallingThreshold.setStatus('mandatory')
cpqMeAlarmPermanence = MibTableColumn((1, 3, 6, 1, 4, 1, 232, 10, 2, 2, 2, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("temporary", 1), ("permanent", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cpqMeAlarmPermanence.setStatus('mandatory')
cpqMeAlarmOwner = MibTableColumn((1, 3, 6, 1, 4, 1, 232, 10, 2, 2, 2, 1, 10), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 127))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cpqMeAlarmOwner.setStatus('mandatory')
cpqMeAlarmStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 232, 10, 2, 2, 2, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("valid", 1), ("createRequest", 2), ("underCreation", 3), ("invalid", 4), ("tempUnavailable", 5)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cpqMeAlarmStatus.setStatus('mandatory')
cpqMeAlarmSeverity = MibTableColumn((1, 3, 6, 1, 4, 1, 232, 10, 2, 2, 2, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("unknown", 1), ("normal", 2), ("minor", 3), ("warning", 4), ("major", 5), ("critical", 6)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cpqMeAlarmSeverity.setStatus('mandatory')
cpqMeAlarmExtendedDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 232, 10, 2, 2, 2, 1, 13), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 127))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cpqMeAlarmExtendedDescription.setStatus('mandatory')
cpqMeRisingAlarm = NotificationType((1, 3, 6, 1, 4, 1, 232) + (0,10001)).setObjects(("CPQTHRSH-MIB", "cpqMeAlarmVariable"), ("CPQTHRSH-MIB", "cpqMeAlarmSampleType"), ("CPQTHRSH-MIB", "cpqMeAlarmValue"), ("CPQTHRSH-MIB", "cpqMeAlarmRisingThreshold"), ("CPQTHRSH-MIB", "cpqMeAlarmOwner"))
cpqMeFallingAlarm = NotificationType((1, 3, 6, 1, 4, 1, 232) + (0,10002)).setObjects(("CPQTHRSH-MIB", "cpqMeAlarmVariable"), ("CPQTHRSH-MIB", "cpqMeAlarmSampleType"), ("CPQTHRSH-MIB", "cpqMeAlarmValue"), ("CPQTHRSH-MIB", "cpqMeAlarmFallingThreshold"), ("CPQTHRSH-MIB", "cpqMeAlarmOwner"))
cpqMe2RisingAlarm = NotificationType((1, 3, 6, 1, 4, 1, 232) + (0,10003)).setObjects(("SNMPv2-MIB", "sysName"), ("CPQHOST-MIB", "cpqHoTrapFlags"), ("CPQTHRSH-MIB", "cpqMeAlarmVariable"), ("CPQTHRSH-MIB", "cpqMeAlarmSampleType"), ("CPQTHRSH-MIB", "cpqMeAlarmValue"), ("CPQTHRSH-MIB", "cpqMeAlarmRisingThreshold"), ("CPQTHRSH-MIB", "cpqMeAlarmOwner"))
cpqMe2FallingAlarm = NotificationType((1, 3, 6, 1, 4, 1, 232) + (0,10004)).setObjects(("SNMPv2-MIB", "sysName"), ("CPQHOST-MIB", "cpqHoTrapFlags"), ("CPQTHRSH-MIB", "cpqMeAlarmVariable"), ("CPQTHRSH-MIB", "cpqMeAlarmSampleType"), ("CPQTHRSH-MIB", "cpqMeAlarmValue"), ("CPQTHRSH-MIB", "cpqMeAlarmFallingThreshold"), ("CPQTHRSH-MIB", "cpqMeAlarmOwner"))
cpqMeRisingAlarmExtended = NotificationType((1, 3, 6, 1, 4, 1, 232) + (0,10005)).setObjects(("SNMPv2-MIB", "sysName"), ("CPQHOST-MIB", "cpqHoTrapFlags"), ("CPQTHRSH-MIB", "cpqMeAlarmVariable"), ("CPQTHRSH-MIB", "cpqMeAlarmSampleType"), ("CPQTHRSH-MIB", "cpqMeAlarmValue"), ("CPQTHRSH-MIB", "cpqMeAlarmRisingThreshold"), ("CPQTHRSH-MIB", "cpqMeAlarmOwner"), ("CPQTHRSH-MIB", "cpqMeAlarmSeverity"), ("CPQTHRSH-MIB", "cpqMeAlarmExtendedDescription"))
cpqMeFallingAlarmExtended = NotificationType((1, 3, 6, 1, 4, 1, 232) + (0,10006)).setObjects(("SNMPv2-MIB", "sysName"), ("CPQHOST-MIB", "cpqHoTrapFlags"), ("CPQTHRSH-MIB", "cpqMeAlarmVariable"), ("CPQTHRSH-MIB", "cpqMeAlarmSampleType"), ("CPQTHRSH-MIB", "cpqMeAlarmValue"), ("CPQTHRSH-MIB", "cpqMeAlarmFallingThreshold"), ("CPQTHRSH-MIB", "cpqMeAlarmOwner"), ("CPQTHRSH-MIB", "cpqMeAlarmSeverity"), ("CPQTHRSH-MIB", "cpqMeAlarmExtendedDescription"))
cpqMeCriticalRisingAlarmExtended = NotificationType((1, 3, 6, 1, 4, 1, 232) + (0,10007)).setObjects(("SNMPv2-MIB", "sysName"), ("CPQHOST-MIB", "cpqHoTrapFlags"), ("CPQTHRSH-MIB", "cpqMeAlarmVariable"), ("CPQTHRSH-MIB", "cpqMeAlarmSampleType"), ("CPQTHRSH-MIB", "cpqMeAlarmValue"), ("CPQTHRSH-MIB", "cpqMeAlarmRisingThreshold"), ("CPQTHRSH-MIB", "cpqMeAlarmOwner"), ("CPQTHRSH-MIB", "cpqMeAlarmSeverity"), ("CPQTHRSH-MIB", "cpqMeAlarmExtendedDescription"))
cpqMeCriticalFallingAlarmExtended = NotificationType((1, 3, 6, 1, 4, 1, 232) + (0,10008)).setObjects(("SNMPv2-MIB", "sysName"), ("CPQHOST-MIB", "cpqHoTrapFlags"), ("CPQTHRSH-MIB", "cpqMeAlarmVariable"), ("CPQTHRSH-MIB", "cpqMeAlarmSampleType"), ("CPQTHRSH-MIB", "cpqMeAlarmValue"), ("CPQTHRSH-MIB", "cpqMeAlarmFallingThreshold"), ("CPQTHRSH-MIB", "cpqMeAlarmOwner"), ("CPQTHRSH-MIB", "cpqMeAlarmSeverity"), ("CPQTHRSH-MIB", "cpqMeAlarmExtendedDescription"))
mibBuilder.exportSymbols("CPQTHRSH-MIB", cpqMeAlarmIndex=cpqMeAlarmIndex, cpqMeOsCommonPollFreq=cpqMeOsCommonPollFreq, cpqMeMibRevMajor=cpqMeMibRevMajor, cpqMeAlarmSampleType=cpqMeAlarmSampleType, cpqMeAlarmSeverity=cpqMeAlarmSeverity, cpqMeFallingAlarmExtended=cpqMeFallingAlarmExtended, cpqMeOsCommonModuleEntry=cpqMeOsCommonModuleEntry, cpqMeAlarmInterval=cpqMeAlarmInterval, cpqMeCriticalRisingAlarmExtended=cpqMeCriticalRisingAlarmExtended, cpqMeAlarmPermanence=cpqMeAlarmPermanence, cpqMeFallingAlarm=cpqMeFallingAlarm, cpqMeAlarmStartupAlarm=cpqMeAlarmStartupAlarm, cpqMeMibCondition=cpqMeMibCondition, cpqMeAlarm=cpqMeAlarm, cpqMeRisingAlarm=cpqMeRisingAlarm, cpqMeAlarmFallingThreshold=cpqMeAlarmFallingThreshold, cpqMe2RisingAlarm=cpqMe2RisingAlarm, cpqMeAlarmTable=cpqMeAlarmTable, cpqMeAlarmOwner=cpqMeAlarmOwner, cpqMeOsCommonModuleName=cpqMeOsCommonModuleName, cpqMeAlarmNextIndex=cpqMeAlarmNextIndex, cpqMeAlarmStatus=cpqMeAlarmStatus, cpqMeOsCommonModuleTable=cpqMeOsCommonModuleTable, cpqMeOsCommonModuleDate=cpqMeOsCommonModuleDate, cpqMeOsCommonModulePurpose=cpqMeOsCommonModulePurpose, cpqMeRisingAlarmExtended=cpqMeRisingAlarmExtended, cpqMeOsCommonModuleIndex=cpqMeOsCommonModuleIndex, cpqMeOsCommon=cpqMeOsCommon, cpqMeAlarmEntry=cpqMeAlarmEntry, cpqMeCriticalFallingAlarmExtended=cpqMeCriticalFallingAlarmExtended, cpqMeAlarmRisingThreshold=cpqMeAlarmRisingThreshold, cpqMeComponent=cpqMeComponent, cpqMeOsCommonModuleVersion=cpqMeOsCommonModuleVersion, cpqThresholdMgmt=cpqThresholdMgmt, cpqMe2FallingAlarm=cpqMe2FallingAlarm, cpqMeMibRev=cpqMeMibRev, cpqMeAlarmExtendedDescription=cpqMeAlarmExtendedDescription, cpqMeAlarmVariable=cpqMeAlarmVariable, cpqMeInterface=cpqMeInterface, cpqMeAlarmValue=cpqMeAlarmValue, cpqMeMibRevMinor=cpqMeMibRevMinor)
