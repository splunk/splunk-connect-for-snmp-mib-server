#
# PySNMP MIB module DOCS-BPI-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/DOCS-BPI-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 18:37:35 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ValueSizeConstraint, ConstraintsIntersection, ConstraintsUnion, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ValueSizeConstraint", "ConstraintsIntersection", "ConstraintsUnion", "ValueRangeConstraint")
docsIfMib, docsIfCmServiceId, docsIfCmtsServiceId = mibBuilder.importSymbols("DOCS-IF-MIB", "docsIfMib", "docsIfCmServiceId", "docsIfCmtsServiceId")
ifIndex, = mibBuilder.importSymbols("IF-MIB", "ifIndex")
ModuleCompliance, NotificationGroup, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup", "ObjectGroup")
ModuleIdentity, Integer32, Counter32, TimeTicks, Counter64, ObjectIdentity, MibIdentifier, IpAddress, Bits, NotificationType, iso, Gauge32, MibScalar, MibTable, MibTableRow, MibTableColumn, Unsigned32 = mibBuilder.importSymbols("SNMPv2-SMI", "ModuleIdentity", "Integer32", "Counter32", "TimeTicks", "Counter64", "ObjectIdentity", "MibIdentifier", "IpAddress", "Bits", "NotificationType", "iso", "Gauge32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Unsigned32")
DateAndTime, RowStatus, TruthValue, TextualConvention, MacAddress, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "DateAndTime", "RowStatus", "TruthValue", "TextualConvention", "MacAddress", "DisplayString")
docsBpiMIB = ModuleIdentity((1, 3, 6, 1, 2, 1, 10, 127, 5))
docsBpiMIB.setRevisions(('2001-03-13 00:00', '2000-11-03 19:30', '2000-02-16 19:30',))
if mibBuilder.loadTexts: docsBpiMIB.setLastUpdated('200103130000Z')
if mibBuilder.loadTexts: docsBpiMIB.setOrganization('IETF IPCDN Working Group')
docsBpiMIBObjects = MibIdentifier((1, 3, 6, 1, 2, 1, 10, 127, 5, 1))
docsBpiCmObjects = MibIdentifier((1, 3, 6, 1, 2, 1, 10, 127, 5, 1, 1))
docsBpiCmBaseTable = MibTable((1, 3, 6, 1, 2, 1, 10, 127, 5, 1, 1, 1), )
if mibBuilder.loadTexts: docsBpiCmBaseTable.setStatus('current')
docsBpiCmBaseEntry = MibTableRow((1, 3, 6, 1, 2, 1, 10, 127, 5, 1, 1, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: docsBpiCmBaseEntry.setStatus('current')
docsBpiCmPrivacyEnable = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 127, 5, 1, 1, 1, 1, 1), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsBpiCmPrivacyEnable.setStatus('current')
docsBpiCmPublicKey = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 127, 5, 1, 1, 1, 1, 2), OctetString().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(74, 74), ValueSizeConstraint(106, 106), ValueSizeConstraint(140, 140), ValueSizeConstraint(270, 270), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsBpiCmPublicKey.setStatus('current')
docsBpiCmAuthState = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 127, 5, 1, 1, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(2, 3, 4, 5))).clone(namedValues=NamedValues(("authWait", 2), ("authorized", 3), ("reauthWait", 4), ("authRejectWait", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsBpiCmAuthState.setStatus('current')
docsBpiCmAuthKeySequenceNumber = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 127, 5, 1, 1, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsBpiCmAuthKeySequenceNumber.setStatus('current')
docsBpiCmAuthExpires = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 127, 5, 1, 1, 1, 1, 5), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsBpiCmAuthExpires.setStatus('current')
docsBpiCmAuthReset = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 127, 5, 1, 1, 1, 1, 6), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: docsBpiCmAuthReset.setStatus('current')
docsBpiCmAuthGraceTime = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 127, 5, 1, 1, 1, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1800))).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: docsBpiCmAuthGraceTime.setStatus('current')
docsBpiCmTEKGraceTime = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 127, 5, 1, 1, 1, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1800))).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: docsBpiCmTEKGraceTime.setStatus('current')
docsBpiCmAuthWaitTimeout = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 127, 5, 1, 1, 1, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 30))).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: docsBpiCmAuthWaitTimeout.setStatus('current')
docsBpiCmReauthWaitTimeout = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 127, 5, 1, 1, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 30))).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: docsBpiCmReauthWaitTimeout.setStatus('current')
docsBpiCmOpWaitTimeout = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 127, 5, 1, 1, 1, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 10))).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: docsBpiCmOpWaitTimeout.setStatus('current')
docsBpiCmRekeyWaitTimeout = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 127, 5, 1, 1, 1, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 10))).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: docsBpiCmRekeyWaitTimeout.setStatus('current')
docsBpiCmAuthRejectWaitTimeout = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 127, 5, 1, 1, 1, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 600))).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: docsBpiCmAuthRejectWaitTimeout.setStatus('current')
docsBpiCmAuthRequests = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 127, 5, 1, 1, 1, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsBpiCmAuthRequests.setStatus('current')
docsBpiCmAuthReplies = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 127, 5, 1, 1, 1, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsBpiCmAuthReplies.setStatus('current')
docsBpiCmAuthRejects = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 127, 5, 1, 1, 1, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsBpiCmAuthRejects.setStatus('current')
docsBpiCmAuthInvalids = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 127, 5, 1, 1, 1, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsBpiCmAuthInvalids.setStatus('current')
docsBpiCmAuthRejectErrorCode = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 127, 5, 1, 1, 1, 1, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("none", 1), ("unknown", 2), ("unauthorizedCm", 3), ("unauthorizedSid", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsBpiCmAuthRejectErrorCode.setStatus('current')
docsBpiCmAuthRejectErrorString = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 127, 5, 1, 1, 1, 1, 19), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsBpiCmAuthRejectErrorString.setStatus('current')
docsBpiCmAuthInvalidErrorCode = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 127, 5, 1, 1, 1, 1, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 5, 6, 7))).clone(namedValues=NamedValues(("none", 1), ("unknown", 2), ("unauthorizedCm", 3), ("unsolicited", 5), ("invalidKeySequence", 6), ("keyRequestAuthenticationFailure", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsBpiCmAuthInvalidErrorCode.setStatus('current')
docsBpiCmAuthInvalidErrorString = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 127, 5, 1, 1, 1, 1, 21), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsBpiCmAuthInvalidErrorString.setStatus('current')
docsBpiCmTEKTable = MibTable((1, 3, 6, 1, 2, 1, 10, 127, 5, 1, 1, 2), )
if mibBuilder.loadTexts: docsBpiCmTEKTable.setStatus('current')
docsBpiCmTEKEntry = MibTableRow((1, 3, 6, 1, 2, 1, 10, 127, 5, 1, 1, 2, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "DOCS-IF-MIB", "docsIfCmServiceId"))
if mibBuilder.loadTexts: docsBpiCmTEKEntry.setStatus('current')
docsBpiCmTEKPrivacyEnable = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 127, 5, 1, 1, 2, 1, 1), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsBpiCmTEKPrivacyEnable.setStatus('current')
docsBpiCmTEKState = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 127, 5, 1, 1, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("start", 1), ("opWait", 2), ("opReauthWait", 3), ("operational", 4), ("rekeyWait", 5), ("rekeyReauthWait", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsBpiCmTEKState.setStatus('current')
docsBpiCmTEKExpiresOld = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 127, 5, 1, 1, 2, 1, 3), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsBpiCmTEKExpiresOld.setStatus('current')
docsBpiCmTEKExpiresNew = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 127, 5, 1, 1, 2, 1, 4), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsBpiCmTEKExpiresNew.setStatus('current')
docsBpiCmTEKKeyRequests = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 127, 5, 1, 1, 2, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsBpiCmTEKKeyRequests.setStatus('current')
docsBpiCmTEKKeyReplies = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 127, 5, 1, 1, 2, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsBpiCmTEKKeyReplies.setStatus('current')
docsBpiCmTEKKeyRejects = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 127, 5, 1, 1, 2, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsBpiCmTEKKeyRejects.setStatus('current')
docsBpiCmTEKInvalids = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 127, 5, 1, 1, 2, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsBpiCmTEKInvalids.setStatus('current')
docsBpiCmTEKAuthPends = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 127, 5, 1, 1, 2, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsBpiCmTEKAuthPends.setStatus('current')
docsBpiCmTEKKeyRejectErrorCode = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 127, 5, 1, 1, 2, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 4))).clone(namedValues=NamedValues(("none", 1), ("unknown", 2), ("unauthorizedSid", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsBpiCmTEKKeyRejectErrorCode.setStatus('current')
docsBpiCmTEKKeyRejectErrorString = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 127, 5, 1, 1, 2, 1, 11), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsBpiCmTEKKeyRejectErrorString.setStatus('current')
docsBpiCmTEKInvalidErrorCode = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 127, 5, 1, 1, 2, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 6))).clone(namedValues=NamedValues(("none", 1), ("unknown", 2), ("invalidKeySequence", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsBpiCmTEKInvalidErrorCode.setStatus('current')
docsBpiCmTEKInvalidErrorString = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 127, 5, 1, 1, 2, 1, 13), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsBpiCmTEKInvalidErrorString.setStatus('current')
docsBpiCmtsObjects = MibIdentifier((1, 3, 6, 1, 2, 1, 10, 127, 5, 1, 2))
docsBpiCmtsBaseTable = MibTable((1, 3, 6, 1, 2, 1, 10, 127, 5, 1, 2, 1), )
if mibBuilder.loadTexts: docsBpiCmtsBaseTable.setStatus('current')
docsBpiCmtsBaseEntry = MibTableRow((1, 3, 6, 1, 2, 1, 10, 127, 5, 1, 2, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: docsBpiCmtsBaseEntry.setStatus('current')
docsBpiCmtsDefaultAuthLifetime = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 127, 5, 1, 2, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 6048000))).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: docsBpiCmtsDefaultAuthLifetime.setStatus('current')
docsBpiCmtsDefaultTEKLifetime = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 127, 5, 1, 2, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 604800))).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: docsBpiCmtsDefaultTEKLifetime.setStatus('current')
docsBpiCmtsDefaultAuthGraceTime = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 127, 5, 1, 2, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1800))).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: docsBpiCmtsDefaultAuthGraceTime.setStatus('obsolete')
docsBpiCmtsDefaultTEKGraceTime = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 127, 5, 1, 2, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1800))).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: docsBpiCmtsDefaultTEKGraceTime.setStatus('obsolete')
docsBpiCmtsAuthRequests = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 127, 5, 1, 2, 1, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsBpiCmtsAuthRequests.setStatus('current')
docsBpiCmtsAuthReplies = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 127, 5, 1, 2, 1, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsBpiCmtsAuthReplies.setStatus('current')
docsBpiCmtsAuthRejects = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 127, 5, 1, 2, 1, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsBpiCmtsAuthRejects.setStatus('current')
docsBpiCmtsAuthInvalids = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 127, 5, 1, 2, 1, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsBpiCmtsAuthInvalids.setStatus('current')
docsBpiCmtsAuthTable = MibTable((1, 3, 6, 1, 2, 1, 10, 127, 5, 1, 2, 2), )
if mibBuilder.loadTexts: docsBpiCmtsAuthTable.setStatus('current')
docsBpiCmtsAuthEntry = MibTableRow((1, 3, 6, 1, 2, 1, 10, 127, 5, 1, 2, 2, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "DOCS-BPI-MIB", "docsBpiCmtsAuthCmMacAddress"))
if mibBuilder.loadTexts: docsBpiCmtsAuthEntry.setStatus('current')
docsBpiCmtsAuthCmMacAddress = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 127, 5, 1, 2, 2, 1, 1), MacAddress())
if mibBuilder.loadTexts: docsBpiCmtsAuthCmMacAddress.setStatus('current')
docsBpiCmtsAuthCmPublicKey = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 127, 5, 1, 2, 2, 1, 2), OctetString().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(74, 74), ValueSizeConstraint(106, 106), ValueSizeConstraint(140, 140), ValueSizeConstraint(270, 270), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsBpiCmtsAuthCmPublicKey.setStatus('current')
docsBpiCmtsAuthCmKeySequenceNumber = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 127, 5, 1, 2, 2, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsBpiCmtsAuthCmKeySequenceNumber.setStatus('current')
docsBpiCmtsAuthCmExpires = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 127, 5, 1, 2, 2, 1, 4), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsBpiCmtsAuthCmExpires.setStatus('current')
docsBpiCmtsAuthCmLifetime = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 127, 5, 1, 2, 2, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 6048000))).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: docsBpiCmtsAuthCmLifetime.setStatus('current')
docsBpiCmtsAuthCmGraceTime = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 127, 5, 1, 2, 2, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1800))).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: docsBpiCmtsAuthCmGraceTime.setStatus('current')
docsBpiCmtsAuthCmReset = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 127, 5, 1, 2, 2, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("noResetRequested", 1), ("invalidateAuth", 2), ("sendAuthInvalid", 3), ("invalidateTeks", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: docsBpiCmtsAuthCmReset.setStatus('current')
docsBpiCmtsAuthCmRequests = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 127, 5, 1, 2, 2, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsBpiCmtsAuthCmRequests.setStatus('current')
docsBpiCmtsAuthCmReplies = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 127, 5, 1, 2, 2, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsBpiCmtsAuthCmReplies.setStatus('current')
docsBpiCmtsAuthCmRejects = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 127, 5, 1, 2, 2, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsBpiCmtsAuthCmRejects.setStatus('current')
docsBpiCmtsAuthCmInvalids = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 127, 5, 1, 2, 2, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsBpiCmtsAuthCmInvalids.setStatus('current')
docsBpiCmtsAuthRejectErrorCode = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 127, 5, 1, 2, 2, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("none", 1), ("unknown", 2), ("unauthorizedCm", 3), ("unauthorizedSid", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsBpiCmtsAuthRejectErrorCode.setStatus('current')
docsBpiCmtsAuthRejectErrorString = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 127, 5, 1, 2, 2, 1, 13), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsBpiCmtsAuthRejectErrorString.setStatus('current')
docsBpiCmtsAuthInvalidErrorCode = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 127, 5, 1, 2, 2, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 5, 6, 7))).clone(namedValues=NamedValues(("none", 1), ("unknown", 2), ("unauthorizedCm", 3), ("unsolicited", 5), ("invalidKeySequence", 6), ("keyRequestAuthenticationFailure", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsBpiCmtsAuthInvalidErrorCode.setStatus('current')
docsBpiCmtsAuthInvalidErrorString = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 127, 5, 1, 2, 2, 1, 15), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsBpiCmtsAuthInvalidErrorString.setStatus('current')
docsBpiCmtsTEKTable = MibTable((1, 3, 6, 1, 2, 1, 10, 127, 5, 1, 2, 3), )
if mibBuilder.loadTexts: docsBpiCmtsTEKTable.setStatus('current')
docsBpiCmtsTEKEntry = MibTableRow((1, 3, 6, 1, 2, 1, 10, 127, 5, 1, 2, 3, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "DOCS-IF-MIB", "docsIfCmtsServiceId"))
if mibBuilder.loadTexts: docsBpiCmtsTEKEntry.setStatus('current')
docsBpiCmtsTEKLifetime = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 127, 5, 1, 2, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 604800))).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: docsBpiCmtsTEKLifetime.setStatus('current')
docsBpiCmtsTEKGraceTime = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 127, 5, 1, 2, 3, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1800))).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: docsBpiCmtsTEKGraceTime.setStatus('current')
docsBpiCmtsTEKExpiresOld = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 127, 5, 1, 2, 3, 1, 3), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsBpiCmtsTEKExpiresOld.setStatus('current')
docsBpiCmtsTEKExpiresNew = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 127, 5, 1, 2, 3, 1, 4), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsBpiCmtsTEKExpiresNew.setStatus('current')
docsBpiCmtsTEKReset = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 127, 5, 1, 2, 3, 1, 5), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: docsBpiCmtsTEKReset.setStatus('current')
docsBpiCmtsKeyRequests = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 127, 5, 1, 2, 3, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsBpiCmtsKeyRequests.setStatus('current')
docsBpiCmtsKeyReplies = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 127, 5, 1, 2, 3, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsBpiCmtsKeyReplies.setStatus('current')
docsBpiCmtsKeyRejects = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 127, 5, 1, 2, 3, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsBpiCmtsKeyRejects.setStatus('current')
docsBpiCmtsTEKInvalids = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 127, 5, 1, 2, 3, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsBpiCmtsTEKInvalids.setStatus('current')
docsBpiCmtsKeyRejectErrorCode = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 127, 5, 1, 2, 3, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 4))).clone(namedValues=NamedValues(("none", 1), ("unknown", 2), ("unauthorizedSid", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsBpiCmtsKeyRejectErrorCode.setStatus('current')
docsBpiCmtsKeyRejectErrorString = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 127, 5, 1, 2, 3, 1, 11), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsBpiCmtsKeyRejectErrorString.setStatus('current')
docsBpiCmtsTEKInvalidErrorCode = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 127, 5, 1, 2, 3, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 6))).clone(namedValues=NamedValues(("none", 1), ("unknown", 2), ("invalidKeySequence", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsBpiCmtsTEKInvalidErrorCode.setStatus('current')
docsBpiCmtsTEKInvalidErrorString = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 127, 5, 1, 2, 3, 1, 13), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsBpiCmtsTEKInvalidErrorString.setStatus('current')
docsBpiMulticastControl = MibIdentifier((1, 3, 6, 1, 2, 1, 10, 127, 5, 1, 2, 4))
docsBpiIpMulticastMapTable = MibTable((1, 3, 6, 1, 2, 1, 10, 127, 5, 1, 2, 4, 1), )
if mibBuilder.loadTexts: docsBpiIpMulticastMapTable.setStatus('current')
docsBpiIpMulticastMapEntry = MibTableRow((1, 3, 6, 1, 2, 1, 10, 127, 5, 1, 2, 4, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "DOCS-BPI-MIB", "docsBpiIpMulticastAddress"), (0, "DOCS-BPI-MIB", "docsBpiIpMulticastPrefixLength"))
if mibBuilder.loadTexts: docsBpiIpMulticastMapEntry.setStatus('current')
docsBpiIpMulticastAddress = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 127, 5, 1, 2, 4, 1, 1, 1), IpAddress())
if mibBuilder.loadTexts: docsBpiIpMulticastAddress.setStatus('current')
docsBpiIpMulticastPrefixLength = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 127, 5, 1, 2, 4, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 32)))
if mibBuilder.loadTexts: docsBpiIpMulticastPrefixLength.setStatus('current')
docsBpiIpMulticastServiceId = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 127, 5, 1, 2, 4, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(8192, 16368))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: docsBpiIpMulticastServiceId.setStatus('current')
docsBpiIpMulticastMapControl = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 127, 5, 1, 2, 4, 1, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: docsBpiIpMulticastMapControl.setStatus('current')
docsBpiMulticastAuthTable = MibTable((1, 3, 6, 1, 2, 1, 10, 127, 5, 1, 2, 4, 2), )
if mibBuilder.loadTexts: docsBpiMulticastAuthTable.setStatus('current')
docsBpiMulticastAuthEntry = MibTableRow((1, 3, 6, 1, 2, 1, 10, 127, 5, 1, 2, 4, 2, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "DOCS-BPI-MIB", "docsBpiMulticastServiceId"), (0, "DOCS-BPI-MIB", "docsBpiMulticastCmMacAddress"))
if mibBuilder.loadTexts: docsBpiMulticastAuthEntry.setStatus('current')
docsBpiMulticastServiceId = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 127, 5, 1, 2, 4, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(8192, 16368)))
if mibBuilder.loadTexts: docsBpiMulticastServiceId.setStatus('current')
docsBpiMulticastCmMacAddress = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 127, 5, 1, 2, 4, 2, 1, 2), MacAddress())
if mibBuilder.loadTexts: docsBpiMulticastCmMacAddress.setStatus('current')
docsBpiMulticastAuthControl = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 127, 5, 1, 2, 4, 2, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: docsBpiMulticastAuthControl.setStatus('current')
docsBpiNotification = MibIdentifier((1, 3, 6, 1, 2, 1, 10, 127, 5, 2))
docsBpiConformance = MibIdentifier((1, 3, 6, 1, 2, 1, 10, 127, 5, 3))
docsBpiCompliances = MibIdentifier((1, 3, 6, 1, 2, 1, 10, 127, 5, 3, 1))
docsBpiGroups = MibIdentifier((1, 3, 6, 1, 2, 1, 10, 127, 5, 3, 2))
docsBpiBasicCompliance = ModuleCompliance((1, 3, 6, 1, 2, 1, 10, 127, 5, 3, 1, 1)).setObjects(("DOCS-BPI-MIB", "docsBpiCmGroup"), ("DOCS-BPI-MIB", "docsBpiCmtsGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    docsBpiBasicCompliance = docsBpiBasicCompliance.setStatus('current')
docsBpiCmGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 10, 127, 5, 3, 2, 1)).setObjects(("DOCS-BPI-MIB", "docsBpiCmPrivacyEnable"), ("DOCS-BPI-MIB", "docsBpiCmPublicKey"), ("DOCS-BPI-MIB", "docsBpiCmAuthState"), ("DOCS-BPI-MIB", "docsBpiCmAuthKeySequenceNumber"), ("DOCS-BPI-MIB", "docsBpiCmAuthExpires"), ("DOCS-BPI-MIB", "docsBpiCmAuthReset"), ("DOCS-BPI-MIB", "docsBpiCmAuthGraceTime"), ("DOCS-BPI-MIB", "docsBpiCmTEKGraceTime"), ("DOCS-BPI-MIB", "docsBpiCmAuthWaitTimeout"), ("DOCS-BPI-MIB", "docsBpiCmReauthWaitTimeout"), ("DOCS-BPI-MIB", "docsBpiCmOpWaitTimeout"), ("DOCS-BPI-MIB", "docsBpiCmRekeyWaitTimeout"), ("DOCS-BPI-MIB", "docsBpiCmAuthRejectWaitTimeout"), ("DOCS-BPI-MIB", "docsBpiCmAuthRequests"), ("DOCS-BPI-MIB", "docsBpiCmAuthReplies"), ("DOCS-BPI-MIB", "docsBpiCmAuthRejects"), ("DOCS-BPI-MIB", "docsBpiCmAuthInvalids"), ("DOCS-BPI-MIB", "docsBpiCmAuthRejectErrorCode"), ("DOCS-BPI-MIB", "docsBpiCmAuthRejectErrorString"), ("DOCS-BPI-MIB", "docsBpiCmAuthInvalidErrorCode"), ("DOCS-BPI-MIB", "docsBpiCmAuthInvalidErrorString"), ("DOCS-BPI-MIB", "docsBpiCmTEKPrivacyEnable"), ("DOCS-BPI-MIB", "docsBpiCmTEKState"), ("DOCS-BPI-MIB", "docsBpiCmTEKExpiresOld"), ("DOCS-BPI-MIB", "docsBpiCmTEKExpiresNew"), ("DOCS-BPI-MIB", "docsBpiCmTEKKeyRequests"), ("DOCS-BPI-MIB", "docsBpiCmTEKKeyReplies"), ("DOCS-BPI-MIB", "docsBpiCmTEKKeyRejects"), ("DOCS-BPI-MIB", "docsBpiCmTEKInvalids"), ("DOCS-BPI-MIB", "docsBpiCmTEKAuthPends"), ("DOCS-BPI-MIB", "docsBpiCmTEKKeyRejectErrorCode"), ("DOCS-BPI-MIB", "docsBpiCmTEKKeyRejectErrorString"), ("DOCS-BPI-MIB", "docsBpiCmTEKInvalidErrorCode"), ("DOCS-BPI-MIB", "docsBpiCmTEKInvalidErrorString"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    docsBpiCmGroup = docsBpiCmGroup.setStatus('current')
docsBpiCmtsGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 10, 127, 5, 3, 2, 2)).setObjects(("DOCS-BPI-MIB", "docsBpiCmtsDefaultAuthLifetime"), ("DOCS-BPI-MIB", "docsBpiCmtsDefaultTEKLifetime"), ("DOCS-BPI-MIB", "docsBpiCmtsAuthRequests"), ("DOCS-BPI-MIB", "docsBpiCmtsAuthReplies"), ("DOCS-BPI-MIB", "docsBpiCmtsAuthRejects"), ("DOCS-BPI-MIB", "docsBpiCmtsAuthInvalids"), ("DOCS-BPI-MIB", "docsBpiCmtsAuthCmPublicKey"), ("DOCS-BPI-MIB", "docsBpiCmtsAuthCmKeySequenceNumber"), ("DOCS-BPI-MIB", "docsBpiCmtsAuthCmExpires"), ("DOCS-BPI-MIB", "docsBpiCmtsAuthCmLifetime"), ("DOCS-BPI-MIB", "docsBpiCmtsAuthCmGraceTime"), ("DOCS-BPI-MIB", "docsBpiCmtsAuthCmReset"), ("DOCS-BPI-MIB", "docsBpiCmtsAuthCmRequests"), ("DOCS-BPI-MIB", "docsBpiCmtsAuthCmReplies"), ("DOCS-BPI-MIB", "docsBpiCmtsAuthCmRejects"), ("DOCS-BPI-MIB", "docsBpiCmtsAuthCmInvalids"), ("DOCS-BPI-MIB", "docsBpiCmtsAuthRejectErrorCode"), ("DOCS-BPI-MIB", "docsBpiCmtsAuthRejectErrorString"), ("DOCS-BPI-MIB", "docsBpiCmtsAuthInvalidErrorCode"), ("DOCS-BPI-MIB", "docsBpiCmtsAuthInvalidErrorString"), ("DOCS-BPI-MIB", "docsBpiCmtsTEKLifetime"), ("DOCS-BPI-MIB", "docsBpiCmtsTEKGraceTime"), ("DOCS-BPI-MIB", "docsBpiCmtsTEKExpiresOld"), ("DOCS-BPI-MIB", "docsBpiCmtsTEKExpiresNew"), ("DOCS-BPI-MIB", "docsBpiCmtsTEKReset"), ("DOCS-BPI-MIB", "docsBpiCmtsKeyRequests"), ("DOCS-BPI-MIB", "docsBpiCmtsKeyReplies"), ("DOCS-BPI-MIB", "docsBpiCmtsKeyRejects"), ("DOCS-BPI-MIB", "docsBpiCmtsTEKInvalids"), ("DOCS-BPI-MIB", "docsBpiCmtsKeyRejectErrorCode"), ("DOCS-BPI-MIB", "docsBpiCmtsKeyRejectErrorString"), ("DOCS-BPI-MIB", "docsBpiCmtsTEKInvalidErrorCode"), ("DOCS-BPI-MIB", "docsBpiCmtsTEKInvalidErrorString"), ("DOCS-BPI-MIB", "docsBpiIpMulticastServiceId"), ("DOCS-BPI-MIB", "docsBpiIpMulticastMapControl"), ("DOCS-BPI-MIB", "docsBpiMulticastAuthControl"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    docsBpiCmtsGroup = docsBpiCmtsGroup.setStatus('current')
docsBpiObsoleteObjectsGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 10, 127, 5, 3, 2, 3)).setObjects(("DOCS-BPI-MIB", "docsBpiCmtsDefaultAuthGraceTime"), ("DOCS-BPI-MIB", "docsBpiCmtsDefaultTEKGraceTime"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    docsBpiObsoleteObjectsGroup = docsBpiObsoleteObjectsGroup.setStatus('obsolete')
mibBuilder.exportSymbols("DOCS-BPI-MIB", docsBpiCmtsTEKLifetime=docsBpiCmtsTEKLifetime, docsBpiCmTEKPrivacyEnable=docsBpiCmTEKPrivacyEnable, docsBpiCmtsDefaultTEKGraceTime=docsBpiCmtsDefaultTEKGraceTime, docsBpiCmtsBaseTable=docsBpiCmtsBaseTable, docsBpiCmtsTEKExpiresOld=docsBpiCmtsTEKExpiresOld, docsBpiMulticastControl=docsBpiMulticastControl, PYSNMP_MODULE_ID=docsBpiMIB, docsBpiBasicCompliance=docsBpiBasicCompliance, docsBpiCmtsTEKReset=docsBpiCmtsTEKReset, docsBpiCmAuthInvalidErrorString=docsBpiCmAuthInvalidErrorString, docsBpiCmtsAuthCmRequests=docsBpiCmtsAuthCmRequests, docsBpiCmtsAuthEntry=docsBpiCmtsAuthEntry, docsBpiCmtsGroup=docsBpiCmtsGroup, docsBpiIpMulticastMapTable=docsBpiIpMulticastMapTable, docsBpiCmGroup=docsBpiCmGroup, docsBpiCmtsObjects=docsBpiCmtsObjects, docsBpiCmTEKEntry=docsBpiCmTEKEntry, docsBpiCmtsTEKExpiresNew=docsBpiCmtsTEKExpiresNew, docsBpiCmAuthRejectErrorCode=docsBpiCmAuthRejectErrorCode, docsBpiCmtsTEKInvalids=docsBpiCmtsTEKInvalids, docsBpiCmTEKExpiresOld=docsBpiCmTEKExpiresOld, docsBpiCmtsAuthCmPublicKey=docsBpiCmtsAuthCmPublicKey, docsBpiCmtsAuthCmMacAddress=docsBpiCmtsAuthCmMacAddress, docsBpiCmtsKeyRejectErrorCode=docsBpiCmtsKeyRejectErrorCode, docsBpiMulticastCmMacAddress=docsBpiMulticastCmMacAddress, docsBpiCmAuthReset=docsBpiCmAuthReset, docsBpiCmBaseEntry=docsBpiCmBaseEntry, docsBpiCmAuthState=docsBpiCmAuthState, docsBpiCmTEKInvalids=docsBpiCmTEKInvalids, docsBpiCmtsAuthTable=docsBpiCmtsAuthTable, docsBpiCmTEKGraceTime=docsBpiCmTEKGraceTime, docsBpiIpMulticastPrefixLength=docsBpiIpMulticastPrefixLength, docsBpiCmtsKeyReplies=docsBpiCmtsKeyReplies, docsBpiCmTEKState=docsBpiCmTEKState, docsBpiCmtsTEKGraceTime=docsBpiCmtsTEKGraceTime, docsBpiCmtsAuthCmRejects=docsBpiCmtsAuthCmRejects, docsBpiCmtsKeyRequests=docsBpiCmtsKeyRequests, docsBpiCmtsAuthRejects=docsBpiCmtsAuthRejects, docsBpiCmAuthRejectErrorString=docsBpiCmAuthRejectErrorString, docsBpiCmtsTEKInvalidErrorString=docsBpiCmtsTEKInvalidErrorString, docsBpiObsoleteObjectsGroup=docsBpiObsoleteObjectsGroup, docsBpiCompliances=docsBpiCompliances, docsBpiCmTEKAuthPends=docsBpiCmTEKAuthPends, docsBpiCmTEKExpiresNew=docsBpiCmTEKExpiresNew, docsBpiCmtsAuthCmExpires=docsBpiCmtsAuthCmExpires, docsBpiGroups=docsBpiGroups, docsBpiCmtsAuthCmInvalids=docsBpiCmtsAuthCmInvalids, docsBpiCmtsDefaultAuthLifetime=docsBpiCmtsDefaultAuthLifetime, docsBpiMulticastServiceId=docsBpiMulticastServiceId, docsBpiMulticastAuthTable=docsBpiMulticastAuthTable, docsBpiCmtsAuthInvalidErrorString=docsBpiCmtsAuthInvalidErrorString, docsBpiCmPrivacyEnable=docsBpiCmPrivacyEnable, docsBpiNotification=docsBpiNotification, docsBpiCmBaseTable=docsBpiCmBaseTable, docsBpiCmTEKKeyRejectErrorString=docsBpiCmTEKKeyRejectErrorString, docsBpiMIBObjects=docsBpiMIBObjects, docsBpiCmtsAuthReplies=docsBpiCmtsAuthReplies, docsBpiMIB=docsBpiMIB, docsBpiCmTEKInvalidErrorString=docsBpiCmTEKInvalidErrorString, docsBpiCmTEKKeyReplies=docsBpiCmTEKKeyReplies, docsBpiCmAuthRejects=docsBpiCmAuthRejects, docsBpiCmTEKKeyRejects=docsBpiCmTEKKeyRejects, docsBpiIpMulticastAddress=docsBpiIpMulticastAddress, docsBpiCmtsAuthCmKeySequenceNumber=docsBpiCmtsAuthCmKeySequenceNumber, docsBpiMulticastAuthEntry=docsBpiMulticastAuthEntry, docsBpiCmAuthWaitTimeout=docsBpiCmAuthWaitTimeout, docsBpiIpMulticastMapControl=docsBpiIpMulticastMapControl, docsBpiCmtsAuthRequests=docsBpiCmtsAuthRequests, docsBpiCmTEKInvalidErrorCode=docsBpiCmTEKInvalidErrorCode, docsBpiCmtsTEKEntry=docsBpiCmtsTEKEntry, docsBpiCmtsAuthCmReset=docsBpiCmtsAuthCmReset, docsBpiCmAuthReplies=docsBpiCmAuthReplies, docsBpiCmTEKTable=docsBpiCmTEKTable, docsBpiCmTEKKeyRequests=docsBpiCmTEKKeyRequests, docsBpiCmtsDefaultTEKLifetime=docsBpiCmtsDefaultTEKLifetime, docsBpiCmtsBaseEntry=docsBpiCmtsBaseEntry, docsBpiCmAuthGraceTime=docsBpiCmAuthGraceTime, docsBpiCmTEKKeyRejectErrorCode=docsBpiCmTEKKeyRejectErrorCode, docsBpiCmtsAuthCmReplies=docsBpiCmtsAuthCmReplies, docsBpiIpMulticastServiceId=docsBpiIpMulticastServiceId, docsBpiMulticastAuthControl=docsBpiMulticastAuthControl, docsBpiConformance=docsBpiConformance, docsBpiCmtsTEKInvalidErrorCode=docsBpiCmtsTEKInvalidErrorCode, docsBpiCmAuthInvalids=docsBpiCmAuthInvalids, docsBpiCmAuthRequests=docsBpiCmAuthRequests, docsBpiCmAuthRejectWaitTimeout=docsBpiCmAuthRejectWaitTimeout, docsBpiCmPublicKey=docsBpiCmPublicKey, docsBpiCmReauthWaitTimeout=docsBpiCmReauthWaitTimeout, docsBpiCmtsKeyRejects=docsBpiCmtsKeyRejects, docsBpiCmAuthKeySequenceNumber=docsBpiCmAuthKeySequenceNumber, docsBpiIpMulticastMapEntry=docsBpiIpMulticastMapEntry, docsBpiCmAuthExpires=docsBpiCmAuthExpires, docsBpiCmtsAuthInvalids=docsBpiCmtsAuthInvalids, docsBpiCmRekeyWaitTimeout=docsBpiCmRekeyWaitTimeout, docsBpiCmOpWaitTimeout=docsBpiCmOpWaitTimeout, docsBpiCmtsKeyRejectErrorString=docsBpiCmtsKeyRejectErrorString, docsBpiCmtsTEKTable=docsBpiCmtsTEKTable, docsBpiCmAuthInvalidErrorCode=docsBpiCmAuthInvalidErrorCode, docsBpiCmtsAuthRejectErrorCode=docsBpiCmtsAuthRejectErrorCode, docsBpiCmtsDefaultAuthGraceTime=docsBpiCmtsDefaultAuthGraceTime, docsBpiCmtsAuthInvalidErrorCode=docsBpiCmtsAuthInvalidErrorCode, docsBpiCmtsAuthCmLifetime=docsBpiCmtsAuthCmLifetime, docsBpiCmObjects=docsBpiCmObjects, docsBpiCmtsAuthCmGraceTime=docsBpiCmtsAuthCmGraceTime, docsBpiCmtsAuthRejectErrorString=docsBpiCmtsAuthRejectErrorString)
