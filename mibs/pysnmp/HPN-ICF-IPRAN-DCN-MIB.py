#
# PySNMP MIB module HPN-ICF-IPRAN-DCN-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/HPN-ICF-IPRAN-DCN-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:27:07 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ValueSizeConstraint, ValueRangeConstraint, ConstraintsIntersection, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ValueSizeConstraint", "ValueRangeConstraint", "ConstraintsIntersection", "ConstraintsUnion")
hpnicfCommon, = mibBuilder.importSymbols("HPN-ICF-OID-MIB", "hpnicfCommon")
InetAddressType, InetAddress = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddressType", "InetAddress")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
TimeTicks, MibIdentifier, Counter32, Counter64, IpAddress, ModuleIdentity, Unsigned32, Integer32, MibScalar, MibTable, MibTableRow, MibTableColumn, Gauge32, NotificationType, iso, Bits, ObjectIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "TimeTicks", "MibIdentifier", "Counter32", "Counter64", "IpAddress", "ModuleIdentity", "Unsigned32", "Integer32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Gauge32", "NotificationType", "iso", "Bits", "ObjectIdentity")
TextualConvention, MacAddress, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "MacAddress", "DisplayString")
hpnicfIpRanDcn = ModuleIdentity((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 152))
hpnicfIpRanDcn.setRevisions(('2013-07-24 00:00',))
if mibBuilder.loadTexts: hpnicfIpRanDcn.setLastUpdated('201307240000Z')
if mibBuilder.loadTexts: hpnicfIpRanDcn.setOrganization('')
class HpnicfIpRanNeId(TextualConvention, OctetString):
    status = 'current'
    displayHint = '1d.1d.1d.1d'
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(4, 4)
    fixedLength = 4

hpnicfIpRanDcnMIB = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 152, 1))
hpnicfIpRanDcnObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 152, 1, 1))
hpnicfIpRanDcnInfoObject = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 152, 1, 1, 1))
hpnicfIpRanDcnNeId = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 152, 1, 1, 1, 1), HpnicfIpRanNeId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfIpRanDcnNeId.setStatus('current')
hpnicfIpRanDcnNeIpType = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 152, 1, 1, 1, 2), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfIpRanDcnNeIpType.setStatus('current')
hpnicfIpRanDcnNeIp = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 152, 1, 1, 1, 3), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfIpRanDcnNeIp.setStatus('current')
hpnicfIpRanDcnMask = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 152, 1, 1, 1, 4), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfIpRanDcnMask.setStatus('current')
hpnicfIpRanDcnNeInfoTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 152, 1, 1, 2), )
if mibBuilder.loadTexts: hpnicfIpRanDcnNeInfoTable.setStatus('current')
hpnicfIpRanDcnNeInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 152, 1, 1, 2, 1), ).setIndexNames((0, "HPN-ICF-IPRAN-DCN-MIB", "hpnicfIpRanDcnNeInfoNeId"))
if mibBuilder.loadTexts: hpnicfIpRanDcnNeInfoEntry.setStatus('current')
hpnicfIpRanDcnNeInfoNeId = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 152, 1, 1, 2, 1, 1), HpnicfIpRanNeId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfIpRanDcnNeInfoNeId.setStatus('current')
hpnicfIpRanDcnNeInfoNeIpType = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 152, 1, 1, 2, 1, 2), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfIpRanDcnNeInfoNeIpType.setStatus('current')
hpnicfIpRanDcnNeInfoNeIp = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 152, 1, 1, 2, 1, 3), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfIpRanDcnNeInfoNeIp.setStatus('current')
hpnicfIpRanDcnNeInfoMetric = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 152, 1, 1, 2, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfIpRanDcnNeInfoMetric.setStatus('current')
hpnicfIpRanDcnNeInfoDeviceType = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 152, 1, 1, 2, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfIpRanDcnNeInfoDeviceType.setStatus('current')
hpnicfIpRanDcnTrapObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 152, 1, 2))
hpnicfIpRanDcnNeNumber = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 152, 1, 2, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfIpRanDcnNeNumber.setStatus('current')
hpnicfIpRanDcnNeChangeMode = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 152, 1, 2, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("online", 1), ("offline", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfIpRanDcnNeChangeMode.setStatus('current')
hpnicfIpRanDcnCompanyName = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 152, 1, 2, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfIpRanDcnCompanyName.setStatus('current')
hpnicfIpRanDcnDeviceType = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 152, 1, 2, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfIpRanDcnDeviceType.setStatus('current')
hpnicfIpRanDcnDeviceMac = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 152, 1, 2, 5), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfIpRanDcnDeviceMac.setStatus('current')
hpnicfIpRanDcnTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 152, 1, 3))
hpnicfIpRanDcnTrapsPrefix = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 152, 1, 3, 0))
hpnicfIpRanDcnNeOnline = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 152, 1, 3, 0, 1)).setObjects(("HPN-ICF-IPRAN-DCN-MIB", "hpnicfIpRanDcnNeInfoNeId"), ("HPN-ICF-IPRAN-DCN-MIB", "hpnicfIpRanDcnNeInfoNeIpType"), ("HPN-ICF-IPRAN-DCN-MIB", "hpnicfIpRanDcnNeInfoNeIp"), ("HPN-ICF-IPRAN-DCN-MIB", "hpnicfIpRanDcnCompanyName"), ("HPN-ICF-IPRAN-DCN-MIB", "hpnicfIpRanDcnDeviceType"), ("HPN-ICF-IPRAN-DCN-MIB", "hpnicfIpRanDcnDeviceMac"))
if mibBuilder.loadTexts: hpnicfIpRanDcnNeOnline.setStatus('current')
hpnicfIpRanDcnNeOffline = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 152, 1, 3, 0, 2)).setObjects(("HPN-ICF-IPRAN-DCN-MIB", "hpnicfIpRanDcnNeInfoNeId"), ("HPN-ICF-IPRAN-DCN-MIB", "hpnicfIpRanDcnNeInfoNeIpType"), ("HPN-ICF-IPRAN-DCN-MIB", "hpnicfIpRanDcnNeInfoNeIp"))
if mibBuilder.loadTexts: hpnicfIpRanDcnNeOffline.setStatus('current')
mibBuilder.exportSymbols("HPN-ICF-IPRAN-DCN-MIB", hpnicfIpRanDcnNeNumber=hpnicfIpRanDcnNeNumber, hpnicfIpRanDcnCompanyName=hpnicfIpRanDcnCompanyName, hpnicfIpRanDcnObjects=hpnicfIpRanDcnObjects, hpnicfIpRanDcnNeInfoEntry=hpnicfIpRanDcnNeInfoEntry, hpnicfIpRanDcnDeviceType=hpnicfIpRanDcnDeviceType, hpnicfIpRanDcnTrapObjects=hpnicfIpRanDcnTrapObjects, hpnicfIpRanDcnNeIpType=hpnicfIpRanDcnNeIpType, hpnicfIpRanDcnNeOnline=hpnicfIpRanDcnNeOnline, hpnicfIpRanDcnTrapsPrefix=hpnicfIpRanDcnTrapsPrefix, hpnicfIpRanDcnMask=hpnicfIpRanDcnMask, hpnicfIpRanDcnNeInfoNeId=hpnicfIpRanDcnNeInfoNeId, hpnicfIpRanDcnDeviceMac=hpnicfIpRanDcnDeviceMac, hpnicfIpRanDcnNeInfoTable=hpnicfIpRanDcnNeInfoTable, hpnicfIpRanDcnMIB=hpnicfIpRanDcnMIB, hpnicfIpRanDcnNeInfoNeIp=hpnicfIpRanDcnNeInfoNeIp, hpnicfIpRanDcnNeOffline=hpnicfIpRanDcnNeOffline, hpnicfIpRanDcn=hpnicfIpRanDcn, PYSNMP_MODULE_ID=hpnicfIpRanDcn, hpnicfIpRanDcnNeInfoMetric=hpnicfIpRanDcnNeInfoMetric, hpnicfIpRanDcnInfoObject=hpnicfIpRanDcnInfoObject, hpnicfIpRanDcnNeInfoDeviceType=hpnicfIpRanDcnNeInfoDeviceType, HpnicfIpRanNeId=HpnicfIpRanNeId, hpnicfIpRanDcnNeIp=hpnicfIpRanDcnNeIp, hpnicfIpRanDcnNeInfoNeIpType=hpnicfIpRanDcnNeInfoNeIpType, hpnicfIpRanDcnNeChangeMode=hpnicfIpRanDcnNeChangeMode, hpnicfIpRanDcnTraps=hpnicfIpRanDcnTraps, hpnicfIpRanDcnNeId=hpnicfIpRanDcnNeId)
