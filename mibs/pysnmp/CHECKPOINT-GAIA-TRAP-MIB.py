#
# PySNMP MIB module CHECKPOINT-GAIA-TRAP-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CHECKPOINT-GAIA-TRAP-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:31:11 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, SingleValueConstraint, ConstraintsUnion, ConstraintsIntersection, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "SingleValueConstraint", "ConstraintsUnion", "ConstraintsIntersection", "ValueRangeConstraint")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
MibIdentifier, Bits, Gauge32, enterprises, IpAddress, Counter32, TimeTicks, Integer32, ModuleIdentity, ObjectIdentity, Counter64, Unsigned32, MibScalar, MibTable, MibTableRow, MibTableColumn, NotificationType, iso = mibBuilder.importSymbols("SNMPv2-SMI", "MibIdentifier", "Bits", "Gauge32", "enterprises", "IpAddress", "Counter32", "TimeTicks", "Integer32", "ModuleIdentity", "ObjectIdentity", "Counter64", "Unsigned32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "NotificationType", "iso")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
class DisplayString(OctetString):
    pass

checkpoint = MibIdentifier((1, 3, 6, 1, 4, 1, 2620))
products = MibIdentifier((1, 3, 6, 1, 4, 1, 2620, 1))
chkpntTrap = MibIdentifier((1, 3, 6, 1, 4, 1, 2620, 1, 3000))
chkpntTrapInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 2620, 1, 3000, 0))
chkpntTrapHWSensor = MibIdentifier((1, 3, 6, 1, 4, 1, 2620, 1, 3000, 5))
chkpntTrapConfiguration = MibIdentifier((1, 3, 6, 1, 4, 1, 2620, 1, 3000, 10))
chkpntTrapDisk = MibIdentifier((1, 3, 6, 1, 4, 1, 2620, 1, 3000, 2))
svn = MibIdentifier((1, 3, 6, 1, 4, 1, 2620, 1, 6))
svnPerf = MibIdentifier((1, 3, 6, 1, 4, 1, 2620, 1, 6, 7))
sensorInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 2620, 1, 6, 7, 8))
tempertureSensorTable = MibIdentifier((1, 3, 6, 1, 4, 1, 2620, 1, 6, 7, 8, 1))
tempertureSensorEntry = MibIdentifier((1, 3, 6, 1, 4, 1, 2620, 1, 6, 7, 8, 1, 1))
fanSpeedSensorTable = MibIdentifier((1, 3, 6, 1, 4, 1, 2620, 1, 6, 7, 8, 2))
fanSpeedSensorEntry = MibIdentifier((1, 3, 6, 1, 4, 1, 2620, 1, 6, 7, 8, 2, 1))
voltageSensorTable = MibIdentifier((1, 3, 6, 1, 4, 1, 2620, 1, 6, 7, 8, 3))
voltageSensorEntry = MibIdentifier((1, 3, 6, 1, 4, 1, 2620, 1, 6, 7, 8, 3, 1))
powerSupplyInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 2620, 1, 6, 7, 9))
powerSupplyTable = MibIdentifier((1, 3, 6, 1, 4, 1, 2620, 1, 6, 7, 9, 1))
powerSupplyEntry = MibIdentifier((1, 3, 6, 1, 4, 1, 2620, 1, 6, 7, 9, 1, 1))
raidInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 2620, 1, 6, 7, 6))
raidVolumeTable = MibIdentifier((1, 3, 6, 1, 4, 1, 2620, 1, 6, 7, 6, 1))
raidVolumeEntry = MibIdentifier((1, 3, 6, 1, 4, 1, 2620, 1, 6, 7, 6, 1, 1))
chkpntTrapMibModule = ModuleIdentity((1, 3, 6, 1, 4, 1, 2620, 1, 3000, 0, 0))
if mibBuilder.loadTexts: chkpntTrapMibModule.setLastUpdated('201005101431Z')
if mibBuilder.loadTexts: chkpntTrapMibModule.setOrganization('Check Point')
chkpntTrapOID = MibScalar((1, 3, 6, 1, 4, 1, 2620, 1, 3000, 0, 10), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: chkpntTrapOID.setStatus('optional')
chkpntTrapMsgText = MibScalar((1, 3, 6, 1, 4, 1, 2620, 1, 3000, 0, 12), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: chkpntTrapMsgText.setStatus('mandatory')
tempertureSensorName = MibScalar((1, 3, 6, 1, 4, 1, 2620, 1, 6, 7, 8, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tempertureSensorName.setStatus('mandatory')
tempertureSensorValue = MibScalar((1, 3, 6, 1, 4, 1, 2620, 1, 6, 7, 8, 1, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tempertureSensorValue.setStatus('mandatory')
fanSpeedSensorName = MibScalar((1, 3, 6, 1, 4, 1, 2620, 1, 6, 7, 8, 2, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fanSpeedSensorName.setStatus('mandatory')
fanSpeedSensorValue = MibScalar((1, 3, 6, 1, 4, 1, 2620, 1, 6, 7, 8, 2, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fanSpeedSensorValue.setStatus('mandatory')
voltageSensorName = MibScalar((1, 3, 6, 1, 4, 1, 2620, 1, 6, 7, 8, 3, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: voltageSensorName.setStatus('mandatory')
voltageSensorValue = MibScalar((1, 3, 6, 1, 4, 1, 2620, 1, 6, 7, 8, 3, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: voltageSensorValue.setStatus('mandatory')
powerSupplySensorName = MibScalar((1, 3, 6, 1, 4, 1, 2620, 1, 6, 7, 9, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: powerSupplySensorName.setStatus('mandatory')
powerSupplySensorValue = MibScalar((1, 3, 6, 1, 4, 1, 2620, 1, 6, 7, 9, 1, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: powerSupplySensorValue.setStatus('mandatory')
raidVolumeState = MibScalar((1, 3, 6, 1, 4, 1, 2620, 1, 6, 7, 6, 1, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: raidVolumeState.setStatus('mandatory')
raidVolumeFlags = MibScalar((1, 3, 6, 1, 4, 1, 2620, 1, 6, 7, 6, 1, 1, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: raidVolumeFlags.setStatus('mandatory')
chkpntTrapTempertureSensor = MibIdentifier((1, 3, 6, 1, 4, 1, 2620, 1, 3000, 5, 1))
chkpntTrapFanSpeedSensor = MibIdentifier((1, 3, 6, 1, 4, 1, 2620, 1, 3000, 5, 2))
chkpntTrapVoltageSensor = MibIdentifier((1, 3, 6, 1, 4, 1, 2620, 1, 3000, 5, 3))
chkpntTrapPowerSupplySensor = MibIdentifier((1, 3, 6, 1, 4, 1, 2620, 1, 3000, 5, 4))
chkpntTempertureTrap = NotificationType((1, 3, 6, 1, 4, 1, 2620, 1, 3000, 5, 1, 1)).setObjects(("CHECKPOINT-GAIA-TRAP-MIB", "chkpntTrapMsgText"), ("CHECKPOINT-GAIA-TRAP-MIB", "tempertureSensorName"), ("CHECKPOINT-GAIA-TRAP-MIB", "tempertureSensorValue"))
if mibBuilder.loadTexts: chkpntTempertureTrap.setStatus('current')
chkpntFanSpeedTrap = NotificationType((1, 3, 6, 1, 4, 1, 2620, 1, 3000, 5, 2, 1)).setObjects(("CHECKPOINT-GAIA-TRAP-MIB", "chkpntTrapMsgText"), ("CHECKPOINT-GAIA-TRAP-MIB", "fanSpeedSensorName"), ("CHECKPOINT-GAIA-TRAP-MIB", "fanSpeedSensorValue"))
if mibBuilder.loadTexts: chkpntFanSpeedTrap.setStatus('current')
chkpntVoltageTrap = NotificationType((1, 3, 6, 1, 4, 1, 2620, 1, 3000, 5, 3, 1)).setObjects(("CHECKPOINT-GAIA-TRAP-MIB", "chkpntTrapMsgText"), ("CHECKPOINT-GAIA-TRAP-MIB", "voltageSensorName"), ("CHECKPOINT-GAIA-TRAP-MIB", "voltageSensorValue"))
if mibBuilder.loadTexts: chkpntVoltageTrap.setStatus('current')
chkpntPowerSupplyTrap = NotificationType((1, 3, 6, 1, 4, 1, 2620, 1, 3000, 5, 4, 1)).setObjects(("CHECKPOINT-GAIA-TRAP-MIB", "chkpntTrapMsgText"), ("CHECKPOINT-GAIA-TRAP-MIB", "powerSupplySensorName"), ("CHECKPOINT-GAIA-TRAP-MIB", "powerSupplySensorValue"))
if mibBuilder.loadTexts: chkpntPowerSupplyTrap.setStatus('current')
chkpntTrapSystemConfiguration = MibIdentifier((1, 3, 6, 1, 4, 1, 2620, 1, 3000, 10, 1))
chkpntSystemConfigurationChangeTrap = NotificationType((1, 3, 6, 1, 4, 1, 2620, 1, 3000, 10, 1, 1)).setObjects(("CHECKPOINT-GAIA-TRAP-MIB", "chkpntTrapMsgText"))
if mibBuilder.loadTexts: chkpntSystemConfigurationChangeTrap.setStatus('current')
chkpntSystemConfigurationSaveTrap = NotificationType((1, 3, 6, 1, 4, 1, 2620, 1, 3000, 10, 1, 2)).setObjects(("CHECKPOINT-GAIA-TRAP-MIB", "chkpntTrapMsgText"))
if mibBuilder.loadTexts: chkpntSystemConfigurationSaveTrap.setStatus('current')
chkpntTrapRAID = MibIdentifier((1, 3, 6, 1, 4, 1, 2620, 1, 3000, 2, 1))
chkpntRAIDVolumeStateTrap = NotificationType((1, 3, 6, 1, 4, 1, 2620, 1, 3000, 2, 1, 1)).setObjects(("CHECKPOINT-GAIA-TRAP-MIB", "chkpntTrapMsgText"), ("CHECKPOINT-GAIA-TRAP-MIB", "raidVolumeState"), ("CHECKPOINT-GAIA-TRAP-MIB", "raidVolumeFlags"))
if mibBuilder.loadTexts: chkpntRAIDVolumeStateTrap.setStatus('current')
mibBuilder.exportSymbols("CHECKPOINT-GAIA-TRAP-MIB", voltageSensorTable=voltageSensorTable, chkpntTrapVoltageSensor=chkpntTrapVoltageSensor, powerSupplyEntry=powerSupplyEntry, voltageSensorName=voltageSensorName, chkpntTrapPowerSupplySensor=chkpntTrapPowerSupplySensor, chkpntTrapMibModule=chkpntTrapMibModule, chkpntTrapMsgText=chkpntTrapMsgText, chkpntTempertureTrap=chkpntTempertureTrap, voltageSensorValue=voltageSensorValue, voltageSensorEntry=voltageSensorEntry, raidVolumeState=raidVolumeState, chkpntTrapConfiguration=chkpntTrapConfiguration, fanSpeedSensorEntry=fanSpeedSensorEntry, fanSpeedSensorValue=fanSpeedSensorValue, raidVolumeFlags=raidVolumeFlags, chkpntTrapTempertureSensor=chkpntTrapTempertureSensor, chkpntPowerSupplyTrap=chkpntPowerSupplyTrap, chkpntTrapHWSensor=chkpntTrapHWSensor, chkpntRAIDVolumeStateTrap=chkpntRAIDVolumeStateTrap, tempertureSensorValue=tempertureSensorValue, chkpntTrapDisk=chkpntTrapDisk, chkpntFanSpeedTrap=chkpntFanSpeedTrap, PYSNMP_MODULE_ID=chkpntTrapMibModule, fanSpeedSensorTable=fanSpeedSensorTable, chkpntVoltageTrap=chkpntVoltageTrap, powerSupplyTable=powerSupplyTable, raidVolumeTable=raidVolumeTable, chkpntTrapSystemConfiguration=chkpntTrapSystemConfiguration, chkpntSystemConfigurationChangeTrap=chkpntSystemConfigurationChangeTrap, powerSupplySensorName=powerSupplySensorName, raidInfo=raidInfo, tempertureSensorTable=tempertureSensorTable, raidVolumeEntry=raidVolumeEntry, chkpntTrapOID=chkpntTrapOID, chkpntTrapRAID=chkpntTrapRAID, chkpntTrap=chkpntTrap, tempertureSensorName=tempertureSensorName, powerSupplySensorValue=powerSupplySensorValue, svn=svn, powerSupplyInfo=powerSupplyInfo, fanSpeedSensorName=fanSpeedSensorName, tempertureSensorEntry=tempertureSensorEntry, chkpntSystemConfigurationSaveTrap=chkpntSystemConfigurationSaveTrap, checkpoint=checkpoint, products=products, chkpntTrapFanSpeedSensor=chkpntTrapFanSpeedSensor, DisplayString=DisplayString, sensorInfo=sensorInfo, svnPerf=svnPerf, chkpntTrapInfo=chkpntTrapInfo)
