#
# PySNMP MIB module HM2-CAM-MGMT-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/HM2-CAM-MGMT-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:18:31 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ValueSizeConstraint, ConstraintsIntersection, SingleValueConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ValueSizeConstraint", "ConstraintsIntersection", "SingleValueConstraint", "ConstraintsUnion")
hm2ConfigurationMibs, HmEnabledStatus = mibBuilder.importSymbols("HM2-TC-MIB", "hm2ConfigurationMibs", "HmEnabledStatus")
InetPortNumber, InetAddress, InetAddressType = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetPortNumber", "InetAddress", "InetAddressType")
SnmpAdminString, = mibBuilder.importSymbols("SNMP-FRAMEWORK-MIB", "SnmpAdminString")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
IpAddress, Gauge32, ModuleIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, Bits, Unsigned32, Counter64, ObjectIdentity, TimeTicks, iso, Counter32, MibIdentifier, NotificationType, Integer32 = mibBuilder.importSymbols("SNMPv2-SMI", "IpAddress", "Gauge32", "ModuleIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Bits", "Unsigned32", "Counter64", "ObjectIdentity", "TimeTicks", "iso", "Counter32", "MibIdentifier", "NotificationType", "Integer32")
TruthValue, DisplayString, TextualConvention, RowStatus = mibBuilder.importSymbols("SNMPv2-TC", "TruthValue", "DisplayString", "TextualConvention", "RowStatus")
hm2CamMgmtMib = ModuleIdentity((1, 3, 6, 1, 4, 1, 248, 11, 200))
hm2CamMgmtMib.setRevisions(('2013-07-01 00:00',))
if mibBuilder.loadTexts: hm2CamMgmtMib.setLastUpdated('201307010000Z')
if mibBuilder.loadTexts: hm2CamMgmtMib.setOrganization('Hirschmann Automation and Control GmbH')
hm2CamMgmtMibNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 248, 11, 200, 0))
hm2CamMgmtMibObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 248, 11, 200, 1))
hm2CamConfigGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 248, 11, 200, 1, 1))
hm2CamActionGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 248, 11, 200, 1, 10))
hm2CamPwdChangeGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 248, 11, 200, 1, 20))
hm2CamCertInfoGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 248, 11, 200, 1, 30))
hm2CamConfigAdminStatus = MibScalar((1, 3, 6, 1, 4, 1, 248, 11, 200, 1, 1, 1), HmEnabledStatus().clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hm2CamConfigAdminStatus.setStatus('current')
hm2CamConfigLastValidServerindex = MibScalar((1, 3, 6, 1, 4, 1, 248, 11, 200, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hm2CamConfigLastValidServerindex.setStatus('current')
hm2CamClientServerAddrTable = MibTable((1, 3, 6, 1, 4, 1, 248, 11, 200, 1, 1, 10), )
if mibBuilder.loadTexts: hm2CamClientServerAddrTable.setStatus('current')
hm2CamClientServerAddrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 248, 11, 200, 1, 1, 10, 1), ).setIndexNames((0, "HM2-CAM-MGMT-MIB", "hm2CamClientServerIndex"))
if mibBuilder.loadTexts: hm2CamClientServerAddrEntry.setStatus('current')
hm2CamClientServerIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 248, 11, 200, 1, 1, 10, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hm2CamClientServerIndex.setStatus('current')
hm2CamClientServerAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 248, 11, 200, 1, 1, 10, 1, 2), InetAddressType().clone('ipv4')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hm2CamClientServerAddrType.setStatus('current')
hm2CamClientServerAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 248, 11, 200, 1, 1, 10, 1, 3), InetAddress().clone(hexValue="00000000")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hm2CamClientServerAddr.setStatus('current')
hm2CamClientServerPort = MibTableColumn((1, 3, 6, 1, 4, 1, 248, 11, 200, 1, 1, 10, 1, 4), InetPortNumber().clone(389)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hm2CamClientServerPort.setStatus('current')
hm2CamClientServerDescr = MibTableColumn((1, 3, 6, 1, 4, 1, 248, 11, 200, 1, 1, 10, 1, 5), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 100))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hm2CamClientServerDescr.setStatus('current')
hm2CamClientServerBaseDN = MibTableColumn((1, 3, 6, 1, 4, 1, 248, 11, 200, 1, 1, 10, 1, 6), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 100))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hm2CamClientServerBaseDN.setStatus('current')
hm2CamClientServerSearchString = MibTableColumn((1, 3, 6, 1, 4, 1, 248, 11, 200, 1, 1, 10, 1, 7), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 100))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hm2CamClientServerSearchString.setStatus('current')
hm2CamClientServerStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 248, 11, 200, 1, 1, 10, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("ok", 1), ("unreachable", 2), ("other", 3))).clone('other')).setMaxAccess("readonly")
if mibBuilder.loadTexts: hm2CamClientServerStatus.setStatus('current')
hm2CamClientServerReplicationInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 248, 11, 200, 1, 1, 10, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(10, 1440)).clone(60)).setUnits('minutes').setMaxAccess("readcreate")
if mibBuilder.loadTexts: hm2CamClientServerReplicationInterval.setStatus('current')
hm2CamClientServerReplicationStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 248, 11, 200, 1, 1, 10, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("ok", 1), ("unsuccessful", 2), ("other", 3))).clone('other')).setMaxAccess("readonly")
if mibBuilder.loadTexts: hm2CamClientServerReplicationStatus.setStatus('current')
hm2CamClientServerRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 248, 11, 200, 1, 1, 10, 1, 11), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hm2CamClientServerRowStatus.setStatus('current')
hm2CamAction = MibScalar((1, 3, 6, 1, 4, 1, 248, 11, 200, 1, 10, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("testConnection", 2), ("doReplication", 3))).clone('other')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hm2CamAction.setStatus('current')
hm2CamActionConnectionStatus = MibScalar((1, 3, 6, 1, 4, 1, 248, 11, 200, 1, 10, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("ok", 1), ("unreachable", 2), ("pending", 3), ("other", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hm2CamActionConnectionStatus.setStatus('current')
hm2CamActionReplicationStatus = MibScalar((1, 3, 6, 1, 4, 1, 248, 11, 200, 1, 10, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("ok", 1), ("unsuccessful", 2), ("pending", 3), ("other", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hm2CamActionReplicationStatus.setStatus('current')
hm2CamPwdChangeUserName = MibScalar((1, 3, 6, 1, 4, 1, 248, 11, 200, 1, 20, 1), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 100))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hm2CamPwdChangeUserName.setStatus('current')
hm2CamPwdChangeUserPwOld = MibScalar((1, 3, 6, 1, 4, 1, 248, 11, 200, 1, 20, 2), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 100))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hm2CamPwdChangeUserPwOld.setStatus('current')
hm2CamPwdChangeUserPwNew = MibScalar((1, 3, 6, 1, 4, 1, 248, 11, 200, 1, 20, 3), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 100))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hm2CamPwdChangeUserPwNew.setStatus('current')
hm2CamPwdChangeAction = MibScalar((1, 3, 6, 1, 4, 1, 248, 11, 200, 1, 20, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("other", 1), ("changePwd", 2))).clone('other')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hm2CamPwdChangeAction.setStatus('current')
hm2CamPwdChangeActionStatus = MibScalar((1, 3, 6, 1, 4, 1, 248, 11, 200, 1, 20, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("ok", 1), ("unsuccessful", 2), ("pending", 3), ("other", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hm2CamPwdChangeActionStatus.setStatus('current')
hm2CamCertInfoTable = MibTable((1, 3, 6, 1, 4, 1, 248, 11, 200, 1, 30, 1), )
if mibBuilder.loadTexts: hm2CamCertInfoTable.setStatus('current')
hm2CamCertInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 248, 11, 200, 1, 30, 1, 1), ).setIndexNames((0, "HM2-CAM-MGMT-MIB", "hm2CamCertInfoIndex"))
if mibBuilder.loadTexts: hm2CamCertInfoEntry.setStatus('current')
hm2CamCertInfoIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 248, 11, 200, 1, 30, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("rootCert", 1), ("deviceCert", 2))))
if mibBuilder.loadTexts: hm2CamCertInfoIndex.setStatus('current')
hm2CamCertInfoPresent = MibTableColumn((1, 3, 6, 1, 4, 1, 248, 11, 200, 1, 30, 1, 1, 2), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hm2CamCertInfoPresent.setStatus('current')
hm2CamCertInfoExpiry = MibTableColumn((1, 3, 6, 1, 4, 1, 248, 11, 200, 1, 30, 1, 1, 3), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hm2CamCertInfoExpiry.setStatus('current')
hm2CamCertInfoIssuer = MibTableColumn((1, 3, 6, 1, 4, 1, 248, 11, 200, 1, 30, 1, 1, 4), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hm2CamCertInfoIssuer.setStatus('current')
hm2CamCertInfoSubject = MibTableColumn((1, 3, 6, 1, 4, 1, 248, 11, 200, 1, 30, 1, 1, 5), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hm2CamCertInfoSubject.setStatus('current')
hm2CamCertInfoSerialNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 248, 11, 200, 1, 30, 1, 1, 6), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hm2CamCertInfoSerialNumber.setStatus('current')
hm2CamConfigStatusTrap = NotificationType((1, 3, 6, 1, 4, 1, 248, 11, 200, 0, 1)).setObjects(("HM2-CAM-MGMT-MIB", "hm2CamClientServerIndex"), ("HM2-CAM-MGMT-MIB", "hm2CamClientServerStatus"))
if mibBuilder.loadTexts: hm2CamConfigStatusTrap.setStatus('current')
hm2CamReplicationStatusTrap = NotificationType((1, 3, 6, 1, 4, 1, 248, 11, 200, 0, 2)).setObjects(("HM2-CAM-MGMT-MIB", "hm2CamClientServerIndex"), ("HM2-CAM-MGMT-MIB", "hm2CamClientServerReplicationStatus"))
if mibBuilder.loadTexts: hm2CamReplicationStatusTrap.setStatus('current')
mibBuilder.exportSymbols("HM2-CAM-MGMT-MIB", hm2CamConfigLastValidServerindex=hm2CamConfigLastValidServerindex, hm2CamConfigStatusTrap=hm2CamConfigStatusTrap, hm2CamClientServerDescr=hm2CamClientServerDescr, hm2CamPwdChangeActionStatus=hm2CamPwdChangeActionStatus, hm2CamClientServerIndex=hm2CamClientServerIndex, hm2CamClientServerRowStatus=hm2CamClientServerRowStatus, hm2CamActionConnectionStatus=hm2CamActionConnectionStatus, hm2CamCertInfoSubject=hm2CamCertInfoSubject, hm2CamClientServerReplicationStatus=hm2CamClientServerReplicationStatus, hm2CamClientServerSearchString=hm2CamClientServerSearchString, hm2CamConfigGroup=hm2CamConfigGroup, hm2CamCertInfoIssuer=hm2CamCertInfoIssuer, hm2CamPwdChangeGroup=hm2CamPwdChangeGroup, hm2CamPwdChangeUserPwNew=hm2CamPwdChangeUserPwNew, hm2CamClientServerAddrTable=hm2CamClientServerAddrTable, hm2CamPwdChangeAction=hm2CamPwdChangeAction, hm2CamPwdChangeUserName=hm2CamPwdChangeUserName, hm2CamCertInfoGroup=hm2CamCertInfoGroup, hm2CamClientServerAddr=hm2CamClientServerAddr, hm2CamPwdChangeUserPwOld=hm2CamPwdChangeUserPwOld, hm2CamClientServerPort=hm2CamClientServerPort, hm2CamCertInfoPresent=hm2CamCertInfoPresent, hm2CamClientServerBaseDN=hm2CamClientServerBaseDN, hm2CamClientServerAddrType=hm2CamClientServerAddrType, hm2CamCertInfoTable=hm2CamCertInfoTable, hm2CamReplicationStatusTrap=hm2CamReplicationStatusTrap, hm2CamMgmtMibNotifications=hm2CamMgmtMibNotifications, hm2CamConfigAdminStatus=hm2CamConfigAdminStatus, hm2CamMgmtMib=hm2CamMgmtMib, hm2CamCertInfoSerialNumber=hm2CamCertInfoSerialNumber, hm2CamActionGroup=hm2CamActionGroup, hm2CamClientServerStatus=hm2CamClientServerStatus, PYSNMP_MODULE_ID=hm2CamMgmtMib, hm2CamMgmtMibObjects=hm2CamMgmtMibObjects, hm2CamActionReplicationStatus=hm2CamActionReplicationStatus, hm2CamCertInfoEntry=hm2CamCertInfoEntry, hm2CamClientServerReplicationInterval=hm2CamClientServerReplicationInterval, hm2CamCertInfoIndex=hm2CamCertInfoIndex, hm2CamCertInfoExpiry=hm2CamCertInfoExpiry, hm2CamClientServerAddrEntry=hm2CamClientServerAddrEntry, hm2CamAction=hm2CamAction)
