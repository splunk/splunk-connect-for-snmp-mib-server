#
# PySNMP MIB module Wellfleet-OSI-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/Wellfleet-OSI-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 21:34:36 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ValueSizeConstraint, ConstraintsIntersection, SingleValueConstraint, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ValueSizeConstraint", "ConstraintsIntersection", "SingleValueConstraint", "ValueRangeConstraint")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
Opaque, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter32, TimeTicks, MibIdentifier, ModuleIdentity, Integer32, Bits, Gauge32, ObjectIdentity, iso, Counter64, Unsigned32, IpAddress, NotificationType = mibBuilder.importSymbols("SNMPv2-SMI", "Opaque", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter32", "TimeTicks", "MibIdentifier", "ModuleIdentity", "Integer32", "Bits", "Gauge32", "ObjectIdentity", "iso", "Counter64", "Unsigned32", "IpAddress", "NotificationType")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
wfOsiGroup, = mibBuilder.importSymbols("Wellfleet-COMMON-MIB", "wfOsiGroup")
wfOsi = MibIdentifier((1, 3, 6, 1, 4, 1, 18, 3, 5, 6, 1))
wfOsiDelete = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 6, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("created", 1), ("deleted", 2))).clone('created')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfOsiDelete.setStatus('mandatory')
wfOsiDisable = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 6, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfOsiDisable.setStatus('mandatory')
wfOsiState = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 6, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("init", 3), ("notpresent", 4))).clone('notpresent')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfOsiState.setStatus('mandatory')
wfOsiIsisVersion = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 6, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfOsiIsisVersion.setStatus('mandatory')
wfOsiRouterType = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 6, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 3))).clone(namedValues=NamedValues(("l1only", 1), ("l1l2", 3))).clone('l1l2')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfOsiRouterType.setStatus('mandatory')
wfOsiRouterId = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 6, 1, 6), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfOsiRouterId.setStatus('mandatory')
wfOsiLoadBal = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 6, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfOsiLoadBal.setStatus('mandatory')
wfOsiMaxAreas = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 6, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1000)).clone(63)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfOsiMaxAreas.setStatus('mandatory')
wfOsiMaxEs = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 6, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4000)).clone(512)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfOsiMaxEs.setStatus('mandatory')
wfOsiMaxL1Is = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 6, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1000)).clone(15)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfOsiMaxL1Is.setStatus('mandatory')
wfOsiMaxL2Is = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 6, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1000)).clone(63)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfOsiMaxL2Is.setStatus('mandatory')
wfOsiMaxExtAddr = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 6, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 500)).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfOsiMaxExtAddr.setStatus('mandatory')
wfOsiCksumIsPdus = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 6, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfOsiCksumIsPdus.setStatus('mandatory')
wfOsiL1LspPassword = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 6, 1, 14), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfOsiL1LspPassword.setStatus('mandatory')
wfOsiL2LspPassword = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 6, 1, 15), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfOsiL2LspPassword.setStatus('mandatory')
wfOsiAreaAddr = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 6, 1, 16), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfOsiAreaAddr.setStatus('mandatory')
wfOsiAreaAddrAlias1 = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 6, 1, 17), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfOsiAreaAddrAlias1.setStatus('mandatory')
wfOsiAreaAddrAlias2 = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 6, 1, 18), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfOsiAreaAddrAlias2.setStatus('obsolete')
wfOsiCorruptedLsps = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 6, 1, 19), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfOsiCorruptedLsps.setStatus('mandatory')
wfOsiL1LspDbOverloads = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 6, 1, 20), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfOsiL1LspDbOverloads.setStatus('mandatory')
wfOsiL2LspDbOverloads = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 6, 1, 21), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfOsiL2LspDbOverloads.setStatus('mandatory')
wfOsiManAddrDroppedAreas = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 6, 1, 22), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfOsiManAddrDroppedAreas.setStatus('mandatory')
wfOsiSeqNumberSkips = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 6, 1, 23), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfOsiSeqNumberSkips.setStatus('mandatory')
wfOsiOwnLspPurges = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 6, 1, 24), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfOsiOwnLspPurges.setStatus('mandatory')
wfOsiOthLspPurges = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 6, 1, 25), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfOsiOthLspPurges.setStatus('mandatory')
wfOsiExceedMaxSeqNums = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 6, 1, 26), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfOsiExceedMaxSeqNums.setStatus('mandatory')
wfOsiNearestL2Is = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 6, 1, 27), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfOsiNearestL2Is.setStatus('mandatory')
wfOsiMaxDynEs = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 6, 1, 28), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4000)).clone(1024)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfOsiMaxDynEs.setStatus('mandatory')
wfOsiMaxDynL1Is = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 6, 1, 29), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1000)).clone(64)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfOsiMaxDynL1Is.setStatus('mandatory')
wfOsiMaxDynL2Is = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 6, 1, 30), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1000)).clone(64)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfOsiMaxDynL2Is.setStatus('mandatory')
wfOsiNumDynEsAdjs = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 6, 1, 31), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfOsiNumDynEsAdjs.setStatus('mandatory')
wfOsiNumDynL1Adjs = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 6, 1, 32), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfOsiNumDynL1Adjs.setStatus('mandatory')
wfOsiNumDynL2Adjs = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 6, 1, 33), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfOsiNumDynL2Adjs.setStatus('mandatory')
wfOsiNumL1Routes = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 6, 1, 34), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfOsiNumL1Routes.setStatus('mandatory')
wfOsiNumL2Routes = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 6, 1, 35), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfOsiNumL2Routes.setStatus('mandatory')
wfOsiNumDynPtpEsAdjs = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 6, 1, 36), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfOsiNumDynPtpEsAdjs.setStatus('mandatory')
wfOsiNumDynPtpIsAdjs = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 6, 1, 37), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfOsiNumDynPtpIsAdjs.setStatus('mandatory')
wfOsiClnpSrcRtOptionDisable = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 6, 1, 38), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfOsiClnpSrcRtOptionDisable.setStatus('mandatory')
wfOsiNumL1Lsps = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 6, 1, 39), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfOsiNumL1Lsps.setStatus('mandatory')
wfOsiNumL2Lsps = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 6, 1, 40), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfOsiNumL2Lsps.setStatus('mandatory')
wfOsiFletchRelaxedEnable = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 6, 1, 41), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfOsiFletchRelaxedEnable.setStatus('mandatory')
wfOsiStaticRouteTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 6, 2), )
if mibBuilder.loadTexts: wfOsiStaticRouteTable.setStatus('mandatory')
wfOsiStaticRouteEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 6, 2, 1), ).setIndexNames((0, "Wellfleet-OSI-MIB", "wfOsiStaticRouteAddr"))
if mibBuilder.loadTexts: wfOsiStaticRouteEntry.setStatus('mandatory')
wfOsiStaticRouteDelete = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 6, 2, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("created", 1), ("deleted", 2))).clone('created')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfOsiStaticRouteDelete.setStatus('mandatory')
wfOsiStaticRouteDisable = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 6, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfOsiStaticRouteDisable.setStatus('mandatory')
wfOsiStaticRouteAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 6, 2, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(20, 20)).setFixedLength(20)).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfOsiStaticRouteAddr.setStatus('mandatory')
wfOsiStaticRouteNibbleLength = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 6, 2, 1, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfOsiStaticRouteNibbleLength.setStatus('mandatory')
wfOsiStaticRouteNextHopIs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 6, 2, 1, 5), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfOsiStaticRouteNextHopIs.setStatus('mandatory')
wfOsiStaticRouteType = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 6, 2, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(9, 11, 13))).clone(namedValues=NamedValues(("es", 9), ("areaaddr", 11), ("extaddr", 13))).clone('es')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfOsiStaticRouteType.setStatus('mandatory')
wfOsiStaticRouteCost = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 6, 2, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1023)).clone(20)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfOsiStaticRouteCost.setStatus('mandatory')
wfOsiCircuitTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 6, 3), )
if mibBuilder.loadTexts: wfOsiCircuitTable.setStatus('mandatory')
wfOsiCircuitEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 6, 3, 1), ).setIndexNames((0, "Wellfleet-OSI-MIB", "wfOsiCircuitId"))
if mibBuilder.loadTexts: wfOsiCircuitEntry.setStatus('mandatory')
wfOsiCircuitDelete = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 6, 3, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("created", 1), ("deleted", 2))).clone('created')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfOsiCircuitDelete.setStatus('mandatory')
wfOsiCircuitDisable = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 6, 3, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfOsiCircuitDisable.setStatus('mandatory')
wfOsiCircuitState = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 6, 3, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("up", 1), ("down", 2))).clone('down')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfOsiCircuitState.setStatus('mandatory')
wfOsiCircuitId = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 6, 3, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfOsiCircuitId.setStatus('mandatory')
wfOsiCircuitRouterLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 6, 3, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 6, 7, 8))).clone(namedValues=NamedValues(("l1", 1), ("l2", 2), ("l1l2", 3), ("ext", 4), ("l2ext", 6), ("l1l2ext", 7), ("esisonly", 8))).clone('l1l2')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfOsiCircuitRouterLevel.setStatus('mandatory')
wfOsiCircuitL1DefaultMetric = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 6, 3, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 63)).clone(20)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfOsiCircuitL1DefaultMetric.setStatus('mandatory')
wfOsiCircuitL2DefaultMetric = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 6, 3, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 63)).clone(20)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfOsiCircuitL2DefaultMetric.setStatus('mandatory')
wfOsiCircuitL1DrPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 6, 3, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 127)).clone(64)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfOsiCircuitL1DrPriority.setStatus('mandatory')
wfOsiCircuitL2DrPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 6, 3, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 127)).clone(64)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfOsiCircuitL2DrPriority.setStatus('mandatory')
wfOsiCircuitIsisHelloTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 6, 3, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 3600)).clone(8)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfOsiCircuitIsisHelloTimer.setStatus('mandatory')
wfOsiCircuitEsisHelloTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 6, 3, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 3600)).clone(30)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfOsiCircuitEsisHelloTimer.setStatus('mandatory')
wfOsiCircuitEshConfigTime = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 6, 3, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 3600)).clone(600)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfOsiCircuitEshConfigTime.setStatus('mandatory')
wfOsiCircuitPassword = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 6, 3, 1, 13), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfOsiCircuitPassword.setStatus('mandatory')
wfOsiCircuitReceivedPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 6, 3, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfOsiCircuitReceivedPkts.setStatus('mandatory')
wfOsiCircuitSentPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 6, 3, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfOsiCircuitSentPkts.setStatus('mandatory')
wfOsiCircuitDroppedPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 6, 3, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfOsiCircuitDroppedPkts.setStatus('mandatory')
wfOsiCircuitFragmentedPdus = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 6, 3, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfOsiCircuitFragmentedPdus.setStatus('mandatory')
wfOsiCircuitCongestionDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 6, 3, 1, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfOsiCircuitCongestionDiscards.setStatus('mandatory')
wfOsiCircuitAddrUnreachDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 6, 3, 1, 19), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfOsiCircuitAddrUnreachDiscards.setStatus('mandatory')
wfOsiCircuitAgedPduDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 6, 3, 1, 20), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfOsiCircuitAgedPduDiscards.setStatus('mandatory')
wfOsiCircuitPduFormatErrDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 6, 3, 1, 21), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfOsiCircuitPduFormatErrDiscards.setStatus('mandatory')
wfOsiCircuitUnsuppOptsDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 6, 3, 1, 22), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfOsiCircuitUnsuppOptsDiscards.setStatus('mandatory')
wfOsiCircuitSentErrorReports = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 6, 3, 1, 23), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfOsiCircuitSentErrorReports.setStatus('mandatory')
wfOsiCircuitReceivedControlPdus = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 6, 3, 1, 24), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfOsiCircuitReceivedControlPdus.setStatus('mandatory')
wfOsiCircuitSentControlPdus = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 6, 3, 1, 25), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfOsiCircuitSentControlPdus.setStatus('mandatory')
wfOsiCircuitStateChanges = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 6, 3, 1, 26), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfOsiCircuitStateChanges.setStatus('mandatory')
wfOsiCircuitAdjStateChanges = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 6, 3, 1, 27), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfOsiCircuitAdjStateChanges.setStatus('mandatory')
wfOsiCircuitInitFailures = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 6, 3, 1, 28), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfOsiCircuitInitFailures.setStatus('mandatory')
wfOsiCircuitRejectedAdjs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 6, 3, 1, 29), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfOsiCircuitRejectedAdjs.setStatus('mandatory')
wfOsiCircuitReceivedBadLsps = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 6, 3, 1, 30), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfOsiCircuitReceivedBadLsps.setStatus('mandatory')
wfOsiCircuitReceivedBadSnps = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 6, 3, 1, 31), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfOsiCircuitReceivedBadSnps.setStatus('mandatory')
wfOsiCircuitReceivedBadEshs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 6, 3, 1, 32), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfOsiCircuitReceivedBadEshs.setStatus('mandatory')
wfOsiCircuitReceivedBadL1Iihs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 6, 3, 1, 33), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfOsiCircuitReceivedBadL1Iihs.setStatus('mandatory')
wfOsiCircuitReceivedBadL2Iihs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 6, 3, 1, 34), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfOsiCircuitReceivedBadL2Iihs.setStatus('mandatory')
wfOsiCircuitL1DrChanges = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 6, 3, 1, 35), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfOsiCircuitL1DrChanges.setStatus('mandatory')
wfOsiCircuitL2DrChanges = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 6, 3, 1, 36), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfOsiCircuitL2DrChanges.setStatus('mandatory')
wfOsiCircuitClnpForwarding = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 6, 3, 1, 37), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfOsiCircuitClnpForwarding.setStatus('mandatory')
wfOsiCircuitClnpDefaultLifeTime = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 6, 3, 1, 38), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfOsiCircuitClnpDefaultLifeTime.setStatus('mandatory')
wfOsiCircuitClnpInReceives = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 6, 3, 1, 39), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfOsiCircuitClnpInReceives.setStatus('mandatory')
wfOsiCircuitClnpInAddrErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 6, 3, 1, 40), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfOsiCircuitClnpInAddrErrors.setStatus('mandatory')
wfOsiCircuitClnpForwPdus = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 6, 3, 1, 41), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfOsiCircuitClnpForwPdus.setStatus('mandatory')
wfOsiCircuitClnpInUnknownNlps = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 6, 3, 1, 42), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfOsiCircuitClnpInUnknownNlps.setStatus('mandatory')
wfOsiCircuitClnpInDelivers = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 6, 3, 1, 43), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfOsiCircuitClnpInDelivers.setStatus('mandatory')
wfOsiCircuitClnpInUnknownUlps = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 6, 3, 1, 44), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfOsiCircuitClnpInUnknownUlps.setStatus('mandatory')
wfOsiCircuitClnpSegCreates = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 6, 3, 1, 45), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfOsiCircuitClnpSegCreates.setStatus('mandatory')
wfOsiCircuitClnpInOpts = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 6, 3, 1, 46), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfOsiCircuitClnpInOpts.setStatus('mandatory')
wfOsiCircuitClnpOutOpts = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 6, 3, 1, 47), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfOsiCircuitClnpOutOpts.setStatus('mandatory')
wfOsiCircuitEsisEshIns = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 6, 3, 1, 48), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfOsiCircuitEsisEshIns.setStatus('mandatory')
wfOsiCircuitEsisIshOuts = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 6, 3, 1, 49), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfOsiCircuitEsisIshOuts.setStatus('mandatory')
wfOsiCircuitEsisRduOuts = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 6, 3, 1, 50), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfOsiCircuitEsisRduOuts.setStatus('mandatory')
wfOsiCircuitL1DesignatedRouter = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 6, 3, 1, 51), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfOsiCircuitL1DesignatedRouter.setStatus('mandatory')
wfOsiCircuitL2DesignatedRouter = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 6, 3, 1, 52), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfOsiCircuitL2DesignatedRouter.setStatus('mandatory')
wfOsiCircuitClnpOutEchoReplies = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 6, 3, 1, 53), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfOsiCircuitClnpOutEchoReplies.setStatus('mandatory')
wfOsiCircuitClnpOutEchoRequests = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 6, 3, 1, 54), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfOsiCircuitClnpOutEchoRequests.setStatus('mandatory')
wfOsiCircuitClnpInEchoReplies = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 6, 3, 1, 55), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfOsiCircuitClnpInEchoReplies.setStatus('mandatory')
wfOsiCircuitClnpInEchoRequests = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 6, 3, 1, 56), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfOsiCircuitClnpInEchoRequests.setStatus('mandatory')
wfOsiCircuitNumDynEsAdjs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 6, 3, 1, 57), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfOsiCircuitNumDynEsAdjs.setStatus('mandatory')
wfOsiCircuitNumDynL1Adjs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 6, 3, 1, 58), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfOsiCircuitNumDynL1Adjs.setStatus('mandatory')
wfOsiCircuitNumDynL2Adjs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 6, 3, 1, 59), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfOsiCircuitNumDynL2Adjs.setStatus('mandatory')
wfOsiCircuitNumDynPtpIsAdjs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 6, 3, 1, 60), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfOsiCircuitNumDynPtpIsAdjs.setStatus('mandatory')
wfOsiCircuitNumDynPtpEsAdjs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 6, 3, 1, 61), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfOsiCircuitNumDynPtpEsAdjs.setStatus('mandatory')
wfOsiCircuitBadIshReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 6, 3, 1, 62), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfOsiCircuitBadIshReceived.setStatus('mandatory')
wfOsiCircuitEsisIshIns = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 6, 3, 1, 63), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfOsiCircuitEsisIshIns.setStatus('mandatory')
wfOsiCircuitIihHoldMultiplier = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 6, 3, 1, 64), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 5)).clone(3)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfOsiCircuitIihHoldMultiplier.setStatus('mandatory')
wfOsiCircuitIshHoldMultiplier = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 6, 3, 1, 65), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 5)).clone(3)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfOsiCircuitIshHoldMultiplier.setStatus('mandatory')
wfOsiCircuitDisableRedirect = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 6, 3, 1, 66), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfOsiCircuitDisableRedirect.setStatus('mandatory')
wfOsiExternalAddressTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 6, 4), )
if mibBuilder.loadTexts: wfOsiExternalAddressTable.setStatus('mandatory')
wfOsiExternalAddressEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 6, 4, 1), ).setIndexNames((0, "Wellfleet-OSI-MIB", "wfOsiExtAddrCircuit"), (0, "Wellfleet-OSI-MIB", "wfOsiExtAddr"))
if mibBuilder.loadTexts: wfOsiExternalAddressEntry.setStatus('mandatory')
wfOsiExtAddrDelete = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 6, 4, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("created", 1), ("deleted", 2))).clone('created')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfOsiExtAddrDelete.setStatus('mandatory')
wfOsiExtAddrDisable = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 6, 4, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfOsiExtAddrDisable.setStatus('mandatory')
wfOsiExtAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 6, 4, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(20, 20)).setFixedLength(20)).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfOsiExtAddr.setStatus('mandatory')
wfOsiExtAddrCircuit = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 6, 4, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfOsiExtAddrCircuit.setStatus('mandatory')
wfOsiExtAddrNibbleLength = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 6, 4, 1, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfOsiExtAddrNibbleLength.setStatus('mandatory')
wfOsiExtAddrSnpa = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 6, 4, 1, 6), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfOsiExtAddrSnpa.setStatus('mandatory')
wfOsiExtAddrCost = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 6, 4, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 63)).clone(20)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfOsiExtAddrCost.setStatus('mandatory')
wfOsiStaticEsTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 6, 5), )
if mibBuilder.loadTexts: wfOsiStaticEsTable.setStatus('mandatory')
wfOsiStaticEsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 6, 5, 1), ).setIndexNames((0, "Wellfleet-OSI-MIB", "wfOsiStaticEsCircuit"), (0, "Wellfleet-OSI-MIB", "wfOsiStaticEsId"))
if mibBuilder.loadTexts: wfOsiStaticEsEntry.setStatus('mandatory')
wfOsiStaticEsDelete = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 6, 5, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("created", 1), ("deleted", 2))).clone('created')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfOsiStaticEsDelete.setStatus('mandatory')
wfOsiStaticEsDisable = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 6, 5, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfOsiStaticEsDisable.setStatus('mandatory')
wfOsiStaticEsId = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 6, 5, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(6, 6)).setFixedLength(6)).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfOsiStaticEsId.setStatus('mandatory')
wfOsiStaticEsCircuit = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 6, 5, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfOsiStaticEsCircuit.setStatus('mandatory')
wfOsiStaticEsSnpa = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 6, 5, 1, 5), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfOsiStaticEsSnpa.setStatus('mandatory')
wfOsiTrafficFilterTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 6, 6), )
if mibBuilder.loadTexts: wfOsiTrafficFilterTable.setStatus('mandatory')
wfOsiTrafficFilterEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 6, 6, 1), ).setIndexNames((0, "Wellfleet-OSI-MIB", "wfOsiTrafficFilterCircuit"), (0, "Wellfleet-OSI-MIB", "wfOsiTrafficFilterRuleNumber"), (0, "Wellfleet-OSI-MIB", "wfOsiTrafficFilterFragment"))
if mibBuilder.loadTexts: wfOsiTrafficFilterEntry.setStatus('mandatory')
wfOsiTrafficFilterDelete = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 6, 6, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("created", 1), ("deleted", 2))).clone('created')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfOsiTrafficFilterDelete.setStatus('mandatory')
wfOsiTrafficFilterDisable = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 6, 6, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfOsiTrafficFilterDisable.setStatus('mandatory')
wfOsiTrafficFilterStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 6, 6, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("active", 1), ("error", 2), ("inactive", 3))).clone('inactive')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfOsiTrafficFilterStatus.setStatus('mandatory')
wfOsiTrafficFilterCounter = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 6, 6, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfOsiTrafficFilterCounter.setStatus('mandatory')
wfOsiTrafficFilterDefinition = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 6, 6, 1, 5), Opaque()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfOsiTrafficFilterDefinition.setStatus('mandatory')
wfOsiTrafficFilterReserved = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 6, 6, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfOsiTrafficFilterReserved.setStatus('mandatory')
wfOsiTrafficFilterCircuit = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 6, 6, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfOsiTrafficFilterCircuit.setStatus('mandatory')
wfOsiTrafficFilterRuleNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 6, 6, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfOsiTrafficFilterRuleNumber.setStatus('mandatory')
wfOsiTrafficFilterFragment = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 6, 6, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfOsiTrafficFilterFragment.setStatus('mandatory')
wfOsiTrafficFilterName = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 6, 6, 1, 10), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfOsiTrafficFilterName.setStatus('mandatory')
wfOsiL1LspHdrTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 6, 7), )
if mibBuilder.loadTexts: wfOsiL1LspHdrTable.setStatus('mandatory')
wfOsiL1LspHdrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 6, 7, 1), ).setIndexNames((0, "Wellfleet-OSI-MIB", "wfOsiL1LspHdrLspId"))
if mibBuilder.loadTexts: wfOsiL1LspHdrEntry.setStatus('mandatory')
wfOsiL1LspHdrLspId = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 6, 7, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(8, 8)).setFixedLength(8)).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfOsiL1LspHdrLspId.setStatus('mandatory')
wfOsiL1LspHdrLifetime = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 6, 7, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfOsiL1LspHdrLifetime.setStatus('mandatory')
wfOsiL1LspHdrSeqnum = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 6, 7, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfOsiL1LspHdrSeqnum.setStatus('mandatory')
wfOsiL1LspHdrFlags = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 6, 7, 1, 4), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfOsiL1LspHdrFlags.setStatus('mandatory')
wfOsiL1LspHdrCksum = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 6, 7, 1, 5), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfOsiL1LspHdrCksum.setStatus('mandatory')
wfOsiL2LspHdrTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 6, 8), )
if mibBuilder.loadTexts: wfOsiL2LspHdrTable.setStatus('mandatory')
wfOsiL2LspHdrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 6, 8, 1), ).setIndexNames((0, "Wellfleet-OSI-MIB", "wfOsiL2LspHdrLspId"))
if mibBuilder.loadTexts: wfOsiL2LspHdrEntry.setStatus('mandatory')
wfOsiL2LspHdrLspId = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 6, 8, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(8, 8)).setFixedLength(8)).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfOsiL2LspHdrLspId.setStatus('mandatory')
wfOsiL2LspHdrLifetime = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 6, 8, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfOsiL2LspHdrLifetime.setStatus('mandatory')
wfOsiL2LspHdrSeqnum = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 6, 8, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfOsiL2LspHdrSeqnum.setStatus('mandatory')
wfOsiL2LspHdrFlags = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 6, 8, 1, 4), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfOsiL2LspHdrFlags.setStatus('mandatory')
wfOsiL2LspHdrCksum = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 6, 8, 1, 5), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfOsiL2LspHdrCksum.setStatus('mandatory')
wfOsiDynAdjTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 6, 9), )
if mibBuilder.loadTexts: wfOsiDynAdjTable.setStatus('mandatory')
wfOsiDynAdjEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 6, 9, 1), ).setIndexNames((0, "Wellfleet-OSI-MIB", "wfOsiDynAdjId"))
if mibBuilder.loadTexts: wfOsiDynAdjEntry.setStatus('mandatory')
wfOsiDynAdjId = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 6, 9, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfOsiDynAdjId.setStatus('mandatory')
wfOsiDynAdjDatabase = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 6, 9, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfOsiDynAdjDatabase.setStatus('mandatory')
wfOsiDynAdjType = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 6, 9, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfOsiDynAdjType.setStatus('mandatory')
wfOsiDynAdjState = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 6, 9, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfOsiDynAdjState.setStatus('mandatory')
wfOsiDynAdjCircuitId = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 6, 9, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfOsiDynAdjCircuitId.setStatus('mandatory')
wfOsiDynAdjHoldTime = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 6, 9, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfOsiDynAdjHoldTime.setStatus('mandatory')
wfOsiDynAdjPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 6, 9, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfOsiDynAdjPriority.setStatus('mandatory')
wfOsiDynAdjSnpaAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 6, 9, 1, 8), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfOsiDynAdjSnpaAddr.setStatus('mandatory')
wfOsiDynAdjNsapAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 6, 9, 1, 9), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfOsiDynAdjNsapAddr.setStatus('mandatory')
wfOsiDynAdjLanId = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 6, 9, 1, 10), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfOsiDynAdjLanId.setStatus('mandatory')
wfOsiL1RoutesTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 6, 10), )
if mibBuilder.loadTexts: wfOsiL1RoutesTable.setStatus('mandatory')
wfOsiL1RouteEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 6, 10, 1), ).setIndexNames((0, "Wellfleet-OSI-MIB", "wfOsiL1RouteType"), (0, "Wellfleet-OSI-MIB", "wfOsiL1RoutePathSplit"), (0, "Wellfleet-OSI-MIB", "wfOsiL1RouteId"))
if mibBuilder.loadTexts: wfOsiL1RouteEntry.setStatus('mandatory')
wfOsiL1RouteId = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 6, 10, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(6, 6)).setFixedLength(6)).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfOsiL1RouteId.setStatus('mandatory')
wfOsiL1RoutePathSplit = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 6, 10, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfOsiL1RoutePathSplit.setStatus('mandatory')
wfOsiL1RouteType = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 6, 10, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfOsiL1RouteType.setStatus('mandatory')
wfOsiL1RouteNextHopSnpa = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 6, 10, 1, 4), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfOsiL1RouteNextHopSnpa.setStatus('mandatory')
wfOsiL1RouteNextHopId = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 6, 10, 1, 5), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfOsiL1RouteNextHopId.setStatus('mandatory')
wfOsiL1RouteNextHopType = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 6, 10, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfOsiL1RouteNextHopType.setStatus('mandatory')
wfOsiL1RouteNextHopCircuit = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 6, 10, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfOsiL1RouteNextHopCircuit.setStatus('mandatory')
wfOsiL1RouteDefaultMetricCost = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 6, 10, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfOsiL1RouteDefaultMetricCost.setStatus('mandatory')
wfOsiL2RoutesTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 6, 11), )
if mibBuilder.loadTexts: wfOsiL2RoutesTable.setStatus('mandatory')
wfOsiL2RouteEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 6, 11, 1), ).setIndexNames((0, "Wellfleet-OSI-MIB", "wfOsiL2RouteType"), (0, "Wellfleet-OSI-MIB", "wfOsiL2RoutePathSplit"), (0, "Wellfleet-OSI-MIB", "wfOsiL2RouteId"))
if mibBuilder.loadTexts: wfOsiL2RouteEntry.setStatus('mandatory')
wfOsiL2RouteId = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 6, 11, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(13, 13)).setFixedLength(13)).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfOsiL2RouteId.setStatus('mandatory')
wfOsiL2RoutePathSplit = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 6, 11, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfOsiL2RoutePathSplit.setStatus('mandatory')
wfOsiL2RouteType = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 6, 11, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfOsiL2RouteType.setStatus('mandatory')
wfOsiL2RouteNextHopSnpa = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 6, 11, 1, 4), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfOsiL2RouteNextHopSnpa.setStatus('mandatory')
wfOsiL2RouteNextHopId = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 6, 11, 1, 5), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfOsiL2RouteNextHopId.setStatus('mandatory')
wfOsiL2RouteNextHopType = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 6, 11, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfOsiL2RouteNextHopType.setStatus('mandatory')
wfOsiL2RouteNextHopCircuit = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 6, 11, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfOsiL2RouteNextHopCircuit.setStatus('mandatory')
wfOsiL2RouteDefaultMetricCost = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 6, 11, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfOsiL2RouteDefaultMetricCost.setStatus('mandatory')
wfOsiDecnetTrans = MibIdentifier((1, 3, 6, 1, 4, 1, 18, 3, 5, 6, 12))
wfOsiDecnetTransDelete = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 6, 12, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("created", 1), ("deleted", 2))).clone('created')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfOsiDecnetTransDelete.setStatus('mandatory')
wfOsiDecnetTransDisable = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 6, 12, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfOsiDecnetTransDisable.setStatus('mandatory')
wfOsiDecnetTransState = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 6, 12, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("init", 3), ("notpresent", 4))).clone('notpresent')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfOsiDecnetTransState.setStatus('mandatory')
wfOsiDecnetTransPhase4Pkts = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 6, 12, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfOsiDecnetTransPhase4Pkts.setStatus('mandatory')
wfOsiDecnetTransSegFail = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 6, 12, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfOsiDecnetTransSegFail.setStatus('mandatory')
wfOsiDecnetTransNselFail = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 6, 12, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfOsiDecnetTransNselFail.setStatus('mandatory')
wfOsiDecnetTransUnrFail = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 6, 12, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfOsiDecnetTransUnrFail.setStatus('mandatory')
wfOsiDecnetTransNumPhase4Es = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 6, 12, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfOsiDecnetTransNumPhase4Es.setStatus('mandatory')
wfOsiAreaAddressTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 6, 13), )
if mibBuilder.loadTexts: wfOsiAreaAddressTable.setStatus('mandatory')
wfOsiAreaAddressEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 6, 13, 1), ).setIndexNames((0, "Wellfleet-OSI-MIB", "wfOsiAreaAddress"))
if mibBuilder.loadTexts: wfOsiAreaAddressEntry.setStatus('mandatory')
wfOsiAreaAddrDelete = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 6, 13, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("created", 1), ("deleted", 2))).clone('created')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfOsiAreaAddrDelete.setStatus('mandatory')
wfOsiAreaAddrDisable = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 6, 13, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfOsiAreaAddrDisable.setStatus('mandatory')
wfOsiAreaAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 6, 13, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(3, 13))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfOsiAreaAddress.setStatus('mandatory')
wfOsiTarpEntry = MibIdentifier((1, 3, 6, 1, 4, 1, 18, 3, 5, 6, 14))
wfOsiTarpCreate = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 6, 14, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("created", 1), ("deleted", 2))).clone('created')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfOsiTarpCreate.setStatus('mandatory')
wfOsiTarpEnable = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 6, 14, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfOsiTarpEnable.setStatus('mandatory')
wfOsiTarpState = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 6, 14, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("init", 3), ("notpresent", 4))).clone('notpresent')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfOsiTarpState.setStatus('mandatory')
wfOsiTarpTID = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 6, 14, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfOsiTarpTID.setStatus('mandatory')
wfOsiTarpOriginate = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 6, 14, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfOsiTarpOriginate.setStatus('mandatory')
wfOsiTarpLifetime = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 6, 14, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)).clone(25)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfOsiTarpLifetime.setStatus('mandatory')
wfOsiTarpStartSeq = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 6, 14, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfOsiTarpStartSeq.setStatus('mandatory')
wfOsiTarpNextSeq = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 6, 14, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfOsiTarpNextSeq.setStatus('mandatory')
wfOsiTarpTarPro = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 6, 14, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfOsiTarpTarPro.setStatus('mandatory')
wfOsiTarpTDC = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 6, 14, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfOsiTarpTDC.setStatus('mandatory')
wfOsiTarpL2TDC = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 6, 14, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfOsiTarpL2TDC.setStatus('mandatory')
wfOsiTarpT1 = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 6, 14, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 3600)).clone(15)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfOsiTarpT1.setStatus('mandatory')
wfOsiTarpT2 = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 6, 14, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 3600)).clone(25)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfOsiTarpT2.setStatus('mandatory')
wfOsiTarpT3 = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 6, 14, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 3600)).clone(40)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfOsiTarpT3.setStatus('mandatory')
wfOsiTarpT4 = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 6, 14, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 3600)).clone(20)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfOsiTarpT4.setStatus('mandatory')
wfOsiTarpLDBTimer = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 6, 14, 16), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 600)).clone(300)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfOsiTarpLDBTimer.setStatus('mandatory')
wfOsiTarpLDBFlush = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 6, 14, 17), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 86400)).clone(300)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfOsiTarpLDBFlush.setStatus('mandatory')
wfOsiTarpLDBSize = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 6, 14, 18), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 5000)).clone(50)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfOsiTarpLDBSize.setStatus('mandatory')
wfOsiTarpType1Rcv = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 6, 14, 19), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfOsiTarpType1Rcv.setStatus('mandatory')
wfOsiTarpType1Xmt = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 6, 14, 20), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfOsiTarpType1Xmt.setStatus('mandatory')
wfOsiTarpType2Rcv = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 6, 14, 21), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfOsiTarpType2Rcv.setStatus('mandatory')
wfOsiTarpType2Xmt = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 6, 14, 22), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfOsiTarpType2Xmt.setStatus('mandatory')
wfOsiTarpType3Rcv = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 6, 14, 23), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfOsiTarpType3Rcv.setStatus('mandatory')
wfOsiTarpType3Xmt = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 6, 14, 24), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfOsiTarpType3Xmt.setStatus('mandatory')
wfOsiTarpType4Rcv = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 6, 14, 25), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfOsiTarpType4Rcv.setStatus('mandatory')
wfOsiTarpType4Xmt = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 6, 14, 26), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfOsiTarpType4Xmt.setStatus('mandatory')
wfOsiTarpType5Rcv = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 6, 14, 27), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfOsiTarpType5Rcv.setStatus('mandatory')
wfOsiTarpType5Xmt = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 6, 14, 28), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfOsiTarpType5Xmt.setStatus('mandatory')
wfOsiTarpCircuitTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 6, 15), )
if mibBuilder.loadTexts: wfOsiTarpCircuitTable.setStatus('mandatory')
wfOsiTarpCircuitEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 6, 15, 1), ).setIndexNames((0, "Wellfleet-OSI-MIB", "wfOsiTarpCircuitCct"))
if mibBuilder.loadTexts: wfOsiTarpCircuitEntry.setStatus('mandatory')
wfOsiTarpCircuitCreate = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 6, 15, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("created", 1), ("deleted", 2))).clone('created')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfOsiTarpCircuitCreate.setStatus('mandatory')
wfOsiTarpCircuitEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 6, 15, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfOsiTarpCircuitEnable.setStatus('mandatory')
wfOsiTarpCircuitState = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 6, 15, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("init", 3), ("notpresent", 4))).clone('notpresent')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfOsiTarpCircuitState.setStatus('mandatory')
wfOsiTarpCircuitCct = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 6, 15, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfOsiTarpCircuitCct.setStatus('mandatory')
wfOsiTarpCircuitPropagate = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 6, 15, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfOsiTarpCircuitPropagate.setStatus('mandatory')
wfOsiTarpCircuitOriginate = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 6, 15, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfOsiTarpCircuitOriginate.setStatus('mandatory')
wfOsiTarpCircuitType1Rcv = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 6, 15, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfOsiTarpCircuitType1Rcv.setStatus('mandatory')
wfOsiTarpCircuitType1Xmt = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 6, 15, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfOsiTarpCircuitType1Xmt.setStatus('mandatory')
wfOsiTarpCircuitType2Rcv = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 6, 15, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfOsiTarpCircuitType2Rcv.setStatus('mandatory')
wfOsiTarpCircuitType2Xmt = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 6, 15, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfOsiTarpCircuitType2Xmt.setStatus('mandatory')
wfOsiTarpCircuitType3Rcv = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 6, 15, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfOsiTarpCircuitType3Rcv.setStatus('mandatory')
wfOsiTarpCircuitType3Xmt = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 6, 15, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfOsiTarpCircuitType3Xmt.setStatus('mandatory')
wfOsiTarpCircuitType4Rcv = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 6, 15, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfOsiTarpCircuitType4Rcv.setStatus('mandatory')
wfOsiTarpCircuitType4Xmt = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 6, 15, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfOsiTarpCircuitType4Xmt.setStatus('mandatory')
wfOsiTarpCircuitType5Rcv = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 6, 15, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfOsiTarpCircuitType5Rcv.setStatus('mandatory')
wfOsiTarpCircuitType5Xmt = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 6, 15, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfOsiTarpCircuitType5Xmt.setStatus('mandatory')
wfOsiTarpCircuitNoBufs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 6, 15, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfOsiTarpCircuitNoBufs.setStatus('mandatory')
wfOsiTarpLDBTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 6, 16), )
if mibBuilder.loadTexts: wfOsiTarpLDBTable.setStatus('mandatory')
wfOsiTarpLDBEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 6, 16, 1), ).setIndexNames((0, "Wellfleet-OSI-MIB", "wfOsiTarpLDBNSAP"))
if mibBuilder.loadTexts: wfOsiTarpLDBEntry.setStatus('mandatory')
wfOsiTarpLDBCreate = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 6, 16, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("created", 1), ("deleted", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfOsiTarpLDBCreate.setStatus('mandatory')
wfOsiTarpLDBNSAP = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 6, 16, 1, 2), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfOsiTarpLDBNSAP.setStatus('mandatory')
wfOsiTarpLDBSequence = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 6, 16, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfOsiTarpLDBSequence.setStatus('mandatory')
wfOsiTarpLDBCurrentTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 6, 16, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 600)).clone(300)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfOsiTarpLDBCurrentTimer.setStatus('mandatory')
wfOsiTarpStaticAdjTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 6, 17), )
if mibBuilder.loadTexts: wfOsiTarpStaticAdjTable.setStatus('mandatory')
wfOsiTarpStaticAdjEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 6, 17, 1), ).setIndexNames((0, "Wellfleet-OSI-MIB", "wfOsiTarpStaticAdjNSAP"))
if mibBuilder.loadTexts: wfOsiTarpStaticAdjEntry.setStatus('mandatory')
wfOsiTarpStaticAdjCreate = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 6, 17, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("created", 1), ("deleted", 2))).clone('created')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfOsiTarpStaticAdjCreate.setStatus('mandatory')
wfOsiTarpStaticAdjEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 6, 17, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfOsiTarpStaticAdjEnable.setStatus('mandatory')
wfOsiTarpStaticAdjNSAP = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 6, 17, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(20, 20)).setFixedLength(20)).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfOsiTarpStaticAdjNSAP.setStatus('mandatory')
wfOsiTarpStaticNibbleLength = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 6, 17, 1, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfOsiTarpStaticNibbleLength.setStatus('mandatory')
wfOsiTarpIgnoreAdjTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 6, 18), )
if mibBuilder.loadTexts: wfOsiTarpIgnoreAdjTable.setStatus('mandatory')
wfOsiTarpIgnoreAdjEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 6, 18, 1), ).setIndexNames((0, "Wellfleet-OSI-MIB", "wfOsiTarpIgnoreAdjNSAP"))
if mibBuilder.loadTexts: wfOsiTarpIgnoreAdjEntry.setStatus('mandatory')
wfOsiTarpIgnoreAdjCreate = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 6, 18, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("created", 1), ("deleted", 2))).clone('created')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfOsiTarpIgnoreAdjCreate.setStatus('mandatory')
wfOsiTarpIgnoreAdjEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 6, 18, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfOsiTarpIgnoreAdjEnable.setStatus('mandatory')
wfOsiTarpIgnoreAdjNSAP = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 6, 18, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(20, 20)).setFixedLength(20)).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfOsiTarpIgnoreAdjNSAP.setStatus('mandatory')
wfOsiTarpIgnoreNibbleLength = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 6, 18, 1, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfOsiTarpIgnoreNibbleLength.setStatus('mandatory')
wfOsiGreAdjTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 6, 19), )
if mibBuilder.loadTexts: wfOsiGreAdjTable.setStatus('mandatory')
wfOsiGreAdjEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 6, 19, 1), ).setIndexNames((0, "Wellfleet-OSI-MIB", "wfOsiGreAdjTnlNum"), (0, "Wellfleet-OSI-MIB", "wfOsiGreAdjConnNum"))
if mibBuilder.loadTexts: wfOsiGreAdjEntry.setStatus('mandatory')
wfOsiGreAdjDelete = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 6, 19, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("created", 1), ("deleted", 2))).clone('created')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfOsiGreAdjDelete.setStatus('mandatory')
wfOsiGreAdjDisable = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 6, 19, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfOsiGreAdjDisable.setStatus('mandatory')
wfOsiGreAdjTnlNum = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 6, 19, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfOsiGreAdjTnlNum.setStatus('mandatory')
wfOsiGreAdjConnNum = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 6, 19, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfOsiGreAdjConnNum.setStatus('mandatory')
wfOsiGreAdjRemoteISId = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 6, 19, 1, 5), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfOsiGreAdjRemoteISId.setStatus('mandatory')
wfOsiGreAdjCircuitId = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 6, 19, 1, 6), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfOsiGreAdjCircuitId.setStatus('mandatory')
mibBuilder.exportSymbols("Wellfleet-OSI-MIB", wfOsiTarpCircuitType5Rcv=wfOsiTarpCircuitType5Rcv, wfOsiGreAdjDisable=wfOsiGreAdjDisable, wfOsiDynAdjPriority=wfOsiDynAdjPriority, wfOsiL1RouteNextHopCircuit=wfOsiL1RouteNextHopCircuit, wfOsiStaticEsDelete=wfOsiStaticEsDelete, wfOsiL1RouteNextHopId=wfOsiL1RouteNextHopId, wfOsiAreaAddrAlias1=wfOsiAreaAddrAlias1, wfOsiL1LspHdrCksum=wfOsiL1LspHdrCksum, wfOsiTarpEnable=wfOsiTarpEnable, wfOsiCircuitNumDynL2Adjs=wfOsiCircuitNumDynL2Adjs, wfOsiCircuitAgedPduDiscards=wfOsiCircuitAgedPduDiscards, wfOsiAreaAddressTable=wfOsiAreaAddressTable, wfOsiNumDynL1Adjs=wfOsiNumDynL1Adjs, wfOsiTrafficFilterDisable=wfOsiTrafficFilterDisable, wfOsiCircuitReceivedBadSnps=wfOsiCircuitReceivedBadSnps, wfOsiCircuitClnpSegCreates=wfOsiCircuitClnpSegCreates, wfOsiGreAdjEntry=wfOsiGreAdjEntry, wfOsiCircuitPassword=wfOsiCircuitPassword, wfOsiTarpLDBTable=wfOsiTarpLDBTable, wfOsiTarpIgnoreAdjNSAP=wfOsiTarpIgnoreAdjNSAP, wfOsiCircuitSentPkts=wfOsiCircuitSentPkts, wfOsiTarpCircuitType1Rcv=wfOsiTarpCircuitType1Rcv, wfOsiTarpType4Rcv=wfOsiTarpType4Rcv, wfOsiTrafficFilterCircuit=wfOsiTrafficFilterCircuit, wfOsiCircuitUnsuppOptsDiscards=wfOsiCircuitUnsuppOptsDiscards, wfOsiCircuitEsisIshOuts=wfOsiCircuitEsisIshOuts, wfOsiCircuitNumDynPtpEsAdjs=wfOsiCircuitNumDynPtpEsAdjs, wfOsiStaticEsEntry=wfOsiStaticEsEntry, wfOsiNumDynEsAdjs=wfOsiNumDynEsAdjs, wfOsiCircuitClnpInEchoRequests=wfOsiCircuitClnpInEchoRequests, wfOsiTarpLDBTimer=wfOsiTarpLDBTimer, wfOsiStaticRouteDisable=wfOsiStaticRouteDisable, wfOsiGreAdjCircuitId=wfOsiGreAdjCircuitId, wfOsiTarpCircuitType5Xmt=wfOsiTarpCircuitType5Xmt, wfOsiClnpSrcRtOptionDisable=wfOsiClnpSrcRtOptionDisable, wfOsiL2RouteId=wfOsiL2RouteId, wfOsiStaticRouteType=wfOsiStaticRouteType, wfOsiDynAdjDatabase=wfOsiDynAdjDatabase, wfOsiTarpType1Xmt=wfOsiTarpType1Xmt, wfOsiTarpLDBSequence=wfOsiTarpLDBSequence, wfOsiL2RouteType=wfOsiL2RouteType, wfOsiDecnetTransState=wfOsiDecnetTransState, wfOsiRouterId=wfOsiRouterId, wfOsiTrafficFilterReserved=wfOsiTrafficFilterReserved, wfOsiCircuitIshHoldMultiplier=wfOsiCircuitIshHoldMultiplier, wfOsiCircuitIihHoldMultiplier=wfOsiCircuitIihHoldMultiplier, wfOsiTrafficFilterRuleNumber=wfOsiTrafficFilterRuleNumber, wfOsiAreaAddressEntry=wfOsiAreaAddressEntry, wfOsiTrafficFilterCounter=wfOsiTrafficFilterCounter, wfOsiTarpT1=wfOsiTarpT1, wfOsiCorruptedLsps=wfOsiCorruptedLsps, wfOsiCircuitClnpInUnknownNlps=wfOsiCircuitClnpInUnknownNlps, wfOsiCircuitReceivedBadLsps=wfOsiCircuitReceivedBadLsps, wfOsiTarpType3Rcv=wfOsiTarpType3Rcv, wfOsiCircuitEntry=wfOsiCircuitEntry, wfOsiStaticEsSnpa=wfOsiStaticEsSnpa, wfOsiCircuitClnpInEchoReplies=wfOsiCircuitClnpInEchoReplies, wfOsiCircuitL1DrPriority=wfOsiCircuitL1DrPriority, wfOsiL1RouteId=wfOsiL1RouteId, wfOsiCircuitL2DrPriority=wfOsiCircuitL2DrPriority, wfOsiL2LspDbOverloads=wfOsiL2LspDbOverloads, wfOsiCircuitL2DesignatedRouter=wfOsiCircuitL2DesignatedRouter, wfOsiL1RouteNextHopSnpa=wfOsiL1RouteNextHopSnpa, wfOsiExtAddrSnpa=wfOsiExtAddrSnpa, wfOsiDynAdjSnpaAddr=wfOsiDynAdjSnpaAddr, wfOsiTarpStaticNibbleLength=wfOsiTarpStaticNibbleLength, wfOsiL2RoutesTable=wfOsiL2RoutesTable, wfOsiCircuitTable=wfOsiCircuitTable, wfOsiL2RouteEntry=wfOsiL2RouteEntry, wfOsiGreAdjConnNum=wfOsiGreAdjConnNum, wfOsiCircuitDroppedPkts=wfOsiCircuitDroppedPkts, wfOsiExtAddrNibbleLength=wfOsiExtAddrNibbleLength, wfOsiCircuitRejectedAdjs=wfOsiCircuitRejectedAdjs, wfOsiGreAdjDelete=wfOsiGreAdjDelete, wfOsiCircuitEsisEshIns=wfOsiCircuitEsisEshIns, wfOsiTarpIgnoreNibbleLength=wfOsiTarpIgnoreNibbleLength, wfOsiTrafficFilterFragment=wfOsiTrafficFilterFragment, wfOsiCircuitReceivedControlPdus=wfOsiCircuitReceivedControlPdus, wfOsiDynAdjTable=wfOsiDynAdjTable, wfOsiNumL2Routes=wfOsiNumL2Routes, wfOsiTarpIgnoreAdjEnable=wfOsiTarpIgnoreAdjEnable, wfOsiL1LspHdrSeqnum=wfOsiL1LspHdrSeqnum, wfOsiL2LspPassword=wfOsiL2LspPassword, wfOsiExtAddrCost=wfOsiExtAddrCost, wfOsiStaticRouteAddr=wfOsiStaticRouteAddr, wfOsiExtAddrDisable=wfOsiExtAddrDisable, wfOsiL2LspHdrTable=wfOsiL2LspHdrTable, wfOsiDecnetTransDisable=wfOsiDecnetTransDisable, wfOsiCircuitDelete=wfOsiCircuitDelete, wfOsiAreaAddrDelete=wfOsiAreaAddrDelete, wfOsiTarpTID=wfOsiTarpTID, wfOsiTarpCircuitCreate=wfOsiTarpCircuitCreate, wfOsiTarpCircuitCct=wfOsiTarpCircuitCct, wfOsiTarpCircuitType2Rcv=wfOsiTarpCircuitType2Rcv, wfOsiTarpIgnoreAdjTable=wfOsiTarpIgnoreAdjTable, wfOsiCircuitClnpForwarding=wfOsiCircuitClnpForwarding, wfOsiCircuitState=wfOsiCircuitState, wfOsiL1RoutesTable=wfOsiL1RoutesTable, wfOsiCircuitL1DefaultMetric=wfOsiCircuitL1DefaultMetric, wfOsiCircuitClnpDefaultLifeTime=wfOsiCircuitClnpDefaultLifeTime, wfOsiL2LspHdrLifetime=wfOsiL2LspHdrLifetime, wfOsiTarpNextSeq=wfOsiTarpNextSeq, wfOsiExceedMaxSeqNums=wfOsiExceedMaxSeqNums, wfOsiL2RouteNextHopCircuit=wfOsiL2RouteNextHopCircuit, wfOsiCircuitAddrUnreachDiscards=wfOsiCircuitAddrUnreachDiscards, wfOsiTarpStaticAdjEntry=wfOsiTarpStaticAdjEntry, wfOsiMaxDynEs=wfOsiMaxDynEs, wfOsiCircuitClnpOutEchoReplies=wfOsiCircuitClnpOutEchoReplies, wfOsiTrafficFilterEntry=wfOsiTrafficFilterEntry, wfOsiCircuitCongestionDiscards=wfOsiCircuitCongestionDiscards, wfOsiCircuitClnpForwPdus=wfOsiCircuitClnpForwPdus, wfOsiTarpCircuitTable=wfOsiTarpCircuitTable, wfOsiTarpLDBSize=wfOsiTarpLDBSize, wfOsiNearestL2Is=wfOsiNearestL2Is, wfOsiCircuitClnpInUnknownUlps=wfOsiCircuitClnpInUnknownUlps, wfOsiStaticRouteDelete=wfOsiStaticRouteDelete, wfOsiExtAddrCircuit=wfOsiExtAddrCircuit, wfOsiL2LspHdrLspId=wfOsiL2LspHdrLspId, wfOsiDecnetTransNumPhase4Es=wfOsiDecnetTransNumPhase4Es, wfOsiLoadBal=wfOsiLoadBal, wfOsiL1LspHdrFlags=wfOsiL1LspHdrFlags, wfOsiTarpCircuitType1Xmt=wfOsiTarpCircuitType1Xmt, wfOsiTarpLDBNSAP=wfOsiTarpLDBNSAP, wfOsiDynAdjState=wfOsiDynAdjState, wfOsiDecnetTransPhase4Pkts=wfOsiDecnetTransPhase4Pkts, wfOsiDecnetTransUnrFail=wfOsiDecnetTransUnrFail, wfOsiMaxL2Is=wfOsiMaxL2Is, wfOsiMaxDynL2Is=wfOsiMaxDynL2Is, wfOsiL2RouteDefaultMetricCost=wfOsiL2RouteDefaultMetricCost, wfOsiTarpCircuitType3Rcv=wfOsiTarpCircuitType3Rcv, wfOsiDelete=wfOsiDelete, wfOsiCircuitClnpInOpts=wfOsiCircuitClnpInOpts, wfOsiCircuitEsisIshIns=wfOsiCircuitEsisIshIns, wfOsiCircuitReceivedBadL1Iihs=wfOsiCircuitReceivedBadL1Iihs, wfOsi=wfOsi, wfOsiCircuitClnpInReceives=wfOsiCircuitClnpInReceives, wfOsiExtAddrDelete=wfOsiExtAddrDelete, wfOsiTarpLifetime=wfOsiTarpLifetime, wfOsiIsisVersion=wfOsiIsisVersion, wfOsiAreaAddr=wfOsiAreaAddr, wfOsiFletchRelaxedEnable=wfOsiFletchRelaxedEnable, wfOsiTarpType5Xmt=wfOsiTarpType5Xmt, wfOsiCksumIsPdus=wfOsiCksumIsPdus, wfOsiCircuitSentControlPdus=wfOsiCircuitSentControlPdus, wfOsiL1RouteEntry=wfOsiL1RouteEntry, wfOsiL2RouteNextHopSnpa=wfOsiL2RouteNextHopSnpa, wfOsiTarpCircuitEntry=wfOsiTarpCircuitEntry, wfOsiStaticEsId=wfOsiStaticEsId, wfOsiTarpType3Xmt=wfOsiTarpType3Xmt, wfOsiCircuitReceivedBadEshs=wfOsiCircuitReceivedBadEshs, wfOsiCircuitNumDynPtpIsAdjs=wfOsiCircuitNumDynPtpIsAdjs, wfOsiTarpState=wfOsiTarpState, wfOsiMaxExtAddr=wfOsiMaxExtAddr, wfOsiDecnetTrans=wfOsiDecnetTrans, wfOsiL2LspHdrCksum=wfOsiL2LspHdrCksum, wfOsiGreAdjTnlNum=wfOsiGreAdjTnlNum, wfOsiManAddrDroppedAreas=wfOsiManAddrDroppedAreas, wfOsiOwnLspPurges=wfOsiOwnLspPurges, wfOsiCircuitFragmentedPdus=wfOsiCircuitFragmentedPdus, wfOsiL1LspHdrLspId=wfOsiL1LspHdrLspId, wfOsiNumL1Lsps=wfOsiNumL1Lsps, wfOsiCircuitDisableRedirect=wfOsiCircuitDisableRedirect, wfOsiTarpStartSeq=wfOsiTarpStartSeq, wfOsiCircuitSentErrorReports=wfOsiCircuitSentErrorReports, wfOsiL2RouteNextHopType=wfOsiL2RouteNextHopType, wfOsiL1LspHdrEntry=wfOsiL1LspHdrEntry, wfOsiDynAdjNsapAddr=wfOsiDynAdjNsapAddr, wfOsiAreaAddrAlias2=wfOsiAreaAddrAlias2, wfOsiTarpType2Xmt=wfOsiTarpType2Xmt, wfOsiL2LspHdrSeqnum=wfOsiL2LspHdrSeqnum, wfOsiAreaAddress=wfOsiAreaAddress, wfOsiStaticRouteNibbleLength=wfOsiStaticRouteNibbleLength, wfOsiCircuitPduFormatErrDiscards=wfOsiCircuitPduFormatErrDiscards, wfOsiCircuitInitFailures=wfOsiCircuitInitFailures, wfOsiL1LspHdrLifetime=wfOsiL1LspHdrLifetime, wfOsiCircuitRouterLevel=wfOsiCircuitRouterLevel, wfOsiL2LspHdrFlags=wfOsiL2LspHdrFlags, wfOsiDecnetTransSegFail=wfOsiDecnetTransSegFail, wfOsiTarpL2TDC=wfOsiTarpL2TDC, wfOsiCircuitId=wfOsiCircuitId, wfOsiTarpEntry=wfOsiTarpEntry, wfOsiDynAdjCircuitId=wfOsiDynAdjCircuitId, wfOsiTarpLDBCurrentTimer=wfOsiTarpLDBCurrentTimer, wfOsiTarpType2Rcv=wfOsiTarpType2Rcv, wfOsiTarpT2=wfOsiTarpT2, wfOsiState=wfOsiState, wfOsiTarpOriginate=wfOsiTarpOriginate, wfOsiDisable=wfOsiDisable, wfOsiMaxEs=wfOsiMaxEs, wfOsiCircuitReceivedPkts=wfOsiCircuitReceivedPkts, wfOsiTrafficFilterName=wfOsiTrafficFilterName, wfOsiDynAdjId=wfOsiDynAdjId, wfOsiTarpCircuitEnable=wfOsiTarpCircuitEnable, wfOsiRouterType=wfOsiRouterType, wfOsiL1LspDbOverloads=wfOsiL1LspDbOverloads, wfOsiCircuitL1DrChanges=wfOsiCircuitL1DrChanges, wfOsiTarpStaticAdjTable=wfOsiTarpStaticAdjTable, wfOsiAreaAddrDisable=wfOsiAreaAddrDisable, wfOsiDecnetTransDelete=wfOsiDecnetTransDelete, wfOsiCircuitClnpInAddrErrors=wfOsiCircuitClnpInAddrErrors, wfOsiStaticRouteNextHopIs=wfOsiStaticRouteNextHopIs, wfOsiCircuitReceivedBadL2Iihs=wfOsiCircuitReceivedBadL2Iihs, wfOsiCircuitClnpInDelivers=wfOsiCircuitClnpInDelivers, wfOsiStaticRouteCost=wfOsiStaticRouteCost, wfOsiTarpCircuitOriginate=wfOsiTarpCircuitOriginate, wfOsiTarpCircuitNoBufs=wfOsiTarpCircuitNoBufs, wfOsiL1RouteDefaultMetricCost=wfOsiL1RouteDefaultMetricCost, wfOsiMaxAreas=wfOsiMaxAreas, wfOsiTarpType4Xmt=wfOsiTarpType4Xmt, wfOsiNumL1Routes=wfOsiNumL1Routes, wfOsiGreAdjTable=wfOsiGreAdjTable, wfOsiTrafficFilterTable=wfOsiTrafficFilterTable, wfOsiMaxDynL1Is=wfOsiMaxDynL1Is, wfOsiStaticRouteTable=wfOsiStaticRouteTable, wfOsiStaticEsCircuit=wfOsiStaticEsCircuit, wfOsiTarpLDBFlush=wfOsiTarpLDBFlush, wfOsiTarpCircuitType2Xmt=wfOsiTarpCircuitType2Xmt, wfOsiTrafficFilterDefinition=wfOsiTrafficFilterDefinition, wfOsiTarpIgnoreAdjCreate=wfOsiTarpIgnoreAdjCreate, wfOsiDynAdjHoldTime=wfOsiDynAdjHoldTime, wfOsiTarpLDBCreate=wfOsiTarpLDBCreate, wfOsiCircuitBadIshReceived=wfOsiCircuitBadIshReceived, wfOsiDynAdjType=wfOsiDynAdjType, wfOsiStaticEsDisable=wfOsiStaticEsDisable, wfOsiL1LspPassword=wfOsiL1LspPassword, wfOsiMaxL1Is=wfOsiMaxL1Is, wfOsiNumDynPtpIsAdjs=wfOsiNumDynPtpIsAdjs, wfOsiL2RoutePathSplit=wfOsiL2RoutePathSplit, wfOsiNumDynPtpEsAdjs=wfOsiNumDynPtpEsAdjs, wfOsiL1LspHdrTable=wfOsiL1LspHdrTable, wfOsiCircuitAdjStateChanges=wfOsiCircuitAdjStateChanges, wfOsiTarpTarPro=wfOsiTarpTarPro, wfOsiCircuitL2DefaultMetric=wfOsiCircuitL2DefaultMetric, wfOsiTarpCircuitState=wfOsiTarpCircuitState, wfOsiTarpCircuitType3Xmt=wfOsiTarpCircuitType3Xmt, wfOsiExtAddr=wfOsiExtAddr, wfOsiTarpCircuitType4Rcv=wfOsiTarpCircuitType4Rcv, wfOsiTarpType5Rcv=wfOsiTarpType5Rcv, wfOsiCircuitDisable=wfOsiCircuitDisable, wfOsiCircuitClnpOutEchoRequests=wfOsiCircuitClnpOutEchoRequests, wfOsiCircuitEsisRduOuts=wfOsiCircuitEsisRduOuts, wfOsiTarpStaticAdjCreate=wfOsiTarpStaticAdjCreate, wfOsiNumDynL2Adjs=wfOsiNumDynL2Adjs, wfOsiOthLspPurges=wfOsiOthLspPurges, wfOsiNumL2Lsps=wfOsiNumL2Lsps, wfOsiCircuitNumDynL1Adjs=wfOsiCircuitNumDynL1Adjs, wfOsiStaticEsTable=wfOsiStaticEsTable, wfOsiTarpCircuitPropagate=wfOsiTarpCircuitPropagate, wfOsiTarpStaticAdjEnable=wfOsiTarpStaticAdjEnable, wfOsiDecnetTransNselFail=wfOsiDecnetTransNselFail, wfOsiTarpStaticAdjNSAP=wfOsiTarpStaticAdjNSAP, wfOsiGreAdjRemoteISId=wfOsiGreAdjRemoteISId, wfOsiL1RouteType=wfOsiL1RouteType, wfOsiCircuitL2DrChanges=wfOsiCircuitL2DrChanges)
mibBuilder.exportSymbols("Wellfleet-OSI-MIB", wfOsiTrafficFilterDelete=wfOsiTrafficFilterDelete, wfOsiL2LspHdrEntry=wfOsiL2LspHdrEntry, wfOsiDynAdjLanId=wfOsiDynAdjLanId, wfOsiCircuitEsisHelloTimer=wfOsiCircuitEsisHelloTimer, wfOsiTarpCreate=wfOsiTarpCreate, wfOsiCircuitClnpOutOpts=wfOsiCircuitClnpOutOpts, wfOsiTarpType1Rcv=wfOsiTarpType1Rcv, wfOsiL1RoutePathSplit=wfOsiL1RoutePathSplit, wfOsiSeqNumberSkips=wfOsiSeqNumberSkips, wfOsiDynAdjEntry=wfOsiDynAdjEntry, wfOsiTarpT4=wfOsiTarpT4, wfOsiTarpTDC=wfOsiTarpTDC, wfOsiCircuitL1DesignatedRouter=wfOsiCircuitL1DesignatedRouter, wfOsiStaticRouteEntry=wfOsiStaticRouteEntry, wfOsiExternalAddressEntry=wfOsiExternalAddressEntry, wfOsiTrafficFilterStatus=wfOsiTrafficFilterStatus, wfOsiTarpLDBEntry=wfOsiTarpLDBEntry, wfOsiCircuitStateChanges=wfOsiCircuitStateChanges, wfOsiCircuitNumDynEsAdjs=wfOsiCircuitNumDynEsAdjs, wfOsiL2RouteNextHopId=wfOsiL2RouteNextHopId, wfOsiExternalAddressTable=wfOsiExternalAddressTable, wfOsiCircuitEshConfigTime=wfOsiCircuitEshConfigTime, wfOsiTarpCircuitType4Xmt=wfOsiTarpCircuitType4Xmt, wfOsiL1RouteNextHopType=wfOsiL1RouteNextHopType, wfOsiTarpT3=wfOsiTarpT3, wfOsiCircuitIsisHelloTimer=wfOsiCircuitIsisHelloTimer, wfOsiTarpIgnoreAdjEntry=wfOsiTarpIgnoreAdjEntry)
