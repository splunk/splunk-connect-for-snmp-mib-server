#
# PySNMP MIB module Nortel-MsCarrier-MscPassport-BitTransparentMIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/Nortel-MsCarrier-MscPassport-BitTransparentMIB
# Produced by pysmi-0.3.4 at Mon Apr 29 20:20:01 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ConstraintsIntersection, SingleValueConstraint, ValueRangeConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ConstraintsIntersection", "SingleValueConstraint", "ValueRangeConstraint", "ConstraintsUnion")
Integer32, InterfaceIndex, Counter32, StorageType, Gauge32, Unsigned32, RowStatus, DisplayString = mibBuilder.importSymbols("Nortel-MsCarrier-MscPassport-StandardTextualConventionsMIB", "Integer32", "InterfaceIndex", "Counter32", "StorageType", "Gauge32", "Unsigned32", "RowStatus", "DisplayString")
NonReplicated, EnterpriseDateAndTime, Hex, Link, PassportCounter64, AsciiString = mibBuilder.importSymbols("Nortel-MsCarrier-MscPassport-TextualConventionsMIB", "NonReplicated", "EnterpriseDateAndTime", "Hex", "Link", "PassportCounter64", "AsciiString")
mscPassportMIBs, mscComponents = mibBuilder.importSymbols("Nortel-MsCarrier-MscPassport-UsefulDefinitionsMIB", "mscPassportMIBs", "mscComponents")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
NotificationType, Integer32, Bits, MibIdentifier, Counter32, ObjectIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter64, TimeTicks, Gauge32, iso, ModuleIdentity, Unsigned32, IpAddress = mibBuilder.importSymbols("SNMPv2-SMI", "NotificationType", "Integer32", "Bits", "MibIdentifier", "Counter32", "ObjectIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter64", "TimeTicks", "Gauge32", "iso", "ModuleIdentity", "Unsigned32", "IpAddress")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
bitTransparentMIB = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 46))
mscBtds = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 81))
mscBtdsRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 81, 1), )
if mibBuilder.loadTexts: mscBtdsRowStatusTable.setStatus('mandatory')
mscBtdsRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 81, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-BitTransparentMIB", "mscBtdsIndex"))
if mibBuilder.loadTexts: mscBtdsRowStatusEntry.setStatus('mandatory')
mscBtdsRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 81, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscBtdsRowStatus.setStatus('mandatory')
mscBtdsComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 81, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscBtdsComponentName.setStatus('mandatory')
mscBtdsStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 81, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscBtdsStorageType.setStatus('mandatory')
mscBtdsIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 81, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)))
if mibBuilder.loadTexts: mscBtdsIndex.setStatus('mandatory')
mscBtdsCidDataTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 81, 100), )
if mibBuilder.loadTexts: mscBtdsCidDataTable.setStatus('mandatory')
mscBtdsCidDataEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 81, 100, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-BitTransparentMIB", "mscBtdsIndex"))
if mibBuilder.loadTexts: mscBtdsCidDataEntry.setStatus('mandatory')
mscBtdsCustomerIdentifier = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 81, 100, 1, 1), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 8191), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscBtdsCustomerIdentifier.setStatus('mandatory')
mscBtdsIfEntryTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 81, 101), )
if mibBuilder.loadTexts: mscBtdsIfEntryTable.setStatus('mandatory')
mscBtdsIfEntryEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 81, 101, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-BitTransparentMIB", "mscBtdsIndex"))
if mibBuilder.loadTexts: mscBtdsIfEntryEntry.setStatus('mandatory')
mscBtdsIfAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 81, 101, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("testing", 3))).clone('up')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscBtdsIfAdminStatus.setStatus('mandatory')
mscBtdsIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 81, 101, 1, 2), InterfaceIndex().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscBtdsIfIndex.setStatus('mandatory')
mscBtdsOperStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 81, 102), )
if mibBuilder.loadTexts: mscBtdsOperStatusTable.setStatus('mandatory')
mscBtdsOperStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 81, 102, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-BitTransparentMIB", "mscBtdsIndex"))
if mibBuilder.loadTexts: mscBtdsOperStatusEntry.setStatus('mandatory')
mscBtdsSnmpOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 81, 102, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("testing", 3))).clone('up')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscBtdsSnmpOperStatus.setStatus('mandatory')
mscBtdsStateTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 81, 103), )
if mibBuilder.loadTexts: mscBtdsStateTable.setStatus('mandatory')
mscBtdsStateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 81, 103, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-BitTransparentMIB", "mscBtdsIndex"))
if mibBuilder.loadTexts: mscBtdsStateEntry.setStatus('mandatory')
mscBtdsAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 81, 103, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("locked", 0), ("unlocked", 1), ("shuttingDown", 2))).clone('unlocked')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscBtdsAdminState.setStatus('mandatory')
mscBtdsOperationalState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 81, 103, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1))).clone('disabled')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscBtdsOperationalState.setStatus('mandatory')
mscBtdsUsageState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 81, 103, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("idle", 0), ("active", 1), ("busy", 2))).clone('idle')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscBtdsUsageState.setStatus('mandatory')
mscBtdsAvailabilityStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 81, 103, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(2, 2)).setFixedLength(2)).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscBtdsAvailabilityStatus.setStatus('mandatory')
mscBtdsProceduralStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 81, 103, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 1)).setFixedLength(1)).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscBtdsProceduralStatus.setStatus('mandatory')
mscBtdsControlStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 81, 103, 1, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 1)).setFixedLength(1)).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscBtdsControlStatus.setStatus('mandatory')
mscBtdsAlarmStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 81, 103, 1, 7), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 1)).setFixedLength(1)).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscBtdsAlarmStatus.setStatus('mandatory')
mscBtdsStandbyStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 81, 103, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 15))).clone(namedValues=NamedValues(("hotStandby", 0), ("coldStandby", 1), ("providingService", 2), ("notSet", 15))).clone('notSet')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscBtdsStandbyStatus.setStatus('mandatory')
mscBtdsUnknownStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 81, 103, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("false", 0), ("true", 1))).clone('false')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscBtdsUnknownStatus.setStatus('mandatory')
mscBtdsOperationalTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 81, 105), )
if mibBuilder.loadTexts: mscBtdsOperationalTable.setStatus('mandatory')
mscBtdsOperationalEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 81, 105, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-BitTransparentMIB", "mscBtdsIndex"))
if mibBuilder.loadTexts: mscBtdsOperationalEntry.setStatus('mandatory')
mscBtdsServiceFailureReason = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 81, 105, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(2, 2)).setFixedLength(2)).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscBtdsServiceFailureReason.setStatus('mandatory')
mscBtdsFramer = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 81, 2))
mscBtdsFramerRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 81, 2, 1), )
if mibBuilder.loadTexts: mscBtdsFramerRowStatusTable.setStatus('mandatory')
mscBtdsFramerRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 81, 2, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-BitTransparentMIB", "mscBtdsIndex"), (0, "Nortel-MsCarrier-MscPassport-BitTransparentMIB", "mscBtdsFramerIndex"))
if mibBuilder.loadTexts: mscBtdsFramerRowStatusEntry.setStatus('mandatory')
mscBtdsFramerRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 81, 2, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscBtdsFramerRowStatus.setStatus('mandatory')
mscBtdsFramerComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 81, 2, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscBtdsFramerComponentName.setStatus('mandatory')
mscBtdsFramerStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 81, 2, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscBtdsFramerStorageType.setStatus('mandatory')
mscBtdsFramerIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 81, 2, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscBtdsFramerIndex.setStatus('mandatory')
mscBtdsFramerProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 81, 2, 10), )
if mibBuilder.loadTexts: mscBtdsFramerProvTable.setStatus('mandatory')
mscBtdsFramerProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 81, 2, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-BitTransparentMIB", "mscBtdsIndex"), (0, "Nortel-MsCarrier-MscPassport-BitTransparentMIB", "mscBtdsFramerIndex"))
if mibBuilder.loadTexts: mscBtdsFramerProvEntry.setStatus('mandatory')
mscBtdsFramerInterfaceName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 81, 2, 10, 1, 1), Link()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscBtdsFramerInterfaceName.setStatus('mandatory')
mscBtdsFramerChannelTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 81, 2, 11), )
if mibBuilder.loadTexts: mscBtdsFramerChannelTable.setStatus('mandatory')
mscBtdsFramerChannelEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 81, 2, 11, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-BitTransparentMIB", "mscBtdsIndex"), (0, "Nortel-MsCarrier-MscPassport-BitTransparentMIB", "mscBtdsFramerIndex"))
if mibBuilder.loadTexts: mscBtdsFramerChannelEntry.setStatus('mandatory')
mscBtdsFramerProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 81, 2, 11, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("none", 0), ("hdlc", 1), ("nrziHdlc", 2), ("universal", 3))).clone('none')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscBtdsFramerProtocol.setStatus('mandatory')
mscBtdsFramerNumOfIdleBytesToMonitor = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 81, 2, 11, 1, 8), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 32000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscBtdsFramerNumOfIdleBytesToMonitor.setStatus('mandatory')
mscBtdsFramerIdlePattern = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 81, 2, 11, 1, 9), Hex().subtype(subtypeSpec=ValueRangeConstraint(0, 255)).clone(255)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscBtdsFramerIdlePattern.setStatus('mandatory')
mscBtdsFramerTimeSlotAlignment = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 81, 2, 11, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("unaligned", 0), ("frameAligned", 1))).clone('unaligned')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscBtdsFramerTimeSlotAlignment.setStatus('mandatory')
mscBtdsFramerInsertedOutputDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 81, 2, 11, 1, 11), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 50)).clone(12)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscBtdsFramerInsertedOutputDelay.setStatus('mandatory')
mscBtdsFramerBtdsCellSize = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 81, 2, 11, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("n44", 0), ("n84", 1))).clone('n44')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscBtdsFramerBtdsCellSize.setStatus('mandatory')
mscBtdsFramerStateTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 81, 2, 12), )
if mibBuilder.loadTexts: mscBtdsFramerStateTable.setStatus('mandatory')
mscBtdsFramerStateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 81, 2, 12, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-BitTransparentMIB", "mscBtdsIndex"), (0, "Nortel-MsCarrier-MscPassport-BitTransparentMIB", "mscBtdsFramerIndex"))
if mibBuilder.loadTexts: mscBtdsFramerStateEntry.setStatus('mandatory')
mscBtdsFramerAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 81, 2, 12, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("locked", 0), ("unlocked", 1), ("shuttingDown", 2))).clone('unlocked')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscBtdsFramerAdminState.setStatus('mandatory')
mscBtdsFramerOperationalState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 81, 2, 12, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1))).clone('disabled')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscBtdsFramerOperationalState.setStatus('mandatory')
mscBtdsFramerUsageState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 81, 2, 12, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("idle", 0), ("active", 1), ("busy", 2))).clone('idle')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscBtdsFramerUsageState.setStatus('mandatory')
mscBtdsFramerStatsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 81, 2, 13), )
if mibBuilder.loadTexts: mscBtdsFramerStatsTable.setStatus('mandatory')
mscBtdsFramerStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 81, 2, 13, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-BitTransparentMIB", "mscBtdsIndex"), (0, "Nortel-MsCarrier-MscPassport-BitTransparentMIB", "mscBtdsFramerIndex"))
if mibBuilder.loadTexts: mscBtdsFramerStatsEntry.setStatus('mandatory')
mscBtdsFramerFrmFromIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 81, 2, 13, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscBtdsFramerFrmFromIf.setStatus('mandatory')
mscBtdsFramerSuppressedFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 81, 2, 13, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscBtdsFramerSuppressedFrames.setStatus('mandatory')
mscBtdsFramerFrmToIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 81, 2, 13, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscBtdsFramerFrmToIf.setStatus('mandatory')
mscBtdsFramerLrcErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 81, 2, 13, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscBtdsFramerLrcErrors.setStatus('mandatory')
mscBtdsFramerFrmLostInNetwork = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 81, 2, 13, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscBtdsFramerFrmLostInNetwork.setStatus('mandatory')
mscBtdsFramerFrmUnderRuns = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 81, 2, 13, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscBtdsFramerFrmUnderRuns.setStatus('mandatory')
mscBtdsFramerFrmDumped = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 81, 2, 13, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscBtdsFramerFrmDumped.setStatus('mandatory')
mscBtdsPlc = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 81, 3))
mscBtdsPlcRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 81, 3, 1), )
if mibBuilder.loadTexts: mscBtdsPlcRowStatusTable.setStatus('mandatory')
mscBtdsPlcRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 81, 3, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-BitTransparentMIB", "mscBtdsIndex"), (0, "Nortel-MsCarrier-MscPassport-BitTransparentMIB", "mscBtdsPlcIndex"))
if mibBuilder.loadTexts: mscBtdsPlcRowStatusEntry.setStatus('mandatory')
mscBtdsPlcRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 81, 3, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscBtdsPlcRowStatus.setStatus('mandatory')
mscBtdsPlcComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 81, 3, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscBtdsPlcComponentName.setStatus('mandatory')
mscBtdsPlcStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 81, 3, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscBtdsPlcStorageType.setStatus('mandatory')
mscBtdsPlcIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 81, 3, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscBtdsPlcIndex.setStatus('mandatory')
mscBtdsPlcProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 81, 3, 10), )
if mibBuilder.loadTexts: mscBtdsPlcProvTable.setStatus('mandatory')
mscBtdsPlcProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 81, 3, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-BitTransparentMIB", "mscBtdsIndex"), (0, "Nortel-MsCarrier-MscPassport-BitTransparentMIB", "mscBtdsPlcIndex"))
if mibBuilder.loadTexts: mscBtdsPlcProvEntry.setStatus('mandatory')
mscBtdsPlcRemoteName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 81, 3, 10, 1, 2), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(0, 40)).clone(hexValue="")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscBtdsPlcRemoteName.setStatus('mandatory')
mscBtdsPlcSetupPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 81, 3, 10, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4)).clone(2)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscBtdsPlcSetupPriority.setStatus('mandatory')
mscBtdsPlcHoldingPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 81, 3, 10, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4)).clone(2)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscBtdsPlcHoldingPriority.setStatus('mandatory')
mscBtdsPlcRequiredTxBandwidth = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 81, 3, 10, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295)).clone(64000)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscBtdsPlcRequiredTxBandwidth.setStatus('mandatory')
mscBtdsPlcRequiredRxBandwidth = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 81, 3, 10, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295)).clone(64000)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscBtdsPlcRequiredRxBandwidth.setStatus('mandatory')
mscBtdsPlcRequiredTrafficType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 81, 3, 10, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("voice", 0), ("data", 1), ("video", 2), ("trafficType1", 3), ("trafficType2", 4), ("trafficType3", 5), ("trafficType4", 6), ("trafficType5", 7))).clone('video')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscBtdsPlcRequiredTrafficType.setStatus('mandatory')
mscBtdsPlcPermittedTrunkTypes = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 81, 3, 10, 1, 8), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 1)).setFixedLength(1).clone(hexValue="f8")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscBtdsPlcPermittedTrunkTypes.setStatus('mandatory')
mscBtdsPlcRequiredSecurity = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 81, 3, 10, 1, 9), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 7)).clone(4)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscBtdsPlcRequiredSecurity.setStatus('mandatory')
mscBtdsPlcRequiredCustomerParm = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 81, 3, 10, 1, 10), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 7)).clone(4)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscBtdsPlcRequiredCustomerParm.setStatus('mandatory')
mscBtdsPlcPathAttributeToMinimize = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 81, 3, 10, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("cost", 0), ("delay", 1))).clone('cost')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscBtdsPlcPathAttributeToMinimize.setStatus('mandatory')
mscBtdsPlcMaximumAcceptableCost = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 81, 3, 10, 1, 12), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)).clone(1280)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscBtdsPlcMaximumAcceptableCost.setStatus('mandatory')
mscBtdsPlcMaximumAcceptableDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 81, 3, 10, 1, 13), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 100000)).clone(100000)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscBtdsPlcMaximumAcceptableDelay.setStatus('mandatory')
mscBtdsPlcEmissionPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 81, 3, 10, 1, 14), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscBtdsPlcEmissionPriority.setStatus('mandatory')
mscBtdsPlcDiscardPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 81, 3, 10, 1, 15), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 3)).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscBtdsPlcDiscardPriority.setStatus('mandatory')
mscBtdsPlcPathType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 81, 3, 10, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("normal", 0), ("manual", 1), ("forced", 2))).clone('normal')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscBtdsPlcPathType.setStatus('mandatory')
mscBtdsPlcPathFailureAction = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 81, 3, 10, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disconnectConnection", 0), ("reRoutePath", 1))).clone('reRoutePath')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscBtdsPlcPathFailureAction.setStatus('mandatory')
mscBtdsPlcBumpPreference = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 81, 3, 10, 1, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("bumpWhenNecessary", 0), ("bumpToObtainBestRoute", 1))).clone('bumpWhenNecessary')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscBtdsPlcBumpPreference.setStatus('mandatory')
mscBtdsPlcOptimization = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 81, 3, 10, 1, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscBtdsPlcOptimization.setStatus('mandatory')
mscBtdsPlcAddressToCall = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 81, 3, 10, 1, 20), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(0, 40)).clone(hexValue="")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscBtdsPlcAddressToCall.setStatus('mandatory')
mscBtdsPlcLocalAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 81, 3, 10, 1, 21), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(0, 40)).clone(hexValue="")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscBtdsPlcLocalAddress.setStatus('mandatory')
mscBtdsPlcMaximumAcceptableGatewayCost = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 81, 3, 10, 1, 22), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)).clone(2048)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscBtdsPlcMaximumAcceptableGatewayCost.setStatus('mandatory')
mscBtdsPlcMpathTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 81, 3, 262), )
if mibBuilder.loadTexts: mscBtdsPlcMpathTable.setStatus('mandatory')
mscBtdsPlcMpathEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 81, 3, 262, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-BitTransparentMIB", "mscBtdsIndex"), (0, "Nortel-MsCarrier-MscPassport-BitTransparentMIB", "mscBtdsPlcIndex"), (0, "Nortel-MsCarrier-MscPassport-BitTransparentMIB", "mscBtdsPlcMpathIndex"))
if mibBuilder.loadTexts: mscBtdsPlcMpathEntry.setStatus('mandatory')
mscBtdsPlcMpathIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 81, 3, 262, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 9)))
if mibBuilder.loadTexts: mscBtdsPlcMpathIndex.setStatus('mandatory')
mscBtdsPlcMpathValue = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 81, 3, 262, 1, 2), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(0, 40))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscBtdsPlcMpathValue.setStatus('mandatory')
mscBtdsLCo = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 81, 4))
mscBtdsLCoRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 81, 4, 1), )
if mibBuilder.loadTexts: mscBtdsLCoRowStatusTable.setStatus('mandatory')
mscBtdsLCoRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 81, 4, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-BitTransparentMIB", "mscBtdsIndex"), (0, "Nortel-MsCarrier-MscPassport-BitTransparentMIB", "mscBtdsLCoIndex"))
if mibBuilder.loadTexts: mscBtdsLCoRowStatusEntry.setStatus('mandatory')
mscBtdsLCoRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 81, 4, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscBtdsLCoRowStatus.setStatus('mandatory')
mscBtdsLCoComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 81, 4, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscBtdsLCoComponentName.setStatus('mandatory')
mscBtdsLCoStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 81, 4, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscBtdsLCoStorageType.setStatus('mandatory')
mscBtdsLCoIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 81, 4, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscBtdsLCoIndex.setStatus('mandatory')
mscBtdsLCoPathDataTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 81, 4, 10), )
if mibBuilder.loadTexts: mscBtdsLCoPathDataTable.setStatus('mandatory')
mscBtdsLCoPathDataEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 81, 4, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-BitTransparentMIB", "mscBtdsIndex"), (0, "Nortel-MsCarrier-MscPassport-BitTransparentMIB", "mscBtdsLCoIndex"))
if mibBuilder.loadTexts: mscBtdsLCoPathDataEntry.setStatus('mandatory')
mscBtdsLCoState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 81, 4, 10, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("pathDown", 0), ("selectingRoute", 1), ("connecting", 2), ("pathUp", 3), ("pathDownRetrying", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscBtdsLCoState.setStatus('mandatory')
mscBtdsLCoOverrideRemoteName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 81, 4, 10, 1, 2), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(0, 40))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscBtdsLCoOverrideRemoteName.setStatus('mandatory')
mscBtdsLCoEnd = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 81, 4, 10, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("calling", 0), ("called", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscBtdsLCoEnd.setStatus('mandatory')
mscBtdsLCoCostMetric = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 81, 4, 10, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscBtdsLCoCostMetric.setStatus('mandatory')
mscBtdsLCoDelayMetric = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 81, 4, 10, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 100000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscBtdsLCoDelayMetric.setStatus('mandatory')
mscBtdsLCoRoundTripDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 81, 4, 10, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 200000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscBtdsLCoRoundTripDelay.setStatus('mandatory')
mscBtdsLCoSetupPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 81, 4, 10, 1, 7), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscBtdsLCoSetupPriority.setStatus('mandatory')
mscBtdsLCoHoldingPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 81, 4, 10, 1, 8), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscBtdsLCoHoldingPriority.setStatus('mandatory')
mscBtdsLCoRequiredTxBandwidth = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 81, 4, 10, 1, 9), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscBtdsLCoRequiredTxBandwidth.setStatus('mandatory')
mscBtdsLCoRequiredRxBandwidth = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 81, 4, 10, 1, 10), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscBtdsLCoRequiredRxBandwidth.setStatus('mandatory')
mscBtdsLCoRequiredTrafficType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 81, 4, 10, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("voice", 0), ("data", 1), ("video", 2), ("trafficType1", 3), ("trafficType2", 4), ("trafficType3", 5), ("trafficType4", 6), ("trafficType5", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscBtdsLCoRequiredTrafficType.setStatus('mandatory')
mscBtdsLCoPermittedTrunkTypes = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 81, 4, 10, 1, 12), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 1)).setFixedLength(1)).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscBtdsLCoPermittedTrunkTypes.setStatus('mandatory')
mscBtdsLCoRequiredSecurity = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 81, 4, 10, 1, 13), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscBtdsLCoRequiredSecurity.setStatus('mandatory')
mscBtdsLCoRequiredCustomerParameter = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 81, 4, 10, 1, 14), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscBtdsLCoRequiredCustomerParameter.setStatus('mandatory')
mscBtdsLCoEmissionPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 81, 4, 10, 1, 15), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscBtdsLCoEmissionPriority.setStatus('mandatory')
mscBtdsLCoDiscardPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 81, 4, 10, 1, 16), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 3))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscBtdsLCoDiscardPriority.setStatus('mandatory')
mscBtdsLCoPathType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 81, 4, 10, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("normal", 0), ("manual", 1), ("forced", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscBtdsLCoPathType.setStatus('mandatory')
mscBtdsLCoRetryCount = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 81, 4, 10, 1, 18), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscBtdsLCoRetryCount.setStatus('mandatory')
mscBtdsLCoPathFailureCount = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 81, 4, 10, 1, 19), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscBtdsLCoPathFailureCount.setStatus('mandatory')
mscBtdsLCoReasonForNoRoute = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 81, 4, 10, 1, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14))).clone(namedValues=NamedValues(("none", 0), ("destinationNameTooLong", 1), ("destinationNotSpecified", 2), ("unknownDestinationName", 3), ("incorrectDestination", 4), ("incorrectDestinationEndPoint", 5), ("unknownSource", 6), ("unknownDestination", 7), ("sameNode", 8), ("routeCostTooMuch", 9), ("routesDelayTooLong", 10), ("attributesNotMet", 11), ("anError", 12), ("attributeProfileProblem", 13), ("manualPathIndexProblem", 14))).clone('none')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscBtdsLCoReasonForNoRoute.setStatus('mandatory')
mscBtdsLCoLastTearDownReason = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 81, 4, 10, 1, 21), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23))).clone(namedValues=NamedValues(("none", 0), ("normalShutDown", 1), ("insufficientTxLcOrBandwidth", 2), ("insufficientRxLcOrBandwidth", 3), ("trunkFailure", 4), ("trunkCardFailure", 5), ("operatorForced", 6), ("lostLcnClash", 7), ("networkCongestion", 8), ("trunkNotFound", 9), ("farEndNotFound", 10), ("wrongModuleReached", 11), ("farEndBusy", 12), ("callLoopedBack", 13), ("unknownReason", 14), ("farEndNotReady", 15), ("remoteNameMismatch", 16), ("serviceTypeMismatch", 17), ("reconnectFromFarEnd", 18), ("bumped", 19), ("accessCardFailure", 20), ("optimized", 21), ("overrideRemoteName", 22), ("trunkOrFarEndDidNotSupportMode", 23))).clone('none')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscBtdsLCoLastTearDownReason.setStatus('mandatory')
mscBtdsLCoPathFailureAction = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 81, 4, 10, 1, 22), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disconnectConnection", 0), ("reRoutePath", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscBtdsLCoPathFailureAction.setStatus('mandatory')
mscBtdsLCoBumpPreference = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 81, 4, 10, 1, 23), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("bumpWhenNecessary", 0), ("bumpToObtainBestRoute", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscBtdsLCoBumpPreference.setStatus('mandatory')
mscBtdsLCoOptimization = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 81, 4, 10, 1, 24), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscBtdsLCoOptimization.setStatus('mandatory')
mscBtdsLCoPathUpDateTime = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 81, 4, 10, 1, 25), EnterpriseDateAndTime().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(19, 19), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscBtdsLCoPathUpDateTime.setStatus('mandatory')
mscBtdsLCoStatsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 81, 4, 11), )
if mibBuilder.loadTexts: mscBtdsLCoStatsTable.setStatus('mandatory')
mscBtdsLCoStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 81, 4, 11, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-BitTransparentMIB", "mscBtdsIndex"), (0, "Nortel-MsCarrier-MscPassport-BitTransparentMIB", "mscBtdsLCoIndex"))
if mibBuilder.loadTexts: mscBtdsLCoStatsEntry.setStatus('mandatory')
mscBtdsLCoPktsToNetwork = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 81, 4, 11, 1, 1), PassportCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscBtdsLCoPktsToNetwork.setStatus('mandatory')
mscBtdsLCoBytesToNetwork = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 81, 4, 11, 1, 2), PassportCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscBtdsLCoBytesToNetwork.setStatus('mandatory')
mscBtdsLCoPktsFromNetwork = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 81, 4, 11, 1, 3), PassportCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscBtdsLCoPktsFromNetwork.setStatus('mandatory')
mscBtdsLCoBytesFromNetwork = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 81, 4, 11, 1, 4), PassportCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscBtdsLCoBytesFromNetwork.setStatus('mandatory')
mscBtdsLCoPathTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 81, 4, 264), )
if mibBuilder.loadTexts: mscBtdsLCoPathTable.setStatus('mandatory')
mscBtdsLCoPathEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 81, 4, 264, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-BitTransparentMIB", "mscBtdsIndex"), (0, "Nortel-MsCarrier-MscPassport-BitTransparentMIB", "mscBtdsLCoIndex"), (0, "Nortel-MsCarrier-MscPassport-BitTransparentMIB", "mscBtdsLCoPathValue"))
if mibBuilder.loadTexts: mscBtdsLCoPathEntry.setStatus('mandatory')
mscBtdsLCoPathValue = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 81, 4, 264, 1, 1), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(0, 40))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscBtdsLCoPathValue.setStatus('mandatory')
mscBtdsDpnss1 = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 81, 5))
mscBtdsDpnss1RowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 81, 5, 1), )
if mibBuilder.loadTexts: mscBtdsDpnss1RowStatusTable.setStatus('mandatory')
mscBtdsDpnss1RowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 81, 5, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-BitTransparentMIB", "mscBtdsIndex"), (0, "Nortel-MsCarrier-MscPassport-BitTransparentMIB", "mscBtdsDpnss1Index"))
if mibBuilder.loadTexts: mscBtdsDpnss1RowStatusEntry.setStatus('mandatory')
mscBtdsDpnss1RowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 81, 5, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscBtdsDpnss1RowStatus.setStatus('mandatory')
mscBtdsDpnss1ComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 81, 5, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscBtdsDpnss1ComponentName.setStatus('mandatory')
mscBtdsDpnss1StorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 81, 5, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscBtdsDpnss1StorageType.setStatus('mandatory')
mscBtdsDpnss1Index = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 81, 5, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscBtdsDpnss1Index.setStatus('mandatory')
mscBtdsDpnss1ProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 81, 5, 10), )
if mibBuilder.loadTexts: mscBtdsDpnss1ProvTable.setStatus('mandatory')
mscBtdsDpnss1ProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 81, 5, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-BitTransparentMIB", "mscBtdsIndex"), (0, "Nortel-MsCarrier-MscPassport-BitTransparentMIB", "mscBtdsDpnss1Index"))
if mibBuilder.loadTexts: mscBtdsDpnss1ProvEntry.setStatus('mandatory')
mscBtdsDpnss1TimeslotsX = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 81, 5, 10, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(4, 4)).setFixedLength(4)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscBtdsDpnss1TimeslotsX.setStatus('mandatory')
mscBtdsDpnss1VdcdTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 81, 5, 12), )
if mibBuilder.loadTexts: mscBtdsDpnss1VdcdTable.setStatus('mandatory')
mscBtdsDpnss1VdcdEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 81, 5, 12, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-BitTransparentMIB", "mscBtdsIndex"), (0, "Nortel-MsCarrier-MscPassport-BitTransparentMIB", "mscBtdsDpnss1Index"))
if mibBuilder.loadTexts: mscBtdsDpnss1VdcdEntry.setStatus('mandatory')
mscBtdsDpnss1NewVoiceCalls = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 81, 5, 12, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscBtdsDpnss1NewVoiceCalls.setStatus('mandatory')
mscBtdsDpnss1NewDataCalls = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 81, 5, 12, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscBtdsDpnss1NewDataCalls.setStatus('mandatory')
mscBtdsDpnss1VoiceToData = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 81, 5, 12, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscBtdsDpnss1VoiceToData.setStatus('mandatory')
mscBtdsDpnss1DataToVoice = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 81, 5, 12, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscBtdsDpnss1DataToVoice.setStatus('mandatory')
mscBtdsDpnss1CallClears = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 81, 5, 12, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscBtdsDpnss1CallClears.setStatus('mandatory')
mscBtdsDpnss1FramesTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 81, 5, 13), )
if mibBuilder.loadTexts: mscBtdsDpnss1FramesTable.setStatus('mandatory')
mscBtdsDpnss1FramesEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 81, 5, 13, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-BitTransparentMIB", "mscBtdsIndex"), (0, "Nortel-MsCarrier-MscPassport-BitTransparentMIB", "mscBtdsDpnss1Index"))
if mibBuilder.loadTexts: mscBtdsDpnss1FramesEntry.setStatus('mandatory')
mscBtdsDpnss1FrmProcessed = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 81, 5, 13, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscBtdsDpnss1FrmProcessed.setStatus('mandatory')
mscBtdsDpnss1FrmInvalid = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 81, 5, 13, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscBtdsDpnss1FrmInvalid.setStatus('mandatory')
mscBtdsDpnss1HdlcTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 81, 5, 14), )
if mibBuilder.loadTexts: mscBtdsDpnss1HdlcTable.setStatus('mandatory')
mscBtdsDpnss1HdlcEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 81, 5, 14, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-BitTransparentMIB", "mscBtdsIndex"), (0, "Nortel-MsCarrier-MscPassport-BitTransparentMIB", "mscBtdsDpnss1Index"))
if mibBuilder.loadTexts: mscBtdsDpnss1HdlcEntry.setStatus('mandatory')
mscBtdsDpnss1FrmFromIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 81, 5, 14, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscBtdsDpnss1FrmFromIf.setStatus('mandatory')
mscBtdsDpnss1Aborts = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 81, 5, 14, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscBtdsDpnss1Aborts.setStatus('mandatory')
mscBtdsDpnss1CrcErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 81, 5, 14, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscBtdsDpnss1CrcErrors.setStatus('mandatory')
mscBtdsDpnss1NonOctetErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 81, 5, 14, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscBtdsDpnss1NonOctetErrors.setStatus('mandatory')
mscBtdsDpnss1Overruns = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 81, 5, 14, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscBtdsDpnss1Overruns.setStatus('mandatory')
mscBtdsDpnss1LargeFrmErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 81, 5, 14, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscBtdsDpnss1LargeFrmErrors.setStatus('mandatory')
mscBtdsDpnss1TSlotTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 81, 5, 286), )
if mibBuilder.loadTexts: mscBtdsDpnss1TSlotTable.setStatus('mandatory')
mscBtdsDpnss1TSlotEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 81, 5, 286, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-BitTransparentMIB", "mscBtdsIndex"), (0, "Nortel-MsCarrier-MscPassport-BitTransparentMIB", "mscBtdsDpnss1Index"), (0, "Nortel-MsCarrier-MscPassport-BitTransparentMIB", "mscBtdsDpnss1TSlotIndex"))
if mibBuilder.loadTexts: mscBtdsDpnss1TSlotEntry.setStatus('mandatory')
mscBtdsDpnss1TSlotIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 81, 5, 286, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 31)))
if mibBuilder.loadTexts: mscBtdsDpnss1TSlotIndex.setStatus('mandatory')
mscBtdsDpnss1TSlotValue = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 81, 5, 286, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("idle", 0), ("voice", 1), ("data", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscBtdsDpnss1TSlotValue.setStatus('mandatory')
mscBtdsMcdn = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 81, 6))
mscBtdsMcdnRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 81, 6, 1), )
if mibBuilder.loadTexts: mscBtdsMcdnRowStatusTable.setStatus('mandatory')
mscBtdsMcdnRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 81, 6, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-BitTransparentMIB", "mscBtdsIndex"), (0, "Nortel-MsCarrier-MscPassport-BitTransparentMIB", "mscBtdsMcdnIndex"))
if mibBuilder.loadTexts: mscBtdsMcdnRowStatusEntry.setStatus('mandatory')
mscBtdsMcdnRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 81, 6, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscBtdsMcdnRowStatus.setStatus('mandatory')
mscBtdsMcdnComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 81, 6, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscBtdsMcdnComponentName.setStatus('mandatory')
mscBtdsMcdnStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 81, 6, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscBtdsMcdnStorageType.setStatus('mandatory')
mscBtdsMcdnIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 81, 6, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscBtdsMcdnIndex.setStatus('mandatory')
mscBtdsMcdnProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 81, 6, 10), )
if mibBuilder.loadTexts: mscBtdsMcdnProvTable.setStatus('mandatory')
mscBtdsMcdnProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 81, 6, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-BitTransparentMIB", "mscBtdsIndex"), (0, "Nortel-MsCarrier-MscPassport-BitTransparentMIB", "mscBtdsMcdnIndex"))
if mibBuilder.loadTexts: mscBtdsMcdnProvEntry.setStatus('mandatory')
mscBtdsMcdnAdjPbxSide = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 81, 6, 10, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("slave", 0), ("master", 1))).clone('slave')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscBtdsMcdnAdjPbxSide.setStatus('mandatory')
mscBtdsMcdnVdcdTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 81, 6, 12), )
if mibBuilder.loadTexts: mscBtdsMcdnVdcdTable.setStatus('mandatory')
mscBtdsMcdnVdcdEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 81, 6, 12, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-BitTransparentMIB", "mscBtdsIndex"), (0, "Nortel-MsCarrier-MscPassport-BitTransparentMIB", "mscBtdsMcdnIndex"))
if mibBuilder.loadTexts: mscBtdsMcdnVdcdEntry.setStatus('mandatory')
mscBtdsMcdnNewVoiceCalls = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 81, 6, 12, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscBtdsMcdnNewVoiceCalls.setStatus('mandatory')
mscBtdsMcdnNewDataCalls = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 81, 6, 12, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscBtdsMcdnNewDataCalls.setStatus('mandatory')
mscBtdsMcdnVoiceToData = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 81, 6, 12, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscBtdsMcdnVoiceToData.setStatus('mandatory')
mscBtdsMcdnDataToVoice = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 81, 6, 12, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscBtdsMcdnDataToVoice.setStatus('mandatory')
mscBtdsMcdnCallClears = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 81, 6, 12, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscBtdsMcdnCallClears.setStatus('mandatory')
mscBtdsMcdnFramesTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 81, 6, 13), )
if mibBuilder.loadTexts: mscBtdsMcdnFramesTable.setStatus('mandatory')
mscBtdsMcdnFramesEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 81, 6, 13, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-BitTransparentMIB", "mscBtdsIndex"), (0, "Nortel-MsCarrier-MscPassport-BitTransparentMIB", "mscBtdsMcdnIndex"))
if mibBuilder.loadTexts: mscBtdsMcdnFramesEntry.setStatus('mandatory')
mscBtdsMcdnFrmProcessed = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 81, 6, 13, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscBtdsMcdnFrmProcessed.setStatus('mandatory')
mscBtdsMcdnFrmInvalid = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 81, 6, 13, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscBtdsMcdnFrmInvalid.setStatus('mandatory')
mscBtdsMcdnHdlcTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 81, 6, 14), )
if mibBuilder.loadTexts: mscBtdsMcdnHdlcTable.setStatus('mandatory')
mscBtdsMcdnHdlcEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 81, 6, 14, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-BitTransparentMIB", "mscBtdsIndex"), (0, "Nortel-MsCarrier-MscPassport-BitTransparentMIB", "mscBtdsMcdnIndex"))
if mibBuilder.loadTexts: mscBtdsMcdnHdlcEntry.setStatus('mandatory')
mscBtdsMcdnFrmFromIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 81, 6, 14, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscBtdsMcdnFrmFromIf.setStatus('mandatory')
mscBtdsMcdnAborts = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 81, 6, 14, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscBtdsMcdnAborts.setStatus('mandatory')
mscBtdsMcdnCrcErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 81, 6, 14, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscBtdsMcdnCrcErrors.setStatus('mandatory')
mscBtdsMcdnNonOctetErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 81, 6, 14, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscBtdsMcdnNonOctetErrors.setStatus('mandatory')
mscBtdsMcdnOverruns = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 81, 6, 14, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscBtdsMcdnOverruns.setStatus('mandatory')
mscBtdsMcdnLargeFrmErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 81, 6, 14, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscBtdsMcdnLargeFrmErrors.setStatus('mandatory')
mscBtdsMcdnTSlotTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 81, 6, 286), )
if mibBuilder.loadTexts: mscBtdsMcdnTSlotTable.setStatus('mandatory')
mscBtdsMcdnTSlotEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 81, 6, 286, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-BitTransparentMIB", "mscBtdsIndex"), (0, "Nortel-MsCarrier-MscPassport-BitTransparentMIB", "mscBtdsMcdnIndex"), (0, "Nortel-MsCarrier-MscPassport-BitTransparentMIB", "mscBtdsMcdnTSlotIndex"))
if mibBuilder.loadTexts: mscBtdsMcdnTSlotEntry.setStatus('mandatory')
mscBtdsMcdnTSlotIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 81, 6, 286, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 31)))
if mibBuilder.loadTexts: mscBtdsMcdnTSlotIndex.setStatus('mandatory')
mscBtdsMcdnTSlotValue = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 81, 6, 286, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("idle", 0), ("voice", 1), ("data", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscBtdsMcdnTSlotValue.setStatus('mandatory')
bitTransparentGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 46, 1))
bitTransparentGroupCA = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 46, 1, 1))
bitTransparentGroupCA02 = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 46, 1, 1, 3))
bitTransparentGroupCA02A = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 46, 1, 1, 3, 2))
bitTransparentCapabilities = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 46, 3))
bitTransparentCapabilitiesCA = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 46, 3, 1))
bitTransparentCapabilitiesCA02 = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 46, 3, 1, 3))
bitTransparentCapabilitiesCA02A = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 46, 3, 1, 3, 2))
mibBuilder.exportSymbols("Nortel-MsCarrier-MscPassport-BitTransparentMIB", mscBtdsDpnss1StorageType=mscBtdsDpnss1StorageType, mscBtdsFramerStatsEntry=mscBtdsFramerStatsEntry, mscBtdsLCoPathValue=mscBtdsLCoPathValue, mscBtdsLCoPktsToNetwork=mscBtdsLCoPktsToNetwork, mscBtdsMcdnFramesTable=mscBtdsMcdnFramesTable, mscBtdsPlcRowStatusEntry=mscBtdsPlcRowStatusEntry, mscBtdsLCoState=mscBtdsLCoState, mscBtdsAlarmStatus=mscBtdsAlarmStatus, mscBtdsPlcMpathIndex=mscBtdsPlcMpathIndex, mscBtdsLCoDiscardPriority=mscBtdsLCoDiscardPriority, mscBtdsFramerRowStatus=mscBtdsFramerRowStatus, mscBtdsPlcProvEntry=mscBtdsPlcProvEntry, mscBtdsPlcRequiredRxBandwidth=mscBtdsPlcRequiredRxBandwidth, mscBtdsMcdnTSlotIndex=mscBtdsMcdnTSlotIndex, mscBtdsLCoRowStatusTable=mscBtdsLCoRowStatusTable, mscBtdsIndex=mscBtdsIndex, mscBtdsMcdnRowStatus=mscBtdsMcdnRowStatus, mscBtdsOperStatusTable=mscBtdsOperStatusTable, mscBtdsDpnss1ProvTable=mscBtdsDpnss1ProvTable, mscBtdsPlc=mscBtdsPlc, mscBtdsPlcHoldingPriority=mscBtdsPlcHoldingPriority, mscBtdsDpnss1VdcdTable=mscBtdsDpnss1VdcdTable, mscBtdsMcdnHdlcTable=mscBtdsMcdnHdlcTable, mscBtdsMcdnAborts=mscBtdsMcdnAborts, mscBtdsPlcLocalAddress=mscBtdsPlcLocalAddress, mscBtdsRowStatus=mscBtdsRowStatus, mscBtdsFramerStorageType=mscBtdsFramerStorageType, mscBtdsFramerInsertedOutputDelay=mscBtdsFramerInsertedOutputDelay, mscBtdsPlcMaximumAcceptableDelay=mscBtdsPlcMaximumAcceptableDelay, mscBtdsPlcMaximumAcceptableGatewayCost=mscBtdsPlcMaximumAcceptableGatewayCost, mscBtdsFramerIndex=mscBtdsFramerIndex, mscBtdsPlcMpathEntry=mscBtdsPlcMpathEntry, mscBtdsIfEntryTable=mscBtdsIfEntryTable, mscBtdsMcdnRowStatusEntry=mscBtdsMcdnRowStatusEntry, mscBtdsOperationalTable=mscBtdsOperationalTable, mscBtdsLCoReasonForNoRoute=mscBtdsLCoReasonForNoRoute, mscBtdsDpnss1ComponentName=mscBtdsDpnss1ComponentName, mscBtdsFramerInterfaceName=mscBtdsFramerInterfaceName, mscBtdsMcdnProvTable=mscBtdsMcdnProvTable, mscBtdsLCoRequiredCustomerParameter=mscBtdsLCoRequiredCustomerParameter, mscBtdsLCoRowStatusEntry=mscBtdsLCoRowStatusEntry, mscBtdsOperationalState=mscBtdsOperationalState, mscBtdsLCoPktsFromNetwork=mscBtdsLCoPktsFromNetwork, mscBtdsPlcSetupPriority=mscBtdsPlcSetupPriority, mscBtdsPlcBumpPreference=mscBtdsPlcBumpPreference, mscBtdsMcdnNewDataCalls=mscBtdsMcdnNewDataCalls, mscBtdsFramerChannelEntry=mscBtdsFramerChannelEntry, mscBtdsFramerProvEntry=mscBtdsFramerProvEntry, mscBtdsPlcIndex=mscBtdsPlcIndex, mscBtdsFramerAdminState=mscBtdsFramerAdminState, mscBtdsAdminState=mscBtdsAdminState, mscBtdsLCoPathDataTable=mscBtdsLCoPathDataTable, mscBtdsLCoEnd=mscBtdsLCoEnd, mscBtdsMcdnNewVoiceCalls=mscBtdsMcdnNewVoiceCalls, mscBtdsFramerTimeSlotAlignment=mscBtdsFramerTimeSlotAlignment, mscBtdsMcdnTSlotEntry=mscBtdsMcdnTSlotEntry, mscBtdsMcdnComponentName=mscBtdsMcdnComponentName, mscBtdsDpnss1NewDataCalls=mscBtdsDpnss1NewDataCalls, mscBtdsStateEntry=mscBtdsStateEntry, bitTransparentCapabilitiesCA02A=bitTransparentCapabilitiesCA02A, mscBtdsDpnss1CallClears=mscBtdsDpnss1CallClears, mscBtdsComponentName=mscBtdsComponentName, mscBtdsLCoEmissionPriority=mscBtdsLCoEmissionPriority, mscBtdsDpnss1TSlotEntry=mscBtdsDpnss1TSlotEntry, mscBtdsMcdnOverruns=mscBtdsMcdnOverruns, bitTransparentCapabilities=bitTransparentCapabilities, mscBtdsUnknownStatus=mscBtdsUnknownStatus, mscBtdsDpnss1FramesTable=mscBtdsDpnss1FramesTable, mscBtdsPlcComponentName=mscBtdsPlcComponentName, mscBtdsControlStatus=mscBtdsControlStatus, mscBtdsOperStatusEntry=mscBtdsOperStatusEntry, mscBtdsLCoStatsEntry=mscBtdsLCoStatsEntry, mscBtdsPlcDiscardPriority=mscBtdsPlcDiscardPriority, mscBtdsDpnss1VoiceToData=mscBtdsDpnss1VoiceToData, bitTransparentCapabilitiesCA02=bitTransparentCapabilitiesCA02, mscBtdsLCoRequiredTxBandwidth=mscBtdsLCoRequiredTxBandwidth, mscBtdsDpnss1NonOctetErrors=mscBtdsDpnss1NonOctetErrors, mscBtdsFramerStateEntry=mscBtdsFramerStateEntry, mscBtdsCidDataTable=mscBtdsCidDataTable, mscBtdsMcdnRowStatusTable=mscBtdsMcdnRowStatusTable, mscBtdsDpnss1RowStatusEntry=mscBtdsDpnss1RowStatusEntry, mscBtdsDpnss1RowStatusTable=mscBtdsDpnss1RowStatusTable, mscBtdsMcdnCrcErrors=mscBtdsMcdnCrcErrors, mscBtdsLCoPathDataEntry=mscBtdsLCoPathDataEntry, mscBtdsFramerProtocol=mscBtdsFramerProtocol, mscBtdsDpnss1DataToVoice=mscBtdsDpnss1DataToVoice, mscBtdsMcdnStorageType=mscBtdsMcdnStorageType, mscBtdsPlcRowStatus=mscBtdsPlcRowStatus, mscBtdsPlcPermittedTrunkTypes=mscBtdsPlcPermittedTrunkTypes, mscBtdsDpnss1FrmProcessed=mscBtdsDpnss1FrmProcessed, mscBtdsFramerFrmLostInNetwork=mscBtdsFramerFrmLostInNetwork, mscBtdsMcdnFrmInvalid=mscBtdsMcdnFrmInvalid, mscBtdsMcdnProvEntry=mscBtdsMcdnProvEntry, mscBtdsLCoHoldingPriority=mscBtdsLCoHoldingPriority, mscBtdsLCoOverrideRemoteName=mscBtdsLCoOverrideRemoteName, mscBtdsMcdnNonOctetErrors=mscBtdsMcdnNonOctetErrors, mscBtdsFramerNumOfIdleBytesToMonitor=mscBtdsFramerNumOfIdleBytesToMonitor, mscBtdsPlcMpathValue=mscBtdsPlcMpathValue, mscBtdsLCoPathUpDateTime=mscBtdsLCoPathUpDateTime, mscBtdsMcdnVoiceToData=mscBtdsMcdnVoiceToData, mscBtdsPlcPathType=mscBtdsPlcPathType, mscBtdsPlcProvTable=mscBtdsPlcProvTable, mscBtdsAvailabilityStatus=mscBtdsAvailabilityStatus, mscBtdsLCoRowStatus=mscBtdsLCoRowStatus, mscBtdsDpnss1HdlcEntry=mscBtdsDpnss1HdlcEntry, mscBtds=mscBtds, mscBtdsLCoCostMetric=mscBtdsLCoCostMetric, mscBtdsLCoDelayMetric=mscBtdsLCoDelayMetric, mscBtdsDpnss1HdlcTable=mscBtdsDpnss1HdlcTable, mscBtdsMcdnTSlotTable=mscBtdsMcdnTSlotTable, mscBtdsFramerRowStatusEntry=mscBtdsFramerRowStatusEntry, mscBtdsPlcStorageType=mscBtdsPlcStorageType, mscBtdsLCoPathEntry=mscBtdsLCoPathEntry, mscBtdsStorageType=mscBtdsStorageType, mscBtdsMcdnLargeFrmErrors=mscBtdsMcdnLargeFrmErrors, bitTransparentGroup=bitTransparentGroup, mscBtdsMcdnFramesEntry=mscBtdsMcdnFramesEntry, mscBtdsIfAdminStatus=mscBtdsIfAdminStatus, mscBtdsFramerRowStatusTable=mscBtdsFramerRowStatusTable, mscBtdsLCoStorageType=mscBtdsLCoStorageType, mscBtdsProceduralStatus=mscBtdsProceduralStatus, mscBtdsLCoPathType=mscBtdsLCoPathType, mscBtdsFramerSuppressedFrames=mscBtdsFramerSuppressedFrames, mscBtdsIfEntryEntry=mscBtdsIfEntryEntry, mscBtdsFramerComponentName=mscBtdsFramerComponentName, mscBtdsPlcEmissionPriority=mscBtdsPlcEmissionPriority, mscBtdsDpnss1TSlotIndex=mscBtdsDpnss1TSlotIndex, mscBtdsMcdnIndex=mscBtdsMcdnIndex, mscBtdsLCoBytesToNetwork=mscBtdsLCoBytesToNetwork, mscBtdsDpnss1FrmFromIf=mscBtdsDpnss1FrmFromIf, mscBtdsLCoIndex=mscBtdsLCoIndex, mscBtdsFramerOperationalState=mscBtdsFramerOperationalState, mscBtdsIfIndex=mscBtdsIfIndex, mscBtdsDpnss1TSlotTable=mscBtdsDpnss1TSlotTable, mscBtdsMcdnTSlotValue=mscBtdsMcdnTSlotValue, mscBtdsFramerStateTable=mscBtdsFramerStateTable, mscBtdsLCoLastTearDownReason=mscBtdsLCoLastTearDownReason, mscBtdsLCoPathFailureCount=mscBtdsLCoPathFailureCount, mscBtdsPlcMpathTable=mscBtdsPlcMpathTable, bitTransparentMIB=bitTransparentMIB, mscBtdsSnmpOperStatus=mscBtdsSnmpOperStatus, mscBtdsFramerFrmToIf=mscBtdsFramerFrmToIf, mscBtdsStandbyStatus=mscBtdsStandbyStatus, mscBtdsFramerFrmDumped=mscBtdsFramerFrmDumped, mscBtdsDpnss1LargeFrmErrors=mscBtdsDpnss1LargeFrmErrors, mscBtdsMcdnHdlcEntry=mscBtdsMcdnHdlcEntry, mscBtdsDpnss1NewVoiceCalls=mscBtdsDpnss1NewVoiceCalls, mscBtdsLCoPathTable=mscBtdsLCoPathTable, mscBtdsPlcRemoteName=mscBtdsPlcRemoteName, mscBtdsFramerProvTable=mscBtdsFramerProvTable, mscBtdsFramerLrcErrors=mscBtdsFramerLrcErrors, mscBtdsMcdnCallClears=mscBtdsMcdnCallClears, mscBtdsServiceFailureReason=mscBtdsServiceFailureReason, mscBtdsPlcRowStatusTable=mscBtdsPlcRowStatusTable, mscBtdsPlcRequiredCustomerParm=mscBtdsPlcRequiredCustomerParm, mscBtdsLCo=mscBtdsLCo, mscBtdsPlcOptimization=mscBtdsPlcOptimization, mscBtdsDpnss1ProvEntry=mscBtdsDpnss1ProvEntry, mscBtdsLCoRequiredRxBandwidth=mscBtdsLCoRequiredRxBandwidth, mscBtdsLCoBumpPreference=mscBtdsLCoBumpPreference, mscBtdsPlcRequiredTrafficType=mscBtdsPlcRequiredTrafficType, mscBtdsPlcPathAttributeToMinimize=mscBtdsPlcPathAttributeToMinimize, mscBtdsDpnss1=mscBtdsDpnss1, mscBtdsPlcAddressToCall=mscBtdsPlcAddressToCall, mscBtdsMcdnDataToVoice=mscBtdsMcdnDataToVoice, mscBtdsRowStatusTable=mscBtdsRowStatusTable, mscBtdsFramerUsageState=mscBtdsFramerUsageState, mscBtdsLCoStatsTable=mscBtdsLCoStatsTable, mscBtdsFramerChannelTable=mscBtdsFramerChannelTable, mscBtdsDpnss1Aborts=mscBtdsDpnss1Aborts, mscBtdsLCoComponentName=mscBtdsLCoComponentName, mscBtdsLCoRetryCount=mscBtdsLCoRetryCount, mscBtdsFramer=mscBtdsFramer, mscBtdsLCoOptimization=mscBtdsLCoOptimization, mscBtdsDpnss1CrcErrors=mscBtdsDpnss1CrcErrors, mscBtdsLCoBytesFromNetwork=mscBtdsLCoBytesFromNetwork, mscBtdsPlcRequiredTxBandwidth=mscBtdsPlcRequiredTxBandwidth, mscBtdsCidDataEntry=mscBtdsCidDataEntry, mscBtdsDpnss1FramesEntry=mscBtdsDpnss1FramesEntry, mscBtdsFramerIdlePattern=mscBtdsFramerIdlePattern, mscBtdsDpnss1FrmInvalid=mscBtdsDpnss1FrmInvalid, mscBtdsRowStatusEntry=mscBtdsRowStatusEntry, bitTransparentCapabilitiesCA=bitTransparentCapabilitiesCA, mscBtdsStateTable=mscBtdsStateTable, mscBtdsFramerFrmFromIf=mscBtdsFramerFrmFromIf, mscBtdsDpnss1Index=mscBtdsDpnss1Index, mscBtdsDpnss1RowStatus=mscBtdsDpnss1RowStatus, mscBtdsOperationalEntry=mscBtdsOperationalEntry, mscBtdsUsageState=mscBtdsUsageState, mscBtdsLCoRequiredSecurity=mscBtdsLCoRequiredSecurity, mscBtdsMcdnFrmFromIf=mscBtdsMcdnFrmFromIf, mscBtdsFramerFrmUnderRuns=mscBtdsFramerFrmUnderRuns, mscBtdsPlcPathFailureAction=mscBtdsPlcPathFailureAction, mscBtdsMcdnVdcdEntry=mscBtdsMcdnVdcdEntry, mscBtdsLCoPathFailureAction=mscBtdsLCoPathFailureAction, mscBtdsLCoSetupPriority=mscBtdsLCoSetupPriority, bitTransparentGroupCA02=bitTransparentGroupCA02, mscBtdsFramerBtdsCellSize=mscBtdsFramerBtdsCellSize, mscBtdsPlcMaximumAcceptableCost=mscBtdsPlcMaximumAcceptableCost, bitTransparentGroupCA02A=bitTransparentGroupCA02A, mscBtdsDpnss1Overruns=mscBtdsDpnss1Overruns, bitTransparentGroupCA=bitTransparentGroupCA, mscBtdsDpnss1VdcdEntry=mscBtdsDpnss1VdcdEntry, mscBtdsLCoPermittedTrunkTypes=mscBtdsLCoPermittedTrunkTypes, mscBtdsMcdnFrmProcessed=mscBtdsMcdnFrmProcessed, mscBtdsDpnss1TSlotValue=mscBtdsDpnss1TSlotValue, mscBtdsMcdnVdcdTable=mscBtdsMcdnVdcdTable, mscBtdsCustomerIdentifier=mscBtdsCustomerIdentifier, mscBtdsDpnss1TimeslotsX=mscBtdsDpnss1TimeslotsX, mscBtdsMcdnAdjPbxSide=mscBtdsMcdnAdjPbxSide, mscBtdsLCoRequiredTrafficType=mscBtdsLCoRequiredTrafficType, mscBtdsFramerStatsTable=mscBtdsFramerStatsTable, mscBtdsMcdn=mscBtdsMcdn, mscBtdsPlcRequiredSecurity=mscBtdsPlcRequiredSecurity, mscBtdsLCoRoundTripDelay=mscBtdsLCoRoundTripDelay)
