#
# PySNMP MIB module REDLINE-AN50-PMP-V2-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/REDLINE-AN50-PMP-V2-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 20:46:50 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ValueRangeConstraint, SingleValueConstraint, ConstraintsIntersection, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ValueRangeConstraint", "SingleValueConstraint", "ConstraintsIntersection", "ValueSizeConstraint")
redlineMgmt, = mibBuilder.importSymbols("REDLINE-MIB", "redlineMgmt")
ModuleCompliance, NotificationGroup, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup", "ObjectGroup")
TimeTicks, Gauge32, ModuleIdentity, Counter32, Integer32, iso, Bits, NotificationType, ObjectIdentity, Unsigned32, IpAddress, MibScalar, MibTable, MibTableRow, MibTableColumn, MibIdentifier, Counter64 = mibBuilder.importSymbols("SNMPv2-SMI", "TimeTicks", "Gauge32", "ModuleIdentity", "Counter32", "Integer32", "iso", "Bits", "NotificationType", "ObjectIdentity", "Unsigned32", "IpAddress", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "MibIdentifier", "Counter64")
RowStatus, DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "RowStatus", "DisplayString", "TextualConvention")
redlineAN50PMPV2 = ModuleIdentity((1, 3, 6, 1, 4, 1, 10728, 2, 51))
if mibBuilder.loadTexts: redlineAN50PMPV2.setLastUpdated('200503160000Z')
if mibBuilder.loadTexts: redlineAN50PMPV2.setOrganization('Redline Communications, Inc.')
an50pmpLinkTable = MibTable((1, 3, 6, 1, 4, 1, 10728, 2, 51, 1), )
if mibBuilder.loadTexts: an50pmpLinkTable.setStatus('current')
an50pmpLinkEntry = MibTableRow((1, 3, 6, 1, 4, 1, 10728, 2, 51, 1, 1), ).setIndexNames((0, "REDLINE-AN50-PMP-V2-MIB", "an50pmpLinkID"))
if mibBuilder.loadTexts: an50pmpLinkEntry.setStatus('current')
an50pmpLinkID = MibTableColumn((1, 3, 6, 1, 4, 1, 10728, 2, 51, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65536)))
if mibBuilder.loadTexts: an50pmpLinkID.setStatus('current')
an50pmpLinkName = MibTableColumn((1, 3, 6, 1, 4, 1, 10728, 2, 51, 1, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 15))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: an50pmpLinkName.setStatus('current')
an50pmpLinkGroupId = MibTableColumn((1, 3, 6, 1, 4, 1, 10728, 2, 51, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1024))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: an50pmpLinkGroupId.setStatus('obsolete')
an50pmpLinkPeerMac = MibTableColumn((1, 3, 6, 1, 4, 1, 10728, 2, 51, 1, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 6))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: an50pmpLinkPeerMac.setStatus('current')
an50pmpLinkMaxDLBurstRate = MibTableColumn((1, 3, 6, 1, 4, 1, 10728, 2, 51, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 8))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: an50pmpLinkMaxDLBurstRate.setStatus('current')
an50pmpLinkMaxULBurstRate = MibTableColumn((1, 3, 6, 1, 4, 1, 10728, 2, 51, 1, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 8))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: an50pmpLinkMaxULBurstRate.setStatus('current')
an50pmpLinkMaxHost = MibTableColumn((1, 3, 6, 1, 4, 1, 10728, 2, 51, 1, 1, 7), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: an50pmpLinkMaxHost.setStatus('obsolete')
an50pmpLinkCIDDLCIR = MibTableColumn((1, 3, 6, 1, 4, 1, 10728, 2, 51, 1, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: an50pmpLinkCIDDLCIR.setStatus('obsolete')
an50pmpLinkCIDDLPIR = MibTableColumn((1, 3, 6, 1, 4, 1, 10728, 2, 51, 1, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: an50pmpLinkCIDDLPIR.setStatus('obsolete')
an50pmpLinkCIDULCIR = MibTableColumn((1, 3, 6, 1, 4, 1, 10728, 2, 51, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: an50pmpLinkCIDULCIR.setStatus('obsolete')
an50pmpLinkCIDULPIR = MibTableColumn((1, 3, 6, 1, 4, 1, 10728, 2, 51, 1, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: an50pmpLinkCIDULPIR.setStatus('obsolete')
an50pmpLinkDLQoS = MibTableColumn((1, 3, 6, 1, 4, 1, 10728, 2, 51, 1, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 54))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: an50pmpLinkDLQoS.setStatus('obsolete')
an50pmpLinkULQoS = MibTableColumn((1, 3, 6, 1, 4, 1, 10728, 2, 51, 1, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 54))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: an50pmpLinkULQoS.setStatus('obsolete')
an50pmpLinkEncryptionKey = MibTableColumn((1, 3, 6, 1, 4, 1, 10728, 2, 51, 1, 1, 15), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: an50pmpLinkEncryptionKey.setStatus('current')
an50pmpLinkRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 10728, 2, 51, 1, 1, 14), RowStatus().clone('createAndWait')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: an50pmpLinkRowStatus.setStatus('current')
an50pmpLinkStatusTable = MibTable((1, 3, 6, 1, 4, 1, 10728, 2, 51, 2), )
if mibBuilder.loadTexts: an50pmpLinkStatusTable.setStatus('current')
an50pmpLinkStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 10728, 2, 51, 2, 1), ).setIndexNames((0, "REDLINE-AN50-PMP-V2-MIB", "an50pmpLinkStatusID"))
if mibBuilder.loadTexts: an50pmpLinkStatusEntry.setStatus('current')
an50pmpLinkStatusID = MibTableColumn((1, 3, 6, 1, 4, 1, 10728, 2, 51, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1024)))
if mibBuilder.loadTexts: an50pmpLinkStatusID.setStatus('current')
an50pmpLinkStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 10728, 2, 51, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("up", 1), ("down", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: an50pmpLinkStatus.setStatus('current')
an50pmpLinkStatusCode = MibTableColumn((1, 3, 6, 1, 4, 1, 10728, 2, 51, 2, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: an50pmpLinkStatusCode.setStatus('current')
an50pmpLinkRegConn = MibTableColumn((1, 3, 6, 1, 4, 1, 10728, 2, 51, 2, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1024))).setMaxAccess("readonly")
if mibBuilder.loadTexts: an50pmpLinkRegConn.setStatus('current')
an50pmpLinkDLBurstRate = MibTableColumn((1, 3, 6, 1, 4, 1, 10728, 2, 51, 2, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("tx6Mbs", 1), ("tx9Mbs", 2), ("tx12Mbs", 3), ("tx18Mbs", 4), ("tx24Mbs", 5), ("tx36Mbs", 6), ("tx48Mbs", 7), ("tx54Mbs", 8)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: an50pmpLinkDLBurstRate.setStatus('current')
an50pmpLinkDLRSSI = MibTableColumn((1, 3, 6, 1, 4, 1, 10728, 2, 51, 2, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: an50pmpLinkDLRSSI.setStatus('current')
an50pmpLinkDLSINADR = MibTableColumn((1, 3, 6, 1, 4, 1, 10728, 2, 51, 2, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: an50pmpLinkDLSINADR.setStatus('current')
an50pmpLinkDLStatLostFrm = MibTableColumn((1, 3, 6, 1, 4, 1, 10728, 2, 51, 2, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: an50pmpLinkDLStatLostFrm.setStatus('current')
an50pmpLinkDLStatBlksTot = MibTableColumn((1, 3, 6, 1, 4, 1, 10728, 2, 51, 2, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: an50pmpLinkDLStatBlksTot.setStatus('current')
an50pmpLinkDLStatBlksRetr = MibTableColumn((1, 3, 6, 1, 4, 1, 10728, 2, 51, 2, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: an50pmpLinkDLStatBlksRetr.setStatus('current')
an50pmpLinkDLStatBlksDisc = MibTableColumn((1, 3, 6, 1, 4, 1, 10728, 2, 51, 2, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: an50pmpLinkDLStatBlksDisc.setStatus('current')
an50pmpLinkDLCIDStatPktDisc = MibTableColumn((1, 3, 6, 1, 4, 1, 10728, 2, 51, 2, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: an50pmpLinkDLCIDStatPktDisc.setStatus('current')
an50pmpLinkDLCIDStatPktTran = MibTableColumn((1, 3, 6, 1, 4, 1, 10728, 2, 51, 2, 1, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: an50pmpLinkDLCIDStatPktTran.setStatus('current')
an50pmpLinkDLCIDStatPktRecv = MibTableColumn((1, 3, 6, 1, 4, 1, 10728, 2, 51, 2, 1, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: an50pmpLinkDLCIDStatPktRecv.setStatus('current')
an50pmpLinkULBurstRate = MibTableColumn((1, 3, 6, 1, 4, 1, 10728, 2, 51, 2, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("tx6Mbs", 1), ("tx9Mbs", 2), ("tx12Mbs", 3), ("tx18Mbs", 4), ("tx24Mbs", 5), ("tx36Mbs", 6), ("tx48Mbs", 7), ("tx54Mbs", 8)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: an50pmpLinkULBurstRate.setStatus('current')
an50pmpLinkULRSSI = MibTableColumn((1, 3, 6, 1, 4, 1, 10728, 2, 51, 2, 1, 16), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: an50pmpLinkULRSSI.setStatus('current')
an50pmpLinkULSINADR = MibTableColumn((1, 3, 6, 1, 4, 1, 10728, 2, 51, 2, 1, 17), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: an50pmpLinkULSINADR.setStatus('current')
an50pmpLinkULStatLostFrm = MibTableColumn((1, 3, 6, 1, 4, 1, 10728, 2, 51, 2, 1, 18), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: an50pmpLinkULStatLostFrm.setStatus('current')
an50pmpLinkULStatBlksTot = MibTableColumn((1, 3, 6, 1, 4, 1, 10728, 2, 51, 2, 1, 19), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: an50pmpLinkULStatBlksTot.setStatus('current')
an50pmpLinkULStatBlksRetr = MibTableColumn((1, 3, 6, 1, 4, 1, 10728, 2, 51, 2, 1, 20), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: an50pmpLinkULStatBlksRetr.setStatus('current')
an50pmpLinkULStatBlksDisc = MibTableColumn((1, 3, 6, 1, 4, 1, 10728, 2, 51, 2, 1, 21), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: an50pmpLinkULStatBlksDisc.setStatus('current')
an50pmpLinkULCIDStatPktDisc = MibTableColumn((1, 3, 6, 1, 4, 1, 10728, 2, 51, 2, 1, 22), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: an50pmpLinkULCIDStatPktDisc.setStatus('current')
an50pmpLinkULCIDStatPktTran = MibTableColumn((1, 3, 6, 1, 4, 1, 10728, 2, 51, 2, 1, 23), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: an50pmpLinkULCIDStatPktTran.setStatus('current')
an50pmpLinkULCIDStatPktRecv = MibTableColumn((1, 3, 6, 1, 4, 1, 10728, 2, 51, 2, 1, 24), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: an50pmpLinkULCIDStatPktRecv.setStatus('current')
an50pmpLinkUpTime = MibTableColumn((1, 3, 6, 1, 4, 1, 10728, 2, 51, 2, 1, 25), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: an50pmpLinkUpTime.setStatus('current')
an50pmpLinkLostCount = MibTableColumn((1, 3, 6, 1, 4, 1, 10728, 2, 51, 2, 1, 26), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: an50pmpLinkLostCount.setStatus('current')
an50pmpCIDSaveConfig = MibScalar((1, 3, 6, 1, 4, 1, 10728, 2, 51, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("doNothing", 1), ("saveConfig", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: an50pmpCIDSaveConfig.setStatus('current')
an50pmpLastModifiedCID = MibScalar((1, 3, 6, 1, 4, 1, 10728, 2, 51, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(4, 1023))).setMaxAccess("readonly")
if mibBuilder.loadTexts: an50pmpLastModifiedCID.setStatus('current')
an50pmpLastMissedSsMacAddress = MibScalar((1, 3, 6, 1, 4, 1, 10728, 2, 51, 5), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: an50pmpLastMissedSsMacAddress.setStatus('current')
an50pmpLastRegisteredSsMacAddress = MibScalar((1, 3, 6, 1, 4, 1, 10728, 2, 51, 6), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: an50pmpLastRegisteredSsMacAddress.setStatus('current')
an50pmpLastSuccessfulID = MibScalar((1, 3, 6, 1, 4, 1, 10728, 2, 51, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(4, 1023))).setMaxAccess("readonly")
if mibBuilder.loadTexts: an50pmpLastSuccessfulID.setStatus('current')
an50pmpLastDeniedSsMacAddress = MibScalar((1, 3, 6, 1, 4, 1, 10728, 2, 51, 8), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: an50pmpLastDeniedSsMacAddress.setStatus('current')
an50pmpGroupTable = MibTable((1, 3, 6, 1, 4, 1, 10728, 2, 51, 9), )
if mibBuilder.loadTexts: an50pmpGroupTable.setStatus('current')
an50pmpGroupEntry = MibTableRow((1, 3, 6, 1, 4, 1, 10728, 2, 51, 9, 1), ).setIndexNames((0, "REDLINE-AN50-PMP-V2-MIB", "an50pmpGroupId"))
if mibBuilder.loadTexts: an50pmpGroupEntry.setStatus('current')
an50pmpGroupId = MibTableColumn((1, 3, 6, 1, 4, 1, 10728, 2, 51, 9, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65536)))
if mibBuilder.loadTexts: an50pmpGroupId.setStatus('current')
an50pmpGroupName = MibTableColumn((1, 3, 6, 1, 4, 1, 10728, 2, 51, 9, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: an50pmpGroupName.setStatus('current')
an50pmpGroupBSPortTagging = MibTableColumn((1, 3, 6, 1, 4, 1, 10728, 2, 51, 9, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("passThrough", 1), ("tagged", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: an50pmpGroupBSPortTagging.setStatus('current')
an50pmpGroupVlanId = MibTableColumn((1, 3, 6, 1, 4, 1, 10728, 2, 51, 9, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65536))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: an50pmpGroupVlanId.setStatus('current')
an50pmpGroupDefaultPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 10728, 2, 51, 9, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65536))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: an50pmpGroupDefaultPriority.setStatus('current')
an50pmpGroupBSPortEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 10728, 2, 51, 9, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("off", 1), ("on", 2))).clone('off')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: an50pmpGroupBSPortEnabled.setStatus('current')
an50pmpGroupQos = MibTableColumn((1, 3, 6, 1, 4, 1, 10728, 2, 51, 9, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65536))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: an50pmpGroupQos.setStatus('current')
an50pmpGroupRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 10728, 2, 51, 9, 1, 8), RowStatus().clone('createAndWait')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: an50pmpGroupRowStatus.setStatus('current')
an50pmpConnectionTable = MibTable((1, 3, 6, 1, 4, 1, 10728, 2, 51, 10), )
if mibBuilder.loadTexts: an50pmpConnectionTable.setStatus('current')
an50pmpConnectionEntry = MibTableRow((1, 3, 6, 1, 4, 1, 10728, 2, 51, 10, 1), ).setIndexNames((0, "REDLINE-AN50-PMP-V2-MIB", "an50pmpConnectionId"))
if mibBuilder.loadTexts: an50pmpConnectionEntry.setStatus('current')
an50pmpConnectionId = MibTableColumn((1, 3, 6, 1, 4, 1, 10728, 2, 51, 10, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65536)))
if mibBuilder.loadTexts: an50pmpConnectionId.setStatus('current')
an50pmpConnectionName = MibTableColumn((1, 3, 6, 1, 4, 1, 10728, 2, 51, 10, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: an50pmpConnectionName.setStatus('current')
an50pmpConnectionPortTagging = MibTableColumn((1, 3, 6, 1, 4, 1, 10728, 2, 51, 10, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("passThrough", 1), ("tagged", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: an50pmpConnectionPortTagging.setStatus('current')
an50pmpConnectionVlanId = MibTableColumn((1, 3, 6, 1, 4, 1, 10728, 2, 51, 10, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65536))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: an50pmpConnectionVlanId.setStatus('current')
an50pmpConnectionDefaultPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 10728, 2, 51, 10, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65536))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: an50pmpConnectionDefaultPriority.setStatus('current')
an50pmpConnectionParentLink = MibTableColumn((1, 3, 6, 1, 4, 1, 10728, 2, 51, 10, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65536))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: an50pmpConnectionParentLink.setStatus('current')
an50pmpConnectionParentGroup = MibTableColumn((1, 3, 6, 1, 4, 1, 10728, 2, 51, 10, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65536))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: an50pmpConnectionParentGroup.setStatus('current')
an50pmpConnectionDLQoS = MibTableColumn((1, 3, 6, 1, 4, 1, 10728, 2, 51, 10, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65536))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: an50pmpConnectionDLQoS.setStatus('current')
an50pmpConnectionULQoS = MibTableColumn((1, 3, 6, 1, 4, 1, 10728, 2, 51, 10, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65536))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: an50pmpConnectionULQoS.setStatus('current')
an50pmpConnectionRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 10728, 2, 51, 10, 1, 10), RowStatus().clone('createAndWait')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: an50pmpConnectionRowStatus.setStatus('current')
an50pmpGroupStatusTable = MibTable((1, 3, 6, 1, 4, 1, 10728, 2, 51, 11), )
if mibBuilder.loadTexts: an50pmpGroupStatusTable.setStatus('current')
an50pmpGroupStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 10728, 2, 51, 11, 1), ).setIndexNames((0, "REDLINE-AN50-PMP-V2-MIB", "an50pmpGroupStatusId"))
if mibBuilder.loadTexts: an50pmpGroupStatusEntry.setStatus('current')
an50pmpGroupStatusId = MibTableColumn((1, 3, 6, 1, 4, 1, 10728, 2, 51, 11, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65536)))
if mibBuilder.loadTexts: an50pmpGroupStatusId.setStatus('current')
an50pmpGroupStatusDLPacketsDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 10728, 2, 51, 11, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: an50pmpGroupStatusDLPacketsDiscards.setStatus('current')
an50pmpGroupStatusDLPacketsTx = MibTableColumn((1, 3, 6, 1, 4, 1, 10728, 2, 51, 11, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: an50pmpGroupStatusDLPacketsTx.setStatus('current')
an50pmpGroupStatusDLPacketsRx = MibTableColumn((1, 3, 6, 1, 4, 1, 10728, 2, 51, 11, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: an50pmpGroupStatusDLPacketsRx.setStatus('current')
an50pmpGroupStatusULPacketsDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 10728, 2, 51, 11, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: an50pmpGroupStatusULPacketsDiscards.setStatus('current')
an50pmpGroupStatusULPacketsTx = MibTableColumn((1, 3, 6, 1, 4, 1, 10728, 2, 51, 11, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: an50pmpGroupStatusULPacketsTx.setStatus('current')
an50pmpGroupStatusULPacketsRx = MibTableColumn((1, 3, 6, 1, 4, 1, 10728, 2, 51, 11, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: an50pmpGroupStatusULPacketsRx.setStatus('current')
an50pmpConnectionStatusTable = MibTable((1, 3, 6, 1, 4, 1, 10728, 2, 51, 12), )
if mibBuilder.loadTexts: an50pmpConnectionStatusTable.setStatus('current')
an50pmpConnectionStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 10728, 2, 51, 12, 1), ).setIndexNames((0, "REDLINE-AN50-PMP-V2-MIB", "an50pmpConnectionStatusId"))
if mibBuilder.loadTexts: an50pmpConnectionStatusEntry.setStatus('current')
an50pmpConnectionStatusId = MibTableColumn((1, 3, 6, 1, 4, 1, 10728, 2, 51, 12, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65536)))
if mibBuilder.loadTexts: an50pmpConnectionStatusId.setStatus('current')
an50pmpConnectionStatusDLPacketsDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 10728, 2, 51, 12, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: an50pmpConnectionStatusDLPacketsDiscards.setStatus('current')
an50pmpConnectionStatusDLPacketsTx = MibTableColumn((1, 3, 6, 1, 4, 1, 10728, 2, 51, 12, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: an50pmpConnectionStatusDLPacketsTx.setStatus('current')
an50pmpConnectionStatusDLPacketsRx = MibTableColumn((1, 3, 6, 1, 4, 1, 10728, 2, 51, 12, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: an50pmpConnectionStatusDLPacketsRx.setStatus('current')
an50pmpConnectionStatusULPacketsDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 10728, 2, 51, 12, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: an50pmpConnectionStatusULPacketsDiscards.setStatus('current')
an50pmpConnectionStatusULPacketsTx = MibTableColumn((1, 3, 6, 1, 4, 1, 10728, 2, 51, 12, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: an50pmpConnectionStatusULPacketsTx.setStatus('current')
an50pmpConnectionStatusULPacketsRx = MibTableColumn((1, 3, 6, 1, 4, 1, 10728, 2, 51, 12, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: an50pmpConnectionStatusULPacketsRx.setStatus('current')
an50PMPObjectGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 10728, 2, 51, 13)).setObjects(("REDLINE-AN50-PMP-V2-MIB", "an50pmpLinkName"), ("REDLINE-AN50-PMP-V2-MIB", "an50pmpLinkPeerMac"), ("REDLINE-AN50-PMP-V2-MIB", "an50pmpLinkMaxDLBurstRate"), ("REDLINE-AN50-PMP-V2-MIB", "an50pmpLinkMaxULBurstRate"), ("REDLINE-AN50-PMP-V2-MIB", "an50pmpLinkEncryptionKey"), ("REDLINE-AN50-PMP-V2-MIB", "an50pmpLinkRowStatus"), ("REDLINE-AN50-PMP-V2-MIB", "an50pmpLinkStatus"), ("REDLINE-AN50-PMP-V2-MIB", "an50pmpLinkStatusCode"), ("REDLINE-AN50-PMP-V2-MIB", "an50pmpLinkRegConn"), ("REDLINE-AN50-PMP-V2-MIB", "an50pmpLinkDLBurstRate"), ("REDLINE-AN50-PMP-V2-MIB", "an50pmpLinkDLRSSI"), ("REDLINE-AN50-PMP-V2-MIB", "an50pmpLinkDLSINADR"), ("REDLINE-AN50-PMP-V2-MIB", "an50pmpLinkDLStatLostFrm"), ("REDLINE-AN50-PMP-V2-MIB", "an50pmpLinkDLStatBlksTot"), ("REDLINE-AN50-PMP-V2-MIB", "an50pmpLinkDLStatBlksRetr"), ("REDLINE-AN50-PMP-V2-MIB", "an50pmpLinkDLStatBlksDisc"), ("REDLINE-AN50-PMP-V2-MIB", "an50pmpLinkDLCIDStatPktDisc"), ("REDLINE-AN50-PMP-V2-MIB", "an50pmpLinkDLCIDStatPktTran"), ("REDLINE-AN50-PMP-V2-MIB", "an50pmpLinkDLCIDStatPktRecv"), ("REDLINE-AN50-PMP-V2-MIB", "an50pmpLinkULBurstRate"), ("REDLINE-AN50-PMP-V2-MIB", "an50pmpLinkULRSSI"), ("REDLINE-AN50-PMP-V2-MIB", "an50pmpLinkULSINADR"), ("REDLINE-AN50-PMP-V2-MIB", "an50pmpLinkULStatLostFrm"), ("REDLINE-AN50-PMP-V2-MIB", "an50pmpLinkULStatBlksTot"), ("REDLINE-AN50-PMP-V2-MIB", "an50pmpLinkULStatBlksRetr"), ("REDLINE-AN50-PMP-V2-MIB", "an50pmpLinkULStatBlksDisc"), ("REDLINE-AN50-PMP-V2-MIB", "an50pmpLinkULCIDStatPktDisc"), ("REDLINE-AN50-PMP-V2-MIB", "an50pmpLinkULCIDStatPktTran"), ("REDLINE-AN50-PMP-V2-MIB", "an50pmpLinkULCIDStatPktRecv"), ("REDLINE-AN50-PMP-V2-MIB", "an50pmpLinkUpTime"), ("REDLINE-AN50-PMP-V2-MIB", "an50pmpLinkLostCount"), ("REDLINE-AN50-PMP-V2-MIB", "an50pmpCIDSaveConfig"), ("REDLINE-AN50-PMP-V2-MIB", "an50pmpLastModifiedCID"), ("REDLINE-AN50-PMP-V2-MIB", "an50pmpLastMissedSsMacAddress"), ("REDLINE-AN50-PMP-V2-MIB", "an50pmpLastRegisteredSsMacAddress"), ("REDLINE-AN50-PMP-V2-MIB", "an50pmpLastSuccessfulID"), ("REDLINE-AN50-PMP-V2-MIB", "an50pmpLastDeniedSsMacAddress"), ("REDLINE-AN50-PMP-V2-MIB", "an50pmpGroupName"), ("REDLINE-AN50-PMP-V2-MIB", "an50pmpGroupBSPortTagging"), ("REDLINE-AN50-PMP-V2-MIB", "an50pmpGroupVlanId"), ("REDLINE-AN50-PMP-V2-MIB", "an50pmpGroupDefaultPriority"), ("REDLINE-AN50-PMP-V2-MIB", "an50pmpGroupBSPortEnabled"), ("REDLINE-AN50-PMP-V2-MIB", "an50pmpGroupQos"), ("REDLINE-AN50-PMP-V2-MIB", "an50pmpGroupRowStatus"), ("REDLINE-AN50-PMP-V2-MIB", "an50pmpConnectionName"), ("REDLINE-AN50-PMP-V2-MIB", "an50pmpConnectionPortTagging"), ("REDLINE-AN50-PMP-V2-MIB", "an50pmpConnectionVlanId"), ("REDLINE-AN50-PMP-V2-MIB", "an50pmpConnectionDefaultPriority"), ("REDLINE-AN50-PMP-V2-MIB", "an50pmpConnectionParentLink"), ("REDLINE-AN50-PMP-V2-MIB", "an50pmpConnectionParentGroup"), ("REDLINE-AN50-PMP-V2-MIB", "an50pmpConnectionDLQoS"), ("REDLINE-AN50-PMP-V2-MIB", "an50pmpConnectionULQoS"), ("REDLINE-AN50-PMP-V2-MIB", "an50pmpConnectionRowStatus"), ("REDLINE-AN50-PMP-V2-MIB", "an50pmpGroupStatusDLPacketsDiscards"), ("REDLINE-AN50-PMP-V2-MIB", "an50pmpGroupStatusDLPacketsTx"), ("REDLINE-AN50-PMP-V2-MIB", "an50pmpGroupStatusDLPacketsRx"), ("REDLINE-AN50-PMP-V2-MIB", "an50pmpGroupStatusULPacketsDiscards"), ("REDLINE-AN50-PMP-V2-MIB", "an50pmpGroupStatusULPacketsTx"), ("REDLINE-AN50-PMP-V2-MIB", "an50pmpGroupStatusULPacketsRx"), ("REDLINE-AN50-PMP-V2-MIB", "an50pmpConnectionStatusDLPacketsDiscards"), ("REDLINE-AN50-PMP-V2-MIB", "an50pmpConnectionStatusDLPacketsTx"), ("REDLINE-AN50-PMP-V2-MIB", "an50pmpConnectionStatusDLPacketsRx"), ("REDLINE-AN50-PMP-V2-MIB", "an50pmpConnectionStatusULPacketsDiscards"), ("REDLINE-AN50-PMP-V2-MIB", "an50pmpConnectionStatusULPacketsTx"), ("REDLINE-AN50-PMP-V2-MIB", "an50pmpConnectionStatusULPacketsRx"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    an50PMPObjectGroup = an50PMPObjectGroup.setStatus('current')
an50PMPObsoleteObjectGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 10728, 2, 51, 14)).setObjects(("REDLINE-AN50-PMP-V2-MIB", "an50pmpLinkGroupId"), ("REDLINE-AN50-PMP-V2-MIB", "an50pmpLinkMaxHost"), ("REDLINE-AN50-PMP-V2-MIB", "an50pmpLinkCIDDLCIR"), ("REDLINE-AN50-PMP-V2-MIB", "an50pmpLinkCIDDLPIR"), ("REDLINE-AN50-PMP-V2-MIB", "an50pmpLinkCIDULCIR"), ("REDLINE-AN50-PMP-V2-MIB", "an50pmpLinkCIDULPIR"), ("REDLINE-AN50-PMP-V2-MIB", "an50pmpLinkDLQoS"), ("REDLINE-AN50-PMP-V2-MIB", "an50pmpLinkULQoS"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    an50PMPObsoleteObjectGroup = an50PMPObsoleteObjectGroup.setStatus('obsolete')
mibBuilder.exportSymbols("REDLINE-AN50-PMP-V2-MIB", an50pmpLinkULQoS=an50pmpLinkULQoS, an50pmpLinkULCIDStatPktRecv=an50pmpLinkULCIDStatPktRecv, an50pmpLinkRowStatus=an50pmpLinkRowStatus, an50pmpLinkDLStatBlksTot=an50pmpLinkDLStatBlksTot, an50pmpConnectionStatusId=an50pmpConnectionStatusId, an50pmpGroupTable=an50pmpGroupTable, an50pmpConnectionId=an50pmpConnectionId, an50pmpLinkLostCount=an50pmpLinkLostCount, an50pmpLastMissedSsMacAddress=an50pmpLastMissedSsMacAddress, an50pmpGroupStatusEntry=an50pmpGroupStatusEntry, an50pmpGroupStatusDLPacketsRx=an50pmpGroupStatusDLPacketsRx, an50pmpConnectionDefaultPriority=an50pmpConnectionDefaultPriority, an50pmpConnectionTable=an50pmpConnectionTable, an50pmpLastModifiedCID=an50pmpLastModifiedCID, an50pmpConnectionStatusULPacketsRx=an50pmpConnectionStatusULPacketsRx, an50PMPObsoleteObjectGroup=an50PMPObsoleteObjectGroup, an50pmpConnectionStatusDLPacketsDiscards=an50pmpConnectionStatusDLPacketsDiscards, an50pmpLinkDLRSSI=an50pmpLinkDLRSSI, an50pmpGroupEntry=an50pmpGroupEntry, an50pmpConnectionStatusULPacketsDiscards=an50pmpConnectionStatusULPacketsDiscards, an50pmpGroupStatusULPacketsDiscards=an50pmpGroupStatusULPacketsDiscards, an50pmpGroupQos=an50pmpGroupQos, an50pmpConnectionName=an50pmpConnectionName, an50pmpConnectionPortTagging=an50pmpConnectionPortTagging, redlineAN50PMPV2=redlineAN50PMPV2, an50pmpLinkCIDULCIR=an50pmpLinkCIDULCIR, an50pmpLinkDLCIDStatPktRecv=an50pmpLinkDLCIDStatPktRecv, an50pmpLinkMaxULBurstRate=an50pmpLinkMaxULBurstRate, an50pmpGroupBSPortEnabled=an50pmpGroupBSPortEnabled, an50pmpLinkName=an50pmpLinkName, an50pmpGroupRowStatus=an50pmpGroupRowStatus, an50pmpConnectionEntry=an50pmpConnectionEntry, an50pmpLinkCIDDLPIR=an50pmpLinkCIDDLPIR, an50pmpCIDSaveConfig=an50pmpCIDSaveConfig, an50pmpLinkDLStatLostFrm=an50pmpLinkDLStatLostFrm, an50pmpConnectionDLQoS=an50pmpConnectionDLQoS, an50pmpConnectionStatusULPacketsTx=an50pmpConnectionStatusULPacketsTx, an50pmpLinkEntry=an50pmpLinkEntry, an50pmpGroupStatusTable=an50pmpGroupStatusTable, an50pmpLinkPeerMac=an50pmpLinkPeerMac, an50pmpLinkID=an50pmpLinkID, an50pmpConnectionStatusDLPacketsTx=an50pmpConnectionStatusDLPacketsTx, an50pmpLinkDLCIDStatPktDisc=an50pmpLinkDLCIDStatPktDisc, an50pmpLinkStatusID=an50pmpLinkStatusID, an50pmpLinkMaxDLBurstRate=an50pmpLinkMaxDLBurstRate, an50pmpConnectionRowStatus=an50pmpConnectionRowStatus, an50pmpGroupStatusULPacketsTx=an50pmpGroupStatusULPacketsTx, an50pmpLinkULSINADR=an50pmpLinkULSINADR, an50pmpLinkULBurstRate=an50pmpLinkULBurstRate, an50pmpLinkULCIDStatPktTran=an50pmpLinkULCIDStatPktTran, an50pmpGroupVlanId=an50pmpGroupVlanId, an50pmpLinkTable=an50pmpLinkTable, PYSNMP_MODULE_ID=redlineAN50PMPV2, an50pmpLinkDLSINADR=an50pmpLinkDLSINADR, an50pmpConnectionParentLink=an50pmpConnectionParentLink, an50pmpConnectionStatusTable=an50pmpConnectionStatusTable, an50pmpLinkStatus=an50pmpLinkStatus, an50pmpLinkDLStatBlksRetr=an50pmpLinkDLStatBlksRetr, an50pmpLastSuccessfulID=an50pmpLastSuccessfulID, an50pmpGroupStatusDLPacketsDiscards=an50pmpGroupStatusDLPacketsDiscards, an50pmpLinkDLCIDStatPktTran=an50pmpLinkDLCIDStatPktTran, an50pmpConnectionParentGroup=an50pmpConnectionParentGroup, an50pmpGroupStatusULPacketsRx=an50pmpGroupStatusULPacketsRx, an50pmpLinkULStatBlksRetr=an50pmpLinkULStatBlksRetr, an50pmpConnectionStatusDLPacketsRx=an50pmpConnectionStatusDLPacketsRx, an50pmpLinkDLQoS=an50pmpLinkDLQoS, an50pmpLinkStatusEntry=an50pmpLinkStatusEntry, an50pmpLinkCIDULPIR=an50pmpLinkCIDULPIR, an50pmpLinkDLStatBlksDisc=an50pmpLinkDLStatBlksDisc, an50pmpLinkUpTime=an50pmpLinkUpTime, an50pmpLinkULStatLostFrm=an50pmpLinkULStatLostFrm, an50pmpLinkMaxHost=an50pmpLinkMaxHost, an50pmpConnectionStatusEntry=an50pmpConnectionStatusEntry, an50pmpConnectionVlanId=an50pmpConnectionVlanId, an50pmpLinkRegConn=an50pmpLinkRegConn, an50pmpLinkEncryptionKey=an50pmpLinkEncryptionKey, an50pmpLinkDLBurstRate=an50pmpLinkDLBurstRate, an50pmpLinkULCIDStatPktDisc=an50pmpLinkULCIDStatPktDisc, an50pmpGroupStatusId=an50pmpGroupStatusId, an50PMPObjectGroup=an50PMPObjectGroup, an50pmpLastDeniedSsMacAddress=an50pmpLastDeniedSsMacAddress, an50pmpGroupStatusDLPacketsTx=an50pmpGroupStatusDLPacketsTx, an50pmpLinkULStatBlksTot=an50pmpLinkULStatBlksTot, an50pmpLinkCIDDLCIR=an50pmpLinkCIDDLCIR, an50pmpLinkULStatBlksDisc=an50pmpLinkULStatBlksDisc, an50pmpGroupBSPortTagging=an50pmpGroupBSPortTagging, an50pmpLinkStatusTable=an50pmpLinkStatusTable, an50pmpGroupName=an50pmpGroupName, an50pmpLinkGroupId=an50pmpLinkGroupId, an50pmpConnectionULQoS=an50pmpConnectionULQoS, an50pmpLinkStatusCode=an50pmpLinkStatusCode, an50pmpGroupId=an50pmpGroupId, an50pmpGroupDefaultPriority=an50pmpGroupDefaultPriority, an50pmpLastRegisteredSsMacAddress=an50pmpLastRegisteredSsMacAddress, an50pmpLinkULRSSI=an50pmpLinkULRSSI)
