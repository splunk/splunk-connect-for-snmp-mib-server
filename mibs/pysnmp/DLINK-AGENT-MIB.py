#
# PySNMP MIB module DLINK-AGENT-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/DLINK-AGENT-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 18:34:44 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ConstraintsIntersection, ValueRangeConstraint, ValueSizeConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ConstraintsIntersection", "ValueRangeConstraint", "ValueSizeConstraint", "ConstraintsUnion")
AgentNotifyLevel, dlink_common_mgmt = mibBuilder.importSymbols("DLINK-ID-REC-MIB", "AgentNotifyLevel", "dlink-common-mgmt")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
Bits, MibScalar, MibTable, MibTableRow, MibTableColumn, IpAddress, Counter32, TimeTicks, Counter64, NotificationType, Integer32, Unsigned32, MibIdentifier, ModuleIdentity, Gauge32, iso, ObjectIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "Bits", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "IpAddress", "Counter32", "TimeTicks", "Counter64", "NotificationType", "Integer32", "Unsigned32", "MibIdentifier", "ModuleIdentity", "Gauge32", "iso", "ObjectIdentity")
DisplayString, TextualConvention, MacAddress, RowStatus, TruthValue = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention", "MacAddress", "RowStatus", "TruthValue")
agentGeneralMgmt = ModuleIdentity((1, 3, 6, 1, 4, 1, 171, 12, 1))
if mibBuilder.loadTexts: agentGeneralMgmt.setLastUpdated('0801290000Z')
if mibBuilder.loadTexts: agentGeneralMgmt.setOrganization('D-Link, Inc.')
agentBasicInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 12, 1, 1))
agentMgmtProtocolCapability = MibScalar((1, 3, 6, 1, 4, 1, 171, 12, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("other", 1), ("snmp-ip", 2), ("snmp-ipx", 3), ("snmp-ip-ipx", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentMgmtProtocolCapability.setStatus('current')
agentMibCapabilityTable = MibTable((1, 3, 6, 1, 4, 1, 171, 12, 1, 1, 2), )
if mibBuilder.loadTexts: agentMibCapabilityTable.setStatus('current')
agentMibCapabilityEntry = MibTableRow((1, 3, 6, 1, 4, 1, 171, 12, 1, 1, 2, 1), ).setIndexNames((0, "DLINK-AGENT-MIB", "agentMibCapabilityIndex"))
if mibBuilder.loadTexts: agentMibCapabilityEntry.setStatus('current')
agentMibCapabilityIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 1, 1, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentMibCapabilityIndex.setStatus('current')
agentMibCapabilityDescr = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 1, 1, 2, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 35))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentMibCapabilityDescr.setStatus('current')
agentMibCapabilityVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 1, 1, 2, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentMibCapabilityVersion.setStatus('current')
agentMibCapabilityType = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 1, 1, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("other", 1), ("standard", 2), ("proprietary", 3), ("experiment", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentMibCapabilityType.setStatus('current')
agentStatusConsoleInUse = MibScalar((1, 3, 6, 1, 4, 1, 171, 12, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("in-use", 2), ("not-in-use", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentStatusConsoleInUse.setStatus('current')
agentStatusSaveCfg = MibScalar((1, 3, 6, 1, 4, 1, 171, 12, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("other", 1), ("proceeding", 2), ("completed", 3), ("failed", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentStatusSaveCfg.setStatus('current')
agentStatusFileTransfer = MibScalar((1, 3, 6, 1, 4, 1, 171, 12, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10))).clone(namedValues=NamedValues(("other", 1), ("in-process", 2), ("invalid-file", 3), ("violation", 4), ("file-not-found", 5), ("disk-full", 6), ("complete", 7), ("time-out", 8), ("not-format", 9), ("memory-full", 10)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentStatusFileTransfer.setStatus('current')
agentCPUutilization = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 12, 1, 1, 6))
agentCPUutilizationIn5sec = MibScalar((1, 3, 6, 1, 4, 1, 171, 12, 1, 1, 6, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentCPUutilizationIn5sec.setStatus('current')
agentCPUutilizationIn1min = MibScalar((1, 3, 6, 1, 4, 1, 171, 12, 1, 1, 6, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentCPUutilizationIn1min.setStatus('current')
agentCPUutilizationIn5min = MibScalar((1, 3, 6, 1, 4, 1, 171, 12, 1, 1, 6, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentCPUutilizationIn5min.setStatus('current')
agentPORTutilizationTable = MibTable((1, 3, 6, 1, 4, 1, 171, 12, 1, 1, 7), )
if mibBuilder.loadTexts: agentPORTutilizationTable.setStatus('current')
agentPORTutilizationEntry = MibTableRow((1, 3, 6, 1, 4, 1, 171, 12, 1, 1, 7, 1), ).setIndexNames((0, "DLINK-AGENT-MIB", "agentPORTutilizationProtIndex"))
if mibBuilder.loadTexts: agentPORTutilizationEntry.setStatus('current')
agentPORTutilizationProtIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 1, 1, 7, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentPORTutilizationProtIndex.setStatus('current')
agentPORTutilizationTX = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 1, 1, 7, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentPORTutilizationTX.setStatus('current')
agentPORTutilizationRX = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 1, 1, 7, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentPORTutilizationRX.setStatus('current')
agentPORTutilizationUtil = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 1, 1, 7, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setUnits('%').setMaxAccess("readonly")
if mibBuilder.loadTexts: agentPORTutilizationUtil.setStatus('current')
agentDRAMutilizationTable = MibTable((1, 3, 6, 1, 4, 1, 171, 12, 1, 1, 9), )
if mibBuilder.loadTexts: agentDRAMutilizationTable.setStatus('current')
agentDRAMutilizationEntry = MibTableRow((1, 3, 6, 1, 4, 1, 171, 12, 1, 1, 9, 1), ).setIndexNames((0, "DLINK-AGENT-MIB", "agentDRAMutilizationUnitID"))
if mibBuilder.loadTexts: agentDRAMutilizationEntry.setStatus('current')
agentDRAMutilizationUnitID = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 1, 1, 9, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentDRAMutilizationUnitID.setStatus('current')
agentDRAMutilizationTotalDRAM = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 1, 1, 9, 1, 2), Integer32()).setUnits('KB').setMaxAccess("readonly")
if mibBuilder.loadTexts: agentDRAMutilizationTotalDRAM.setStatus('current')
agentDRAMutilizationUsedDRAM = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 1, 1, 9, 1, 3), Integer32()).setUnits('KB').setMaxAccess("readonly")
if mibBuilder.loadTexts: agentDRAMutilizationUsedDRAM.setStatus('current')
agentDRAMutilization = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 1, 1, 9, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentDRAMutilization.setStatus('current')
agentStatusReset = MibScalar((1, 3, 6, 1, 4, 1, 171, 12, 1, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("proceeding", 1), ("completed", 2), ("failed", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentStatusReset.setStatus('current')
agentSerialNumber = MibScalar((1, 3, 6, 1, 4, 1, 171, 12, 1, 1, 12), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentSerialNumber.setStatus('current')
agentBasicConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 12, 1, 2))
agentBscSwFileTable = MibTable((1, 3, 6, 1, 4, 1, 171, 12, 1, 2, 1), )
if mibBuilder.loadTexts: agentBscSwFileTable.setStatus('current')
agentBscSwFileEntry = MibTableRow((1, 3, 6, 1, 4, 1, 171, 12, 1, 2, 1, 1), ).setIndexNames((0, "DLINK-AGENT-MIB", "agentBscSwFileIndex"))
if mibBuilder.loadTexts: agentBscSwFileEntry.setStatus('current')
agentBscSwFileIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 1, 2, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentBscSwFileIndex.setStatus('current')
agentBscSwFileDscr = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 1, 2, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentBscSwFileDscr.setStatus('current')
agentBscSwFileAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 1, 2, 1, 1, 3), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentBscSwFileAddr.setStatus('current')
agentBscSwFileTransferType = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 1, 2, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("network-load", 2), ("out-of-band-load", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentBscSwFileTransferType.setStatus('current')
agentBscSwFile = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 1, 2, 1, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentBscSwFile.setStatus('current')
agentBscSwFileLocateId = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 1, 2, 1, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentBscSwFileLocateId.setStatus('current')
agentBscSwFileLoadType = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 1, 2, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("upload", 2), ("download", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentBscSwFileLoadType.setStatus('current')
agentBscSwFileCtrl = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 1, 2, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("other", 1), ("inactive", 2), ("start", 3), ("delete", 4), ("config-as-bootup-fw", 5)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentBscSwFileCtrl.setStatus('current')
agentBscSwFileBIncrement = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 1, 2, 1, 1, 9), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentBscSwFileBIncrement.setStatus('current')
agentMultiImageCtrlID = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 1, 2, 1, 1, 10), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentMultiImageCtrlID.setStatus('current')
agentFileTransfer = MibScalar((1, 3, 6, 1, 4, 1, 171, 12, 1, 2, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("other", 1), ("start", 2), ("start-and-reset", 3), ("noaction", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentFileTransfer.setStatus('obsolete')
agentSystemReset = MibScalar((1, 3, 6, 1, 4, 1, 171, 12, 1, 2, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("other", 1), ("cold-start", 2), ("warm-start", 3), ("no-reset", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentSystemReset.setStatus('deprecated')
agentRs232PortConfig = MibScalar((1, 3, 6, 1, 4, 1, 171, 12, 1, 2, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("other", 1), ("console", 2), ("out-of-band", 3), ("notAvail", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentRs232PortConfig.setStatus('current')
agentOutOfBandBaudRateConfig = MibScalar((1, 3, 6, 1, 4, 1, 171, 12, 1, 2, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("other", 1), ("baudRate-2400", 2), ("baudRate-9600", 3), ("baudRate-19200", 4), ("baudRate-38400", 5), ("baudRate-115200", 6)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentOutOfBandBaudRateConfig.setStatus('obsolete')
agentSaveCfg = MibScalar((1, 3, 6, 1, 4, 1, 171, 12, 1, 2, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("idle", 2), ("set", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentSaveCfg.setStatus('current')
swMultiImageInfoTable = MibTable((1, 3, 6, 1, 4, 1, 171, 12, 1, 2, 7), )
if mibBuilder.loadTexts: swMultiImageInfoTable.setStatus('current')
swMultiImageInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 171, 12, 1, 2, 7, 1), ).setIndexNames((0, "DLINK-AGENT-MIB", "swMultiImageInfoID"))
if mibBuilder.loadTexts: swMultiImageInfoEntry.setStatus('current')
swMultiImageInfoID = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 1, 2, 7, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: swMultiImageInfoID.setStatus('current')
swMultiImageVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 1, 2, 7, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: swMultiImageVersion.setStatus('current')
swMultiImageSize = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 1, 2, 7, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: swMultiImageSize.setStatus('current')
swMultiImageUpdateTime = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 1, 2, 7, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: swMultiImageUpdateTime.setStatus('current')
swMultiImageFrom = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 1, 2, 7, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: swMultiImageFrom.setStatus('current')
swMultiImageSendUser = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 1, 2, 7, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: swMultiImageSendUser.setStatus('current')
agentTrustHostMgmt = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 12, 1, 2, 10))
agentTrustHostTable = MibTable((1, 3, 6, 1, 4, 1, 171, 12, 1, 2, 10, 1), )
if mibBuilder.loadTexts: agentTrustHostTable.setStatus('current')
agentTrustHostEntry = MibTableRow((1, 3, 6, 1, 4, 1, 171, 12, 1, 2, 10, 1, 1), ).setIndexNames((0, "DLINK-AGENT-MIB", "agentTrustHostIndex"))
if mibBuilder.loadTexts: agentTrustHostEntry.setStatus('current')
agentTrustHostIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 1, 2, 10, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 10))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentTrustHostIndex.setStatus('current')
agentTrustHostIPAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 1, 2, 10, 1, 1, 2), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: agentTrustHostIPAddress.setStatus('current')
agentTrustHostRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 1, 2, 10, 1, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: agentTrustHostRowStatus.setStatus('current')
agentTrustHostIPSubnetMask = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 1, 2, 10, 1, 1, 4), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: agentTrustHostIPSubnetMask.setStatus('current')
agentTrustHostForSNMP = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 1, 2, 10, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: agentTrustHostForSNMP.setStatus('current')
agentTrustHostForTELNET = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 1, 2, 10, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: agentTrustHostForTELNET.setStatus('current')
agentTrustHostForSSH = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 1, 2, 10, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: agentTrustHostForSSH.setStatus('current')
agentTrustHostForHTTP = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 1, 2, 10, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: agentTrustHostForHTTP.setStatus('current')
agentTrustHostForHTTPS = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 1, 2, 10, 1, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: agentTrustHostForHTTPS.setStatus('current')
agentFDBMgmt = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 12, 1, 2, 11))
agentFDBClearAllState = MibScalar((1, 3, 6, 1, 4, 1, 171, 12, 1, 2, 11, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("other", 1), ("start", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentFDBClearAllState.setStatus('current')
agentARPMgmt = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 12, 1, 2, 12))
agentARPClearAllState = MibScalar((1, 3, 6, 1, 4, 1, 171, 12, 1, 2, 12, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("other", 1), ("start", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentARPClearAllState.setStatus('current')
agentGratuitousARPMgmt = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 12, 1, 2, 12, 2))
agentGratuitousARPSendIpifStatusUpState = MibScalar((1, 3, 6, 1, 4, 1, 171, 12, 1, 2, 12, 2, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentGratuitousARPSendIpifStatusUpState.setStatus('current')
agentGratuitousARPSendDupIpDetectedState = MibScalar((1, 3, 6, 1, 4, 1, 171, 12, 1, 2, 12, 2, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentGratuitousARPSendDupIpDetectedState.setStatus('current')
agentGratuitousARPLearningState = MibScalar((1, 3, 6, 1, 4, 1, 171, 12, 1, 2, 12, 2, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentGratuitousARPLearningState.setStatus('current')
agentGratuitousARPTable = MibTable((1, 3, 6, 1, 4, 1, 171, 12, 1, 2, 12, 2, 4), )
if mibBuilder.loadTexts: agentGratuitousARPTable.setStatus('current')
agentGratuitousARPEntry = MibTableRow((1, 3, 6, 1, 4, 1, 171, 12, 1, 2, 12, 2, 4, 1), ).setIndexNames((0, "DLINK-AGENT-MIB", "agentGratuitousARPInterfaceName"))
if mibBuilder.loadTexts: agentGratuitousARPEntry.setStatus('current')
agentGratuitousARPInterfaceName = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 1, 2, 12, 2, 4, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentGratuitousARPInterfaceName.setStatus('current')
agentGratuitousARPPeriodicalSendInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 1, 2, 12, 2, 4, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentGratuitousARPPeriodicalSendInterval.setStatus('current')
agentGratuitousARPTrapState = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 1, 2, 12, 2, 4, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentGratuitousARPTrapState.setStatus('current')
agentGratuitousARPLogState = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 1, 2, 12, 2, 4, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentGratuitousARPLogState.setStatus('current')
agentReboot = MibScalar((1, 3, 6, 1, 4, 1, 171, 12, 1, 2, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("none", 1), ("start", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentReboot.setStatus('current')
agentReset = MibScalar((1, 3, 6, 1, 4, 1, 171, 12, 1, 2, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("none", 1), ("config", 2), ("system", 3), ("reset", 4), ("system-exclude-vlan", 5), ("system-exclude-ip", 6), ("system-exclude-vlan-ip", 7)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentReset.setStatus('current')
agentSnmpTrapState = MibScalar((1, 3, 6, 1, 4, 1, 171, 12, 1, 2, 22), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentSnmpTrapState.setStatus('current')
agentTrustHostDelAllState = MibScalar((1, 3, 6, 1, 4, 1, 171, 12, 1, 2, 10, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("none", 1), ("start", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentTrustHostDelAllState.setStatus('current')
agentIpProtoConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 12, 1, 3))
agentIpNumOfIf = MibScalar((1, 3, 6, 1, 4, 1, 171, 12, 1, 3, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentIpNumOfIf.setStatus('current')
agentIpTftpServerAddr = MibScalar((1, 3, 6, 1, 4, 1, 171, 12, 1, 3, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentIpTftpServerAddr.setStatus('obsolete')
agentIpGetIpFrom = MibScalar((1, 3, 6, 1, 4, 1, 171, 12, 1, 3, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("other", 1), ("disabled", 2), ("bootp", 3), ("dhcp", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentIpGetIpFrom.setStatus('current')
agentIpAutoconfig = MibScalar((1, 3, 6, 1, 4, 1, 171, 12, 1, 3, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentIpAutoconfig.setStatus('current')
agentNotify = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 12, 1, 4))
agentNotifMgmt = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 12, 1, 4, 1))
agentNotifFirmware = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 12, 1, 4, 2))
agentNotifyPrefix = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 12, 1, 4, 2, 0))
systemTrapsSeverity = MibScalar((1, 3, 6, 1, 4, 1, 171, 12, 1, 4, 1, 1), AgentNotifyLevel()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: systemTrapsSeverity.setStatus('current')
systemLogsSeverity = MibScalar((1, 3, 6, 1, 4, 1, 171, 12, 1, 4, 1, 2), AgentNotifyLevel()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: systemLogsSeverity.setStatus('current')
agentGratuitousARPTrap = NotificationType((1, 3, 6, 1, 4, 1, 171, 12, 1, 4, 2, 0, 5)).setObjects(("DLINK-AGENT-MIB", "agentGratuitousARPIpAddr"), ("DLINK-AGENT-MIB", "agentGratuitousARPMacAddr"), ("DLINK-AGENT-MIB", "agentGratuitousARPPortNumber"), ("DLINK-AGENT-MIB", "agentGratuitousARPInterfaceName"))
if mibBuilder.loadTexts: agentGratuitousARPTrap.setStatus('current')
notificationBidings = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 12, 1, 4, 2, 1))
agentGratuitousARPIpAddr = MibScalar((1, 3, 6, 1, 4, 1, 171, 12, 1, 4, 2, 1, 3), IpAddress()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: agentGratuitousARPIpAddr.setStatus('current')
agentGratuitousARPMacAddr = MibScalar((1, 3, 6, 1, 4, 1, 171, 12, 1, 4, 2, 1, 4), MacAddress()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: agentGratuitousARPMacAddr.setStatus('current')
agentGratuitousARPPortNumber = MibScalar((1, 3, 6, 1, 4, 1, 171, 12, 1, 4, 2, 1, 5), DisplayString()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: agentGratuitousARPPortNumber.setStatus('current')
mibBuilder.exportSymbols("DLINK-AGENT-MIB", agentNotifyPrefix=agentNotifyPrefix, agentNotifMgmt=agentNotifMgmt, agentStatusFileTransfer=agentStatusFileTransfer, agentBscSwFileAddr=agentBscSwFileAddr, swMultiImageVersion=swMultiImageVersion, agentTrustHostIndex=agentTrustHostIndex, agentSnmpTrapState=agentSnmpTrapState, systemTrapsSeverity=systemTrapsSeverity, agentCPUutilizationIn5min=agentCPUutilizationIn5min, systemLogsSeverity=systemLogsSeverity, agentTrustHostForTELNET=agentTrustHostForTELNET, agentGratuitousARPPeriodicalSendInterval=agentGratuitousARPPeriodicalSendInterval, agentMibCapabilityType=agentMibCapabilityType, agentCPUutilizationIn1min=agentCPUutilizationIn1min, agentRs232PortConfig=agentRs232PortConfig, agentGratuitousARPTable=agentGratuitousARPTable, agentDRAMutilizationUnitID=agentDRAMutilizationUnitID, agentIpTftpServerAddr=agentIpTftpServerAddr, agentBasicConfig=agentBasicConfig, swMultiImageSendUser=swMultiImageSendUser, agentTrustHostRowStatus=agentTrustHostRowStatus, agentBscSwFileTable=agentBscSwFileTable, agentGratuitousARPIpAddr=agentGratuitousARPIpAddr, agentGratuitousARPTrap=agentGratuitousARPTrap, agentSystemReset=agentSystemReset, agentGratuitousARPSendDupIpDetectedState=agentGratuitousARPSendDupIpDetectedState, agentStatusSaveCfg=agentStatusSaveCfg, agentDRAMutilization=agentDRAMutilization, agentTrustHostTable=agentTrustHostTable, agentPORTutilizationTable=agentPORTutilizationTable, agentStatusReset=agentStatusReset, agentBscSwFileBIncrement=agentBscSwFileBIncrement, agentMibCapabilityIndex=agentMibCapabilityIndex, agentIpProtoConfig=agentIpProtoConfig, agentNotifFirmware=agentNotifFirmware, agentIpNumOfIf=agentIpNumOfIf, notificationBidings=notificationBidings, swMultiImageInfoEntry=swMultiImageInfoEntry, swMultiImageInfoID=swMultiImageInfoID, agentPORTutilizationTX=agentPORTutilizationTX, agentBscSwFileEntry=agentBscSwFileEntry, swMultiImageInfoTable=swMultiImageInfoTable, agentTrustHostMgmt=agentTrustHostMgmt, agentTrustHostForHTTP=agentTrustHostForHTTP, agentGratuitousARPEntry=agentGratuitousARPEntry, agentCPUutilizationIn5sec=agentCPUutilizationIn5sec, swMultiImageFrom=swMultiImageFrom, agentMgmtProtocolCapability=agentMgmtProtocolCapability, agentTrustHostDelAllState=agentTrustHostDelAllState, agentTrustHostForSNMP=agentTrustHostForSNMP, agentDRAMutilizationEntry=agentDRAMutilizationEntry, agentGratuitousARPLearningState=agentGratuitousARPLearningState, agentDRAMutilizationUsedDRAM=agentDRAMutilizationUsedDRAM, agentSaveCfg=agentSaveCfg, agentARPClearAllState=agentARPClearAllState, agentTrustHostIPSubnetMask=agentTrustHostIPSubnetMask, agentGratuitousARPTrapState=agentGratuitousARPTrapState, agentGeneralMgmt=agentGeneralMgmt, agentPORTutilizationProtIndex=agentPORTutilizationProtIndex, agentDRAMutilizationTable=agentDRAMutilizationTable, agentReboot=agentReboot, agentGratuitousARPPortNumber=agentGratuitousARPPortNumber, agentGratuitousARPSendIpifStatusUpState=agentGratuitousARPSendIpifStatusUpState, agentBscSwFileCtrl=agentBscSwFileCtrl, agentReset=agentReset, agentTrustHostIPAddress=agentTrustHostIPAddress, agentMibCapabilityEntry=agentMibCapabilityEntry, agentSerialNumber=agentSerialNumber, agentBscSwFileTransferType=agentBscSwFileTransferType, agentTrustHostForHTTPS=agentTrustHostForHTTPS, agentBscSwFileDscr=agentBscSwFileDscr, agentOutOfBandBaudRateConfig=agentOutOfBandBaudRateConfig, agentBscSwFile=agentBscSwFile, agentFDBClearAllState=agentFDBClearAllState, agentDRAMutilizationTotalDRAM=agentDRAMutilizationTotalDRAM, agentMibCapabilityDescr=agentMibCapabilityDescr, agentPORTutilizationEntry=agentPORTutilizationEntry, agentTrustHostForSSH=agentTrustHostForSSH, agentPORTutilizationRX=agentPORTutilizationRX, PYSNMP_MODULE_ID=agentGeneralMgmt, agentBasicInfo=agentBasicInfo, agentGratuitousARPMgmt=agentGratuitousARPMgmt, agentBscSwFileLocateId=agentBscSwFileLocateId, agentGratuitousARPInterfaceName=agentGratuitousARPInterfaceName, agentFDBMgmt=agentFDBMgmt, agentIpGetIpFrom=agentIpGetIpFrom, agentMibCapabilityVersion=agentMibCapabilityVersion, agentBscSwFileLoadType=agentBscSwFileLoadType, agentCPUutilization=agentCPUutilization, agentPORTutilizationUtil=agentPORTutilizationUtil, agentTrustHostEntry=agentTrustHostEntry, swMultiImageUpdateTime=swMultiImageUpdateTime, swMultiImageSize=swMultiImageSize, agentStatusConsoleInUse=agentStatusConsoleInUse, agentMultiImageCtrlID=agentMultiImageCtrlID, agentIpAutoconfig=agentIpAutoconfig, agentFileTransfer=agentFileTransfer, agentBscSwFileIndex=agentBscSwFileIndex, agentGratuitousARPLogState=agentGratuitousARPLogState, agentGratuitousARPMacAddr=agentGratuitousARPMacAddr, agentNotify=agentNotify, agentARPMgmt=agentARPMgmt, agentMibCapabilityTable=agentMibCapabilityTable)
