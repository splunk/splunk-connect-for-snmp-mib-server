#
# PySNMP MIB module RDN-PROCESS-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/RDN-PROCESS-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 20:46:29 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ValueRangeConstraint, ValueSizeConstraint, ConstraintsUnion, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ValueRangeConstraint", "ValueSizeConstraint", "ConstraintsUnion", "SingleValueConstraint")
rdnChassis, = mibBuilder.importSymbols("RDN-CHASSIS-MIB", "rdnChassis")
NotificationGroup, ObjectGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ObjectGroup", "ModuleCompliance")
Bits, ModuleIdentity, Integer32, Unsigned32, iso, ObjectIdentity, Counter64, Gauge32, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter32, MibIdentifier, NotificationType, TimeTicks, IpAddress = mibBuilder.importSymbols("SNMPv2-SMI", "Bits", "ModuleIdentity", "Integer32", "Unsigned32", "iso", "ObjectIdentity", "Counter64", "Gauge32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter32", "MibIdentifier", "NotificationType", "TimeTicks", "IpAddress")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
rdnProcessMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 4981, 1, 20))
rdnProcessMIB.setRevisions(('2008-08-08 00:00', '2003-11-05 00:00', '2003-03-18 00:00',))
if mibBuilder.loadTexts: rdnProcessMIB.setLastUpdated('200808080000Z')
if mibBuilder.loadTexts: rdnProcessMIB.setOrganization('Motorola, Inc.')
class RdnTaskPriorityType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))
    namedValues = NamedValues(("critical", 1), ("high", 2), ("normal", 3), ("low", 4), ("notAssigned", 5))

rdnProcessMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 4981, 1, 20, 1))
rdnCPUTotalTable = MibTable((1, 3, 6, 1, 4, 1, 4981, 1, 20, 1, 1), )
if mibBuilder.loadTexts: rdnCPUTotalTable.setStatus('current')
rdnCPUTotalEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4981, 1, 20, 1, 1, 1), ).setIndexNames((0, "RDN-PROCESS-MIB", "rdnSlotSnmpIndex"), (0, "RDN-PROCESS-MIB", "rdnCPUIndex"))
if mibBuilder.loadTexts: rdnCPUTotalEntry.setStatus('current')
rdnSlotSnmpIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4981, 1, 20, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16)))
if mibBuilder.loadTexts: rdnSlotSnmpIndex.setStatus('current')
rdnCPUIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4981, 1, 20, 1, 1, 1, 2), Unsigned32())
if mibBuilder.loadTexts: rdnCPUIndex.setStatus('current')
rdnCPUType = MibTableColumn((1, 3, 6, 1, 4, 1, 4981, 1, 20, 1, 1, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rdnCPUType.setStatus('current')
rdnTotalAllocatableMem = MibTableColumn((1, 3, 6, 1, 4, 1, 4981, 1, 20, 1, 1, 1, 4), Unsigned32()).setUnits('byte').setMaxAccess("readonly")
if mibBuilder.loadTexts: rdnTotalAllocatableMem.setStatus('current')
rdnTotalMemAllocated = MibTableColumn((1, 3, 6, 1, 4, 1, 4981, 1, 20, 1, 1, 1, 5), Unsigned32()).setUnits('byte').setMaxAccess("readonly")
if mibBuilder.loadTexts: rdnTotalMemAllocated.setStatus('current')
rdnTotalFreeMem = MibTableColumn((1, 3, 6, 1, 4, 1, 4981, 1, 20, 1, 1, 1, 6), Unsigned32()).setUnits('byte').setMaxAccess("readonly")
if mibBuilder.loadTexts: rdnTotalFreeMem.setStatus('current')
rdnTotalCPUUtilization5Sec = MibTableColumn((1, 3, 6, 1, 4, 1, 4981, 1, 20, 1, 1, 1, 7), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setUnits('1/100').setMaxAccess("readonly")
if mibBuilder.loadTexts: rdnTotalCPUUtilization5Sec.setStatus('current')
rdnTotalCPUUtilization1Min = MibTableColumn((1, 3, 6, 1, 4, 1, 4981, 1, 20, 1, 1, 1, 8), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setUnits('1/100').setMaxAccess("readonly")
if mibBuilder.loadTexts: rdnTotalCPUUtilization1Min.setStatus('current')
rdnTotalCPUUtilization5Min = MibTableColumn((1, 3, 6, 1, 4, 1, 4981, 1, 20, 1, 1, 1, 9), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setUnits('1/100').setMaxAccess("readonly")
if mibBuilder.loadTexts: rdnTotalCPUUtilization5Min.setStatus('current')
rdnTaskTable = MibTable((1, 3, 6, 1, 4, 1, 4981, 1, 20, 1, 2), )
if mibBuilder.loadTexts: rdnTaskTable.setStatus('current')
rdnTaskEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4981, 1, 20, 1, 2, 1), ).setIndexNames((0, "RDN-PROCESS-MIB", "rdnSlotSnmpIndex"), (0, "RDN-PROCESS-MIB", "rdnCPUIndex"), (0, "RDN-PROCESS-MIB", "rdnTaskId"))
if mibBuilder.loadTexts: rdnTaskEntry.setStatus('current')
rdnTaskId = MibTableColumn((1, 3, 6, 1, 4, 1, 4981, 1, 20, 1, 2, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rdnTaskId.setStatus('current')
rdnTaskName = MibTableColumn((1, 3, 6, 1, 4, 1, 4981, 1, 20, 1, 2, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rdnTaskName.setStatus('current')
rdnTaskPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 4981, 1, 20, 1, 2, 1, 3), RdnTaskPriorityType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rdnTaskPriority.setStatus('current')
rdnTaskMemAllocated = MibTableColumn((1, 3, 6, 1, 4, 1, 4981, 1, 20, 1, 2, 1, 4), Unsigned32()).setUnits('byte').setMaxAccess("readonly")
if mibBuilder.loadTexts: rdnTaskMemAllocated.setStatus('current')
rdnTaskUtil5Sec = MibTableColumn((1, 3, 6, 1, 4, 1, 4981, 1, 20, 1, 2, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setUnits('1/100').setMaxAccess("readonly")
if mibBuilder.loadTexts: rdnTaskUtil5Sec.setStatus('current')
rdnTaskUtil1Min = MibTableColumn((1, 3, 6, 1, 4, 1, 4981, 1, 20, 1, 2, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setUnits('1/100').setMaxAccess("readonly")
if mibBuilder.loadTexts: rdnTaskUtil1Min.setStatus('current')
rdnTaskUtil5Min = MibTableColumn((1, 3, 6, 1, 4, 1, 4981, 1, 20, 1, 2, 1, 7), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setUnits('1/100').setMaxAccess("readonly")
if mibBuilder.loadTexts: rdnTaskUtil5Min.setStatus('current')
rdnProcessMIBNotifPrefix = MibIdentifier((1, 3, 6, 1, 4, 1, 4981, 1, 20, 2))
rdnProcessMIBNotifs = MibIdentifier((1, 3, 6, 1, 4, 1, 4981, 1, 20, 2, 0))
rdnProcessMIBConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 4981, 1, 20, 3))
rdnProcessCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 4981, 1, 20, 3, 1))
rdnProcessGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 4981, 1, 20, 3, 2))
rdnProcessMIBCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 4981, 1, 20, 3, 1, 1)).setObjects(("RDN-PROCESS-MIB", "rdnCPUTotalGroup"), ("RDN-PROCESS-MIB", "rdnTaskGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    rdnProcessMIBCompliance = rdnProcessMIBCompliance.setStatus('current')
rdnCPUTotalGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 4981, 1, 20, 3, 2, 1)).setObjects(("RDN-PROCESS-MIB", "rdnCPUType"), ("RDN-PROCESS-MIB", "rdnTotalAllocatableMem"), ("RDN-PROCESS-MIB", "rdnTotalMemAllocated"), ("RDN-PROCESS-MIB", "rdnTotalFreeMem"), ("RDN-PROCESS-MIB", "rdnTotalCPUUtilization5Sec"), ("RDN-PROCESS-MIB", "rdnTotalCPUUtilization1Min"), ("RDN-PROCESS-MIB", "rdnTotalCPUUtilization5Min"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    rdnCPUTotalGroup = rdnCPUTotalGroup.setStatus('current')
rdnTaskGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 4981, 1, 20, 3, 2, 2)).setObjects(("RDN-PROCESS-MIB", "rdnTaskId"), ("RDN-PROCESS-MIB", "rdnTaskName"), ("RDN-PROCESS-MIB", "rdnTaskPriority"), ("RDN-PROCESS-MIB", "rdnTaskMemAllocated"), ("RDN-PROCESS-MIB", "rdnTaskUtil5Sec"), ("RDN-PROCESS-MIB", "rdnTaskUtil1Min"), ("RDN-PROCESS-MIB", "rdnTaskUtil5Min"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    rdnTaskGroup = rdnTaskGroup.setStatus('current')
mibBuilder.exportSymbols("RDN-PROCESS-MIB", rdnProcessMIBConformance=rdnProcessMIBConformance, rdnProcessMIBCompliance=rdnProcessMIBCompliance, rdnProcessCompliances=rdnProcessCompliances, rdnSlotSnmpIndex=rdnSlotSnmpIndex, rdnProcessMIBObjects=rdnProcessMIBObjects, rdnProcessMIB=rdnProcessMIB, rdnCPUTotalTable=rdnCPUTotalTable, rdnTotalCPUUtilization1Min=rdnTotalCPUUtilization1Min, rdnTaskEntry=rdnTaskEntry, rdnTotalAllocatableMem=rdnTotalAllocatableMem, PYSNMP_MODULE_ID=rdnProcessMIB, rdnTaskMemAllocated=rdnTaskMemAllocated, rdnTaskId=rdnTaskId, rdnTaskUtil5Sec=rdnTaskUtil5Sec, rdnProcessMIBNotifPrefix=rdnProcessMIBNotifPrefix, rdnTotalFreeMem=rdnTotalFreeMem, rdnTotalMemAllocated=rdnTotalMemAllocated, rdnTaskPriority=rdnTaskPriority, rdnProcessGroups=rdnProcessGroups, rdnCPUTotalGroup=rdnCPUTotalGroup, rdnTaskUtil1Min=rdnTaskUtil1Min, rdnCPUTotalEntry=rdnCPUTotalEntry, rdnTaskTable=rdnTaskTable, rdnTotalCPUUtilization5Sec=rdnTotalCPUUtilization5Sec, rdnCPUIndex=rdnCPUIndex, rdnTaskUtil5Min=rdnTaskUtil5Min, rdnTaskName=rdnTaskName, rdnProcessMIBNotifs=rdnProcessMIBNotifs, rdnTotalCPUUtilization5Min=rdnTotalCPUUtilization5Min, rdnTaskGroup=rdnTaskGroup, rdnCPUType=rdnCPUType, RdnTaskPriorityType=RdnTaskPriorityType)
