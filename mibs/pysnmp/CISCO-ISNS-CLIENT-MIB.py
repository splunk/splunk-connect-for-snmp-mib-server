#
# PySNMP MIB module CISCO-ISNS-CLIENT-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CISCO-ISNS-CLIENT-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:45:58 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ConstraintsUnion, SingleValueConstraint, ConstraintsIntersection, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ConstraintsUnion", "SingleValueConstraint", "ConstraintsIntersection", "ValueSizeConstraint")
ciscoMgmt, = mibBuilder.importSymbols("CISCO-SMI", "ciscoMgmt")
CiscoPort, = mibBuilder.importSymbols("CISCO-TC", "CiscoPort")
InetAddressType, InetAddress = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddressType", "InetAddress")
SnmpAdminString, = mibBuilder.importSymbols("SNMP-FRAMEWORK-MIB", "SnmpAdminString")
ModuleCompliance, NotificationGroup, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup", "ObjectGroup")
Gauge32, Unsigned32, MibIdentifier, MibScalar, MibTable, MibTableRow, MibTableColumn, Integer32, iso, Bits, Counter32, ObjectIdentity, ModuleIdentity, NotificationType, TimeTicks, IpAddress, Counter64 = mibBuilder.importSymbols("SNMPv2-SMI", "Gauge32", "Unsigned32", "MibIdentifier", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Integer32", "iso", "Bits", "Counter32", "ObjectIdentity", "ModuleIdentity", "NotificationType", "TimeTicks", "IpAddress", "Counter64")
RowStatus, DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "RowStatus", "DisplayString", "TextualConvention")
ciscoIsnsClientMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 9, 9, 372))
ciscoIsnsClientMIB.setRevisions(('2003-11-10 00:00',))
if mibBuilder.loadTexts: ciscoIsnsClientMIB.setLastUpdated('200311100000Z')
if mibBuilder.loadTexts: ciscoIsnsClientMIB.setOrganization('Cisco Systems Inc. ')
ciscoIsnsClientMIBNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 372, 0))
ciscoIsnsClientMIBMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 372, 1))
ciscoIsnsClientMIBConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 372, 2))
cIsnsClientConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 372, 1, 1))
cIsnsClntServerProfileTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 372, 1, 1, 1), )
if mibBuilder.loadTexts: cIsnsClntServerProfileTable.setStatus('current')
cIsnsClntServerProfileEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 372, 1, 1, 1, 1), ).setIndexNames((0, "CISCO-ISNS-CLIENT-MIB", "cIsnsClntServerProfileName"), (0, "CISCO-ISNS-CLIENT-MIB", "cIsnsClntServerIndex"))
if mibBuilder.loadTexts: cIsnsClntServerProfileEntry.setStatus('current')
cIsnsClntServerProfileName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 372, 1, 1, 1, 1, 1), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 64)))
if mibBuilder.loadTexts: cIsnsClntServerProfileName.setStatus('current')
cIsnsClntServerIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 372, 1, 1, 1, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)))
if mibBuilder.loadTexts: cIsnsClntServerIndex.setStatus('current')
cIsnsClntServerProfileAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 372, 1, 1, 1, 1, 3), InetAddressType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cIsnsClntServerProfileAddrType.setStatus('current')
cIsnsClntServerProfileAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 372, 1, 1, 1, 1, 4), InetAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cIsnsClntServerProfileAddr.setStatus('current')
cIsnsClntServerProfilePort = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 372, 1, 1, 1, 1, 5), CiscoPort().clone(3205)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cIsnsClntServerProfilePort.setStatus('current')
cIsnsClntServerProfileStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 372, 1, 1, 1, 1, 6), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cIsnsClntServerProfileStatus.setStatus('current')
ciscoiIsnsClientMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 372, 2, 1))
ciscoIsnsClientMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 372, 2, 2))
ciscoIsnsClientMIBCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 372, 2, 1, 1)).setObjects(("CISCO-ISNS-CLIENT-MIB", "cIsnsServerConfigGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoIsnsClientMIBCompliance = ciscoIsnsClientMIBCompliance.setStatus('current')
cIsnsServerConfigGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 372, 2, 2, 1)).setObjects(("CISCO-ISNS-CLIENT-MIB", "cIsnsClntServerProfileAddrType"), ("CISCO-ISNS-CLIENT-MIB", "cIsnsClntServerProfileAddr"), ("CISCO-ISNS-CLIENT-MIB", "cIsnsClntServerProfilePort"), ("CISCO-ISNS-CLIENT-MIB", "cIsnsClntServerProfileStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cIsnsServerConfigGroup = cIsnsServerConfigGroup.setStatus('current')
mibBuilder.exportSymbols("CISCO-ISNS-CLIENT-MIB", ciscoIsnsClientMIBConformance=ciscoIsnsClientMIBConformance, cIsnsClntServerProfileTable=cIsnsClntServerProfileTable, ciscoIsnsClientMIB=ciscoIsnsClientMIB, cIsnsClntServerProfileName=cIsnsClntServerProfileName, cIsnsClntServerProfileAddrType=cIsnsClntServerProfileAddrType, ciscoIsnsClientMIBGroups=ciscoIsnsClientMIBGroups, ciscoIsnsClientMIBCompliance=ciscoIsnsClientMIBCompliance, cIsnsServerConfigGroup=cIsnsServerConfigGroup, cIsnsClntServerIndex=cIsnsClntServerIndex, ciscoIsnsClientMIBNotifications=ciscoIsnsClientMIBNotifications, PYSNMP_MODULE_ID=ciscoIsnsClientMIB, ciscoIsnsClientMIBMIBObjects=ciscoIsnsClientMIBMIBObjects, cIsnsClntServerProfilePort=cIsnsClntServerProfilePort, ciscoiIsnsClientMIBCompliances=ciscoiIsnsClientMIBCompliances, cIsnsClntServerProfileStatus=cIsnsClntServerProfileStatus, cIsnsClntServerProfileEntry=cIsnsClntServerProfileEntry, cIsnsClntServerProfileAddr=cIsnsClntServerProfileAddr, cIsnsClientConfig=cIsnsClientConfig)
