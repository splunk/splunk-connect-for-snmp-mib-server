#
# PySNMP MIB module ZYXEL-TRANSCEIVER-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/ZYXEL-TRANSCEIVER-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 21:46:00 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ValueSizeConstraint, ConstraintsIntersection, ConstraintsUnion, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ValueSizeConstraint", "ConstraintsIntersection", "ConstraintsUnion", "ValueRangeConstraint")
dot1dBasePort, = mibBuilder.importSymbols("BRIDGE-MIB", "dot1dBasePort")
ifIndex, = mibBuilder.importSymbols("IF-MIB", "ifIndex")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
Unsigned32, Counter64, Gauge32, TimeTicks, MibIdentifier, MibScalar, MibTable, MibTableRow, MibTableColumn, Bits, IpAddress, iso, ModuleIdentity, NotificationType, Integer32, ObjectIdentity, Counter32 = mibBuilder.importSymbols("SNMPv2-SMI", "Unsigned32", "Counter64", "Gauge32", "TimeTicks", "MibIdentifier", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Bits", "IpAddress", "iso", "ModuleIdentity", "NotificationType", "Integer32", "ObjectIdentity", "Counter32")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
esMgmt, = mibBuilder.importSymbols("ZYXEL-ES-SMI", "esMgmt")
zyxelTransceiver = ModuleIdentity((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 84))
if mibBuilder.loadTexts: zyxelTransceiver.setLastUpdated('201207010000Z')
if mibBuilder.loadTexts: zyxelTransceiver.setOrganization('Enterprise Solution ZyXEL')
zyxelTransceiverStatus = MibIdentifier((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 84, 1))
zyxelTransceiverTrapInfoObject = MibIdentifier((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 84, 2))
zyxelTransceiverNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 84, 3))
zyxelTransceiverSerialTable = MibTable((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 84, 1, 1), )
if mibBuilder.loadTexts: zyxelTransceiverSerialTable.setStatus('current')
zyxelTransceiverSerialEntry = MibTableRow((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 84, 1, 1, 1), ).setIndexNames((0, "BRIDGE-MIB", "dot1dBasePort"))
if mibBuilder.loadTexts: zyxelTransceiverSerialEntry.setStatus('current')
zyTransceiverSerialModuleType = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 84, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("okWithDdm", 1), ("okWithoutDdm", 2), ("nonoperational", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: zyTransceiverSerialModuleType.setStatus('current')
zyTransceiverSerialVendor = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 84, 1, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zyTransceiverSerialVendor.setStatus('current')
zyTransceiverSerialPartNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 84, 1, 1, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zyTransceiverSerialPartNumber.setStatus('current')
zyTransceiverSerialSerialNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 84, 1, 1, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zyTransceiverSerialSerialNumber.setStatus('current')
zyTransceiverSerialRevision = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 84, 1, 1, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zyTransceiverSerialRevision.setStatus('current')
zyTransceiverSerialDateCode = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 84, 1, 1, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zyTransceiverSerialDateCode.setStatus('current')
zyTransceiverSerialTransceiver = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 84, 1, 1, 1, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zyTransceiverSerialTransceiver.setStatus('current')
zyxelTransceiverDdmiTable = MibTable((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 84, 1, 2), )
if mibBuilder.loadTexts: zyxelTransceiverDdmiTable.setStatus('current')
zyxelTransceiverDdmiEntry = MibTableRow((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 84, 1, 2, 1), ).setIndexNames((0, "BRIDGE-MIB", "dot1dBasePort"), (0, "ZYXEL-TRANSCEIVER-MIB", "zyTransceiverDdmiType"))
if mibBuilder.loadTexts: zyxelTransceiverDdmiEntry.setStatus('current')
zyTransceiverDdmiType = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 84, 1, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zyTransceiverDdmiType.setStatus('current')
zyTransceiverDdmiAlarmMax = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 84, 1, 2, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zyTransceiverDdmiAlarmMax.setStatus('current')
zyTransceiverDdmiAlarmMin = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 84, 1, 2, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zyTransceiverDdmiAlarmMin.setStatus('current')
zyTransceiverDdmiWarnMax = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 84, 1, 2, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zyTransceiverDdmiWarnMax.setStatus('current')
zyTransceiverDdmiWarnMin = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 84, 1, 2, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zyTransceiverDdmiWarnMin.setStatus('current')
zyTransceiverDdmiCurrent = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 84, 1, 2, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zyTransceiverDdmiCurrent.setStatus('current')
zyTransceiverDdmiDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 84, 1, 2, 1, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zyTransceiverDdmiDescription.setStatus('current')
zyTransceiverTrapOutOfRangeType = MibScalar((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 84, 2, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("alarmHigh", 0), ("warnHigh", 1), ("alarmLow", 2), ("warnLow", 3))))
if mibBuilder.loadTexts: zyTransceiverTrapOutOfRangeType.setStatus('current')
zyTransceiverTrapOutOfRangeValue = MibScalar((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 84, 2, 2), Integer32())
if mibBuilder.loadTexts: zyTransceiverTrapOutOfRangeValue.setStatus('current')
zyTransceiverDdmiTemperatureOutOfRange = NotificationType((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 84, 3, 1)).setObjects(("IF-MIB", "ifIndex"), ("ZYXEL-TRANSCEIVER-MIB", "zyTransceiverTrapOutOfRangeType"))
if mibBuilder.loadTexts: zyTransceiverDdmiTemperatureOutOfRange.setStatus('current')
zyTransceiverDdmiTxPowerOutOfRange = NotificationType((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 84, 3, 2)).setObjects(("IF-MIB", "ifIndex"), ("ZYXEL-TRANSCEIVER-MIB", "zyTransceiverTrapOutOfRangeType"))
if mibBuilder.loadTexts: zyTransceiverDdmiTxPowerOutOfRange.setStatus('current')
zyTransceiverDdmiRxPowerOutOfRange = NotificationType((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 84, 3, 3)).setObjects(("IF-MIB", "ifIndex"), ("ZYXEL-TRANSCEIVER-MIB", "zyTransceiverTrapOutOfRangeType"))
if mibBuilder.loadTexts: zyTransceiverDdmiRxPowerOutOfRange.setStatus('current')
zyTransceiverDdmiVoltageOutOfRange = NotificationType((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 84, 3, 4)).setObjects(("IF-MIB", "ifIndex"), ("ZYXEL-TRANSCEIVER-MIB", "zyTransceiverTrapOutOfRangeType"))
if mibBuilder.loadTexts: zyTransceiverDdmiVoltageOutOfRange.setStatus('current')
zyTransceiverDdmiTxBiasOutOfRange = NotificationType((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 84, 3, 5)).setObjects(("IF-MIB", "ifIndex"), ("ZYXEL-TRANSCEIVER-MIB", "zyTransceiverTrapOutOfRangeType"))
if mibBuilder.loadTexts: zyTransceiverDdmiTxBiasOutOfRange.setStatus('current')
zyTransceiverDdmiTemperatureOutOfRangeRecovered = NotificationType((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 84, 3, 6)).setObjects(("IF-MIB", "ifIndex"), ("ZYXEL-TRANSCEIVER-MIB", "zyTransceiverTrapOutOfRangeType"))
if mibBuilder.loadTexts: zyTransceiverDdmiTemperatureOutOfRangeRecovered.setStatus('current')
zyTransceiverDdmiTxPowerOutOfRangeRecovered = NotificationType((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 84, 3, 7)).setObjects(("IF-MIB", "ifIndex"), ("ZYXEL-TRANSCEIVER-MIB", "zyTransceiverTrapOutOfRangeType"))
if mibBuilder.loadTexts: zyTransceiverDdmiTxPowerOutOfRangeRecovered.setStatus('current')
zyTransceiverDdmiRxPowerOutOfRangeRecovered = NotificationType((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 84, 3, 8)).setObjects(("IF-MIB", "ifIndex"), ("ZYXEL-TRANSCEIVER-MIB", "zyTransceiverTrapOutOfRangeType"))
if mibBuilder.loadTexts: zyTransceiverDdmiRxPowerOutOfRangeRecovered.setStatus('current')
zyTransceiverDdmiVoltageOutOfRangeRecovered = NotificationType((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 84, 3, 9)).setObjects(("IF-MIB", "ifIndex"), ("ZYXEL-TRANSCEIVER-MIB", "zyTransceiverTrapOutOfRangeType"))
if mibBuilder.loadTexts: zyTransceiverDdmiVoltageOutOfRangeRecovered.setStatus('current')
zyTransceiverDdmiTxBiasOutOfRangeRecovered = NotificationType((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 84, 3, 10)).setObjects(("IF-MIB", "ifIndex"), ("ZYXEL-TRANSCEIVER-MIB", "zyTransceiverTrapOutOfRangeType"))
if mibBuilder.loadTexts: zyTransceiverDdmiTxBiasOutOfRangeRecovered.setStatus('current')
mibBuilder.exportSymbols("ZYXEL-TRANSCEIVER-MIB", zyTransceiverDdmiWarnMin=zyTransceiverDdmiWarnMin, zyTransceiverDdmiCurrent=zyTransceiverDdmiCurrent, zyTransceiverDdmiType=zyTransceiverDdmiType, zyTransceiverDdmiAlarmMin=zyTransceiverDdmiAlarmMin, zyTransceiverDdmiVoltageOutOfRangeRecovered=zyTransceiverDdmiVoltageOutOfRangeRecovered, PYSNMP_MODULE_ID=zyxelTransceiver, zyxelTransceiverSerialTable=zyxelTransceiverSerialTable, zyTransceiverSerialRevision=zyTransceiverSerialRevision, zyTransceiverDdmiTxPowerOutOfRange=zyTransceiverDdmiTxPowerOutOfRange, zyTransceiverDdmiTemperatureOutOfRange=zyTransceiverDdmiTemperatureOutOfRange, zyTransceiverSerialPartNumber=zyTransceiverSerialPartNumber, zyTransceiverSerialDateCode=zyTransceiverSerialDateCode, zyxelTransceiverTrapInfoObject=zyxelTransceiverTrapInfoObject, zyTransceiverDdmiRxPowerOutOfRange=zyTransceiverDdmiRxPowerOutOfRange, zyTransceiverSerialVendor=zyTransceiverSerialVendor, zyTransceiverDdmiRxPowerOutOfRangeRecovered=zyTransceiverDdmiRxPowerOutOfRangeRecovered, zyxelTransceiver=zyxelTransceiver, zyTransceiverDdmiWarnMax=zyTransceiverDdmiWarnMax, zyxelTransceiverDdmiTable=zyxelTransceiverDdmiTable, zyTransceiverDdmiTxBiasOutOfRange=zyTransceiverDdmiTxBiasOutOfRange, zyxelTransceiverSerialEntry=zyxelTransceiverSerialEntry, zyTransceiverTrapOutOfRangeType=zyTransceiverTrapOutOfRangeType, zyTransceiverDdmiTxPowerOutOfRangeRecovered=zyTransceiverDdmiTxPowerOutOfRangeRecovered, zyxelTransceiverStatus=zyxelTransceiverStatus, zyTransceiverDdmiVoltageOutOfRange=zyTransceiverDdmiVoltageOutOfRange, zyTransceiverDdmiTemperatureOutOfRangeRecovered=zyTransceiverDdmiTemperatureOutOfRangeRecovered, zyxelTransceiverDdmiEntry=zyxelTransceiverDdmiEntry, zyxelTransceiverNotifications=zyxelTransceiverNotifications, zyTransceiverSerialSerialNumber=zyTransceiverSerialSerialNumber, zyTransceiverDdmiDescription=zyTransceiverDdmiDescription, zyTransceiverDdmiTxBiasOutOfRangeRecovered=zyTransceiverDdmiTxBiasOutOfRangeRecovered, zyTransceiverSerialModuleType=zyTransceiverSerialModuleType, zyTransceiverTrapOutOfRangeValue=zyTransceiverTrapOutOfRangeValue, zyTransceiverDdmiAlarmMax=zyTransceiverDdmiAlarmMax, zyTransceiverSerialTransceiver=zyTransceiverSerialTransceiver)
