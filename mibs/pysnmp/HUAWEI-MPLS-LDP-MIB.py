#
# PySNMP MIB module HUAWEI-MPLS-LDP-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/HUAWEI-MPLS-LDP-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:35:15 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ValueRangeConstraint, ValueSizeConstraint, ConstraintsIntersection, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ValueRangeConstraint", "ValueSizeConstraint", "ConstraintsIntersection", "SingleValueConstraint")
hwMpls, huaweiMgmt = mibBuilder.importSymbols("HUAWEI-3COM-OID-MIB", "hwMpls", "huaweiMgmt")
ObjectGroup, NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "NotificationGroup", "ModuleCompliance")
Unsigned32, ObjectIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, IpAddress, MibIdentifier, Counter32, NotificationType, Bits, Counter64, TimeTicks, iso, Integer32, Gauge32, ModuleIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "Unsigned32", "ObjectIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "IpAddress", "MibIdentifier", "Counter32", "NotificationType", "Bits", "Counter64", "TimeTicks", "iso", "Integer32", "Gauge32", "ModuleIdentity")
DisplayString, TruthValue, TimeInterval, RowStatus, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TruthValue", "TimeInterval", "RowStatus", "TextualConvention")
hwMplsLdp = ModuleIdentity((1, 3, 6, 1, 4, 1, 2011, 5, 12, 2))
hwMplsLdp.setRevisions(('1996-11-08 21:55',))
if mibBuilder.loadTexts: hwMplsLdp.setLastUpdated('9906301200Z')
if mibBuilder.loadTexts: hwMplsLdp.setOrganization('HuaweiMPLS Working Group')
class DisplayString(OctetString):
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(0, 255)

class PhysAddress(OctetString):
    pass

class BitRate(Integer32):
    pass

class BurstSize(Integer32):
    pass

class MplsLsrIdentifier(TextualConvention, OctetString):
    status = 'current'
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(4, 4)
    fixedLength = 4

class MplsLdpGenAddr(TextualConvention, OctetString):
    status = 'current'
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(0, 64)

class MplsLdpIdentifier(TextualConvention, OctetString):
    status = 'current'
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(6, 6)
    fixedLength = 6

class AtmVpIdentifier(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ValueRangeConstraint(0, 4095)

class AtmVcIdentifier(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ValueRangeConstraint(0, 65535)

class AddressFamilyNumbers(TextualConvention, Integer32):
    reference = 'RFC 1700 Assigned Numbers, Reynolds and Postel, Oct. 1994'
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15))
    namedValues = NamedValues(("other", 0), ("ipv4", 1), ("ipv6", 2), ("nsap", 3), ("hdlc", 4), ("bbn1822", 5), ("ieee802", 6), ("e163", 7), ("e164", 8), ("f69", 9), ("x121", 10), ("ipx", 11), ("appleTalk", 12), ("decnetIV", 13), ("banyanVines", 14), ("e164WithNsap", 15))

class MplsLabel(TextualConvention, Integer32):
    reference = '1. MPLS Label Stack Encoding, Rosen et al, draft- ietf-mpls-label-encaps-04.txt, April 1999. 2. Use of Label Switching on Frame Relay Networks, Conta et al, draft-ietf-mpls-fr-03.txt, Nov. 1998.'
    status = 'current'

class MplsTunnelIndex(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ValueRangeConstraint(0, 65535)

hwMplsLdpObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 12, 2, 1))
hwMplsLdpNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 12, 2, 2))
hwMplsLdpLsrObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 12, 2, 1, 1))
hwMplsLdpEntityObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 12, 2, 1, 2))
hwMplsLdpPeerObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 12, 2, 1, 3))
hwMplsLdpSessionObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 12, 2, 1, 4))
hwMplsLdpHelloAdjacencyObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 12, 2, 1, 5))
hwMplsLdpCrlspTnlObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 12, 2, 1, 6))
hwMplsLdpLsrIncarnTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 12, 2, 1, 1, 1), )
if mibBuilder.loadTexts: hwMplsLdpLsrIncarnTable.setStatus('current')
hwMplsLdpLsrIncarnEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 12, 2, 1, 1, 1, 1), ).setIndexNames((0, "HUAWEI-MPLS-LDP-MIB", "hwMplsLdpLsrIncarnID"))
if mibBuilder.loadTexts: hwMplsLdpLsrIncarnEntry.setStatus('current')
hwMplsLdpLsrID = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 12, 2, 1, 1, 1, 1, 1), MplsLsrIdentifier()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMplsLdpLsrID.setStatus('current')
hwMplsLdpLsrLoopDetectionPresent = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 12, 2, 1, 1, 1, 1, 2), TruthValue().clone('true')).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMplsLdpLsrLoopDetectionPresent.setStatus('current')
hwMplsLdpLsrLoopDetectionAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 12, 2, 1, 1, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMplsLdpLsrLoopDetectionAdminStatus.setStatus('current')
hwMplsLdpLsrPathVectorLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 12, 2, 1, 1, 1, 1, 4), Integer32().clone(32)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMplsLdpLsrPathVectorLimit.setStatus('current')
hwMplsLdpLsrHopCountLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 12, 2, 1, 1, 1, 1, 5), Integer32().clone(32)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMplsLdpLsrHopCountLimit.setStatus('current')
hwMplsLdpLsrLoopPreventionPresent = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 12, 2, 1, 1, 1, 1, 6), TruthValue().clone('false')).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMplsLdpLsrLoopPreventionPresent.setStatus('current')
hwMplsLdpLsrLoopPreventionAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 12, 2, 1, 1, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMplsLdpLsrLoopPreventionAdminStatus.setStatus('current')
hwMplsLdpLsrLabelRetentionMode = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 12, 2, 1, 1, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("conservative", 1), ("liberal", 2))).clone('conservative')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMplsLdpLsrLabelRetentionMode.setStatus('current')
hwMplsLdpLsrIncarnID = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 12, 2, 1, 1, 1, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMplsLdpLsrIncarnID.setStatus('current')
hwMplsLdpLsrMaxLdpEntities = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 12, 2, 1, 1, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1024))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMplsLdpLsrMaxLdpEntities.setStatus('current')
hwMplsLdpLsrMaxLocalPeers = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 12, 2, 1, 1, 1, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1024))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMplsLdpLsrMaxLocalPeers.setStatus('current')
hwMplsLdpLsrMaxRemotePeers = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 12, 2, 1, 1, 1, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1024))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMplsLdpLsrMaxRemotePeers.setStatus('current')
hwMplsLdpLsrMaxIfaces = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 12, 2, 1, 1, 1, 1, 13), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMplsLdpLsrMaxIfaces.setStatus('current')
hwMplsLdpLsrMaxLsps = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 12, 2, 1, 1, 1, 1, 14), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMplsLdpLsrMaxLsps.setStatus('current')
hwMplsLdpLsrMaxCrlspTnls = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 12, 2, 1, 1, 1, 1, 15), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMplsLdpLsrMaxCrlspTnls.setStatus('current')
hwMplsLdpLsrMaxErhopPerCrlspTnl = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 12, 2, 1, 1, 1, 1, 16), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMplsLdpLsrMaxErhopPerCrlspTnl.setStatus('current')
hwMplsLdpLsrRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 12, 2, 1, 1, 1, 1, 17), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwMplsLdpLsrRowStatus.setStatus('current')
hwMplsLdpLsrMaxVcmCapability = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 12, 2, 1, 1, 1, 1, 18), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMplsLdpLsrMaxVcmCapability.setStatus('current')
hwMplsLdpLsrVcmPathVecInAllLblMapPresent = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 12, 2, 1, 1, 1, 1, 19), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMplsLdpLsrVcmPathVecInAllLblMapPresent.setStatus('current')
hwMplsLdpLsrRequestRetrytimerValue = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 12, 2, 1, 1, 1, 1, 20), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMplsLdpLsrRequestRetrytimerValue.setStatus('current')
hwMplsLdpLsrNumOfRequestRetryAttempts = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 12, 2, 1, 1, 1, 1, 21), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMplsLdpLsrNumOfRequestRetryAttempts.setStatus('current')
hwMplsLdpEntityTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 12, 2, 1, 2, 1), )
if mibBuilder.loadTexts: hwMplsLdpEntityTable.setStatus('current')
hwMplsLdpEntityEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 12, 2, 1, 2, 1, 1), ).setIndexNames((0, "HUAWEI-MPLS-LDP-MIB", "hwMplsLdpLsrIncarnID"), (0, "HUAWEI-MPLS-LDP-MIB", "hwMplsLdpEntityIfIndex"))
if mibBuilder.loadTexts: hwMplsLdpEntityEntry.setStatus('current')
hwMplsLdpEntityID = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 12, 2, 1, 2, 1, 1, 1), MplsLdpIdentifier()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hwMplsLdpEntityID.setStatus('current')
hwMplsLdpEntityLabelSpaceType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 12, 2, 1, 2, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("unknown", 1), ("perInterface", 2), ("perPlatform", 3)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwMplsLdpEntityLabelSpaceType.setStatus('current')
hwMplsLdpEntityDefVpi = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 12, 2, 1, 2, 1, 1, 3), AtmVpIdentifier()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwMplsLdpEntityDefVpi.setStatus('current')
hwMplsLdpEntityDefVci = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 12, 2, 1, 2, 1, 1, 4), AtmVcIdentifier()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwMplsLdpEntityDefVci.setStatus('current')
hwMplsLdpEntityUnlabTrafVpi = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 12, 2, 1, 2, 1, 1, 5), AtmVpIdentifier()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwMplsLdpEntityUnlabTrafVpi.setStatus('current')
hwMplsLdpEntityUnlabTrafVci = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 12, 2, 1, 2, 1, 1, 6), AtmVcIdentifier().clone(32)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwMplsLdpEntityUnlabTrafVci.setStatus('current')
hwMplsLdpEntityMergeCapability = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 12, 2, 1, 2, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("noMerge", 0), ("vpMerge", 1), ("vcMerge", 2), ("vpVcMerge", 3)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwMplsLdpEntityMergeCapability.setStatus('current')
hwMplsLdpEntityVcDirectionality = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 12, 2, 1, 2, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("bidirectional", 1), ("unidirectional", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwMplsLdpEntityVcDirectionality.setStatus('current')
hwMplsLdpEntityWellKnownDiscoveryPort = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 12, 2, 1, 2, 1, 1, 9), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwMplsLdpEntityWellKnownDiscoveryPort.setStatus('current')
hwMplsLdpEntityMtu = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 12, 2, 1, 2, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwMplsLdpEntityMtu.setStatus('current')
hwMplsLdpEntityKeepAliveHoldTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 12, 2, 1, 2, 1, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwMplsLdpEntityKeepAliveHoldTimer.setStatus('current')
hwMplsLdpEntityFailedInitSessionThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 12, 2, 1, 2, 1, 1, 12), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwMplsLdpEntityFailedInitSessionThreshold.setStatus('current')
hwMplsLdpEntityLabelDistributionMethod = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 12, 2, 1, 2, 1, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("downstreamOnDemand", 1), ("downstreamUnsolicited", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwMplsLdpEntityLabelDistributionMethod.setStatus('current')
hwMplsLdpEntityLabelAllocationMethod = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 12, 2, 1, 2, 1, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("ordered", 1), ("independent", 2))).clone('ordered')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwMplsLdpEntityLabelAllocationMethod.setStatus('current')
hwMplsLdpEntityHelloHoldTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 12, 2, 1, 2, 1, 1, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwMplsLdpEntityHelloHoldTimer.setStatus('current')
hwMplsLdpEntityRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 12, 2, 1, 2, 1, 1, 16), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwMplsLdpEntityRowStatus.setStatus('current')
hwMplsLdpEntityIfTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 12, 2, 1, 2, 2), )
if mibBuilder.loadTexts: hwMplsLdpEntityIfTable.setStatus('current')
hwMplsLdpEntityIfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 12, 2, 1, 2, 2, 1), ).setIndexNames((0, "HUAWEI-MPLS-LDP-MIB", "hwMplsLdpLsrIncarnID"), (0, "HUAWEI-MPLS-LDP-MIB", "hwMplsLdpEntityIfIndex"))
if mibBuilder.loadTexts: hwMplsLdpEntityIfEntry.setStatus('current')
hwMplsLdpEntityIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 12, 2, 1, 2, 2, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295)))
if mibBuilder.loadTexts: hwMplsLdpEntityIfIndex.setStatus('current')
hwMplsLdpEntityIfIpv4Address = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 12, 2, 1, 2, 2, 1, 2), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwMplsLdpEntityIfIpv4Address.setStatus('current')
hwMplsLdpEntityIfRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 12, 2, 1, 2, 2, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwMplsLdpEntityIfRowStatus.setStatus('current')
hwMplsLdpEntityConfAtmLabelRangeTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 12, 2, 1, 2, 3), )
if mibBuilder.loadTexts: hwMplsLdpEntityConfAtmLabelRangeTable.setStatus('current')
hwMplsLdpEntityConfAtmLabelRangeEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 12, 2, 1, 2, 3, 1), ).setIndexNames((0, "HUAWEI-MPLS-LDP-MIB", "hwMplsLdpLsrIncarnID"), (0, "HUAWEI-MPLS-LDP-MIB", "hwMplsLdpEntityIfIndex"), (0, "HUAWEI-MPLS-LDP-MIB", "hwMplsLdpEntityConfAtmLabelRangeLowerBoundVPI"), (0, "HUAWEI-MPLS-LDP-MIB", "hwMplsLdpEntityConfAtmLabelRangeLowerBoundVCI"))
if mibBuilder.loadTexts: hwMplsLdpEntityConfAtmLabelRangeEntry.setStatus('current')
hwMplsLdpEntityConfAtmLabelRangeLowerBoundVPI = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 12, 2, 1, 2, 3, 1, 1), AtmVpIdentifier())
if mibBuilder.loadTexts: hwMplsLdpEntityConfAtmLabelRangeLowerBoundVPI.setStatus('current')
hwMplsLdpEntityConfAtmLabelRangeLowerBoundVCI = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 12, 2, 1, 2, 3, 1, 2), AtmVcIdentifier())
if mibBuilder.loadTexts: hwMplsLdpEntityConfAtmLabelRangeLowerBoundVCI.setStatus('current')
hwMplsLdpEntityConfAtmLabelRangeUpperBoundVPI = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 12, 2, 1, 2, 3, 1, 3), AtmVpIdentifier()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwMplsLdpEntityConfAtmLabelRangeUpperBoundVPI.setStatus('current')
hwMplsLdpEntityConfAtmLabelRangeUpperBoundVCI = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 12, 2, 1, 2, 3, 1, 4), AtmVcIdentifier()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwMplsLdpEntityConfAtmLabelRangeUpperBoundVCI.setStatus('current')
hwMplsLdpEntityConfAtmLabelRangeRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 12, 2, 1, 2, 3, 1, 5), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwMplsLdpEntityConfAtmLabelRangeRowStatus.setStatus('current')
hwMplsLdpEntityStatsTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 12, 2, 1, 2, 4), )
if mibBuilder.loadTexts: hwMplsLdpEntityStatsTable.setStatus('current')
hwMplsLdpEntityStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 12, 2, 1, 2, 4, 1), )
hwMplsLdpEntityEntry.registerAugmentions(("HUAWEI-MPLS-LDP-MIB", "hwMplsLdpEntityStatsEntry"))
hwMplsLdpEntityStatsEntry.setIndexNames(*hwMplsLdpEntityEntry.getIndexNames())
if mibBuilder.loadTexts: hwMplsLdpEntityStatsEntry.setStatus('current')
hwMplsLdpAttemptedSessions = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 12, 2, 1, 2, 4, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMplsLdpAttemptedSessions.setStatus('current')
hwMplsLdpPeerTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 12, 2, 1, 3, 1), )
if mibBuilder.loadTexts: hwMplsLdpPeerTable.setStatus('current')
hwMplsLdpPeerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 12, 2, 1, 3, 1, 1), ).setIndexNames((0, "HUAWEI-MPLS-LDP-MIB", "hwMplsLdpLsrIncarnID"), (0, "HUAWEI-MPLS-LDP-MIB", "hwMplsLdpEntityIfIndex"), (0, "HUAWEI-MPLS-LDP-MIB", "hwMplsLdpPeerIndex"))
if mibBuilder.loadTexts: hwMplsLdpPeerEntry.setStatus('current')
hwMplsLdpPeerIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 12, 2, 1, 3, 1, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295)))
if mibBuilder.loadTexts: hwMplsLdpPeerIndex.setStatus('current')
hwMplsLdpPeerID = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 12, 2, 1, 3, 1, 1, 2), MplsLdpIdentifier()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwMplsLdpPeerID.setStatus('current')
hwMplsLdpPeerInternetworkAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 12, 2, 1, 3, 1, 1, 3), AddressFamilyNumbers()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwMplsLdpPeerInternetworkAddrType.setStatus('current')
hwMplsLdpPeerInternetworkAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 12, 2, 1, 3, 1, 1, 4), MplsLdpGenAddr()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwMplsLdpPeerInternetworkAddr.setStatus('current')
hwMplsLdpPeerDefaultMtu = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 12, 2, 1, 3, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)).clone(9180)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwMplsLdpPeerDefaultMtu.setStatus('current')
hwMplsLdpPeerKeepAliveHoldTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 12, 2, 1, 3, 1, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwMplsLdpPeerKeepAliveHoldTimer.setStatus('current')
hwMplsLdpPeerLabelDistributionMethod = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 12, 2, 1, 3, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("downstreamOnDemand", 1), ("downstreamUnsolicited", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwMplsLdpPeerLabelDistributionMethod.setStatus('current')
hwMplsLdpPeerType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 12, 2, 1, 3, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("local", 1), ("remote", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwMplsLdpPeerType.setStatus('current')
hwMplsLdpPeerRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 12, 2, 1, 3, 1, 1, 9), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwMplsLdpPeerRowStatus.setStatus('current')
hwMplsLdpPeerConfAtmLabelRangeTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 12, 2, 1, 3, 2), )
if mibBuilder.loadTexts: hwMplsLdpPeerConfAtmLabelRangeTable.setStatus('current')
hwMplsLdpPeerConfAtmLabelRangeEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 12, 2, 1, 3, 2, 1), ).setIndexNames((0, "HUAWEI-MPLS-LDP-MIB", "hwMplsLdpLsrIncarnID"), (0, "HUAWEI-MPLS-LDP-MIB", "hwMplsLdpEntityIfIndex"), (0, "HUAWEI-MPLS-LDP-MIB", "hwMplsLdpPeerIndex"), (0, "HUAWEI-MPLS-LDP-MIB", "hwMplsLdpPeerConfAtmLabelRangeLowerBoundVPI"), (0, "HUAWEI-MPLS-LDP-MIB", "hwMplsLdpPeerConfAtmLabelRangeLowerBoundVCI"))
if mibBuilder.loadTexts: hwMplsLdpPeerConfAtmLabelRangeEntry.setStatus('current')
hwMplsLdpPeerConfAtmLabelRangeLowerBoundVPI = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 12, 2, 1, 3, 2, 1, 1), AtmVpIdentifier())
if mibBuilder.loadTexts: hwMplsLdpPeerConfAtmLabelRangeLowerBoundVPI.setStatus('current')
hwMplsLdpPeerConfAtmLabelRangeLowerBoundVCI = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 12, 2, 1, 3, 2, 1, 2), AtmVcIdentifier())
if mibBuilder.loadTexts: hwMplsLdpPeerConfAtmLabelRangeLowerBoundVCI.setStatus('current')
hwMplsLdpPeerConfAtmLabelRangeUpperBoundVPI = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 12, 2, 1, 3, 2, 1, 3), AtmVpIdentifier()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMplsLdpPeerConfAtmLabelRangeUpperBoundVPI.setStatus('current')
hwMplsLdpPeerConfAtmLabelRangeUpperBoundVCI = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 12, 2, 1, 3, 2, 1, 4), AtmVcIdentifier()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMplsLdpPeerConfAtmLabelRangeUpperBoundVCI.setStatus('current')
hwMplsLdpSessionTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 12, 2, 1, 4, 1), )
if mibBuilder.loadTexts: hwMplsLdpSessionTable.setStatus('current')
hwMplsLdpSessionEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 12, 2, 1, 4, 1, 1), ).setIndexNames((0, "HUAWEI-MPLS-LDP-MIB", "hwMplsLdpLsrIncarnID"), (0, "HUAWEI-MPLS-LDP-MIB", "hwMplsLdpEntityIfIndex"), (0, "HUAWEI-MPLS-LDP-MIB", "hwMplsLdpPeerIndex"), (0, "HUAWEI-MPLS-LDP-MIB", "hwMplsLdpSessionIndex"))
if mibBuilder.loadTexts: hwMplsLdpSessionEntry.setStatus('current')
hwMplsLdpSessionIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 12, 2, 1, 4, 1, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295)))
if mibBuilder.loadTexts: hwMplsLdpSessionIndex.setStatus('current')
hwMplsLdpSessionID = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 12, 2, 1, 4, 1, 1, 2), MplsLdpIdentifier()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMplsLdpSessionID.setStatus('current')
hwMplsLdpSessionProtocolVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 12, 2, 1, 4, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMplsLdpSessionProtocolVersion.setStatus('current')
hwMplsLdpSessionKeepAliveHoldTimeRemaining = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 12, 2, 1, 4, 1, 1, 4), TimeInterval()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMplsLdpSessionKeepAliveHoldTimeRemaining.setStatus('current')
hwMplsLdpSessionRole = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 12, 2, 1, 4, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("active", 1), ("passive", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMplsLdpSessionRole.setStatus('current')
hwMplsLdpSessionState = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 12, 2, 1, 4, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("nonexistent", 1), ("initialized", 2), ("openrec", 3), ("opensent", 4), ("operational", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMplsLdpSessionState.setStatus('current')
hwMplsLdpSessionAtmLabelRangeLowerBoundVPI = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 12, 2, 1, 4, 1, 1, 7), AtmVpIdentifier()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMplsLdpSessionAtmLabelRangeLowerBoundVPI.setStatus('current')
hwMplsLdpSessionAtmLabelRangeLowerBoundVCI = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 12, 2, 1, 4, 1, 1, 8), AtmVcIdentifier()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMplsLdpSessionAtmLabelRangeLowerBoundVCI.setStatus('current')
hwMplsLdpSessionAtmLabelRangeUpperBoundVPI = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 12, 2, 1, 4, 1, 1, 9), AtmVpIdentifier()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMplsLdpSessionAtmLabelRangeUpperBoundVPI.setStatus('current')
hwMplsLdpSessionAtmLabelRangeUpperBoundVCI = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 12, 2, 1, 4, 1, 1, 10), AtmVcIdentifier()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMplsLdpSessionAtmLabelRangeUpperBoundVCI.setStatus('current')
hwMplsLdpHelloAdjacencyTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 12, 2, 1, 5, 1), )
if mibBuilder.loadTexts: hwMplsLdpHelloAdjacencyTable.setStatus('current')
hwMplsLdpHelloAdjacencyEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 12, 2, 1, 5, 1, 1), ).setIndexNames((0, "HUAWEI-MPLS-LDP-MIB", "hwMplsLdpLsrIncarnID"), (0, "HUAWEI-MPLS-LDP-MIB", "hwMplsLdpEntityIfIndex"), (0, "HUAWEI-MPLS-LDP-MIB", "hwMplsLdpPeerIndex"), (0, "HUAWEI-MPLS-LDP-MIB", "hwMplsLdpSessionIndex"), (0, "HUAWEI-MPLS-LDP-MIB", "hwMplsLdpHelloAdjacencyIndex"))
if mibBuilder.loadTexts: hwMplsLdpHelloAdjacencyEntry.setStatus('current')
hwMplsLdpHelloAdjacencyIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 12, 2, 1, 5, 1, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295)))
if mibBuilder.loadTexts: hwMplsLdpHelloAdjacencyIndex.setStatus('current')
hwMplsLdpHelloAdjacencyHoldTimeRemaining = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 12, 2, 1, 5, 1, 1, 2), TimeInterval()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMplsLdpHelloAdjacencyHoldTimeRemaining.setStatus('current')
hwMplsLdpCrlspTnlTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 12, 2, 1, 6, 1), )
if mibBuilder.loadTexts: hwMplsLdpCrlspTnlTable.setStatus('current')
hwMplsLdpCrlspTnlEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 12, 2, 1, 6, 1, 1), ).setIndexNames((0, "HUAWEI-MPLS-LDP-MIB", "hwMplsLdpLsrIncarnID"), (0, "HUAWEI-MPLS-LDP-MIB", "hwMplsLdpCrlspTnlIndex"))
if mibBuilder.loadTexts: hwMplsLdpCrlspTnlEntry.setStatus('current')
hwMplsLdpCrlspTnlIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 12, 2, 1, 6, 1, 1, 1), MplsTunnelIndex()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hwMplsLdpCrlspTnlIndex.setStatus('current')
hwMplsLdpCrlspTnlName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 12, 2, 1, 6, 1, 1, 2), DisplayString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwMplsLdpCrlspTnlName.setStatus('current')
hwMplsLdpCrlspTnlDirection = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 12, 2, 1, 6, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("in", 1), ("out", 2), ("inOut", 3)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwMplsLdpCrlspTnlDirection.setStatus('current')
hwMplsLdpCrlspTnlSignallingProto = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 12, 2, 1, 6, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("none", 1), ("ldp", 2), ("rsvp", 3))).clone('none')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwMplsLdpCrlspTnlSignallingProto.setStatus('current')
hwMplsLdpCrlspTnlSetupPrio = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 12, 2, 1, 6, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwMplsLdpCrlspTnlSetupPrio.setStatus('current')
hwMplsLdpCrlspTnlHoldingPrio = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 12, 2, 1, 6, 1, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwMplsLdpCrlspTnlHoldingPrio.setStatus('current')
hwMplsLdpCrlspTnlPeakDataRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 12, 2, 1, 6, 1, 1, 7), BitRate()).setUnits('bits per second').setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwMplsLdpCrlspTnlPeakDataRate.setStatus('current')
hwMplsLdpCrlspTnlPeakBurstSize = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 12, 2, 1, 6, 1, 1, 8), BurstSize()).setUnits('bytes').setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwMplsLdpCrlspTnlPeakBurstSize.setStatus('current')
hwMplsLdpCrlspTnlCommittedDataRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 12, 2, 1, 6, 1, 1, 9), BitRate()).setUnits('bits per second').setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwMplsLdpCrlspTnlCommittedDataRate.setStatus('current')
hwMplsLdpCrlspTnlCommittedBurstSize = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 12, 2, 1, 6, 1, 1, 10), BurstSize()).setUnits('bytes').setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwMplsLdpCrlspTnlCommittedBurstSize.setStatus('current')
hwMplsLdpCrlspTnlExcessBurstSize = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 12, 2, 1, 6, 1, 1, 11), BurstSize()).setUnits('bytes').setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwMplsLdpCrlspTnlExcessBurstSize.setStatus('current')
hwMplsLdpCrlspTnlIsPinned = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 12, 2, 1, 6, 1, 1, 12), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwMplsLdpCrlspTnlIsPinned.setStatus('current')
hwMplsLdpCrlspTnlFrequency = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 12, 2, 1, 6, 1, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwMplsLdpCrlspTnlFrequency.setStatus('current')
hwMplsLdpCrlspTnlWeight = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 12, 2, 1, 6, 1, 1, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwMplsLdpCrlspTnlWeight.setStatus('current')
hwMplsLdpCrlspTnlRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 12, 2, 1, 6, 1, 1, 15), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwMplsLdpCrlspTnlRowStatus.setStatus('current')
hwMplsLdpCrlspErHopTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 12, 2, 1, 6, 2), )
if mibBuilder.loadTexts: hwMplsLdpCrlspErHopTable.setStatus('current')
hwMplsLdpCrlspErHopEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 12, 2, 1, 6, 2, 1), ).setIndexNames((0, "HUAWEI-MPLS-LDP-MIB", "hwMplsLdpLsrIncarnID"), (0, "HUAWEI-MPLS-LDP-MIB", "hwMplsLdpCrlspTnlIndex"), (0, "HUAWEI-MPLS-LDP-MIB", "hwMplsLdpCrlspErHopIndex"))
if mibBuilder.loadTexts: hwMplsLdpCrlspErHopEntry.setStatus('current')
hwMplsLdpCrlspErHopIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 12, 2, 1, 6, 2, 1, 1), Integer32())
if mibBuilder.loadTexts: hwMplsLdpCrlspErHopIndex.setStatus('current')
hwMplsLdpCrlspErHopAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 12, 2, 1, 6, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("ipV4", 1))).clone('ipV4')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwMplsLdpCrlspErHopAddrType.setStatus('current')
hwMplsLdpCrlspErHopIpv4Addr = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 12, 2, 1, 6, 2, 1, 3), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwMplsLdpCrlspErHopIpv4Addr.setStatus('current')
hwMplsLdpCrlspErHopIpv4PrefixLen = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 12, 2, 1, 6, 2, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwMplsLdpCrlspErHopIpv4PrefixLen.setStatus('current')
hwMplsLdpCrlspErHopStrictOrLoose = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 12, 2, 1, 6, 2, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("strict", 1), ("loose", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwMplsLdpCrlspErHopStrictOrLoose.setStatus('current')
hwMplsLdpCrlspErHopRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 12, 2, 1, 6, 2, 1, 6), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwMplsLdpCrlspErHopRowStatus.setStatus('current')
hwMplsLdpNotificationPrefix = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 12, 2, 2, 0))
hwMplsLdpFailedInitSessionThresholdExceeded = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 12, 2, 2, 0, 1)).setObjects(("HUAWEI-MPLS-LDP-MIB", "hwMplsLdpLsrIncarnID"), ("HUAWEI-MPLS-LDP-MIB", "hwMplsLdpEntityID"), ("HUAWEI-MPLS-LDP-MIB", "hwMplsLdpEntityFailedInitSessionThreshold"))
if mibBuilder.loadTexts: hwMplsLdpFailedInitSessionThresholdExceeded.setStatus('current')
hwMplsLdpCrlspTunnelUp = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 12, 2, 2, 0, 2)).setObjects(("HUAWEI-MPLS-LDP-MIB", "hwMplsLdpLsrIncarnID"), ("HUAWEI-MPLS-LDP-MIB", "hwMplsLdpEntityID"), ("HUAWEI-MPLS-LDP-MIB", "hwMplsLdpCrlspTnlIndex"))
if mibBuilder.loadTexts: hwMplsLdpCrlspTunnelUp.setStatus('current')
hwMplsLdpCrlspTunnelDown = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 12, 2, 2, 0, 3)).setObjects(("HUAWEI-MPLS-LDP-MIB", "hwMplsLdpLsrIncarnID"), ("HUAWEI-MPLS-LDP-MIB", "hwMplsLdpEntityID"), ("HUAWEI-MPLS-LDP-MIB", "hwMplsLdpCrlspTnlIndex"))
if mibBuilder.loadTexts: hwMplsLdpCrlspTunnelDown.setStatus('current')
hwMplsLdpCrlspTunnelSetupFailure = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 12, 2, 2, 0, 4)).setObjects(("HUAWEI-MPLS-LDP-MIB", "hwMplsLdpLsrIncarnID"), ("HUAWEI-MPLS-LDP-MIB", "hwMplsLdpEntityID"), ("HUAWEI-MPLS-LDP-MIB", "hwMplsLdpCrlspTnlIndex"))
if mibBuilder.loadTexts: hwMplsLdpCrlspTunnelSetupFailure.setStatus('current')
hwMplsLdpIncarnUpEventFailure = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 12, 2, 2, 0, 11)).setObjects(("HUAWEI-MPLS-LDP-MIB", "hwMplsLdpLsrIncarnID"))
if mibBuilder.loadTexts: hwMplsLdpIncarnUpEventFailure.setStatus('current')
hwMplsLdpIncarnDownEventFailure = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 12, 2, 2, 0, 12)).setObjects(("HUAWEI-MPLS-LDP-MIB", "hwMplsLdpLsrIncarnID"))
if mibBuilder.loadTexts: hwMplsLdpIncarnDownEventFailure.setStatus('current')
hwMplsLdpEntityUpEventFailure = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 12, 2, 2, 0, 13)).setObjects(("HUAWEI-MPLS-LDP-MIB", "hwMplsLdpLsrIncarnID"), ("HUAWEI-MPLS-LDP-MIB", "hwMplsLdpEntityID"))
if mibBuilder.loadTexts: hwMplsLdpEntityUpEventFailure.setStatus('current')
hwMplsLdpEntityDownEventFailure = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 12, 2, 2, 0, 14)).setObjects(("HUAWEI-MPLS-LDP-MIB", "hwMplsLdpLsrIncarnID"), ("HUAWEI-MPLS-LDP-MIB", "hwMplsLdpEntityID"))
if mibBuilder.loadTexts: hwMplsLdpEntityDownEventFailure.setStatus('current')
hwMplsLdpSessionUpEventFailure = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 12, 2, 2, 0, 15)).setObjects(("HUAWEI-MPLS-LDP-MIB", "hwMplsLdpSessionID"), ("HUAWEI-MPLS-LDP-MIB", "hwMplsLdpSessionState"))
if mibBuilder.loadTexts: hwMplsLdpSessionUpEventFailure.setStatus('current')
hwMplsLdpSessionDownEventFailure = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 12, 2, 2, 0, 16)).setObjects(("HUAWEI-MPLS-LDP-MIB", "hwMplsLdpSessionID"), ("HUAWEI-MPLS-LDP-MIB", "hwMplsLdpSessionState"))
if mibBuilder.loadTexts: hwMplsLdpSessionDownEventFailure.setStatus('current')
mibBuilder.exportSymbols("HUAWEI-MPLS-LDP-MIB", hwMplsLdpCrlspTnlSetupPrio=hwMplsLdpCrlspTnlSetupPrio, hwMplsLdpLsrLoopDetectionAdminStatus=hwMplsLdpLsrLoopDetectionAdminStatus, hwMplsLdpCrlspTunnelDown=hwMplsLdpCrlspTunnelDown, BitRate=BitRate, MplsLsrIdentifier=MplsLsrIdentifier, hwMplsLdpEntityConfAtmLabelRangeLowerBoundVCI=hwMplsLdpEntityConfAtmLabelRangeLowerBoundVCI, hwMplsLdpPeerConfAtmLabelRangeLowerBoundVPI=hwMplsLdpPeerConfAtmLabelRangeLowerBoundVPI, hwMplsLdpCrlspTnlEntry=hwMplsLdpCrlspTnlEntry, hwMplsLdpCrlspTnlObjects=hwMplsLdpCrlspTnlObjects, hwMplsLdpLsrPathVectorLimit=hwMplsLdpLsrPathVectorLimit, hwMplsLdpNotificationPrefix=hwMplsLdpNotificationPrefix, hwMplsLdpEntityConfAtmLabelRangeTable=hwMplsLdpEntityConfAtmLabelRangeTable, hwMplsLdpPeerConfAtmLabelRangeUpperBoundVPI=hwMplsLdpPeerConfAtmLabelRangeUpperBoundVPI, hwMplsLdpCrlspErHopStrictOrLoose=hwMplsLdpCrlspErHopStrictOrLoose, hwMplsLdpEntityIfEntry=hwMplsLdpEntityIfEntry, BurstSize=BurstSize, hwMplsLdpSessionState=hwMplsLdpSessionState, hwMplsLdpCrlspTnlRowStatus=hwMplsLdpCrlspTnlRowStatus, hwMplsLdpLsrRequestRetrytimerValue=hwMplsLdpLsrRequestRetrytimerValue, hwMplsLdpEntityUnlabTrafVci=hwMplsLdpEntityUnlabTrafVci, hwMplsLdpPeerLabelDistributionMethod=hwMplsLdpPeerLabelDistributionMethod, hwMplsLdpLsrIncarnEntry=hwMplsLdpLsrIncarnEntry, hwMplsLdpPeerTable=hwMplsLdpPeerTable, hwMplsLdpLsrMaxLocalPeers=hwMplsLdpLsrMaxLocalPeers, hwMplsLdpSessionEntry=hwMplsLdpSessionEntry, hwMplsLdpLsrLabelRetentionMode=hwMplsLdpLsrLabelRetentionMode, hwMplsLdpSessionDownEventFailure=hwMplsLdpSessionDownEventFailure, MplsLdpGenAddr=MplsLdpGenAddr, hwMplsLdpPeerRowStatus=hwMplsLdpPeerRowStatus, hwMplsLdpCrlspTnlFrequency=hwMplsLdpCrlspTnlFrequency, hwMplsLdpObjects=hwMplsLdpObjects, hwMplsLdpEntityIfIndex=hwMplsLdpEntityIfIndex, hwMplsLdpLsrMaxRemotePeers=hwMplsLdpLsrMaxRemotePeers, hwMplsLdpLsrLoopPreventionPresent=hwMplsLdpLsrLoopPreventionPresent, hwMplsLdpEntityVcDirectionality=hwMplsLdpEntityVcDirectionality, hwMplsLdpCrlspTnlSignallingProto=hwMplsLdpCrlspTnlSignallingProto, hwMplsLdpCrlspTnlPeakBurstSize=hwMplsLdpCrlspTnlPeakBurstSize, hwMplsLdpLsrLoopDetectionPresent=hwMplsLdpLsrLoopDetectionPresent, hwMplsLdpCrlspErHopRowStatus=hwMplsLdpCrlspErHopRowStatus, hwMplsLdpEntityLabelDistributionMethod=hwMplsLdpEntityLabelDistributionMethod, hwMplsLdpSessionAtmLabelRangeUpperBoundVCI=hwMplsLdpSessionAtmLabelRangeUpperBoundVCI, hwMplsLdpLsrHopCountLimit=hwMplsLdpLsrHopCountLimit, hwMplsLdpCrlspTnlCommittedDataRate=hwMplsLdpCrlspTnlCommittedDataRate, hwMplsLdpEntityLabelSpaceType=hwMplsLdpEntityLabelSpaceType, hwMplsLdpCrlspTnlPeakDataRate=hwMplsLdpCrlspTnlPeakDataRate, hwMplsLdpPeerInternetworkAddrType=hwMplsLdpPeerInternetworkAddrType, hwMplsLdpEntityWellKnownDiscoveryPort=hwMplsLdpEntityWellKnownDiscoveryPort, hwMplsLdpPeerConfAtmLabelRangeLowerBoundVCI=hwMplsLdpPeerConfAtmLabelRangeLowerBoundVCI, hwMplsLdpSessionID=hwMplsLdpSessionID, hwMplsLdpCrlspTnlIndex=hwMplsLdpCrlspTnlIndex, hwMplsLdpCrlspErHopAddrType=hwMplsLdpCrlspErHopAddrType, hwMplsLdpIncarnUpEventFailure=hwMplsLdpIncarnUpEventFailure, hwMplsLdpPeerConfAtmLabelRangeTable=hwMplsLdpPeerConfAtmLabelRangeTable, hwMplsLdpCrlspTnlExcessBurstSize=hwMplsLdpCrlspTnlExcessBurstSize, hwMplsLdpLsrLoopPreventionAdminStatus=hwMplsLdpLsrLoopPreventionAdminStatus, DisplayString=DisplayString, hwMplsLdpLsrIncarnID=hwMplsLdpLsrIncarnID, hwMplsLdpHelloAdjacencyHoldTimeRemaining=hwMplsLdpHelloAdjacencyHoldTimeRemaining, hwMplsLdpEntityMergeCapability=hwMplsLdpEntityMergeCapability, hwMplsLdpEntityConfAtmLabelRangeUpperBoundVCI=hwMplsLdpEntityConfAtmLabelRangeUpperBoundVCI, hwMplsLdpPeerObjects=hwMplsLdpPeerObjects, hwMplsLdpLsrRowStatus=hwMplsLdpLsrRowStatus, hwMplsLdpLsrIncarnTable=hwMplsLdpLsrIncarnTable, hwMplsLdpCrlspTnlIsPinned=hwMplsLdpCrlspTnlIsPinned, hwMplsLdpAttemptedSessions=hwMplsLdpAttemptedSessions, hwMplsLdpEntityConfAtmLabelRangeUpperBoundVPI=hwMplsLdpEntityConfAtmLabelRangeUpperBoundVPI, hwMplsLdpEntityMtu=hwMplsLdpEntityMtu, PYSNMP_MODULE_ID=hwMplsLdp, hwMplsLdpPeerDefaultMtu=hwMplsLdpPeerDefaultMtu, hwMplsLdpIncarnDownEventFailure=hwMplsLdpIncarnDownEventFailure, hwMplsLdpLsrObjects=hwMplsLdpLsrObjects, hwMplsLdpEntityKeepAliveHoldTimer=hwMplsLdpEntityKeepAliveHoldTimer, hwMplsLdpEntityRowStatus=hwMplsLdpEntityRowStatus, hwMplsLdpSessionObjects=hwMplsLdpSessionObjects, hwMplsLdpSessionAtmLabelRangeLowerBoundVPI=hwMplsLdpSessionAtmLabelRangeLowerBoundVPI, hwMplsLdpEntityUnlabTrafVpi=hwMplsLdpEntityUnlabTrafVpi, AddressFamilyNumbers=AddressFamilyNumbers, hwMplsLdpCrlspErHopTable=hwMplsLdpCrlspErHopTable, hwMplsLdpHelloAdjacencyObjects=hwMplsLdpHelloAdjacencyObjects, hwMplsLdpLsrMaxCrlspTnls=hwMplsLdpLsrMaxCrlspTnls, AtmVcIdentifier=AtmVcIdentifier, hwMplsLdpHelloAdjacencyIndex=hwMplsLdpHelloAdjacencyIndex, hwMplsLdpEntityDefVpi=hwMplsLdpEntityDefVpi, hwMplsLdpEntityFailedInitSessionThreshold=hwMplsLdpEntityFailedInitSessionThreshold, hwMplsLdpPeerConfAtmLabelRangeEntry=hwMplsLdpPeerConfAtmLabelRangeEntry, hwMplsLdpSessionRole=hwMplsLdpSessionRole, AtmVpIdentifier=AtmVpIdentifier, hwMplsLdpHelloAdjacencyEntry=hwMplsLdpHelloAdjacencyEntry, hwMplsLdpEntityObjects=hwMplsLdpEntityObjects, hwMplsLdpPeerConfAtmLabelRangeUpperBoundVCI=hwMplsLdpPeerConfAtmLabelRangeUpperBoundVCI, hwMplsLdpPeerInternetworkAddr=hwMplsLdpPeerInternetworkAddr, hwMplsLdpEntityStatsEntry=hwMplsLdpEntityStatsEntry, hwMplsLdpCrlspTnlCommittedBurstSize=hwMplsLdpCrlspTnlCommittedBurstSize, hwMplsLdpCrlspTnlTable=hwMplsLdpCrlspTnlTable, hwMplsLdpCrlspTnlHoldingPrio=hwMplsLdpCrlspTnlHoldingPrio, hwMplsLdpEntityConfAtmLabelRangeRowStatus=hwMplsLdpEntityConfAtmLabelRangeRowStatus, MplsLdpIdentifier=MplsLdpIdentifier, hwMplsLdpPeerIndex=hwMplsLdpPeerIndex, hwMplsLdpSessionAtmLabelRangeUpperBoundVPI=hwMplsLdpSessionAtmLabelRangeUpperBoundVPI, hwMplsLdpEntityDefVci=hwMplsLdpEntityDefVci, hwMplsLdpNotifications=hwMplsLdpNotifications, hwMplsLdpPeerKeepAliveHoldTimer=hwMplsLdpPeerKeepAliveHoldTimer, hwMplsLdpEntityID=hwMplsLdpEntityID, hwMplsLdpCrlspErHopIndex=hwMplsLdpCrlspErHopIndex, hwMplsLdpEntityConfAtmLabelRangeEntry=hwMplsLdpEntityConfAtmLabelRangeEntry, hwMplsLdpEntityUpEventFailure=hwMplsLdpEntityUpEventFailure, hwMplsLdpPeerEntry=hwMplsLdpPeerEntry, hwMplsLdpEntityTable=hwMplsLdpEntityTable, hwMplsLdp=hwMplsLdp, hwMplsLdpSessionAtmLabelRangeLowerBoundVCI=hwMplsLdpSessionAtmLabelRangeLowerBoundVCI, hwMplsLdpEntityEntry=hwMplsLdpEntityEntry, hwMplsLdpCrlspTnlDirection=hwMplsLdpCrlspTnlDirection, hwMplsLdpCrlspErHopIpv4Addr=hwMplsLdpCrlspErHopIpv4Addr, hwMplsLdpPeerType=hwMplsLdpPeerType, hwMplsLdpCrlspTnlWeight=hwMplsLdpCrlspTnlWeight, hwMplsLdpSessionTable=hwMplsLdpSessionTable, hwMplsLdpHelloAdjacencyTable=hwMplsLdpHelloAdjacencyTable, hwMplsLdpSessionKeepAliveHoldTimeRemaining=hwMplsLdpSessionKeepAliveHoldTimeRemaining, hwMplsLdpEntityConfAtmLabelRangeLowerBoundVPI=hwMplsLdpEntityConfAtmLabelRangeLowerBoundVPI, hwMplsLdpEntityStatsTable=hwMplsLdpEntityStatsTable, hwMplsLdpFailedInitSessionThresholdExceeded=hwMplsLdpFailedInitSessionThresholdExceeded, hwMplsLdpSessionUpEventFailure=hwMplsLdpSessionUpEventFailure, hwMplsLdpEntityIfRowStatus=hwMplsLdpEntityIfRowStatus, hwMplsLdpLsrMaxIfaces=hwMplsLdpLsrMaxIfaces, hwMplsLdpLsrVcmPathVecInAllLblMapPresent=hwMplsLdpLsrVcmPathVecInAllLblMapPresent, PhysAddress=PhysAddress, hwMplsLdpLsrID=hwMplsLdpLsrID, hwMplsLdpCrlspErHopEntry=hwMplsLdpCrlspErHopEntry, hwMplsLdpLsrMaxLsps=hwMplsLdpLsrMaxLsps, hwMplsLdpCrlspTnlName=hwMplsLdpCrlspTnlName, hwMplsLdpCrlspTunnelSetupFailure=hwMplsLdpCrlspTunnelSetupFailure, hwMplsLdpEntityLabelAllocationMethod=hwMplsLdpEntityLabelAllocationMethod, MplsTunnelIndex=MplsTunnelIndex, hwMplsLdpEntityIfIpv4Address=hwMplsLdpEntityIfIpv4Address, hwMplsLdpLsrMaxVcmCapability=hwMplsLdpLsrMaxVcmCapability, hwMplsLdpEntityIfTable=hwMplsLdpEntityIfTable, hwMplsLdpPeerID=hwMplsLdpPeerID, hwMplsLdpLsrMaxLdpEntities=hwMplsLdpLsrMaxLdpEntities, hwMplsLdpCrlspErHopIpv4PrefixLen=hwMplsLdpCrlspErHopIpv4PrefixLen, hwMplsLdpSessionIndex=hwMplsLdpSessionIndex, MplsLabel=MplsLabel, hwMplsLdpLsrMaxErhopPerCrlspTnl=hwMplsLdpLsrMaxErhopPerCrlspTnl, hwMplsLdpEntityHelloHoldTimer=hwMplsLdpEntityHelloHoldTimer, hwMplsLdpLsrNumOfRequestRetryAttempts=hwMplsLdpLsrNumOfRequestRetryAttempts, hwMplsLdpEntityDownEventFailure=hwMplsLdpEntityDownEventFailure, hwMplsLdpCrlspTunnelUp=hwMplsLdpCrlspTunnelUp, hwMplsLdpSessionProtocolVersion=hwMplsLdpSessionProtocolVersion)
