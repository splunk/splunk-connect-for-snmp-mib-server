#
# PySNMP MIB module INTEL-ISDN-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/INTEL-ISDN-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:43:11 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ConstraintsIntersection, ConstraintsUnion, ValueRangeConstraint, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ConstraintsIntersection", "ConstraintsUnion", "ValueRangeConstraint", "ValueSizeConstraint")
mib2ext, = mibBuilder.importSymbols("INTEL-GEN-MIB", "mib2ext")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
iso, ModuleIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter32, Gauge32, NotificationType, MibIdentifier, TimeTicks, Bits, Counter64, ObjectIdentity, Unsigned32, Integer32, IpAddress = mibBuilder.importSymbols("SNMPv2-SMI", "iso", "ModuleIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter32", "Gauge32", "NotificationType", "MibIdentifier", "TimeTicks", "Bits", "Counter64", "ObjectIdentity", "Unsigned32", "Integer32", "IpAddress")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
isdn = MibIdentifier((1, 3, 6, 1, 4, 1, 343, 6, 29))
isdnSigChan = MibIdentifier((1, 3, 6, 1, 4, 1, 343, 6, 29, 1))
isdnDchan = MibIdentifier((1, 3, 6, 1, 4, 1, 343, 6, 29, 2))
isdnPhys = MibIdentifier((1, 3, 6, 1, 4, 1, 343, 6, 29, 3))
isdnCallCtrl = MibIdentifier((1, 3, 6, 1, 4, 1, 343, 6, 29, 4))
isdnSigChanTable = MibTable((1, 3, 6, 1, 4, 1, 343, 6, 29, 1, 1), )
if mibBuilder.loadTexts: isdnSigChanTable.setStatus('mandatory')
isdnSigChanEntry = MibTableRow((1, 3, 6, 1, 4, 1, 343, 6, 29, 1, 1, 1), ).setIndexNames((0, "INTEL-ISDN-MIB", "isdnSigChanIfIndex"))
if mibBuilder.loadTexts: isdnSigChanEntry.setStatus('mandatory')
isdnSigChanIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 29, 1, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: isdnSigChanIfIndex.setStatus('mandatory')
isdnSigChanL2State = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 29, 1, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("teiUnassigned", 1), ("assignAwaitTei", 2), ("establishAwaitTei", 3), ("teiAssigned", 4), ("awaitEstablishment", 5), ("awaitRelease", 6), ("multipleFrameEstablished", 7), ("timerRecovery", 8)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: isdnSigChanL2State.setStatus('mandatory')
isdnSigChanCES = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 29, 1, 1, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: isdnSigChanCES.setStatus('mandatory')
isdnSigChanSAPI = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 29, 1, 1, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: isdnSigChanSAPI.setStatus('mandatory')
isdnSigChanCallCollisions = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 29, 1, 1, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: isdnSigChanCallCollisions.setStatus('mandatory')
isdnSigChanAddressCheckFails = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 29, 1, 1, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: isdnSigChanAddressCheckFails.setStatus('mandatory')
isdnDchanTable = MibTable((1, 3, 6, 1, 4, 1, 343, 6, 29, 2, 1), )
if mibBuilder.loadTexts: isdnDchanTable.setStatus('mandatory')
isdnDchanEntry = MibTableRow((1, 3, 6, 1, 4, 1, 343, 6, 29, 2, 1, 1), ).setIndexNames((0, "INTEL-ISDN-MIB", "isdnDchanIfIndex"))
if mibBuilder.loadTexts: isdnDchanEntry.setStatus('mandatory')
isdnDchanIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 29, 2, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: isdnDchanIfIndex.setStatus('mandatory')
isdnDchanRxShort = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 29, 2, 1, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: isdnDchanRxShort.setStatus('mandatory')
isdnDchanRxLong = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 29, 2, 1, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: isdnDchanRxLong.setStatus('mandatory')
isdnDchanRxCRCerror = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 29, 2, 1, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: isdnDchanRxCRCerror.setStatus('mandatory')
isdnDchanRxResidual = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 29, 2, 1, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: isdnDchanRxResidual.setStatus('mandatory')
isdnDchanRxAborts = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 29, 2, 1, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: isdnDchanRxAborts.setStatus('mandatory')
isdnDchanRxOverrun = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 29, 2, 1, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: isdnDchanRxOverrun.setStatus('mandatory')
isdnDchanRxLostSync = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 29, 2, 1, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: isdnDchanRxLostSync.setStatus('mandatory')
isdnDchanRxBufferLack = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 29, 2, 1, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: isdnDchanRxBufferLack.setStatus('mandatory')
isdnDchanRxApplnotready = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 29, 2, 1, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: isdnDchanRxApplnotready.setStatus('mandatory')
isdnDchanRxUnknownProto = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 29, 2, 1, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: isdnDchanRxUnknownProto.setStatus('mandatory')
isdnDchanTxDiscardedProto = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 29, 2, 1, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: isdnDchanTxDiscardedProto.setStatus('mandatory')
isdnDchanTxDiscardedData = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 29, 2, 1, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: isdnDchanTxDiscardedData.setStatus('mandatory')
isdnDchanTxUnderrun = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 29, 2, 1, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: isdnDchanTxUnderrun.setStatus('mandatory')
isdnDchanTxCollision = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 29, 2, 1, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: isdnDchanTxCollision.setStatus('mandatory')
isdnPhysTable = MibTable((1, 3, 6, 1, 4, 1, 343, 6, 29, 3, 1), )
if mibBuilder.loadTexts: isdnPhysTable.setStatus('mandatory')
isdnPhysEntry = MibTableRow((1, 3, 6, 1, 4, 1, 343, 6, 29, 3, 1, 1), ).setIndexNames((0, "INTEL-ISDN-MIB", "isdnPhysIfIndex"))
if mibBuilder.loadTexts: isdnPhysEntry.setStatus('mandatory')
isdnPhysIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 29, 3, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: isdnPhysIfIndex.setStatus('mandatory')
isdnPhysL1State = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 29, 3, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 100, 101, 102, 103, 104, 105, 106, 107, 108))).clone(namedValues=NamedValues(("inactive", 1), ("sensing", 2), ("deactivated", 3), ("awaitingSignal", 4), ("identifyingInput", 5), ("synchronized", 6), ("activated", 7), ("lostFraming", 8), ("lossOfPower", 100), ("operational", 101), ("fault1", 102), ("fault2", 103), ("fault3", 104), ("fault4", 105), ("powerOn", 106), ("incomingCall", 107), ("testing", 108)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: isdnPhysL1State.setStatus('mandatory')
isdnPhysL1Alarm = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 29, 3, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13))).clone(namedValues=NamedValues(("noCableInserted", 1), ("lossOfSignal", 2), ("txCableNotConnected", 3), ("alarmIndicationSignal", 4), ("remoteAlarmIndication", 5), ("noMultiFrameAlignment", 6), ("noBasicFrameAlignment", 7), ("noSyncPattern", 8), ("ncrc4", 9), ("crce0", 10), ("crce1", 11), ("ebit0", 12), ("ebit1", 13)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: isdnPhysL1Alarm.setStatus('mandatory')
isdnCallCtrlTable = MibTable((1, 3, 6, 1, 4, 1, 343, 6, 29, 4, 1), )
if mibBuilder.loadTexts: isdnCallCtrlTable.setStatus('mandatory')
isdnCallCtrlEntry = MibTableRow((1, 3, 6, 1, 4, 1, 343, 6, 29, 4, 1, 1), ).setIndexNames((0, "INTEL-ISDN-MIB", "isdnCallCtrlSigchanIfIndex"))
if mibBuilder.loadTexts: isdnCallCtrlEntry.setStatus('mandatory')
isdnCallCtrlSigchanIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 29, 4, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: isdnCallCtrlSigchanIfIndex.setStatus('mandatory')
isdnCallCtrlBchanIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 29, 4, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: isdnCallCtrlBchanIfIndex.setStatus('mandatory')
isdnCallCtrlLocalNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 29, 4, 1, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(22, 22)).setFixedLength(22)).setMaxAccess("readonly")
if mibBuilder.loadTexts: isdnCallCtrlLocalNumber.setStatus('mandatory')
isdnCallCtrlLocalSubaddr = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 29, 4, 1, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(14, 14)).setFixedLength(14)).setMaxAccess("readonly")
if mibBuilder.loadTexts: isdnCallCtrlLocalSubaddr.setStatus('mandatory')
isdnCallCtrlRemoteNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 29, 4, 1, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(22, 22)).setFixedLength(22)).setMaxAccess("readonly")
if mibBuilder.loadTexts: isdnCallCtrlRemoteNumber.setStatus('mandatory')
isdnCallCtrlRemoteSubaddr = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 29, 4, 1, 1, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(14, 14)).setFixedLength(14)).setMaxAccess("readonly")
if mibBuilder.loadTexts: isdnCallCtrlRemoteSubaddr.setStatus('mandatory')
isdnCallCtrlL3State = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 29, 4, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47))).clone(namedValues=NamedValues(("callInit", 1), ("overlapSending", 2), ("outCallProc", 3), ("callDelivered", 4), ("undef5", 5), ("callPresent", 6), ("callReceived", 7), ("connectRequest", 8), ("inCallProc", 9), ("callActive", 10), ("disconnectRequest", 11), ("disconnectInd", 12), ("passiveAwaitingConf", 13), ("callPassive", 14), ("suspendRequest", 15), ("undef16", 16), ("resumeRequest", 17), ("undef18", 18), ("releaseRequest", 19), ("registerRequest", 20), ("cancelRequest", 21), ("undef22", 22), ("undef23", 23), ("undef24", 24), ("overlapReceive", 25), ("idleState", 26), ("establishWait", 27), ("asaiTr1State", 28), ("u10HoldRequest", 29), ("u10TransferRequest", 30), ("u10ConferenceRequest", 31), ("u10ReconnectRequest", 32), ("u10AwaitingDisc", 33), ("u10CallOnHold", 34), ("deactivated", 35), ("reactivateRequested", 36), ("deactivateRequested", 37), ("ni1HoldReqU3", 38), ("ni1HoldReqU4", 39), ("ni1HoldReqU10", 40), ("ni1RetrieveU3", 41), ("ni1RetrieveU4", 42), ("ni1RetrieveU10", 43), ("ni1HoldActiveU3", 44), ("ni1HoldActiveU4", 45), ("ni1HoldActiveU10", 46), ("broadcastState", 47)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: isdnCallCtrlL3State.setStatus('mandatory')
isdnCallCtrlCallRef = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 29, 4, 1, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: isdnCallCtrlCallRef.setStatus('mandatory')
isdnCallCtrlChannelNum = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 29, 4, 1, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: isdnCallCtrlChannelNum.setStatus('mandatory')
isdnCallCtrlOutCallsConnected = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 29, 4, 1, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: isdnCallCtrlOutCallsConnected.setStatus('mandatory')
isdnCallCtrlOutCallsFailed = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 29, 4, 1, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: isdnCallCtrlOutCallsFailed.setStatus('mandatory')
isdnCallCtrlInCallsConnected = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 29, 4, 1, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: isdnCallCtrlInCallsConnected.setStatus('mandatory')
isdnCallCtrlInCallsRefused = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 29, 4, 1, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: isdnCallCtrlInCallsRefused.setStatus('mandatory')
isdnCallCtrlCallCollisions = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 29, 4, 1, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: isdnCallCtrlCallCollisions.setStatus('mandatory')
isdnCallCtrlCauseCode = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 29, 4, 1, 1, 15), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: isdnCallCtrlCauseCode.setStatus('mandatory')
isdnCallCtrlLocationCode = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 29, 4, 1, 1, 16), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: isdnCallCtrlLocationCode.setStatus('mandatory')
isdnCallCtrlCauseText = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 29, 4, 1, 1, 17), OctetString().subtype(subtypeSpec=ValueSizeConstraint(100, 100)).setFixedLength(100)).setMaxAccess("readonly")
if mibBuilder.loadTexts: isdnCallCtrlCauseText.setStatus('mandatory')
mibBuilder.exportSymbols("INTEL-ISDN-MIB", isdnDchanRxResidual=isdnDchanRxResidual, isdnPhysTable=isdnPhysTable, isdnDchanTxUnderrun=isdnDchanTxUnderrun, isdnCallCtrl=isdnCallCtrl, isdnCallCtrlBchanIfIndex=isdnCallCtrlBchanIfIndex, isdnSigChanSAPI=isdnSigChanSAPI, isdn=isdn, isdnCallCtrlOutCallsFailed=isdnCallCtrlOutCallsFailed, isdnCallCtrlLocalNumber=isdnCallCtrlLocalNumber, isdnDchanRxBufferLack=isdnDchanRxBufferLack, isdnCallCtrlCallCollisions=isdnCallCtrlCallCollisions, isdnDchanRxShort=isdnDchanRxShort, isdnSigChanCES=isdnSigChanCES, isdnSigChanTable=isdnSigChanTable, isdnDchanRxApplnotready=isdnDchanRxApplnotready, isdnCallCtrlRemoteSubaddr=isdnCallCtrlRemoteSubaddr, isdnCallCtrlL3State=isdnCallCtrlL3State, isdnPhysL1State=isdnPhysL1State, isdnDchanEntry=isdnDchanEntry, isdnDchanRxOverrun=isdnDchanRxOverrun, isdnDchanTxDiscardedData=isdnDchanTxDiscardedData, isdnPhysIfIndex=isdnPhysIfIndex, isdnCallCtrlCauseCode=isdnCallCtrlCauseCode, isdnSigChanL2State=isdnSigChanL2State, isdnCallCtrlLocalSubaddr=isdnCallCtrlLocalSubaddr, isdnCallCtrlCauseText=isdnCallCtrlCauseText, isdnSigChanIfIndex=isdnSigChanIfIndex, isdnCallCtrlInCallsRefused=isdnCallCtrlInCallsRefused, isdnCallCtrlEntry=isdnCallCtrlEntry, isdnSigChanAddressCheckFails=isdnSigChanAddressCheckFails, isdnDchanTxDiscardedProto=isdnDchanTxDiscardedProto, isdnDchanIfIndex=isdnDchanIfIndex, isdnPhys=isdnPhys, isdnCallCtrlCallRef=isdnCallCtrlCallRef, isdnDchan=isdnDchan, isdnSigChanEntry=isdnSigChanEntry, isdnDchanRxLong=isdnDchanRxLong, isdnCallCtrlTable=isdnCallCtrlTable, isdnPhysL1Alarm=isdnPhysL1Alarm, isdnDchanRxCRCerror=isdnDchanRxCRCerror, isdnPhysEntry=isdnPhysEntry, isdnCallCtrlRemoteNumber=isdnCallCtrlRemoteNumber, isdnCallCtrlSigchanIfIndex=isdnCallCtrlSigchanIfIndex, isdnDchanRxUnknownProto=isdnDchanRxUnknownProto, isdnCallCtrlOutCallsConnected=isdnCallCtrlOutCallsConnected, isdnSigChanCallCollisions=isdnSigChanCallCollisions, isdnDchanTxCollision=isdnDchanTxCollision, isdnCallCtrlInCallsConnected=isdnCallCtrlInCallsConnected, isdnCallCtrlLocationCode=isdnCallCtrlLocationCode, isdnDchanRxAborts=isdnDchanRxAborts, isdnCallCtrlChannelNum=isdnCallCtrlChannelNum, isdnDchanRxLostSync=isdnDchanRxLostSync, isdnDchanTable=isdnDchanTable, isdnSigChan=isdnSigChan)
