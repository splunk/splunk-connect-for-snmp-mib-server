#
# PySNMP MIB module EdgeSwitch-POWER-ETHERNET-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/EdgeSwitch-POWER-ETHERNET-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 18:56:34 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ConstraintsIntersection, ValueRangeConstraint, ValueSizeConstraint, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ConstraintsIntersection", "ValueRangeConstraint", "ValueSizeConstraint", "SingleValueConstraint")
fastPath, = mibBuilder.importSymbols("EdgeSwitch-REF-MIB", "fastPath")
pethPsePortEntry, pethMainPseEntry = mibBuilder.importSymbols("POWER-ETHERNET-MIB", "pethPsePortEntry", "pethMainPseEntry")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
TimeTicks, MibScalar, MibTable, MibTableRow, MibTableColumn, ObjectIdentity, NotificationType, ModuleIdentity, iso, Counter64, Unsigned32, MibIdentifier, Gauge32, Bits, Integer32, IpAddress, Counter32 = mibBuilder.importSymbols("SNMPv2-SMI", "TimeTicks", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ObjectIdentity", "NotificationType", "ModuleIdentity", "iso", "Counter64", "Unsigned32", "MibIdentifier", "Gauge32", "Bits", "Integer32", "IpAddress", "Counter32")
TextualConvention, TruthValue, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "TruthValue", "DisplayString")
fastPathpowerEthernetMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 4413, 1, 1, 15))
fastPathpowerEthernetMIB.setRevisions(('2015-03-13 00:00', '2014-04-16 00:00', '2011-01-26 00:00', '2007-08-19 12:00', '2007-05-23 00:00', '2003-11-10 12:00',))
if mibBuilder.loadTexts: fastPathpowerEthernetMIB.setLastUpdated('201503130000Z')
if mibBuilder.loadTexts: fastPathpowerEthernetMIB.setOrganization('Broadcom Inc')
agentPethObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 4413, 1, 1, 15, 1))
agentPethPsePortTable = MibTable((1, 3, 6, 1, 4, 1, 4413, 1, 1, 15, 1, 1), )
if mibBuilder.loadTexts: agentPethPsePortTable.setStatus('current')
agentPethPsePortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4413, 1, 1, 15, 1, 1, 1), )
pethPsePortEntry.registerAugmentions(("EdgeSwitch-POWER-ETHERNET-MIB", "agentPethPsePortEntry"))
agentPethPsePortEntry.setIndexNames(*pethPsePortEntry.getIndexNames())
if mibBuilder.loadTexts: agentPethPsePortEntry.setStatus('current')
agentPethPowerLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 15, 1, 1, 1, 1), Gauge32()).setUnits('Milliwatts').setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentPethPowerLimit.setStatus('current')
agentPethOutputPower = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 15, 1, 1, 1, 2), Gauge32()).setUnits('Milliwatts').setMaxAccess("readonly")
if mibBuilder.loadTexts: agentPethOutputPower.setStatus('current')
agentPethOutputCurrent = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 15, 1, 1, 1, 3), Gauge32()).setUnits('Milliamps').setMaxAccess("readonly")
if mibBuilder.loadTexts: agentPethOutputCurrent.setStatus('current')
agentPethOutputVolts = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 15, 1, 1, 1, 4), Gauge32()).setUnits('Volts').setMaxAccess("readonly")
if mibBuilder.loadTexts: agentPethOutputVolts.setStatus('current')
agentPethTemperature = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 15, 1, 1, 1, 5), Gauge32()).setUnits('DEGREES').setMaxAccess("readonly")
if mibBuilder.loadTexts: agentPethTemperature.setStatus('obsolete')
agentPethPowerLimitType = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 15, 1, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("dot3af", 1), ("user", 2), ("none", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentPethPowerLimitType.setStatus('current')
agentPethHighPowerEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 15, 1, 1, 1, 7), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentPethHighPowerEnable.setStatus('current')
agentPethPowerDetectionType = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 15, 1, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("none", 0), ("legacy", 1), ("fourPtdot3afonly", 2), ("fourPtdot3afandlegacy", 3), ("twoPtdot3afonly", 4), ("twoPtdot3afandlegacy", 5)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentPethPowerDetectionType.setStatus('current')
agentPethFaultStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 15, 1, 1, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("none", 0), ("mpsAbsent", 1), ("short", 2), ("overload", 3), ("powerDenied", 4), ("thermalShutdown", 5), ("startupFailure", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentPethFaultStatus.setStatus('current')
agentPethPortReset = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 15, 1, 1, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("none", 0), ("reset", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentPethPortReset.setStatus('current')
agentPethPowerLimitMin = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 15, 1, 1, 1, 11), Gauge32()).setUnits('Milliwatts').setMaxAccess("readonly")
if mibBuilder.loadTexts: agentPethPowerLimitMin.setStatus('current')
agentPethPowerLimitMax = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 15, 1, 1, 1, 12), Gauge32()).setUnits('Milliwatts').setMaxAccess("readonly")
if mibBuilder.loadTexts: agentPethPowerLimitMax.setStatus('current')
agentPethMainPseObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 4413, 1, 1, 15, 1, 2))
agentPethMainPseTable = MibTable((1, 3, 6, 1, 4, 1, 4413, 1, 1, 15, 1, 2, 1), )
if mibBuilder.loadTexts: agentPethMainPseTable.setStatus('current')
agentPethMainPseEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4413, 1, 1, 15, 1, 2, 1, 1), )
pethMainPseEntry.registerAugmentions(("EdgeSwitch-POWER-ETHERNET-MIB", "agentPethMainPseEntry"))
agentPethMainPseEntry.setIndexNames(*pethMainPseEntry.getIndexNames())
if mibBuilder.loadTexts: agentPethMainPseEntry.setStatus('current')
agentPethMainPseLegacy = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 15, 1, 2, 1, 1, 1), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentPethMainPseLegacy.setStatus('current')
agentPethPseTable = MibTable((1, 3, 6, 1, 4, 1, 4413, 1, 1, 15, 1, 3), )
if mibBuilder.loadTexts: agentPethPseTable.setStatus('current')
agentPethPseEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4413, 1, 1, 15, 1, 3, 1), )
pethMainPseEntry.registerAugmentions(("EdgeSwitch-POWER-ETHERNET-MIB", "agentPethPseEntry"))
agentPethPseEntry.setIndexNames(*pethMainPseEntry.getIndexNames())
if mibBuilder.loadTexts: agentPethPseEntry.setStatus('current')
agentPethPsePowerManagementMode = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 15, 1, 3, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("none", 0), ("dynamic", 1), ("static", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentPethPsePowerManagementMode.setStatus('current')
mibBuilder.exportSymbols("EdgeSwitch-POWER-ETHERNET-MIB", fastPathpowerEthernetMIB=fastPathpowerEthernetMIB, agentPethPowerLimit=agentPethPowerLimit, agentPethPortReset=agentPethPortReset, agentPethPowerLimitMax=agentPethPowerLimitMax, agentPethHighPowerEnable=agentPethHighPowerEnable, agentPethObjects=agentPethObjects, agentPethTemperature=agentPethTemperature, agentPethOutputCurrent=agentPethOutputCurrent, agentPethMainPseLegacy=agentPethMainPseLegacy, agentPethOutputVolts=agentPethOutputVolts, agentPethFaultStatus=agentPethFaultStatus, agentPethPsePowerManagementMode=agentPethPsePowerManagementMode, agentPethMainPseObjects=agentPethMainPseObjects, agentPethMainPseTable=agentPethMainPseTable, agentPethPowerDetectionType=agentPethPowerDetectionType, agentPethMainPseEntry=agentPethMainPseEntry, agentPethPseTable=agentPethPseTable, agentPethPowerLimitMin=agentPethPowerLimitMin, agentPethOutputPower=agentPethOutputPower, agentPethPowerLimitType=agentPethPowerLimitType, agentPethPseEntry=agentPethPseEntry, agentPethPsePortEntry=agentPethPsePortEntry, PYSNMP_MODULE_ID=fastPathpowerEthernetMIB, agentPethPsePortTable=agentPethPsePortTable)
