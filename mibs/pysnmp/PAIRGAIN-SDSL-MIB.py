#
# PySNMP MIB module PAIRGAIN-SDSL-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/PAIRGAIN-SDSL-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 20:27:37 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ValueRangeConstraint, ValueSizeConstraint, ConstraintsUnion, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ValueRangeConstraint", "ValueSizeConstraint", "ConstraintsUnion", "SingleValueConstraint")
ifIndex, = mibBuilder.importSymbols("IF-MIB", "ifIndex")
pgainSDSL, = mibBuilder.importSymbols("PAIRGAIN-COMMON-HD-MIB", "pgainSDSL")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
Unsigned32, ModuleIdentity, Integer32, NotificationType, MibIdentifier, ObjectIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, Bits, IpAddress, TimeTicks, Counter32, Counter64, Gauge32, iso = mibBuilder.importSymbols("SNMPv2-SMI", "Unsigned32", "ModuleIdentity", "Integer32", "NotificationType", "MibIdentifier", "ObjectIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Bits", "IpAddress", "TimeTicks", "Counter32", "Counter64", "Gauge32", "iso")
TruthValue, DisplayString, RowStatus, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "TruthValue", "DisplayString", "RowStatus", "TextualConvention")
pgsdslMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 927, 1, 13, 1))
if mibBuilder.loadTexts: pgsdslMIB.setLastUpdated('9910070000Z')
if mibBuilder.loadTexts: pgsdslMIB.setOrganization('Pairgain Technologies Inc.')
sdslMibObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 927, 1, 13, 1, 1))
class Byte(Integer32):
    subtypeSpec = Integer32.subtypeSpec + ValueRangeConstraint(0, 255)

class Short(Integer32):
    subtypeSpec = Integer32.subtypeSpec + ValueRangeConstraint(0, 65535)

class SdslLineProfileType(Integer32):
    subtypeSpec = Integer32.subtypeSpec + ValueRangeConstraint(0, 65535)

class PgSdslTimeStamp(OctetString):
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(8, 8)
    fixedLength = 8

class PgSdslAlarmSeverityMode(Integer32):
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3))
    namedValues = NamedValues(("disable", 1), ("enable", 2), ("notAvailable", 3))

sdsl15mPerformanceTable = MibTable((1, 3, 6, 1, 4, 1, 927, 1, 13, 1, 1, 1), )
if mibBuilder.loadTexts: sdsl15mPerformanceTable.setStatus('current')
sdsl15mPerformanceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 927, 1, 13, 1, 1, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "PAIRGAIN-SDSL-MIB", "sdsl15mHistoryId"))
if mibBuilder.loadTexts: sdsl15mPerformanceEntry.setStatus('current')
sdsl15mHistoryId = MibTableColumn((1, 3, 6, 1, 4, 1, 927, 1, 13, 1, 1, 1, 1, 1), Short()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdsl15mHistoryId.setStatus('current')
sdsl15mESNet = MibTableColumn((1, 3, 6, 1, 4, 1, 927, 1, 13, 1, 1, 1, 1, 2), Short()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdsl15mESNet.setStatus('current')
sdsl15mUASNet = MibTableColumn((1, 3, 6, 1, 4, 1, 927, 1, 13, 1, 1, 1, 1, 3), Short()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdsl15mUASNet.setStatus('current')
sdsl15mESCust = MibTableColumn((1, 3, 6, 1, 4, 1, 927, 1, 13, 1, 1, 1, 1, 4), Short()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdsl15mESCust.setStatus('current')
sdsl15mUASCust = MibTableColumn((1, 3, 6, 1, 4, 1, 927, 1, 13, 1, 1, 1, 1, 5), Short()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdsl15mUASCust.setStatus('current')
sdsl24hPerformanceTable = MibTable((1, 3, 6, 1, 4, 1, 927, 1, 13, 1, 1, 2), )
if mibBuilder.loadTexts: sdsl24hPerformanceTable.setStatus('current')
sdsl24hPerformanceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 927, 1, 13, 1, 1, 2, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "PAIRGAIN-SDSL-MIB", "sdsl24hHistoryId"))
if mibBuilder.loadTexts: sdsl24hPerformanceEntry.setStatus('current')
sdsl24hHistoryId = MibTableColumn((1, 3, 6, 1, 4, 1, 927, 1, 13, 1, 1, 2, 1, 1), Short()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdsl24hHistoryId.setStatus('current')
sdsl24hESNet = MibTableColumn((1, 3, 6, 1, 4, 1, 927, 1, 13, 1, 1, 2, 1, 2), Short()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdsl24hESNet.setStatus('current')
sdsl24hUASNet = MibTableColumn((1, 3, 6, 1, 4, 1, 927, 1, 13, 1, 1, 2, 1, 3), Short()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdsl24hUASNet.setStatus('current')
sdsl24hESCust = MibTableColumn((1, 3, 6, 1, 4, 1, 927, 1, 13, 1, 1, 2, 1, 4), Short()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdsl24hESCust.setStatus('current')
sdsl24hUASCust = MibTableColumn((1, 3, 6, 1, 4, 1, 927, 1, 13, 1, 1, 2, 1, 5), Short()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdsl24hUASCust.setStatus('current')
sdslCurr24hPerformanceTable = MibTable((1, 3, 6, 1, 4, 1, 927, 1, 13, 1, 1, 3), )
if mibBuilder.loadTexts: sdslCurr24hPerformanceTable.setStatus('current')
sdslCurr24hPerformanceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 927, 1, 13, 1, 1, 3, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: sdslCurr24hPerformanceEntry.setStatus('current')
sdslCurr24hESNet = MibTableColumn((1, 3, 6, 1, 4, 1, 927, 1, 13, 1, 1, 3, 1, 1), Short()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdslCurr24hESNet.setStatus('current')
sdslCurr24hUASNet = MibTableColumn((1, 3, 6, 1, 4, 1, 927, 1, 13, 1, 1, 3, 1, 2), Short()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdslCurr24hUASNet.setStatus('current')
sdslCurr24hESCust = MibTableColumn((1, 3, 6, 1, 4, 1, 927, 1, 13, 1, 1, 3, 1, 3), Short()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdslCurr24hESCust.setStatus('current')
sdslCurr24hUASCust = MibTableColumn((1, 3, 6, 1, 4, 1, 927, 1, 13, 1, 1, 3, 1, 4), Short()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdslCurr24hUASCust.setStatus('current')
sdslStatisticsTable = MibTable((1, 3, 6, 1, 4, 1, 927, 1, 13, 1, 1, 4), )
if mibBuilder.loadTexts: sdslStatisticsTable.setStatus('current')
sdslStatisticsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 927, 1, 13, 1, 1, 4, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: sdslStatisticsEntry.setStatus('current')
sdslTipRingReversal = MibTableColumn((1, 3, 6, 1, 4, 1, 927, 1, 13, 1, 1, 4, 1, 1), Byte()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdslTipRingReversal.setStatus('current')
sdslUpState = MibTableColumn((1, 3, 6, 1, 4, 1, 927, 1, 13, 1, 1, 4, 1, 2), Byte()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdslUpState.setStatus('current')
sdslMarginNet = MibTableColumn((1, 3, 6, 1, 4, 1, 927, 1, 13, 1, 1, 4, 1, 3), Byte()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdslMarginNet.setStatus('current')
sdslMarginHighNet = MibTableColumn((1, 3, 6, 1, 4, 1, 927, 1, 13, 1, 1, 4, 1, 4), Byte()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdslMarginHighNet.setStatus('current')
sdslMarginLowNet = MibTableColumn((1, 3, 6, 1, 4, 1, 927, 1, 13, 1, 1, 4, 1, 5), Byte()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdslMarginLowNet.setStatus('current')
sdslPulseAttenuationNet = MibTableColumn((1, 3, 6, 1, 4, 1, 927, 1, 13, 1, 1, 4, 1, 6), Byte()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdslPulseAttenuationNet.setStatus('current')
sdslMarginCust = MibTableColumn((1, 3, 6, 1, 4, 1, 927, 1, 13, 1, 1, 4, 1, 7), Byte()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdslMarginCust.setStatus('current')
sdslMarginHighCust = MibTableColumn((1, 3, 6, 1, 4, 1, 927, 1, 13, 1, 1, 4, 1, 8), Byte()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdslMarginHighCust.setStatus('current')
sdslMarginLowCust = MibTableColumn((1, 3, 6, 1, 4, 1, 927, 1, 13, 1, 1, 4, 1, 9), Byte()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdslMarginLowCust.setStatus('current')
sdslPulseAttenuationCust = MibTableColumn((1, 3, 6, 1, 4, 1, 927, 1, 13, 1, 1, 4, 1, 10), Byte()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdslPulseAttenuationCust.setStatus('current')
sdslLineTable = MibTable((1, 3, 6, 1, 4, 1, 927, 1, 13, 1, 1, 5), )
if mibBuilder.loadTexts: sdslLineTable.setStatus('current')
sdslLineEntry = MibTableRow((1, 3, 6, 1, 4, 1, 927, 1, 13, 1, 1, 5, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: sdslLineEntry.setStatus('current')
sdslLineConfProfile = MibTableColumn((1, 3, 6, 1, 4, 1, 927, 1, 13, 1, 1, 5, 1, 1), SdslLineProfileType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sdslLineConfProfile.setStatus('current')
sdslLineAlarmConfProfile = MibTableColumn((1, 3, 6, 1, 4, 1, 927, 1, 13, 1, 1, 5, 1, 2), SdslLineProfileType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sdslLineAlarmConfProfile.setStatus('current')
sdslAlarmTable = MibTable((1, 3, 6, 1, 4, 1, 927, 1, 13, 1, 1, 6), )
if mibBuilder.loadTexts: sdslAlarmTable.setStatus('current')
sdslAlarmEntry = MibTableRow((1, 3, 6, 1, 4, 1, 927, 1, 13, 1, 1, 6, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: sdslAlarmEntry.setStatus('current')
sdslMarginAlarmNet = MibTableColumn((1, 3, 6, 1, 4, 1, 927, 1, 13, 1, 1, 6, 1, 1), Byte()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdslMarginAlarmNet.setStatus('current')
sdslESAlarmNet = MibTableColumn((1, 3, 6, 1, 4, 1, 927, 1, 13, 1, 1, 6, 1, 2), Byte()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdslESAlarmNet.setStatus('current')
sdslUASAlarmNet = MibTableColumn((1, 3, 6, 1, 4, 1, 927, 1, 13, 1, 1, 6, 1, 3), Byte()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdslUASAlarmNet.setStatus('current')
sdslMarginAlarmCust = MibTableColumn((1, 3, 6, 1, 4, 1, 927, 1, 13, 1, 1, 6, 1, 4), Byte()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdslMarginAlarmCust.setStatus('current')
sdslESAlarmCust = MibTableColumn((1, 3, 6, 1, 4, 1, 927, 1, 13, 1, 1, 6, 1, 5), Byte()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdslESAlarmCust.setStatus('current')
sdslUASAlarmCust = MibTableColumn((1, 3, 6, 1, 4, 1, 927, 1, 13, 1, 1, 6, 1, 6), Byte()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdslUASAlarmCust.setStatus('current')
sdslLOSWAlarm = MibTableColumn((1, 3, 6, 1, 4, 1, 927, 1, 13, 1, 1, 6, 1, 7), Byte()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdslLOSWAlarm.setStatus('current')
sdslAlarmHistoryTable = MibTable((1, 3, 6, 1, 4, 1, 927, 1, 13, 1, 1, 7), )
if mibBuilder.loadTexts: sdslAlarmHistoryTable.setStatus('current')
sdslAlarmHistoryEntry = MibTableRow((1, 3, 6, 1, 4, 1, 927, 1, 13, 1, 1, 7, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: sdslAlarmHistoryEntry.setStatus('current')
sdslMarginAlarmFirst = MibTableColumn((1, 3, 6, 1, 4, 1, 927, 1, 13, 1, 1, 7, 1, 1), PgSdslTimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdslMarginAlarmFirst.setStatus('current')
sdslMarginAlarmLast = MibTableColumn((1, 3, 6, 1, 4, 1, 927, 1, 13, 1, 1, 7, 1, 2), PgSdslTimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdslMarginAlarmLast.setStatus('current')
sdslMarginAlarmCount = MibTableColumn((1, 3, 6, 1, 4, 1, 927, 1, 13, 1, 1, 7, 1, 3), Short()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdslMarginAlarmCount.setStatus('current')
sdslESAlarmFirst = MibTableColumn((1, 3, 6, 1, 4, 1, 927, 1, 13, 1, 1, 7, 1, 4), PgSdslTimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdslESAlarmFirst.setStatus('current')
sdslESAlarmLast = MibTableColumn((1, 3, 6, 1, 4, 1, 927, 1, 13, 1, 1, 7, 1, 5), PgSdslTimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdslESAlarmLast.setStatus('current')
sdslESAlarmCount = MibTableColumn((1, 3, 6, 1, 4, 1, 927, 1, 13, 1, 1, 7, 1, 6), Short()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdslESAlarmCount.setStatus('current')
sdslUASAlarmFirst = MibTableColumn((1, 3, 6, 1, 4, 1, 927, 1, 13, 1, 1, 7, 1, 7), PgSdslTimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdslUASAlarmFirst.setStatus('current')
sdslUASAlarmLast = MibTableColumn((1, 3, 6, 1, 4, 1, 927, 1, 13, 1, 1, 7, 1, 8), PgSdslTimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdslUASAlarmLast.setStatus('current')
sdslUASAlarmCount = MibTableColumn((1, 3, 6, 1, 4, 1, 927, 1, 13, 1, 1, 7, 1, 9), Short()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdslUASAlarmCount.setStatus('current')
sdslLOSWAlarmFirst = MibTableColumn((1, 3, 6, 1, 4, 1, 927, 1, 13, 1, 1, 7, 1, 10), PgSdslTimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdslLOSWAlarmFirst.setStatus('current')
sdslLOSWAlarmLast = MibTableColumn((1, 3, 6, 1, 4, 1, 927, 1, 13, 1, 1, 7, 1, 11), PgSdslTimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdslLOSWAlarmLast.setStatus('current')
sdslLOSWAlarmCount = MibTableColumn((1, 3, 6, 1, 4, 1, 927, 1, 13, 1, 1, 7, 1, 12), Short()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdslLOSWAlarmCount.setStatus('current')
sdslLineConfProfileIndexNext = MibScalar((1, 3, 6, 1, 4, 1, 927, 1, 13, 1, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdslLineConfProfileIndexNext.setStatus('current')
sdslLineConfProfileTable = MibTable((1, 3, 6, 1, 4, 1, 927, 1, 13, 1, 1, 9), )
if mibBuilder.loadTexts: sdslLineConfProfileTable.setStatus('current')
sdslLineConfProfileEntry = MibTableRow((1, 3, 6, 1, 4, 1, 927, 1, 13, 1, 1, 9, 1), ).setIndexNames((0, "PAIRGAIN-SDSL-MIB", "sdslLineConfProfileIndex"))
if mibBuilder.loadTexts: sdslLineConfProfileEntry.setStatus('current')
sdslLineConfProfileIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 927, 1, 13, 1, 1, 9, 1, 1), SdslLineProfileType())
if mibBuilder.loadTexts: sdslLineConfProfileIndex.setStatus('current')
sdslRateMode = MibTableColumn((1, 3, 6, 1, 4, 1, 927, 1, 13, 1, 1, 9, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 32000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sdslRateMode.setStatus('current')
sdslRemFeatures = MibTableColumn((1, 3, 6, 1, 4, 1, 927, 1, 13, 1, 1, 9, 1, 3), Short()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sdslRemFeatures.setStatus('current')
sdslRate = MibTableColumn((1, 3, 6, 1, 4, 1, 927, 1, 13, 1, 1, 9, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 32000))).setUnits('kbps').setMaxAccess("readwrite")
if mibBuilder.loadTexts: sdslRate.setStatus('current')
sdslLineConfProfileRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 927, 1, 13, 1, 1, 9, 1, 5), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: sdslLineConfProfileRowStatus.setStatus('current')
sdslLineAlarmConfProfileIndexNext = MibScalar((1, 3, 6, 1, 4, 1, 927, 1, 13, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdslLineAlarmConfProfileIndexNext.setStatus('current')
sdslLineAlarmConfProfileTable = MibTable((1, 3, 6, 1, 4, 1, 927, 1, 13, 1, 1, 11), )
if mibBuilder.loadTexts: sdslLineAlarmConfProfileTable.setStatus('current')
sdslLineAlarmConfProfileEntry = MibTableRow((1, 3, 6, 1, 4, 1, 927, 1, 13, 1, 1, 11, 1), ).setIndexNames((0, "PAIRGAIN-SDSL-MIB", "sdslLineAlarmConfProfileIndex"))
if mibBuilder.loadTexts: sdslLineAlarmConfProfileEntry.setStatus('current')
sdslLineAlarmConfProfileIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 927, 1, 13, 1, 1, 11, 1, 1), SdslLineProfileType())
if mibBuilder.loadTexts: sdslLineAlarmConfProfileIndex.setStatus('current')
sdslLOSWAlarmSetting = MibTableColumn((1, 3, 6, 1, 4, 1, 927, 1, 13, 1, 1, 11, 1, 2), PgSdslAlarmSeverityMode()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sdslLOSWAlarmSetting.setStatus('current')
sdslMarginThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 927, 1, 13, 1, 1, 11, 1, 3), Byte()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sdslMarginThreshold.setStatus('current')
sdslMarginAlarmSetting = MibTableColumn((1, 3, 6, 1, 4, 1, 927, 1, 13, 1, 1, 11, 1, 4), PgSdslAlarmSeverityMode()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sdslMarginAlarmSetting.setStatus('current')
sdslESThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 927, 1, 13, 1, 1, 11, 1, 5), Byte()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sdslESThreshold.setStatus('current')
sdslESAlarmSetting = MibTableColumn((1, 3, 6, 1, 4, 1, 927, 1, 13, 1, 1, 11, 1, 6), PgSdslAlarmSeverityMode()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sdslESAlarmSetting.setStatus('current')
sdslUASThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 927, 1, 13, 1, 1, 11, 1, 7), Byte()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sdslUASThreshold.setStatus('current')
sdslUASAlarmSetting = MibTableColumn((1, 3, 6, 1, 4, 1, 927, 1, 13, 1, 1, 11, 1, 8), PgSdslAlarmSeverityMode()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sdslUASAlarmSetting.setStatus('current')
sdslLineAlarmConfProfileRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 927, 1, 13, 1, 1, 11, 1, 9), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: sdslLineAlarmConfProfileRowStatus.setStatus('current')
pgSdslModGenTable = MibTable((1, 3, 6, 1, 4, 1, 927, 1, 13, 1, 1, 12), )
if mibBuilder.loadTexts: pgSdslModGenTable.setStatus('current')
pgSdslModGenEntry = MibTableRow((1, 3, 6, 1, 4, 1, 927, 1, 13, 1, 1, 12, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: pgSdslModGenEntry.setStatus('current')
pgSdslModGenVersionNum = MibTableColumn((1, 3, 6, 1, 4, 1, 927, 1, 13, 1, 1, 12, 1, 1), Byte()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pgSdslModGenVersionNum.setStatus('current')
pgSdslModGenListNum = MibTableColumn((1, 3, 6, 1, 4, 1, 927, 1, 13, 1, 1, 12, 1, 2), Byte()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pgSdslModGenListNum.setStatus('current')
pgSdslModGenVendNum = MibTableColumn((1, 3, 6, 1, 4, 1, 927, 1, 13, 1, 1, 12, 1, 3), Byte()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pgSdslModGenVendNum.setStatus('current')
pgSdslModGenFeatures = MibTableColumn((1, 3, 6, 1, 4, 1, 927, 1, 13, 1, 1, 12, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pgSdslModGenFeatures.setStatus('current')
pgSdslModGenSerialNum = MibTableColumn((1, 3, 6, 1, 4, 1, 927, 1, 13, 1, 1, 12, 1, 5), Short()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pgSdslModGenSerialNum.setStatus('current')
pgSdslModGenMfgDate = MibTableColumn((1, 3, 6, 1, 4, 1, 927, 1, 13, 1, 1, 12, 1, 6), Short()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pgSdslModGenMfgDate.setStatus('current')
pgSdslModStatTable = MibTable((1, 3, 6, 1, 4, 1, 927, 1, 13, 1, 1, 13), )
if mibBuilder.loadTexts: pgSdslModStatTable.setStatus('current')
pgSdslModStatEntry = MibTableRow((1, 3, 6, 1, 4, 1, 927, 1, 13, 1, 1, 13, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: pgSdslModStatEntry.setStatus('current')
pgSdslModEthOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 927, 1, 13, 1, 1, 13, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("testing", 3), ("unknown", 4), ("dormant", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pgSdslModEthOperStatus.setStatus('current')
pgSdslModEthInOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 927, 1, 13, 1, 1, 13, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pgSdslModEthInOctets.setStatus('current')
pgSdslModEthInUcastPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 927, 1, 13, 1, 1, 13, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pgSdslModEthInUcastPkts.setStatus('current')
pgSdslModEthInNUcastPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 927, 1, 13, 1, 1, 13, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pgSdslModEthInNUcastPkts.setStatus('current')
pgSdslModEthInDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 927, 1, 13, 1, 1, 13, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pgSdslModEthInDiscards.setStatus('current')
pgSdslModEthInErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 927, 1, 13, 1, 1, 13, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pgSdslModEthInErrors.setStatus('current')
pgSdslModEthOutOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 927, 1, 13, 1, 1, 13, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pgSdslModEthOutOctets.setStatus('current')
pgSdslModEthOutUcastPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 927, 1, 13, 1, 1, 13, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pgSdslModEthOutUcastPkts.setStatus('current')
pgSdslModEthOutNUcastPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 927, 1, 13, 1, 1, 13, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pgSdslModEthOutNUcastPkts.setStatus('current')
pgSdslModEthOutErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 927, 1, 13, 1, 1, 13, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pgSdslModEthOutErrors.setStatus('current')
pgSdslModDslInOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 927, 1, 13, 1, 1, 13, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pgSdslModDslInOctets.setStatus('current')
pgSdslModDslInUcastPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 927, 1, 13, 1, 1, 13, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pgSdslModDslInUcastPkts.setStatus('current')
pgSdslModDslInNUcastPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 927, 1, 13, 1, 1, 13, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pgSdslModDslInNUcastPkts.setStatus('current')
pgSdslModDslInDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 927, 1, 13, 1, 1, 13, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pgSdslModDslInDiscards.setStatus('current')
pgSdslModDslInErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 927, 1, 13, 1, 1, 13, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pgSdslModDslInErrors.setStatus('current')
pgSdslModDslOutOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 927, 1, 13, 1, 1, 13, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pgSdslModDslOutOctets.setStatus('current')
pgSdslModDslOutUcastPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 927, 1, 13, 1, 1, 13, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pgSdslModDslOutUcastPkts.setStatus('current')
pgSdslModDslOutNUcastPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 927, 1, 13, 1, 1, 13, 1, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pgSdslModDslOutNUcastPkts.setStatus('current')
pgSdslModDslOutErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 927, 1, 13, 1, 1, 13, 1, 19), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pgSdslModDslOutErrors.setStatus('current')
mibBuilder.exportSymbols("PAIRGAIN-SDSL-MIB", sdslLOSWAlarm=sdslLOSWAlarm, pgSdslModEthOutNUcastPkts=pgSdslModEthOutNUcastPkts, sdslCurr24hPerformanceTable=sdslCurr24hPerformanceTable, sdslLineConfProfileIndex=sdslLineConfProfileIndex, sdslAlarmEntry=sdslAlarmEntry, sdsl24hHistoryId=sdsl24hHistoryId, pgSdslModEthInNUcastPkts=pgSdslModEthInNUcastPkts, sdslCurr24hESNet=sdslCurr24hESNet, sdslMarginAlarmNet=sdslMarginAlarmNet, SdslLineProfileType=SdslLineProfileType, sdslMarginAlarmCount=sdslMarginAlarmCount, sdslLOSWAlarmFirst=sdslLOSWAlarmFirst, pgSdslModEthInErrors=pgSdslModEthInErrors, sdslLineAlarmConfProfileTable=sdslLineAlarmConfProfileTable, sdsl24hUASCust=sdsl24hUASCust, sdslLineEntry=sdslLineEntry, sdslLineAlarmConfProfileIndex=sdslLineAlarmConfProfileIndex, sdslMarginHighCust=sdslMarginHighCust, sdslLineTable=sdslLineTable, sdsl24hESNet=sdsl24hESNet, sdslESThreshold=sdslESThreshold, sdslRemFeatures=sdslRemFeatures, Short=Short, sdslUASAlarmFirst=sdslUASAlarmFirst, sdslAlarmHistoryTable=sdslAlarmHistoryTable, sdslLineConfProfile=sdslLineConfProfile, sdslESAlarmFirst=sdslESAlarmFirst, pgSdslModEthOutUcastPkts=pgSdslModEthOutUcastPkts, sdslUASThreshold=sdslUASThreshold, pgSdslModDslInDiscards=pgSdslModDslInDiscards, pgSdslModGenVersionNum=pgSdslModGenVersionNum, sdslPulseAttenuationNet=sdslPulseAttenuationNet, sdslLineAlarmConfProfileIndexNext=sdslLineAlarmConfProfileIndexNext, sdsl24hPerformanceTable=sdsl24hPerformanceTable, sdslMarginHighNet=sdslMarginHighNet, sdslUASAlarmCount=sdslUASAlarmCount, sdslLineConfProfileIndexNext=sdslLineConfProfileIndexNext, sdsl15mESNet=sdsl15mESNet, pgSdslModGenFeatures=pgSdslModGenFeatures, sdslAlarmTable=sdslAlarmTable, pgSdslModDslOutOctets=pgSdslModDslOutOctets, sdslMarginLowCust=sdslMarginLowCust, pgSdslModGenVendNum=pgSdslModGenVendNum, pgSdslModStatEntry=pgSdslModStatEntry, sdslLineAlarmConfProfileEntry=sdslLineAlarmConfProfileEntry, sdslESAlarmCount=sdslESAlarmCount, sdsl24hUASNet=sdsl24hUASNet, pgSdslModEthInOctets=pgSdslModEthInOctets, pgSdslModDslInUcastPkts=pgSdslModDslInUcastPkts, pgSdslModDslInErrors=pgSdslModDslInErrors, sdsl24hESCust=sdsl24hESCust, PgSdslTimeStamp=PgSdslTimeStamp, sdslLineConfProfileRowStatus=sdslLineConfProfileRowStatus, pgSdslModGenEntry=pgSdslModGenEntry, sdslLOSWAlarmLast=sdslLOSWAlarmLast, sdslUASAlarmCust=sdslUASAlarmCust, Byte=Byte, pgSdslModGenTable=pgSdslModGenTable, sdslUpState=sdslUpState, sdsl15mPerformanceTable=sdsl15mPerformanceTable, sdslLineConfProfileTable=sdslLineConfProfileTable, PgSdslAlarmSeverityMode=PgSdslAlarmSeverityMode, pgSdslModDslInNUcastPkts=pgSdslModDslInNUcastPkts, pgSdslModGenMfgDate=pgSdslModGenMfgDate, pgSdslModEthOutOctets=pgSdslModEthOutOctets, pgSdslModStatTable=pgSdslModStatTable, sdslESAlarmNet=sdslESAlarmNet, sdslCurr24hPerformanceEntry=sdslCurr24hPerformanceEntry, sdslStatisticsEntry=sdslStatisticsEntry, sdslMarginCust=sdslMarginCust, sdslESAlarmLast=sdslESAlarmLast, sdslUASAlarmNet=sdslUASAlarmNet, PYSNMP_MODULE_ID=pgsdslMIB, sdslMarginAlarmFirst=sdslMarginAlarmFirst, pgSdslModDslOutUcastPkts=pgSdslModDslOutUcastPkts, sdslStatisticsTable=sdslStatisticsTable, sdslPulseAttenuationCust=sdslPulseAttenuationCust, sdsl24hPerformanceEntry=sdsl24hPerformanceEntry, sdslESAlarmCust=sdslESAlarmCust, sdslLOSWAlarmCount=sdslLOSWAlarmCount, sdslLOSWAlarmSetting=sdslLOSWAlarmSetting, sdsl15mPerformanceEntry=sdsl15mPerformanceEntry, sdslMarginAlarmCust=sdslMarginAlarmCust, pgSdslModEthOutErrors=pgSdslModEthOutErrors, sdslMarginAlarmSetting=sdslMarginAlarmSetting, pgsdslMIB=pgsdslMIB, sdslTipRingReversal=sdslTipRingReversal, sdslCurr24hESCust=sdslCurr24hESCust, sdslMarginNet=sdslMarginNet, sdslMarginAlarmLast=sdslMarginAlarmLast, pgSdslModGenListNum=pgSdslModGenListNum, pgSdslModEthInDiscards=pgSdslModEthInDiscards, sdslMibObjects=sdslMibObjects, pgSdslModGenSerialNum=pgSdslModGenSerialNum, sdslESAlarmSetting=sdslESAlarmSetting, sdsl15mUASCust=sdsl15mUASCust, sdslMarginThreshold=sdslMarginThreshold, sdslUASAlarmSetting=sdslUASAlarmSetting, sdslRateMode=sdslRateMode, sdslLineConfProfileEntry=sdslLineConfProfileEntry, pgSdslModDslInOctets=pgSdslModDslInOctets, pgSdslModDslOutNUcastPkts=pgSdslModDslOutNUcastPkts, sdslRate=sdslRate, sdsl15mUASNet=sdsl15mUASNet, sdslCurr24hUASNet=sdslCurr24hUASNet, sdslAlarmHistoryEntry=sdslAlarmHistoryEntry, pgSdslModDslOutErrors=pgSdslModDslOutErrors, sdslUASAlarmLast=sdslUASAlarmLast, sdslMarginLowNet=sdslMarginLowNet, sdslCurr24hUASCust=sdslCurr24hUASCust, sdsl15mHistoryId=sdsl15mHistoryId, sdslLineAlarmConfProfile=sdslLineAlarmConfProfile, pgSdslModEthOperStatus=pgSdslModEthOperStatus, pgSdslModEthInUcastPkts=pgSdslModEthInUcastPkts, sdslLineAlarmConfProfileRowStatus=sdslLineAlarmConfProfileRowStatus, sdsl15mESCust=sdsl15mESCust)
