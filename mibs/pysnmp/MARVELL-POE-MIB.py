#
# PySNMP MIB module MARVELL-POE-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/MARVELL-POE-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:59:42 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ConstraintsIntersection, ValueSizeConstraint, ValueRangeConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ConstraintsIntersection", "ValueSizeConstraint", "ValueRangeConstraint", "ConstraintsUnion")
InterfaceIndex, = mibBuilder.importSymbols("IF-MIB", "InterfaceIndex")
rnd, = mibBuilder.importSymbols("RADLAN-MIB", "rnd")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
Bits, Unsigned32, MibScalar, MibTable, MibTableRow, MibTableColumn, NotificationType, MibIdentifier, Counter64, Gauge32, ObjectIdentity, TimeTicks, iso, Integer32, ModuleIdentity, Counter32, IpAddress = mibBuilder.importSymbols("SNMPv2-SMI", "Bits", "Unsigned32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "NotificationType", "MibIdentifier", "Counter64", "Gauge32", "ObjectIdentity", "TimeTicks", "iso", "Integer32", "ModuleIdentity", "Counter32", "IpAddress")
DisplayString, TruthValue, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TruthValue", "TextualConvention")
rlPoe = ModuleIdentity((1, 3, 6, 1, 4, 1, 89, 108))
rlPoe.setRevisions(('2010-06-02 00:00', '2009-11-26 00:00',))
if mibBuilder.loadTexts: rlPoe.setLastUpdated('200911260000Z')
if mibBuilder.loadTexts: rlPoe.setOrganization('Marvell.')
class RlPoeType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))
    namedValues = NamedValues(("none", 1), ("poe", 2), ("poeplus", 3), ("poe60w", 4))

rlPethPsePortTable = MibTable((1, 3, 6, 1, 4, 1, 89, 108, 1), )
if mibBuilder.loadTexts: rlPethPsePortTable.setStatus('current')
rlPethPsePortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 89, 108, 1, 1), ).setIndexNames((0, "MARVELL-POE-MIB", "rlPethPsePortGroupIndex"), (0, "MARVELL-POE-MIB", "rlPethPsePortIndex"))
if mibBuilder.loadTexts: rlPethPsePortEntry.setStatus('current')
rlPethPsePortGroupIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 108, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: rlPethPsePortGroupIndex.setStatus('current')
rlPethPsePortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 108, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: rlPethPsePortIndex.setStatus('current')
rlPethPsePortOutputVoltage = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 108, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlPethPsePortOutputVoltage.setStatus('current')
rlPethPsePortOutputCurrent = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 108, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlPethPsePortOutputCurrent.setStatus('current')
rlPethPsePortOutputPower = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 108, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlPethPsePortOutputPower.setStatus('current')
rlPethPsePortPowerLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 108, 1, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlPethPsePortPowerLimit.setStatus('current')
rlPethPsePortStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 108, 1, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlPethPsePortStatus.setStatus('current')
rlPethPsePortStatusDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 108, 1, 1, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 80))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlPethPsePortStatusDescription.setStatus('current')
rlPethPsePortOperPowerLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 108, 1, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlPethPsePortOperPowerLimit.setStatus('current')
rlPethPsePortTimeRangeName = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 108, 1, 1, 10), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlPethPsePortTimeRangeName.setStatus('current')
rlPethPsePortOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 108, 1, 1, 11), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlPethPsePortOperStatus.setStatus('current')
rlPethPsePortMaxPowerAllocAllowed = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 108, 1, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlPethPsePortMaxPowerAllocAllowed.setStatus('current')
rlPethPsePortSupportPoeType = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 108, 1, 1, 13), RlPoeType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlPethPsePortSupportPoeType.setStatus('current')
rlPethPsePortLinkPartnerPoeType = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 108, 1, 1, 14), RlPoeType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlPethPsePortLinkPartnerPoeType.setStatus('current')
rlPethPsePortFourPairForced = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 108, 1, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("forcedEnable", 0), ("forcedDisable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlPethPsePortFourPairForced.setStatus('current')
rlPethPsePortFourPairEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 108, 1, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("fourPairEnable", 1), ("fourPairDisable", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlPethPsePortFourPairEnabled.setStatus('current')
rlPethPsePortNegotiationAllocatedPower = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 108, 1, 1, 17), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlPethPsePortNegotiationAllocatedPower.setStatus('current')
rlPethPsePortNegotiationProtocolOwner = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 108, 1, 1, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("protocolOwnerNone", 0), ("protocolOwnerCDP", 1), ("protocolOwnerLLDP", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlPethPsePortNegotiationProtocolOwner.setStatus('current')
rlPethMainPseTable = MibTable((1, 3, 6, 1, 4, 1, 89, 108, 2), )
if mibBuilder.loadTexts: rlPethMainPseTable.setStatus('current')
rlPethMainPseEntry = MibTableRow((1, 3, 6, 1, 4, 1, 89, 108, 2, 1), ).setIndexNames((0, "MARVELL-POE-MIB", "rlPethMainPseGroupIndex"))
if mibBuilder.loadTexts: rlPethMainPseEntry.setStatus('current')
rlPethMainPseGroupIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 108, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: rlPethMainPseGroupIndex.setStatus('current')
rlPethMainPseSwVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 108, 2, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 20))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlPethMainPseSwVersion.setStatus('current')
rlPethMainPseHwVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 108, 2, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 20))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlPethMainPseHwVersion.setStatus('current')
rlPethMainPseHwType = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 108, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("enhanced", 1), ("plus", 2), ("auto", 3), ("nonPoe", 4), ("enhancedPlus", 5), ("poe60w", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlPethMainPseHwType.setStatus('current')
rlPethMainPsePowerGuardBand = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 108, 2, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlPethMainPsePowerGuardBand.setStatus('current')
rlPethPowerPseTable = MibTable((1, 3, 6, 1, 4, 1, 89, 108, 3), )
if mibBuilder.loadTexts: rlPethPowerPseTable.setStatus('current')
rlPethPowerPseEntry = MibTableRow((1, 3, 6, 1, 4, 1, 89, 108, 3, 1), ).setIndexNames((0, "MARVELL-POE-MIB", "rlPethPowerPseGroupIndex"))
if mibBuilder.loadTexts: rlPethPowerPseEntry.setStatus('current')
rlPethPowerPseGroupIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 108, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 8)))
if mibBuilder.loadTexts: rlPethPowerPseGroupIndex.setStatus('current')
rlPethPowerPsePower = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 108, 3, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("none", 0), ("ps1", 1), ("ps2", 2), ("ps3", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlPethPowerPsePower.setStatus('current')
rlPethPowerPseRpsPower = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 108, 3, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("none", 0), ("rps1", 1), ("rps2", 2), ("rps3", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlPethPowerPseRpsPower.setStatus('current')
rlPethPowerPsePowerManagementMode = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 108, 3, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 5, 6))).clone(namedValues=NamedValues(("portlimit", 0), ("classlimit", 5), ("maxlimit", 6)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlPethPowerPsePowerManagementMode.setStatus('current')
rlPethPowerPsedisconnectMethod = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 108, 3, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("lowestpriority", 0), ("nextport", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlPethPowerPsedisconnectMethod.setStatus('current')
rlPethPowerPseTemperatureSensor = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 108, 3, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-200, 200))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlPethPowerPseTemperatureSensor.setStatus('current')
rlPethPowerPseInrushTestEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 108, 3, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("enabled", 0), ("disabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlPethPowerPseInrushTestEnabled.setStatus('current')
rlPethPowerPseLegacyDisabled = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 108, 3, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("enabled", 0), ("disabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlPethPowerPseLegacyDisabled.setStatus('current')
rlPethPdPortTable = MibTable((1, 3, 6, 1, 4, 1, 89, 108, 4), )
if mibBuilder.loadTexts: rlPethPdPortTable.setStatus('current')
rlPethPdPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 89, 108, 4, 1), ).setIndexNames((0, "MARVELL-POE-MIB", "rlPethPdPortIndex"))
if mibBuilder.loadTexts: rlPethPdPortEntry.setStatus('current')
rlPethPdPortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 108, 4, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: rlPethPdPortIndex.setStatus('current')
rlPethPdPortSupportPoeType = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 108, 4, 1, 2), RlPoeType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlPethPdPortSupportPoeType.setStatus('current')
rlPethPdPortOperPoeType = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 108, 4, 1, 3), RlPoeType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlPethPdPortOperPoeType.setStatus('current')
rlPethPdPortPowerRequest = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 108, 4, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlPethPdPortPowerRequest.setStatus('current')
rlPethPdPortPowerAvailable = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 108, 4, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlPethPdPortPowerAvailable.setStatus('current')
rlPethPdPortForcedMode = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 108, 4, 1, 6), RlPoeType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlPethPdPortForcedMode.setStatus('current')
rlPethPdPortNegotiationProtocolOwner = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 108, 4, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("protocolOwnerNone", 0), ("protocolOwnerCDP", 1), ("protocolOwnerLLDP", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlPethPdPortNegotiationProtocolOwner.setStatus('current')
mibBuilder.exportSymbols("MARVELL-POE-MIB", rlPethPowerPseTemperatureSensor=rlPethPowerPseTemperatureSensor, rlPoe=rlPoe, rlPethPsePortOperPowerLimit=rlPethPsePortOperPowerLimit, rlPethPowerPsedisconnectMethod=rlPethPowerPsedisconnectMethod, rlPethPowerPseLegacyDisabled=rlPethPowerPseLegacyDisabled, rlPethPsePortSupportPoeType=rlPethPsePortSupportPoeType, rlPethPsePortOutputPower=rlPethPsePortOutputPower, rlPethPdPortPowerAvailable=rlPethPdPortPowerAvailable, rlPethPsePortIndex=rlPethPsePortIndex, rlPethMainPseHwVersion=rlPethMainPseHwVersion, rlPethPowerPseRpsPower=rlPethPowerPseRpsPower, rlPethPsePortTimeRangeName=rlPethPsePortTimeRangeName, rlPethPowerPseInrushTestEnabled=rlPethPowerPseInrushTestEnabled, rlPethMainPseGroupIndex=rlPethMainPseGroupIndex, rlPethPowerPseGroupIndex=rlPethPowerPseGroupIndex, rlPethPsePortFourPairEnabled=rlPethPsePortFourPairEnabled, rlPethPsePortTable=rlPethPsePortTable, rlPethPowerPsePower=rlPethPowerPsePower, PYSNMP_MODULE_ID=rlPoe, rlPethPsePortOperStatus=rlPethPsePortOperStatus, rlPethPdPortNegotiationProtocolOwner=rlPethPdPortNegotiationProtocolOwner, rlPethMainPseSwVersion=rlPethMainPseSwVersion, rlPethPsePortStatus=rlPethPsePortStatus, rlPethPowerPsePowerManagementMode=rlPethPowerPsePowerManagementMode, rlPethPdPortForcedMode=rlPethPdPortForcedMode, rlPethPsePortNegotiationAllocatedPower=rlPethPsePortNegotiationAllocatedPower, rlPethPsePortPowerLimit=rlPethPsePortPowerLimit, rlPethPowerPseEntry=rlPethPowerPseEntry, rlPethPowerPseTable=rlPethPowerPseTable, rlPethPdPortEntry=rlPethPdPortEntry, rlPethPsePortFourPairForced=rlPethPsePortFourPairForced, rlPethPsePortGroupIndex=rlPethPsePortGroupIndex, rlPethPdPortTable=rlPethPdPortTable, rlPethPsePortEntry=rlPethPsePortEntry, rlPethPdPortPowerRequest=rlPethPdPortPowerRequest, rlPethPdPortOperPoeType=rlPethPdPortOperPoeType, rlPethPsePortOutputCurrent=rlPethPsePortOutputCurrent, rlPethPsePortOutputVoltage=rlPethPsePortOutputVoltage, rlPethPsePortLinkPartnerPoeType=rlPethPsePortLinkPartnerPoeType, rlPethPsePortNegotiationProtocolOwner=rlPethPsePortNegotiationProtocolOwner, rlPethPdPortIndex=rlPethPdPortIndex, RlPoeType=RlPoeType, rlPethPsePortStatusDescription=rlPethPsePortStatusDescription, rlPethMainPseTable=rlPethMainPseTable, rlPethPdPortSupportPoeType=rlPethPdPortSupportPoeType, rlPethPsePortMaxPowerAllocAllowed=rlPethPsePortMaxPowerAllocAllowed, rlPethMainPseHwType=rlPethMainPseHwType, rlPethMainPsePowerGuardBand=rlPethMainPsePowerGuardBand, rlPethMainPseEntry=rlPethMainPseEntry)
