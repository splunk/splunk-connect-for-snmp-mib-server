#
# PySNMP MIB module ASYNCOSWEBSECURITYAPPLIANCE-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/ASYNCOSWEBSECURITYAPPLIANCE-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:13:33 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ValueSizeConstraint, ValueRangeConstraint, SingleValueConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ValueSizeConstraint", "ValueRangeConstraint", "SingleValueConstraint", "ConstraintsIntersection")
connectionURL, = mibBuilder.importSymbols("ASYNCOS-MAIL-MIB", "connectionURL")
asyncOSAppliances, = mibBuilder.importSymbols("IRONPORT-SMI", "asyncOSAppliances")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
Counter32, Integer32, iso, Counter64, Gauge32, Unsigned32, MibIdentifier, NotificationType, IpAddress, ObjectIdentity, TimeTicks, ModuleIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, Bits = mibBuilder.importSymbols("SNMPv2-SMI", "Counter32", "Integer32", "iso", "Counter64", "Gauge32", "Unsigned32", "MibIdentifier", "NotificationType", "IpAddress", "ObjectIdentity", "TimeTicks", "ModuleIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Bits")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
asyncOSWebSecurityAppliance = ModuleIdentity((1, 3, 6, 1, 4, 1, 15497, 1, 2))
asyncOSWebSecurityAppliance.setRevisions(('2013-08-09 00:00', '2010-04-20 00:00', '2010-04-15 00:00', '2009-07-13 00:00', '2007-03-27 00:00',))
if mibBuilder.loadTexts: asyncOSWebSecurityAppliance.setLastUpdated('201308090000Z')
if mibBuilder.loadTexts: asyncOSWebSecurityAppliance.setOrganization('IronPort Systems')
proxySystem = MibIdentifier((1, 3, 6, 1, 4, 1, 15497, 1, 2, 1))
proxyConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 15497, 1, 2, 2))
proxyPerf = MibIdentifier((1, 3, 6, 1, 4, 1, 15497, 1, 2, 3))
proxyHardware = MibIdentifier((1, 3, 6, 1, 4, 1, 15497, 1, 2, 4))
proxyTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 15497, 1, 2, 5))
cacheUptime = MibScalar((1, 3, 6, 1, 4, 1, 15497, 1, 2, 1, 1), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cacheUptime.setStatus('current')
cacheMemory = MibScalar((1, 3, 6, 1, 4, 1, 15497, 1, 2, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cacheMemory.setStatus('current')
cacheSysStorage = MibScalar((1, 3, 6, 1, 4, 1, 15497, 1, 2, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cacheSysStorage.setStatus('current')
cacheAdmin = MibScalar((1, 3, 6, 1, 4, 1, 15497, 1, 2, 2, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cacheAdmin.setStatus('current')
cacheSoftware = MibScalar((1, 3, 6, 1, 4, 1, 15497, 1, 2, 2, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cacheSoftware.setStatus('current')
cacheVersion = MibScalar((1, 3, 6, 1, 4, 1, 15497, 1, 2, 2, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cacheVersion.setStatus('current')
licenseExpiration = MibScalar((1, 3, 6, 1, 4, 1, 15497, 1, 2, 2, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: licenseExpiration.setStatus('current')
proxySysPerf = MibIdentifier((1, 3, 6, 1, 4, 1, 15497, 1, 2, 3, 1))
proxyClientSidePerf = MibIdentifier((1, 3, 6, 1, 4, 1, 15497, 1, 2, 3, 2))
proxyServerSidePerf = MibIdentifier((1, 3, 6, 1, 4, 1, 15497, 1, 2, 3, 3))
proxyCachePerf = MibIdentifier((1, 3, 6, 1, 4, 1, 15497, 1, 2, 3, 4))
proxyMedianSvcTime = MibIdentifier((1, 3, 6, 1, 4, 1, 15497, 1, 2, 3, 5))
proxyExecutiveSummary = MibIdentifier((1, 3, 6, 1, 4, 1, 15497, 1, 2, 3, 6))
proxyRecentPerf = MibIdentifier((1, 3, 6, 1, 4, 1, 15497, 1, 2, 3, 7))
cacheCpuTime = MibScalar((1, 3, 6, 1, 4, 1, 15497, 1, 2, 3, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cacheCpuTime.setStatus('current')
cacheCpuUsage = MibScalar((1, 3, 6, 1, 4, 1, 15497, 1, 2, 3, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cacheCpuUsage.setStatus('current')
cacheMaxResSize = MibScalar((1, 3, 6, 1, 4, 1, 15497, 1, 2, 3, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cacheMaxResSize.setStatus('current')
cacheUsedStoragePct = MibScalar((1, 3, 6, 1, 4, 1, 15497, 1, 2, 3, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cacheUsedStoragePct.setStatus('current')
cacheBusyCPUPct = MibScalar((1, 3, 6, 1, 4, 1, 15497, 1, 2, 3, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cacheBusyCPUPct.setStatus('current')
cacheMemoryBufferUsagePct = MibScalar((1, 3, 6, 1, 4, 1, 15497, 1, 2, 3, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cacheMemoryBufferUsagePct.setStatus('current')
cacheClientSizeHistTable = MibTable((1, 3, 6, 1, 4, 1, 15497, 1, 2, 3, 2, 1), )
if mibBuilder.loadTexts: cacheClientSizeHistTable.setStatus('current')
cacheClientSizeHistEntry = MibTableRow((1, 3, 6, 1, 4, 1, 15497, 1, 2, 3, 2, 1, 1), ).setIndexNames((0, "ASYNCOSWEBSECURITYAPPLIANCE-MIB", "cacheClientSizeHistBinNumber"))
if mibBuilder.loadTexts: cacheClientSizeHistEntry.setStatus('current')
cacheClientSizeHistBinNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 15497, 1, 2, 3, 2, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cacheClientSizeHistBinNumber.setStatus('current')
cacheClientReqSize = MibTableColumn((1, 3, 6, 1, 4, 1, 15497, 1, 2, 3, 2, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cacheClientReqSize.setStatus('current')
cacheClientRequests = MibScalar((1, 3, 6, 1, 4, 1, 15497, 1, 2, 3, 2, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cacheClientRequests.setStatus('current')
cacheClientHits = MibScalar((1, 3, 6, 1, 4, 1, 15497, 1, 2, 3, 2, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cacheClientHits.setStatus('current')
cacheClientErrors = MibScalar((1, 3, 6, 1, 4, 1, 15497, 1, 2, 3, 2, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cacheClientErrors.setStatus('current')
cacheClientInKb = MibScalar((1, 3, 6, 1, 4, 1, 15497, 1, 2, 3, 2, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cacheClientInKb.setStatus('current')
cacheClientOutKb = MibScalar((1, 3, 6, 1, 4, 1, 15497, 1, 2, 3, 2, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cacheClientOutKb.setStatus('current')
cacheClientIdleConns = MibScalar((1, 3, 6, 1, 4, 1, 15497, 1, 2, 3, 2, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cacheClientIdleConns.setStatus('current')
cacheClientTotalConns = MibScalar((1, 3, 6, 1, 4, 1, 15497, 1, 2, 3, 2, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cacheClientTotalConns.setStatus('current')
cacheClientMaxConns = MibScalar((1, 3, 6, 1, 4, 1, 15497, 1, 2, 3, 2, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cacheClientMaxConns.setStatus('current')
cacheClientAccepts = MibScalar((1, 3, 6, 1, 4, 1, 15497, 1, 2, 3, 2, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cacheClientAccepts.setStatus('current')
cacheClientICPRequests = MibScalar((1, 3, 6, 1, 4, 1, 15497, 1, 2, 3, 2, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cacheClientICPRequests.setStatus('current')
cacheClientICPHits = MibScalar((1, 3, 6, 1, 4, 1, 15497, 1, 2, 3, 2, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cacheClientICPHits.setStatus('current')
cacheClientICPMisses = MibScalar((1, 3, 6, 1, 4, 1, 15497, 1, 2, 3, 2, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cacheClientICPMisses.setStatus('current')
cacheClientICPErrors = MibScalar((1, 3, 6, 1, 4, 1, 15497, 1, 2, 3, 2, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cacheClientICPErrors.setStatus('current')
cacheClientICPDenials = MibScalar((1, 3, 6, 1, 4, 1, 15497, 1, 2, 3, 2, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cacheClientICPDenials.setStatus('current')
cacheClientReqMisses = MibScalar((1, 3, 6, 1, 4, 1, 15497, 1, 2, 3, 2, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cacheClientReqMisses.setStatus('current')
cacheClientReqDenials = MibScalar((1, 3, 6, 1, 4, 1, 15497, 1, 2, 3, 2, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cacheClientReqDenials.setStatus('current')
cacheServerSizeHistTable = MibTable((1, 3, 6, 1, 4, 1, 15497, 1, 2, 3, 3, 1), )
if mibBuilder.loadTexts: cacheServerSizeHistTable.setStatus('current')
cacheServerSizeHistEntry = MibTableRow((1, 3, 6, 1, 4, 1, 15497, 1, 2, 3, 3, 1, 1), ).setIndexNames((0, "ASYNCOSWEBSECURITYAPPLIANCE-MIB", "cacheServerSizeHistBinNumber"))
if mibBuilder.loadTexts: cacheServerSizeHistEntry.setStatus('current')
cacheServerSizeHistBinNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 15497, 1, 2, 3, 3, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cacheServerSizeHistBinNumber.setStatus('current')
cacheServerReplySize = MibTableColumn((1, 3, 6, 1, 4, 1, 15497, 1, 2, 3, 3, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cacheServerReplySize.setStatus('current')
cacheServerRequests = MibScalar((1, 3, 6, 1, 4, 1, 15497, 1, 2, 3, 3, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cacheServerRequests.setStatus('current')
cacheServerSockets = MibScalar((1, 3, 6, 1, 4, 1, 15497, 1, 2, 3, 3, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cacheServerSockets.setStatus('current')
cacheServerErrors = MibScalar((1, 3, 6, 1, 4, 1, 15497, 1, 2, 3, 3, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cacheServerErrors.setStatus('current')
cacheServerInKb = MibScalar((1, 3, 6, 1, 4, 1, 15497, 1, 2, 3, 3, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cacheServerInKb.setStatus('current')
cacheServerOutKb = MibScalar((1, 3, 6, 1, 4, 1, 15497, 1, 2, 3, 3, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cacheServerOutKb.setStatus('current')
cacheServerIdleConns = MibScalar((1, 3, 6, 1, 4, 1, 15497, 1, 2, 3, 3, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cacheServerIdleConns.setStatus('current')
cacheServerTotalConns = MibScalar((1, 3, 6, 1, 4, 1, 15497, 1, 2, 3, 3, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cacheServerTotalConns.setStatus('current')
cacheServerCloseIdleConns = MibScalar((1, 3, 6, 1, 4, 1, 15497, 1, 2, 3, 3, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cacheServerCloseIdleConns.setStatus('current')
cacheServerLimitIdleConns = MibScalar((1, 3, 6, 1, 4, 1, 15497, 1, 2, 3, 3, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cacheServerLimitIdleConns.setStatus('current')
cacheServerConnsThresh = MibScalar((1, 3, 6, 1, 4, 1, 15497, 1, 2, 3, 3, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cacheServerConnsThresh.setStatus('current')
cacheServerPersisConnsRetries = MibScalar((1, 3, 6, 1, 4, 1, 15497, 1, 2, 3, 3, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cacheServerPersisConnsRetries.setStatus('current')
cacheServerRegConnsRetries = MibScalar((1, 3, 6, 1, 4, 1, 15497, 1, 2, 3, 3, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cacheServerRegConnsRetries.setStatus('current')
cacheServerRWErrorRetries = MibScalar((1, 3, 6, 1, 4, 1, 15497, 1, 2, 3, 3, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cacheServerRWErrorRetries.setStatus('current')
cacheServerEarlyCloseRetries = MibScalar((1, 3, 6, 1, 4, 1, 15497, 1, 2, 3, 3, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cacheServerEarlyCloseRetries.setStatus('current')
cacheServerICPRequests = MibScalar((1, 3, 6, 1, 4, 1, 15497, 1, 2, 3, 3, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cacheServerICPRequests.setStatus('current')
cacheServerICPHits = MibScalar((1, 3, 6, 1, 4, 1, 15497, 1, 2, 3, 3, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cacheServerICPHits.setStatus('current')
cacheServerICPMisses = MibScalar((1, 3, 6, 1, 4, 1, 15497, 1, 2, 3, 3, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cacheServerICPMisses.setStatus('current')
cacheServerICPErrors = MibScalar((1, 3, 6, 1, 4, 1, 15497, 1, 2, 3, 3, 19), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cacheServerICPErrors.setStatus('current')
cacheServerICPDenials = MibScalar((1, 3, 6, 1, 4, 1, 15497, 1, 2, 3, 3, 20), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cacheServerICPDenials.setStatus('current')
cacheCacheSizeHistTable = MibTable((1, 3, 6, 1, 4, 1, 15497, 1, 2, 3, 4, 1), )
if mibBuilder.loadTexts: cacheCacheSizeHistTable.setStatus('current')
cacheCacheSizeHistEntry = MibTableRow((1, 3, 6, 1, 4, 1, 15497, 1, 2, 3, 4, 1, 1), ).setIndexNames((0, "ASYNCOSWEBSECURITYAPPLIANCE-MIB", "cacheSizeHistBinNumber"))
if mibBuilder.loadTexts: cacheCacheSizeHistEntry.setStatus('current')
cacheSizeHistBinNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 15497, 1, 2, 3, 4, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cacheSizeHistBinNumber.setStatus('current')
cacheCacheActiveObjs = MibTableColumn((1, 3, 6, 1, 4, 1, 15497, 1, 2, 3, 4, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cacheCacheActiveObjs.setStatus('current')
cacheCacheAllObjs = MibTableColumn((1, 3, 6, 1, 4, 1, 15497, 1, 2, 3, 4, 1, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cacheCacheAllObjs.setStatus('current')
cacheCacheLiveCachedObjs = MibScalar((1, 3, 6, 1, 4, 1, 15497, 1, 2, 3, 4, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cacheCacheLiveCachedObjs.setStatus('current')
cacheCacheLiveCachedObjSizes = MibScalar((1, 3, 6, 1, 4, 1, 15497, 1, 2, 3, 4, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cacheCacheLiveCachedObjSizes.setStatus('current')
cacheCacheTotalCachedObjs = MibScalar((1, 3, 6, 1, 4, 1, 15497, 1, 2, 3, 4, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cacheCacheTotalCachedObjs.setStatus('current')
cacheCacheTotalCachedObjSizes = MibScalar((1, 3, 6, 1, 4, 1, 15497, 1, 2, 3, 4, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cacheCacheTotalCachedObjSizes.setStatus('current')
cacheMedianSvcTable = MibTable((1, 3, 6, 1, 4, 1, 15497, 1, 2, 3, 5, 1), )
if mibBuilder.loadTexts: cacheMedianSvcTable.setStatus('current')
cacheMedianSvcEntry = MibTableRow((1, 3, 6, 1, 4, 1, 15497, 1, 2, 3, 5, 1, 1), ).setIndexNames((0, "ASYNCOSWEBSECURITYAPPLIANCE-MIB", "cacheMedianTime"))
if mibBuilder.loadTexts: cacheMedianSvcEntry.setStatus('current')
cacheMedianTime = MibTableColumn((1, 3, 6, 1, 4, 1, 15497, 1, 2, 3, 5, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 60))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cacheMedianTime.setStatus('current')
cacheHTTPCltSvcTime = MibTableColumn((1, 3, 6, 1, 4, 1, 15497, 1, 2, 3, 5, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cacheHTTPCltSvcTime.setStatus('current')
cacheHTTPMissSvcTime = MibTableColumn((1, 3, 6, 1, 4, 1, 15497, 1, 2, 3, 5, 1, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cacheHTTPMissSvcTime.setStatus('current')
cacheHTTPHitSvcTime = MibTableColumn((1, 3, 6, 1, 4, 1, 15497, 1, 2, 3, 5, 1, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cacheHTTPHitSvcTime.setStatus('current')
cacheHTTPSrvSvcTime = MibTableColumn((1, 3, 6, 1, 4, 1, 15497, 1, 2, 3, 5, 1, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cacheHTTPSrvSvcTime.setStatus('current')
cacheDnsSvcTime = MibTableColumn((1, 3, 6, 1, 4, 1, 15497, 1, 2, 3, 5, 1, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cacheDnsSvcTime.setStatus('current')
cacheHTTPSvcWaitTime = MibScalar((1, 3, 6, 1, 4, 1, 15497, 1, 2, 3, 5, 1, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cacheHTTPSvcWaitTime.setStatus('current')
cacheTotalHttpReqs = MibScalar((1, 3, 6, 1, 4, 1, 15497, 1, 2, 3, 6, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cacheTotalHttpReqs.setStatus('current')
cacheMeanRespTime = MibScalar((1, 3, 6, 1, 4, 1, 15497, 1, 2, 3, 6, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cacheMeanRespTime.setStatus('current')
cacheMeanMissRespTime = MibScalar((1, 3, 6, 1, 4, 1, 15497, 1, 2, 3, 6, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cacheMeanMissRespTime.setStatus('current')
cacheMeanHitRespTime = MibScalar((1, 3, 6, 1, 4, 1, 15497, 1, 2, 3, 6, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cacheMeanHitRespTime.setStatus('current')
cacheMeanHitRatio = MibScalar((1, 3, 6, 1, 4, 1, 15497, 1, 2, 3, 6, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cacheMeanHitRatio.setStatus('current')
cacheMeanByteHitRatio = MibScalar((1, 3, 6, 1, 4, 1, 15497, 1, 2, 3, 6, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cacheMeanByteHitRatio.setStatus('current')
cacheTotalBandwidthSaving = MibScalar((1, 3, 6, 1, 4, 1, 15497, 1, 2, 3, 6, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cacheTotalBandwidthSaving.setStatus('current')
cacheDuration = MibScalar((1, 3, 6, 1, 4, 1, 15497, 1, 2, 3, 6, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cacheDuration.setStatus('current')
cacheCltReplyErrPct = MibScalar((1, 3, 6, 1, 4, 1, 15497, 1, 2, 3, 6, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cacheCltReplyErrPct.setStatus('current')
proxyRecentThruputPerf = MibIdentifier((1, 3, 6, 1, 4, 1, 15497, 1, 2, 3, 7, 1))
cacheThruputNow = MibScalar((1, 3, 6, 1, 4, 1, 15497, 1, 2, 3, 7, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cacheThruputNow.setStatus('current')
cacheThruput1hrPeak = MibScalar((1, 3, 6, 1, 4, 1, 15497, 1, 2, 3, 7, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cacheThruput1hrPeak.setStatus('current')
cacheThruput1hrMean = MibScalar((1, 3, 6, 1, 4, 1, 15497, 1, 2, 3, 7, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cacheThruput1hrMean.setStatus('current')
cacheThruput1dayPeak = MibScalar((1, 3, 6, 1, 4, 1, 15497, 1, 2, 3, 7, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cacheThruput1dayPeak.setStatus('current')
cacheThruput1dayMean = MibScalar((1, 3, 6, 1, 4, 1, 15497, 1, 2, 3, 7, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cacheThruput1dayMean.setStatus('current')
cacheThruput1weekPeak = MibScalar((1, 3, 6, 1, 4, 1, 15497, 1, 2, 3, 7, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cacheThruput1weekPeak.setStatus('current')
cacheThruput1weekMean = MibScalar((1, 3, 6, 1, 4, 1, 15497, 1, 2, 3, 7, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cacheThruput1weekMean.setStatus('current')
cacheThruputLifePeak = MibScalar((1, 3, 6, 1, 4, 1, 15497, 1, 2, 3, 7, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cacheThruputLifePeak.setStatus('current')
cacheThruputLifeMean = MibScalar((1, 3, 6, 1, 4, 1, 15497, 1, 2, 3, 7, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cacheThruputLifeMean.setStatus('current')
proxyRecentBandWSavPerf = MibIdentifier((1, 3, 6, 1, 4, 1, 15497, 1, 2, 3, 7, 2))
cacheBwidthSavingNow = MibScalar((1, 3, 6, 1, 4, 1, 15497, 1, 2, 3, 7, 2, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cacheBwidthSavingNow.setStatus('current')
cacheBwidthSaving1hrPeak = MibScalar((1, 3, 6, 1, 4, 1, 15497, 1, 2, 3, 7, 2, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cacheBwidthSaving1hrPeak.setStatus('current')
cacheBwidthSaving1hrMean = MibScalar((1, 3, 6, 1, 4, 1, 15497, 1, 2, 3, 7, 2, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cacheBwidthSaving1hrMean.setStatus('current')
cacheBwidthSaving1dayPeak = MibScalar((1, 3, 6, 1, 4, 1, 15497, 1, 2, 3, 7, 2, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cacheBwidthSaving1dayPeak.setStatus('current')
cacheBwidthSaving1dayMean = MibScalar((1, 3, 6, 1, 4, 1, 15497, 1, 2, 3, 7, 2, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cacheBwidthSaving1dayMean.setStatus('current')
cacheBwidthSaving1weekPeak = MibScalar((1, 3, 6, 1, 4, 1, 15497, 1, 2, 3, 7, 2, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cacheBwidthSaving1weekPeak.setStatus('current')
cacheBwidthSaving1weekMean = MibScalar((1, 3, 6, 1, 4, 1, 15497, 1, 2, 3, 7, 2, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cacheBwidthSaving1weekMean.setStatus('current')
cacheBwidthSavingLifePeak = MibScalar((1, 3, 6, 1, 4, 1, 15497, 1, 2, 3, 7, 2, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cacheBwidthSavingLifePeak.setStatus('current')
cacheBwidthSavingLifeMean = MibScalar((1, 3, 6, 1, 4, 1, 15497, 1, 2, 3, 7, 2, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cacheBwidthSavingLifeMean.setStatus('current')
proxyRecentBandWSpntPerf = MibIdentifier((1, 3, 6, 1, 4, 1, 15497, 1, 2, 3, 7, 3))
cacheBwidthSpentNow = MibScalar((1, 3, 6, 1, 4, 1, 15497, 1, 2, 3, 7, 3, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cacheBwidthSpentNow.setStatus('current')
cacheBwidthSpent1hrPeak = MibScalar((1, 3, 6, 1, 4, 1, 15497, 1, 2, 3, 7, 3, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cacheBwidthSpent1hrPeak.setStatus('current')
cacheBwidthSpent1hrMean = MibScalar((1, 3, 6, 1, 4, 1, 15497, 1, 2, 3, 7, 3, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cacheBwidthSpent1hrMean.setStatus('current')
cacheBwidthSpent1dayPeak = MibScalar((1, 3, 6, 1, 4, 1, 15497, 1, 2, 3, 7, 3, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cacheBwidthSpent1dayPeak.setStatus('current')
cacheBwidthSpent1dayMean = MibScalar((1, 3, 6, 1, 4, 1, 15497, 1, 2, 3, 7, 3, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cacheBwidthSpent1dayMean.setStatus('current')
cacheBwidthSpent1weekPeak = MibScalar((1, 3, 6, 1, 4, 1, 15497, 1, 2, 3, 7, 3, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cacheBwidthSpent1weekPeak.setStatus('current')
cacheBwidthSpent1weekMean = MibScalar((1, 3, 6, 1, 4, 1, 15497, 1, 2, 3, 7, 3, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cacheBwidthSpent1weekMean.setStatus('current')
cacheBwidthSpentLifePeak = MibScalar((1, 3, 6, 1, 4, 1, 15497, 1, 2, 3, 7, 3, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cacheBwidthSpentLifePeak.setStatus('current')
cacheBwidthSpentLifeMean = MibScalar((1, 3, 6, 1, 4, 1, 15497, 1, 2, 3, 7, 3, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cacheBwidthSpentLifeMean.setStatus('current')
proxyRecentBandWTotPerf = MibIdentifier((1, 3, 6, 1, 4, 1, 15497, 1, 2, 3, 7, 4))
cacheBwidthTotalNow = MibScalar((1, 3, 6, 1, 4, 1, 15497, 1, 2, 3, 7, 4, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cacheBwidthTotalNow.setStatus('current')
cacheBwidthTotal1hrPeak = MibScalar((1, 3, 6, 1, 4, 1, 15497, 1, 2, 3, 7, 4, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cacheBwidthTotal1hrPeak.setStatus('current')
cacheBwidthTotal1hrMean = MibScalar((1, 3, 6, 1, 4, 1, 15497, 1, 2, 3, 7, 4, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cacheBwidthTotal1hrMean.setStatus('current')
cacheBwidthTotal1dayPeak = MibScalar((1, 3, 6, 1, 4, 1, 15497, 1, 2, 3, 7, 4, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cacheBwidthTotal1dayPeak.setStatus('current')
cacheBwidthTotal1dayMean = MibScalar((1, 3, 6, 1, 4, 1, 15497, 1, 2, 3, 7, 4, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cacheBwidthTotal1dayMean.setStatus('current')
cacheBwidthTotal1weekPeak = MibScalar((1, 3, 6, 1, 4, 1, 15497, 1, 2, 3, 7, 4, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cacheBwidthTotal1weekPeak.setStatus('current')
cacheBwidthTotal1weekMean = MibScalar((1, 3, 6, 1, 4, 1, 15497, 1, 2, 3, 7, 4, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cacheBwidthTotal1weekMean.setStatus('current')
cacheBwidthTotalLifePeak = MibScalar((1, 3, 6, 1, 4, 1, 15497, 1, 2, 3, 7, 4, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cacheBwidthTotalLifePeak.setStatus('current')
cacheBwidthTotalLifeMean = MibScalar((1, 3, 6, 1, 4, 1, 15497, 1, 2, 3, 7, 4, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cacheBwidthTotalLifeMean.setStatus('current')
proxyRecentHitsPerf = MibIdentifier((1, 3, 6, 1, 4, 1, 15497, 1, 2, 3, 7, 5))
cacheHitsNow = MibScalar((1, 3, 6, 1, 4, 1, 15497, 1, 2, 3, 7, 5, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cacheHitsNow.setStatus('current')
cacheHits1hrPeak = MibScalar((1, 3, 6, 1, 4, 1, 15497, 1, 2, 3, 7, 5, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cacheHits1hrPeak.setStatus('current')
cacheHits1hrMean = MibScalar((1, 3, 6, 1, 4, 1, 15497, 1, 2, 3, 7, 5, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cacheHits1hrMean.setStatus('current')
cacheHits1dayPeak = MibScalar((1, 3, 6, 1, 4, 1, 15497, 1, 2, 3, 7, 5, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cacheHits1dayPeak.setStatus('current')
cacheHits1dayMean = MibScalar((1, 3, 6, 1, 4, 1, 15497, 1, 2, 3, 7, 5, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cacheHits1dayMean.setStatus('current')
cacheHits1weekPeak = MibScalar((1, 3, 6, 1, 4, 1, 15497, 1, 2, 3, 7, 5, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cacheHits1weekPeak.setStatus('current')
cacheHits1weekMean = MibScalar((1, 3, 6, 1, 4, 1, 15497, 1, 2, 3, 7, 5, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cacheHits1weekMean.setStatus('current')
cacheHitsLifePeak = MibScalar((1, 3, 6, 1, 4, 1, 15497, 1, 2, 3, 7, 5, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cacheHitsLifePeak.setStatus('current')
cacheHitsLifeMean = MibScalar((1, 3, 6, 1, 4, 1, 15497, 1, 2, 3, 7, 5, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cacheHitsLifeMean.setStatus('current')
proxyRecentMissesPerf = MibIdentifier((1, 3, 6, 1, 4, 1, 15497, 1, 2, 3, 7, 6))
cacheMissesNow = MibScalar((1, 3, 6, 1, 4, 1, 15497, 1, 2, 3, 7, 6, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cacheMissesNow.setStatus('current')
cacheMisses1hrPeak = MibScalar((1, 3, 6, 1, 4, 1, 15497, 1, 2, 3, 7, 6, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cacheMisses1hrPeak.setStatus('current')
cacheMisses1hrMean = MibScalar((1, 3, 6, 1, 4, 1, 15497, 1, 2, 3, 7, 6, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cacheMisses1hrMean.setStatus('current')
cacheMisses1dayPeak = MibScalar((1, 3, 6, 1, 4, 1, 15497, 1, 2, 3, 7, 6, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cacheMisses1dayPeak.setStatus('current')
cacheMisses1dayMean = MibScalar((1, 3, 6, 1, 4, 1, 15497, 1, 2, 3, 7, 6, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cacheMisses1dayMean.setStatus('current')
cacheMisses1weekPeak = MibScalar((1, 3, 6, 1, 4, 1, 15497, 1, 2, 3, 7, 6, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cacheMisses1weekPeak.setStatus('current')
cacheMisses1weekMean = MibScalar((1, 3, 6, 1, 4, 1, 15497, 1, 2, 3, 7, 6, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cacheMisses1weekMean.setStatus('current')
cacheMissesLifePeak = MibScalar((1, 3, 6, 1, 4, 1, 15497, 1, 2, 3, 7, 6, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cacheMissesLifePeak.setStatus('current')
cacheMissesLifeMean = MibScalar((1, 3, 6, 1, 4, 1, 15497, 1, 2, 3, 7, 6, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cacheMissesLifeMean.setStatus('current')
proxyRecentHitRespTimePerf = MibIdentifier((1, 3, 6, 1, 4, 1, 15497, 1, 2, 3, 7, 7))
cacheHitRespTimeNow = MibScalar((1, 3, 6, 1, 4, 1, 15497, 1, 2, 3, 7, 7, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cacheHitRespTimeNow.setStatus('current')
cacheHitRespTime1hrPeak = MibScalar((1, 3, 6, 1, 4, 1, 15497, 1, 2, 3, 7, 7, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cacheHitRespTime1hrPeak.setStatus('current')
cacheHitRespTime1hrMean = MibScalar((1, 3, 6, 1, 4, 1, 15497, 1, 2, 3, 7, 7, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cacheHitRespTime1hrMean.setStatus('current')
cacheHitRespTime1dayPeak = MibScalar((1, 3, 6, 1, 4, 1, 15497, 1, 2, 3, 7, 7, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cacheHitRespTime1dayPeak.setStatus('current')
cacheHitRespTime1dayMean = MibScalar((1, 3, 6, 1, 4, 1, 15497, 1, 2, 3, 7, 7, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cacheHitRespTime1dayMean.setStatus('current')
cacheHitRespTime1weekPeak = MibScalar((1, 3, 6, 1, 4, 1, 15497, 1, 2, 3, 7, 7, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cacheHitRespTime1weekPeak.setStatus('current')
cacheHitRespTime1weekMean = MibScalar((1, 3, 6, 1, 4, 1, 15497, 1, 2, 3, 7, 7, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cacheHitRespTime1weekMean.setStatus('current')
cacheHitRespTimeLifePeak = MibScalar((1, 3, 6, 1, 4, 1, 15497, 1, 2, 3, 7, 7, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cacheHitRespTimeLifePeak.setStatus('current')
cacheHitRespTimeLifeMean = MibScalar((1, 3, 6, 1, 4, 1, 15497, 1, 2, 3, 7, 7, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cacheHitRespTimeLifeMean.setStatus('current')
proxyRecentMissRespTimePerf = MibIdentifier((1, 3, 6, 1, 4, 1, 15497, 1, 2, 3, 7, 8))
cacheMissRespTimeNow = MibScalar((1, 3, 6, 1, 4, 1, 15497, 1, 2, 3, 7, 8, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cacheMissRespTimeNow.setStatus('current')
cacheMissRespTime1hrPeak = MibScalar((1, 3, 6, 1, 4, 1, 15497, 1, 2, 3, 7, 8, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cacheMissRespTime1hrPeak.setStatus('current')
cacheMissRespTime1hrMean = MibScalar((1, 3, 6, 1, 4, 1, 15497, 1, 2, 3, 7, 8, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cacheMissRespTime1hrMean.setStatus('current')
cacheMissRespTime1dayPeak = MibScalar((1, 3, 6, 1, 4, 1, 15497, 1, 2, 3, 7, 8, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cacheMissRespTime1dayPeak.setStatus('current')
cacheMissRespTime1dayMean = MibScalar((1, 3, 6, 1, 4, 1, 15497, 1, 2, 3, 7, 8, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cacheMissRespTime1dayMean.setStatus('current')
cacheMissRespTime1weekPeak = MibScalar((1, 3, 6, 1, 4, 1, 15497, 1, 2, 3, 7, 8, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cacheMissRespTime1weekPeak.setStatus('current')
cacheMissRespTime1weekMean = MibScalar((1, 3, 6, 1, 4, 1, 15497, 1, 2, 3, 7, 8, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cacheMissRespTime1weekMean.setStatus('current')
cacheMissRespTimeLifePeak = MibScalar((1, 3, 6, 1, 4, 1, 15497, 1, 2, 3, 7, 8, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cacheMissRespTimeLifePeak.setStatus('current')
cacheMissRespTimeLifeMean = MibScalar((1, 3, 6, 1, 4, 1, 15497, 1, 2, 3, 7, 8, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cacheMissRespTimeLifeMean.setStatus('current')
proxyRecentTotalRespTimePerf = MibIdentifier((1, 3, 6, 1, 4, 1, 15497, 1, 2, 3, 7, 9))
cacheTotalRespTimeNow = MibScalar((1, 3, 6, 1, 4, 1, 15497, 1, 2, 3, 7, 9, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cacheTotalRespTimeNow.setStatus('current')
cacheTotalRespTime1hrPeak = MibScalar((1, 3, 6, 1, 4, 1, 15497, 1, 2, 3, 7, 9, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cacheTotalRespTime1hrPeak.setStatus('current')
cacheTotalRespTime1hrMean = MibScalar((1, 3, 6, 1, 4, 1, 15497, 1, 2, 3, 7, 9, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cacheTotalRespTime1hrMean.setStatus('current')
cacheTotalRespTime1dayPeak = MibScalar((1, 3, 6, 1, 4, 1, 15497, 1, 2, 3, 7, 9, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cacheTotalRespTime1dayPeak.setStatus('current')
cacheTotalRespTime1dayMean = MibScalar((1, 3, 6, 1, 4, 1, 15497, 1, 2, 3, 7, 9, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cacheTotalRespTime1dayMean.setStatus('current')
cacheTotalRespTime1weekPeak = MibScalar((1, 3, 6, 1, 4, 1, 15497, 1, 2, 3, 7, 9, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cacheTotalRespTime1weekPeak.setStatus('current')
cacheTotalRespTime1weekMean = MibScalar((1, 3, 6, 1, 4, 1, 15497, 1, 2, 3, 7, 9, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cacheTotalRespTime1weekMean.setStatus('current')
cacheTotalRespTimeLifePeak = MibScalar((1, 3, 6, 1, 4, 1, 15497, 1, 2, 3, 7, 9, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cacheTotalRespTimeLifePeak.setStatus('current')
cacheTotalRespTimeLifeMean = MibScalar((1, 3, 6, 1, 4, 1, 15497, 1, 2, 3, 7, 9, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cacheTotalRespTimeLifeMean.setStatus('current')
proxyRecentErrsPerf = MibIdentifier((1, 3, 6, 1, 4, 1, 15497, 1, 2, 3, 7, 10))
cacheErrsNow = MibScalar((1, 3, 6, 1, 4, 1, 15497, 1, 2, 3, 7, 10, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cacheErrsNow.setStatus('current')
cacheErrs1hrPeak = MibScalar((1, 3, 6, 1, 4, 1, 15497, 1, 2, 3, 7, 10, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cacheErrs1hrPeak.setStatus('current')
cacheErrs1hrMean = MibScalar((1, 3, 6, 1, 4, 1, 15497, 1, 2, 3, 7, 10, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cacheErrs1hrMean.setStatus('current')
cacheErrs1dayPeak = MibScalar((1, 3, 6, 1, 4, 1, 15497, 1, 2, 3, 7, 10, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cacheErrs1dayPeak.setStatus('current')
cacheErrs1dayMean = MibScalar((1, 3, 6, 1, 4, 1, 15497, 1, 2, 3, 7, 10, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cacheErrs1dayMean.setStatus('current')
cacheErrs1weekPeak = MibScalar((1, 3, 6, 1, 4, 1, 15497, 1, 2, 3, 7, 10, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cacheErrs1weekPeak.setStatus('current')
cacheErrs1weekMean = MibScalar((1, 3, 6, 1, 4, 1, 15497, 1, 2, 3, 7, 10, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cacheErrs1weekMean.setStatus('current')
cacheErrsLifePeak = MibScalar((1, 3, 6, 1, 4, 1, 15497, 1, 2, 3, 7, 10, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cacheErrsLifePeak.setStatus('current')
cacheErrsLifeMean = MibScalar((1, 3, 6, 1, 4, 1, 15497, 1, 2, 3, 7, 10, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cacheErrsLifeMean.setStatus('current')
proxyRecentDeniedPerf = MibIdentifier((1, 3, 6, 1, 4, 1, 15497, 1, 2, 3, 7, 11))
cacheDeniedNow = MibScalar((1, 3, 6, 1, 4, 1, 15497, 1, 2, 3, 7, 11, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cacheDeniedNow.setStatus('current')
cacheDenied1hrPeak = MibScalar((1, 3, 6, 1, 4, 1, 15497, 1, 2, 3, 7, 11, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cacheDenied1hrPeak.setStatus('current')
cacheDenied1hrMean = MibScalar((1, 3, 6, 1, 4, 1, 15497, 1, 2, 3, 7, 11, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cacheDenied1hrMean.setStatus('current')
cacheDenied1dayPeak = MibScalar((1, 3, 6, 1, 4, 1, 15497, 1, 2, 3, 7, 11, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cacheDenied1dayPeak.setStatus('current')
cacheDenied1dayMean = MibScalar((1, 3, 6, 1, 4, 1, 15497, 1, 2, 3, 7, 11, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cacheDenied1dayMean.setStatus('current')
cacheDenied1weekPeak = MibScalar((1, 3, 6, 1, 4, 1, 15497, 1, 2, 3, 7, 11, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cacheDenied1weekPeak.setStatus('current')
cacheDenied1weekMean = MibScalar((1, 3, 6, 1, 4, 1, 15497, 1, 2, 3, 7, 11, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cacheDenied1weekMean.setStatus('current')
cacheDeniedLifePeak = MibScalar((1, 3, 6, 1, 4, 1, 15497, 1, 2, 3, 7, 11, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cacheDeniedLifePeak.setStatus('current')
cacheDeniedLifeMean = MibScalar((1, 3, 6, 1, 4, 1, 15497, 1, 2, 3, 7, 11, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cacheDeniedLifeMean.setStatus('current')
proxyRecentErrRespTimePerf = MibIdentifier((1, 3, 6, 1, 4, 1, 15497, 1, 2, 3, 7, 12))
cacheErrRespTimeNow = MibScalar((1, 3, 6, 1, 4, 1, 15497, 1, 2, 3, 7, 12, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cacheErrRespTimeNow.setStatus('current')
cacheErrRespTime1hrPeak = MibScalar((1, 3, 6, 1, 4, 1, 15497, 1, 2, 3, 7, 12, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cacheErrRespTime1hrPeak.setStatus('current')
cacheErrRespTime1hrMean = MibScalar((1, 3, 6, 1, 4, 1, 15497, 1, 2, 3, 7, 12, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cacheErrRespTime1hrMean.setStatus('current')
cacheErrRespTime1dayPeak = MibScalar((1, 3, 6, 1, 4, 1, 15497, 1, 2, 3, 7, 12, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cacheErrRespTime1dayPeak.setStatus('current')
cacheErrRespTime1dayMean = MibScalar((1, 3, 6, 1, 4, 1, 15497, 1, 2, 3, 7, 12, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cacheErrRespTime1dayMean.setStatus('current')
cacheErrRespTime1weekPeak = MibScalar((1, 3, 6, 1, 4, 1, 15497, 1, 2, 3, 7, 12, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cacheErrRespTime1weekPeak.setStatus('current')
cacheErrRespTime1weekMean = MibScalar((1, 3, 6, 1, 4, 1, 15497, 1, 2, 3, 7, 12, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cacheErrRespTime1weekMean.setStatus('current')
cacheErrRespTimeLifePeak = MibScalar((1, 3, 6, 1, 4, 1, 15497, 1, 2, 3, 7, 12, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cacheErrRespTimeLifePeak.setStatus('current')
cacheErrRespTimeLifeMean = MibScalar((1, 3, 6, 1, 4, 1, 15497, 1, 2, 3, 7, 12, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cacheErrRespTimeLifeMean.setStatus('current')
proxyRecentDeniedRespTimePerf = MibIdentifier((1, 3, 6, 1, 4, 1, 15497, 1, 2, 3, 7, 13))
cacheDeniedRespTimeNow = MibScalar((1, 3, 6, 1, 4, 1, 15497, 1, 2, 3, 7, 13, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cacheDeniedRespTimeNow.setStatus('current')
cacheDeniedRespTime1hrPeak = MibScalar((1, 3, 6, 1, 4, 1, 15497, 1, 2, 3, 7, 13, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cacheDeniedRespTime1hrPeak.setStatus('current')
cacheDeniedRespTime1hrMean = MibScalar((1, 3, 6, 1, 4, 1, 15497, 1, 2, 3, 7, 13, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cacheDeniedRespTime1hrMean.setStatus('current')
cacheDeniedRespTime1dayPeak = MibScalar((1, 3, 6, 1, 4, 1, 15497, 1, 2, 3, 7, 13, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cacheDeniedRespTime1dayPeak.setStatus('current')
cacheDeniedRespTime1dayMean = MibScalar((1, 3, 6, 1, 4, 1, 15497, 1, 2, 3, 7, 13, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cacheDeniedRespTime1dayMean.setStatus('current')
cacheDeniedRespTime1weekPeak = MibScalar((1, 3, 6, 1, 4, 1, 15497, 1, 2, 3, 7, 13, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cacheDeniedRespTime1weekPeak.setStatus('current')
cacheDeniedRespTime1weekMean = MibScalar((1, 3, 6, 1, 4, 1, 15497, 1, 2, 3, 7, 13, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cacheDeniedRespTime1weekMean.setStatus('current')
cacheDeniedRespTimeLifePeak = MibScalar((1, 3, 6, 1, 4, 1, 15497, 1, 2, 3, 7, 13, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cacheDeniedRespTimeLifePeak.setStatus('current')
cacheDeniedRespTimeLifeMean = MibScalar((1, 3, 6, 1, 4, 1, 15497, 1, 2, 3, 7, 13, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cacheDeniedRespTimeLifeMean.setStatus('current')
proxyHardwareDisk = MibIdentifier((1, 3, 6, 1, 4, 1, 15497, 1, 2, 4, 1))
hardwareDiskStatTable = MibTable((1, 3, 6, 1, 4, 1, 15497, 1, 2, 4, 1, 1), )
if mibBuilder.loadTexts: hardwareDiskStatTable.setStatus('current')
diskStatEntry = MibTableRow((1, 3, 6, 1, 4, 1, 15497, 1, 2, 4, 1, 1, 1), ).setIndexNames((0, "ASYNCOSWEBSECURITYAPPLIANCE-MIB", "diskStatEntryNumber"))
if mibBuilder.loadTexts: diskStatEntry.setStatus('current')
diskStatEntryNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 15497, 1, 2, 4, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 18))).setMaxAccess("readonly")
if mibBuilder.loadTexts: diskStatEntryNumber.setStatus('current')
diskStatWrites = MibTableColumn((1, 3, 6, 1, 4, 1, 15497, 1, 2, 4, 1, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: diskStatWrites.setStatus('current')
diskStatWriteErrs = MibTableColumn((1, 3, 6, 1, 4, 1, 15497, 1, 2, 4, 1, 1, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: diskStatWriteErrs.setStatus('current')
diskStatReads = MibTableColumn((1, 3, 6, 1, 4, 1, 15497, 1, 2, 4, 1, 1, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: diskStatReads.setStatus('current')
diskStatReadErrs = MibTableColumn((1, 3, 6, 1, 4, 1, 15497, 1, 2, 4, 1, 1, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: diskStatReadErrs.setStatus('current')
upstreamProxyFailure = NotificationType((1, 3, 6, 1, 4, 1, 15497, 1, 2, 5, 1)).setObjects(("ASYNCOS-MAIL-MIB", "connectionURL"))
if mibBuilder.loadTexts: upstreamProxyFailure.setStatus('current')
mibBuilder.exportSymbols("ASYNCOSWEBSECURITYAPPLIANCE-MIB", cacheHits1dayPeak=cacheHits1dayPeak, cacheDenied1weekMean=cacheDenied1weekMean, cacheHitRespTime1hrMean=cacheHitRespTime1hrMean, cacheSoftware=cacheSoftware, proxyMedianSvcTime=proxyMedianSvcTime, cacheClientICPHits=cacheClientICPHits, cacheServerReplySize=cacheServerReplySize, cacheErrRespTime1dayMean=cacheErrRespTime1dayMean, cacheDeniedRespTime1weekMean=cacheDeniedRespTime1weekMean, diskStatEntryNumber=diskStatEntryNumber, cacheServerSizeHistBinNumber=cacheServerSizeHistBinNumber, cacheHitRespTime1hrPeak=cacheHitRespTime1hrPeak, cacheMissRespTime1weekMean=cacheMissRespTime1weekMean, proxyRecentPerf=proxyRecentPerf, cacheMeanByteHitRatio=cacheMeanByteHitRatio, cacheMeanRespTime=cacheMeanRespTime, cacheHTTPSrvSvcTime=cacheHTTPSrvSvcTime, diskStatEntry=diskStatEntry, cacheMemoryBufferUsagePct=cacheMemoryBufferUsagePct, cacheThruput1dayMean=cacheThruput1dayMean, cacheServerICPDenials=cacheServerICPDenials, PYSNMP_MODULE_ID=asyncOSWebSecurityAppliance, cacheThruput1hrPeak=cacheThruput1hrPeak, cacheTotalRespTimeNow=cacheTotalRespTimeNow, cacheDeniedRespTime1hrMean=cacheDeniedRespTime1hrMean, cacheBwidthSpent1dayPeak=cacheBwidthSpent1dayPeak, proxyHardwareDisk=proxyHardwareDisk, cacheClientErrors=cacheClientErrors, cacheClientICPDenials=cacheClientICPDenials, cacheServerOutKb=cacheServerOutKb, cacheBwidthSavingNow=cacheBwidthSavingNow, cacheBwidthSavingLifeMean=cacheBwidthSavingLifeMean, cacheHTTPCltSvcTime=cacheHTTPCltSvcTime, cacheDenied1weekPeak=cacheDenied1weekPeak, cacheServerConnsThresh=cacheServerConnsThresh, proxyRecentMissesPerf=proxyRecentMissesPerf, cacheDenied1hrMean=cacheDenied1hrMean, cacheDeniedRespTime1dayMean=cacheDeniedRespTime1dayMean, cacheDuration=cacheDuration, cacheClientICPMisses=cacheClientICPMisses, cacheMisses1hrPeak=cacheMisses1hrPeak, cacheServerICPRequests=cacheServerICPRequests, cacheMissRespTime1weekPeak=cacheMissRespTime1weekPeak, upstreamProxyFailure=upstreamProxyFailure, cacheBwidthSaving1weekPeak=cacheBwidthSaving1weekPeak, proxyCachePerf=proxyCachePerf, cacheAdmin=cacheAdmin, cacheErrs1hrPeak=cacheErrs1hrPeak, proxyClientSidePerf=proxyClientSidePerf, cacheCpuUsage=cacheCpuUsage, cacheServerTotalConns=cacheServerTotalConns, cacheErrs1weekMean=cacheErrs1weekMean, cacheErrRespTimeLifeMean=cacheErrRespTimeLifeMean, proxyRecentErrsPerf=proxyRecentErrsPerf, proxyConfig=proxyConfig, cacheServerICPMisses=cacheServerICPMisses, proxyRecentThruputPerf=proxyRecentThruputPerf, cacheDeniedNow=cacheDeniedNow, cacheUsedStoragePct=cacheUsedStoragePct, cacheMeanHitRatio=cacheMeanHitRatio, cacheMissesNow=cacheMissesNow, cacheMaxResSize=cacheMaxResSize, cacheErrsNow=cacheErrsNow, proxySysPerf=proxySysPerf, cacheClientAccepts=cacheClientAccepts, cacheTotalRespTimeLifeMean=cacheTotalRespTimeLifeMean, cacheServerCloseIdleConns=cacheServerCloseIdleConns, cacheCacheAllObjs=cacheCacheAllObjs, cacheThruputLifeMean=cacheThruputLifeMean, cacheMeanHitRespTime=cacheMeanHitRespTime, proxyRecentBandWSpntPerf=proxyRecentBandWSpntPerf, cacheTotalRespTime1hrPeak=cacheTotalRespTime1hrPeak, cacheCacheTotalCachedObjs=cacheCacheTotalCachedObjs, proxyRecentBandWSavPerf=proxyRecentBandWSavPerf, cacheHitRespTime1weekMean=cacheHitRespTime1weekMean, cacheBwidthTotal1hrPeak=cacheBwidthTotal1hrPeak, cacheBwidthTotalNow=cacheBwidthTotalNow, proxyRecentDeniedPerf=proxyRecentDeniedPerf, cacheHits1hrPeak=cacheHits1hrPeak, cacheDeniedRespTimeLifePeak=cacheDeniedRespTimeLifePeak, cacheHits1dayMean=cacheHits1dayMean, cacheDenied1hrPeak=cacheDenied1hrPeak, cacheDeniedRespTime1dayPeak=cacheDeniedRespTime1dayPeak, cacheServerPersisConnsRetries=cacheServerPersisConnsRetries, diskStatWrites=diskStatWrites, cacheClientSizeHistBinNumber=cacheClientSizeHistBinNumber, cacheBwidthSaving1dayMean=cacheBwidthSaving1dayMean, cacheMissRespTimeLifeMean=cacheMissRespTimeLifeMean, cacheDenied1dayMean=cacheDenied1dayMean, cacheBwidthSpentLifeMean=cacheBwidthSpentLifeMean, cacheCltReplyErrPct=cacheCltReplyErrPct, cacheThruput1dayPeak=cacheThruput1dayPeak, cacheMissRespTimeLifePeak=cacheMissRespTimeLifePeak, cacheBwidthSpent1dayMean=cacheBwidthSpent1dayMean, cacheHitsLifePeak=cacheHitsLifePeak, cacheBwidthTotalLifeMean=cacheBwidthTotalLifeMean, proxyRecentTotalRespTimePerf=proxyRecentTotalRespTimePerf, cacheClientInKb=cacheClientInKb, cacheServerSizeHistTable=cacheServerSizeHistTable, cacheBwidthSpent1hrMean=cacheBwidthSpent1hrMean, cacheServerSizeHistEntry=cacheServerSizeHistEntry, cacheCacheLiveCachedObjSizes=cacheCacheLiveCachedObjSizes, cacheMissRespTime1dayMean=cacheMissRespTime1dayMean, cacheErrsLifeMean=cacheErrsLifeMean, cacheHTTPSvcWaitTime=cacheHTTPSvcWaitTime, proxyRecentDeniedRespTimePerf=proxyRecentDeniedRespTimePerf, cacheBwidthTotal1weekPeak=cacheBwidthTotal1weekPeak, cacheCacheActiveObjs=cacheCacheActiveObjs, cacheBwidthTotal1weekMean=cacheBwidthTotal1weekMean, cacheServerICPHits=cacheServerICPHits, cacheBusyCPUPct=cacheBusyCPUPct, cacheClientIdleConns=cacheClientIdleConns, cacheThruputLifePeak=cacheThruputLifePeak, proxyRecentHitsPerf=proxyRecentHitsPerf, diskStatWriteErrs=diskStatWriteErrs, cacheMedianSvcTable=cacheMedianSvcTable, cacheClientReqMisses=cacheClientReqMisses, cacheErrsLifePeak=cacheErrsLifePeak, cacheMemory=cacheMemory, cacheTotalRespTime1weekMean=cacheTotalRespTime1weekMean, cacheHitRespTimeLifeMean=cacheHitRespTimeLifeMean, cacheTotalRespTimeLifePeak=cacheTotalRespTimeLifePeak, proxyRecentErrRespTimePerf=proxyRecentErrRespTimePerf, cacheMissesLifeMean=cacheMissesLifeMean, cacheMedianTime=cacheMedianTime, cacheTotalRespTime1dayMean=cacheTotalRespTime1dayMean, cacheDeniedLifeMean=cacheDeniedLifeMean, cacheHitsNow=cacheHitsNow, cacheTotalRespTime1hrMean=cacheTotalRespTime1hrMean, proxyRecentBandWTotPerf=proxyRecentBandWTotPerf, cacheClientReqDenials=cacheClientReqDenials, proxyTraps=proxyTraps, cacheMisses1weekMean=cacheMisses1weekMean, proxySystem=proxySystem, cacheClientReqSize=cacheClientReqSize, cacheHits1weekPeak=cacheHits1weekPeak, proxyPerf=proxyPerf, cacheHitRespTime1weekPeak=cacheHitRespTime1weekPeak, proxyServerSidePerf=proxyServerSidePerf, cacheVersion=cacheVersion, hardwareDiskStatTable=hardwareDiskStatTable, cacheThruput1weekMean=cacheThruput1weekMean, cacheMisses1weekPeak=cacheMisses1weekPeak, cacheServerErrors=cacheServerErrors, cacheServerRegConnsRetries=cacheServerRegConnsRetries, cacheMedianSvcEntry=cacheMedianSvcEntry, cacheBwidthTotal1hrMean=cacheBwidthTotal1hrMean, cacheClientTotalConns=cacheClientTotalConns, cacheTotalRespTime1weekPeak=cacheTotalRespTime1weekPeak, diskStatReadErrs=diskStatReadErrs, cacheServerLimitIdleConns=cacheServerLimitIdleConns, cacheBwidthSaving1hrPeak=cacheBwidthSaving1hrPeak, cacheThruputNow=cacheThruputNow, cacheBwidthSpentLifePeak=cacheBwidthSpentLifePeak, cacheBwidthSaving1dayPeak=cacheBwidthSaving1dayPeak, cacheClientICPErrors=cacheClientICPErrors, cacheServerRequests=cacheServerRequests, cacheDeniedLifePeak=cacheDeniedLifePeak, cacheUptime=cacheUptime, proxyExecutiveSummary=proxyExecutiveSummary, cacheErrRespTime1dayPeak=cacheErrRespTime1dayPeak, cacheMissRespTime1hrMean=cacheMissRespTime1hrMean, cacheHits1hrMean=cacheHits1hrMean, cacheSysStorage=cacheSysStorage, cacheMisses1dayPeak=cacheMisses1dayPeak, cacheClientRequests=cacheClientRequests, cacheErrRespTime1hrPeak=cacheErrRespTime1hrPeak, cacheBwidthSaving1hrMean=cacheBwidthSaving1hrMean, cacheBwidthSaving1weekMean=cacheBwidthSaving1weekMean, cacheBwidthSpentNow=cacheBwidthSpentNow, proxyHardware=proxyHardware, licenseExpiration=licenseExpiration, cacheClientSizeHistTable=cacheClientSizeHistTable, cacheTotalHttpReqs=cacheTotalHttpReqs, cacheThruput1hrMean=cacheThruput1hrMean, cacheMisses1hrMean=cacheMisses1hrMean, cacheServerSockets=cacheServerSockets, cacheBwidthSavingLifePeak=cacheBwidthSavingLifePeak, cacheServerICPErrors=cacheServerICPErrors, cacheHitsLifeMean=cacheHitsLifeMean, cacheHitRespTimeLifePeak=cacheHitRespTimeLifePeak, cacheHitRespTimeNow=cacheHitRespTimeNow, cacheErrs1weekPeak=cacheErrs1weekPeak, cacheHTTPMissSvcTime=cacheHTTPMissSvcTime, cacheServerInKb=cacheServerInKb, cacheBwidthSpent1weekPeak=cacheBwidthSpent1weekPeak, cacheDeniedRespTimeLifeMean=cacheDeniedRespTimeLifeMean, diskStatReads=diskStatReads, cacheMissesLifePeak=cacheMissesLifePeak, cacheErrs1hrMean=cacheErrs1hrMean, cacheServerEarlyCloseRetries=cacheServerEarlyCloseRetries, cacheClientHits=cacheClientHits, cacheHTTPHitSvcTime=cacheHTTPHitSvcTime, cacheBwidthSpent1hrPeak=cacheBwidthSpent1hrPeak, cacheServerIdleConns=cacheServerIdleConns, cacheErrs1dayMean=cacheErrs1dayMean, cacheDenied1dayPeak=cacheDenied1dayPeak, cacheDeniedRespTime1hrPeak=cacheDeniedRespTime1hrPeak, cacheDnsSvcTime=cacheDnsSvcTime, cacheBwidthTotal1dayMean=cacheBwidthTotal1dayMean, cacheClientOutKb=cacheClientOutKb, cacheCacheSizeHistTable=cacheCacheSizeHistTable, cacheThruput1weekPeak=cacheThruput1weekPeak, proxyRecentHitRespTimePerf=proxyRecentHitRespTimePerf, cacheHitRespTime1dayPeak=cacheHitRespTime1dayPeak, cacheCacheSizeHistEntry=cacheCacheSizeHistEntry, cacheBwidthTotalLifePeak=cacheBwidthTotalLifePeak, cacheErrRespTime1weekMean=cacheErrRespTime1weekMean, cacheCacheTotalCachedObjSizes=cacheCacheTotalCachedObjSizes, cacheBwidthTotal1dayPeak=cacheBwidthTotal1dayPeak, cacheSizeHistBinNumber=cacheSizeHistBinNumber, cacheMeanMissRespTime=cacheMeanMissRespTime, cacheCpuTime=cacheCpuTime, cacheMissRespTime1dayPeak=cacheMissRespTime1dayPeak, cacheMissRespTimeNow=cacheMissRespTimeNow, cacheDeniedRespTimeNow=cacheDeniedRespTimeNow, cacheClientMaxConns=cacheClientMaxConns, asyncOSWebSecurityAppliance=asyncOSWebSecurityAppliance, cacheMisses1dayMean=cacheMisses1dayMean, cacheHitRespTime1dayMean=cacheHitRespTime1dayMean, cacheDeniedRespTime1weekPeak=cacheDeniedRespTime1weekPeak, cacheClientICPRequests=cacheClientICPRequests, cacheErrRespTimeNow=cacheErrRespTimeNow, cacheMissRespTime1hrPeak=cacheMissRespTime1hrPeak, proxyRecentMissRespTimePerf=proxyRecentMissRespTimePerf, cacheErrRespTime1weekPeak=cacheErrRespTime1weekPeak, cacheErrRespTime1hrMean=cacheErrRespTime1hrMean, cacheServerRWErrorRetries=cacheServerRWErrorRetries, cacheHits1weekMean=cacheHits1weekMean, cacheTotalRespTime1dayPeak=cacheTotalRespTime1dayPeak, cacheCacheLiveCachedObjs=cacheCacheLiveCachedObjs, cacheBwidthSpent1weekMean=cacheBwidthSpent1weekMean, cacheClientSizeHistEntry=cacheClientSizeHistEntry, cacheErrRespTimeLifePeak=cacheErrRespTimeLifePeak, cacheTotalBandwidthSaving=cacheTotalBandwidthSaving, cacheErrs1dayPeak=cacheErrs1dayPeak)
