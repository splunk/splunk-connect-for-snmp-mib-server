#
# PySNMP MIB module BW-BroadworksDiameterServer (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/BW-BroadworksDiameterServer
# Produced by pysmi-0.3.4 at Mon Apr 29 17:24:54 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ValueRangeConstraint, ConstraintsUnion, ConstraintsIntersection, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ValueRangeConstraint", "ConstraintsUnion", "ConstraintsIntersection", "SingleValueConstraint")
NotificationGroup, ModuleCompliance, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance", "ObjectGroup")
enterprises, ModuleIdentity, IpAddress, Unsigned32, NotificationType, Counter32, TimeTicks, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter64, Integer32, MibIdentifier, iso, ObjectIdentity, Bits, Gauge32 = mibBuilder.importSymbols("SNMPv2-SMI", "enterprises", "ModuleIdentity", "IpAddress", "Unsigned32", "NotificationType", "Counter32", "TimeTicks", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter64", "Integer32", "MibIdentifier", "iso", "ObjectIdentity", "Bits", "Gauge32")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
broadsoft = ModuleIdentity((1, 3, 6, 1, 4, 1, 6431))
broadsoft.setRevisions(('2006-01-26 00:01',))
if mibBuilder.loadTexts: broadsoft.setLastUpdated('200705230000Z')
if mibBuilder.loadTexts: broadsoft.setOrganization('BroadSoft, Inc')
broadworks = MibIdentifier((1, 3, 6, 1, 4, 1, 6431, 1))
diameterFrontNode = MibIdentifier((1, 3, 6, 1, 4, 1, 6431, 1, 10))
protocolsModule = MibIdentifier((1, 3, 6, 1, 4, 1, 6431, 1, 10, 1))
managementModule = MibIdentifier((1, 3, 6, 1, 4, 1, 6431, 1, 10, 2))
dsBaseProtocolStats = MibIdentifier((1, 3, 6, 1, 4, 1, 6431, 1, 10, 1, 1))
bwDiameterFrontNodeRequestsOut = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 10, 1, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwDiameterFrontNodeRequestsOut.setStatus('current')
bwDiameterFrontNodeRequestsIn = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 10, 1, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwDiameterFrontNodeRequestsIn.setStatus('current')
bwDiameterFrontNodeResponsesOut = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 10, 1, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwDiameterFrontNodeResponsesOut.setStatus('current')
bwDiameterFrontNodeResponsesIn = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 10, 1, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwDiameterFrontNodeResponsesIn.setStatus('current')
bwDiameterFrontNodeDWRsOut = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 10, 1, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwDiameterFrontNodeDWRsOut.setStatus('current')
bwDiameterFrontNodeDWRsIn = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 10, 1, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwDiameterFrontNodeDWRsIn.setStatus('current')
bwDiameterFrontNodeDWAsOut = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 10, 1, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwDiameterFrontNodeDWAsOut.setStatus('current')
bwDiameterFrontNodeDWAsIn = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 10, 1, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwDiameterFrontNodeDWAsIn.setStatus('current')
bwDiameterFrontNodeCERsOut = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 10, 1, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwDiameterFrontNodeCERsOut.setStatus('current')
bwDiameterFrontNodeCERsIn = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 10, 1, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwDiameterFrontNodeCERsIn.setStatus('current')
bwDiameterFrontNodeCEAsOut = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 10, 1, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwDiameterFrontNodeCEAsOut.setStatus('current')
bwDiameterFrontNodeCEAsIn = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 10, 1, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwDiameterFrontNodeCEAsIn.setStatus('current')
bwDiameterFrontNodeDPRsOut = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 10, 1, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwDiameterFrontNodeDPRsOut.setStatus('current')
bwDiameterFrontNodeDPRsIn = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 10, 1, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwDiameterFrontNodeDPRsIn.setStatus('current')
bwDiameterFrontNodeDPAsOut = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 10, 1, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwDiameterFrontNodeDPAsOut.setStatus('current')
bwDiameterFrontNodeDPAsIn = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 10, 1, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwDiameterFrontNodeDPAsIn.setStatus('current')
bwDiameterFrontNodeSTRsOut = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 10, 1, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwDiameterFrontNodeSTRsOut.setStatus('current')
bwDiameterFrontNodeSTRsIn = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 10, 1, 1, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwDiameterFrontNodeSTRsIn.setStatus('current')
bwDiameterFrontNodeSTAsOut = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 10, 1, 1, 19), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwDiameterFrontNodeSTAsOut.setStatus('current')
bwDiameterFrontNodeSTAsIn = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 10, 1, 1, 20), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwDiameterFrontNodeSTAsIn.setStatus('current')
bwDiameterFrontNodeASRsOut = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 10, 1, 1, 21), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwDiameterFrontNodeASRsOut.setStatus('current')
bwDiameterFrontNodeASRsIn = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 10, 1, 1, 22), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwDiameterFrontNodeASRsIn.setStatus('current')
bwDiameterFrontNodeASAsOut = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 10, 1, 1, 23), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwDiameterFrontNodeASAsOut.setStatus('current')
bwDiameterFrontNodeASAsIn = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 10, 1, 1, 24), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwDiameterFrontNodeASAsIn.setStatus('current')
bwDiameterFrontNodeResetAllCounters = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 10, 2, 1), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwDiameterFrontNodeResetAllCounters.setStatus('current')
mibBuilder.exportSymbols("BW-BroadworksDiameterServer", bwDiameterFrontNodeResponsesOut=bwDiameterFrontNodeResponsesOut, bwDiameterFrontNodeDWAsOut=bwDiameterFrontNodeDWAsOut, bwDiameterFrontNodeDWRsIn=bwDiameterFrontNodeDWRsIn, bwDiameterFrontNodeSTAsOut=bwDiameterFrontNodeSTAsOut, bwDiameterFrontNodeASAsIn=bwDiameterFrontNodeASAsIn, bwDiameterFrontNodeDPRsIn=bwDiameterFrontNodeDPRsIn, broadsoft=broadsoft, bwDiameterFrontNodeSTRsIn=bwDiameterFrontNodeSTRsIn, bwDiameterFrontNodeResponsesIn=bwDiameterFrontNodeResponsesIn, bwDiameterFrontNodeASRsIn=bwDiameterFrontNodeASRsIn, broadworks=broadworks, bwDiameterFrontNodeSTAsIn=bwDiameterFrontNodeSTAsIn, bwDiameterFrontNodeDPRsOut=bwDiameterFrontNodeDPRsOut, diameterFrontNode=diameterFrontNode, bwDiameterFrontNodeASAsOut=bwDiameterFrontNodeASAsOut, bwDiameterFrontNodeCEAsIn=bwDiameterFrontNodeCEAsIn, dsBaseProtocolStats=dsBaseProtocolStats, managementModule=managementModule, bwDiameterFrontNodeDWAsIn=bwDiameterFrontNodeDWAsIn, bwDiameterFrontNodeCEAsOut=bwDiameterFrontNodeCEAsOut, bwDiameterFrontNodeASRsOut=bwDiameterFrontNodeASRsOut, bwDiameterFrontNodeDPAsIn=bwDiameterFrontNodeDPAsIn, bwDiameterFrontNodeDWRsOut=bwDiameterFrontNodeDWRsOut, bwDiameterFrontNodeRequestsOut=bwDiameterFrontNodeRequestsOut, protocolsModule=protocolsModule, bwDiameterFrontNodeCERsOut=bwDiameterFrontNodeCERsOut, bwDiameterFrontNodeDPAsOut=bwDiameterFrontNodeDPAsOut, PYSNMP_MODULE_ID=broadsoft, bwDiameterFrontNodeRequestsIn=bwDiameterFrontNodeRequestsIn, bwDiameterFrontNodeResetAllCounters=bwDiameterFrontNodeResetAllCounters, bwDiameterFrontNodeSTRsOut=bwDiameterFrontNodeSTRsOut, bwDiameterFrontNodeCERsIn=bwDiameterFrontNodeCERsIn)
