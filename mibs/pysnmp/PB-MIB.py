#
# PySNMP MIB module PB-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/PB-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 20:28:33 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ValueSizeConstraint, ValueRangeConstraint, ConstraintsIntersection, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ValueSizeConstraint", "ValueRangeConstraint", "ConstraintsIntersection", "ConstraintsUnion")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
ModuleIdentity, NotificationType, Counter32, MibScalar, MibTable, MibTableRow, MibTableColumn, ObjectIdentity, Unsigned32, MibIdentifier, experimental, iso, Integer32, Bits, enterprises, IpAddress, Counter64, Gauge32, TimeTicks = mibBuilder.importSymbols("SNMPv2-SMI", "ModuleIdentity", "NotificationType", "Counter32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ObjectIdentity", "Unsigned32", "MibIdentifier", "experimental", "iso", "Integer32", "Bits", "enterprises", "IpAddress", "Counter64", "Gauge32", "TimeTicks")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
usr = MibIdentifier((1, 3, 6, 1, 4, 1, 429))
nas = MibIdentifier((1, 3, 6, 1, 4, 1, 429, 1))
pb = MibIdentifier((1, 3, 6, 1, 4, 1, 429, 1, 12))
pbCfg = MibIdentifier((1, 3, 6, 1, 4, 1, 429, 1, 12, 1))
pbCfgTable = MibTable((1, 3, 6, 1, 4, 1, 429, 1, 12, 1, 1), )
if mibBuilder.loadTexts: pbCfgTable.setStatus('mandatory')
pbCfgEntry = MibTableRow((1, 3, 6, 1, 4, 1, 429, 1, 12, 1, 1, 1), ).setIndexNames((0, "PB-MIB", "pbCfgIndex"))
if mibBuilder.loadTexts: pbCfgEntry.setStatus('mandatory')
pbCfgIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 12, 1, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pbCfgIndex.setStatus('mandatory')
pbCfgMaxSessions = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 12, 1, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pbCfgMaxSessions.setStatus('mandatory')
pbSession = MibIdentifier((1, 3, 6, 1, 4, 1, 429, 1, 12, 2))
pbSessionTable = MibTable((1, 3, 6, 1, 4, 1, 429, 1, 12, 2, 1), )
if mibBuilder.loadTexts: pbSessionTable.setStatus('mandatory')
pbSessionEntry = MibTableRow((1, 3, 6, 1, 4, 1, 429, 1, 12, 2, 1, 1), ).setIndexNames((0, "PB-MIB", "pbSessionEntityIndex"), (0, "PB-MIB", "pbSessionIndex"))
if mibBuilder.loadTexts: pbSessionEntry.setStatus('mandatory')
pbSessionEntityIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 12, 2, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pbSessionEntityIndex.setStatus('mandatory')
pbSessionIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 12, 2, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pbSessionIndex.setStatus('mandatory')
pbSessionDestSlot = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 12, 2, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 64))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pbSessionDestSlot.setStatus('mandatory')
pbSessionDestChan = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 12, 2, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pbSessionDestChan.setStatus('mandatory')
pbSessionDestSess = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 12, 2, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pbSessionDestSess.setStatus('mandatory')
pbSessionRowState = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 12, 2, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("free", 1), ("used", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pbSessionRowState.setStatus('mandatory')
pbSessionStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 12, 2, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("unassigned", 1), ("assigned", 2), ("connected", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pbSessionStatus.setStatus('mandatory')
pbSessionReqStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 12, 2, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disconnected", 1), ("connected", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pbSessionReqStatus.setStatus('mandatory')
pbSessionLastRequest = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 12, 2, 1, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15))).clone(namedValues=NamedValues(("unknown", 1), ("open", 2), ("close", 3), ("listen", 4), ("dial", 5), ("disconnect", 6), ("transmit", 7), ("receive", 8), ("setMode", 9), ("query", 10), ("flush", 11), ("kill", 12), ("reserve", 13), ("answer", 14), ("attach", 15)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pbSessionLastRequest.setStatus('optional')
pbSessionPktSents = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 12, 2, 1, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pbSessionPktSents.setStatus('mandatory')
pbSessionPktRcvds = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 12, 2, 1, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pbSessionPktRcvds.setStatus('mandatory')
pbSessionPktSize = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 12, 2, 1, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pbSessionPktSize.setStatus('mandatory')
pbSessionBusTimeOuts = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 12, 2, 1, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pbSessionBusTimeOuts.setStatus('mandatory')
pbSessionErrorStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 12, 2, 1, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58))).clone(namedValues=NamedValues(("noError", 1), ("invalidParm", 2), ("socketNotOpened", 3), ("noMoreSocket", 4), ("connectionExist", 5), ("connectionFailed", 6), ("noMoreConnObj", 7), ("noActiveConn", 8), ("ackWaitTimeout", 9), ("hwNakRcvd", 10), ("otherBusError", 11), ("linkStartRcvd", 12), ("outOfSeqFrame", 13), ("noMemory", 14), ("nullPointer", 15), ("invalidBlock", 16), ("notInitialized", 17), ("failedToRecv", 18), ("invalidMsgType", 19), ("exceedMaxSends", 20), ("connectionReset", 21), ("socketClosed", 22), ("uiReqPending", 23), ("heartbeatTimeout", 24), ("remoteBusy", 25), ("localBusy", 26), ("noResponse", 27), ("linkdownNoTx", 28), ("noDataToTx", 29), ("txPreAck", 30), ("txTardyAck", 31), ("txBusTimeOut", 32), ("rxBusTimeOut", 33), ("txTAL", 34), ("rxTAL", 35), ("txMasterTimeOut", 36), ("clkVanished", 37), ("clkReturned", 38), ("shutdown", 39), ("frameError", 40), ("xIDTimeOut", 41), ("recvLSinInfoTransferState", 42), ("recvIFrameWithWrongSeq", 43), ("rxMsgBufferOverflow", 44), ("linkDown", 45), ("listenFailed", 46), ("listenRcvFailed", 47), ("dtrDrop", 48), ("answerFailed", 49), ("openFailed", 50), ("closeFailed", 51), ("readFailed", 52), ("writeFailed", 53), ("autoParityFailed", 54), ("setmodeFailed", 55), ("badDataBase", 56), ("padStreamsError", 57), ("padError", 58)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pbSessionErrorStatus.setStatus('mandatory')
pbTrapEna = MibIdentifier((1, 3, 6, 1, 4, 1, 429, 1, 12, 3))
pbTrapEnaTable = MibTable((1, 3, 6, 1, 4, 1, 429, 1, 12, 3, 1), )
if mibBuilder.loadTexts: pbTrapEnaTable.setStatus('mandatory')
pbTrapEnaEntry = MibTableRow((1, 3, 6, 1, 4, 1, 429, 1, 12, 3, 1, 1), ).setIndexNames((0, "PB-MIB", "pbTrapEnaIndex"), (0, "PB-MIB", "pbTrapSessionIndex"))
if mibBuilder.loadTexts: pbTrapEnaEntry.setStatus('mandatory')
pbTrapEnaIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 12, 3, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pbTrapEnaIndex.setStatus('mandatory')
pbTrapSessionIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 12, 3, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pbTrapSessionIndex.setStatus('mandatory')
pbTrapEnaSessActive = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 12, 3, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pbTrapEnaSessActive.setStatus('mandatory')
pbTrapEnaPktBusCongest = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 12, 3, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pbTrapEnaPktBusCongest.setStatus('mandatory')
pbTrapEnaPktBusSessLost = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 12, 3, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pbTrapEnaPktBusSessLost.setStatus('mandatory')
pbTrapEnaSessionInactive = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 12, 3, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pbTrapEnaSessionInactive.setStatus('mandatory')
pbTrapEnaSessionError = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 12, 3, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pbTrapEnaSessionError.setStatus('mandatory')
mibBuilder.exportSymbols("PB-MIB", pbSessionBusTimeOuts=pbSessionBusTimeOuts, pbSessionDestSess=pbSessionDestSess, pbSessionDestChan=pbSessionDestChan, pbTrapEna=pbTrapEna, pbTrapEnaTable=pbTrapEnaTable, pbSessionEntry=pbSessionEntry, pbSessionLastRequest=pbSessionLastRequest, pbTrapEnaSessionInactive=pbTrapEnaSessionInactive, pbTrapEnaIndex=pbTrapEnaIndex, pbCfgMaxSessions=pbCfgMaxSessions, pbSessionDestSlot=pbSessionDestSlot, pbSessionPktSize=pbSessionPktSize, pbSessionPktSents=pbSessionPktSents, pb=pb, pbTrapEnaEntry=pbTrapEnaEntry, pbSession=pbSession, pbTrapEnaSessActive=pbTrapEnaSessActive, pbCfgTable=pbCfgTable, pbCfgEntry=pbCfgEntry, pbSessionReqStatus=pbSessionReqStatus, pbTrapEnaPktBusSessLost=pbTrapEnaPktBusSessLost, pbSessionErrorStatus=pbSessionErrorStatus, usr=usr, pbTrapSessionIndex=pbTrapSessionIndex, pbSessionPktRcvds=pbSessionPktRcvds, pbSessionIndex=pbSessionIndex, pbTrapEnaSessionError=pbTrapEnaSessionError, pbSessionRowState=pbSessionRowState, pbTrapEnaPktBusCongest=pbTrapEnaPktBusCongest, pbSessionEntityIndex=pbSessionEntityIndex, pbCfgIndex=pbCfgIndex, pbSessionStatus=pbSessionStatus, pbCfg=pbCfg, nas=nas, pbSessionTable=pbSessionTable)
