#
# PySNMP MIB module SDCARDMGMT-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/SDCARDMGMT-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 20:53:26 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ValueSizeConstraint, ConstraintsIntersection, ConstraintsUnion, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ValueSizeConstraint", "ConstraintsIntersection", "ConstraintsUnion", "ValueRangeConstraint")
dlink_common_mgmt, = mibBuilder.importSymbols("DLINK-ID-REC-MIB", "dlink-common-mgmt")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
Counter64, ObjectIdentity, MibIdentifier, TimeTicks, Gauge32, Integer32, IpAddress, iso, NotificationType, Unsigned32, ModuleIdentity, Counter32, Bits, MibScalar, MibTable, MibTableRow, MibTableColumn = mibBuilder.importSymbols("SNMPv2-SMI", "Counter64", "ObjectIdentity", "MibIdentifier", "TimeTicks", "Gauge32", "Integer32", "IpAddress", "iso", "NotificationType", "Unsigned32", "ModuleIdentity", "Counter32", "Bits", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn")
DisplayString, RowStatus, TextualConvention, TruthValue = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "RowStatus", "TextualConvention", "TruthValue")
swTimeRangeMgmtRangeName, = mibBuilder.importSymbols("TIMERANGE-MIB", "swTimeRangeMgmtRangeName")
swSDCardMgmtMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 171, 12, 95))
if mibBuilder.loadTexts: swSDCardMgmtMIB.setLastUpdated('201012220000Z')
if mibBuilder.loadTexts: swSDCardMgmtMIB.setOrganization('D-Link Corp.')
swSDCardMgmtNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 12, 95, 0))
swSDCardMgmtMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 12, 95, 1))
swSDCardMgmtGeneralGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 12, 95, 1, 1))
swSDCardMgmtBackupCtrl = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 12, 95, 1, 2))
swSDCardMgmtExecCtrl = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 12, 95, 1, 3))
swSDCardMgmtExecConfigCtrl = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 12, 95, 1, 4))
swSDCardMgmtBackupCtrlTable = MibTable((1, 3, 6, 1, 4, 1, 171, 12, 95, 1, 2, 1), )
if mibBuilder.loadTexts: swSDCardMgmtBackupCtrlTable.setStatus('current')
swSDCardMgmtBackupCtrlEntry = MibTableRow((1, 3, 6, 1, 4, 1, 171, 12, 95, 1, 2, 1, 1), ).setIndexNames((0, "SDCARDMGMT-MIB", "swSDCardMgmtBackupType"), (0, "TIMERANGE-MIB", "swTimeRangeMgmtRangeName"), (0, "SDCARDMGMT-MIB", "swSDCardMgmtBackupFilename"))
if mibBuilder.loadTexts: swSDCardMgmtBackupCtrlEntry.setStatus('current')
swSDCardMgmtBackupType = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 95, 1, 2, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("configuration", 1), ("log", 2))))
if mibBuilder.loadTexts: swSDCardMgmtBackupType.setStatus('current')
swSDCardMgmtBackupFilename = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 95, 1, 2, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32)))
if mibBuilder.loadTexts: swSDCardMgmtBackupFilename.setStatus('current')
swSDCardMgmtBackupState = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 95, 1, 2, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: swSDCardMgmtBackupState.setStatus('current')
swSDCardMgmtBackupRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 95, 1, 2, 1, 1, 100), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: swSDCardMgmtBackupRowStatus.setStatus('current')
swSDCardMgmtExecCtrlTable = MibTable((1, 3, 6, 1, 4, 1, 171, 12, 95, 1, 3, 1), )
if mibBuilder.loadTexts: swSDCardMgmtExecCtrlTable.setStatus('current')
swSDCardMgmtExecCtrlEntry = MibTableRow((1, 3, 6, 1, 4, 1, 171, 12, 95, 1, 3, 1, 1), ).setIndexNames((0, "TIMERANGE-MIB", "swTimeRangeMgmtRangeName"), (0, "SDCARDMGMT-MIB", "swSDCardMgmtExecFilename"))
if mibBuilder.loadTexts: swSDCardMgmtExecCtrlEntry.setStatus('current')
swSDCardMgmtExecFilename = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 95, 1, 3, 1, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32)))
if mibBuilder.loadTexts: swSDCardMgmtExecFilename.setStatus('current')
swSDCardMgmtExecState = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 95, 1, 3, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: swSDCardMgmtExecState.setStatus('current')
swSDCardMgmtExecIncrement = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 95, 1, 3, 1, 1, 3), TruthValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: swSDCardMgmtExecIncrement.setStatus('current')
swSDCardMgmtExecRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 95, 1, 3, 1, 1, 100), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: swSDCardMgmtExecRowStatus.setStatus('current')
swSDCardMgmtExecConfigFilename = MibScalar((1, 3, 6, 1, 4, 1, 171, 12, 95, 1, 4, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swSDCardMgmtExecConfigFilename.setStatus('current')
swSDCardMgmtExecConfigIncrement = MibScalar((1, 3, 6, 1, 4, 1, 171, 12, 95, 1, 4, 2), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swSDCardMgmtExecConfigIncrement.setStatus('current')
swSDCardMgmtExecConfigAction = MibScalar((1, 3, 6, 1, 4, 1, 171, 12, 95, 1, 4, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("other", 1), ("start", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swSDCardMgmtExecConfigAction.setStatus('current')
mibBuilder.exportSymbols("SDCARDMGMT-MIB", swSDCardMgmtExecConfigAction=swSDCardMgmtExecConfigAction, swSDCardMgmtMIBObjects=swSDCardMgmtMIBObjects, swSDCardMgmtBackupCtrlEntry=swSDCardMgmtBackupCtrlEntry, swSDCardMgmtBackupCtrl=swSDCardMgmtBackupCtrl, swSDCardMgmtExecCtrlTable=swSDCardMgmtExecCtrlTable, swSDCardMgmtExecConfigCtrl=swSDCardMgmtExecConfigCtrl, swSDCardMgmtGeneralGroup=swSDCardMgmtGeneralGroup, swSDCardMgmtBackupRowStatus=swSDCardMgmtBackupRowStatus, swSDCardMgmtMIB=swSDCardMgmtMIB, swSDCardMgmtExecCtrl=swSDCardMgmtExecCtrl, swSDCardMgmtExecConfigIncrement=swSDCardMgmtExecConfigIncrement, swSDCardMgmtExecRowStatus=swSDCardMgmtExecRowStatus, swSDCardMgmtExecCtrlEntry=swSDCardMgmtExecCtrlEntry, swSDCardMgmtBackupType=swSDCardMgmtBackupType, swSDCardMgmtExecState=swSDCardMgmtExecState, swSDCardMgmtBackupFilename=swSDCardMgmtBackupFilename, swSDCardMgmtExecFilename=swSDCardMgmtExecFilename, swSDCardMgmtNotifications=swSDCardMgmtNotifications, PYSNMP_MODULE_ID=swSDCardMgmtMIB, swSDCardMgmtExecConfigFilename=swSDCardMgmtExecConfigFilename, swSDCardMgmtBackupCtrlTable=swSDCardMgmtBackupCtrlTable, swSDCardMgmtBackupState=swSDCardMgmtBackupState, swSDCardMgmtExecIncrement=swSDCardMgmtExecIncrement)
