#
# PySNMP MIB module SW-CFG-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/SW-CFG-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 21:04:44 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ConstraintsUnion, SingleValueConstraint, ConstraintsIntersection, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ConstraintsUnion", "SingleValueConstraint", "ConstraintsIntersection", "ValueSizeConstraint")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
Bits, Gauge32, Counter32, TimeTicks, IpAddress, MibIdentifier, iso, MibScalar, MibTable, MibTableRow, MibTableColumn, ModuleIdentity, Integer32, NotificationType, enterprises, Counter64, NotificationType, Unsigned32, ObjectIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "Bits", "Gauge32", "Counter32", "TimeTicks", "IpAddress", "MibIdentifier", "iso", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ModuleIdentity", "Integer32", "NotificationType", "enterprises", "Counter64", "NotificationType", "Unsigned32", "ObjectIdentity")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
class MacAddress(OctetString):
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(6, 6)
    fixedLength = 6

nbase = MibIdentifier((1, 3, 6, 1, 4, 1, 629))
nbSwitchG1 = MibIdentifier((1, 3, 6, 1, 4, 1, 629, 1))
nbSwitchG1Il = MibIdentifier((1, 3, 6, 1, 4, 1, 629, 1, 50))
nbSwitchConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 629, 1, 50, 13))
nbSwMacTable = MibTable((1, 3, 6, 1, 4, 1, 629, 1, 50, 13, 5), )
if mibBuilder.loadTexts: nbSwMacTable.setStatus('mandatory')
nbSwMacEntry = MibTableRow((1, 3, 6, 1, 4, 1, 629, 1, 50, 13, 5, 1), ).setIndexNames((0, "SW-CFG-MIB", "nbSwMac"), (0, "SW-CFG-MIB", "nbSwMacVid"))
if mibBuilder.loadTexts: nbSwMacEntry.setStatus('mandatory')
nbSwMac = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 13, 5, 1, 1), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbSwMac.setStatus('mandatory')
nbSwMacVid = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 13, 5, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(2, 4096))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbSwMacVid.setStatus('mandatory')
nbSwMacVidx = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 13, 5, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(2, 4096))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbSwMacVidx.setStatus('mandatory')
nbSwMacGetViewIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 13, 5, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbSwMacGetViewIndex.setStatus('mandatory')
nbSwMacPort = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 13, 5, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbSwMacPort.setStatus('mandatory')
nbSwMacMode = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 13, 5, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("dynamic", 1), ("static", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbSwMacMode.setStatus('mandatory')
nbSwMacTagged = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 13, 5, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbSwMacTagged.setStatus('mandatory')
nbSwMacStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 13, 5, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("valid", 1), ("invalid", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbSwMacStatus.setStatus('mandatory')
nbSwPortCfg = MibIdentifier((1, 3, 6, 1, 4, 1, 629, 1, 50, 13, 6))
nbSwPortsMaxNumber = MibScalar((1, 3, 6, 1, 4, 1, 629, 1, 50, 13, 6, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbSwPortsMaxNumber.setStatus('mandatory')
nbSwPortsActualNumber = MibScalar((1, 3, 6, 1, 4, 1, 629, 1, 50, 13, 6, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbSwPortsActualNumber.setStatus('mandatory')
nbSwPortTable = MibTable((1, 3, 6, 1, 4, 1, 629, 1, 50, 13, 6, 3), )
if mibBuilder.loadTexts: nbSwPortTable.setStatus('mandatory')
nbSwPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 629, 1, 50, 13, 6, 3, 1), ).setIndexNames((0, "SW-CFG-MIB", "nbSwPortIndex"))
if mibBuilder.loadTexts: nbSwPortEntry.setStatus('mandatory')
nbSwPortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 13, 6, 3, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbSwPortIndex.setStatus('mandatory')
nbSwPortLanType = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 13, 6, 3, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10))).clone(namedValues=NamedValues(("none", 1), ("eth10", 2), ("eth100", 3), ("eth10-100", 4), ("eth100B", 5), ("eth1000B", 6), ("atmLane", 7), ("eth100Grp", 8), ("eth10-100Grp", 9), ("fddi", 10)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbSwPortLanType.setStatus('mandatory')
nbSwPortIfType = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 13, 6, 3, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18))).clone(namedValues=NamedValues(("aui", 1), ("tp", 2), ("auiTp", 3), ("tpfd", 4), ("coax", 5), ("foMm", 6), ("foSm", 7), ("none", 8), ("foSxM", 9), ("foLxM", 10), ("foLxS1", 11), ("foLxS2", 12), ("foLxS3", 13), ("foM", 14), ("foMX", 15), ("foS1", 16), ("foS2", 17), ("foS3", 18)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbSwPortIfType.setStatus('mandatory')
nbSwPortLink = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 13, 6, 3, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("enable", 2), ("disable", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbSwPortLink.setStatus('mandatory')
nbSwPortFctrl = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 13, 6, 3, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("enable", 2), ("disable", 3))).clone('enable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbSwPortFctrl.setStatus('mandatory')
nbSwPortDplex = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 13, 6, 3, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("halfDuplex", 2), ("fullDuplex", 3))).clone('halfDuplex')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbSwPortDplex.setStatus('mandatory')
nbSwPortSpeedSelect = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 13, 6, 3, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("other", 1), ("autoSense", 2), ("force10", 3), ("force100", 4), ("force1000", 5))).clone('autoSense')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbSwPortSpeedSelect.setStatus('mandatory')
nbSwPortSpeed = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 13, 6, 3, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbSwPortSpeed.setStatus('mandatory')
nbSwPortEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 13, 6, 3, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("portDisable", 2), ("portEnable", 3))).clone('portEnable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbSwPortEnable.setStatus('mandatory')
nbSwPortIsvpMode = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 13, 6, 3, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("other", 1), ("access", 2), ("trunk", 3), ("nonIsvp", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbSwPortIsvpMode.setStatus('mandatory')
nbSwPortValid = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 13, 6, 3, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("valid", 1), ("broken", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbSwPortValid.setStatus('mandatory')
nbSwPortStatTable = MibTable((1, 3, 6, 1, 4, 1, 629, 1, 50, 13, 7), )
if mibBuilder.loadTexts: nbSwPortStatTable.setStatus('mandatory')
nbSwPortStatEntry = MibTableRow((1, 3, 6, 1, 4, 1, 629, 1, 50, 13, 7, 1), ).setIndexNames((0, "SW-CFG-MIB", "nbSwPortStatIndex"))
if mibBuilder.loadTexts: nbSwPortStatEntry.setStatus('mandatory')
nbSwPortStatIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 13, 7, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbSwPortStatIndex.setStatus('mandatory')
nbSwPortStatBtRec = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 13, 7, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbSwPortStatBtRec.setStatus('mandatory')
nbSwPortStatFrRec = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 13, 7, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbSwPortStatFrRec.setStatus('mandatory')
nbSwPortStatMulticastFrRec = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 13, 7, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbSwPortStatMulticastFrRec.setStatus('mandatory')
nbSwPortStatBroadcastFrRec = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 13, 7, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbSwPortStatBroadcastFrRec.setStatus('mandatory')
nbSwPortStatUnicastFrRec = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 13, 7, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbSwPortStatUnicastFrRec.setStatus('mandatory')
nbSwPortStatBtSent = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 13, 7, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbSwPortStatBtSent.setStatus('mandatory')
nbSwPortStatFrSent = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 13, 7, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbSwPortStatFrSent.setStatus('mandatory')
nbSwPortStatExcessiveCollis = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 13, 7, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbSwPortStatExcessiveCollis.setStatus('mandatory')
nbSwPortStatSingleCollis = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 13, 7, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbSwPortStatSingleCollis.setStatus('mandatory')
nbSwPortStatMultipleCollis = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 13, 7, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbSwPortStatMultipleCollis.setStatus('mandatory')
nbSwPortStatLateCollis = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 13, 7, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbSwPortStatLateCollis.setStatus('mandatory')
nbSwPortStatAlignmentErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 13, 7, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbSwPortStatAlignmentErrors.setStatus('mandatory')
nbSwPortStatFCSErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 13, 7, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbSwPortStatFCSErrors.setStatus('mandatory')
nbSwPortStatFrDiscarded = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 13, 7, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbSwPortStatFrDiscarded.setStatus('mandatory')
nbSwPortStatBadLongFr = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 13, 7, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbSwPortStatBadLongFr.setStatus('mandatory')
nbSwPortStatGoodLongFr = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 13, 7, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbSwPortStatGoodLongFr.setStatus('mandatory')
nbSwPortStatGoodShortFr = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 13, 7, 1, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbSwPortStatGoodShortFr.setStatus('mandatory')
nbSwPortStatValid = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 13, 7, 1, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("valid", 1), ("broken", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbSwPortStatValid.setStatus('mandatory')
mibBuilder.exportSymbols("SW-CFG-MIB", nbSwPortStatGoodLongFr=nbSwPortStatGoodLongFr, nbSwPortIfType=nbSwPortIfType, nbSwPortEnable=nbSwPortEnable, nbase=nbase, nbSwMacTagged=nbSwMacTagged, nbSwPortStatTable=nbSwPortStatTable, nbSwPortStatFrRec=nbSwPortStatFrRec, nbSwitchG1Il=nbSwitchG1Il, nbSwMacMode=nbSwMacMode, nbSwPortStatLateCollis=nbSwPortStatLateCollis, nbSwPortEntry=nbSwPortEntry, nbSwPortStatFrDiscarded=nbSwPortStatFrDiscarded, nbSwPortStatBtRec=nbSwPortStatBtRec, nbSwPortsActualNumber=nbSwPortsActualNumber, nbSwMacVid=nbSwMacVid, nbSwMacTable=nbSwMacTable, nbSwPortStatFrSent=nbSwPortStatFrSent, nbSwMacPort=nbSwMacPort, nbSwPortStatBtSent=nbSwPortStatBtSent, MacAddress=MacAddress, nbSwMac=nbSwMac, nbSwPortsMaxNumber=nbSwPortsMaxNumber, nbSwPortIsvpMode=nbSwPortIsvpMode, nbSwPortSpeed=nbSwPortSpeed, nbSwMacStatus=nbSwMacStatus, nbSwPortStatValid=nbSwPortStatValid, nbSwPortIndex=nbSwPortIndex, nbSwPortFctrl=nbSwPortFctrl, nbSwPortStatMulticastFrRec=nbSwPortStatMulticastFrRec, nbSwPortLanType=nbSwPortLanType, nbSwPortStatExcessiveCollis=nbSwPortStatExcessiveCollis, nbSwPortDplex=nbSwPortDplex, nbSwPortTable=nbSwPortTable, nbSwMacEntry=nbSwMacEntry, nbSwMacGetViewIndex=nbSwMacGetViewIndex, nbSwPortValid=nbSwPortValid, nbSwPortStatBadLongFr=nbSwPortStatBadLongFr, nbSwMacVidx=nbSwMacVidx, nbSwPortStatBroadcastFrRec=nbSwPortStatBroadcastFrRec, nbSwPortCfg=nbSwPortCfg, nbSwitchG1=nbSwitchG1, nbSwPortStatAlignmentErrors=nbSwPortStatAlignmentErrors, nbSwPortStatFCSErrors=nbSwPortStatFCSErrors, nbSwPortLink=nbSwPortLink, nbSwPortStatMultipleCollis=nbSwPortStatMultipleCollis, nbSwPortStatEntry=nbSwPortStatEntry, nbSwPortStatIndex=nbSwPortStatIndex, nbSwPortSpeedSelect=nbSwPortSpeedSelect, nbSwPortStatGoodShortFr=nbSwPortStatGoodShortFr, nbSwPortStatUnicastFrRec=nbSwPortStatUnicastFrRec, nbSwitchConfig=nbSwitchConfig, nbSwPortStatSingleCollis=nbSwPortStatSingleCollis)
