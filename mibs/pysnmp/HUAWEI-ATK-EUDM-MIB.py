#
# PySNMP MIB module HUAWEI-ATK-EUDM-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/HUAWEI-ATK-EUDM-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:30:52 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ValueRangeConstraint, ConstraintsUnion, ValueSizeConstraint, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ValueRangeConstraint", "ConstraintsUnion", "ValueSizeConstraint", "SingleValueConstraint")
hwDatacomm, = mibBuilder.importSymbols("HUAWEI-MIB", "hwDatacomm")
mplsVpnVrfName, = mibBuilder.importSymbols("MPLS-VPN-MIB", "mplsVpnVrfName")
ObjectGroup, NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "NotificationGroup", "ModuleCompliance")
ObjectIdentity, Gauge32, Integer32, ModuleIdentity, IpAddress, MibIdentifier, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter32, Counter64, Bits, Unsigned32, NotificationType, TimeTicks, iso = mibBuilder.importSymbols("SNMPv2-SMI", "ObjectIdentity", "Gauge32", "Integer32", "ModuleIdentity", "IpAddress", "MibIdentifier", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter32", "Counter64", "Bits", "Unsigned32", "NotificationType", "TimeTicks", "iso")
DisplayString, TextualConvention, RowStatus = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention", "RowStatus")
hwATKEudm = ModuleIdentity((1, 3, 6, 1, 4, 1, 2011, 5, 25, 10, 2))
if mibBuilder.loadTexts: hwATKEudm.setLastUpdated('200303190900Z')
if mibBuilder.loadTexts: hwATKEudm.setOrganization('Huawei Technologies co.,Ltd.')
hwATK = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 10))
hwAtkZoneMibObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 10, 2, 1))
hwAtkSynFloodZoneTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 10, 2, 1, 1), )
if mibBuilder.loadTexts: hwAtkSynFloodZoneTable.setStatus('current')
hwAtkSynFloodZoneEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 10, 2, 1, 1, 1), ).setIndexNames((0, "MPLS-VPN-MIB", "mplsVpnVrfName"), (0, "HUAWEI-ATK-EUDM-MIB", "hwAtkSynFloodZoneID"))
if mibBuilder.loadTexts: hwAtkSynFloodZoneEntry.setStatus('current')
hwAtkSynFloodZoneID = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 10, 2, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 128)))
if mibBuilder.loadTexts: hwAtkSynFloodZoneID.setStatus('current')
hwAtkZoneSynFloodSynSpeed = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 10, 2, 1, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1000000))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwAtkZoneSynFloodSynSpeed.setStatus('current')
hwAtkZoneSynFloodHalfMax = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 10, 2, 1, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 10000000))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwAtkZoneSynFloodHalfMax.setStatus('current')
hwAtkZoneSynFloodHalfAge = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 10, 2, 1, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwAtkZoneSynFloodHalfAge.setStatus('current')
hwAtkZoneSynFloodProxy = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 10, 2, 1, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("auto", 1), ("on", 2), ("off", 3))).clone('auto')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwAtkZoneSynFloodProxy.setStatus('current')
hwAtkZoneSynFloodStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 10, 2, 1, 1, 1, 6), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwAtkZoneSynFloodStatus.setStatus('current')
hwAtkUdpFloodZoneTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 10, 2, 1, 2), )
if mibBuilder.loadTexts: hwAtkUdpFloodZoneTable.setStatus('current')
hwAtkUdpFloodZoneEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 10, 2, 1, 2, 1), ).setIndexNames((0, "MPLS-VPN-MIB", "mplsVpnVrfName"), (0, "HUAWEI-ATK-EUDM-MIB", "hwAtkUdpFloodZoneID"))
if mibBuilder.loadTexts: hwAtkUdpFloodZoneEntry.setStatus('current')
hwAtkUdpFloodZoneID = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 10, 2, 1, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 128)))
if mibBuilder.loadTexts: hwAtkUdpFloodZoneID.setStatus('current')
hwAtkZoneUdpFloodSpeed = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 10, 2, 1, 2, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1000000))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwAtkZoneUdpFloodSpeed.setStatus('current')
hwAtkZoneUdpFloodStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 10, 2, 1, 2, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwAtkZoneUdpFloodStatus.setStatus('current')
hwAtkIcmpFloodZoneTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 10, 2, 1, 3), )
if mibBuilder.loadTexts: hwAtkIcmpFloodZoneTable.setStatus('current')
hwAtkIcmpFloodZoneEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 10, 2, 1, 3, 1), ).setIndexNames((0, "MPLS-VPN-MIB", "mplsVpnVrfName"), (0, "HUAWEI-ATK-EUDM-MIB", "hwAtkIcmpFloodZoneID"))
if mibBuilder.loadTexts: hwAtkIcmpFloodZoneEntry.setStatus('current')
hwAtkIcmpFloodZoneID = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 10, 2, 1, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 128)))
if mibBuilder.loadTexts: hwAtkIcmpFloodZoneID.setStatus('current')
hwAtkZoneIcmpFloodSpeed = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 10, 2, 1, 3, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1000000))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwAtkZoneIcmpFloodSpeed.setStatus('current')
hwAtkZoneIcmpFloodStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 10, 2, 1, 3, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwAtkZoneIcmpFloodStatus.setStatus('current')
hwAtkEudmConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 10, 2, 2))
hwAtkEudmCompliance = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 10, 2, 2, 1))
hwAtkEudmMibGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 10, 2, 2, 2))
hwAtkEudmSynFloodGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 10, 2, 2, 2, 1)).setObjects(("HUAWEI-ATK-EUDM-MIB", "hwAtkZoneSynFloodSynSpeed"), ("HUAWEI-ATK-EUDM-MIB", "hwAtkZoneSynFloodHalfMax"), ("HUAWEI-ATK-EUDM-MIB", "hwAtkZoneSynFloodHalfAge"), ("HUAWEI-ATK-EUDM-MIB", "hwAtkZoneSynFloodProxy"), ("HUAWEI-ATK-EUDM-MIB", "hwAtkZoneSynFloodStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwAtkEudmSynFloodGroup = hwAtkEudmSynFloodGroup.setStatus('current')
hwAtkEudmUdpFloodGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 10, 2, 2, 2, 2)).setObjects(("HUAWEI-ATK-EUDM-MIB", "hwAtkZoneUdpFloodSpeed"), ("HUAWEI-ATK-EUDM-MIB", "hwAtkZoneUdpFloodStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwAtkEudmUdpFloodGroup = hwAtkEudmUdpFloodGroup.setStatus('current')
hwAtkEudmIcmpFloodGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 10, 2, 2, 2, 3)).setObjects(("HUAWEI-ATK-EUDM-MIB", "hwAtkZoneIcmpFloodSpeed"), ("HUAWEI-ATK-EUDM-MIB", "hwAtkZoneIcmpFloodStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwAtkEudmIcmpFloodGroup = hwAtkEudmIcmpFloodGroup.setStatus('current')
mibBuilder.exportSymbols("HUAWEI-ATK-EUDM-MIB", PYSNMP_MODULE_ID=hwATKEudm, hwAtkSynFloodZoneEntry=hwAtkSynFloodZoneEntry, hwAtkIcmpFloodZoneTable=hwAtkIcmpFloodZoneTable, hwATK=hwATK, hwAtkSynFloodZoneTable=hwAtkSynFloodZoneTable, hwAtkZoneSynFloodHalfAge=hwAtkZoneSynFloodHalfAge, hwAtkZoneUdpFloodStatus=hwAtkZoneUdpFloodStatus, hwAtkEudmSynFloodGroup=hwAtkEudmSynFloodGroup, hwAtkEudmUdpFloodGroup=hwAtkEudmUdpFloodGroup, hwAtkZoneSynFloodHalfMax=hwAtkZoneSynFloodHalfMax, hwATKEudm=hwATKEudm, hwAtkZoneSynFloodProxy=hwAtkZoneSynFloodProxy, hwAtkZoneUdpFloodSpeed=hwAtkZoneUdpFloodSpeed, hwAtkEudmConformance=hwAtkEudmConformance, hwAtkIcmpFloodZoneID=hwAtkIcmpFloodZoneID, hwAtkZoneIcmpFloodStatus=hwAtkZoneIcmpFloodStatus, hwAtkZoneMibObjects=hwAtkZoneMibObjects, hwAtkZoneSynFloodSynSpeed=hwAtkZoneSynFloodSynSpeed, hwAtkEudmMibGroups=hwAtkEudmMibGroups, hwAtkEudmCompliance=hwAtkEudmCompliance, hwAtkZoneSynFloodStatus=hwAtkZoneSynFloodStatus, hwAtkIcmpFloodZoneEntry=hwAtkIcmpFloodZoneEntry, hwAtkUdpFloodZoneEntry=hwAtkUdpFloodZoneEntry, hwAtkZoneIcmpFloodSpeed=hwAtkZoneIcmpFloodSpeed, hwAtkUdpFloodZoneID=hwAtkUdpFloodZoneID, hwAtkEudmIcmpFloodGroup=hwAtkEudmIcmpFloodGroup, hwAtkUdpFloodZoneTable=hwAtkUdpFloodZoneTable, hwAtkSynFloodZoneID=hwAtkSynFloodZoneID)
