#
# PySNMP MIB module CISCO-XGCP-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CISCO-XGCP-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 18:05:30 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ConstraintsIntersection, ValueRangeConstraint, ConstraintsUnion, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ConstraintsIntersection", "ValueRangeConstraint", "ConstraintsUnion", "ValueSizeConstraint")
CCallControlProfileIndexOrZero, cmgwIndex = mibBuilder.importSymbols("CISCO-MEDIA-GATEWAY-MIB", "CCallControlProfileIndexOrZero", "cmgwIndex")
CMgcGroupIndexOrZero, = mibBuilder.importSymbols("CISCO-MGC-MIB", "CMgcGroupIndexOrZero")
ciscoMgmt, = mibBuilder.importSymbols("CISCO-SMI", "ciscoMgmt")
CiscoPort, = mibBuilder.importSymbols("CISCO-TC", "CiscoPort")
InetAddress, InetAddressType = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddress", "InetAddressType")
SnmpAdminString, = mibBuilder.importSymbols("SNMP-FRAMEWORK-MIB", "SnmpAdminString")
ObjectGroup, ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "ModuleCompliance", "NotificationGroup")
NotificationType, Integer32, Bits, TimeTicks, Counter64, IpAddress, ObjectIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, Gauge32, MibIdentifier, Unsigned32, iso, Counter32, ModuleIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "NotificationType", "Integer32", "Bits", "TimeTicks", "Counter64", "IpAddress", "ObjectIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Gauge32", "MibIdentifier", "Unsigned32", "iso", "Counter32", "ModuleIdentity")
TextualConvention, TruthValue, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "TruthValue", "DisplayString")
ciscoXgcpMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 9, 9, 318))
ciscoXgcpMIB.setRevisions(('2006-02-21 00:00', '2005-12-21 00:00', '2005-08-24 00:00', '2005-08-09 00:00', '2005-03-07 00:00', '2004-11-15 00:00', '2004-08-30 00:00', '2004-05-14 00:00', '2003-02-03 00:00',))
if mibBuilder.loadTexts: ciscoXgcpMIB.setLastUpdated('200602210000Z')
if mibBuilder.loadTexts: ciscoXgcpMIB.setOrganization('Cisco Systems, Inc.')
cXgcpNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 318, 0))
cXgcpObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 318, 1))
cXgcpMgcCfg = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 318, 1, 1))
cXgcpMediaGw = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 318, 1, 2))
cXgcpStats = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 318, 1, 3))
cXgcpConnection = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 318, 1, 4))
class CXgcpRetryMethod(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))
    namedValues = NamedValues(("neverResetTimer", 1), ("resetTimerForNewMgc", 2), ("resetTimerForNewAddr", 3), ("resetTimerForEndpoint", 4))

class CXgcpCallEvent(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21))
    namedValues = NamedValues(("ack", 0), ("createConn", 1), ("deleteConn", 2), ("modifyConn", 3), ("notifyReq", 4), ("alert", 5), ("callConnect", 6), ("confReady", 7), ("confDestroy", 8), ("callDisconnect", 9), ("callProceed", 10), ("offHook", 11), ("onHook", 12), ("mediaEvent", 13), ("intEven", 14), ("dissocConf", 15), ("assocConf", 16), ("modifyDone", 17), ("voiceModeDone", 18), ("nse", 19), ("callHandoff", 20), ("babblerAuditResp", 21))

cXgcpMgcConfigTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 318, 1, 1, 1), )
if mibBuilder.loadTexts: cXgcpMgcConfigTable.setStatus('current')
cXgcpMgcConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 318, 1, 1, 1, 1), ).setIndexNames((0, "CISCO-MEDIA-GATEWAY-MIB", "cmgwIndex"))
if mibBuilder.loadTexts: cXgcpMgcConfigEntry.setStatus('current')
cXgcpMgcConfigMgcGrpNum = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 318, 1, 1, 1, 1, 1), CMgcGroupIndexOrZero()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cXgcpMgcConfigMgcGrpNum.setStatus('current')
cXgcpMgcConfigAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 318, 1, 1, 1, 1, 2), InetAddressType().clone('ipv4')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cXgcpMgcConfigAddrType.setStatus('current')
cXgcpMgcConfigAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 318, 1, 1, 1, 1, 3), InetAddress().clone(hexValue="00000000")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cXgcpMgcConfigAddress.setStatus('current')
cXgcpMgcConfigProtocolIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 318, 1, 1, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 32)).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cXgcpMgcConfigProtocolIndex.setStatus('current')
cXgcpMgcConfigGatewayUdpPort = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 318, 1, 1, 1, 1, 5), CiscoPort().clone(2427)).setMaxAccess("readonly")
if mibBuilder.loadTexts: cXgcpMgcConfigGatewayUdpPort.setStatus('current')
cXgcpMediaGwTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 318, 1, 2, 1), )
if mibBuilder.loadTexts: cXgcpMediaGwTable.setStatus('current')
cXgcpMediaGwEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 318, 1, 2, 1, 1), ).setIndexNames((0, "CISCO-MEDIA-GATEWAY-MIB", "cmgwIndex"))
if mibBuilder.loadTexts: cXgcpMediaGwEntry.setStatus('current')
cXgcpMediaGwRequestTimeOut = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 318, 1, 2, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 10000)).clone(500)).setUnits('milliseconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: cXgcpMediaGwRequestTimeOut.setStatus('current')
cXgcpMediaGwRequestRetries = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 318, 1, 2, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 10)).clone(3)).setUnits('times').setMaxAccess("readwrite")
if mibBuilder.loadTexts: cXgcpMediaGwRequestRetries.setStatus('current')
cXgcpMediaGwRequestRetryMethod = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 318, 1, 2, 1, 1, 3), CXgcpRetryMethod()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cXgcpMediaGwRequestRetryMethod.setStatus('current')
cXgcpMediaGwMaxExpTimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 318, 1, 2, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 60000)).clone(4000)).setUnits('milliseconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: cXgcpMediaGwMaxExpTimeout.setStatus('current')
cXgcpMediaGwRestartMwd = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 318, 1, 2, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 600000)).clone(3000)).setUnits('milliseconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: cXgcpMediaGwRestartMwd.setStatus('current')
cXgcpMediaGwRestartDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 318, 1, 2, 1, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 600))).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: cXgcpMediaGwRestartDelay.setStatus('current')
cXgcpMediaGwDefaultPackage = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 318, 1, 2, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31))).clone(namedValues=NamedValues(("packageDC", 1), ("packageG", 2), ("packageD", 3), ("packageM", 4), ("packageT", 5), ("packageL", 6), ("packageH", 7), ("packageR", 8), ("packageN", 9), ("packageA", 10), ("packageS", 11), ("packageATM", 12), ("packageMS", 13), ("packageDT", 14), ("packageMO", 15), ("packageRES", 16), ("packageSASDI", 17), ("packageIT", 18), ("packageMT", 19), ("packageB", 20), ("packageSST", 21), ("packageMDR", 22), ("packageFXR", 23), ("packageBA", 24), ("packageMD", 25), ("packageNAS", 26), ("packageMDSTE", 27), ("packagePRE", 28), ("packageLCS", 29), ("packageSRTP", 30), ("packageFM", 31))).clone('packageG')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cXgcpMediaGwDefaultPackage.setStatus('current')
cXgcpMediaGwSupportedPackages = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 318, 1, 2, 1, 1, 8), Bits().clone(namedValues=NamedValues(("notFound", 0), ("packageDC", 1), ("packageG", 2), ("packageD", 3), ("packageM", 4), ("packageT", 5), ("packageL", 6), ("packageH", 7), ("packageR", 8), ("packageN", 9), ("packageA", 10), ("packageS", 11), ("packageATM", 12), ("packageMS", 13), ("packageDT", 14), ("packageMO", 15), ("packageRES", 16), ("packageSASDI", 17), ("packageIT", 18), ("packageMT", 19), ("packageB", 20), ("packageSST", 21), ("packageMDR", 22), ("packageFXR", 23), ("packageBA", 24), ("packageMD", 25), ("packageNAS", 26), ("packageMDSTE", 27), ("packagePRE", 28), ("packageLCS", 29), ("packageSRTP", 30), ("packageFM", 31)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cXgcpMediaGwSupportedPackages.setStatus('current')
cXgcpMediaGwSimpleSdpEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 318, 1, 2, 1, 1, 9), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cXgcpMediaGwSimpleSdpEnabled.setStatus('current')
cXgcpMediaGwAckSdpEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 318, 1, 2, 1, 1, 10), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cXgcpMediaGwAckSdpEnabled.setStatus('current')
cXgcpMediaGwUndottedNotation = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 318, 1, 2, 1, 1, 11), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cXgcpMediaGwUndottedNotation.setStatus('current')
cXgcpMediaGwQuarantineProcess = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 318, 1, 2, 1, 1, 12), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cXgcpMediaGwQuarantineProcess.setStatus('current')
cXgcpMediaGwQuarantineLoop = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 318, 1, 2, 1, 1, 13), TruthValue().clone('true')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cXgcpMediaGwQuarantineLoop.setStatus('current')
cXgcpMediaGwQuarantinePersist = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 318, 1, 2, 1, 1, 14), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cXgcpMediaGwQuarantinePersist.setStatus('current')
cXgcpMediaGwPiggybackMsg = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 318, 1, 2, 1, 1, 15), TruthValue().clone('true')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cXgcpMediaGwPiggybackMsg.setStatus('current')
cXgcpMediaGwMaxMsgSize = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 318, 1, 2, 1, 1, 16), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setUnits('bytes').setMaxAccess("readwrite")
if mibBuilder.loadTexts: cXgcpMediaGwMaxMsgSize.setStatus('current')
cXgcpMediaGwLastFailMgcAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 318, 1, 2, 1, 1, 17), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cXgcpMediaGwLastFailMgcAddrType.setStatus('current')
cXgcpMediaGwLastFailMgcAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 318, 1, 2, 1, 1, 18), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cXgcpMediaGwLastFailMgcAddr.setStatus('current')
cXgcpMediaGwDtmfRelay = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 318, 1, 2, 1, 1, 19), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cXgcpMediaGwDtmfRelay.setStatus('current')
cXgcpMediaGwCaleaEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 318, 1, 2, 1, 1, 20), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cXgcpMediaGwCaleaEnabled.setStatus('current')
cXgcpMediaGwConfiguredPackages = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 318, 1, 2, 1, 1, 21), Bits().clone(namedValues=NamedValues(("notFound", 0), ("packageDC", 1), ("packageG", 2), ("packageD", 3), ("packageM", 4), ("packageT", 5), ("packageL", 6), ("packageH", 7), ("packageR", 8), ("packageN", 9), ("packageA", 10), ("packageS", 11), ("packageATM", 12), ("packageMS", 13), ("packageDT", 14), ("packageMO", 15), ("packageRES", 16), ("packageSASDI", 17), ("packageIT", 18), ("packageMT", 19), ("packageB", 20), ("packageSST", 21), ("packageMDR", 22), ("packageFXR", 23), ("packageBA", 24), ("packageMD", 25), ("packageNAS", 26), ("packageMDSTE", 27), ("packagePRE", 28), ("packageLCS", 29), ("packageSRTP", 30), ("packageFM", 31)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cXgcpMediaGwConfiguredPackages.setStatus('current')
cXgcpMediaGwConnOosRsipBehavior = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 318, 1, 2, 1, 1, 22), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("sendDlcx", 1), ("rsipOnly", 2))).clone('sendDlcx')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cXgcpMediaGwConnOosRsipBehavior.setStatus('current')
cXgcpMediaGwLongDurTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 318, 1, 2, 1, 1, 23), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65536)).clone(3600)).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: cXgcpMediaGwLongDurTimer.setStatus('current')
cXgcpMediaGwProfile = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 318, 1, 2, 1, 1, 24), CCallControlProfileIndexOrZero()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cXgcpMediaGwProfile.setStatus('current')
cXgcpMediaGwAnnexabSdpEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 318, 1, 2, 1, 1, 25), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cXgcpMediaGwAnnexabSdpEnabled.setStatus('current')
cXgcpMsgStatsTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 318, 1, 3, 1), )
if mibBuilder.loadTexts: cXgcpMsgStatsTable.setStatus('current')
cXgcpMsgStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 318, 1, 3, 1, 1), ).setIndexNames((0, "CISCO-MEDIA-GATEWAY-MIB", "cmgwIndex"), (0, "CISCO-XGCP-MIB", "cXgcpMsgStatsIndex"))
if mibBuilder.loadTexts: cXgcpMsgStatsEntry.setStatus('current')
cXgcpMsgStatsIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 318, 1, 3, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 64)))
if mibBuilder.loadTexts: cXgcpMsgStatsIndex.setStatus('current')
cXgcpMsgStatsMgcIPAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 318, 1, 3, 1, 1, 2), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cXgcpMsgStatsMgcIPAddressType.setStatus('current')
cXgcpMsgStatsMgcIPAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 318, 1, 3, 1, 1, 3), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cXgcpMsgStatsMgcIPAddress.setStatus('current')
cXgcpMsgStatsSuccessMessages = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 318, 1, 3, 1, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cXgcpMsgStatsSuccessMessages.setStatus('current')
cXgcpMsgStatsFailMessages = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 318, 1, 3, 1, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cXgcpMsgStatsFailMessages.setStatus('current')
cXgcpMsgStatsIncompleteMessages = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 318, 1, 3, 1, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cXgcpMsgStatsIncompleteMessages.setStatus('current')
cXgcpStatsTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 318, 1, 3, 2), )
if mibBuilder.loadTexts: cXgcpStatsTable.setStatus('current')
cXgcpStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 318, 1, 3, 2, 1), ).setIndexNames((0, "CISCO-MEDIA-GATEWAY-MIB", "cmgwIndex"))
if mibBuilder.loadTexts: cXgcpStatsEntry.setStatus('current')
cXgcpStatsUdpRxPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 318, 1, 3, 2, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cXgcpStatsUdpRxPkts.setStatus('current')
cXgcpStatsUdpTxPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 318, 1, 3, 2, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cXgcpStatsUdpTxPkts.setStatus('current')
cXgcpStatsUnRecRxPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 318, 1, 3, 2, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cXgcpStatsUnRecRxPkts.setStatus('current')
cXgcpStatsMsgParsingErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 318, 1, 3, 2, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cXgcpStatsMsgParsingErrors.setStatus('current')
cXgcpStatsDupAckTxMsgs = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 318, 1, 3, 2, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cXgcpStatsDupAckTxMsgs.setStatus('current')
cXgcpStatsInvalidVerCount = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 318, 1, 3, 2, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cXgcpStatsInvalidVerCount.setStatus('current')
cXgcpStatsUnknownMgcRxPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 318, 1, 3, 2, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cXgcpStatsUnknownMgcRxPkts.setStatus('current')
cXgcpStatsAckTxMsgs = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 318, 1, 3, 2, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cXgcpStatsAckTxMsgs.setStatus('current')
cXgcpStatsNackTxMsgs = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 318, 1, 3, 2, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cXgcpStatsNackTxMsgs.setStatus('current')
cXgcpStatsAckRxMsgs = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 318, 1, 3, 2, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cXgcpStatsAckRxMsgs.setStatus('current')
cXgcpStatsNackRxMsgs = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 318, 1, 3, 2, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cXgcpStatsNackRxMsgs.setStatus('current')
cXgcpStatsRxCrcxs = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 318, 1, 3, 2, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cXgcpStatsRxCrcxs.setStatus('current')
cXgcpStatsRxSuccCrcxs = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 318, 1, 3, 2, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cXgcpStatsRxSuccCrcxs.setStatus('current')
cXgcpStatsRxFailCrcxs = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 318, 1, 3, 2, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cXgcpStatsRxFailCrcxs.setStatus('current')
cXgcpStatsRxDlcxs = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 318, 1, 3, 2, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cXgcpStatsRxDlcxs.setStatus('current')
cXgcpStatsRxSuccDlcxs = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 318, 1, 3, 2, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cXgcpStatsRxSuccDlcxs.setStatus('current')
cXgcpStatsRxFailDlcxs = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 318, 1, 3, 2, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cXgcpStatsRxFailDlcxs.setStatus('current')
cXgcpStatsTxDlcxs = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 318, 1, 3, 2, 1, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cXgcpStatsTxDlcxs.setStatus('current')
cXgcpStatsTxSuccDlcxs = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 318, 1, 3, 2, 1, 19), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cXgcpStatsTxSuccDlcxs.setStatus('current')
cXgcpStatsTxFailDlcxs = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 318, 1, 3, 2, 1, 20), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cXgcpStatsTxFailDlcxs.setStatus('current')
cXgcpStatsRxMdcxs = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 318, 1, 3, 2, 1, 21), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cXgcpStatsRxMdcxs.setStatus('current')
cXgcpStatsRxSuccMdcxs = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 318, 1, 3, 2, 1, 22), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cXgcpStatsRxSuccMdcxs.setStatus('current')
cXgcpStatsRxFailMdcxs = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 318, 1, 3, 2, 1, 23), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cXgcpStatsRxFailMdcxs.setStatus('current')
cXgcpStatsRxRqnts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 318, 1, 3, 2, 1, 24), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cXgcpStatsRxRqnts.setStatus('current')
cXgcpStatsRxSuccRqnts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 318, 1, 3, 2, 1, 25), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cXgcpStatsRxSuccRqnts.setStatus('current')
cXgcpStatsRxFailRqnts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 318, 1, 3, 2, 1, 26), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cXgcpStatsRxFailRqnts.setStatus('current')
cXgcpStatsRxAucxs = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 318, 1, 3, 2, 1, 27), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cXgcpStatsRxAucxs.setStatus('current')
cXgcpStatsRxSuccAucxs = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 318, 1, 3, 2, 1, 28), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cXgcpStatsRxSuccAucxs.setStatus('current')
cXgcpStatsRxFailAucxs = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 318, 1, 3, 2, 1, 29), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cXgcpStatsRxFailAucxs.setStatus('current')
cXgcpStatsRxAueps = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 318, 1, 3, 2, 1, 30), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cXgcpStatsRxAueps.setStatus('current')
cXgcpStatsRxSuccAueps = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 318, 1, 3, 2, 1, 31), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cXgcpStatsRxSuccAueps.setStatus('current')
cXgcpStatsRxFailAueps = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 318, 1, 3, 2, 1, 32), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cXgcpStatsRxFailAueps.setStatus('current')
cXgcpStatsTxRsips = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 318, 1, 3, 2, 1, 33), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cXgcpStatsTxRsips.setStatus('current')
cXgcpStatsTxSuccRsips = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 318, 1, 3, 2, 1, 34), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cXgcpStatsTxSuccRsips.setStatus('current')
cXgcpStatsTxFailRsips = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 318, 1, 3, 2, 1, 35), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cXgcpStatsTxFailRsips.setStatus('current')
cXgcpStatsTxNotifies = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 318, 1, 3, 2, 1, 36), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cXgcpStatsTxNotifies.setStatus('current')
cXgcpStatsTxSuccNotifies = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 318, 1, 3, 2, 1, 37), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cXgcpStatsTxSuccNotifies.setStatus('current')
cXgcpStatsTxFailNotifies = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 318, 1, 3, 2, 1, 38), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cXgcpStatsTxFailNotifies.setStatus('current')
cXgcpConnectionTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 318, 1, 4, 1), )
if mibBuilder.loadTexts: cXgcpConnectionTable.setStatus('current')
cXgcpConnectionEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 318, 1, 4, 1, 1), ).setIndexNames((0, "CISCO-MEDIA-GATEWAY-MIB", "cmgwIndex"), (0, "CISCO-XGCP-MIB", "cXgcpConnId"))
if mibBuilder.loadTexts: cXgcpConnectionEntry.setStatus('current')
cXgcpConnId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 318, 1, 4, 1, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295)))
if mibBuilder.loadTexts: cXgcpConnId.setStatus('current')
cXgcpConnEndPoint = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 318, 1, 4, 1, 1, 2), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cXgcpConnEndPoint.setStatus('current')
cXgcpConnCallId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 318, 1, 4, 1, 1, 3), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cXgcpConnCallId.setStatus('current')
cXgcpConnLocalUdpPort = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 318, 1, 4, 1, 1, 4), CiscoPort()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cXgcpConnLocalUdpPort.setStatus('current')
cXgcpConnRemoteUdpPort = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 318, 1, 4, 1, 1, 5), CiscoPort()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cXgcpConnRemoteUdpPort.setStatus('current')
cXgcpConnMode = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 318, 1, 4, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10))).clone(namedValues=NamedValues(("invalid", 0), ("sendOnly", 1), ("recvOnly", 2), ("sendRecv", 3), ("inActive", 4), ("loopBack", 5), ("contTest", 6), ("data", 7), ("netwLoop", 8), ("netwTest", 9), ("conference", 10)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cXgcpConnMode.setStatus('current')
cXgcpConnVccId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 318, 1, 4, 1, 1, 7), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cXgcpConnVccId.setStatus('current')
cXgcpConnChannelId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 318, 1, 4, 1, 1, 8), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cXgcpConnChannelId.setStatus('current')
cXgcpConnCallState = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 318, 1, 4, 1, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25))).clone(namedValues=NamedValues(("idle", 0), ("setting", 1), ("connecting", 2), ("conferencing", 3), ("active", 4), ("confDestroying", 5), ("disconnecting", 6), ("inactive", 7), ("voiceConnecting", 8), ("voiceActive", 9), ("confDissociating", 10), ("callLegsDissociated", 11), ("hpConnecting", 12), ("hpConnected", 13), ("hpConferencing", 14), ("hpActive", 15), ("voipConfDestroy", 16), ("erroState", 17), ("connectingInactive", 18), ("confDestroyingInactive", 19), ("confTest", 20), ("setupWait", 21), ("waitNseSent", 22), ("twcActive", 23), ("waitState", 24), ("handOver", 25)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cXgcpConnCallState.setStatus('current')
cXgcpConnCodec = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 318, 1, 4, 1, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 128, 129, 130, 131, 132, 133, 134, 135, 200))).clone(namedValues=NamedValues(("notApplicable", 0), ("g711ulaw", 1), ("g711alaw", 2), ("g726k32", 3), ("g726k24", 4), ("g726k16", 5), ("g729", 6), ("g729a", 7), ("g729b", 8), ("g729bLowComp", 9), ("g728", 10), ("g723", 11), ("g7231HighRate", 12), ("g7231aHighRate", 13), ("g7231LowRate", 14), ("g7231aLowRate", 15), ("gsmFullRate", 16), ("gsmHalfRate", 17), ("gsmEnhancedFullRate", 18), ("gsmEnhancedHalfRate", 19), ("g729ab", 20), ("clearChannel", 128), ("nse", 129), ("xnse", 130), ("nte", 131), ("t38", 132), ("modemRelay", 133), ("mdsteModemRelay", 134), ("sse", 135), ("codecUnknown", 200)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cXgcpConnCodec.setStatus('current')
cXgcpConnLastSuccEvent = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 318, 1, 4, 1, 1, 11), CXgcpCallEvent()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cXgcpConnLastSuccEvent.setStatus('current')
cXgcpConnLastSuccIntEvent = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 318, 1, 4, 1, 1, 12), CXgcpCallEvent()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cXgcpConnLastSuccIntEvent.setStatus('current')
cXgcpConnLastFailedEvent = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 318, 1, 4, 1, 1, 13), CXgcpCallEvent()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cXgcpConnLastFailedEvent.setStatus('current')
cXgcpConnLastReqEvent = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 318, 1, 4, 1, 1, 14), CXgcpCallEvent()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cXgcpConnLastReqEvent.setStatus('current')
cXgcpConnEventResult = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 318, 1, 4, 1, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 50, 51, 52, 53, 54, 55, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 115, 120, 130, 131, 132, 133, 140, 141, 142, 143, 144, 145, 146))).clone(namedValues=NamedValues(("normalOk", 0), ("invalidOk", 1), ("callRecordReleased", 2), ("invalidCallId", 10), ("invalidConnId", 11), ("duplicatedMsg", 12), ("ackFailure", 13), ("deleteFailure", 14), ("createAckFailure", 15), ("createAckMissing", 16), ("deleteAckFailure", 17), ("notifyFailure", 18), ("invalidState", 19), ("invalidProtocolVer", 20), ("tgwDown", 30), ("tgwNotReady", 31), ("callVdbFailure", 32), ("prevRtpPortLocked", 33), ("connRecordMissing", 34), ("endPointNotRdy", 35), ("memResourceError", 36), ("callCacFailure", 37), ("confRsrcError", 38), ("gwRsrcNotAvailable", 39), ("reqEventFailure", 40), ("invalidCcapiEvent", 41), ("ignoreCcapiEvent", 42), ("signalFailure", 50), ("abnormalOnhook", 51), ("invalidOffhook", 52), ("invalidCot", 53), ("cotFailure", 54), ("cotDisableFailure", 55), ("callSetupReqFailure", 60), ("callSetupIndFailure", 61), ("callContextFailure", 62), ("callPeerFailure", 63), ("callVoxCallFailure", 64), ("callVoipCallFailure", 65), ("callDiscFailure", 66), ("callModifyFailure", 67), ("callAlertFailure", 68), ("callDeleteFailure", 69), ("callUnknownFeature", 70), ("upSupportedCodec", 71), ("noDigitMap", 72), ("ignoreDigit", 73), ("digitsOverflow", 74), ("digitsNotifyFailure", 75), ("codecNotMatched", 76), ("invalidConnMode", 77), ("glare", 78), ("peerMissing", 90), ("peerNotReady", 91), ("peerInWrongState", 92), ("peerDisconnectFailure", 93), ("noConferenceId", 94), ("confCreateFailure", 95), ("confDestroyFailure", 96), ("unknownConnType", 97), ("invalidEndpoint", 98), ("invalidNseEvent", 100), ("nseRcvdOnWrongLeg", 101), ("sendNseFailure", 102), ("playToneFailure", 103), ("codecSpecInError", 104), ("mediaSpecUpsupported", 105), ("mediaChangeFail", 106), ("invalidNsePayload", 107), ("nsePayloadNotAvail", 108), ("embMdcxError", 109), ("mdcxLeg1Error", 110), ("mdcxLeg2Error", 111), ("deferMsg", 112), ("transError", 115), ("discOnWrongLeg", 120), ("invalidNteEvent", 130), ("notEnabledNteEvent", 131), ("nteEventExecuteFail", 132), ("sendNteFailure", 133), ("invalidSsePayload", 140), ("ssePayloadNotAvailable", 141), ("invalidModemRelayParam", 142), ("modemRelayNotSupported", 143), ("invalidXcapXcpar", 144), ("invalidSprtPayload", 145), ("sprtPayloadNotAvailable", 146)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cXgcpConnEventResult.setStatus('current')
cXgcpConnEncrSuite = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 318, 1, 4, 1, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("none", 0), ("aes128Cm", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cXgcpConnEncrSuite.setStatus('current')
cXgcpMIBConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 318, 2))
cXgcpMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 318, 2, 1))
cXgcpMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 318, 2, 2))
ciscoXgcpMIBCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 318, 2, 1, 1)).setObjects(("CISCO-XGCP-MIB", "cXgcpMgcConfigGroup"), ("CISCO-XGCP-MIB", "cXgcpMediaGwGroup"), ("CISCO-XGCP-MIB", "cXgcpMsgStatsGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoXgcpMIBCompliance = ciscoXgcpMIBCompliance.setStatus('deprecated')
ciscoXgcpMIBComplianceRev1 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 318, 2, 1, 2)).setObjects(("CISCO-XGCP-MIB", "cXgcpMgcConfigGroup"), ("CISCO-XGCP-MIB", "cXgcpMediaGwGroup"), ("CISCO-XGCP-MIB", "cXgcpMsgStatsGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoXgcpMIBComplianceRev1 = ciscoXgcpMIBComplianceRev1.setStatus('deprecated')
ciscoXgcpMIBComplianceRev2 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 318, 2, 1, 3)).setObjects(("CISCO-XGCP-MIB", "cXgcpMgcConfigGroup"), ("CISCO-XGCP-MIB", "cXgcpMediaGwGroup"), ("CISCO-XGCP-MIB", "cXgcpMsgStatsGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoXgcpMIBComplianceRev2 = ciscoXgcpMIBComplianceRev2.setStatus('deprecated')
ciscoXgcpMIBComplianceRev3 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 318, 2, 1, 4)).setObjects(("CISCO-XGCP-MIB", "cXgcpMgcConfigGroup"), ("CISCO-XGCP-MIB", "cXgcpMediaGwGroup"), ("CISCO-XGCP-MIB", "cXgcpMsgStatsGroup"), ("CISCO-XGCP-MIB", "cXgcpStatsGroup"), ("CISCO-XGCP-MIB", "cXgcpConnectionGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoXgcpMIBComplianceRev3 = ciscoXgcpMIBComplianceRev3.setStatus('current')
cXgcpMgcConfigGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 318, 2, 2, 1)).setObjects(("CISCO-XGCP-MIB", "cXgcpMgcConfigMgcGrpNum"), ("CISCO-XGCP-MIB", "cXgcpMgcConfigAddress"), ("CISCO-XGCP-MIB", "cXgcpMgcConfigAddrType"), ("CISCO-XGCP-MIB", "cXgcpMgcConfigProtocolIndex"), ("CISCO-XGCP-MIB", "cXgcpMgcConfigGatewayUdpPort"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cXgcpMgcConfigGroup = cXgcpMgcConfigGroup.setStatus('current')
cXgcpMediaGwGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 318, 2, 2, 2)).setObjects(("CISCO-XGCP-MIB", "cXgcpMediaGwRequestTimeOut"), ("CISCO-XGCP-MIB", "cXgcpMediaGwRequestRetries"), ("CISCO-XGCP-MIB", "cXgcpMediaGwRequestRetryMethod"), ("CISCO-XGCP-MIB", "cXgcpMediaGwMaxExpTimeout"), ("CISCO-XGCP-MIB", "cXgcpMediaGwRestartMwd"), ("CISCO-XGCP-MIB", "cXgcpMediaGwRestartDelay"), ("CISCO-XGCP-MIB", "cXgcpMediaGwDefaultPackage"), ("CISCO-XGCP-MIB", "cXgcpMediaGwSupportedPackages"), ("CISCO-XGCP-MIB", "cXgcpMediaGwSimpleSdpEnabled"), ("CISCO-XGCP-MIB", "cXgcpMediaGwAckSdpEnabled"), ("CISCO-XGCP-MIB", "cXgcpMediaGwUndottedNotation"), ("CISCO-XGCP-MIB", "cXgcpMediaGwQuarantineProcess"), ("CISCO-XGCP-MIB", "cXgcpMediaGwQuarantineLoop"), ("CISCO-XGCP-MIB", "cXgcpMediaGwQuarantinePersist"), ("CISCO-XGCP-MIB", "cXgcpMediaGwPiggybackMsg"), ("CISCO-XGCP-MIB", "cXgcpMediaGwMaxMsgSize"), ("CISCO-XGCP-MIB", "cXgcpMediaGwLastFailMgcAddrType"), ("CISCO-XGCP-MIB", "cXgcpMediaGwLastFailMgcAddr"), ("CISCO-XGCP-MIB", "cXgcpMediaGwDtmfRelay"), ("CISCO-XGCP-MIB", "cXgcpMediaGwCaleaEnabled"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cXgcpMediaGwGroup = cXgcpMediaGwGroup.setStatus('current')
cXgcpMsgStatsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 318, 2, 2, 3)).setObjects(("CISCO-XGCP-MIB", "cXgcpMsgStatsMgcIPAddressType"), ("CISCO-XGCP-MIB", "cXgcpMsgStatsMgcIPAddress"), ("CISCO-XGCP-MIB", "cXgcpMsgStatsSuccessMessages"), ("CISCO-XGCP-MIB", "cXgcpMsgStatsFailMessages"), ("CISCO-XGCP-MIB", "cXgcpMsgStatsIncompleteMessages"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cXgcpMsgStatsGroup = cXgcpMsgStatsGroup.setStatus('current')
cXgcpMediaGwGroupSup1 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 318, 2, 2, 4)).setObjects(("CISCO-XGCP-MIB", "cXgcpMediaGwConfiguredPackages"), ("CISCO-XGCP-MIB", "cXgcpMediaGwConnOosRsipBehavior"), ("CISCO-XGCP-MIB", "cXgcpMediaGwLongDurTimer"), ("CISCO-XGCP-MIB", "cXgcpMediaGwProfile"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cXgcpMediaGwGroupSup1 = cXgcpMediaGwGroupSup1.setStatus('deprecated')
cXgcpMediaGwGroupSup2 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 318, 2, 2, 5)).setObjects(("CISCO-XGCP-MIB", "cXgcpMediaGwConfiguredPackages"), ("CISCO-XGCP-MIB", "cXgcpMediaGwConnOosRsipBehavior"), ("CISCO-XGCP-MIB", "cXgcpMediaGwLongDurTimer"), ("CISCO-XGCP-MIB", "cXgcpMediaGwProfile"), ("CISCO-XGCP-MIB", "cXgcpMediaGwAnnexabSdpEnabled"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cXgcpMediaGwGroupSup2 = cXgcpMediaGwGroupSup2.setStatus('current')
cXgcpStatsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 318, 2, 2, 6)).setObjects(("CISCO-XGCP-MIB", "cXgcpStatsUdpRxPkts"), ("CISCO-XGCP-MIB", "cXgcpStatsUdpTxPkts"), ("CISCO-XGCP-MIB", "cXgcpStatsUnRecRxPkts"), ("CISCO-XGCP-MIB", "cXgcpStatsMsgParsingErrors"), ("CISCO-XGCP-MIB", "cXgcpStatsDupAckTxMsgs"), ("CISCO-XGCP-MIB", "cXgcpStatsInvalidVerCount"), ("CISCO-XGCP-MIB", "cXgcpStatsUnknownMgcRxPkts"), ("CISCO-XGCP-MIB", "cXgcpStatsAckTxMsgs"), ("CISCO-XGCP-MIB", "cXgcpStatsNackTxMsgs"), ("CISCO-XGCP-MIB", "cXgcpStatsAckRxMsgs"), ("CISCO-XGCP-MIB", "cXgcpStatsNackRxMsgs"), ("CISCO-XGCP-MIB", "cXgcpStatsRxCrcxs"), ("CISCO-XGCP-MIB", "cXgcpStatsRxSuccCrcxs"), ("CISCO-XGCP-MIB", "cXgcpStatsRxFailCrcxs"), ("CISCO-XGCP-MIB", "cXgcpStatsRxDlcxs"), ("CISCO-XGCP-MIB", "cXgcpStatsRxSuccDlcxs"), ("CISCO-XGCP-MIB", "cXgcpStatsRxFailDlcxs"), ("CISCO-XGCP-MIB", "cXgcpStatsTxDlcxs"), ("CISCO-XGCP-MIB", "cXgcpStatsTxSuccDlcxs"), ("CISCO-XGCP-MIB", "cXgcpStatsTxFailDlcxs"), ("CISCO-XGCP-MIB", "cXgcpStatsRxMdcxs"), ("CISCO-XGCP-MIB", "cXgcpStatsRxSuccMdcxs"), ("CISCO-XGCP-MIB", "cXgcpStatsRxFailMdcxs"), ("CISCO-XGCP-MIB", "cXgcpStatsRxRqnts"), ("CISCO-XGCP-MIB", "cXgcpStatsRxSuccRqnts"), ("CISCO-XGCP-MIB", "cXgcpStatsRxFailRqnts"), ("CISCO-XGCP-MIB", "cXgcpStatsRxAucxs"), ("CISCO-XGCP-MIB", "cXgcpStatsRxSuccAucxs"), ("CISCO-XGCP-MIB", "cXgcpStatsRxFailAucxs"), ("CISCO-XGCP-MIB", "cXgcpStatsRxAueps"), ("CISCO-XGCP-MIB", "cXgcpStatsRxSuccAueps"), ("CISCO-XGCP-MIB", "cXgcpStatsRxFailAueps"), ("CISCO-XGCP-MIB", "cXgcpStatsTxRsips"), ("CISCO-XGCP-MIB", "cXgcpStatsTxSuccRsips"), ("CISCO-XGCP-MIB", "cXgcpStatsTxFailRsips"), ("CISCO-XGCP-MIB", "cXgcpStatsTxNotifies"), ("CISCO-XGCP-MIB", "cXgcpStatsTxSuccNotifies"), ("CISCO-XGCP-MIB", "cXgcpStatsTxFailNotifies"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cXgcpStatsGroup = cXgcpStatsGroup.setStatus('current')
cXgcpConnectionGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 318, 2, 2, 7)).setObjects(("CISCO-XGCP-MIB", "cXgcpConnEndPoint"), ("CISCO-XGCP-MIB", "cXgcpConnCallId"), ("CISCO-XGCP-MIB", "cXgcpConnLocalUdpPort"), ("CISCO-XGCP-MIB", "cXgcpConnRemoteUdpPort"), ("CISCO-XGCP-MIB", "cXgcpConnMode"), ("CISCO-XGCP-MIB", "cXgcpConnVccId"), ("CISCO-XGCP-MIB", "cXgcpConnChannelId"), ("CISCO-XGCP-MIB", "cXgcpConnCallState"), ("CISCO-XGCP-MIB", "cXgcpConnCodec"), ("CISCO-XGCP-MIB", "cXgcpConnLastSuccEvent"), ("CISCO-XGCP-MIB", "cXgcpConnLastSuccIntEvent"), ("CISCO-XGCP-MIB", "cXgcpConnLastFailedEvent"), ("CISCO-XGCP-MIB", "cXgcpConnLastReqEvent"), ("CISCO-XGCP-MIB", "cXgcpConnEventResult"), ("CISCO-XGCP-MIB", "cXgcpConnEncrSuite"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cXgcpConnectionGroup = cXgcpConnectionGroup.setStatus('current')
mibBuilder.exportSymbols("CISCO-XGCP-MIB", cXgcpMediaGwQuarantinePersist=cXgcpMediaGwQuarantinePersist, cXgcpStatsTxFailRsips=cXgcpStatsTxFailRsips, cXgcpMediaGwGroup=cXgcpMediaGwGroup, cXgcpConnEventResult=cXgcpConnEventResult, cXgcpMsgStatsIncompleteMessages=cXgcpMsgStatsIncompleteMessages, cXgcpMsgStatsIndex=cXgcpMsgStatsIndex, cXgcpNotifications=cXgcpNotifications, cXgcpMediaGwAckSdpEnabled=cXgcpMediaGwAckSdpEnabled, cXgcpStatsTable=cXgcpStatsTable, cXgcpStatsUnRecRxPkts=cXgcpStatsUnRecRxPkts, cXgcpStatsGroup=cXgcpStatsGroup, cXgcpMediaGwLastFailMgcAddrType=cXgcpMediaGwLastFailMgcAddrType, cXgcpMediaGwConnOosRsipBehavior=cXgcpMediaGwConnOosRsipBehavior, cXgcpConnLastFailedEvent=cXgcpConnLastFailedEvent, PYSNMP_MODULE_ID=ciscoXgcpMIB, ciscoXgcpMIBComplianceRev3=ciscoXgcpMIBComplianceRev3, cXgcpMediaGwPiggybackMsg=cXgcpMediaGwPiggybackMsg, cXgcpStatsRxSuccMdcxs=cXgcpStatsRxSuccMdcxs, cXgcpStatsRxFailAueps=cXgcpStatsRxFailAueps, cXgcpMediaGwSimpleSdpEnabled=cXgcpMediaGwSimpleSdpEnabled, cXgcpStatsUdpRxPkts=cXgcpStatsUdpRxPkts, cXgcpStatsRxFailDlcxs=cXgcpStatsRxFailDlcxs, cXgcpConnChannelId=cXgcpConnChannelId, cXgcpConnection=cXgcpConnection, cXgcpStatsTxSuccNotifies=cXgcpStatsTxSuccNotifies, cXgcpStatsTxFailDlcxs=cXgcpStatsTxFailDlcxs, cXgcpConnectionEntry=cXgcpConnectionEntry, ciscoXgcpMIBComplianceRev1=ciscoXgcpMIBComplianceRev1, cXgcpMgcConfigTable=cXgcpMgcConfigTable, cXgcpConnectionTable=cXgcpConnectionTable, cXgcpMsgStatsGroup=cXgcpMsgStatsGroup, cXgcpMediaGwAnnexabSdpEnabled=cXgcpMediaGwAnnexabSdpEnabled, cXgcpStatsRxFailRqnts=cXgcpStatsRxFailRqnts, cXgcpMediaGwCaleaEnabled=cXgcpMediaGwCaleaEnabled, cXgcpStatsRxMdcxs=cXgcpStatsRxMdcxs, cXgcpStatsRxSuccAucxs=cXgcpStatsRxSuccAucxs, cXgcpMediaGwRestartMwd=cXgcpMediaGwRestartMwd, cXgcpMediaGwDefaultPackage=cXgcpMediaGwDefaultPackage, cXgcpStatsTxRsips=cXgcpStatsTxRsips, cXgcpMediaGwUndottedNotation=cXgcpMediaGwUndottedNotation, cXgcpMediaGwProfile=cXgcpMediaGwProfile, cXgcpStatsTxFailNotifies=cXgcpStatsTxFailNotifies, cXgcpStatsRxRqnts=cXgcpStatsRxRqnts, cXgcpMediaGwGroupSup1=cXgcpMediaGwGroupSup1, cXgcpObjects=cXgcpObjects, cXgcpStatsInvalidVerCount=cXgcpStatsInvalidVerCount, cXgcpConnCodec=cXgcpConnCodec, cXgcpMediaGwDtmfRelay=cXgcpMediaGwDtmfRelay, cXgcpMediaGwConfiguredPackages=cXgcpMediaGwConfiguredPackages, cXgcpMgcCfg=cXgcpMgcCfg, cXgcpStatsUdpTxPkts=cXgcpStatsUdpTxPkts, cXgcpMIBConformance=cXgcpMIBConformance, cXgcpStatsMsgParsingErrors=cXgcpStatsMsgParsingErrors, cXgcpMediaGwRestartDelay=cXgcpMediaGwRestartDelay, ciscoXgcpMIB=ciscoXgcpMIB, cXgcpStatsDupAckTxMsgs=cXgcpStatsDupAckTxMsgs, cXgcpStats=cXgcpStats, CXgcpCallEvent=CXgcpCallEvent, cXgcpMediaGwEntry=cXgcpMediaGwEntry, cXgcpMediaGwSupportedPackages=cXgcpMediaGwSupportedPackages, cXgcpStatsNackRxMsgs=cXgcpStatsNackRxMsgs, cXgcpMsgStatsFailMessages=cXgcpMsgStatsFailMessages, cXgcpMediaGwQuarantineLoop=cXgcpMediaGwQuarantineLoop, cXgcpMIBCompliances=cXgcpMIBCompliances, cXgcpMediaGwRequestTimeOut=cXgcpMediaGwRequestTimeOut, cXgcpMgcConfigProtocolIndex=cXgcpMgcConfigProtocolIndex, cXgcpConnVccId=cXgcpConnVccId, cXgcpStatsUnknownMgcRxPkts=cXgcpStatsUnknownMgcRxPkts, cXgcpStatsRxSuccRqnts=cXgcpStatsRxSuccRqnts, cXgcpMediaGwMaxMsgSize=cXgcpMediaGwMaxMsgSize, cXgcpStatsRxFailMdcxs=cXgcpStatsRxFailMdcxs, cXgcpStatsRxAucxs=cXgcpStatsRxAucxs, cXgcpStatsRxDlcxs=cXgcpStatsRxDlcxs, cXgcpStatsRxSuccAueps=cXgcpStatsRxSuccAueps, cXgcpStatsTxNotifies=cXgcpStatsTxNotifies, cXgcpMgcConfigGatewayUdpPort=cXgcpMgcConfigGatewayUdpPort, cXgcpMsgStatsMgcIPAddress=cXgcpMsgStatsMgcIPAddress, cXgcpStatsRxFailCrcxs=cXgcpStatsRxFailCrcxs, cXgcpStatsNackTxMsgs=cXgcpStatsNackTxMsgs, cXgcpStatsRxFailAucxs=cXgcpStatsRxFailAucxs, cXgcpStatsRxAueps=cXgcpStatsRxAueps, cXgcpConnEncrSuite=cXgcpConnEncrSuite, cXgcpStatsAckRxMsgs=cXgcpStatsAckRxMsgs, cXgcpConnMode=cXgcpConnMode, cXgcpMediaGwGroupSup2=cXgcpMediaGwGroupSup2, cXgcpConnCallId=cXgcpConnCallId, cXgcpConnId=cXgcpConnId, cXgcpMediaGwRequestRetries=cXgcpMediaGwRequestRetries, cXgcpStatsTxDlcxs=cXgcpStatsTxDlcxs, cXgcpMgcConfigGroup=cXgcpMgcConfigGroup, cXgcpMsgStatsEntry=cXgcpMsgStatsEntry, cXgcpMgcConfigAddress=cXgcpMgcConfigAddress, cXgcpMediaGwMaxExpTimeout=cXgcpMediaGwMaxExpTimeout, CXgcpRetryMethod=CXgcpRetryMethod, cXgcpMediaGwTable=cXgcpMediaGwTable, cXgcpConnLocalUdpPort=cXgcpConnLocalUdpPort, cXgcpMediaGw=cXgcpMediaGw, cXgcpMgcConfigMgcGrpNum=cXgcpMgcConfigMgcGrpNum, cXgcpMgcConfigAddrType=cXgcpMgcConfigAddrType, cXgcpStatsTxSuccDlcxs=cXgcpStatsTxSuccDlcxs, cXgcpMsgStatsMgcIPAddressType=cXgcpMsgStatsMgcIPAddressType, cXgcpStatsRxCrcxs=cXgcpStatsRxCrcxs, cXgcpConnEndPoint=cXgcpConnEndPoint, cXgcpMIBGroups=cXgcpMIBGroups, cXgcpMsgStatsSuccessMessages=cXgcpMsgStatsSuccessMessages, cXgcpStatsAckTxMsgs=cXgcpStatsAckTxMsgs, cXgcpStatsTxSuccRsips=cXgcpStatsTxSuccRsips, ciscoXgcpMIBCompliance=ciscoXgcpMIBCompliance, cXgcpStatsEntry=cXgcpStatsEntry, cXgcpStatsRxSuccCrcxs=cXgcpStatsRxSuccCrcxs, cXgcpMsgStatsTable=cXgcpMsgStatsTable, cXgcpConnLastReqEvent=cXgcpConnLastReqEvent, cXgcpConnectionGroup=cXgcpConnectionGroup, cXgcpConnLastSuccEvent=cXgcpConnLastSuccEvent, cXgcpMediaGwLongDurTimer=cXgcpMediaGwLongDurTimer, cXgcpMediaGwLastFailMgcAddr=cXgcpMediaGwLastFailMgcAddr, cXgcpMediaGwRequestRetryMethod=cXgcpMediaGwRequestRetryMethod, cXgcpStatsRxSuccDlcxs=cXgcpStatsRxSuccDlcxs, cXgcpConnLastSuccIntEvent=cXgcpConnLastSuccIntEvent, ciscoXgcpMIBComplianceRev2=ciscoXgcpMIBComplianceRev2, cXgcpConnRemoteUdpPort=cXgcpConnRemoteUdpPort, cXgcpMediaGwQuarantineProcess=cXgcpMediaGwQuarantineProcess, cXgcpConnCallState=cXgcpConnCallState, cXgcpMgcConfigEntry=cXgcpMgcConfigEntry)
