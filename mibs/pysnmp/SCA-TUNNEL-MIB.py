#
# PySNMP MIB module SCA-TUNNEL-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/SCA-TUNNEL-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 20:53:00 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ValueSizeConstraint, ConstraintsUnion, SingleValueConstraint, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ValueSizeConstraint", "ConstraintsUnion", "SingleValueConstraint", "ValueRangeConstraint")
scanet, = mibBuilder.importSymbols("SCANET-MIB", "scanet")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
TimeTicks, Bits, iso, NotificationType, Integer32, ObjectIdentity, Unsigned32, MibIdentifier, Counter64, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter32, IpAddress, ModuleIdentity, Gauge32 = mibBuilder.importSymbols("SNMPv2-SMI", "TimeTicks", "Bits", "iso", "NotificationType", "Integer32", "ObjectIdentity", "Unsigned32", "MibIdentifier", "Counter64", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter32", "IpAddress", "ModuleIdentity", "Gauge32")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
tunnel = MibIdentifier((1, 3, 6, 1, 4, 1, 208, 52))
tunnelInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 208, 52, 1))
tunnelInfoTable = MibTable((1, 3, 6, 1, 4, 1, 208, 52, 1, 1), )
if mibBuilder.loadTexts: tunnelInfoTable.setStatus('mandatory')
tunnelInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 208, 52, 1, 1, 1), ).setIndexNames((0, "SCA-TUNNEL-MIB", "tunnelInfoIfIndex"))
if mibBuilder.loadTexts: tunnelInfoEntry.setStatus('mandatory')
tunnelInfoIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 208, 52, 1, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tunnelInfoIfIndex.setStatus('mandatory')
tunnelInfoState = MibTableColumn((1, 3, 6, 1, 4, 1, 208, 52, 1, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("void", 1), ("create", 2), ("closed", 3), ("openclosing", 4), ("call", 5), ("destroy", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tunnelInfoState.setStatus('mandatory')
tunnelInfoDirection = MibTableColumn((1, 3, 6, 1, 4, 1, 208, 52, 1, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("client", 1), ("server", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tunnelInfoDirection.setStatus('mandatory')
tunnelInfoLocalAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 208, 52, 1, 1, 1, 4), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tunnelInfoLocalAddress.setStatus('mandatory')
tunnelInfoRemoteAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 208, 52, 1, 1, 1, 5), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tunnelInfoRemoteAddress.setStatus('mandatory')
tunnelInfoLocalPort = MibTableColumn((1, 3, 6, 1, 4, 1, 208, 52, 1, 1, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tunnelInfoLocalPort.setStatus('mandatory')
tunnelInfoRemotePort = MibTableColumn((1, 3, 6, 1, 4, 1, 208, 52, 1, 1, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tunnelInfoRemotePort.setStatus('mandatory')
tunnelInfoReceiveQueueSize = MibTableColumn((1, 3, 6, 1, 4, 1, 208, 52, 1, 1, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tunnelInfoReceiveQueueSize.setStatus('mandatory')
tunnelInfoTransmitQueueSize = MibTableColumn((1, 3, 6, 1, 4, 1, 208, 52, 1, 1, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tunnelInfoTransmitQueueSize.setStatus('mandatory')
mibBuilder.exportSymbols("SCA-TUNNEL-MIB", tunnelInfoIfIndex=tunnelInfoIfIndex, tunnelInfoReceiveQueueSize=tunnelInfoReceiveQueueSize, tunnelInfoLocalPort=tunnelInfoLocalPort, tunnelInfoState=tunnelInfoState, tunnelInfo=tunnelInfo, tunnelInfoRemotePort=tunnelInfoRemotePort, tunnelInfoLocalAddress=tunnelInfoLocalAddress, tunnelInfoTable=tunnelInfoTable, tunnel=tunnel, tunnelInfoDirection=tunnelInfoDirection, tunnelInfoTransmitQueueSize=tunnelInfoTransmitQueueSize, tunnelInfoRemoteAddress=tunnelInfoRemoteAddress, tunnelInfoEntry=tunnelInfoEntry)
