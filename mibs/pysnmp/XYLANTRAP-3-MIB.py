#
# PySNMP MIB module XYLANTRAP-3-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/XYLANTRAP-3-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 21:39:15 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, SingleValueConstraint, ConstraintsIntersection, ValueSizeConstraint, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "SingleValueConstraint", "ConstraintsIntersection", "ValueSizeConstraint", "ValueRangeConstraint")
chasModuleOperStatus, chasPowerSupply1State, chasControlState, chasModuleSubUnit, chasControlSlot, chasModuleSlot, chasPowerSupply2State, chasModuleType = mibBuilder.importSymbols("CHASSIS-MIB", "chasModuleOperStatus", "chasPowerSupply1State", "chasControlState", "chasModuleSubUnit", "chasControlSlot", "chasModuleSlot", "chasPowerSupply2State", "chasModuleType")
fddimibSMTIndex, fddimibSMTCFState = mibBuilder.importSymbols("FDDI-SMT73-MIB", "fddimibSMTIndex", "fddimibSMTCFState")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
MibScalar, MibTable, MibTableRow, MibTableColumn, NotificationType, Counter64, Counter32, ModuleIdentity, MibIdentifier, iso, Integer32, Gauge32, Bits, Unsigned32, TimeTicks, IpAddress, NotificationType, ObjectIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "NotificationType", "Counter64", "Counter32", "ModuleIdentity", "MibIdentifier", "iso", "Integer32", "Gauge32", "Bits", "Unsigned32", "TimeTicks", "IpAddress", "NotificationType", "ObjectIdentity")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
atmxServiceSlotIndex, atmxVccSlotIndex, atmxPortEnableILMI, atmxVccAdmStatus, atmxServiceAdmStatus, atmxVccVpi, atmxPortPortIndex, atmxVccVci, atmxServiceNumber, atmxPortSlotIndex, atmxServicePortIndex, atmxVccPortIndex = mibBuilder.importSymbols("XYLAN-ATM-MIB", "atmxServiceSlotIndex", "atmxVccSlotIndex", "atmxPortEnableILMI", "atmxVccAdmStatus", "atmxServiceAdmStatus", "atmxVccVpi", "atmxPortPortIndex", "atmxVccVci", "atmxServiceNumber", "atmxPortSlotIndex", "atmxServicePortIndex", "atmxVccPortIndex")
omniswitch9, xylan, xylanSwitchDevice, pizzaSwitch, omniswitch5, microSwitch = mibBuilder.importSymbols("XYLAN-BASE-MIB", "omniswitch9", "xylan", "xylanSwitchDevice", "pizzaSwitch", "omniswitch5", "microSwitch")
frxVcControlPortIndex, frxVcControlSlotIndex, frxVcControlDlci = mibBuilder.importSymbols("XYLAN-FRAME-RELAY-MIB", "frxVcControlPortIndex", "frxVcControlSlotIndex", "frxVcControlDlci")
healthThreshModTrapCount, healthThreshModTrapData, healthThreshDevTrapData = mibBuilder.importSymbols("XYLAN-HEALTH-MIB", "healthThreshModTrapCount", "healthThreshModTrapData", "healthThreshDevTrapData")
xylanIpAssocDupSlot, xylanIpAssocDupMac, xylanIpAssocAddr, xylanIpAssocMac, xylanIpAssocDupIntf, xylanIpAssocSlot, xylanIpAssocIntf = mibBuilder.importSymbols("XYLAN-IP-MIB", "xylanIpAssocDupSlot", "xylanIpAssocDupMac", "xylanIpAssocAddr", "xylanIpAssocMac", "xylanIpAssocDupIntf", "xylanIpAssocSlot", "xylanIpAssocIntf")
systemEventTrapNumber, = mibBuilder.importSymbols("XYLAN-MGMTSTN-MIB", "systemEventTrapNumber")
vportFuncTypeInstance, vportIF, vportFuncType, vportSlot, vportAdmStatus = mibBuilder.importSymbols("XYLAN-PORT-MIB", "vportFuncTypeInstance", "vportIF", "vportFuncType", "vportSlot", "vportAdmStatus")
atVLANAdminStatus, vDupMacSlot, vLanAdmStatus, vLanNumber, vDupMacTime, vDupMacIntf, vBrdgTpFdbAddress, vDupMacMac, atVLANId, atVLANGroupId = mibBuilder.importSymbols("XYLAN-VLAN-MIB", "atVLANAdminStatus", "vDupMacSlot", "vLanAdmStatus", "vLanNumber", "vDupMacTime", "vDupMacIntf", "vBrdgTpFdbAddress", "vDupMacMac", "atVLANId", "atVLANGroupId")
tempAlarm3 = NotificationType((1, 3, 6, 1, 4, 1, 800, 3, 1, 1, 3) + (0,1))
moduleChange3 = NotificationType((1, 3, 6, 1, 4, 1, 800, 3, 1, 1, 3) + (0,2)).setObjects(("CHASSIS-MIB", "chasModuleSlot"), ("CHASSIS-MIB", "chasModuleSubUnit"), ("CHASSIS-MIB", "chasModuleType"))
powerEvent3 = NotificationType((1, 3, 6, 1, 4, 1, 800, 3, 1, 1, 3) + (0,3)).setObjects(("CHASSIS-MIB", "chasPowerSupply1State"), ("CHASSIS-MIB", "chasPowerSupply2State"))
controllerEvent3 = NotificationType((1, 3, 6, 1, 4, 1, 800, 3, 1, 1, 3) + (0,4)).setObjects(("CHASSIS-MIB", "chasControlSlot"), ("CHASSIS-MIB", "chasControlState"))
loginViolation3 = NotificationType((1, 3, 6, 1, 4, 1, 800, 3, 1, 1, 3) + (0,5))
macVlanViolation3 = NotificationType((1, 3, 6, 1, 4, 1, 800, 3, 1, 1, 3) + (0,6)).setObjects(("XYLAN-VLAN-MIB", "vBrdgTpFdbAddress"))
macDuplicatePort3 = NotificationType((1, 3, 6, 1, 4, 1, 800, 3, 1, 1, 3) + (0,7)).setObjects(("XYLAN-VLAN-MIB", "vBrdgTpFdbAddress"))
portLinkUpEvent3 = NotificationType((1, 3, 6, 1, 4, 1, 800, 3, 1, 1, 3) + (0,8)).setObjects(("XYLAN-PORT-MIB", "vportSlot"), ("XYLAN-PORT-MIB", "vportIF"), ("XYLAN-PORT-MIB", "vportFuncType"), ("XYLAN-PORT-MIB", "vportFuncTypeInstance"))
portLinkDownEvent3 = NotificationType((1, 3, 6, 1, 4, 1, 800, 3, 1, 1, 3) + (0,9)).setObjects(("XYLAN-PORT-MIB", "vportSlot"), ("XYLAN-PORT-MIB", "vportIF"), ("XYLAN-PORT-MIB", "vportFuncType"), ("XYLAN-PORT-MIB", "vportFuncTypeInstance"))
portPartitioned3 = NotificationType((1, 3, 6, 1, 4, 1, 800, 3, 1, 1, 3) + (0,10)).setObjects(("XYLAN-PORT-MIB", "vportSlot"), ("XYLAN-PORT-MIB", "vportIF"), ("XYLAN-PORT-MIB", "vportFuncType"), ("XYLAN-PORT-MIB", "vportFuncTypeInstance"))
portRecordMismatch3 = NotificationType((1, 3, 6, 1, 4, 1, 800, 3, 1, 1, 3) + (0,11)).setObjects(("XYLAN-PORT-MIB", "vportSlot"), ("XYLAN-PORT-MIB", "vportIF"), ("XYLAN-PORT-MIB", "vportFuncType"), ("XYLAN-PORT-MIB", "vportFuncTypeInstance"))
groupChange3 = NotificationType((1, 3, 6, 1, 4, 1, 800, 3, 1, 1, 3) + (0,14)).setObjects(("XYLAN-VLAN-MIB", "vLanNumber"), ("XYLAN-VLAN-MIB", "vLanAdmStatus"))
vlanChange3 = NotificationType((1, 3, 6, 1, 4, 1, 800, 3, 1, 1, 3) + (0,15)).setObjects(("XYLAN-VLAN-MIB", "atVLANGroupId"), ("XYLAN-VLAN-MIB", "atVLANId"), ("XYLAN-VLAN-MIB", "atVLANAdminStatus"))
portMove3 = NotificationType((1, 3, 6, 1, 4, 1, 800, 3, 1, 1, 3) + (0,16)).setObjects(("XYLAN-PORT-MIB", "vportSlot"), ("XYLAN-PORT-MIB", "vportIF"), ("XYLAN-PORT-MIB", "vportFuncType"), ("XYLAN-PORT-MIB", "vportFuncTypeInstance"), ("XYLAN-PORT-MIB", "vportAdmStatus"))
moduleResetReload3 = NotificationType((1, 3, 6, 1, 4, 1, 800, 3, 1, 1, 3) + (0,17)).setObjects(("CHASSIS-MIB", "chasModuleSlot"), ("CHASSIS-MIB", "chasModuleSubUnit"), ("CHASSIS-MIB", "chasModuleType"), ("CHASSIS-MIB", "chasModuleOperStatus"))
systemEvent3 = NotificationType((1, 3, 6, 1, 4, 1, 800, 3, 1, 1, 3) + (0,18)).setObjects(("XYLAN-MGMTSTN-MIB", "systemEventTrapNumber"))
vlanRouteTableFull3 = NotificationType((1, 3, 6, 1, 4, 1, 800, 3, 1, 1, 3) + (0,19))
sapTableFull3 = NotificationType((1, 3, 6, 1, 4, 1, 800, 3, 1, 1, 3) + (0,20))
atmSSCOPstate3 = NotificationType((1, 3, 6, 1, 4, 1, 800, 3, 1, 1, 3) + (0,21)).setObjects(("XYLAN-ATM-MIB", "atmxPortSlotIndex"), ("XYLAN-ATM-MIB", "atmxPortPortIndex"))
ilmiState3 = NotificationType((1, 3, 6, 1, 4, 1, 800, 3, 1, 1, 3) + (0,22)).setObjects(("XYLAN-ATM-MIB", "atmxPortSlotIndex"), ("XYLAN-ATM-MIB", "atmxPortPortIndex"), ("XYLAN-ATM-MIB", "atmxPortEnableILMI"))
atmConnection3 = NotificationType((1, 3, 6, 1, 4, 1, 800, 3, 1, 1, 3) + (0,23)).setObjects(("XYLAN-ATM-MIB", "atmxVccSlotIndex"), ("XYLAN-ATM-MIB", "atmxVccPortIndex"), ("XYLAN-ATM-MIB", "atmxVccVpi"), ("XYLAN-ATM-MIB", "atmxVccVci"), ("XYLAN-ATM-MIB", "atmxVccAdmStatus"))
atmService3 = NotificationType((1, 3, 6, 1, 4, 1, 800, 3, 1, 1, 3) + (0,24)).setObjects(("XYLAN-ATM-MIB", "atmxServiceSlotIndex"), ("XYLAN-ATM-MIB", "atmxServicePortIndex"), ("XYLAN-ATM-MIB", "atmxServiceNumber"), ("XYLAN-ATM-MIB", "atmxServiceAdmStatus"))
dlciNew3 = NotificationType((1, 3, 6, 1, 4, 1, 800, 3, 1, 1, 3) + (0,27)).setObjects(("XYLAN-FRAME-RELAY-MIB", "frxVcControlSlotIndex"), ("XYLAN-FRAME-RELAY-MIB", "frxVcControlPortIndex"), ("XYLAN-FRAME-RELAY-MIB", "frxVcControlDlci"))
dlciDel3 = NotificationType((1, 3, 6, 1, 4, 1, 800, 3, 1, 1, 3) + (0,28)).setObjects(("XYLAN-FRAME-RELAY-MIB", "frxVcControlSlotIndex"), ("XYLAN-FRAME-RELAY-MIB", "frxVcControlPortIndex"), ("XYLAN-FRAME-RELAY-MIB", "frxVcControlDlci"))
dlciUp3 = NotificationType((1, 3, 6, 1, 4, 1, 800, 3, 1, 1, 3) + (0,29)).setObjects(("XYLAN-FRAME-RELAY-MIB", "frxVcControlSlotIndex"), ("XYLAN-FRAME-RELAY-MIB", "frxVcControlPortIndex"), ("XYLAN-FRAME-RELAY-MIB", "frxVcControlDlci"))
dlciDn3 = NotificationType((1, 3, 6, 1, 4, 1, 800, 3, 1, 1, 3) + (0,30)).setObjects(("XYLAN-FRAME-RELAY-MIB", "frxVcControlSlotIndex"), ("XYLAN-FRAME-RELAY-MIB", "frxVcControlPortIndex"), ("XYLAN-FRAME-RELAY-MIB", "frxVcControlDlci"))
portManualForwardingMode3 = NotificationType((1, 3, 6, 1, 4, 1, 800, 3, 1, 1, 3) + (0,31)).setObjects(("XYLAN-PORT-MIB", "vportSlot"), ("XYLAN-PORT-MIB", "vportIF"), ("XYLAN-PORT-MIB", "vportFuncType"), ("XYLAN-PORT-MIB", "vportFuncTypeInstance"))
fddiCFStateChange3 = NotificationType((1, 3, 6, 1, 4, 1, 800, 3, 1, 1, 3) + (0,32)).setObjects(("FDDI-SMT73-MIB", "fddimibSMTIndex"), ("FDDI-SMT73-MIB", "fddimibSMTCFState"))
duplicateIPaddress3 = NotificationType((1, 3, 6, 1, 4, 1, 800, 3, 1, 1, 3) + (0,35)).setObjects(("XYLAN-IP-MIB", "xylanIpAssocAddr"), ("XYLAN-IP-MIB", "xylanIpAssocMac"), ("XYLAN-IP-MIB", "xylanIpAssocSlot"), ("XYLAN-IP-MIB", "xylanIpAssocIntf"), ("XYLAN-IP-MIB", "xylanIpAssocDupMac"), ("XYLAN-IP-MIB", "xylanIpAssocDupSlot"), ("XYLAN-IP-MIB", "xylanIpAssocDupIntf"))
duplicateMACaddress3 = NotificationType((1, 3, 6, 1, 4, 1, 800, 3, 1, 1, 3) + (0,36)).setObjects(("XYLAN-VLAN-MIB", "vDupMacMac"), ("XYLAN-VLAN-MIB", "vDupMacSlot"), ("XYLAN-VLAN-MIB", "vDupMacIntf"), ("XYLAN-VLAN-MIB", "vDupMacTime"))
healthThresholdRising3 = NotificationType((1, 3, 6, 1, 4, 1, 800, 3, 1, 1, 3) + (0,37))
healthThresholdFalling3 = NotificationType((1, 3, 6, 1, 4, 1, 800, 3, 1, 1, 3) + (0,38))
healthThresholdDevice3 = NotificationType((1, 3, 6, 1, 4, 1, 800, 3, 1, 1, 3) + (0,39)).setObjects(("XYLAN-HEALTH-MIB", "healthThreshDevTrapData"))
healthThresholdModule3 = NotificationType((1, 3, 6, 1, 4, 1, 800, 3, 1, 1, 3) + (0,40)).setObjects(("XYLAN-HEALTH-MIB", "healthThreshModTrapCount"), ("XYLAN-HEALTH-MIB", "healthThreshModTrapData"))
pnniRouteConflictPort3 = NotificationType((1, 3, 6, 1, 4, 1, 800, 3, 1, 1, 3) + (0,50))
pnniRouteConflictSamePG3 = NotificationType((1, 3, 6, 1, 4, 1, 800, 3, 1, 1, 3) + (0,51))
mibBuilder.exportSymbols("XYLANTRAP-3-MIB", moduleResetReload3=moduleResetReload3, portManualForwardingMode3=portManualForwardingMode3, healthThresholdFalling3=healthThresholdFalling3, portLinkUpEvent3=portLinkUpEvent3, groupChange3=groupChange3, vlanChange3=vlanChange3, dlciUp3=dlciUp3, sapTableFull3=sapTableFull3, ilmiState3=ilmiState3, duplicateIPaddress3=duplicateIPaddress3, pnniRouteConflictPort3=pnniRouteConflictPort3, healthThresholdDevice3=healthThresholdDevice3, portLinkDownEvent3=portLinkDownEvent3, pnniRouteConflictSamePG3=pnniRouteConflictSamePG3, portMove3=portMove3, moduleChange3=moduleChange3, dlciDel3=dlciDel3, loginViolation3=loginViolation3, atmService3=atmService3, dlciNew3=dlciNew3, vlanRouteTableFull3=vlanRouteTableFull3, macDuplicatePort3=macDuplicatePort3, dlciDn3=dlciDn3, healthThresholdModule3=healthThresholdModule3, healthThresholdRising3=healthThresholdRising3, controllerEvent3=controllerEvent3, fddiCFStateChange3=fddiCFStateChange3, powerEvent3=powerEvent3, systemEvent3=systemEvent3, duplicateMACaddress3=duplicateMACaddress3, atmConnection3=atmConnection3, macVlanViolation3=macVlanViolation3, tempAlarm3=tempAlarm3, portPartitioned3=portPartitioned3, atmSSCOPstate3=atmSSCOPstate3, portRecordMismatch3=portRecordMismatch3)
