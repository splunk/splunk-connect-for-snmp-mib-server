#
# PySNMP MIB module HP-ICF-CHAIN (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/HP-ICF-CHAIN
# Produced by pysmi-0.3.4 at Mon Apr 29 19:20:54 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ValueSizeConstraint, SingleValueConstraint, ConstraintsUnion, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ValueSizeConstraint", "SingleValueConstraint", "ConstraintsUnion", "ValueRangeConstraint")
hpicfObjectModules, hpicfCommonTrapsPrefix, hpicfCommon = mibBuilder.importSymbols("HP-ICF-OID", "hpicfObjectModules", "hpicfCommonTrapsPrefix", "hpicfCommon")
NotificationGroup, ModuleCompliance, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance", "ObjectGroup")
IpAddress, Counter32, iso, TimeTicks, Counter64, ObjectIdentity, Bits, Unsigned32, ModuleIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, NotificationType, MibIdentifier, Gauge32, Integer32 = mibBuilder.importSymbols("SNMPv2-SMI", "IpAddress", "Counter32", "iso", "TimeTicks", "Counter64", "ObjectIdentity", "Bits", "Unsigned32", "ModuleIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "NotificationType", "MibIdentifier", "Gauge32", "Integer32")
TimeStamp, TruthValue, DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "TimeStamp", "TruthValue", "DisplayString", "TextualConvention")
hpicfChainMib = ModuleIdentity((1, 3, 6, 1, 4, 1, 11, 2, 14, 10, 2, 2))
hpicfChainMib.setRevisions(('2000-11-03 22:16', '1997-03-06 03:33', '1996-09-10 02:08', '1994-02-25 00:00',))
if mibBuilder.loadTexts: hpicfChainMib.setLastUpdated('200011032216Z')
if mibBuilder.loadTexts: hpicfChainMib.setOrganization('HP Networking')
hpicfChain = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 1))
hpicfChainMaxMembers = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfChainMaxMembers.setStatus('current')
hpicfChainCurMembers = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfChainCurMembers.setStatus('current')
hpicfChainLastChange = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 1, 3), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfChainLastChange.setStatus('current')
hpicfChainChanges = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfChainChanges.setStatus('current')
hpicfChainTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 1, 5), )
if mibBuilder.loadTexts: hpicfChainTable.setStatus('current')
hpicfChainEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 1, 5, 1), ).setIndexNames((0, "HP-ICF-CHAIN", "hpicfChainId"))
if mibBuilder.loadTexts: hpicfChainEntry.setStatus('current')
hpicfChainId = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 1, 5, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(6, 6)).setFixedLength(6)).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfChainId.setStatus('current')
hpicfChainObjectId = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 1, 5, 1, 2), ObjectIdentifier()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfChainObjectId.setStatus('current')
hpicfChainTimestamp = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 1, 5, 1, 3), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfChainTimestamp.setStatus('current')
hpicfChainHasAgent = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 1, 5, 1, 4), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfChainHasAgent.setStatus('current')
hpicfChainThisBox = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 1, 5, 1, 5), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfChainThisBox.setStatus('current')
hpicfChainLocation = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 1, 5, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpicfChainLocation.setStatus('current')
hpicfChainViewTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 1, 6), )
if mibBuilder.loadTexts: hpicfChainViewTable.setStatus('current')
hpicfChainViewEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 1, 6, 1), ).setIndexNames((0, "HP-ICF-CHAIN", "hpicfChainViewId"))
if mibBuilder.loadTexts: hpicfChainViewEntry.setStatus('current')
hpicfChainViewId = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 1, 6, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(6, 6)).setFixedLength(6)).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfChainViewId.setStatus('current')
hpicfChainViewName = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 1, 6, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfChainViewName.setStatus('current')
hpicfChainAddition = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 14, 12, 1, 0, 1)).setObjects(("HP-ICF-CHAIN", "hpicfChainId"))
if mibBuilder.loadTexts: hpicfChainAddition.setStatus('deprecated')
hpicfChainRemoval = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 14, 12, 1, 0, 2)).setObjects(("HP-ICF-CHAIN", "hpicfChainId"))
if mibBuilder.loadTexts: hpicfChainRemoval.setStatus('current')
hpicfChainConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 10, 2, 2, 1))
hpicfChainCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 10, 2, 2, 1, 1))
hpicfChainGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 10, 2, 2, 1, 2))
hpicfChainingCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 11, 2, 14, 10, 2, 2, 1, 1, 1)).setObjects(("HP-ICF-CHAIN", "hpicfChainingGroup"), ("HP-ICF-CHAIN", "hpicfChainTrapGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfChainingCompliance = hpicfChainingCompliance.setStatus('obsolete')
hpicfChainingCompliance2 = ModuleCompliance((1, 3, 6, 1, 4, 1, 11, 2, 14, 10, 2, 2, 1, 1, 2)).setObjects(("HP-ICF-CHAIN", "hpicfChainingGroup"), ("HP-ICF-CHAIN", "hpicfChainNotifyGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfChainingCompliance2 = hpicfChainingCompliance2.setStatus('current')
hpicfChainingGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 10, 2, 2, 1, 2, 1)).setObjects(("HP-ICF-CHAIN", "hpicfChainMaxMembers"), ("HP-ICF-CHAIN", "hpicfChainCurMembers"), ("HP-ICF-CHAIN", "hpicfChainLastChange"), ("HP-ICF-CHAIN", "hpicfChainChanges"), ("HP-ICF-CHAIN", "hpicfChainId"), ("HP-ICF-CHAIN", "hpicfChainObjectId"), ("HP-ICF-CHAIN", "hpicfChainTimestamp"), ("HP-ICF-CHAIN", "hpicfChainHasAgent"), ("HP-ICF-CHAIN", "hpicfChainThisBox"), ("HP-ICF-CHAIN", "hpicfChainLocation"), ("HP-ICF-CHAIN", "hpicfChainViewId"), ("HP-ICF-CHAIN", "hpicfChainViewName"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfChainingGroup = hpicfChainingGroup.setStatus('current')
hpicfChainTrapGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 10, 2, 2, 1, 2, 2)).setObjects(("HP-ICF-CHAIN", "hpicfChainAddition"), ("HP-ICF-CHAIN", "hpicfChainRemoval"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfChainTrapGroup = hpicfChainTrapGroup.setStatus('obsolete')
hpicfChainNotifyGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 10, 2, 2, 1, 2, 3)).setObjects(("HP-ICF-CHAIN", "hpicfChainRemoval"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfChainNotifyGroup = hpicfChainNotifyGroup.setStatus('current')
mibBuilder.exportSymbols("HP-ICF-CHAIN", hpicfChainTrapGroup=hpicfChainTrapGroup, hpicfChainMaxMembers=hpicfChainMaxMembers, PYSNMP_MODULE_ID=hpicfChainMib, hpicfChainGroups=hpicfChainGroups, hpicfChainHasAgent=hpicfChainHasAgent, hpicfChainingCompliance=hpicfChainingCompliance, hpicfChainAddition=hpicfChainAddition, hpicfChainEntry=hpicfChainEntry, hpicfChainCompliances=hpicfChainCompliances, hpicfChainMib=hpicfChainMib, hpicfChainThisBox=hpicfChainThisBox, hpicfChainTimestamp=hpicfChainTimestamp, hpicfChainTable=hpicfChainTable, hpicfChainViewTable=hpicfChainViewTable, hpicfChainObjectId=hpicfChainObjectId, hpicfChainingCompliance2=hpicfChainingCompliance2, hpicfChainLastChange=hpicfChainLastChange, hpicfChain=hpicfChain, hpicfChainChanges=hpicfChainChanges, hpicfChainConformance=hpicfChainConformance, hpicfChainViewName=hpicfChainViewName, hpicfChainingGroup=hpicfChainingGroup, hpicfChainRemoval=hpicfChainRemoval, hpicfChainViewId=hpicfChainViewId, hpicfChainViewEntry=hpicfChainViewEntry, hpicfChainNotifyGroup=hpicfChainNotifyGroup, hpicfChainLocation=hpicfChainLocation, hpicfChainCurMembers=hpicfChainCurMembers, hpicfChainId=hpicfChainId)
