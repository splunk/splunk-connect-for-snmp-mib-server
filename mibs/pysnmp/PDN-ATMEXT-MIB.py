#
# PySNMP MIB module PDN-ATMEXT-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/PDN-ATMEXT-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 20:29:05 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ConstraintsUnion, SingleValueConstraint, ValueSizeConstraint, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ConstraintsUnion", "SingleValueConstraint", "ValueSizeConstraint", "ValueRangeConstraint")
atmInterfaceConfEntry, aal5VccEntry, atmTrafficDescrParamEntry, atmVcCrossConnectAdminStatus, atmVpCrossConnectAdminStatus = mibBuilder.importSymbols("ATM-MIB", "atmInterfaceConfEntry", "aal5VccEntry", "atmTrafficDescrParamEntry", "atmVcCrossConnectAdminStatus", "atmVpCrossConnectAdminStatus")
ifOperStatus, ifIndex = mibBuilder.importSymbols("IF-MIB", "ifOperStatus", "ifIndex")
pdnAtm, = mibBuilder.importSymbols("PDN-HEADER-MIB", "pdnAtm")
NotificationGroup, ModuleCompliance, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance", "ObjectGroup")
MibIdentifier, Counter32, Counter64, Unsigned32, ObjectIdentity, NotificationType, Gauge32, IpAddress, MibScalar, MibTable, MibTableRow, MibTableColumn, Integer32, Bits, iso, ModuleIdentity, TimeTicks = mibBuilder.importSymbols("SNMPv2-SMI", "MibIdentifier", "Counter32", "Counter64", "Unsigned32", "ObjectIdentity", "NotificationType", "Gauge32", "IpAddress", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Integer32", "Bits", "iso", "ModuleIdentity", "TimeTicks")
DisplayString, TruthValue, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TruthValue", "TextualConvention")
pdnAtmExtMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 11, 5))
pdnAtmExtMIB.setRevisions(('2003-05-15 00:00', '2003-05-11 00:00', '1970-01-01 00:00', '2003-03-31 00:00', '2002-03-27 00:00', '2000-12-29 00:00', '2000-12-01 00:00', '2000-07-06 00:00', '2000-04-28 00:00', '2000-03-11 00:00', '2000-02-18 00:00',))
if mibBuilder.loadTexts: pdnAtmExtMIB.setLastUpdated('200303310000Z')
if mibBuilder.loadTexts: pdnAtmExtMIB.setOrganization('Paradyne Networks MIB Working Group')
pdnAtmExtMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 11, 5, 1))
pdnAtmExtMIBTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 11, 5, 2))
pdnAtmExtMIBTrapPrefix = MibIdentifier((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 11, 5, 2, 0))
pdnAtmExtMIBConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 11, 5, 3))
pdnAtmExtMIBTrafficDescriptorTypes = MibIdentifier((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 11, 5, 4))
pdnAtmNoClpTaggingNoScrCdvtMdcr = ObjectIdentity((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 11, 5, 4, 1))
if mibBuilder.loadTexts: pdnAtmNoClpTaggingNoScrCdvtMdcr.setStatus('current')
pdnAtmNoClpNoScrCdvtMdcr = ObjectIdentity((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 11, 5, 4, 2))
if mibBuilder.loadTexts: pdnAtmNoClpNoScrCdvtMdcr.setStatus('current')
pdnAtmIfConfExtTable = MibTable((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 11, 5, 1, 1), )
if mibBuilder.loadTexts: pdnAtmIfConfExtTable.setStatus('current')
pdnAtmIfConfExtEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 11, 5, 1, 1, 1), )
atmInterfaceConfEntry.registerAugmentions(("PDN-ATMEXT-MIB", "pdnAtmIfConfExtEntry"))
pdnAtmIfConfExtEntry.setIndexNames(*atmInterfaceConfEntry.getIndexNames())
if mibBuilder.loadTexts: pdnAtmIfConfExtEntry.setStatus('current')
pdnAtmIfConfExtVbrRtBandwidthUtil = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 11, 5, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 9999))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pdnAtmIfConfExtVbrRtBandwidthUtil.setStatus('current')
pdnAtmIfConfExtVbrNrtBandwidthUtil = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 11, 5, 1, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 9999))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pdnAtmIfConfExtVbrNrtBandwidthUtil.setStatus('current')
pdnAtmIfConfExtHecErrorThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 11, 5, 1, 1, 1, 3), Integer32().clone(100)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pdnAtmIfConfExtHecErrorThreshold.setStatus('current')
pdnAtmIfConfExtUnknownCellThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 11, 5, 1, 1, 1, 4), Integer32().clone(10)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pdnAtmIfConfExtUnknownCellThreshold.setStatus('current')
pdnAtmIfConfExtOcdEventThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 11, 5, 1, 1, 1, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pdnAtmIfConfExtOcdEventThreshold.setStatus('current')
pdnAtmIfConfExtBandwidthUtilCbrReserved = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 11, 5, 1, 1, 1, 6), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pdnAtmIfConfExtBandwidthUtilCbrReserved.setStatus('current')
pdnAtmIfConfExtBandwidthUtilCbrAssigned = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 11, 5, 1, 1, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pdnAtmIfConfExtBandwidthUtilCbrAssigned.setStatus('current')
pdnAtmIfConfExtBandwidthUtilVbrRtReserved = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 11, 5, 1, 1, 1, 8), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pdnAtmIfConfExtBandwidthUtilVbrRtReserved.setStatus('current')
pdnAtmIfConfExtBandwidthUtilVbrRtAssigned = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 11, 5, 1, 1, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pdnAtmIfConfExtBandwidthUtilVbrRtAssigned.setStatus('current')
pdnAtmIfConfExtBandwidthUtilVbrNrtReserved = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 11, 5, 1, 1, 1, 10), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pdnAtmIfConfExtBandwidthUtilVbrNrtReserved.setStatus('current')
pdnAtmIfConfExtBandwidthUtilVbrNrtAssigned = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 11, 5, 1, 1, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pdnAtmIfConfExtBandwidthUtilVbrNrtAssigned.setStatus('current')
pdnAtmIfConfExtBandwidthUtilUbrReserved = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 11, 5, 1, 1, 1, 12), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pdnAtmIfConfExtBandwidthUtilUbrReserved.setStatus('current')
pdnAtmIfConfExtBandwidthUtilUbrAssigned = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 11, 5, 1, 1, 1, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pdnAtmIfConfExtBandwidthUtilUbrAssigned.setStatus('current')
pdnAtmIfConfExtRateShape = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 11, 5, 1, 1, 1, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(512, 46080))).setUnits('Kbps').setMaxAccess("readwrite")
if mibBuilder.loadTexts: pdnAtmIfConfExtRateShape.setStatus('current')
pdnAtmTrafficDescrParamExtTable = MibTable((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 11, 5, 1, 2), )
if mibBuilder.loadTexts: pdnAtmTrafficDescrParamExtTable.setStatus('current')
pdnAtmTrafficDescrParamExtEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 11, 5, 1, 2, 1), )
atmTrafficDescrParamEntry.registerAugmentions(("PDN-ATMEXT-MIB", "pdnAtmTrafficDescrParamExtEntry"))
pdnAtmTrafficDescrParamExtEntry.setIndexNames(*atmTrafficDescrParamEntry.getIndexNames())
if mibBuilder.loadTexts: pdnAtmTrafficDescrParamExtEntry.setStatus('current')
pdnAtmTrafficDescrParamName = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 11, 5, 1, 2, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 12))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: pdnAtmTrafficDescrParamName.setStatus('current')
pdnAtmTrafficPolicing = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 11, 5, 1, 2, 1, 2), TruthValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: pdnAtmTrafficPolicing.setStatus('current')
pdnAtmTrafficShaping = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 11, 5, 1, 2, 1, 3), TruthValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: pdnAtmTrafficShaping.setStatus('current')
pdnAal5VccExtTable = MibTable((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 11, 5, 1, 3), )
if mibBuilder.loadTexts: pdnAal5VccExtTable.setStatus('current')
pdnAal5VccExtEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 11, 5, 1, 3, 1), )
aal5VccEntry.registerAugmentions(("PDN-ATMEXT-MIB", "pdnAal5VccExtEntry"))
pdnAal5VccExtEntry.setIndexNames(*aal5VccEntry.getIndexNames())
if mibBuilder.loadTexts: pdnAal5VccExtEntry.setStatus('current')
pdnAal5VccExtOutPDUs = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 11, 5, 1, 3, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pdnAal5VccExtOutPDUs.setStatus('current')
pdnAal5VccExtInPDUs = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 11, 5, 1, 3, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pdnAal5VccExtInPDUs.setStatus('current')
pdnAtmIfConfExtExcessInvalidCellsAlarm = NotificationType((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 11, 5, 2, 0, 1)).setObjects(("IF-MIB", "ifOperStatus"), ("PDN-ATMEXT-MIB", "pdnAtmIfConfExtUnknownCellThreshold"))
if mibBuilder.loadTexts: pdnAtmIfConfExtExcessInvalidCellsAlarm.setStatus('current')
pdnAtmIfConfExtEgressLineRateAlarmSet = NotificationType((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 11, 5, 2, 0, 2)).setObjects(("IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: pdnAtmIfConfExtEgressLineRateAlarmSet.setStatus('current')
pdnAtmIfConfExtEgressLineRateAlarmClear = NotificationType((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 11, 5, 2, 0, 102)).setObjects(("IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: pdnAtmIfConfExtEgressLineRateAlarmClear.setStatus('current')
pdnAtmIfConfExtVplNoBandwidthAvail = NotificationType((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 11, 5, 2, 0, 3)).setObjects(("ATM-MIB", "atmVpCrossConnectAdminStatus"))
if mibBuilder.loadTexts: pdnAtmIfConfExtVplNoBandwidthAvail.setStatus('current')
pdnAtmIfConfExtVclNoBandwidthAvail = NotificationType((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 11, 5, 2, 0, 4)).setObjects(("ATM-MIB", "atmVcCrossConnectAdminStatus"))
if mibBuilder.loadTexts: pdnAtmIfConfExtVclNoBandwidthAvail.setStatus('current')
pdnAtmIfConfExtIngressLineRateAlarmSet = NotificationType((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 11, 5, 2, 0, 5)).setObjects(("IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: pdnAtmIfConfExtIngressLineRateAlarmSet.setStatus('current')
pdnAtmIfConfExtIngressLineRateAlarmClear = NotificationType((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 11, 5, 2, 0, 105)).setObjects(("IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: pdnAtmIfConfExtIngressLineRateAlarmClear.setStatus('current')
pdnAtmExtMibCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 11, 5, 3, 1))
pdnAtmExtMibGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 11, 5, 3, 2))
pdnAtmIfConfExtGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 11, 5, 3, 2, 1)).setObjects(("PDN-ATMEXT-MIB", "pdnAtmIfConfExtVbrRtBandwidthUtil"), ("PDN-ATMEXT-MIB", "pdnAtmIfConfExtVbrNrtBandwidthUtil"), ("PDN-ATMEXT-MIB", "pdnAtmIfConfExtHecErrorThreshold"), ("PDN-ATMEXT-MIB", "pdnAtmIfConfExtUnknownCellThreshold"), ("PDN-ATMEXT-MIB", "pdnAtmIfConfExtOcdEventThreshold"), ("PDN-ATMEXT-MIB", "pdnAtmIfConfExtBandwidthUtilCbrReserved"), ("PDN-ATMEXT-MIB", "pdnAtmIfConfExtBandwidthUtilCbrAssigned"), ("PDN-ATMEXT-MIB", "pdnAtmIfConfExtBandwidthUtilVbrRtReserved"), ("PDN-ATMEXT-MIB", "pdnAtmIfConfExtBandwidthUtilVbrRtAssigned"), ("PDN-ATMEXT-MIB", "pdnAtmIfConfExtBandwidthUtilVbrNrtReserved"), ("PDN-ATMEXT-MIB", "pdnAtmIfConfExtBandwidthUtilVbrNrtAssigned"), ("PDN-ATMEXT-MIB", "pdnAtmIfConfExtBandwidthUtilUbrReserved"), ("PDN-ATMEXT-MIB", "pdnAtmIfConfExtBandwidthUtilUbrAssigned"), ("PDN-ATMEXT-MIB", "pdnAtmIfConfExtRateShape"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    pdnAtmIfConfExtGroup = pdnAtmIfConfExtGroup.setStatus('current')
pdnAtmTrafficDescrParamExtGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 11, 5, 3, 2, 2)).setObjects(("PDN-ATMEXT-MIB", "pdnAtmTrafficDescrParamName"), ("PDN-ATMEXT-MIB", "pdnAtmTrafficPolicing"), ("PDN-ATMEXT-MIB", "pdnAtmTrafficShaping"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    pdnAtmTrafficDescrParamExtGroup = pdnAtmTrafficDescrParamExtGroup.setStatus('current')
pdnAal5VccExtGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 11, 5, 3, 2, 3)).setObjects(("PDN-ATMEXT-MIB", "pdnAal5VccExtInPDUs"), ("PDN-ATMEXT-MIB", "pdnAal5VccExtOutPDUs"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    pdnAal5VccExtGroup = pdnAal5VccExtGroup.setStatus('current')
pdnAtmExtNotificationGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 11, 5, 3, 2, 4)).setObjects(("PDN-ATMEXT-MIB", "pdnAtmIfConfExtExcessInvalidCellsAlarm"), ("PDN-ATMEXT-MIB", "pdnAtmIfConfExtEgressLineRateAlarmSet"), ("PDN-ATMEXT-MIB", "pdnAtmIfConfExtEgressLineRateAlarmClear"), ("PDN-ATMEXT-MIB", "pdnAtmIfConfExtVplNoBandwidthAvail"), ("PDN-ATMEXT-MIB", "pdnAtmIfConfExtVclNoBandwidthAvail"), ("PDN-ATMEXT-MIB", "pdnAtmIfConfExtIngressLineRateAlarmSet"), ("PDN-ATMEXT-MIB", "pdnAtmIfConfExtIngressLineRateAlarmClear"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    pdnAtmExtNotificationGroup = pdnAtmExtNotificationGroup.setStatus('current')
mibBuilder.exportSymbols("PDN-ATMEXT-MIB", pdnAtmExtMIBTrapPrefix=pdnAtmExtMIBTrapPrefix, pdnAtmIfConfExtBandwidthUtilUbrReserved=pdnAtmIfConfExtBandwidthUtilUbrReserved, pdnAtmNoClpTaggingNoScrCdvtMdcr=pdnAtmNoClpTaggingNoScrCdvtMdcr, pdnAtmIfConfExtEgressLineRateAlarmClear=pdnAtmIfConfExtEgressLineRateAlarmClear, pdnAtmIfConfExtVbrNrtBandwidthUtil=pdnAtmIfConfExtVbrNrtBandwidthUtil, pdnAtmIfConfExtBandwidthUtilCbrAssigned=pdnAtmIfConfExtBandwidthUtilCbrAssigned, pdnAtmIfConfExtBandwidthUtilVbrRtAssigned=pdnAtmIfConfExtBandwidthUtilVbrRtAssigned, pdnAtmIfConfExtExcessInvalidCellsAlarm=pdnAtmIfConfExtExcessInvalidCellsAlarm, pdnAtmIfConfExtBandwidthUtilVbrNrtAssigned=pdnAtmIfConfExtBandwidthUtilVbrNrtAssigned, pdnAtmIfConfExtUnknownCellThreshold=pdnAtmIfConfExtUnknownCellThreshold, pdnAtmIfConfExtIngressLineRateAlarmSet=pdnAtmIfConfExtIngressLineRateAlarmSet, pdnAtmIfConfExtBandwidthUtilVbrRtReserved=pdnAtmIfConfExtBandwidthUtilVbrRtReserved, pdnAtmTrafficShaping=pdnAtmTrafficShaping, pdnAal5VccExtGroup=pdnAal5VccExtGroup, pdnAtmIfConfExtEgressLineRateAlarmSet=pdnAtmIfConfExtEgressLineRateAlarmSet, pdnAtmExtNotificationGroup=pdnAtmExtNotificationGroup, pdnAtmIfConfExtEntry=pdnAtmIfConfExtEntry, pdnAtmIfConfExtOcdEventThreshold=pdnAtmIfConfExtOcdEventThreshold, pdnAtmExtMIBTrafficDescriptorTypes=pdnAtmExtMIBTrafficDescriptorTypes, pdnAtmIfConfExtTable=pdnAtmIfConfExtTable, pdnAtmExtMIBObjects=pdnAtmExtMIBObjects, pdnAtmIfConfExtRateShape=pdnAtmIfConfExtRateShape, pdnAtmIfConfExtIngressLineRateAlarmClear=pdnAtmIfConfExtIngressLineRateAlarmClear, pdnAtmIfConfExtGroup=pdnAtmIfConfExtGroup, pdnAtmIfConfExtVbrRtBandwidthUtil=pdnAtmIfConfExtVbrRtBandwidthUtil, pdnAal5VccExtTable=pdnAal5VccExtTable, pdnAtmNoClpNoScrCdvtMdcr=pdnAtmNoClpNoScrCdvtMdcr, pdnAtmExtMIBTraps=pdnAtmExtMIBTraps, pdnAtmTrafficDescrParamName=pdnAtmTrafficDescrParamName, pdnAtmIfConfExtVclNoBandwidthAvail=pdnAtmIfConfExtVclNoBandwidthAvail, pdnAtmIfConfExtHecErrorThreshold=pdnAtmIfConfExtHecErrorThreshold, pdnAal5VccExtEntry=pdnAal5VccExtEntry, pdnAtmExtMIBConformance=pdnAtmExtMIBConformance, pdnAtmIfConfExtBandwidthUtilCbrReserved=pdnAtmIfConfExtBandwidthUtilCbrReserved, pdnAtmTrafficDescrParamExtTable=pdnAtmTrafficDescrParamExtTable, pdnAal5VccExtInPDUs=pdnAal5VccExtInPDUs, pdnAtmIfConfExtBandwidthUtilUbrAssigned=pdnAtmIfConfExtBandwidthUtilUbrAssigned, pdnAtmTrafficPolicing=pdnAtmTrafficPolicing, pdnAtmExtMibGroups=pdnAtmExtMibGroups, pdnAal5VccExtOutPDUs=pdnAal5VccExtOutPDUs, PYSNMP_MODULE_ID=pdnAtmExtMIB, pdnAtmExtMIB=pdnAtmExtMIB, pdnAtmExtMibCompliances=pdnAtmExtMibCompliances, pdnAtmTrafficDescrParamExtGroup=pdnAtmTrafficDescrParamExtGroup, pdnAtmIfConfExtVplNoBandwidthAvail=pdnAtmIfConfExtVplNoBandwidthAvail, pdnAtmIfConfExtBandwidthUtilVbrNrtReserved=pdnAtmIfConfExtBandwidthUtilVbrNrtReserved, pdnAtmTrafficDescrParamExtEntry=pdnAtmTrafficDescrParamExtEntry)
