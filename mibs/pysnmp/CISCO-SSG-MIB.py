#
# PySNMP MIB module CISCO-SSG-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CISCO-SSG-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:56:10 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, SingleValueConstraint, ConstraintsIntersection, ConstraintsUnion, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "SingleValueConstraint", "ConstraintsIntersection", "ConstraintsUnion", "ValueRangeConstraint")
ciscoMgmt, = mibBuilder.importSymbols("CISCO-SMI", "ciscoMgmt")
CiscoPort, = mibBuilder.importSymbols("CISCO-TC", "CiscoPort")
InterfaceIndex, = mibBuilder.importSymbols("IF-MIB", "InterfaceIndex")
InetAddress, InetAddressType = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddress", "InetAddressType")
ModuleCompliance, NotificationGroup, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup", "ObjectGroup")
IpAddress, Counter32, iso, Gauge32, Integer32, Counter64, ObjectIdentity, ModuleIdentity, NotificationType, MibIdentifier, Bits, Unsigned32, MibScalar, MibTable, MibTableRow, MibTableColumn, TimeTicks = mibBuilder.importSymbols("SNMPv2-SMI", "IpAddress", "Counter32", "iso", "Gauge32", "Integer32", "Counter64", "ObjectIdentity", "ModuleIdentity", "NotificationType", "MibIdentifier", "Bits", "Unsigned32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "TimeTicks")
RowStatus, TextualConvention, DisplayString, TimeInterval, TruthValue, DateAndTime = mibBuilder.importSymbols("SNMPv2-TC", "RowStatus", "TextualConvention", "DisplayString", "TimeInterval", "TruthValue", "DateAndTime")
ciscoSsgMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 9, 9, 260))
ciscoSsgMIB.setRevisions(('2005-12-22 00:00', '2003-10-17 00:00', '2002-03-25 00:00',))
if mibBuilder.loadTexts: ciscoSsgMIB.setLastUpdated('200512220000Z')
if mibBuilder.loadTexts: ciscoSsgMIB.setOrganization('Cisco Systems, Inc.')
ciscoSsgMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 260, 1))
cssgCfgObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 260, 1, 1))
cssgStatsObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 260, 1, 2))
cssgService = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 260, 1, 3))
cssgExcludedAPN = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 260, 1, 4))
cssgExcludedDomain = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 260, 1, 5))
cssgTcpRedirect = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 260, 1, 6))
cssgServiceIfBinds = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 260, 1, 7))
cssgRadiusClients = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 260, 1, 8))
cssgPortMap = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 260, 1, 9))
cssgTal = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 260, 1, 10))
cssgCfgSsgEnabled = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 260, 1, 1, 1), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cssgCfgSsgEnabled.setStatus('current')
cssgCfgAutoDomainMode = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 260, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("disabled", 1), ("basic", 2), ("extended", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cssgCfgAutoDomainMode.setStatus('current')
cssgCfgLocalForwardingEnabled = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 260, 1, 1, 3), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cssgCfgLocalForwardingEnabled.setStatus('current')
cssgCfgAutoLogOffMode = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 260, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("disabled", 1), ("icmp", 2), ("arp", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cssgCfgAutoLogOffMode.setStatus('current')
cssgCfgRadiusProxyEnabled = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 260, 1, 1, 5), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cssgCfgRadiusProxyEnabled.setStatus('current')
cssgCfgTcpRedirectEnabled = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 260, 1, 1, 6), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cssgCfgTcpRedirectEnabled.setStatus('current')
cssgCfgAutoDomainNatEnabled = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 260, 1, 1, 7), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cssgCfgAutoDomainNatEnabled.setStatus('current')
cssgCfgPortBundleHostKeyEnabled = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 260, 1, 1, 8), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cssgCfgPortBundleHostKeyEnabled.setStatus('current')
cssgCfgTransPassThroughEnabled = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 260, 1, 1, 9), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cssgCfgTransPassThroughEnabled.setStatus('current')
cssgCfgAutoLogOffInterval = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 260, 1, 1, 10), TimeInterval()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cssgCfgAutoLogOffInterval.setStatus('current')
cssgCfgAutoLogOffIcmpRetries = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 260, 1, 1, 11), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)).clone(2)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cssgCfgAutoLogOffIcmpRetries.setStatus('current')
cssgCfgMaxServicesPerUser = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 260, 1, 1, 12), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 20))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cssgCfgMaxServicesPerUser.setStatus('current')
cssgCfgAccountingEnabled = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 260, 1, 1, 13), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cssgCfgAccountingEnabled.setStatus('current')
cssgCfgDefaultNetworkType = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 260, 1, 1, 14), InetAddressType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cssgCfgDefaultNetworkType.setStatus('current')
cssgCfgDefaultNetwork = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 260, 1, 1, 15), InetAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cssgCfgDefaultNetwork.setStatus('current')
cssgCfgRadiusAuthenPort = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 260, 1, 1, 16), CiscoPort()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cssgCfgRadiusAuthenPort.setStatus('current')
cssgCfgRadiusAccountingPort = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 260, 1, 1, 17), CiscoPort()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cssgCfgRadiusAccountingPort.setStatus('current')
cssgCfgRadiusFwdAcctPktsEnabled = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 260, 1, 1, 18), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cssgCfgRadiusFwdAcctPktsEnabled.setStatus('current')
cssgCfgAccountingInterval = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 260, 1, 1, 19), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(60, 2147483647))).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: cssgCfgAccountingInterval.setStatus('current')
cssgCfgTCPRedirGrpForUnAuthUsers = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 260, 1, 1, 20), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cssgCfgTCPRedirGrpForUnAuthUsers.setStatus('current')
cssgCfgTCPRedirGrpForUnAuthServ = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 260, 1, 1, 21), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cssgCfgTCPRedirGrpForUnAuthServ.setStatus('current')
cssgCfgTcpRedirGrpForSMTP = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 260, 1, 1, 22), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cssgCfgTcpRedirGrpForSMTP.setStatus('current')
cssgCfgTcpRedirGrpForInitialCapt = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 260, 1, 1, 23), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cssgCfgTcpRedirGrpForInitialCapt.setStatus('current')
cssgCfgTcpRedirGrpForAdvCapt = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 260, 1, 1, 24), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cssgCfgTcpRedirGrpForAdvCapt.setStatus('current')
cssgCfgRadiusClntRbtNotifEnabled = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 260, 1, 1, 25), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cssgCfgRadiusClntRbtNotifEnabled.setStatus('current')
cssgCfgAAAServerDownNotifEnabled = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 260, 1, 1, 26), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cssgCfgAAAServerDownNotifEnabled.setStatus('current')
cssgCfgTalEnabled = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 260, 1, 1, 27), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cssgCfgTalEnabled.setStatus('current')
cssgStatsLoginAttempts = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 260, 1, 2, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cssgStatsLoginAttempts.setStatus('current')
cssgStatsLoginsSuccessful = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 260, 1, 2, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cssgStatsLoginsSuccessful.setStatus('current')
cssgStatsActiveSessions = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 260, 1, 2, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cssgStatsActiveSessions.setStatus('current')
cssgStatsActiveHosts = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 260, 1, 2, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cssgStatsActiveHosts.setStatus('current')
cssgStatsActiveServices = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 260, 1, 2, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cssgStatsActiveServices.setStatus('current')
cssgStatsPODs = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 260, 1, 2, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cssgStatsPODs.setStatus('current')
cssgServiceTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 260, 1, 3, 1), )
if mibBuilder.loadTexts: cssgServiceTable.setStatus('current')
cssgServiceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 260, 1, 3, 1, 1), ).setIndexNames((0, "CISCO-SSG-MIB", "cssgServiceName"))
if mibBuilder.loadTexts: cssgServiceEntry.setStatus('current')
cssgServiceName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 260, 1, 3, 1, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32)))
if mibBuilder.loadTexts: cssgServiceName.setStatus('current')
cssgServiceMode = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 260, 1, 3, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("unknown", 1), ("concurrent", 2), ("sequential", 3))).clone('concurrent')).setMaxAccess("readonly")
if mibBuilder.loadTexts: cssgServiceMode.setStatus('current')
cssgServiceType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 260, 1, 3, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("unknown", 1), ("passthrough", 2), ("tunnel", 3), ("proxy", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cssgServiceType.setStatus('current')
cssgServiceIdleTimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 260, 1, 3, 1, 1, 4), Unsigned32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: cssgServiceIdleTimeout.setStatus('current')
cssgServiceSessionTimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 260, 1, 3, 1, 1, 5), Unsigned32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: cssgServiceSessionTimeout.setStatus('current')
cssgServiceActiveSessions = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 260, 1, 3, 1, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cssgServiceActiveSessions.setStatus('current')
cssgServiceDNSPrimaryIpType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 260, 1, 3, 1, 1, 7), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cssgServiceDNSPrimaryIpType.setStatus('current')
cssgServiceDNSPrimary = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 260, 1, 3, 1, 1, 8), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cssgServiceDNSPrimary.setStatus('current')
cssgServiceDNSSecondaryIpType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 260, 1, 3, 1, 1, 9), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cssgServiceDNSSecondaryIpType.setStatus('current')
cssgServiceDNSSecondary = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 260, 1, 3, 1, 1, 10), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cssgServiceDNSSecondary.setStatus('current')
cssgServiceUpstreamQOSEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 260, 1, 3, 1, 1, 11), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cssgServiceUpstreamQOSEnabled.setStatus('current')
cssgServiceDownStreamQOSEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 260, 1, 3, 1, 1, 12), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cssgServiceDownStreamQOSEnabled.setStatus('current')
cssgServiceOpenGarden = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 260, 1, 3, 1, 1, 13), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cssgServiceOpenGarden.setStatus('current')
cssgServicePrepaid = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 260, 1, 3, 1, 1, 14), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cssgServicePrepaid.setStatus('current')
cssgServiceRouteTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 260, 1, 3, 2), )
if mibBuilder.loadTexts: cssgServiceRouteTable.setStatus('current')
cssgServiceRouteEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 260, 1, 3, 2, 1), ).setIndexNames((0, "CISCO-SSG-MIB", "cssgServiceName"), (0, "CISCO-SSG-MIB", "cssgServiceRouteType"), (0, "CISCO-SSG-MIB", "cssgServiceRouteAddr"), (0, "CISCO-SSG-MIB", "cssgServiceRouteMaskType"), (0, "CISCO-SSG-MIB", "cssgServiceRouteMask"))
if mibBuilder.loadTexts: cssgServiceRouteEntry.setStatus('current')
cssgServiceRouteType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 260, 1, 3, 2, 1, 1), InetAddressType())
if mibBuilder.loadTexts: cssgServiceRouteType.setStatus('current')
cssgServiceRouteAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 260, 1, 3, 2, 1, 2), InetAddress())
if mibBuilder.loadTexts: cssgServiceRouteAddr.setStatus('current')
cssgServiceRouteMaskType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 260, 1, 3, 2, 1, 3), InetAddressType())
if mibBuilder.loadTexts: cssgServiceRouteMaskType.setStatus('current')
cssgServiceRouteMask = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 260, 1, 3, 2, 1, 4), InetAddress())
if mibBuilder.loadTexts: cssgServiceRouteMask.setStatus('current')
cssgServiceRoutePermission = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 260, 1, 3, 2, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("permit", 1), ("deny", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cssgServiceRoutePermission.setStatus('current')
cssgExcludedAPNTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 260, 1, 4, 1), )
if mibBuilder.loadTexts: cssgExcludedAPNTable.setStatus('current')
cssgExcludedAPNEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 260, 1, 4, 1, 1), ).setIndexNames((0, "CISCO-SSG-MIB", "cssgExcludedAPNName"))
if mibBuilder.loadTexts: cssgExcludedAPNEntry.setStatus('current')
cssgExcludedAPNName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 260, 1, 4, 1, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32)))
if mibBuilder.loadTexts: cssgExcludedAPNName.setStatus('current')
cssgExcludedAPNRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 260, 1, 4, 1, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cssgExcludedAPNRowStatus.setStatus('current')
cssgExcludedDomainTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 260, 1, 5, 1), )
if mibBuilder.loadTexts: cssgExcludedDomainTable.setStatus('current')
cssgExcludedDomainEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 260, 1, 5, 1, 1), ).setIndexNames((0, "CISCO-SSG-MIB", "cssgExcludedDomainName"))
if mibBuilder.loadTexts: cssgExcludedDomainEntry.setStatus('current')
cssgExcludedDomainName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 260, 1, 5, 1, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32)))
if mibBuilder.loadTexts: cssgExcludedDomainName.setStatus('current')
cssgExcludedDomainRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 260, 1, 5, 1, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cssgExcludedDomainRowStatus.setStatus('current')
cssgServiceIfBindTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 260, 1, 7, 1), )
if mibBuilder.loadTexts: cssgServiceIfBindTable.setStatus('current')
cssgServiceIfBindEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 260, 1, 7, 1, 1), ).setIndexNames((0, "CISCO-SSG-MIB", "cssgServiceName"))
if mibBuilder.loadTexts: cssgServiceIfBindEntry.setStatus('current')
cssgServiceIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 260, 1, 7, 1, 1, 1), InterfaceIndex()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cssgServiceIfIndex.setStatus('current')
cssgServiceIfRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 260, 1, 7, 1, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cssgServiceIfRowStatus.setStatus('current')
cssgTcpRedirectGrpTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 260, 1, 6, 1), )
if mibBuilder.loadTexts: cssgTcpRedirectGrpTable.setStatus('current')
cssgTcpRedirectGrpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 260, 1, 6, 1, 1), ).setIndexNames((0, "CISCO-SSG-MIB", "cssgTcpRedirectGrpName"), (0, "CISCO-SSG-MIB", "cssgTcpRedirectGrpServerAddrType"), (0, "CISCO-SSG-MIB", "cssgTcpRedirectGrpServerAddr"), (0, "CISCO-SSG-MIB", "cssgTcpRedirectGrpServerPort"))
if mibBuilder.loadTexts: cssgTcpRedirectGrpEntry.setStatus('current')
cssgTcpRedirectGrpName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 260, 1, 6, 1, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32)))
if mibBuilder.loadTexts: cssgTcpRedirectGrpName.setStatus('current')
cssgTcpRedirectGrpServerAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 260, 1, 6, 1, 1, 2), InetAddressType())
if mibBuilder.loadTexts: cssgTcpRedirectGrpServerAddrType.setStatus('current')
cssgTcpRedirectGrpServerAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 260, 1, 6, 1, 1, 3), InetAddress())
if mibBuilder.loadTexts: cssgTcpRedirectGrpServerAddr.setStatus('current')
cssgTcpRedirectGrpServerPort = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 260, 1, 6, 1, 1, 4), CiscoPort())
if mibBuilder.loadTexts: cssgTcpRedirectGrpServerPort.setStatus('current')
cssgTcpRedirectGrpRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 260, 1, 6, 1, 1, 5), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cssgTcpRedirectGrpRowStatus.setStatus('current')
cssgNetworkGrpTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 260, 1, 6, 2), )
if mibBuilder.loadTexts: cssgNetworkGrpTable.setStatus('current')
cssgNetworkGrpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 260, 1, 6, 2, 1), ).setIndexNames((0, "CISCO-SSG-MIB", "cssgNetworkGrpName"), (0, "CISCO-SSG-MIB", "cssgNetworkGrpNetIpType"), (0, "CISCO-SSG-MIB", "cssgNetworkGrpNetIpAddr"), (0, "CISCO-SSG-MIB", "cssgNetworkGrpNetMaskType"), (0, "CISCO-SSG-MIB", "cssgNetworkGrpNetMask"))
if mibBuilder.loadTexts: cssgNetworkGrpEntry.setStatus('current')
cssgNetworkGrpName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 260, 1, 6, 2, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32)))
if mibBuilder.loadTexts: cssgNetworkGrpName.setStatus('current')
cssgNetworkGrpNetIpType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 260, 1, 6, 2, 1, 2), InetAddressType())
if mibBuilder.loadTexts: cssgNetworkGrpNetIpType.setStatus('current')
cssgNetworkGrpNetIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 260, 1, 6, 2, 1, 3), InetAddress())
if mibBuilder.loadTexts: cssgNetworkGrpNetIpAddr.setStatus('current')
cssgNetworkGrpNetMaskType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 260, 1, 6, 2, 1, 4), InetAddressType())
if mibBuilder.loadTexts: cssgNetworkGrpNetMaskType.setStatus('current')
cssgNetworkGrpNetMask = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 260, 1, 6, 2, 1, 5), InetAddress())
if mibBuilder.loadTexts: cssgNetworkGrpNetMask.setStatus('current')
cssgNetworkGrpNetRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 260, 1, 6, 2, 1, 6), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cssgNetworkGrpNetRowStatus.setStatus('current')
cssgPortGrpTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 260, 1, 6, 3), )
if mibBuilder.loadTexts: cssgPortGrpTable.setStatus('current')
cssgPortGrpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 260, 1, 6, 3, 1), ).setIndexNames((0, "CISCO-SSG-MIB", "cssgPortGrpName"), (0, "CISCO-SSG-MIB", "cssgPortGrpPortNo"))
if mibBuilder.loadTexts: cssgPortGrpEntry.setStatus('current')
cssgPortGrpName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 260, 1, 6, 3, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32)))
if mibBuilder.loadTexts: cssgPortGrpName.setStatus('current')
cssgPortGrpPortNo = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 260, 1, 6, 3, 1, 2), CiscoPort())
if mibBuilder.loadTexts: cssgPortGrpPortNo.setStatus('current')
cssgPortGrpPortRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 260, 1, 6, 3, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cssgPortGrpPortRowStatus.setStatus('current')
cssgTcpRedirNetworkGrpMapTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 260, 1, 6, 4), )
if mibBuilder.loadTexts: cssgTcpRedirNetworkGrpMapTable.setStatus('current')
cssgTcpRedirNetworkGrpMapEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 260, 1, 6, 4, 1), ).setIndexNames((0, "CISCO-SSG-MIB", "cssgTcpRedirectGrpName"))
if mibBuilder.loadTexts: cssgTcpRedirNetworkGrpMapEntry.setStatus('current')
cssgTcpRedirNetworkMapGrpName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 260, 1, 6, 4, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cssgTcpRedirNetworkMapGrpName.setStatus('current')
cssgTcpRedirNetworkGrpMapRowStat = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 260, 1, 6, 4, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cssgTcpRedirNetworkGrpMapRowStat.setStatus('current')
cssgTcpRedirPortGrpMapTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 260, 1, 6, 5), )
if mibBuilder.loadTexts: cssgTcpRedirPortGrpMapTable.setStatus('current')
cssgTcpRedirPortGrpMapEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 260, 1, 6, 5, 1), ).setIndexNames((0, "CISCO-SSG-MIB", "cssgTcpRedirectGrpName"))
if mibBuilder.loadTexts: cssgTcpRedirPortGrpMapEntry.setStatus('current')
cssgTcpRedirPortMapGrpName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 260, 1, 6, 5, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cssgTcpRedirPortMapGrpName.setStatus('current')
cssgTcpRedirPortGrpMapRowStat = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 260, 1, 6, 5, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cssgTcpRedirPortGrpMapRowStat.setStatus('current')
cssgTcpRedirPortNoMapTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 260, 1, 6, 6), )
if mibBuilder.loadTexts: cssgTcpRedirPortNoMapTable.setStatus('current')
cssgTcpRedirPortNoMapEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 260, 1, 6, 6, 1), ).setIndexNames((0, "CISCO-SSG-MIB", "cssgTcpRedirectGrpName"))
if mibBuilder.loadTexts: cssgTcpRedirPortNoMapEntry.setStatus('current')
cssgTcpRedirPortNo = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 260, 1, 6, 6, 1, 1), CiscoPort()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cssgTcpRedirPortNo.setStatus('current')
cssgTcpRedirPortNoMapRowStat = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 260, 1, 6, 6, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cssgTcpRedirPortNoMapRowStat.setStatus('current')
cssgRadiusClientTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 260, 1, 8, 1), )
if mibBuilder.loadTexts: cssgRadiusClientTable.setStatus('current')
cssgRadiusClientEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 260, 1, 8, 1, 1), ).setIndexNames((0, "CISCO-SSG-MIB", "cssgRadiusClientAddrType"), (0, "CISCO-SSG-MIB", "cssgRadiusClientAddr"))
if mibBuilder.loadTexts: cssgRadiusClientEntry.setStatus('current')
cssgRadiusClientAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 260, 1, 8, 1, 1, 1), InetAddressType())
if mibBuilder.loadTexts: cssgRadiusClientAddrType.setStatus('current')
cssgRadiusClientAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 260, 1, 8, 1, 1, 2), InetAddress())
if mibBuilder.loadTexts: cssgRadiusClientAddr.setStatus('current')
cssgRadiusClientRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 260, 1, 8, 1, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cssgRadiusClientRowStatus.setStatus('current')
cssgPortMapLength = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 260, 1, 9, 1), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cssgPortMapLength.setStatus('current')
cssgPortMapTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 260, 1, 9, 2), )
if mibBuilder.loadTexts: cssgPortMapTable.setStatus('current')
cssgPortMapEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 260, 1, 9, 2, 1), ).setIndexNames((0, "CISCO-SSG-MIB", "cssgPortMapSourceIpType"), (0, "CISCO-SSG-MIB", "cssgPortMapSourceIp"))
if mibBuilder.loadTexts: cssgPortMapEntry.setStatus('current')
cssgPortMapSourceIpType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 260, 1, 9, 2, 1, 1), InetAddressType())
if mibBuilder.loadTexts: cssgPortMapSourceIpType.setStatus('current')
cssgPortMapSourceIp = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 260, 1, 9, 2, 1, 2), InetAddress())
if mibBuilder.loadTexts: cssgPortMapSourceIp.setStatus('current')
cssgPortMapPortRangeFrom = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 260, 1, 9, 2, 1, 3), CiscoPort()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cssgPortMapPortRangeFrom.setStatus('current')
cssgPortMapPortRangeTo = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 260, 1, 9, 2, 1, 4), CiscoPort()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cssgPortMapPortRangeTo.setStatus('current')
cssgPortMapRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 260, 1, 9, 2, 1, 5), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cssgPortMapRowStatus.setStatus('current')
cssgTalWaitingForAuthUsers = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 260, 1, 10, 1), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cssgTalWaitingForAuthUsers.setStatus('current')
cssgTalUnidentifiedUsers = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 260, 1, 10, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cssgTalUnidentifiedUsers.setStatus('current')
cssgTalSuspectUsers = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 260, 1, 10, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cssgTalSuspectUsers.setStatus('current')
cssgTalPassthroughUsers = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 260, 1, 10, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cssgTalPassthroughUsers.setStatus('current')
cssgTalMaxAuthRate = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 260, 1, 10, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cssgTalMaxAuthRate.setStatus('current')
cssgTalMaxAuthRateTimestamp = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 260, 1, 10, 6), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cssgTalMaxAuthRateTimestamp.setStatus('current')
cssgTalMinAuthRate = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 260, 1, 10, 7), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cssgTalMinAuthRate.setStatus('current')
cssgTalMinAuthRateTimestamp = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 260, 1, 10, 8), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cssgTalMinAuthRateTimestamp.setStatus('current')
cssgTalCurrentAuthRate = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 260, 1, 10, 9), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cssgTalCurrentAuthRate.setStatus('current')
cssgTalCurrentAuthRateTimestamp = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 260, 1, 10, 10), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cssgTalCurrentAuthRateTimestamp.setStatus('current')
cssgTalResetAuthRates = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 260, 1, 10, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("unknown", 1), ("reset", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cssgTalResetAuthRates.setStatus('current')
cssgTalMaxPendingAuthReqs = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 260, 1, 10, 12), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cssgTalMaxPendingAuthReqs.setStatus('current')
cssgTalMaxAuthReqsRate = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 260, 1, 10, 13), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cssgTalMaxAuthReqsRate.setStatus('current')
cssgTalDropPakDuringAuthorization = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 260, 1, 10, 14), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cssgTalDropPakDuringAuthorization.setStatus('current')
cssgTalUnidentifiedUserAllowTraff = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 260, 1, 10, 15), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cssgTalUnidentifiedUserAllowTraff.setStatus('current')
cssgTalMaxSuspectUsers = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 260, 1, 10, 16), Unsigned32().clone(5000)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cssgTalMaxSuspectUsers.setStatus('current')
cssgTalSuspectUserTimeout = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 260, 1, 10, 17), Unsigned32().clone(60)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cssgTalSuspectUserTimeout.setStatus('current')
cssgTalUnidentifiedUserTimeout = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 260, 1, 10, 18), Unsigned32().clone(10)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cssgTalUnidentifiedUserTimeout.setStatus('current')
cssgTalUserInfoTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 260, 1, 10, 19), )
if mibBuilder.loadTexts: cssgTalUserInfoTable.setStatus('current')
cssgTalUserInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 260, 1, 10, 19, 1), ).setIndexNames((0, "CISCO-SSG-MIB", "cssgTalUserIPAddressType"), (0, "CISCO-SSG-MIB", "cssgTalUserIPAddress"))
if mibBuilder.loadTexts: cssgTalUserInfoEntry.setStatus('current')
cssgTalUserIPAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 260, 1, 10, 19, 1, 1), InetAddressType())
if mibBuilder.loadTexts: cssgTalUserIPAddressType.setStatus('current')
cssgTalUserIPAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 260, 1, 10, 19, 1, 2), InetAddress())
if mibBuilder.loadTexts: cssgTalUserIPAddress.setStatus('current')
cssgTalUserState = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 260, 1, 10, 19, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("other", 1), ("authorizing", 2), ("unidentified", 3), ("suspect", 4), ("passthrough", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cssgTalUserState.setStatus('current')
ciscoSsgMIBNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 260, 0))
ciscoSsgRadiusClientReboot = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 260, 0, 1))
if mibBuilder.loadTexts: ciscoSsgRadiusClientReboot.setStatus('current')
ciscoSsgRadiusAAAServerDown = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 260, 0, 2))
if mibBuilder.loadTexts: ciscoSsgRadiusAAAServerDown.setStatus('current')
ciscoSsgMIBConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 260, 3))
ciscoSsgMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 260, 3, 1))
ciscoSsgMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 260, 3, 2))
ciscoSsgMIBCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 260, 3, 1, 1)).setObjects(("CISCO-SSG-MIB", "ciscoSsgCfgGroup"), ("CISCO-SSG-MIB", "ciscoSsgStatsGroup"), ("CISCO-SSG-MIB", "ciscoSsgServicesGroup"), ("CISCO-SSG-MIB", "ciscoSsgExclusionsGroup"), ("CISCO-SSG-MIB", "ciscoSsgTcpRedirectGroup"), ("CISCO-SSG-MIB", "ciscoSsgServiceInterfaceGroup"), ("CISCO-SSG-MIB", "ciscoSsgRadiusClientsGroup"), ("CISCO-SSG-MIB", "ciscoSsgPortMapGroup"), ("CISCO-SSG-MIB", "ciscoSsgNotificationGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoSsgMIBCompliance = ciscoSsgMIBCompliance.setStatus('deprecated')
ciscoSsgMIBComplianceRev1 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 260, 3, 1, 2)).setObjects(("CISCO-SSG-MIB", "ciscoSsgCfgGroupRev1"), ("CISCO-SSG-MIB", "ciscoSsgStatsGroup"), ("CISCO-SSG-MIB", "ciscoSsgServicesGroup"), ("CISCO-SSG-MIB", "ciscoSsgExclusionsGroup"), ("CISCO-SSG-MIB", "ciscoSsgTcpRedirectGroup"), ("CISCO-SSG-MIB", "ciscoSsgServiceInterfaceGroup"), ("CISCO-SSG-MIB", "ciscoSsgRadiusClientsGroup"), ("CISCO-SSG-MIB", "ciscoSsgPortMapGroup"), ("CISCO-SSG-MIB", "ciscoSsgNotificationGroup"), ("CISCO-SSG-MIB", "ciscoSsgTalUserInfoGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoSsgMIBComplianceRev1 = ciscoSsgMIBComplianceRev1.setStatus('current')
ciscoSsgCfgGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 260, 3, 2, 1)).setObjects(("CISCO-SSG-MIB", "cssgCfgSsgEnabled"), ("CISCO-SSG-MIB", "cssgCfgAutoDomainMode"), ("CISCO-SSG-MIB", "cssgCfgLocalForwardingEnabled"), ("CISCO-SSG-MIB", "cssgCfgAutoLogOffMode"), ("CISCO-SSG-MIB", "cssgCfgRadiusProxyEnabled"), ("CISCO-SSG-MIB", "cssgCfgTcpRedirectEnabled"), ("CISCO-SSG-MIB", "cssgCfgAutoDomainNatEnabled"), ("CISCO-SSG-MIB", "cssgCfgPortBundleHostKeyEnabled"), ("CISCO-SSG-MIB", "cssgCfgTransPassThroughEnabled"), ("CISCO-SSG-MIB", "cssgCfgAutoLogOffInterval"), ("CISCO-SSG-MIB", "cssgCfgAutoLogOffIcmpRetries"), ("CISCO-SSG-MIB", "cssgCfgMaxServicesPerUser"), ("CISCO-SSG-MIB", "cssgCfgAccountingEnabled"), ("CISCO-SSG-MIB", "cssgCfgDefaultNetworkType"), ("CISCO-SSG-MIB", "cssgCfgDefaultNetwork"), ("CISCO-SSG-MIB", "cssgCfgRadiusAuthenPort"), ("CISCO-SSG-MIB", "cssgCfgRadiusAccountingPort"), ("CISCO-SSG-MIB", "cssgCfgRadiusFwdAcctPktsEnabled"), ("CISCO-SSG-MIB", "cssgCfgAccountingInterval"), ("CISCO-SSG-MIB", "cssgCfgTCPRedirGrpForUnAuthUsers"), ("CISCO-SSG-MIB", "cssgCfgTCPRedirGrpForUnAuthServ"), ("CISCO-SSG-MIB", "cssgCfgTcpRedirGrpForSMTP"), ("CISCO-SSG-MIB", "cssgCfgTcpRedirGrpForInitialCapt"), ("CISCO-SSG-MIB", "cssgCfgTcpRedirGrpForAdvCapt"), ("CISCO-SSG-MIB", "cssgCfgRadiusClntRbtNotifEnabled"), ("CISCO-SSG-MIB", "cssgCfgAAAServerDownNotifEnabled"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoSsgCfgGroup = ciscoSsgCfgGroup.setStatus('deprecated')
ciscoSsgStatsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 260, 3, 2, 2)).setObjects(("CISCO-SSG-MIB", "cssgStatsLoginAttempts"), ("CISCO-SSG-MIB", "cssgStatsLoginsSuccessful"), ("CISCO-SSG-MIB", "cssgStatsActiveSessions"), ("CISCO-SSG-MIB", "cssgStatsActiveHosts"), ("CISCO-SSG-MIB", "cssgStatsActiveServices"), ("CISCO-SSG-MIB", "cssgStatsPODs"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoSsgStatsGroup = ciscoSsgStatsGroup.setStatus('current')
ciscoSsgServicesGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 260, 3, 2, 3)).setObjects(("CISCO-SSG-MIB", "cssgServiceMode"), ("CISCO-SSG-MIB", "cssgServiceType"), ("CISCO-SSG-MIB", "cssgServiceIdleTimeout"), ("CISCO-SSG-MIB", "cssgServiceSessionTimeout"), ("CISCO-SSG-MIB", "cssgServiceActiveSessions"), ("CISCO-SSG-MIB", "cssgServiceDNSPrimaryIpType"), ("CISCO-SSG-MIB", "cssgServiceDNSPrimary"), ("CISCO-SSG-MIB", "cssgServiceDNSSecondaryIpType"), ("CISCO-SSG-MIB", "cssgServiceDNSSecondary"), ("CISCO-SSG-MIB", "cssgServiceUpstreamQOSEnabled"), ("CISCO-SSG-MIB", "cssgServiceDownStreamQOSEnabled"), ("CISCO-SSG-MIB", "cssgServiceOpenGarden"), ("CISCO-SSG-MIB", "cssgServicePrepaid"), ("CISCO-SSG-MIB", "cssgServiceRoutePermission"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoSsgServicesGroup = ciscoSsgServicesGroup.setStatus('current')
ciscoSsgExclusionsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 260, 3, 2, 4)).setObjects(("CISCO-SSG-MIB", "cssgExcludedAPNRowStatus"), ("CISCO-SSG-MIB", "cssgExcludedDomainRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoSsgExclusionsGroup = ciscoSsgExclusionsGroup.setStatus('current')
ciscoSsgTcpRedirectGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 260, 3, 2, 5)).setObjects(("CISCO-SSG-MIB", "cssgTcpRedirectGrpRowStatus"), ("CISCO-SSG-MIB", "cssgNetworkGrpNetRowStatus"), ("CISCO-SSG-MIB", "cssgPortGrpPortRowStatus"), ("CISCO-SSG-MIB", "cssgTcpRedirNetworkMapGrpName"), ("CISCO-SSG-MIB", "cssgTcpRedirNetworkGrpMapRowStat"), ("CISCO-SSG-MIB", "cssgTcpRedirPortMapGrpName"), ("CISCO-SSG-MIB", "cssgTcpRedirPortGrpMapRowStat"), ("CISCO-SSG-MIB", "cssgTcpRedirPortNo"), ("CISCO-SSG-MIB", "cssgTcpRedirPortNoMapRowStat"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoSsgTcpRedirectGroup = ciscoSsgTcpRedirectGroup.setStatus('current')
ciscoSsgServiceInterfaceGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 260, 3, 2, 6)).setObjects(("CISCO-SSG-MIB", "cssgServiceIfIndex"), ("CISCO-SSG-MIB", "cssgServiceIfRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoSsgServiceInterfaceGroup = ciscoSsgServiceInterfaceGroup.setStatus('current')
ciscoSsgRadiusClientsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 260, 3, 2, 7)).setObjects(("CISCO-SSG-MIB", "cssgRadiusClientRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoSsgRadiusClientsGroup = ciscoSsgRadiusClientsGroup.setStatus('current')
ciscoSsgPortMapGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 260, 3, 2, 8)).setObjects(("CISCO-SSG-MIB", "cssgPortMapLength"), ("CISCO-SSG-MIB", "cssgPortMapPortRangeFrom"), ("CISCO-SSG-MIB", "cssgPortMapPortRangeTo"), ("CISCO-SSG-MIB", "cssgPortMapRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoSsgPortMapGroup = ciscoSsgPortMapGroup.setStatus('current')
ciscoSsgNotificationGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 9, 9, 260, 3, 2, 9)).setObjects(("CISCO-SSG-MIB", "ciscoSsgRadiusClientReboot"), ("CISCO-SSG-MIB", "ciscoSsgRadiusAAAServerDown"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoSsgNotificationGroup = ciscoSsgNotificationGroup.setStatus('current')
ciscoSsgCfgGroupRev1 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 260, 3, 2, 10)).setObjects(("CISCO-SSG-MIB", "cssgCfgSsgEnabled"), ("CISCO-SSG-MIB", "cssgCfgAutoDomainMode"), ("CISCO-SSG-MIB", "cssgCfgLocalForwardingEnabled"), ("CISCO-SSG-MIB", "cssgCfgAutoLogOffMode"), ("CISCO-SSG-MIB", "cssgCfgRadiusProxyEnabled"), ("CISCO-SSG-MIB", "cssgCfgTcpRedirectEnabled"), ("CISCO-SSG-MIB", "cssgCfgAutoDomainNatEnabled"), ("CISCO-SSG-MIB", "cssgCfgPortBundleHostKeyEnabled"), ("CISCO-SSG-MIB", "cssgCfgTransPassThroughEnabled"), ("CISCO-SSG-MIB", "cssgCfgAutoLogOffInterval"), ("CISCO-SSG-MIB", "cssgCfgAutoLogOffIcmpRetries"), ("CISCO-SSG-MIB", "cssgCfgMaxServicesPerUser"), ("CISCO-SSG-MIB", "cssgCfgAccountingEnabled"), ("CISCO-SSG-MIB", "cssgCfgDefaultNetworkType"), ("CISCO-SSG-MIB", "cssgCfgDefaultNetwork"), ("CISCO-SSG-MIB", "cssgCfgRadiusAuthenPort"), ("CISCO-SSG-MIB", "cssgCfgRadiusAccountingPort"), ("CISCO-SSG-MIB", "cssgCfgRadiusFwdAcctPktsEnabled"), ("CISCO-SSG-MIB", "cssgCfgAccountingInterval"), ("CISCO-SSG-MIB", "cssgCfgTCPRedirGrpForUnAuthUsers"), ("CISCO-SSG-MIB", "cssgCfgTCPRedirGrpForUnAuthServ"), ("CISCO-SSG-MIB", "cssgCfgTcpRedirGrpForSMTP"), ("CISCO-SSG-MIB", "cssgCfgTcpRedirGrpForInitialCapt"), ("CISCO-SSG-MIB", "cssgCfgTcpRedirGrpForAdvCapt"), ("CISCO-SSG-MIB", "cssgCfgRadiusClntRbtNotifEnabled"), ("CISCO-SSG-MIB", "cssgCfgAAAServerDownNotifEnabled"), ("CISCO-SSG-MIB", "cssgCfgTalEnabled"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoSsgCfgGroupRev1 = ciscoSsgCfgGroupRev1.setStatus('current')
ciscoSsgTalUserInfoGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 260, 3, 2, 11)).setObjects(("CISCO-SSG-MIB", "cssgTalWaitingForAuthUsers"), ("CISCO-SSG-MIB", "cssgTalUnidentifiedUsers"), ("CISCO-SSG-MIB", "cssgTalSuspectUsers"), ("CISCO-SSG-MIB", "cssgTalPassthroughUsers"), ("CISCO-SSG-MIB", "cssgTalMaxAuthRate"), ("CISCO-SSG-MIB", "cssgTalMaxAuthRateTimestamp"), ("CISCO-SSG-MIB", "cssgTalMinAuthRate"), ("CISCO-SSG-MIB", "cssgTalMinAuthRateTimestamp"), ("CISCO-SSG-MIB", "cssgTalCurrentAuthRate"), ("CISCO-SSG-MIB", "cssgTalCurrentAuthRateTimestamp"), ("CISCO-SSG-MIB", "cssgTalResetAuthRates"), ("CISCO-SSG-MIB", "cssgTalMaxPendingAuthReqs"), ("CISCO-SSG-MIB", "cssgTalMaxAuthReqsRate"), ("CISCO-SSG-MIB", "cssgTalDropPakDuringAuthorization"), ("CISCO-SSG-MIB", "cssgTalUnidentifiedUserAllowTraff"), ("CISCO-SSG-MIB", "cssgTalMaxSuspectUsers"), ("CISCO-SSG-MIB", "cssgTalSuspectUserTimeout"), ("CISCO-SSG-MIB", "cssgTalUnidentifiedUserTimeout"), ("CISCO-SSG-MIB", "cssgTalUserState"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoSsgTalUserInfoGroup = ciscoSsgTalUserInfoGroup.setStatus('current')
mibBuilder.exportSymbols("CISCO-SSG-MIB", cssgExcludedDomainRowStatus=cssgExcludedDomainRowStatus, cssgTalDropPakDuringAuthorization=cssgTalDropPakDuringAuthorization, cssgPortMapSourceIp=cssgPortMapSourceIp, cssgCfgDefaultNetworkType=cssgCfgDefaultNetworkType, cssgTalMaxAuthReqsRate=cssgTalMaxAuthReqsRate, PYSNMP_MODULE_ID=ciscoSsgMIB, cssgRadiusClientTable=cssgRadiusClientTable, cssgPortMapLength=cssgPortMapLength, cssgTalUnidentifiedUserAllowTraff=cssgTalUnidentifiedUserAllowTraff, cssgTalMaxSuspectUsers=cssgTalMaxSuspectUsers, cssgCfgTcpRedirGrpForSMTP=cssgCfgTcpRedirGrpForSMTP, cssgPortMapTable=cssgPortMapTable, cssgExcludedDomain=cssgExcludedDomain, cssgTalUnidentifiedUserTimeout=cssgTalUnidentifiedUserTimeout, cssgServiceDNSPrimaryIpType=cssgServiceDNSPrimaryIpType, cssgTcpRedirNetworkGrpMapEntry=cssgTcpRedirNetworkGrpMapEntry, cssgServiceTable=cssgServiceTable, cssgTalUserIPAddressType=cssgTalUserIPAddressType, cssgNetworkGrpEntry=cssgNetworkGrpEntry, cssgRadiusClientEntry=cssgRadiusClientEntry, cssgTalUserState=cssgTalUserState, cssgStatsActiveSessions=cssgStatsActiveSessions, ciscoSsgCfgGroupRev1=ciscoSsgCfgGroupRev1, cssgStatsObjects=cssgStatsObjects, cssgCfgRadiusProxyEnabled=cssgCfgRadiusProxyEnabled, cssgServiceRouteAddr=cssgServiceRouteAddr, cssgRadiusClientAddrType=cssgRadiusClientAddrType, cssgCfgAutoDomainMode=cssgCfgAutoDomainMode, cssgCfgRadiusAccountingPort=cssgCfgRadiusAccountingPort, ciscoSsgNotificationGroup=ciscoSsgNotificationGroup, ciscoSsgServicesGroup=ciscoSsgServicesGroup, cssgServiceRoutePermission=cssgServiceRoutePermission, cssgTcpRedirectGrpRowStatus=cssgTcpRedirectGrpRowStatus, cssgServiceName=cssgServiceName, ciscoSsgMIB=ciscoSsgMIB, cssgNetworkGrpTable=cssgNetworkGrpTable, cssgServiceActiveSessions=cssgServiceActiveSessions, cssgServiceOpenGarden=cssgServiceOpenGarden, cssgCfgSsgEnabled=cssgCfgSsgEnabled, ciscoSsgPortMapGroup=ciscoSsgPortMapGroup, cssgServiceRouteTable=cssgServiceRouteTable, cssgCfgRadiusFwdAcctPktsEnabled=cssgCfgRadiusFwdAcctPktsEnabled, ciscoSsgMIBCompliance=ciscoSsgMIBCompliance, cssgPortMapPortRangeFrom=cssgPortMapPortRangeFrom, cssgExcludedDomainEntry=cssgExcludedDomainEntry, cssgTcpRedirNetworkGrpMapTable=cssgTcpRedirNetworkGrpMapTable, cssgServiceSessionTimeout=cssgServiceSessionTimeout, cssgPortGrpName=cssgPortGrpName, cssgTalMinAuthRate=cssgTalMinAuthRate, cssgExcludedDomainTable=cssgExcludedDomainTable, cssgTcpRedirectGrpServerAddrType=cssgTcpRedirectGrpServerAddrType, cssgTalUserIPAddress=cssgTalUserIPAddress, cssgServiceIfRowStatus=cssgServiceIfRowStatus, ciscoSsgServiceInterfaceGroup=ciscoSsgServiceInterfaceGroup, cssgTcpRedirectGrpServerPort=cssgTcpRedirectGrpServerPort, ciscoSsgExclusionsGroup=ciscoSsgExclusionsGroup, cssgTalUserInfoEntry=cssgTalUserInfoEntry, cssgPortGrpTable=cssgPortGrpTable, cssgNetworkGrpNetIpType=cssgNetworkGrpNetIpType, cssgTalSuspectUsers=cssgTalSuspectUsers, cssgCfgTCPRedirGrpForUnAuthServ=cssgCfgTCPRedirGrpForUnAuthServ, cssgServiceDNSSecondaryIpType=cssgServiceDNSSecondaryIpType, cssgServiceIfBindTable=cssgServiceIfBindTable, cssgTalPassthroughUsers=cssgTalPassthroughUsers, ciscoSsgStatsGroup=ciscoSsgStatsGroup, cssgNetworkGrpNetMaskType=cssgNetworkGrpNetMaskType, cssgTal=cssgTal, cssgTcpRedirectGrpName=cssgTcpRedirectGrpName, ciscoSsgMIBObjects=ciscoSsgMIBObjects, cssgTalUserInfoTable=cssgTalUserInfoTable, cssgServiceType=cssgServiceType, cssgTalSuspectUserTimeout=cssgTalSuspectUserTimeout, cssgCfgTalEnabled=cssgCfgTalEnabled, cssgServiceUpstreamQOSEnabled=cssgServiceUpstreamQOSEnabled, cssgTalMaxAuthRateTimestamp=cssgTalMaxAuthRateTimestamp, cssgTcpRedirPortNoMapEntry=cssgTcpRedirPortNoMapEntry, cssgPortMap=cssgPortMap, cssgCfgTransPassThroughEnabled=cssgCfgTransPassThroughEnabled, cssgCfgAutoDomainNatEnabled=cssgCfgAutoDomainNatEnabled, cssgExcludedAPNEntry=cssgExcludedAPNEntry, cssgTalWaitingForAuthUsers=cssgTalWaitingForAuthUsers, cssgExcludedAPNName=cssgExcludedAPNName, ciscoSsgMIBComplianceRev1=ciscoSsgMIBComplianceRev1, ciscoSsgMIBNotifications=ciscoSsgMIBNotifications, cssgPortGrpEntry=cssgPortGrpEntry, cssgCfgRadiusAuthenPort=cssgCfgRadiusAuthenPort, cssgTcpRedirectGrpTable=cssgTcpRedirectGrpTable, cssgServiceRouteMask=cssgServiceRouteMask, cssgCfgPortBundleHostKeyEnabled=cssgCfgPortBundleHostKeyEnabled, ciscoSsgTcpRedirectGroup=ciscoSsgTcpRedirectGroup, cssgTcpRedirNetworkMapGrpName=cssgTcpRedirNetworkMapGrpName, cssgServiceRouteType=cssgServiceRouteType, cssgCfgTcpRedirGrpForAdvCapt=cssgCfgTcpRedirGrpForAdvCapt, cssgTcpRedirPortGrpMapRowStat=cssgTcpRedirPortGrpMapRowStat, cssgCfgRadiusClntRbtNotifEnabled=cssgCfgRadiusClntRbtNotifEnabled, cssgTalMaxAuthRate=cssgTalMaxAuthRate, cssgCfgTCPRedirGrpForUnAuthUsers=cssgCfgTCPRedirGrpForUnAuthUsers, cssgTcpRedirectGrpEntry=cssgTcpRedirectGrpEntry, cssgCfgAutoLogOffMode=cssgCfgAutoLogOffMode, cssgPortMapRowStatus=cssgPortMapRowStatus, cssgTcpRedirect=cssgTcpRedirect, cssgCfgAutoLogOffInterval=cssgCfgAutoLogOffInterval, cssgRadiusClientRowStatus=cssgRadiusClientRowStatus, cssgPortMapEntry=cssgPortMapEntry, cssgServiceRouteEntry=cssgServiceRouteEntry, cssgServicePrepaid=cssgServicePrepaid, ciscoSsgTalUserInfoGroup=ciscoSsgTalUserInfoGroup, ciscoSsgMIBCompliances=ciscoSsgMIBCompliances, cssgCfgAAAServerDownNotifEnabled=cssgCfgAAAServerDownNotifEnabled, cssgServiceDNSPrimary=cssgServiceDNSPrimary, cssgCfgAccountingInterval=cssgCfgAccountingInterval, cssgServiceDNSSecondary=cssgServiceDNSSecondary, cssgStatsLoginsSuccessful=cssgStatsLoginsSuccessful, cssgExcludedAPNRowStatus=cssgExcludedAPNRowStatus, ciscoSsgRadiusClientsGroup=ciscoSsgRadiusClientsGroup, cssgCfgTcpRedirGrpForInitialCapt=cssgCfgTcpRedirGrpForInitialCapt, cssgCfgTcpRedirectEnabled=cssgCfgTcpRedirectEnabled, cssgTcpRedirPortGrpMapTable=cssgTcpRedirPortGrpMapTable, cssgTcpRedirPortNoMapTable=cssgTcpRedirPortNoMapTable, cssgTalUnidentifiedUsers=cssgTalUnidentifiedUsers, cssgPortGrpPortRowStatus=cssgPortGrpPortRowStatus, ciscoSsgMIBGroups=ciscoSsgMIBGroups, cssgTcpRedirPortGrpMapEntry=cssgTcpRedirPortGrpMapEntry, cssgRadiusClientAddr=cssgRadiusClientAddr, cssgNetworkGrpName=cssgNetworkGrpName, cssgTalMinAuthRateTimestamp=cssgTalMinAuthRateTimestamp, cssgNetworkGrpNetIpAddr=cssgNetworkGrpNetIpAddr, ciscoSsgRadiusClientReboot=ciscoSsgRadiusClientReboot, cssgTcpRedirNetworkGrpMapRowStat=cssgTcpRedirNetworkGrpMapRowStat, cssgServiceEntry=cssgServiceEntry, cssgExcludedAPNTable=cssgExcludedAPNTable, cssgTcpRedirectGrpServerAddr=cssgTcpRedirectGrpServerAddr, cssgTalCurrentAuthRateTimestamp=cssgTalCurrentAuthRateTimestamp, cssgNetworkGrpNetMask=cssgNetworkGrpNetMask, cssgCfgAccountingEnabled=cssgCfgAccountingEnabled, cssgStatsActiveServices=cssgStatsActiveServices, cssgCfgAutoLogOffIcmpRetries=cssgCfgAutoLogOffIcmpRetries, cssgTcpRedirPortNo=cssgTcpRedirPortNo, ciscoSsgRadiusAAAServerDown=ciscoSsgRadiusAAAServerDown, cssgNetworkGrpNetRowStatus=cssgNetworkGrpNetRowStatus, cssgServiceIfBindEntry=cssgServiceIfBindEntry, cssgTalResetAuthRates=cssgTalResetAuthRates, ciscoSsgCfgGroup=ciscoSsgCfgGroup, cssgServiceMode=cssgServiceMode, ciscoSsgMIBConformance=ciscoSsgMIBConformance, cssgRadiusClients=cssgRadiusClients, cssgServiceIdleTimeout=cssgServiceIdleTimeout, cssgPortMapPortRangeTo=cssgPortMapPortRangeTo, cssgTalMaxPendingAuthReqs=cssgTalMaxPendingAuthReqs, cssgTcpRedirPortNoMapRowStat=cssgTcpRedirPortNoMapRowStat, cssgServiceIfIndex=cssgServiceIfIndex, cssgExcludedDomainName=cssgExcludedDomainName, cssgServiceRouteMaskType=cssgServiceRouteMaskType, cssgStatsPODs=cssgStatsPODs, cssgService=cssgService, cssgCfgDefaultNetwork=cssgCfgDefaultNetwork, cssgStatsActiveHosts=cssgStatsActiveHosts, cssgServiceIfBinds=cssgServiceIfBinds, cssgCfgLocalForwardingEnabled=cssgCfgLocalForwardingEnabled, cssgCfgMaxServicesPerUser=cssgCfgMaxServicesPerUser, cssgTcpRedirPortMapGrpName=cssgTcpRedirPortMapGrpName, cssgCfgObjects=cssgCfgObjects, cssgExcludedAPN=cssgExcludedAPN, cssgPortMapSourceIpType=cssgPortMapSourceIpType, cssgTalCurrentAuthRate=cssgTalCurrentAuthRate, cssgPortGrpPortNo=cssgPortGrpPortNo, cssgServiceDownStreamQOSEnabled=cssgServiceDownStreamQOSEnabled, cssgStatsLoginAttempts=cssgStatsLoginAttempts)
