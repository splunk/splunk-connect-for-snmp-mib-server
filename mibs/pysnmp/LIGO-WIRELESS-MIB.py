#
# PySNMP MIB module LIGO-WIRELESS-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/LIGO-WIRELESS-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:56:42 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ValueSizeConstraint, ConstraintsUnion, ConstraintsIntersection, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ValueSizeConstraint", "ConstraintsUnion", "ConstraintsIntersection", "ValueRangeConstraint")
ifIndex, ifPhysAddress = mibBuilder.importSymbols("IF-MIB", "ifIndex", "ifPhysAddress")
ligoMgmt, = mibBuilder.importSymbols("LIGOWAVE-MIB", "ligoMgmt")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
sysLocation, = mibBuilder.importSymbols("SNMPv2-MIB", "sysLocation")
Gauge32, ObjectIdentity, MibIdentifier, IpAddress, iso, TimeTicks, Bits, MibScalar, MibTable, MibTableRow, MibTableColumn, Unsigned32, NotificationType, Integer32, ModuleIdentity, Counter32, Counter64 = mibBuilder.importSymbols("SNMPv2-SMI", "Gauge32", "ObjectIdentity", "MibIdentifier", "IpAddress", "iso", "TimeTicks", "Bits", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Unsigned32", "NotificationType", "Integer32", "ModuleIdentity", "Counter32", "Counter64")
MacAddress, TruthValue, DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "MacAddress", "TruthValue", "DisplayString", "TextualConvention")
ligoWirelessMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 32750, 3, 10))
ligoWirelessMIB.setRevisions(('2011-11-11 11:11',))
if mibBuilder.loadTexts: ligoWirelessMIB.setLastUpdated('201111111111Z')
if mibBuilder.loadTexts: ligoWirelessMIB.setOrganization('LigoWave')
ligoWirelessMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 32750, 3, 10, 1))
ligoWiNotifs = MibIdentifier((1, 3, 6, 1, 4, 1, 32750, 3, 10, 1, 0))
ligoWiInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 32750, 3, 10, 1, 1))
ligoWiConf = MibIdentifier((1, 3, 6, 1, 4, 1, 32750, 3, 10, 1, 2))
ligoWiStats = MibIdentifier((1, 3, 6, 1, 4, 1, 32750, 3, 10, 1, 3))
ligoWiIfConfTable = MibTable((1, 3, 6, 1, 4, 1, 32750, 3, 10, 1, 2, 1), )
if mibBuilder.loadTexts: ligoWiIfConfTable.setStatus('current')
ligoWiIfConfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 32750, 3, 10, 1, 2, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: ligoWiIfConfEntry.setStatus('current')
ligoWiIfMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 32750, 3, 10, 1, 2, 1, 1, 1), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ligoWiIfMacAddress.setStatus('current')
ligoWiIfProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 32750, 3, 10, 1, 2, 1, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ligoWiIfProtocol.setStatus('current')
ligoWiIfMode = MibTableColumn((1, 3, 6, 1, 4, 1, 32750, 3, 10, 1, 2, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("auto", 0), ("adhoc", 1), ("managed", 2), ("master", 3), ("repeater", 4), ("secondary", 5), ("monitor", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ligoWiIfMode.setStatus('current')
ligoWiIfESSID = MibTableColumn((1, 3, 6, 1, 4, 1, 32750, 3, 10, 1, 2, 1, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ligoWiIfESSID.setStatus('current')
ligoWiIfCountryCode = MibTableColumn((1, 3, 6, 1, 4, 1, 32750, 3, 10, 1, 2, 1, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(2, 3))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ligoWiIfCountryCode.setStatus('current')
ligoWiIfFrequency = MibTableColumn((1, 3, 6, 1, 4, 1, 32750, 3, 10, 1, 2, 1, 1, 6), Integer32()).setUnits('MHz').setMaxAccess("readonly")
if mibBuilder.loadTexts: ligoWiIfFrequency.setStatus('current')
ligoWiIfChannel = MibTableColumn((1, 3, 6, 1, 4, 1, 32750, 3, 10, 1, 2, 1, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ligoWiIfChannel.setStatus('current')
ligoWiIfChannelBandwidth = MibTableColumn((1, 3, 6, 1, 4, 1, 32750, 3, 10, 1, 2, 1, 1, 8), Integer32()).setUnits('MHz').setMaxAccess("readonly")
if mibBuilder.loadTexts: ligoWiIfChannelBandwidth.setStatus('current')
ligoWiIfEncryption = MibTableColumn((1, 3, 6, 1, 4, 1, 32750, 3, 10, 1, 2, 1, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10))).clone(namedValues=NamedValues(("unknown", 0), ("open", 1), ("wep64bit", 2), ("wep128bit", 3), ("wep", 4), ("enterpriseWpa", 5), ("personalWpa", 6), ("enterpriseWpa2", 7), ("personalWpa2", 8), ("enterpriseWpaOrWpa2", 9), ("personalWpaOrWpa2", 10)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ligoWiIfEncryption.setStatus('current')
ligoWiIfTxPower = MibTableColumn((1, 3, 6, 1, 4, 1, 32750, 3, 10, 1, 2, 1, 1, 10), Gauge32()).setUnits('dBm').setMaxAccess("readonly")
if mibBuilder.loadTexts: ligoWiIfTxPower.setStatus('current')
ligoWiIfBitRate = MibTableColumn((1, 3, 6, 1, 4, 1, 32750, 3, 10, 1, 2, 1, 1, 11), Gauge32()).setUnits('kbit/s').setMaxAccess("readonly")
if mibBuilder.loadTexts: ligoWiIfBitRate.setStatus('current')
ligoWiIfLinkQuality = MibTableColumn((1, 3, 6, 1, 4, 1, 32750, 3, 10, 1, 2, 1, 1, 12), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ligoWiIfLinkQuality.setStatus('current')
ligoWiIfMaxLinkQuality = MibTableColumn((1, 3, 6, 1, 4, 1, 32750, 3, 10, 1, 2, 1, 1, 13), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ligoWiIfMaxLinkQuality.setStatus('current')
ligoWiIfSignalLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 32750, 3, 10, 1, 2, 1, 1, 14), Integer32()).setUnits('dBm').setMaxAccess("readonly")
if mibBuilder.loadTexts: ligoWiIfSignalLevel.setStatus('current')
ligoWiIfNoiseLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 32750, 3, 10, 1, 2, 1, 1, 15), Integer32()).setUnits('dBm').setMaxAccess("readonly")
if mibBuilder.loadTexts: ligoWiIfNoiseLevel.setStatus('current')
ligoWiIfAssocNodeCount = MibTableColumn((1, 3, 6, 1, 4, 1, 32750, 3, 10, 1, 2, 1, 1, 16), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ligoWiIfAssocNodeCount.setStatus('current')
ligoWiIfStatsTable = MibTable((1, 3, 6, 1, 4, 1, 32750, 3, 10, 1, 3, 1), )
if mibBuilder.loadTexts: ligoWiIfStatsTable.setStatus('current')
ligoWiIfStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 32750, 3, 10, 1, 3, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: ligoWiIfStatsEntry.setStatus('current')
ligoWiIfRxTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 32750, 3, 10, 1, 3, 1, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ligoWiIfRxTotal.setStatus('current')
ligoWiIfRxErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 32750, 3, 10, 1, 3, 1, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ligoWiIfRxErrors.setStatus('current')
ligoWiIfTxTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 32750, 3, 10, 1, 3, 1, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ligoWiIfTxTotal.setStatus('current')
ligoWiIfTxRetries = MibTableColumn((1, 3, 6, 1, 4, 1, 32750, 3, 10, 1, 3, 1, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ligoWiIfTxRetries.setStatus('current')
ligoWiRemoteNodeStatsTable = MibTable((1, 3, 6, 1, 4, 1, 32750, 3, 10, 1, 3, 2), )
if mibBuilder.loadTexts: ligoWiRemoteNodeStatsTable.setStatus('current')
ligoWiRemoteNodeStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 32750, 3, 10, 1, 3, 2, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "LIGO-WIRELESS-MIB", "ligoWiRmtNodeMacAddress"))
if mibBuilder.loadTexts: ligoWiRemoteNodeStatsEntry.setStatus('current')
ligoWiRmtNodeMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 32750, 3, 10, 1, 3, 2, 1, 1), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ligoWiRmtNodeMacAddress.setStatus('current')
ligoWiRmtNodeAssociated = MibTableColumn((1, 3, 6, 1, 4, 1, 32750, 3, 10, 1, 3, 2, 1, 2), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ligoWiRmtNodeAssociated.setStatus('current')
ligoWiRmtNodeTxBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 32750, 3, 10, 1, 3, 2, 1, 3), Counter32()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: ligoWiRmtNodeTxBytes.setStatus('current')
ligoWiRmtNodeRxBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 32750, 3, 10, 1, 3, 2, 1, 4), Counter32()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: ligoWiRmtNodeRxBytes.setStatus('current')
ligoWiRmtNodeSignalLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 32750, 3, 10, 1, 3, 2, 1, 5), Integer32()).setUnits('dBm').setMaxAccess("readonly")
if mibBuilder.loadTexts: ligoWiRmtNodeSignalLevel.setStatus('current')
ligoWiRmtNodeNoiseLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 32750, 3, 10, 1, 3, 2, 1, 6), Integer32()).setUnits('dBm').setMaxAccess("readonly")
if mibBuilder.loadTexts: ligoWiRmtNodeNoiseLevel.setStatus('current')
ligoWiFrequencyChange = NotificationType((1, 3, 6, 1, 4, 1, 32750, 3, 10, 1, 0, 1)).setObjects(("SNMPv2-MIB", "sysLocation"), ("IF-MIB", "ifIndex"), ("LIGO-WIRELESS-MIB", "ligoWiIfFrequency"))
if mibBuilder.loadTexts: ligoWiFrequencyChange.setStatus('current')
ligoWiNoiseThresholdReached = NotificationType((1, 3, 6, 1, 4, 1, 32750, 3, 10, 1, 0, 2)).setObjects(("SNMPv2-MIB", "sysLocation"), ("IF-MIB", "ifIndex"), ("LIGO-WIRELESS-MIB", "ligoWiIfNoiseLevel"))
if mibBuilder.loadTexts: ligoWiNoiseThresholdReached.setStatus('current')
ligoWiRemoteNodeConnected = NotificationType((1, 3, 6, 1, 4, 1, 32750, 3, 10, 1, 0, 3)).setObjects(("SNMPv2-MIB", "sysLocation"), ("IF-MIB", "ifPhysAddress"), ("IF-MIB", "ifIndex"), ("LIGO-WIRELESS-MIB", "ligoWiRmtNodeMacAddress"))
if mibBuilder.loadTexts: ligoWiRemoteNodeConnected.setStatus('current')
ligoWiRemoteNodeDisconnected = NotificationType((1, 3, 6, 1, 4, 1, 32750, 3, 10, 1, 0, 4)).setObjects(("SNMPv2-MIB", "sysLocation"), ("IF-MIB", "ifPhysAddress"), ("IF-MIB", "ifIndex"), ("LIGO-WIRELESS-MIB", "ligoWiRmtNodeMacAddress"))
if mibBuilder.loadTexts: ligoWiRemoteNodeDisconnected.setStatus('current')
ligoWiLinkQualThresholdReached = NotificationType((1, 3, 6, 1, 4, 1, 32750, 3, 10, 1, 0, 5)).setObjects(("SNMPv2-MIB", "sysLocation"), ("IF-MIB", "ifIndex"), ("LIGO-WIRELESS-MIB", "ligoWiIfLinkQuality"))
if mibBuilder.loadTexts: ligoWiLinkQualThresholdReached.setStatus('current')
ligoWiRxErrorsThreshold = NotificationType((1, 3, 6, 1, 4, 1, 32750, 3, 10, 1, 0, 6)).setObjects(("SNMPv2-MIB", "sysLocation"), ("IF-MIB", "ifIndex"), ("LIGO-WIRELESS-MIB", "ligoWiIfMacAddress"), ("LIGO-WIRELESS-MIB", "ligoWiIfRxErrors"))
if mibBuilder.loadTexts: ligoWiRxErrorsThreshold.setStatus('current')
ligoWiTxRetriesThreshold = NotificationType((1, 3, 6, 1, 4, 1, 32750, 3, 10, 1, 0, 7)).setObjects(("SNMPv2-MIB", "sysLocation"), ("IF-MIB", "ifIndex"), ("LIGO-WIRELESS-MIB", "ligoWiIfMacAddress"), ("LIGO-WIRELESS-MIB", "ligoWiIfTxRetries"))
if mibBuilder.loadTexts: ligoWiTxRetriesThreshold.setStatus('current')
mibBuilder.exportSymbols("LIGO-WIRELESS-MIB", ligoWiFrequencyChange=ligoWiFrequencyChange, ligoWiConf=ligoWiConf, ligoWiIfChannelBandwidth=ligoWiIfChannelBandwidth, ligoWiTxRetriesThreshold=ligoWiTxRetriesThreshold, ligoWiIfEncryption=ligoWiIfEncryption, ligoWiRemoteNodeConnected=ligoWiRemoteNodeConnected, ligoWiIfMaxLinkQuality=ligoWiIfMaxLinkQuality, ligoWiRmtNodeTxBytes=ligoWiRmtNodeTxBytes, ligoWiLinkQualThresholdReached=ligoWiLinkQualThresholdReached, ligoWiIfMacAddress=ligoWiIfMacAddress, ligoWiIfStatsEntry=ligoWiIfStatsEntry, ligoWiIfBitRate=ligoWiIfBitRate, ligoWirelessMIB=ligoWirelessMIB, ligoWiIfLinkQuality=ligoWiIfLinkQuality, ligoWiIfCountryCode=ligoWiIfCountryCode, ligoWiRmtNodeAssociated=ligoWiRmtNodeAssociated, ligoWiRmtNodeRxBytes=ligoWiRmtNodeRxBytes, ligoWiRemoteNodeDisconnected=ligoWiRemoteNodeDisconnected, ligoWiIfNoiseLevel=ligoWiIfNoiseLevel, ligoWiIfRxErrors=ligoWiIfRxErrors, ligoWiIfESSID=ligoWiIfESSID, ligoWirelessMIBObjects=ligoWirelessMIBObjects, ligoWiIfRxTotal=ligoWiIfRxTotal, ligoWiIfConfEntry=ligoWiIfConfEntry, ligoWiIfConfTable=ligoWiIfConfTable, ligoWiInfo=ligoWiInfo, ligoWiIfTxRetries=ligoWiIfTxRetries, PYSNMP_MODULE_ID=ligoWirelessMIB, ligoWiNotifs=ligoWiNotifs, ligoWiRxErrorsThreshold=ligoWiRxErrorsThreshold, ligoWiRmtNodeNoiseLevel=ligoWiRmtNodeNoiseLevel, ligoWiRemoteNodeStatsEntry=ligoWiRemoteNodeStatsEntry, ligoWiIfMode=ligoWiIfMode, ligoWiNoiseThresholdReached=ligoWiNoiseThresholdReached, ligoWiRmtNodeSignalLevel=ligoWiRmtNodeSignalLevel, ligoWiIfStatsTable=ligoWiIfStatsTable, ligoWiStats=ligoWiStats, ligoWiRmtNodeMacAddress=ligoWiRmtNodeMacAddress, ligoWiIfProtocol=ligoWiIfProtocol, ligoWiIfFrequency=ligoWiIfFrequency, ligoWiIfChannel=ligoWiIfChannel, ligoWiIfSignalLevel=ligoWiIfSignalLevel, ligoWiRemoteNodeStatsTable=ligoWiRemoteNodeStatsTable, ligoWiIfAssocNodeCount=ligoWiIfAssocNodeCount, ligoWiIfTxPower=ligoWiIfTxPower, ligoWiIfTxTotal=ligoWiIfTxTotal)
