#
# PySNMP MIB module Nortel-Magellan-Passport-McsMgrMIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/Nortel-Magellan-Passport-McsMgrMIB
# Produced by pysmi-0.3.4 at Mon Apr 29 20:17:30 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ConstraintsIntersection, ValueSizeConstraint, ValueRangeConstraint, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ConstraintsIntersection", "ValueSizeConstraint", "ValueRangeConstraint", "SingleValueConstraint")
DisplayString, StorageType, RowStatus, Unsigned32, RowPointer = mibBuilder.importSymbols("Nortel-Magellan-Passport-StandardTextualConventionsMIB", "DisplayString", "StorageType", "RowStatus", "Unsigned32", "RowPointer")
AsciiString, NonReplicated, Link = mibBuilder.importSymbols("Nortel-Magellan-Passport-TextualConventionsMIB", "AsciiString", "NonReplicated", "Link")
components, passportMIBs = mibBuilder.importSymbols("Nortel-Magellan-Passport-UsefulDefinitionsMIB", "components", "passportMIBs")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
Integer32, Bits, Counter32, TimeTicks, ModuleIdentity, Unsigned32, Counter64, NotificationType, MibIdentifier, iso, MibScalar, MibTable, MibTableRow, MibTableColumn, ObjectIdentity, IpAddress, Gauge32 = mibBuilder.importSymbols("SNMPv2-SMI", "Integer32", "Bits", "Counter32", "TimeTicks", "ModuleIdentity", "Unsigned32", "Counter64", "NotificationType", "MibIdentifier", "iso", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ObjectIdentity", "IpAddress", "Gauge32")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
mcsMgrMIB = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 124))
mcsMgr = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 122))
mcsMgrRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 122, 1), )
if mibBuilder.loadTexts: mcsMgrRowStatusTable.setStatus('mandatory')
mcsMgrRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 122, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-McsMgrMIB", "mcsMgrIndex"))
if mibBuilder.loadTexts: mcsMgrRowStatusEntry.setStatus('mandatory')
mcsMgrRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 122, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mcsMgrRowStatus.setStatus('mandatory')
mcsMgrComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 122, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcsMgrComponentName.setStatus('mandatory')
mcsMgrStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 122, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcsMgrStorageType.setStatus('mandatory')
mcsMgrIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 122, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mcsMgrIndex.setStatus('mandatory')
mcsMgrProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 122, 10), )
if mibBuilder.loadTexts: mcsMgrProvTable.setStatus('mandatory')
mcsMgrProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 122, 10, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-McsMgrMIB", "mcsMgrIndex"))
if mibBuilder.loadTexts: mcsMgrProvEntry.setStatus('mandatory')
mcsMgrMaxEps = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 122, 10, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16384)).clone(512)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mcsMgrMaxEps.setStatus('mandatory')
mcsMgrEpAlarmThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 122, 10, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16384)).clone(128)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mcsMgrEpAlarmThreshold.setStatus('mandatory')
mcsMgrOverrideNsapAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 122, 10, 1, 3), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(0, 44)).clone(hexValue="")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mcsMgrOverrideNsapAddress.setStatus('mandatory')
mcsMgrLogicalProcessor = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 122, 10, 1, 4), Link()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mcsMgrLogicalProcessor.setStatus('obsolete')
mcsMgrSecurity = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 122, 10, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("on", 1))).clone('off')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mcsMgrSecurity.setStatus('mandatory')
mcsMgrStateTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 122, 11), )
if mibBuilder.loadTexts: mcsMgrStateTable.setStatus('mandatory')
mcsMgrStateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 122, 11, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-McsMgrMIB", "mcsMgrIndex"))
if mibBuilder.loadTexts: mcsMgrStateEntry.setStatus('mandatory')
mcsMgrAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 122, 11, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("locked", 0), ("unlocked", 1), ("shuttingDown", 2))).clone('unlocked')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcsMgrAdminState.setStatus('mandatory')
mcsMgrOperationalState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 122, 11, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1))).clone('disabled')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcsMgrOperationalState.setStatus('mandatory')
mcsMgrUsageState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 122, 11, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("idle", 0), ("active", 1), ("busy", 2))).clone('idle')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcsMgrUsageState.setStatus('mandatory')
mcsMgrAvailabilityStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 122, 11, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(2, 2)).setFixedLength(2)).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcsMgrAvailabilityStatus.setStatus('mandatory')
mcsMgrProceduralStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 122, 11, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 1)).setFixedLength(1)).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcsMgrProceduralStatus.setStatus('mandatory')
mcsMgrControlStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 122, 11, 1, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 1)).setFixedLength(1)).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcsMgrControlStatus.setStatus('mandatory')
mcsMgrAlarmStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 122, 11, 1, 7), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 1)).setFixedLength(1)).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcsMgrAlarmStatus.setStatus('mandatory')
mcsMgrStandbyStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 122, 11, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 15))).clone(namedValues=NamedValues(("hotStandby", 0), ("coldStandby", 1), ("providingService", 2), ("notSet", 15))).clone('notSet')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcsMgrStandbyStatus.setStatus('mandatory')
mcsMgrUnknownStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 122, 11, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("false", 0), ("true", 1))).clone('false')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcsMgrUnknownStatus.setStatus('mandatory')
mcsMgrOperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 122, 12), )
if mibBuilder.loadTexts: mcsMgrOperTable.setStatus('mandatory')
mcsMgrOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 122, 12, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-McsMgrMIB", "mcsMgrIndex"))
if mibBuilder.loadTexts: mcsMgrOperEntry.setStatus('mandatory')
mcsMgrCurrentLp = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 122, 12, 1, 1), RowPointer()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcsMgrCurrentLp.setStatus('mandatory')
mcsMgrCurrentEps = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 122, 12, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 16384))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcsMgrCurrentEps.setStatus('mandatory')
mcsMgrNsapAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 122, 12, 1, 4), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(0, 44))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcsMgrNsapAddress.setStatus('mandatory')
mcsMgrCanLpsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 122, 418), )
if mibBuilder.loadTexts: mcsMgrCanLpsTable.setStatus('mandatory')
mcsMgrCanLpsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 122, 418, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-McsMgrMIB", "mcsMgrIndex"), (0, "Nortel-Magellan-Passport-McsMgrMIB", "mcsMgrCanLpsValue"))
if mibBuilder.loadTexts: mcsMgrCanLpsEntry.setStatus('mandatory')
mcsMgrCanLpsValue = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 122, 418, 1, 1), RowPointer()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcsMgrCanLpsValue.setStatus('mandatory')
mcsMgrGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 124, 1))
mcsMgrGroupBE = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 124, 1, 5))
mcsMgrGroupBE00 = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 124, 1, 5, 1))
mcsMgrGroupBE00A = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 124, 1, 5, 1, 2))
mcsMgrCapabilities = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 124, 3))
mcsMgrCapabilitiesBE = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 124, 3, 5))
mcsMgrCapabilitiesBE00 = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 124, 3, 5, 1))
mcsMgrCapabilitiesBE00A = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 124, 3, 5, 1, 2))
mibBuilder.exportSymbols("Nortel-Magellan-Passport-McsMgrMIB", mcsMgrMIB=mcsMgrMIB, mcsMgrCapabilitiesBE00=mcsMgrCapabilitiesBE00, mcsMgrMaxEps=mcsMgrMaxEps, mcsMgrGroup=mcsMgrGroup, mcsMgrCurrentEps=mcsMgrCurrentEps, mcsMgrCapabilitiesBE00A=mcsMgrCapabilitiesBE00A, mcsMgrOverrideNsapAddress=mcsMgrOverrideNsapAddress, mcsMgrOperationalState=mcsMgrOperationalState, mcsMgrCanLpsTable=mcsMgrCanLpsTable, mcsMgrStateTable=mcsMgrStateTable, mcsMgrRowStatus=mcsMgrRowStatus, mcsMgrProvEntry=mcsMgrProvEntry, mcsMgrOperTable=mcsMgrOperTable, mcsMgrCapabilitiesBE=mcsMgrCapabilitiesBE, mcsMgrUnknownStatus=mcsMgrUnknownStatus, mcsMgrGroupBE00A=mcsMgrGroupBE00A, mcsMgrComponentName=mcsMgrComponentName, mcsMgrAdminState=mcsMgrAdminState, mcsMgrNsapAddress=mcsMgrNsapAddress, mcsMgrIndex=mcsMgrIndex, mcsMgrAlarmStatus=mcsMgrAlarmStatus, mcsMgrControlStatus=mcsMgrControlStatus, mcsMgrOperEntry=mcsMgrOperEntry, mcsMgrUsageState=mcsMgrUsageState, mcsMgrEpAlarmThreshold=mcsMgrEpAlarmThreshold, mcsMgrCapabilities=mcsMgrCapabilities, mcsMgrAvailabilityStatus=mcsMgrAvailabilityStatus, mcsMgrCanLpsEntry=mcsMgrCanLpsEntry, mcsMgrGroupBE=mcsMgrGroupBE, mcsMgrProvTable=mcsMgrProvTable, mcsMgrStandbyStatus=mcsMgrStandbyStatus, mcsMgr=mcsMgr, mcsMgrSecurity=mcsMgrSecurity, mcsMgrCurrentLp=mcsMgrCurrentLp, mcsMgrRowStatusEntry=mcsMgrRowStatusEntry, mcsMgrStorageType=mcsMgrStorageType, mcsMgrGroupBE00=mcsMgrGroupBE00, mcsMgrProceduralStatus=mcsMgrProceduralStatus, mcsMgrCanLpsValue=mcsMgrCanLpsValue, mcsMgrLogicalProcessor=mcsMgrLogicalProcessor, mcsMgrStateEntry=mcsMgrStateEntry, mcsMgrRowStatusTable=mcsMgrRowStatusTable)
