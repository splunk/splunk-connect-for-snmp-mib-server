#
# PySNMP MIB module WWP-LEOS-BLADE-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/WWP-LEOS-BLADE-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 21:30:57 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, SingleValueConstraint, ValueRangeConstraint, ConstraintsIntersection, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "SingleValueConstraint", "ValueRangeConstraint", "ConstraintsIntersection", "ValueSizeConstraint")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
MibIdentifier, NotificationType, MibScalar, MibTable, MibTableRow, MibTableColumn, ObjectIdentity, IpAddress, Integer32, Counter64, ModuleIdentity, iso, Gauge32, Unsigned32, Counter32, TimeTicks, Bits = mibBuilder.importSymbols("SNMPv2-SMI", "MibIdentifier", "NotificationType", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ObjectIdentity", "IpAddress", "Integer32", "Counter64", "ModuleIdentity", "iso", "Gauge32", "Unsigned32", "Counter32", "TimeTicks", "Bits")
MacAddress, TextualConvention, RowStatus, DisplayString, DateAndTime = mibBuilder.importSymbols("SNMPv2-TC", "MacAddress", "TextualConvention", "RowStatus", "DisplayString", "DateAndTime")
wwpModulesLeos, = mibBuilder.importSymbols("WWP-SMI", "wwpModulesLeos")
wwpLeosBladeMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 6141, 2, 60, 1))
wwpLeosBladeMIB.setRevisions(('2011-10-19 00:00', '2002-03-16 00:00',))
if mibBuilder.loadTexts: wwpLeosBladeMIB.setLastUpdated('201110190000Z')
if mibBuilder.loadTexts: wwpLeosBladeMIB.setOrganization('Ciena, Inc')
wwpLeosBladeMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 6141, 2, 60, 1, 1))
wwpLeosBlade = MibIdentifier((1, 3, 6, 1, 4, 1, 6141, 2, 60, 1, 1, 1))
wwpLeosBladeMIBNotificationPrefix = MibIdentifier((1, 3, 6, 1, 4, 1, 6141, 2, 60, 1, 2))
wwpLeosBladeMIBNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 6141, 2, 60, 1, 2, 0))
wwpLeosBladeMIBConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 6141, 2, 60, 1, 3))
wwpLeosBladeMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 6141, 2, 60, 1, 3, 1))
wwpLeosBladeMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 6141, 2, 60, 1, 3, 2))
wwpLeosBladeTable = MibTable((1, 3, 6, 1, 4, 1, 6141, 2, 60, 1, 1, 1, 1), )
if mibBuilder.loadTexts: wwpLeosBladeTable.setStatus('current')
wwpLeosBladeEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6141, 2, 60, 1, 1, 1, 1, 1), ).setIndexNames((0, "WWP-LEOS-BLADE-MIB", "wwpLeosBladeId"))
if mibBuilder.loadTexts: wwpLeosBladeEntry.setStatus('current')
wwpLeosBladeId = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 1, 1, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosBladeId.setStatus('current')
wwpLeosBladeType = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 1, 1, 1, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("control", 1), ("io", 2), ("fabric", 3), ("single", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosBladeType.setStatus('current')
wwpLeosBladeCapFilename = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 1, 1, 1, 1, 1, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpLeosBladeCapFilename.setStatus('current')
wwpLeosBladeAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 1, 1, 1, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('enable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpLeosBladeAdminState.setStatus('current')
wwpLeosBladeOperState = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 1, 1, 1, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("init", 1), ("enabled", 2), ("disabled", 3), ("faulted", 4), ("unequipped", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosBladeOperState.setStatus('current')
wwpLeosBladeStartMacAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 1, 1, 1, 1, 1, 6), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosBladeStartMacAddr.setStatus('current')
wwpLeosBladeNumPorts = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 1, 1, 1, 1, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wwpLeosBladeNumPorts.setStatus('current')
wwpLeosBladeStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 1, 1, 1, 1, 1, 8), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wwpLeosBladeStatus.setStatus('current')
wwpLeosPhyBladeTable = MibTable((1, 3, 6, 1, 4, 1, 6141, 2, 60, 1, 1, 1, 2), )
if mibBuilder.loadTexts: wwpLeosPhyBladeTable.setStatus('current')
wwpLeosPhyBladeEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6141, 2, 60, 1, 1, 1, 2, 1), ).setIndexNames((0, "WWP-LEOS-BLADE-MIB", "wwpLeosBladeId"))
if mibBuilder.loadTexts: wwpLeosPhyBladeEntry.setStatus('current')
wwpLeosPhyBladeSysUpTime = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 1, 1, 1, 2, 1, 1), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosPhyBladeSysUpTime.setStatus('current')
wwpLeosPhyBladeSerialNum = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 1, 1, 1, 2, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 127))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosPhyBladeSerialNum.setStatus('current')
wwpLeosPhyBladeBoardRevision = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 1, 1, 1, 2, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 127))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosPhyBladeBoardRevision.setStatus('current')
wwpLeosPhyBladePostResults = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 1, 1, 1, 2, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosPhyBladePostResults.setStatus('current')
wwpLeosPhyBladePostCode = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 1, 1, 1, 2, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosPhyBladePostCode.setStatus('current')
wwpLeosPhyBladeMfgDate = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 1, 1, 1, 2, 1, 6), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosPhyBladeMfgDate.setStatus('current')
wwpLeosPhyBladeBoardDesc = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 1, 1, 1, 2, 1, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosPhyBladeBoardDesc.setStatus('current')
wwpLeosPhyBladeNumResets = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 1, 1, 1, 2, 1, 8), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosPhyBladeNumResets.setStatus('current')
wwpLeosPhyBladeLastRebootReason = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 1, 1, 1, 2, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12))).clone(namedValues=NamedValues(("unknown", 1), ("snmp", 2), ("pwrFail", 3), ("appLoad", 4), ("errorHandler", 5), ("watchdog", 6), ("upgrade", 7), ("cli", 8), ("resetButton", 9), ("serviceModeChange", 10), ("guardianReboot", 11), ("guardianSaosRestart", 12)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosPhyBladeLastRebootReason.setStatus('current')
wwpLeosPhyBladeRebootOperation = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 1, 1, 1, 2, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("none", 1), ("reboot", 2), ("rebootReinit", 3), ("rebootCustReinit", 4))).clone('none')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpLeosPhyBladeRebootOperation.setStatus('current')
wwpLeosBladeStateChange = NotificationType((1, 3, 6, 1, 4, 1, 6141, 2, 60, 1, 2, 0, 1)).setObjects(("WWP-LEOS-BLADE-MIB", "wwpLeosBladeId"), ("WWP-LEOS-BLADE-MIB", "wwpLeosBladeOperState"))
if mibBuilder.loadTexts: wwpLeosBladeStateChange.setStatus('current')
wwpLeosBladePostFail = NotificationType((1, 3, 6, 1, 4, 1, 6141, 2, 60, 1, 2, 0, 2)).setObjects(("WWP-LEOS-BLADE-MIB", "wwpLeosBladeId"), ("WWP-LEOS-BLADE-MIB", "wwpLeosPhyBladePostCode"))
if mibBuilder.loadTexts: wwpLeosBladePostFail.setStatus('current')
mibBuilder.exportSymbols("WWP-LEOS-BLADE-MIB", wwpLeosBladeCapFilename=wwpLeosBladeCapFilename, wwpLeosPhyBladeSerialNum=wwpLeosPhyBladeSerialNum, wwpLeosPhyBladeTable=wwpLeosPhyBladeTable, wwpLeosBladeTable=wwpLeosBladeTable, wwpLeosBladeAdminState=wwpLeosBladeAdminState, PYSNMP_MODULE_ID=wwpLeosBladeMIB, wwpLeosPhyBladePostResults=wwpLeosPhyBladePostResults, wwpLeosPhyBladeSysUpTime=wwpLeosPhyBladeSysUpTime, wwpLeosBladeOperState=wwpLeosBladeOperState, wwpLeosPhyBladeNumResets=wwpLeosPhyBladeNumResets, wwpLeosBladePostFail=wwpLeosBladePostFail, wwpLeosPhyBladeBoardDesc=wwpLeosPhyBladeBoardDesc, wwpLeosPhyBladeRebootOperation=wwpLeosPhyBladeRebootOperation, wwpLeosPhyBladeMfgDate=wwpLeosPhyBladeMfgDate, wwpLeosBladeMIBGroups=wwpLeosBladeMIBGroups, wwpLeosBladeStatus=wwpLeosBladeStatus, wwpLeosBladeStateChange=wwpLeosBladeStateChange, wwpLeosBladeMIB=wwpLeosBladeMIB, wwpLeosBladeMIBNotifications=wwpLeosBladeMIBNotifications, wwpLeosBlade=wwpLeosBlade, wwpLeosBladeMIBObjects=wwpLeosBladeMIBObjects, wwpLeosPhyBladeEntry=wwpLeosPhyBladeEntry, wwpLeosBladeMIBNotificationPrefix=wwpLeosBladeMIBNotificationPrefix, wwpLeosBladeId=wwpLeosBladeId, wwpLeosPhyBladeBoardRevision=wwpLeosPhyBladeBoardRevision, wwpLeosBladeStartMacAddr=wwpLeosBladeStartMacAddr, wwpLeosBladeEntry=wwpLeosBladeEntry, wwpLeosBladeMIBCompliances=wwpLeosBladeMIBCompliances, wwpLeosBladeType=wwpLeosBladeType, wwpLeosBladeNumPorts=wwpLeosBladeNumPorts, wwpLeosPhyBladePostCode=wwpLeosPhyBladePostCode, wwpLeosPhyBladeLastRebootReason=wwpLeosPhyBladeLastRebootReason, wwpLeosBladeMIBConformance=wwpLeosBladeMIBConformance)
