#
# PySNMP MIB module Nortel-Magellan-Passport-LanDriversMIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/Nortel-Magellan-Passport-LanDriversMIB
# Produced by pysmi-0.3.4 at Mon Apr 29 20:18:18 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ValueSizeConstraint, ValueRangeConstraint, ConstraintsIntersection, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ValueSizeConstraint", "ValueRangeConstraint", "ConstraintsIntersection", "SingleValueConstraint")
lpIndex, lp = mibBuilder.importSymbols("Nortel-Magellan-Passport-LogicalProcessorMIB", "lpIndex", "lp")
DisplayString, RowStatus, Counter32, PassportCounter64, MacAddress, Gauge32, Unsigned32, StorageType, InterfaceIndex, FddiTimeMilli, FddiMACLongAddressType, FddiTimeNano, Integer32 = mibBuilder.importSymbols("Nortel-Magellan-Passport-StandardTextualConventionsMIB", "DisplayString", "RowStatus", "Counter32", "PassportCounter64", "MacAddress", "Gauge32", "Unsigned32", "StorageType", "InterfaceIndex", "FddiTimeMilli", "FddiMACLongAddressType", "FddiTimeNano", "Integer32")
Link, AsciiString, EnterpriseDateAndTime, NonReplicated = mibBuilder.importSymbols("Nortel-Magellan-Passport-TextualConventionsMIB", "Link", "AsciiString", "EnterpriseDateAndTime", "NonReplicated")
passportMIBs, components = mibBuilder.importSymbols("Nortel-Magellan-Passport-UsefulDefinitionsMIB", "passportMIBs", "components")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
Counter32, Bits, ModuleIdentity, NotificationType, ObjectIdentity, TimeTicks, Counter64, Gauge32, Unsigned32, MibIdentifier, iso, IpAddress, MibScalar, MibTable, MibTableRow, MibTableColumn, Integer32 = mibBuilder.importSymbols("SNMPv2-SMI", "Counter32", "Bits", "ModuleIdentity", "NotificationType", "ObjectIdentity", "TimeTicks", "Counter64", "Gauge32", "Unsigned32", "MibIdentifier", "iso", "IpAddress", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Integer32")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
lanDriversMIB = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 30))
lpEnet = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 3))
lpEnetRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 3, 1), )
if mibBuilder.loadTexts: lpEnetRowStatusTable.setStatus('mandatory')
lpEnetRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 3, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-LogicalProcessorMIB", "lpIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpEnetIndex"))
if mibBuilder.loadTexts: lpEnetRowStatusEntry.setStatus('mandatory')
lpEnetRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 3, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lpEnetRowStatus.setStatus('mandatory')
lpEnetComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 3, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpEnetComponentName.setStatus('mandatory')
lpEnetStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 3, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpEnetStorageType.setStatus('mandatory')
lpEnetIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 3, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 5)))
if mibBuilder.loadTexts: lpEnetIndex.setStatus('mandatory')
lpEnetCidDataTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 3, 10), )
if mibBuilder.loadTexts: lpEnetCidDataTable.setStatus('mandatory')
lpEnetCidDataEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 3, 10, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-LogicalProcessorMIB", "lpIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpEnetIndex"))
if mibBuilder.loadTexts: lpEnetCidDataEntry.setStatus('mandatory')
lpEnetCustomerIdentifier = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 3, 10, 1, 1), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 8191), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lpEnetCustomerIdentifier.setStatus('mandatory')
lpEnetIfEntryTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 3, 11), )
if mibBuilder.loadTexts: lpEnetIfEntryTable.setStatus('mandatory')
lpEnetIfEntryEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 3, 11, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-LogicalProcessorMIB", "lpIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpEnetIndex"))
if mibBuilder.loadTexts: lpEnetIfEntryEntry.setStatus('mandatory')
lpEnetIfAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 3, 11, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("testing", 3))).clone('up')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lpEnetIfAdminStatus.setStatus('mandatory')
lpEnetIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 3, 11, 1, 2), InterfaceIndex().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpEnetIfIndex.setStatus('mandatory')
lpEnetProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 3, 12), )
if mibBuilder.loadTexts: lpEnetProvTable.setStatus('mandatory')
lpEnetProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 3, 12, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-LogicalProcessorMIB", "lpIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpEnetIndex"))
if mibBuilder.loadTexts: lpEnetProvEntry.setStatus('mandatory')
lpEnetHeartbeatPacket = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 3, 12, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lpEnetHeartbeatPacket.setStatus('mandatory')
lpEnetApplicationFramerName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 3, 12, 1, 2), Link()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lpEnetApplicationFramerName.setStatus('mandatory')
lpEnetAdminInfoTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 3, 13), )
if mibBuilder.loadTexts: lpEnetAdminInfoTable.setStatus('mandatory')
lpEnetAdminInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 3, 13, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-LogicalProcessorMIB", "lpIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpEnetIndex"))
if mibBuilder.loadTexts: lpEnetAdminInfoEntry.setStatus('mandatory')
lpEnetVendor = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 3, 13, 1, 1), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(0, 20))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lpEnetVendor.setStatus('mandatory')
lpEnetCommentText = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 3, 13, 1, 2), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(0, 60))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lpEnetCommentText.setStatus('mandatory')
lpEnetStateTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 3, 15), )
if mibBuilder.loadTexts: lpEnetStateTable.setStatus('mandatory')
lpEnetStateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 3, 15, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-LogicalProcessorMIB", "lpIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpEnetIndex"))
if mibBuilder.loadTexts: lpEnetStateEntry.setStatus('mandatory')
lpEnetAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 3, 15, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("locked", 0), ("unlocked", 1), ("shuttingDown", 2))).clone('unlocked')).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpEnetAdminState.setStatus('mandatory')
lpEnetOperationalState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 3, 15, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1))).clone('disabled')).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpEnetOperationalState.setStatus('mandatory')
lpEnetUsageState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 3, 15, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("idle", 0), ("active", 1), ("busy", 2))).clone('idle')).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpEnetUsageState.setStatus('mandatory')
lpEnetOperStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 3, 16), )
if mibBuilder.loadTexts: lpEnetOperStatusTable.setStatus('mandatory')
lpEnetOperStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 3, 16, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-LogicalProcessorMIB", "lpIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpEnetIndex"))
if mibBuilder.loadTexts: lpEnetOperStatusEntry.setStatus('mandatory')
lpEnetSnmpOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 3, 16, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("testing", 3))).clone('up')).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpEnetSnmpOperStatus.setStatus('mandatory')
lpEnetOperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 3, 17), )
if mibBuilder.loadTexts: lpEnetOperTable.setStatus('mandatory')
lpEnetOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 3, 17, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-LogicalProcessorMIB", "lpIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpEnetIndex"))
if mibBuilder.loadTexts: lpEnetOperEntry.setStatus('mandatory')
lpEnetMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 3, 17, 1, 1), MacAddress().subtype(subtypeSpec=ValueSizeConstraint(6, 6)).setFixedLength(6)).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpEnetMacAddress.setStatus('mandatory')
lpEnetStatsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 3, 18), )
if mibBuilder.loadTexts: lpEnetStatsTable.setStatus('mandatory')
lpEnetStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 3, 18, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-LogicalProcessorMIB", "lpIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpEnetIndex"))
if mibBuilder.loadTexts: lpEnetStatsEntry.setStatus('mandatory')
lpEnetAlignmentErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 3, 18, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpEnetAlignmentErrors.setStatus('mandatory')
lpEnetFcsErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 3, 18, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpEnetFcsErrors.setStatus('mandatory')
lpEnetSingleCollisionFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 3, 18, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpEnetSingleCollisionFrames.setStatus('mandatory')
lpEnetMultipleCollisionFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 3, 18, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpEnetMultipleCollisionFrames.setStatus('mandatory')
lpEnetSqeTestErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 3, 18, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpEnetSqeTestErrors.setStatus('mandatory')
lpEnetDeferredTransmissions = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 3, 18, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpEnetDeferredTransmissions.setStatus('mandatory')
lpEnetLateCollisions = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 3, 18, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpEnetLateCollisions.setStatus('mandatory')
lpEnetExcessiveCollisions = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 3, 18, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpEnetExcessiveCollisions.setStatus('mandatory')
lpEnetMacTransmitErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 3, 18, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpEnetMacTransmitErrors.setStatus('mandatory')
lpEnetCarrierSenseErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 3, 18, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpEnetCarrierSenseErrors.setStatus('mandatory')
lpEnetFrameTooLongs = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 3, 18, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpEnetFrameTooLongs.setStatus('mandatory')
lpEnetMacReceiveErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 3, 18, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpEnetMacReceiveErrors.setStatus('mandatory')
lpEnetLt = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 3, 2))
lpEnetLtRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 3, 2, 1), )
if mibBuilder.loadTexts: lpEnetLtRowStatusTable.setStatus('mandatory')
lpEnetLtRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 3, 2, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-LogicalProcessorMIB", "lpIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpEnetIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpEnetLtIndex"))
if mibBuilder.loadTexts: lpEnetLtRowStatusEntry.setStatus('mandatory')
lpEnetLtRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 3, 2, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpEnetLtRowStatus.setStatus('mandatory')
lpEnetLtComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 3, 2, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpEnetLtComponentName.setStatus('mandatory')
lpEnetLtStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 3, 2, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpEnetLtStorageType.setStatus('mandatory')
lpEnetLtIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 3, 2, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: lpEnetLtIndex.setStatus('mandatory')
lpEnetLtTopTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 3, 2, 20), )
if mibBuilder.loadTexts: lpEnetLtTopTable.setStatus('mandatory')
lpEnetLtTopEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 3, 2, 20, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-LogicalProcessorMIB", "lpIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpEnetIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpEnetLtIndex"))
if mibBuilder.loadTexts: lpEnetLtTopEntry.setStatus('mandatory')
lpEnetLtTData = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 3, 2, 20, 1, 1), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lpEnetLtTData.setStatus('mandatory')
lpEnetLtFrmCmp = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 3, 2, 2))
lpEnetLtFrmCmpRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 3, 2, 2, 1), )
if mibBuilder.loadTexts: lpEnetLtFrmCmpRowStatusTable.setStatus('mandatory')
lpEnetLtFrmCmpRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 3, 2, 2, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-LogicalProcessorMIB", "lpIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpEnetIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpEnetLtIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpEnetLtFrmCmpIndex"))
if mibBuilder.loadTexts: lpEnetLtFrmCmpRowStatusEntry.setStatus('mandatory')
lpEnetLtFrmCmpRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 3, 2, 2, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpEnetLtFrmCmpRowStatus.setStatus('mandatory')
lpEnetLtFrmCmpComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 3, 2, 2, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpEnetLtFrmCmpComponentName.setStatus('mandatory')
lpEnetLtFrmCmpStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 3, 2, 2, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpEnetLtFrmCmpStorageType.setStatus('mandatory')
lpEnetLtFrmCmpIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 3, 2, 2, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: lpEnetLtFrmCmpIndex.setStatus('mandatory')
lpEnetLtFrmCmpTopTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 3, 2, 2, 10), )
if mibBuilder.loadTexts: lpEnetLtFrmCmpTopTable.setStatus('mandatory')
lpEnetLtFrmCmpTopEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 3, 2, 2, 10, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-LogicalProcessorMIB", "lpIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpEnetIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpEnetLtIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpEnetLtFrmCmpIndex"))
if mibBuilder.loadTexts: lpEnetLtFrmCmpTopEntry.setStatus('mandatory')
lpEnetLtFrmCmpTData = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 3, 2, 2, 10, 1, 1), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lpEnetLtFrmCmpTData.setStatus('mandatory')
lpEnetLtFrmCpy = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 3, 2, 3))
lpEnetLtFrmCpyRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 3, 2, 3, 1), )
if mibBuilder.loadTexts: lpEnetLtFrmCpyRowStatusTable.setStatus('mandatory')
lpEnetLtFrmCpyRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 3, 2, 3, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-LogicalProcessorMIB", "lpIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpEnetIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpEnetLtIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpEnetLtFrmCpyIndex"))
if mibBuilder.loadTexts: lpEnetLtFrmCpyRowStatusEntry.setStatus('mandatory')
lpEnetLtFrmCpyRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 3, 2, 3, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpEnetLtFrmCpyRowStatus.setStatus('mandatory')
lpEnetLtFrmCpyComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 3, 2, 3, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpEnetLtFrmCpyComponentName.setStatus('mandatory')
lpEnetLtFrmCpyStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 3, 2, 3, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpEnetLtFrmCpyStorageType.setStatus('mandatory')
lpEnetLtFrmCpyIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 3, 2, 3, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: lpEnetLtFrmCpyIndex.setStatus('mandatory')
lpEnetLtFrmCpyTopTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 3, 2, 3, 10), )
if mibBuilder.loadTexts: lpEnetLtFrmCpyTopTable.setStatus('mandatory')
lpEnetLtFrmCpyTopEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 3, 2, 3, 10, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-LogicalProcessorMIB", "lpIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpEnetIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpEnetLtIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpEnetLtFrmCpyIndex"))
if mibBuilder.loadTexts: lpEnetLtFrmCpyTopEntry.setStatus('mandatory')
lpEnetLtFrmCpyTData = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 3, 2, 3, 10, 1, 1), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lpEnetLtFrmCpyTData.setStatus('mandatory')
lpEnetLtPrtCfg = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 3, 2, 4))
lpEnetLtPrtCfgRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 3, 2, 4, 1), )
if mibBuilder.loadTexts: lpEnetLtPrtCfgRowStatusTable.setStatus('mandatory')
lpEnetLtPrtCfgRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 3, 2, 4, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-LogicalProcessorMIB", "lpIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpEnetIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpEnetLtIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpEnetLtPrtCfgIndex"))
if mibBuilder.loadTexts: lpEnetLtPrtCfgRowStatusEntry.setStatus('mandatory')
lpEnetLtPrtCfgRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 3, 2, 4, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpEnetLtPrtCfgRowStatus.setStatus('mandatory')
lpEnetLtPrtCfgComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 3, 2, 4, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpEnetLtPrtCfgComponentName.setStatus('mandatory')
lpEnetLtPrtCfgStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 3, 2, 4, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpEnetLtPrtCfgStorageType.setStatus('mandatory')
lpEnetLtPrtCfgIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 3, 2, 4, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: lpEnetLtPrtCfgIndex.setStatus('mandatory')
lpEnetLtPrtCfgTopTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 3, 2, 4, 10), )
if mibBuilder.loadTexts: lpEnetLtPrtCfgTopTable.setStatus('mandatory')
lpEnetLtPrtCfgTopEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 3, 2, 4, 10, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-LogicalProcessorMIB", "lpIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpEnetIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpEnetLtIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpEnetLtPrtCfgIndex"))
if mibBuilder.loadTexts: lpEnetLtPrtCfgTopEntry.setStatus('mandatory')
lpEnetLtPrtCfgTData = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 3, 2, 4, 10, 1, 1), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lpEnetLtPrtCfgTData.setStatus('mandatory')
lpEnetLtFb = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 3, 2, 5))
lpEnetLtFbRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 3, 2, 5, 1), )
if mibBuilder.loadTexts: lpEnetLtFbRowStatusTable.setStatus('mandatory')
lpEnetLtFbRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 3, 2, 5, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-LogicalProcessorMIB", "lpIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpEnetIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpEnetLtIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpEnetLtFbIndex"))
if mibBuilder.loadTexts: lpEnetLtFbRowStatusEntry.setStatus('mandatory')
lpEnetLtFbRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 3, 2, 5, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpEnetLtFbRowStatus.setStatus('mandatory')
lpEnetLtFbComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 3, 2, 5, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpEnetLtFbComponentName.setStatus('mandatory')
lpEnetLtFbStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 3, 2, 5, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpEnetLtFbStorageType.setStatus('mandatory')
lpEnetLtFbIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 3, 2, 5, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: lpEnetLtFbIndex.setStatus('mandatory')
lpEnetLtFbTopTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 3, 2, 5, 20), )
if mibBuilder.loadTexts: lpEnetLtFbTopTable.setStatus('mandatory')
lpEnetLtFbTopEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 3, 2, 5, 20, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-LogicalProcessorMIB", "lpIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpEnetIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpEnetLtIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpEnetLtFbIndex"))
if mibBuilder.loadTexts: lpEnetLtFbTopEntry.setStatus('mandatory')
lpEnetLtFbTData = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 3, 2, 5, 20, 1, 1), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lpEnetLtFbTData.setStatus('mandatory')
lpEnetLtFbTxInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 3, 2, 5, 2))
lpEnetLtFbTxInfoRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 3, 2, 5, 2, 1), )
if mibBuilder.loadTexts: lpEnetLtFbTxInfoRowStatusTable.setStatus('mandatory')
lpEnetLtFbTxInfoRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 3, 2, 5, 2, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-LogicalProcessorMIB", "lpIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpEnetIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpEnetLtIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpEnetLtFbIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpEnetLtFbTxInfoIndex"))
if mibBuilder.loadTexts: lpEnetLtFbTxInfoRowStatusEntry.setStatus('mandatory')
lpEnetLtFbTxInfoRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 3, 2, 5, 2, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpEnetLtFbTxInfoRowStatus.setStatus('mandatory')
lpEnetLtFbTxInfoComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 3, 2, 5, 2, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpEnetLtFbTxInfoComponentName.setStatus('mandatory')
lpEnetLtFbTxInfoStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 3, 2, 5, 2, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpEnetLtFbTxInfoStorageType.setStatus('mandatory')
lpEnetLtFbTxInfoIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 3, 2, 5, 2, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: lpEnetLtFbTxInfoIndex.setStatus('mandatory')
lpEnetLtFbTxInfoTopTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 3, 2, 5, 2, 10), )
if mibBuilder.loadTexts: lpEnetLtFbTxInfoTopTable.setStatus('mandatory')
lpEnetLtFbTxInfoTopEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 3, 2, 5, 2, 10, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-LogicalProcessorMIB", "lpIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpEnetIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpEnetLtIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpEnetLtFbIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpEnetLtFbTxInfoIndex"))
if mibBuilder.loadTexts: lpEnetLtFbTxInfoTopEntry.setStatus('mandatory')
lpEnetLtFbTxInfoTData = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 3, 2, 5, 2, 10, 1, 1), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lpEnetLtFbTxInfoTData.setStatus('mandatory')
lpEnetLtFbFddiMac = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 3, 2, 5, 3))
lpEnetLtFbFddiMacRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 3, 2, 5, 3, 1), )
if mibBuilder.loadTexts: lpEnetLtFbFddiMacRowStatusTable.setStatus('mandatory')
lpEnetLtFbFddiMacRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 3, 2, 5, 3, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-LogicalProcessorMIB", "lpIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpEnetIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpEnetLtIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpEnetLtFbIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpEnetLtFbFddiMacIndex"))
if mibBuilder.loadTexts: lpEnetLtFbFddiMacRowStatusEntry.setStatus('mandatory')
lpEnetLtFbFddiMacRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 3, 2, 5, 3, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpEnetLtFbFddiMacRowStatus.setStatus('mandatory')
lpEnetLtFbFddiMacComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 3, 2, 5, 3, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpEnetLtFbFddiMacComponentName.setStatus('mandatory')
lpEnetLtFbFddiMacStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 3, 2, 5, 3, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpEnetLtFbFddiMacStorageType.setStatus('mandatory')
lpEnetLtFbFddiMacIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 3, 2, 5, 3, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: lpEnetLtFbFddiMacIndex.setStatus('mandatory')
lpEnetLtFbFddiMacTopTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 3, 2, 5, 3, 10), )
if mibBuilder.loadTexts: lpEnetLtFbFddiMacTopTable.setStatus('mandatory')
lpEnetLtFbFddiMacTopEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 3, 2, 5, 3, 10, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-LogicalProcessorMIB", "lpIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpEnetIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpEnetLtIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpEnetLtFbIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpEnetLtFbFddiMacIndex"))
if mibBuilder.loadTexts: lpEnetLtFbFddiMacTopEntry.setStatus('mandatory')
lpEnetLtFbFddiMacTData = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 3, 2, 5, 3, 10, 1, 1), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lpEnetLtFbFddiMacTData.setStatus('mandatory')
lpEnetLtFbMacEnet = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 3, 2, 5, 4))
lpEnetLtFbMacEnetRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 3, 2, 5, 4, 1), )
if mibBuilder.loadTexts: lpEnetLtFbMacEnetRowStatusTable.setStatus('mandatory')
lpEnetLtFbMacEnetRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 3, 2, 5, 4, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-LogicalProcessorMIB", "lpIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpEnetIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpEnetLtIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpEnetLtFbIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpEnetLtFbMacEnetIndex"))
if mibBuilder.loadTexts: lpEnetLtFbMacEnetRowStatusEntry.setStatus('mandatory')
lpEnetLtFbMacEnetRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 3, 2, 5, 4, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpEnetLtFbMacEnetRowStatus.setStatus('mandatory')
lpEnetLtFbMacEnetComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 3, 2, 5, 4, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpEnetLtFbMacEnetComponentName.setStatus('mandatory')
lpEnetLtFbMacEnetStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 3, 2, 5, 4, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpEnetLtFbMacEnetStorageType.setStatus('mandatory')
lpEnetLtFbMacEnetIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 3, 2, 5, 4, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: lpEnetLtFbMacEnetIndex.setStatus('mandatory')
lpEnetLtFbMacEnetTopTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 3, 2, 5, 4, 10), )
if mibBuilder.loadTexts: lpEnetLtFbMacEnetTopTable.setStatus('mandatory')
lpEnetLtFbMacEnetTopEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 3, 2, 5, 4, 10, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-LogicalProcessorMIB", "lpIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpEnetIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpEnetLtIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpEnetLtFbIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpEnetLtFbMacEnetIndex"))
if mibBuilder.loadTexts: lpEnetLtFbMacEnetTopEntry.setStatus('mandatory')
lpEnetLtFbMacEnetTData = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 3, 2, 5, 4, 10, 1, 1), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lpEnetLtFbMacEnetTData.setStatus('mandatory')
lpEnetLtFbMacTr = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 3, 2, 5, 5))
lpEnetLtFbMacTrRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 3, 2, 5, 5, 1), )
if mibBuilder.loadTexts: lpEnetLtFbMacTrRowStatusTable.setStatus('mandatory')
lpEnetLtFbMacTrRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 3, 2, 5, 5, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-LogicalProcessorMIB", "lpIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpEnetIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpEnetLtIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpEnetLtFbIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpEnetLtFbMacTrIndex"))
if mibBuilder.loadTexts: lpEnetLtFbMacTrRowStatusEntry.setStatus('mandatory')
lpEnetLtFbMacTrRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 3, 2, 5, 5, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpEnetLtFbMacTrRowStatus.setStatus('mandatory')
lpEnetLtFbMacTrComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 3, 2, 5, 5, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpEnetLtFbMacTrComponentName.setStatus('mandatory')
lpEnetLtFbMacTrStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 3, 2, 5, 5, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpEnetLtFbMacTrStorageType.setStatus('mandatory')
lpEnetLtFbMacTrIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 3, 2, 5, 5, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: lpEnetLtFbMacTrIndex.setStatus('mandatory')
lpEnetLtFbMacTrTopTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 3, 2, 5, 5, 10), )
if mibBuilder.loadTexts: lpEnetLtFbMacTrTopTable.setStatus('mandatory')
lpEnetLtFbMacTrTopEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 3, 2, 5, 5, 10, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-LogicalProcessorMIB", "lpIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpEnetIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpEnetLtIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpEnetLtFbIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpEnetLtFbMacTrIndex"))
if mibBuilder.loadTexts: lpEnetLtFbMacTrTopEntry.setStatus('mandatory')
lpEnetLtFbMacTrTData = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 3, 2, 5, 5, 10, 1, 1), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lpEnetLtFbMacTrTData.setStatus('mandatory')
lpEnetLtFbData = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 3, 2, 5, 6))
lpEnetLtFbDataRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 3, 2, 5, 6, 1), )
if mibBuilder.loadTexts: lpEnetLtFbDataRowStatusTable.setStatus('mandatory')
lpEnetLtFbDataRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 3, 2, 5, 6, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-LogicalProcessorMIB", "lpIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpEnetIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpEnetLtIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpEnetLtFbIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpEnetLtFbDataIndex"))
if mibBuilder.loadTexts: lpEnetLtFbDataRowStatusEntry.setStatus('mandatory')
lpEnetLtFbDataRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 3, 2, 5, 6, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpEnetLtFbDataRowStatus.setStatus('mandatory')
lpEnetLtFbDataComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 3, 2, 5, 6, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpEnetLtFbDataComponentName.setStatus('mandatory')
lpEnetLtFbDataStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 3, 2, 5, 6, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpEnetLtFbDataStorageType.setStatus('mandatory')
lpEnetLtFbDataIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 3, 2, 5, 6, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: lpEnetLtFbDataIndex.setStatus('mandatory')
lpEnetLtFbDataTopTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 3, 2, 5, 6, 10), )
if mibBuilder.loadTexts: lpEnetLtFbDataTopTable.setStatus('mandatory')
lpEnetLtFbDataTopEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 3, 2, 5, 6, 10, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-LogicalProcessorMIB", "lpIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpEnetIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpEnetLtIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpEnetLtFbIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpEnetLtFbDataIndex"))
if mibBuilder.loadTexts: lpEnetLtFbDataTopEntry.setStatus('mandatory')
lpEnetLtFbDataTData = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 3, 2, 5, 6, 10, 1, 1), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lpEnetLtFbDataTData.setStatus('mandatory')
lpEnetLtFbIpH = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 3, 2, 5, 7))
lpEnetLtFbIpHRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 3, 2, 5, 7, 1), )
if mibBuilder.loadTexts: lpEnetLtFbIpHRowStatusTable.setStatus('mandatory')
lpEnetLtFbIpHRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 3, 2, 5, 7, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-LogicalProcessorMIB", "lpIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpEnetIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpEnetLtIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpEnetLtFbIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpEnetLtFbIpHIndex"))
if mibBuilder.loadTexts: lpEnetLtFbIpHRowStatusEntry.setStatus('mandatory')
lpEnetLtFbIpHRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 3, 2, 5, 7, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpEnetLtFbIpHRowStatus.setStatus('mandatory')
lpEnetLtFbIpHComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 3, 2, 5, 7, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpEnetLtFbIpHComponentName.setStatus('mandatory')
lpEnetLtFbIpHStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 3, 2, 5, 7, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpEnetLtFbIpHStorageType.setStatus('mandatory')
lpEnetLtFbIpHIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 3, 2, 5, 7, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: lpEnetLtFbIpHIndex.setStatus('mandatory')
lpEnetLtFbIpHTopTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 3, 2, 5, 7, 10), )
if mibBuilder.loadTexts: lpEnetLtFbIpHTopTable.setStatus('mandatory')
lpEnetLtFbIpHTopEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 3, 2, 5, 7, 10, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-LogicalProcessorMIB", "lpIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpEnetIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpEnetLtIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpEnetLtFbIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpEnetLtFbIpHIndex"))
if mibBuilder.loadTexts: lpEnetLtFbIpHTopEntry.setStatus('mandatory')
lpEnetLtFbIpHTData = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 3, 2, 5, 7, 10, 1, 1), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lpEnetLtFbIpHTData.setStatus('mandatory')
lpEnetLtFbLlch = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 3, 2, 5, 8))
lpEnetLtFbLlchRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 3, 2, 5, 8, 1), )
if mibBuilder.loadTexts: lpEnetLtFbLlchRowStatusTable.setStatus('mandatory')
lpEnetLtFbLlchRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 3, 2, 5, 8, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-LogicalProcessorMIB", "lpIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpEnetIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpEnetLtIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpEnetLtFbIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpEnetLtFbLlchIndex"))
if mibBuilder.loadTexts: lpEnetLtFbLlchRowStatusEntry.setStatus('mandatory')
lpEnetLtFbLlchRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 3, 2, 5, 8, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpEnetLtFbLlchRowStatus.setStatus('mandatory')
lpEnetLtFbLlchComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 3, 2, 5, 8, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpEnetLtFbLlchComponentName.setStatus('mandatory')
lpEnetLtFbLlchStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 3, 2, 5, 8, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpEnetLtFbLlchStorageType.setStatus('mandatory')
lpEnetLtFbLlchIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 3, 2, 5, 8, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: lpEnetLtFbLlchIndex.setStatus('mandatory')
lpEnetLtFbLlchTopTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 3, 2, 5, 8, 10), )
if mibBuilder.loadTexts: lpEnetLtFbLlchTopTable.setStatus('mandatory')
lpEnetLtFbLlchTopEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 3, 2, 5, 8, 10, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-LogicalProcessorMIB", "lpIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpEnetIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpEnetLtIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpEnetLtFbIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpEnetLtFbLlchIndex"))
if mibBuilder.loadTexts: lpEnetLtFbLlchTopEntry.setStatus('mandatory')
lpEnetLtFbLlchTData = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 3, 2, 5, 8, 10, 1, 1), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lpEnetLtFbLlchTData.setStatus('mandatory')
lpEnetLtFbAppleH = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 3, 2, 5, 9))
lpEnetLtFbAppleHRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 3, 2, 5, 9, 1), )
if mibBuilder.loadTexts: lpEnetLtFbAppleHRowStatusTable.setStatus('mandatory')
lpEnetLtFbAppleHRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 3, 2, 5, 9, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-LogicalProcessorMIB", "lpIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpEnetIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpEnetLtIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpEnetLtFbIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpEnetLtFbAppleHIndex"))
if mibBuilder.loadTexts: lpEnetLtFbAppleHRowStatusEntry.setStatus('mandatory')
lpEnetLtFbAppleHRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 3, 2, 5, 9, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpEnetLtFbAppleHRowStatus.setStatus('mandatory')
lpEnetLtFbAppleHComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 3, 2, 5, 9, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpEnetLtFbAppleHComponentName.setStatus('mandatory')
lpEnetLtFbAppleHStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 3, 2, 5, 9, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpEnetLtFbAppleHStorageType.setStatus('mandatory')
lpEnetLtFbAppleHIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 3, 2, 5, 9, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: lpEnetLtFbAppleHIndex.setStatus('mandatory')
lpEnetLtFbAppleHTopTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 3, 2, 5, 9, 10), )
if mibBuilder.loadTexts: lpEnetLtFbAppleHTopTable.setStatus('mandatory')
lpEnetLtFbAppleHTopEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 3, 2, 5, 9, 10, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-LogicalProcessorMIB", "lpIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpEnetIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpEnetLtIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpEnetLtFbIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpEnetLtFbAppleHIndex"))
if mibBuilder.loadTexts: lpEnetLtFbAppleHTopEntry.setStatus('mandatory')
lpEnetLtFbAppleHTData = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 3, 2, 5, 9, 10, 1, 1), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lpEnetLtFbAppleHTData.setStatus('mandatory')
lpEnetLtFbIpxH = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 3, 2, 5, 10))
lpEnetLtFbIpxHRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 3, 2, 5, 10, 1), )
if mibBuilder.loadTexts: lpEnetLtFbIpxHRowStatusTable.setStatus('mandatory')
lpEnetLtFbIpxHRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 3, 2, 5, 10, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-LogicalProcessorMIB", "lpIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpEnetIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpEnetLtIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpEnetLtFbIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpEnetLtFbIpxHIndex"))
if mibBuilder.loadTexts: lpEnetLtFbIpxHRowStatusEntry.setStatus('mandatory')
lpEnetLtFbIpxHRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 3, 2, 5, 10, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpEnetLtFbIpxHRowStatus.setStatus('mandatory')
lpEnetLtFbIpxHComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 3, 2, 5, 10, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpEnetLtFbIpxHComponentName.setStatus('mandatory')
lpEnetLtFbIpxHStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 3, 2, 5, 10, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpEnetLtFbIpxHStorageType.setStatus('mandatory')
lpEnetLtFbIpxHIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 3, 2, 5, 10, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: lpEnetLtFbIpxHIndex.setStatus('mandatory')
lpEnetLtFbIpxHTopTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 3, 2, 5, 10, 10), )
if mibBuilder.loadTexts: lpEnetLtFbIpxHTopTable.setStatus('mandatory')
lpEnetLtFbIpxHTopEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 3, 2, 5, 10, 10, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-LogicalProcessorMIB", "lpIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpEnetIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpEnetLtIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpEnetLtFbIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpEnetLtFbIpxHIndex"))
if mibBuilder.loadTexts: lpEnetLtFbIpxHTopEntry.setStatus('mandatory')
lpEnetLtFbIpxHTData = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 3, 2, 5, 10, 10, 1, 1), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lpEnetLtFbIpxHTData.setStatus('mandatory')
lpEnetLtCntl = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 3, 2, 6))
lpEnetLtCntlRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 3, 2, 6, 1), )
if mibBuilder.loadTexts: lpEnetLtCntlRowStatusTable.setStatus('mandatory')
lpEnetLtCntlRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 3, 2, 6, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-LogicalProcessorMIB", "lpIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpEnetIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpEnetLtIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpEnetLtCntlIndex"))
if mibBuilder.loadTexts: lpEnetLtCntlRowStatusEntry.setStatus('mandatory')
lpEnetLtCntlRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 3, 2, 6, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpEnetLtCntlRowStatus.setStatus('mandatory')
lpEnetLtCntlComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 3, 2, 6, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpEnetLtCntlComponentName.setStatus('mandatory')
lpEnetLtCntlStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 3, 2, 6, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpEnetLtCntlStorageType.setStatus('mandatory')
lpEnetLtCntlIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 3, 2, 6, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: lpEnetLtCntlIndex.setStatus('mandatory')
lpEnetLtCntlTopTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 3, 2, 6, 10), )
if mibBuilder.loadTexts: lpEnetLtCntlTopTable.setStatus('mandatory')
lpEnetLtCntlTopEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 3, 2, 6, 10, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-LogicalProcessorMIB", "lpIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpEnetIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpEnetLtIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpEnetLtCntlIndex"))
if mibBuilder.loadTexts: lpEnetLtCntlTopEntry.setStatus('mandatory')
lpEnetLtCntlTData = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 3, 2, 6, 10, 1, 1), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lpEnetLtCntlTData.setStatus('mandatory')
lpEnetTest = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 3, 5))
lpEnetTestRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 3, 5, 1), )
if mibBuilder.loadTexts: lpEnetTestRowStatusTable.setStatus('mandatory')
lpEnetTestRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 3, 5, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-LogicalProcessorMIB", "lpIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpEnetIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpEnetTestIndex"))
if mibBuilder.loadTexts: lpEnetTestRowStatusEntry.setStatus('mandatory')
lpEnetTestRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 3, 5, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpEnetTestRowStatus.setStatus('mandatory')
lpEnetTestComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 3, 5, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpEnetTestComponentName.setStatus('mandatory')
lpEnetTestStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 3, 5, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpEnetTestStorageType.setStatus('mandatory')
lpEnetTestIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 3, 5, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: lpEnetTestIndex.setStatus('mandatory')
lpEnetTestPTOTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 3, 5, 10), )
if mibBuilder.loadTexts: lpEnetTestPTOTable.setStatus('mandatory')
lpEnetTestPTOEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 3, 5, 10, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-LogicalProcessorMIB", "lpIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpEnetIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpEnetTestIndex"))
if mibBuilder.loadTexts: lpEnetTestPTOEntry.setStatus('mandatory')
lpEnetTestType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 3, 5, 10, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 257, 258, 259, 260, 263, 264, 265, 266, 267, 268))).clone(namedValues=NamedValues(("onCard", 0), ("normal", 1), ("wrapA", 257), ("wrapB", 258), ("thruA", 259), ("thruB", 260), ("extWrapA", 263), ("extWrapB", 264), ("extThruA", 265), ("extThruB", 266), ("extWrapAB", 267), ("extWrapBA", 268)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lpEnetTestType.setStatus('mandatory')
lpEnetTestFrmSize = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 3, 5, 10, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(4, 4096)).clone(1024)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lpEnetTestFrmSize.setStatus('mandatory')
lpEnetTestDuration = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 3, 5, 10, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 30240)).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lpEnetTestDuration.setStatus('mandatory')
lpEnetTestResultsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 3, 5, 11), )
if mibBuilder.loadTexts: lpEnetTestResultsTable.setStatus('mandatory')
lpEnetTestResultsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 3, 5, 11, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-LogicalProcessorMIB", "lpIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpEnetIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpEnetTestIndex"))
if mibBuilder.loadTexts: lpEnetTestResultsEntry.setStatus('mandatory')
lpEnetTestElapsedTime = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 3, 5, 11, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpEnetTestElapsedTime.setStatus('mandatory')
lpEnetTestTimeRemaining = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 3, 5, 11, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpEnetTestTimeRemaining.setStatus('mandatory')
lpEnetTestCauseOfTermination = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 3, 5, 11, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("testTimeExpired", 0), ("stoppedByOperator", 1), ("unknown", 2), ("neverStarted", 3), ("testRunning", 4))).clone('neverStarted')).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpEnetTestCauseOfTermination.setStatus('mandatory')
lpEnetTestFrmTx = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 3, 5, 11, 1, 7), PassportCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpEnetTestFrmTx.setStatus('mandatory')
lpEnetTestBitsTx = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 3, 5, 11, 1, 8), PassportCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpEnetTestBitsTx.setStatus('mandatory')
lpEnetTestFrmRx = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 3, 5, 11, 1, 9), PassportCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpEnetTestFrmRx.setStatus('mandatory')
lpEnetTestBitsRx = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 3, 5, 11, 1, 10), PassportCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpEnetTestBitsRx.setStatus('mandatory')
lpEnetTestErroredFrmRx = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 3, 5, 11, 1, 11), PassportCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpEnetTestErroredFrmRx.setStatus('mandatory')
lpFi = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 4))
lpFiRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 4, 1), )
if mibBuilder.loadTexts: lpFiRowStatusTable.setStatus('mandatory')
lpFiRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 4, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-LogicalProcessorMIB", "lpIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpFiIndex"))
if mibBuilder.loadTexts: lpFiRowStatusEntry.setStatus('mandatory')
lpFiRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 4, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lpFiRowStatus.setStatus('mandatory')
lpFiComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 4, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpFiComponentName.setStatus('mandatory')
lpFiStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 4, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpFiStorageType.setStatus('mandatory')
lpFiIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 4, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 0)))
if mibBuilder.loadTexts: lpFiIndex.setStatus('mandatory')
lpFiCidDataTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 4, 10), )
if mibBuilder.loadTexts: lpFiCidDataTable.setStatus('mandatory')
lpFiCidDataEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 4, 10, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-LogicalProcessorMIB", "lpIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpFiIndex"))
if mibBuilder.loadTexts: lpFiCidDataEntry.setStatus('mandatory')
lpFiCustomerIdentifier = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 4, 10, 1, 1), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 8191), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lpFiCustomerIdentifier.setStatus('mandatory')
lpFiIfEntryTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 4, 11), )
if mibBuilder.loadTexts: lpFiIfEntryTable.setStatus('mandatory')
lpFiIfEntryEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 4, 11, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-LogicalProcessorMIB", "lpIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpFiIndex"))
if mibBuilder.loadTexts: lpFiIfEntryEntry.setStatus('mandatory')
lpFiIfAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 4, 11, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("testing", 3))).clone('up')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lpFiIfAdminStatus.setStatus('mandatory')
lpFiIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 4, 11, 1, 2), InterfaceIndex().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpFiIfIndex.setStatus('mandatory')
lpFiSmtProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 4, 12), )
if mibBuilder.loadTexts: lpFiSmtProvTable.setStatus('mandatory')
lpFiSmtProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 4, 12, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-LogicalProcessorMIB", "lpIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpFiIndex"))
if mibBuilder.loadTexts: lpFiSmtProvEntry.setStatus('mandatory')
lpFiUserData = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 4, 12, 1, 1), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(0, 32)).clone(hexValue="46444449")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lpFiUserData.setStatus('mandatory')
lpFiAcceptAa = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 4, 12, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lpFiAcceptAa.setStatus('mandatory')
lpFiAcceptBb = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 4, 12, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lpFiAcceptBb.setStatus('mandatory')
lpFiAcceptAs = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 4, 12, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lpFiAcceptAs.setStatus('mandatory')
lpFiAcceptBs = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 4, 12, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lpFiAcceptBs.setStatus('mandatory')
lpFiAcceptAm = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 4, 12, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lpFiAcceptAm.setStatus('mandatory')
lpFiAcceptBm = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 4, 12, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lpFiAcceptBm.setStatus('mandatory')
lpFiUseThruBa = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 4, 12, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lpFiUseThruBa.setStatus('mandatory')
lpFiNeighborNotifyInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 4, 12, 1, 10), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(2, 30)).clone(30)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lpFiNeighborNotifyInterval.setStatus('mandatory')
lpFiStatusReportPolicy = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 4, 12, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("true", 1), ("false", 2))).clone('true')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lpFiStatusReportPolicy.setStatus('mandatory')
lpFiTraceMaxExpirationTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 4, 12, 1, 12), FddiTimeMilli().subtype(subtypeSpec=ValueRangeConstraint(0, 1000000)).clone(7000)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lpFiTraceMaxExpirationTimer.setStatus('mandatory')
lpFiApplicationFramerName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 4, 12, 1, 13), Link()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lpFiApplicationFramerName.setStatus('mandatory')
lpFiMacProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 4, 13), )
if mibBuilder.loadTexts: lpFiMacProvTable.setStatus('mandatory')
lpFiMacProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 4, 13, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-LogicalProcessorMIB", "lpIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpFiIndex"))
if mibBuilder.loadTexts: lpFiMacProvEntry.setStatus('mandatory')
lpFiTokenRequestTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 4, 13, 1, 1), FddiTimeNano().subtype(subtypeSpec=ValueRangeConstraint(20480, 1340000000)).clone(165290000)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lpFiTokenRequestTimer.setStatus('mandatory')
lpFiTokenMaxTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 4, 13, 1, 2), FddiTimeNano().subtype(subtypeSpec=ValueRangeConstraint(40960, 1342200000)).clone(167770000)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lpFiTokenMaxTimer.setStatus('mandatory')
lpFiValidTransmissionTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 4, 13, 1, 3), FddiTimeNano().subtype(subtypeSpec=ValueRangeConstraint(40960, 1342200000)).clone(2621400)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lpFiValidTransmissionTimer.setStatus('mandatory')
lpFiAdminInfoTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 4, 14), )
if mibBuilder.loadTexts: lpFiAdminInfoTable.setStatus('mandatory')
lpFiAdminInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 4, 14, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-LogicalProcessorMIB", "lpIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpFiIndex"))
if mibBuilder.loadTexts: lpFiAdminInfoEntry.setStatus('mandatory')
lpFiVendor = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 4, 14, 1, 1), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(0, 20))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lpFiVendor.setStatus('mandatory')
lpFiCommentText = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 4, 14, 1, 2), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(0, 60))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lpFiCommentText.setStatus('mandatory')
lpFiStateTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 4, 16), )
if mibBuilder.loadTexts: lpFiStateTable.setStatus('mandatory')
lpFiStateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 4, 16, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-LogicalProcessorMIB", "lpIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpFiIndex"))
if mibBuilder.loadTexts: lpFiStateEntry.setStatus('mandatory')
lpFiAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 4, 16, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("locked", 0), ("unlocked", 1), ("shuttingDown", 2))).clone('unlocked')).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpFiAdminState.setStatus('mandatory')
lpFiOperationalState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 4, 16, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1))).clone('disabled')).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpFiOperationalState.setStatus('mandatory')
lpFiUsageState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 4, 16, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("idle", 0), ("active", 1), ("busy", 2))).clone('idle')).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpFiUsageState.setStatus('mandatory')
lpFiOperStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 4, 17), )
if mibBuilder.loadTexts: lpFiOperStatusTable.setStatus('mandatory')
lpFiOperStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 4, 17, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-LogicalProcessorMIB", "lpIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpFiIndex"))
if mibBuilder.loadTexts: lpFiOperStatusEntry.setStatus('mandatory')
lpFiSnmpOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 4, 17, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("testing", 3))).clone('up')).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpFiSnmpOperStatus.setStatus('mandatory')
lpFiSmtOperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 4, 18), )
if mibBuilder.loadTexts: lpFiSmtOperTable.setStatus('mandatory')
lpFiSmtOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 4, 18, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-LogicalProcessorMIB", "lpIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpFiIndex"))
if mibBuilder.loadTexts: lpFiSmtOperEntry.setStatus('mandatory')
lpFiVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 4, 18, 1, 1), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpFiVersion.setStatus('mandatory')
lpFiBypassPresent = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 4, 18, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("true", 1), ("false", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpFiBypassPresent.setStatus('mandatory')
lpFiEcmState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 4, 18, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("out", 1), ("in", 2), ("trace", 3), ("leave", 4), ("pathTest", 5), ("insert", 6), ("check", 7), ("deinsert", 8)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpFiEcmState.setStatus('mandatory')
lpFiCfState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 4, 18, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13))).clone(namedValues=NamedValues(("isolated", 1), ("localA", 2), ("localB", 3), ("localAB", 4), ("localS", 5), ("wrapA", 6), ("wrapB", 7), ("wrapAB", 8), ("wrapS", 9), ("cWrapA", 10), ("cWrapB", 11), ("cWrapS", 12), ("thru", 13)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpFiCfState.setStatus('mandatory')
lpFiMacOperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 4, 19), )
if mibBuilder.loadTexts: lpFiMacOperTable.setStatus('mandatory')
lpFiMacOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 4, 19, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-LogicalProcessorMIB", "lpIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpFiIndex"))
if mibBuilder.loadTexts: lpFiMacOperEntry.setStatus('mandatory')
lpFiRingLatency = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 4, 19, 1, 1), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(1280, 1342000000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpFiRingLatency.setStatus('mandatory')
lpFiMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 4, 19, 1, 10), FddiMACLongAddressType().subtype(subtypeSpec=ValueSizeConstraint(6, 6)).setFixedLength(6)).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpFiMacAddress.setStatus('mandatory')
lpFiUpstreamNeighbor = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 4, 19, 1, 11), FddiMACLongAddressType().subtype(subtypeSpec=ValueSizeConstraint(6, 6)).setFixedLength(6)).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpFiUpstreamNeighbor.setStatus('mandatory')
lpFiDownstreamNeighbor = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 4, 19, 1, 12), FddiMACLongAddressType().subtype(subtypeSpec=ValueSizeConstraint(6, 6)).setFixedLength(6)).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpFiDownstreamNeighbor.setStatus('mandatory')
lpFiOldUpstreamNeighbor = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 4, 19, 1, 13), FddiMACLongAddressType().subtype(subtypeSpec=ValueSizeConstraint(6, 6)).setFixedLength(6)).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpFiOldUpstreamNeighbor.setStatus('mandatory')
lpFiOldDownstreamNeighbor = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 4, 19, 1, 14), FddiMACLongAddressType().subtype(subtypeSpec=ValueSizeConstraint(6, 6)).setFixedLength(6)).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpFiOldDownstreamNeighbor.setStatus('mandatory')
lpFiDupAddressTest = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 4, 19, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("notDone", 1), ("pass", 2), ("fail", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpFiDupAddressTest.setStatus('mandatory')
lpFiTokenNegotiatedTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 4, 19, 1, 18), FddiTimeNano().subtype(subtypeSpec=ValueRangeConstraint(80, 1340000000)).clone(167772000)).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpFiTokenNegotiatedTimer.setStatus('mandatory')
lpFiFrameCounts = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 4, 19, 1, 19), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpFiFrameCounts.setStatus('mandatory')
lpFiCopiedCounts = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 4, 19, 1, 20), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpFiCopiedCounts.setStatus('mandatory')
lpFiTransmitCounts = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 4, 19, 1, 21), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpFiTransmitCounts.setStatus('mandatory')
lpFiErrorCounts = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 4, 19, 1, 22), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpFiErrorCounts.setStatus('mandatory')
lpFiLostCounts = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 4, 19, 1, 23), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpFiLostCounts.setStatus('mandatory')
lpFiRmtState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 4, 19, 1, 25), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("isolated", 1), ("nonOp", 2), ("ringOp", 3), ("detect", 4), ("nonOpDup", 5), ("ringOpDup", 6), ("directed", 7), ("trace", 8)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpFiRmtState.setStatus('mandatory')
lpFiFrameErrorFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 4, 19, 1, 28), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("true", 1), ("false", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpFiFrameErrorFlag.setStatus('mandatory')
lpFiMacCOperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 4, 20), )
if mibBuilder.loadTexts: lpFiMacCOperTable.setStatus('mandatory')
lpFiMacCOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 4, 20, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-LogicalProcessorMIB", "lpIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpFiIndex"))
if mibBuilder.loadTexts: lpFiMacCOperEntry.setStatus('mandatory')
lpFiTokenCounts = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 4, 20, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpFiTokenCounts.setStatus('mandatory')
lpFiTvxExpiredCounts = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 4, 20, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpFiTvxExpiredCounts.setStatus('mandatory')
lpFiNotCopiedCounts = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 4, 20, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpFiNotCopiedCounts.setStatus('mandatory')
lpFiLateCounts = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 4, 20, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpFiLateCounts.setStatus('mandatory')
lpFiRingOpCounts = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 4, 20, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpFiRingOpCounts.setStatus('mandatory')
lpFiNcMacOperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 4, 26), )
if mibBuilder.loadTexts: lpFiNcMacOperTable.setStatus('mandatory')
lpFiNcMacOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 4, 26, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-LogicalProcessorMIB", "lpIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpFiIndex"))
if mibBuilder.loadTexts: lpFiNcMacOperEntry.setStatus('mandatory')
lpFiNcMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 4, 26, 1, 1), MacAddress().subtype(subtypeSpec=ValueSizeConstraint(6, 6)).setFixedLength(6)).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpFiNcMacAddress.setStatus('mandatory')
lpFiNcUpstreamNeighbor = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 4, 26, 1, 2), MacAddress().subtype(subtypeSpec=ValueSizeConstraint(6, 6)).setFixedLength(6)).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpFiNcUpstreamNeighbor.setStatus('mandatory')
lpFiNcDownstreamNeighbor = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 4, 26, 1, 3), MacAddress().subtype(subtypeSpec=ValueSizeConstraint(6, 6)).setFixedLength(6)).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpFiNcDownstreamNeighbor.setStatus('mandatory')
lpFiNcOldUpstreamNeighbor = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 4, 26, 1, 4), MacAddress().subtype(subtypeSpec=ValueSizeConstraint(6, 6)).setFixedLength(6)).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpFiNcOldUpstreamNeighbor.setStatus('mandatory')
lpFiNcOldDownstreamNeighbor = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 4, 26, 1, 5), MacAddress().subtype(subtypeSpec=ValueSizeConstraint(6, 6)).setFixedLength(6)).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpFiNcOldDownstreamNeighbor.setStatus('mandatory')
lpFiLt = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 4, 2))
lpFiLtRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 4, 2, 1), )
if mibBuilder.loadTexts: lpFiLtRowStatusTable.setStatus('mandatory')
lpFiLtRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 4, 2, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-LogicalProcessorMIB", "lpIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpFiIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpFiLtIndex"))
if mibBuilder.loadTexts: lpFiLtRowStatusEntry.setStatus('mandatory')
lpFiLtRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 4, 2, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpFiLtRowStatus.setStatus('mandatory')
lpFiLtComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 4, 2, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpFiLtComponentName.setStatus('mandatory')
lpFiLtStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 4, 2, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpFiLtStorageType.setStatus('mandatory')
lpFiLtIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 4, 2, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: lpFiLtIndex.setStatus('mandatory')
lpFiLtTopTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 4, 2, 20), )
if mibBuilder.loadTexts: lpFiLtTopTable.setStatus('mandatory')
lpFiLtTopEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 4, 2, 20, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-LogicalProcessorMIB", "lpIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpFiIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpFiLtIndex"))
if mibBuilder.loadTexts: lpFiLtTopEntry.setStatus('mandatory')
lpFiLtTData = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 4, 2, 20, 1, 1), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lpFiLtTData.setStatus('mandatory')
lpFiLtFrmCmp = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 4, 2, 2))
lpFiLtFrmCmpRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 4, 2, 2, 1), )
if mibBuilder.loadTexts: lpFiLtFrmCmpRowStatusTable.setStatus('mandatory')
lpFiLtFrmCmpRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 4, 2, 2, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-LogicalProcessorMIB", "lpIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpFiIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpFiLtIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpFiLtFrmCmpIndex"))
if mibBuilder.loadTexts: lpFiLtFrmCmpRowStatusEntry.setStatus('mandatory')
lpFiLtFrmCmpRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 4, 2, 2, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpFiLtFrmCmpRowStatus.setStatus('mandatory')
lpFiLtFrmCmpComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 4, 2, 2, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpFiLtFrmCmpComponentName.setStatus('mandatory')
lpFiLtFrmCmpStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 4, 2, 2, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpFiLtFrmCmpStorageType.setStatus('mandatory')
lpFiLtFrmCmpIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 4, 2, 2, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: lpFiLtFrmCmpIndex.setStatus('mandatory')
lpFiLtFrmCmpTopTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 4, 2, 2, 10), )
if mibBuilder.loadTexts: lpFiLtFrmCmpTopTable.setStatus('mandatory')
lpFiLtFrmCmpTopEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 4, 2, 2, 10, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-LogicalProcessorMIB", "lpIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpFiIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpFiLtIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpFiLtFrmCmpIndex"))
if mibBuilder.loadTexts: lpFiLtFrmCmpTopEntry.setStatus('mandatory')
lpFiLtFrmCmpTData = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 4, 2, 2, 10, 1, 1), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lpFiLtFrmCmpTData.setStatus('mandatory')
lpFiLtFrmCpy = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 4, 2, 3))
lpFiLtFrmCpyRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 4, 2, 3, 1), )
if mibBuilder.loadTexts: lpFiLtFrmCpyRowStatusTable.setStatus('mandatory')
lpFiLtFrmCpyRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 4, 2, 3, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-LogicalProcessorMIB", "lpIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpFiIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpFiLtIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpFiLtFrmCpyIndex"))
if mibBuilder.loadTexts: lpFiLtFrmCpyRowStatusEntry.setStatus('mandatory')
lpFiLtFrmCpyRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 4, 2, 3, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpFiLtFrmCpyRowStatus.setStatus('mandatory')
lpFiLtFrmCpyComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 4, 2, 3, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpFiLtFrmCpyComponentName.setStatus('mandatory')
lpFiLtFrmCpyStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 4, 2, 3, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpFiLtFrmCpyStorageType.setStatus('mandatory')
lpFiLtFrmCpyIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 4, 2, 3, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: lpFiLtFrmCpyIndex.setStatus('mandatory')
lpFiLtFrmCpyTopTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 4, 2, 3, 10), )
if mibBuilder.loadTexts: lpFiLtFrmCpyTopTable.setStatus('mandatory')
lpFiLtFrmCpyTopEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 4, 2, 3, 10, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-LogicalProcessorMIB", "lpIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpFiIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpFiLtIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpFiLtFrmCpyIndex"))
if mibBuilder.loadTexts: lpFiLtFrmCpyTopEntry.setStatus('mandatory')
lpFiLtFrmCpyTData = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 4, 2, 3, 10, 1, 1), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lpFiLtFrmCpyTData.setStatus('mandatory')
lpFiLtPrtCfg = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 4, 2, 4))
lpFiLtPrtCfgRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 4, 2, 4, 1), )
if mibBuilder.loadTexts: lpFiLtPrtCfgRowStatusTable.setStatus('mandatory')
lpFiLtPrtCfgRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 4, 2, 4, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-LogicalProcessorMIB", "lpIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpFiIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpFiLtIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpFiLtPrtCfgIndex"))
if mibBuilder.loadTexts: lpFiLtPrtCfgRowStatusEntry.setStatus('mandatory')
lpFiLtPrtCfgRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 4, 2, 4, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpFiLtPrtCfgRowStatus.setStatus('mandatory')
lpFiLtPrtCfgComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 4, 2, 4, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpFiLtPrtCfgComponentName.setStatus('mandatory')
lpFiLtPrtCfgStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 4, 2, 4, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpFiLtPrtCfgStorageType.setStatus('mandatory')
lpFiLtPrtCfgIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 4, 2, 4, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: lpFiLtPrtCfgIndex.setStatus('mandatory')
lpFiLtPrtCfgTopTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 4, 2, 4, 10), )
if mibBuilder.loadTexts: lpFiLtPrtCfgTopTable.setStatus('mandatory')
lpFiLtPrtCfgTopEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 4, 2, 4, 10, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-LogicalProcessorMIB", "lpIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpFiIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpFiLtIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpFiLtPrtCfgIndex"))
if mibBuilder.loadTexts: lpFiLtPrtCfgTopEntry.setStatus('mandatory')
lpFiLtPrtCfgTData = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 4, 2, 4, 10, 1, 1), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lpFiLtPrtCfgTData.setStatus('mandatory')
lpFiLtFb = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 4, 2, 5))
lpFiLtFbRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 4, 2, 5, 1), )
if mibBuilder.loadTexts: lpFiLtFbRowStatusTable.setStatus('mandatory')
lpFiLtFbRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 4, 2, 5, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-LogicalProcessorMIB", "lpIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpFiIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpFiLtIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpFiLtFbIndex"))
if mibBuilder.loadTexts: lpFiLtFbRowStatusEntry.setStatus('mandatory')
lpFiLtFbRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 4, 2, 5, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpFiLtFbRowStatus.setStatus('mandatory')
lpFiLtFbComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 4, 2, 5, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpFiLtFbComponentName.setStatus('mandatory')
lpFiLtFbStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 4, 2, 5, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpFiLtFbStorageType.setStatus('mandatory')
lpFiLtFbIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 4, 2, 5, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: lpFiLtFbIndex.setStatus('mandatory')
lpFiLtFbTopTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 4, 2, 5, 20), )
if mibBuilder.loadTexts: lpFiLtFbTopTable.setStatus('mandatory')
lpFiLtFbTopEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 4, 2, 5, 20, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-LogicalProcessorMIB", "lpIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpFiIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpFiLtIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpFiLtFbIndex"))
if mibBuilder.loadTexts: lpFiLtFbTopEntry.setStatus('mandatory')
lpFiLtFbTData = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 4, 2, 5, 20, 1, 1), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lpFiLtFbTData.setStatus('mandatory')
lpFiLtFbTxInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 4, 2, 5, 2))
lpFiLtFbTxInfoRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 4, 2, 5, 2, 1), )
if mibBuilder.loadTexts: lpFiLtFbTxInfoRowStatusTable.setStatus('mandatory')
lpFiLtFbTxInfoRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 4, 2, 5, 2, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-LogicalProcessorMIB", "lpIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpFiIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpFiLtIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpFiLtFbIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpFiLtFbTxInfoIndex"))
if mibBuilder.loadTexts: lpFiLtFbTxInfoRowStatusEntry.setStatus('mandatory')
lpFiLtFbTxInfoRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 4, 2, 5, 2, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpFiLtFbTxInfoRowStatus.setStatus('mandatory')
lpFiLtFbTxInfoComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 4, 2, 5, 2, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpFiLtFbTxInfoComponentName.setStatus('mandatory')
lpFiLtFbTxInfoStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 4, 2, 5, 2, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpFiLtFbTxInfoStorageType.setStatus('mandatory')
lpFiLtFbTxInfoIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 4, 2, 5, 2, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: lpFiLtFbTxInfoIndex.setStatus('mandatory')
lpFiLtFbTxInfoTopTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 4, 2, 5, 2, 10), )
if mibBuilder.loadTexts: lpFiLtFbTxInfoTopTable.setStatus('mandatory')
lpFiLtFbTxInfoTopEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 4, 2, 5, 2, 10, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-LogicalProcessorMIB", "lpIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpFiIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpFiLtIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpFiLtFbIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpFiLtFbTxInfoIndex"))
if mibBuilder.loadTexts: lpFiLtFbTxInfoTopEntry.setStatus('mandatory')
lpFiLtFbTxInfoTData = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 4, 2, 5, 2, 10, 1, 1), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lpFiLtFbTxInfoTData.setStatus('mandatory')
lpFiLtFbFddiMac = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 4, 2, 5, 3))
lpFiLtFbFddiMacRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 4, 2, 5, 3, 1), )
if mibBuilder.loadTexts: lpFiLtFbFddiMacRowStatusTable.setStatus('mandatory')
lpFiLtFbFddiMacRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 4, 2, 5, 3, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-LogicalProcessorMIB", "lpIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpFiIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpFiLtIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpFiLtFbIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpFiLtFbFddiMacIndex"))
if mibBuilder.loadTexts: lpFiLtFbFddiMacRowStatusEntry.setStatus('mandatory')
lpFiLtFbFddiMacRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 4, 2, 5, 3, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpFiLtFbFddiMacRowStatus.setStatus('mandatory')
lpFiLtFbFddiMacComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 4, 2, 5, 3, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpFiLtFbFddiMacComponentName.setStatus('mandatory')
lpFiLtFbFddiMacStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 4, 2, 5, 3, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpFiLtFbFddiMacStorageType.setStatus('mandatory')
lpFiLtFbFddiMacIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 4, 2, 5, 3, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: lpFiLtFbFddiMacIndex.setStatus('mandatory')
lpFiLtFbFddiMacTopTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 4, 2, 5, 3, 10), )
if mibBuilder.loadTexts: lpFiLtFbFddiMacTopTable.setStatus('mandatory')
lpFiLtFbFddiMacTopEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 4, 2, 5, 3, 10, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-LogicalProcessorMIB", "lpIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpFiIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpFiLtIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpFiLtFbIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpFiLtFbFddiMacIndex"))
if mibBuilder.loadTexts: lpFiLtFbFddiMacTopEntry.setStatus('mandatory')
lpFiLtFbFddiMacTData = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 4, 2, 5, 3, 10, 1, 1), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lpFiLtFbFddiMacTData.setStatus('mandatory')
lpFiLtFbMacEnet = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 4, 2, 5, 4))
lpFiLtFbMacEnetRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 4, 2, 5, 4, 1), )
if mibBuilder.loadTexts: lpFiLtFbMacEnetRowStatusTable.setStatus('mandatory')
lpFiLtFbMacEnetRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 4, 2, 5, 4, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-LogicalProcessorMIB", "lpIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpFiIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpFiLtIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpFiLtFbIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpFiLtFbMacEnetIndex"))
if mibBuilder.loadTexts: lpFiLtFbMacEnetRowStatusEntry.setStatus('mandatory')
lpFiLtFbMacEnetRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 4, 2, 5, 4, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpFiLtFbMacEnetRowStatus.setStatus('mandatory')
lpFiLtFbMacEnetComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 4, 2, 5, 4, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpFiLtFbMacEnetComponentName.setStatus('mandatory')
lpFiLtFbMacEnetStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 4, 2, 5, 4, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpFiLtFbMacEnetStorageType.setStatus('mandatory')
lpFiLtFbMacEnetIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 4, 2, 5, 4, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: lpFiLtFbMacEnetIndex.setStatus('mandatory')
lpFiLtFbMacEnetTopTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 4, 2, 5, 4, 10), )
if mibBuilder.loadTexts: lpFiLtFbMacEnetTopTable.setStatus('mandatory')
lpFiLtFbMacEnetTopEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 4, 2, 5, 4, 10, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-LogicalProcessorMIB", "lpIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpFiIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpFiLtIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpFiLtFbIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpFiLtFbMacEnetIndex"))
if mibBuilder.loadTexts: lpFiLtFbMacEnetTopEntry.setStatus('mandatory')
lpFiLtFbMacEnetTData = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 4, 2, 5, 4, 10, 1, 1), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lpFiLtFbMacEnetTData.setStatus('mandatory')
lpFiLtFbMacTr = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 4, 2, 5, 5))
lpFiLtFbMacTrRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 4, 2, 5, 5, 1), )
if mibBuilder.loadTexts: lpFiLtFbMacTrRowStatusTable.setStatus('mandatory')
lpFiLtFbMacTrRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 4, 2, 5, 5, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-LogicalProcessorMIB", "lpIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpFiIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpFiLtIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpFiLtFbIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpFiLtFbMacTrIndex"))
if mibBuilder.loadTexts: lpFiLtFbMacTrRowStatusEntry.setStatus('mandatory')
lpFiLtFbMacTrRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 4, 2, 5, 5, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpFiLtFbMacTrRowStatus.setStatus('mandatory')
lpFiLtFbMacTrComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 4, 2, 5, 5, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpFiLtFbMacTrComponentName.setStatus('mandatory')
lpFiLtFbMacTrStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 4, 2, 5, 5, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpFiLtFbMacTrStorageType.setStatus('mandatory')
lpFiLtFbMacTrIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 4, 2, 5, 5, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: lpFiLtFbMacTrIndex.setStatus('mandatory')
lpFiLtFbMacTrTopTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 4, 2, 5, 5, 10), )
if mibBuilder.loadTexts: lpFiLtFbMacTrTopTable.setStatus('mandatory')
lpFiLtFbMacTrTopEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 4, 2, 5, 5, 10, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-LogicalProcessorMIB", "lpIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpFiIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpFiLtIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpFiLtFbIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpFiLtFbMacTrIndex"))
if mibBuilder.loadTexts: lpFiLtFbMacTrTopEntry.setStatus('mandatory')
lpFiLtFbMacTrTData = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 4, 2, 5, 5, 10, 1, 1), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lpFiLtFbMacTrTData.setStatus('mandatory')
lpFiLtFbData = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 4, 2, 5, 6))
lpFiLtFbDataRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 4, 2, 5, 6, 1), )
if mibBuilder.loadTexts: lpFiLtFbDataRowStatusTable.setStatus('mandatory')
lpFiLtFbDataRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 4, 2, 5, 6, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-LogicalProcessorMIB", "lpIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpFiIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpFiLtIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpFiLtFbIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpFiLtFbDataIndex"))
if mibBuilder.loadTexts: lpFiLtFbDataRowStatusEntry.setStatus('mandatory')
lpFiLtFbDataRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 4, 2, 5, 6, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpFiLtFbDataRowStatus.setStatus('mandatory')
lpFiLtFbDataComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 4, 2, 5, 6, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpFiLtFbDataComponentName.setStatus('mandatory')
lpFiLtFbDataStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 4, 2, 5, 6, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpFiLtFbDataStorageType.setStatus('mandatory')
lpFiLtFbDataIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 4, 2, 5, 6, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: lpFiLtFbDataIndex.setStatus('mandatory')
lpFiLtFbDataTopTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 4, 2, 5, 6, 10), )
if mibBuilder.loadTexts: lpFiLtFbDataTopTable.setStatus('mandatory')
lpFiLtFbDataTopEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 4, 2, 5, 6, 10, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-LogicalProcessorMIB", "lpIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpFiIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpFiLtIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpFiLtFbIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpFiLtFbDataIndex"))
if mibBuilder.loadTexts: lpFiLtFbDataTopEntry.setStatus('mandatory')
lpFiLtFbDataTData = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 4, 2, 5, 6, 10, 1, 1), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lpFiLtFbDataTData.setStatus('mandatory')
lpFiLtFbIpH = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 4, 2, 5, 7))
lpFiLtFbIpHRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 4, 2, 5, 7, 1), )
if mibBuilder.loadTexts: lpFiLtFbIpHRowStatusTable.setStatus('mandatory')
lpFiLtFbIpHRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 4, 2, 5, 7, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-LogicalProcessorMIB", "lpIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpFiIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpFiLtIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpFiLtFbIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpFiLtFbIpHIndex"))
if mibBuilder.loadTexts: lpFiLtFbIpHRowStatusEntry.setStatus('mandatory')
lpFiLtFbIpHRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 4, 2, 5, 7, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpFiLtFbIpHRowStatus.setStatus('mandatory')
lpFiLtFbIpHComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 4, 2, 5, 7, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpFiLtFbIpHComponentName.setStatus('mandatory')
lpFiLtFbIpHStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 4, 2, 5, 7, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpFiLtFbIpHStorageType.setStatus('mandatory')
lpFiLtFbIpHIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 4, 2, 5, 7, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: lpFiLtFbIpHIndex.setStatus('mandatory')
lpFiLtFbIpHTopTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 4, 2, 5, 7, 10), )
if mibBuilder.loadTexts: lpFiLtFbIpHTopTable.setStatus('mandatory')
lpFiLtFbIpHTopEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 4, 2, 5, 7, 10, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-LogicalProcessorMIB", "lpIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpFiIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpFiLtIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpFiLtFbIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpFiLtFbIpHIndex"))
if mibBuilder.loadTexts: lpFiLtFbIpHTopEntry.setStatus('mandatory')
lpFiLtFbIpHTData = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 4, 2, 5, 7, 10, 1, 1), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lpFiLtFbIpHTData.setStatus('mandatory')
lpFiLtFbLlch = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 4, 2, 5, 8))
lpFiLtFbLlchRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 4, 2, 5, 8, 1), )
if mibBuilder.loadTexts: lpFiLtFbLlchRowStatusTable.setStatus('mandatory')
lpFiLtFbLlchRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 4, 2, 5, 8, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-LogicalProcessorMIB", "lpIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpFiIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpFiLtIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpFiLtFbIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpFiLtFbLlchIndex"))
if mibBuilder.loadTexts: lpFiLtFbLlchRowStatusEntry.setStatus('mandatory')
lpFiLtFbLlchRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 4, 2, 5, 8, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpFiLtFbLlchRowStatus.setStatus('mandatory')
lpFiLtFbLlchComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 4, 2, 5, 8, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpFiLtFbLlchComponentName.setStatus('mandatory')
lpFiLtFbLlchStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 4, 2, 5, 8, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpFiLtFbLlchStorageType.setStatus('mandatory')
lpFiLtFbLlchIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 4, 2, 5, 8, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: lpFiLtFbLlchIndex.setStatus('mandatory')
lpFiLtFbLlchTopTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 4, 2, 5, 8, 10), )
if mibBuilder.loadTexts: lpFiLtFbLlchTopTable.setStatus('mandatory')
lpFiLtFbLlchTopEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 4, 2, 5, 8, 10, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-LogicalProcessorMIB", "lpIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpFiIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpFiLtIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpFiLtFbIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpFiLtFbLlchIndex"))
if mibBuilder.loadTexts: lpFiLtFbLlchTopEntry.setStatus('mandatory')
lpFiLtFbLlchTData = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 4, 2, 5, 8, 10, 1, 1), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lpFiLtFbLlchTData.setStatus('mandatory')
lpFiLtFbAppleH = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 4, 2, 5, 9))
lpFiLtFbAppleHRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 4, 2, 5, 9, 1), )
if mibBuilder.loadTexts: lpFiLtFbAppleHRowStatusTable.setStatus('mandatory')
lpFiLtFbAppleHRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 4, 2, 5, 9, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-LogicalProcessorMIB", "lpIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpFiIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpFiLtIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpFiLtFbIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpFiLtFbAppleHIndex"))
if mibBuilder.loadTexts: lpFiLtFbAppleHRowStatusEntry.setStatus('mandatory')
lpFiLtFbAppleHRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 4, 2, 5, 9, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpFiLtFbAppleHRowStatus.setStatus('mandatory')
lpFiLtFbAppleHComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 4, 2, 5, 9, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpFiLtFbAppleHComponentName.setStatus('mandatory')
lpFiLtFbAppleHStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 4, 2, 5, 9, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpFiLtFbAppleHStorageType.setStatus('mandatory')
lpFiLtFbAppleHIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 4, 2, 5, 9, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: lpFiLtFbAppleHIndex.setStatus('mandatory')
lpFiLtFbAppleHTopTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 4, 2, 5, 9, 10), )
if mibBuilder.loadTexts: lpFiLtFbAppleHTopTable.setStatus('mandatory')
lpFiLtFbAppleHTopEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 4, 2, 5, 9, 10, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-LogicalProcessorMIB", "lpIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpFiIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpFiLtIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpFiLtFbIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpFiLtFbAppleHIndex"))
if mibBuilder.loadTexts: lpFiLtFbAppleHTopEntry.setStatus('mandatory')
lpFiLtFbAppleHTData = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 4, 2, 5, 9, 10, 1, 1), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lpFiLtFbAppleHTData.setStatus('mandatory')
lpFiLtFbIpxH = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 4, 2, 5, 10))
lpFiLtFbIpxHRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 4, 2, 5, 10, 1), )
if mibBuilder.loadTexts: lpFiLtFbIpxHRowStatusTable.setStatus('mandatory')
lpFiLtFbIpxHRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 4, 2, 5, 10, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-LogicalProcessorMIB", "lpIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpFiIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpFiLtIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpFiLtFbIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpFiLtFbIpxHIndex"))
if mibBuilder.loadTexts: lpFiLtFbIpxHRowStatusEntry.setStatus('mandatory')
lpFiLtFbIpxHRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 4, 2, 5, 10, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpFiLtFbIpxHRowStatus.setStatus('mandatory')
lpFiLtFbIpxHComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 4, 2, 5, 10, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpFiLtFbIpxHComponentName.setStatus('mandatory')
lpFiLtFbIpxHStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 4, 2, 5, 10, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpFiLtFbIpxHStorageType.setStatus('mandatory')
lpFiLtFbIpxHIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 4, 2, 5, 10, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: lpFiLtFbIpxHIndex.setStatus('mandatory')
lpFiLtFbIpxHTopTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 4, 2, 5, 10, 10), )
if mibBuilder.loadTexts: lpFiLtFbIpxHTopTable.setStatus('mandatory')
lpFiLtFbIpxHTopEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 4, 2, 5, 10, 10, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-LogicalProcessorMIB", "lpIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpFiIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpFiLtIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpFiLtFbIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpFiLtFbIpxHIndex"))
if mibBuilder.loadTexts: lpFiLtFbIpxHTopEntry.setStatus('mandatory')
lpFiLtFbIpxHTData = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 4, 2, 5, 10, 10, 1, 1), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lpFiLtFbIpxHTData.setStatus('mandatory')
lpFiLtCntl = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 4, 2, 6))
lpFiLtCntlRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 4, 2, 6, 1), )
if mibBuilder.loadTexts: lpFiLtCntlRowStatusTable.setStatus('mandatory')
lpFiLtCntlRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 4, 2, 6, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-LogicalProcessorMIB", "lpIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpFiIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpFiLtIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpFiLtCntlIndex"))
if mibBuilder.loadTexts: lpFiLtCntlRowStatusEntry.setStatus('mandatory')
lpFiLtCntlRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 4, 2, 6, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpFiLtCntlRowStatus.setStatus('mandatory')
lpFiLtCntlComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 4, 2, 6, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpFiLtCntlComponentName.setStatus('mandatory')
lpFiLtCntlStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 4, 2, 6, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpFiLtCntlStorageType.setStatus('mandatory')
lpFiLtCntlIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 4, 2, 6, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: lpFiLtCntlIndex.setStatus('mandatory')
lpFiLtCntlTopTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 4, 2, 6, 10), )
if mibBuilder.loadTexts: lpFiLtCntlTopTable.setStatus('mandatory')
lpFiLtCntlTopEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 4, 2, 6, 10, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-LogicalProcessorMIB", "lpIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpFiIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpFiLtIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpFiLtCntlIndex"))
if mibBuilder.loadTexts: lpFiLtCntlTopEntry.setStatus('mandatory')
lpFiLtCntlTData = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 4, 2, 6, 10, 1, 1), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lpFiLtCntlTData.setStatus('mandatory')
lpFiPhy = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 4, 3))
lpFiPhyRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 4, 3, 1), )
if mibBuilder.loadTexts: lpFiPhyRowStatusTable.setStatus('mandatory')
lpFiPhyRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 4, 3, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-LogicalProcessorMIB", "lpIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpFiIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpFiPhyFddiPhyTypeIndex"))
if mibBuilder.loadTexts: lpFiPhyRowStatusEntry.setStatus('mandatory')
lpFiPhyRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 4, 3, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lpFiPhyRowStatus.setStatus('mandatory')
lpFiPhyComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 4, 3, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpFiPhyComponentName.setStatus('mandatory')
lpFiPhyStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 4, 3, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpFiPhyStorageType.setStatus('mandatory')
lpFiPhyFddiPhyTypeIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 4, 3, 1, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("a", 0), ("b", 1))))
if mibBuilder.loadTexts: lpFiPhyFddiPhyTypeIndex.setStatus('mandatory')
lpFiPhyProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 4, 3, 10), )
if mibBuilder.loadTexts: lpFiPhyProvTable.setStatus('mandatory')
lpFiPhyProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 4, 3, 10, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-LogicalProcessorMIB", "lpIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpFiIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpFiPhyFddiPhyTypeIndex"))
if mibBuilder.loadTexts: lpFiPhyProvEntry.setStatus('mandatory')
lpFiPhyLerCutoff = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 4, 3, 10, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(4, 15)).clone(7)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lpFiPhyLerCutoff.setStatus('mandatory')
lpFiPhyLerAlarm = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 4, 3, 10, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(4, 15)).clone(8)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lpFiPhyLerAlarm.setStatus('mandatory')
lpFiPhyLinkErrorMonitor = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 4, 3, 10, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lpFiPhyLinkErrorMonitor.setStatus('mandatory')
lpFiPhyOperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 4, 3, 11), )
if mibBuilder.loadTexts: lpFiPhyOperTable.setStatus('mandatory')
lpFiPhyOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 4, 3, 11, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-LogicalProcessorMIB", "lpIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpFiIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpFiPhyFddiPhyTypeIndex"))
if mibBuilder.loadTexts: lpFiPhyOperEntry.setStatus('mandatory')
lpFiPhyNeighborType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 4, 3, 11, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("a", 1), ("b", 2), ("s", 3), ("m", 4), ("none", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpFiPhyNeighborType.setStatus('mandatory')
lpFiPhyLctFailCounts = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 4, 3, 11, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpFiPhyLctFailCounts.setStatus('mandatory')
lpFiPhyLerEstimate = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 4, 3, 11, 1, 14), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(4, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpFiPhyLerEstimate.setStatus('mandatory')
lpFiPhyLemRejectCounts = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 4, 3, 11, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpFiPhyLemRejectCounts.setStatus('mandatory')
lpFiPhyLemCounts = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 4, 3, 11, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpFiPhyLemCounts.setStatus('mandatory')
lpFiPhyPcmState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 4, 3, 11, 1, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10))).clone(namedValues=NamedValues(("off", 1), ("break", 2), ("trace", 3), ("connect", 4), ("next", 5), ("signal", 6), ("join", 7), ("verify", 8), ("active", 9), ("maint", 10)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpFiPhyPcmState.setStatus('mandatory')
lpFiPhyLerFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 4, 3, 11, 1, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("true", 1), ("false", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpFiPhyLerFlag.setStatus('mandatory')
lpFiPhySignalState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 4, 3, 11, 1, 23), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10))).clone(namedValues=NamedValues(("escape", 0), ("phyTypeL", 1), ("phyTypeH", 2), ("accept", 3), ("lctLengthL", 4), ("lctLengthH", 5), ("macAvail", 6), ("lctResult", 7), ("macLoop", 8), ("macOnPhy", 9), ("signalingDone", 10)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpFiPhySignalState.setStatus('mandatory')
lpFiPhySignalBitsRcvd = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 4, 3, 11, 1, 24), OctetString().subtype(subtypeSpec=ValueSizeConstraint(2, 2)).setFixedLength(2)).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpFiPhySignalBitsRcvd.setStatus('mandatory')
lpFiPhySignalBitsTxmt = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 4, 3, 11, 1, 25), OctetString().subtype(subtypeSpec=ValueSizeConstraint(2, 2)).setFixedLength(2)).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpFiPhySignalBitsTxmt.setStatus('mandatory')
lpFiTest = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 4, 5))
lpFiTestRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 4, 5, 1), )
if mibBuilder.loadTexts: lpFiTestRowStatusTable.setStatus('mandatory')
lpFiTestRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 4, 5, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-LogicalProcessorMIB", "lpIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpFiIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpFiTestIndex"))
if mibBuilder.loadTexts: lpFiTestRowStatusEntry.setStatus('mandatory')
lpFiTestRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 4, 5, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpFiTestRowStatus.setStatus('mandatory')
lpFiTestComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 4, 5, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpFiTestComponentName.setStatus('mandatory')
lpFiTestStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 4, 5, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpFiTestStorageType.setStatus('mandatory')
lpFiTestIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 4, 5, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: lpFiTestIndex.setStatus('mandatory')
lpFiTestPTOTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 4, 5, 10), )
if mibBuilder.loadTexts: lpFiTestPTOTable.setStatus('mandatory')
lpFiTestPTOEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 4, 5, 10, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-LogicalProcessorMIB", "lpIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpFiIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpFiTestIndex"))
if mibBuilder.loadTexts: lpFiTestPTOEntry.setStatus('mandatory')
lpFiTestType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 4, 5, 10, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 257, 258, 259, 260, 263, 264, 265, 266, 267, 268))).clone(namedValues=NamedValues(("onCard", 0), ("normal", 1), ("wrapA", 257), ("wrapB", 258), ("thruA", 259), ("thruB", 260), ("extWrapA", 263), ("extWrapB", 264), ("extThruA", 265), ("extThruB", 266), ("extWrapAB", 267), ("extWrapBA", 268)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lpFiTestType.setStatus('mandatory')
lpFiTestFrmSize = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 4, 5, 10, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(4, 4096)).clone(1024)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lpFiTestFrmSize.setStatus('mandatory')
lpFiTestDuration = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 4, 5, 10, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 30240)).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lpFiTestDuration.setStatus('mandatory')
lpFiTestResultsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 4, 5, 11), )
if mibBuilder.loadTexts: lpFiTestResultsTable.setStatus('mandatory')
lpFiTestResultsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 4, 5, 11, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-LogicalProcessorMIB", "lpIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpFiIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpFiTestIndex"))
if mibBuilder.loadTexts: lpFiTestResultsEntry.setStatus('mandatory')
lpFiTestElapsedTime = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 4, 5, 11, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpFiTestElapsedTime.setStatus('mandatory')
lpFiTestTimeRemaining = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 4, 5, 11, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpFiTestTimeRemaining.setStatus('mandatory')
lpFiTestCauseOfTermination = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 4, 5, 11, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("testTimeExpired", 0), ("stoppedByOperator", 1), ("unknown", 2), ("neverStarted", 3), ("testRunning", 4))).clone('neverStarted')).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpFiTestCauseOfTermination.setStatus('mandatory')
lpFiTestFrmTx = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 4, 5, 11, 1, 7), PassportCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpFiTestFrmTx.setStatus('mandatory')
lpFiTestBitsTx = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 4, 5, 11, 1, 8), PassportCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpFiTestBitsTx.setStatus('mandatory')
lpFiTestFrmRx = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 4, 5, 11, 1, 9), PassportCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpFiTestFrmRx.setStatus('mandatory')
lpFiTestBitsRx = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 4, 5, 11, 1, 10), PassportCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpFiTestBitsRx.setStatus('mandatory')
lpFiTestErroredFrmRx = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 4, 5, 11, 1, 11), PassportCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpFiTestErroredFrmRx.setStatus('mandatory')
lpTr = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 13))
lpTrRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 13, 1), )
if mibBuilder.loadTexts: lpTrRowStatusTable.setStatus('mandatory')
lpTrRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 13, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-LogicalProcessorMIB", "lpIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpTrIndex"))
if mibBuilder.loadTexts: lpTrRowStatusEntry.setStatus('mandatory')
lpTrRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 13, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lpTrRowStatus.setStatus('mandatory')
lpTrComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 13, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpTrComponentName.setStatus('mandatory')
lpTrStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 13, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpTrStorageType.setStatus('mandatory')
lpTrIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 13, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 5)))
if mibBuilder.loadTexts: lpTrIndex.setStatus('mandatory')
lpTrCidDataTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 13, 10), )
if mibBuilder.loadTexts: lpTrCidDataTable.setStatus('mandatory')
lpTrCidDataEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 13, 10, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-LogicalProcessorMIB", "lpIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpTrIndex"))
if mibBuilder.loadTexts: lpTrCidDataEntry.setStatus('mandatory')
lpTrCustomerIdentifier = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 13, 10, 1, 1), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 8191), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lpTrCustomerIdentifier.setStatus('mandatory')
lpTrIfEntryTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 13, 11), )
if mibBuilder.loadTexts: lpTrIfEntryTable.setStatus('mandatory')
lpTrIfEntryEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 13, 11, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-LogicalProcessorMIB", "lpIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpTrIndex"))
if mibBuilder.loadTexts: lpTrIfEntryEntry.setStatus('mandatory')
lpTrIfAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 13, 11, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("testing", 3))).clone('up')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lpTrIfAdminStatus.setStatus('mandatory')
lpTrIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 13, 11, 1, 2), InterfaceIndex().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpTrIfIndex.setStatus('mandatory')
lpTrProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 13, 12), )
if mibBuilder.loadTexts: lpTrProvTable.setStatus('mandatory')
lpTrProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 13, 12, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-LogicalProcessorMIB", "lpIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpTrIndex"))
if mibBuilder.loadTexts: lpTrProvEntry.setStatus('mandatory')
lpTrRingSpeed = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 13, 12, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(3, 4))).clone(namedValues=NamedValues(("fourMegabit", 3), ("sixteenMegabit", 4))).clone('sixteenMegabit')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lpTrRingSpeed.setStatus('mandatory')
lpTrMonitorParticipate = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 13, 12, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("true", 1), ("false", 2))).clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lpTrMonitorParticipate.setStatus('mandatory')
lpTrFunctionalAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 13, 12, 1, 3), MacAddress().subtype(subtypeSpec=ValueSizeConstraint(6, 6)).setFixedLength(6).clone(hexValue="0300feff8f01")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lpTrFunctionalAddress.setStatus('mandatory')
lpTrNodeAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 13, 12, 1, 4), MacAddress().subtype(subtypeSpec=ValueSizeConstraint(6, 6)).setFixedLength(6).clone(hexValue="000000000000")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lpTrNodeAddress.setStatus('mandatory')
lpTrGroupAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 13, 12, 1, 5), MacAddress().subtype(subtypeSpec=ValueSizeConstraint(6, 6)).setFixedLength(6).clone(hexValue="030001000000")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lpTrGroupAddress.setStatus('mandatory')
lpTrProductId = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 13, 12, 1, 6), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(0, 18)).clone(hexValue="4c414e20546f6b656e2052696e67")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lpTrProductId.setStatus('mandatory')
lpTrApplicationFramerName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 13, 12, 1, 7), Link()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lpTrApplicationFramerName.setStatus('mandatory')
lpTrAdminInfoTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 13, 13), )
if mibBuilder.loadTexts: lpTrAdminInfoTable.setStatus('mandatory')
lpTrAdminInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 13, 13, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-LogicalProcessorMIB", "lpIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpTrIndex"))
if mibBuilder.loadTexts: lpTrAdminInfoEntry.setStatus('mandatory')
lpTrVendor = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 13, 13, 1, 1), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(0, 20))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lpTrVendor.setStatus('mandatory')
lpTrCommentText = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 13, 13, 1, 2), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(0, 60))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lpTrCommentText.setStatus('mandatory')
lpTrStateTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 13, 15), )
if mibBuilder.loadTexts: lpTrStateTable.setStatus('mandatory')
lpTrStateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 13, 15, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-LogicalProcessorMIB", "lpIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpTrIndex"))
if mibBuilder.loadTexts: lpTrStateEntry.setStatus('mandatory')
lpTrAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 13, 15, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("locked", 0), ("unlocked", 1), ("shuttingDown", 2))).clone('unlocked')).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpTrAdminState.setStatus('mandatory')
lpTrOperationalState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 13, 15, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1))).clone('disabled')).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpTrOperationalState.setStatus('mandatory')
lpTrUsageState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 13, 15, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("idle", 0), ("active", 1), ("busy", 2))).clone('idle')).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpTrUsageState.setStatus('mandatory')
lpTrOperStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 13, 16), )
if mibBuilder.loadTexts: lpTrOperStatusTable.setStatus('mandatory')
lpTrOperStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 13, 16, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-LogicalProcessorMIB", "lpIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpTrIndex"))
if mibBuilder.loadTexts: lpTrOperStatusEntry.setStatus('mandatory')
lpTrSnmpOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 13, 16, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("testing", 3))).clone('up')).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpTrSnmpOperStatus.setStatus('mandatory')
lpTrOperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 13, 17), )
if mibBuilder.loadTexts: lpTrOperTable.setStatus('mandatory')
lpTrOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 13, 17, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-LogicalProcessorMIB", "lpIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpTrIndex"))
if mibBuilder.loadTexts: lpTrOperEntry.setStatus('mandatory')
lpTrMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 13, 17, 1, 2), MacAddress().subtype(subtypeSpec=ValueSizeConstraint(6, 6)).setFixedLength(6).clone(hexValue="000000000000")).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpTrMacAddress.setStatus('mandatory')
lpTrRingState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 13, 17, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("opened", 1), ("closed", 2), ("opening", 3), ("closing", 4), ("openFailure", 5), ("ringFailure", 6))).clone('ringFailure')).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpTrRingState.setStatus('mandatory')
lpTrRingStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 13, 17, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(3, 3)).setFixedLength(3).clone(hexValue="000040")).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpTrRingStatus.setStatus('mandatory')
lpTrRingOpenStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 13, 17, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11))).clone(namedValues=NamedValues(("noOpen", 1), ("badParam", 2), ("lobeFailed", 3), ("signalLoss", 4), ("insertionTimeout", 5), ("ringFailed", 6), ("beaconing", 7), ("duplicateMac", 8), ("requestFailed", 9), ("removeReceived", 10), ("open", 11))).clone('noOpen')).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpTrRingOpenStatus.setStatus('mandatory')
lpTrUpStream = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 13, 17, 1, 7), MacAddress().subtype(subtypeSpec=ValueSizeConstraint(6, 6)).setFixedLength(6).clone(hexValue="000000000000")).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpTrUpStream.setStatus('mandatory')
lpTrChipSet = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 13, 17, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("ibm16", 1), ("titms380", 2), ("titms380c16", 3), ("titms380c26", 4))).clone('titms380c16')).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpTrChipSet.setStatus('mandatory')
lpTrLastTimeBeaconSent = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 13, 17, 1, 10), EnterpriseDateAndTime().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(19, 19), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpTrLastTimeBeaconSent.setStatus('mandatory')
lpTrStatsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 13, 18), )
if mibBuilder.loadTexts: lpTrStatsTable.setStatus('mandatory')
lpTrStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 13, 18, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-LogicalProcessorMIB", "lpIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpTrIndex"))
if mibBuilder.loadTexts: lpTrStatsEntry.setStatus('mandatory')
lpTrLineErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 13, 18, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpTrLineErrors.setStatus('mandatory')
lpTrBurstErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 13, 18, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpTrBurstErrors.setStatus('mandatory')
lpTrAcErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 13, 18, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpTrAcErrors.setStatus('mandatory')
lpTrAbortTransErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 13, 18, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpTrAbortTransErrors.setStatus('mandatory')
lpTrInternalErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 13, 18, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpTrInternalErrors.setStatus('mandatory')
lpTrLostFrameErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 13, 18, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpTrLostFrameErrors.setStatus('mandatory')
lpTrReceiveCongestions = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 13, 18, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpTrReceiveCongestions.setStatus('mandatory')
lpTrFrameCopiedErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 13, 18, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpTrFrameCopiedErrors.setStatus('mandatory')
lpTrTokenErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 13, 18, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpTrTokenErrors.setStatus('mandatory')
lpTrSoftErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 13, 18, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpTrSoftErrors.setStatus('mandatory')
lpTrHardErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 13, 18, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpTrHardErrors.setStatus('mandatory')
lpTrSignalLoss = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 13, 18, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpTrSignalLoss.setStatus('mandatory')
lpTrTransmitBeacons = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 13, 18, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpTrTransmitBeacons.setStatus('mandatory')
lpTrRingRecoverys = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 13, 18, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpTrRingRecoverys.setStatus('mandatory')
lpTrLobeWires = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 13, 18, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpTrLobeWires.setStatus('mandatory')
lpTrRemoveRings = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 13, 18, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpTrRemoveRings.setStatus('mandatory')
lpTrSingleStation = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 13, 18, 1, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpTrSingleStation.setStatus('mandatory')
lpTrFreqErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 13, 18, 1, 19), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpTrFreqErrors.setStatus('mandatory')
lpTrNcMacOperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 13, 20), )
if mibBuilder.loadTexts: lpTrNcMacOperTable.setStatus('mandatory')
lpTrNcMacOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 13, 20, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-LogicalProcessorMIB", "lpIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpTrIndex"))
if mibBuilder.loadTexts: lpTrNcMacOperEntry.setStatus('mandatory')
lpTrNcMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 13, 20, 1, 1), MacAddress().subtype(subtypeSpec=ValueSizeConstraint(6, 6)).setFixedLength(6)).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpTrNcMacAddress.setStatus('mandatory')
lpTrNcUpStream = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 13, 20, 1, 2), MacAddress().subtype(subtypeSpec=ValueSizeConstraint(6, 6)).setFixedLength(6)).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpTrNcUpStream.setStatus('mandatory')
lpTrLt = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 13, 2))
lpTrLtRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 13, 2, 1), )
if mibBuilder.loadTexts: lpTrLtRowStatusTable.setStatus('mandatory')
lpTrLtRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 13, 2, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-LogicalProcessorMIB", "lpIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpTrIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpTrLtIndex"))
if mibBuilder.loadTexts: lpTrLtRowStatusEntry.setStatus('mandatory')
lpTrLtRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 13, 2, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpTrLtRowStatus.setStatus('mandatory')
lpTrLtComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 13, 2, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpTrLtComponentName.setStatus('mandatory')
lpTrLtStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 13, 2, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpTrLtStorageType.setStatus('mandatory')
lpTrLtIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 13, 2, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: lpTrLtIndex.setStatus('mandatory')
lpTrLtTopTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 13, 2, 20), )
if mibBuilder.loadTexts: lpTrLtTopTable.setStatus('mandatory')
lpTrLtTopEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 13, 2, 20, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-LogicalProcessorMIB", "lpIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpTrIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpTrLtIndex"))
if mibBuilder.loadTexts: lpTrLtTopEntry.setStatus('mandatory')
lpTrLtTData = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 13, 2, 20, 1, 1), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lpTrLtTData.setStatus('mandatory')
lpTrLtFrmCmp = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 13, 2, 2))
lpTrLtFrmCmpRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 13, 2, 2, 1), )
if mibBuilder.loadTexts: lpTrLtFrmCmpRowStatusTable.setStatus('mandatory')
lpTrLtFrmCmpRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 13, 2, 2, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-LogicalProcessorMIB", "lpIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpTrIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpTrLtIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpTrLtFrmCmpIndex"))
if mibBuilder.loadTexts: lpTrLtFrmCmpRowStatusEntry.setStatus('mandatory')
lpTrLtFrmCmpRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 13, 2, 2, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpTrLtFrmCmpRowStatus.setStatus('mandatory')
lpTrLtFrmCmpComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 13, 2, 2, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpTrLtFrmCmpComponentName.setStatus('mandatory')
lpTrLtFrmCmpStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 13, 2, 2, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpTrLtFrmCmpStorageType.setStatus('mandatory')
lpTrLtFrmCmpIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 13, 2, 2, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: lpTrLtFrmCmpIndex.setStatus('mandatory')
lpTrLtFrmCmpTopTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 13, 2, 2, 10), )
if mibBuilder.loadTexts: lpTrLtFrmCmpTopTable.setStatus('mandatory')
lpTrLtFrmCmpTopEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 13, 2, 2, 10, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-LogicalProcessorMIB", "lpIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpTrIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpTrLtIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpTrLtFrmCmpIndex"))
if mibBuilder.loadTexts: lpTrLtFrmCmpTopEntry.setStatus('mandatory')
lpTrLtFrmCmpTData = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 13, 2, 2, 10, 1, 1), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lpTrLtFrmCmpTData.setStatus('mandatory')
lpTrLtFrmCpy = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 13, 2, 3))
lpTrLtFrmCpyRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 13, 2, 3, 1), )
if mibBuilder.loadTexts: lpTrLtFrmCpyRowStatusTable.setStatus('mandatory')
lpTrLtFrmCpyRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 13, 2, 3, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-LogicalProcessorMIB", "lpIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpTrIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpTrLtIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpTrLtFrmCpyIndex"))
if mibBuilder.loadTexts: lpTrLtFrmCpyRowStatusEntry.setStatus('mandatory')
lpTrLtFrmCpyRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 13, 2, 3, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpTrLtFrmCpyRowStatus.setStatus('mandatory')
lpTrLtFrmCpyComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 13, 2, 3, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpTrLtFrmCpyComponentName.setStatus('mandatory')
lpTrLtFrmCpyStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 13, 2, 3, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpTrLtFrmCpyStorageType.setStatus('mandatory')
lpTrLtFrmCpyIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 13, 2, 3, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: lpTrLtFrmCpyIndex.setStatus('mandatory')
lpTrLtFrmCpyTopTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 13, 2, 3, 10), )
if mibBuilder.loadTexts: lpTrLtFrmCpyTopTable.setStatus('mandatory')
lpTrLtFrmCpyTopEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 13, 2, 3, 10, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-LogicalProcessorMIB", "lpIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpTrIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpTrLtIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpTrLtFrmCpyIndex"))
if mibBuilder.loadTexts: lpTrLtFrmCpyTopEntry.setStatus('mandatory')
lpTrLtFrmCpyTData = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 13, 2, 3, 10, 1, 1), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lpTrLtFrmCpyTData.setStatus('mandatory')
lpTrLtPrtCfg = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 13, 2, 4))
lpTrLtPrtCfgRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 13, 2, 4, 1), )
if mibBuilder.loadTexts: lpTrLtPrtCfgRowStatusTable.setStatus('mandatory')
lpTrLtPrtCfgRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 13, 2, 4, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-LogicalProcessorMIB", "lpIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpTrIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpTrLtIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpTrLtPrtCfgIndex"))
if mibBuilder.loadTexts: lpTrLtPrtCfgRowStatusEntry.setStatus('mandatory')
lpTrLtPrtCfgRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 13, 2, 4, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpTrLtPrtCfgRowStatus.setStatus('mandatory')
lpTrLtPrtCfgComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 13, 2, 4, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpTrLtPrtCfgComponentName.setStatus('mandatory')
lpTrLtPrtCfgStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 13, 2, 4, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpTrLtPrtCfgStorageType.setStatus('mandatory')
lpTrLtPrtCfgIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 13, 2, 4, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: lpTrLtPrtCfgIndex.setStatus('mandatory')
lpTrLtPrtCfgTopTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 13, 2, 4, 10), )
if mibBuilder.loadTexts: lpTrLtPrtCfgTopTable.setStatus('mandatory')
lpTrLtPrtCfgTopEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 13, 2, 4, 10, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-LogicalProcessorMIB", "lpIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpTrIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpTrLtIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpTrLtPrtCfgIndex"))
if mibBuilder.loadTexts: lpTrLtPrtCfgTopEntry.setStatus('mandatory')
lpTrLtPrtCfgTData = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 13, 2, 4, 10, 1, 1), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lpTrLtPrtCfgTData.setStatus('mandatory')
lpTrLtFb = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 13, 2, 5))
lpTrLtFbRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 13, 2, 5, 1), )
if mibBuilder.loadTexts: lpTrLtFbRowStatusTable.setStatus('mandatory')
lpTrLtFbRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 13, 2, 5, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-LogicalProcessorMIB", "lpIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpTrIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpTrLtIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpTrLtFbIndex"))
if mibBuilder.loadTexts: lpTrLtFbRowStatusEntry.setStatus('mandatory')
lpTrLtFbRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 13, 2, 5, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpTrLtFbRowStatus.setStatus('mandatory')
lpTrLtFbComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 13, 2, 5, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpTrLtFbComponentName.setStatus('mandatory')
lpTrLtFbStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 13, 2, 5, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpTrLtFbStorageType.setStatus('mandatory')
lpTrLtFbIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 13, 2, 5, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: lpTrLtFbIndex.setStatus('mandatory')
lpTrLtFbTopTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 13, 2, 5, 20), )
if mibBuilder.loadTexts: lpTrLtFbTopTable.setStatus('mandatory')
lpTrLtFbTopEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 13, 2, 5, 20, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-LogicalProcessorMIB", "lpIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpTrIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpTrLtIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpTrLtFbIndex"))
if mibBuilder.loadTexts: lpTrLtFbTopEntry.setStatus('mandatory')
lpTrLtFbTData = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 13, 2, 5, 20, 1, 1), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lpTrLtFbTData.setStatus('mandatory')
lpTrLtFbTxInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 13, 2, 5, 2))
lpTrLtFbTxInfoRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 13, 2, 5, 2, 1), )
if mibBuilder.loadTexts: lpTrLtFbTxInfoRowStatusTable.setStatus('mandatory')
lpTrLtFbTxInfoRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 13, 2, 5, 2, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-LogicalProcessorMIB", "lpIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpTrIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpTrLtIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpTrLtFbIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpTrLtFbTxInfoIndex"))
if mibBuilder.loadTexts: lpTrLtFbTxInfoRowStatusEntry.setStatus('mandatory')
lpTrLtFbTxInfoRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 13, 2, 5, 2, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpTrLtFbTxInfoRowStatus.setStatus('mandatory')
lpTrLtFbTxInfoComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 13, 2, 5, 2, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpTrLtFbTxInfoComponentName.setStatus('mandatory')
lpTrLtFbTxInfoStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 13, 2, 5, 2, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpTrLtFbTxInfoStorageType.setStatus('mandatory')
lpTrLtFbTxInfoIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 13, 2, 5, 2, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: lpTrLtFbTxInfoIndex.setStatus('mandatory')
lpTrLtFbTxInfoTopTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 13, 2, 5, 2, 10), )
if mibBuilder.loadTexts: lpTrLtFbTxInfoTopTable.setStatus('mandatory')
lpTrLtFbTxInfoTopEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 13, 2, 5, 2, 10, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-LogicalProcessorMIB", "lpIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpTrIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpTrLtIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpTrLtFbIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpTrLtFbTxInfoIndex"))
if mibBuilder.loadTexts: lpTrLtFbTxInfoTopEntry.setStatus('mandatory')
lpTrLtFbTxInfoTData = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 13, 2, 5, 2, 10, 1, 1), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lpTrLtFbTxInfoTData.setStatus('mandatory')
lpTrLtFbFddiMac = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 13, 2, 5, 3))
lpTrLtFbFddiMacRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 13, 2, 5, 3, 1), )
if mibBuilder.loadTexts: lpTrLtFbFddiMacRowStatusTable.setStatus('mandatory')
lpTrLtFbFddiMacRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 13, 2, 5, 3, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-LogicalProcessorMIB", "lpIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpTrIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpTrLtIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpTrLtFbIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpTrLtFbFddiMacIndex"))
if mibBuilder.loadTexts: lpTrLtFbFddiMacRowStatusEntry.setStatus('mandatory')
lpTrLtFbFddiMacRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 13, 2, 5, 3, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpTrLtFbFddiMacRowStatus.setStatus('mandatory')
lpTrLtFbFddiMacComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 13, 2, 5, 3, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpTrLtFbFddiMacComponentName.setStatus('mandatory')
lpTrLtFbFddiMacStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 13, 2, 5, 3, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpTrLtFbFddiMacStorageType.setStatus('mandatory')
lpTrLtFbFddiMacIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 13, 2, 5, 3, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: lpTrLtFbFddiMacIndex.setStatus('mandatory')
lpTrLtFbFddiMacTopTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 13, 2, 5, 3, 10), )
if mibBuilder.loadTexts: lpTrLtFbFddiMacTopTable.setStatus('mandatory')
lpTrLtFbFddiMacTopEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 13, 2, 5, 3, 10, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-LogicalProcessorMIB", "lpIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpTrIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpTrLtIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpTrLtFbIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpTrLtFbFddiMacIndex"))
if mibBuilder.loadTexts: lpTrLtFbFddiMacTopEntry.setStatus('mandatory')
lpTrLtFbFddiMacTData = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 13, 2, 5, 3, 10, 1, 1), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lpTrLtFbFddiMacTData.setStatus('mandatory')
lpTrLtFbMacEnet = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 13, 2, 5, 4))
lpTrLtFbMacEnetRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 13, 2, 5, 4, 1), )
if mibBuilder.loadTexts: lpTrLtFbMacEnetRowStatusTable.setStatus('mandatory')
lpTrLtFbMacEnetRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 13, 2, 5, 4, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-LogicalProcessorMIB", "lpIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpTrIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpTrLtIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpTrLtFbIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpTrLtFbMacEnetIndex"))
if mibBuilder.loadTexts: lpTrLtFbMacEnetRowStatusEntry.setStatus('mandatory')
lpTrLtFbMacEnetRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 13, 2, 5, 4, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpTrLtFbMacEnetRowStatus.setStatus('mandatory')
lpTrLtFbMacEnetComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 13, 2, 5, 4, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpTrLtFbMacEnetComponentName.setStatus('mandatory')
lpTrLtFbMacEnetStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 13, 2, 5, 4, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpTrLtFbMacEnetStorageType.setStatus('mandatory')
lpTrLtFbMacEnetIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 13, 2, 5, 4, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: lpTrLtFbMacEnetIndex.setStatus('mandatory')
lpTrLtFbMacEnetTopTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 13, 2, 5, 4, 10), )
if mibBuilder.loadTexts: lpTrLtFbMacEnetTopTable.setStatus('mandatory')
lpTrLtFbMacEnetTopEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 13, 2, 5, 4, 10, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-LogicalProcessorMIB", "lpIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpTrIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpTrLtIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpTrLtFbIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpTrLtFbMacEnetIndex"))
if mibBuilder.loadTexts: lpTrLtFbMacEnetTopEntry.setStatus('mandatory')
lpTrLtFbMacEnetTData = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 13, 2, 5, 4, 10, 1, 1), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lpTrLtFbMacEnetTData.setStatus('mandatory')
lpTrLtFbMacTr = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 13, 2, 5, 5))
lpTrLtFbMacTrRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 13, 2, 5, 5, 1), )
if mibBuilder.loadTexts: lpTrLtFbMacTrRowStatusTable.setStatus('mandatory')
lpTrLtFbMacTrRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 13, 2, 5, 5, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-LogicalProcessorMIB", "lpIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpTrIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpTrLtIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpTrLtFbIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpTrLtFbMacTrIndex"))
if mibBuilder.loadTexts: lpTrLtFbMacTrRowStatusEntry.setStatus('mandatory')
lpTrLtFbMacTrRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 13, 2, 5, 5, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpTrLtFbMacTrRowStatus.setStatus('mandatory')
lpTrLtFbMacTrComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 13, 2, 5, 5, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpTrLtFbMacTrComponentName.setStatus('mandatory')
lpTrLtFbMacTrStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 13, 2, 5, 5, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpTrLtFbMacTrStorageType.setStatus('mandatory')
lpTrLtFbMacTrIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 13, 2, 5, 5, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: lpTrLtFbMacTrIndex.setStatus('mandatory')
lpTrLtFbMacTrTopTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 13, 2, 5, 5, 10), )
if mibBuilder.loadTexts: lpTrLtFbMacTrTopTable.setStatus('mandatory')
lpTrLtFbMacTrTopEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 13, 2, 5, 5, 10, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-LogicalProcessorMIB", "lpIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpTrIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpTrLtIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpTrLtFbIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpTrLtFbMacTrIndex"))
if mibBuilder.loadTexts: lpTrLtFbMacTrTopEntry.setStatus('mandatory')
lpTrLtFbMacTrTData = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 13, 2, 5, 5, 10, 1, 1), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lpTrLtFbMacTrTData.setStatus('mandatory')
lpTrLtFbData = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 13, 2, 5, 6))
lpTrLtFbDataRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 13, 2, 5, 6, 1), )
if mibBuilder.loadTexts: lpTrLtFbDataRowStatusTable.setStatus('mandatory')
lpTrLtFbDataRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 13, 2, 5, 6, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-LogicalProcessorMIB", "lpIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpTrIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpTrLtIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpTrLtFbIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpTrLtFbDataIndex"))
if mibBuilder.loadTexts: lpTrLtFbDataRowStatusEntry.setStatus('mandatory')
lpTrLtFbDataRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 13, 2, 5, 6, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpTrLtFbDataRowStatus.setStatus('mandatory')
lpTrLtFbDataComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 13, 2, 5, 6, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpTrLtFbDataComponentName.setStatus('mandatory')
lpTrLtFbDataStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 13, 2, 5, 6, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpTrLtFbDataStorageType.setStatus('mandatory')
lpTrLtFbDataIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 13, 2, 5, 6, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: lpTrLtFbDataIndex.setStatus('mandatory')
lpTrLtFbDataTopTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 13, 2, 5, 6, 10), )
if mibBuilder.loadTexts: lpTrLtFbDataTopTable.setStatus('mandatory')
lpTrLtFbDataTopEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 13, 2, 5, 6, 10, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-LogicalProcessorMIB", "lpIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpTrIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpTrLtIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpTrLtFbIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpTrLtFbDataIndex"))
if mibBuilder.loadTexts: lpTrLtFbDataTopEntry.setStatus('mandatory')
lpTrLtFbDataTData = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 13, 2, 5, 6, 10, 1, 1), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lpTrLtFbDataTData.setStatus('mandatory')
lpTrLtFbIpH = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 13, 2, 5, 7))
lpTrLtFbIpHRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 13, 2, 5, 7, 1), )
if mibBuilder.loadTexts: lpTrLtFbIpHRowStatusTable.setStatus('mandatory')
lpTrLtFbIpHRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 13, 2, 5, 7, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-LogicalProcessorMIB", "lpIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpTrIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpTrLtIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpTrLtFbIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpTrLtFbIpHIndex"))
if mibBuilder.loadTexts: lpTrLtFbIpHRowStatusEntry.setStatus('mandatory')
lpTrLtFbIpHRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 13, 2, 5, 7, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpTrLtFbIpHRowStatus.setStatus('mandatory')
lpTrLtFbIpHComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 13, 2, 5, 7, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpTrLtFbIpHComponentName.setStatus('mandatory')
lpTrLtFbIpHStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 13, 2, 5, 7, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpTrLtFbIpHStorageType.setStatus('mandatory')
lpTrLtFbIpHIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 13, 2, 5, 7, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: lpTrLtFbIpHIndex.setStatus('mandatory')
lpTrLtFbIpHTopTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 13, 2, 5, 7, 10), )
if mibBuilder.loadTexts: lpTrLtFbIpHTopTable.setStatus('mandatory')
lpTrLtFbIpHTopEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 13, 2, 5, 7, 10, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-LogicalProcessorMIB", "lpIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpTrIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpTrLtIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpTrLtFbIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpTrLtFbIpHIndex"))
if mibBuilder.loadTexts: lpTrLtFbIpHTopEntry.setStatus('mandatory')
lpTrLtFbIpHTData = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 13, 2, 5, 7, 10, 1, 1), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lpTrLtFbIpHTData.setStatus('mandatory')
lpTrLtFbLlch = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 13, 2, 5, 8))
lpTrLtFbLlchRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 13, 2, 5, 8, 1), )
if mibBuilder.loadTexts: lpTrLtFbLlchRowStatusTable.setStatus('mandatory')
lpTrLtFbLlchRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 13, 2, 5, 8, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-LogicalProcessorMIB", "lpIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpTrIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpTrLtIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpTrLtFbIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpTrLtFbLlchIndex"))
if mibBuilder.loadTexts: lpTrLtFbLlchRowStatusEntry.setStatus('mandatory')
lpTrLtFbLlchRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 13, 2, 5, 8, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpTrLtFbLlchRowStatus.setStatus('mandatory')
lpTrLtFbLlchComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 13, 2, 5, 8, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpTrLtFbLlchComponentName.setStatus('mandatory')
lpTrLtFbLlchStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 13, 2, 5, 8, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpTrLtFbLlchStorageType.setStatus('mandatory')
lpTrLtFbLlchIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 13, 2, 5, 8, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: lpTrLtFbLlchIndex.setStatus('mandatory')
lpTrLtFbLlchTopTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 13, 2, 5, 8, 10), )
if mibBuilder.loadTexts: lpTrLtFbLlchTopTable.setStatus('mandatory')
lpTrLtFbLlchTopEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 13, 2, 5, 8, 10, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-LogicalProcessorMIB", "lpIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpTrIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpTrLtIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpTrLtFbIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpTrLtFbLlchIndex"))
if mibBuilder.loadTexts: lpTrLtFbLlchTopEntry.setStatus('mandatory')
lpTrLtFbLlchTData = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 13, 2, 5, 8, 10, 1, 1), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lpTrLtFbLlchTData.setStatus('mandatory')
lpTrLtFbAppleH = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 13, 2, 5, 9))
lpTrLtFbAppleHRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 13, 2, 5, 9, 1), )
if mibBuilder.loadTexts: lpTrLtFbAppleHRowStatusTable.setStatus('mandatory')
lpTrLtFbAppleHRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 13, 2, 5, 9, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-LogicalProcessorMIB", "lpIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpTrIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpTrLtIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpTrLtFbIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpTrLtFbAppleHIndex"))
if mibBuilder.loadTexts: lpTrLtFbAppleHRowStatusEntry.setStatus('mandatory')
lpTrLtFbAppleHRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 13, 2, 5, 9, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpTrLtFbAppleHRowStatus.setStatus('mandatory')
lpTrLtFbAppleHComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 13, 2, 5, 9, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpTrLtFbAppleHComponentName.setStatus('mandatory')
lpTrLtFbAppleHStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 13, 2, 5, 9, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpTrLtFbAppleHStorageType.setStatus('mandatory')
lpTrLtFbAppleHIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 13, 2, 5, 9, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: lpTrLtFbAppleHIndex.setStatus('mandatory')
lpTrLtFbAppleHTopTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 13, 2, 5, 9, 10), )
if mibBuilder.loadTexts: lpTrLtFbAppleHTopTable.setStatus('mandatory')
lpTrLtFbAppleHTopEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 13, 2, 5, 9, 10, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-LogicalProcessorMIB", "lpIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpTrIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpTrLtIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpTrLtFbIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpTrLtFbAppleHIndex"))
if mibBuilder.loadTexts: lpTrLtFbAppleHTopEntry.setStatus('mandatory')
lpTrLtFbAppleHTData = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 13, 2, 5, 9, 10, 1, 1), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lpTrLtFbAppleHTData.setStatus('mandatory')
lpTrLtFbIpxH = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 13, 2, 5, 10))
lpTrLtFbIpxHRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 13, 2, 5, 10, 1), )
if mibBuilder.loadTexts: lpTrLtFbIpxHRowStatusTable.setStatus('mandatory')
lpTrLtFbIpxHRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 13, 2, 5, 10, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-LogicalProcessorMIB", "lpIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpTrIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpTrLtIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpTrLtFbIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpTrLtFbIpxHIndex"))
if mibBuilder.loadTexts: lpTrLtFbIpxHRowStatusEntry.setStatus('mandatory')
lpTrLtFbIpxHRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 13, 2, 5, 10, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpTrLtFbIpxHRowStatus.setStatus('mandatory')
lpTrLtFbIpxHComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 13, 2, 5, 10, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpTrLtFbIpxHComponentName.setStatus('mandatory')
lpTrLtFbIpxHStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 13, 2, 5, 10, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpTrLtFbIpxHStorageType.setStatus('mandatory')
lpTrLtFbIpxHIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 13, 2, 5, 10, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: lpTrLtFbIpxHIndex.setStatus('mandatory')
lpTrLtFbIpxHTopTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 13, 2, 5, 10, 10), )
if mibBuilder.loadTexts: lpTrLtFbIpxHTopTable.setStatus('mandatory')
lpTrLtFbIpxHTopEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 13, 2, 5, 10, 10, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-LogicalProcessorMIB", "lpIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpTrIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpTrLtIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpTrLtFbIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpTrLtFbIpxHIndex"))
if mibBuilder.loadTexts: lpTrLtFbIpxHTopEntry.setStatus('mandatory')
lpTrLtFbIpxHTData = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 13, 2, 5, 10, 10, 1, 1), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lpTrLtFbIpxHTData.setStatus('mandatory')
lpTrLtCntl = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 13, 2, 6))
lpTrLtCntlRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 13, 2, 6, 1), )
if mibBuilder.loadTexts: lpTrLtCntlRowStatusTable.setStatus('mandatory')
lpTrLtCntlRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 13, 2, 6, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-LogicalProcessorMIB", "lpIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpTrIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpTrLtIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpTrLtCntlIndex"))
if mibBuilder.loadTexts: lpTrLtCntlRowStatusEntry.setStatus('mandatory')
lpTrLtCntlRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 13, 2, 6, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpTrLtCntlRowStatus.setStatus('mandatory')
lpTrLtCntlComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 13, 2, 6, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpTrLtCntlComponentName.setStatus('mandatory')
lpTrLtCntlStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 13, 2, 6, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpTrLtCntlStorageType.setStatus('mandatory')
lpTrLtCntlIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 13, 2, 6, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: lpTrLtCntlIndex.setStatus('mandatory')
lpTrLtCntlTopTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 13, 2, 6, 10), )
if mibBuilder.loadTexts: lpTrLtCntlTopTable.setStatus('mandatory')
lpTrLtCntlTopEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 13, 2, 6, 10, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-LogicalProcessorMIB", "lpIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpTrIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpTrLtIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpTrLtCntlIndex"))
if mibBuilder.loadTexts: lpTrLtCntlTopEntry.setStatus('mandatory')
lpTrLtCntlTData = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 13, 2, 6, 10, 1, 1), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lpTrLtCntlTData.setStatus('mandatory')
lpTrTest = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 13, 5))
lpTrTestRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 13, 5, 1), )
if mibBuilder.loadTexts: lpTrTestRowStatusTable.setStatus('mandatory')
lpTrTestRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 13, 5, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-LogicalProcessorMIB", "lpIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpTrIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpTrTestIndex"))
if mibBuilder.loadTexts: lpTrTestRowStatusEntry.setStatus('mandatory')
lpTrTestRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 13, 5, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpTrTestRowStatus.setStatus('mandatory')
lpTrTestComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 13, 5, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpTrTestComponentName.setStatus('mandatory')
lpTrTestStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 13, 5, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpTrTestStorageType.setStatus('mandatory')
lpTrTestIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 13, 5, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: lpTrTestIndex.setStatus('mandatory')
lpTrTestPTOTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 13, 5, 10), )
if mibBuilder.loadTexts: lpTrTestPTOTable.setStatus('mandatory')
lpTrTestPTOEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 13, 5, 10, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-LogicalProcessorMIB", "lpIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpTrIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpTrTestIndex"))
if mibBuilder.loadTexts: lpTrTestPTOEntry.setStatus('mandatory')
lpTrTestType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 13, 5, 10, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 257, 258, 259, 260, 263, 264, 265, 266, 267, 268))).clone(namedValues=NamedValues(("onCard", 0), ("normal", 1), ("wrapA", 257), ("wrapB", 258), ("thruA", 259), ("thruB", 260), ("extWrapA", 263), ("extWrapB", 264), ("extThruA", 265), ("extThruB", 266), ("extWrapAB", 267), ("extWrapBA", 268)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lpTrTestType.setStatus('mandatory')
lpTrTestFrmSize = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 13, 5, 10, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(4, 4096)).clone(1024)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lpTrTestFrmSize.setStatus('mandatory')
lpTrTestDuration = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 13, 5, 10, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 30240)).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lpTrTestDuration.setStatus('mandatory')
lpTrTestResultsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 13, 5, 11), )
if mibBuilder.loadTexts: lpTrTestResultsTable.setStatus('mandatory')
lpTrTestResultsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 13, 5, 11, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-LogicalProcessorMIB", "lpIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpTrIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpTrTestIndex"))
if mibBuilder.loadTexts: lpTrTestResultsEntry.setStatus('mandatory')
lpTrTestElapsedTime = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 13, 5, 11, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpTrTestElapsedTime.setStatus('mandatory')
lpTrTestTimeRemaining = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 13, 5, 11, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpTrTestTimeRemaining.setStatus('mandatory')
lpTrTestCauseOfTermination = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 13, 5, 11, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("testTimeExpired", 0), ("stoppedByOperator", 1), ("unknown", 2), ("neverStarted", 3), ("testRunning", 4))).clone('neverStarted')).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpTrTestCauseOfTermination.setStatus('mandatory')
lpTrTestFrmTx = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 13, 5, 11, 1, 7), PassportCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpTrTestFrmTx.setStatus('mandatory')
lpTrTestBitsTx = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 13, 5, 11, 1, 8), PassportCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpTrTestBitsTx.setStatus('mandatory')
lpTrTestFrmRx = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 13, 5, 11, 1, 9), PassportCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpTrTestFrmRx.setStatus('mandatory')
lpTrTestBitsRx = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 13, 5, 11, 1, 10), PassportCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpTrTestBitsRx.setStatus('mandatory')
lpTrTestErroredFrmRx = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 13, 5, 11, 1, 11), PassportCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpTrTestErroredFrmRx.setStatus('mandatory')
lpIlsFwdr = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 21))
lpIlsFwdrRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 21, 1), )
if mibBuilder.loadTexts: lpIlsFwdrRowStatusTable.setStatus('mandatory')
lpIlsFwdrRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 21, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-LogicalProcessorMIB", "lpIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpIlsFwdrIndex"))
if mibBuilder.loadTexts: lpIlsFwdrRowStatusEntry.setStatus('mandatory')
lpIlsFwdrRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 21, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lpIlsFwdrRowStatus.setStatus('mandatory')
lpIlsFwdrComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 21, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpIlsFwdrComponentName.setStatus('mandatory')
lpIlsFwdrStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 21, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpIlsFwdrStorageType.setStatus('mandatory')
lpIlsFwdrIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 21, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 0)))
if mibBuilder.loadTexts: lpIlsFwdrIndex.setStatus('mandatory')
lpIlsFwdrIfEntryTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 21, 11), )
if mibBuilder.loadTexts: lpIlsFwdrIfEntryTable.setStatus('mandatory')
lpIlsFwdrIfEntryEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 21, 11, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-LogicalProcessorMIB", "lpIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpIlsFwdrIndex"))
if mibBuilder.loadTexts: lpIlsFwdrIfEntryEntry.setStatus('mandatory')
lpIlsFwdrIfAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 21, 11, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("testing", 3))).clone('up')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lpIlsFwdrIfAdminStatus.setStatus('mandatory')
lpIlsFwdrIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 21, 11, 1, 2), InterfaceIndex().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpIlsFwdrIfIndex.setStatus('mandatory')
lpIlsFwdrStateTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 21, 12), )
if mibBuilder.loadTexts: lpIlsFwdrStateTable.setStatus('mandatory')
lpIlsFwdrStateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 21, 12, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-LogicalProcessorMIB", "lpIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpIlsFwdrIndex"))
if mibBuilder.loadTexts: lpIlsFwdrStateEntry.setStatus('mandatory')
lpIlsFwdrAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 21, 12, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("locked", 0), ("unlocked", 1), ("shuttingDown", 2))).clone('unlocked')).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpIlsFwdrAdminState.setStatus('mandatory')
lpIlsFwdrOperationalState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 21, 12, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1))).clone('disabled')).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpIlsFwdrOperationalState.setStatus('mandatory')
lpIlsFwdrUsageState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 21, 12, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("idle", 0), ("active", 1), ("busy", 2))).clone('idle')).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpIlsFwdrUsageState.setStatus('mandatory')
lpIlsFwdrOperStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 21, 13), )
if mibBuilder.loadTexts: lpIlsFwdrOperStatusTable.setStatus('mandatory')
lpIlsFwdrOperStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 21, 13, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-LogicalProcessorMIB", "lpIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpIlsFwdrIndex"))
if mibBuilder.loadTexts: lpIlsFwdrOperStatusEntry.setStatus('mandatory')
lpIlsFwdrSnmpOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 21, 13, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("testing", 3))).clone('up')).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpIlsFwdrSnmpOperStatus.setStatus('mandatory')
lpIlsFwdrStatsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 21, 14), )
if mibBuilder.loadTexts: lpIlsFwdrStatsTable.setStatus('mandatory')
lpIlsFwdrStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 21, 14, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-LogicalProcessorMIB", "lpIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpIlsFwdrIndex"))
if mibBuilder.loadTexts: lpIlsFwdrStatsEntry.setStatus('mandatory')
lpIlsFwdrFramesReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 21, 14, 1, 1), PassportCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpIlsFwdrFramesReceived.setStatus('mandatory')
lpIlsFwdrProcessedCount = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 21, 14, 1, 2), PassportCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpIlsFwdrProcessedCount.setStatus('mandatory')
lpIlsFwdrErrorCount = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 21, 14, 1, 3), PassportCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpIlsFwdrErrorCount.setStatus('mandatory')
lpIlsFwdrFramesDiscarded = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 21, 14, 1, 4), PassportCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpIlsFwdrFramesDiscarded.setStatus('mandatory')
lpIlsFwdrLinkToTrafficSourceTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 21, 312), )
if mibBuilder.loadTexts: lpIlsFwdrLinkToTrafficSourceTable.setStatus('mandatory')
lpIlsFwdrLinkToTrafficSourceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 21, 312, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-LogicalProcessorMIB", "lpIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpIlsFwdrIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpIlsFwdrLinkToTrafficSourceValue"))
if mibBuilder.loadTexts: lpIlsFwdrLinkToTrafficSourceEntry.setStatus('mandatory')
lpIlsFwdrLinkToTrafficSourceValue = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 21, 312, 1, 1), Link()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpIlsFwdrLinkToTrafficSourceValue.setStatus('mandatory')
lpIlsFwdrLt = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 21, 2))
lpIlsFwdrLtRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 21, 2, 1), )
if mibBuilder.loadTexts: lpIlsFwdrLtRowStatusTable.setStatus('mandatory')
lpIlsFwdrLtRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 21, 2, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-LogicalProcessorMIB", "lpIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpIlsFwdrIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpIlsFwdrLtIndex"))
if mibBuilder.loadTexts: lpIlsFwdrLtRowStatusEntry.setStatus('mandatory')
lpIlsFwdrLtRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 21, 2, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpIlsFwdrLtRowStatus.setStatus('mandatory')
lpIlsFwdrLtComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 21, 2, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpIlsFwdrLtComponentName.setStatus('mandatory')
lpIlsFwdrLtStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 21, 2, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpIlsFwdrLtStorageType.setStatus('mandatory')
lpIlsFwdrLtIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 21, 2, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: lpIlsFwdrLtIndex.setStatus('mandatory')
lpIlsFwdrLtTopTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 21, 2, 20), )
if mibBuilder.loadTexts: lpIlsFwdrLtTopTable.setStatus('mandatory')
lpIlsFwdrLtTopEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 21, 2, 20, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-LogicalProcessorMIB", "lpIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpIlsFwdrIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpIlsFwdrLtIndex"))
if mibBuilder.loadTexts: lpIlsFwdrLtTopEntry.setStatus('mandatory')
lpIlsFwdrLtTData = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 21, 2, 20, 1, 1), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lpIlsFwdrLtTData.setStatus('mandatory')
lpIlsFwdrLtFrmCmp = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 21, 2, 2))
lpIlsFwdrLtFrmCmpRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 21, 2, 2, 1), )
if mibBuilder.loadTexts: lpIlsFwdrLtFrmCmpRowStatusTable.setStatus('mandatory')
lpIlsFwdrLtFrmCmpRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 21, 2, 2, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-LogicalProcessorMIB", "lpIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpIlsFwdrIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpIlsFwdrLtIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpIlsFwdrLtFrmCmpIndex"))
if mibBuilder.loadTexts: lpIlsFwdrLtFrmCmpRowStatusEntry.setStatus('mandatory')
lpIlsFwdrLtFrmCmpRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 21, 2, 2, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpIlsFwdrLtFrmCmpRowStatus.setStatus('mandatory')
lpIlsFwdrLtFrmCmpComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 21, 2, 2, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpIlsFwdrLtFrmCmpComponentName.setStatus('mandatory')
lpIlsFwdrLtFrmCmpStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 21, 2, 2, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpIlsFwdrLtFrmCmpStorageType.setStatus('mandatory')
lpIlsFwdrLtFrmCmpIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 21, 2, 2, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: lpIlsFwdrLtFrmCmpIndex.setStatus('mandatory')
lpIlsFwdrLtFrmCmpTopTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 21, 2, 2, 10), )
if mibBuilder.loadTexts: lpIlsFwdrLtFrmCmpTopTable.setStatus('mandatory')
lpIlsFwdrLtFrmCmpTopEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 21, 2, 2, 10, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-LogicalProcessorMIB", "lpIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpIlsFwdrIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpIlsFwdrLtIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpIlsFwdrLtFrmCmpIndex"))
if mibBuilder.loadTexts: lpIlsFwdrLtFrmCmpTopEntry.setStatus('mandatory')
lpIlsFwdrLtFrmCmpTData = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 21, 2, 2, 10, 1, 1), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lpIlsFwdrLtFrmCmpTData.setStatus('mandatory')
lpIlsFwdrLtFrmCpy = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 21, 2, 3))
lpIlsFwdrLtFrmCpyRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 21, 2, 3, 1), )
if mibBuilder.loadTexts: lpIlsFwdrLtFrmCpyRowStatusTable.setStatus('mandatory')
lpIlsFwdrLtFrmCpyRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 21, 2, 3, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-LogicalProcessorMIB", "lpIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpIlsFwdrIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpIlsFwdrLtIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpIlsFwdrLtFrmCpyIndex"))
if mibBuilder.loadTexts: lpIlsFwdrLtFrmCpyRowStatusEntry.setStatus('mandatory')
lpIlsFwdrLtFrmCpyRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 21, 2, 3, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpIlsFwdrLtFrmCpyRowStatus.setStatus('mandatory')
lpIlsFwdrLtFrmCpyComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 21, 2, 3, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpIlsFwdrLtFrmCpyComponentName.setStatus('mandatory')
lpIlsFwdrLtFrmCpyStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 21, 2, 3, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpIlsFwdrLtFrmCpyStorageType.setStatus('mandatory')
lpIlsFwdrLtFrmCpyIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 21, 2, 3, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: lpIlsFwdrLtFrmCpyIndex.setStatus('mandatory')
lpIlsFwdrLtFrmCpyTopTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 21, 2, 3, 10), )
if mibBuilder.loadTexts: lpIlsFwdrLtFrmCpyTopTable.setStatus('mandatory')
lpIlsFwdrLtFrmCpyTopEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 21, 2, 3, 10, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-LogicalProcessorMIB", "lpIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpIlsFwdrIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpIlsFwdrLtIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpIlsFwdrLtFrmCpyIndex"))
if mibBuilder.loadTexts: lpIlsFwdrLtFrmCpyTopEntry.setStatus('mandatory')
lpIlsFwdrLtFrmCpyTData = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 21, 2, 3, 10, 1, 1), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lpIlsFwdrLtFrmCpyTData.setStatus('mandatory')
lpIlsFwdrLtPrtCfg = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 21, 2, 4))
lpIlsFwdrLtPrtCfgRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 21, 2, 4, 1), )
if mibBuilder.loadTexts: lpIlsFwdrLtPrtCfgRowStatusTable.setStatus('mandatory')
lpIlsFwdrLtPrtCfgRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 21, 2, 4, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-LogicalProcessorMIB", "lpIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpIlsFwdrIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpIlsFwdrLtIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpIlsFwdrLtPrtCfgIndex"))
if mibBuilder.loadTexts: lpIlsFwdrLtPrtCfgRowStatusEntry.setStatus('mandatory')
lpIlsFwdrLtPrtCfgRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 21, 2, 4, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpIlsFwdrLtPrtCfgRowStatus.setStatus('mandatory')
lpIlsFwdrLtPrtCfgComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 21, 2, 4, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpIlsFwdrLtPrtCfgComponentName.setStatus('mandatory')
lpIlsFwdrLtPrtCfgStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 21, 2, 4, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpIlsFwdrLtPrtCfgStorageType.setStatus('mandatory')
lpIlsFwdrLtPrtCfgIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 21, 2, 4, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: lpIlsFwdrLtPrtCfgIndex.setStatus('mandatory')
lpIlsFwdrLtPrtCfgTopTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 21, 2, 4, 10), )
if mibBuilder.loadTexts: lpIlsFwdrLtPrtCfgTopTable.setStatus('mandatory')
lpIlsFwdrLtPrtCfgTopEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 21, 2, 4, 10, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-LogicalProcessorMIB", "lpIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpIlsFwdrIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpIlsFwdrLtIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpIlsFwdrLtPrtCfgIndex"))
if mibBuilder.loadTexts: lpIlsFwdrLtPrtCfgTopEntry.setStatus('mandatory')
lpIlsFwdrLtPrtCfgTData = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 21, 2, 4, 10, 1, 1), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lpIlsFwdrLtPrtCfgTData.setStatus('mandatory')
lpIlsFwdrLtFb = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 21, 2, 5))
lpIlsFwdrLtFbRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 21, 2, 5, 1), )
if mibBuilder.loadTexts: lpIlsFwdrLtFbRowStatusTable.setStatus('mandatory')
lpIlsFwdrLtFbRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 21, 2, 5, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-LogicalProcessorMIB", "lpIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpIlsFwdrIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpIlsFwdrLtIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpIlsFwdrLtFbIndex"))
if mibBuilder.loadTexts: lpIlsFwdrLtFbRowStatusEntry.setStatus('mandatory')
lpIlsFwdrLtFbRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 21, 2, 5, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpIlsFwdrLtFbRowStatus.setStatus('mandatory')
lpIlsFwdrLtFbComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 21, 2, 5, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpIlsFwdrLtFbComponentName.setStatus('mandatory')
lpIlsFwdrLtFbStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 21, 2, 5, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpIlsFwdrLtFbStorageType.setStatus('mandatory')
lpIlsFwdrLtFbIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 21, 2, 5, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: lpIlsFwdrLtFbIndex.setStatus('mandatory')
lpIlsFwdrLtFbTopTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 21, 2, 5, 20), )
if mibBuilder.loadTexts: lpIlsFwdrLtFbTopTable.setStatus('mandatory')
lpIlsFwdrLtFbTopEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 21, 2, 5, 20, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-LogicalProcessorMIB", "lpIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpIlsFwdrIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpIlsFwdrLtIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpIlsFwdrLtFbIndex"))
if mibBuilder.loadTexts: lpIlsFwdrLtFbTopEntry.setStatus('mandatory')
lpIlsFwdrLtFbTData = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 21, 2, 5, 20, 1, 1), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lpIlsFwdrLtFbTData.setStatus('mandatory')
lpIlsFwdrLtFbTxInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 21, 2, 5, 2))
lpIlsFwdrLtFbTxInfoRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 21, 2, 5, 2, 1), )
if mibBuilder.loadTexts: lpIlsFwdrLtFbTxInfoRowStatusTable.setStatus('mandatory')
lpIlsFwdrLtFbTxInfoRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 21, 2, 5, 2, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-LogicalProcessorMIB", "lpIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpIlsFwdrIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpIlsFwdrLtIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpIlsFwdrLtFbIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpIlsFwdrLtFbTxInfoIndex"))
if mibBuilder.loadTexts: lpIlsFwdrLtFbTxInfoRowStatusEntry.setStatus('mandatory')
lpIlsFwdrLtFbTxInfoRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 21, 2, 5, 2, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpIlsFwdrLtFbTxInfoRowStatus.setStatus('mandatory')
lpIlsFwdrLtFbTxInfoComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 21, 2, 5, 2, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpIlsFwdrLtFbTxInfoComponentName.setStatus('mandatory')
lpIlsFwdrLtFbTxInfoStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 21, 2, 5, 2, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpIlsFwdrLtFbTxInfoStorageType.setStatus('mandatory')
lpIlsFwdrLtFbTxInfoIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 21, 2, 5, 2, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: lpIlsFwdrLtFbTxInfoIndex.setStatus('mandatory')
lpIlsFwdrLtFbTxInfoTopTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 21, 2, 5, 2, 10), )
if mibBuilder.loadTexts: lpIlsFwdrLtFbTxInfoTopTable.setStatus('mandatory')
lpIlsFwdrLtFbTxInfoTopEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 21, 2, 5, 2, 10, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-LogicalProcessorMIB", "lpIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpIlsFwdrIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpIlsFwdrLtIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpIlsFwdrLtFbIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpIlsFwdrLtFbTxInfoIndex"))
if mibBuilder.loadTexts: lpIlsFwdrLtFbTxInfoTopEntry.setStatus('mandatory')
lpIlsFwdrLtFbTxInfoTData = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 21, 2, 5, 2, 10, 1, 1), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lpIlsFwdrLtFbTxInfoTData.setStatus('mandatory')
lpIlsFwdrLtFbFddiMac = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 21, 2, 5, 3))
lpIlsFwdrLtFbFddiMacRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 21, 2, 5, 3, 1), )
if mibBuilder.loadTexts: lpIlsFwdrLtFbFddiMacRowStatusTable.setStatus('mandatory')
lpIlsFwdrLtFbFddiMacRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 21, 2, 5, 3, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-LogicalProcessorMIB", "lpIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpIlsFwdrIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpIlsFwdrLtIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpIlsFwdrLtFbIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpIlsFwdrLtFbFddiMacIndex"))
if mibBuilder.loadTexts: lpIlsFwdrLtFbFddiMacRowStatusEntry.setStatus('mandatory')
lpIlsFwdrLtFbFddiMacRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 21, 2, 5, 3, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpIlsFwdrLtFbFddiMacRowStatus.setStatus('mandatory')
lpIlsFwdrLtFbFddiMacComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 21, 2, 5, 3, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpIlsFwdrLtFbFddiMacComponentName.setStatus('mandatory')
lpIlsFwdrLtFbFddiMacStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 21, 2, 5, 3, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpIlsFwdrLtFbFddiMacStorageType.setStatus('mandatory')
lpIlsFwdrLtFbFddiMacIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 21, 2, 5, 3, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: lpIlsFwdrLtFbFddiMacIndex.setStatus('mandatory')
lpIlsFwdrLtFbFddiMacTopTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 21, 2, 5, 3, 10), )
if mibBuilder.loadTexts: lpIlsFwdrLtFbFddiMacTopTable.setStatus('mandatory')
lpIlsFwdrLtFbFddiMacTopEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 21, 2, 5, 3, 10, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-LogicalProcessorMIB", "lpIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpIlsFwdrIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpIlsFwdrLtIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpIlsFwdrLtFbIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpIlsFwdrLtFbFddiMacIndex"))
if mibBuilder.loadTexts: lpIlsFwdrLtFbFddiMacTopEntry.setStatus('mandatory')
lpIlsFwdrLtFbFddiMacTData = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 21, 2, 5, 3, 10, 1, 1), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lpIlsFwdrLtFbFddiMacTData.setStatus('mandatory')
lpIlsFwdrLtFbMacEnet = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 21, 2, 5, 4))
lpIlsFwdrLtFbMacEnetRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 21, 2, 5, 4, 1), )
if mibBuilder.loadTexts: lpIlsFwdrLtFbMacEnetRowStatusTable.setStatus('mandatory')
lpIlsFwdrLtFbMacEnetRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 21, 2, 5, 4, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-LogicalProcessorMIB", "lpIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpIlsFwdrIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpIlsFwdrLtIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpIlsFwdrLtFbIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpIlsFwdrLtFbMacEnetIndex"))
if mibBuilder.loadTexts: lpIlsFwdrLtFbMacEnetRowStatusEntry.setStatus('mandatory')
lpIlsFwdrLtFbMacEnetRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 21, 2, 5, 4, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpIlsFwdrLtFbMacEnetRowStatus.setStatus('mandatory')
lpIlsFwdrLtFbMacEnetComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 21, 2, 5, 4, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpIlsFwdrLtFbMacEnetComponentName.setStatus('mandatory')
lpIlsFwdrLtFbMacEnetStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 21, 2, 5, 4, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpIlsFwdrLtFbMacEnetStorageType.setStatus('mandatory')
lpIlsFwdrLtFbMacEnetIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 21, 2, 5, 4, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: lpIlsFwdrLtFbMacEnetIndex.setStatus('mandatory')
lpIlsFwdrLtFbMacEnetTopTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 21, 2, 5, 4, 10), )
if mibBuilder.loadTexts: lpIlsFwdrLtFbMacEnetTopTable.setStatus('mandatory')
lpIlsFwdrLtFbMacEnetTopEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 21, 2, 5, 4, 10, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-LogicalProcessorMIB", "lpIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpIlsFwdrIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpIlsFwdrLtIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpIlsFwdrLtFbIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpIlsFwdrLtFbMacEnetIndex"))
if mibBuilder.loadTexts: lpIlsFwdrLtFbMacEnetTopEntry.setStatus('mandatory')
lpIlsFwdrLtFbMacEnetTData = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 21, 2, 5, 4, 10, 1, 1), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lpIlsFwdrLtFbMacEnetTData.setStatus('mandatory')
lpIlsFwdrLtFbMacTr = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 21, 2, 5, 5))
lpIlsFwdrLtFbMacTrRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 21, 2, 5, 5, 1), )
if mibBuilder.loadTexts: lpIlsFwdrLtFbMacTrRowStatusTable.setStatus('mandatory')
lpIlsFwdrLtFbMacTrRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 21, 2, 5, 5, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-LogicalProcessorMIB", "lpIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpIlsFwdrIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpIlsFwdrLtIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpIlsFwdrLtFbIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpIlsFwdrLtFbMacTrIndex"))
if mibBuilder.loadTexts: lpIlsFwdrLtFbMacTrRowStatusEntry.setStatus('mandatory')
lpIlsFwdrLtFbMacTrRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 21, 2, 5, 5, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpIlsFwdrLtFbMacTrRowStatus.setStatus('mandatory')
lpIlsFwdrLtFbMacTrComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 21, 2, 5, 5, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpIlsFwdrLtFbMacTrComponentName.setStatus('mandatory')
lpIlsFwdrLtFbMacTrStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 21, 2, 5, 5, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpIlsFwdrLtFbMacTrStorageType.setStatus('mandatory')
lpIlsFwdrLtFbMacTrIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 21, 2, 5, 5, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: lpIlsFwdrLtFbMacTrIndex.setStatus('mandatory')
lpIlsFwdrLtFbMacTrTopTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 21, 2, 5, 5, 10), )
if mibBuilder.loadTexts: lpIlsFwdrLtFbMacTrTopTable.setStatus('mandatory')
lpIlsFwdrLtFbMacTrTopEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 21, 2, 5, 5, 10, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-LogicalProcessorMIB", "lpIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpIlsFwdrIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpIlsFwdrLtIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpIlsFwdrLtFbIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpIlsFwdrLtFbMacTrIndex"))
if mibBuilder.loadTexts: lpIlsFwdrLtFbMacTrTopEntry.setStatus('mandatory')
lpIlsFwdrLtFbMacTrTData = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 21, 2, 5, 5, 10, 1, 1), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lpIlsFwdrLtFbMacTrTData.setStatus('mandatory')
lpIlsFwdrLtFbData = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 21, 2, 5, 6))
lpIlsFwdrLtFbDataRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 21, 2, 5, 6, 1), )
if mibBuilder.loadTexts: lpIlsFwdrLtFbDataRowStatusTable.setStatus('mandatory')
lpIlsFwdrLtFbDataRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 21, 2, 5, 6, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-LogicalProcessorMIB", "lpIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpIlsFwdrIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpIlsFwdrLtIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpIlsFwdrLtFbIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpIlsFwdrLtFbDataIndex"))
if mibBuilder.loadTexts: lpIlsFwdrLtFbDataRowStatusEntry.setStatus('mandatory')
lpIlsFwdrLtFbDataRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 21, 2, 5, 6, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpIlsFwdrLtFbDataRowStatus.setStatus('mandatory')
lpIlsFwdrLtFbDataComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 21, 2, 5, 6, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpIlsFwdrLtFbDataComponentName.setStatus('mandatory')
lpIlsFwdrLtFbDataStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 21, 2, 5, 6, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpIlsFwdrLtFbDataStorageType.setStatus('mandatory')
lpIlsFwdrLtFbDataIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 21, 2, 5, 6, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: lpIlsFwdrLtFbDataIndex.setStatus('mandatory')
lpIlsFwdrLtFbDataTopTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 21, 2, 5, 6, 10), )
if mibBuilder.loadTexts: lpIlsFwdrLtFbDataTopTable.setStatus('mandatory')
lpIlsFwdrLtFbDataTopEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 21, 2, 5, 6, 10, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-LogicalProcessorMIB", "lpIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpIlsFwdrIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpIlsFwdrLtIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpIlsFwdrLtFbIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpIlsFwdrLtFbDataIndex"))
if mibBuilder.loadTexts: lpIlsFwdrLtFbDataTopEntry.setStatus('mandatory')
lpIlsFwdrLtFbDataTData = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 21, 2, 5, 6, 10, 1, 1), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lpIlsFwdrLtFbDataTData.setStatus('mandatory')
lpIlsFwdrLtFbIpH = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 21, 2, 5, 7))
lpIlsFwdrLtFbIpHRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 21, 2, 5, 7, 1), )
if mibBuilder.loadTexts: lpIlsFwdrLtFbIpHRowStatusTable.setStatus('mandatory')
lpIlsFwdrLtFbIpHRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 21, 2, 5, 7, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-LogicalProcessorMIB", "lpIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpIlsFwdrIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpIlsFwdrLtIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpIlsFwdrLtFbIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpIlsFwdrLtFbIpHIndex"))
if mibBuilder.loadTexts: lpIlsFwdrLtFbIpHRowStatusEntry.setStatus('mandatory')
lpIlsFwdrLtFbIpHRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 21, 2, 5, 7, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpIlsFwdrLtFbIpHRowStatus.setStatus('mandatory')
lpIlsFwdrLtFbIpHComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 21, 2, 5, 7, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpIlsFwdrLtFbIpHComponentName.setStatus('mandatory')
lpIlsFwdrLtFbIpHStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 21, 2, 5, 7, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpIlsFwdrLtFbIpHStorageType.setStatus('mandatory')
lpIlsFwdrLtFbIpHIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 21, 2, 5, 7, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: lpIlsFwdrLtFbIpHIndex.setStatus('mandatory')
lpIlsFwdrLtFbIpHTopTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 21, 2, 5, 7, 10), )
if mibBuilder.loadTexts: lpIlsFwdrLtFbIpHTopTable.setStatus('mandatory')
lpIlsFwdrLtFbIpHTopEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 21, 2, 5, 7, 10, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-LogicalProcessorMIB", "lpIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpIlsFwdrIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpIlsFwdrLtIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpIlsFwdrLtFbIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpIlsFwdrLtFbIpHIndex"))
if mibBuilder.loadTexts: lpIlsFwdrLtFbIpHTopEntry.setStatus('mandatory')
lpIlsFwdrLtFbIpHTData = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 21, 2, 5, 7, 10, 1, 1), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lpIlsFwdrLtFbIpHTData.setStatus('mandatory')
lpIlsFwdrLtFbLlch = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 21, 2, 5, 8))
lpIlsFwdrLtFbLlchRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 21, 2, 5, 8, 1), )
if mibBuilder.loadTexts: lpIlsFwdrLtFbLlchRowStatusTable.setStatus('mandatory')
lpIlsFwdrLtFbLlchRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 21, 2, 5, 8, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-LogicalProcessorMIB", "lpIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpIlsFwdrIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpIlsFwdrLtIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpIlsFwdrLtFbIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpIlsFwdrLtFbLlchIndex"))
if mibBuilder.loadTexts: lpIlsFwdrLtFbLlchRowStatusEntry.setStatus('mandatory')
lpIlsFwdrLtFbLlchRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 21, 2, 5, 8, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpIlsFwdrLtFbLlchRowStatus.setStatus('mandatory')
lpIlsFwdrLtFbLlchComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 21, 2, 5, 8, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpIlsFwdrLtFbLlchComponentName.setStatus('mandatory')
lpIlsFwdrLtFbLlchStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 21, 2, 5, 8, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpIlsFwdrLtFbLlchStorageType.setStatus('mandatory')
lpIlsFwdrLtFbLlchIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 21, 2, 5, 8, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: lpIlsFwdrLtFbLlchIndex.setStatus('mandatory')
lpIlsFwdrLtFbLlchTopTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 21, 2, 5, 8, 10), )
if mibBuilder.loadTexts: lpIlsFwdrLtFbLlchTopTable.setStatus('mandatory')
lpIlsFwdrLtFbLlchTopEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 21, 2, 5, 8, 10, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-LogicalProcessorMIB", "lpIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpIlsFwdrIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpIlsFwdrLtIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpIlsFwdrLtFbIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpIlsFwdrLtFbLlchIndex"))
if mibBuilder.loadTexts: lpIlsFwdrLtFbLlchTopEntry.setStatus('mandatory')
lpIlsFwdrLtFbLlchTData = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 21, 2, 5, 8, 10, 1, 1), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lpIlsFwdrLtFbLlchTData.setStatus('mandatory')
lpIlsFwdrLtFbAppleH = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 21, 2, 5, 9))
lpIlsFwdrLtFbAppleHRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 21, 2, 5, 9, 1), )
if mibBuilder.loadTexts: lpIlsFwdrLtFbAppleHRowStatusTable.setStatus('mandatory')
lpIlsFwdrLtFbAppleHRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 21, 2, 5, 9, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-LogicalProcessorMIB", "lpIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpIlsFwdrIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpIlsFwdrLtIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpIlsFwdrLtFbIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpIlsFwdrLtFbAppleHIndex"))
if mibBuilder.loadTexts: lpIlsFwdrLtFbAppleHRowStatusEntry.setStatus('mandatory')
lpIlsFwdrLtFbAppleHRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 21, 2, 5, 9, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpIlsFwdrLtFbAppleHRowStatus.setStatus('mandatory')
lpIlsFwdrLtFbAppleHComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 21, 2, 5, 9, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpIlsFwdrLtFbAppleHComponentName.setStatus('mandatory')
lpIlsFwdrLtFbAppleHStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 21, 2, 5, 9, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpIlsFwdrLtFbAppleHStorageType.setStatus('mandatory')
lpIlsFwdrLtFbAppleHIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 21, 2, 5, 9, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: lpIlsFwdrLtFbAppleHIndex.setStatus('mandatory')
lpIlsFwdrLtFbAppleHTopTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 21, 2, 5, 9, 10), )
if mibBuilder.loadTexts: lpIlsFwdrLtFbAppleHTopTable.setStatus('mandatory')
lpIlsFwdrLtFbAppleHTopEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 21, 2, 5, 9, 10, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-LogicalProcessorMIB", "lpIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpIlsFwdrIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpIlsFwdrLtIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpIlsFwdrLtFbIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpIlsFwdrLtFbAppleHIndex"))
if mibBuilder.loadTexts: lpIlsFwdrLtFbAppleHTopEntry.setStatus('mandatory')
lpIlsFwdrLtFbAppleHTData = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 21, 2, 5, 9, 10, 1, 1), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lpIlsFwdrLtFbAppleHTData.setStatus('mandatory')
lpIlsFwdrLtFbIpxH = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 21, 2, 5, 10))
lpIlsFwdrLtFbIpxHRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 21, 2, 5, 10, 1), )
if mibBuilder.loadTexts: lpIlsFwdrLtFbIpxHRowStatusTable.setStatus('mandatory')
lpIlsFwdrLtFbIpxHRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 21, 2, 5, 10, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-LogicalProcessorMIB", "lpIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpIlsFwdrIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpIlsFwdrLtIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpIlsFwdrLtFbIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpIlsFwdrLtFbIpxHIndex"))
if mibBuilder.loadTexts: lpIlsFwdrLtFbIpxHRowStatusEntry.setStatus('mandatory')
lpIlsFwdrLtFbIpxHRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 21, 2, 5, 10, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpIlsFwdrLtFbIpxHRowStatus.setStatus('mandatory')
lpIlsFwdrLtFbIpxHComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 21, 2, 5, 10, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpIlsFwdrLtFbIpxHComponentName.setStatus('mandatory')
lpIlsFwdrLtFbIpxHStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 21, 2, 5, 10, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpIlsFwdrLtFbIpxHStorageType.setStatus('mandatory')
lpIlsFwdrLtFbIpxHIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 21, 2, 5, 10, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: lpIlsFwdrLtFbIpxHIndex.setStatus('mandatory')
lpIlsFwdrLtFbIpxHTopTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 21, 2, 5, 10, 10), )
if mibBuilder.loadTexts: lpIlsFwdrLtFbIpxHTopTable.setStatus('mandatory')
lpIlsFwdrLtFbIpxHTopEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 21, 2, 5, 10, 10, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-LogicalProcessorMIB", "lpIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpIlsFwdrIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpIlsFwdrLtIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpIlsFwdrLtFbIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpIlsFwdrLtFbIpxHIndex"))
if mibBuilder.loadTexts: lpIlsFwdrLtFbIpxHTopEntry.setStatus('mandatory')
lpIlsFwdrLtFbIpxHTData = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 21, 2, 5, 10, 10, 1, 1), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lpIlsFwdrLtFbIpxHTData.setStatus('mandatory')
lpIlsFwdrLtCntl = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 21, 2, 6))
lpIlsFwdrLtCntlRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 21, 2, 6, 1), )
if mibBuilder.loadTexts: lpIlsFwdrLtCntlRowStatusTable.setStatus('mandatory')
lpIlsFwdrLtCntlRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 21, 2, 6, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-LogicalProcessorMIB", "lpIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpIlsFwdrIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpIlsFwdrLtIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpIlsFwdrLtCntlIndex"))
if mibBuilder.loadTexts: lpIlsFwdrLtCntlRowStatusEntry.setStatus('mandatory')
lpIlsFwdrLtCntlRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 21, 2, 6, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpIlsFwdrLtCntlRowStatus.setStatus('mandatory')
lpIlsFwdrLtCntlComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 21, 2, 6, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpIlsFwdrLtCntlComponentName.setStatus('mandatory')
lpIlsFwdrLtCntlStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 21, 2, 6, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpIlsFwdrLtCntlStorageType.setStatus('mandatory')
lpIlsFwdrLtCntlIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 21, 2, 6, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: lpIlsFwdrLtCntlIndex.setStatus('mandatory')
lpIlsFwdrLtCntlTopTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 21, 2, 6, 10), )
if mibBuilder.loadTexts: lpIlsFwdrLtCntlTopTable.setStatus('mandatory')
lpIlsFwdrLtCntlTopEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 21, 2, 6, 10, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-LogicalProcessorMIB", "lpIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpIlsFwdrIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpIlsFwdrLtIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpIlsFwdrLtCntlIndex"))
if mibBuilder.loadTexts: lpIlsFwdrLtCntlTopEntry.setStatus('mandatory')
lpIlsFwdrLtCntlTData = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 21, 2, 6, 10, 1, 1), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lpIlsFwdrLtCntlTData.setStatus('mandatory')
lpIlsFwdrTest = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 21, 5))
lpIlsFwdrTestRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 21, 5, 1), )
if mibBuilder.loadTexts: lpIlsFwdrTestRowStatusTable.setStatus('mandatory')
lpIlsFwdrTestRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 21, 5, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-LogicalProcessorMIB", "lpIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpIlsFwdrIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpIlsFwdrTestIndex"))
if mibBuilder.loadTexts: lpIlsFwdrTestRowStatusEntry.setStatus('mandatory')
lpIlsFwdrTestRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 21, 5, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpIlsFwdrTestRowStatus.setStatus('mandatory')
lpIlsFwdrTestComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 21, 5, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpIlsFwdrTestComponentName.setStatus('mandatory')
lpIlsFwdrTestStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 21, 5, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpIlsFwdrTestStorageType.setStatus('mandatory')
lpIlsFwdrTestIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 21, 5, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: lpIlsFwdrTestIndex.setStatus('mandatory')
lpIlsFwdrTestPTOTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 21, 5, 10), )
if mibBuilder.loadTexts: lpIlsFwdrTestPTOTable.setStatus('mandatory')
lpIlsFwdrTestPTOEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 21, 5, 10, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-LogicalProcessorMIB", "lpIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpIlsFwdrIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpIlsFwdrTestIndex"))
if mibBuilder.loadTexts: lpIlsFwdrTestPTOEntry.setStatus('mandatory')
lpIlsFwdrTestType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 21, 5, 10, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 257, 258, 259, 260, 263, 264, 265, 266, 267, 268))).clone(namedValues=NamedValues(("onCard", 0), ("normal", 1), ("wrapA", 257), ("wrapB", 258), ("thruA", 259), ("thruB", 260), ("extWrapA", 263), ("extWrapB", 264), ("extThruA", 265), ("extThruB", 266), ("extWrapAB", 267), ("extWrapBA", 268)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lpIlsFwdrTestType.setStatus('mandatory')
lpIlsFwdrTestFrmSize = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 21, 5, 10, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(4, 4096)).clone(1024)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lpIlsFwdrTestFrmSize.setStatus('mandatory')
lpIlsFwdrTestDuration = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 21, 5, 10, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 30240)).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lpIlsFwdrTestDuration.setStatus('mandatory')
lpIlsFwdrTestResultsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 21, 5, 11), )
if mibBuilder.loadTexts: lpIlsFwdrTestResultsTable.setStatus('mandatory')
lpIlsFwdrTestResultsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 21, 5, 11, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-LogicalProcessorMIB", "lpIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpIlsFwdrIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpIlsFwdrTestIndex"))
if mibBuilder.loadTexts: lpIlsFwdrTestResultsEntry.setStatus('mandatory')
lpIlsFwdrTestElapsedTime = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 21, 5, 11, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpIlsFwdrTestElapsedTime.setStatus('mandatory')
lpIlsFwdrTestTimeRemaining = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 21, 5, 11, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpIlsFwdrTestTimeRemaining.setStatus('mandatory')
lpIlsFwdrTestCauseOfTermination = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 21, 5, 11, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("testTimeExpired", 0), ("stoppedByOperator", 1), ("unknown", 2), ("neverStarted", 3), ("testRunning", 4))).clone('neverStarted')).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpIlsFwdrTestCauseOfTermination.setStatus('mandatory')
lpIlsFwdrTestFrmTx = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 21, 5, 11, 1, 7), PassportCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpIlsFwdrTestFrmTx.setStatus('mandatory')
lpIlsFwdrTestBitsTx = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 21, 5, 11, 1, 8), PassportCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpIlsFwdrTestBitsTx.setStatus('mandatory')
lpIlsFwdrTestFrmRx = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 21, 5, 11, 1, 9), PassportCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpIlsFwdrTestFrmRx.setStatus('mandatory')
lpIlsFwdrTestBitsRx = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 21, 5, 11, 1, 10), PassportCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpIlsFwdrTestBitsRx.setStatus('mandatory')
lpIlsFwdrTestErroredFrmRx = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 21, 5, 11, 1, 11), PassportCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpIlsFwdrTestErroredFrmRx.setStatus('mandatory')
lpEth100 = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 25))
lpEth100RowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 25, 1), )
if mibBuilder.loadTexts: lpEth100RowStatusTable.setStatus('mandatory')
lpEth100RowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 25, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-LogicalProcessorMIB", "lpIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpEth100Index"))
if mibBuilder.loadTexts: lpEth100RowStatusEntry.setStatus('mandatory')
lpEth100RowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 25, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lpEth100RowStatus.setStatus('mandatory')
lpEth100ComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 25, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpEth100ComponentName.setStatus('mandatory')
lpEth100StorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 25, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpEth100StorageType.setStatus('mandatory')
lpEth100Index = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 25, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1)))
if mibBuilder.loadTexts: lpEth100Index.setStatus('mandatory')
lpEth100CidDataTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 25, 10), )
if mibBuilder.loadTexts: lpEth100CidDataTable.setStatus('mandatory')
lpEth100CidDataEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 25, 10, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-LogicalProcessorMIB", "lpIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpEth100Index"))
if mibBuilder.loadTexts: lpEth100CidDataEntry.setStatus('mandatory')
lpEth100CustomerIdentifier = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 25, 10, 1, 1), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 8191), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lpEth100CustomerIdentifier.setStatus('mandatory')
lpEth100IfEntryTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 25, 11), )
if mibBuilder.loadTexts: lpEth100IfEntryTable.setStatus('mandatory')
lpEth100IfEntryEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 25, 11, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-LogicalProcessorMIB", "lpIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpEth100Index"))
if mibBuilder.loadTexts: lpEth100IfEntryEntry.setStatus('mandatory')
lpEth100IfAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 25, 11, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("testing", 3))).clone('up')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lpEth100IfAdminStatus.setStatus('mandatory')
lpEth100IfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 25, 11, 1, 2), InterfaceIndex().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpEth100IfIndex.setStatus('mandatory')
lpEth100ProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 25, 12), )
if mibBuilder.loadTexts: lpEth100ProvTable.setStatus('mandatory')
lpEth100ProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 25, 12, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-LogicalProcessorMIB", "lpIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpEth100Index"))
if mibBuilder.loadTexts: lpEth100ProvEntry.setStatus('mandatory')
lpEth100DuplexMode = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 25, 12, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("half", 1), ("full", 2))).clone('half')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lpEth100DuplexMode.setStatus('mandatory')
lpEth100LineSpeed = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 25, 12, 1, 2), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(10, 10), ValueRangeConstraint(100, 100), )).clone(100)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lpEth100LineSpeed.setStatus('mandatory')
lpEth100AutoNegotiation = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 25, 12, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lpEth100AutoNegotiation.setStatus('mandatory')
lpEth100ApplicationFramerName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 25, 12, 1, 4), Link()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lpEth100ApplicationFramerName.setStatus('mandatory')
lpEth100AdminInfoTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 25, 13), )
if mibBuilder.loadTexts: lpEth100AdminInfoTable.setStatus('mandatory')
lpEth100AdminInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 25, 13, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-LogicalProcessorMIB", "lpIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpEth100Index"))
if mibBuilder.loadTexts: lpEth100AdminInfoEntry.setStatus('mandatory')
lpEth100Vendor = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 25, 13, 1, 1), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(0, 20))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lpEth100Vendor.setStatus('mandatory')
lpEth100CommentText = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 25, 13, 1, 2), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(0, 60))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lpEth100CommentText.setStatus('mandatory')
lpEth100StateTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 25, 15), )
if mibBuilder.loadTexts: lpEth100StateTable.setStatus('mandatory')
lpEth100StateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 25, 15, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-LogicalProcessorMIB", "lpIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpEth100Index"))
if mibBuilder.loadTexts: lpEth100StateEntry.setStatus('mandatory')
lpEth100AdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 25, 15, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("locked", 0), ("unlocked", 1), ("shuttingDown", 2))).clone('unlocked')).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpEth100AdminState.setStatus('mandatory')
lpEth100OperationalState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 25, 15, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1))).clone('disabled')).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpEth100OperationalState.setStatus('mandatory')
lpEth100UsageState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 25, 15, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("idle", 0), ("active", 1), ("busy", 2))).clone('idle')).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpEth100UsageState.setStatus('mandatory')
lpEth100OperStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 25, 16), )
if mibBuilder.loadTexts: lpEth100OperStatusTable.setStatus('mandatory')
lpEth100OperStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 25, 16, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-LogicalProcessorMIB", "lpIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpEth100Index"))
if mibBuilder.loadTexts: lpEth100OperStatusEntry.setStatus('mandatory')
lpEth100SnmpOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 25, 16, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("testing", 3))).clone('up')).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpEth100SnmpOperStatus.setStatus('mandatory')
lpEth100OperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 25, 17), )
if mibBuilder.loadTexts: lpEth100OperTable.setStatus('mandatory')
lpEth100OperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 25, 17, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-LogicalProcessorMIB", "lpIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpEth100Index"))
if mibBuilder.loadTexts: lpEth100OperEntry.setStatus('mandatory')
lpEth100MacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 25, 17, 1, 1), MacAddress().subtype(subtypeSpec=ValueSizeConstraint(6, 6)).setFixedLength(6)).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpEth100MacAddress.setStatus('mandatory')
lpEth100AutoNegStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 25, 17, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("succeeded", 1), ("failed", 2), ("disabled", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpEth100AutoNegStatus.setStatus('mandatory')
lpEth100ActualLineSpeed = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 25, 17, 1, 5), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(10, 10), ValueRangeConstraint(100, 100), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpEth100ActualLineSpeed.setStatus('mandatory')
lpEth100ActualDuplexMode = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 25, 17, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("half", 1), ("full", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpEth100ActualDuplexMode.setStatus('mandatory')
lpEth100Eth100StatsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 25, 18), )
if mibBuilder.loadTexts: lpEth100Eth100StatsTable.setStatus('mandatory')
lpEth100Eth100StatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 25, 18, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-LogicalProcessorMIB", "lpIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpEth100Index"))
if mibBuilder.loadTexts: lpEth100Eth100StatsEntry.setStatus('mandatory')
lpEth100FramesTransmittedOk = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 25, 18, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpEth100FramesTransmittedOk.setStatus('mandatory')
lpEth100FramesReceivedOk = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 25, 18, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpEth100FramesReceivedOk.setStatus('mandatory')
lpEth100OctetsTransmittedOk = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 25, 18, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpEth100OctetsTransmittedOk.setStatus('mandatory')
lpEth100OctetsReceivedOk = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 25, 18, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpEth100OctetsReceivedOk.setStatus('mandatory')
lpEth100UndersizeFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 25, 18, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpEth100UndersizeFrames.setStatus('mandatory')
lpEth100ReceivedOctetsIntoRouterBr = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 25, 18, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpEth100ReceivedOctetsIntoRouterBr.setStatus('mandatory')
lpEth100ReceivedFramesIntoRouterBr = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 25, 18, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpEth100ReceivedFramesIntoRouterBr.setStatus('mandatory')
lpEth100StatsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 25, 19), )
if mibBuilder.loadTexts: lpEth100StatsTable.setStatus('mandatory')
lpEth100StatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 25, 19, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-LogicalProcessorMIB", "lpIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpEth100Index"))
if mibBuilder.loadTexts: lpEth100StatsEntry.setStatus('mandatory')
lpEth100AlignmentErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 25, 19, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpEth100AlignmentErrors.setStatus('mandatory')
lpEth100FcsErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 25, 19, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpEth100FcsErrors.setStatus('mandatory')
lpEth100SingleCollisionFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 25, 19, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpEth100SingleCollisionFrames.setStatus('mandatory')
lpEth100MultipleCollisionFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 25, 19, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpEth100MultipleCollisionFrames.setStatus('mandatory')
lpEth100SqeTestErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 25, 19, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpEth100SqeTestErrors.setStatus('mandatory')
lpEth100DeferredTransmissions = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 25, 19, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpEth100DeferredTransmissions.setStatus('mandatory')
lpEth100LateCollisions = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 25, 19, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpEth100LateCollisions.setStatus('mandatory')
lpEth100ExcessiveCollisions = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 25, 19, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpEth100ExcessiveCollisions.setStatus('mandatory')
lpEth100MacTransmitErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 25, 19, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpEth100MacTransmitErrors.setStatus('mandatory')
lpEth100CarrierSenseErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 25, 19, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpEth100CarrierSenseErrors.setStatus('mandatory')
lpEth100FrameTooLongs = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 25, 19, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpEth100FrameTooLongs.setStatus('mandatory')
lpEth100MacReceiveErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 25, 19, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpEth100MacReceiveErrors.setStatus('mandatory')
lpEth100Lt = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 25, 2))
lpEth100LtRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 25, 2, 1), )
if mibBuilder.loadTexts: lpEth100LtRowStatusTable.setStatus('mandatory')
lpEth100LtRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 25, 2, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-LogicalProcessorMIB", "lpIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpEth100Index"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpEth100LtIndex"))
if mibBuilder.loadTexts: lpEth100LtRowStatusEntry.setStatus('mandatory')
lpEth100LtRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 25, 2, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpEth100LtRowStatus.setStatus('mandatory')
lpEth100LtComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 25, 2, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpEth100LtComponentName.setStatus('mandatory')
lpEth100LtStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 25, 2, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpEth100LtStorageType.setStatus('mandatory')
lpEth100LtIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 25, 2, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: lpEth100LtIndex.setStatus('mandatory')
lpEth100LtTopTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 25, 2, 20), )
if mibBuilder.loadTexts: lpEth100LtTopTable.setStatus('mandatory')
lpEth100LtTopEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 25, 2, 20, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-LogicalProcessorMIB", "lpIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpEth100Index"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpEth100LtIndex"))
if mibBuilder.loadTexts: lpEth100LtTopEntry.setStatus('mandatory')
lpEth100LtTData = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 25, 2, 20, 1, 1), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lpEth100LtTData.setStatus('mandatory')
lpEth100LtFrmCmp = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 25, 2, 2))
lpEth100LtFrmCmpRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 25, 2, 2, 1), )
if mibBuilder.loadTexts: lpEth100LtFrmCmpRowStatusTable.setStatus('mandatory')
lpEth100LtFrmCmpRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 25, 2, 2, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-LogicalProcessorMIB", "lpIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpEth100Index"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpEth100LtIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpEth100LtFrmCmpIndex"))
if mibBuilder.loadTexts: lpEth100LtFrmCmpRowStatusEntry.setStatus('mandatory')
lpEth100LtFrmCmpRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 25, 2, 2, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpEth100LtFrmCmpRowStatus.setStatus('mandatory')
lpEth100LtFrmCmpComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 25, 2, 2, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpEth100LtFrmCmpComponentName.setStatus('mandatory')
lpEth100LtFrmCmpStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 25, 2, 2, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpEth100LtFrmCmpStorageType.setStatus('mandatory')
lpEth100LtFrmCmpIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 25, 2, 2, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: lpEth100LtFrmCmpIndex.setStatus('mandatory')
lpEth100LtFrmCmpTopTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 25, 2, 2, 10), )
if mibBuilder.loadTexts: lpEth100LtFrmCmpTopTable.setStatus('mandatory')
lpEth100LtFrmCmpTopEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 25, 2, 2, 10, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-LogicalProcessorMIB", "lpIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpEth100Index"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpEth100LtIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpEth100LtFrmCmpIndex"))
if mibBuilder.loadTexts: lpEth100LtFrmCmpTopEntry.setStatus('mandatory')
lpEth100LtFrmCmpTData = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 25, 2, 2, 10, 1, 1), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lpEth100LtFrmCmpTData.setStatus('mandatory')
lpEth100LtFrmCpy = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 25, 2, 3))
lpEth100LtFrmCpyRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 25, 2, 3, 1), )
if mibBuilder.loadTexts: lpEth100LtFrmCpyRowStatusTable.setStatus('mandatory')
lpEth100LtFrmCpyRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 25, 2, 3, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-LogicalProcessorMIB", "lpIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpEth100Index"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpEth100LtIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpEth100LtFrmCpyIndex"))
if mibBuilder.loadTexts: lpEth100LtFrmCpyRowStatusEntry.setStatus('mandatory')
lpEth100LtFrmCpyRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 25, 2, 3, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpEth100LtFrmCpyRowStatus.setStatus('mandatory')
lpEth100LtFrmCpyComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 25, 2, 3, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpEth100LtFrmCpyComponentName.setStatus('mandatory')
lpEth100LtFrmCpyStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 25, 2, 3, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpEth100LtFrmCpyStorageType.setStatus('mandatory')
lpEth100LtFrmCpyIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 25, 2, 3, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: lpEth100LtFrmCpyIndex.setStatus('mandatory')
lpEth100LtFrmCpyTopTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 25, 2, 3, 10), )
if mibBuilder.loadTexts: lpEth100LtFrmCpyTopTable.setStatus('mandatory')
lpEth100LtFrmCpyTopEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 25, 2, 3, 10, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-LogicalProcessorMIB", "lpIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpEth100Index"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpEth100LtIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpEth100LtFrmCpyIndex"))
if mibBuilder.loadTexts: lpEth100LtFrmCpyTopEntry.setStatus('mandatory')
lpEth100LtFrmCpyTData = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 25, 2, 3, 10, 1, 1), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lpEth100LtFrmCpyTData.setStatus('mandatory')
lpEth100LtPrtCfg = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 25, 2, 4))
lpEth100LtPrtCfgRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 25, 2, 4, 1), )
if mibBuilder.loadTexts: lpEth100LtPrtCfgRowStatusTable.setStatus('mandatory')
lpEth100LtPrtCfgRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 25, 2, 4, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-LogicalProcessorMIB", "lpIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpEth100Index"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpEth100LtIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpEth100LtPrtCfgIndex"))
if mibBuilder.loadTexts: lpEth100LtPrtCfgRowStatusEntry.setStatus('mandatory')
lpEth100LtPrtCfgRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 25, 2, 4, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpEth100LtPrtCfgRowStatus.setStatus('mandatory')
lpEth100LtPrtCfgComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 25, 2, 4, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpEth100LtPrtCfgComponentName.setStatus('mandatory')
lpEth100LtPrtCfgStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 25, 2, 4, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpEth100LtPrtCfgStorageType.setStatus('mandatory')
lpEth100LtPrtCfgIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 25, 2, 4, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: lpEth100LtPrtCfgIndex.setStatus('mandatory')
lpEth100LtPrtCfgTopTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 25, 2, 4, 10), )
if mibBuilder.loadTexts: lpEth100LtPrtCfgTopTable.setStatus('mandatory')
lpEth100LtPrtCfgTopEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 25, 2, 4, 10, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-LogicalProcessorMIB", "lpIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpEth100Index"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpEth100LtIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpEth100LtPrtCfgIndex"))
if mibBuilder.loadTexts: lpEth100LtPrtCfgTopEntry.setStatus('mandatory')
lpEth100LtPrtCfgTData = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 25, 2, 4, 10, 1, 1), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lpEth100LtPrtCfgTData.setStatus('mandatory')
lpEth100LtFb = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 25, 2, 5))
lpEth100LtFbRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 25, 2, 5, 1), )
if mibBuilder.loadTexts: lpEth100LtFbRowStatusTable.setStatus('mandatory')
lpEth100LtFbRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 25, 2, 5, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-LogicalProcessorMIB", "lpIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpEth100Index"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpEth100LtIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpEth100LtFbIndex"))
if mibBuilder.loadTexts: lpEth100LtFbRowStatusEntry.setStatus('mandatory')
lpEth100LtFbRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 25, 2, 5, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpEth100LtFbRowStatus.setStatus('mandatory')
lpEth100LtFbComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 25, 2, 5, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpEth100LtFbComponentName.setStatus('mandatory')
lpEth100LtFbStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 25, 2, 5, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpEth100LtFbStorageType.setStatus('mandatory')
lpEth100LtFbIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 25, 2, 5, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: lpEth100LtFbIndex.setStatus('mandatory')
lpEth100LtFbTopTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 25, 2, 5, 20), )
if mibBuilder.loadTexts: lpEth100LtFbTopTable.setStatus('mandatory')
lpEth100LtFbTopEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 25, 2, 5, 20, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-LogicalProcessorMIB", "lpIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpEth100Index"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpEth100LtIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpEth100LtFbIndex"))
if mibBuilder.loadTexts: lpEth100LtFbTopEntry.setStatus('mandatory')
lpEth100LtFbTData = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 25, 2, 5, 20, 1, 1), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lpEth100LtFbTData.setStatus('mandatory')
lpEth100LtFbTxInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 25, 2, 5, 2))
lpEth100LtFbTxInfoRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 25, 2, 5, 2, 1), )
if mibBuilder.loadTexts: lpEth100LtFbTxInfoRowStatusTable.setStatus('mandatory')
lpEth100LtFbTxInfoRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 25, 2, 5, 2, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-LogicalProcessorMIB", "lpIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpEth100Index"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpEth100LtIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpEth100LtFbIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpEth100LtFbTxInfoIndex"))
if mibBuilder.loadTexts: lpEth100LtFbTxInfoRowStatusEntry.setStatus('mandatory')
lpEth100LtFbTxInfoRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 25, 2, 5, 2, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpEth100LtFbTxInfoRowStatus.setStatus('mandatory')
lpEth100LtFbTxInfoComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 25, 2, 5, 2, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpEth100LtFbTxInfoComponentName.setStatus('mandatory')
lpEth100LtFbTxInfoStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 25, 2, 5, 2, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpEth100LtFbTxInfoStorageType.setStatus('mandatory')
lpEth100LtFbTxInfoIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 25, 2, 5, 2, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: lpEth100LtFbTxInfoIndex.setStatus('mandatory')
lpEth100LtFbTxInfoTopTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 25, 2, 5, 2, 10), )
if mibBuilder.loadTexts: lpEth100LtFbTxInfoTopTable.setStatus('mandatory')
lpEth100LtFbTxInfoTopEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 25, 2, 5, 2, 10, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-LogicalProcessorMIB", "lpIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpEth100Index"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpEth100LtIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpEth100LtFbIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpEth100LtFbTxInfoIndex"))
if mibBuilder.loadTexts: lpEth100LtFbTxInfoTopEntry.setStatus('mandatory')
lpEth100LtFbTxInfoTData = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 25, 2, 5, 2, 10, 1, 1), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lpEth100LtFbTxInfoTData.setStatus('mandatory')
lpEth100LtFbFddiMac = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 25, 2, 5, 3))
lpEth100LtFbFddiMacRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 25, 2, 5, 3, 1), )
if mibBuilder.loadTexts: lpEth100LtFbFddiMacRowStatusTable.setStatus('mandatory')
lpEth100LtFbFddiMacRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 25, 2, 5, 3, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-LogicalProcessorMIB", "lpIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpEth100Index"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpEth100LtIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpEth100LtFbIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpEth100LtFbFddiMacIndex"))
if mibBuilder.loadTexts: lpEth100LtFbFddiMacRowStatusEntry.setStatus('mandatory')
lpEth100LtFbFddiMacRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 25, 2, 5, 3, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpEth100LtFbFddiMacRowStatus.setStatus('mandatory')
lpEth100LtFbFddiMacComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 25, 2, 5, 3, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpEth100LtFbFddiMacComponentName.setStatus('mandatory')
lpEth100LtFbFddiMacStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 25, 2, 5, 3, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpEth100LtFbFddiMacStorageType.setStatus('mandatory')
lpEth100LtFbFddiMacIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 25, 2, 5, 3, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: lpEth100LtFbFddiMacIndex.setStatus('mandatory')
lpEth100LtFbFddiMacTopTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 25, 2, 5, 3, 10), )
if mibBuilder.loadTexts: lpEth100LtFbFddiMacTopTable.setStatus('mandatory')
lpEth100LtFbFddiMacTopEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 25, 2, 5, 3, 10, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-LogicalProcessorMIB", "lpIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpEth100Index"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpEth100LtIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpEth100LtFbIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpEth100LtFbFddiMacIndex"))
if mibBuilder.loadTexts: lpEth100LtFbFddiMacTopEntry.setStatus('mandatory')
lpEth100LtFbFddiMacTData = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 25, 2, 5, 3, 10, 1, 1), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lpEth100LtFbFddiMacTData.setStatus('mandatory')
lpEth100LtFbMacEnet = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 25, 2, 5, 4))
lpEth100LtFbMacEnetRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 25, 2, 5, 4, 1), )
if mibBuilder.loadTexts: lpEth100LtFbMacEnetRowStatusTable.setStatus('mandatory')
lpEth100LtFbMacEnetRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 25, 2, 5, 4, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-LogicalProcessorMIB", "lpIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpEth100Index"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpEth100LtIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpEth100LtFbIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpEth100LtFbMacEnetIndex"))
if mibBuilder.loadTexts: lpEth100LtFbMacEnetRowStatusEntry.setStatus('mandatory')
lpEth100LtFbMacEnetRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 25, 2, 5, 4, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpEth100LtFbMacEnetRowStatus.setStatus('mandatory')
lpEth100LtFbMacEnetComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 25, 2, 5, 4, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpEth100LtFbMacEnetComponentName.setStatus('mandatory')
lpEth100LtFbMacEnetStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 25, 2, 5, 4, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpEth100LtFbMacEnetStorageType.setStatus('mandatory')
lpEth100LtFbMacEnetIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 25, 2, 5, 4, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: lpEth100LtFbMacEnetIndex.setStatus('mandatory')
lpEth100LtFbMacEnetTopTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 25, 2, 5, 4, 10), )
if mibBuilder.loadTexts: lpEth100LtFbMacEnetTopTable.setStatus('mandatory')
lpEth100LtFbMacEnetTopEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 25, 2, 5, 4, 10, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-LogicalProcessorMIB", "lpIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpEth100Index"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpEth100LtIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpEth100LtFbIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpEth100LtFbMacEnetIndex"))
if mibBuilder.loadTexts: lpEth100LtFbMacEnetTopEntry.setStatus('mandatory')
lpEth100LtFbMacEnetTData = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 25, 2, 5, 4, 10, 1, 1), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lpEth100LtFbMacEnetTData.setStatus('mandatory')
lpEth100LtFbMacTr = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 25, 2, 5, 5))
lpEth100LtFbMacTrRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 25, 2, 5, 5, 1), )
if mibBuilder.loadTexts: lpEth100LtFbMacTrRowStatusTable.setStatus('mandatory')
lpEth100LtFbMacTrRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 25, 2, 5, 5, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-LogicalProcessorMIB", "lpIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpEth100Index"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpEth100LtIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpEth100LtFbIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpEth100LtFbMacTrIndex"))
if mibBuilder.loadTexts: lpEth100LtFbMacTrRowStatusEntry.setStatus('mandatory')
lpEth100LtFbMacTrRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 25, 2, 5, 5, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpEth100LtFbMacTrRowStatus.setStatus('mandatory')
lpEth100LtFbMacTrComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 25, 2, 5, 5, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpEth100LtFbMacTrComponentName.setStatus('mandatory')
lpEth100LtFbMacTrStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 25, 2, 5, 5, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpEth100LtFbMacTrStorageType.setStatus('mandatory')
lpEth100LtFbMacTrIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 25, 2, 5, 5, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: lpEth100LtFbMacTrIndex.setStatus('mandatory')
lpEth100LtFbMacTrTopTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 25, 2, 5, 5, 10), )
if mibBuilder.loadTexts: lpEth100LtFbMacTrTopTable.setStatus('mandatory')
lpEth100LtFbMacTrTopEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 25, 2, 5, 5, 10, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-LogicalProcessorMIB", "lpIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpEth100Index"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpEth100LtIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpEth100LtFbIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpEth100LtFbMacTrIndex"))
if mibBuilder.loadTexts: lpEth100LtFbMacTrTopEntry.setStatus('mandatory')
lpEth100LtFbMacTrTData = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 25, 2, 5, 5, 10, 1, 1), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lpEth100LtFbMacTrTData.setStatus('mandatory')
lpEth100LtFbData = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 25, 2, 5, 6))
lpEth100LtFbDataRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 25, 2, 5, 6, 1), )
if mibBuilder.loadTexts: lpEth100LtFbDataRowStatusTable.setStatus('mandatory')
lpEth100LtFbDataRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 25, 2, 5, 6, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-LogicalProcessorMIB", "lpIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpEth100Index"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpEth100LtIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpEth100LtFbIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpEth100LtFbDataIndex"))
if mibBuilder.loadTexts: lpEth100LtFbDataRowStatusEntry.setStatus('mandatory')
lpEth100LtFbDataRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 25, 2, 5, 6, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpEth100LtFbDataRowStatus.setStatus('mandatory')
lpEth100LtFbDataComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 25, 2, 5, 6, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpEth100LtFbDataComponentName.setStatus('mandatory')
lpEth100LtFbDataStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 25, 2, 5, 6, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpEth100LtFbDataStorageType.setStatus('mandatory')
lpEth100LtFbDataIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 25, 2, 5, 6, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: lpEth100LtFbDataIndex.setStatus('mandatory')
lpEth100LtFbDataTopTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 25, 2, 5, 6, 10), )
if mibBuilder.loadTexts: lpEth100LtFbDataTopTable.setStatus('mandatory')
lpEth100LtFbDataTopEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 25, 2, 5, 6, 10, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-LogicalProcessorMIB", "lpIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpEth100Index"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpEth100LtIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpEth100LtFbIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpEth100LtFbDataIndex"))
if mibBuilder.loadTexts: lpEth100LtFbDataTopEntry.setStatus('mandatory')
lpEth100LtFbDataTData = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 25, 2, 5, 6, 10, 1, 1), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lpEth100LtFbDataTData.setStatus('mandatory')
lpEth100LtFbIpH = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 25, 2, 5, 7))
lpEth100LtFbIpHRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 25, 2, 5, 7, 1), )
if mibBuilder.loadTexts: lpEth100LtFbIpHRowStatusTable.setStatus('mandatory')
lpEth100LtFbIpHRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 25, 2, 5, 7, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-LogicalProcessorMIB", "lpIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpEth100Index"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpEth100LtIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpEth100LtFbIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpEth100LtFbIpHIndex"))
if mibBuilder.loadTexts: lpEth100LtFbIpHRowStatusEntry.setStatus('mandatory')
lpEth100LtFbIpHRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 25, 2, 5, 7, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpEth100LtFbIpHRowStatus.setStatus('mandatory')
lpEth100LtFbIpHComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 25, 2, 5, 7, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpEth100LtFbIpHComponentName.setStatus('mandatory')
lpEth100LtFbIpHStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 25, 2, 5, 7, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpEth100LtFbIpHStorageType.setStatus('mandatory')
lpEth100LtFbIpHIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 25, 2, 5, 7, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: lpEth100LtFbIpHIndex.setStatus('mandatory')
lpEth100LtFbIpHTopTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 25, 2, 5, 7, 10), )
if mibBuilder.loadTexts: lpEth100LtFbIpHTopTable.setStatus('mandatory')
lpEth100LtFbIpHTopEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 25, 2, 5, 7, 10, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-LogicalProcessorMIB", "lpIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpEth100Index"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpEth100LtIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpEth100LtFbIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpEth100LtFbIpHIndex"))
if mibBuilder.loadTexts: lpEth100LtFbIpHTopEntry.setStatus('mandatory')
lpEth100LtFbIpHTData = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 25, 2, 5, 7, 10, 1, 1), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lpEth100LtFbIpHTData.setStatus('mandatory')
lpEth100LtFbLlch = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 25, 2, 5, 8))
lpEth100LtFbLlchRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 25, 2, 5, 8, 1), )
if mibBuilder.loadTexts: lpEth100LtFbLlchRowStatusTable.setStatus('mandatory')
lpEth100LtFbLlchRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 25, 2, 5, 8, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-LogicalProcessorMIB", "lpIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpEth100Index"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpEth100LtIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpEth100LtFbIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpEth100LtFbLlchIndex"))
if mibBuilder.loadTexts: lpEth100LtFbLlchRowStatusEntry.setStatus('mandatory')
lpEth100LtFbLlchRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 25, 2, 5, 8, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpEth100LtFbLlchRowStatus.setStatus('mandatory')
lpEth100LtFbLlchComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 25, 2, 5, 8, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpEth100LtFbLlchComponentName.setStatus('mandatory')
lpEth100LtFbLlchStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 25, 2, 5, 8, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpEth100LtFbLlchStorageType.setStatus('mandatory')
lpEth100LtFbLlchIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 25, 2, 5, 8, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: lpEth100LtFbLlchIndex.setStatus('mandatory')
lpEth100LtFbLlchTopTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 25, 2, 5, 8, 10), )
if mibBuilder.loadTexts: lpEth100LtFbLlchTopTable.setStatus('mandatory')
lpEth100LtFbLlchTopEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 25, 2, 5, 8, 10, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-LogicalProcessorMIB", "lpIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpEth100Index"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpEth100LtIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpEth100LtFbIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpEth100LtFbLlchIndex"))
if mibBuilder.loadTexts: lpEth100LtFbLlchTopEntry.setStatus('mandatory')
lpEth100LtFbLlchTData = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 25, 2, 5, 8, 10, 1, 1), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lpEth100LtFbLlchTData.setStatus('mandatory')
lpEth100LtFbAppleH = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 25, 2, 5, 9))
lpEth100LtFbAppleHRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 25, 2, 5, 9, 1), )
if mibBuilder.loadTexts: lpEth100LtFbAppleHRowStatusTable.setStatus('mandatory')
lpEth100LtFbAppleHRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 25, 2, 5, 9, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-LogicalProcessorMIB", "lpIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpEth100Index"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpEth100LtIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpEth100LtFbIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpEth100LtFbAppleHIndex"))
if mibBuilder.loadTexts: lpEth100LtFbAppleHRowStatusEntry.setStatus('mandatory')
lpEth100LtFbAppleHRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 25, 2, 5, 9, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpEth100LtFbAppleHRowStatus.setStatus('mandatory')
lpEth100LtFbAppleHComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 25, 2, 5, 9, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpEth100LtFbAppleHComponentName.setStatus('mandatory')
lpEth100LtFbAppleHStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 25, 2, 5, 9, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpEth100LtFbAppleHStorageType.setStatus('mandatory')
lpEth100LtFbAppleHIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 25, 2, 5, 9, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: lpEth100LtFbAppleHIndex.setStatus('mandatory')
lpEth100LtFbAppleHTopTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 25, 2, 5, 9, 10), )
if mibBuilder.loadTexts: lpEth100LtFbAppleHTopTable.setStatus('mandatory')
lpEth100LtFbAppleHTopEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 25, 2, 5, 9, 10, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-LogicalProcessorMIB", "lpIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpEth100Index"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpEth100LtIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpEth100LtFbIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpEth100LtFbAppleHIndex"))
if mibBuilder.loadTexts: lpEth100LtFbAppleHTopEntry.setStatus('mandatory')
lpEth100LtFbAppleHTData = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 25, 2, 5, 9, 10, 1, 1), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lpEth100LtFbAppleHTData.setStatus('mandatory')
lpEth100LtFbIpxH = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 25, 2, 5, 10))
lpEth100LtFbIpxHRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 25, 2, 5, 10, 1), )
if mibBuilder.loadTexts: lpEth100LtFbIpxHRowStatusTable.setStatus('mandatory')
lpEth100LtFbIpxHRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 25, 2, 5, 10, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-LogicalProcessorMIB", "lpIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpEth100Index"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpEth100LtIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpEth100LtFbIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpEth100LtFbIpxHIndex"))
if mibBuilder.loadTexts: lpEth100LtFbIpxHRowStatusEntry.setStatus('mandatory')
lpEth100LtFbIpxHRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 25, 2, 5, 10, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpEth100LtFbIpxHRowStatus.setStatus('mandatory')
lpEth100LtFbIpxHComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 25, 2, 5, 10, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpEth100LtFbIpxHComponentName.setStatus('mandatory')
lpEth100LtFbIpxHStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 25, 2, 5, 10, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpEth100LtFbIpxHStorageType.setStatus('mandatory')
lpEth100LtFbIpxHIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 25, 2, 5, 10, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: lpEth100LtFbIpxHIndex.setStatus('mandatory')
lpEth100LtFbIpxHTopTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 25, 2, 5, 10, 10), )
if mibBuilder.loadTexts: lpEth100LtFbIpxHTopTable.setStatus('mandatory')
lpEth100LtFbIpxHTopEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 25, 2, 5, 10, 10, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-LogicalProcessorMIB", "lpIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpEth100Index"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpEth100LtIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpEth100LtFbIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpEth100LtFbIpxHIndex"))
if mibBuilder.loadTexts: lpEth100LtFbIpxHTopEntry.setStatus('mandatory')
lpEth100LtFbIpxHTData = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 25, 2, 5, 10, 10, 1, 1), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lpEth100LtFbIpxHTData.setStatus('mandatory')
lpEth100LtCntl = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 25, 2, 6))
lpEth100LtCntlRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 25, 2, 6, 1), )
if mibBuilder.loadTexts: lpEth100LtCntlRowStatusTable.setStatus('mandatory')
lpEth100LtCntlRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 25, 2, 6, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-LogicalProcessorMIB", "lpIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpEth100Index"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpEth100LtIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpEth100LtCntlIndex"))
if mibBuilder.loadTexts: lpEth100LtCntlRowStatusEntry.setStatus('mandatory')
lpEth100LtCntlRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 25, 2, 6, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpEth100LtCntlRowStatus.setStatus('mandatory')
lpEth100LtCntlComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 25, 2, 6, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpEth100LtCntlComponentName.setStatus('mandatory')
lpEth100LtCntlStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 25, 2, 6, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpEth100LtCntlStorageType.setStatus('mandatory')
lpEth100LtCntlIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 25, 2, 6, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: lpEth100LtCntlIndex.setStatus('mandatory')
lpEth100LtCntlTopTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 25, 2, 6, 10), )
if mibBuilder.loadTexts: lpEth100LtCntlTopTable.setStatus('mandatory')
lpEth100LtCntlTopEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 25, 2, 6, 10, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-LogicalProcessorMIB", "lpIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpEth100Index"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpEth100LtIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpEth100LtCntlIndex"))
if mibBuilder.loadTexts: lpEth100LtCntlTopEntry.setStatus('mandatory')
lpEth100LtCntlTData = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 25, 2, 6, 10, 1, 1), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lpEth100LtCntlTData.setStatus('mandatory')
lpEth100Test = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 25, 3))
lpEth100TestRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 25, 3, 1), )
if mibBuilder.loadTexts: lpEth100TestRowStatusTable.setStatus('mandatory')
lpEth100TestRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 25, 3, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-LogicalProcessorMIB", "lpIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpEth100Index"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpEth100TestIndex"))
if mibBuilder.loadTexts: lpEth100TestRowStatusEntry.setStatus('mandatory')
lpEth100TestRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 25, 3, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpEth100TestRowStatus.setStatus('mandatory')
lpEth100TestComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 25, 3, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpEth100TestComponentName.setStatus('mandatory')
lpEth100TestStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 25, 3, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpEth100TestStorageType.setStatus('mandatory')
lpEth100TestIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 25, 3, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: lpEth100TestIndex.setStatus('mandatory')
lpEth100TestPTOTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 25, 3, 10), )
if mibBuilder.loadTexts: lpEth100TestPTOTable.setStatus('mandatory')
lpEth100TestPTOEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 25, 3, 10, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-LogicalProcessorMIB", "lpIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpEth100Index"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpEth100TestIndex"))
if mibBuilder.loadTexts: lpEth100TestPTOEntry.setStatus('mandatory')
lpEth100TestType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 25, 3, 10, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 257, 258, 259, 260, 263, 264, 265, 266, 267, 268))).clone(namedValues=NamedValues(("onCard", 0), ("normal", 1), ("wrapA", 257), ("wrapB", 258), ("thruA", 259), ("thruB", 260), ("extWrapA", 263), ("extWrapB", 264), ("extThruA", 265), ("extThruB", 266), ("extWrapAB", 267), ("extWrapBA", 268)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lpEth100TestType.setStatus('mandatory')
lpEth100TestFrmSize = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 25, 3, 10, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(4, 4096)).clone(1024)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lpEth100TestFrmSize.setStatus('mandatory')
lpEth100TestDuration = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 25, 3, 10, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 30240)).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lpEth100TestDuration.setStatus('mandatory')
lpEth100TestResultsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 25, 3, 11), )
if mibBuilder.loadTexts: lpEth100TestResultsTable.setStatus('mandatory')
lpEth100TestResultsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 25, 3, 11, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-LogicalProcessorMIB", "lpIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpEth100Index"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "lpEth100TestIndex"))
if mibBuilder.loadTexts: lpEth100TestResultsEntry.setStatus('mandatory')
lpEth100TestElapsedTime = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 25, 3, 11, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpEth100TestElapsedTime.setStatus('mandatory')
lpEth100TestTimeRemaining = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 25, 3, 11, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpEth100TestTimeRemaining.setStatus('mandatory')
lpEth100TestCauseOfTermination = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 25, 3, 11, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("testTimeExpired", 0), ("stoppedByOperator", 1), ("unknown", 2), ("neverStarted", 3), ("testRunning", 4))).clone('neverStarted')).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpEth100TestCauseOfTermination.setStatus('mandatory')
lpEth100TestFrmTx = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 25, 3, 11, 1, 7), PassportCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpEth100TestFrmTx.setStatus('mandatory')
lpEth100TestBitsTx = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 25, 3, 11, 1, 8), PassportCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpEth100TestBitsTx.setStatus('mandatory')
lpEth100TestFrmRx = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 25, 3, 11, 1, 9), PassportCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpEth100TestFrmRx.setStatus('mandatory')
lpEth100TestBitsRx = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 25, 3, 11, 1, 10), PassportCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpEth100TestBitsRx.setStatus('mandatory')
lpEth100TestErroredFrmRx = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 25, 3, 11, 1, 11), PassportCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpEth100TestErroredFrmRx.setStatus('mandatory')
la = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 105))
laRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 105, 1), )
if mibBuilder.loadTexts: laRowStatusTable.setStatus('mandatory')
laRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 105, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-LanDriversMIB", "laIndex"))
if mibBuilder.loadTexts: laRowStatusEntry.setStatus('mandatory')
laRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 105, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: laRowStatus.setStatus('mandatory')
laComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 105, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: laComponentName.setStatus('mandatory')
laStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 105, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: laStorageType.setStatus('mandatory')
laIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 105, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255)))
if mibBuilder.loadTexts: laIndex.setStatus('mandatory')
laCidDataTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 105, 10), )
if mibBuilder.loadTexts: laCidDataTable.setStatus('mandatory')
laCidDataEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 105, 10, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-LanDriversMIB", "laIndex"))
if mibBuilder.loadTexts: laCidDataEntry.setStatus('mandatory')
laCustomerIdentifier = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 105, 10, 1, 1), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 8191), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: laCustomerIdentifier.setStatus('mandatory')
laMediaProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 105, 11), )
if mibBuilder.loadTexts: laMediaProvTable.setStatus('mandatory')
laMediaProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 105, 11, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-LanDriversMIB", "laIndex"))
if mibBuilder.loadTexts: laMediaProvEntry.setStatus('mandatory')
laLinkToProtocolPort = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 105, 11, 1, 1), Link()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: laLinkToProtocolPort.setStatus('mandatory')
laIfEntryTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 105, 12), )
if mibBuilder.loadTexts: laIfEntryTable.setStatus('mandatory')
laIfEntryEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 105, 12, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-LanDriversMIB", "laIndex"))
if mibBuilder.loadTexts: laIfEntryEntry.setStatus('mandatory')
laIfAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 105, 12, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("testing", 3))).clone('up')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: laIfAdminStatus.setStatus('mandatory')
laIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 105, 12, 1, 2), InterfaceIndex().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: laIfIndex.setStatus('mandatory')
laStateTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 105, 13), )
if mibBuilder.loadTexts: laStateTable.setStatus('mandatory')
laStateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 105, 13, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-LanDriversMIB", "laIndex"))
if mibBuilder.loadTexts: laStateEntry.setStatus('mandatory')
laAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 105, 13, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("locked", 0), ("unlocked", 1), ("shuttingDown", 2))).clone('unlocked')).setMaxAccess("readonly")
if mibBuilder.loadTexts: laAdminState.setStatus('mandatory')
laOperationalState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 105, 13, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1))).clone('disabled')).setMaxAccess("readonly")
if mibBuilder.loadTexts: laOperationalState.setStatus('mandatory')
laUsageState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 105, 13, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("idle", 0), ("active", 1), ("busy", 2))).clone('idle')).setMaxAccess("readonly")
if mibBuilder.loadTexts: laUsageState.setStatus('mandatory')
laOperStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 105, 14), )
if mibBuilder.loadTexts: laOperStatusTable.setStatus('mandatory')
laOperStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 105, 14, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-LanDriversMIB", "laIndex"))
if mibBuilder.loadTexts: laOperStatusEntry.setStatus('mandatory')
laSnmpOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 105, 14, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("testing", 3))).clone('up')).setMaxAccess("readonly")
if mibBuilder.loadTexts: laSnmpOperStatus.setStatus('mandatory')
laFramer = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 105, 2))
laFramerRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 105, 2, 1), )
if mibBuilder.loadTexts: laFramerRowStatusTable.setStatus('mandatory')
laFramerRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 105, 2, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-LanDriversMIB", "laIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "laFramerIndex"))
if mibBuilder.loadTexts: laFramerRowStatusEntry.setStatus('mandatory')
laFramerRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 105, 2, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: laFramerRowStatus.setStatus('mandatory')
laFramerComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 105, 2, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: laFramerComponentName.setStatus('mandatory')
laFramerStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 105, 2, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: laFramerStorageType.setStatus('mandatory')
laFramerIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 105, 2, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: laFramerIndex.setStatus('mandatory')
laFramerProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 105, 2, 10), )
if mibBuilder.loadTexts: laFramerProvTable.setStatus('mandatory')
laFramerProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 105, 2, 10, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-LanDriversMIB", "laIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "laFramerIndex"))
if mibBuilder.loadTexts: laFramerProvEntry.setStatus('mandatory')
laFramerInterfaceName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 105, 2, 10, 1, 1), Link()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: laFramerInterfaceName.setStatus('obsolete')
laFramerInterfaceNamesTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 105, 2, 431), )
if mibBuilder.loadTexts: laFramerInterfaceNamesTable.setStatus('mandatory')
laFramerInterfaceNamesEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 105, 2, 431, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-LanDriversMIB", "laIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "laFramerIndex"), (0, "Nortel-Magellan-Passport-LanDriversMIB", "laFramerInterfaceNamesValue"))
if mibBuilder.loadTexts: laFramerInterfaceNamesEntry.setStatus('mandatory')
laFramerInterfaceNamesValue = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 105, 2, 431, 1, 1), Link()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: laFramerInterfaceNamesValue.setStatus('mandatory')
laFramerInterfaceNamesRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 105, 2, 431, 1, 2), RowStatus()).setMaxAccess("writeonly")
if mibBuilder.loadTexts: laFramerInterfaceNamesRowStatus.setStatus('mandatory')
lanDriversGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 30, 1))
lanDriversGroupBE = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 30, 1, 5))
lanDriversGroupBE01 = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 30, 1, 5, 2))
lanDriversGroupBE01A = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 30, 1, 5, 2, 2))
lanDriversCapabilities = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 30, 3))
lanDriversCapabilitiesBE = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 30, 3, 5))
lanDriversCapabilitiesBE01 = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 30, 3, 5, 2))
lanDriversCapabilitiesBE01A = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 30, 3, 5, 2, 2))
mibBuilder.exportSymbols("Nortel-Magellan-Passport-LanDriversMIB", lpTrRingRecoverys=lpTrRingRecoverys, lpFiLtFbMacEnetIndex=lpFiLtFbMacEnetIndex, lpIlsFwdrLtPrtCfgRowStatusEntry=lpIlsFwdrLtPrtCfgRowStatusEntry, lpIlsFwdrLtFbAppleHTData=lpIlsFwdrLtFbAppleHTData, lpEth100LineSpeed=lpEth100LineSpeed, lpEth100LtFrmCmpRowStatusEntry=lpEth100LtFrmCmpRowStatusEntry, lpEth100LtFbTxInfoRowStatusTable=lpEth100LtFbTxInfoRowStatusTable, lpIlsFwdrLtFbMacTrTopTable=lpIlsFwdrLtFbMacTrTopTable, lpFiLtFbLlch=lpFiLtFbLlch, laIfAdminStatus=laIfAdminStatus, lpEnetLtFbIndex=lpEnetLtFbIndex, lpEth100LtFbTxInfoTopTable=lpEth100LtFbTxInfoTopTable, lpIlsFwdrLtFbMacEnet=lpIlsFwdrLtFbMacEnet, lpEnetLtFbMacEnetRowStatusEntry=lpEnetLtFbMacEnetRowStatusEntry, lpEth100CustomerIdentifier=lpEth100CustomerIdentifier, lpEth100IfEntryEntry=lpEth100IfEntryEntry, lpTrLtFbDataRowStatusEntry=lpTrLtFbDataRowStatusEntry, lpTrLtFbLlchRowStatus=lpTrLtFbLlchRowStatus, lpIlsFwdrLtFbLlchRowStatus=lpIlsFwdrLtFbLlchRowStatus, lpIlsFwdrLtFrmCmpComponentName=lpIlsFwdrLtFrmCmpComponentName, lpEnetHeartbeatPacket=lpEnetHeartbeatPacket, lpFiOperStatusTable=lpFiOperStatusTable, lpEnetLtFbAppleHTopTable=lpEnetLtFbAppleHTopTable, lpIlsFwdrLtFrmCpyIndex=lpIlsFwdrLtFrmCpyIndex, lpIlsFwdrTestDuration=lpIlsFwdrTestDuration, lpEth100LtFbTopTable=lpEth100LtFbTopTable, lpEth100TestTimeRemaining=lpEth100TestTimeRemaining, lpFiNcMacAddress=lpFiNcMacAddress, lpTrFreqErrors=lpTrFreqErrors, lpEth100LtFbIpxH=lpEth100LtFbIpxH, lpEnetSnmpOperStatus=lpEnetSnmpOperStatus, lpEnetLtPrtCfgTopEntry=lpEnetLtPrtCfgTopEntry, lpFiLateCounts=lpFiLateCounts, lpEth100LtFbIpxHRowStatus=lpEth100LtFbIpxHRowStatus, laFramerRowStatus=laFramerRowStatus, lpIlsFwdrLtFbDataIndex=lpIlsFwdrLtFbDataIndex, lpTrUpStream=lpTrUpStream, lpFiPhyLerAlarm=lpFiPhyLerAlarm, lpIlsFwdrIfAdminStatus=lpIlsFwdrIfAdminStatus, lpEth100LtCntlRowStatusEntry=lpEth100LtCntlRowStatusEntry, lpIlsFwdrRowStatus=lpIlsFwdrRowStatus, lpEnetLtFbFddiMacTopEntry=lpEnetLtFbFddiMacTopEntry, lpIlsFwdrLtFbTData=lpIlsFwdrLtFbTData, lpFiNcOldDownstreamNeighbor=lpFiNcOldDownstreamNeighbor, lpEth100LtFbMacTrRowStatusEntry=lpEth100LtFbMacTrRowStatusEntry, lpFiLtFbFddiMacTData=lpFiLtFbFddiMacTData, lpTrRowStatusEntry=lpTrRowStatusEntry, lpEnetIfIndex=lpEnetIfIndex, lpFiNcDownstreamNeighbor=lpFiNcDownstreamNeighbor, lpTrLtPrtCfgComponentName=lpTrLtPrtCfgComponentName, lpEth100LtFbMacEnetTData=lpEth100LtFbMacEnetTData, laStateEntry=laStateEntry, lpEnetIfEntryTable=lpEnetIfEntryTable, lpEnetUsageState=lpEnetUsageState, lpEnetLtFrmCmpTopEntry=lpEnetLtFrmCmpTopEntry, lpFiLtFbDataRowStatusTable=lpFiLtFbDataRowStatusTable, lpEth100LtFbMacEnetTopEntry=lpEth100LtFbMacEnetTopEntry, lpEnetLtFbMacEnetTopEntry=lpEnetLtFbMacEnetTopEntry, lpEth100LtFrmCmpTopTable=lpEth100LtFrmCmpTopTable, lpFiTransmitCounts=lpFiTransmitCounts, lpFiNotCopiedCounts=lpFiNotCopiedCounts, lpFiNcOldUpstreamNeighbor=lpFiNcOldUpstreamNeighbor, lpEth100LtFbIpxHRowStatusEntry=lpEth100LtFbIpxHRowStatusEntry, lpFiLtFbIpxHRowStatusEntry=lpFiLtFbIpxHRowStatusEntry, lpEth100LtFbIpxHTopTable=lpEth100LtFbIpxHTopTable, lpEth100LtStorageType=lpEth100LtStorageType, lpTrLtFbDataStorageType=lpTrLtFbDataStorageType, lpEnetLtFbDataRowStatusEntry=lpEnetLtFbDataRowStatusEntry, lpFiLtFbIpxHTopEntry=lpFiLtFbIpxHTopEntry, lpIlsFwdrComponentName=lpIlsFwdrComponentName, lpTrLtFrmCpyStorageType=lpTrLtFrmCpyStorageType, lpIlsFwdrLtFrmCpy=lpIlsFwdrLtFrmCpy, laIfIndex=laIfIndex, lpFiFrameCounts=lpFiFrameCounts, lpTrTestPTOTable=lpTrTestPTOTable, lpIlsFwdrLtTopTable=lpIlsFwdrLtTopTable, lpEth100TestDuration=lpEth100TestDuration, lpFiStateEntry=lpFiStateEntry, lpTrOperEntry=lpTrOperEntry, lpEnetLtFbLlchComponentName=lpEnetLtFbLlchComponentName, lpFiCustomerIdentifier=lpFiCustomerIdentifier, lpFiTestFrmTx=lpFiTestFrmTx, lpEnetRowStatusEntry=lpEnetRowStatusEntry, lpFiLtFbAppleH=lpFiLtFbAppleH, lpEnetLtFrmCmpIndex=lpEnetLtFrmCmpIndex, lpTrLtFbRowStatusTable=lpTrLtFbRowStatusTable, lpEth100LtFbFddiMacComponentName=lpEth100LtFbFddiMacComponentName, lpTrCustomerIdentifier=lpTrCustomerIdentifier, lpEth100LtFbIpxHIndex=lpEth100LtFbIpxHIndex, lpFiLtFrmCmpRowStatusEntry=lpFiLtFrmCmpRowStatusEntry, lpFiTestResultsEntry=lpFiTestResultsEntry, lpEth100LtCntlTopTable=lpEth100LtCntlTopTable, lpEth100Eth100StatsTable=lpEth100Eth100StatsTable, lpEnetLtFbFddiMacStorageType=lpEnetLtFbFddiMacStorageType, lpEnetLtFbIpxHComponentName=lpEnetLtFbIpxHComponentName, lpTrLtCntlRowStatusEntry=lpTrLtCntlRowStatusEntry, lpEth100LtFbDataRowStatus=lpEth100LtFbDataRowStatus, lpFiTestIndex=lpFiTestIndex, lpEnetStatsTable=lpEnetStatsTable, lpFiRowStatus=lpFiRowStatus, lpTrLtFbMacTrComponentName=lpTrLtFbMacTrComponentName, lpFiUpstreamNeighbor=lpFiUpstreamNeighbor, lpFiLtFbIpHRowStatusTable=lpFiLtFbIpHRowStatusTable, lpEnetLtFbTxInfoComponentName=lpEnetLtFbTxInfoComponentName, lpFiLtCntlStorageType=lpFiLtCntlStorageType, laComponentName=laComponentName, lpFiLtFbFddiMacTopEntry=lpFiLtFbFddiMacTopEntry, lpFiLtFbFddiMacRowStatusEntry=lpFiLtFbFddiMacRowStatusEntry, lpFiLtFbTxInfoComponentName=lpFiLtFbTxInfoComponentName, lpTrLtFrmCpyRowStatus=lpTrLtFrmCpyRowStatus, lpFiStatusReportPolicy=lpFiStatusReportPolicy, lpTrLtFbLlchComponentName=lpTrLtFbLlchComponentName, lpEth100FcsErrors=lpEth100FcsErrors, lpEnetLtFbIpHTData=lpEnetLtFbIpHTData, lpTrLtPrtCfgIndex=lpTrLtPrtCfgIndex, lpEth100LtPrtCfgTopEntry=lpEth100LtPrtCfgTopEntry, lpIlsFwdrLtFbTxInfoRowStatusEntry=lpIlsFwdrLtFbTxInfoRowStatusEntry, lpEnetLtFbMacEnetStorageType=lpEnetLtFbMacEnetStorageType, lpEnetLtFbFddiMacTData=lpEnetLtFbFddiMacTData, lpEth100LtFrmCpyComponentName=lpEth100LtFrmCpyComponentName, lpIlsFwdrLtFbAppleHRowStatus=lpIlsFwdrLtFbAppleHRowStatus, lpIlsFwdrFramesReceived=lpIlsFwdrFramesReceived, lpEth100OperEntry=lpEth100OperEntry, lpTrTestRowStatusEntry=lpTrTestRowStatusEntry, lpIlsFwdrStateEntry=lpIlsFwdrStateEntry, lpFiMacAddress=lpFiMacAddress, lanDriversGroupBE01A=lanDriversGroupBE01A, lpFiVersion=lpFiVersion, lpTrLtFbLlchRowStatusTable=lpTrLtFbLlchRowStatusTable, lpFiLtFbMacTrTopEntry=lpFiLtFbMacTrTopEntry, lpEth100LtFbDataTopEntry=lpEth100LtFbDataTopEntry, lpEth100LtFbIpxHRowStatusTable=lpEth100LtFbIpxHRowStatusTable, lpIlsFwdrLtFbAppleHTopTable=lpIlsFwdrLtFbAppleHTopTable, lpEnetLtFrmCmpStorageType=lpEnetLtFrmCmpStorageType, lpFiApplicationFramerName=lpFiApplicationFramerName, lpEth100UsageState=lpEth100UsageState, lpEnetTestRowStatus=lpEnetTestRowStatus, lpFiLtFbComponentName=lpFiLtFbComponentName, lpEnetLtTopTable=lpEnetLtTopTable, lpIlsFwdrTestResultsTable=lpIlsFwdrTestResultsTable, lpEnetExcessiveCollisions=lpEnetExcessiveCollisions, lpFiPhyNeighborType=lpFiPhyNeighborType, lpTrRemoveRings=lpTrRemoveRings, lpFiLtTopEntry=lpFiLtTopEntry, lpFiOldDownstreamNeighbor=lpFiOldDownstreamNeighbor, lpIlsFwdrLtFbComponentName=lpIlsFwdrLtFbComponentName, lpEth100LtCntlIndex=lpEth100LtCntlIndex, lpTrLtCntlIndex=lpTrLtCntlIndex, lpIlsFwdrLtFb=lpIlsFwdrLtFb, lpEnetLtFbStorageType=lpEnetLtFbStorageType, lpIlsFwdrLtFbIpxHRowStatus=lpIlsFwdrLtFbIpxHRowStatus, lpEth100LtFbComponentName=lpEth100LtFbComponentName, lpEth100TestFrmRx=lpEth100TestFrmRx, lpFiRingLatency=lpFiRingLatency, lpEth100LtTopEntry=lpEth100LtTopEntry, lpEth100LtFbMacEnetRowStatusEntry=lpEth100LtFbMacEnetRowStatusEntry, lpEth100AdminState=lpEth100AdminState, lpFiLtFbTxInfoTopTable=lpFiLtFbTxInfoTopTable, lpIlsFwdrLtFbMacTrTData=lpIlsFwdrLtFbMacTrTData, lpEnetLtFbLlchRowStatusEntry=lpEnetLtFbLlchRowStatusEntry, lpIlsFwdrLtFbMacTrStorageType=lpIlsFwdrLtFbMacTrStorageType, lpEnetLtFbTxInfoRowStatus=lpEnetLtFbTxInfoRowStatus, lpEth100LtPrtCfgRowStatusEntry=lpEth100LtPrtCfgRowStatusEntry, lpFiLtFrmCpyRowStatusTable=lpFiLtFrmCpyRowStatusTable, lpEnetTestBitsRx=lpEnetTestBitsRx, lpFiCidDataEntry=lpFiCidDataEntry, lpTrTestFrmSize=lpTrTestFrmSize, lpTrTestCauseOfTermination=lpTrTestCauseOfTermination, lpEth100Vendor=lpEth100Vendor, lpEth100Test=lpEth100Test, lpTrLtFbLlchTopTable=lpTrLtFbLlchTopTable, lpFiAdminInfoEntry=lpFiAdminInfoEntry, lpFiLtFbAppleHRowStatusEntry=lpFiLtFbAppleHRowStatusEntry, lpEnetLtFbLlchRowStatusTable=lpEnetLtFbLlchRowStatusTable, lpFiAcceptAm=lpFiAcceptAm, lpFiPhyPcmState=lpFiPhyPcmState, lpTrInternalErrors=lpTrInternalErrors, lpTrLtFbMacEnetTopTable=lpTrLtFbMacEnetTopTable, lpIlsFwdrStatsEntry=lpIlsFwdrStatsEntry, lpEth100FrameTooLongs=lpEth100FrameTooLongs, lpEth100LtFbAppleH=lpEth100LtFbAppleH, lpFiTestElapsedTime=lpFiTestElapsedTime, lpIlsFwdrUsageState=lpIlsFwdrUsageState, lpEnetLtFbAppleHStorageType=lpEnetLtFbAppleHStorageType, lpTrLtFrmCmpRowStatusEntry=lpTrLtFrmCmpRowStatusEntry, lpEnetLtFbTxInfoTopEntry=lpEnetLtFbTxInfoTopEntry, lpIlsFwdrTestRowStatus=lpIlsFwdrTestRowStatus, lpEnetCommentText=lpEnetCommentText, lpIlsFwdrLtFbMacTrComponentName=lpIlsFwdrLtFbMacTrComponentName, lpFiLtFbTopEntry=lpFiLtFbTopEntry, lpFiLtCntl=lpFiLtCntl, lpTrLtFbLlchStorageType=lpTrLtFbLlchStorageType, lpEth100LtFbAppleHRowStatusTable=lpEth100LtFbAppleHRowStatusTable, lpFiLtFbFddiMacIndex=lpFiLtFbFddiMacIndex, lpEnetLtFrmCmpRowStatus=lpEnetLtFrmCmpRowStatus, lpFiTraceMaxExpirationTimer=lpFiTraceMaxExpirationTimer, lpIlsFwdrLtTData=lpIlsFwdrLtTData, lpEth100LtFbLlchComponentName=lpEth100LtFbLlchComponentName, lpIlsFwdrLtFbIpxHRowStatusTable=lpIlsFwdrLtFbIpxHRowStatusTable, lanDriversCapabilitiesBE=lanDriversCapabilitiesBE, lpTrLtFbTxInfoIndex=lpTrLtFbTxInfoIndex, lpIlsFwdrLtFbFddiMac=lpIlsFwdrLtFbFddiMac, lpFiLtFbMacEnetTopEntry=lpFiLtFbMacEnetTopEntry, lpFiSnmpOperStatus=lpFiSnmpOperStatus, lpFiLtPrtCfgIndex=lpFiLtPrtCfgIndex, lpIlsFwdrLtFbIpHIndex=lpIlsFwdrLtFbIpHIndex, lpFiLtFb=lpFiLtFb, lpFiOperationalState=lpFiOperationalState, lpTrLtPrtCfgTData=lpTrLtPrtCfgTData, lpFiMacProvEntry=lpFiMacProvEntry, lpEth100LtFbDataTData=lpEth100LtFbDataTData, lpTrProvTable=lpTrProvTable, lpTrLtFbMacEnetTopEntry=lpTrLtFbMacEnetTopEntry, lpIlsFwdrLtFrmCpyRowStatusTable=lpIlsFwdrLtFrmCpyRowStatusTable, lpTrLobeWires=lpTrLobeWires, lpFiLtFbFddiMac=lpFiLtFbFddiMac, lpIlsFwdrLtFbMacEnetTopEntry=lpIlsFwdrLtFbMacEnetTopEntry, lpIlsFwdrTestFrmTx=lpIlsFwdrTestFrmTx, lpEth100LtFbFddiMacTopTable=lpEth100LtFbFddiMacTopTable, lpEnetCustomerIdentifier=lpEnetCustomerIdentifier, lpEth100LtPrtCfgTopTable=lpEth100LtPrtCfgTopTable, lpEnetLtFbIpHTopEntry=lpEnetLtFbIpHTopEntry, lpEth100LtFbLlchTopTable=lpEth100LtFbLlchTopTable, lpEth100LtFbIpHRowStatusTable=lpEth100LtFbIpHRowStatusTable, lpFiIfAdminStatus=lpFiIfAdminStatus, lpFiLtFrmCmpStorageType=lpFiLtFrmCmpStorageType, lpFiLtPrtCfgRowStatusTable=lpFiLtPrtCfgRowStatusTable, lpEth100FramesReceivedOk=lpEth100FramesReceivedOk, lpFiLtFbAppleHTData=lpFiLtFbAppleHTData, lpEnetSingleCollisionFrames=lpEnetSingleCollisionFrames, lpTrLtFbDataComponentName=lpTrLtFbDataComponentName, lpFiLtFbLlchTopTable=lpFiLtFbLlchTopTable, lpEth100LtFrmCpy=lpEth100LtFrmCpy, lpEth100LtPrtCfgRowStatus=lpEth100LtPrtCfgRowStatus, lpTrLtFbTxInfo=lpTrLtFbTxInfo, lpFiLtFbIpxHRowStatusTable=lpFiLtFbIpxHRowStatusTable, lpIlsFwdrLtFbAppleHRowStatusTable=lpIlsFwdrLtFbAppleHRowStatusTable, lpEth100LtCntlStorageType=lpEth100LtCntlStorageType, lpEnetFrameTooLongs=lpEnetFrameTooLongs, lpTrLtFbDataTopEntry=lpTrLtFbDataTopEntry, lpEnetLtStorageType=lpEnetLtStorageType, lpEnetLtFbFddiMacTopTable=lpEnetLtFbFddiMacTopTable, lpFiPhyRowStatusEntry=lpFiPhyRowStatusEntry, lpEth100LtFbFddiMacTData=lpEth100LtFbFddiMacTData, lpEth100OperTable=lpEth100OperTable, lpEth100LtFbTxInfoComponentName=lpEth100LtFbTxInfoComponentName, lpIlsFwdrLtFbFddiMacRowStatus=lpIlsFwdrLtFbFddiMacRowStatus, lpTrVendor=lpTrVendor, lpFiAcceptBs=lpFiAcceptBs, lpFiLtCntlTData=lpFiLtCntlTData, lpFiLtPrtCfgTopEntry=lpFiLtPrtCfgTopEntry, lpFiRingOpCounts=lpFiRingOpCounts, lpTrLtFbIpxH=lpTrLtFbIpxH, lpTrLtFbFddiMacRowStatus=lpTrLtFbFddiMacRowStatus)
mibBuilder.exportSymbols("Nortel-Magellan-Passport-LanDriversMIB", lpFiLtPrtCfgTopTable=lpFiLtPrtCfgTopTable, lpTrLtFbDataRowStatus=lpTrLtFbDataRowStatus, lpIlsFwdrTestResultsEntry=lpIlsFwdrTestResultsEntry, lpIlsFwdrLtStorageType=lpIlsFwdrLtStorageType, lpFiUserData=lpFiUserData, lpEth100LtFbTxInfoTData=lpEth100LtFbTxInfoTData, lpEnetLtFrmCpyTopEntry=lpEnetLtFrmCpyTopEntry, lpIlsFwdrLtCntlStorageType=lpIlsFwdrLtCntlStorageType, lpEnetLtFbMacTrTopTable=lpEnetLtFbMacTrTopTable, lpTrLtFbMacTrIndex=lpTrLtFbMacTrIndex, lpTrStatsTable=lpTrStatsTable, lpTrUsageState=lpTrUsageState, lpFiTestRowStatusEntry=lpFiTestRowStatusEntry, lpTrTestFrmTx=lpTrTestFrmTx, lpTrLtFbMacTrTopTable=lpTrLtFbMacTrTopTable, lpFiLtCntlRowStatus=lpFiLtCntlRowStatus, lpTrLtFbIpxHStorageType=lpTrLtFbIpxHStorageType, lpIlsFwdrLtFbMacTrRowStatus=lpIlsFwdrLtFbMacTrRowStatus, lpIlsFwdrLtFbIpxHTopEntry=lpIlsFwdrLtFbIpxHTopEntry, lpIlsFwdrLinkToTrafficSourceTable=lpIlsFwdrLinkToTrafficSourceTable, lpEth100LtFbAppleHTopTable=lpEth100LtFbAppleHTopTable, lpEnetLtFbMacEnetTData=lpEnetLtFbMacEnetTData, lpFiTestPTOTable=lpFiTestPTOTable, lpIlsFwdrLtFrmCmpTopTable=lpIlsFwdrLtFrmCmpTopTable, lpFiLtFbLlchTData=lpFiLtFbLlchTData, lpEth100LtFbMacEnetStorageType=lpEth100LtFbMacEnetStorageType, lpFiLtFbAppleHTopTable=lpFiLtFbAppleHTopTable, laFramerComponentName=laFramerComponentName, lpEnetLtFrmCpyComponentName=lpEnetLtFrmCpyComponentName, lpIlsFwdrLtPrtCfgTopTable=lpIlsFwdrLtPrtCfgTopTable, lpEnetLtFbAppleHComponentName=lpEnetLtFbAppleHComponentName, lpFiPhyStorageType=lpFiPhyStorageType, lpFiMacCOperTable=lpFiMacCOperTable, lpTrRowStatus=lpTrRowStatus, lpIlsFwdrLtFbStorageType=lpIlsFwdrLtFbStorageType, lpFiVendor=lpFiVendor, lpFiLtCntlComponentName=lpFiLtCntlComponentName, lpFiLtFbRowStatusTable=lpFiLtFbRowStatusTable, lpTrAcErrors=lpTrAcErrors, lpEnetMacReceiveErrors=lpEnetMacReceiveErrors, lpTrCidDataEntry=lpTrCidDataEntry, lpTrLostFrameErrors=lpTrLostFrameErrors, lpFiTokenNegotiatedTimer=lpFiTokenNegotiatedTimer, lpTrLtFbMacTr=lpTrLtFbMacTr, lpEnetLtFbIpHIndex=lpEnetLtFbIpHIndex, lpEth100MacReceiveErrors=lpEth100MacReceiveErrors, lpIlsFwdrLtFbTxInfoTopEntry=lpIlsFwdrLtFbTxInfoTopEntry, lpTrLtFbMacEnetTData=lpTrLtFbMacEnetTData, lpTrLtFbTxInfoTopTable=lpTrLtFbTxInfoTopTable, lpEth100LtFbMacTrComponentName=lpEth100LtFbMacTrComponentName, lpEnetLtRowStatus=lpEnetLtRowStatus, lpIlsFwdrLtFbLlch=lpIlsFwdrLtFbLlch, lpTrFunctionalAddress=lpTrFunctionalAddress, laMediaProvEntry=laMediaProvEntry, lpEnetLtFbIpxH=lpEnetLtFbIpxH, lpFiLtFbDataComponentName=lpFiLtFbDataComponentName, lpTrLtFbIpxHRowStatusEntry=lpTrLtFbIpxHRowStatusEntry, lpEnetLtFbDataTopEntry=lpEnetLtFbDataTopEntry, lpIlsFwdrLtFbAppleH=lpIlsFwdrLtFbAppleH, lpFiLtIndex=lpFiLtIndex, lpIlsFwdrLtCntlRowStatus=lpIlsFwdrLtCntlRowStatus, lpEth100LtIndex=lpEth100LtIndex, lpEnetFcsErrors=lpEnetFcsErrors, lpIlsFwdrLtPrtCfgComponentName=lpIlsFwdrLtPrtCfgComponentName, lpFiLtFbIpxH=lpFiLtFbIpxH, lpIlsFwdrLtFbTopTable=lpIlsFwdrLtFbTopTable, lpEnetTestPTOTable=lpEnetTestPTOTable, lpEnetProvTable=lpEnetProvTable, lpFiIfEntryEntry=lpFiIfEntryEntry, lpTrLineErrors=lpTrLineErrors, lpEth100LtFbLlchTData=lpEth100LtFbLlchTData, lpEnetLtFbIpxHRowStatusTable=lpEnetLtFbIpxHRowStatusTable, lpFiLtFbTxInfoStorageType=lpFiLtFbTxInfoStorageType, lpTrLtFbIpxHTopTable=lpTrLtFbIpxHTopTable, lpEth100LtRowStatusTable=lpEth100LtRowStatusTable, lpTrLtFbAppleHTData=lpTrLtFbAppleHTData, lpEnetLtFbLlchStorageType=lpEnetLtFbLlchStorageType, lpEth100OctetsTransmittedOk=lpEth100OctetsTransmittedOk, lpEnetCidDataEntry=lpEnetCidDataEntry, lpEth100ReceivedOctetsIntoRouterBr=lpEth100ReceivedOctetsIntoRouterBr, lpIlsFwdrStatsTable=lpIlsFwdrStatsTable, lpEnetLtFbIpH=lpEnetLtFbIpH, lpIlsFwdrErrorCount=lpIlsFwdrErrorCount, laRowStatusTable=laRowStatusTable, lpEnetLtFbIpHComponentName=lpEnetLtFbIpHComponentName, lpFiLtFbDataTopEntry=lpFiLtFbDataTopEntry, lpIlsFwdrLtFbDataRowStatus=lpIlsFwdrLtFbDataRowStatus, laFramerInterfaceNamesValue=laFramerInterfaceNamesValue, lpTrTest=lpTrTest, lanDriversCapabilitiesBE01=lanDriversCapabilitiesBE01, lpTrSignalLoss=lpTrSignalLoss, lpEth100OperStatusEntry=lpEth100OperStatusEntry, lpTrTestErroredFrmRx=lpTrTestErroredFrmRx, laFramerProvTable=laFramerProvTable, lpIlsFwdrLtFrmCmpStorageType=lpIlsFwdrLtFrmCmpStorageType, lpFiLtFbMacTrIndex=lpFiLtFbMacTrIndex, lpEnetTestResultsTable=lpEnetTestResultsTable, lpTrReceiveCongestions=lpTrReceiveCongestions, lpTrLtFbAppleHRowStatusTable=lpTrLtFbAppleHRowStatusTable, laFramerInterfaceNamesTable=laFramerInterfaceNamesTable, lpFiLtFbMacEnetRowStatus=lpFiLtFbMacEnetRowStatus, lpTrLtCntlTData=lpTrLtCntlTData, lpEth100LtFrmCmpTopEntry=lpEth100LtFrmCmpTopEntry, lpIlsFwdrLtFrmCmpRowStatusTable=lpIlsFwdrLtFrmCmpRowStatusTable, lpTrLtFbIpxHRowStatus=lpTrLtFbIpxHRowStatus, lpEth100OctetsReceivedOk=lpEth100OctetsReceivedOk, lpTrIfIndex=lpTrIfIndex, lpEnetLtFbAppleH=lpEnetLtFbAppleH, lpIlsFwdrLtFbTxInfo=lpIlsFwdrLtFbTxInfo, lpFiPhyProvTable=lpFiPhyProvTable, laCidDataTable=laCidDataTable, lpFiCidDataTable=lpFiCidDataTable, lpIlsFwdrLtFrmCmpRowStatusEntry=lpIlsFwdrLtFrmCmpRowStatusEntry, lpTrLtFbComponentName=lpTrLtFbComponentName, lpFiLtFbMacEnetTData=lpFiLtFbMacEnetTData, lpTrLtFbMacEnetRowStatusTable=lpTrLtFbMacEnetRowStatusTable, lpTrLtFrmCpyRowStatusTable=lpTrLtFrmCpyRowStatusTable, lpEth100ProvEntry=lpEth100ProvEntry, lpTrGroupAddress=lpTrGroupAddress, lpIlsFwdrLtFrmCmp=lpIlsFwdrLtFrmCmp, lpEnetTestIndex=lpEnetTestIndex, lanDriversGroupBE=lanDriversGroupBE, lpEth100LtFbData=lpEth100LtFbData, lanDriversCapabilities=lanDriversCapabilities, lpIlsFwdrTestType=lpIlsFwdrTestType, lpFiLtFbDataRowStatusEntry=lpFiLtFbDataRowStatusEntry, lpTrIfEntryTable=lpTrIfEntryTable, lpIlsFwdrLtFbIpxHComponentName=lpIlsFwdrLtFbIpxHComponentName, lpEnetLtFbTxInfoTData=lpEnetLtFbTxInfoTData, lpEnetLtFbMacTrTData=lpEnetLtFbMacTrTData, lpFiPhy=lpFiPhy, lpEth100LtFbTxInfoTopEntry=lpEth100LtFbTxInfoTopEntry, lpEnetStateTable=lpEnetStateTable, lpEnetLtFbTxInfoStorageType=lpEnetLtFbTxInfoStorageType, lpFiPhyOperEntry=lpFiPhyOperEntry, lpEnetTestResultsEntry=lpEnetTestResultsEntry, lpIlsFwdrLtFbRowStatus=lpIlsFwdrLtFbRowStatus, lpEnetLtFbMacEnetComponentName=lpEnetLtFbMacEnetComponentName, lpEth100LtFbFddiMacIndex=lpEth100LtFbFddiMacIndex, lpEth100LtFbFddiMacRowStatusTable=lpEth100LtFbFddiMacRowStatusTable, lpIlsFwdrLt=lpIlsFwdrLt, lpFiPhyFddiPhyTypeIndex=lpFiPhyFddiPhyTypeIndex, lpEnetLtFbAppleHIndex=lpEnetLtFbAppleHIndex, lpEnetDeferredTransmissions=lpEnetDeferredTransmissions, lpFiLtFbMacEnetTopTable=lpFiLtFbMacEnetTopTable, lpIlsFwdrLtFbFddiMacRowStatusEntry=lpIlsFwdrLtFbFddiMacRowStatusEntry, lpFiTokenMaxTimer=lpFiTokenMaxTimer, lpIlsFwdrAdminState=lpIlsFwdrAdminState, lpFiLtFbMacEnetRowStatusEntry=lpFiLtFbMacEnetRowStatusEntry, lpTrLtFbMacTrTopEntry=lpTrLtFbMacTrTopEntry, lpEnetLtFbAppleHRowStatusEntry=lpEnetLtFbAppleHRowStatusEntry, lpIlsFwdrLtFbMacEnetRowStatusTable=lpIlsFwdrLtFbMacEnetRowStatusTable, lpFiLtFbDataIndex=lpFiLtFbDataIndex, lpIlsFwdrLtFbIndex=lpIlsFwdrLtFbIndex, lpEth100TestRowStatus=lpEth100TestRowStatus, lpEth100LtFbIpHStorageType=lpEth100LtFbIpHStorageType, lpTrLtFrmCmpTopEntry=lpTrLtFrmCmpTopEntry, lpTrLtFbTxInfoRowStatus=lpTrLtFbTxInfoRowStatus, lpIlsFwdrLtPrtCfgRowStatus=lpIlsFwdrLtPrtCfgRowStatus, lpEnetLtFbLlch=lpEnetLtFbLlch, lpIlsFwdrOperationalState=lpIlsFwdrOperationalState, lpFiLtFbRowStatus=lpFiLtFbRowStatus, lpIlsFwdrLtFbIpHRowStatusTable=lpIlsFwdrLtFbIpHRowStatusTable, lpIlsFwdrOperStatusEntry=lpIlsFwdrOperStatusEntry, lpEth100LtFbDataRowStatusTable=lpEth100LtFbDataRowStatusTable, laLinkToProtocolPort=laLinkToProtocolPort, lpFiLtFrmCpy=lpFiLtFrmCpy, lpFiSmtOperTable=lpFiSmtOperTable, lpFiTestTimeRemaining=lpFiTestTimeRemaining, lpEth100TestIndex=lpEth100TestIndex, lpIlsFwdrLtPrtCfgTopEntry=lpIlsFwdrLtPrtCfgTopEntry, lpFiLtRowStatusTable=lpFiLtRowStatusTable, lpFiPhyLctFailCounts=lpFiPhyLctFailCounts, lpEth100LtFbFddiMacTopEntry=lpEth100LtFbFddiMacTopEntry, lpTrLtFbData=lpTrLtFbData, lpTrLtFbIpHTData=lpTrLtFbIpHTData, lpFiLtFbMacTrComponentName=lpFiLtFbMacTrComponentName, lpEth100LtFbLlchRowStatusTable=lpEth100LtFbLlchRowStatusTable, lpIlsFwdrLtFbFddiMacRowStatusTable=lpIlsFwdrLtFbFddiMacRowStatusTable, lpEnetLtFbDataRowStatusTable=lpEnetLtFbDataRowStatusTable, lpEnetLtFbRowStatusTable=lpEnetLtFbRowStatusTable, lpFiOperStatusEntry=lpFiOperStatusEntry, lpEnetLtFrmCpyTData=lpEnetLtFrmCpyTData, lpFiLtFbMacTrTData=lpFiLtFbMacTrTData, lpTrLtFrmCpyTopEntry=lpTrLtFrmCpyTopEntry, lpTrLtFbIpxHRowStatusTable=lpTrLtFbIpxHRowStatusTable, lpIlsFwdrLtFbLlchIndex=lpIlsFwdrLtFbLlchIndex, lpIlsFwdrLtCntlTopEntry=lpIlsFwdrLtCntlTopEntry, lpTrMonitorParticipate=lpTrMonitorParticipate, lpEth100LtFbMacEnetComponentName=lpEth100LtFbMacEnetComponentName, lpEth100LtFbLlch=lpEth100LtFbLlch, lpEnetLtFrmCmpComponentName=lpEnetLtFrmCmpComponentName, lpIlsFwdrLtFrmCmpIndex=lpIlsFwdrLtFrmCmpIndex, lpTrTestPTOEntry=lpTrTestPTOEntry, lpIlsFwdrLtFbTxInfoRowStatusTable=lpIlsFwdrLtFbTxInfoRowStatusTable, lpIlsFwdrTestBitsRx=lpIlsFwdrTestBitsRx, lpEnetLtCntl=lpEnetLtCntl, lpFiLtFbIpxHIndex=lpFiLtFbIpxHIndex, lpTrLtCntlTopTable=lpTrLtCntlTopTable, lpFiLtTopTable=lpFiLtTopTable, lpFiIndex=lpFiIndex, lpTrLtPrtCfgRowStatusTable=lpTrLtPrtCfgRowStatusTable, laRowStatus=laRowStatus, lpFiLtFbDataTData=lpFiLtFbDataTData, lpFiLtFbLlchIndex=lpFiLtFbLlchIndex, lpIlsFwdrLtFbDataRowStatusEntry=lpIlsFwdrLtFbDataRowStatusEntry, lpIlsFwdrLtFbAppleHComponentName=lpIlsFwdrLtFbAppleHComponentName, lpEth100LtFrmCmpComponentName=lpEth100LtFrmCmpComponentName, lpEth100LtFbRowStatusTable=lpEth100LtFbRowStatusTable, lpIlsFwdrLtFbDataTData=lpIlsFwdrLtFbDataTData, lpEth100LtPrtCfgTData=lpEth100LtPrtCfgTData, lpEth100LtFbIpHTopEntry=lpEth100LtFbIpHTopEntry, laOperStatusEntry=laOperStatusEntry, laCustomerIdentifier=laCustomerIdentifier, lpTrLtFbLlch=lpTrLtFbLlch, lpTrStatsEntry=lpTrStatsEntry, laRowStatusEntry=laRowStatusEntry, lpEth100LtFrmCpyRowStatusTable=lpEth100LtFrmCpyRowStatusTable, lpTrLtPrtCfgTopTable=lpTrLtPrtCfgTopTable, lpIlsFwdrLtFbFddiMacIndex=lpIlsFwdrLtFbFddiMacIndex, lpFiLtCntlTopTable=lpFiLtCntlTopTable, lpEnetLtFbLlchTopTable=lpEnetLtFbLlchTopTable, lpFiSmtProvEntry=lpFiSmtProvEntry, lpFiLtFrmCpyTopTable=lpFiLtFrmCpyTopTable, lpTrLtFbAppleHComponentName=lpTrLtFbAppleHComponentName, lpEnetOperStatusEntry=lpEnetOperStatusEntry, lpEth100ProvTable=lpEth100ProvTable, lpIlsFwdrLtRowStatusEntry=lpIlsFwdrLtRowStatusEntry, lpIlsFwdrLtFrmCpyRowStatusEntry=lpIlsFwdrLtFrmCpyRowStatusEntry, lpIlsFwdrRowStatusEntry=lpIlsFwdrRowStatusEntry, lpIlsFwdrLtFrmCpyComponentName=lpIlsFwdrLtFrmCpyComponentName, lpTrMacAddress=lpTrMacAddress, lpEnetLtFbMacTrStorageType=lpEnetLtFbMacTrStorageType, lpIlsFwdrLtFbIpHTData=lpIlsFwdrLtFbIpHTData, lpFiLtFbMacTrRowStatusTable=lpFiLtFbMacTrRowStatusTable, lpFiLtFbIpxHTData=lpFiLtFbIpxHTData, lpEnetAdminInfoEntry=lpEnetAdminInfoEntry, lpEth100LtPrtCfgComponentName=lpEth100LtPrtCfgComponentName, lpEth100LtFbAppleHStorageType=lpEth100LtFbAppleHStorageType, lpEth100LtFrmCmp=lpEth100LtFrmCmp, lpEth100LtFbAppleHTopEntry=lpEth100LtFbAppleHTopEntry, lpFiTokenRequestTimer=lpFiTokenRequestTimer, lpTrLt=lpTrLt, lpTrChipSet=lpTrChipSet, lpEnetLtFbTopTable=lpEnetLtFbTopTable, lpEnetLtFbMacEnetRowStatus=lpEnetLtFbMacEnetRowStatus, lpEnetTestFrmRx=lpEnetTestFrmRx, lpFiLtStorageType=lpFiLtStorageType, lpEnetIndex=lpEnetIndex, lpFiLtFbDataStorageType=lpFiLtFbDataStorageType, lpIlsFwdrLtFbData=lpIlsFwdrLtFbData, lpEth100CarrierSenseErrors=lpEth100CarrierSenseErrors, lpEnetLtRowStatusEntry=lpEnetLtRowStatusEntry, lpEnetLtFbDataIndex=lpEnetLtFbDataIndex)
mibBuilder.exportSymbols("Nortel-Magellan-Passport-LanDriversMIB", lpFiLtFbLlchRowStatusEntry=lpFiLtFbLlchRowStatusEntry, lpTrRingState=lpTrRingState, lpTrLtFbMacTrTData=lpTrLtFbMacTrTData, lpEth100TestBitsRx=lpEth100TestBitsRx, lpEth100LtFbLlchIndex=lpEth100LtFbLlchIndex, lpTrLtFrmCpyComponentName=lpTrLtFrmCpyComponentName, lpTrLtCntl=lpTrLtCntl, lpEth100LtComponentName=lpEth100LtComponentName, lpFiMacOperEntry=lpFiMacOperEntry, lpFiLtFbTxInfoTopEntry=lpFiLtFbTxInfoTopEntry, lpIlsFwdrLtCntlComponentName=lpIlsFwdrLtCntlComponentName, lpFiLtFbIpHTData=lpFiLtFbIpHTData, lpFiTestBitsRx=lpFiTestBitsRx, lpTrLtFbFddiMacRowStatusEntry=lpTrLtFbFddiMacRowStatusEntry, lpFiLtFrmCpyRowStatus=lpFiLtFrmCpyRowStatus, lpFiLtFbAppleHRowStatus=lpFiLtFbAppleHRowStatus, lpTrLtFbMacTrRowStatusTable=lpTrLtFbMacTrRowStatusTable, la=la, lpFiTestDuration=lpFiTestDuration, laOperationalState=laOperationalState, lpFiTestFrmRx=lpFiTestFrmRx, lpIlsFwdrLtCntlRowStatusTable=lpIlsFwdrLtCntlRowStatusTable, lpFiLtTData=lpFiLtTData, lpTrLtFrmCmpRowStatusTable=lpTrLtFrmCmpRowStatusTable, lpFiLtFrmCmpRowStatusTable=lpFiLtFrmCmpRowStatusTable, lpIlsFwdrLtFbLlchRowStatusTable=lpIlsFwdrLtFbLlchRowStatusTable, lpEth100LtCntlTData=lpEth100LtCntlTData, lpEnetLtFbTxInfoRowStatusTable=lpEnetLtFbTxInfoRowStatusTable, lpTrLtFbTxInfoComponentName=lpTrLtFbTxInfoComponentName, lpFiDownstreamNeighbor=lpFiDownstreamNeighbor, lpEnetOperEntry=lpEnetOperEntry, lpFiFrameErrorFlag=lpFiFrameErrorFlag, lpTrRowStatusTable=lpTrRowStatusTable, lpTrTestComponentName=lpTrTestComponentName, lpTrIndex=lpTrIndex, lpEth100SnmpOperStatus=lpEth100SnmpOperStatus, lpTrLtFbFddiMacStorageType=lpTrLtFbFddiMacStorageType, lpTrLtFbDataTData=lpTrLtFbDataTData, lpTrLtFbLlchTData=lpTrLtFbLlchTData, lpTrLtFrmCmpComponentName=lpTrLtFrmCmpComponentName, lpEnetTestDuration=lpEnetTestDuration, lpIlsFwdrLtIndex=lpIlsFwdrLtIndex, lpEth100UndersizeFrames=lpEth100UndersizeFrames, lpFiLt=lpFiLt, lpFiLtFbTxInfoRowStatusTable=lpFiLtFbTxInfoRowStatusTable, lpIlsFwdrLtFbIpxHRowStatusEntry=lpIlsFwdrLtFbIpxHRowStatusEntry, laIfEntryTable=laIfEntryTable, lpEth100LtFbRowStatusEntry=lpEth100LtFbRowStatusEntry, lpEnetLateCollisions=lpEnetLateCollisions, lpIlsFwdrLtCntlTData=lpIlsFwdrLtCntlTData, lpEnetLtFbLlchTData=lpEnetLtFbLlchTData, lpIlsFwdrTestCauseOfTermination=lpIlsFwdrTestCauseOfTermination, lpIlsFwdrLtFbMacEnetTopTable=lpIlsFwdrLtFbMacEnetTopTable, lpTrLtFrmCmpTData=lpTrLtFrmCmpTData, lpEnetLtFbIpHTopTable=lpEnetLtFbIpHTopTable, lpEth100LtFrmCmpStorageType=lpEth100LtFrmCmpStorageType, lpEth100LtPrtCfgRowStatusTable=lpEth100LtPrtCfgRowStatusTable, lpEnetTestComponentName=lpEnetTestComponentName, lpFiTestCauseOfTermination=lpFiTestCauseOfTermination, lpEnetSqeTestErrors=lpEnetSqeTestErrors, lpTrAdminInfoEntry=lpTrAdminInfoEntry, lpIlsFwdrLtFbDataStorageType=lpIlsFwdrLtFbDataStorageType, lpTrLtFbMacEnetRowStatus=lpTrLtFbMacEnetRowStatus, laFramerInterfaceNamesEntry=laFramerInterfaceNamesEntry, lpTrLtFbIpxHIndex=lpTrLtFbIpxHIndex, lpEnetLtFbRowStatusEntry=lpEnetLtFbRowStatusEntry, lpIlsFwdrLtCntlRowStatusEntry=lpIlsFwdrLtCntlRowStatusEntry, lpFiTestFrmSize=lpFiTestFrmSize, lpTrLtFbIpHTopEntry=lpTrLtFbIpHTopEntry, lpEth100LtFbDataTopTable=lpEth100LtFbDataTopTable, lpEth100LtFbAppleHRowStatus=lpEth100LtFbAppleHRowStatus, lpFiUsageState=lpFiUsageState, lpEnetLtFbDataComponentName=lpEnetLtFbDataComponentName, lpFiLtFbLlchTopEntry=lpFiLtFbLlchTopEntry, lpEth100SingleCollisionFrames=lpEth100SingleCollisionFrames, lpEth100LtFbTxInfoRowStatusEntry=lpEth100LtFbTxInfoRowStatusEntry, lpEnetTestType=lpEnetTestType, lpTrLtTopEntry=lpTrLtTopEntry, lpIlsFwdrLtFbMacTrRowStatusEntry=lpIlsFwdrLtFbMacTrRowStatusEntry, lpEnetLtFbMacTrRowStatusTable=lpEnetLtFbMacTrRowStatusTable, lpTrIfEntryEntry=lpTrIfEntryEntry, lpEth100AutoNegStatus=lpEth100AutoNegStatus, lpIlsFwdrLtFbAppleHIndex=lpIlsFwdrLtFbAppleHIndex, lpFiAcceptAs=lpFiAcceptAs, lpFiPhySignalBitsRcvd=lpFiPhySignalBitsRcvd, lpEnetLtFbDataTopTable=lpEnetLtFbDataTopTable, lpFiNeighborNotifyInterval=lpFiNeighborNotifyInterval, lpEnetLtFbIpHStorageType=lpEnetLtFbIpHStorageType, lpFiLtFbData=lpFiLtFbData, lpIlsFwdrLtFrmCpyRowStatus=lpIlsFwdrLtFrmCpyRowStatus, laFramerRowStatusEntry=laFramerRowStatusEntry, lpEth100LtFbFddiMacRowStatusEntry=lpEth100LtFbFddiMacRowStatusEntry, lpEnetLtFrmCpyRowStatusEntry=lpEnetLtFrmCpyRowStatusEntry, lpTrTestType=lpTrTestType, lpIlsFwdrLinkToTrafficSourceEntry=lpIlsFwdrLinkToTrafficSourceEntry, lpTrLtFbIndex=lpTrLtFbIndex, lpEnetLtFbMacTrIndex=lpEnetLtFbMacTrIndex, lpFiLtFbIpxHStorageType=lpFiLtFbIpxHStorageType, lpTrStateEntry=lpTrStateEntry, lpFiTestRowStatusTable=lpFiTestRowStatusTable, lpFiTestType=lpFiTestType, lpEth100TestComponentName=lpEth100TestComponentName, lpTrTestBitsTx=lpTrTestBitsTx, lpEth100LtFbIpxHTopEntry=lpEth100LtFbIpxHTopEntry, lpIlsFwdrLtRowStatus=lpIlsFwdrLtRowStatus, lpFiTokenCounts=lpFiTokenCounts, lpEnetTestFrmTx=lpEnetTestFrmTx, lpTrLtCntlComponentName=lpTrLtCntlComponentName, lpEnetLtFbComponentName=lpEnetLtFbComponentName, lpTrLtPrtCfgStorageType=lpTrLtPrtCfgStorageType, lpFiLtFbFddiMacTopTable=lpFiLtFbFddiMacTopTable, lpIlsFwdrLtFrmCmpTopEntry=lpIlsFwdrLtFrmCmpTopEntry, lpIlsFwdrLtFbRowStatusEntry=lpIlsFwdrLtFbRowStatusEntry, lpFiLtCntlRowStatusTable=lpFiLtCntlRowStatusTable, lpTrLtIndex=lpTrLtIndex, lpTrLtFbMacEnetStorageType=lpTrLtFbMacEnetStorageType, lpFiTestComponentName=lpFiTestComponentName, lpTrLtPrtCfg=lpTrLtPrtCfg, lpTrLtFbRowStatus=lpTrLtFbRowStatus, lpEnetLtFbIpxHTopEntry=lpEnetLtFbIpxHTopEntry, lpFiLtFbAppleHStorageType=lpFiLtFbAppleHStorageType, lpEnetLtTopEntry=lpEnetLtTopEntry, lpTrAdminState=lpTrAdminState, lpEnetLtFrmCpyStorageType=lpEnetLtFrmCpyStorageType, lpTrSnmpOperStatus=lpTrSnmpOperStatus, lpEth100LtFbIpHRowStatusEntry=lpEth100LtFbIpHRowStatusEntry, lpIlsFwdrLtFrmCpyTopTable=lpIlsFwdrLtFrmCpyTopTable, lpEnetVendor=lpEnetVendor, lpTrComponentName=lpTrComponentName, lpEnetTestPTOEntry=lpEnetTestPTOEntry, lpFiLtCntlIndex=lpFiLtCntlIndex, lpFiLtFrmCpyTData=lpFiLtFrmCpyTData, lpFiTestErroredFrmRx=lpFiTestErroredFrmRx, lpEth100LtFbMacEnetRowStatusTable=lpEth100LtFbMacEnetRowStatusTable, lpFiLtFbTxInfoTData=lpFiLtFbTxInfoTData, lpFiLtFbIpH=lpFiLtFbIpH, lpFiLtFbDataRowStatus=lpFiLtFbDataRowStatus, lpIlsFwdrLtFbIpxHTopTable=lpIlsFwdrLtFbIpxHTopTable, lpEth100LtFbMacTrStorageType=lpEth100LtFbMacTrStorageType, lpEnetLtPrtCfgRowStatus=lpEnetLtPrtCfgRowStatus, lpFiPhySignalState=lpFiPhySignalState, lpTrLtFbTxInfoRowStatusEntry=lpTrLtFbTxInfoRowStatusEntry, lpEnetLtFbTxInfoRowStatusEntry=lpEnetLtFbTxInfoRowStatusEntry, lpEnetLtFbDataStorageType=lpEnetLtFbDataStorageType, lpEnetAdminInfoTable=lpEnetAdminInfoTable, lpEnetLtFb=lpEnetLtFb, lpFiLtPrtCfgRowStatusEntry=lpFiLtPrtCfgRowStatusEntry, lpFiLtFbTxInfo=lpFiLtFbTxInfo, lpFiLtFbMacTrTopTable=lpFiLtFbMacTrTopTable, lpIlsFwdrStorageType=lpIlsFwdrStorageType, lpIlsFwdrLtPrtCfgStorageType=lpIlsFwdrLtPrtCfgStorageType, lpIlsFwdrLtFbDataComponentName=lpIlsFwdrLtFbDataComponentName, lpIlsFwdrLtFbIpHRowStatusEntry=lpIlsFwdrLtFbIpHRowStatusEntry, lpEth100LtFbIpHIndex=lpEth100LtFbIpHIndex, lpIlsFwdrLtFbTxInfoComponentName=lpIlsFwdrLtFbTxInfoComponentName, lpEnetLtFbAppleHTopEntry=lpEnetLtFbAppleHTopEntry, lpFiLtFbIpHIndex=lpFiLtFbIpHIndex, lpFiLtFbRowStatusEntry=lpFiLtFbRowStatusEntry, lpFiTestPTOEntry=lpFiTestPTOEntry, lpEnetProvEntry=lpEnetProvEntry, lpEth100LtFbTxInfoRowStatus=lpEth100LtFbTxInfoRowStatus, lpEth100LtFbMacEnet=lpEth100LtFbMacEnet, lpEth100LtFbIpxHTData=lpEth100LtFbIpxHTData, lpTrRingOpenStatus=lpTrRingOpenStatus, lpTrLtFbDataIndex=lpTrLtFbDataIndex, lpTrLtRowStatusEntry=lpTrLtRowStatusEntry, lpIlsFwdrLtFbAppleHStorageType=lpIlsFwdrLtFbAppleHStorageType, lpIlsFwdrRowStatusTable=lpIlsFwdrRowStatusTable, lpTrLtTData=lpTrLtTData, lpEth100FramesTransmittedOk=lpEth100FramesTransmittedOk, lpTrLtFrmCmpRowStatus=lpTrLtFrmCmpRowStatus, lpTrLtPrtCfgRowStatus=lpTrLtPrtCfgRowStatus, lpEnetLtTData=lpEnetLtTData, lpEth100LtFbDataIndex=lpEth100LtFbDataIndex, lpEth100Lt=lpEth100Lt, lpEnetOperStatusTable=lpEnetOperStatusTable, lpFiLtFbIpxHComponentName=lpFiLtFbIpxHComponentName, lpFiLtFbLlchComponentName=lpFiLtFbLlchComponentName, lpFiNcMacOperTable=lpFiNcMacOperTable, lpIlsFwdrTestBitsTx=lpIlsFwdrTestBitsTx, lpEth100LtFbAppleHRowStatusEntry=lpEth100LtFbAppleHRowStatusEntry, lpIlsFwdrLtCntl=lpIlsFwdrLtCntl, lpEth100LtFbDataComponentName=lpEth100LtFbDataComponentName, lpEnetLtFbTxInfo=lpEnetLtFbTxInfo, lpEnetLtFbTxInfoTopTable=lpEnetLtFbTxInfoTopTable, lpFiLtFbLlchRowStatusTable=lpFiLtFbLlchRowStatusTable, lpEth100LtTData=lpEth100LtTData, lpIlsFwdrLtFbFddiMacTopTable=lpIlsFwdrLtFbFddiMacTopTable, lpFi=lpFi, lpTrLtFb=lpTrLtFb, lpIlsFwdrFramesDiscarded=lpIlsFwdrFramesDiscarded, lpTrLtFrmCmpStorageType=lpTrLtFrmCmpStorageType, lpIlsFwdrLtFbLlchComponentName=lpIlsFwdrLtFbLlchComponentName, lpIlsFwdrTest=lpIlsFwdrTest, lpEth100CidDataTable=lpEth100CidDataTable, lpEth100LateCollisions=lpEth100LateCollisions, lpEth100LtFbIpxHStorageType=lpEth100LtFbIpxHStorageType, lpFiLtFbIpHStorageType=lpFiLtFbIpHStorageType, lpEnetLtFbIpHRowStatusTable=lpEnetLtFbIpHRowStatusTable, lpIlsFwdr=lpIlsFwdr, lpFiLtFrmCmpIndex=lpFiLtFrmCmpIndex, lpFiNcMacOperEntry=lpFiNcMacOperEntry, lpIlsFwdrOperStatusTable=lpIlsFwdrOperStatusTable, lpIlsFwdrLtFrmCpyTData=lpIlsFwdrLtFrmCpyTData, lpEth100MultipleCollisionFrames=lpEth100MultipleCollisionFrames, lpEth100LtFrmCpyTData=lpEth100LtFrmCpyTData, lpTrTestIndex=lpTrTestIndex, lpEnetLtFbTopEntry=lpEnetLtFbTopEntry, lpEnetMultipleCollisionFrames=lpEnetMultipleCollisionFrames, lpEnetComponentName=lpEnetComponentName, lpEth100OperationalState=lpEth100OperationalState, lpIlsFwdrLtFrmCmpRowStatus=lpIlsFwdrLtFrmCmpRowStatus, lpFiTestStorageType=lpFiTestStorageType, lpEnetLtFbFddiMac=lpEnetLtFbFddiMac, lpIlsFwdrLtComponentName=lpIlsFwdrLtComponentName, lpEth100AutoNegotiation=lpEth100AutoNegotiation, lpEth100SqeTestErrors=lpEth100SqeTestErrors, lpEth100TestRowStatusEntry=lpEth100TestRowStatusEntry, lpTrLtFbAppleHRowStatusEntry=lpTrLtFbAppleHRowStatusEntry, lpEth100Index=lpEth100Index, lpEth100AdminInfoTable=lpEth100AdminInfoTable, lpIlsFwdrLtRowStatusTable=lpIlsFwdrLtRowStatusTable, lpEnetOperTable=lpEnetOperTable, lpFiLtCntlRowStatusEntry=lpFiLtCntlRowStatusEntry, lpFiLtFrmCmpTopTable=lpFiLtFrmCmpTopTable, lpEnetLtFbIpxHTData=lpEnetLtFbIpxHTData, lpTrLtFbDataTopTable=lpTrLtFbDataTopTable, lpTrProductId=lpTrProductId, lpIlsFwdrLtPrtCfgRowStatusTable=lpIlsFwdrLtPrtCfgRowStatusTable, lpTrLtFrmCmpIndex=lpTrLtFrmCmpIndex, lpEth100LtFbMacEnetTopTable=lpEth100LtFbMacEnetTopTable, lpFiOldUpstreamNeighbor=lpFiOldUpstreamNeighbor, lpTrLtFrmCpyTData=lpTrLtFrmCpyTData, lanDriversGroupBE01=lanDriversGroupBE01, lpIlsFwdrLtFbIpH=lpIlsFwdrLtFbIpH, lpTrLtFbFddiMacTopEntry=lpTrLtFbFddiMacTopEntry, lpEth100OperStatusTable=lpEth100OperStatusTable, lpEth100TestPTOTable=lpEth100TestPTOTable, lpFiLtFbLlchRowStatus=lpFiLtFbLlchRowStatus, lpEth100LtFbIpxHComponentName=lpEth100LtFbIpxHComponentName, lpEnetLtFbRowStatus=lpEnetLtFbRowStatus, lpFiTestRowStatus=lpFiTestRowStatus, lpEnetLtPrtCfgComponentName=lpEnetLtPrtCfgComponentName, lpTrCommentText=lpTrCommentText, lpTrLtFbTData=lpTrLtFbTData, lpEth100RowStatusTable=lpEth100RowStatusTable, lpEth100LtFrmCmpRowStatus=lpEth100LtFrmCmpRowStatus, lpEth100LtFbMacEnetRowStatus=lpEth100LtFbMacEnetRowStatus, lpEth100TestRowStatusTable=lpEth100TestRowStatusTable, laSnmpOperStatus=laSnmpOperStatus, lpEth100TestCauseOfTermination=lpEth100TestCauseOfTermination, lpTrLtFbFddiMac=lpTrLtFbFddiMac, lpFiPhyRowStatus=lpFiPhyRowStatus, lpTrTestFrmRx=lpTrTestFrmRx)
mibBuilder.exportSymbols("Nortel-Magellan-Passport-LanDriversMIB", lpTrLtFbIpxHComponentName=lpTrLtFbIpxHComponentName, lpFiCopiedCounts=lpFiCopiedCounts, lpTrLtFbIpHRowStatusEntry=lpTrLtFbIpHRowStatusEntry, lpEth100TestResultsTable=lpEth100TestResultsTable, lpTrLtFbLlchIndex=lpTrLtFbLlchIndex, lpIlsFwdrTestIndex=lpIlsFwdrTestIndex, lpEth100CommentText=lpEth100CommentText, lpEnetTestRowStatusTable=lpEnetTestRowStatusTable, lpTrRingSpeed=lpTrRingSpeed, lpEnetLtFbMacTrComponentName=lpEnetLtFbMacTrComponentName, lpFiLtFbIpHRowStatus=lpFiLtFbIpHRowStatus, lpEnet=lpEnet, lpIlsFwdrLtFbIpxH=lpIlsFwdrLtFbIpxH, lpEth100DuplexMode=lpEth100DuplexMode, lpTrNodeAddress=lpTrNodeAddress, lpEth100LtFbIpHComponentName=lpEth100LtFbIpHComponentName, lpIlsFwdrLtFbIpHTopEntry=lpIlsFwdrLtFbIpHTopEntry, lpIlsFwdrLtFbLlchRowStatusEntry=lpIlsFwdrLtFbLlchRowStatusEntry, lpIlsFwdrLtFbFddiMacTData=lpIlsFwdrLtFbFddiMacTData, lpIlsFwdrLtFbTxInfoTData=lpIlsFwdrLtFbTxInfoTData, lpTrLtFbIpxHTopEntry=lpTrLtFbIpxHTopEntry, lpEnetOperationalState=lpEnetOperationalState, lpFiLtFrmCmpComponentName=lpFiLtFrmCmpComponentName, lpTrLastTimeBeaconSent=lpTrLastTimeBeaconSent, lpTrLtCntlRowStatusTable=lpTrLtCntlRowStatusTable, lpEnetLtPrtCfgIndex=lpEnetLtPrtCfgIndex, lpIlsFwdrLtFbFddiMacComponentName=lpIlsFwdrLtFbFddiMacComponentName, lpFiLtPrtCfgRowStatus=lpFiLtPrtCfgRowStatus, lpTrLtFbAppleHIndex=lpTrLtFbAppleHIndex, lpFiLtFbMacEnetStorageType=lpFiLtFbMacEnetStorageType, lpFiRowStatusTable=lpFiRowStatusTable, lpIlsFwdrLtFbMacTrRowStatusTable=lpIlsFwdrLtFbMacTrRowStatusTable, lpTrBurstErrors=lpTrBurstErrors, lpEnetLtFbFddiMacRowStatusEntry=lpEnetLtFbFddiMacRowStatusEntry, lpEnetLtFbMacTr=lpEnetLtFbMacTr, lpFiMacProvTable=lpFiMacProvTable, lpTrTestDuration=lpTrTestDuration, lpIlsFwdrLtFbIpHComponentName=lpIlsFwdrLtFbIpHComponentName, lpEnetLtPrtCfgStorageType=lpEnetLtPrtCfgStorageType, lpFiComponentName=lpFiComponentName, lpFiLtFbMacTrStorageType=lpFiLtFbMacTrStorageType, lpTrAbortTransErrors=lpTrAbortTransErrors, lpEth100LtPrtCfgIndex=lpEth100LtPrtCfgIndex, lpTrLtFbAppleHTopTable=lpTrLtFbAppleHTopTable, lpFiLostCounts=lpFiLostCounts, lpIlsFwdrIfEntryTable=lpIlsFwdrIfEntryTable, lpFiMacOperTable=lpFiMacOperTable, lpIlsFwdrLtFbDataRowStatusTable=lpIlsFwdrLtFbDataRowStatusTable, lpIlsFwdrLtFbIpHTopTable=lpIlsFwdrLtFbIpHTopTable, lpEnetLtPrtCfgTData=lpEnetLtPrtCfgTData, lpEnetLtFbMacTrRowStatus=lpEnetLtFbMacTrRowStatus, lpEnetLtFbIpxHTopTable=lpEnetLtFbIpxHTopTable, lpTrLtFbAppleH=lpTrLtFbAppleH, lpEnetLtFbData=lpEnetLtFbData, lpFiPhyLerEstimate=lpFiPhyLerEstimate, lpTrLtFbIpHTopTable=lpTrLtFbIpHTopTable, lpIlsFwdrTestComponentName=lpIlsFwdrTestComponentName, lpIlsFwdrTestFrmRx=lpIlsFwdrTestFrmRx, lpEth100LtRowStatus=lpEth100LtRowStatus, lpEth100LtFrmCpyRowStatus=lpEth100LtFrmCpyRowStatus, lpFiLtFbIndex=lpFiLtFbIndex, lpTrLtFbTxInfoTopEntry=lpTrLtFbTxInfoTopEntry, lpIlsFwdrLtFbLlchTData=lpIlsFwdrLtFbLlchTData, lpEth100LtFrmCpyStorageType=lpEth100LtFrmCpyStorageType, lpEth100LtFrmCpyTopEntry=lpEth100LtFrmCpyTopEntry, lpIlsFwdrTestTimeRemaining=lpIlsFwdrTestTimeRemaining, lpIlsFwdrLtFbLlchTopEntry=lpIlsFwdrLtFbLlchTopEntry, lpEth100LtFrmCmpTData=lpEth100LtFrmCmpTData, lpIlsFwdrLtFbDataTopTable=lpIlsFwdrLtFbDataTopTable, lpEnetLtCntlRowStatus=lpEnetLtCntlRowStatus, lpFiPhySignalBitsTxmt=lpFiPhySignalBitsTxmt, lpFiLtFbAppleHComponentName=lpFiLtFbAppleHComponentName, lpTrTransmitBeacons=lpTrTransmitBeacons, lpTrLtFrmCpyTopTable=lpTrLtFrmCpyTopTable, lpFiIfIndex=lpFiIfIndex, lpTrLtFbMacEnetComponentName=lpTrLtFbMacEnetComponentName, lpFiRmtState=lpFiRmtState, lpTrLtFbMacEnetIndex=lpTrLtFbMacEnetIndex, lpEnetLtCntlStorageType=lpEnetLtCntlStorageType, lpIlsFwdrLtFbMacTrIndex=lpIlsFwdrLtFbMacTrIndex, lpEnetLtCntlRowStatusTable=lpEnetLtCntlRowStatusTable, lpFiLtFbTxInfoRowStatus=lpFiLtFbTxInfoRowStatus, lpEnetTestBitsTx=lpEnetTestBitsTx, lpEth100LtFbFddiMacRowStatus=lpEth100LtFbFddiMacRowStatus, lpTrProvEntry=lpTrProvEntry, lpIlsFwdrTestPTOTable=lpIlsFwdrTestPTOTable, lpEnetAdminState=lpEnetAdminState, lpTrTestTimeRemaining=lpTrTestTimeRemaining, lpEth100LtFbMacTrTData=lpEth100LtFbMacTrTData, lpEth100LtFbLlchRowStatusEntry=lpEth100LtFbLlchRowStatusEntry, lpEnetAlignmentErrors=lpEnetAlignmentErrors, lpIlsFwdrLtFbAppleHTopEntry=lpIlsFwdrLtFbAppleHTopEntry, lpFiBypassPresent=lpFiBypassPresent, lpEnetLtFbAppleHTData=lpEnetLtFbAppleHTData, lpEnetLtFbMacEnetTopTable=lpEnetLtFbMacEnetTopTable, lpIlsFwdrLtFbFddiMacStorageType=lpIlsFwdrLtFbFddiMacStorageType, lpIlsFwdrLtFbIpHRowStatus=lpIlsFwdrLtFbIpHRowStatus, lpFiLtRowStatusEntry=lpFiLtRowStatusEntry, lpEth100LtFrmCpyIndex=lpEth100LtFrmCpyIndex, laUsageState=laUsageState, lpEnetLtFbTxInfoIndex=lpEnetLtFbTxInfoIndex, lpEth100LtFbStorageType=lpEth100LtFbStorageType, lpFiLtFbMacEnetComponentName=lpFiLtFbMacEnetComponentName, lpIlsFwdrLinkToTrafficSourceValue=lpIlsFwdrLinkToTrafficSourceValue, lpTrNcMacAddress=lpTrNcMacAddress, lpTrTestBitsRx=lpTrTestBitsRx, lpIlsFwdrTestErroredFrmRx=lpIlsFwdrTestErroredFrmRx, lpEnetCidDataTable=lpEnetCidDataTable, lpEnetLtFrmCpyRowStatusTable=lpEnetLtFrmCpyRowStatusTable, lpFiCommentText=lpFiCommentText, lpFiPhyRowStatusTable=lpFiPhyRowStatusTable, laIndex=laIndex, lpEth100IfIndex=lpEth100IfIndex, lpEnetLtCntlComponentName=lpEnetLtCntlComponentName, laStateTable=laStateTable, lpEnetLtRowStatusTable=lpEnetLtRowStatusTable, lpFiLtFbTopTable=lpFiLtFbTopTable, lpIlsFwdrLtFbMacEnetIndex=lpIlsFwdrLtFbMacEnetIndex, lpIlsFwdrLtFbIpxHStorageType=lpIlsFwdrLtFbIpxHStorageType, lpFiLtCntlTopEntry=lpFiLtCntlTopEntry, lpEth100Eth100StatsEntry=lpEth100Eth100StatsEntry, lpEnetLtFbIpHRowStatusEntry=lpEnetLtFbIpHRowStatusEntry, lpTrTokenErrors=lpTrTokenErrors, lpEnetLtFbMacEnetIndex=lpEnetLtFbMacEnetIndex, lpFiPhyLerCutoff=lpFiPhyLerCutoff, lpTrLtPrtCfgRowStatusEntry=lpTrLtPrtCfgRowStatusEntry, lpFiLtFbMacEnetRowStatusTable=lpFiLtFbMacEnetRowStatusTable, lpIlsFwdrIndex=lpIlsFwdrIndex, lpIlsFwdrLtFbFddiMacTopEntry=lpIlsFwdrLtFbFddiMacTopEntry, lpTrTestResultsEntry=lpTrTestResultsEntry, lpEth100AdminInfoEntry=lpEth100AdminInfoEntry, lpTrNcMacOperTable=lpTrNcMacOperTable, lpFiLtFrmCpyComponentName=lpFiLtFrmCpyComponentName, lpFiAcceptAa=lpFiAcceptAa, lpTrLtFbMacTrRowStatus=lpTrLtFbMacTrRowStatus, lpEth100TestElapsedTime=lpEth100TestElapsedTime, lpTrTestStorageType=lpTrTestStorageType, lpTrSoftErrors=lpTrSoftErrors, lpFiLtFbAppleHIndex=lpFiLtFbAppleHIndex, lpTrFrameCopiedErrors=lpTrFrameCopiedErrors, lpFiLtFbStorageType=lpFiLtFbStorageType, lpTrLtFbIpHRowStatus=lpTrLtFbIpHRowStatus, lpIlsFwdrLtFbTxInfoStorageType=lpIlsFwdrLtFbTxInfoStorageType, lpEth100StorageType=lpEth100StorageType, laAdminState=laAdminState, lpTrLtFrmCpyRowStatusEntry=lpTrLtFrmCpyRowStatusEntry, lpEth100LtRowStatusEntry=lpEth100LtRowStatusEntry, lpFiLtRowStatus=lpFiLtRowStatus, lpEth100TestErroredFrmRx=lpEth100TestErroredFrmRx, lpIlsFwdrLtFbTxInfoRowStatus=lpIlsFwdrLtFbTxInfoRowStatus, lpEnetLtFbMacEnet=lpEnetLtFbMacEnet, lpEnetStorageType=lpEnetStorageType, lpEnetLtFbFddiMacIndex=lpEnetLtFbFddiMacIndex, laFramerInterfaceNamesRowStatus=laFramerInterfaceNamesRowStatus, lpEnetTestStorageType=lpEnetTestStorageType, lpFiIfEntryTable=lpFiIfEntryTable, lpTrLtFbFddiMacIndex=lpTrLtFbFddiMacIndex, lpEth100IfEntryTable=lpEth100IfEntryTable, laFramerRowStatusTable=laFramerRowStatusTable, lpFiLtFrmCpyTopEntry=lpFiLtFrmCpyTopEntry, lpEnetLtFbIpxHRowStatus=lpEnetLtFbIpxHRowStatus, lpTrIfAdminStatus=lpTrIfAdminStatus, lpIlsFwdrTestStorageType=lpIlsFwdrTestStorageType, lpEth100LtFbAppleHIndex=lpEth100LtFbAppleHIndex, lpEnetTestErroredFrmRx=lpEnetTestErroredFrmRx, lpEth100LtFbMacTrTopTable=lpEth100LtFbMacTrTopTable, lanDriversMIB=lanDriversMIB, lpIlsFwdrLtCntlTopTable=lpIlsFwdrLtCntlTopTable, lpEnetLtCntlRowStatusEntry=lpEnetLtCntlRowStatusEntry, lpEth100LtCntlComponentName=lpEth100LtCntlComponentName, lpEth100TestType=lpEth100TestType, lpTrLtFbAppleHStorageType=lpTrLtFbAppleHStorageType, lpEnetRowStatusTable=lpEnetRowStatusTable, lpEnetLtFbFddiMacRowStatusTable=lpEnetLtFbFddiMacRowStatusTable, lpEnetLtFbMacTrRowStatusEntry=lpEnetLtFbMacTrRowStatusEntry, laOperStatusTable=laOperStatusTable, lpEnetLtFrmCpyRowStatus=lpEnetLtFrmCpyRowStatus, lpTrLtFbFddiMacRowStatusTable=lpTrLtFbFddiMacRowStatusTable, lpTrLtFbLlchTopEntry=lpTrLtFbLlchTopEntry, lpEth100MacTransmitErrors=lpEth100MacTransmitErrors, lpEth100LtFrmCmpRowStatusTable=lpEth100LtFrmCmpRowStatusTable, lpEth100LtFb=lpEth100LtFb, lpTrNcMacOperEntry=lpTrNcMacOperEntry, lpIlsFwdrLtFbIpxHTData=lpIlsFwdrLtFbIpxHTData, lpFiTest=lpFiTest, lpEnetLtFrmCmpTopTable=lpEnetLtFrmCmpTopTable, lpEnetLtFbLlchIndex=lpEnetLtFbLlchIndex, lpEnetLtPrtCfgRowStatusTable=lpEnetLtPrtCfgRowStatusTable, lpEth100LtFbMacTrRowStatus=lpEth100LtFbMacTrRowStatus, lpFiLtFbIpHTopEntry=lpFiLtFbIpHTopEntry, lpEth100LtFbMacTrIndex=lpEth100LtFbMacTrIndex, lpFiLtFrmCmpRowStatus=lpFiLtFrmCmpRowStatus, lpEth100LtFbAppleHTData=lpEth100LtFbAppleHTData, lpTrAdminInfoTable=lpTrAdminInfoTable, lpTrLtFbMacEnetRowStatusEntry=lpTrLtFbMacEnetRowStatusEntry, lpFiSmtOperEntry=lpFiSmtOperEntry, laFramerInterfaceName=laFramerInterfaceName, lpEth100ApplicationFramerName=lpEth100ApplicationFramerName, lpFiNcUpstreamNeighbor=lpFiNcUpstreamNeighbor, lpEth100LtFbTopEntry=lpEth100LtFbTopEntry, lpEnetLtFbIpxHIndex=lpEnetLtFbIpxHIndex, lpEnetLtPrtCfg=lpEnetLtPrtCfg, lpEth100TestPTOEntry=lpEth100TestPTOEntry, lpTrLtCntlRowStatus=lpTrLtCntlRowStatus, lpIlsFwdrLtPrtCfgIndex=lpIlsFwdrLtPrtCfgIndex, lpTrLtFbTxInfoTData=lpTrLtFbTxInfoTData, lpIlsFwdrLtPrtCfgTData=lpIlsFwdrLtPrtCfgTData, lpEth100=lpEth100, laMediaProvTable=laMediaProvTable, lpTrStateTable=lpTrStateTable, lpFiValidTransmissionTimer=lpFiValidTransmissionTimer, lpEth100LtFbIndex=lpEth100LtFbIndex, lpIlsFwdrSnmpOperStatus=lpIlsFwdrSnmpOperStatus, lpEnetLtFbIpHRowStatus=lpEnetLtFbIpHRowStatus, lpTrTestResultsTable=lpTrTestResultsTable, lpEnetLtFrmCmp=lpEnetLtFrmCmp, lpIlsFwdrLtFbTxInfoIndex=lpIlsFwdrLtFbTxInfoIndex, lpEth100StatsEntry=lpEth100StatsEntry, lpFiLtFbTxInfoIndex=lpFiLtFbTxInfoIndex, lpTrHardErrors=lpTrHardErrors, lpIlsFwdrIfEntryEntry=lpIlsFwdrIfEntryEntry, lpEth100RowStatus=lpEth100RowStatus, lpEnetLtFrmCmpRowStatusTable=lpEnetLtFrmCmpRowStatusTable, lpEth100ActualDuplexMode=lpEth100ActualDuplexMode, lpEth100LtFbLlchTopEntry=lpEth100LtFbLlchTopEntry, lpEth100ExcessiveCollisions=lpEth100ExcessiveCollisions, lpTrLtCntlStorageType=lpTrLtCntlStorageType, lpTrLtRowStatusTable=lpTrLtRowStatusTable, lpTrRingStatus=lpTrRingStatus, lpIlsFwdrLtFrmCpyStorageType=lpIlsFwdrLtFrmCpyStorageType, lpTrLtTopTable=lpTrLtTopTable, lpTrLtFbIpHComponentName=lpTrLtFbIpHComponentName, lpTrLtFbTxInfoRowStatusTable=lpTrLtFbTxInfoRowStatusTable, lpIlsFwdrLtFbMacEnetRowStatusEntry=lpIlsFwdrLtFbMacEnetRowStatusEntry, laStorageType=laStorageType, lpFiLtFrmCmpTopEntry=lpFiLtFrmCmpTopEntry, lpTrLtFbLlchRowStatusEntry=lpTrLtFbLlchRowStatusEntry, lpTrApplicationFramerName=lpTrApplicationFramerName, lpEnetRowStatus=lpEnetRowStatus, lpEnetTestCauseOfTermination=lpEnetTestCauseOfTermination, lpEnetLt=lpEnetLt, lpTrOperationalState=lpTrOperationalState, lpEnetLtFbMacEnetRowStatusTable=lpEnetLtFbMacEnetRowStatusTable, lpIlsFwdrLtFrmCmpTData=lpIlsFwdrLtFrmCmpTData, lpTrTestElapsedTime=lpTrTestElapsedTime, lpFiPhyLerFlag=lpFiPhyLerFlag, lpIlsFwdrLtFbMacEnetRowStatus=lpIlsFwdrLtFbMacEnetRowStatus, lpIlsFwdrLtFbMacTrTopEntry=lpIlsFwdrLtFbMacTrTopEntry, lpFiLtFbMacTrRowStatus=lpFiLtFbMacTrRowStatus, lpEnetLtFbMacTrTopEntry=lpEnetLtFbMacTrTopEntry, lpFiLtPrtCfgComponentName=lpFiLtPrtCfgComponentName, lpFiLtFrmCmp=lpFiLtFrmCmp, lpFiLtFbMacTrRowStatusEntry=lpFiLtFbMacTrRowStatusEntry, lpFiLtFbIpHTopTable=lpFiLtFbIpHTopTable)
mibBuilder.exportSymbols("Nortel-Magellan-Passport-LanDriversMIB", lpEth100LtFbIpHTData=lpEth100LtFbIpHTData, lpEth100TestResultsEntry=lpEth100TestResultsEntry, lpEnetLtFrmCmpTData=lpEnetLtFrmCmpTData, lpEnetLtFbAppleHRowStatusTable=lpEnetLtFbAppleHRowStatusTable, lpFiLtFbTData=lpFiLtFbTData, lpEth100TestFrmTx=lpEth100TestFrmTx, lpTrLtFbFddiMacTData=lpTrLtFbFddiMacTData, lpIlsFwdrLtFbDataTopEntry=lpIlsFwdrLtFbDataTopEntry, lpIlsFwdrLtPrtCfg=lpIlsFwdrLtPrtCfg, lpEnetLtPrtCfgTopTable=lpEnetLtPrtCfgTopTable, lpEnetLtFrmCpyIndex=lpEnetLtFrmCpyIndex, lpEth100TestFrmSize=lpEth100TestFrmSize, lpEnetLtFbLlchRowStatus=lpEnetLtFbLlchRowStatus, laFramerIndex=laFramerIndex, lpFiPhyProvEntry=lpFiPhyProvEntry, lpFiLtFbLlchStorageType=lpFiLtFbLlchStorageType, lpEth100LtFbDataStorageType=lpEth100LtFbDataStorageType, lpFiLtFrmCpyIndex=lpFiLtFrmCpyIndex, lpTrLtFbTopEntry=lpTrLtFbTopEntry, lpTrOperStatusEntry=lpTrOperStatusEntry, lpIlsFwdrTestPTOEntry=lpIlsFwdrTestPTOEntry, lpEth100LtFbFddiMac=lpEth100LtFbFddiMac, lpEth100LtPrtCfgStorageType=lpEth100LtPrtCfgStorageType, lpEnetLtCntlTData=lpEnetLtCntlTData, lpTrLtFbIpHRowStatusTable=lpTrLtFbIpHRowStatusTable, lpFiRowStatusEntry=lpFiRowStatusEntry, lpEth100TestStorageType=lpEth100TestStorageType, lpFiMacCOperEntry=lpFiMacCOperEntry, lpEth100LtTopTable=lpEth100LtTopTable, laFramer=laFramer, lpFiPhyLinkErrorMonitor=lpFiPhyLinkErrorMonitor, lpTrLtFbFddiMacTopTable=lpTrLtFbFddiMacTopTable, lpTrLtFbDataRowStatusTable=lpTrLtFbDataRowStatusTable, lanDriversGroup=lanDriversGroup, lpEnetTestElapsedTime=lpEnetTestElapsedTime, lpEth100LtCntlRowStatus=lpEth100LtCntlRowStatus, lpEnetLtComponentName=lpEnetLtComponentName, lpIlsFwdrLtFbTxInfoTopTable=lpIlsFwdrLtFbTxInfoTopTable, lpEnetLtFbFddiMacRowStatus=lpEnetLtFbFddiMacRowStatus, lpEnetTestRowStatusEntry=lpEnetTestRowStatusEntry, lpIlsFwdrLtFbLlchTopTable=lpIlsFwdrLtFbLlchTopTable, lpEnetLtFbDataRowStatus=lpEnetLtFbDataRowStatus, lpEnetLtFbAppleHRowStatus=lpEnetLtFbAppleHRowStatus, lpFiUseThruBa=lpFiUseThruBa, lpEnetLtFbLlchTopEntry=lpEnetLtFbLlchTopEntry, lpTrOperStatusTable=lpTrOperStatusTable, lpTrLtFbFddiMacComponentName=lpTrLtFbFddiMacComponentName, lpEth100LtFbMacTrRowStatusTable=lpEth100LtFbMacTrRowStatusTable, lpFiLtFbFddiMacComponentName=lpFiLtFbFddiMacComponentName, lpTrSingleStation=lpTrSingleStation, lpTrLtFbIpxHTData=lpTrLtFbIpxHTData, lpEth100LtCntlRowStatusTable=lpEth100LtCntlRowStatusTable, lpFiStorageType=lpFiStorageType, lpFiAdminInfoTable=lpFiAdminInfoTable, lpFiLtFbFddiMacRowStatus=lpFiLtFbFddiMacRowStatus, lpTrLtRowStatus=lpTrLtRowStatus, lpEnetApplicationFramerName=lpEnetApplicationFramerName, lpEth100StatsTable=lpEth100StatsTable, lpEnetLtCntlIndex=lpEnetLtCntlIndex, lpFiEcmState=lpFiEcmState, lpFiTestBitsTx=lpFiTestBitsTx, lpEnetTest=lpEnetTest, lpTrLtStorageType=lpTrLtStorageType, lpTrOperTable=lpTrOperTable, lpFiCfState=lpFiCfState, lpEth100RowStatusEntry=lpEth100RowStatusEntry, lpEnetStatsEntry=lpEnetStatsEntry, lpFiLtFbIpHRowStatusEntry=lpFiLtFbIpHRowStatusEntry, lpEnetLtPrtCfgRowStatusEntry=lpEnetLtPrtCfgRowStatusEntry, lpFiLtFbTxInfoRowStatusEntry=lpFiLtFbTxInfoRowStatusEntry, lpIlsFwdrLtFbMacEnetTData=lpIlsFwdrLtFbMacEnetTData, lpEnetLtFrmCpy=lpEnetLtFrmCpy, lpEnetTestFrmSize=lpEnetTestFrmSize, lpFiDupAddressTest=lpFiDupAddressTest, lpFiLtPrtCfgTData=lpFiLtPrtCfgTData, lpEth100StateEntry=lpEth100StateEntry, lpEnetLtFbDataTData=lpEnetLtFbDataTData, lpEth100AlignmentErrors=lpEth100AlignmentErrors, lpFiPhyLemCounts=lpFiPhyLemCounts, lpEth100LtFbTData=lpEth100LtFbTData, lpEth100LtCntlTopEntry=lpEth100LtCntlTopEntry, lpFiAdminState=lpFiAdminState, lpTrLtFbStorageType=lpTrLtFbStorageType, lpIlsFwdrTestFrmSize=lpIlsFwdrTestFrmSize, lpEth100LtFbRowStatus=lpEth100LtFbRowStatus, lpEnetCarrierSenseErrors=lpEnetCarrierSenseErrors, lpTrTestRowStatus=lpTrTestRowStatus, lpTrLtComponentName=lpTrLtComponentName, lpTrLtFbMacEnet=lpTrLtFbMacEnet, lpIlsFwdrLtFbMacTr=lpIlsFwdrLtFbMacTr, lpIlsFwdrTestRowStatusTable=lpIlsFwdrTestRowStatusTable, lpFiTestResultsTable=lpFiTestResultsTable, lpTrLtFbIpH=lpTrLtFbIpH, lpEnetLtFbFddiMacComponentName=lpEnetLtFbFddiMacComponentName, lpEth100DeferredTransmissions=lpEth100DeferredTransmissions, lpEnetLtFbIpxHRowStatusEntry=lpEnetLtFbIpxHRowStatusEntry, lpIlsFwdrLtTopEntry=lpIlsFwdrLtTopEntry, lpEth100MacAddress=lpEth100MacAddress, lpIlsFwdrStateTable=lpIlsFwdrStateTable, lanDriversCapabilitiesBE01A=lanDriversCapabilitiesBE01A, lpFiPhyLemRejectCounts=lpFiPhyLemRejectCounts, lpEnetLtIndex=lpEnetLtIndex, lpFiLtPrtCfg=lpFiLtPrtCfg, lpIlsFwdrLtFbMacEnetStorageType=lpIlsFwdrLtFbMacEnetStorageType, lpTr=lpTr, lpFiLtFrmCmpTData=lpFiLtFrmCmpTData, lpFiLtFbIpHComponentName=lpFiLtFbIpHComponentName, lpEth100LtFbIpHRowStatus=lpEth100LtFbIpHRowStatus, lpFiAcceptBm=lpFiAcceptBm, lpFiErrorCounts=lpFiErrorCounts, lpEnetLtFbIpxHStorageType=lpEnetLtFbIpxHStorageType, laFramerStorageType=laFramerStorageType, lpEnetLtFbTData=lpEnetLtFbTData, lpEnetMacTransmitErrors=lpEnetMacTransmitErrors, lpTrLtFbIpHStorageType=lpTrLtFbIpHStorageType, lpEth100ReceivedFramesIntoRouterBr=lpEth100ReceivedFramesIntoRouterBr, lpEth100LtFbFddiMacStorageType=lpEth100LtFbFddiMacStorageType, lpEnetLtCntlTopEntry=lpEnetLtCntlTopEntry, lpIlsFwdrLtFbIpHStorageType=lpIlsFwdrLtFbIpHStorageType, lpTrLtFbIpHIndex=lpTrLtFbIpHIndex, lpTrCidDataTable=lpTrCidDataTable, lpIlsFwdrLtCntlIndex=lpIlsFwdrLtCntlIndex, lpIlsFwdrLtFbTopEntry=lpIlsFwdrLtFbTopEntry, lpEth100LtFbDataRowStatusEntry=lpEth100LtFbDataRowStatusEntry, lpTrLtFbTopTable=lpTrLtFbTopTable, lpEth100TestBitsTx=lpEth100TestBitsTx, lpEth100LtFbMacEnetIndex=lpEth100LtFbMacEnetIndex, lpEnetIfEntryEntry=lpEnetIfEntryEntry, lpFiLtFbAppleHTopEntry=lpFiLtFbAppleHTopEntry, lpIlsFwdrLtFrmCpyTopEntry=lpIlsFwdrLtFrmCpyTopEntry, lpTrStorageType=lpTrStorageType, lpEnetLtCntlTopTable=lpEnetLtCntlTopTable, lpFiLtFbMacEnet=lpFiLtFbMacEnet, lpTrLtFrmCmpTopTable=lpTrLtFrmCmpTopTable, lpTrLtPrtCfgTopEntry=lpTrLtPrtCfgTopEntry, lpFiLtFbIpxHRowStatus=lpFiLtFbIpxHRowStatus, lpEth100ComponentName=lpEth100ComponentName, lpEnetIfAdminStatus=lpEnetIfAdminStatus, lpEth100ActualLineSpeed=lpEth100ActualLineSpeed, laFramerProvEntry=laFramerProvEntry, lpEnetLtFrmCmpRowStatusEntry=lpEnetLtFrmCmpRowStatusEntry, lpTrLtFrmCmp=lpTrLtFrmCmp, lpIlsFwdrTestRowStatusEntry=lpIlsFwdrTestRowStatusEntry, lpEth100LtFbTxInfo=lpEth100LtFbTxInfo, lpFiLtFrmCpyRowStatusEntry=lpFiLtFrmCpyRowStatusEntry, lpFiLtFbFddiMacRowStatusTable=lpFiLtFbFddiMacRowStatusTable, lpTrLtFrmCpyIndex=lpTrLtFrmCpyIndex, lpIlsFwdrIfIndex=lpIlsFwdrIfIndex, lpEth100StateTable=lpEth100StateTable, lpEnetMacAddress=lpEnetMacAddress, lpEth100LtFbAppleHComponentName=lpEth100LtFbAppleHComponentName, lpTrLtFbAppleHTopEntry=lpTrLtFbAppleHTopEntry, lpEth100LtFrmCpyRowStatusEntry=lpEth100LtFrmCpyRowStatusEntry, lpEth100LtFbLlchStorageType=lpEth100LtFbLlchStorageType, lpEth100LtFrmCpyTopTable=lpEth100LtFrmCpyTopTable, lpEth100LtFrmCmpIndex=lpEth100LtFrmCmpIndex, lpTrLtFbRowStatusEntry=lpTrLtFbRowStatusEntry, lpIlsFwdrLtFbAppleHRowStatusEntry=lpIlsFwdrLtFbAppleHRowStatusEntry, lpFiTvxExpiredCounts=lpFiTvxExpiredCounts, lpEnetLtFrmCpyTopTable=lpEnetLtFrmCpyTopTable, lpFiLtFbMacTr=lpFiLtFbMacTr, lpIlsFwdrProcessedCount=lpIlsFwdrProcessedCount, lpFiPhyComponentName=lpFiPhyComponentName, lpIlsFwdrLtFbRowStatusTable=lpIlsFwdrLtFbRowStatusTable, lpEnetTestTimeRemaining=lpEnetTestTimeRemaining, lpIlsFwdrLtFbLlchStorageType=lpIlsFwdrLtFbLlchStorageType, lpEth100LtFbIpHTopTable=lpEth100LtFbIpHTopTable, lpFiLtFrmCpyStorageType=lpFiLtFrmCpyStorageType, lpEth100LtFbMacTr=lpEth100LtFbMacTr, lpTrLtFbMacTrRowStatusEntry=lpTrLtFbMacTrRowStatusEntry, lpEth100LtFbIpH=lpEth100LtFbIpH, lpEnetStateEntry=lpEnetStateEntry, lpTrNcUpStream=lpTrNcUpStream, lpEth100IfAdminStatus=lpEth100IfAdminStatus, lpFiLtFbAppleHRowStatusTable=lpFiLtFbAppleHRowStatusTable, lpFiLtFbIpxHTopTable=lpFiLtFbIpxHTopTable, lpFiLtPrtCfgStorageType=lpFiLtPrtCfgStorageType, lpTrLtFbAppleHRowStatus=lpTrLtFbAppleHRowStatus, lpEth100LtFbMacTrTopEntry=lpEth100LtFbMacTrTopEntry, lpEth100LtFbLlchRowStatus=lpEth100LtFbLlchRowStatus, lpEth100LtCntl=lpEth100LtCntl, laCidDataEntry=laCidDataEntry, lpFiSmtProvTable=lpFiSmtProvTable, laIfEntryEntry=laIfEntryEntry, lpTrLtFrmCpy=lpTrLtFrmCpy, lpFiStateTable=lpFiStateTable, lpIlsFwdrLtFbIpxHIndex=lpIlsFwdrLtFbIpxHIndex, lpFiLtFbDataTopTable=lpFiLtFbDataTopTable, lpIlsFwdrLtFbMacEnetComponentName=lpIlsFwdrLtFbMacEnetComponentName, lpTrLtCntlTopEntry=lpTrLtCntlTopEntry, lpEth100LtFbTxInfoStorageType=lpEth100LtFbTxInfoStorageType, lpEth100CidDataEntry=lpEth100CidDataEntry, lpEth100LtPrtCfg=lpEth100LtPrtCfg, lpFiPhyOperTable=lpFiPhyOperTable, lpTrLtFbMacTrStorageType=lpTrLtFbMacTrStorageType, lpIlsFwdrTestElapsedTime=lpIlsFwdrTestElapsedTime, lpFiLtComponentName=lpFiLtComponentName, lpEth100LtFbTxInfoIndex=lpEth100LtFbTxInfoIndex, lpTrLtFbTxInfoStorageType=lpTrLtFbTxInfoStorageType, lpFiLtFbFddiMacStorageType=lpFiLtFbFddiMacStorageType, lpFiAcceptBb=lpFiAcceptBb, lpTrTestRowStatusTable=lpTrTestRowStatusTable)
