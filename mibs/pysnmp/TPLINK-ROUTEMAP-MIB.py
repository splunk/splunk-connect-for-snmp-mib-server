#
# PySNMP MIB module TPLINK-ROUTEMAP-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/TPLINK-ROUTEMAP-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 21:18:17 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ConstraintsUnion, ValueSizeConstraint, ValueRangeConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ConstraintsUnion", "ValueSizeConstraint", "ValueRangeConstraint", "ConstraintsIntersection")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
Gauge32, Integer32, iso, ModuleIdentity, IpAddress, NotificationType, ObjectIdentity, Bits, Counter64, Unsigned32, Counter32, MibScalar, MibTable, MibTableRow, MibTableColumn, MibIdentifier, TimeTicks = mibBuilder.importSymbols("SNMPv2-SMI", "Gauge32", "Integer32", "iso", "ModuleIdentity", "IpAddress", "NotificationType", "ObjectIdentity", "Bits", "Counter64", "Unsigned32", "Counter32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "MibIdentifier", "TimeTicks")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
tplinkMgmt, = mibBuilder.importSymbols("TPLINK-MIB", "tplinkMgmt")
TPRowStatus, = mibBuilder.importSymbols("TPLINK-TC-MIB", "TPRowStatus")
class MacAddress(OctetString):
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(6, 6)
    fixedLength = 6

class TPRouteMapMode(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("permit", 1), ("deny", 2))

tplinkRouteMapMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 11863, 6, 76))
tplinkRouteMapMIB.setRevisions(('2012-12-13 09:30',))
if mibBuilder.loadTexts: tplinkRouteMapMIB.setLastUpdated('201212130930Z')
if mibBuilder.loadTexts: tplinkRouteMapMIB.setOrganization('TPLINK')
tplinkRouteMapMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 11863, 6, 76, 1))
tplinkRouteMapNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 11863, 6, 76, 2))
tpIpPrefixConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 11863, 6, 76, 1, 1))
tpIpPrefixConfigTable = MibTable((1, 3, 6, 1, 4, 1, 11863, 6, 76, 1, 1, 1), )
if mibBuilder.loadTexts: tpIpPrefixConfigTable.setStatus('current')
tpIpPrefixConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11863, 6, 76, 1, 1, 1, 1), ).setIndexNames((0, "TPLINK-ROUTEMAP-MIB", "tpIpPrefixName"), (0, "TPLINK-ROUTEMAP-MIB", "tpIpPrefixSeq"))
if mibBuilder.loadTexts: tpIpPrefixConfigEntry.setStatus('current')
tpIpPrefixName = MibTableColumn((1, 3, 6, 1, 4, 1, 11863, 6, 76, 1, 1, 1, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tpIpPrefixName.setStatus('current')
tpIpPrefixMode = MibTableColumn((1, 3, 6, 1, 4, 1, 11863, 6, 76, 1, 1, 1, 1, 2), TPRouteMapMode()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tpIpPrefixMode.setStatus('current')
tpIpPrefixSeq = MibTableColumn((1, 3, 6, 1, 4, 1, 11863, 6, 76, 1, 1, 1, 1, 3), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tpIpPrefixSeq.setStatus('current')
tpNetwork = MibTableColumn((1, 3, 6, 1, 4, 1, 11863, 6, 76, 1, 1, 1, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 19))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tpNetwork.setStatus('current')
tpMaskGe = MibTableColumn((1, 3, 6, 1, 4, 1, 11863, 6, 76, 1, 1, 1, 1, 5), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tpMaskGe.setStatus('current')
tpMaskLe = MibTableColumn((1, 3, 6, 1, 4, 1, 11863, 6, 76, 1, 1, 1, 1, 6), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tpMaskLe.setStatus('current')
tpIpPrefixItemStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11863, 6, 76, 1, 1, 1, 1, 7), TPRowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tpIpPrefixItemStatus.setStatus('current')
tpRouteMapConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 11863, 6, 76, 1, 2))
tpRouteMapConfigTable = MibTable((1, 3, 6, 1, 4, 1, 11863, 6, 76, 1, 2, 1), )
if mibBuilder.loadTexts: tpRouteMapConfigTable.setStatus('current')
tpRouteMapConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11863, 6, 76, 1, 2, 1, 1), ).setIndexNames((0, "TPLINK-ROUTEMAP-MIB", "tpRouteMapName"), (0, "TPLINK-ROUTEMAP-MIB", "tpRuleId"))
if mibBuilder.loadTexts: tpRouteMapConfigEntry.setStatus('current')
tpRouteMapName = MibTableColumn((1, 3, 6, 1, 4, 1, 11863, 6, 76, 1, 2, 1, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tpRouteMapName.setStatus('current')
tpConfigMode = MibTableColumn((1, 3, 6, 1, 4, 1, 11863, 6, 76, 1, 2, 1, 1, 2), TPRouteMapMode()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tpConfigMode.setStatus('current')
tpRuleId = MibTableColumn((1, 3, 6, 1, 4, 1, 11863, 6, 76, 1, 2, 1, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tpRuleId.setStatus('current')
tpConfigItemStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11863, 6, 76, 1, 2, 1, 1, 4), TPRowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tpConfigItemStatus.setStatus('current')
tpRouteMapMatchConfigTable = MibTable((1, 3, 6, 1, 4, 1, 11863, 6, 76, 1, 2, 2), )
if mibBuilder.loadTexts: tpRouteMapMatchConfigTable.setStatus('current')
tpRouteMapMatchConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11863, 6, 76, 1, 2, 2, 1), ).setIndexNames((0, "TPLINK-ROUTEMAP-MIB", "tpRouteMapName"), (0, "TPLINK-ROUTEMAP-MIB", "tpRuleId"))
if mibBuilder.loadTexts: tpRouteMapMatchConfigEntry.setStatus('current')
tpMatchMode = MibTableColumn((1, 3, 6, 1, 4, 1, 11863, 6, 76, 1, 2, 2, 1, 1), TPRouteMapMode()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tpMatchMode.setStatus('current')
tpSIPAcl = MibTableColumn((1, 3, 6, 1, 4, 1, 11863, 6, 76, 1, 2, 2, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tpSIPAcl.setStatus('current')
tpSIPPrefixList = MibTableColumn((1, 3, 6, 1, 4, 1, 11863, 6, 76, 1, 2, 2, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tpSIPPrefixList.setStatus('current')
tpDIPAcl = MibTableColumn((1, 3, 6, 1, 4, 1, 11863, 6, 76, 1, 2, 2, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tpDIPAcl.setStatus('current')
tpDIPPrefixList = MibTableColumn((1, 3, 6, 1, 4, 1, 11863, 6, 76, 1, 2, 2, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tpDIPPrefixList.setStatus('current')
tpNXPAcl = MibTableColumn((1, 3, 6, 1, 4, 1, 11863, 6, 76, 1, 2, 2, 1, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tpNXPAcl.setStatus('current')
tpNXPPrefixList = MibTableColumn((1, 3, 6, 1, 4, 1, 11863, 6, 76, 1, 2, 2, 1, 7), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tpNXPPrefixList.setStatus('current')
tpMatchMetric = MibTableColumn((1, 3, 6, 1, 4, 1, 11863, 6, 76, 1, 2, 2, 1, 8), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tpMatchMetric.setStatus('current')
tpMatchItemStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11863, 6, 76, 1, 2, 2, 1, 9), TPRowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tpMatchItemStatus.setStatus('current')
tpRouteMapSetConfigTable = MibTable((1, 3, 6, 1, 4, 1, 11863, 6, 76, 1, 2, 3), )
if mibBuilder.loadTexts: tpRouteMapSetConfigTable.setStatus('current')
tpRouteMapSetConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11863, 6, 76, 1, 2, 3, 1), ).setIndexNames((0, "TPLINK-ROUTEMAP-MIB", "tpRouteMapName"), (0, "TPLINK-ROUTEMAP-MIB", "tpRuleId"))
if mibBuilder.loadTexts: tpRouteMapSetConfigEntry.setStatus('current')
tpSetMode = MibTableColumn((1, 3, 6, 1, 4, 1, 11863, 6, 76, 1, 2, 3, 1, 1), TPRouteMapMode()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tpSetMode.setStatus('current')
tpSetMetric = MibTableColumn((1, 3, 6, 1, 4, 1, 11863, 6, 76, 1, 2, 3, 1, 2), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tpSetMetric.setStatus('current')
tpSetNexthop = MibTableColumn((1, 3, 6, 1, 4, 1, 11863, 6, 76, 1, 2, 3, 1, 3), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tpSetNexthop.setStatus('current')
tpSetItemStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11863, 6, 76, 1, 2, 3, 1, 4), TPRowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tpSetItemStatus.setStatus('current')
tpRouteMapBindConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 11863, 6, 76, 1, 3))
tpRouteMapBindConfigTable = MibTable((1, 3, 6, 1, 4, 1, 11863, 6, 76, 1, 3, 1), )
if mibBuilder.loadTexts: tpRouteMapBindConfigTable.setStatus('current')
tpRouteMapBindConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11863, 6, 76, 1, 3, 1, 1), ).setIndexNames((0, "TPLINK-ROUTEMAP-MIB", "tpRouteMapBindName"), (0, "TPLINK-ROUTEMAP-MIB", "tpBindVid"))
if mibBuilder.loadTexts: tpRouteMapBindConfigEntry.setStatus('current')
tpRouteMapBindName = MibTableColumn((1, 3, 6, 1, 4, 1, 11863, 6, 76, 1, 3, 1, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tpRouteMapBindName.setStatus('current')
tpBindVid = MibTableColumn((1, 3, 6, 1, 4, 1, 11863, 6, 76, 1, 3, 1, 1, 2), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tpBindVid.setStatus('current')
tpBindItemStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11863, 6, 76, 1, 3, 1, 1, 3), TPRowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tpBindItemStatus.setStatus('current')
mibBuilder.exportSymbols("TPLINK-ROUTEMAP-MIB", tpMaskLe=tpMaskLe, tpSetMetric=tpSetMetric, tpRouteMapSetConfigTable=tpRouteMapSetConfigTable, tpConfigItemStatus=tpConfigItemStatus, tpSetItemStatus=tpSetItemStatus, tpRuleId=tpRuleId, tpMatchMode=tpMatchMode, tplinkRouteMapNotifications=tplinkRouteMapNotifications, tpIpPrefixConfig=tpIpPrefixConfig, tpRouteMapName=tpRouteMapName, tpRouteMapSetConfigEntry=tpRouteMapSetConfigEntry, tpRouteMapBindConfigEntry=tpRouteMapBindConfigEntry, PYSNMP_MODULE_ID=tplinkRouteMapMIB, tpSIPPrefixList=tpSIPPrefixList, MacAddress=MacAddress, tpNetwork=tpNetwork, tpIpPrefixMode=tpIpPrefixMode, tpDIPPrefixList=tpDIPPrefixList, tpIpPrefixItemStatus=tpIpPrefixItemStatus, tpRouteMapBindConfig=tpRouteMapBindConfig, tpIpPrefixConfigTable=tpIpPrefixConfigTable, tpBindVid=tpBindVid, TPRouteMapMode=TPRouteMapMode, tpRouteMapConfigTable=tpRouteMapConfigTable, tpMatchItemStatus=tpMatchItemStatus, tpRouteMapConfigEntry=tpRouteMapConfigEntry, tpSetMode=tpSetMode, tpRouteMapBindConfigTable=tpRouteMapBindConfigTable, tpBindItemStatus=tpBindItemStatus, tpRouteMapMatchConfigTable=tpRouteMapMatchConfigTable, tpSIPAcl=tpSIPAcl, tplinkRouteMapMIBObjects=tplinkRouteMapMIBObjects, tpMaskGe=tpMaskGe, tpRouteMapMatchConfigEntry=tpRouteMapMatchConfigEntry, tpDIPAcl=tpDIPAcl, tpRouteMapBindName=tpRouteMapBindName, tpSetNexthop=tpSetNexthop, tplinkRouteMapMIB=tplinkRouteMapMIB, tpRouteMapConfig=tpRouteMapConfig, tpMatchMetric=tpMatchMetric, tpNXPPrefixList=tpNXPPrefixList, tpIpPrefixConfigEntry=tpIpPrefixConfigEntry, tpNXPAcl=tpNXPAcl, tpIpPrefixSeq=tpIpPrefixSeq, tpIpPrefixName=tpIpPrefixName, tpConfigMode=tpConfigMode)
