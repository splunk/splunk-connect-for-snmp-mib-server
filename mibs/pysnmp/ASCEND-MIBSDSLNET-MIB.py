#
# PySNMP MIB module ASCEND-MIBSDSLNET-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/ASCEND-MIBSDSLNET-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:12:12 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
configuration, = mibBuilder.importSymbols("ASCEND-MIB", "configuration")
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ConstraintsUnion, ValueRangeConstraint, SingleValueConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ConstraintsUnion", "ValueRangeConstraint", "SingleValueConstraint", "ConstraintsIntersection")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Bits, NotificationType, Integer32, IpAddress, Counter64, Unsigned32, Gauge32, MibScalar, MibTable, MibTableRow, MibTableColumn, ModuleIdentity, TimeTicks, MibIdentifier, ObjectIdentity, iso, Counter32 = mibBuilder.importSymbols("SNMPv2-SMI", "Bits", "NotificationType", "Integer32", "IpAddress", "Counter64", "Unsigned32", "Gauge32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ModuleIdentity", "TimeTicks", "MibIdentifier", "ObjectIdentity", "iso", "Counter32")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
class DisplayString(OctetString):
    pass

mibsdslNetworkProfile = MibIdentifier((1, 3, 6, 1, 4, 1, 529, 23, 8))
mibsdslNetworkProfileTable = MibTable((1, 3, 6, 1, 4, 1, 529, 23, 8, 1), )
if mibBuilder.loadTexts: mibsdslNetworkProfileTable.setStatus('mandatory')
mibsdslNetworkProfileEntry = MibTableRow((1, 3, 6, 1, 4, 1, 529, 23, 8, 1, 1), ).setIndexNames((0, "ASCEND-MIBSDSLNET-MIB", "sdslNetworkProfile-Shelf-o"), (0, "ASCEND-MIBSDSLNET-MIB", "sdslNetworkProfile-Slot-o"), (0, "ASCEND-MIBSDSLNET-MIB", "sdslNetworkProfile-Item-o"))
if mibBuilder.loadTexts: mibsdslNetworkProfileEntry.setStatus('mandatory')
sdslNetworkProfile_Shelf_o = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 8, 1, 1, 1), Integer32()).setLabel("sdslNetworkProfile-Shelf-o").setMaxAccess("readonly")
if mibBuilder.loadTexts: sdslNetworkProfile_Shelf_o.setStatus('mandatory')
sdslNetworkProfile_Slot_o = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 8, 1, 1, 2), Integer32()).setLabel("sdslNetworkProfile-Slot-o").setMaxAccess("readonly")
if mibBuilder.loadTexts: sdslNetworkProfile_Slot_o.setStatus('mandatory')
sdslNetworkProfile_Item_o = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 8, 1, 1, 3), Integer32()).setLabel("sdslNetworkProfile-Item-o").setMaxAccess("readonly")
if mibBuilder.loadTexts: sdslNetworkProfile_Item_o.setStatus('mandatory')
sdslNetworkProfile_Name = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 8, 1, 1, 4), DisplayString()).setLabel("sdslNetworkProfile-Name").setMaxAccess("readwrite")
if mibBuilder.loadTexts: sdslNetworkProfile_Name.setStatus('mandatory')
sdslNetworkProfile_PhysicalAddress_Shelf = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 8, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10))).clone(namedValues=NamedValues(("anyShelf", 1), ("shelf1", 2), ("shelf2", 3), ("shelf3", 4), ("shelf4", 5), ("shelf5", 6), ("shelf6", 7), ("shelf7", 8), ("shelf8", 9), ("shelf9", 10)))).setLabel("sdslNetworkProfile-PhysicalAddress-Shelf").setMaxAccess("readwrite")
if mibBuilder.loadTexts: sdslNetworkProfile_PhysicalAddress_Shelf.setStatus('mandatory')
sdslNetworkProfile_PhysicalAddress_Slot = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 8, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 55, 56, 57, 58, 49, 50, 42, 53, 54, 45, 46, 51, 59))).clone(namedValues=NamedValues(("anySlot", 1), ("slot1", 2), ("slot2", 3), ("slot3", 4), ("slot4", 5), ("slot5", 6), ("slot6", 7), ("slot7", 8), ("slot8", 9), ("slot9", 10), ("slot10", 11), ("slot11", 12), ("slot12", 13), ("slot13", 14), ("slot14", 15), ("slot15", 16), ("slot16", 17), ("slot17", 18), ("slot18", 19), ("slot19", 20), ("slot20", 21), ("slot21", 22), ("slot22", 23), ("slot23", 24), ("slot24", 25), ("slot25", 26), ("slot26", 27), ("slot27", 28), ("slot28", 29), ("slot29", 30), ("slot30", 31), ("slot31", 32), ("slot32", 33), ("slot33", 34), ("slot34", 35), ("slot35", 36), ("slot36", 37), ("slot37", 38), ("slot38", 39), ("slot39", 40), ("slot40", 41), ("aLim", 55), ("bLim", 56), ("cLim", 57), ("dLim", 58), ("leftController", 49), ("rightController", 50), ("controller", 42), ("firstControlModule", 53), ("secondControlModule", 54), ("trunkModule1", 45), ("trunkModule2", 46), ("controlModule", 51), ("slotPrimary", 59)))).setLabel("sdslNetworkProfile-PhysicalAddress-Slot").setMaxAccess("readwrite")
if mibBuilder.loadTexts: sdslNetworkProfile_PhysicalAddress_Slot.setStatus('mandatory')
sdslNetworkProfile_PhysicalAddress_ItemNumber = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 8, 1, 1, 7), Integer32()).setLabel("sdslNetworkProfile-PhysicalAddress-ItemNumber").setMaxAccess("readwrite")
if mibBuilder.loadTexts: sdslNetworkProfile_PhysicalAddress_ItemNumber.setStatus('mandatory')
sdslNetworkProfile_Enabled = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 8, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("no", 1), ("yes", 2)))).setLabel("sdslNetworkProfile-Enabled").setMaxAccess("readwrite")
if mibBuilder.loadTexts: sdslNetworkProfile_Enabled.setStatus('mandatory')
sdslNetworkProfile_SparingMode = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 8, 1, 1, 31), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("inactive", 1), ("manual", 2), ("automatic", 3)))).setLabel("sdslNetworkProfile-SparingMode").setMaxAccess("readwrite")
if mibBuilder.loadTexts: sdslNetworkProfile_SparingMode.setStatus('mandatory')
sdslNetworkProfile_ProfileNumber = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 8, 1, 1, 9), Integer32()).setLabel("sdslNetworkProfile-ProfileNumber").setMaxAccess("readwrite")
if mibBuilder.loadTexts: sdslNetworkProfile_ProfileNumber.setStatus('mandatory')
sdslNetworkProfile_IgnoreLineup = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 8, 1, 1, 34), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("systemDefined", 1), ("no", 2), ("yes", 3)))).setLabel("sdslNetworkProfile-IgnoreLineup").setMaxAccess("readwrite")
if mibBuilder.loadTexts: sdslNetworkProfile_IgnoreLineup.setStatus('mandatory')
sdslNetworkProfile_LineConfig_TrunkGroup = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 8, 1, 1, 10), Integer32()).setLabel("sdslNetworkProfile-LineConfig-TrunkGroup").setMaxAccess("readwrite")
if mibBuilder.loadTexts: sdslNetworkProfile_LineConfig_TrunkGroup.setStatus('mandatory')
sdslNetworkProfile_LineConfig_NailedGroup = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 8, 1, 1, 11), Integer32()).setLabel("sdslNetworkProfile-LineConfig-NailedGroup").setMaxAccess("readwrite")
if mibBuilder.loadTexts: sdslNetworkProfile_LineConfig_NailedGroup.setStatus('mandatory')
sdslNetworkProfile_LineConfig_VpSwitchingVpi = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 8, 1, 1, 27), Integer32()).setLabel("sdslNetworkProfile-LineConfig-VpSwitchingVpi").setMaxAccess("readwrite")
if mibBuilder.loadTexts: sdslNetworkProfile_LineConfig_VpSwitchingVpi.setStatus('mandatory')
sdslNetworkProfile_LineConfig_RoutePort_SlotNumber_SlotNumber = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 8, 1, 1, 12), Integer32()).setLabel("sdslNetworkProfile-LineConfig-RoutePort-SlotNumber-SlotNumber").setMaxAccess("readwrite")
if mibBuilder.loadTexts: sdslNetworkProfile_LineConfig_RoutePort_SlotNumber_SlotNumber.setStatus('mandatory')
sdslNetworkProfile_LineConfig_RoutePort_SlotNumber_ShelfNumber = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 8, 1, 1, 13), Integer32()).setLabel("sdslNetworkProfile-LineConfig-RoutePort-SlotNumber-ShelfNumber").setMaxAccess("readwrite")
if mibBuilder.loadTexts: sdslNetworkProfile_LineConfig_RoutePort_SlotNumber_ShelfNumber.setStatus('mandatory')
sdslNetworkProfile_LineConfig_RoutePort_RelativePortNumber_RelativePortNumber = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 8, 1, 1, 14), Integer32()).setLabel("sdslNetworkProfile-LineConfig-RoutePort-RelativePortNumber-RelativePortNumber").setMaxAccess("readwrite")
if mibBuilder.loadTexts: sdslNetworkProfile_LineConfig_RoutePort_RelativePortNumber_RelativePortNumber.setStatus('mandatory')
sdslNetworkProfile_LineConfig_Activation = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 8, 1, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("static", 1), ("dsrActive", 2), ("dcdDsrActive", 3)))).setLabel("sdslNetworkProfile-LineConfig-Activation").setMaxAccess("readwrite")
if mibBuilder.loadTexts: sdslNetworkProfile_LineConfig_Activation.setStatus('mandatory')
sdslNetworkProfile_LineConfig_DataSense = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 8, 1, 1, 26), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("normal", 1), ("inv", 2)))).setLabel("sdslNetworkProfile-LineConfig-DataSense").setMaxAccess("readwrite")
if mibBuilder.loadTexts: sdslNetworkProfile_LineConfig_DataSense.setStatus('mandatory')
sdslNetworkProfile_LineConfig_SdslDataFormat = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 8, 1, 1, 30), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("serial", 1)))).setLabel("sdslNetworkProfile-LineConfig-SdslDataFormat").setMaxAccess("readwrite")
if mibBuilder.loadTexts: sdslNetworkProfile_LineConfig_SdslDataFormat.setStatus('mandatory')
sdslNetworkProfile_LineConfig_DataRateMode = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 8, 1, 1, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(2, 3, 4))).clone(namedValues=NamedValues(("autobaud", 2), ("singlebaud", 3), ("fastautobaud", 4)))).setLabel("sdslNetworkProfile-LineConfig-DataRateMode").setMaxAccess("readwrite")
if mibBuilder.loadTexts: sdslNetworkProfile_LineConfig_DataRateMode.setStatus('mandatory')
sdslNetworkProfile_LineConfig_MaxRate = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 8, 1, 1, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21))).clone(namedValues=NamedValues(("n-144000", 1), ("n-272000", 2), ("n-400000", 3), ("n-528000", 4), ("n-784000", 5), ("n-1168000", 6), ("n-1552000", 7), ("n-2320000", 8), ("n-160000", 9), ("n-192000", 10), ("n-208000", 11), ("n-384000", 12), ("n-416000", 13), ("n-768000", 14), ("n-1040000", 15), ("n-1152000", 16), ("n-1536000", 17), ("n-1568000", 18), ("n-1680000", 19), ("n-1920000", 20), ("n-2160000", 21)))).setLabel("sdslNetworkProfile-LineConfig-MaxRate").setMaxAccess("readwrite")
if mibBuilder.loadTexts: sdslNetworkProfile_LineConfig_MaxRate.setStatus('mandatory')
sdslNetworkProfile_LineConfig_AutoBaseRate = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 8, 1, 1, 25), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21))).clone(namedValues=NamedValues(("n-144000", 1), ("n-272000", 2), ("n-400000", 3), ("n-528000", 4), ("n-784000", 5), ("n-1168000", 6), ("n-1552000", 7), ("n-2320000", 8), ("n-160000", 9), ("n-192000", 10), ("n-208000", 11), ("n-384000", 12), ("n-416000", 13), ("n-768000", 14), ("n-1040000", 15), ("n-1152000", 16), ("n-1536000", 17), ("n-1568000", 18), ("n-1680000", 19), ("n-1920000", 20), ("n-2160000", 21)))).setLabel("sdslNetworkProfile-LineConfig-AutoBaseRate").setMaxAccess("readwrite")
if mibBuilder.loadTexts: sdslNetworkProfile_LineConfig_AutoBaseRate.setStatus('mandatory')
sdslNetworkProfile_LineConfig_UnitType = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 8, 1, 1, 21), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("coe", 1), ("cpe", 2)))).setLabel("sdslNetworkProfile-LineConfig-UnitType").setMaxAccess("readwrite")
if mibBuilder.loadTexts: sdslNetworkProfile_LineConfig_UnitType.setStatus('mandatory')
sdslNetworkProfile_LineConfig_Enabled = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 8, 1, 1, 24), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("no", 1), ("yes", 2)))).setLabel("sdslNetworkProfile-LineConfig-Enabled").setMaxAccess("readwrite")
if mibBuilder.loadTexts: sdslNetworkProfile_LineConfig_Enabled.setStatus('mandatory')
sdslNetworkProfile_LineConfig_LineMode = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 8, 1, 1, 32), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("atm", 1), ("hdlc", 2)))).setLabel("sdslNetworkProfile-LineConfig-LineMode").setMaxAccess("readwrite")
if mibBuilder.loadTexts: sdslNetworkProfile_LineConfig_LineMode.setStatus('mandatory')
sdslNetworkProfile_LineConfig_LoopBack = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 8, 1, 1, 33), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("none", 1), ("analog", 2), ("digital", 3)))).setLabel("sdslNetworkProfile-LineConfig-LoopBack").setMaxAccess("readwrite")
if mibBuilder.loadTexts: sdslNetworkProfile_LineConfig_LoopBack.setStatus('mandatory')
sdslNetworkProfile_DhcpConfig_IpAddress = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 8, 1, 1, 28), IpAddress()).setLabel("sdslNetworkProfile-DhcpConfig-IpAddress").setMaxAccess("readwrite")
if mibBuilder.loadTexts: sdslNetworkProfile_DhcpConfig_IpAddress.setStatus('mandatory')
sdslNetworkProfile_DhcpConfig_MaxLease = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 8, 1, 1, 29), Integer32()).setLabel("sdslNetworkProfile-DhcpConfig-MaxLease").setMaxAccess("readwrite")
if mibBuilder.loadTexts: sdslNetworkProfile_DhcpConfig_MaxLease.setStatus('mandatory')
sdslNetworkProfile_Action_o = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 8, 1, 1, 22), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("noAction", 1), ("createProfile", 2), ("deleteProfile", 3)))).setLabel("sdslNetworkProfile-Action-o").setMaxAccess("readwrite")
if mibBuilder.loadTexts: sdslNetworkProfile_Action_o.setStatus('mandatory')
mibBuilder.exportSymbols("ASCEND-MIBSDSLNET-MIB", sdslNetworkProfile_Item_o=sdslNetworkProfile_Item_o, sdslNetworkProfile_PhysicalAddress_Shelf=sdslNetworkProfile_PhysicalAddress_Shelf, sdslNetworkProfile_Enabled=sdslNetworkProfile_Enabled, sdslNetworkProfile_LineConfig_TrunkGroup=sdslNetworkProfile_LineConfig_TrunkGroup, sdslNetworkProfile_LineConfig_Activation=sdslNetworkProfile_LineConfig_Activation, sdslNetworkProfile_DhcpConfig_IpAddress=sdslNetworkProfile_DhcpConfig_IpAddress, sdslNetworkProfile_IgnoreLineup=sdslNetworkProfile_IgnoreLineup, sdslNetworkProfile_Name=sdslNetworkProfile_Name, sdslNetworkProfile_Action_o=sdslNetworkProfile_Action_o, sdslNetworkProfile_LineConfig_DataSense=sdslNetworkProfile_LineConfig_DataSense, sdslNetworkProfile_LineConfig_VpSwitchingVpi=sdslNetworkProfile_LineConfig_VpSwitchingVpi, sdslNetworkProfile_Slot_o=sdslNetworkProfile_Slot_o, sdslNetworkProfile_LineConfig_LineMode=sdslNetworkProfile_LineConfig_LineMode, sdslNetworkProfile_LineConfig_RoutePort_SlotNumber_ShelfNumber=sdslNetworkProfile_LineConfig_RoutePort_SlotNumber_ShelfNumber, sdslNetworkProfile_LineConfig_RoutePort_RelativePortNumber_RelativePortNumber=sdslNetworkProfile_LineConfig_RoutePort_RelativePortNumber_RelativePortNumber, sdslNetworkProfile_LineConfig_Enabled=sdslNetworkProfile_LineConfig_Enabled, mibsdslNetworkProfileTable=mibsdslNetworkProfileTable, sdslNetworkProfile_PhysicalAddress_ItemNumber=sdslNetworkProfile_PhysicalAddress_ItemNumber, sdslNetworkProfile_LineConfig_MaxRate=sdslNetworkProfile_LineConfig_MaxRate, sdslNetworkProfile_LineConfig_NailedGroup=sdslNetworkProfile_LineConfig_NailedGroup, sdslNetworkProfile_SparingMode=sdslNetworkProfile_SparingMode, sdslNetworkProfile_ProfileNumber=sdslNetworkProfile_ProfileNumber, sdslNetworkProfile_LineConfig_UnitType=sdslNetworkProfile_LineConfig_UnitType, sdslNetworkProfile_LineConfig_RoutePort_SlotNumber_SlotNumber=sdslNetworkProfile_LineConfig_RoutePort_SlotNumber_SlotNumber, sdslNetworkProfile_DhcpConfig_MaxLease=sdslNetworkProfile_DhcpConfig_MaxLease, sdslNetworkProfile_LineConfig_SdslDataFormat=sdslNetworkProfile_LineConfig_SdslDataFormat, sdslNetworkProfile_PhysicalAddress_Slot=sdslNetworkProfile_PhysicalAddress_Slot, mibsdslNetworkProfileEntry=mibsdslNetworkProfileEntry, DisplayString=DisplayString, sdslNetworkProfile_LineConfig_LoopBack=sdslNetworkProfile_LineConfig_LoopBack, sdslNetworkProfile_LineConfig_DataRateMode=sdslNetworkProfile_LineConfig_DataRateMode, mibsdslNetworkProfile=mibsdslNetworkProfile, sdslNetworkProfile_LineConfig_AutoBaseRate=sdslNetworkProfile_LineConfig_AutoBaseRate, sdslNetworkProfile_Shelf_o=sdslNetworkProfile_Shelf_o)
