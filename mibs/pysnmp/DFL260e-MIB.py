#
# PySNMP MIB module DFL260e-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/DFL260e-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 18:26:52 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ConstraintsIntersection, ValueSizeConstraint, ConstraintsUnion, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ConstraintsIntersection", "ValueSizeConstraint", "ConstraintsUnion", "SingleValueConstraint")
ObjectGroup, NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "NotificationGroup", "ModuleCompliance")
MibIdentifier, ObjectIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, Integer32, Counter64, ModuleIdentity, Bits, enterprises, IpAddress, Unsigned32, Counter32, Gauge32, TimeTicks, iso, NotificationType = mibBuilder.importSymbols("SNMPv2-SMI", "MibIdentifier", "ObjectIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Integer32", "Counter64", "ModuleIdentity", "Bits", "enterprises", "IpAddress", "Unsigned32", "Counter32", "Gauge32", "TimeTicks", "iso", "NotificationType")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
dfl260e_MIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 171, 20, 2, 6, 2, 1, 2)).setLabel("dfl260e-MIB")
dfl260e_MIB.setRevisions(('2010-09-02 11:39', '2010-03-30 09:00', '2009-11-10 09:16', '2008-11-18 16:05', '2008-10-14 12:27', '2007-10-31 00:00',))
if mibBuilder.loadTexts: dfl260e_MIB.setLastUpdated('201009021139Z')
if mibBuilder.loadTexts: dfl260e_MIB.setOrganization('D-Link Corporation')
dlink = MibIdentifier((1, 3, 6, 1, 4, 1, 171))
netdefendMgmt = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 20))
utmFirewall = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 20, 2))
dfl260e = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 20, 2, 6))
dfl260eOS = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 20, 2, 6, 1))
dfl260eOSStats = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 20, 2, 6, 1, 2))
dfl260ereg = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 20, 2, 6, 2))
dfl260eMibModules = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 20, 2, 6, 2, 1))
dfl260eMibConfs = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 20, 2, 6, 2, 2))
dfl260eMibObjectGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 20, 2, 6, 2, 3))
dfl260eSystem = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 20, 2, 6, 1, 2, 1))
dfl260eSysCpuLoad = MibScalar((1, 3, 6, 1, 4, 1, 171, 20, 2, 6, 1, 2, 1, 1), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl260eSysCpuLoad.setStatus('current')
dfl260eSysForwardedBits = MibScalar((1, 3, 6, 1, 4, 1, 171, 20, 2, 6, 1, 2, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl260eSysForwardedBits.setStatus('current')
dfl260eSysForwardedPackets = MibScalar((1, 3, 6, 1, 4, 1, 171, 20, 2, 6, 1, 2, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl260eSysForwardedPackets.setStatus('current')
dfl260eSysBuffUse = MibScalar((1, 3, 6, 1, 4, 1, 171, 20, 2, 6, 1, 2, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl260eSysBuffUse.setStatus('current')
dfl260eSysConns = MibScalar((1, 3, 6, 1, 4, 1, 171, 20, 2, 6, 1, 2, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl260eSysConns.setStatus('current')
dfl260eSysPerStateCounters = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 20, 2, 6, 1, 2, 1, 6))
dfl260eSysPscTcpSyn = MibScalar((1, 3, 6, 1, 4, 1, 171, 20, 2, 6, 1, 2, 1, 6, 1), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl260eSysPscTcpSyn.setStatus('current')
dfl260eSysPscTcpOpen = MibScalar((1, 3, 6, 1, 4, 1, 171, 20, 2, 6, 1, 2, 1, 6, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl260eSysPscTcpOpen.setStatus('current')
dfl260eSysPscTcpFin = MibScalar((1, 3, 6, 1, 4, 1, 171, 20, 2, 6, 1, 2, 1, 6, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl260eSysPscTcpFin.setStatus('current')
dfl260eSysPscUdp = MibScalar((1, 3, 6, 1, 4, 1, 171, 20, 2, 6, 1, 2, 1, 6, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl260eSysPscUdp.setStatus('current')
dfl260eSysPscIcmp = MibScalar((1, 3, 6, 1, 4, 1, 171, 20, 2, 6, 1, 2, 1, 6, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl260eSysPscIcmp.setStatus('current')
dfl260eSysPscOther = MibScalar((1, 3, 6, 1, 4, 1, 171, 20, 2, 6, 1, 2, 1, 6, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl260eSysPscOther.setStatus('current')
dfl260eIfStatsTable = MibTable((1, 3, 6, 1, 4, 1, 171, 20, 2, 6, 1, 2, 1, 7), )
if mibBuilder.loadTexts: dfl260eIfStatsTable.setStatus('current')
dfl260eIfStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 171, 20, 2, 6, 1, 2, 1, 7, 1), ).setIndexNames((0, "DFL260e-MIB", "dfl260eIfStatsIndex"))
if mibBuilder.loadTexts: dfl260eIfStatsEntry.setStatus('current')
dfl260eIfStatsIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 6, 1, 2, 1, 7, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: dfl260eIfStatsIndex.setStatus('current')
dfl260eIfName = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 6, 1, 2, 1, 7, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl260eIfName.setStatus('current')
dfl260eIfFragsIn = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 6, 1, 2, 1, 7, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl260eIfFragsIn.setStatus('current')
dfl260eIfFragReassOk = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 6, 1, 2, 1, 7, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl260eIfFragReassOk.setStatus('current')
dfl260eIfFragReassFail = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 6, 1, 2, 1, 7, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl260eIfFragReassFail.setStatus('current')
dfl260eIfPktsInCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 6, 1, 2, 1, 7, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl260eIfPktsInCnt.setStatus('current')
dfl260eIfPktsOutCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 6, 1, 2, 1, 7, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl260eIfPktsOutCnt.setStatus('current')
dfl260eIfBitsInCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 6, 1, 2, 1, 7, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl260eIfBitsInCnt.setStatus('current')
dfl260eIfBitsOutCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 6, 1, 2, 1, 7, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl260eIfBitsOutCnt.setStatus('current')
dfl260eIfPktsTotCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 6, 1, 2, 1, 7, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl260eIfPktsTotCnt.setStatus('current')
dfl260eIfBitsTotCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 6, 1, 2, 1, 7, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl260eIfBitsTotCnt.setStatus('current')
dfl260eIfHCPktsInCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 6, 1, 2, 1, 7, 1, 12), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl260eIfHCPktsInCnt.setStatus('current')
dfl260eIfHCPktsOutCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 6, 1, 2, 1, 7, 1, 13), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl260eIfHCPktsOutCnt.setStatus('current')
dfl260eIfHCBitsInCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 6, 1, 2, 1, 7, 1, 14), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl260eIfHCBitsInCnt.setStatus('current')
dfl260eIfHCBitsOutCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 6, 1, 2, 1, 7, 1, 15), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl260eIfHCBitsOutCnt.setStatus('current')
dfl260eIfHCPktsTotCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 6, 1, 2, 1, 7, 1, 16), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl260eIfHCPktsTotCnt.setStatus('current')
dfl260eIfHCBitsTotCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 6, 1, 2, 1, 7, 1, 17), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl260eIfHCBitsTotCnt.setStatus('current')
dfl260eIfRxRingTable = MibTable((1, 3, 6, 1, 4, 1, 171, 20, 2, 6, 1, 2, 1, 8), )
if mibBuilder.loadTexts: dfl260eIfRxRingTable.setStatus('current')
dfl260eIfRxRingEntry = MibTableRow((1, 3, 6, 1, 4, 1, 171, 20, 2, 6, 1, 2, 1, 8, 1), ).setIndexNames((0, "DFL260e-MIB", "dfl260eIfRxRingIndex"))
if mibBuilder.loadTexts: dfl260eIfRxRingEntry.setStatus('current')
dfl260eIfRxRingIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 6, 1, 2, 1, 8, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: dfl260eIfRxRingIndex.setStatus('current')
dfl260eIfRxRingFifoErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 6, 1, 2, 1, 8, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl260eIfRxRingFifoErrors.setStatus('current')
dfl260eIfRxDespools = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 6, 1, 2, 1, 8, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl260eIfRxDespools.setStatus('current')
dfl260eIfRxAvgUse = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 6, 1, 2, 1, 8, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl260eIfRxAvgUse.setStatus('current')
dfl260eIfRxRingSaturation = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 6, 1, 2, 1, 8, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl260eIfRxRingSaturation.setStatus('current')
dfl260eRxRingFlooded = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 6, 1, 2, 1, 8, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl260eRxRingFlooded.setStatus('current')
dfl260eIfTxRingTable = MibTable((1, 3, 6, 1, 4, 1, 171, 20, 2, 6, 1, 2, 1, 9), )
if mibBuilder.loadTexts: dfl260eIfTxRingTable.setStatus('current')
dfl260eIfTxRingEntry = MibTableRow((1, 3, 6, 1, 4, 1, 171, 20, 2, 6, 1, 2, 1, 9, 1), ).setIndexNames((0, "DFL260e-MIB", "dfl260eIfTxRingIndex"))
if mibBuilder.loadTexts: dfl260eIfTxRingEntry.setStatus('current')
dfl260eIfTxRingIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 6, 1, 2, 1, 9, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: dfl260eIfTxRingIndex.setStatus('current')
dfl260eIfTxDespools = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 6, 1, 2, 1, 9, 1, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl260eIfTxDespools.setStatus('current')
dfl260eIfTxAvgUse = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 6, 1, 2, 1, 9, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl260eIfTxAvgUse.setStatus('current')
dfl260eIfTxRingSaturation = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 6, 1, 2, 1, 9, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl260eIfTxRingSaturation.setStatus('current')
dfl260eRxTingFlooded = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 6, 1, 2, 1, 9, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl260eRxTingFlooded.setStatus('current')
dfl260eIfVlanStatsTable = MibTable((1, 3, 6, 1, 4, 1, 171, 20, 2, 6, 1, 2, 1, 10), )
if mibBuilder.loadTexts: dfl260eIfVlanStatsTable.setStatus('current')
dfl260eIfVlanStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 171, 20, 2, 6, 1, 2, 1, 10, 1), ).setIndexNames((0, "DFL260e-MIB", "dfl260eIfVlanIndex"))
if mibBuilder.loadTexts: dfl260eIfVlanStatsEntry.setStatus('current')
dfl260eIfVlanIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 6, 1, 2, 1, 10, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: dfl260eIfVlanIndex.setStatus('current')
dfl260eIfVlanUntaggedInPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 6, 1, 2, 1, 10, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl260eIfVlanUntaggedInPkts.setStatus('current')
dfl260eIfVlanUntaggedOutPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 6, 1, 2, 1, 10, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl260eIfVlanUntaggedOutPkts.setStatus('current')
dfl260eIfVlanUntaggedTotPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 6, 1, 2, 1, 10, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl260eIfVlanUntaggedTotPkts.setStatus('current')
dfl260eIfVlanUntaggedInOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 6, 1, 2, 1, 10, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl260eIfVlanUntaggedInOctets.setStatus('current')
dfl260eIfVlanUntaggedOutOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 6, 1, 2, 1, 10, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl260eIfVlanUntaggedOutOctets.setStatus('current')
dfl260eIfVlanUntaggedTotOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 6, 1, 2, 1, 10, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl260eIfVlanUntaggedTotOctets.setStatus('current')
dfl260eHWSensorTable = MibTable((1, 3, 6, 1, 4, 1, 171, 20, 2, 6, 1, 2, 1, 11), )
if mibBuilder.loadTexts: dfl260eHWSensorTable.setStatus('current')
dfl260eHWSensorEntry = MibTableRow((1, 3, 6, 1, 4, 1, 171, 20, 2, 6, 1, 2, 1, 11, 1), ).setIndexNames((0, "DFL260e-MIB", "dfl260eHWSensorIndex"))
if mibBuilder.loadTexts: dfl260eHWSensorEntry.setStatus('current')
dfl260eHWSensorIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 6, 1, 2, 1, 11, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: dfl260eHWSensorIndex.setStatus('current')
dfl260eHWSensorName = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 6, 1, 2, 1, 11, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl260eHWSensorName.setStatus('current')
dfl260eHWSensorValue = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 6, 1, 2, 1, 11, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl260eHWSensorValue.setStatus('current')
dfl260eHWSensorUnit = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 6, 1, 2, 1, 11, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl260eHWSensorUnit.setStatus('current')
dfl260eSysMemUsage = MibScalar((1, 3, 6, 1, 4, 1, 171, 20, 2, 6, 1, 2, 1, 12), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl260eSysMemUsage.setStatus('current')
dfl260eSysTCPUsage = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 20, 2, 6, 1, 2, 1, 13))
dfl260eSysTCPRecvSmall = MibScalar((1, 3, 6, 1, 4, 1, 171, 20, 2, 6, 1, 2, 1, 13, 1), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl260eSysTCPRecvSmall.setStatus('current')
dfl260eSysTCPRecvLarge = MibScalar((1, 3, 6, 1, 4, 1, 171, 20, 2, 6, 1, 2, 1, 13, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl260eSysTCPRecvLarge.setStatus('current')
dfl260eSysTCPSendSmall = MibScalar((1, 3, 6, 1, 4, 1, 171, 20, 2, 6, 1, 2, 1, 13, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl260eSysTCPSendSmall.setStatus('current')
dfl260eSysTCPSendLarge = MibScalar((1, 3, 6, 1, 4, 1, 171, 20, 2, 6, 1, 2, 1, 13, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl260eSysTCPSendLarge.setStatus('current')
dfl260eSysTimerUsage = MibScalar((1, 3, 6, 1, 4, 1, 171, 20, 2, 6, 1, 2, 1, 14), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl260eSysTimerUsage.setStatus('current')
dfl260eSysConnOPS = MibScalar((1, 3, 6, 1, 4, 1, 171, 20, 2, 6, 1, 2, 1, 15), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl260eSysConnOPS.setStatus('current')
dfl260eSysConnCPS = MibScalar((1, 3, 6, 1, 4, 1, 171, 20, 2, 6, 1, 2, 1, 16), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl260eSysConnCPS.setStatus('current')
dfl260eSysHCForwardedBits = MibScalar((1, 3, 6, 1, 4, 1, 171, 20, 2, 6, 1, 2, 1, 17), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl260eSysHCForwardedBits.setStatus('current')
dfl260eVPN = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 20, 2, 6, 1, 2, 2))
dfl260eIPsec = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 20, 2, 6, 1, 2, 2, 1))
dfl260eIPsecGlobal = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 20, 2, 6, 1, 2, 2, 1, 1))
dfl260eIPsecPhaseOneActive = MibScalar((1, 3, 6, 1, 4, 1, 171, 20, 2, 6, 1, 2, 2, 1, 1, 1), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl260eIPsecPhaseOneActive.setStatus('current')
dfl260eIPsecPhaseOneAggrModeDone = MibScalar((1, 3, 6, 1, 4, 1, 171, 20, 2, 6, 1, 2, 2, 1, 1, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl260eIPsecPhaseOneAggrModeDone.setStatus('current')
dfl260eIPsecQuickModeActive = MibScalar((1, 3, 6, 1, 4, 1, 171, 20, 2, 6, 1, 2, 2, 1, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl260eIPsecQuickModeActive.setStatus('current')
dfl260eIPsecPhaseOneDone = MibScalar((1, 3, 6, 1, 4, 1, 171, 20, 2, 6, 1, 2, 2, 1, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl260eIPsecPhaseOneDone.setStatus('current')
dfl260eIPsecPhaseOneFailed = MibScalar((1, 3, 6, 1, 4, 1, 171, 20, 2, 6, 1, 2, 2, 1, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl260eIPsecPhaseOneFailed.setStatus('current')
dfl260eIPsecPhaseOneRekeyed = MibScalar((1, 3, 6, 1, 4, 1, 171, 20, 2, 6, 1, 2, 2, 1, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl260eIPsecPhaseOneRekeyed.setStatus('current')
dfl260eIPsecQuickModeDone = MibScalar((1, 3, 6, 1, 4, 1, 171, 20, 2, 6, 1, 2, 2, 1, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl260eIPsecQuickModeDone.setStatus('current')
dfl260eIPsecQuickModeFailed = MibScalar((1, 3, 6, 1, 4, 1, 171, 20, 2, 6, 1, 2, 2, 1, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl260eIPsecQuickModeFailed.setStatus('current')
dfl260eIPsecInfoDone = MibScalar((1, 3, 6, 1, 4, 1, 171, 20, 2, 6, 1, 2, 2, 1, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl260eIPsecInfoDone.setStatus('current')
dfl260eIPsecInfoFailed = MibScalar((1, 3, 6, 1, 4, 1, 171, 20, 2, 6, 1, 2, 2, 1, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl260eIPsecInfoFailed.setStatus('current')
dfl260eIPsecInOctetsComp = MibScalar((1, 3, 6, 1, 4, 1, 171, 20, 2, 6, 1, 2, 2, 1, 1, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl260eIPsecInOctetsComp.setStatus('current')
dfl260eIPsecInOctetsUncomp = MibScalar((1, 3, 6, 1, 4, 1, 171, 20, 2, 6, 1, 2, 2, 1, 1, 12), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl260eIPsecInOctetsUncomp.setStatus('current')
dfl260eIPsecOutOctetsComp = MibScalar((1, 3, 6, 1, 4, 1, 171, 20, 2, 6, 1, 2, 2, 1, 1, 13), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl260eIPsecOutOctetsComp.setStatus('current')
dfl260eIPsecOutOctetsUncomp = MibScalar((1, 3, 6, 1, 4, 1, 171, 20, 2, 6, 1, 2, 2, 1, 1, 14), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl260eIPsecOutOctetsUncomp.setStatus('current')
dfl260eIPsecForwardedOctetsComp = MibScalar((1, 3, 6, 1, 4, 1, 171, 20, 2, 6, 1, 2, 2, 1, 1, 15), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl260eIPsecForwardedOctetsComp.setStatus('current')
dfl260eIPsecForwardedOctetsUcomp = MibScalar((1, 3, 6, 1, 4, 1, 171, 20, 2, 6, 1, 2, 2, 1, 1, 16), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl260eIPsecForwardedOctetsUcomp.setStatus('current')
dfl260eIPsecInPackets = MibScalar((1, 3, 6, 1, 4, 1, 171, 20, 2, 6, 1, 2, 2, 1, 1, 17), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl260eIPsecInPackets.setStatus('current')
dfl260eIPsecOutPackets = MibScalar((1, 3, 6, 1, 4, 1, 171, 20, 2, 6, 1, 2, 2, 1, 1, 18), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl260eIPsecOutPackets.setStatus('current')
dfl260eIPsecForwardedPackets = MibScalar((1, 3, 6, 1, 4, 1, 171, 20, 2, 6, 1, 2, 2, 1, 1, 19), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl260eIPsecForwardedPackets.setStatus('current')
dfl260eIPsecActiveTransforms = MibScalar((1, 3, 6, 1, 4, 1, 171, 20, 2, 6, 1, 2, 2, 1, 1, 20), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl260eIPsecActiveTransforms.setStatus('current')
dfl260eIPsecTotalTransforms = MibScalar((1, 3, 6, 1, 4, 1, 171, 20, 2, 6, 1, 2, 2, 1, 1, 21), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl260eIPsecTotalTransforms.setStatus('current')
dfl260eIPsecOutOfTransforms = MibScalar((1, 3, 6, 1, 4, 1, 171, 20, 2, 6, 1, 2, 2, 1, 1, 22), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl260eIPsecOutOfTransforms.setStatus('current')
dfl260eIPsecTotalRekeys = MibScalar((1, 3, 6, 1, 4, 1, 171, 20, 2, 6, 1, 2, 2, 1, 1, 23), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl260eIPsecTotalRekeys.setStatus('current')
dfl260eRules = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 20, 2, 6, 1, 2, 3))
dfl260eRuleUseTable = MibTable((1, 3, 6, 1, 4, 1, 171, 20, 2, 6, 1, 2, 3, 2), )
if mibBuilder.loadTexts: dfl260eRuleUseTable.setStatus('current')
dfl260eRuleUseEntry = MibTableRow((1, 3, 6, 1, 4, 1, 171, 20, 2, 6, 1, 2, 3, 2, 1), ).setIndexNames((0, "DFL260e-MIB", "dfl260eRuleIndex"))
if mibBuilder.loadTexts: dfl260eRuleUseEntry.setStatus('current')
dfl260eRuleIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 6, 1, 2, 3, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: dfl260eRuleIndex.setStatus('current')
dfl260eRuleName = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 6, 1, 2, 3, 2, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl260eRuleName.setStatus('current')
dfl260eRuleUse = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 6, 1, 2, 3, 2, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl260eRuleUse.setStatus('current')
dfl260eIPPools = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 20, 2, 6, 1, 2, 4))
dfl260eIPPoolsNumber = MibScalar((1, 3, 6, 1, 4, 1, 171, 20, 2, 6, 1, 2, 4, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl260eIPPoolsNumber.setStatus('current')
dfl260eIPPoolTable = MibTable((1, 3, 6, 1, 4, 1, 171, 20, 2, 6, 1, 2, 4, 2), )
if mibBuilder.loadTexts: dfl260eIPPoolTable.setStatus('current')
dfl260eIPPoolEntry = MibTableRow((1, 3, 6, 1, 4, 1, 171, 20, 2, 6, 1, 2, 4, 2, 1), ).setIndexNames((0, "DFL260e-MIB", "dfl260eIPPoolIndex"))
if mibBuilder.loadTexts: dfl260eIPPoolEntry.setStatus('current')
dfl260eIPPoolIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 6, 1, 2, 4, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: dfl260eIPPoolIndex.setStatus('current')
dfl260eIPPoolName = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 6, 1, 2, 4, 2, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl260eIPPoolName.setStatus('current')
dfl260eIPPoolPrepare = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 6, 1, 2, 4, 2, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl260eIPPoolPrepare.setStatus('current')
dfl260eIPPoolFree = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 6, 1, 2, 4, 2, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl260eIPPoolFree.setStatus('current')
dfl260eIPPoolMisses = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 6, 1, 2, 4, 2, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl260eIPPoolMisses.setStatus('current')
dfl260eIPPoolClientFails = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 6, 1, 2, 4, 2, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl260eIPPoolClientFails.setStatus('current')
dfl260eIPPoolUsed = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 6, 1, 2, 4, 2, 1, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl260eIPPoolUsed.setStatus('current')
dfl260eDHCPServer = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 20, 2, 6, 1, 2, 5))
dfl260eDHCPTotalRejected = MibScalar((1, 3, 6, 1, 4, 1, 171, 20, 2, 6, 1, 2, 5, 1), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl260eDHCPTotalRejected.setStatus('current')
dfl260eDHCPRuleTable = MibTable((1, 3, 6, 1, 4, 1, 171, 20, 2, 6, 1, 2, 5, 2), )
if mibBuilder.loadTexts: dfl260eDHCPRuleTable.setStatus('current')
dfl260eDHCPRuleEntry = MibTableRow((1, 3, 6, 1, 4, 1, 171, 20, 2, 6, 1, 2, 5, 2, 1), ).setIndexNames((0, "DFL260e-MIB", "dfl260eDHCPRuleIndex"))
if mibBuilder.loadTexts: dfl260eDHCPRuleEntry.setStatus('current')
dfl260eDHCPRuleIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 6, 1, 2, 5, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: dfl260eDHCPRuleIndex.setStatus('current')
dfl260eDHCPRuleName = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 6, 1, 2, 5, 2, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl260eDHCPRuleName.setStatus('current')
dfl260eDHCPRuleUsage = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 6, 1, 2, 5, 2, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl260eDHCPRuleUsage.setStatus('current')
dfl260eDHCPRuleUsagePercent = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 6, 1, 2, 5, 2, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl260eDHCPRuleUsagePercent.setStatus('current')
dfl260eDHCPActiveClients = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 6, 1, 2, 5, 2, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl260eDHCPActiveClients.setStatus('current')
dfl260eDHCPActiveClientsPercent = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 6, 1, 2, 5, 2, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl260eDHCPActiveClientsPercent.setStatus('current')
dfl260eDHCPRejectedRequests = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 6, 1, 2, 5, 2, 1, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl260eDHCPRejectedRequests.setStatus('current')
dfl260eDHCPTotalLeases = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 6, 1, 2, 5, 2, 1, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl260eDHCPTotalLeases.setStatus('current')
dfl260eUserAuth = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 20, 2, 6, 1, 2, 6))
dfl260eUserAuthHTTPUsers = MibScalar((1, 3, 6, 1, 4, 1, 171, 20, 2, 6, 1, 2, 6, 1), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl260eUserAuthHTTPUsers.setStatus('current')
dfl260eUserAuthXAUTHUsers = MibScalar((1, 3, 6, 1, 4, 1, 171, 20, 2, 6, 1, 2, 6, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl260eUserAuthXAUTHUsers.setStatus('current')
dfl260eUserAuthHTTPSUsers = MibScalar((1, 3, 6, 1, 4, 1, 171, 20, 2, 6, 1, 2, 6, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl260eUserAuthHTTPSUsers.setStatus('current')
dfl260eUserAuthPPPUsers = MibScalar((1, 3, 6, 1, 4, 1, 171, 20, 2, 6, 1, 2, 6, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl260eUserAuthPPPUsers.setStatus('current')
dfl260eUserAuthEAPUsers = MibScalar((1, 3, 6, 1, 4, 1, 171, 20, 2, 6, 1, 2, 6, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl260eUserAuthEAPUsers.setStatus('current')
dfl260eUserAuthRuleUseTable = MibTable((1, 3, 6, 1, 4, 1, 171, 20, 2, 6, 1, 2, 6, 6), )
if mibBuilder.loadTexts: dfl260eUserAuthRuleUseTable.setStatus('current')
dfl260eUserAuthRuleUseEntry = MibTableRow((1, 3, 6, 1, 4, 1, 171, 20, 2, 6, 1, 2, 6, 6, 1), ).setIndexNames((0, "DFL260e-MIB", "dfl260eUserAuthRuleIndex"))
if mibBuilder.loadTexts: dfl260eUserAuthRuleUseEntry.setStatus('current')
dfl260eUserAuthRuleIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 6, 1, 2, 6, 6, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: dfl260eUserAuthRuleIndex.setStatus('current')
dfl260eUserAuthRuleName = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 6, 1, 2, 6, 6, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl260eUserAuthRuleName.setStatus('current')
dfl260eUserAuthRuleUse = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 6, 1, 2, 6, 6, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl260eUserAuthRuleUse.setStatus('current')
dfl260eLinkMonitor = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 20, 2, 6, 1, 2, 7))
dfl260eLinkMonGrp = MibScalar((1, 3, 6, 1, 4, 1, 171, 20, 2, 6, 1, 2, 7, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl260eLinkMonGrp.setStatus('current')
dfl260eLinkMonGrpTable = MibTable((1, 3, 6, 1, 4, 1, 171, 20, 2, 6, 1, 2, 7, 2), )
if mibBuilder.loadTexts: dfl260eLinkMonGrpTable.setStatus('current')
dfl260eLinkMonGrpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 171, 20, 2, 6, 1, 2, 7, 2, 1), ).setIndexNames((0, "DFL260e-MIB", "dfl260eLinkMonGrpIndex"))
if mibBuilder.loadTexts: dfl260eLinkMonGrpEntry.setStatus('current')
dfl260eLinkMonGrpIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 6, 1, 2, 7, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: dfl260eLinkMonGrpIndex.setStatus('current')
dfl260eLinkMonGrpName = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 6, 1, 2, 7, 2, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl260eLinkMonGrpName.setStatus('current')
dfl260eLinkMonGrpHostsUp = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 6, 1, 2, 7, 2, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl260eLinkMonGrpHostsUp.setStatus('current')
dfl260eLinkMonHostTable = MibTable((1, 3, 6, 1, 4, 1, 171, 20, 2, 6, 1, 2, 7, 3), )
if mibBuilder.loadTexts: dfl260eLinkMonHostTable.setStatus('current')
dfl260eLinkMonHostEntry = MibTableRow((1, 3, 6, 1, 4, 1, 171, 20, 2, 6, 1, 2, 7, 3, 1), ).setIndexNames((0, "DFL260e-MIB", "dfl260eLinkMonGrpIndex"), (0, "DFL260e-MIB", "dfl260eLinkMonHostIndex"))
if mibBuilder.loadTexts: dfl260eLinkMonHostEntry.setStatus('current')
dfl260eLinkMonHostIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 6, 1, 2, 7, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: dfl260eLinkMonHostIndex.setStatus('current')
dfl260eLinkMonHostId = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 6, 1, 2, 7, 3, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl260eLinkMonHostId.setStatus('current')
dfl260eLinkMonHostShortTermLoss = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 6, 1, 2, 7, 3, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl260eLinkMonHostShortTermLoss.setStatus('current')
dfl260eLinkMonHostPacketsLost = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 6, 1, 2, 7, 3, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl260eLinkMonHostPacketsLost.setStatus('current')
dfl260ePipes = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 20, 2, 6, 1, 2, 8))
dfl260ePipeUsers = MibScalar((1, 3, 6, 1, 4, 1, 171, 20, 2, 6, 1, 2, 8, 1), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl260ePipeUsers.setStatus('current')
dfl260ePipeTable = MibTable((1, 3, 6, 1, 4, 1, 171, 20, 2, 6, 1, 2, 8, 2), )
if mibBuilder.loadTexts: dfl260ePipeTable.setStatus('current')
dfl260ePipeEntry = MibTableRow((1, 3, 6, 1, 4, 1, 171, 20, 2, 6, 1, 2, 8, 2, 1), ).setIndexNames((0, "DFL260e-MIB", "dfl260ePipeIndex"))
if mibBuilder.loadTexts: dfl260ePipeEntry.setStatus('current')
dfl260ePipeIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 6, 1, 2, 8, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: dfl260ePipeIndex.setStatus('current')
dfl260ePipeName = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 6, 1, 2, 8, 2, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl260ePipeName.setStatus('current')
dfl260ePipeMinPrec = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 6, 1, 2, 8, 2, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl260ePipeMinPrec.setStatus('current')
dfl260ePipeMaxPrec = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 6, 1, 2, 8, 2, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl260ePipeMaxPrec.setStatus('current')
dfl260ePipeDefPrec = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 6, 1, 2, 8, 2, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl260ePipeDefPrec.setStatus('current')
dfl260ePipeNumPrec = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 6, 1, 2, 8, 2, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl260ePipeNumPrec.setStatus('current')
dfl260ePipeNumUsers = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 6, 1, 2, 8, 2, 1, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl260ePipeNumUsers.setStatus('current')
dfl260ePipeCurrentBps = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 6, 1, 2, 8, 2, 1, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl260ePipeCurrentBps.setStatus('current')
dfl260ePipeCurrentPps = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 6, 1, 2, 8, 2, 1, 9), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl260ePipeCurrentPps.setStatus('current')
dfl260ePipeDelayedPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 6, 1, 2, 8, 2, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl260ePipeDelayedPackets.setStatus('current')
dfl260ePipeDropedPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 6, 1, 2, 8, 2, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl260ePipeDropedPackets.setStatus('current')
dfl260ePipePrecTable = MibTable((1, 3, 6, 1, 4, 1, 171, 20, 2, 6, 1, 2, 8, 3), )
if mibBuilder.loadTexts: dfl260ePipePrecTable.setStatus('current')
dfl260ePipePrecEntry = MibTableRow((1, 3, 6, 1, 4, 1, 171, 20, 2, 6, 1, 2, 8, 3, 1), ).setIndexNames((0, "DFL260e-MIB", "dfl260ePipeIndex"), (0, "DFL260e-MIB", "dfl260ePipePrecIndex"))
if mibBuilder.loadTexts: dfl260ePipePrecEntry.setStatus('current')
dfl260ePipePrecIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 6, 1, 2, 8, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: dfl260ePipePrecIndex.setStatus('current')
dfl260ePipePrec = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 6, 1, 2, 8, 3, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl260ePipePrec.setStatus('current')
dfl260ePipePrecBps = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 6, 1, 2, 8, 3, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl260ePipePrecBps.setStatus('current')
dfl260ePipePrecTotalPps = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 6, 1, 2, 8, 3, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl260ePipePrecTotalPps.setStatus('current')
dfl260ePipePrecReservedBps = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 6, 1, 2, 8, 3, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl260ePipePrecReservedBps.setStatus('current')
dfl260ePipePrecDynLimBps = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 6, 1, 2, 8, 3, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl260ePipePrecDynLimBps.setStatus('current')
dfl260ePipePrecDynUsrLimBps = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 6, 1, 2, 8, 3, 1, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl260ePipePrecDynUsrLimBps.setStatus('current')
dfl260ePipePrecDelayedPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 6, 1, 2, 8, 3, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl260ePipePrecDelayedPackets.setStatus('current')
dfl260ePipePrecDropedPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 6, 1, 2, 8, 3, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl260ePipePrecDropedPackets.setStatus('current')
dfl260eALG = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 20, 2, 6, 1, 2, 9))
dfl260eAlgSessions = MibScalar((1, 3, 6, 1, 4, 1, 171, 20, 2, 6, 1, 2, 9, 1), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl260eAlgSessions.setStatus('current')
dfl260eAlgConnections = MibScalar((1, 3, 6, 1, 4, 1, 171, 20, 2, 6, 1, 2, 9, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl260eAlgConnections.setStatus('current')
dfl260eAlgTCPStreams = MibScalar((1, 3, 6, 1, 4, 1, 171, 20, 2, 6, 1, 2, 9, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl260eAlgTCPStreams.setStatus('current')
dfl260eHttpAlg = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 20, 2, 6, 1, 2, 9, 4))
dfl260eHttpAlgTable = MibTable((1, 3, 6, 1, 4, 1, 171, 20, 2, 6, 1, 2, 9, 4, 1), )
if mibBuilder.loadTexts: dfl260eHttpAlgTable.setStatus('current')
dfl260eHttpAlgEntry = MibTableRow((1, 3, 6, 1, 4, 1, 171, 20, 2, 6, 1, 2, 9, 4, 1, 1), ).setIndexNames((0, "DFL260e-MIB", "dfl260eHttpAlgIndex"))
if mibBuilder.loadTexts: dfl260eHttpAlgEntry.setStatus('current')
dfl260eHttpAlgIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 6, 1, 2, 9, 4, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: dfl260eHttpAlgIndex.setStatus('current')
dfl260eHttpAlgName = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 6, 1, 2, 9, 4, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl260eHttpAlgName.setStatus('current')
dfl260eHttpAlgTotalRequested = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 6, 1, 2, 9, 4, 1, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl260eHttpAlgTotalRequested.setStatus('current')
dfl260eHttpAlgTotalAllowed = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 6, 1, 2, 9, 4, 1, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl260eHttpAlgTotalAllowed.setStatus('current')
dfl260eHttpAlgTotalBlocked = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 6, 1, 2, 9, 4, 1, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl260eHttpAlgTotalBlocked.setStatus('current')
dfl260eHttpAlgCntFltTable = MibTable((1, 3, 6, 1, 4, 1, 171, 20, 2, 6, 1, 2, 9, 4, 2), )
if mibBuilder.loadTexts: dfl260eHttpAlgCntFltTable.setStatus('current')
dfl260eHttpAlgCntFltEntry = MibTableRow((1, 3, 6, 1, 4, 1, 171, 20, 2, 6, 1, 2, 9, 4, 2, 1), ).setIndexNames((0, "DFL260e-MIB", "dfl260eHttpAlgIndex"), (0, "DFL260e-MIB", "dfl260eHttpAlgCntFltIndex"))
if mibBuilder.loadTexts: dfl260eHttpAlgCntFltEntry.setStatus('current')
dfl260eHttpAlgCntFltIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 6, 1, 2, 9, 4, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: dfl260eHttpAlgCntFltIndex.setStatus('current')
dfl260eHttpAlgCntFltName = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 6, 1, 2, 9, 4, 2, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl260eHttpAlgCntFltName.setStatus('current')
dfl260eHttpAlgCntFltRequests = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 6, 1, 2, 9, 4, 2, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl260eHttpAlgCntFltRequests.setStatus('current')
dfl260eHttpAlgCntFltAllowed = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 6, 1, 2, 9, 4, 2, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl260eHttpAlgCntFltAllowed.setStatus('current')
dfl260eHttpAlgCntFltBlocked = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 6, 1, 2, 9, 4, 2, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl260eHttpAlgCntFltBlocked.setStatus('current')
dfl260eSmtpAlg = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 20, 2, 6, 1, 2, 9, 5))
dfl260eSmtpAlgTable = MibTable((1, 3, 6, 1, 4, 1, 171, 20, 2, 6, 1, 2, 9, 5, 1), )
if mibBuilder.loadTexts: dfl260eSmtpAlgTable.setStatus('current')
dfl260eSmtpAlgEntry = MibTableRow((1, 3, 6, 1, 4, 1, 171, 20, 2, 6, 1, 2, 9, 5, 1, 1), ).setIndexNames((0, "DFL260e-MIB", "dfl260eSmtpAlgIndex"))
if mibBuilder.loadTexts: dfl260eSmtpAlgEntry.setStatus('current')
dfl260eSmtpAlgIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 6, 1, 2, 9, 5, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: dfl260eSmtpAlgIndex.setStatus('current')
dfl260eSmtpAlgName = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 6, 1, 2, 9, 5, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl260eSmtpAlgName.setStatus('current')
dfl260eSmtpAlgTotCheckedSes = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 6, 1, 2, 9, 5, 1, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl260eSmtpAlgTotCheckedSes.setStatus('current')
dfl260eSmtpAlgTotSpamSes = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 6, 1, 2, 9, 5, 1, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl260eSmtpAlgTotSpamSes.setStatus('current')
dfl260eSmtpAlgTotDroppedSes = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 6, 1, 2, 9, 5, 1, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl260eSmtpAlgTotDroppedSes.setStatus('current')
dfl260eSmtpAlgDnsBlTable = MibTable((1, 3, 6, 1, 4, 1, 171, 20, 2, 6, 1, 2, 9, 5, 2), )
if mibBuilder.loadTexts: dfl260eSmtpAlgDnsBlTable.setStatus('current')
dfl260eSmtpAlgDnsBlEntry = MibTableRow((1, 3, 6, 1, 4, 1, 171, 20, 2, 6, 1, 2, 9, 5, 2, 1), ).setIndexNames((0, "DFL260e-MIB", "dfl260eSmtpAlgIndex"), (0, "DFL260e-MIB", "dfl260eSmtpAlgDnsBlIndex"))
if mibBuilder.loadTexts: dfl260eSmtpAlgDnsBlEntry.setStatus('current')
dfl260eSmtpAlgDnsBlIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 6, 1, 2, 9, 5, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: dfl260eSmtpAlgDnsBlIndex.setStatus('current')
dfl260eSmtpAlgDnsBlName = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 6, 1, 2, 9, 5, 2, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl260eSmtpAlgDnsBlName.setStatus('current')
dfl260eSmtpAlgDnsBlChecked = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 6, 1, 2, 9, 5, 2, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl260eSmtpAlgDnsBlChecked.setStatus('current')
dfl260eSmtpAlgDnsBlMatched = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 6, 1, 2, 9, 5, 2, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl260eSmtpAlgDnsBlMatched.setStatus('current')
dfl260eSmtpAlgDnsBlFailChecks = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 6, 1, 2, 9, 5, 2, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl260eSmtpAlgDnsBlFailChecks.setStatus('current')
dfl260eDHCPRelay = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 20, 2, 6, 1, 2, 11))
dfl260eDHCPRelayCurClients = MibScalar((1, 3, 6, 1, 4, 1, 171, 20, 2, 6, 1, 2, 11, 1), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl260eDHCPRelayCurClients.setStatus('current')
dfl260eDHCPRelayCurTrans = MibScalar((1, 3, 6, 1, 4, 1, 171, 20, 2, 6, 1, 2, 11, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl260eDHCPRelayCurTrans.setStatus('current')
dfl260eDHCPRelayRejected = MibScalar((1, 3, 6, 1, 4, 1, 171, 20, 2, 6, 1, 2, 11, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl260eDHCPRelayRejected.setStatus('current')
dfl260eDHCPRelayRuleTable = MibTable((1, 3, 6, 1, 4, 1, 171, 20, 2, 6, 1, 2, 11, 4), )
if mibBuilder.loadTexts: dfl260eDHCPRelayRuleTable.setStatus('current')
dfl260eDHCPRelayRuleEntry = MibTableRow((1, 3, 6, 1, 4, 1, 171, 20, 2, 6, 1, 2, 11, 4, 1), ).setIndexNames((0, "DFL260e-MIB", "dfl260eDHCPRelayRuleIndex"))
if mibBuilder.loadTexts: dfl260eDHCPRelayRuleEntry.setStatus('current')
dfl260eDHCPRelayRuleIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 6, 1, 2, 11, 4, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: dfl260eDHCPRelayRuleIndex.setStatus('current')
dfl260eDHCPRelayRuleName = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 6, 1, 2, 11, 4, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl260eDHCPRelayRuleName.setStatus('current')
dfl260eDHCPRelayRuleHits = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 6, 1, 2, 11, 4, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl260eDHCPRelayRuleHits.setStatus('current')
dfl260eDHCPRelayRuleCurClients = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 6, 1, 2, 11, 4, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl260eDHCPRelayRuleCurClients.setStatus('current')
dfl260eDHCPRelayRuleRejCliPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 6, 1, 2, 11, 4, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl260eDHCPRelayRuleRejCliPkts.setStatus('current')
dfl260eDHCPRelayRuleRejSrvPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 6, 1, 2, 11, 4, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl260eDHCPRelayRuleRejSrvPkts.setStatus('current')
dfl260eHA = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 20, 2, 6, 1, 2, 12))
dfl260eHASyncSendQueueLength = MibScalar((1, 3, 6, 1, 4, 1, 171, 20, 2, 6, 1, 2, 12, 1), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl260eHASyncSendQueueLength.setStatus('current')
dfl260eHASyncSendQueueUsagePkt = MibScalar((1, 3, 6, 1, 4, 1, 171, 20, 2, 6, 1, 2, 12, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl260eHASyncSendQueueUsagePkt.setStatus('current')
dfl260eHASyncSendQueueUsageOct = MibScalar((1, 3, 6, 1, 4, 1, 171, 20, 2, 6, 1, 2, 12, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl260eHASyncSendQueueUsageOct.setStatus('current')
dfl260eHASyncSentPackets = MibScalar((1, 3, 6, 1, 4, 1, 171, 20, 2, 6, 1, 2, 12, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl260eHASyncSentPackets.setStatus('current')
dfl260eHASyncSendResentPackets = MibScalar((1, 3, 6, 1, 4, 1, 171, 20, 2, 6, 1, 2, 12, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl260eHASyncSendResentPackets.setStatus('current')
dfl260eStatsConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 20, 2, 6, 2, 2, 1))
dfl260eStatsRegGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 20, 2, 6, 2, 3, 1))
dfl260eSystemObjectGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 171, 20, 2, 6, 2, 3, 1, 1)).setObjects(("DFL260e-MIB", "dfl260eSysCpuLoad"), ("DFL260e-MIB", "dfl260eSysForwardedBits"), ("DFL260e-MIB", "dfl260eSysForwardedPackets"), ("DFL260e-MIB", "dfl260eSysBuffUse"), ("DFL260e-MIB", "dfl260eSysConns"), ("DFL260e-MIB", "dfl260eHWSensorName"), ("DFL260e-MIB", "dfl260eHWSensorValue"), ("DFL260e-MIB", "dfl260eHWSensorUnit"), ("DFL260e-MIB", "dfl260eSysMemUsage"), ("DFL260e-MIB", "dfl260eSysTimerUsage"), ("DFL260e-MIB", "dfl260eSysConnOPS"), ("DFL260e-MIB", "dfl260eSysConnCPS"), ("DFL260e-MIB", "dfl260eSysHCForwardedBits"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    dfl260eSystemObjectGroup = dfl260eSystemObjectGroup.setStatus('current')
dfl260eIPsecObjectGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 171, 20, 2, 6, 2, 3, 1, 2)).setObjects(("DFL260e-MIB", "dfl260eIPsecPhaseOneActive"), ("DFL260e-MIB", "dfl260eIPsecPhaseOneAggrModeDone"), ("DFL260e-MIB", "dfl260eIPsecQuickModeActive"), ("DFL260e-MIB", "dfl260eIPsecPhaseOneDone"), ("DFL260e-MIB", "dfl260eIPsecPhaseOneFailed"), ("DFL260e-MIB", "dfl260eIPsecPhaseOneRekeyed"), ("DFL260e-MIB", "dfl260eIPsecQuickModeDone"), ("DFL260e-MIB", "dfl260eIPsecQuickModeFailed"), ("DFL260e-MIB", "dfl260eIPsecInfoDone"), ("DFL260e-MIB", "dfl260eIPsecInfoFailed"), ("DFL260e-MIB", "dfl260eIPsecInOctetsComp"), ("DFL260e-MIB", "dfl260eIPsecInOctetsUncomp"), ("DFL260e-MIB", "dfl260eIPsecOutOctetsComp"), ("DFL260e-MIB", "dfl260eIPsecOutOctetsUncomp"), ("DFL260e-MIB", "dfl260eIPsecForwardedOctetsComp"), ("DFL260e-MIB", "dfl260eIPsecForwardedOctetsUcomp"), ("DFL260e-MIB", "dfl260eIPsecInPackets"), ("DFL260e-MIB", "dfl260eIPsecOutPackets"), ("DFL260e-MIB", "dfl260eIPsecForwardedPackets"), ("DFL260e-MIB", "dfl260eIPsecActiveTransforms"), ("DFL260e-MIB", "dfl260eIPsecTotalTransforms"), ("DFL260e-MIB", "dfl260eIPsecOutOfTransforms"), ("DFL260e-MIB", "dfl260eIPsecTotalRekeys"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    dfl260eIPsecObjectGroup = dfl260eIPsecObjectGroup.setStatus('current')
dfl260eStateCountersGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 171, 20, 2, 6, 2, 3, 1, 3)).setObjects(("DFL260e-MIB", "dfl260eSysPscTcpSyn"), ("DFL260e-MIB", "dfl260eSysPscTcpOpen"), ("DFL260e-MIB", "dfl260eSysPscTcpFin"), ("DFL260e-MIB", "dfl260eSysPscUdp"), ("DFL260e-MIB", "dfl260eSysPscIcmp"), ("DFL260e-MIB", "dfl260eSysPscOther"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    dfl260eStateCountersGroup = dfl260eStateCountersGroup.setStatus('current')
dfl260eIPPoolGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 171, 20, 2, 6, 2, 3, 1, 4)).setObjects(("DFL260e-MIB", "dfl260eIPPoolsNumber"), ("DFL260e-MIB", "dfl260eIPPoolName"), ("DFL260e-MIB", "dfl260eIPPoolPrepare"), ("DFL260e-MIB", "dfl260eIPPoolFree"), ("DFL260e-MIB", "dfl260eIPPoolMisses"), ("DFL260e-MIB", "dfl260eIPPoolClientFails"), ("DFL260e-MIB", "dfl260eIPPoolUsed"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    dfl260eIPPoolGroup = dfl260eIPPoolGroup.setStatus('current')
dfl260eDHCPServerGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 171, 20, 2, 6, 2, 3, 1, 5)).setObjects(("DFL260e-MIB", "dfl260eDHCPTotalRejected"), ("DFL260e-MIB", "dfl260eDHCPRuleName"), ("DFL260e-MIB", "dfl260eDHCPRuleUsage"), ("DFL260e-MIB", "dfl260eDHCPRuleUsagePercent"), ("DFL260e-MIB", "dfl260eDHCPActiveClients"), ("DFL260e-MIB", "dfl260eDHCPActiveClientsPercent"), ("DFL260e-MIB", "dfl260eDHCPRejectedRequests"), ("DFL260e-MIB", "dfl260eDHCPTotalLeases"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    dfl260eDHCPServerGroup = dfl260eDHCPServerGroup.setStatus('current')
dfl260eRuleUseGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 171, 20, 2, 6, 2, 3, 1, 6)).setObjects(("DFL260e-MIB", "dfl260eRuleName"), ("DFL260e-MIB", "dfl260eRuleUse"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    dfl260eRuleUseGroup = dfl260eRuleUseGroup.setStatus('current')
dfl260eUserAuthGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 171, 20, 2, 6, 2, 3, 1, 7)).setObjects(("DFL260e-MIB", "dfl260eUserAuthHTTPUsers"), ("DFL260e-MIB", "dfl260eUserAuthXAUTHUsers"), ("DFL260e-MIB", "dfl260eUserAuthHTTPSUsers"), ("DFL260e-MIB", "dfl260eUserAuthPPPUsers"), ("DFL260e-MIB", "dfl260eUserAuthEAPUsers"), ("DFL260e-MIB", "dfl260eUserAuthRuleName"), ("DFL260e-MIB", "dfl260eUserAuthRuleUse"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    dfl260eUserAuthGroup = dfl260eUserAuthGroup.setStatus('current')
dfl260eIfStatsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 171, 20, 2, 6, 2, 3, 1, 8)).setObjects(("DFL260e-MIB", "dfl260eIfName"), ("DFL260e-MIB", "dfl260eIfFragsIn"), ("DFL260e-MIB", "dfl260eIfFragReassOk"), ("DFL260e-MIB", "dfl260eIfFragReassFail"), ("DFL260e-MIB", "dfl260eIfPktsInCnt"), ("DFL260e-MIB", "dfl260eIfPktsOutCnt"), ("DFL260e-MIB", "dfl260eIfBitsInCnt"), ("DFL260e-MIB", "dfl260eIfBitsOutCnt"), ("DFL260e-MIB", "dfl260eIfPktsTotCnt"), ("DFL260e-MIB", "dfl260eIfBitsTotCnt"), ("DFL260e-MIB", "dfl260eIfHCPktsInCnt"), ("DFL260e-MIB", "dfl260eIfHCPktsOutCnt"), ("DFL260e-MIB", "dfl260eIfHCBitsInCnt"), ("DFL260e-MIB", "dfl260eIfHCBitsOutCnt"), ("DFL260e-MIB", "dfl260eIfHCPktsTotCnt"), ("DFL260e-MIB", "dfl260eIfHCBitsTotCnt"), ("DFL260e-MIB", "dfl260eIfRxRingFifoErrors"), ("DFL260e-MIB", "dfl260eIfRxDespools"), ("DFL260e-MIB", "dfl260eIfRxAvgUse"), ("DFL260e-MIB", "dfl260eIfRxRingSaturation"), ("DFL260e-MIB", "dfl260eRxRingFlooded"), ("DFL260e-MIB", "dfl260eIfTxDespools"), ("DFL260e-MIB", "dfl260eIfTxAvgUse"), ("DFL260e-MIB", "dfl260eIfTxRingSaturation"), ("DFL260e-MIB", "dfl260eRxTingFlooded"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    dfl260eIfStatsGroup = dfl260eIfStatsGroup.setStatus('current')
dfl260eLinkMonitorGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 171, 20, 2, 6, 2, 3, 1, 9)).setObjects(("DFL260e-MIB", "dfl260eLinkMonGrp"), ("DFL260e-MIB", "dfl260eLinkMonGrpName"), ("DFL260e-MIB", "dfl260eLinkMonGrpHostsUp"), ("DFL260e-MIB", "dfl260eLinkMonHostId"), ("DFL260e-MIB", "dfl260eLinkMonHostShortTermLoss"), ("DFL260e-MIB", "dfl260eLinkMonHostPacketsLost"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    dfl260eLinkMonitorGroup = dfl260eLinkMonitorGroup.setStatus('current')
dfl260ePipesObjectGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 171, 20, 2, 6, 2, 3, 1, 10)).setObjects(("DFL260e-MIB", "dfl260ePipeUsers"), ("DFL260e-MIB", "dfl260ePipeName"), ("DFL260e-MIB", "dfl260ePipeMinPrec"), ("DFL260e-MIB", "dfl260ePipeMaxPrec"), ("DFL260e-MIB", "dfl260ePipeDefPrec"), ("DFL260e-MIB", "dfl260ePipeNumPrec"), ("DFL260e-MIB", "dfl260ePipeNumUsers"), ("DFL260e-MIB", "dfl260ePipeCurrentBps"), ("DFL260e-MIB", "dfl260ePipeCurrentPps"), ("DFL260e-MIB", "dfl260ePipeDelayedPackets"), ("DFL260e-MIB", "dfl260ePipeDropedPackets"), ("DFL260e-MIB", "dfl260ePipePrec"), ("DFL260e-MIB", "dfl260ePipePrecBps"), ("DFL260e-MIB", "dfl260ePipePrecTotalPps"), ("DFL260e-MIB", "dfl260ePipePrecReservedBps"), ("DFL260e-MIB", "dfl260ePipePrecDynLimBps"), ("DFL260e-MIB", "dfl260ePipePrecDynUsrLimBps"), ("DFL260e-MIB", "dfl260ePipePrecDelayedPackets"), ("DFL260e-MIB", "dfl260ePipePrecDropedPackets"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    dfl260ePipesObjectGroup = dfl260ePipesObjectGroup.setStatus('current')
dfl260eDHCPRelayObjectGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 171, 20, 2, 6, 2, 3, 1, 12)).setObjects(("DFL260e-MIB", "dfl260eDHCPRelayCurClients"), ("DFL260e-MIB", "dfl260eDHCPRelayCurTrans"), ("DFL260e-MIB", "dfl260eDHCPRelayRejected"), ("DFL260e-MIB", "dfl260eDHCPRelayRuleName"), ("DFL260e-MIB", "dfl260eDHCPRelayRuleHits"), ("DFL260e-MIB", "dfl260eDHCPRelayRuleCurClients"), ("DFL260e-MIB", "dfl260eDHCPRelayRuleRejCliPkts"), ("DFL260e-MIB", "dfl260eDHCPRelayRuleRejSrvPkts"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    dfl260eDHCPRelayObjectGroup = dfl260eDHCPRelayObjectGroup.setStatus('current')
dfl260eAlgGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 171, 20, 2, 6, 2, 3, 1, 13)).setObjects(("DFL260e-MIB", "dfl260eAlgSessions"), ("DFL260e-MIB", "dfl260eAlgConnections"), ("DFL260e-MIB", "dfl260eAlgTCPStreams"), ("DFL260e-MIB", "dfl260eHttpAlgName"), ("DFL260e-MIB", "dfl260eHttpAlgTotalRequested"), ("DFL260e-MIB", "dfl260eHttpAlgTotalAllowed"), ("DFL260e-MIB", "dfl260eHttpAlgTotalBlocked"), ("DFL260e-MIB", "dfl260eHttpAlgCntFltName"), ("DFL260e-MIB", "dfl260eHttpAlgCntFltRequests"), ("DFL260e-MIB", "dfl260eHttpAlgCntFltAllowed"), ("DFL260e-MIB", "dfl260eHttpAlgCntFltBlocked"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    dfl260eAlgGroup = dfl260eAlgGroup.setStatus('current')
dfl260eHAGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 171, 20, 2, 6, 2, 3, 1, 14)).setObjects(("DFL260e-MIB", "dfl260eHASyncSendQueueLength"), ("DFL260e-MIB", "dfl260eHASyncSendQueueUsagePkt"), ("DFL260e-MIB", "dfl260eHASyncSendQueueUsageOct"), ("DFL260e-MIB", "dfl260eHASyncSentPackets"), ("DFL260e-MIB", "dfl260eHASyncSendResentPackets"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    dfl260eHAGroup = dfl260eHAGroup.setStatus('current')
dfl260eIfVlanGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 171, 20, 2, 6, 2, 3, 1, 15)).setObjects(("DFL260e-MIB", "dfl260eIfVlanUntaggedInPkts"), ("DFL260e-MIB", "dfl260eIfVlanUntaggedOutPkts"), ("DFL260e-MIB", "dfl260eIfVlanUntaggedTotPkts"), ("DFL260e-MIB", "dfl260eIfVlanUntaggedInOctets"), ("DFL260e-MIB", "dfl260eIfVlanUntaggedOutOctets"), ("DFL260e-MIB", "dfl260eIfVlanUntaggedTotOctets"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    dfl260eIfVlanGroup = dfl260eIfVlanGroup.setStatus('current')
dfl260eSmtpAlgGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 171, 20, 2, 6, 2, 3, 1, 16)).setObjects(("DFL260e-MIB", "dfl260eSmtpAlgName"), ("DFL260e-MIB", "dfl260eSmtpAlgTotCheckedSes"), ("DFL260e-MIB", "dfl260eSmtpAlgTotSpamSes"), ("DFL260e-MIB", "dfl260eSmtpAlgTotDroppedSes"), ("DFL260e-MIB", "dfl260eSmtpAlgDnsBlName"), ("DFL260e-MIB", "dfl260eSmtpAlgDnsBlChecked"), ("DFL260e-MIB", "dfl260eSmtpAlgDnsBlMatched"), ("DFL260e-MIB", "dfl260eSmtpAlgDnsBlFailChecks"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    dfl260eSmtpAlgGroup = dfl260eSmtpAlgGroup.setStatus('current')
dfl260eSysTCPGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 171, 20, 2, 6, 2, 3, 1, 17)).setObjects(("DFL260e-MIB", "dfl260eSysTCPRecvSmall"), ("DFL260e-MIB", "dfl260eSysTCPRecvLarge"), ("DFL260e-MIB", "dfl260eSysTCPSendSmall"), ("DFL260e-MIB", "dfl260eSysTCPSendLarge"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    dfl260eSysTCPGroup = dfl260eSysTCPGroup.setStatus('current')
dfl260eStatsCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 171, 20, 2, 6, 2, 2, 1, 1)).setObjects(("DFL260e-MIB", "dfl260eSystemObjectGroup"), ("DFL260e-MIB", "dfl260eIPsecObjectGroup"), ("DFL260e-MIB", "dfl260eStateCountersGroup"), ("DFL260e-MIB", "dfl260eIPPoolGroup"), ("DFL260e-MIB", "dfl260eDHCPServerGroup"), ("DFL260e-MIB", "dfl260eRuleUseGroup"), ("DFL260e-MIB", "dfl260eUserAuthGroup"), ("DFL260e-MIB", "dfl260eIfStatsGroup"), ("DFL260e-MIB", "dfl260eLinkMonitorGroup"), ("DFL260e-MIB", "dfl260ePipesObjectGroup"), ("DFL260e-MIB", "dfl260eDHCPRelayObjectGroup"), ("DFL260e-MIB", "dfl260eAlgGroup"), ("DFL260e-MIB", "dfl260eHAGroup"), ("DFL260e-MIB", "dfl260eIfVlanGroup"), ("DFL260e-MIB", "dfl260eSmtpAlgGroup"), ("DFL260e-MIB", "dfl260eSysTCPGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    dfl260eStatsCompliance = dfl260eStatsCompliance.setStatus('current')
mibBuilder.exportSymbols("DFL260e-MIB", dfl260eUserAuthRuleUseEntry=dfl260eUserAuthRuleUseEntry, dfl260eAlgSessions=dfl260eAlgSessions, dfl260eIfRxRingSaturation=dfl260eIfRxRingSaturation, dfl260eIPsecActiveTransforms=dfl260eIPsecActiveTransforms, dfl260eIPsecOutPackets=dfl260eIPsecOutPackets, dfl260eSysCpuLoad=dfl260eSysCpuLoad, dfl260eSysTimerUsage=dfl260eSysTimerUsage, dfl260eSmtpAlgName=dfl260eSmtpAlgName, dfl260ePipeMaxPrec=dfl260ePipeMaxPrec, dfl260eHAGroup=dfl260eHAGroup, dfl260eIfFragReassOk=dfl260eIfFragReassOk, dfl260eUserAuthRuleIndex=dfl260eUserAuthRuleIndex, dfl260eSysPscTcpSyn=dfl260eSysPscTcpSyn, dfl260eDHCPRelayRuleRejCliPkts=dfl260eDHCPRelayRuleRejCliPkts, dfl260eUserAuthHTTPUsers=dfl260eUserAuthHTTPUsers, dfl260eDHCPRelayCurClients=dfl260eDHCPRelayCurClients, dfl260eDHCPRelayRuleHits=dfl260eDHCPRelayRuleHits, dfl260eDHCPRelayRuleCurClients=dfl260eDHCPRelayRuleCurClients, dfl260eDHCPRejectedRequests=dfl260eDHCPRejectedRequests, dfl260eIPsecOutOfTransforms=dfl260eIPsecOutOfTransforms, dfl260eSysPscTcpOpen=dfl260eSysPscTcpOpen, dfl260ePipePrecReservedBps=dfl260ePipePrecReservedBps, dfl260eIPsecPhaseOneRekeyed=dfl260eIPsecPhaseOneRekeyed, dfl260eLinkMonHostEntry=dfl260eLinkMonHostEntry, dfl260eIPPoolPrepare=dfl260eIPPoolPrepare, dfl260eVPN=dfl260eVPN, dfl260eIPsecObjectGroup=dfl260eIPsecObjectGroup, dfl260eSmtpAlgDnsBlEntry=dfl260eSmtpAlgDnsBlEntry, dfl260ePipePrecIndex=dfl260ePipePrecIndex, dfl260eIfBitsInCnt=dfl260eIfBitsInCnt, dfl260eIPsecPhaseOneDone=dfl260eIPsecPhaseOneDone, dfl260eSysTCPRecvLarge=dfl260eSysTCPRecvLarge, dfl260e=dfl260e, dfl260ePipeEntry=dfl260ePipeEntry, dfl260eDHCPRelayRuleTable=dfl260eDHCPRelayRuleTable, dfl260eHASyncSentPackets=dfl260eHASyncSentPackets, dfl260eRules=dfl260eRules, dfl260eDHCPServer=dfl260eDHCPServer, dfl260eSmtpAlgIndex=dfl260eSmtpAlgIndex, dfl260eSmtpAlgDnsBlName=dfl260eSmtpAlgDnsBlName, dfl260eDHCPRelay=dfl260eDHCPRelay, dfl260eHttpAlgCntFltAllowed=dfl260eHttpAlgCntFltAllowed, dfl260eIPsecQuickModeDone=dfl260eIPsecQuickModeDone, dfl260eHttpAlgTotalAllowed=dfl260eHttpAlgTotalAllowed, dfl260eIPPoolName=dfl260eIPPoolName, dfl260eSystemObjectGroup=dfl260eSystemObjectGroup, dfl260eSmtpAlgTable=dfl260eSmtpAlgTable, dfl260eStatsCompliance=dfl260eStatsCompliance, dfl260eIfTxRingSaturation=dfl260eIfTxRingSaturation, dfl260eDHCPServerGroup=dfl260eDHCPServerGroup, dfl260eSysForwardedPackets=dfl260eSysForwardedPackets, dfl260ePipeCurrentPps=dfl260ePipeCurrentPps, dfl260eAlgTCPStreams=dfl260eAlgTCPStreams, dfl260eIPsecForwardedOctetsComp=dfl260eIPsecForwardedOctetsComp, dfl260eDHCPTotalRejected=dfl260eDHCPTotalRejected, dfl260ePipeIndex=dfl260ePipeIndex, dfl260eUserAuthGroup=dfl260eUserAuthGroup, dfl260eRuleUseEntry=dfl260eRuleUseEntry, dfl260eIfVlanUntaggedOutPkts=dfl260eIfVlanUntaggedOutPkts, dfl260ePipePrecTable=dfl260ePipePrecTable, dfl260eSysConnCPS=dfl260eSysConnCPS, dfl260eIPPoolMisses=dfl260eIPPoolMisses, dfl260ePipeMinPrec=dfl260ePipeMinPrec, dfl260eSysMemUsage=dfl260eSysMemUsage, dfl260eSmtpAlg=dfl260eSmtpAlg, dfl260eSystem=dfl260eSystem, dfl260eHASyncSendQueueLength=dfl260eHASyncSendQueueLength, dfl260eDHCPRelayObjectGroup=dfl260eDHCPRelayObjectGroup, dfl260eHttpAlgTable=dfl260eHttpAlgTable, dfl260eSysHCForwardedBits=dfl260eSysHCForwardedBits, dfl260ereg=dfl260ereg, dfl260ePipeUsers=dfl260ePipeUsers, dfl260eIPsecGlobal=dfl260eIPsecGlobal, dfl260eUserAuthRuleName=dfl260eUserAuthRuleName, dfl260eIfHCPktsOutCnt=dfl260eIfHCPktsOutCnt, dfl260ePipesObjectGroup=dfl260ePipesObjectGroup, dfl260ePipeNumUsers=dfl260ePipeNumUsers, dfl260ePipePrecTotalPps=dfl260ePipePrecTotalPps, dfl260eMibObjectGroups=dfl260eMibObjectGroups, dfl260eHA=dfl260eHA, dfl260eHASyncSendQueueUsageOct=dfl260eHASyncSendQueueUsageOct, dfl260ePipePrecDynLimBps=dfl260ePipePrecDynLimBps, dfl260ePipeDropedPackets=dfl260ePipeDropedPackets, dfl260eIfRxRingTable=dfl260eIfRxRingTable, dfl260eDHCPRelayRuleRejSrvPkts=dfl260eDHCPRelayRuleRejSrvPkts, dfl260eIPsecInPackets=dfl260eIPsecInPackets, dfl260eIPsecPhaseOneAggrModeDone=dfl260eIPsecPhaseOneAggrModeDone, dfl260eSysTCPSendLarge=dfl260eSysTCPSendLarge, dfl260eIPsecQuickModeFailed=dfl260eIPsecQuickModeFailed, dfl260eUserAuthRuleUse=dfl260eUserAuthRuleUse, dfl260eStatsConformance=dfl260eStatsConformance, dfl260eHttpAlgTotalBlocked=dfl260eHttpAlgTotalBlocked, dfl260ePipeCurrentBps=dfl260ePipeCurrentBps, dfl260eDHCPRuleName=dfl260eDHCPRuleName, dfl260eRuleUseGroup=dfl260eRuleUseGroup, dfl260eIPsecOutOctetsComp=dfl260eIPsecOutOctetsComp, dfl260eIPsecTotalTransforms=dfl260eIPsecTotalTransforms, dfl260eHttpAlgEntry=dfl260eHttpAlgEntry, dfl260eIfRxAvgUse=dfl260eIfRxAvgUse, dfl260eHttpAlgCntFltRequests=dfl260eHttpAlgCntFltRequests, dfl260eLinkMonGrp=dfl260eLinkMonGrp, dfl260ePipePrecEntry=dfl260ePipePrecEntry, dfl260eDHCPActiveClientsPercent=dfl260eDHCPActiveClientsPercent, dfl260eIPsecForwardedOctetsUcomp=dfl260eIPsecForwardedOctetsUcomp, dfl260eUserAuth=dfl260eUserAuth, dfl260eIfStatsTable=dfl260eIfStatsTable, dfl260eIfRxDespools=dfl260eIfRxDespools, dfl260eSysConnOPS=dfl260eSysConnOPS, dfl260eSmtpAlgTotDroppedSes=dfl260eSmtpAlgTotDroppedSes, dfl260eIfTxRingIndex=dfl260eIfTxRingIndex, dfl260eIPsecInfoFailed=dfl260eIPsecInfoFailed, dfl260eRuleName=dfl260eRuleName, dfl260eSmtpAlgEntry=dfl260eSmtpAlgEntry, dfl260ePipeNumPrec=dfl260ePipeNumPrec, dfl260eSysPscOther=dfl260eSysPscOther, dfl260eDHCPActiveClients=dfl260eDHCPActiveClients, dfl260eHASyncSendQueueUsagePkt=dfl260eHASyncSendQueueUsagePkt, dfl260eIfHCBitsInCnt=dfl260eIfHCBitsInCnt, dfl260eAlgGroup=dfl260eAlgGroup, dfl260eDHCPTotalLeases=dfl260eDHCPTotalLeases, dfl260eOSStats=dfl260eOSStats, dfl260eHWSensorUnit=dfl260eHWSensorUnit, dfl260ePipePrecDropedPackets=dfl260ePipePrecDropedPackets, dfl260eDHCPRelayRejected=dfl260eDHCPRelayRejected, dfl260eIPPools=dfl260eIPPools, dfl260eLinkMonGrpTable=dfl260eLinkMonGrpTable, dfl260eALG=dfl260eALG, dfl260eMibModules=dfl260eMibModules, dfl260eLinkMonitor=dfl260eLinkMonitor, dfl260eStatsRegGroups=dfl260eStatsRegGroups, dfl260eSysForwardedBits=dfl260eSysForwardedBits, dfl260eSysTCPSendSmall=dfl260eSysTCPSendSmall, dfl260eHttpAlgCntFltBlocked=dfl260eHttpAlgCntFltBlocked, dfl260ePipePrecDelayedPackets=dfl260ePipePrecDelayedPackets, dfl260eSmtpAlgTotCheckedSes=dfl260eSmtpAlgTotCheckedSes, dfl260eHASyncSendResentPackets=dfl260eHASyncSendResentPackets, dfl260eIPsecQuickModeActive=dfl260eIPsecQuickModeActive, dfl260eLinkMonGrpIndex=dfl260eLinkMonGrpIndex, dfl260eRuleUseTable=dfl260eRuleUseTable, dfl260eHttpAlgIndex=dfl260eHttpAlgIndex, dfl260eIfHCBitsOutCnt=dfl260eIfHCBitsOutCnt, dfl260eLinkMonHostPacketsLost=dfl260eLinkMonHostPacketsLost, dfl260eIPPoolsNumber=dfl260eIPPoolsNumber, dfl260eUserAuthRuleUseTable=dfl260eUserAuthRuleUseTable, dfl260eIfVlanUntaggedInPkts=dfl260eIfVlanUntaggedInPkts, dlink=dlink, dfl260eIfVlanIndex=dfl260eIfVlanIndex, dfl260eDHCPRuleIndex=dfl260eDHCPRuleIndex, dfl260eSysTCPGroup=dfl260eSysTCPGroup, dfl260eHWSensorName=dfl260eHWSensorName, dfl260eIfPktsTotCnt=dfl260eIfPktsTotCnt, dfl260eIPsecPhaseOneFailed=dfl260eIPsecPhaseOneFailed, dfl260eLinkMonHostId=dfl260eLinkMonHostId, dfl260eMibConfs=dfl260eMibConfs, dfl260eHttpAlgName=dfl260eHttpAlgName, dfl260eSmtpAlgDnsBlFailChecks=dfl260eSmtpAlgDnsBlFailChecks, dfl260eDHCPRelayRuleIndex=dfl260eDHCPRelayRuleIndex, dfl260eIPPoolIndex=dfl260eIPPoolIndex, dfl260ePipeName=dfl260ePipeName, dfl260ePipePrec=dfl260ePipePrec, dfl260eIPsecForwardedPackets=dfl260eIPsecForwardedPackets, dfl260eRuleUse=dfl260eRuleUse, dfl260eStateCountersGroup=dfl260eStateCountersGroup, dfl260ePipeTable=dfl260ePipeTable, dfl260eOS=dfl260eOS, dfl260eIfRxRingIndex=dfl260eIfRxRingIndex, dfl260eIPPoolClientFails=dfl260eIPPoolClientFails, dfl260eSmtpAlgGroup=dfl260eSmtpAlgGroup, dfl260eLinkMonHostTable=dfl260eLinkMonHostTable, dfl260eSysTCPRecvSmall=dfl260eSysTCPRecvSmall, dfl260ePipeDelayedPackets=dfl260ePipeDelayedPackets, dfl260eUserAuthHTTPSUsers=dfl260eUserAuthHTTPSUsers, dfl260eHWSensorTable=dfl260eHWSensorTable, dfl260eIfName=dfl260eIfName, dfl260eLinkMonitorGroup=dfl260eLinkMonitorGroup, dfl260eIfHCBitsTotCnt=dfl260eIfHCBitsTotCnt, dfl260eIfRxRingFifoErrors=dfl260eIfRxRingFifoErrors, dfl260eIfTxAvgUse=dfl260eIfTxAvgUse, dfl260eHWSensorIndex=dfl260eHWSensorIndex, dfl260eDHCPRuleEntry=dfl260eDHCPRuleEntry, dfl260eIPPoolUsed=dfl260eIPPoolUsed, dfl260eHttpAlgCntFltEntry=dfl260eHttpAlgCntFltEntry, dfl260eHttpAlgCntFltIndex=dfl260eHttpAlgCntFltIndex, dfl260e_MIB=dfl260e_MIB, dfl260eSmtpAlgTotSpamSes=dfl260eSmtpAlgTotSpamSes, dfl260eUserAuthPPPUsers=dfl260eUserAuthPPPUsers, utmFirewall=utmFirewall, dfl260eHttpAlg=dfl260eHttpAlg, dfl260ePipeDefPrec=dfl260ePipeDefPrec, dfl260eIfTxRingEntry=dfl260eIfTxRingEntry, dfl260eIPsecInfoDone=dfl260eIPsecInfoDone, dfl260eIfVlanStatsTable=dfl260eIfVlanStatsTable, dfl260eIfHCPktsTotCnt=dfl260eIfHCPktsTotCnt, dfl260eIPsecInOctetsUncomp=dfl260eIPsecInOctetsUncomp, dfl260eSmtpAlgDnsBlIndex=dfl260eSmtpAlgDnsBlIndex, dfl260eIfPktsInCnt=dfl260eIfPktsInCnt, dfl260eIfStatsGroup=dfl260eIfStatsGroup, dfl260eIfStatsEntry=dfl260eIfStatsEntry, dfl260eIfPktsOutCnt=dfl260eIfPktsOutCnt, dfl260eSysPerStateCounters=dfl260eSysPerStateCounters, dfl260eHWSensorValue=dfl260eHWSensorValue, dfl260eDHCPRuleUsage=dfl260eDHCPRuleUsage, dfl260eIfFragsIn=dfl260eIfFragsIn, dfl260eUserAuthXAUTHUsers=dfl260eUserAuthXAUTHUsers, dfl260eIPPoolTable=dfl260eIPPoolTable, dfl260eIPPoolEntry=dfl260eIPPoolEntry, dfl260eDHCPRuleUsagePercent=dfl260eDHCPRuleUsagePercent, dfl260eLinkMonGrpHostsUp=dfl260eLinkMonGrpHostsUp, dfl260ePipePrecBps=dfl260ePipePrecBps, dfl260eIfFragReassFail=dfl260eIfFragReassFail, dfl260eIfStatsIndex=dfl260eIfStatsIndex, dfl260eSysBuffUse=dfl260eSysBuffUse, dfl260eHttpAlgCntFltName=dfl260eHttpAlgCntFltName, dfl260eSysPscIcmp=dfl260eSysPscIcmp, dfl260eIfHCPktsInCnt=dfl260eIfHCPktsInCnt, dfl260eIPsecOutOctetsUncomp=dfl260eIPsecOutOctetsUncomp, dfl260eLinkMonGrpName=dfl260eLinkMonGrpName, dfl260eIfRxRingEntry=dfl260eIfRxRingEntry, dfl260eIfTxDespools=dfl260eIfTxDespools, dfl260eRxTingFlooded=dfl260eRxTingFlooded, dfl260eIfTxRingTable=dfl260eIfTxRingTable, dfl260eIPsec=dfl260eIPsec, dfl260eIPsecTotalRekeys=dfl260eIPsecTotalRekeys, dfl260eRuleIndex=dfl260eRuleIndex, dfl260eSmtpAlgDnsBlTable=dfl260eSmtpAlgDnsBlTable, dfl260eDHCPRelayRuleEntry=dfl260eDHCPRelayRuleEntry, dfl260eAlgConnections=dfl260eAlgConnections, dfl260eIPsecPhaseOneActive=dfl260eIPsecPhaseOneActive, dfl260eLinkMonGrpEntry=dfl260eLinkMonGrpEntry, dfl260eHWSensorEntry=dfl260eHWSensorEntry, dfl260eIfVlanUntaggedOutOctets=dfl260eIfVlanUntaggedOutOctets, dfl260eSmtpAlgDnsBlMatched=dfl260eSmtpAlgDnsBlMatched, dfl260eIPsecInOctetsComp=dfl260eIPsecInOctetsComp, dfl260eIfBitsOutCnt=dfl260eIfBitsOutCnt, dfl260eIfVlanUntaggedInOctets=dfl260eIfVlanUntaggedInOctets, dfl260ePipes=dfl260ePipes, dfl260eDHCPRelayCurTrans=dfl260eDHCPRelayCurTrans, dfl260eHttpAlgTotalRequested=dfl260eHttpAlgTotalRequested, dfl260eDHCPRuleTable=dfl260eDHCPRuleTable, dfl260eIPPoolGroup=dfl260eIPPoolGroup, dfl260eSysConns=dfl260eSysConns, dfl260eIfVlanUntaggedTotOctets=dfl260eIfVlanUntaggedTotOctets, dfl260eHttpAlgCntFltTable=dfl260eHttpAlgCntFltTable, dfl260eIPPoolFree=dfl260eIPPoolFree, dfl260eLinkMonHostShortTermLoss=dfl260eLinkMonHostShortTermLoss, dfl260eRxRingFlooded=dfl260eRxRingFlooded, dfl260eSysTCPUsage=dfl260eSysTCPUsage, dfl260eSmtpAlgDnsBlChecked=dfl260eSmtpAlgDnsBlChecked, dfl260eSysPscUdp=dfl260eSysPscUdp, dfl260ePipePrecDynUsrLimBps=dfl260ePipePrecDynUsrLimBps, PYSNMP_MODULE_ID=dfl260e_MIB, dfl260eIfVlanStatsEntry=dfl260eIfVlanStatsEntry, dfl260eIfVlanGroup=dfl260eIfVlanGroup, dfl260eDHCPRelayRuleName=dfl260eDHCPRelayRuleName)
mibBuilder.exportSymbols("DFL260e-MIB", dfl260eSysPscTcpFin=dfl260eSysPscTcpFin, dfl260eIfVlanUntaggedTotPkts=dfl260eIfVlanUntaggedTotPkts, dfl260eUserAuthEAPUsers=dfl260eUserAuthEAPUsers, netdefendMgmt=netdefendMgmt, dfl260eIfBitsTotCnt=dfl260eIfBitsTotCnt, dfl260eLinkMonHostIndex=dfl260eLinkMonHostIndex)
