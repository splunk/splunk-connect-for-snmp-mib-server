#
# PySNMP MIB module SCHLEIFENBAUER-DATABUS-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/SCHLEIFENBAUER-DATABUS-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 20:53:12 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ValueSizeConstraint, ConstraintsUnion, SingleValueConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ValueSizeConstraint", "ConstraintsUnion", "SingleValueConstraint", "ConstraintsIntersection")
schleifenbauerMgmt, = mibBuilder.importSymbols("SCHLEIFENBAUER-SMI", "schleifenbauerMgmt")
ObjectGroup, NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "NotificationGroup", "ModuleCompliance")
Bits, Counter64, ModuleIdentity, iso, TimeTicks, Integer32, Counter32, Unsigned32, ObjectIdentity, IpAddress, NotificationType, Gauge32, MibScalar, MibTable, MibTableRow, MibTableColumn, MibIdentifier = mibBuilder.importSymbols("SNMPv2-SMI", "Bits", "Counter64", "ModuleIdentity", "iso", "TimeTicks", "Integer32", "Counter32", "Unsigned32", "ObjectIdentity", "IpAddress", "NotificationType", "Gauge32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "MibIdentifier")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
schleifenbauerDatabusMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 31034, 12, 1))
schleifenbauerDatabusMIB.setRevisions(('2016-10-21 00:00', '2016-06-16 00:00', '2016-05-10 00:00', '2016-03-24 00:00', '2016-02-19 00:00', '2015-10-23 00:00',))
if mibBuilder.loadTexts: schleifenbauerDatabusMIB.setLastUpdated('201610210000Z')
if mibBuilder.loadTexts: schleifenbauerDatabusMIB.setOrganization('Schleifenbauer Engineering')
class DeciValue(TextualConvention, Integer32):
    status = 'current'
    displayHint = 'd-2'
    subtypeSpec = Integer32.subtypeSpec + ValueRangeConstraint(0, 327680)

class KiloWattHour(TextualConvention, Integer32):
    status = 'current'
    displayHint = 'd'
    subtypeSpec = Integer32.subtypeSpec + ValueRangeConstraint(0, 16777215)

class DeciAmpere(TextualConvention, Integer32):
    status = 'current'
    displayHint = 'd-2'
    subtypeSpec = Integer32.subtypeSpec + ValueRangeConstraint(0, 327680)

class DeciCelsius(TextualConvention, Integer32):
    status = 'current'
    displayHint = 'd-2'
    subtypeSpec = Integer32.subtypeSpec + ValueRangeConstraint(0, 9900)

class DeciPercent(TextualConvention, Integer32):
    status = 'current'
    displayHint = 'd-2'
    subtypeSpec = Integer32.subtypeSpec + ValueRangeConstraint(0, 10000)

class DeciVolt(TextualConvention, Integer32):
    status = 'current'
    displayHint = 'd-2'
    subtypeSpec = Integer32.subtypeSpec + ValueRangeConstraint(0, 327680)

class MilliSecond(TextualConvention, Integer32):
    status = 'current'
    displayHint = 'd'

class Second(TextualConvention, Integer32):
    status = 'current'
    displayHint = 'd'

sdbMIBNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 31034, 12, 1, 0))
sdbMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 31034, 12, 1, 1))
sdbMIBConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 31034, 12, 1, 2))
sdbMgmt = MibIdentifier((1, 3, 6, 1, 4, 1, 31034, 12, 1, 1, 1))
sdbDevice = MibIdentifier((1, 3, 6, 1, 4, 1, 31034, 12, 1, 1, 2))
sdbMgmtStatus = MibIdentifier((1, 3, 6, 1, 4, 1, 31034, 12, 1, 1, 1, 1))
sdbMgmtControl = MibIdentifier((1, 3, 6, 1, 4, 1, 31034, 12, 1, 1, 1, 2))
sdbDevIdentification = MibIdentifier((1, 3, 6, 1, 4, 1, 31034, 12, 1, 1, 2, 1))
sdbDevConfiguration = MibIdentifier((1, 3, 6, 1, 4, 1, 31034, 12, 1, 1, 2, 2))
sdbDevSystemStatus = MibIdentifier((1, 3, 6, 1, 4, 1, 31034, 12, 1, 1, 2, 3))
sdbDevReset = MibIdentifier((1, 3, 6, 1, 4, 1, 31034, 12, 1, 1, 2, 4))
sdbDevSettings = MibIdentifier((1, 3, 6, 1, 4, 1, 31034, 12, 1, 1, 2, 5))
sdbDevInput = MibIdentifier((1, 3, 6, 1, 4, 1, 31034, 12, 1, 1, 2, 6))
sdbDevOutlet = MibIdentifier((1, 3, 6, 1, 4, 1, 31034, 12, 1, 1, 2, 7))
sdbDevSensor = MibIdentifier((1, 3, 6, 1, 4, 1, 31034, 12, 1, 1, 2, 8))
sdbMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 31034, 12, 1, 2, 1))
sdbMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 31034, 12, 1, 2, 2))
sdbMgmtStsDevices = MibScalar((1, 3, 6, 1, 4, 1, 31034, 12, 1, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 512))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdbMgmtStsDevices.setStatus('current')
sdbMgmtStsAddressableDevices = MibScalar((1, 3, 6, 1, 4, 1, 31034, 12, 1, 1, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdbMgmtStsAddressableDevices.setStatus('current')
sdbMgmtStsNewDevices = MibScalar((1, 3, 6, 1, 4, 1, 31034, 12, 1, 1, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdbMgmtStsNewDevices.setStatus('current')
sdbMgmtStsDuplicateDevices = MibScalar((1, 3, 6, 1, 4, 1, 31034, 12, 1, 1, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdbMgmtStsDuplicateDevices.setStatus('current')
sdbMgmtStsRingState = MibScalar((1, 3, 6, 1, 4, 1, 31034, 12, 1, 1, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("open", 0), ("closed", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdbMgmtStsRingState.setStatus('current')
sdbMgmtStsRingBreachIndex = MibScalar((1, 3, 6, 1, 4, 1, 31034, 12, 1, 1, 1, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdbMgmtStsRingBreachIndex.setStatus('current')
sdbMgmtCtrlScan = MibScalar((1, 3, 6, 1, 4, 1, 31034, 12, 1, 1, 1, 2, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("idle", 0), ("scan", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sdbMgmtCtrlScan.setStatus('current')
sdbMgmtCtrlRenumberAllFromN = MibScalar((1, 3, 6, 1, 4, 1, 31034, 12, 1, 1, 1, 2, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sdbMgmtCtrlRenumberAllFromN.setStatus('current')
sdbMgmtCtrlRenumberZeros = MibScalar((1, 3, 6, 1, 4, 1, 31034, 12, 1, 1, 1, 2, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("idle", 0), ("renumber", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sdbMgmtCtrlRenumberZeros.setStatus('current')
sdbMgmtCtrlDevicesTable = MibTable((1, 3, 6, 1, 4, 1, 31034, 12, 1, 1, 1, 2, 4), )
if mibBuilder.loadTexts: sdbMgmtCtrlDevicesTable.setStatus('current')
sdbMgmtCtrlDevicesEntry = MibTableRow((1, 3, 6, 1, 4, 1, 31034, 12, 1, 1, 1, 2, 4, 1), ).setIndexNames((0, "SCHLEIFENBAUER-DATABUS-MIB", "sdbMgmtCtrlDevIndex"))
if mibBuilder.loadTexts: sdbMgmtCtrlDevicesEntry.setStatus('current')
sdbMgmtCtrlDevIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 31034, 12, 1, 1, 1, 2, 4, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255)))
if mibBuilder.loadTexts: sdbMgmtCtrlDevIndex.setStatus('current')
sdbMgmtCtrlDevUnitAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 31034, 12, 1, 1, 1, 2, 4, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sdbMgmtCtrlDevUnitAddress.setStatus('current')
sdbMgmtCtrlDevHardwareAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 31034, 12, 1, 1, 1, 2, 4, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(17, 17)).setFixedLength(17)).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdbMgmtCtrlDevHardwareAddress.setStatus('current')
sdbMgmtCtrlDevIsNew = MibTableColumn((1, 3, 6, 1, 4, 1, 31034, 12, 1, 1, 1, 2, 4, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdbMgmtCtrlDevIsNew.setStatus('current')
sdbMgmtCtrlDevIsDuplicate = MibTableColumn((1, 3, 6, 1, 4, 1, 31034, 12, 1, 1, 1, 2, 4, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdbMgmtCtrlDevIsDuplicate.setStatus('current')
sdbDevIdTable = MibTable((1, 3, 6, 1, 4, 1, 31034, 12, 1, 1, 2, 1, 1), )
if mibBuilder.loadTexts: sdbDevIdTable.setStatus('current')
sdbDevIdEntry = MibTableRow((1, 3, 6, 1, 4, 1, 31034, 12, 1, 1, 2, 1, 1, 1), ).setIndexNames((0, "SCHLEIFENBAUER-DATABUS-MIB", "sdbDevIdIndex"))
if mibBuilder.loadTexts: sdbDevIdEntry.setStatus('current')
sdbDevIdSPDMVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 31034, 12, 1, 1, 2, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 9999))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdbDevIdSPDMVersion.setStatus('current')
sdbDevIdFirmwareVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 31034, 12, 1, 1, 2, 1, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 9999))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdbDevIdFirmwareVersion.setStatus('current')
sdbDevIdBuildNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 31034, 12, 1, 1, 2, 1, 1, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 12))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdbDevIdBuildNumber.setStatus('current')
sdbDevIdSalesOrderNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 31034, 12, 1, 1, 2, 1, 1, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdbDevIdSalesOrderNumber.setStatus('current')
sdbDevIdProductId = MibTableColumn((1, 3, 6, 1, 4, 1, 31034, 12, 1, 1, 2, 1, 1, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdbDevIdProductId.setStatus('current')
sdbDevIdSerialNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 31034, 12, 1, 1, 2, 1, 1, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdbDevIdSerialNumber.setStatus('current')
sdbDevIdHardwareAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 31034, 12, 1, 1, 2, 1, 1, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(17, 17)).setFixedLength(17)).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdbDevIdHardwareAddress.setStatus('current')
sdbDevIdMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 31034, 12, 1, 1, 2, 1, 1, 1, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(17, 17)).setFixedLength(17)).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdbDevIdMacAddress.setStatus('current')
sdbDevIdUnitAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 31034, 12, 1, 1, 2, 1, 1, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sdbDevIdUnitAddress.setStatus('current')
sdbDevIdName = MibTableColumn((1, 3, 6, 1, 4, 1, 31034, 12, 1, 1, 2, 1, 1, 1, 10), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sdbDevIdName.setStatus('current')
sdbDevIdLocation = MibTableColumn((1, 3, 6, 1, 4, 1, 31034, 12, 1, 1, 2, 1, 1, 1, 11), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sdbDevIdLocation.setStatus('current')
sdbDevIdVanityTag = MibTableColumn((1, 3, 6, 1, 4, 1, 31034, 12, 1, 1, 2, 1, 1, 1, 12), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 20))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sdbDevIdVanityTag.setStatus('current')
sdbDevIdIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 31034, 12, 1, 1, 2, 1, 1, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)))
if mibBuilder.loadTexts: sdbDevIdIndex.setStatus('current')
sdbDevCfTable = MibTable((1, 3, 6, 1, 4, 1, 31034, 12, 1, 1, 2, 2, 1), )
if mibBuilder.loadTexts: sdbDevCfTable.setStatus('current')
sdbDevCfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 31034, 12, 1, 1, 2, 2, 1, 1), ).setIndexNames((0, "SCHLEIFENBAUER-DATABUS-MIB", "sdbDevIdIndex"))
if mibBuilder.loadTexts: sdbDevCfEntry.setStatus('current')
sdbDevCfPhases = MibTableColumn((1, 3, 6, 1, 4, 1, 31034, 12, 1, 1, 2, 2, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 1), ValueRangeConstraint(3, 3), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdbDevCfPhases.setStatus('current')
sdbDevCfOutletsTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 31034, 12, 1, 1, 2, 2, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 48))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdbDevCfOutletsTotal.setStatus('current')
sdbDevCfOutletsSwitched = MibTableColumn((1, 3, 6, 1, 4, 1, 31034, 12, 1, 1, 2, 2, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 48))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdbDevCfOutletsSwitched.setStatus('current')
sdbDevCfOutletsMetered = MibTableColumn((1, 3, 6, 1, 4, 1, 31034, 12, 1, 1, 2, 2, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 48))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdbDevCfOutletsMetered.setStatus('current')
sdbDevCfSensors = MibTableColumn((1, 3, 6, 1, 4, 1, 31034, 12, 1, 1, 2, 2, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdbDevCfSensors.setStatus('current')
sdbDevCfMaximumLoad = MibTableColumn((1, 3, 6, 1, 4, 1, 31034, 12, 1, 1, 2, 2, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(16, 16), ValueRangeConstraint(32, 32), ))).setUnits('A').setMaxAccess("readonly")
if mibBuilder.loadTexts: sdbDevCfMaximumLoad.setStatus('current')
sdbDevSsTable = MibTable((1, 3, 6, 1, 4, 1, 31034, 12, 1, 1, 2, 3, 1), )
if mibBuilder.loadTexts: sdbDevSsTable.setStatus('current')
sdbDevSsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 31034, 12, 1, 1, 2, 3, 1, 1), ).setIndexNames((0, "SCHLEIFENBAUER-DATABUS-MIB", "sdbDevIdIndex"))
if mibBuilder.loadTexts: sdbDevSsEntry.setStatus('current')
sdbDevSsDeviceStatusCode = MibTableColumn((1, 3, 6, 1, 4, 1, 31034, 12, 1, 1, 2, 3, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdbDevSsDeviceStatusCode.setStatus('current')
sdbDevSsTemperatureAlert = MibTableColumn((1, 3, 6, 1, 4, 1, 31034, 12, 1, 1, 2, 3, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdbDevSsTemperatureAlert.setStatus('current')
sdbDevSsInputCurrentAlert = MibTableColumn((1, 3, 6, 1, 4, 1, 31034, 12, 1, 1, 2, 3, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 3))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdbDevSsInputCurrentAlert.setStatus('current')
sdbDevSsOutletCurrentAlert = MibTableColumn((1, 3, 6, 1, 4, 1, 31034, 12, 1, 1, 2, 3, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 48))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdbDevSsOutletCurrentAlert.setStatus('current')
sdbDevSsInputVoltageAlert = MibTableColumn((1, 3, 6, 1, 4, 1, 31034, 12, 1, 1, 2, 3, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 3))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdbDevSsInputVoltageAlert.setStatus('current')
sdbDevSsOutletCurrentDropAlert = MibTableColumn((1, 3, 6, 1, 4, 1, 31034, 12, 1, 1, 2, 3, 1, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 48))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdbDevSsOutletCurrentDropAlert.setStatus('current')
sdbDevSsInputCurrentDropAlert = MibTableColumn((1, 3, 6, 1, 4, 1, 31034, 12, 1, 1, 2, 3, 1, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 3))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdbDevSsInputCurrentDropAlert.setStatus('current')
sdbDevSsSensorChangeAlert = MibTableColumn((1, 3, 6, 1, 4, 1, 31034, 12, 1, 1, 2, 3, 1, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdbDevSsSensorChangeAlert.setStatus('current')
sdbDevSsOutletVoltageDropAlert = MibTableColumn((1, 3, 6, 1, 4, 1, 31034, 12, 1, 1, 2, 3, 1, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 48))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdbDevSsOutletVoltageDropAlert.setStatus('current')
sdbDevRsTable = MibTable((1, 3, 6, 1, 4, 1, 31034, 12, 1, 1, 2, 4, 1), )
if mibBuilder.loadTexts: sdbDevRsTable.setStatus('current')
sdbDevRsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 31034, 12, 1, 1, 2, 4, 1, 1), ).setIndexNames((0, "SCHLEIFENBAUER-DATABUS-MIB", "sdbDevIdIndex"))
if mibBuilder.loadTexts: sdbDevRsEntry.setStatus('current')
sdbDevRsReboot = MibTableColumn((1, 3, 6, 1, 4, 1, 31034, 12, 1, 1, 2, 4, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("idle", 0), ("reboot", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sdbDevRsReboot.setStatus('current')
sdbDevRsResetAlerts = MibTableColumn((1, 3, 6, 1, 4, 1, 31034, 12, 1, 1, 2, 4, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("idle", 0), ("reset", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sdbDevRsResetAlerts.setStatus('current')
sdbDevRsZeroInputKWhSubtotal = MibTableColumn((1, 3, 6, 1, 4, 1, 31034, 12, 1, 1, 2, 4, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("idle", 0), ("zero", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sdbDevRsZeroInputKWhSubtotal.setStatus('current')
sdbDevRsZeroOutletKWhSubtotal = MibTableColumn((1, 3, 6, 1, 4, 1, 31034, 12, 1, 1, 2, 4, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("idle", 0), ("zero", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sdbDevRsZeroOutletKWhSubtotal.setStatus('current')
sdbDevRsResetPeaksAndDips = MibTableColumn((1, 3, 6, 1, 4, 1, 31034, 12, 1, 1, 2, 4, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("idle", 0), ("reset", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sdbDevRsResetPeaksAndDips.setStatus('current')
sdbDevStTable = MibTable((1, 3, 6, 1, 4, 1, 31034, 12, 1, 1, 2, 5, 1), )
if mibBuilder.loadTexts: sdbDevStTable.setStatus('current')
sdbDevStEntry = MibTableRow((1, 3, 6, 1, 4, 1, 31034, 12, 1, 1, 2, 5, 1, 1), ).setIndexNames((0, "SCHLEIFENBAUER-DATABUS-MIB", "sdbDevIdIndex"))
if mibBuilder.loadTexts: sdbDevStEntry.setStatus('current')
sdbDevStAutoResetAlerts = MibTableColumn((1, 3, 6, 1, 4, 1, 31034, 12, 1, 1, 2, 5, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: sdbDevStAutoResetAlerts.setStatus('current')
sdbDevStExtendedNames = MibTableColumn((1, 3, 6, 1, 4, 1, 31034, 12, 1, 1, 2, 5, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sdbDevStExtendedNames.setStatus('current')
sdbDevStPeakDuration = MibTableColumn((1, 3, 6, 1, 4, 1, 31034, 12, 1, 1, 2, 5, 1, 1, 4), MilliSecond().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setUnits('ms').setMaxAccess("readwrite")
if mibBuilder.loadTexts: sdbDevStPeakDuration.setStatus('current')
sdbDevStFixedOutletDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 31034, 12, 1, 1, 2, 5, 1, 1, 5), MilliSecond().subtype(subtypeSpec=ValueRangeConstraint(100, 65535))).setUnits('ms').setMaxAccess("readwrite")
if mibBuilder.loadTexts: sdbDevStFixedOutletDelay.setStatus('current')
sdbDevStPowerSaverMode = MibTableColumn((1, 3, 6, 1, 4, 1, 31034, 12, 1, 1, 2, 5, 1, 1, 6), Second().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(10, 10), ValueRangeConstraint(60, 60), ValueRangeConstraint(120, 120), ValueRangeConstraint(240, 240), ))).setUnits('s').setMaxAccess("readwrite")
if mibBuilder.loadTexts: sdbDevStPowerSaverMode.setStatus('current')
sdbDevStOutletPowerUpMode = MibTableColumn((1, 3, 6, 1, 4, 1, 31034, 12, 1, 1, 2, 5, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("off", 0), ("sameState", 1), ("sameStateDelayed", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sdbDevStOutletPowerUpMode.setStatus('current')
sdbDevStMaximumTemperature = MibTableColumn((1, 3, 6, 1, 4, 1, 31034, 12, 1, 1, 2, 5, 1, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 99))).setUnits('degrees Celsius').setMaxAccess("readwrite")
if mibBuilder.loadTexts: sdbDevStMaximumTemperature.setStatus('current')
sdbDevStDisplayOrientation = MibTableColumn((1, 3, 6, 1, 4, 1, 31034, 12, 1, 1, 2, 5, 1, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("noDisplay", 0), ("verticalDisplayOnTop", 1), ("verticalDisplayUpsideDown", 2), ("horizontalDisplayAtLeft", 3), ("horizontalDisplayAtRight", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sdbDevStDisplayOrientation.setStatus('current')
sdbDevStLocalAlertReset = MibTableColumn((1, 3, 6, 1, 4, 1, 31034, 12, 1, 1, 2, 5, 1, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("notAllowed", 0), ("allowed", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sdbDevStLocalAlertReset.setStatus('current')
sdbDevStCurrentDropDetection = MibTableColumn((1, 3, 6, 1, 4, 1, 31034, 12, 1, 1, 2, 5, 1, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("off", 0), ("inputsOnly", 1), ("outletsOnly", 2), ("inputsAndOutlets", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sdbDevStCurrentDropDetection.setStatus('current')
sdbDevInTable = MibTable((1, 3, 6, 1, 4, 1, 31034, 12, 1, 1, 2, 6, 1), )
if mibBuilder.loadTexts: sdbDevInTable.setStatus('current')
sdbDevInEntry = MibTableRow((1, 3, 6, 1, 4, 1, 31034, 12, 1, 1, 2, 6, 1, 1), ).setIndexNames((0, "SCHLEIFENBAUER-DATABUS-MIB", "sdbDevIdIndex"), (0, "SCHLEIFENBAUER-DATABUS-MIB", "sdbDevInIndex"))
if mibBuilder.loadTexts: sdbDevInEntry.setStatus('current')
sdbDevInIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 31034, 12, 1, 1, 2, 6, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 48)))
if mibBuilder.loadTexts: sdbDevInIndex.setStatus('current')
sdbDevInKWhTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 31034, 12, 1, 1, 2, 6, 1, 1, 2), KiloWattHour()).setUnits('kWh').setMaxAccess("readonly")
if mibBuilder.loadTexts: sdbDevInKWhTotal.setStatus('current')
sdbDevInKWhSubtotal = MibTableColumn((1, 3, 6, 1, 4, 1, 31034, 12, 1, 1, 2, 6, 1, 1, 3), KiloWattHour()).setUnits('kWh').setMaxAccess("readonly")
if mibBuilder.loadTexts: sdbDevInKWhSubtotal.setStatus('current')
sdbDevInPowerFactor = MibTableColumn((1, 3, 6, 1, 4, 1, 31034, 12, 1, 1, 2, 6, 1, 1, 4), DeciPercent()).setUnits('%').setMaxAccess("readonly")
if mibBuilder.loadTexts: sdbDevInPowerFactor.setStatus('current')
sdbDevInActualCurrent = MibTableColumn((1, 3, 6, 1, 4, 1, 31034, 12, 1, 1, 2, 6, 1, 1, 5), DeciAmpere()).setUnits('A').setMaxAccess("readonly")
if mibBuilder.loadTexts: sdbDevInActualCurrent.setStatus('current')
sdbDevInPeakCurrent = MibTableColumn((1, 3, 6, 1, 4, 1, 31034, 12, 1, 1, 2, 6, 1, 1, 6), DeciAmpere()).setUnits('A').setMaxAccess("readonly")
if mibBuilder.loadTexts: sdbDevInPeakCurrent.setStatus('current')
sdbDevInActualVoltage = MibTableColumn((1, 3, 6, 1, 4, 1, 31034, 12, 1, 1, 2, 6, 1, 1, 7), DeciVolt()).setUnits('V').setMaxAccess("readonly")
if mibBuilder.loadTexts: sdbDevInActualVoltage.setStatus('current')
sdbDevInMinVoltage = MibTableColumn((1, 3, 6, 1, 4, 1, 31034, 12, 1, 1, 2, 6, 1, 1, 8), DeciVolt()).setUnits('V').setMaxAccess("readonly")
if mibBuilder.loadTexts: sdbDevInMinVoltage.setStatus('current')
sdbDevInPowerVoltAmpere = MibTableColumn((1, 3, 6, 1, 4, 1, 31034, 12, 1, 1, 2, 6, 1, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 327680))).setUnits('VA').setMaxAccess("readonly")
if mibBuilder.loadTexts: sdbDevInPowerVoltAmpere.setStatus('current')
sdbDevInPowerWatt = MibTableColumn((1, 3, 6, 1, 4, 1, 31034, 12, 1, 1, 2, 6, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 327680))).setUnits('W').setMaxAccess("readonly")
if mibBuilder.loadTexts: sdbDevInPowerWatt.setStatus('current')
sdbDevInMaxAmps = MibTableColumn((1, 3, 6, 1, 4, 1, 31034, 12, 1, 1, 2, 6, 1, 1, 11), DeciAmpere()).setUnits('A').setMaxAccess("readwrite")
if mibBuilder.loadTexts: sdbDevInMaxAmps.setStatus('current')
sdbDevInCTRatio = MibTableColumn((1, 3, 6, 1, 4, 1, 31034, 12, 1, 1, 2, 6, 1, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sdbDevInCTRatio.setStatus('current')
sdbDevInName = MibTableColumn((1, 3, 6, 1, 4, 1, 31034, 12, 1, 1, 2, 6, 1, 1, 13), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 8))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sdbDevInName.setStatus('current')
sdbDevInZeroKWhSubtotal = MibTableColumn((1, 3, 6, 1, 4, 1, 31034, 12, 1, 1, 2, 6, 1, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("idle", 0), ("zero", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sdbDevInZeroKWhSubtotal.setStatus('current')
sdbDevOutTable = MibTable((1, 3, 6, 1, 4, 1, 31034, 12, 1, 1, 2, 7, 1), )
if mibBuilder.loadTexts: sdbDevOutTable.setStatus('current')
sdbDevOutEntry = MibTableRow((1, 3, 6, 1, 4, 1, 31034, 12, 1, 1, 2, 7, 1, 1), ).setIndexNames((0, "SCHLEIFENBAUER-DATABUS-MIB", "sdbDevIdIndex"), (0, "SCHLEIFENBAUER-DATABUS-MIB", "sdbDevOutIndex"))
if mibBuilder.loadTexts: sdbDevOutEntry.setStatus('current')
sdbDevOutIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 31034, 12, 1, 1, 2, 7, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 48)))
if mibBuilder.loadTexts: sdbDevOutIndex.setStatus('current')
sdbDevOutName = MibTableColumn((1, 3, 6, 1, 4, 1, 31034, 12, 1, 1, 2, 7, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 8))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sdbDevOutName.setStatus('current')
sdbDevOutMtTable = MibTable((1, 3, 6, 1, 4, 1, 31034, 12, 1, 1, 2, 7, 2), )
if mibBuilder.loadTexts: sdbDevOutMtTable.setStatus('current')
sdbDevOutMtEntry = MibTableRow((1, 3, 6, 1, 4, 1, 31034, 12, 1, 1, 2, 7, 2, 1), ).setIndexNames((0, "SCHLEIFENBAUER-DATABUS-MIB", "sdbDevIdIndex"), (0, "SCHLEIFENBAUER-DATABUS-MIB", "sdbDevOutMtIndex"))
if mibBuilder.loadTexts: sdbDevOutMtEntry.setStatus('current')
sdbDevOutMtIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 31034, 12, 1, 1, 2, 7, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 48)))
if mibBuilder.loadTexts: sdbDevOutMtIndex.setStatus('current')
sdbDevOutMtKWhTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 31034, 12, 1, 1, 2, 7, 2, 1, 2), KiloWattHour()).setUnits('kWh').setMaxAccess("readonly")
if mibBuilder.loadTexts: sdbDevOutMtKWhTotal.setStatus('current')
sdbDevOutMtKWhSubtotal = MibTableColumn((1, 3, 6, 1, 4, 1, 31034, 12, 1, 1, 2, 7, 2, 1, 3), KiloWattHour()).setUnits('kWh').setMaxAccess("readonly")
if mibBuilder.loadTexts: sdbDevOutMtKWhSubtotal.setStatus('current')
sdbDevOutMtPowerFactor = MibTableColumn((1, 3, 6, 1, 4, 1, 31034, 12, 1, 1, 2, 7, 2, 1, 4), DeciPercent()).setUnits('%').setMaxAccess("readonly")
if mibBuilder.loadTexts: sdbDevOutMtPowerFactor.setStatus('current')
sdbDevOutMtActualCurrent = MibTableColumn((1, 3, 6, 1, 4, 1, 31034, 12, 1, 1, 2, 7, 2, 1, 5), DeciAmpere()).setUnits('A').setMaxAccess("readonly")
if mibBuilder.loadTexts: sdbDevOutMtActualCurrent.setStatus('current')
sdbDevOutMtPeakCurrent = MibTableColumn((1, 3, 6, 1, 4, 1, 31034, 12, 1, 1, 2, 7, 2, 1, 6), DeciAmpere()).setUnits('A').setMaxAccess("readonly")
if mibBuilder.loadTexts: sdbDevOutMtPeakCurrent.setStatus('current')
sdbDevOutMtActualVoltage = MibTableColumn((1, 3, 6, 1, 4, 1, 31034, 12, 1, 1, 2, 7, 2, 1, 7), DeciVolt()).setUnits('V').setMaxAccess("readonly")
if mibBuilder.loadTexts: sdbDevOutMtActualVoltage.setStatus('current')
sdbDevOutMtMaxAmps = MibTableColumn((1, 3, 6, 1, 4, 1, 31034, 12, 1, 1, 2, 7, 2, 1, 8), DeciAmpere()).setUnits('A').setMaxAccess("readwrite")
if mibBuilder.loadTexts: sdbDevOutMtMaxAmps.setStatus('current')
sdbDevOutMtCTRatio = MibTableColumn((1, 3, 6, 1, 4, 1, 31034, 12, 1, 1, 2, 7, 2, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sdbDevOutMtCTRatio.setStatus('current')
sdbDevOutMtPowerVoltAmpere = MibTableColumn((1, 3, 6, 1, 4, 1, 31034, 12, 1, 1, 2, 7, 2, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 327680))).setUnits('VA').setMaxAccess("readonly")
if mibBuilder.loadTexts: sdbDevOutMtPowerVoltAmpere.setStatus('current')
sdbDevOutMtPowerWatt = MibTableColumn((1, 3, 6, 1, 4, 1, 31034, 12, 1, 1, 2, 7, 2, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 327680))).setUnits('W').setMaxAccess("readonly")
if mibBuilder.loadTexts: sdbDevOutMtPowerWatt.setStatus('current')
sdbDevOutSwTable = MibTable((1, 3, 6, 1, 4, 1, 31034, 12, 1, 1, 2, 7, 3), )
if mibBuilder.loadTexts: sdbDevOutSwTable.setStatus('current')
sdbDevOutSwEntry = MibTableRow((1, 3, 6, 1, 4, 1, 31034, 12, 1, 1, 2, 7, 3, 1), ).setIndexNames((0, "SCHLEIFENBAUER-DATABUS-MIB", "sdbDevIdIndex"), (0, "SCHLEIFENBAUER-DATABUS-MIB", "sdbDevOutSwIndex"))
if mibBuilder.loadTexts: sdbDevOutSwEntry.setStatus('current')
sdbDevOutSwIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 31034, 12, 1, 1, 2, 7, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 48)))
if mibBuilder.loadTexts: sdbDevOutSwIndex.setStatus('current')
sdbDevOutSwCurrentState = MibTableColumn((1, 3, 6, 1, 4, 1, 31034, 12, 1, 1, 2, 7, 3, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("on", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sdbDevOutSwCurrentState.setStatus('current')
sdbDevOutSwScheduled = MibTableColumn((1, 3, 6, 1, 4, 1, 31034, 12, 1, 1, 2, 7, 3, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("idle", 0), ("scheduled", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdbDevOutSwScheduled.setStatus('current')
sdbDevOutSwUnlock = MibTableColumn((1, 3, 6, 1, 4, 1, 31034, 12, 1, 1, 2, 7, 3, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("locked", 0), ("unlocked", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sdbDevOutSwUnlock.setStatus('current')
sdbDevOutSwIndividualOutletDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 31034, 12, 1, 1, 2, 7, 3, 1, 5), Second().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setUnits('s').setMaxAccess("readwrite")
if mibBuilder.loadTexts: sdbDevOutSwIndividualOutletDelay.setStatus('current')
sdbDevOutSwReboot = MibTableColumn((1, 3, 6, 1, 4, 1, 31034, 12, 1, 1, 2, 7, 3, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("idle", 0), ("reboot", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sdbDevOutSwReboot.setStatus('current')
sdbDevMeasuresTable = MibTable((1, 3, 6, 1, 4, 1, 31034, 12, 1, 1, 2, 8, 1), )
if mibBuilder.loadTexts: sdbDevMeasuresTable.setStatus('current')
sdbDevMeasuresEntry = MibTableRow((1, 3, 6, 1, 4, 1, 31034, 12, 1, 1, 2, 8, 1, 1), ).setIndexNames((0, "SCHLEIFENBAUER-DATABUS-MIB", "sdbDevIdIndex"))
if mibBuilder.loadTexts: sdbDevMeasuresEntry.setStatus('current')
sdbDevMsIntTemperature = MibTableColumn((1, 3, 6, 1, 4, 1, 31034, 12, 1, 1, 2, 8, 1, 1, 1), DeciCelsius()).setUnits('degrees Celsius').setMaxAccess("readonly")
if mibBuilder.loadTexts: sdbDevMsIntTemperature.setStatus('current')
sdbDevMsExtTemperature = MibTableColumn((1, 3, 6, 1, 4, 1, 31034, 12, 1, 1, 2, 8, 1, 1, 2), DeciCelsius()).setUnits('degrees Celsius').setMaxAccess("readonly")
if mibBuilder.loadTexts: sdbDevMsExtTemperature.setStatus('current')
sdbDevMsIntTemperaturePeak = MibTableColumn((1, 3, 6, 1, 4, 1, 31034, 12, 1, 1, 2, 8, 1, 1, 3), DeciCelsius()).setUnits('degrees Celsius').setMaxAccess("readonly")
if mibBuilder.loadTexts: sdbDevMsIntTemperaturePeak.setStatus('current')
sdbDevMsExtTemperaturePeak = MibTableColumn((1, 3, 6, 1, 4, 1, 31034, 12, 1, 1, 2, 8, 1, 1, 4), DeciCelsius()).setUnits('degrees Celsius').setMaxAccess("readonly")
if mibBuilder.loadTexts: sdbDevMsExtTemperaturePeak.setStatus('current')
sdbDevSnsTable = MibTable((1, 3, 6, 1, 4, 1, 31034, 12, 1, 1, 2, 8, 2), )
if mibBuilder.loadTexts: sdbDevSnsTable.setStatus('current')
sdbDevSnsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 31034, 12, 1, 1, 2, 8, 2, 1), ).setIndexNames((0, "SCHLEIFENBAUER-DATABUS-MIB", "sdbDevIdIndex"), (0, "SCHLEIFENBAUER-DATABUS-MIB", "sdbDevSnsIndex"))
if mibBuilder.loadTexts: sdbDevSnsEntry.setStatus('current')
sdbDevSnsIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 31034, 12, 1, 1, 2, 8, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16)))
if mibBuilder.loadTexts: sdbDevSnsIndex.setStatus('current')
sdbDevSnsType = MibTableColumn((1, 3, 6, 1, 4, 1, 31034, 12, 1, 1, 2, 8, 2, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 1)).setFixedLength(1)).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdbDevSnsType.setStatus('current')
sdbDevSnsValue = MibTableColumn((1, 3, 6, 1, 4, 1, 31034, 12, 1, 1, 2, 8, 2, 1, 3), DeciValue().subtype(subtypeSpec=ValueRangeConstraint(0, 327680))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdbDevSnsValue.setStatus('current')
sdbDevSnsName = MibTableColumn((1, 3, 6, 1, 4, 1, 31034, 12, 1, 1, 2, 8, 2, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 6))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sdbDevSnsName.setStatus('current')
sdbDevSsDeviceStatusCodeChanged = NotificationType((1, 3, 6, 1, 4, 1, 31034, 12, 1, 0, 1))
if mibBuilder.loadTexts: sdbDevSsDeviceStatusCodeChanged.setStatus('current')
sdbDevSsTemperatureAlertDetected = NotificationType((1, 3, 6, 1, 4, 1, 31034, 12, 1, 0, 2))
if mibBuilder.loadTexts: sdbDevSsTemperatureAlertDetected.setStatus('current')
sdbDevSsInputCurrentAlertDetected = NotificationType((1, 3, 6, 1, 4, 1, 31034, 12, 1, 0, 3))
if mibBuilder.loadTexts: sdbDevSsInputCurrentAlertDetected.setStatus('current')
sdbDevSsOutletCurrentAlertDetected = NotificationType((1, 3, 6, 1, 4, 1, 31034, 12, 1, 0, 4))
if mibBuilder.loadTexts: sdbDevSsOutletCurrentAlertDetected.setStatus('current')
sdbDevSsInputVoltageAlertDetected = NotificationType((1, 3, 6, 1, 4, 1, 31034, 12, 1, 0, 5))
if mibBuilder.loadTexts: sdbDevSsInputVoltageAlertDetected.setStatus('current')
sdbDevSsOutletCurrentDropAlertDetected = NotificationType((1, 3, 6, 1, 4, 1, 31034, 12, 1, 0, 6))
if mibBuilder.loadTexts: sdbDevSsOutletCurrentDropAlertDetected.setStatus('current')
sdbDevSsInputCurrentDropAlertDetected = NotificationType((1, 3, 6, 1, 4, 1, 31034, 12, 1, 0, 7))
if mibBuilder.loadTexts: sdbDevSsInputCurrentDropAlertDetected.setStatus('current')
sdbDevSsSensorChangeAlertDetected = NotificationType((1, 3, 6, 1, 4, 1, 31034, 12, 1, 0, 8))
if mibBuilder.loadTexts: sdbDevSsSensorChangeAlertDetected.setStatus('current')
sdbMgmtStsRingStateChanged = NotificationType((1, 3, 6, 1, 4, 1, 31034, 12, 1, 0, 9))
if mibBuilder.loadTexts: sdbMgmtStsRingStateChanged.setStatus('current')
sdbDevSsOutletVoltageDropAlertDetected = NotificationType((1, 3, 6, 1, 4, 1, 31034, 12, 1, 0, 10))
if mibBuilder.loadTexts: sdbDevSsOutletVoltageDropAlertDetected.setStatus('current')
sdbMIBCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 31034, 12, 1, 2, 1, 1)).setObjects(("SCHLEIFENBAUER-DATABUS-MIB", "sdbMIBNotificationGroup"), ("SCHLEIFENBAUER-DATABUS-MIB", "sdbMIBDevSensorGroup"), ("SCHLEIFENBAUER-DATABUS-MIB", "sdbMIBDevOutGroup"), ("SCHLEIFENBAUER-DATABUS-MIB", "sdbMIBDevOutMtGroup"), ("SCHLEIFENBAUER-DATABUS-MIB", "sdbMIBDevOutSwGroup"), ("SCHLEIFENBAUER-DATABUS-MIB", "sdbMIBDevInGroup"), ("SCHLEIFENBAUER-DATABUS-MIB", "sdbMIBDevStGroup"), ("SCHLEIFENBAUER-DATABUS-MIB", "sdbMIBDevSsGroup"), ("SCHLEIFENBAUER-DATABUS-MIB", "sdbMIBDevCfGroup"), ("SCHLEIFENBAUER-DATABUS-MIB", "sdbMIBDevIdGroup"), ("SCHLEIFENBAUER-DATABUS-MIB", "sdbMIBDevRsGroup"), ("SCHLEIFENBAUER-DATABUS-MIB", "sdbMIBMgmtStatusGroup"), ("SCHLEIFENBAUER-DATABUS-MIB", "sdbMIBMgmtControlGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    sdbMIBCompliance = sdbMIBCompliance.setStatus('current')
sdbMIBNotificationGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 31034, 12, 1, 2, 2, 1)).setObjects(("SCHLEIFENBAUER-DATABUS-MIB", "sdbDevSsDeviceStatusCodeChanged"), ("SCHLEIFENBAUER-DATABUS-MIB", "sdbDevSsTemperatureAlertDetected"), ("SCHLEIFENBAUER-DATABUS-MIB", "sdbDevSsInputCurrentAlertDetected"), ("SCHLEIFENBAUER-DATABUS-MIB", "sdbDevSsOutletCurrentAlertDetected"), ("SCHLEIFENBAUER-DATABUS-MIB", "sdbDevSsInputVoltageAlertDetected"), ("SCHLEIFENBAUER-DATABUS-MIB", "sdbDevSsOutletCurrentDropAlertDetected"), ("SCHLEIFENBAUER-DATABUS-MIB", "sdbDevSsInputCurrentDropAlertDetected"), ("SCHLEIFENBAUER-DATABUS-MIB", "sdbDevSsSensorChangeAlertDetected"), ("SCHLEIFENBAUER-DATABUS-MIB", "sdbMgmtStsRingStateChanged"), ("SCHLEIFENBAUER-DATABUS-MIB", "sdbDevSsOutletVoltageDropAlertDetected"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    sdbMIBNotificationGroup = sdbMIBNotificationGroup.setStatus('current')
sdbMIBDevIdGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 31034, 12, 1, 2, 2, 3)).setObjects(("SCHLEIFENBAUER-DATABUS-MIB", "sdbDevIdSPDMVersion"), ("SCHLEIFENBAUER-DATABUS-MIB", "sdbDevIdFirmwareVersion"), ("SCHLEIFENBAUER-DATABUS-MIB", "sdbDevIdSalesOrderNumber"), ("SCHLEIFENBAUER-DATABUS-MIB", "sdbDevIdProductId"), ("SCHLEIFENBAUER-DATABUS-MIB", "sdbDevIdSerialNumber"), ("SCHLEIFENBAUER-DATABUS-MIB", "sdbDevIdHardwareAddress"), ("SCHLEIFENBAUER-DATABUS-MIB", "sdbDevIdUnitAddress"), ("SCHLEIFENBAUER-DATABUS-MIB", "sdbDevIdName"), ("SCHLEIFENBAUER-DATABUS-MIB", "sdbDevIdLocation"), ("SCHLEIFENBAUER-DATABUS-MIB", "sdbDevIdVanityTag"), ("SCHLEIFENBAUER-DATABUS-MIB", "sdbDevIdMacAddress"), ("SCHLEIFENBAUER-DATABUS-MIB", "sdbDevIdBuildNumber"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    sdbMIBDevIdGroup = sdbMIBDevIdGroup.setStatus('current')
sdbMIBDevCfGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 31034, 12, 1, 2, 2, 4)).setObjects(("SCHLEIFENBAUER-DATABUS-MIB", "sdbDevCfPhases"), ("SCHLEIFENBAUER-DATABUS-MIB", "sdbDevCfOutletsTotal"), ("SCHLEIFENBAUER-DATABUS-MIB", "sdbDevCfOutletsSwitched"), ("SCHLEIFENBAUER-DATABUS-MIB", "sdbDevCfOutletsMetered"), ("SCHLEIFENBAUER-DATABUS-MIB", "sdbDevCfMaximumLoad"), ("SCHLEIFENBAUER-DATABUS-MIB", "sdbDevCfSensors"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    sdbMIBDevCfGroup = sdbMIBDevCfGroup.setStatus('current')
sdbMIBDevSsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 31034, 12, 1, 2, 2, 5)).setObjects(("SCHLEIFENBAUER-DATABUS-MIB", "sdbDevSsDeviceStatusCode"), ("SCHLEIFENBAUER-DATABUS-MIB", "sdbDevSsTemperatureAlert"), ("SCHLEIFENBAUER-DATABUS-MIB", "sdbDevSsInputCurrentAlert"), ("SCHLEIFENBAUER-DATABUS-MIB", "sdbDevSsOutletCurrentAlert"), ("SCHLEIFENBAUER-DATABUS-MIB", "sdbDevSsInputVoltageAlert"), ("SCHLEIFENBAUER-DATABUS-MIB", "sdbDevSsOutletCurrentDropAlert"), ("SCHLEIFENBAUER-DATABUS-MIB", "sdbDevSsInputCurrentDropAlert"), ("SCHLEIFENBAUER-DATABUS-MIB", "sdbDevSsSensorChangeAlert"), ("SCHLEIFENBAUER-DATABUS-MIB", "sdbDevSsOutletVoltageDropAlert"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    sdbMIBDevSsGroup = sdbMIBDevSsGroup.setStatus('current')
sdbMIBDevRsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 31034, 12, 1, 2, 2, 6)).setObjects(("SCHLEIFENBAUER-DATABUS-MIB", "sdbDevRsResetAlerts"), ("SCHLEIFENBAUER-DATABUS-MIB", "sdbDevRsResetPeaksAndDips"), ("SCHLEIFENBAUER-DATABUS-MIB", "sdbDevRsReboot"), ("SCHLEIFENBAUER-DATABUS-MIB", "sdbDevRsZeroInputKWhSubtotal"), ("SCHLEIFENBAUER-DATABUS-MIB", "sdbDevRsZeroOutletKWhSubtotal"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    sdbMIBDevRsGroup = sdbMIBDevRsGroup.setStatus('current')
sdbMIBDevStGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 31034, 12, 1, 2, 2, 7)).setObjects(("SCHLEIFENBAUER-DATABUS-MIB", "sdbDevStAutoResetAlerts"), ("SCHLEIFENBAUER-DATABUS-MIB", "sdbDevStExtendedNames"), ("SCHLEIFENBAUER-DATABUS-MIB", "sdbDevStPeakDuration"), ("SCHLEIFENBAUER-DATABUS-MIB", "sdbDevStLocalAlertReset"), ("SCHLEIFENBAUER-DATABUS-MIB", "sdbDevStFixedOutletDelay"), ("SCHLEIFENBAUER-DATABUS-MIB", "sdbDevStPowerSaverMode"), ("SCHLEIFENBAUER-DATABUS-MIB", "sdbDevStOutletPowerUpMode"), ("SCHLEIFENBAUER-DATABUS-MIB", "sdbDevStMaximumTemperature"), ("SCHLEIFENBAUER-DATABUS-MIB", "sdbDevStDisplayOrientation"), ("SCHLEIFENBAUER-DATABUS-MIB", "sdbDevStCurrentDropDetection"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    sdbMIBDevStGroup = sdbMIBDevStGroup.setStatus('current')
sdbMIBDevInGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 31034, 12, 1, 2, 2, 8)).setObjects(("SCHLEIFENBAUER-DATABUS-MIB", "sdbDevInKWhTotal"), ("SCHLEIFENBAUER-DATABUS-MIB", "sdbDevInKWhSubtotal"), ("SCHLEIFENBAUER-DATABUS-MIB", "sdbDevInPowerFactor"), ("SCHLEIFENBAUER-DATABUS-MIB", "sdbDevInActualCurrent"), ("SCHLEIFENBAUER-DATABUS-MIB", "sdbDevInPeakCurrent"), ("SCHLEIFENBAUER-DATABUS-MIB", "sdbDevInActualVoltage"), ("SCHLEIFENBAUER-DATABUS-MIB", "sdbDevInMinVoltage"), ("SCHLEIFENBAUER-DATABUS-MIB", "sdbDevInPowerVoltAmpere"), ("SCHLEIFENBAUER-DATABUS-MIB", "sdbDevInPowerWatt"), ("SCHLEIFENBAUER-DATABUS-MIB", "sdbDevInMaxAmps"), ("SCHLEIFENBAUER-DATABUS-MIB", "sdbDevInCTRatio"), ("SCHLEIFENBAUER-DATABUS-MIB", "sdbDevInName"), ("SCHLEIFENBAUER-DATABUS-MIB", "sdbDevInZeroKWhSubtotal"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    sdbMIBDevInGroup = sdbMIBDevInGroup.setStatus('current')
sdbMIBDevOutGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 31034, 12, 1, 2, 2, 9)).setObjects(("SCHLEIFENBAUER-DATABUS-MIB", "sdbDevOutName"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    sdbMIBDevOutGroup = sdbMIBDevOutGroup.setStatus('current')
sdbMIBDevOutMtGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 31034, 12, 1, 2, 2, 10)).setObjects(("SCHLEIFENBAUER-DATABUS-MIB", "sdbDevOutMtKWhTotal"), ("SCHLEIFENBAUER-DATABUS-MIB", "sdbDevOutMtKWhSubtotal"), ("SCHLEIFENBAUER-DATABUS-MIB", "sdbDevOutMtPowerFactor"), ("SCHLEIFENBAUER-DATABUS-MIB", "sdbDevOutMtActualCurrent"), ("SCHLEIFENBAUER-DATABUS-MIB", "sdbDevOutMtPeakCurrent"), ("SCHLEIFENBAUER-DATABUS-MIB", "sdbDevOutMtActualVoltage"), ("SCHLEIFENBAUER-DATABUS-MIB", "sdbDevOutMtMaxAmps"), ("SCHLEIFENBAUER-DATABUS-MIB", "sdbDevOutMtCTRatio"), ("SCHLEIFENBAUER-DATABUS-MIB", "sdbDevOutMtPowerVoltAmpere"), ("SCHLEIFENBAUER-DATABUS-MIB", "sdbDevOutMtPowerWatt"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    sdbMIBDevOutMtGroup = sdbMIBDevOutMtGroup.setStatus('current')
sdbMIBDevOutSwGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 31034, 12, 1, 2, 2, 11)).setObjects(("SCHLEIFENBAUER-DATABUS-MIB", "sdbDevOutSwCurrentState"), ("SCHLEIFENBAUER-DATABUS-MIB", "sdbDevOutSwScheduled"), ("SCHLEIFENBAUER-DATABUS-MIB", "sdbDevOutSwUnlock"), ("SCHLEIFENBAUER-DATABUS-MIB", "sdbDevOutSwIndividualOutletDelay"), ("SCHLEIFENBAUER-DATABUS-MIB", "sdbDevOutSwReboot"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    sdbMIBDevOutSwGroup = sdbMIBDevOutSwGroup.setStatus('current')
sdbMIBDevSensorGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 31034, 12, 1, 2, 2, 12)).setObjects(("SCHLEIFENBAUER-DATABUS-MIB", "sdbDevSnsType"), ("SCHLEIFENBAUER-DATABUS-MIB", "sdbDevSnsValue"), ("SCHLEIFENBAUER-DATABUS-MIB", "sdbDevSnsName"), ("SCHLEIFENBAUER-DATABUS-MIB", "sdbDevMsIntTemperature"), ("SCHLEIFENBAUER-DATABUS-MIB", "sdbDevMsExtTemperature"), ("SCHLEIFENBAUER-DATABUS-MIB", "sdbDevMsIntTemperaturePeak"), ("SCHLEIFENBAUER-DATABUS-MIB", "sdbDevMsExtTemperaturePeak"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    sdbMIBDevSensorGroup = sdbMIBDevSensorGroup.setStatus('current')
sdbMIBMgmtStatusGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 31034, 12, 1, 2, 2, 13)).setObjects(("SCHLEIFENBAUER-DATABUS-MIB", "sdbMgmtStsDevices"), ("SCHLEIFENBAUER-DATABUS-MIB", "sdbMgmtStsAddressableDevices"), ("SCHLEIFENBAUER-DATABUS-MIB", "sdbMgmtStsNewDevices"), ("SCHLEIFENBAUER-DATABUS-MIB", "sdbMgmtStsDuplicateDevices"), ("SCHLEIFENBAUER-DATABUS-MIB", "sdbMgmtStsRingState"), ("SCHLEIFENBAUER-DATABUS-MIB", "sdbMgmtStsRingBreachIndex"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    sdbMIBMgmtStatusGroup = sdbMIBMgmtStatusGroup.setStatus('current')
sdbMIBMgmtControlGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 31034, 12, 1, 2, 2, 14)).setObjects(("SCHLEIFENBAUER-DATABUS-MIB", "sdbMgmtCtrlScan"), ("SCHLEIFENBAUER-DATABUS-MIB", "sdbMgmtCtrlRenumberAllFromN"), ("SCHLEIFENBAUER-DATABUS-MIB", "sdbMgmtCtrlRenumberZeros"), ("SCHLEIFENBAUER-DATABUS-MIB", "sdbMgmtCtrlDevUnitAddress"), ("SCHLEIFENBAUER-DATABUS-MIB", "sdbMgmtCtrlDevHardwareAddress"), ("SCHLEIFENBAUER-DATABUS-MIB", "sdbMgmtCtrlDevIsNew"), ("SCHLEIFENBAUER-DATABUS-MIB", "sdbMgmtCtrlDevIsDuplicate"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    sdbMIBMgmtControlGroup = sdbMIBMgmtControlGroup.setStatus('current')
mibBuilder.exportSymbols("SCHLEIFENBAUER-DATABUS-MIB", schleifenbauerDatabusMIB=schleifenbauerDatabusMIB, sdbDevSnsIndex=sdbDevSnsIndex, sdbDevOutSwUnlock=sdbDevOutSwUnlock, sdbDevOutMtEntry=sdbDevOutMtEntry, sdbDevInActualCurrent=sdbDevInActualCurrent, sdbDevOutMtPeakCurrent=sdbDevOutMtPeakCurrent, sdbMgmtCtrlRenumberAllFromN=sdbMgmtCtrlRenumberAllFromN, sdbDevice=sdbDevice, sdbDevOutName=sdbDevOutName, sdbDevCfSensors=sdbDevCfSensors, sdbMgmtCtrlDevHardwareAddress=sdbMgmtCtrlDevHardwareAddress, sdbDevIdIndex=sdbDevIdIndex, sdbMgmtStsRingState=sdbMgmtStsRingState, Second=Second, sdbMgmtStsRingStateChanged=sdbMgmtStsRingStateChanged, sdbDevSsOutletVoltageDropAlertDetected=sdbDevSsOutletVoltageDropAlertDetected, sdbDevOutMtActualVoltage=sdbDevOutMtActualVoltage, sdbDevRsReboot=sdbDevRsReboot, sdbDevIdSerialNumber=sdbDevIdSerialNumber, sdbDevCfOutletsMetered=sdbDevCfOutletsMetered, sdbDevInPeakCurrent=sdbDevInPeakCurrent, sdbDevRsResetPeaksAndDips=sdbDevRsResetPeaksAndDips, sdbDevOutIndex=sdbDevOutIndex, sdbDevOutMtKWhSubtotal=sdbDevOutMtKWhSubtotal, sdbMgmtCtrlDevIsDuplicate=sdbMgmtCtrlDevIsDuplicate, sdbMIBDevIdGroup=sdbMIBDevIdGroup, sdbMgmtCtrlDevUnitAddress=sdbMgmtCtrlDevUnitAddress, sdbDevRsTable=sdbDevRsTable, sdbDevInPowerFactor=sdbDevInPowerFactor, sdbDevSsTable=sdbDevSsTable, DeciVolt=DeciVolt, sdbDevSsDeviceStatusCode=sdbDevSsDeviceStatusCode, sdbDevIdLocation=sdbDevIdLocation, sdbDevIdentification=sdbDevIdentification, sdbMIBConformance=sdbMIBConformance, sdbDevOutMtIndex=sdbDevOutMtIndex, sdbDevInKWhSubtotal=sdbDevInKWhSubtotal, sdbDevSsDeviceStatusCodeChanged=sdbDevSsDeviceStatusCodeChanged, sdbMIBCompliances=sdbMIBCompliances, sdbDevOutlet=sdbDevOutlet, sdbDevInMinVoltage=sdbDevInMinVoltage, sdbDevStExtendedNames=sdbDevStExtendedNames, sdbDevOutMtMaxAmps=sdbDevOutMtMaxAmps, sdbMIBCompliance=sdbMIBCompliance, sdbMgmt=sdbMgmt, sdbDevIdFirmwareVersion=sdbDevIdFirmwareVersion, sdbDevIdSalesOrderNumber=sdbDevIdSalesOrderNumber, sdbDevInIndex=sdbDevInIndex, sdbDevCfEntry=sdbDevCfEntry, sdbMIBObjects=sdbMIBObjects, sdbDevIdSPDMVersion=sdbDevIdSPDMVersion, sdbDevMsIntTemperature=sdbDevMsIntTemperature, sdbMgmtStsDuplicateDevices=sdbMgmtStsDuplicateDevices, sdbDevIdTable=sdbDevIdTable, sdbDevStCurrentDropDetection=sdbDevStCurrentDropDetection, sdbDevOutSwReboot=sdbDevOutSwReboot, sdbDevMeasuresEntry=sdbDevMeasuresEntry, sdbMgmtCtrlDevIsNew=sdbMgmtCtrlDevIsNew, sdbDevStPeakDuration=sdbDevStPeakDuration, sdbDevSsInputCurrentAlertDetected=sdbDevSsInputCurrentAlertDetected, sdbMIBDevStGroup=sdbMIBDevStGroup, sdbDevSystemStatus=sdbDevSystemStatus, sdbDevOutSwScheduled=sdbDevOutSwScheduled, sdbDevInPowerVoltAmpere=sdbDevInPowerVoltAmpere, sdbMIBDevInGroup=sdbMIBDevInGroup, sdbDevStFixedOutletDelay=sdbDevStFixedOutletDelay, sdbDevCfMaximumLoad=sdbDevCfMaximumLoad, sdbDevIdUnitAddress=sdbDevIdUnitAddress, sdbDevSnsName=sdbDevSnsName, sdbDevSsSensorChangeAlertDetected=sdbDevSsSensorChangeAlertDetected, sdbDevSsTemperatureAlertDetected=sdbDevSsTemperatureAlertDetected, sdbDevOutMtActualCurrent=sdbDevOutMtActualCurrent, sdbDevStMaximumTemperature=sdbDevStMaximumTemperature, sdbMgmtCtrlDevicesEntry=sdbMgmtCtrlDevicesEntry, sdbMgmtCtrlDevIndex=sdbMgmtCtrlDevIndex, sdbDevSsInputVoltageAlert=sdbDevSsInputVoltageAlert, sdbMgmtControl=sdbMgmtControl, sdbMgmtCtrlDevicesTable=sdbMgmtCtrlDevicesTable, sdbDevStLocalAlertReset=sdbDevStLocalAlertReset, sdbDevSettings=sdbDevSettings, sdbDevOutSwIndex=sdbDevOutSwIndex, sdbDevStDisplayOrientation=sdbDevStDisplayOrientation, sdbDevInEntry=sdbDevInEntry, sdbDevOutMtKWhTotal=sdbDevOutMtKWhTotal, DeciCelsius=DeciCelsius, sdbDevIdMacAddress=sdbDevIdMacAddress, sdbDevOutTable=sdbDevOutTable, sdbMgmtStsDevices=sdbMgmtStsDevices, sdbDevIdBuildNumber=sdbDevIdBuildNumber, sdbDevInput=sdbDevInput, sdbDevSnsTable=sdbDevSnsTable, sdbDevOutMtCTRatio=sdbDevOutMtCTRatio, sdbMIBMgmtControlGroup=sdbMIBMgmtControlGroup, sdbMIBMgmtStatusGroup=sdbMIBMgmtStatusGroup, sdbDevIdName=sdbDevIdName, sdbDevCfPhases=sdbDevCfPhases, sdbMIBDevRsGroup=sdbMIBDevRsGroup, sdbDevOutMtTable=sdbDevOutMtTable, sdbDevSsInputCurrentAlert=sdbDevSsInputCurrentAlert, sdbDevConfiguration=sdbDevConfiguration, sdbDevReset=sdbDevReset, sdbDevRsResetAlerts=sdbDevRsResetAlerts, sdbDevIdHardwareAddress=sdbDevIdHardwareAddress, sdbDevRsZeroInputKWhSubtotal=sdbDevRsZeroInputKWhSubtotal, sdbDevMsIntTemperaturePeak=sdbDevMsIntTemperaturePeak, sdbDevStPowerSaverMode=sdbDevStPowerSaverMode, sdbDevSsOutletCurrentDropAlertDetected=sdbDevSsOutletCurrentDropAlertDetected, sdbDevOutSwCurrentState=sdbDevOutSwCurrentState, sdbMgmtStsAddressableDevices=sdbMgmtStsAddressableDevices, DeciValue=DeciValue, sdbDevSnsEntry=sdbDevSnsEntry, sdbMgmtStsRingBreachIndex=sdbMgmtStsRingBreachIndex, sdbDevOutEntry=sdbDevOutEntry, sdbMIBDevOutSwGroup=sdbMIBDevOutSwGroup, sdbDevSsOutletCurrentAlertDetected=sdbDevSsOutletCurrentAlertDetected, sdbDevSsOutletCurrentDropAlert=sdbDevSsOutletCurrentDropAlert, sdbDevOutSwTable=sdbDevOutSwTable, sdbDevInTable=sdbDevInTable, sdbDevSsSensorChangeAlert=sdbDevSsSensorChangeAlert, sdbMIBDevOutMtGroup=sdbMIBDevOutMtGroup, sdbMgmtStatus=sdbMgmtStatus, sdbDevOutMtPowerWatt=sdbDevOutMtPowerWatt, sdbDevSnsValue=sdbDevSnsValue, sdbMgmtCtrlRenumberZeros=sdbMgmtCtrlRenumberZeros, sdbDevSsEntry=sdbDevSsEntry, sdbDevSsTemperatureAlert=sdbDevSsTemperatureAlert, sdbMIBDevSsGroup=sdbMIBDevSsGroup, sdbDevStAutoResetAlerts=sdbDevStAutoResetAlerts, DeciAmpere=DeciAmpere, sdbDevSsInputCurrentDropAlert=sdbDevSsInputCurrentDropAlert, sdbDevSsInputVoltageAlertDetected=sdbDevSsInputVoltageAlertDetected, sdbDevMsExtTemperaturePeak=sdbDevMsExtTemperaturePeak, sdbMIBGroups=sdbMIBGroups, DeciPercent=DeciPercent, sdbDevInZeroKWhSubtotal=sdbDevInZeroKWhSubtotal, sdbDevSsInputCurrentDropAlertDetected=sdbDevSsInputCurrentDropAlertDetected, sdbDevSsOutletCurrentAlert=sdbDevSsOutletCurrentAlert, sdbDevCfOutletsSwitched=sdbDevCfOutletsSwitched, sdbMgmtCtrlScan=sdbMgmtCtrlScan, sdbMIBDevOutGroup=sdbMIBDevOutGroup, sdbDevInPowerWatt=sdbDevInPowerWatt, sdbMgmtStsNewDevices=sdbMgmtStsNewDevices, sdbDevInActualVoltage=sdbDevInActualVoltage, sdbDevCfOutletsTotal=sdbDevCfOutletsTotal, sdbDevIdVanityTag=sdbDevIdVanityTag, sdbDevInKWhTotal=sdbDevInKWhTotal, sdbDevIdProductId=sdbDevIdProductId, sdbDevInName=sdbDevInName, sdbDevInCTRatio=sdbDevInCTRatio, sdbMIBDevSensorGroup=sdbMIBDevSensorGroup, sdbDevOutSwEntry=sdbDevOutSwEntry, sdbDevSensor=sdbDevSensor, sdbDevSnsType=sdbDevSnsType, sdbDevSsOutletVoltageDropAlert=sdbDevSsOutletVoltageDropAlert, sdbDevIdEntry=sdbDevIdEntry, sdbDevStOutletPowerUpMode=sdbDevStOutletPowerUpMode, sdbDevStTable=sdbDevStTable, sdbDevRsEntry=sdbDevRsEntry, PYSNMP_MODULE_ID=schleifenbauerDatabusMIB, sdbDevMsExtTemperature=sdbDevMsExtTemperature, sdbDevCfTable=sdbDevCfTable, sdbDevMeasuresTable=sdbDevMeasuresTable, MilliSecond=MilliSecond, sdbDevOutMtPowerVoltAmpere=sdbDevOutMtPowerVoltAmpere, sdbDevRsZeroOutletKWhSubtotal=sdbDevRsZeroOutletKWhSubtotal, sdbMIBDevCfGroup=sdbMIBDevCfGroup, sdbMIBNotifications=sdbMIBNotifications, KiloWattHour=KiloWattHour, sdbDevInMaxAmps=sdbDevInMaxAmps, sdbDevStEntry=sdbDevStEntry, sdbMIBNotificationGroup=sdbMIBNotificationGroup, sdbDevOutSwIndividualOutletDelay=sdbDevOutSwIndividualOutletDelay, sdbDevOutMtPowerFactor=sdbDevOutMtPowerFactor)
