#
# PySNMP MIB module A3COM-HUAWEI-DSP-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/A3COM-HUAWEI-DSP-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 16:49:51 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
h3cCommon, = mibBuilder.importSymbols("A3COM-HUAWEI-OID-MIB", "h3cCommon")
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, SingleValueConstraint, ConstraintsIntersection, ValueSizeConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "SingleValueConstraint", "ConstraintsIntersection", "ValueSizeConstraint", "ConstraintsUnion")
PhysicalIndex, = mibBuilder.importSymbols("ENTITY-MIB", "PhysicalIndex")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
TimeTicks, Counter64, Integer32, ModuleIdentity, Unsigned32, Counter32, IpAddress, MibScalar, MibTable, MibTableRow, MibTableColumn, Bits, MibIdentifier, iso, ObjectIdentity, Gauge32, NotificationType = mibBuilder.importSymbols("SNMPv2-SMI", "TimeTicks", "Counter64", "Integer32", "ModuleIdentity", "Unsigned32", "Counter32", "IpAddress", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Bits", "MibIdentifier", "iso", "ObjectIdentity", "Gauge32", "NotificationType")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
h3cDSP = ModuleIdentity((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 89))
h3cDSP.setRevisions(('2008-01-16 13:00',))
if mibBuilder.loadTexts: h3cDSP.setLastUpdated('200801161300Z')
if mibBuilder.loadTexts: h3cDSP.setOrganization('Hangzhou H3C Technologies Co., Ltd.')
h3cVPMStatusTable = MibTable((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 89, 1), )
if mibBuilder.loadTexts: h3cVPMStatusTable.setStatus('current')
h3cVPMStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 89, 1, 1), ).setIndexNames((0, "A3COM-HUAWEI-DSP-MIB", "h3cVPMIndex"))
if mibBuilder.loadTexts: h3cVPMStatusEntry.setStatus('current')
h3cVPMIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 89, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 64))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: h3cVPMIndex.setStatus('current')
h3cVPMEnPhysicalIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 89, 1, 1, 2), PhysicalIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cVPMEnPhysicalIndex.setStatus('current')
h3cVPMState = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 89, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("normal", 1), ("warning", 2), ("fatal", 3), ("offLine", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cVPMState.setStatus('current')
h3cVPMResourceUtilization = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 89, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cVPMResourceUtilization.setStatus('current')
h3cVPMHiWaterUtilization = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 89, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cVPMHiWaterUtilization.setStatus('current')
h3cVPMMaxChannel = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 89, 1, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cVPMMaxChannel.setStatus('current')
h3cDSPStatusTable = MibTable((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 89, 2), )
if mibBuilder.loadTexts: h3cDSPStatusTable.setStatus('current')
h3cDSPStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 89, 2, 1), ).setIndexNames((0, "A3COM-HUAWEI-DSP-MIB", "h3cDSPIndex"))
if mibBuilder.loadTexts: h3cDSPStatusEntry.setStatus('current')
h3cDSPIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 89, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 256))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: h3cDSPIndex.setStatus('current')
h3cDSPVPMIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 89, 2, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cDSPVPMIndex.setStatus('current')
h3cDSPEnPhysicalIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 89, 2, 1, 3), PhysicalIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cDSPEnPhysicalIndex.setStatus('current')
h3cDSPResetTime = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 89, 2, 1, 4), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cDSPResetTime.setStatus('current')
h3cDSPMaxChannel = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 89, 2, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cDSPMaxChannel.setStatus('current')
h3cDSPState = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 89, 2, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 3, 4))).clone(namedValues=NamedValues(("normal", 1), ("fatal", 3), ("offLine", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cDSPState.setStatus('current')
h3cDSPInUseChannel = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 89, 2, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cDSPInUseChannel.setStatus('current')
h3cDSPTrap = MibIdentifier((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 89, 3))
h3cDSPTrapPrex = MibIdentifier((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 89, 3, 0))
h3cVPMStateChange = NotificationType((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 89, 3, 0, 1)).setObjects(("A3COM-HUAWEI-DSP-MIB", "h3cVPMIndex"), ("A3COM-HUAWEI-DSP-MIB", "h3cVPMEnPhysicalIndex"), ("A3COM-HUAWEI-DSP-MIB", "h3cVPMState"))
if mibBuilder.loadTexts: h3cVPMStateChange.setStatus('current')
h3cDSPStateChange = NotificationType((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 89, 3, 0, 2)).setObjects(("A3COM-HUAWEI-DSP-MIB", "h3cDSPIndex"), ("A3COM-HUAWEI-DSP-MIB", "h3cDSPVPMIndex"), ("A3COM-HUAWEI-DSP-MIB", "h3cDSPEnPhysicalIndex"), ("A3COM-HUAWEI-DSP-MIB", "h3cDSPState"))
if mibBuilder.loadTexts: h3cDSPStateChange.setStatus('current')
mibBuilder.exportSymbols("A3COM-HUAWEI-DSP-MIB", h3cDSPState=h3cDSPState, h3cVPMIndex=h3cVPMIndex, h3cVPMResourceUtilization=h3cVPMResourceUtilization, h3cDSPInUseChannel=h3cDSPInUseChannel, h3cDSPStateChange=h3cDSPStateChange, h3cDSPStatusEntry=h3cDSPStatusEntry, h3cDSPEnPhysicalIndex=h3cDSPEnPhysicalIndex, h3cVPMEnPhysicalIndex=h3cVPMEnPhysicalIndex, h3cDSPIndex=h3cDSPIndex, h3cVPMHiWaterUtilization=h3cVPMHiWaterUtilization, h3cDSPTrapPrex=h3cDSPTrapPrex, PYSNMP_MODULE_ID=h3cDSP, h3cDSP=h3cDSP, h3cDSPStatusTable=h3cDSPStatusTable, h3cDSPVPMIndex=h3cDSPVPMIndex, h3cVPMStatusEntry=h3cVPMStatusEntry, h3cVPMMaxChannel=h3cVPMMaxChannel, h3cVPMStatusTable=h3cVPMStatusTable, h3cDSPMaxChannel=h3cDSPMaxChannel, h3cVPMStateChange=h3cVPMStateChange, h3cDSPResetTime=h3cDSPResetTime, h3cVPMState=h3cVPMState, h3cDSPTrap=h3cDSPTrap)
