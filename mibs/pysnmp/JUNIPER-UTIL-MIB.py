#
# PySNMP MIB module JUNIPER-UTIL-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/JUNIPER-UTIL-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:50:31 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ValueSizeConstraint, ConstraintsUnion, SingleValueConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ValueSizeConstraint", "ConstraintsUnion", "SingleValueConstraint", "ConstraintsIntersection")
jnxUtilMibRoot, = mibBuilder.importSymbols("JUNIPER-SMI", "jnxUtilMibRoot")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
NotificationType, MibIdentifier, iso, Unsigned32, ModuleIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, ObjectIdentity, TimeTicks, Counter32, Counter64, Bits, IpAddress, Gauge32, Integer32 = mibBuilder.importSymbols("SNMPv2-SMI", "NotificationType", "MibIdentifier", "iso", "Unsigned32", "ModuleIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ObjectIdentity", "TimeTicks", "Counter32", "Counter64", "Bits", "IpAddress", "Gauge32", "Integer32")
TextualConvention, DisplayString, DateAndTime = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString", "DateAndTime")
jnxUtil = ModuleIdentity((1, 3, 6, 1, 4, 1, 2636, 3, 47, 1))
jnxUtil.setRevisions(('2007-01-01 00:00',))
if mibBuilder.loadTexts: jnxUtil.setLastUpdated('200701010000Z')
if mibBuilder.loadTexts: jnxUtil.setOrganization('Juniper Networks, Inc.')
jnxUtilData = MibIdentifier((1, 3, 6, 1, 4, 1, 2636, 3, 47, 1, 1))
jnxUtilCounter32Table = MibTable((1, 3, 6, 1, 4, 1, 2636, 3, 47, 1, 1, 1), )
if mibBuilder.loadTexts: jnxUtilCounter32Table.setStatus('current')
jnxUtilCounter32Entry = MibTableRow((1, 3, 6, 1, 4, 1, 2636, 3, 47, 1, 1, 1, 1), ).setIndexNames((1, "JUNIPER-UTIL-MIB", "jnxUtilCounter32Name"))
if mibBuilder.loadTexts: jnxUtilCounter32Entry.setStatus('current')
jnxUtilCounter32Name = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 47, 1, 1, 1, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 80)))
if mibBuilder.loadTexts: jnxUtilCounter32Name.setStatus('current')
jnxUtilCounter32Value = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 47, 1, 1, 1, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxUtilCounter32Value.setStatus('current')
jnxUtilCounter32Time = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 47, 1, 1, 1, 1, 3), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxUtilCounter32Time.setStatus('current')
jnxUtilCounter64Table = MibTable((1, 3, 6, 1, 4, 1, 2636, 3, 47, 1, 1, 2), )
if mibBuilder.loadTexts: jnxUtilCounter64Table.setStatus('current')
jnxUtilCounter64Entry = MibTableRow((1, 3, 6, 1, 4, 1, 2636, 3, 47, 1, 1, 2, 1), ).setIndexNames((1, "JUNIPER-UTIL-MIB", "jnxUtilCounter64Name"))
if mibBuilder.loadTexts: jnxUtilCounter64Entry.setStatus('current')
jnxUtilCounter64Name = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 47, 1, 1, 2, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 80)))
if mibBuilder.loadTexts: jnxUtilCounter64Name.setStatus('current')
jnxUtilCounter64Value = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 47, 1, 1, 2, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxUtilCounter64Value.setStatus('current')
jnxUtilCounter64Time = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 47, 1, 1, 2, 1, 3), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxUtilCounter64Time.setStatus('current')
jnxUtilIntegerTable = MibTable((1, 3, 6, 1, 4, 1, 2636, 3, 47, 1, 1, 3), )
if mibBuilder.loadTexts: jnxUtilIntegerTable.setStatus('current')
jnxUtilIntegerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2636, 3, 47, 1, 1, 3, 1), ).setIndexNames((1, "JUNIPER-UTIL-MIB", "jnxUtilIntegerName"))
if mibBuilder.loadTexts: jnxUtilIntegerEntry.setStatus('current')
jnxUtilIntegerName = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 47, 1, 1, 3, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 80)))
if mibBuilder.loadTexts: jnxUtilIntegerName.setStatus('current')
jnxUtilIntegerValue = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 47, 1, 1, 3, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxUtilIntegerValue.setStatus('current')
jnxUtilIntegerTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 47, 1, 1, 3, 1, 3), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxUtilIntegerTime.setStatus('current')
jnxUtilUintTable = MibTable((1, 3, 6, 1, 4, 1, 2636, 3, 47, 1, 1, 4), )
if mibBuilder.loadTexts: jnxUtilUintTable.setStatus('current')
jnxUtilUintEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2636, 3, 47, 1, 1, 4, 1), ).setIndexNames((1, "JUNIPER-UTIL-MIB", "jnxUtilUintName"))
if mibBuilder.loadTexts: jnxUtilUintEntry.setStatus('current')
jnxUtilUintName = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 47, 1, 1, 4, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 80)))
if mibBuilder.loadTexts: jnxUtilUintName.setStatus('current')
jnxUtilUintValue = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 47, 1, 1, 4, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxUtilUintValue.setStatus('current')
jnxUtilUintTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 47, 1, 1, 4, 1, 3), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxUtilUintTime.setStatus('current')
jnxUtilStringTable = MibTable((1, 3, 6, 1, 4, 1, 2636, 3, 47, 1, 1, 5), )
if mibBuilder.loadTexts: jnxUtilStringTable.setStatus('current')
jnxUtilStringEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2636, 3, 47, 1, 1, 5, 1), ).setIndexNames((1, "JUNIPER-UTIL-MIB", "jnxUtilStringName"))
if mibBuilder.loadTexts: jnxUtilStringEntry.setStatus('current')
jnxUtilStringName = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 47, 1, 1, 5, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 80)))
if mibBuilder.loadTexts: jnxUtilStringName.setStatus('current')
jnxUtilStringValue = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 47, 1, 1, 5, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxUtilStringValue.setStatus('current')
jnxUtilStringTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 47, 1, 1, 5, 1, 3), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxUtilStringTime.setStatus('current')
mibBuilder.exportSymbols("JUNIPER-UTIL-MIB", PYSNMP_MODULE_ID=jnxUtil, jnxUtilUintEntry=jnxUtilUintEntry, jnxUtilCounter64Table=jnxUtilCounter64Table, jnxUtilUintValue=jnxUtilUintValue, jnxUtilStringName=jnxUtilStringName, jnxUtilStringEntry=jnxUtilStringEntry, jnxUtilIntegerEntry=jnxUtilIntegerEntry, jnxUtilIntegerName=jnxUtilIntegerName, jnxUtilCounter32Table=jnxUtilCounter32Table, jnxUtilCounter64Name=jnxUtilCounter64Name, jnxUtilCounter64Time=jnxUtilCounter64Time, jnxUtilUintTable=jnxUtilUintTable, jnxUtilUintTime=jnxUtilUintTime, jnxUtilStringTable=jnxUtilStringTable, jnxUtil=jnxUtil, jnxUtilCounter32Entry=jnxUtilCounter32Entry, jnxUtilCounter64Value=jnxUtilCounter64Value, jnxUtilStringValue=jnxUtilStringValue, jnxUtilIntegerValue=jnxUtilIntegerValue, jnxUtilCounter32Name=jnxUtilCounter32Name, jnxUtilCounter64Entry=jnxUtilCounter64Entry, jnxUtilCounter32Time=jnxUtilCounter32Time, jnxUtilIntegerTable=jnxUtilIntegerTable, jnxUtilIntegerTime=jnxUtilIntegerTime, jnxUtilUintName=jnxUtilUintName, jnxUtilData=jnxUtilData, jnxUtilStringTime=jnxUtilStringTime, jnxUtilCounter32Value=jnxUtilCounter32Value)
