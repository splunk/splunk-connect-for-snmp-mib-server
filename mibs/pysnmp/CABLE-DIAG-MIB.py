#
# PySNMP MIB module CABLE-DIAG-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CABLE-DIAG-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:26:40 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ConstraintsIntersection, ValueSizeConstraint, ValueRangeConstraint, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ConstraintsIntersection", "ValueSizeConstraint", "ValueRangeConstraint", "SingleValueConstraint")
dlink_common_mgmt, = mibBuilder.importSymbols("DLINK-ID-REC-MIB", "dlink-common-mgmt")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
ModuleIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, Integer32, Bits, Counter32, Gauge32, IpAddress, TimeTicks, NotificationType, ObjectIdentity, MibIdentifier, iso, Unsigned32, Counter64 = mibBuilder.importSymbols("SNMPv2-SMI", "ModuleIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Integer32", "Bits", "Counter32", "Gauge32", "IpAddress", "TimeTicks", "NotificationType", "ObjectIdentity", "MibIdentifier", "iso", "Unsigned32", "Counter64")
RowStatus, TextualConvention, TruthValue, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "RowStatus", "TextualConvention", "TruthValue", "DisplayString")
swCableDiagMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 171, 12, 58))
if mibBuilder.loadTexts: swCableDiagMIB.setLastUpdated('0808110000Z')
if mibBuilder.loadTexts: swCableDiagMIB.setOrganization('D-Link, Inc.')
swCableDiagCtrl = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 12, 58, 1))
swEtherCableDiagTable = MibTable((1, 3, 6, 1, 4, 1, 171, 12, 58, 1, 1), )
if mibBuilder.loadTexts: swEtherCableDiagTable.setStatus('current')
swEtherCableDiagEntry = MibTableRow((1, 3, 6, 1, 4, 1, 171, 12, 58, 1, 1, 1), ).setIndexNames((0, "CABLE-DIAG-MIB", "swEtherCableDiagPortIndex"))
if mibBuilder.loadTexts: swEtherCableDiagEntry.setStatus('current')
swEtherCableDiagPortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 58, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: swEtherCableDiagPortIndex.setStatus('current')
swEtherCableDiagPortType = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 58, 1, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("fastEthernet", 0), ("gigaEthernet", 1), ("other", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: swEtherCableDiagPortType.setStatus('current')
swEtherCableDiagLinkStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 58, 1, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("link-down", 0), ("link-up", 1), ("other", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: swEtherCableDiagLinkStatus.setStatus('current')
swEtherCableDiagPair1Status = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 58, 1, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("ok", 0), ("open", 1), ("short", 2), ("open-short", 3), ("crosstalk", 4), ("unknown", 5), ("count", 6), ("no-cable", 7), ("other", 8)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: swEtherCableDiagPair1Status.setStatus('current')
swEtherCableDiagPair2Status = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 58, 1, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("ok", 0), ("open", 1), ("short", 2), ("open-short", 3), ("crosstalk", 4), ("unknown", 5), ("count", 6), ("no-cable", 7), ("other", 8)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: swEtherCableDiagPair2Status.setStatus('current')
swEtherCableDiagPair3Status = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 58, 1, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("ok", 0), ("open", 1), ("short", 2), ("open-short", 3), ("crosstalk", 4), ("unknown", 5), ("count", 6), ("no-cable", 7), ("other", 8)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: swEtherCableDiagPair3Status.setStatus('current')
swEtherCableDiagPair4Status = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 58, 1, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("ok", 0), ("open", 1), ("short", 2), ("open-short", 3), ("crosstalk", 4), ("unknown", 5), ("count", 6), ("no-cable", 7), ("other", 8)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: swEtherCableDiagPair4Status.setStatus('current')
swEtherCableDiagPair1Length = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 58, 1, 1, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: swEtherCableDiagPair1Length.setStatus('current')
swEtherCableDiagPair2Length = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 58, 1, 1, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: swEtherCableDiagPair2Length.setStatus('current')
swEtherCableDiagPair3Length = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 58, 1, 1, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: swEtherCableDiagPair3Length.setStatus('current')
swEtherCableDiagPair4Length = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 58, 1, 1, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: swEtherCableDiagPair4Length.setStatus('current')
swEtherCableDiagAction = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 58, 1, 1, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("action", 1), ("processing", 2), ("other", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swEtherCableDiagAction.setStatus('current')
swEtherCableDiagStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 58, 1, 1, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("not-run", 1), ("processing", 2), ("last-test-ok", 3), ("last-test-failed", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: swEtherCableDiagStatus.setStatus('current')
mibBuilder.exportSymbols("CABLE-DIAG-MIB", swEtherCableDiagPair1Status=swEtherCableDiagPair1Status, swEtherCableDiagPortType=swEtherCableDiagPortType, swEtherCableDiagPair2Length=swEtherCableDiagPair2Length, swEtherCableDiagAction=swEtherCableDiagAction, PYSNMP_MODULE_ID=swCableDiagMIB, swCableDiagMIB=swCableDiagMIB, swEtherCableDiagTable=swEtherCableDiagTable, swEtherCableDiagPair4Status=swEtherCableDiagPair4Status, swEtherCableDiagPair1Length=swEtherCableDiagPair1Length, swEtherCableDiagPair2Status=swEtherCableDiagPair2Status, swEtherCableDiagEntry=swEtherCableDiagEntry, swCableDiagCtrl=swCableDiagCtrl, swEtherCableDiagPair3Length=swEtherCableDiagPair3Length, swEtherCableDiagPair3Status=swEtherCableDiagPair3Status, swEtherCableDiagPortIndex=swEtherCableDiagPortIndex, swEtherCableDiagStatus=swEtherCableDiagStatus, swEtherCableDiagPair4Length=swEtherCableDiagPair4Length, swEtherCableDiagLinkStatus=swEtherCableDiagLinkStatus)
