#
# PySNMP MIB module CADANT-CMTS-PROCESS-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CADANT-CMTS-PROCESS-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:27:41 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, SingleValueConstraint, ValueSizeConstraint, ConstraintsIntersection, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "SingleValueConstraint", "ValueSizeConstraint", "ConstraintsIntersection", "ConstraintsUnion")
trapSeverity, trapCounter, cardNumber = mibBuilder.importSymbols("CADANT-CMTS-EQUIPMENT-MIB", "trapSeverity", "trapCounter", "cardNumber")
cadSystem, = mibBuilder.importSymbols("CADANT-PRODUCTS-MIB", "cadSystem")
CardId, OverloadStatus = mibBuilder.importSymbols("CADANT-TC", "CardId", "OverloadStatus")
ObjectGroup, NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "NotificationGroup", "ModuleCompliance")
Integer32, Bits, Unsigned32, MibScalar, MibTable, MibTableRow, MibTableColumn, ObjectIdentity, MibIdentifier, Gauge32, IpAddress, TimeTicks, Counter32, iso, NotificationType, ModuleIdentity, Counter64 = mibBuilder.importSymbols("SNMPv2-SMI", "Integer32", "Bits", "Unsigned32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ObjectIdentity", "MibIdentifier", "Gauge32", "IpAddress", "TimeTicks", "Counter32", "iso", "NotificationType", "ModuleIdentity", "Counter64")
TimeInterval, RowStatus, DisplayString, TextualConvention, TruthValue = mibBuilder.importSymbols("SNMPv2-TC", "TimeInterval", "RowStatus", "DisplayString", "TextualConvention", "TruthValue")
cadProcessMib = ModuleIdentity((1, 3, 6, 1, 4, 1, 4998, 1, 1, 5, 3))
cadProcessMib.setRevisions(('2013-07-02 00:00', '2011-05-22 00:00', '2010-12-20 00:00', '2005-10-20 00:00', '2003-03-29 00:00', '2003-03-20 00:00', '2002-04-23 00:00',))
if mibBuilder.loadTexts: cadProcessMib.setLastUpdated('201307020000Z')
if mibBuilder.loadTexts: cadProcessMib.setOrganization('Arris International, Inc.')
cadProcessTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 4998, 1, 1, 5, 3, 0))
cadProcessGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 4998, 1, 1, 5, 3, 1))
cadCpu = MibTable((1, 3, 6, 1, 4, 1, 4998, 1, 1, 5, 3, 1, 1), )
if mibBuilder.loadTexts: cadCpu.setStatus('current')
cadCpuEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4998, 1, 1, 5, 3, 1, 1, 1), ).setIndexNames((0, "CADANT-CMTS-PROCESS-MIB", "cadCpuCardId"))
if mibBuilder.loadTexts: cadCpuEntry.setStatus('current')
cadCpuCardId = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 5, 3, 1, 1, 1, 1), CardId())
if mibBuilder.loadTexts: cadCpuCardId.setStatus('current')
cadCpuRecentTime = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 5, 3, 1, 1, 1, 2), Counter64()).setUnits('nanoseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: cadCpuRecentTime.setStatus('current')
cadCpuTotalTime = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 5, 3, 1, 1, 1, 3), Counter64()).setUnits('nanoseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: cadCpuTotalTime.setStatus('current')
cadIdleCpuRecentTime = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 5, 3, 1, 1, 1, 4), Counter64()).setUnits('nanoseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: cadIdleCpuRecentTime.setStatus('current')
cadIdleCpuTotalTime = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 5, 3, 1, 1, 1, 5), Counter64()).setUnits('nanoseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: cadIdleCpuTotalTime.setStatus('current')
cadSwitchRecentCount = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 5, 3, 1, 1, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cadSwitchRecentCount.setStatus('current')
cadSwitchTotalCount = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 5, 3, 1, 1, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cadSwitchTotalCount.setStatus('current')
cadIdleCpuRecentPercent = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 5, 3, 1, 1, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setUnits('percent').setMaxAccess("readonly")
if mibBuilder.loadTexts: cadIdleCpuRecentPercent.setStatus('current')
cadMemoryGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 4998, 1, 1, 5, 3, 2))
cadMemory = MibTable((1, 3, 6, 1, 4, 1, 4998, 1, 1, 5, 3, 2, 1), )
if mibBuilder.loadTexts: cadMemory.setStatus('current')
cadMemoryEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4998, 1, 1, 5, 3, 2, 1, 1), ).setIndexNames((0, "CADANT-CMTS-PROCESS-MIB", "cadMeCardId"))
if mibBuilder.loadTexts: cadMemoryEntry.setStatus('current')
cadMeCardId = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 5, 3, 2, 1, 1, 1), CardId())
if mibBuilder.loadTexts: cadMeCardId.setStatus('current')
cadMeHeapSize = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 5, 3, 2, 1, 1, 2), Unsigned32()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cadMeHeapSize.setStatus('current')
cadMeHeapRemaining = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 5, 3, 2, 1, 1, 3), Unsigned32()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cadMeHeapRemaining.setStatus('current')
cadOverloadGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 4998, 1, 1, 5, 3, 3))
cadOverload = MibTable((1, 3, 6, 1, 4, 1, 4998, 1, 1, 5, 3, 3, 1), )
if mibBuilder.loadTexts: cadOverload.setStatus('current')
cadOverloadEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4998, 1, 1, 5, 3, 3, 1, 1), ).setIndexNames((0, "CADANT-CMTS-PROCESS-MIB", "cadOvCardId"))
if mibBuilder.loadTexts: cadOverloadEntry.setStatus('current')
cadOvCardId = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 5, 3, 3, 1, 1, 1), CardId())
if mibBuilder.loadTexts: cadOvCardId.setStatus('current')
cadOvCpuStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 5, 3, 3, 1, 1, 2), OverloadStatus().clone('normal')).setMaxAccess("readonly")
if mibBuilder.loadTexts: cadOvCpuStatus.setStatus('current')
cadOvMemStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 5, 3, 3, 1, 1, 3), OverloadStatus().clone('normal')).setMaxAccess("readonly")
if mibBuilder.loadTexts: cadOvMemStatus.setStatus('deprecated')
cadOvSysCpuStatus = MibScalar((1, 3, 6, 1, 4, 1, 4998, 1, 1, 5, 3, 3, 2), OverloadStatus().clone('normal')).setMaxAccess("readonly")
if mibBuilder.loadTexts: cadOvSysCpuStatus.setStatus('current')
cadOvSysMemStatus = MibScalar((1, 3, 6, 1, 4, 1, 4998, 1, 1, 5, 3, 3, 3), OverloadStatus().clone('normal')).setMaxAccess("readonly")
if mibBuilder.loadTexts: cadOvSysMemStatus.setStatus('current')
cadProcessTrapInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 4998, 1, 1, 5, 3, 4))
cadProcessOverloadStatus = MibScalar((1, 3, 6, 1, 4, 1, 4998, 1, 1, 5, 3, 4, 1), OverloadStatus().clone('normal')).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: cadProcessOverloadStatus.setStatus('current')
cardOverloadNotification = NotificationType((1, 3, 6, 1, 4, 1, 4998, 1, 1, 5, 3, 0, 1)).setObjects(("CADANT-CMTS-EQUIPMENT-MIB", "trapCounter"), ("CADANT-CMTS-EQUIPMENT-MIB", "trapSeverity"), ("CADANT-CMTS-EQUIPMENT-MIB", "cardNumber"), ("CADANT-CMTS-PROCESS-MIB", "cadProcessOverloadStatus"))
if mibBuilder.loadTexts: cardOverloadNotification.setStatus('current')
sysOverloadNotification = NotificationType((1, 3, 6, 1, 4, 1, 4998, 1, 1, 5, 3, 0, 2)).setObjects(("CADANT-CMTS-EQUIPMENT-MIB", "trapCounter"), ("CADANT-CMTS-EQUIPMENT-MIB", "trapSeverity"), ("CADANT-CMTS-PROCESS-MIB", "cadProcessOverloadStatus"))
if mibBuilder.loadTexts: sysOverloadNotification.setStatus('current')
cadProcessMibConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 4998, 1, 1, 5, 3, 5))
cadProcessCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 4998, 1, 1, 5, 3, 5, 1))
cadProcessGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 4998, 1, 1, 5, 3, 5, 2))
cadProcessCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 4998, 1, 1, 5, 3, 5, 1, 1)).setObjects(("CADANT-CMTS-PROCESS-MIB", "cadProcessGroup"), ("CADANT-CMTS-PROCESS-MIB", "cadMemoryGroup"), ("CADANT-CMTS-PROCESS-MIB", "cadOverloadGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cadProcessCompliance = cadProcessCompliance.setStatus('current')
mibBuilder.exportSymbols("CADANT-CMTS-PROCESS-MIB", cadProcessTraps=cadProcessTraps, cadCpuRecentTime=cadCpuRecentTime, cadCpuEntry=cadCpuEntry, cadCpuTotalTime=cadCpuTotalTime, cadProcessTrapInfo=cadProcessTrapInfo, cadMemoryEntry=cadMemoryEntry, cadOvSysCpuStatus=cadOvSysCpuStatus, cadIdleCpuRecentPercent=cadIdleCpuRecentPercent, cardOverloadNotification=cardOverloadNotification, cadOvCpuStatus=cadOvCpuStatus, cadOverload=cadOverload, cadSwitchTotalCount=cadSwitchTotalCount, cadIdleCpuRecentTime=cadIdleCpuRecentTime, cadOvCardId=cadOvCardId, cadSwitchRecentCount=cadSwitchRecentCount, cadMeCardId=cadMeCardId, cadMemory=cadMemory, cadMeHeapRemaining=cadMeHeapRemaining, cadProcessMib=cadProcessMib, cadProcessGroups=cadProcessGroups, cadProcessGroup=cadProcessGroup, cadCpu=cadCpu, cadProcessCompliance=cadProcessCompliance, cadOvMemStatus=cadOvMemStatus, cadProcessCompliances=cadProcessCompliances, cadMemoryGroup=cadMemoryGroup, cadMeHeapSize=cadMeHeapSize, PYSNMP_MODULE_ID=cadProcessMib, cadOverloadEntry=cadOverloadEntry, cadOvSysMemStatus=cadOvSysMemStatus, cadOverloadGroup=cadOverloadGroup, cadProcessMibConformance=cadProcessMibConformance, sysOverloadNotification=sysOverloadNotification, cadCpuCardId=cadCpuCardId, cadProcessOverloadStatus=cadProcessOverloadStatus, cadIdleCpuTotalTime=cadIdleCpuTotalTime)
