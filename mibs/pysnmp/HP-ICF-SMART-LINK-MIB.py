#
# PySNMP MIB module HP-ICF-SMART-LINK-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/HP-ICF-SMART-LINK-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:22:53 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, SingleValueConstraint, ConstraintsUnion, ConstraintsIntersection, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "SingleValueConstraint", "ConstraintsUnion", "ConstraintsIntersection", "ValueSizeConstraint")
hpSwitch, = mibBuilder.importSymbols("HP-ICF-OID", "hpSwitch")
VlanIndex, = mibBuilder.importSymbols("Q-BRIDGE-MIB", "VlanIndex")
NotificationGroup, ObjectGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ObjectGroup", "ModuleCompliance")
MibScalar, MibTable, MibTableRow, MibTableColumn, MibIdentifier, Integer32, Unsigned32, TimeTicks, Gauge32, ModuleIdentity, Bits, IpAddress, Counter64, NotificationType, Counter32, iso, ObjectIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "MibIdentifier", "Integer32", "Unsigned32", "TimeTicks", "Gauge32", "ModuleIdentity", "Bits", "IpAddress", "Counter64", "NotificationType", "Counter32", "iso", "ObjectIdentity")
MacAddress, RowStatus, DisplayString, DateAndTime, TruthValue, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "MacAddress", "RowStatus", "DisplayString", "DateAndTime", "TruthValue", "TextualConvention")
hpicfSmartLinkMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 96))
hpicfSmartLinkMIB.setRevisions(('2013-03-20 00:00',))
if mibBuilder.loadTexts: hpicfSmartLinkMIB.setLastUpdated('201303200000Z')
if mibBuilder.loadTexts: hpicfSmartLinkMIB.setOrganization('HP Networking')
hpicfSmartLinkNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 96, 0))
hpicfSmartLinkObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 96, 1))
hpicfSmartLinkConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 96, 2))
hpicfSmartLinkFlushStatistics = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 96, 1, 1))
hpicfSmartLinkLastFlushTime = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 96, 1, 1, 1), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfSmartLinkLastFlushTime.setStatus('current')
hpicfSmartLinkTotalFlushPktsRx = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 96, 1, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfSmartLinkTotalFlushPktsRx.setStatus('current')
hpicfSmartLinkLastFlushPort = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 96, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfSmartLinkLastFlushPort.setStatus('current')
hpicfSmartLinkLastFlushDeviceId = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 96, 1, 1, 4), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfSmartLinkLastFlushDeviceId.setStatus('current')
hpicfSmartLinkLastFlushVlan = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 96, 1, 1, 5), VlanIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfSmartLinkLastFlushVlan.setStatus('current')
hpicfSmartLinkResetFlushStatistics = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 96, 1, 2), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpicfSmartLinkResetFlushStatistics.setStatus('current')
hpicfSmartLinkGroupTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 96, 1, 3), )
if mibBuilder.loadTexts: hpicfSmartLinkGroupTable.setStatus('current')
hpicfSmartLinkGroupEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 96, 1, 3, 1), ).setIndexNames((0, "HP-ICF-SMART-LINK-MIB", "hpicfSmartLinkGroupIndex"))
if mibBuilder.loadTexts: hpicfSmartLinkGroupEntry.setStatus('current')
hpicfSmartLinkGroupIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 96, 1, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)))
if mibBuilder.loadTexts: hpicfSmartLinkGroupIndex.setStatus('current')
hpicfSmartLinkGroupMasterPort = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 96, 1, 3, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpicfSmartLinkGroupMasterPort.setStatus('current')
hpicfSmartLinkGroupSlavePort = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 96, 1, 3, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpicfSmartLinkGroupSlavePort.setStatus('current')
hpicfSmartLinkGroupSendControlVlan = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 96, 1, 3, 1, 4), VlanIndex().clone(1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpicfSmartLinkGroupSendControlVlan.setStatus('current')
hpicfSmartLinkGroupPreemptionMode = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 96, 1, 3, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("off", 1), ("role", 2))).clone('off')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpicfSmartLinkGroupPreemptionMode.setStatus('current')
hpicfSmartLinkGroupPreemptionDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 96, 1, 3, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 300)).clone(1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpicfSmartLinkGroupPreemptionDelay.setStatus('current')
hpicfSmartLinkGroupProtectedVlan1k = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 96, 1, 3, 1, 7), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpicfSmartLinkGroupProtectedVlan1k.setStatus('current')
hpicfSmartLinkGroupProtectedVlan2k = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 96, 1, 3, 1, 8), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpicfSmartLinkGroupProtectedVlan2k.setStatus('current')
hpicfSmartLinkGroupProtectedVlan3k = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 96, 1, 3, 1, 9), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpicfSmartLinkGroupProtectedVlan3k.setStatus('current')
hpicfSmartLinkGroupProtectedVlan4k = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 96, 1, 3, 1, 10), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpicfSmartLinkGroupProtectedVlan4k.setStatus('current')
hpicfSmartLinkGroupTrapControl = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 96, 1, 3, 1, 11), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpicfSmartLinkGroupTrapControl.setStatus('current')
hpicfSmartLinkGroupClearStats = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 96, 1, 3, 1, 12), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpicfSmartLinkGroupClearStats.setStatus('current')
hpicfSmartLinkGroupRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 96, 1, 3, 1, 13), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpicfSmartLinkGroupRowStatus.setStatus('current')
hpicfSmartLinkExtendedGroupTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 96, 1, 4), )
if mibBuilder.loadTexts: hpicfSmartLinkExtendedGroupTable.setStatus('current')
hpicfSmartLinkExtendedGroupEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 96, 1, 4, 1), )
hpicfSmartLinkGroupEntry.registerAugmentions(("HP-ICF-SMART-LINK-MIB", "hpicfSmartLinkExtendedGroupEntry"))
hpicfSmartLinkExtendedGroupEntry.setIndexNames(*hpicfSmartLinkGroupEntry.getIndexNames())
if mibBuilder.loadTexts: hpicfSmartLinkExtendedGroupEntry.setStatus('current')
hpicfSmartLinkGroupMasterPortState = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 96, 1, 4, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("uninitialized", 1), ("active", 2), ("standby", 3), ("down", 4))).clone('uninitialized')).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfSmartLinkGroupMasterPortState.setStatus('current')
hpicfSmartLinkGroupSlavePortState = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 96, 1, 4, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("uninitialized", 1), ("active", 2), ("standby", 3), ("down", 4))).clone('uninitialized')).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfSmartLinkGroupSlavePortState.setStatus('current')
hpicfSmartLinkMasterFlushPktTx = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 96, 1, 4, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfSmartLinkMasterFlushPktTx.setStatus('current')
hpicfSmartLinkMasterFlushPktLastUpdate = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 96, 1, 4, 1, 4), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfSmartLinkMasterFlushPktLastUpdate.setStatus('current')
hpicfSmartLinkSlaveFlushPktTx = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 96, 1, 4, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfSmartLinkSlaveFlushPktTx.setStatus('current')
hpicfSmartLinkSlaveFlushPktLastUpdate = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 96, 1, 4, 1, 6), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfSmartLinkSlaveFlushPktLastUpdate.setStatus('current')
hpicfSmartLinkPortTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 96, 1, 5), )
if mibBuilder.loadTexts: hpicfSmartLinkPortTable.setStatus('current')
hpicfSmartLinkPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 96, 1, 5, 1), ).setIndexNames((0, "HP-ICF-SMART-LINK-MIB", "hpicfSmartLinkPortIndex"))
if mibBuilder.loadTexts: hpicfSmartLinkPortEntry.setStatus('current')
hpicfSmartLinkPortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 96, 1, 5, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)))
if mibBuilder.loadTexts: hpicfSmartLinkPortIndex.setStatus('current')
hpicfSmartLinkRecvControlVlans1k = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 96, 1, 5, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpicfSmartLinkRecvControlVlans1k.setStatus('current')
hpicfSmartLinkRecvControlVlans2k = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 96, 1, 5, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpicfSmartLinkRecvControlVlans2k.setStatus('current')
hpicfSmartLinkRecvControlVlans3k = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 96, 1, 5, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpicfSmartLinkRecvControlVlans3k.setStatus('current')
hpicfSmartLinkRecvControlVlans4k = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 96, 1, 5, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpicfSmartLinkRecvControlVlans4k.setStatus('current')
hpicfSmartLinkPortRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 96, 1, 5, 1, 6), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpicfSmartLinkPortRowStatus.setStatus('current')
hpicfSmartLinkNotifyGroupIndex = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 96, 0, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hpicfSmartLinkNotifyGroupIndex.setStatus('current')
hpicfSmartLinkPortStateChangeNotification = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 96, 0, 2)).setObjects(("HP-ICF-SMART-LINK-MIB", "hpicfSmartLinkNotifyGroupIndex"), ("HP-ICF-SMART-LINK-MIB", "hpicfSmartLinkGroupMasterPortState"), ("HP-ICF-SMART-LINK-MIB", "hpicfSmartLinkGroupSlavePortState"))
if mibBuilder.loadTexts: hpicfSmartLinkPortStateChangeNotification.setStatus('current')
hpicfSmartLinkConformanceGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 96, 2, 1))
hpicfSmartLinkCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 96, 2, 2))
hpicfSmartLinkCompliance1 = ModuleCompliance((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 96, 2, 2, 1)).setObjects(("HP-ICF-SMART-LINK-MIB", "hpicfSmartLinkGlobalGroup"), ("HP-ICF-SMART-LINK-MIB", "hpicfSmartLinkGroupsGroup"), ("HP-ICF-SMART-LINK-MIB", "hpicfSmartLinkPortGroup"), ("HP-ICF-SMART-LINK-MIB", "hpicfSmartLinkNotificationGroup"), ("HP-ICF-SMART-LINK-MIB", "hpicfSmartLinkNotificationObjectsGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfSmartLinkCompliance1 = hpicfSmartLinkCompliance1.setStatus('current')
hpicfSmartLinkGlobalGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 96, 2, 1, 1)).setObjects(("HP-ICF-SMART-LINK-MIB", "hpicfSmartLinkTotalFlushPktsRx"), ("HP-ICF-SMART-LINK-MIB", "hpicfSmartLinkLastFlushPort"), ("HP-ICF-SMART-LINK-MIB", "hpicfSmartLinkLastFlushTime"), ("HP-ICF-SMART-LINK-MIB", "hpicfSmartLinkLastFlushDeviceId"), ("HP-ICF-SMART-LINK-MIB", "hpicfSmartLinkLastFlushVlan"), ("HP-ICF-SMART-LINK-MIB", "hpicfSmartLinkResetFlushStatistics"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfSmartLinkGlobalGroup = hpicfSmartLinkGlobalGroup.setStatus('current')
hpicfSmartLinkGroupsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 96, 2, 1, 2)).setObjects(("HP-ICF-SMART-LINK-MIB", "hpicfSmartLinkGroupMasterPort"), ("HP-ICF-SMART-LINK-MIB", "hpicfSmartLinkGroupSlavePort"), ("HP-ICF-SMART-LINK-MIB", "hpicfSmartLinkGroupSendControlVlan"), ("HP-ICF-SMART-LINK-MIB", "hpicfSmartLinkGroupPreemptionMode"), ("HP-ICF-SMART-LINK-MIB", "hpicfSmartLinkGroupPreemptionDelay"), ("HP-ICF-SMART-LINK-MIB", "hpicfSmartLinkGroupProtectedVlan1k"), ("HP-ICF-SMART-LINK-MIB", "hpicfSmartLinkGroupProtectedVlan2k"), ("HP-ICF-SMART-LINK-MIB", "hpicfSmartLinkGroupProtectedVlan3k"), ("HP-ICF-SMART-LINK-MIB", "hpicfSmartLinkGroupProtectedVlan4k"), ("HP-ICF-SMART-LINK-MIB", "hpicfSmartLinkGroupTrapControl"), ("HP-ICF-SMART-LINK-MIB", "hpicfSmartLinkGroupClearStats"), ("HP-ICF-SMART-LINK-MIB", "hpicfSmartLinkGroupMasterPortState"), ("HP-ICF-SMART-LINK-MIB", "hpicfSmartLinkGroupSlavePortState"), ("HP-ICF-SMART-LINK-MIB", "hpicfSmartLinkMasterFlushPktTx"), ("HP-ICF-SMART-LINK-MIB", "hpicfSmartLinkMasterFlushPktLastUpdate"), ("HP-ICF-SMART-LINK-MIB", "hpicfSmartLinkSlaveFlushPktTx"), ("HP-ICF-SMART-LINK-MIB", "hpicfSmartLinkSlaveFlushPktLastUpdate"), ("HP-ICF-SMART-LINK-MIB", "hpicfSmartLinkGroupRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfSmartLinkGroupsGroup = hpicfSmartLinkGroupsGroup.setStatus('current')
hpicfSmartLinkPortGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 96, 2, 1, 3)).setObjects(("HP-ICF-SMART-LINK-MIB", "hpicfSmartLinkRecvControlVlans1k"), ("HP-ICF-SMART-LINK-MIB", "hpicfSmartLinkRecvControlVlans2k"), ("HP-ICF-SMART-LINK-MIB", "hpicfSmartLinkRecvControlVlans3k"), ("HP-ICF-SMART-LINK-MIB", "hpicfSmartLinkRecvControlVlans4k"), ("HP-ICF-SMART-LINK-MIB", "hpicfSmartLinkPortRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfSmartLinkPortGroup = hpicfSmartLinkPortGroup.setStatus('current')
hpicfSmartLinkNotificationObjectsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 96, 2, 1, 4)).setObjects(("HP-ICF-SMART-LINK-MIB", "hpicfSmartLinkNotifyGroupIndex"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfSmartLinkNotificationObjectsGroup = hpicfSmartLinkNotificationObjectsGroup.setStatus('current')
hpicfSmartLinkNotificationGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 96, 2, 1, 5)).setObjects(("HP-ICF-SMART-LINK-MIB", "hpicfSmartLinkPortStateChangeNotification"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfSmartLinkNotificationGroup = hpicfSmartLinkNotificationGroup.setStatus('current')
mibBuilder.exportSymbols("HP-ICF-SMART-LINK-MIB", hpicfSmartLinkResetFlushStatistics=hpicfSmartLinkResetFlushStatistics, hpicfSmartLinkPortRowStatus=hpicfSmartLinkPortRowStatus, hpicfSmartLinkLastFlushDeviceId=hpicfSmartLinkLastFlushDeviceId, hpicfSmartLinkExtendedGroupEntry=hpicfSmartLinkExtendedGroupEntry, hpicfSmartLinkNotificationObjectsGroup=hpicfSmartLinkNotificationObjectsGroup, hpicfSmartLinkRecvControlVlans3k=hpicfSmartLinkRecvControlVlans3k, hpicfSmartLinkGroupClearStats=hpicfSmartLinkGroupClearStats, hpicfSmartLinkMIB=hpicfSmartLinkMIB, hpicfSmartLinkNotifications=hpicfSmartLinkNotifications, hpicfSmartLinkRecvControlVlans4k=hpicfSmartLinkRecvControlVlans4k, hpicfSmartLinkGroupTable=hpicfSmartLinkGroupTable, hpicfSmartLinkGroupSlavePortState=hpicfSmartLinkGroupSlavePortState, hpicfSmartLinkPortEntry=hpicfSmartLinkPortEntry, hpicfSmartLinkFlushStatistics=hpicfSmartLinkFlushStatistics, hpicfSmartLinkConformanceGroups=hpicfSmartLinkConformanceGroups, hpicfSmartLinkRecvControlVlans1k=hpicfSmartLinkRecvControlVlans1k, hpicfSmartLinkCompliances=hpicfSmartLinkCompliances, hpicfSmartLinkLastFlushVlan=hpicfSmartLinkLastFlushVlan, hpicfSmartLinkPortTable=hpicfSmartLinkPortTable, hpicfSmartLinkMasterFlushPktTx=hpicfSmartLinkMasterFlushPktTx, hpicfSmartLinkNotificationGroup=hpicfSmartLinkNotificationGroup, hpicfSmartLinkObjects=hpicfSmartLinkObjects, hpicfSmartLinkSlaveFlushPktTx=hpicfSmartLinkSlaveFlushPktTx, hpicfSmartLinkPortGroup=hpicfSmartLinkPortGroup, hpicfSmartLinkPortIndex=hpicfSmartLinkPortIndex, hpicfSmartLinkGroupPreemptionMode=hpicfSmartLinkGroupPreemptionMode, hpicfSmartLinkNotifyGroupIndex=hpicfSmartLinkNotifyGroupIndex, hpicfSmartLinkGlobalGroup=hpicfSmartLinkGlobalGroup, PYSNMP_MODULE_ID=hpicfSmartLinkMIB, hpicfSmartLinkGroupMasterPortState=hpicfSmartLinkGroupMasterPortState, hpicfSmartLinkConformance=hpicfSmartLinkConformance, hpicfSmartLinkGroupMasterPort=hpicfSmartLinkGroupMasterPort, hpicfSmartLinkSlaveFlushPktLastUpdate=hpicfSmartLinkSlaveFlushPktLastUpdate, hpicfSmartLinkGroupIndex=hpicfSmartLinkGroupIndex, hpicfSmartLinkMasterFlushPktLastUpdate=hpicfSmartLinkMasterFlushPktLastUpdate, hpicfSmartLinkGroupSlavePort=hpicfSmartLinkGroupSlavePort, hpicfSmartLinkGroupEntry=hpicfSmartLinkGroupEntry, hpicfSmartLinkLastFlushTime=hpicfSmartLinkLastFlushTime, hpicfSmartLinkCompliance1=hpicfSmartLinkCompliance1, hpicfSmartLinkGroupRowStatus=hpicfSmartLinkGroupRowStatus, hpicfSmartLinkGroupProtectedVlan4k=hpicfSmartLinkGroupProtectedVlan4k, hpicfSmartLinkPortStateChangeNotification=hpicfSmartLinkPortStateChangeNotification, hpicfSmartLinkGroupsGroup=hpicfSmartLinkGroupsGroup, hpicfSmartLinkGroupSendControlVlan=hpicfSmartLinkGroupSendControlVlan, hpicfSmartLinkGroupProtectedVlan1k=hpicfSmartLinkGroupProtectedVlan1k, hpicfSmartLinkRecvControlVlans2k=hpicfSmartLinkRecvControlVlans2k, hpicfSmartLinkLastFlushPort=hpicfSmartLinkLastFlushPort, hpicfSmartLinkGroupTrapControl=hpicfSmartLinkGroupTrapControl, hpicfSmartLinkGroupProtectedVlan3k=hpicfSmartLinkGroupProtectedVlan3k, hpicfSmartLinkTotalFlushPktsRx=hpicfSmartLinkTotalFlushPktsRx, hpicfSmartLinkGroupProtectedVlan2k=hpicfSmartLinkGroupProtectedVlan2k, hpicfSmartLinkExtendedGroupTable=hpicfSmartLinkExtendedGroupTable, hpicfSmartLinkGroupPreemptionDelay=hpicfSmartLinkGroupPreemptionDelay)
