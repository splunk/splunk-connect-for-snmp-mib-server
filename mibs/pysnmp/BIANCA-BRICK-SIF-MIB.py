#
# PySNMP MIB module BIANCA-BRICK-SIF-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/BIANCA-BRICK-SIF-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:21:41 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ConstraintsUnion, ValueSizeConstraint, ConstraintsIntersection, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ConstraintsUnion", "ValueSizeConstraint", "ConstraintsIntersection", "SingleValueConstraint")
DisplayString, = mibBuilder.importSymbols("RFC1158-MIB", "DisplayString")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
Unsigned32, enterprises, Gauge32, Counter32, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter64, IpAddress, NotificationType, TimeTicks, MibIdentifier, iso, Integer32, ModuleIdentity, ObjectIdentity, Bits = mibBuilder.importSymbols("SNMPv2-SMI", "Unsigned32", "enterprises", "Gauge32", "Counter32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter64", "IpAddress", "NotificationType", "TimeTicks", "MibIdentifier", "iso", "Integer32", "ModuleIdentity", "ObjectIdentity", "Bits")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
bintec = MibIdentifier((1, 3, 6, 1, 4, 1, 272))
bibo = MibIdentifier((1, 3, 6, 1, 4, 1, 272, 4))
biboip = MibIdentifier((1, 3, 6, 1, 4, 1, 272, 4, 5))
ipSifAliasAddressTable = MibTable((1, 3, 6, 1, 4, 1, 272, 4, 5, 28), )
if mibBuilder.loadTexts: ipSifAliasAddressTable.setStatus('mandatory')
ipSifAliasAddressEntry = MibTableRow((1, 3, 6, 1, 4, 1, 272, 4, 5, 28, 1), ).setIndexNames((0, "BIANCA-BRICK-SIF-MIB", "ipSifAliasAddressAlias"))
if mibBuilder.loadTexts: ipSifAliasAddressEntry.setStatus('mandatory')
ipSifAliasAddressIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 5, 28, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipSifAliasAddressIndex.setStatus('mandatory')
ipSifAliasAddressAlias = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 5, 28, 1, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipSifAliasAddressAlias.setStatus('mandatory')
ipSifAliasAddressAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 5, 28, 1, 3), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipSifAliasAddressAddress.setStatus('mandatory')
ipSifAliasAddressMask = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 5, 28, 1, 4), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipSifAliasAddressMask.setStatus('mandatory')
ipSifAliasAddressInterface = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 5, 28, 1, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipSifAliasAddressInterface.setStatus('mandatory')
ipSifAliasAddressMode = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 5, 28, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("interface", 1), ("address", 2), ("range", 3), ("delete", 4))).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipSifAliasAddressMode.setStatus('mandatory')
ipSifAliasAddressRange = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 5, 28, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipSifAliasAddressRange.setStatus('mandatory')
ipSifAliasAddressGroup = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 5, 28, 1, 8), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipSifAliasAddressGroup.setStatus('mandatory')
ipSifAliasServiceTable = MibTable((1, 3, 6, 1, 4, 1, 272, 4, 5, 29), )
if mibBuilder.loadTexts: ipSifAliasServiceTable.setStatus('mandatory')
ipSifAliasServiceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 272, 4, 5, 29, 1), ).setIndexNames((0, "BIANCA-BRICK-SIF-MIB", "ipSifAliasServiceAlias"))
if mibBuilder.loadTexts: ipSifAliasServiceEntry.setStatus('mandatory')
ipSifAliasServiceIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 5, 29, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipSifAliasServiceIndex.setStatus('mandatory')
ipSifAliasServiceAlias = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 5, 29, 1, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipSifAliasServiceAlias.setStatus('mandatory')
ipSifAliasServiceProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 5, 29, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 6, 8, 9, 12, 16, 17, 20, 22, 27, 41, 46, 47, 50, 51, 56, 57, 65, 80, 88, 89, 94, 103, 111, 112, 115, 250, 251, 252, 253, 254, 255, 256))).clone(namedValues=NamedValues(("icmp", 1), ("igmp", 2), ("ggp", 3), ("ip", 4), ("tcp", 6), ("egp", 8), ("igp", 9), ("pup", 12), ("chaos", 16), ("udp", 17), ("hmp", 20), ("xns-idp", 22), ("rdp", 27), ("ipv6", 41), ("rsvp", 46), ("gre", 47), ("esp", 50), ("ah", 51), ("tlsp", 56), ("skip", 57), ("kryptolan", 65), ("iso-ip", 80), ("igrp", 88), ("ospf", 89), ("ipip", 94), ("pim", 103), ("ipx-in-ip", 111), ("vrrp", 112), ("l2tp", 115), ("local", 250), ("internet", 251), ("netmeeting", 252), ("udptcp", 253), ("any", 254), ("delete", 255), ("dont-verify", 256))).clone('any')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipSifAliasServiceProtocol.setStatus('mandatory')
ipSifAliasServicePort = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 5, 29, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 65535)).clone(-1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipSifAliasServicePort.setStatus('mandatory')
ipSifAliasServiceRange = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 5, 29, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65536)).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipSifAliasServiceRange.setStatus('mandatory')
ipSifAliasServiceType = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 5, 29, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("predefined", 1), ("custom", 2))).clone('custom')).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipSifAliasServiceType.setStatus('mandatory')
ipSifAliasServiceGroup = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 5, 29, 1, 7), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipSifAliasServiceGroup.setStatus('mandatory')
ipSifAliasServiceSourcePort = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 5, 29, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipSifAliasServiceSourcePort.setStatus('mandatory')
ipSifAliasServiceSourceRange = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 5, 29, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65536)).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipSifAliasServiceSourceRange.setStatus('mandatory')
ipSifAliasServiceIcmpType = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 5, 29, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipSifAliasServiceIcmpType.setStatus('mandatory')
ipSifAliasServiceIcmpCode = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 5, 29, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipSifAliasServiceIcmpCode.setStatus('mandatory')
ipSifAliasTable = MibTable((1, 3, 6, 1, 4, 1, 272, 4, 5, 30), )
if mibBuilder.loadTexts: ipSifAliasTable.setStatus('mandatory')
ipSifAliasEntry = MibTableRow((1, 3, 6, 1, 4, 1, 272, 4, 5, 30, 1), ).setIndexNames((0, "BIANCA-BRICK-SIF-MIB", "ipSifAliasOrder"))
if mibBuilder.loadTexts: ipSifAliasEntry.setStatus('mandatory')
ipSifAliasOrder = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 5, 30, 1, 1), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipSifAliasOrder.setStatus('mandatory')
ipSifAliasSource = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 5, 30, 1, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipSifAliasSource.setStatus('mandatory')
ipSifAliasDestination = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 5, 30, 1, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipSifAliasDestination.setStatus('mandatory')
ipSifAliasService = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 5, 30, 1, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipSifAliasService.setStatus('mandatory')
ipSifAliasAction = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 5, 30, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 255))).clone(namedValues=NamedValues(("access", 1), ("deny", 2), ("reject", 3), ("delete", 255))).clone('access')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipSifAliasAction.setStatus('mandatory')
ipSifAliasStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 5, 30, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipSifAliasStatus.setStatus('mandatory')
ipSifAliasPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 5, 30, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("default", 1), ("low-latency", 2), ("high", 3), ("medium", 4), ("low", 5))).clone('default')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipSifAliasPriority.setStatus('mandatory')
ipSifAliasClassId = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 5, 30, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipSifAliasClassId.setStatus('mandatory')
ipSifRejectTable = MibTable((1, 3, 6, 1, 4, 1, 272, 4, 5, 31), )
if mibBuilder.loadTexts: ipSifRejectTable.setStatus('mandatory')
ipSifRejectEntry = MibTableRow((1, 3, 6, 1, 4, 1, 272, 4, 5, 31, 1), ).setIndexNames((0, "BIANCA-BRICK-SIF-MIB", "ipSifRejectIndex"))
if mibBuilder.loadTexts: ipSifRejectEntry.setStatus('mandatory')
ipSifRejectIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 5, 31, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipSifRejectIndex.setStatus('mandatory')
ipSifRejectSource = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 5, 31, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipSifRejectSource.setStatus('mandatory')
ipSifRejectDestination = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 5, 31, 1, 3), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipSifRejectDestination.setStatus('mandatory')
ipSifRejectRejects = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 5, 31, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipSifRejectRejects.setStatus('mandatory')
ipSifRejectSilence = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 5, 31, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipSifRejectSilence.setStatus('mandatory')
ipSifRejectProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 5, 31, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipSifRejectProtocol.setStatus('mandatory')
ipSifRejectPortLo = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 5, 31, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipSifRejectPortLo.setStatus('mandatory')
ipSifRejectPortHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 5, 31, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipSifRejectPortHigh.setStatus('mandatory')
ipSifExpectTable = MibTable((1, 3, 6, 1, 4, 1, 272, 4, 5, 35), )
if mibBuilder.loadTexts: ipSifExpectTable.setStatus('mandatory')
ipSifExpectEntry = MibTableRow((1, 3, 6, 1, 4, 1, 272, 4, 5, 35, 1), ).setIndexNames((0, "BIANCA-BRICK-SIF-MIB", "ipSifExpectIndex"))
if mibBuilder.loadTexts: ipSifExpectEntry.setStatus('mandatory')
ipSifExpectIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 5, 35, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipSifExpectIndex.setStatus('mandatory')
ipSifExpectSource = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 5, 35, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipSifExpectSource.setStatus('mandatory')
ipSifExpectDestination = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 5, 35, 1, 3), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipSifExpectDestination.setStatus('mandatory')
ipSifExpectProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 5, 35, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(2, 4, 6, 17, 255))).clone(namedValues=NamedValues(("igmp", 2), ("ip", 4), ("tcp", 6), ("udp", 17), ("delete", 255))).clone('udp')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipSifExpectProtocol.setStatus('mandatory')
ipSifExpectSourcePort = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 5, 35, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipSifExpectSourcePort.setStatus('mandatory')
ipSifExpectDestPort = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 5, 35, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipSifExpectDestPort.setStatus('mandatory')
ipSifExpectPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 5, 35, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("default", 1), ("low-latency", 2), ("high", 3), ("medium", 4), ("low", 5))).clone('default')).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipSifExpectPriority.setStatus('mandatory')
ipSifExpectClassId = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 5, 35, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipSifExpectClassId.setStatus('mandatory')
ipSifExpectIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 5, 35, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipSifExpectIfIndex.setStatus('mandatory')
ipSifAliasAddressGroupTable = MibTable((1, 3, 6, 1, 4, 1, 272, 4, 5, 47), )
if mibBuilder.loadTexts: ipSifAliasAddressGroupTable.setStatus('mandatory')
ipSifAliasAddressGroupEntry = MibTableRow((1, 3, 6, 1, 4, 1, 272, 4, 5, 47, 1), ).setIndexNames((0, "BIANCA-BRICK-SIF-MIB", "ipSifAliasAddressGroupId"))
if mibBuilder.loadTexts: ipSifAliasAddressGroupEntry.setStatus('mandatory')
ipSifAliasAddressGroupId = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 5, 47, 1, 1), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipSifAliasAddressGroupId.setStatus('mandatory')
ipSifAliasAddressGroupAlias = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 5, 47, 1, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipSifAliasAddressGroupAlias.setStatus('mandatory')
ipSifAliasAddressGroupIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 5, 47, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipSifAliasAddressGroupIndex.setStatus('mandatory')
ipSifAliasAddressGroupMode = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 5, 47, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("interface", 1), ("address", 2), ("delete", 3))).clone('interface')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipSifAliasAddressGroupMode.setStatus('mandatory')
ipSifAliasServiceGroupTable = MibTable((1, 3, 6, 1, 4, 1, 272, 4, 5, 48), )
if mibBuilder.loadTexts: ipSifAliasServiceGroupTable.setStatus('mandatory')
ipSifAliasServiceGroupEntry = MibTableRow((1, 3, 6, 1, 4, 1, 272, 4, 5, 48, 1), ).setIndexNames((0, "BIANCA-BRICK-SIF-MIB", "ipSifAliasServiceGroupId"))
if mibBuilder.loadTexts: ipSifAliasServiceGroupEntry.setStatus('mandatory')
ipSifAliasServiceGroupId = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 5, 48, 1, 1), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipSifAliasServiceGroupId.setStatus('mandatory')
ipSifAliasServiceGroupAlias = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 5, 48, 1, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipSifAliasServiceGroupAlias.setStatus('mandatory')
ipSifAliasServiceGroupIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 5, 48, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipSifAliasServiceGroupIndex.setStatus('mandatory')
ipSifAliasServiceGroupMode = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 5, 48, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("service", 1), ("delete", 2))).clone('service')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipSifAliasServiceGroupMode.setStatus('mandatory')
ipSifPolicyChkTable = MibTable((1, 3, 6, 1, 4, 1, 272, 4, 5, 49), )
if mibBuilder.loadTexts: ipSifPolicyChkTable.setStatus('mandatory')
ipSifPolicyChkEntry = MibTableRow((1, 3, 6, 1, 4, 1, 272, 4, 5, 49, 1), ).setIndexNames((0, "BIANCA-BRICK-SIF-MIB", "ipSifPolicyChkProtocol"), (0, "BIANCA-BRICK-SIF-MIB", "ipSifPolicyChkDestPort"))
if mibBuilder.loadTexts: ipSifPolicyChkEntry.setStatus('mandatory')
ipSifPolicyChkSourceIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 5, 49, 1, 1), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipSifPolicyChkSourceIfIndex.setStatus('mandatory')
ipSifPolicyChkDestIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 5, 49, 1, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipSifPolicyChkDestIfIndex.setStatus('mandatory')
ipSifPolicyChkSource = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 5, 49, 1, 3), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipSifPolicyChkSource.setStatus('mandatory')
ipSifPolicyChkDestination = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 5, 49, 1, 4), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipSifPolicyChkDestination.setStatus('mandatory')
ipSifPolicyChkProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 5, 49, 1, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipSifPolicyChkProtocol.setStatus('mandatory')
ipSifPolicyChkDestPort = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 5, 49, 1, 6), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipSifPolicyChkDestPort.setStatus('mandatory')
ipSifPolicyChkRule = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 5, 49, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("access", 1), ("deny", 2), ("reject", 3), ("unknown", 4))).clone('unknown')).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipSifPolicyChkRule.setStatus('mandatory')
ipSifPolicyChkRuleOrder = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 5, 49, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipSifPolicyChkRuleOrder.setStatus('mandatory')
ipSifPolicyChkResult = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 5, 49, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("access", 1), ("deny", 2), ("unknown", 3))).clone('unknown')).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipSifPolicyChkResult.setStatus('mandatory')
ipSifPolicyChkState = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 5, 49, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("initial", 1), ("trigger", 2), ("running", 3), ("done", 4))).clone('initial')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipSifPolicyChkState.setStatus('mandatory')
ipSifPolicyChkAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 5, 49, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("check", 1), ("ignore", 2))).clone('check')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipSifPolicyChkAdminStatus.setStatus('mandatory')
ipSifPolicyChkOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 5, 49, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("check", 1), ("ignore", 2))).clone('check')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipSifPolicyChkOperStatus.setStatus('mandatory')
ipSifPolicyChkCurrOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 5, 49, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("up", 1), ("down", 2))).clone('down')).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipSifPolicyChkCurrOperStatus.setStatus('mandatory')
ipSif = MibIdentifier((1, 3, 6, 1, 4, 1, 272, 4, 5, 37))
ipSifAdminStatus = MibScalar((1, 3, 6, 1, 4, 1, 272, 4, 5, 37, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('enable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipSifAdminStatus.setStatus('mandatory')
ipSifLocalFilter = MibScalar((1, 3, 6, 1, 4, 1, 272, 4, 5, 37, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipSifLocalFilter.setStatus('mandatory')
ipSifInterfaceFilter = MibScalar((1, 3, 6, 1, 4, 1, 272, 4, 5, 37, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('enable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipSifInterfaceFilter.setStatus('mandatory')
ipSifSysloglevel = MibScalar((1, 3, 6, 1, 4, 1, 272, 4, 5, 37, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("deny", 1), ("accept", 2), ("verbose", 3), ("none", 4))).clone('verbose')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipSifSysloglevel.setStatus('mandatory')
ipSifUdpTimeout = MibScalar((1, 3, 6, 1, 4, 1, 272, 4, 5, 37, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(30, 86400)).clone(180)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipSifUdpTimeout.setStatus('mandatory')
ipSifTcpTimeout = MibScalar((1, 3, 6, 1, 4, 1, 272, 4, 5, 37, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(30, 86400)).clone(3600)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipSifTcpTimeout.setStatus('mandatory')
ipSifPPTPTimeout = MibScalar((1, 3, 6, 1, 4, 1, 272, 4, 5, 37, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(30, 86400)).clone(86400)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipSifPPTPTimeout.setStatus('mandatory')
ipSifDefaultTimeout = MibScalar((1, 3, 6, 1, 4, 1, 272, 4, 5, 37, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(30, 86400)).clone(30)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipSifDefaultTimeout.setStatus('mandatory')
ipSifMaxSessions = MibScalar((1, 3, 6, 1, 4, 1, 272, 4, 5, 37, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1000000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipSifMaxSessions.setStatus('mandatory')
ipSifMaxRejectEntries = MibScalar((1, 3, 6, 1, 4, 1, 272, 4, 5, 37, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 10000)).clone(1000)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipSifMaxRejectEntries.setStatus('mandatory')
ipSifMaxRejectTtl = MibScalar((1, 3, 6, 1, 4, 1, 272, 4, 5, 37, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(5, 86400)).clone(3600)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipSifMaxRejectTtl.setStatus('mandatory')
ipSifInterfaceAliasAutoCreate = MibScalar((1, 3, 6, 1, 4, 1, 272, 4, 5, 37, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('enable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipSifInterfaceAliasAutoCreate.setStatus('mandatory')
ipSifStat = MibIdentifier((1, 3, 6, 1, 4, 1, 272, 4, 5, 46))
ipSifStatCurrSessions = MibScalar((1, 3, 6, 1, 4, 1, 272, 4, 5, 46, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipSifStatCurrSessions.setStatus('mandatory')
ipSifStatCurrUdpSessions = MibScalar((1, 3, 6, 1, 4, 1, 272, 4, 5, 46, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipSifStatCurrUdpSessions.setStatus('mandatory')
ipSifStatCurrTcpSessions = MibScalar((1, 3, 6, 1, 4, 1, 272, 4, 5, 46, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipSifStatCurrTcpSessions.setStatus('mandatory')
ipSifStatCurrOtherSessions = MibScalar((1, 3, 6, 1, 4, 1, 272, 4, 5, 46, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipSifStatCurrOtherSessions.setStatus('mandatory')
ipSifStatCurrExpectedSessions = MibScalar((1, 3, 6, 1, 4, 1, 272, 4, 5, 46, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipSifStatCurrExpectedSessions.setStatus('mandatory')
ipSifStatTotalUdpSessions = MibScalar((1, 3, 6, 1, 4, 1, 272, 4, 5, 46, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipSifStatTotalUdpSessions.setStatus('mandatory')
ipSifStatTotalTcpSessions = MibScalar((1, 3, 6, 1, 4, 1, 272, 4, 5, 46, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipSifStatTotalTcpSessions.setStatus('mandatory')
ipSifStatTotalOtherSessions = MibScalar((1, 3, 6, 1, 4, 1, 272, 4, 5, 46, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipSifStatTotalOtherSessions.setStatus('mandatory')
ipSifStatTotalExpectedSessions = MibScalar((1, 3, 6, 1, 4, 1, 272, 4, 5, 46, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipSifStatTotalExpectedSessions.setStatus('mandatory')
mibBuilder.exportSymbols("BIANCA-BRICK-SIF-MIB", ipSifAliasAddressGroupEntry=ipSifAliasAddressGroupEntry, ipSifExpectDestination=ipSifExpectDestination, ipSifAliasAddressMode=ipSifAliasAddressMode, ipSifDefaultTimeout=ipSifDefaultTimeout, ipSifAliasServiceSourcePort=ipSifAliasServiceSourcePort, ipSifSysloglevel=ipSifSysloglevel, ipSifStatCurrSessions=ipSifStatCurrSessions, ipSifAliasServiceRange=ipSifAliasServiceRange, ipSifPolicyChkDestIfIndex=ipSifPolicyChkDestIfIndex, ipSifAliasServiceEntry=ipSifAliasServiceEntry, ipSifAliasAddressMask=ipSifAliasAddressMask, ipSifAliasPriority=ipSifAliasPriority, ipSifAliasSource=ipSifAliasSource, ipSifPPTPTimeout=ipSifPPTPTimeout, ipSifPolicyChkSource=ipSifPolicyChkSource, ipSifAliasAddressGroupMode=ipSifAliasAddressGroupMode, ipSifAliasEntry=ipSifAliasEntry, ipSifRejectSilence=ipSifRejectSilence, ipSifExpectProtocol=ipSifExpectProtocol, ipSifUdpTimeout=ipSifUdpTimeout, ipSifRejectProtocol=ipSifRejectProtocol, ipSifAliasServiceTable=ipSifAliasServiceTable, ipSifStatCurrUdpSessions=ipSifStatCurrUdpSessions, ipSifAliasStatus=ipSifAliasStatus, ipSifExpectClassId=ipSifExpectClassId, ipSifAliasTable=ipSifAliasTable, ipSifExpectEntry=ipSifExpectEntry, ipSifStatCurrExpectedSessions=ipSifStatCurrExpectedSessions, ipSifPolicyChkRuleOrder=ipSifPolicyChkRuleOrder, ipSifExpectDestPort=ipSifExpectDestPort, ipSifPolicyChkDestination=ipSifPolicyChkDestination, ipSifStatCurrOtherSessions=ipSifStatCurrOtherSessions, ipSifAliasAddressRange=ipSifAliasAddressRange, ipSifPolicyChkResult=ipSifPolicyChkResult, ipSifPolicyChkCurrOperStatus=ipSifPolicyChkCurrOperStatus, ipSifRejectTable=ipSifRejectTable, ipSifPolicyChkDestPort=ipSifPolicyChkDestPort, ipSifAliasAddressTable=ipSifAliasAddressTable, ipSifAliasServiceGroupId=ipSifAliasServiceGroupId, ipSifAliasServiceIcmpCode=ipSifAliasServiceIcmpCode, ipSifPolicyChkEntry=ipSifPolicyChkEntry, ipSifPolicyChkSourceIfIndex=ipSifPolicyChkSourceIfIndex, ipSifRejectIndex=ipSifRejectIndex, ipSifPolicyChkTable=ipSifPolicyChkTable, ipSifAliasDestination=ipSifAliasDestination, ipSifStatCurrTcpSessions=ipSifStatCurrTcpSessions, ipSifAliasServiceIndex=ipSifAliasServiceIndex, ipSifAliasAddressEntry=ipSifAliasAddressEntry, ipSifAliasServiceGroupEntry=ipSifAliasServiceGroupEntry, ipSifAliasServiceGroupIndex=ipSifAliasServiceGroupIndex, ipSifRejectPortLo=ipSifRejectPortLo, ipSifAliasServiceIcmpType=ipSifAliasServiceIcmpType, ipSifStatTotalTcpSessions=ipSifStatTotalTcpSessions, ipSifAliasServiceGroupTable=ipSifAliasServiceGroupTable, ipSifStatTotalOtherSessions=ipSifStatTotalOtherSessions, ipSifAliasAddressGroupAlias=ipSifAliasAddressGroupAlias, ipSifExpectTable=ipSifExpectTable, ipSifRejectDestination=ipSifRejectDestination, ipSifPolicyChkRule=ipSifPolicyChkRule, ipSifExpectIndex=ipSifExpectIndex, ipSifRejectEntry=ipSifRejectEntry, ipSifInterfaceFilter=ipSifInterfaceFilter, ipSifStatTotalExpectedSessions=ipSifStatTotalExpectedSessions, ipSifStat=ipSifStat, biboip=biboip, ipSifExpectIfIndex=ipSifExpectIfIndex, bibo=bibo, ipSifPolicyChkOperStatus=ipSifPolicyChkOperStatus, ipSifAliasAddressGroup=ipSifAliasAddressGroup, ipSifAliasAddressGroupId=ipSifAliasAddressGroupId, ipSifAliasServiceGroupAlias=ipSifAliasServiceGroupAlias, ipSifAliasServiceGroupMode=ipSifAliasServiceGroupMode, ipSif=ipSif, ipSifAliasAction=ipSifAliasAction, ipSifRejectSource=ipSifRejectSource, ipSifPolicyChkAdminStatus=ipSifPolicyChkAdminStatus, ipSifAliasServicePort=ipSifAliasServicePort, ipSifMaxRejectTtl=ipSifMaxRejectTtl, ipSifRejectRejects=ipSifRejectRejects, ipSifAliasAddressGroupIndex=ipSifAliasAddressGroupIndex, ipSifAliasServiceAlias=ipSifAliasServiceAlias, ipSifAliasServiceGroup=ipSifAliasServiceGroup, ipSifAdminStatus=ipSifAdminStatus, ipSifExpectSourcePort=ipSifExpectSourcePort, ipSifAliasAddressGroupTable=ipSifAliasAddressGroupTable, ipSifMaxSessions=ipSifMaxSessions, ipSifAliasServiceSourceRange=ipSifAliasServiceSourceRange, ipSifAliasAddressAddress=ipSifAliasAddressAddress, ipSifPolicyChkProtocol=ipSifPolicyChkProtocol, ipSifPolicyChkState=ipSifPolicyChkState, ipSifMaxRejectEntries=ipSifMaxRejectEntries, ipSifStatTotalUdpSessions=ipSifStatTotalUdpSessions, ipSifAliasClassId=ipSifAliasClassId, ipSifExpectSource=ipSifExpectSource, ipSifAliasServiceProtocol=ipSifAliasServiceProtocol, ipSifRejectPortHigh=ipSifRejectPortHigh, ipSifAliasAddressInterface=ipSifAliasAddressInterface, ipSifAliasAddressAlias=ipSifAliasAddressAlias, ipSifAliasService=ipSifAliasService, bintec=bintec, ipSifExpectPriority=ipSifExpectPriority, ipSifAliasOrder=ipSifAliasOrder, ipSifAliasServiceType=ipSifAliasServiceType, ipSifAliasAddressIndex=ipSifAliasAddressIndex, ipSifLocalFilter=ipSifLocalFilter, ipSifTcpTimeout=ipSifTcpTimeout, ipSifInterfaceAliasAutoCreate=ipSifInterfaceAliasAutoCreate)
