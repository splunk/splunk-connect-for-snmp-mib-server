#
# PySNMP MIB module HPN-ICF-RSA-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/HPN-ICF-RSA-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:29:06 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ValueSizeConstraint, ConstraintsIntersection, ConstraintsUnion, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ValueSizeConstraint", "ConstraintsIntersection", "ConstraintsUnion", "SingleValueConstraint")
hpnicfCommon, = mibBuilder.importSymbols("HPN-ICF-OID-MIB", "hpnicfCommon")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
Counter32, IpAddress, Gauge32, MibIdentifier, TimeTicks, Bits, Integer32, MibScalar, MibTable, MibTableRow, MibTableColumn, NotificationType, Counter64, Unsigned32, iso, ModuleIdentity, ObjectIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "Counter32", "IpAddress", "Gauge32", "MibIdentifier", "TimeTicks", "Bits", "Integer32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "NotificationType", "Counter64", "Unsigned32", "iso", "ModuleIdentity", "ObjectIdentity")
DateAndTime, TextualConvention, RowStatus, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "DateAndTime", "TextualConvention", "RowStatus", "DisplayString")
hpnicfRSA = ModuleIdentity((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 23))
hpnicfRSA.setRevisions(('2004-10-10 00:00',))
if mibBuilder.loadTexts: hpnicfRSA.setLastUpdated('200410100000Z')
if mibBuilder.loadTexts: hpnicfRSA.setOrganization('')
class RSAKeyErrorCode(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36))
    namedValues = NamedValues(("rsaSuccess", 1), ("rsaFailure", 2), ("rsaErrNoMemory", 3), ("rsaErrKeyNotReplaced", 4), ("rsaErrKeyBackup", 5), ("rsaErrKeySaved", 6), ("rsaErrKeyGenerate", 7), ("rsaErrKeyDestroy", 8), ("rsaErrHostEncKeyBackup", 9), ("rsaErrHostEncKeySave", 10), ("rsaErrHostEncKeyGenerate", 11), ("rsaErrHostEncKeyDestroy", 12), ("rsaErrHostSigKeyBackup", 13), ("rsaErrHostSigKeySave", 14), ("rsaErrHostSigKeyGenerate", 15), ("rsaErrHostSigKeyDestroy", 16), ("rsaErrServerKeyBackup", 17), ("rsaErrServerKeySave", 18), ("rsaErrServerKeyGenerate", 19), ("rsaErrServerKeyDestroy", 20), ("rsaErrPeerKeyNotReplaced", 21), ("rsaErrPeerKeyNumArriveMax", 22), ("rsaErrPeerKeyNotRemoved", 23), ("rsaErrPeerKeyNotExist", 24), ("rsaStatusKeyExist", 25), ("rsaStatusKeyNotExist", 26), ("rsaStatusKeyInvalid", 27), ("rsaStatusHostEncKeyExist", 28), ("rsaStatusHostEncKeyNotExist", 29), ("rsaStatusHostEncKeyInvalid", 30), ("rsaStatusHostSigKeyExist", 31), ("rsaStatusHostSigKeyNotExist", 32), ("rsaStatusHostSigKeyInvalid", 33), ("rsaStatusServerKeyExist", 34), ("rsaStatusServerKeyNotExist", 35), ("rsaStatusServerKeyInvalid", 36))

hpnicfRSAMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 23, 1))
hpnicfRSAPeerPublicKeyTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 23, 1, 1), )
if mibBuilder.loadTexts: hpnicfRSAPeerPublicKeyTable.setStatus('current')
hpnicfRSAPeerPublicKeyEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 23, 1, 1, 1), ).setIndexNames((0, "HPN-ICF-RSA-MIB", "hpnicfRSAPeerPublicKeyName"))
if mibBuilder.loadTexts: hpnicfRSAPeerPublicKeyEntry.setStatus('current')
hpnicfRSAPeerPublicKeyName = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 23, 1, 1, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 64)))
if mibBuilder.loadTexts: hpnicfRSAPeerPublicKeyName.setStatus('current')
hpnicfRSAPeerIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 23, 1, 1, 1, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfRSAPeerIpAddress.setStatus('current')
hpnicfRSAPeerFQDN = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 23, 1, 1, 1, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfRSAPeerFQDN.setStatus('current')
hpnicfRSAPeerPublicKeyCode = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 23, 1, 1, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 1024))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfRSAPeerPublicKeyCode.setStatus('current')
hpnicfRSAPeerPublicKeyStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 23, 1, 1, 1, 5), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfRSAPeerPublicKeyStatus.setStatus('current')
hpnicfRSALocalKeyPairTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 23, 1, 2), )
if mibBuilder.loadTexts: hpnicfRSALocalKeyPairTable.setStatus('current')
hpnicfRSALocalKeyPairEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 23, 1, 2, 1), ).setIndexNames((0, "HPN-ICF-RSA-MIB", "hpnicfRSALocalKeyIndex"))
if mibBuilder.loadTexts: hpnicfRSALocalKeyPairEntry.setStatus('current')
hpnicfRSALocalKeyIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 23, 1, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1)))
if mibBuilder.loadTexts: hpnicfRSALocalKeyIndex.setStatus('current')
hpnicfRSALocalHostKeyName = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 23, 1, 2, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfRSALocalHostKeyName.setStatus('current')
hpnicfRSALocalHostKeyCode = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 23, 1, 2, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(512, 1024))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfRSALocalHostKeyCode.setStatus('current')
hpnicfRSALocalHostKeyCreatedTime = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 23, 1, 2, 1, 4), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfRSALocalHostKeyCreatedTime.setStatus('current')
hpnicfRSALocalServerKeyName = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 23, 1, 2, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfRSALocalServerKeyName.setStatus('current')
hpnicfRSALocalServerKeyCode = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 23, 1, 2, 1, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(512, 1024))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfRSALocalServerKeyCode.setStatus('current')
hpnicfRSALocalServerKeyCreatedTime = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 23, 1, 2, 1, 7), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfRSALocalServerKeyCreatedTime.setStatus('current')
hpnicfRSALocalKeyPairBits = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 23, 1, 2, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(512, 2048)).clone(512)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfRSALocalKeyPairBits.setStatus('current')
hpnicfRSALocalKeyStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 23, 1, 2, 1, 9), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfRSALocalKeyStatus.setStatus('current')
hpnicfRSAPeerKeyConfigFailReason = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 23, 1, 3), RSAKeyErrorCode()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hpnicfRSAPeerKeyConfigFailReason.setStatus('current')
hpnicfRSALocalKeyFailReason = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 23, 1, 4), RSAKeyErrorCode()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hpnicfRSALocalKeyFailReason.setStatus('current')
hpnicfRSANotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 23, 2))
hpnicfRSALocalKeyPairOpeFail = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 23, 2, 1)).setObjects(("HPN-ICF-RSA-MIB", "hpnicfRSALocalKeyFailReason"))
if mibBuilder.loadTexts: hpnicfRSALocalKeyPairOpeFail.setStatus('current')
hpnicfRSAPeerKeyConfigFail = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 23, 2, 2)).setObjects(("HPN-ICF-RSA-MIB", "hpnicfRSAPeerKeyConfigFailReason"))
if mibBuilder.loadTexts: hpnicfRSAPeerKeyConfigFail.setStatus('current')
mibBuilder.exportSymbols("HPN-ICF-RSA-MIB", hpnicfRSAMIBObjects=hpnicfRSAMIBObjects, hpnicfRSANotifications=hpnicfRSANotifications, hpnicfRSALocalKeyIndex=hpnicfRSALocalKeyIndex, hpnicfRSALocalKeyStatus=hpnicfRSALocalKeyStatus, hpnicfRSALocalServerKeyCreatedTime=hpnicfRSALocalServerKeyCreatedTime, hpnicfRSALocalKeyPairOpeFail=hpnicfRSALocalKeyPairOpeFail, PYSNMP_MODULE_ID=hpnicfRSA, hpnicfRSALocalHostKeyName=hpnicfRSALocalHostKeyName, hpnicfRSAPeerPublicKeyStatus=hpnicfRSAPeerPublicKeyStatus, hpnicfRSA=hpnicfRSA, hpnicfRSAPeerPublicKeyEntry=hpnicfRSAPeerPublicKeyEntry, hpnicfRSAPeerKeyConfigFail=hpnicfRSAPeerKeyConfigFail, hpnicfRSALocalHostKeyCreatedTime=hpnicfRSALocalHostKeyCreatedTime, RSAKeyErrorCode=RSAKeyErrorCode, hpnicfRSAPeerPublicKeyCode=hpnicfRSAPeerPublicKeyCode, hpnicfRSAPeerIpAddress=hpnicfRSAPeerIpAddress, hpnicfRSALocalHostKeyCode=hpnicfRSALocalHostKeyCode, hpnicfRSALocalKeyPairBits=hpnicfRSALocalKeyPairBits, hpnicfRSAPeerPublicKeyTable=hpnicfRSAPeerPublicKeyTable, hpnicfRSAPeerKeyConfigFailReason=hpnicfRSAPeerKeyConfigFailReason, hpnicfRSALocalKeyPairEntry=hpnicfRSALocalKeyPairEntry, hpnicfRSALocalServerKeyName=hpnicfRSALocalServerKeyName, hpnicfRSALocalServerKeyCode=hpnicfRSALocalServerKeyCode, hpnicfRSALocalKeyFailReason=hpnicfRSALocalKeyFailReason, hpnicfRSAPeerFQDN=hpnicfRSAPeerFQDN, hpnicfRSALocalKeyPairTable=hpnicfRSALocalKeyPairTable, hpnicfRSAPeerPublicKeyName=hpnicfRSAPeerPublicKeyName)
