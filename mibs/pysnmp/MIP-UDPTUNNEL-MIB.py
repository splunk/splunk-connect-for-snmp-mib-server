#
# PySNMP MIB module MIP-UDPTUNNEL-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/MIP-UDPTUNNEL-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 20:02:41 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ConstraintsIntersection, ConstraintsUnion, ValueRangeConstraint, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ConstraintsIntersection", "ConstraintsUnion", "ValueRangeConstraint", "SingleValueConstraint")
mipMIB, = mibBuilder.importSymbols("MIP-MIB", "mipMIB")
ModuleCompliance, NotificationGroup, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup", "ObjectGroup")
iso, Unsigned32, ModuleIdentity, ObjectIdentity, Bits, MibIdentifier, Integer32, Counter64, Gauge32, TimeTicks, IpAddress, Counter32, MibScalar, MibTable, MibTableRow, MibTableColumn, NotificationType = mibBuilder.importSymbols("SNMPv2-SMI", "iso", "Unsigned32", "ModuleIdentity", "ObjectIdentity", "Bits", "MibIdentifier", "Integer32", "Counter64", "Gauge32", "TimeTicks", "IpAddress", "Counter32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "NotificationType")
TextualConvention, DisplayString, TruthValue = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString", "TruthValue")
mipUdpTunnelMIB = ModuleIdentity((1, 3, 6, 1, 2, 1, 44, 4))
mipUdpTunnelMIB.setRevisions(('2007-06-12 00:00',))
if mibBuilder.loadTexts: mipUdpTunnelMIB.setLastUpdated('200706120000Z')
if mibBuilder.loadTexts: mipUdpTunnelMIB.setOrganization('IETF Mobility for IPv4 Group')
mipUdpTunnelMIBObjects = MibIdentifier((1, 3, 6, 1, 2, 1, 44, 4, 1))
mnUdpTunnel = MibIdentifier((1, 3, 6, 1, 2, 1, 44, 4, 1, 1))
haUdpTunnel = MibIdentifier((1, 3, 6, 1, 2, 1, 44, 4, 1, 2))
faUdpTunnel = MibIdentifier((1, 3, 6, 1, 2, 1, 44, 4, 1, 3))
mnUdpTunnelEnable = MibScalar((1, 3, 6, 1, 2, 1, 44, 4, 1, 1, 1), TruthValue().clone('true')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mnUdpTunnelEnable.setStatus('current')
mnUdpTunnelForce = MibScalar((1, 3, 6, 1, 2, 1, 44, 4, 1, 1, 2), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mnUdpTunnelForce.setStatus('current')
mnUdpTunnelKeepaliveInterval = MibScalar((1, 3, 6, 1, 2, 1, 44, 4, 1, 1, 3), Unsigned32().clone(110)).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: mnUdpTunnelKeepaliveInterval.setStatus('current')
haUdpTunnelEnable = MibScalar((1, 3, 6, 1, 2, 1, 44, 4, 1, 2, 1), TruthValue().clone('true')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: haUdpTunnelEnable.setStatus('current')
haUdpTunnelKeepaliveInterval = MibScalar((1, 3, 6, 1, 2, 1, 44, 4, 1, 2, 2), Unsigned32()).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: haUdpTunnelKeepaliveInterval.setStatus('current')
haUdpTunnelForce = MibScalar((1, 3, 6, 1, 2, 1, 44, 4, 1, 2, 3), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: haUdpTunnelForce.setStatus('current')
haUdpTunnelEncapUnavail = MibScalar((1, 3, 6, 1, 2, 1, 44, 4, 1, 2, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: haUdpTunnelEncapUnavail.setStatus('current')
faUdpTunnelEnable = MibScalar((1, 3, 6, 1, 2, 1, 44, 4, 1, 3, 1), TruthValue().clone('true')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: faUdpTunnelEnable.setStatus('current')
faUdpTunnelForce = MibScalar((1, 3, 6, 1, 2, 1, 44, 4, 1, 3, 2), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: faUdpTunnelForce.setStatus('current')
faUdpTunnelKeepaliveInterval = MibScalar((1, 3, 6, 1, 2, 1, 44, 4, 1, 3, 3), Unsigned32().clone(110)).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: faUdpTunnelKeepaliveInterval.setStatus('current')
mipUdpTunnelConformance = MibIdentifier((1, 3, 6, 1, 2, 1, 44, 4, 2))
mipUdpTunnelGroups = MibIdentifier((1, 3, 6, 1, 2, 1, 44, 4, 2, 1))
mipUdpTunnelCompliances = MibIdentifier((1, 3, 6, 1, 2, 1, 44, 4, 2, 2))
mipUdpTunnelCompliance = ModuleCompliance((1, 3, 6, 1, 2, 1, 44, 4, 2, 2, 1)).setObjects(("MIP-UDPTUNNEL-MIB", "mnUdpTunnelGroup"), ("MIP-UDPTUNNEL-MIB", "haUdpTunnelGroup"), ("MIP-UDPTUNNEL-MIB", "faUdpTunnelGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    mipUdpTunnelCompliance = mipUdpTunnelCompliance.setStatus('current')
mnUdpTunnelGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 44, 4, 2, 1, 1)).setObjects(("MIP-UDPTUNNEL-MIB", "mnUdpTunnelEnable"), ("MIP-UDPTUNNEL-MIB", "mnUdpTunnelForce"), ("MIP-UDPTUNNEL-MIB", "mnUdpTunnelKeepaliveInterval"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    mnUdpTunnelGroup = mnUdpTunnelGroup.setStatus('current')
haUdpTunnelGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 44, 4, 2, 1, 2)).setObjects(("MIP-UDPTUNNEL-MIB", "haUdpTunnelEnable"), ("MIP-UDPTUNNEL-MIB", "haUdpTunnelForce"), ("MIP-UDPTUNNEL-MIB", "haUdpTunnelKeepaliveInterval"), ("MIP-UDPTUNNEL-MIB", "haUdpTunnelEncapUnavail"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    haUdpTunnelGroup = haUdpTunnelGroup.setStatus('current')
faUdpTunnelGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 44, 4, 2, 1, 3)).setObjects(("MIP-UDPTUNNEL-MIB", "faUdpTunnelEnable"), ("MIP-UDPTUNNEL-MIB", "faUdpTunnelForce"), ("MIP-UDPTUNNEL-MIB", "faUdpTunnelKeepaliveInterval"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    faUdpTunnelGroup = faUdpTunnelGroup.setStatus('current')
mibBuilder.exportSymbols("MIP-UDPTUNNEL-MIB", PYSNMP_MODULE_ID=mipUdpTunnelMIB, haUdpTunnelEnable=haUdpTunnelEnable, faUdpTunnelEnable=faUdpTunnelEnable, mipUdpTunnelConformance=mipUdpTunnelConformance, haUdpTunnelKeepaliveInterval=haUdpTunnelKeepaliveInterval, mnUdpTunnelForce=mnUdpTunnelForce, mipUdpTunnelCompliance=mipUdpTunnelCompliance, haUdpTunnelForce=haUdpTunnelForce, haUdpTunnel=haUdpTunnel, mipUdpTunnelGroups=mipUdpTunnelGroups, mipUdpTunnelMIB=mipUdpTunnelMIB, mnUdpTunnel=mnUdpTunnel, faUdpTunnelGroup=faUdpTunnelGroup, mnUdpTunnelGroup=mnUdpTunnelGroup, faUdpTunnelForce=faUdpTunnelForce, faUdpTunnelKeepaliveInterval=faUdpTunnelKeepaliveInterval, haUdpTunnelGroup=haUdpTunnelGroup, haUdpTunnelEncapUnavail=haUdpTunnelEncapUnavail, mipUdpTunnelMIBObjects=mipUdpTunnelMIBObjects, mnUdpTunnelEnable=mnUdpTunnelEnable, mnUdpTunnelKeepaliveInterval=mnUdpTunnelKeepaliveInterval, mipUdpTunnelCompliances=mipUdpTunnelCompliances, faUdpTunnel=faUdpTunnel)
