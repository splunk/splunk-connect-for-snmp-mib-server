#
# PySNMP MIB module ASKEY-QOS-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/ASKEY-QOS-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:13:23 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ipDslam, = mibBuilder.importSymbols("ASKEY-DSLAM-MIB", "ipDslam")
askeyCosQueueMapping8021p, = mibBuilder.importSymbols("ASKEY-SYSTEM-MIB", "askeyCosQueueMapping8021p")
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, SingleValueConstraint, ValueSizeConstraint, ConstraintsIntersection, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "SingleValueConstraint", "ValueSizeConstraint", "ConstraintsIntersection", "ValueRangeConstraint")
ifIndex, = mibBuilder.importSymbols("IF-MIB", "ifIndex")
SnmpAdminString, = mibBuilder.importSymbols("SNMP-FRAMEWORK-MIB", "SnmpAdminString")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Integer32, iso, Gauge32, NotificationType, MibScalar, MibTable, MibTableRow, MibTableColumn, IpAddress, ObjectIdentity, MibIdentifier, ModuleIdentity, Counter64, Unsigned32, Counter32, TimeTicks, Bits = mibBuilder.importSymbols("SNMPv2-SMI", "Integer32", "iso", "Gauge32", "NotificationType", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "IpAddress", "ObjectIdentity", "MibIdentifier", "ModuleIdentity", "Counter64", "Unsigned32", "Counter32", "TimeTicks", "Bits")
TextualConvention, DisplayString, RowStatus = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString", "RowStatus")
askeyQoSMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 3646, 1300, 2, 16))
if mibBuilder.loadTexts: askeyQoSMIB.setLastUpdated('200605300000Z')
if mibBuilder.loadTexts: askeyQoSMIB.setOrganization('ASKEY Inc.')
askeyQoSLineMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 3646, 1300, 2, 16, 1))
askeyQoSLineTable = MibTable((1, 3, 6, 1, 4, 1, 3646, 1300, 2, 16, 1, 1), )
if mibBuilder.loadTexts: askeyQoSLineTable.setStatus('current')
askeyQoSLineEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3646, 1300, 2, 16, 1, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: askeyQoSLineEntry.setStatus('current')
askeyQoSLineTrafficPolicing = MibTableColumn((1, 3, 6, 1, 4, 1, 3646, 1300, 2, 16, 1, 1, 1, 1), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: askeyQoSLineTrafficPolicing.setStatus('current')
askeyQoSDiffServMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 3646, 1300, 2, 16, 2))
diffServAdminStatus = MibScalar((1, 3, 6, 1, 4, 1, 3646, 1300, 2, 16, 2, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: diffServAdminStatus.setStatus('current')
diffServMappingTable = MibTable((1, 3, 6, 1, 4, 1, 3646, 1300, 2, 16, 2, 2), )
if mibBuilder.loadTexts: diffServMappingTable.setStatus('current')
diffServMappingEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3646, 1300, 2, 16, 2, 2, 1), ).setIndexNames((0, "ASKEY-SYSTEM-MIB", "askeyCosQueueMapping8021p"))
if mibBuilder.loadTexts: diffServMappingEntry.setStatus('current')
diffServDSCP = MibTableColumn((1, 3, 6, 1, 4, 1, 3646, 1300, 2, 16, 2, 2, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13))).clone(namedValues=NamedValues(("be", 0), ("af11", 1), ("af12", 2), ("af13", 3), ("af21", 4), ("af22", 5), ("af23", 6), ("af31", 7), ("af32", 8), ("af33", 9), ("af41", 10), ("af42", 11), ("af43", 12), ("ef", 13)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: diffServDSCP.setStatus('current')
askeyQoSTrafficPolicingMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 3646, 1300, 2, 16, 3))
trafficPolicingTable = MibTable((1, 3, 6, 1, 4, 1, 3646, 1300, 2, 16, 3, 1), )
if mibBuilder.loadTexts: trafficPolicingTable.setStatus('current')
trafficPolicingEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3646, 1300, 2, 16, 3, 1, 1), ).setIndexNames((1, "ASKEY-QOS-MIB", "trafficPolicingName"))
if mibBuilder.loadTexts: trafficPolicingEntry.setStatus('current')
trafficPolicingName = MibTableColumn((1, 3, 6, 1, 4, 1, 3646, 1300, 2, 16, 3, 1, 1, 1), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 32)))
if mibBuilder.loadTexts: trafficPolicingName.setStatus('current')
trafficPolicingCIR = MibTableColumn((1, 3, 6, 1, 4, 1, 3646, 1300, 2, 16, 3, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1000))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: trafficPolicingCIR.setStatus('current')
trafficPolicingAction = MibTableColumn((1, 3, 6, 1, 4, 1, 3646, 1300, 2, 16, 3, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15))).clone(namedValues=NamedValues(("noAction", 0), ("drop", 1), ("be", 2), ("af11", 3), ("af12", 4), ("af13", 5), ("af21", 6), ("af22", 7), ("af23", 8), ("af31", 9), ("af32", 10), ("af33", 11), ("af41", 12), ("af42", 13), ("af43", 14), ("ef", 15)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: trafficPolicingAction.setStatus('current')
trafficPolicingRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 3646, 1300, 2, 16, 3, 1, 1, 5), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: trafficPolicingRowStatus.setStatus('current')
mibBuilder.exportSymbols("ASKEY-QOS-MIB", askeyQoSTrafficPolicingMIBObjects=askeyQoSTrafficPolicingMIBObjects, PYSNMP_MODULE_ID=askeyQoSMIB, askeyQoSLineEntry=askeyQoSLineEntry, askeyQoSLineTrafficPolicing=askeyQoSLineTrafficPolicing, askeyQoSMIB=askeyQoSMIB, askeyQoSLineTable=askeyQoSLineTable, diffServAdminStatus=diffServAdminStatus, askeyQoSDiffServMIBObjects=askeyQoSDiffServMIBObjects, diffServMappingTable=diffServMappingTable, trafficPolicingTable=trafficPolicingTable, askeyQoSLineMIBObjects=askeyQoSLineMIBObjects, trafficPolicingEntry=trafficPolicingEntry, trafficPolicingName=trafficPolicingName, trafficPolicingCIR=trafficPolicingCIR, trafficPolicingRowStatus=trafficPolicingRowStatus, diffServMappingEntry=diffServMappingEntry, trafficPolicingAction=trafficPolicingAction, diffServDSCP=diffServDSCP)
