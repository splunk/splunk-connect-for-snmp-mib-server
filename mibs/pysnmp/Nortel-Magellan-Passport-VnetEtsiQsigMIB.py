#
# PySNMP MIB module Nortel-Magellan-Passport-VnetEtsiQsigMIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/Nortel-Magellan-Passport-VnetEtsiQsigMIB
# Produced by pysmi-0.3.4 at Mon Apr 29 20:19:14 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, SingleValueConstraint, ConstraintsIntersection, ValueSizeConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "SingleValueConstraint", "ConstraintsIntersection", "ValueSizeConstraint", "ConstraintsUnion")
StorageType, Unsigned32, RowStatus, DisplayString = mibBuilder.importSymbols("Nortel-Magellan-Passport-StandardTextualConventionsMIB", "StorageType", "Unsigned32", "RowStatus", "DisplayString")
Link, NonReplicated = mibBuilder.importSymbols("Nortel-Magellan-Passport-TextualConventionsMIB", "Link", "NonReplicated")
passportMIBs, = mibBuilder.importSymbols("Nortel-Magellan-Passport-UsefulDefinitionsMIB", "passportMIBs")
sigChan, sigChanIndex = mibBuilder.importSymbols("Nortel-Magellan-Passport-VoiceNetworkingMIB", "sigChan", "sigChanIndex")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
ObjectIdentity, Bits, MibScalar, MibTable, MibTableRow, MibTableColumn, NotificationType, IpAddress, MibIdentifier, iso, TimeTicks, Counter64, Integer32, Counter32, Gauge32, Unsigned32, ModuleIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "ObjectIdentity", "Bits", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "NotificationType", "IpAddress", "MibIdentifier", "iso", "TimeTicks", "Counter64", "Integer32", "Counter32", "Gauge32", "Unsigned32", "ModuleIdentity")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
vnetEtsiQsigMIB = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 110))
sigChanEQsig = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 2))
sigChanEQsigRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 2, 1), )
if mibBuilder.loadTexts: sigChanEQsigRowStatusTable.setStatus('mandatory')
sigChanEQsigRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 2, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VoiceNetworkingMIB", "sigChanIndex"), (0, "Nortel-Magellan-Passport-VnetEtsiQsigMIB", "sigChanEQsigIndex"))
if mibBuilder.loadTexts: sigChanEQsigRowStatusEntry.setStatus('mandatory')
sigChanEQsigRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 2, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sigChanEQsigRowStatus.setStatus('mandatory')
sigChanEQsigComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 2, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sigChanEQsigComponentName.setStatus('mandatory')
sigChanEQsigStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 2, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sigChanEQsigStorageType.setStatus('mandatory')
sigChanEQsigIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 2, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: sigChanEQsigIndex.setStatus('mandatory')
sigChanEQsigL2Table = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 2, 11), )
if mibBuilder.loadTexts: sigChanEQsigL2Table.setStatus('mandatory')
sigChanEQsigL2Entry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 2, 11, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VoiceNetworkingMIB", "sigChanIndex"), (0, "Nortel-Magellan-Passport-VnetEtsiQsigMIB", "sigChanEQsigIndex"))
if mibBuilder.loadTexts: sigChanEQsigL2Entry.setStatus('mandatory')
sigChanEQsigT23 = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 2, 11, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 15)).clone(10)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sigChanEQsigT23.setStatus('mandatory')
sigChanEQsigT200 = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 2, 11, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 20)).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sigChanEQsigT200.setStatus('mandatory')
sigChanEQsigN200 = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 2, 11, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 8)).clone(3)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sigChanEQsigN200.setStatus('mandatory')
sigChanEQsigT203 = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 2, 11, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(2, 40)).clone(10)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sigChanEQsigT203.setStatus('mandatory')
sigChanEQsigCircuitSwitchedK = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 2, 11, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 127)).clone(7)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sigChanEQsigCircuitSwitchedK.setStatus('mandatory')
sigChanEQsigL3Table = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 2, 12), )
if mibBuilder.loadTexts: sigChanEQsigL3Table.setStatus('mandatory')
sigChanEQsigL3Entry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 2, 12, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VoiceNetworkingMIB", "sigChanIndex"), (0, "Nortel-Magellan-Passport-VnetEtsiQsigMIB", "sigChanEQsigIndex"))
if mibBuilder.loadTexts: sigChanEQsigL3Entry.setStatus('mandatory')
sigChanEQsigT309 = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 2, 12, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(15, 120)).clone(90)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sigChanEQsigT309.setStatus('mandatory')
sigChanEQsigT310 = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 2, 12, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(10, 120)).clone(30)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sigChanEQsigT310.setStatus('mandatory')
sigChanEQsigProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 2, 13), )
if mibBuilder.loadTexts: sigChanEQsigProvTable.setStatus('mandatory')
sigChanEQsigProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 2, 13, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VoiceNetworkingMIB", "sigChanIndex"), (0, "Nortel-Magellan-Passport-VnetEtsiQsigMIB", "sigChanEQsigIndex"))
if mibBuilder.loadTexts: sigChanEQsigProvEntry.setStatus('mandatory')
sigChanEQsigSide = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 2, 13, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("network", 1), ("user", 2))).clone('network')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sigChanEQsigSide.setStatus('mandatory')
sigChanEQsigMaxNonCallConcurrent = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 2, 13, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 30)).clone(30)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sigChanEQsigMaxNonCallConcurrent.setStatus('mandatory')
sigChanEQsigOverlapSendingEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 2, 13, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("enabled", 0), ("disabled", 1))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sigChanEQsigOverlapSendingEnabled.setStatus('mandatory')
sigChanEQsigOverlapReceivingEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 2, 13, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("enabled", 0), ("disabled", 1))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sigChanEQsigOverlapReceivingEnabled.setStatus('mandatory')
sigChanEQsigStateTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 2, 14), )
if mibBuilder.loadTexts: sigChanEQsigStateTable.setStatus('mandatory')
sigChanEQsigStateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 2, 14, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VoiceNetworkingMIB", "sigChanIndex"), (0, "Nortel-Magellan-Passport-VnetEtsiQsigMIB", "sigChanEQsigIndex"))
if mibBuilder.loadTexts: sigChanEQsigStateEntry.setStatus('mandatory')
sigChanEQsigAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 2, 14, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("locked", 0), ("unlocked", 1), ("shuttingDown", 2))).clone('unlocked')).setMaxAccess("readonly")
if mibBuilder.loadTexts: sigChanEQsigAdminState.setStatus('mandatory')
sigChanEQsigOperationalState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 2, 14, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1))).clone('disabled')).setMaxAccess("readonly")
if mibBuilder.loadTexts: sigChanEQsigOperationalState.setStatus('mandatory')
sigChanEQsigUsageState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 2, 14, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("idle", 0), ("active", 1), ("busy", 2))).clone('idle')).setMaxAccess("readonly")
if mibBuilder.loadTexts: sigChanEQsigUsageState.setStatus('mandatory')
sigChanEQsigStatsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 2, 15), )
if mibBuilder.loadTexts: sigChanEQsigStatsTable.setStatus('mandatory')
sigChanEQsigStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 2, 15, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VoiceNetworkingMIB", "sigChanIndex"), (0, "Nortel-Magellan-Passport-VnetEtsiQsigMIB", "sigChanEQsigIndex"))
if mibBuilder.loadTexts: sigChanEQsigStatsEntry.setStatus('mandatory')
sigChanEQsigTotalCallsToIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 2, 15, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sigChanEQsigTotalCallsToIf.setStatus('mandatory')
sigChanEQsigTotalCallsFromIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 2, 15, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sigChanEQsigTotalCallsFromIf.setStatus('mandatory')
sigChanEQsigNonCallAssocSessionsToIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 2, 15, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sigChanEQsigNonCallAssocSessionsToIf.setStatus('mandatory')
sigChanEQsigNonCallAssocSessionsFromIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 2, 15, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sigChanEQsigNonCallAssocSessionsFromIf.setStatus('mandatory')
sigChanEQsigOperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 2, 16), )
if mibBuilder.loadTexts: sigChanEQsigOperTable.setStatus('mandatory')
sigChanEQsigOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 2, 16, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VoiceNetworkingMIB", "sigChanIndex"), (0, "Nortel-Magellan-Passport-VnetEtsiQsigMIB", "sigChanEQsigIndex"))
if mibBuilder.loadTexts: sigChanEQsigOperEntry.setStatus('mandatory')
sigChanEQsigActiveChannels = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 2, 16, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sigChanEQsigActiveChannels.setStatus('mandatory')
sigChanEQsigActiveVoiceChannels = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 2, 16, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sigChanEQsigActiveVoiceChannels.setStatus('mandatory')
sigChanEQsigActiveDataChannels = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 2, 16, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sigChanEQsigActiveDataChannels.setStatus('mandatory')
sigChanEQsigPeakActiveChannels = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 2, 16, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sigChanEQsigPeakActiveChannels.setStatus('mandatory')
sigChanEQsigPeakActiveVoiceChannels = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 2, 16, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sigChanEQsigPeakActiveVoiceChannels.setStatus('mandatory')
sigChanEQsigPeakActiveDataChannels = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 2, 16, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sigChanEQsigPeakActiveDataChannels.setStatus('mandatory')
sigChanEQsigDChanStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 2, 16, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("outOfService", 0), ("establishing", 1), ("established", 2), ("enabling", 3), ("inService", 4), ("restarting", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sigChanEQsigDChanStatus.setStatus('mandatory')
sigChanEQsigToolsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 2, 17), )
if mibBuilder.loadTexts: sigChanEQsigToolsTable.setStatus('mandatory')
sigChanEQsigToolsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 2, 17, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VoiceNetworkingMIB", "sigChanIndex"), (0, "Nortel-Magellan-Passport-VnetEtsiQsigMIB", "sigChanEQsigIndex"))
if mibBuilder.loadTexts: sigChanEQsigToolsEntry.setStatus('mandatory')
sigChanEQsigTracing = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 2, 17, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 1)).setFixedLength(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sigChanEQsigTracing.setStatus('mandatory')
sigChanEQsigEQsigSpecificProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 2, 18), )
if mibBuilder.loadTexts: sigChanEQsigEQsigSpecificProvTable.setStatus('mandatory')
sigChanEQsigEQsigSpecificProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 2, 18, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VoiceNetworkingMIB", "sigChanIndex"), (0, "Nortel-Magellan-Passport-VnetEtsiQsigMIB", "sigChanEQsigIndex"))
if mibBuilder.loadTexts: sigChanEQsigEQsigSpecificProvEntry.setStatus('mandatory')
sigChanEQsigMsgSegmentation = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 2, 18, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("enabled", 0), ("disabled", 1))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sigChanEQsigMsgSegmentation.setStatus('mandatory')
sigChanEQsigE1ChannelNumbers = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 2, 18, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("skip16", 1), ("contiguous", 2))).clone('skip16')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sigChanEQsigE1ChannelNumbers.setStatus('mandatory')
sigChanEQsigEQsigSpecificOpTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 2, 19), )
if mibBuilder.loadTexts: sigChanEQsigEQsigSpecificOpTable.setStatus('mandatory')
sigChanEQsigEQsigSpecificOpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 2, 19, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VoiceNetworkingMIB", "sigChanIndex"), (0, "Nortel-Magellan-Passport-VnetEtsiQsigMIB", "sigChanEQsigIndex"))
if mibBuilder.loadTexts: sigChanEQsigEQsigSpecificOpEntry.setStatus('mandatory')
sigChanEQsigSegmentationAccepted = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 2, 19, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sigChanEQsigSegmentationAccepted.setStatus('mandatory')
sigChanEQsigSegmentationFailed = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 2, 19, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sigChanEQsigSegmentationFailed.setStatus('mandatory')
sigChanEQsigFramer = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 2, 2))
sigChanEQsigFramerRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 2, 2, 1), )
if mibBuilder.loadTexts: sigChanEQsigFramerRowStatusTable.setStatus('mandatory')
sigChanEQsigFramerRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 2, 2, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VoiceNetworkingMIB", "sigChanIndex"), (0, "Nortel-Magellan-Passport-VnetEtsiQsigMIB", "sigChanEQsigIndex"), (0, "Nortel-Magellan-Passport-VnetEtsiQsigMIB", "sigChanEQsigFramerIndex"))
if mibBuilder.loadTexts: sigChanEQsigFramerRowStatusEntry.setStatus('mandatory')
sigChanEQsigFramerRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 2, 2, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sigChanEQsigFramerRowStatus.setStatus('mandatory')
sigChanEQsigFramerComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 2, 2, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sigChanEQsigFramerComponentName.setStatus('mandatory')
sigChanEQsigFramerStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 2, 2, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sigChanEQsigFramerStorageType.setStatus('mandatory')
sigChanEQsigFramerIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 2, 2, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: sigChanEQsigFramerIndex.setStatus('mandatory')
sigChanEQsigFramerProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 2, 2, 10), )
if mibBuilder.loadTexts: sigChanEQsigFramerProvTable.setStatus('mandatory')
sigChanEQsigFramerProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 2, 2, 10, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VoiceNetworkingMIB", "sigChanIndex"), (0, "Nortel-Magellan-Passport-VnetEtsiQsigMIB", "sigChanEQsigIndex"), (0, "Nortel-Magellan-Passport-VnetEtsiQsigMIB", "sigChanEQsigFramerIndex"))
if mibBuilder.loadTexts: sigChanEQsigFramerProvEntry.setStatus('mandatory')
sigChanEQsigFramerInterfaceName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 2, 2, 10, 1, 1), Link()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sigChanEQsigFramerInterfaceName.setStatus('mandatory')
sigChanEQsigFramerStateTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 2, 2, 12), )
if mibBuilder.loadTexts: sigChanEQsigFramerStateTable.setStatus('mandatory')
sigChanEQsigFramerStateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 2, 2, 12, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VoiceNetworkingMIB", "sigChanIndex"), (0, "Nortel-Magellan-Passport-VnetEtsiQsigMIB", "sigChanEQsigIndex"), (0, "Nortel-Magellan-Passport-VnetEtsiQsigMIB", "sigChanEQsigFramerIndex"))
if mibBuilder.loadTexts: sigChanEQsigFramerStateEntry.setStatus('mandatory')
sigChanEQsigFramerAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 2, 2, 12, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("locked", 0), ("unlocked", 1), ("shuttingDown", 2))).clone('unlocked')).setMaxAccess("readonly")
if mibBuilder.loadTexts: sigChanEQsigFramerAdminState.setStatus('mandatory')
sigChanEQsigFramerOperationalState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 2, 2, 12, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1))).clone('disabled')).setMaxAccess("readonly")
if mibBuilder.loadTexts: sigChanEQsigFramerOperationalState.setStatus('mandatory')
sigChanEQsigFramerUsageState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 2, 2, 12, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("idle", 0), ("active", 1), ("busy", 2))).clone('idle')).setMaxAccess("readonly")
if mibBuilder.loadTexts: sigChanEQsigFramerUsageState.setStatus('mandatory')
sigChanEQsigFramerStatsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 2, 2, 13), )
if mibBuilder.loadTexts: sigChanEQsigFramerStatsTable.setStatus('mandatory')
sigChanEQsigFramerStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 2, 2, 13, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VoiceNetworkingMIB", "sigChanIndex"), (0, "Nortel-Magellan-Passport-VnetEtsiQsigMIB", "sigChanEQsigIndex"), (0, "Nortel-Magellan-Passport-VnetEtsiQsigMIB", "sigChanEQsigFramerIndex"))
if mibBuilder.loadTexts: sigChanEQsigFramerStatsEntry.setStatus('mandatory')
sigChanEQsigFramerFrmToIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 2, 2, 13, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sigChanEQsigFramerFrmToIf.setStatus('mandatory')
sigChanEQsigFramerFrmFromIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 2, 2, 13, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sigChanEQsigFramerFrmFromIf.setStatus('mandatory')
sigChanEQsigFramerOctetFromIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 2, 2, 13, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sigChanEQsigFramerOctetFromIf.setStatus('mandatory')
sigChanEQsigFramerAborts = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 2, 2, 13, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sigChanEQsigFramerAborts.setStatus('mandatory')
sigChanEQsigFramerCrcErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 2, 2, 13, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sigChanEQsigFramerCrcErrors.setStatus('mandatory')
sigChanEQsigFramerLrcErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 2, 2, 13, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sigChanEQsigFramerLrcErrors.setStatus('mandatory')
sigChanEQsigFramerNonOctetErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 2, 2, 13, 1, 7), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sigChanEQsigFramerNonOctetErrors.setStatus('mandatory')
sigChanEQsigFramerOverruns = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 2, 2, 13, 1, 8), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sigChanEQsigFramerOverruns.setStatus('mandatory')
sigChanEQsigFramerUnderruns = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 2, 2, 13, 1, 9), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sigChanEQsigFramerUnderruns.setStatus('mandatory')
sigChanEQsigFramerLargeFrmErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 2, 2, 13, 1, 10), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sigChanEQsigFramerLargeFrmErrors.setStatus('mandatory')
vnetEtsiQsigGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 110, 1))
vnetEtsiQsigGroupBE = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 110, 1, 5))
vnetEtsiQsigGroupBE01 = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 110, 1, 5, 2))
vnetEtsiQsigGroupBE01A = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 110, 1, 5, 2, 2))
vnetEtsiQsigCapabilities = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 110, 3))
vnetEtsiQsigCapabilitiesBE = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 110, 3, 5))
vnetEtsiQsigCapabilitiesBE01 = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 110, 3, 5, 2))
vnetEtsiQsigCapabilitiesBE01A = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 110, 3, 5, 2, 2))
mibBuilder.exportSymbols("Nortel-Magellan-Passport-VnetEtsiQsigMIB", sigChanEQsigSegmentationAccepted=sigChanEQsigSegmentationAccepted, sigChanEQsigFramerFrmToIf=sigChanEQsigFramerFrmToIf, sigChanEQsigOperEntry=sigChanEQsigOperEntry, sigChanEQsigFramerStorageType=sigChanEQsigFramerStorageType, sigChanEQsigStorageType=sigChanEQsigStorageType, vnetEtsiQsigGroupBE01A=vnetEtsiQsigGroupBE01A, sigChanEQsigFramerProvTable=sigChanEQsigFramerProvTable, sigChanEQsigTotalCallsFromIf=sigChanEQsigTotalCallsFromIf, sigChanEQsig=sigChanEQsig, sigChanEQsigFramerInterfaceName=sigChanEQsigFramerInterfaceName, sigChanEQsigTotalCallsToIf=sigChanEQsigTotalCallsToIf, sigChanEQsigFramerLargeFrmErrors=sigChanEQsigFramerLargeFrmErrors, sigChanEQsigToolsTable=sigChanEQsigToolsTable, sigChanEQsigCircuitSwitchedK=sigChanEQsigCircuitSwitchedK, sigChanEQsigEQsigSpecificOpTable=sigChanEQsigEQsigSpecificOpTable, sigChanEQsigProvEntry=sigChanEQsigProvEntry, sigChanEQsigEQsigSpecificProvTable=sigChanEQsigEQsigSpecificProvTable, sigChanEQsigFramerStatsEntry=sigChanEQsigFramerStatsEntry, sigChanEQsigOverlapReceivingEnabled=sigChanEQsigOverlapReceivingEnabled, sigChanEQsigIndex=sigChanEQsigIndex, sigChanEQsigL2Entry=sigChanEQsigL2Entry, sigChanEQsigOverlapSendingEnabled=sigChanEQsigOverlapSendingEnabled, sigChanEQsigProvTable=sigChanEQsigProvTable, sigChanEQsigSide=sigChanEQsigSide, sigChanEQsigFramerUsageState=sigChanEQsigFramerUsageState, sigChanEQsigFramerAborts=sigChanEQsigFramerAborts, sigChanEQsigNonCallAssocSessionsFromIf=sigChanEQsigNonCallAssocSessionsFromIf, sigChanEQsigL3Entry=sigChanEQsigL3Entry, sigChanEQsigFramerCrcErrors=sigChanEQsigFramerCrcErrors, sigChanEQsigFramerRowStatusTable=sigChanEQsigFramerRowStatusTable, sigChanEQsigL2Table=sigChanEQsigL2Table, sigChanEQsigFramer=sigChanEQsigFramer, sigChanEQsigEQsigSpecificProvEntry=sigChanEQsigEQsigSpecificProvEntry, sigChanEQsigPeakActiveDataChannels=sigChanEQsigPeakActiveDataChannels, sigChanEQsigFramerComponentName=sigChanEQsigFramerComponentName, vnetEtsiQsigCapabilitiesBE01=vnetEtsiQsigCapabilitiesBE01, sigChanEQsigFramerOctetFromIf=sigChanEQsigFramerOctetFromIf, sigChanEQsigDChanStatus=sigChanEQsigDChanStatus, sigChanEQsigFramerFrmFromIf=sigChanEQsigFramerFrmFromIf, sigChanEQsigTracing=sigChanEQsigTracing, sigChanEQsigToolsEntry=sigChanEQsigToolsEntry, vnetEtsiQsigGroupBE01=vnetEtsiQsigGroupBE01, sigChanEQsigT200=sigChanEQsigT200, sigChanEQsigOperationalState=sigChanEQsigOperationalState, sigChanEQsigRowStatusTable=sigChanEQsigRowStatusTable, sigChanEQsigActiveChannels=sigChanEQsigActiveChannels, vnetEtsiQsigGroupBE=vnetEtsiQsigGroupBE, sigChanEQsigN200=sigChanEQsigN200, sigChanEQsigMaxNonCallConcurrent=sigChanEQsigMaxNonCallConcurrent, sigChanEQsigT23=sigChanEQsigT23, sigChanEQsigEQsigSpecificOpEntry=sigChanEQsigEQsigSpecificOpEntry, sigChanEQsigT203=sigChanEQsigT203, sigChanEQsigL3Table=sigChanEQsigL3Table, sigChanEQsigT310=sigChanEQsigT310, sigChanEQsigStatsTable=sigChanEQsigStatsTable, sigChanEQsigRowStatusEntry=sigChanEQsigRowStatusEntry, vnetEtsiQsigCapabilities=vnetEtsiQsigCapabilities, sigChanEQsigOperTable=sigChanEQsigOperTable, sigChanEQsigActiveVoiceChannels=sigChanEQsigActiveVoiceChannels, sigChanEQsigPeakActiveChannels=sigChanEQsigPeakActiveChannels, sigChanEQsigT309=sigChanEQsigT309, sigChanEQsigFramerAdminState=sigChanEQsigFramerAdminState, sigChanEQsigFramerRowStatusEntry=sigChanEQsigFramerRowStatusEntry, sigChanEQsigFramerNonOctetErrors=sigChanEQsigFramerNonOctetErrors, sigChanEQsigAdminState=sigChanEQsigAdminState, vnetEtsiQsigGroup=vnetEtsiQsigGroup, vnetEtsiQsigCapabilitiesBE=vnetEtsiQsigCapabilitiesBE, sigChanEQsigFramerProvEntry=sigChanEQsigFramerProvEntry, sigChanEQsigFramerStateEntry=sigChanEQsigFramerStateEntry, sigChanEQsigComponentName=sigChanEQsigComponentName, sigChanEQsigFramerStatsTable=sigChanEQsigFramerStatsTable, sigChanEQsigFramerStateTable=sigChanEQsigFramerStateTable, sigChanEQsigActiveDataChannels=sigChanEQsigActiveDataChannels, sigChanEQsigUsageState=sigChanEQsigUsageState, sigChanEQsigFramerLrcErrors=sigChanEQsigFramerLrcErrors, sigChanEQsigFramerOperationalState=sigChanEQsigFramerOperationalState, sigChanEQsigMsgSegmentation=sigChanEQsigMsgSegmentation, sigChanEQsigRowStatus=sigChanEQsigRowStatus, sigChanEQsigNonCallAssocSessionsToIf=sigChanEQsigNonCallAssocSessionsToIf, sigChanEQsigFramerIndex=sigChanEQsigFramerIndex, sigChanEQsigPeakActiveVoiceChannels=sigChanEQsigPeakActiveVoiceChannels, sigChanEQsigFramerRowStatus=sigChanEQsigFramerRowStatus, sigChanEQsigStatsEntry=sigChanEQsigStatsEntry, sigChanEQsigFramerUnderruns=sigChanEQsigFramerUnderruns, sigChanEQsigSegmentationFailed=sigChanEQsigSegmentationFailed, sigChanEQsigStateTable=sigChanEQsigStateTable, sigChanEQsigFramerOverruns=sigChanEQsigFramerOverruns, vnetEtsiQsigMIB=vnetEtsiQsigMIB, sigChanEQsigStateEntry=sigChanEQsigStateEntry, vnetEtsiQsigCapabilitiesBE01A=vnetEtsiQsigCapabilitiesBE01A, sigChanEQsigE1ChannelNumbers=sigChanEQsigE1ChannelNumbers)
