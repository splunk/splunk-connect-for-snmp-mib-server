#
# PySNMP MIB module DLGHWINF-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/DLGHWINF-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 18:32:47 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ValueRangeConstraint, ConstraintsUnion, ConstraintsIntersection, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ValueRangeConstraint", "ConstraintsUnion", "ConstraintsIntersection", "SingleValueConstraint")
dialogic, dlgHardwareInfo = mibBuilder.importSymbols("DLGC-GLOBAL-REG", "dialogic", "dlgHardwareInfo")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
sysName, = mibBuilder.importSymbols("SNMPv2-MIB", "sysName")
Bits, TimeTicks, iso, NotificationType, NotificationType, ModuleIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, Integer32, MibIdentifier, IpAddress, Counter32, ObjectIdentity, Counter64, Unsigned32, Gauge32 = mibBuilder.importSymbols("SNMPv2-SMI", "Bits", "TimeTicks", "iso", "NotificationType", "NotificationType", "ModuleIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Integer32", "MibIdentifier", "IpAddress", "Counter32", "ObjectIdentity", "Counter64", "Unsigned32", "Gauge32")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
dlgHiMibRev = MibIdentifier((1, 3, 6, 1, 4, 1, 3028, 1, 1, 1))
dlgHiComponent = MibIdentifier((1, 3, 6, 1, 4, 1, 3028, 1, 1, 2))
dlgHiInterface = MibIdentifier((1, 3, 6, 1, 4, 1, 3028, 1, 1, 2, 1))
dlgHiIdent = MibIdentifier((1, 3, 6, 1, 4, 1, 3028, 1, 1, 2, 2))
dlgHiOsCommon = MibIdentifier((1, 3, 6, 1, 4, 1, 3028, 1, 1, 2, 1, 1))
dlgHiMibRevMajor = MibScalar((1, 3, 6, 1, 4, 1, 3028, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dlgHiMibRevMajor.setStatus('mandatory')
dlgHiMibRevMinor = MibScalar((1, 3, 6, 1, 4, 1, 3028, 1, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dlgHiMibRevMinor.setStatus('mandatory')
dlgHiMibCondition = MibScalar((1, 3, 6, 1, 4, 1, 3028, 1, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("other", 1), ("ok", 2), ("degraded", 3), ("failed", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dlgHiMibCondition.setStatus('mandatory')
dlgHiOsCommonPollFreq = MibScalar((1, 3, 6, 1, 4, 1, 3028, 1, 1, 2, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dlgHiOsCommonPollFreq.setStatus('mandatory')
dlgHiOsCommonNumberOfModules = MibScalar((1, 3, 6, 1, 4, 1, 3028, 1, 1, 2, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dlgHiOsCommonNumberOfModules.setStatus('mandatory')
dlgHiOsLogEnable = MibScalar((1, 3, 6, 1, 4, 1, 3028, 1, 1, 2, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dlgHiOsLogEnable.setStatus('mandatory')
dlgHiOsTestTrapEnable = MibScalar((1, 3, 6, 1, 4, 1, 3028, 1, 1, 2, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dlgHiOsTestTrapEnable.setStatus('mandatory')
dlgHiIdentSystemServicesNameForTrap = MibScalar((1, 3, 6, 1, 4, 1, 3028, 1, 1, 2, 1, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dlgHiIdentSystemServicesNameForTrap.setStatus('mandatory')
dlgHiIdentSystemServicesStatusForTrap = MibScalar((1, 3, 6, 1, 4, 1, 3028, 1, 1, 2, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("other", 1), ("started", 2), ("stop-pending", 3), ("stopped", 4), ("start-pending", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dlgHiIdentSystemServicesStatusForTrap.setStatus('mandatory')
dlgHiIdentIndexForTrap = MibScalar((1, 3, 6, 1, 4, 1, 3028, 1, 1, 2, 1, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dlgHiIdentIndexForTrap.setStatus('mandatory')
dlgHiIdentModelForTrap = MibScalar((1, 3, 6, 1, 4, 1, 3028, 1, 1, 2, 1, 1, 9), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dlgHiIdentModelForTrap.setStatus('mandatory')
dlgHiIdentOperStatusForTrap = MibScalar((1, 3, 6, 1, 4, 1, 3028, 1, 1, 2, 1, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("other", 1), ("ok", 2), ("degraded", 3), ("failed", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dlgHiIdentOperStatusForTrap.setStatus('mandatory')
dlgHiIdentAdminStatusForTrap = MibScalar((1, 3, 6, 1, 4, 1, 3028, 1, 1, 2, 1, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("other", 1), ("started", 2), ("stopped", 3), ("disabled", 4), ("diagnose", 5), ("start-pending", 6), ("stop-pending", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dlgHiIdentAdminStatusForTrap.setStatus('mandatory')
dlgHiIdentSerNumForTrap = MibScalar((1, 3, 6, 1, 4, 1, 3028, 1, 1, 2, 1, 1, 12), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 12))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dlgHiIdentSerNumForTrap.setStatus('mandatory')
dlgHiIdentErrorMessageForTrap = MibScalar((1, 3, 6, 1, 4, 1, 3028, 1, 1, 2, 1, 1, 13), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 96))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dlgHiIdentErrorMessageForTrap.setStatus('mandatory')
dlgHiOsCommonModuleTable = MibTable((1, 3, 6, 1, 4, 1, 3028, 1, 1, 2, 1, 1, 3), )
if mibBuilder.loadTexts: dlgHiOsCommonModuleTable.setStatus('mandatory')
dlgHiOsCommonModuleEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3028, 1, 1, 2, 1, 1, 3, 1), ).setIndexNames((0, "DLGHWINF-MIB", "dlgHiOsCommonModuleIndex"))
if mibBuilder.loadTexts: dlgHiOsCommonModuleEntry.setStatus('mandatory')
dlgHiOsCommonModuleIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3028, 1, 1, 2, 1, 1, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dlgHiOsCommonModuleIndex.setStatus('mandatory')
dlgHiOsCommonModuleName = MibTableColumn((1, 3, 6, 1, 4, 1, 3028, 1, 1, 2, 1, 1, 3, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dlgHiOsCommonModuleName.setStatus('mandatory')
dlgHiOsCommonModuleVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 3028, 1, 1, 2, 1, 1, 3, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 5))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dlgHiOsCommonModuleVersion.setStatus('mandatory')
dlgHiOsCommonModuleDate = MibTableColumn((1, 3, 6, 1, 4, 1, 3028, 1, 1, 2, 1, 1, 3, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(7, 7)).setFixedLength(7)).setMaxAccess("readonly")
if mibBuilder.loadTexts: dlgHiOsCommonModuleDate.setStatus('mandatory')
dlgHiOsCommonModulePurpose = MibTableColumn((1, 3, 6, 1, 4, 1, 3028, 1, 1, 2, 1, 1, 3, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dlgHiOsCommonModulePurpose.setStatus('mandatory')
dlgHiIdentNumberOfDevices = MibScalar((1, 3, 6, 1, 4, 1, 3028, 1, 1, 2, 2, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dlgHiIdentNumberOfDevices.setStatus('mandatory')
dlgHiIdentServiceStatus = MibScalar((1, 3, 6, 1, 4, 1, 3028, 1, 1, 2, 2, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("other", 1), ("started", 2), ("stop-pending", 3), ("stopped", 4), ("start-pending", 5)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dlgHiIdentServiceStatus.setStatus('mandatory')
dlgHiIdentServiceChangeDate = MibScalar((1, 3, 6, 1, 4, 1, 3028, 1, 1, 2, 2, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(7, 7)).setFixedLength(7)).setMaxAccess("readonly")
if mibBuilder.loadTexts: dlgHiIdentServiceChangeDate.setStatus('mandatory')
dlgHiIdentTrapMask = MibScalar((1, 3, 6, 1, 4, 1, 3028, 1, 1, 2, 2, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dlgHiIdentTrapMask.setStatus('mandatory')
dlgHiIdentSystemServicesTable = MibTable((1, 3, 6, 1, 4, 1, 3028, 1, 1, 2, 2, 6), )
if mibBuilder.loadTexts: dlgHiIdentSystemServicesTable.setStatus('mandatory')
dlgHiIdentSystemServicesEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3028, 1, 1, 2, 2, 6, 1), ).setIndexNames((0, "DLGHWINF-MIB", "dlgHiIdentSystemServicesIndex"))
if mibBuilder.loadTexts: dlgHiIdentSystemServicesEntry.setStatus('mandatory')
dlgHiIdentSystemServicesIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3028, 1, 1, 2, 2, 6, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dlgHiIdentSystemServicesIndex.setStatus('mandatory')
dlgHiIdentSystemServicesName = MibTableColumn((1, 3, 6, 1, 4, 1, 3028, 1, 1, 2, 2, 6, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dlgHiIdentSystemServicesName.setStatus('mandatory')
dlgHiIdentSystemServicesScmName = MibTableColumn((1, 3, 6, 1, 4, 1, 3028, 1, 1, 2, 2, 6, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dlgHiIdentSystemServicesScmName.setStatus('mandatory')
dlgHiIdentSystemServicesStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 3028, 1, 1, 2, 2, 6, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("other", 1), ("started", 2), ("stop-pending", 3), ("stopped", 4), ("start-pending", 5)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dlgHiIdentSystemServicesStatus.setStatus('mandatory')
dlgHiIdentSystemServicesChangeDate = MibTableColumn((1, 3, 6, 1, 4, 1, 3028, 1, 1, 2, 2, 6, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(7, 7)).setFixedLength(7)).setMaxAccess("readonly")
if mibBuilder.loadTexts: dlgHiIdentSystemServicesChangeDate.setStatus('mandatory')
dlgHiIdentTable = MibTable((1, 3, 6, 1, 4, 1, 3028, 1, 1, 2, 2, 1), )
if mibBuilder.loadTexts: dlgHiIdentTable.setStatus('mandatory')
dlgHiIdentEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3028, 1, 1, 2, 2, 1, 1), ).setIndexNames((0, "DLGHWINF-MIB", "dlgHiIdentIndex"))
if mibBuilder.loadTexts: dlgHiIdentEntry.setStatus('mandatory')
dlgHiIdentIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3028, 1, 1, 2, 2, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dlgHiIdentIndex.setStatus('mandatory')
dlgHiIdentModel = MibTableColumn((1, 3, 6, 1, 4, 1, 3028, 1, 1, 2, 2, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dlgHiIdentModel.setStatus('mandatory')
dlgHiIdentType = MibTableColumn((1, 3, 6, 1, 4, 1, 3028, 1, 1, 2, 2, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("other", 1), ("release4span", 2), ("dm3", 3), ("gammaCP", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dlgHiIdentType.setStatus('mandatory')
dlgHiIdentFuncDescr = MibTableColumn((1, 3, 6, 1, 4, 1, 3028, 1, 1, 2, 2, 1, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dlgHiIdentFuncDescr.setStatus('mandatory')
dlgHiIdentSerNum = MibTableColumn((1, 3, 6, 1, 4, 1, 3028, 1, 1, 2, 2, 1, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 12))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dlgHiIdentSerNum.setStatus('mandatory')
dlgHiIdentFWName = MibTableColumn((1, 3, 6, 1, 4, 1, 3028, 1, 1, 2, 2, 1, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dlgHiIdentFWName.setStatus('mandatory')
dlgHiIdentFWVers = MibTableColumn((1, 3, 6, 1, 4, 1, 3028, 1, 1, 2, 2, 1, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dlgHiIdentFWVers.setStatus('mandatory')
dlgHiIdentMemBaseAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 3028, 1, 1, 2, 2, 1, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dlgHiIdentMemBaseAddr.setStatus('mandatory')
dlgHiIdentIOBaseAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 3028, 1, 1, 2, 2, 1, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dlgHiIdentIOBaseAddr.setStatus('mandatory')
dlgHiIdentIrq = MibTableColumn((1, 3, 6, 1, 4, 1, 3028, 1, 1, 2, 2, 1, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dlgHiIdentIrq.setStatus('mandatory')
dlgHiIdentBoardID = MibTableColumn((1, 3, 6, 1, 4, 1, 3028, 1, 1, 2, 2, 1, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dlgHiIdentBoardID.setStatus('mandatory')
dlgHiIdentPCISlotID = MibTableColumn((1, 3, 6, 1, 4, 1, 3028, 1, 1, 2, 2, 1, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dlgHiIdentPCISlotID.setStatus('mandatory')
dlgHiIdentOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 3028, 1, 1, 2, 2, 1, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("other", 1), ("ok", 2), ("degraded", 3), ("failed", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dlgHiIdentOperStatus.setStatus('mandatory')
dlgHiIdentAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 3028, 1, 1, 2, 2, 1, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("other", 1), ("started", 2), ("stopped", 3), ("disabled", 4), ("diagnose", 5), ("start-pending", 6), ("stop-pending", 7)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dlgHiIdentAdminStatus.setStatus('mandatory')
dlgHiIdentErrorMessage = MibTableColumn((1, 3, 6, 1, 4, 1, 3028, 1, 1, 2, 2, 1, 1, 15), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 96))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dlgHiIdentErrorMessage.setStatus('mandatory')
dlgHiIdentDeviceChangeDate = MibTableColumn((1, 3, 6, 1, 4, 1, 3028, 1, 1, 2, 2, 1, 1, 16), OctetString().subtype(subtypeSpec=ValueSizeConstraint(7, 7)).setFixedLength(7)).setMaxAccess("readonly")
if mibBuilder.loadTexts: dlgHiIdentDeviceChangeDate.setStatus('mandatory')
dlgHiIdentSpecific = MibTableColumn((1, 3, 6, 1, 4, 1, 3028, 1, 1, 2, 2, 1, 1, 17), ObjectIdentifier()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dlgHiIdentSpecific.setStatus('mandatory')
dlgHiIdentPCIBusID = MibTableColumn((1, 3, 6, 1, 4, 1, 3028, 1, 1, 2, 2, 1, 1, 18), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dlgHiIdentPCIBusID.setStatus('mandatory')
dlgHiServiceChanged = NotificationType((1, 3, 6, 1, 4, 1, 3028) + (0,1001)).setObjects(("SNMPv2-MIB", "sysName"), ("DLGHWINF-MIB", "dlgHiIdentServiceStatus"))
dlgHiboardStatusChanged = NotificationType((1, 3, 6, 1, 4, 1, 3028) + (0,1002)).setObjects(("SNMPv2-MIB", "sysName"), ("DLGHWINF-MIB", "dlgHiIdentIndexForTrap"), ("DLGHWINF-MIB", "dlgHiIdentOperStatusForTrap"), ("DLGHWINF-MIB", "dlgHiIdentAdminStatusForTrap"), ("DLGHWINF-MIB", "dlgHiIdentModelForTrap"), ("DLGHWINF-MIB", "dlgHiIdentSerNumForTrap"), ("DLGHWINF-MIB", "dlgHiIdentErrorMessageForTrap"))
dlgHiNonDlgcServiceChanged = NotificationType((1, 3, 6, 1, 4, 1, 3028) + (0,1003)).setObjects(("SNMPv2-MIB", "sysName"), ("DLGHWINF-MIB", "dlgHiIdentSystemServicesNameForTrap"), ("DLGHWINF-MIB", "dlgHiIdentSystemServicesStatusForTrap"))
dlgHiTestTrap = NotificationType((1, 3, 6, 1, 4, 1, 3028) + (0,1004)).setObjects(("SNMPv2-MIB", "sysName"))
mibBuilder.exportSymbols("DLGHWINF-MIB", dlgHiNonDlgcServiceChanged=dlgHiNonDlgcServiceChanged, dlgHiIdentTrapMask=dlgHiIdentTrapMask, dlgHiOsCommonModuleIndex=dlgHiOsCommonModuleIndex, dlgHiIdentIndex=dlgHiIdentIndex, dlgHiMibRev=dlgHiMibRev, dlgHiIdentModel=dlgHiIdentModel, dlgHiIdentMemBaseAddr=dlgHiIdentMemBaseAddr, dlgHiIdentIOBaseAddr=dlgHiIdentIOBaseAddr, dlgHiIdentErrorMessage=dlgHiIdentErrorMessage, dlgHiIdentPCIBusID=dlgHiIdentPCIBusID, dlgHiOsTestTrapEnable=dlgHiOsTestTrapEnable, dlgHiIdentSerNum=dlgHiIdentSerNum, dlgHiMibCondition=dlgHiMibCondition, dlgHiboardStatusChanged=dlgHiboardStatusChanged, dlgHiIdentAdminStatusForTrap=dlgHiIdentAdminStatusForTrap, dlgHiIdentNumberOfDevices=dlgHiIdentNumberOfDevices, dlgHiIdentSystemServicesStatusForTrap=dlgHiIdentSystemServicesStatusForTrap, dlgHiIdentSystemServicesChangeDate=dlgHiIdentSystemServicesChangeDate, dlgHiIdentSystemServicesStatus=dlgHiIdentSystemServicesStatus, dlgHiIdentSystemServicesEntry=dlgHiIdentSystemServicesEntry, dlgHiIdentSpecific=dlgHiIdentSpecific, dlgHiIdentBoardID=dlgHiIdentBoardID, dlgHiOsCommonModuleName=dlgHiOsCommonModuleName, dlgHiIdentTable=dlgHiIdentTable, dlgHiServiceChanged=dlgHiServiceChanged, dlgHiIdentServiceStatus=dlgHiIdentServiceStatus, dlgHiIdentFWVers=dlgHiIdentFWVers, dlgHiIdentOperStatus=dlgHiIdentOperStatus, dlgHiOsCommonModuleEntry=dlgHiOsCommonModuleEntry, dlgHiIdentType=dlgHiIdentType, dlgHiIdentSystemServicesTable=dlgHiIdentSystemServicesTable, dlgHiOsLogEnable=dlgHiOsLogEnable, dlgHiOsCommonNumberOfModules=dlgHiOsCommonNumberOfModules, dlgHiIdentAdminStatus=dlgHiIdentAdminStatus, dlgHiIdentSystemServicesScmName=dlgHiIdentSystemServicesScmName, dlgHiMibRevMajor=dlgHiMibRevMajor, dlgHiOsCommonPollFreq=dlgHiOsCommonPollFreq, dlgHiOsCommonModuleVersion=dlgHiOsCommonModuleVersion, dlgHiInterface=dlgHiInterface, dlgHiOsCommonModuleDate=dlgHiOsCommonModuleDate, dlgHiOsCommonModulePurpose=dlgHiOsCommonModulePurpose, dlgHiIdentEntry=dlgHiIdentEntry, dlgHiIdentSystemServicesIndex=dlgHiIdentSystemServicesIndex, dlgHiIdentSystemServicesName=dlgHiIdentSystemServicesName, dlgHiIdentFuncDescr=dlgHiIdentFuncDescr, dlgHiIdentOperStatusForTrap=dlgHiIdentOperStatusForTrap, dlgHiIdentFWName=dlgHiIdentFWName, dlgHiIdentIndexForTrap=dlgHiIdentIndexForTrap, dlgHiIdentPCISlotID=dlgHiIdentPCISlotID, dlgHiIdentDeviceChangeDate=dlgHiIdentDeviceChangeDate, dlgHiTestTrap=dlgHiTestTrap, dlgHiIdentModelForTrap=dlgHiIdentModelForTrap, dlgHiMibRevMinor=dlgHiMibRevMinor, dlgHiIdentSystemServicesNameForTrap=dlgHiIdentSystemServicesNameForTrap, dlgHiIdentSerNumForTrap=dlgHiIdentSerNumForTrap, dlgHiComponent=dlgHiComponent, dlgHiIdent=dlgHiIdent, dlgHiOsCommon=dlgHiOsCommon, dlgHiOsCommonModuleTable=dlgHiOsCommonModuleTable, dlgHiIdentIrq=dlgHiIdentIrq, dlgHiIdentServiceChangeDate=dlgHiIdentServiceChangeDate, dlgHiIdentErrorMessageForTrap=dlgHiIdentErrorMessageForTrap)
