#
# PySNMP MIB module HPN-ICF-ISSU-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/HPN-ICF-ISSU-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:27:14 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ValueSizeConstraint, SingleValueConstraint, ConstraintsIntersection, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ValueSizeConstraint", "SingleValueConstraint", "ConstraintsIntersection", "ValueRangeConstraint")
hpnicfCommon, = mibBuilder.importSymbols("HPN-ICF-OID-MIB", "hpnicfCommon")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
NotificationType, MibIdentifier, Gauge32, MibScalar, MibTable, MibTableRow, MibTableColumn, IpAddress, Counter64, Counter32, Integer32, ObjectIdentity, TimeTicks, Bits, iso, Unsigned32, ModuleIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "NotificationType", "MibIdentifier", "Gauge32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "IpAddress", "Counter64", "Counter32", "Integer32", "ObjectIdentity", "TimeTicks", "Bits", "iso", "Unsigned32", "ModuleIdentity")
DisplayString, TextualConvention, TruthValue, RowStatus = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention", "TruthValue", "RowStatus")
hpnicfIssuUpgrade = ModuleIdentity((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 133))
hpnicfIssuUpgrade.setRevisions(('2013-01-15 15:36',))
if mibBuilder.loadTexts: hpnicfIssuUpgrade.setLastUpdated('201301151536Z')
if mibBuilder.loadTexts: hpnicfIssuUpgrade.setOrganization('')
hpnicfIssuUpgradeMibObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 133, 1))
hpnicfIssuUpgradeGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 133, 1, 1))
hpnicfIssuUpgradeImageTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 133, 1, 1, 1), )
if mibBuilder.loadTexts: hpnicfIssuUpgradeImageTable.setStatus('current')
hpnicfIssuUpgradeImageEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 133, 1, 1, 1, 1), ).setIndexNames((0, "HPN-ICF-ISSU-MIB", "hpnicfIssuUpgradeImageIndex"))
if mibBuilder.loadTexts: hpnicfIssuUpgradeImageEntry.setStatus('current')
hpnicfIssuUpgradeImageIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 133, 1, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: hpnicfIssuUpgradeImageIndex.setStatus('current')
hpnicfIssuUpgradeImageType = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 133, 1, 1, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("boot", 1), ("system", 2), ("feature", 3), ("ipe", 4)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfIssuUpgradeImageType.setStatus('current')
hpnicfIssuUpgradeImageURL = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 133, 1, 1, 1, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 127))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfIssuUpgradeImageURL.setStatus('current')
hpnicfIssuUpgradeImageRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 133, 1, 1, 1, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfIssuUpgradeImageRowStatus.setStatus('current')
hpnicfIssuOp = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 133, 1, 1, 2))
hpnicfIssuOpType = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 133, 1, 1, 2, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("none", 1), ("done", 2), ("test", 3), ("install", 4), ("rollback", 5))).clone('none')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfIssuOpType.setStatus('current')
hpnicfIssuImageFileOverwrite = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 133, 1, 1, 2, 2), TruthValue().clone('true')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfIssuImageFileOverwrite.setStatus('current')
hpnicfIssuOpTrapEnable = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 133, 1, 1, 2, 3), TruthValue().clone('true')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfIssuOpTrapEnable.setStatus('current')
hpnicfIssuOpStatus = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 133, 1, 1, 2, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("none", 1), ("failure", 2), ("inProgress", 3), ("success", 4), ("rollbackInProgress", 5), ("rollbackSuccess", 6))).clone('none')).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfIssuOpStatus.setStatus('current')
hpnicfIssuFailedReason = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 133, 1, 1, 2, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfIssuFailedReason.setStatus('current')
hpnicfIssuOpTimeCompleted = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 133, 1, 1, 2, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfIssuOpTimeCompleted.setStatus('current')
hpnicfIssuLastOpType = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 133, 1, 1, 2, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("none", 1), ("done", 2), ("test", 3), ("install", 4), ("rollback", 5))).clone('none')).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfIssuLastOpType.setStatus('current')
hpnicfIssuLastOpStatus = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 133, 1, 1, 2, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("none", 1), ("failure", 2), ("inProgress", 3), ("success", 4), ("rollbackInProgress", 5), ("rollbackSuccess", 6))).clone('none')).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfIssuLastOpStatus.setStatus('current')
hpnicfIssuLastOpFailedReason = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 133, 1, 1, 2, 9), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfIssuLastOpFailedReason.setStatus('current')
hpnicfIssuLastOpTimeCompleted = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 133, 1, 1, 2, 10), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfIssuLastOpTimeCompleted.setStatus('current')
hpnicfIssuUpgradeResultGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 133, 1, 2))
hpnicfIssuCompatibleResult = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 133, 1, 2, 1))
hpnicfIssuCompatibleResultStatus = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 133, 1, 2, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("none", 1), ("inCompatible", 2), ("compatible", 3), ("failure", 4))).clone('none')).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfIssuCompatibleResultStatus.setStatus('current')
hpnicfIssuCompatibleResultFailedReason = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 133, 1, 2, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfIssuCompatibleResultFailedReason.setStatus('current')
hpnicfIssuTestResultTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 133, 1, 2, 2), )
if mibBuilder.loadTexts: hpnicfIssuTestResultTable.setStatus('current')
hpnicfIssuTestResultEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 133, 1, 2, 2, 1), ).setIndexNames((0, "HPN-ICF-ISSU-MIB", "hpnicfIssuTestResultIndex"))
if mibBuilder.loadTexts: hpnicfIssuTestResultEntry.setStatus('current')
hpnicfIssuTestResultIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 133, 1, 2, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)))
if mibBuilder.loadTexts: hpnicfIssuTestResultIndex.setStatus('current')
hpnicfIssuTestDeviceChassisID = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 133, 1, 2, 2, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfIssuTestDeviceChassisID.setStatus('current')
hpnicfIssuTestDeviceSlotID = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 133, 1, 2, 2, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfIssuTestDeviceSlotID.setStatus('current')
hpnicfIssuTestDeviceCpuID = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 133, 1, 2, 2, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfIssuTestDeviceCpuID.setStatus('current')
hpnicfIssuTestDeviceUpgradeWay = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 133, 1, 2, 2, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("none", 1), ("reboot", 2), ("sequenceReboot", 3), ("issuReboot", 4), ("serviceUpgrade", 5), ("fileUpgrade", 6), ("incompatibleUpgrade", 7))).clone('none')).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfIssuTestDeviceUpgradeWay.setStatus('current')
hpnicfIssuUpgradeResultTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 133, 1, 2, 3), )
if mibBuilder.loadTexts: hpnicfIssuUpgradeResultTable.setStatus('current')
hpnicfIssuUpgradeResultEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 133, 1, 2, 3, 1), ).setIndexNames((0, "HPN-ICF-ISSU-MIB", "hpnicfIssuUpgradeResultIndex"))
if mibBuilder.loadTexts: hpnicfIssuUpgradeResultEntry.setStatus('current')
hpnicfIssuUpgradeResultIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 133, 1, 2, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)))
if mibBuilder.loadTexts: hpnicfIssuUpgradeResultIndex.setStatus('current')
hpnicfIssuUpgradeDeviceChassisID = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 133, 1, 2, 3, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfIssuUpgradeDeviceChassisID.setStatus('current')
hpnicfIssuUpgradeDeviceSlotID = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 133, 1, 2, 3, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfIssuUpgradeDeviceSlotID.setStatus('current')
hpnicfIssuUpgradeDeviceCpuID = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 133, 1, 2, 3, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfIssuUpgradeDeviceCpuID.setStatus('current')
hpnicfIssuUpgradeState = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 133, 1, 2, 3, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9))).clone(namedValues=NamedValues(("init", 1), ("loading", 2), ("loaded", 3), ("switching", 4), ("switchover", 5), ("committing", 6), ("committed", 7), ("rollbacking", 8), ("rollbacked", 9)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfIssuUpgradeState.setStatus('current')
hpnicfIssuDeviceUpgradeWay = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 133, 1, 2, 3, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("none", 1), ("reboot", 2), ("sequenceReboot", 3), ("issuReboot", 4), ("serviceUpgrade", 5), ("fileUpgrade", 6), ("incompatibleUpgrade", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfIssuDeviceUpgradeWay.setStatus('current')
hpnicfIssuUpgradeDeviceStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 133, 1, 2, 3, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("waitingUpgrade", 1), ("inProcess", 2), ("success", 3), ("failure", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfIssuUpgradeDeviceStatus.setStatus('current')
hpnicfIssuUpgradeFailedReason = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 133, 1, 2, 3, 1, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfIssuUpgradeFailedReason.setStatus('current')
hpnicfIssuUpgradeNotify = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 133, 2))
hpnicfIssuUpgradeTrapPrefix = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 133, 2, 0))
hpnicfIssuUpgradeOpCompletionNotify = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 133, 2, 0, 1)).setObjects(("HPN-ICF-ISSU-MIB", "hpnicfIssuOpType"), ("HPN-ICF-ISSU-MIB", "hpnicfIssuOpStatus"), ("HPN-ICF-ISSU-MIB", "hpnicfIssuFailedReason"), ("HPN-ICF-ISSU-MIB", "hpnicfIssuOpTimeCompleted"))
if mibBuilder.loadTexts: hpnicfIssuUpgradeOpCompletionNotify.setStatus('current')
mibBuilder.exportSymbols("HPN-ICF-ISSU-MIB", hpnicfIssuUpgradeNotify=hpnicfIssuUpgradeNotify, hpnicfIssuFailedReason=hpnicfIssuFailedReason, hpnicfIssuUpgradeResultGroup=hpnicfIssuUpgradeResultGroup, hpnicfIssuOpTrapEnable=hpnicfIssuOpTrapEnable, hpnicfIssuUpgradeFailedReason=hpnicfIssuUpgradeFailedReason, hpnicfIssuUpgradeImageRowStatus=hpnicfIssuUpgradeImageRowStatus, hpnicfIssuUpgradeMibObjects=hpnicfIssuUpgradeMibObjects, hpnicfIssuUpgradeImageURL=hpnicfIssuUpgradeImageURL, hpnicfIssuOpStatus=hpnicfIssuOpStatus, hpnicfIssuUpgradeDeviceChassisID=hpnicfIssuUpgradeDeviceChassisID, PYSNMP_MODULE_ID=hpnicfIssuUpgrade, hpnicfIssuUpgradeImageTable=hpnicfIssuUpgradeImageTable, hpnicfIssuUpgradeResultIndex=hpnicfIssuUpgradeResultIndex, hpnicfIssuUpgradeDeviceCpuID=hpnicfIssuUpgradeDeviceCpuID, hpnicfIssuUpgradeState=hpnicfIssuUpgradeState, hpnicfIssuTestDeviceChassisID=hpnicfIssuTestDeviceChassisID, hpnicfIssuTestResultEntry=hpnicfIssuTestResultEntry, hpnicfIssuDeviceUpgradeWay=hpnicfIssuDeviceUpgradeWay, hpnicfIssuUpgradeTrapPrefix=hpnicfIssuUpgradeTrapPrefix, hpnicfIssuOpTimeCompleted=hpnicfIssuOpTimeCompleted, hpnicfIssuTestResultTable=hpnicfIssuTestResultTable, hpnicfIssuLastOpType=hpnicfIssuLastOpType, hpnicfIssuUpgradeGroup=hpnicfIssuUpgradeGroup, hpnicfIssuLastOpFailedReason=hpnicfIssuLastOpFailedReason, hpnicfIssuCompatibleResult=hpnicfIssuCompatibleResult, hpnicfIssuCompatibleResultFailedReason=hpnicfIssuCompatibleResultFailedReason, hpnicfIssuOpType=hpnicfIssuOpType, hpnicfIssuTestDeviceCpuID=hpnicfIssuTestDeviceCpuID, hpnicfIssuUpgradeResultTable=hpnicfIssuUpgradeResultTable, hpnicfIssuLastOpTimeCompleted=hpnicfIssuLastOpTimeCompleted, hpnicfIssuUpgradeDeviceStatus=hpnicfIssuUpgradeDeviceStatus, hpnicfIssuUpgradeResultEntry=hpnicfIssuUpgradeResultEntry, hpnicfIssuLastOpStatus=hpnicfIssuLastOpStatus, hpnicfIssuTestDeviceSlotID=hpnicfIssuTestDeviceSlotID, hpnicfIssuUpgradeDeviceSlotID=hpnicfIssuUpgradeDeviceSlotID, hpnicfIssuUpgradeImageIndex=hpnicfIssuUpgradeImageIndex, hpnicfIssuUpgradeOpCompletionNotify=hpnicfIssuUpgradeOpCompletionNotify, hpnicfIssuOp=hpnicfIssuOp, hpnicfIssuTestDeviceUpgradeWay=hpnicfIssuTestDeviceUpgradeWay, hpnicfIssuImageFileOverwrite=hpnicfIssuImageFileOverwrite, hpnicfIssuTestResultIndex=hpnicfIssuTestResultIndex, hpnicfIssuUpgrade=hpnicfIssuUpgrade, hpnicfIssuUpgradeImageType=hpnicfIssuUpgradeImageType, hpnicfIssuCompatibleResultStatus=hpnicfIssuCompatibleResultStatus, hpnicfIssuUpgradeImageEntry=hpnicfIssuUpgradeImageEntry)
