#
# PySNMP MIB module OASWITCH-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/OASWITCH-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 20:22:51 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ConstraintsUnion, ValueSizeConstraint, ValueRangeConstraint, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ConstraintsUnion", "ValueSizeConstraint", "ValueRangeConstraint", "SingleValueConstraint")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
MibIdentifier, IpAddress, ObjectIdentity, Integer32, Gauge32, TimeTicks, ModuleIdentity, Unsigned32, Counter64, enterprises, iso, MibScalar, MibTable, MibTableRow, MibTableColumn, NotificationType, Bits, Counter32 = mibBuilder.importSymbols("SNMPv2-SMI", "MibIdentifier", "IpAddress", "ObjectIdentity", "Integer32", "Gauge32", "TimeTicks", "ModuleIdentity", "Unsigned32", "Counter64", "enterprises", "iso", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "NotificationType", "Bits", "Counter32")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
class MacAddress(OctetString):
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(6, 6)
    fixedLength = 6

oaccess = MibIdentifier((1, 3, 6, 1, 4, 1, 6926))
oaManagement = MibIdentifier((1, 3, 6, 1, 4, 1, 6926, 1))
oaSwitch = MibIdentifier((1, 3, 6, 1, 4, 1, 6926, 1, 5))
oaSwitchMac = MibIdentifier((1, 3, 6, 1, 4, 1, 6926, 1, 5, 1))
oaSwitchMacInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 6926, 1, 5, 1, 1))
oaSwitchMacInfoNumber = MibScalar((1, 3, 6, 1, 4, 1, 6926, 1, 5, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oaSwitchMacInfoNumber.setStatus('mandatory')
oaSwitchMacInfoMaxNumbr = MibScalar((1, 3, 6, 1, 4, 1, 6926, 1, 5, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oaSwitchMacInfoMaxNumbr.setStatus('mandatory')
oaSwitchMacInfoClear = MibScalar((1, 3, 6, 1, 4, 1, 6926, 1, 5, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("none", 1), ("clear", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oaSwitchMacInfoClear.setStatus('mandatory')
oaSwMacTable = MibTable((1, 3, 6, 1, 4, 1, 6926, 1, 5, 1, 2), )
if mibBuilder.loadTexts: oaSwMacTable.setStatus('mandatory')
oaSwMacEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6926, 1, 5, 1, 2, 1), ).setIndexNames((0, "OASWITCH-MIB", "oaSwMacAddr"), (0, "OASWITCH-MIB", "oaSwMacVid"))
if mibBuilder.loadTexts: oaSwMacEntry.setStatus('mandatory')
oaSwMacAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 6926, 1, 5, 1, 2, 1, 1), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oaSwMacAddr.setStatus('mandatory')
oaSwMacVid = MibTableColumn((1, 3, 6, 1, 4, 1, 6926, 1, 5, 1, 2, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oaSwMacVid.setStatus('mandatory')
oaSwMacVidx = MibTableColumn((1, 3, 6, 1, 4, 1, 6926, 1, 5, 1, 2, 1, 6), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oaSwMacVidx.setStatus('mandatory')
oaSwMacGetViewIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6926, 1, 5, 1, 2, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oaSwMacGetViewIndex.setStatus('mandatory')
oaSwMacPort = MibTableColumn((1, 3, 6, 1, 4, 1, 6926, 1, 5, 1, 2, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oaSwMacPort.setStatus('mandatory')
oaSwMacMode = MibTableColumn((1, 3, 6, 1, 4, 1, 6926, 1, 5, 1, 2, 1, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("dynamic", 2), ("static", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oaSwMacMode.setStatus('mandatory')
oaSwMacTagged = MibTableColumn((1, 3, 6, 1, 4, 1, 6926, 1, 5, 1, 2, 1, 21), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oaSwMacTagged.setStatus('mandatory')
oaSwMacPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 6926, 1, 5, 1, 2, 1, 22), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oaSwMacPriority.setStatus('mandatory')
oaSwMacFlags = MibTableColumn((1, 3, 6, 1, 4, 1, 6926, 1, 5, 1, 2, 1, 23), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oaSwMacFlags.setStatus('mandatory')
oaSwMacStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6926, 1, 5, 1, 2, 1, 30), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("valid", 1), ("invalid", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oaSwMacStatus.setStatus('mandatory')
oaSysFrmGen = MibIdentifier((1, 3, 6, 1, 4, 1, 6926, 1, 5, 3))
oaSysFrmGenSession = MibScalar((1, 3, 6, 1, 4, 1, 6926, 1, 5, 3, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("idleFG", 1), ("runFG", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oaSysFrmGenSession.setStatus('mandatory')
oaSysFrmGenDa = MibScalar((1, 3, 6, 1, 4, 1, 6926, 1, 5, 3, 2), MacAddress().clone(hexValue="000000000000")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oaSysFrmGenDa.setStatus('mandatory')
oaSysFrmGenSa = MibScalar((1, 3, 6, 1, 4, 1, 6926, 1, 5, 3, 3), MacAddress().clone(hexValue="000000000000")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oaSysFrmGenSa.setStatus('mandatory')
oaSysFrmGenPktFill = MibScalar((1, 3, 6, 1, 4, 1, 6926, 1, 5, 3, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oaSysFrmGenPktFill.setStatus('mandatory')
oaSysFrmGenPktRate = MibScalar((1, 3, 6, 1, 4, 1, 6926, 1, 5, 3, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oaSysFrmGenPktRate.setStatus('mandatory')
oaSysFrmGenDestMap = MibScalar((1, 3, 6, 1, 4, 1, 6926, 1, 5, 3, 6), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oaSysFrmGenDestMap.setStatus('mandatory')
oaSysFrmGenPktNum = MibScalar((1, 3, 6, 1, 4, 1, 6926, 1, 5, 3, 7), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oaSysFrmGenPktNum.setStatus('mandatory')
oaSysFrmGenPktLen = MibScalar((1, 3, 6, 1, 4, 1, 6926, 1, 5, 3, 8), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oaSysFrmGenPktLen.setStatus('mandatory')
oaSysFrmGenXmtPktNum = MibScalar((1, 3, 6, 1, 4, 1, 6926, 1, 5, 3, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oaSysFrmGenXmtPktNum.setStatus('mandatory')
oaSysFrmGenPriority = MibScalar((1, 3, 6, 1, 4, 1, 6926, 1, 5, 3, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 8)).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oaSysFrmGenPriority.setStatus('mandatory')
oaSysFrmGenVlanId = MibScalar((1, 3, 6, 1, 4, 1, 6926, 1, 5, 3, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4095))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oaSysFrmGenVlanId.setStatus('mandatory')
mibBuilder.exportSymbols("OASWITCH-MIB", oaSwMacStatus=oaSwMacStatus, oaSwitchMacInfoMaxNumbr=oaSwitchMacInfoMaxNumbr, oaSwitchMacInfoClear=oaSwitchMacInfoClear, oaSwMacVid=oaSwMacVid, oaSwMacTagged=oaSwMacTagged, oaSwMacEntry=oaSwMacEntry, oaccess=oaccess, oaSwMacMode=oaSwMacMode, oaSysFrmGenPktLen=oaSysFrmGenPktLen, oaSysFrmGenSession=oaSysFrmGenSession, oaSwitch=oaSwitch, oaSwMacTable=oaSwMacTable, oaSwMacGetViewIndex=oaSwMacGetViewIndex, oaSysFrmGenSa=oaSysFrmGenSa, oaSysFrmGenDestMap=oaSysFrmGenDestMap, oaSwMacVidx=oaSwMacVidx, oaSysFrmGenPktNum=oaSysFrmGenPktNum, oaSysFrmGenVlanId=oaSysFrmGenVlanId, oaSysFrmGenDa=oaSysFrmGenDa, oaSysFrmGenPriority=oaSysFrmGenPriority, oaSysFrmGenPktRate=oaSysFrmGenPktRate, oaSwitchMac=oaSwitchMac, oaSysFrmGen=oaSysFrmGen, oaSwMacPriority=oaSwMacPriority, oaSwMacAddr=oaSwMacAddr, oaSwMacPort=oaSwMacPort, oaSysFrmGenPktFill=oaSysFrmGenPktFill, oaSwitchMacInfo=oaSwitchMacInfo, oaSwitchMacInfoNumber=oaSwitchMacInfoNumber, oaSwMacFlags=oaSwMacFlags, oaManagement=oaManagement, MacAddress=MacAddress, oaSysFrmGenXmtPktNum=oaSysFrmGenXmtPktNum)
