#
# PySNMP MIB module CIENA-CES-ICL-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CIENA-CES-ICL-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:31:43 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, SingleValueConstraint, ValueSizeConstraint, ValueRangeConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "SingleValueConstraint", "ValueSizeConstraint", "ValueRangeConstraint", "ConstraintsUnion")
cienaGlobalMacAddress, cienaGlobalSeverity = mibBuilder.importSymbols("CIENA-GLOBAL-MIB", "cienaGlobalMacAddress", "cienaGlobalSeverity")
cienaCesNotifications, cienaCesConfig = mibBuilder.importSymbols("CIENA-SMI", "cienaCesNotifications", "cienaCesConfig")
CienaMacAddress, CienaGlobalState, CienaStatsClear = mibBuilder.importSymbols("CIENA-TC", "CienaMacAddress", "CienaGlobalState", "CienaStatsClear")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
IpAddress, MibScalar, MibTable, MibTableRow, MibTableColumn, TimeTicks, Integer32, Counter32, Gauge32, iso, ObjectIdentity, Unsigned32, NotificationType, Bits, ModuleIdentity, MibIdentifier, Counter64 = mibBuilder.importSymbols("SNMPv2-SMI", "IpAddress", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "TimeTicks", "Integer32", "Counter32", "Gauge32", "iso", "ObjectIdentity", "Unsigned32", "NotificationType", "Bits", "ModuleIdentity", "MibIdentifier", "Counter64")
RowStatus, TextualConvention, MacAddress, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "RowStatus", "TextualConvention", "MacAddress", "DisplayString")
cienaCesIclMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 1271, 2, 1, 32))
cienaCesIclMIB.setRevisions(('2013-11-07 00:00',))
if mibBuilder.loadTexts: cienaCesIclMIB.setLastUpdated('201311070000Z')
if mibBuilder.loadTexts: cienaCesIclMIB.setOrganization('Ciena, Inc')
cienaCesIclMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 1271, 2, 1, 32, 1))
cienaCesIcl = MibIdentifier((1, 3, 6, 1, 4, 1, 1271, 2, 1, 32, 1, 1))
cienaCesIclMIBNotificationPrefix = MibIdentifier((1, 3, 6, 1, 4, 1, 1271, 2, 1, 32, 2))
cienaCesIclMIBNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 1271, 2, 1, 32, 2, 0))
cienaCesIclMIBConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 1271, 2, 1, 32, 3))
cienaCesIclMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 1271, 2, 1, 32, 3, 1))
cienaCesIclMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 1271, 2, 1, 32, 3, 2))
cienaCesIclTable = MibTable((1, 3, 6, 1, 4, 1, 1271, 2, 1, 32, 1, 1, 1), )
if mibBuilder.loadTexts: cienaCesIclTable.setStatus('current')
cienaCesIclEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1271, 2, 1, 32, 1, 1, 1, 1), ).setIndexNames((0, "CIENA-CES-ICL-MIB", "cienaCesIclIndex"))
if mibBuilder.loadTexts: cienaCesIclEntry.setStatus('current')
cienaCesIclIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 32, 1, 1, 1, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 47))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesIclIndex.setStatus('current')
cienaCesIclName = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 32, 1, 1, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesIclName.setStatus('current')
cienaCesIclRemoteMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 32, 1, 1, 1, 1, 3), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesIclRemoteMacAddress.setStatus('current')
cienaCesIclType = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 32, 1, 1, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("vlan", 1), ("mplsVs", 2), ("qinqVs", 3), ("none", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesIclType.setStatus('current')
cienaCesIclVlan = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 32, 1, 1, 1, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesIclVlan.setStatus('current')
cienaCesIclVsName = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 32, 1, 1, 1, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesIclVsName.setStatus('current')
cienaCesIclCfmServicePrimary = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 32, 1, 1, 1, 1, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesIclCfmServicePrimary.setStatus('current')
cienaCesIclCfmServiceSecondary = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 32, 1, 1, 1, 1, 8), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesIclCfmServiceSecondary.setStatus('current')
cienaCesIclOperState = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 32, 1, 1, 1, 1, 9), CienaGlobalState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesIclOperState.setStatus('current')
cienaCesIclStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 32, 1, 1, 1, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("init", 1), ("active", 2), ("failed", 3), ("down", 4), ("none", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesIclStatus.setStatus('current')
cienaCesIclAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 32, 1, 1, 1, 1, 11), CienaGlobalState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesIclAdminState.setStatus('current')
cienaCesIclCfmFault = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 32, 1, 1, 1, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("no", 1), ("yes", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesIclCfmFault.setStatus('current')
cienaCesIclVplsFault = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 32, 1, 1, 1, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("no", 1), ("yes", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesIclVplsFault.setStatus('current')
cienaCesIclRxTimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 32, 1, 1, 1, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("no", 1), ("yes", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesIclRxTimeout.setStatus('current')
cienaCesIclIntervalMismatch = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 32, 1, 1, 1, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("no", 1), ("yes", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesIclIntervalMismatch.setStatus('current')
cienaCesIclHeartbeatInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 32, 1, 1, 1, 1, 16), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesIclHeartbeatInterval.setStatus('current')
cienaCesIclUpTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 32, 1, 1, 1, 1, 17), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesIclUpTime.setStatus('current')
cienaCesIclTotalDownTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 32, 1, 1, 1, 1, 18), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesIclTotalDownTime.setStatus('current')
cienaCesIclRxFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 32, 1, 1, 1, 1, 19), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesIclRxFrames.setStatus('current')
cienaCesIclTxFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 32, 1, 1, 1, 1, 20), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesIclTxFrames.setStatus('current')
cienaCesIclRxUnknownFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 32, 1, 1, 1, 1, 21), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesIclRxUnknownFrames.setStatus('current')
cienaCesIclRxHtbtFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 32, 1, 1, 1, 1, 22), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesIclRxHtbtFrames.setStatus('current')
cienaCesIclTxHtbtFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 32, 1, 1, 1, 1, 23), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesIclTxHtbtFrames.setStatus('current')
cienaCesIclTxFailedFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 32, 1, 1, 1, 1, 24), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesIclTxFailedFrames.setStatus('current')
cienaCesIclNumberFailures = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 32, 1, 1, 1, 1, 25), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesIclNumberFailures.setStatus('current')
cienaCesIclRxConfigMismatch = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 32, 1, 1, 1, 1, 26), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesIclRxConfigMismatch.setStatus('current')
cienaCesIclStateChange = NotificationType((1, 3, 6, 1, 4, 1, 1271, 2, 1, 32, 2, 0, 1)).setObjects(("CIENA-GLOBAL-MIB", "cienaGlobalSeverity"), ("CIENA-GLOBAL-MIB", "cienaGlobalMacAddress"), ("CIENA-CES-ICL-MIB", "cienaCesIclIndex"), ("CIENA-CES-ICL-MIB", "cienaCesIclName"), ("CIENA-CES-ICL-MIB", "cienaCesIclAdminState"), ("CIENA-CES-ICL-MIB", "cienaCesIclOperState"))
if mibBuilder.loadTexts: cienaCesIclStateChange.setStatus('current')
mibBuilder.exportSymbols("CIENA-CES-ICL-MIB", cienaCesIclRxFrames=cienaCesIclRxFrames, PYSNMP_MODULE_ID=cienaCesIclMIB, cienaCesIclHeartbeatInterval=cienaCesIclHeartbeatInterval, cienaCesIclRemoteMacAddress=cienaCesIclRemoteMacAddress, cienaCesIclVlan=cienaCesIclVlan, cienaCesIclTotalDownTime=cienaCesIclTotalDownTime, cienaCesIclStateChange=cienaCesIclStateChange, cienaCesIclVplsFault=cienaCesIclVplsFault, cienaCesIclOperState=cienaCesIclOperState, cienaCesIclTxHtbtFrames=cienaCesIclTxHtbtFrames, cienaCesIclVsName=cienaCesIclVsName, cienaCesIclMIB=cienaCesIclMIB, cienaCesIclEntry=cienaCesIclEntry, cienaCesIclTxFailedFrames=cienaCesIclTxFailedFrames, cienaCesIclCfmServiceSecondary=cienaCesIclCfmServiceSecondary, cienaCesIclMIBObjects=cienaCesIclMIBObjects, cienaCesIclIndex=cienaCesIclIndex, cienaCesIclStatus=cienaCesIclStatus, cienaCesIclCfmFault=cienaCesIclCfmFault, cienaCesIclIntervalMismatch=cienaCesIclIntervalMismatch, cienaCesIclName=cienaCesIclName, cienaCesIclRxHtbtFrames=cienaCesIclRxHtbtFrames, cienaCesIclMIBCompliances=cienaCesIclMIBCompliances, cienaCesIclTxFrames=cienaCesIclTxFrames, cienaCesIclMIBGroups=cienaCesIclMIBGroups, cienaCesIclRxUnknownFrames=cienaCesIclRxUnknownFrames, cienaCesIclTable=cienaCesIclTable, cienaCesIclAdminState=cienaCesIclAdminState, cienaCesIcl=cienaCesIcl, cienaCesIclUpTime=cienaCesIclUpTime, cienaCesIclMIBNotifications=cienaCesIclMIBNotifications, cienaCesIclType=cienaCesIclType, cienaCesIclRxConfigMismatch=cienaCesIclRxConfigMismatch, cienaCesIclRxTimeout=cienaCesIclRxTimeout, cienaCesIclMIBConformance=cienaCesIclMIBConformance, cienaCesIclNumberFailures=cienaCesIclNumberFailures, cienaCesIclMIBNotificationPrefix=cienaCesIclMIBNotificationPrefix, cienaCesIclCfmServicePrimary=cienaCesIclCfmServicePrimary)
