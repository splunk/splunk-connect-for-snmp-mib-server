#
# PySNMP MIB module FRAME-RELAY-DTE-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/FRAME-RELAY-DTE-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:02:21 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ValueSizeConstraint, ValueRangeConstraint, ConstraintsUnion, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ValueSizeConstraint", "ValueRangeConstraint", "ConstraintsUnion", "SingleValueConstraint")
InterfaceIndex, = mibBuilder.importSymbols("IF-MIB", "InterfaceIndex")
NotificationGroup, ModuleCompliance, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance", "ObjectGroup")
Bits, IpAddress, iso, ModuleIdentity, transmission, MibScalar, MibTable, MibTableRow, MibTableColumn, Unsigned32, NotificationType, Counter32, Counter64, Gauge32, ObjectIdentity, TimeTicks, Integer32, MibIdentifier = mibBuilder.importSymbols("SNMPv2-SMI", "Bits", "IpAddress", "iso", "ModuleIdentity", "transmission", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Unsigned32", "NotificationType", "Counter32", "Counter64", "Gauge32", "ObjectIdentity", "TimeTicks", "Integer32", "MibIdentifier")
TextualConvention, TimeStamp, RowStatus, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "TimeStamp", "RowStatus", "DisplayString")
frameRelayDTE = ModuleIdentity((1, 3, 6, 1, 2, 1, 10, 32))
frameRelayDTE.setRevisions(('1997-05-01 02:29', '1992-04-01 00:00',))
if mibBuilder.loadTexts: frameRelayDTE.setLastUpdated('9705010229Z')
if mibBuilder.loadTexts: frameRelayDTE.setOrganization('IETF IPLPDN Working Group')
class DLCI(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ValueRangeConstraint(0, 8388607)

frDlcmiTable = MibTable((1, 3, 6, 1, 2, 1, 10, 32, 1), )
if mibBuilder.loadTexts: frDlcmiTable.setStatus('current')
frDlcmiEntry = MibTableRow((1, 3, 6, 1, 2, 1, 10, 32, 1, 1), ).setIndexNames((0, "FRAME-RELAY-DTE-MIB", "frDlcmiIfIndex"))
if mibBuilder.loadTexts: frDlcmiEntry.setStatus('current')
frDlcmiIfIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 32, 1, 1, 1), InterfaceIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frDlcmiIfIndex.setStatus('current')
frDlcmiState = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 32, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("noLmiConfigured", 1), ("lmiRev1", 2), ("ansiT1617D", 3), ("ansiT1617B", 4), ("itut933A", 5), ("ansiT1617D1994", 6)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: frDlcmiState.setStatus('current')
frDlcmiAddress = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 32, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("q921", 1), ("q922March90", 2), ("q922November90", 3), ("q922", 4)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: frDlcmiAddress.setStatus('current')
frDlcmiAddressLen = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 32, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(2, 3, 4))).clone(namedValues=NamedValues(("twoOctets", 2), ("threeOctets", 3), ("fourOctets", 4)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: frDlcmiAddressLen.setStatus('current')
frDlcmiPollingInterval = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 32, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(5, 30)).clone(10)).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: frDlcmiPollingInterval.setStatus('current')
frDlcmiFullEnquiryInterval = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 32, 1, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255)).clone(6)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: frDlcmiFullEnquiryInterval.setStatus('current')
frDlcmiErrorThreshold = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 32, 1, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 10)).clone(3)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: frDlcmiErrorThreshold.setStatus('current')
frDlcmiMonitoredEvents = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 32, 1, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 10)).clone(4)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: frDlcmiMonitoredEvents.setStatus('current')
frDlcmiMaxSupportedVCs = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 32, 1, 1, 9), DLCI()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: frDlcmiMaxSupportedVCs.setStatus('current')
frDlcmiMulticast = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 32, 1, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("nonBroadcast", 1), ("broadcast", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: frDlcmiMulticast.setStatus('current')
frDlcmiStatus = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 32, 1, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("running", 1), ("fault", 2), ("initializing", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: frDlcmiStatus.setStatus('current')
frDlcmiRowStatus = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 32, 1, 1, 12), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: frDlcmiRowStatus.setStatus('current')
frCircuitTable = MibTable((1, 3, 6, 1, 2, 1, 10, 32, 2), )
if mibBuilder.loadTexts: frCircuitTable.setStatus('current')
frCircuitEntry = MibTableRow((1, 3, 6, 1, 2, 1, 10, 32, 2, 1), ).setIndexNames((0, "FRAME-RELAY-DTE-MIB", "frCircuitIfIndex"), (0, "FRAME-RELAY-DTE-MIB", "frCircuitDlci"))
if mibBuilder.loadTexts: frCircuitEntry.setStatus('current')
frCircuitIfIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 32, 2, 1, 1), InterfaceIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frCircuitIfIndex.setStatus('current')
frCircuitDlci = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 32, 2, 1, 2), DLCI()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frCircuitDlci.setStatus('current')
frCircuitState = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 32, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("invalid", 1), ("active", 2), ("inactive", 3))).clone('active')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: frCircuitState.setStatus('current')
frCircuitReceivedFECNs = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 32, 2, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frCircuitReceivedFECNs.setStatus('current')
frCircuitReceivedBECNs = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 32, 2, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frCircuitReceivedBECNs.setStatus('current')
frCircuitSentFrames = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 32, 2, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frCircuitSentFrames.setStatus('current')
frCircuitSentOctets = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 32, 2, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frCircuitSentOctets.setStatus('current')
frCircuitReceivedFrames = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 32, 2, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frCircuitReceivedFrames.setStatus('current')
frCircuitReceivedOctets = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 32, 2, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frCircuitReceivedOctets.setStatus('current')
frCircuitCreationTime = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 32, 2, 1, 10), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frCircuitCreationTime.setStatus('current')
frCircuitLastTimeChange = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 32, 2, 1, 11), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frCircuitLastTimeChange.setStatus('current')
frCircuitCommittedBurst = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 32, 2, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: frCircuitCommittedBurst.setStatus('current')
frCircuitExcessBurst = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 32, 2, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: frCircuitExcessBurst.setStatus('current')
frCircuitThroughput = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 32, 2, 1, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: frCircuitThroughput.setStatus('current')
frCircuitMulticast = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 32, 2, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("unicast", 1), ("oneWay", 2), ("twoWay", 3), ("nWay", 4))).clone('unicast')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: frCircuitMulticast.setStatus('current')
frCircuitType = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 32, 2, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("static", 1), ("dynamic", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: frCircuitType.setStatus('current')
frCircuitDiscards = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 32, 2, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frCircuitDiscards.setStatus('current')
frCircuitReceivedDEs = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 32, 2, 1, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frCircuitReceivedDEs.setStatus('current')
frCircuitSentDEs = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 32, 2, 1, 19), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frCircuitSentDEs.setStatus('current')
frCircuitLogicalIfIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 32, 2, 1, 20), InterfaceIndex()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: frCircuitLogicalIfIndex.setStatus('current')
frCircuitRowStatus = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 32, 2, 1, 21), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: frCircuitRowStatus.setStatus('current')
frErrTable = MibTable((1, 3, 6, 1, 2, 1, 10, 32, 3), )
if mibBuilder.loadTexts: frErrTable.setStatus('current')
frErrEntry = MibTableRow((1, 3, 6, 1, 2, 1, 10, 32, 3, 1), ).setIndexNames((0, "FRAME-RELAY-DTE-MIB", "frErrIfIndex"))
if mibBuilder.loadTexts: frErrEntry.setStatus('current')
frErrIfIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 32, 3, 1, 1), InterfaceIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frErrIfIndex.setStatus('current')
frErrType = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 32, 3, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10))).clone(namedValues=NamedValues(("unknownError", 1), ("receiveShort", 2), ("receiveLong", 3), ("illegalAddress", 4), ("unknownAddress", 5), ("dlcmiProtoErr", 6), ("dlcmiUnknownIE", 7), ("dlcmiSequenceErr", 8), ("dlcmiUnknownRpt", 9), ("noErrorSinceReset", 10)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: frErrType.setStatus('current')
frErrData = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 32, 3, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 1600))).setMaxAccess("readonly")
if mibBuilder.loadTexts: frErrData.setStatus('current')
frErrTime = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 32, 3, 1, 4), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frErrTime.setStatus('current')
frErrFaults = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 32, 3, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frErrFaults.setStatus('current')
frErrFaultTime = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 32, 3, 1, 6), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frErrFaultTime.setStatus('current')
frameRelayTrapControl = MibIdentifier((1, 3, 6, 1, 2, 1, 10, 32, 4))
frameRelayTraps = MibIdentifier((1, 3, 6, 1, 2, 1, 10, 32, 0))
frTrapState = MibScalar((1, 3, 6, 1, 2, 1, 10, 32, 4, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frTrapState.setStatus('current')
frTrapMaxRate = MibScalar((1, 3, 6, 1, 2, 1, 10, 32, 4, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 3600000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frTrapMaxRate.setStatus('current')
frDLCIStatusChange = NotificationType((1, 3, 6, 1, 2, 1, 10, 32, 0, 1)).setObjects(("FRAME-RELAY-DTE-MIB", "frCircuitState"))
if mibBuilder.loadTexts: frDLCIStatusChange.setStatus('current')
frConformance = MibIdentifier((1, 3, 6, 1, 2, 1, 10, 32, 6))
frGroups = MibIdentifier((1, 3, 6, 1, 2, 1, 10, 32, 6, 1))
frCompliances = MibIdentifier((1, 3, 6, 1, 2, 1, 10, 32, 6, 2))
frCompliance = ModuleCompliance((1, 3, 6, 1, 2, 1, 10, 32, 6, 2, 1)).setObjects(("FRAME-RELAY-DTE-MIB", "frPortGroup"), ("FRAME-RELAY-DTE-MIB", "frCircuitGroup"), ("FRAME-RELAY-DTE-MIB", "frErrGroup"), ("FRAME-RELAY-DTE-MIB", "frTrapGroup"), ("FRAME-RELAY-DTE-MIB", "frNotificationGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    frCompliance = frCompliance.setStatus('current')
frCompliance0 = ModuleCompliance((1, 3, 6, 1, 2, 1, 10, 32, 6, 2, 2)).setObjects(("FRAME-RELAY-DTE-MIB", "frPortGroup0"), ("FRAME-RELAY-DTE-MIB", "frCircuitGroup0"), ("FRAME-RELAY-DTE-MIB", "frErrGroup0"), ("FRAME-RELAY-DTE-MIB", "frTrapGroup0"), ("FRAME-RELAY-DTE-MIB", "frNotificationGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    frCompliance0 = frCompliance0.setStatus('current')
frPortGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 10, 32, 6, 1, 1)).setObjects(("FRAME-RELAY-DTE-MIB", "frDlcmiIfIndex"), ("FRAME-RELAY-DTE-MIB", "frDlcmiState"), ("FRAME-RELAY-DTE-MIB", "frDlcmiAddress"), ("FRAME-RELAY-DTE-MIB", "frDlcmiAddressLen"), ("FRAME-RELAY-DTE-MIB", "frDlcmiPollingInterval"), ("FRAME-RELAY-DTE-MIB", "frDlcmiFullEnquiryInterval"), ("FRAME-RELAY-DTE-MIB", "frDlcmiErrorThreshold"), ("FRAME-RELAY-DTE-MIB", "frDlcmiMonitoredEvents"), ("FRAME-RELAY-DTE-MIB", "frDlcmiMaxSupportedVCs"), ("FRAME-RELAY-DTE-MIB", "frDlcmiMulticast"), ("FRAME-RELAY-DTE-MIB", "frDlcmiStatus"), ("FRAME-RELAY-DTE-MIB", "frDlcmiRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    frPortGroup = frPortGroup.setStatus('current')
frCircuitGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 10, 32, 6, 1, 2)).setObjects(("FRAME-RELAY-DTE-MIB", "frCircuitIfIndex"), ("FRAME-RELAY-DTE-MIB", "frCircuitDlci"), ("FRAME-RELAY-DTE-MIB", "frCircuitState"), ("FRAME-RELAY-DTE-MIB", "frCircuitReceivedFECNs"), ("FRAME-RELAY-DTE-MIB", "frCircuitReceivedBECNs"), ("FRAME-RELAY-DTE-MIB", "frCircuitSentFrames"), ("FRAME-RELAY-DTE-MIB", "frCircuitSentOctets"), ("FRAME-RELAY-DTE-MIB", "frCircuitReceivedFrames"), ("FRAME-RELAY-DTE-MIB", "frCircuitReceivedOctets"), ("FRAME-RELAY-DTE-MIB", "frCircuitCreationTime"), ("FRAME-RELAY-DTE-MIB", "frCircuitLastTimeChange"), ("FRAME-RELAY-DTE-MIB", "frCircuitCommittedBurst"), ("FRAME-RELAY-DTE-MIB", "frCircuitExcessBurst"), ("FRAME-RELAY-DTE-MIB", "frCircuitThroughput"), ("FRAME-RELAY-DTE-MIB", "frCircuitMulticast"), ("FRAME-RELAY-DTE-MIB", "frCircuitType"), ("FRAME-RELAY-DTE-MIB", "frCircuitDiscards"), ("FRAME-RELAY-DTE-MIB", "frCircuitReceivedDEs"), ("FRAME-RELAY-DTE-MIB", "frCircuitSentDEs"), ("FRAME-RELAY-DTE-MIB", "frCircuitLogicalIfIndex"), ("FRAME-RELAY-DTE-MIB", "frCircuitRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    frCircuitGroup = frCircuitGroup.setStatus('current')
frTrapGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 10, 32, 6, 1, 3)).setObjects(("FRAME-RELAY-DTE-MIB", "frTrapState"), ("FRAME-RELAY-DTE-MIB", "frTrapMaxRate"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    frTrapGroup = frTrapGroup.setStatus('current')
frErrGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 10, 32, 6, 1, 4)).setObjects(("FRAME-RELAY-DTE-MIB", "frErrIfIndex"), ("FRAME-RELAY-DTE-MIB", "frErrType"), ("FRAME-RELAY-DTE-MIB", "frErrData"), ("FRAME-RELAY-DTE-MIB", "frErrTime"), ("FRAME-RELAY-DTE-MIB", "frErrFaults"), ("FRAME-RELAY-DTE-MIB", "frErrFaultTime"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    frErrGroup = frErrGroup.setStatus('current')
frNotificationGroup = NotificationGroup((1, 3, 6, 1, 2, 1, 10, 32, 6, 1, 5)).setObjects(("FRAME-RELAY-DTE-MIB", "frDLCIStatusChange"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    frNotificationGroup = frNotificationGroup.setStatus('current')
frPortGroup0 = ObjectGroup((1, 3, 6, 1, 2, 1, 10, 32, 6, 1, 6)).setObjects(("FRAME-RELAY-DTE-MIB", "frDlcmiIfIndex"), ("FRAME-RELAY-DTE-MIB", "frDlcmiState"), ("FRAME-RELAY-DTE-MIB", "frDlcmiAddress"), ("FRAME-RELAY-DTE-MIB", "frDlcmiAddressLen"), ("FRAME-RELAY-DTE-MIB", "frDlcmiPollingInterval"), ("FRAME-RELAY-DTE-MIB", "frDlcmiFullEnquiryInterval"), ("FRAME-RELAY-DTE-MIB", "frDlcmiErrorThreshold"), ("FRAME-RELAY-DTE-MIB", "frDlcmiMonitoredEvents"), ("FRAME-RELAY-DTE-MIB", "frDlcmiMaxSupportedVCs"), ("FRAME-RELAY-DTE-MIB", "frDlcmiMulticast"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    frPortGroup0 = frPortGroup0.setStatus('current')
frCircuitGroup0 = ObjectGroup((1, 3, 6, 1, 2, 1, 10, 32, 6, 1, 7)).setObjects(("FRAME-RELAY-DTE-MIB", "frCircuitIfIndex"), ("FRAME-RELAY-DTE-MIB", "frCircuitDlci"), ("FRAME-RELAY-DTE-MIB", "frCircuitState"), ("FRAME-RELAY-DTE-MIB", "frCircuitReceivedFECNs"), ("FRAME-RELAY-DTE-MIB", "frCircuitReceivedBECNs"), ("FRAME-RELAY-DTE-MIB", "frCircuitSentFrames"), ("FRAME-RELAY-DTE-MIB", "frCircuitSentOctets"), ("FRAME-RELAY-DTE-MIB", "frCircuitReceivedFrames"), ("FRAME-RELAY-DTE-MIB", "frCircuitReceivedOctets"), ("FRAME-RELAY-DTE-MIB", "frCircuitCreationTime"), ("FRAME-RELAY-DTE-MIB", "frCircuitLastTimeChange"), ("FRAME-RELAY-DTE-MIB", "frCircuitCommittedBurst"), ("FRAME-RELAY-DTE-MIB", "frCircuitExcessBurst"), ("FRAME-RELAY-DTE-MIB", "frCircuitThroughput"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    frCircuitGroup0 = frCircuitGroup0.setStatus('current')
frErrGroup0 = ObjectGroup((1, 3, 6, 1, 2, 1, 10, 32, 6, 1, 8)).setObjects(("FRAME-RELAY-DTE-MIB", "frErrIfIndex"), ("FRAME-RELAY-DTE-MIB", "frErrType"), ("FRAME-RELAY-DTE-MIB", "frErrData"), ("FRAME-RELAY-DTE-MIB", "frErrTime"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    frErrGroup0 = frErrGroup0.setStatus('current')
frTrapGroup0 = ObjectGroup((1, 3, 6, 1, 2, 1, 10, 32, 6, 1, 9)).setObjects(("FRAME-RELAY-DTE-MIB", "frTrapState"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    frTrapGroup0 = frTrapGroup0.setStatus('current')
mibBuilder.exportSymbols("FRAME-RELAY-DTE-MIB", frGroups=frGroups, frCircuitTable=frCircuitTable, frPortGroup=frPortGroup, frCircuitMulticast=frCircuitMulticast, frCircuitCommittedBurst=frCircuitCommittedBurst, frDlcmiMaxSupportedVCs=frDlcmiMaxSupportedVCs, frDlcmiTable=frDlcmiTable, frCircuitSentDEs=frCircuitSentDEs, DLCI=DLCI, frCompliance0=frCompliance0, frameRelayTraps=frameRelayTraps, frCompliances=frCompliances, frErrTable=frErrTable, frErrFaultTime=frErrFaultTime, frPortGroup0=frPortGroup0, frCircuitDiscards=frCircuitDiscards, frErrData=frErrData, frCircuitReceivedOctets=frCircuitReceivedOctets, frCircuitLastTimeChange=frCircuitLastTimeChange, frConformance=frConformance, frCompliance=frCompliance, frDLCIStatusChange=frDLCIStatusChange, frDlcmiErrorThreshold=frDlcmiErrorThreshold, frErrIfIndex=frErrIfIndex, frErrTime=frErrTime, frDlcmiAddress=frDlcmiAddress, frCircuitThroughput=frCircuitThroughput, frDlcmiRowStatus=frDlcmiRowStatus, frCircuitType=frCircuitType, frCircuitState=frCircuitState, frErrFaults=frErrFaults, frDlcmiEntry=frDlcmiEntry, frCircuitRowStatus=frCircuitRowStatus, frTrapMaxRate=frTrapMaxRate, frCircuitEntry=frCircuitEntry, frCircuitReceivedFECNs=frCircuitReceivedFECNs, frCircuitLogicalIfIndex=frCircuitLogicalIfIndex, frTrapGroup=frTrapGroup, frErrGroup=frErrGroup, frDlcmiStatus=frDlcmiStatus, frTrapState=frTrapState, frCircuitCreationTime=frCircuitCreationTime, frDlcmiIfIndex=frDlcmiIfIndex, frameRelayDTE=frameRelayDTE, frDlcmiAddressLen=frDlcmiAddressLen, frTrapGroup0=frTrapGroup0, frCircuitReceivedDEs=frCircuitReceivedDEs, PYSNMP_MODULE_ID=frameRelayDTE, frDlcmiMulticast=frDlcmiMulticast, frCircuitReceivedBECNs=frCircuitReceivedBECNs, frCircuitSentFrames=frCircuitSentFrames, frCircuitGroup0=frCircuitGroup0, frErrGroup0=frErrGroup0, frErrEntry=frErrEntry, frErrType=frErrType, frCircuitExcessBurst=frCircuitExcessBurst, frCircuitReceivedFrames=frCircuitReceivedFrames, frCircuitDlci=frCircuitDlci, frCircuitGroup=frCircuitGroup, frDlcmiMonitoredEvents=frDlcmiMonitoredEvents, frDlcmiPollingInterval=frDlcmiPollingInterval, frDlcmiFullEnquiryInterval=frDlcmiFullEnquiryInterval, frCircuitSentOctets=frCircuitSentOctets, frNotificationGroup=frNotificationGroup, frCircuitIfIndex=frCircuitIfIndex, frameRelayTrapControl=frameRelayTrapControl, frDlcmiState=frDlcmiState)
