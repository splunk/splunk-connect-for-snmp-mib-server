#
# PySNMP MIB module HP-ICF-OSPF (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/HP-ICF-OSPF
# Produced by pysmi-0.3.4 at Mon Apr 29 19:22:21 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, SingleValueConstraint, ConstraintsUnion, ConstraintsIntersection, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "SingleValueConstraint", "ConstraintsUnion", "ConstraintsIntersection", "ValueSizeConstraint")
hpSwitch, = mibBuilder.importSymbols("HP-ICF-OID", "hpSwitch")
IANAipRouteProtocol, = mibBuilder.importSymbols("IANA-RTPROTO-MIB", "IANAipRouteProtocol")
InterfaceIndex, = mibBuilder.importSymbols("IF-MIB", "InterfaceIndex")
PositiveInteger, ospfLsdbEntry, AreaID, ospfLsdbRouterId, ospfNbrEntry, ospfLsdbLsid, ospfIfMetricEntry, Metric, ospfIfEntry, ospfAddressLessIf, ospfLsdbAreaId, ospfLsdbType, ospfAreaAggregateEntry, ospfIfIpAddress, ospfExtLsdbEntry, BigMetric = mibBuilder.importSymbols("OSPF-MIB", "PositiveInteger", "ospfLsdbEntry", "AreaID", "ospfLsdbRouterId", "ospfNbrEntry", "ospfLsdbLsid", "ospfIfMetricEntry", "Metric", "ospfIfEntry", "ospfAddressLessIf", "ospfLsdbAreaId", "ospfLsdbType", "ospfAreaAggregateEntry", "ospfIfIpAddress", "ospfExtLsdbEntry", "BigMetric")
ObjectGroup, NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "NotificationGroup", "ModuleCompliance")
Counter64, iso, Counter32, MibIdentifier, NotificationType, TimeTicks, IpAddress, MibScalar, MibTable, MibTableRow, MibTableColumn, ModuleIdentity, Bits, ObjectIdentity, Unsigned32, Integer32, Gauge32 = mibBuilder.importSymbols("SNMPv2-SMI", "Counter64", "iso", "Counter32", "MibIdentifier", "NotificationType", "TimeTicks", "IpAddress", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ModuleIdentity", "Bits", "ObjectIdentity", "Unsigned32", "Integer32", "Gauge32")
TruthValue, RowStatus, TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TruthValue", "RowStatus", "TextualConvention", "DisplayString")
hpicfOspf = ModuleIdentity((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 14))
hpicfOspf.setRevisions(('2017-05-18 00:00', '2016-01-10 10:00', '2010-10-28 10:00', '2010-03-25 00:00', '2009-03-05 00:00', '2008-10-15 03:39', '2008-03-28 03:39', '2007-04-02 09:33', '2006-07-10 20:10', '2003-05-13 02:02', '2001-11-13 03:39',))
if mibBuilder.loadTexts: hpicfOspf.setLastUpdated('201705180000Z')
if mibBuilder.loadTexts: hpicfOspf.setOrganization('HP Networking')
class HpicfOspfRouterIdTc(TextualConvention, Unsigned32):
    status = 'current'
    displayHint = 'd-0'
    subtypeSpec = Unsigned32.subtypeSpec + ValueRangeConstraint(1, 4294967295)

hpicfOspfObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 14, 1))
hpicfOspfGeneral = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 14, 1, 1))
hpicfOspf1583CompatibilityMode = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 14, 1, 1, 1), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpicfOspf1583CompatibilityMode.setStatus('current')
hpicfOspfDefaultImportMetric = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 14, 1, 1, 2), BigMetric()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpicfOspfDefaultImportMetric.setStatus('current')
hpicfOspfDefaultImportMetricType = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 14, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("externalType1", 1), ("externalType2", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpicfOspfDefaultImportMetricType.setStatus('current')
hpicfOspfIntraAreaDistance = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 14, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpicfOspfIntraAreaDistance.setStatus('current')
hpicfOspfInterAreaDistance = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 14, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpicfOspfInterAreaDistance.setStatus('current')
hpicfOspfExternalDistance = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 14, 1, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpicfOspfExternalDistance.setStatus('current')
hpicfOspfSpfThrottleStartInterval = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 14, 1, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 600))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpicfOspfSpfThrottleStartInterval.setStatus('current')
hpicfOspfSpfThrottleWaitInterval = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 14, 1, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 600))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpicfOspfSpfThrottleWaitInterval.setStatus('current')
hpicfOspfSpfThrottleMaxWaitTime = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 14, 1, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 600))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpicfOspfSpfThrottleMaxWaitTime.setStatus('current')
hpicfOspfSpfThrottleCurrentSpfInterval = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 14, 1, 1, 10), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfOspfSpfThrottleCurrentSpfInterval.setStatus('current')
hpicfOspfReferenceCost = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 14, 1, 1, 11), Metric()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpicfOspfReferenceCost.setStatus('current')
hpicfOspfRedistTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 14, 1, 2), )
if mibBuilder.loadTexts: hpicfOspfRedistTable.setStatus('current')
hpicfOspfRedistEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 14, 1, 2, 1), ).setIndexNames((0, "HP-ICF-OSPF", "hpicfOspfRedistSrcProto"))
if mibBuilder.loadTexts: hpicfOspfRedistEntry.setStatus('current')
hpicfOspfRedistSrcProto = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 14, 1, 2, 1, 1), IANAipRouteProtocol())
if mibBuilder.loadTexts: hpicfOspfRedistSrcProto.setStatus('current')
hpicfOspfRedistEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 14, 1, 2, 1, 2), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpicfOspfRedistEnabled.setStatus('current')
hpicfOspfRedistRestrictTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 14, 1, 3), )
if mibBuilder.loadTexts: hpicfOspfRedistRestrictTable.setStatus('current')
hpicfOspfRedistRestrictEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 14, 1, 3, 1), ).setIndexNames((0, "HP-ICF-OSPF", "hpicfOspfRedistRestrictAddr"), (0, "HP-ICF-OSPF", "hpicfOspfRedistRestrictMask"))
if mibBuilder.loadTexts: hpicfOspfRedistRestrictEntry.setStatus('current')
hpicfOspfRedistRestrictAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 14, 1, 3, 1, 1), IpAddress())
if mibBuilder.loadTexts: hpicfOspfRedistRestrictAddr.setStatus('current')
hpicfOspfRedistRestrictMask = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 14, 1, 3, 1, 2), IpAddress())
if mibBuilder.loadTexts: hpicfOspfRedistRestrictMask.setStatus('current')
hpicfOspfRedistRestrictStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 14, 1, 3, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpicfOspfRedistRestrictStatus.setStatus('current')
hpicfOspfCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 14, 2, 2))
hpicfOspfCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 14, 2, 2, 1)).setObjects(("HP-ICF-OSPF", "hpicfOspfBaseGroup"), ("HP-ICF-OSPF", "hpicfOspfRedistGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfOspfCompliance = hpicfOspfCompliance.setStatus('current')
hpicfOspfRouteGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 14, 3))
hpicfOspfNssaType1 = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 14, 3, 1))
hpicfOspfNssaType2 = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 14, 3, 2))
hpicfOspfIfTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 14, 4), )
if mibBuilder.loadTexts: hpicfOspfIfTable.setStatus('current')
hpicfOspfIfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 14, 4, 1), )
ospfIfEntry.registerAugmentions(("HP-ICF-OSPF", "hpicfOspfIfEntry"))
hpicfOspfIfEntry.setIndexNames(*ospfIfEntry.getIndexNames())
if mibBuilder.loadTexts: hpicfOspfIfEntry.setStatus('current')
hpicfOspfIfPassive = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 14, 4, 1, 1), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpicfOspfIfPassive.setStatus('current')
hpicfOspfIfNbrCount = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 14, 4, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfOspfIfNbrCount.setStatus('current')
hpicfOspfIfBfdEnbl = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 14, 4, 1, 3), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpicfOspfIfBfdEnbl.setStatus('current')
hpicfOspfIfStatsTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 14, 5), )
if mibBuilder.loadTexts: hpicfOspfIfStatsTable.setStatus('current')
hpicfOspfIfStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 14, 5, 1), ).setIndexNames((0, "OSPF-MIB", "ospfIfIpAddress"), (0, "OSPF-MIB", "ospfAddressLessIf"))
if mibBuilder.loadTexts: hpicfOspfIfStatsEntry.setStatus('current')
hpicfOspfSentHelloPkt = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 14, 5, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfOspfSentHelloPkt.setStatus('current')
hpicfOspfSentDDPkt = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 14, 5, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfOspfSentDDPkt.setStatus('current')
hpicfOspfSentLSRPkt = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 14, 5, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfOspfSentLSRPkt.setStatus('current')
hpicfOspfSentLSUPkt = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 14, 5, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfOspfSentLSUPkt.setStatus('current')
hpicfOspfSentLSAPkt = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 14, 5, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfOspfSentLSAPkt.setStatus('current')
hpicfOspfRcvdHelloPkt = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 14, 5, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfOspfRcvdHelloPkt.setStatus('current')
hpicfOspfRcvdDDPkt = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 14, 5, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfOspfRcvdDDPkt.setStatus('current')
hpicfOspfRcvdLSRPkt = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 14, 5, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfOspfRcvdLSRPkt.setStatus('current')
hpicfOspfRcvdLSUPkt = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 14, 5, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfOspfRcvdLSUPkt.setStatus('current')
hpicfOspfRcvdLSAPkt = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 14, 5, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfOspfRcvdLSAPkt.setStatus('current')
hpicfOspfIfErrorTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 14, 6), )
if mibBuilder.loadTexts: hpicfOspfIfErrorTable.setStatus('current')
hpicfOspfIfErrorEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 14, 6, 1), ).setIndexNames((0, "OSPF-MIB", "ospfIfIpAddress"), (0, "OSPF-MIB", "ospfAddressLessIf"), (0, "HP-ICF-OSPF", "hpicfOspfIfErrorType"))
if mibBuilder.loadTexts: hpicfOspfIfErrorEntry.setStatus('current')
hpicfOspfIfErrorType = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 14, 6, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647)))
if mibBuilder.loadTexts: hpicfOspfIfErrorType.setStatus('current')
hpicfOspfIfErrorCount = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 14, 6, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfOspfIfErrorCount.setStatus('current')
hpicfOspfIfClearStatsTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 14, 7), )
if mibBuilder.loadTexts: hpicfOspfIfClearStatsTable.setStatus('current')
hpicfOspfIfClearStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 14, 7, 1), ).setIndexNames((0, "OSPF-MIB", "ospfIfIpAddress"), (0, "OSPF-MIB", "ospfAddressLessIf"))
if mibBuilder.loadTexts: hpicfOspfIfClearStatsEntry.setStatus('current')
hpicfOspfClearCounters = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 14, 7, 1, 1), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpicfOspfClearCounters.setStatus('current')
hpicfOspfSpfTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 14, 8), )
if mibBuilder.loadTexts: hpicfOspfSpfTable.setStatus('current')
hpicfOspfSpfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 14, 8, 1), ).setIndexNames((0, "HP-ICF-OSPF", "hpicfOspfSpfInstance"))
if mibBuilder.loadTexts: hpicfOspfSpfEntry.setStatus('current')
hpicfOspfSpfInstance = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 14, 8, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647)))
if mibBuilder.loadTexts: hpicfOspfSpfInstance.setStatus('current')
hpicfOspfSpfReason = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 14, 8, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfOspfSpfReason.setStatus('current')
hpicfOspfSpfTime = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 14, 8, 1, 3), Integer32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfOspfSpfTime.setStatus('current')
hpicfOspfReqTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 14, 9), )
if mibBuilder.loadTexts: hpicfOspfReqTable.setStatus('current')
hpicfOspfReqEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 14, 9, 1), ).setIndexNames((0, "OSPF-MIB", "ospfIfIpAddress"), (0, "OSPF-MIB", "ospfAddressLessIf"))
if mibBuilder.loadTexts: hpicfOspfReqEntry.setStatus('current')
hpicfOspfReqType = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 14, 9, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 10))).clone(namedValues=NamedValues(("routerLink", 1), ("networkLink", 2), ("summaryLink", 3), ("asSummaryLink", 4), ("asExternalLink", 5), ("multicastLink", 6), ("nssaExternalLink", 7), ("areaOpaqueLink", 10)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfOspfReqType.setStatus('current')
hpicfOspfReqLsid = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 14, 9, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfOspfReqLsid.setStatus('current')
hpicfOspfReqRouterId = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 14, 9, 1, 3), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfOspfReqRouterId.setStatus('current')
hpicfOspfReqSequence = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 14, 9, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfOspfReqSequence.setStatus('current')
hpicfOspfReqAge = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 14, 9, 1, 5), Integer32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfOspfReqAge.setStatus('current')
hpicfOspfReqChecksum = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 14, 9, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfOspfReqChecksum.setStatus('current')
hpicfOspfRetransTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 14, 10), )
if mibBuilder.loadTexts: hpicfOspfRetransTable.setStatus('current')
hpicfOspfRetransEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 14, 10, 1), ).setIndexNames((0, "OSPF-MIB", "ospfIfIpAddress"), (0, "OSPF-MIB", "ospfAddressLessIf"))
if mibBuilder.loadTexts: hpicfOspfRetransEntry.setStatus('current')
hpicfOspfRetransType = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 14, 10, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 10))).clone(namedValues=NamedValues(("routerLink", 1), ("networkLink", 2), ("summaryLink", 3), ("asSummaryLink", 4), ("asExternalLink", 5), ("multicastLink", 6), ("nssaExternalLink", 7), ("areaOpaqueLink", 10)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfOspfRetransType.setStatus('current')
hpicfOspfRetransLsid = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 14, 10, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfOspfRetransLsid.setStatus('current')
hpicfOspfRetransRouterId = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 14, 10, 1, 3), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfOspfRetransRouterId.setStatus('current')
hpicfOspfRetransSequence = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 14, 10, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfOspfRetransSequence.setStatus('current')
hpicfOspfRetransAge = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 14, 10, 1, 5), Integer32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfOspfRetransAge.setStatus('current')
hpicfOspfRetransChecksum = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 14, 10, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfOspfRetransChecksum.setStatus('current')
hpicfOspfFloodTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 14, 11), )
if mibBuilder.loadTexts: hpicfOspfFloodTable.setStatus('current')
hpicfOspfFloodEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 14, 11, 1), ).setIndexNames((0, "OSPF-MIB", "ospfIfIpAddress"), (0, "OSPF-MIB", "ospfAddressLessIf"))
if mibBuilder.loadTexts: hpicfOspfFloodEntry.setStatus('current')
hpicfOspfFloodType = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 14, 11, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 10))).clone(namedValues=NamedValues(("routerLink", 1), ("networkLink", 2), ("summaryLink", 3), ("asSummaryLink", 4), ("asExternalLink", 5), ("multicastLink", 6), ("nssaExternalLink", 7), ("areaOpaqueLink", 10)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfOspfFloodType.setStatus('current')
hpicfOspfFloodLsid = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 14, 11, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfOspfFloodLsid.setStatus('current')
hpicfOspfFloodRouterId = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 14, 11, 1, 3), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfOspfFloodRouterId.setStatus('current')
hpicfOspfFloodSequence = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 14, 11, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfOspfFloodSequence.setStatus('current')
hpicfOspfFloodAge = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 14, 11, 1, 5), Integer32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfOspfFloodAge.setStatus('current')
hpicfOspfFloodChecksum = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 14, 11, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfOspfFloodChecksum.setStatus('current')
hpicfOspfSpfTimerElapsed = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 14, 12), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfOspfSpfTimerElapsed.setStatus('current')
hpicfOspfAreaLsdbTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 14, 14), )
if mibBuilder.loadTexts: hpicfOspfAreaLsdbTable.setStatus('current')
hpicfOspfAreaLsdbEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 14, 14, 1), )
ospfLsdbEntry.registerAugmentions(("HP-ICF-OSPF", "hpicfOspfAreaLsdbEntry"))
hpicfOspfAreaLsdbEntry.setIndexNames(*ospfLsdbEntry.getIndexNames())
if mibBuilder.loadTexts: hpicfOspfAreaLsdbEntry.setStatus('current')
hpicfOspfAreaLsdbRtrCapBits = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 14, 14, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfOspfAreaLsdbRtrCapBits.setStatus('current')
hpicfOspfAreaLsdbOptions = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 14, 14, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfOspfAreaLsdbOptions.setStatus('current')
hpicfOspfAreaLsdbMetric = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 14, 14, 1, 3), Metric()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfOspfAreaLsdbMetric.setStatus('current')
hpicfOspfAreaLsdbAddrPrefix = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 14, 14, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfOspfAreaLsdbAddrPrefix.setStatus('current')
hpicfOspfAreaLsdbFwdingAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 14, 14, 1, 5), HpicfOspfRouterIdTc()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfOspfAreaLsdbFwdingAddress.setStatus('current')
hpicfOspfAreaLsdbExtRouteTags = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 14, 14, 1, 6), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfOspfAreaLsdbExtRouteTags.setStatus('current')
hpicfOspfTOS = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 14, 14, 1, 7), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfOspfTOS.setStatus('current')
hpicfOspfLsdbRouterLinks = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 14, 14, 1, 8), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfOspfLsdbRouterLinks.setStatus('current')
hpicfOspfLsdbBitE = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 14, 14, 1, 9), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfOspfLsdbBitE.setStatus('current')
hpicfOspfRouterLSATable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 14, 15), )
if mibBuilder.loadTexts: hpicfOspfRouterLSATable.setStatus('current')
hpicfOspfRouterLSAEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 14, 15, 1), ).setIndexNames((0, "OSPF-MIB", "ospfLsdbAreaId"), (0, "OSPF-MIB", "ospfLsdbType"), (0, "OSPF-MIB", "ospfLsdbLsid"), (0, "OSPF-MIB", "ospfLsdbRouterId"), (0, "HP-ICF-OSPF", "hpicfOspfRouterLSANbrRtrId"))
if mibBuilder.loadTexts: hpicfOspfRouterLSAEntry.setStatus('current')
hpicfOspfRouterLSANbrRtrId = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 14, 15, 1, 1), HpicfOspfRouterIdTc())
if mibBuilder.loadTexts: hpicfOspfRouterLSANbrRtrId.setStatus('current')
hpicfOspfRouterLSAIfType = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 14, 15, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfOspfRouterLSAIfType.setStatus('current')
hpicfOspfRouterLSAMetric = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 14, 15, 1, 3), Metric()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfOspfRouterLSAMetric.setStatus('current')
hpicfOspfRouterLSAIfId = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 14, 15, 1, 4), HpicfOspfRouterIdTc()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfOspfRouterLSAIfId.setStatus('current')
hpicfOspfRouterLSATOSMetric = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 14, 15, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfOspfRouterLSATOSMetric.setStatus('current')
hpicfOspfNetworkLSATable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 14, 16), )
if mibBuilder.loadTexts: hpicfOspfNetworkLSATable.setStatus('current')
hpicfOspfNetworkLSAEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 14, 16, 1), ).setIndexNames((0, "OSPF-MIB", "ospfLsdbAreaId"), (0, "OSPF-MIB", "ospfLsdbType"), (0, "OSPF-MIB", "ospfLsdbLsid"), (0, "OSPF-MIB", "ospfLsdbRouterId"), (0, "HP-ICF-OSPF", "hpicfOspfNetworkLSASeqNum"))
if mibBuilder.loadTexts: hpicfOspfNetworkLSAEntry.setStatus('current')
hpicfOspfNetworkLSASeqNum = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 14, 16, 1, 1), Unsigned32())
if mibBuilder.loadTexts: hpicfOspfNetworkLSASeqNum.setStatus('current')
hpicfOspfNetworkLSAAttachedRouter = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 14, 16, 1, 2), HpicfOspfRouterIdTc()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfOspfNetworkLSAAttachedRouter.setStatus('current')
hpicfOspfExtLsdbTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 14, 17), )
if mibBuilder.loadTexts: hpicfOspfExtLsdbTable.setStatus('current')
hpicfOspfExtLsdbEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 14, 17, 1), )
ospfExtLsdbEntry.registerAugmentions(("HP-ICF-OSPF", "hpicfOspfExtLsdbEntry"))
hpicfOspfExtLsdbEntry.setIndexNames(*ospfExtLsdbEntry.getIndexNames())
if mibBuilder.loadTexts: hpicfOspfExtLsdbEntry.setStatus('current')
hpicfOspfExtLsdbMetric = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 14, 17, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfOspfExtLsdbMetric.setStatus('current')
hpicfOspfExtLsdbOptions = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 14, 17, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfOspfExtLsdbOptions.setStatus('current')
hpicfOspfExtLsdbFwdingAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 14, 17, 1, 3), HpicfOspfRouterIdTc()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfOspfExtLsdbFwdingAddress.setStatus('current')
hpicfOspfExtLsdbExtRouteTags = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 14, 17, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfOspfExtLsdbExtRouteTags.setStatus('current')
hpicfOspfExtLsdbBitE = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 14, 17, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfOspfExtLsdbBitE.setStatus('current')
class HpicfOspfLogType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("neighborAdjacencyChanges", 1), ("other", 2))

class HpicfOspfLogAction(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3))
    namedValues = NamedValues(("enabled", 1), ("disabled", 2), ("enabledWithDetail", 3))

hpicfOspfLogTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 14, 1, 4), )
if mibBuilder.loadTexts: hpicfOspfLogTable.setStatus('current')
hpicfOspfLogEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 14, 1, 4, 1), ).setIndexNames((0, "HP-ICF-OSPF", "hpicfOspfLogType"))
if mibBuilder.loadTexts: hpicfOspfLogEntry.setStatus('current')
hpicfOspfLogType = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 14, 1, 4, 1, 1), HpicfOspfLogType())
if mibBuilder.loadTexts: hpicfOspfLogType.setStatus('current')
hpicfOspfLogAction = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 14, 1, 4, 1, 2), HpicfOspfLogAction()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpicfOspfLogAction.setStatus('current')
hpicfOspfNbrTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 14, 1, 5), )
if mibBuilder.loadTexts: hpicfOspfNbrTable.setStatus('current')
hpicfOspfNbrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 14, 1, 5, 1), )
ospfNbrEntry.registerAugmentions(("HP-ICF-OSPF", "hpicfOspfNbrEntry"))
hpicfOspfNbrEntry.setIndexNames(*ospfNbrEntry.getIndexNames())
if mibBuilder.loadTexts: hpicfOspfNbrEntry.setStatus('current')
hpicfOspfNbrUpTime = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 14, 1, 5, 1, 1), PositiveInteger()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfOspfNbrUpTime.setStatus('current')
hpicfOspfNbrTimeToExpiry = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 14, 1, 5, 1, 2), PositiveInteger()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfOspfNbrTimeToExpiry.setStatus('current')
hpicfOspfNbrDesignatedRouter = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 14, 1, 5, 1, 3), IpAddress().clone(hexValue="00000000")).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfOspfNbrDesignatedRouter.setStatus('current')
hpicfOspfNbrBackupDesignatedRouter = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 14, 1, 5, 1, 4), IpAddress().clone(hexValue="00000000")).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfOspfNbrBackupDesignatedRouter.setStatus('current')
hpicfOspfNbrAreaId = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 14, 1, 5, 1, 5), AreaID()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfOspfNbrAreaId.setStatus('current')
hpicfOspfNbrInterfaceName = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 14, 1, 5, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfOspfNbrInterfaceName.setStatus('current')
hpicfOspfNbrBfdState = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 14, 1, 5, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("notConfigured", 0), ("created", 1), ("up", 2), ("down", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfOspfNbrBfdState.setStatus('current')
hpicfOspfConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 14, 2))
hpicfOspfGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 14, 2, 1))
hpicfOspfReqGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 14, 2, 3))
hpicfOspfRetransGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 14, 2, 4))
hpicfOspfFloodGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 14, 2, 5))
hpicfOspfIfMetricObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 14, 18))
hpicfOspfIfMetricTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 14, 18, 1), )
if mibBuilder.loadTexts: hpicfOspfIfMetricTable.setStatus('current')
hpicfOspfIfMetricEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 14, 18, 1, 1), )
ospfIfMetricEntry.registerAugmentions(("HP-ICF-OSPF", "hpicfOspfIfMetricEntry"))
hpicfOspfIfMetricEntry.setIndexNames(*ospfIfMetricEntry.getIndexNames())
if mibBuilder.loadTexts: hpicfOspfIfMetricEntry.setStatus('current')
hpicfOspfIfFlagValue = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 14, 18, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 1)).clone(-1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpicfOspfIfFlagValue.setStatus('current')
hpicfOspfReqCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 14, 2, 2, 2)).setObjects(("HP-ICF-OSPF", "hpicfOspfReqManGroup"), ("HP-ICF-OSPF", "hpicfOspfReqGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfOspfReqCompliance = hpicfOspfReqCompliance.setStatus('current')
hpicfOspfFloodCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 14, 2, 2, 3)).setObjects(("HP-ICF-OSPF", "hpicfOspfFloodManGroup"), ("HP-ICF-OSPF", "hpicfOspfFloodGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfOspfFloodCompliance = hpicfOspfFloodCompliance.setStatus('current')
hpicfOspfRetransCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 14, 2, 2, 4)).setObjects(("HP-ICF-OSPF", "hpicfOspfRetransManGroup"), ("HP-ICF-OSPF", "hpicfOspfRetransGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfOspfRetransCompliance = hpicfOspfRetransCompliance.setStatus('current')
hpicfOspfCompliance1 = ModuleCompliance((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 14, 2, 2, 5)).setObjects(("HP-ICF-OSPF", "hpicfOspfAreaLsdbGroup"), ("HP-ICF-OSPF", "hpicfOspfExtLsdbGroup"), ("HP-ICF-OSPF", "hpicfOspfDistanceGroup"), ("HP-ICF-OSPF", "hpicfOspfSpfTimerGroup"), ("HP-ICF-OSPF", "hpicfOspfStatisticGroup"), ("HP-ICF-OSPF", "hpicfOspfIfGroup"), ("HP-ICF-OSPF", "hpicfOspfAreaAggregateGroup"), ("HP-ICF-OSPF", "hpicfOspfNbrGroup"), ("HP-ICF-OSPF", "hpicfOspfLogGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfOspfCompliance1 = hpicfOspfCompliance1.setStatus('deprecated')
hpicfOspfSpfDelayCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 14, 2, 2, 6)).setObjects(("HP-ICF-OSPF", "hpicfOspfSpfDelayGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfOspfSpfDelayCompliance = hpicfOspfSpfDelayCompliance.setStatus('current')
hpicfOspfAreaAggregateCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 14, 2, 2, 7)).setObjects(("HP-ICF-OSPF", "hpicfOspfAreaAggregateGroup1"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfOspfAreaAggregateCompliance = hpicfOspfAreaAggregateCompliance.setStatus('current')
hpicfOspfCompliance2 = ModuleCompliance((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 14, 2, 2, 8)).setObjects(("HP-ICF-OSPF", "hpicfOspfAreaLsdbGroup"), ("HP-ICF-OSPF", "hpicfOspfExtLsdbGroup"), ("HP-ICF-OSPF", "hpicfOspfDistanceGroup"), ("HP-ICF-OSPF", "hpicfOspfSpfTimerGroup"), ("HP-ICF-OSPF", "hpicfOspfStatisticGroup"), ("HP-ICF-OSPF", "hpicfOspfIfGroup"), ("HP-ICF-OSPF", "hpicfOspfAreaAggregateGroup"), ("HP-ICF-OSPF", "hpicfOspfNbrGroup1"), ("HP-ICF-OSPF", "hpicfOspfLogGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfOspfCompliance2 = hpicfOspfCompliance2.setStatus('deprecated')
hpicfOspfCompliance3 = ModuleCompliance((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 14, 2, 2, 9)).setObjects(("HP-ICF-OSPF", "hpicfOspfAreaLsdbGroup"), ("HP-ICF-OSPF", "hpicfOspfExtLsdbGroup"), ("HP-ICF-OSPF", "hpicfOspfDistanceGroup"), ("HP-ICF-OSPF", "hpicfOspfSpfTimerGroup"), ("HP-ICF-OSPF", "hpicfOspfStatisticGroup"), ("HP-ICF-OSPF", "hpicfOspfIfGroup"), ("HP-ICF-OSPF", "hpicfOspfAreaAggregateGroup"), ("HP-ICF-OSPF", "hpicfOspfNbrGroup1"), ("HP-ICF-OSPF", "hpicfOspfLogGroup"), ("HP-ICF-OSPF", "hpicfOspfReferenceGroup"), ("HP-ICF-OSPF", "hpicfOspfMetricGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfOspfCompliance3 = hpicfOspfCompliance3.setStatus('current')
hpicfOspfReqManGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 14, 2, 3, 1)).setObjects(("HP-ICF-OSPF", "hpicfOspfReqType"), ("HP-ICF-OSPF", "hpicfOspfReqLsid"), ("HP-ICF-OSPF", "hpicfOspfReqRouterId"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfOspfReqManGroup = hpicfOspfReqManGroup.setStatus('current')
hpicfOspfReqGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 14, 2, 3, 2)).setObjects(("HP-ICF-OSPF", "hpicfOspfReqSequence"), ("HP-ICF-OSPF", "hpicfOspfReqChecksum"), ("HP-ICF-OSPF", "hpicfOspfReqAge"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfOspfReqGroup = hpicfOspfReqGroup.setStatus('current')
hpicfOspfRetransManGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 14, 2, 4, 1)).setObjects(("HP-ICF-OSPF", "hpicfOspfRetransType"), ("HP-ICF-OSPF", "hpicfOspfRetransLsid"), ("HP-ICF-OSPF", "hpicfOspfRetransRouterId"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfOspfRetransManGroup = hpicfOspfRetransManGroup.setStatus('current')
hpicfOspfRetransGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 14, 2, 4, 2)).setObjects(("HP-ICF-OSPF", "hpicfOspfRetransSequence"), ("HP-ICF-OSPF", "hpicfOspfRetransChecksum"), ("HP-ICF-OSPF", "hpicfOspfRetransAge"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfOspfRetransGroup = hpicfOspfRetransGroup.setStatus('current')
hpicfOspfFloodManGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 14, 2, 5, 1)).setObjects(("HP-ICF-OSPF", "hpicfOspfFloodType"), ("HP-ICF-OSPF", "hpicfOspfFloodLsid"), ("HP-ICF-OSPF", "hpicfOspfFloodRouterId"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfOspfFloodManGroup = hpicfOspfFloodManGroup.setStatus('current')
hpicfOspfFloodGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 14, 2, 5, 2)).setObjects(("HP-ICF-OSPF", "hpicfOspfFloodSequence"), ("HP-ICF-OSPF", "hpicfOspfFloodChecksum"), ("HP-ICF-OSPF", "hpicfOspfFloodAge"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfOspfFloodGroup = hpicfOspfFloodGroup.setStatus('current')
hpicfOspfBaseGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 14, 2, 1, 1)).setObjects(("HP-ICF-OSPF", "hpicfOspf1583CompatibilityMode"), ("HP-ICF-OSPF", "hpicfOspfDefaultImportMetric"), ("HP-ICF-OSPF", "hpicfOspfDefaultImportMetricType"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfOspfBaseGroup = hpicfOspfBaseGroup.setStatus('current')
hpicfOspfRedistGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 14, 2, 1, 2)).setObjects(("HP-ICF-OSPF", "hpicfOspfRedistEnabled"), ("HP-ICF-OSPF", "hpicfOspfRedistRestrictStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfOspfRedistGroup = hpicfOspfRedistGroup.setStatus('current')
hpicfOspfDistanceGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 14, 2, 1, 3)).setObjects(("HP-ICF-OSPF", "hpicfOspfIntraAreaDistance"), ("HP-ICF-OSPF", "hpicfOspfInterAreaDistance"), ("HP-ICF-OSPF", "hpicfOspfExternalDistance"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfOspfDistanceGroup = hpicfOspfDistanceGroup.setStatus('current')
hpicfOspfSpfTimerGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 14, 2, 1, 5)).setObjects(("HP-ICF-OSPF", "hpicfOspfSpfTimerElapsed"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfOspfSpfTimerGroup = hpicfOspfSpfTimerGroup.setStatus('current')
hpicfOspfStatisticGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 14, 2, 1, 4)).setObjects(("HP-ICF-OSPF", "hpicfOspfSentHelloPkt"), ("HP-ICF-OSPF", "hpicfOspfSentDDPkt"), ("HP-ICF-OSPF", "hpicfOspfSentLSRPkt"), ("HP-ICF-OSPF", "hpicfOspfSentLSUPkt"), ("HP-ICF-OSPF", "hpicfOspfSentLSAPkt"), ("HP-ICF-OSPF", "hpicfOspfRcvdHelloPkt"), ("HP-ICF-OSPF", "hpicfOspfRcvdDDPkt"), ("HP-ICF-OSPF", "hpicfOspfRcvdLSRPkt"), ("HP-ICF-OSPF", "hpicfOspfRcvdLSUPkt"), ("HP-ICF-OSPF", "hpicfOspfRcvdLSAPkt"), ("HP-ICF-OSPF", "hpicfOspfIfErrorCount"), ("HP-ICF-OSPF", "hpicfOspfClearCounters"), ("HP-ICF-OSPF", "hpicfOspfSpfReason"), ("HP-ICF-OSPF", "hpicfOspfSpfTime"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfOspfStatisticGroup = hpicfOspfStatisticGroup.setStatus('current')
hpicfOspfLogGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 14, 2, 1, 6)).setObjects(("HP-ICF-OSPF", "hpicfOspfLogAction"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfOspfLogGroup = hpicfOspfLogGroup.setStatus('current')
hpicfOspfNbrGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 14, 2, 1, 7)).setObjects(("HP-ICF-OSPF", "hpicfOspfNbrUpTime"), ("HP-ICF-OSPF", "hpicfOspfNbrTimeToExpiry"), ("HP-ICF-OSPF", "hpicfOspfNbrDesignatedRouter"), ("HP-ICF-OSPF", "hpicfOspfNbrBackupDesignatedRouter"), ("HP-ICF-OSPF", "hpicfOspfNbrAreaId"), ("HP-ICF-OSPF", "hpicfOspfNbrInterfaceName"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfOspfNbrGroup = hpicfOspfNbrGroup.setStatus('deprecated')
hpicfOspfAreaAggregateTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 14, 1, 6), )
if mibBuilder.loadTexts: hpicfOspfAreaAggregateTable.setStatus('current')
hpicfOspfAreaAggregateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 14, 1, 6, 1), )
ospfAreaAggregateEntry.registerAugmentions(("HP-ICF-OSPF", "hpicfOspfAreaAggregateEntry"))
hpicfOspfAreaAggregateEntry.setIndexNames(*ospfAreaAggregateEntry.getIndexNames())
if mibBuilder.loadTexts: hpicfOspfAreaAggregateEntry.setStatus('current')
hpicfOspfAreaAggregateCost = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 14, 1, 6, 1, 1), BigMetric()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpicfOspfAreaAggregateCost.setStatus('current')
hpicfOspfAreaAggregateType = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 14, 1, 6, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("type1", 1), ("type2", 2))).clone(2)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpicfOspfAreaAggregateType.setStatus('current')
hpicfOspfIfGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 14, 2, 1, 8)).setObjects(("HP-ICF-OSPF", "hpicfOspfIfPassive"), ("HP-ICF-OSPF", "hpicfOspfIfNbrCount"), ("HP-ICF-OSPF", "hpicfOspfIfBfdEnbl"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfOspfIfGroup = hpicfOspfIfGroup.setStatus('current')
hpicfOspfAreaLsdbGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 14, 2, 1, 9)).setObjects(("HP-ICF-OSPF", "hpicfOspfAreaLsdbRtrCapBits"), ("HP-ICF-OSPF", "hpicfOspfAreaLsdbOptions"), ("HP-ICF-OSPF", "hpicfOspfAreaLsdbMetric"), ("HP-ICF-OSPF", "hpicfOspfAreaLsdbAddrPrefix"), ("HP-ICF-OSPF", "hpicfOspfAreaLsdbFwdingAddress"), ("HP-ICF-OSPF", "hpicfOspfAreaLsdbExtRouteTags"), ("HP-ICF-OSPF", "hpicfOspfRouterLSAIfType"), ("HP-ICF-OSPF", "hpicfOspfRouterLSAMetric"), ("HP-ICF-OSPF", "hpicfOspfRouterLSAIfId"), ("HP-ICF-OSPF", "hpicfOspfNetworkLSAAttachedRouter"), ("HP-ICF-OSPF", "hpicfOspfTOS"), ("HP-ICF-OSPF", "hpicfOspfLsdbRouterLinks"), ("HP-ICF-OSPF", "hpicfOspfRouterLSATOSMetric"), ("HP-ICF-OSPF", "hpicfOspfLsdbBitE"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfOspfAreaLsdbGroup = hpicfOspfAreaLsdbGroup.setStatus('current')
hpicfOspfExtLsdbGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 14, 2, 1, 10)).setObjects(("HP-ICF-OSPF", "hpicfOspfExtLsdbMetric"), ("HP-ICF-OSPF", "hpicfOspfExtLsdbOptions"), ("HP-ICF-OSPF", "hpicfOspfExtLsdbFwdingAddress"), ("HP-ICF-OSPF", "hpicfOspfExtLsdbExtRouteTags"), ("HP-ICF-OSPF", "hpicfOspfExtLsdbBitE"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfOspfExtLsdbGroup = hpicfOspfExtLsdbGroup.setStatus('current')
hpicfOspfAreaAggregateGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 14, 2, 1, 11)).setObjects(("HP-ICF-OSPF", "hpicfOspfAreaAggregateCost"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfOspfAreaAggregateGroup = hpicfOspfAreaAggregateGroup.setStatus('current')
hpicfOspfSpfDelayGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 14, 2, 1, 12)).setObjects(("HP-ICF-OSPF", "hpicfOspfSpfThrottleStartInterval"), ("HP-ICF-OSPF", "hpicfOspfSpfThrottleWaitInterval"), ("HP-ICF-OSPF", "hpicfOspfSpfThrottleMaxWaitTime"), ("HP-ICF-OSPF", "hpicfOspfSpfThrottleCurrentSpfInterval"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfOspfSpfDelayGroup = hpicfOspfSpfDelayGroup.setStatus('current')
hpicfOspfAreaAggregateGroup1 = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 14, 2, 1, 13)).setObjects(("HP-ICF-OSPF", "hpicfOspfAreaAggregateType"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfOspfAreaAggregateGroup1 = hpicfOspfAreaAggregateGroup1.setStatus('current')
hpicfOspfNbrGroup1 = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 14, 2, 1, 14)).setObjects(("HP-ICF-OSPF", "hpicfOspfNbrUpTime"), ("HP-ICF-OSPF", "hpicfOspfNbrTimeToExpiry"), ("HP-ICF-OSPF", "hpicfOspfNbrDesignatedRouter"), ("HP-ICF-OSPF", "hpicfOspfNbrBackupDesignatedRouter"), ("HP-ICF-OSPF", "hpicfOspfNbrAreaId"), ("HP-ICF-OSPF", "hpicfOspfNbrInterfaceName"), ("HP-ICF-OSPF", "hpicfOspfNbrBfdState"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfOspfNbrGroup1 = hpicfOspfNbrGroup1.setStatus('current')
hpicfOspfReferenceGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 14, 2, 1, 15)).setObjects(("HP-ICF-OSPF", "hpicfOspfReferenceCost"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfOspfReferenceGroup = hpicfOspfReferenceGroup.setStatus('current')
hpicfOspfMetricGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 14, 2, 1, 16)).setObjects(("HP-ICF-OSPF", "hpicfOspfIfFlagValue"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfOspfMetricGroup = hpicfOspfMetricGroup.setStatus('current')
mibBuilder.exportSymbols("HP-ICF-OSPF", hpicfOspfAreaLsdbOptions=hpicfOspfAreaLsdbOptions, hpicfOspfIfStatsEntry=hpicfOspfIfStatsEntry, hpicfOspfFloodChecksum=hpicfOspfFloodChecksum, hpicfOspfAreaAggregateCompliance=hpicfOspfAreaAggregateCompliance, hpicfOspfClearCounters=hpicfOspfClearCounters, hpicfOspfRetransSequence=hpicfOspfRetransSequence, hpicfOspfLogGroup=hpicfOspfLogGroup, hpicfOspfStatisticGroup=hpicfOspfStatisticGroup, hpicfOspfRetransLsid=hpicfOspfRetransLsid, hpicfOspfExtLsdbTable=hpicfOspfExtLsdbTable, hpicfOspfDefaultImportMetricType=hpicfOspfDefaultImportMetricType, hpicfOspfRetransEntry=hpicfOspfRetransEntry, hpicfOspfIntraAreaDistance=hpicfOspfIntraAreaDistance, hpicfOspfCompliances=hpicfOspfCompliances, hpicfOspfRouterLSAIfId=hpicfOspfRouterLSAIfId, hpicfOspfReqGroup=hpicfOspfReqGroup, hpicfOspfDefaultImportMetric=hpicfOspfDefaultImportMetric, hpicfOspfCompliance1=hpicfOspfCompliance1, hpicfOspfReqType=hpicfOspfReqType, hpicfOspfSpfThrottleWaitInterval=hpicfOspfSpfThrottleWaitInterval, hpicfOspfFloodRouterId=hpicfOspfFloodRouterId, hpicfOspfNbrTable=hpicfOspfNbrTable, hpicfOspfReqSequence=hpicfOspfReqSequence, hpicfOspfNbrGroup=hpicfOspfNbrGroup, hpicfOspfRedistRestrictStatus=hpicfOspfRedistRestrictStatus, hpicfOspfFloodTable=hpicfOspfFloodTable, hpicfOspfNbrInterfaceName=hpicfOspfNbrInterfaceName, hpicfOspf=hpicfOspf, hpicfOspfRcvdDDPkt=hpicfOspfRcvdDDPkt, hpicfOspfSpfTable=hpicfOspfSpfTable, hpicfOspfSpfTimerElapsed=hpicfOspfSpfTimerElapsed, hpicfOspfRcvdLSAPkt=hpicfOspfRcvdLSAPkt, hpicfOspfAreaLsdbFwdingAddress=hpicfOspfAreaLsdbFwdingAddress, hpicfOspfExtLsdbBitE=hpicfOspfExtLsdbBitE, hpicfOspfSpfTimerGroup=hpicfOspfSpfTimerGroup, hpicfOspfAreaAggregateGroup1=hpicfOspfAreaAggregateGroup1, hpicfOspfIfMetricEntry=hpicfOspfIfMetricEntry, hpicfOspfRedistRestrictTable=hpicfOspfRedistRestrictTable, hpicfOspfReqAge=hpicfOspfReqAge, hpicfOspfReqCompliance=hpicfOspfReqCompliance, hpicfOspfExternalDistance=hpicfOspfExternalDistance, hpicfOspfIfErrorEntry=hpicfOspfIfErrorEntry, hpicfOspfRouterLSATOSMetric=hpicfOspfRouterLSATOSMetric, hpicfOspfRedistEnabled=hpicfOspfRedistEnabled, hpicfOspfSentLSAPkt=hpicfOspfSentLSAPkt, hpicfOspfFloodGroup=hpicfOspfFloodGroup, hpicfOspfRouterLSAIfType=hpicfOspfRouterLSAIfType, hpicfOspfRetransType=hpicfOspfRetransType, hpicfOspfFloodManGroup=hpicfOspfFloodManGroup, hpicfOspfRouterLSAMetric=hpicfOspfRouterLSAMetric, hpicfOspfIfMetricTable=hpicfOspfIfMetricTable, hpicfOspfSpfDelayGroup=hpicfOspfSpfDelayGroup, hpicfOspfReferenceCost=hpicfOspfReferenceCost, hpicfOspfAreaAggregateCost=hpicfOspfAreaAggregateCost, hpicfOspfExtLsdbGroup=hpicfOspfExtLsdbGroup, hpicfOspfReqTable=hpicfOspfReqTable, hpicfOspfRedistRestrictEntry=hpicfOspfRedistRestrictEntry, hpicfOspfFloodLsid=hpicfOspfFloodLsid, hpicfOspfGeneral=hpicfOspfGeneral, hpicfOspfNbrAreaId=hpicfOspfNbrAreaId, hpicfOspfIfErrorTable=hpicfOspfIfErrorTable, hpicfOspfRedistGroup=hpicfOspfRedistGroup, hpicfOspfIfClearStatsEntry=hpicfOspfIfClearStatsEntry, hpicfOspfRouteGroup=hpicfOspfRouteGroup, hpicfOspfReqLsid=hpicfOspfReqLsid, hpicfOspfIfEntry=hpicfOspfIfEntry, hpicfOspfRcvdLSUPkt=hpicfOspfRcvdLSUPkt, hpicfOspfNbrBfdState=hpicfOspfNbrBfdState, hpicfOspfIfMetricObjects=hpicfOspfIfMetricObjects, hpicfOspfIfNbrCount=hpicfOspfIfNbrCount, hpicfOspfFloodType=hpicfOspfFloodType, hpicfOspf1583CompatibilityMode=hpicfOspf1583CompatibilityMode, hpicfOspfExtLsdbExtRouteTags=hpicfOspfExtLsdbExtRouteTags, hpicfOspfAreaAggregateType=hpicfOspfAreaAggregateType, hpicfOspfSpfReason=hpicfOspfSpfReason, HpicfOspfLogAction=HpicfOspfLogAction, hpicfOspfNbrBackupDesignatedRouter=hpicfOspfNbrBackupDesignatedRouter, hpicfOspfDistanceGroup=hpicfOspfDistanceGroup, hpicfOspfNssaType1=hpicfOspfNssaType1, hpicfOspfLsdbBitE=hpicfOspfLsdbBitE, hpicfOspfExtLsdbEntry=hpicfOspfExtLsdbEntry, hpicfOspfNetworkLSAAttachedRouter=hpicfOspfNetworkLSAAttachedRouter, hpicfOspfIfPassive=hpicfOspfIfPassive, hpicfOspfNetworkLSAEntry=hpicfOspfNetworkLSAEntry, hpicfOspfRcvdHelloPkt=hpicfOspfRcvdHelloPkt, hpicfOspfRetransCompliance=hpicfOspfRetransCompliance, hpicfOspfRetransRouterId=hpicfOspfRetransRouterId, hpicfOspfSentLSUPkt=hpicfOspfSentLSUPkt, hpicfOspfNbrEntry=hpicfOspfNbrEntry, hpicfOspfConformance=hpicfOspfConformance, hpicfOspfSpfInstance=hpicfOspfSpfInstance, hpicfOspfIfBfdEnbl=hpicfOspfIfBfdEnbl, hpicfOspfIfErrorType=hpicfOspfIfErrorType, hpicfOspfRcvdLSRPkt=hpicfOspfRcvdLSRPkt, hpicfOspfNetworkLSATable=hpicfOspfNetworkLSATable, hpicfOspfExtLsdbMetric=hpicfOspfExtLsdbMetric, hpicfOspfReqManGroup=hpicfOspfReqManGroup, hpicfOspfIfTable=hpicfOspfIfTable, hpicfOspfReqEntry=hpicfOspfReqEntry, hpicfOspfAreaLsdbTable=hpicfOspfAreaLsdbTable, hpicfOspfReqGroups=hpicfOspfReqGroups, hpicfOspfAreaAggregateTable=hpicfOspfAreaAggregateTable, hpicfOspfLogType=hpicfOspfLogType, hpicfOspfNbrGroup1=hpicfOspfNbrGroup1, hpicfOspfRetransAge=hpicfOspfRetransAge, hpicfOspfMetricGroup=hpicfOspfMetricGroup, hpicfOspfRedistRestrictAddr=hpicfOspfRedistRestrictAddr, hpicfOspfIfFlagValue=hpicfOspfIfFlagValue, hpicfOspfAreaLsdbEntry=hpicfOspfAreaLsdbEntry, hpicfOspfRetransGroup=hpicfOspfRetransGroup, hpicfOspfSentLSRPkt=hpicfOspfSentLSRPkt, hpicfOspfObjects=hpicfOspfObjects, hpicfOspfNetworkLSASeqNum=hpicfOspfNetworkLSASeqNum, hpicfOspfLogEntry=hpicfOspfLogEntry, hpicfOspfNbrUpTime=hpicfOspfNbrUpTime, hpicfOspfFloodEntry=hpicfOspfFloodEntry, hpicfOspfIfGroup=hpicfOspfIfGroup, hpicfOspfSentDDPkt=hpicfOspfSentDDPkt, hpicfOspfCompliance3=hpicfOspfCompliance3, hpicfOspfRouterLSAEntry=hpicfOspfRouterLSAEntry, hpicfOspfIfStatsTable=hpicfOspfIfStatsTable, hpicfOspfSentHelloPkt=hpicfOspfSentHelloPkt, hpicfOspfSpfThrottleMaxWaitTime=hpicfOspfSpfThrottleMaxWaitTime, hpicfOspfSpfEntry=hpicfOspfSpfEntry, hpicfOspfAreaLsdbRtrCapBits=hpicfOspfAreaLsdbRtrCapBits, hpicfOspfNssaType2=hpicfOspfNssaType2, hpicfOspfRouterLSANbrRtrId=hpicfOspfRouterLSANbrRtrId, hpicfOspfIfErrorCount=hpicfOspfIfErrorCount, hpicfOspfReqChecksum=hpicfOspfReqChecksum, hpicfOspfAreaLsdbGroup=hpicfOspfAreaLsdbGroup, hpicfOspfRedistTable=hpicfOspfRedistTable, hpicfOspfSpfThrottleCurrentSpfInterval=hpicfOspfSpfThrottleCurrentSpfInterval, hpicfOspfExtLsdbFwdingAddress=hpicfOspfExtLsdbFwdingAddress, hpicfOspfFloodCompliance=hpicfOspfFloodCompliance, hpicfOspfCompliance2=hpicfOspfCompliance2, hpicfOspfReqRouterId=hpicfOspfReqRouterId, hpicfOspfNbrTimeToExpiry=hpicfOspfNbrTimeToExpiry, hpicfOspfGroups=hpicfOspfGroups, hpicfOspfFloodAge=hpicfOspfFloodAge, hpicfOspfAreaLsdbMetric=hpicfOspfAreaLsdbMetric, hpicfOspfRedistSrcProto=hpicfOspfRedistSrcProto, hpicfOspfAreaLsdbAddrPrefix=hpicfOspfAreaLsdbAddrPrefix, HpicfOspfRouterIdTc=HpicfOspfRouterIdTc, HpicfOspfLogType=HpicfOspfLogType, hpicfOspfSpfDelayCompliance=hpicfOspfSpfDelayCompliance, hpicfOspfRouterLSATable=hpicfOspfRouterLSATable, hpicfOspfAreaLsdbExtRouteTags=hpicfOspfAreaLsdbExtRouteTags, hpicfOspfNbrDesignatedRouter=hpicfOspfNbrDesignatedRouter, hpicfOspfCompliance=hpicfOspfCompliance, hpicfOspfSpfThrottleStartInterval=hpicfOspfSpfThrottleStartInterval, hpicfOspfLogTable=hpicfOspfLogTable, hpicfOspfFloodGroups=hpicfOspfFloodGroups, hpicfOspfRedistRestrictMask=hpicfOspfRedistRestrictMask, hpicfOspfExtLsdbOptions=hpicfOspfExtLsdbOptions, hpicfOspfTOS=hpicfOspfTOS, hpicfOspfReferenceGroup=hpicfOspfReferenceGroup, hpicfOspfAreaAggregateGroup=hpicfOspfAreaAggregateGroup, hpicfOspfIfClearStatsTable=hpicfOspfIfClearStatsTable, hpicfOspfLsdbRouterLinks=hpicfOspfLsdbRouterLinks, hpicfOspfRetransGroups=hpicfOspfRetransGroups, hpicfOspfFloodSequence=hpicfOspfFloodSequence, hpicfOspfRedistEntry=hpicfOspfRedistEntry, hpicfOspfRetransChecksum=hpicfOspfRetransChecksum, PYSNMP_MODULE_ID=hpicfOspf, hpicfOspfSpfTime=hpicfOspfSpfTime, hpicfOspfAreaAggregateEntry=hpicfOspfAreaAggregateEntry, hpicfOspfLogAction=hpicfOspfLogAction, hpicfOspfRetransTable=hpicfOspfRetransTable, hpicfOspfInterAreaDistance=hpicfOspfInterAreaDistance, hpicfOspfBaseGroup=hpicfOspfBaseGroup, hpicfOspfRetransManGroup=hpicfOspfRetransManGroup)
