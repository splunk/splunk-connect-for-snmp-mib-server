#
# PySNMP MIB module ADTRAN-ATLAS-VOICE-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/ADTRAN-ATLAS-VOICE-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 16:59:20 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ValueSizeConstraint, ConstraintsIntersection, SingleValueConstraint, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ValueSizeConstraint", "ConstraintsIntersection", "SingleValueConstraint", "ValueRangeConstraint")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Integer32, iso, NotificationType, IpAddress, MibScalar, MibTable, MibTableRow, MibTableColumn, enterprises, TimeTicks, Counter32, MibIdentifier, ObjectIdentity, Counter64, Unsigned32, Bits, Gauge32, ModuleIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "Integer32", "iso", "NotificationType", "IpAddress", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "enterprises", "TimeTicks", "Counter32", "MibIdentifier", "ObjectIdentity", "Counter64", "Unsigned32", "Bits", "Gauge32", "ModuleIdentity")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
adtran = MibIdentifier((1, 3, 6, 1, 4, 1, 664))
adMgmt = MibIdentifier((1, 3, 6, 1, 4, 1, 664, 2))
adATLASmg = MibIdentifier((1, 3, 6, 1, 4, 1, 664, 2, 154))
adGenATLASmg = MibIdentifier((1, 3, 6, 1, 4, 1, 664, 2, 154, 1))
adATLASVoicemg = MibIdentifier((1, 3, 6, 1, 4, 1, 664, 2, 154, 1, 10))
adATLASVoiceIfNumber = MibScalar((1, 3, 6, 1, 4, 1, 664, 2, 154, 1, 10, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adATLASVoiceIfNumber.setStatus('mandatory')
adATLASVoiceIfTable = MibTable((1, 3, 6, 1, 4, 1, 664, 2, 154, 1, 10, 2), )
if mibBuilder.loadTexts: adATLASVoiceIfTable.setStatus('mandatory')
adATLASVoiceIfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 664, 2, 154, 1, 10, 2, 1), ).setIndexNames((0, "ADTRAN-ATLAS-VOICE-MIB", "adATLASVoiceIfIndex"))
if mibBuilder.loadTexts: adATLASVoiceIfEntry.setStatus('mandatory')
adATLASVoiceIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 2, 154, 1, 10, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adATLASVoiceIfIndex.setStatus('mandatory')
adATLASVoiceIfSlotNum = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 2, 154, 1, 10, 2, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adATLASVoiceIfSlotNum.setStatus('mandatory')
adATLASVoiceIfPortNum = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 2, 154, 1, 10, 2, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adATLASVoiceIfPortNum.setStatus('mandatory')
adATLASVoiceIfPortStat = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 2, 154, 1, 10, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24))).clone(namedValues=NamedValues(("inactive", 1), ("disabled", 2), ("idle", 3), ("test", 4), ("tipOpen", 5), ("offhook", 6), ("reverseBattery", 7), ("testActive", 8), ("testOffhook", 9), ("testRevBatt", 10), ("testRinging", 11), ("testTipOpen", 12), ("testTipOpenRingGND", 13), ("testDisabled", 14), ("testRingOffhook", 15), ("testLO", 16), ("testLCNormTRPolarity", 17), ("testLCNoBatt", 18), ("testLCRevTRPolarity", 19), ("testRingGND", 20), ("transOnly", 21), ("testELeadOpen", 22), ("testELeadClosed", 23), ("callInProgress", 24)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: adATLASVoiceIfPortStat.setStatus('mandatory')
adATLASVoiceIfTxSignalBits = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 2, 154, 1, 10, 2, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(4, 4)).setFixedLength(4)).setMaxAccess("readonly")
if mibBuilder.loadTexts: adATLASVoiceIfTxSignalBits.setStatus('mandatory')
adATLASVoiceIfRxSignalBits = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 2, 154, 1, 10, 2, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(4, 4)).setFixedLength(4)).setMaxAccess("readonly")
if mibBuilder.loadTexts: adATLASVoiceIfRxSignalBits.setStatus('mandatory')
adATLASVoiceTstTable = MibTable((1, 3, 6, 1, 4, 1, 664, 2, 154, 1, 10, 3), )
if mibBuilder.loadTexts: adATLASVoiceTstTable.setStatus('mandatory')
adATLASVoiceTstEntry = MibTableRow((1, 3, 6, 1, 4, 1, 664, 2, 154, 1, 10, 3, 1), ).setIndexNames((0, "ADTRAN-ATLAS-VOICE-MIB", "adATLASVoiceTstIndex"))
if mibBuilder.loadTexts: adATLASVoiceTstEntry.setStatus('mandatory')
adATLASVoiceTstIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 2, 154, 1, 10, 3, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adATLASVoiceTstIndex.setStatus('mandatory')
adATLASVoiceTst2W = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 2, 154, 1, 10, 3, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11))).clone(namedValues=NamedValues(("off", 1), ("loopOpen", 2), ("loopClosed", 3), ("ringGround", 4), ("active", 5), ("tipOpen", 6), ("reverseBattery", 7), ("disable", 8), ("ringing", 9), ("eLeadOpen", 10), ("eLeadClosed", 11)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: adATLASVoiceTst2W.setStatus('mandatory')
adATLASVoiceTstTxABCD = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 2, 154, 1, 10, 3, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("txOff", 1), ("tx0000", 2), ("tx0101", 3), ("tx1010", 4), ("tx1111", 5)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: adATLASVoiceTstTxABCD.setStatus('mandatory')
adATLASVoiceTst1kHzTone = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 2, 154, 1, 10, 3, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("off", 1), ("near", 2), ("far", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: adATLASVoiceTst1kHzTone.setStatus('mandatory')
adATLASVoiceTstLpBk = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 2, 154, 1, 10, 3, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("off", 1), ("analog", 2), ("digital", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: adATLASVoiceTstLpBk.setStatus('mandatory')
mibBuilder.exportSymbols("ADTRAN-ATLAS-VOICE-MIB", adATLASVoiceIfNumber=adATLASVoiceIfNumber, adATLASVoiceIfPortStat=adATLASVoiceIfPortStat, adATLASVoiceTst2W=adATLASVoiceTst2W, adATLASVoiceIfTxSignalBits=adATLASVoiceIfTxSignalBits, adATLASVoiceIfSlotNum=adATLASVoiceIfSlotNum, adMgmt=adMgmt, adATLASmg=adATLASmg, adATLASVoiceTstEntry=adATLASVoiceTstEntry, adATLASVoiceIfEntry=adATLASVoiceIfEntry, adATLASVoicemg=adATLASVoicemg, adATLASVoiceIfTable=adATLASVoiceIfTable, adATLASVoiceIfPortNum=adATLASVoiceIfPortNum, adATLASVoiceTstLpBk=adATLASVoiceTstLpBk, adGenATLASmg=adGenATLASmg, adATLASVoiceTstIndex=adATLASVoiceTstIndex, adtran=adtran, adATLASVoiceTstTable=adATLASVoiceTstTable, adATLASVoiceTst1kHzTone=adATLASVoiceTst1kHzTone, adATLASVoiceIfIndex=adATLASVoiceIfIndex, adATLASVoiceIfRxSignalBits=adATLASVoiceIfRxSignalBits, adATLASVoiceTstTxABCD=adATLASVoiceTstTxABCD)
