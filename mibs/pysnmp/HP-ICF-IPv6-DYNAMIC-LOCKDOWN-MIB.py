#
# PySNMP MIB module HP-ICF-IPv6-DYNAMIC-LOCKDOWN-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/HP-ICF-IPv6-DYNAMIC-LOCKDOWN-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:21:48 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, SingleValueConstraint, ValueSizeConstraint, ValueRangeConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "SingleValueConstraint", "ValueSizeConstraint", "ValueRangeConstraint", "ConstraintsUnion")
hpSwitch, = mibBuilder.importSymbols("HP-ICF-OID", "hpSwitch")
hpicfSaviObjectsFilteringEntry, = mibBuilder.importSymbols("HPICF-SAVI-MIB", "hpicfSaviObjectsFilteringEntry")
ifIndex, InterfaceIndex = mibBuilder.importSymbols("IF-MIB", "ifIndex", "InterfaceIndex")
InetAddressType, InetAddress = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddressType", "InetAddress")
VlanIndex, = mibBuilder.importSymbols("Q-BRIDGE-MIB", "VlanIndex")
ModuleCompliance, ObjectGroup, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "ObjectGroup", "NotificationGroup")
NotificationType, iso, Integer32, ObjectIdentity, Unsigned32, MibScalar, MibTable, MibTableRow, MibTableColumn, IpAddress, Bits, Gauge32, TimeTicks, ModuleIdentity, Counter32, Counter64, MibIdentifier = mibBuilder.importSymbols("SNMPv2-SMI", "NotificationType", "iso", "Integer32", "ObjectIdentity", "Unsigned32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "IpAddress", "Bits", "Gauge32", "TimeTicks", "ModuleIdentity", "Counter32", "Counter64", "MibIdentifier")
TextualConvention, TruthValue, DisplayString, MacAddress = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "TruthValue", "DisplayString", "MacAddress")
hpicfIpv6Lockdown = ModuleIdentity((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 103))
hpicfIpv6Lockdown.setRevisions(('2017-11-08 00:00', '2013-10-06 00:00',))
if mibBuilder.loadTexts: hpicfIpv6Lockdown.setLastUpdated('201711080000Z')
if mibBuilder.loadTexts: hpicfIpv6Lockdown.setOrganization('HP Networking')
hpicfDIPLDv6SourceBindingNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 103, 0))
hpicfDIPLDv6Objects = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 103, 1))
hpicfIpv6LockConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 103, 2))
hpicfDIPDv6SourceBindingOutOfResources = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 103, 0, 1)).setObjects(("HP-ICF-IPv6-DYNAMIC-LOCKDOWN-MIB", "hpicfDIPLDv6SourceBindingAddrPort"), ("HP-ICF-IPv6-DYNAMIC-LOCKDOWN-MIB", "hpicfDIPLDv6SourceBindingAddrMacAddress"), ("HP-ICF-IPv6-DYNAMIC-LOCKDOWN-MIB", "hpicfDIPLDv6SourceBindingAddrIpAddressType"), ("HP-ICF-IPv6-DYNAMIC-LOCKDOWN-MIB", "hpicfDIPLDv6SourceBindingAddrIpAddress"), ("HP-ICF-IPv6-DYNAMIC-LOCKDOWN-MIB", "hpicfDIPLDv6SourceBindingAddrVlan"))
if mibBuilder.loadTexts: hpicfDIPDv6SourceBindingOutOfResources.setStatus('current')
hpicfDIPLDv6SourceBindingOutOfResourcesObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 103, 0, 2))
hpicfDIPLDv6SourceBindingAddrPort = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 103, 0, 2, 1), InterfaceIndex()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hpicfDIPLDv6SourceBindingAddrPort.setStatus('current')
hpicfDIPLDv6SourceBindingAddrMacAddress = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 103, 0, 2, 2), MacAddress()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hpicfDIPLDv6SourceBindingAddrMacAddress.setStatus('current')
hpicfDIPLDv6SourceBindingAddrIpAddressType = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 103, 0, 2, 3), InetAddressType()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hpicfDIPLDv6SourceBindingAddrIpAddressType.setStatus('current')
hpicfDIPLDv6SourceBindingAddrIpAddress = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 103, 0, 2, 4), InetAddress()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hpicfDIPLDv6SourceBindingAddrIpAddress.setStatus('current')
hpicfDIPLDv6SourceBindingAddrVlan = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 103, 0, 2, 5), VlanIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfDIPLDv6SourceBindingAddrVlan.setStatus('current')
hpicfDIPLDv6SourceBindingVoilations = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 103, 0, 3)).setObjects(("HP-ICF-IPv6-DYNAMIC-LOCKDOWN-MIB", "hpicfDIPLDv6SourceBindingVoilationsCount"), ("HP-ICF-IPv6-DYNAMIC-LOCKDOWN-MIB", "hpicfDIPLDv6SourceBindingVoilationsPort"), ("HP-ICF-IPv6-DYNAMIC-LOCKDOWN-MIB", "hpicfDIPLDv6SourceBindingVoilationsSrcIpType"), ("HP-ICF-IPv6-DYNAMIC-LOCKDOWN-MIB", "hpicfDIPLDv6SourceBindingVoilationsSrcIpAddress"), ("HP-ICF-IPv6-DYNAMIC-LOCKDOWN-MIB", "hpicfDIPLDv6SourceBindingVoilationsDstIpType"), ("HP-ICF-IPv6-DYNAMIC-LOCKDOWN-MIB", "hpicfDIPLDv6SourceBindingVoilationsDstIpAddress"), ("HP-ICF-IPv6-DYNAMIC-LOCKDOWN-MIB", "hpicfDIPLDv6SourceBindingVoilationsMacAddress"), ("HP-ICF-IPv6-DYNAMIC-LOCKDOWN-MIB", "hpicfDIPLDv6SourceBindingVoilationsPktCount"))
if mibBuilder.loadTexts: hpicfDIPLDv6SourceBindingVoilations.setStatus('current')
hpicfDIPLDv6SourceBindingVoilationsObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 103, 0, 4))
hpicfDIPLDv6SourceBindingVoilationsCount = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 103, 0, 4, 1), Counter32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hpicfDIPLDv6SourceBindingVoilationsCount.setStatus('current')
hpicfDIPLDv6SourceBindingVoilationsPort = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 103, 0, 4, 2), InterfaceIndex()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hpicfDIPLDv6SourceBindingVoilationsPort.setStatus('current')
hpicfDIPLDv6SourceBindingVoilationsSrcIpType = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 103, 0, 4, 3), InetAddressType()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hpicfDIPLDv6SourceBindingVoilationsSrcIpType.setStatus('current')
hpicfDIPLDv6SourceBindingVoilationsSrcIpAddress = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 103, 0, 4, 4), InetAddress()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hpicfDIPLDv6SourceBindingVoilationsSrcIpAddress.setStatus('current')
hpicfDIPLDv6SourceBindingVoilationsDstIpType = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 103, 0, 4, 5), InetAddressType()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hpicfDIPLDv6SourceBindingVoilationsDstIpType.setStatus('current')
hpicfDIPLDv6SourceBindingVoilationsDstIpAddress = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 103, 0, 4, 6), InetAddress()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hpicfDIPLDv6SourceBindingVoilationsDstIpAddress.setStatus('current')
hpicfDIPLDv6SourceBindingVoilationsMacAddress = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 103, 0, 4, 7), MacAddress()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hpicfDIPLDv6SourceBindingVoilationsMacAddress.setStatus('current')
hpicfDIPLDv6SourceBindingVoilationsPktCount = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 103, 0, 4, 8), Counter32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hpicfDIPLDv6SourceBindingVoilationsPktCount.setStatus('current')
hpicfDIPLDv6Config = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 103, 1, 1))
hpicfDIPLDv6LockEnable = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 103, 1, 1, 1), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpicfDIPLDv6LockEnable.setStatus('current')
hpicfDIPLDv6PortTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 103, 1, 1, 2), )
if mibBuilder.loadTexts: hpicfDIPLDv6PortTable.setStatus('current')
hpicfDIPLDv6PortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 103, 1, 1, 2, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: hpicfDIPLDv6PortEntry.setStatus('current')
hpicfDIPLDv6PortEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 103, 1, 1, 2, 1, 1), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpicfDIPLDv6PortEnable.setStatus('current')
hpicfDIPLDv6PortOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 103, 1, 1, 2, 1, 2), Bits().clone(namedValues=NamedValues(("active", 0), ("noDsnoopv6", 1), ("trustedPort", 2), ("noSnoopingVlan", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfDIPLDv6PortOperStatus.setStatus('current')
hpicfDIPLDv6SourceBindingOutOfResourcesTrapCtrl = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 103, 1, 1, 3), TruthValue().clone('true')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpicfDIPLDv6SourceBindingOutOfResourcesTrapCtrl.setStatus('current')
hpicfDIPLDv6SourceBindingViolationsTrapCtrl = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 103, 1, 1, 4), TruthValue().clone('true')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpicfDIPLDv6SourceBindingViolationsTrapCtrl.setStatus('current')
hpicfDIPLDv6Status = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 103, 1, 2))
hpicfDIPLDv6AddrTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 103, 1, 2, 1), )
if mibBuilder.loadTexts: hpicfDIPLDv6AddrTable.setStatus('current')
hpicfDIPLDv6AddrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 103, 1, 2, 1, 1), )
hpicfSaviObjectsFilteringEntry.registerAugmentions(("HP-ICF-IPv6-DYNAMIC-LOCKDOWN-MIB", "hpicfDIPLDv6AddrEntry"))
hpicfDIPLDv6AddrEntry.setIndexNames(*hpicfSaviObjectsFilteringEntry.getIndexNames())
if mibBuilder.loadTexts: hpicfDIPLDv6AddrEntry.setStatus('current')
hpicfDIPLDv6AddrVlan = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 103, 1, 2, 1, 1, 1), VlanIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfDIPLDv6AddrVlan.setStatus('current')
hpicfDIPLDv6ResourceAvailable = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 103, 1, 2, 1, 1, 2), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfDIPLDv6ResourceAvailable.setStatus('current')
hpicfIpv6LockGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 103, 2, 1))
hpicfIpv6LockBaseGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 103, 2, 1, 1)).setObjects(("HP-ICF-IPv6-DYNAMIC-LOCKDOWN-MIB", "hpicfDIPLDv6LockEnable"), ("HP-ICF-IPv6-DYNAMIC-LOCKDOWN-MIB", "hpicfDIPLDv6PortEnable"), ("HP-ICF-IPv6-DYNAMIC-LOCKDOWN-MIB", "hpicfDIPLDv6PortOperStatus"), ("HP-ICF-IPv6-DYNAMIC-LOCKDOWN-MIB", "hpicfDIPLDv6AddrVlan"), ("HP-ICF-IPv6-DYNAMIC-LOCKDOWN-MIB", "hpicfDIPLDv6ResourceAvailable"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfIpv6LockBaseGroup = hpicfIpv6LockBaseGroup.setStatus('current')
hpicfSourceBindingTrapObjectsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 103, 2, 1, 2)).setObjects(("HP-ICF-IPv6-DYNAMIC-LOCKDOWN-MIB", "hpicfDIPLDv6SourceBindingAddrPort"), ("HP-ICF-IPv6-DYNAMIC-LOCKDOWN-MIB", "hpicfDIPLDv6SourceBindingAddrMacAddress"), ("HP-ICF-IPv6-DYNAMIC-LOCKDOWN-MIB", "hpicfDIPLDv6SourceBindingAddrIpAddressType"), ("HP-ICF-IPv6-DYNAMIC-LOCKDOWN-MIB", "hpicfDIPLDv6SourceBindingAddrIpAddress"), ("HP-ICF-IPv6-DYNAMIC-LOCKDOWN-MIB", "hpicfDIPLDv6SourceBindingAddrVlan"), ("HP-ICF-IPv6-DYNAMIC-LOCKDOWN-MIB", "hpicfDIPLDv6SourceBindingVoilationsCount"), ("HP-ICF-IPv6-DYNAMIC-LOCKDOWN-MIB", "hpicfDIPLDv6SourceBindingVoilationsPort"), ("HP-ICF-IPv6-DYNAMIC-LOCKDOWN-MIB", "hpicfDIPLDv6SourceBindingVoilationsSrcIpType"), ("HP-ICF-IPv6-DYNAMIC-LOCKDOWN-MIB", "hpicfDIPLDv6SourceBindingVoilationsSrcIpAddress"), ("HP-ICF-IPv6-DYNAMIC-LOCKDOWN-MIB", "hpicfDIPLDv6SourceBindingVoilationsDstIpType"), ("HP-ICF-IPv6-DYNAMIC-LOCKDOWN-MIB", "hpicfDIPLDv6SourceBindingVoilationsDstIpAddress"), ("HP-ICF-IPv6-DYNAMIC-LOCKDOWN-MIB", "hpicfDIPLDv6SourceBindingVoilationsMacAddress"), ("HP-ICF-IPv6-DYNAMIC-LOCKDOWN-MIB", "hpicfDIPLDv6SourceBindingVoilationsPktCount"), ("HP-ICF-IPv6-DYNAMIC-LOCKDOWN-MIB", "hpicfDIPLDv6SourceBindingOutOfResourcesTrapCtrl"), ("HP-ICF-IPv6-DYNAMIC-LOCKDOWN-MIB", "hpicfDIPLDv6SourceBindingViolationsTrapCtrl"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfSourceBindingTrapObjectsGroup = hpicfSourceBindingTrapObjectsGroup.setStatus('current')
hpicfSourceBindingTrapsGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 103, 2, 1, 3)).setObjects(("HP-ICF-IPv6-DYNAMIC-LOCKDOWN-MIB", "hpicfDIPDv6SourceBindingOutOfResources"), ("HP-ICF-IPv6-DYNAMIC-LOCKDOWN-MIB", "hpicfDIPLDv6SourceBindingVoilations"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfSourceBindingTrapsGroup = hpicfSourceBindingTrapsGroup.setStatus('current')
hpicfIpv6LockCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 103, 2, 2))
hpicfDIPLDv6Compliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 103, 2, 2, 1)).setObjects(("HP-ICF-IPv6-DYNAMIC-LOCKDOWN-MIB", "hpicfIpv6LockBaseGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfDIPLDv6Compliance = hpicfDIPLDv6Compliance.setStatus('current')
hpicfIpv6SourceBindingTrapCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 103, 2, 2, 2)).setObjects(("HP-ICF-IPv6-DYNAMIC-LOCKDOWN-MIB", "hpicfSourceBindingTrapObjectsGroup"), ("HP-ICF-IPv6-DYNAMIC-LOCKDOWN-MIB", "hpicfSourceBindingTrapsGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfIpv6SourceBindingTrapCompliance = hpicfIpv6SourceBindingTrapCompliance.setStatus('current')
mibBuilder.exportSymbols("HP-ICF-IPv6-DYNAMIC-LOCKDOWN-MIB", PYSNMP_MODULE_ID=hpicfIpv6Lockdown, hpicfDIPLDv6Objects=hpicfDIPLDv6Objects, hpicfIpv6Lockdown=hpicfIpv6Lockdown, hpicfDIPLDv6SourceBindingAddrPort=hpicfDIPLDv6SourceBindingAddrPort, hpicfDIPLDv6SourceBindingVoilationsPktCount=hpicfDIPLDv6SourceBindingVoilationsPktCount, hpicfDIPLDv6AddrTable=hpicfDIPLDv6AddrTable, hpicfSourceBindingTrapsGroup=hpicfSourceBindingTrapsGroup, hpicfDIPLDv6SourceBindingVoilations=hpicfDIPLDv6SourceBindingVoilations, hpicfDIPLDv6SourceBindingVoilationsObjects=hpicfDIPLDv6SourceBindingVoilationsObjects, hpicfIpv6LockGroups=hpicfIpv6LockGroups, hpicfDIPLDv6SourceBindingOutOfResourcesTrapCtrl=hpicfDIPLDv6SourceBindingOutOfResourcesTrapCtrl, hpicfDIPLDv6SourceBindingNotifications=hpicfDIPLDv6SourceBindingNotifications, hpicfDIPLDv6SourceBindingVoilationsPort=hpicfDIPLDv6SourceBindingVoilationsPort, hpicfDIPLDv6SourceBindingAddrIpAddress=hpicfDIPLDv6SourceBindingAddrIpAddress, hpicfIpv6LockBaseGroup=hpicfIpv6LockBaseGroup, hpicfDIPLDv6SourceBindingVoilationsSrcIpType=hpicfDIPLDv6SourceBindingVoilationsSrcIpType, hpicfIpv6LockConformance=hpicfIpv6LockConformance, hpicfDIPLDv6ResourceAvailable=hpicfDIPLDv6ResourceAvailable, hpicfDIPLDv6SourceBindingAddrVlan=hpicfDIPLDv6SourceBindingAddrVlan, hpicfDIPLDv6PortOperStatus=hpicfDIPLDv6PortOperStatus, hpicfDIPLDv6Status=hpicfDIPLDv6Status, hpicfDIPLDv6SourceBindingVoilationsSrcIpAddress=hpicfDIPLDv6SourceBindingVoilationsSrcIpAddress, hpicfDIPLDv6PortEnable=hpicfDIPLDv6PortEnable, hpicfDIPLDv6SourceBindingVoilationsMacAddress=hpicfDIPLDv6SourceBindingVoilationsMacAddress, hpicfDIPLDv6SourceBindingAddrIpAddressType=hpicfDIPLDv6SourceBindingAddrIpAddressType, hpicfDIPLDv6AddrVlan=hpicfDIPLDv6AddrVlan, hpicfDIPLDv6LockEnable=hpicfDIPLDv6LockEnable, hpicfDIPDv6SourceBindingOutOfResources=hpicfDIPDv6SourceBindingOutOfResources, hpicfDIPLDv6SourceBindingVoilationsCount=hpicfDIPLDv6SourceBindingVoilationsCount, hpicfDIPLDv6PortEntry=hpicfDIPLDv6PortEntry, hpicfDIPLDv6PortTable=hpicfDIPLDv6PortTable, hpicfDIPLDv6SourceBindingVoilationsDstIpType=hpicfDIPLDv6SourceBindingVoilationsDstIpType, hpicfDIPLDv6SourceBindingVoilationsDstIpAddress=hpicfDIPLDv6SourceBindingVoilationsDstIpAddress, hpicfDIPLDv6AddrEntry=hpicfDIPLDv6AddrEntry, hpicfDIPLDv6Config=hpicfDIPLDv6Config, hpicfDIPLDv6Compliance=hpicfDIPLDv6Compliance, hpicfDIPLDv6SourceBindingViolationsTrapCtrl=hpicfDIPLDv6SourceBindingViolationsTrapCtrl, hpicfSourceBindingTrapObjectsGroup=hpicfSourceBindingTrapObjectsGroup, hpicfIpv6LockCompliances=hpicfIpv6LockCompliances, hpicfDIPLDv6SourceBindingAddrMacAddress=hpicfDIPLDv6SourceBindingAddrMacAddress, hpicfIpv6SourceBindingTrapCompliance=hpicfIpv6SourceBindingTrapCompliance, hpicfDIPLDv6SourceBindingOutOfResourcesObjects=hpicfDIPLDv6SourceBindingOutOfResourcesObjects)
