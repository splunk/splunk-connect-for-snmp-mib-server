#
# PySNMP MIB module HUAWEI-ATM-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/HUAWEI-ATM-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:30:56 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, SingleValueConstraint, ValueRangeConstraint, ConstraintsUnion, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "SingleValueConstraint", "ValueRangeConstraint", "ConstraintsUnion", "ConstraintsIntersection")
AtmVcIdentifier, AtmVpIdentifier = mibBuilder.importSymbols("ATM-TC-MIB", "AtmVcIdentifier", "AtmVpIdentifier")
hwDatacomm, = mibBuilder.importSymbols("HUAWEI-MIB", "hwDatacomm")
InterfaceIndex, = mibBuilder.importSymbols("IF-MIB", "InterfaceIndex")
ModuleCompliance, ObjectGroup, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "ObjectGroup", "NotificationGroup")
Counter64, Bits, Unsigned32, TimeTicks, iso, IpAddress, Counter32, Gauge32, MibIdentifier, MibScalar, MibTable, MibTableRow, MibTableColumn, ModuleIdentity, Integer32, ObjectIdentity, NotificationType = mibBuilder.importSymbols("SNMPv2-SMI", "Counter64", "Bits", "Unsigned32", "TimeTicks", "iso", "IpAddress", "Counter32", "Gauge32", "MibIdentifier", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ModuleIdentity", "Integer32", "ObjectIdentity", "NotificationType")
TruthValue, TextualConvention, RowStatus, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TruthValue", "TextualConvention", "RowStatus", "DisplayString")
hwAtmMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 2011, 5, 25, 156))
if mibBuilder.loadTexts: hwAtmMIB.setLastUpdated('200710172230Z')
if mibBuilder.loadTexts: hwAtmMIB.setOrganization('Huawei Technologies co.,Ltd.')
hwAtmObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 156, 1))
hwAtmTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 156, 1, 1), )
if mibBuilder.loadTexts: hwAtmTable.setStatus('current')
hwAtmEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 156, 1, 1, 1), ).setIndexNames((0, "HUAWEI-ATM-MIB", "hwAtmIfIndex"))
if mibBuilder.loadTexts: hwAtmEntry.setStatus('current')
hwAtmIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 156, 1, 1, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: hwAtmIfIndex.setStatus('current')
hwAtmIfType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 156, 1, 1, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("oc3OrStm1", 1), ("oc12OrStm4", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwAtmIfType.setStatus('current')
hwAtmClock = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 156, 1, 1, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("master", 1), ("slave", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwAtmClock.setStatus('current')
hwAtmFrameFormat = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 156, 1, 1, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("sdh", 1), ("sonet", 2))).clone('sdh')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwAtmFrameFormat.setStatus('current')
hwAtmScramble = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 156, 1, 1, 1, 14), TruthValue().clone('true')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwAtmScramble.setStatus('current')
hwAtmLoopback = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 156, 1, 1, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 255))).clone(namedValues=NamedValues(("local", 1), ("remote", 2), ("payload", 3), ("none", 255))).clone('none')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwAtmLoopback.setStatus('current')
hwAtmMapPvpTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 156, 1, 2), )
if mibBuilder.loadTexts: hwAtmMapPvpTable.setStatus('current')
hwAtmMapPvpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 156, 1, 2, 1), ).setIndexNames((0, "HUAWEI-ATM-MIB", "hwAtmMapPvpIfIndex"), (0, "HUAWEI-ATM-MIB", "hwAtmMapPvpVplVpi"))
if mibBuilder.loadTexts: hwAtmMapPvpEntry.setStatus('current')
hwAtmMapPvpIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 156, 1, 2, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: hwAtmMapPvpIfIndex.setStatus('current')
hwAtmMapPvpVplVpi = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 156, 1, 2, 1, 2), AtmVpIdentifier())
if mibBuilder.loadTexts: hwAtmMapPvpVplVpi.setStatus('current')
hwAtmMapPvpRemoteVplVpi = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 156, 1, 2, 1, 11), AtmVpIdentifier()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwAtmMapPvpRemoteVplVpi.setStatus('current')
hwAtmMapPvpRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 156, 1, 2, 1, 51), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwAtmMapPvpRowStatus.setStatus('current')
hwAtmMapPvcTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 156, 1, 3), )
if mibBuilder.loadTexts: hwAtmMapPvcTable.setStatus('current')
hwAtmMapPvcEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 156, 1, 3, 1), ).setIndexNames((0, "HUAWEI-ATM-MIB", "hwAtmVclIfIndex"), (0, "HUAWEI-ATM-MIB", "hwAtmVclVpi"), (0, "HUAWEI-ATM-MIB", "hwAtmVclVci"))
if mibBuilder.loadTexts: hwAtmMapPvcEntry.setStatus('current')
hwAtmMapPvcRemoteVclVci = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 156, 1, 3, 1, 11), AtmVcIdentifier()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwAtmMapPvcRemoteVclVci.setStatus('current')
hwAtmMapPvcRemoteVclVpi = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 156, 1, 3, 1, 12), AtmVpIdentifier()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwAtmMapPvcRemoteVclVpi.setStatus('current')
hwAtmMapPvcRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 156, 1, 3, 1, 51), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwAtmMapPvcRowStatus.setStatus('current')
hwAtmServiceTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 156, 1, 4), )
if mibBuilder.loadTexts: hwAtmServiceTable.setStatus('current')
hwAtmServiceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 156, 1, 4, 1), ).setIndexNames((0, "HUAWEI-ATM-MIB", "hwAtmServiceName"))
if mibBuilder.loadTexts: hwAtmServiceEntry.setStatus('current')
hwAtmServiceName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 156, 1, 4, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 31)))
if mibBuilder.loadTexts: hwAtmServiceName.setStatus('current')
hwAtmServiceType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 156, 1, 4, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("cbr", 1), ("vbrNrt", 2), ("vbrRt", 3), ("ubr", 4), ("ubrPlus", 5))).clone('ubr')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwAtmServiceType.setStatus('current')
hwAtmServiceOutputPcr = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 156, 1, 4, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(64, 149760), )).clone(149760)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwAtmServiceOutputPcr.setStatus('current')
hwAtmServiceOutputScr = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 156, 1, 4, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(64, 149760), )).clone(149760)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwAtmServiceOutputScr.setStatus('current')
hwAtmServiceOutputMbs = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 156, 1, 4, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 512), ))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwAtmServiceOutputMbs.setStatus('current')
hwAtmServiceCbrCdvtValue = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 156, 1, 4, 1, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 10000)).clone(500)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwAtmServiceCbrCdvtValue.setStatus('current')
hwAtmServiceOutputMcr = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 156, 1, 4, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(64, 149760), )).clone(149760)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwAtmServiceOutputMcr.setStatus('current')
hwAtmServiceRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 156, 1, 4, 1, 51), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwAtmServiceRowStatus.setStatus('current')
hwAtmPvcServiceTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 156, 1, 5), )
if mibBuilder.loadTexts: hwAtmPvcServiceTable.setStatus('current')
hwAtmPvcServiceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 156, 1, 5, 1), ).setIndexNames((0, "HUAWEI-ATM-MIB", "hwAtmVclIfIndex"), (0, "HUAWEI-ATM-MIB", "hwAtmVclVpi"), (0, "HUAWEI-ATM-MIB", "hwAtmVclVci"))
if mibBuilder.loadTexts: hwAtmPvcServiceEntry.setStatus('current')
hwAtmPvcServiceName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 156, 1, 5, 1, 11), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 31))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwAtmPvcServiceName.setStatus('current')
hwAtmPvcTransmittalDirection = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 156, 1, 5, 1, 21), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("input", 1), ("output", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwAtmPvcTransmittalDirection.setStatus('current')
hwAtmPvcServiceRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 156, 1, 5, 1, 51), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwAtmPvcServiceRowStatus.setStatus('current')
hwAtmIfConfTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 156, 1, 11), )
if mibBuilder.loadTexts: hwAtmIfConfTable.setStatus('current')
hwAtmIfConfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 156, 1, 11, 1), ).setIndexNames((0, "HUAWEI-ATM-MIB", "hwAtmIfConfIfIndex"))
if mibBuilder.loadTexts: hwAtmIfConfEntry.setStatus('current')
hwAtmIfConfIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 156, 1, 11, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: hwAtmIfConfIfIndex.setStatus('current')
hwAtmIfConfMaxVccs = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 156, 1, 11, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2048))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwAtmIfConfMaxVccs.setStatus('current')
hwAtmIfConfOperVccs = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 156, 1, 11, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwAtmIfConfOperVccs.setStatus('current')
hwAtmIfConfIntfType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 156, 1, 11, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("uni", 1), ("nni", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwAtmIfConfIntfType.setStatus('current')
hwAtmVplTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 156, 1, 12), )
if mibBuilder.loadTexts: hwAtmVplTable.setStatus('current')
hwAtmVplEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 156, 1, 12, 1), ).setIndexNames((0, "HUAWEI-ATM-MIB", "hwAtmVplIfIndex"), (0, "HUAWEI-ATM-MIB", "hwAtmVplVpi"))
if mibBuilder.loadTexts: hwAtmVplEntry.setStatus('current')
hwAtmVplIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 156, 1, 12, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: hwAtmVplIfIndex.setStatus('current')
hwAtmVplVpi = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 156, 1, 12, 1, 2), AtmVpIdentifier())
if mibBuilder.loadTexts: hwAtmVplVpi.setStatus('current')
hwAtmVplRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 156, 1, 12, 1, 51), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwAtmVplRowStatus.setStatus('current')
hwAtmVclTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 156, 1, 13), )
if mibBuilder.loadTexts: hwAtmVclTable.setStatus('current')
hwAtmVclEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 156, 1, 13, 1), ).setIndexNames((0, "HUAWEI-ATM-MIB", "hwAtmVclIfIndex"), (0, "HUAWEI-ATM-MIB", "hwAtmVclVpi"), (0, "HUAWEI-ATM-MIB", "hwAtmVclVci"))
if mibBuilder.loadTexts: hwAtmVclEntry.setStatus('current')
hwAtmVclIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 156, 1, 13, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: hwAtmVclIfIndex.setStatus('current')
hwAtmVclVpi = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 156, 1, 13, 1, 2), AtmVpIdentifier())
if mibBuilder.loadTexts: hwAtmVclVpi.setStatus('current')
hwAtmVclVci = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 156, 1, 13, 1, 3), AtmVcIdentifier())
if mibBuilder.loadTexts: hwAtmVclVci.setStatus('current')
hwAtmVclName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 156, 1, 13, 1, 11), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwAtmVclName.setStatus('current')
hwAtmVccAal5EncapsType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 156, 1, 13, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("aal5Snap", 1), ("aal5Mux", 2), ("aal5MuxNonstandard", 3), ("aal5Nlpid", 4))).clone()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwAtmVccAal5EncapsType.setStatus('current')
hwAtmVclRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 156, 1, 13, 1, 51), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwAtmVclRowStatus.setStatus('current')
hwAtmPvcIpoaTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 156, 1, 14), )
if mibBuilder.loadTexts: hwAtmPvcIpoaTable.setStatus('current')
hwAtmPvcIpoaEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 156, 1, 14, 1), ).setIndexNames((0, "HUAWEI-ATM-MIB", "hwAtmVclIfIndex"), (0, "HUAWEI-ATM-MIB", "hwAtmVclVpi"), (0, "HUAWEI-ATM-MIB", "hwAtmVclVci"), (0, "HUAWEI-ATM-MIB", "hwAtmPvcIpoaType"), (0, "HUAWEI-ATM-MIB", "hwAtmPvcIpoaIpAddress"))
if mibBuilder.loadTexts: hwAtmPvcIpoaEntry.setStatus('current')
hwAtmPvcIpoaType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 156, 1, 14, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("ip", 1), ("default", 2), ("inarp", 3))))
if mibBuilder.loadTexts: hwAtmPvcIpoaType.setStatus('current')
hwAtmPvcIpoaIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 156, 1, 14, 1, 4), IpAddress())
if mibBuilder.loadTexts: hwAtmPvcIpoaIpAddress.setStatus('current')
hwAtmPvcIpoaIpMask = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 156, 1, 14, 1, 11), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwAtmPvcIpoaIpMask.setStatus('current')
hwAtmPvcIpoaInarpInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 156, 1, 14, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 600), )).clone(1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwAtmPvcIpoaInarpInterval.setStatus('current')
hwAtmPvcIpoaBroadcast = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 156, 1, 14, 1, 13), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwAtmPvcIpoaBroadcast.setStatus('current')
hwAtmPvcIpoaRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 156, 1, 14, 1, 51), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwAtmPvcIpoaRowStatus.setStatus('current')
hwAtmPvcBridgeTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 156, 1, 15), )
if mibBuilder.loadTexts: hwAtmPvcBridgeTable.setStatus('current')
hwAtmPvcBridgeEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 156, 1, 15, 1), ).setIndexNames((0, "HUAWEI-ATM-MIB", "hwAtmVclIfIndex"), (0, "HUAWEI-ATM-MIB", "hwAtmVclVpi"), (0, "HUAWEI-ATM-MIB", "hwAtmVclVci"))
if mibBuilder.loadTexts: hwAtmPvcBridgeEntry.setStatus('current')
hwAtmPvcBridgeDstIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 156, 1, 15, 1, 11), InterfaceIndex()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwAtmPvcBridgeDstIfIndex.setStatus('current')
hwAtmPvcBridgeRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 156, 1, 15, 1, 51), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwAtmPvcBridgeRowStatus.setStatus('current')
hwAtmPvcOamLoopbackTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 156, 1, 17), )
if mibBuilder.loadTexts: hwAtmPvcOamLoopbackTable.setStatus('current')
hwAtmPvcOAMLoopbackEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 156, 1, 17, 1), ).setIndexNames((0, "HUAWEI-ATM-MIB", "hwAtmVclIfIndex"), (0, "HUAWEI-ATM-MIB", "hwAtmVclVpi"), (0, "HUAWEI-ATM-MIB", "hwAtmVclVci"))
if mibBuilder.loadTexts: hwAtmPvcOAMLoopbackEntry.setStatus('current')
hwAtmPvcOAMLoopbackFrequency = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 156, 1, 17, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 600))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwAtmPvcOAMLoopbackFrequency.setStatus('current')
hwAtmPvcOAMLoopbackUpCount = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 156, 1, 17, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 600)).clone(3)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwAtmPvcOAMLoopbackUpCount.setStatus('current')
hwAtmPvcOAMLoopbackDownCount = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 156, 1, 17, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 600)).clone(5)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwAtmPvcOAMLoopbackDownCount.setStatus('current')
hwAtmPvcOAMLoopbackRetryFrequency = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 156, 1, 17, 1, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1000))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwAtmPvcOAMLoopbackRetryFrequency.setStatus('current')
hwAtmPvcOAMLoopbackRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 156, 1, 17, 1, 51), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwAtmPvcOAMLoopbackRowStatus.setStatus('current')
hwAtmPvpLimitTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 156, 1, 18), )
if mibBuilder.loadTexts: hwAtmPvpLimitTable.setStatus('current')
hwAtmPvpLimitEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 156, 1, 18, 1), ).setIndexNames((0, "HUAWEI-ATM-MIB", "hwAtmPvpLimitIfIndex"), (0, "HUAWEI-ATM-MIB", "hwAtmPvpLimitVpi"))
if mibBuilder.loadTexts: hwAtmPvpLimitEntry.setStatus('current')
hwAtmPvpLimitIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 156, 1, 18, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: hwAtmPvpLimitIfIndex.setStatus('current')
hwAtmPvpLimitVpi = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 156, 1, 18, 1, 2), AtmVpIdentifier())
if mibBuilder.loadTexts: hwAtmPvpLimitVpi.setStatus('current')
hwAtmPvpLimitPeakRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 156, 1, 18, 1, 11), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwAtmPvpLimitPeakRate.setStatus('current')
hwAtmPvpLimitRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 156, 1, 18, 1, 51), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwAtmPvpLimitRowStatus.setStatus('current')
hwAtmConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 156, 11))
hwAtmCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 156, 11, 1))
hwAtmCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 2011, 5, 25, 156, 11, 1, 1)).setObjects(("HUAWEI-ATM-MIB", "hwAtmObjectGroup"), ("HUAWEI-ATM-MIB", "hwAtmMapPvpObjectGroup"), ("HUAWEI-ATM-MIB", "hwAtmMapPvcObjectGroup"), ("HUAWEI-ATM-MIB", "hwAtmPvcIpoaObjectGroup"), ("HUAWEI-ATM-MIB", "hwAtmPvcBridgeObjectGroup"), ("HUAWEI-ATM-MIB", "hwAtmPvcServiceObjectGroup"), ("HUAWEI-ATM-MIB", "hwAtmPvcOAMLoopbackObjectGroup"), ("HUAWEI-ATM-MIB", "hwAtmPvpLimitObjectGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwAtmCompliance = hwAtmCompliance.setStatus('current')
hwAtmGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 156, 11, 2))
hwAtmObjectGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 156, 11, 2, 1)).setObjects(("HUAWEI-ATM-MIB", "hwAtmIfType"), ("HUAWEI-ATM-MIB", "hwAtmClock"), ("HUAWEI-ATM-MIB", "hwAtmFrameFormat"), ("HUAWEI-ATM-MIB", "hwAtmScramble"), ("HUAWEI-ATM-MIB", "hwAtmLoopback"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwAtmObjectGroup = hwAtmObjectGroup.setStatus('current')
hwAtmIfConf = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 156, 11, 2, 2)).setObjects(("HUAWEI-ATM-MIB", "hwAtmIfConfMaxVccs"), ("HUAWEI-ATM-MIB", "hwAtmIfConfOperVccs"), ("HUAWEI-ATM-MIB", "hwAtmIfConfIntfType"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwAtmIfConf = hwAtmIfConf.setStatus('current')
hwAtmVplObjectGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 156, 11, 2, 3)).setObjects(("HUAWEI-ATM-MIB", "hwAtmPvcBridgeDstIfIndex"), ("HUAWEI-ATM-MIB", "hwAtmPvcBridgeRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwAtmVplObjectGroup = hwAtmVplObjectGroup.setStatus('current')
hwAtmVclObjectGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 156, 11, 2, 4)).setObjects(("HUAWEI-ATM-MIB", "hwAtmVclName"), ("HUAWEI-ATM-MIB", "hwAtmVccAal5EncapsType"), ("HUAWEI-ATM-MIB", "hwAtmVclRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwAtmVclObjectGroup = hwAtmVclObjectGroup.setStatus('current')
hwAtmMapPvpObjectGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 156, 11, 2, 5)).setObjects(("HUAWEI-ATM-MIB", "hwAtmMapPvpRemoteVplVpi"), ("HUAWEI-ATM-MIB", "hwAtmMapPvpRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwAtmMapPvpObjectGroup = hwAtmMapPvpObjectGroup.setStatus('current')
hwAtmMapPvcObjectGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 156, 11, 2, 6)).setObjects(("HUAWEI-ATM-MIB", "hwAtmMapPvcRemoteVclVpi"), ("HUAWEI-ATM-MIB", "hwAtmMapPvcRemoteVclVci"), ("HUAWEI-ATM-MIB", "hwAtmMapPvcRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwAtmMapPvcObjectGroup = hwAtmMapPvcObjectGroup.setStatus('current')
hwAtmServiceObjectGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 156, 11, 2, 7)).setObjects(("HUAWEI-ATM-MIB", "hwAtmServiceType"), ("HUAWEI-ATM-MIB", "hwAtmServiceOutputPcr"), ("HUAWEI-ATM-MIB", "hwAtmServiceOutputScr"), ("HUAWEI-ATM-MIB", "hwAtmServiceOutputMbs"), ("HUAWEI-ATM-MIB", "hwAtmServiceCbrCdvtValue"), ("HUAWEI-ATM-MIB", "hwAtmServiceOutputMcr"), ("HUAWEI-ATM-MIB", "hwAtmServiceRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwAtmServiceObjectGroup = hwAtmServiceObjectGroup.setStatus('current')
hwAtmPvcServiceObjectGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 156, 11, 2, 8)).setObjects(("HUAWEI-ATM-MIB", "hwAtmPvcServiceName"), ("HUAWEI-ATM-MIB", "hwAtmPvcTransmittalDirection"), ("HUAWEI-ATM-MIB", "hwAtmPvcServiceRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwAtmPvcServiceObjectGroup = hwAtmPvcServiceObjectGroup.setStatus('current')
hwAtmPvcIpoaObjectGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 156, 11, 2, 9)).setObjects(("HUAWEI-ATM-MIB", "hwAtmPvcIpoaIpMask"), ("HUAWEI-ATM-MIB", "hwAtmPvcIpoaInarpInterval"), ("HUAWEI-ATM-MIB", "hwAtmPvcIpoaBroadcast"), ("HUAWEI-ATM-MIB", "hwAtmPvcIpoaRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwAtmPvcIpoaObjectGroup = hwAtmPvcIpoaObjectGroup.setStatus('current')
hwAtmPvcBridgeObjectGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 156, 11, 2, 10)).setObjects(("HUAWEI-ATM-MIB", "hwAtmVplRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwAtmPvcBridgeObjectGroup = hwAtmPvcBridgeObjectGroup.setStatus('current')
hwAtmPvcOAMLoopbackObjectGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 156, 11, 2, 11)).setObjects(("HUAWEI-ATM-MIB", "hwAtmPvcOAMLoopbackFrequency"), ("HUAWEI-ATM-MIB", "hwAtmPvcOAMLoopbackUpCount"), ("HUAWEI-ATM-MIB", "hwAtmPvcOAMLoopbackDownCount"), ("HUAWEI-ATM-MIB", "hwAtmPvcOAMLoopbackRetryFrequency"), ("HUAWEI-ATM-MIB", "hwAtmPvcOAMLoopbackRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwAtmPvcOAMLoopbackObjectGroup = hwAtmPvcOAMLoopbackObjectGroup.setStatus('current')
hwAtmPvpLimitObjectGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 156, 11, 2, 12)).setObjects(("HUAWEI-ATM-MIB", "hwAtmPvpLimitPeakRate"), ("HUAWEI-ATM-MIB", "hwAtmPvpLimitRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwAtmPvpLimitObjectGroup = hwAtmPvpLimitObjectGroup.setStatus('current')
mibBuilder.exportSymbols("HUAWEI-ATM-MIB", hwAtmPvcIpoaTable=hwAtmPvcIpoaTable, hwAtmMapPvcEntry=hwAtmMapPvcEntry, hwAtmPvcBridgeEntry=hwAtmPvcBridgeEntry, hwAtmServiceOutputMcr=hwAtmServiceOutputMcr, hwAtmPvcIpoaIpAddress=hwAtmPvcIpoaIpAddress, hwAtmMapPvpEntry=hwAtmMapPvpEntry, hwAtmIfConf=hwAtmIfConf, hwAtmPvcServiceObjectGroup=hwAtmPvcServiceObjectGroup, hwAtmVclTable=hwAtmVclTable, hwAtmMapPvpIfIndex=hwAtmMapPvpIfIndex, hwAtmPvcServiceEntry=hwAtmPvcServiceEntry, hwAtmServiceOutputMbs=hwAtmServiceOutputMbs, hwAtmPvcOAMLoopbackRetryFrequency=hwAtmPvcOAMLoopbackRetryFrequency, hwAtmVplRowStatus=hwAtmVplRowStatus, hwAtmVclObjectGroup=hwAtmVclObjectGroup, hwAtmMapPvpVplVpi=hwAtmMapPvpVplVpi, hwAtmPvcOAMLoopbackRowStatus=hwAtmPvcOAMLoopbackRowStatus, hwAtmMapPvcRemoteVclVpi=hwAtmMapPvcRemoteVclVpi, hwAtmPvpLimitTable=hwAtmPvpLimitTable, hwAtmPvcOAMLoopbackEntry=hwAtmPvcOAMLoopbackEntry, hwAtmIfType=hwAtmIfType, hwAtmPvpLimitVpi=hwAtmPvpLimitVpi, hwAtmPvpLimitPeakRate=hwAtmPvpLimitPeakRate, hwAtmServiceObjectGroup=hwAtmServiceObjectGroup, hwAtmServiceTable=hwAtmServiceTable, hwAtmIfConfIntfType=hwAtmIfConfIntfType, hwAtmMapPvpRowStatus=hwAtmMapPvpRowStatus, hwAtmVclVpi=hwAtmVclVpi, hwAtmIfConfTable=hwAtmIfConfTable, hwAtmVplIfIndex=hwAtmVplIfIndex, hwAtmPvcIpoaBroadcast=hwAtmPvcIpoaBroadcast, hwAtmServiceRowStatus=hwAtmServiceRowStatus, hwAtmPvcOAMLoopbackFrequency=hwAtmPvcOAMLoopbackFrequency, hwAtmPvcOAMLoopbackDownCount=hwAtmPvcOAMLoopbackDownCount, hwAtmPvcServiceRowStatus=hwAtmPvcServiceRowStatus, hwAtmPvcBridgeRowStatus=hwAtmPvcBridgeRowStatus, hwAtmTable=hwAtmTable, hwAtmEntry=hwAtmEntry, hwAtmServiceOutputScr=hwAtmServiceOutputScr, hwAtmServiceCbrCdvtValue=hwAtmServiceCbrCdvtValue, hwAtmPvcBridgeDstIfIndex=hwAtmPvcBridgeDstIfIndex, hwAtmIfIndex=hwAtmIfIndex, hwAtmPvcIpoaType=hwAtmPvcIpoaType, hwAtmPvcOAMLoopbackObjectGroup=hwAtmPvcOAMLoopbackObjectGroup, hwAtmPvcServiceTable=hwAtmPvcServiceTable, hwAtmPvcBridgeTable=hwAtmPvcBridgeTable, hwAtmPvcTransmittalDirection=hwAtmPvcTransmittalDirection, hwAtmObjectGroup=hwAtmObjectGroup, hwAtmMapPvcObjectGroup=hwAtmMapPvcObjectGroup, hwAtmServiceName=hwAtmServiceName, hwAtmMIB=hwAtmMIB, hwAtmMapPvpTable=hwAtmMapPvpTable, hwAtmObjects=hwAtmObjects, hwAtmIfConfMaxVccs=hwAtmIfConfMaxVccs, hwAtmIfConfEntry=hwAtmIfConfEntry, hwAtmPvcOAMLoopbackUpCount=hwAtmPvcOAMLoopbackUpCount, hwAtmFrameFormat=hwAtmFrameFormat, hwAtmScramble=hwAtmScramble, hwAtmVplObjectGroup=hwAtmVplObjectGroup, hwAtmVclEntry=hwAtmVclEntry, hwAtmServiceEntry=hwAtmServiceEntry, hwAtmMapPvcTable=hwAtmMapPvcTable, hwAtmPvcIpoaEntry=hwAtmPvcIpoaEntry, hwAtmLoopback=hwAtmLoopback, PYSNMP_MODULE_ID=hwAtmMIB, hwAtmServiceOutputPcr=hwAtmServiceOutputPcr, hwAtmPvcBridgeObjectGroup=hwAtmPvcBridgeObjectGroup, hwAtmPvcIpoaIpMask=hwAtmPvcIpoaIpMask, hwAtmMapPvcRemoteVclVci=hwAtmMapPvcRemoteVclVci, hwAtmClock=hwAtmClock, hwAtmServiceType=hwAtmServiceType, hwAtmIfConfOperVccs=hwAtmIfConfOperVccs, hwAtmMapPvpObjectGroup=hwAtmMapPvpObjectGroup, hwAtmVclIfIndex=hwAtmVclIfIndex, hwAtmVplVpi=hwAtmVplVpi, hwAtmGroups=hwAtmGroups, hwAtmVclVci=hwAtmVclVci, hwAtmPvpLimitEntry=hwAtmPvpLimitEntry, hwAtmMapPvpRemoteVplVpi=hwAtmMapPvpRemoteVplVpi, hwAtmPvcServiceName=hwAtmPvcServiceName, hwAtmVclName=hwAtmVclName, hwAtmCompliances=hwAtmCompliances, hwAtmPvpLimitIfIndex=hwAtmPvpLimitIfIndex, hwAtmPvcIpoaRowStatus=hwAtmPvcIpoaRowStatus, hwAtmIfConfIfIndex=hwAtmIfConfIfIndex, hwAtmPvcIpoaInarpInterval=hwAtmPvcIpoaInarpInterval, hwAtmPvpLimitRowStatus=hwAtmPvpLimitRowStatus, hwAtmMapPvcRowStatus=hwAtmMapPvcRowStatus, hwAtmPvcOamLoopbackTable=hwAtmPvcOamLoopbackTable, hwAtmVclRowStatus=hwAtmVclRowStatus, hwAtmCompliance=hwAtmCompliance, hwAtmVccAal5EncapsType=hwAtmVccAal5EncapsType, hwAtmConformance=hwAtmConformance, hwAtmPvcIpoaObjectGroup=hwAtmPvcIpoaObjectGroup, hwAtmVplEntry=hwAtmVplEntry, hwAtmPvpLimitObjectGroup=hwAtmPvpLimitObjectGroup, hwAtmVplTable=hwAtmVplTable)
