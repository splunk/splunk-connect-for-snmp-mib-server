#
# PySNMP MIB module XYLAN-CSM-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/XYLAN-CSM-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 21:38:25 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, SingleValueConstraint, ConstraintsUnion, ConstraintsIntersection, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "SingleValueConstraint", "ConstraintsUnion", "ConstraintsIntersection", "ValueRangeConstraint")
ifIndex, = mibBuilder.importSymbols("IF-MIB", "ifIndex")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
MibScalar, MibTable, MibTableRow, MibTableColumn, iso, ObjectIdentity, IpAddress, MibIdentifier, Counter64, ModuleIdentity, Gauge32, Counter32, Unsigned32, Bits, TimeTicks, Integer32, NotificationType = mibBuilder.importSymbols("SNMPv2-SMI", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "iso", "ObjectIdentity", "IpAddress", "MibIdentifier", "Counter64", "ModuleIdentity", "Gauge32", "Counter32", "Unsigned32", "Bits", "TimeTicks", "Integer32", "NotificationType")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
xylanCsmArch, = mibBuilder.importSymbols("XYLAN-BASE-MIB", "xylanCsmArch")
xylanCsmMIB = MibIdentifier((1, 3, 6, 1, 4, 1, 800, 2, 9, 1))
atmxVplGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 1))
atmxInterfaceConfGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 2))
atmxVclGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 3))
xylnatmInterfaceConfGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 4))
atmxVpCrossConnectGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 5))
xylnatmInterfaceStatGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 6))
atmxVcCrossConnectGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 7))
atmxTrafficDescrGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 8))
xylnatmVplGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 9))
xylnatmVclGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 10))
xylnatmVplStatGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 11))
xylnatmVclStatGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 12))
xylnatmVcCrossConnectGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 13))
xylnatmVpCrossConnectGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 14))
xylnatmVclModGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 15))
xylnatmVplModGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 16))
xylnatmClockingxCtrlGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 17))
xylnatmTrafficShaperConfGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 18))
xylnatmTrafficShaperMemGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 19))
class AtmxTrafficDescrParamIndex(Integer32):
    subtypeSpec = Integer32.subtypeSpec + ValueRangeConstraint(0, 2147483647)

atmxInterfaceConfTable = MibTable((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 2, 1), )
if mibBuilder.loadTexts: atmxInterfaceConfTable.setStatus('mandatory')
atmxInterfaceConfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 2, 1, 1), ).setIndexNames((0, "XYLAN-CSM-MIB", "atmxInterfaceSlotIndex"), (0, "XYLAN-CSM-MIB", "atmxInterfacePortIndex"))
if mibBuilder.loadTexts: atmxInterfaceConfEntry.setStatus('mandatory')
atmxInterfaceSlotIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 2, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 9))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmxInterfaceSlotIndex.setStatus('mandatory')
atmxInterfacePortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 2, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmxInterfacePortIndex.setStatus('mandatory')
atmxInterfaceMaxVpcs = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 2, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4096))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmxInterfaceMaxVpcs.setStatus('mandatory')
atmxInterfaceMaxVccs = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 2, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65536))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmxInterfaceMaxVccs.setStatus('mandatory')
atmxInterfaceConfVpcs = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 2, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4096))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmxInterfaceConfVpcs.setStatus('mandatory')
atmxInterfaceConfVccs = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 2, 1, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65536))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmxInterfaceConfVccs.setStatus('mandatory')
atmxInterfaceMaxActiveVpiBits = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 2, 1, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 12))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: atmxInterfaceMaxActiveVpiBits.setStatus('mandatory')
atmxInterfaceMaxActiveVciBits = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 2, 1, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: atmxInterfaceMaxActiveVciBits.setStatus('mandatory')
atmxInterfaceIlmiVpi = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 2, 1, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmxInterfaceIlmiVpi.setStatus('mandatory')
atmxInterfaceIlmiVci = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 2, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)).clone(16)).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmxInterfaceIlmiVci.setStatus('mandatory')
atmxInterfaceAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 2, 1, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("private", 1), ("nsapE164", 2), ("nativeE164", 3), ("other", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmxInterfaceAddressType.setStatus('mandatory')
atmxTrafficDescrParamTable = MibTable((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 8, 1), )
if mibBuilder.loadTexts: atmxTrafficDescrParamTable.setStatus('mandatory')
atmxTrafficDescrParamEntry = MibTableRow((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 8, 1, 1), ).setIndexNames((0, "XYLAN-CSM-MIB", "atmxTrafficDescrParamIndex"))
if mibBuilder.loadTexts: atmxTrafficDescrParamEntry.setStatus('mandatory')
atmxTrafficDescrParamIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 8, 1, 1, 1), AtmxTrafficDescrParamIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmxTrafficDescrParamIndex.setStatus('mandatory')
atmxTrafficDescrType = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 8, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("atmxNoTrafficDescriptor", 1), ("atmxNoClpNoScr", 2), ("atmxClpNoTaggingNoScr", 3), ("atmxClpTaggingNoScr", 4), ("atmxNoClpScr", 5), ("atmxClpNoTaggingScr", 6), ("atmxClpTaggingScr", 7)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: atmxTrafficDescrType.setStatus('mandatory')
atmxTrafficDescrParam1 = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 8, 1, 1, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: atmxTrafficDescrParam1.setStatus('mandatory')
atmxTrafficDescrParam2 = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 8, 1, 1, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: atmxTrafficDescrParam2.setStatus('mandatory')
atmxTrafficDescrParam3 = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 8, 1, 1, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: atmxTrafficDescrParam3.setStatus('mandatory')
atmxTrafficDescrParam4 = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 8, 1, 1, 6), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: atmxTrafficDescrParam4.setStatus('mandatory')
atmxTrafficDescrParam5 = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 8, 1, 1, 7), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: atmxTrafficDescrParam5.setStatus('mandatory')
atmxTrafficQoSClass = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 8, 1, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: atmxTrafficQoSClass.setStatus('mandatory')
atmxTrafficDescrRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 8, 1, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("create", 1), ("modify", 2), ("delete", 3), ("active", 4), ("notActive", 5)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: atmxTrafficDescrRowStatus.setStatus('mandatory')
atmxVplTable = MibTable((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 1, 1), )
if mibBuilder.loadTexts: atmxVplTable.setStatus('mandatory')
atmxVplEntry = MibTableRow((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 1, 1, 1), ).setIndexNames((0, "XYLAN-CSM-MIB", "atmxVplSlotIndex"), (0, "XYLAN-CSM-MIB", "atmxVplPortIndex"), (0, "XYLAN-CSM-MIB", "atmxVplVpi"))
if mibBuilder.loadTexts: atmxVplEntry.setStatus('mandatory')
atmxVplSlotIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 9))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmxVplSlotIndex.setStatus('mandatory')
atmxVplPortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 1, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmxVplPortIndex.setStatus('mandatory')
atmxVplVpi = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 1, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4095))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmxVplVpi.setStatus('mandatory')
atmxVplAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 1, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("up", 1), ("down", 2))).clone('down')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: atmxVplAdminStatus.setStatus('mandatory')
atmxVplOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 1, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("unknown", 1), ("end2endup", 2), ("end2endDown", 3), ("localUpEndToEndUnknown", 4), ("localDown", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmxVplOperStatus.setStatus('mandatory')
atmxVplLastChange = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 1, 1, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmxVplLastChange.setStatus('mandatory')
atmxVplReceiveTrafficDescrIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 1, 1, 1, 7), AtmxTrafficDescrParamIndex()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: atmxVplReceiveTrafficDescrIndex.setStatus('mandatory')
atmxVplTransmitTrafficDescrIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 1, 1, 1, 8), AtmxTrafficDescrParamIndex()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: atmxVplTransmitTrafficDescrIndex.setStatus('mandatory')
atmxVplCrossConnectIdentifier = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 1, 1, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmxVplCrossConnectIdentifier.setStatus('mandatory')
atmxVplRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 1, 1, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("create", 1), ("modify", 2), ("delete", 3), ("active", 4), ("notActive", 5)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: atmxVplRowStatus.setStatus('mandatory')
atmxVplBidirect = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 1, 1, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("off", 1), ("on", 2))).clone('on')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: atmxVplBidirect.setStatus('mandatory')
atmxVclTable = MibTable((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 3, 1), )
if mibBuilder.loadTexts: atmxVclTable.setStatus('mandatory')
atmxVclEntry = MibTableRow((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 3, 1, 1), ).setIndexNames((0, "XYLAN-CSM-MIB", "atmxVclSlotIndex"), (0, "XYLAN-CSM-MIB", "atmxVclPortIndex"), (0, "XYLAN-CSM-MIB", "atmxVclVpi"), (0, "XYLAN-CSM-MIB", "atmxVclVci"))
if mibBuilder.loadTexts: atmxVclEntry.setStatus('mandatory')
atmxVclSlotIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 3, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 9))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmxVclSlotIndex.setStatus('mandatory')
atmxVclPortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 3, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmxVclPortIndex.setStatus('mandatory')
atmxVclVpi = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 3, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4095))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmxVclVpi.setStatus('mandatory')
atmxVclVci = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 3, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmxVclVci.setStatus('mandatory')
atmxVclAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 3, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("up", 1), ("down", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: atmxVclAdminStatus.setStatus('mandatory')
atmxVclOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 3, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("unknown", 1), ("end2endup", 2), ("end2endDown", 3), ("localUpEndToEndUnknown", 4), ("localDown", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmxVclOperStatus.setStatus('mandatory')
atmxVclLastChange = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 3, 1, 1, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmxVclLastChange.setStatus('mandatory')
atmxVclReceiveTrafficDescrIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 3, 1, 1, 8), AtmxTrafficDescrParamIndex()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: atmxVclReceiveTrafficDescrIndex.setStatus('mandatory')
atmxVclTransmitTrafficDescrIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 3, 1, 1, 9), AtmxTrafficDescrParamIndex()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: atmxVclTransmitTrafficDescrIndex.setStatus('mandatory')
atmxVccAalType = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 3, 1, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("aal1", 1), ("aal34", 2), ("aal5", 3), ("other", 4), ("unknown", 5)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: atmxVccAalType.setStatus('mandatory')
atmxVccAal5CpcsTransmitSduSize = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 3, 1, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)).clone(9188)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: atmxVccAal5CpcsTransmitSduSize.setStatus('mandatory')
atmxVccAal5CpcsReceiveSduSize = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 3, 1, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)).clone(9188)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: atmxVccAal5CpcsReceiveSduSize.setStatus('mandatory')
atmxVccAal5EncapsType = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 3, 1, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10))).clone(namedValues=NamedValues(("vcMultiplexRoutedProtocol", 1), ("vcMultiplexBridgedProtocol8023", 2), ("vcMultiplexBridgedProtocol8025", 3), ("vcMultiplexBridgedProtocol8026", 4), ("vcMultiplexLANemulation8023", 5), ("vcMultiplexLANemulation8025", 6), ("llcEncapsulation", 7), ("multiprotocolFrameRelaySscs", 8), ("other", 9), ("unknown", 10))).clone('llcEncapsulation')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: atmxVccAal5EncapsType.setStatus('mandatory')
atmxVclCrossConnectIdentifier = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 3, 1, 1, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmxVclCrossConnectIdentifier.setStatus('mandatory')
atmxVclRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 3, 1, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("create", 1), ("modify", 2), ("delete", 3), ("active", 4), ("notActive", 5)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: atmxVclRowStatus.setStatus('mandatory')
atmxVclBidirect = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 3, 1, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("off", 1), ("on", 2))).clone('on')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: atmxVclBidirect.setStatus('mandatory')
atmxVpCrossConnectTable = MibTable((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 5, 1), )
if mibBuilder.loadTexts: atmxVpCrossConnectTable.setStatus('mandatory')
atmxVpCrossConnectEntry = MibTableRow((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 5, 1, 1), ).setIndexNames((0, "XYLAN-CSM-MIB", "atmxVpCrossConnectLowSlotIndex"), (0, "XYLAN-CSM-MIB", "atmxVpCrossConnectLowPortIndex"), (0, "XYLAN-CSM-MIB", "atmxVpCrossConnectLowVpi"), (0, "XYLAN-CSM-MIB", "atmxVpCrossConnectHighSlotIndex"), (0, "XYLAN-CSM-MIB", "atmxVpCrossConnectHighPortIndex"), (0, "XYLAN-CSM-MIB", "atmxVpCrossConnectHighVpi"))
if mibBuilder.loadTexts: atmxVpCrossConnectEntry.setStatus('mandatory')
atmxVpCrossConnectIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 5, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmxVpCrossConnectIndex.setStatus('mandatory')
atmxVpCrossConnectLowSlotIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 5, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 9))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmxVpCrossConnectLowSlotIndex.setStatus('mandatory')
atmxVpCrossConnectLowPortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 5, 1, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmxVpCrossConnectLowPortIndex.setStatus('mandatory')
atmxVpCrossConnectLowVpi = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 5, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4095))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmxVpCrossConnectLowVpi.setStatus('mandatory')
atmxVpCrossConnectHighSlotIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 5, 1, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmxVpCrossConnectHighSlotIndex.setStatus('mandatory')
atmxVpCrossConnectHighPortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 5, 1, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmxVpCrossConnectHighPortIndex.setStatus('mandatory')
atmxVpCrossConnectHighVpi = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 5, 1, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4095))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmxVpCrossConnectHighVpi.setStatus('mandatory')
atmxVpCrossConnectAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 5, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("up", 1), ("down", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: atmxVpCrossConnectAdminStatus.setStatus('mandatory')
atmxVpCrossConnectL2HOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 5, 1, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("unknown", 1), ("end2endup", 2), ("end2endDown", 3), ("localUpEndToEndUnknown", 4), ("localDown", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmxVpCrossConnectL2HOperStatus.setStatus('mandatory')
atmxVpCrossConnectH2LOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 5, 1, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("unknown", 1), ("end2endup", 2), ("end2endDown", 3), ("localUpEndToEndUnknown", 4), ("localDown", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmxVpCrossConnectH2LOperStatus.setStatus('mandatory')
atmxVpCrossConnectL2HLastChange = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 5, 1, 1, 11), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmxVpCrossConnectL2HLastChange.setStatus('mandatory')
atmxVpCrossConnectH2LLastChange = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 5, 1, 1, 12), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmxVpCrossConnectH2LLastChange.setStatus('mandatory')
atmxVpCrossConnectRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 5, 1, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("create", 1), ("modify", 2), ("delete", 3), ("active", 4), ("notActive", 5)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: atmxVpCrossConnectRowStatus.setStatus('mandatory')
atmxSvcVpCrossConnectTable = MibTable((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 5, 2), )
if mibBuilder.loadTexts: atmxSvcVpCrossConnectTable.setStatus('mandatory')
atmxSvcVpCrossConnectEntry = MibTableRow((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 5, 2, 1), ).setIndexNames((0, "XYLAN-CSM-MIB", "atmxSvcVpCrossConnectLowSlotIndex"), (0, "XYLAN-CSM-MIB", "atmxSvcVpCrossConnectLowPortIndex"), (0, "XYLAN-CSM-MIB", "atmxSvcVpCrossConnectLowVpi"), (0, "XYLAN-CSM-MIB", "atmxSvcVpCrossConnectHighSlotIndex"), (0, "XYLAN-CSM-MIB", "atmxSvcVpCrossConnectHighPortIndex"), (0, "XYLAN-CSM-MIB", "atmxSvcVpCrossConnectHighVpi"))
if mibBuilder.loadTexts: atmxSvcVpCrossConnectEntry.setStatus('mandatory')
atmxSvcVpCrossConnectLowSlotIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 5, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 9)))
if mibBuilder.loadTexts: atmxSvcVpCrossConnectLowSlotIndex.setStatus('mandatory')
atmxSvcVpCrossConnectLowPortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 5, 2, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 25)))
if mibBuilder.loadTexts: atmxSvcVpCrossConnectLowPortIndex.setStatus('mandatory')
atmxSvcVpCrossConnectLowVpi = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 5, 2, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4095)))
if mibBuilder.loadTexts: atmxSvcVpCrossConnectLowVpi.setStatus('mandatory')
atmxSvcVpCrossConnectHighSlotIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 5, 2, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 9)))
if mibBuilder.loadTexts: atmxSvcVpCrossConnectHighSlotIndex.setStatus('mandatory')
atmxSvcVpCrossConnectHighPortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 5, 2, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 25)))
if mibBuilder.loadTexts: atmxSvcVpCrossConnectHighPortIndex.setStatus('mandatory')
atmxSvcVpCrossConnectHighVpi = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 5, 2, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4095)))
if mibBuilder.loadTexts: atmxSvcVpCrossConnectHighVpi.setStatus('mandatory')
atmxSvcVpCrossConnectCreationTime = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 5, 2, 1, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmxSvcVpCrossConnectCreationTime.setStatus('mandatory')
atmxSvcVpCrossConnectLowTDIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 5, 2, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmxSvcVpCrossConnectLowTDIndex.setStatus('mandatory')
atmxSvcVpCrossConnectHighTDIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 5, 2, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmxSvcVpCrossConnectHighTDIndex.setStatus('mandatory')
atmxSvcVpCrossConnectRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 5, 2, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmxSvcVpCrossConnectRowStatus.setStatus('mandatory')
atmxVcCrossConnectTable = MibTable((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 7, 1), )
if mibBuilder.loadTexts: atmxVcCrossConnectTable.setStatus('mandatory')
atmxVcCrossConnectEntry = MibTableRow((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 7, 1, 1), ).setIndexNames((0, "XYLAN-CSM-MIB", "atmxVcCrossConnectLowSlotIndex"), (0, "XYLAN-CSM-MIB", "atmxVcCrossConnectLowPortIndex"), (0, "XYLAN-CSM-MIB", "atmxVcCrossConnectLowVpi"), (0, "XYLAN-CSM-MIB", "atmxVcCrossConnectLowVci"), (0, "XYLAN-CSM-MIB", "atmxVcCrossConnectHighSlotIndex"), (0, "XYLAN-CSM-MIB", "atmxVcCrossConnectHighPortIndex"), (0, "XYLAN-CSM-MIB", "atmxVcCrossConnectHighVpi"), (0, "XYLAN-CSM-MIB", "atmxVcCrossConnectHighVci"))
if mibBuilder.loadTexts: atmxVcCrossConnectEntry.setStatus('mandatory')
atmxVcCrossConnectIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 7, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmxVcCrossConnectIndex.setStatus('mandatory')
atmxVcCrossConnectLowSlotIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 7, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 9))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmxVcCrossConnectLowSlotIndex.setStatus('mandatory')
atmxVcCrossConnectLowPortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 7, 1, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmxVcCrossConnectLowPortIndex.setStatus('mandatory')
atmxVcCrossConnectLowVpi = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 7, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4095))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmxVcCrossConnectLowVpi.setStatus('mandatory')
atmxVcCrossConnectLowVci = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 7, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmxVcCrossConnectLowVci.setStatus('mandatory')
atmxVcCrossConnectHighSlotIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 7, 1, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 9))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmxVcCrossConnectHighSlotIndex.setStatus('mandatory')
atmxVcCrossConnectHighPortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 7, 1, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmxVcCrossConnectHighPortIndex.setStatus('mandatory')
atmxVcCrossConnectHighVpi = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 7, 1, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4095))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmxVcCrossConnectHighVpi.setStatus('mandatory')
atmxVcCrossConnectHighVci = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 7, 1, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmxVcCrossConnectHighVci.setStatus('mandatory')
atmxVcCrossConnectAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 7, 1, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("up", 1), ("down", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: atmxVcCrossConnectAdminStatus.setStatus('mandatory')
atmxVcCrossConnectL2HOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 7, 1, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("unknown", 1), ("end2endup", 2), ("end2endDown", 3), ("localUpEndToEndUnknown", 4), ("localDown", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmxVcCrossConnectL2HOperStatus.setStatus('mandatory')
atmxVcCrossConnectH2LOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 7, 1, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("unknown", 1), ("end2endup", 2), ("end2endDown", 3), ("localUpEndToEndUnknown", 4), ("localDown", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmxVcCrossConnectH2LOperStatus.setStatus('mandatory')
atmxVcCrossConnectL2HLastChange = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 7, 1, 1, 13), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmxVcCrossConnectL2HLastChange.setStatus('mandatory')
atmxVcCrossConnectH2LLastChange = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 7, 1, 1, 14), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmxVcCrossConnectH2LLastChange.setStatus('mandatory')
atmxVcCrossConnectRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 7, 1, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("create", 1), ("modify", 2), ("delete", 3), ("active", 4), ("notActive", 5)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: atmxVcCrossConnectRowStatus.setStatus('mandatory')
atmxSvcVcCrossConnectTable = MibTable((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 7, 2), )
if mibBuilder.loadTexts: atmxSvcVcCrossConnectTable.setStatus('mandatory')
atmxSvcVcCrossConnectEntry = MibTableRow((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 7, 2, 1), ).setIndexNames((0, "XYLAN-CSM-MIB", "atmxSvcVcCrossConnectLowSlotIndex"), (0, "XYLAN-CSM-MIB", "atmxSvcVcCrossConnectLowPortIndex"), (0, "XYLAN-CSM-MIB", "atmxSvcVcCrossConnectLowVpi"), (0, "XYLAN-CSM-MIB", "atmxSvcVcCrossConnectLowVci"), (0, "XYLAN-CSM-MIB", "atmxSvcVcCrossConnectHighSlotIndex"), (0, "XYLAN-CSM-MIB", "atmxSvcVcCrossConnectHighPortIndex"), (0, "XYLAN-CSM-MIB", "atmxSvcVcCrossConnectHighVpi"), (0, "XYLAN-CSM-MIB", "atmxSvcVcCrossConnectHighVci"))
if mibBuilder.loadTexts: atmxSvcVcCrossConnectEntry.setStatus('mandatory')
atmxSvcVcCrossConnectLowSlotIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 7, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 9)))
if mibBuilder.loadTexts: atmxSvcVcCrossConnectLowSlotIndex.setStatus('mandatory')
atmxSvcVcCrossConnectLowPortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 7, 2, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 25)))
if mibBuilder.loadTexts: atmxSvcVcCrossConnectLowPortIndex.setStatus('mandatory')
atmxSvcVcCrossConnectLowVpi = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 7, 2, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4095)))
if mibBuilder.loadTexts: atmxSvcVcCrossConnectLowVpi.setStatus('mandatory')
atmxSvcVcCrossConnectLowVci = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 7, 2, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)))
if mibBuilder.loadTexts: atmxSvcVcCrossConnectLowVci.setStatus('mandatory')
atmxSvcVcCrossConnectHighSlotIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 7, 2, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 9)))
if mibBuilder.loadTexts: atmxSvcVcCrossConnectHighSlotIndex.setStatus('mandatory')
atmxSvcVcCrossConnectHighPortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 7, 2, 1, 6), Integer32())
if mibBuilder.loadTexts: atmxSvcVcCrossConnectHighPortIndex.setStatus('mandatory')
atmxSvcVcCrossConnectHighVpi = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 7, 2, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4095)))
if mibBuilder.loadTexts: atmxSvcVcCrossConnectHighVpi.setStatus('mandatory')
atmxSvcVcCrossConnectHighVci = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 7, 2, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)))
if mibBuilder.loadTexts: atmxSvcVcCrossConnectHighVci.setStatus('mandatory')
atmxSvcVcCrossConnectCreationTime = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 7, 2, 1, 9), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmxSvcVcCrossConnectCreationTime.setStatus('mandatory')
atmxSvcVcCrossConnectLowTDIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 7, 2, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmxSvcVcCrossConnectLowTDIndex.setStatus('mandatory')
atmxSvcVcCrossConnectHighTDIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 7, 2, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmxSvcVcCrossConnectHighTDIndex.setStatus('mandatory')
atmxSvcVcCrossConnectRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 7, 2, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmxSvcVcCrossConnectRowStatus.setStatus('mandatory')
xylnatmInterfaceConfTable = MibTable((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 4, 1), )
if mibBuilder.loadTexts: xylnatmInterfaceConfTable.setStatus('mandatory')
xylnatmInterfaceConfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 4, 1, 1), ).setIndexNames((0, "XYLAN-CSM-MIB", "xylnatmInterfaceSlotIndex"), (0, "XYLAN-CSM-MIB", "xylnatmInterfacePortIndex"))
if mibBuilder.loadTexts: xylnatmInterfaceConfEntry.setStatus('mandatory')
xylnatmInterfaceSlotIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 4, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 9))).setMaxAccess("readonly")
if mibBuilder.loadTexts: xylnatmInterfaceSlotIndex.setStatus('mandatory')
xylnatmInterfacePortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 4, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 25))).setMaxAccess("readonly")
if mibBuilder.loadTexts: xylnatmInterfacePortIndex.setStatus('mandatory')
xylnatmInterfaceDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 4, 1, 1, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xylnatmInterfaceDescription.setStatus('mandatory')
xylnatmInterfaceTransType = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 4, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 20))).clone(namedValues=NamedValues(("unknown", 1), ("sonetSts3", 2), ("ds3", 3), ("fourb5b", 4), ("eightb10b", 5), ("e3", 6), ("sonetSts12", 7), ("ds1", 8), ("e1", 9), ("internal", 20)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: xylnatmInterfaceTransType.setStatus('mandatory')
xylnatmInterfaceType = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 4, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("public", 1), ("private", 2), ("pnni10", 3), ("nni-iisp-network", 4), ("nni-iisp-user", 5), ("other", 6)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xylnatmInterfaceType.setStatus('mandatory')
xylnatmInterfaceMediaType = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 4, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("unknown", 1), ("coax", 2), ("singlemode", 3), ("multimode", 4), ("stp", 5), ("utp", 6), ("internal", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: xylnatmInterfaceMediaType.setStatus('mandatory')
xylnatmInterfaceAtmAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 4, 1, 1, 7), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xylnatmInterfaceAtmAddress.setStatus('mandatory')
xylnatmInterfacePortMode = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 4, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("off", 1), ("passthru", 2), ("normal", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: xylnatmInterfacePortMode.setStatus('mandatory')
xylnatmInterfaceOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 4, 1, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("up", 1), ("down", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: xylnatmInterfaceOperStatus.setStatus('mandatory')
xylnatmInterfaceQsaalStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 4, 1, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("up", 1), ("down", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: xylnatmInterfaceQsaalStatus.setStatus('mandatory')
xylnatmInterfaceIlmiStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 4, 1, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("up", 1), ("down", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: xylnatmInterfaceIlmiStatus.setStatus('mandatory')
xylnatmInterfaceTpRedirect = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 4, 1, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: xylnatmInterfaceTpRedirect.setStatus('mandatory')
xylnatmInterfaceCutOverSlot = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 4, 1, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 9))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xylnatmInterfaceCutOverSlot.setStatus('mandatory')
xylnatmInterfaceCutOverPort = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 4, 1, 1, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 25))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xylnatmInterfaceCutOverPort.setStatus('mandatory')
xylnatmInterfaceClearPortStats = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 4, 1, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("true", 1), ("false", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xylnatmInterfaceClearPortStats.setStatus('mandatory')
xylnatmInterfaceClearChanStats = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 4, 1, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("true", 1), ("false", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xylnatmInterfaceClearChanStats.setStatus('mandatory')
xylnatmInterfaceClearSlotStats = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 4, 1, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("true", 1), ("false", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xylnatmInterfaceClearSlotStats.setStatus('mandatory')
xylnatmInterfaceTransmissionType = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 4, 1, 1, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("sonet3c", 1), ("sdh", 2), ("sonet12c", 3), ("notApplicable", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xylnatmInterfaceTransmissionType.setStatus('mandatory')
xylnatmInterfaceIlmiState = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 4, 1, 1, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xylnatmInterfaceIlmiState.setStatus('mandatory')
xylnatmInterfaceTimingMode = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 4, 1, 1, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("local", 1), ("loop", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xylnatmInterfaceTimingMode.setStatus('mandatory')
xylnatmInterfaceLocalSrc = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 4, 1, 1, 21), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("oscillator", 1), ("busLine8K", 2), ("busLine19M", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xylnatmInterfaceLocalSrc.setStatus('mandatory')
xylnatmInterfaceUniVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 4, 1, 1, 22), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("uni30", 1), ("uni31", 2), ("uniIisp", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xylnatmInterfaceUniVersion.setStatus('mandatory')
xylnatmILMIConfTable = MibTable((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 4, 3), )
if mibBuilder.loadTexts: xylnatmILMIConfTable.setStatus('mandatory')
xylnatmILMIConfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 4, 3, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: xylnatmILMIConfEntry.setStatus('mandatory')
xylnatmILMIConfSlot = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 4, 3, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xylnatmILMIConfSlot.setStatus('mandatory')
xylnatmILMIConfPort = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 4, 3, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xylnatmILMIConfPort.setStatus('mandatory')
xylnatmILMIConfInstance = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 4, 3, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xylnatmILMIConfInstance.setStatus('mandatory')
xylnatmILMIConfILMIEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 4, 3, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disable", 1), ("enable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xylnatmILMIConfILMIEnable.setStatus('mandatory')
xylnatmILMIConfILMIPollEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 4, 3, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disable", 1), ("enable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xylnatmILMIConfILMIPollEnable.setStatus('mandatory')
xylnatmILMIConfAutoCfgEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 4, 3, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disable", 1), ("enable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xylnatmILMIConfAutoCfgEnable.setStatus('mandatory')
xylnatmILMIConfAutoCfgStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 4, 3, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("cfgDone", 1), ("idle", 2), ("inProgress", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: xylnatmILMIConfAutoCfgStatus.setStatus('mandatory')
xylnatmILMIConfAutoCfgTrigg = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 4, 3, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("unknown", 1), ("phyLogic", 2), ("phy", 3), ("logic", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xylnatmILMIConfAutoCfgTrigg.setStatus('mandatory')
xylnatmILMIConfAutoCfgDfltIf = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 4, 3, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("privateUNI", 1), ("pnni", 2), ("iispNetwork", 3), ("iispUser", 4), ("publicUNI", 5)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xylnatmILMIConfAutoCfgDfltIf.setStatus('mandatory')
xylnatmILMIConfAutoCfgDfltSigVer = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 4, 3, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("uni30", 1), ("uni31", 2), ("uni40", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xylnatmILMIConfAutoCfgDfltSigVer.setStatus('mandatory')
xylnatmILMIConfAutoCfgCurIf = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 4, 3, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("privateUNI", 1), ("pnni", 2), ("iispNetwork", 3), ("iispUser", 4), ("publicUNI", 5)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xylnatmILMIConfAutoCfgCurIf.setStatus('mandatory')
xylnatmILMIConfAutoCfgCurSigVer = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 4, 3, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("uni30", 1), ("uni31", 2), ("uni40", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: xylnatmILMIConfAutoCfgCurSigVer.setStatus('mandatory')
xylnatmILMIConfAutoCfgCurILMIVer = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 4, 3, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("unsupported", 1), ("ilmi40", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: xylnatmILMIConfAutoCfgCurILMIVer.setStatus('mandatory')
xylnatmILMIConfPeerUniType = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 4, 3, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("public", 1), ("private", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: xylnatmILMIConfPeerUniType.setStatus('mandatory')
xylnatmILMIConfPeerUniVer = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 4, 3, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("uni30", 1), ("uni31", 2), ("uni40", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: xylnatmILMIConfPeerUniVer.setStatus('mandatory')
xylnatmILMIConfPeerDevType = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 4, 3, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("user", 1), ("node", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: xylnatmILMIConfPeerDevType.setStatus('mandatory')
xylnatmILMIConfPeerNNISigVer = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 4, 3, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("unsupported", 1), ("iisp", 2), ("pnni10", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: xylnatmILMIConfPeerNNISigVer.setStatus('mandatory')
xylnatmILMIConfPeerILMIVer = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 4, 3, 1, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("unsupported", 1), ("ilmi40", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: xylnatmILMIConfPeerILMIVer.setStatus('mandatory')
xylnatmInterfaceStatTable = MibTable((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 6, 1), )
if mibBuilder.loadTexts: xylnatmInterfaceStatTable.setStatus('mandatory')
xylnatmInterfaceStatEntry = MibTableRow((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 6, 1, 1), ).setIndexNames((0, "XYLAN-CSM-MIB", "xylnatmInterfaceStatSlotIndex"), (0, "XYLAN-CSM-MIB", "xylnatmInterfaceStatPortIndex"))
if mibBuilder.loadTexts: xylnatmInterfaceStatEntry.setStatus('mandatory')
xylnatmInterfaceStatSlotIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 6, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xylnatmInterfaceStatSlotIndex.setStatus('mandatory')
xylnatmInterfaceStatPortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 6, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xylnatmInterfaceStatPortIndex.setStatus('mandatory')
xylnatmInterfaceStatRxCells = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 6, 1, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xylnatmInterfaceStatRxCells.setStatus('mandatory')
xylnatmInterfaceStatRxClp0Cells = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 6, 1, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xylnatmInterfaceStatRxClp0Cells.setStatus('mandatory')
xylnatmInterfaceStatRxClp1Cells = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 6, 1, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xylnatmInterfaceStatRxClp1Cells.setStatus('mandatory')
xylnatmInterfaceStatTxCells = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 6, 1, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xylnatmInterfaceStatTxCells.setStatus('mandatory')
xylnatmInterfaceStatMarkEfciCells = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 6, 1, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xylnatmInterfaceStatMarkEfciCells.setStatus('mandatory')
xylnatmInterfaceStatMarkGcraCells = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 6, 1, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xylnatmInterfaceStatMarkGcraCells.setStatus('mandatory')
xylnatmInterfaceStatTotalDiscardCells = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 6, 1, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xylnatmInterfaceStatTotalDiscardCells.setStatus('mandatory')
xylnatmInterfaceStatDxCongClp0Cells = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 6, 1, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xylnatmInterfaceStatDxCongClp0Cells.setStatus('mandatory')
xylnatmInterfaceStatDxCongClp1Cells = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 6, 1, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xylnatmInterfaceStatDxCongClp1Cells.setStatus('mandatory')
xylnatmInterfaceStatDxGcraClp0Cells = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 6, 1, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xylnatmInterfaceStatDxGcraClp0Cells.setStatus('mandatory')
xylnatmInterfaceStatDxGcraClp1Cells = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 6, 1, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xylnatmInterfaceStatDxGcraClp1Cells.setStatus('mandatory')
xylnatmInterfaceStatDxGcrabClp0Cells = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 6, 1, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xylnatmInterfaceStatDxGcrabClp0Cells.setStatus('mandatory')
xylnatmInterfaceStatDxGcrabClp1Cells = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 6, 1, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xylnatmInterfaceStatDxGcrabClp1Cells.setStatus('mandatory')
xylnatmInterfaceStatUnknownVpVcCells = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 6, 1, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xylnatmInterfaceStatUnknownVpVcCells.setStatus('mandatory')
xylnatmInterfaceStatUnknownVpiCells = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 6, 1, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xylnatmInterfaceStatUnknownVpiCells.setStatus('mandatory')
xylnatmInterfaceStatUnknownVciCells = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 6, 1, 1, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xylnatmInterfaceStatUnknownVciCells.setStatus('mandatory')
xylnatmInterfaceStatUniType = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 6, 1, 1, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("public", 1), ("private", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: xylnatmInterfaceStatUniType.setStatus('mandatory')
xylnatmInterfaceStatUniVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 6, 1, 1, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("uni30", 1), ("uni31", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: xylnatmInterfaceStatUniVersion.setStatus('mandatory')
xylnatmInterfaceStatRemainingRxBandwidth = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 6, 1, 1, 21), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xylnatmInterfaceStatRemainingRxBandwidth.setStatus('mandatory')
xylnatmInterfaceStatRemainingTxBandwidth = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 6, 1, 1, 22), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xylnatmInterfaceStatRemainingTxBandwidth.setStatus('mandatory')
xylnatmVclTable = MibTable((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 10, 1), )
if mibBuilder.loadTexts: xylnatmVclTable.setStatus('mandatory')
xylnatmVclEntry = MibTableRow((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 10, 1, 1), ).setIndexNames((0, "XYLAN-CSM-MIB", "xylnatmVclSlotIndex"), (0, "XYLAN-CSM-MIB", "xylnatmVclPortIndex"), (0, "XYLAN-CSM-MIB", "xylnatmVclVpi"), (0, "XYLAN-CSM-MIB", "xylnatmVclVci"))
if mibBuilder.loadTexts: xylnatmVclEntry.setStatus('mandatory')
xylnatmVclSlotIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 10, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xylnatmVclSlotIndex.setStatus('mandatory')
xylnatmVclPortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 10, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xylnatmVclPortIndex.setStatus('mandatory')
xylnatmVclVpi = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 10, 1, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xylnatmVclVpi.setStatus('mandatory')
xylnatmVclVci = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 10, 1, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xylnatmVclVci.setStatus('mandatory')
xylnatmVclConnectionDescr = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 10, 1, 1, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xylnatmVclConnectionDescr.setStatus('mandatory')
xylnatmVclChanType = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 10, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 3, 4))).clone(namedValues=NamedValues(("unknown", 1), ("vcNni", 3), ("vcUni", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xylnatmVclChanType.setStatus('mandatory')
xylnatmVclTransportPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 10, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(2, 3, 5, 6, 7, 8))).clone(namedValues=NamedValues(("qosCbrPrs", 2), ("qosCbr", 3), ("qosVbrRt", 5), ("qosVbrNrt", 6), ("qosAbr", 7), ("qosUbr", 8)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xylnatmVclTransportPriority.setStatus('mandatory')
xylnatmVclUserPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 10, 1, 1, 8), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xylnatmVclUserPriority.setStatus('mandatory')
xylnatmVclStatsMode = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 10, 1, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("cntGcraDxCell", 1), ("mrkGcraDxCell", 2), ("cntGcraPsCell", 3), ("mrkGcraPsCell", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xylnatmVclStatsMode.setStatus('mandatory')
xylnatmVclPrTrackPortBase = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 10, 1, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xylnatmVclPrTrackPortBase.setStatus('mandatory')
xylnatmVclPrTrackPort1 = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 10, 1, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xylnatmVclPrTrackPort1.setStatus('mandatory')
xylnatmVclPrTrackPort2 = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 10, 1, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xylnatmVclPrTrackPort2.setStatus('mandatory')
xylnatmVclPrTrackPort3 = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 10, 1, 1, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xylnatmVclPrTrackPort3.setStatus('mandatory')
xylnatmVclAltTrackPortBase = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 10, 1, 1, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xylnatmVclAltTrackPortBase.setStatus('mandatory')
xylnatmVclAltTrackPort1 = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 10, 1, 1, 15), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xylnatmVclAltTrackPort1.setStatus('mandatory')
xylnatmVclAltTrackPort2 = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 10, 1, 1, 16), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xylnatmVclAltTrackPort2.setStatus('mandatory')
xylnatmVclAltTrackPort3 = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 10, 1, 1, 17), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xylnatmVclAltTrackPort3.setStatus('mandatory')
xylnatmVclLgclChanRedirect = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 10, 1, 1, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("notAllowed", 1), ("allowed", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xylnatmVclLgclChanRedirect.setStatus('mandatory')
xylnatmVclAAL5Discard = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 10, 1, 1, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("earlyPktDiscard", 1), ("disable", 2), ("partialPktDiscard", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xylnatmVclAAL5Discard.setStatus('mandatory')
xylnatmVclF4F5SegEndpt = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 10, 1, 1, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xylnatmVclF4F5SegEndpt.setStatus('mandatory')
xylnatmVclF4F5CopySeg = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 10, 1, 1, 21), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xylnatmVclF4F5CopySeg.setStatus('mandatory')
xylnatmVclF4F5End2EndEndpt = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 10, 1, 1, 22), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xylnatmVclF4F5End2EndEndpt.setStatus('mandatory')
xylnatmVclF4F5CopyEnd2End = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 10, 1, 1, 23), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xylnatmVclF4F5CopyEnd2End.setStatus('mandatory')
xylnatmVclOamEndpt = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 10, 1, 1, 24), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xylnatmVclOamEndpt.setStatus('mandatory')
xylnatmVclOamCopy = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 10, 1, 1, 25), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xylnatmVclOamCopy.setStatus('mandatory')
xylnatmVclRmFwdEndpt = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 10, 1, 1, 26), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xylnatmVclRmFwdEndpt.setStatus('mandatory')
xylnatmVclRmFwdCopy = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 10, 1, 1, 27), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xylnatmVclRmFwdCopy.setStatus('mandatory')
xylnatmVclRmFwdGcraAdv = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 10, 1, 1, 28), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xylnatmVclRmFwdGcraAdv.setStatus('mandatory')
xylnatmVclRmBkwdEndpt = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 10, 1, 1, 29), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xylnatmVclRmBkwdEndpt.setStatus('mandatory')
xylnatmVclRmBkwdCopy = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 10, 1, 1, 30), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xylnatmVclRmBkwdCopy.setStatus('mandatory')
xylnatmVclRmBkwdGcraAdv = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 10, 1, 1, 31), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xylnatmVclRmBkwdGcraAdv.setStatus('mandatory')
xylnatmVclRmDiscard = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 10, 1, 1, 32), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xylnatmVclRmDiscard.setStatus('mandatory')
xylnatmVclGcraAPoliceMode = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 10, 1, 1, 33), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("gcraEmDxAll", 1), ("gcraEmMarkClp0DxClp1", 2), ("gcraEmMarkAllDxAll", 3), ("gcraEmMarkClp0DxAll", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: xylnatmVclGcraAPoliceMode.setStatus('mandatory')
xylnatmVclGcraBPoliceMode = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 10, 1, 1, 34), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("gcraEmDxAll", 1), ("gcraEmMarkClp0DxClp1", 2), ("gcraEmMarkAllDxAll", 3), ("gcraEmMarkClp0DxAll", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: xylnatmVclGcraBPoliceMode.setStatus('mandatory')
xylnatmVclMcGroupId = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 10, 1, 1, 35), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xylnatmVclMcGroupId.setStatus('mandatory')
xylnatmVclMcIngressEgress = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 10, 1, 1, 36), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("ingress", 1), ("egress", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: xylnatmVclMcIngressEgress.setStatus('mandatory')
xylnatmVclStatTable = MibTable((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 12, 1), )
if mibBuilder.loadTexts: xylnatmVclStatTable.setStatus('mandatory')
xylnatmVclStatEntry = MibTableRow((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 12, 1, 1), ).setIndexNames((0, "XYLAN-CSM-MIB", "xylnatmVclStatSlotIndex"), (0, "XYLAN-CSM-MIB", "xylnatmVclStatPortIndex"), (0, "XYLAN-CSM-MIB", "xylnatmVclStatVpi"), (0, "XYLAN-CSM-MIB", "xylnatmVclStatVci"))
if mibBuilder.loadTexts: xylnatmVclStatEntry.setStatus('mandatory')
xylnatmVclStatSlotIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 12, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xylnatmVclStatSlotIndex.setStatus('mandatory')
xylnatmVclStatPortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 12, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 25))).setMaxAccess("readonly")
if mibBuilder.loadTexts: xylnatmVclStatPortIndex.setStatus('mandatory')
xylnatmVclStatVpi = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 12, 1, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xylnatmVclStatVpi.setStatus('mandatory')
xylnatmVclStatVci = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 12, 1, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xylnatmVclStatVci.setStatus('mandatory')
xylnatmVclStatRxCells = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 12, 1, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xylnatmVclStatRxCells.setStatus('mandatory')
xylnatmVclStatTxCells = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 12, 1, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xylnatmVclStatTxCells.setStatus('mandatory')
xylnatmVclStatRxClp0Cells = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 12, 1, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xylnatmVclStatRxClp0Cells.setStatus('mandatory')
xylnatmVclStatRxClp1Cells = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 12, 1, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xylnatmVclStatRxClp1Cells.setStatus('mandatory')
xylnatmVclStatDxCongClp0Cells = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 12, 1, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xylnatmVclStatDxCongClp0Cells.setStatus('mandatory')
xylnatmVclStatDxCongClp1Cells = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 12, 1, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xylnatmVclStatDxCongClp1Cells.setStatus('mandatory')
xylnatmVclStatDxGcraClp0Cells = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 12, 1, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xylnatmVclStatDxGcraClp0Cells.setStatus('mandatory')
xylnatmVclStatDxGcraClp1Cells = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 12, 1, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xylnatmVclStatDxGcraClp1Cells.setStatus('mandatory')
xylnatmVclStatDxGcraBClp0Cells = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 12, 1, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xylnatmVclStatDxGcraBClp0Cells.setStatus('mandatory')
xylnatmVclStatDxGcraBClp1Cells = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 12, 1, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xylnatmVclStatDxGcraBClp1Cells.setStatus('mandatory')
xylnatmVplTable = MibTable((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 9, 1), )
if mibBuilder.loadTexts: xylnatmVplTable.setStatus('mandatory')
xylnatmVplEntry = MibTableRow((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 9, 1, 1), ).setIndexNames((0, "XYLAN-CSM-MIB", "xylnatmVplSlotIndex"), (0, "XYLAN-CSM-MIB", "xylnatmVplPortIndex"), (0, "XYLAN-CSM-MIB", "xylnatmVplVpi"))
if mibBuilder.loadTexts: xylnatmVplEntry.setStatus('mandatory')
xylnatmVplSlotIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 9, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xylnatmVplSlotIndex.setStatus('mandatory')
xylnatmVplPortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 9, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xylnatmVplPortIndex.setStatus('mandatory')
xylnatmVplVpi = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 9, 1, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xylnatmVplVpi.setStatus('mandatory')
xylnatmVplConnectionDescr = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 9, 1, 1, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xylnatmVplConnectionDescr.setStatus('mandatory')
xylnatmVplChanType = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 9, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 5, 6))).clone(namedValues=NamedValues(("unknown", 1), ("vpNNI", 5), ("vpUni", 6)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xylnatmVplChanType.setStatus('mandatory')
xylnatmVplTransportPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 9, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(2, 3, 5, 6, 7, 8))).clone(namedValues=NamedValues(("qosCbrPrs", 2), ("qosCbr", 3), ("qosVbrRt", 5), ("qosVbrNrt", 6), ("qosAbr", 7), ("qosUbr", 8)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xylnatmVplTransportPriority.setStatus('mandatory')
xylnatmVplUserPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 9, 1, 1, 7), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xylnatmVplUserPriority.setStatus('mandatory')
xylnatmVplStatsMode = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 9, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("cntGcraDxCell", 1), ("mrkGcraDxCell", 2), ("cntGcraPsCell", 3), ("mrkGcraPsCell", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xylnatmVplStatsMode.setStatus('mandatory')
xylnatmVplPrTrackPortBase = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 9, 1, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xylnatmVplPrTrackPortBase.setStatus('mandatory')
xylnatmVplPrTrackPort1 = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 9, 1, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xylnatmVplPrTrackPort1.setStatus('mandatory')
xylnatmVplPrTrackPort2 = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 9, 1, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xylnatmVplPrTrackPort2.setStatus('mandatory')
xylnatmVplPrTrackPort3 = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 9, 1, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xylnatmVplPrTrackPort3.setStatus('mandatory')
xylnatmVplAltTrackPortBase = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 9, 1, 1, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xylnatmVplAltTrackPortBase.setStatus('mandatory')
xylnatmVplAltTrackPort1 = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 9, 1, 1, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xylnatmVplAltTrackPort1.setStatus('mandatory')
xylnatmVplAltTrackPort2 = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 9, 1, 1, 15), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xylnatmVplAltTrackPort2.setStatus('mandatory')
xylnatmVplAltTrackPort3 = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 9, 1, 1, 16), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xylnatmVplAltTrackPort3.setStatus('mandatory')
xylnatmVplLgclChanRedirect = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 9, 1, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("notAllowed", 1), ("allowed", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xylnatmVplLgclChanRedirect.setStatus('mandatory')
xylnatmVplAAL5Discard = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 9, 1, 1, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("earlyPktDiscard", 1), ("disable", 2), ("partialPktDiscard", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xylnatmVplAAL5Discard.setStatus('mandatory')
xylnatmVplF4F5SegEndpt = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 9, 1, 1, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xylnatmVplF4F5SegEndpt.setStatus('mandatory')
xylnatmVplF4F5CopySeg = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 9, 1, 1, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xylnatmVplF4F5CopySeg.setStatus('mandatory')
xylnatmVplF4F5End2EndEndpt = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 9, 1, 1, 21), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xylnatmVplF4F5End2EndEndpt.setStatus('mandatory')
xylnatmVplF4F5CopyEnd2End = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 9, 1, 1, 22), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xylnatmVplF4F5CopyEnd2End.setStatus('mandatory')
xylnatmVplOamEndpt = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 9, 1, 1, 23), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xylnatmVplOamEndpt.setStatus('mandatory')
xylnatmVplOamCopy = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 9, 1, 1, 24), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xylnatmVplOamCopy.setStatus('mandatory')
xylnatmVplRmFwdEndpt = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 9, 1, 1, 25), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xylnatmVplRmFwdEndpt.setStatus('mandatory')
xylnatmVplRmFwdCopy = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 9, 1, 1, 26), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xylnatmVplRmFwdCopy.setStatus('mandatory')
xylnatmVplRmFwdGcraAdv = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 9, 1, 1, 27), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xylnatmVplRmFwdGcraAdv.setStatus('mandatory')
xylnatmVplRmBkwdEndpt = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 9, 1, 1, 28), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xylnatmVplRmBkwdEndpt.setStatus('mandatory')
xylnatmVplRmBkwdCopy = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 9, 1, 1, 29), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xylnatmVplRmBkwdCopy.setStatus('mandatory')
xylnatmVplRmBkwdGcraAdv = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 9, 1, 1, 30), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xylnatmVplRmBkwdGcraAdv.setStatus('mandatory')
xylnatmVplRmDiscard = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 9, 1, 1, 31), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xylnatmVplRmDiscard.setStatus('mandatory')
xylnatmVplGcraAPoliceMode = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 9, 1, 1, 32), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("gcraEmDxAll", 1), ("gcraEmMarkClp0DxClp1", 2), ("gcraEmMarkAllDxAll", 3), ("gcraEmMarkClp0DxAll", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: xylnatmVplGcraAPoliceMode.setStatus('mandatory')
xylnatmVplGcraBPoliceMode = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 9, 1, 1, 33), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("gcraEmDxAll", 1), ("gcraEmMarkClp0DxClp1", 2), ("gcraEmMarkAllDxAll", 3), ("gcraEmMarkClp0DxAll", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: xylnatmVplGcraBPoliceMode.setStatus('mandatory')
xylnatmVplMcGroupId = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 9, 1, 1, 34), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xylnatmVplMcGroupId.setStatus('mandatory')
xylnatmVplMcIngressEgress = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 9, 1, 1, 35), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("ingress", 1), ("egress", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: xylnatmVplMcIngressEgress.setStatus('mandatory')
xylnatmVplStatTable = MibTable((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 11, 1), )
if mibBuilder.loadTexts: xylnatmVplStatTable.setStatus('mandatory')
xylnatmVplStatEntry = MibTableRow((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 11, 1, 1), ).setIndexNames((0, "XYLAN-CSM-MIB", "xylnatmVplStatSlotIndex"), (0, "XYLAN-CSM-MIB", "xylnatmVplStatPortIndex"), (0, "XYLAN-CSM-MIB", "xylnatmVplStatVpi"))
if mibBuilder.loadTexts: xylnatmVplStatEntry.setStatus('mandatory')
xylnatmVplStatSlotIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 11, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xylnatmVplStatSlotIndex.setStatus('mandatory')
xylnatmVplStatPortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 11, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 25))).setMaxAccess("readonly")
if mibBuilder.loadTexts: xylnatmVplStatPortIndex.setStatus('mandatory')
xylnatmVplStatVpi = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 11, 1, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xylnatmVplStatVpi.setStatus('mandatory')
xylnatmVplStatRxCells = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 11, 1, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xylnatmVplStatRxCells.setStatus('mandatory')
xylnatmVplStatTxCells = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 11, 1, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xylnatmVplStatTxCells.setStatus('mandatory')
xylnatmVplStatRxClp0Cells = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 11, 1, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xylnatmVplStatRxClp0Cells.setStatus('mandatory')
xylnatmVplStatRxClp1Cells = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 11, 1, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xylnatmVplStatRxClp1Cells.setStatus('mandatory')
xylnatmVplStatDxCongClp0Cells = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 11, 1, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xylnatmVplStatDxCongClp0Cells.setStatus('mandatory')
xylnatmVplStatDxCongClp1Cells = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 11, 1, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xylnatmVplStatDxCongClp1Cells.setStatus('mandatory')
xylnatmVplStatDxGcraClp0Cells = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 11, 1, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xylnatmVplStatDxGcraClp0Cells.setStatus('mandatory')
xylnatmVplStatDxGcraClp1Cells = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 11, 1, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xylnatmVplStatDxGcraClp1Cells.setStatus('mandatory')
xylnatmVplStatDxGcraBClp0Cells = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 11, 1, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xylnatmVplStatDxGcraBClp0Cells.setStatus('mandatory')
xylnatmVplStatDxGcraBClp1Cells = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 11, 1, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xylnatmVplStatDxGcraBClp1Cells.setStatus('mandatory')
xylnatmVpCrossConnectTable = MibTable((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 14, 1), )
if mibBuilder.loadTexts: xylnatmVpCrossConnectTable.setStatus('mandatory')
xylnatmVpCrossConnectEntry = MibTableRow((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 14, 1, 1), ).setIndexNames((0, "XYLAN-CSM-MIB", "xylnatmVpCrossConnectLowSlotIndex"), (0, "XYLAN-CSM-MIB", "xylnatmVpCrossConnectLowPortIndex"), (0, "XYLAN-CSM-MIB", "xylnatmVpCrossConnectLowVpi"), (0, "XYLAN-CSM-MIB", "xylnatmVpCrossConnectHighSlotIndex"), (0, "XYLAN-CSM-MIB", "xylnatmVpCrossConnectHighPortIndex"), (0, "XYLAN-CSM-MIB", "xylnatmVpCrossConnectHighVpi"))
if mibBuilder.loadTexts: xylnatmVpCrossConnectEntry.setStatus('mandatory')
xylnatmVpCrossConnectLowSlotIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 14, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 9))).setMaxAccess("readonly")
if mibBuilder.loadTexts: xylnatmVpCrossConnectLowSlotIndex.setStatus('mandatory')
xylnatmVpCrossConnectLowPortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 14, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xylnatmVpCrossConnectLowPortIndex.setStatus('mandatory')
xylnatmVpCrossConnectLowVpi = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 14, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4095))).setMaxAccess("readonly")
if mibBuilder.loadTexts: xylnatmVpCrossConnectLowVpi.setStatus('mandatory')
xylnatmVpCrossConnectHighSlotIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 14, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 9))).setMaxAccess("readonly")
if mibBuilder.loadTexts: xylnatmVpCrossConnectHighSlotIndex.setStatus('mandatory')
xylnatmVpCrossConnectHighPortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 14, 1, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xylnatmVpCrossConnectHighPortIndex.setStatus('mandatory')
xylnatmVpCrossConnectHighVpi = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 14, 1, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4095))).setMaxAccess("readonly")
if mibBuilder.loadTexts: xylnatmVpCrossConnectHighVpi.setStatus('mandatory')
xylnatmVpCrossConnectConnectionId = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 14, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("multicastParent", 1), ("multicastChild", 2), ("nonMulticastParent", 3), ("unknown", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: xylnatmVpCrossConnectConnectionId.setStatus('mandatory')
xylnatmVpCrossConnectLowRxTrafficDescrIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 14, 1, 1, 8), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xylnatmVpCrossConnectLowRxTrafficDescrIndex.setStatus('mandatory')
xylnatmVpCrossConnectLowTxTrafficDescrIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 14, 1, 1, 9), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xylnatmVpCrossConnectLowTxTrafficDescrIndex.setStatus('mandatory')
xylnatmVpCrossConnectMCastEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 14, 1, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xylnatmVpCrossConnectMCastEnable.setStatus('mandatory')
xylnatmVpCrossConnectL2HLastChange = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 14, 1, 1, 11), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xylnatmVpCrossConnectL2HLastChange.setStatus('mandatory')
xylnatmVpCrossConnectH2LLastChange = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 14, 1, 1, 12), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xylnatmVpCrossConnectH2LLastChange.setStatus('mandatory')
xylnatmVpCrossConnectL2HOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 14, 1, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("unknown", 1), ("end2endup", 2), ("end2endDown", 3), ("localUpEndToEndUnknown", 4), ("localDown", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: xylnatmVpCrossConnectL2HOperStatus.setStatus('mandatory')
xylnatmVpCrossConnectH2LOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 14, 1, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("unknown", 1), ("end2endup", 2), ("end2endDown", 3), ("localUpEndToEndUnknown", 4), ("localDown", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: xylnatmVpCrossConnectH2LOperStatus.setStatus('mandatory')
xylnatmVpCrossConnectVcType = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 14, 1, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("pvc", 1), ("svc", 2), ("softPvc", 3), ("control", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: xylnatmVpCrossConnectVcType.setStatus('mandatory')
xylnatmVpCrossConnectPvcIdentifier = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 14, 1, 1, 16), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xylnatmVpCrossConnectPvcIdentifier.setStatus('mandatory')
xylnatmVpCrossConnectRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 14, 1, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("create", 1), ("modify", 2), ("delete", 3), ("active", 4), ("notActive", 5)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xylnatmVpCrossConnectRowStatus.setStatus('mandatory')
xylnatmVcCrossConnectTable = MibTable((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 13, 1), )
if mibBuilder.loadTexts: xylnatmVcCrossConnectTable.setStatus('mandatory')
xylnatmVcCrossConnectEntry = MibTableRow((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 13, 1, 1), ).setIndexNames((0, "XYLAN-CSM-MIB", "xylnatmVcCrossConnectLowSlotIndex"), (0, "XYLAN-CSM-MIB", "xylnatmVcCrossConnectLowPortIndex"), (0, "XYLAN-CSM-MIB", "xylnatmVcCrossConnectLowVpi"), (0, "XYLAN-CSM-MIB", "xylnatmVcCrossConnectLowVci"), (0, "XYLAN-CSM-MIB", "xylnatmVcCrossConnectHighSlotIndex"), (0, "XYLAN-CSM-MIB", "xylnatmVcCrossConnectHighPortIndex"), (0, "XYLAN-CSM-MIB", "xylnatmVcCrossConnectHighVpi"), (0, "XYLAN-CSM-MIB", "xylnatmVcCrossConnectHighVci"))
if mibBuilder.loadTexts: xylnatmVcCrossConnectEntry.setStatus('mandatory')
xylnatmVcCrossConnectLowSlotIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 13, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xylnatmVcCrossConnectLowSlotIndex.setStatus('mandatory')
xylnatmVcCrossConnectLowPortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 13, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xylnatmVcCrossConnectLowPortIndex.setStatus('mandatory')
xylnatmVcCrossConnectLowVpi = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 13, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4095))).setMaxAccess("readonly")
if mibBuilder.loadTexts: xylnatmVcCrossConnectLowVpi.setStatus('mandatory')
xylnatmVcCrossConnectLowVci = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 13, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: xylnatmVcCrossConnectLowVci.setStatus('mandatory')
xylnatmVcCrossConnectHighSlotIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 13, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 9))).setMaxAccess("readonly")
if mibBuilder.loadTexts: xylnatmVcCrossConnectHighSlotIndex.setStatus('mandatory')
xylnatmVcCrossConnectHighPortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 13, 1, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xylnatmVcCrossConnectHighPortIndex.setStatus('mandatory')
xylnatmVcCrossConnectHighVpi = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 13, 1, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4095))).setMaxAccess("readonly")
if mibBuilder.loadTexts: xylnatmVcCrossConnectHighVpi.setStatus('mandatory')
xylnatmVcCrossConnectHighVci = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 13, 1, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: xylnatmVcCrossConnectHighVci.setStatus('mandatory')
xylnatmVcCrossConnectConnectionId = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 13, 1, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("multicastParent", 1), ("multicastChild", 2), ("nonMulticastParent", 3), ("unknown", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: xylnatmVcCrossConnectConnectionId.setStatus('mandatory')
xylnatmVcCrossConnectLowRxTrafficDescrIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 13, 1, 1, 10), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xylnatmVcCrossConnectLowRxTrafficDescrIndex.setStatus('mandatory')
xylnatmVcCrossConnectLowTxTrafficDescrIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 13, 1, 1, 11), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xylnatmVcCrossConnectLowTxTrafficDescrIndex.setStatus('mandatory')
xylnatmVcCrossConnectMCastEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 13, 1, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xylnatmVcCrossConnectMCastEnable.setStatus('mandatory')
xylnatmVcCrossConnectL2HLastChange = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 13, 1, 1, 13), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xylnatmVcCrossConnectL2HLastChange.setStatus('mandatory')
xylnatmVcCrossConnectH2LLastChange = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 13, 1, 1, 14), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xylnatmVcCrossConnectH2LLastChange.setStatus('mandatory')
xylnatmVcCrossConnectL2HOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 13, 1, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("unknown", 1), ("end2endup", 2), ("end2endDown", 3), ("localUpEndToEndUnknown", 4), ("localDown", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: xylnatmVcCrossConnectL2HOperStatus.setStatus('mandatory')
xylnatmVcCrossConnectH2LOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 13, 1, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("unknown", 1), ("end2endup", 2), ("end2endDown", 3), ("localUpEndToEndUnknown", 4), ("localDown", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: xylnatmVcCrossConnectH2LOperStatus.setStatus('mandatory')
xylnatmVcCrossConnectVcType = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 13, 1, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("pvc", 1), ("svc", 2), ("softPvc", 3), ("control", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: xylnatmVcCrossConnectVcType.setStatus('mandatory')
xylnatmVcCrossConnectPvcIdentifier = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 13, 1, 1, 18), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xylnatmVcCrossConnectPvcIdentifier.setStatus('mandatory')
xylnatmVcCrossConnectRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 13, 1, 1, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("create", 1), ("modify", 2), ("delete", 3), ("active", 4), ("notActive", 5)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xylnatmVcCrossConnectRowStatus.setStatus('mandatory')
xylnatmVplModTable = MibTable((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 16, 1), )
if mibBuilder.loadTexts: xylnatmVplModTable.setStatus('mandatory')
xylnatmVplModEntry = MibTableRow((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 16, 1, 1), ).setIndexNames((0, "XYLAN-CSM-MIB", "xylnatmVplModSlotIndex"), (0, "XYLAN-CSM-MIB", "xylnatmVplModPortIndex"), (0, "XYLAN-CSM-MIB", "xylnatmVplModVplVpi"))
if mibBuilder.loadTexts: xylnatmVplModEntry.setStatus('mandatory')
xylnatmVplModSlotIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 16, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xylnatmVplModSlotIndex.setStatus('mandatory')
xylnatmVplModPortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 16, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xylnatmVplModPortIndex.setStatus('mandatory')
xylnatmVplModVplVpi = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 16, 1, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xylnatmVplModVplVpi.setStatus('mandatory')
xylnatmVplModDestSlotIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 16, 1, 1, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xylnatmVplModDestSlotIndex.setStatus('mandatory')
xylnatmVplModDestPortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 16, 1, 1, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xylnatmVplModDestPortIndex.setStatus('mandatory')
xylnatmVplModDestVplVpi = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 16, 1, 1, 6), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xylnatmVplModDestVplVpi.setStatus('mandatory')
xylnatmVplModDestStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 16, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("create", 1), ("modify", 2), ("delete", 3), ("active", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xylnatmVplModDestStatus.setStatus('mandatory')
xylnatmVclModTable = MibTable((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 15, 1), )
if mibBuilder.loadTexts: xylnatmVclModTable.setStatus('mandatory')
xylnatmVclModEntry = MibTableRow((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 15, 1, 1), ).setIndexNames((0, "XYLAN-CSM-MIB", "xylnatmVclModSlotIndex"), (0, "XYLAN-CSM-MIB", "xylnatmVclModPortIndex"), (0, "XYLAN-CSM-MIB", "xylnatmVclModVclVpi"), (0, "XYLAN-CSM-MIB", "xylnatmVclModVclVci"))
if mibBuilder.loadTexts: xylnatmVclModEntry.setStatus('mandatory')
xylnatmVclModSlotIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 15, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xylnatmVclModSlotIndex.setStatus('mandatory')
xylnatmVclModPortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 15, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xylnatmVclModPortIndex.setStatus('mandatory')
xylnatmVclModVclVpi = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 15, 1, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xylnatmVclModVclVpi.setStatus('mandatory')
xylnatmVclModVclVci = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 15, 1, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xylnatmVclModVclVci.setStatus('mandatory')
xylnatmVclModDestSlotIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 15, 1, 1, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xylnatmVclModDestSlotIndex.setStatus('mandatory')
xylnatmVclModDestPortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 15, 1, 1, 6), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xylnatmVclModDestPortIndex.setStatus('mandatory')
xylnatmVclModDestVclVpi = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 15, 1, 1, 7), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xylnatmVclModDestVclVpi.setStatus('mandatory')
xylnatmVclModDestVclVci = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 15, 1, 1, 8), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xylnatmVclModDestVclVci.setStatus('mandatory')
xylnatmVclModDestStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 15, 1, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("create", 1), ("modify", 2), ("delete", 3), ("active", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xylnatmVclModDestStatus.setStatus('mandatory')
xylnatmClockingxCtrlTable = MibTable((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 17, 1), )
if mibBuilder.loadTexts: xylnatmClockingxCtrlTable.setStatus('mandatory')
xylnatmClockingxCtrlEntry = MibTableRow((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 17, 1, 1), ).setIndexNames((0, "XYLAN-CSM-MIB", "xylnatmClockingxCtrlBusLine"), (0, "XYLAN-CSM-MIB", "xylnatmClockingxCtrlSrcLevel"))
if mibBuilder.loadTexts: xylnatmClockingxCtrlEntry.setStatus('mandatory')
xylnatmClockingxCtrlBusLine = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 17, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("eightKhz", 1), ("nineteenMhz", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: xylnatmClockingxCtrlBusLine.setStatus('mandatory')
xylnatmClockingxCtrlSrcLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 17, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("primary", 1), ("secondary", 2), ("tertiary", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: xylnatmClockingxCtrlSrcLevel.setStatus('mandatory')
xylnatmClockingxSrcOperState = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 17, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("inactive", 1), ("active", 2), ("standby", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: xylnatmClockingxSrcOperState.setStatus('mandatory')
xylnatmClockingxSrcType = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 17, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("notConfigured", 1), ("receiveDataDerived", 2), ("onboardOscillator", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xylnatmClockingxSrcType.setStatus('mandatory')
xylnatmClockingxCtrlSlot = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 17, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 9))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xylnatmClockingxCtrlSlot.setStatus('mandatory')
xylnatmClockingxCtrlPort = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 17, 1, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 64))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xylnatmClockingxCtrlPort.setStatus('mandatory')
xylnatmClockingxGlobalCST = MibScalar((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 17, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 10000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xylnatmClockingxGlobalCST.setStatus('mandatory')
xylnatmTrafficShaperConfTable = MibTable((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 18, 1), )
if mibBuilder.loadTexts: xylnatmTrafficShaperConfTable.setStatus('mandatory')
xylnatmTrafficShaperConfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 18, 1, 1), ).setIndexNames((0, "XYLAN-CSM-MIB", "xylnatmTrafficShaperConfSlotIndex"), (0, "XYLAN-CSM-MIB", "xylnatmTrafficShaperConfPortIndex"), (0, "XYLAN-CSM-MIB", "xylnatmTrafficShaperConfTsNumIndex"))
if mibBuilder.loadTexts: xylnatmTrafficShaperConfEntry.setStatus('mandatory')
xylnatmTrafficShaperConfSlotIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 18, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 9))).setMaxAccess("readonly")
if mibBuilder.loadTexts: xylnatmTrafficShaperConfSlotIndex.setStatus('mandatory')
xylnatmTrafficShaperConfPortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 18, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: xylnatmTrafficShaperConfPortIndex.setStatus('mandatory')
xylnatmTrafficShaperConfTsNumIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 18, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: xylnatmTrafficShaperConfTsNumIndex.setStatus('mandatory')
xylnatmTrafficShaperConfCDV = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 18, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(7, 1000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xylnatmTrafficShaperConfCDV.setStatus('mandatory')
xylnatmTrafficShaperConfPCR = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 18, 1, 1, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xylnatmTrafficShaperConfPCR.setStatus('mandatory')
xylnatmTrafficShaperConfSCR = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 18, 1, 1, 6), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xylnatmTrafficShaperConfSCR.setStatus('mandatory')
xylnatmTrafficShaperConfMBS = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 18, 1, 1, 7), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xylnatmTrafficShaperConfMBS.setStatus('mandatory')
xylnatmTrafficShaperMemTable = MibTable((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 19, 1), )
if mibBuilder.loadTexts: xylnatmTrafficShaperMemTable.setStatus('mandatory')
xylnatmTrafficShaperMemEntry = MibTableRow((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 19, 1, 1), ).setIndexNames((0, "XYLAN-CSM-MIB", "xylnatmTrafficShaperMemSlotIndex"), (0, "XYLAN-CSM-MIB", "xylnatmTrafficShaperMemPortIndex"), (0, "XYLAN-CSM-MIB", "xylnatmTrafficShaperMemTsNumIndex"), (0, "XYLAN-CSM-MIB", "xylnatmTrafficShaperMemVpiNumIndex"), (0, "XYLAN-CSM-MIB", "xylnatmTrafficShaperMemVciNumIndex"))
if mibBuilder.loadTexts: xylnatmTrafficShaperMemEntry.setStatus('mandatory')
xylnatmTrafficShaperMemSlotIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 19, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 9))).setMaxAccess("readonly")
if mibBuilder.loadTexts: xylnatmTrafficShaperMemSlotIndex.setStatus('mandatory')
xylnatmTrafficShaperMemPortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 19, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: xylnatmTrafficShaperMemPortIndex.setStatus('mandatory')
xylnatmTrafficShaperMemTsNumIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 19, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 7))).setMaxAccess("readonly")
if mibBuilder.loadTexts: xylnatmTrafficShaperMemTsNumIndex.setStatus('mandatory')
xylnatmTrafficShaperMemVpiNumIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 19, 1, 1, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xylnatmTrafficShaperMemVpiNumIndex.setStatus('mandatory')
xylnatmTrafficShaperMemVciNumIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 19, 1, 1, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xylnatmTrafficShaperMemVciNumIndex.setStatus('mandatory')
xylnatmTrafficShaperMemVpiOper = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 19, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("none", 1), ("add", 2), ("rem", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xylnatmTrafficShaperMemVpiOper.setStatus('mandatory')
mibBuilder.exportSymbols("XYLAN-CSM-MIB", xylnatmILMIConfPeerUniType=xylnatmILMIConfPeerUniType, atmxVclPortIndex=atmxVclPortIndex, xylnatmVplModDestVplVpi=xylnatmVplModDestVplVpi, xylnatmVclStatRxClp1Cells=xylnatmVclStatRxClp1Cells, atmxVclGroup=atmxVclGroup, atmxInterfaceMaxActiveVciBits=atmxInterfaceMaxActiveVciBits, xylnatmInterfaceClearPortStats=xylnatmInterfaceClearPortStats, atmxVclReceiveTrafficDescrIndex=atmxVclReceiveTrafficDescrIndex, xylnatmTrafficShaperConfMBS=xylnatmTrafficShaperConfMBS, xylnatmVcCrossConnectL2HOperStatus=xylnatmVcCrossConnectL2HOperStatus, xylnatmVpCrossConnectLowRxTrafficDescrIndex=xylnatmVpCrossConnectLowRxTrafficDescrIndex, xylnatmVpCrossConnectGroup=xylnatmVpCrossConnectGroup, xylnatmILMIConfTable=xylnatmILMIConfTable, atmxInterfaceConfTable=atmxInterfaceConfTable, xylnatmClockingxCtrlSlot=xylnatmClockingxCtrlSlot, xylnatmVplModDestSlotIndex=xylnatmVplModDestSlotIndex, xylnatmVplModEntry=xylnatmVplModEntry, xylnatmInterfaceStatTotalDiscardCells=xylnatmInterfaceStatTotalDiscardCells, atmxInterfaceMaxVpcs=atmxInterfaceMaxVpcs, xylnatmInterfaceStatDxGcrabClp1Cells=xylnatmInterfaceStatDxGcrabClp1Cells, xylnatmInterfaceStatUniType=xylnatmInterfaceStatUniType, atmxSvcVpCrossConnectRowStatus=atmxSvcVpCrossConnectRowStatus, atmxVplEntry=atmxVplEntry, xylnatmVcCrossConnectRowStatus=xylnatmVcCrossConnectRowStatus, xylnatmVcCrossConnectLowSlotIndex=xylnatmVcCrossConnectLowSlotIndex, atmxSvcVcCrossConnectLowVpi=atmxSvcVcCrossConnectLowVpi, xylnatmVclRmBkwdCopy=xylnatmVclRmBkwdCopy, xylnatmVplModGroup=xylnatmVplModGroup, atmxVplReceiveTrafficDescrIndex=atmxVplReceiveTrafficDescrIndex, xylnatmVclStatRxCells=xylnatmVclStatRxCells, xylnatmILMIConfSlot=xylnatmILMIConfSlot, xylnatmVclGroup=xylnatmVclGroup, xylnatmILMIConfILMIPollEnable=xylnatmILMIConfILMIPollEnable, atmxSvcVcCrossConnectHighVci=atmxSvcVcCrossConnectHighVci, atmxVccAal5CpcsTransmitSduSize=atmxVccAal5CpcsTransmitSduSize, xylnatmTrafficShaperConfTable=xylnatmTrafficShaperConfTable, xylnatmVpCrossConnectEntry=xylnatmVpCrossConnectEntry, atmxInterfaceIlmiVpi=atmxInterfaceIlmiVpi, xylnatmVclModEntry=xylnatmVclModEntry, xylnatmInterfaceStatRemainingRxBandwidth=xylnatmInterfaceStatRemainingRxBandwidth, atmxTrafficDescrParam2=atmxTrafficDescrParam2, atmxVpCrossConnectTable=atmxVpCrossConnectTable, xylnatmVclAltTrackPort3=xylnatmVclAltTrackPort3, xylnatmILMIConfPeerUniVer=xylnatmILMIConfPeerUniVer, atmxVcCrossConnectGroup=atmxVcCrossConnectGroup, atmxVcCrossConnectAdminStatus=atmxVcCrossConnectAdminStatus, xylnatmClockingxCtrlTable=xylnatmClockingxCtrlTable, xylnatmVplGroup=xylnatmVplGroup, xylnatmVplPrTrackPort3=xylnatmVplPrTrackPort3, xylnatmVcCrossConnectH2LOperStatus=xylnatmVcCrossConnectH2LOperStatus, AtmxTrafficDescrParamIndex=AtmxTrafficDescrParamIndex, xylnatmVpCrossConnectVcType=xylnatmVpCrossConnectVcType, xylnatmVpCrossConnectLowTxTrafficDescrIndex=xylnatmVpCrossConnectLowTxTrafficDescrIndex, xylnatmVclPrTrackPort1=xylnatmVclPrTrackPort1, xylnatmVpCrossConnectL2HLastChange=xylnatmVpCrossConnectL2HLastChange, atmxSvcVpCrossConnectHighTDIndex=atmxSvcVpCrossConnectHighTDIndex, xylnatmVclEntry=xylnatmVclEntry, xylnatmVclModDestPortIndex=xylnatmVclModDestPortIndex, xylnatmVclTransportPriority=xylnatmVclTransportPriority, xylnatmVclRmFwdCopy=xylnatmVclRmFwdCopy, xylnatmVplGcraBPoliceMode=xylnatmVplGcraBPoliceMode, atmxVccAal5CpcsReceiveSduSize=atmxVccAal5CpcsReceiveSduSize, xylnatmTrafficShaperMemEntry=xylnatmTrafficShaperMemEntry, xylnatmInterfaceIlmiStatus=xylnatmInterfaceIlmiStatus, atmxVclLastChange=atmxVclLastChange, xylnatmInterfaceType=xylnatmInterfaceType, xylnatmVclPrTrackPortBase=xylnatmVclPrTrackPortBase, xylnatmVplStatDxGcraBClp0Cells=xylnatmVplStatDxGcraBClp0Cells, xylnatmInterfaceTimingMode=xylnatmInterfaceTimingMode, xylnatmClockingxSrcOperState=xylnatmClockingxSrcOperState, xylnatmVclF4F5CopyEnd2End=xylnatmVclF4F5CopyEnd2End, xylnatmInterfaceSlotIndex=xylnatmInterfaceSlotIndex, xylnatmVplStatVpi=xylnatmVplStatVpi, xylnatmInterfaceStatEntry=xylnatmInterfaceStatEntry, xylnatmVclStatPortIndex=xylnatmVclStatPortIndex, xylnatmVclStatSlotIndex=xylnatmVclStatSlotIndex, xylnatmVcCrossConnectPvcIdentifier=xylnatmVcCrossConnectPvcIdentifier, xylnatmILMIConfEntry=xylnatmILMIConfEntry, xylnatmInterfaceStatGroup=xylnatmInterfaceStatGroup, xylnatmVclRmFwdEndpt=xylnatmVclRmFwdEndpt, atmxVplTransmitTrafficDescrIndex=atmxVplTransmitTrafficDescrIndex, xylnatmClockingxCtrlSrcLevel=xylnatmClockingxCtrlSrcLevel, atmxSvcVcCrossConnectHighSlotIndex=atmxSvcVcCrossConnectHighSlotIndex, xylnatmVclStatDxGcraClp1Cells=xylnatmVclStatDxGcraClp1Cells, xylnatmVpCrossConnectRowStatus=xylnatmVpCrossConnectRowStatus, atmxVcCrossConnectL2HOperStatus=atmxVcCrossConnectL2HOperStatus, atmxSvcVcCrossConnectRowStatus=atmxSvcVcCrossConnectRowStatus, atmxVcCrossConnectLowVpi=atmxVcCrossConnectLowVpi, xylnatmInterfaceStatDxCongClp1Cells=xylnatmInterfaceStatDxCongClp1Cells, xylnatmVclConnectionDescr=xylnatmVclConnectionDescr, xylnatmVcCrossConnectVcType=xylnatmVcCrossConnectVcType, xylnatmVpCrossConnectLowPortIndex=xylnatmVpCrossConnectLowPortIndex, xylnatmTrafficShaperMemVciNumIndex=xylnatmTrafficShaperMemVciNumIndex, xylnatmVcCrossConnectTable=xylnatmVcCrossConnectTable, xylnatmVclTable=xylnatmVclTable, xylnatmVplOamEndpt=xylnatmVplOamEndpt, atmxVplVpi=atmxVplVpi, atmxInterfaceConfVpcs=atmxInterfaceConfVpcs, atmxVplTable=atmxVplTable, xylnatmVplTable=xylnatmVplTable, xylnatmVplStatDxCongClp0Cells=xylnatmVplStatDxCongClp0Cells, xylnatmVclStatDxGcraClp0Cells=xylnatmVclStatDxGcraClp0Cells, atmxVcCrossConnectHighSlotIndex=atmxVcCrossConnectHighSlotIndex, xylnatmVclOamCopy=xylnatmVclOamCopy, xylnatmInterfaceStatRemainingTxBandwidth=xylnatmInterfaceStatRemainingTxBandwidth, xylnatmVclStatDxGcraBClp0Cells=xylnatmVclStatDxGcraBClp0Cells, xylnatmILMIConfAutoCfgDfltSigVer=xylnatmILMIConfAutoCfgDfltSigVer, xylnatmVpCrossConnectL2HOperStatus=xylnatmVpCrossConnectL2HOperStatus, atmxVpCrossConnectHighPortIndex=atmxVpCrossConnectHighPortIndex, atmxInterfaceAddressType=atmxInterfaceAddressType, xylnatmInterfaceStatUnknownVpVcCells=xylnatmInterfaceStatUnknownVpVcCells, atmxVplAdminStatus=atmxVplAdminStatus, atmxVcCrossConnectEntry=atmxVcCrossConnectEntry, atmxVpCrossConnectLowVpi=atmxVpCrossConnectLowVpi, xylnatmVclModDestVclVpi=xylnatmVclModDestVclVpi, xylnatmVplMcIngressEgress=xylnatmVplMcIngressEgress, xylnatmVclRmFwdGcraAdv=xylnatmVclRmFwdGcraAdv, xylnatmTrafficShaperMemVpiOper=xylnatmTrafficShaperMemVpiOper, atmxVplLastChange=atmxVplLastChange, xylnatmVclStatVci=xylnatmVclStatVci, xylnatmVcCrossConnectHighPortIndex=xylnatmVcCrossConnectHighPortIndex, atmxTrafficDescrGroup=atmxTrafficDescrGroup, xylnatmVclModPortIndex=xylnatmVclModPortIndex, xylnatmInterfaceStatMarkEfciCells=xylnatmInterfaceStatMarkEfciCells, xylnatmILMIConfAutoCfgCurIf=xylnatmILMIConfAutoCfgCurIf, xylnatmInterfaceStatRxCells=xylnatmInterfaceStatRxCells, atmxTrafficDescrParam1=atmxTrafficDescrParam1, xylnatmVcCrossConnectLowPortIndex=xylnatmVcCrossConnectLowPortIndex, xylnatmInterfaceStatDxCongClp0Cells=xylnatmInterfaceStatDxCongClp0Cells, xylnatmVclModSlotIndex=xylnatmVclModSlotIndex, xylnatmVcCrossConnectLowVci=xylnatmVcCrossConnectLowVci, xylnatmClockingxGlobalCST=xylnatmClockingxGlobalCST, atmxInterfaceIlmiVci=atmxInterfaceIlmiVci, xylnatmVcCrossConnectH2LLastChange=xylnatmVcCrossConnectH2LLastChange, xylnatmVplPrTrackPort2=xylnatmVplPrTrackPort2, xylnatmVplModPortIndex=xylnatmVplModPortIndex, atmxVclEntry=atmxVclEntry, xylnatmILMIConfAutoCfgStatus=xylnatmILMIConfAutoCfgStatus, atmxSvcVcCrossConnectLowPortIndex=atmxSvcVcCrossConnectLowPortIndex, xylnatmVplGcraAPoliceMode=xylnatmVplGcraAPoliceMode, xylnatmVplRmFwdCopy=xylnatmVplRmFwdCopy, xylnatmVplRmBkwdEndpt=xylnatmVplRmBkwdEndpt, xylnatmVclStatTxCells=xylnatmVclStatTxCells, xylnatmTrafficShaperMemTsNumIndex=xylnatmTrafficShaperMemTsNumIndex, xylnatmInterfacePortIndex=xylnatmInterfacePortIndex, xylnatmInterfaceAtmAddress=xylnatmInterfaceAtmAddress, xylnatmVclMcIngressEgress=xylnatmVclMcIngressEgress, xylnatmVplAltTrackPort3=xylnatmVplAltTrackPort3, xylnatmVplF4F5CopyEnd2End=xylnatmVplF4F5CopyEnd2End, xylnatmVplRmBkwdGcraAdv=xylnatmVplRmBkwdGcraAdv, xylnatmTrafficShaperMemSlotIndex=xylnatmTrafficShaperMemSlotIndex, xylnatmVcCrossConnectLowVpi=xylnatmVcCrossConnectLowVpi, xylnatmVpCrossConnectH2LOperStatus=xylnatmVpCrossConnectH2LOperStatus, xylnatmVplMcGroupId=xylnatmVplMcGroupId, xylnatmVplStatRxClp0Cells=xylnatmVplStatRxClp0Cells, xylnatmInterfaceTpRedirect=xylnatmInterfaceTpRedirect, xylnatmVplStatDxGcraClp0Cells=xylnatmVplStatDxGcraClp0Cells, xylnatmInterfaceCutOverSlot=xylnatmInterfaceCutOverSlot, xylnatmVplStatRxCells=xylnatmVplStatRxCells, atmxTrafficDescrParam5=atmxTrafficDescrParam5, atmxSvcVpCrossConnectHighVpi=atmxSvcVpCrossConnectHighVpi, xylnatmILMIConfAutoCfgCurILMIVer=xylnatmILMIConfAutoCfgCurILMIVer, xylanCsmMIB=xylanCsmMIB, atmxSvcVpCrossConnectTable=atmxSvcVpCrossConnectTable, xylnatmVclAAL5Discard=xylnatmVclAAL5Discard, xylnatmVplStatsMode=xylnatmVplStatsMode, xylnatmVplModSlotIndex=xylnatmVplModSlotIndex, atmxTrafficQoSClass=atmxTrafficQoSClass, atmxVcCrossConnectHighVpi=atmxVcCrossConnectHighVpi, xylnatmVplF4F5End2EndEndpt=xylnatmVplF4F5End2EndEndpt, xylnatmInterfaceOperStatus=xylnatmInterfaceOperStatus, atmxVplOperStatus=atmxVplOperStatus, xylnatmVclModDestSlotIndex=xylnatmVclModDestSlotIndex, xylnatmInterfaceStatUniVersion=xylnatmInterfaceStatUniVersion, atmxSvcVpCrossConnectCreationTime=atmxSvcVpCrossConnectCreationTime, xylnatmVclRmDiscard=xylnatmVclRmDiscard, xylnatmVplAltTrackPort2=xylnatmVplAltTrackPort2, xylnatmVcCrossConnectL2HLastChange=xylnatmVcCrossConnectL2HLastChange, xylnatmInterfaceStatUnknownVpiCells=xylnatmInterfaceStatUnknownVpiCells, xylnatmVclModDestVclVci=xylnatmVclModDestVclVci, xylnatmILMIConfAutoCfgCurSigVer=xylnatmILMIConfAutoCfgCurSigVer, atmxInterfacePortIndex=atmxInterfacePortIndex, atmxVpCrossConnectGroup=atmxVpCrossConnectGroup, atmxInterfaceConfEntry=atmxInterfaceConfEntry, atmxVcCrossConnectLowSlotIndex=atmxVcCrossConnectLowSlotIndex, xylnatmILMIConfAutoCfgTrigg=xylnatmILMIConfAutoCfgTrigg, xylnatmVclF4F5End2EndEndpt=xylnatmVclF4F5End2EndEndpt, xylnatmVplF4F5SegEndpt=xylnatmVplF4F5SegEndpt, xylnatmClockingxCtrlEntry=xylnatmClockingxCtrlEntry, atmxInterfaceMaxActiveVpiBits=atmxInterfaceMaxActiveVpiBits, atmxVclTable=atmxVclTable, atmxInterfaceConfVccs=atmxInterfaceConfVccs, xylnatmVcCrossConnectEntry=xylnatmVcCrossConnectEntry, xylnatmVclModTable=xylnatmVclModTable, xylnatmVclGcraBPoliceMode=xylnatmVclGcraBPoliceMode, xylnatmInterfaceClearSlotStats=xylnatmInterfaceClearSlotStats, xylnatmVplStatRxClp1Cells=xylnatmVplStatRxClp1Cells, atmxVplRowStatus=atmxVplRowStatus, xylnatmInterfaceConfEntry=xylnatmInterfaceConfEntry, xylnatmTrafficShaperMemPortIndex=xylnatmTrafficShaperMemPortIndex, atmxVclSlotIndex=atmxVclSlotIndex, xylnatmVplModDestStatus=xylnatmVplModDestStatus, atmxInterfaceMaxVccs=atmxInterfaceMaxVccs, xylnatmVclPrTrackPort3=xylnatmVclPrTrackPort3, atmxTrafficDescrParamTable=atmxTrafficDescrParamTable, xylnatmInterfacePortMode=xylnatmInterfacePortMode, xylnatmVclGcraAPoliceMode=xylnatmVclGcraAPoliceMode, atmxVclOperStatus=atmxVclOperStatus, xylnatmInterfaceTransmissionType=xylnatmInterfaceTransmissionType, atmxTrafficDescrParam4=atmxTrafficDescrParam4, atmxSvcVcCrossConnectHighTDIndex=atmxSvcVcCrossConnectHighTDIndex, xylnatmClockingxSrcType=xylnatmClockingxSrcType, xylnatmVplAAL5Discard=xylnatmVplAAL5Discard, xylnatmVclModDestStatus=xylnatmVclModDestStatus, xylnatmInterfaceStatTxCells=xylnatmInterfaceStatTxCells, xylnatmVplVpi=xylnatmVplVpi, xylnatmVclF4F5SegEndpt=xylnatmVclF4F5SegEndpt, atmxVclRowStatus=atmxVclRowStatus, atmxVpCrossConnectH2LOperStatus=atmxVpCrossConnectH2LOperStatus, atmxTrafficDescrParamEntry=atmxTrafficDescrParamEntry, atmxVcCrossConnectHighVci=atmxVcCrossConnectHighVci, atmxVplCrossConnectIdentifier=atmxVplCrossConnectIdentifier, atmxVclVci=atmxVclVci, xylnatmInterfaceConfTable=xylnatmInterfaceConfTable, xylnatmVpCrossConnectLowVpi=xylnatmVpCrossConnectLowVpi, xylnatmVplRmFwdGcraAdv=xylnatmVplRmFwdGcraAdv, xylnatmVpCrossConnectTable=xylnatmVpCrossConnectTable, xylnatmVplChanType=xylnatmVplChanType, xylnatmVclLgclChanRedirect=xylnatmVclLgclChanRedirect, xylnatmILMIConfPeerILMIVer=xylnatmILMIConfPeerILMIVer, xylnatmVplStatDxCongClp1Cells=xylnatmVplStatDxCongClp1Cells, atmxVpCrossConnectLowSlotIndex=atmxVpCrossConnectLowSlotIndex, xylnatmVplRmDiscard=xylnatmVplRmDiscard, xylnatmVplModDestPortIndex=xylnatmVplModDestPortIndex, atmxVpCrossConnectEntry=atmxVpCrossConnectEntry, xylnatmInterfaceStatMarkGcraCells=xylnatmInterfaceStatMarkGcraCells, xylnatmVclAltTrackPort2=xylnatmVclAltTrackPort2, atmxSvcVcCrossConnectTable=atmxSvcVcCrossConnectTable, atmxSvcVcCrossConnectCreationTime=atmxSvcVcCrossConnectCreationTime, xylnatmVplStatDxGcraClp1Cells=xylnatmVplStatDxGcraClp1Cells, xylnatmILMIConfAutoCfgDfltIf=xylnatmILMIConfAutoCfgDfltIf, atmxTrafficDescrRowStatus=atmxTrafficDescrRowStatus, xylnatmVclSlotIndex=xylnatmVclSlotIndex, atmxVclTransmitTrafficDescrIndex=atmxVclTransmitTrafficDescrIndex, xylnatmVclRmBkwdGcraAdv=xylnatmVclRmBkwdGcraAdv, xylnatmVpCrossConnectHighVpi=xylnatmVpCrossConnectHighVpi, xylnatmInterfaceCutOverPort=xylnatmInterfaceCutOverPort, xylnatmInterfaceStatPortIndex=xylnatmInterfaceStatPortIndex, xylnatmVpCrossConnectHighSlotIndex=xylnatmVpCrossConnectHighSlotIndex, xylnatmTrafficShaperMemVpiNumIndex=xylnatmTrafficShaperMemVpiNumIndex, xylnatmVclStatVpi=xylnatmVclStatVpi, xylnatmVplStatGroup=xylnatmVplStatGroup, atmxVplSlotIndex=atmxVplSlotIndex, atmxVpCrossConnectL2HOperStatus=atmxVpCrossConnectL2HOperStatus)
mibBuilder.exportSymbols("XYLAN-CSM-MIB", xylnatmVcCrossConnectLowTxTrafficDescrIndex=xylnatmVcCrossConnectLowTxTrafficDescrIndex, atmxTrafficDescrParamIndex=atmxTrafficDescrParamIndex, atmxVcCrossConnectLowPortIndex=atmxVcCrossConnectLowPortIndex, xylnatmVclChanType=xylnatmVclChanType, xylnatmTrafficShaperConfEntry=xylnatmTrafficShaperConfEntry, atmxVclCrossConnectIdentifier=atmxVclCrossConnectIdentifier, atmxSvcVcCrossConnectLowSlotIndex=atmxSvcVcCrossConnectLowSlotIndex, xylnatmInterfaceClearChanStats=xylnatmInterfaceClearChanStats, atmxVclAdminStatus=atmxVclAdminStatus, atmxSvcVpCrossConnectEntry=atmxSvcVpCrossConnectEntry, xylnatmInterfaceStatRxClp0Cells=xylnatmInterfaceStatRxClp0Cells, xylnatmVclRmBkwdEndpt=xylnatmVclRmBkwdEndpt, xylnatmInterfaceStatRxClp1Cells=xylnatmInterfaceStatRxClp1Cells, xylnatmVclF4F5CopySeg=xylnatmVclF4F5CopySeg, xylnatmVclStatDxGcraBClp1Cells=xylnatmVclStatDxGcraBClp1Cells, xylnatmInterfaceStatSlotIndex=xylnatmInterfaceStatSlotIndex, atmxVcCrossConnectIndex=atmxVcCrossConnectIndex, xylnatmVplEntry=xylnatmVplEntry, atmxVpCrossConnectL2HLastChange=atmxVpCrossConnectL2HLastChange, atmxVcCrossConnectH2LOperStatus=atmxVcCrossConnectH2LOperStatus, xylnatmVclVpi=xylnatmVclVpi, atmxSvcVpCrossConnectLowVpi=atmxSvcVpCrossConnectLowVpi, xylnatmVclStatEntry=xylnatmVclStatEntry, xylnatmInterfaceIlmiState=xylnatmInterfaceIlmiState, xylnatmVplStatDxGcraBClp1Cells=xylnatmVplStatDxGcraBClp1Cells, xylnatmVcCrossConnectConnectionId=xylnatmVcCrossConnectConnectionId, xylnatmVplPrTrackPortBase=xylnatmVplPrTrackPortBase, xylnatmVclUserPriority=xylnatmVclUserPriority, xylnatmInterfaceStatTable=xylnatmInterfaceStatTable, xylnatmVclModVclVci=xylnatmVclModVclVci, atmxSvcVpCrossConnectHighPortIndex=atmxSvcVpCrossConnectHighPortIndex, xylnatmInterfaceLocalSrc=xylnatmInterfaceLocalSrc, xylnatmVclMcGroupId=xylnatmVclMcGroupId, xylnatmVclModGroup=xylnatmVclModGroup, xylnatmVcCrossConnectHighVci=xylnatmVcCrossConnectHighVci, atmxTrafficDescrType=atmxTrafficDescrType, xylnatmVclStatDxCongClp1Cells=xylnatmVclStatDxCongClp1Cells, xylnatmVplStatTable=xylnatmVplStatTable, xylnatmVplTransportPriority=xylnatmVplTransportPriority, xylnatmVclAltTrackPortBase=xylnatmVclAltTrackPortBase, atmxSvcVpCrossConnectLowTDIndex=atmxSvcVpCrossConnectLowTDIndex, atmxSvcVcCrossConnectHighVpi=atmxSvcVcCrossConnectHighVpi, xylnatmVclOamEndpt=xylnatmVclOamEndpt, xylnatmTrafficShaperConfGroup=xylnatmTrafficShaperConfGroup, xylnatmTrafficShaperConfPCR=xylnatmTrafficShaperConfPCR, atmxVpCrossConnectHighVpi=atmxVpCrossConnectHighVpi, xylnatmInterfaceTransType=xylnatmInterfaceTransType, atmxVpCrossConnectAdminStatus=atmxVpCrossConnectAdminStatus, atmxInterfaceSlotIndex=atmxInterfaceSlotIndex, xylnatmVplStatTxCells=xylnatmVplStatTxCells, xylnatmVplUserPriority=xylnatmVplUserPriority, xylnatmTrafficShaperConfCDV=xylnatmTrafficShaperConfCDV, xylnatmTrafficShaperMemTable=xylnatmTrafficShaperMemTable, xylnatmVpCrossConnectHighPortIndex=xylnatmVpCrossConnectHighPortIndex, xylnatmVplAltTrackPortBase=xylnatmVplAltTrackPortBase, xylnatmVplF4F5CopySeg=xylnatmVplF4F5CopySeg, xylnatmInterfaceQsaalStatus=xylnatmInterfaceQsaalStatus, atmxSvcVpCrossConnectLowPortIndex=atmxSvcVpCrossConnectLowPortIndex, xylnatmVcCrossConnectMCastEnable=xylnatmVcCrossConnectMCastEnable, xylnatmInterfaceMediaType=xylnatmInterfaceMediaType, xylnatmClockingxCtrlPort=xylnatmClockingxCtrlPort, xylnatmVcCrossConnectHighVpi=xylnatmVcCrossConnectHighVpi, xylnatmTrafficShaperConfPortIndex=xylnatmTrafficShaperConfPortIndex, atmxVcCrossConnectTable=atmxVcCrossConnectTable, atmxTrafficDescrParam3=atmxTrafficDescrParam3, xylnatmVclPortIndex=xylnatmVclPortIndex, xylnatmVpCrossConnectPvcIdentifier=xylnatmVpCrossConnectPvcIdentifier, xylnatmInterfaceConfGroup=xylnatmInterfaceConfGroup, atmxVpCrossConnectH2LLastChange=atmxVpCrossConnectH2LLastChange, xylnatmVplPrTrackPort1=xylnatmVplPrTrackPort1, xylnatmILMIConfPort=xylnatmILMIConfPort, xylnatmVclStatsMode=xylnatmVclStatsMode, xylnatmVpCrossConnectH2LLastChange=xylnatmVpCrossConnectH2LLastChange, atmxSvcVcCrossConnectEntry=atmxSvcVcCrossConnectEntry, xylnatmVclPrTrackPort2=xylnatmVclPrTrackPort2, atmxSvcVcCrossConnectHighPortIndex=atmxSvcVcCrossConnectHighPortIndex, atmxVpCrossConnectLowPortIndex=atmxVpCrossConnectLowPortIndex, atmxVclVpi=atmxVclVpi, xylnatmInterfaceStatUnknownVciCells=xylnatmInterfaceStatUnknownVciCells, xylnatmVplModTable=xylnatmVplModTable, xylnatmVpCrossConnectConnectionId=xylnatmVpCrossConnectConnectionId, xylnatmVpCrossConnectLowSlotIndex=xylnatmVpCrossConnectLowSlotIndex, xylnatmVcCrossConnectHighSlotIndex=xylnatmVcCrossConnectHighSlotIndex, xylnatmVplRmFwdEndpt=xylnatmVplRmFwdEndpt, xylnatmVplStatSlotIndex=xylnatmVplStatSlotIndex, atmxSvcVcCrossConnectLowTDIndex=atmxSvcVcCrossConnectLowTDIndex, xylnatmVplAltTrackPort1=xylnatmVplAltTrackPort1, xylnatmTrafficShaperMemGroup=xylnatmTrafficShaperMemGroup, xylnatmVpCrossConnectMCastEnable=xylnatmVpCrossConnectMCastEnable, xylnatmTrafficShaperConfTsNumIndex=xylnatmTrafficShaperConfTsNumIndex, xylnatmVclStatGroup=xylnatmVclStatGroup, xylnatmVplRmBkwdCopy=xylnatmVplRmBkwdCopy, atmxVpCrossConnectIndex=atmxVpCrossConnectIndex, atmxVclBidirect=atmxVclBidirect, atmxVplGroup=atmxVplGroup, xylnatmInterfaceDescription=xylnatmInterfaceDescription, xylnatmVplSlotIndex=xylnatmVplSlotIndex, xylnatmInterfaceStatDxGcraClp1Cells=xylnatmInterfaceStatDxGcraClp1Cells, atmxVcCrossConnectH2LLastChange=atmxVcCrossConnectH2LLastChange, xylnatmTrafficShaperConfSCR=xylnatmTrafficShaperConfSCR, xylnatmClockingxCtrlBusLine=xylnatmClockingxCtrlBusLine, xylnatmILMIConfILMIEnable=xylnatmILMIConfILMIEnable, xylnatmVcCrossConnectGroup=xylnatmVcCrossConnectGroup, atmxVcCrossConnectLowVci=atmxVcCrossConnectLowVci, xylnatmVclVci=xylnatmVclVci, xylnatmVclStatRxClp0Cells=xylnatmVclStatRxClp0Cells, xylnatmVplStatEntry=xylnatmVplStatEntry, xylnatmILMIConfAutoCfgEnable=xylnatmILMIConfAutoCfgEnable, xylnatmVcCrossConnectLowRxTrafficDescrIndex=xylnatmVcCrossConnectLowRxTrafficDescrIndex, xylnatmVclAltTrackPort1=xylnatmVclAltTrackPort1, atmxVccAalType=atmxVccAalType, xylnatmILMIConfInstance=xylnatmILMIConfInstance, xylnatmVplConnectionDescr=xylnatmVplConnectionDescr, xylnatmILMIConfPeerDevType=xylnatmILMIConfPeerDevType, xylnatmVplModVplVpi=xylnatmVplModVplVpi, atmxVcCrossConnectL2HLastChange=atmxVcCrossConnectL2HLastChange, atmxVcCrossConnectRowStatus=atmxVcCrossConnectRowStatus, atmxInterfaceConfGroup=atmxInterfaceConfGroup, xylnatmVclModVclVpi=xylnatmVclModVclVpi, xylnatmInterfaceStatDxGcrabClp0Cells=xylnatmInterfaceStatDxGcrabClp0Cells, atmxSvcVcCrossConnectLowVci=atmxSvcVcCrossConnectLowVci, xylnatmVplPortIndex=xylnatmVplPortIndex, xylnatmClockingxCtrlGroup=xylnatmClockingxCtrlGroup, atmxVpCrossConnectHighSlotIndex=atmxVpCrossConnectHighSlotIndex, atmxVpCrossConnectRowStatus=atmxVpCrossConnectRowStatus, atmxSvcVpCrossConnectHighSlotIndex=atmxSvcVpCrossConnectHighSlotIndex, xylnatmVclStatDxCongClp0Cells=xylnatmVclStatDxCongClp0Cells, atmxVplBidirect=atmxVplBidirect, xylnatmILMIConfPeerNNISigVer=xylnatmILMIConfPeerNNISigVer, atmxSvcVpCrossConnectLowSlotIndex=atmxSvcVpCrossConnectLowSlotIndex, atmxVccAal5EncapsType=atmxVccAal5EncapsType, xylnatmVplLgclChanRedirect=xylnatmVplLgclChanRedirect, atmxVplPortIndex=atmxVplPortIndex, xylnatmInterfaceUniVersion=xylnatmInterfaceUniVersion, xylnatmInterfaceStatDxGcraClp0Cells=xylnatmInterfaceStatDxGcraClp0Cells, xylnatmVplOamCopy=xylnatmVplOamCopy, atmxVcCrossConnectHighPortIndex=atmxVcCrossConnectHighPortIndex, xylnatmTrafficShaperConfSlotIndex=xylnatmTrafficShaperConfSlotIndex, xylnatmVplStatPortIndex=xylnatmVplStatPortIndex, xylnatmVclStatTable=xylnatmVclStatTable)
