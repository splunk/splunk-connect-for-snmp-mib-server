#
# PySNMP MIB module CHIPTRNET-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CHIPTRNET-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:31:31 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ConstraintsUnion, ConstraintsIntersection, ValueSizeConstraint, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ConstraintsUnion", "ConstraintsIntersection", "ValueSizeConstraint", "ValueRangeConstraint")
DisplayString, = mibBuilder.importSymbols("RFC1155-SMI", "DisplayString")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
iso, Counter64, ObjectIdentity, TimeTicks, Counter32, NotificationType, Unsigned32, IpAddress, MibIdentifier, Bits, ModuleIdentity, Integer32, MibScalar, MibTable, MibTableRow, MibTableColumn, Gauge32, enterprises = mibBuilder.importSymbols("SNMPv2-SMI", "iso", "Counter64", "ObjectIdentity", "TimeTicks", "Counter32", "NotificationType", "Unsigned32", "IpAddress", "MibIdentifier", "Bits", "ModuleIdentity", "Integer32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Gauge32", "enterprises")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
class MacAddress(OctetString):
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(6, 6)
    fixedLength = 6

chipcom = MibIdentifier((1, 3, 6, 1, 4, 1, 49))
chipmib02 = MibIdentifier((1, 3, 6, 1, 4, 1, 49, 2))
chipGen = MibIdentifier((1, 3, 6, 1, 4, 1, 49, 2, 1))
chipEcho = MibIdentifier((1, 3, 6, 1, 4, 1, 49, 2, 2))
chipProducts = MibIdentifier((1, 3, 6, 1, 4, 1, 49, 2, 3))
chipExperiment = MibIdentifier((1, 3, 6, 1, 4, 1, 49, 2, 4))
chipTTY = MibIdentifier((1, 3, 6, 1, 4, 1, 49, 2, 5))
chipTFTP = MibIdentifier((1, 3, 6, 1, 4, 1, 49, 2, 6))
chipDownload = MibIdentifier((1, 3, 6, 1, 4, 1, 49, 2, 7))
online = MibIdentifier((1, 3, 6, 1, 4, 1, 49, 2, 3, 1))
oebm = MibIdentifier((1, 3, 6, 1, 4, 1, 49, 2, 3, 2))
midnight = MibIdentifier((1, 3, 6, 1, 4, 1, 49, 2, 3, 3))
workGroupHub = MibIdentifier((1, 3, 6, 1, 4, 1, 49, 2, 3, 4))
emm = MibIdentifier((1, 3, 6, 1, 4, 1, 49, 2, 3, 5))
chipBridge = MibIdentifier((1, 3, 6, 1, 4, 1, 49, 2, 3, 6))
trmm = MibIdentifier((1, 3, 6, 1, 4, 1, 49, 2, 3, 7))
fmm = MibIdentifier((1, 3, 6, 1, 4, 1, 49, 2, 3, 8))
focus1 = MibIdentifier((1, 3, 6, 1, 4, 1, 49, 2, 3, 9))
oeim = MibIdentifier((1, 3, 6, 1, 4, 1, 49, 2, 3, 10))
chipExpTokenRing = MibIdentifier((1, 3, 6, 1, 4, 1, 49, 2, 4, 1))
dot1dBridge = MibIdentifier((1, 3, 6, 1, 4, 1, 49, 2, 4, 14))
dot5 = MibIdentifier((1, 3, 6, 1, 4, 1, 49, 2, 4, 1, 1))
olAgents = MibIdentifier((1, 3, 6, 1, 4, 1, 49, 2, 3, 1, 1))
olConc = MibIdentifier((1, 3, 6, 1, 4, 1, 49, 2, 3, 1, 2))
olEnv = MibIdentifier((1, 3, 6, 1, 4, 1, 49, 2, 3, 1, 3))
olModules = MibIdentifier((1, 3, 6, 1, 4, 1, 49, 2, 3, 1, 4))
olNets = MibIdentifier((1, 3, 6, 1, 4, 1, 49, 2, 3, 1, 5))
olGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 49, 2, 3, 1, 6))
olAlarm = MibIdentifier((1, 3, 6, 1, 4, 1, 49, 2, 3, 1, 7))
olSpecMods = MibIdentifier((1, 3, 6, 1, 4, 1, 49, 2, 3, 1, 4, 4))
ol50nnMCTL = MibIdentifier((1, 3, 6, 1, 4, 1, 49, 2, 3, 1, 4, 4, 3))
ol51nnMMGT = MibIdentifier((1, 3, 6, 1, 4, 1, 49, 2, 3, 1, 4, 4, 4))
ol51nnMFIB = MibIdentifier((1, 3, 6, 1, 4, 1, 49, 2, 3, 1, 4, 4, 5))
ol51nnMUTP = MibIdentifier((1, 3, 6, 1, 4, 1, 49, 2, 3, 1, 4, 4, 6))
ol51nnMTP = MibIdentifier((1, 3, 6, 1, 4, 1, 49, 2, 3, 1, 4, 4, 7))
ol51nnMBNC = MibIdentifier((1, 3, 6, 1, 4, 1, 49, 2, 3, 1, 4, 4, 8))
ol51nnBEE = MibIdentifier((1, 3, 6, 1, 4, 1, 49, 2, 3, 1, 4, 4, 9))
ol51nnRES = MibIdentifier((1, 3, 6, 1, 4, 1, 49, 2, 3, 1, 4, 4, 10))
ol51nnREE = MibIdentifier((1, 3, 6, 1, 4, 1, 49, 2, 3, 1, 4, 4, 11))
ol51nnMAUIF = MibIdentifier((1, 3, 6, 1, 4, 1, 49, 2, 3, 1, 4, 4, 12))
ol51nnMAUIM = MibIdentifier((1, 3, 6, 1, 4, 1, 49, 2, 3, 1, 4, 4, 13))
ol5208MTP = MibIdentifier((1, 3, 6, 1, 4, 1, 49, 2, 3, 1, 4, 4, 14))
ol51nnMFP = MibIdentifier((1, 3, 6, 1, 4, 1, 49, 2, 3, 1, 4, 4, 15))
ol51nnMFBP = MibIdentifier((1, 3, 6, 1, 4, 1, 49, 2, 3, 1, 4, 4, 16))
ol51nnMTPL = MibIdentifier((1, 3, 6, 1, 4, 1, 49, 2, 3, 1, 4, 4, 17))
ol51nnMTPPL = MibIdentifier((1, 3, 6, 1, 4, 1, 49, 2, 3, 1, 4, 4, 18))
ol52nnMTP = MibIdentifier((1, 3, 6, 1, 4, 1, 49, 2, 3, 1, 4, 4, 19))
ol52nnMFR = MibIdentifier((1, 3, 6, 1, 4, 1, 49, 2, 3, 1, 4, 4, 20))
ol51nnMTS = MibIdentifier((1, 3, 6, 1, 4, 1, 49, 2, 3, 1, 4, 4, 21))
ol51nnMFL = MibIdentifier((1, 3, 6, 1, 4, 1, 49, 2, 3, 1, 4, 4, 22))
ol50nnMRCTL = MibIdentifier((1, 3, 6, 1, 4, 1, 49, 2, 3, 1, 4, 4, 23))
ol51nnMFB = MibIdentifier((1, 3, 6, 1, 4, 1, 49, 2, 3, 1, 4, 4, 24))
ol53nnMMGT = MibIdentifier((1, 3, 6, 1, 4, 1, 49, 2, 3, 1, 4, 4, 25))
ol53nnMFBMIC = MibIdentifier((1, 3, 6, 1, 4, 1, 49, 2, 3, 1, 4, 4, 26))
ol53nnMFIBST = MibIdentifier((1, 3, 6, 1, 4, 1, 49, 2, 3, 1, 4, 4, 27))
ol53nnMSTP = MibIdentifier((1, 3, 6, 1, 4, 1, 49, 2, 3, 1, 4, 4, 28))
ol51nnMTPCL = MibIdentifier((1, 3, 6, 1, 4, 1, 49, 2, 3, 1, 4, 4, 29))
ol52nnBTT = MibIdentifier((1, 3, 6, 1, 4, 1, 49, 2, 3, 1, 4, 4, 30))
ol51nnIx = MibIdentifier((1, 3, 6, 1, 4, 1, 49, 2, 3, 1, 4, 4, 31))
ol52nnMMGT = MibIdentifier((1, 3, 6, 1, 4, 1, 49, 2, 3, 1, 4, 4, 32))
ol50nnMHCTL = MibIdentifier((1, 3, 6, 1, 4, 1, 49, 2, 3, 1, 4, 4, 33))
olNet = MibIdentifier((1, 3, 6, 1, 4, 1, 49, 2, 3, 1, 5, 1))
olEnet = MibIdentifier((1, 3, 6, 1, 4, 1, 49, 2, 3, 1, 5, 2))
olTRnet = MibIdentifier((1, 3, 6, 1, 4, 1, 49, 2, 3, 1, 5, 3))
olFDDInet = MibIdentifier((1, 3, 6, 1, 4, 1, 49, 2, 3, 1, 5, 4))
hubSysGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 49, 2, 3, 4, 1))
hardwareGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 49, 2, 3, 4, 2))
softwareGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 49, 2, 3, 4, 3))
hubGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 49, 2, 3, 4, 4))
boardGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 49, 2, 3, 4, 5))
portGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 49, 2, 3, 4, 6))
alarmGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 49, 2, 3, 4, 7))
olThresh = MibIdentifier((1, 3, 6, 1, 4, 1, 49, 2, 3, 1, 7, 1))
olThreshControl = MibIdentifier((1, 3, 6, 1, 4, 1, 49, 2, 3, 1, 7, 1, 1))
olTRnetMapState = MibScalar((1, 3, 6, 1, 4, 1, 49, 2, 3, 1, 5, 3, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("changing", 1), ("notChanging", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: olTRnetMapState.setStatus('mandatory')
olTRnetStatsTable = MibTable((1, 3, 6, 1, 4, 1, 49, 2, 3, 1, 5, 3, 2), )
if mibBuilder.loadTexts: olTRnetStatsTable.setStatus('mandatory')
olTRnetStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 49, 2, 3, 1, 5, 3, 2, 1), ).setIndexNames((0, "CHIPTRNET-MIB", "olTRnetStatsNetID"))
if mibBuilder.loadTexts: olTRnetStatsEntry.setStatus('mandatory')
olTRnetStatsNetID = MibTableColumn((1, 3, 6, 1, 4, 1, 49, 2, 3, 1, 5, 3, 2, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(2, 9, 10, 11, 12, 13, 14, 15))).clone(namedValues=NamedValues(("isolated", 2), ("token-ring-1", 9), ("token-ring-2", 10), ("token-ring-3", 11), ("token-ring-4", 12), ("token-ring-5", 13), ("token-ring-6", 14), ("token-ring-7", 15)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: olTRnetStatsNetID.setStatus('mandatory')
olTRnetStatsLineErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 49, 2, 3, 1, 5, 3, 2, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: olTRnetStatsLineErrors.setStatus('mandatory')
olTRnetStatsBurstErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 49, 2, 3, 1, 5, 3, 2, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: olTRnetStatsBurstErrors.setStatus('mandatory')
olTRnetStatsACErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 49, 2, 3, 1, 5, 3, 2, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: olTRnetStatsACErrors.setStatus('mandatory')
olTRnetStatsLostFrameErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 49, 2, 3, 1, 5, 3, 2, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: olTRnetStatsLostFrameErrors.setStatus('mandatory')
olTRnetStatsCongestionErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 49, 2, 3, 1, 5, 3, 2, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: olTRnetStatsCongestionErrors.setStatus('mandatory')
olTRnetStatsFrameCopiedErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 49, 2, 3, 1, 5, 3, 2, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: olTRnetStatsFrameCopiedErrors.setStatus('mandatory')
olTRnetStatsTokenErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 49, 2, 3, 1, 5, 3, 2, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: olTRnetStatsTokenErrors.setStatus('mandatory')
olTRnetStatsDuplicateAddresses = MibTableColumn((1, 3, 6, 1, 4, 1, 49, 2, 3, 1, 5, 3, 2, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: olTRnetStatsDuplicateAddresses.setStatus('mandatory')
olTRnetStatsBeaconEvents = MibTableColumn((1, 3, 6, 1, 4, 1, 49, 2, 3, 1, 5, 3, 2, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: olTRnetStatsBeaconEvents.setStatus('mandatory')
olTRnetStatsLastBeaconSender = MibTableColumn((1, 3, 6, 1, 4, 1, 49, 2, 3, 1, 5, 3, 2, 1, 11), OctetString().subtype(subtypeSpec=ValueSizeConstraint(6, 6)).setFixedLength(6)).setMaxAccess("readonly")
if mibBuilder.loadTexts: olTRnetStatsLastBeaconSender.setStatus('mandatory')
olTRnetStatsLastBeaconNAUN = MibTableColumn((1, 3, 6, 1, 4, 1, 49, 2, 3, 1, 5, 3, 2, 1, 12), OctetString().subtype(subtypeSpec=ValueSizeConstraint(6, 6)).setFixedLength(6)).setMaxAccess("readonly")
if mibBuilder.loadTexts: olTRnetStatsLastBeaconNAUN.setStatus('mandatory')
olTRnetStatsLastBeaconTime = MibTableColumn((1, 3, 6, 1, 4, 1, 49, 2, 3, 1, 5, 3, 2, 1, 13), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: olTRnetStatsLastBeaconTime.setStatus('mandatory')
olTRnetStatsLastBeaconAction = MibTableColumn((1, 3, 6, 1, 4, 1, 49, 2, 3, 1, 5, 3, 2, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("noAction", 1), ("portDisable", 2), ("trunkDisable", 3), ("moduleIsolate", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: olTRnetStatsLastBeaconAction.setStatus('mandatory')
olTRnetStatsTotalStations = MibTableColumn((1, 3, 6, 1, 4, 1, 49, 2, 3, 1, 5, 3, 2, 1, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: olTRnetStatsTotalStations.setStatus('mandatory')
olTRnetStatsConcStations = MibTableColumn((1, 3, 6, 1, 4, 1, 49, 2, 3, 1, 5, 3, 2, 1, 16), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: olTRnetStatsConcStations.setStatus('mandatory')
olTRnetStatsTotalPorts = MibTableColumn((1, 3, 6, 1, 4, 1, 49, 2, 3, 1, 5, 3, 2, 1, 17), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: olTRnetStatsTotalPorts.setStatus('mandatory')
olTRnetStatsEnabledPorts = MibTableColumn((1, 3, 6, 1, 4, 1, 49, 2, 3, 1, 5, 3, 2, 1, 18), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: olTRnetStatsEnabledPorts.setStatus('mandatory')
olTRnetStatsActivePorts = MibTableColumn((1, 3, 6, 1, 4, 1, 49, 2, 3, 1, 5, 3, 2, 1, 19), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: olTRnetStatsActivePorts.setStatus('mandatory')
olTRnetStatsStationTable = MibTable((1, 3, 6, 1, 4, 1, 49, 2, 3, 1, 5, 3, 3), )
if mibBuilder.loadTexts: olTRnetStatsStationTable.setStatus('mandatory')
olTRnetStatsStationEntry = MibTableRow((1, 3, 6, 1, 4, 1, 49, 2, 3, 1, 5, 3, 3, 1), ).setIndexNames((0, "CHIPTRNET-MIB", "olTRnetStatsStationNetID"), (0, "CHIPTRNET-MIB", "olTRnetStatsStationAddr"))
if mibBuilder.loadTexts: olTRnetStatsStationEntry.setStatus('mandatory')
olTRnetStatsStationNetID = MibTableColumn((1, 3, 6, 1, 4, 1, 49, 2, 3, 1, 5, 3, 3, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(2, 9, 10, 11, 12, 13, 14, 15))).clone(namedValues=NamedValues(("isolated", 2), ("token-ring-1", 9), ("token-ring-2", 10), ("token-ring-3", 11), ("token-ring-4", 12), ("token-ring-5", 13), ("token-ring-6", 14), ("token-ring-7", 15)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: olTRnetStatsStationNetID.setStatus('mandatory')
olTRnetStatsStationAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 49, 2, 3, 1, 5, 3, 3, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(6, 6)).setFixedLength(6)).setMaxAccess("readonly")
if mibBuilder.loadTexts: olTRnetStatsStationAddr.setStatus('mandatory')
olTRnetStatsStationSlotIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 49, 2, 3, 1, 5, 3, 3, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 255))).clone(namedValues=NamedValues(("slot-1", 1), ("slot-2", 2), ("slot-3", 3), ("slot-4", 4), ("slot-5", 5), ("slot-6", 6), ("slot-7", 7), ("slot-8", 8), ("slot-9", 9), ("slot-10", 10), ("slot-11", 11), ("slot-12", 12), ("slot-13", 13), ("slot-14", 14), ("slot-15", 15), ("slot-16", 16), ("slot-17", 17), ("external", 255)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: olTRnetStatsStationSlotIndex.setStatus('mandatory')
olTRnetStatsStationPortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 49, 2, 3, 1, 5, 3, 3, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: olTRnetStatsStationPortIndex.setStatus('mandatory')
olTRnetStatsStationNAUNAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 49, 2, 3, 1, 5, 3, 3, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(6, 6)).setFixedLength(6)).setMaxAccess("readonly")
if mibBuilder.loadTexts: olTRnetStatsStationNAUNAddress.setStatus('mandatory')
olTRnetStatsStationLineErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 49, 2, 3, 1, 5, 3, 3, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: olTRnetStatsStationLineErrors.setStatus('mandatory')
olTRnetStatsStationBurstErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 49, 2, 3, 1, 5, 3, 3, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: olTRnetStatsStationBurstErrors.setStatus('mandatory')
olTRnetStatsStationACErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 49, 2, 3, 1, 5, 3, 3, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: olTRnetStatsStationACErrors.setStatus('mandatory')
olTRnetStatsStationLostFrameErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 49, 2, 3, 1, 5, 3, 3, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: olTRnetStatsStationLostFrameErrors.setStatus('mandatory')
olTRnetStatsStationCongestionErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 49, 2, 3, 1, 5, 3, 3, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: olTRnetStatsStationCongestionErrors.setStatus('mandatory')
olTRnetStatsStationFrameCopiedErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 49, 2, 3, 1, 5, 3, 3, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: olTRnetStatsStationFrameCopiedErrors.setStatus('mandatory')
olTRnetStatsStationTokenErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 49, 2, 3, 1, 5, 3, 3, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: olTRnetStatsStationTokenErrors.setStatus('mandatory')
olTRnetStatsStationDuplicateAddresses = MibTableColumn((1, 3, 6, 1, 4, 1, 49, 2, 3, 1, 5, 3, 3, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: olTRnetStatsStationDuplicateAddresses.setStatus('mandatory')
olTRnetStatsPortTable = MibTable((1, 3, 6, 1, 4, 1, 49, 2, 3, 1, 5, 3, 4), )
if mibBuilder.loadTexts: olTRnetStatsPortTable.setStatus('mandatory')
olTRnetStatsPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 49, 2, 3, 1, 5, 3, 4, 1), ).setIndexNames((0, "CHIPTRNET-MIB", "olTRnetStatsPortSlotIndex"), (0, "CHIPTRNET-MIB", "olTRnetStatsPortIndex"))
if mibBuilder.loadTexts: olTRnetStatsPortEntry.setStatus('mandatory')
olTRnetStatsPortSlotIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 49, 2, 3, 1, 5, 3, 4, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: olTRnetStatsPortSlotIndex.setStatus('mandatory')
olTRnetStatsPortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 49, 2, 3, 1, 5, 3, 4, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: olTRnetStatsPortIndex.setStatus('mandatory')
olTRnetStatsPortNetID = MibTableColumn((1, 3, 6, 1, 4, 1, 49, 2, 3, 1, 5, 3, 4, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(2, 9, 10, 11, 12, 13, 14, 15))).clone(namedValues=NamedValues(("isolated", 2), ("token-ring-1", 9), ("token-ring-2", 10), ("token-ring-3", 11), ("token-ring-4", 12), ("token-ring-5", 13), ("token-ring-6", 14), ("token-ring-7", 15)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: olTRnetStatsPortNetID.setStatus('mandatory')
olTRnetStatsPortTotalStations = MibTableColumn((1, 3, 6, 1, 4, 1, 49, 2, 3, 1, 5, 3, 4, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: olTRnetStatsPortTotalStations.setStatus('mandatory')
olTRnetStatsPortAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 49, 2, 3, 1, 5, 3, 4, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(6, 6)).setFixedLength(6)).setMaxAccess("readonly")
if mibBuilder.loadTexts: olTRnetStatsPortAddress.setStatus('mandatory')
olTRnetStatsPortLineErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 49, 2, 3, 1, 5, 3, 4, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: olTRnetStatsPortLineErrors.setStatus('mandatory')
olTRnetStatsPortBurstErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 49, 2, 3, 1, 5, 3, 4, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: olTRnetStatsPortBurstErrors.setStatus('mandatory')
olTRnetStatsPortACErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 49, 2, 3, 1, 5, 3, 4, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: olTRnetStatsPortACErrors.setStatus('mandatory')
olTRnetStatsPortLostFrameErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 49, 2, 3, 1, 5, 3, 4, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: olTRnetStatsPortLostFrameErrors.setStatus('mandatory')
olTRnetStatsPortCongestionErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 49, 2, 3, 1, 5, 3, 4, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: olTRnetStatsPortCongestionErrors.setStatus('mandatory')
olTRnetStatsPortFrameCopiedErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 49, 2, 3, 1, 5, 3, 4, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: olTRnetStatsPortFrameCopiedErrors.setStatus('mandatory')
olTRnetStatsPortTokenErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 49, 2, 3, 1, 5, 3, 4, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: olTRnetStatsPortTokenErrors.setStatus('mandatory')
olTRnetStatsPortDuplicateAddresses = MibTableColumn((1, 3, 6, 1, 4, 1, 49, 2, 3, 1, 5, 3, 4, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: olTRnetStatsPortDuplicateAddresses.setStatus('mandatory')
olTRnetMapSummary = MibIdentifier((1, 3, 6, 1, 4, 1, 49, 2, 3, 1, 5, 3, 5))
olTRnetMapSummaryLogicalState = MibScalar((1, 3, 6, 1, 4, 1, 49, 2, 3, 1, 5, 3, 5, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("changing", 1), ("notChanging", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: olTRnetMapSummaryLogicalState.setStatus('mandatory')
olTRnetMapSummaryLogicalLock = MibScalar((1, 3, 6, 1, 4, 1, 49, 2, 3, 1, 5, 3, 5, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("lock", 1), ("unlock", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: olTRnetMapSummaryLogicalLock.setStatus('mandatory')
olTRnetMapSummaryTable = MibTable((1, 3, 6, 1, 4, 1, 49, 2, 3, 1, 5, 3, 5, 3), )
if mibBuilder.loadTexts: olTRnetMapSummaryTable.setStatus('mandatory')
olTRnetMapSummaryEntry = MibTableRow((1, 3, 6, 1, 4, 1, 49, 2, 3, 1, 5, 3, 5, 3, 1), ).setIndexNames((0, "CHIPTRNET-MIB", "olTRnetMapSummaryNetID"), (0, "CHIPTRNET-MIB", "olTRnetMapSummaryIndex"))
if mibBuilder.loadTexts: olTRnetMapSummaryEntry.setStatus('mandatory')
olTRnetMapSummaryNetID = MibTableColumn((1, 3, 6, 1, 4, 1, 49, 2, 3, 1, 5, 3, 5, 3, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(2, 9, 10, 11, 12, 13, 14, 15))).clone(namedValues=NamedValues(("isolated", 2), ("token-ring-1", 9), ("token-ring-2", 10), ("token-ring-3", 11), ("token-ring-4", 12), ("token-ring-5", 13), ("token-ring-6", 14), ("token-ring-7", 15)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: olTRnetMapSummaryNetID.setStatus('mandatory')
olTRnetMapSummaryIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 49, 2, 3, 1, 5, 3, 5, 3, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: olTRnetMapSummaryIndex.setStatus('mandatory')
olTRnetMapSummary32Stations = MibTableColumn((1, 3, 6, 1, 4, 1, 49, 2, 3, 1, 5, 3, 5, 3, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(8, 256))).setMaxAccess("readonly")
if mibBuilder.loadTexts: olTRnetMapSummary32Stations.setStatus('mandatory')
olTRTrafTable = MibTable((1, 3, 6, 1, 4, 1, 49, 2, 3, 1, 5, 3, 6), )
if mibBuilder.loadTexts: olTRTrafTable.setStatus('mandatory')
olTRTrafEntry = MibTableRow((1, 3, 6, 1, 4, 1, 49, 2, 3, 1, 5, 3, 6, 1), ).setIndexNames((0, "CHIPTRNET-MIB", "olTRTrafNetID"))
if mibBuilder.loadTexts: olTRTrafEntry.setStatus('mandatory')
olTRTrafNetID = MibTableColumn((1, 3, 6, 1, 4, 1, 49, 2, 3, 1, 5, 3, 6, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(2, 9, 10, 11, 12, 13, 14, 15))).clone(namedValues=NamedValues(("isolated", 2), ("token-ring-1", 9), ("token-ring-2", 10), ("token-ring-3", 11), ("token-ring-4", 12), ("token-ring-5", 13), ("token-ring-6", 14), ("token-ring-7", 15)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: olTRTrafNetID.setStatus('mandatory')
olTRTrafTokenRotationTime = MibTableColumn((1, 3, 6, 1, 4, 1, 49, 2, 3, 1, 5, 3, 6, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: olTRTrafTokenRotationTime.setStatus('mandatory')
olTRTrafDropEvents = MibTableColumn((1, 3, 6, 1, 4, 1, 49, 2, 3, 1, 5, 3, 6, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: olTRTrafDropEvents.setStatus('mandatory')
olTRTrafOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 49, 2, 3, 1, 5, 3, 6, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: olTRTrafOctets.setStatus('mandatory')
olTRTrafFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 49, 2, 3, 1, 5, 3, 6, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: olTRTrafFrames.setStatus('mandatory')
olTRTrafMacOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 49, 2, 3, 1, 5, 3, 6, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: olTRTrafMacOctets.setStatus('mandatory')
olTRTrafMacFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 49, 2, 3, 1, 5, 3, 6, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: olTRTrafMacFrames.setStatus('mandatory')
olTRTrafBroadcastFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 49, 2, 3, 1, 5, 3, 6, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: olTRTrafBroadcastFrames.setStatus('mandatory')
olTRTrafMulticastFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 49, 2, 3, 1, 5, 3, 6, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: olTRTrafMulticastFrames.setStatus('mandatory')
olTRTrafFrames18to63Octets = MibTableColumn((1, 3, 6, 1, 4, 1, 49, 2, 3, 1, 5, 3, 6, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: olTRTrafFrames18to63Octets.setStatus('mandatory')
olTRTrafFrames64to127Octets = MibTableColumn((1, 3, 6, 1, 4, 1, 49, 2, 3, 1, 5, 3, 6, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: olTRTrafFrames64to127Octets.setStatus('mandatory')
olTRTrafFrames128to255Octets = MibTableColumn((1, 3, 6, 1, 4, 1, 49, 2, 3, 1, 5, 3, 6, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: olTRTrafFrames128to255Octets.setStatus('mandatory')
olTRTrafFrames256to511Octets = MibTableColumn((1, 3, 6, 1, 4, 1, 49, 2, 3, 1, 5, 3, 6, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: olTRTrafFrames256to511Octets.setStatus('mandatory')
olTRTrafFrames512to1023Octets = MibTableColumn((1, 3, 6, 1, 4, 1, 49, 2, 3, 1, 5, 3, 6, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: olTRTrafFrames512to1023Octets.setStatus('mandatory')
olTRTrafFrames1024to2047Octets = MibTableColumn((1, 3, 6, 1, 4, 1, 49, 2, 3, 1, 5, 3, 6, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: olTRTrafFrames1024to2047Octets.setStatus('mandatory')
olTRTrafFrames2048to4095Octets = MibTableColumn((1, 3, 6, 1, 4, 1, 49, 2, 3, 1, 5, 3, 6, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: olTRTrafFrames2048to4095Octets.setStatus('mandatory')
olTRTrafFrames4096to8191Octets = MibTableColumn((1, 3, 6, 1, 4, 1, 49, 2, 3, 1, 5, 3, 6, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: olTRTrafFrames4096to8191Octets.setStatus('mandatory')
olTRTrafFrames8192to18000Octets = MibTableColumn((1, 3, 6, 1, 4, 1, 49, 2, 3, 1, 5, 3, 6, 1, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: olTRTrafFrames8192to18000Octets.setStatus('mandatory')
olTRTrafFramesGreaterThan18000Octets = MibTableColumn((1, 3, 6, 1, 4, 1, 49, 2, 3, 1, 5, 3, 6, 1, 19), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: olTRTrafFramesGreaterThan18000Octets.setStatus('mandatory')
olTRTrafControlTable = MibTable((1, 3, 6, 1, 4, 1, 49, 2, 3, 1, 5, 3, 7), )
if mibBuilder.loadTexts: olTRTrafControlTable.setStatus('mandatory')
olTRTrafControlEntry = MibTableRow((1, 3, 6, 1, 4, 1, 49, 2, 3, 1, 5, 3, 7, 1), ).setIndexNames((0, "CHIPTRNET-MIB", "olTRTrafControlNetID"))
if mibBuilder.loadTexts: olTRTrafControlEntry.setStatus('mandatory')
olTRTrafControlNetID = MibTableColumn((1, 3, 6, 1, 4, 1, 49, 2, 3, 1, 5, 3, 7, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(2, 9, 10, 11, 12, 13, 14, 15))).clone(namedValues=NamedValues(("isolated", 2), ("token-ring-1", 9), ("token-ring-2", 10), ("token-ring-3", 11), ("token-ring-4", 12), ("token-ring-5", 13), ("token-ring-6", 14), ("token-ring-7", 15)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: olTRTrafControlNetID.setStatus('mandatory')
olTRTrafControlLogicalState = MibTableColumn((1, 3, 6, 1, 4, 1, 49, 2, 3, 1, 5, 3, 7, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("changing", 1), ("notChanging", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: olTRTrafControlLogicalState.setStatus('mandatory')
olTRTrafControlLogicalLock = MibTableColumn((1, 3, 6, 1, 4, 1, 49, 2, 3, 1, 5, 3, 7, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("lock", 1), ("unlock", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: olTRTrafControlLogicalLock.setStatus('mandatory')
olTRTrafControlClear = MibTableColumn((1, 3, 6, 1, 4, 1, 49, 2, 3, 1, 5, 3, 7, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("normal", 1), ("clear", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: olTRTrafControlClear.setStatus('mandatory')
olTRTrafControlLastClearTime = MibTableColumn((1, 3, 6, 1, 4, 1, 49, 2, 3, 1, 5, 3, 7, 1, 5), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: olTRTrafControlLastClearTime.setStatus('mandatory')
olTRTrafControlTotalStations = MibTableColumn((1, 3, 6, 1, 4, 1, 49, 2, 3, 1, 5, 3, 7, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: olTRTrafControlTotalStations.setStatus('mandatory')
olTRTrafControlStationLastChangeTime = MibTableColumn((1, 3, 6, 1, 4, 1, 49, 2, 3, 1, 5, 3, 7, 1, 7), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: olTRTrafControlStationLastChangeTime.setStatus('mandatory')
olTRTrafControlPortTotalStations = MibTableColumn((1, 3, 6, 1, 4, 1, 49, 2, 3, 1, 5, 3, 7, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: olTRTrafControlPortTotalStations.setStatus('mandatory')
olTRTrafControlPortLastChangeTime = MibTableColumn((1, 3, 6, 1, 4, 1, 49, 2, 3, 1, 5, 3, 7, 1, 9), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: olTRTrafControlPortLastChangeTime.setStatus('mandatory')
olTRTrafControlTopNMaxStations = MibTableColumn((1, 3, 6, 1, 4, 1, 49, 2, 3, 1, 5, 3, 7, 1, 10), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: olTRTrafControlTopNMaxStations.setStatus('mandatory')
olTRTrafControlTopNTotalStations = MibTableColumn((1, 3, 6, 1, 4, 1, 49, 2, 3, 1, 5, 3, 7, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: olTRTrafControlTopNTotalStations.setStatus('mandatory')
olTRTrafControlTopNLastChangeTime = MibTableColumn((1, 3, 6, 1, 4, 1, 49, 2, 3, 1, 5, 3, 7, 1, 12), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: olTRTrafControlTopNLastChangeTime.setStatus('mandatory')
olTRTrafControlTopNInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 49, 2, 3, 1, 5, 3, 7, 1, 13), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: olTRTrafControlTopNInterval.setStatus('mandatory')
olTRTrafStationTable = MibTable((1, 3, 6, 1, 4, 1, 49, 2, 3, 1, 5, 3, 8), )
if mibBuilder.loadTexts: olTRTrafStationTable.setStatus('mandatory')
olTRTrafStationEntry = MibTableRow((1, 3, 6, 1, 4, 1, 49, 2, 3, 1, 5, 3, 8, 1), ).setIndexNames((0, "CHIPTRNET-MIB", "olTRTrafStationNetID"), (0, "CHIPTRNET-MIB", "olTRTrafStationAddress"))
if mibBuilder.loadTexts: olTRTrafStationEntry.setStatus('mandatory')
olTRTrafStationNetID = MibTableColumn((1, 3, 6, 1, 4, 1, 49, 2, 3, 1, 5, 3, 8, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(2, 9, 10, 11, 12, 13, 14, 15))).clone(namedValues=NamedValues(("isolated", 2), ("token-ring-1", 9), ("token-ring-2", 10), ("token-ring-3", 11), ("token-ring-4", 12), ("token-ring-5", 13), ("token-ring-6", 14), ("token-ring-7", 15)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: olTRTrafStationNetID.setStatus('mandatory')
olTRTrafStationAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 49, 2, 3, 1, 5, 3, 8, 1, 2), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: olTRTrafStationAddress.setStatus('mandatory')
olTRTrafStationSlotIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 49, 2, 3, 1, 5, 3, 8, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 254, 255))).clone(namedValues=NamedValues(("slot-1", 1), ("slot-2", 2), ("slot-3", 3), ("slot-4", 4), ("slot-5", 5), ("slot-6", 6), ("slot-7", 7), ("slot-8", 8), ("slot-9", 9), ("slot-10", 10), ("slot-11", 11), ("slot-12", 12), ("slot-13", 13), ("slot-14", 14), ("slot-15", 15), ("slot-16", 16), ("slot-17", 17), ("remote-ring", 254), ("external", 255)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: olTRTrafStationSlotIndex.setStatus('mandatory')
olTRTrafStationPortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 49, 2, 3, 1, 5, 3, 8, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: olTRTrafStationPortIndex.setStatus('mandatory')
olTRTrafStationInFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 49, 2, 3, 1, 5, 3, 8, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: olTRTrafStationInFrames.setStatus('mandatory')
olTRTrafStationOutFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 49, 2, 3, 1, 5, 3, 8, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: olTRTrafStationOutFrames.setStatus('mandatory')
olTRTrafStationInOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 49, 2, 3, 1, 5, 3, 8, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: olTRTrafStationInOctets.setStatus('mandatory')
olTRTrafStationOutOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 49, 2, 3, 1, 5, 3, 8, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: olTRTrafStationOutOctets.setStatus('mandatory')
olTRTrafStationOutErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 49, 2, 3, 1, 5, 3, 8, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: olTRTrafStationOutErrors.setStatus('mandatory')
olTRTrafStationOutBroadcastFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 49, 2, 3, 1, 5, 3, 8, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: olTRTrafStationOutBroadcastFrames.setStatus('mandatory')
olTRTrafStationOutMulticastFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 49, 2, 3, 1, 5, 3, 8, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: olTRTrafStationOutMulticastFrames.setStatus('mandatory')
olTRTrafPortTable = MibTable((1, 3, 6, 1, 4, 1, 49, 2, 3, 1, 5, 3, 9), )
if mibBuilder.loadTexts: olTRTrafPortTable.setStatus('mandatory')
olTRTrafPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 49, 2, 3, 1, 5, 3, 9, 1), ).setIndexNames((0, "CHIPTRNET-MIB", "olTRTrafPortSlotIndex"), (0, "CHIPTRNET-MIB", "olTRTrafPortPortIndex"))
if mibBuilder.loadTexts: olTRTrafPortEntry.setStatus('mandatory')
olTRTrafPortSlotIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 49, 2, 3, 1, 5, 3, 9, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: olTRTrafPortSlotIndex.setStatus('mandatory')
olTRTrafPortPortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 49, 2, 3, 1, 5, 3, 9, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: olTRTrafPortPortIndex.setStatus('mandatory')
olTRTrafPortNetID = MibTableColumn((1, 3, 6, 1, 4, 1, 49, 2, 3, 1, 5, 3, 9, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(2, 9, 10, 11, 12, 13, 14, 15))).clone(namedValues=NamedValues(("isolated", 2), ("token-ring-1", 9), ("token-ring-2", 10), ("token-ring-3", 11), ("token-ring-4", 12), ("token-ring-5", 13), ("token-ring-6", 14), ("token-ring-7", 15)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: olTRTrafPortNetID.setStatus('mandatory')
olTRTrafPortAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 49, 2, 3, 1, 5, 3, 9, 1, 4), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: olTRTrafPortAddress.setStatus('mandatory')
olTRTrafPortInFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 49, 2, 3, 1, 5, 3, 9, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: olTRTrafPortInFrames.setStatus('mandatory')
olTRTrafPortOutFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 49, 2, 3, 1, 5, 3, 9, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: olTRTrafPortOutFrames.setStatus('mandatory')
olTRTrafPortInOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 49, 2, 3, 1, 5, 3, 9, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: olTRTrafPortInOctets.setStatus('mandatory')
olTRTrafPortOutOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 49, 2, 3, 1, 5, 3, 9, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: olTRTrafPortOutOctets.setStatus('mandatory')
olTRTrafPortOutErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 49, 2, 3, 1, 5, 3, 9, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: olTRTrafPortOutErrors.setStatus('mandatory')
olTRTrafPortOutBroadcastFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 49, 2, 3, 1, 5, 3, 9, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: olTRTrafPortOutBroadcastFrames.setStatus('mandatory')
olTRTrafPortOutMulticastFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 49, 2, 3, 1, 5, 3, 9, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: olTRTrafPortOutMulticastFrames.setStatus('mandatory')
olTRTrafTopNTable = MibTable((1, 3, 6, 1, 4, 1, 49, 2, 3, 1, 5, 3, 10), )
if mibBuilder.loadTexts: olTRTrafTopNTable.setStatus('mandatory')
olTRTrafTopNEntry = MibTableRow((1, 3, 6, 1, 4, 1, 49, 2, 3, 1, 5, 3, 10, 1), ).setIndexNames((0, "CHIPTRNET-MIB", "olTRTrafTopNNetID"), (0, "CHIPTRNET-MIB", "olTRTrafTopNStatistic"), (0, "CHIPTRNET-MIB", "olTRTrafTopNIndex"))
if mibBuilder.loadTexts: olTRTrafTopNEntry.setStatus('mandatory')
olTRTrafTopNNetID = MibTableColumn((1, 3, 6, 1, 4, 1, 49, 2, 3, 1, 5, 3, 10, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(2, 9, 10, 11, 12, 13, 14, 15))).clone(namedValues=NamedValues(("isolated", 2), ("token-ring-1", 9), ("token-ring-2", 10), ("token-ring-3", 11), ("token-ring-4", 12), ("token-ring-5", 13), ("token-ring-6", 14), ("token-ring-7", 15)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: olTRTrafTopNNetID.setStatus('mandatory')
olTRTrafTopNStatistic = MibTableColumn((1, 3, 6, 1, 4, 1, 49, 2, 3, 1, 5, 3, 10, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("olTRTrafTopNInFrames", 1), ("olTRTrafTopNOutFrames", 2), ("olTRTrafTopNInOctets", 3), ("olTRTrafTopNOutOctets", 4), ("olTRTrafTopNOutErrors", 5), ("olTRTrafTopNOutBroadcastFrames", 6), ("olTRTrafTopNOutMulticastFrames", 7)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: olTRTrafTopNStatistic.setStatus('mandatory')
olTRTrafTopNIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 49, 2, 3, 1, 5, 3, 10, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: olTRTrafTopNIndex.setStatus('mandatory')
olTRTrafTopNAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 49, 2, 3, 1, 5, 3, 10, 1, 4), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: olTRTrafTopNAddress.setStatus('mandatory')
olTRTrafTopNSlotIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 49, 2, 3, 1, 5, 3, 10, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 254, 255))).clone(namedValues=NamedValues(("slot-1", 1), ("slot-2", 2), ("slot-3", 3), ("slot-4", 4), ("slot-5", 5), ("slot-6", 6), ("slot-7", 7), ("slot-8", 8), ("slot-9", 9), ("slot-10", 10), ("slot-11", 11), ("slot-12", 12), ("slot-13", 13), ("slot-14", 14), ("slot-15", 15), ("slot-16", 16), ("slot-17", 17), ("remote-ring", 254), ("external", 255)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: olTRTrafTopNSlotIndex.setStatus('mandatory')
olTRTrafTopNPortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 49, 2, 3, 1, 5, 3, 10, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: olTRTrafTopNPortIndex.setStatus('mandatory')
olTRTrafTopNInFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 49, 2, 3, 1, 5, 3, 10, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: olTRTrafTopNInFrames.setStatus('mandatory')
olTRTrafTopNOutFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 49, 2, 3, 1, 5, 3, 10, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: olTRTrafTopNOutFrames.setStatus('mandatory')
olTRTrafTopNInOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 49, 2, 3, 1, 5, 3, 10, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: olTRTrafTopNInOctets.setStatus('mandatory')
olTRTrafTopNOutOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 49, 2, 3, 1, 5, 3, 10, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: olTRTrafTopNOutOctets.setStatus('mandatory')
olTRTrafTopNOutErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 49, 2, 3, 1, 5, 3, 10, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: olTRTrafTopNOutErrors.setStatus('mandatory')
olTRTrafTopNOutBroadcastFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 49, 2, 3, 1, 5, 3, 10, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: olTRTrafTopNOutBroadcastFrames.setStatus('mandatory')
olTRTrafTopNOutMulticastFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 49, 2, 3, 1, 5, 3, 10, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: olTRTrafTopNOutMulticastFrames.setStatus('mandatory')
olTRTrafTopNSummaryTable = MibTable((1, 3, 6, 1, 4, 1, 49, 2, 3, 1, 5, 3, 11), )
if mibBuilder.loadTexts: olTRTrafTopNSummaryTable.setStatus('mandatory')
olTRTrafTopNSummaryEntry = MibTableRow((1, 3, 6, 1, 4, 1, 49, 2, 3, 1, 5, 3, 11, 1), ).setIndexNames((0, "CHIPTRNET-MIB", "olTRTrafTopNSummaryNetID"), (0, "CHIPTRNET-MIB", "olTRTrafTopNSummaryStatistic"), (0, "CHIPTRNET-MIB", "olTRTrafTopNSummaryIndex"))
if mibBuilder.loadTexts: olTRTrafTopNSummaryEntry.setStatus('mandatory')
olTRTrafTopNSummaryNetID = MibTableColumn((1, 3, 6, 1, 4, 1, 49, 2, 3, 1, 5, 3, 11, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(2, 9, 10, 11, 12, 13, 14, 15))).clone(namedValues=NamedValues(("isolated", 2), ("token-ring-1", 9), ("token-ring-2", 10), ("token-ring-3", 11), ("token-ring-4", 12), ("token-ring-5", 13), ("token-ring-6", 14), ("token-ring-7", 15)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: olTRTrafTopNSummaryNetID.setStatus('mandatory')
olTRTrafTopNSummaryStatistic = MibTableColumn((1, 3, 6, 1, 4, 1, 49, 2, 3, 1, 5, 3, 11, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("olTRTrafTopNSummaryInFrames", 1), ("olTRTrafTopNSummaryOutFrames", 2), ("olTRTrafTopNSummaryInOctets", 3), ("olTRTrafTopNSummaryOutOctets", 4), ("olTRTrafTopNSummaryOutErrors", 5), ("olTRTrafTopNSummaryOutBroadcastFrames", 6), ("olTRTrafTopNSummaryOutMulticastFrames", 7)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: olTRTrafTopNSummaryStatistic.setStatus('mandatory')
olTRTrafTopNSummaryIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 49, 2, 3, 1, 5, 3, 11, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: olTRTrafTopNSummaryIndex.setStatus('mandatory')
olTRTrafTopNSummaryStations = MibTableColumn((1, 3, 6, 1, 4, 1, 49, 2, 3, 1, 5, 3, 11, 1, 4), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: olTRTrafTopNSummaryStations.setStatus('mandatory')
mibBuilder.exportSymbols("CHIPTRNET-MIB", olTRnetStatsPortLostFrameErrors=olTRnetStatsPortLostFrameErrors, olTRnetMapSummaryTable=olTRnetMapSummaryTable, olTRTrafControlTopNMaxStations=olTRTrafControlTopNMaxStations, olTRTrafFrames256to511Octets=olTRTrafFrames256to511Octets, ol51nnIx=ol51nnIx, ol50nnMRCTL=ol50nnMRCTL, olTRTrafControlStationLastChangeTime=olTRTrafControlStationLastChangeTime, olTRnetMapSummary=olTRnetMapSummary, olTRnetStatsPortTokenErrors=olTRnetStatsPortTokenErrors, olTRTrafStationPortIndex=olTRTrafStationPortIndex, alarmGroup=alarmGroup, olTRTrafTopNSummaryStatistic=olTRTrafTopNSummaryStatistic, olTRTrafTopNOutErrors=olTRTrafTopNOutErrors, olTRTrafStationOutBroadcastFrames=olTRTrafStationOutBroadcastFrames, olTRTrafNetID=olTRTrafNetID, olTRnetStatsTotalStations=olTRnetStatsTotalStations, olTRnetStatsStationFrameCopiedErrors=olTRnetStatsStationFrameCopiedErrors, chipTFTP=chipTFTP, ol51nnREE=ol51nnREE, olTRnetStatsBurstErrors=olTRnetStatsBurstErrors, olTRnetStatsConcStations=olTRnetStatsConcStations, olTRnetStatsPortEntry=olTRnetStatsPortEntry, olTRnetStatsPortNetID=olTRnetStatsPortNetID, oebm=oebm, olTRTrafControlLastClearTime=olTRTrafControlLastClearTime, olConc=olConc, olNet=olNet, ol53nnMSTP=ol53nnMSTP, workGroupHub=workGroupHub, olTRnetMapState=olTRnetMapState, chipmib02=chipmib02, ol51nnMFIB=ol51nnMFIB, chipExpTokenRing=chipExpTokenRing, olTRnetStatsPortFrameCopiedErrors=olTRnetStatsPortFrameCopiedErrors, olTRnetStatsStationTokenErrors=olTRnetStatsStationTokenErrors, olTRTrafDropEvents=olTRTrafDropEvents, olTRTrafTopNSummaryNetID=olTRTrafTopNSummaryNetID, ol53nnMMGT=ol53nnMMGT, olTRTrafTopNOutOctets=olTRTrafTopNOutOctets, olAlarm=olAlarm, chipGen=chipGen, ol53nnMFIBST=ol53nnMFIBST, olTRTrafTopNAddress=olTRTrafTopNAddress, olTRTrafTopNTable=olTRTrafTopNTable, olTRTrafPortInOctets=olTRTrafPortInOctets, olTRnetStatsPortIndex=olTRnetStatsPortIndex, olTRTrafTopNOutFrames=olTRTrafTopNOutFrames, olTRnetStatsBeaconEvents=olTRnetStatsBeaconEvents, olTRTrafPortOutOctets=olTRTrafPortOutOctets, chipExperiment=chipExperiment, olTRnetStatsTokenErrors=olTRnetStatsTokenErrors, olTRnetStatsStationTable=olTRnetStatsStationTable, olTRnetStatsTable=olTRnetStatsTable, olTRTrafPortOutBroadcastFrames=olTRTrafPortOutBroadcastFrames, olTRTrafBroadcastFrames=olTRTrafBroadcastFrames, ol52nnMFR=ol52nnMFR, olTRnetStatsCongestionErrors=olTRnetStatsCongestionErrors, olFDDInet=olFDDInet, olTRTrafMacFrames=olTRTrafMacFrames, midnight=midnight, olTRnetStatsStationNAUNAddress=olTRnetStatsStationNAUNAddress, chipDownload=chipDownload, olSpecMods=olSpecMods, olModules=olModules, olTRTrafStationSlotIndex=olTRTrafStationSlotIndex, ol50nnMCTL=ol50nnMCTL, olTRnetStatsFrameCopiedErrors=olTRnetStatsFrameCopiedErrors, ol51nnMBNC=ol51nnMBNC, olTRTrafControlTotalStations=olTRTrafControlTotalStations, olTRTrafMulticastFrames=olTRTrafMulticastFrames, olTRnetStatsLastBeaconTime=olTRnetStatsLastBeaconTime, olTRTrafPortSlotIndex=olTRTrafPortSlotIndex, olTRTrafTopNSummaryStations=olTRTrafTopNSummaryStations, olTRnetStatsLastBeaconNAUN=olTRnetStatsLastBeaconNAUN, olTRTrafPortPortIndex=olTRTrafPortPortIndex, olTRTrafTopNSlotIndex=olTRTrafTopNSlotIndex, chipcom=chipcom, ol52nnMTP=ol52nnMTP, olTRnetStatsStationLostFrameErrors=olTRnetStatsStationLostFrameErrors, olTRTrafTopNSummaryEntry=olTRTrafTopNSummaryEntry, olTRTrafMacOctets=olTRTrafMacOctets, olTRnetMapSummaryNetID=olTRnetMapSummaryNetID, olTRTrafStationEntry=olTRTrafStationEntry, olTRnetStatsPortCongestionErrors=olTRnetStatsPortCongestionErrors, olTRTrafEntry=olTRTrafEntry, olTRnetStatsActivePorts=olTRnetStatsActivePorts, olTRTrafControlEntry=olTRTrafControlEntry, olTRTrafControlTopNTotalStations=olTRTrafControlTopNTotalStations, olTRTrafFrames1024to2047Octets=olTRTrafFrames1024to2047Octets, fmm=fmm, ol53nnMFBMIC=ol53nnMFBMIC, olEnet=olEnet, ol51nnMUTP=ol51nnMUTP, olTRTrafTopNStatistic=olTRTrafTopNStatistic, trmm=trmm, olTRTrafControlPortTotalStations=olTRTrafControlPortTotalStations, olTRTrafFramesGreaterThan18000Octets=olTRTrafFramesGreaterThan18000Octets, online=online, olTRnetStatsPortTable=olTRnetStatsPortTable, olTRTrafStationOutFrames=olTRTrafStationOutFrames, olTRTrafPortOutFrames=olTRTrafPortOutFrames, olTRTrafTopNNetID=olTRTrafTopNNetID, MacAddress=MacAddress, olTRnetStatsStationNetID=olTRnetStatsStationNetID, olTRTrafStationOutMulticastFrames=olTRTrafStationOutMulticastFrames, olTRTrafFrames128to255Octets=olTRTrafFrames128to255Octets, olTRTrafPortTable=olTRTrafPortTable, olTRTrafFrames18to63Octets=olTRTrafFrames18to63Octets, olTRTrafPortInFrames=olTRTrafPortInFrames, olTRTrafTopNIndex=olTRTrafTopNIndex, olTRTrafControlClear=olTRTrafControlClear, olTRnetStatsStationPortIndex=olTRnetStatsStationPortIndex, ol51nnMAUIF=ol51nnMAUIF, olTRnetMapSummary32Stations=olTRnetMapSummary32Stations, olTRTrafTable=olTRTrafTable, olTRTrafFrames=olTRTrafFrames, boardGroup=boardGroup, olTRTrafTopNOutBroadcastFrames=olTRTrafTopNOutBroadcastFrames, portGroup=portGroup, olTRnetStatsEntry=olTRnetStatsEntry, olTRTrafPortAddress=olTRTrafPortAddress, olTRnetStatsStationCongestionErrors=olTRnetStatsStationCongestionErrors, olTRnetStatsStationAddr=olTRnetStatsStationAddr, olThresh=olThresh, ol51nnMMGT=ol51nnMMGT, olTRTrafFrames4096to8191Octets=olTRTrafFrames4096to8191Octets, olTRTrafControlLogicalLock=olTRTrafControlLogicalLock, chipEcho=chipEcho, olTRnetStatsPortDuplicateAddresses=olTRnetStatsPortDuplicateAddresses, olTRTrafTopNOutMulticastFrames=olTRTrafTopNOutMulticastFrames, chipTTY=chipTTY, hubSysGroup=hubSysGroup, olTRnetStatsPortBurstErrors=olTRnetStatsPortBurstErrors, olTRTrafOctets=olTRTrafOctets, olTRTrafControlTopNLastChangeTime=olTRTrafControlTopNLastChangeTime, olTRTrafStationInOctets=olTRTrafStationInOctets, ol51nnBEE=ol51nnBEE, olTRnet=olTRnet, hardwareGroup=hardwareGroup, olTRTrafControlNetID=olTRTrafControlNetID, olTRTrafStationTable=olTRTrafStationTable, olTRTrafStationInFrames=olTRTrafStationInFrames, olTRTrafPortEntry=olTRTrafPortEntry, olTRnetStatsPortAddress=olTRnetStatsPortAddress, ol51nnMAUIM=ol51nnMAUIM, olTRnetStatsStationBurstErrors=olTRnetStatsStationBurstErrors, olTRnetStatsStationACErrors=olTRnetStatsStationACErrors, ol51nnMFL=ol51nnMFL, olTRnetStatsLineErrors=olTRnetStatsLineErrors, dot1dBridge=dot1dBridge, olEnv=olEnv, olTRnetStatsLostFrameErrors=olTRnetStatsLostFrameErrors, dot5=dot5, ol51nnMTPL=ol51nnMTPL, chipBridge=chipBridge, olTRnetStatsEnabledPorts=olTRnetStatsEnabledPorts, olTRTrafTopNSummaryIndex=olTRTrafTopNSummaryIndex, ol52nnBTT=ol52nnBTT, ol5208MTP=ol5208MTP, olTRTrafFrames8192to18000Octets=olTRTrafFrames8192to18000Octets, olTRnetStatsACErrors=olTRnetStatsACErrors, olTRnetStatsTotalPorts=olTRnetStatsTotalPorts, olTRTrafControlTopNInterval=olTRTrafControlTopNInterval, olTRTrafStationOutOctets=olTRTrafStationOutOctets, olTRTrafTopNSummaryTable=olTRTrafTopNSummaryTable, olTRnetStatsStationSlotIndex=olTRnetStatsStationSlotIndex, olTRTrafPortOutErrors=olTRTrafPortOutErrors, olTRnetStatsStationLineErrors=olTRnetStatsStationLineErrors, olTRnetStatsDuplicateAddresses=olTRnetStatsDuplicateAddresses, olTRTrafPortNetID=olTRTrafPortNetID, olTRnetMapSummaryEntry=olTRnetMapSummaryEntry, olTRTrafTopNInOctets=olTRTrafTopNInOctets, olTRTrafControlPortLastChangeTime=olTRTrafControlPortLastChangeTime, olTRnetStatsStationDuplicateAddresses=olTRnetStatsStationDuplicateAddresses, focus1=focus1, olTRTrafControlTable=olTRTrafControlTable, ol51nnMFP=ol51nnMFP, olTRnetStatsLastBeaconSender=olTRnetStatsLastBeaconSender, oeim=oeim, ol52nnMMGT=ol52nnMMGT, emm=emm, ol51nnMTS=ol51nnMTS, softwareGroup=softwareGroup, ol51nnMTP=ol51nnMTP, olTRnetMapSummaryLogicalState=olTRnetMapSummaryLogicalState, ol51nnRES=ol51nnRES, olTRnetMapSummaryLogicalLock=olTRnetMapSummaryLogicalLock, olTRTrafStationAddress=olTRTrafStationAddress, olTRTrafStationOutErrors=olTRTrafStationOutErrors, olTRTrafPortOutMulticastFrames=olTRTrafPortOutMulticastFrames, olTRTrafFrames512to1023Octets=olTRTrafFrames512to1023Octets, ol51nnMFBP=ol51nnMFBP, olTRTrafControlLogicalState=olTRTrafControlLogicalState, olTRnetStatsPortSlotIndex=olTRnetStatsPortSlotIndex, hubGroup=hubGroup, olNets=olNets, olGroups=olGroups, olTRTrafStationNetID=olTRTrafStationNetID, ol51nnMFB=ol51nnMFB, olTRnetMapSummaryIndex=olTRnetMapSummaryIndex, ol51nnMTPPL=ol51nnMTPPL, ol51nnMTPCL=ol51nnMTPCL, olTRnetStatsNetID=olTRnetStatsNetID, olTRnetStatsPortACErrors=olTRnetStatsPortACErrors, olTRTrafTopNPortIndex=olTRTrafTopNPortIndex, olTRTrafTokenRotationTime=olTRTrafTokenRotationTime, olTRnetStatsStationEntry=olTRnetStatsStationEntry, chipProducts=chipProducts, olThreshControl=olThreshControl, olTRTrafFrames2048to4095Octets=olTRTrafFrames2048to4095Octets, olAgents=olAgents, olTRTrafTopNInFrames=olTRTrafTopNInFrames, olTRTrafFrames64to127Octets=olTRTrafFrames64to127Octets, olTRTrafTopNEntry=olTRTrafTopNEntry, olTRnetStatsLastBeaconAction=olTRnetStatsLastBeaconAction, ol50nnMHCTL=ol50nnMHCTL, olTRnetStatsPortTotalStations=olTRnetStatsPortTotalStations, olTRnetStatsPortLineErrors=olTRnetStatsPortLineErrors)
