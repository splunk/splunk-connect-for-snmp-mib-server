#
# PySNMP MIB module ALCOMA-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/ALCOMA-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:04:57 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, SingleValueConstraint, ValueSizeConstraint, ValueRangeConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "SingleValueConstraint", "ValueSizeConstraint", "ValueRangeConstraint", "ConstraintsUnion")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Counter32, ObjectIdentity, MibIdentifier, MibScalar, MibTable, MibTableRow, MibTableColumn, Integer32, TimeTicks, Unsigned32, IpAddress, NotificationType, iso, ModuleIdentity, Gauge32, enterprises, Bits, Counter64 = mibBuilder.importSymbols("SNMPv2-SMI", "Counter32", "ObjectIdentity", "MibIdentifier", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Integer32", "TimeTicks", "Unsigned32", "IpAddress", "NotificationType", "iso", "ModuleIdentity", "Gauge32", "enterprises", "Bits", "Counter64")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
alcoma = MibIdentifier((1, 3, 6, 1, 4, 1, 12140))
products = MibIdentifier((1, 3, 6, 1, 4, 1, 12140, 1))
alMP = MibIdentifier((1, 3, 6, 1, 4, 1, 12140, 2))
alRADIO_RELAY_LINK = MibIdentifier((1, 3, 6, 1, 4, 1, 12140, 1, 1)).setLabel("alRADIO-RELAY-LINK")
alNMS = MibIdentifier((1, 3, 6, 1, 4, 1, 12140, 1, 2))
alStatusLED = MibIdentifier((1, 3, 6, 1, 4, 1, 12140, 1, 1, 1))
alEHW = MibScalar((1, 3, 6, 1, 4, 1, 12140, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 0, 1))).clone(namedValues=NamedValues(("offline", -1), ("ok", 0), ("error", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alEHW.setStatus('mandatory')
alESR = MibScalar((1, 3, 6, 1, 4, 1, 12140, 1, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 0, 1))).clone(namedValues=NamedValues(("offline", -1), ("ok", 0), ("error", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alESR.setStatus('mandatory')
alESL = MibScalar((1, 3, 6, 1, 4, 1, 12140, 1, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 0, 1))).clone(namedValues=NamedValues(("offline", -1), ("ok", 0), ("error", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alESL.setStatus('mandatory')
alCA = MibScalar((1, 3, 6, 1, 4, 1, 12140, 1, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 0, 1))).clone(namedValues=NamedValues(("offline", -1), ("no", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alCA.setStatus('mandatory')
local_station = MibIdentifier((1, 3, 6, 1, 4, 1, 12140, 1, 1, 2)).setLabel("local-station")
alL_General = MibIdentifier((1, 3, 6, 1, 4, 1, 12140, 1, 1, 2, 1)).setLabel("alL-General")
alLSupervisor = MibScalar((1, 3, 6, 1, 4, 1, 12140, 1, 1, 2, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 0, 1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("offline", -1), ("none", 0), ("terminal", 1), ("local", 2), ("network", 3), ("service", 4), ("alcoma", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alLSupervisor.setStatus('mandatory')
alLConfiguration = MibScalar((1, 3, 6, 1, 4, 1, 12140, 1, 1, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 0, 1, 2, 3, 4, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33))).clone(namedValues=NamedValues(("offline", -1), ("undefined", 0), ("cf2xE1", 1), ("cf4xE1", 2), ("cf1xE2", 3), ("cf1xE1-Ethernet", 4), ("cf1xE3-E1", 7), ("cf1xEthernet", 8), ("cf1xEthF-E1", 9), ("cf1xEthF-E1-1xE1", 10), ("cf1xEthF-E1-2xE1", 11), ("cf1xEthF-E1-3xE1", 12), ("cf1xEthF-E1-4xE1", 13), ("cf1xEthF-E1-5xE1", 14), ("cf1xEthF-E1-6xE1", 15), ("cf1xEthF-E1-7xE1", 16), ("cf1xEthF-E1-8xE1", 17), ("cf1xEthF", 18), ("cf1xEthF-1xE1", 19), ("cf1xEthF-2xE1", 20), ("cf1xEthF-3xE1", 21), ("cf1xEthF-4xE1", 22), ("cf1xEthF-5xE1", 23), ("cf1xEthF-6xE1", 24), ("cf1xEthF-7xE1", 25), ("cf1xEthF-8xE1", 26), ("cf2xFEth", 27), ("cf2xFEth-1xE1", 28), ("cf4xFEth-2xE1", 29), ("cf2xGEth", 30), ("cf2xGEth-SFP100", 31), ("cf2xGEth-SFP1000", 32), ("cf2xGEth-SFPSG", 33)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alLConfiguration.setStatus('mandatory')
alLStatus = MibScalar((1, 3, 6, 1, 4, 1, 12140, 1, 1, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("offline", 0), ("ok", 1), ("warning", 2), ("error", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alLStatus.setStatus('mandatory')
alLHistory = MibScalar((1, 3, 6, 1, 4, 1, 12140, 1, 1, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 0, 1))).clone(namedValues=NamedValues(("offline", -1), ("no", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alLHistory.setStatus('mandatory')
alLIAISL = MibScalar((1, 3, 6, 1, 4, 1, 12140, 1, 1, 2, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 0, 1))).clone(namedValues=NamedValues(("offline", -1), ("off", 0), ("on", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alLIAISL.setStatus('mandatory')
alLILEVPWR = MibScalar((1, 3, 6, 1, 4, 1, 12140, 1, 1, 2, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 0, 1))).clone(namedValues=NamedValues(("offline", -1), ("off", 0), ("on", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alLILEVPWR.setStatus('mandatory')
alL_ODU = MibIdentifier((1, 3, 6, 1, 4, 1, 12140, 1, 1, 2, 2)).setLabel("alL-ODU")
alLRX_Level = MibScalar((1, 3, 6, 1, 4, 1, 12140, 1, 1, 2, 2, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 0, 1))).clone(namedValues=NamedValues(("offline", -1), ("ok", 0), ("low", 1)))).setLabel("alLRX-Level").setMaxAccess("readonly")
if mibBuilder.loadTexts: alLRX_Level.setStatus('mandatory')
alLTX_PWR = MibScalar((1, 3, 6, 1, 4, 1, 12140, 1, 1, 2, 2, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 0, 1))).clone(namedValues=NamedValues(("offline", -1), ("ok", 0), ("low", 1)))).setLabel("alLTX-PWR").setMaxAccess("readonly")
if mibBuilder.loadTexts: alLTX_PWR.setStatus('mandatory')
alLMode_TX = MibScalar((1, 3, 6, 1, 4, 1, 12140, 1, 1, 2, 2, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 0, 1, 2))).clone(namedValues=NamedValues(("offline", -1), ("off", 0), ("manual", 1), ("atpc", 2)))).setLabel("alLMode-TX").setMaxAccess("readonly")
if mibBuilder.loadTexts: alLMode_TX.setStatus('mandatory')
alLODU_LB = MibScalar((1, 3, 6, 1, 4, 1, 12140, 1, 1, 2, 2, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 0, 1))).clone(namedValues=NamedValues(("offline", -1), ("off", 0), ("on", 1)))).setLabel("alLODU-LB").setMaxAccess("readonly")
if mibBuilder.loadTexts: alLODU_LB.setStatus('mandatory')
alL_Modem = MibIdentifier((1, 3, 6, 1, 4, 1, 12140, 1, 1, 2, 3)).setLabel("alL-Modem")
alLQuality = MibScalar((1, 3, 6, 1, 4, 1, 12140, 1, 1, 2, 3, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 0, 1))).clone(namedValues=NamedValues(("offline", -1), ("ok", 0), ("out", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alLQuality.setStatus('mandatory')
alL_Supply = MibIdentifier((1, 3, 6, 1, 4, 1, 12140, 1, 1, 2, 4)).setLabel("alL-Supply")
alLVoltage_5V = MibScalar((1, 3, 6, 1, 4, 1, 12140, 1, 1, 2, 4, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 0, 1))).clone(namedValues=NamedValues(("offline", -1), ("ok", 0), ("high", 1)))).setLabel("alLVoltage-5V").setMaxAccess("readonly")
if mibBuilder.loadTexts: alLVoltage_5V.setStatus('mandatory')
alLVoltage_5Vor15V = MibScalar((1, 3, 6, 1, 4, 1, 12140, 1, 1, 2, 4, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 0, 1))).clone(namedValues=NamedValues(("offline", -1), ("ok", 0), ("low", 1)))).setLabel("alLVoltage-5Vor15V").setMaxAccess("readonly")
if mibBuilder.loadTexts: alLVoltage_5Vor15V.setStatus('mandatory')
alLVoltage_24V = MibScalar((1, 3, 6, 1, 4, 1, 12140, 1, 1, 2, 4, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 0, 1))).clone(namedValues=NamedValues(("offline", -1), ("ok", 0), ("low", 1)))).setLabel("alLVoltage-24V").setMaxAccess("readonly")
if mibBuilder.loadTexts: alLVoltage_24V.setStatus('mandatory')
alLCurrent_ODU = MibScalar((1, 3, 6, 1, 4, 1, 12140, 1, 1, 2, 4, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 0, 1))).clone(namedValues=NamedValues(("offline", -1), ("ok", 0), ("out", 1)))).setLabel("alLCurrent-ODU").setMaxAccess("readonly")
if mibBuilder.loadTexts: alLCurrent_ODU.setStatus('mandatory')
alLInput = MibScalar((1, 3, 6, 1, 4, 1, 12140, 1, 1, 2, 4, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 0, 1))).clone(namedValues=NamedValues(("offline", -1), ("ok", 0), ("low", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alLInput.setStatus('mandatory')
alL_IDU = MibIdentifier((1, 3, 6, 1, 4, 1, 12140, 1, 1, 2, 5)).setLabel("alL-IDU")
alLEEPROM = MibScalar((1, 3, 6, 1, 4, 1, 12140, 1, 1, 2, 5, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 0, 1))).clone(namedValues=NamedValues(("offline", -1), ("ok", 0), ("bad", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alLEEPROM.setStatus('mandatory')
alLRAM = MibScalar((1, 3, 6, 1, 4, 1, 12140, 1, 1, 2, 5, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 0, 1))).clone(namedValues=NamedValues(("offline", -1), ("ok", 0), ("bad", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alLRAM.setStatus('mandatory')
alLBattery = MibScalar((1, 3, 6, 1, 4, 1, 12140, 1, 1, 2, 5, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 0, 1))).clone(namedValues=NamedValues(("offline", -1), ("ok", 0), ("low", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alLBattery.setStatus('mandatory')
alLCommIDU = MibScalar((1, 3, 6, 1, 4, 1, 12140, 1, 1, 2, 5, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 0, 1))).clone(namedValues=NamedValues(("offline", -1), ("ok", 0), ("bad", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alLCommIDU.setStatus('mandatory')
alLCommRMT = MibScalar((1, 3, 6, 1, 4, 1, 12140, 1, 1, 2, 5, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 0, 1))).clone(namedValues=NamedValues(("offline", -1), ("ok", 0), ("error", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alLCommRMT.setStatus('mandatory')
alL_MUX = MibIdentifier((1, 3, 6, 1, 4, 1, 12140, 1, 1, 2, 6)).setLabel("alL-MUX")
alLBER_10E6 = MibScalar((1, 3, 6, 1, 4, 1, 12140, 1, 1, 2, 6, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 0, 1))).clone(namedValues=NamedValues(("offline", -1), ("no", 0), ("yes", 1)))).setLabel("alLBER-10E6").setMaxAccess("readonly")
if mibBuilder.loadTexts: alLBER_10E6.setStatus('mandatory')
alLBER_10E4 = MibScalar((1, 3, 6, 1, 4, 1, 12140, 1, 1, 2, 6, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 0, 1))).clone(namedValues=NamedValues(("offline", -1), ("no", 0), ("yes", 1)))).setLabel("alLBER-10E4").setMaxAccess("readonly")
if mibBuilder.loadTexts: alLBER_10E4.setStatus('mandatory')
alLFrame = MibScalar((1, 3, 6, 1, 4, 1, 12140, 1, 1, 2, 6, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 0, 1))).clone(namedValues=NamedValues(("offline", -1), ("ok", 0), ("loss", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alLFrame.setStatus('mandatory')
alL_PDH1 = MibIdentifier((1, 3, 6, 1, 4, 1, 12140, 1, 1, 2, 7)).setLabel("alL-PDH1")
alLPDHFrame = MibScalar((1, 3, 6, 1, 4, 1, 12140, 1, 1, 2, 7, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 0, 1))).clone(namedValues=NamedValues(("offline", -1), ("ok", 0), ("loss", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alLPDHFrame.setStatus('mandatory')
alLAISPDH = MibScalar((1, 3, 6, 1, 4, 1, 12140, 1, 1, 2, 7, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 0, 1))).clone(namedValues=NamedValues(("offline", -1), ("ok", 0), ("on", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alLAISPDH.setStatus('mandatory')
alLLLBPDH = MibScalar((1, 3, 6, 1, 4, 1, 12140, 1, 1, 2, 7, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 0, 1))).clone(namedValues=NamedValues(("offline", -1), ("off", 0), ("on", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alLLLBPDH.setStatus('mandatory')
alLRLBPDH = MibScalar((1, 3, 6, 1, 4, 1, 12140, 1, 1, 2, 7, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 0, 1))).clone(namedValues=NamedValues(("offline", -1), ("off", 0), ("on", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alLRLBPDH.setStatus('mandatory')
alL_Line1 = MibIdentifier((1, 3, 6, 1, 4, 1, 12140, 1, 1, 2, 9)).setLabel("alL-Line1")
alLOSS1 = MibScalar((1, 3, 6, 1, 4, 1, 12140, 1, 1, 2, 9, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 0, 1))).clone(namedValues=NamedValues(("offline", -1), ("not", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alLOSS1.setStatus('mandatory')
alILOSS1 = MibScalar((1, 3, 6, 1, 4, 1, 12140, 1, 1, 2, 9, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 0, 1))).clone(namedValues=NamedValues(("offline", -1), ("off", 0), ("on", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alILOSS1.setStatus('mandatory')
alAIS1 = MibScalar((1, 3, 6, 1, 4, 1, 12140, 1, 1, 2, 9, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 0, 1))).clone(namedValues=NamedValues(("offline", -1), ("not", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alAIS1.setStatus('mandatory')
alAISL1 = MibScalar((1, 3, 6, 1, 4, 1, 12140, 1, 1, 2, 9, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 0, 1))).clone(namedValues=NamedValues(("offline", -1), ("off", 0), ("on", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alAISL1.setStatus('mandatory')
alLLB1 = MibScalar((1, 3, 6, 1, 4, 1, 12140, 1, 1, 2, 9, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 0, 1))).clone(namedValues=NamedValues(("offline", -1), ("off", 0), ("on", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alLLB1.setStatus('mandatory')
alRLB1 = MibScalar((1, 3, 6, 1, 4, 1, 12140, 1, 1, 2, 9, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 0, 1))).clone(namedValues=NamedValues(("offline", -1), ("off", 0), ("on", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alRLB1.setStatus('mandatory')
alL_Line2 = MibIdentifier((1, 3, 6, 1, 4, 1, 12140, 1, 1, 2, 10)).setLabel("alL-Line2")
alLLOSS2 = MibScalar((1, 3, 6, 1, 4, 1, 12140, 1, 1, 2, 10, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 0, 1))).clone(namedValues=NamedValues(("offline", -1), ("not", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alLLOSS2.setStatus('mandatory')
alLILOSS2 = MibScalar((1, 3, 6, 1, 4, 1, 12140, 1, 1, 2, 10, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 0, 1))).clone(namedValues=NamedValues(("offline", -1), ("off", 0), ("on", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alLILOSS2.setStatus('mandatory')
alLAIS2 = MibScalar((1, 3, 6, 1, 4, 1, 12140, 1, 1, 2, 10, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 0, 1))).clone(namedValues=NamedValues(("offline", -1), ("not", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alLAIS2.setStatus('mandatory')
alLAISL2 = MibScalar((1, 3, 6, 1, 4, 1, 12140, 1, 1, 2, 10, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 0, 1))).clone(namedValues=NamedValues(("offline", -1), ("off", 0), ("on", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alLAISL2.setStatus('mandatory')
alLLLB2 = MibScalar((1, 3, 6, 1, 4, 1, 12140, 1, 1, 2, 10, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 0, 1))).clone(namedValues=NamedValues(("offline", -1), ("off", 0), ("on", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alLLLB2.setStatus('mandatory')
alLRLB2 = MibScalar((1, 3, 6, 1, 4, 1, 12140, 1, 1, 2, 10, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 0, 1))).clone(namedValues=NamedValues(("offline", -1), ("off", 0), ("on", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alLRLB2.setStatus('mandatory')
alL_Line3 = MibIdentifier((1, 3, 6, 1, 4, 1, 12140, 1, 1, 2, 11)).setLabel("alL-Line3")
alLLOSS3 = MibScalar((1, 3, 6, 1, 4, 1, 12140, 1, 1, 2, 11, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 0, 1))).clone(namedValues=NamedValues(("offline", -1), ("not", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alLLOSS3.setStatus('mandatory')
alLILOSS3 = MibScalar((1, 3, 6, 1, 4, 1, 12140, 1, 1, 2, 11, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 0, 1))).clone(namedValues=NamedValues(("offline", -1), ("off", 0), ("on", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alLILOSS3.setStatus('mandatory')
alLAIS3 = MibScalar((1, 3, 6, 1, 4, 1, 12140, 1, 1, 2, 11, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 0, 1))).clone(namedValues=NamedValues(("offline", -1), ("not", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alLAIS3.setStatus('mandatory')
alLAISL3 = MibScalar((1, 3, 6, 1, 4, 1, 12140, 1, 1, 2, 11, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 0, 1))).clone(namedValues=NamedValues(("offline", -1), ("off", 0), ("on", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alLAISL3.setStatus('mandatory')
alLLLB3 = MibScalar((1, 3, 6, 1, 4, 1, 12140, 1, 1, 2, 11, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 0, 1))).clone(namedValues=NamedValues(("offline", -1), ("off", 0), ("on", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alLLLB3.setStatus('mandatory')
alLRLB3 = MibScalar((1, 3, 6, 1, 4, 1, 12140, 1, 1, 2, 11, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 0, 1))).clone(namedValues=NamedValues(("offline", -1), ("off", 0), ("on", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alLRLB3.setStatus('mandatory')
alL_Line4 = MibIdentifier((1, 3, 6, 1, 4, 1, 12140, 1, 1, 2, 12)).setLabel("alL-Line4")
alLLOSS4 = MibScalar((1, 3, 6, 1, 4, 1, 12140, 1, 1, 2, 12, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 0, 1))).clone(namedValues=NamedValues(("offline", -1), ("not", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alLLOSS4.setStatus('mandatory')
alLILOSS4 = MibScalar((1, 3, 6, 1, 4, 1, 12140, 1, 1, 2, 12, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 0, 1))).clone(namedValues=NamedValues(("offline", -1), ("off", 0), ("on", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alLILOSS4.setStatus('mandatory')
alLAIS4 = MibScalar((1, 3, 6, 1, 4, 1, 12140, 1, 1, 2, 12, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 0, 1))).clone(namedValues=NamedValues(("offline", -1), ("not", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alLAIS4.setStatus('mandatory')
alLAISL4 = MibScalar((1, 3, 6, 1, 4, 1, 12140, 1, 1, 2, 12, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 0, 1))).clone(namedValues=NamedValues(("offline", -1), ("off", 0), ("on", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alLAISL4.setStatus('mandatory')
alLLLB4 = MibScalar((1, 3, 6, 1, 4, 1, 12140, 1, 1, 2, 12, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 0, 1))).clone(namedValues=NamedValues(("offline", -1), ("off", 0), ("on", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alLLLB4.setStatus('mandatory')
alLRLB4 = MibScalar((1, 3, 6, 1, 4, 1, 12140, 1, 1, 2, 12, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 0, 1))).clone(namedValues=NamedValues(("offline", -1), ("off", 0), ("on", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alLRLB4.setStatus('mandatory')
alL_Line5 = MibIdentifier((1, 3, 6, 1, 4, 1, 12140, 1, 1, 2, 13)).setLabel("alL-Line5")
alLLOSS5 = MibScalar((1, 3, 6, 1, 4, 1, 12140, 1, 1, 2, 13, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 0, 1))).clone(namedValues=NamedValues(("offline", -1), ("not", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alLLOSS5.setStatus('mandatory')
alLILOSS5 = MibScalar((1, 3, 6, 1, 4, 1, 12140, 1, 1, 2, 13, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 0, 1))).clone(namedValues=NamedValues(("offline", -1), ("off", 0), ("on", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alLILOSS5.setStatus('mandatory')
alLAIS5 = MibScalar((1, 3, 6, 1, 4, 1, 12140, 1, 1, 2, 13, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 0, 1))).clone(namedValues=NamedValues(("offline", -1), ("not", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alLAIS5.setStatus('mandatory')
alLAISL5 = MibScalar((1, 3, 6, 1, 4, 1, 12140, 1, 1, 2, 13, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 0, 1))).clone(namedValues=NamedValues(("offline", -1), ("off", 0), ("on", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alLAISL5.setStatus('mandatory')
alLLLB5 = MibScalar((1, 3, 6, 1, 4, 1, 12140, 1, 1, 2, 13, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 0, 1))).clone(namedValues=NamedValues(("offline", -1), ("off", 0), ("on", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alLLLB5.setStatus('mandatory')
alLRLB5 = MibScalar((1, 3, 6, 1, 4, 1, 12140, 1, 1, 2, 13, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 0, 1))).clone(namedValues=NamedValues(("offline", -1), ("off", 0), ("on", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alLRLB5.setStatus('mandatory')
alL_Line6 = MibIdentifier((1, 3, 6, 1, 4, 1, 12140, 1, 1, 2, 14)).setLabel("alL-Line6")
alLLOSS6 = MibScalar((1, 3, 6, 1, 4, 1, 12140, 1, 1, 2, 14, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 0, 1))).clone(namedValues=NamedValues(("offline", -1), ("not", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alLLOSS6.setStatus('mandatory')
alLILOSS6 = MibScalar((1, 3, 6, 1, 4, 1, 12140, 1, 1, 2, 14, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 0, 1))).clone(namedValues=NamedValues(("offline", -1), ("off", 0), ("on", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alLILOSS6.setStatus('mandatory')
alLAIS6 = MibScalar((1, 3, 6, 1, 4, 1, 12140, 1, 1, 2, 14, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 0, 1))).clone(namedValues=NamedValues(("offline", -1), ("not", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alLAIS6.setStatus('mandatory')
alLAISL6 = MibScalar((1, 3, 6, 1, 4, 1, 12140, 1, 1, 2, 14, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 0, 1))).clone(namedValues=NamedValues(("offline", -1), ("off", 0), ("on", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alLAISL6.setStatus('mandatory')
alLLLB6 = MibScalar((1, 3, 6, 1, 4, 1, 12140, 1, 1, 2, 14, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 0, 1))).clone(namedValues=NamedValues(("offline", -1), ("off", 0), ("on", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alLLLB6.setStatus('mandatory')
alLRLB6 = MibScalar((1, 3, 6, 1, 4, 1, 12140, 1, 1, 2, 14, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 0, 1))).clone(namedValues=NamedValues(("offline", -1), ("off", 0), ("on", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alLRLB6.setStatus('mandatory')
alL_Line7 = MibIdentifier((1, 3, 6, 1, 4, 1, 12140, 1, 1, 2, 15)).setLabel("alL-Line7")
alLLOSS7 = MibScalar((1, 3, 6, 1, 4, 1, 12140, 1, 1, 2, 15, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 0, 1))).clone(namedValues=NamedValues(("offline", -1), ("not", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alLLOSS7.setStatus('mandatory')
alLILOSS7 = MibScalar((1, 3, 6, 1, 4, 1, 12140, 1, 1, 2, 15, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 0, 1))).clone(namedValues=NamedValues(("offline", -1), ("off", 0), ("on", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alLILOSS7.setStatus('mandatory')
alLAIS7 = MibScalar((1, 3, 6, 1, 4, 1, 12140, 1, 1, 2, 15, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 0, 1))).clone(namedValues=NamedValues(("offline", -1), ("not", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alLAIS7.setStatus('mandatory')
alLAISL7 = MibScalar((1, 3, 6, 1, 4, 1, 12140, 1, 1, 2, 15, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 0, 1))).clone(namedValues=NamedValues(("offline", -1), ("off", 0), ("on", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alLAISL7.setStatus('mandatory')
alLLLB7 = MibScalar((1, 3, 6, 1, 4, 1, 12140, 1, 1, 2, 15, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 0, 1))).clone(namedValues=NamedValues(("offline", -1), ("off", 0), ("on", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alLLLB7.setStatus('mandatory')
alLRLB7 = MibScalar((1, 3, 6, 1, 4, 1, 12140, 1, 1, 2, 15, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 0, 1))).clone(namedValues=NamedValues(("offline", -1), ("off", 0), ("on", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alLRLB7.setStatus('mandatory')
alL_Line8 = MibIdentifier((1, 3, 6, 1, 4, 1, 12140, 1, 1, 2, 16)).setLabel("alL-Line8")
alLLOSS8 = MibScalar((1, 3, 6, 1, 4, 1, 12140, 1, 1, 2, 16, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 0, 1))).clone(namedValues=NamedValues(("offline", -1), ("not", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alLLOSS8.setStatus('mandatory')
alLILOSS8 = MibScalar((1, 3, 6, 1, 4, 1, 12140, 1, 1, 2, 16, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 0, 1))).clone(namedValues=NamedValues(("offline", -1), ("off", 0), ("on", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alLILOSS8.setStatus('mandatory')
alLAIS8 = MibScalar((1, 3, 6, 1, 4, 1, 12140, 1, 1, 2, 16, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 0, 1))).clone(namedValues=NamedValues(("offline", -1), ("not", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alLAIS8.setStatus('mandatory')
alLAISL8 = MibScalar((1, 3, 6, 1, 4, 1, 12140, 1, 1, 2, 16, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 0, 1))).clone(namedValues=NamedValues(("offline", -1), ("off", 0), ("on", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alLAISL8.setStatus('mandatory')
alLLLB8 = MibScalar((1, 3, 6, 1, 4, 1, 12140, 1, 1, 2, 16, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 0, 1))).clone(namedValues=NamedValues(("offline", -1), ("off", 0), ("on", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alLLLB8.setStatus('mandatory')
alLRLB8 = MibScalar((1, 3, 6, 1, 4, 1, 12140, 1, 1, 2, 16, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 0, 1))).clone(namedValues=NamedValues(("offline", -1), ("off", 0), ("on", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alLRLB8.setStatus('mandatory')
alL_Line9 = MibIdentifier((1, 3, 6, 1, 4, 1, 12140, 1, 1, 2, 17)).setLabel("alL-Line9")
alLLOSS9 = MibScalar((1, 3, 6, 1, 4, 1, 12140, 1, 1, 2, 17, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 0, 1))).clone(namedValues=NamedValues(("offline", -1), ("not", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alLLOSS9.setStatus('mandatory')
alLILOSS9 = MibScalar((1, 3, 6, 1, 4, 1, 12140, 1, 1, 2, 17, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 0, 1))).clone(namedValues=NamedValues(("offline", -1), ("off", 0), ("on", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alLILOSS9.setStatus('mandatory')
alLAIS9 = MibScalar((1, 3, 6, 1, 4, 1, 12140, 1, 1, 2, 17, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 0, 1))).clone(namedValues=NamedValues(("offline", -1), ("not", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alLAIS9.setStatus('mandatory')
alLAISL9 = MibScalar((1, 3, 6, 1, 4, 1, 12140, 1, 1, 2, 17, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 0, 1))).clone(namedValues=NamedValues(("offline", -1), ("off", 0), ("on", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alLAISL9.setStatus('mandatory')
alLLLB9 = MibScalar((1, 3, 6, 1, 4, 1, 12140, 1, 1, 2, 17, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 0, 1))).clone(namedValues=NamedValues(("offline", -1), ("off", 0), ("on", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alLLLB9.setStatus('mandatory')
alLRLB9 = MibScalar((1, 3, 6, 1, 4, 1, 12140, 1, 1, 2, 17, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 0, 1))).clone(namedValues=NamedValues(("offline", -1), ("off", 0), ("on", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alLRLB9.setStatus('mandatory')
alL_Line10 = MibIdentifier((1, 3, 6, 1, 4, 1, 12140, 1, 1, 2, 18)).setLabel("alL-Line10")
alLLOSS10 = MibScalar((1, 3, 6, 1, 4, 1, 12140, 1, 1, 2, 18, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 0, 1))).clone(namedValues=NamedValues(("offline", -1), ("not", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alLLOSS10.setStatus('mandatory')
alLILOSS10 = MibScalar((1, 3, 6, 1, 4, 1, 12140, 1, 1, 2, 18, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 0, 1))).clone(namedValues=NamedValues(("offline", -1), ("off", 0), ("on", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alLILOSS10.setStatus('mandatory')
alLAIS10 = MibScalar((1, 3, 6, 1, 4, 1, 12140, 1, 1, 2, 18, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 0, 1))).clone(namedValues=NamedValues(("offline", -1), ("not", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alLAIS10.setStatus('mandatory')
alLAISL10 = MibScalar((1, 3, 6, 1, 4, 1, 12140, 1, 1, 2, 18, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 0, 1))).clone(namedValues=NamedValues(("offline", -1), ("off", 0), ("on", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alLAISL10.setStatus('mandatory')
alLLLB10 = MibScalar((1, 3, 6, 1, 4, 1, 12140, 1, 1, 2, 18, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 0, 1))).clone(namedValues=NamedValues(("offline", -1), ("off", 0), ("on", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alLLLB10.setStatus('mandatory')
alLRLB10 = MibScalar((1, 3, 6, 1, 4, 1, 12140, 1, 1, 2, 18, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 0, 1))).clone(namedValues=NamedValues(("offline", -1), ("off", 0), ("on", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alLRLB10.setStatus('mandatory')
alL_Line11 = MibIdentifier((1, 3, 6, 1, 4, 1, 12140, 1, 1, 2, 19)).setLabel("alL-Line11")
alLLOSS11 = MibScalar((1, 3, 6, 1, 4, 1, 12140, 1, 1, 2, 19, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 0, 1))).clone(namedValues=NamedValues(("offline", -1), ("not", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alLLOSS11.setStatus('mandatory')
alLILOSS11 = MibScalar((1, 3, 6, 1, 4, 1, 12140, 1, 1, 2, 19, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 0, 1))).clone(namedValues=NamedValues(("offline", -1), ("off", 0), ("on", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alLILOSS11.setStatus('mandatory')
alLAIS11 = MibScalar((1, 3, 6, 1, 4, 1, 12140, 1, 1, 2, 19, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 0, 1))).clone(namedValues=NamedValues(("offline", -1), ("not", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alLAIS11.setStatus('mandatory')
alLAISL11 = MibScalar((1, 3, 6, 1, 4, 1, 12140, 1, 1, 2, 19, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 0, 1))).clone(namedValues=NamedValues(("offline", -1), ("off", 0), ("on", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alLAISL11.setStatus('mandatory')
alLLLB11 = MibScalar((1, 3, 6, 1, 4, 1, 12140, 1, 1, 2, 19, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 0, 1))).clone(namedValues=NamedValues(("offline", -1), ("off", 0), ("on", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alLLLB11.setStatus('mandatory')
alLRLB11 = MibScalar((1, 3, 6, 1, 4, 1, 12140, 1, 1, 2, 19, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 0, 1))).clone(namedValues=NamedValues(("offline", -1), ("off", 0), ("on", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alLRLB11.setStatus('mandatory')
alL_Line12 = MibIdentifier((1, 3, 6, 1, 4, 1, 12140, 1, 1, 2, 20)).setLabel("alL-Line12")
alLLOSS12 = MibScalar((1, 3, 6, 1, 4, 1, 12140, 1, 1, 2, 20, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 0, 1))).clone(namedValues=NamedValues(("offline", -1), ("not", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alLLOSS12.setStatus('mandatory')
alLILOSS12 = MibScalar((1, 3, 6, 1, 4, 1, 12140, 1, 1, 2, 20, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 0, 1))).clone(namedValues=NamedValues(("offline", -1), ("off", 0), ("on", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alLILOSS12.setStatus('mandatory')
alLAIS12 = MibScalar((1, 3, 6, 1, 4, 1, 12140, 1, 1, 2, 20, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 0, 1))).clone(namedValues=NamedValues(("offline", -1), ("not", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alLAIS12.setStatus('mandatory')
alLAISL12 = MibScalar((1, 3, 6, 1, 4, 1, 12140, 1, 1, 2, 20, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 0, 1))).clone(namedValues=NamedValues(("offline", -1), ("off", 0), ("on", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alLAISL12.setStatus('mandatory')
alLLLB12 = MibScalar((1, 3, 6, 1, 4, 1, 12140, 1, 1, 2, 20, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 0, 1))).clone(namedValues=NamedValues(("offline", -1), ("off", 0), ("on", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alLLLB12.setStatus('mandatory')
alLRLB12 = MibScalar((1, 3, 6, 1, 4, 1, 12140, 1, 1, 2, 20, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 0, 1))).clone(namedValues=NamedValues(("offline", -1), ("off", 0), ("on", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alLRLB12.setStatus('mandatory')
remote_station = MibIdentifier((1, 3, 6, 1, 4, 1, 12140, 1, 1, 3)).setLabel("remote-station")
alR_General = MibIdentifier((1, 3, 6, 1, 4, 1, 12140, 1, 1, 3, 1)).setLabel("alR-General")
alRSupervisor = MibScalar((1, 3, 6, 1, 4, 1, 12140, 1, 1, 3, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 0, 1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("offline", -1), ("none", 0), ("terminal", 1), ("local", 2), ("network", 3), ("service", 4), ("alcoma", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alRSupervisor.setStatus('mandatory')
alRConfiguration = MibScalar((1, 3, 6, 1, 4, 1, 12140, 1, 1, 3, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 0, 1, 2, 3, 4, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33))).clone(namedValues=NamedValues(("offline", -1), ("undefined", 0), ("cf2xE1", 1), ("cf4xE1", 2), ("cf1xE2", 3), ("cf1xE1-Ethernet", 4), ("cf1xE3-E1", 7), ("cf1xEthernet", 8), ("cf1xEthF-E1", 9), ("cf1xEthF-E1-1xE1", 10), ("cf1xEthF-E1-2xE1", 11), ("cf1xEthF-E1-3xE1", 12), ("cf1xEthF-E1-4xE1", 13), ("cf1xEthF-E1-5xE1", 14), ("cf1xEthF-E1-6xE1", 15), ("cf1xEthF-E1-7xE1", 16), ("cf1xEthF-E1-8xE1", 17), ("cf1xEthF", 18), ("cf1xEthF-1xE1", 19), ("cf1xEthF-2xE1", 20), ("cf1xEthF-3xE1", 21), ("cf1xEthF-4xE1", 22), ("cf1xEthF-5xE1", 23), ("cf1xEthF-6xE1", 24), ("cf1xEthF-7xE1", 25), ("cf1xEthF-8xE1", 26), ("cf2xFEth", 27), ("cf2xFEth-1xE1", 28), ("cf4xFEth-2xE1", 29), ("cf2xGEth", 30), ("cf2xGEth-SFP100", 31), ("cf2xGEth-SFP1000", 32), ("cf2xGEth-SFPSG", 33)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alRConfiguration.setStatus('mandatory')
alRStatus = MibScalar((1, 3, 6, 1, 4, 1, 12140, 1, 1, 3, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("offline", 0), ("ok", 1), ("warning", 2), ("error", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alRStatus.setStatus('mandatory')
alRHistory = MibScalar((1, 3, 6, 1, 4, 1, 12140, 1, 1, 3, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 0, 1))).clone(namedValues=NamedValues(("offline", -1), ("no", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alRHistory.setStatus('mandatory')
alRIAISL = MibScalar((1, 3, 6, 1, 4, 1, 12140, 1, 1, 3, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 0, 1))).clone(namedValues=NamedValues(("offline", -1), ("off", 0), ("on", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alRIAISL.setStatus('mandatory')
alRILEVPWR = MibScalar((1, 3, 6, 1, 4, 1, 12140, 1, 1, 3, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 0, 1))).clone(namedValues=NamedValues(("offline", -1), ("off", 0), ("on", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alRILEVPWR.setStatus('mandatory')
alR_ODU = MibIdentifier((1, 3, 6, 1, 4, 1, 12140, 1, 1, 3, 2)).setLabel("alR-ODU")
alRRX_Level = MibScalar((1, 3, 6, 1, 4, 1, 12140, 1, 1, 3, 2, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 0, 1))).clone(namedValues=NamedValues(("offline", -1), ("ok", 0), ("low", 1)))).setLabel("alRRX-Level").setMaxAccess("readonly")
if mibBuilder.loadTexts: alRRX_Level.setStatus('mandatory')
alRTX_PWR = MibScalar((1, 3, 6, 1, 4, 1, 12140, 1, 1, 3, 2, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 0, 1))).clone(namedValues=NamedValues(("offline", -1), ("ok", 0), ("low", 1)))).setLabel("alRTX-PWR").setMaxAccess("readonly")
if mibBuilder.loadTexts: alRTX_PWR.setStatus('mandatory')
alRMode_TX = MibScalar((1, 3, 6, 1, 4, 1, 12140, 1, 1, 3, 2, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 0, 1, 2))).clone(namedValues=NamedValues(("offline", -1), ("off", 0), ("manual", 1), ("atpc", 2)))).setLabel("alRMode-TX").setMaxAccess("readonly")
if mibBuilder.loadTexts: alRMode_TX.setStatus('mandatory')
alRODU_LB = MibScalar((1, 3, 6, 1, 4, 1, 12140, 1, 1, 3, 2, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 0, 1))).clone(namedValues=NamedValues(("offline", -1), ("off", 0), ("on", 1)))).setLabel("alRODU-LB").setMaxAccess("readonly")
if mibBuilder.loadTexts: alRODU_LB.setStatus('mandatory')
alR_Modem = MibIdentifier((1, 3, 6, 1, 4, 1, 12140, 1, 1, 3, 3)).setLabel("alR-Modem")
alRQuality = MibScalar((1, 3, 6, 1, 4, 1, 12140, 1, 1, 3, 3, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 0, 1))).clone(namedValues=NamedValues(("offline", -1), ("ok", 0), ("out", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alRQuality.setStatus('mandatory')
alR_Supply = MibIdentifier((1, 3, 6, 1, 4, 1, 12140, 1, 1, 3, 4)).setLabel("alR-Supply")
alRVoltage_5V = MibScalar((1, 3, 6, 1, 4, 1, 12140, 1, 1, 3, 4, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 0, 1))).clone(namedValues=NamedValues(("offline", -1), ("ok", 0), ("high", 1)))).setLabel("alRVoltage-5V").setMaxAccess("readonly")
if mibBuilder.loadTexts: alRVoltage_5V.setStatus('mandatory')
alRVoltage_5Vor15V = MibScalar((1, 3, 6, 1, 4, 1, 12140, 1, 1, 3, 4, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 0, 1))).clone(namedValues=NamedValues(("offline", -1), ("ok", 0), ("low", 1)))).setLabel("alRVoltage-5Vor15V").setMaxAccess("readonly")
if mibBuilder.loadTexts: alRVoltage_5Vor15V.setStatus('mandatory')
alRVoltage_24V = MibScalar((1, 3, 6, 1, 4, 1, 12140, 1, 1, 3, 4, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 0, 1))).clone(namedValues=NamedValues(("offline", -1), ("ok", 0), ("low", 1)))).setLabel("alRVoltage-24V").setMaxAccess("readonly")
if mibBuilder.loadTexts: alRVoltage_24V.setStatus('mandatory')
alRCurrent_ODU = MibScalar((1, 3, 6, 1, 4, 1, 12140, 1, 1, 3, 4, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 0, 1))).clone(namedValues=NamedValues(("offline", -1), ("ok", 0), ("out", 1)))).setLabel("alRCurrent-ODU").setMaxAccess("readonly")
if mibBuilder.loadTexts: alRCurrent_ODU.setStatus('mandatory')
alRInput = MibScalar((1, 3, 6, 1, 4, 1, 12140, 1, 1, 3, 4, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 0, 1))).clone(namedValues=NamedValues(("offline", -1), ("ok", 0), ("low", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alRInput.setStatus('mandatory')
alR_IDU = MibIdentifier((1, 3, 6, 1, 4, 1, 12140, 1, 1, 3, 5)).setLabel("alR-IDU")
alREEPROM = MibScalar((1, 3, 6, 1, 4, 1, 12140, 1, 1, 3, 5, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 0, 1))).clone(namedValues=NamedValues(("offline", -1), ("ok", 0), ("bad", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alREEPROM.setStatus('mandatory')
alRRAM = MibScalar((1, 3, 6, 1, 4, 1, 12140, 1, 1, 3, 5, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 0, 1))).clone(namedValues=NamedValues(("offline", -1), ("ok", 0), ("bad", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alRRAM.setStatus('mandatory')
alRBattery = MibScalar((1, 3, 6, 1, 4, 1, 12140, 1, 1, 3, 5, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 0, 1))).clone(namedValues=NamedValues(("offline", -1), ("ok", 0), ("low", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alRBattery.setStatus('mandatory')
alRCommIDU = MibScalar((1, 3, 6, 1, 4, 1, 12140, 1, 1, 3, 5, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 0, 1))).clone(namedValues=NamedValues(("offline", -1), ("ok", 0), ("bad", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alRCommIDU.setStatus('mandatory')
alRCommRMT = MibScalar((1, 3, 6, 1, 4, 1, 12140, 1, 1, 3, 5, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 0, 1))).clone(namedValues=NamedValues(("offline", -1), ("ok", 0), ("error", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alRCommRMT.setStatus('mandatory')
alR_MUX = MibIdentifier((1, 3, 6, 1, 4, 1, 12140, 1, 1, 3, 6)).setLabel("alR-MUX")
alRBER_10E6 = MibScalar((1, 3, 6, 1, 4, 1, 12140, 1, 1, 3, 6, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 0, 1))).clone(namedValues=NamedValues(("offline", -1), ("no", 0), ("yes", 1)))).setLabel("alRBER-10E6").setMaxAccess("readonly")
if mibBuilder.loadTexts: alRBER_10E6.setStatus('mandatory')
alRBER_10E4 = MibScalar((1, 3, 6, 1, 4, 1, 12140, 1, 1, 3, 6, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 0, 1))).clone(namedValues=NamedValues(("offline", -1), ("no", 0), ("yes", 1)))).setLabel("alRBER-10E4").setMaxAccess("readonly")
if mibBuilder.loadTexts: alRBER_10E4.setStatus('mandatory')
alRFrame = MibScalar((1, 3, 6, 1, 4, 1, 12140, 1, 1, 3, 6, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 0, 1))).clone(namedValues=NamedValues(("offline", -1), ("ok", 0), ("loss", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alRFrame.setStatus('mandatory')
alR_PDH1 = MibIdentifier((1, 3, 6, 1, 4, 1, 12140, 1, 1, 3, 7)).setLabel("alR-PDH1")
alRPDHFrame = MibScalar((1, 3, 6, 1, 4, 1, 12140, 1, 1, 3, 7, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 0, 1))).clone(namedValues=NamedValues(("offline", -1), ("ok", 0), ("loss", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alRPDHFrame.setStatus('mandatory')
alRAISPDH = MibScalar((1, 3, 6, 1, 4, 1, 12140, 1, 1, 3, 7, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 0, 1))).clone(namedValues=NamedValues(("offline", -1), ("ok", 0), ("on", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alRAISPDH.setStatus('mandatory')
alRLLBPDH = MibScalar((1, 3, 6, 1, 4, 1, 12140, 1, 1, 3, 7, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 0, 1))).clone(namedValues=NamedValues(("offline", -1), ("off", 0), ("on", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alRLLBPDH.setStatus('mandatory')
alRRLBPDH = MibScalar((1, 3, 6, 1, 4, 1, 12140, 1, 1, 3, 7, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 0, 1))).clone(namedValues=NamedValues(("offline", -1), ("off", 0), ("on", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alRRLBPDH.setStatus('mandatory')
alR_Line1 = MibIdentifier((1, 3, 6, 1, 4, 1, 12140, 1, 1, 3, 9)).setLabel("alR-Line1")
alRLOSS1 = MibScalar((1, 3, 6, 1, 4, 1, 12140, 1, 1, 3, 9, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 0, 1))).clone(namedValues=NamedValues(("offline", -1), ("not", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alRLOSS1.setStatus('mandatory')
alRILOSS1 = MibScalar((1, 3, 6, 1, 4, 1, 12140, 1, 1, 3, 9, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 0, 1))).clone(namedValues=NamedValues(("offline", -1), ("off", 0), ("on", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alRILOSS1.setStatus('mandatory')
alRAIS1 = MibScalar((1, 3, 6, 1, 4, 1, 12140, 1, 1, 3, 9, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 0, 1))).clone(namedValues=NamedValues(("offline", -1), ("not", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alRAIS1.setStatus('mandatory')
alRAISL1 = MibScalar((1, 3, 6, 1, 4, 1, 12140, 1, 1, 3, 9, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 0, 1))).clone(namedValues=NamedValues(("offline", -1), ("off", 0), ("on", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alRAISL1.setStatus('mandatory')
alRLLB1 = MibScalar((1, 3, 6, 1, 4, 1, 12140, 1, 1, 3, 9, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 0, 1))).clone(namedValues=NamedValues(("offline", -1), ("off", 0), ("on", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alRLLB1.setStatus('mandatory')
alRRLB1 = MibScalar((1, 3, 6, 1, 4, 1, 12140, 1, 1, 3, 9, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 0, 1))).clone(namedValues=NamedValues(("offline", -1), ("off", 0), ("on", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alRRLB1.setStatus('mandatory')
alR_Line2 = MibIdentifier((1, 3, 6, 1, 4, 1, 12140, 1, 1, 3, 10)).setLabel("alR-Line2")
alRLOSS2 = MibScalar((1, 3, 6, 1, 4, 1, 12140, 1, 1, 3, 10, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 0, 1))).clone(namedValues=NamedValues(("offline", -1), ("not", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alRLOSS2.setStatus('mandatory')
alRILOSS2 = MibScalar((1, 3, 6, 1, 4, 1, 12140, 1, 1, 3, 10, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 0, 1))).clone(namedValues=NamedValues(("offline", -1), ("off", 0), ("on", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alRILOSS2.setStatus('mandatory')
alRAIS2 = MibScalar((1, 3, 6, 1, 4, 1, 12140, 1, 1, 3, 10, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 0, 1))).clone(namedValues=NamedValues(("offline", -1), ("not", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alRAIS2.setStatus('mandatory')
alRAISL2 = MibScalar((1, 3, 6, 1, 4, 1, 12140, 1, 1, 3, 10, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 0, 1))).clone(namedValues=NamedValues(("offline", -1), ("off", 0), ("on", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alRAISL2.setStatus('mandatory')
alRLLB2 = MibScalar((1, 3, 6, 1, 4, 1, 12140, 1, 1, 3, 10, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 0, 1))).clone(namedValues=NamedValues(("offline", -1), ("off", 0), ("on", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alRLLB2.setStatus('mandatory')
alRRLB2 = MibScalar((1, 3, 6, 1, 4, 1, 12140, 1, 1, 3, 10, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 0, 1))).clone(namedValues=NamedValues(("offline", -1), ("off", 0), ("on", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alRRLB2.setStatus('mandatory')
alR_Line3 = MibIdentifier((1, 3, 6, 1, 4, 1, 12140, 1, 1, 3, 11)).setLabel("alR-Line3")
alRLOSS3 = MibScalar((1, 3, 6, 1, 4, 1, 12140, 1, 1, 3, 11, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 0, 1))).clone(namedValues=NamedValues(("offline", -1), ("not", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alRLOSS3.setStatus('mandatory')
alRILOSS3 = MibScalar((1, 3, 6, 1, 4, 1, 12140, 1, 1, 3, 11, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 0, 1))).clone(namedValues=NamedValues(("offline", -1), ("off", 0), ("on", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alRILOSS3.setStatus('mandatory')
alRAIS3 = MibScalar((1, 3, 6, 1, 4, 1, 12140, 1, 1, 3, 11, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 0, 1))).clone(namedValues=NamedValues(("offline", -1), ("not", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alRAIS3.setStatus('mandatory')
alRAISL3 = MibScalar((1, 3, 6, 1, 4, 1, 12140, 1, 1, 3, 11, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 0, 1))).clone(namedValues=NamedValues(("offline", -1), ("off", 0), ("on", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alRAISL3.setStatus('mandatory')
alRLLB3 = MibScalar((1, 3, 6, 1, 4, 1, 12140, 1, 1, 3, 11, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 0, 1))).clone(namedValues=NamedValues(("offline", -1), ("off", 0), ("on", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alRLLB3.setStatus('mandatory')
alRRLB3 = MibScalar((1, 3, 6, 1, 4, 1, 12140, 1, 1, 3, 11, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 0, 1))).clone(namedValues=NamedValues(("offline", -1), ("off", 0), ("on", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alRRLB3.setStatus('mandatory')
alR_Line4 = MibIdentifier((1, 3, 6, 1, 4, 1, 12140, 1, 1, 3, 12)).setLabel("alR-Line4")
alRLOSS4 = MibScalar((1, 3, 6, 1, 4, 1, 12140, 1, 1, 3, 12, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 0, 1))).clone(namedValues=NamedValues(("offline", -1), ("not", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alRLOSS4.setStatus('mandatory')
alRILOSS4 = MibScalar((1, 3, 6, 1, 4, 1, 12140, 1, 1, 3, 12, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 0, 1))).clone(namedValues=NamedValues(("offline", -1), ("off", 0), ("on", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alRILOSS4.setStatus('mandatory')
alRAIS4 = MibScalar((1, 3, 6, 1, 4, 1, 12140, 1, 1, 3, 12, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 0, 1))).clone(namedValues=NamedValues(("offline", -1), ("not", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alRAIS4.setStatus('mandatory')
alRAISL4 = MibScalar((1, 3, 6, 1, 4, 1, 12140, 1, 1, 3, 12, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 0, 1))).clone(namedValues=NamedValues(("offline", -1), ("off", 0), ("on", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alRAISL4.setStatus('mandatory')
alRLLB4 = MibScalar((1, 3, 6, 1, 4, 1, 12140, 1, 1, 3, 12, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 0, 1))).clone(namedValues=NamedValues(("offline", -1), ("off", 0), ("on", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alRLLB4.setStatus('mandatory')
alRRLB4 = MibScalar((1, 3, 6, 1, 4, 1, 12140, 1, 1, 3, 12, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 0, 1))).clone(namedValues=NamedValues(("offline", -1), ("off", 0), ("on", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alRRLB4.setStatus('mandatory')
alR_Line5 = MibIdentifier((1, 3, 6, 1, 4, 1, 12140, 1, 1, 3, 13)).setLabel("alR-Line5")
alRLOSS5 = MibScalar((1, 3, 6, 1, 4, 1, 12140, 1, 1, 3, 13, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 0, 1))).clone(namedValues=NamedValues(("offline", -1), ("not", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alRLOSS5.setStatus('mandatory')
alRILOSS5 = MibScalar((1, 3, 6, 1, 4, 1, 12140, 1, 1, 3, 13, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 0, 1))).clone(namedValues=NamedValues(("offline", -1), ("off", 0), ("on", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alRILOSS5.setStatus('mandatory')
alRAIS5 = MibScalar((1, 3, 6, 1, 4, 1, 12140, 1, 1, 3, 13, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 0, 1))).clone(namedValues=NamedValues(("offline", -1), ("not", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alRAIS5.setStatus('mandatory')
alRAISL5 = MibScalar((1, 3, 6, 1, 4, 1, 12140, 1, 1, 3, 13, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 0, 1))).clone(namedValues=NamedValues(("offline", -1), ("off", 0), ("on", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alRAISL5.setStatus('mandatory')
alRLLB5 = MibScalar((1, 3, 6, 1, 4, 1, 12140, 1, 1, 3, 13, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 0, 1))).clone(namedValues=NamedValues(("offline", -1), ("off", 0), ("on", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alRLLB5.setStatus('mandatory')
alRRLB5 = MibScalar((1, 3, 6, 1, 4, 1, 12140, 1, 1, 3, 13, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 0, 1))).clone(namedValues=NamedValues(("offline", -1), ("off", 0), ("on", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alRRLB5.setStatus('mandatory')
alR_Line6 = MibIdentifier((1, 3, 6, 1, 4, 1, 12140, 1, 1, 3, 14)).setLabel("alR-Line6")
alRLOSS6 = MibScalar((1, 3, 6, 1, 4, 1, 12140, 1, 1, 3, 14, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 0, 1))).clone(namedValues=NamedValues(("offline", -1), ("not", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alRLOSS6.setStatus('mandatory')
alRILOSS6 = MibScalar((1, 3, 6, 1, 4, 1, 12140, 1, 1, 3, 14, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 0, 1))).clone(namedValues=NamedValues(("offline", -1), ("off", 0), ("on", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alRILOSS6.setStatus('mandatory')
alRAIS6 = MibScalar((1, 3, 6, 1, 4, 1, 12140, 1, 1, 3, 14, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 0, 1))).clone(namedValues=NamedValues(("offline", -1), ("not", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alRAIS6.setStatus('mandatory')
alRAISL6 = MibScalar((1, 3, 6, 1, 4, 1, 12140, 1, 1, 3, 14, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 0, 1))).clone(namedValues=NamedValues(("offline", -1), ("off", 0), ("on", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alRAISL6.setStatus('mandatory')
alRLLB6 = MibScalar((1, 3, 6, 1, 4, 1, 12140, 1, 1, 3, 14, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 0, 1))).clone(namedValues=NamedValues(("offline", -1), ("off", 0), ("on", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alRLLB6.setStatus('mandatory')
alRRLB6 = MibScalar((1, 3, 6, 1, 4, 1, 12140, 1, 1, 3, 14, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 0, 1))).clone(namedValues=NamedValues(("offline", -1), ("off", 0), ("on", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alRRLB6.setStatus('mandatory')
alR_Line7 = MibIdentifier((1, 3, 6, 1, 4, 1, 12140, 1, 1, 3, 15)).setLabel("alR-Line7")
alRLOSS7 = MibScalar((1, 3, 6, 1, 4, 1, 12140, 1, 1, 3, 15, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 0, 1))).clone(namedValues=NamedValues(("offline", -1), ("not", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alRLOSS7.setStatus('mandatory')
alRILOSS7 = MibScalar((1, 3, 6, 1, 4, 1, 12140, 1, 1, 3, 15, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 0, 1))).clone(namedValues=NamedValues(("offline", -1), ("off", 0), ("on", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alRILOSS7.setStatus('mandatory')
alRAIS7 = MibScalar((1, 3, 6, 1, 4, 1, 12140, 1, 1, 3, 15, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 0, 1))).clone(namedValues=NamedValues(("offline", -1), ("not", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alRAIS7.setStatus('mandatory')
alRAISL7 = MibScalar((1, 3, 6, 1, 4, 1, 12140, 1, 1, 3, 15, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 0, 1))).clone(namedValues=NamedValues(("offline", -1), ("off", 0), ("on", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alRAISL7.setStatus('mandatory')
alRLLB7 = MibScalar((1, 3, 6, 1, 4, 1, 12140, 1, 1, 3, 15, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 0, 1))).clone(namedValues=NamedValues(("offline", -1), ("off", 0), ("on", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alRLLB7.setStatus('mandatory')
alRRLB7 = MibScalar((1, 3, 6, 1, 4, 1, 12140, 1, 1, 3, 15, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 0, 1))).clone(namedValues=NamedValues(("offline", -1), ("off", 0), ("on", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alRRLB7.setStatus('mandatory')
alR_Line8 = MibIdentifier((1, 3, 6, 1, 4, 1, 12140, 1, 1, 3, 16)).setLabel("alR-Line8")
alRLOSS8 = MibScalar((1, 3, 6, 1, 4, 1, 12140, 1, 1, 3, 16, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 0, 1))).clone(namedValues=NamedValues(("offline", -1), ("not", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alRLOSS8.setStatus('mandatory')
alRILOSS8 = MibScalar((1, 3, 6, 1, 4, 1, 12140, 1, 1, 3, 16, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 0, 1))).clone(namedValues=NamedValues(("offline", -1), ("off", 0), ("on", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alRILOSS8.setStatus('mandatory')
alRAIS8 = MibScalar((1, 3, 6, 1, 4, 1, 12140, 1, 1, 3, 16, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 0, 1))).clone(namedValues=NamedValues(("offline", -1), ("not", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alRAIS8.setStatus('mandatory')
alRAISL8 = MibScalar((1, 3, 6, 1, 4, 1, 12140, 1, 1, 3, 16, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 0, 1))).clone(namedValues=NamedValues(("offline", -1), ("off", 0), ("on", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alRAISL8.setStatus('mandatory')
alRLLB8 = MibScalar((1, 3, 6, 1, 4, 1, 12140, 1, 1, 3, 16, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 0, 1))).clone(namedValues=NamedValues(("offline", -1), ("off", 0), ("on", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alRLLB8.setStatus('mandatory')
alRRLB8 = MibScalar((1, 3, 6, 1, 4, 1, 12140, 1, 1, 3, 16, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 0, 1))).clone(namedValues=NamedValues(("offline", -1), ("off", 0), ("on", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alRRLB8.setStatus('mandatory')
alR_Line9 = MibIdentifier((1, 3, 6, 1, 4, 1, 12140, 1, 1, 3, 17)).setLabel("alR-Line9")
alRLOSS9 = MibScalar((1, 3, 6, 1, 4, 1, 12140, 1, 1, 3, 17, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 0, 1))).clone(namedValues=NamedValues(("offline", -1), ("not", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alRLOSS9.setStatus('mandatory')
alRILOSS9 = MibScalar((1, 3, 6, 1, 4, 1, 12140, 1, 1, 3, 17, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 0, 1))).clone(namedValues=NamedValues(("offline", -1), ("off", 0), ("on", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alRILOSS9.setStatus('mandatory')
alRAIS9 = MibScalar((1, 3, 6, 1, 4, 1, 12140, 1, 1, 3, 17, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 0, 1))).clone(namedValues=NamedValues(("offline", -1), ("not", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alRAIS9.setStatus('mandatory')
alRAISL9 = MibScalar((1, 3, 6, 1, 4, 1, 12140, 1, 1, 3, 17, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 0, 1))).clone(namedValues=NamedValues(("offline", -1), ("off", 0), ("on", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alRAISL9.setStatus('mandatory')
alRLLB9 = MibScalar((1, 3, 6, 1, 4, 1, 12140, 1, 1, 3, 17, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 0, 1))).clone(namedValues=NamedValues(("offline", -1), ("off", 0), ("on", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alRLLB9.setStatus('mandatory')
alRRLB9 = MibScalar((1, 3, 6, 1, 4, 1, 12140, 1, 1, 3, 17, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 0, 1))).clone(namedValues=NamedValues(("offline", -1), ("off", 0), ("on", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alRRLB9.setStatus('mandatory')
alR_Line10 = MibIdentifier((1, 3, 6, 1, 4, 1, 12140, 1, 1, 3, 18)).setLabel("alR-Line10")
alRLOSS10 = MibScalar((1, 3, 6, 1, 4, 1, 12140, 1, 1, 3, 18, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 0, 1))).clone(namedValues=NamedValues(("offline", -1), ("not", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alRLOSS10.setStatus('mandatory')
alRILOSS10 = MibScalar((1, 3, 6, 1, 4, 1, 12140, 1, 1, 3, 18, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 0, 1))).clone(namedValues=NamedValues(("offline", -1), ("off", 0), ("on", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alRILOSS10.setStatus('mandatory')
alRAIS10 = MibScalar((1, 3, 6, 1, 4, 1, 12140, 1, 1, 3, 18, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 0, 1))).clone(namedValues=NamedValues(("offline", -1), ("not", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alRAIS10.setStatus('mandatory')
alRAISL10 = MibScalar((1, 3, 6, 1, 4, 1, 12140, 1, 1, 3, 18, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 0, 1))).clone(namedValues=NamedValues(("offline", -1), ("off", 0), ("on", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alRAISL10.setStatus('mandatory')
alRLLB10 = MibScalar((1, 3, 6, 1, 4, 1, 12140, 1, 1, 3, 18, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 0, 1))).clone(namedValues=NamedValues(("offline", -1), ("off", 0), ("on", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alRLLB10.setStatus('mandatory')
alRRLB10 = MibScalar((1, 3, 6, 1, 4, 1, 12140, 1, 1, 3, 18, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 0, 1))).clone(namedValues=NamedValues(("offline", -1), ("off", 0), ("on", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alRRLB10.setStatus('mandatory')
alR_Line11 = MibIdentifier((1, 3, 6, 1, 4, 1, 12140, 1, 1, 3, 19)).setLabel("alR-Line11")
alRLOSS11 = MibScalar((1, 3, 6, 1, 4, 1, 12140, 1, 1, 3, 19, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 0, 1))).clone(namedValues=NamedValues(("offline", -1), ("not", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alRLOSS11.setStatus('mandatory')
alRILOSS11 = MibScalar((1, 3, 6, 1, 4, 1, 12140, 1, 1, 3, 19, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 0, 1))).clone(namedValues=NamedValues(("offline", -1), ("off", 0), ("on", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alRILOSS11.setStatus('mandatory')
alRAIS11 = MibScalar((1, 3, 6, 1, 4, 1, 12140, 1, 1, 3, 19, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 0, 1))).clone(namedValues=NamedValues(("offline", -1), ("not", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alRAIS11.setStatus('mandatory')
alRAISL11 = MibScalar((1, 3, 6, 1, 4, 1, 12140, 1, 1, 3, 19, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 0, 1))).clone(namedValues=NamedValues(("offline", -1), ("off", 0), ("on", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alRAISL11.setStatus('mandatory')
alRLLB11 = MibScalar((1, 3, 6, 1, 4, 1, 12140, 1, 1, 3, 19, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 0, 1))).clone(namedValues=NamedValues(("offline", -1), ("off", 0), ("on", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alRLLB11.setStatus('mandatory')
alRRLB11 = MibScalar((1, 3, 6, 1, 4, 1, 12140, 1, 1, 3, 19, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 0, 1))).clone(namedValues=NamedValues(("offline", -1), ("off", 0), ("on", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alRRLB11.setStatus('mandatory')
alR_Line12 = MibIdentifier((1, 3, 6, 1, 4, 1, 12140, 1, 1, 3, 20)).setLabel("alR-Line12")
alRLOSS12 = MibScalar((1, 3, 6, 1, 4, 1, 12140, 1, 1, 3, 20, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 0, 1))).clone(namedValues=NamedValues(("offline", -1), ("not", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alRLOSS12.setStatus('mandatory')
alRILOSS12 = MibScalar((1, 3, 6, 1, 4, 1, 12140, 1, 1, 3, 20, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 0, 1))).clone(namedValues=NamedValues(("offline", -1), ("off", 0), ("on", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alRILOSS12.setStatus('mandatory')
alRAIS12 = MibScalar((1, 3, 6, 1, 4, 1, 12140, 1, 1, 3, 20, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 0, 1))).clone(namedValues=NamedValues(("offline", -1), ("not", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alRAIS12.setStatus('mandatory')
alRAISL12 = MibScalar((1, 3, 6, 1, 4, 1, 12140, 1, 1, 3, 20, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 0, 1))).clone(namedValues=NamedValues(("offline", -1), ("off", 0), ("on", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alRAISL12.setStatus('mandatory')
alRLLB12 = MibScalar((1, 3, 6, 1, 4, 1, 12140, 1, 1, 3, 20, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 0, 1))).clone(namedValues=NamedValues(("offline", -1), ("off", 0), ("on", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alRLLB12.setStatus('mandatory')
alRRLB12 = MibScalar((1, 3, 6, 1, 4, 1, 12140, 1, 1, 3, 20, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 0, 1))).clone(namedValues=NamedValues(("offline", -1), ("off", 0), ("on", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alRRLB12.setStatus('mandatory')
alRRLTrap = MibIdentifier((1, 3, 6, 1, 4, 1, 12140, 1, 1, 4))
alLast_Message = MibScalar((1, 3, 6, 1, 4, 1, 12140, 1, 1, 4, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 30))).setLabel("alLast-Message").setMaxAccess("readonly")
if mibBuilder.loadTexts: alLast_Message.setStatus('mandatory')
traps = MibIdentifier((1, 3, 6, 1, 4, 1, 12140, 0))
generalOFF = MibIdentifier((1, 3, 6, 1, 4, 1, 12140, 0, 1))
generalOK = MibIdentifier((1, 3, 6, 1, 4, 1, 12140, 0, 2))
generalWAR = MibIdentifier((1, 3, 6, 1, 4, 1, 12140, 0, 3))
generalERR = MibIdentifier((1, 3, 6, 1, 4, 1, 12140, 0, 4))
receiverLowAlarmOn = MibIdentifier((1, 3, 6, 1, 4, 1, 12140, 0, 5))
receiverLowAlarmOff = MibIdentifier((1, 3, 6, 1, 4, 1, 12140, 0, 6))
transmitterLowAlarmOn = MibIdentifier((1, 3, 6, 1, 4, 1, 12140, 0, 7))
transmitterLowAlarmOff = MibIdentifier((1, 3, 6, 1, 4, 1, 12140, 0, 8))
signalQualityAlarmOn = MibIdentifier((1, 3, 6, 1, 4, 1, 12140, 0, 9))
signalQualityAlarmOff = MibIdentifier((1, 3, 6, 1, 4, 1, 12140, 0, 10))
ber6EAlarmOn = MibIdentifier((1, 3, 6, 1, 4, 1, 12140, 0, 11))
ber6EAlarmOff = MibIdentifier((1, 3, 6, 1, 4, 1, 12140, 0, 12))
ber4EAlarmOn = MibIdentifier((1, 3, 6, 1, 4, 1, 12140, 0, 13))
ber4EAlarmOff = MibIdentifier((1, 3, 6, 1, 4, 1, 12140, 0, 14))
inputSupplyAlarmOn = MibIdentifier((1, 3, 6, 1, 4, 1, 12140, 0, 15))
inputSupplyAlarmOff = MibIdentifier((1, 3, 6, 1, 4, 1, 12140, 0, 16))
aisFromLineAlarmOn = MibIdentifier((1, 3, 6, 1, 4, 1, 12140, 0, 17))
aisFromLineAlarmOff = MibIdentifier((1, 3, 6, 1, 4, 1, 12140, 0, 18))
aisToLineAlarmOn = MibIdentifier((1, 3, 6, 1, 4, 1, 12140, 0, 19))
aisToLineAlarmOff = MibIdentifier((1, 3, 6, 1, 4, 1, 12140, 0, 20))
aisToPdhAlarmOn = MibIdentifier((1, 3, 6, 1, 4, 1, 12140, 0, 21))
aisToPdhAlarmOff = MibIdentifier((1, 3, 6, 1, 4, 1, 12140, 0, 22))
lossAtLineAlarmOn = MibIdentifier((1, 3, 6, 1, 4, 1, 12140, 0, 23))
lossAtLineAlarmOff = MibIdentifier((1, 3, 6, 1, 4, 1, 12140, 0, 24))
lossAtPdhAlarmOn = MibIdentifier((1, 3, 6, 1, 4, 1, 12140, 0, 25))
lossAtPdhAlarmOff = MibIdentifier((1, 3, 6, 1, 4, 1, 12140, 0, 26))
lossAtFrameAlarmOn = MibIdentifier((1, 3, 6, 1, 4, 1, 12140, 0, 27))
lossAtFrameAlarmOff = MibIdentifier((1, 3, 6, 1, 4, 1, 12140, 0, 28))
trapParam = MibIdentifier((1, 3, 6, 1, 4, 1, 12140, 1, 2, 1))
nmsTrapTime = MibScalar((1, 3, 6, 1, 4, 1, 12140, 1, 2, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 30))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nmsTrapTime.setStatus('mandatory')
trapSequence = MibScalar((1, 3, 6, 1, 4, 1, 12140, 1, 2, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 30))).setMaxAccess("readonly")
if mibBuilder.loadTexts: trapSequence.setStatus('mandatory')
mwRouteID = MibScalar((1, 3, 6, 1, 4, 1, 12140, 1, 2, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 30))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mwRouteID.setStatus('mandatory')
stationID = MibScalar((1, 3, 6, 1, 4, 1, 12140, 1, 2, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 30))).setMaxAccess("readonly")
if mibBuilder.loadTexts: stationID.setStatus('mandatory')
stationName = MibScalar((1, 3, 6, 1, 4, 1, 12140, 1, 2, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 30))).setMaxAccess("readonly")
if mibBuilder.loadTexts: stationName.setStatus('mandatory')
mgmtGWaddr = MibScalar((1, 3, 6, 1, 4, 1, 12140, 1, 2, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 30))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mgmtGWaddr.setStatus('mandatory')
lineID = MibScalar((1, 3, 6, 1, 4, 1, 12140, 1, 2, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 30))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lineID.setStatus('mandatory')
alMPStatusLED = MibIdentifier((1, 3, 6, 1, 4, 1, 12140, 2, 1))
alMPEHW = MibScalar((1, 3, 6, 1, 4, 1, 12140, 2, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 0, 1))).clone(namedValues=NamedValues(("offline", -1), ("ok", 0), ("error", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alMPEHW.setStatus('mandatory')
alMPESR = MibScalar((1, 3, 6, 1, 4, 1, 12140, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 0, 1))).clone(namedValues=NamedValues(("offline", -1), ("ok", 0), ("error", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alMPESR.setStatus('mandatory')
alMPESL = MibScalar((1, 3, 6, 1, 4, 1, 12140, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 0, 1))).clone(namedValues=NamedValues(("offline", -1), ("ok", 0), ("error", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alMPESL.setStatus('mandatory')
alMPCA = MibScalar((1, 3, 6, 1, 4, 1, 12140, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 0, 1))).clone(namedValues=NamedValues(("offline", -1), ("no", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alMPCA.setStatus('mandatory')
alMPGeneral = MibIdentifier((1, 3, 6, 1, 4, 1, 12140, 2, 2))
alMPSupervisor = MibScalar((1, 3, 6, 1, 4, 1, 12140, 2, 2, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 0, 1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("offline", -1), ("none", 0), ("terminal", 1), ("local", 2), ("network", 3), ("service", 4), ("alcoma", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alMPSupervisor.setStatus('mandatory')
alMPConfiguration = MibScalar((1, 3, 6, 1, 4, 1, 12140, 2, 2, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 0, 1, 2, 3, 4, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33))).clone(namedValues=NamedValues(("offline", -1), ("undefined", 0), ("cf2xE1", 1), ("cf4xE1", 2), ("cf1xE2", 3), ("cf1xE1-Ethernet", 4), ("cf1xE3-E1", 7), ("cf1xEthernet", 8), ("cf1xEthF-E1", 9), ("cf1xEthF-E1-1xE1", 10), ("cf1xEthF-E1-2xE1", 11), ("cf1xEthF-E1-3xE1", 12), ("cf1xEthF-E1-4xE1", 13), ("cf1xEthF-E1-5xE1", 14), ("cf1xEthF-E1-6xE1", 15), ("cf1xEthF-E1-7xE1", 16), ("cf1xEthF-E1-8xE1", 17), ("cf1xEthF", 18), ("cf1xEthF-1xE1", 19), ("cf1xEthF-2xE1", 20), ("cf1xEthF-3xE1", 21), ("cf1xEthF-4xE1", 22), ("cf1xEthF-5xE1", 23), ("cf1xEthF-6xE1", 24), ("cf1xEthF-7xE1", 25), ("cf1xEthF-8xE1", 26), ("cf2xFEth", 27), ("cf2xFEth-1xE1", 28), ("cf4xFEth-2xE1", 29), ("cf2xGEth", 30), ("cf2xGEth-SFP100", 31), ("cf2xGEth-SFP1000", 32), ("cf2xGEth-SFPSG", 33)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alMPConfiguration.setStatus('mandatory')
alMPStatus = MibScalar((1, 3, 6, 1, 4, 1, 12140, 2, 2, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("offline", 0), ("ok", 1), ("warning", 2), ("error", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alMPStatus.setStatus('mandatory')
alMPHistory = MibScalar((1, 3, 6, 1, 4, 1, 12140, 2, 2, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 0, 1))).clone(namedValues=NamedValues(("offline", -1), ("no", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alMPHistory.setStatus('mandatory')
alMPIAISL = MibScalar((1, 3, 6, 1, 4, 1, 12140, 2, 2, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 0, 1))).clone(namedValues=NamedValues(("offline", -1), ("off", 0), ("on", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alMPIAISL.setStatus('mandatory')
alMPILEVPWR = MibScalar((1, 3, 6, 1, 4, 1, 12140, 2, 2, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 0, 1))).clone(namedValues=NamedValues(("offline", -1), ("off", 0), ("on", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alMPILEVPWR.setStatus('mandatory')
alMPODU = MibIdentifier((1, 3, 6, 1, 4, 1, 12140, 2, 3))
alMPTuneTX = MibScalar((1, 3, 6, 1, 4, 1, 12140, 2, 3, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 30))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alMPTuneTX.setStatus('mandatory')
alMPTuneRX = MibScalar((1, 3, 6, 1, 4, 1, 12140, 2, 3, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 30))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alMPTuneRX.setStatus('mandatory')
alMPTX_PWR = MibScalar((1, 3, 6, 1, 4, 1, 12140, 2, 3, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-128))).clone(namedValues=NamedValues(("offline", -128)))).setLabel("alMPTX-PWR").setMaxAccess("readonly")
if mibBuilder.loadTexts: alMPTX_PWR.setStatus('mandatory')
alMPRX_Level = MibScalar((1, 3, 6, 1, 4, 1, 12140, 2, 3, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-128))).clone(namedValues=NamedValues(("offline", -128)))).setLabel("alMPRX-Level").setMaxAccess("readonly")
if mibBuilder.loadTexts: alMPRX_Level.setStatus('mandatory')
alMPTX_PWRAlrm = MibScalar((1, 3, 6, 1, 4, 1, 12140, 2, 3, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 0, 1))).clone(namedValues=NamedValues(("offline", -1), ("ok", 0), ("out", 1)))).setLabel("alMPTX-PWRAlrm").setMaxAccess("readonly")
if mibBuilder.loadTexts: alMPTX_PWRAlrm.setStatus('mandatory')
alMPRX_LevelAlrm = MibScalar((1, 3, 6, 1, 4, 1, 12140, 2, 3, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 0, 1))).clone(namedValues=NamedValues(("offline", -1), ("ok", 0), ("low", 1)))).setLabel("alMPRX-LevelAlrm").setMaxAccess("readonly")
if mibBuilder.loadTexts: alMPRX_LevelAlrm.setStatus('mandatory')
alMPMode_TX = MibScalar((1, 3, 6, 1, 4, 1, 12140, 2, 3, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 0, 1, 2))).clone(namedValues=NamedValues(("offline", -1), ("off", 0), ("manual", 1), ("atpc", 2)))).setLabel("alMPMode-TX").setMaxAccess("readonly")
if mibBuilder.loadTexts: alMPMode_TX.setStatus('mandatory')
alMPODU_LB = MibScalar((1, 3, 6, 1, 4, 1, 12140, 2, 3, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 0, 1))).clone(namedValues=NamedValues(("offline", -1), ("off", 0), ("on", 1)))).setLabel("alMPODU-LB").setMaxAccess("readonly")
if mibBuilder.loadTexts: alMPODU_LB.setStatus('mandatory')
alMPTemperature = MibScalar((1, 3, 6, 1, 4, 1, 12140, 2, 3, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1))).clone(namedValues=NamedValues(("offline", -1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alMPTemperature.setStatus('mandatory')
alMPModem = MibIdentifier((1, 3, 6, 1, 4, 1, 12140, 2, 4))
alMPQuality = MibScalar((1, 3, 6, 1, 4, 1, 12140, 2, 4, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1))).clone(namedValues=NamedValues(("offline", -1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alMPQuality.setStatus('mandatory')
alMPSNR = MibScalar((1, 3, 6, 1, 4, 1, 12140, 2, 4, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 30))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alMPSNR.setStatus('mandatory')
alMPQualityAlrm = MibScalar((1, 3, 6, 1, 4, 1, 12140, 2, 4, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 0, 1))).clone(namedValues=NamedValues(("offline", -1), ("ok", 0), ("out", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alMPQualityAlrm.setStatus('mandatory')
alMPSNRAlrm = MibScalar((1, 3, 6, 1, 4, 1, 12140, 2, 4, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 0, 1))).clone(namedValues=NamedValues(("offline", -1), ("ok", 0), ("low", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alMPSNRAlrm.setStatus('mandatory')
alMPRate = MibScalar((1, 3, 6, 1, 4, 1, 12140, 2, 4, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62))).clone(namedValues=NamedValues(("offline", -1), ("ndef", 0), ("r300Mbps", 1), ("r200Mbps", 2), ("r16Mbps1", 3), ("r282Mbps", 4), ("r40Mbps1", 5), ("r20Mbps1", 6), ("r10Mbps1", 7), ("r5Mbps1", 8), ("r179Mbps", 9), ("r230Mbps", 10), ("r14Mbps", 11), ("r32Mbps2", 12), ("r44Mbps", 13), ("r22Mbps", 14), ("r11Mbps", 15), ("r5Mbps", 16), ("r66Mbps", 17), ("r33Mbps", 18), ("r16Mbps", 19), ("r8Mbps", 20), ("r80Mbps", 21), ("r333Mbps", 22), ("r355Mbps", 23), ("r384Mbps", 24), ("r50Mbps", 25), ("r72Mbps", 26), ("r100Mbps", 27), ("r123Mbps", 28), ("r158Mbps", 29), ("r168Mbps", 30), ("r77Mbps", 31), ("r35Mbps", 32), ("r25Mbps", 33), ("r165Mbps", 34), ("r61Mbps", 35), ("r39Mbps", 36), ("r19Mbps", 37), ("r17Mbps", 38), ("r30Mbps", 39), ("r34Mbps", 40), ("r60Mbps", 41), ("r178Mbps", 42), ("r186Mbps", 43), ("r1250Mbps", 44), ("r70Mbps", 45), ("r58Mbps", 46), ("r116Mbps", 47), ("r149Mbps", 48), ("r183Mbps", 49), ("r216Mbps", 50), ("r249Mbps", 51), ("r31Mbps", 52), ("r41Mbps", 53), ("r59Mbps", 54), ("r64Mbps", 55), ("r69Mbps", 56), ("r83Mbps", 57), ("r102Mbps", 58), ("r119Mbps", 59), ("r127Mbps", 60), ("r137Mbps", 61), ("r89Mbps", 62)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alMPRate.setStatus('mandatory')
alMPQAM = MibScalar((1, 3, 6, 1, 4, 1, 12140, 2, 4, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11))).clone(namedValues=NamedValues(("offline", -1), ("ndef", 0), ("mp4FSK", 1), ("mpQPSK", 2), ("mp4QAM1", 3), ("mp8QAM", 4), ("mp16QAM1", 5), ("mp4QAM2", 6), ("mp16QAM2", 7), ("mp32QAM", 8), ("mp64QAM", 9), ("mp128QAM", 10), ("mp256QAM", 11)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alMPQAM.setStatus('mandatory')
alMPActiveACM = MibScalar((1, 3, 6, 1, 4, 1, 12140, 2, 4, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 0, 1))).clone(namedValues=NamedValues(("offline", -1), ("off", 0), ("on", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alMPActiveACM.setStatus('mandatory')
alMPStatusACM = MibScalar((1, 3, 6, 1, 4, 1, 12140, 2, 4, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 0, 1))).clone(namedValues=NamedValues(("offline", -1), ("normal", 0), ("low", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alMPStatusACM.setStatus('mandatory')
alMPSupply = MibIdentifier((1, 3, 6, 1, 4, 1, 12140, 2, 5))
alMPInput = MibScalar((1, 3, 6, 1, 4, 1, 12140, 2, 5, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 0, 1))).clone(namedValues=NamedValues(("offline", -1), ("ok", 0), ("low", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alMPInput.setStatus('mandatory')
alMPRDG = MibIdentifier((1, 3, 6, 1, 4, 1, 12140, 2, 6))
alMPEEPROM = MibScalar((1, 3, 6, 1, 4, 1, 12140, 2, 6, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 0, 1))).clone(namedValues=NamedValues(("offline", -1), ("ok", 0), ("bad", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alMPEEPROM.setStatus('mandatory')
alMPRAM = MibScalar((1, 3, 6, 1, 4, 1, 12140, 2, 6, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 0, 1))).clone(namedValues=NamedValues(("offline", -1), ("ok", 0), ("bad", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alMPRAM.setStatus('mandatory')
alMPCommRMT = MibScalar((1, 3, 6, 1, 4, 1, 12140, 2, 6, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 0, 1))).clone(namedValues=NamedValues(("offline", -1), ("ok", 0), ("error", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alMPCommRMT.setStatus('mandatory')
alMPMUX = MibIdentifier((1, 3, 6, 1, 4, 1, 12140, 2, 7))
alMPBER = MibScalar((1, 3, 6, 1, 4, 1, 12140, 2, 7, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 30))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alMPBER.setStatus('mandatory')
alMPBER_10E6 = MibScalar((1, 3, 6, 1, 4, 1, 12140, 2, 7, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 0, 1))).clone(namedValues=NamedValues(("offline", -1), ("no", 0), ("yes", 1)))).setLabel("alMPBER-10E6").setMaxAccess("readonly")
if mibBuilder.loadTexts: alMPBER_10E6.setStatus('mandatory')
alMPBER_10E4 = MibScalar((1, 3, 6, 1, 4, 1, 12140, 2, 7, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 0, 1))).clone(namedValues=NamedValues(("offline", -1), ("no", 0), ("yes", 1)))).setLabel("alMPBER-10E4").setMaxAccess("readonly")
if mibBuilder.loadTexts: alMPBER_10E4.setStatus('mandatory')
alMPFrame = MibScalar((1, 3, 6, 1, 4, 1, 12140, 2, 7, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 0, 1))).clone(namedValues=NamedValues(("offline", -1), ("ok", 0), ("loss", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alMPFrame.setStatus('mandatory')
alMPLine1 = MibIdentifier((1, 3, 6, 1, 4, 1, 12140, 2, 8))
alMPLOSS1 = MibScalar((1, 3, 6, 1, 4, 1, 12140, 2, 8, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 0, 1))).clone(namedValues=NamedValues(("offline", -1), ("not", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alMPLOSS1.setStatus('mandatory')
alMPILOSS1 = MibScalar((1, 3, 6, 1, 4, 1, 12140, 2, 8, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 0, 1))).clone(namedValues=NamedValues(("offline", -1), ("off", 0), ("on", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alMPILOSS1.setStatus('mandatory')
alMPAIS1 = MibScalar((1, 3, 6, 1, 4, 1, 12140, 2, 8, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 0, 1))).clone(namedValues=NamedValues(("offline", -1), ("not", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alMPAIS1.setStatus('mandatory')
alMPAISL1 = MibScalar((1, 3, 6, 1, 4, 1, 12140, 2, 8, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 0, 1))).clone(namedValues=NamedValues(("offline", -1), ("off", 0), ("on", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alMPAISL1.setStatus('mandatory')
alMPLLB1 = MibScalar((1, 3, 6, 1, 4, 1, 12140, 2, 8, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 0, 1))).clone(namedValues=NamedValues(("offline", -1), ("off", 0), ("on", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alMPLLB1.setStatus('mandatory')
alMPRLB1 = MibScalar((1, 3, 6, 1, 4, 1, 12140, 2, 8, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 0, 1))).clone(namedValues=NamedValues(("offline", -1), ("off", 0), ("on", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alMPRLB1.setStatus('mandatory')
alMPLine2 = MibIdentifier((1, 3, 6, 1, 4, 1, 12140, 2, 9))
alMPLOSS2 = MibScalar((1, 3, 6, 1, 4, 1, 12140, 2, 9, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 0, 1))).clone(namedValues=NamedValues(("offline", -1), ("not", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alMPLOSS2.setStatus('mandatory')
alMPILOSS2 = MibScalar((1, 3, 6, 1, 4, 1, 12140, 2, 9, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 0, 1))).clone(namedValues=NamedValues(("offline", -1), ("off", 0), ("on", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alMPILOSS2.setStatus('mandatory')
alMPLink2 = MibScalar((1, 3, 6, 1, 4, 1, 12140, 2, 9, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 0, 1))).clone(namedValues=NamedValues(("offline", -1), ("down", 0), ("up", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alMPLink2.setStatus('mandatory')
alMPSpeed2 = MibScalar((1, 3, 6, 1, 4, 1, 12140, 2, 9, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 0, 1, 2))).clone(namedValues=NamedValues(("offline", -1), ("e10Mbps", 0), ("e100Mbps", 1), ("e1000Mbps", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alMPSpeed2.setStatus('mandatory')
alMPType2 = MibScalar((1, 3, 6, 1, 4, 1, 12140, 2, 9, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 0, 1))).clone(namedValues=NamedValues(("offline", -1), ("halfduplex", 0), ("fullduplex", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alMPType2.setStatus('mandatory')
alMPFlow2 = MibScalar((1, 3, 6, 1, 4, 1, 12140, 2, 9, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 0, 1))).clone(namedValues=NamedValues(("offline", -1), ("off", 0), ("on", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alMPFlow2.setStatus('mandatory')
alMPPktRX2 = MibScalar((1, 3, 6, 1, 4, 1, 12140, 2, 9, 7), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alMPPktRX2.setStatus('mandatory')
alMPByteRX2 = MibScalar((1, 3, 6, 1, 4, 1, 12140, 2, 9, 8), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alMPByteRX2.setStatus('mandatory')
alMPPktTX2 = MibScalar((1, 3, 6, 1, 4, 1, 12140, 2, 9, 9), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alMPPktTX2.setStatus('mandatory')
alMPByteTX2 = MibScalar((1, 3, 6, 1, 4, 1, 12140, 2, 9, 10), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alMPByteTX2.setStatus('mandatory')
alMPError2 = MibScalar((1, 3, 6, 1, 4, 1, 12140, 2, 9, 11), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alMPError2.setStatus('mandatory')
alMPCollision2 = MibScalar((1, 3, 6, 1, 4, 1, 12140, 2, 9, 12), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alMPCollision2.setStatus('mandatory')
alMPLine3 = MibIdentifier((1, 3, 6, 1, 4, 1, 12140, 2, 10))
alMPLOSS3 = MibScalar((1, 3, 6, 1, 4, 1, 12140, 2, 10, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 0, 1))).clone(namedValues=NamedValues(("offline", -1), ("not", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alMPLOSS3.setStatus('mandatory')
alMPILOSS3 = MibScalar((1, 3, 6, 1, 4, 1, 12140, 2, 10, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 0, 1))).clone(namedValues=NamedValues(("offline", -1), ("off", 0), ("on", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alMPILOSS3.setStatus('mandatory')
alMPLink3 = MibScalar((1, 3, 6, 1, 4, 1, 12140, 2, 10, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 0, 1))).clone(namedValues=NamedValues(("offline", -1), ("down", 0), ("up", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alMPLink3.setStatus('mandatory')
alMPSpeed3 = MibScalar((1, 3, 6, 1, 4, 1, 12140, 2, 10, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 0, 1, 2))).clone(namedValues=NamedValues(("offline", -1), ("e10Mbps", 0), ("e100Mbps", 1), ("e1000Mbps", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alMPSpeed3.setStatus('mandatory')
alMPType3 = MibScalar((1, 3, 6, 1, 4, 1, 12140, 2, 10, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 0, 1))).clone(namedValues=NamedValues(("offline", -1), ("halfduplex", 0), ("fullduplex", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alMPType3.setStatus('mandatory')
alMPFlow3 = MibScalar((1, 3, 6, 1, 4, 1, 12140, 2, 10, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 0, 1))).clone(namedValues=NamedValues(("offline", -1), ("off", 0), ("on", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alMPFlow3.setStatus('mandatory')
alMPPktRX3 = MibScalar((1, 3, 6, 1, 4, 1, 12140, 2, 10, 7), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alMPPktRX3.setStatus('mandatory')
alMPByteRX3 = MibScalar((1, 3, 6, 1, 4, 1, 12140, 2, 10, 8), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alMPByteRX3.setStatus('mandatory')
alMPPktTX3 = MibScalar((1, 3, 6, 1, 4, 1, 12140, 2, 10, 9), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alMPPktTX3.setStatus('mandatory')
alMPByteTX3 = MibScalar((1, 3, 6, 1, 4, 1, 12140, 2, 10, 10), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alMPByteTX3.setStatus('mandatory')
alMPError3 = MibScalar((1, 3, 6, 1, 4, 1, 12140, 2, 10, 11), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alMPError3.setStatus('mandatory')
alMPCollision3 = MibScalar((1, 3, 6, 1, 4, 1, 12140, 2, 10, 12), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alMPCollision3.setStatus('mandatory')
alMPLine4 = MibIdentifier((1, 3, 6, 1, 4, 1, 12140, 2, 11))
alMPLOSS4 = MibScalar((1, 3, 6, 1, 4, 1, 12140, 2, 11, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 0, 1))).clone(namedValues=NamedValues(("offline", -1), ("not", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alMPLOSS4.setStatus('mandatory')
alMPILOSS4 = MibScalar((1, 3, 6, 1, 4, 1, 12140, 2, 11, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 0, 1))).clone(namedValues=NamedValues(("offline", -1), ("off", 0), ("on", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alMPILOSS4.setStatus('mandatory')
alMPLink4 = MibScalar((1, 3, 6, 1, 4, 1, 12140, 2, 11, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 0, 1))).clone(namedValues=NamedValues(("offline", -1), ("down", 0), ("up", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alMPLink4.setStatus('mandatory')
alMPSpeed4 = MibScalar((1, 3, 6, 1, 4, 1, 12140, 2, 11, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 0, 1, 2))).clone(namedValues=NamedValues(("offline", -1), ("e10Mbps", 0), ("e100Mbps", 1), ("e1000Mbps", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alMPSpeed4.setStatus('mandatory')
alMPType4 = MibScalar((1, 3, 6, 1, 4, 1, 12140, 2, 11, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 0, 1))).clone(namedValues=NamedValues(("offline", -1), ("halfduplex", 0), ("fullduplex", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alMPType4.setStatus('mandatory')
alMPFlow4 = MibScalar((1, 3, 6, 1, 4, 1, 12140, 2, 11, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 0, 1))).clone(namedValues=NamedValues(("offline", -1), ("off", 0), ("on", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alMPFlow4.setStatus('mandatory')
alMPPktRX4 = MibScalar((1, 3, 6, 1, 4, 1, 12140, 2, 11, 7), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alMPPktRX4.setStatus('mandatory')
alMPByteRX4 = MibScalar((1, 3, 6, 1, 4, 1, 12140, 2, 11, 8), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alMPByteRX4.setStatus('mandatory')
alMPPktTX4 = MibScalar((1, 3, 6, 1, 4, 1, 12140, 2, 11, 9), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alMPPktTX4.setStatus('mandatory')
alMPByteTX4 = MibScalar((1, 3, 6, 1, 4, 1, 12140, 2, 11, 10), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alMPByteTX4.setStatus('mandatory')
alMPError4 = MibScalar((1, 3, 6, 1, 4, 1, 12140, 2, 11, 11), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alMPError4.setStatus('mandatory')
alMPCollision4 = MibScalar((1, 3, 6, 1, 4, 1, 12140, 2, 11, 12), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alMPCollision4.setStatus('mandatory')
mibBuilder.exportSymbols("ALCOMA-MIB", generalOK=generalOK, alLAIS7=alLAIS7, alMPStatus=alMPStatus, alLILOSS11=alLILOSS11, alRVoltage_5V=alRVoltage_5V, alMPLink4=alMPLink4, alMPByteTX2=alMPByteTX2, alMPByteTX4=alMPByteTX4, alMPSpeed3=alMPSpeed3, alLVoltage_24V=alLVoltage_24V, alLAIS11=alLAIS11, alRHistory=alRHistory, alRILOSS11=alRILOSS11, alMPEEPROM=alMPEEPROM, alMPActiveACM=alMPActiveACM, alLRLB2=alLRLB2, alMPInput=alMPInput, alRAIS4=alRAIS4, alLILOSS6=alLILOSS6, alRLB1=alRLB1, alMPTemperature=alMPTemperature, alLILOSS3=alLILOSS3, alLILOSS5=alLILOSS5, alLRLB9=alLRLB9, alLILOSS4=alLILOSS4, alL_Line4=alL_Line4, alLAIS5=alLAIS5, alRILOSS7=alRILOSS7, lineID=lineID, alLILEVPWR=alLILEVPWR, alR_Line2=alR_Line2, alMPError4=alMPError4, alLRLB8=alLRLB8, alLTX_PWR=alLTX_PWR, alRLOSS9=alRLOSS9, alMPPktTX4=alMPPktTX4, alMPTX_PWR=alMPTX_PWR, alCA=alCA, alMPByteRX4=alMPByteRX4, alRAIS9=alRAIS9, alRCommRMT=alRCommRMT, alRBER_10E6=alRBER_10E6, alR_Line3=alR_Line3, alMPESR=alMPESR, alLVoltage_5V=alLVoltage_5V, alLRLB10=alLRLB10, alLLLB9=alLLLB9, alR_IDU=alR_IDU, alRAIS6=alRAIS6, alMPODU=alMPODU, transmitterLowAlarmOff=transmitterLowAlarmOff, alRAIS1=alRAIS1, transmitterLowAlarmOn=transmitterLowAlarmOn, alLRLB6=alLRLB6, alcoma=alcoma, alLSupervisor=alLSupervisor, alRLOSS10=alRLOSS10, alRLOSS5=alRLOSS5, alMPODU_LB=alMPODU_LB, alLLOSS6=alLLOSS6, alLLLB4=alLLLB4, alMPIAISL=alMPIAISL, alESL=alESL, alRVoltage_5Vor15V=alRVoltage_5Vor15V, alLILOSS2=alLILOSS2, alRAISL6=alRAISL6, alL_Line12=alL_Line12, products=products, alLLOSS7=alLLOSS7, alL_Line7=alL_Line7, alRRLB6=alRRLB6, alLBER_10E4=alLBER_10E4, receiverLowAlarmOn=receiverLowAlarmOn, alMPByteRX2=alMPByteRX2, alMPLine2=alMPLine2, alMPError3=alMPError3, alLEEPROM=alLEEPROM, alLLOSS3=alLLOSS3, alRAISL11=alRAISL11, alMPRDG=alMPRDG, alR_Supply=alR_Supply, generalWAR=generalWAR, aisFromLineAlarmOn=aisFromLineAlarmOn, alRAISL4=alRAISL4, alRVoltage_24V=alRVoltage_24V, alMPLink2=alMPLink2, alRLOSS1=alRLOSS1, alR_PDH1=alR_PDH1, alMPConfiguration=alMPConfiguration, alR_Line7=alR_Line7, alRIAISL=alRIAISL, traps=traps, alMPMode_TX=alMPMode_TX, alRRLB10=alRRLB10, alRLOSS8=alRLOSS8, alRLOSS12=alRLOSS12, alMPCollision4=alMPCollision4, alRAIS3=alRAIS3, alLLOSS10=alLLOSS10, alL_Line8=alL_Line8, alLRLB12=alLRLB12, alLAISL6=alLAISL6, alRBattery=alRBattery, lossAtLineAlarmOn=lossAtLineAlarmOn, ber6EAlarmOff=ber6EAlarmOff, alL_General=alL_General, alLAISL11=alLAISL11, alMPLOSS1=alMPLOSS1, alRADIO_RELAY_LINK=alRADIO_RELAY_LINK, alLAIS3=alLAIS3, alMPByteTX3=alMPByteTX3, alMPSpeed2=alMPSpeed2, alLBattery=alLBattery, alRAISL9=alRAISL9, alRRLTrap=alRRLTrap, alLAIS12=alLAIS12, alRLLB1=alRLLB1, alLLOSS9=alLLOSS9, alRFrame=alRFrame, alMPPktRX2=alMPPktRX2, alRAIS12=alRAIS12, alRAISL10=alRAISL10, alMPILOSS2=alMPILOSS2, alLLLB11=alLLLB11, alRLLB8=alRLLB8, alRLLB11=alRLLB11, alL_Supply=alL_Supply, alLConfiguration=alLConfiguration, alLAIS8=alLAIS8, alLLOSS5=alLLOSS5, lossAtLineAlarmOff=lossAtLineAlarmOff, alMPRLB1=alMPRLB1, alMPSpeed4=alMPSpeed4, alRILOSS3=alRILOSS3, alMPLine1=alMPLine1, alRAIS2=alRAIS2, mwRouteID=mwRouteID, alMPError2=alMPError2, alMPLink3=alMPLink3, alRILOSS8=alRILOSS8, alRPDHFrame=alRPDHFrame, alMPType4=alMPType4, alR_Line5=alR_Line5, alMPILOSS1=alMPILOSS1, alRRLBPDH=alRRLBPDH, alMPModem=alMPModem, alLRLB3=alLRLB3, alRAIS8=alRAIS8, alLLOSS11=alLLOSS11, alL_Line1=alL_Line1, alR_Line10=alR_Line10, alLLLB2=alLLLB2, aisToLineAlarmOn=aisToLineAlarmOn, alMPQAM=alMPQAM, alRMode_TX=alRMode_TX, alRAISPDH=alRAISPDH, alLLLB8=alLLLB8, alRRLB1=alRRLB1, alRAISL2=alRAISL2, alMPILOSS4=alMPILOSS4, alLAISL7=alLAISL7, alRAIS7=alRAIS7, alRLLB7=alRLLB7, alLAISL2=alLAISL2, alMPLOSS2=alMPLOSS2, alMPPktRX3=alMPPktRX3, alLIAISL=alLIAISL, alMPFrame=alMPFrame, alRAIS11=alRAIS11, lossAtPdhAlarmOff=lossAtPdhAlarmOff, alLCommIDU=alLCommIDU, receiverLowAlarmOff=receiverLowAlarmOff, alL_Modem=alL_Modem, alL_ODU=alL_ODU, alLLLB12=alLLLB12, alLFrame=alLFrame, alLAIS4=alLAIS4, alRLLB6=alRLLB6, alRLLB3=alRLLB3, alLLB1=alLLB1, alMPBER=alMPBER, alMPFlow3=alMPFlow3, alRRLB7=alRRLB7, alMPPktTX3=alMPPktTX3, alMPEHW=alMPEHW, alAISL1=alAISL1, alMPAIS1=alMPAIS1, alR_General=alR_General, alMPMUX=alMPMUX, alLast_Message=alLast_Message, alMPBER_10E6=alMPBER_10E6, alRConfiguration=alRConfiguration, alMPSNR=alMPSNR, alRSupervisor=alRSupervisor, alMPBER_10E4=alMPBER_10E4, alMPCollision2=alMPCollision2, signalQualityAlarmOn=signalQualityAlarmOn, alMPCollision3=alMPCollision3, alMPTuneRX=alMPTuneRX, alRILOSS6=alRILOSS6, alLCurrent_ODU=alLCurrent_ODU, alL_Line10=alL_Line10, alMPPktTX2=alMPPktTX2, remote_station=remote_station, alRAISL1=alRAISL1, alRRLB8=alRRLB8, alLStatus=alLStatus, alRILOSS4=alRILOSS4, alL_Line11=alL_Line11, alRLLBPDH=alRLLBPDH, alMPLine3=alMPLine3, alLLOSS2=alLLOSS2, alLAISL10=alLAISL10, alLRLB11=alLRLB11, alL_Line6=alL_Line6, alR_Line1=alR_Line1, alAIS1=alAIS1, alRILEVPWR=alRILEVPWR, alMPLOSS3=alMPLOSS3, alR_Modem=alR_Modem, trapParam=trapParam, stationName=stationName, alLHistory=alLHistory, alRRX_Level=alRRX_Level, alMPILEVPWR=alMPILEVPWR, alRRLB4=alRRLB4, alL_Line5=alL_Line5, alRAISL12=alRAISL12, alMPSNRAlrm=alMPSNRAlrm, alLRX_Level=alLRX_Level, alR_Line9=alR_Line9, ber4EAlarmOff=ber4EAlarmOff, alRILOSS12=alRILOSS12, alR_Line4=alR_Line4, alMPStatusLED=alMPStatusLED, alMPStatusACM=alMPStatusACM, alMPType3=alMPType3, alRTX_PWR=alRTX_PWR, alRLLB2=alRLLB2, alRBER_10E4=alRBER_10E4, alRRLB3=alRRLB3, alLLLB5=alLLLB5, alLQuality=alLQuality, alMPCA=alMPCA, alMPTX_PWRAlrm=alMPTX_PWRAlrm, alL_MUX=alL_MUX, alEHW=alEHW, alLOSS1=alLOSS1, alLLLBPDH=alLLLBPDH, alRLLB4=alRLLB4, alLAIS6=alLAIS6, alRRAM=alRRAM, alR_Line12=alR_Line12, aisFromLineAlarmOff=aisFromLineAlarmOff)
mibBuilder.exportSymbols("ALCOMA-MIB", alMPByteRX3=alMPByteRX3, alMPLine4=alMPLine4, alRCommIDU=alRCommIDU, alLILOSS9=alLILOSS9, nmsTrapTime=nmsTrapTime, alRStatus=alRStatus, alRRLB11=alRRLB11, alRLOSS3=alRLOSS3, alR_ODU=alR_ODU, alMPSupervisor=alMPSupervisor, alMP=alMP, alRInput=alRInput, alRILOSS9=alRILOSS9, alMPLLB1=alMPLLB1, generalERR=generalERR, alLRLB7=alLRLB7, alLAISL5=alLAISL5, alRLOSS4=alRLOSS4, alRLOSS2=alRLOSS2, alLAISL12=alLAISL12, alLLLB10=alLLLB10, alMPSupply=alMPSupply, alLILOSS10=alLILOSS10, alMPAISL1=alMPAISL1, alMPQuality=alMPQuality, alMPFlow2=alMPFlow2, alLAIS9=alLAIS9, alRLLB5=alRLLB5, alILOSS1=alILOSS1, alRRLB5=alRRLB5, ber4EAlarmOn=ber4EAlarmOn, alMPRX_Level=alMPRX_Level, alLAIS10=alLAIS10, alMPPktRX4=alMPPktRX4, alRAISL7=alRAISL7, alRAISL3=alRAISL3, alMPRX_LevelAlrm=alMPRX_LevelAlrm, alR_Line8=alR_Line8, alL_Line3=alL_Line3, alMPQualityAlrm=alMPQualityAlrm, alLBER_10E6=alLBER_10E6, alStatusLED=alStatusLED, alREEPROM=alREEPROM, inputSupplyAlarmOff=inputSupplyAlarmOff, aisToLineAlarmOff=aisToLineAlarmOff, alMPRate=alMPRate, alRRLB2=alRRLB2, alRRLB9=alRRLB9, alESR=alESR, alL_Line9=alL_Line9, alRLLB10=alRLLB10, alLInput=alLInput, alL_PDH1=alL_PDH1, alLODU_LB=alLODU_LB, alRILOSS2=alRILOSS2, alMPCommRMT=alMPCommRMT, alLAISL9=alLAISL9, aisToPdhAlarmOn=aisToPdhAlarmOn, alMPILOSS3=alMPILOSS3, alLLLB7=alLLLB7, alRAISL8=alRAISL8, alRLOSS7=alRLOSS7, alRILOSS10=alRILOSS10, alL_IDU=alL_IDU, alLILOSS8=alLILOSS8, aisToPdhAlarmOff=aisToPdhAlarmOff, alRILOSS5=alRILOSS5, alRLLB12=alRLLB12, alMPHistory=alMPHistory, lossAtFrameAlarmOn=lossAtFrameAlarmOn, alR_Line6=alR_Line6, mgmtGWaddr=mgmtGWaddr, alLAISL4=alLAISL4, alMPGeneral=alMPGeneral, alLAIS2=alLAIS2, generalOFF=generalOFF, alRLOSS6=alRLOSS6, alLILOSS12=alLILOSS12, alLLLB6=alLLLB6, alLLOSS4=alLLOSS4, alLMode_TX=alLMode_TX, alLLOSS8=alLLOSS8, alRAIS10=alRAIS10, ber6EAlarmOn=ber6EAlarmOn, alMPLOSS4=alMPLOSS4, alLILOSS7=alLILOSS7, alLAISPDH=alLAISPDH, alRODU_LB=alRODU_LB, signalQualityAlarmOff=signalQualityAlarmOff, alLAISL8=alLAISL8, alRRLB12=alRRLB12, alRLLB9=alRLLB9, alLRAM=alLRAM, alRILOSS1=alRILOSS1, alLRLB4=alLRLB4, alRAIS5=alRAIS5, alMPRAM=alMPRAM, alL_Line2=alL_Line2, alMPESL=alMPESL, alNMS=alNMS, alLLOSS12=alLLOSS12, lossAtPdhAlarmOn=lossAtPdhAlarmOn, alRQuality=alRQuality, alMPTuneTX=alMPTuneTX, alMPType2=alMPType2, alRAISL5=alRAISL5, alLPDHFrame=alLPDHFrame, alRCurrent_ODU=alRCurrent_ODU, inputSupplyAlarmOn=inputSupplyAlarmOn, local_station=local_station, alRLOSS11=alRLOSS11, alR_Line11=alR_Line11, alLRLB5=alLRLB5, stationID=stationID, alLAISL3=alLAISL3, alR_MUX=alR_MUX, trapSequence=trapSequence, alMPFlow4=alMPFlow4, alLCommRMT=alLCommRMT, alLVoltage_5Vor15V=alLVoltage_5Vor15V, lossAtFrameAlarmOff=lossAtFrameAlarmOff, alLLLB3=alLLLB3, alLRLBPDH=alLRLBPDH)
