#
# PySNMP MIB module UTILIZATION-MANAGEMENT-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/UTILIZATION-MANAGEMENT-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 21:22:56 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ConstraintsUnion, SingleValueConstraint, ValueSizeConstraint, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ConstraintsUnion", "SingleValueConstraint", "ValueSizeConstraint", "ValueRangeConstraint")
avayaSystemStats, = mibBuilder.importSymbols("AVAYAGEN-MIB", "avayaSystemStats")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
MibScalar, MibTable, MibTableRow, MibTableColumn, IpAddress, Integer32, NotificationType, Bits, iso, Counter64, MibIdentifier, Unsigned32, Counter32, TimeTicks, ModuleIdentity, Gauge32, ObjectIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "IpAddress", "Integer32", "NotificationType", "Bits", "iso", "Counter64", "MibIdentifier", "Unsigned32", "Counter32", "TimeTicks", "ModuleIdentity", "Gauge32", "ObjectIdentity")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
genStats = ModuleIdentity((1, 3, 6, 1, 4, 1, 6889, 2, 1, 11, 1))
genStats.setRevisions(('2003-05-18 16:16',))
if mibBuilder.loadTexts: genStats.setLastUpdated('190208200000Z')
if mibBuilder.loadTexts: genStats.setOrganization("Avaya's Concord Technology Center (CTC)")
class MBytes(TextualConvention, Integer32):
    status = 'current'

genCpuUtilization = MibIdentifier((1, 3, 6, 1, 4, 1, 6889, 2, 1, 11, 1, 1))
genCpuUtilizationTable = MibTable((1, 3, 6, 1, 4, 1, 6889, 2, 1, 11, 1, 1, 1), )
if mibBuilder.loadTexts: genCpuUtilizationTable.setStatus('current')
genCpuUtilizationEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6889, 2, 1, 11, 1, 1, 1, 1), ).setIndexNames((0, "UTILIZATION-MANAGEMENT-MIB", "genCpuIndex"))
if mibBuilder.loadTexts: genCpuUtilizationEntry.setStatus('current')
genCpuIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 1, 11, 1, 1, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genCpuIndex.setStatus('current')
genCpuUtilizationEnableMonitoring = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 1, 11, 1, 1, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: genCpuUtilizationEnableMonitoring.setStatus('current')
genCpuUtilizationEnableEventGeneration = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 1, 11, 1, 1, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: genCpuUtilizationEnableEventGeneration.setStatus('current')
genCpuUtilizationHighThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 1, 11, 1, 1, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(50, 99))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: genCpuUtilizationHighThreshold.setStatus('current')
genCpuAverageUtilization = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 1, 11, 1, 1, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: genCpuAverageUtilization.setStatus('current')
genCpuCurrentUtilization = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 1, 11, 1, 1, 1, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: genCpuCurrentUtilization.setStatus('obsolete')
genCpuUtilizationHistoryTable = MibTable((1, 3, 6, 1, 4, 1, 6889, 2, 1, 11, 1, 1, 2), )
if mibBuilder.loadTexts: genCpuUtilizationHistoryTable.setStatus('current')
genCpuUtilizationHistoryEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6889, 2, 1, 11, 1, 1, 2, 1), ).setIndexNames((0, "UTILIZATION-MANAGEMENT-MIB", "genCpuIndex"), (0, "UTILIZATION-MANAGEMENT-MIB", "genCpuUtilizationHistorySampleIndex"))
if mibBuilder.loadTexts: genCpuUtilizationHistoryEntry.setStatus('current')
genCpuUtilizationHistorySampleIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 1, 11, 1, 1, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genCpuUtilizationHistorySampleIndex.setStatus('current')
genCpuHistoryUtilization = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 1, 11, 1, 1, 2, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genCpuHistoryUtilization.setStatus('current')
genMemUtilization = MibIdentifier((1, 3, 6, 1, 4, 1, 6889, 2, 1, 11, 1, 2))
genMemUtilizationTotalRAM = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 1, 11, 1, 2, 1), MBytes()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genMemUtilizationTotalRAM.setStatus('current')
genMemUtilizationOperationalImage = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 1, 11, 1, 2, 2), MBytes()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genMemUtilizationOperationalImage.setStatus('current')
genMemUtilizationDynAllocMem = MibIdentifier((1, 3, 6, 1, 4, 1, 6889, 2, 1, 11, 1, 2, 3))
genMemUtilizationDynAllocMemUsed = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 1, 11, 1, 2, 3, 1), MBytes()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genMemUtilizationDynAllocMemUsed.setStatus('current')
genMemUtilizationDynAllocMemMaxUsed = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 1, 11, 1, 2, 3, 2), MBytes()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genMemUtilizationDynAllocMemMaxUsed.setStatus('current')
genMemUtilizationDynAllocMemAvailable = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 1, 11, 1, 2, 3, 3), MBytes()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genMemUtilizationDynAllocMemAvailable.setStatus('current')
genMemUtilizationAllocationFailures = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 1, 11, 1, 2, 4), MBytes()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genMemUtilizationAllocationFailures.setStatus('current')
genMemUtilizationSysRAMTrap = MibIdentifier((1, 3, 6, 1, 4, 1, 6889, 2, 1, 11, 1, 2, 5))
genMemUtilizationSysRAMNotificationHighWaterMark = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 1, 11, 1, 2, 5, 1), MBytes()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: genMemUtilizationSysRAMNotificationHighWaterMark.setStatus('current')
genMemUtilizationTable = MibTable((1, 3, 6, 1, 4, 1, 6889, 2, 1, 11, 1, 2, 6), )
if mibBuilder.loadTexts: genMemUtilizationTable.setStatus('current')
genMemUtilizationEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6889, 2, 1, 11, 1, 2, 6, 1), ).setIndexNames((0, "UTILIZATION-MANAGEMENT-MIB", "genMemUtilizationID"))
if mibBuilder.loadTexts: genMemUtilizationEntry.setStatus('current')
genMemUtilizationID = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 1, 11, 1, 2, 6, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 20)))
if mibBuilder.loadTexts: genMemUtilizationID.setStatus('current')
genMemUtilizationPhyRam = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 1, 11, 1, 2, 6, 1, 2), MBytes()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genMemUtilizationPhyRam.setStatus('current')
genMemUtilizationPercentUsed = MibTableColumn((1, 3, 6, 1, 4, 1, 6889, 2, 1, 11, 1, 2, 6, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: genMemUtilizationPercentUsed.setStatus('current')
mibBuilder.exportSymbols("UTILIZATION-MANAGEMENT-MIB", genMemUtilizationPhyRam=genMemUtilizationPhyRam, genMemUtilizationSysRAMNotificationHighWaterMark=genMemUtilizationSysRAMNotificationHighWaterMark, genCpuUtilizationEntry=genCpuUtilizationEntry, genMemUtilizationOperationalImage=genMemUtilizationOperationalImage, genCpuUtilizationEnableEventGeneration=genCpuUtilizationEnableEventGeneration, genMemUtilizationSysRAMTrap=genMemUtilizationSysRAMTrap, genMemUtilizationDynAllocMemAvailable=genMemUtilizationDynAllocMemAvailable, MBytes=MBytes, genCpuUtilizationHighThreshold=genCpuUtilizationHighThreshold, genMemUtilizationAllocationFailures=genMemUtilizationAllocationFailures, PYSNMP_MODULE_ID=genStats, genCpuUtilizationHistoryEntry=genCpuUtilizationHistoryEntry, genCpuCurrentUtilization=genCpuCurrentUtilization, genMemUtilization=genMemUtilization, genMemUtilizationDynAllocMemMaxUsed=genMemUtilizationDynAllocMemMaxUsed, genStats=genStats, genCpuUtilizationTable=genCpuUtilizationTable, genMemUtilizationEntry=genMemUtilizationEntry, genCpuIndex=genCpuIndex, genMemUtilizationTotalRAM=genMemUtilizationTotalRAM, genMemUtilizationDynAllocMemUsed=genMemUtilizationDynAllocMemUsed, genCpuUtilizationHistoryTable=genCpuUtilizationHistoryTable, genCpuUtilization=genCpuUtilization, genMemUtilizationPercentUsed=genMemUtilizationPercentUsed, genCpuHistoryUtilization=genCpuHistoryUtilization, genMemUtilizationID=genMemUtilizationID, genCpuUtilizationHistorySampleIndex=genCpuUtilizationHistorySampleIndex, genMemUtilizationTable=genMemUtilizationTable, genCpuAverageUtilization=genCpuAverageUtilization, genMemUtilizationDynAllocMem=genMemUtilizationDynAllocMem, genCpuUtilizationEnableMonitoring=genCpuUtilizationEnableMonitoring)
