#
# PySNMP MIB module BLUECOAT-AV-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/BLUECOAT-AV-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:22:33 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ConstraintsUnion, ValueSizeConstraint, SingleValueConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ConstraintsUnion", "ValueSizeConstraint", "SingleValueConstraint", "ConstraintsIntersection")
blueCoatMgmt, = mibBuilder.importSymbols("BLUECOAT-MIB", "blueCoatMgmt")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
NotificationType, ObjectIdentity, Integer32, Counter32, Bits, ModuleIdentity, iso, Unsigned32, IpAddress, MibIdentifier, TimeTicks, Gauge32, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter64 = mibBuilder.importSymbols("SNMPv2-SMI", "NotificationType", "ObjectIdentity", "Integer32", "Counter32", "Bits", "ModuleIdentity", "iso", "Unsigned32", "IpAddress", "MibIdentifier", "TimeTicks", "Gauge32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter64")
DateAndTime, TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "DateAndTime", "TextualConvention", "DisplayString")
blueCoatAvMib = ModuleIdentity((1, 3, 6, 1, 4, 1, 3417, 2, 10))
if mibBuilder.loadTexts: blueCoatAvMib.setLastUpdated('0704160000Z')
if mibBuilder.loadTexts: blueCoatAvMib.setOrganization('Blue Coat Systems, Inc.')
blueCoatAvMibObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 3417, 2, 10, 1))
blueCoatAvMibNotificationObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 3417, 2, 10, 2))
blueCoatAvMibNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 3417, 2, 10, 3))
avFilesScanned = MibScalar((1, 3, 6, 1, 4, 1, 3417, 2, 10, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: avFilesScanned.setStatus('current')
avVirusesDetected = MibScalar((1, 3, 6, 1, 4, 1, 3417, 2, 10, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: avVirusesDetected.setStatus('current')
avPatternVersion = MibScalar((1, 3, 6, 1, 4, 1, 3417, 2, 10, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: avPatternVersion.setStatus('current')
avPatternDateTime = MibScalar((1, 3, 6, 1, 4, 1, 3417, 2, 10, 1, 4), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: avPatternDateTime.setStatus('current')
avEngineVersion = MibScalar((1, 3, 6, 1, 4, 1, 3417, 2, 10, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: avEngineVersion.setStatus('current')
avVendorName = MibScalar((1, 3, 6, 1, 4, 1, 3417, 2, 10, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: avVendorName.setStatus('current')
avLicenseDaysRemaining = MibScalar((1, 3, 6, 1, 4, 1, 3417, 2, 10, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: avLicenseDaysRemaining.setStatus('current')
avPublishedFirmwareVersion = MibScalar((1, 3, 6, 1, 4, 1, 3417, 2, 10, 1, 8), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: avPublishedFirmwareVersion.setStatus('current')
avInstalledFirmwareVersion = MibScalar((1, 3, 6, 1, 4, 1, 3417, 2, 10, 1, 9), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: avInstalledFirmwareVersion.setStatus('current')
avSlowICAPConnections = MibScalar((1, 3, 6, 1, 4, 1, 3417, 2, 10, 1, 10), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: avSlowICAPConnections.setStatus('current')
avUpdateFailureReason = MibScalar((1, 3, 6, 1, 4, 1, 3417, 2, 10, 2, 1), DisplayString())
if mibBuilder.loadTexts: avUpdateFailureReason.setStatus('current')
avUrl = MibScalar((1, 3, 6, 1, 4, 1, 3417, 2, 10, 2, 2), DisplayString())
if mibBuilder.loadTexts: avUrl.setStatus('current')
avVirusName = MibScalar((1, 3, 6, 1, 4, 1, 3417, 2, 10, 2, 3), DisplayString())
if mibBuilder.loadTexts: avVirusName.setStatus('current')
avVirusDetails = MibScalar((1, 3, 6, 1, 4, 1, 3417, 2, 10, 2, 4), DisplayString())
if mibBuilder.loadTexts: avVirusDetails.setStatus('current')
avErrorCode = MibScalar((1, 3, 6, 1, 4, 1, 3417, 2, 10, 2, 5), DisplayString())
if mibBuilder.loadTexts: avErrorCode.setStatus('current')
avErrorDetails = MibScalar((1, 3, 6, 1, 4, 1, 3417, 2, 10, 2, 6), DisplayString())
if mibBuilder.loadTexts: avErrorDetails.setStatus('current')
avPreviousFirmwareVersion = MibScalar((1, 3, 6, 1, 4, 1, 3417, 2, 10, 2, 7), DisplayString())
if mibBuilder.loadTexts: avPreviousFirmwareVersion.setStatus('current')
avICTMWarningReason = MibScalar((1, 3, 6, 1, 4, 1, 3417, 2, 10, 2, 8), DisplayString())
if mibBuilder.loadTexts: avICTMWarningReason.setStatus('current')
avAntivirusUpdateSuccess = NotificationType((1, 3, 6, 1, 4, 1, 3417, 2, 10, 3, 1)).setObjects(("BLUECOAT-AV-MIB", "avVendorName"), ("BLUECOAT-AV-MIB", "avEngineVersion"), ("BLUECOAT-AV-MIB", "avPatternVersion"), ("BLUECOAT-AV-MIB", "avPatternDateTime"))
if mibBuilder.loadTexts: avAntivirusUpdateSuccess.setStatus('current')
avAntivirusUpdateFailed = NotificationType((1, 3, 6, 1, 4, 1, 3417, 2, 10, 3, 2)).setObjects(("BLUECOAT-AV-MIB", "avUpdateFailureReason"), ("BLUECOAT-AV-MIB", "avVendorName"), ("BLUECOAT-AV-MIB", "avEngineVersion"), ("BLUECOAT-AV-MIB", "avPatternVersion"), ("BLUECOAT-AV-MIB", "avPatternDateTime"))
if mibBuilder.loadTexts: avAntivirusUpdateFailed.setStatus('current')
avVirusDetected = NotificationType((1, 3, 6, 1, 4, 1, 3417, 2, 10, 3, 3)).setObjects(("BLUECOAT-AV-MIB", "avUrl"), ("BLUECOAT-AV-MIB", "avVirusName"), ("BLUECOAT-AV-MIB", "avVirusDetails"))
if mibBuilder.loadTexts: avVirusDetected.setStatus('current')
avFileServed = NotificationType((1, 3, 6, 1, 4, 1, 3417, 2, 10, 3, 4)).setObjects(("BLUECOAT-AV-MIB", "avUrl"), ("BLUECOAT-AV-MIB", "avErrorCode"), ("BLUECOAT-AV-MIB", "avErrorDetails"))
if mibBuilder.loadTexts: avFileServed.setStatus('current')
avFileBlocked = NotificationType((1, 3, 6, 1, 4, 1, 3417, 2, 10, 3, 5)).setObjects(("BLUECOAT-AV-MIB", "avUrl"), ("BLUECOAT-AV-MIB", "avErrorCode"), ("BLUECOAT-AV-MIB", "avErrorDetails"))
if mibBuilder.loadTexts: avFileBlocked.setStatus('current')
avNewFirmwareAvailable = NotificationType((1, 3, 6, 1, 4, 1, 3417, 2, 10, 3, 6)).setObjects(("BLUECOAT-AV-MIB", "avInstalledFirmwareVersion"), ("BLUECOAT-AV-MIB", "avPublishedFirmwareVersion"))
if mibBuilder.loadTexts: avNewFirmwareAvailable.setStatus('current')
avFirmwareUpdateSuccess = NotificationType((1, 3, 6, 1, 4, 1, 3417, 2, 10, 3, 7)).setObjects(("BLUECOAT-AV-MIB", "avPreviousFirmwareVersion"), ("BLUECOAT-AV-MIB", "avInstalledFirmwareVersion"))
if mibBuilder.loadTexts: avFirmwareUpdateSuccess.setStatus('current')
avFirmwareUpdateFailed = NotificationType((1, 3, 6, 1, 4, 1, 3417, 2, 10, 3, 8)).setObjects(("BLUECOAT-AV-MIB", "avInstalledFirmwareVersion"), ("BLUECOAT-AV-MIB", "avPublishedFirmwareVersion"), ("BLUECOAT-AV-MIB", "avUpdateFailureReason"))
if mibBuilder.loadTexts: avFirmwareUpdateFailed.setStatus('current')
avAntivirusLicenseWarning = NotificationType((1, 3, 6, 1, 4, 1, 3417, 2, 10, 3, 9)).setObjects(("BLUECOAT-AV-MIB", "avVendorName"), ("BLUECOAT-AV-MIB", "avLicenseDaysRemaining"))
if mibBuilder.loadTexts: avAntivirusLicenseWarning.setStatus('current')
avICTMWarning = NotificationType((1, 3, 6, 1, 4, 1, 3417, 2, 10, 3, 10)).setObjects(("BLUECOAT-AV-MIB", "avICTMWarningReason"), ("BLUECOAT-AV-MIB", "avSlowICAPConnections"))
if mibBuilder.loadTexts: avICTMWarning.setStatus('current')
mibBuilder.exportSymbols("BLUECOAT-AV-MIB", avErrorDetails=avErrorDetails, blueCoatAvMib=blueCoatAvMib, avPatternDateTime=avPatternDateTime, PYSNMP_MODULE_ID=blueCoatAvMib, avPatternVersion=avPatternVersion, avVendorName=avVendorName, avUrl=avUrl, avFileBlocked=avFileBlocked, avPublishedFirmwareVersion=avPublishedFirmwareVersion, avFirmwareUpdateSuccess=avFirmwareUpdateSuccess, avFirmwareUpdateFailed=avFirmwareUpdateFailed, blueCoatAvMibNotifications=blueCoatAvMibNotifications, avLicenseDaysRemaining=avLicenseDaysRemaining, avFilesScanned=avFilesScanned, avUpdateFailureReason=avUpdateFailureReason, blueCoatAvMibObjects=blueCoatAvMibObjects, blueCoatAvMibNotificationObjects=blueCoatAvMibNotificationObjects, avEngineVersion=avEngineVersion, avVirusDetected=avVirusDetected, avICTMWarning=avICTMWarning, avAntivirusUpdateFailed=avAntivirusUpdateFailed, avErrorCode=avErrorCode, avAntivirusUpdateSuccess=avAntivirusUpdateSuccess, avVirusName=avVirusName, avSlowICAPConnections=avSlowICAPConnections, avAntivirusLicenseWarning=avAntivirusLicenseWarning, avFileServed=avFileServed, avInstalledFirmwareVersion=avInstalledFirmwareVersion, avICTMWarningReason=avICTMWarningReason, avVirusesDetected=avVirusesDetected, avPreviousFirmwareVersion=avPreviousFirmwareVersion, avVirusDetails=avVirusDetails, avNewFirmwareAvailable=avNewFirmwareAvailable)
