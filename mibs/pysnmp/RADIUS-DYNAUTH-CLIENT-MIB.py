#
# PySNMP MIB module RADIUS-DYNAUTH-CLIENT-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/RADIUS-DYNAUTH-CLIENT-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 20:36:26 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, SingleValueConstraint, ConstraintsIntersection, ConstraintsUnion, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "SingleValueConstraint", "ConstraintsIntersection", "ConstraintsUnion", "ValueSizeConstraint")
InetAddress, InetAddressType, InetPortNumber = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddress", "InetAddressType", "InetPortNumber")
SnmpAdminString, = mibBuilder.importSymbols("SNMP-FRAMEWORK-MIB", "SnmpAdminString")
ModuleCompliance, ObjectGroup, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "ObjectGroup", "NotificationGroup")
mib_2, IpAddress, ModuleIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter64, MibIdentifier, NotificationType, TimeTicks, Gauge32, Bits, iso, Unsigned32, ObjectIdentity, Integer32, Counter32 = mibBuilder.importSymbols("SNMPv2-SMI", "mib-2", "IpAddress", "ModuleIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter64", "MibIdentifier", "NotificationType", "TimeTicks", "Gauge32", "Bits", "iso", "Unsigned32", "ObjectIdentity", "Integer32", "Counter32")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
radiusDynAuthClientMIB = ModuleIdentity((1, 3, 6, 1, 2, 1, 145))
radiusDynAuthClientMIB.setRevisions(('2006-09-29 00:00',))
if mibBuilder.loadTexts: radiusDynAuthClientMIB.setLastUpdated('200608290000Z')
if mibBuilder.loadTexts: radiusDynAuthClientMIB.setOrganization('IETF RADEXT Working Group')
radiusDynAuthClientMIBObjects = MibIdentifier((1, 3, 6, 1, 2, 1, 145, 1))
radiusDynAuthClientScalars = MibIdentifier((1, 3, 6, 1, 2, 1, 145, 1, 1))
radiusDynAuthClientDisconInvalidServerAddresses = MibScalar((1, 3, 6, 1, 2, 1, 145, 1, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: radiusDynAuthClientDisconInvalidServerAddresses.setStatus('current')
radiusDynAuthClientCoAInvalidServerAddresses = MibScalar((1, 3, 6, 1, 2, 1, 145, 1, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: radiusDynAuthClientCoAInvalidServerAddresses.setStatus('current')
radiusDynAuthServerTable = MibTable((1, 3, 6, 1, 2, 1, 145, 1, 2), )
if mibBuilder.loadTexts: radiusDynAuthServerTable.setStatus('current')
radiusDynAuthServerEntry = MibTableRow((1, 3, 6, 1, 2, 1, 145, 1, 2, 1), ).setIndexNames((0, "RADIUS-DYNAUTH-CLIENT-MIB", "radiusDynAuthServerIndex"))
if mibBuilder.loadTexts: radiusDynAuthServerEntry.setStatus('current')
radiusDynAuthServerIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 145, 1, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: radiusDynAuthServerIndex.setStatus('current')
radiusDynAuthServerAddressType = MibTableColumn((1, 3, 6, 1, 2, 1, 145, 1, 2, 1, 2), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: radiusDynAuthServerAddressType.setStatus('current')
radiusDynAuthServerAddress = MibTableColumn((1, 3, 6, 1, 2, 1, 145, 1, 2, 1, 3), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: radiusDynAuthServerAddress.setStatus('current')
radiusDynAuthServerClientPortNumber = MibTableColumn((1, 3, 6, 1, 2, 1, 145, 1, 2, 1, 4), InetPortNumber().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: radiusDynAuthServerClientPortNumber.setStatus('current')
radiusDynAuthServerID = MibTableColumn((1, 3, 6, 1, 2, 1, 145, 1, 2, 1, 5), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: radiusDynAuthServerID.setStatus('current')
radiusDynAuthClientRoundTripTime = MibTableColumn((1, 3, 6, 1, 2, 1, 145, 1, 2, 1, 6), TimeTicks()).setUnits('hundredths of a second').setMaxAccess("readonly")
if mibBuilder.loadTexts: radiusDynAuthClientRoundTripTime.setStatus('current')
radiusDynAuthClientDisconRequests = MibTableColumn((1, 3, 6, 1, 2, 1, 145, 1, 2, 1, 7), Counter32()).setUnits('requests').setMaxAccess("readonly")
if mibBuilder.loadTexts: radiusDynAuthClientDisconRequests.setStatus('current')
radiusDynAuthClientDisconAuthOnlyRequests = MibTableColumn((1, 3, 6, 1, 2, 1, 145, 1, 2, 1, 8), Counter32()).setUnits('requests').setMaxAccess("readonly")
if mibBuilder.loadTexts: radiusDynAuthClientDisconAuthOnlyRequests.setStatus('current')
radiusDynAuthClientDisconRetransmissions = MibTableColumn((1, 3, 6, 1, 2, 1, 145, 1, 2, 1, 9), Counter32()).setUnits('retransmissions').setMaxAccess("readonly")
if mibBuilder.loadTexts: radiusDynAuthClientDisconRetransmissions.setStatus('current')
radiusDynAuthClientDisconAcks = MibTableColumn((1, 3, 6, 1, 2, 1, 145, 1, 2, 1, 10), Counter32()).setUnits('replies').setMaxAccess("readonly")
if mibBuilder.loadTexts: radiusDynAuthClientDisconAcks.setStatus('current')
radiusDynAuthClientDisconNaks = MibTableColumn((1, 3, 6, 1, 2, 1, 145, 1, 2, 1, 11), Counter32()).setUnits('replies').setMaxAccess("readonly")
if mibBuilder.loadTexts: radiusDynAuthClientDisconNaks.setStatus('current')
radiusDynAuthClientDisconNakAuthOnlyRequest = MibTableColumn((1, 3, 6, 1, 2, 1, 145, 1, 2, 1, 12), Counter32()).setUnits('replies').setMaxAccess("readonly")
if mibBuilder.loadTexts: radiusDynAuthClientDisconNakAuthOnlyRequest.setStatus('current')
radiusDynAuthClientDisconNakSessNoContext = MibTableColumn((1, 3, 6, 1, 2, 1, 145, 1, 2, 1, 13), Counter32()).setUnits('replies').setMaxAccess("readonly")
if mibBuilder.loadTexts: radiusDynAuthClientDisconNakSessNoContext.setStatus('current')
radiusDynAuthClientMalformedDisconResponses = MibTableColumn((1, 3, 6, 1, 2, 1, 145, 1, 2, 1, 14), Counter32()).setUnits('replies').setMaxAccess("readonly")
if mibBuilder.loadTexts: radiusDynAuthClientMalformedDisconResponses.setStatus('current')
radiusDynAuthClientDisconBadAuthenticators = MibTableColumn((1, 3, 6, 1, 2, 1, 145, 1, 2, 1, 15), Counter32()).setUnits('replies').setMaxAccess("readonly")
if mibBuilder.loadTexts: radiusDynAuthClientDisconBadAuthenticators.setStatus('current')
radiusDynAuthClientDisconPendingRequests = MibTableColumn((1, 3, 6, 1, 2, 1, 145, 1, 2, 1, 16), Gauge32()).setUnits('requests').setMaxAccess("readonly")
if mibBuilder.loadTexts: radiusDynAuthClientDisconPendingRequests.setStatus('current')
radiusDynAuthClientDisconTimeouts = MibTableColumn((1, 3, 6, 1, 2, 1, 145, 1, 2, 1, 17), Counter32()).setUnits('timeouts').setMaxAccess("readonly")
if mibBuilder.loadTexts: radiusDynAuthClientDisconTimeouts.setStatus('current')
radiusDynAuthClientDisconPacketsDropped = MibTableColumn((1, 3, 6, 1, 2, 1, 145, 1, 2, 1, 18), Counter32()).setUnits('replies').setMaxAccess("readonly")
if mibBuilder.loadTexts: radiusDynAuthClientDisconPacketsDropped.setStatus('current')
radiusDynAuthClientCoARequests = MibTableColumn((1, 3, 6, 1, 2, 1, 145, 1, 2, 1, 19), Counter32()).setUnits('requests').setMaxAccess("readonly")
if mibBuilder.loadTexts: radiusDynAuthClientCoARequests.setStatus('current')
radiusDynAuthClientCoAAuthOnlyRequest = MibTableColumn((1, 3, 6, 1, 2, 1, 145, 1, 2, 1, 20), Counter32()).setUnits('requests').setMaxAccess("readonly")
if mibBuilder.loadTexts: radiusDynAuthClientCoAAuthOnlyRequest.setStatus('current')
radiusDynAuthClientCoARetransmissions = MibTableColumn((1, 3, 6, 1, 2, 1, 145, 1, 2, 1, 21), Counter32()).setUnits('retransmissions').setMaxAccess("readonly")
if mibBuilder.loadTexts: radiusDynAuthClientCoARetransmissions.setStatus('current')
radiusDynAuthClientCoAAcks = MibTableColumn((1, 3, 6, 1, 2, 1, 145, 1, 2, 1, 22), Counter32()).setUnits('replies').setMaxAccess("readonly")
if mibBuilder.loadTexts: radiusDynAuthClientCoAAcks.setStatus('current')
radiusDynAuthClientCoANaks = MibTableColumn((1, 3, 6, 1, 2, 1, 145, 1, 2, 1, 23), Counter32()).setUnits('replies').setMaxAccess("readonly")
if mibBuilder.loadTexts: radiusDynAuthClientCoANaks.setStatus('current')
radiusDynAuthClientCoANakAuthOnlyRequest = MibTableColumn((1, 3, 6, 1, 2, 1, 145, 1, 2, 1, 24), Counter32()).setUnits('replies').setMaxAccess("readonly")
if mibBuilder.loadTexts: radiusDynAuthClientCoANakAuthOnlyRequest.setStatus('current')
radiusDynAuthClientCoANakSessNoContext = MibTableColumn((1, 3, 6, 1, 2, 1, 145, 1, 2, 1, 25), Counter32()).setUnits('replies').setMaxAccess("readonly")
if mibBuilder.loadTexts: radiusDynAuthClientCoANakSessNoContext.setStatus('current')
radiusDynAuthClientMalformedCoAResponses = MibTableColumn((1, 3, 6, 1, 2, 1, 145, 1, 2, 1, 26), Counter32()).setUnits('replies').setMaxAccess("readonly")
if mibBuilder.loadTexts: radiusDynAuthClientMalformedCoAResponses.setStatus('current')
radiusDynAuthClientCoABadAuthenticators = MibTableColumn((1, 3, 6, 1, 2, 1, 145, 1, 2, 1, 27), Counter32()).setUnits('replies').setMaxAccess("readonly")
if mibBuilder.loadTexts: radiusDynAuthClientCoABadAuthenticators.setStatus('current')
radiusDynAuthClientCoAPendingRequests = MibTableColumn((1, 3, 6, 1, 2, 1, 145, 1, 2, 1, 28), Gauge32()).setUnits('requests').setMaxAccess("readonly")
if mibBuilder.loadTexts: radiusDynAuthClientCoAPendingRequests.setStatus('current')
radiusDynAuthClientCoATimeouts = MibTableColumn((1, 3, 6, 1, 2, 1, 145, 1, 2, 1, 29), Counter32()).setUnits('timeouts').setMaxAccess("readonly")
if mibBuilder.loadTexts: radiusDynAuthClientCoATimeouts.setStatus('current')
radiusDynAuthClientCoAPacketsDropped = MibTableColumn((1, 3, 6, 1, 2, 1, 145, 1, 2, 1, 30), Counter32()).setUnits('replies').setMaxAccess("readonly")
if mibBuilder.loadTexts: radiusDynAuthClientCoAPacketsDropped.setStatus('current')
radiusDynAuthClientUnknownTypes = MibTableColumn((1, 3, 6, 1, 2, 1, 145, 1, 2, 1, 31), Counter32()).setUnits('replies').setMaxAccess("readonly")
if mibBuilder.loadTexts: radiusDynAuthClientUnknownTypes.setStatus('current')
radiusDynAuthClientCounterDiscontinuity = MibTableColumn((1, 3, 6, 1, 2, 1, 145, 1, 2, 1, 32), TimeTicks()).setUnits('hundredths of a second').setMaxAccess("readonly")
if mibBuilder.loadTexts: radiusDynAuthClientCounterDiscontinuity.setStatus('current')
radiusDynAuthClientMIBConformance = MibIdentifier((1, 3, 6, 1, 2, 1, 145, 2))
radiusDynAuthClientMIBCompliances = MibIdentifier((1, 3, 6, 1, 2, 1, 145, 2, 1))
radiusDynAuthClientMIBGroups = MibIdentifier((1, 3, 6, 1, 2, 1, 145, 2, 2))
radiusDynAuthClientMIBCompliance = ModuleCompliance((1, 3, 6, 1, 2, 1, 145, 2, 1, 1)).setObjects(("RADIUS-DYNAUTH-CLIENT-MIB", "radiusDynAuthClientMIBGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    radiusDynAuthClientMIBCompliance = radiusDynAuthClientMIBCompliance.setStatus('current')
radiusDynAuthClientMIBGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 145, 2, 2, 1)).setObjects(("RADIUS-DYNAUTH-CLIENT-MIB", "radiusDynAuthClientDisconInvalidServerAddresses"), ("RADIUS-DYNAUTH-CLIENT-MIB", "radiusDynAuthClientCoAInvalidServerAddresses"), ("RADIUS-DYNAUTH-CLIENT-MIB", "radiusDynAuthServerAddressType"), ("RADIUS-DYNAUTH-CLIENT-MIB", "radiusDynAuthServerAddress"), ("RADIUS-DYNAUTH-CLIENT-MIB", "radiusDynAuthServerClientPortNumber"), ("RADIUS-DYNAUTH-CLIENT-MIB", "radiusDynAuthServerID"), ("RADIUS-DYNAUTH-CLIENT-MIB", "radiusDynAuthClientRoundTripTime"), ("RADIUS-DYNAUTH-CLIENT-MIB", "radiusDynAuthClientDisconRequests"), ("RADIUS-DYNAUTH-CLIENT-MIB", "radiusDynAuthClientDisconRetransmissions"), ("RADIUS-DYNAUTH-CLIENT-MIB", "radiusDynAuthClientDisconAcks"), ("RADIUS-DYNAUTH-CLIENT-MIB", "radiusDynAuthClientDisconNaks"), ("RADIUS-DYNAUTH-CLIENT-MIB", "radiusDynAuthClientMalformedDisconResponses"), ("RADIUS-DYNAUTH-CLIENT-MIB", "radiusDynAuthClientDisconBadAuthenticators"), ("RADIUS-DYNAUTH-CLIENT-MIB", "radiusDynAuthClientDisconPendingRequests"), ("RADIUS-DYNAUTH-CLIENT-MIB", "radiusDynAuthClientDisconTimeouts"), ("RADIUS-DYNAUTH-CLIENT-MIB", "radiusDynAuthClientDisconPacketsDropped"), ("RADIUS-DYNAUTH-CLIENT-MIB", "radiusDynAuthClientCoARequests"), ("RADIUS-DYNAUTH-CLIENT-MIB", "radiusDynAuthClientCoARetransmissions"), ("RADIUS-DYNAUTH-CLIENT-MIB", "radiusDynAuthClientCoAAcks"), ("RADIUS-DYNAUTH-CLIENT-MIB", "radiusDynAuthClientCoANaks"), ("RADIUS-DYNAUTH-CLIENT-MIB", "radiusDynAuthClientMalformedCoAResponses"), ("RADIUS-DYNAUTH-CLIENT-MIB", "radiusDynAuthClientCoABadAuthenticators"), ("RADIUS-DYNAUTH-CLIENT-MIB", "radiusDynAuthClientCoAPendingRequests"), ("RADIUS-DYNAUTH-CLIENT-MIB", "radiusDynAuthClientCoATimeouts"), ("RADIUS-DYNAUTH-CLIENT-MIB", "radiusDynAuthClientCoAPacketsDropped"), ("RADIUS-DYNAUTH-CLIENT-MIB", "radiusDynAuthClientUnknownTypes"), ("RADIUS-DYNAUTH-CLIENT-MIB", "radiusDynAuthClientCounterDiscontinuity"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    radiusDynAuthClientMIBGroup = radiusDynAuthClientMIBGroup.setStatus('current')
radiusDynAuthClientAuthOnlyGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 145, 2, 2, 2)).setObjects(("RADIUS-DYNAUTH-CLIENT-MIB", "radiusDynAuthClientDisconAuthOnlyRequests"), ("RADIUS-DYNAUTH-CLIENT-MIB", "radiusDynAuthClientDisconNakAuthOnlyRequest"), ("RADIUS-DYNAUTH-CLIENT-MIB", "radiusDynAuthClientCoAAuthOnlyRequest"), ("RADIUS-DYNAUTH-CLIENT-MIB", "radiusDynAuthClientCoANakAuthOnlyRequest"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    radiusDynAuthClientAuthOnlyGroup = radiusDynAuthClientAuthOnlyGroup.setStatus('current')
radiusDynAuthClientNoSessGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 145, 2, 2, 3)).setObjects(("RADIUS-DYNAUTH-CLIENT-MIB", "radiusDynAuthClientDisconNakSessNoContext"), ("RADIUS-DYNAUTH-CLIENT-MIB", "radiusDynAuthClientCoANakSessNoContext"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    radiusDynAuthClientNoSessGroup = radiusDynAuthClientNoSessGroup.setStatus('current')
mibBuilder.exportSymbols("RADIUS-DYNAUTH-CLIENT-MIB", radiusDynAuthClientCoANakAuthOnlyRequest=radiusDynAuthClientCoANakAuthOnlyRequest, radiusDynAuthServerEntry=radiusDynAuthServerEntry, radiusDynAuthClientCoAPendingRequests=radiusDynAuthClientCoAPendingRequests, radiusDynAuthClientCoATimeouts=radiusDynAuthClientCoATimeouts, radiusDynAuthClientMIBGroups=radiusDynAuthClientMIBGroups, radiusDynAuthClientDisconRetransmissions=radiusDynAuthClientDisconRetransmissions, radiusDynAuthClientUnknownTypes=radiusDynAuthClientUnknownTypes, radiusDynAuthClientMIBConformance=radiusDynAuthClientMIBConformance, radiusDynAuthClientAuthOnlyGroup=radiusDynAuthClientAuthOnlyGroup, radiusDynAuthClientCoARequests=radiusDynAuthClientCoARequests, radiusDynAuthServerClientPortNumber=radiusDynAuthServerClientPortNumber, radiusDynAuthServerAddressType=radiusDynAuthServerAddressType, radiusDynAuthClientMIBCompliance=radiusDynAuthClientMIBCompliance, radiusDynAuthClientMIBGroup=radiusDynAuthClientMIBGroup, radiusDynAuthClientCoANakSessNoContext=radiusDynAuthClientCoANakSessNoContext, radiusDynAuthClientRoundTripTime=radiusDynAuthClientRoundTripTime, radiusDynAuthClientDisconNaks=radiusDynAuthClientDisconNaks, radiusDynAuthClientDisconRequests=radiusDynAuthClientDisconRequests, radiusDynAuthClientCoARetransmissions=radiusDynAuthClientCoARetransmissions, radiusDynAuthServerTable=radiusDynAuthServerTable, radiusDynAuthClientCoABadAuthenticators=radiusDynAuthClientCoABadAuthenticators, PYSNMP_MODULE_ID=radiusDynAuthClientMIB, radiusDynAuthClientCoAAuthOnlyRequest=radiusDynAuthClientCoAAuthOnlyRequest, radiusDynAuthClientMalformedCoAResponses=radiusDynAuthClientMalformedCoAResponses, radiusDynAuthClientCounterDiscontinuity=radiusDynAuthClientCounterDiscontinuity, radiusDynAuthClientNoSessGroup=radiusDynAuthClientNoSessGroup, radiusDynAuthClientDisconPacketsDropped=radiusDynAuthClientDisconPacketsDropped, radiusDynAuthClientMIB=radiusDynAuthClientMIB, radiusDynAuthClientCoAAcks=radiusDynAuthClientCoAAcks, radiusDynAuthClientMIBCompliances=radiusDynAuthClientMIBCompliances, radiusDynAuthClientCoAPacketsDropped=radiusDynAuthClientCoAPacketsDropped, radiusDynAuthClientCoANaks=radiusDynAuthClientCoANaks, radiusDynAuthClientDisconNakSessNoContext=radiusDynAuthClientDisconNakSessNoContext, radiusDynAuthClientMalformedDisconResponses=radiusDynAuthClientMalformedDisconResponses, radiusDynAuthClientMIBObjects=radiusDynAuthClientMIBObjects, radiusDynAuthClientCoAInvalidServerAddresses=radiusDynAuthClientCoAInvalidServerAddresses, radiusDynAuthServerIndex=radiusDynAuthServerIndex, radiusDynAuthClientDisconNakAuthOnlyRequest=radiusDynAuthClientDisconNakAuthOnlyRequest, radiusDynAuthServerAddress=radiusDynAuthServerAddress, radiusDynAuthClientDisconTimeouts=radiusDynAuthClientDisconTimeouts, radiusDynAuthClientDisconInvalidServerAddresses=radiusDynAuthClientDisconInvalidServerAddresses, radiusDynAuthServerID=radiusDynAuthServerID, radiusDynAuthClientDisconAuthOnlyRequests=radiusDynAuthClientDisconAuthOnlyRequests, radiusDynAuthClientScalars=radiusDynAuthClientScalars, radiusDynAuthClientDisconBadAuthenticators=radiusDynAuthClientDisconBadAuthenticators, radiusDynAuthClientDisconAcks=radiusDynAuthClientDisconAcks, radiusDynAuthClientDisconPendingRequests=radiusDynAuthClientDisconPendingRequests)
