#
# PySNMP MIB module HP-SwitchStack-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/HP-SwitchStack-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:24:25 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ConstraintsUnion, ValueSizeConstraint, ConstraintsIntersection, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ConstraintsUnion", "ValueSizeConstraint", "ConstraintsIntersection", "SingleValueConstraint")
hpSwitch, = mibBuilder.importSymbols("HP-ICF-OID", "hpSwitch")
ModuleCompliance, NotificationGroup, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup", "ObjectGroup")
Unsigned32, IpAddress, Integer32, ObjectIdentity, TimeTicks, Counter64, Counter32, NotificationType, Gauge32, iso, Bits, MibIdentifier, ModuleIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn = mibBuilder.importSymbols("SNMPv2-SMI", "Unsigned32", "IpAddress", "Integer32", "ObjectIdentity", "TimeTicks", "Counter64", "Counter32", "NotificationType", "Gauge32", "iso", "Bits", "MibIdentifier", "ModuleIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn")
DisplayString, RowStatus, MacAddress, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "RowStatus", "MacAddress", "TextualConvention")
hpSwitchVirtualStackMib = ModuleIdentity((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 10))
hpSwitchVirtualStackMib.setRevisions(('2010-10-29 19:46', '2000-11-03 23:44',))
if mibBuilder.loadTexts: hpSwitchVirtualStackMib.setLastUpdated('201010291946Z')
if mibBuilder.loadTexts: hpSwitchVirtualStackMib.setOrganization('HP Networking')
hpSwitchStackConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 10, 1))
hpSwitchStackAdminStatus = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 10, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("candidate", 1), ("disabled", 2), ("member", 3), ("command", 4), ("pending", 5)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpSwitchStackAdminStatus.setStatus('current')
hpSwitchStackCommandAddr = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 10, 1, 2), MacAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpSwitchStackCommandAddr.setStatus('current')
hpSwitchStackName = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 10, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 20))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpSwitchStackName.setStatus('current')
hpSwitchStackPropagate = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 10, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpSwitchStackPropagate.setStatus('current')
hpSwitchStackAutoJoin = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 10, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpSwitchStackAutoJoin.setStatus('current')
hpSwitchStackAutoGrab = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 10, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpSwitchStackAutoGrab.setStatus('current')
hpSwitchStackConfigMemberTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 10, 2), )
if mibBuilder.loadTexts: hpSwitchStackConfigMemberTable.setStatus('current')
hpSwitchStackConfigMemberEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 10, 2, 1), ).setIndexNames((0, "HP-SwitchStack-MIB", "hpSwitchStackMemberSwitchNum"))
if mibBuilder.loadTexts: hpSwitchStackConfigMemberEntry.setStatus('current')
hpSwitchStackMemberSwitchNum = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 10, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpSwitchStackMemberSwitchNum.setStatus('current')
hpSwitchStackMemberMacAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 10, 2, 1, 2), MacAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpSwitchStackMemberMacAddr.setStatus('current')
hpSwitchStackMemberPassword = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 10, 2, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 17))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpSwitchStackMemberPassword.setStatus('deprecated')
hpSwitchStackMemberEntryStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 10, 2, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpSwitchStackMemberEntryStatus.setStatus('current')
hpSwitchStackMemberPasswordLong = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 10, 2, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 1025))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpSwitchStackMemberPasswordLong.setStatus('current')
hpStackStats = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 10, 3))
hpStackStatsName = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 10, 3, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 20))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpStackStatsName.setStatus('current')
hpStackStatsMembersNum = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 10, 3, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpStackStatsMembersNum.setStatus('current')
hpStackStatsMembersUnreachable = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 10, 3, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpStackStatsMembersUnreachable.setStatus('current')
hpStackStatsMemberID = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 10, 3, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpStackStatsMemberID.setStatus('current')
hpStackStatsMgmtIpAddr = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 10, 3, 5), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpStackStatsMgmtIpAddr.setStatus('current')
hpStackStatsStackingStatus = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 10, 3, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12))).clone(namedValues=NamedValues(("joined", 1), ("pending", 2), ("noReponse", 3), ("notCommand", 4), ("stackFull", 5), ("remoteFailure", 6), ("unknownFailure", 7), ("evicted", 8), ("commandUp", 9), ("commandDown", 10), ("unusedStatus", 11), ("undiscovered", 12)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpStackStatsStackingStatus.setStatus('current')
hpStackStatsMembersTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 10, 4), )
if mibBuilder.loadTexts: hpStackStatsMembersTable.setStatus('current')
hpStackStatsMemberEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 10, 4, 1), ).setIndexNames((0, "HP-SwitchStack-MIB", "hpStackStatsMemberSwitchIndx"))
if mibBuilder.loadTexts: hpStackStatsMemberEntry.setStatus('current')
hpStackStatsMemberSwitchIndx = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 10, 4, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpStackStatsMemberSwitchIndx.setStatus('current')
hpStackStatsMemberMacAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 10, 4, 1, 2), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpStackStatsMemberMacAddr.setStatus('current')
hpStackStatsMemberSystemName = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 10, 4, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpStackStatsMemberSystemName.setStatus('current')
hpStackStatsMemberDeviceType = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 10, 4, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpStackStatsMemberDeviceType.setStatus('current')
hpStackStatsMemberOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 10, 4, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14))).clone(namedValues=NamedValues(("pending", 1), ("joined", 2), ("noReponse", 3), ("stackingDisabled", 4), ("invalidPassword", 5), ("commanderAnotherStack", 6), ("remoteFailure", 7), ("unknownFailure", 8), ("rejected", 9), ("memberUp", 10), ("memberDown", 11), ("commanderThisStack", 12), ("unusedStatus", 13), ("undiscovered", 14)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpStackStatsMemberOperStatus.setStatus('current')
hpSwitchDiscoveryConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 10, 5))
hpSwitchDiscoveryAdminStatus = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 10, 5, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpSwitchDiscoveryAdminStatus.setStatus('current')
hpSwitchDiscoveryTransmissionInterval = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 10, 5, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 300))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpSwitchDiscoveryTransmissionInterval.setStatus('current')
hpDiscoverStatsCandidatesTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 10, 6), )
if mibBuilder.loadTexts: hpDiscoverStatsCandidatesTable.setStatus('current')
hpDiscoverStatsCandidateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 10, 6, 1), ).setIndexNames((0, "HP-SwitchStack-MIB", "hpDiscoverStatsCandidateMacAddr"))
if mibBuilder.loadTexts: hpDiscoverStatsCandidateEntry.setStatus('current')
hpDiscoverStatsCandidateMacAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 10, 6, 1, 1), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpDiscoverStatsCandidateMacAddr.setStatus('current')
hpDiscoverStatsCandidateSystemName = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 10, 6, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpDiscoverStatsCandidateSystemName.setStatus('current')
hpDiscoverStatsCandidateDeviceType = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 10, 6, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpDiscoverStatsCandidateDeviceType.setStatus('current')
hpDiscoverStatsTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 10, 7), )
if mibBuilder.loadTexts: hpDiscoverStatsTable.setStatus('current')
hpDiscoverStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 10, 7, 1), ).setIndexNames((0, "HP-SwitchStack-MIB", "hpDiscoverStatsSwitchIndex"))
if mibBuilder.loadTexts: hpDiscoverStatsEntry.setStatus('current')
hpDiscoverStatsSwitchIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 10, 7, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpDiscoverStatsSwitchIndex.setStatus('current')
hpDiscoverStatsSwitchStackName = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 10, 7, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpDiscoverStatsSwitchStackName.setStatus('current')
hpDiscoverStatsSwitchMacAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 10, 7, 1, 3), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpDiscoverStatsSwitchMacAddr.setStatus('current')
hpDiscoverStatsSwitchSystemName = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 10, 7, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpDiscoverStatsSwitchSystemName.setStatus('current')
hpDiscoverStatsSwitchStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 10, 7, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 35))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpDiscoverStatsSwitchStatus.setStatus('current')
hpSwitchVirtualStackMibConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 10, 8))
hpSwitchVirtualStackMibCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 10, 8, 1))
hpSwitchVirtualStackMibGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 10, 8, 2))
hpSwitchVirtualStackMibCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 10, 8, 1, 1)).setObjects(("HP-SwitchStack-MIB", "hpSwitchStackConfigGroup"), ("HP-SwitchStack-MIB", "hpSwitchStackStatsGroup"), ("HP-SwitchStack-MIB", "hpSwitchDiscoverConfigGroup"), ("HP-SwitchStack-MIB", "hpDiscoverStatsGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpSwitchVirtualStackMibCompliance = hpSwitchVirtualStackMibCompliance.setStatus('deprecated')
hpSwitchVirtualStackMibCompliance1 = ModuleCompliance((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 10, 8, 1, 2)).setObjects(("HP-SwitchStack-MIB", "hpSwitchStackConfigGroup1"), ("HP-SwitchStack-MIB", "hpSwitchStackStatsGroup"), ("HP-SwitchStack-MIB", "hpSwitchDiscoverConfigGroup"), ("HP-SwitchStack-MIB", "hpDiscoverStatsGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpSwitchVirtualStackMibCompliance1 = hpSwitchVirtualStackMibCompliance1.setStatus('current')
hpSwitchStackConfigGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 10, 8, 2, 1)).setObjects(("HP-SwitchStack-MIB", "hpSwitchStackAdminStatus"), ("HP-SwitchStack-MIB", "hpSwitchStackCommandAddr"), ("HP-SwitchStack-MIB", "hpSwitchStackName"), ("HP-SwitchStack-MIB", "hpSwitchStackPropagate"), ("HP-SwitchStack-MIB", "hpSwitchStackAutoJoin"), ("HP-SwitchStack-MIB", "hpSwitchStackAutoGrab"), ("HP-SwitchStack-MIB", "hpSwitchStackMemberSwitchNum"), ("HP-SwitchStack-MIB", "hpSwitchStackMemberMacAddr"), ("HP-SwitchStack-MIB", "hpSwitchStackMemberPassword"), ("HP-SwitchStack-MIB", "hpSwitchStackMemberEntryStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpSwitchStackConfigGroup = hpSwitchStackConfigGroup.setStatus('deprecated')
hpSwitchStackStatsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 10, 8, 2, 2)).setObjects(("HP-SwitchStack-MIB", "hpStackStatsName"), ("HP-SwitchStack-MIB", "hpStackStatsMembersNum"), ("HP-SwitchStack-MIB", "hpStackStatsMembersUnreachable"), ("HP-SwitchStack-MIB", "hpStackStatsMemberID"), ("HP-SwitchStack-MIB", "hpStackStatsMgmtIpAddr"), ("HP-SwitchStack-MIB", "hpStackStatsStackingStatus"), ("HP-SwitchStack-MIB", "hpStackStatsMemberSwitchIndx"), ("HP-SwitchStack-MIB", "hpStackStatsMemberMacAddr"), ("HP-SwitchStack-MIB", "hpStackStatsMemberSystemName"), ("HP-SwitchStack-MIB", "hpStackStatsMemberDeviceType"), ("HP-SwitchStack-MIB", "hpStackStatsMemberOperStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpSwitchStackStatsGroup = hpSwitchStackStatsGroup.setStatus('current')
hpSwitchDiscoverConfigGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 10, 8, 2, 3)).setObjects(("HP-SwitchStack-MIB", "hpSwitchDiscoveryAdminStatus"), ("HP-SwitchStack-MIB", "hpSwitchDiscoveryTransmissionInterval"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpSwitchDiscoverConfigGroup = hpSwitchDiscoverConfigGroup.setStatus('current')
hpDiscoverStatsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 10, 8, 2, 4)).setObjects(("HP-SwitchStack-MIB", "hpDiscoverStatsCandidateMacAddr"), ("HP-SwitchStack-MIB", "hpDiscoverStatsCandidateSystemName"), ("HP-SwitchStack-MIB", "hpDiscoverStatsCandidateDeviceType"), ("HP-SwitchStack-MIB", "hpDiscoverStatsSwitchIndex"), ("HP-SwitchStack-MIB", "hpDiscoverStatsSwitchStackName"), ("HP-SwitchStack-MIB", "hpDiscoverStatsSwitchMacAddr"), ("HP-SwitchStack-MIB", "hpDiscoverStatsSwitchSystemName"), ("HP-SwitchStack-MIB", "hpDiscoverStatsSwitchStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpDiscoverStatsGroup = hpDiscoverStatsGroup.setStatus('current')
hpSwitchStackConfigGroup1 = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 10, 8, 2, 5)).setObjects(("HP-SwitchStack-MIB", "hpSwitchStackAdminStatus"), ("HP-SwitchStack-MIB", "hpSwitchStackCommandAddr"), ("HP-SwitchStack-MIB", "hpSwitchStackName"), ("HP-SwitchStack-MIB", "hpSwitchStackPropagate"), ("HP-SwitchStack-MIB", "hpSwitchStackAutoJoin"), ("HP-SwitchStack-MIB", "hpSwitchStackAutoGrab"), ("HP-SwitchStack-MIB", "hpSwitchStackMemberSwitchNum"), ("HP-SwitchStack-MIB", "hpSwitchStackMemberMacAddr"), ("HP-SwitchStack-MIB", "hpSwitchStackMemberPasswordLong"), ("HP-SwitchStack-MIB", "hpSwitchStackMemberEntryStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpSwitchStackConfigGroup1 = hpSwitchStackConfigGroup1.setStatus('current')
mibBuilder.exportSymbols("HP-SwitchStack-MIB", hpSwitchStackConfig=hpSwitchStackConfig, hpDiscoverStatsCandidateMacAddr=hpDiscoverStatsCandidateMacAddr, hpStackStatsMemberEntry=hpStackStatsMemberEntry, hpStackStats=hpStackStats, hpStackStatsName=hpStackStatsName, hpStackStatsMemberDeviceType=hpStackStatsMemberDeviceType, hpDiscoverStatsCandidateEntry=hpDiscoverStatsCandidateEntry, hpSwitchStackAdminStatus=hpSwitchStackAdminStatus, hpSwitchStackMemberEntryStatus=hpSwitchStackMemberEntryStatus, hpStackStatsMemberOperStatus=hpStackStatsMemberOperStatus, hpSwitchStackConfigGroup=hpSwitchStackConfigGroup, hpDiscoverStatsCandidatesTable=hpDiscoverStatsCandidatesTable, hpSwitchStackAutoGrab=hpSwitchStackAutoGrab, hpDiscoverStatsSwitchIndex=hpDiscoverStatsSwitchIndex, hpStackStatsMemberID=hpStackStatsMemberID, hpSwitchVirtualStackMibCompliances=hpSwitchVirtualStackMibCompliances, hpSwitchVirtualStackMib=hpSwitchVirtualStackMib, hpStackStatsMemberSystemName=hpStackStatsMemberSystemName, hpDiscoverStatsSwitchStackName=hpDiscoverStatsSwitchStackName, hpSwitchDiscoveryAdminStatus=hpSwitchDiscoveryAdminStatus, hpDiscoverStatsSwitchMacAddr=hpDiscoverStatsSwitchMacAddr, hpSwitchStackMemberPassword=hpSwitchStackMemberPassword, hpDiscoverStatsSwitchStatus=hpDiscoverStatsSwitchStatus, hpStackStatsStackingStatus=hpStackStatsStackingStatus, hpSwitchDiscoveryTransmissionInterval=hpSwitchDiscoveryTransmissionInterval, hpSwitchStackConfigGroup1=hpSwitchStackConfigGroup1, hpSwitchStackConfigMemberEntry=hpSwitchStackConfigMemberEntry, hpStackStatsMembersNum=hpStackStatsMembersNum, hpDiscoverStatsSwitchSystemName=hpDiscoverStatsSwitchSystemName, hpDiscoverStatsCandidateSystemName=hpDiscoverStatsCandidateSystemName, hpDiscoverStatsTable=hpDiscoverStatsTable, hpSwitchStackCommandAddr=hpSwitchStackCommandAddr, hpSwitchStackMemberMacAddr=hpSwitchStackMemberMacAddr, hpSwitchVirtualStackMibConformance=hpSwitchVirtualStackMibConformance, hpSwitchVirtualStackMibCompliance1=hpSwitchVirtualStackMibCompliance1, hpDiscoverStatsGroup=hpDiscoverStatsGroup, hpSwitchStackPropagate=hpSwitchStackPropagate, hpSwitchVirtualStackMibCompliance=hpSwitchVirtualStackMibCompliance, hpSwitchDiscoveryConfig=hpSwitchDiscoveryConfig, hpSwitchStackStatsGroup=hpSwitchStackStatsGroup, hpSwitchStackConfigMemberTable=hpSwitchStackConfigMemberTable, hpSwitchStackMemberPasswordLong=hpSwitchStackMemberPasswordLong, hpDiscoverStatsCandidateDeviceType=hpDiscoverStatsCandidateDeviceType, hpStackStatsMembersTable=hpStackStatsMembersTable, hpStackStatsMemberMacAddr=hpStackStatsMemberMacAddr, PYSNMP_MODULE_ID=hpSwitchVirtualStackMib, hpStackStatsMemberSwitchIndx=hpStackStatsMemberSwitchIndx, hpSwitchStackMemberSwitchNum=hpSwitchStackMemberSwitchNum, hpSwitchVirtualStackMibGroups=hpSwitchVirtualStackMibGroups, hpStackStatsMembersUnreachable=hpStackStatsMembersUnreachable, hpDiscoverStatsEntry=hpDiscoverStatsEntry, hpSwitchDiscoverConfigGroup=hpSwitchDiscoverConfigGroup, hpSwitchStackName=hpSwitchStackName, hpStackStatsMgmtIpAddr=hpStackStatsMgmtIpAddr, hpSwitchStackAutoJoin=hpSwitchStackAutoJoin)
