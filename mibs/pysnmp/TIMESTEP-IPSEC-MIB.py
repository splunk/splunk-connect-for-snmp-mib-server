#
# PySNMP MIB module TIMESTEP-IPSEC-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/TIMESTEP-IPSEC-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 21:09:24 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ValueRangeConstraint, SingleValueConstraint, ConstraintsIntersection, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ValueRangeConstraint", "SingleValueConstraint", "ConstraintsIntersection", "ConstraintsUnion")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
ModuleIdentity, ObjectIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter32, Unsigned32, NotificationType, Bits, iso, TimeTicks, Counter64, Integer32, MibIdentifier, IpAddress, Gauge32 = mibBuilder.importSymbols("SNMPv2-SMI", "ModuleIdentity", "ObjectIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter32", "Unsigned32", "NotificationType", "Bits", "iso", "TimeTicks", "Counter64", "Integer32", "MibIdentifier", "IpAddress", "Gauge32")
DisplayString, TextualConvention, TruthValue, DateAndTime = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention", "TruthValue", "DateAndTime")
timestep, = mibBuilder.importSymbols("TIMESTEP-MIB", "timestep")
ipsecMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 1022, 10))
ipsecMIB.setRevisions(('1970-01-01 00:00',))
if mibBuilder.loadTexts: ipsecMIB.setLastUpdated('9811091200Z')
if mibBuilder.loadTexts: ipsecMIB.setOrganization('IETF IPSec Working Group')
ipsecMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 1022, 10, 1))
ipsec = MibIdentifier((1, 3, 6, 1, 4, 1, 1022, 10, 1, 1))
ipsecIkeSaTable = MibTable((1, 3, 6, 1, 4, 1, 1022, 10, 1, 1, 1), )
if mibBuilder.loadTexts: ipsecIkeSaTable.setStatus('current')
ipsecIkeSaEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1022, 10, 1, 1, 1, 1), ).setIndexNames((0, "TIMESTEP-IPSEC-MIB", "ipsecIkeSaIndex"))
if mibBuilder.loadTexts: ipsecIkeSaEntry.setStatus('current')
ipsecIkeSaIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1022, 10, 1, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16777215))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsecIkeSaIndex.setStatus('current')
ipsecIkeSaPeerIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 1022, 10, 1, 1, 1, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsecIkeSaPeerIpAddress.setStatus('current')
ipsecIkeSaPeerPortNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 1022, 10, 1, 1, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsecIkeSaPeerPortNumber.setStatus('current')
ipsecIkeSaAuthMethod = MibTableColumn((1, 3, 6, 1, 4, 1, 1022, 10, 1, 1, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsecIkeSaAuthMethod.setStatus('current')
ipsecIkeSaPeerIdType = MibTableColumn((1, 3, 6, 1, 4, 1, 1022, 10, 1, 1, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 256))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsecIkeSaPeerIdType.setStatus('current')
ipsecIkeSaPeerId = MibTableColumn((1, 3, 6, 1, 4, 1, 1022, 10, 1, 1, 1, 1, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 511))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsecIkeSaPeerId.setStatus('current')
ipsecIkeSaPeerCertSerialNum = MibTableColumn((1, 3, 6, 1, 4, 1, 1022, 10, 1, 1, 1, 1, 7), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 63))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsecIkeSaPeerCertSerialNum.setStatus('current')
ipsecIkeSaPeerCertIssuer = MibTableColumn((1, 3, 6, 1, 4, 1, 1022, 10, 1, 1, 1, 1, 8), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 511))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsecIkeSaPeerCertIssuer.setStatus('current')
ipsecIkeSaType = MibTableColumn((1, 3, 6, 1, 4, 1, 1022, 10, 1, 1, 1, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("transient", 1), ("permanent", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsecIkeSaType.setStatus('current')
ipsecIkeSaStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 1022, 10, 1, 1, 1, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("neverTried", 0), ("linkUp", 1), ("linkDown", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsecIkeSaStatus.setStatus('current')
ipsecIkeSaEncAlg = MibTableColumn((1, 3, 6, 1, 4, 1, 1022, 10, 1, 1, 1, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsecIkeSaEncAlg.setStatus('current')
ipsecIkeSaEncKeyLength = MibTableColumn((1, 3, 6, 1, 4, 1, 1022, 10, 1, 1, 1, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsecIkeSaEncKeyLength.setStatus('current')
ipsecIkeSaHashAlg = MibTableColumn((1, 3, 6, 1, 4, 1, 1022, 10, 1, 1, 1, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsecIkeSaHashAlg.setStatus('current')
ipsecIkeSaDifHelGroupDesc = MibTableColumn((1, 3, 6, 1, 4, 1, 1022, 10, 1, 1, 1, 1, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsecIkeSaDifHelGroupDesc.setStatus('current')
ipsecIkeSaDifHelGroupType = MibTableColumn((1, 3, 6, 1, 4, 1, 1022, 10, 1, 1, 1, 1, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsecIkeSaDifHelGroupType.setStatus('current')
ipsecIkeSaDifHelFieldSize = MibTableColumn((1, 3, 6, 1, 4, 1, 1022, 10, 1, 1, 1, 1, 16), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsecIkeSaDifHelFieldSize.setStatus('current')
ipsecIkeSaPRF = MibTableColumn((1, 3, 6, 1, 4, 1, 1022, 10, 1, 1, 1, 1, 17), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsecIkeSaPRF.setStatus('current')
ipsecIkeSaPFS = MibTableColumn((1, 3, 6, 1, 4, 1, 1022, 10, 1, 1, 1, 1, 18), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsecIkeSaPFS.setStatus('current')
ipsecIkeSaInitiatorCookie = MibTableColumn((1, 3, 6, 1, 4, 1, 1022, 10, 1, 1, 1, 1, 19), OctetString().subtype(subtypeSpec=ValueSizeConstraint(16, 16)).setFixedLength(16)).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsecIkeSaInitiatorCookie.setStatus('current')
ipsecIkeSaResponderCookie = MibTableColumn((1, 3, 6, 1, 4, 1, 1022, 10, 1, 1, 1, 1, 20), OctetString().subtype(subtypeSpec=ValueSizeConstraint(16, 16)).setFixedLength(16)).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsecIkeSaResponderCookie.setStatus('current')
ipsecIkeSaTimeStart = MibTableColumn((1, 3, 6, 1, 4, 1, 1022, 10, 1, 1, 1, 1, 21), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsecIkeSaTimeStart.setStatus('current')
ipsecIkeSaTimeLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 1022, 10, 1, 1, 1, 1, 22), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsecIkeSaTimeLimit.setStatus('current')
ipsecIkeSaTrafficLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 1022, 10, 1, 1, 1, 1, 23), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsecIkeSaTrafficLimit.setStatus('current')
ipsecIkeSaInboundTraffic = MibTableColumn((1, 3, 6, 1, 4, 1, 1022, 10, 1, 1, 1, 1, 24), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsecIkeSaInboundTraffic.setStatus('current')
ipsecIkeSaOutboundTraffic = MibTableColumn((1, 3, 6, 1, 4, 1, 1022, 10, 1, 1, 1, 1, 25), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsecIkeSaOutboundTraffic.setStatus('current')
ipsecIkeSaInboundPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 1022, 10, 1, 1, 1, 1, 26), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsecIkeSaInboundPackets.setStatus('current')
ipsecIkeSaOutboundPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 1022, 10, 1, 1, 1, 1, 27), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsecIkeSaOutboundPackets.setStatus('current')
ipsecIkeSaTotalSaNum = MibTableColumn((1, 3, 6, 1, 4, 1, 1022, 10, 1, 1, 1, 1, 28), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsecIkeSaTotalSaNum.setStatus('current')
ipsecIkeSaFirstTimeStart = MibTableColumn((1, 3, 6, 1, 4, 1, 1022, 10, 1, 1, 1, 1, 29), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsecIkeSaFirstTimeStart.setStatus('current')
ipsecIkeSaTotalInboundTraffic = MibTableColumn((1, 3, 6, 1, 4, 1, 1022, 10, 1, 1, 1, 1, 30), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsecIkeSaTotalInboundTraffic.setStatus('current')
ipsecIkeSaTotalOutboundTraffic = MibTableColumn((1, 3, 6, 1, 4, 1, 1022, 10, 1, 1, 1, 1, 31), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsecIkeSaTotalOutboundTraffic.setStatus('current')
ipsecIkeSaTotalInboundPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 1022, 10, 1, 1, 1, 1, 32), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsecIkeSaTotalInboundPackets.setStatus('current')
ipsecIkeSaTotalOutboundPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 1022, 10, 1, 1, 1, 1, 33), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsecIkeSaTotalOutboundPackets.setStatus('current')
ipsecIkeSaDecryptErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 1022, 10, 1, 1, 1, 1, 34), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsecIkeSaDecryptErrors.setStatus('current')
ipsecIkeSaHashErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 1022, 10, 1, 1, 1, 1, 35), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsecIkeSaHashErrors.setStatus('current')
ipsecIkeSaOtherReceiveErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 1022, 10, 1, 1, 1, 1, 36), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsecIkeSaOtherReceiveErrors.setStatus('current')
ipsecIkeSaSendErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 1022, 10, 1, 1, 1, 1, 37), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsecIkeSaSendErrors.setStatus('current')
ipsecIkeSaIpsecInboundTraffic = MibTableColumn((1, 3, 6, 1, 4, 1, 1022, 10, 1, 1, 1, 1, 38), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsecIkeSaIpsecInboundTraffic.setStatus('current')
ipsecIkeSaIpsecOutboundTraffic = MibTableColumn((1, 3, 6, 1, 4, 1, 1022, 10, 1, 1, 1, 1, 39), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsecIkeSaIpsecOutboundTraffic.setStatus('current')
ipsecIkeSaIpsecInboundPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 1022, 10, 1, 1, 1, 1, 40), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsecIkeSaIpsecInboundPackets.setStatus('current')
ipsecIkeSaIpsecOutboundPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 1022, 10, 1, 1, 1, 1, 41), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsecIkeSaIpsecOutboundPackets.setStatus('current')
ipsecIkeSaIpsecDecryptErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 1022, 10, 1, 1, 1, 1, 42), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsecIkeSaIpsecDecryptErrors.setStatus('current')
ipsecIkeSaIpsecAuthErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 1022, 10, 1, 1, 1, 1, 43), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsecIkeSaIpsecAuthErrors.setStatus('current')
ipsecIkeSaIpsecReplayErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 1022, 10, 1, 1, 1, 1, 44), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsecIkeSaIpsecReplayErrors.setStatus('current')
ipsecIkeSaIpsecOtherReceiveErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 1022, 10, 1, 1, 1, 1, 45), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsecIkeSaIpsecOtherReceiveErrors.setStatus('current')
ipsecIkeSaIpsecSendErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 1022, 10, 1, 1, 1, 1, 46), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsecIkeSaIpsecSendErrors.setStatus('current')
ipsecTunnelTable = MibTable((1, 3, 6, 1, 4, 1, 1022, 10, 1, 1, 2), )
if mibBuilder.loadTexts: ipsecTunnelTable.setStatus('current')
ipsecTunnelEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1022, 10, 1, 1, 2, 1), ).setIndexNames((0, "TIMESTEP-IPSEC-MIB", "ipsecTunnelIndex"))
if mibBuilder.loadTexts: ipsecTunnelEntry.setStatus('current')
ipsecTunnelIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1022, 10, 1, 1, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16777215))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsecTunnelIndex.setStatus('current')
ipsecTunnelIkeSa = MibTableColumn((1, 3, 6, 1, 4, 1, 1022, 10, 1, 1, 2, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsecTunnelIkeSa.setStatus('current')
ipsecTunnelType = MibTableColumn((1, 3, 6, 1, 4, 1, 1022, 10, 1, 1, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("static", 0), ("transient", 1), ("permanent", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsecTunnelType.setStatus('current')
ipsecTunnelLocalAddressOrStart = MibTableColumn((1, 3, 6, 1, 4, 1, 1022, 10, 1, 1, 2, 1, 4), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsecTunnelLocalAddressOrStart.setStatus('current')
ipsecTunnelLocalAddressMaskOrEnd = MibTableColumn((1, 3, 6, 1, 4, 1, 1022, 10, 1, 1, 2, 1, 5), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsecTunnelLocalAddressMaskOrEnd.setStatus('current')
ipsecTunnelRemoteAddressOrStart = MibTableColumn((1, 3, 6, 1, 4, 1, 1022, 10, 1, 1, 2, 1, 6), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsecTunnelRemoteAddressOrStart.setStatus('current')
ipsecTunnelRemoteAddressMaskOrEnd = MibTableColumn((1, 3, 6, 1, 4, 1, 1022, 10, 1, 1, 2, 1, 7), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsecTunnelRemoteAddressMaskOrEnd.setStatus('current')
ipsecTunnelProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 1022, 10, 1, 1, 2, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsecTunnelProtocol.setStatus('current')
ipsecTunnelLocalPort = MibTableColumn((1, 3, 6, 1, 4, 1, 1022, 10, 1, 1, 2, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsecTunnelLocalPort.setStatus('current')
ipsecTunnelRemotePort = MibTableColumn((1, 3, 6, 1, 4, 1, 1022, 10, 1, 1, 2, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsecTunnelRemotePort.setStatus('current')
ipsecTunnelMode = MibTableColumn((1, 3, 6, 1, 4, 1, 1022, 10, 1, 1, 2, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("transport", 1), ("tunnel", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsecTunnelMode.setStatus('current')
ipsecTunnelEspEncAlg = MibTableColumn((1, 3, 6, 1, 4, 1, 1022, 10, 1, 1, 2, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsecTunnelEspEncAlg.setStatus('current')
ipsecTunnelEspEncKeyLength = MibTableColumn((1, 3, 6, 1, 4, 1, 1022, 10, 1, 1, 2, 1, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsecTunnelEspEncKeyLength.setStatus('current')
ipsecTunnelEspAuthAlg = MibTableColumn((1, 3, 6, 1, 4, 1, 1022, 10, 1, 1, 2, 1, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsecTunnelEspAuthAlg.setStatus('current')
ipsecTunnelAhAuthAlg = MibTableColumn((1, 3, 6, 1, 4, 1, 1022, 10, 1, 1, 2, 1, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsecTunnelAhAuthAlg.setStatus('current')
ipsecTunnelCompAlg = MibTableColumn((1, 3, 6, 1, 4, 1, 1022, 10, 1, 1, 2, 1, 16), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsecTunnelCompAlg.setStatus('current')
ipsecTunnelStartTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1022, 10, 1, 1, 2, 1, 17), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsecTunnelStartTime.setStatus('current')
ipsecTunnelCurrentSaNum = MibTableColumn((1, 3, 6, 1, 4, 1, 1022, 10, 1, 1, 2, 1, 18), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsecTunnelCurrentSaNum.setStatus('current')
ipsecTunnelTotalSaNum = MibTableColumn((1, 3, 6, 1, 4, 1, 1022, 10, 1, 1, 2, 1, 19), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsecTunnelTotalSaNum.setStatus('current')
ipsecTunnelTotalInboundTraffic = MibTableColumn((1, 3, 6, 1, 4, 1, 1022, 10, 1, 1, 2, 1, 20), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsecTunnelTotalInboundTraffic.setStatus('current')
ipsecTunnelTotalOutboundTraffic = MibTableColumn((1, 3, 6, 1, 4, 1, 1022, 10, 1, 1, 2, 1, 21), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsecTunnelTotalOutboundTraffic.setStatus('current')
ipsecTunnelTotalInboundPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 1022, 10, 1, 1, 2, 1, 22), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsecTunnelTotalInboundPackets.setStatus('current')
ipsecTunnelTotalOutboundPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 1022, 10, 1, 1, 2, 1, 23), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsecTunnelTotalOutboundPackets.setStatus('current')
ipsecTunnelDecryptErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 1022, 10, 1, 1, 2, 1, 24), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsecTunnelDecryptErrors.setStatus('current')
ipsecTunnelAuthErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 1022, 10, 1, 1, 2, 1, 25), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsecTunnelAuthErrors.setStatus('current')
ipsecTunnelReplayErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 1022, 10, 1, 1, 2, 1, 26), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsecTunnelReplayErrors.setStatus('current')
ipsecTunnelPolicyErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 1022, 10, 1, 1, 2, 1, 27), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsecTunnelPolicyErrors.setStatus('current')
ipsecTunnelOtherReceiveErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 1022, 10, 1, 1, 2, 1, 28), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsecTunnelOtherReceiveErrors.setStatus('current')
ipsecTunnelSendErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 1022, 10, 1, 1, 2, 1, 29), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsecTunnelSendErrors.setStatus('current')
ipsecSaTable = MibTable((1, 3, 6, 1, 4, 1, 1022, 10, 1, 1, 3), )
if mibBuilder.loadTexts: ipsecSaTable.setStatus('current')
ipsecSaEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1022, 10, 1, 1, 3, 1), ).setIndexNames((0, "TIMESTEP-IPSEC-MIB", "ipsecSaIndex"))
if mibBuilder.loadTexts: ipsecSaEntry.setStatus('current')
ipsecSaIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1022, 10, 1, 1, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsecSaIndex.setStatus('current')
ipsecSaTunnel = MibTableColumn((1, 3, 6, 1, 4, 1, 1022, 10, 1, 1, 3, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsecSaTunnel.setStatus('current')
ipsecSaInboundEspSpi = MibTableColumn((1, 3, 6, 1, 4, 1, 1022, 10, 1, 1, 3, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsecSaInboundEspSpi.setStatus('current')
ipsecSaOutboundEspSpi = MibTableColumn((1, 3, 6, 1, 4, 1, 1022, 10, 1, 1, 3, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsecSaOutboundEspSpi.setStatus('current')
ipsecSaInboundAhSpi = MibTableColumn((1, 3, 6, 1, 4, 1, 1022, 10, 1, 1, 3, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsecSaInboundAhSpi.setStatus('current')
ipsecSaOutboundAhSpi = MibTableColumn((1, 3, 6, 1, 4, 1, 1022, 10, 1, 1, 3, 1, 6), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsecSaOutboundAhSpi.setStatus('current')
ipsecSaInboundCompCpi = MibTableColumn((1, 3, 6, 1, 4, 1, 1022, 10, 1, 1, 3, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsecSaInboundCompCpi.setStatus('current')
ipsecSaOutboundCompCpi = MibTableColumn((1, 3, 6, 1, 4, 1, 1022, 10, 1, 1, 3, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsecSaOutboundCompCpi.setStatus('current')
ipsecSaCreationTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1022, 10, 1, 1, 3, 1, 9), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsecSaCreationTime.setStatus('current')
ipsecSaTimeLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 1022, 10, 1, 1, 3, 1, 10), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsecSaTimeLimit.setStatus('current')
ipsecSaTrafficLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 1022, 10, 1, 1, 3, 1, 11), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsecSaTrafficLimit.setStatus('current')
ipsecSaInboundTraffic = MibTableColumn((1, 3, 6, 1, 4, 1, 1022, 10, 1, 1, 3, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsecSaInboundTraffic.setStatus('current')
ipsecSaOutboundTraffic = MibTableColumn((1, 3, 6, 1, 4, 1, 1022, 10, 1, 1, 3, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsecSaOutboundTraffic.setStatus('current')
ipsecSaInboundPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 1022, 10, 1, 1, 3, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsecSaInboundPackets.setStatus('current')
ipsecSaOutboundPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 1022, 10, 1, 1, 3, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsecSaOutboundPackets.setStatus('current')
ipsecSaDecryptErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 1022, 10, 1, 1, 3, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsecSaDecryptErrors.setStatus('current')
ipsecSaAuthErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 1022, 10, 1, 1, 3, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsecSaAuthErrors.setStatus('current')
ipsecSaReplayErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 1022, 10, 1, 1, 3, 1, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsecSaReplayErrors.setStatus('current')
ipsecSaOtherReceiveErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 1022, 10, 1, 1, 3, 1, 19), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsecSaOtherReceiveErrors.setStatus('current')
ipsecSaSendErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 1022, 10, 1, 1, 3, 1, 20), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsecSaSendErrors.setStatus('current')
ipsecTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 1022, 10, 1, 1, 4))
ipsecSaCounts = MibIdentifier((1, 3, 6, 1, 4, 1, 1022, 10, 1, 1, 5))
ipsecPermTunStats = MibIdentifier((1, 3, 6, 1, 4, 1, 1022, 10, 1, 1, 6))
ipsecTransTunStats = MibIdentifier((1, 3, 6, 1, 4, 1, 1022, 10, 1, 1, 7))
ipsecNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 1022, 10, 1, 1, 8))
ipsecErrorStats = MibIdentifier((1, 3, 6, 1, 4, 1, 1022, 10, 1, 1, 9))
ipsecTotalIkeSAs = MibScalar((1, 3, 6, 1, 4, 1, 1022, 10, 1, 1, 5, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsecTotalIkeSAs.setStatus('current')
ipsecTotalIpsecSAs = MibScalar((1, 3, 6, 1, 4, 1, 1022, 10, 1, 1, 5, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsecTotalIpsecSAs.setStatus('current')
ipsecCnfgPermIkeTunnels = MibScalar((1, 3, 6, 1, 4, 1, 1022, 10, 1, 1, 6, 1), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsecCnfgPermIkeTunnels.setStatus('current')
ipsecUpPermIkeTunnels = MibScalar((1, 3, 6, 1, 4, 1, 1022, 10, 1, 1, 6, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsecUpPermIkeTunnels.setStatus('current')
ipsecCnfgPermIpsecTunnels = MibScalar((1, 3, 6, 1, 4, 1, 1022, 10, 1, 1, 6, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsecCnfgPermIpsecTunnels.setStatus('current')
ipsecUpPermIpsecTunnels = MibScalar((1, 3, 6, 1, 4, 1, 1022, 10, 1, 1, 6, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsecUpPermIpsecTunnels.setStatus('current')
ipsecTotalTransIkeTunnels = MibScalar((1, 3, 6, 1, 4, 1, 1022, 10, 1, 1, 7, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsecTotalTransIkeTunnels.setStatus('current')
ipsecCurrentTransIkeTunnels = MibScalar((1, 3, 6, 1, 4, 1, 1022, 10, 1, 1, 7, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsecCurrentTransIkeTunnels.setStatus('current')
ipsecTotalTransIpsecTunnels = MibScalar((1, 3, 6, 1, 4, 1, 1022, 10, 1, 1, 7, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsecTotalTransIpsecTunnels.setStatus('current')
ipsecCurrentTransIpsecTunnels = MibScalar((1, 3, 6, 1, 4, 1, 1022, 10, 1, 1, 7, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsecCurrentTransIpsecTunnels.setStatus('current')
ipsecTotalTransInboundPackets = MibScalar((1, 3, 6, 1, 4, 1, 1022, 10, 1, 1, 7, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsecTotalTransInboundPackets.setStatus('current')
ipsecTotalTransOutboundPackets = MibScalar((1, 3, 6, 1, 4, 1, 1022, 10, 1, 1, 7, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsecTotalTransOutboundPackets.setStatus('current')
ipsecTotalTransInboundTraffic = MibScalar((1, 3, 6, 1, 4, 1, 1022, 10, 1, 1, 7, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsecTotalTransInboundTraffic.setStatus('current')
ipsecTotalTransOutboundTraffic = MibScalar((1, 3, 6, 1, 4, 1, 1022, 10, 1, 1, 7, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsecTotalTransOutboundTraffic.setStatus('current')
ipsecTotalTransIkeSetupFailures = MibScalar((1, 3, 6, 1, 4, 1, 1022, 10, 1, 1, 7, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsecTotalTransIkeSetupFailures.setStatus('current')
ipsecUnknownSpiErrors = MibScalar((1, 3, 6, 1, 4, 1, 1022, 10, 1, 1, 9, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsecUnknownSpiErrors.setStatus('current')
ipsecIkeProtocolErrors = MibScalar((1, 3, 6, 1, 4, 1, 1022, 10, 1, 1, 9, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsecIkeProtocolErrors.setStatus('current')
ipsecIpsecAuthenticationErrors = MibScalar((1, 3, 6, 1, 4, 1, 1022, 10, 1, 1, 9, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsecIpsecAuthenticationErrors.setStatus('current')
ipsecIpsecReplayErrors = MibScalar((1, 3, 6, 1, 4, 1, 1022, 10, 1, 1, 9, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsecIpsecReplayErrors.setStatus('current')
ipsecIpsecPolicyErrors = MibScalar((1, 3, 6, 1, 4, 1, 1022, 10, 1, 1, 9, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsecIpsecPolicyErrors.setStatus('current')
ipsecNotifyMessageTotalCount = MibScalar((1, 3, 6, 1, 4, 1, 1022, 10, 1, 1, 8, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsecNotifyMessageTotalCount.setStatus('current')
ipsecNotifyCountTable = MibTable((1, 3, 6, 1, 4, 1, 1022, 10, 1, 1, 8, 2), )
if mibBuilder.loadTexts: ipsecNotifyCountTable.setStatus('current')
ipsecNotifyCountEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1022, 10, 1, 1, 8, 2, 1), ).setIndexNames((0, "TIMESTEP-IPSEC-MIB", "ipsecNotifyMessage"))
if mibBuilder.loadTexts: ipsecNotifyCountEntry.setStatus('current')
ipsecNotifyMessage = MibTableColumn((1, 3, 6, 1, 4, 1, 1022, 10, 1, 1, 8, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsecNotifyMessage.setStatus('current')
ipsecNotifyMessageCount = MibTableColumn((1, 3, 6, 1, 4, 1, 1022, 10, 1, 1, 8, 2, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsecNotifyMessageCount.setStatus('current')
ipsecTrapsObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 1022, 10, 1, 1, 4, 0))
ipsecTrapPermIkeNegFailure = NotificationType((1, 3, 6, 1, 4, 1, 1022, 10, 1, 1, 4, 0, 1)).setObjects(("TIMESTEP-IPSEC-MIB", "ipsecIkeSaIndex"), ("TIMESTEP-IPSEC-MIB", "ipsecNotifyMessage"))
if mibBuilder.loadTexts: ipsecTrapPermIkeNegFailure.setStatus('current')
ipsecTrapTransIkeNegFailure = NotificationType((1, 3, 6, 1, 4, 1, 1022, 10, 1, 1, 4, 0, 2)).setObjects(("TIMESTEP-IPSEC-MIB", "ipsecIkeSaPeerIpAddress"), ("TIMESTEP-IPSEC-MIB", "ipsecIkeSaPeerPortNumber"), ("TIMESTEP-IPSEC-MIB", "ipsecIkeSaAuthMethod"), ("TIMESTEP-IPSEC-MIB", "ipsecIkeSaPeerIdType"), ("TIMESTEP-IPSEC-MIB", "ipsecIkeSaPeerId"), ("TIMESTEP-IPSEC-MIB", "ipsecIkeSaPeerCertSerialNum"), ("TIMESTEP-IPSEC-MIB", "ipsecIkeSaPeerCertIssuer"), ("TIMESTEP-IPSEC-MIB", "ipsecNotifyMessage"))
if mibBuilder.loadTexts: ipsecTrapTransIkeNegFailure.setStatus('current')
ipsecTrapInvalidCookie = NotificationType((1, 3, 6, 1, 4, 1, 1022, 10, 1, 1, 4, 0, 3)).setObjects(("TIMESTEP-IPSEC-MIB", "ipsecIkeSaPeerIpAddress"), ("TIMESTEP-IPSEC-MIB", "ipsecIkeSaPeerPortNumber"))
if mibBuilder.loadTexts: ipsecTrapInvalidCookie.setStatus('current')
ipsecTrapIpsecNegFailure = NotificationType((1, 3, 6, 1, 4, 1, 1022, 10, 1, 1, 4, 0, 4)).setObjects(("TIMESTEP-IPSEC-MIB", "ipsecIkeSaIndex"), ("TIMESTEP-IPSEC-MIB", "ipsecNotifyMessage"))
if mibBuilder.loadTexts: ipsecTrapIpsecNegFailure.setStatus('current')
ipsecTrapIpsecAuthFailure = NotificationType((1, 3, 6, 1, 4, 1, 1022, 10, 1, 1, 4, 0, 5)).setObjects(("TIMESTEP-IPSEC-MIB", "ipsecSaIndex"))
if mibBuilder.loadTexts: ipsecTrapIpsecAuthFailure.setStatus('current')
ipsecTrapIpsecReplayFailure = NotificationType((1, 3, 6, 1, 4, 1, 1022, 10, 1, 1, 4, 0, 6)).setObjects(("TIMESTEP-IPSEC-MIB", "ipsecSaIndex"))
if mibBuilder.loadTexts: ipsecTrapIpsecReplayFailure.setStatus('current')
ipsecTrapIpsecPolicyFailure = NotificationType((1, 3, 6, 1, 4, 1, 1022, 10, 1, 1, 4, 0, 7)).setObjects(("TIMESTEP-IPSEC-MIB", "ipsecSaIndex"))
if mibBuilder.loadTexts: ipsecTrapIpsecPolicyFailure.setStatus('current')
ipsecTrapInvalidSpi = NotificationType((1, 3, 6, 1, 4, 1, 1022, 10, 1, 1, 4, 0, 8)).setObjects(("TIMESTEP-IPSEC-MIB", "ipsecIkeSaPeerIpAddress"))
if mibBuilder.loadTexts: ipsecTrapInvalidSpi.setStatus('current')
mibBuilder.exportSymbols("TIMESTEP-IPSEC-MIB", ipsecTunnelCurrentSaNum=ipsecTunnelCurrentSaNum, ipsecTrapInvalidCookie=ipsecTrapInvalidCookie, ipsecTunnelCompAlg=ipsecTunnelCompAlg, ipsecSaDecryptErrors=ipsecSaDecryptErrors, ipsecTotalTransIkeSetupFailures=ipsecTotalTransIkeSetupFailures, ipsecCnfgPermIpsecTunnels=ipsecCnfgPermIpsecTunnels, ipsecCurrentTransIkeTunnels=ipsecCurrentTransIkeTunnels, ipsecIkeSaIpsecOutboundPackets=ipsecIkeSaIpsecOutboundPackets, ipsecTotalIkeSAs=ipsecTotalIkeSAs, ipsecSaInboundPackets=ipsecSaInboundPackets, ipsecTrapIpsecPolicyFailure=ipsecTrapIpsecPolicyFailure, ipsecIkeSaEncKeyLength=ipsecIkeSaEncKeyLength, ipsecSaOtherReceiveErrors=ipsecSaOtherReceiveErrors, ipsecIkeSaInboundTraffic=ipsecIkeSaInboundTraffic, ipsecNotifyMessage=ipsecNotifyMessage, ipsecSaOutboundTraffic=ipsecSaOutboundTraffic, ipsecIkeSaEntry=ipsecIkeSaEntry, ipsecIkeSaTotalOutboundPackets=ipsecIkeSaTotalOutboundPackets, ipsecTunnelTotalSaNum=ipsecTunnelTotalSaNum, ipsecIkeProtocolErrors=ipsecIkeProtocolErrors, ipsecIkeSaTotalInboundPackets=ipsecIkeSaTotalInboundPackets, ipsecTrapPermIkeNegFailure=ipsecTrapPermIkeNegFailure, ipsecIkeSaTrafficLimit=ipsecIkeSaTrafficLimit, ipsecTotalTransInboundTraffic=ipsecTotalTransInboundTraffic, ipsec=ipsec, ipsecIpsecReplayErrors=ipsecIpsecReplayErrors, PYSNMP_MODULE_ID=ipsecMIB, ipsecTotalTransOutboundTraffic=ipsecTotalTransOutboundTraffic, ipsecTunnelDecryptErrors=ipsecTunnelDecryptErrors, ipsecSaInboundEspSpi=ipsecSaInboundEspSpi, ipsecIkeSaTable=ipsecIkeSaTable, ipsecNotifyCountEntry=ipsecNotifyCountEntry, ipsecSaCreationTime=ipsecSaCreationTime, ipsecTunnelType=ipsecTunnelType, ipsecTunnelEntry=ipsecTunnelEntry, ipsecSaInboundAhSpi=ipsecSaInboundAhSpi, ipsecUpPermIkeTunnels=ipsecUpPermIkeTunnels, ipsecTotalTransInboundPackets=ipsecTotalTransInboundPackets, ipsecIkeSaOutboundTraffic=ipsecIkeSaOutboundTraffic, ipsecSaOutboundEspSpi=ipsecSaOutboundEspSpi, ipsecIkeSaSendErrors=ipsecIkeSaSendErrors, ipsecIkeSaIpsecDecryptErrors=ipsecIkeSaIpsecDecryptErrors, ipsecIkeSaOtherReceiveErrors=ipsecIkeSaOtherReceiveErrors, ipsecTraps=ipsecTraps, ipsecCurrentTransIpsecTunnels=ipsecCurrentTransIpsecTunnels, ipsecTrapsObjects=ipsecTrapsObjects, ipsecSaReplayErrors=ipsecSaReplayErrors, ipsecTotalTransIkeTunnels=ipsecTotalTransIkeTunnels, ipsecIpsecPolicyErrors=ipsecIpsecPolicyErrors, ipsecTunnelAhAuthAlg=ipsecTunnelAhAuthAlg, ipsecIkeSaEncAlg=ipsecIkeSaEncAlg, ipsecTunnelPolicyErrors=ipsecTunnelPolicyErrors, ipsecCnfgPermIkeTunnels=ipsecCnfgPermIkeTunnels, ipsecMIBObjects=ipsecMIBObjects, ipsecTunnelEspAuthAlg=ipsecTunnelEspAuthAlg, ipsecSaOutboundPackets=ipsecSaOutboundPackets, ipsecSaCounts=ipsecSaCounts, ipsecTunnelTable=ipsecTunnelTable, ipsecTunnelLocalAddressMaskOrEnd=ipsecTunnelLocalAddressMaskOrEnd, ipsecIkeSaIpsecOutboundTraffic=ipsecIkeSaIpsecOutboundTraffic, ipsecIkeSaIpsecInboundTraffic=ipsecIkeSaIpsecInboundTraffic, ipsecIkeSaPeerCertIssuer=ipsecIkeSaPeerCertIssuer, ipsecIkeSaPeerPortNumber=ipsecIkeSaPeerPortNumber, ipsecNotifyMessageTotalCount=ipsecNotifyMessageTotalCount, ipsecTrapIpsecAuthFailure=ipsecTrapIpsecAuthFailure, ipsecTunnelEspEncKeyLength=ipsecTunnelEspEncKeyLength, ipsecIkeSaPRF=ipsecIkeSaPRF, ipsecIkeSaPeerIdType=ipsecIkeSaPeerIdType, ipsecIkeSaIpsecOtherReceiveErrors=ipsecIkeSaIpsecOtherReceiveErrors, ipsecIkeSaHashErrors=ipsecIkeSaHashErrors, ipsecTunnelLocalPort=ipsecTunnelLocalPort, ipsecSaSendErrors=ipsecSaSendErrors, ipsecIpsecAuthenticationErrors=ipsecIpsecAuthenticationErrors, ipsecTunnelRemoteAddressOrStart=ipsecTunnelRemoteAddressOrStart, ipsecTotalTransOutboundPackets=ipsecTotalTransOutboundPackets, ipsecIkeSaTotalInboundTraffic=ipsecIkeSaTotalInboundTraffic, ipsecTransTunStats=ipsecTransTunStats, ipsecTunnelSendErrors=ipsecTunnelSendErrors, ipsecTunnelLocalAddressOrStart=ipsecTunnelLocalAddressOrStart, ipsecIkeSaFirstTimeStart=ipsecIkeSaFirstTimeStart, ipsecSaIndex=ipsecSaIndex, ipsecIkeSaTimeStart=ipsecIkeSaTimeStart, ipsecPermTunStats=ipsecPermTunStats, ipsecIkeSaTotalOutboundTraffic=ipsecIkeSaTotalOutboundTraffic, ipsecIkeSaPFS=ipsecIkeSaPFS, ipsecTunnelIkeSa=ipsecTunnelIkeSa, ipsecTunnelEspEncAlg=ipsecTunnelEspEncAlg, ipsecTrapIpsecNegFailure=ipsecTrapIpsecNegFailure, ipsecSaInboundTraffic=ipsecSaInboundTraffic, ipsecIkeSaDifHelGroupType=ipsecIkeSaDifHelGroupType, ipsecIkeSaPeerIpAddress=ipsecIkeSaPeerIpAddress, ipsecTunnelReplayErrors=ipsecTunnelReplayErrors, ipsecIkeSaTimeLimit=ipsecIkeSaTimeLimit, ipsecTrapIpsecReplayFailure=ipsecTrapIpsecReplayFailure, ipsecIkeSaIpsecAuthErrors=ipsecIkeSaIpsecAuthErrors, ipsecIkeSaDecryptErrors=ipsecIkeSaDecryptErrors, ipsecTotalTransIpsecTunnels=ipsecTotalTransIpsecTunnels, ipsecSaEntry=ipsecSaEntry, ipsecIkeSaPeerCertSerialNum=ipsecIkeSaPeerCertSerialNum, ipsecIkeSaStatus=ipsecIkeSaStatus, ipsecTunnelTotalOutboundPackets=ipsecTunnelTotalOutboundPackets, ipsecUpPermIpsecTunnels=ipsecUpPermIpsecTunnels, ipsecTunnelAuthErrors=ipsecTunnelAuthErrors, ipsecSaTrafficLimit=ipsecSaTrafficLimit, ipsecTunnelTotalOutboundTraffic=ipsecTunnelTotalOutboundTraffic, ipsecMIB=ipsecMIB, ipsecNotifications=ipsecNotifications, ipsecIkeSaIpsecSendErrors=ipsecIkeSaIpsecSendErrors, ipsecSaInboundCompCpi=ipsecSaInboundCompCpi, ipsecTunnelTotalInboundTraffic=ipsecTunnelTotalInboundTraffic, ipsecIkeSaIpsecInboundPackets=ipsecIkeSaIpsecInboundPackets, ipsecTunnelIndex=ipsecTunnelIndex, ipsecTunnelOtherReceiveErrors=ipsecTunnelOtherReceiveErrors, ipsecSaOutboundAhSpi=ipsecSaOutboundAhSpi, ipsecIkeSaResponderCookie=ipsecIkeSaResponderCookie, ipsecIkeSaDifHelFieldSize=ipsecIkeSaDifHelFieldSize, ipsecIkeSaType=ipsecIkeSaType, ipsecTotalIpsecSAs=ipsecTotalIpsecSAs, ipsecSaTable=ipsecSaTable, ipsecSaAuthErrors=ipsecSaAuthErrors, ipsecErrorStats=ipsecErrorStats, ipsecIkeSaPeerId=ipsecIkeSaPeerId, ipsecTunnelTotalInboundPackets=ipsecTunnelTotalInboundPackets, ipsecTrapInvalidSpi=ipsecTrapInvalidSpi, ipsecSaOutboundCompCpi=ipsecSaOutboundCompCpi, ipsecIkeSaDifHelGroupDesc=ipsecIkeSaDifHelGroupDesc, ipsecTrapTransIkeNegFailure=ipsecTrapTransIkeNegFailure, ipsecUnknownSpiErrors=ipsecUnknownSpiErrors, ipsecTunnelMode=ipsecTunnelMode, ipsecIkeSaIndex=ipsecIkeSaIndex, ipsecIkeSaAuthMethod=ipsecIkeSaAuthMethod, ipsecIkeSaHashAlg=ipsecIkeSaHashAlg, ipsecIkeSaTotalSaNum=ipsecIkeSaTotalSaNum, ipsecNotifyMessageCount=ipsecNotifyMessageCount, ipsecIkeSaInboundPackets=ipsecIkeSaInboundPackets, ipsecNotifyCountTable=ipsecNotifyCountTable, ipsecSaTimeLimit=ipsecSaTimeLimit, ipsecIkeSaIpsecReplayErrors=ipsecIkeSaIpsecReplayErrors, ipsecTunnelProtocol=ipsecTunnelProtocol, ipsecSaTunnel=ipsecSaTunnel, ipsecIkeSaInitiatorCookie=ipsecIkeSaInitiatorCookie, ipsecTunnelRemotePort=ipsecTunnelRemotePort, ipsecTunnelRemoteAddressMaskOrEnd=ipsecTunnelRemoteAddressMaskOrEnd, ipsecIkeSaOutboundPackets=ipsecIkeSaOutboundPackets, ipsecTunnelStartTime=ipsecTunnelStartTime)
