#
# PySNMP MIB module ZYXEL-RADIUS-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/ZYXEL-RADIUS-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 21:45:29 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ConstraintsIntersection, ValueSizeConstraint, ConstraintsUnion, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ConstraintsIntersection", "ValueSizeConstraint", "ConstraintsUnion", "SingleValueConstraint")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
TimeTicks, Bits, Counter64, IpAddress, MibScalar, MibTable, MibTableRow, MibTableColumn, MibIdentifier, Gauge32, NotificationType, Counter32, ModuleIdentity, Unsigned32, iso, ObjectIdentity, Integer32 = mibBuilder.importSymbols("SNMPv2-SMI", "TimeTicks", "Bits", "Counter64", "IpAddress", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "MibIdentifier", "Gauge32", "NotificationType", "Counter32", "ModuleIdentity", "Unsigned32", "iso", "ObjectIdentity", "Integer32")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
esMgmt, = mibBuilder.importSymbols("ZYXEL-ES-SMI", "esMgmt")
zyxelRadius = ModuleIdentity((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 71))
if mibBuilder.loadTexts: zyxelRadius.setLastUpdated('201207010000Z')
if mibBuilder.loadTexts: zyxelRadius.setOrganization('Enterprise Solution ZyXEL')
zyxelRadiusServerSetup = MibIdentifier((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 71, 1))
zyxelRadiusServerNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 71, 2))
zyxelRadiusAuthenticationServerSetup = MibIdentifier((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 71, 1, 1))
zyRadiusAuthenticationServerMode = MibScalar((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 71, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("indexPriority", 1), ("roundRobin", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zyRadiusAuthenticationServerMode.setStatus('current')
zyRadiusAuthenticationServerTimeout = MibScalar((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 71, 1, 1, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zyRadiusAuthenticationServerTimeout.setStatus('current')
zyxelRadiusAuthenticationServerTable = MibTable((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 71, 1, 1, 3), )
if mibBuilder.loadTexts: zyxelRadiusAuthenticationServerTable.setStatus('current')
zyxelRadiusAuthenticationServerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 71, 1, 1, 3, 1), ).setIndexNames((0, "ZYXEL-RADIUS-MIB", "zyRadiusAuthenticationServerIndex"))
if mibBuilder.loadTexts: zyxelRadiusAuthenticationServerEntry.setStatus('current')
zyRadiusAuthenticationServerIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 71, 1, 1, 3, 1, 1), Integer32())
if mibBuilder.loadTexts: zyRadiusAuthenticationServerIndex.setStatus('current')
zyRadiusAuthenticationServerIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 71, 1, 1, 3, 1, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zyRadiusAuthenticationServerIpAddr.setStatus('current')
zyRadiusAuthenticationServerUdpPort = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 71, 1, 1, 3, 1, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zyRadiusAuthenticationServerUdpPort.setStatus('current')
zyRadiusAuthenticationServerSharedSecret = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 71, 1, 1, 3, 1, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zyRadiusAuthenticationServerSharedSecret.setStatus('current')
zyxelRadiusAccountingServerSetup = MibIdentifier((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 71, 1, 2))
zyRadiusAccountingServerTimeout = MibScalar((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 71, 1, 2, 1), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zyRadiusAccountingServerTimeout.setStatus('current')
zyxelRadiusAccountingServerTable = MibTable((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 71, 1, 2, 2), )
if mibBuilder.loadTexts: zyxelRadiusAccountingServerTable.setStatus('current')
zyxelRadiusAccountingServerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 71, 1, 2, 2, 1), ).setIndexNames((0, "ZYXEL-RADIUS-MIB", "zyRadiusAccountingServerIndex"))
if mibBuilder.loadTexts: zyxelRadiusAccountingServerEntry.setStatus('current')
zyRadiusAccountingServerIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 71, 1, 2, 2, 1, 1), Integer32())
if mibBuilder.loadTexts: zyRadiusAccountingServerIndex.setStatus('current')
zyRadiusAccountingServerIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 71, 1, 2, 2, 1, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zyRadiusAccountingServerIpAddr.setStatus('current')
zyRadiusAccountingServerUdpPort = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 71, 1, 2, 2, 1, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zyRadiusAccountingServerUdpPort.setStatus('current')
zyRadiusAccountingServerSharedSecret = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 71, 1, 2, 2, 1, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zyRadiusAccountingServerSharedSecret.setStatus('current')
zyRadiusServerAuthenticationServerNotReachable = NotificationType((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 71, 2, 1)).setObjects(("ZYXEL-RADIUS-MIB", "zyRadiusAuthenticationServerIndex"))
if mibBuilder.loadTexts: zyRadiusServerAuthenticationServerNotReachable.setStatus('current')
zyRadiusServerAccountingServerNotReachable = NotificationType((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 71, 2, 2)).setObjects(("ZYXEL-RADIUS-MIB", "zyRadiusAccountingServerIndex"))
if mibBuilder.loadTexts: zyRadiusServerAccountingServerNotReachable.setStatus('current')
zyRadiusServerAuthenticationServerNotReachableRecovered = NotificationType((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 71, 2, 3)).setObjects(("ZYXEL-RADIUS-MIB", "zyRadiusAuthenticationServerIndex"))
if mibBuilder.loadTexts: zyRadiusServerAuthenticationServerNotReachableRecovered.setStatus('current')
zyRadiusServerAccountingServerNotReachableRecovered = NotificationType((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 71, 2, 4)).setObjects(("ZYXEL-RADIUS-MIB", "zyRadiusAccountingServerIndex"))
if mibBuilder.loadTexts: zyRadiusServerAccountingServerNotReachableRecovered.setStatus('current')
mibBuilder.exportSymbols("ZYXEL-RADIUS-MIB", zyxelRadiusAccountingServerTable=zyxelRadiusAccountingServerTable, zyxelRadiusAuthenticationServerEntry=zyxelRadiusAuthenticationServerEntry, zyRadiusAuthenticationServerSharedSecret=zyRadiusAuthenticationServerSharedSecret, zyxelRadiusServerNotifications=zyxelRadiusServerNotifications, zyxelRadiusAccountingServerEntry=zyxelRadiusAccountingServerEntry, zyxelRadiusAuthenticationServerSetup=zyxelRadiusAuthenticationServerSetup, zyRadiusAccountingServerUdpPort=zyRadiusAccountingServerUdpPort, zyRadiusAccountingServerSharedSecret=zyRadiusAccountingServerSharedSecret, zyRadiusServerAuthenticationServerNotReachableRecovered=zyRadiusServerAuthenticationServerNotReachableRecovered, zyxelRadius=zyxelRadius, zyRadiusServerAccountingServerNotReachable=zyRadiusServerAccountingServerNotReachable, zyxelRadiusAuthenticationServerTable=zyxelRadiusAuthenticationServerTable, zyxelRadiusServerSetup=zyxelRadiusServerSetup, zyRadiusAccountingServerIndex=zyRadiusAccountingServerIndex, zyRadiusServerAccountingServerNotReachableRecovered=zyRadiusServerAccountingServerNotReachableRecovered, zyRadiusAccountingServerTimeout=zyRadiusAccountingServerTimeout, zyRadiusAuthenticationServerUdpPort=zyRadiusAuthenticationServerUdpPort, zyRadiusAccountingServerIpAddr=zyRadiusAccountingServerIpAddr, zyxelRadiusAccountingServerSetup=zyxelRadiusAccountingServerSetup, zyRadiusAuthenticationServerTimeout=zyRadiusAuthenticationServerTimeout, zyRadiusAuthenticationServerMode=zyRadiusAuthenticationServerMode, zyRadiusAuthenticationServerIndex=zyRadiusAuthenticationServerIndex, zyRadiusServerAuthenticationServerNotReachable=zyRadiusServerAuthenticationServerNotReachable, zyRadiusAuthenticationServerIpAddr=zyRadiusAuthenticationServerIpAddr, PYSNMP_MODULE_ID=zyxelRadius)
