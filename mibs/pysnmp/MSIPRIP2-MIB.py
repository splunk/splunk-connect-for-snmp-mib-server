#
# PySNMP MIB module MSIPRIP2-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/MSIPRIP2-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 20:05:48 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ValueSizeConstraint, ValueRangeConstraint, ConstraintsIntersection, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ValueSizeConstraint", "ValueRangeConstraint", "ConstraintsIntersection", "ConstraintsUnion")
software, microsoft = mibBuilder.importSymbols("MSFT-MIB", "software", "microsoft")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
iso, ObjectIdentity, ModuleIdentity, NotificationType, Counter32, TimeTicks, IpAddress, MibIdentifier, Integer32, enterprises, Counter64, MibScalar, MibTable, MibTableRow, MibTableColumn, Gauge32, Bits, Unsigned32 = mibBuilder.importSymbols("SNMPv2-SMI", "iso", "ObjectIdentity", "ModuleIdentity", "NotificationType", "Counter32", "TimeTicks", "IpAddress", "MibIdentifier", "Integer32", "enterprises", "Counter64", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Gauge32", "Bits", "Unsigned32")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
msiprip2 = MibIdentifier((1, 3, 6, 1, 4, 1, 311, 1, 11))
pysmi_global = MibIdentifier((1, 3, 6, 1, 4, 1, 311, 1, 11, 1)).setLabel("global")
interface = MibIdentifier((1, 3, 6, 1, 4, 1, 311, 1, 11, 2))
peer = MibIdentifier((1, 3, 6, 1, 4, 1, 311, 1, 11, 3))
globalSystemRouteChanges = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 11, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: globalSystemRouteChanges.setStatus('mandatory')
globalTotalResponseSends = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 11, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: globalTotalResponseSends.setStatus('mandatory')
globalLoggingLevel = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 11, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("none", 1), ("error", 2), ("warning", 3), ("information", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: globalLoggingLevel.setStatus('mandatory')
globalMaxRecQueueSize = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 11, 1, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: globalMaxRecQueueSize.setStatus('mandatory')
globalMaxSendQueueSize = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 11, 1, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: globalMaxSendQueueSize.setStatus('mandatory')
globalMinTriggeredUpdateInterval = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 11, 1, 6), TimeTicks()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: globalMinTriggeredUpdateInterval.setStatus('mandatory')
globalPeerFilterMode = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 11, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("disable", 1), ("include", 2), ("exclude", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: globalPeerFilterMode.setStatus('mandatory')
globalPeerFilterCount = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 11, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: globalPeerFilterCount.setStatus('mandatory')
globalPeerFilterTable = MibTable((1, 3, 6, 1, 4, 1, 311, 1, 11, 1, 9), )
if mibBuilder.loadTexts: globalPeerFilterTable.setStatus('mandatory')
globalPeerFilterEntry = MibTableRow((1, 3, 6, 1, 4, 1, 311, 1, 11, 1, 9, 1), ).setIndexNames((0, "MSIPRIP2-MIB", "globalPFAddr"))
if mibBuilder.loadTexts: globalPeerFilterEntry.setStatus('mandatory')
globalPFAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 11, 1, 9, 1, 1), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: globalPFAddr.setStatus('mandatory')
globalPFTag = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 11, 1, 9, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("create", 1), ("delete", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: globalPFTag.setStatus('mandatory')
ifStatsTable = MibTable((1, 3, 6, 1, 4, 1, 311, 1, 11, 2, 1), )
if mibBuilder.loadTexts: ifStatsTable.setStatus('mandatory')
ifStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 311, 1, 11, 2, 1, 1), ).setIndexNames((0, "MSIPRIP2-MIB", "ifSEIndex"))
if mibBuilder.loadTexts: ifStatsEntry.setStatus('mandatory')
ifSEIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 11, 2, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ifSEIndex.setStatus('mandatory')
ifSEState = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 11, 2, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("bound", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ifSEState.setStatus('mandatory')
ifSESendFailures = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 11, 2, 1, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ifSESendFailures.setStatus('mandatory')
ifSEReceiveFailures = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 11, 2, 1, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ifSEReceiveFailures.setStatus('mandatory')
ifSERequestSends = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 11, 2, 1, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ifSERequestSends.setStatus('mandatory')
ifSERequestReceiveds = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 11, 2, 1, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ifSERequestReceiveds.setStatus('mandatory')
ifSEResponseSends = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 11, 2, 1, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ifSEResponseSends.setStatus('mandatory')
ifSEResponseReceiveds = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 11, 2, 1, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ifSEResponseReceiveds.setStatus('mandatory')
ifSEBadResponsePacketReceiveds = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 11, 2, 1, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ifSEBadResponsePacketReceiveds.setStatus('mandatory')
ifSEBadResponseEntriesReceiveds = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 11, 2, 1, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ifSEBadResponseEntriesReceiveds.setStatus('mandatory')
ifSETriggeredUpdateSends = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 11, 2, 1, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ifSETriggeredUpdateSends.setStatus('mandatory')
ifConfigTable = MibTable((1, 3, 6, 1, 4, 1, 311, 1, 11, 2, 2), )
if mibBuilder.loadTexts: ifConfigTable.setStatus('mandatory')
ifConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 311, 1, 11, 2, 2, 1), ).setIndexNames((0, "MSIPRIP2-MIB", "ifCEIndex"))
if mibBuilder.loadTexts: ifConfigEntry.setStatus('mandatory')
ifCEIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 11, 2, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ifCEIndex.setStatus('mandatory')
ifCEState = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 11, 2, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("bound", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ifCEState.setStatus('mandatory')
ifCEMetric = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 11, 2, 2, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 16)).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ifCEMetric.setStatus('mandatory')
ifCEUpdateMode = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 11, 2, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("periodic", 1), ("demand", 2))).clone('periodic')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ifCEUpdateMode.setStatus('mandatory')
ifCEAcceptMode = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 11, 2, 2, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("disable", 1), ("rip1", 2), ("rip1Compat", 3), ("rip2", 4))).clone('rip1Compat')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ifCEAcceptMode.setStatus('mandatory')
ifCEAnnounceMode = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 11, 2, 2, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("disable", 1), ("rip1", 2), ("rip1Compat", 3), ("rip2", 4))).clone('rip1Compat')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ifCEAnnounceMode.setStatus('mandatory')
ifCEProtocolFlags = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 11, 2, 2, 1, 7), Integer32().clone(240)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ifCEProtocolFlags.setStatus('mandatory')
ifCERouteExpirationInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 11, 2, 2, 1, 8), TimeTicks().clone(180)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ifCERouteExpirationInterval.setStatus('mandatory')
ifCERouteRemovalInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 11, 2, 2, 1, 9), TimeTicks().clone(120)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ifCERouteRemovalInterval.setStatus('mandatory')
ifCEFullUpdateInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 11, 2, 2, 1, 10), TimeTicks().clone(30)).setMaxAccess("readonly")
if mibBuilder.loadTexts: ifCEFullUpdateInterval.setStatus('mandatory')
ifCEAuthenticationType = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 11, 2, 2, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("noAuthentication", 1), ("simplePassword", 2), ("md5", 3))).clone('noAuthentication')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ifCEAuthenticationType.setStatus('mandatory')
ifCEAuthenticationKey = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 11, 2, 2, 1, 12), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 16)).clone(hexValue="")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ifCEAuthenticationKey.setStatus('mandatory')
ifCERouteTag = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 11, 2, 2, 1, 13), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ifCERouteTag.setStatus('mandatory')
ifCEUnicastPeerMode = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 11, 2, 2, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("disable", 1), ("peerAlso", 2), ("peerOnly", 3))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ifCEUnicastPeerMode.setStatus('mandatory')
ifCEAcceptFilterMode = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 11, 2, 2, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("disable", 1), ("include", 2), ("exclude", 3))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ifCEAcceptFilterMode.setStatus('mandatory')
ifCEAnnounceFilterMode = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 11, 2, 2, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("disable", 1), ("include", 2), ("exclude", 3))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ifCEAnnounceFilterMode.setStatus('mandatory')
ifCEUnicastPeerCount = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 11, 2, 2, 1, 17), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ifCEUnicastPeerCount.setStatus('mandatory')
ifCEAcceptFilterCount = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 11, 2, 2, 1, 18), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ifCEAcceptFilterCount.setStatus('mandatory')
ifCEAnnounceFilterCount = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 11, 2, 2, 1, 19), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ifCEAnnounceFilterCount.setStatus('mandatory')
ifUnicastPeersTable = MibTable((1, 3, 6, 1, 4, 1, 311, 1, 11, 2, 3), )
if mibBuilder.loadTexts: ifUnicastPeersTable.setStatus('mandatory')
ifUnicastPeersEntry = MibTableRow((1, 3, 6, 1, 4, 1, 311, 1, 11, 2, 3, 1), ).setIndexNames((0, "MSIPRIP2-MIB", "ifUPIfIndex"), (0, "MSIPRIP2-MIB", "ifUPAddress"))
if mibBuilder.loadTexts: ifUnicastPeersEntry.setStatus('mandatory')
ifUPIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 11, 2, 3, 1, 1), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ifUPIfIndex.setStatus('mandatory')
ifUPAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 11, 2, 3, 1, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ifUPAddress.setStatus('mandatory')
ifUPTag = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 11, 2, 3, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("create", 1), ("delete", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ifUPTag.setStatus('mandatory')
ifAcceptRouteFilterTable = MibTable((1, 3, 6, 1, 4, 1, 311, 1, 11, 2, 4), )
if mibBuilder.loadTexts: ifAcceptRouteFilterTable.setStatus('mandatory')
ifAcceptRouteFilterEntry = MibTableRow((1, 3, 6, 1, 4, 1, 311, 1, 11, 2, 4, 1), ).setIndexNames((0, "MSIPRIP2-MIB", "ifAcceptRFIfIndex"), (0, "MSIPRIP2-MIB", "ifAcceptRFLoAddress"), (0, "MSIPRIP2-MIB", "ifAcceptRFHiAddress"), (0, "MSIPRIP2-MIB", "ifAcceptRFTag"))
if mibBuilder.loadTexts: ifAcceptRouteFilterEntry.setStatus('mandatory')
ifAcceptRFIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 11, 2, 4, 1, 1), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ifAcceptRFIfIndex.setStatus('mandatory')
ifAcceptRFLoAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 11, 2, 4, 1, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ifAcceptRFLoAddress.setStatus('mandatory')
ifAcceptRFHiAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 11, 2, 4, 1, 3), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ifAcceptRFHiAddress.setStatus('mandatory')
ifAcceptRFTag = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 11, 2, 4, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("create", 1), ("delete", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ifAcceptRFTag.setStatus('mandatory')
ifAnnounceRouteFilterTable = MibTable((1, 3, 6, 1, 4, 1, 311, 1, 11, 2, 5), )
if mibBuilder.loadTexts: ifAnnounceRouteFilterTable.setStatus('mandatory')
ifAnnounceRouteFilterEntry = MibTableRow((1, 3, 6, 1, 4, 1, 311, 1, 11, 2, 5, 1), ).setIndexNames((0, "MSIPRIP2-MIB", "ifAnnounceRFIfIndex"), (0, "MSIPRIP2-MIB", "ifAnnounceRFLoAddress"), (0, "MSIPRIP2-MIB", "ifAnnounceRFHiAddress"))
if mibBuilder.loadTexts: ifAnnounceRouteFilterEntry.setStatus('mandatory')
ifAnnounceRFIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 11, 2, 5, 1, 1), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ifAnnounceRFIfIndex.setStatus('mandatory')
ifAnnounceRFLoAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 11, 2, 5, 1, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ifAnnounceRFLoAddress.setStatus('mandatory')
ifAnnounceRFHiAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 11, 2, 5, 1, 3), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ifAnnounceRFHiAddress.setStatus('mandatory')
ifAnnounceRFTag = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 11, 2, 5, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("create", 1), ("delete", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ifAnnounceRFTag.setStatus('mandatory')
ifBindingTable = MibTable((1, 3, 6, 1, 4, 1, 311, 1, 11, 2, 6), )
if mibBuilder.loadTexts: ifBindingTable.setStatus('mandatory')
ifBindingEntry = MibTableRow((1, 3, 6, 1, 4, 1, 311, 1, 11, 2, 6, 1), ).setIndexNames((0, "MSIPRIP2-MIB", "ifBindingIndex"))
if mibBuilder.loadTexts: ifBindingEntry.setStatus('mandatory')
ifBindingIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 11, 2, 6, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ifBindingIndex.setStatus('mandatory')
ifBindingState = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 11, 2, 6, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("bound", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ifBindingState.setStatus('mandatory')
ifBindingCounts = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 11, 2, 6, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ifBindingCounts.setStatus('mandatory')
ifAddressTable = MibTable((1, 3, 6, 1, 4, 1, 311, 1, 11, 2, 7), )
if mibBuilder.loadTexts: ifAddressTable.setStatus('mandatory')
ifAddressEntry = MibTableRow((1, 3, 6, 1, 4, 1, 311, 1, 11, 2, 7, 1), ).setIndexNames((0, "MSIPRIP2-MIB", "ifAEIfIndex"), (0, "MSIPRIP2-MIB", "ifAEAddress"), (0, "MSIPRIP2-MIB", "ifAEMask"))
if mibBuilder.loadTexts: ifAddressEntry.setStatus('mandatory')
ifAEIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 11, 2, 7, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ifAEIfIndex.setStatus('mandatory')
ifAEAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 11, 2, 7, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ifAEAddress.setStatus('mandatory')
ifAEMask = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 11, 2, 7, 1, 3), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ifAEMask.setStatus('mandatory')
ifPeerStatsTable = MibTable((1, 3, 6, 1, 4, 1, 311, 1, 11, 3, 1), )
if mibBuilder.loadTexts: ifPeerStatsTable.setStatus('mandatory')
ifPeerStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 311, 1, 11, 3, 1, 1), ).setIndexNames((0, "MSIPRIP2-MIB", "ifPSAddress"))
if mibBuilder.loadTexts: ifPeerStatsEntry.setStatus('mandatory')
ifPSAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 11, 3, 1, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ifPSAddress.setStatus('mandatory')
ifPSLastPeerRouteTag = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 11, 3, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ifPSLastPeerRouteTag.setStatus('mandatory')
ifPSLastPeerUpdateTickCount = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 11, 3, 1, 1, 3), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ifPSLastPeerUpdateTickCount.setStatus('mandatory')
ifPSLastPeerUpdateVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 11, 3, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ifPSLastPeerUpdateVersion.setStatus('mandatory')
ifPSPeerBadResponsePackets = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 11, 3, 1, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ifPSPeerBadResponsePackets.setStatus('mandatory')
ifPSPeerBadResponseEntries = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 11, 3, 1, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ifPSPeerBadResponseEntries.setStatus('mandatory')
mibBuilder.exportSymbols("MSIPRIP2-MIB", ifCEAuthenticationKey=ifCEAuthenticationKey, globalPeerFilterTable=globalPeerFilterTable, ifUPIfIndex=ifUPIfIndex, ifAcceptRouteFilterEntry=ifAcceptRouteFilterEntry, ifSERequestSends=ifSERequestSends, ifCERouteRemovalInterval=ifCERouteRemovalInterval, ifSEReceiveFailures=ifSEReceiveFailures, interface=interface, ifSEBadResponseEntriesReceiveds=ifSEBadResponseEntriesReceiveds, ifCERouteTag=ifCERouteTag, ifSEResponseReceiveds=ifSEResponseReceiveds, ifConfigEntry=ifConfigEntry, ifAnnounceRFIfIndex=ifAnnounceRFIfIndex, ifPSPeerBadResponsePackets=ifPSPeerBadResponsePackets, ifCEState=ifCEState, ifCEAuthenticationType=ifCEAuthenticationType, ifCEUpdateMode=ifCEUpdateMode, ifPSPeerBadResponseEntries=ifPSPeerBadResponseEntries, ifCEAcceptFilterCount=ifCEAcceptFilterCount, ifBindingState=ifBindingState, ifAnnounceRouteFilterEntry=ifAnnounceRouteFilterEntry, ifAcceptRFIfIndex=ifAcceptRFIfIndex, ifStatsEntry=ifStatsEntry, ifAcceptRFLoAddress=ifAcceptRFLoAddress, globalPeerFilterEntry=globalPeerFilterEntry, ifConfigTable=ifConfigTable, ifBindingTable=ifBindingTable, ifBindingEntry=ifBindingEntry, ifAcceptRouteFilterTable=ifAcceptRouteFilterTable, ifCEMetric=ifCEMetric, ifCEUnicastPeerCount=ifCEUnicastPeerCount, ifCEProtocolFlags=ifCEProtocolFlags, ifUnicastPeersTable=ifUnicastPeersTable, ifCEUnicastPeerMode=ifCEUnicastPeerMode, ifAcceptRFTag=ifAcceptRFTag, msiprip2=msiprip2, ifUnicastPeersEntry=ifUnicastPeersEntry, peer=peer, ifPSLastPeerUpdateVersion=ifPSLastPeerUpdateVersion, globalMaxSendQueueSize=globalMaxSendQueueSize, globalSystemRouteChanges=globalSystemRouteChanges, ifSETriggeredUpdateSends=ifSETriggeredUpdateSends, ifAnnounceRFTag=ifAnnounceRFTag, ifPSAddress=ifPSAddress, ifCERouteExpirationInterval=ifCERouteExpirationInterval, ifCEAnnounceMode=ifCEAnnounceMode, ifSEIndex=ifSEIndex, globalMinTriggeredUpdateInterval=globalMinTriggeredUpdateInterval, ifUPTag=ifUPTag, ifAnnounceRFHiAddress=ifAnnounceRFHiAddress, ifBindingCounts=ifBindingCounts, globalPeerFilterMode=globalPeerFilterMode, ifStatsTable=ifStatsTable, globalLoggingLevel=globalLoggingLevel, ifPeerStatsEntry=ifPeerStatsEntry, ifAddressTable=ifAddressTable, ifCEAcceptFilterMode=ifCEAcceptFilterMode, ifSESendFailures=ifSESendFailures, ifAEAddress=ifAEAddress, ifPeerStatsTable=ifPeerStatsTable, ifSEResponseSends=ifSEResponseSends, ifCEAnnounceFilterMode=ifCEAnnounceFilterMode, ifCEAcceptMode=ifCEAcceptMode, ifAcceptRFHiAddress=ifAcceptRFHiAddress, ifSEState=ifSEState, ifPSLastPeerRouteTag=ifPSLastPeerRouteTag, ifSERequestReceiveds=ifSERequestReceiveds, globalPeerFilterCount=globalPeerFilterCount, ifUPAddress=ifUPAddress, ifBindingIndex=ifBindingIndex, pysmi_global=pysmi_global, globalPFAddr=globalPFAddr, ifAnnounceRouteFilterTable=ifAnnounceRouteFilterTable, globalPFTag=globalPFTag, ifCEFullUpdateInterval=ifCEFullUpdateInterval, ifAEIfIndex=ifAEIfIndex, ifAddressEntry=ifAddressEntry, ifCEIndex=ifCEIndex, ifCEAnnounceFilterCount=ifCEAnnounceFilterCount, ifAnnounceRFLoAddress=ifAnnounceRFLoAddress, globalTotalResponseSends=globalTotalResponseSends, ifPSLastPeerUpdateTickCount=ifPSLastPeerUpdateTickCount, ifAEMask=ifAEMask, globalMaxRecQueueSize=globalMaxRecQueueSize, ifSEBadResponsePacketReceiveds=ifSEBadResponsePacketReceiveds)
