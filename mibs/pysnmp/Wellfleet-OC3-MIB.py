#
# PySNMP MIB module Wellfleet-OC3-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/Wellfleet-OC3-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 21:34:34 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ValueSizeConstraint, SingleValueConstraint, ConstraintsUnion, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ValueSizeConstraint", "SingleValueConstraint", "ConstraintsUnion", "ConstraintsIntersection")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
Counter32, ObjectIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, Gauge32, TimeTicks, Counter64, IpAddress, iso, NotificationType, ModuleIdentity, Integer32, Bits, Unsigned32, MibIdentifier = mibBuilder.importSymbols("SNMPv2-SMI", "Counter32", "ObjectIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Gauge32", "TimeTicks", "Counter64", "IpAddress", "iso", "NotificationType", "ModuleIdentity", "Integer32", "Bits", "Unsigned32", "MibIdentifier")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
wfSonetGroup, = mibBuilder.importSymbols("Wellfleet-COMMON-MIB", "wfSonetGroup")
wfOc3ConfigTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 4, 24, 12), )
if mibBuilder.loadTexts: wfOc3ConfigTable.setStatus('mandatory')
wfOc3ConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 4, 24, 12, 1), ).setIndexNames((0, "Wellfleet-OC3-MIB", "wfOc3ConfigIndex"))
if mibBuilder.loadTexts: wfOc3ConfigEntry.setStatus('mandatory')
wfOc3ConfigDelete = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 24, 12, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("created", 1), ("deleted", 2))).clone('created')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfOc3ConfigDelete.setStatus('mandatory')
wfOc3ConfigIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 24, 12, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfOc3ConfigIndex.setStatus('mandatory')
wfOc3ConfigType = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 24, 12, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfOc3ConfigType.setStatus('mandatory')
wfOc3ConfigTimeElapsed = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 24, 12, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfOc3ConfigTimeElapsed.setStatus('mandatory')
wfOc3ConfigValidIntervals = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 24, 12, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfOc3ConfigValidIntervals.setStatus('mandatory')
wfOc3ConfigLineCoding = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 24, 12, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("other", 1), ("b3zs", 2), ("cmi", 3), ("nrz", 4), ("rz", 5))).clone('nrz')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfOc3ConfigLineCoding.setStatus('mandatory')
wfOc3ConfigLineType = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 24, 12, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("other", 1), ("shortsinglemode", 2), ("longsinglemode", 3), ("multimode", 4), ("coax", 5), ("utp", 6))).clone('shortsinglemode')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfOc3ConfigLineType.setStatus('mandatory')
wfOc3ConfigCircuitIdentifier = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 4, 24, 12, 1, 8), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfOc3ConfigCircuitIdentifier.setStatus('mandatory')
mibBuilder.exportSymbols("Wellfleet-OC3-MIB", wfOc3ConfigLineType=wfOc3ConfigLineType, wfOc3ConfigTimeElapsed=wfOc3ConfigTimeElapsed, wfOc3ConfigIndex=wfOc3ConfigIndex, wfOc3ConfigValidIntervals=wfOc3ConfigValidIntervals, wfOc3ConfigDelete=wfOc3ConfigDelete, wfOc3ConfigCircuitIdentifier=wfOc3ConfigCircuitIdentifier, wfOc3ConfigTable=wfOc3ConfigTable, wfOc3ConfigLineCoding=wfOc3ConfigLineCoding, wfOc3ConfigEntry=wfOc3ConfigEntry, wfOc3ConfigType=wfOc3ConfigType)
