#
# PySNMP MIB module A3COM-HUAWEI-PBR-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/A3COM-HUAWEI-PBR-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 16:51:46 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
h3cCommon, = mibBuilder.importSymbols("A3COM-HUAWEI-OID-MIB", "h3cCommon")
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, SingleValueConstraint, ConstraintsUnion, ValueSizeConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "SingleValueConstraint", "ConstraintsUnion", "ValueSizeConstraint", "ConstraintsIntersection")
InetAddressType, InetAddress = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddressType", "InetAddress")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Integer32, NotificationType, iso, Bits, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter32, ObjectIdentity, Unsigned32, TimeTicks, ModuleIdentity, Gauge32, IpAddress, Counter64, MibIdentifier = mibBuilder.importSymbols("SNMPv2-SMI", "Integer32", "NotificationType", "iso", "Bits", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter32", "ObjectIdentity", "Unsigned32", "TimeTicks", "ModuleIdentity", "Gauge32", "IpAddress", "Counter64", "MibIdentifier")
TextualConvention, TruthValue, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "TruthValue", "DisplayString")
h3cPBR = ModuleIdentity((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 113))
h3cPBR.setRevisions(('2010-12-10 15:58',))
if mibBuilder.loadTexts: h3cPBR.setLastUpdated('201012101558Z')
if mibBuilder.loadTexts: h3cPBR.setOrganization('Hangzhou H3C Technologies Co., Ltd.')
h3cPBRObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 113, 1))
h3cPBRGlobal = MibIdentifier((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 113, 1, 1))
h3cPBRMibTrap = MibIdentifier((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 113, 1, 2))
h3cPBRNexthopTrapEnabled = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 113, 1, 1, 1), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cPBRNexthopTrapEnabled.setStatus('current')
h3cPBRTrapObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 113, 1, 2, 1))
h3cPBRNexthopAddrType = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 113, 1, 2, 1, 1), InetAddressType()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: h3cPBRNexthopAddrType.setStatus('current')
h3cPBRNexthopAddr = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 113, 1, 2, 1, 2), InetAddress()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: h3cPBRNexthopAddr.setStatus('current')
h3cPBRTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 113, 1, 2, 2))
h3cPBRTrapsPrefix = MibIdentifier((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 113, 1, 2, 2, 0))
h3cPBRNexthopFailedTrap = NotificationType((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 113, 1, 2, 2, 0, 1)).setObjects(("A3COM-HUAWEI-PBR-MIB", "h3cPBRNexthopAddrType"), ("A3COM-HUAWEI-PBR-MIB", "h3cPBRNexthopAddr"))
if mibBuilder.loadTexts: h3cPBRNexthopFailedTrap.setStatus('current')
mibBuilder.exportSymbols("A3COM-HUAWEI-PBR-MIB", PYSNMP_MODULE_ID=h3cPBR, h3cPBRNexthopAddrType=h3cPBRNexthopAddrType, h3cPBRTrapsPrefix=h3cPBRTrapsPrefix, h3cPBRTrapObjects=h3cPBRTrapObjects, h3cPBRNexthopTrapEnabled=h3cPBRNexthopTrapEnabled, h3cPBRGlobal=h3cPBRGlobal, h3cPBRNexthopFailedTrap=h3cPBRNexthopFailedTrap, h3cPBRObjects=h3cPBRObjects, h3cPBRMibTrap=h3cPBRMibTrap, h3cPBRNexthopAddr=h3cPBRNexthopAddr, h3cPBRTraps=h3cPBRTraps, h3cPBR=h3cPBR)
