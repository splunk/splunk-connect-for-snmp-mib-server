#
# PySNMP MIB module SONUS-DSP-RESOURCES-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/SONUS-DSP-RESOURCES-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 21:01:47 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, SingleValueConstraint, ConstraintsIntersection, ConstraintsUnion, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "SingleValueConstraint", "ConstraintsIntersection", "ConstraintsUnion", "ValueSizeConstraint")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
ObjectIdentity, Unsigned32, NotificationType, MibIdentifier, Bits, Counter32, iso, TimeTicks, Counter64, MibScalar, MibTable, MibTableRow, MibTableColumn, IpAddress, Integer32, Gauge32, ModuleIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "ObjectIdentity", "Unsigned32", "NotificationType", "MibIdentifier", "Bits", "Counter32", "iso", "TimeTicks", "Counter64", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "IpAddress", "Integer32", "Gauge32", "ModuleIdentity")
DisplayString, RowStatus, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "RowStatus", "TextualConvention")
sonusEventClass, sonusEventLevel, sonusEventDescription, sonusShelfIndex = mibBuilder.importSymbols("SONUS-COMMON-MIB", "sonusEventClass", "sonusEventLevel", "sonusEventDescription", "sonusShelfIndex")
sonusResourcesMIBs, = mibBuilder.importSymbols("SONUS-SMI", "sonusResourcesMIBs")
SonusAdminState, SonusName, SonusShelfIndex = mibBuilder.importSymbols("SONUS-TC", "SonusAdminState", "SonusName", "SonusShelfIndex")
sonusDspResourcesMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 2879, 2, 2, 1))
if mibBuilder.loadTexts: sonusDspResourcesMIB.setLastUpdated('200107310000Z')
if mibBuilder.loadTexts: sonusDspResourcesMIB.setOrganization('Sonus Networks, Inc.')
sonusDspResourcesMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2879, 2, 2, 1, 1))
sonusChannelStatTable = MibIdentifier((1, 3, 6, 1, 4, 1, 2879, 2, 2, 1, 1, 1))
sonusDspAdmnTable = MibTable((1, 3, 6, 1, 4, 1, 2879, 2, 2, 1, 1, 2), )
if mibBuilder.loadTexts: sonusDspAdmnTable.setStatus('current')
sonusDspAdmnEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2879, 2, 2, 1, 1, 2, 1), ).setIndexNames((0, "SONUS-DSP-RESOURCES-MIB", "sonusDspAdmnShelfIndex"), (0, "SONUS-DSP-RESOURCES-MIB", "sonusDspAdmnSlotIndex"), (0, "SONUS-DSP-RESOURCES-MIB", "sonusDspAdmnDspIndex"))
if mibBuilder.loadTexts: sonusDspAdmnEntry.setStatus('current')
sonusDspAdmnShelfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 1, 1, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusDspAdmnShelfIndex.setStatus('current')
sonusDspAdmnSlotIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 1, 1, 2, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusDspAdmnSlotIndex.setStatus('current')
sonusDspAdmnDspIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 1, 1, 2, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusDspAdmnDspIndex.setStatus('current')
sonusDspAdmnType = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 1, 1, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("vpad", 1), ("hdlc", 2), ("g729AB", 3), ("tone", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusDspAdmnType.setStatus('current')
sonusDspAdmnNumChannels = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 1, 1, 2, 1, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusDspAdmnNumChannels.setStatus('current')
sonusDspAdmnMaxTail = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 1, 1, 2, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("millisecs24", 1), ("millisec32", 2), ("millisec48", 3), ("millisec64", 4))).clone('millisec64')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusDspAdmnMaxTail.setStatus('current')
sonusDspAdmnEcAudioType = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 1, 1, 2, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("uLaw", 1), ("aLaw", 2))).clone('uLaw')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusDspAdmnEcAudioType.setStatus('current')
sonusDspAdmnEcSignallingTone = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 1, 1, 2, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("none", 1), ("c5", 2))).clone('none')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusDspAdmnEcSignallingTone.setStatus('current')
sonusDspAdmnNlpDisable = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 1, 1, 2, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 15)).clone(6)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusDspAdmnNlpDisable.setStatus('current')
sonusDspAdmnNlpEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 1, 1, 2, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 15)).clone(12)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusDspAdmnNlpEnable.setStatus('current')
sonusDspAdmnJitterEvalPeriod = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 1, 1, 2, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)).clone(800)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusDspAdmnJitterEvalPeriod.setStatus('current')
sonusDspAdmnJitterMinOccThsh = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 1, 1, 2, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(10, 65535)).clone(160)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusDspAdmnJitterMinOccThsh.setStatus('current')
sonusDspResidualEchoControl = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 1, 1, 2, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 4))).clone(namedValues=NamedValues(("cancelOnly", 1), ("suppressResidual", 2), ("comfortNoise", 4))).clone('comfortNoise')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusDspResidualEchoControl.setStatus('current')
sonusDspEchoReturnLoss = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 1, 1, 2, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("dB6", 1), ("dB3", 2), ("dB0", 3))).clone('dB6')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusDspEchoReturnLoss.setStatus('current')
sonusDspModemDisable = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 1, 1, 2, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 4))).clone(namedValues=NamedValues(("ignore2100Hz", 1), ("g164", 2), ("g165", 4))).clone('g165')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusDspModemDisable.setStatus('current')
sonusDspHighLevelComp = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 1, 1, 2, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("none", 1), ("dB6", 2))).clone('dB6')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusDspHighLevelComp.setStatus('current')
sonusDspStatTable = MibIdentifier((1, 3, 6, 1, 4, 1, 2879, 2, 2, 1, 1, 3))
sonusDspSlotStatTable = MibTable((1, 3, 6, 1, 4, 1, 2879, 2, 2, 1, 1, 4), )
if mibBuilder.loadTexts: sonusDspSlotStatTable.setStatus('current')
sonusDspSlotStatEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2879, 2, 2, 1, 1, 4, 1), ).setIndexNames((0, "SONUS-DSP-RESOURCES-MIB", "sonusDspSlotStatShelfIndex"), (0, "SONUS-DSP-RESOURCES-MIB", "sonusDspSlotStatSlotIndex"))
if mibBuilder.loadTexts: sonusDspSlotStatEntry.setStatus('current')
sonusDspSlotStatShelfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 1, 1, 4, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusDspSlotStatShelfIndex.setStatus('current')
sonusDspSlotStatSlotIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 1, 1, 4, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusDspSlotStatSlotIndex.setStatus('current')
sonusDspSlotStatG711EcTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 1, 1, 4, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusDspSlotStatG711EcTotal.setStatus('current')
sonusDspSlotStatG711Total = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 1, 1, 4, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusDspSlotStatG711Total.setStatus('current')
sonusDspSlotStatHdlcTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 1, 1, 4, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusDspSlotStatHdlcTotal.setStatus('current')
sonusDspSlotStatToneTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 1, 1, 4, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusDspSlotStatToneTotal.setStatus('current')
sonusDspSlotStatG729AbTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 1, 1, 4, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusDspSlotStatG729AbTotal.setStatus('current')
sonusDspSlotStatG711EcUtilization = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 1, 1, 4, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusDspSlotStatG711EcUtilization.setStatus('current')
sonusDspSlotStatG711EcAllocFailures = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 1, 1, 4, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusDspSlotStatG711EcAllocFailures.setStatus('current')
sonusDspSlotStatG711Utilization = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 1, 1, 4, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusDspSlotStatG711Utilization.setStatus('current')
sonusDspSlotStatG711AllocFailures = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 1, 1, 4, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusDspSlotStatG711AllocFailures.setStatus('current')
sonusDspSlotStatHdlcUtilization = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 1, 1, 4, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusDspSlotStatHdlcUtilization.setStatus('current')
sonusDspSlotStatHdlcAllocFailures = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 1, 1, 4, 1, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusDspSlotStatHdlcAllocFailures.setStatus('current')
sonusDspSlotStatToneUtilization = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 1, 1, 4, 1, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusDspSlotStatToneUtilization.setStatus('current')
sonusDspSlotStatToneAllocFailures = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 1, 1, 4, 1, 15), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusDspSlotStatToneAllocFailures.setStatus('current')
sonusDspSlotStatG729AbUtilization = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 1, 1, 4, 1, 16), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusDspSlotStatG729AbUtilization.setStatus('current')
sonusDspSlotStatG729AbAllocFailures = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 1, 1, 4, 1, 17), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusDspSlotStatG729AbAllocFailures.setStatus('current')
sonusPadAdmnTable = MibTable((1, 3, 6, 1, 4, 1, 2879, 2, 2, 1, 1, 5), )
if mibBuilder.loadTexts: sonusPadAdmnTable.setStatus('current')
sonusPadAdmnEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2879, 2, 2, 1, 1, 5, 1), ).setIndexNames((0, "SONUS-DSP-RESOURCES-MIB", "sonusPadAdmnShelfIndex"))
if mibBuilder.loadTexts: sonusPadAdmnEntry.setStatus('current')
sonusPadAdmnShelfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 1, 1, 5, 1, 1), SonusShelfIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusPadAdmnShelfIndex.setStatus('current')
sonusPadAdmnJitterEvalPeriod = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 1, 1, 5, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(10, 300000)).clone(1000)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusPadAdmnJitterEvalPeriod.setStatus('current')
sonusPadAdmnJitterMinOccThsh = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 1, 1, 5, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(2, 200)).clone(20)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusPadAdmnJitterMinOccThsh.setStatus('current')
sonusPadAdmnRtpG711ALaw = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 1, 1, 5, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 127)).clone(8)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusPadAdmnRtpG711ALaw.setStatus('obsolete')
sonusPadAdmnRtpG711ULaw = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 1, 1, 5, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 127))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusPadAdmnRtpG711ULaw.setStatus('obsolete')
sonusPadAdmnRtpG729A = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 1, 1, 5, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 127)).clone(18)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusPadAdmnRtpG729A.setStatus('obsolete')
sonusPadAdmnRtpG729AB = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 1, 1, 5, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 127)).clone(18)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusPadAdmnRtpG729AB.setStatus('obsolete')
sonusPadAdmnG729ABThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 1, 1, 5, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 100)).clone(90)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusPadAdmnG729ABThreshold.setStatus('current')
sonusPadAdmnG729ABThresholdState = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 1, 1, 5, 1, 9), SonusAdminState().clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusPadAdmnG729ABThresholdState.setStatus('current')
sonusPadAdmnToneThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 1, 1, 5, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 100)).clone(90)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusPadAdmnToneThreshold.setStatus('current')
sonusPadAdmnToneThresholdState = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 1, 1, 5, 1, 11), SonusAdminState().clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusPadAdmnToneThresholdState.setStatus('current')
sonusPadAdmnRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 1, 1, 5, 1, 12), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusPadAdmnRowStatus.setStatus('current')
sonusPadAdmnRtpDtmfRelay = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 1, 1, 5, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 127)).clone(100)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusPadAdmnRtpDtmfRelay.setStatus('current')
sonusPadAdmnRtpFaxRelay = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 1, 1, 5, 1, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 127)).clone(101)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusPadAdmnRtpFaxRelay.setStatus('current')
sonusPadAdmnSidMinTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 1, 1, 5, 1, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(50, 300000)).clone(200)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusPadAdmnSidMinTime.setStatus('current')
sonusPadAdmnSidMaxTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 1, 1, 5, 1, 16), Integer32().subtype(subtypeSpec=ValueRangeConstraint(50, 300000)).clone(2000)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusPadAdmnSidMaxTime.setStatus('current')
sonusPadAdmnSidHangoverTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 1, 1, 5, 1, 17), Integer32().subtype(subtypeSpec=ValueRangeConstraint(80, 2560)).clone(300)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusPadAdmnSidHangoverTime.setStatus('current')
sonusPadAdmnSidMinNoiseFloor = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 1, 1, 5, 1, 18), Integer32().subtype(subtypeSpec=ValueRangeConstraint(24, 62)).clone(60)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusPadAdmnSidMinNoiseFloor.setStatus('current')
sonusPadAdmnSidMaxNoiseFloor = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 1, 1, 5, 1, 19), Integer32().subtype(subtypeSpec=ValueRangeConstraint(24, 62)).clone(48)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusPadAdmnSidMaxNoiseFloor.setStatus('current')
sonusPadAdmnComfortEnergy = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 1, 1, 5, 1, 20), Integer32().subtype(subtypeSpec=ValueRangeConstraint(35, 90)).clone(56)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusPadAdmnComfortEnergy.setStatus('current')
sonusEchoCancellorProfile = MibIdentifier((1, 3, 6, 1, 4, 1, 2879, 2, 2, 1, 1, 6))
sonusEchoCancellorProfileNextIndex = MibScalar((1, 3, 6, 1, 4, 1, 2879, 2, 2, 1, 1, 6, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusEchoCancellorProfileNextIndex.setStatus('current')
sonusEchoCancellorProfileTable = MibTable((1, 3, 6, 1, 4, 1, 2879, 2, 2, 1, 1, 6, 2), )
if mibBuilder.loadTexts: sonusEchoCancellorProfileTable.setStatus('current')
sonusEchoCancellorProfileEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2879, 2, 2, 1, 1, 6, 2, 1), ).setIndexNames((0, "SONUS-DSP-RESOURCES-MIB", "sonusEchoCancellorProfileIndex"))
if mibBuilder.loadTexts: sonusEchoCancellorProfileEntry.setStatus('current')
sonusEchoCancellorProfileIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 1, 1, 6, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusEchoCancellorProfileIndex.setStatus('current')
sonusEchoCancellorProfileName = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 1, 1, 6, 2, 1, 2), SonusName()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusEchoCancellorProfileName.setStatus('current')
sonusEchoCancellorProfileState = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 1, 1, 6, 2, 1, 3), SonusAdminState().clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusEchoCancellorProfileState.setStatus('current')
sonusEchoCancellorProfileMaxTail = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 1, 1, 6, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("millisec24", 1), ("millisec32", 2), ("millisec48", 3), ("millisec64", 4))).clone('millisec64')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusEchoCancellorProfileMaxTail.setStatus('current')
sonusEchoCancellorProfileAudioType = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 1, 1, 6, 2, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("uLaw", 1), ("aLaw", 2))).clone('uLaw')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusEchoCancellorProfileAudioType.setStatus('current')
sonusEchoCancellorProfileSignallingTone = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 1, 1, 6, 2, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("none", 1), ("c5", 2))).clone('none')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusEchoCancellorProfileSignallingTone.setStatus('current')
sonusEchoCancellorProfileNlpDisable = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 1, 1, 6, 2, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 16)).clone(6)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusEchoCancellorProfileNlpDisable.setStatus('current')
sonusEchoCancellorProfileNlpEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 1, 1, 6, 2, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 80)).clone(75)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusEchoCancellorProfileNlpEnable.setStatus('current')
sonusEchoCancellorProfileReturnLoss = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 1, 1, 6, 2, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("dB6", 1), ("dB3", 2), ("dB0", 3))).clone('dB6')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusEchoCancellorProfileReturnLoss.setStatus('current')
sonusEchoCancellorProfileResidualEcho = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 1, 1, 6, 2, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 4))).clone(namedValues=NamedValues(("cancelOnly", 1), ("suppressResidual", 2), ("comfortNoise", 4))).clone('comfortNoise')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusEchoCancellorProfileResidualEcho.setStatus('current')
sonusEchoCancellorProfileHiLevelComp = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 1, 1, 6, 2, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("none", 1), ("dB6", 2))).clone('dB6')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusEchoCancellorProfileHiLevelComp.setStatus('current')
sonusEchoCancellorProfileModemDisable = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 1, 1, 6, 2, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 4))).clone(namedValues=NamedValues(("ignore2100Hz", 1), ("g164", 2), ("g165", 4))).clone('g165')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusEchoCancellorProfileModemDisable.setStatus('current')
sonusEchoCancellorProfileRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 1, 1, 6, 2, 1, 13), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusEchoCancellorProfileRowStatus.setStatus('current')
sonusEchoCancellorProfileNarrowbandDetection = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 2, 1, 1, 6, 2, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("off", 1), ("on", 2))).clone('off')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusEchoCancellorProfileNarrowbandDetection.setStatus('current')
sonusPadMIBNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 2879, 2, 2, 1, 2))
sonusPadMIBNotificationsPrefix = MibIdentifier((1, 3, 6, 1, 4, 1, 2879, 2, 2, 1, 2, 0))
sonusPadMIBNotificationsObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2879, 2, 2, 1, 2, 1))
sonusPadThresholdType = MibScalar((1, 3, 6, 1, 4, 1, 2879, 2, 2, 1, 2, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("g729AB", 1), ("tone", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusPadThresholdType.setStatus('current')
sonusPadThresholdState = MibScalar((1, 3, 6, 1, 4, 1, 2879, 2, 2, 1, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("off", 1), ("on", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusPadThresholdState.setStatus('current')
sonusPadThresholdNotification = NotificationType((1, 3, 6, 1, 4, 1, 2879, 2, 2, 1, 2, 0, 1)).setObjects(("SONUS-COMMON-MIB", "sonusShelfIndex"), ("SONUS-DSP-RESOURCES-MIB", "sonusPadThresholdType"), ("SONUS-DSP-RESOURCES-MIB", "sonusPadThresholdState"), ("SONUS-COMMON-MIB", "sonusEventDescription"), ("SONUS-COMMON-MIB", "sonusEventClass"), ("SONUS-COMMON-MIB", "sonusEventLevel"))
if mibBuilder.loadTexts: sonusPadThresholdNotification.setStatus('current')
mibBuilder.exportSymbols("SONUS-DSP-RESOURCES-MIB", sonusDspSlotStatG711Total=sonusDspSlotStatG711Total, sonusDspAdmnDspIndex=sonusDspAdmnDspIndex, sonusDspResourcesMIB=sonusDspResourcesMIB, sonusEchoCancellorProfileNextIndex=sonusEchoCancellorProfileNextIndex, sonusPadMIBNotifications=sonusPadMIBNotifications, sonusDspSlotStatG711EcAllocFailures=sonusDspSlotStatG711EcAllocFailures, sonusDspSlotStatShelfIndex=sonusDspSlotStatShelfIndex, sonusDspSlotStatG711AllocFailures=sonusDspSlotStatG711AllocFailures, sonusDspAdmnSlotIndex=sonusDspAdmnSlotIndex, sonusChannelStatTable=sonusChannelStatTable, sonusPadAdmnJitterEvalPeriod=sonusPadAdmnJitterEvalPeriod, sonusPadAdmnRtpFaxRelay=sonusPadAdmnRtpFaxRelay, sonusDspSlotStatG729AbTotal=sonusDspSlotStatG729AbTotal, sonusPadThresholdNotification=sonusPadThresholdNotification, sonusEchoCancellorProfileMaxTail=sonusEchoCancellorProfileMaxTail, sonusEchoCancellorProfileModemDisable=sonusEchoCancellorProfileModemDisable, sonusEchoCancellorProfileName=sonusEchoCancellorProfileName, sonusPadAdmnRtpDtmfRelay=sonusPadAdmnRtpDtmfRelay, sonusPadAdmnJitterMinOccThsh=sonusPadAdmnJitterMinOccThsh, sonusPadAdmnSidMaxNoiseFloor=sonusPadAdmnSidMaxNoiseFloor, sonusDspAdmnEcSignallingTone=sonusDspAdmnEcSignallingTone, sonusPadAdmnToneThresholdState=sonusPadAdmnToneThresholdState, sonusDspSlotStatG729AbAllocFailures=sonusDspSlotStatG729AbAllocFailures, sonusDspSlotStatHdlcUtilization=sonusDspSlotStatHdlcUtilization, sonusEchoCancellorProfile=sonusEchoCancellorProfile, sonusDspAdmnEntry=sonusDspAdmnEntry, sonusPadAdmnComfortEnergy=sonusPadAdmnComfortEnergy, sonusDspStatTable=sonusDspStatTable, sonusPadAdmnTable=sonusPadAdmnTable, sonusPadMIBNotificationsPrefix=sonusPadMIBNotificationsPrefix, sonusPadAdmnRtpG729AB=sonusPadAdmnRtpG729AB, sonusPadAdmnRtpG729A=sonusPadAdmnRtpG729A, sonusPadAdmnToneThreshold=sonusPadAdmnToneThreshold, sonusDspSlotStatG711Utilization=sonusDspSlotStatG711Utilization, sonusDspModemDisable=sonusDspModemDisable, sonusEchoCancellorProfileState=sonusEchoCancellorProfileState, sonusEchoCancellorProfileEntry=sonusEchoCancellorProfileEntry, sonusEchoCancellorProfileAudioType=sonusEchoCancellorProfileAudioType, sonusDspSlotStatG729AbUtilization=sonusDspSlotStatG729AbUtilization, sonusDspEchoReturnLoss=sonusDspEchoReturnLoss, sonusEchoCancellorProfileRowStatus=sonusEchoCancellorProfileRowStatus, sonusPadThresholdState=sonusPadThresholdState, sonusPadAdmnRtpG711ULaw=sonusPadAdmnRtpG711ULaw, sonusEchoCancellorProfileTable=sonusEchoCancellorProfileTable, PYSNMP_MODULE_ID=sonusDspResourcesMIB, sonusDspHighLevelComp=sonusDspHighLevelComp, sonusPadThresholdType=sonusPadThresholdType, sonusDspAdmnType=sonusDspAdmnType, sonusPadAdmnSidMinTime=sonusPadAdmnSidMinTime, sonusPadAdmnEntry=sonusPadAdmnEntry, sonusEchoCancellorProfileNlpDisable=sonusEchoCancellorProfileNlpDisable, sonusDspSlotStatTable=sonusDspSlotStatTable, sonusDspAdmnNlpEnable=sonusDspAdmnNlpEnable, sonusDspAdmnShelfIndex=sonusDspAdmnShelfIndex, sonusDspResidualEchoControl=sonusDspResidualEchoControl, sonusDspSlotStatHdlcTotal=sonusDspSlotStatHdlcTotal, sonusDspAdmnNlpDisable=sonusDspAdmnNlpDisable, sonusDspResourcesMIBObjects=sonusDspResourcesMIBObjects, sonusDspAdmnMaxTail=sonusDspAdmnMaxTail, sonusEchoCancellorProfileResidualEcho=sonusEchoCancellorProfileResidualEcho, sonusDspAdmnNumChannels=sonusDspAdmnNumChannels, sonusDspAdmnJitterEvalPeriod=sonusDspAdmnJitterEvalPeriod, sonusEchoCancellorProfileSignallingTone=sonusEchoCancellorProfileSignallingTone, sonusDspSlotStatToneTotal=sonusDspSlotStatToneTotal, sonusPadMIBNotificationsObjects=sonusPadMIBNotificationsObjects, sonusPadAdmnG729ABThresholdState=sonusPadAdmnG729ABThresholdState, sonusDspSlotStatSlotIndex=sonusDspSlotStatSlotIndex, sonusEchoCancellorProfileHiLevelComp=sonusEchoCancellorProfileHiLevelComp, sonusPadAdmnShelfIndex=sonusPadAdmnShelfIndex, sonusDspSlotStatG711EcTotal=sonusDspSlotStatG711EcTotal, sonusDspAdmnJitterMinOccThsh=sonusDspAdmnJitterMinOccThsh, sonusEchoCancellorProfileNarrowbandDetection=sonusEchoCancellorProfileNarrowbandDetection, sonusPadAdmnSidHangoverTime=sonusPadAdmnSidHangoverTime, sonusDspSlotStatToneUtilization=sonusDspSlotStatToneUtilization, sonusDspAdmnEcAudioType=sonusDspAdmnEcAudioType, sonusPadAdmnSidMinNoiseFloor=sonusPadAdmnSidMinNoiseFloor, sonusDspAdmnTable=sonusDspAdmnTable, sonusEchoCancellorProfileNlpEnable=sonusEchoCancellorProfileNlpEnable, sonusDspSlotStatEntry=sonusDspSlotStatEntry, sonusDspSlotStatHdlcAllocFailures=sonusDspSlotStatHdlcAllocFailures, sonusPadAdmnRtpG711ALaw=sonusPadAdmnRtpG711ALaw, sonusDspSlotStatG711EcUtilization=sonusDspSlotStatG711EcUtilization, sonusEchoCancellorProfileReturnLoss=sonusEchoCancellorProfileReturnLoss, sonusPadAdmnG729ABThreshold=sonusPadAdmnG729ABThreshold, sonusEchoCancellorProfileIndex=sonusEchoCancellorProfileIndex, sonusPadAdmnSidMaxTime=sonusPadAdmnSidMaxTime, sonusDspSlotStatToneAllocFailures=sonusDspSlotStatToneAllocFailures, sonusPadAdmnRowStatus=sonusPadAdmnRowStatus)
