#
# PySNMP MIB module BIANCA-BRICK-TDRC-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/BIANCA-BRICK-TDRC-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:21:45 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, SingleValueConstraint, ConstraintsUnion, ValueRangeConstraint, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "SingleValueConstraint", "ConstraintsUnion", "ValueRangeConstraint", "ValueSizeConstraint")
DisplayString, = mibBuilder.importSymbols("RFC1158-MIB", "DisplayString")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
Counter64, TimeTicks, enterprises, MibIdentifier, IpAddress, MibScalar, MibTable, MibTableRow, MibTableColumn, Bits, ModuleIdentity, Integer32, NotificationType, Gauge32, Unsigned32, Counter32, ObjectIdentity, iso = mibBuilder.importSymbols("SNMPv2-SMI", "Counter64", "TimeTicks", "enterprises", "MibIdentifier", "IpAddress", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Bits", "ModuleIdentity", "Integer32", "NotificationType", "Gauge32", "Unsigned32", "Counter32", "ObjectIdentity", "iso")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
bintec = MibIdentifier((1, 3, 6, 1, 4, 1, 272))
bibo = MibIdentifier((1, 3, 6, 1, 4, 1, 272, 4))
biboip = MibIdentifier((1, 3, 6, 1, 4, 1, 272, 4, 5))
ipTdrcTable = MibTable((1, 3, 6, 1, 4, 1, 272, 4, 5, 43), )
if mibBuilder.loadTexts: ipTdrcTable.setStatus('mandatory')
ipTdrcEntry = MibTableRow((1, 3, 6, 1, 4, 1, 272, 4, 5, 43, 1), ).setIndexNames((0, "BIANCA-BRICK-TDRC-MIB", "ipTdrcIfIndex"))
if mibBuilder.loadTexts: ipTdrcEntry.setStatus('mandatory')
ipTdrcIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 5, 43, 1, 1), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipTdrcIfIndex.setStatus('mandatory')
ipTdrcMode = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 5, 43, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("disabled", 1), ("ack-prioritisation", 2), ("static", 3), ("dynamic", 4), ("delete", 5))).clone('static')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipTdrcMode.setStatus('mandatory')
ipTdrcMaxRate = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 5, 43, 1, 3), Integer32().clone(1024000)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipTdrcMaxRate.setStatus('mandatory')
ipTdrcWindowScaling = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 5, 43, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 16)).clone(2)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipTdrcWindowScaling.setStatus('mandatory')
ipTdrcMss = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 5, 43, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4056)).clone(1452)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipTdrcMss.setStatus('mandatory')
ipTdrcServices = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 5, 43, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("listed-only", 1), ("all", 2))).clone('all')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipTdrcServices.setStatus('mandatory')
ipTdrcServiceTable = MibTable((1, 3, 6, 1, 4, 1, 272, 4, 5, 44), )
if mibBuilder.loadTexts: ipTdrcServiceTable.setStatus('mandatory')
ipTdrcServiceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 272, 4, 5, 44, 1), ).setIndexNames((0, "BIANCA-BRICK-TDRC-MIB", "ipTdrcServiceIfIndex"))
if mibBuilder.loadTexts: ipTdrcServiceEntry.setStatus('mandatory')
ipTdrcServiceIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 5, 44, 1, 1), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipTdrcServiceIfIndex.setStatus('mandatory')
ipTdrcServicePort = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 5, 44, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipTdrcServicePort.setStatus('mandatory')
ipTdrcServiceStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 5, 44, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 5))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2), ("delete", 5))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipTdrcServiceStatus.setStatus('mandatory')
ipTdrcServiceAlias = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 5, 44, 1, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipTdrcServiceAlias.setStatus('mandatory')
mibBuilder.exportSymbols("BIANCA-BRICK-TDRC-MIB", ipTdrcMode=ipTdrcMode, ipTdrcTable=ipTdrcTable, ipTdrcServices=ipTdrcServices, ipTdrcServiceIfIndex=ipTdrcServiceIfIndex, bibo=bibo, ipTdrcIfIndex=ipTdrcIfIndex, ipTdrcServicePort=ipTdrcServicePort, ipTdrcServiceAlias=ipTdrcServiceAlias, biboip=biboip, ipTdrcServiceTable=ipTdrcServiceTable, ipTdrcServiceStatus=ipTdrcServiceStatus, bintec=bintec, ipTdrcWindowScaling=ipTdrcWindowScaling, ipTdrcMss=ipTdrcMss, ipTdrcEntry=ipTdrcEntry, ipTdrcMaxRate=ipTdrcMaxRate, ipTdrcServiceEntry=ipTdrcServiceEntry)
