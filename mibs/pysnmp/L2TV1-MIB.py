#
# PySNMP MIB module L2TV1-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/L2TV1-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:54:23 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, SingleValueConstraint, ConstraintsIntersection, ValueRangeConstraint, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "SingleValueConstraint", "ConstraintsIntersection", "ValueRangeConstraint", "ValueSizeConstraint")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
iso, Unsigned32, MibIdentifier, Gauge32, Counter64, enterprises, NotificationType, NotificationType, Bits, ModuleIdentity, Counter32, MibScalar, MibTable, MibTableRow, MibTableColumn, Integer32, IpAddress, TimeTicks, ObjectIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "iso", "Unsigned32", "MibIdentifier", "Gauge32", "Counter64", "enterprises", "NotificationType", "NotificationType", "Bits", "ModuleIdentity", "Counter32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Integer32", "IpAddress", "TimeTicks", "ObjectIdentity")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
ibmIROCroutingl2t = MibIdentifier((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 7))
l2tScalar = MibIdentifier((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 7, 1))
l2tStats = MibIdentifier((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 7, 2))
l2tUdp = MibIdentifier((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 7, 3))
l2tAuthentication = MibIdentifier((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 7, 4))
l2tHistory = MibIdentifier((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 7, 5))
l2tHosts = MibIdentifier((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 7, 6))
l2tTests = MibIdentifier((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 7, 7))
l2tTrapCntl = MibIdentifier((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 7, 8))
l2tScalarConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 7, 1, 1))
l2tAdminState = MibScalar((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 7, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2tAdminState.setStatus('mandatory')
l2tAuthenticateIncomingTunnelSetupRequests = MibScalar((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 7, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("true", 1), ("false", 2))).clone('false')).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2tAuthenticateIncomingTunnelSetupRequests.setStatus('mandatory')
l2tTunnelDataFlowControl = MibScalar((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 7, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("true", 1), ("false", 2))).clone('false')).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2tTunnelDataFlowControl.setStatus('mandatory')
l2tControlRecvPacketWindow = MibScalar((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 7, 1, 1, 4), Integer32().clone(4)).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2tControlRecvPacketWindow.setStatus('mandatory')
l2tDataRecvPacketWindow = MibScalar((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 7, 1, 1, 5), Integer32().clone(6)).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2tDataRecvPacketWindow.setStatus('mandatory')
l2tHelloTimer = MibScalar((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 7, 1, 1, 6), Integer32().clone(60)).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2tHelloTimer.setStatus('mandatory')
l2tControlRetransmissions = MibScalar((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 7, 1, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2tControlRetransmissions.setStatus('mandatory')
l2tSecurityExtensions = MibScalar((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 7, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("true", 1), ("false", 2))).clone('false')).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2tSecurityExtensions.setStatus('mandatory')
l2tHistoryWindowSize = MibScalar((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 7, 1, 1, 9), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: l2tHistoryWindowSize.setStatus('mandatory')
l2tAuthFailWindowSize = MibScalar((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 7, 1, 1, 10), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: l2tAuthFailWindowSize.setStatus('mandatory')
l2tScalarStat = MibIdentifier((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 7, 1, 2))
l2tMibVersion = MibScalar((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 7, 1, 2, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2tMibVersion.setStatus('mandatory')
l2tProtocolVersion = MibScalar((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 7, 1, 2, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(2, 2)).setFixedLength(2)).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2tProtocolVersion.setStatus('mandatory')
l2tNumActiveTunnels = MibScalar((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 7, 1, 2, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2tNumActiveTunnels.setStatus('mandatory')
l2tStatsNumActiveSessions = MibScalar((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 7, 1, 2, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2tStatsNumActiveSessions.setStatus('mandatory')
l2tTunnelStatsTable = MibTable((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 7, 2, 1), )
if mibBuilder.loadTexts: l2tTunnelStatsTable.setStatus('mandatory')
l2tTunnelStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 7, 2, 1, 1), ).setIndexNames((0, "L2TV1-MIB", "l2tTunnelLocalTunnelControlId"))
if mibBuilder.loadTexts: l2tTunnelStatsEntry.setStatus('mandatory')
l2tTunnelLocalTunnelControlId = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 7, 2, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2tTunnelLocalTunnelControlId.setStatus('mandatory')
l2tTunnelPeerTunnelControlId = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 7, 2, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2tTunnelPeerTunnelControlId.setStatus('mandatory')
l2tTunnelControlState = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 7, 2, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("l2ttunnelidle", 1), ("l2ttunnelwaitctrlreply", 2), ("l2ttunnelwaitctrlconn", 3), ("l2ttunnelestablished", 4), ("l2ttunnelhold", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2tTunnelControlState.setStatus('mandatory')
l2tTunnelLocalInitConnection = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 7, 2, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("true", 1), ("false", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2tTunnelLocalInitConnection.setStatus('mandatory')
l2tTunnelLocalRecvPktWindow = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 7, 2, 1, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2tTunnelLocalRecvPktWindow.setStatus('mandatory')
l2tTunnelRemoteRecvPktWindow = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 7, 2, 1, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2tTunnelRemoteRecvPktWindow.setStatus('mandatory')
l2tTunnelCtlTunnelFlwCtlTimeouts = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 7, 2, 1, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2tTunnelCtlTunnelFlwCtlTimeouts.setStatus('mandatory')
l2tTunnelRemoteHostName = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 7, 2, 1, 1, 8), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2tTunnelRemoteHostName.setStatus('mandatory')
l2tTunnelNextSendSeq = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 7, 2, 1, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2tTunnelNextSendSeq.setStatus('mandatory')
l2tTunnelNextRecvSeq = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 7, 2, 1, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2tTunnelNextRecvSeq.setStatus('mandatory')
l2tTunnelRemoteVendorName = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 7, 2, 1, 1, 11), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2tTunnelRemoteVendorName.setStatus('mandatory')
l2tTunnelRemoteFirmwareRevision = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 7, 2, 1, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2tTunnelRemoteFirmwareRevision.setStatus('mandatory')
l2tTunnelRemoteProtocolVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 7, 2, 1, 1, 13), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2tTunnelRemoteProtocolVersion.setStatus('mandatory')
l2tTunnelActiveSessions = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 7, 2, 1, 1, 14), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2tTunnelActiveSessions.setStatus('mandatory')
l2tTunnelPrevSessions = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 7, 2, 1, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2tTunnelPrevSessions.setStatus('mandatory')
l2tTunnelUpTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 7, 2, 1, 1, 16), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2tTunnelUpTime.setStatus('mandatory')
l2tTunnelType = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 7, 2, 1, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("l2tpTunnel", 1), ("l2fTunnel", 2), ("pptpTunnel", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2tTunnelType.setStatus('mandatory')
l2tTunnelInOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 7, 2, 1, 1, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2tTunnelInOctets.setStatus('mandatory')
l2tTunnelInPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 7, 2, 1, 1, 19), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2tTunnelInPkts.setStatus('mandatory')
l2tTunnelInDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 7, 2, 1, 1, 20), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2tTunnelInDiscards.setStatus('mandatory')
l2tTunnelOutOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 7, 2, 1, 1, 21), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2tTunnelOutOctets.setStatus('mandatory')
l2tTunnelOutPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 7, 2, 1, 1, 22), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2tTunnelOutPkts.setStatus('mandatory')
l2tTunnelOutDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 7, 2, 1, 1, 23), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2tTunnelOutDiscards.setStatus('mandatory')
l2tTunnelStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 7, 2, 1, 1, 24), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("active", 1), ("destroy", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: l2tTunnelStatus.setStatus('mandatory')
l2tSessionStatsTable = MibTable((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 7, 2, 2), )
if mibBuilder.loadTexts: l2tSessionStatsTable.setStatus('mandatory')
l2tSessionStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 7, 2, 2, 1), ).setIndexNames((0, "L2TV1-MIB", "l2tSessionLocalControlTunnelId"), (0, "L2TV1-MIB", "l2tSessionLocalCallId"))
if mibBuilder.loadTexts: l2tSessionStatsEntry.setStatus('mandatory')
l2tSessionLocalControlTunnelId = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 7, 2, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2tSessionLocalControlTunnelId.setStatus('mandatory')
l2tSessionLocalCallId = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 7, 2, 2, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2tSessionLocalCallId.setStatus('mandatory')
l2tSessionRemoteCallId = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 7, 2, 2, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2tSessionRemoteCallId.setStatus('mandatory')
l2tSessionPeerName = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 7, 2, 2, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2tSessionPeerName.setStatus('mandatory')
l2tSessionLineState = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 7, 2, 2, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("callwaittunnel", 1), ("callidle", 2), ("callwaitreply", 3), ("callwaitconnect", 4), ("callwaitcsanswer", 5), ("callestablished", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2tSessionLineState.setStatus('mandatory')
l2tSessionCallDeviceNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 7, 2, 2, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2tSessionCallDeviceNumber.setStatus('mandatory')
l2tSessionCallSerialNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 7, 2, 2, 1, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2tSessionCallSerialNumber.setStatus('mandatory')
l2tSessionConnectBps = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 7, 2, 2, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2tSessionConnectBps.setStatus('mandatory')
l2tSessionCallBearerType = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 7, 2, 2, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("digital", 1), ("analog", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2tSessionCallBearerType.setStatus('mandatory')
l2tSessionFramingType = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 7, 2, 2, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("synchronous", 1), ("asynchronous", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2tSessionFramingType.setStatus('mandatory')
l2tSessionLocalRecvPacketWindow = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 7, 2, 2, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2tSessionLocalRecvPacketWindow.setStatus('mandatory')
l2tSessionRemoteRecvPacketWindow = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 7, 2, 2, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2tSessionRemoteRecvPacketWindow.setStatus('mandatory')
l2tSessionDataRecvOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 7, 2, 2, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2tSessionDataRecvOctets.setStatus('mandatory')
l2tSessionDataRecvDecompOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 7, 2, 2, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2tSessionDataRecvDecompOctets.setStatus('mandatory')
l2tSessionDataRecvPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 7, 2, 2, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2tSessionDataRecvPackets.setStatus('mandatory')
l2tSessionDataRecvDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 7, 2, 2, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2tSessionDataRecvDiscards.setStatus('mandatory')
l2tSessionDataSendOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 7, 2, 2, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2tSessionDataSendOctets.setStatus('mandatory')
l2tSessionDataSendUncompOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 7, 2, 2, 1, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2tSessionDataSendUncompOctets.setStatus('mandatory')
l2tSessionDataSendPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 7, 2, 2, 1, 19), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2tSessionDataSendPackets.setStatus('mandatory')
l2tSessionDataSendDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 7, 2, 2, 1, 20), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2tSessionDataSendDiscards.setStatus('mandatory')
l2tSessionDataFlowControlTimeouts = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 7, 2, 2, 1, 21), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2tSessionDataFlowControlTimeouts.setStatus('mandatory')
l2tSessionNextSendSeq = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 7, 2, 2, 1, 22), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2tSessionNextSendSeq.setStatus('mandatory')
l2tSessionNextRecvSeq = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 7, 2, 2, 1, 23), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2tSessionNextRecvSeq.setStatus('mandatory')
l2tSessionRemotePPD = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 7, 2, 2, 1, 24), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2tSessionRemotePPD.setStatus('mandatory')
l2tSessionAuthMethod = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 7, 2, 2, 1, 25), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("text", 1), ("pppchap", 2), ("ppppap", 3), ("none", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2tSessionAuthMethod.setStatus('mandatory')
l2tSessionEncryptDecrypt = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 7, 2, 2, 1, 26), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("true", 1), ("false", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2tSessionEncryptDecrypt.setStatus('mandatory')
l2tSessionUpTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 7, 2, 2, 1, 27), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2tSessionUpTime.setStatus('mandatory')
l2tSessionStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 7, 2, 2, 1, 28), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("active", 1), ("destroy", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: l2tSessionStatus.setStatus('mandatory')
l2tUdpConfigTable = MibTable((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 7, 3, 1), )
if mibBuilder.loadTexts: l2tUdpConfigTable.setStatus('mandatory')
l2tUdpConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 7, 3, 1, 1), ).setIndexNames((0, "L2TV1-MIB", "l2tTunnelLocalTunnelControlId"))
if mibBuilder.loadTexts: l2tUdpConfigEntry.setStatus('mandatory')
l2tUdpPeerAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 7, 3, 1, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2tUdpPeerAddress.setStatus('mandatory')
l2tUdpPeerPort = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 7, 3, 1, 1, 2), Integer32().clone(1701)).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2tUdpPeerPort.setStatus('mandatory')
l2tUdpStatsTable = MibTable((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 7, 3, 2), )
if mibBuilder.loadTexts: l2tUdpStatsTable.setStatus('mandatory')
l2tUdpStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 7, 3, 2, 1), ).setIndexNames((0, "L2TV1-MIB", "l2tTunnelLocalTunnelControlId"))
if mibBuilder.loadTexts: l2tUdpStatsEntry.setStatus('mandatory')
l2tUdpPeerIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 7, 3, 2, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2tUdpPeerIpAddress.setStatus('mandatory')
l2tUdpLocalIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 7, 3, 2, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2tUdpLocalIpAddress.setStatus('mandatory')
l2tUdpSrcPort = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 7, 3, 2, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2tUdpSrcPort.setStatus('mandatory')
l2tUdpDstPort = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 7, 3, 2, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2tUdpDstPort.setStatus('mandatory')
l2tAuthStats = MibIdentifier((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 7, 4, 1))
l2tAuthTunnelSuccesses = MibScalar((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 7, 4, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2tAuthTunnelSuccesses.setStatus('mandatory')
l2tAuthTunnelFailures = MibScalar((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 7, 4, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2tAuthTunnelFailures.setStatus('mandatory')
l2tAuthUserSuccesses = MibScalar((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 7, 4, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2tAuthUserSuccesses.setStatus('mandatory')
l2tAuthUserFailures = MibScalar((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 7, 4, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2tAuthUserFailures.setStatus('mandatory')
l2tAuthFailures = MibIdentifier((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 7, 4, 2))
l2tAuthFailTunnelTable = MibTable((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 7, 4, 2, 1), )
if mibBuilder.loadTexts: l2tAuthFailTunnelTable.setStatus('mandatory')
l2tAuthFailTunnelEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 7, 4, 2, 1, 1), ).setIndexNames((0, "L2TV1-MIB", "l2tAuthFailTunnelIndex"))
if mibBuilder.loadTexts: l2tAuthFailTunnelEntry.setStatus('mandatory')
l2tAuthFailTunnelIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 7, 4, 2, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2tAuthFailTunnelIndex.setStatus('mandatory')
l2tAuthFailTunnelHostName = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 7, 4, 2, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2tAuthFailTunnelHostName.setStatus('mandatory')
l2tAuthFailTunnelIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 7, 4, 2, 1, 1, 3), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2tAuthFailTunnelIpAddress.setStatus('mandatory')
l2tAuthFailTunnelTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 7, 4, 2, 1, 1, 4), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2tAuthFailTunnelTime.setStatus('mandatory')
l2tAuthFailUserTable = MibTable((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 7, 4, 2, 2), )
if mibBuilder.loadTexts: l2tAuthFailUserTable.setStatus('mandatory')
l2tAuthFailUserEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 7, 4, 2, 2, 1), ).setIndexNames((0, "L2TV1-MIB", "l2tAuthFailUserIndex"))
if mibBuilder.loadTexts: l2tAuthFailUserEntry.setStatus('mandatory')
l2tAuthFailUserIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 7, 4, 2, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2tAuthFailUserIndex.setStatus('mandatory')
l2tAuthFailUserId = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 7, 4, 2, 2, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2tAuthFailUserId.setStatus('mandatory')
l2tAuthFailUserTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 7, 4, 2, 2, 1, 3), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2tAuthFailUserTime.setStatus('mandatory')
l2tHistTunnelTable = MibTable((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 7, 5, 1), )
if mibBuilder.loadTexts: l2tHistTunnelTable.setStatus('mandatory')
l2tHistTunnelEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 7, 5, 1, 1), ).setIndexNames((0, "L2TV1-MIB", "l2tHistTunnelIndex"))
if mibBuilder.loadTexts: l2tHistTunnelEntry.setStatus('mandatory')
l2tHistTunnelIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 7, 5, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2tHistTunnelIndex.setStatus('mandatory')
l2tHistTunnelTunnelIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 7, 5, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2tHistTunnelTunnelIndex.setStatus('mandatory')
l2tHistTunnelRemoteHostName = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 7, 5, 1, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2tHistTunnelRemoteHostName.setStatus('mandatory')
l2tHistTunnelRemoteIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 7, 5, 1, 1, 4), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2tHistTunnelRemoteIpAddress.setStatus('mandatory')
l2tHistTunnelRemotePort = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 7, 5, 1, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2tHistTunnelRemotePort.setStatus('mandatory')
l2tHistTunnelLocalIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 7, 5, 1, 1, 6), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2tHistTunnelLocalIpAddress.setStatus('mandatory')
l2tHistTunnelLocalPort = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 7, 5, 1, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2tHistTunnelLocalPort.setStatus('mandatory')
l2tHistTunnelUpTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 7, 5, 1, 1, 8), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2tHistTunnelUpTime.setStatus('mandatory')
l2tHistTunnelTotalSessions = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 7, 5, 1, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2tHistTunnelTotalSessions.setStatus('mandatory')
l2tHistTunnelType = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 7, 5, 1, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("l2tpTunnel", 1), ("l2fTunnel", 2), ("pptpTunnel", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2tHistTunnelType.setStatus('mandatory')
l2tHistTunnelInOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 7, 5, 1, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2tHistTunnelInOctets.setStatus('mandatory')
l2tHistTunnelInPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 7, 5, 1, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2tHistTunnelInPkts.setStatus('mandatory')
l2tHistTunnelInDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 7, 5, 1, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2tHistTunnelInDiscards.setStatus('mandatory')
l2tHistTunnelOutOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 7, 5, 1, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2tHistTunnelOutOctets.setStatus('mandatory')
l2tHistTunnelOutPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 7, 5, 1, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2tHistTunnelOutPkts.setStatus('mandatory')
l2tHistTunnelOutDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 7, 5, 1, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2tHistTunnelOutDiscards.setStatus('mandatory')
l2tHistSessTable = MibTable((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 7, 5, 2), )
if mibBuilder.loadTexts: l2tHistSessTable.setStatus('mandatory')
l2tHistSessEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 7, 5, 2, 1), ).setIndexNames((0, "L2TV1-MIB", "l2tHistSessIndex"))
if mibBuilder.loadTexts: l2tHistSessEntry.setStatus('mandatory')
l2tHistSessIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 7, 5, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2tHistSessIndex.setStatus('mandatory')
l2tHistSessTunnelIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 7, 5, 2, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2tHistSessTunnelIndex.setStatus('mandatory')
l2tHistSessLocalCallId = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 7, 5, 2, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2tHistSessLocalCallId.setStatus('mandatory')
l2tHistSessRemoteIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 7, 5, 2, 1, 4), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2tHistSessRemoteIpAddress.setStatus('mandatory')
l2tHistSessLocalIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 7, 5, 2, 1, 5), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2tHistSessLocalIpAddress.setStatus('mandatory')
l2tHistSessUpTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 7, 5, 2, 1, 6), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2tHistSessUpTime.setStatus('mandatory')
l2tHistSessDataRecvOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 7, 5, 2, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2tHistSessDataRecvOctets.setStatus('mandatory')
l2tHistSessDataRecvPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 7, 5, 2, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2tHistSessDataRecvPackets.setStatus('mandatory')
l2tHistSessDataRecvDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 7, 5, 2, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2tHistSessDataRecvDiscards.setStatus('mandatory')
l2tHistSessDataSendOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 7, 5, 2, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2tHistSessDataSendOctets.setStatus('mandatory')
l2tHistSessDataSendPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 7, 5, 2, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2tHistSessDataSendPackets.setStatus('mandatory')
l2tHistSessDataSendDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 7, 5, 2, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2tHistSessDataSendDiscards.setStatus('mandatory')
l2tHistSessAuthMethod = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 7, 5, 2, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("text", 1), ("pppchap", 2), ("ppppap", 3), ("none", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2tHistSessAuthMethod.setStatus('mandatory')
l2tHistSessEncryptDecrypt = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 7, 5, 2, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("yes", 1), ("no", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2tHistSessEncryptDecrypt.setStatus('mandatory')
l2tHostTable = MibTable((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 7, 6, 1), )
if mibBuilder.loadTexts: l2tHostTable.setStatus('mandatory')
l2tHostEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 7, 6, 1, 1), ).setIndexNames((0, "L2TV1-MIB", "l2tHostIndex"))
if mibBuilder.loadTexts: l2tHostEntry.setStatus('mandatory')
l2tHostIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 7, 6, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2tHostIndex.setStatus('mandatory')
l2tHostName = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 7, 6, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2tHostName.setStatus('mandatory')
l2tHostIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 7, 6, 1, 1, 3), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2tHostIpAddress.setStatus('mandatory')
l2tHostTunnelStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 7, 6, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("active", 1), ("inactive", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2tHostTunnelStatus.setStatus('mandatory')
l2tTunnelConnectTestTable = MibTable((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 7, 7, 1), )
if mibBuilder.loadTexts: l2tTunnelConnectTestTable.setStatus('mandatory')
l2tTunnelConnectTestEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 7, 7, 1, 1), ).setIndexNames((0, "L2TV1-MIB", "l2tTunnelConnectTestIndex"))
if mibBuilder.loadTexts: l2tTunnelConnectTestEntry.setStatus('mandatory')
l2tTunnelConnectTestIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 7, 7, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2tTunnelConnectTestIndex.setStatus('mandatory')
l2tTunnelConnectTestHostName = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 7, 7, 1, 1, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: l2tTunnelConnectTestHostName.setStatus('mandatory')
l2tTunnelConnectTestResult = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 7, 7, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("inProgress", 1), ("successful", 2), ("tunnelAlreadyUp", 3), ("hostNotResponding", 4), ("localAuthFailure", 5), ("remoteAuthFailure", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2tTunnelConnectTestResult.setStatus('mandatory')
l2tTunnelConnectTestType = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 7, 7, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 99))).clone(namedValues=NamedValues(("l2tpTunnel", 1), ("l2fTunnel", 2), ("pptpTunnel", 3), ("none", 99)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2tTunnelConnectTestType.setStatus('mandatory')
l2tTunnelConnectTestStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 7, 7, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 4))).clone(namedValues=NamedValues(("active", 1), ("createAndGo", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: l2tTunnelConnectTestStatus.setStatus('mandatory')
l2tTunnelRspTimeTestTable = MibTable((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 7, 7, 2), )
if mibBuilder.loadTexts: l2tTunnelRspTimeTestTable.setStatus('mandatory')
l2tTunnelRspTimeTestEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 7, 7, 2, 1), ).setIndexNames((0, "L2TV1-MIB", "l2tTunnelRspTimeTestIndex"))
if mibBuilder.loadTexts: l2tTunnelRspTimeTestEntry.setStatus('mandatory')
l2tTunnelRspTimeTestIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 7, 7, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2tTunnelRspTimeTestIndex.setStatus('mandatory')
l2tTunnelRspTimeTestHostName = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 7, 7, 2, 1, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: l2tTunnelRspTimeTestHostName.setStatus('mandatory')
l2tTunnelRspTimeTestResult = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 7, 7, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("inProgress", 1), ("successful", 2), ("hostNotResponding", 3), ("tunnelDown", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2tTunnelRspTimeTestResult.setStatus('mandatory')
l2tTunnelRspTimeTestRtripTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 7, 7, 2, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2tTunnelRspTimeTestRtripTime.setStatus('mandatory')
l2tTunnelRspTimeTestStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 7, 7, 2, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 4))).clone(namedValues=NamedValues(("active", 1), ("createAndGo", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: l2tTunnelRspTimeTestStatus.setStatus('mandatory')
l2tTrapCntlTunnelStart = MibScalar((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 7, 8, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: l2tTrapCntlTunnelStart.setStatus('mandatory')
l2tTrapCntlTunnelStop = MibScalar((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 7, 8, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: l2tTrapCntlTunnelStop.setStatus('mandatory')
l2tTrapCntlAuthFailTunnel = MibScalar((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 7, 8, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: l2tTrapCntlAuthFailTunnel.setStatus('mandatory')
l2tTrapCntlAuthFailUser = MibScalar((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 7, 8, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: l2tTrapCntlAuthFailUser.setStatus('mandatory')
l2tTunnelStart = NotificationType((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 7) + (0,1)).setObjects(("L2TV1-MIB", "l2tTunnelLocalTunnelControlId"), ("L2TV1-MIB", "l2tTunnelType"))
l2tTunnelStop = NotificationType((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 7) + (0,2)).setObjects(("L2TV1-MIB", "l2tTunnelLocalTunnelControlId"), ("L2TV1-MIB", "l2tTunnelType"), ("L2TV1-MIB", "l2tTunnelUpTime"))
l2tAuthFailTunnel = NotificationType((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 7) + (0,3)).setObjects(("L2TV1-MIB", "l2tAuthFailTunnelHostName"), ("L2TV1-MIB", "l2tAuthFailTunnelIpAddress"))
l2tAuthFailUser = NotificationType((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 7) + (0,4)).setObjects(("L2TV1-MIB", "l2tAuthFailUserId"))
mibBuilder.exportSymbols("L2TV1-MIB", l2tSessionRemoteCallId=l2tSessionRemoteCallId, l2tAuthentication=l2tAuthentication, l2tHosts=l2tHosts, l2tStats=l2tStats, l2tTunnelRemoteProtocolVersion=l2tTunnelRemoteProtocolVersion, l2tTunnelStatus=l2tTunnelStatus, l2tSessionDataSendUncompOctets=l2tSessionDataSendUncompOctets, l2tAuthStats=l2tAuthStats, l2tHostIndex=l2tHostIndex, l2tHostName=l2tHostName, l2tSessionAuthMethod=l2tSessionAuthMethod, l2tAuthFailTunnelIpAddress=l2tAuthFailTunnelIpAddress, l2tHistTunnelIndex=l2tHistTunnelIndex, l2tHistSessDataRecvDiscards=l2tHistSessDataRecvDiscards, l2tHostEntry=l2tHostEntry, l2tTunnelRspTimeTestHostName=l2tTunnelRspTimeTestHostName, l2tTunnelRspTimeTestRtripTime=l2tTunnelRspTimeTestRtripTime, l2tHistTunnelOutDiscards=l2tHistTunnelOutDiscards, l2tHistoryWindowSize=l2tHistoryWindowSize, l2tTunnelRspTimeTestEntry=l2tTunnelRspTimeTestEntry, l2tDataRecvPacketWindow=l2tDataRecvPacketWindow, l2tSessionPeerName=l2tSessionPeerName, l2tHistSessEncryptDecrypt=l2tHistSessEncryptDecrypt, l2tHistSessIndex=l2tHistSessIndex, l2tHistSessEntry=l2tHistSessEntry, l2tHistSessTable=l2tHistSessTable, l2tHistTunnelOutPkts=l2tHistTunnelOutPkts, l2tTunnelConnectTestHostName=l2tTunnelConnectTestHostName, l2tSessionDataRecvPackets=l2tSessionDataRecvPackets, l2tHistTunnelTable=l2tHistTunnelTable, l2tSessionDataSendOctets=l2tSessionDataSendOctets, l2tTunnelNextSendSeq=l2tTunnelNextSendSeq, l2tSessionUpTime=l2tSessionUpTime, l2tTunnelControlState=l2tTunnelControlState, l2tSessionRemoteRecvPacketWindow=l2tSessionRemoteRecvPacketWindow, l2tHistSessDataSendPackets=l2tHistSessDataSendPackets, l2tHistTunnelRemotePort=l2tHistTunnelRemotePort, l2tTunnelRspTimeTestResult=l2tTunnelRspTimeTestResult, l2tHostTunnelStatus=l2tHostTunnelStatus, l2tAuthUserFailures=l2tAuthUserFailures, l2tTunnelPeerTunnelControlId=l2tTunnelPeerTunnelControlId, l2tSessionNextSendSeq=l2tSessionNextSendSeq, l2tTunnelRspTimeTestStatus=l2tTunnelRspTimeTestStatus, l2tUdpSrcPort=l2tUdpSrcPort, l2tUdpDstPort=l2tUdpDstPort, l2tSessionStatsTable=l2tSessionStatsTable, l2tSessionConnectBps=l2tSessionConnectBps, l2tHistTunnelRemoteHostName=l2tHistTunnelRemoteHostName, l2tTunnelStart=l2tTunnelStart, l2tControlRecvPacketWindow=l2tControlRecvPacketWindow, l2tHistTunnelTotalSessions=l2tHistTunnelTotalSessions, l2tAdminState=l2tAdminState, l2tScalarConfig=l2tScalarConfig, l2tAuthenticateIncomingTunnelSetupRequests=l2tAuthenticateIncomingTunnelSetupRequests, l2tTunnelInOctets=l2tTunnelInOctets, l2tHistSessDataRecvPackets=l2tHistSessDataRecvPackets, l2tTunnelCtlTunnelFlwCtlTimeouts=l2tTunnelCtlTunnelFlwCtlTimeouts, l2tStatsNumActiveSessions=l2tStatsNumActiveSessions, l2tSessionLocalCallId=l2tSessionLocalCallId, l2tAuthFailUserId=l2tAuthFailUserId, l2tAuthFailTunnel=l2tAuthFailTunnel, l2tHostIpAddress=l2tHostIpAddress, l2tUdpConfigEntry=l2tUdpConfigEntry, l2tAuthFailUser=l2tAuthFailUser, l2tMibVersion=l2tMibVersion, l2tControlRetransmissions=l2tControlRetransmissions, l2tAuthFailUserEntry=l2tAuthFailUserEntry, l2tSecurityExtensions=l2tSecurityExtensions, l2tSessionDataSendDiscards=l2tSessionDataSendDiscards, l2tUdpStatsEntry=l2tUdpStatsEntry, l2tSessionDataRecvDecompOctets=l2tSessionDataRecvDecompOctets, l2tUdpPeerPort=l2tUdpPeerPort, l2tHostTable=l2tHostTable, l2tSessionDataRecvOctets=l2tSessionDataRecvOctets, l2tTunnelRemoteHostName=l2tTunnelRemoteHostName, l2tSessionCallSerialNumber=l2tSessionCallSerialNumber, l2tSessionStatus=l2tSessionStatus, l2tSessionDataRecvDiscards=l2tSessionDataRecvDiscards, l2tSessionFramingType=l2tSessionFramingType, l2tHistTunnelTunnelIndex=l2tHistTunnelTunnelIndex, l2tTunnelOutOctets=l2tTunnelOutOctets, l2tSessionDataSendPackets=l2tSessionDataSendPackets, l2tTunnelConnectTestEntry=l2tTunnelConnectTestEntry, l2tSessionCallBearerType=l2tSessionCallBearerType, l2tTunnelRemoteFirmwareRevision=l2tTunnelRemoteFirmwareRevision, l2tTrapCntlTunnelStart=l2tTrapCntlTunnelStart, l2tHistTunnelInOctets=l2tHistTunnelInOctets, l2tAuthFailUserTable=l2tAuthFailUserTable, l2tHistTunnelInDiscards=l2tHistTunnelInDiscards, l2tHistSessAuthMethod=l2tHistSessAuthMethod, l2tTunnelUpTime=l2tTunnelUpTime, l2tAuthUserSuccesses=l2tAuthUserSuccesses, l2tTrapCntlAuthFailTunnel=l2tTrapCntlAuthFailTunnel, l2tTunnelStatsTable=l2tTunnelStatsTable, l2tHistSessDataRecvOctets=l2tHistSessDataRecvOctets, l2tTunnelConnectTestStatus=l2tTunnelConnectTestStatus, l2tTrapCntlTunnelStop=l2tTrapCntlTunnelStop, l2tUdpPeerAddress=l2tUdpPeerAddress, l2tHistTunnelLocalPort=l2tHistTunnelLocalPort, l2tSessionLocalControlTunnelId=l2tSessionLocalControlTunnelId, l2tAuthTunnelFailures=l2tAuthTunnelFailures, l2tHistTunnelType=l2tHistTunnelType, l2tSessionLineState=l2tSessionLineState, l2tTunnelConnectTestResult=l2tTunnelConnectTestResult, l2tTunnelStatsEntry=l2tTunnelStatsEntry, l2tTunnelOutPkts=l2tTunnelOutPkts, l2tAuthFailTunnelTable=l2tAuthFailTunnelTable, l2tHistSessDataSendOctets=l2tHistSessDataSendOctets, l2tSessionDataFlowControlTimeouts=l2tSessionDataFlowControlTimeouts, l2tSessionStatsEntry=l2tSessionStatsEntry, l2tSessionLocalRecvPacketWindow=l2tSessionLocalRecvPacketWindow, l2tTunnelInPkts=l2tTunnelInPkts, l2tTrapCntl=l2tTrapCntl, l2tHistTunnelInPkts=l2tHistTunnelInPkts, l2tHistSessRemoteIpAddress=l2tHistSessRemoteIpAddress, l2tTunnelConnectTestTable=l2tTunnelConnectTestTable, l2tUdpConfigTable=l2tUdpConfigTable, l2tUdpLocalIpAddress=l2tUdpLocalIpAddress, l2tTunnelStop=l2tTunnelStop, l2tAuthFailTunnelHostName=l2tAuthFailTunnelHostName, l2tTunnelRemoteRecvPktWindow=l2tTunnelRemoteRecvPktWindow, l2tSessionCallDeviceNumber=l2tSessionCallDeviceNumber, l2tAuthFailTunnelEntry=l2tAuthFailTunnelEntry, l2tHistTunnelUpTime=l2tHistTunnelUpTime, ibmIROCroutingl2t=ibmIROCroutingl2t, l2tHistSessLocalCallId=l2tHistSessLocalCallId, l2tTunnelLocalInitConnection=l2tTunnelLocalInitConnection, l2tTunnelActiveSessions=l2tTunnelActiveSessions, l2tTunnelRspTimeTestTable=l2tTunnelRspTimeTestTable, l2tTunnelRspTimeTestIndex=l2tTunnelRspTimeTestIndex, l2tHistTunnelLocalIpAddress=l2tHistTunnelLocalIpAddress, l2tTunnelLocalTunnelControlId=l2tTunnelLocalTunnelControlId, l2tHistTunnelOutOctets=l2tHistTunnelOutOctets, l2tTests=l2tTests, l2tUdpStatsTable=l2tUdpStatsTable, l2tAuthFailWindowSize=l2tAuthFailWindowSize, l2tTunnelInDiscards=l2tTunnelInDiscards, l2tAuthFailTunnelIndex=l2tAuthFailTunnelIndex, l2tNumActiveTunnels=l2tNumActiveTunnels, l2tTrapCntlAuthFailUser=l2tTrapCntlAuthFailUser, l2tTunnelPrevSessions=l2tTunnelPrevSessions, l2tHistory=l2tHistory, l2tHistSessLocalIpAddress=l2tHistSessLocalIpAddress, l2tHistTunnelEntry=l2tHistTunnelEntry, l2tSessionEncryptDecrypt=l2tSessionEncryptDecrypt, l2tAuthFailTunnelTime=l2tAuthFailTunnelTime, l2tScalarStat=l2tScalarStat, l2tTunnelLocalRecvPktWindow=l2tTunnelLocalRecvPktWindow, l2tTunnelOutDiscards=l2tTunnelOutDiscards, l2tTunnelDataFlowControl=l2tTunnelDataFlowControl, l2tTunnelType=l2tTunnelType, l2tScalar=l2tScalar, l2tTunnelNextRecvSeq=l2tTunnelNextRecvSeq, l2tTunnelConnectTestIndex=l2tTunnelConnectTestIndex, l2tAuthFailUserTime=l2tAuthFailUserTime, l2tUdpPeerIpAddress=l2tUdpPeerIpAddress, l2tSessionNextRecvSeq=l2tSessionNextRecvSeq, l2tTunnelRemoteVendorName=l2tTunnelRemoteVendorName, l2tSessionRemotePPD=l2tSessionRemotePPD, l2tUdp=l2tUdp, l2tHistSessUpTime=l2tHistSessUpTime, l2tAuthFailures=l2tAuthFailures, l2tHelloTimer=l2tHelloTimer, l2tHistSessDataSendDiscards=l2tHistSessDataSendDiscards, l2tAuthTunnelSuccesses=l2tAuthTunnelSuccesses, l2tHistSessTunnelIndex=l2tHistSessTunnelIndex, l2tHistTunnelRemoteIpAddress=l2tHistTunnelRemoteIpAddress, l2tTunnelConnectTestType=l2tTunnelConnectTestType, l2tAuthFailUserIndex=l2tAuthFailUserIndex, l2tProtocolVersion=l2tProtocolVersion)
