#
# PySNMP MIB module TIARA-BUNDLE-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/TIARA-BUNDLE-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 21:08:55 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ValueRangeConstraint, ConstraintsUnion, ValueSizeConstraint, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ValueRangeConstraint", "ConstraintsUnion", "ValueSizeConstraint", "SingleValueConstraint")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
ObjectIdentity, Counter64, Unsigned32, iso, MibIdentifier, Bits, Counter32, IpAddress, TimeTicks, MibScalar, MibTable, MibTableRow, MibTableColumn, ModuleIdentity, NotificationType, Gauge32, Integer32 = mibBuilder.importSymbols("SNMPv2-SMI", "ObjectIdentity", "Counter64", "Unsigned32", "iso", "MibIdentifier", "Bits", "Counter32", "IpAddress", "TimeTicks", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ModuleIdentity", "NotificationType", "Gauge32", "Integer32")
TextualConvention, TruthValue, DisplayString, RowStatus = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "TruthValue", "DisplayString", "RowStatus")
tiaraMgmt, = mibBuilder.importSymbols("TIARA-NETWORKS-SMI", "tiaraMgmt")
tiaraBundleMib = ModuleIdentity((1, 3, 6, 1, 4, 1, 3174, 2, 13))
tiaraBundleMib.setRevisions(('1999-04-23 00:00',))
if mibBuilder.loadTexts: tiaraBundleMib.setLastUpdated('9907010000Z')
if mibBuilder.loadTexts: tiaraBundleMib.setOrganization('Tiara Networks Inc.')
bundleTable = MibTable((1, 3, 6, 1, 4, 1, 3174, 2, 13, 1), )
if mibBuilder.loadTexts: bundleTable.setStatus('current')
bundleTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3174, 2, 13, 1, 1), ).setIndexNames((0, "TIARA-BUNDLE-MIB", "bundleId"))
if mibBuilder.loadTexts: bundleTableEntry.setStatus('current')
bundleId = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 13, 1, 1, 1), Integer32())
if mibBuilder.loadTexts: bundleId.setStatus('current')
bundleName = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 13, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 8))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: bundleName.setStatus('current')
bundleContact = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 13, 1, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 15))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: bundleContact.setStatus('current')
bundleDescr = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 13, 1, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 25))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: bundleDescr.setStatus('current')
bundleEncapsulation = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 13, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("noEncap", 1), ("ppp", 2), ("hdlc", 3), ("frameRelay", 4))).clone('noEncap')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: bundleEncapsulation.setStatus('current')
bundleDropEs = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 13, 1, 1, 6), Integer32()).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: bundleDropEs.setStatus('current')
bundleDropSes = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 13, 1, 1, 7), Integer32()).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: bundleDropSes.setStatus('current')
bundleDropUas = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 13, 1, 1, 8), Integer32()).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: bundleDropUas.setStatus('current')
bundleIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 13, 1, 1, 9), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: bundleIpAddr.setStatus('current')
bundleSubnetMask = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 13, 1, 1, 10), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: bundleSubnetMask.setStatus('current')
bundleSrcForwardingAddrPrimary = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 13, 1, 1, 11), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: bundleSrcForwardingAddrPrimary.setStatus('current')
bundleSrcForwardingAddrSecondary = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 13, 1, 1, 12), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: bundleSrcForwardingAddrSecondary.setStatus('current')
bundleRestoreMethod = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 13, 1, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("manual", 1), ("automatic", 2))).clone('automatic')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bundleRestoreMethod.setStatus('current')
bundleLinkRestoralTime = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 13, 1, 1, 14), Integer32().clone(120)).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: bundleLinkRestoralTime.setStatus('current')
bundleStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 13, 1, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('enable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bundleStatus.setStatus('current')
bundleLinkRestore = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 13, 1, 1, 16), OctetString().subtype(subtypeSpec=ValueSizeConstraint(4, 4)).setFixedLength(4)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bundleLinkRestore.setStatus('current')
bundleNoOfLinks = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 13, 1, 1, 17), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bundleNoOfLinks.setStatus('current')
bundleTotalBw = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 13, 1, 1, 18), Integer32()).setUnits('kbps').setMaxAccess("readonly")
if mibBuilder.loadTexts: bundleTotalBw.setStatus('current')
bundleRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 13, 1, 1, 19), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: bundleRowStatus.setStatus('current')
bundleLinkTable = MibTable((1, 3, 6, 1, 4, 1, 3174, 2, 13, 2), )
if mibBuilder.loadTexts: bundleLinkTable.setStatus('current')
bundleLinkEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3174, 2, 13, 2, 1), ).setIndexNames((0, "TIARA-BUNDLE-MIB", "bundleId"), (0, "TIARA-BUNDLE-MIB", "bundleLinkT1Num"))
if mibBuilder.loadTexts: bundleLinkEntry.setStatus('current')
bundleLinkT1Num = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 13, 2, 1, 1), Integer32())
if mibBuilder.loadTexts: bundleLinkT1Num.setStatus('current')
bundleLinkTimeSlots = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 13, 2, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(4, 4)).setFixedLength(4).clone('00ffffff')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: bundleLinkTimeSlots.setStatus('current')
bundleLinkType = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 13, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("ct3", 1), ("t1", 2), ("hssi", 3), ("t3", 4)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: bundleLinkType.setStatus('current')
bundleLinkSpeed = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 13, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("kbps56", 1), ("kbps64", 2))).clone(2)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: bundleLinkSpeed.setStatus('current')
bundleLinkInvertedData = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 13, 2, 1, 5), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: bundleLinkInvertedData.setStatus('current')
bundleLinkPhysIfNum = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 13, 2, 1, 6), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: bundleLinkPhysIfNum.setStatus('current')
bundleLinkDiffDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 13, 2, 1, 7), Integer32()).setUnits('milli-seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: bundleLinkDiffDelay.setStatus('current')
bundleLinkBw = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 13, 2, 1, 8), Integer32()).setUnits('kbps').setMaxAccess("readonly")
if mibBuilder.loadTexts: bundleLinkBw.setStatus('current')
bundleLinkStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 13, 2, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("up", 1), ("down", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bundleLinkStatus.setStatus('current')
bundleLinkRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 13, 2, 1, 10), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: bundleLinkRowStatus.setStatus('current')
mibBuilder.exportSymbols("TIARA-BUNDLE-MIB", bundleSubnetMask=bundleSubnetMask, bundleNoOfLinks=bundleNoOfLinks, bundleLinkTimeSlots=bundleLinkTimeSlots, bundleTableEntry=bundleTableEntry, bundleLinkT1Num=bundleLinkT1Num, bundleRowStatus=bundleRowStatus, bundleLinkRestore=bundleLinkRestore, bundleStatus=bundleStatus, bundleDescr=bundleDescr, bundleId=bundleId, bundleSrcForwardingAddrSecondary=bundleSrcForwardingAddrSecondary, bundleRestoreMethod=bundleRestoreMethod, bundleLinkInvertedData=bundleLinkInvertedData, bundleLinkType=bundleLinkType, tiaraBundleMib=tiaraBundleMib, bundleName=bundleName, bundleTable=bundleTable, bundleLinkTable=bundleLinkTable, bundleLinkEntry=bundleLinkEntry, bundleLinkStatus=bundleLinkStatus, bundleLinkRestoralTime=bundleLinkRestoralTime, bundleSrcForwardingAddrPrimary=bundleSrcForwardingAddrPrimary, PYSNMP_MODULE_ID=tiaraBundleMib, bundleIpAddr=bundleIpAddr, bundleTotalBw=bundleTotalBw, bundleLinkSpeed=bundleLinkSpeed, bundleDropUas=bundleDropUas, bundleLinkBw=bundleLinkBw, bundleLinkPhysIfNum=bundleLinkPhysIfNum, bundleContact=bundleContact, bundleLinkDiffDelay=bundleLinkDiffDelay, bundleDropSes=bundleDropSes, bundleLinkRowStatus=bundleLinkRowStatus, bundleEncapsulation=bundleEncapsulation, bundleDropEs=bundleDropEs)
