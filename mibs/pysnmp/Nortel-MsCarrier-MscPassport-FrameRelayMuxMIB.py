#
# PySNMP MIB module Nortel-MsCarrier-MscPassport-FrameRelayMuxMIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/Nortel-MsCarrier-MscPassport-FrameRelayMuxMIB
# Produced by pysmi-0.3.4 at Mon Apr 29 20:20:48 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, SingleValueConstraint, ConstraintsUnion, ValueSizeConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "SingleValueConstraint", "ConstraintsUnion", "ValueSizeConstraint", "ConstraintsIntersection")
StorageType, InterfaceIndex, RowStatus, Integer32, Gauge32, DisplayString, Unsigned32, Counter32, RowPointer = mibBuilder.importSymbols("Nortel-MsCarrier-MscPassport-StandardTextualConventionsMIB", "StorageType", "InterfaceIndex", "RowStatus", "Integer32", "Gauge32", "DisplayString", "Unsigned32", "Counter32", "RowPointer")
PassportCounter64, NonReplicated, Link = mibBuilder.importSymbols("Nortel-MsCarrier-MscPassport-TextualConventionsMIB", "PassportCounter64", "NonReplicated", "Link")
mscComponents, mscPassportMIBs = mibBuilder.importSymbols("Nortel-MsCarrier-MscPassport-UsefulDefinitionsMIB", "mscComponents", "mscPassportMIBs")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
iso, NotificationType, ModuleIdentity, Counter64, Integer32, ObjectIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, TimeTicks, MibIdentifier, Gauge32, Unsigned32, IpAddress, Counter32, Bits = mibBuilder.importSymbols("SNMPv2-SMI", "iso", "NotificationType", "ModuleIdentity", "Counter64", "Integer32", "ObjectIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "TimeTicks", "MibIdentifier", "Gauge32", "Unsigned32", "IpAddress", "Counter32", "Bits")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
frameRelayMuxMIB = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 38))
mscFrMux = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 112))
mscFrMuxRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 112, 1), )
if mibBuilder.loadTexts: mscFrMuxRowStatusTable.setStatus('mandatory')
mscFrMuxRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 112, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayMuxMIB", "mscFrMuxIndex"))
if mibBuilder.loadTexts: mscFrMuxRowStatusEntry.setStatus('mandatory')
mscFrMuxRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 112, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrMuxRowStatus.setStatus('mandatory')
mscFrMuxComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 112, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrMuxComponentName.setStatus('mandatory')
mscFrMuxStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 112, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrMuxStorageType.setStatus('mandatory')
mscFrMuxIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 112, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)))
if mibBuilder.loadTexts: mscFrMuxIndex.setStatus('mandatory')
mscFrMuxOperStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 112, 8), )
if mibBuilder.loadTexts: mscFrMuxOperStatusTable.setStatus('mandatory')
mscFrMuxOperStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 112, 8, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayMuxMIB", "mscFrMuxIndex"))
if mibBuilder.loadTexts: mscFrMuxOperStatusEntry.setStatus('mandatory')
mscFrMuxSnmpOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 112, 8, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("testing", 3))).clone('up')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrMuxSnmpOperStatus.setStatus('mandatory')
mscFrMuxIfEntryTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 112, 9), )
if mibBuilder.loadTexts: mscFrMuxIfEntryTable.setStatus('mandatory')
mscFrMuxIfEntryEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 112, 9, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayMuxMIB", "mscFrMuxIndex"))
if mibBuilder.loadTexts: mscFrMuxIfEntryEntry.setStatus('mandatory')
mscFrMuxIfAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 112, 9, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("testing", 3))).clone('up')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrMuxIfAdminStatus.setStatus('mandatory')
mscFrMuxIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 112, 9, 1, 2), InterfaceIndex().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrMuxIfIndex.setStatus('mandatory')
mscFrMuxCidDataTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 112, 10), )
if mibBuilder.loadTexts: mscFrMuxCidDataTable.setStatus('mandatory')
mscFrMuxCidDataEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 112, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayMuxMIB", "mscFrMuxIndex"))
if mibBuilder.loadTexts: mscFrMuxCidDataEntry.setStatus('mandatory')
mscFrMuxCustomerIdentifier = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 112, 10, 1, 1), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 8191), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrMuxCustomerIdentifier.setStatus('mandatory')
mscFrMuxStateTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 112, 11), )
if mibBuilder.loadTexts: mscFrMuxStateTable.setStatus('mandatory')
mscFrMuxStateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 112, 11, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayMuxMIB", "mscFrMuxIndex"))
if mibBuilder.loadTexts: mscFrMuxStateEntry.setStatus('mandatory')
mscFrMuxAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 112, 11, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("locked", 0), ("unlocked", 1), ("shuttingDown", 2))).clone('unlocked')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrMuxAdminState.setStatus('mandatory')
mscFrMuxOperationalState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 112, 11, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1))).clone('disabled')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrMuxOperationalState.setStatus('mandatory')
mscFrMuxUsageState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 112, 11, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("idle", 0), ("active", 1), ("busy", 2))).clone('idle')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrMuxUsageState.setStatus('mandatory')
mscFrMuxAvailabilityStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 112, 11, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(2, 2)).setFixedLength(2)).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrMuxAvailabilityStatus.setStatus('mandatory')
mscFrMuxProceduralStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 112, 11, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 1)).setFixedLength(1)).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrMuxProceduralStatus.setStatus('mandatory')
mscFrMuxControlStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 112, 11, 1, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 1)).setFixedLength(1)).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrMuxControlStatus.setStatus('mandatory')
mscFrMuxAlarmStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 112, 11, 1, 7), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 1)).setFixedLength(1)).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrMuxAlarmStatus.setStatus('mandatory')
mscFrMuxStandbyStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 112, 11, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 15))).clone(namedValues=NamedValues(("hotStandby", 0), ("coldStandby", 1), ("providingService", 2), ("notSet", 15))).clone('notSet')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrMuxStandbyStatus.setStatus('mandatory')
mscFrMuxUnknownStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 112, 11, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("false", 0), ("true", 1))).clone('false')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrMuxUnknownStatus.setStatus('mandatory')
mscFrMuxStatsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 112, 12), )
if mibBuilder.loadTexts: mscFrMuxStatsTable.setStatus('mandatory')
mscFrMuxStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 112, 12, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayMuxMIB", "mscFrMuxIndex"))
if mibBuilder.loadTexts: mscFrMuxStatsEntry.setStatus('mandatory')
mscFrMuxLastUnknownDlci = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 112, 12, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 1023))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrMuxLastUnknownDlci.setStatus('mandatory')
mscFrMuxUnknownDlciFramesFromIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 112, 12, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrMuxUnknownDlciFramesFromIf.setStatus('mandatory')
mscFrMuxInvalidHeaderFramesFromIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 112, 12, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrMuxInvalidHeaderFramesFromIf.setStatus('mandatory')
mscFrMuxTimeFramerCongested = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 112, 12, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrMuxTimeFramerCongested.setStatus('mandatory')
mscFrMuxFramer = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 112, 2))
mscFrMuxFramerRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 112, 2, 1), )
if mibBuilder.loadTexts: mscFrMuxFramerRowStatusTable.setStatus('mandatory')
mscFrMuxFramerRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 112, 2, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayMuxMIB", "mscFrMuxIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayMuxMIB", "mscFrMuxFramerIndex"))
if mibBuilder.loadTexts: mscFrMuxFramerRowStatusEntry.setStatus('mandatory')
mscFrMuxFramerRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 112, 2, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrMuxFramerRowStatus.setStatus('mandatory')
mscFrMuxFramerComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 112, 2, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrMuxFramerComponentName.setStatus('mandatory')
mscFrMuxFramerStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 112, 2, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrMuxFramerStorageType.setStatus('mandatory')
mscFrMuxFramerIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 112, 2, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscFrMuxFramerIndex.setStatus('mandatory')
mscFrMuxFramerProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 112, 2, 10), )
if mibBuilder.loadTexts: mscFrMuxFramerProvTable.setStatus('mandatory')
mscFrMuxFramerProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 112, 2, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayMuxMIB", "mscFrMuxIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayMuxMIB", "mscFrMuxFramerIndex"))
if mibBuilder.loadTexts: mscFrMuxFramerProvEntry.setStatus('mandatory')
mscFrMuxFramerInterfaceName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 112, 2, 10, 1, 1), Link()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrMuxFramerInterfaceName.setStatus('mandatory')
mscFrMuxFramerLinkTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 112, 2, 11), )
if mibBuilder.loadTexts: mscFrMuxFramerLinkTable.setStatus('mandatory')
mscFrMuxFramerLinkEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 112, 2, 11, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayMuxMIB", "mscFrMuxIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayMuxMIB", "mscFrMuxFramerIndex"))
if mibBuilder.loadTexts: mscFrMuxFramerLinkEntry.setStatus('mandatory')
mscFrMuxFramerDataInversion = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 112, 2, 11, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 16))).clone(namedValues=NamedValues(("off", 0), ("on", 16))).clone('off')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrMuxFramerDataInversion.setStatus('mandatory')
mscFrMuxFramerFrameCrcType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 112, 2, 11, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("crc16", 0), ("crc32", 1), ("noCrc", 2))).clone('crc16')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrMuxFramerFrameCrcType.setStatus('mandatory')
mscFrMuxFramerFlagsBetweenFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 112, 2, 11, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 16)).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrMuxFramerFlagsBetweenFrames.setStatus('mandatory')
mscFrMuxFramerStateTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 112, 2, 12), )
if mibBuilder.loadTexts: mscFrMuxFramerStateTable.setStatus('mandatory')
mscFrMuxFramerStateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 112, 2, 12, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayMuxMIB", "mscFrMuxIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayMuxMIB", "mscFrMuxFramerIndex"))
if mibBuilder.loadTexts: mscFrMuxFramerStateEntry.setStatus('mandatory')
mscFrMuxFramerAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 112, 2, 12, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("locked", 0), ("unlocked", 1), ("shuttingDown", 2))).clone('unlocked')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrMuxFramerAdminState.setStatus('mandatory')
mscFrMuxFramerOperationalState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 112, 2, 12, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1))).clone('disabled')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrMuxFramerOperationalState.setStatus('mandatory')
mscFrMuxFramerUsageState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 112, 2, 12, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("idle", 0), ("active", 1), ("busy", 2))).clone('idle')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrMuxFramerUsageState.setStatus('mandatory')
mscFrMuxFramerStatsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 112, 2, 13), )
if mibBuilder.loadTexts: mscFrMuxFramerStatsTable.setStatus('mandatory')
mscFrMuxFramerStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 112, 2, 13, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayMuxMIB", "mscFrMuxIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayMuxMIB", "mscFrMuxFramerIndex"))
if mibBuilder.loadTexts: mscFrMuxFramerStatsEntry.setStatus('mandatory')
mscFrMuxFramerFrmToIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 112, 2, 13, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrMuxFramerFrmToIf.setStatus('obsolete')
mscFrMuxFramerFrmFromIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 112, 2, 13, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrMuxFramerFrmFromIf.setStatus('obsolete')
mscFrMuxFramerOctetFromIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 112, 2, 13, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrMuxFramerOctetFromIf.setStatus('obsolete')
mscFrMuxFramerAborts = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 112, 2, 13, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrMuxFramerAborts.setStatus('mandatory')
mscFrMuxFramerCrcErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 112, 2, 13, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrMuxFramerCrcErrors.setStatus('mandatory')
mscFrMuxFramerLrcErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 112, 2, 13, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrMuxFramerLrcErrors.setStatus('mandatory')
mscFrMuxFramerNonOctetErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 112, 2, 13, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrMuxFramerNonOctetErrors.setStatus('mandatory')
mscFrMuxFramerOverruns = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 112, 2, 13, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrMuxFramerOverruns.setStatus('mandatory')
mscFrMuxFramerUnderruns = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 112, 2, 13, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrMuxFramerUnderruns.setStatus('mandatory')
mscFrMuxFramerLargeFrmErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 112, 2, 13, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrMuxFramerLargeFrmErrors.setStatus('mandatory')
mscFrMuxFramerFrmModeErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 112, 2, 13, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrMuxFramerFrmModeErrors.setStatus('mandatory')
mscFrMuxFramerFrmToIf64 = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 112, 2, 13, 1, 14), PassportCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrMuxFramerFrmToIf64.setStatus('mandatory')
mscFrMuxFramerFrmFromIf64 = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 112, 2, 13, 1, 15), PassportCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrMuxFramerFrmFromIf64.setStatus('mandatory')
mscFrMuxFramerOctetFromIf64 = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 112, 2, 13, 1, 16), PassportCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrMuxFramerOctetFromIf64.setStatus('mandatory')
mscFrMuxFramerUtilTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 112, 2, 14), )
if mibBuilder.loadTexts: mscFrMuxFramerUtilTable.setStatus('mandatory')
mscFrMuxFramerUtilEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 112, 2, 14, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayMuxMIB", "mscFrMuxIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayMuxMIB", "mscFrMuxFramerIndex"))
if mibBuilder.loadTexts: mscFrMuxFramerUtilEntry.setStatus('mandatory')
mscFrMuxFramerNormPrioLinkUtilToIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 112, 2, 14, 1, 1), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrMuxFramerNormPrioLinkUtilToIf.setStatus('mandatory')
mscFrMuxFramerNormPrioLinkUtilFromIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 112, 2, 14, 1, 3), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrMuxFramerNormPrioLinkUtilFromIf.setStatus('mandatory')
mscFrMuxLmi = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 112, 3))
mscFrMuxLmiRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 112, 3, 1), )
if mibBuilder.loadTexts: mscFrMuxLmiRowStatusTable.setStatus('mandatory')
mscFrMuxLmiRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 112, 3, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayMuxMIB", "mscFrMuxIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayMuxMIB", "mscFrMuxLmiIndex"))
if mibBuilder.loadTexts: mscFrMuxLmiRowStatusEntry.setStatus('mandatory')
mscFrMuxLmiRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 112, 3, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrMuxLmiRowStatus.setStatus('mandatory')
mscFrMuxLmiComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 112, 3, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrMuxLmiComponentName.setStatus('mandatory')
mscFrMuxLmiStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 112, 3, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrMuxLmiStorageType.setStatus('mandatory')
mscFrMuxLmiIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 112, 3, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscFrMuxLmiIndex.setStatus('mandatory')
mscFrMuxLmiProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 112, 3, 10), )
if mibBuilder.loadTexts: mscFrMuxLmiProvTable.setStatus('mandatory')
mscFrMuxLmiProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 112, 3, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayMuxMIB", "mscFrMuxIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayMuxMIB", "mscFrMuxLmiIndex"))
if mibBuilder.loadTexts: mscFrMuxLmiProvEntry.setStatus('mandatory')
mscFrMuxLmiProcedures = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 112, 3, 10, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("none", 0), ("vendorForum", 1), ("ansi", 2), ("ccitt", 3))).clone('ccitt')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrMuxLmiProcedures.setStatus('mandatory')
mscFrMuxLmiLinkVerificationTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 112, 3, 10, 1, 2), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(5, 5), ValueRangeConstraint(10, 10), ValueRangeConstraint(15, 15), ValueRangeConstraint(20, 20), ValueRangeConstraint(25, 25), ValueRangeConstraint(30, 30), )).clone(10)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrMuxLmiLinkVerificationTimer.setStatus('mandatory')
mscFrMuxLmiFullStatusPollingCycles = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 112, 3, 10, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 255)).clone(6)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrMuxLmiFullStatusPollingCycles.setStatus('mandatory')
mscFrMuxLmiErrorEventThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 112, 3, 10, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 10)).clone(3)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrMuxLmiErrorEventThreshold.setStatus('mandatory')
mscFrMuxLmiEventCount = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 112, 3, 10, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 10)).clone(4)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrMuxLmiEventCount.setStatus('mandatory')
mscFrMuxLmiStateTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 112, 3, 11), )
if mibBuilder.loadTexts: mscFrMuxLmiStateTable.setStatus('mandatory')
mscFrMuxLmiStateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 112, 3, 11, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayMuxMIB", "mscFrMuxIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayMuxMIB", "mscFrMuxLmiIndex"))
if mibBuilder.loadTexts: mscFrMuxLmiStateEntry.setStatus('mandatory')
mscFrMuxLmiAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 112, 3, 11, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("locked", 0), ("unlocked", 1), ("shuttingDown", 2))).clone('unlocked')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrMuxLmiAdminState.setStatus('mandatory')
mscFrMuxLmiOperationalState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 112, 3, 11, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1))).clone('disabled')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrMuxLmiOperationalState.setStatus('mandatory')
mscFrMuxLmiUsageState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 112, 3, 11, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("idle", 0), ("active", 1), ("busy", 2))).clone('idle')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrMuxLmiUsageState.setStatus('mandatory')
mscFrMuxLmiPsiTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 112, 3, 12), )
if mibBuilder.loadTexts: mscFrMuxLmiPsiTable.setStatus('mandatory')
mscFrMuxLmiPsiEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 112, 3, 12, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayMuxMIB", "mscFrMuxIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayMuxMIB", "mscFrMuxLmiIndex"))
if mibBuilder.loadTexts: mscFrMuxLmiPsiEntry.setStatus('mandatory')
mscFrMuxLmiProtocolStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 112, 3, 12, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("errorCondition", 0), ("normalCondition", 1))).clone('normalCondition')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrMuxLmiProtocolStatus.setStatus('mandatory')
mscFrMuxLmiStatsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 112, 3, 13), )
if mibBuilder.loadTexts: mscFrMuxLmiStatsTable.setStatus('mandatory')
mscFrMuxLmiStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 112, 3, 13, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayMuxMIB", "mscFrMuxIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayMuxMIB", "mscFrMuxLmiIndex"))
if mibBuilder.loadTexts: mscFrMuxLmiStatsEntry.setStatus('mandatory')
mscFrMuxLmiKeepAliveStatusEnqToIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 112, 3, 13, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrMuxLmiKeepAliveStatusEnqToIf.setStatus('mandatory')
mscFrMuxLmiFullStatusEnqToIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 112, 3, 13, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrMuxLmiFullStatusEnqToIf.setStatus('mandatory')
mscFrMuxLmiProtocolErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 112, 3, 13, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrMuxLmiProtocolErrors.setStatus('mandatory')
mscFrMuxLmiUnexpectedIes = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 112, 3, 13, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrMuxLmiUnexpectedIes.setStatus('mandatory')
mscFrMuxLmiSequenceErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 112, 3, 13, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrMuxLmiSequenceErrors.setStatus('mandatory')
mscFrMuxLmiUnexpectedReports = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 112, 3, 13, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrMuxLmiUnexpectedReports.setStatus('mandatory')
mscFrMuxLmiNoStatusReportCount = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 112, 3, 13, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrMuxLmiNoStatusReportCount.setStatus('mandatory')
mscFrMuxDlci = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 112, 4))
mscFrMuxDlciRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 112, 4, 1), )
if mibBuilder.loadTexts: mscFrMuxDlciRowStatusTable.setStatus('mandatory')
mscFrMuxDlciRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 112, 4, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayMuxMIB", "mscFrMuxIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayMuxMIB", "mscFrMuxDlciIndex"))
if mibBuilder.loadTexts: mscFrMuxDlciRowStatusEntry.setStatus('mandatory')
mscFrMuxDlciRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 112, 4, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrMuxDlciRowStatus.setStatus('mandatory')
mscFrMuxDlciComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 112, 4, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrMuxDlciComponentName.setStatus('mandatory')
mscFrMuxDlciStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 112, 4, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrMuxDlciStorageType.setStatus('mandatory')
mscFrMuxDlciIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 112, 4, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(16, 1007)))
if mibBuilder.loadTexts: mscFrMuxDlciIndex.setStatus('mandatory')
mscFrMuxDlciOperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 112, 4, 10), )
if mibBuilder.loadTexts: mscFrMuxDlciOperTable.setStatus('mandatory')
mscFrMuxDlciOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 112, 4, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayMuxMIB", "mscFrMuxIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayMuxMIB", "mscFrMuxDlciIndex"))
if mibBuilder.loadTexts: mscFrMuxDlciOperEntry.setStatus('mandatory')
mscFrMuxDlciApplicationName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 112, 4, 10, 1, 1), RowPointer()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrMuxDlciApplicationName.setStatus('mandatory')
mscFrMuxDlciStateTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 112, 4, 11), )
if mibBuilder.loadTexts: mscFrMuxDlciStateTable.setStatus('mandatory')
mscFrMuxDlciStateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 112, 4, 11, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayMuxMIB", "mscFrMuxIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayMuxMIB", "mscFrMuxDlciIndex"))
if mibBuilder.loadTexts: mscFrMuxDlciStateEntry.setStatus('mandatory')
mscFrMuxDlciAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 112, 4, 11, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("locked", 0), ("unlocked", 1), ("shuttingDown", 2))).clone('unlocked')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrMuxDlciAdminState.setStatus('mandatory')
mscFrMuxDlciOperationalState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 112, 4, 11, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1))).clone('disabled')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrMuxDlciOperationalState.setStatus('mandatory')
mscFrMuxDlciUsageState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 112, 4, 11, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("idle", 0), ("active", 1), ("busy", 2))).clone('idle')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrMuxDlciUsageState.setStatus('mandatory')
mscFrMuxDlciAbitTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 112, 4, 12), )
if mibBuilder.loadTexts: mscFrMuxDlciAbitTable.setStatus('mandatory')
mscFrMuxDlciAbitEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 112, 4, 12, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayMuxMIB", "mscFrMuxIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayMuxMIB", "mscFrMuxDlciIndex"))
if mibBuilder.loadTexts: mscFrMuxDlciAbitEntry.setStatus('mandatory')
mscFrMuxDlciABitStatusFromIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 112, 4, 12, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("inactive", 0), ("active", 1))).clone('inactive')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrMuxDlciABitStatusFromIf.setStatus('mandatory')
mscFrMuxDlciStatsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 112, 4, 13), )
if mibBuilder.loadTexts: mscFrMuxDlciStatsTable.setStatus('mandatory')
mscFrMuxDlciStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 112, 4, 13, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayMuxMIB", "mscFrMuxIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayMuxMIB", "mscFrMuxDlciIndex"))
if mibBuilder.loadTexts: mscFrMuxDlciStatsEntry.setStatus('mandatory')
mscFrMuxDlciFrmToIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 112, 4, 13, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrMuxDlciFrmToIf.setStatus('mandatory')
mscFrMuxDlciBytesToIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 112, 4, 13, 1, 2), PassportCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrMuxDlciBytesToIf.setStatus('mandatory')
mscFrMuxDlciFrmFromIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 112, 4, 13, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrMuxDlciFrmFromIf.setStatus('mandatory')
mscFrMuxDlciDeFrmFromIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 112, 4, 13, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrMuxDlciDeFrmFromIf.setStatus('mandatory')
mscFrMuxDlciBytesFromIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 112, 4, 13, 1, 5), PassportCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrMuxDlciBytesFromIf.setStatus('mandatory')
mscFrMuxDlciDeBytesFromIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 112, 4, 13, 1, 6), PassportCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrMuxDlciDeBytesFromIf.setStatus('mandatory')
mscFrMuxDlciFecnFrmToIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 112, 4, 13, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrMuxDlciFecnFrmToIf.setStatus('mandatory')
mscFrMuxDlciFecnFrmFromIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 112, 4, 13, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrMuxDlciFecnFrmFromIf.setStatus('mandatory')
mscFrMuxDlciBecnFrmToIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 112, 4, 13, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrMuxDlciBecnFrmToIf.setStatus('mandatory')
mscFrMuxDlciBecnFrmFromIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 112, 4, 13, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrMuxDlciBecnFrmFromIf.setStatus('mandatory')
mscFrMuxDlciDiscCongestedFromIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 112, 4, 13, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrMuxDlciDiscCongestedFromIf.setStatus('mandatory')
mscFrMuxDlciDiscCongestedFromIfBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 112, 4, 13, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrMuxDlciDiscCongestedFromIfBytes.setStatus('mandatory')
mscFrMuxDlciDiscDeCongestedFromIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 112, 4, 13, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrMuxDlciDiscDeCongestedFromIf.setStatus('mandatory')
mscFrMuxDlciDiscDeCongestedFromIfBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 112, 4, 13, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrMuxDlciDiscDeCongestedFromIfBytes.setStatus('mandatory')
mscFrMuxDlciErrorShortFrmFromIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 112, 4, 13, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrMuxDlciErrorShortFrmFromIf.setStatus('mandatory')
mscFrMuxDlciErrorLongFrmFromIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 112, 4, 13, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrMuxDlciErrorLongFrmFromIf.setStatus('mandatory')
mscFrMuxDlciApplInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 112, 4, 2))
mscFrMuxDlciApplInfoRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 112, 4, 2, 1), )
if mibBuilder.loadTexts: mscFrMuxDlciApplInfoRowStatusTable.setStatus('mandatory')
mscFrMuxDlciApplInfoRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 112, 4, 2, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayMuxMIB", "mscFrMuxIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayMuxMIB", "mscFrMuxDlciIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayMuxMIB", "mscFrMuxDlciApplInfoIndex"))
if mibBuilder.loadTexts: mscFrMuxDlciApplInfoRowStatusEntry.setStatus('mandatory')
mscFrMuxDlciApplInfoRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 112, 4, 2, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrMuxDlciApplInfoRowStatus.setStatus('mandatory')
mscFrMuxDlciApplInfoComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 112, 4, 2, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrMuxDlciApplInfoComponentName.setStatus('mandatory')
mscFrMuxDlciApplInfoStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 112, 4, 2, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrMuxDlciApplInfoStorageType.setStatus('mandatory')
mscFrMuxDlciApplInfoIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 112, 4, 2, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscFrMuxDlciApplInfoIndex.setStatus('mandatory')
mscFrMuxDlciApplInfoProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 112, 4, 2, 11), )
if mibBuilder.loadTexts: mscFrMuxDlciApplInfoProvTable.setStatus('mandatory')
mscFrMuxDlciApplInfoProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 112, 4, 2, 11, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayMuxMIB", "mscFrMuxIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayMuxMIB", "mscFrMuxDlciIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayMuxMIB", "mscFrMuxDlciApplInfoIndex"))
if mibBuilder.loadTexts: mscFrMuxDlciApplInfoProvEntry.setStatus('mandatory')
mscFrMuxDlciApplInfoApplicationName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 112, 4, 2, 11, 1, 1), Link()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrMuxDlciApplInfoApplicationName.setStatus('mandatory')
frameRelayMuxGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 38, 1))
frameRelayMuxGroupCA = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 38, 1, 1))
frameRelayMuxGroupCA02 = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 38, 1, 1, 3))
frameRelayMuxGroupCA02A = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 38, 1, 1, 3, 2))
frameRelayMuxCapabilities = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 38, 3))
frameRelayMuxCapabilitiesCA = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 38, 3, 1))
frameRelayMuxCapabilitiesCA02 = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 38, 3, 1, 3))
frameRelayMuxCapabilitiesCA02A = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 38, 3, 1, 3, 2))
mibBuilder.exportSymbols("Nortel-MsCarrier-MscPassport-FrameRelayMuxMIB", mscFrMuxDlciApplInfoRowStatus=mscFrMuxDlciApplInfoRowStatus, mscFrMuxDlciFrmFromIf=mscFrMuxDlciFrmFromIf, mscFrMuxDlciDeFrmFromIf=mscFrMuxDlciDeFrmFromIf, mscFrMuxStateEntry=mscFrMuxStateEntry, mscFrMuxDlciStatsEntry=mscFrMuxDlciStatsEntry, mscFrMuxLmiNoStatusReportCount=mscFrMuxLmiNoStatusReportCount, mscFrMuxDlciComponentName=mscFrMuxDlciComponentName, mscFrMuxDlciOperEntry=mscFrMuxDlciOperEntry, mscFrMuxFramerFrmToIf64=mscFrMuxFramerFrmToIf64, mscFrMuxDlciFrmToIf=mscFrMuxDlciFrmToIf, mscFrMuxProceduralStatus=mscFrMuxProceduralStatus, mscFrMuxLmiStorageType=mscFrMuxLmiStorageType, mscFrMuxDlciIndex=mscFrMuxDlciIndex, mscFrMuxDlciAdminState=mscFrMuxDlciAdminState, frameRelayMuxGroupCA02A=frameRelayMuxGroupCA02A, mscFrMuxFramerOctetFromIf64=mscFrMuxFramerOctetFromIf64, mscFrMuxUnknownStatus=mscFrMuxUnknownStatus, mscFrMuxFramerInterfaceName=mscFrMuxFramerInterfaceName, mscFrMuxDlciApplInfoProvEntry=mscFrMuxDlciApplInfoProvEntry, frameRelayMuxGroup=frameRelayMuxGroup, mscFrMuxDlciBytesToIf=mscFrMuxDlciBytesToIf, mscFrMuxFramerProvTable=mscFrMuxFramerProvTable, mscFrMuxFramerRowStatus=mscFrMuxFramerRowStatus, mscFrMuxLmiUnexpectedReports=mscFrMuxLmiUnexpectedReports, mscFrMuxDlciApplInfoApplicationName=mscFrMuxDlciApplInfoApplicationName, mscFrMuxFramerFrmToIf=mscFrMuxFramerFrmToIf, mscFrMuxFramerUsageState=mscFrMuxFramerUsageState, mscFrMuxLmiStatsTable=mscFrMuxLmiStatsTable, mscFrMuxFramerLrcErrors=mscFrMuxFramerLrcErrors, mscFrMuxFramerFrameCrcType=mscFrMuxFramerFrameCrcType, mscFrMuxDlciFecnFrmToIf=mscFrMuxDlciFecnFrmToIf, mscFrMuxLmiSequenceErrors=mscFrMuxLmiSequenceErrors, mscFrMuxFramerComponentName=mscFrMuxFramerComponentName, mscFrMuxDlciFecnFrmFromIf=mscFrMuxDlciFecnFrmFromIf, frameRelayMuxCapabilitiesCA02A=frameRelayMuxCapabilitiesCA02A, mscFrMuxLmiFullStatusPollingCycles=mscFrMuxLmiFullStatusPollingCycles, mscFrMuxLmiRowStatus=mscFrMuxLmiRowStatus, mscFrMuxFramerProvEntry=mscFrMuxFramerProvEntry, mscFrMuxLmiProvTable=mscFrMuxLmiProvTable, mscFrMuxDlciErrorShortFrmFromIf=mscFrMuxDlciErrorShortFrmFromIf, mscFrMuxDlciBecnFrmToIf=mscFrMuxDlciBecnFrmToIf, mscFrMuxFramerFrmFromIf64=mscFrMuxFramerFrmFromIf64, mscFrMuxLmiProtocolErrors=mscFrMuxLmiProtocolErrors, mscFrMuxAlarmStatus=mscFrMuxAlarmStatus, mscFrMuxLmiEventCount=mscFrMuxLmiEventCount, mscFrMuxLmiStateEntry=mscFrMuxLmiStateEntry, mscFrMuxDlciRowStatus=mscFrMuxDlciRowStatus, mscFrMuxFramerNormPrioLinkUtilFromIf=mscFrMuxFramerNormPrioLinkUtilFromIf, mscFrMuxFramer=mscFrMuxFramer, mscFrMuxLmiStateTable=mscFrMuxLmiStateTable, mscFrMuxSnmpOperStatus=mscFrMuxSnmpOperStatus, mscFrMuxFramerAdminState=mscFrMuxFramerAdminState, mscFrMuxFramerAborts=mscFrMuxFramerAborts, mscFrMuxAvailabilityStatus=mscFrMuxAvailabilityStatus, mscFrMuxLmi=mscFrMuxLmi, mscFrMuxDlciErrorLongFrmFromIf=mscFrMuxDlciErrorLongFrmFromIf, mscFrMuxDlciOperTable=mscFrMuxDlciOperTable, mscFrMuxDlciOperationalState=mscFrMuxDlciOperationalState, mscFrMuxDlciAbitTable=mscFrMuxDlciAbitTable, mscFrMuxDlciApplInfoProvTable=mscFrMuxDlciApplInfoProvTable, mscFrMuxLmiRowStatusTable=mscFrMuxLmiRowStatusTable, mscFrMuxLmiProtocolStatus=mscFrMuxLmiProtocolStatus, mscFrMuxDlciAbitEntry=mscFrMuxDlciAbitEntry, mscFrMuxDlciApplInfo=mscFrMuxDlciApplInfo, mscFrMuxFramerLinkEntry=mscFrMuxFramerLinkEntry, mscFrMuxOperStatusTable=mscFrMuxOperStatusTable, mscFrMuxLmiRowStatusEntry=mscFrMuxLmiRowStatusEntry, mscFrMuxIfEntryTable=mscFrMuxIfEntryTable, mscFrMuxControlStatus=mscFrMuxControlStatus, mscFrMuxLmiComponentName=mscFrMuxLmiComponentName, mscFrMuxDlciApplInfoIndex=mscFrMuxDlciApplInfoIndex, mscFrMuxDlci=mscFrMuxDlci, mscFrMuxCustomerIdentifier=mscFrMuxCustomerIdentifier, mscFrMuxLmiErrorEventThreshold=mscFrMuxLmiErrorEventThreshold, mscFrMuxFramerOperationalState=mscFrMuxFramerOperationalState, mscFrMuxLmiProcedures=mscFrMuxLmiProcedures, mscFrMuxDlciBytesFromIf=mscFrMuxDlciBytesFromIf, mscFrMuxStateTable=mscFrMuxStateTable, mscFrMuxFramerLargeFrmErrors=mscFrMuxFramerLargeFrmErrors, mscFrMuxFramerStatsEntry=mscFrMuxFramerStatsEntry, mscFrMuxDlciApplInfoRowStatusEntry=mscFrMuxDlciApplInfoRowStatusEntry, mscFrMuxLmiIndex=mscFrMuxLmiIndex, mscFrMuxLmiPsiEntry=mscFrMuxLmiPsiEntry, mscFrMuxDlciApplicationName=mscFrMuxDlciApplicationName, mscFrMuxDlciBecnFrmFromIf=mscFrMuxDlciBecnFrmFromIf, mscFrMuxLmiUnexpectedIes=mscFrMuxLmiUnexpectedIes, mscFrMuxCidDataTable=mscFrMuxCidDataTable, mscFrMuxFramerDataInversion=mscFrMuxFramerDataInversion, mscFrMuxLmiPsiTable=mscFrMuxLmiPsiTable, mscFrMux=mscFrMux, mscFrMuxStatsTable=mscFrMuxStatsTable, mscFrMuxFramerOctetFromIf=mscFrMuxFramerOctetFromIf, mscFrMuxLmiProvEntry=mscFrMuxLmiProvEntry, mscFrMuxFramerNormPrioLinkUtilToIf=mscFrMuxFramerNormPrioLinkUtilToIf, mscFrMuxDlciDiscDeCongestedFromIf=mscFrMuxDlciDiscDeCongestedFromIf, frameRelayMuxCapabilities=frameRelayMuxCapabilities, mscFrMuxFramerStatsTable=mscFrMuxFramerStatsTable, mscFrMuxLmiAdminState=mscFrMuxLmiAdminState, mscFrMuxComponentName=mscFrMuxComponentName, mscFrMuxIfEntryEntry=mscFrMuxIfEntryEntry, mscFrMuxLmiLinkVerificationTimer=mscFrMuxLmiLinkVerificationTimer, mscFrMuxFramerUtilTable=mscFrMuxFramerUtilTable, mscFrMuxLmiKeepAliveStatusEnqToIf=mscFrMuxLmiKeepAliveStatusEnqToIf, mscFrMuxFramerRowStatusEntry=mscFrMuxFramerRowStatusEntry, mscFrMuxFramerRowStatusTable=mscFrMuxFramerRowStatusTable, mscFrMuxDlciDeBytesFromIf=mscFrMuxDlciDeBytesFromIf, mscFrMuxLmiStatsEntry=mscFrMuxLmiStatsEntry, mscFrMuxRowStatus=mscFrMuxRowStatus, mscFrMuxCidDataEntry=mscFrMuxCidDataEntry, mscFrMuxDlciStateEntry=mscFrMuxDlciStateEntry, mscFrMuxIfIndex=mscFrMuxIfIndex, mscFrMuxFramerUnderruns=mscFrMuxFramerUnderruns, mscFrMuxDlciApplInfoStorageType=mscFrMuxDlciApplInfoStorageType, mscFrMuxLmiUsageState=mscFrMuxLmiUsageState, mscFrMuxIfAdminStatus=mscFrMuxIfAdminStatus, mscFrMuxDlciStorageType=mscFrMuxDlciStorageType, mscFrMuxDlciStateTable=mscFrMuxDlciStateTable, frameRelayMuxCapabilitiesCA=frameRelayMuxCapabilitiesCA, mscFrMuxOperationalState=mscFrMuxOperationalState, mscFrMuxDlciABitStatusFromIf=mscFrMuxDlciABitStatusFromIf, mscFrMuxFramerUtilEntry=mscFrMuxFramerUtilEntry, mscFrMuxDlciDiscDeCongestedFromIfBytes=mscFrMuxDlciDiscDeCongestedFromIfBytes, mscFrMuxFramerNonOctetErrors=mscFrMuxFramerNonOctetErrors, mscFrMuxLastUnknownDlci=mscFrMuxLastUnknownDlci, mscFrMuxFramerFlagsBetweenFrames=mscFrMuxFramerFlagsBetweenFrames, mscFrMuxOperStatusEntry=mscFrMuxOperStatusEntry, frameRelayMuxMIB=frameRelayMuxMIB, mscFrMuxLmiFullStatusEnqToIf=mscFrMuxLmiFullStatusEnqToIf, mscFrMuxAdminState=mscFrMuxAdminState, mscFrMuxTimeFramerCongested=mscFrMuxTimeFramerCongested, mscFrMuxDlciApplInfoRowStatusTable=mscFrMuxDlciApplInfoRowStatusTable, mscFrMuxFramerStateTable=mscFrMuxFramerStateTable, mscFrMuxDlciRowStatusTable=mscFrMuxDlciRowStatusTable, mscFrMuxRowStatusTable=mscFrMuxRowStatusTable, mscFrMuxFramerOverruns=mscFrMuxFramerOverruns, mscFrMuxFramerIndex=mscFrMuxFramerIndex, mscFrMuxFramerStorageType=mscFrMuxFramerStorageType, mscFrMuxStorageType=mscFrMuxStorageType, mscFrMuxRowStatusEntry=mscFrMuxRowStatusEntry, frameRelayMuxGroupCA02=frameRelayMuxGroupCA02, mscFrMuxUnknownDlciFramesFromIf=mscFrMuxUnknownDlciFramesFromIf, mscFrMuxInvalidHeaderFramesFromIf=mscFrMuxInvalidHeaderFramesFromIf, mscFrMuxFramerLinkTable=mscFrMuxFramerLinkTable, mscFrMuxDlciDiscCongestedFromIfBytes=mscFrMuxDlciDiscCongestedFromIfBytes, mscFrMuxUsageState=mscFrMuxUsageState, frameRelayMuxGroupCA=frameRelayMuxGroupCA, frameRelayMuxCapabilitiesCA02=frameRelayMuxCapabilitiesCA02, mscFrMuxIndex=mscFrMuxIndex, mscFrMuxFramerFrmFromIf=mscFrMuxFramerFrmFromIf, mscFrMuxLmiOperationalState=mscFrMuxLmiOperationalState, mscFrMuxDlciDiscCongestedFromIf=mscFrMuxDlciDiscCongestedFromIf, mscFrMuxFramerCrcErrors=mscFrMuxFramerCrcErrors, mscFrMuxStatsEntry=mscFrMuxStatsEntry, mscFrMuxFramerStateEntry=mscFrMuxFramerStateEntry, mscFrMuxDlciApplInfoComponentName=mscFrMuxDlciApplInfoComponentName, mscFrMuxFramerFrmModeErrors=mscFrMuxFramerFrmModeErrors, mscFrMuxDlciStatsTable=mscFrMuxDlciStatsTable, mscFrMuxDlciRowStatusEntry=mscFrMuxDlciRowStatusEntry, mscFrMuxDlciUsageState=mscFrMuxDlciUsageState, mscFrMuxStandbyStatus=mscFrMuxStandbyStatus)
