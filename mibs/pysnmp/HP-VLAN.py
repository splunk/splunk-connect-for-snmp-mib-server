#
# PySNMP MIB module HP-VLAN (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/HP-VLAN
# Produced by pysmi-0.3.4 at Mon Apr 29 19:24:34 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ValueRangeConstraint, SingleValueConstraint, ConstraintsIntersection, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ValueRangeConstraint", "SingleValueConstraint", "ConstraintsIntersection", "ValueSizeConstraint")
hpSwitch, = mibBuilder.importSymbols("HP-ICF-OID", "hpSwitch")
ConfigStatus, = mibBuilder.importSymbols("HP-ICF-TC", "ConfigStatus")
InterfaceIndex, = mibBuilder.importSymbols("IF-MIB", "InterfaceIndex")
NotificationGroup, ObjectGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ObjectGroup", "ModuleCompliance")
Integer32, Gauge32, Unsigned32, ModuleIdentity, IpAddress, iso, Counter64, MibScalar, MibTable, MibTableRow, MibTableColumn, Bits, MibIdentifier, ObjectIdentity, Counter32, NotificationType, TimeTicks = mibBuilder.importSymbols("SNMPv2-SMI", "Integer32", "Gauge32", "Unsigned32", "ModuleIdentity", "IpAddress", "iso", "Counter64", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Bits", "MibIdentifier", "ObjectIdentity", "Counter32", "NotificationType", "TimeTicks")
PhysAddress, RowStatus, DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "PhysAddress", "RowStatus", "DisplayString", "TextualConvention")
hpVlanLevelOne = ModuleIdentity((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 3, 1))
hpVlanLevelOne.setRevisions(('2000-11-03 04:17', '1995-10-20 00:00',))
if mibBuilder.loadTexts: hpVlanLevelOne.setLastUpdated('200011030417Z')
if mibBuilder.loadTexts: hpVlanLevelOne.setOrganization('HP Networking')
hpVLAN = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 3))
hpVlanObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 3, 1, 1))
hpVlanTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 3, 1, 2))
hpVlanConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 3, 1, 3))
class VlanID(TextualConvention, Integer32):
    status = 'deprecated'
    displayHint = 'd'
    subtypeSpec = Integer32.subtypeSpec + ValueRangeConstraint(1, 65535)

hpVlanNumber = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 3, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpVlanNumber.setStatus('deprecated')
hpVlanIdentTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 3, 1, 1, 4), )
if mibBuilder.loadTexts: hpVlanIdentTable.setStatus('deprecated')
hpVlanIdentEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 3, 1, 1, 4, 1), ).setIndexNames((0, "HP-VLAN", "hpVlanIdentIndex"))
if mibBuilder.loadTexts: hpVlanIdentEntry.setStatus('deprecated')
hpVlanIdentIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 3, 1, 1, 4, 1, 1), VlanID())
if mibBuilder.loadTexts: hpVlanIdentIndex.setStatus('deprecated')
hpVlanIdentName = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 3, 1, 1, 4, 1, 2), DisplayString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpVlanIdentName.setStatus('deprecated')
hpVlanIdentMode = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 3, 1, 1, 4, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("port", 1), ("mac", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpVlanIdentMode.setStatus('deprecated')
hpVlanIdentStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 3, 1, 1, 4, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpVlanIdentStatus.setStatus('deprecated')
hpVlanDot1QID = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 3, 1, 1, 4, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4095))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpVlanDot1QID.setStatus('deprecated')
hpVlanIdentState = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 3, 1, 1, 4, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("up", 1), ("down", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpVlanIdentState.setStatus('deprecated')
hpVlanIdentType = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 3, 1, 1, 4, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("static", 1), ("dynamic", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpVlanIdentType.setStatus('deprecated')
hpVlanMemberTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 3, 1, 1, 5), )
if mibBuilder.loadTexts: hpVlanMemberTable.setStatus('deprecated')
hpVlanMemberEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 3, 1, 1, 5, 1), ).setIndexNames((0, "HP-VLAN", "hpVlanMemberIfIndex"))
if mibBuilder.loadTexts: hpVlanMemberEntry.setStatus('deprecated')
hpVlanMemberIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 3, 1, 1, 5, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: hpVlanMemberIfIndex.setStatus('deprecated')
hpVlanMemberIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 3, 1, 1, 5, 1, 2), VlanID()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpVlanMemberIndex.setStatus('deprecated')
hpVlanAddrTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 3, 1, 1, 6), )
if mibBuilder.loadTexts: hpVlanAddrTable.setStatus('deprecated')
hpVlanAddrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 3, 1, 1, 6, 1), ).setIndexNames((0, "HP-VLAN", "hpVlanAddrIndex"))
if mibBuilder.loadTexts: hpVlanAddrEntry.setStatus('deprecated')
hpVlanAddrIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 3, 1, 1, 6, 1, 1), VlanID())
if mibBuilder.loadTexts: hpVlanAddrIndex.setStatus('deprecated')
hpVlanAddrPhysAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 3, 1, 1, 6, 1, 2), PhysAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpVlanAddrPhysAddress.setStatus('deprecated')
hpVlanIdentConfigStatus = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 3, 1, 1, 7), ConfigStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpVlanIdentConfigStatus.setStatus('deprecated')
hpVlanMemberTable2 = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 3, 1, 1, 8), )
if mibBuilder.loadTexts: hpVlanMemberTable2.setStatus('deprecated')
hpVlanMemberEntry2 = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 3, 1, 1, 8, 1), ).setIndexNames((0, "HP-VLAN", "hpVlanIdentIndex"), (0, "HP-VLAN", "hpVlanMemberIfIndex"))
if mibBuilder.loadTexts: hpVlanMemberEntry2.setStatus('deprecated')
hpVlanMemberTagged2 = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 3, 1, 1, 8, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("tagged", 1), ("untagged", 2), ("no", 3), ("auto", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpVlanMemberTagged2.setStatus('deprecated')
hpVlanGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 3, 1, 3, 1))
hpVlanCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 3, 1, 3, 2))
hpVlanCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 3, 1, 3, 2, 1)).setObjects(("HP-VLAN", "hpVlanGeneralGroup"), ("HP-VLAN", "hpVlanAddressGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpVlanCompliance = hpVlanCompliance.setStatus('deprecated')
hpVlanCompliance1 = ModuleCompliance((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 3, 1, 3, 2, 2)).setObjects(("HP-VLAN", "hpVlanMemberGroup"), ("HP-VLAN", "hpVlanTaggingGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpVlanCompliance1 = hpVlanCompliance1.setStatus('deprecated')
hpVlanGeneralGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 3, 1, 3, 1, 1)).setObjects(("HP-VLAN", "hpVlanNumber"), ("HP-VLAN", "hpVlanIdentMode"), ("HP-VLAN", "hpVlanIdentName"), ("HP-VLAN", "hpVlanIdentStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpVlanGeneralGroup = hpVlanGeneralGroup.setStatus('deprecated')
hpVlanAddressGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 3, 1, 3, 1, 2)).setObjects(("HP-VLAN", "hpVlanAddrPhysAddress"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpVlanAddressGroup = hpVlanAddressGroup.setStatus('deprecated')
hpVlanMemberGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 3, 1, 3, 1, 3)).setObjects(("HP-VLAN", "hpVlanMemberIndex"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpVlanMemberGroup = hpVlanMemberGroup.setStatus('deprecated')
hpVlanTaggingGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 3, 1, 3, 1, 4)).setObjects(("HP-VLAN", "hpVlanDot1QID"), ("HP-VLAN", "hpVlanIdentState"), ("HP-VLAN", "hpVlanIdentType"), ("HP-VLAN", "hpVlanIdentConfigStatus"), ("HP-VLAN", "hpVlanMemberTagged2"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpVlanTaggingGroup = hpVlanTaggingGroup.setStatus('deprecated')
mibBuilder.exportSymbols("HP-VLAN", hpVLAN=hpVLAN, hpVlanTraps=hpVlanTraps, hpVlanConformance=hpVlanConformance, hpVlanIdentName=hpVlanIdentName, hpVlanAddressGroup=hpVlanAddressGroup, hpVlanGroups=hpVlanGroups, hpVlanMemberTable=hpVlanMemberTable, hpVlanAddrIndex=hpVlanAddrIndex, hpVlanMemberIndex=hpVlanMemberIndex, hpVlanIdentEntry=hpVlanIdentEntry, hpVlanMemberGroup=hpVlanMemberGroup, hpVlanCompliance=hpVlanCompliance, hpVlanIdentConfigStatus=hpVlanIdentConfigStatus, hpVlanObjects=hpVlanObjects, VlanID=VlanID, hpVlanDot1QID=hpVlanDot1QID, hpVlanTaggingGroup=hpVlanTaggingGroup, hpVlanNumber=hpVlanNumber, hpVlanGeneralGroup=hpVlanGeneralGroup, hpVlanIdentType=hpVlanIdentType, hpVlanAddrTable=hpVlanAddrTable, hpVlanCompliance1=hpVlanCompliance1, hpVlanIdentStatus=hpVlanIdentStatus, hpVlanMemberTable2=hpVlanMemberTable2, hpVlanMemberEntry2=hpVlanMemberEntry2, hpVlanAddrEntry=hpVlanAddrEntry, hpVlanLevelOne=hpVlanLevelOne, hpVlanMemberIfIndex=hpVlanMemberIfIndex, hpVlanIdentMode=hpVlanIdentMode, hpVlanMemberEntry=hpVlanMemberEntry, hpVlanMemberTagged2=hpVlanMemberTagged2, PYSNMP_MODULE_ID=hpVlanLevelOne, hpVlanIdentTable=hpVlanIdentTable, hpVlanIdentIndex=hpVlanIdentIndex, hpVlanAddrPhysAddress=hpVlanAddrPhysAddress, hpVlanIdentState=hpVlanIdentState, hpVlanCompliances=hpVlanCompliances)
