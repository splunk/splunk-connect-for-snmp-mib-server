#
# PySNMP MIB module HH3C-IP-ADDRESS-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/HH3C-IP-ADDRESS-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:14:33 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, SingleValueConstraint, ValueSizeConstraint, ConstraintsIntersection, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "SingleValueConstraint", "ValueSizeConstraint", "ConstraintsIntersection", "ValueRangeConstraint")
hh3cCommon, = mibBuilder.importSymbols("HH3C-OID-MIB", "hh3cCommon")
ifIndex, = mibBuilder.importSymbols("IF-MIB", "ifIndex")
InetAddressType, InetAddress = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddressType", "InetAddress")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
NotificationType, TimeTicks, Bits, Gauge32, ObjectIdentity, ModuleIdentity, Counter64, MibIdentifier, Counter32, MibScalar, MibTable, MibTableRow, MibTableColumn, Unsigned32, Integer32, IpAddress, iso = mibBuilder.importSymbols("SNMPv2-SMI", "NotificationType", "TimeTicks", "Bits", "Gauge32", "ObjectIdentity", "ModuleIdentity", "Counter64", "MibIdentifier", "Counter32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Unsigned32", "Integer32", "IpAddress", "iso")
RowStatus, DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "RowStatus", "DisplayString", "TextualConvention")
hh3cIpAddrMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 25506, 2, 67))
hh3cIpAddrMIB.setRevisions(('2005-11-22 00:00',))
if mibBuilder.loadTexts: hh3cIpAddrMIB.setLastUpdated('200511220000Z')
if mibBuilder.loadTexts: hh3cIpAddrMIB.setOrganization('Hangzhou H3C Tech. Co., Ltd.')
hh3cIpAddressObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 25506, 2, 67, 1))
hh3cIpAddressConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 25506, 2, 67, 1, 1))
hh3cIpAddrSetTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 2, 67, 1, 1, 1), )
if mibBuilder.loadTexts: hh3cIpAddrSetTable.setStatus('current')
hh3cIpAddrSetEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 2, 67, 1, 1, 1, 1), ).setIndexNames((0, "HH3C-IP-ADDRESS-MIB", "hh3cIpAddrSetIfIndex"), (0, "HH3C-IP-ADDRESS-MIB", "hh3cIpAddrSetAddrType"), (0, "HH3C-IP-ADDRESS-MIB", "hh3cIpAddrSetAddr"))
if mibBuilder.loadTexts: hh3cIpAddrSetEntry.setStatus('current')
hh3cIpAddrSetIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 67, 1, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: hh3cIpAddrSetIfIndex.setStatus('current')
hh3cIpAddrSetAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 67, 1, 1, 1, 1, 2), InetAddressType())
if mibBuilder.loadTexts: hh3cIpAddrSetAddrType.setStatus('current')
hh3cIpAddrSetAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 67, 1, 1, 1, 1, 3), InetAddress())
if mibBuilder.loadTexts: hh3cIpAddrSetAddr.setStatus('current')
hh3cIpAddrSetMask = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 67, 1, 1, 1, 1, 4), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cIpAddrSetMask.setStatus('current')
hh3cIpAddrSetSourceType = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 67, 1, 1, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("assignedIp", 1))).clone('assignedIp')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cIpAddrSetSourceType.setStatus('current')
hh3cIpAddrSetCatalog = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 67, 1, 1, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("primary", 1), ("sub", 2))).clone('primary')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cIpAddrSetCatalog.setStatus('current')
hh3cIpAddrSetRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 67, 1, 1, 1, 1, 7), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cIpAddrSetRowStatus.setStatus('current')
hh3cIpAddrReadTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 2, 67, 1, 1, 2), )
if mibBuilder.loadTexts: hh3cIpAddrReadTable.setStatus('current')
hh3cIpAddrReadEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 2, 67, 1, 1, 2, 1), ).setIndexNames((0, "HH3C-IP-ADDRESS-MIB", "hh3cIpAddrReadIfIndex"), (0, "HH3C-IP-ADDRESS-MIB", "hh3cIpAddrReadAddrType"), (0, "HH3C-IP-ADDRESS-MIB", "hh3cIpAddrReadAddr"))
if mibBuilder.loadTexts: hh3cIpAddrReadEntry.setStatus('current')
hh3cIpAddrReadIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 67, 1, 1, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: hh3cIpAddrReadIfIndex.setStatus('current')
hh3cIpAddrReadAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 67, 1, 1, 2, 1, 2), InetAddressType())
if mibBuilder.loadTexts: hh3cIpAddrReadAddrType.setStatus('current')
hh3cIpAddrReadAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 67, 1, 1, 2, 1, 3), InetAddress())
if mibBuilder.loadTexts: hh3cIpAddrReadAddr.setStatus('current')
hh3cIpAddrReadMask = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 67, 1, 1, 2, 1, 4), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cIpAddrReadMask.setStatus('current')
hh3cIpAddrReadSourceType = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 67, 1, 1, 2, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("assignedIp", 1), ("cluster", 2), ("dhcp", 3), ("bootp", 4), ("negotiate", 5), ("unnumbered", 6), ("vrrp", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cIpAddrReadSourceType.setStatus('current')
hh3cIpAddrReadCatalog = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 67, 1, 1, 2, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("primary", 1), ("sub", 2), ("cluster", 3), ("vrrp", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cIpAddrReadCatalog.setStatus('current')
hh3cIpv4AddrTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 2, 67, 1, 1, 3), )
if mibBuilder.loadTexts: hh3cIpv4AddrTable.setStatus('current')
hh3cIpv4AddrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 2, 67, 1, 1, 3, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: hh3cIpv4AddrEntry.setStatus('current')
hh3cIpv4AddrAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 67, 1, 1, 3, 1, 1), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cIpv4AddrAddr.setStatus('current')
hh3cIpv4AddrMask = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 67, 1, 1, 3, 1, 2), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cIpv4AddrMask.setStatus('current')
hh3cIpv4AddrRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 67, 1, 1, 3, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cIpv4AddrRowStatus.setStatus('current')
hh3cIpAddrNotify = MibIdentifier((1, 3, 6, 1, 4, 1, 25506, 2, 67, 2))
hh3cIpAddrNotifyScalarObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 25506, 2, 67, 2, 1))
hh3cIpAddrNotifyIfIndex = MibScalar((1, 3, 6, 1, 4, 1, 25506, 2, 67, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hh3cIpAddrNotifyIfIndex.setStatus('current')
hh3cIpAddrOldIpAddress = MibScalar((1, 3, 6, 1, 4, 1, 25506, 2, 67, 2, 1, 2), InetAddress()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hh3cIpAddrOldIpAddress.setStatus('current')
hh3cIpAddrNewIpAddress = MibScalar((1, 3, 6, 1, 4, 1, 25506, 2, 67, 2, 1, 3), InetAddress()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hh3cIpAddrNewIpAddress.setStatus('current')
hh3cIpAddrNotifyObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 25506, 2, 67, 2, 2))
hh3cIpAddrNotifyObjectsPrefix = MibIdentifier((1, 3, 6, 1, 4, 1, 25506, 2, 67, 2, 2, 0))
hh3cIpAddressChangeNotify = NotificationType((1, 3, 6, 1, 4, 1, 25506, 2, 67, 2, 2, 0, 1)).setObjects(("HH3C-IP-ADDRESS-MIB", "hh3cIpAddrNotifyIfIndex"), ("HH3C-IP-ADDRESS-MIB", "hh3cIpAddrOldIpAddress"), ("HH3C-IP-ADDRESS-MIB", "hh3cIpAddrNewIpAddress"))
if mibBuilder.loadTexts: hh3cIpAddressChangeNotify.setStatus('current')
mibBuilder.exportSymbols("HH3C-IP-ADDRESS-MIB", hh3cIpAddrReadAddr=hh3cIpAddrReadAddr, hh3cIpAddrOldIpAddress=hh3cIpAddrOldIpAddress, hh3cIpAddrSetAddr=hh3cIpAddrSetAddr, hh3cIpAddrSetAddrType=hh3cIpAddrSetAddrType, hh3cIpAddrSetSourceType=hh3cIpAddrSetSourceType, hh3cIpAddrReadAddrType=hh3cIpAddrReadAddrType, hh3cIpAddressChangeNotify=hh3cIpAddressChangeNotify, hh3cIpAddrMIB=hh3cIpAddrMIB, hh3cIpAddrSetTable=hh3cIpAddrSetTable, hh3cIpv4AddrRowStatus=hh3cIpv4AddrRowStatus, hh3cIpAddrReadSourceType=hh3cIpAddrReadSourceType, hh3cIpAddrNewIpAddress=hh3cIpAddrNewIpAddress, hh3cIpAddrSetEntry=hh3cIpAddrSetEntry, hh3cIpAddrNotify=hh3cIpAddrNotify, hh3cIpAddrReadEntry=hh3cIpAddrReadEntry, hh3cIpv4AddrMask=hh3cIpv4AddrMask, hh3cIpAddrNotifyObjectsPrefix=hh3cIpAddrNotifyObjectsPrefix, hh3cIpv4AddrTable=hh3cIpv4AddrTable, hh3cIpAddressObjects=hh3cIpAddressObjects, hh3cIpv4AddrAddr=hh3cIpv4AddrAddr, hh3cIpAddrNotifyIfIndex=hh3cIpAddrNotifyIfIndex, hh3cIpAddrSetCatalog=hh3cIpAddrSetCatalog, hh3cIpAddressConfig=hh3cIpAddressConfig, PYSNMP_MODULE_ID=hh3cIpAddrMIB, hh3cIpAddrSetRowStatus=hh3cIpAddrSetRowStatus, hh3cIpAddrReadCatalog=hh3cIpAddrReadCatalog, hh3cIpAddrNotifyObjects=hh3cIpAddrNotifyObjects, hh3cIpAddrReadTable=hh3cIpAddrReadTable, hh3cIpAddrNotifyScalarObjects=hh3cIpAddrNotifyScalarObjects, hh3cIpAddrSetMask=hh3cIpAddrSetMask, hh3cIpAddrSetIfIndex=hh3cIpAddrSetIfIndex, hh3cIpAddrReadIfIndex=hh3cIpAddrReadIfIndex, hh3cIpv4AddrEntry=hh3cIpv4AddrEntry, hh3cIpAddrReadMask=hh3cIpAddrReadMask)
