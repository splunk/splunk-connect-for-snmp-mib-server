#
# PySNMP MIB module ALCATEL-IND1-PCAM-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/ALCATEL-IND1-PCAM-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:03:13 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
hardentIND1Pcam, = mibBuilder.importSymbols("ALCATEL-IND1-BASE", "hardentIND1Pcam")
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ConstraintsIntersection, ValueSizeConstraint, ConstraintsUnion, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ConstraintsIntersection", "ValueSizeConstraint", "ConstraintsUnion", "ValueRangeConstraint")
ObjectGroup, ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "ModuleCompliance", "NotificationGroup")
ObjectIdentity, Unsigned32, Bits, Gauge32, MibIdentifier, Counter32, ModuleIdentity, Counter64, TimeTicks, NotificationType, IpAddress, iso, MibScalar, MibTable, MibTableRow, MibTableColumn, Integer32 = mibBuilder.importSymbols("SNMPv2-SMI", "ObjectIdentity", "Unsigned32", "Bits", "Gauge32", "MibIdentifier", "Counter32", "ModuleIdentity", "Counter64", "TimeTicks", "NotificationType", "IpAddress", "iso", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Integer32")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
alcatelIND1PCAMMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 6486, 801, 1, 1, 1, 4, 1))
alcatelIND1PCAMMIB.setRevisions(('2007-04-03 00:00',))
if mibBuilder.loadTexts: alcatelIND1PCAMMIB.setLastUpdated('200704030000Z')
if mibBuilder.loadTexts: alcatelIND1PCAMMIB.setOrganization('Alcatel-Lucent')
alcatelIND1PCAMMIBObjects = ObjectIdentity((1, 3, 6, 1, 4, 1, 6486, 801, 1, 1, 1, 4, 1, 1))
if mibBuilder.loadTexts: alcatelIND1PCAMMIBObjects.setStatus('current')
alcatelIND1PCAMMIBConformance = ObjectIdentity((1, 3, 6, 1, 4, 1, 6486, 801, 1, 1, 1, 4, 1, 2))
if mibBuilder.loadTexts: alcatelIND1PCAMMIBConformance.setStatus('current')
alcatelIND1PCAMMIBGroups = ObjectIdentity((1, 3, 6, 1, 4, 1, 6486, 801, 1, 1, 1, 4, 1, 2, 1))
if mibBuilder.loadTexts: alcatelIND1PCAMMIBGroups.setStatus('current')
alcatelIND1PCAMMIBCompliances = ObjectIdentity((1, 3, 6, 1, 4, 1, 6486, 801, 1, 1, 1, 4, 1, 2, 2))
if mibBuilder.loadTexts: alcatelIND1PCAMMIBCompliances.setStatus('current')
class CoroL3HashFunction(TextualConvention, OctetString):
    status = 'current'
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(10, 10)
    fixedLength = 10

alaCoroL3HrePerModeTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 1, 1, 4, 1, 1, 1), )
if mibBuilder.loadTexts: alaCoroL3HrePerModeTable.setStatus('current')
alaCoroL3HrePerModeTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 1, 1, 4, 1, 1, 1, 1), ).setIndexNames((0, "ALCATEL-IND1-PCAM-MIB", "alaCoroL3HrePerModeSlotNumber"), (0, "ALCATEL-IND1-PCAM-MIB", "alaCoroL3HrePerModeSliceNumber"), (0, "ALCATEL-IND1-PCAM-MIB", "alaCoroL3HrePerModeModeNumber"))
if mibBuilder.loadTexts: alaCoroL3HrePerModeTableEntry.setStatus('current')
alaCoroL3HrePerModeSlotNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 1, 1, 4, 1, 1, 1, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaCoroL3HrePerModeSlotNumber.setStatus('current')
alaCoroL3HrePerModeSliceNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 1, 1, 4, 1, 1, 1, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaCoroL3HrePerModeSliceNumber.setStatus('current')
alaCoroL3HrePerModeModeNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 1, 1, 4, 1, 1, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 3))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaCoroL3HrePerModeModeNumber.setStatus('current')
alaCoroL3HreModeHashTableSize = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 1, 1, 4, 1, 1, 1, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaCoroL3HreModeHashTableSize.setStatus('current')
alaCoroL3HreModeHashEntriesInUse = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 1, 1, 4, 1, 1, 1, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaCoroL3HreModeHashEntriesInUse.setStatus('current')
alaCoroL3HreModeCollEntriesInUse = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 1, 1, 4, 1, 1, 1, 1, 6), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaCoroL3HreModeCollEntriesInUse.setStatus('current')
alaCoroL3HreModeCurrentHashFunction = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 1, 1, 4, 1, 1, 1, 1, 7), CoroL3HashFunction()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaCoroL3HreModeCurrentHashFunction.setStatus('current')
alaCoroL3HreMaxCollChainLen = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 1, 1, 4, 1, 1, 1, 1, 8), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaCoroL3HreMaxCollChainLen.setStatus('current')
alaCoroL3HreAvgCollChainLen = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 1, 1, 4, 1, 1, 1, 1, 9), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaCoroL3HreAvgCollChainLen.setStatus('current')
alaCoroL3HrePerCoronadoStatsTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 1, 1, 4, 1, 1, 2), )
if mibBuilder.loadTexts: alaCoroL3HrePerCoronadoStatsTable.setStatus('current')
alaCoroL3HrePerCoronadoStatsTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 1, 1, 4, 1, 1, 2, 1), ).setIndexNames((0, "ALCATEL-IND1-PCAM-MIB", "alaCoroL3HreSlotNumber"), (0, "ALCATEL-IND1-PCAM-MIB", "alaCoroL3HreSliceNumber"))
if mibBuilder.loadTexts: alaCoroL3HrePerCoronadoStatsTableEntry.setStatus('current')
alaCoroL3HreSlotNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 1, 1, 4, 1, 1, 2, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaCoroL3HreSlotNumber.setStatus('current')
alaCoroL3HreSliceNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 1, 1, 4, 1, 1, 2, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaCoroL3HreSliceNumber.setStatus('current')
alaCoroL3HreRouteCacheEntriesTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 1, 1, 4, 1, 1, 2, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaCoroL3HreRouteCacheEntriesTotal.setStatus('current')
alaCoroL3HreRouteCacheEntriesInUse = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 1, 1, 4, 1, 1, 2, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaCoroL3HreRouteCacheEntriesInUse.setStatus('current')
alaCoroL3HreIpPacketsReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 1, 1, 4, 1, 1, 2, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaCoroL3HreIpPacketsReceived.setStatus('current')
alaCoroL3HreIpBytesReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 1, 1, 4, 1, 1, 2, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaCoroL3HreIpBytesReceived.setStatus('current')
alaCoroL3HreIpPacketsForwarded = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 1, 1, 4, 1, 1, 2, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaCoroL3HreIpPacketsForwarded.setStatus('current')
alaCoroL3HreIpBytesForwarded = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 1, 1, 4, 1, 1, 2, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaCoroL3HreIpBytesForwarded.setStatus('current')
alaCoroL3HreIpPacketsDiscarded = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 1, 1, 4, 1, 1, 2, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaCoroL3HreIpPacketsDiscarded.setStatus('current')
alaCoroL3HreIpBytesDiscarded = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 1, 1, 4, 1, 1, 2, 1, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaCoroL3HreIpBytesDiscarded.setStatus('current')
alaCoroL3HreIpPacketsFragmented = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 1, 1, 4, 1, 1, 2, 1, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaCoroL3HreIpPacketsFragmented.setStatus('current')
alaCoroL3HreIpPacketsFragsGenerated = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 1, 1, 4, 1, 1, 2, 1, 12), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaCoroL3HreIpPacketsFragsGenerated.setStatus('current')
alaCoroL3HreIpPacketsFailedToFrag = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 1, 1, 4, 1, 1, 2, 1, 13), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaCoroL3HreIpPacketsFailedToFrag.setStatus('current')
alaCoroL3HreIpxPacketsReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 1, 1, 4, 1, 1, 2, 1, 14), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaCoroL3HreIpxPacketsReceived.setStatus('current')
alaCoroL3HreIpxBytesReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 1, 1, 4, 1, 1, 2, 1, 15), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaCoroL3HreIpxBytesReceived.setStatus('current')
alaCoroL3HreIpxPacketsForwarded = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 1, 1, 4, 1, 1, 2, 1, 16), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaCoroL3HreIpxPacketsForwarded.setStatus('current')
alaCoroL3HreIpxBytesForwarded = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 1, 1, 4, 1, 1, 2, 1, 17), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaCoroL3HreIpxBytesForwarded.setStatus('current')
alaCoroL3HreIpxPacketsDiscarded = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 1, 1, 4, 1, 1, 2, 1, 18), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaCoroL3HreIpxPacketsDiscarded.setStatus('current')
alaCoroL3HreIpxBytesDiscarded = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 1, 1, 4, 1, 1, 2, 1, 19), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaCoroL3HreIpxBytesDiscarded.setStatus('current')
alaCoroL3HreUpdateChanges = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 1, 1, 4, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("apply", 0), ("clear", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaCoroL3HreUpdateChanges.setStatus('current')
alaCoroL3HreChangeTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 1, 1, 4, 1, 1, 4), )
if mibBuilder.loadTexts: alaCoroL3HreChangeTable.setStatus('current')
alaCoroL3HreChangeTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 1, 1, 4, 1, 1, 4, 1), ).setIndexNames((0, "ALCATEL-IND1-PCAM-MIB", "alaCoroL3HreChangeSlotNumber"), (0, "ALCATEL-IND1-PCAM-MIB", "alaCoroL3HreChangeSliceNumber"), (0, "ALCATEL-IND1-PCAM-MIB", "alaCoroL3HreChangeModeNumber"))
if mibBuilder.loadTexts: alaCoroL3HreChangeTableEntry.setStatus('current')
alaCoroL3HreChangeSlotNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 1, 1, 4, 1, 1, 4, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaCoroL3HreChangeSlotNumber.setStatus('current')
alaCoroL3HreChangeSliceNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 1, 1, 4, 1, 1, 4, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaCoroL3HreChangeSliceNumber.setStatus('current')
alaCoroL3HreChangeModeNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 1, 1, 4, 1, 1, 4, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 3))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaCoroL3HreChangeModeNumber.setStatus('current')
alaCoroL3HreChangeHashTableSize = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 1, 1, 4, 1, 1, 4, 1, 4), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaCoroL3HreChangeHashTableSize.setStatus('current')
alaCoroL3HreChangeHashFunction = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 1, 1, 4, 1, 1, 4, 1, 5), CoroL3HashFunction()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaCoroL3HreChangeHashFunction.setStatus('current')
alaCoroL3HreChangeClear = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 1, 1, 4, 1, 1, 4, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0))).clone(namedValues=NamedValues(("clear", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaCoroL3HreChangeClear.setStatus('current')
alaCoroL3HrePerModeObjects = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 1, 1, 4, 1, 2, 1, 1)).setObjects(("ALCATEL-IND1-PCAM-MIB", "alaCoroL3HrePerModeSlotNumber"), ("ALCATEL-IND1-PCAM-MIB", "alaCoroL3HrePerModeSliceNumber"), ("ALCATEL-IND1-PCAM-MIB", "alaCoroL3HrePerModeModeNumber"), ("ALCATEL-IND1-PCAM-MIB", "alaCoroL3HreModeHashTableSize"), ("ALCATEL-IND1-PCAM-MIB", "alaCoroL3HreModeHashEntriesInUse"), ("ALCATEL-IND1-PCAM-MIB", "alaCoroL3HreModeCollEntriesInUse"), ("ALCATEL-IND1-PCAM-MIB", "alaCoroL3HreModeCurrentHashFunction"), ("ALCATEL-IND1-PCAM-MIB", "alaCoroL3HreMaxCollChainLen"), ("ALCATEL-IND1-PCAM-MIB", "alaCoroL3HreAvgCollChainLen"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaCoroL3HrePerModeObjects = alaCoroL3HrePerModeObjects.setStatus('current')
alaCoroL3HrePerCoronadoObjects = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 1, 1, 4, 1, 2, 1, 2)).setObjects(("ALCATEL-IND1-PCAM-MIB", "alaCoroL3HreSlotNumber"), ("ALCATEL-IND1-PCAM-MIB", "alaCoroL3HreSliceNumber"), ("ALCATEL-IND1-PCAM-MIB", "alaCoroL3HreRouteCacheEntriesTotal"), ("ALCATEL-IND1-PCAM-MIB", "alaCoroL3HreRouteCacheEntriesInUse"), ("ALCATEL-IND1-PCAM-MIB", "alaCoroL3HreIpPacketsReceived"), ("ALCATEL-IND1-PCAM-MIB", "alaCoroL3HreIpBytesReceived"), ("ALCATEL-IND1-PCAM-MIB", "alaCoroL3HreIpPacketsForwarded"), ("ALCATEL-IND1-PCAM-MIB", "alaCoroL3HreIpBytesForwarded"), ("ALCATEL-IND1-PCAM-MIB", "alaCoroL3HreIpPacketsDiscarded"), ("ALCATEL-IND1-PCAM-MIB", "alaCoroL3HreIpBytesDiscarded"), ("ALCATEL-IND1-PCAM-MIB", "alaCoroL3HreIpPacketsFragmented"), ("ALCATEL-IND1-PCAM-MIB", "alaCoroL3HreIpPacketsFragsGenerated"), ("ALCATEL-IND1-PCAM-MIB", "alaCoroL3HreIpPacketsFailedToFrag"), ("ALCATEL-IND1-PCAM-MIB", "alaCoroL3HreIpxPacketsReceived"), ("ALCATEL-IND1-PCAM-MIB", "alaCoroL3HreIpxBytesReceived"), ("ALCATEL-IND1-PCAM-MIB", "alaCoroL3HreIpxPacketsForwarded"), ("ALCATEL-IND1-PCAM-MIB", "alaCoroL3HreIpxBytesForwarded"), ("ALCATEL-IND1-PCAM-MIB", "alaCoroL3HreIpxPacketsDiscarded"), ("ALCATEL-IND1-PCAM-MIB", "alaCoroL3HreIpxBytesDiscarded"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaCoroL3HrePerCoronadoObjects = alaCoroL3HrePerCoronadoObjects.setStatus('current')
alaCoroL3HreChangeObjects = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 1, 1, 4, 1, 2, 1, 3)).setObjects(("ALCATEL-IND1-PCAM-MIB", "alaCoroL3HreUpdateChanges"), ("ALCATEL-IND1-PCAM-MIB", "alaCoroL3HreChangeSlotNumber"), ("ALCATEL-IND1-PCAM-MIB", "alaCoroL3HreChangeSliceNumber"), ("ALCATEL-IND1-PCAM-MIB", "alaCoroL3HreChangeModeNumber"), ("ALCATEL-IND1-PCAM-MIB", "alaCoroL3HreChangeHashTableSize"), ("ALCATEL-IND1-PCAM-MIB", "alaCoroL3HreChangeHashFunction"), ("ALCATEL-IND1-PCAM-MIB", "alaCoroL3HreChangeClear"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaCoroL3HreChangeObjects = alaCoroL3HreChangeObjects.setStatus('current')
alcatelInd1PCAMMIBCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 6486, 801, 1, 1, 1, 4, 1, 2, 2, 1)).setObjects(("ALCATEL-IND1-PCAM-MIB", "alaCoroL3HrePerModeObjects"), ("ALCATEL-IND1-PCAM-MIB", "alaCoroL3HrePerCoronadoObjects"), ("ALCATEL-IND1-PCAM-MIB", "alaCoroL3HreChangeObjects"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alcatelInd1PCAMMIBCompliance = alcatelInd1PCAMMIBCompliance.setStatus('current')
mibBuilder.exportSymbols("ALCATEL-IND1-PCAM-MIB", alaCoroL3HrePerModeTableEntry=alaCoroL3HrePerModeTableEntry, PYSNMP_MODULE_ID=alcatelIND1PCAMMIB, alaCoroL3HreIpxPacketsForwarded=alaCoroL3HreIpxPacketsForwarded, alaCoroL3HreChangeSlotNumber=alaCoroL3HreChangeSlotNumber, alaCoroL3HreIpxBytesForwarded=alaCoroL3HreIpxBytesForwarded, alaCoroL3HreIpPacketsForwarded=alaCoroL3HreIpPacketsForwarded, alaCoroL3HrePerModeSlotNumber=alaCoroL3HrePerModeSlotNumber, alaCoroL3HreChangeHashFunction=alaCoroL3HreChangeHashFunction, alaCoroL3HrePerCoronadoStatsTableEntry=alaCoroL3HrePerCoronadoStatsTableEntry, alaCoroL3HreChangeHashTableSize=alaCoroL3HreChangeHashTableSize, alaCoroL3HreRouteCacheEntriesInUse=alaCoroL3HreRouteCacheEntriesInUse, alaCoroL3HreAvgCollChainLen=alaCoroL3HreAvgCollChainLen, alaCoroL3HreChangeModeNumber=alaCoroL3HreChangeModeNumber, alaCoroL3HreIpPacketsDiscarded=alaCoroL3HreIpPacketsDiscarded, alaCoroL3HrePerModeSliceNumber=alaCoroL3HrePerModeSliceNumber, alaCoroL3HreIpxBytesDiscarded=alaCoroL3HreIpxBytesDiscarded, alaCoroL3HreChangeTableEntry=alaCoroL3HreChangeTableEntry, alcatelIND1PCAMMIBCompliances=alcatelIND1PCAMMIBCompliances, alaCoroL3HreChangeSliceNumber=alaCoroL3HreChangeSliceNumber, CoroL3HashFunction=CoroL3HashFunction, alaCoroL3HreIpPacketsFailedToFrag=alaCoroL3HreIpPacketsFailedToFrag, alaCoroL3HreChangeTable=alaCoroL3HreChangeTable, alcatelIND1PCAMMIBObjects=alcatelIND1PCAMMIBObjects, alcatelIND1PCAMMIBGroups=alcatelIND1PCAMMIBGroups, alaCoroL3HreIpBytesDiscarded=alaCoroL3HreIpBytesDiscarded, alaCoroL3HreIpxPacketsReceived=alaCoroL3HreIpxPacketsReceived, alaCoroL3HreUpdateChanges=alaCoroL3HreUpdateChanges, alaCoroL3HreChangeObjects=alaCoroL3HreChangeObjects, alcatelInd1PCAMMIBCompliance=alcatelInd1PCAMMIBCompliance, alcatelIND1PCAMMIBConformance=alcatelIND1PCAMMIBConformance, alaCoroL3HreIpPacketsFragsGenerated=alaCoroL3HreIpPacketsFragsGenerated, alaCoroL3HreSlotNumber=alaCoroL3HreSlotNumber, alaCoroL3HrePerCoronadoStatsTable=alaCoroL3HrePerCoronadoStatsTable, alaCoroL3HreSliceNumber=alaCoroL3HreSliceNumber, alaCoroL3HreModeCurrentHashFunction=alaCoroL3HreModeCurrentHashFunction, alcatelIND1PCAMMIB=alcatelIND1PCAMMIB, alaCoroL3HreChangeClear=alaCoroL3HreChangeClear, alaCoroL3HrePerModeObjects=alaCoroL3HrePerModeObjects, alaCoroL3HrePerModeTable=alaCoroL3HrePerModeTable, alaCoroL3HreModeHashTableSize=alaCoroL3HreModeHashTableSize, alaCoroL3HreMaxCollChainLen=alaCoroL3HreMaxCollChainLen, alaCoroL3HreIpxBytesReceived=alaCoroL3HreIpxBytesReceived, alaCoroL3HreIpxPacketsDiscarded=alaCoroL3HreIpxPacketsDiscarded, alaCoroL3HreIpPacketsReceived=alaCoroL3HreIpPacketsReceived, alaCoroL3HreModeCollEntriesInUse=alaCoroL3HreModeCollEntriesInUse, alaCoroL3HreRouteCacheEntriesTotal=alaCoroL3HreRouteCacheEntriesTotal, alaCoroL3HreIpPacketsFragmented=alaCoroL3HreIpPacketsFragmented, alaCoroL3HreModeHashEntriesInUse=alaCoroL3HreModeHashEntriesInUse, alaCoroL3HreIpBytesReceived=alaCoroL3HreIpBytesReceived, alaCoroL3HrePerModeModeNumber=alaCoroL3HrePerModeModeNumber, alaCoroL3HrePerCoronadoObjects=alaCoroL3HrePerCoronadoObjects, alaCoroL3HreIpBytesForwarded=alaCoroL3HreIpBytesForwarded)
