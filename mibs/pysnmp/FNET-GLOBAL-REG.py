#
# PySNMP MIB module FNET-GLOBAL-REG (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/FNET-GLOBAL-REG
# Produced by pysmi-0.3.4 at Mon Apr 29 19:00:28 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ConstraintsUnion, ConstraintsIntersection, SingleValueConstraint, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ConstraintsUnion", "ConstraintsIntersection", "SingleValueConstraint", "ValueSizeConstraint")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
iso, enterprises, TimeTicks, MibIdentifier, ObjectIdentity, NotificationType, Bits, Counter64, MibScalar, MibTable, MibTableRow, MibTableColumn, IpAddress, Unsigned32, Counter32, Gauge32, Integer32, ModuleIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "iso", "enterprises", "TimeTicks", "MibIdentifier", "ObjectIdentity", "NotificationType", "Bits", "Counter64", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "IpAddress", "Unsigned32", "Counter32", "Gauge32", "Integer32", "ModuleIdentity")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
fnet = MibIdentifier((1, 3, 6, 1, 4, 1, 1226))
fnetReg = MibIdentifier((1, 3, 6, 1, 4, 1, 1226, 1))
fnetOneTouch = MibIdentifier((1, 3, 6, 1, 4, 1, 1226, 1, 2))
fnetOptiView = MibIdentifier((1, 3, 6, 1, 4, 1, 1226, 1, 3))
fnetOvIna = MibIdentifier((1, 3, 6, 1, 4, 1, 1226, 1, 3, 1))
fnetOvWga = MibIdentifier((1, 3, 6, 1, 4, 1, 1226, 1, 3, 2))
fnetOvLa = MibIdentifier((1, 3, 6, 1, 4, 1, 1226, 1, 3, 3))
fnetOvWanFiber = MibIdentifier((1, 3, 6, 1, 4, 1, 1226, 1, 3, 4))
fnetOvWanCopper = MibIdentifier((1, 3, 6, 1, 4, 1, 1226, 1, 3, 5))
fnetTrafficAnalyzer = MibIdentifier((1, 3, 6, 1, 4, 1, 1226, 1, 6))
fnetLinkAnalyzer = MibIdentifier((1, 3, 6, 1, 4, 1, 1226, 1, 8))
fnetProtocolExpert = MibIdentifier((1, 3, 6, 1, 4, 1, 1226, 1, 9))
fnetLanMeter = MibIdentifier((1, 3, 6, 1, 4, 1, 1226, 1, 685))
fnetGeneric = MibIdentifier((1, 3, 6, 1, 4, 1, 1226, 2))
fnetOptiViewGeneric = MibIdentifier((1, 3, 6, 1, 4, 1, 1226, 2, 1))
fnetProduct = MibIdentifier((1, 3, 6, 1, 4, 1, 1226, 3))
fnetOptiViewProduct = MibIdentifier((1, 3, 6, 1, 4, 1, 1226, 3, 1))
fnetCapabilities = MibIdentifier((1, 3, 6, 1, 4, 1, 1226, 4))
fnetRequirements = MibIdentifier((1, 3, 6, 1, 4, 1, 1226, 5))
fnetExperimental = MibIdentifier((1, 3, 6, 1, 4, 1, 1226, 6))
mibBuilder.exportSymbols("FNET-GLOBAL-REG", fnetOvWanCopper=fnetOvWanCopper, fnetOptiView=fnetOptiView, fnetProduct=fnetProduct, fnetOvWanFiber=fnetOvWanFiber, fnetReg=fnetReg, fnetLinkAnalyzer=fnetLinkAnalyzer, fnet=fnet, fnetRequirements=fnetRequirements, fnetLanMeter=fnetLanMeter, fnetGeneric=fnetGeneric, fnetOptiViewGeneric=fnetOptiViewGeneric, fnetOvWga=fnetOvWga, fnetExperimental=fnetExperimental, fnetOptiViewProduct=fnetOptiViewProduct, fnetOvIna=fnetOvIna, fnetOvLa=fnetOvLa, fnetOneTouch=fnetOneTouch, fnetProtocolExpert=fnetProtocolExpert, fnetCapabilities=fnetCapabilities, fnetTrafficAnalyzer=fnetTrafficAnalyzer)
