#
# PySNMP MIB module XEDIA-BGP-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/XEDIA-BGP-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 21:36:06 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ConstraintsUnion, SingleValueConstraint, ConstraintsIntersection, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ConstraintsUnion", "SingleValueConstraint", "ConstraintsIntersection", "ValueRangeConstraint")
bgp4PathAttrEntry, bgpPeerEntry = mibBuilder.importSymbols("BGP4-MIB", "bgp4PathAttrEntry", "bgpPeerEntry")
ObjectGroup, ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "ModuleCompliance", "NotificationGroup")
iso, ModuleIdentity, ObjectIdentity, Unsigned32, MibIdentifier, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter64, Gauge32, NotificationType, IpAddress, Integer32, Bits, Counter32, TimeTicks = mibBuilder.importSymbols("SNMPv2-SMI", "iso", "ModuleIdentity", "ObjectIdentity", "Unsigned32", "MibIdentifier", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter64", "Gauge32", "NotificationType", "IpAddress", "Integer32", "Bits", "Counter32", "TimeTicks")
TextualConvention, DisplayString, RowStatus, TruthValue = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString", "RowStatus", "TruthValue")
xediaMibs, = mibBuilder.importSymbols("XEDIA-REG", "xediaMibs")
xediaBgpMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 838, 3, 9))
if mibBuilder.loadTexts: xediaBgpMIB.setLastUpdated('9711212155Z')
if mibBuilder.loadTexts: xediaBgpMIB.setOrganization('Xedia Corp.')
xbgpObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 838, 3, 9, 1))
xbgpConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 838, 3, 9, 2))
xbgpAdminStatus = MibScalar((1, 3, 6, 1, 4, 1, 838, 3, 9, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: xbgpAdminStatus.setStatus('current')
xbgpOperStatus = MibScalar((1, 3, 6, 1, 4, 1, 838, 3, 9, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("up", 1), ("down", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: xbgpOperStatus.setStatus('current')
xbgpReflection = MibScalar((1, 3, 6, 1, 4, 1, 838, 3, 9, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("full", 1), ("noClientToClient", 2), ("none", 3))).clone('none')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: xbgpReflection.setStatus('current')
xbgpClusterId = MibScalar((1, 3, 6, 1, 4, 1, 838, 3, 9, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: xbgpClusterId.setStatus('current')
xbgpConfiguredMaxRoutes = MibScalar((1, 3, 6, 1, 4, 1, 838, 3, 9, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 500000)).clone(81920)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: xbgpConfiguredMaxRoutes.setStatus('current')
xbgpOperationalMaxRoutes = MibScalar((1, 3, 6, 1, 4, 1, 838, 3, 9, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 500000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: xbgpOperationalMaxRoutes.setStatus('current')
xbgpConfiguredMaxPaths = MibScalar((1, 3, 6, 1, 4, 1, 838, 3, 9, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100000)).clone(20480)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: xbgpConfiguredMaxPaths.setStatus('current')
xbgpOperationalMaxPaths = MibScalar((1, 3, 6, 1, 4, 1, 838, 3, 9, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: xbgpOperationalMaxPaths.setStatus('current')
xbgpConfiguredPeers = MibScalar((1, 3, 6, 1, 4, 1, 838, 3, 9, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xbgpConfiguredPeers.setStatus('current')
xbgpEstablishedPeers = MibScalar((1, 3, 6, 1, 4, 1, 838, 3, 9, 1, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xbgpEstablishedPeers.setStatus('current')
xBgpPeerTable = MibTable((1, 3, 6, 1, 4, 1, 838, 3, 9, 1, 10), )
if mibBuilder.loadTexts: xBgpPeerTable.setStatus('current')
xBgpPeerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 838, 3, 9, 1, 10, 1), )
bgpPeerEntry.registerAugmentions(("XEDIA-BGP-MIB", "xBgpPeerEntry"))
xBgpPeerEntry.setIndexNames(*bgpPeerEntry.getIndexNames())
if mibBuilder.loadTexts: xBgpPeerEntry.setStatus('current')
xbgpPeerRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 838, 3, 9, 1, 10, 1, 1), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: xbgpPeerRowStatus.setStatus('current')
xbgpPeerReflectionClient = MibTableColumn((1, 3, 6, 1, 4, 1, 838, 3, 9, 1, 10, 1, 2), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: xbgpPeerReflectionClient.setStatus('current')
xBgp4PathAttrTable = MibTable((1, 3, 6, 1, 4, 1, 838, 3, 9, 1, 11), )
if mibBuilder.loadTexts: xBgp4PathAttrTable.setStatus('current')
xBgp4PathAttrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 838, 3, 9, 1, 11, 1), )
bgp4PathAttrEntry.registerAugmentions(("XEDIA-BGP-MIB", "xBgp4PathAttrEntry"))
xBgp4PathAttrEntry.setIndexNames(*bgp4PathAttrEntry.getIndexNames())
if mibBuilder.loadTexts: xBgp4PathAttrEntry.setStatus('current')
xbgp4PathAttrCommunity = MibTableColumn((1, 3, 6, 1, 4, 1, 838, 3, 9, 1, 11, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: xbgp4PathAttrCommunity.setStatus('current')
xbgp4PathAttrOrigId = MibTableColumn((1, 3, 6, 1, 4, 1, 838, 3, 9, 1, 11, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xbgp4PathAttrOrigId.setStatus('current')
xbgp4PathAttrClusterList = MibTableColumn((1, 3, 6, 1, 4, 1, 838, 3, 9, 1, 11, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: xbgp4PathAttrClusterList.setStatus('current')
xbgp4PathAttrDistance = MibTableColumn((1, 3, 6, 1, 4, 1, 838, 3, 9, 1, 11, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: xbgp4PathAttrDistance.setStatus('current')
xbgpCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 838, 3, 9, 2, 1))
xbgpGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 838, 3, 9, 2, 2))
xbgpCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 838, 3, 9, 2, 1, 1)).setObjects(("XEDIA-BGP-MIB", "xbgpAllGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    xbgpCompliance = xbgpCompliance.setStatus('current')
xbgpAllGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 838, 3, 9, 2, 2, 1)).setObjects(("XEDIA-BGP-MIB", "xbgpAdminStatus"), ("XEDIA-BGP-MIB", "xbgpOperStatus"), ("XEDIA-BGP-MIB", "xbgpReflection"), ("XEDIA-BGP-MIB", "xbgpClusterId"), ("XEDIA-BGP-MIB", "xbgpConfiguredMaxRoutes"), ("XEDIA-BGP-MIB", "xbgpOperationalMaxRoutes"), ("XEDIA-BGP-MIB", "xbgpConfiguredMaxPaths"), ("XEDIA-BGP-MIB", "xbgpOperationalMaxPaths"), ("XEDIA-BGP-MIB", "xbgpConfiguredPeers"), ("XEDIA-BGP-MIB", "xbgpEstablishedPeers"), ("XEDIA-BGP-MIB", "xbgpPeerRowStatus"), ("XEDIA-BGP-MIB", "xbgpPeerReflectionClient"), ("XEDIA-BGP-MIB", "xbgp4PathAttrCommunity"), ("XEDIA-BGP-MIB", "xbgp4PathAttrOrigId"), ("XEDIA-BGP-MIB", "xbgp4PathAttrClusterList"), ("XEDIA-BGP-MIB", "xbgp4PathAttrDistance"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    xbgpAllGroup = xbgpAllGroup.setStatus('current')
mibBuilder.exportSymbols("XEDIA-BGP-MIB", xbgpConfiguredMaxPaths=xbgpConfiguredMaxPaths, xbgpCompliances=xbgpCompliances, xBgp4PathAttrEntry=xBgp4PathAttrEntry, xbgpReflection=xbgpReflection, xbgpAdminStatus=xbgpAdminStatus, xbgpPeerRowStatus=xbgpPeerRowStatus, xbgpEstablishedPeers=xbgpEstablishedPeers, xbgpConformance=xbgpConformance, xbgpCompliance=xbgpCompliance, xbgpOperStatus=xbgpOperStatus, xbgpOperationalMaxPaths=xbgpOperationalMaxPaths, xbgpGroups=xbgpGroups, xbgpConfiguredPeers=xbgpConfiguredPeers, xbgpConfiguredMaxRoutes=xbgpConfiguredMaxRoutes, xBgp4PathAttrTable=xBgp4PathAttrTable, xbgp4PathAttrDistance=xbgp4PathAttrDistance, xbgpObjects=xbgpObjects, PYSNMP_MODULE_ID=xediaBgpMIB, xBgpPeerEntry=xBgpPeerEntry, xbgpOperationalMaxRoutes=xbgpOperationalMaxRoutes, xBgpPeerTable=xBgpPeerTable, xbgp4PathAttrOrigId=xbgp4PathAttrOrigId, xbgp4PathAttrCommunity=xbgp4PathAttrCommunity, xbgpAllGroup=xbgpAllGroup, xbgpPeerReflectionClient=xbgpPeerReflectionClient, xediaBgpMIB=xediaBgpMIB, xbgp4PathAttrClusterList=xbgp4PathAttrClusterList, xbgpClusterId=xbgpClusterId)
