#
# PySNMP MIB module CISCO-DMN-DSG-PRODUCTION-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CISCO-DMN-DSG-PRODUCTION-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:37:47 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ConstraintsUnion, ValueSizeConstraint, ConstraintsIntersection, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ConstraintsUnion", "ValueSizeConstraint", "ConstraintsIntersection", "ValueRangeConstraint")
ciscoDSGUtilities, = mibBuilder.importSymbols("CISCO-DMN-DSG-ROOT-MIB", "ciscoDSGUtilities")
ModuleCompliance, ObjectGroup, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "ObjectGroup", "NotificationGroup")
Counter64, Integer32, iso, MibIdentifier, Counter32, NotificationType, Bits, Gauge32, ModuleIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, TimeTicks, ObjectIdentity, IpAddress, Unsigned32 = mibBuilder.importSymbols("SNMPv2-SMI", "Counter64", "Integer32", "iso", "MibIdentifier", "Counter32", "NotificationType", "Bits", "Gauge32", "ModuleIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "TimeTicks", "ObjectIdentity", "IpAddress", "Unsigned32")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
ciscoDSGProd = ModuleIdentity((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 21))
ciscoDSGProd.setRevisions(('2010-08-24 07:00', '2009-12-20 12:00',))
if mibBuilder.loadTexts: ciscoDSGProd.setLastUpdated('201008240700Z')
if mibBuilder.loadTexts: ciscoDSGProd.setOrganization('Cisco Systems, Inc.')
prodInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 21, 1))
prodHostName = MibScalar((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 21, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 14))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: prodHostName.setStatus('current')
prodTrackingId = MibScalar((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 21, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 12))).setMaxAccess("readonly")
if mibBuilder.loadTexts: prodTrackingId.setStatus('current')
prodModelNo = MibScalar((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 21, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 49))).setMaxAccess("readonly")
if mibBuilder.loadTexts: prodModelNo.setStatus('current')
prodModelName = MibScalar((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 21, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 49))).setMaxAccess("readonly")
if mibBuilder.loadTexts: prodModelName.setStatus('current')
prodCatalogNo = MibScalar((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 21, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 49))).setMaxAccess("readonly")
if mibBuilder.loadTexts: prodCatalogNo.setStatus('current')
prodCustomerCode = MibScalar((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 21, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 49))).setMaxAccess("readonly")
if mibBuilder.loadTexts: prodCustomerCode.setStatus('current')
prodLimitVer = MibScalar((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 21, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 49))).setMaxAccess("readonly")
if mibBuilder.loadTexts: prodLimitVer.setStatus('current')
prodFPGADesignation = MibScalar((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 21, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 0))).setMaxAccess("readonly")
if mibBuilder.loadTexts: prodFPGADesignation.setStatus('current')
mibBuilder.exportSymbols("CISCO-DMN-DSG-PRODUCTION-MIB", ciscoDSGProd=ciscoDSGProd, prodTrackingId=prodTrackingId, PYSNMP_MODULE_ID=ciscoDSGProd, prodInfo=prodInfo, prodModelNo=prodModelNo, prodLimitVer=prodLimitVer, prodHostName=prodHostName, prodCatalogNo=prodCatalogNo, prodCustomerCode=prodCustomerCode, prodFPGADesignation=prodFPGADesignation, prodModelName=prodModelName)
