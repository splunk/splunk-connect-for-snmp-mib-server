#
# PySNMP MIB module VDSL2-LINE-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/VDSL2-LINE-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:46:19 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ConstraintsIntersection, SingleValueConstraint, ValueSizeConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ConstraintsIntersection", "SingleValueConstraint", "ValueSizeConstraint", "ConstraintsUnion")
HCPerfTimeElapsed, HCPerfIntervalThreshold = mibBuilder.importSymbols("HC-PerfHist-TC-MIB", "HCPerfTimeElapsed", "HCPerfIntervalThreshold")
ifIndex, = mibBuilder.importSymbols("IF-MIB", "ifIndex")
SnmpAdminString, = mibBuilder.importSymbols("SNMP-FRAMEWORK-MIB", "SnmpAdminString")
NotificationGroup, ModuleCompliance, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance", "ObjectGroup")
iso, ObjectIdentity, Bits, MibIdentifier, Gauge32, MibScalar, MibTable, MibTableRow, MibTableColumn, transmission, NotificationType, Counter64, IpAddress, Integer32, Counter32, ModuleIdentity, Unsigned32, TimeTicks = mibBuilder.importSymbols("SNMPv2-SMI", "iso", "ObjectIdentity", "Bits", "MibIdentifier", "Gauge32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "transmission", "NotificationType", "Counter64", "IpAddress", "Integer32", "Counter32", "ModuleIdentity", "Unsigned32", "TimeTicks")
TruthValue, TextualConvention, RowStatus, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TruthValue", "TextualConvention", "RowStatus", "DisplayString")
Xdsl2ChAtmStatus, Xdsl2LineTxRefVnDs, Xdsl2Direction, Xdsl2UpboKLF, Xdsl2ScMaskUs, Xdsl2RfiBands, Xdsl2ConfPmsForce, Xdsl2BandUs, Xdsl2CarMask, Xdsl2LdsfResult, Xdsl2LineClassMask, Xdsl2ChPtmStatus, Xdsl2BitsAlloc, Xdsl2MrefPsdDs, Xdsl2PsdMaskUs, Xdsl2InitResult, Xdsl2LineBpsc, Xdsl2Band, Xdsl2Tssi, Xdsl2ChInpReport, Xdsl2MrefPsdUs, Xdsl2PowerMngState, Xdsl2LinePsdMaskSelectUs, Xdsl2ChInitPolicy, Xdsl2PsdMaskDs, Xdsl2LastTransmittedState, Xdsl2LineCeFlag, Xdsl2MaxBer, Xdsl2SymbolProtection, Xdsl2LinePmMode, Xdsl2SymbolProtection8, Xdsl2LineTxRefVnUs, Xdsl2LineReset, Xdsl2Unit, Xdsl2LineUs0Disable, Xdsl2LineUs0Mask, Xdsl2TransmissionModeType, Xdsl2OperationModes, Xdsl2LineStatus, Xdsl2RaMode, Xdsl2BpscResult, Xdsl2ScMaskDs, Xdsl2LineLimitMask, Xdsl2LineSnrMode, Xdsl2LineProfiles, Xdsl2LineLdsf = mibBuilder.importSymbols("VDSL2-LINE-TC-MIB", "Xdsl2ChAtmStatus", "Xdsl2LineTxRefVnDs", "Xdsl2Direction", "Xdsl2UpboKLF", "Xdsl2ScMaskUs", "Xdsl2RfiBands", "Xdsl2ConfPmsForce", "Xdsl2BandUs", "Xdsl2CarMask", "Xdsl2LdsfResult", "Xdsl2LineClassMask", "Xdsl2ChPtmStatus", "Xdsl2BitsAlloc", "Xdsl2MrefPsdDs", "Xdsl2PsdMaskUs", "Xdsl2InitResult", "Xdsl2LineBpsc", "Xdsl2Band", "Xdsl2Tssi", "Xdsl2ChInpReport", "Xdsl2MrefPsdUs", "Xdsl2PowerMngState", "Xdsl2LinePsdMaskSelectUs", "Xdsl2ChInitPolicy", "Xdsl2PsdMaskDs", "Xdsl2LastTransmittedState", "Xdsl2LineCeFlag", "Xdsl2MaxBer", "Xdsl2SymbolProtection", "Xdsl2LinePmMode", "Xdsl2SymbolProtection8", "Xdsl2LineTxRefVnUs", "Xdsl2LineReset", "Xdsl2Unit", "Xdsl2LineUs0Disable", "Xdsl2LineUs0Mask", "Xdsl2TransmissionModeType", "Xdsl2OperationModes", "Xdsl2LineStatus", "Xdsl2RaMode", "Xdsl2BpscResult", "Xdsl2ScMaskDs", "Xdsl2LineLimitMask", "Xdsl2LineSnrMode", "Xdsl2LineProfiles", "Xdsl2LineLdsf")
vdsl2MIB = ModuleIdentity((1, 3, 6, 1, 2, 1, 10, 251))
vdsl2MIB.setRevisions(('2009-09-30 00:00',))
if mibBuilder.loadTexts: vdsl2MIB.setLastUpdated('200909300000Z')
if mibBuilder.loadTexts: vdsl2MIB.setOrganization('ADSLMIB Working Group')
xdsl2Notifications = MibIdentifier((1, 3, 6, 1, 2, 1, 10, 251, 0))
xdsl2Objects = MibIdentifier((1, 3, 6, 1, 2, 1, 10, 251, 1))
xdsl2Conformance = MibIdentifier((1, 3, 6, 1, 2, 1, 10, 251, 2))
xdsl2Line = MibIdentifier((1, 3, 6, 1, 2, 1, 10, 251, 1, 1))
xdsl2Status = MibIdentifier((1, 3, 6, 1, 2, 1, 10, 251, 1, 2))
xdsl2Inventory = MibIdentifier((1, 3, 6, 1, 2, 1, 10, 251, 1, 3))
xdsl2PM = MibIdentifier((1, 3, 6, 1, 2, 1, 10, 251, 1, 4))
xdsl2Profile = MibIdentifier((1, 3, 6, 1, 2, 1, 10, 251, 1, 5))
xdsl2Scalar = MibIdentifier((1, 3, 6, 1, 2, 1, 10, 251, 1, 6))
xdsl2PMLine = MibIdentifier((1, 3, 6, 1, 2, 1, 10, 251, 1, 4, 1))
xdsl2PMChannel = MibIdentifier((1, 3, 6, 1, 2, 1, 10, 251, 1, 4, 2))
xdsl2ProfileLine = MibIdentifier((1, 3, 6, 1, 2, 1, 10, 251, 1, 5, 1))
xdsl2ProfileChannel = MibIdentifier((1, 3, 6, 1, 2, 1, 10, 251, 1, 5, 2))
xdsl2ProfileAlarmConf = MibIdentifier((1, 3, 6, 1, 2, 1, 10, 251, 1, 5, 3))
xdsl2ScalarSC = MibIdentifier((1, 3, 6, 1, 2, 1, 10, 251, 1, 6, 1))
xdsl2LineTable = MibTable((1, 3, 6, 1, 2, 1, 10, 251, 1, 1, 1), )
if mibBuilder.loadTexts: xdsl2LineTable.setStatus('current')
xdsl2LineEntry = MibTableRow((1, 3, 6, 1, 2, 1, 10, 251, 1, 1, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: xdsl2LineEntry.setStatus('current')
xdsl2LineConfTemplate = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 251, 1, 1, 1, 1, 1), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 32)).clone('DEFVAL')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xdsl2LineConfTemplate.setStatus('current')
xdsl2LineConfFallbackTemplate = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 251, 1, 1, 1, 1, 2), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xdsl2LineConfFallbackTemplate.setStatus('current')
xdsl2LineAlarmConfTemplate = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 251, 1, 1, 1, 1, 3), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 32)).clone('DEFVAL')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xdsl2LineAlarmConfTemplate.setStatus('current')
xdsl2LineCmndConfPmsf = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 251, 1, 1, 1, 1, 4), Xdsl2ConfPmsForce().clone('l3toL0')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xdsl2LineCmndConfPmsf.setStatus('current')
xdsl2LineCmndConfLdsf = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 251, 1, 1, 1, 1, 5), Xdsl2LineLdsf().clone('inhibit')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xdsl2LineCmndConfLdsf.setStatus('current')
xdsl2LineCmndConfLdsfFailReason = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 251, 1, 1, 1, 1, 6), Xdsl2LdsfResult().clone('none')).setMaxAccess("readonly")
if mibBuilder.loadTexts: xdsl2LineCmndConfLdsfFailReason.setStatus('current')
xdsl2LineCmndConfBpsc = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 251, 1, 1, 1, 1, 7), Xdsl2LineBpsc().clone('idle')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xdsl2LineCmndConfBpsc.setStatus('current')
xdsl2LineCmndConfBpscFailReason = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 251, 1, 1, 1, 1, 8), Xdsl2BpscResult().clone('none')).setMaxAccess("readonly")
if mibBuilder.loadTexts: xdsl2LineCmndConfBpscFailReason.setStatus('current')
xdsl2LineCmndConfBpscRequests = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 251, 1, 1, 1, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xdsl2LineCmndConfBpscRequests.setStatus('current')
xdsl2LineCmndAutomodeColdStart = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 251, 1, 1, 1, 1, 10), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xdsl2LineCmndAutomodeColdStart.setStatus('current')
xdsl2LineCmndConfReset = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 251, 1, 1, 1, 1, 11), Xdsl2LineReset().clone('idle')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xdsl2LineCmndConfReset.setStatus('current')
xdsl2LineStatusActTemplate = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 251, 1, 1, 1, 1, 12), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: xdsl2LineStatusActTemplate.setStatus('current')
xdsl2LineStatusXtuTransSys = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 251, 1, 1, 1, 1, 13), Xdsl2TransmissionModeType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xdsl2LineStatusXtuTransSys.setStatus('current')
xdsl2LineStatusPwrMngState = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 251, 1, 1, 1, 1, 14), Xdsl2PowerMngState().clone('l3')).setMaxAccess("readonly")
if mibBuilder.loadTexts: xdsl2LineStatusPwrMngState.setStatus('current')
xdsl2LineStatusInitResult = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 251, 1, 1, 1, 1, 15), Xdsl2InitResult().clone('noFail')).setMaxAccess("readonly")
if mibBuilder.loadTexts: xdsl2LineStatusInitResult.setStatus('current')
xdsl2LineStatusLastStateDs = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 251, 1, 1, 1, 1, 16), Xdsl2LastTransmittedState().clone('atucG9941')).setMaxAccess("readonly")
if mibBuilder.loadTexts: xdsl2LineStatusLastStateDs.setStatus('current')
xdsl2LineStatusLastStateUs = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 251, 1, 1, 1, 1, 17), Xdsl2LastTransmittedState().clone('aturG9941')).setMaxAccess("readonly")
if mibBuilder.loadTexts: xdsl2LineStatusLastStateUs.setStatus('current')
xdsl2LineStatusXtur = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 251, 1, 1, 1, 1, 18), Xdsl2LineStatus().clone(namedValues=NamedValues(("noDefect", 0)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: xdsl2LineStatusXtur.setStatus('current')
xdsl2LineStatusXtuc = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 251, 1, 1, 1, 1, 19), Xdsl2LineStatus().clone(namedValues=NamedValues(("noDefect", 0)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: xdsl2LineStatusXtuc.setStatus('current')
xdsl2LineStatusAttainableRateDs = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 251, 1, 1, 1, 1, 20), Unsigned32()).setUnits('bits/second').setMaxAccess("readonly")
if mibBuilder.loadTexts: xdsl2LineStatusAttainableRateDs.setStatus('current')
xdsl2LineStatusAttainableRateUs = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 251, 1, 1, 1, 1, 21), Unsigned32()).setUnits('bits/second').setMaxAccess("readonly")
if mibBuilder.loadTexts: xdsl2LineStatusAttainableRateUs.setStatus('current')
xdsl2LineStatusActPsdDs = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 251, 1, 1, 1, 1, 22), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(-900, 0), ValueRangeConstraint(2147483647, 2147483647), )).clone(2147483647)).setUnits('0.1 dBm/Hz').setMaxAccess("readonly")
if mibBuilder.loadTexts: xdsl2LineStatusActPsdDs.setStatus('current')
xdsl2LineStatusActPsdUs = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 251, 1, 1, 1, 1, 23), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(-900, 0), ValueRangeConstraint(2147483647, 2147483647), )).clone(2147483647)).setUnits('0.1 dBm/Hz').setMaxAccess("readonly")
if mibBuilder.loadTexts: xdsl2LineStatusActPsdUs.setStatus('current')
xdsl2LineStatusActAtpDs = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 251, 1, 1, 1, 1, 24), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(-310, 310), ValueRangeConstraint(2147483647, 2147483647), )).clone(2147483647)).setUnits('0.1 dBm').setMaxAccess("readonly")
if mibBuilder.loadTexts: xdsl2LineStatusActAtpDs.setStatus('current')
xdsl2LineStatusActAtpUs = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 251, 1, 1, 1, 1, 25), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(-310, 310), ValueRangeConstraint(2147483647, 2147483647), )).clone(2147483647)).setUnits('0.1 dBm').setMaxAccess("readonly")
if mibBuilder.loadTexts: xdsl2LineStatusActAtpUs.setStatus('current')
xdsl2LineStatusActProfile = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 251, 1, 1, 1, 1, 26), Xdsl2LineProfiles()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xdsl2LineStatusActProfile.setStatus('current')
xdsl2LineStatusActLimitMask = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 251, 1, 1, 1, 1, 27), Xdsl2LineLimitMask()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xdsl2LineStatusActLimitMask.setStatus('current')
xdsl2LineStatusActUs0Mask = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 251, 1, 1, 1, 1, 28), Xdsl2LineUs0Mask()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xdsl2LineStatusActUs0Mask.setStatus('current')
xdsl2LineStatusActSnrModeDs = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 251, 1, 1, 1, 1, 29), Xdsl2LineSnrMode().clone('virtualNoiseDisabled')).setMaxAccess("readonly")
if mibBuilder.loadTexts: xdsl2LineStatusActSnrModeDs.setStatus('current')
xdsl2LineStatusActSnrModeUs = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 251, 1, 1, 1, 1, 30), Xdsl2LineSnrMode().clone('virtualNoiseDisabled')).setMaxAccess("readonly")
if mibBuilder.loadTexts: xdsl2LineStatusActSnrModeUs.setStatus('current')
xdsl2LineStatusElectricalLength = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 251, 1, 1, 1, 1, 31), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 1280))).setUnits('0.1 dB').setMaxAccess("readonly")
if mibBuilder.loadTexts: xdsl2LineStatusElectricalLength.setStatus('current')
xdsl2LineStatusTssiDs = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 251, 1, 1, 1, 1, 32), Xdsl2Tssi()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xdsl2LineStatusTssiDs.setStatus('current')
xdsl2LineStatusTssiUs = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 251, 1, 1, 1, 1, 33), Xdsl2Tssi()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xdsl2LineStatusTssiUs.setStatus('current')
xdsl2LineStatusMrefPsdDs = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 251, 1, 1, 1, 1, 34), Xdsl2MrefPsdDs()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xdsl2LineStatusMrefPsdDs.setStatus('current')
xdsl2LineStatusMrefPsdUs = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 251, 1, 1, 1, 1, 35), Xdsl2MrefPsdUs()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xdsl2LineStatusMrefPsdUs.setStatus('current')
xdsl2LineStatusTrellisDs = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 251, 1, 1, 1, 1, 36), TruthValue().clone('false')).setMaxAccess("readonly")
if mibBuilder.loadTexts: xdsl2LineStatusTrellisDs.setStatus('current')
xdsl2LineStatusTrellisUs = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 251, 1, 1, 1, 1, 37), TruthValue().clone('false')).setMaxAccess("readonly")
if mibBuilder.loadTexts: xdsl2LineStatusTrellisUs.setStatus('current')
xdsl2LineStatusActualCe = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 251, 1, 1, 1, 1, 38), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(2, 16)).clone(2)).setUnits('N/32 samples').setMaxAccess("readonly")
if mibBuilder.loadTexts: xdsl2LineStatusActualCe.setStatus('current')
xdsl2LineSegmentTable = MibTable((1, 3, 6, 1, 2, 1, 10, 251, 1, 2, 1), )
if mibBuilder.loadTexts: xdsl2LineSegmentTable.setStatus('current')
xdsl2LineSegmentEntry = MibTableRow((1, 3, 6, 1, 2, 1, 10, 251, 1, 2, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "VDSL2-LINE-MIB", "xdsl2LineSegmentDirection"), (0, "VDSL2-LINE-MIB", "xdsl2LineSegment"))
if mibBuilder.loadTexts: xdsl2LineSegmentEntry.setStatus('current')
xdsl2LineSegmentDirection = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 251, 1, 2, 1, 1, 1), Xdsl2Direction())
if mibBuilder.loadTexts: xdsl2LineSegmentDirection.setStatus('current')
xdsl2LineSegment = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 251, 1, 2, 1, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 8)))
if mibBuilder.loadTexts: xdsl2LineSegment.setStatus('current')
xdsl2LineSegmentBitsAlloc = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 251, 1, 2, 1, 1, 3), Xdsl2BitsAlloc()).setUnits('bits').setMaxAccess("readonly")
if mibBuilder.loadTexts: xdsl2LineSegmentBitsAlloc.setStatus('current')
xdsl2LineSegmentRowStatus = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 251, 1, 2, 1, 1, 4), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xdsl2LineSegmentRowStatus.setStatus('current')
xdsl2LineBandTable = MibTable((1, 3, 6, 1, 2, 1, 10, 251, 1, 1, 2), )
if mibBuilder.loadTexts: xdsl2LineBandTable.setStatus('current')
xdsl2LineBandEntry = MibTableRow((1, 3, 6, 1, 2, 1, 10, 251, 1, 1, 2, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "VDSL2-LINE-MIB", "xdsl2LineBand"))
if mibBuilder.loadTexts: xdsl2LineBandEntry.setStatus('current')
xdsl2LineBand = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 251, 1, 1, 2, 1, 1), Xdsl2Band())
if mibBuilder.loadTexts: xdsl2LineBand.setStatus('current')
xdsl2LineBandStatusLnAtten = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 251, 1, 1, 2, 1, 2), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 1270), ValueRangeConstraint(2147483646, 2147483646), ValueRangeConstraint(2147483647, 2147483647), )).clone(2147483646)).setUnits('0.1 dB').setMaxAccess("readonly")
if mibBuilder.loadTexts: xdsl2LineBandStatusLnAtten.setStatus('current')
xdsl2LineBandStatusSigAtten = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 251, 1, 1, 2, 1, 3), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 1270), ValueRangeConstraint(2147483646, 2147483646), ValueRangeConstraint(2147483647, 2147483647), )).clone(2147483646)).setUnits('0.1 dB').setMaxAccess("readonly")
if mibBuilder.loadTexts: xdsl2LineBandStatusSigAtten.setStatus('current')
xdsl2LineBandStatusSnrMargin = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 251, 1, 1, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(-640, 630), ValueRangeConstraint(2147483646, 2147483646), ValueRangeConstraint(2147483647, 2147483647), )).clone(2147483646)).setUnits('0.1 dB').setMaxAccess("readonly")
if mibBuilder.loadTexts: xdsl2LineBandStatusSnrMargin.setStatus('current')
xdsl2ChannelStatusTable = MibTable((1, 3, 6, 1, 2, 1, 10, 251, 1, 2, 2), )
if mibBuilder.loadTexts: xdsl2ChannelStatusTable.setStatus('current')
xdsl2ChannelStatusEntry = MibTableRow((1, 3, 6, 1, 2, 1, 10, 251, 1, 2, 2, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "VDSL2-LINE-MIB", "xdsl2ChStatusUnit"))
if mibBuilder.loadTexts: xdsl2ChannelStatusEntry.setStatus('current')
xdsl2ChStatusUnit = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 251, 1, 2, 2, 1, 1), Xdsl2Unit())
if mibBuilder.loadTexts: xdsl2ChStatusUnit.setStatus('current')
xdsl2ChStatusActDataRate = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 251, 1, 2, 2, 1, 2), Unsigned32()).setUnits('bits/second').setMaxAccess("readonly")
if mibBuilder.loadTexts: xdsl2ChStatusActDataRate.setStatus('current')
xdsl2ChStatusPrevDataRate = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 251, 1, 2, 2, 1, 3), Unsigned32()).setUnits('bits/second').setMaxAccess("readonly")
if mibBuilder.loadTexts: xdsl2ChStatusPrevDataRate.setStatus('current')
xdsl2ChStatusActDelay = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 251, 1, 2, 2, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 8176))).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: xdsl2ChStatusActDelay.setStatus('current')
xdsl2ChStatusActInp = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 251, 1, 2, 2, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setUnits('0.1 symbols').setMaxAccess("readonly")
if mibBuilder.loadTexts: xdsl2ChStatusActInp.setStatus('current')
xdsl2ChStatusInpReport = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 251, 1, 2, 2, 1, 6), Xdsl2ChInpReport().clone('inpComputedUsingFormula')).setMaxAccess("readonly")
if mibBuilder.loadTexts: xdsl2ChStatusInpReport.setStatus('current')
xdsl2ChStatusNFec = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 251, 1, 2, 2, 1, 7), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: xdsl2ChStatusNFec.setStatus('current')
xdsl2ChStatusRFec = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 251, 1, 2, 2, 1, 8), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 16))).setUnits('bits').setMaxAccess("readonly")
if mibBuilder.loadTexts: xdsl2ChStatusRFec.setStatus('current')
xdsl2ChStatusLSymb = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 251, 1, 2, 2, 1, 9), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setUnits('bits').setMaxAccess("readonly")
if mibBuilder.loadTexts: xdsl2ChStatusLSymb.setStatus('current')
xdsl2ChStatusIntlvDepth = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 251, 1, 2, 2, 1, 10), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4096)).clone(1)).setMaxAccess("readonly")
if mibBuilder.loadTexts: xdsl2ChStatusIntlvDepth.setStatus('current')
xdsl2ChStatusIntlvBlock = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 251, 1, 2, 2, 1, 11), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(4, 255)).clone(4)).setMaxAccess("readonly")
if mibBuilder.loadTexts: xdsl2ChStatusIntlvBlock.setStatus('current')
xdsl2ChStatusLPath = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 251, 1, 2, 2, 1, 12), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 3))).setMaxAccess("readonly")
if mibBuilder.loadTexts: xdsl2ChStatusLPath.setStatus('current')
xdsl2ChStatusAtmStatus = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 251, 1, 2, 2, 1, 13), Xdsl2ChAtmStatus().clone(namedValues=NamedValues(("noDefect", 0)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: xdsl2ChStatusAtmStatus.setStatus('current')
xdsl2ChStatusPtmStatus = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 251, 1, 2, 2, 1, 14), Xdsl2ChPtmStatus().clone(namedValues=NamedValues(("noDefect", 0)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: xdsl2ChStatusPtmStatus.setStatus('current')
xdsl2ScalarSCMaxInterfaces = MibScalar((1, 3, 6, 1, 2, 1, 10, 251, 1, 6, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xdsl2ScalarSCMaxInterfaces.setStatus('current')
xdsl2ScalarSCAvailInterfaces = MibScalar((1, 3, 6, 1, 2, 1, 10, 251, 1, 6, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xdsl2ScalarSCAvailInterfaces.setStatus('current')
xdsl2SCStatusTable = MibTable((1, 3, 6, 1, 2, 1, 10, 251, 1, 2, 3), )
if mibBuilder.loadTexts: xdsl2SCStatusTable.setStatus('current')
xdsl2SCStatusEntry = MibTableRow((1, 3, 6, 1, 2, 1, 10, 251, 1, 2, 3, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "VDSL2-LINE-MIB", "xdsl2SCStatusDirection"))
if mibBuilder.loadTexts: xdsl2SCStatusEntry.setStatus('current')
xdsl2SCStatusDirection = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 251, 1, 2, 3, 1, 1), Xdsl2Direction())
if mibBuilder.loadTexts: xdsl2SCStatusDirection.setStatus('current')
xdsl2SCStatusLinScale = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 251, 1, 2, 3, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: xdsl2SCStatusLinScale.setStatus('current')
xdsl2SCStatusLinScGroupSize = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 251, 1, 2, 3, 1, 3), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(1, 1), ValueRangeConstraint(2, 2), ValueRangeConstraint(4, 4), ValueRangeConstraint(8, 8), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: xdsl2SCStatusLinScGroupSize.setStatus('current')
xdsl2SCStatusLogMt = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 251, 1, 2, 3, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: xdsl2SCStatusLogMt.setStatus('current')
xdsl2SCStatusLogScGroupSize = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 251, 1, 2, 3, 1, 5), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(1, 1), ValueRangeConstraint(2, 2), ValueRangeConstraint(4, 4), ValueRangeConstraint(8, 8), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: xdsl2SCStatusLogScGroupSize.setStatus('current')
xdsl2SCStatusQlnMt = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 251, 1, 2, 3, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: xdsl2SCStatusQlnMt.setStatus('current')
xdsl2SCStatusQlnScGroupSize = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 251, 1, 2, 3, 1, 7), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(1, 1), ValueRangeConstraint(2, 2), ValueRangeConstraint(4, 4), ValueRangeConstraint(8, 8), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: xdsl2SCStatusQlnScGroupSize.setStatus('current')
xdsl2SCStatusSnrMtime = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 251, 1, 2, 3, 1, 8), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setUnits('symbols').setMaxAccess("readonly")
if mibBuilder.loadTexts: xdsl2SCStatusSnrMtime.setStatus('current')
xdsl2SCStatusSnrScGroupSize = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 251, 1, 2, 3, 1, 9), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(1, 1), ValueRangeConstraint(2, 2), ValueRangeConstraint(4, 4), ValueRangeConstraint(8, 8), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: xdsl2SCStatusSnrScGroupSize.setStatus('current')
xdsl2SCStatusAttainableRate = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 251, 1, 2, 3, 1, 10), Unsigned32()).setUnits('bits/second').setMaxAccess("readonly")
if mibBuilder.loadTexts: xdsl2SCStatusAttainableRate.setStatus('current')
xdsl2SCStatusRowStatus = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 251, 1, 2, 3, 1, 11), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xdsl2SCStatusRowStatus.setStatus('current')
xdsl2SCStatusBandTable = MibTable((1, 3, 6, 1, 2, 1, 10, 251, 1, 2, 4), )
if mibBuilder.loadTexts: xdsl2SCStatusBandTable.setStatus('current')
xdsl2SCStatusBandEntry = MibTableRow((1, 3, 6, 1, 2, 1, 10, 251, 1, 2, 4, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "VDSL2-LINE-MIB", "xdsl2SCStatusBand"))
if mibBuilder.loadTexts: xdsl2SCStatusBandEntry.setStatus('current')
xdsl2SCStatusBand = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 251, 1, 2, 4, 1, 1), Xdsl2Band())
if mibBuilder.loadTexts: xdsl2SCStatusBand.setStatus('current')
xdsl2SCStatusBandLnAtten = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 251, 1, 2, 4, 1, 2), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 1270), ValueRangeConstraint(2147483646, 2147483646), ValueRangeConstraint(2147483647, 2147483647), )).clone(2147483646)).setUnits('0.1 dB').setMaxAccess("readonly")
if mibBuilder.loadTexts: xdsl2SCStatusBandLnAtten.setStatus('current')
xdsl2SCStatusBandSigAtten = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 251, 1, 2, 4, 1, 3), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 1270), ValueRangeConstraint(2147483646, 2147483646), ValueRangeConstraint(2147483647, 2147483647), )).clone(2147483646)).setUnits('0.1 dB').setMaxAccess("readonly")
if mibBuilder.loadTexts: xdsl2SCStatusBandSigAtten.setStatus('current')
xdsl2SCStatusSegmentTable = MibTable((1, 3, 6, 1, 2, 1, 10, 251, 1, 2, 5), )
if mibBuilder.loadTexts: xdsl2SCStatusSegmentTable.setStatus('current')
xdsl2SCStatusSegmentEntry = MibTableRow((1, 3, 6, 1, 2, 1, 10, 251, 1, 2, 5, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "VDSL2-LINE-MIB", "xdsl2SCStatusDirection"), (0, "VDSL2-LINE-MIB", "xdsl2SCStatusSegment"))
if mibBuilder.loadTexts: xdsl2SCStatusSegmentEntry.setStatus('current')
xdsl2SCStatusSegment = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 251, 1, 2, 5, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 8)))
if mibBuilder.loadTexts: xdsl2SCStatusSegment.setStatus('current')
xdsl2SCStatusSegmentLinReal = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 251, 1, 2, 5, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 1024))).setMaxAccess("readonly")
if mibBuilder.loadTexts: xdsl2SCStatusSegmentLinReal.setStatus('current')
xdsl2SCStatusSegmentLinImg = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 251, 1, 2, 5, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 1024))).setMaxAccess("readonly")
if mibBuilder.loadTexts: xdsl2SCStatusSegmentLinImg.setStatus('current')
xdsl2SCStatusSegmentLog = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 251, 1, 2, 5, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 1024))).setUnits('dB').setMaxAccess("readonly")
if mibBuilder.loadTexts: xdsl2SCStatusSegmentLog.setStatus('current')
xdsl2SCStatusSegmentQln = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 251, 1, 2, 5, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 512))).setUnits('dBm/Hz').setMaxAccess("readonly")
if mibBuilder.loadTexts: xdsl2SCStatusSegmentQln.setStatus('current')
xdsl2SCStatusSegmentSnr = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 251, 1, 2, 5, 1, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 512))).setUnits('0.5 dB').setMaxAccess("readonly")
if mibBuilder.loadTexts: xdsl2SCStatusSegmentSnr.setStatus('current')
xdsl2SCStatusSegmentBitsAlloc = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 251, 1, 2, 5, 1, 7), Xdsl2BitsAlloc()).setUnits('bits').setMaxAccess("readonly")
if mibBuilder.loadTexts: xdsl2SCStatusSegmentBitsAlloc.setStatus('current')
xdsl2SCStatusSegmentGainAlloc = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 251, 1, 2, 5, 1, 8), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 1024))).setMaxAccess("readonly")
if mibBuilder.loadTexts: xdsl2SCStatusSegmentGainAlloc.setStatus('current')
xdsl2LineInventoryTable = MibTable((1, 3, 6, 1, 2, 1, 10, 251, 1, 3, 1), )
if mibBuilder.loadTexts: xdsl2LineInventoryTable.setStatus('current')
xdsl2LineInventoryEntry = MibTableRow((1, 3, 6, 1, 2, 1, 10, 251, 1, 3, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "VDSL2-LINE-MIB", "xdsl2LInvUnit"))
if mibBuilder.loadTexts: xdsl2LineInventoryEntry.setStatus('current')
xdsl2LInvUnit = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 251, 1, 3, 1, 1, 1), Xdsl2Unit())
if mibBuilder.loadTexts: xdsl2LInvUnit.setStatus('current')
xdsl2LInvG994VendorId = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 251, 1, 3, 1, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(8, 8)).setFixedLength(8)).setMaxAccess("readonly")
if mibBuilder.loadTexts: xdsl2LInvG994VendorId.setStatus('current')
xdsl2LInvSystemVendorId = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 251, 1, 3, 1, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(8, 8)).setFixedLength(8)).setMaxAccess("readonly")
if mibBuilder.loadTexts: xdsl2LInvSystemVendorId.setStatus('current')
xdsl2LInvVersionNumber = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 251, 1, 3, 1, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: xdsl2LInvVersionNumber.setStatus('current')
xdsl2LInvSerialNumber = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 251, 1, 3, 1, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: xdsl2LInvSerialNumber.setStatus('current')
xdsl2LInvSelfTestResult = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 251, 1, 3, 1, 1, 6), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xdsl2LInvSelfTestResult.setStatus('current')
xdsl2LInvTransmissionCapabilities = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 251, 1, 3, 1, 1, 7), Xdsl2TransmissionModeType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xdsl2LInvTransmissionCapabilities.setStatus('current')
xdsl2LineConfTemplateTable = MibTable((1, 3, 6, 1, 2, 1, 10, 251, 1, 5, 1, 1), )
if mibBuilder.loadTexts: xdsl2LineConfTemplateTable.setStatus('current')
xdsl2LineConfTemplateEntry = MibTableRow((1, 3, 6, 1, 2, 1, 10, 251, 1, 5, 1, 1, 1), ).setIndexNames((0, "VDSL2-LINE-MIB", "xdsl2LConfTempTemplateName"))
if mibBuilder.loadTexts: xdsl2LineConfTemplateEntry.setStatus('current')
xdsl2LConfTempTemplateName = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 251, 1, 5, 1, 1, 1, 1), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 32)))
if mibBuilder.loadTexts: xdsl2LConfTempTemplateName.setStatus('current')
xdsl2LConfTempLineProfile = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 251, 1, 5, 1, 1, 1, 2), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 32)).clone('DEFVAL')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: xdsl2LConfTempLineProfile.setStatus('current')
xdsl2LConfTempChan1ConfProfile = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 251, 1, 5, 1, 1, 1, 3), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 32)).clone('DEFVAL')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: xdsl2LConfTempChan1ConfProfile.setStatus('current')
xdsl2LConfTempChan1RaRatioDs = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 251, 1, 5, 1, 1, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 100)).clone(100)).setUnits('percent').setMaxAccess("readcreate")
if mibBuilder.loadTexts: xdsl2LConfTempChan1RaRatioDs.setStatus('current')
xdsl2LConfTempChan1RaRatioUs = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 251, 1, 5, 1, 1, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 100)).clone(100)).setUnits('percent').setMaxAccess("readcreate")
if mibBuilder.loadTexts: xdsl2LConfTempChan1RaRatioUs.setStatus('current')
xdsl2LConfTempChan2ConfProfile = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 251, 1, 5, 1, 1, 1, 6), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: xdsl2LConfTempChan2ConfProfile.setStatus('current')
xdsl2LConfTempChan2RaRatioDs = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 251, 1, 5, 1, 1, 1, 7), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setUnits('percent').setMaxAccess("readcreate")
if mibBuilder.loadTexts: xdsl2LConfTempChan2RaRatioDs.setStatus('current')
xdsl2LConfTempChan2RaRatioUs = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 251, 1, 5, 1, 1, 1, 8), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setUnits('percent').setMaxAccess("readcreate")
if mibBuilder.loadTexts: xdsl2LConfTempChan2RaRatioUs.setStatus('current')
xdsl2LConfTempChan3ConfProfile = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 251, 1, 5, 1, 1, 1, 9), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: xdsl2LConfTempChan3ConfProfile.setStatus('current')
xdsl2LConfTempChan3RaRatioDs = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 251, 1, 5, 1, 1, 1, 10), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setUnits('percent').setMaxAccess("readcreate")
if mibBuilder.loadTexts: xdsl2LConfTempChan3RaRatioDs.setStatus('current')
xdsl2LConfTempChan3RaRatioUs = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 251, 1, 5, 1, 1, 1, 11), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setUnits('percent').setMaxAccess("readcreate")
if mibBuilder.loadTexts: xdsl2LConfTempChan3RaRatioUs.setStatus('current')
xdsl2LConfTempChan4ConfProfile = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 251, 1, 5, 1, 1, 1, 12), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: xdsl2LConfTempChan4ConfProfile.setStatus('current')
xdsl2LConfTempChan4RaRatioDs = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 251, 1, 5, 1, 1, 1, 13), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setUnits('percent').setMaxAccess("readcreate")
if mibBuilder.loadTexts: xdsl2LConfTempChan4RaRatioDs.setStatus('current')
xdsl2LConfTempChan4RaRatioUs = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 251, 1, 5, 1, 1, 1, 14), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setUnits('percent').setMaxAccess("readcreate")
if mibBuilder.loadTexts: xdsl2LConfTempChan4RaRatioUs.setStatus('current')
xdsl2LConfTempRowStatus = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 251, 1, 5, 1, 1, 1, 15), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: xdsl2LConfTempRowStatus.setStatus('current')
xdsl2LineConfProfTable = MibTable((1, 3, 6, 1, 2, 1, 10, 251, 1, 5, 1, 2), )
if mibBuilder.loadTexts: xdsl2LineConfProfTable.setStatus('current')
xdsl2LineConfProfEntry = MibTableRow((1, 3, 6, 1, 2, 1, 10, 251, 1, 5, 1, 2, 1), ).setIndexNames((0, "VDSL2-LINE-MIB", "xdsl2LConfProfProfileName"))
if mibBuilder.loadTexts: xdsl2LineConfProfEntry.setStatus('current')
xdsl2LConfProfProfileName = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 251, 1, 5, 1, 2, 1, 1), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 32)))
if mibBuilder.loadTexts: xdsl2LConfProfProfileName.setStatus('current')
xdsl2LConfProfScMaskDs = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 251, 1, 5, 1, 2, 1, 2), Xdsl2ScMaskDs()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: xdsl2LConfProfScMaskDs.setStatus('current')
xdsl2LConfProfScMaskUs = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 251, 1, 5, 1, 2, 1, 3), Xdsl2ScMaskUs()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: xdsl2LConfProfScMaskUs.setStatus('current')
xdsl2LConfProfVdsl2CarMask = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 251, 1, 5, 1, 2, 1, 4), Xdsl2CarMask()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: xdsl2LConfProfVdsl2CarMask.setStatus('current')
xdsl2LConfProfRfiBands = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 251, 1, 5, 1, 2, 1, 5), Xdsl2RfiBands()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: xdsl2LConfProfRfiBands.setStatus('current')
xdsl2LConfProfRaModeDs = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 251, 1, 5, 1, 2, 1, 6), Xdsl2RaMode().clone('manual')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: xdsl2LConfProfRaModeDs.setStatus('current')
xdsl2LConfProfRaModeUs = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 251, 1, 5, 1, 2, 1, 7), Xdsl2RaMode().clone('manual')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: xdsl2LConfProfRaModeUs.setStatus('current')
xdsl2LConfProfRaUsNrmDs = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 251, 1, 5, 1, 2, 1, 8), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 310)).clone(10)).setUnits('0.1 dB').setMaxAccess("readcreate")
if mibBuilder.loadTexts: xdsl2LConfProfRaUsNrmDs.setStatus('current')
xdsl2LConfProfRaUsNrmUs = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 251, 1, 5, 1, 2, 1, 9), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 310)).clone(10)).setUnits('0.1 dB').setMaxAccess("readcreate")
if mibBuilder.loadTexts: xdsl2LConfProfRaUsNrmUs.setStatus('current')
xdsl2LConfProfRaUsTimeDs = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 251, 1, 5, 1, 2, 1, 10), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 16383)).clone(3600)).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: xdsl2LConfProfRaUsTimeDs.setStatus('current')
xdsl2LConfProfRaUsTimeUs = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 251, 1, 5, 1, 2, 1, 11), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 16383)).clone(3600)).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: xdsl2LConfProfRaUsTimeUs.setStatus('current')
xdsl2LConfProfRaDsNrmDs = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 251, 1, 5, 1, 2, 1, 12), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 310)).clone(10)).setUnits('0.1 dB').setMaxAccess("readcreate")
if mibBuilder.loadTexts: xdsl2LConfProfRaDsNrmDs.setStatus('current')
xdsl2LConfProfRaDsNrmUs = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 251, 1, 5, 1, 2, 1, 13), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 310)).clone(10)).setUnits('0.1 dB').setMaxAccess("readcreate")
if mibBuilder.loadTexts: xdsl2LConfProfRaDsNrmUs.setStatus('current')
xdsl2LConfProfRaDsTimeDs = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 251, 1, 5, 1, 2, 1, 14), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 16383)).clone(3600)).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: xdsl2LConfProfRaDsTimeDs.setStatus('current')
xdsl2LConfProfRaDsTimeUs = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 251, 1, 5, 1, 2, 1, 15), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 16383)).clone(3600)).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: xdsl2LConfProfRaDsTimeUs.setStatus('current')
xdsl2LConfProfTargetSnrmDs = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 251, 1, 5, 1, 2, 1, 16), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 310)).clone(60)).setUnits('0.1 dB').setMaxAccess("readcreate")
if mibBuilder.loadTexts: xdsl2LConfProfTargetSnrmDs.setStatus('current')
xdsl2LConfProfTargetSnrmUs = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 251, 1, 5, 1, 2, 1, 17), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 310)).clone(60)).setUnits('0.1 dB').setMaxAccess("readcreate")
if mibBuilder.loadTexts: xdsl2LConfProfTargetSnrmUs.setStatus('current')
xdsl2LConfProfMaxSnrmDs = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 251, 1, 5, 1, 2, 1, 18), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 310), ValueRangeConstraint(2147483647, 2147483647), )).clone(310)).setUnits('0.1 dB').setMaxAccess("readcreate")
if mibBuilder.loadTexts: xdsl2LConfProfMaxSnrmDs.setStatus('current')
xdsl2LConfProfMaxSnrmUs = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 251, 1, 5, 1, 2, 1, 19), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 310), ValueRangeConstraint(2147483647, 2147483647), )).clone(310)).setUnits('0.1 dB').setMaxAccess("readcreate")
if mibBuilder.loadTexts: xdsl2LConfProfMaxSnrmUs.setStatus('current')
xdsl2LConfProfMinSnrmDs = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 251, 1, 5, 1, 2, 1, 20), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 310)).clone(10)).setUnits('0.1 dB').setMaxAccess("readcreate")
if mibBuilder.loadTexts: xdsl2LConfProfMinSnrmDs.setStatus('current')
xdsl2LConfProfMinSnrmUs = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 251, 1, 5, 1, 2, 1, 21), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 310)).clone(10)).setUnits('0.1 dB').setMaxAccess("readcreate")
if mibBuilder.loadTexts: xdsl2LConfProfMinSnrmUs.setStatus('current')
xdsl2LConfProfMsgMinUs = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 251, 1, 5, 1, 2, 1, 22), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(4000, 248000)).clone(4000)).setUnits('bits/second').setMaxAccess("readcreate")
if mibBuilder.loadTexts: xdsl2LConfProfMsgMinUs.setStatus('current')
xdsl2LConfProfMsgMinDs = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 251, 1, 5, 1, 2, 1, 23), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(4000, 248000)).clone(4000)).setUnits('bits/second').setMaxAccess("readcreate")
if mibBuilder.loadTexts: xdsl2LConfProfMsgMinDs.setStatus('current')
xdsl2LConfProfCeFlag = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 251, 1, 5, 1, 2, 1, 24), Xdsl2LineCeFlag()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: xdsl2LConfProfCeFlag.setStatus('current')
xdsl2LConfProfSnrModeDs = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 251, 1, 5, 1, 2, 1, 25), Xdsl2LineSnrMode().clone('virtualNoiseDisabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: xdsl2LConfProfSnrModeDs.setStatus('current')
xdsl2LConfProfSnrModeUs = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 251, 1, 5, 1, 2, 1, 26), Xdsl2LineSnrMode().clone('virtualNoiseDisabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: xdsl2LConfProfSnrModeUs.setStatus('current')
xdsl2LConfProfTxRefVnDs = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 251, 1, 5, 1, 2, 1, 27), Xdsl2LineTxRefVnDs()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: xdsl2LConfProfTxRefVnDs.setStatus('current')
xdsl2LConfProfTxRefVnUs = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 251, 1, 5, 1, 2, 1, 28), Xdsl2LineTxRefVnUs()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: xdsl2LConfProfTxRefVnUs.setStatus('current')
xdsl2LConfProfXtuTransSysEna = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 251, 1, 5, 1, 2, 1, 29), Xdsl2TransmissionModeType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: xdsl2LConfProfXtuTransSysEna.setStatus('current')
xdsl2LConfProfPmMode = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 251, 1, 5, 1, 2, 1, 30), Xdsl2LinePmMode().clone(namedValues=NamedValues(("allowTransitionsToIdle", 0), ("allowTransitionsToLowPower", 1)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: xdsl2LConfProfPmMode.setStatus('current')
xdsl2LConfProfL0Time = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 251, 1, 5, 1, 2, 1, 31), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255)).clone(255)).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: xdsl2LConfProfL0Time.setStatus('current')
xdsl2LConfProfL2Time = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 251, 1, 5, 1, 2, 1, 32), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255)).clone(255)).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: xdsl2LConfProfL2Time.setStatus('current')
xdsl2LConfProfL2Atpr = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 251, 1, 5, 1, 2, 1, 33), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 31)).clone(10)).setUnits('dB').setMaxAccess("readcreate")
if mibBuilder.loadTexts: xdsl2LConfProfL2Atpr.setStatus('current')
xdsl2LConfProfL2Atprt = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 251, 1, 5, 1, 2, 1, 34), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 31)).clone(31)).setUnits('dB').setMaxAccess("readcreate")
if mibBuilder.loadTexts: xdsl2LConfProfL2Atprt.setStatus('current')
xdsl2LConfProfProfiles = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 251, 1, 5, 1, 2, 1, 35), Xdsl2LineProfiles().clone(namedValues=NamedValues(("profile8a", 0), ("profile8b", 1), ("profile8c", 2), ("profile8d", 3), ("profile12a", 4), ("profile12b", 5), ("profile17a", 6), ("profile30a", 7)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: xdsl2LConfProfProfiles.setStatus('current')
xdsl2LConfProfDpboEPsd = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 251, 1, 5, 1, 2, 1, 36), Xdsl2PsdMaskDs()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: xdsl2LConfProfDpboEPsd.setStatus('current')
xdsl2LConfProfDpboEsEL = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 251, 1, 5, 1, 2, 1, 37), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 511))).setUnits('0.5 dB').setMaxAccess("readcreate")
if mibBuilder.loadTexts: xdsl2LConfProfDpboEsEL.setStatus('current')
xdsl2LConfProfDpboEsCableModelA = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 251, 1, 5, 1, 2, 1, 38), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 640))).setUnits('2^-8').setMaxAccess("readcreate")
if mibBuilder.loadTexts: xdsl2LConfProfDpboEsCableModelA.setStatus('current')
xdsl2LConfProfDpboEsCableModelB = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 251, 1, 5, 1, 2, 1, 39), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 640))).setUnits('2^-8').setMaxAccess("readcreate")
if mibBuilder.loadTexts: xdsl2LConfProfDpboEsCableModelB.setStatus('current')
xdsl2LConfProfDpboEsCableModelC = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 251, 1, 5, 1, 2, 1, 40), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 640))).setUnits('2^-8').setMaxAccess("readcreate")
if mibBuilder.loadTexts: xdsl2LConfProfDpboEsCableModelC.setStatus('current')
xdsl2LConfProfDpboMus = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 251, 1, 5, 1, 2, 1, 41), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setUnits('0.5 dBm/Hz').setMaxAccess("readcreate")
if mibBuilder.loadTexts: xdsl2LConfProfDpboMus.setStatus('current')
xdsl2LConfProfDpboFMin = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 251, 1, 5, 1, 2, 1, 42), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2048)).clone(32)).setUnits('4.3125 kHz').setMaxAccess("readcreate")
if mibBuilder.loadTexts: xdsl2LConfProfDpboFMin.setStatus('current')
xdsl2LConfProfDpboFMax = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 251, 1, 5, 1, 2, 1, 43), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(32, 6956)).clone(512)).setUnits('4.3125 kHz').setMaxAccess("readcreate")
if mibBuilder.loadTexts: xdsl2LConfProfDpboFMax.setStatus('current')
xdsl2LConfProfUpboKL = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 251, 1, 5, 1, 2, 1, 44), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 1280))).setUnits('0.1 dB').setMaxAccess("readcreate")
if mibBuilder.loadTexts: xdsl2LConfProfUpboKL.setStatus('current')
xdsl2LConfProfUpboKLF = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 251, 1, 5, 1, 2, 1, 45), Xdsl2UpboKLF().clone('disableUpbo')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: xdsl2LConfProfUpboKLF.setStatus('current')
xdsl2LConfProfUs0Mask = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 251, 1, 5, 1, 2, 1, 46), Xdsl2LineUs0Mask()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: xdsl2LConfProfUs0Mask.setStatus('current')
xdsl2LConfProfForceInp = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 251, 1, 5, 1, 2, 1, 47), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: xdsl2LConfProfForceInp.setStatus('current')
xdsl2LConfProfRowStatus = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 251, 1, 5, 1, 2, 1, 48), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: xdsl2LConfProfRowStatus.setStatus('current')
xdsl2LineConfProfModeSpecTable = MibTable((1, 3, 6, 1, 2, 1, 10, 251, 1, 5, 1, 3), )
if mibBuilder.loadTexts: xdsl2LineConfProfModeSpecTable.setStatus('current')
xdsl2LineConfProfModeSpecEntry = MibTableRow((1, 3, 6, 1, 2, 1, 10, 251, 1, 5, 1, 3, 1), ).setIndexNames((0, "VDSL2-LINE-MIB", "xdsl2LConfProfProfileName"), (0, "VDSL2-LINE-MIB", "xdsl2LConfProfXdslMode"))
if mibBuilder.loadTexts: xdsl2LineConfProfModeSpecEntry.setStatus('current')
xdsl2LConfProfXdslMode = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 251, 1, 5, 1, 3, 1, 1), Xdsl2OperationModes())
if mibBuilder.loadTexts: xdsl2LConfProfXdslMode.setStatus('current')
xdsl2LConfProfMaxNomPsdDs = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 251, 1, 5, 1, 3, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-600, -300)).clone(-300)).setUnits('0.1 dBm/Hz').setMaxAccess("readcreate")
if mibBuilder.loadTexts: xdsl2LConfProfMaxNomPsdDs.setStatus('current')
xdsl2LConfProfMaxNomPsdUs = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 251, 1, 5, 1, 3, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-600, -300)).clone(-300)).setUnits('0.1 dBm/Hz').setMaxAccess("readcreate")
if mibBuilder.loadTexts: xdsl2LConfProfMaxNomPsdUs.setStatus('current')
xdsl2LConfProfMaxNomAtpDs = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 251, 1, 5, 1, 3, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255)).clone(255)).setUnits('0.1 dBm').setMaxAccess("readcreate")
if mibBuilder.loadTexts: xdsl2LConfProfMaxNomAtpDs.setStatus('current')
xdsl2LConfProfMaxNomAtpUs = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 251, 1, 5, 1, 3, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255)).clone(255)).setUnits('0.1 dBm').setMaxAccess("readcreate")
if mibBuilder.loadTexts: xdsl2LConfProfMaxNomAtpUs.setStatus('current')
xdsl2LConfProfMaxAggRxPwrUs = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 251, 1, 5, 1, 3, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(-255, 255), ValueRangeConstraint(2147483647, 2147483647), )).clone(255)).setUnits('0.1 dBm').setMaxAccess("readcreate")
if mibBuilder.loadTexts: xdsl2LConfProfMaxAggRxPwrUs.setStatus('current')
xdsl2LConfProfPsdMaskDs = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 251, 1, 5, 1, 3, 1, 7), Xdsl2PsdMaskDs()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: xdsl2LConfProfPsdMaskDs.setStatus('current')
xdsl2LConfProfPsdMaskUs = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 251, 1, 5, 1, 3, 1, 8), Xdsl2PsdMaskUs()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: xdsl2LConfProfPsdMaskUs.setStatus('current')
xdsl2LConfProfPsdMaskSelectUs = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 251, 1, 5, 1, 3, 1, 9), Xdsl2LinePsdMaskSelectUs().clone('adlu32Eu32')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: xdsl2LConfProfPsdMaskSelectUs.setStatus('current')
xdsl2LConfProfClassMask = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 251, 1, 5, 1, 3, 1, 10), Xdsl2LineClassMask().clone('a998ORb997M1cORc998B')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: xdsl2LConfProfClassMask.setStatus('current')
xdsl2LConfProfLimitMask = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 251, 1, 5, 1, 3, 1, 11), Xdsl2LineLimitMask()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: xdsl2LConfProfLimitMask.setStatus('current')
xdsl2LConfProfUs0Disable = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 251, 1, 5, 1, 3, 1, 12), Xdsl2LineUs0Disable()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: xdsl2LConfProfUs0Disable.setStatus('current')
xdsl2LConfProfModeSpecRowStatus = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 251, 1, 5, 1, 3, 1, 13), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: xdsl2LConfProfModeSpecRowStatus.setStatus('current')
xdsl2LineConfProfModeSpecBandUsTable = MibTable((1, 3, 6, 1, 2, 1, 10, 251, 1, 5, 1, 4), )
if mibBuilder.loadTexts: xdsl2LineConfProfModeSpecBandUsTable.setStatus('current')
xdsl2LineConfProfModeSpecBandUsEntry = MibTableRow((1, 3, 6, 1, 2, 1, 10, 251, 1, 5, 1, 4, 1), ).setIndexNames((0, "VDSL2-LINE-MIB", "xdsl2LConfProfProfileName"), (0, "VDSL2-LINE-MIB", "xdsl2LConfProfXdslMode"), (0, "VDSL2-LINE-MIB", "xdsl2LConfProfXdslBandUs"))
if mibBuilder.loadTexts: xdsl2LineConfProfModeSpecBandUsEntry.setStatus('current')
xdsl2LConfProfXdslBandUs = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 251, 1, 5, 1, 4, 1, 1), Xdsl2BandUs())
if mibBuilder.loadTexts: xdsl2LConfProfXdslBandUs.setStatus('current')
xdsl2LConfProfUpboPsdA = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 251, 1, 5, 1, 4, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(4000, 8095)).clone(4000)).setUnits('0.01 dBm/Hz').setMaxAccess("readcreate")
if mibBuilder.loadTexts: xdsl2LConfProfUpboPsdA.setStatus('current')
xdsl2LConfProfUpboPsdB = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 251, 1, 5, 1, 4, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4095))).setUnits('0.01 dBm/Hz').setMaxAccess("readcreate")
if mibBuilder.loadTexts: xdsl2LConfProfUpboPsdB.setStatus('current')
xdsl2LConfProfModeSpecBandUsRowStatus = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 251, 1, 5, 1, 4, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: xdsl2LConfProfModeSpecBandUsRowStatus.setStatus('current')
xdsl2ChConfProfileTable = MibTable((1, 3, 6, 1, 2, 1, 10, 251, 1, 5, 2, 1), )
if mibBuilder.loadTexts: xdsl2ChConfProfileTable.setStatus('current')
xdsl2ChConfProfileEntry = MibTableRow((1, 3, 6, 1, 2, 1, 10, 251, 1, 5, 2, 1, 1), ).setIndexNames((0, "VDSL2-LINE-MIB", "xdsl2ChConfProfProfileName"))
if mibBuilder.loadTexts: xdsl2ChConfProfileEntry.setStatus('current')
xdsl2ChConfProfProfileName = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 251, 1, 5, 2, 1, 1, 1), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 32)))
if mibBuilder.loadTexts: xdsl2ChConfProfProfileName.setStatus('current')
xdsl2ChConfProfMinDataRateDs = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 251, 1, 5, 2, 1, 1, 2), Unsigned32()).setUnits('bits/second').setMaxAccess("readcreate")
if mibBuilder.loadTexts: xdsl2ChConfProfMinDataRateDs.setStatus('current')
xdsl2ChConfProfMinDataRateUs = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 251, 1, 5, 2, 1, 1, 3), Unsigned32()).setUnits('bits/second').setMaxAccess("readcreate")
if mibBuilder.loadTexts: xdsl2ChConfProfMinDataRateUs.setStatus('current')
xdsl2ChConfProfMinResDataRateDs = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 251, 1, 5, 2, 1, 1, 4), Unsigned32()).setUnits('bits/second').setMaxAccess("readcreate")
if mibBuilder.loadTexts: xdsl2ChConfProfMinResDataRateDs.setStatus('current')
xdsl2ChConfProfMinResDataRateUs = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 251, 1, 5, 2, 1, 1, 5), Unsigned32()).setUnits('bits/second').setMaxAccess("readcreate")
if mibBuilder.loadTexts: xdsl2ChConfProfMinResDataRateUs.setStatus('current')
xdsl2ChConfProfMaxDataRateDs = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 251, 1, 5, 2, 1, 1, 6), Unsigned32()).setUnits('bits/second').setMaxAccess("readcreate")
if mibBuilder.loadTexts: xdsl2ChConfProfMaxDataRateDs.setStatus('current')
xdsl2ChConfProfMaxDataRateUs = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 251, 1, 5, 2, 1, 1, 7), Unsigned32()).setUnits('bits/second').setMaxAccess("readcreate")
if mibBuilder.loadTexts: xdsl2ChConfProfMaxDataRateUs.setStatus('current')
xdsl2ChConfProfMinDataRateLowPwrDs = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 251, 1, 5, 2, 1, 1, 8), Unsigned32()).setUnits('bits/second').setMaxAccess("readcreate")
if mibBuilder.loadTexts: xdsl2ChConfProfMinDataRateLowPwrDs.setStatus('current')
xdsl2ChConfProfMinDataRateLowPwrUs = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 251, 1, 5, 2, 1, 1, 9), Unsigned32()).setUnits('bits/second').setMaxAccess("readcreate")
if mibBuilder.loadTexts: xdsl2ChConfProfMinDataRateLowPwrUs.setStatus('current')
xdsl2ChConfProfMaxDelayDs = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 251, 1, 5, 2, 1, 1, 10), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 63))).setUnits('milliseconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: xdsl2ChConfProfMaxDelayDs.setStatus('current')
xdsl2ChConfProfMaxDelayUs = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 251, 1, 5, 2, 1, 1, 11), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 63))).setUnits('milliseconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: xdsl2ChConfProfMaxDelayUs.setStatus('current')
xdsl2ChConfProfMinProtectionDs = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 251, 1, 5, 2, 1, 1, 12), Xdsl2SymbolProtection().clone('noProtection')).setUnits('symbols').setMaxAccess("readcreate")
if mibBuilder.loadTexts: xdsl2ChConfProfMinProtectionDs.setStatus('current')
xdsl2ChConfProfMinProtectionUs = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 251, 1, 5, 2, 1, 1, 13), Xdsl2SymbolProtection().clone('noProtection')).setUnits('symbols').setMaxAccess("readcreate")
if mibBuilder.loadTexts: xdsl2ChConfProfMinProtectionUs.setStatus('current')
xdsl2ChConfProfMinProtection8Ds = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 251, 1, 5, 2, 1, 1, 14), Xdsl2SymbolProtection8().clone('noProtection')).setUnits('symbols').setMaxAccess("readcreate")
if mibBuilder.loadTexts: xdsl2ChConfProfMinProtection8Ds.setStatus('current')
xdsl2ChConfProfMinProtection8Us = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 251, 1, 5, 2, 1, 1, 15), Xdsl2SymbolProtection8().clone('noProtection')).setUnits('symbols').setMaxAccess("readcreate")
if mibBuilder.loadTexts: xdsl2ChConfProfMinProtection8Us.setStatus('current')
xdsl2ChConfProfMaxBerDs = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 251, 1, 5, 2, 1, 1, 16), Xdsl2MaxBer().clone('eminus5')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: xdsl2ChConfProfMaxBerDs.setStatus('current')
xdsl2ChConfProfMaxBerUs = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 251, 1, 5, 2, 1, 1, 17), Xdsl2MaxBer().clone('eminus5')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: xdsl2ChConfProfMaxBerUs.setStatus('current')
xdsl2ChConfProfUsDataRateDs = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 251, 1, 5, 2, 1, 1, 18), Unsigned32()).setUnits('bits/second').setMaxAccess("readcreate")
if mibBuilder.loadTexts: xdsl2ChConfProfUsDataRateDs.setStatus('current')
xdsl2ChConfProfDsDataRateDs = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 251, 1, 5, 2, 1, 1, 19), Unsigned32()).setUnits('bits/second').setMaxAccess("readcreate")
if mibBuilder.loadTexts: xdsl2ChConfProfDsDataRateDs.setStatus('current')
xdsl2ChConfProfUsDataRateUs = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 251, 1, 5, 2, 1, 1, 20), Unsigned32()).setUnits('bits/second').setMaxAccess("readcreate")
if mibBuilder.loadTexts: xdsl2ChConfProfUsDataRateUs.setStatus('current')
xdsl2ChConfProfDsDataRateUs = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 251, 1, 5, 2, 1, 1, 21), Unsigned32()).setUnits('bits/second').setMaxAccess("readcreate")
if mibBuilder.loadTexts: xdsl2ChConfProfDsDataRateUs.setStatus('current')
xdsl2ChConfProfImaEnabled = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 251, 1, 5, 2, 1, 1, 22), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: xdsl2ChConfProfImaEnabled.setStatus('current')
xdsl2ChConfProfMaxDelayVar = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 251, 1, 5, 2, 1, 1, 23), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 255)).clone(255)).setUnits('0.1 milliseconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: xdsl2ChConfProfMaxDelayVar.setStatus('current')
xdsl2ChConfProfInitPolicy = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 251, 1, 5, 2, 1, 1, 24), Xdsl2ChInitPolicy().clone('policy0')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: xdsl2ChConfProfInitPolicy.setStatus('current')
xdsl2ChConfProfRowStatus = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 251, 1, 5, 2, 1, 1, 25), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: xdsl2ChConfProfRowStatus.setStatus('current')
xdsl2LineAlarmConfTemplateTable = MibTable((1, 3, 6, 1, 2, 1, 10, 251, 1, 5, 3, 1), )
if mibBuilder.loadTexts: xdsl2LineAlarmConfTemplateTable.setStatus('current')
xdsl2LineAlarmConfTemplateEntry = MibTableRow((1, 3, 6, 1, 2, 1, 10, 251, 1, 5, 3, 1, 1), ).setIndexNames((0, "VDSL2-LINE-MIB", "xdsl2LAlarmConfTempTemplateName"))
if mibBuilder.loadTexts: xdsl2LineAlarmConfTemplateEntry.setStatus('current')
xdsl2LAlarmConfTempTemplateName = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 251, 1, 5, 3, 1, 1, 1), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 32)))
if mibBuilder.loadTexts: xdsl2LAlarmConfTempTemplateName.setStatus('current')
xdsl2LAlarmConfTempLineProfile = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 251, 1, 5, 3, 1, 1, 2), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 32)).clone('DEFVAL')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: xdsl2LAlarmConfTempLineProfile.setStatus('current')
xdsl2LAlarmConfTempChan1ConfProfile = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 251, 1, 5, 3, 1, 1, 3), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 32)).clone('DEFVAL')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: xdsl2LAlarmConfTempChan1ConfProfile.setStatus('current')
xdsl2LAlarmConfTempChan2ConfProfile = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 251, 1, 5, 3, 1, 1, 4), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: xdsl2LAlarmConfTempChan2ConfProfile.setStatus('current')
xdsl2LAlarmConfTempChan3ConfProfile = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 251, 1, 5, 3, 1, 1, 5), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: xdsl2LAlarmConfTempChan3ConfProfile.setStatus('current')
xdsl2LAlarmConfTempChan4ConfProfile = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 251, 1, 5, 3, 1, 1, 6), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: xdsl2LAlarmConfTempChan4ConfProfile.setStatus('current')
xdsl2LAlarmConfTempRowStatus = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 251, 1, 5, 3, 1, 1, 7), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: xdsl2LAlarmConfTempRowStatus.setStatus('current')
xdsl2LineAlarmConfProfileTable = MibTable((1, 3, 6, 1, 2, 1, 10, 251, 1, 5, 3, 2), )
if mibBuilder.loadTexts: xdsl2LineAlarmConfProfileTable.setStatus('current')
xdsl2LineAlarmConfProfileEntry = MibTableRow((1, 3, 6, 1, 2, 1, 10, 251, 1, 5, 3, 2, 1), ).setIndexNames((0, "VDSL2-LINE-MIB", "xdsl2LineAlarmConfProfileName"))
if mibBuilder.loadTexts: xdsl2LineAlarmConfProfileEntry.setStatus('current')
xdsl2LineAlarmConfProfileName = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 251, 1, 5, 3, 2, 1, 1), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 32)))
if mibBuilder.loadTexts: xdsl2LineAlarmConfProfileName.setStatus('current')
xdsl2LineAlarmConfProfileXtucThresh15MinFecs = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 251, 1, 5, 3, 2, 1, 2), HCPerfIntervalThreshold()).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: xdsl2LineAlarmConfProfileXtucThresh15MinFecs.setStatus('current')
xdsl2LineAlarmConfProfileXtucThresh15MinEs = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 251, 1, 5, 3, 2, 1, 3), HCPerfIntervalThreshold()).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: xdsl2LineAlarmConfProfileXtucThresh15MinEs.setStatus('current')
xdsl2LineAlarmConfProfileXtucThresh15MinSes = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 251, 1, 5, 3, 2, 1, 4), HCPerfIntervalThreshold()).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: xdsl2LineAlarmConfProfileXtucThresh15MinSes.setStatus('current')
xdsl2LineAlarmConfProfileXtucThresh15MinLoss = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 251, 1, 5, 3, 2, 1, 5), HCPerfIntervalThreshold()).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: xdsl2LineAlarmConfProfileXtucThresh15MinLoss.setStatus('current')
xdsl2LineAlarmConfProfileXtucThresh15MinUas = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 251, 1, 5, 3, 2, 1, 6), HCPerfIntervalThreshold()).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: xdsl2LineAlarmConfProfileXtucThresh15MinUas.setStatus('current')
xdsl2LineAlarmConfProfileXturThresh15MinFecs = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 251, 1, 5, 3, 2, 1, 7), HCPerfIntervalThreshold()).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: xdsl2LineAlarmConfProfileXturThresh15MinFecs.setStatus('current')
xdsl2LineAlarmConfProfileXturThresh15MinEs = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 251, 1, 5, 3, 2, 1, 8), HCPerfIntervalThreshold()).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: xdsl2LineAlarmConfProfileXturThresh15MinEs.setStatus('current')
xdsl2LineAlarmConfProfileXturThresh15MinSes = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 251, 1, 5, 3, 2, 1, 9), HCPerfIntervalThreshold()).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: xdsl2LineAlarmConfProfileXturThresh15MinSes.setStatus('current')
xdsl2LineAlarmConfProfileXturThresh15MinLoss = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 251, 1, 5, 3, 2, 1, 10), HCPerfIntervalThreshold()).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: xdsl2LineAlarmConfProfileXturThresh15MinLoss.setStatus('current')
xdsl2LineAlarmConfProfileXturThresh15MinUas = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 251, 1, 5, 3, 2, 1, 11), HCPerfIntervalThreshold()).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: xdsl2LineAlarmConfProfileXturThresh15MinUas.setStatus('current')
xdsl2LineAlarmConfProfileThresh15MinFailedFullInt = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 251, 1, 5, 3, 2, 1, 12), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: xdsl2LineAlarmConfProfileThresh15MinFailedFullInt.setStatus('current')
xdsl2LineAlarmConfProfileThresh15MinFailedShrtInt = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 251, 1, 5, 3, 2, 1, 13), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: xdsl2LineAlarmConfProfileThresh15MinFailedShrtInt.setStatus('current')
xdsl2LineAlarmConfProfileRowStatus = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 251, 1, 5, 3, 2, 1, 14), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: xdsl2LineAlarmConfProfileRowStatus.setStatus('current')
xdsl2ChAlarmConfProfileTable = MibTable((1, 3, 6, 1, 2, 1, 10, 251, 1, 5, 3, 3), )
if mibBuilder.loadTexts: xdsl2ChAlarmConfProfileTable.setStatus('current')
xdsl2ChAlarmConfProfileEntry = MibTableRow((1, 3, 6, 1, 2, 1, 10, 251, 1, 5, 3, 3, 1), ).setIndexNames((0, "VDSL2-LINE-MIB", "xdsl2ChAlarmConfProfileName"))
if mibBuilder.loadTexts: xdsl2ChAlarmConfProfileEntry.setStatus('current')
xdsl2ChAlarmConfProfileName = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 251, 1, 5, 3, 3, 1, 1), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 32)))
if mibBuilder.loadTexts: xdsl2ChAlarmConfProfileName.setStatus('current')
xdsl2ChAlarmConfProfileXtucThresh15MinCodingViolations = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 251, 1, 5, 3, 3, 1, 2), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: xdsl2ChAlarmConfProfileXtucThresh15MinCodingViolations.setStatus('current')
xdsl2ChAlarmConfProfileXtucThresh15MinCorrected = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 251, 1, 5, 3, 3, 1, 3), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: xdsl2ChAlarmConfProfileXtucThresh15MinCorrected.setStatus('current')
xdsl2ChAlarmConfProfileXturThresh15MinCodingViolations = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 251, 1, 5, 3, 3, 1, 4), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: xdsl2ChAlarmConfProfileXturThresh15MinCodingViolations.setStatus('current')
xdsl2ChAlarmConfProfileXturThresh15MinCorrected = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 251, 1, 5, 3, 3, 1, 5), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: xdsl2ChAlarmConfProfileXturThresh15MinCorrected.setStatus('current')
xdsl2ChAlarmConfProfileRowStatus = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 251, 1, 5, 3, 3, 1, 6), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: xdsl2ChAlarmConfProfileRowStatus.setStatus('current')
xdsl2PMLineCurrTable = MibTable((1, 3, 6, 1, 2, 1, 10, 251, 1, 4, 1, 1), )
if mibBuilder.loadTexts: xdsl2PMLineCurrTable.setStatus('current')
xdsl2PMLineCurrEntry = MibTableRow((1, 3, 6, 1, 2, 1, 10, 251, 1, 4, 1, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "VDSL2-LINE-MIB", "xdsl2PMLCurrUnit"))
if mibBuilder.loadTexts: xdsl2PMLineCurrEntry.setStatus('current')
xdsl2PMLCurrUnit = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 251, 1, 4, 1, 1, 1, 1), Xdsl2Unit())
if mibBuilder.loadTexts: xdsl2PMLCurrUnit.setStatus('current')
xdsl2PMLCurr15MValidIntervals = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 251, 1, 4, 1, 1, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 96))).setMaxAccess("readonly")
if mibBuilder.loadTexts: xdsl2PMLCurr15MValidIntervals.setStatus('current')
xdsl2PMLCurr15MInvalidIntervals = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 251, 1, 4, 1, 1, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 96))).setMaxAccess("readonly")
if mibBuilder.loadTexts: xdsl2PMLCurr15MInvalidIntervals.setStatus('current')
xdsl2PMLCurr15MTimeElapsed = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 251, 1, 4, 1, 1, 1, 4), HCPerfTimeElapsed()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: xdsl2PMLCurr15MTimeElapsed.setStatus('current')
xdsl2PMLCurr15MFecs = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 251, 1, 4, 1, 1, 1, 5), Counter32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: xdsl2PMLCurr15MFecs.setStatus('current')
xdsl2PMLCurr15MEs = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 251, 1, 4, 1, 1, 1, 6), Counter32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: xdsl2PMLCurr15MEs.setStatus('current')
xdsl2PMLCurr15MSes = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 251, 1, 4, 1, 1, 1, 7), Counter32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: xdsl2PMLCurr15MSes.setStatus('current')
xdsl2PMLCurr15MLoss = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 251, 1, 4, 1, 1, 1, 8), Counter32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: xdsl2PMLCurr15MLoss.setStatus('current')
xdsl2PMLCurr15MUas = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 251, 1, 4, 1, 1, 1, 9), Counter32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: xdsl2PMLCurr15MUas.setStatus('current')
xdsl2PMLCurr1DayValidIntervals = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 251, 1, 4, 1, 1, 1, 10), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 30))).setMaxAccess("readonly")
if mibBuilder.loadTexts: xdsl2PMLCurr1DayValidIntervals.setStatus('current')
xdsl2PMLCurr1DayInvalidIntervals = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 251, 1, 4, 1, 1, 1, 11), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 30))).setMaxAccess("readonly")
if mibBuilder.loadTexts: xdsl2PMLCurr1DayInvalidIntervals.setStatus('current')
xdsl2PMLCurr1DayTimeElapsed = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 251, 1, 4, 1, 1, 1, 12), HCPerfTimeElapsed()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: xdsl2PMLCurr1DayTimeElapsed.setStatus('current')
xdsl2PMLCurr1DayFecs = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 251, 1, 4, 1, 1, 1, 13), Counter32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: xdsl2PMLCurr1DayFecs.setStatus('current')
xdsl2PMLCurr1DayEs = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 251, 1, 4, 1, 1, 1, 14), Counter32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: xdsl2PMLCurr1DayEs.setStatus('current')
xdsl2PMLCurr1DaySes = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 251, 1, 4, 1, 1, 1, 15), Counter32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: xdsl2PMLCurr1DaySes.setStatus('current')
xdsl2PMLCurr1DayLoss = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 251, 1, 4, 1, 1, 1, 16), Counter32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: xdsl2PMLCurr1DayLoss.setStatus('current')
xdsl2PMLCurr1DayUas = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 251, 1, 4, 1, 1, 1, 17), Counter32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: xdsl2PMLCurr1DayUas.setStatus('current')
xdsl2PMLineInitCurrTable = MibTable((1, 3, 6, 1, 2, 1, 10, 251, 1, 4, 1, 2), )
if mibBuilder.loadTexts: xdsl2PMLineInitCurrTable.setStatus('current')
xdsl2PMLineInitCurrEntry = MibTableRow((1, 3, 6, 1, 2, 1, 10, 251, 1, 4, 1, 2, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: xdsl2PMLineInitCurrEntry.setStatus('current')
xdsl2PMLInitCurr15MValidIntervals = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 251, 1, 4, 1, 2, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 96))).setMaxAccess("readonly")
if mibBuilder.loadTexts: xdsl2PMLInitCurr15MValidIntervals.setStatus('current')
xdsl2PMLInitCurr15MInvalidIntervals = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 251, 1, 4, 1, 2, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 96))).setMaxAccess("readonly")
if mibBuilder.loadTexts: xdsl2PMLInitCurr15MInvalidIntervals.setStatus('current')
xdsl2PMLInitCurr15MTimeElapsed = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 251, 1, 4, 1, 2, 1, 3), Unsigned32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: xdsl2PMLInitCurr15MTimeElapsed.setStatus('current')
xdsl2PMLInitCurr15MFullInits = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 251, 1, 4, 1, 2, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xdsl2PMLInitCurr15MFullInits.setStatus('current')
xdsl2PMLInitCurr15MFailedFullInits = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 251, 1, 4, 1, 2, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xdsl2PMLInitCurr15MFailedFullInits.setStatus('current')
xdsl2PMLInitCurr15MShortInits = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 251, 1, 4, 1, 2, 1, 6), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xdsl2PMLInitCurr15MShortInits.setStatus('current')
xdsl2PMLInitCurr15MFailedShortInits = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 251, 1, 4, 1, 2, 1, 7), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xdsl2PMLInitCurr15MFailedShortInits.setStatus('current')
xdsl2PMLInitCurr1DayValidIntervals = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 251, 1, 4, 1, 2, 1, 8), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 30))).setMaxAccess("readonly")
if mibBuilder.loadTexts: xdsl2PMLInitCurr1DayValidIntervals.setStatus('current')
xdsl2PMLInitCurr1DayInvalidIntervals = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 251, 1, 4, 1, 2, 1, 9), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 30))).setMaxAccess("readonly")
if mibBuilder.loadTexts: xdsl2PMLInitCurr1DayInvalidIntervals.setStatus('current')
xdsl2PMLInitCurr1DayTimeElapsed = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 251, 1, 4, 1, 2, 1, 10), Unsigned32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: xdsl2PMLInitCurr1DayTimeElapsed.setStatus('current')
xdsl2PMLInitCurr1DayFullInits = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 251, 1, 4, 1, 2, 1, 11), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xdsl2PMLInitCurr1DayFullInits.setStatus('current')
xdsl2PMLInitCurr1DayFailedFullInits = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 251, 1, 4, 1, 2, 1, 12), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xdsl2PMLInitCurr1DayFailedFullInits.setStatus('current')
xdsl2PMLInitCurr1DayShortInits = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 251, 1, 4, 1, 2, 1, 13), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xdsl2PMLInitCurr1DayShortInits.setStatus('current')
xdsl2PMLInitCurr1DayFailedShortInits = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 251, 1, 4, 1, 2, 1, 14), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xdsl2PMLInitCurr1DayFailedShortInits.setStatus('current')
xdsl2PMLineHist15MinTable = MibTable((1, 3, 6, 1, 2, 1, 10, 251, 1, 4, 1, 3), )
if mibBuilder.loadTexts: xdsl2PMLineHist15MinTable.setStatus('current')
xdsl2PMLineHist15MinEntry = MibTableRow((1, 3, 6, 1, 2, 1, 10, 251, 1, 4, 1, 3, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "VDSL2-LINE-MIB", "xdsl2PMLHist15MUnit"), (0, "VDSL2-LINE-MIB", "xdsl2PMLHist15MInterval"))
if mibBuilder.loadTexts: xdsl2PMLineHist15MinEntry.setStatus('current')
xdsl2PMLHist15MUnit = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 251, 1, 4, 1, 3, 1, 1), Xdsl2Unit())
if mibBuilder.loadTexts: xdsl2PMLHist15MUnit.setStatus('current')
xdsl2PMLHist15MInterval = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 251, 1, 4, 1, 3, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 96)))
if mibBuilder.loadTexts: xdsl2PMLHist15MInterval.setStatus('current')
xdsl2PMLHist15MMonitoredTime = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 251, 1, 4, 1, 3, 1, 3), Unsigned32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: xdsl2PMLHist15MMonitoredTime.setStatus('current')
xdsl2PMLHist15MFecs = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 251, 1, 4, 1, 3, 1, 4), Counter32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: xdsl2PMLHist15MFecs.setStatus('current')
xdsl2PMLHist15MEs = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 251, 1, 4, 1, 3, 1, 5), Counter32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: xdsl2PMLHist15MEs.setStatus('current')
xdsl2PMLHist15MSes = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 251, 1, 4, 1, 3, 1, 6), Counter32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: xdsl2PMLHist15MSes.setStatus('current')
xdsl2PMLHist15MLoss = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 251, 1, 4, 1, 3, 1, 7), Counter32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: xdsl2PMLHist15MLoss.setStatus('current')
xdsl2PMLHist15MUas = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 251, 1, 4, 1, 3, 1, 8), Counter32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: xdsl2PMLHist15MUas.setStatus('current')
xdsl2PMLHist15MValidInterval = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 251, 1, 4, 1, 3, 1, 9), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xdsl2PMLHist15MValidInterval.setStatus('current')
xdsl2PMLineHist1DayTable = MibTable((1, 3, 6, 1, 2, 1, 10, 251, 1, 4, 1, 4), )
if mibBuilder.loadTexts: xdsl2PMLineHist1DayTable.setStatus('current')
xdsl2PMLineHist1DayEntry = MibTableRow((1, 3, 6, 1, 2, 1, 10, 251, 1, 4, 1, 4, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "VDSL2-LINE-MIB", "xdsl2PMLHist1DUnit"), (0, "VDSL2-LINE-MIB", "xdsl2PMLHist1DInterval"))
if mibBuilder.loadTexts: xdsl2PMLineHist1DayEntry.setStatus('current')
xdsl2PMLHist1DUnit = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 251, 1, 4, 1, 4, 1, 1), Xdsl2Unit())
if mibBuilder.loadTexts: xdsl2PMLHist1DUnit.setStatus('current')
xdsl2PMLHist1DInterval = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 251, 1, 4, 1, 4, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 30)))
if mibBuilder.loadTexts: xdsl2PMLHist1DInterval.setStatus('current')
xdsl2PMLHist1DMonitoredTime = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 251, 1, 4, 1, 4, 1, 3), Unsigned32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: xdsl2PMLHist1DMonitoredTime.setStatus('current')
xdsl2PMLHist1DFecs = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 251, 1, 4, 1, 4, 1, 4), Counter32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: xdsl2PMLHist1DFecs.setStatus('current')
xdsl2PMLHist1DEs = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 251, 1, 4, 1, 4, 1, 5), Counter32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: xdsl2PMLHist1DEs.setStatus('current')
xdsl2PMLHist1DSes = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 251, 1, 4, 1, 4, 1, 6), Counter32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: xdsl2PMLHist1DSes.setStatus('current')
xdsl2PMLHist1DLoss = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 251, 1, 4, 1, 4, 1, 7), Counter32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: xdsl2PMLHist1DLoss.setStatus('current')
xdsl2PMLHist1DUas = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 251, 1, 4, 1, 4, 1, 8), Counter32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: xdsl2PMLHist1DUas.setStatus('current')
xdsl2PMLHist1DValidInterval = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 251, 1, 4, 1, 4, 1, 9), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xdsl2PMLHist1DValidInterval.setStatus('current')
xdsl2PMLineInitHist15MinTable = MibTable((1, 3, 6, 1, 2, 1, 10, 251, 1, 4, 1, 5), )
if mibBuilder.loadTexts: xdsl2PMLineInitHist15MinTable.setStatus('current')
xdsl2PMLineInitHist15MinEntry = MibTableRow((1, 3, 6, 1, 2, 1, 10, 251, 1, 4, 1, 5, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "VDSL2-LINE-MIB", "xdsl2PMLInitHist15MInterval"))
if mibBuilder.loadTexts: xdsl2PMLineInitHist15MinEntry.setStatus('current')
xdsl2PMLInitHist15MInterval = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 251, 1, 4, 1, 5, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 96)))
if mibBuilder.loadTexts: xdsl2PMLInitHist15MInterval.setStatus('current')
xdsl2PMLInitHist15MMonitoredTime = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 251, 1, 4, 1, 5, 1, 2), Unsigned32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: xdsl2PMLInitHist15MMonitoredTime.setStatus('current')
xdsl2PMLInitHist15MFullInits = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 251, 1, 4, 1, 5, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xdsl2PMLInitHist15MFullInits.setStatus('current')
xdsl2PMLInitHist15MFailedFullInits = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 251, 1, 4, 1, 5, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xdsl2PMLInitHist15MFailedFullInits.setStatus('current')
xdsl2PMLInitHist15MShortInits = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 251, 1, 4, 1, 5, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xdsl2PMLInitHist15MShortInits.setStatus('current')
xdsl2PMLInitHist15MFailedShortInits = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 251, 1, 4, 1, 5, 1, 6), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xdsl2PMLInitHist15MFailedShortInits.setStatus('current')
xdsl2PMLInitHist15MValidInterval = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 251, 1, 4, 1, 5, 1, 7), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xdsl2PMLInitHist15MValidInterval.setStatus('current')
xdsl2PMLineInitHist1DayTable = MibTable((1, 3, 6, 1, 2, 1, 10, 251, 1, 4, 1, 6), )
if mibBuilder.loadTexts: xdsl2PMLineInitHist1DayTable.setStatus('current')
xdsl2PMLineInitHist1DayEntry = MibTableRow((1, 3, 6, 1, 2, 1, 10, 251, 1, 4, 1, 6, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "VDSL2-LINE-MIB", "xdsl2PMLInitHist1DInterval"))
if mibBuilder.loadTexts: xdsl2PMLineInitHist1DayEntry.setStatus('current')
xdsl2PMLInitHist1DInterval = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 251, 1, 4, 1, 6, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 30)))
if mibBuilder.loadTexts: xdsl2PMLInitHist1DInterval.setStatus('current')
xdsl2PMLInitHist1DMonitoredTime = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 251, 1, 4, 1, 6, 1, 2), Unsigned32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: xdsl2PMLInitHist1DMonitoredTime.setStatus('current')
xdsl2PMLInitHist1DFullInits = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 251, 1, 4, 1, 6, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xdsl2PMLInitHist1DFullInits.setStatus('current')
xdsl2PMLInitHist1DFailedFullInits = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 251, 1, 4, 1, 6, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xdsl2PMLInitHist1DFailedFullInits.setStatus('current')
xdsl2PMLInitHist1DShortInits = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 251, 1, 4, 1, 6, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xdsl2PMLInitHist1DShortInits.setStatus('current')
xdsl2PMLInitHist1DFailedShortInits = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 251, 1, 4, 1, 6, 1, 6), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xdsl2PMLInitHist1DFailedShortInits.setStatus('current')
xdsl2PMLInitHist1DValidInterval = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 251, 1, 4, 1, 6, 1, 7), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xdsl2PMLInitHist1DValidInterval.setStatus('current')
xdsl2PMChCurrTable = MibTable((1, 3, 6, 1, 2, 1, 10, 251, 1, 4, 2, 1), )
if mibBuilder.loadTexts: xdsl2PMChCurrTable.setStatus('current')
xdsl2PMChCurrEntry = MibTableRow((1, 3, 6, 1, 2, 1, 10, 251, 1, 4, 2, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "VDSL2-LINE-MIB", "xdsl2PMChCurrUnit"))
if mibBuilder.loadTexts: xdsl2PMChCurrEntry.setStatus('current')
xdsl2PMChCurrUnit = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 251, 1, 4, 2, 1, 1, 1), Xdsl2Unit())
if mibBuilder.loadTexts: xdsl2PMChCurrUnit.setStatus('current')
xdsl2PMChCurr15MValidIntervals = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 251, 1, 4, 2, 1, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 96))).setMaxAccess("readonly")
if mibBuilder.loadTexts: xdsl2PMChCurr15MValidIntervals.setStatus('current')
xdsl2PMChCurr15MInvalidIntervals = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 251, 1, 4, 2, 1, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 96))).setMaxAccess("readonly")
if mibBuilder.loadTexts: xdsl2PMChCurr15MInvalidIntervals.setStatus('current')
xdsl2PMChCurr15MTimeElapsed = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 251, 1, 4, 2, 1, 1, 4), HCPerfTimeElapsed()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: xdsl2PMChCurr15MTimeElapsed.setStatus('current')
xdsl2PMChCurr15MCodingViolations = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 251, 1, 4, 2, 1, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xdsl2PMChCurr15MCodingViolations.setStatus('current')
xdsl2PMChCurr15MCorrectedBlocks = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 251, 1, 4, 2, 1, 1, 6), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xdsl2PMChCurr15MCorrectedBlocks.setStatus('current')
xdsl2PMChCurr1DayValidIntervals = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 251, 1, 4, 2, 1, 1, 7), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 30))).setMaxAccess("readonly")
if mibBuilder.loadTexts: xdsl2PMChCurr1DayValidIntervals.setStatus('current')
xdsl2PMChCurr1DayInvalidIntervals = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 251, 1, 4, 2, 1, 1, 8), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 30))).setMaxAccess("readonly")
if mibBuilder.loadTexts: xdsl2PMChCurr1DayInvalidIntervals.setStatus('current')
xdsl2PMChCurr1DayTimeElapsed = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 251, 1, 4, 2, 1, 1, 9), HCPerfTimeElapsed()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: xdsl2PMChCurr1DayTimeElapsed.setStatus('current')
xdsl2PMChCurr1DayCodingViolations = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 251, 1, 4, 2, 1, 1, 10), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xdsl2PMChCurr1DayCodingViolations.setStatus('current')
xdsl2PMChCurr1DayCorrectedBlocks = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 251, 1, 4, 2, 1, 1, 11), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xdsl2PMChCurr1DayCorrectedBlocks.setStatus('current')
xdsl2PMChHist15MinTable = MibTable((1, 3, 6, 1, 2, 1, 10, 251, 1, 4, 2, 2), )
if mibBuilder.loadTexts: xdsl2PMChHist15MinTable.setStatus('current')
xdsl2PMChHist15MinEntry = MibTableRow((1, 3, 6, 1, 2, 1, 10, 251, 1, 4, 2, 2, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "VDSL2-LINE-MIB", "xdsl2PMChHist15MUnit"), (0, "VDSL2-LINE-MIB", "xdsl2PMChHist15MInterval"))
if mibBuilder.loadTexts: xdsl2PMChHist15MinEntry.setStatus('current')
xdsl2PMChHist15MUnit = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 251, 1, 4, 2, 2, 1, 1), Xdsl2Unit())
if mibBuilder.loadTexts: xdsl2PMChHist15MUnit.setStatus('current')
xdsl2PMChHist15MInterval = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 251, 1, 4, 2, 2, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 96)))
if mibBuilder.loadTexts: xdsl2PMChHist15MInterval.setStatus('current')
xdsl2PMChHist15MMonitoredTime = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 251, 1, 4, 2, 2, 1, 3), Unsigned32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: xdsl2PMChHist15MMonitoredTime.setStatus('current')
xdsl2PMChHist15MCodingViolations = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 251, 1, 4, 2, 2, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xdsl2PMChHist15MCodingViolations.setStatus('current')
xdsl2PMChHist15MCorrectedBlocks = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 251, 1, 4, 2, 2, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xdsl2PMChHist15MCorrectedBlocks.setStatus('current')
xdsl2PMChHist15MValidInterval = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 251, 1, 4, 2, 2, 1, 6), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xdsl2PMChHist15MValidInterval.setStatus('current')
xdsl2PMChHist1DTable = MibTable((1, 3, 6, 1, 2, 1, 10, 251, 1, 4, 2, 3), )
if mibBuilder.loadTexts: xdsl2PMChHist1DTable.setStatus('current')
xdsl2PMChHist1DEntry = MibTableRow((1, 3, 6, 1, 2, 1, 10, 251, 1, 4, 2, 3, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "VDSL2-LINE-MIB", "xdsl2PMChHist1DUnit"), (0, "VDSL2-LINE-MIB", "xdsl2PMChHist1DInterval"))
if mibBuilder.loadTexts: xdsl2PMChHist1DEntry.setStatus('current')
xdsl2PMChHist1DUnit = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 251, 1, 4, 2, 3, 1, 1), Xdsl2Unit())
if mibBuilder.loadTexts: xdsl2PMChHist1DUnit.setStatus('current')
xdsl2PMChHist1DInterval = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 251, 1, 4, 2, 3, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 30)))
if mibBuilder.loadTexts: xdsl2PMChHist1DInterval.setStatus('current')
xdsl2PMChHist1DMonitoredTime = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 251, 1, 4, 2, 3, 1, 3), Unsigned32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: xdsl2PMChHist1DMonitoredTime.setStatus('current')
xdsl2PMChHist1DCodingViolations = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 251, 1, 4, 2, 3, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xdsl2PMChHist1DCodingViolations.setStatus('current')
xdsl2PMChHist1DCorrectedBlocks = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 251, 1, 4, 2, 3, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xdsl2PMChHist1DCorrectedBlocks.setStatus('current')
xdsl2PMChHist1DValidInterval = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 251, 1, 4, 2, 3, 1, 6), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xdsl2PMChHist1DValidInterval.setStatus('current')
xdsl2LinePerfFECSThreshXtuc = NotificationType((1, 3, 6, 1, 2, 1, 10, 251, 0, 1)).setObjects(("VDSL2-LINE-MIB", "xdsl2PMLCurr15MFecs"), ("VDSL2-LINE-MIB", "xdsl2LineAlarmConfProfileXtucThresh15MinFecs"))
if mibBuilder.loadTexts: xdsl2LinePerfFECSThreshXtuc.setStatus('current')
xdsl2LinePerfFECSThreshXtur = NotificationType((1, 3, 6, 1, 2, 1, 10, 251, 0, 2)).setObjects(("VDSL2-LINE-MIB", "xdsl2PMLCurr15MFecs"), ("VDSL2-LINE-MIB", "xdsl2LineAlarmConfProfileXturThresh15MinFecs"))
if mibBuilder.loadTexts: xdsl2LinePerfFECSThreshXtur.setStatus('current')
xdsl2LinePerfESThreshXtuc = NotificationType((1, 3, 6, 1, 2, 1, 10, 251, 0, 3)).setObjects(("VDSL2-LINE-MIB", "xdsl2PMLCurr15MEs"), ("VDSL2-LINE-MIB", "xdsl2LineAlarmConfProfileXtucThresh15MinEs"))
if mibBuilder.loadTexts: xdsl2LinePerfESThreshXtuc.setStatus('current')
xdsl2LinePerfESThreshXtur = NotificationType((1, 3, 6, 1, 2, 1, 10, 251, 0, 4)).setObjects(("VDSL2-LINE-MIB", "xdsl2PMLCurr15MEs"), ("VDSL2-LINE-MIB", "xdsl2LineAlarmConfProfileXturThresh15MinEs"))
if mibBuilder.loadTexts: xdsl2LinePerfESThreshXtur.setStatus('current')
xdsl2LinePerfSESThreshXtuc = NotificationType((1, 3, 6, 1, 2, 1, 10, 251, 0, 5)).setObjects(("VDSL2-LINE-MIB", "xdsl2PMLCurr15MSes"), ("VDSL2-LINE-MIB", "xdsl2LineAlarmConfProfileXtucThresh15MinSes"))
if mibBuilder.loadTexts: xdsl2LinePerfSESThreshXtuc.setStatus('current')
xdsl2LinePerfSESThreshXtur = NotificationType((1, 3, 6, 1, 2, 1, 10, 251, 0, 6)).setObjects(("VDSL2-LINE-MIB", "xdsl2PMLCurr15MSes"), ("VDSL2-LINE-MIB", "xdsl2LineAlarmConfProfileXturThresh15MinSes"))
if mibBuilder.loadTexts: xdsl2LinePerfSESThreshXtur.setStatus('current')
xdsl2LinePerfLOSSThreshXtuc = NotificationType((1, 3, 6, 1, 2, 1, 10, 251, 0, 7)).setObjects(("VDSL2-LINE-MIB", "xdsl2PMLCurr15MLoss"), ("VDSL2-LINE-MIB", "xdsl2LineAlarmConfProfileXtucThresh15MinLoss"))
if mibBuilder.loadTexts: xdsl2LinePerfLOSSThreshXtuc.setStatus('current')
xdsl2LinePerfLOSSThreshXtur = NotificationType((1, 3, 6, 1, 2, 1, 10, 251, 0, 8)).setObjects(("VDSL2-LINE-MIB", "xdsl2PMLCurr15MLoss"), ("VDSL2-LINE-MIB", "xdsl2LineAlarmConfProfileXturThresh15MinLoss"))
if mibBuilder.loadTexts: xdsl2LinePerfLOSSThreshXtur.setStatus('current')
xdsl2LinePerfUASThreshXtuc = NotificationType((1, 3, 6, 1, 2, 1, 10, 251, 0, 9)).setObjects(("VDSL2-LINE-MIB", "xdsl2PMLCurr15MUas"), ("VDSL2-LINE-MIB", "xdsl2LineAlarmConfProfileXtucThresh15MinUas"))
if mibBuilder.loadTexts: xdsl2LinePerfUASThreshXtuc.setStatus('current')
xdsl2LinePerfUASThreshXtur = NotificationType((1, 3, 6, 1, 2, 1, 10, 251, 0, 10)).setObjects(("VDSL2-LINE-MIB", "xdsl2PMLCurr15MUas"), ("VDSL2-LINE-MIB", "xdsl2LineAlarmConfProfileXturThresh15MinUas"))
if mibBuilder.loadTexts: xdsl2LinePerfUASThreshXtur.setStatus('current')
xdsl2LinePerfCodingViolationsThreshXtuc = NotificationType((1, 3, 6, 1, 2, 1, 10, 251, 0, 11)).setObjects(("VDSL2-LINE-MIB", "xdsl2PMChCurr15MCodingViolations"), ("VDSL2-LINE-MIB", "xdsl2ChAlarmConfProfileXtucThresh15MinCodingViolations"))
if mibBuilder.loadTexts: xdsl2LinePerfCodingViolationsThreshXtuc.setStatus('current')
xdsl2LinePerfCodingViolationsThreshXtur = NotificationType((1, 3, 6, 1, 2, 1, 10, 251, 0, 12)).setObjects(("VDSL2-LINE-MIB", "xdsl2PMChCurr15MCodingViolations"), ("VDSL2-LINE-MIB", "xdsl2ChAlarmConfProfileXturThresh15MinCodingViolations"))
if mibBuilder.loadTexts: xdsl2LinePerfCodingViolationsThreshXtur.setStatus('current')
xdsl2LinePerfCorrectedThreshXtuc = NotificationType((1, 3, 6, 1, 2, 1, 10, 251, 0, 13)).setObjects(("VDSL2-LINE-MIB", "xdsl2PMChCurr15MCorrectedBlocks"), ("VDSL2-LINE-MIB", "xdsl2ChAlarmConfProfileXtucThresh15MinCorrected"))
if mibBuilder.loadTexts: xdsl2LinePerfCorrectedThreshXtuc.setStatus('current')
xdsl2LinePerfCorrectedThreshXtur = NotificationType((1, 3, 6, 1, 2, 1, 10, 251, 0, 14)).setObjects(("VDSL2-LINE-MIB", "xdsl2PMChCurr15MCorrectedBlocks"), ("VDSL2-LINE-MIB", "xdsl2ChAlarmConfProfileXturThresh15MinCorrected"))
if mibBuilder.loadTexts: xdsl2LinePerfCorrectedThreshXtur.setStatus('current')
xdsl2LinePerfFailedFullInitThresh = NotificationType((1, 3, 6, 1, 2, 1, 10, 251, 0, 15)).setObjects(("VDSL2-LINE-MIB", "xdsl2PMLInitCurr15MFailedFullInits"), ("VDSL2-LINE-MIB", "xdsl2LineAlarmConfProfileThresh15MinFailedFullInt"))
if mibBuilder.loadTexts: xdsl2LinePerfFailedFullInitThresh.setStatus('current')
xdsl2LinePerfFailedShortInitThresh = NotificationType((1, 3, 6, 1, 2, 1, 10, 251, 0, 16)).setObjects(("VDSL2-LINE-MIB", "xdsl2PMLInitCurr15MFailedShortInits"), ("VDSL2-LINE-MIB", "xdsl2LineAlarmConfProfileThresh15MinFailedShrtInt"))
if mibBuilder.loadTexts: xdsl2LinePerfFailedShortInitThresh.setStatus('current')
xdsl2LineStatusChangeXtuc = NotificationType((1, 3, 6, 1, 2, 1, 10, 251, 0, 17)).setObjects(("VDSL2-LINE-MIB", "xdsl2LineStatusXtuc"))
if mibBuilder.loadTexts: xdsl2LineStatusChangeXtuc.setStatus('current')
xdsl2LineStatusChangeXtur = NotificationType((1, 3, 6, 1, 2, 1, 10, 251, 0, 18)).setObjects(("VDSL2-LINE-MIB", "xdsl2LineStatusXtur"))
if mibBuilder.loadTexts: xdsl2LineStatusChangeXtur.setStatus('current')
xdsl2Groups = MibIdentifier((1, 3, 6, 1, 2, 1, 10, 251, 2, 1))
xdsl2Compliances = MibIdentifier((1, 3, 6, 1, 2, 1, 10, 251, 2, 2))
xdsl2LineMibCompliance = ModuleCompliance((1, 3, 6, 1, 2, 1, 10, 251, 2, 2, 1)).setObjects(("VDSL2-LINE-MIB", "xdsl2LineGroup"), ("VDSL2-LINE-MIB", "xdsl2ChannelStatusGroup"), ("VDSL2-LINE-MIB", "xdsl2SCStatusGroup"), ("VDSL2-LINE-MIB", "xdsl2LineInventoryGroup"), ("VDSL2-LINE-MIB", "xdsl2LineConfTemplateGroup"), ("VDSL2-LINE-MIB", "xdsl2LineConfProfGroup"), ("VDSL2-LINE-MIB", "xdsl2LineConfProfModeSpecGroup"), ("VDSL2-LINE-MIB", "xdsl2LineConfProfModeSpecBandUsGroup"), ("VDSL2-LINE-MIB", "xdsl2ChConfProfileGroup"), ("VDSL2-LINE-MIB", "xdsl2LineAlarmConfTemplateGroup"), ("VDSL2-LINE-MIB", "xdsl2PMLineCurrGroup"), ("VDSL2-LINE-MIB", "xdsl2PMLineInitCurrGroup"), ("VDSL2-LINE-MIB", "xdsl2PMLineHist15MinGroup"), ("VDSL2-LINE-MIB", "xdsl2PMLineHist1DayGroup"), ("VDSL2-LINE-MIB", "xdsl2PMLineInitHist15MinGroup"), ("VDSL2-LINE-MIB", "xdsl2PMLineInitHist1DayGroup"), ("VDSL2-LINE-MIB", "xdsl2PMChCurrGroup"), ("VDSL2-LINE-MIB", "xdsl2PMChHist15MinGroup"), ("VDSL2-LINE-MIB", "xdsl2PMChHist1DGroup"), ("VDSL2-LINE-MIB", "xdsl2LineFallbackGroup"), ("VDSL2-LINE-MIB", "xdsl2LineBpscGroup"), ("VDSL2-LINE-MIB", "xdsl2LineSegmentGroup"), ("VDSL2-LINE-MIB", "xdsl2ChannelStatusAtmGroup"), ("VDSL2-LINE-MIB", "xdsl2ChannelStatusPtmGroup"), ("VDSL2-LINE-MIB", "xdsl2LineConfProfRaGroup"), ("VDSL2-LINE-MIB", "xdsl2LineConfProfMsgMinGroup"), ("VDSL2-LINE-MIB", "xdsl2LineAlarmConfProfileGroup"), ("VDSL2-LINE-MIB", "xdsl2ChAlarmConfProfileGroup"), ("VDSL2-LINE-MIB", "xdsl2ChConfProfileAtmGroup"), ("VDSL2-LINE-MIB", "xdsl2ChConfProfileMinResGroup"), ("VDSL2-LINE-MIB", "xdsl2ChConfProfileOptAttrGroup"), ("VDSL2-LINE-MIB", "xdsl2PMLineInitCurrShortGroup"), ("VDSL2-LINE-MIB", "xdsl2PMLineInitHist15MinShortGroup"), ("VDSL2-LINE-MIB", "xdsl2PMLineInitHist1DayShortGroup"), ("VDSL2-LINE-MIB", "xdsl2ScalarSCGroup"), ("VDSL2-LINE-MIB", "xdsl2ThreshNotificationGroup"), ("VDSL2-LINE-MIB", "xdsl2StatusChangeNotificationGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    xdsl2LineMibCompliance = xdsl2LineMibCompliance.setStatus('current')
xdsl2LineGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 10, 251, 2, 1, 1)).setObjects(("VDSL2-LINE-MIB", "xdsl2LineConfTemplate"), ("VDSL2-LINE-MIB", "xdsl2LineAlarmConfTemplate"), ("VDSL2-LINE-MIB", "xdsl2LineCmndConfPmsf"), ("VDSL2-LINE-MIB", "xdsl2LineCmndConfLdsf"), ("VDSL2-LINE-MIB", "xdsl2LineCmndConfLdsfFailReason"), ("VDSL2-LINE-MIB", "xdsl2LineCmndAutomodeColdStart"), ("VDSL2-LINE-MIB", "xdsl2LineCmndConfReset"), ("VDSL2-LINE-MIB", "xdsl2LineStatusXtuTransSys"), ("VDSL2-LINE-MIB", "xdsl2LineStatusPwrMngState"), ("VDSL2-LINE-MIB", "xdsl2LineStatusInitResult"), ("VDSL2-LINE-MIB", "xdsl2LineStatusLastStateDs"), ("VDSL2-LINE-MIB", "xdsl2LineStatusLastStateUs"), ("VDSL2-LINE-MIB", "xdsl2LineStatusXtur"), ("VDSL2-LINE-MIB", "xdsl2LineStatusXtuc"), ("VDSL2-LINE-MIB", "xdsl2LineStatusAttainableRateDs"), ("VDSL2-LINE-MIB", "xdsl2LineStatusAttainableRateUs"), ("VDSL2-LINE-MIB", "xdsl2LineStatusActPsdDs"), ("VDSL2-LINE-MIB", "xdsl2LineStatusActPsdUs"), ("VDSL2-LINE-MIB", "xdsl2LineStatusActAtpDs"), ("VDSL2-LINE-MIB", "xdsl2LineStatusActAtpUs"), ("VDSL2-LINE-MIB", "xdsl2LineStatusActProfile"), ("VDSL2-LINE-MIB", "xdsl2LineStatusActLimitMask"), ("VDSL2-LINE-MIB", "xdsl2LineStatusActUs0Mask"), ("VDSL2-LINE-MIB", "xdsl2LineStatusActSnrModeDs"), ("VDSL2-LINE-MIB", "xdsl2LineStatusActSnrModeUs"), ("VDSL2-LINE-MIB", "xdsl2LineStatusElectricalLength"), ("VDSL2-LINE-MIB", "xdsl2LineStatusTssiDs"), ("VDSL2-LINE-MIB", "xdsl2LineStatusTssiUs"), ("VDSL2-LINE-MIB", "xdsl2LineStatusMrefPsdDs"), ("VDSL2-LINE-MIB", "xdsl2LineStatusMrefPsdUs"), ("VDSL2-LINE-MIB", "xdsl2LineStatusTrellisDs"), ("VDSL2-LINE-MIB", "xdsl2LineStatusTrellisUs"), ("VDSL2-LINE-MIB", "xdsl2LineStatusActualCe"), ("VDSL2-LINE-MIB", "xdsl2LineBandStatusLnAtten"), ("VDSL2-LINE-MIB", "xdsl2LineBandStatusSigAtten"), ("VDSL2-LINE-MIB", "xdsl2LineBandStatusSnrMargin"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    xdsl2LineGroup = xdsl2LineGroup.setStatus('current')
xdsl2LineFallbackGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 10, 251, 2, 1, 2)).setObjects(("VDSL2-LINE-MIB", "xdsl2LineConfFallbackTemplate"), ("VDSL2-LINE-MIB", "xdsl2LineStatusActTemplate"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    xdsl2LineFallbackGroup = xdsl2LineFallbackGroup.setStatus('current')
xdsl2LineBpscGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 10, 251, 2, 1, 3)).setObjects(("VDSL2-LINE-MIB", "xdsl2LineCmndConfBpsc"), ("VDSL2-LINE-MIB", "xdsl2LineCmndConfBpscFailReason"), ("VDSL2-LINE-MIB", "xdsl2LineCmndConfBpscRequests"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    xdsl2LineBpscGroup = xdsl2LineBpscGroup.setStatus('current')
xdsl2LineSegmentGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 10, 251, 2, 1, 4)).setObjects(("VDSL2-LINE-MIB", "xdsl2LineSegmentBitsAlloc"), ("VDSL2-LINE-MIB", "xdsl2LineSegmentRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    xdsl2LineSegmentGroup = xdsl2LineSegmentGroup.setStatus('current')
xdsl2ChannelStatusGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 10, 251, 2, 1, 5)).setObjects(("VDSL2-LINE-MIB", "xdsl2ChStatusActDataRate"), ("VDSL2-LINE-MIB", "xdsl2ChStatusPrevDataRate"), ("VDSL2-LINE-MIB", "xdsl2ChStatusActDelay"), ("VDSL2-LINE-MIB", "xdsl2ChStatusActInp"), ("VDSL2-LINE-MIB", "xdsl2ChStatusInpReport"), ("VDSL2-LINE-MIB", "xdsl2ChStatusNFec"), ("VDSL2-LINE-MIB", "xdsl2ChStatusRFec"), ("VDSL2-LINE-MIB", "xdsl2ChStatusLSymb"), ("VDSL2-LINE-MIB", "xdsl2ChStatusIntlvDepth"), ("VDSL2-LINE-MIB", "xdsl2ChStatusIntlvBlock"), ("VDSL2-LINE-MIB", "xdsl2ChStatusLPath"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    xdsl2ChannelStatusGroup = xdsl2ChannelStatusGroup.setStatus('current')
xdsl2ChannelStatusAtmGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 10, 251, 2, 1, 6)).setObjects(("VDSL2-LINE-MIB", "xdsl2ChStatusAtmStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    xdsl2ChannelStatusAtmGroup = xdsl2ChannelStatusAtmGroup.setStatus('current')
xdsl2ChannelStatusPtmGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 10, 251, 2, 1, 7)).setObjects(("VDSL2-LINE-MIB", "xdsl2ChStatusPtmStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    xdsl2ChannelStatusPtmGroup = xdsl2ChannelStatusPtmGroup.setStatus('current')
xdsl2SCStatusGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 10, 251, 2, 1, 8)).setObjects(("VDSL2-LINE-MIB", "xdsl2SCStatusLinScale"), ("VDSL2-LINE-MIB", "xdsl2SCStatusLinScGroupSize"), ("VDSL2-LINE-MIB", "xdsl2SCStatusLogMt"), ("VDSL2-LINE-MIB", "xdsl2SCStatusLogScGroupSize"), ("VDSL2-LINE-MIB", "xdsl2SCStatusQlnMt"), ("VDSL2-LINE-MIB", "xdsl2SCStatusQlnScGroupSize"), ("VDSL2-LINE-MIB", "xdsl2SCStatusSnrMtime"), ("VDSL2-LINE-MIB", "xdsl2SCStatusSnrScGroupSize"), ("VDSL2-LINE-MIB", "xdsl2SCStatusBandLnAtten"), ("VDSL2-LINE-MIB", "xdsl2SCStatusBandSigAtten"), ("VDSL2-LINE-MIB", "xdsl2SCStatusAttainableRate"), ("VDSL2-LINE-MIB", "xdsl2SCStatusRowStatus"), ("VDSL2-LINE-MIB", "xdsl2SCStatusSegmentLinReal"), ("VDSL2-LINE-MIB", "xdsl2SCStatusSegmentLinImg"), ("VDSL2-LINE-MIB", "xdsl2SCStatusSegmentLog"), ("VDSL2-LINE-MIB", "xdsl2SCStatusSegmentQln"), ("VDSL2-LINE-MIB", "xdsl2SCStatusSegmentSnr"), ("VDSL2-LINE-MIB", "xdsl2SCStatusSegmentBitsAlloc"), ("VDSL2-LINE-MIB", "xdsl2SCStatusSegmentGainAlloc"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    xdsl2SCStatusGroup = xdsl2SCStatusGroup.setStatus('current')
xdsl2LineInventoryGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 10, 251, 2, 1, 9)).setObjects(("VDSL2-LINE-MIB", "xdsl2LInvG994VendorId"), ("VDSL2-LINE-MIB", "xdsl2LInvSystemVendorId"), ("VDSL2-LINE-MIB", "xdsl2LInvVersionNumber"), ("VDSL2-LINE-MIB", "xdsl2LInvSerialNumber"), ("VDSL2-LINE-MIB", "xdsl2LInvSelfTestResult"), ("VDSL2-LINE-MIB", "xdsl2LInvTransmissionCapabilities"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    xdsl2LineInventoryGroup = xdsl2LineInventoryGroup.setStatus('current')
xdsl2LineConfTemplateGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 10, 251, 2, 1, 10)).setObjects(("VDSL2-LINE-MIB", "xdsl2LConfTempLineProfile"), ("VDSL2-LINE-MIB", "xdsl2LConfTempChan1ConfProfile"), ("VDSL2-LINE-MIB", "xdsl2LConfTempChan1RaRatioDs"), ("VDSL2-LINE-MIB", "xdsl2LConfTempChan1RaRatioUs"), ("VDSL2-LINE-MIB", "xdsl2LConfTempChan2ConfProfile"), ("VDSL2-LINE-MIB", "xdsl2LConfTempChan2RaRatioDs"), ("VDSL2-LINE-MIB", "xdsl2LConfTempChan2RaRatioUs"), ("VDSL2-LINE-MIB", "xdsl2LConfTempChan3ConfProfile"), ("VDSL2-LINE-MIB", "xdsl2LConfTempChan3RaRatioDs"), ("VDSL2-LINE-MIB", "xdsl2LConfTempChan3RaRatioUs"), ("VDSL2-LINE-MIB", "xdsl2LConfTempChan4ConfProfile"), ("VDSL2-LINE-MIB", "xdsl2LConfTempChan4RaRatioDs"), ("VDSL2-LINE-MIB", "xdsl2LConfTempChan4RaRatioUs"), ("VDSL2-LINE-MIB", "xdsl2LConfTempRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    xdsl2LineConfTemplateGroup = xdsl2LineConfTemplateGroup.setStatus('current')
xdsl2LineConfProfGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 10, 251, 2, 1, 11)).setObjects(("VDSL2-LINE-MIB", "xdsl2LConfProfScMaskDs"), ("VDSL2-LINE-MIB", "xdsl2LConfProfScMaskUs"), ("VDSL2-LINE-MIB", "xdsl2LConfProfVdsl2CarMask"), ("VDSL2-LINE-MIB", "xdsl2LConfProfRfiBands"), ("VDSL2-LINE-MIB", "xdsl2LConfProfRaModeDs"), ("VDSL2-LINE-MIB", "xdsl2LConfProfRaModeUs"), ("VDSL2-LINE-MIB", "xdsl2LConfProfTargetSnrmDs"), ("VDSL2-LINE-MIB", "xdsl2LConfProfTargetSnrmUs"), ("VDSL2-LINE-MIB", "xdsl2LConfProfMaxSnrmDs"), ("VDSL2-LINE-MIB", "xdsl2LConfProfMaxSnrmUs"), ("VDSL2-LINE-MIB", "xdsl2LConfProfMinSnrmDs"), ("VDSL2-LINE-MIB", "xdsl2LConfProfMinSnrmUs"), ("VDSL2-LINE-MIB", "xdsl2LConfProfCeFlag"), ("VDSL2-LINE-MIB", "xdsl2LConfProfSnrModeDs"), ("VDSL2-LINE-MIB", "xdsl2LConfProfSnrModeUs"), ("VDSL2-LINE-MIB", "xdsl2LConfProfTxRefVnDs"), ("VDSL2-LINE-MIB", "xdsl2LConfProfTxRefVnUs"), ("VDSL2-LINE-MIB", "xdsl2LConfProfXtuTransSysEna"), ("VDSL2-LINE-MIB", "xdsl2LConfProfPmMode"), ("VDSL2-LINE-MIB", "xdsl2LConfProfL0Time"), ("VDSL2-LINE-MIB", "xdsl2LConfProfL2Time"), ("VDSL2-LINE-MIB", "xdsl2LConfProfL2Atpr"), ("VDSL2-LINE-MIB", "xdsl2LConfProfL2Atprt"), ("VDSL2-LINE-MIB", "xdsl2LConfProfProfiles"), ("VDSL2-LINE-MIB", "xdsl2LConfProfDpboEPsd"), ("VDSL2-LINE-MIB", "xdsl2LConfProfDpboEsEL"), ("VDSL2-LINE-MIB", "xdsl2LConfProfDpboEsCableModelA"), ("VDSL2-LINE-MIB", "xdsl2LConfProfDpboEsCableModelB"), ("VDSL2-LINE-MIB", "xdsl2LConfProfDpboEsCableModelC"), ("VDSL2-LINE-MIB", "xdsl2LConfProfDpboMus"), ("VDSL2-LINE-MIB", "xdsl2LConfProfDpboFMin"), ("VDSL2-LINE-MIB", "xdsl2LConfProfDpboFMax"), ("VDSL2-LINE-MIB", "xdsl2LConfProfUpboKL"), ("VDSL2-LINE-MIB", "xdsl2LConfProfUpboKLF"), ("VDSL2-LINE-MIB", "xdsl2LConfProfUs0Mask"), ("VDSL2-LINE-MIB", "xdsl2LConfProfForceInp"), ("VDSL2-LINE-MIB", "xdsl2LConfProfRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    xdsl2LineConfProfGroup = xdsl2LineConfProfGroup.setStatus('current')
xdsl2LineConfProfRaGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 10, 251, 2, 1, 12)).setObjects(("VDSL2-LINE-MIB", "xdsl2LConfProfRaUsNrmDs"), ("VDSL2-LINE-MIB", "xdsl2LConfProfRaUsNrmUs"), ("VDSL2-LINE-MIB", "xdsl2LConfProfRaUsTimeDs"), ("VDSL2-LINE-MIB", "xdsl2LConfProfRaUsTimeUs"), ("VDSL2-LINE-MIB", "xdsl2LConfProfRaDsNrmDs"), ("VDSL2-LINE-MIB", "xdsl2LConfProfRaDsNrmUs"), ("VDSL2-LINE-MIB", "xdsl2LConfProfRaDsTimeDs"), ("VDSL2-LINE-MIB", "xdsl2LConfProfRaDsTimeUs"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    xdsl2LineConfProfRaGroup = xdsl2LineConfProfRaGroup.setStatus('current')
xdsl2LineConfProfMsgMinGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 10, 251, 2, 1, 13)).setObjects(("VDSL2-LINE-MIB", "xdsl2LConfProfMsgMinUs"), ("VDSL2-LINE-MIB", "xdsl2LConfProfMsgMinDs"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    xdsl2LineConfProfMsgMinGroup = xdsl2LineConfProfMsgMinGroup.setStatus('current')
xdsl2LineConfProfModeSpecGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 10, 251, 2, 1, 14)).setObjects(("VDSL2-LINE-MIB", "xdsl2LConfProfMaxNomPsdDs"), ("VDSL2-LINE-MIB", "xdsl2LConfProfMaxNomPsdUs"), ("VDSL2-LINE-MIB", "xdsl2LConfProfMaxNomAtpDs"), ("VDSL2-LINE-MIB", "xdsl2LConfProfMaxNomAtpUs"), ("VDSL2-LINE-MIB", "xdsl2LConfProfMaxAggRxPwrUs"), ("VDSL2-LINE-MIB", "xdsl2LConfProfPsdMaskDs"), ("VDSL2-LINE-MIB", "xdsl2LConfProfPsdMaskUs"), ("VDSL2-LINE-MIB", "xdsl2LConfProfPsdMaskSelectUs"), ("VDSL2-LINE-MIB", "xdsl2LConfProfClassMask"), ("VDSL2-LINE-MIB", "xdsl2LConfProfLimitMask"), ("VDSL2-LINE-MIB", "xdsl2LConfProfUs0Disable"), ("VDSL2-LINE-MIB", "xdsl2LConfProfModeSpecRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    xdsl2LineConfProfModeSpecGroup = xdsl2LineConfProfModeSpecGroup.setStatus('current')
xdsl2LineConfProfModeSpecBandUsGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 10, 251, 2, 1, 15)).setObjects(("VDSL2-LINE-MIB", "xdsl2LConfProfUpboPsdA"), ("VDSL2-LINE-MIB", "xdsl2LConfProfUpboPsdB"), ("VDSL2-LINE-MIB", "xdsl2LConfProfModeSpecBandUsRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    xdsl2LineConfProfModeSpecBandUsGroup = xdsl2LineConfProfModeSpecBandUsGroup.setStatus('current')
xdsl2ChConfProfileGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 10, 251, 2, 1, 16)).setObjects(("VDSL2-LINE-MIB", "xdsl2ChConfProfMinDataRateDs"), ("VDSL2-LINE-MIB", "xdsl2ChConfProfMinDataRateUs"), ("VDSL2-LINE-MIB", "xdsl2ChConfProfMaxDataRateDs"), ("VDSL2-LINE-MIB", "xdsl2ChConfProfMaxDataRateUs"), ("VDSL2-LINE-MIB", "xdsl2ChConfProfMinDataRateLowPwrDs"), ("VDSL2-LINE-MIB", "xdsl2ChConfProfMinDataRateLowPwrUs"), ("VDSL2-LINE-MIB", "xdsl2ChConfProfMaxDelayDs"), ("VDSL2-LINE-MIB", "xdsl2ChConfProfMaxDelayUs"), ("VDSL2-LINE-MIB", "xdsl2ChConfProfMinProtectionDs"), ("VDSL2-LINE-MIB", "xdsl2ChConfProfMinProtectionUs"), ("VDSL2-LINE-MIB", "xdsl2ChConfProfMinProtection8Ds"), ("VDSL2-LINE-MIB", "xdsl2ChConfProfMinProtection8Us"), ("VDSL2-LINE-MIB", "xdsl2ChConfProfMaxBerDs"), ("VDSL2-LINE-MIB", "xdsl2ChConfProfMaxBerUs"), ("VDSL2-LINE-MIB", "xdsl2ChConfProfUsDataRateDs"), ("VDSL2-LINE-MIB", "xdsl2ChConfProfDsDataRateDs"), ("VDSL2-LINE-MIB", "xdsl2ChConfProfUsDataRateUs"), ("VDSL2-LINE-MIB", "xdsl2ChConfProfDsDataRateUs"), ("VDSL2-LINE-MIB", "xdsl2ChConfProfRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    xdsl2ChConfProfileGroup = xdsl2ChConfProfileGroup.setStatus('current')
xdsl2ChConfProfileAtmGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 10, 251, 2, 1, 17)).setObjects(("VDSL2-LINE-MIB", "xdsl2ChConfProfImaEnabled"), ("VDSL2-LINE-MIB", "xdsl2ChStatusAtmStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    xdsl2ChConfProfileAtmGroup = xdsl2ChConfProfileAtmGroup.setStatus('current')
xdsl2ChConfProfileMinResGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 10, 251, 2, 1, 18)).setObjects(("VDSL2-LINE-MIB", "xdsl2ChConfProfMinResDataRateDs"), ("VDSL2-LINE-MIB", "xdsl2ChConfProfMinResDataRateUs"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    xdsl2ChConfProfileMinResGroup = xdsl2ChConfProfileMinResGroup.setStatus('current')
xdsl2ChConfProfileOptAttrGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 10, 251, 2, 1, 19)).setObjects(("VDSL2-LINE-MIB", "xdsl2ChConfProfMaxDelayVar"), ("VDSL2-LINE-MIB", "xdsl2ChConfProfInitPolicy"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    xdsl2ChConfProfileOptAttrGroup = xdsl2ChConfProfileOptAttrGroup.setStatus('current')
xdsl2LineAlarmConfTemplateGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 10, 251, 2, 1, 20)).setObjects(("VDSL2-LINE-MIB", "xdsl2LAlarmConfTempLineProfile"), ("VDSL2-LINE-MIB", "xdsl2LAlarmConfTempChan1ConfProfile"), ("VDSL2-LINE-MIB", "xdsl2LAlarmConfTempChan2ConfProfile"), ("VDSL2-LINE-MIB", "xdsl2LAlarmConfTempChan3ConfProfile"), ("VDSL2-LINE-MIB", "xdsl2LAlarmConfTempChan4ConfProfile"), ("VDSL2-LINE-MIB", "xdsl2LAlarmConfTempRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    xdsl2LineAlarmConfTemplateGroup = xdsl2LineAlarmConfTemplateGroup.setStatus('current')
xdsl2LineAlarmConfProfileGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 10, 251, 2, 1, 21)).setObjects(("VDSL2-LINE-MIB", "xdsl2LineAlarmConfProfileXtucThresh15MinFecs"), ("VDSL2-LINE-MIB", "xdsl2LineAlarmConfProfileXtucThresh15MinEs"), ("VDSL2-LINE-MIB", "xdsl2LineAlarmConfProfileXtucThresh15MinSes"), ("VDSL2-LINE-MIB", "xdsl2LineAlarmConfProfileXtucThresh15MinLoss"), ("VDSL2-LINE-MIB", "xdsl2LineAlarmConfProfileXtucThresh15MinUas"), ("VDSL2-LINE-MIB", "xdsl2LineAlarmConfProfileXturThresh15MinFecs"), ("VDSL2-LINE-MIB", "xdsl2LineAlarmConfProfileXturThresh15MinEs"), ("VDSL2-LINE-MIB", "xdsl2LineAlarmConfProfileXturThresh15MinSes"), ("VDSL2-LINE-MIB", "xdsl2LineAlarmConfProfileXturThresh15MinLoss"), ("VDSL2-LINE-MIB", "xdsl2LineAlarmConfProfileXturThresh15MinUas"), ("VDSL2-LINE-MIB", "xdsl2LineAlarmConfProfileThresh15MinFailedFullInt"), ("VDSL2-LINE-MIB", "xdsl2LineAlarmConfProfileThresh15MinFailedShrtInt"), ("VDSL2-LINE-MIB", "xdsl2LineAlarmConfProfileRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    xdsl2LineAlarmConfProfileGroup = xdsl2LineAlarmConfProfileGroup.setStatus('current')
xdsl2ChAlarmConfProfileGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 10, 251, 2, 1, 22)).setObjects(("VDSL2-LINE-MIB", "xdsl2ChAlarmConfProfileXtucThresh15MinCodingViolations"), ("VDSL2-LINE-MIB", "xdsl2ChAlarmConfProfileXtucThresh15MinCorrected"), ("VDSL2-LINE-MIB", "xdsl2ChAlarmConfProfileXturThresh15MinCodingViolations"), ("VDSL2-LINE-MIB", "xdsl2ChAlarmConfProfileXturThresh15MinCorrected"), ("VDSL2-LINE-MIB", "xdsl2ChAlarmConfProfileRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    xdsl2ChAlarmConfProfileGroup = xdsl2ChAlarmConfProfileGroup.setStatus('current')
xdsl2PMLineCurrGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 10, 251, 2, 1, 23)).setObjects(("VDSL2-LINE-MIB", "xdsl2PMLCurr15MValidIntervals"), ("VDSL2-LINE-MIB", "xdsl2PMLCurr15MInvalidIntervals"), ("VDSL2-LINE-MIB", "xdsl2PMLCurr15MTimeElapsed"), ("VDSL2-LINE-MIB", "xdsl2PMLCurr15MFecs"), ("VDSL2-LINE-MIB", "xdsl2PMLCurr15MEs"), ("VDSL2-LINE-MIB", "xdsl2PMLCurr15MSes"), ("VDSL2-LINE-MIB", "xdsl2PMLCurr15MLoss"), ("VDSL2-LINE-MIB", "xdsl2PMLCurr15MUas"), ("VDSL2-LINE-MIB", "xdsl2PMLCurr1DayValidIntervals"), ("VDSL2-LINE-MIB", "xdsl2PMLCurr1DayInvalidIntervals"), ("VDSL2-LINE-MIB", "xdsl2PMLCurr1DayTimeElapsed"), ("VDSL2-LINE-MIB", "xdsl2PMLCurr1DayFecs"), ("VDSL2-LINE-MIB", "xdsl2PMLCurr1DayEs"), ("VDSL2-LINE-MIB", "xdsl2PMLCurr1DaySes"), ("VDSL2-LINE-MIB", "xdsl2PMLCurr1DayLoss"), ("VDSL2-LINE-MIB", "xdsl2PMLCurr1DayUas"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    xdsl2PMLineCurrGroup = xdsl2PMLineCurrGroup.setStatus('current')
xdsl2PMLineInitCurrGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 10, 251, 2, 1, 24)).setObjects(("VDSL2-LINE-MIB", "xdsl2PMLInitCurr15MValidIntervals"), ("VDSL2-LINE-MIB", "xdsl2PMLInitCurr15MInvalidIntervals"), ("VDSL2-LINE-MIB", "xdsl2PMLInitCurr15MTimeElapsed"), ("VDSL2-LINE-MIB", "xdsl2PMLInitCurr15MFullInits"), ("VDSL2-LINE-MIB", "xdsl2PMLInitCurr15MFailedFullInits"), ("VDSL2-LINE-MIB", "xdsl2PMLInitCurr1DayValidIntervals"), ("VDSL2-LINE-MIB", "xdsl2PMLInitCurr1DayInvalidIntervals"), ("VDSL2-LINE-MIB", "xdsl2PMLInitCurr1DayTimeElapsed"), ("VDSL2-LINE-MIB", "xdsl2PMLInitCurr1DayFullInits"), ("VDSL2-LINE-MIB", "xdsl2PMLInitCurr1DayFailedFullInits"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    xdsl2PMLineInitCurrGroup = xdsl2PMLineInitCurrGroup.setStatus('current')
xdsl2PMLineInitCurrShortGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 10, 251, 2, 1, 25)).setObjects(("VDSL2-LINE-MIB", "xdsl2PMLInitCurr15MShortInits"), ("VDSL2-LINE-MIB", "xdsl2PMLInitCurr15MFailedShortInits"), ("VDSL2-LINE-MIB", "xdsl2PMLInitCurr1DayShortInits"), ("VDSL2-LINE-MIB", "xdsl2PMLInitCurr1DayFailedShortInits"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    xdsl2PMLineInitCurrShortGroup = xdsl2PMLineInitCurrShortGroup.setStatus('current')
xdsl2PMLineHist15MinGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 10, 251, 2, 1, 26)).setObjects(("VDSL2-LINE-MIB", "xdsl2PMLHist15MMonitoredTime"), ("VDSL2-LINE-MIB", "xdsl2PMLHist15MFecs"), ("VDSL2-LINE-MIB", "xdsl2PMLHist15MEs"), ("VDSL2-LINE-MIB", "xdsl2PMLHist15MSes"), ("VDSL2-LINE-MIB", "xdsl2PMLHist15MLoss"), ("VDSL2-LINE-MIB", "xdsl2PMLHist15MUas"), ("VDSL2-LINE-MIB", "xdsl2PMLHist15MValidInterval"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    xdsl2PMLineHist15MinGroup = xdsl2PMLineHist15MinGroup.setStatus('current')
xdsl2PMLineHist1DayGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 10, 251, 2, 1, 27)).setObjects(("VDSL2-LINE-MIB", "xdsl2PMLHist1DMonitoredTime"), ("VDSL2-LINE-MIB", "xdsl2PMLHist1DFecs"), ("VDSL2-LINE-MIB", "xdsl2PMLHist1DEs"), ("VDSL2-LINE-MIB", "xdsl2PMLHist1DSes"), ("VDSL2-LINE-MIB", "xdsl2PMLHist1DLoss"), ("VDSL2-LINE-MIB", "xdsl2PMLHist1DUas"), ("VDSL2-LINE-MIB", "xdsl2PMLHist1DValidInterval"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    xdsl2PMLineHist1DayGroup = xdsl2PMLineHist1DayGroup.setStatus('current')
xdsl2PMLineInitHist15MinGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 10, 251, 2, 1, 28)).setObjects(("VDSL2-LINE-MIB", "xdsl2PMLInitHist15MMonitoredTime"), ("VDSL2-LINE-MIB", "xdsl2PMLInitHist15MFullInits"), ("VDSL2-LINE-MIB", "xdsl2PMLInitHist15MFailedFullInits"), ("VDSL2-LINE-MIB", "xdsl2PMLInitHist15MValidInterval"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    xdsl2PMLineInitHist15MinGroup = xdsl2PMLineInitHist15MinGroup.setStatus('current')
xdsl2PMLineInitHist15MinShortGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 10, 251, 2, 1, 29)).setObjects(("VDSL2-LINE-MIB", "xdsl2PMLInitHist15MShortInits"), ("VDSL2-LINE-MIB", "xdsl2PMLInitHist15MFailedShortInits"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    xdsl2PMLineInitHist15MinShortGroup = xdsl2PMLineInitHist15MinShortGroup.setStatus('current')
xdsl2PMLineInitHist1DayGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 10, 251, 2, 1, 30)).setObjects(("VDSL2-LINE-MIB", "xdsl2PMLInitHist1DMonitoredTime"), ("VDSL2-LINE-MIB", "xdsl2PMLInitHist1DFullInits"), ("VDSL2-LINE-MIB", "xdsl2PMLInitHist1DFailedFullInits"), ("VDSL2-LINE-MIB", "xdsl2PMLInitHist1DValidInterval"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    xdsl2PMLineInitHist1DayGroup = xdsl2PMLineInitHist1DayGroup.setStatus('current')
xdsl2PMLineInitHist1DayShortGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 10, 251, 2, 1, 31)).setObjects(("VDSL2-LINE-MIB", "xdsl2PMLInitHist1DShortInits"), ("VDSL2-LINE-MIB", "xdsl2PMLInitHist1DFailedShortInits"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    xdsl2PMLineInitHist1DayShortGroup = xdsl2PMLineInitHist1DayShortGroup.setStatus('current')
xdsl2PMChCurrGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 10, 251, 2, 1, 32)).setObjects(("VDSL2-LINE-MIB", "xdsl2PMChCurr15MValidIntervals"), ("VDSL2-LINE-MIB", "xdsl2PMChCurr15MInvalidIntervals"), ("VDSL2-LINE-MIB", "xdsl2PMChCurr15MTimeElapsed"), ("VDSL2-LINE-MIB", "xdsl2PMChCurr15MCodingViolations"), ("VDSL2-LINE-MIB", "xdsl2PMChCurr15MCorrectedBlocks"), ("VDSL2-LINE-MIB", "xdsl2PMChCurr1DayValidIntervals"), ("VDSL2-LINE-MIB", "xdsl2PMChCurr1DayInvalidIntervals"), ("VDSL2-LINE-MIB", "xdsl2PMChCurr1DayTimeElapsed"), ("VDSL2-LINE-MIB", "xdsl2PMChCurr1DayCodingViolations"), ("VDSL2-LINE-MIB", "xdsl2PMChCurr1DayCorrectedBlocks"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    xdsl2PMChCurrGroup = xdsl2PMChCurrGroup.setStatus('current')
xdsl2PMChHist15MinGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 10, 251, 2, 1, 33)).setObjects(("VDSL2-LINE-MIB", "xdsl2PMChHist15MMonitoredTime"), ("VDSL2-LINE-MIB", "xdsl2PMChHist15MCodingViolations"), ("VDSL2-LINE-MIB", "xdsl2PMChHist15MCorrectedBlocks"), ("VDSL2-LINE-MIB", "xdsl2PMChHist15MValidInterval"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    xdsl2PMChHist15MinGroup = xdsl2PMChHist15MinGroup.setStatus('current')
xdsl2PMChHist1DGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 10, 251, 2, 1, 34)).setObjects(("VDSL2-LINE-MIB", "xdsl2PMChHist1DMonitoredTime"), ("VDSL2-LINE-MIB", "xdsl2PMChHist1DCodingViolations"), ("VDSL2-LINE-MIB", "xdsl2PMChHist1DCorrectedBlocks"), ("VDSL2-LINE-MIB", "xdsl2PMChHist1DValidInterval"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    xdsl2PMChHist1DGroup = xdsl2PMChHist1DGroup.setStatus('current')
xdsl2ScalarSCGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 10, 251, 2, 1, 35)).setObjects(("VDSL2-LINE-MIB", "xdsl2ScalarSCMaxInterfaces"), ("VDSL2-LINE-MIB", "xdsl2ScalarSCAvailInterfaces"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    xdsl2ScalarSCGroup = xdsl2ScalarSCGroup.setStatus('current')
xdsl2ThreshNotificationGroup = NotificationGroup((1, 3, 6, 1, 2, 1, 10, 251, 2, 1, 36)).setObjects(("VDSL2-LINE-MIB", "xdsl2LinePerfFECSThreshXtuc"), ("VDSL2-LINE-MIB", "xdsl2LinePerfFECSThreshXtur"), ("VDSL2-LINE-MIB", "xdsl2LinePerfESThreshXtuc"), ("VDSL2-LINE-MIB", "xdsl2LinePerfESThreshXtur"), ("VDSL2-LINE-MIB", "xdsl2LinePerfSESThreshXtuc"), ("VDSL2-LINE-MIB", "xdsl2LinePerfSESThreshXtur"), ("VDSL2-LINE-MIB", "xdsl2LinePerfLOSSThreshXtuc"), ("VDSL2-LINE-MIB", "xdsl2LinePerfLOSSThreshXtur"), ("VDSL2-LINE-MIB", "xdsl2LinePerfUASThreshXtuc"), ("VDSL2-LINE-MIB", "xdsl2LinePerfUASThreshXtur"), ("VDSL2-LINE-MIB", "xdsl2LinePerfCodingViolationsThreshXtuc"), ("VDSL2-LINE-MIB", "xdsl2LinePerfCodingViolationsThreshXtur"), ("VDSL2-LINE-MIB", "xdsl2LinePerfCorrectedThreshXtuc"), ("VDSL2-LINE-MIB", "xdsl2LinePerfCorrectedThreshXtur"), ("VDSL2-LINE-MIB", "xdsl2LinePerfFailedFullInitThresh"), ("VDSL2-LINE-MIB", "xdsl2LinePerfFailedShortInitThresh"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    xdsl2ThreshNotificationGroup = xdsl2ThreshNotificationGroup.setStatus('current')
xdsl2StatusChangeNotificationGroup = NotificationGroup((1, 3, 6, 1, 2, 1, 10, 251, 2, 1, 37)).setObjects(("VDSL2-LINE-MIB", "xdsl2LineStatusChangeXtuc"), ("VDSL2-LINE-MIB", "xdsl2LineStatusChangeXtur"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    xdsl2StatusChangeNotificationGroup = xdsl2StatusChangeNotificationGroup.setStatus('current')
mibBuilder.exportSymbols("VDSL2-LINE-MIB", xdsl2LineBandStatusSigAtten=xdsl2LineBandStatusSigAtten, xdsl2ChannelStatusEntry=xdsl2ChannelStatusEntry, xdsl2SCStatusSegmentBitsAlloc=xdsl2SCStatusSegmentBitsAlloc, xdsl2LConfProfL2Atpr=xdsl2LConfProfL2Atpr, xdsl2LInvSelfTestResult=xdsl2LInvSelfTestResult, xdsl2LineAlarmConfProfileXtucThresh15MinFecs=xdsl2LineAlarmConfProfileXtucThresh15MinFecs, xdsl2LineAlarmConfProfileXtucThresh15MinUas=xdsl2LineAlarmConfProfileXtucThresh15MinUas, xdsl2LineConfTemplateEntry=xdsl2LineConfTemplateEntry, xdsl2PMLHist1DFecs=xdsl2PMLHist1DFecs, xdsl2LineTable=xdsl2LineTable, xdsl2LConfProfTxRefVnUs=xdsl2LConfProfTxRefVnUs, xdsl2SCStatusAttainableRate=xdsl2SCStatusAttainableRate, xdsl2LineAlarmConfTemplateTable=xdsl2LineAlarmConfTemplateTable, xdsl2LConfProfDpboEsCableModelC=xdsl2LConfProfDpboEsCableModelC, xdsl2PMLineHist15MinTable=xdsl2PMLineHist15MinTable, xdsl2PMLHist1DUnit=xdsl2PMLHist1DUnit, xdsl2ChConfProfileGroup=xdsl2ChConfProfileGroup, xdsl2SCStatusLinScGroupSize=xdsl2SCStatusLinScGroupSize, xdsl2LAlarmConfTempTemplateName=xdsl2LAlarmConfTempTemplateName, xdsl2LineCmndConfLdsf=xdsl2LineCmndConfLdsf, xdsl2PMLHist1DEs=xdsl2PMLHist1DEs, xdsl2LConfProfVdsl2CarMask=xdsl2LConfProfVdsl2CarMask, xdsl2LConfProfProfileName=xdsl2LConfProfProfileName, xdsl2LConfProfScMaskUs=xdsl2LConfProfScMaskUs, xdsl2LineStatusActLimitMask=xdsl2LineStatusActLimitMask, xdsl2Status=xdsl2Status, xdsl2ChConfProfProfileName=xdsl2ChConfProfProfileName, xdsl2LineStatusActTemplate=xdsl2LineStatusActTemplate, xdsl2SCStatusRowStatus=xdsl2SCStatusRowStatus, xdsl2LineConfProfGroup=xdsl2LineConfProfGroup, xdsl2PMChCurrTable=xdsl2PMChCurrTable, xdsl2LineConfProfEntry=xdsl2LineConfProfEntry, xdsl2PMLHist15MEs=xdsl2PMLHist15MEs, xdsl2LConfTempChan1RaRatioDs=xdsl2LConfTempChan1RaRatioDs, xdsl2PMLInitCurr1DayShortInits=xdsl2PMLInitCurr1DayShortInits, xdsl2PMChCurr1DayTimeElapsed=xdsl2PMChCurr1DayTimeElapsed, xdsl2LConfProfPsdMaskDs=xdsl2LConfProfPsdMaskDs, xdsl2ChConfProfileAtmGroup=xdsl2ChConfProfileAtmGroup, xdsl2LConfProfXtuTransSysEna=xdsl2LConfProfXtuTransSysEna, xdsl2PMLineHist15MinGroup=xdsl2PMLineHist15MinGroup, xdsl2LineStatusActUs0Mask=xdsl2LineStatusActUs0Mask, xdsl2PMLineHist1DayEntry=xdsl2PMLineHist1DayEntry, xdsl2ChStatusAtmStatus=xdsl2ChStatusAtmStatus, xdsl2LineBandEntry=xdsl2LineBandEntry, xdsl2PMChCurr15MCodingViolations=xdsl2PMChCurr15MCodingViolations, xdsl2LConfProfPsdMaskUs=xdsl2LConfProfPsdMaskUs, xdsl2ChConfProfMinProtection8Ds=xdsl2ChConfProfMinProtection8Ds, xdsl2PMLCurr15MFecs=xdsl2PMLCurr15MFecs, xdsl2Profile=xdsl2Profile, xdsl2SCStatusBandTable=xdsl2SCStatusBandTable, xdsl2LConfProfDpboEsEL=xdsl2LConfProfDpboEsEL, xdsl2PMLInitCurr15MFailedFullInits=xdsl2PMLInitCurr15MFailedFullInits, xdsl2LineStatusActualCe=xdsl2LineStatusActualCe, xdsl2PMChHist15MinEntry=xdsl2PMChHist15MinEntry, xdsl2LineBand=xdsl2LineBand, xdsl2LineStatusInitResult=xdsl2LineStatusInitResult, xdsl2LineStatusXtuc=xdsl2LineStatusXtuc, xdsl2LAlarmConfTempChan2ConfProfile=xdsl2LAlarmConfTempChan2ConfProfile, xdsl2PMLHist15MMonitoredTime=xdsl2PMLHist15MMonitoredTime, xdsl2PMLHist15MFecs=xdsl2PMLHist15MFecs, xdsl2LAlarmConfTempChan4ConfProfile=xdsl2LAlarmConfTempChan4ConfProfile, xdsl2PMLInitHist1DShortInits=xdsl2PMLInitHist1DShortInits, xdsl2PMLCurr15MUas=xdsl2PMLCurr15MUas, xdsl2LineAlarmConfProfileXtucThresh15MinLoss=xdsl2LineAlarmConfProfileXtucThresh15MinLoss, xdsl2ChAlarmConfProfileName=xdsl2ChAlarmConfProfileName, xdsl2ChConfProfMaxDataRateDs=xdsl2ChConfProfMaxDataRateDs, xdsl2LConfProfXdslMode=xdsl2LConfProfXdslMode, xdsl2ChConfProfRowStatus=xdsl2ChConfProfRowStatus, xdsl2LineStatusActPsdDs=xdsl2LineStatusActPsdDs, xdsl2ChStatusNFec=xdsl2ChStatusNFec, xdsl2PMLInitCurr15MValidIntervals=xdsl2PMLInitCurr15MValidIntervals, xdsl2PMLInitHist1DInterval=xdsl2PMLInitHist1DInterval, xdsl2PMLHist15MUas=xdsl2PMLHist15MUas, xdsl2PMLCurr1DayValidIntervals=xdsl2PMLCurr1DayValidIntervals, xdsl2LinePerfCorrectedThreshXtuc=xdsl2LinePerfCorrectedThreshXtuc, xdsl2PMLInitCurr15MFullInits=xdsl2PMLInitCurr15MFullInits, xdsl2LineAlarmConfProfileXturThresh15MinEs=xdsl2LineAlarmConfProfileXturThresh15MinEs, xdsl2LinePerfFailedFullInitThresh=xdsl2LinePerfFailedFullInitThresh, xdsl2LConfProfRaDsNrmDs=xdsl2LConfProfRaDsNrmDs, xdsl2LConfProfModeSpecRowStatus=xdsl2LConfProfModeSpecRowStatus, xdsl2PMLHist15MLoss=xdsl2PMLHist15MLoss, xdsl2PMLineCurrTable=xdsl2PMLineCurrTable, xdsl2LineAlarmConfTemplateGroup=xdsl2LineAlarmConfTemplateGroup, xdsl2ChConfProfMinResDataRateDs=xdsl2ChConfProfMinResDataRateDs, xdsl2ChAlarmConfProfileXtucThresh15MinCorrected=xdsl2ChAlarmConfProfileXtucThresh15MinCorrected, xdsl2SCStatusSegmentTable=xdsl2SCStatusSegmentTable, xdsl2PMLInitCurr1DayFailedShortInits=xdsl2PMLInitCurr1DayFailedShortInits, xdsl2PMLCurr1DayTimeElapsed=xdsl2PMLCurr1DayTimeElapsed, xdsl2ChStatusPrevDataRate=xdsl2ChStatusPrevDataRate, xdsl2LinePerfFailedShortInitThresh=xdsl2LinePerfFailedShortInitThresh, xdsl2LAlarmConfTempLineProfile=xdsl2LAlarmConfTempLineProfile, xdsl2LineGroup=xdsl2LineGroup, xdsl2SCStatusLinScale=xdsl2SCStatusLinScale, xdsl2LConfProfRaModeDs=xdsl2LConfProfRaModeDs, xdsl2LineBandTable=xdsl2LineBandTable, xdsl2LConfProfRaModeUs=xdsl2LConfProfRaModeUs, xdsl2LConfProfCeFlag=xdsl2LConfProfCeFlag, xdsl2ChAlarmConfProfileXtucThresh15MinCodingViolations=xdsl2ChAlarmConfProfileXtucThresh15MinCodingViolations, xdsl2ChConfProfInitPolicy=xdsl2ChConfProfInitPolicy, xdsl2LConfProfUpboKL=xdsl2LConfProfUpboKL, xdsl2LineAlarmConfProfileXturThresh15MinUas=xdsl2LineAlarmConfProfileXturThresh15MinUas, xdsl2PMChHist1DValidInterval=xdsl2PMChHist1DValidInterval, xdsl2LConfProfClassMask=xdsl2LConfProfClassMask, xdsl2PMLCurr15MTimeElapsed=xdsl2PMLCurr15MTimeElapsed, xdsl2PMLInitHist1DFailedShortInits=xdsl2PMLInitHist1DFailedShortInits, xdsl2PMChCurr1DayCodingViolations=xdsl2PMChCurr1DayCodingViolations, xdsl2PMLineInitHist15MinEntry=xdsl2PMLineInitHist15MinEntry, xdsl2ChStatusPtmStatus=xdsl2ChStatusPtmStatus, xdsl2SCStatusDirection=xdsl2SCStatusDirection, xdsl2LConfTempChan3RaRatioUs=xdsl2LConfTempChan3RaRatioUs, xdsl2LineSegment=xdsl2LineSegment, xdsl2ChAlarmConfProfileEntry=xdsl2ChAlarmConfProfileEntry, xdsl2LAlarmConfTempRowStatus=xdsl2LAlarmConfTempRowStatus, xdsl2ChannelStatusTable=xdsl2ChannelStatusTable, xdsl2LineStatusLastStateUs=xdsl2LineStatusLastStateUs, xdsl2LineStatusTrellisDs=xdsl2LineStatusTrellisDs, xdsl2LineAlarmConfProfileName=xdsl2LineAlarmConfProfileName, xdsl2ChConfProfUsDataRateDs=xdsl2ChConfProfUsDataRateDs, xdsl2LConfProfDpboFMin=xdsl2LConfProfDpboFMin, xdsl2LConfProfRaUsTimeDs=xdsl2LConfProfRaUsTimeDs, xdsl2LInvUnit=xdsl2LInvUnit, xdsl2LConfProfRfiBands=xdsl2LConfProfRfiBands, xdsl2SCStatusQlnMt=xdsl2SCStatusQlnMt, xdsl2LConfProfRowStatus=xdsl2LConfProfRowStatus, xdsl2ChConfProfDsDataRateDs=xdsl2ChConfProfDsDataRateDs, xdsl2ChConfProfileTable=xdsl2ChConfProfileTable, xdsl2PMChHist15MValidInterval=xdsl2PMChHist15MValidInterval, xdsl2LConfProfDpboEsCableModelB=xdsl2LConfProfDpboEsCableModelB, xdsl2LineAlarmConfProfileXtucThresh15MinSes=xdsl2LineAlarmConfProfileXtucThresh15MinSes, xdsl2PMLInitCurr1DayValidIntervals=xdsl2PMLInitCurr1DayValidIntervals, xdsl2SCStatusSegmentSnr=xdsl2SCStatusSegmentSnr, xdsl2LineStatusElectricalLength=xdsl2LineStatusElectricalLength, xdsl2LineStatusActAtpUs=xdsl2LineStatusActAtpUs, xdsl2Line=xdsl2Line, xdsl2LConfProfMinSnrmUs=xdsl2LConfProfMinSnrmUs, xdsl2LConfProfDpboFMax=xdsl2LConfProfDpboFMax, xdsl2PMLineInitHist1DayTable=xdsl2PMLineInitHist1DayTable, xdsl2PMLInitCurr15MShortInits=xdsl2PMLInitCurr15MShortInits, xdsl2ScalarSCMaxInterfaces=xdsl2ScalarSCMaxInterfaces, xdsl2PMChHist1DCodingViolations=xdsl2PMChHist1DCodingViolations, xdsl2LConfProfTxRefVnDs=xdsl2LConfProfTxRefVnDs, xdsl2LConfProfModeSpecBandUsRowStatus=xdsl2LConfProfModeSpecBandUsRowStatus, xdsl2LineAlarmConfProfileXturThresh15MinFecs=xdsl2LineAlarmConfProfileXturThresh15MinFecs, xdsl2ChStatusLSymb=xdsl2ChStatusLSymb, xdsl2ChAlarmConfProfileXturThresh15MinCodingViolations=xdsl2ChAlarmConfProfileXturThresh15MinCodingViolations, xdsl2ChConfProfMinProtectionDs=xdsl2ChConfProfMinProtectionDs, xdsl2PMLInitHist15MFullInits=xdsl2PMLInitHist15MFullInits, xdsl2PMChCurr15MCorrectedBlocks=xdsl2PMChCurr15MCorrectedBlocks, xdsl2ChStatusIntlvBlock=xdsl2ChStatusIntlvBlock, xdsl2PMLHist1DUas=xdsl2PMLHist1DUas, xdsl2PMChCurr1DayValidIntervals=xdsl2PMChCurr1DayValidIntervals, xdsl2ChConfProfMinDataRateDs=xdsl2ChConfProfMinDataRateDs, xdsl2LConfProfDpboMus=xdsl2LConfProfDpboMus, xdsl2SCStatusSegmentGainAlloc=xdsl2SCStatusSegmentGainAlloc, xdsl2SCStatusBandLnAtten=xdsl2SCStatusBandLnAtten, xdsl2ChStatusActDataRate=xdsl2ChStatusActDataRate, xdsl2PMLine=xdsl2PMLine, xdsl2PMLInitHist15MFailedFullInits=xdsl2PMLInitHist15MFailedFullInits, xdsl2LInvSerialNumber=xdsl2LInvSerialNumber, xdsl2PMChCurr1DayCorrectedBlocks=xdsl2PMChCurr1DayCorrectedBlocks, xdsl2LinePerfSESThreshXtur=xdsl2LinePerfSESThreshXtur, xdsl2ChStatusIntlvDepth=xdsl2ChStatusIntlvDepth, xdsl2LConfTempChan1RaRatioUs=xdsl2LConfTempChan1RaRatioUs, xdsl2PMLInitCurr1DayTimeElapsed=xdsl2PMLInitCurr1DayTimeElapsed, xdsl2PMChHist15MInterval=xdsl2PMChHist15MInterval, xdsl2ChConfProfImaEnabled=xdsl2ChConfProfImaEnabled, xdsl2PMLineHist1DayTable=xdsl2PMLineHist1DayTable, xdsl2ChStatusRFec=xdsl2ChStatusRFec, xdsl2ScalarSCAvailInterfaces=xdsl2ScalarSCAvailInterfaces, xdsl2LConfTempTemplateName=xdsl2LConfTempTemplateName, xdsl2LConfProfUpboPsdA=xdsl2LConfProfUpboPsdA, xdsl2PMLCurr1DaySes=xdsl2PMLCurr1DaySes, xdsl2ChannelStatusPtmGroup=xdsl2ChannelStatusPtmGroup, xdsl2PMChHist1DInterval=xdsl2PMChHist1DInterval, xdsl2PMChCurrGroup=xdsl2PMChCurrGroup, xdsl2LinePerfFECSThreshXtur=xdsl2LinePerfFECSThreshXtur, xdsl2LineAlarmConfProfileXturThresh15MinSes=xdsl2LineAlarmConfProfileXturThresh15MinSes, xdsl2LineAlarmConfProfileEntry=xdsl2LineAlarmConfProfileEntry, xdsl2LConfProfMaxNomPsdUs=xdsl2LConfProfMaxNomPsdUs, xdsl2LineCmndConfPmsf=xdsl2LineCmndConfPmsf, xdsl2ChConfProfMaxDelayVar=xdsl2ChConfProfMaxDelayVar, xdsl2LConfTempChan3RaRatioDs=xdsl2LConfTempChan3RaRatioDs, xdsl2ChConfProfMinDataRateLowPwrUs=xdsl2ChConfProfMinDataRateLowPwrUs, xdsl2PMLHist15MSes=xdsl2PMLHist15MSes, xdsl2LConfTempChan3ConfProfile=xdsl2LConfTempChan3ConfProfile, xdsl2LConfTempChan1ConfProfile=xdsl2LConfTempChan1ConfProfile, xdsl2LineStatusTrellisUs=xdsl2LineStatusTrellisUs, xdsl2LConfProfLimitMask=xdsl2LConfProfLimitMask, xdsl2LineStatusXtur=xdsl2LineStatusXtur, xdsl2PMChHist15MUnit=xdsl2PMChHist15MUnit, xdsl2SCStatusBand=xdsl2SCStatusBand, xdsl2ChStatusLPath=xdsl2ChStatusLPath, xdsl2LConfProfMaxNomAtpDs=xdsl2LConfProfMaxNomAtpDs, xdsl2PMLInitHist1DFullInits=xdsl2PMLInitHist1DFullInits, xdsl2LConfTempChan4RaRatioUs=xdsl2LConfTempChan4RaRatioUs, xdsl2LinePerfSESThreshXtuc=xdsl2LinePerfSESThreshXtuc, xdsl2LConfProfRaDsNrmUs=xdsl2LConfProfRaDsNrmUs, xdsl2LineAlarmConfTemplateEntry=xdsl2LineAlarmConfTemplateEntry, xdsl2PM=xdsl2PM, xdsl2SCStatusEntry=xdsl2SCStatusEntry, xdsl2LineCmndConfReset=xdsl2LineCmndConfReset, xdsl2LineAlarmConfProfileGroup=xdsl2LineAlarmConfProfileGroup, xdsl2StatusChangeNotificationGroup=xdsl2StatusChangeNotificationGroup, xdsl2PMChHist15MMonitoredTime=xdsl2PMChHist15MMonitoredTime, xdsl2LineStatusActProfile=xdsl2LineStatusActProfile, xdsl2ChAlarmConfProfileTable=xdsl2ChAlarmConfProfileTable, xdsl2PMLHist15MUnit=xdsl2PMLHist15MUnit, xdsl2ChStatusInpReport=xdsl2ChStatusInpReport, xdsl2PMLInitHist15MInterval=xdsl2PMLInitHist15MInterval, xdsl2PMChHist15MCodingViolations=xdsl2PMChHist15MCodingViolations, xdsl2ChConfProfMaxBerUs=xdsl2ChConfProfMaxBerUs, xdsl2PMChCurrUnit=xdsl2PMChCurrUnit, xdsl2LineSegmentDirection=xdsl2LineSegmentDirection, xdsl2PMChCurr15MInvalidIntervals=xdsl2PMChCurr15MInvalidIntervals, xdsl2SCStatusSegmentLinReal=xdsl2SCStatusSegmentLinReal, xdsl2LineFallbackGroup=xdsl2LineFallbackGroup, xdsl2SCStatusBandEntry=xdsl2SCStatusBandEntry, xdsl2LineConfTemplate=xdsl2LineConfTemplate, xdsl2LineAlarmConfProfileThresh15MinFailedFullInt=xdsl2LineAlarmConfProfileThresh15MinFailedFullInt, xdsl2LinePerfUASThreshXtuc=xdsl2LinePerfUASThreshXtuc, xdsl2SCStatusLogMt=xdsl2SCStatusLogMt, xdsl2ChConfProfMaxDataRateUs=xdsl2ChConfProfMaxDataRateUs, xdsl2LConfProfRaDsTimeDs=xdsl2LConfProfRaDsTimeDs, xdsl2LineConfProfMsgMinGroup=xdsl2LineConfProfMsgMinGroup, xdsl2LineConfProfTable=xdsl2LineConfProfTable, xdsl2ChStatusUnit=xdsl2ChStatusUnit, xdsl2LineAlarmConfProfileTable=xdsl2LineAlarmConfProfileTable, xdsl2LineConfProfModeSpecGroup=xdsl2LineConfProfModeSpecGroup, xdsl2PMLCurr1DayFecs=xdsl2PMLCurr1DayFecs, xdsl2ChannelStatusAtmGroup=xdsl2ChannelStatusAtmGroup, xdsl2LineStatusLastStateDs=xdsl2LineStatusLastStateDs, xdsl2LConfProfTargetSnrmDs=xdsl2LConfProfTargetSnrmDs, xdsl2LConfProfProfiles=xdsl2LConfProfProfiles, xdsl2LConfProfMsgMinDs=xdsl2LConfProfMsgMinDs, xdsl2Conformance=xdsl2Conformance, xdsl2PMChHist1DUnit=xdsl2PMChHist1DUnit, xdsl2PMChHist1DCorrectedBlocks=xdsl2PMChHist1DCorrectedBlocks, xdsl2PMLInitCurr1DayFailedFullInits=xdsl2PMLInitCurr1DayFailedFullInits, xdsl2LConfTempChan4RaRatioDs=xdsl2LConfTempChan4RaRatioDs, xdsl2PMChannel=xdsl2PMChannel, xdsl2PMLCurr15MEs=xdsl2PMLCurr15MEs, xdsl2PMLInitHist1DMonitoredTime=xdsl2PMLInitHist1DMonitoredTime, xdsl2LineStatusChangeXtur=xdsl2LineStatusChangeXtur, xdsl2SCStatusSegmentLog=xdsl2SCStatusSegmentLog, xdsl2ChConfProfMinDataRateUs=xdsl2ChConfProfMinDataRateUs, xdsl2PMLineInitHist15MinGroup=xdsl2PMLineInitHist15MinGroup, xdsl2LineStatusMrefPsdDs=xdsl2LineStatusMrefPsdDs, xdsl2LineBandStatusSnrMargin=xdsl2LineBandStatusSnrMargin, xdsl2LConfProfMsgMinUs=xdsl2LConfProfMsgMinUs, xdsl2ChConfProfUsDataRateUs=xdsl2ChConfProfUsDataRateUs, xdsl2ThreshNotificationGroup=xdsl2ThreshNotificationGroup, xdsl2LInvG994VendorId=xdsl2LInvG994VendorId, xdsl2Inventory=xdsl2Inventory, xdsl2ProfileChannel=xdsl2ProfileChannel)
mibBuilder.exportSymbols("VDSL2-LINE-MIB", xdsl2ChConfProfileOptAttrGroup=xdsl2ChConfProfileOptAttrGroup, xdsl2PMLCurrUnit=xdsl2PMLCurrUnit, xdsl2Groups=xdsl2Groups, xdsl2PMLineHist1DayGroup=xdsl2PMLineHist1DayGroup, xdsl2ChConfProfDsDataRateUs=xdsl2ChConfProfDsDataRateUs, xdsl2PMLineInitCurrEntry=xdsl2PMLineInitCurrEntry, xdsl2SCStatusSegment=xdsl2SCStatusSegment, xdsl2LInvTransmissionCapabilities=xdsl2LInvTransmissionCapabilities, xdsl2SCStatusSnrScGroupSize=xdsl2SCStatusSnrScGroupSize, xdsl2LConfProfPsdMaskSelectUs=xdsl2LConfProfPsdMaskSelectUs, xdsl2LineSegmentGroup=xdsl2LineSegmentGroup, xdsl2LConfProfUpboPsdB=xdsl2LConfProfUpboPsdB, xdsl2PMLInitCurr1DayInvalidIntervals=xdsl2PMLInitCurr1DayInvalidIntervals, xdsl2ChConfProfMaxDelayUs=xdsl2ChConfProfMaxDelayUs, xdsl2LineConfProfModeSpecBandUsGroup=xdsl2LineConfProfModeSpecBandUsGroup, xdsl2LinePerfFECSThreshXtuc=xdsl2LinePerfFECSThreshXtuc, xdsl2LConfProfMaxSnrmDs=xdsl2LConfProfMaxSnrmDs, xdsl2PMLineInitCurrGroup=xdsl2PMLineInitCurrGroup, xdsl2PMLCurr1DayLoss=xdsl2PMLCurr1DayLoss, xdsl2Objects=xdsl2Objects, xdsl2LinePerfCorrectedThreshXtur=xdsl2LinePerfCorrectedThreshXtur, xdsl2LineEntry=xdsl2LineEntry, xdsl2SCStatusSegmentLinImg=xdsl2SCStatusSegmentLinImg, xdsl2LineConfProfRaGroup=xdsl2LineConfProfRaGroup, xdsl2LineMibCompliance=xdsl2LineMibCompliance, xdsl2LConfProfUs0Disable=xdsl2LConfProfUs0Disable, xdsl2ChStatusActInp=xdsl2ChStatusActInp, xdsl2LineConfProfModeSpecBandUsEntry=xdsl2LineConfProfModeSpecBandUsEntry, xdsl2LAlarmConfTempChan1ConfProfile=xdsl2LAlarmConfTempChan1ConfProfile, xdsl2PMLInitCurr15MFailedShortInits=xdsl2PMLInitCurr15MFailedShortInits, xdsl2PMLineCurrGroup=xdsl2PMLineCurrGroup, xdsl2PMChHist1DEntry=xdsl2PMChHist1DEntry, xdsl2LConfProfMaxNomAtpUs=xdsl2LConfProfMaxNomAtpUs, xdsl2LConfProfL2Atprt=xdsl2LConfProfL2Atprt, xdsl2ChConfProfMaxDelayDs=xdsl2ChConfProfMaxDelayDs, xdsl2LConfProfL2Time=xdsl2LConfProfL2Time, xdsl2LConfProfRaDsTimeUs=xdsl2LConfProfRaDsTimeUs, xdsl2PMLInitHist15MMonitoredTime=xdsl2PMLInitHist15MMonitoredTime, xdsl2LineStatusActSnrModeDs=xdsl2LineStatusActSnrModeDs, xdsl2LConfProfXdslBandUs=xdsl2LConfProfXdslBandUs, xdsl2LineConfProfModeSpecTable=xdsl2LineConfProfModeSpecTable, xdsl2PMLCurr15MInvalidIntervals=xdsl2PMLCurr15MInvalidIntervals, xdsl2LineSegmentEntry=xdsl2LineSegmentEntry, xdsl2LineAlarmConfProfileXturThresh15MinLoss=xdsl2LineAlarmConfProfileXturThresh15MinLoss, xdsl2SCStatusSegmentQln=xdsl2SCStatusSegmentQln, xdsl2LineCmndAutomodeColdStart=xdsl2LineCmndAutomodeColdStart, xdsl2PMLCurr15MValidIntervals=xdsl2PMLCurr15MValidIntervals, xdsl2LineConfFallbackTemplate=xdsl2LineConfFallbackTemplate, xdsl2LConfProfTargetSnrmUs=xdsl2LConfProfTargetSnrmUs, xdsl2PMLineInitHist15MinShortGroup=xdsl2PMLineInitHist15MinShortGroup, xdsl2ChStatusActDelay=xdsl2ChStatusActDelay, xdsl2LConfProfForceInp=xdsl2LConfProfForceInp, xdsl2LinePerfUASThreshXtur=xdsl2LinePerfUASThreshXtur, xdsl2PMLInitHist1DFailedFullInits=xdsl2PMLInitHist1DFailedFullInits, xdsl2PMLineInitHist1DayGroup=xdsl2PMLineInitHist1DayGroup, xdsl2ChConfProfMinProtection8Us=xdsl2ChConfProfMinProtection8Us, xdsl2LConfProfRaUsNrmUs=xdsl2LConfProfRaUsNrmUs, xdsl2LConfProfUs0Mask=xdsl2LConfProfUs0Mask, xdsl2PMLineInitHist1DayShortGroup=xdsl2PMLineInitHist1DayShortGroup, xdsl2LineSegmentBitsAlloc=xdsl2LineSegmentBitsAlloc, xdsl2LConfProfRaUsNrmDs=xdsl2LConfProfRaUsNrmDs, xdsl2ChConfProfMinResDataRateUs=xdsl2ChConfProfMinResDataRateUs, xdsl2ScalarSCGroup=xdsl2ScalarSCGroup, xdsl2PMLCurr15MLoss=xdsl2PMLCurr15MLoss, xdsl2ChConfProfMinDataRateLowPwrDs=xdsl2ChConfProfMinDataRateLowPwrDs, xdsl2LineConfTemplateTable=xdsl2LineConfTemplateTable, xdsl2PMChCurr15MTimeElapsed=xdsl2PMChCurr15MTimeElapsed, xdsl2LineBandStatusLnAtten=xdsl2LineBandStatusLnAtten, xdsl2PMLInitHist15MShortInits=xdsl2PMLInitHist15MShortInits, xdsl2LineAlarmConfProfileThresh15MinFailedShrtInt=xdsl2LineAlarmConfProfileThresh15MinFailedShrtInt, xdsl2LineCmndConfBpscFailReason=xdsl2LineCmndConfBpscFailReason, xdsl2LineStatusXtuTransSys=xdsl2LineStatusXtuTransSys, xdsl2PMLCurr1DayUas=xdsl2PMLCurr1DayUas, xdsl2PMLCurr15MSes=xdsl2PMLCurr15MSes, xdsl2LInvVersionNumber=xdsl2LInvVersionNumber, xdsl2LineStatusMrefPsdUs=xdsl2LineStatusMrefPsdUs, xdsl2PMLHist1DLoss=xdsl2PMLHist1DLoss, xdsl2LinePerfESThreshXtuc=xdsl2LinePerfESThreshXtuc, xdsl2LineAlarmConfProfileRowStatus=xdsl2LineAlarmConfProfileRowStatus, xdsl2Compliances=xdsl2Compliances, xdsl2PMLineInitCurrShortGroup=xdsl2PMLineInitCurrShortGroup, xdsl2LineStatusAttainableRateUs=xdsl2LineStatusAttainableRateUs, xdsl2LConfTempLineProfile=xdsl2LConfTempLineProfile, xdsl2PMLineInitCurrTable=xdsl2PMLineInitCurrTable, xdsl2PMChCurr1DayInvalidIntervals=xdsl2PMChCurr1DayInvalidIntervals, xdsl2LineStatusActSnrModeUs=xdsl2LineStatusActSnrModeUs, xdsl2LConfTempChan2ConfProfile=xdsl2LConfTempChan2ConfProfile, xdsl2LinePerfCodingViolationsThreshXtuc=xdsl2LinePerfCodingViolationsThreshXtuc, xdsl2LinePerfLOSSThreshXtur=xdsl2LinePerfLOSSThreshXtur, xdsl2PMLHist1DInterval=xdsl2PMLHist1DInterval, xdsl2Notifications=xdsl2Notifications, xdsl2ChAlarmConfProfileRowStatus=xdsl2ChAlarmConfProfileRowStatus, xdsl2LinePerfLOSSThreshXtuc=xdsl2LinePerfLOSSThreshXtuc, xdsl2LineInventoryTable=xdsl2LineInventoryTable, xdsl2LConfProfMaxNomPsdDs=xdsl2LConfProfMaxNomPsdDs, xdsl2SCStatusLogScGroupSize=xdsl2SCStatusLogScGroupSize, xdsl2ChAlarmConfProfileXturThresh15MinCorrected=xdsl2ChAlarmConfProfileXturThresh15MinCorrected, xdsl2PMLHist1DValidInterval=xdsl2PMLHist1DValidInterval, xdsl2LineStatusTssiDs=xdsl2LineStatusTssiDs, xdsl2LConfTempChan2RaRatioUs=xdsl2LConfTempChan2RaRatioUs, xdsl2Scalar=xdsl2Scalar, vdsl2MIB=vdsl2MIB, xdsl2LConfProfSnrModeUs=xdsl2LConfProfSnrModeUs, xdsl2LConfProfDpboEPsd=xdsl2LConfProfDpboEPsd, xdsl2SCStatusQlnScGroupSize=xdsl2SCStatusQlnScGroupSize, xdsl2LineSegmentRowStatus=xdsl2LineSegmentRowStatus, xdsl2PMLHist15MInterval=xdsl2PMLHist15MInterval, xdsl2LineCmndConfBpscRequests=xdsl2LineCmndConfBpscRequests, xdsl2LConfProfMaxSnrmUs=xdsl2LConfProfMaxSnrmUs, xdsl2ChConfProfMinProtectionUs=xdsl2ChConfProfMinProtectionUs, xdsl2PMChHist1DGroup=xdsl2PMChHist1DGroup, xdsl2PMLHist15MValidInterval=xdsl2PMLHist15MValidInterval, xdsl2PMLInitHist1DValidInterval=xdsl2PMLInitHist1DValidInterval, xdsl2LConfProfPmMode=xdsl2LConfProfPmMode, xdsl2LConfProfSnrModeDs=xdsl2LConfProfSnrModeDs, xdsl2LConfTempChan2RaRatioDs=xdsl2LConfTempChan2RaRatioDs, xdsl2LineAlarmConfProfileXtucThresh15MinEs=xdsl2LineAlarmConfProfileXtucThresh15MinEs, xdsl2LInvSystemVendorId=xdsl2LInvSystemVendorId, xdsl2PMLInitCurr15MTimeElapsed=xdsl2PMLInitCurr15MTimeElapsed, xdsl2LineConfTemplateGroup=xdsl2LineConfTemplateGroup, xdsl2LConfProfMinSnrmDs=xdsl2LConfProfMinSnrmDs, xdsl2PMLInitCurr1DayFullInits=xdsl2PMLInitCurr1DayFullInits, xdsl2LConfTempChan4ConfProfile=xdsl2LConfTempChan4ConfProfile, xdsl2PMLineInitHist15MinTable=xdsl2PMLineInitHist15MinTable, xdsl2PMLInitHist15MValidInterval=xdsl2PMLInitHist15MValidInterval, xdsl2ChConfProfileEntry=xdsl2ChConfProfileEntry, xdsl2LineAlarmConfTemplate=xdsl2LineAlarmConfTemplate, xdsl2LineInventoryGroup=xdsl2LineInventoryGroup, xdsl2LineCmndConfLdsfFailReason=xdsl2LineCmndConfLdsfFailReason, xdsl2LineStatusActAtpDs=xdsl2LineStatusActAtpDs, xdsl2LineConfProfModeSpecEntry=xdsl2LineConfProfModeSpecEntry, xdsl2LConfProfL0Time=xdsl2LConfProfL0Time, xdsl2SCStatusTable=xdsl2SCStatusTable, xdsl2LConfTempRowStatus=xdsl2LConfTempRowStatus, xdsl2PMLHist1DMonitoredTime=xdsl2PMLHist1DMonitoredTime, xdsl2LinePerfCodingViolationsThreshXtur=xdsl2LinePerfCodingViolationsThreshXtur, xdsl2SCStatusGroup=xdsl2SCStatusGroup, xdsl2LConfProfDpboEsCableModelA=xdsl2LConfProfDpboEsCableModelA, xdsl2ScalarSC=xdsl2ScalarSC, xdsl2LineStatusTssiUs=xdsl2LineStatusTssiUs, xdsl2SCStatusSnrMtime=xdsl2SCStatusSnrMtime, xdsl2PMLineCurrEntry=xdsl2PMLineCurrEntry, xdsl2LConfProfRaUsTimeUs=xdsl2LConfProfRaUsTimeUs, xdsl2LineStatusAttainableRateDs=xdsl2LineStatusAttainableRateDs, xdsl2LineConfProfModeSpecBandUsTable=xdsl2LineConfProfModeSpecBandUsTable, xdsl2LConfProfUpboKLF=xdsl2LConfProfUpboKLF, xdsl2PMLInitHist15MFailedShortInits=xdsl2PMLInitHist15MFailedShortInits, xdsl2PMLInitCurr15MInvalidIntervals=xdsl2PMLInitCurr15MInvalidIntervals, PYSNMP_MODULE_ID=vdsl2MIB, xdsl2LAlarmConfTempChan3ConfProfile=xdsl2LAlarmConfTempChan3ConfProfile, xdsl2LineStatusChangeXtuc=xdsl2LineStatusChangeXtuc, xdsl2PMChHist15MCorrectedBlocks=xdsl2PMChHist15MCorrectedBlocks, xdsl2PMChHist15MinGroup=xdsl2PMChHist15MinGroup, xdsl2ProfileAlarmConf=xdsl2ProfileAlarmConf, xdsl2LineBpscGroup=xdsl2LineBpscGroup, xdsl2SCStatusSegmentEntry=xdsl2SCStatusSegmentEntry, xdsl2PMChHist1DTable=xdsl2PMChHist1DTable, xdsl2LinePerfESThreshXtur=xdsl2LinePerfESThreshXtur, xdsl2LineCmndConfBpsc=xdsl2LineCmndConfBpsc, xdsl2ChConfProfileMinResGroup=xdsl2ChConfProfileMinResGroup, xdsl2LConfProfMaxAggRxPwrUs=xdsl2LConfProfMaxAggRxPwrUs, xdsl2PMChHist15MinTable=xdsl2PMChHist15MinTable, xdsl2PMLCurr1DayEs=xdsl2PMLCurr1DayEs, xdsl2LineSegmentTable=xdsl2LineSegmentTable, xdsl2LineInventoryEntry=xdsl2LineInventoryEntry, xdsl2PMChCurr15MValidIntervals=xdsl2PMChCurr15MValidIntervals, xdsl2ChConfProfMaxBerDs=xdsl2ChConfProfMaxBerDs, xdsl2ChAlarmConfProfileGroup=xdsl2ChAlarmConfProfileGroup, xdsl2PMLHist1DSes=xdsl2PMLHist1DSes, xdsl2PMLineHist15MinEntry=xdsl2PMLineHist15MinEntry, xdsl2LConfProfScMaskDs=xdsl2LConfProfScMaskDs, xdsl2PMChHist1DMonitoredTime=xdsl2PMChHist1DMonitoredTime, xdsl2PMChCurrEntry=xdsl2PMChCurrEntry, xdsl2PMLCurr1DayInvalidIntervals=xdsl2PMLCurr1DayInvalidIntervals, xdsl2LineStatusPwrMngState=xdsl2LineStatusPwrMngState, xdsl2SCStatusBandSigAtten=xdsl2SCStatusBandSigAtten, xdsl2ProfileLine=xdsl2ProfileLine, xdsl2PMLineInitHist1DayEntry=xdsl2PMLineInitHist1DayEntry, xdsl2LineStatusActPsdUs=xdsl2LineStatusActPsdUs, xdsl2ChannelStatusGroup=xdsl2ChannelStatusGroup)
