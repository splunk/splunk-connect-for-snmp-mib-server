#
# PySNMP MIB module JUNIPER-PING-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/JUNIPER-PING-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:49:51 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ValueSizeConstraint, ValueRangeConstraint, ConstraintsUnion, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ValueSizeConstraint", "ValueRangeConstraint", "ConstraintsUnion", "SingleValueConstraint")
pingCtlTargetAddress, pingResultsMinRtt, pingResultsOperStatus, pingResultsIpTargetAddress, pingResultsMaxRtt, pingResultsIpTargetAddressType, pingCtlTargetAddressType, pingResultsAverageRtt, pingResultsRttSumOfSquares, pingResultsProbeResponses, pingResultsSentProbes, OperationResponseStatus, pingProbeHistoryEntry, pingResultsEntry, pingResultsLastGoodProbe = mibBuilder.importSymbols("DISMAN-PING-MIB", "pingCtlTargetAddress", "pingResultsMinRtt", "pingResultsOperStatus", "pingResultsIpTargetAddress", "pingResultsMaxRtt", "pingResultsIpTargetAddressType", "pingCtlTargetAddressType", "pingResultsAverageRtt", "pingResultsRttSumOfSquares", "pingResultsProbeResponses", "pingResultsSentProbes", "OperationResponseStatus", "pingProbeHistoryEntry", "pingResultsEntry", "pingResultsLastGoodProbe")
InterfaceIndexOrZero, = mibBuilder.importSymbols("IF-MIB", "InterfaceIndexOrZero")
InetPortNumber, = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetPortNumber")
jnxPingNotifications, jnxMibs = mibBuilder.importSymbols("JUNIPER-SMI", "jnxPingNotifications", "jnxMibs")
SnmpAdminString, = mibBuilder.importSymbols("SNMP-FRAMEWORK-MIB", "SnmpAdminString")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Unsigned32, TimeTicks, IpAddress, MibIdentifier, iso, MibScalar, MibTable, MibTableRow, MibTableColumn, Integer32, Counter32, ModuleIdentity, Counter64, Bits, ObjectIdentity, NotificationType, Gauge32 = mibBuilder.importSymbols("SNMPv2-SMI", "Unsigned32", "TimeTicks", "IpAddress", "MibIdentifier", "iso", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Integer32", "Counter32", "ModuleIdentity", "Counter64", "Bits", "ObjectIdentity", "NotificationType", "Gauge32")
TextualConvention, DateAndTime, DisplayString, TruthValue = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DateAndTime", "DisplayString", "TruthValue")
jnxPingMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 2636, 3, 7))
jnxPingMIB.setRevisions(('2011-09-20 00:00', '2009-11-18 00:00', '2009-04-20 00:00', '2005-05-01 00:00', '2004-04-15 00:00',))
if mibBuilder.loadTexts: jnxPingMIB.setLastUpdated('200911180000Z')
if mibBuilder.loadTexts: jnxPingMIB.setOrganization('Juniper Networks, Inc.')
jnxPingObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2636, 3, 7, 1))
jnxPingImplementationTypeDomains = MibIdentifier((1, 3, 6, 1, 4, 1, 2636, 3, 7, 2))
jnxPingIcmpTimeStamp = ObjectIdentity((1, 3, 6, 1, 4, 1, 2636, 3, 7, 2, 1))
if mibBuilder.loadTexts: jnxPingIcmpTimeStamp.setStatus('current')
jnxPingHttpGet = ObjectIdentity((1, 3, 6, 1, 4, 1, 2636, 3, 7, 2, 2))
if mibBuilder.loadTexts: jnxPingHttpGet.setStatus('current')
jnxPingHttpGetMetadata = ObjectIdentity((1, 3, 6, 1, 4, 1, 2636, 3, 7, 2, 3))
if mibBuilder.loadTexts: jnxPingHttpGetMetadata.setStatus('current')
jnxPingDnsQuery = ObjectIdentity((1, 3, 6, 1, 4, 1, 2636, 3, 7, 2, 4))
if mibBuilder.loadTexts: jnxPingDnsQuery.setStatus('current')
jnxPingNtpQuery = ObjectIdentity((1, 3, 6, 1, 4, 1, 2636, 3, 7, 2, 5))
if mibBuilder.loadTexts: jnxPingNtpQuery.setStatus('current')
jnxPingUdpTimestamp = ObjectIdentity((1, 3, 6, 1, 4, 1, 2636, 3, 7, 2, 6))
if mibBuilder.loadTexts: jnxPingUdpTimestamp.setStatus('current')
jnxPingCtlTable = MibTable((1, 3, 6, 1, 4, 1, 2636, 3, 7, 1, 2), )
if mibBuilder.loadTexts: jnxPingCtlTable.setStatus('current')
jnxPingCtlEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2636, 3, 7, 1, 2, 1), ).setIndexNames((0, "JUNIPER-PING-MIB", "jnxPingCtlOwnerIndex"), (0, "JUNIPER-PING-MIB", "jnxPingCtlTestName"))
if mibBuilder.loadTexts: jnxPingCtlEntry.setStatus('current')
jnxPingCtlOwnerIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 7, 1, 2, 1, 1), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 32)))
if mibBuilder.loadTexts: jnxPingCtlOwnerIndex.setStatus('current')
jnxPingCtlTestName = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 7, 1, 2, 1, 2), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 32)))
if mibBuilder.loadTexts: jnxPingCtlTestName.setStatus('current')
jnxPingCtlIfName = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 7, 1, 2, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 24)).clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: jnxPingCtlIfName.setStatus('current')
jnxPingCtlRoutingIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 7, 1, 2, 1, 4), InterfaceIndexOrZero()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: jnxPingCtlRoutingIfIndex.setStatus('deprecated')
jnxPingCtlRoutingIfName = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 7, 1, 2, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 24)).clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: jnxPingCtlRoutingIfName.setStatus('deprecated')
jnxPingCtlRoutingInstanceName = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 7, 1, 2, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31)).clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: jnxPingCtlRoutingInstanceName.setStatus('current')
jnxPingCtlRttThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 7, 1, 2, 1, 7), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 6000000))).setUnits('microseconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: jnxPingCtlRttThreshold.setStatus('current')
jnxPingCtlRttStdDevThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 7, 1, 2, 1, 8), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 6000000))).setUnits('microseconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: jnxPingCtlRttStdDevThreshold.setStatus('current')
jnxPingCtlRttJitterThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 7, 1, 2, 1, 9), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 6000000))).setUnits('microseconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: jnxPingCtlRttJitterThreshold.setStatus('current')
jnxPingCtlEgressTimeThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 7, 1, 2, 1, 10), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 60000000))).setUnits('microseconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: jnxPingCtlEgressTimeThreshold.setStatus('current')
jnxPingCtlEgressStdDevThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 7, 1, 2, 1, 11), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 60000000))).setUnits('microseconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: jnxPingCtlEgressStdDevThreshold.setStatus('current')
jnxPingCtlEgressJitterThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 7, 1, 2, 1, 12), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 60000000))).setUnits('microseconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: jnxPingCtlEgressJitterThreshold.setStatus('current')
jnxPingCtlIngressTimeThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 7, 1, 2, 1, 13), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 60000000))).setUnits('microseconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: jnxPingCtlIngressTimeThreshold.setStatus('current')
jnxPingCtlIngressStddevThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 7, 1, 2, 1, 14), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 60000000))).setUnits('microseconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: jnxPingCtlIngressStddevThreshold.setStatus('current')
jnxPingCtlIngressJitterThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 7, 1, 2, 1, 15), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 60000000))).setUnits('microseconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: jnxPingCtlIngressJitterThreshold.setStatus('current')
jnxPingCtlTrapGeneration = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 7, 1, 2, 1, 16), Bits().clone(namedValues=NamedValues(("rttThreshold", 0), ("rttStdDevThreshold", 1), ("rttJitterThreshold", 2), ("egressThreshold", 3), ("egressStdDevThreshold", 4), ("egressJitterThreshold", 5), ("ingressThreshold", 6), ("ingressStdDevThreshold", 7), ("ingressJitterThreshold", 8)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: jnxPingCtlTrapGeneration.setStatus('current')
jnxPingCtlTargetPort = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 7, 1, 2, 1, 17), InetPortNumber().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(7, 7), ValueRangeConstraint(49152, 65535), ))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: jnxPingCtlTargetPort.setStatus('current')
jnxPingCtlJseriesHWTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 7, 1, 2, 1, 18), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: jnxPingCtlJseriesHWTimeStamp.setStatus('current')
jnxPingCtlOneWayHWTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 7, 1, 2, 1, 19), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: jnxPingCtlOneWayHWTimeStamp.setStatus('current')
jnxPingCtlMovAvgSize = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 7, 1, 2, 1, 20), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: jnxPingCtlMovAvgSize.setStatus('current')
jnxPingCtlMXseriesHWTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 7, 1, 2, 1, 21), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: jnxPingCtlMXseriesHWTimeStamp.setStatus('current')
jnxPingCtlEXseriesHWTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 7, 1, 2, 1, 22), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: jnxPingCtlEXseriesHWTimeStamp.setStatus('current')
jnxPingResultsTable = MibTable((1, 3, 6, 1, 4, 1, 2636, 3, 7, 1, 3), )
if mibBuilder.loadTexts: jnxPingResultsTable.setStatus('current')
jnxPingResultsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2636, 3, 7, 1, 3, 1), )
pingResultsEntry.registerAugmentions(("JUNIPER-PING-MIB", "jnxPingResultsEntry"))
jnxPingResultsEntry.setIndexNames(*pingResultsEntry.getIndexNames())
if mibBuilder.loadTexts: jnxPingResultsEntry.setStatus('current')
jnxPingResultsRttUs = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 7, 1, 3, 1, 1), Unsigned32()).setUnits('microseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxPingResultsRttUs.setStatus('current')
jnxPingResultsSumRttUs = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 7, 1, 3, 1, 2), Unsigned32()).setUnits('microseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxPingResultsSumRttUs.setStatus('current')
jnxPingResultsMinRttUs = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 7, 1, 3, 1, 3), Unsigned32()).setUnits('microseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxPingResultsMinRttUs.setStatus('current')
jnxPingResultsMaxRttUs = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 7, 1, 3, 1, 4), Unsigned32()).setUnits('microseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxPingResultsMaxRttUs.setStatus('current')
jnxPingResultsAvgRttUs = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 7, 1, 3, 1, 5), Unsigned32()).setUnits('microseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxPingResultsAvgRttUs.setStatus('current')
jnxPingResultsStdDevRttUs = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 7, 1, 3, 1, 6), Unsigned32()).setUnits('microseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxPingResultsStdDevRttUs.setStatus('current')
jnxPingResultsEgressUs = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 7, 1, 3, 1, 7), Unsigned32()).setUnits('microseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxPingResultsEgressUs.setStatus('current')
jnxPingResultsMinEgressUs = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 7, 1, 3, 1, 8), Unsigned32()).setUnits('microseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxPingResultsMinEgressUs.setStatus('current')
jnxPingResultsMaxEgressUs = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 7, 1, 3, 1, 9), Unsigned32()).setUnits('microseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxPingResultsMaxEgressUs.setStatus('current')
jnxPingResultsAvgEgressUs = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 7, 1, 3, 1, 10), Unsigned32()).setUnits('microseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxPingResultsAvgEgressUs.setStatus('current')
jnxPingResultsStddevEgressUs = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 7, 1, 3, 1, 11), Unsigned32()).setUnits('microseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxPingResultsStddevEgressUs.setStatus('current')
jnxPingResultsIngressUs = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 7, 1, 3, 1, 12), Unsigned32()).setUnits('microseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxPingResultsIngressUs.setStatus('current')
jnxPingResultsMinIngressUs = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 7, 1, 3, 1, 13), Unsigned32()).setUnits('microseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxPingResultsMinIngressUs.setStatus('current')
jnxPingResultsMaxIngressUs = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 7, 1, 3, 1, 14), Unsigned32()).setUnits('microseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxPingResultsMaxIngressUs.setStatus('current')
jnxPingResultsAvgIngressUs = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 7, 1, 3, 1, 15), Unsigned32()).setUnits('microseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxPingResultsAvgIngressUs.setStatus('current')
jnxPingResultsStddevIngressUs = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 7, 1, 3, 1, 16), Unsigned32()).setUnits('microseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxPingResultsStddevIngressUs.setStatus('current')
jnxPingResultsJitterRttUs = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 7, 1, 3, 1, 17), Unsigned32()).setUnits('microseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxPingResultsJitterRttUs.setStatus('current')
jnxPingResultsJitterEgressUs = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 7, 1, 3, 1, 18), Unsigned32()).setUnits('microseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxPingResultsJitterEgressUs.setStatus('current')
jnxPingResultsJitterIngressUs = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 7, 1, 3, 1, 19), Unsigned32()).setUnits('microseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxPingResultsJitterIngressUs.setStatus('current')
jnxPingResultsStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 7, 1, 3, 1, 20), OperationResponseStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxPingResultsStatus.setStatus('current')
jnxPingResultsTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 7, 1, 3, 1, 21), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxPingResultsTime.setStatus('current')
jnxPingResultsOwnerIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 7, 1, 3, 1, 22), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxPingResultsOwnerIndex.setStatus('current')
jnxPingResultsTestName = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 7, 1, 3, 1, 23), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxPingResultsTestName.setStatus('current')
jnxPingProbeHistoryTable = MibTable((1, 3, 6, 1, 4, 1, 2636, 3, 7, 1, 4), )
if mibBuilder.loadTexts: jnxPingProbeHistoryTable.setStatus('current')
jnxPingProbeHistoryEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2636, 3, 7, 1, 4, 1), )
pingProbeHistoryEntry.registerAugmentions(("JUNIPER-PING-MIB", "jnxPingProbeHistoryEntry"))
jnxPingProbeHistoryEntry.setIndexNames(*pingProbeHistoryEntry.getIndexNames())
if mibBuilder.loadTexts: jnxPingProbeHistoryEntry.setStatus('current')
jnxPingProbeHistoryResponseUs = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 7, 1, 4, 1, 1), Unsigned32()).setUnits('microseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxPingProbeHistoryResponseUs.setStatus('current')
jnxPingProbeHistoryJitterUs = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 7, 1, 4, 1, 2), Unsigned32()).setUnits('microseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxPingProbeHistoryJitterUs.setStatus('current')
jnxPingProbeHistoryResponseEgressUs = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 7, 1, 4, 1, 3), Unsigned32()).setUnits('microseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxPingProbeHistoryResponseEgressUs.setStatus('current')
jnxPingProbeHistoryResponseIngressUs = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 7, 1, 4, 1, 4), Unsigned32()).setUnits('microseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxPingProbeHistoryResponseIngressUs.setStatus('current')
jnxPingProbeHistoryEgressJitterUs = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 7, 1, 4, 1, 5), Unsigned32()).setUnits('microseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxPingProbeHistoryEgressJitterUs.setStatus('current')
jnxPingProbeHistoryIngressJitterUs = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 7, 1, 4, 1, 6), Unsigned32()).setUnits('microseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxPingProbeHistoryIngressJitterUs.setStatus('current')
jnxPingLastTestResultTable = MibTable((1, 3, 6, 1, 4, 1, 2636, 3, 7, 1, 5), )
if mibBuilder.loadTexts: jnxPingLastTestResultTable.setStatus('current')
jnxPingLastTestResultEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2636, 3, 7, 1, 5, 1), ).setIndexNames((0, "JUNIPER-PING-MIB", "jnxPingCtlOwnerIndex"), (0, "JUNIPER-PING-MIB", "jnxPingCtlTestName"))
if mibBuilder.loadTexts: jnxPingLastTestResultEntry.setStatus('current')
jnxPingLastTestResultProbeResponses = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 7, 1, 5, 1, 1), Unsigned32()).setUnits('responses').setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxPingLastTestResultProbeResponses.setStatus('current')
jnxPingLastTestResultSentProbes = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 7, 1, 5, 1, 2), Unsigned32()).setUnits('probes').setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxPingLastTestResultSentProbes.setStatus('current')
jnxPingLastTestResultSumRttUs = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 7, 1, 5, 1, 3), Unsigned32()).setUnits('microseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxPingLastTestResultSumRttUs.setStatus('current')
jnxPingLastTestResultMinRttUs = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 7, 1, 5, 1, 4), Unsigned32()).setUnits('microseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxPingLastTestResultMinRttUs.setStatus('current')
jnxPingLastTestResultMaxRttUs = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 7, 1, 5, 1, 5), Unsigned32()).setUnits('microseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxPingLastTestResultMaxRttUs.setStatus('current')
jnxPingLastTestResultAvgRttUs = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 7, 1, 5, 1, 6), Unsigned32()).setUnits('microseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxPingLastTestResultAvgRttUs.setStatus('current')
jnxPingLastTestResultStdDevRttUs = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 7, 1, 5, 1, 7), Unsigned32()).setUnits('microseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxPingLastTestResultStdDevRttUs.setStatus('current')
jnxPingLastTestResultMinEgressUs = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 7, 1, 5, 1, 8), Unsigned32()).setUnits('microseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxPingLastTestResultMinEgressUs.setStatus('current')
jnxPingLastTestResultMaxEgressUs = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 7, 1, 5, 1, 9), Unsigned32()).setUnits('microseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxPingLastTestResultMaxEgressUs.setStatus('current')
jnxPingLastTestResultAvgEgressUs = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 7, 1, 5, 1, 10), Unsigned32()).setUnits('microseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxPingLastTestResultAvgEgressUs.setStatus('current')
jnxPingLastTestResultStddevEgressUs = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 7, 1, 5, 1, 11), Unsigned32()).setUnits('microseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxPingLastTestResultStddevEgressUs.setStatus('current')
jnxPingLastTestResultMinIngressUs = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 7, 1, 5, 1, 12), Unsigned32()).setUnits('microseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxPingLastTestResultMinIngressUs.setStatus('current')
jnxPingLastTestResultMaxIngressUs = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 7, 1, 5, 1, 13), Unsigned32()).setUnits('microseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxPingLastTestResultMaxIngressUs.setStatus('current')
jnxPingLastTestResultAvgIngressUs = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 7, 1, 5, 1, 14), Unsigned32()).setUnits('microseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxPingLastTestResultAvgIngressUs.setStatus('current')
jnxPingLastTestResultStddevIngressUs = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 7, 1, 5, 1, 15), Unsigned32()).setUnits('microseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxPingLastTestResultStddevIngressUs.setStatus('current')
jnxPingLastTestResultPeakToPeakJitterRttUs = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 7, 1, 5, 1, 16), Unsigned32()).setUnits('microseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxPingLastTestResultPeakToPeakJitterRttUs.setStatus('current')
jnxPingLastTestResultPeakToPeakJitterEgressUs = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 7, 1, 5, 1, 17), Unsigned32()).setUnits('microseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxPingLastTestResultPeakToPeakJitterEgressUs.setStatus('current')
jnxPingLastTestResultPeakToPeakJitterIngressUs = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 7, 1, 5, 1, 18), Unsigned32()).setUnits('microseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxPingLastTestResultPeakToPeakJitterIngressUs.setStatus('current')
jnxPingLastTestResultTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 7, 1, 5, 1, 19), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxPingLastTestResultTime.setStatus('current')
jnxPingNotificationPrefix = ObjectIdentity((1, 3, 6, 1, 4, 1, 2636, 4, 9, 0))
if mibBuilder.loadTexts: jnxPingNotificationPrefix.setStatus('current')
jnxPingRttThresholdExceeded = NotificationType((1, 3, 6, 1, 4, 1, 2636, 4, 9, 0, 1)).setObjects(("DISMAN-PING-MIB", "pingCtlTargetAddressType"), ("DISMAN-PING-MIB", "pingCtlTargetAddress"), ("DISMAN-PING-MIB", "pingResultsOperStatus"), ("DISMAN-PING-MIB", "pingResultsIpTargetAddressType"), ("DISMAN-PING-MIB", "pingResultsIpTargetAddress"), ("JUNIPER-PING-MIB", "jnxPingResultsMinRttUs"), ("JUNIPER-PING-MIB", "jnxPingResultsMaxRttUs"), ("JUNIPER-PING-MIB", "jnxPingResultsAvgRttUs"), ("DISMAN-PING-MIB", "pingResultsProbeResponses"), ("DISMAN-PING-MIB", "pingResultsSentProbes"), ("DISMAN-PING-MIB", "pingResultsRttSumOfSquares"), ("DISMAN-PING-MIB", "pingResultsLastGoodProbe"), ("JUNIPER-PING-MIB", "jnxPingCtlRttThreshold"), ("JUNIPER-PING-MIB", "jnxPingResultsRttUs"))
if mibBuilder.loadTexts: jnxPingRttThresholdExceeded.setStatus('current')
jnxPingRttStdDevThresholdExceeded = NotificationType((1, 3, 6, 1, 4, 1, 2636, 4, 9, 0, 2)).setObjects(("DISMAN-PING-MIB", "pingCtlTargetAddressType"), ("DISMAN-PING-MIB", "pingCtlTargetAddress"), ("DISMAN-PING-MIB", "pingResultsOperStatus"), ("DISMAN-PING-MIB", "pingResultsIpTargetAddressType"), ("DISMAN-PING-MIB", "pingResultsIpTargetAddress"), ("JUNIPER-PING-MIB", "jnxPingResultsMinRttUs"), ("JUNIPER-PING-MIB", "jnxPingResultsMaxRttUs"), ("JUNIPER-PING-MIB", "jnxPingResultsAvgRttUs"), ("DISMAN-PING-MIB", "pingResultsProbeResponses"), ("DISMAN-PING-MIB", "pingResultsSentProbes"), ("DISMAN-PING-MIB", "pingResultsRttSumOfSquares"), ("DISMAN-PING-MIB", "pingResultsLastGoodProbe"), ("JUNIPER-PING-MIB", "jnxPingCtlRttStdDevThreshold"), ("JUNIPER-PING-MIB", "jnxPingResultsStdDevRttUs"))
if mibBuilder.loadTexts: jnxPingRttStdDevThresholdExceeded.setStatus('current')
jnxPingRttJitterThresholdExceeded = NotificationType((1, 3, 6, 1, 4, 1, 2636, 4, 9, 0, 3)).setObjects(("DISMAN-PING-MIB", "pingCtlTargetAddressType"), ("DISMAN-PING-MIB", "pingCtlTargetAddress"), ("DISMAN-PING-MIB", "pingResultsOperStatus"), ("DISMAN-PING-MIB", "pingResultsIpTargetAddressType"), ("DISMAN-PING-MIB", "pingResultsIpTargetAddress"), ("JUNIPER-PING-MIB", "jnxPingResultsMinRttUs"), ("JUNIPER-PING-MIB", "jnxPingResultsMaxRttUs"), ("JUNIPER-PING-MIB", "jnxPingResultsAvgRttUs"), ("DISMAN-PING-MIB", "pingResultsProbeResponses"), ("DISMAN-PING-MIB", "pingResultsSentProbes"), ("DISMAN-PING-MIB", "pingResultsRttSumOfSquares"), ("DISMAN-PING-MIB", "pingResultsLastGoodProbe"), ("JUNIPER-PING-MIB", "jnxPingCtlRttJitterThreshold"))
if mibBuilder.loadTexts: jnxPingRttJitterThresholdExceeded.setStatus('current')
jnxPingEgressThresholdExceeded = NotificationType((1, 3, 6, 1, 4, 1, 2636, 4, 9, 0, 4)).setObjects(("DISMAN-PING-MIB", "pingCtlTargetAddressType"), ("DISMAN-PING-MIB", "pingCtlTargetAddress"), ("DISMAN-PING-MIB", "pingResultsOperStatus"), ("DISMAN-PING-MIB", "pingResultsIpTargetAddressType"), ("DISMAN-PING-MIB", "pingResultsIpTargetAddress"), ("JUNIPER-PING-MIB", "jnxPingResultsMinEgressUs"), ("JUNIPER-PING-MIB", "jnxPingResultsMaxEgressUs"), ("JUNIPER-PING-MIB", "jnxPingResultsAvgEgressUs"), ("DISMAN-PING-MIB", "pingResultsProbeResponses"), ("DISMAN-PING-MIB", "pingResultsSentProbes"), ("DISMAN-PING-MIB", "pingResultsLastGoodProbe"), ("JUNIPER-PING-MIB", "jnxPingCtlEgressTimeThreshold"), ("JUNIPER-PING-MIB", "jnxPingResultsEgressUs"))
if mibBuilder.loadTexts: jnxPingEgressThresholdExceeded.setStatus('current')
jnxPingEgressStdDevThresholdExceeded = NotificationType((1, 3, 6, 1, 4, 1, 2636, 4, 9, 0, 5)).setObjects(("DISMAN-PING-MIB", "pingCtlTargetAddressType"), ("DISMAN-PING-MIB", "pingCtlTargetAddress"), ("DISMAN-PING-MIB", "pingResultsOperStatus"), ("DISMAN-PING-MIB", "pingResultsIpTargetAddressType"), ("DISMAN-PING-MIB", "pingResultsIpTargetAddress"), ("JUNIPER-PING-MIB", "jnxPingResultsMinEgressUs"), ("JUNIPER-PING-MIB", "jnxPingResultsMaxEgressUs"), ("JUNIPER-PING-MIB", "jnxPingResultsAvgEgressUs"), ("DISMAN-PING-MIB", "pingResultsProbeResponses"), ("DISMAN-PING-MIB", "pingResultsSentProbes"), ("DISMAN-PING-MIB", "pingResultsLastGoodProbe"), ("JUNIPER-PING-MIB", "jnxPingResultsStddevEgressUs"), ("JUNIPER-PING-MIB", "jnxPingCtlEgressStdDevThreshold"), ("JUNIPER-PING-MIB", "jnxPingResultsStddevEgressUs"))
if mibBuilder.loadTexts: jnxPingEgressStdDevThresholdExceeded.setStatus('current')
jnxPingEgressJitterThresholdExceeded = NotificationType((1, 3, 6, 1, 4, 1, 2636, 4, 9, 0, 6)).setObjects(("DISMAN-PING-MIB", "pingCtlTargetAddressType"), ("DISMAN-PING-MIB", "pingCtlTargetAddress"), ("DISMAN-PING-MIB", "pingResultsOperStatus"), ("DISMAN-PING-MIB", "pingResultsIpTargetAddressType"), ("DISMAN-PING-MIB", "pingResultsIpTargetAddress"), ("JUNIPER-PING-MIB", "jnxPingResultsMinEgressUs"), ("JUNIPER-PING-MIB", "jnxPingResultsMaxEgressUs"), ("JUNIPER-PING-MIB", "jnxPingResultsAvgEgressUs"), ("DISMAN-PING-MIB", "pingResultsProbeResponses"), ("DISMAN-PING-MIB", "pingResultsSentProbes"), ("DISMAN-PING-MIB", "pingResultsLastGoodProbe"), ("JUNIPER-PING-MIB", "jnxPingCtlEgressJitterThreshold"))
if mibBuilder.loadTexts: jnxPingEgressJitterThresholdExceeded.setStatus('current')
jnxPingIngressThresholdExceeded = NotificationType((1, 3, 6, 1, 4, 1, 2636, 4, 9, 0, 7)).setObjects(("DISMAN-PING-MIB", "pingCtlTargetAddressType"), ("DISMAN-PING-MIB", "pingCtlTargetAddress"), ("DISMAN-PING-MIB", "pingResultsOperStatus"), ("DISMAN-PING-MIB", "pingResultsIpTargetAddressType"), ("DISMAN-PING-MIB", "pingResultsIpTargetAddress"), ("JUNIPER-PING-MIB", "jnxPingResultsMinIngressUs"), ("JUNIPER-PING-MIB", "jnxPingResultsMaxIngressUs"), ("JUNIPER-PING-MIB", "jnxPingResultsAvgIngressUs"), ("DISMAN-PING-MIB", "pingResultsProbeResponses"), ("DISMAN-PING-MIB", "pingResultsSentProbes"), ("DISMAN-PING-MIB", "pingResultsLastGoodProbe"), ("JUNIPER-PING-MIB", "jnxPingCtlIngressTimeThreshold"), ("JUNIPER-PING-MIB", "jnxPingResultsIngressUs"))
if mibBuilder.loadTexts: jnxPingIngressThresholdExceeded.setStatus('current')
jnxPingIngressStddevThresholdExceeded = NotificationType((1, 3, 6, 1, 4, 1, 2636, 4, 9, 0, 8)).setObjects(("DISMAN-PING-MIB", "pingCtlTargetAddressType"), ("DISMAN-PING-MIB", "pingCtlTargetAddress"), ("DISMAN-PING-MIB", "pingResultsOperStatus"), ("DISMAN-PING-MIB", "pingResultsIpTargetAddressType"), ("DISMAN-PING-MIB", "pingResultsIpTargetAddress"), ("JUNIPER-PING-MIB", "jnxPingResultsMinIngressUs"), ("JUNIPER-PING-MIB", "jnxPingResultsMaxIngressUs"), ("JUNIPER-PING-MIB", "jnxPingResultsAvgIngressUs"), ("DISMAN-PING-MIB", "pingResultsProbeResponses"), ("DISMAN-PING-MIB", "pingResultsSentProbes"), ("DISMAN-PING-MIB", "pingResultsLastGoodProbe"), ("JUNIPER-PING-MIB", "jnxPingResultsStddevIngressUs"), ("JUNIPER-PING-MIB", "jnxPingCtlIngressStddevThreshold"), ("JUNIPER-PING-MIB", "jnxPingResultsStddevIngressUs"))
if mibBuilder.loadTexts: jnxPingIngressStddevThresholdExceeded.setStatus('current')
jnxPingIngressJitterThresholdExceeded = NotificationType((1, 3, 6, 1, 4, 1, 2636, 4, 9, 0, 9)).setObjects(("DISMAN-PING-MIB", "pingCtlTargetAddressType"), ("DISMAN-PING-MIB", "pingCtlTargetAddress"), ("DISMAN-PING-MIB", "pingResultsOperStatus"), ("DISMAN-PING-MIB", "pingResultsIpTargetAddressType"), ("DISMAN-PING-MIB", "pingResultsIpTargetAddress"), ("JUNIPER-PING-MIB", "jnxPingResultsMinIngressUs"), ("JUNIPER-PING-MIB", "jnxPingResultsMaxIngressUs"), ("JUNIPER-PING-MIB", "jnxPingResultsAvgIngressUs"), ("DISMAN-PING-MIB", "pingResultsProbeResponses"), ("DISMAN-PING-MIB", "pingResultsSentProbes"), ("DISMAN-PING-MIB", "pingResultsLastGoodProbe"), ("JUNIPER-PING-MIB", "jnxPingCtlIngressJitterThreshold"))
if mibBuilder.loadTexts: jnxPingIngressJitterThresholdExceeded.setStatus('current')
mibBuilder.exportSymbols("JUNIPER-PING-MIB", jnxPingCtlIngressJitterThreshold=jnxPingCtlIngressJitterThreshold, jnxPingEgressStdDevThresholdExceeded=jnxPingEgressStdDevThresholdExceeded, jnxPingLastTestResultAvgIngressUs=jnxPingLastTestResultAvgIngressUs, jnxPingResultsSumRttUs=jnxPingResultsSumRttUs, jnxPingHttpGet=jnxPingHttpGet, jnxPingIcmpTimeStamp=jnxPingIcmpTimeStamp, jnxPingResultsMaxIngressUs=jnxPingResultsMaxIngressUs, jnxPingResultsMinIngressUs=jnxPingResultsMinIngressUs, jnxPingProbeHistoryIngressJitterUs=jnxPingProbeHistoryIngressJitterUs, jnxPingCtlOneWayHWTimeStamp=jnxPingCtlOneWayHWTimeStamp, jnxPingResultsMinEgressUs=jnxPingResultsMinEgressUs, jnxPingResultsMinRttUs=jnxPingResultsMinRttUs, jnxPingCtlJseriesHWTimeStamp=jnxPingCtlJseriesHWTimeStamp, jnxPingResultsMaxEgressUs=jnxPingResultsMaxEgressUs, jnxPingResultsStatus=jnxPingResultsStatus, jnxPingResultsJitterRttUs=jnxPingResultsJitterRttUs, jnxPingCtlIngressTimeThreshold=jnxPingCtlIngressTimeThreshold, jnxPingResultsIngressUs=jnxPingResultsIngressUs, jnxPingResultsTime=jnxPingResultsTime, jnxPingLastTestResultSentProbes=jnxPingLastTestResultSentProbes, jnxPingUdpTimestamp=jnxPingUdpTimestamp, jnxPingResultsStdDevRttUs=jnxPingResultsStdDevRttUs, jnxPingProbeHistoryEntry=jnxPingProbeHistoryEntry, jnxPingCtlRoutingInstanceName=jnxPingCtlRoutingInstanceName, jnxPingProbeHistoryJitterUs=jnxPingProbeHistoryJitterUs, jnxPingProbeHistoryResponseUs=jnxPingProbeHistoryResponseUs, jnxPingLastTestResultMinIngressUs=jnxPingLastTestResultMinIngressUs, jnxPingCtlRoutingIfIndex=jnxPingCtlRoutingIfIndex, jnxPingLastTestResultProbeResponses=jnxPingLastTestResultProbeResponses, jnxPingCtlMovAvgSize=jnxPingCtlMovAvgSize, jnxPingRttStdDevThresholdExceeded=jnxPingRttStdDevThresholdExceeded, jnxPingProbeHistoryTable=jnxPingProbeHistoryTable, jnxPingCtlTestName=jnxPingCtlTestName, jnxPingNtpQuery=jnxPingNtpQuery, jnxPingLastTestResultTable=jnxPingLastTestResultTable, jnxPingLastTestResultMaxRttUs=jnxPingLastTestResultMaxRttUs, jnxPingResultsEgressUs=jnxPingResultsEgressUs, jnxPingResultsStddevIngressUs=jnxPingResultsStddevIngressUs, jnxPingObjects=jnxPingObjects, jnxPingProbeHistoryEgressJitterUs=jnxPingProbeHistoryEgressJitterUs, jnxPingResultsStddevEgressUs=jnxPingResultsStddevEgressUs, jnxPingLastTestResultPeakToPeakJitterRttUs=jnxPingLastTestResultPeakToPeakJitterRttUs, jnxPingCtlTable=jnxPingCtlTable, jnxPingCtlEgressTimeThreshold=jnxPingCtlEgressTimeThreshold, jnxPingCtlTargetPort=jnxPingCtlTargetPort, jnxPingCtlEntry=jnxPingCtlEntry, jnxPingResultsTestName=jnxPingResultsTestName, jnxPingLastTestResultMinEgressUs=jnxPingLastTestResultMinEgressUs, jnxPingProbeHistoryResponseEgressUs=jnxPingProbeHistoryResponseEgressUs, jnxPingCtlRttThreshold=jnxPingCtlRttThreshold, jnxPingRttThresholdExceeded=jnxPingRttThresholdExceeded, jnxPingLastTestResultAvgRttUs=jnxPingLastTestResultAvgRttUs, jnxPingMIB=jnxPingMIB, jnxPingLastTestResultMinRttUs=jnxPingLastTestResultMinRttUs, jnxPingLastTestResultPeakToPeakJitterIngressUs=jnxPingLastTestResultPeakToPeakJitterIngressUs, jnxPingNotificationPrefix=jnxPingNotificationPrefix, jnxPingCtlIngressStddevThreshold=jnxPingCtlIngressStddevThreshold, jnxPingImplementationTypeDomains=jnxPingImplementationTypeDomains, jnxPingCtlEgressJitterThreshold=jnxPingCtlEgressJitterThreshold, jnxPingResultsAvgIngressUs=jnxPingResultsAvgIngressUs, jnxPingLastTestResultEntry=jnxPingLastTestResultEntry, jnxPingProbeHistoryResponseIngressUs=jnxPingProbeHistoryResponseIngressUs, jnxPingResultsJitterIngressUs=jnxPingResultsJitterIngressUs, jnxPingResultsTable=jnxPingResultsTable, jnxPingResultsJitterEgressUs=jnxPingResultsJitterEgressUs, jnxPingResultsAvgRttUs=jnxPingResultsAvgRttUs, jnxPingResultsOwnerIndex=jnxPingResultsOwnerIndex, jnxPingCtlIfName=jnxPingCtlIfName, jnxPingLastTestResultMaxEgressUs=jnxPingLastTestResultMaxEgressUs, jnxPingLastTestResultStddevEgressUs=jnxPingLastTestResultStddevEgressUs, jnxPingCtlRttStdDevThreshold=jnxPingCtlRttStdDevThreshold, PYSNMP_MODULE_ID=jnxPingMIB, jnxPingLastTestResultAvgEgressUs=jnxPingLastTestResultAvgEgressUs, jnxPingLastTestResultMaxIngressUs=jnxPingLastTestResultMaxIngressUs, jnxPingLastTestResultTime=jnxPingLastTestResultTime, jnxPingCtlTrapGeneration=jnxPingCtlTrapGeneration, jnxPingResultsMaxRttUs=jnxPingResultsMaxRttUs, jnxPingCtlRoutingIfName=jnxPingCtlRoutingIfName, jnxPingCtlEgressStdDevThreshold=jnxPingCtlEgressStdDevThreshold, jnxPingHttpGetMetadata=jnxPingHttpGetMetadata, jnxPingLastTestResultSumRttUs=jnxPingLastTestResultSumRttUs, jnxPingCtlMXseriesHWTimeStamp=jnxPingCtlMXseriesHWTimeStamp, jnxPingRttJitterThresholdExceeded=jnxPingRttJitterThresholdExceeded, jnxPingResultsEntry=jnxPingResultsEntry, jnxPingCtlEXseriesHWTimeStamp=jnxPingCtlEXseriesHWTimeStamp, jnxPingLastTestResultStdDevRttUs=jnxPingLastTestResultStdDevRttUs, jnxPingIngressThresholdExceeded=jnxPingIngressThresholdExceeded, jnxPingDnsQuery=jnxPingDnsQuery, jnxPingCtlOwnerIndex=jnxPingCtlOwnerIndex, jnxPingEgressThresholdExceeded=jnxPingEgressThresholdExceeded, jnxPingCtlRttJitterThreshold=jnxPingCtlRttJitterThreshold, jnxPingResultsAvgEgressUs=jnxPingResultsAvgEgressUs, jnxPingEgressJitterThresholdExceeded=jnxPingEgressJitterThresholdExceeded, jnxPingResultsRttUs=jnxPingResultsRttUs, jnxPingIngressStddevThresholdExceeded=jnxPingIngressStddevThresholdExceeded, jnxPingLastTestResultPeakToPeakJitterEgressUs=jnxPingLastTestResultPeakToPeakJitterEgressUs, jnxPingLastTestResultStddevIngressUs=jnxPingLastTestResultStddevIngressUs, jnxPingIngressJitterThresholdExceeded=jnxPingIngressJitterThresholdExceeded)
