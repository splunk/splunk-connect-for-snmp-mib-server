#
# PySNMP MIB module XIO-HUB-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/XIO-HUB-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 21:37:54 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ValueSizeConstraint, SingleValueConstraint, ValueRangeConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ValueSizeConstraint", "SingleValueConstraint", "ValueRangeConstraint", "ConstraintsIntersection")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Bits, Counter32, Gauge32, MibScalar, MibTable, MibTableRow, MibTableColumn, TimeTicks, Counter64, ObjectIdentity, Unsigned32, ModuleIdentity, NotificationType, iso, Integer32, MibIdentifier, NotificationType, enterprises, IpAddress = mibBuilder.importSymbols("SNMPv2-SMI", "Bits", "Counter32", "Gauge32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "TimeTicks", "Counter64", "ObjectIdentity", "Unsigned32", "ModuleIdentity", "NotificationType", "iso", "Integer32", "MibIdentifier", "NotificationType", "enterprises", "IpAddress")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
xiotech = MibIdentifier((1, 3, 6, 1, 4, 1, 2366))
xioHub = MibIdentifier((1, 3, 6, 1, 4, 1, 2366, 1))
xioHubIdentification = MibIdentifier((1, 3, 6, 1, 4, 1, 2366, 1, 1))
xioHubEnvironment = MibIdentifier((1, 3, 6, 1, 4, 1, 2366, 1, 2))
xioHubStatusData = MibIdentifier((1, 3, 6, 1, 4, 1, 2366, 1, 3))
xioHubPhysicalDevice = MibIdentifier((1, 3, 6, 1, 4, 1, 2366, 1, 4))
xioHubRaidDevice = MibIdentifier((1, 3, 6, 1, 4, 1, 2366, 1, 5))
xioHubVirtualDevice = MibIdentifier((1, 3, 6, 1, 4, 1, 2366, 1, 6))
xioHubCacheInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 2366, 1, 7))
xioHubHabInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 2366, 1, 8))
xioHubBusInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 2366, 1, 9))
xioHubTrapVariables = MibIdentifier((1, 3, 6, 1, 4, 1, 2366, 1, 10))
xioHubTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 2366, 1, 20))
xioHubLoadInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 2366, 1, 30))
xioHubStorageDevList = MibIdentifier((1, 3, 6, 1, 4, 1, 2366, 1, 40))
xioHubVpInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 2366, 1, 50))
xioHubPpInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 2366, 1, 60))
xioHubSvInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 2366, 1, 70))
xioHubHuName = MibScalar((1, 3, 6, 1, 4, 1, 2366, 1, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xioHubHuName.setStatus('mandatory')
xioHubHuSerialNum = MibScalar((1, 3, 6, 1, 4, 1, 2366, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xioHubHuSerialNum.setStatus('mandatory')
xioHubHuCompat = MibScalar((1, 3, 6, 1, 4, 1, 2366, 1, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xioHubHuCompat.setStatus('mandatory')
xioHubHuTCPIPAddr = MibScalar((1, 3, 6, 1, 4, 1, 2366, 1, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xioHubHuTCPIPAddr.setStatus('mandatory')
xioHubHuHeartbeat = MibScalar((1, 3, 6, 1, 4, 1, 2366, 1, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xioHubHuHeartbeat.setStatus('mandatory')
xioHubEvUpsAc = MibScalar((1, 3, 6, 1, 4, 1, 2366, 1, 2, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xioHubEvUpsAc.setStatus('mandatory')
xioHubEvUpsBattLow = MibScalar((1, 3, 6, 1, 4, 1, 2366, 1, 2, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xioHubEvUpsBattLow.setStatus('mandatory')
xioHubEvMainPower = MibScalar((1, 3, 6, 1, 4, 1, 2366, 1, 2, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xioHubEvMainPower.setStatus('mandatory')
xioHubEvNumSupplies = MibScalar((1, 3, 6, 1, 4, 1, 2366, 1, 2, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xioHubEvNumSupplies.setStatus('mandatory')
xioHubEvNumFrontFans = MibScalar((1, 3, 6, 1, 4, 1, 2366, 1, 2, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xioHubEvNumFrontFans.setStatus('mandatory')
xioHubEvNumRearFans = MibScalar((1, 3, 6, 1, 4, 1, 2366, 1, 2, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xioHubEvNumRearFans.setStatus('mandatory')
xioHubEvMainDcPowerTable = MibTable((1, 3, 6, 1, 4, 1, 2366, 1, 2, 7), )
if mibBuilder.loadTexts: xioHubEvMainDcPowerTable.setStatus('mandatory')
xioHubEvMainDcPowerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2366, 1, 2, 7, 1), ).setIndexNames((0, "XIO-HUB-MIB", "xioHubEvDcId"))
if mibBuilder.loadTexts: xioHubEvMainDcPowerEntry.setStatus('mandatory')
xioHubEvDcId = MibTableColumn((1, 3, 6, 1, 4, 1, 2366, 1, 2, 7, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 12))).setMaxAccess("readonly")
if mibBuilder.loadTexts: xioHubEvDcId.setStatus('mandatory')
xioHubEvDcExists = MibTableColumn((1, 3, 6, 1, 4, 1, 2366, 1, 2, 7, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 12))).setMaxAccess("readonly")
if mibBuilder.loadTexts: xioHubEvDcExists.setStatus('mandatory')
xioHubEvDcGood = MibTableColumn((1, 3, 6, 1, 4, 1, 2366, 1, 2, 7, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 12))).setMaxAccess("readonly")
if mibBuilder.loadTexts: xioHubEvDcGood.setStatus('mandatory')
xioHubEvFrontFansTable = MibTable((1, 3, 6, 1, 4, 1, 2366, 1, 2, 8), )
if mibBuilder.loadTexts: xioHubEvFrontFansTable.setStatus('mandatory')
xioHubEvFrontFansEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2366, 1, 2, 8, 1), ).setIndexNames((0, "XIO-HUB-MIB", "xioHubEvFrontFansId"))
if mibBuilder.loadTexts: xioHubEvFrontFansEntry.setStatus('mandatory')
xioHubEvFrontFansId = MibTableColumn((1, 3, 6, 1, 4, 1, 2366, 1, 2, 8, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 12))).setMaxAccess("readonly")
if mibBuilder.loadTexts: xioHubEvFrontFansId.setStatus('mandatory')
xioHubEvFrontFansGood = MibTableColumn((1, 3, 6, 1, 4, 1, 2366, 1, 2, 8, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 12))).setMaxAccess("readonly")
if mibBuilder.loadTexts: xioHubEvFrontFansGood.setStatus('mandatory')
xioHubEvRearFansTable = MibTable((1, 3, 6, 1, 4, 1, 2366, 1, 2, 9), )
if mibBuilder.loadTexts: xioHubEvRearFansTable.setStatus('mandatory')
xioHubEvRearFansEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2366, 1, 2, 9, 1), ).setIndexNames((0, "XIO-HUB-MIB", "xioHubEvRearFansId"))
if mibBuilder.loadTexts: xioHubEvRearFansEntry.setStatus('mandatory')
xioHubEvRearFansId = MibTableColumn((1, 3, 6, 1, 4, 1, 2366, 1, 2, 9, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 12))).setMaxAccess("readonly")
if mibBuilder.loadTexts: xioHubEvRearFansId.setStatus('mandatory')
xioHubEvRearFansGood = MibTableColumn((1, 3, 6, 1, 4, 1, 2366, 1, 2, 9, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 12))).setMaxAccess("readonly")
if mibBuilder.loadTexts: xioHubEvRearFansGood.setStatus('mandatory')
xioHubEvExtUpsAc = MibScalar((1, 3, 6, 1, 4, 1, 2366, 1, 2, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xioHubEvExtUpsAc.setStatus('mandatory')
xioHubEvExtUpsBatt = MibScalar((1, 3, 6, 1, 4, 1, 2366, 1, 2, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xioHubEvExtUpsBatt.setStatus('mandatory')
xioHubEvExtDcMain = MibScalar((1, 3, 6, 1, 4, 1, 2366, 1, 2, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xioHubEvExtDcMain.setStatus('mandatory')
xioHubEvExtNumSupplies = MibScalar((1, 3, 6, 1, 4, 1, 2366, 1, 2, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xioHubEvExtNumSupplies.setStatus('mandatory')
xioHubEvExtNumRearFans = MibScalar((1, 3, 6, 1, 4, 1, 2366, 1, 2, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xioHubEvExtNumRearFans.setStatus('mandatory')
xioHubEvExtMainDcPowerTable = MibTable((1, 3, 6, 1, 4, 1, 2366, 1, 2, 15), )
if mibBuilder.loadTexts: xioHubEvExtMainDcPowerTable.setStatus('mandatory')
xioHubEvExtMainDcPowerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2366, 1, 2, 15, 1), ).setIndexNames((0, "XIO-HUB-MIB", "xioHubEvExtDcId"))
if mibBuilder.loadTexts: xioHubEvExtMainDcPowerEntry.setStatus('mandatory')
xioHubEvExtDcId = MibTableColumn((1, 3, 6, 1, 4, 1, 2366, 1, 2, 15, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 12))).setMaxAccess("readonly")
if mibBuilder.loadTexts: xioHubEvExtDcId.setStatus('mandatory')
xioHubEvExtDcExists = MibTableColumn((1, 3, 6, 1, 4, 1, 2366, 1, 2, 15, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 12))).setMaxAccess("readonly")
if mibBuilder.loadTexts: xioHubEvExtDcExists.setStatus('mandatory')
xioHubEvExtDcGood = MibTableColumn((1, 3, 6, 1, 4, 1, 2366, 1, 2, 15, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 12))).setMaxAccess("readonly")
if mibBuilder.loadTexts: xioHubEvExtDcGood.setStatus('mandatory')
xioHubEvExtRearFansTable = MibTable((1, 3, 6, 1, 4, 1, 2366, 1, 2, 16), )
if mibBuilder.loadTexts: xioHubEvExtRearFansTable.setStatus('mandatory')
xioHubEvExtRearFansEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2366, 1, 2, 16, 1), ).setIndexNames((0, "XIO-HUB-MIB", "xioHubEvExtRearFansId"))
if mibBuilder.loadTexts: xioHubEvExtRearFansEntry.setStatus('mandatory')
xioHubEvExtRearFansId = MibTableColumn((1, 3, 6, 1, 4, 1, 2366, 1, 2, 16, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 12))).setMaxAccess("readonly")
if mibBuilder.loadTexts: xioHubEvExtRearFansId.setStatus('mandatory')
xioHubEvExtRearFansGood = MibTableColumn((1, 3, 6, 1, 4, 1, 2366, 1, 2, 16, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 12))).setMaxAccess("readonly")
if mibBuilder.loadTexts: xioHubEvExtRearFansGood.setStatus('mandatory')
xioHubEvHabTempsTable = MibTable((1, 3, 6, 1, 4, 1, 2366, 1, 2, 17), )
if mibBuilder.loadTexts: xioHubEvHabTempsTable.setStatus('mandatory')
xioHubEvHabTempsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2366, 1, 2, 17, 1), ).setIndexNames((0, "XIO-HUB-MIB", "xioHubEvHabId"))
if mibBuilder.loadTexts: xioHubEvHabTempsEntry.setStatus('mandatory')
xioHubEvHabId = MibTableColumn((1, 3, 6, 1, 4, 1, 2366, 1, 2, 17, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xioHubEvHabId.setStatus('mandatory')
xioHubEvHabInstalled = MibTableColumn((1, 3, 6, 1, 4, 1, 2366, 1, 2, 17, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xioHubEvHabInstalled.setStatus('mandatory')
xioHubEvHubHabTemp = MibTableColumn((1, 3, 6, 1, 4, 1, 2366, 1, 2, 17, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xioHubEvHubHabTemp.setStatus('mandatory')
xioHubEvServerHabTemp = MibTableColumn((1, 3, 6, 1, 4, 1, 2366, 1, 2, 17, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xioHubEvServerHabTemp.setStatus('mandatory')
xioHubEvProcessorTemp = MibScalar((1, 3, 6, 1, 4, 1, 2366, 1, 2, 18), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xioHubEvProcessorTemp.setStatus('mandatory')
xioHubEvCacheTemp = MibScalar((1, 3, 6, 1, 4, 1, 2366, 1, 2, 19), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xioHubEvCacheTemp.setStatus('mandatory')
xioHubEvIsaTemp = MibScalar((1, 3, 6, 1, 4, 1, 2366, 1, 2, 20), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xioHubEvIsaTemp.setStatus('mandatory')
xioHubEvRearTemp = MibScalar((1, 3, 6, 1, 4, 1, 2366, 1, 2, 21), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xioHubEvRearTemp.setStatus('mandatory')
xioHubEvExtCabinetTemp = MibScalar((1, 3, 6, 1, 4, 1, 2366, 1, 2, 22), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xioHubEvExtCabinetTemp.setStatus('mandatory')
xioHubEvKBsPerSec = MibScalar((1, 3, 6, 1, 4, 1, 2366, 1, 2, 23), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xioHubEvKBsPerSec.setStatus('mandatory')
xioHubEvIOsPerSec = MibScalar((1, 3, 6, 1, 4, 1, 2366, 1, 2, 24), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xioHubEvIOsPerSec.setStatus('mandatory')
xioHubSdEmbedPcState = MibScalar((1, 3, 6, 1, 4, 1, 2366, 1, 3, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 15, 65535))).clone(namedValues=NamedValues(("offline", 0), ("standby", 1), ("post0", 2), ("post1", 3), ("runningdiagnostics", 4), ("operational", 5), ("failed", 6), ("waitingforfibreconnect", 7), ("synchronizing", 8), ("notconnected", 9), ("unknown", 15), ("goneoffline", 65535)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: xioHubSdEmbedPcState.setStatus('mandatory')
xioHubSdControllerState = MibScalar((1, 3, 6, 1, 4, 1, 2366, 1, 3, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 15, 65535))).clone(namedValues=NamedValues(("offline", 0), ("standby", 1), ("post0", 2), ("post1", 3), ("runningdiagnostics", 4), ("operational", 5), ("failed", 6), ("waitingforfibreconnect", 7), ("synchronizing", 8), ("notconnected", 9), ("unknown", 15), ("goneoffline", 65535)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: xioHubSdControllerState.setStatus('mandatory')
xioHubSdCacheState = MibScalar((1, 3, 6, 1, 4, 1, 2366, 1, 3, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xioHubSdCacheState.setStatus('mandatory')
xioHubSdHabStatusTable = MibTable((1, 3, 6, 1, 4, 1, 2366, 1, 3, 4), )
if mibBuilder.loadTexts: xioHubSdHabStatusTable.setStatus('mandatory')
xioHubSdHabStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2366, 1, 3, 4, 1), ).setIndexNames((0, "XIO-HUB-MIB", "xioHubSdHabId"))
if mibBuilder.loadTexts: xioHubSdHabStatusEntry.setStatus('mandatory')
xioHubSdHabId = MibTableColumn((1, 3, 6, 1, 4, 1, 2366, 1, 3, 4, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xioHubSdHabId.setStatus('mandatory')
xioHubSdHabInstalled = MibTableColumn((1, 3, 6, 1, 4, 1, 2366, 1, 3, 4, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xioHubSdHabInstalled.setStatus('mandatory')
xioHubSdHubHabState = MibTableColumn((1, 3, 6, 1, 4, 1, 2366, 1, 3, 4, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 15, 65535))).clone(namedValues=NamedValues(("offline", 0), ("standby", 1), ("post0", 2), ("post1", 3), ("runningdiagnostics", 4), ("operational", 5), ("failed", 6), ("waitingforfibreconnect", 7), ("synchronizing", 8), ("notconnected", 9), ("unknown", 15), ("goneoffline", 65535)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: xioHubSdHubHabState.setStatus('mandatory')
xioHubSdServerHabState = MibTableColumn((1, 3, 6, 1, 4, 1, 2366, 1, 3, 4, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 15, 65535))).clone(namedValues=NamedValues(("offline", 0), ("standby", 1), ("post0", 2), ("post1", 3), ("runningdiagnostics", 4), ("operational", 5), ("failed", 6), ("waitingforfibreconnect", 7), ("synchronizing", 8), ("notconnected", 9), ("unknown", 15), ("goneoffline", 65535)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: xioHubSdServerHabState.setStatus('mandatory')
xioHubSdServerInfoTable = MibTable((1, 3, 6, 1, 4, 1, 2366, 1, 3, 5), )
if mibBuilder.loadTexts: xioHubSdServerInfoTable.setStatus('mandatory')
xioHubSdServerInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2366, 1, 3, 5, 1), ).setIndexNames((0, "XIO-HUB-MIB", "xioHubSdServerId"))
if mibBuilder.loadTexts: xioHubSdServerInfoEntry.setStatus('mandatory')
xioHubSdServerId = MibTableColumn((1, 3, 6, 1, 4, 1, 2366, 1, 3, 5, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xioHubSdServerId.setStatus('mandatory')
xioHubSdServerStates = MibTableColumn((1, 3, 6, 1, 4, 1, 2366, 1, 3, 5, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 15, 65535))).clone(namedValues=NamedValues(("offline", 0), ("standby", 1), ("post0", 2), ("post1", 3), ("runningdiagnostics", 4), ("operational", 5), ("failed", 6), ("waitingforfibreconnect", 7), ("synchronizing", 8), ("notconnected", 9), ("unknown", 15), ("goneoffline", 65535)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: xioHubSdServerStates.setStatus('mandatory')
xioHubPdPhysDevTable = MibTable((1, 3, 6, 1, 4, 1, 2366, 1, 4, 1), )
if mibBuilder.loadTexts: xioHubPdPhysDevTable.setStatus('mandatory')
xioHubPdPhysDevEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2366, 1, 4, 1, 1), ).setIndexNames((0, "XIO-HUB-MIB", "xioHubPdIndex"))
if mibBuilder.loadTexts: xioHubPdPhysDevEntry.setStatus('mandatory')
xioHubPdIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2366, 1, 4, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xioHubPdIndex.setStatus('mandatory')
xioHubPdChannel = MibTableColumn((1, 3, 6, 1, 4, 1, 2366, 1, 4, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xioHubPdChannel.setStatus('mandatory')
xioHubPdScsiId = MibTableColumn((1, 3, 6, 1, 4, 1, 2366, 1, 4, 1, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xioHubPdScsiId.setStatus('mandatory')
xioHubPdClass = MibTableColumn((1, 3, 6, 1, 4, 1, 2366, 1, 4, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("unlabled", 1), ("data", 2), ("hotspare", 3), ("notsafe", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: xioHubPdClass.setStatus('mandatory')
xioHubPdDevName = MibTableColumn((1, 3, 6, 1, 4, 1, 2366, 1, 4, 1, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 5))).setMaxAccess("readonly")
if mibBuilder.loadTexts: xioHubPdDevName.setStatus('mandatory')
xioHubPdSerialNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2366, 1, 4, 1, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xioHubPdSerialNum.setStatus('mandatory')
xioHubPdPostStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2366, 1, 4, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12))).clone(namedValues=NamedValues(("nonexistent", 1), ("deviceok", 2), ("failinquirecmd", 3), ("failtestunitready", 4), ("failstartunit", 5), ("failinquireserialno", 6), ("failsenddiag", 7), ("failwritebuf", 8), ("failreadbuf", 9), ("failwrrdbufpat", 10), ("failverify", 11), ("failrdcapacity", 12)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: xioHubPdPostStatus.setStatus('mandatory')
xioHubPdDevStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2366, 1, 4, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("nonExistent", 1), ("deviceOK", 2), ("inoperable", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: xioHubPdDevStatus.setStatus('mandatory')
xioHubPdDevCapacity = MibTableColumn((1, 3, 6, 1, 4, 1, 2366, 1, 4, 1, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xioHubPdDevCapacity.setStatus('mandatory')
xioHubPdProductId = MibTableColumn((1, 3, 6, 1, 4, 1, 2366, 1, 4, 1, 1, 10), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 17))).setMaxAccess("readonly")
if mibBuilder.loadTexts: xioHubPdProductId.setStatus('mandatory')
xioHubPdVendorId = MibTableColumn((1, 3, 6, 1, 4, 1, 2366, 1, 4, 1, 1, 11), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 9))).setMaxAccess("readonly")
if mibBuilder.loadTexts: xioHubPdVendorId.setStatus('mandatory')
xioHubPdProductRev = MibTableColumn((1, 3, 6, 1, 4, 1, 2366, 1, 4, 1, 1, 12), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 5))).setMaxAccess("readonly")
if mibBuilder.loadTexts: xioHubPdProductRev.setStatus('mandatory')
xioHubPdSerialNo = MibTableColumn((1, 3, 6, 1, 4, 1, 2366, 1, 4, 1, 1, 13), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 13))).setMaxAccess("readonly")
if mibBuilder.loadTexts: xioHubPdSerialNo.setStatus('mandatory')
xioHubPdTotAvail = MibTableColumn((1, 3, 6, 1, 4, 1, 2366, 1, 4, 1, 1, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xioHubPdTotAvail.setStatus('mandatory')
xioHubPdLargestAvail = MibTableColumn((1, 3, 6, 1, 4, 1, 2366, 1, 4, 1, 1, 15), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xioHubPdLargestAvail.setStatus('mandatory')
xioHubPdTotRdReq = MibTableColumn((1, 3, 6, 1, 4, 1, 2366, 1, 4, 1, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xioHubPdTotRdReq.setStatus('mandatory')
xioHubPdTotWrReq = MibTableColumn((1, 3, 6, 1, 4, 1, 2366, 1, 4, 1, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xioHubPdTotWrReq.setStatus('mandatory')
xioHubPdTotCorrectErr = MibTableColumn((1, 3, 6, 1, 4, 1, 2366, 1, 4, 1, 1, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xioHubPdTotCorrectErr.setStatus('mandatory')
xioHubPdAvgSec = MibTableColumn((1, 3, 6, 1, 4, 1, 2366, 1, 4, 1, 1, 19), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xioHubPdAvgSec.setStatus('mandatory')
xioHubPdNumReq = MibTableColumn((1, 3, 6, 1, 4, 1, 2366, 1, 4, 1, 1, 20), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xioHubPdNumReq.setStatus('mandatory')
xioHubPdQueDepth = MibTableColumn((1, 3, 6, 1, 4, 1, 2366, 1, 4, 1, 1, 21), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xioHubPdQueDepth.setStatus('mandatory')
xioHubPdKBytesPS = MibTableColumn((1, 3, 6, 1, 4, 1, 2366, 1, 4, 1, 1, 22), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xioHubPdKBytesPS.setStatus('mandatory')
xioHubRdRaidDevTable = MibTable((1, 3, 6, 1, 4, 1, 2366, 1, 5, 1), )
if mibBuilder.loadTexts: xioHubRdRaidDevTable.setStatus('mandatory')
xioHubRdRaidDevEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2366, 1, 5, 1, 1), ).setIndexNames((0, "XIO-HUB-MIB", "xioHubRdRaidId"))
if mibBuilder.loadTexts: xioHubRdRaidDevEntry.setStatus('mandatory')
xioHubRdRaidId = MibTableColumn((1, 3, 6, 1, 4, 1, 2366, 1, 5, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xioHubRdRaidId.setStatus('mandatory')
xioHubRdClass = MibTableColumn((1, 3, 6, 1, 4, 1, 2366, 1, 5, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("classNonRaid", 1), ("classRaid0", 2), ("classRaid1", 3), ("classRaid5", 4), ("classRaid10", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: xioHubRdClass.setStatus('mandatory')
xioHubRdDevStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2366, 1, 5, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("nonExistent", 1), ("deviceOK", 2), ("uninitialized", 3), ("inoperable", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: xioHubRdDevStatus.setStatus('mandatory')
xioHubRdDepthMirror = MibTableColumn((1, 3, 6, 1, 4, 1, 2366, 1, 5, 1, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xioHubRdDepthMirror.setStatus('mandatory')
xioHubRdDevStripe = MibTableColumn((1, 3, 6, 1, 4, 1, 2366, 1, 5, 1, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xioHubRdDevStripe.setStatus('mandatory')
xioHubRdDevCapacity = MibTableColumn((1, 3, 6, 1, 4, 1, 2366, 1, 5, 1, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xioHubRdDevCapacity.setStatus('mandatory')
xioHubRdNumSectors = MibTableColumn((1, 3, 6, 1, 4, 1, 2366, 1, 5, 1, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xioHubRdNumSectors.setStatus('mandatory')
xioHubRdTotRdReq = MibTableColumn((1, 3, 6, 1, 4, 1, 2366, 1, 5, 1, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xioHubRdTotRdReq.setStatus('mandatory')
xioHubRdTotWrReq = MibTableColumn((1, 3, 6, 1, 4, 1, 2366, 1, 5, 1, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xioHubRdTotWrReq.setStatus('mandatory')
xioHubRdTotCorrectErr = MibTableColumn((1, 3, 6, 1, 4, 1, 2366, 1, 5, 1, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xioHubRdTotCorrectErr.setStatus('mandatory')
xioHubRdAvgSec = MibTableColumn((1, 3, 6, 1, 4, 1, 2366, 1, 5, 1, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xioHubRdAvgSec.setStatus('mandatory')
xioHubRdNumReq = MibTableColumn((1, 3, 6, 1, 4, 1, 2366, 1, 5, 1, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xioHubRdNumReq.setStatus('mandatory')
xioHubRdQueDepth = MibTableColumn((1, 3, 6, 1, 4, 1, 2366, 1, 5, 1, 1, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xioHubRdQueDepth.setStatus('mandatory')
xioHubRdKBytesPS = MibTableColumn((1, 3, 6, 1, 4, 1, 2366, 1, 5, 1, 1, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xioHubRdKBytesPS.setStatus('mandatory')
xioHubRdPhysDevTable = MibTable((1, 3, 6, 1, 4, 1, 2366, 1, 5, 2), )
if mibBuilder.loadTexts: xioHubRdPhysDevTable.setStatus('mandatory')
xioHubRdPhysDevEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2366, 1, 5, 2, 1), ).setIndexNames((0, "XIO-HUB-MIB", "xioHubRdRaidDevId"))
if mibBuilder.loadTexts: xioHubRdPhysDevEntry.setStatus('mandatory')
xioHubRdRaidDevId = MibTableColumn((1, 3, 6, 1, 4, 1, 2366, 1, 5, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xioHubRdRaidDevId.setStatus('mandatory')
xioHubRdChannel = MibTableColumn((1, 3, 6, 1, 4, 1, 2366, 1, 5, 2, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xioHubRdChannel.setStatus('mandatory')
xioHubRdScsiId = MibTableColumn((1, 3, 6, 1, 4, 1, 2366, 1, 5, 2, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xioHubRdScsiId.setStatus('mandatory')
xioHubRdDevInRaid = MibTableColumn((1, 3, 6, 1, 4, 1, 2366, 1, 5, 2, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xioHubRdDevInRaid.setStatus('mandatory')
xioHubRdDevRebuild = MibTableColumn((1, 3, 6, 1, 4, 1, 2366, 1, 5, 2, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xioHubRdDevRebuild.setStatus('mandatory')
xioHubRdDevFailed = MibTableColumn((1, 3, 6, 1, 4, 1, 2366, 1, 5, 2, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xioHubRdDevFailed.setStatus('mandatory')
xioHubVdVirtualDevTable = MibTable((1, 3, 6, 1, 4, 1, 2366, 1, 6, 1), )
if mibBuilder.loadTexts: xioHubVdVirtualDevTable.setStatus('mandatory')
xioHubVdVirtualDevEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2366, 1, 6, 1, 1), ).setIndexNames((0, "XIO-HUB-MIB", "xioHubVdVirtualId"))
if mibBuilder.loadTexts: xioHubVdVirtualDevEntry.setStatus('mandatory')
xioHubVdVirtualId = MibTableColumn((1, 3, 6, 1, 4, 1, 2366, 1, 6, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xioHubVdVirtualId.setStatus('mandatory')
xioHubVdHabGroup = MibTableColumn((1, 3, 6, 1, 4, 1, 2366, 1, 6, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xioHubVdHabGroup.setStatus('mandatory')
xioHubVdDevStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2366, 1, 6, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("nonExistent", 1), ("deviceOK", 2), ("uninitialized", 3), ("inoperable", 4), ("copyingTo", 5), ("mirroring", 6), ("pausedInCopy", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: xioHubVdDevStatus.setStatus('mandatory')
xioHubVdDevCapacity = MibTableColumn((1, 3, 6, 1, 4, 1, 2366, 1, 6, 1, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xioHubVdDevCapacity.setStatus('mandatory')
xioHubVdTotRdReq = MibTableColumn((1, 3, 6, 1, 4, 1, 2366, 1, 6, 1, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xioHubVdTotRdReq.setStatus('mandatory')
xioHubVdTotWrReq = MibTableColumn((1, 3, 6, 1, 4, 1, 2366, 1, 6, 1, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xioHubVdTotWrReq.setStatus('mandatory')
xioHubVdAvgSec = MibTableColumn((1, 3, 6, 1, 4, 1, 2366, 1, 6, 1, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xioHubVdAvgSec.setStatus('mandatory')
xioHubVdNumReq = MibTableColumn((1, 3, 6, 1, 4, 1, 2366, 1, 6, 1, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xioHubVdNumReq.setStatus('mandatory')
xioHubVdQueDepth = MibTableColumn((1, 3, 6, 1, 4, 1, 2366, 1, 6, 1, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xioHubVdQueDepth.setStatus('mandatory')
xioHubVdKBytesPS = MibTableColumn((1, 3, 6, 1, 4, 1, 2366, 1, 6, 1, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xioHubVdKBytesPS.setStatus('mandatory')
xioHubVdAttribute = MibTableColumn((1, 3, 6, 1, 4, 1, 2366, 1, 6, 1, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xioHubVdAttribute.setStatus('mandatory')
xioHubVdRaidDevTable = MibTable((1, 3, 6, 1, 4, 1, 2366, 1, 6, 2), )
if mibBuilder.loadTexts: xioHubVdRaidDevTable.setStatus('mandatory')
xioHubVdRaidDevEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2366, 1, 6, 2, 1), ).setIndexNames((0, "XIO-HUB-MIB", "xioHubVdRaidVirtId"))
if mibBuilder.loadTexts: xioHubVdRaidDevEntry.setStatus('mandatory')
xioHubVdRaidVirtId = MibTableColumn((1, 3, 6, 1, 4, 1, 2366, 1, 6, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xioHubVdRaidVirtId.setStatus('mandatory')
xioHubVdRaidId = MibTableColumn((1, 3, 6, 1, 4, 1, 2366, 1, 6, 2, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xioHubVdRaidId.setStatus('mandatory')
xioHubVdRaidExists = MibTableColumn((1, 3, 6, 1, 4, 1, 2366, 1, 6, 2, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xioHubVdRaidExists.setStatus('mandatory')
xioHubVdCacheInfoTable = MibTable((1, 3, 6, 1, 4, 1, 2366, 1, 6, 3), )
if mibBuilder.loadTexts: xioHubVdCacheInfoTable.setStatus('mandatory')
xioHubVdCacheInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2366, 1, 6, 3, 1), ).setIndexNames((0, "XIO-HUB-MIB", "xioHubVdCacheVirtId"))
if mibBuilder.loadTexts: xioHubVdCacheInfoEntry.setStatus('mandatory')
xioHubVdCacheVirtId = MibTableColumn((1, 3, 6, 1, 4, 1, 2366, 1, 6, 3, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xioHubVdCacheVirtId.setStatus('mandatory')
xioHubVdCacheEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 2366, 1, 6, 3, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xioHubVdCacheEnabled.setStatus('mandatory')
xioHubVdReadHits = MibTableColumn((1, 3, 6, 1, 4, 1, 2366, 1, 6, 3, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xioHubVdReadHits.setStatus('mandatory')
xioHubVdReadMiss = MibTableColumn((1, 3, 6, 1, 4, 1, 2366, 1, 6, 3, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xioHubVdReadMiss.setStatus('mandatory')
xioHubVdWriteHits = MibTableColumn((1, 3, 6, 1, 4, 1, 2366, 1, 6, 3, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xioHubVdWriteHits.setStatus('mandatory')
xioHubVdWriteMiss = MibTableColumn((1, 3, 6, 1, 4, 1, 2366, 1, 6, 3, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xioHubVdWriteMiss.setStatus('mandatory')
xioHubCiStatus = MibScalar((1, 3, 6, 1, 4, 1, 2366, 1, 7, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("notInstalled", 1), ("deviceOK", 2), ("noPower", 3), ("hwFailure", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: xioHubCiStatus.setStatus('mandatory')
xioHubCiCacheSize = MibScalar((1, 3, 6, 1, 4, 1, 2366, 1, 7, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xioHubCiCacheSize.setStatus('mandatory')
xioHubCiMaxCacheable = MibScalar((1, 3, 6, 1, 4, 1, 2366, 1, 7, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xioHubCiMaxCacheable.setStatus('mandatory')
xioHubCiNumWrBacks = MibScalar((1, 3, 6, 1, 4, 1, 2366, 1, 7, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xioHubCiNumWrBacks.setStatus('mandatory')
xioHubCiFreeBuffers = MibScalar((1, 3, 6, 1, 4, 1, 2366, 1, 7, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xioHubCiFreeBuffers.setStatus('mandatory')
xioHubCiCleanBuffers = MibScalar((1, 3, 6, 1, 4, 1, 2366, 1, 7, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xioHubCiCleanBuffers.setStatus('mandatory')
xioHubCiDirtyBuffers = MibScalar((1, 3, 6, 1, 4, 1, 2366, 1, 7, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xioHubCiDirtyBuffers.setStatus('mandatory')
xioHubHiHabInfoTable = MibTable((1, 3, 6, 1, 4, 1, 2366, 1, 8, 1), )
if mibBuilder.loadTexts: xioHubHiHabInfoTable.setStatus('mandatory')
xioHubHiHabInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2366, 1, 8, 1, 1), ).setIndexNames((0, "XIO-HUB-MIB", "xioHubHiHabId"))
if mibBuilder.loadTexts: xioHubHiHabInfoEntry.setStatus('mandatory')
xioHubHiStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2366, 1, 8, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("deviceNotInstalled", 1), ("deviceOK", 2), ("failed", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: xioHubHiStatus.setStatus('mandatory')
xioHubHiHabId = MibTableColumn((1, 3, 6, 1, 4, 1, 2366, 1, 8, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xioHubHiHabId.setStatus('mandatory')
xioHubHiHabGroup = MibTableColumn((1, 3, 6, 1, 4, 1, 2366, 1, 8, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(255))).clone(namedValues=NamedValues(("unassigned", 255)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: xioHubHiHabGroup.setStatus('mandatory')
xioHubHiServerName = MibTableColumn((1, 3, 6, 1, 4, 1, 2366, 1, 8, 1, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 17))).setMaxAccess("readonly")
if mibBuilder.loadTexts: xioHubHiServerName.setStatus('mandatory')
xioHubBiBusInfoTable = MibTable((1, 3, 6, 1, 4, 1, 2366, 1, 9, 1), )
if mibBuilder.loadTexts: xioHubBiBusInfoTable.setStatus('mandatory')
xioHubBiBusInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2366, 1, 9, 1, 1), ).setIndexNames((0, "XIO-HUB-MIB", "xioHubBiChannel"))
if mibBuilder.loadTexts: xioHubBiBusInfoEntry.setStatus('mandatory')
xioHubBiChannel = MibTableColumn((1, 3, 6, 1, 4, 1, 2366, 1, 9, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xioHubBiChannel.setStatus('mandatory')
xioHubBiTotRdReq = MibTableColumn((1, 3, 6, 1, 4, 1, 2366, 1, 9, 1, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xioHubBiTotRdReq.setStatus('mandatory')
xioHubBiTotWrReq = MibTableColumn((1, 3, 6, 1, 4, 1, 2366, 1, 9, 1, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xioHubBiTotWrReq.setStatus('mandatory')
xioHubBiTotCorrectErr = MibTableColumn((1, 3, 6, 1, 4, 1, 2366, 1, 9, 1, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xioHubBiTotCorrectErr.setStatus('mandatory')
xioHubBiAvgSec = MibTableColumn((1, 3, 6, 1, 4, 1, 2366, 1, 9, 1, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xioHubBiAvgSec.setStatus('mandatory')
xioHubBiNumReq = MibTableColumn((1, 3, 6, 1, 4, 1, 2366, 1, 9, 1, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xioHubBiNumReq.setStatus('mandatory')
xioHubBiQueDepth = MibTableColumn((1, 3, 6, 1, 4, 1, 2366, 1, 9, 1, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xioHubBiQueDepth.setStatus('mandatory')
xioHubBiKBytesPS = MibTableColumn((1, 3, 6, 1, 4, 1, 2366, 1, 9, 1, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xioHubBiKBytesPS.setStatus('mandatory')
xioHubTvEventNum = MibScalar((1, 3, 6, 1, 4, 1, 2366, 1, 10, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 11))).setMaxAccess("readonly")
if mibBuilder.loadTexts: xioHubTvEventNum.setStatus('mandatory')
xioHubTvTimestamp = MibScalar((1, 3, 6, 1, 4, 1, 2366, 1, 10, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 21))).setMaxAccess("readonly")
if mibBuilder.loadTexts: xioHubTvTimestamp.setStatus('mandatory')
xioHubTvType = MibScalar((1, 3, 6, 1, 4, 1, 2366, 1, 10, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xioHubTvType.setStatus('mandatory')
xioHubTvExtType = MibScalar((1, 3, 6, 1, 4, 1, 2366, 1, 10, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xioHubTvExtType.setStatus('mandatory')
xioHubTvFlags = MibScalar((1, 3, 6, 1, 4, 1, 2366, 1, 10, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xioHubTvFlags.setStatus('mandatory')
xioHubTvLedStatus = MibScalar((1, 3, 6, 1, 4, 1, 2366, 1, 10, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xioHubTvLedStatus.setStatus('mandatory')
xioHubTvMessage = MibScalar((1, 3, 6, 1, 4, 1, 2366, 1, 10, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readonly")
if mibBuilder.loadTexts: xioHubTvMessage.setStatus('mandatory')
xioHubTvAddress = MibScalar((1, 3, 6, 1, 4, 1, 2366, 1, 10, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 25))).setMaxAccess("readonly")
if mibBuilder.loadTexts: xioHubTvAddress.setStatus('mandatory')
xioHubTvHubName = MibScalar((1, 3, 6, 1, 4, 1, 2366, 1, 10, 9), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readonly")
if mibBuilder.loadTexts: xioHubTvHubName.setStatus('mandatory')
xioHubUnknownEvent = NotificationType((1, 3, 6, 1, 4, 1, 2366, 1, 20) + (0,2)).setObjects(("XIO-HUB-MIB", "xioHubTvEventNum"), ("XIO-HUB-MIB", "xioHubTvTimestamp"), ("XIO-HUB-MIB", "xioHubTvType"), ("XIO-HUB-MIB", "xioHubTvExtType"), ("XIO-HUB-MIB", "xioHubTvFlags"), ("XIO-HUB-MIB", "xioHubTvLedStatus"), ("XIO-HUB-MIB", "xioHubTvMessage"), ("XIO-HUB-MIB", "xioHubTvAddress"), ("XIO-HUB-MIB", "xioHubTvHubName"))
xioHubInfoEvent = NotificationType((1, 3, 6, 1, 4, 1, 2366, 1, 20) + (0,5)).setObjects(("XIO-HUB-MIB", "xioHubTvEventNum"), ("XIO-HUB-MIB", "xioHubTvTimestamp"), ("XIO-HUB-MIB", "xioHubTvType"), ("XIO-HUB-MIB", "xioHubTvExtType"), ("XIO-HUB-MIB", "xioHubTvFlags"), ("XIO-HUB-MIB", "xioHubTvLedStatus"), ("XIO-HUB-MIB", "xioHubTvMessage"), ("XIO-HUB-MIB", "xioHubTvAddress"), ("XIO-HUB-MIB", "xioHubTvHubName"))
xioHubWarningEvent = NotificationType((1, 3, 6, 1, 4, 1, 2366, 1, 20) + (0,6)).setObjects(("XIO-HUB-MIB", "xioHubTvEventNum"), ("XIO-HUB-MIB", "xioHubTvTimestamp"), ("XIO-HUB-MIB", "xioHubTvType"), ("XIO-HUB-MIB", "xioHubTvExtType"), ("XIO-HUB-MIB", "xioHubTvFlags"), ("XIO-HUB-MIB", "xioHubTvLedStatus"), ("XIO-HUB-MIB", "xioHubTvMessage"), ("XIO-HUB-MIB", "xioHubTvAddress"), ("XIO-HUB-MIB", "xioHubTvHubName"))
xioHubSeriousEvent = NotificationType((1, 3, 6, 1, 4, 1, 2366, 1, 20) + (0,7)).setObjects(("XIO-HUB-MIB", "xioHubTvEventNum"), ("XIO-HUB-MIB", "xioHubTvTimestamp"), ("XIO-HUB-MIB", "xioHubTvType"), ("XIO-HUB-MIB", "xioHubTvExtType"), ("XIO-HUB-MIB", "xioHubTvFlags"), ("XIO-HUB-MIB", "xioHubTvLedStatus"), ("XIO-HUB-MIB", "xioHubTvMessage"), ("XIO-HUB-MIB", "xioHubTvAddress"), ("XIO-HUB-MIB", "xioHubTvHubName"))
xioHubFatalEvent = NotificationType((1, 3, 6, 1, 4, 1, 2366, 1, 20) + (0,8)).setObjects(("XIO-HUB-MIB", "xioHubTvEventNum"), ("XIO-HUB-MIB", "xioHubTvTimestamp"), ("XIO-HUB-MIB", "xioHubTvType"), ("XIO-HUB-MIB", "xioHubTvExtType"), ("XIO-HUB-MIB", "xioHubTvFlags"), ("XIO-HUB-MIB", "xioHubTvLedStatus"), ("XIO-HUB-MIB", "xioHubTvMessage"), ("XIO-HUB-MIB", "xioHubTvAddress"), ("XIO-HUB-MIB", "xioHubTvHubName"))
xioHubLiProcUsed = MibScalar((1, 3, 6, 1, 4, 1, 2366, 1, 30, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xioHubLiProcUsed.setStatus('mandatory')
xioHubLiFHabTable = MibTable((1, 3, 6, 1, 4, 1, 2366, 1, 30, 2), )
if mibBuilder.loadTexts: xioHubLiFHabTable.setStatus('mandatory')
xioHubLiFHabEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2366, 1, 30, 2, 1), ).setIndexNames((0, "XIO-HUB-MIB", "xioHubLiIndex"))
if mibBuilder.loadTexts: xioHubLiFHabEntry.setStatus('mandatory')
xioHubLiFHabUsed = MibTableColumn((1, 3, 6, 1, 4, 1, 2366, 1, 30, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xioHubLiFHabUsed.setStatus('mandatory')
xioHubLiFHabMbs = MibTableColumn((1, 3, 6, 1, 4, 1, 2366, 1, 30, 2, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xioHubLiFHabMbs.setStatus('mandatory')
xioHubLiFHabIOs = MibTableColumn((1, 3, 6, 1, 4, 1, 2366, 1, 30, 2, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xioHubLiFHabIOs.setStatus('mandatory')
xioHubLiIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2366, 1, 30, 2, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xioHubLiIndex.setStatus('mandatory')
xioHubStDevListNum = MibScalar((1, 3, 6, 1, 4, 1, 2366, 1, 40, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xioHubStDevListNum.setStatus('mandatory')
xioHubStDevListSNTable = MibTable((1, 3, 6, 1, 4, 1, 2366, 1, 40, 2), )
if mibBuilder.loadTexts: xioHubStDevListSNTable.setStatus('mandatory')
xioHubStDevListSNEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2366, 1, 40, 2, 1), ).setIndexNames((0, "XIO-HUB-MIB", "xioHubStDevSNIndex"))
if mibBuilder.loadTexts: xioHubStDevListSNEntry.setStatus('mandatory')
xioHubStDevListSNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2366, 1, 40, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xioHubStDevListSNum.setStatus('mandatory')
xioHubStDevSNIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2366, 1, 40, 2, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xioHubStDevSNIndex.setStatus('mandatory')
xioHubStDevListNTable = MibTable((1, 3, 6, 1, 4, 1, 2366, 1, 40, 3), )
if mibBuilder.loadTexts: xioHubStDevListNTable.setStatus('mandatory')
xioHubStDevListNEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2366, 1, 40, 3, 1), ).setIndexNames((0, "XIO-HUB-MIB", "xioHubStDevNIndex"))
if mibBuilder.loadTexts: xioHubStDevListNEntry.setStatus('mandatory')
xioHubStDevListName = MibTableColumn((1, 3, 6, 1, 4, 1, 2366, 1, 40, 3, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: xioHubStDevListName.setStatus('mandatory')
xioHubStDevNIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2366, 1, 40, 3, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xioHubStDevNIndex.setStatus('mandatory')
xioHubStDevListATable = MibTable((1, 3, 6, 1, 4, 1, 2366, 1, 40, 4), )
if mibBuilder.loadTexts: xioHubStDevListATable.setStatus('mandatory')
xioHubStDevListAEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2366, 1, 40, 4, 1), ).setIndexNames((0, "XIO-HUB-MIB", "xioHubStDevAIndex"))
if mibBuilder.loadTexts: xioHubStDevListAEntry.setStatus('mandatory')
xioHubStDevListAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 2366, 1, 40, 4, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: xioHubStDevListAddr.setStatus('mandatory')
xioHubStDevAIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2366, 1, 40, 4, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xioHubStDevAIndex.setStatus('mandatory')
xioHubVpInfoTable = MibTable((1, 3, 6, 1, 4, 1, 2366, 1, 50, 1), )
if mibBuilder.loadTexts: xioHubVpInfoTable.setStatus('mandatory')
xioHubVpInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2366, 1, 50, 1, 1), ).setIndexNames((0, "XIO-HUB-MIB", "xioHubVpId"))
if mibBuilder.loadTexts: xioHubVpInfoEntry.setStatus('mandatory')
xioHubVpKBS = MibTableColumn((1, 3, 6, 1, 4, 1, 2366, 1, 50, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xioHubVpKBS.setStatus('mandatory')
xioHubVpIOs = MibTableColumn((1, 3, 6, 1, 4, 1, 2366, 1, 50, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xioHubVpIOs.setStatus('mandatory')
xioHubVpId = MibTableColumn((1, 3, 6, 1, 4, 1, 2366, 1, 50, 1, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xioHubVpId.setStatus('mandatory')
xioHubPpInfoTable = MibTable((1, 3, 6, 1, 4, 1, 2366, 1, 60, 1), )
if mibBuilder.loadTexts: xioHubPpInfoTable.setStatus('mandatory')
xioHubPpInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2366, 1, 60, 1, 1), ).setIndexNames((0, "XIO-HUB-MIB", "xioHubPpId"))
if mibBuilder.loadTexts: xioHubPpInfoEntry.setStatus('mandatory')
xioHubPpKBS = MibTableColumn((1, 3, 6, 1, 4, 1, 2366, 1, 60, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xioHubPpKBS.setStatus('mandatory')
xioHubPpIOs = MibTableColumn((1, 3, 6, 1, 4, 1, 2366, 1, 60, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xioHubPpIOs.setStatus('mandatory')
xioHubPpId = MibTableColumn((1, 3, 6, 1, 4, 1, 2366, 1, 60, 1, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xioHubPpId.setStatus('mandatory')
xioHubSvInfoTable = MibTable((1, 3, 6, 1, 4, 1, 2366, 1, 70, 1), )
if mibBuilder.loadTexts: xioHubSvInfoTable.setStatus('mandatory')
xioHubSvInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2366, 1, 70, 1, 1), ).setIndexNames((0, "XIO-HUB-MIB", "xioHubSvId"))
if mibBuilder.loadTexts: xioHubSvInfoEntry.setStatus('mandatory')
xioHubSvClusterId = MibTableColumn((1, 3, 6, 1, 4, 1, 2366, 1, 70, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xioHubSvClusterId.setStatus('mandatory')
xioHubSvFCalId = MibTableColumn((1, 3, 6, 1, 4, 1, 2366, 1, 70, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xioHubSvFCalId.setStatus('mandatory')
xioHubSvVDiskId = MibTableColumn((1, 3, 6, 1, 4, 1, 2366, 1, 70, 1, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xioHubSvVDiskId.setStatus('mandatory')
xioHubSvVDiskLUN = MibTableColumn((1, 3, 6, 1, 4, 1, 2366, 1, 70, 1, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xioHubSvVDiskLUN.setStatus('mandatory')
xioHubSvId = MibTableColumn((1, 3, 6, 1, 4, 1, 2366, 1, 70, 1, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xioHubSvId.setStatus('mandatory')
xioHubSvName = MibTableColumn((1, 3, 6, 1, 4, 1, 2366, 1, 70, 1, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: xioHubSvName.setStatus('mandatory')
mibBuilder.exportSymbols("XIO-HUB-MIB", xioHubPdPostStatus=xioHubPdPostStatus, xioHubStDevListSNum=xioHubStDevListSNum, xioHubVdCacheVirtId=xioHubVdCacheVirtId, xioHubBiBusInfoTable=xioHubBiBusInfoTable, xioHubVdReadMiss=xioHubVdReadMiss, xioHubRaidDevice=xioHubRaidDevice, xioHubEvNumRearFans=xioHubEvNumRearFans, xioHubEvRearFansTable=xioHubEvRearFansTable, xioHubEvFrontFansId=xioHubEvFrontFansId, xioHubEvExtDcMain=xioHubEvExtDcMain, xioHubVdNumReq=xioHubVdNumReq, xioHubBiQueDepth=xioHubBiQueDepth, xioHubVdRaidId=xioHubVdRaidId, xioHubVdQueDepth=xioHubVdQueDepth, xioHubBiAvgSec=xioHubBiAvgSec, xioHubEnvironment=xioHubEnvironment, xioHubVdRaidExists=xioHubVdRaidExists, xioHubCiNumWrBacks=xioHubCiNumWrBacks, xioHubRdRaidId=xioHubRdRaidId, xioHubEvServerHabTemp=xioHubEvServerHabTemp, xioHubStDevListATable=xioHubStDevListATable, xioHubRdDevInRaid=xioHubRdDevInRaid, xioHubSdHabStatusEntry=xioHubSdHabStatusEntry, xioHubPhysicalDevice=xioHubPhysicalDevice, xioHubSvVDiskId=xioHubSvVDiskId, xioHubRdTotRdReq=xioHubRdTotRdReq, xioHubRdDepthMirror=xioHubRdDepthMirror, xioHubEvKBsPerSec=xioHubEvKBsPerSec, xioHubPdDevStatus=xioHubPdDevStatus, xioHubPdProductRev=xioHubPdProductRev, xioHubBusInfo=xioHubBusInfo, xioHubLiIndex=xioHubLiIndex, xioHubStDevListAddr=xioHubStDevListAddr, xioHubPdTotCorrectErr=xioHubPdTotCorrectErr, xioHubCiFreeBuffers=xioHubCiFreeBuffers, xioHubVdRaidVirtId=xioHubVdRaidVirtId, xioHubTvType=xioHubTvType, xioHubEvMainPower=xioHubEvMainPower, xioHubPpInfoEntry=xioHubPpInfoEntry, xioHubTvLedStatus=xioHubTvLedStatus, xioHubStDevAIndex=xioHubStDevAIndex, xioHubSdEmbedPcState=xioHubSdEmbedPcState, xioHubPdLargestAvail=xioHubPdLargestAvail, xioHubCacheInfo=xioHubCacheInfo, xioHubSdServerId=xioHubSdServerId, xioHubVdDevCapacity=xioHubVdDevCapacity, xioHubEvExtNumRearFans=xioHubEvExtNumRearFans, xioHubStDevListNTable=xioHubStDevListNTable, xioHubEvNumFrontFans=xioHubEvNumFrontFans, xioHubVdTotWrReq=xioHubVdTotWrReq, xioHubBiTotRdReq=xioHubBiTotRdReq, xioHubVirtualDevice=xioHubVirtualDevice, xioHubSeriousEvent=xioHubSeriousEvent, xioHubEvMainDcPowerEntry=xioHubEvMainDcPowerEntry, xioHubEvRearTemp=xioHubEvRearTemp, xioHubSvClusterId=xioHubSvClusterId, xioHubSvId=xioHubSvId, xioHubSvName=xioHubSvName, xioHubRdScsiId=xioHubRdScsiId, xioHubPpInfo=xioHubPpInfo, xioHubSdServerStates=xioHubSdServerStates, xioHubPdDevName=xioHubPdDevName, xioHubEvDcGood=xioHubEvDcGood, xioHubEvExtRearFansGood=xioHubEvExtRearFansGood, xioHubPdSerialNum=xioHubPdSerialNum, xioHubVdReadHits=xioHubVdReadHits, xioHubEvExtRearFansTable=xioHubEvExtRearFansTable, xioHubCiMaxCacheable=xioHubCiMaxCacheable, xioHubEvUpsBattLow=xioHubEvUpsBattLow, xioHubEvIsaTemp=xioHubEvIsaTemp, xioHubEvExtUpsBatt=xioHubEvExtUpsBatt, xioHubInfoEvent=xioHubInfoEvent, xioHubStDevSNIndex=xioHubStDevSNIndex, xioHubRdChannel=xioHubRdChannel, xioHubEvFrontFansTable=xioHubEvFrontFansTable, xioHubVdCacheInfoTable=xioHubVdCacheInfoTable, xioHubUnknownEvent=xioHubUnknownEvent, xioHubPpKBS=xioHubPpKBS, xioHubRdRaidDevEntry=xioHubRdRaidDevEntry, xioHubLiFHabTable=xioHubLiFHabTable, xioHubIdentification=xioHubIdentification, xioHubBiTotCorrectErr=xioHubBiTotCorrectErr, xioHubVdCacheEnabled=xioHubVdCacheEnabled, xioHubSvInfoTable=xioHubSvInfoTable, xioHubRdDevFailed=xioHubRdDevFailed, xioHubRdPhysDevTable=xioHubRdPhysDevTable, xioHubWarningEvent=xioHubWarningEvent, xioHubTvExtType=xioHubTvExtType, xioHubStDevListSNTable=xioHubStDevListSNTable, xioHubVpId=xioHubVpId, xioHubRdTotCorrectErr=xioHubRdTotCorrectErr, xioHubEvUpsAc=xioHubEvUpsAc, xioHubFatalEvent=xioHubFatalEvent, xioHubVpIOs=xioHubVpIOs, xioHubSdServerHabState=xioHubSdServerHabState, xioHubHuCompat=xioHubHuCompat, xioHubEvHabId=xioHubEvHabId, xioHubEvNumSupplies=xioHubEvNumSupplies, xioHubLiProcUsed=xioHubLiProcUsed, xioHubEvCacheTemp=xioHubEvCacheTemp, xioHubHuSerialNum=xioHubHuSerialNum, xioHubCiCacheSize=xioHubCiCacheSize, xioHubSdCacheState=xioHubSdCacheState, xioHubEvExtUpsAc=xioHubEvExtUpsAc, xioHubPdTotAvail=xioHubPdTotAvail, xioHubRdNumReq=xioHubRdNumReq, xioHubTvFlags=xioHubTvFlags, xiotech=xiotech, xioHubRdAvgSec=xioHubRdAvgSec, xioHubTvTimestamp=xioHubTvTimestamp, xioHubCiCleanBuffers=xioHubCiCleanBuffers, xioHubSvInfo=xioHubSvInfo, xioHubVdWriteHits=xioHubVdWriteHits, xioHubPdTotWrReq=xioHubPdTotWrReq, xioHubLiFHabMbs=xioHubLiFHabMbs, xioHubRdKBytesPS=xioHubRdKBytesPS, xioHubEvExtDcGood=xioHubEvExtDcGood, xioHubRdDevStatus=xioHubRdDevStatus, xioHubEvExtMainDcPowerTable=xioHubEvExtMainDcPowerTable, xioHubTrapVariables=xioHubTrapVariables, xioHubPdIndex=xioHubPdIndex, xioHubRdPhysDevEntry=xioHubRdPhysDevEntry, xioHubVpKBS=xioHubVpKBS, xioHubPdKBytesPS=xioHubPdKBytesPS, xioHubHabInfo=xioHubHabInfo, xioHubLiFHabEntry=xioHubLiFHabEntry, xioHubLiFHabIOs=xioHubLiFHabIOs, xioHubEvRearFansEntry=xioHubEvRearFansEntry, xioHubEvExtDcId=xioHubEvExtDcId, xioHubVdAttribute=xioHubVdAttribute, xioHubPdDevCapacity=xioHubPdDevCapacity, xioHubPdPhysDevEntry=xioHubPdPhysDevEntry, xioHubPdVendorId=xioHubPdVendorId, xioHubSdHubHabState=xioHubSdHubHabState, xioHubPdChannel=xioHubPdChannel, xioHubEvExtRearFansId=xioHubEvExtRearFansId, xioHubStDevListNum=xioHubStDevListNum, xioHubSdHabStatusTable=xioHubSdHabStatusTable, xioHubVdKBytesPS=xioHubVdKBytesPS, xioHubRdDevRebuild=xioHubRdDevRebuild, xioHubPdClass=xioHubPdClass, xioHubHiHabId=xioHubHiHabId, xioHubVdCacheInfoEntry=xioHubVdCacheInfoEntry, xioHubEvExtDcExists=xioHubEvExtDcExists, xioHubVdRaidDevTable=xioHubVdRaidDevTable, xioHubEvMainDcPowerTable=xioHubEvMainDcPowerTable, xioHubHiServerName=xioHubHiServerName, xioHubHiStatus=xioHubHiStatus, xioHubEvFrontFansGood=xioHubEvFrontFansGood, xioHubHuName=xioHubHuName, xioHubSdServerInfoTable=xioHubSdServerInfoTable, xioHubTvHubName=xioHubTvHubName, xioHubStDevListSNEntry=xioHubStDevListSNEntry, xioHubVpInfoTable=xioHubVpInfoTable, xioHubBiChannel=xioHubBiChannel, xioHubSdHabId=xioHubSdHabId, xioHubPdTotRdReq=xioHubPdTotRdReq, xioHubStDevListNEntry=xioHubStDevListNEntry, xioHubRdDevStripe=xioHubRdDevStripe, xioHubEvExtNumSupplies=xioHubEvExtNumSupplies, xioHubRdNumSectors=xioHubRdNumSectors, xioHubLiFHabUsed=xioHubLiFHabUsed, xioHubStDevListAEntry=xioHubStDevListAEntry, xioHubVdAvgSec=xioHubVdAvgSec, xioHubEvHabInstalled=xioHubEvHabInstalled, xioHubStatusData=xioHubStatusData, xioHubStorageDevList=xioHubStorageDevList, xioHubPdPhysDevTable=xioHubPdPhysDevTable, xioHubVdRaidDevEntry=xioHubVdRaidDevEntry, xioHubEvProcessorTemp=xioHubEvProcessorTemp, xioHubVdVirtualId=xioHubVdVirtualId, xioHubRdClass=xioHubRdClass, xioHubVdTotRdReq=xioHubVdTotRdReq, xioHubBiKBytesPS=xioHubBiKBytesPS, xioHubVpInfo=xioHubVpInfo, xioHubSdServerInfoEntry=xioHubSdServerInfoEntry, xioHubEvHabTempsTable=xioHubEvHabTempsTable, xioHubEvHubHabTemp=xioHubEvHubHabTemp, xioHubTraps=xioHubTraps, xioHubRdDevCapacity=xioHubRdDevCapacity, xioHubStDevNIndex=xioHubStDevNIndex, xioHubPdAvgSec=xioHubPdAvgSec, xioHubEvDcExists=xioHubEvDcExists, xioHubPdScsiId=xioHubPdScsiId, xioHubSvInfoEntry=xioHubSvInfoEntry, xioHubSvVDiskLUN=xioHubSvVDiskLUN, xioHubHiHabGroup=xioHubHiHabGroup, xioHubBiBusInfoEntry=xioHubBiBusInfoEntry, xioHubHiHabInfoTable=xioHubHiHabInfoTable, xioHubPpId=xioHubPpId, xioHubEvExtMainDcPowerEntry=xioHubEvExtMainDcPowerEntry, xioHubVdHabGroup=xioHubVdHabGroup, xioHubRdRaidDevTable=xioHubRdRaidDevTable, xioHubStDevListName=xioHubStDevListName, xioHubPdProductId=xioHubPdProductId, xioHubRdQueDepth=xioHubRdQueDepth, xioHubSvFCalId=xioHubSvFCalId, xioHubPdSerialNo=xioHubPdSerialNo, xioHubEvIOsPerSec=xioHubEvIOsPerSec, xioHubCiStatus=xioHubCiStatus, xioHubBiNumReq=xioHubBiNumReq, xioHubTvMessage=xioHubTvMessage, xioHubVdDevStatus=xioHubVdDevStatus, xioHubTvEventNum=xioHubTvEventNum, xioHubVdVirtualDevEntry=xioHubVdVirtualDevEntry, xioHubPdNumReq=xioHubPdNumReq, xioHubSdHabInstalled=xioHubSdHabInstalled, xioHubRdRaidDevId=xioHubRdRaidDevId, xioHubVdVirtualDevTable=xioHubVdVirtualDevTable, xioHubPpInfoTable=xioHubPpInfoTable, xioHubHiHabInfoEntry=xioHubHiHabInfoEntry, xioHubBiTotWrReq=xioHubBiTotWrReq, xioHubPdQueDepth=xioHubPdQueDepth, xioHubHuTCPIPAddr=xioHubHuTCPIPAddr, xioHubEvExtCabinetTemp=xioHubEvExtCabinetTemp, xioHubSdControllerState=xioHubSdControllerState, xioHubHuHeartbeat=xioHubHuHeartbeat, xioHubVpInfoEntry=xioHubVpInfoEntry, xioHubVdWriteMiss=xioHubVdWriteMiss, xioHubEvFrontFansEntry=xioHubEvFrontFansEntry, xioHubEvExtRearFansEntry=xioHubEvExtRearFansEntry, xioHubLoadInfo=xioHubLoadInfo, xioHub=xioHub, xioHubEvHabTempsEntry=xioHubEvHabTempsEntry, xioHubEvDcId=xioHubEvDcId, xioHubPpIOs=xioHubPpIOs, xioHubEvRearFansGood=xioHubEvRearFansGood, xioHubEvRearFansId=xioHubEvRearFansId, xioHubCiDirtyBuffers=xioHubCiDirtyBuffers, xioHubRdTotWrReq=xioHubRdTotWrReq, xioHubTvAddress=xioHubTvAddress)
