#
# PySNMP MIB module HUAWEI-BFD-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/HUAWEI-BFD-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:31:00 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, SingleValueConstraint, ValueSizeConstraint, ConstraintsUnion, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "SingleValueConstraint", "ValueSizeConstraint", "ConstraintsUnion", "ConstraintsIntersection")
hwDatacomm, = mibBuilder.importSymbols("HUAWEI-MIB", "hwDatacomm")
EnabledStatus, = mibBuilder.importSymbols("P-BRIDGE-MIB", "EnabledStatus")
NotificationGroup, ObjectGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ObjectGroup", "ModuleCompliance")
ModuleIdentity, Integer32, MibScalar, MibTable, MibTableRow, MibTableColumn, Gauge32, Unsigned32, MibIdentifier, ObjectIdentity, TimeTicks, Bits, NotificationType, iso, IpAddress, Counter32, Counter64 = mibBuilder.importSymbols("SNMPv2-SMI", "ModuleIdentity", "Integer32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Gauge32", "Unsigned32", "MibIdentifier", "ObjectIdentity", "TimeTicks", "Bits", "NotificationType", "iso", "IpAddress", "Counter32", "Counter64")
RowStatus, DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "RowStatus", "DisplayString", "TextualConvention")
hwBFDMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 2011, 5, 25, 38))
if mibBuilder.loadTexts: hwBFDMIB.setLastUpdated('200612270000Z')
if mibBuilder.loadTexts: hwBFDMIB.setOrganization('Organization.')
class BfdInterval(TextualConvention, Integer32):
    status = 'current'

class BfdDiag(TextualConvention, Integer32):
    status = 'current'

hwBfdScalarsObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 38, 1))
hwBfdVersionNumber = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 38, 1, 1), Unsigned32().clone(1)).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwBfdVersionNumber.setStatus('current')
hwBfdAdminStatus = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 38, 1, 2), EnabledStatus().clone(2)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwBfdAdminStatus.setStatus('current')
hwBfdSessLimitNumber = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 38, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwBfdSessLimitNumber.setStatus('current')
hwBfdSessInterfaceLimitNumber = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 38, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwBfdSessInterfaceLimitNumber.setStatus('current')
hwBfdSessStaticNumber = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 38, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwBfdSessStaticNumber.setStatus('current')
hwBfdSessDynamicNumber = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 38, 1, 6), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwBfdSessDynamicNumber.setStatus('current')
hwBfdSessGlobalDefaultIpAddr = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 38, 1, 7), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwBfdSessGlobalDefaultIpAddr.setStatus('current')
hwBfdEchoPassiveStatus = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 38, 1, 8), EnabledStatus().clone(2)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwBfdEchoPassiveStatus.setStatus('current')
hwBfdEchoAclNum = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 38, 1, 9), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(2000, 2999), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwBfdEchoAclNum.setStatus('current')
hwBfdSessDynamicPingInterval = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 38, 1, 10), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(30, 600)).clone(60)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwBfdSessDynamicPingInterval.setStatus('current')
hwBfdSessDynamicSupportPassive = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 38, 1, 11), EnabledStatus().clone(2)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwBfdSessDynamicSupportPassive.setStatus('current')
hwBfdSessDelayUpTime = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 38, 1, 12), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 600))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwBfdSessDelayUpTime.setStatus('current')
hwBfdSessMultiDstPort = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 38, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(3784, 3784), ValueRangeConstraint(4784, 4784), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwBfdSessMultiDstPort.setStatus('current')
hwBfdTrapSendInterval = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 38, 1, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 600)).clone(120)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwBfdTrapSendInterval.setStatus('current')
hwBfdObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 38, 2))
hwBfdIfConfTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 38, 2, 1), )
if mibBuilder.loadTexts: hwBfdIfConfTable.setStatus('current')
hwBfdIfConfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 38, 2, 1, 1), ).setIndexNames((0, "HUAWEI-BFD-MIB", "hwBfdIfConfIndex"))
if mibBuilder.loadTexts: hwBfdIfConfEntry.setStatus('current')
hwBfdIfConfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 38, 2, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: hwBfdIfConfIndex.setStatus('current')
hwBfdIfConfName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 38, 2, 1, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 47))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwBfdIfConfName.setStatus('current')
hwBfdIfConfEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 38, 2, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwBfdIfConfEnable.setStatus('obsolete')
hwBfdIfConfDeleting = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 38, 2, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwBfdIfConfDeleting.setStatus('current')
hwBfdIfConfAvailable = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 38, 2, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwBfdIfConfAvailable.setStatus('current')
hwBfdIfConfSessCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 38, 2, 1, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwBfdIfConfSessCnt.setStatus('current')
hwBfdIfConfRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 38, 2, 1, 1, 7), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwBfdIfConfRowStatus.setStatus('current')
hwBfdSessionConfTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 38, 2, 2), )
if mibBuilder.loadTexts: hwBfdSessionConfTable.setStatus('current')
hwBfdSessionConfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 38, 2, 2, 1), ).setIndexNames((0, "HUAWEI-BFD-MIB", "hwBfdSessConfName"))
if mibBuilder.loadTexts: hwBfdSessionConfEntry.setStatus('current')
hwBfdSessConfName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 38, 2, 2, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 15)))
if mibBuilder.loadTexts: hwBfdSessConfName.setStatus('current')
hwBfdSessConfMIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 38, 2, 2, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwBfdSessConfMIndex.setStatus('current')
hwBfdSessConfLocalDiscr = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 38, 2, 2, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 16384))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwBfdSessConfLocalDiscr.setStatus('current')
hwBfdSessConfRemoteDiscr = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 38, 2, 2, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 16384))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwBfdSessConfRemoteDiscr.setStatus('current')
hwBfdSessConfPeerAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 38, 2, 2, 1, 5), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwBfdSessConfPeerAddr.setStatus('current')
hwBfdSessConfBindIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 38, 2, 2, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwBfdSessConfBindIfIndex.setStatus('current')
hwBfdSessConfBindIfName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 38, 2, 2, 1, 7), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 47))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwBfdSessConfBindIfName.setStatus('current')
hwBfdSessConfDemandEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 38, 2, 2, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwBfdSessConfDemandEnable.setStatus('current')
hwBfdSessConfDemandTimerInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 38, 2, 2, 1, 9), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(500, 300000), ))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwBfdSessConfDemandTimerInterval.setStatus('current')
hwBfdSessConfDetectMult = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 38, 2, 2, 1, 10), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(3, 50))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwBfdSessConfDetectMult.setStatus('current')
hwBfdSessConfDesiredMinRxInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 38, 2, 2, 1, 11), BfdInterval().subtype(subtypeSpec=ValueRangeConstraint(3, 1000))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwBfdSessConfDesiredMinRxInterval.setStatus('current')
hwBfdSessConfDesiredMinTxInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 38, 2, 2, 1, 12), BfdInterval().subtype(subtypeSpec=ValueRangeConstraint(3, 1000))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwBfdSessConfDesiredMinTxInterval.setStatus('current')
hwBfdSessConfWTRInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 38, 2, 2, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 60))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwBfdSessConfWTRInterval.setStatus('current')
hwBfdSessConfTOS = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 38, 2, 2, 1, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7)).clone(7)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwBfdSessConfTOS.setStatus('current')
hwBfdSessConfPSTFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 38, 2, 2, 1, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwBfdSessConfPSTFlag.setStatus('current')
hwBfdSessConfCommitFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 38, 2, 2, 1, 16), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwBfdSessConfCommitFlag.setStatus('current')
hwBfdSessConfAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 38, 2, 2, 1, 17), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwBfdSessConfAdminStatus.setStatus('current')
hwBfdSessConfRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 38, 2, 2, 1, 18), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwBfdSessConfRowStatus.setStatus('current')
hwBfdSessConfSourceAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 38, 2, 2, 1, 19), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwBfdSessConfSourceAddr.setStatus('current')
hwBfdSessConfVrfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 38, 2, 2, 1, 20), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwBfdSessConfVrfIndex.setStatus('current')
hwBfdSessConfVPNName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 38, 2, 2, 1, 21), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 31))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwBfdSessConfVPNName.setStatus('current')
hwBfdSessConfDefaultIp = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 38, 2, 2, 1, 22), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("no", 1), ("yes", 2))).clone(1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwBfdSessConfDefaultIp.setStatus('current')
hwBfdSessConfPISFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 38, 2, 2, 1, 23), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("false", 1), ("true", 2), ("subif", 3))).clone(1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwBfdSessConfPISFlag.setStatus('current')
hwBfdSessConfBindType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 38, 2, 2, 1, 24), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15))).clone(namedValues=NamedValues(("interfaceIp", 1), ("peerIp", 2), ("sourceIp", 3), ("ifAndSourceIp", 4), ("fec", 5), ("tunnelIf", 6), ("ospf", 7), ("isis", 8), ("ldpLsp", 9), ("staticLsp", 10), ("teLsp", 11), ("teTunnel", 12), ("pw", 13), ("vsiPw", 15)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwBfdSessConfBindType.setStatus('current')
hwBfdSessConfNextHop = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 38, 2, 2, 1, 25), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwBfdSessConfNextHop.setStatus('current')
hwBfdSessConfStaticLspName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 38, 2, 2, 1, 26), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 16))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwBfdSessConfStaticLspName.setStatus('current')
hwBfdSessConfPWSecondaryFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 38, 2, 2, 1, 27), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("flagMasterPW", 1), ("flagSecondaryPW", 2), ("flagNoPW", 3))).clone(1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwBfdSessConfPWSecondaryFlag.setStatus('current')
hwBfdSessConfTunnelDetectType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 38, 2, 2, 1, 28), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("flagBothDown", 1), ("flagNeighborDown", 2))).clone(1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwBfdSessConfTunnelDetectType.setStatus('current')
hwBfdSessConfVcId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 38, 2, 2, 1, 29), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwBfdSessConfVcId.setStatus('current')
hwBfdSessConfVsiName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 38, 2, 2, 1, 30), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 31))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwBfdSessConfVsiName.setStatus('current')
hwBfdSessConfVsiPeerAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 38, 2, 2, 1, 31), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwBfdSessConfVsiPeerAddr.setStatus('current')
hwBfdSessConfDiscrAuto = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 38, 2, 2, 1, 32), EnabledStatus().clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwBfdSessConfDiscrAuto.setStatus('current')
hwBfdSessionTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 38, 2, 3), )
if mibBuilder.loadTexts: hwBfdSessionTable.setStatus('current')
hwBfdSessionEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 38, 2, 3, 1), ).setIndexNames((0, "HUAWEI-BFD-MIB", "hwBfdSessIndex"))
if mibBuilder.loadTexts: hwBfdSessionEntry.setStatus('current')
hwBfdSessIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 38, 2, 3, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295)))
if mibBuilder.loadTexts: hwBfdSessIndex.setStatus('current')
hwBfdSessMIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 38, 2, 3, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwBfdSessMIndex.setStatus('current')
hwBfdSessBindVRRP = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 38, 2, 3, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwBfdSessBindVRRP.setStatus('current')
hwBfdSessCfgName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 38, 2, 3, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwBfdSessCfgName.setStatus('current')
hwBfdSessPeerAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 38, 2, 3, 1, 5), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwBfdSessPeerAddr.setStatus('current')
hwBfdSessBindIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 38, 2, 3, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwBfdSessBindIfIndex.setStatus('current')
hwBfdSessBindIfName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 38, 2, 3, 1, 7), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 47))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwBfdSessBindIfName.setStatus('current')
hwBfdSessLocalDiscr = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 38, 2, 3, 1, 8), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 16384))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwBfdSessLocalDiscr.setStatus('current')
hwBfdSessRemoteDiscr = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 38, 2, 3, 1, 9), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 16383))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwBfdSessRemoteDiscr.setStatus('current')
hwBfdSessOperMode = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 38, 2, 3, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 3))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwBfdSessOperMode.setStatus('current')
hwBfdSessDetectMult = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 38, 2, 3, 1, 11), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(3, 50))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwBfdSessDetectMult.setStatus('current')
hwBfdSessDemandTimerInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 38, 2, 3, 1, 12), BfdInterval()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwBfdSessDemandTimerInterval.setStatus('current')
hwBfdSessActualRxInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 38, 2, 3, 1, 13), BfdInterval().subtype(subtypeSpec=ValueRangeConstraint(3, 30000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwBfdSessActualRxInterval.setStatus('current')
hwBfdSessActualTxInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 38, 2, 3, 1, 14), BfdInterval().subtype(subtypeSpec=ValueRangeConstraint(3, 30000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwBfdSessActualTxInterval.setStatus('current')
hwBfdSessWTRInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 38, 2, 3, 1, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 60))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwBfdSessWTRInterval.setStatus('current')
hwBfdSessTOS = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 38, 2, 3, 1, 16), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwBfdSessTOS.setStatus('current')
hwBfdSessState = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 38, 2, 3, 1, 17), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 3))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwBfdSessState.setStatus('current')
hwBfdSessDiag = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 38, 2, 3, 1, 18), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 31))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwBfdSessDiag.setStatus('current')
hwBfdSessSourceAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 38, 2, 3, 1, 19), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwBfdSessSourceAddr.setStatus('current')
hwBfdSessVrfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 38, 2, 3, 1, 20), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwBfdSessVrfIndex.setStatus('current')
hwBfdSessVPNName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 38, 2, 3, 1, 21), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 31))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwBfdSessVPNName.setStatus('current')
hwBfdSessType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 38, 2, 3, 1, 22), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("static", 1), ("dynamic", 2), ("entireDynamic", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwBfdSessType.setStatus('current')
hwBfdSessBindAppType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 38, 2, 3, 1, 23), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28))).clone(namedValues=NamedValues(("noApplication", 1), ("vrrp", 2), ("ifnet", 3), ("vrrpAndIfnet", 4), ("bgp", 5), ("ospf", 6), ("bgpAndOspf", 7), ("oamLspmL2vpn", 8), ("oamLspmTnlL2vpn", 9), ("lspmTnlL2vpnTnlps", 10), ("oamMplsfwL2vpn", 11), ("isis", 12), ("vsiPw", 13), ("vrrpOamLspmL2vpn", 14), ("vrrpOamTnlL2vpn", 15), ("vrrpLspmTnlL2vpnTnlps", 16), ("vrrpOamMplsfwL2vpn", 17), ("pim", 18), ("bgpIsis", 19), ("bgpPim", 20), ("ospfIsis", 21), ("ospfPim", 22), ("isisPim", 23), ("bgpOspfIsis", 24), ("bgpIspfPim", 25), ("bgpIsisPim", 26), ("ospfIsisPim", 27), ("bgpOspfIsisPim", 28)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwBfdSessBindAppType.setStatus('current')
hwBfdSessDefaultIp = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 38, 2, 3, 1, 24), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("no", 1), ("yes", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwBfdSessDefaultIp.setStatus('current')
hwBfdSessPISFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 38, 2, 3, 1, 25), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("false", 1), ("true", 2), ("subif", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwBfdSessPISFlag.setStatus('current')
hwBfdSessBindType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 38, 2, 3, 1, 26), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15))).clone(namedValues=NamedValues(("interfaceIp", 1), ("peerIp", 2), ("sourceIp", 3), ("ifAndSourceIp", 4), ("fec", 5), ("tunnelIf", 6), ("ospf", 7), ("isis", 8), ("ldpLsp", 9), ("staticLsp", 10), ("teLsp", 11), ("teTunnel", 12), ("pw", 13), ("vsiPw", 15)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwBfdSessBindType.setStatus('current')
hwBfdSessNextHop = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 38, 2, 3, 1, 27), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwBfdSessNextHop.setStatus('current')
hwBfdSessStaticLspName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 38, 2, 3, 1, 28), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwBfdSessStaticLspName.setStatus('current')
hwBfdSessLspIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 38, 2, 3, 1, 29), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwBfdSessLspIndex.setStatus('current')
hwBfdSessPWSecondaryFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 38, 2, 3, 1, 30), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("flagMasterPW", 1), ("flagSecondaryPW", 2), ("flagNoPW", 3))).clone(1)).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwBfdSessPWSecondaryFlag.setStatus('current')
hwBfdSessTunnelDetectType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 38, 2, 3, 1, 31), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("flagBothDown", 1), ("flagNeighborDown", 2))).clone(1)).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwBfdSessTunnelDetectType.setStatus('current')
hwBfdSessVcId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 38, 2, 3, 1, 32), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwBfdSessVcId.setStatus('current')
hwBfdSessVsiName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 38, 2, 3, 1, 33), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 31))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwBfdSessVsiName.setStatus('current')
hwBfdSessVsiPeerAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 38, 2, 3, 1, 34), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwBfdSessVsiPeerAddr.setStatus('current')
hwBfdSessDiscrAuto = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 38, 2, 3, 1, 35), EnabledStatus().clone('disabled')).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwBfdSessDiscrAuto.setStatus('current')
hwBfdSessionPerTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 38, 2, 4), )
if mibBuilder.loadTexts: hwBfdSessionPerTable.setStatus('current')
hwBfdSessionPerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 38, 2, 4, 1), ).setIndexNames((0, "HUAWEI-BFD-MIB", "hwBfdSessPerIndex"))
if mibBuilder.loadTexts: hwBfdSessionPerEntry.setStatus('current')
hwBfdSessPerIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 38, 2, 4, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: hwBfdSessPerIndex.setStatus('current')
hwBfdSessPerfPktIn = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 38, 2, 4, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwBfdSessPerfPktIn.setStatus('current')
hwBfdSessPerfPktInHC = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 38, 2, 4, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwBfdSessPerfPktInHC.setStatus('current')
hwBfdSessPerfPktOut = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 38, 2, 4, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwBfdSessPerfPktOut.setStatus('current')
hwBfdSessPerfPktOutHC = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 38, 2, 4, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwBfdSessPerfPktOutHC.setStatus('current')
hwBfdSessPerfBadIn = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 38, 2, 4, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwBfdSessPerfBadIn.setStatus('current')
hwBfdSessPerfBadInHC = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 38, 2, 4, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwBfdSessPerfBadInHC.setStatus('current')
hwBfdSessPerfBadOut = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 38, 2, 4, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwBfdSessPerfBadOut.setStatus('current')
hwBfdSessPerfBadOutHC = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 38, 2, 4, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwBfdSessPerfBadOutHC.setStatus('current')
hwBfdSessPerfLastSessDownTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 38, 2, 4, 1, 10), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwBfdSessPerfLastSessDownTime.setStatus('current')
hwBfdSessPerfSessDownCount = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 38, 2, 4, 1, 11), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwBfdSessPerfSessDownCount.setStatus('current')
hwBfdSessPerfSessShortBreakCount = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 38, 2, 4, 1, 12), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwBfdSessPerfSessShortBreakCount.setStatus('current')
hwBfdSessionPerStartTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 38, 2, 4, 1, 13), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwBfdSessionPerStartTime.setStatus('current')
hwBfdSlotTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 38, 2, 5), )
if mibBuilder.loadTexts: hwBfdSlotTable.setStatus('current')
hwBfdSlotEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 38, 2, 5, 1), ).setIndexNames((0, "HUAWEI-BFD-MIB", "hwBfdSlotID"))
if mibBuilder.loadTexts: hwBfdSlotEntry.setStatus('current')
hwBfdSlotID = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 38, 2, 5, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 31)))
if mibBuilder.loadTexts: hwBfdSlotID.setStatus('current')
hwBfdSlotReserveOneHopSessNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 38, 2, 5, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 512))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwBfdSlotReserveOneHopSessNum.setStatus('current')
hwBfdSlotOneHopSessNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 38, 2, 5, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 512))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwBfdSlotOneHopSessNum.setStatus('obsolete')
hwBfdSlotCurrentSessNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 38, 2, 5, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 512))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwBfdSlotCurrentSessNum.setStatus('current')
hwBfdSlotRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 38, 2, 5, 1, 5), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwBfdSlotRowStatus.setStatus('current')
hwBfdTtlConfTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 38, 2, 6), )
if mibBuilder.loadTexts: hwBfdTtlConfTable.setStatus('current')
hwBfdTtlConfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 38, 2, 6, 1), ).setIndexNames((0, "HUAWEI-BFD-MIB", "hwBfdTtlConfAddr"), (0, "HUAWEI-BFD-MIB", "hwBfdTtlConfMaskLen"), (0, "HUAWEI-BFD-MIB", "hwBfdTtlConfType"))
if mibBuilder.loadTexts: hwBfdTtlConfEntry.setStatus('current')
hwBfdTtlConfAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 38, 2, 6, 1, 1), IpAddress())
if mibBuilder.loadTexts: hwBfdTtlConfAddr.setStatus('current')
hwBfdTtlConfMaskLen = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 38, 2, 6, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(8, 32)))
if mibBuilder.loadTexts: hwBfdTtlConfMaskLen.setStatus('current')
hwBfdTtlConfType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 38, 2, 6, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("singleHop", 1), ("multiHop", 2))))
if mibBuilder.loadTexts: hwBfdTtlConfType.setStatus('current')
hwBfdTtlConfValue = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 38, 2, 6, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwBfdTtlConfValue.setStatus('current')
hwBfdTtlConfRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 38, 2, 6, 1, 50), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwBfdTtlConfRowStatus.setStatus('current')
hwBfdNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 38, 3))
hwBfdSessDown = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 38, 3, 1)).setObjects(("HUAWEI-BFD-MIB", "hwBfdSessCfgName"), ("HUAWEI-BFD-MIB", "hwBfdSessPeerAddr"), ("HUAWEI-BFD-MIB", "hwBfdSessBindIfIndex"), ("HUAWEI-BFD-MIB", "hwBfdSessBindIfName"), ("HUAWEI-BFD-MIB", "hwBfdSessDiag"), ("HUAWEI-BFD-MIB", "hwBfdSessVrfIndex"), ("HUAWEI-BFD-MIB", "hwBfdSessVPNName"), ("HUAWEI-BFD-MIB", "hwBfdSessType"), ("HUAWEI-BFD-MIB", "hwBfdSessDefaultIp"), ("HUAWEI-BFD-MIB", "hwBfdSessBindType"), ("HUAWEI-BFD-MIB", "hwBfdSessStaticLspName"), ("HUAWEI-BFD-MIB", "hwBfdSessPWSecondaryFlag"), ("HUAWEI-BFD-MIB", "hwBfdSessNextHop"), ("HUAWEI-BFD-MIB", "hwBfdSessVcId"), ("HUAWEI-BFD-MIB", "hwBfdSessVsiName"), ("HUAWEI-BFD-MIB", "hwBfdSessVsiPeerAddr"), ("HUAWEI-BFD-MIB", "hwBfdSessDiscrAuto"))
if mibBuilder.loadTexts: hwBfdSessDown.setStatus('current')
hwBfdSessUp = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 38, 3, 2)).setObjects(("HUAWEI-BFD-MIB", "hwBfdSessCfgName"), ("HUAWEI-BFD-MIB", "hwBfdSessPeerAddr"), ("HUAWEI-BFD-MIB", "hwBfdSessBindIfIndex"), ("HUAWEI-BFD-MIB", "hwBfdSessBindIfName"), ("HUAWEI-BFD-MIB", "hwBfdSessDiag"), ("HUAWEI-BFD-MIB", "hwBfdSessVrfIndex"), ("HUAWEI-BFD-MIB", "hwBfdSessVPNName"), ("HUAWEI-BFD-MIB", "hwBfdSessType"), ("HUAWEI-BFD-MIB", "hwBfdSessDefaultIp"), ("HUAWEI-BFD-MIB", "hwBfdSessBindType"), ("HUAWEI-BFD-MIB", "hwBfdSessStaticLspName"), ("HUAWEI-BFD-MIB", "hwBfdSessPWSecondaryFlag"), ("HUAWEI-BFD-MIB", "hwBfdSessNextHop"), ("HUAWEI-BFD-MIB", "hwBfdSessVcId"), ("HUAWEI-BFD-MIB", "hwBfdSessVsiName"), ("HUAWEI-BFD-MIB", "hwBfdSessVsiPeerAddr"), ("HUAWEI-BFD-MIB", "hwBfdSessDiscrAuto"))
if mibBuilder.loadTexts: hwBfdSessUp.setStatus('current')
hwBfdSessReachLimit = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 38, 3, 3)).setObjects(("HUAWEI-BFD-MIB", "hwBfdSessLimitNumber"))
if mibBuilder.loadTexts: hwBfdSessReachLimit.setStatus('current')
hwBfdSessReachLimitBindIf = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 38, 3, 4)).setObjects(("HUAWEI-BFD-MIB", "hwBfdSessConfBindIfName"), ("HUAWEI-BFD-MIB", "hwBfdSessInterfaceLimitNumber"))
if mibBuilder.loadTexts: hwBfdSessReachLimitBindIf.setStatus('current')
hwBfdConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 38, 4))
hwBfdCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 38, 4, 1))
hwBfdFullCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 2011, 5, 25, 38, 4, 1, 1)).setObjects(("HUAWEI-BFD-MIB", "hwBfdGroup"), ("HUAWEI-BFD-MIB", "hwBfdSessGroup"), ("HUAWEI-BFD-MIB", "hwBfdObsoleteGroup"), ("HUAWEI-BFD-MIB", "hwBfdNotificationGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwBfdFullCompliance = hwBfdFullCompliance.setStatus('current')
hwBfdGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 38, 4, 2))
hwBfdGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 38, 4, 2, 1)).setObjects(("HUAWEI-BFD-MIB", "hwBfdVersionNumber"), ("HUAWEI-BFD-MIB", "hwBfdAdminStatus"), ("HUAWEI-BFD-MIB", "hwBfdSessLimitNumber"), ("HUAWEI-BFD-MIB", "hwBfdSessInterfaceLimitNumber"), ("HUAWEI-BFD-MIB", "hwBfdSessStaticNumber"), ("HUAWEI-BFD-MIB", "hwBfdSessDynamicNumber"), ("HUAWEI-BFD-MIB", "hwBfdSessGlobalDefaultIpAddr"), ("HUAWEI-BFD-MIB", "hwBfdEchoPassiveStatus"), ("HUAWEI-BFD-MIB", "hwBfdEchoAclNum"), ("HUAWEI-BFD-MIB", "hwBfdSessDynamicPingInterval"), ("HUAWEI-BFD-MIB", "hwBfdSessDynamicSupportPassive"), ("HUAWEI-BFD-MIB", "hwBfdSessDelayUpTime"), ("HUAWEI-BFD-MIB", "hwBfdSessMultiDstPort"), ("HUAWEI-BFD-MIB", "hwBfdTrapSendInterval"), ("HUAWEI-BFD-MIB", "hwBfdIfConfName"), ("HUAWEI-BFD-MIB", "hwBfdIfConfDeleting"), ("HUAWEI-BFD-MIB", "hwBfdIfConfAvailable"), ("HUAWEI-BFD-MIB", "hwBfdIfConfSessCnt"), ("HUAWEI-BFD-MIB", "hwBfdIfConfRowStatus"), ("HUAWEI-BFD-MIB", "hwBfdSlotReserveOneHopSessNum"), ("HUAWEI-BFD-MIB", "hwBfdSlotCurrentSessNum"), ("HUAWEI-BFD-MIB", "hwBfdSlotRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwBfdGroup = hwBfdGroup.setStatus('current')
hwBfdSessGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 38, 4, 2, 2)).setObjects(("HUAWEI-BFD-MIB", "hwBfdSessConfMIndex"), ("HUAWEI-BFD-MIB", "hwBfdSessConfLocalDiscr"), ("HUAWEI-BFD-MIB", "hwBfdSessConfRemoteDiscr"), ("HUAWEI-BFD-MIB", "hwBfdSessConfPeerAddr"), ("HUAWEI-BFD-MIB", "hwBfdSessConfBindIfIndex"), ("HUAWEI-BFD-MIB", "hwBfdSessConfBindIfName"), ("HUAWEI-BFD-MIB", "hwBfdSessConfDemandEnable"), ("HUAWEI-BFD-MIB", "hwBfdSessConfDemandTimerInterval"), ("HUAWEI-BFD-MIB", "hwBfdSessConfDetectMult"), ("HUAWEI-BFD-MIB", "hwBfdSessConfDesiredMinRxInterval"), ("HUAWEI-BFD-MIB", "hwBfdSessConfDesiredMinTxInterval"), ("HUAWEI-BFD-MIB", "hwBfdSessConfWTRInterval"), ("HUAWEI-BFD-MIB", "hwBfdSessConfTOS"), ("HUAWEI-BFD-MIB", "hwBfdSessConfPSTFlag"), ("HUAWEI-BFD-MIB", "hwBfdSessConfCommitFlag"), ("HUAWEI-BFD-MIB", "hwBfdSessConfAdminStatus"), ("HUAWEI-BFD-MIB", "hwBfdSessConfRowStatus"), ("HUAWEI-BFD-MIB", "hwBfdSessConfSourceAddr"), ("HUAWEI-BFD-MIB", "hwBfdSessConfVrfIndex"), ("HUAWEI-BFD-MIB", "hwBfdSessConfVPNName"), ("HUAWEI-BFD-MIB", "hwBfdSessConfDefaultIp"), ("HUAWEI-BFD-MIB", "hwBfdSessConfPISFlag"), ("HUAWEI-BFD-MIB", "hwBfdSessConfBindType"), ("HUAWEI-BFD-MIB", "hwBfdSessConfNextHop"), ("HUAWEI-BFD-MIB", "hwBfdSessConfStaticLspName"), ("HUAWEI-BFD-MIB", "hwBfdSessConfPWSecondaryFlag"), ("HUAWEI-BFD-MIB", "hwBfdSessConfTunnelDetectType"), ("HUAWEI-BFD-MIB", "hwBfdSessConfVcId"), ("HUAWEI-BFD-MIB", "hwBfdSessConfVsiName"), ("HUAWEI-BFD-MIB", "hwBfdSessConfVsiPeerAddr"), ("HUAWEI-BFD-MIB", "hwBfdSessConfDiscrAuto"), ("HUAWEI-BFD-MIB", "hwBfdSessMIndex"), ("HUAWEI-BFD-MIB", "hwBfdSessBindVRRP"), ("HUAWEI-BFD-MIB", "hwBfdSessCfgName"), ("HUAWEI-BFD-MIB", "hwBfdSessPeerAddr"), ("HUAWEI-BFD-MIB", "hwBfdSessBindIfIndex"), ("HUAWEI-BFD-MIB", "hwBfdSessBindIfName"), ("HUAWEI-BFD-MIB", "hwBfdSessLocalDiscr"), ("HUAWEI-BFD-MIB", "hwBfdSessRemoteDiscr"), ("HUAWEI-BFD-MIB", "hwBfdSessOperMode"), ("HUAWEI-BFD-MIB", "hwBfdSessDetectMult"), ("HUAWEI-BFD-MIB", "hwBfdSessDemandTimerInterval"), ("HUAWEI-BFD-MIB", "hwBfdSessActualRxInterval"), ("HUAWEI-BFD-MIB", "hwBfdSessActualTxInterval"), ("HUAWEI-BFD-MIB", "hwBfdSessWTRInterval"), ("HUAWEI-BFD-MIB", "hwBfdSessTOS"), ("HUAWEI-BFD-MIB", "hwBfdSessState"), ("HUAWEI-BFD-MIB", "hwBfdSessDiag"), ("HUAWEI-BFD-MIB", "hwBfdSessSourceAddr"), ("HUAWEI-BFD-MIB", "hwBfdSessVrfIndex"), ("HUAWEI-BFD-MIB", "hwBfdSessVPNName"), ("HUAWEI-BFD-MIB", "hwBfdSessType"), ("HUAWEI-BFD-MIB", "hwBfdSessBindAppType"), ("HUAWEI-BFD-MIB", "hwBfdSessDefaultIp"), ("HUAWEI-BFD-MIB", "hwBfdSessPISFlag"), ("HUAWEI-BFD-MIB", "hwBfdSessBindType"), ("HUAWEI-BFD-MIB", "hwBfdSessNextHop"), ("HUAWEI-BFD-MIB", "hwBfdSessStaticLspName"), ("HUAWEI-BFD-MIB", "hwBfdSessLspIndex"), ("HUAWEI-BFD-MIB", "hwBfdSessPWSecondaryFlag"), ("HUAWEI-BFD-MIB", "hwBfdSessTunnelDetectType"), ("HUAWEI-BFD-MIB", "hwBfdSessVcId"), ("HUAWEI-BFD-MIB", "hwBfdSessVsiName"), ("HUAWEI-BFD-MIB", "hwBfdSessVsiPeerAddr"), ("HUAWEI-BFD-MIB", "hwBfdSessDiscrAuto"), ("HUAWEI-BFD-MIB", "hwBfdSessPerfPktIn"), ("HUAWEI-BFD-MIB", "hwBfdSessPerfPktInHC"), ("HUAWEI-BFD-MIB", "hwBfdSessPerfPktOut"), ("HUAWEI-BFD-MIB", "hwBfdSessPerfPktOutHC"), ("HUAWEI-BFD-MIB", "hwBfdSessPerfBadIn"), ("HUAWEI-BFD-MIB", "hwBfdSessPerfBadInHC"), ("HUAWEI-BFD-MIB", "hwBfdSessPerfBadOut"), ("HUAWEI-BFD-MIB", "hwBfdSessPerfBadOutHC"), ("HUAWEI-BFD-MIB", "hwBfdSessPerfLastSessDownTime"), ("HUAWEI-BFD-MIB", "hwBfdSessPerfSessDownCount"), ("HUAWEI-BFD-MIB", "hwBfdSessPerfSessShortBreakCount"), ("HUAWEI-BFD-MIB", "hwBfdSessionPerStartTime"), ("HUAWEI-BFD-MIB", "hwBfdTtlConfValue"), ("HUAWEI-BFD-MIB", "hwBfdTtlConfRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwBfdSessGroup = hwBfdSessGroup.setStatus('current')
hwBfdObsoleteGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 38, 4, 2, 3)).setObjects(("HUAWEI-BFD-MIB", "hwBfdIfConfEnable"), ("HUAWEI-BFD-MIB", "hwBfdSlotOneHopSessNum"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwBfdObsoleteGroup = hwBfdObsoleteGroup.setStatus('obsolete')
hwBfdNotificationGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 38, 4, 2, 4)).setObjects(("HUAWEI-BFD-MIB", "hwBfdSessDown"), ("HUAWEI-BFD-MIB", "hwBfdSessUp"), ("HUAWEI-BFD-MIB", "hwBfdSessReachLimit"), ("HUAWEI-BFD-MIB", "hwBfdSessReachLimitBindIf"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwBfdNotificationGroup = hwBfdNotificationGroup.setStatus('current')
mibBuilder.exportSymbols("HUAWEI-BFD-MIB", hwBfdSessConfPeerAddr=hwBfdSessConfPeerAddr, hwBfdSessPWSecondaryFlag=hwBfdSessPWSecondaryFlag, hwBfdIfConfTable=hwBfdIfConfTable, hwBfdSessConfRemoteDiscr=hwBfdSessConfRemoteDiscr, hwBfdSessDynamicSupportPassive=hwBfdSessDynamicSupportPassive, hwBfdIfConfRowStatus=hwBfdIfConfRowStatus, hwBfdSlotEntry=hwBfdSlotEntry, hwBfdTtlConfMaskLen=hwBfdTtlConfMaskLen, hwBfdSessConfDesiredMinTxInterval=hwBfdSessConfDesiredMinTxInterval, hwBfdSessConfWTRInterval=hwBfdSessConfWTRInterval, hwBfdSessConfDefaultIp=hwBfdSessConfDefaultIp, hwBfdSessActualTxInterval=hwBfdSessActualTxInterval, hwBfdSlotID=hwBfdSlotID, hwBfdSessVPNName=hwBfdSessVPNName, hwBfdSessLspIndex=hwBfdSessLspIndex, hwBfdSessConfBindIfName=hwBfdSessConfBindIfName, hwBfdSessVrfIndex=hwBfdSessVrfIndex, hwBfdIfConfName=hwBfdIfConfName, hwBfdSessionConfTable=hwBfdSessionConfTable, hwBfdSessPerfSessShortBreakCount=hwBfdSessPerfSessShortBreakCount, hwBfdSessConfDiscrAuto=hwBfdSessConfDiscrAuto, BfdDiag=BfdDiag, hwBfdSlotCurrentSessNum=hwBfdSlotCurrentSessNum, hwBfdSessConfName=hwBfdSessConfName, hwBfdSlotTable=hwBfdSlotTable, hwBfdSessDemandTimerInterval=hwBfdSessDemandTimerInterval, hwBfdSessConfBindType=hwBfdSessConfBindType, hwBfdTtlConfRowStatus=hwBfdTtlConfRowStatus, hwBfdSessSourceAddr=hwBfdSessSourceAddr, hwBfdSessTunnelDetectType=hwBfdSessTunnelDetectType, hwBfdIfConfEntry=hwBfdIfConfEntry, hwBfdEchoPassiveStatus=hwBfdEchoPassiveStatus, hwBfdTtlConfValue=hwBfdTtlConfValue, hwBfdSessionConfEntry=hwBfdSessionConfEntry, hwBfdSessPerIndex=hwBfdSessPerIndex, hwBfdSessDiscrAuto=hwBfdSessDiscrAuto, hwBfdNotifications=hwBfdNotifications, BfdInterval=BfdInterval, hwBfdSessionEntry=hwBfdSessionEntry, hwBfdSessConfPSTFlag=hwBfdSessConfPSTFlag, hwBfdSessReachLimit=hwBfdSessReachLimit, hwBfdSessType=hwBfdSessType, hwBfdSessDynamicPingInterval=hwBfdSessDynamicPingInterval, hwBfdSessConfSourceAddr=hwBfdSessConfSourceAddr, hwBfdSessVcId=hwBfdSessVcId, hwBfdSessConfVsiPeerAddr=hwBfdSessConfVsiPeerAddr, hwBfdSessStaticNumber=hwBfdSessStaticNumber, PYSNMP_MODULE_ID=hwBFDMIB, hwBfdSessDefaultIp=hwBfdSessDefaultIp, hwBfdScalarsObjects=hwBfdScalarsObjects, hwBfdSessConfDesiredMinRxInterval=hwBfdSessConfDesiredMinRxInterval, hwBfdSlotReserveOneHopSessNum=hwBfdSlotReserveOneHopSessNum, hwBfdSlotOneHopSessNum=hwBfdSlotOneHopSessNum, hwBfdTtlConfType=hwBfdTtlConfType, hwBfdIfConfDeleting=hwBfdIfConfDeleting, hwBfdTtlConfTable=hwBfdTtlConfTable, hwBfdTtlConfEntry=hwBfdTtlConfEntry, hwBfdIfConfSessCnt=hwBfdIfConfSessCnt, hwBfdSessConfCommitFlag=hwBfdSessConfCommitFlag, hwBfdSessConfAdminStatus=hwBfdSessConfAdminStatus, hwBfdSessConfLocalDiscr=hwBfdSessConfLocalDiscr, hwBfdTtlConfAddr=hwBfdTtlConfAddr, hwBfdSessPerfLastSessDownTime=hwBfdSessPerfLastSessDownTime, hwBfdSessStaticLspName=hwBfdSessStaticLspName, hwBfdSessInterfaceLimitNumber=hwBfdSessInterfaceLimitNumber, hwBfdAdminStatus=hwBfdAdminStatus, hwBfdSessWTRInterval=hwBfdSessWTRInterval, hwBfdSessConfVcId=hwBfdSessConfVcId, hwBfdSessReachLimitBindIf=hwBfdSessReachLimitBindIf, hwBfdSessConfDemandEnable=hwBfdSessConfDemandEnable, hwBfdSessDiag=hwBfdSessDiag, hwBfdSessConfBindIfIndex=hwBfdSessConfBindIfIndex, hwBfdSlotRowStatus=hwBfdSlotRowStatus, hwBfdSessConfPISFlag=hwBfdSessConfPISFlag, hwBfdSessTOS=hwBfdSessTOS, hwBfdNotificationGroup=hwBfdNotificationGroup, hwBfdIfConfEnable=hwBfdIfConfEnable, hwBfdSessDown=hwBfdSessDown, hwBfdSessPerfPktOutHC=hwBfdSessPerfPktOutHC, hwBfdSessPISFlag=hwBfdSessPISFlag, hwBfdSessMIndex=hwBfdSessMIndex, hwBfdGroups=hwBfdGroups, hwBfdSessConfNextHop=hwBfdSessConfNextHop, hwBfdSessPerfPktOut=hwBfdSessPerfPktOut, hwBfdSessUp=hwBfdSessUp, hwBfdSessState=hwBfdSessState, hwBfdSessPerfBadIn=hwBfdSessPerfBadIn, hwBfdSessConfVsiName=hwBfdSessConfVsiName, hwBfdSessLocalDiscr=hwBfdSessLocalDiscr, hwBfdSessBindIfIndex=hwBfdSessBindIfIndex, hwBfdFullCompliance=hwBfdFullCompliance, hwBfdSessionPerStartTime=hwBfdSessionPerStartTime, hwBfdSessConfTOS=hwBfdSessConfTOS, hwBfdSessNextHop=hwBfdSessNextHop, hwBfdVersionNumber=hwBfdVersionNumber, hwBfdSessIndex=hwBfdSessIndex, hwBfdObjects=hwBfdObjects, hwBfdSessVsiPeerAddr=hwBfdSessVsiPeerAddr, hwBfdSessConfDemandTimerInterval=hwBfdSessConfDemandTimerInterval, hwBfdSessPerfBadOut=hwBfdSessPerfBadOut, hwBfdSessBindType=hwBfdSessBindType, hwBfdEchoAclNum=hwBfdEchoAclNum, hwBfdIfConfIndex=hwBfdIfConfIndex, hwBfdSessBindIfName=hwBfdSessBindIfName, hwBfdTrapSendInterval=hwBfdTrapSendInterval, hwBfdSessPerfBadOutHC=hwBfdSessPerfBadOutHC, hwBfdSessionPerTable=hwBfdSessionPerTable, hwBfdSessDetectMult=hwBfdSessDetectMult, hwBfdSessRemoteDiscr=hwBfdSessRemoteDiscr, hwBfdSessPerfPktIn=hwBfdSessPerfPktIn, hwBfdSessVsiName=hwBfdSessVsiName, hwBfdSessLimitNumber=hwBfdSessLimitNumber, hwBfdSessPeerAddr=hwBfdSessPeerAddr, hwBfdSessPerfPktInHC=hwBfdSessPerfPktInHC, hwBfdSessConfRowStatus=hwBfdSessConfRowStatus, hwBfdSessGlobalDefaultIpAddr=hwBfdSessGlobalDefaultIpAddr, hwBfdGroup=hwBfdGroup, hwBfdSessConfVrfIndex=hwBfdSessConfVrfIndex, hwBfdSessPerfBadInHC=hwBfdSessPerfBadInHC, hwBfdSessBindAppType=hwBfdSessBindAppType, hwBfdSessionTable=hwBfdSessionTable, hwBfdSessMultiDstPort=hwBfdSessMultiDstPort, hwBfdSessConfTunnelDetectType=hwBfdSessConfTunnelDetectType, hwBfdSessConfStaticLspName=hwBfdSessConfStaticLspName, hwBfdSessBindVRRP=hwBfdSessBindVRRP, hwBfdSessConfVPNName=hwBfdSessConfVPNName, hwBfdObsoleteGroup=hwBfdObsoleteGroup, hwBfdSessConfPWSecondaryFlag=hwBfdSessConfPWSecondaryFlag, hwBfdSessPerfSessDownCount=hwBfdSessPerfSessDownCount, hwBfdCompliances=hwBfdCompliances, hwBfdIfConfAvailable=hwBfdIfConfAvailable, hwBfdSessDynamicNumber=hwBfdSessDynamicNumber, hwBfdSessOperMode=hwBfdSessOperMode, hwBfdSessActualRxInterval=hwBfdSessActualRxInterval, hwBfdSessConfMIndex=hwBfdSessConfMIndex, hwBfdSessGroup=hwBfdSessGroup, hwBFDMIB=hwBFDMIB, hwBfdSessConfDetectMult=hwBfdSessConfDetectMult, hwBfdSessionPerEntry=hwBfdSessionPerEntry, hwBfdSessCfgName=hwBfdSessCfgName, hwBfdSessDelayUpTime=hwBfdSessDelayUpTime, hwBfdConformance=hwBfdConformance)
