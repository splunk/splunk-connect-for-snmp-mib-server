#
# PySNMP MIB module Wellfleet-SWSMDS-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/Wellfleet-SWSMDS-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 21:35:13 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ValueRangeConstraint, ConstraintsIntersection, ValueSizeConstraint, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ValueRangeConstraint", "ConstraintsIntersection", "ValueSizeConstraint", "SingleValueConstraint")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Bits, Gauge32, iso, IpAddress, ObjectIdentity, Unsigned32, Counter32, ModuleIdentity, mgmt, MibScalar, MibTable, MibTableRow, MibTableColumn, enterprises, Counter64, mib_2, MibIdentifier, NotificationType, TimeTicks, Integer32, NotificationType, Opaque = mibBuilder.importSymbols("SNMPv2-SMI", "Bits", "Gauge32", "iso", "IpAddress", "ObjectIdentity", "Unsigned32", "Counter32", "ModuleIdentity", "mgmt", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "enterprises", "Counter64", "mib-2", "MibIdentifier", "NotificationType", "TimeTicks", "Integer32", "NotificationType", "Opaque")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
wfSmdsSwGroup, = mibBuilder.importSymbols("Wellfleet-COMMON-MIB", "wfSmdsSwGroup")
wfSmdsSwSubTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 7, 1), )
if mibBuilder.loadTexts: wfSmdsSwSubTable.setStatus('mandatory')
wfSmdsSwSubEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 7, 1, 1), ).setIndexNames((0, "Wellfleet-SWSMDS-MIB", "wfSmdsSwSubCct"))
if mibBuilder.loadTexts: wfSmdsSwSubEntry.setStatus('mandatory')
wfSmdsSwSubDelete = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 7, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("created", 1), ("deleted", 2))).clone('created')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfSmdsSwSubDelete.setStatus('mandatory')
wfSmdsSwSubDisable = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 7, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfSmdsSwSubDisable.setStatus('mandatory')
wfSmdsSwSubState = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 7, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("init", 3), ("notpresent", 4))).clone('notpresent')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfSmdsSwSubState.setStatus('mandatory')
wfSmdsSwSubCct = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 7, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1023))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfSmdsSwSubCct.setStatus('mandatory')
wfSmdsSwSubDisableHrtbtPoll = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 7, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfSmdsSwSubDisableHrtbtPoll.setStatus('mandatory')
wfSmdsSwSubHrtbtPollAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 7, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("cpe", 1), ("net", 2))).clone('net')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfSmdsSwSubHrtbtPollAddr.setStatus('mandatory')
wfSmdsSwSubHrtbtPollInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 7, 1, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(6, 2147483647)).clone(10)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfSmdsSwSubHrtbtPollInterval.setStatus('mandatory')
wfSmdsSwSubHrtbtPollDownCount = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 7, 1, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 10)).clone(3)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfSmdsSwSubHrtbtPollDownCount.setStatus('mandatory')
wfSmdsSwSubDisableNetMgmt = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 7, 1, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfSmdsSwSubDisableNetMgmt.setStatus('mandatory')
wfSmdsSwSubInterfaceType = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 7, 1, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("sni", 1), ("ssi", 2))).clone('sni')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfSmdsSwSubInterfaceType.setStatus('mandatory')
wfSmdsSwSubInterfaceIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 7, 1, 1, 11), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfSmdsSwSubInterfaceIndex.setStatus('mandatory')
wfSmdsSwSubDisableL3PduChecks = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 7, 1, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfSmdsSwSubDisableL3PduChecks.setStatus('mandatory')
wfSmdsSwSubDisableUsageGeneration = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 7, 1, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfSmdsSwSubDisableUsageGeneration.setStatus('mandatory')
wfSmdsSwSubDisableMIR = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 7, 1, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfSmdsSwSubDisableMIR.setStatus('mandatory')
wfSmdsSwSubUnassignedSAs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 7, 1, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfSmdsSwSubUnassignedSAs.setStatus('mandatory')
wfSmdsSwSubSAScreenViolations = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 7, 1, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfSmdsSwSubSAScreenViolations.setStatus('mandatory')
wfSmdsSwSubDAScreenViolations = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 7, 1, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfSmdsSwSubDAScreenViolations.setStatus('mandatory')
wfSmdsSwSubNumPDUExceededMIR = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 7, 1, 1, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfSmdsSwSubNumPDUExceededMIR.setStatus('mandatory')
wfSmdsSwSubSipL3ReceivedIAs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 7, 1, 1, 19), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfSmdsSwSubSipL3ReceivedIAs.setStatus('mandatory')
wfSmdsSwSubSipL3ReceivedGAs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 7, 1, 1, 20), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfSmdsSwSubSipL3ReceivedGAs.setStatus('mandatory')
wfSmdsSwSubSipL3UnrecIAs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 7, 1, 1, 21), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfSmdsSwSubSipL3UnrecIAs.setStatus('mandatory')
wfSmdsSwSubSipL3UnrecGAs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 7, 1, 1, 22), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfSmdsSwSubSipL3UnrecGAs.setStatus('mandatory')
wfSmdsSwSubSipL3SentIAs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 7, 1, 1, 23), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfSmdsSwSubSipL3SentIAs.setStatus('mandatory')
wfSmdsSwSubSipL3SentGAs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 7, 1, 1, 24), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfSmdsSwSubSipL3SentGAs.setStatus('mandatory')
wfSmdsSwSubSipL3Errors = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 7, 1, 1, 25), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfSmdsSwSubSipL3Errors.setStatus('mandatory')
wfSmdsSwSubSipL3InvAddrTypes = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 7, 1, 1, 26), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfSmdsSwSubSipL3InvAddrTypes.setStatus('mandatory')
wfSmdsSwSubSipL3VersionSupport = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 7, 1, 1, 27), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("version", 1))).clone('version')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfSmdsSwSubSipL3VersionSupport.setStatus('mandatory')
wfSmdsSwSubSAScrnViolationOccur = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 7, 1, 1, 28), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfSmdsSwSubSAScrnViolationOccur.setStatus('mandatory')
wfSmdsSwSubDAScrnViolationOccur = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 7, 1, 1, 29), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfSmdsSwSubDAScrnViolationOccur.setStatus('mandatory')
wfSmdsSwSubUnassignedSAOccur = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 7, 1, 1, 30), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfSmdsSwSubUnassignedSAOccur.setStatus('mandatory')
wfSmdsSwSubSAErrorOccur = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 7, 1, 1, 31), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfSmdsSwSubSAErrorOccur.setStatus('mandatory')
wfSmdsSwSubDAErrorOccur = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 7, 1, 1, 32), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfSmdsSwSubDAErrorOccur.setStatus('mandatory')
wfSmdsSwSubInvalidBASizeOccur = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 7, 1, 1, 33), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfSmdsSwSubInvalidBASizeOccur.setStatus('mandatory')
wfSmdsSwSubInvalidHELenOccur = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 7, 1, 1, 34), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfSmdsSwSubInvalidHELenOccur.setStatus('mandatory')
wfSmdsSwSubInvalidHEVerOccur = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 7, 1, 1, 35), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfSmdsSwSubInvalidHEVerOccur.setStatus('mandatory')
wfSmdsSwSubInvalidHECarOccur = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 7, 1, 1, 36), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfSmdsSwSubInvalidHECarOccur.setStatus('mandatory')
wfSmdsSwSubInvalidHEPadOccur = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 7, 1, 1, 37), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfSmdsSwSubInvalidHEPadOccur.setStatus('mandatory')
wfSmdsSwSubBEtagOccur = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 7, 1, 1, 38), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfSmdsSwSubBEtagOccur.setStatus('mandatory')
wfSmdsSwSubBAsizeNELenOccur = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 7, 1, 1, 39), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfSmdsSwSubBAsizeNELenOccur.setStatus('mandatory')
wfSmdsSwSubIncorrectLenOccur = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 7, 1, 1, 40), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfSmdsSwSubIncorrectLenOccur.setStatus('mandatory')
wfSmdsSwSubExceededMIROccur = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 7, 1, 1, 41), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfSmdsSwSubExceededMIROccur.setStatus('mandatory')
wfSmdsSwSubInBandMgmtDisable = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 7, 1, 1, 42), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfSmdsSwSubInBandMgmtDisable.setStatus('mandatory')
wfSmdsSwSubInBandMgmtLocalAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 7, 1, 1, 43), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfSmdsSwSubInBandMgmtLocalAddr.setStatus('mandatory')
wfSmdsSwSubInBandMgmtReceivedPDUs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 7, 1, 1, 44), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfSmdsSwSubInBandMgmtReceivedPDUs.setStatus('mandatory')
wfSmdsSwSubInBandMgmtSentPDUs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 7, 1, 1, 45), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfSmdsSwSubInBandMgmtSentPDUs.setStatus('mandatory')
wfSmdsSwSubInBandMgmtMaxLenErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 7, 1, 1, 46), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfSmdsSwSubInBandMgmtMaxLenErrors.setStatus('mandatory')
wfSmdsSwSubInBandMgmtEncapsErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 7, 1, 1, 47), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfSmdsSwSubInBandMgmtEncapsErrors.setStatus('mandatory')
wfSmdsSwSubGAPartialResolve = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 7, 1, 1, 48), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfSmdsSwSubGAPartialResolve.setStatus('mandatory')
wfSmdsSwSubDANotOnSni = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 7, 1, 1, 49), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfSmdsSwSubDANotOnSni.setStatus('mandatory')
wfSmdsSwEndpTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 7, 2), )
if mibBuilder.loadTexts: wfSmdsSwEndpTable.setStatus('mandatory')
wfSmdsSwEndpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 7, 2, 1), ).setIndexNames((0, "Wellfleet-SWSMDS-MIB", "wfSmdsSwEndpE164AddrHigh"), (0, "Wellfleet-SWSMDS-MIB", "wfSmdsSwEndpE164AddrDelta"), (0, "Wellfleet-SWSMDS-MIB", "wfSmdsSwEndpInterfaceIndex"))
if mibBuilder.loadTexts: wfSmdsSwEndpEntry.setStatus('mandatory')
wfSmdsSwEndpDelete = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 7, 2, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("created", 1), ("deleted", 2))).clone('created')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfSmdsSwEndpDelete.setStatus('mandatory')
wfSmdsSwEndpE164AddrHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 7, 2, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(8, 8)).setFixedLength(8)).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfSmdsSwEndpE164AddrHigh.setStatus('mandatory')
wfSmdsSwEndpE164AddrDelta = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 7, 2, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(8, 8)).setFixedLength(8)).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfSmdsSwEndpE164AddrDelta.setStatus('mandatory')
wfSmdsSwEndpInterfaceIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 7, 2, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfSmdsSwEndpInterfaceIndex.setStatus('mandatory')
wfSmdsSwInterfaceTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 7, 3), )
if mibBuilder.loadTexts: wfSmdsSwInterfaceTable.setStatus('mandatory')
wfSmdsSwInterfaceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 7, 3, 1), ).setIndexNames((0, "Wellfleet-SWSMDS-MIB", "wfSmdsSwInterfaceType"), (0, "Wellfleet-SWSMDS-MIB", "wfSmdsSwInterfaceIndex"))
if mibBuilder.loadTexts: wfSmdsSwInterfaceEntry.setStatus('mandatory')
wfSmdsSwInterfaceDelete = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 7, 3, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("created", 1), ("deleted", 2))).clone('created')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfSmdsSwInterfaceDelete.setStatus('mandatory')
wfSmdsSwInterfaceType = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 7, 3, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("sni", 1), ("ssi", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfSmdsSwInterfaceType.setStatus('mandatory')
wfSmdsSwInterfaceIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 7, 3, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfSmdsSwInterfaceIndex.setStatus('mandatory')
wfSmdsSwInterfaceIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 7, 3, 1, 4), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfSmdsSwInterfaceIpAddr.setStatus('mandatory')
wfSmdsSwInterfaceMIR = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 7, 3, 1, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfSmdsSwInterfaceMIR.setStatus('mandatory')
wfSmdsSwInterfaceCurrentRate = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 7, 3, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfSmdsSwInterfaceCurrentRate.setStatus('mandatory')
wfSmdsSwAssocScrnTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 7, 4), )
if mibBuilder.loadTexts: wfSmdsSwAssocScrnTable.setStatus('mandatory')
wfSmdsSwAssocScrnEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 7, 4, 1), ).setIndexNames((0, "Wellfleet-SWSMDS-MIB", "wfSmdsSwAssocScrnSniIndex"), (0, "Wellfleet-SWSMDS-MIB", "wfSmdsSwAssocScrnAddrInd"), (0, "Wellfleet-SWSMDS-MIB", "wfSmdsSwAssocScrnIndivIndex"), (0, "Wellfleet-SWSMDS-MIB", "wfSmdsSwAssocScrnGrpIndex"))
if mibBuilder.loadTexts: wfSmdsSwAssocScrnEntry.setStatus('mandatory')
wfSmdsSwAssocScrnDelete = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 7, 4, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("created", 1), ("deleted", 2))).clone('created')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfSmdsSwAssocScrnDelete.setStatus('mandatory')
wfSmdsSwAssocScrnSniIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 7, 4, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfSmdsSwAssocScrnSniIndex.setStatus('mandatory')
wfSmdsSwAssocScrnAddrInd = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 7, 4, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(8, 8)).setFixedLength(8)).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfSmdsSwAssocScrnAddrInd.setStatus('mandatory')
wfSmdsSwAssocScrnIndivIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 7, 4, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfSmdsSwAssocScrnIndivIndex.setStatus('mandatory')
wfSmdsSwAssocScrnGrpIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 7, 4, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfSmdsSwAssocScrnGrpIndex.setStatus('mandatory')
wfSmdsSwIAScrnTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 7, 5), )
if mibBuilder.loadTexts: wfSmdsSwIAScrnTable.setStatus('mandatory')
wfSmdsSwIAScrnEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 7, 5, 1), ).setIndexNames((0, "Wellfleet-SWSMDS-MIB", "wfSmdsSwIAScrnSniIndex"), (0, "Wellfleet-SWSMDS-MIB", "wfSmdsSwIAScrnIndex"), (0, "Wellfleet-SWSMDS-MIB", "wfSmdsSwIAScrnAddr"))
if mibBuilder.loadTexts: wfSmdsSwIAScrnEntry.setStatus('mandatory')
wfSmdsSwIAScrnDelete = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 7, 5, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("created", 1), ("deleted", 2))).clone('created')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfSmdsSwIAScrnDelete.setStatus('mandatory')
wfSmdsSwIAScrnSniIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 7, 5, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfSmdsSwIAScrnSniIndex.setStatus('mandatory')
wfSmdsSwIAScrnIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 7, 5, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfSmdsSwIAScrnIndex.setStatus('mandatory')
wfSmdsSwIAScrnAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 7, 5, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(8, 8)).setFixedLength(8)).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfSmdsSwIAScrnAddr.setStatus('mandatory')
wfSmdsSwGAScrnTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 7, 6), )
if mibBuilder.loadTexts: wfSmdsSwGAScrnTable.setStatus('mandatory')
wfSmdsSwGAScrnEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 7, 6, 1), ).setIndexNames((0, "Wellfleet-SWSMDS-MIB", "wfSmdsSwGAScrnSniIndex"), (0, "Wellfleet-SWSMDS-MIB", "wfSmdsSwGAScrnIndex"), (0, "Wellfleet-SWSMDS-MIB", "wfSmdsSwGAScrnAddr"))
if mibBuilder.loadTexts: wfSmdsSwGAScrnEntry.setStatus('mandatory')
wfSmdsSwGAScrnDelete = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 7, 6, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("created", 1), ("deleted", 2))).clone('created')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfSmdsSwGAScrnDelete.setStatus('mandatory')
wfSmdsSwGAScrnSniIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 7, 6, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfSmdsSwGAScrnSniIndex.setStatus('mandatory')
wfSmdsSwGAScrnIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 7, 6, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfSmdsSwGAScrnIndex.setStatus('mandatory')
wfSmdsSwGAScrnAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 7, 6, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(8, 8)).setFixedLength(8)).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfSmdsSwGAScrnAddr.setStatus('mandatory')
wfSmdsSwGATable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 7, 7), )
if mibBuilder.loadTexts: wfSmdsSwGATable.setStatus('mandatory')
wfSmdsSwGAEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 7, 7, 1), ).setIndexNames((0, "Wellfleet-SWSMDS-MIB", "wfSmdsSwGASSI"), (0, "Wellfleet-SWSMDS-MIB", "wfSmdsSwGAGroupAddress"), (0, "Wellfleet-SWSMDS-MIB", "wfSmdsSwGAGroupMember"))
if mibBuilder.loadTexts: wfSmdsSwGAEntry.setStatus('mandatory')
wfSmdsSwGADelete = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 7, 7, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("created", 1), ("deleted", 2))).clone('created')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfSmdsSwGADelete.setStatus('mandatory')
wfSmdsSwGASSI = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 7, 7, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfSmdsSwGASSI.setStatus('mandatory')
wfSmdsSwGAGroupAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 7, 7, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(8, 8)).setFixedLength(8)).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfSmdsSwGAGroupAddress.setStatus('mandatory')
wfSmdsSwGAGroupMember = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 7, 7, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(8, 8)).setFixedLength(8)).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfSmdsSwGAGroupMember.setStatus('mandatory')
wfSmdsSwCurUsageTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 7, 8), )
if mibBuilder.loadTexts: wfSmdsSwCurUsageTable.setStatus('mandatory')
wfSmdsSwCurUsageEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 7, 8, 1), ).setIndexNames((0, "Wellfleet-SWSMDS-MIB", "wfSmdsSwCurUsageSni"), (0, "Wellfleet-SWSMDS-MIB", "wfSmdsSwCurUsageDestAddr"), (0, "Wellfleet-SWSMDS-MIB", "wfSmdsSwCurUsageSrcAddr"))
if mibBuilder.loadTexts: wfSmdsSwCurUsageEntry.setStatus('mandatory')
wfSmdsSwCurUsageDelete = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 7, 8, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("created", 1), ("deleted", 2))).clone('created')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfSmdsSwCurUsageDelete.setStatus('obsolete')
wfSmdsSwCurUsageSni = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 7, 8, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfSmdsSwCurUsageSni.setStatus('mandatory')
wfSmdsSwCurUsageDestAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 7, 8, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(8, 8)).setFixedLength(8)).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfSmdsSwCurUsageDestAddr.setStatus('mandatory')
wfSmdsSwCurUsageSrcAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 7, 8, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(8, 8)).setFixedLength(8)).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfSmdsSwCurUsageSrcAddr.setStatus('mandatory')
wfSmdsSwCurUsageGrpIndAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 7, 8, 1, 5), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfSmdsSwCurUsageGrpIndAddr.setStatus('mandatory')
wfSmdsSwCurUsageNumL3Pdu = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 7, 8, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfSmdsSwCurUsageNumL3Pdu.setStatus('mandatory')
wfSmdsSwCurUsageNumOctet = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 7, 8, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfSmdsSwCurUsageNumOctet.setStatus('mandatory')
wfSmdsSwCurUsageToBeDeleted = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 7, 8, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("created", 1), ("deleted", 2))).clone('created')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfSmdsSwCurUsageToBeDeleted.setStatus('mandatory')
wfSmdsSwUsage = MibIdentifier((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 7, 9))
wfSmdsSwUsageEnable = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 7, 9, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfSmdsSwUsageEnable.setStatus('mandatory')
wfSmdsSwUsageVolume = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 7, 9, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 14))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfSmdsSwUsageVolume.setStatus('mandatory')
wfSmdsSwUsageVolumeBackup = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 7, 9, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 14))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfSmdsSwUsageVolumeBackup.setStatus('mandatory')
wfSmdsSwUsageDirectory = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 7, 9, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfSmdsSwUsageDirectory.setStatus('mandatory')
wfSmdsSwUsageFilePrefix = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 7, 9, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfSmdsSwUsageFilePrefix.setStatus('mandatory')
wfSmdsSwUsageTimerInterval = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 7, 9, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 60)).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfSmdsSwUsageTimerInterval.setStatus('mandatory')
wfSmdsSwUsageUpdateInterval = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 7, 9, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)).clone(10)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfSmdsSwUsageUpdateInterval.setStatus('mandatory')
wfSmdsSwUsageStoreInterval = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 7, 9, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)).clone(10)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfSmdsSwUsageStoreInterval.setStatus('mandatory')
wfSmdsSwUsageFlushInterval = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 7, 9, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)).clone(60)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfSmdsSwUsageFlushInterval.setStatus('mandatory')
wfSmdsSwUsageCleanupInterval = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 7, 9, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)).clone(60)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfSmdsSwUsageCleanupInterval.setStatus('mandatory')
wfSmdsSwUsageLocalTimeZone = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 7, 9, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfSmdsSwUsageLocalTimeZone.setStatus('mandatory')
wfSmdsSwUsageUpdateTimeStamp = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 7, 9, 12), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfSmdsSwUsageUpdateTimeStamp.setStatus('mandatory')
wfSmdsSwUsageStoreTimeStamp = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 7, 9, 13), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfSmdsSwUsageStoreTimeStamp.setStatus('mandatory')
wfSmdsSwUsageFlushTimeStamp = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 7, 9, 14), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfSmdsSwUsageFlushTimeStamp.setStatus('mandatory')
wfSmdsSwUsageCleanupTimeStamp = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 7, 9, 15), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfSmdsSwUsageCleanupTimeStamp.setStatus('mandatory')
wfSmdsSwUsageUpdateData = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 7, 9, 16), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfSmdsSwUsageUpdateData.setStatus('mandatory')
wfSmdsSwUsageStoreData = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 7, 9, 17), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfSmdsSwUsageStoreData.setStatus('mandatory')
wfSmdsSwUsageFlushData = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 7, 9, 18), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfSmdsSwUsageFlushData.setStatus('mandatory')
wfSmdsSwUsageFileCleanup = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 7, 9, 19), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfSmdsSwUsageFileCleanup.setStatus('mandatory')
wfSmdsSwUsageState = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 7, 9, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("init", 3), ("notpresent", 4))).clone('notpresent')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfSmdsSwUsageState.setStatus('mandatory')
wfSmdsSwUsageCurVolume = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 7, 9, 21), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 14))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfSmdsSwUsageCurVolume.setStatus('mandatory')
wfSmdsSwUsageCurVolumeBackup = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 7, 9, 22), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 14))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfSmdsSwUsageCurVolumeBackup.setStatus('mandatory')
wfSmdsSwUsageCurDirectory = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 7, 9, 23), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfSmdsSwUsageCurDirectory.setStatus('mandatory')
wfSmdsSwUsageCurFilePrefix = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 7, 9, 24), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfSmdsSwUsageCurFilePrefix.setStatus('mandatory')
wfSmdsSwUsageCurTimerInterval = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 7, 9, 25), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 60)).clone(1)).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfSmdsSwUsageCurTimerInterval.setStatus('mandatory')
wfSmdsSwUsageCurUpdateInterval = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 7, 9, 26), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)).clone(10)).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfSmdsSwUsageCurUpdateInterval.setStatus('mandatory')
wfSmdsSwUsageCurStoreInterval = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 7, 9, 27), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)).clone(10)).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfSmdsSwUsageCurStoreInterval.setStatus('mandatory')
wfSmdsSwUsageCurFlushInterval = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 7, 9, 28), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)).clone(60)).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfSmdsSwUsageCurFlushInterval.setStatus('mandatory')
wfSmdsSwUsageCurCleanupInterval = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 7, 9, 29), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)).clone(60)).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfSmdsSwUsageCurCleanupInterval.setStatus('mandatory')
wfSmdsSwUsageDebug = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 7, 9, 30), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfSmdsSwUsageDebug.setStatus('mandatory')
wfSmdsSwUsageCurDebug = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 7, 9, 31), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfSmdsSwUsageCurDebug.setStatus('mandatory')
wfSmdsSwUsageSwitchId = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 7, 9, 32), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfSmdsSwUsageSwitchId.setStatus('mandatory')
wfSmdsSwUsageNumEntries = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 7, 9, 33), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfSmdsSwUsageNumEntries.setStatus('mandatory')
wfSmdsSwUsageTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 7, 10), )
if mibBuilder.loadTexts: wfSmdsSwUsageTable.setStatus('mandatory')
wfSmdsSwUsageEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 7, 10, 1), ).setIndexNames((0, "Wellfleet-SWSMDS-MIB", "wfSmdsSwUsageSni"), (0, "Wellfleet-SWSMDS-MIB", "wfSmdsSwUsageDestAddr"), (0, "Wellfleet-SWSMDS-MIB", "wfSmdsSwUsageSrcAddr"))
if mibBuilder.loadTexts: wfSmdsSwUsageEntry.setStatus('mandatory')
wfSmdsSwUsageDelete = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 7, 10, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("created", 1), ("deleted", 2))).clone('created')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfSmdsSwUsageDelete.setStatus('mandatory')
wfSmdsSwUsageSni = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 7, 10, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfSmdsSwUsageSni.setStatus('mandatory')
wfSmdsSwUsageDestAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 7, 10, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(8, 8)).setFixedLength(8)).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfSmdsSwUsageDestAddr.setStatus('mandatory')
wfSmdsSwUsageSrcAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 7, 10, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(8, 8)).setFixedLength(8)).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfSmdsSwUsageSrcAddr.setStatus('mandatory')
wfSmdsSwUsageStartTimeStampHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 7, 10, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfSmdsSwUsageStartTimeStampHigh.setStatus('mandatory')
wfSmdsSwUsageStartTimeStampLow = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 7, 10, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfSmdsSwUsageStartTimeStampLow.setStatus('mandatory')
wfSmdsSwUsageEndTimeStampHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 7, 10, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfSmdsSwUsageEndTimeStampHigh.setStatus('mandatory')
wfSmdsSwUsageEndTimeStampLow = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 7, 10, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfSmdsSwUsageEndTimeStampLow.setStatus('mandatory')
wfSmdsSwUsageSentL3PduHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 7, 10, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfSmdsSwUsageSentL3PduHigh.setStatus('mandatory')
wfSmdsSwUsageSentL3PduLow = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 7, 10, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfSmdsSwUsageSentL3PduLow.setStatus('mandatory')
wfSmdsSwUsageSentOctetHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 7, 10, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfSmdsSwUsageSentOctetHigh.setStatus('mandatory')
wfSmdsSwUsageSentOctetLow = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 7, 10, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfSmdsSwUsageSentOctetLow.setStatus('mandatory')
wfSmdsSwUsageLastL3PduHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 7, 10, 1, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfSmdsSwUsageLastL3PduHigh.setStatus('mandatory')
wfSmdsSwUsageLastL3PduLow = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 7, 10, 1, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfSmdsSwUsageLastL3PduLow.setStatus('mandatory')
wfSmdsSwUsageLastOctetHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 7, 10, 1, 15), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfSmdsSwUsageLastOctetHigh.setStatus('mandatory')
wfSmdsSwUsageLastOctetLow = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 7, 10, 1, 16), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfSmdsSwUsageLastOctetLow.setStatus('mandatory')
wfSmdsSwUsageGrpIndAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 7, 10, 1, 17), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfSmdsSwUsageGrpIndAddr.setStatus('mandatory')
wfSmdsSwSsiSniTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 7, 11), )
if mibBuilder.loadTexts: wfSmdsSwSsiSniTable.setStatus('mandatory')
wfSmdsSwSsiSniEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 7, 11, 1), ).setIndexNames((0, "Wellfleet-SWSMDS-MIB", "wfSmdsSwSsiSniSSI"), (0, "Wellfleet-SWSMDS-MIB", "wfSmdsSwSsiSniSNI"))
if mibBuilder.loadTexts: wfSmdsSwSsiSniEntry.setStatus('mandatory')
wfSmdsSwSsiSniDelete = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 7, 11, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("created", 1), ("deleted", 2))).clone('created')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfSmdsSwSsiSniDelete.setStatus('mandatory')
wfSmdsSwSsiSniSSI = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 7, 11, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfSmdsSwSsiSniSSI.setStatus('mandatory')
wfSmdsSwSsiSniSNI = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 7, 11, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfSmdsSwSsiSniSNI.setStatus('mandatory')
mibBuilder.exportSymbols("Wellfleet-SWSMDS-MIB", wfSmdsSwSubSipL3VersionSupport=wfSmdsSwSubSipL3VersionSupport, wfSmdsSwSubIncorrectLenOccur=wfSmdsSwSubIncorrectLenOccur, wfSmdsSwUsageUpdateData=wfSmdsSwUsageUpdateData, wfSmdsSwUsageSentL3PduHigh=wfSmdsSwUsageSentL3PduHigh, wfSmdsSwGAScrnAddr=wfSmdsSwGAScrnAddr, wfSmdsSwCurUsageSrcAddr=wfSmdsSwCurUsageSrcAddr, wfSmdsSwUsageCurFilePrefix=wfSmdsSwUsageCurFilePrefix, wfSmdsSwUsageEntry=wfSmdsSwUsageEntry, wfSmdsSwUsageCurDirectory=wfSmdsSwUsageCurDirectory, wfSmdsSwCurUsageNumOctet=wfSmdsSwCurUsageNumOctet, wfSmdsSwCurUsageGrpIndAddr=wfSmdsSwCurUsageGrpIndAddr, wfSmdsSwSubSipL3Errors=wfSmdsSwSubSipL3Errors, wfSmdsSwSubBAsizeNELenOccur=wfSmdsSwSubBAsizeNELenOccur, wfSmdsSwUsageVolumeBackup=wfSmdsSwUsageVolumeBackup, wfSmdsSwSubCct=wfSmdsSwSubCct, wfSmdsSwIAScrnTable=wfSmdsSwIAScrnTable, wfSmdsSwSubDisableNetMgmt=wfSmdsSwSubDisableNetMgmt, wfSmdsSwInterfaceDelete=wfSmdsSwInterfaceDelete, wfSmdsSwSubDisableHrtbtPoll=wfSmdsSwSubDisableHrtbtPoll, wfSmdsSwSubSAScrnViolationOccur=wfSmdsSwSubSAScrnViolationOccur, wfSmdsSwEndpE164AddrHigh=wfSmdsSwEndpE164AddrHigh, wfSmdsSwGAScrnIndex=wfSmdsSwGAScrnIndex, wfSmdsSwSubDAErrorOccur=wfSmdsSwSubDAErrorOccur, wfSmdsSwUsageSwitchId=wfSmdsSwUsageSwitchId, wfSmdsSwCurUsageTable=wfSmdsSwCurUsageTable, wfSmdsSwUsageLastL3PduLow=wfSmdsSwUsageLastL3PduLow, wfSmdsSwUsageGrpIndAddr=wfSmdsSwUsageGrpIndAddr, wfSmdsSwUsageFlushTimeStamp=wfSmdsSwUsageFlushTimeStamp, wfSmdsSwSubSipL3InvAddrTypes=wfSmdsSwSubSipL3InvAddrTypes, wfSmdsSwSubBEtagOccur=wfSmdsSwSubBEtagOccur, wfSmdsSwUsageUpdateInterval=wfSmdsSwUsageUpdateInterval, wfSmdsSwGAGroupAddress=wfSmdsSwGAGroupAddress, wfSmdsSwSubInvalidBASizeOccur=wfSmdsSwSubInvalidBASizeOccur, wfSmdsSwUsageCleanupInterval=wfSmdsSwUsageCleanupInterval, wfSmdsSwUsageLastL3PduHigh=wfSmdsSwUsageLastL3PduHigh, wfSmdsSwInterfaceMIR=wfSmdsSwInterfaceMIR, wfSmdsSwAssocScrnAddrInd=wfSmdsSwAssocScrnAddrInd, wfSmdsSwSubTable=wfSmdsSwSubTable, wfSmdsSwSubHrtbtPollAddr=wfSmdsSwSubHrtbtPollAddr, wfSmdsSwSubDisableL3PduChecks=wfSmdsSwSubDisableL3PduChecks, wfSmdsSwSubDANotOnSni=wfSmdsSwSubDANotOnSni, wfSmdsSwSubDisableUsageGeneration=wfSmdsSwSubDisableUsageGeneration, wfSmdsSwIAScrnEntry=wfSmdsSwIAScrnEntry, wfSmdsSwInterfaceEntry=wfSmdsSwInterfaceEntry, wfSmdsSwUsageEndTimeStampHigh=wfSmdsSwUsageEndTimeStampHigh, wfSmdsSwSubGAPartialResolve=wfSmdsSwSubGAPartialResolve, wfSmdsSwUsageDebug=wfSmdsSwUsageDebug, wfSmdsSwUsageVolume=wfSmdsSwUsageVolume, wfSmdsSwUsageCurUpdateInterval=wfSmdsSwUsageCurUpdateInterval, wfSmdsSwInterfaceCurrentRate=wfSmdsSwInterfaceCurrentRate, wfSmdsSwSubHrtbtPollInterval=wfSmdsSwSubHrtbtPollInterval, wfSmdsSwUsageDestAddr=wfSmdsSwUsageDestAddr, wfSmdsSwSsiSniEntry=wfSmdsSwSsiSniEntry, wfSmdsSwSubInBandMgmtMaxLenErrors=wfSmdsSwSubInBandMgmtMaxLenErrors, wfSmdsSwAssocScrnDelete=wfSmdsSwAssocScrnDelete, wfSmdsSwSubInBandMgmtDisable=wfSmdsSwSubInBandMgmtDisable, wfSmdsSwSubInterfaceType=wfSmdsSwSubInterfaceType, wfSmdsSwUsageCleanupTimeStamp=wfSmdsSwUsageCleanupTimeStamp, wfSmdsSwUsageLocalTimeZone=wfSmdsSwUsageLocalTimeZone, wfSmdsSwUsageFileCleanup=wfSmdsSwUsageFileCleanup, wfSmdsSwUsageCurTimerInterval=wfSmdsSwUsageCurTimerInterval, wfSmdsSwInterfaceIndex=wfSmdsSwInterfaceIndex, wfSmdsSwUsageSentOctetLow=wfSmdsSwUsageSentOctetLow, wfSmdsSwSubSipL3SentGAs=wfSmdsSwSubSipL3SentGAs, wfSmdsSwSubExceededMIROccur=wfSmdsSwSubExceededMIROccur, wfSmdsSwUsageLastOctetLow=wfSmdsSwUsageLastOctetLow, wfSmdsSwUsageFilePrefix=wfSmdsSwUsageFilePrefix, wfSmdsSwSubInBandMgmtReceivedPDUs=wfSmdsSwSubInBandMgmtReceivedPDUs, wfSmdsSwUsageStartTimeStampHigh=wfSmdsSwUsageStartTimeStampHigh, wfSmdsSwUsageDelete=wfSmdsSwUsageDelete, wfSmdsSwIAScrnIndex=wfSmdsSwIAScrnIndex, wfSmdsSwUsageEnable=wfSmdsSwUsageEnable, wfSmdsSwSsiSniTable=wfSmdsSwSsiSniTable, wfSmdsSwSubState=wfSmdsSwSubState, wfSmdsSwUsageDirectory=wfSmdsSwUsageDirectory, wfSmdsSwSubEntry=wfSmdsSwSubEntry, wfSmdsSwSubDelete=wfSmdsSwSubDelete, wfSmdsSwSubSipL3SentIAs=wfSmdsSwSubSipL3SentIAs, wfSmdsSwSubSAErrorOccur=wfSmdsSwSubSAErrorOccur, wfSmdsSwGAScrnEntry=wfSmdsSwGAScrnEntry, wfSmdsSwSubInvalidHEVerOccur=wfSmdsSwSubInvalidHEVerOccur, wfSmdsSwSubDAScreenViolations=wfSmdsSwSubDAScreenViolations, wfSmdsSwUsageCurStoreInterval=wfSmdsSwUsageCurStoreInterval, wfSmdsSwSubDisable=wfSmdsSwSubDisable, wfSmdsSwUsageLastOctetHigh=wfSmdsSwUsageLastOctetHigh, wfSmdsSwUsageEndTimeStampLow=wfSmdsSwUsageEndTimeStampLow, wfSmdsSwInterfaceIpAddr=wfSmdsSwInterfaceIpAddr, wfSmdsSwSsiSniDelete=wfSmdsSwSsiSniDelete, wfSmdsSwCurUsageEntry=wfSmdsSwCurUsageEntry, wfSmdsSwSubHrtbtPollDownCount=wfSmdsSwSubHrtbtPollDownCount, wfSmdsSwUsageTable=wfSmdsSwUsageTable, wfSmdsSwIAScrnDelete=wfSmdsSwIAScrnDelete, wfSmdsSwUsageSentL3PduLow=wfSmdsSwUsageSentL3PduLow, wfSmdsSwInterfaceType=wfSmdsSwInterfaceType, wfSmdsSwSubSipL3ReceivedIAs=wfSmdsSwSubSipL3ReceivedIAs, wfSmdsSwGATable=wfSmdsSwGATable, wfSmdsSwSubDisableMIR=wfSmdsSwSubDisableMIR, wfSmdsSwIAScrnAddr=wfSmdsSwIAScrnAddr, wfSmdsSwUsageSni=wfSmdsSwUsageSni, wfSmdsSwUsageCurDebug=wfSmdsSwUsageCurDebug, wfSmdsSwUsageCurCleanupInterval=wfSmdsSwUsageCurCleanupInterval, wfSmdsSwSubSipL3UnrecIAs=wfSmdsSwSubSipL3UnrecIAs, wfSmdsSwGAScrnTable=wfSmdsSwGAScrnTable, wfSmdsSwCurUsageNumL3Pdu=wfSmdsSwCurUsageNumL3Pdu, wfSmdsSwUsageFlushInterval=wfSmdsSwUsageFlushInterval, wfSmdsSwUsageCurVolume=wfSmdsSwUsageCurVolume, wfSmdsSwSubInBandMgmtSentPDUs=wfSmdsSwSubInBandMgmtSentPDUs, wfSmdsSwAssocScrnIndivIndex=wfSmdsSwAssocScrnIndivIndex, wfSmdsSwEndpE164AddrDelta=wfSmdsSwEndpE164AddrDelta, wfSmdsSwInterfaceTable=wfSmdsSwInterfaceTable, wfSmdsSwUsageCurFlushInterval=wfSmdsSwUsageCurFlushInterval, wfSmdsSwCurUsageDestAddr=wfSmdsSwCurUsageDestAddr, wfSmdsSwGADelete=wfSmdsSwGADelete, wfSmdsSwSubDAScrnViolationOccur=wfSmdsSwSubDAScrnViolationOccur, wfSmdsSwAssocScrnSniIndex=wfSmdsSwAssocScrnSniIndex, wfSmdsSwSubInvalidHELenOccur=wfSmdsSwSubInvalidHELenOccur, wfSmdsSwSubNumPDUExceededMIR=wfSmdsSwSubNumPDUExceededMIR, wfSmdsSwUsageCurVolumeBackup=wfSmdsSwUsageCurVolumeBackup, wfSmdsSwAssocScrnTable=wfSmdsSwAssocScrnTable, wfSmdsSwGAGroupMember=wfSmdsSwGAGroupMember, wfSmdsSwSubInvalidHECarOccur=wfSmdsSwSubInvalidHECarOccur, wfSmdsSwSubUnassignedSAs=wfSmdsSwSubUnassignedSAs, wfSmdsSwUsage=wfSmdsSwUsage, wfSmdsSwSubInvalidHEPadOccur=wfSmdsSwSubInvalidHEPadOccur, wfSmdsSwUsageStoreInterval=wfSmdsSwUsageStoreInterval, wfSmdsSwUsageNumEntries=wfSmdsSwUsageNumEntries, wfSmdsSwSubUnassignedSAOccur=wfSmdsSwSubUnassignedSAOccur, wfSmdsSwUsageFlushData=wfSmdsSwUsageFlushData, wfSmdsSwCurUsageSni=wfSmdsSwCurUsageSni, wfSmdsSwEndpEntry=wfSmdsSwEndpEntry, wfSmdsSwSubSipL3ReceivedGAs=wfSmdsSwSubSipL3ReceivedGAs, wfSmdsSwUsageTimerInterval=wfSmdsSwUsageTimerInterval, wfSmdsSwSsiSniSSI=wfSmdsSwSsiSniSSI, wfSmdsSwSubInBandMgmtLocalAddr=wfSmdsSwSubInBandMgmtLocalAddr, wfSmdsSwSubInBandMgmtEncapsErrors=wfSmdsSwSubInBandMgmtEncapsErrors, wfSmdsSwAssocScrnGrpIndex=wfSmdsSwAssocScrnGrpIndex, wfSmdsSwUsageUpdateTimeStamp=wfSmdsSwUsageUpdateTimeStamp, wfSmdsSwUsageStartTimeStampLow=wfSmdsSwUsageStartTimeStampLow, wfSmdsSwSubInterfaceIndex=wfSmdsSwSubInterfaceIndex, wfSmdsSwCurUsageToBeDeleted=wfSmdsSwCurUsageToBeDeleted, wfSmdsSwUsageState=wfSmdsSwUsageState, wfSmdsSwUsageStoreTimeStamp=wfSmdsSwUsageStoreTimeStamp, wfSmdsSwSubSipL3UnrecGAs=wfSmdsSwSubSipL3UnrecGAs, wfSmdsSwEndpInterfaceIndex=wfSmdsSwEndpInterfaceIndex, wfSmdsSwSubSAScreenViolations=wfSmdsSwSubSAScreenViolations, wfSmdsSwSsiSniSNI=wfSmdsSwSsiSniSNI, wfSmdsSwAssocScrnEntry=wfSmdsSwAssocScrnEntry, wfSmdsSwGAEntry=wfSmdsSwGAEntry, wfSmdsSwUsageStoreData=wfSmdsSwUsageStoreData, wfSmdsSwUsageSrcAddr=wfSmdsSwUsageSrcAddr, wfSmdsSwGAScrnSniIndex=wfSmdsSwGAScrnSniIndex, wfSmdsSwEndpTable=wfSmdsSwEndpTable, wfSmdsSwCurUsageDelete=wfSmdsSwCurUsageDelete, wfSmdsSwGASSI=wfSmdsSwGASSI, wfSmdsSwGAScrnDelete=wfSmdsSwGAScrnDelete, wfSmdsSwUsageSentOctetHigh=wfSmdsSwUsageSentOctetHigh, wfSmdsSwIAScrnSniIndex=wfSmdsSwIAScrnSniIndex, wfSmdsSwEndpDelete=wfSmdsSwEndpDelete)
