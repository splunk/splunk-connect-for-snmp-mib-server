#
# PySNMP MIB module ASCEND-MIBATMPORT-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/ASCEND-MIBATMPORT-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:10:32 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
configuration, = mibBuilder.importSymbols("ASCEND-MIB", "configuration")
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ValueRangeConstraint, SingleValueConstraint, ValueSizeConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ValueRangeConstraint", "SingleValueConstraint", "ValueSizeConstraint", "ConstraintsUnion")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
Bits, NotificationType, MibIdentifier, IpAddress, ModuleIdentity, Integer32, iso, Unsigned32, Counter32, Counter64, ObjectIdentity, TimeTicks, Gauge32, MibScalar, MibTable, MibTableRow, MibTableColumn = mibBuilder.importSymbols("SNMPv2-SMI", "Bits", "NotificationType", "MibIdentifier", "IpAddress", "ModuleIdentity", "Integer32", "iso", "Unsigned32", "Counter32", "Counter64", "ObjectIdentity", "TimeTicks", "Gauge32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
class DisplayString(OctetString):
    pass

mibatmIntfConfProfile = MibIdentifier((1, 3, 6, 1, 4, 1, 529, 23, 51))
mibatmIntfConfProfileTable = MibTable((1, 3, 6, 1, 4, 1, 529, 23, 51, 1), )
if mibBuilder.loadTexts: mibatmIntfConfProfileTable.setStatus('mandatory')
mibatmIntfConfProfileEntry = MibTableRow((1, 3, 6, 1, 4, 1, 529, 23, 51, 1, 1), ).setIndexNames((0, "ASCEND-MIBATMPORT-MIB", "atmIntfConfProfile-Shelf-o"), (0, "ASCEND-MIBATMPORT-MIB", "atmIntfConfProfile-Slot-o"), (0, "ASCEND-MIBATMPORT-MIB", "atmIntfConfProfile-Item-o"), (0, "ASCEND-MIBATMPORT-MIB", "atmIntfConfProfile-LogicalItem-o"))
if mibBuilder.loadTexts: mibatmIntfConfProfileEntry.setStatus('mandatory')
atmIntfConfProfile_Shelf_o = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 51, 1, 1, 1), Integer32()).setLabel("atmIntfConfProfile-Shelf-o").setMaxAccess("readonly")
if mibBuilder.loadTexts: atmIntfConfProfile_Shelf_o.setStatus('mandatory')
atmIntfConfProfile_Slot_o = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 51, 1, 1, 2), Integer32()).setLabel("atmIntfConfProfile-Slot-o").setMaxAccess("readonly")
if mibBuilder.loadTexts: atmIntfConfProfile_Slot_o.setStatus('mandatory')
atmIntfConfProfile_Item_o = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 51, 1, 1, 3), Integer32()).setLabel("atmIntfConfProfile-Item-o").setMaxAccess("readonly")
if mibBuilder.loadTexts: atmIntfConfProfile_Item_o.setStatus('mandatory')
atmIntfConfProfile_LogicalItem_o = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 51, 1, 1, 4), Integer32()).setLabel("atmIntfConfProfile-LogicalItem-o").setMaxAccess("readonly")
if mibBuilder.loadTexts: atmIntfConfProfile_LogicalItem_o.setStatus('mandatory')
atmIntfConfProfile_Address_PhysicalAddress_Shelf = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 51, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10))).clone(namedValues=NamedValues(("anyShelf", 1), ("shelf1", 2), ("shelf2", 3), ("shelf3", 4), ("shelf4", 5), ("shelf5", 6), ("shelf6", 7), ("shelf7", 8), ("shelf8", 9), ("shelf9", 10)))).setLabel("atmIntfConfProfile-Address-PhysicalAddress-Shelf").setMaxAccess("readwrite")
if mibBuilder.loadTexts: atmIntfConfProfile_Address_PhysicalAddress_Shelf.setStatus('mandatory')
atmIntfConfProfile_Address_PhysicalAddress_Slot = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 51, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 55, 56, 57, 58, 49, 50, 42, 53, 54, 45, 46, 51, 59))).clone(namedValues=NamedValues(("anySlot", 1), ("slot1", 2), ("slot2", 3), ("slot3", 4), ("slot4", 5), ("slot5", 6), ("slot6", 7), ("slot7", 8), ("slot8", 9), ("slot9", 10), ("slot10", 11), ("slot11", 12), ("slot12", 13), ("slot13", 14), ("slot14", 15), ("slot15", 16), ("slot16", 17), ("slot17", 18), ("slot18", 19), ("slot19", 20), ("slot20", 21), ("slot21", 22), ("slot22", 23), ("slot23", 24), ("slot24", 25), ("slot25", 26), ("slot26", 27), ("slot27", 28), ("slot28", 29), ("slot29", 30), ("slot30", 31), ("slot31", 32), ("slot32", 33), ("slot33", 34), ("slot34", 35), ("slot35", 36), ("slot36", 37), ("slot37", 38), ("slot38", 39), ("slot39", 40), ("slot40", 41), ("aLim", 55), ("bLim", 56), ("cLim", 57), ("dLim", 58), ("leftController", 49), ("rightController", 50), ("controller", 42), ("firstControlModule", 53), ("secondControlModule", 54), ("trunkModule1", 45), ("trunkModule2", 46), ("controlModule", 51), ("slotPrimary", 59)))).setLabel("atmIntfConfProfile-Address-PhysicalAddress-Slot").setMaxAccess("readwrite")
if mibBuilder.loadTexts: atmIntfConfProfile_Address_PhysicalAddress_Slot.setStatus('mandatory')
atmIntfConfProfile_Address_PhysicalAddress_ItemNumber = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 51, 1, 1, 7), Integer32()).setLabel("atmIntfConfProfile-Address-PhysicalAddress-ItemNumber").setMaxAccess("readwrite")
if mibBuilder.loadTexts: atmIntfConfProfile_Address_PhysicalAddress_ItemNumber.setStatus('mandatory')
atmIntfConfProfile_Address_LogicalItem = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 51, 1, 1, 8), Integer32()).setLabel("atmIntfConfProfile-Address-LogicalItem").setMaxAccess("readwrite")
if mibBuilder.loadTexts: atmIntfConfProfile_Address_LogicalItem.setStatus('mandatory')
atmIntfConfProfile_BaseConfig_MaxVpcs = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 51, 1, 1, 9), Integer32()).setLabel("atmIntfConfProfile-BaseConfig-MaxVpcs").setMaxAccess("readonly")
if mibBuilder.loadTexts: atmIntfConfProfile_BaseConfig_MaxVpcs.setStatus('mandatory')
atmIntfConfProfile_BaseConfig_MaxVccs = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 51, 1, 1, 10), Integer32()).setLabel("atmIntfConfProfile-BaseConfig-MaxVccs").setMaxAccess("readonly")
if mibBuilder.loadTexts: atmIntfConfProfile_BaseConfig_MaxVccs.setStatus('mandatory')
atmIntfConfProfile_BaseConfig_MaxActiveVpiBits = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 51, 1, 1, 11), Integer32()).setLabel("atmIntfConfProfile-BaseConfig-MaxActiveVpiBits").setMaxAccess("readonly")
if mibBuilder.loadTexts: atmIntfConfProfile_BaseConfig_MaxActiveVpiBits.setStatus('mandatory')
atmIntfConfProfile_BaseConfig_MaxActiveVciBits = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 51, 1, 1, 12), Integer32()).setLabel("atmIntfConfProfile-BaseConfig-MaxActiveVciBits").setMaxAccess("readonly")
if mibBuilder.loadTexts: atmIntfConfProfile_BaseConfig_MaxActiveVciBits.setStatus('mandatory')
atmIntfConfProfile_BaseConfig_IlmiVpi = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 51, 1, 1, 13), Integer32()).setLabel("atmIntfConfProfile-BaseConfig-IlmiVpi").setMaxAccess("readonly")
if mibBuilder.loadTexts: atmIntfConfProfile_BaseConfig_IlmiVpi.setStatus('mandatory')
atmIntfConfProfile_BaseConfig_IlmiVci = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 51, 1, 1, 14), Integer32()).setLabel("atmIntfConfProfile-BaseConfig-IlmiVci").setMaxAccess("readwrite")
if mibBuilder.loadTexts: atmIntfConfProfile_BaseConfig_IlmiVci.setStatus('mandatory')
atmIntfConfProfile_BaseConfig_NeighborIpAddress = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 51, 1, 1, 15), IpAddress()).setLabel("atmIntfConfProfile-BaseConfig-NeighborIpAddress").setMaxAccess("readwrite")
if mibBuilder.loadTexts: atmIntfConfProfile_BaseConfig_NeighborIpAddress.setStatus('mandatory')
atmIntfConfProfile_BaseConfig_NeighborName = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 51, 1, 1, 16), DisplayString()).setLabel("atmIntfConfProfile-BaseConfig-NeighborName").setMaxAccess("readwrite")
if mibBuilder.loadTexts: atmIntfConfProfile_BaseConfig_NeighborName.setStatus('mandatory')
atmIntfConfProfile_BaseConfig_SubscAtmAddress = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 51, 1, 1, 17), DisplayString()).setLabel("atmIntfConfProfile-BaseConfig-SubscAtmAddress").setMaxAccess("readwrite")
if mibBuilder.loadTexts: atmIntfConfProfile_BaseConfig_SubscAtmAddress.setStatus('mandatory')
atmIntfConfProfile_ExtensionConfig_ConfigType = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 51, 1, 1, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(3, 11, 13))).clone(namedValues=NamedValues(("atmfAutoConfig", 3), ("atmfPnni1dot0", 11), ("atmfUniPvcOnly", 13)))).setLabel("atmIntfConfProfile-ExtensionConfig-ConfigType").setMaxAccess("readwrite")
if mibBuilder.loadTexts: atmIntfConfProfile_ExtensionConfig_ConfigType.setStatus('mandatory')
atmIntfConfProfile_ExtensionConfig_ConfigSide = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 51, 1, 1, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(2, 3, 4))).clone(namedValues=NamedValues(("other", 2), ("user", 3), ("network", 4)))).setLabel("atmIntfConfProfile-ExtensionConfig-ConfigSide").setMaxAccess("readwrite")
if mibBuilder.loadTexts: atmIntfConfProfile_ExtensionConfig_ConfigSide.setStatus('mandatory')
atmIntfConfProfile_ExtensionConfig_IlmiAdminStatus = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 51, 1, 1, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("no", 1), ("yes", 2)))).setLabel("atmIntfConfProfile-ExtensionConfig-IlmiAdminStatus").setMaxAccess("readwrite")
if mibBuilder.loadTexts: atmIntfConfProfile_ExtensionConfig_IlmiAdminStatus.setStatus('mandatory')
atmIntfConfProfile_ExtensionConfig_IlmiConnectivity = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 51, 1, 1, 33), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("no", 1), ("yes", 2)))).setLabel("atmIntfConfProfile-ExtensionConfig-IlmiConnectivity").setMaxAccess("readwrite")
if mibBuilder.loadTexts: atmIntfConfProfile_ExtensionConfig_IlmiConnectivity.setStatus('mandatory')
atmIntfConfProfile_ExtensionConfig_ConnEstabInterval = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 51, 1, 1, 21), Integer32()).setLabel("atmIntfConfProfile-ExtensionConfig-ConnEstabInterval").setMaxAccess("readwrite")
if mibBuilder.loadTexts: atmIntfConfProfile_ExtensionConfig_ConnEstabInterval.setStatus('mandatory')
atmIntfConfProfile_ExtensionConfig_LossDetectInterval = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 51, 1, 1, 22), Integer32()).setLabel("atmIntfConfProfile-ExtensionConfig-LossDetectInterval").setMaxAccess("readwrite")
if mibBuilder.loadTexts: atmIntfConfProfile_ExtensionConfig_LossDetectInterval.setStatus('mandatory')
atmIntfConfProfile_ExtensionConfig_PollInactFactor = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 51, 1, 1, 23), Integer32()).setLabel("atmIntfConfProfile-ExtensionConfig-PollInactFactor").setMaxAccess("readwrite")
if mibBuilder.loadTexts: atmIntfConfProfile_ExtensionConfig_PollInactFactor.setStatus('mandatory')
atmIntfConfProfile_ExtensionConfig_DeviceType = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 51, 1, 1, 24), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(2, 3, 4))).clone(namedValues=NamedValues(("other", 2), ("public", 3), ("private", 4)))).setLabel("atmIntfConfProfile-ExtensionConfig-DeviceType").setMaxAccess("readwrite")
if mibBuilder.loadTexts: atmIntfConfProfile_ExtensionConfig_DeviceType.setStatus('mandatory')
atmIntfConfProfile_ExtensionConfig_MaxSwitchedVpcVpi = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 51, 1, 1, 25), Integer32()).setLabel("atmIntfConfProfile-ExtensionConfig-MaxSwitchedVpcVpi").setMaxAccess("readwrite")
if mibBuilder.loadTexts: atmIntfConfProfile_ExtensionConfig_MaxSwitchedVpcVpi.setStatus('mandatory')
atmIntfConfProfile_ExtensionConfig_MaxSwitchedVccVpi = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 51, 1, 1, 26), Integer32()).setLabel("atmIntfConfProfile-ExtensionConfig-MaxSwitchedVccVpi").setMaxAccess("readwrite")
if mibBuilder.loadTexts: atmIntfConfProfile_ExtensionConfig_MaxSwitchedVccVpi.setStatus('mandatory')
atmIntfConfProfile_ExtensionConfig_MinSwitchedVccVci = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 51, 1, 1, 27), Integer32()).setLabel("atmIntfConfProfile-ExtensionConfig-MinSwitchedVccVci").setMaxAccess("readwrite")
if mibBuilder.loadTexts: atmIntfConfProfile_ExtensionConfig_MinSwitchedVccVci.setStatus('mandatory')
atmIntfConfProfile_ExtensionConfig_SigVccRxQosName = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 51, 1, 1, 28), DisplayString()).setLabel("atmIntfConfProfile-ExtensionConfig-SigVccRxQosName").setMaxAccess("readwrite")
if mibBuilder.loadTexts: atmIntfConfProfile_ExtensionConfig_SigVccRxQosName.setStatus('mandatory')
atmIntfConfProfile_ExtensionConfig_SigVccTxQosName = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 51, 1, 1, 29), DisplayString()).setLabel("atmIntfConfProfile-ExtensionConfig-SigVccTxQosName").setMaxAccess("readwrite")
if mibBuilder.loadTexts: atmIntfConfProfile_ExtensionConfig_SigVccTxQosName.setStatus('mandatory')
atmIntfConfProfile_ExtensionConfig_PvcFailureTrapEnabled = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 51, 1, 1, 30), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("no", 1), ("yes", 2)))).setLabel("atmIntfConfProfile-ExtensionConfig-PvcFailureTrapEnabled").setMaxAccess("readwrite")
if mibBuilder.loadTexts: atmIntfConfProfile_ExtensionConfig_PvcFailureTrapEnabled.setStatus('mandatory')
atmIntfConfProfile_ExtensionConfig_PvcFailureIntvl = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 51, 1, 1, 31), Integer32()).setLabel("atmIntfConfProfile-ExtensionConfig-PvcFailureIntvl").setMaxAccess("readwrite")
if mibBuilder.loadTexts: atmIntfConfProfile_ExtensionConfig_PvcFailureIntvl.setStatus('mandatory')
atmIntfConfProfile_Action_o = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 51, 1, 1, 32), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("noAction", 1), ("createProfile", 2), ("deleteProfile", 3)))).setLabel("atmIntfConfProfile-Action-o").setMaxAccess("readwrite")
if mibBuilder.loadTexts: atmIntfConfProfile_Action_o.setStatus('mandatory')
mibBuilder.exportSymbols("ASCEND-MIBATMPORT-MIB", atmIntfConfProfile_Item_o=atmIntfConfProfile_Item_o, atmIntfConfProfile_Address_PhysicalAddress_ItemNumber=atmIntfConfProfile_Address_PhysicalAddress_ItemNumber, atmIntfConfProfile_ExtensionConfig_SigVccTxQosName=atmIntfConfProfile_ExtensionConfig_SigVccTxQosName, atmIntfConfProfile_BaseConfig_MaxActiveVpiBits=atmIntfConfProfile_BaseConfig_MaxActiveVpiBits, DisplayString=DisplayString, atmIntfConfProfile_Action_o=atmIntfConfProfile_Action_o, atmIntfConfProfile_ExtensionConfig_ConfigSide=atmIntfConfProfile_ExtensionConfig_ConfigSide, atmIntfConfProfile_ExtensionConfig_PvcFailureIntvl=atmIntfConfProfile_ExtensionConfig_PvcFailureIntvl, atmIntfConfProfile_ExtensionConfig_DeviceType=atmIntfConfProfile_ExtensionConfig_DeviceType, atmIntfConfProfile_BaseConfig_MaxVpcs=atmIntfConfProfile_BaseConfig_MaxVpcs, atmIntfConfProfile_Shelf_o=atmIntfConfProfile_Shelf_o, atmIntfConfProfile_BaseConfig_NeighborName=atmIntfConfProfile_BaseConfig_NeighborName, mibatmIntfConfProfileEntry=mibatmIntfConfProfileEntry, atmIntfConfProfile_Slot_o=atmIntfConfProfile_Slot_o, atmIntfConfProfile_ExtensionConfig_PollInactFactor=atmIntfConfProfile_ExtensionConfig_PollInactFactor, atmIntfConfProfile_Address_PhysicalAddress_Slot=atmIntfConfProfile_Address_PhysicalAddress_Slot, atmIntfConfProfile_BaseConfig_MaxActiveVciBits=atmIntfConfProfile_BaseConfig_MaxActiveVciBits, atmIntfConfProfile_LogicalItem_o=atmIntfConfProfile_LogicalItem_o, atmIntfConfProfile_ExtensionConfig_MaxSwitchedVpcVpi=atmIntfConfProfile_ExtensionConfig_MaxSwitchedVpcVpi, atmIntfConfProfile_ExtensionConfig_MinSwitchedVccVci=atmIntfConfProfile_ExtensionConfig_MinSwitchedVccVci, atmIntfConfProfile_BaseConfig_MaxVccs=atmIntfConfProfile_BaseConfig_MaxVccs, atmIntfConfProfile_ExtensionConfig_SigVccRxQosName=atmIntfConfProfile_ExtensionConfig_SigVccRxQosName, atmIntfConfProfile_ExtensionConfig_ConnEstabInterval=atmIntfConfProfile_ExtensionConfig_ConnEstabInterval, atmIntfConfProfile_BaseConfig_IlmiVpi=atmIntfConfProfile_BaseConfig_IlmiVpi, mibatmIntfConfProfile=mibatmIntfConfProfile, atmIntfConfProfile_Address_PhysicalAddress_Shelf=atmIntfConfProfile_Address_PhysicalAddress_Shelf, mibatmIntfConfProfileTable=mibatmIntfConfProfileTable, atmIntfConfProfile_BaseConfig_IlmiVci=atmIntfConfProfile_BaseConfig_IlmiVci, atmIntfConfProfile_ExtensionConfig_PvcFailureTrapEnabled=atmIntfConfProfile_ExtensionConfig_PvcFailureTrapEnabled, atmIntfConfProfile_ExtensionConfig_MaxSwitchedVccVpi=atmIntfConfProfile_ExtensionConfig_MaxSwitchedVccVpi, atmIntfConfProfile_ExtensionConfig_ConfigType=atmIntfConfProfile_ExtensionConfig_ConfigType, atmIntfConfProfile_BaseConfig_SubscAtmAddress=atmIntfConfProfile_BaseConfig_SubscAtmAddress, atmIntfConfProfile_ExtensionConfig_LossDetectInterval=atmIntfConfProfile_ExtensionConfig_LossDetectInterval, atmIntfConfProfile_ExtensionConfig_IlmiConnectivity=atmIntfConfProfile_ExtensionConfig_IlmiConnectivity, atmIntfConfProfile_BaseConfig_NeighborIpAddress=atmIntfConfProfile_BaseConfig_NeighborIpAddress, atmIntfConfProfile_Address_LogicalItem=atmIntfConfProfile_Address_LogicalItem, atmIntfConfProfile_ExtensionConfig_IlmiAdminStatus=atmIntfConfProfile_ExtensionConfig_IlmiAdminStatus)
