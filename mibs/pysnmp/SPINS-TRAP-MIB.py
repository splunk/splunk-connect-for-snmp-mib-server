#
# PySNMP MIB module SPINS-TRAP-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/SPINS-TRAP-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 21:02:35 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, SingleValueConstraint, ConstraintsUnion, ValueRangeConstraint, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "SingleValueConstraint", "ConstraintsUnion", "ValueRangeConstraint", "ValueSizeConstraint")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
ObjectName, ModuleIdentity, Counter32, iso, enterprises, Unsigned32, TimeTicks, Bits, ObjectIdentity, IpAddress, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter64, MibIdentifier, Gauge32, snmpModules, NotificationType, Integer32 = mibBuilder.importSymbols("SNMPv2-SMI", "ObjectName", "ModuleIdentity", "Counter32", "iso", "enterprises", "Unsigned32", "TimeTicks", "Bits", "ObjectIdentity", "IpAddress", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter64", "MibIdentifier", "Gauge32", "snmpModules", "NotificationType", "Integer32")
DisplayString, TimeStamp, TestAndIncr, RowStatus, TextualConvention, TruthValue = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TimeStamp", "TestAndIncr", "RowStatus", "TextualConvention", "TruthValue")
lucent = MibIdentifier((1, 3, 6, 1, 4, 1, 1751))
products = MibIdentifier((1, 3, 6, 1, 4, 1, 1751, 1))
softSwitch = MibIdentifier((1, 3, 6, 1, 4, 1, 1751, 1, 1198))
spinsDeviceServer = MibIdentifier((1, 3, 6, 1, 4, 1, 1751, 1, 1198, 8))
spinsTraps = ModuleIdentity((1, 3, 6, 1, 4, 1, 1751, 1, 1198, 8, 0))
if mibBuilder.loadTexts: spinsTraps.setLastUpdated('240701')
if mibBuilder.loadTexts: spinsTraps.setOrganization('Lucent Technologies')
spinsSmbiSocketConnError = NotificationType((1, 3, 6, 1, 4, 1, 1751, 1, 1198, 8, 0, 0))
if mibBuilder.loadTexts: spinsSmbiSocketConnError.setStatus('current')
spinsSmbiSocketConnOpen = NotificationType((1, 3, 6, 1, 4, 1, 1751, 1, 1198, 8, 0, 1))
if mibBuilder.loadTexts: spinsSmbiSocketConnOpen.setStatus('current')
spinsSbiSocketConnLost = NotificationType((1, 3, 6, 1, 4, 1, 1751, 1, 1198, 8, 0, 2))
if mibBuilder.loadTexts: spinsSbiSocketConnLost.setStatus('current')
spinsSwitchRegnError = NotificationType((1, 3, 6, 1, 4, 1, 1751, 1, 1198, 8, 0, 3))
if mibBuilder.loadTexts: spinsSwitchRegnError.setStatus('current')
spinsSwitchRegnSucc = NotificationType((1, 3, 6, 1, 4, 1, 1751, 1, 1198, 8, 0, 4))
if mibBuilder.loadTexts: spinsSwitchRegnSucc.setStatus('current')
spinsAddLLCNodeError = NotificationType((1, 3, 6, 1, 4, 1, 1751, 1, 1198, 8, 0, 5))
if mibBuilder.loadTexts: spinsAddLLCNodeError.setStatus('current')
spinsAddLLCNodeSucc = NotificationType((1, 3, 6, 1, 4, 1, 1751, 1, 1198, 8, 0, 6))
if mibBuilder.loadTexts: spinsAddLLCNodeSucc.setStatus('current')
mibBuilder.exportSymbols("SPINS-TRAP-MIB", spinsAddLLCNodeSucc=spinsAddLLCNodeSucc, spinsDeviceServer=spinsDeviceServer, lucent=lucent, spinsSmbiSocketConnOpen=spinsSmbiSocketConnOpen, spinsSbiSocketConnLost=spinsSbiSocketConnLost, products=products, spinsSwitchRegnError=spinsSwitchRegnError, PYSNMP_MODULE_ID=spinsTraps, spinsAddLLCNodeError=spinsAddLLCNodeError, spinsSmbiSocketConnError=spinsSmbiSocketConnError, spinsTraps=spinsTraps, spinsSwitchRegnSucc=spinsSwitchRegnSucc, softSwitch=softSwitch)
