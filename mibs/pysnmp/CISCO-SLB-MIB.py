#
# PySNMP MIB module CISCO-SLB-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CISCO-SLB-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:39:25 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, SingleValueConstraint, ValueRangeConstraint, ConstraintsIntersection, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "SingleValueConstraint", "ValueRangeConstraint", "ConstraintsIntersection", "ConstraintsUnion")
ciscoMgmt, = mibBuilder.importSymbols("CISCO-SMI", "ciscoMgmt")
CiscoIpProtocol, CiscoPort = mibBuilder.importSymbols("CISCO-TC", "CiscoIpProtocol", "CiscoPort")
entPhysicalParentRelPos, = mibBuilder.importSymbols("ENTITY-MIB", "entPhysicalParentRelPos")
InetAddressType, InetPortNumber, InetAddress, InetAddressPrefixLength = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddressType", "InetPortNumber", "InetAddress", "InetAddressPrefixLength")
SnmpAdminString, = mibBuilder.importSymbols("SNMP-FRAMEWORK-MIB", "SnmpAdminString")
NotificationGroup, ModuleCompliance, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance", "ObjectGroup")
TimeTicks, iso, Gauge32, MibIdentifier, IpAddress, NotificationType, Counter64, ObjectIdentity, ModuleIdentity, Bits, Unsigned32, Counter32, MibScalar, MibTable, MibTableRow, MibTableColumn, Integer32 = mibBuilder.importSymbols("SNMPv2-SMI", "TimeTicks", "iso", "Gauge32", "MibIdentifier", "IpAddress", "NotificationType", "Counter64", "ObjectIdentity", "ModuleIdentity", "Bits", "Unsigned32", "Counter32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Integer32")
StorageType, TruthValue, RowStatus, DisplayString, TimeInterval, DateAndTime, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "StorageType", "TruthValue", "RowStatus", "DisplayString", "TimeInterval", "DateAndTime", "TextualConvention")
ciscoSlbMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 9, 9, 161))
ciscoSlbMIB.setRevisions(('2008-05-15 00:00', '2008-04-15 00:00', '2008-02-12 00:00', '2007-06-20 00:00', '2007-04-20 00:00', '2006-10-26 00:00', '2006-01-13 00:00', '2005-03-31 00:00', '2002-03-18 00:00', '2002-01-15 15:00', '2000-10-20 00:00', '2000-05-08 00:00',))
if mibBuilder.loadTexts: ciscoSlbMIB.setLastUpdated('200805150000Z')
if mibBuilder.loadTexts: ciscoSlbMIB.setOrganization('Cisco Systems, Inc.')
ciscoSlbMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 161, 1))
slbStats = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 161, 1, 1))
slbServerFarms = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 161, 1, 2))
slbRealServers = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 161, 1, 3))
slbVirtualServers = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 161, 1, 4))
slbConnections = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 161, 1, 5))
slbVirtualClients = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 161, 1, 6))
slbStickyObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 161, 1, 7))
slbNotificationObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 161, 1, 8))
slbDfpPassword = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 161, 1, 9))
slbDfpAgents = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 161, 1, 10))
slbDfpReal = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 161, 1, 11))
slbSasp = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 161, 1, 12))
slbSaspAgents = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 161, 1, 13))
slbSaspGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 161, 1, 14))
slbSaspMembers = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 161, 1, 15))
slbSaspStats = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 161, 1, 16))
class SlbServerString(TextualConvention, OctetString):
    status = 'current'
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(1, 96)

class SlbPasswordString(TextualConvention, OctetString):
    status = 'current'
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(0, 32)

class SlbConnectionState(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11))
    namedValues = NamedValues(("init", 1), ("synClient", 2), ("synServer", 3), ("synBoth", 4), ("estab", 5), ("finClient", 6), ("finServer", 7), ("closing", 8), ("zombie", 9), ("conclient", 10), ("conserver", 11))

class SlbPredictor(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14))
    namedValues = NamedValues(("roundRobin", 1), ("leastConns", 2), ("ipHash", 3), ("ipHashSrc", 4), ("ipHashDest", 5), ("urlHash", 6), ("forward", 7), ("leastLoaded", 8), ("httpCookieHash", 9), ("httpHeaderHash", 10), ("layer4PayloadHash", 11), ("responseTime", 12), ("leastBandwidth", 13), ("httpContentHash", 14))

class SlbRealServerState(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18))
    namedValues = NamedValues(("outOfService", 1), ("inService", 2), ("failed", 3), ("readyToTest", 4), ("testing", 5), ("maxConnsThrottle", 6), ("maxClientsThrottle", 7), ("dfpThrottle", 8), ("probeFailed", 9), ("probeTesting", 10), ("operWait", 11), ("testWait", 12), ("inbandProbeFailed", 13), ("returnCodeFailed", 14), ("arpFailed", 15), ("standby", 16), ("inactive", 17), ("maxLoad", 18))

class SlbVirtualServState(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))
    namedValues = NamedValues(("outOfService", 1), ("inService", 2), ("standby", 3), ("inOperReal", 4), ("stbInOperReal", 5), ("testReal", 6), ("outOfMemory", 7))

class SlbVirtualService(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))
    namedValues = NamedValues(("none", 1), ("ftp", 2), ("wsp", 3), ("gtp", 4), ("rtsp", 5))

class SlbDfpAgentState(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))
    namedValues = NamedValues(("notOpen", 1), ("trying", 2), ("connecting", 3), ("open", 4), ("failed", 5), ("securityError", 6))

class SlbSaspLBHealth(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10))
    namedValues = NamedValues(("other", 1), ("idle", 2), ("down", 3), ("saturated", 4), ("overUsed", 5), ("msgLimitReached", 6), ("heavyLoad", 7), ("moderateLoad", 8), ("lightLoad", 9), ("healthy", 10))

class SlbSaspRedundancy(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3))
    namedValues = NamedValues(("other", 1), ("master", 2), ("backup", 3))

class SlbSaspAgentState(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9))
    namedValues = NamedValues(("other", 1), ("initialized", 2), ("closed", 3), ("trying", 4), ("connecting", 5), ("established", 6), ("downTrying", 7), ("downDuplicate", 8), ("down", 9))

class SlbNatSetting(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))
    namedValues = NamedValues(("noNat", 1), ("clientNat", 2), ("serverNat", 3), ("clientAndServerNat", 4))

slbStatsTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 161, 1, 1, 1), )
if mibBuilder.loadTexts: slbStatsTable.setStatus('current')
slbStatsTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 161, 1, 1, 1, 1), ).setIndexNames((0, "CISCO-SLB-MIB", "slbEntity"))
if mibBuilder.loadTexts: slbStatsTableEntry.setStatus('current')
slbEntity = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 161, 1, 1, 1, 1, 1), Unsigned32())
if mibBuilder.loadTexts: slbEntity.setStatus('current')
slbStatsUnassistedSwitchingPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 161, 1, 1, 1, 1, 2), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: slbStatsUnassistedSwitchingPkts.setStatus('current')
slbStatsUnassistedSwitchingHCPks = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 161, 1, 1, 1, 1, 3), Counter64()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: slbStatsUnassistedSwitchingHCPks.setStatus('current')
slbStatsAssistedSwitchingPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 161, 1, 1, 1, 1, 4), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: slbStatsAssistedSwitchingPkts.setStatus('current')
slbStatsAssistedSwitchingHCPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 161, 1, 1, 1, 1, 5), Counter64()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: slbStatsAssistedSwitchingHCPkts.setStatus('current')
slbStatsCreatedConnections = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 161, 1, 1, 1, 1, 6), Counter32()).setUnits('connections').setMaxAccess("readonly")
if mibBuilder.loadTexts: slbStatsCreatedConnections.setStatus('current')
slbStatsCreatedHCConnections = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 161, 1, 1, 1, 1, 7), Counter64()).setUnits('connections').setMaxAccess("readonly")
if mibBuilder.loadTexts: slbStatsCreatedHCConnections.setStatus('current')
slbStatsEstablishedConnections = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 161, 1, 1, 1, 1, 8), Counter32()).setUnits('connections').setMaxAccess("readonly")
if mibBuilder.loadTexts: slbStatsEstablishedConnections.setStatus('current')
slbStatsEstablishedHCConnections = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 161, 1, 1, 1, 1, 9), Counter64()).setUnits('connections').setMaxAccess("readonly")
if mibBuilder.loadTexts: slbStatsEstablishedHCConnections.setStatus('current')
slbStatsDestroyedConnections = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 161, 1, 1, 1, 1, 10), Counter32()).setUnits('connections').setMaxAccess("readonly")
if mibBuilder.loadTexts: slbStatsDestroyedConnections.setStatus('current')
slbStatsDestroyedHCConnections = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 161, 1, 1, 1, 1, 11), Counter64()).setUnits('connections').setMaxAccess("readonly")
if mibBuilder.loadTexts: slbStatsDestroyedHCConnections.setStatus('current')
slbStatsReassignedConnections = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 161, 1, 1, 1, 1, 12), Counter32()).setUnits('connections').setMaxAccess("readonly")
if mibBuilder.loadTexts: slbStatsReassignedConnections.setStatus('current')
slbStatsReassignedHCConnections = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 161, 1, 1, 1, 1, 13), Counter64()).setUnits('connections').setMaxAccess("readonly")
if mibBuilder.loadTexts: slbStatsReassignedHCConnections.setStatus('current')
slbStatsZombies = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 161, 1, 1, 1, 1, 14), Counter32()).setUnits('zombies').setMaxAccess("readonly")
if mibBuilder.loadTexts: slbStatsZombies.setStatus('current')
slbStatsHCZombies = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 161, 1, 1, 1, 1, 15), Counter64()).setUnits('zombies').setMaxAccess("readonly")
if mibBuilder.loadTexts: slbStatsHCZombies.setStatus('current')
slbServerFarmTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 161, 1, 2, 1), )
if mibBuilder.loadTexts: slbServerFarmTable.setStatus('current')
slbServerFarmTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 161, 1, 2, 1, 1), ).setIndexNames((0, "CISCO-SLB-MIB", "slbEntity"), (0, "CISCO-SLB-MIB", "slbServerFarmName"))
if mibBuilder.loadTexts: slbServerFarmTableEntry.setStatus('current')
slbServerFarmName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 161, 1, 2, 1, 1, 1), SlbServerString())
if mibBuilder.loadTexts: slbServerFarmName.setStatus('current')
slbServerFarmPredictor = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 161, 1, 2, 1, 1, 2), SlbPredictor().clone('roundRobin')).setMaxAccess("readonly")
if mibBuilder.loadTexts: slbServerFarmPredictor.setStatus('current')
slbServerFarmNat = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 161, 1, 2, 1, 1, 3), SlbNatSetting().clone('noNat')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: slbServerFarmNat.setStatus('current')
slbServerFarmNumberOfRealServers = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 161, 1, 2, 1, 1, 4), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: slbServerFarmNumberOfRealServers.setStatus('current')
slbServerFarmBindId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 161, 1, 2, 1, 1, 5), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: slbServerFarmBindId.setStatus('current')
slbServerFarmRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 161, 1, 2, 1, 1, 6), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: slbServerFarmRowStatus.setStatus('current')
slbRealTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 161, 1, 3, 1), )
if mibBuilder.loadTexts: slbRealTable.setStatus('current')
slbRealTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 161, 1, 3, 1, 1), ).setIndexNames((0, "CISCO-SLB-MIB", "slbEntity"), (0, "CISCO-SLB-MIB", "slbRealServerFarmName"), (0, "CISCO-SLB-MIB", "slbRealIpAddress"), (0, "CISCO-SLB-MIB", "slbRealPort"))
if mibBuilder.loadTexts: slbRealTableEntry.setStatus('current')
slbRealServerFarmName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 161, 1, 3, 1, 1, 1), SlbServerString())
if mibBuilder.loadTexts: slbRealServerFarmName.setStatus('current')
slbRealIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 161, 1, 3, 1, 1, 2), IpAddress())
if mibBuilder.loadTexts: slbRealIpAddress.setStatus('current')
slbRealPort = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 161, 1, 3, 1, 1, 3), CiscoPort())
if mibBuilder.loadTexts: slbRealPort.setStatus('current')
slbRealState = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 161, 1, 3, 1, 1, 4), SlbRealServerState().clone('outOfService')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: slbRealState.setStatus('current')
slbRealNumberOfConnections = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 161, 1, 3, 1, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: slbRealNumberOfConnections.setStatus('current')
slbRealNumberOfDummyConnections = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 161, 1, 3, 1, 1, 6), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: slbRealNumberOfDummyConnections.setStatus('current')
slbRealMaxConnections = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 161, 1, 3, 1, 1, 7), Unsigned32().clone(4294967295)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: slbRealMaxConnections.setStatus('current')
slbRealAdminWeight = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 161, 1, 3, 1, 1, 8), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)).clone(8)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: slbRealAdminWeight.setStatus('current')
slbRealOperWeight = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 161, 1, 3, 1, 1, 9), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: slbRealOperWeight.setStatus('current')
slbRealMetric = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 161, 1, 3, 1, 1, 10), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: slbRealMetric.setStatus('current')
slbRealReassign = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 161, 1, 3, 1, 1, 11), Unsigned32().clone(3)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: slbRealReassign.setStatus('current')
slbRealRetryInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 161, 1, 3, 1, 1, 12), TimeInterval().clone(60)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: slbRealRetryInterval.setStatus('current')
slbRealFailedConnections = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 161, 1, 3, 1, 1, 13), Unsigned32().clone(8)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: slbRealFailedConnections.setStatus('current')
slbRealFailedClients = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 161, 1, 3, 1, 1, 14), Unsigned32().clone(8)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: slbRealFailedClients.setStatus('current')
slbRealConsecutiveFails = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 161, 1, 3, 1, 1, 15), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: slbRealConsecutiveFails.setStatus('current')
slbRealTotalFails = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 161, 1, 3, 1, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: slbRealTotalFails.setStatus('current')
slbRealRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 161, 1, 3, 1, 1, 17), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: slbRealRowStatus.setStatus('current')
slbRealTotalConnections = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 161, 1, 3, 1, 1, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: slbRealTotalConnections.setStatus('current')
slbRealHCTotalConnections = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 161, 1, 3, 1, 1, 19), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: slbRealHCTotalConnections.setStatus('current')
slbVirtualServerTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 161, 1, 4, 1), )
if mibBuilder.loadTexts: slbVirtualServerTable.setStatus('current')
slbVirtualServerTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 161, 1, 4, 1, 1), ).setIndexNames((0, "CISCO-SLB-MIB", "slbEntity"), (0, "CISCO-SLB-MIB", "slbVirtualServerName"))
if mibBuilder.loadTexts: slbVirtualServerTableEntry.setStatus('current')
slbVirtualServerName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 161, 1, 4, 1, 1, 1), SlbServerString())
if mibBuilder.loadTexts: slbVirtualServerName.setStatus('current')
slbVirtualServerState = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 161, 1, 4, 1, 1, 2), SlbVirtualServState().clone('outOfService')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: slbVirtualServerState.setStatus('current')
slbVirtualIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 161, 1, 4, 1, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: slbVirtualIndex.setStatus('current')
slbVirtualIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 161, 1, 4, 1, 1, 4), IpAddress().clone(hexValue="00000000")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: slbVirtualIpAddress.setStatus('current')
slbVirtualPort = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 161, 1, 4, 1, 1, 5), CiscoPort()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: slbVirtualPort.setStatus('current')
slbVirtualProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 161, 1, 4, 1, 1, 6), CiscoIpProtocol()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: slbVirtualProtocol.setStatus('current')
slbVirtualService = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 161, 1, 4, 1, 1, 7), SlbVirtualService().clone('none')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: slbVirtualService.setStatus('current')
slbVirtualAdvertise = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 161, 1, 4, 1, 1, 8), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: slbVirtualAdvertise.setStatus('current')
slbVirtualFarmName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 161, 1, 4, 1, 1, 9), SlbServerString().clone('               ')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: slbVirtualFarmName.setStatus('current')
slbVirtualDelayTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 161, 1, 4, 1, 1, 10), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 600)).clone(10)).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: slbVirtualDelayTimer.setStatus('current')
slbVirtualIdleTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 161, 1, 4, 1, 1, 11), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(10, 65535)).clone(3600)).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: slbVirtualIdleTimer.setStatus('current')
slbVirtualStickyTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 161, 1, 4, 1, 1, 12), TimeInterval()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: slbVirtualStickyTimer.setStatus('current')
slbVirtualStickyGroup = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 161, 1, 4, 1, 1, 13), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: slbVirtualStickyGroup.setStatus('current')
slbVirtualSynguardCount = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 161, 1, 4, 1, 1, 14), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: slbVirtualSynguardCount.setStatus('current')
slbVirtualSynguardPeriod = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 161, 1, 4, 1, 1, 15), Unsigned32()).setUnits('milliseconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: slbVirtualSynguardPeriod.setStatus('current')
slbVirtualRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 161, 1, 4, 1, 1, 16), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: slbVirtualRowStatus.setStatus('current')
slbVirtualNumberOfConnections = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 161, 1, 4, 1, 1, 17), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: slbVirtualNumberOfConnections.setStatus('current')
slbVirtualTotalConnections = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 161, 1, 4, 1, 1, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: slbVirtualTotalConnections.setStatus('current')
slbVirtualHCTotalConnections = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 161, 1, 4, 1, 1, 19), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: slbVirtualHCTotalConnections.setStatus('current')
slbVirtualMask = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 161, 1, 4, 1, 1, 20), IpAddress().clone(hexValue="FFFFFFFF")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: slbVirtualMask.setStatus('current')
slbVServerInfoTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 161, 1, 4, 2), )
if mibBuilder.loadTexts: slbVServerInfoTable.setStatus('current')
slbVServerInfoTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 161, 1, 4, 2, 1), ).setIndexNames((0, "CISCO-SLB-MIB", "slbEntity"), (0, "CISCO-SLB-MIB", "slbVServerIndex"))
if mibBuilder.loadTexts: slbVServerInfoTableEntry.setStatus('current')
slbVServerIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 161, 1, 4, 2, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295)))
if mibBuilder.loadTexts: slbVServerIndex.setStatus('current')
slbVServerClassMap = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 161, 1, 4, 2, 1, 2), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: slbVServerClassMap.setStatus('current')
slbVServerPolicyMap = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 161, 1, 4, 2, 1, 3), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: slbVServerPolicyMap.setStatus('current')
slbVServerState = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 161, 1, 4, 2, 1, 4), SlbVirtualServState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: slbVServerState.setStatus('current')
slbVServerStateChangeDescr = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 161, 1, 4, 2, 1, 5), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: slbVServerStateChangeDescr.setStatus('current')
slbVServerNumberOfConnections = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 161, 1, 4, 2, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: slbVServerNumberOfConnections.setStatus('current')
slbVServerTotalConnections = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 161, 1, 4, 2, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: slbVServerTotalConnections.setStatus('current')
slbVServerDroppedConnections = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 161, 1, 4, 2, 1, 8), Counter32()).setUnits('connections').setMaxAccess("readonly")
if mibBuilder.loadTexts: slbVServerDroppedConnections.setStatus('current')
slbVServerClientPacketCounts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 161, 1, 4, 2, 1, 9), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: slbVServerClientPacketCounts.setStatus('current')
slbVServerPacketCounts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 161, 1, 4, 2, 1, 10), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: slbVServerPacketCounts.setStatus('current')
slbVServerClientByteCounts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 161, 1, 4, 2, 1, 11), Counter64()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: slbVServerClientByteCounts.setStatus('current')
slbVServerByteCounts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 161, 1, 4, 2, 1, 12), Counter64()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: slbVServerByteCounts.setStatus('current')
slbVServerMaxConnLimitDropCounts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 161, 1, 4, 2, 1, 13), Counter32()).setUnits('connections').setMaxAccess("readonly")
if mibBuilder.loadTexts: slbVServerMaxConnLimitDropCounts.setStatus('current')
slbVServerConnRateLimitDropCounts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 161, 1, 4, 2, 1, 14), Counter32()).setUnits('connections').setMaxAccess("readonly")
if mibBuilder.loadTexts: slbVServerConnRateLimitDropCounts.setStatus('current')
slbVServerBWRateLimitDropCounts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 161, 1, 4, 2, 1, 15), Counter32()).setUnits('connections').setMaxAccess("readonly")
if mibBuilder.loadTexts: slbVServerBWRateLimitDropCounts.setStatus('deprecated')
slbVServerBandWidthRateLimitDropCounts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 161, 1, 4, 2, 1, 16), Counter32()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: slbVServerBandWidthRateLimitDropCounts.setStatus('current')
slbVServerL4Decisions = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 161, 1, 4, 2, 1, 17), Counter32()).setUnits('connections').setMaxAccess("readonly")
if mibBuilder.loadTexts: slbVServerL4Decisions.setStatus('current')
slbVServerL7Decisions = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 161, 1, 4, 2, 1, 18), Counter32()).setUnits('connections').setMaxAccess("readonly")
if mibBuilder.loadTexts: slbVServerL7Decisions.setStatus('current')
slbVServerEstablishedConnections = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 161, 1, 4, 2, 1, 19), Gauge32()).setUnits('connections').setMaxAccess("readonly")
if mibBuilder.loadTexts: slbVServerEstablishedConnections.setStatus('current')
slbVServerIPTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 161, 1, 4, 3), )
if mibBuilder.loadTexts: slbVServerIPTable.setStatus('current')
slbVServerIPTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 161, 1, 4, 3, 1), ).setIndexNames((0, "CISCO-SLB-MIB", "slbEntity"), (0, "CISCO-SLB-MIB", "slbVServerIndex"), (0, "CISCO-SLB-MIB", "slbVServerObjectIndex"))
if mibBuilder.loadTexts: slbVServerIPTableEntry.setStatus('current')
slbVServerObjectIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 161, 1, 4, 3, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295)))
if mibBuilder.loadTexts: slbVServerObjectIndex.setStatus('current')
slbVServerIpAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 161, 1, 4, 3, 1, 2), InetAddressType().clone('ipv4')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: slbVServerIpAddressType.setStatus('current')
slbVServerIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 161, 1, 4, 3, 1, 3), InetAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: slbVServerIpAddress.setStatus('current')
slbVServerIpMask = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 161, 1, 4, 3, 1, 4), InetAddressPrefixLength()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: slbVServerIpMask.setStatus('current')
slbVServerProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 161, 1, 4, 3, 1, 5), CiscoIpProtocol()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: slbVServerProtocol.setStatus('current')
slbVServerPortLow = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 161, 1, 4, 3, 1, 6), InetPortNumber()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: slbVServerPortLow.setStatus('current')
slbVServerPortHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 161, 1, 4, 3, 1, 7), InetPortNumber()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: slbVServerPortHigh.setStatus('current')
slbVServerStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 161, 1, 4, 3, 1, 8), StorageType().clone('volatile')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: slbVServerStorageType.setStatus('current')
slbVServerRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 161, 1, 4, 3, 1, 9), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: slbVServerRowStatus.setStatus('current')
slbConnectionTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 161, 1, 5, 1), )
if mibBuilder.loadTexts: slbConnectionTable.setStatus('current')
slbConnectionTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 161, 1, 5, 1, 1), ).setIndexNames((0, "CISCO-SLB-MIB", "slbEntity"), (0, "CISCO-SLB-MIB", "slbConnectionIndex"), (0, "CISCO-SLB-MIB", "slbConnectionVirtualIpAddress"), (0, "CISCO-SLB-MIB", "slbConnectionVirtualPort"), (0, "CISCO-SLB-MIB", "slbConnectionProtocol"), (0, "CISCO-SLB-MIB", "slbConnectionClientIpAddr"), (0, "CISCO-SLB-MIB", "slbConnectionClientPort"))
if mibBuilder.loadTexts: slbConnectionTableEntry.setStatus('current')
slbConnectionIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 161, 1, 5, 1, 1, 1), Unsigned32())
if mibBuilder.loadTexts: slbConnectionIndex.setStatus('current')
slbConnectionVirtualIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 161, 1, 5, 1, 1, 2), IpAddress())
if mibBuilder.loadTexts: slbConnectionVirtualIpAddress.setStatus('current')
slbConnectionVirtualPort = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 161, 1, 5, 1, 1, 3), CiscoPort())
if mibBuilder.loadTexts: slbConnectionVirtualPort.setStatus('current')
slbConnectionProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 161, 1, 5, 1, 1, 4), CiscoIpProtocol())
if mibBuilder.loadTexts: slbConnectionProtocol.setStatus('current')
slbConnectionClientIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 161, 1, 5, 1, 1, 5), IpAddress())
if mibBuilder.loadTexts: slbConnectionClientIpAddr.setStatus('current')
slbConnectionClientPort = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 161, 1, 5, 1, 1, 6), CiscoPort())
if mibBuilder.loadTexts: slbConnectionClientPort.setStatus('current')
slbConnectionState = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 161, 1, 5, 1, 1, 7), SlbConnectionState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: slbConnectionState.setStatus('current')
slbConnectionRealIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 161, 1, 5, 1, 1, 8), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: slbConnectionRealIpAddr.setStatus('current')
slbConnectionServerPort = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 161, 1, 5, 1, 1, 9), CiscoPort()).setMaxAccess("readonly")
if mibBuilder.loadTexts: slbConnectionServerPort.setStatus('current')
slbConnectionNumCacheEntries = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 161, 1, 5, 1, 1, 10), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: slbConnectionNumCacheEntries.setStatus('current')
slbConnectionSynCount = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 161, 1, 5, 1, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: slbConnectionSynCount.setStatus('current')
slbVirtualClientTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 161, 1, 6, 1), )
if mibBuilder.loadTexts: slbVirtualClientTable.setStatus('current')
slbVirtualClientTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 161, 1, 6, 1, 1), ).setIndexNames((0, "CISCO-SLB-MIB", "slbEntity"), (0, "CISCO-SLB-MIB", "slbVirtualServerName"), (0, "CISCO-SLB-MIB", "slbVirtualClientIpAddress"), (0, "CISCO-SLB-MIB", "slbVirtualClientMask"))
if mibBuilder.loadTexts: slbVirtualClientTableEntry.setStatus('current')
slbVirtualClientIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 161, 1, 6, 1, 1, 1), IpAddress())
if mibBuilder.loadTexts: slbVirtualClientIpAddress.setStatus('current')
slbVirtualClientMask = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 161, 1, 6, 1, 1, 2), IpAddress())
if mibBuilder.loadTexts: slbVirtualClientMask.setStatus('current')
slbVirtualClientExclude = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 161, 1, 6, 1, 1, 3), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: slbVirtualClientExclude.setStatus('current')
slbVirtualClientRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 161, 1, 6, 1, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: slbVirtualClientRowStatus.setStatus('current')
slbStickyObjectTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 161, 1, 7, 1), )
if mibBuilder.loadTexts: slbStickyObjectTable.setStatus('current')
slbStickyObjectTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 161, 1, 7, 1, 1), ).setIndexNames((0, "CISCO-SLB-MIB", "slbEntity"), (0, "CISCO-SLB-MIB", "slbStickyObjectGroupId"), (0, "CISCO-SLB-MIB", "slbStickyObjectClientIpAddress"))
if mibBuilder.loadTexts: slbStickyObjectTableEntry.setStatus('current')
slbStickyObjectGroupId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 161, 1, 7, 1, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)))
if mibBuilder.loadTexts: slbStickyObjectGroupId.setStatus('current')
slbStickyObjectClientIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 161, 1, 7, 1, 1, 2), IpAddress())
if mibBuilder.loadTexts: slbStickyObjectClientIpAddress.setStatus('current')
slbStickyObjectRealIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 161, 1, 7, 1, 1, 3), IpAddress().clone(hexValue="00000000")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: slbStickyObjectRealIpAddress.setStatus('current')
slbStickyObjectConnectionCount = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 161, 1, 7, 1, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: slbStickyObjectConnectionCount.setStatus('current')
slbStickyObjectFtpControlCount = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 161, 1, 7, 1, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: slbStickyObjectFtpControlCount.setStatus('current')
slbStickyObjectRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 161, 1, 7, 1, 1, 6), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: slbStickyObjectRowStatus.setStatus('current')
cSlbVirtStateChangeNotifEnabled = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 161, 1, 8, 1), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cSlbVirtStateChangeNotifEnabled.setStatus('deprecated')
cSlbRealStateChangeNotifEnabled = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 161, 1, 8, 2), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cSlbRealStateChangeNotifEnabled.setStatus('deprecated')
cSlbVServerStateChangeNotifEnabled = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 161, 1, 8, 3), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cSlbVServerStateChangeNotifEnabled.setStatus('current')
cSlbVirtualServerStateChangeNotifEnabled = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 161, 1, 8, 4), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cSlbVirtualServerStateChangeNotifEnabled.setStatus('current')
cSlbRealServerStateChangeNotifEnabled = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 161, 1, 8, 5), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cSlbRealServerStateChangeNotifEnabled.setStatus('current')
slbInetAddressType = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 161, 1, 8, 6), InetAddressType().clone('ipv4')).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: slbInetAddressType.setStatus('current')
slbInetAddress = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 161, 1, 8, 7), InetAddress()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: slbInetAddress.setStatus('current')
slbName = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 161, 1, 8, 8), SlbServerString()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: slbName.setStatus('current')
slbPort = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 161, 1, 8, 9), CiscoPort()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: slbPort.setStatus('current')
slbDfpPasswordTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 161, 1, 9, 1), )
if mibBuilder.loadTexts: slbDfpPasswordTable.setStatus('current')
slbDfpPasswordTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 161, 1, 9, 1, 1), ).setIndexNames((0, "CISCO-SLB-MIB", "slbEntity"))
if mibBuilder.loadTexts: slbDfpPasswordTableEntry.setStatus('current')
slbDfpPasswordPending = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 161, 1, 9, 1, 1, 1), SlbPasswordString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: slbDfpPasswordPending.setStatus('current')
slbDfpPasswordTimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 161, 1, 9, 1, 1, 2), TimeInterval()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: slbDfpPasswordTimeout.setStatus('current')
slbDfpPasswordRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 161, 1, 9, 1, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: slbDfpPasswordRowStatus.setStatus('current')
slbDfpAgentTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 161, 1, 10, 1), )
if mibBuilder.loadTexts: slbDfpAgentTable.setStatus('current')
slbDfpAgentTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 161, 1, 10, 1, 1), ).setIndexNames((0, "CISCO-SLB-MIB", "slbEntity"), (0, "CISCO-SLB-MIB", "slbDfpAgentIpAddress"), (0, "CISCO-SLB-MIB", "slbDfpAgentPort"))
if mibBuilder.loadTexts: slbDfpAgentTableEntry.setStatus('current')
slbDfpAgentIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 161, 1, 10, 1, 1, 1), IpAddress())
if mibBuilder.loadTexts: slbDfpAgentIpAddress.setStatus('current')
slbDfpAgentPort = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 161, 1, 10, 1, 1, 2), CiscoPort())
if mibBuilder.loadTexts: slbDfpAgentPort.setStatus('current')
slbDfpAgentState = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 161, 1, 10, 1, 1, 3), SlbDfpAgentState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: slbDfpAgentState.setStatus('current')
slbDfpAgentTimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 161, 1, 10, 1, 1, 4), TimeInterval()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: slbDfpAgentTimeout.setStatus('current')
slbDfpAgentRetryCount = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 161, 1, 10, 1, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: slbDfpAgentRetryCount.setStatus('current')
slbDfpAgentInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 161, 1, 10, 1, 1, 6), TimeInterval()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: slbDfpAgentInterval.setStatus('current')
slbDfpAgentRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 161, 1, 10, 1, 1, 7), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: slbDfpAgentRowStatus.setStatus('current')
slbDfpRealTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 161, 1, 11, 1), )
if mibBuilder.loadTexts: slbDfpRealTable.setStatus('current')
slbDfpRealTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 161, 1, 11, 1, 1), ).setIndexNames((0, "CISCO-SLB-MIB", "slbEntity"), (0, "CISCO-SLB-MIB", "slbDfpRealIpAddress"), (0, "CISCO-SLB-MIB", "slbDfpRealProtocol"), (0, "CISCO-SLB-MIB", "slbDfpRealPort"), (0, "CISCO-SLB-MIB", "slbDfpRealBindId"))
if mibBuilder.loadTexts: slbDfpRealTableEntry.setStatus('current')
slbDfpRealIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 161, 1, 11, 1, 1, 1), IpAddress())
if mibBuilder.loadTexts: slbDfpRealIpAddress.setStatus('current')
slbDfpRealProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 161, 1, 11, 1, 1, 2), CiscoIpProtocol())
if mibBuilder.loadTexts: slbDfpRealProtocol.setStatus('current')
slbDfpRealPort = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 161, 1, 11, 1, 1, 3), CiscoPort())
if mibBuilder.loadTexts: slbDfpRealPort.setStatus('current')
slbDfpRealBindId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 161, 1, 11, 1, 1, 4), Unsigned32())
if mibBuilder.loadTexts: slbDfpRealBindId.setStatus('current')
slbDfpRealWeight = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 161, 1, 11, 1, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: slbDfpRealWeight.setStatus('current')
slbDfpRealRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 161, 1, 11, 1, 1, 6), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: slbDfpRealRowStatus.setStatus('current')
slbSaspTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 161, 1, 12, 1), )
if mibBuilder.loadTexts: slbSaspTable.setStatus('current')
slbSaspTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 161, 1, 12, 1, 1), ).setIndexNames((0, "CISCO-SLB-MIB", "slbEntity"))
if mibBuilder.loadTexts: slbSaspTableEntry.setStatus('current')
slbSaspIdentifier = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 161, 1, 12, 1, 1, 1), SnmpAdminString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: slbSaspIdentifier.setStatus('current')
slbSaspEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 161, 1, 12, 1, 1, 2), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: slbSaspEnabled.setStatus('current')
slbSaspHealth = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 161, 1, 12, 1, 1, 3), SlbSaspLBHealth()).setMaxAccess("readonly")
if mibBuilder.loadTexts: slbSaspHealth.setStatus('current')
slbSaspRedundancy = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 161, 1, 12, 1, 1, 4), SlbSaspRedundancy()).setMaxAccess("readonly")
if mibBuilder.loadTexts: slbSaspRedundancy.setStatus('current')
slbSaspMaxAgents = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 161, 1, 12, 1, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: slbSaspMaxAgents.setStatus('current')
slbSaspMaxLbWeight = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 161, 1, 12, 1, 1, 6), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: slbSaspMaxLbWeight.setStatus('current')
slbSaspAgentTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 161, 1, 13, 1), )
if mibBuilder.loadTexts: slbSaspAgentTable.setStatus('current')
slbSaspAgentTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 161, 1, 13, 1, 1), ).setIndexNames((0, "CISCO-SLB-MIB", "slbEntity"), (0, "CISCO-SLB-MIB", "slbSaspAgentIpAddressType"), (0, "CISCO-SLB-MIB", "slbSaspAgentIpAddress"), (0, "CISCO-SLB-MIB", "slbSaspAgentPort"))
if mibBuilder.loadTexts: slbSaspAgentTableEntry.setStatus('current')
slbSaspAgentIpAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 161, 1, 13, 1, 1, 1), InetAddressType())
if mibBuilder.loadTexts: slbSaspAgentIpAddressType.setStatus('current')
slbSaspAgentIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 161, 1, 13, 1, 1, 2), InetAddress())
if mibBuilder.loadTexts: slbSaspAgentIpAddress.setStatus('current')
slbSaspAgentPort = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 161, 1, 13, 1, 1, 3), InetPortNumber())
if mibBuilder.loadTexts: slbSaspAgentPort.setStatus('current')
slbSaspAgentLabel = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 161, 1, 13, 1, 1, 4), SnmpAdminString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: slbSaspAgentLabel.setStatus('current')
slbSaspAgentState = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 161, 1, 13, 1, 1, 5), SlbSaspAgentState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: slbSaspAgentState.setStatus('current')
slbSaspAgentLastStateChange = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 161, 1, 13, 1, 1, 6), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: slbSaspAgentLastStateChange.setStatus('current')
slbSaspAgentRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 161, 1, 13, 1, 1, 7), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: slbSaspAgentRowStatus.setStatus('current')
slbSaspGroupTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 161, 1, 14, 1), )
if mibBuilder.loadTexts: slbSaspGroupTable.setStatus('current')
slbSaspGroupTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 161, 1, 14, 1, 1), ).setIndexNames((0, "CISCO-SLB-MIB", "slbEntity"), (0, "CISCO-SLB-MIB", "slbSaspGroupName"))
if mibBuilder.loadTexts: slbSaspGroupTableEntry.setStatus('current')
slbSaspGroupName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 161, 1, 14, 1, 1, 1), SnmpAdminString())
if mibBuilder.loadTexts: slbSaspGroupName.setStatus('current')
slbSaspGroupRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 161, 1, 14, 1, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: slbSaspGroupRowStatus.setStatus('current')
slbSaspMemberTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 161, 1, 15, 1), )
if mibBuilder.loadTexts: slbSaspMemberTable.setStatus('current')
slbSaspMemberTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 161, 1, 15, 1, 1), ).setIndexNames((0, "CISCO-SLB-MIB", "slbEntity"), (0, "CISCO-SLB-MIB", "slbSaspAgentIpAddressType"), (0, "CISCO-SLB-MIB", "slbSaspAgentIpAddress"), (0, "CISCO-SLB-MIB", "slbSaspAgentPort"), (0, "CISCO-SLB-MIB", "slbSaspGroupName"), (0, "CISCO-SLB-MIB", "slbSaspMemberIpAddressType"), (0, "CISCO-SLB-MIB", "slbSaspMemberIpAddress"), (0, "CISCO-SLB-MIB", "slbSaspMemberPort"), (0, "CISCO-SLB-MIB", "slbSaspMemberProtocol"))
if mibBuilder.loadTexts: slbSaspMemberTableEntry.setStatus('current')
slbSaspMemberIpAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 161, 1, 15, 1, 1, 1), InetAddressType())
if mibBuilder.loadTexts: slbSaspMemberIpAddressType.setStatus('current')
slbSaspMemberIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 161, 1, 15, 1, 1, 2), InetAddress())
if mibBuilder.loadTexts: slbSaspMemberIpAddress.setStatus('current')
slbSaspMemberPort = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 161, 1, 15, 1, 1, 3), InetPortNumber())
if mibBuilder.loadTexts: slbSaspMemberPort.setStatus('current')
slbSaspMemberProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 161, 1, 15, 1, 1, 4), CiscoIpProtocol())
if mibBuilder.loadTexts: slbSaspMemberProtocol.setStatus('current')
slbSaspMemberSaspWeight = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 161, 1, 15, 1, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: slbSaspMemberSaspWeight.setStatus('current')
slbSaspMemberConfidentWeight = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 161, 1, 15, 1, 1, 6), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: slbSaspMemberConfidentWeight.setStatus('current')
slbSaspMemberConvertedWeight = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 161, 1, 15, 1, 1, 7), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: slbSaspMemberConvertedWeight.setStatus('current')
slbSaspMemberDefaultWeight = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 161, 1, 15, 1, 1, 8), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)).clone(1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: slbSaspMemberDefaultWeight.setStatus('current')
slbSaspMemberWeightChanges = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 161, 1, 15, 1, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: slbSaspMemberWeightChanges.setStatus('current')
slbSaspMemberLastWeightChange = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 161, 1, 15, 1, 1, 10), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: slbSaspMemberLastWeightChange.setStatus('current')
slbSaspMemberRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 161, 1, 15, 1, 1, 11), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: slbSaspMemberRowStatus.setStatus('current')
slbSaspStatsTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 161, 1, 16, 1), )
if mibBuilder.loadTexts: slbSaspStatsTable.setStatus('current')
slbSaspStatsTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 161, 1, 16, 1, 1), ).setIndexNames((0, "CISCO-SLB-MIB", "slbEntity"), (0, "CISCO-SLB-MIB", "slbSaspAgentIpAddressType"), (0, "CISCO-SLB-MIB", "slbSaspAgentIpAddress"), (0, "CISCO-SLB-MIB", "slbSaspAgentPort"))
if mibBuilder.loadTexts: slbSaspStatsTableEntry.setStatus('current')
slbSaspStatsTxRegMsgs = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 161, 1, 16, 1, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: slbSaspStatsTxRegMsgs.setStatus('current')
slbSaspStatsTxDeregMsgs = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 161, 1, 16, 1, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: slbSaspStatsTxDeregMsgs.setStatus('current')
slbSaspStatsTxGetWeightMsgs = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 161, 1, 16, 1, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: slbSaspStatsTxGetWeightMsgs.setStatus('current')
slbSaspStatsTxSetLBStateMsgs = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 161, 1, 16, 1, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: slbSaspStatsTxSetLBStateMsgs.setStatus('current')
slbSaspStatsTxSetMemStateMsgs = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 161, 1, 16, 1, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: slbSaspStatsTxSetMemStateMsgs.setStatus('current')
slbSaspStatsRxSendWeightMsgs = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 161, 1, 16, 1, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: slbSaspStatsRxSendWeightMsgs.setStatus('current')
slbSaspStatsRxRegMsgs = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 161, 1, 16, 1, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: slbSaspStatsRxRegMsgs.setStatus('current')
slbSaspStatsRxDeregMsgs = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 161, 1, 16, 1, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: slbSaspStatsRxDeregMsgs.setStatus('current')
slbSaspStatsRxGetWeightMsgs = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 161, 1, 16, 1, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: slbSaspStatsRxGetWeightMsgs.setStatus('current')
slbSaspStatsRxSetLBStateMsgs = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 161, 1, 16, 1, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: slbSaspStatsRxSetLBStateMsgs.setStatus('current')
slbSaspStatsRxSetMemStateMsgs = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 161, 1, 16, 1, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: slbSaspStatsRxSetMemStateMsgs.setStatus('current')
ciscoSlbMIBNotificationPrefix = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 161, 2))
ciscoSlbMIBNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 161, 2, 0))
ciscoSlbVirtualStateChange = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 161, 2, 0, 1)).setObjects(("CISCO-SLB-MIB", "slbVirtualServerState"))
if mibBuilder.loadTexts: ciscoSlbVirtualStateChange.setStatus('deprecated')
ciscoSlbRealStateChange = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 161, 2, 0, 2)).setObjects(("CISCO-SLB-MIB", "slbRealState"))
if mibBuilder.loadTexts: ciscoSlbRealStateChange.setStatus('deprecated')
ciscoSlbSaspStateChange = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 161, 2, 0, 3)).setObjects(("CISCO-SLB-MIB", "slbSaspEnabled"))
if mibBuilder.loadTexts: ciscoSlbSaspStateChange.setStatus('current')
ciscoSlbSaspAgentStateChange = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 161, 2, 0, 4)).setObjects(("CISCO-SLB-MIB", "slbSaspAgentState"))
if mibBuilder.loadTexts: ciscoSlbSaspAgentStateChange.setStatus('current')
ciscoSlbVServerStateChange = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 161, 2, 0, 5)).setObjects(("CISCO-SLB-MIB", "slbVServerState"), ("CISCO-SLB-MIB", "slbVServerStateChangeDescr"), ("CISCO-SLB-MIB", "slbVServerClassMap"), ("CISCO-SLB-MIB", "slbVServerPolicyMap"))
if mibBuilder.loadTexts: ciscoSlbVServerStateChange.setStatus('current')
ciscoSlbVServerVIPStateChange = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 161, 2, 0, 6)).setObjects(("CISCO-SLB-MIB", "slbVServerState"), ("CISCO-SLB-MIB", "slbVServerStateChangeDescr"), ("CISCO-SLB-MIB", "slbVServerClassMap"), ("CISCO-SLB-MIB", "slbVServerPolicyMap"), ("CISCO-SLB-MIB", "slbVServerIpAddressType"), ("CISCO-SLB-MIB", "slbVServerIpAddress"), ("CISCO-SLB-MIB", "slbVServerProtocol"))
if mibBuilder.loadTexts: ciscoSlbVServerVIPStateChange.setStatus('current')
ciscoSlbVirtualServerStateChange = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 161, 2, 0, 7)).setObjects(("ENTITY-MIB", "entPhysicalParentRelPos"), ("CISCO-SLB-MIB", "slbVirtualServerState"), ("CISCO-SLB-MIB", "slbVirtualIpAddress"), ("CISCO-SLB-MIB", "slbVirtualProtocol"), ("CISCO-SLB-MIB", "slbVirtualPort"), ("CISCO-SLB-MIB", "slbName"))
if mibBuilder.loadTexts: ciscoSlbVirtualServerStateChange.setStatus('current')
ciscoSlbRealServerStateChange = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 161, 2, 0, 8)).setObjects(("ENTITY-MIB", "entPhysicalParentRelPos"), ("CISCO-SLB-MIB", "slbRealState"), ("CISCO-SLB-MIB", "slbInetAddressType"), ("CISCO-SLB-MIB", "slbInetAddress"), ("CISCO-SLB-MIB", "slbPort"), ("CISCO-SLB-MIB", "slbName"))
if mibBuilder.loadTexts: ciscoSlbRealServerStateChange.setStatus('current')
ciscoSlbMIBConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 161, 3))
ciscoSlbMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 161, 3, 1))
ciscoSlbMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 161, 3, 2))
ciscoSlbMIBCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 161, 3, 1, 1)).setObjects(("CISCO-SLB-MIB", "ciscoSlbStatsGroup"), ("CISCO-SLB-MIB", "ciscoSlbDfpPasswordGroup"), ("CISCO-SLB-MIB", "ciscoSlbServerFarmsGroup"), ("CISCO-SLB-MIB", "ciscoSlbRealServersGroup"), ("CISCO-SLB-MIB", "ciscoSlbVirtualServersGroup"), ("CISCO-SLB-MIB", "ciscoSlbConnectionsGroup"), ("CISCO-SLB-MIB", "ciscoSlbVirtualClientsGroup"), ("CISCO-SLB-MIB", "ciscoSlbStickyObjectsGroup"), ("CISCO-SLB-MIB", "ciscoSlbDfpAgentGroup"), ("CISCO-SLB-MIB", "ciscoSlbDfpRealGroup"), ("CISCO-SLB-MIB", "ciscoSlbNotifEnabledGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoSlbMIBCompliance = ciscoSlbMIBCompliance.setStatus('deprecated')
ciscoSlbMIBComplianceRev1 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 161, 3, 1, 2)).setObjects(("CISCO-SLB-MIB", "ciscoSlbStatsGroup"), ("CISCO-SLB-MIB", "ciscoSlbDfpPasswordGroup"), ("CISCO-SLB-MIB", "ciscoSlbServerFarmsGroup"), ("CISCO-SLB-MIB", "ciscoSlbRealServersGroup"), ("CISCO-SLB-MIB", "ciscoSlbVirtualServersGroup"), ("CISCO-SLB-MIB", "ciscoSlbConnectionsGroup"), ("CISCO-SLB-MIB", "ciscoSlbVirtualClientsGroup"), ("CISCO-SLB-MIB", "ciscoSlbStickyObjectsGroup"), ("CISCO-SLB-MIB", "ciscoSlbDfpAgentGroup"), ("CISCO-SLB-MIB", "ciscoSlbDfpRealGroup"), ("CISCO-SLB-MIB", "ciscoSlbNotifEnabledGroup"), ("CISCO-SLB-MIB", "ciscoSlbNotifGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoSlbMIBComplianceRev1 = ciscoSlbMIBComplianceRev1.setStatus('deprecated')
ciscoSlbMIBComplianceRev2 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 161, 3, 1, 3)).setObjects(("CISCO-SLB-MIB", "ciscoSlbStatsGroup"), ("CISCO-SLB-MIB", "ciscoSlbDfpPasswordGroup"), ("CISCO-SLB-MIB", "ciscoSlbServerFarmsGroup"), ("CISCO-SLB-MIB", "ciscoSlbRealServersGroup"), ("CISCO-SLB-MIB", "ciscoSlbVirtualServersGroup"), ("CISCO-SLB-MIB", "ciscoSlbConnectionsGroup"), ("CISCO-SLB-MIB", "ciscoSlbVirtualClientsGroup"), ("CISCO-SLB-MIB", "ciscoSlbStickyObjectsGroup"), ("CISCO-SLB-MIB", "ciscoSlbDfpAgentGroup"), ("CISCO-SLB-MIB", "ciscoSlbDfpRealGroup"), ("CISCO-SLB-MIB", "ciscoSlbNotifEnabledGroup"), ("CISCO-SLB-MIB", "ciscoSlbNotifGroup"), ("CISCO-SLB-MIB", "ciscoSlbSaspGroup"), ("CISCO-SLB-MIB", "ciscoSlbSaspAgentGroup"), ("CISCO-SLB-MIB", "ciscoSlbSaspGroupGroup"), ("CISCO-SLB-MIB", "ciscoSlbSaspMemberGroup"), ("CISCO-SLB-MIB", "ciscoSlbSaspStatsGroup"), ("CISCO-SLB-MIB", "ciscoSlbSaspNotifGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoSlbMIBComplianceRev2 = ciscoSlbMIBComplianceRev2.setStatus('deprecated')
ciscoSlbMIBComplianceRev3 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 161, 3, 1, 4)).setObjects(("CISCO-SLB-MIB", "ciscoSlbStatsGroup"), ("CISCO-SLB-MIB", "ciscoSlbDfpPasswordGroup"), ("CISCO-SLB-MIB", "ciscoSlbServerFarmsGroup"), ("CISCO-SLB-MIB", "ciscoSlbRealServersGroup"), ("CISCO-SLB-MIB", "ciscoSlbConnectionsGroup"), ("CISCO-SLB-MIB", "ciscoSlbStickyObjectsGroup"), ("CISCO-SLB-MIB", "ciscoSlbDfpAgentGroup"), ("CISCO-SLB-MIB", "ciscoSlbDfpRealGroup"), ("CISCO-SLB-MIB", "ciscoSlbNotifEnabledGroup"), ("CISCO-SLB-MIB", "ciscoSlbNotifGroup"), ("CISCO-SLB-MIB", "ciscoSlbSaspGroup"), ("CISCO-SLB-MIB", "ciscoSlbSaspAgentGroup"), ("CISCO-SLB-MIB", "ciscoSlbSaspGroupGroup"), ("CISCO-SLB-MIB", "ciscoSlbSaspMemberGroup"), ("CISCO-SLB-MIB", "ciscoSlbSaspStatsGroup"), ("CISCO-SLB-MIB", "ciscoSlbSaspNotifGroup"), ("CISCO-SLB-MIB", "ciscoSlbVirtualServersGroup"), ("CISCO-SLB-MIB", "ciscoSlbVirtualClientsGroup"), ("CISCO-SLB-MIB", "ciscoSlbVServerInfoGroup"), ("CISCO-SLB-MIB", "ciscoSlbVServerIPGroup"), ("CISCO-SLB-MIB", "ciscoSlbVServerNotifEnabledGroup"), ("CISCO-SLB-MIB", "ciscoSlbVServerNotifGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoSlbMIBComplianceRev3 = ciscoSlbMIBComplianceRev3.setStatus('deprecated')
ciscoSlbMIBComplianceRev4 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 161, 3, 1, 5)).setObjects(("CISCO-SLB-MIB", "ciscoSlbStatsGroup"), ("CISCO-SLB-MIB", "ciscoSlbDfpPasswordGroup"), ("CISCO-SLB-MIB", "ciscoSlbServerFarmsGroup"), ("CISCO-SLB-MIB", "ciscoSlbRealServersGroup"), ("CISCO-SLB-MIB", "ciscoSlbConnectionsGroup"), ("CISCO-SLB-MIB", "ciscoSlbStickyObjectsGroup"), ("CISCO-SLB-MIB", "ciscoSlbDfpAgentGroup"), ("CISCO-SLB-MIB", "ciscoSlbDfpRealGroup"), ("CISCO-SLB-MIB", "ciscoSlbNotifEnabledGroupRev2"), ("CISCO-SLB-MIB", "ciscoSlbNotifGroupRev2"), ("CISCO-SLB-MIB", "ciscoSlbSaspGroup"), ("CISCO-SLB-MIB", "ciscoSlbSaspAgentGroup"), ("CISCO-SLB-MIB", "ciscoSlbSaspGroupGroup"), ("CISCO-SLB-MIB", "ciscoSlbSaspMemberGroup"), ("CISCO-SLB-MIB", "ciscoSlbSaspStatsGroup"), ("CISCO-SLB-MIB", "ciscoSlbSaspNotifGroup"), ("CISCO-SLB-MIB", "ciscoSlbVirtualServersGroup"), ("CISCO-SLB-MIB", "ciscoSlbVirtualClientsGroup"), ("CISCO-SLB-MIB", "ciscoSlbVServerInfoGroup"), ("CISCO-SLB-MIB", "ciscoSlbVServerIPGroup"), ("CISCO-SLB-MIB", "ciscoSlbVServerNotifEnabledGroup"), ("CISCO-SLB-MIB", "ciscoSlbVServerNotifGroup"), ("CISCO-SLB-MIB", "ciscoSlbNotifObjectsGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoSlbMIBComplianceRev4 = ciscoSlbMIBComplianceRev4.setStatus('deprecated')
ciscoSlbMIBComplianceRev5 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 161, 3, 1, 6)).setObjects(("CISCO-SLB-MIB", "ciscoSlbStatsGroup"), ("CISCO-SLB-MIB", "ciscoSlbDfpPasswordGroup"), ("CISCO-SLB-MIB", "ciscoSlbServerFarmsGroup"), ("CISCO-SLB-MIB", "ciscoSlbRealServersGroup"), ("CISCO-SLB-MIB", "ciscoSlbConnectionsGroup"), ("CISCO-SLB-MIB", "ciscoSlbStickyObjectsGroup"), ("CISCO-SLB-MIB", "ciscoSlbDfpAgentGroup"), ("CISCO-SLB-MIB", "ciscoSlbDfpRealGroup"), ("CISCO-SLB-MIB", "ciscoSlbNotifEnabledGroupRev2"), ("CISCO-SLB-MIB", "ciscoSlbNotifGroupRev2"), ("CISCO-SLB-MIB", "ciscoSlbSaspGroup"), ("CISCO-SLB-MIB", "ciscoSlbSaspAgentGroup"), ("CISCO-SLB-MIB", "ciscoSlbSaspGroupGroup"), ("CISCO-SLB-MIB", "ciscoSlbSaspMemberGroup"), ("CISCO-SLB-MIB", "ciscoSlbSaspStatsGroup"), ("CISCO-SLB-MIB", "ciscoSlbSaspNotifGroup"), ("CISCO-SLB-MIB", "ciscoSlbVirtualServersGroup"), ("CISCO-SLB-MIB", "ciscoSlbVirtualClientsGroup"), ("CISCO-SLB-MIB", "ciscoSlbVServerInfoGroupRev1"), ("CISCO-SLB-MIB", "ciscoSlbVServerIPGroup"), ("CISCO-SLB-MIB", "ciscoSlbVServerNotifEnabledGroup"), ("CISCO-SLB-MIB", "ciscoSlbVServerNotifGroup"), ("CISCO-SLB-MIB", "ciscoSlbNotifObjectsGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoSlbMIBComplianceRev5 = ciscoSlbMIBComplianceRev5.setStatus('deprecated')
ciscoSlbMIBComplianceRev6 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 161, 3, 1, 7)).setObjects(("CISCO-SLB-MIB", "ciscoSlbStatsGroup"), ("CISCO-SLB-MIB", "ciscoSlbDfpPasswordGroup"), ("CISCO-SLB-MIB", "ciscoSlbServerFarmsGroup"), ("CISCO-SLB-MIB", "ciscoSlbRealServersGroup"), ("CISCO-SLB-MIB", "ciscoSlbConnectionsGroup"), ("CISCO-SLB-MIB", "ciscoSlbStickyObjectsGroup"), ("CISCO-SLB-MIB", "ciscoSlbDfpAgentGroup"), ("CISCO-SLB-MIB", "ciscoSlbDfpRealGroup"), ("CISCO-SLB-MIB", "ciscoSlbNotifEnabledGroupRev2"), ("CISCO-SLB-MIB", "ciscoSlbNotifGroupRev2"), ("CISCO-SLB-MIB", "ciscoSlbSaspGroup"), ("CISCO-SLB-MIB", "ciscoSlbSaspAgentGroup"), ("CISCO-SLB-MIB", "ciscoSlbSaspGroupGroup"), ("CISCO-SLB-MIB", "ciscoSlbSaspMemberGroup"), ("CISCO-SLB-MIB", "ciscoSlbSaspStatsGroup"), ("CISCO-SLB-MIB", "ciscoSlbSaspNotifGroup"), ("CISCO-SLB-MIB", "ciscoSlbVirtualServersGroup"), ("CISCO-SLB-MIB", "ciscoSlbVirtualClientsGroup"), ("CISCO-SLB-MIB", "ciscoSlbVServerInfoGroupRev2"), ("CISCO-SLB-MIB", "ciscoSlbVServerIPGroup"), ("CISCO-SLB-MIB", "ciscoSlbVServerNotifEnabledGroup"), ("CISCO-SLB-MIB", "ciscoSlbVServerNotifGroup"), ("CISCO-SLB-MIB", "ciscoSlbNotifObjectsGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoSlbMIBComplianceRev6 = ciscoSlbMIBComplianceRev6.setStatus('current')
ciscoSlbStatsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 161, 3, 2, 1)).setObjects(("CISCO-SLB-MIB", "slbStatsUnassistedSwitchingPkts"), ("CISCO-SLB-MIB", "slbStatsUnassistedSwitchingHCPks"), ("CISCO-SLB-MIB", "slbStatsAssistedSwitchingPkts"), ("CISCO-SLB-MIB", "slbStatsAssistedSwitchingHCPkts"), ("CISCO-SLB-MIB", "slbStatsCreatedConnections"), ("CISCO-SLB-MIB", "slbStatsCreatedHCConnections"), ("CISCO-SLB-MIB", "slbStatsEstablishedConnections"), ("CISCO-SLB-MIB", "slbStatsEstablishedHCConnections"), ("CISCO-SLB-MIB", "slbStatsDestroyedConnections"), ("CISCO-SLB-MIB", "slbStatsDestroyedHCConnections"), ("CISCO-SLB-MIB", "slbStatsReassignedConnections"), ("CISCO-SLB-MIB", "slbStatsReassignedHCConnections"), ("CISCO-SLB-MIB", "slbStatsZombies"), ("CISCO-SLB-MIB", "slbStatsHCZombies"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoSlbStatsGroup = ciscoSlbStatsGroup.setStatus('current')
ciscoSlbServerFarmsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 161, 3, 2, 2)).setObjects(("CISCO-SLB-MIB", "slbServerFarmPredictor"), ("CISCO-SLB-MIB", "slbServerFarmNat"), ("CISCO-SLB-MIB", "slbServerFarmNumberOfRealServers"), ("CISCO-SLB-MIB", "slbServerFarmBindId"), ("CISCO-SLB-MIB", "slbServerFarmRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoSlbServerFarmsGroup = ciscoSlbServerFarmsGroup.setStatus('current')
ciscoSlbRealServersGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 161, 3, 2, 3)).setObjects(("CISCO-SLB-MIB", "slbRealState"), ("CISCO-SLB-MIB", "slbRealNumberOfConnections"), ("CISCO-SLB-MIB", "slbRealNumberOfDummyConnections"), ("CISCO-SLB-MIB", "slbRealMaxConnections"), ("CISCO-SLB-MIB", "slbRealAdminWeight"), ("CISCO-SLB-MIB", "slbRealOperWeight"), ("CISCO-SLB-MIB", "slbRealMetric"), ("CISCO-SLB-MIB", "slbRealReassign"), ("CISCO-SLB-MIB", "slbRealRetryInterval"), ("CISCO-SLB-MIB", "slbRealFailedConnections"), ("CISCO-SLB-MIB", "slbRealFailedClients"), ("CISCO-SLB-MIB", "slbRealConsecutiveFails"), ("CISCO-SLB-MIB", "slbRealTotalFails"), ("CISCO-SLB-MIB", "slbRealRowStatus"), ("CISCO-SLB-MIB", "slbRealTotalConnections"), ("CISCO-SLB-MIB", "slbRealHCTotalConnections"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoSlbRealServersGroup = ciscoSlbRealServersGroup.setStatus('current')
ciscoSlbVirtualServersGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 161, 3, 2, 4)).setObjects(("CISCO-SLB-MIB", "slbVirtualServerState"), ("CISCO-SLB-MIB", "slbVirtualIndex"), ("CISCO-SLB-MIB", "slbVirtualIpAddress"), ("CISCO-SLB-MIB", "slbVirtualPort"), ("CISCO-SLB-MIB", "slbVirtualProtocol"), ("CISCO-SLB-MIB", "slbVirtualService"), ("CISCO-SLB-MIB", "slbVirtualAdvertise"), ("CISCO-SLB-MIB", "slbVirtualFarmName"), ("CISCO-SLB-MIB", "slbVirtualDelayTimer"), ("CISCO-SLB-MIB", "slbVirtualIdleTimer"), ("CISCO-SLB-MIB", "slbVirtualStickyTimer"), ("CISCO-SLB-MIB", "slbVirtualStickyGroup"), ("CISCO-SLB-MIB", "slbVirtualSynguardCount"), ("CISCO-SLB-MIB", "slbVirtualSynguardPeriod"), ("CISCO-SLB-MIB", "slbVirtualRowStatus"), ("CISCO-SLB-MIB", "slbVirtualNumberOfConnections"), ("CISCO-SLB-MIB", "slbVirtualTotalConnections"), ("CISCO-SLB-MIB", "slbVirtualHCTotalConnections"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoSlbVirtualServersGroup = ciscoSlbVirtualServersGroup.setStatus('current')
ciscoSlbConnectionsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 161, 3, 2, 5)).setObjects(("CISCO-SLB-MIB", "slbConnectionState"), ("CISCO-SLB-MIB", "slbConnectionRealIpAddr"), ("CISCO-SLB-MIB", "slbConnectionServerPort"), ("CISCO-SLB-MIB", "slbConnectionNumCacheEntries"), ("CISCO-SLB-MIB", "slbConnectionSynCount"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoSlbConnectionsGroup = ciscoSlbConnectionsGroup.setStatus('current')
ciscoSlbVirtualClientsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 161, 3, 2, 6)).setObjects(("CISCO-SLB-MIB", "slbVirtualClientExclude"), ("CISCO-SLB-MIB", "slbVirtualClientRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoSlbVirtualClientsGroup = ciscoSlbVirtualClientsGroup.setStatus('current')
ciscoSlbStickyObjectsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 161, 3, 2, 7)).setObjects(("CISCO-SLB-MIB", "slbStickyObjectRealIpAddress"), ("CISCO-SLB-MIB", "slbStickyObjectConnectionCount"), ("CISCO-SLB-MIB", "slbStickyObjectFtpControlCount"), ("CISCO-SLB-MIB", "slbStickyObjectRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoSlbStickyObjectsGroup = ciscoSlbStickyObjectsGroup.setStatus('current')
ciscoSlbDfpPasswordGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 161, 3, 2, 8)).setObjects(("CISCO-SLB-MIB", "slbDfpPasswordPending"), ("CISCO-SLB-MIB", "slbDfpPasswordTimeout"), ("CISCO-SLB-MIB", "slbDfpPasswordRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoSlbDfpPasswordGroup = ciscoSlbDfpPasswordGroup.setStatus('current')
ciscoSlbDfpAgentGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 161, 3, 2, 9)).setObjects(("CISCO-SLB-MIB", "slbDfpAgentState"), ("CISCO-SLB-MIB", "slbDfpAgentTimeout"), ("CISCO-SLB-MIB", "slbDfpAgentRetryCount"), ("CISCO-SLB-MIB", "slbDfpAgentInterval"), ("CISCO-SLB-MIB", "slbDfpAgentRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoSlbDfpAgentGroup = ciscoSlbDfpAgentGroup.setStatus('current')
ciscoSlbDfpRealGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 161, 3, 2, 10)).setObjects(("CISCO-SLB-MIB", "slbDfpRealWeight"), ("CISCO-SLB-MIB", "slbDfpRealRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoSlbDfpRealGroup = ciscoSlbDfpRealGroup.setStatus('current')
ciscoSlbNotifEnabledGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 161, 3, 2, 11)).setObjects(("CISCO-SLB-MIB", "cSlbVirtStateChangeNotifEnabled"), ("CISCO-SLB-MIB", "cSlbRealStateChangeNotifEnabled"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoSlbNotifEnabledGroup = ciscoSlbNotifEnabledGroup.setStatus('deprecated')
ciscoSlbVirtualServersAddGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 161, 3, 2, 12)).setObjects(("CISCO-SLB-MIB", "slbVirtualMask"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoSlbVirtualServersAddGroup = ciscoSlbVirtualServersAddGroup.setStatus('current')
ciscoSlbNotifGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 9, 9, 161, 3, 2, 13)).setObjects(("CISCO-SLB-MIB", "ciscoSlbVirtualStateChange"), ("CISCO-SLB-MIB", "ciscoSlbRealStateChange"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoSlbNotifGroup = ciscoSlbNotifGroup.setStatus('deprecated')
ciscoSlbSaspGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 161, 3, 2, 14)).setObjects(("CISCO-SLB-MIB", "slbSaspIdentifier"), ("CISCO-SLB-MIB", "slbSaspEnabled"), ("CISCO-SLB-MIB", "slbSaspHealth"), ("CISCO-SLB-MIB", "slbSaspRedundancy"), ("CISCO-SLB-MIB", "slbSaspMaxAgents"), ("CISCO-SLB-MIB", "slbSaspMaxLbWeight"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoSlbSaspGroup = ciscoSlbSaspGroup.setStatus('current')
ciscoSlbSaspAgentGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 161, 3, 2, 15)).setObjects(("CISCO-SLB-MIB", "slbSaspAgentLabel"), ("CISCO-SLB-MIB", "slbSaspAgentState"), ("CISCO-SLB-MIB", "slbSaspAgentLastStateChange"), ("CISCO-SLB-MIB", "slbSaspAgentRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoSlbSaspAgentGroup = ciscoSlbSaspAgentGroup.setStatus('current')
ciscoSlbSaspGroupGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 161, 3, 2, 16)).setObjects(("CISCO-SLB-MIB", "slbSaspGroupRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoSlbSaspGroupGroup = ciscoSlbSaspGroupGroup.setStatus('current')
ciscoSlbSaspMemberGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 161, 3, 2, 17)).setObjects(("CISCO-SLB-MIB", "slbSaspMemberSaspWeight"), ("CISCO-SLB-MIB", "slbSaspMemberConfidentWeight"), ("CISCO-SLB-MIB", "slbSaspMemberConvertedWeight"), ("CISCO-SLB-MIB", "slbSaspMemberDefaultWeight"), ("CISCO-SLB-MIB", "slbSaspMemberWeightChanges"), ("CISCO-SLB-MIB", "slbSaspMemberLastWeightChange"), ("CISCO-SLB-MIB", "slbSaspMemberRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoSlbSaspMemberGroup = ciscoSlbSaspMemberGroup.setStatus('current')
ciscoSlbSaspStatsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 161, 3, 2, 18)).setObjects(("CISCO-SLB-MIB", "slbSaspStatsTxRegMsgs"), ("CISCO-SLB-MIB", "slbSaspStatsTxDeregMsgs"), ("CISCO-SLB-MIB", "slbSaspStatsTxGetWeightMsgs"), ("CISCO-SLB-MIB", "slbSaspStatsTxSetLBStateMsgs"), ("CISCO-SLB-MIB", "slbSaspStatsTxSetMemStateMsgs"), ("CISCO-SLB-MIB", "slbSaspStatsRxSendWeightMsgs"), ("CISCO-SLB-MIB", "slbSaspStatsRxRegMsgs"), ("CISCO-SLB-MIB", "slbSaspStatsRxDeregMsgs"), ("CISCO-SLB-MIB", "slbSaspStatsRxGetWeightMsgs"), ("CISCO-SLB-MIB", "slbSaspStatsRxSetLBStateMsgs"), ("CISCO-SLB-MIB", "slbSaspStatsRxSetMemStateMsgs"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoSlbSaspStatsGroup = ciscoSlbSaspStatsGroup.setStatus('current')
ciscoSlbSaspNotifGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 9, 9, 161, 3, 2, 19)).setObjects(("CISCO-SLB-MIB", "ciscoSlbSaspStateChange"), ("CISCO-SLB-MIB", "ciscoSlbSaspAgentStateChange"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoSlbSaspNotifGroup = ciscoSlbSaspNotifGroup.setStatus('current')
ciscoSlbVServerInfoGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 161, 3, 2, 21)).setObjects(("CISCO-SLB-MIB", "slbVServerClassMap"), ("CISCO-SLB-MIB", "slbVServerPolicyMap"), ("CISCO-SLB-MIB", "slbVServerState"), ("CISCO-SLB-MIB", "slbVServerStateChangeDescr"), ("CISCO-SLB-MIB", "slbVServerNumberOfConnections"), ("CISCO-SLB-MIB", "slbVServerTotalConnections"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoSlbVServerInfoGroup = ciscoSlbVServerInfoGroup.setStatus('deprecated')
ciscoSlbVServerIPGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 161, 3, 2, 22)).setObjects(("CISCO-SLB-MIB", "slbVServerIpAddressType"), ("CISCO-SLB-MIB", "slbVServerIpAddress"), ("CISCO-SLB-MIB", "slbVServerIpMask"), ("CISCO-SLB-MIB", "slbVServerProtocol"), ("CISCO-SLB-MIB", "slbVServerPortLow"), ("CISCO-SLB-MIB", "slbVServerPortHigh"), ("CISCO-SLB-MIB", "slbVServerStorageType"), ("CISCO-SLB-MIB", "slbVServerRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoSlbVServerIPGroup = ciscoSlbVServerIPGroup.setStatus('current')
ciscoSlbVServerNotifEnabledGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 161, 3, 2, 23)).setObjects(("CISCO-SLB-MIB", "cSlbVServerStateChangeNotifEnabled"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoSlbVServerNotifEnabledGroup = ciscoSlbVServerNotifEnabledGroup.setStatus('current')
ciscoSlbVServerNotifGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 9, 9, 161, 3, 2, 24)).setObjects(("CISCO-SLB-MIB", "ciscoSlbVServerStateChange"), ("CISCO-SLB-MIB", "ciscoSlbVServerVIPStateChange"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoSlbVServerNotifGroup = ciscoSlbVServerNotifGroup.setStatus('current')
ciscoSlbNotifObjectsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 161, 3, 2, 25)).setObjects(("CISCO-SLB-MIB", "slbInetAddressType"), ("CISCO-SLB-MIB", "slbInetAddress"), ("CISCO-SLB-MIB", "slbName"), ("CISCO-SLB-MIB", "slbPort"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoSlbNotifObjectsGroup = ciscoSlbNotifObjectsGroup.setStatus('current')
ciscoSlbNotifEnabledGroupRev2 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 161, 3, 2, 26)).setObjects(("CISCO-SLB-MIB", "cSlbVirtualServerStateChangeNotifEnabled"), ("CISCO-SLB-MIB", "cSlbRealServerStateChangeNotifEnabled"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoSlbNotifEnabledGroupRev2 = ciscoSlbNotifEnabledGroupRev2.setStatus('current')
ciscoSlbNotifGroupRev2 = NotificationGroup((1, 3, 6, 1, 4, 1, 9, 9, 161, 3, 2, 27)).setObjects(("CISCO-SLB-MIB", "ciscoSlbVirtualServerStateChange"), ("CISCO-SLB-MIB", "ciscoSlbRealServerStateChange"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoSlbNotifGroupRev2 = ciscoSlbNotifGroupRev2.setStatus('current')
ciscoSlbVServerInfoGroupRev1 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 161, 3, 2, 28)).setObjects(("CISCO-SLB-MIB", "slbVServerClassMap"), ("CISCO-SLB-MIB", "slbVServerPolicyMap"), ("CISCO-SLB-MIB", "slbVServerState"), ("CISCO-SLB-MIB", "slbVServerStateChangeDescr"), ("CISCO-SLB-MIB", "slbVServerNumberOfConnections"), ("CISCO-SLB-MIB", "slbVServerTotalConnections"), ("CISCO-SLB-MIB", "slbVServerDroppedConnections"), ("CISCO-SLB-MIB", "slbVServerClientPacketCounts"), ("CISCO-SLB-MIB", "slbVServerPacketCounts"), ("CISCO-SLB-MIB", "slbVServerClientByteCounts"), ("CISCO-SLB-MIB", "slbVServerByteCounts"), ("CISCO-SLB-MIB", "slbVServerMaxConnLimitDropCounts"), ("CISCO-SLB-MIB", "slbVServerConnRateLimitDropCounts"), ("CISCO-SLB-MIB", "slbVServerBWRateLimitDropCounts"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoSlbVServerInfoGroupRev1 = ciscoSlbVServerInfoGroupRev1.setStatus('deprecated')
ciscoSlbVServerInfoGroupRev2 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 161, 3, 2, 29)).setObjects(("CISCO-SLB-MIB", "slbVServerClassMap"), ("CISCO-SLB-MIB", "slbVServerPolicyMap"), ("CISCO-SLB-MIB", "slbVServerState"), ("CISCO-SLB-MIB", "slbVServerStateChangeDescr"), ("CISCO-SLB-MIB", "slbVServerNumberOfConnections"), ("CISCO-SLB-MIB", "slbVServerTotalConnections"), ("CISCO-SLB-MIB", "slbVServerDroppedConnections"), ("CISCO-SLB-MIB", "slbVServerClientPacketCounts"), ("CISCO-SLB-MIB", "slbVServerPacketCounts"), ("CISCO-SLB-MIB", "slbVServerClientByteCounts"), ("CISCO-SLB-MIB", "slbVServerByteCounts"), ("CISCO-SLB-MIB", "slbVServerMaxConnLimitDropCounts"), ("CISCO-SLB-MIB", "slbVServerConnRateLimitDropCounts"), ("CISCO-SLB-MIB", "slbVServerBandWidthRateLimitDropCounts"), ("CISCO-SLB-MIB", "slbVServerL4Decisions"), ("CISCO-SLB-MIB", "slbVServerL7Decisions"), ("CISCO-SLB-MIB", "slbVServerEstablishedConnections"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoSlbVServerInfoGroupRev2 = ciscoSlbVServerInfoGroupRev2.setStatus('current')
mibBuilder.exportSymbols("CISCO-SLB-MIB", SlbVirtualService=SlbVirtualService, slbDfpRealPort=slbDfpRealPort, slbRealNumberOfDummyConnections=slbRealNumberOfDummyConnections, slbDfpReal=slbDfpReal, slbVirtualTotalConnections=slbVirtualTotalConnections, slbDfpAgentTimeout=slbDfpAgentTimeout, slbRealServerFarmName=slbRealServerFarmName, slbDfpPasswordPending=slbDfpPasswordPending, slbSaspAgentTable=slbSaspAgentTable, slbVirtualPort=slbVirtualPort, slbSaspMemberPort=slbSaspMemberPort, SlbSaspLBHealth=SlbSaspLBHealth, slbRealHCTotalConnections=slbRealHCTotalConnections, ciscoSlbVirtualServerStateChange=ciscoSlbVirtualServerStateChange, slbRealConsecutiveFails=slbRealConsecutiveFails, slbVServerClientPacketCounts=slbVServerClientPacketCounts, ciscoSlbVServerVIPStateChange=ciscoSlbVServerVIPStateChange, slbServerFarmNat=slbServerFarmNat, slbSaspGroupName=slbSaspGroupName, ciscoSlbMIBNotifications=ciscoSlbMIBNotifications, ciscoSlbSaspAgentGroup=ciscoSlbSaspAgentGroup, ciscoSlbRealServerStateChange=ciscoSlbRealServerStateChange, ciscoSlbVServerIPGroup=ciscoSlbVServerIPGroup, slbStatsReassignedHCConnections=slbStatsReassignedHCConnections, slbDfpRealTable=slbDfpRealTable, ciscoSlbMIBObjects=ciscoSlbMIBObjects, slbSaspMemberTable=slbSaspMemberTable, slbSaspTable=slbSaspTable, slbSaspMemberConvertedWeight=slbSaspMemberConvertedWeight, ciscoSlbNotifGroupRev2=ciscoSlbNotifGroupRev2, slbVServerEstablishedConnections=slbVServerEstablishedConnections, slbConnectionVirtualPort=slbConnectionVirtualPort, slbSaspStatsTxRegMsgs=slbSaspStatsTxRegMsgs, slbSaspIdentifier=slbSaspIdentifier, slbVirtualClientTableEntry=slbVirtualClientTableEntry, slbSaspMemberSaspWeight=slbSaspMemberSaspWeight, slbSaspStatsTxSetMemStateMsgs=slbSaspStatsTxSetMemStateMsgs, slbRealMetric=slbRealMetric, slbDfpPasswordTableEntry=slbDfpPasswordTableEntry, ciscoSlbVServerNotifGroup=ciscoSlbVServerNotifGroup, slbVirtualIdleTimer=slbVirtualIdleTimer, slbVServerClientByteCounts=slbVServerClientByteCounts, slbStatsCreatedConnections=slbStatsCreatedConnections, slbConnectionServerPort=slbConnectionServerPort, slbStickyObjectTable=slbStickyObjectTable, slbSaspAgentRowStatus=slbSaspAgentRowStatus, ciscoSlbMIB=ciscoSlbMIB, ciscoSlbMIBGroups=ciscoSlbMIBGroups, slbConnectionIndex=slbConnectionIndex, cSlbRealStateChangeNotifEnabled=cSlbRealStateChangeNotifEnabled, slbVirtualHCTotalConnections=slbVirtualHCTotalConnections, slbSaspAgentLastStateChange=slbSaspAgentLastStateChange, slbStatsUnassistedSwitchingPkts=slbStatsUnassistedSwitchingPkts, SlbConnectionState=SlbConnectionState, slbStatsReassignedConnections=slbStatsReassignedConnections, slbVServerNumberOfConnections=slbVServerNumberOfConnections, cSlbVirtStateChangeNotifEnabled=cSlbVirtStateChangeNotifEnabled, ciscoSlbDfpPasswordGroup=ciscoSlbDfpPasswordGroup, ciscoSlbMIBComplianceRev3=ciscoSlbMIBComplianceRev3, ciscoSlbVServerInfoGroupRev2=ciscoSlbVServerInfoGroupRev2, ciscoSlbMIBComplianceRev1=ciscoSlbMIBComplianceRev1, slbStatsDestroyedConnections=slbStatsDestroyedConnections, slbDfpPasswordTable=slbDfpPasswordTable, slbStickyObjectClientIpAddress=slbStickyObjectClientIpAddress, slbSaspMemberProtocol=slbSaspMemberProtocol, slbConnections=slbConnections, slbSaspStatsRxRegMsgs=slbSaspStatsRxRegMsgs, slbRealNumberOfConnections=slbRealNumberOfConnections, slbServerFarmTable=slbServerFarmTable, ciscoSlbVServerStateChange=ciscoSlbVServerStateChange, slbRealTable=slbRealTable, ciscoSlbMIBComplianceRev5=ciscoSlbMIBComplianceRev5, slbStickyObjectGroupId=slbStickyObjectGroupId, slbVirtualMask=slbVirtualMask, slbSaspHealth=slbSaspHealth, ciscoSlbRealServersGroup=ciscoSlbRealServersGroup, slbVServerStorageType=slbVServerStorageType, slbSaspMembers=slbSaspMembers, ciscoSlbVServerNotifEnabledGroup=ciscoSlbVServerNotifEnabledGroup, slbInetAddress=slbInetAddress, ciscoSlbDfpAgentGroup=ciscoSlbDfpAgentGroup, slbSaspStatsTxSetLBStateMsgs=slbSaspStatsTxSetLBStateMsgs, slbServerFarmBindId=slbServerFarmBindId, slbVServerIPTableEntry=slbVServerIPTableEntry, slbStickyObjectRealIpAddress=slbStickyObjectRealIpAddress, slbDfpRealWeight=slbDfpRealWeight, slbConnectionSynCount=slbConnectionSynCount, slbVServerProtocol=slbVServerProtocol, slbRealAdminWeight=slbRealAdminWeight, slbVirtualClientMask=slbVirtualClientMask, slbVServerByteCounts=slbVServerByteCounts, slbStatsTableEntry=slbStatsTableEntry, slbStatsZombies=slbStatsZombies, slbStatsHCZombies=slbStatsHCZombies, slbRealRetryInterval=slbRealRetryInterval, slbStickyObjects=slbStickyObjects, slbEntity=slbEntity, slbVServerPortHigh=slbVServerPortHigh, slbSaspStatsTxGetWeightMsgs=slbSaspStatsTxGetWeightMsgs, SlbNatSetting=SlbNatSetting, ciscoSlbRealStateChange=ciscoSlbRealStateChange, PYSNMP_MODULE_ID=ciscoSlbMIB, slbVirtualIndex=slbVirtualIndex, slbVServerDroppedConnections=slbVServerDroppedConnections, slbRealMaxConnections=slbRealMaxConnections, slbStatsTable=slbStatsTable, slbVirtualRowStatus=slbVirtualRowStatus, slbVServerMaxConnLimitDropCounts=slbVServerMaxConnLimitDropCounts, slbSaspAgents=slbSaspAgents, slbVServerL4Decisions=slbVServerL4Decisions, slbConnectionRealIpAddr=slbConnectionRealIpAddr, slbVirtualClientTable=slbVirtualClientTable, slbSaspGroupTable=slbSaspGroupTable, slbStickyObjectConnectionCount=slbStickyObjectConnectionCount, slbRealTableEntry=slbRealTableEntry, slbVirtualService=slbVirtualService, slbDfpAgentIpAddress=slbDfpAgentIpAddress, slbVServerState=slbVServerState, slbDfpAgents=slbDfpAgents, slbRealTotalConnections=slbRealTotalConnections, slbSaspAgentPort=slbSaspAgentPort, slbVirtualSynguardCount=slbVirtualSynguardCount, ciscoSlbNotifGroup=ciscoSlbNotifGroup, slbDfpPassword=slbDfpPassword, slbSaspMemberTableEntry=slbSaspMemberTableEntry, ciscoSlbMIBCompliances=ciscoSlbMIBCompliances, slbRealState=slbRealState, slbSaspMaxLbWeight=slbSaspMaxLbWeight, ciscoSlbDfpRealGroup=ciscoSlbDfpRealGroup, slbVServerInfoTable=slbVServerInfoTable, slbVServerBWRateLimitDropCounts=slbVServerBWRateLimitDropCounts, SlbDfpAgentState=SlbDfpAgentState, SlbSaspAgentState=SlbSaspAgentState, SlbServerString=SlbServerString, slbNotificationObjects=slbNotificationObjects, slbConnectionProtocol=slbConnectionProtocol, slbDfpAgentTable=slbDfpAgentTable, ciscoSlbSaspStateChange=ciscoSlbSaspStateChange, slbVServerL7Decisions=slbVServerL7Decisions, slbServerFarmTableEntry=slbServerFarmTableEntry, slbVirtualProtocol=slbVirtualProtocol, slbStatsEstablishedHCConnections=slbStatsEstablishedHCConnections, slbSaspEnabled=slbSaspEnabled, ciscoSlbMIBComplianceRev6=ciscoSlbMIBComplianceRev6, slbVirtualServerName=slbVirtualServerName, slbDfpRealBindId=slbDfpRealBindId, ciscoSlbVirtualStateChange=ciscoSlbVirtualStateChange, slbSaspAgentIpAddressType=slbSaspAgentIpAddressType, slbSaspStats=slbSaspStats, slbRealIpAddress=slbRealIpAddress, slbVServerPacketCounts=slbVServerPacketCounts, slbVirtualClientIpAddress=slbVirtualClientIpAddress, ciscoSlbNotifObjectsGroup=ciscoSlbNotifObjectsGroup, slbStatsAssistedSwitchingPkts=slbStatsAssistedSwitchingPkts, slbConnectionNumCacheEntries=slbConnectionNumCacheEntries, slbRealTotalFails=slbRealTotalFails, slbRealRowStatus=slbRealRowStatus, slbSaspAgentLabel=slbSaspAgentLabel, slbDfpRealTableEntry=slbDfpRealTableEntry, ciscoSlbMIBConformance=ciscoSlbMIBConformance, slbConnectionVirtualIpAddress=slbConnectionVirtualIpAddress, slbDfpPasswordRowStatus=slbDfpPasswordRowStatus, ciscoSlbMIBComplianceRev2=ciscoSlbMIBComplianceRev2, slbVirtualStickyTimer=slbVirtualStickyTimer, ciscoSlbSaspStatsGroup=ciscoSlbSaspStatsGroup, slbVirtualSynguardPeriod=slbVirtualSynguardPeriod, slbSaspTableEntry=slbSaspTableEntry, slbSaspStatsRxDeregMsgs=slbSaspStatsRxDeregMsgs, slbStats=slbStats, slbName=slbName, slbSaspStatsRxGetWeightMsgs=slbSaspStatsRxGetWeightMsgs, ciscoSlbMIBCompliance=ciscoSlbMIBCompliance, slbStatsEstablishedConnections=slbStatsEstablishedConnections, slbRealFailedConnections=slbRealFailedConnections, slbDfpAgentRetryCount=slbDfpAgentRetryCount, slbServerFarmRowStatus=slbServerFarmRowStatus, slbVServerIpMask=slbVServerIpMask, slbSaspAgentTableEntry=slbSaspAgentTableEntry, slbSaspStatsTable=slbSaspStatsTable, slbSaspAgentState=slbSaspAgentState, ciscoSlbSaspGroup=ciscoSlbSaspGroup, slbDfpPasswordTimeout=slbDfpPasswordTimeout, slbServerFarmName=slbServerFarmName, slbVServerClassMap=slbVServerClassMap, ciscoSlbSaspNotifGroup=ciscoSlbSaspNotifGroup, ciscoSlbVirtualClientsGroup=ciscoSlbVirtualClientsGroup, ciscoSlbNotifEnabledGroupRev2=ciscoSlbNotifEnabledGroupRev2, slbVirtualClientExclude=slbVirtualClientExclude, slbDfpRealIpAddress=slbDfpRealIpAddress, slbStatsAssistedSwitchingHCPkts=slbStatsAssistedSwitchingHCPkts, slbInetAddressType=slbInetAddressType, slbStickyObjectTableEntry=slbStickyObjectTableEntry, SlbPredictor=SlbPredictor, slbVirtualStickyGroup=slbVirtualStickyGroup, ciscoSlbSaspMemberGroup=ciscoSlbSaspMemberGroup, SlbVirtualServState=SlbVirtualServState, ciscoSlbVServerInfoGroupRev1=ciscoSlbVServerInfoGroupRev1, ciscoSlbConnectionsGroup=ciscoSlbConnectionsGroup, slbVirtualServerTableEntry=slbVirtualServerTableEntry, ciscoSlbVServerInfoGroup=ciscoSlbVServerInfoGroup, ciscoSlbSaspGroupGroup=ciscoSlbSaspGroupGroup, slbVServerIPTable=slbVServerIPTable, slbServerFarms=slbServerFarms, slbVirtualServerTable=slbVirtualServerTable, slbSasp=slbSasp, slbVServerPortLow=slbVServerPortLow, slbRealReassign=slbRealReassign, slbVServerObjectIndex=slbVServerObjectIndex, slbSaspRedundancy=slbSaspRedundancy, slbSaspGroupTableEntry=slbSaspGroupTableEntry, slbSaspMemberIpAddress=slbSaspMemberIpAddress, ciscoSlbSaspAgentStateChange=ciscoSlbSaspAgentStateChange, ciscoSlbMIBNotificationPrefix=ciscoSlbMIBNotificationPrefix, slbDfpRealProtocol=slbDfpRealProtocol, slbSaspStatsRxSetLBStateMsgs=slbSaspStatsRxSetLBStateMsgs, slbStatsCreatedHCConnections=slbStatsCreatedHCConnections, slbVirtualAdvertise=slbVirtualAdvertise, slbSaspMemberWeightChanges=slbSaspMemberWeightChanges, slbDfpAgentState=slbDfpAgentState, cSlbVirtualServerStateChangeNotifEnabled=cSlbVirtualServerStateChangeNotifEnabled, slbVServerTotalConnections=slbVServerTotalConnections, ciscoSlbMIBComplianceRev4=ciscoSlbMIBComplianceRev4, ciscoSlbStatsGroup=ciscoSlbStatsGroup, SlbSaspRedundancy=SlbSaspRedundancy, slbRealPort=slbRealPort, slbVServerPolicyMap=slbVServerPolicyMap, cSlbVServerStateChangeNotifEnabled=cSlbVServerStateChangeNotifEnabled, slbSaspMaxAgents=slbSaspMaxAgents, slbVirtualFarmName=slbVirtualFarmName, slbVirtualServers=slbVirtualServers, slbSaspMemberRowStatus=slbSaspMemberRowStatus, slbRealFailedClients=slbRealFailedClients, slbRealServers=slbRealServers, slbDfpAgentTableEntry=slbDfpAgentTableEntry, slbStatsUnassistedSwitchingHCPks=slbStatsUnassistedSwitchingHCPks, slbDfpAgentRowStatus=slbDfpAgentRowStatus, slbSaspMemberIpAddressType=slbSaspMemberIpAddressType, slbSaspMemberDefaultWeight=slbSaspMemberDefaultWeight, ciscoSlbNotifEnabledGroup=ciscoSlbNotifEnabledGroup, slbVirtualClients=slbVirtualClients, slbSaspAgentIpAddress=slbSaspAgentIpAddress, ciscoSlbServerFarmsGroup=ciscoSlbServerFarmsGroup, slbConnectionTableEntry=slbConnectionTableEntry, slbDfpAgentPort=slbDfpAgentPort, ciscoSlbVirtualServersGroup=ciscoSlbVirtualServersGroup, slbVirtualDelayTimer=slbVirtualDelayTimer, slbStickyObjectRowStatus=slbStickyObjectRowStatus, ciscoSlbStickyObjectsGroup=ciscoSlbStickyObjectsGroup, slbPort=slbPort, slbVirtualIpAddress=slbVirtualIpAddress, slbRealOperWeight=slbRealOperWeight, slbConnectionState=slbConnectionState, slbVServerInfoTableEntry=slbVServerInfoTableEntry, SlbPasswordString=SlbPasswordString)
mibBuilder.exportSymbols("CISCO-SLB-MIB", slbVServerIpAddress=slbVServerIpAddress, slbConnectionClientPort=slbConnectionClientPort, slbSaspMemberLastWeightChange=slbSaspMemberLastWeightChange, SlbRealServerState=SlbRealServerState, slbSaspGroups=slbSaspGroups, ciscoSlbVirtualServersAddGroup=ciscoSlbVirtualServersAddGroup, slbConnectionClientIpAddr=slbConnectionClientIpAddr, slbVServerBandWidthRateLimitDropCounts=slbVServerBandWidthRateLimitDropCounts, slbVirtualServerState=slbVirtualServerState, slbVServerIpAddressType=slbVServerIpAddressType, slbDfpRealRowStatus=slbDfpRealRowStatus, slbVServerConnRateLimitDropCounts=slbVServerConnRateLimitDropCounts, slbConnectionTable=slbConnectionTable, slbVServerRowStatus=slbVServerRowStatus, slbServerFarmPredictor=slbServerFarmPredictor, slbSaspMemberConfidentWeight=slbSaspMemberConfidentWeight, slbVServerStateChangeDescr=slbVServerStateChangeDescr, slbSaspStatsTxDeregMsgs=slbSaspStatsTxDeregMsgs, slbSaspStatsRxSetMemStateMsgs=slbSaspStatsRxSetMemStateMsgs, slbSaspGroupRowStatus=slbSaspGroupRowStatus, cSlbRealServerStateChangeNotifEnabled=cSlbRealServerStateChangeNotifEnabled, slbStickyObjectFtpControlCount=slbStickyObjectFtpControlCount, slbSaspStatsTableEntry=slbSaspStatsTableEntry, slbSaspStatsRxSendWeightMsgs=slbSaspStatsRxSendWeightMsgs, slbStatsDestroyedHCConnections=slbStatsDestroyedHCConnections, slbVirtualClientRowStatus=slbVirtualClientRowStatus, slbVirtualNumberOfConnections=slbVirtualNumberOfConnections, slbDfpAgentInterval=slbDfpAgentInterval, slbServerFarmNumberOfRealServers=slbServerFarmNumberOfRealServers, slbVServerIndex=slbVServerIndex)
