#
# PySNMP MIB module Nortel-Magellan-Passport-ShelfMIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/Nortel-Magellan-Passport-ShelfMIB
# Produced by pysmi-0.3.4 at Mon Apr 29 20:18:26 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, SingleValueConstraint, ValueSizeConstraint, ConstraintsUnion, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "SingleValueConstraint", "ValueSizeConstraint", "ConstraintsUnion", "ConstraintsIntersection")
Unsigned32, StorageType, RowStatus, Integer32, Gauge32, RowPointer, DisplayString = mibBuilder.importSymbols("Nortel-Magellan-Passport-StandardTextualConventionsMIB", "Unsigned32", "StorageType", "RowStatus", "Integer32", "Gauge32", "RowPointer", "DisplayString")
AsciiString, ExtendedAsciiString, Hex, NonReplicated, Link = mibBuilder.importSymbols("Nortel-Magellan-Passport-TextualConventionsMIB", "AsciiString", "ExtendedAsciiString", "Hex", "NonReplicated", "Link")
passportMIBs, components = mibBuilder.importSymbols("Nortel-Magellan-Passport-UsefulDefinitionsMIB", "passportMIBs", "components")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
Unsigned32, Counter64, iso, MibScalar, MibTable, MibTableRow, MibTableColumn, Integer32, NotificationType, IpAddress, Counter32, Gauge32, ObjectIdentity, Bits, MibIdentifier, ModuleIdentity, TimeTicks = mibBuilder.importSymbols("SNMPv2-SMI", "Unsigned32", "Counter64", "iso", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Integer32", "NotificationType", "IpAddress", "Counter32", "Gauge32", "ObjectIdentity", "Bits", "MibIdentifier", "ModuleIdentity", "TimeTicks")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
shelfMIB = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 12))
shelf = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 13))
shelfRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 13, 1), )
if mibBuilder.loadTexts: shelfRowStatusTable.setStatus('mandatory')
shelfRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 13, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-ShelfMIB", "shelfIndex"))
if mibBuilder.loadTexts: shelfRowStatusEntry.setStatus('mandatory')
shelfRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 13, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: shelfRowStatus.setStatus('mandatory')
shelfComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 13, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: shelfComponentName.setStatus('mandatory')
shelfStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 13, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: shelfStorageType.setStatus('mandatory')
shelfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 13, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: shelfIndex.setStatus('mandatory')
shelfProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 13, 10), )
if mibBuilder.loadTexts: shelfProvTable.setStatus('mandatory')
shelfProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 13, 10, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-ShelfMIB", "shelfIndex"))
if mibBuilder.loadTexts: shelfProvEntry.setStatus('mandatory')
shelfCommentText = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 13, 10, 1, 1), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(0, 80)).clone(hexValue="")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: shelfCommentText.setStatus('mandatory')
shelfOperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 13, 11), )
if mibBuilder.loadTexts: shelfOperTable.setStatus('mandatory')
shelfOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 13, 11, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-ShelfMIB", "shelfIndex"))
if mibBuilder.loadTexts: shelfOperEntry.setStatus('mandatory')
shelfBusOperatingMode = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 13, 11, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("noBus", 0), ("singleBusX", 1), ("singleBusY", 2), ("dualBus", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: shelfBusOperatingMode.setStatus('mandatory')
shelfHardwareFailures = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 13, 11, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 1)).setFixedLength(1)).setMaxAccess("readonly")
if mibBuilder.loadTexts: shelfHardwareFailures.setStatus('mandatory')
shelfNumberOfSlots = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 13, 11, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: shelfNumberOfSlots.setStatus('mandatory')
shelfCard = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 13, 2))
shelfCardRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 13, 2, 1), )
if mibBuilder.loadTexts: shelfCardRowStatusTable.setStatus('mandatory')
shelfCardRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 13, 2, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-ShelfMIB", "shelfIndex"), (0, "Nortel-Magellan-Passport-ShelfMIB", "shelfCardIndex"))
if mibBuilder.loadTexts: shelfCardRowStatusEntry.setStatus('mandatory')
shelfCardRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 13, 2, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: shelfCardRowStatus.setStatus('mandatory')
shelfCardComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 13, 2, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: shelfCardComponentName.setStatus('mandatory')
shelfCardStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 13, 2, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: shelfCardStorageType.setStatus('mandatory')
shelfCardIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 13, 2, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 15)))
if mibBuilder.loadTexts: shelfCardIndex.setStatus('mandatory')
shelfCardProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 13, 2, 10), )
if mibBuilder.loadTexts: shelfCardProvTable.setStatus('mandatory')
shelfCardProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 13, 2, 10, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-ShelfMIB", "shelfIndex"), (0, "Nortel-Magellan-Passport-ShelfMIB", "shelfCardIndex"))
if mibBuilder.loadTexts: shelfCardProvEntry.setStatus('mandatory')
shelfCardCardType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 13, 2, 10, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 82))).clone(namedValues=NamedValues(("cP", 0), ("v11", 1), ("v35", 2), ("dS1", 3), ("dS1V", 4), ("dS3", 5), ("e1", 6), ("e1V", 7), ("e3", 8), ("none", 9), ("n1pFddiMultiMode", 10), ("n4pTokenRing", 11), ("n6pEth10BaseT", 12), ("dS1C", 13), ("e1C", 14), ("n3pE3Atm", 15), ("n3pDS3Atm", 16), ("n3pOC3MmAtm", 17), ("n3pOC3SmAtm", 19), ("n3pE1Atm", 20), ("n3pDS1Atm", 21), ("j2MV", 22), ("n4pEthAui", 23), ("n1pFddiSingleMode", 24), ("n1pDS1V", 25), ("n1pE1V", 26), ("n2pJ6MAtm", 27), ("hSSI", 33), ("n8pDS1", 34), ("cFP1", 35), ("dEV1", 36), ("cFP2", 37), ("dEV2", 38), ("n4pDS1Aal1", 39), ("n4pE1Aal1", 40), ("n1pDS3C", 41), ("ilsForwarder", 42), ("n8pDS1Atm", 43), ("n8pE1Atm", 44), ("n1pE1Mvp", 45), ("n1pDS1Mvp", 46), ("n1pTTC2mMvp", 47), ("n1pDS3cAal", 51), ("n2pDS3cAal", 52), ("n12mVspAal", 53), ("n2pEth100BaseT", 54), ("n2pOC3MmAtm2", 55), ("n2pOC3SmAtm2", 56), ("n3pDS3Atm2", 57), ("n3pE3Atm2", 58), ("cPeD", 59), ("cPeE", 60), ("n4pOC3SmIrAtm", 61), ("n4pOC3MmAtm", 62), ("n12pDS3Atm", 63), ("n12pE3Atm", 64), ("n1pOC12SmLrAtm", 65), ("n1pE1Mvpe", 66), ("n1pDS1Mvpe", 67), ("n1pTTC2mMvpe", 68), ("msa32", 69), ("msa32mt", 70), ("msa32mtp", 71), ("msa32st", 72), ("msa32stp", 73), ("n32pE1Aal", 74), ("n12mPcusp", 82))).clone('none')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: shelfCardCardType.setStatus('mandatory')
shelfCardSparingConnection = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 13, 2, 10, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 16))).clone(namedValues=NamedValues(("notApplicable", 0), ("mainA", 1), ("mainB", 2), ("mainC", 3), ("mainD", 4), ("spare", 16))).clone('notApplicable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: shelfCardSparingConnection.setStatus('mandatory')
shelfCardCommentText = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 13, 2, 10, 1, 4), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(0, 80)).clone(hexValue="")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: shelfCardCommentText.setStatus('mandatory')
shelfCardStateTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 13, 2, 11), )
if mibBuilder.loadTexts: shelfCardStateTable.setStatus('mandatory')
shelfCardStateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 13, 2, 11, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-ShelfMIB", "shelfIndex"), (0, "Nortel-Magellan-Passport-ShelfMIB", "shelfCardIndex"))
if mibBuilder.loadTexts: shelfCardStateEntry.setStatus('mandatory')
shelfCardAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 13, 2, 11, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("locked", 0), ("unlocked", 1), ("shuttingDown", 2))).clone('unlocked')).setMaxAccess("readonly")
if mibBuilder.loadTexts: shelfCardAdminState.setStatus('mandatory')
shelfCardOperationalState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 13, 2, 11, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1))).clone('disabled')).setMaxAccess("readonly")
if mibBuilder.loadTexts: shelfCardOperationalState.setStatus('mandatory')
shelfCardUsageState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 13, 2, 11, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("idle", 0), ("active", 1), ("busy", 2))).clone('idle')).setMaxAccess("readonly")
if mibBuilder.loadTexts: shelfCardUsageState.setStatus('mandatory')
shelfCardAvailabilityStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 13, 2, 11, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(2, 2)).setFixedLength(2)).setMaxAccess("readonly")
if mibBuilder.loadTexts: shelfCardAvailabilityStatus.setStatus('mandatory')
shelfCardProceduralStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 13, 2, 11, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 1)).setFixedLength(1)).setMaxAccess("readonly")
if mibBuilder.loadTexts: shelfCardProceduralStatus.setStatus('mandatory')
shelfCardControlStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 13, 2, 11, 1, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 1)).setFixedLength(1)).setMaxAccess("readonly")
if mibBuilder.loadTexts: shelfCardControlStatus.setStatus('mandatory')
shelfCardAlarmStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 13, 2, 11, 1, 7), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 1)).setFixedLength(1)).setMaxAccess("readonly")
if mibBuilder.loadTexts: shelfCardAlarmStatus.setStatus('mandatory')
shelfCardStandbyStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 13, 2, 11, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 15))).clone(namedValues=NamedValues(("hotStandby", 0), ("coldStandby", 1), ("providingService", 2), ("notSet", 15))).clone('notSet')).setMaxAccess("readonly")
if mibBuilder.loadTexts: shelfCardStandbyStatus.setStatus('mandatory')
shelfCardUnknownStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 13, 2, 11, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("false", 0), ("true", 1))).clone('false')).setMaxAccess("readonly")
if mibBuilder.loadTexts: shelfCardUnknownStatus.setStatus('mandatory')
shelfCardOperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 13, 2, 12), )
if mibBuilder.loadTexts: shelfCardOperTable.setStatus('mandatory')
shelfCardOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 13, 2, 12, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-ShelfMIB", "shelfIndex"), (0, "Nortel-Magellan-Passport-ShelfMIB", "shelfCardIndex"))
if mibBuilder.loadTexts: shelfCardOperEntry.setStatus('mandatory')
shelfCardCurrentLP = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 13, 2, 12, 1, 1), RowPointer()).setMaxAccess("readonly")
if mibBuilder.loadTexts: shelfCardCurrentLP.setStatus('obsolete')
shelfCardFailureCause = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 13, 2, 12, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("none", 0), ("wrongCardType", 1), ("notConfigured", 2), ("cannotLoadSoftware", 3), ("failedSelfTests", 4), ("notResponding", 5), ("busConnectivityProblem", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: shelfCardFailureCause.setStatus('mandatory')
shelfCardSelfTestFault = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 13, 2, 12, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0))).clone(namedValues=NamedValues(("none", 0)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: shelfCardSelfTestFault.setStatus('mandatory')
shelfCardSparingConnectionStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 13, 2, 12, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("notApplicable", 0), ("n1for1Ok", 1), ("n1forNOk", 2), ("unconfirmed", 3), ("notConnected", 4), ("incorrectlyConnected", 5), ("inconsistentlyConnected", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: shelfCardSparingConnectionStatus.setStatus('mandatory')
shelfCardPropTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 13, 2, 13), )
if mibBuilder.loadTexts: shelfCardPropTable.setStatus('mandatory')
shelfCardPropEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 13, 2, 13, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-ShelfMIB", "shelfIndex"), (0, "Nortel-Magellan-Passport-ShelfMIB", "shelfCardIndex"))
if mibBuilder.loadTexts: shelfCardPropEntry.setStatus('mandatory')
shelfCardInsertedCardType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 13, 2, 13, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 82))).clone(namedValues=NamedValues(("cP", 0), ("v11", 1), ("v35", 2), ("dS1", 3), ("dS1V", 4), ("dS3", 5), ("e1", 6), ("e1V", 7), ("e3", 8), ("none", 9), ("n1pFddiMultiMode", 10), ("n4pTokenRing", 11), ("n6pEth10BaseT", 12), ("dS1C", 13), ("e1C", 14), ("n3pE3Atm", 15), ("n3pDS3Atm", 16), ("n3pOC3MmAtm", 17), ("n1pOC3MmAtm", 18), ("n3pOC3SmAtm", 19), ("n3pE1Atm", 20), ("n3pDS1Atm", 21), ("j2MV", 22), ("n4pEthAui", 23), ("n1pFddiSingleMode", 24), ("n1pDS1V", 25), ("n1pE1V", 26), ("n2pJ6MAtm", 27), ("hSSI", 33), ("n8pDS1", 34), ("cFP1", 35), ("dEV1", 36), ("cFP2", 37), ("dEV2", 38), ("n4pDS1Aal1", 39), ("n4pE1Aal1", 40), ("n1pDS3C", 41), ("ilsForwarder", 42), ("n8pDS1Atm", 43), ("n8pE1Atm", 44), ("n1pE1Mvp", 45), ("n1pDS1Mvp", 46), ("n1pTTC2mMvp", 47), ("n1pDS3cAal", 51), ("n2pDS3cAal", 52), ("n12mVspAal", 53), ("n2pEth100BaseT", 54), ("n2pOC3MmAtm2", 55), ("n2pOC3SmAtm2", 56), ("n3pDS3Atm2", 57), ("n3pE3Atm2", 58), ("cPeD", 59), ("cPeE", 60), ("n4pOC3SmIrAtm", 61), ("n4pOC3MmAtm", 62), ("n12pDS3Atm", 63), ("n12pE3Atm", 64), ("n1pOC12SmLrAtm", 65), ("n1pE1Mvpe", 66), ("n1pDS1Mvpe", 67), ("n1pTTC2mMvpe", 68), ("msa32", 69), ("msa32mt", 70), ("msa32mtp", 71), ("msa32st", 72), ("msa32stp", 73), ("n32pE1Aal", 74), ("n12mPcusp", 82)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: shelfCardInsertedCardType.setStatus('mandatory')
shelfCardPmRevisionCode = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 13, 2, 13, 1, 2), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: shelfCardPmRevisionCode.setStatus('mandatory')
shelfCardImRevisionCode = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 13, 2, 13, 1, 3), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: shelfCardImRevisionCode.setStatus('mandatory')
shelfCardSerialNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 13, 2, 13, 1, 4), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: shelfCardSerialNumber.setStatus('mandatory')
shelfCardActiveFirmwareVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 13, 2, 13, 1, 5), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: shelfCardActiveFirmwareVersion.setStatus('mandatory')
shelfCardInactiveFirmwareVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 13, 2, 13, 1, 6), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: shelfCardInactiveFirmwareVersion.setStatus('mandatory')
shelfCardProductCode = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 13, 2, 13, 1, 7), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(0, 12))).setMaxAccess("readonly")
if mibBuilder.loadTexts: shelfCardProductCode.setStatus('mandatory')
shelfCardUtilTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 13, 2, 14), )
if mibBuilder.loadTexts: shelfCardUtilTable.setStatus('mandatory')
shelfCardUtilEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 13, 2, 14, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-ShelfMIB", "shelfIndex"), (0, "Nortel-Magellan-Passport-ShelfMIB", "shelfCardIndex"))
if mibBuilder.loadTexts: shelfCardUtilEntry.setStatus('mandatory')
shelfCardTimeInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 13, 2, 14, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: shelfCardTimeInterval.setStatus('mandatory')
shelfCardCpuUtil = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 13, 2, 14, 1, 2), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: shelfCardCpuUtil.setStatus('mandatory')
shelfCardCpuUtilAvg = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 13, 2, 14, 1, 3), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: shelfCardCpuUtilAvg.setStatus('mandatory')
shelfCardCpuUtilAvgMin = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 13, 2, 14, 1, 4), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: shelfCardCpuUtilAvgMin.setStatus('mandatory')
shelfCardCpuUtilAvgMax = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 13, 2, 14, 1, 5), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: shelfCardCpuUtilAvgMax.setStatus('mandatory')
shelfCardMsgBlockUsage = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 13, 2, 14, 1, 6), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: shelfCardMsgBlockUsage.setStatus('mandatory')
shelfCardMsgBlockUsageAvg = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 13, 2, 14, 1, 7), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: shelfCardMsgBlockUsageAvg.setStatus('mandatory')
shelfCardMsgBlockUsageAvgMin = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 13, 2, 14, 1, 8), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: shelfCardMsgBlockUsageAvgMin.setStatus('mandatory')
shelfCardMsgBlockUsageAvgMax = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 13, 2, 14, 1, 9), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: shelfCardMsgBlockUsageAvgMax.setStatus('mandatory')
shelfCardLocalMsgBlockUsage = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 13, 2, 14, 1, 10), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: shelfCardLocalMsgBlockUsage.setStatus('mandatory')
shelfCardLocalMsgBlockUsageAvg = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 13, 2, 14, 1, 11), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: shelfCardLocalMsgBlockUsageAvg.setStatus('mandatory')
shelfCardLocalMsgBlockUsageMin = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 13, 2, 14, 1, 12), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: shelfCardLocalMsgBlockUsageMin.setStatus('mandatory')
shelfCardLocalMsgBlockUsageMax = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 13, 2, 14, 1, 13), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: shelfCardLocalMsgBlockUsageMax.setStatus('mandatory')
shelfCardCapTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 13, 2, 15), )
if mibBuilder.loadTexts: shelfCardCapTable.setStatus('mandatory')
shelfCardCapEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 13, 2, 15, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-ShelfMIB", "shelfIndex"), (0, "Nortel-Magellan-Passport-ShelfMIB", "shelfCardIndex"))
if mibBuilder.loadTexts: shelfCardCapEntry.setStatus('mandatory')
shelfCardMsgBlockCapacity = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 13, 2, 15, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: shelfCardMsgBlockCapacity.setStatus('mandatory')
shelfCardLocalMsgBlockCapacity = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 13, 2, 15, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: shelfCardLocalMsgBlockCapacity.setStatus('mandatory')
shelfCardConfiguredLPsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 13, 2, 243), )
if mibBuilder.loadTexts: shelfCardConfiguredLPsTable.setStatus('mandatory')
shelfCardConfiguredLPsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 13, 2, 243, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-ShelfMIB", "shelfIndex"), (0, "Nortel-Magellan-Passport-ShelfMIB", "shelfCardIndex"), (0, "Nortel-Magellan-Passport-ShelfMIB", "shelfCardConfiguredLPsValue"))
if mibBuilder.loadTexts: shelfCardConfiguredLPsEntry.setStatus('mandatory')
shelfCardConfiguredLPsValue = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 13, 2, 243, 1, 1), Link()).setMaxAccess("readonly")
if mibBuilder.loadTexts: shelfCardConfiguredLPsValue.setStatus('mandatory')
shelfCardMemoryCapacityTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 13, 2, 244), )
if mibBuilder.loadTexts: shelfCardMemoryCapacityTable.setStatus('mandatory')
shelfCardMemoryCapacityEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 13, 2, 244, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-ShelfMIB", "shelfIndex"), (0, "Nortel-Magellan-Passport-ShelfMIB", "shelfCardIndex"), (0, "Nortel-Magellan-Passport-ShelfMIB", "shelfCardMemoryCapacityIndex"))
if mibBuilder.loadTexts: shelfCardMemoryCapacityEntry.setStatus('mandatory')
shelfCardMemoryCapacityIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 13, 2, 244, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("fastRam", 0), ("normalRam", 1), ("sharedRam", 2))))
if mibBuilder.loadTexts: shelfCardMemoryCapacityIndex.setStatus('mandatory')
shelfCardMemoryCapacityValue = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 13, 2, 244, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: shelfCardMemoryCapacityValue.setStatus('mandatory')
shelfCardMemoryUsageTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 13, 2, 245), )
if mibBuilder.loadTexts: shelfCardMemoryUsageTable.setStatus('mandatory')
shelfCardMemoryUsageEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 13, 2, 245, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-ShelfMIB", "shelfIndex"), (0, "Nortel-Magellan-Passport-ShelfMIB", "shelfCardIndex"), (0, "Nortel-Magellan-Passport-ShelfMIB", "shelfCardMemoryUsageIndex"))
if mibBuilder.loadTexts: shelfCardMemoryUsageEntry.setStatus('mandatory')
shelfCardMemoryUsageIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 13, 2, 245, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("fastRam", 0), ("normalRam", 1), ("sharedRam", 2))))
if mibBuilder.loadTexts: shelfCardMemoryUsageIndex.setStatus('mandatory')
shelfCardMemoryUsageValue = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 13, 2, 245, 1, 2), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: shelfCardMemoryUsageValue.setStatus('mandatory')
shelfCardMemoryUsageAvgTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 13, 2, 276), )
if mibBuilder.loadTexts: shelfCardMemoryUsageAvgTable.setStatus('mandatory')
shelfCardMemoryUsageAvgEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 13, 2, 276, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-ShelfMIB", "shelfIndex"), (0, "Nortel-Magellan-Passport-ShelfMIB", "shelfCardIndex"), (0, "Nortel-Magellan-Passport-ShelfMIB", "shelfCardMemoryUsageAvgIndex"))
if mibBuilder.loadTexts: shelfCardMemoryUsageAvgEntry.setStatus('mandatory')
shelfCardMemoryUsageAvgIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 13, 2, 276, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("fastRam", 0), ("normalRam", 1), ("sharedRam", 2))))
if mibBuilder.loadTexts: shelfCardMemoryUsageAvgIndex.setStatus('mandatory')
shelfCardMemoryUsageAvgValue = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 13, 2, 276, 1, 2), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: shelfCardMemoryUsageAvgValue.setStatus('mandatory')
shelfCardMemoryUsageAvgMinTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 13, 2, 277), )
if mibBuilder.loadTexts: shelfCardMemoryUsageAvgMinTable.setStatus('mandatory')
shelfCardMemoryUsageAvgMinEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 13, 2, 277, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-ShelfMIB", "shelfIndex"), (0, "Nortel-Magellan-Passport-ShelfMIB", "shelfCardIndex"), (0, "Nortel-Magellan-Passport-ShelfMIB", "shelfCardMemoryUsageAvgMinIndex"))
if mibBuilder.loadTexts: shelfCardMemoryUsageAvgMinEntry.setStatus('mandatory')
shelfCardMemoryUsageAvgMinIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 13, 2, 277, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("fastRam", 0), ("normalRam", 1), ("sharedRam", 2))))
if mibBuilder.loadTexts: shelfCardMemoryUsageAvgMinIndex.setStatus('mandatory')
shelfCardMemoryUsageAvgMinValue = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 13, 2, 277, 1, 2), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: shelfCardMemoryUsageAvgMinValue.setStatus('mandatory')
shelfCardMemoryUsageAvgMaxTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 13, 2, 278), )
if mibBuilder.loadTexts: shelfCardMemoryUsageAvgMaxTable.setStatus('mandatory')
shelfCardMemoryUsageAvgMaxEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 13, 2, 278, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-ShelfMIB", "shelfIndex"), (0, "Nortel-Magellan-Passport-ShelfMIB", "shelfCardIndex"), (0, "Nortel-Magellan-Passport-ShelfMIB", "shelfCardMemoryUsageAvgMaxIndex"))
if mibBuilder.loadTexts: shelfCardMemoryUsageAvgMaxEntry.setStatus('mandatory')
shelfCardMemoryUsageAvgMaxIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 13, 2, 278, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("fastRam", 0), ("normalRam", 1), ("sharedRam", 2))))
if mibBuilder.loadTexts: shelfCardMemoryUsageAvgMaxIndex.setStatus('mandatory')
shelfCardMemoryUsageAvgMaxValue = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 13, 2, 278, 1, 2), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: shelfCardMemoryUsageAvgMaxValue.setStatus('mandatory')
shelfCardCurrentLpTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 13, 2, 406), )
if mibBuilder.loadTexts: shelfCardCurrentLpTable.setStatus('mandatory')
shelfCardCurrentLpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 13, 2, 406, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-ShelfMIB", "shelfIndex"), (0, "Nortel-Magellan-Passport-ShelfMIB", "shelfCardIndex"), (0, "Nortel-Magellan-Passport-ShelfMIB", "shelfCardCurrentLpValue"))
if mibBuilder.loadTexts: shelfCardCurrentLpEntry.setStatus('mandatory')
shelfCardCurrentLpValue = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 13, 2, 406, 1, 1), RowPointer()).setMaxAccess("readonly")
if mibBuilder.loadTexts: shelfCardCurrentLpValue.setStatus('mandatory')
shelfCardBusTap = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 13, 2, 2))
shelfCardBusTapRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 13, 2, 2, 1), )
if mibBuilder.loadTexts: shelfCardBusTapRowStatusTable.setStatus('mandatory')
shelfCardBusTapRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 13, 2, 2, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-ShelfMIB", "shelfIndex"), (0, "Nortel-Magellan-Passport-ShelfMIB", "shelfCardIndex"), (0, "Nortel-Magellan-Passport-ShelfMIB", "shelfCardBusTapIndex"))
if mibBuilder.loadTexts: shelfCardBusTapRowStatusEntry.setStatus('mandatory')
shelfCardBusTapRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 13, 2, 2, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: shelfCardBusTapRowStatus.setStatus('mandatory')
shelfCardBusTapComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 13, 2, 2, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: shelfCardBusTapComponentName.setStatus('mandatory')
shelfCardBusTapStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 13, 2, 2, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: shelfCardBusTapStorageType.setStatus('mandatory')
shelfCardBusTapIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 13, 2, 2, 1, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("x", 0), ("y", 1))))
if mibBuilder.loadTexts: shelfCardBusTapIndex.setStatus('mandatory')
shelfCardBusTapStateTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 13, 2, 2, 10), )
if mibBuilder.loadTexts: shelfCardBusTapStateTable.setStatus('mandatory')
shelfCardBusTapStateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 13, 2, 2, 10, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-ShelfMIB", "shelfIndex"), (0, "Nortel-Magellan-Passport-ShelfMIB", "shelfCardIndex"), (0, "Nortel-Magellan-Passport-ShelfMIB", "shelfCardBusTapIndex"))
if mibBuilder.loadTexts: shelfCardBusTapStateEntry.setStatus('mandatory')
shelfCardBusTapAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 13, 2, 2, 10, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("locked", 0), ("unlocked", 1), ("shuttingDown", 2))).clone('unlocked')).setMaxAccess("readonly")
if mibBuilder.loadTexts: shelfCardBusTapAdminState.setStatus('mandatory')
shelfCardBusTapOperationalState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 13, 2, 2, 10, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1))).clone('disabled')).setMaxAccess("readonly")
if mibBuilder.loadTexts: shelfCardBusTapOperationalState.setStatus('mandatory')
shelfCardBusTapUsageState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 13, 2, 2, 10, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("idle", 0), ("active", 1), ("busy", 2))).clone('idle')).setMaxAccess("readonly")
if mibBuilder.loadTexts: shelfCardBusTapUsageState.setStatus('mandatory')
shelfCardBusTapAvailabilityStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 13, 2, 2, 10, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(2, 2)).setFixedLength(2)).setMaxAccess("readonly")
if mibBuilder.loadTexts: shelfCardBusTapAvailabilityStatus.setStatus('mandatory')
shelfCardBusTapProceduralStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 13, 2, 2, 10, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 1)).setFixedLength(1)).setMaxAccess("readonly")
if mibBuilder.loadTexts: shelfCardBusTapProceduralStatus.setStatus('mandatory')
shelfCardBusTapControlStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 13, 2, 2, 10, 1, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 1)).setFixedLength(1)).setMaxAccess("readonly")
if mibBuilder.loadTexts: shelfCardBusTapControlStatus.setStatus('mandatory')
shelfCardBusTapAlarmStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 13, 2, 2, 10, 1, 7), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 1)).setFixedLength(1)).setMaxAccess("readonly")
if mibBuilder.loadTexts: shelfCardBusTapAlarmStatus.setStatus('mandatory')
shelfCardBusTapStandbyStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 13, 2, 2, 10, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 15))).clone(namedValues=NamedValues(("hotStandby", 0), ("coldStandby", 1), ("providingService", 2), ("notSet", 15))).clone('notSet')).setMaxAccess("readonly")
if mibBuilder.loadTexts: shelfCardBusTapStandbyStatus.setStatus('mandatory')
shelfCardBusTapUnknownStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 13, 2, 2, 10, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("false", 0), ("true", 1))).clone('false')).setMaxAccess("readonly")
if mibBuilder.loadTexts: shelfCardBusTapUnknownStatus.setStatus('mandatory')
shelfCardBusTapOperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 13, 2, 2, 11), )
if mibBuilder.loadTexts: shelfCardBusTapOperTable.setStatus('mandatory')
shelfCardBusTapOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 13, 2, 2, 11, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-ShelfMIB", "shelfIndex"), (0, "Nortel-Magellan-Passport-ShelfMIB", "shelfCardIndex"), (0, "Nortel-Magellan-Passport-ShelfMIB", "shelfCardBusTapIndex"))
if mibBuilder.loadTexts: shelfCardBusTapOperEntry.setStatus('mandatory')
shelfCardBusTapFailuresInEffect = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 13, 2, 2, 11, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 1)).setFixedLength(1)).setMaxAccess("readonly")
if mibBuilder.loadTexts: shelfCardBusTapFailuresInEffect.setStatus('mandatory')
shelfCardBusTapDependenciesInEffect = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 13, 2, 2, 11, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 1)).setFixedLength(1)).setMaxAccess("readonly")
if mibBuilder.loadTexts: shelfCardBusTapDependenciesInEffect.setStatus('mandatory')
shelfCardBusTapCardsAvailable = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 13, 2, 2, 11, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(2, 2)).setFixedLength(2)).setMaxAccess("readonly")
if mibBuilder.loadTexts: shelfCardBusTapCardsAvailable.setStatus('mandatory')
shelfCardBusTapCardsTxTo = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 13, 2, 2, 11, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(2, 2)).setFixedLength(2)).setMaxAccess("readonly")
if mibBuilder.loadTexts: shelfCardBusTapCardsTxTo.setStatus('mandatory')
shelfCardBusTapErrorsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 13, 2, 2, 12), )
if mibBuilder.loadTexts: shelfCardBusTapErrorsTable.setStatus('mandatory')
shelfCardBusTapErrorsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 13, 2, 2, 12, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-ShelfMIB", "shelfIndex"), (0, "Nortel-Magellan-Passport-ShelfMIB", "shelfCardIndex"), (0, "Nortel-Magellan-Passport-ShelfMIB", "shelfCardBusTapIndex"))
if mibBuilder.loadTexts: shelfCardBusTapErrorsEntry.setStatus('mandatory')
shelfCardBusTapSelfTestErrorCode = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 13, 2, 2, 12, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: shelfCardBusTapSelfTestErrorCode.setStatus('mandatory')
shelfCardBusTapClockErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 13, 2, 2, 12, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: shelfCardBusTapClockErrors.setStatus('mandatory')
shelfCardBusTapEndOfCellErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 13, 2, 2, 12, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: shelfCardBusTapEndOfCellErrors.setStatus('mandatory')
shelfCardBusTapParityErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 13, 2, 2, 12, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: shelfCardBusTapParityErrors.setStatus('mandatory')
shelfCardBusTapFrmCongestionErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 13, 2, 2, 12, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: shelfCardBusTapFrmCongestionErrors.setStatus('mandatory')
shelfCardBusTapFrmCollisionErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 13, 2, 2, 12, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: shelfCardBusTapFrmCollisionErrors.setStatus('mandatory')
shelfCardBusTapFrmTimeoutErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 13, 2, 2, 12, 1, 7), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: shelfCardBusTapFrmTimeoutErrors.setStatus('mandatory')
shelfCardBusTapFrmDeliveryErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 13, 2, 2, 12, 1, 8), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: shelfCardBusTapFrmDeliveryErrors.setStatus('mandatory')
shelfCardBusTapFrmSizeErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 13, 2, 2, 12, 1, 9), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: shelfCardBusTapFrmSizeErrors.setStatus('mandatory')
shelfCardTest = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 13, 2, 3))
shelfCardTestRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 13, 2, 3, 1), )
if mibBuilder.loadTexts: shelfCardTestRowStatusTable.setStatus('mandatory')
shelfCardTestRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 13, 2, 3, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-ShelfMIB", "shelfIndex"), (0, "Nortel-Magellan-Passport-ShelfMIB", "shelfCardIndex"), (0, "Nortel-Magellan-Passport-ShelfMIB", "shelfCardTestIndex"))
if mibBuilder.loadTexts: shelfCardTestRowStatusEntry.setStatus('mandatory')
shelfCardTestRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 13, 2, 3, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: shelfCardTestRowStatus.setStatus('mandatory')
shelfCardTestComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 13, 2, 3, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: shelfCardTestComponentName.setStatus('mandatory')
shelfCardTestStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 13, 2, 3, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: shelfCardTestStorageType.setStatus('mandatory')
shelfCardTestIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 13, 2, 3, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: shelfCardTestIndex.setStatus('mandatory')
shelfCardTestStateTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 13, 2, 3, 10), )
if mibBuilder.loadTexts: shelfCardTestStateTable.setStatus('mandatory')
shelfCardTestStateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 13, 2, 3, 10, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-ShelfMIB", "shelfIndex"), (0, "Nortel-Magellan-Passport-ShelfMIB", "shelfCardIndex"), (0, "Nortel-Magellan-Passport-ShelfMIB", "shelfCardTestIndex"))
if mibBuilder.loadTexts: shelfCardTestStateEntry.setStatus('mandatory')
shelfCardTestAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 13, 2, 3, 10, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("locked", 0), ("unlocked", 1), ("shuttingDown", 2))).clone('unlocked')).setMaxAccess("readonly")
if mibBuilder.loadTexts: shelfCardTestAdminState.setStatus('mandatory')
shelfCardTestOperationalState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 13, 2, 3, 10, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1))).clone('disabled')).setMaxAccess("readonly")
if mibBuilder.loadTexts: shelfCardTestOperationalState.setStatus('mandatory')
shelfCardTestUsageState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 13, 2, 3, 10, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("idle", 0), ("active", 1), ("busy", 2))).clone('idle')).setMaxAccess("readonly")
if mibBuilder.loadTexts: shelfCardTestUsageState.setStatus('mandatory')
shelfCardTestSetupTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 13, 2, 3, 11), )
if mibBuilder.loadTexts: shelfCardTestSetupTable.setStatus('mandatory')
shelfCardTestSetupEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 13, 2, 3, 11, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-ShelfMIB", "shelfIndex"), (0, "Nortel-Magellan-Passport-ShelfMIB", "shelfCardIndex"), (0, "Nortel-Magellan-Passport-ShelfMIB", "shelfCardTestIndex"))
if mibBuilder.loadTexts: shelfCardTestSetupEntry.setStatus('mandatory')
shelfCardTestTargetCard = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 13, 2, 3, 11, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 15))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: shelfCardTestTargetCard.setStatus('mandatory')
shelfCardTestFrmTypes = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 13, 2, 3, 11, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 1)).setFixedLength(1).clone(hexValue="c0")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: shelfCardTestFrmTypes.setStatus('mandatory')
shelfCardTestFrmPriorities = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 13, 2, 3, 11, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 1)).setFixedLength(1).clone(hexValue="80")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: shelfCardTestFrmPriorities.setStatus('mandatory')
shelfCardTestFrmPatternType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 13, 2, 3, 11, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("ccitt32kBitPattern", 0), ("ccitt8MBitPattern", 1), ("customizedPattern", 2))).clone('ccitt32kBitPattern')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: shelfCardTestFrmPatternType.setStatus('mandatory')
shelfCardTestCustomizedPattern = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 13, 2, 3, 11, 1, 5), Hex().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295)).clone(1431655765)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: shelfCardTestCustomizedPattern.setStatus('mandatory')
shelfCardTestDuration = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 13, 2, 3, 11, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 43200)).clone(60)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: shelfCardTestDuration.setStatus('mandatory')
shelfCardTestResultsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 13, 2, 3, 12), )
if mibBuilder.loadTexts: shelfCardTestResultsTable.setStatus('mandatory')
shelfCardTestResultsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 13, 2, 3, 12, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-ShelfMIB", "shelfIndex"), (0, "Nortel-Magellan-Passport-ShelfMIB", "shelfCardIndex"), (0, "Nortel-Magellan-Passport-ShelfMIB", "shelfCardTestIndex"))
if mibBuilder.loadTexts: shelfCardTestResultsEntry.setStatus('mandatory')
shelfCardTestElapsedTime = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 13, 2, 3, 12, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 43200))).setMaxAccess("readonly")
if mibBuilder.loadTexts: shelfCardTestElapsedTime.setStatus('mandatory')
shelfCardTestTimeRemaining = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 13, 2, 3, 12, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 43200))).setMaxAccess("readonly")
if mibBuilder.loadTexts: shelfCardTestTimeRemaining.setStatus('mandatory')
shelfCardTestCauseOfTermination = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 13, 2, 3, 12, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("neverStarted", 0), ("testRunning", 1), ("testTimeExpired", 2), ("stoppedByOperator", 3), ("targetFailed", 4), ("becameActive", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: shelfCardTestCauseOfTermination.setStatus('mandatory')
shelfCardTestSizeTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 13, 2, 3, 253), )
if mibBuilder.loadTexts: shelfCardTestSizeTable.setStatus('mandatory')
shelfCardTestSizeEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 13, 2, 3, 253, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-ShelfMIB", "shelfIndex"), (0, "Nortel-Magellan-Passport-ShelfMIB", "shelfCardIndex"), (0, "Nortel-Magellan-Passport-ShelfMIB", "shelfCardTestIndex"), (0, "Nortel-Magellan-Passport-ShelfMIB", "shelfCardTestSizeIndex"))
if mibBuilder.loadTexts: shelfCardTestSizeEntry.setStatus('mandatory')
shelfCardTestSizeIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 13, 2, 3, 253, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("lowPriority", 0), ("highPriority", 1))))
if mibBuilder.loadTexts: shelfCardTestSizeIndex.setStatus('mandatory')
shelfCardTestSizeValue = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 13, 2, 3, 253, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(16, 16000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: shelfCardTestSizeValue.setStatus('mandatory')
shelfCardTestLoadingFrmDataTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 13, 2, 3, 254), )
if mibBuilder.loadTexts: shelfCardTestLoadingFrmDataTable.setStatus('mandatory')
shelfCardTestLoadingFrmDataEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 13, 2, 3, 254, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-ShelfMIB", "shelfIndex"), (0, "Nortel-Magellan-Passport-ShelfMIB", "shelfCardIndex"), (0, "Nortel-Magellan-Passport-ShelfMIB", "shelfCardTestIndex"), (0, "Nortel-Magellan-Passport-ShelfMIB", "shelfCardTestLoadingFrmDataResultsIndex"), (0, "Nortel-Magellan-Passport-ShelfMIB", "shelfCardTestLoadingFrmDataPriorityIndex"))
if mibBuilder.loadTexts: shelfCardTestLoadingFrmDataEntry.setStatus('mandatory')
shelfCardTestLoadingFrmDataResultsIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 13, 2, 3, 254, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("framesSent", 0), ("framesLost", 1))))
if mibBuilder.loadTexts: shelfCardTestLoadingFrmDataResultsIndex.setStatus('mandatory')
shelfCardTestLoadingFrmDataPriorityIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 13, 2, 3, 254, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("low", 0), ("high", 1))))
if mibBuilder.loadTexts: shelfCardTestLoadingFrmDataPriorityIndex.setStatus('mandatory')
shelfCardTestLoadingFrmDataValue = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 13, 2, 3, 254, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: shelfCardTestLoadingFrmDataValue.setStatus('mandatory')
shelfCardTestVerificationFrmDataTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 13, 2, 3, 255), )
if mibBuilder.loadTexts: shelfCardTestVerificationFrmDataTable.setStatus('mandatory')
shelfCardTestVerificationFrmDataEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 13, 2, 3, 255, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-ShelfMIB", "shelfIndex"), (0, "Nortel-Magellan-Passport-ShelfMIB", "shelfCardIndex"), (0, "Nortel-Magellan-Passport-ShelfMIB", "shelfCardTestIndex"), (0, "Nortel-Magellan-Passport-ShelfMIB", "shelfCardTestVerificationFrmDataResultsIndex"), (0, "Nortel-Magellan-Passport-ShelfMIB", "shelfCardTestVerificationFrmDataPriorityIndex"))
if mibBuilder.loadTexts: shelfCardTestVerificationFrmDataEntry.setStatus('mandatory')
shelfCardTestVerificationFrmDataResultsIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 13, 2, 3, 255, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("framesTested", 0), ("framesBad", 1))))
if mibBuilder.loadTexts: shelfCardTestVerificationFrmDataResultsIndex.setStatus('mandatory')
shelfCardTestVerificationFrmDataPriorityIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 13, 2, 3, 255, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("low", 0), ("high", 1))))
if mibBuilder.loadTexts: shelfCardTestVerificationFrmDataPriorityIndex.setStatus('mandatory')
shelfCardTestVerificationFrmDataValue = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 13, 2, 3, 255, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: shelfCardTestVerificationFrmDataValue.setStatus('mandatory')
shelfCardDiag = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 13, 2, 4))
shelfCardDiagRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 13, 2, 4, 1), )
if mibBuilder.loadTexts: shelfCardDiagRowStatusTable.setStatus('mandatory')
shelfCardDiagRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 13, 2, 4, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-ShelfMIB", "shelfIndex"), (0, "Nortel-Magellan-Passport-ShelfMIB", "shelfCardIndex"), (0, "Nortel-Magellan-Passport-ShelfMIB", "shelfCardDiagIndex"))
if mibBuilder.loadTexts: shelfCardDiagRowStatusEntry.setStatus('mandatory')
shelfCardDiagRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 13, 2, 4, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: shelfCardDiagRowStatus.setStatus('mandatory')
shelfCardDiagComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 13, 2, 4, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: shelfCardDiagComponentName.setStatus('mandatory')
shelfCardDiagStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 13, 2, 4, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: shelfCardDiagStorageType.setStatus('mandatory')
shelfCardDiagIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 13, 2, 4, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: shelfCardDiagIndex.setStatus('mandatory')
shelfCardDiagTrapData = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 13, 2, 4, 2))
shelfCardDiagTrapDataRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 13, 2, 4, 2, 1), )
if mibBuilder.loadTexts: shelfCardDiagTrapDataRowStatusTable.setStatus('mandatory')
shelfCardDiagTrapDataRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 13, 2, 4, 2, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-ShelfMIB", "shelfIndex"), (0, "Nortel-Magellan-Passport-ShelfMIB", "shelfCardIndex"), (0, "Nortel-Magellan-Passport-ShelfMIB", "shelfCardDiagIndex"), (0, "Nortel-Magellan-Passport-ShelfMIB", "shelfCardDiagTrapDataIndex"))
if mibBuilder.loadTexts: shelfCardDiagTrapDataRowStatusEntry.setStatus('mandatory')
shelfCardDiagTrapDataRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 13, 2, 4, 2, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: shelfCardDiagTrapDataRowStatus.setStatus('mandatory')
shelfCardDiagTrapDataComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 13, 2, 4, 2, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: shelfCardDiagTrapDataComponentName.setStatus('mandatory')
shelfCardDiagTrapDataStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 13, 2, 4, 2, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: shelfCardDiagTrapDataStorageType.setStatus('mandatory')
shelfCardDiagTrapDataIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 13, 2, 4, 2, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: shelfCardDiagTrapDataIndex.setStatus('mandatory')
shelfCardDiagTrapDataLine = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 13, 2, 4, 2, 2))
shelfCardDiagTrapDataLineRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 13, 2, 4, 2, 2, 1), )
if mibBuilder.loadTexts: shelfCardDiagTrapDataLineRowStatusTable.setStatus('mandatory')
shelfCardDiagTrapDataLineRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 13, 2, 4, 2, 2, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-ShelfMIB", "shelfIndex"), (0, "Nortel-Magellan-Passport-ShelfMIB", "shelfCardIndex"), (0, "Nortel-Magellan-Passport-ShelfMIB", "shelfCardDiagIndex"), (0, "Nortel-Magellan-Passport-ShelfMIB", "shelfCardDiagTrapDataIndex"), (0, "Nortel-Magellan-Passport-ShelfMIB", "shelfCardDiagTrapDataLineIndex"))
if mibBuilder.loadTexts: shelfCardDiagTrapDataLineRowStatusEntry.setStatus('mandatory')
shelfCardDiagTrapDataLineRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 13, 2, 4, 2, 2, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: shelfCardDiagTrapDataLineRowStatus.setStatus('mandatory')
shelfCardDiagTrapDataLineComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 13, 2, 4, 2, 2, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: shelfCardDiagTrapDataLineComponentName.setStatus('mandatory')
shelfCardDiagTrapDataLineStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 13, 2, 4, 2, 2, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: shelfCardDiagTrapDataLineStorageType.setStatus('mandatory')
shelfCardDiagTrapDataLineIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 13, 2, 4, 2, 2, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 500)))
if mibBuilder.loadTexts: shelfCardDiagTrapDataLineIndex.setStatus('mandatory')
shelfCardDiagTrapDataLineOperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 13, 2, 4, 2, 2, 10), )
if mibBuilder.loadTexts: shelfCardDiagTrapDataLineOperTable.setStatus('mandatory')
shelfCardDiagTrapDataLineOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 13, 2, 4, 2, 2, 10, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-ShelfMIB", "shelfIndex"), (0, "Nortel-Magellan-Passport-ShelfMIB", "shelfCardIndex"), (0, "Nortel-Magellan-Passport-ShelfMIB", "shelfCardDiagIndex"), (0, "Nortel-Magellan-Passport-ShelfMIB", "shelfCardDiagTrapDataIndex"), (0, "Nortel-Magellan-Passport-ShelfMIB", "shelfCardDiagTrapDataLineIndex"))
if mibBuilder.loadTexts: shelfCardDiagTrapDataLineOperEntry.setStatus('mandatory')
shelfCardDiagTrapDataLineData = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 13, 2, 4, 2, 2, 10, 1, 1), ExtendedAsciiString().subtype(subtypeSpec=ValueSizeConstraint(0, 512))).setMaxAccess("readonly")
if mibBuilder.loadTexts: shelfCardDiagTrapDataLineData.setStatus('mandatory')
shelfCardDiagRecErr = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 13, 2, 4, 3))
shelfCardDiagRecErrRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 13, 2, 4, 3, 1), )
if mibBuilder.loadTexts: shelfCardDiagRecErrRowStatusTable.setStatus('mandatory')
shelfCardDiagRecErrRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 13, 2, 4, 3, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-ShelfMIB", "shelfIndex"), (0, "Nortel-Magellan-Passport-ShelfMIB", "shelfCardIndex"), (0, "Nortel-Magellan-Passport-ShelfMIB", "shelfCardDiagIndex"), (0, "Nortel-Magellan-Passport-ShelfMIB", "shelfCardDiagRecErrIndex"))
if mibBuilder.loadTexts: shelfCardDiagRecErrRowStatusEntry.setStatus('mandatory')
shelfCardDiagRecErrRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 13, 2, 4, 3, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: shelfCardDiagRecErrRowStatus.setStatus('mandatory')
shelfCardDiagRecErrComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 13, 2, 4, 3, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: shelfCardDiagRecErrComponentName.setStatus('mandatory')
shelfCardDiagRecErrStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 13, 2, 4, 3, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: shelfCardDiagRecErrStorageType.setStatus('mandatory')
shelfCardDiagRecErrIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 13, 2, 4, 3, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: shelfCardDiagRecErrIndex.setStatus('mandatory')
shelfCardDiagRecErrLine = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 13, 2, 4, 3, 2))
shelfCardDiagRecErrLineRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 13, 2, 4, 3, 2, 1), )
if mibBuilder.loadTexts: shelfCardDiagRecErrLineRowStatusTable.setStatus('mandatory')
shelfCardDiagRecErrLineRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 13, 2, 4, 3, 2, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-ShelfMIB", "shelfIndex"), (0, "Nortel-Magellan-Passport-ShelfMIB", "shelfCardIndex"), (0, "Nortel-Magellan-Passport-ShelfMIB", "shelfCardDiagIndex"), (0, "Nortel-Magellan-Passport-ShelfMIB", "shelfCardDiagRecErrIndex"), (0, "Nortel-Magellan-Passport-ShelfMIB", "shelfCardDiagRecErrLineIndex"))
if mibBuilder.loadTexts: shelfCardDiagRecErrLineRowStatusEntry.setStatus('mandatory')
shelfCardDiagRecErrLineRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 13, 2, 4, 3, 2, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: shelfCardDiagRecErrLineRowStatus.setStatus('mandatory')
shelfCardDiagRecErrLineComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 13, 2, 4, 3, 2, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: shelfCardDiagRecErrLineComponentName.setStatus('mandatory')
shelfCardDiagRecErrLineStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 13, 2, 4, 3, 2, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: shelfCardDiagRecErrLineStorageType.setStatus('mandatory')
shelfCardDiagRecErrLineIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 13, 2, 4, 3, 2, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 500)))
if mibBuilder.loadTexts: shelfCardDiagRecErrLineIndex.setStatus('mandatory')
shelfCardDiagRecErrLineOperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 13, 2, 4, 3, 2, 10), )
if mibBuilder.loadTexts: shelfCardDiagRecErrLineOperTable.setStatus('mandatory')
shelfCardDiagRecErrLineOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 13, 2, 4, 3, 2, 10, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-ShelfMIB", "shelfIndex"), (0, "Nortel-Magellan-Passport-ShelfMIB", "shelfCardIndex"), (0, "Nortel-Magellan-Passport-ShelfMIB", "shelfCardDiagIndex"), (0, "Nortel-Magellan-Passport-ShelfMIB", "shelfCardDiagRecErrIndex"), (0, "Nortel-Magellan-Passport-ShelfMIB", "shelfCardDiagRecErrLineIndex"))
if mibBuilder.loadTexts: shelfCardDiagRecErrLineOperEntry.setStatus('mandatory')
shelfCardDiagRecErrLineData = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 13, 2, 4, 3, 2, 10, 1, 1), ExtendedAsciiString().subtype(subtypeSpec=ValueSizeConstraint(0, 512))).setMaxAccess("readonly")
if mibBuilder.loadTexts: shelfCardDiagRecErrLineData.setStatus('mandatory')
shelfCardDcard = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 13, 2, 16))
shelfCardDcardRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 13, 2, 16, 1), )
if mibBuilder.loadTexts: shelfCardDcardRowStatusTable.setStatus('mandatory')
shelfCardDcardRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 13, 2, 16, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-ShelfMIB", "shelfIndex"), (0, "Nortel-Magellan-Passport-ShelfMIB", "shelfCardIndex"), (0, "Nortel-Magellan-Passport-ShelfMIB", "shelfCardDcardIndex"))
if mibBuilder.loadTexts: shelfCardDcardRowStatusEntry.setStatus('mandatory')
shelfCardDcardRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 13, 2, 16, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: shelfCardDcardRowStatus.setStatus('mandatory')
shelfCardDcardComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 13, 2, 16, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: shelfCardDcardComponentName.setStatus('mandatory')
shelfCardDcardStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 13, 2, 16, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: shelfCardDcardStorageType.setStatus('mandatory')
shelfCardDcardIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 13, 2, 16, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 15)))
if mibBuilder.loadTexts: shelfCardDcardIndex.setStatus('mandatory')
shelfCardDcardDcardOperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 13, 2, 16, 17), )
if mibBuilder.loadTexts: shelfCardDcardDcardOperTable.setStatus('mandatory')
shelfCardDcardDcardOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 13, 2, 16, 17, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-ShelfMIB", "shelfIndex"), (0, "Nortel-Magellan-Passport-ShelfMIB", "shelfCardIndex"), (0, "Nortel-Magellan-Passport-ShelfMIB", "shelfCardDcardIndex"))
if mibBuilder.loadTexts: shelfCardDcardDcardOperEntry.setStatus('mandatory')
shelfCardDcardType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 13, 2, 16, 17, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("unknown", 0), ("ram", 1), ("aqm", 2), ("pqc", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: shelfCardDcardType.setStatus('mandatory')
shelfCardDcardMemorySize = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 13, 2, 16, 17, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: shelfCardDcardMemorySize.setStatus('mandatory')
shelfCardDcardProductCode = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 13, 2, 16, 17, 1, 3), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(0, 12))).setMaxAccess("readonly")
if mibBuilder.loadTexts: shelfCardDcardProductCode.setStatus('mandatory')
shelfBus = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 13, 3))
shelfBusRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 13, 3, 1), )
if mibBuilder.loadTexts: shelfBusRowStatusTable.setStatus('mandatory')
shelfBusRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 13, 3, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-ShelfMIB", "shelfIndex"), (0, "Nortel-Magellan-Passport-ShelfMIB", "shelfBusIndex"))
if mibBuilder.loadTexts: shelfBusRowStatusEntry.setStatus('mandatory')
shelfBusRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 13, 3, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: shelfBusRowStatus.setStatus('mandatory')
shelfBusComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 13, 3, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: shelfBusComponentName.setStatus('mandatory')
shelfBusStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 13, 3, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: shelfBusStorageType.setStatus('mandatory')
shelfBusIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 13, 3, 1, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("x", 0), ("y", 1))))
if mibBuilder.loadTexts: shelfBusIndex.setStatus('mandatory')
shelfBusStateTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 13, 3, 10), )
if mibBuilder.loadTexts: shelfBusStateTable.setStatus('mandatory')
shelfBusStateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 13, 3, 10, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-ShelfMIB", "shelfIndex"), (0, "Nortel-Magellan-Passport-ShelfMIB", "shelfBusIndex"))
if mibBuilder.loadTexts: shelfBusStateEntry.setStatus('mandatory')
shelfBusAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 13, 3, 10, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("locked", 0), ("unlocked", 1), ("shuttingDown", 2))).clone('unlocked')).setMaxAccess("readonly")
if mibBuilder.loadTexts: shelfBusAdminState.setStatus('mandatory')
shelfBusOperationalState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 13, 3, 10, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1))).clone('disabled')).setMaxAccess("readonly")
if mibBuilder.loadTexts: shelfBusOperationalState.setStatus('mandatory')
shelfBusUsageState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 13, 3, 10, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("idle", 0), ("active", 1), ("busy", 2))).clone('idle')).setMaxAccess("readonly")
if mibBuilder.loadTexts: shelfBusUsageState.setStatus('mandatory')
shelfBusAvailabilityStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 13, 3, 10, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(2, 2)).setFixedLength(2)).setMaxAccess("readonly")
if mibBuilder.loadTexts: shelfBusAvailabilityStatus.setStatus('mandatory')
shelfBusProceduralStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 13, 3, 10, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 1)).setFixedLength(1)).setMaxAccess("readonly")
if mibBuilder.loadTexts: shelfBusProceduralStatus.setStatus('mandatory')
shelfBusControlStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 13, 3, 10, 1, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 1)).setFixedLength(1)).setMaxAccess("readonly")
if mibBuilder.loadTexts: shelfBusControlStatus.setStatus('mandatory')
shelfBusAlarmStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 13, 3, 10, 1, 7), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 1)).setFixedLength(1)).setMaxAccess("readonly")
if mibBuilder.loadTexts: shelfBusAlarmStatus.setStatus('mandatory')
shelfBusStandbyStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 13, 3, 10, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 15))).clone(namedValues=NamedValues(("hotStandby", 0), ("coldStandby", 1), ("providingService", 2), ("notSet", 15))).clone('notSet')).setMaxAccess("readonly")
if mibBuilder.loadTexts: shelfBusStandbyStatus.setStatus('mandatory')
shelfBusUnknownStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 13, 3, 10, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("false", 0), ("true", 1))).clone('false')).setMaxAccess("readonly")
if mibBuilder.loadTexts: shelfBusUnknownStatus.setStatus('mandatory')
shelfBusOperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 13, 3, 11), )
if mibBuilder.loadTexts: shelfBusOperTable.setStatus('mandatory')
shelfBusOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 13, 3, 11, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-ShelfMIB", "shelfIndex"), (0, "Nortel-Magellan-Passport-ShelfMIB", "shelfBusIndex"))
if mibBuilder.loadTexts: shelfBusOperEntry.setStatus('mandatory')
shelfBusClockSource = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 13, 3, 11, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("activeCP", 0), ("alternate", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: shelfBusClockSource.setStatus('mandatory')
shelfBusUtilization = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 13, 3, 11, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: shelfBusUtilization.setStatus('mandatory')
shelfBusBusTapStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 13, 3, 246), )
if mibBuilder.loadTexts: shelfBusBusTapStatusTable.setStatus('mandatory')
shelfBusBusTapStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 13, 3, 246, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-ShelfMIB", "shelfIndex"), (0, "Nortel-Magellan-Passport-ShelfMIB", "shelfBusIndex"), (0, "Nortel-Magellan-Passport-ShelfMIB", "shelfBusBusTapStatusIndex"))
if mibBuilder.loadTexts: shelfBusBusTapStatusEntry.setStatus('mandatory')
shelfBusBusTapStatusIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 13, 3, 246, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 15)))
if mibBuilder.loadTexts: shelfBusBusTapStatusIndex.setStatus('mandatory')
shelfBusBusTapStatusValue = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 13, 3, 246, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("ok", 0), ("failed", 1), ("none", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: shelfBusBusTapStatusValue.setStatus('mandatory')
shelfBusClockSourceStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 13, 3, 247), )
if mibBuilder.loadTexts: shelfBusClockSourceStatusTable.setStatus('mandatory')
shelfBusClockSourceStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 13, 3, 247, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-ShelfMIB", "shelfIndex"), (0, "Nortel-Magellan-Passport-ShelfMIB", "shelfBusIndex"), (0, "Nortel-Magellan-Passport-ShelfMIB", "shelfBusClockSourceStatusIndex"))
if mibBuilder.loadTexts: shelfBusClockSourceStatusEntry.setStatus('mandatory')
shelfBusClockSourceStatusIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 13, 3, 247, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("activeCP", 0), ("alternate", 1))))
if mibBuilder.loadTexts: shelfBusClockSourceStatusIndex.setStatus('mandatory')
shelfBusClockSourceStatusValue = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 13, 3, 247, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("ok", 0), ("failed", 1), ("unknown", 2), ("testInProgress", 3), ("notApplicable", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: shelfBusClockSourceStatusValue.setStatus('mandatory')
shelfBusTest = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 13, 3, 2))
shelfBusTestRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 13, 3, 2, 1), )
if mibBuilder.loadTexts: shelfBusTestRowStatusTable.setStatus('mandatory')
shelfBusTestRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 13, 3, 2, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-ShelfMIB", "shelfIndex"), (0, "Nortel-Magellan-Passport-ShelfMIB", "shelfBusIndex"), (0, "Nortel-Magellan-Passport-ShelfMIB", "shelfBusTestIndex"))
if mibBuilder.loadTexts: shelfBusTestRowStatusEntry.setStatus('mandatory')
shelfBusTestRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 13, 3, 2, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: shelfBusTestRowStatus.setStatus('mandatory')
shelfBusTestComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 13, 3, 2, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: shelfBusTestComponentName.setStatus('mandatory')
shelfBusTestStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 13, 3, 2, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: shelfBusTestStorageType.setStatus('mandatory')
shelfBusTestIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 13, 3, 2, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: shelfBusTestIndex.setStatus('mandatory')
shelfBusTestStateTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 13, 3, 2, 10), )
if mibBuilder.loadTexts: shelfBusTestStateTable.setStatus('mandatory')
shelfBusTestStateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 13, 3, 2, 10, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-ShelfMIB", "shelfIndex"), (0, "Nortel-Magellan-Passport-ShelfMIB", "shelfBusIndex"), (0, "Nortel-Magellan-Passport-ShelfMIB", "shelfBusTestIndex"))
if mibBuilder.loadTexts: shelfBusTestStateEntry.setStatus('mandatory')
shelfBusTestAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 13, 3, 2, 10, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("locked", 0), ("unlocked", 1), ("shuttingDown", 2))).clone('unlocked')).setMaxAccess("readonly")
if mibBuilder.loadTexts: shelfBusTestAdminState.setStatus('mandatory')
shelfBusTestOperationalState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 13, 3, 2, 10, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1))).clone('disabled')).setMaxAccess("readonly")
if mibBuilder.loadTexts: shelfBusTestOperationalState.setStatus('mandatory')
shelfBusTestUsageState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 13, 3, 2, 10, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("idle", 0), ("active", 1), ("busy", 2))).clone('idle')).setMaxAccess("readonly")
if mibBuilder.loadTexts: shelfBusTestUsageState.setStatus('mandatory')
shelfBusTestSetupTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 13, 3, 2, 11), )
if mibBuilder.loadTexts: shelfBusTestSetupTable.setStatus('mandatory')
shelfBusTestSetupEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 13, 3, 2, 11, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-ShelfMIB", "shelfIndex"), (0, "Nortel-Magellan-Passport-ShelfMIB", "shelfBusIndex"), (0, "Nortel-Magellan-Passport-ShelfMIB", "shelfBusTestIndex"))
if mibBuilder.loadTexts: shelfBusTestSetupEntry.setStatus('mandatory')
shelfBusTestDuration = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 13, 3, 2, 11, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 43200)).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: shelfBusTestDuration.setStatus('mandatory')
shelfBusTestResultsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 13, 3, 2, 12), )
if mibBuilder.loadTexts: shelfBusTestResultsTable.setStatus('mandatory')
shelfBusTestResultsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 13, 3, 2, 12, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-ShelfMIB", "shelfIndex"), (0, "Nortel-Magellan-Passport-ShelfMIB", "shelfBusIndex"), (0, "Nortel-Magellan-Passport-ShelfMIB", "shelfBusTestIndex"))
if mibBuilder.loadTexts: shelfBusTestResultsEntry.setStatus('mandatory')
shelfBusTestElapsedTime = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 13, 3, 2, 12, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 43200))).setMaxAccess("readonly")
if mibBuilder.loadTexts: shelfBusTestElapsedTime.setStatus('mandatory')
shelfBusTestTimeRemaining = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 13, 3, 2, 12, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 43200))).setMaxAccess("readonly")
if mibBuilder.loadTexts: shelfBusTestTimeRemaining.setStatus('mandatory')
shelfBusTestCauseOfTermination = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 13, 3, 2, 12, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("neverStarted", 0), ("testRunning", 1), ("testTimeExpired", 2), ("stoppedByOperator", 3), ("selfTestFailure", 4), ("clockSourceFailure", 5), ("broadcastFailure", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: shelfBusTestCauseOfTermination.setStatus('mandatory')
shelfBusTestTestsDone = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 13, 3, 2, 12, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 1)).setFixedLength(1)).setMaxAccess("readonly")
if mibBuilder.loadTexts: shelfBusTestTestsDone.setStatus('mandatory')
shelfBusTestSelfTestResultsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 13, 3, 2, 248), )
if mibBuilder.loadTexts: shelfBusTestSelfTestResultsTable.setStatus('mandatory')
shelfBusTestSelfTestResultsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 13, 3, 2, 248, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-ShelfMIB", "shelfIndex"), (0, "Nortel-Magellan-Passport-ShelfMIB", "shelfBusIndex"), (0, "Nortel-Magellan-Passport-ShelfMIB", "shelfBusTestIndex"), (0, "Nortel-Magellan-Passport-ShelfMIB", "shelfBusTestSelfTestResultsIndex"))
if mibBuilder.loadTexts: shelfBusTestSelfTestResultsEntry.setStatus('mandatory')
shelfBusTestSelfTestResultsIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 13, 3, 2, 248, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 15)))
if mibBuilder.loadTexts: shelfBusTestSelfTestResultsIndex.setStatus('mandatory')
shelfBusTestSelfTestResultsValue = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 13, 3, 2, 248, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("x", 0), ("n1", 1), ("n2", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: shelfBusTestSelfTestResultsValue.setStatus('mandatory')
shelfBusTestClockSourceTestResultsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 13, 3, 2, 249), )
if mibBuilder.loadTexts: shelfBusTestClockSourceTestResultsTable.setStatus('mandatory')
shelfBusTestClockSourceTestResultsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 13, 3, 2, 249, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-ShelfMIB", "shelfIndex"), (0, "Nortel-Magellan-Passport-ShelfMIB", "shelfBusIndex"), (0, "Nortel-Magellan-Passport-ShelfMIB", "shelfBusTestIndex"), (0, "Nortel-Magellan-Passport-ShelfMIB", "shelfBusTestClockSourceTestResultsSourceIndex"), (0, "Nortel-Magellan-Passport-ShelfMIB", "shelfBusTestClockSourceTestResultsCardIndex"))
if mibBuilder.loadTexts: shelfBusTestClockSourceTestResultsEntry.setStatus('mandatory')
shelfBusTestClockSourceTestResultsSourceIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 13, 3, 2, 249, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("activeCP", 0), ("alternate", 1))))
if mibBuilder.loadTexts: shelfBusTestClockSourceTestResultsSourceIndex.setStatus('mandatory')
shelfBusTestClockSourceTestResultsCardIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 13, 3, 2, 249, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 15)))
if mibBuilder.loadTexts: shelfBusTestClockSourceTestResultsCardIndex.setStatus('mandatory')
shelfBusTestClockSourceTestResultsValue = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 13, 3, 2, 249, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("x", 0), ("n1", 1), ("n2", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: shelfBusTestClockSourceTestResultsValue.setStatus('mandatory')
shelfBusTestBroadcastTestResultsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 13, 3, 2, 250), )
if mibBuilder.loadTexts: shelfBusTestBroadcastTestResultsTable.setStatus('mandatory')
shelfBusTestBroadcastTestResultsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 13, 3, 2, 250, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-ShelfMIB", "shelfIndex"), (0, "Nortel-Magellan-Passport-ShelfMIB", "shelfBusIndex"), (0, "Nortel-Magellan-Passport-ShelfMIB", "shelfBusTestIndex"), (0, "Nortel-Magellan-Passport-ShelfMIB", "shelfBusTestBroadcastTestResultsTxCardIndex"), (0, "Nortel-Magellan-Passport-ShelfMIB", "shelfBusTestBroadcastTestResultsRxCardIndex"))
if mibBuilder.loadTexts: shelfBusTestBroadcastTestResultsEntry.setStatus('mandatory')
shelfBusTestBroadcastTestResultsTxCardIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 13, 3, 2, 250, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 15)))
if mibBuilder.loadTexts: shelfBusTestBroadcastTestResultsTxCardIndex.setStatus('mandatory')
shelfBusTestBroadcastTestResultsRxCardIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 13, 3, 2, 250, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 15)))
if mibBuilder.loadTexts: shelfBusTestBroadcastTestResultsRxCardIndex.setStatus('mandatory')
shelfBusTestBroadcastTestResultsValue = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 13, 3, 2, 250, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("x", 0), ("n1", 1), ("n2", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: shelfBusTestBroadcastTestResultsValue.setStatus('mandatory')
shelfBusTestPingTestsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 13, 3, 2, 251), )
if mibBuilder.loadTexts: shelfBusTestPingTestsTable.setStatus('mandatory')
shelfBusTestPingTestsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 13, 3, 2, 251, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-ShelfMIB", "shelfIndex"), (0, "Nortel-Magellan-Passport-ShelfMIB", "shelfBusIndex"), (0, "Nortel-Magellan-Passport-ShelfMIB", "shelfBusTestIndex"), (0, "Nortel-Magellan-Passport-ShelfMIB", "shelfBusTestPingTestsTxCardIndex"), (0, "Nortel-Magellan-Passport-ShelfMIB", "shelfBusTestPingTestsRxCardIndex"))
if mibBuilder.loadTexts: shelfBusTestPingTestsEntry.setStatus('mandatory')
shelfBusTestPingTestsTxCardIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 13, 3, 2, 251, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 15)))
if mibBuilder.loadTexts: shelfBusTestPingTestsTxCardIndex.setStatus('mandatory')
shelfBusTestPingTestsRxCardIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 13, 3, 2, 251, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 15)))
if mibBuilder.loadTexts: shelfBusTestPingTestsRxCardIndex.setStatus('mandatory')
shelfBusTestPingTestsValue = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 13, 3, 2, 251, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: shelfBusTestPingTestsValue.setStatus('mandatory')
shelfBusTestPingFailuresTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 13, 3, 2, 252), )
if mibBuilder.loadTexts: shelfBusTestPingFailuresTable.setStatus('mandatory')
shelfBusTestPingFailuresEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 13, 3, 2, 252, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-ShelfMIB", "shelfIndex"), (0, "Nortel-Magellan-Passport-ShelfMIB", "shelfBusIndex"), (0, "Nortel-Magellan-Passport-ShelfMIB", "shelfBusTestIndex"), (0, "Nortel-Magellan-Passport-ShelfMIB", "shelfBusTestPingFailuresTxCardIndex"), (0, "Nortel-Magellan-Passport-ShelfMIB", "shelfBusTestPingFailuresRxCardIndex"))
if mibBuilder.loadTexts: shelfBusTestPingFailuresEntry.setStatus('mandatory')
shelfBusTestPingFailuresTxCardIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 13, 3, 2, 252, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 15)))
if mibBuilder.loadTexts: shelfBusTestPingFailuresTxCardIndex.setStatus('mandatory')
shelfBusTestPingFailuresRxCardIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 13, 3, 2, 252, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 15)))
if mibBuilder.loadTexts: shelfBusTestPingFailuresRxCardIndex.setStatus('mandatory')
shelfBusTestPingFailuresValue = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 13, 3, 2, 252, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: shelfBusTestPingFailuresValue.setStatus('mandatory')
shelfTest = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 13, 4))
shelfTestRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 13, 4, 1), )
if mibBuilder.loadTexts: shelfTestRowStatusTable.setStatus('mandatory')
shelfTestRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 13, 4, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-ShelfMIB", "shelfIndex"), (0, "Nortel-Magellan-Passport-ShelfMIB", "shelfTestIndex"))
if mibBuilder.loadTexts: shelfTestRowStatusEntry.setStatus('mandatory')
shelfTestRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 13, 4, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: shelfTestRowStatus.setStatus('mandatory')
shelfTestComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 13, 4, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: shelfTestComponentName.setStatus('mandatory')
shelfTestStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 13, 4, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: shelfTestStorageType.setStatus('mandatory')
shelfTestIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 13, 4, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: shelfTestIndex.setStatus('mandatory')
shelfTestProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 13, 4, 10), )
if mibBuilder.loadTexts: shelfTestProvTable.setStatus('mandatory')
shelfTestProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 13, 4, 10, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-ShelfMIB", "shelfIndex"), (0, "Nortel-Magellan-Passport-ShelfMIB", "shelfTestIndex"))
if mibBuilder.loadTexts: shelfTestProvEntry.setStatus('mandatory')
shelfTestAutomaticBusClockTest = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 13, 4, 10, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("enabled", 0), ("disabled", 1))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: shelfTestAutomaticBusClockTest.setStatus('mandatory')
shelfTestSetupTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 13, 4, 11), )
if mibBuilder.loadTexts: shelfTestSetupTable.setStatus('mandatory')
shelfTestSetupEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 13, 4, 11, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-ShelfMIB", "shelfIndex"), (0, "Nortel-Magellan-Passport-ShelfMIB", "shelfTestIndex"))
if mibBuilder.loadTexts: shelfTestSetupEntry.setStatus('mandatory')
shelfTestType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 13, 4, 11, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0))).clone(namedValues=NamedValues(("busClock", 0))).clone('busClock')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: shelfTestType.setStatus('mandatory')
shelfTestResultsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 13, 4, 12), )
if mibBuilder.loadTexts: shelfTestResultsTable.setStatus('mandatory')
shelfTestResultsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 13, 4, 12, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-ShelfMIB", "shelfIndex"), (0, "Nortel-Magellan-Passport-ShelfMIB", "shelfTestIndex"))
if mibBuilder.loadTexts: shelfTestResultsEntry.setStatus('mandatory')
shelfTestBusClockTestResult = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 13, 4, 12, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("noTest", 0), ("fail", 1), ("pass", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: shelfTestBusClockTestResult.setStatus('mandatory')
mod = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 16))
modRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 16, 1), )
if mibBuilder.loadTexts: modRowStatusTable.setStatus('mandatory')
modRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 16, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-ShelfMIB", "modIndex"))
if mibBuilder.loadTexts: modRowStatusEntry.setStatus('mandatory')
modRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 16, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: modRowStatus.setStatus('mandatory')
modComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 16, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: modComponentName.setStatus('mandatory')
modStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 16, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: modStorageType.setStatus('mandatory')
modIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 16, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: modIndex.setStatus('mandatory')
modProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 16, 10), )
if mibBuilder.loadTexts: modProvTable.setStatus('mandatory')
modProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 16, 10, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-ShelfMIB", "modIndex"))
if mibBuilder.loadTexts: modProvEntry.setStatus('mandatory')
modNodeId = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 16, 10, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4095))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: modNodeId.setStatus('mandatory')
modNodeName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 16, 10, 1, 2), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(1, 12)).clone(hexValue="4e4f4e414d45")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: modNodeName.setStatus('mandatory')
modNamsId = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 16, 10, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(256, 49151)).clone(49151)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: modNamsId.setStatus('mandatory')
modRegionId = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 16, 10, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 126))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: modRegionId.setStatus('mandatory')
modNodePrefix = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 16, 10, 1, 5), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(0, 26)).clone(hexValue="")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: modNodePrefix.setStatus('mandatory')
modNodePrefixesTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 16, 338), )
if mibBuilder.loadTexts: modNodePrefixesTable.setStatus('obsolete')
modNodePrefixesEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 16, 338, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-ShelfMIB", "modIndex"), (0, "Nortel-Magellan-Passport-ShelfMIB", "modNodePrefixesIndex"))
if mibBuilder.loadTexts: modNodePrefixesEntry.setStatus('obsolete')
modNodePrefixesIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 16, 338, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4)))
if mibBuilder.loadTexts: modNodePrefixesIndex.setStatus('obsolete')
modNodePrefixesValue = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 16, 338, 1, 2), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(0, 40))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: modNodePrefixesValue.setStatus('obsolete')
modAlternatePorsPrefixesTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 16, 405), )
if mibBuilder.loadTexts: modAlternatePorsPrefixesTable.setStatus('mandatory')
modAlternatePorsPrefixesEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 16, 405, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-ShelfMIB", "modIndex"), (0, "Nortel-Magellan-Passport-ShelfMIB", "modAlternatePorsPrefixesIndex"))
if mibBuilder.loadTexts: modAlternatePorsPrefixesEntry.setStatus('mandatory')
modAlternatePorsPrefixesIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 16, 405, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 3)))
if mibBuilder.loadTexts: modAlternatePorsPrefixesIndex.setStatus('mandatory')
modAlternatePorsPrefixesValue = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 16, 405, 1, 2), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(0, 40))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: modAlternatePorsPrefixesValue.setStatus('mandatory')
shelfGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 12, 1))
shelfGroupBE = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 12, 1, 5))
shelfGroupBE01 = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 12, 1, 5, 2))
shelfGroupBE01A = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 12, 1, 5, 2, 2))
shelfCapabilities = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 12, 3))
shelfCapabilitiesBE = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 12, 3, 5))
shelfCapabilitiesBE01 = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 12, 3, 5, 2))
shelfCapabilitiesBE01A = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 12, 3, 5, 2, 2))
mibBuilder.exportSymbols("Nortel-Magellan-Passport-ShelfMIB", shelfCardDiagTrapDataRowStatus=shelfCardDiagTrapDataRowStatus, shelfCardTestStateEntry=shelfCardTestStateEntry, shelfBusStorageType=shelfBusStorageType, shelfCardTestSizeIndex=shelfCardTestSizeIndex, shelfCardMemoryUsageAvgMinTable=shelfCardMemoryUsageAvgMinTable, modNodePrefixesValue=modNodePrefixesValue, shelfCardDiagTrapDataIndex=shelfCardDiagTrapDataIndex, shelfCardProductCode=shelfCardProductCode, shelfRowStatusTable=shelfRowStatusTable, shelfCardTestElapsedTime=shelfCardTestElapsedTime, shelfCardBusTapStateTable=shelfCardBusTapStateTable, shelfCardProvTable=shelfCardProvTable, shelfBusTestResultsEntry=shelfBusTestResultsEntry, shelfCardInactiveFirmwareVersion=shelfCardInactiveFirmwareVersion, modNamsId=modNamsId, shelfCardFailureCause=shelfCardFailureCause, shelfCardDiagRecErrLineRowStatus=shelfCardDiagRecErrLineRowStatus, shelfCardTestOperationalState=shelfCardTestOperationalState, shelfCardDcardMemorySize=shelfCardDcardMemorySize, shelfCardTestFrmPatternType=shelfCardTestFrmPatternType, shelfTestResultsTable=shelfTestResultsTable, shelfCardDiagIndex=shelfCardDiagIndex, shelfTestProvTable=shelfTestProvTable, shelfCardStandbyStatus=shelfCardStandbyStatus, shelfCard=shelfCard, shelfCardDiagRecErrLineOperEntry=shelfCardDiagRecErrLineOperEntry, shelfCardBusTapRowStatus=shelfCardBusTapRowStatus, shelfCardConfiguredLPsValue=shelfCardConfiguredLPsValue, modNodePrefix=modNodePrefix, shelfCardDiagTrapDataComponentName=shelfCardDiagTrapDataComponentName, shelfCardBusTapParityErrors=shelfCardBusTapParityErrors, shelfCardTestResultsTable=shelfCardTestResultsTable, shelfBusOperEntry=shelfBusOperEntry, modNodePrefixesTable=modNodePrefixesTable, shelfCardBusTapDependenciesInEffect=shelfCardBusTapDependenciesInEffect, shelfBusTestClockSourceTestResultsTable=shelfBusTestClockSourceTestResultsTable, shelfBusTestPingTestsEntry=shelfBusTestPingTestsEntry, shelfCardDiagRecErrLine=shelfCardDiagRecErrLine, shelfCardBusTapControlStatus=shelfCardBusTapControlStatus, shelfBusTestClockSourceTestResultsValue=shelfBusTestClockSourceTestResultsValue, shelfCardDiagTrapDataLine=shelfCardDiagTrapDataLine, shelfBusTestSelfTestResultsIndex=shelfBusTestSelfTestResultsIndex, shelfBusTestPingFailuresTxCardIndex=shelfBusTestPingFailuresTxCardIndex, shelfTestSetupEntry=shelfTestSetupEntry, shelfCardMsgBlockUsage=shelfCardMsgBlockUsage, shelfBusTestResultsTable=shelfBusTestResultsTable, shelfCardMemoryUsageAvgIndex=shelfCardMemoryUsageAvgIndex, shelfCardTestRowStatus=shelfCardTestRowStatus, shelfCardCurrentLpTable=shelfCardCurrentLpTable, shelfCardDcardComponentName=shelfCardDcardComponentName, shelfBusComponentName=shelfBusComponentName, shelfCapabilitiesBE=shelfCapabilitiesBE, shelfCardDiag=shelfCardDiag, shelfCardBusTapAvailabilityStatus=shelfCardBusTapAvailabilityStatus, shelfCardLocalMsgBlockUsage=shelfCardLocalMsgBlockUsage, shelfCardBusTapCardsAvailable=shelfCardBusTapCardsAvailable, shelfTestRowStatusTable=shelfTestRowStatusTable, shelfCardProceduralStatus=shelfCardProceduralStatus, shelfCardCpuUtilAvgMax=shelfCardCpuUtilAvgMax, shelfBusTestAdminState=shelfBusTestAdminState, shelfCardTestVerificationFrmDataResultsIndex=shelfCardTestVerificationFrmDataResultsIndex, shelfCardMemoryCapacityTable=shelfCardMemoryCapacityTable, shelfCardStateEntry=shelfCardStateEntry, shelfCardMemoryUsageAvgMinValue=shelfCardMemoryUsageAvgMinValue, shelfCardConfiguredLPsEntry=shelfCardConfiguredLPsEntry, shelfCardDiagRecErrStorageType=shelfCardDiagRecErrStorageType, shelfComponentName=shelfComponentName, shelfGroup=shelfGroup, shelfCardBusTapRowStatusTable=shelfCardBusTapRowStatusTable, shelfCardMemoryUsageAvgMinEntry=shelfCardMemoryUsageAvgMinEntry, shelfBusTestSelfTestResultsEntry=shelfBusTestSelfTestResultsEntry, modProvTable=modProvTable, shelfCardBusTapOperTable=shelfCardBusTapOperTable, shelfCardTestLoadingFrmDataTable=shelfCardTestLoadingFrmDataTable, shelfCardDiagTrapDataLineData=shelfCardDiagTrapDataLineData, shelfCardTestFrmPriorities=shelfCardTestFrmPriorities, shelfCardDcard=shelfCardDcard, shelfCardDiagRowStatusTable=shelfCardDiagRowStatusTable, modNodePrefixesEntry=modNodePrefixesEntry, shelf=shelf, shelfCardDiagStorageType=shelfCardDiagStorageType, shelfCardTestVerificationFrmDataPriorityIndex=shelfCardTestVerificationFrmDataPriorityIndex, shelfCardStateTable=shelfCardStateTable, shelfTestAutomaticBusClockTest=shelfTestAutomaticBusClockTest, shelfCardLocalMsgBlockUsageMin=shelfCardLocalMsgBlockUsageMin, shelfBusTestBroadcastTestResultsValue=shelfBusTestBroadcastTestResultsValue, shelfCardDcardProductCode=shelfCardDcardProductCode, shelfCardSelfTestFault=shelfCardSelfTestFault, shelfOperEntry=shelfOperEntry, shelfMIB=shelfMIB, shelfBusTestBroadcastTestResultsRxCardIndex=shelfBusTestBroadcastTestResultsRxCardIndex, shelfCardBusTapComponentName=shelfCardBusTapComponentName, shelfBusOperationalState=shelfBusOperationalState, shelfHardwareFailures=shelfHardwareFailures, shelfBusProceduralStatus=shelfBusProceduralStatus, shelfTestIndex=shelfTestIndex, shelfCardBusTapFrmTimeoutErrors=shelfCardBusTapFrmTimeoutErrors, shelfBusClockSourceStatusTable=shelfBusClockSourceStatusTable, shelfCardTestLoadingFrmDataValue=shelfCardTestLoadingFrmDataValue, shelfBusTestIndex=shelfBusTestIndex, shelfBusTestRowStatusTable=shelfBusTestRowStatusTable, shelfCardMsgBlockCapacity=shelfCardMsgBlockCapacity, shelfCardTestStorageType=shelfCardTestStorageType, shelfCardDiagTrapDataLineOperEntry=shelfCardDiagTrapDataLineOperEntry, shelfCardDiagRecErrLineData=shelfCardDiagRecErrLineData, shelfBusTestPingTestsTable=shelfBusTestPingTestsTable, shelfTestResultsEntry=shelfTestResultsEntry, shelfBusBusTapStatusValue=shelfBusBusTapStatusValue, shelfCardBusTapStateEntry=shelfCardBusTapStateEntry, shelfCardOperEntry=shelfCardOperEntry, shelfCardDiagComponentName=shelfCardDiagComponentName, shelfCardCapEntry=shelfCardCapEntry, shelfCardDiagTrapDataLineStorageType=shelfCardDiagTrapDataLineStorageType, shelfCardBusTapUnknownStatus=shelfCardBusTapUnknownStatus, modIndex=modIndex, shelfBusClockSource=shelfBusClockSource, shelfCardTestComponentName=shelfCardTestComponentName, shelfOperTable=shelfOperTable, shelfCardTestSetupTable=shelfCardTestSetupTable, shelfCardMemoryUsageAvgMaxTable=shelfCardMemoryUsageAvgMaxTable, shelfCardDiagTrapDataRowStatusEntry=shelfCardDiagTrapDataRowStatusEntry, shelfCardMsgBlockUsageAvg=shelfCardMsgBlockUsageAvg, shelfCardCpuUtilAvgMin=shelfCardCpuUtilAvgMin, shelfCardDiagTrapDataLineRowStatusEntry=shelfCardDiagTrapDataLineRowStatusEntry, shelfCardBusTapErrorsTable=shelfCardBusTapErrorsTable, shelfBusTest=shelfBusTest, shelfBusTestBroadcastTestResultsTxCardIndex=shelfBusTestBroadcastTestResultsTxCardIndex, shelfCardBusTapProceduralStatus=shelfCardBusTapProceduralStatus, shelfCardDiagRecErrRowStatus=shelfCardDiagRecErrRowStatus, shelfCardBusTapAdminState=shelfCardBusTapAdminState, shelfBusTestTestsDone=shelfBusTestTestsDone, shelfCardMsgBlockUsageAvgMax=shelfCardMsgBlockUsageAvgMax, shelfBusRowStatus=shelfBusRowStatus, shelfCardUsageState=shelfCardUsageState, shelfBusRowStatusEntry=shelfBusRowStatusEntry, shelfBusTestPingFailuresRxCardIndex=shelfBusTestPingFailuresRxCardIndex, shelfCardBusTapCardsTxTo=shelfCardBusTapCardsTxTo, shelfCardTestFrmTypes=shelfCardTestFrmTypes, shelfCardBusTapEndOfCellErrors=shelfCardBusTapEndOfCellErrors, shelfCardMsgBlockUsageAvgMin=shelfCardMsgBlockUsageAvgMin, shelfCardTestSetupEntry=shelfCardTestSetupEntry, shelfBusTestStateTable=shelfBusTestStateTable, shelfBusTestRowStatus=shelfBusTestRowStatus, shelfBusTestSelfTestResultsTable=shelfBusTestSelfTestResultsTable, shelfBusTestSetupEntry=shelfBusTestSetupEntry, shelfCardDiagTrapDataStorageType=shelfCardDiagTrapDataStorageType, shelfBusTestCauseOfTermination=shelfBusTestCauseOfTermination, modAlternatePorsPrefixesTable=modAlternatePorsPrefixesTable, shelfTestSetupTable=shelfTestSetupTable, shelfCardTestLoadingFrmDataResultsIndex=shelfCardTestLoadingFrmDataResultsIndex, shelfTest=shelfTest, shelfCardCpuUtilAvg=shelfCardCpuUtilAvg, shelfCardDiagTrapDataLineRowStatus=shelfCardDiagTrapDataLineRowStatus, shelfBusUsageState=shelfBusUsageState, shelfCardUtilTable=shelfCardUtilTable, shelfCardLocalMsgBlockUsageAvg=shelfCardLocalMsgBlockUsageAvg, shelfCardOperationalState=shelfCardOperationalState, shelfCardDiagRecErrIndex=shelfCardDiagRecErrIndex, modComponentName=modComponentName, shelfCardUnknownStatus=shelfCardUnknownStatus, shelfCardCommentText=shelfCardCommentText, shelfTestComponentName=shelfTestComponentName, shelfCardTestSizeEntry=shelfCardTestSizeEntry, shelfCardAdminState=shelfCardAdminState, shelfCardTestTimeRemaining=shelfCardTestTimeRemaining, shelfBusUnknownStatus=shelfBusUnknownStatus, shelfBusTestDuration=shelfBusTestDuration, shelfCardDiagRowStatus=shelfCardDiagRowStatus, shelfBusBusTapStatusIndex=shelfBusBusTapStatusIndex, shelfCardDiagRowStatusEntry=shelfCardDiagRowStatusEntry, shelfBusControlStatus=shelfBusControlStatus, shelfCardControlStatus=shelfCardControlStatus, shelfCapabilitiesBE01A=shelfCapabilitiesBE01A, modNodeName=modNodeName, shelfCardStorageType=shelfCardStorageType, shelfCardAvailabilityStatus=shelfCardAvailabilityStatus, shelfBusTestPingTestsValue=shelfBusTestPingTestsValue, shelfCardTestRowStatusTable=shelfCardTestRowStatusTable, shelfTestType=shelfTestType, shelfCardBusTapUsageState=shelfCardBusTapUsageState, shelfCardDiagRecErrLineIndex=shelfCardDiagRecErrLineIndex, shelfCardOperTable=shelfCardOperTable, shelfCardInsertedCardType=shelfCardInsertedCardType, shelfCardRowStatusEntry=shelfCardRowStatusEntry, shelfBusIndex=shelfBusIndex, shelfCardMemoryCapacityValue=shelfCardMemoryCapacityValue, shelfBusTestOperationalState=shelfBusTestOperationalState, shelfCardDiagRecErrLineOperTable=shelfCardDiagRecErrLineOperTable, modRowStatusEntry=modRowStatusEntry, shelfBusTestPingTestsRxCardIndex=shelfBusTestPingTestsRxCardIndex, shelfCardTestVerificationFrmDataEntry=shelfCardTestVerificationFrmDataEntry, shelfProvEntry=shelfProvEntry, shelfBusOperTable=shelfBusOperTable, modAlternatePorsPrefixesEntry=modAlternatePorsPrefixesEntry, shelfCardDiagTrapData=shelfCardDiagTrapData, shelfCommentText=shelfCommentText, modNodeId=modNodeId, shelfCardCurrentLpEntry=shelfCardCurrentLpEntry, shelfBusOperatingMode=shelfBusOperatingMode, shelfCardComponentName=shelfCardComponentName, shelfCardMemoryUsageAvgTable=shelfCardMemoryUsageAvgTable, shelfBusClockSourceStatusValue=shelfBusClockSourceStatusValue, shelfBusBusTapStatusEntry=shelfBusBusTapStatusEntry, shelfCardMemoryUsageValue=shelfCardMemoryUsageValue, shelfCardSerialNumber=shelfCardSerialNumber, shelfCardBusTapFrmSizeErrors=shelfCardBusTapFrmSizeErrors, shelfBus=shelfBus, shelfCapabilities=shelfCapabilities, shelfCardMemoryUsageEntry=shelfCardMemoryUsageEntry, shelfCardDiagRecErrRowStatusTable=shelfCardDiagRecErrRowStatusTable, shelfCardCurrentLP=shelfCardCurrentLP, shelfCardDcardStorageType=shelfCardDcardStorageType, shelfBusTestPingFailuresTable=shelfBusTestPingFailuresTable, shelfGroupBE=shelfGroupBE, shelfCardCpuUtil=shelfCardCpuUtil, shelfTestRowStatusEntry=shelfTestRowStatusEntry, shelfBusAvailabilityStatus=shelfBusAvailabilityStatus, shelfCardBusTapSelfTestErrorCode=shelfCardBusTapSelfTestErrorCode, shelfTestStorageType=shelfTestStorageType, shelfCardDiagTrapDataLineRowStatusTable=shelfCardDiagTrapDataLineRowStatusTable, modProvEntry=modProvEntry, shelfCardBusTapOperEntry=shelfCardBusTapOperEntry, shelfCardTestTargetCard=shelfCardTestTargetCard, shelfCardImRevisionCode=shelfCardImRevisionCode, shelfRowStatus=shelfRowStatus, shelfBusTestRowStatusEntry=shelfBusTestRowStatusEntry, shelfBusTestStateEntry=shelfBusTestStateEntry, shelfBusTestElapsedTime=shelfBusTestElapsedTime, shelfBusStandbyStatus=shelfBusStandbyStatus, shelfCardBusTapFrmCollisionErrors=shelfCardBusTapFrmCollisionErrors, shelfCardLocalMsgBlockCapacity=shelfCardLocalMsgBlockCapacity, shelfCardDiagRecErrLineRowStatusTable=shelfCardDiagRecErrLineRowStatusTable, shelfCardTestRowStatusEntry=shelfCardTestRowStatusEntry, shelfCardTestSizeValue=shelfCardTestSizeValue, shelfBusTestPingFailuresValue=shelfBusTestPingFailuresValue, shelfCardMemoryUsageAvgMaxIndex=shelfCardMemoryUsageAvgMaxIndex, shelfBusTestClockSourceTestResultsEntry=shelfBusTestClockSourceTestResultsEntry, shelfProvTable=shelfProvTable, modAlternatePorsPrefixesValue=modAlternatePorsPrefixesValue, shelfStorageType=shelfStorageType, modRowStatus=modRowStatus, shelfCardMemoryUsageTable=shelfCardMemoryUsageTable, shelfBusUtilization=shelfBusUtilization, shelfNumberOfSlots=shelfNumberOfSlots, shelfCardMemoryUsageAvgMinIndex=shelfCardMemoryUsageAvgMinIndex, shelfCapabilitiesBE01=shelfCapabilitiesBE01, shelfCardTestVerificationFrmDataValue=shelfCardTestVerificationFrmDataValue, shelfCardDiagRecErrLineComponentName=shelfCardDiagRecErrLineComponentName, shelfBusTestComponentName=shelfBusTestComponentName, shelfCardDcardRowStatusTable=shelfCardDcardRowStatusTable, shelfBusAlarmStatus=shelfBusAlarmStatus, shelfCardPmRevisionCode=shelfCardPmRevisionCode, shelfCardMemoryCapacityEntry=shelfCardMemoryCapacityEntry, modRowStatusTable=modRowStatusTable)
mibBuilder.exportSymbols("Nortel-Magellan-Passport-ShelfMIB", shelfCardProvEntry=shelfCardProvEntry, shelfCardAlarmStatus=shelfCardAlarmStatus, shelfIndex=shelfIndex, shelfCardCardType=shelfCardCardType, shelfBusTestBroadcastTestResultsTable=shelfBusTestBroadcastTestResultsTable, shelfTestRowStatus=shelfTestRowStatus, shelfCardActiveFirmwareVersion=shelfCardActiveFirmwareVersion, shelfBusClockSourceStatusEntry=shelfBusClockSourceStatusEntry, shelfCardTestCauseOfTermination=shelfCardTestCauseOfTermination, shelfBusAdminState=shelfBusAdminState, shelfCardPropTable=shelfCardPropTable, shelfCardDcardType=shelfCardDcardType, shelfCardDiagRecErr=shelfCardDiagRecErr, shelfTestProvEntry=shelfTestProvEntry, shelfCardMemoryUsageAvgMaxValue=shelfCardMemoryUsageAvgMaxValue, shelfCardDiagRecErrRowStatusEntry=shelfCardDiagRecErrRowStatusEntry, shelfGroupBE01=shelfGroupBE01, shelfBusTestBroadcastTestResultsEntry=shelfBusTestBroadcastTestResultsEntry, shelfCardBusTapStandbyStatus=shelfCardBusTapStandbyStatus, shelfCardDiagRecErrLineRowStatusEntry=shelfCardDiagRecErrLineRowStatusEntry, shelfCardBusTapFrmCongestionErrors=shelfCardBusTapFrmCongestionErrors, shelfBusStateEntry=shelfBusStateEntry, shelfCardDcardRowStatusEntry=shelfCardDcardRowStatusEntry, shelfTestBusClockTestResult=shelfTestBusClockTestResult, shelfBusBusTapStatusTable=shelfBusBusTapStatusTable, shelfCardBusTapErrorsEntry=shelfCardBusTapErrorsEntry, shelfCardMemoryUsageIndex=shelfCardMemoryUsageIndex, shelfBusTestStorageType=shelfBusTestStorageType, modStorageType=modStorageType, shelfCardSparingConnection=shelfCardSparingConnection, shelfCardIndex=shelfCardIndex, shelfCardTestIndex=shelfCardTestIndex, shelfCardTestLoadingFrmDataEntry=shelfCardTestLoadingFrmDataEntry, shelfCardBusTapOperationalState=shelfCardBusTapOperationalState, shelfCardRowStatusTable=shelfCardRowStatusTable, shelfCardRowStatus=shelfCardRowStatus, shelfCardConfiguredLPsTable=shelfCardConfiguredLPsTable, shelfCardDcardIndex=shelfCardDcardIndex, shelfCardDiagTrapDataLineIndex=shelfCardDiagTrapDataLineIndex, shelfCardBusTapRowStatusEntry=shelfCardBusTapRowStatusEntry, shelfCardCapTable=shelfCardCapTable, shelfCardTestDuration=shelfCardTestDuration, shelfRowStatusEntry=shelfRowStatusEntry, shelfCardDiagRecErrComponentName=shelfCardDiagRecErrComponentName, shelfBusClockSourceStatusIndex=shelfBusClockSourceStatusIndex, shelfCardBusTapFrmDeliveryErrors=shelfCardBusTapFrmDeliveryErrors, shelfBusTestClockSourceTestResultsCardIndex=shelfBusTestClockSourceTestResultsCardIndex, modRegionId=modRegionId, modNodePrefixesIndex=modNodePrefixesIndex, shelfCardDiagTrapDataLineOperTable=shelfCardDiagTrapDataLineOperTable, shelfBusTestUsageState=shelfBusTestUsageState, shelfCardPropEntry=shelfCardPropEntry, shelfBusTestSelfTestResultsValue=shelfBusTestSelfTestResultsValue, shelfCardTestUsageState=shelfCardTestUsageState, shelfCardTestAdminState=shelfCardTestAdminState, shelfCardBusTap=shelfCardBusTap, shelfBusTestPingTestsTxCardIndex=shelfBusTestPingTestsTxCardIndex, shelfCardSparingConnectionStatus=shelfCardSparingConnectionStatus, shelfBusTestPingFailuresEntry=shelfBusTestPingFailuresEntry, shelfGroupBE01A=shelfGroupBE01A, shelfCardMemoryUsageAvgEntry=shelfCardMemoryUsageAvgEntry, shelfCardBusTapClockErrors=shelfCardBusTapClockErrors, shelfBusStateTable=shelfBusStateTable, shelfCardMemoryUsageAvgValue=shelfCardMemoryUsageAvgValue, shelfCardDcardRowStatus=shelfCardDcardRowStatus, shelfCardTestVerificationFrmDataTable=shelfCardTestVerificationFrmDataTable, shelfCardDiagTrapDataRowStatusTable=shelfCardDiagTrapDataRowStatusTable, shelfBusTestSetupTable=shelfBusTestSetupTable, shelfCardTestSizeTable=shelfCardTestSizeTable, shelfCardTestStateTable=shelfCardTestStateTable, modAlternatePorsPrefixesIndex=modAlternatePorsPrefixesIndex, shelfCardTestLoadingFrmDataPriorityIndex=shelfCardTestLoadingFrmDataPriorityIndex, shelfBusTestClockSourceTestResultsSourceIndex=shelfBusTestClockSourceTestResultsSourceIndex, shelfCardTest=shelfCardTest, shelfCardDcardDcardOperEntry=shelfCardDcardDcardOperEntry, shelfCardBusTapAlarmStatus=shelfCardBusTapAlarmStatus, shelfCardTestResultsEntry=shelfCardTestResultsEntry, shelfCardLocalMsgBlockUsageMax=shelfCardLocalMsgBlockUsageMax, shelfCardMemoryUsageAvgMaxEntry=shelfCardMemoryUsageAvgMaxEntry, shelfCardTestCustomizedPattern=shelfCardTestCustomizedPattern, shelfCardBusTapIndex=shelfCardBusTapIndex, shelfBusRowStatusTable=shelfBusRowStatusTable, shelfCardCurrentLpValue=shelfCardCurrentLpValue, mod=mod, shelfCardDcardDcardOperTable=shelfCardDcardDcardOperTable, shelfCardDiagRecErrLineStorageType=shelfCardDiagRecErrLineStorageType, shelfCardTimeInterval=shelfCardTimeInterval, shelfCardDiagTrapDataLineComponentName=shelfCardDiagTrapDataLineComponentName, shelfBusTestTimeRemaining=shelfBusTestTimeRemaining, shelfCardBusTapFailuresInEffect=shelfCardBusTapFailuresInEffect, shelfCardUtilEntry=shelfCardUtilEntry, shelfCardMemoryCapacityIndex=shelfCardMemoryCapacityIndex, shelfCardBusTapStorageType=shelfCardBusTapStorageType)
