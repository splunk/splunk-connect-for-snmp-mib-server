#
# PySNMP MIB module JUNIPER-COS-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/JUNIPER-COS-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:47:51 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, SingleValueConstraint, ValueSizeConstraint, ConstraintsUnion, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "SingleValueConstraint", "ValueSizeConstraint", "ConstraintsUnion", "ConstraintsIntersection")
CounterBasedGauge64, = mibBuilder.importSymbols("HCNUM-TC", "CounterBasedGauge64")
InterfaceIndex, = mibBuilder.importSymbols("IF-MIB", "InterfaceIndex")
jnxCosNotifications, jnxMibs = mibBuilder.importSymbols("JUNIPER-SMI", "jnxCosNotifications", "jnxMibs")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Bits, MibScalar, MibTable, MibTableRow, MibTableColumn, NotificationType, iso, Integer32, IpAddress, TimeTicks, ModuleIdentity, Unsigned32, Counter64, Gauge32, ObjectIdentity, Counter32, MibIdentifier = mibBuilder.importSymbols("SNMPv2-SMI", "Bits", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "NotificationType", "iso", "Integer32", "IpAddress", "TimeTicks", "ModuleIdentity", "Unsigned32", "Counter64", "Gauge32", "ObjectIdentity", "Counter32", "MibIdentifier")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
jnxCos = ModuleIdentity((1, 3, 6, 1, 4, 1, 2636, 3, 15))
jnxCos.setRevisions(('2014-11-07 00:00', '2013-05-20 00:00', '1970-01-01 00:00', '2009-10-29 00:00', '2007-12-31 00:00', '2006-10-31 00:00', '2003-06-13 00:00', '2002-09-09 00:00', '2002-01-10 00:00',))
if mibBuilder.loadTexts: jnxCos.setLastUpdated('201305200000Z')
if mibBuilder.loadTexts: jnxCos.setOrganization('Juniper Networks, Inc.')
class JnxCosAdminString(TextualConvention, OctetString):
    status = 'current'
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(0, 127)

class JnxCosFcIdentifier(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ValueRangeConstraint(0, 15)

jnxCosIfqStatsTable = MibTable((1, 3, 6, 1, 4, 1, 2636, 3, 15, 1), )
if mibBuilder.loadTexts: jnxCosIfqStatsTable.setStatus('deprecated')
jnxCosIfqStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2636, 3, 15, 1, 1), ).setIndexNames((0, "JUNIPER-COS-MIB", "jnxCosIfqIfIndex"), (0, "JUNIPER-COS-MIB", "jnxCosIfqFc"))
if mibBuilder.loadTexts: jnxCosIfqStatsEntry.setStatus('deprecated')
jnxCosIfqIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 15, 1, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: jnxCosIfqIfIndex.setStatus('deprecated')
jnxCosIfqFc = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 15, 1, 1, 2), JnxCosAdminString())
if mibBuilder.loadTexts: jnxCosIfqFc.setStatus('deprecated')
jnxCosIfqQedPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 15, 1, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxCosIfqQedPkts.setStatus('deprecated')
jnxCosIfqQedPktRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 15, 1, 1, 4), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxCosIfqQedPktRate.setStatus('deprecated')
jnxCosIfqQedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 15, 1, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxCosIfqQedBytes.setStatus('deprecated')
jnxCosIfqQedByteRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 15, 1, 1, 6), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxCosIfqQedByteRate.setStatus('deprecated')
jnxCosIfqTxedPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 15, 1, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxCosIfqTxedPkts.setStatus('deprecated')
jnxCosIfqTxedPktRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 15, 1, 1, 8), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxCosIfqTxedPktRate.setStatus('deprecated')
jnxCosIfqTxedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 15, 1, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxCosIfqTxedBytes.setStatus('deprecated')
jnxCosIfqTxedByteRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 15, 1, 1, 10), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxCosIfqTxedByteRate.setStatus('deprecated')
jnxCosIfqTailDropPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 15, 1, 1, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxCosIfqTailDropPkts.setStatus('deprecated')
jnxCosIfqTailDropPktRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 15, 1, 1, 12), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxCosIfqTailDropPktRate.setStatus('deprecated')
jnxCosIfqTotalRedDropPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 15, 1, 1, 13), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxCosIfqTotalRedDropPkts.setStatus('deprecated')
jnxCosIfqTotalRedDropPktRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 15, 1, 1, 14), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxCosIfqTotalRedDropPktRate.setStatus('deprecated')
jnxCosIfqLpNonTcpRedDropPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 15, 1, 1, 15), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxCosIfqLpNonTcpRedDropPkts.setStatus('deprecated')
jnxCosIfqLpNonTcpRedDropPktRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 15, 1, 1, 16), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxCosIfqLpNonTcpRedDropPktRate.setStatus('deprecated')
jnxCosIfqLpTcpRedDropPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 15, 1, 1, 17), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxCosIfqLpTcpRedDropPkts.setStatus('deprecated')
jnxCosIfqLpTcpRedDropPktRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 15, 1, 1, 18), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxCosIfqLpTcpRedDropPktRate.setStatus('deprecated')
jnxCosIfqHpNonTcpRedDropPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 15, 1, 1, 19), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxCosIfqHpNonTcpRedDropPkts.setStatus('deprecated')
jnxCosIfqHpNonTcpRedDropPktRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 15, 1, 1, 20), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxCosIfqHpNonTcpRedDropPktRate.setStatus('deprecated')
jnxCosIfqHpTcpRedDropPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 15, 1, 1, 21), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxCosIfqHpTcpRedDropPkts.setStatus('deprecated')
jnxCosIfqHpTcpRedDropPktRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 15, 1, 1, 22), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxCosIfqHpTcpRedDropPktRate.setStatus('deprecated')
jnxCosIfqTotalRedDropBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 15, 1, 1, 23), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxCosIfqTotalRedDropBytes.setStatus('deprecated')
jnxCosIfqTotalRedDropByteRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 15, 1, 1, 24), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxCosIfqTotalRedDropByteRate.setStatus('deprecated')
jnxCosIfqLpNonTcpRedDropBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 15, 1, 1, 25), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxCosIfqLpNonTcpRedDropBytes.setStatus('deprecated')
jnxCosIfqLpNonTcpRedDropByteRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 15, 1, 1, 26), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxCosIfqLpNonTcpRedDropByteRate.setStatus('deprecated')
jnxCosIfqLpTcpRedDropBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 15, 1, 1, 27), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxCosIfqLpTcpRedDropBytes.setStatus('deprecated')
jnxCosIfqLpTcpRedDropByteRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 15, 1, 1, 28), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxCosIfqLpTcpRedDropByteRate.setStatus('deprecated')
jnxCosIfqHpNonTcpRedDropBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 15, 1, 1, 29), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxCosIfqHpNonTcpRedDropBytes.setStatus('deprecated')
jnxCosIfqHpNonTcpRedDropByteRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 15, 1, 1, 30), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxCosIfqHpNonTcpRedDropByteRate.setStatus('deprecated')
jnxCosIfqHpTcpRedDropBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 15, 1, 1, 31), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxCosIfqHpTcpRedDropBytes.setStatus('deprecated')
jnxCosIfqHpTcpRedDropByteRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 15, 1, 1, 32), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxCosIfqHpTcpRedDropByteRate.setStatus('deprecated')
jnxCosFcTable = MibTable((1, 3, 6, 1, 4, 1, 2636, 3, 15, 2), )
if mibBuilder.loadTexts: jnxCosFcTable.setStatus('current')
jnxCosFcEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2636, 3, 15, 2, 1), ).setIndexNames((0, "JUNIPER-COS-MIB", "jnxCosFcName"))
if mibBuilder.loadTexts: jnxCosFcEntry.setStatus('current')
jnxCosFcName = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 15, 2, 1, 1), JnxCosAdminString())
if mibBuilder.loadTexts: jnxCosFcName.setStatus('current')
jnxCosFcQueueNr = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 15, 2, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 63))).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxCosFcQueueNr.setStatus('current')
jnxCosRestrictedQNr = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 15, 2, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 63))).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxCosRestrictedQNr.setStatus('current')
jnxCosFcIdTable = MibTable((1, 3, 6, 1, 4, 1, 2636, 3, 15, 3), )
if mibBuilder.loadTexts: jnxCosFcIdTable.setStatus('current')
jnxCosFcIdEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2636, 3, 15, 3, 1), ).setIndexNames((0, "JUNIPER-COS-MIB", "jnxCosFcId"))
if mibBuilder.loadTexts: jnxCosFcIdEntry.setStatus('current')
jnxCosFcId = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 15, 3, 1, 1), JnxCosFcIdentifier())
if mibBuilder.loadTexts: jnxCosFcId.setStatus('current')
jnxCosFcIdToFcName = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 15, 3, 1, 2), JnxCosAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxCosFcIdToFcName.setStatus('current')
jnxCosFcFabricPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 15, 3, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("low", 0), ("high", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxCosFcFabricPriority.setStatus('current')
jnxCosQstatTable = MibTable((1, 3, 6, 1, 4, 1, 2636, 3, 15, 4), )
if mibBuilder.loadTexts: jnxCosQstatTable.setStatus('current')
jnxCosQstatEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2636, 3, 15, 4, 1), ).setIndexNames((0, "JUNIPER-COS-MIB", "jnxCosQstatIfIndex"), (0, "JUNIPER-COS-MIB", "jnxCosQstatQueueNr"))
if mibBuilder.loadTexts: jnxCosQstatEntry.setStatus('current')
jnxCosQstatIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 15, 4, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: jnxCosQstatIfIndex.setStatus('current')
jnxCosQstatQueueNr = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 15, 4, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 63)))
if mibBuilder.loadTexts: jnxCosQstatQueueNr.setStatus('current')
jnxCosQstatQedPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 15, 4, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxCosQstatQedPkts.setStatus('current')
jnxCosQstatQedPktRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 15, 4, 1, 4), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxCosQstatQedPktRate.setStatus('current')
jnxCosQstatQedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 15, 4, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxCosQstatQedBytes.setStatus('current')
jnxCosQstatQedByteRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 15, 4, 1, 6), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxCosQstatQedByteRate.setStatus('current')
jnxCosQstatTxedPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 15, 4, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxCosQstatTxedPkts.setStatus('current')
jnxCosQstatTxedPktRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 15, 4, 1, 8), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxCosQstatTxedPktRate.setStatus('current')
jnxCosQstatTxedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 15, 4, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxCosQstatTxedBytes.setStatus('current')
jnxCosQstatTxedByteRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 15, 4, 1, 10), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxCosQstatTxedByteRate.setStatus('current')
jnxCosQstatTailDropPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 15, 4, 1, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxCosQstatTailDropPkts.setStatus('current')
jnxCosQstatTailDropPktRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 15, 4, 1, 12), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxCosQstatTailDropPktRate.setStatus('current')
jnxCosQstatTotalRedDropPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 15, 4, 1, 13), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxCosQstatTotalRedDropPkts.setStatus('current')
jnxCosQstatTotalRedDropPktRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 15, 4, 1, 14), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxCosQstatTotalRedDropPktRate.setStatus('current')
jnxCosQstatLpNonTcpRedDropPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 15, 4, 1, 15), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxCosQstatLpNonTcpRedDropPkts.setStatus('current')
jnxCosQstatLpNonTcpRDropPktRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 15, 4, 1, 16), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxCosQstatLpNonTcpRDropPktRate.setStatus('current')
jnxCosQstatLpTcpRedDropPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 15, 4, 1, 17), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxCosQstatLpTcpRedDropPkts.setStatus('current')
jnxCosQstatLpTcpRedDropPktRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 15, 4, 1, 18), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxCosQstatLpTcpRedDropPktRate.setStatus('current')
jnxCosQstatHpNonTcpRedDropPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 15, 4, 1, 19), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxCosQstatHpNonTcpRedDropPkts.setStatus('current')
jnxCosQstatHpNonTcpRDropPktRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 15, 4, 1, 20), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxCosQstatHpNonTcpRDropPktRate.setStatus('current')
jnxCosQstatHpTcpRedDropPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 15, 4, 1, 21), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxCosQstatHpTcpRedDropPkts.setStatus('current')
jnxCosQstatHpTcpRedDropPktRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 15, 4, 1, 22), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxCosQstatHpTcpRedDropPktRate.setStatus('current')
jnxCosQstatTotalRedDropBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 15, 4, 1, 23), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxCosQstatTotalRedDropBytes.setStatus('current')
jnxCosQstatTotalRedDropByteRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 15, 4, 1, 24), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxCosQstatTotalRedDropByteRate.setStatus('current')
jnxCosQstatLpNonTcpRedDropBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 15, 4, 1, 25), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxCosQstatLpNonTcpRedDropBytes.setStatus('current')
jnxCosQstatLpNonTcpRDropByteRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 15, 4, 1, 26), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxCosQstatLpNonTcpRDropByteRate.setStatus('current')
jnxCosQstatLpTcpRedDropBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 15, 4, 1, 27), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxCosQstatLpTcpRedDropBytes.setStatus('current')
jnxCosQstatLpTcpRedDropByteRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 15, 4, 1, 28), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxCosQstatLpTcpRedDropByteRate.setStatus('current')
jnxCosQstatHpNonTcpRedDropBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 15, 4, 1, 29), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxCosQstatHpNonTcpRedDropBytes.setStatus('current')
jnxCosQstatHpNonTcpRDropByteRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 15, 4, 1, 30), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxCosQstatHpNonTcpRDropByteRate.setStatus('current')
jnxCosQstatHpTcpRedDropBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 15, 4, 1, 31), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxCosQstatHpTcpRedDropBytes.setStatus('current')
jnxCosQstatHpTcpRedDropByteRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 15, 4, 1, 32), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxCosQstatHpTcpRedDropByteRate.setStatus('current')
jnxCosQstatLpRedDropPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 15, 4, 1, 33), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxCosQstatLpRedDropPkts.setStatus('current')
jnxCosQstatLpRedDropPktRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 15, 4, 1, 34), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxCosQstatLpRedDropPktRate.setStatus('current')
jnxCosQstatMLpRedDropPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 15, 4, 1, 35), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxCosQstatMLpRedDropPkts.setStatus('current')
jnxCosQstatMLpRedDropPktRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 15, 4, 1, 36), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxCosQstatMLpRedDropPktRate.setStatus('current')
jnxCosQstatMHpRedDropPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 15, 4, 1, 37), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxCosQstatMHpRedDropPkts.setStatus('current')
jnxCosQstatMHpRedDropPktRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 15, 4, 1, 38), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxCosQstatMHpRedDropPktRate.setStatus('current')
jnxCosQstatHpRedDropPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 15, 4, 1, 39), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxCosQstatHpRedDropPkts.setStatus('current')
jnxCosQstatHpRedDropPktRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 15, 4, 1, 40), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxCosQstatHpRedDropPktRate.setStatus('current')
jnxCosQstatLpRedDropBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 15, 4, 1, 41), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxCosQstatLpRedDropBytes.setStatus('current')
jnxCosQstatLpRedDropByteRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 15, 4, 1, 42), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxCosQstatLpRedDropByteRate.setStatus('current')
jnxCosQstatMLpRedDropBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 15, 4, 1, 43), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxCosQstatMLpRedDropBytes.setStatus('current')
jnxCosQstatMLpRedDropByteRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 15, 4, 1, 44), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxCosQstatMLpRedDropByteRate.setStatus('current')
jnxCosQstatMHpRedDropBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 15, 4, 1, 45), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxCosQstatMHpRedDropBytes.setStatus('current')
jnxCosQstatMHpRedDropByteRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 15, 4, 1, 46), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxCosQstatMHpRedDropByteRate.setStatus('current')
jnxCosQstatHpRedDropBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 15, 4, 1, 47), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxCosQstatHpRedDropBytes.setStatus('current')
jnxCosQstatHpRedDropByteRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 15, 4, 1, 48), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxCosQstatHpRedDropByteRate.setStatus('current')
jnxCosQstatRateLimitDropPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 15, 4, 1, 49), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxCosQstatRateLimitDropPkts.setStatus('current')
jnxCosQstatRateLimitDropPktRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 15, 4, 1, 50), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxCosQstatRateLimitDropPktRate.setStatus('current')
jnxCosQstatRateLimitDropBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 15, 4, 1, 51), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxCosQstatRateLimitDropBytes.setStatus('current')
jnxCosQstatRateLimitDropByteRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 15, 4, 1, 52), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxCosQstatRateLimitDropByteRate.setStatus('current')
jnxCosQstatTotalDropPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 15, 4, 1, 53), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxCosQstatTotalDropPkts.setStatus('current')
jnxCosQstatTotalDropPktRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 15, 4, 1, 54), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxCosQstatTotalDropPktRate.setStatus('current')
jnxCosQstatTotalDropBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 15, 4, 1, 55), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxCosQstatTotalDropBytes.setStatus('current')
jnxCosQstatTotalDropByteRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 15, 4, 1, 56), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxCosQstatTotalDropByteRate.setStatus('current')
jnxCosQstatDepthAverage = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 15, 4, 1, 57), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxCosQstatDepthAverage.setStatus('current')
jnxCosQstatDepthCurrent = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 15, 4, 1, 58), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxCosQstatDepthCurrent.setStatus('current')
jnxCosQstatDepthPeak = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 15, 4, 1, 59), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxCosQstatDepthPeak.setStatus('current')
jnxCosQstatDepthMax = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 15, 4, 1, 60), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxCosQstatDepthMax.setStatus('current')
class JnxCosIfstatFlags(TextualConvention, Bits):
    status = 'current'
    namedValues = NamedValues(("perRedDropProfileValid", 0), ("triColorConfiguredAndCapable", 1), ("triColorConfiguredAndNotCapable", 2))

jnxCosIfstatFlagTable = MibTable((1, 3, 6, 1, 4, 1, 2636, 3, 15, 5), )
if mibBuilder.loadTexts: jnxCosIfstatFlagTable.setStatus('current')
jnxCosIfstatFlagEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2636, 3, 15, 5, 1), ).setIndexNames((0, "JUNIPER-COS-MIB", "jnxCosIfIndex"))
if mibBuilder.loadTexts: jnxCosIfstatFlagEntry.setStatus('current')
jnxCosIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 15, 5, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: jnxCosIfIndex.setStatus('current')
jnxCosIfstatFlags = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 15, 5, 1, 2), JnxCosIfstatFlags()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxCosIfstatFlags.setStatus('current')
jnxCosInvQstatTable = MibTable((1, 3, 6, 1, 4, 1, 2636, 3, 15, 6), )
if mibBuilder.loadTexts: jnxCosInvQstatTable.setStatus('current')
jnxCosInvQstatEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2636, 3, 15, 6, 1), ).setIndexNames((0, "JUNIPER-COS-MIB", "jnxCosInvQstatQueueNr"), (0, "JUNIPER-COS-MIB", "jnxCosInvQstatIfIndex"))
if mibBuilder.loadTexts: jnxCosInvQstatEntry.setStatus('current')
jnxCosInvQstatQueueNr = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 15, 6, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 63)))
if mibBuilder.loadTexts: jnxCosInvQstatQueueNr.setStatus('current')
jnxCosInvQstatIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 15, 6, 1, 2), InterfaceIndex())
if mibBuilder.loadTexts: jnxCosInvQstatIfIndex.setStatus('current')
jnxCosInvQstatQedPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 15, 6, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxCosInvQstatQedPkts.setStatus('current')
jnxCosInvQstatQedPktRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 15, 6, 1, 4), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxCosInvQstatQedPktRate.setStatus('current')
jnxCosInvQstatQedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 15, 6, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxCosInvQstatQedBytes.setStatus('current')
jnxCosInvQstatQedByteRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 15, 6, 1, 6), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxCosInvQstatQedByteRate.setStatus('current')
jnxCosInvQstatTxedPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 15, 6, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxCosInvQstatTxedPkts.setStatus('current')
jnxCosInvQstatTxedPktRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 15, 6, 1, 8), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxCosInvQstatTxedPktRate.setStatus('current')
jnxCosInvQstatTxedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 15, 6, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxCosInvQstatTxedBytes.setStatus('current')
jnxCosInvQstatTxedByteRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 15, 6, 1, 10), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxCosInvQstatTxedByteRate.setStatus('current')
jnxCosInvQstatTailDropPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 15, 6, 1, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxCosInvQstatTailDropPkts.setStatus('current')
jnxCosInvQstatTailDropPktRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 15, 6, 1, 12), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxCosInvQstatTailDropPktRate.setStatus('current')
jnxCosInvQstatTotalRedDropPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 15, 6, 1, 13), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxCosInvQstatTotalRedDropPkts.setStatus('current')
jnxCosInvQstatTotalRedDropPktRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 15, 6, 1, 14), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxCosInvQstatTotalRedDropPktRate.setStatus('current')
jnxCosInvQstatLpNonTcpRedDropPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 15, 6, 1, 15), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxCosInvQstatLpNonTcpRedDropPkts.setStatus('current')
jnxCosInvQstatLpNonTcpRDropPktRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 15, 6, 1, 16), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxCosInvQstatLpNonTcpRDropPktRate.setStatus('current')
jnxCosInvQstatLpTcpRedDropPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 15, 6, 1, 17), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxCosInvQstatLpTcpRedDropPkts.setStatus('current')
jnxCosInvQstatLpTcpRedDropPktRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 15, 6, 1, 18), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxCosInvQstatLpTcpRedDropPktRate.setStatus('current')
jnxCosInvQstatHpNonTcpRedDropPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 15, 6, 1, 19), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxCosInvQstatHpNonTcpRedDropPkts.setStatus('current')
jnxCosInvQstatHpNonTcpRDropPktRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 15, 6, 1, 20), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxCosInvQstatHpNonTcpRDropPktRate.setStatus('current')
jnxCosInvQstatHpTcpRedDropPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 15, 6, 1, 21), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxCosInvQstatHpTcpRedDropPkts.setStatus('current')
jnxCosInvQstatHpTcpRedDropPktRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 15, 6, 1, 22), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxCosInvQstatHpTcpRedDropPktRate.setStatus('current')
jnxCosInvQstatTotalRedDropBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 15, 6, 1, 23), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxCosInvQstatTotalRedDropBytes.setStatus('current')
jnxCosInvQstatTotalRedDropByteRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 15, 6, 1, 24), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxCosInvQstatTotalRedDropByteRate.setStatus('current')
jnxCosInvQstatLpNonTcpRedDropBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 15, 6, 1, 25), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxCosInvQstatLpNonTcpRedDropBytes.setStatus('current')
jnxCosInvQstatLpNonTcpRDropByteRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 15, 6, 1, 26), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxCosInvQstatLpNonTcpRDropByteRate.setStatus('current')
jnxCosInvQstatLpTcpRedDropBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 15, 6, 1, 27), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxCosInvQstatLpTcpRedDropBytes.setStatus('current')
jnxCosInvQstatLpTcpRedDropByteRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 15, 6, 1, 28), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxCosInvQstatLpTcpRedDropByteRate.setStatus('current')
jnxCosInvQstatHpNonTcpRedDropBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 15, 6, 1, 29), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxCosInvQstatHpNonTcpRedDropBytes.setStatus('current')
jnxCosInvQstatHpNonTcpRDropByteRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 15, 6, 1, 30), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxCosInvQstatHpNonTcpRDropByteRate.setStatus('current')
jnxCosInvQstatHpTcpRedDropBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 15, 6, 1, 31), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxCosInvQstatHpTcpRedDropBytes.setStatus('current')
jnxCosInvQstatHpTcpRedDropByteRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 15, 6, 1, 32), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxCosInvQstatHpTcpRedDropByteRate.setStatus('current')
jnxCosInvQstatLpRedDropPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 15, 6, 1, 33), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxCosInvQstatLpRedDropPkts.setStatus('current')
jnxCosInvQstatLpRedDropPktRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 15, 6, 1, 34), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxCosInvQstatLpRedDropPktRate.setStatus('current')
jnxCosInvQstatMLpRedDropPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 15, 6, 1, 35), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxCosInvQstatMLpRedDropPkts.setStatus('current')
jnxCosInvQstatMLpRedDropPktRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 15, 6, 1, 36), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxCosInvQstatMLpRedDropPktRate.setStatus('current')
jnxCosInvQstatMHpRedDropPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 15, 6, 1, 37), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxCosInvQstatMHpRedDropPkts.setStatus('current')
jnxCosInvQstatMHpRedDropPktRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 15, 6, 1, 38), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxCosInvQstatMHpRedDropPktRate.setStatus('current')
jnxCosInvQstatHpRedDropPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 15, 6, 1, 39), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxCosInvQstatHpRedDropPkts.setStatus('current')
jnxCosInvQstatHpRedDropPktRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 15, 6, 1, 40), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxCosInvQstatHpRedDropPktRate.setStatus('current')
jnxCosInvQstatLpRedDropBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 15, 6, 1, 41), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxCosInvQstatLpRedDropBytes.setStatus('current')
jnxCosInvQstatLpRedDropByteRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 15, 6, 1, 42), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxCosInvQstatLpRedDropByteRate.setStatus('current')
jnxCosInvQstatMLpRedDropBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 15, 6, 1, 43), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxCosInvQstatMLpRedDropBytes.setStatus('current')
jnxCosInvQstatMLpRedDropByteRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 15, 6, 1, 44), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxCosInvQstatMLpRedDropByteRate.setStatus('current')
jnxCosInvQstatMHpRedDropBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 15, 6, 1, 45), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxCosInvQstatMHpRedDropBytes.setStatus('current')
jnxCosInvQstatMHpRedDropByteRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 15, 6, 1, 46), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxCosInvQstatMHpRedDropByteRate.setStatus('current')
jnxCosInvQstatHpRedDropBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 15, 6, 1, 47), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxCosInvQstatHpRedDropBytes.setStatus('current')
jnxCosInvQstatHpRedDropByteRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 15, 6, 1, 48), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxCosInvQstatHpRedDropByteRate.setStatus('current')
jnxCosIngressQstatTable = MibTable((1, 3, 6, 1, 4, 1, 2636, 3, 15, 7), )
if mibBuilder.loadTexts: jnxCosIngressQstatTable.setStatus('current')
jnxCosIngressQstatEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2636, 3, 15, 7, 1), ).setIndexNames((0, "JUNIPER-COS-MIB", "jnxCosIngressQstatIfIndex"), (0, "JUNIPER-COS-MIB", "jnxCosIngressQstatQueueNr"))
if mibBuilder.loadTexts: jnxCosIngressQstatEntry.setStatus('current')
jnxCosIngressQstatIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 15, 7, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: jnxCosIngressQstatIfIndex.setStatus('current')
jnxCosIngressQstatQueueNr = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 15, 7, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 63)))
if mibBuilder.loadTexts: jnxCosIngressQstatQueueNr.setStatus('current')
jnxCosIngressQstatQedPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 15, 7, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxCosIngressQstatQedPkts.setStatus('current')
jnxCosIngressQstatQedPktRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 15, 7, 1, 4), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxCosIngressQstatQedPktRate.setStatus('current')
jnxCosIngressQstatQedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 15, 7, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxCosIngressQstatQedBytes.setStatus('current')
jnxCosIngressQstatQedByteRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 15, 7, 1, 6), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxCosIngressQstatQedByteRate.setStatus('current')
jnxCosIngressQstatTxedPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 15, 7, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxCosIngressQstatTxedPkts.setStatus('current')
jnxCosIngressQstatTxedPktRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 15, 7, 1, 8), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxCosIngressQstatTxedPktRate.setStatus('current')
jnxCosIngressQstatTxedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 15, 7, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxCosIngressQstatTxedBytes.setStatus('current')
jnxCosIngressQstatTxedByteRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 15, 7, 1, 10), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxCosIngressQstatTxedByteRate.setStatus('current')
jnxCosIngressQstatTailDropPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 15, 7, 1, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxCosIngressQstatTailDropPkts.setStatus('current')
jnxCosIngressQstatTailDropPktRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 15, 7, 1, 12), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxCosIngressQstatTailDropPktRate.setStatus('current')
jnxCosIngressQstatTotalRedDropPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 15, 7, 1, 13), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxCosIngressQstatTotalRedDropPkts.setStatus('current')
jnxCosIngressQstatTotalRedDropPktRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 15, 7, 1, 14), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxCosIngressQstatTotalRedDropPktRate.setStatus('current')
jnxCosIngressQstatLpNonTcpRedDropPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 15, 7, 1, 15), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxCosIngressQstatLpNonTcpRedDropPkts.setStatus('current')
jnxCosIngressQstatLpNonTcpRDropPktRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 15, 7, 1, 16), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxCosIngressQstatLpNonTcpRDropPktRate.setStatus('current')
jnxCosIngressQstatLpTcpRedDropPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 15, 7, 1, 17), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxCosIngressQstatLpTcpRedDropPkts.setStatus('current')
jnxCosIngressQstatLpTcpRedDropPktRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 15, 7, 1, 18), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxCosIngressQstatLpTcpRedDropPktRate.setStatus('current')
jnxCosIngressQstatHpNonTcpRedDropPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 15, 7, 1, 19), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxCosIngressQstatHpNonTcpRedDropPkts.setStatus('current')
jnxCosIngressQstatHpNonTcpRDropPktRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 15, 7, 1, 20), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxCosIngressQstatHpNonTcpRDropPktRate.setStatus('current')
jnxCosIngressQstatHpTcpRedDropPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 15, 7, 1, 21), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxCosIngressQstatHpTcpRedDropPkts.setStatus('current')
jnxCosIngressQstatHpTcpRedDropPktRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 15, 7, 1, 22), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxCosIngressQstatHpTcpRedDropPktRate.setStatus('current')
jnxCosIngressQstatTotalRedDropBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 15, 7, 1, 23), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxCosIngressQstatTotalRedDropBytes.setStatus('current')
jnxCosIngressQstatTotalRedDropByteRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 15, 7, 1, 24), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxCosIngressQstatTotalRedDropByteRate.setStatus('current')
jnxCosIngressQstatLpNonTcpRedDropBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 15, 7, 1, 25), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxCosIngressQstatLpNonTcpRedDropBytes.setStatus('current')
jnxCosIngressQstatLpNonTcpRDropByteRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 15, 7, 1, 26), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxCosIngressQstatLpNonTcpRDropByteRate.setStatus('current')
jnxCosIngressQstatLpTcpRedDropBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 15, 7, 1, 27), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxCosIngressQstatLpTcpRedDropBytes.setStatus('current')
jnxCosIngressQstatLpTcpRedDropByteRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 15, 7, 1, 28), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxCosIngressQstatLpTcpRedDropByteRate.setStatus('current')
jnxCosIngressQstatHpNonTcpRedDropBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 15, 7, 1, 29), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxCosIngressQstatHpNonTcpRedDropBytes.setStatus('current')
jnxCosIngressQstatHpNonTcpRDropByteRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 15, 7, 1, 30), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxCosIngressQstatHpNonTcpRDropByteRate.setStatus('current')
jnxCosIngressQstatHpTcpRedDropBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 15, 7, 1, 31), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxCosIngressQstatHpTcpRedDropBytes.setStatus('current')
jnxCosIngressQstatHpTcpRedDropByteRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 15, 7, 1, 32), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxCosIngressQstatHpTcpRedDropByteRate.setStatus('current')
jnxCosIngressQstatLpRedDropPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 15, 7, 1, 33), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxCosIngressQstatLpRedDropPkts.setStatus('current')
jnxCosIngressQstatLpRedDropPktRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 15, 7, 1, 34), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxCosIngressQstatLpRedDropPktRate.setStatus('current')
jnxCosIngressQstatMLpRedDropPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 15, 7, 1, 35), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxCosIngressQstatMLpRedDropPkts.setStatus('current')
jnxCosIngressQstatMLpRedDropPktRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 15, 7, 1, 36), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxCosIngressQstatMLpRedDropPktRate.setStatus('current')
jnxCosIngressQstatMHpRedDropPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 15, 7, 1, 37), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxCosIngressQstatMHpRedDropPkts.setStatus('current')
jnxCosIngressQstatMHpRedDropPktRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 15, 7, 1, 38), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxCosIngressQstatMHpRedDropPktRate.setStatus('current')
jnxCosIngressQstatHpRedDropPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 15, 7, 1, 39), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxCosIngressQstatHpRedDropPkts.setStatus('current')
jnxCosIngressQstatHpRedDropPktRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 15, 7, 1, 40), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxCosIngressQstatHpRedDropPktRate.setStatus('current')
jnxCosIngressQstatLpRedDropBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 15, 7, 1, 41), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxCosIngressQstatLpRedDropBytes.setStatus('current')
jnxCosIngressQstatLpRedDropByteRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 15, 7, 1, 42), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxCosIngressQstatLpRedDropByteRate.setStatus('current')
jnxCosIngressQstatMLpRedDropBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 15, 7, 1, 43), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxCosIngressQstatMLpRedDropBytes.setStatus('current')
jnxCosIngressQstatMLpRedDropByteRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 15, 7, 1, 44), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxCosIngressQstatMLpRedDropByteRate.setStatus('current')
jnxCosIngressQstatMHpRedDropBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 15, 7, 1, 45), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxCosIngressQstatMHpRedDropBytes.setStatus('current')
jnxCosIngressQstatMHpRedDropByteRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 15, 7, 1, 46), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxCosIngressQstatMHpRedDropByteRate.setStatus('current')
jnxCosIngressQstatHpRedDropBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 15, 7, 1, 47), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxCosIngressQstatHpRedDropBytes.setStatus('current')
jnxCosIngressQstatHpRedDropByteRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 15, 7, 1, 48), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxCosIngressQstatHpRedDropByteRate.setStatus('current')
jnxCosIngressQstatDepthAverage = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 15, 7, 1, 49), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxCosIngressQstatDepthAverage.setStatus('current')
jnxCosIngressQstatDepthCurrent = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 15, 7, 1, 50), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxCosIngressQstatDepthCurrent.setStatus('current')
jnxCosIngressQstatDepthPeak = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 15, 7, 1, 51), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxCosIngressQstatDepthPeak.setStatus('current')
jnxCosIngressQstatDepthMax = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 15, 7, 1, 52), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxCosIngressQstatDepthMax.setStatus('current')
jnxCosNotifyVars = ObjectIdentity((1, 3, 6, 1, 4, 1, 2636, 3, 15, 8))
if mibBuilder.loadTexts: jnxCosNotifyVars.setStatus('current')
jnxCosInterfaceName = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 15, 8, 1), DisplayString()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: jnxCosInterfaceName.setStatus('current')
jnxCosFpcIndex = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 15, 8, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxCosFpcIndex.setStatus('current')
jnxCosPfeIndex = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 15, 8, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxCosPfeIndex.setStatus('current')
jnxCosQueueIndex = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 15, 8, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxCosQueueIndex.setStatus('current')
jnxCosNotificationsPrefix = ObjectIdentity((1, 3, 6, 1, 4, 1, 2636, 4, 17, 0))
if mibBuilder.loadTexts: jnxCosNotificationsPrefix.setStatus('current')
jnxCosOutOfDedicatedQueues = NotificationType((1, 3, 6, 1, 4, 1, 2636, 4, 17, 0, 1)).setObjects(("JUNIPER-COS-MIB", "jnxCosInterfaceName"))
if mibBuilder.loadTexts: jnxCosOutOfDedicatedQueues.setStatus('current')
jnxCosAlmostOutOfDedicatedQueues = NotificationType((1, 3, 6, 1, 4, 1, 2636, 4, 17, 0, 2)).setObjects(("JUNIPER-COS-MIB", "jnxCosInterfaceName"))
if mibBuilder.loadTexts: jnxCosAlmostOutOfDedicatedQueues.setStatus('current')
jnxCosFabricQueueOverflow = NotificationType((1, 3, 6, 1, 4, 1, 2636, 4, 17, 0, 3)).setObjects(("JUNIPER-COS-MIB", "jnxCosFpcIndex"), ("JUNIPER-COS-MIB", "jnxCosPfeIndex"), ("JUNIPER-COS-MIB", "jnxCosQueueIndex"))
if mibBuilder.loadTexts: jnxCosFabricQueueOverflow.setStatus('current')
jnxCosWanQueueOverflow = NotificationType((1, 3, 6, 1, 4, 1, 2636, 4, 17, 0, 4)).setObjects(("JUNIPER-COS-MIB", "jnxCosFpcIndex"), ("JUNIPER-COS-MIB", "jnxCosInterfaceName"), ("JUNIPER-COS-MIB", "jnxCosQueueIndex"))
if mibBuilder.loadTexts: jnxCosWanQueueOverflow.setStatus('current')
jnxCosFabricQueueOverflowCleared = NotificationType((1, 3, 6, 1, 4, 1, 2636, 4, 17, 0, 5)).setObjects(("JUNIPER-COS-MIB", "jnxCosFpcIndex"), ("JUNIPER-COS-MIB", "jnxCosPfeIndex"), ("JUNIPER-COS-MIB", "jnxCosQueueIndex"))
if mibBuilder.loadTexts: jnxCosFabricQueueOverflowCleared.setStatus('current')
jnxCosWanQueueOverflowCleared = NotificationType((1, 3, 6, 1, 4, 1, 2636, 4, 17, 0, 6)).setObjects(("JUNIPER-COS-MIB", "jnxCosFpcIndex"), ("JUNIPER-COS-MIB", "jnxCosInterfaceName"), ("JUNIPER-COS-MIB", "jnxCosQueueIndex"))
if mibBuilder.loadTexts: jnxCosWanQueueOverflowCleared.setStatus('current')
jnxCosIfTable = MibTable((1, 3, 6, 1, 4, 1, 2636, 3, 15, 9), )
if mibBuilder.loadTexts: jnxCosIfTable.setStatus('current')
jnxCosIfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2636, 3, 15, 9, 1), ).setIndexNames((0, "JUNIPER-COS-MIB", "jnxCosIfIdx"))
if mibBuilder.loadTexts: jnxCosIfEntry.setStatus('current')
jnxCosIfIdx = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 15, 9, 1, 1), InterfaceIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxCosIfIdx.setStatus('current')
jnxCosIfsetDescr = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 15, 9, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxCosIfsetDescr.setStatus('current')
jnxCosIfsetQstatTable = MibTable((1, 3, 6, 1, 4, 1, 2636, 3, 15, 10), )
if mibBuilder.loadTexts: jnxCosIfsetQstatTable.setStatus('current')
jnxCosIfsetQstatEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2636, 3, 15, 10, 1), ).setIndexNames((0, "JUNIPER-COS-MIB", "jnxCosIfsetQstatChildIfIndex"), (0, "JUNIPER-COS-MIB", "jnxCosIfsetQstatQueueNr"))
if mibBuilder.loadTexts: jnxCosIfsetQstatEntry.setStatus('current')
jnxCosIfsetQstatChildIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 15, 10, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: jnxCosIfsetQstatChildIfIndex.setStatus('current')
jnxCosIfsetQstatQueueNr = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 15, 10, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 63)))
if mibBuilder.loadTexts: jnxCosIfsetQstatQueueNr.setStatus('current')
jnxCosIfsetQstatQedPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 15, 10, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxCosIfsetQstatQedPkts.setStatus('current')
jnxCosIfsetQstatQedPktRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 15, 10, 1, 4), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxCosIfsetQstatQedPktRate.setStatus('current')
jnxCosIfsetQstatQedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 15, 10, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxCosIfsetQstatQedBytes.setStatus('current')
jnxCosIfsetQstatQedByteRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 15, 10, 1, 6), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxCosIfsetQstatQedByteRate.setStatus('current')
jnxCosIfsetQstatTxedPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 15, 10, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxCosIfsetQstatTxedPkts.setStatus('current')
jnxCosIfsetQstatTxedPktRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 15, 10, 1, 8), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxCosIfsetQstatTxedPktRate.setStatus('current')
jnxCosIfsetQstatTxedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 15, 10, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxCosIfsetQstatTxedBytes.setStatus('current')
jnxCosIfsetQstatTxedByteRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 15, 10, 1, 10), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxCosIfsetQstatTxedByteRate.setStatus('current')
jnxCosIfsetQstatTailDropPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 15, 10, 1, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxCosIfsetQstatTailDropPkts.setStatus('current')
jnxCosIfsetQstatTailDropPktRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 15, 10, 1, 12), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxCosIfsetQstatTailDropPktRate.setStatus('current')
jnxCosIfsetQstatTotalRedDropPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 15, 10, 1, 13), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxCosIfsetQstatTotalRedDropPkts.setStatus('current')
jnxCosIfsetQstatTotalRedDropPktRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 15, 10, 1, 14), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxCosIfsetQstatTotalRedDropPktRate.setStatus('current')
jnxCosIfsetQstatLpNonTcpRedDropPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 15, 10, 1, 15), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxCosIfsetQstatLpNonTcpRedDropPkts.setStatus('current')
jnxCosIfsetQstatLpNonTcpRDropPktRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 15, 10, 1, 16), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxCosIfsetQstatLpNonTcpRDropPktRate.setStatus('current')
jnxCosIfsetQstatLpTcpRedDropPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 15, 10, 1, 17), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxCosIfsetQstatLpTcpRedDropPkts.setStatus('current')
jnxCosIfsetQstatLpTcpRedDropPktRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 15, 10, 1, 18), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxCosIfsetQstatLpTcpRedDropPktRate.setStatus('current')
jnxCosIfsetQstatHpNonTcpRedDropPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 15, 10, 1, 19), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxCosIfsetQstatHpNonTcpRedDropPkts.setStatus('current')
jnxCosIfsetQstatHpNonTcpRDropPktRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 15, 10, 1, 20), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxCosIfsetQstatHpNonTcpRDropPktRate.setStatus('current')
jnxCosIfsetQstatHpTcpRedDropPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 15, 10, 1, 21), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxCosIfsetQstatHpTcpRedDropPkts.setStatus('current')
jnxCosIfsetQstatHpTcpRedDropPktRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 15, 10, 1, 22), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxCosIfsetQstatHpTcpRedDropPktRate.setStatus('current')
jnxCosIfsetQstatTotalRedDropBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 15, 10, 1, 23), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxCosIfsetQstatTotalRedDropBytes.setStatus('current')
jnxCosIfsetQstatTotalRedDropByteRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 15, 10, 1, 24), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxCosIfsetQstatTotalRedDropByteRate.setStatus('current')
jnxCosIfsetQstatLpNonTcpRedDropBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 15, 10, 1, 25), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxCosIfsetQstatLpNonTcpRedDropBytes.setStatus('current')
jnxCosIfsetQstatLpNonTcpRDropByteRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 15, 10, 1, 26), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxCosIfsetQstatLpNonTcpRDropByteRate.setStatus('current')
jnxCosIfsetQstatLpTcpRedDropBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 15, 10, 1, 27), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxCosIfsetQstatLpTcpRedDropBytes.setStatus('current')
jnxCosIfsetQstatLpTcpRedDropByteRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 15, 10, 1, 28), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxCosIfsetQstatLpTcpRedDropByteRate.setStatus('current')
jnxCosIfsetQstatHpNonTcpRedDropBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 15, 10, 1, 29), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxCosIfsetQstatHpNonTcpRedDropBytes.setStatus('current')
jnxCosIfsetQstatHpNonTcpRDropByteRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 15, 10, 1, 30), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxCosIfsetQstatHpNonTcpRDropByteRate.setStatus('current')
jnxCosIfsetQstatHpTcpRedDropBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 15, 10, 1, 31), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxCosIfsetQstatHpTcpRedDropBytes.setStatus('current')
jnxCosIfsetQstatHpTcpRedDropByteRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 15, 10, 1, 32), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxCosIfsetQstatHpTcpRedDropByteRate.setStatus('current')
jnxCosIfsetQstatLpRedDropPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 15, 10, 1, 33), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxCosIfsetQstatLpRedDropPkts.setStatus('current')
jnxCosIfsetQstatLpRedDropPktRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 15, 10, 1, 34), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxCosIfsetQstatLpRedDropPktRate.setStatus('current')
jnxCosIfsetQstatMLpRedDropPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 15, 10, 1, 35), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxCosIfsetQstatMLpRedDropPkts.setStatus('current')
jnxCosIfsetQstatMLpRedDropPktRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 15, 10, 1, 36), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxCosIfsetQstatMLpRedDropPktRate.setStatus('current')
jnxCosIfsetQstatMHpRedDropPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 15, 10, 1, 37), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxCosIfsetQstatMHpRedDropPkts.setStatus('current')
jnxCosIfsetQstatMHpRedDropPktRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 15, 10, 1, 38), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxCosIfsetQstatMHpRedDropPktRate.setStatus('current')
jnxCosIfsetQstatHpRedDropPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 15, 10, 1, 39), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxCosIfsetQstatHpRedDropPkts.setStatus('current')
jnxCosIfsetQstatHpRedDropPktRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 15, 10, 1, 40), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxCosIfsetQstatHpRedDropPktRate.setStatus('current')
jnxCosIfsetQstatLpRedDropBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 15, 10, 1, 41), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxCosIfsetQstatLpRedDropBytes.setStatus('current')
jnxCosIfsetQstatLpRedDropByteRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 15, 10, 1, 42), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxCosIfsetQstatLpRedDropByteRate.setStatus('current')
jnxCosIfsetQstatMLpRedDropBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 15, 10, 1, 43), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxCosIfsetQstatMLpRedDropBytes.setStatus('current')
jnxCosIfsetQstatMLpRedDropByteRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 15, 10, 1, 44), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxCosIfsetQstatMLpRedDropByteRate.setStatus('current')
jnxCosIfsetQstatMHpRedDropBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 15, 10, 1, 45), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxCosIfsetQstatMHpRedDropBytes.setStatus('current')
jnxCosIfsetQstatMHpRedDropByteRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 15, 10, 1, 46), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxCosIfsetQstatMHpRedDropByteRate.setStatus('current')
jnxCosIfsetQstatHpRedDropBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 15, 10, 1, 47), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxCosIfsetQstatHpRedDropBytes.setStatus('current')
jnxCosIfsetQstatHpRedDropByteRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 15, 10, 1, 48), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxCosIfsetQstatHpRedDropByteRate.setStatus('current')
jnxCosIfsetQstatRateLimitDropPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 15, 10, 1, 49), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxCosIfsetQstatRateLimitDropPkts.setStatus('current')
jnxCosIfsetQstatRateLimitDropPktRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 15, 10, 1, 50), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxCosIfsetQstatRateLimitDropPktRate.setStatus('current')
jnxCosIfsetQstatRateLimitDropBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 15, 10, 1, 51), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxCosIfsetQstatRateLimitDropBytes.setStatus('current')
jnxCosIfsetQstatRateLimitDropByteRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 15, 10, 1, 52), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxCosIfsetQstatRateLimitDropByteRate.setStatus('current')
mibBuilder.exportSymbols("JUNIPER-COS-MIB", jnxCosIngressQstatLpNonTcpRDropByteRate=jnxCosIngressQstatLpNonTcpRDropByteRate, jnxCosIfqQedPkts=jnxCosIfqQedPkts, jnxCosQstatMHpRedDropByteRate=jnxCosQstatMHpRedDropByteRate, jnxCosQstatDepthCurrent=jnxCosQstatDepthCurrent, jnxCosIfstatFlagTable=jnxCosIfstatFlagTable, jnxCosIfsetQstatRateLimitDropPkts=jnxCosIfsetQstatRateLimitDropPkts, jnxCosIfsetQstatMLpRedDropPktRate=jnxCosIfsetQstatMLpRedDropPktRate, jnxCosRestrictedQNr=jnxCosRestrictedQNr, jnxCosInvQstatLpTcpRedDropByteRate=jnxCosInvQstatLpTcpRedDropByteRate, jnxCosInvQstatIfIndex=jnxCosInvQstatIfIndex, jnxCosIfsetQstatQedBytes=jnxCosIfsetQstatQedBytes, jnxCosInvQstatLpNonTcpRedDropBytes=jnxCosInvQstatLpNonTcpRedDropBytes, jnxCosQstatQedPktRate=jnxCosQstatQedPktRate, jnxCosInvQstatHpRedDropBytes=jnxCosInvQstatHpRedDropBytes, jnxCosIfsetQstatLpRedDropPkts=jnxCosIfsetQstatLpRedDropPkts, jnxCosWanQueueOverflow=jnxCosWanQueueOverflow, jnxCosInvQstatQedByteRate=jnxCosInvQstatQedByteRate, jnxCosInvQstatLpNonTcpRedDropPkts=jnxCosInvQstatLpNonTcpRedDropPkts, jnxCosQstatHpRedDropPkts=jnxCosQstatHpRedDropPkts, jnxCosIfstatFlagEntry=jnxCosIfstatFlagEntry, jnxCosIfsetQstatQedPktRate=jnxCosIfsetQstatQedPktRate, jnxCosInvQstatMLpRedDropPktRate=jnxCosInvQstatMLpRedDropPktRate, jnxCosQstatTxedByteRate=jnxCosQstatTxedByteRate, jnxCosInvQstatQueueNr=jnxCosInvQstatQueueNr, jnxCosQstatHpRedDropByteRate=jnxCosQstatHpRedDropByteRate, jnxCosQstatDepthAverage=jnxCosQstatDepthAverage, jnxCosIfsetDescr=jnxCosIfsetDescr, jnxCosIngressQstatDepthPeak=jnxCosIngressQstatDepthPeak, jnxCosIngressQstatLpTcpRedDropByteRate=jnxCosIngressQstatLpTcpRedDropByteRate, jnxCosInvQstatLpRedDropByteRate=jnxCosInvQstatLpRedDropByteRate, jnxCosIfsetQstatQedByteRate=jnxCosIfsetQstatQedByteRate, jnxCosIfqQedBytes=jnxCosIfqQedBytes, jnxCosQstatDepthPeak=jnxCosQstatDepthPeak, JnxCosFcIdentifier=JnxCosFcIdentifier, jnxCosQstatRateLimitDropBytes=jnxCosQstatRateLimitDropBytes, jnxCosInvQstatTxedPkts=jnxCosInvQstatTxedPkts, jnxCosInvQstatLpRedDropPkts=jnxCosInvQstatLpRedDropPkts, jnxCosIngressQstatHpNonTcpRedDropPkts=jnxCosIngressQstatHpNonTcpRedDropPkts, jnxCosIfsetQstatHpNonTcpRDropByteRate=jnxCosIfsetQstatHpNonTcpRDropByteRate, jnxCosFabricQueueOverflow=jnxCosFabricQueueOverflow, jnxCosIfqHpNonTcpRedDropPktRate=jnxCosIfqHpNonTcpRedDropPktRate, jnxCosIfsetQstatLpNonTcpRDropPktRate=jnxCosIfsetQstatLpNonTcpRDropPktRate, jnxCosIngressQstatTxedByteRate=jnxCosIngressQstatTxedByteRate, jnxCosIfsetQstatMLpRedDropPkts=jnxCosIfsetQstatMLpRedDropPkts, jnxCosIfsetQstatRateLimitDropPktRate=jnxCosIfsetQstatRateLimitDropPktRate, jnxCosQstatRateLimitDropPktRate=jnxCosQstatRateLimitDropPktRate, jnxCosIfTable=jnxCosIfTable, jnxCosQstatHpNonTcpRDropByteRate=jnxCosQstatHpNonTcpRDropByteRate, jnxCosQstatTotalDropPktRate=jnxCosQstatTotalDropPktRate, jnxCosIfsetQstatHpTcpRedDropPkts=jnxCosIfsetQstatHpTcpRedDropPkts, jnxCosIngressQstatTotalRedDropPktRate=jnxCosIngressQstatTotalRedDropPktRate, jnxCosIfsetQstatTxedPktRate=jnxCosIfsetQstatTxedPktRate, jnxCosIngressQstatHpTcpRedDropPkts=jnxCosIngressQstatHpTcpRedDropPkts, JnxCosAdminString=JnxCosAdminString, jnxCosInvQstatLpTcpRedDropBytes=jnxCosInvQstatLpTcpRedDropBytes, jnxCosIngressQstatMLpRedDropByteRate=jnxCosIngressQstatMLpRedDropByteRate, jnxCosFcId=jnxCosFcId, jnxCosInvQstatTxedByteRate=jnxCosInvQstatTxedByteRate, jnxCosIngressQstatMHpRedDropBytes=jnxCosIngressQstatMHpRedDropBytes, jnxCosIfsetQstatTotalRedDropPktRate=jnxCosIfsetQstatTotalRedDropPktRate, jnxCosQstatQedPkts=jnxCosQstatQedPkts, jnxCosIfsetQstatLpRedDropByteRate=jnxCosIfsetQstatLpRedDropByteRate, jnxCosIfsetQstatMHpRedDropByteRate=jnxCosIfsetQstatMHpRedDropByteRate, jnxCosFcIdTable=jnxCosFcIdTable, jnxCosQstatMLpRedDropPktRate=jnxCosQstatMLpRedDropPktRate, jnxCosIfqTotalRedDropByteRate=jnxCosIfqTotalRedDropByteRate, jnxCosIfqTotalRedDropBytes=jnxCosIfqTotalRedDropBytes, jnxCosIfqTailDropPkts=jnxCosIfqTailDropPkts, jnxCosIngressQstatTailDropPktRate=jnxCosIngressQstatTailDropPktRate, jnxCosIfsetQstatHpNonTcpRedDropPkts=jnxCosIfsetQstatHpNonTcpRedDropPkts, jnxCosFcEntry=jnxCosFcEntry, jnxCosIfqLpNonTcpRedDropByteRate=jnxCosIfqLpNonTcpRedDropByteRate, jnxCosQstatTxedPkts=jnxCosQstatTxedPkts, jnxCosInvQstatQedBytes=jnxCosInvQstatQedBytes, jnxCosInvQstatTailDropPktRate=jnxCosInvQstatTailDropPktRate, jnxCosIngressQstatQedPkts=jnxCosIngressQstatQedPkts, jnxCosIfsetQstatLpNonTcpRedDropBytes=jnxCosIfsetQstatLpNonTcpRedDropBytes, jnxCosIngressQstatLpRedDropByteRate=jnxCosIngressQstatLpRedDropByteRate, jnxCosIfqLpNonTcpRedDropPktRate=jnxCosIfqLpNonTcpRedDropPktRate, jnxCosQstatLpTcpRedDropByteRate=jnxCosQstatLpTcpRedDropByteRate, jnxCosInvQstatHpRedDropPkts=jnxCosInvQstatHpRedDropPkts, jnxCosIngressQstatLpRedDropBytes=jnxCosIngressQstatLpRedDropBytes, jnxCosIfqTotalRedDropPktRate=jnxCosIfqTotalRedDropPktRate, jnxCosFcFabricPriority=jnxCosFcFabricPriority, jnxCosIfsetQstatHpTcpRedDropBytes=jnxCosIfsetQstatHpTcpRedDropBytes, jnxCosInvQstatMLpRedDropByteRate=jnxCosInvQstatMLpRedDropByteRate, JnxCosIfstatFlags=JnxCosIfstatFlags, jnxCosQstatLpRedDropPktRate=jnxCosQstatLpRedDropPktRate, jnxCosIngressQstatTxedBytes=jnxCosIngressQstatTxedBytes, jnxCosIfsetQstatTable=jnxCosIfsetQstatTable, jnxCosIfqStatsTable=jnxCosIfqStatsTable, jnxCosIfqQedByteRate=jnxCosIfqQedByteRate, jnxCosInvQstatMHpRedDropByteRate=jnxCosInvQstatMHpRedDropByteRate, jnxCosAlmostOutOfDedicatedQueues=jnxCosAlmostOutOfDedicatedQueues, jnxCosInvQstatHpTcpRedDropPktRate=jnxCosInvQstatHpTcpRedDropPktRate, jnxCosIfqTxedPktRate=jnxCosIfqTxedPktRate, jnxCosInvQstatHpRedDropByteRate=jnxCosInvQstatHpRedDropByteRate, jnxCosInvQstatHpTcpRedDropBytes=jnxCosInvQstatHpTcpRedDropBytes, jnxCosInvQstatMHpRedDropPktRate=jnxCosInvQstatMHpRedDropPktRate, jnxCosIfIdx=jnxCosIfIdx, jnxCosQstatTotalDropByteRate=jnxCosQstatTotalDropByteRate, jnxCosQstatHpNonTcpRedDropPkts=jnxCosQstatHpNonTcpRedDropPkts, jnxCosIfsetQstatLpNonTcpRedDropPkts=jnxCosIfsetQstatLpNonTcpRedDropPkts, jnxCosQstatQueueNr=jnxCosQstatQueueNr, jnxCosIfqHpNonTcpRedDropPkts=jnxCosIfqHpNonTcpRedDropPkts, jnxCosIngressQstatLpRedDropPkts=jnxCosIngressQstatLpRedDropPkts, jnxCosIfqLpTcpRedDropBytes=jnxCosIfqLpTcpRedDropBytes, jnxCosIfqTxedByteRate=jnxCosIfqTxedByteRate, jnxCosIfqHpTcpRedDropPktRate=jnxCosIfqHpTcpRedDropPktRate, jnxCosIngressQstatMLpRedDropPktRate=jnxCosIngressQstatMLpRedDropPktRate, jnxCosIngressQstatTxedPkts=jnxCosIngressQstatTxedPkts, jnxCosInvQstatTxedPktRate=jnxCosInvQstatTxedPktRate, jnxCosQstatRateLimitDropPkts=jnxCosQstatRateLimitDropPkts, jnxCosInvQstatMLpRedDropPkts=jnxCosInvQstatMLpRedDropPkts, jnxCosIfqIfIndex=jnxCosIfqIfIndex, jnxCosInterfaceName=jnxCosInterfaceName, jnxCosIngressQstatMHpRedDropPktRate=jnxCosIngressQstatMHpRedDropPktRate, jnxCosIfsetQstatLpNonTcpRDropByteRate=jnxCosIfsetQstatLpNonTcpRDropByteRate, jnxCosIfsetQstatHpRedDropPktRate=jnxCosIfsetQstatHpRedDropPktRate, jnxCosNotificationsPrefix=jnxCosNotificationsPrefix, jnxCosQstatQedBytes=jnxCosQstatQedBytes, jnxCosIfqTailDropPktRate=jnxCosIfqTailDropPktRate, jnxCosIngressQstatHpRedDropPktRate=jnxCosIngressQstatHpRedDropPktRate, jnxCosIfsetQstatTotalRedDropPkts=jnxCosIfsetQstatTotalRedDropPkts, jnxCosIfqLpNonTcpRedDropPkts=jnxCosIfqLpNonTcpRedDropPkts, jnxCosIngressQstatTotalRedDropBytes=jnxCosIngressQstatTotalRedDropBytes, jnxCosIngressQstatHpNonTcpRedDropBytes=jnxCosIngressQstatHpNonTcpRedDropBytes, jnxCosInvQstatHpNonTcpRedDropPkts=jnxCosInvQstatHpNonTcpRedDropPkts, jnxCosNotifyVars=jnxCosNotifyVars, jnxCosIfsetQstatTxedPkts=jnxCosIfsetQstatTxedPkts, jnxCosQstatLpRedDropPkts=jnxCosQstatLpRedDropPkts, jnxCosIngressQstatLpTcpRedDropBytes=jnxCosIngressQstatLpTcpRedDropBytes, jnxCosIfsetQstatEntry=jnxCosIfsetQstatEntry, jnxCosIfsetQstatQueueNr=jnxCosIfsetQstatQueueNr, jnxCosIfstatFlags=jnxCosIfstatFlags, jnxCosIfsetQstatLpTcpRedDropPkts=jnxCosIfsetQstatLpTcpRedDropPkts, jnxCosQstatHpTcpRedDropBytes=jnxCosQstatHpTcpRedDropBytes, jnxCosQstatEntry=jnxCosQstatEntry, jnxCosIfsetQstatHpNonTcpRedDropBytes=jnxCosIfsetQstatHpNonTcpRedDropBytes, jnxCosIfqTotalRedDropPkts=jnxCosIfqTotalRedDropPkts, jnxCosQstatTailDropPkts=jnxCosQstatTailDropPkts, jnxCosInvQstatLpRedDropPktRate=jnxCosInvQstatLpRedDropPktRate, jnxCosIfsetQstatLpTcpRedDropPktRate=jnxCosIfsetQstatLpTcpRedDropPktRate, jnxCosQstatHpNonTcpRDropPktRate=jnxCosQstatHpNonTcpRDropPktRate, jnxCosIfqLpNonTcpRedDropBytes=jnxCosIfqLpNonTcpRedDropBytes, jnxCosIfEntry=jnxCosIfEntry, jnxCosFcName=jnxCosFcName, jnxCosIfsetQstatLpTcpRedDropByteRate=jnxCosIfsetQstatLpTcpRedDropByteRate, jnxCosQstatMLpRedDropPkts=jnxCosQstatMLpRedDropPkts, jnxCosQueueIndex=jnxCosQueueIndex, jnxCosInvQstatQedPkts=jnxCosInvQstatQedPkts, jnxCosInvQstatMHpRedDropPkts=jnxCosInvQstatMHpRedDropPkts, jnxCos=jnxCos, jnxCosIngressQstatTable=jnxCosIngressQstatTable, jnxCosIngressQstatTotalRedDropByteRate=jnxCosIngressQstatTotalRedDropByteRate, jnxCosIngressQstatMLpRedDropBytes=jnxCosIngressQstatMLpRedDropBytes, jnxCosIfsetQstatTailDropPkts=jnxCosIfsetQstatTailDropPkts, jnxCosIngressQstatIfIndex=jnxCosIngressQstatIfIndex, jnxCosIfqStatsEntry=jnxCosIfqStatsEntry, jnxCosQstatTotalRedDropByteRate=jnxCosQstatTotalRedDropByteRate, jnxCosIfsetQstatMHpRedDropBytes=jnxCosIfsetQstatMHpRedDropBytes, jnxCosInvQstatLpNonTcpRDropPktRate=jnxCosInvQstatLpNonTcpRDropPktRate, jnxCosIngressQstatHpRedDropByteRate=jnxCosIngressQstatHpRedDropByteRate, jnxCosPfeIndex=jnxCosPfeIndex, jnxCosQstatTotalDropPkts=jnxCosQstatTotalDropPkts, jnxCosQstatHpTcpRedDropPktRate=jnxCosQstatHpTcpRedDropPktRate, jnxCosInvQstatLpNonTcpRDropByteRate=jnxCosInvQstatLpNonTcpRDropByteRate, jnxCosInvQstatHpNonTcpRedDropBytes=jnxCosInvQstatHpNonTcpRedDropBytes, jnxCosQstatHpRedDropBytes=jnxCosQstatHpRedDropBytes, jnxCosIfsetQstatHpNonTcpRDropPktRate=jnxCosIfsetQstatHpNonTcpRDropPktRate, jnxCosInvQstatLpRedDropBytes=jnxCosInvQstatLpRedDropBytes, jnxCosFcQueueNr=jnxCosFcQueueNr, jnxCosQstatMLpRedDropBytes=jnxCosQstatMLpRedDropBytes, jnxCosQstatTotalDropBytes=jnxCosQstatTotalDropBytes, jnxCosInvQstatLpTcpRedDropPkts=jnxCosInvQstatLpTcpRedDropPkts, jnxCosInvQstatTxedBytes=jnxCosInvQstatTxedBytes, jnxCosInvQstatHpRedDropPktRate=jnxCosInvQstatHpRedDropPktRate, jnxCosIfqQedPktRate=jnxCosIfqQedPktRate, jnxCosIngressQstatLpNonTcpRDropPktRate=jnxCosIngressQstatLpNonTcpRDropPktRate, jnxCosIfsetQstatChildIfIndex=jnxCosIfsetQstatChildIfIndex, jnxCosFcIdToFcName=jnxCosFcIdToFcName, jnxCosOutOfDedicatedQueues=jnxCosOutOfDedicatedQueues, jnxCosQstatHpTcpRedDropPkts=jnxCosQstatHpTcpRedDropPkts, jnxCosInvQstatHpNonTcpRDropPktRate=jnxCosInvQstatHpNonTcpRDropPktRate, jnxCosIngressQstatDepthCurrent=jnxCosIngressQstatDepthCurrent, jnxCosQstatRateLimitDropByteRate=jnxCosQstatRateLimitDropByteRate, jnxCosIfqLpTcpRedDropByteRate=jnxCosIfqLpTcpRedDropByteRate, jnxCosQstatLpTcpRedDropBytes=jnxCosQstatLpTcpRedDropBytes, jnxCosQstatMHpRedDropPkts=jnxCosQstatMHpRedDropPkts, jnxCosIngressQstatQedByteRate=jnxCosIngressQstatQedByteRate, jnxCosFpcIndex=jnxCosFpcIndex, jnxCosIngressQstatQedPktRate=jnxCosIngressQstatQedPktRate, jnxCosQstatLpNonTcpRDropPktRate=jnxCosQstatLpNonTcpRDropPktRate, jnxCosQstatQedByteRate=jnxCosQstatQedByteRate, jnxCosIfsetQstatTailDropPktRate=jnxCosIfsetQstatTailDropPktRate, jnxCosIfqHpTcpRedDropByteRate=jnxCosIfqHpTcpRedDropByteRate, jnxCosFcIdEntry=jnxCosFcIdEntry, jnxCosIfsetQstatTotalRedDropBytes=jnxCosIfsetQstatTotalRedDropBytes, jnxCosIfqHpTcpRedDropPkts=jnxCosIfqHpTcpRedDropPkts, jnxCosQstatLpNonTcpRedDropPkts=jnxCosQstatLpNonTcpRedDropPkts, jnxCosIngressQstatQueueNr=jnxCosIngressQstatQueueNr, jnxCosIngressQstatTailDropPkts=jnxCosIngressQstatTailDropPkts, jnxCosIngressQstatDepthMax=jnxCosIngressQstatDepthMax, jnxCosInvQstatTable=jnxCosInvQstatTable, jnxCosIfsetQstatLpTcpRedDropBytes=jnxCosIfsetQstatLpTcpRedDropBytes, jnxCosIfsetQstatMHpRedDropPkts=jnxCosIfsetQstatMHpRedDropPkts, jnxCosIfsetQstatMLpRedDropBytes=jnxCosIfsetQstatMLpRedDropBytes, jnxCosIngressQstatEntry=jnxCosIngressQstatEntry, jnxCosIngressQstatQedBytes=jnxCosIngressQstatQedBytes, jnxCosIfqHpTcpRedDropBytes=jnxCosIfqHpTcpRedDropBytes, jnxCosQstatLpNonTcpRDropByteRate=jnxCosQstatLpNonTcpRDropByteRate, jnxCosQstatDepthMax=jnxCosQstatDepthMax, jnxCosInvQstatEntry=jnxCosInvQstatEntry, jnxCosIngressQstatHpTcpRedDropBytes=jnxCosIngressQstatHpTcpRedDropBytes, jnxCosIngressQstatMHpRedDropPkts=jnxCosIngressQstatMHpRedDropPkts, jnxCosInvQstatMHpRedDropBytes=jnxCosInvQstatMHpRedDropBytes, jnxCosQstatMHpRedDropPktRate=jnxCosQstatMHpRedDropPktRate, jnxCosQstatTable=jnxCosQstatTable, jnxCosIfqLpTcpRedDropPkts=jnxCosIfqLpTcpRedDropPkts, jnxCosQstatMHpRedDropBytes=jnxCosQstatMHpRedDropBytes, jnxCosQstatIfIndex=jnxCosQstatIfIndex, jnxCosQstatLpRedDropByteRate=jnxCosQstatLpRedDropByteRate, jnxCosIfqTxedPkts=jnxCosIfqTxedPkts, jnxCosIfqFc=jnxCosIfqFc, jnxCosInvQstatHpTcpRedDropByteRate=jnxCosInvQstatHpTcpRedDropByteRate, jnxCosIngressQstatMLpRedDropPkts=jnxCosIngressQstatMLpRedDropPkts, jnxCosQstatTxedBytes=jnxCosQstatTxedBytes, jnxCosQstatLpTcpRedDropPktRate=jnxCosQstatLpTcpRedDropPktRate, jnxCosQstatLpNonTcpRedDropBytes=jnxCosQstatLpNonTcpRedDropBytes, jnxCosInvQstatTotalRedDropPkts=jnxCosInvQstatTotalRedDropPkts, jnxCosIngressQstatDepthAverage=jnxCosIngressQstatDepthAverage, jnxCosQstatLpTcpRedDropPkts=jnxCosQstatLpTcpRedDropPkts, jnxCosIngressQstatMHpRedDropByteRate=jnxCosIngressQstatMHpRedDropByteRate, jnxCosIngressQstatHpNonTcpRDropByteRate=jnxCosIngressQstatHpNonTcpRDropByteRate, jnxCosWanQueueOverflowCleared=jnxCosWanQueueOverflowCleared, jnxCosInvQstatHpTcpRedDropPkts=jnxCosInvQstatHpTcpRedDropPkts, jnxCosIfsetQstatRateLimitDropBytes=jnxCosIfsetQstatRateLimitDropBytes, jnxCosIfsetQstatLpRedDropBytes=jnxCosIfsetQstatLpRedDropBytes, jnxCosQstatHpNonTcpRedDropBytes=jnxCosQstatHpNonTcpRedDropBytes, jnxCosInvQstatLpTcpRedDropPktRate=jnxCosInvQstatLpTcpRedDropPktRate, jnxCosIngressQstatHpTcpRedDropPktRate=jnxCosIngressQstatHpTcpRedDropPktRate, jnxCosIngressQstatHpRedDropBytes=jnxCosIngressQstatHpRedDropBytes, jnxCosIngressQstatLpTcpRedDropPkts=jnxCosIngressQstatLpTcpRedDropPkts, jnxCosIfsetQstatHpTcpRedDropPktRate=jnxCosIfsetQstatHpTcpRedDropPktRate, jnxCosQstatHpRedDropPktRate=jnxCosQstatHpRedDropPktRate, jnxCosIfsetQstatQedPkts=jnxCosIfsetQstatQedPkts, jnxCosIfqHpNonTcpRedDropBytes=jnxCosIfqHpNonTcpRedDropBytes, jnxCosIfsetQstatHpRedDropByteRate=jnxCosIfsetQstatHpRedDropByteRate, jnxCosIngressQstatHpRedDropPkts=jnxCosIngressQstatHpRedDropPkts, jnxCosQstatHpTcpRedDropByteRate=jnxCosQstatHpTcpRedDropByteRate, jnxCosIngressQstatHpTcpRedDropByteRate=jnxCosIngressQstatHpTcpRedDropByteRate, jnxCosInvQstatHpNonTcpRDropByteRate=jnxCosInvQstatHpNonTcpRDropByteRate, jnxCosQstatMLpRedDropByteRate=jnxCosQstatMLpRedDropByteRate, jnxCosFcTable=jnxCosFcTable)
mibBuilder.exportSymbols("JUNIPER-COS-MIB", jnxCosIngressQstatLpTcpRedDropPktRate=jnxCosIngressQstatLpTcpRedDropPktRate, jnxCosIfsetQstatMLpRedDropByteRate=jnxCosIfsetQstatMLpRedDropByteRate, jnxCosInvQstatTotalRedDropByteRate=jnxCosInvQstatTotalRedDropByteRate, jnxCosQstatTxedPktRate=jnxCosQstatTxedPktRate, jnxCosQstatLpRedDropBytes=jnxCosQstatLpRedDropBytes, jnxCosFabricQueueOverflowCleared=jnxCosFabricQueueOverflowCleared, jnxCosIfsetQstatMHpRedDropPktRate=jnxCosIfsetQstatMHpRedDropPktRate, PYSNMP_MODULE_ID=jnxCos, jnxCosQstatTotalRedDropPktRate=jnxCosQstatTotalRedDropPktRate, jnxCosIfsetQstatRateLimitDropByteRate=jnxCosIfsetQstatRateLimitDropByteRate, jnxCosIfqHpNonTcpRedDropByteRate=jnxCosIfqHpNonTcpRedDropByteRate, jnxCosInvQstatTotalRedDropBytes=jnxCosInvQstatTotalRedDropBytes, jnxCosIfsetQstatHpRedDropPkts=jnxCosIfsetQstatHpRedDropPkts, jnxCosIfsetQstatHpRedDropBytes=jnxCosIfsetQstatHpRedDropBytes, jnxCosInvQstatQedPktRate=jnxCosInvQstatQedPktRate, jnxCosInvQstatMLpRedDropBytes=jnxCosInvQstatMLpRedDropBytes, jnxCosIfsetQstatLpRedDropPktRate=jnxCosIfsetQstatLpRedDropPktRate, jnxCosQstatTailDropPktRate=jnxCosQstatTailDropPktRate, jnxCosIfqTxedBytes=jnxCosIfqTxedBytes, jnxCosIfsetQstatTxedByteRate=jnxCosIfsetQstatTxedByteRate, jnxCosQstatTotalRedDropBytes=jnxCosQstatTotalRedDropBytes, jnxCosIfsetQstatTxedBytes=jnxCosIfsetQstatTxedBytes, jnxCosIngressQstatLpNonTcpRedDropPkts=jnxCosIngressQstatLpNonTcpRedDropPkts, jnxCosIngressQstatHpNonTcpRDropPktRate=jnxCosIngressQstatHpNonTcpRDropPktRate, jnxCosIngressQstatTotalRedDropPkts=jnxCosIngressQstatTotalRedDropPkts, jnxCosIfqLpTcpRedDropPktRate=jnxCosIfqLpTcpRedDropPktRate, jnxCosInvQstatTailDropPkts=jnxCosInvQstatTailDropPkts, jnxCosIngressQstatTxedPktRate=jnxCosIngressQstatTxedPktRate, jnxCosIfsetQstatHpTcpRedDropByteRate=jnxCosIfsetQstatHpTcpRedDropByteRate, jnxCosIngressQstatLpNonTcpRedDropBytes=jnxCosIngressQstatLpNonTcpRedDropBytes, jnxCosQstatTotalRedDropPkts=jnxCosQstatTotalRedDropPkts, jnxCosIngressQstatLpRedDropPktRate=jnxCosIngressQstatLpRedDropPktRate, jnxCosInvQstatTotalRedDropPktRate=jnxCosInvQstatTotalRedDropPktRate, jnxCosIfIndex=jnxCosIfIndex, jnxCosIfsetQstatTotalRedDropByteRate=jnxCosIfsetQstatTotalRedDropByteRate)
