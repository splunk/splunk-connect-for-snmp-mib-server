#
# PySNMP MIB module BROCADE-MAPS-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/BROCADE-MAPS-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:23:53 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ValueSizeConstraint, ConstraintsIntersection, ConstraintsUnion, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ValueSizeConstraint", "ConstraintsIntersection", "ConstraintsUnion", "ValueRangeConstraint")
bcsiModules, = mibBuilder.importSymbols("Brocade-REG-MIB", "bcsiModules")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
Gauge32, TimeTicks, MibIdentifier, Bits, MibScalar, MibTable, MibTableRow, MibTableColumn, IpAddress, Integer32, iso, ObjectIdentity, Counter32, Counter64, ModuleIdentity, NotificationType, Unsigned32 = mibBuilder.importSymbols("SNMPv2-SMI", "Gauge32", "TimeTicks", "MibIdentifier", "Bits", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "IpAddress", "Integer32", "iso", "ObjectIdentity", "Counter32", "Counter64", "ModuleIdentity", "NotificationType", "Unsigned32")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
swVfId, = mibBuilder.importSymbols("SW-MIB", "swVfId")
maps = ModuleIdentity((1, 3, 6, 1, 4, 1, 1588, 3, 1, 4))
maps.setRevisions(('2013-03-01 14:00', '2013-04-22 13:30',))
if mibBuilder.loadTexts: maps.setLastUpdated('201304221330Z')
if mibBuilder.loadTexts: maps.setOrganization('Brocade Communications Systems, Inc.,')
mapsTraps = ObjectIdentity((1, 3, 6, 1, 4, 1, 1588, 3, 1, 4, 0))
if mibBuilder.loadTexts: mapsTraps.setStatus('current')
mapsConfig = ObjectIdentity((1, 3, 6, 1, 4, 1, 1588, 3, 1, 4, 1))
if mibBuilder.loadTexts: mapsConfig.setStatus('current')
mapsConfigRuleName = MibScalar((1, 3, 6, 1, 4, 1, 1588, 3, 1, 4, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(64, 64)).setFixedLength(64)).setMaxAccess("readonly")
if mibBuilder.loadTexts: mapsConfigRuleName.setStatus('current')
mapsConfigCondition = MibScalar((1, 3, 6, 1, 4, 1, 1588, 3, 1, 4, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(64, 64)).setFixedLength(64)).setMaxAccess("readonly")
if mibBuilder.loadTexts: mapsConfigCondition.setStatus('current')
mapsConfigNumOfMS = MibScalar((1, 3, 6, 1, 4, 1, 1588, 3, 1, 4, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mapsConfigNumOfMS.setStatus('current')
mapsConfigMsName = MibScalar((1, 3, 6, 1, 4, 1, 1588, 3, 1, 4, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(16, 16)).setFixedLength(16)).setMaxAccess("readonly")
if mibBuilder.loadTexts: mapsConfigMsName.setStatus('current')
mapsConfigObjectGroupType = MibScalar((1, 3, 6, 1, 4, 1, 1588, 3, 1, 4, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15))).clone(namedValues=NamedValues(("unknown", 1), ("ps", 2), ("fan", 3), ("port", 4), ("ve-port-cir", 5), ("ts", 6), ("slot", 7), ("gbic", 8), ("flash", 9), ("rule", 10), ("switch", 11), ("chassis", 12), ("cpu", 13), ("wwn", 14), ("flow", 15)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mapsConfigObjectGroupType.setStatus('current')
mapsConfigObjectKeyType = MibScalar((1, 3, 6, 1, 4, 1, 1588, 3, 1, 4, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("int32", 1), ("uint32", 2), ("float", 3), ("string", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mapsConfigObjectKeyType.setStatus('current')
mapsConfigObjectKeyValue = MibScalar((1, 3, 6, 1, 4, 1, 1588, 3, 1, 4, 1, 7), OctetString().subtype(subtypeSpec=ValueSizeConstraint(64, 64)).setFixedLength(64)).setMaxAccess("readonly")
if mibBuilder.loadTexts: mapsConfigObjectKeyValue.setStatus('current')
mapsConfigValueType = MibScalar((1, 3, 6, 1, 4, 1, 1588, 3, 1, 4, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("int32", 1), ("uint32", 2), ("float", 3), ("string", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mapsConfigValueType.setStatus('current')
mapsConfigCurrentValue = MibScalar((1, 3, 6, 1, 4, 1, 1588, 3, 1, 4, 1, 9), OctetString().subtype(subtypeSpec=ValueSizeConstraint(64, 64)).setFixedLength(64)).setMaxAccess("readonly")
if mibBuilder.loadTexts: mapsConfigCurrentValue.setStatus('current')
mapsConfigTimeBase = MibScalar((1, 3, 6, 1, 4, 1, 1588, 3, 1, 4, 1, 10), OctetString().subtype(subtypeSpec=ValueSizeConstraint(16, 16)).setFixedLength(16)).setMaxAccess("readonly")
if mibBuilder.loadTexts: mapsConfigTimeBase.setStatus('current')
mapsConfigSeverityLevel = MibScalar((1, 3, 6, 1, 4, 1, 1588, 3, 1, 4, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("critical", 1), ("error", 2), ("warning", 3), ("informational", 4), ("debug", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mapsConfigSeverityLevel.setStatus('current')
mapsConfigMsList = MibScalar((1, 3, 6, 1, 4, 1, 1588, 3, 1, 4, 1, 12), OctetString().subtype(subtypeSpec=ValueSizeConstraint(128, 128)).setFixedLength(128)).setMaxAccess("readonly")
if mibBuilder.loadTexts: mapsConfigMsList.setStatus('current')
mapsConfigAction = MibScalar((1, 3, 6, 1, 4, 1, 1588, 3, 1, 4, 1, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mapsConfigAction.setStatus('current')
mapsDbCategory = MibScalar((1, 3, 6, 1, 4, 1, 1588, 3, 1, 4, 1, 14), OctetString().subtype(subtypeSpec=ValueSizeConstraint(24, 24)).setFixedLength(24)).setMaxAccess("readonly")
if mibBuilder.loadTexts: mapsDbCategory.setStatus('current')
mapsTrapAM = NotificationType((1, 3, 6, 1, 4, 1, 1588, 3, 1, 4, 0, 1)).setObjects(("BROCADE-MAPS-MIB", "mapsConfigRuleName"), ("BROCADE-MAPS-MIB", "mapsConfigObjectGroupType"), ("BROCADE-MAPS-MIB", "mapsConfigObjectKeyType"), ("BROCADE-MAPS-MIB", "mapsConfigObjectKeyValue"), ("BROCADE-MAPS-MIB", "mapsConfigNumOfMS"), ("BROCADE-MAPS-MIB", "mapsConfigMsList"), ("BROCADE-MAPS-MIB", "mapsConfigSeverityLevel"), ("BROCADE-MAPS-MIB", "mapsConfigCondition"), ("BROCADE-MAPS-MIB", "mapsConfigAction"), ("SW-MIB", "swVfId"), ("BROCADE-MAPS-MIB", "mapsDbCategory"))
if mibBuilder.loadTexts: mapsTrapAM.setStatus('current')
mibBuilder.exportSymbols("BROCADE-MAPS-MIB", mapsConfigRuleName=mapsConfigRuleName, mapsConfigCurrentValue=mapsConfigCurrentValue, mapsConfigNumOfMS=mapsConfigNumOfMS, PYSNMP_MODULE_ID=maps, mapsConfigObjectGroupType=mapsConfigObjectGroupType, mapsConfigSeverityLevel=mapsConfigSeverityLevel, mapsConfigMsList=mapsConfigMsList, mapsTrapAM=mapsTrapAM, maps=maps, mapsConfigMsName=mapsConfigMsName, mapsDbCategory=mapsDbCategory, mapsConfigAction=mapsConfigAction, mapsConfigObjectKeyType=mapsConfigObjectKeyType, mapsConfigObjectKeyValue=mapsConfigObjectKeyValue, mapsConfigCondition=mapsConfigCondition, mapsConfigTimeBase=mapsConfigTimeBase, mapsTraps=mapsTraps, mapsConfigValueType=mapsConfigValueType, mapsConfig=mapsConfig)
