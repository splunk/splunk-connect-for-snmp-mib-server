#
# PySNMP MIB module A3COM-HUAWEI-PROTOCOL-VLAN-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/A3COM-HUAWEI-PROTOCOL-VLAN-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 16:51:59 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
h3cCommon, = mibBuilder.importSymbols("A3COM-HUAWEI-OID-MIB", "h3cCommon")
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ValueSizeConstraint, ConstraintsUnion, ConstraintsIntersection, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ValueSizeConstraint", "ConstraintsUnion", "ConstraintsIntersection", "SingleValueConstraint")
NotificationGroup, ObjectGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ObjectGroup", "ModuleCompliance")
Bits, Unsigned32, MibScalar, MibTable, MibTableRow, MibTableColumn, Gauge32, TimeTicks, MibIdentifier, NotificationType, ModuleIdentity, Integer32, ObjectIdentity, Counter32, iso, IpAddress, Counter64 = mibBuilder.importSymbols("SNMPv2-SMI", "Bits", "Unsigned32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Gauge32", "TimeTicks", "MibIdentifier", "NotificationType", "ModuleIdentity", "Integer32", "ObjectIdentity", "Counter32", "iso", "IpAddress", "Counter64")
RowStatus, TextualConvention, TruthValue, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "RowStatus", "TextualConvention", "TruthValue", "DisplayString")
h3cProtocolVlan = ModuleIdentity((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 16))
h3cProtocolVlan.setRevisions(('2004-08-31 19:38',))
if mibBuilder.loadTexts: h3cProtocolVlan.setLastUpdated('200408311800Z')
if mibBuilder.loadTexts: h3cProtocolVlan.setOrganization('Huawei 3Com Technology Co., Ltd.')
class H3cvProtocolVlanProtocolType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 101, 102, 103))
    namedValues = NamedValues(("ip", 1), ("ipx", 2), ("at", 3), ("ipv6", 4), ("mode-llc", 101), ("mode-snap", 102), ("mode-ethernetii", 103))

class H3cvProtocolVlanProtocolSubType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))
    namedValues = NamedValues(("notused", 1), ("ethernetii", 2), ("llc", 3), ("raw", 4), ("snap", 5), ("etype", 6))

h3cProtocolVlanOperate = MibIdentifier((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 16, 1))
h3cProtocolNumAllVlan = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 16, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cProtocolNumAllVlan.setStatus('current')
h3cProtocolNumPerVlan = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 16, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cProtocolNumPerVlan.setStatus('current')
h3cProtocolNumAllPort = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 16, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cProtocolNumAllPort.setStatus('current')
h3cProtocolNumPerPort = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 16, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cProtocolNumPerPort.setStatus('current')
h3cProtocolVlanTable = MibTable((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 16, 1, 5), )
if mibBuilder.loadTexts: h3cProtocolVlanTable.setStatus('current')
h3cProtocolVlanEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 16, 1, 5, 1), ).setIndexNames((0, "A3COM-HUAWEI-PROTOCOL-VLAN-MIB", "h3cProtocolVlanVlanId"), (0, "A3COM-HUAWEI-PROTOCOL-VLAN-MIB", "h3cProtocolVlanProtocolIndex"))
if mibBuilder.loadTexts: h3cProtocolVlanEntry.setStatus('current')
h3cProtocolVlanVlanId = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 16, 1, 5, 1, 1), Integer32())
if mibBuilder.loadTexts: h3cProtocolVlanVlanId.setStatus('current')
h3cProtocolVlanProtocolIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 16, 1, 5, 1, 2), Integer32())
if mibBuilder.loadTexts: h3cProtocolVlanProtocolIndex.setStatus('current')
h3cProtocolVlanProtocolType = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 16, 1, 5, 1, 3), H3cvProtocolVlanProtocolType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cProtocolVlanProtocolType.setStatus('current')
h3cProtocolVlanProtocolSubType = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 16, 1, 5, 1, 4), H3cvProtocolVlanProtocolSubType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cProtocolVlanProtocolSubType.setStatus('current')
h3cProtocolVlanProtocolTypeValue = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 16, 1, 5, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cProtocolVlanProtocolTypeValue.setStatus('current')
h3cProtocolVlanRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 16, 1, 5, 1, 6), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cProtocolVlanRowStatus.setStatus('current')
h3cProtocolVlanPortTable = MibTable((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 16, 1, 6), )
if mibBuilder.loadTexts: h3cProtocolVlanPortTable.setStatus('current')
h3cProtocolVlanPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 16, 1, 6, 1), ).setIndexNames((0, "A3COM-HUAWEI-PROTOCOL-VLAN-MIB", "h3cProtocolVlanPortIndex"), (0, "A3COM-HUAWEI-PROTOCOL-VLAN-MIB", "h3cProtocolVlanPortVlanId"), (0, "A3COM-HUAWEI-PROTOCOL-VLAN-MIB", "h3cProtocolVlanPortProtocolId"))
if mibBuilder.loadTexts: h3cProtocolVlanPortEntry.setStatus('current')
h3cProtocolVlanPortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 16, 1, 6, 1, 1), Integer32())
if mibBuilder.loadTexts: h3cProtocolVlanPortIndex.setStatus('current')
h3cProtocolVlanPortVlanId = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 16, 1, 6, 1, 2), Integer32())
if mibBuilder.loadTexts: h3cProtocolVlanPortVlanId.setStatus('current')
h3cProtocolVlanPortProtocolId = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 16, 1, 6, 1, 3), Integer32())
if mibBuilder.loadTexts: h3cProtocolVlanPortProtocolId.setStatus('current')
h3cProtocolVlanPortProtocolType = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 16, 1, 6, 1, 4), H3cvProtocolVlanProtocolType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cProtocolVlanPortProtocolType.setStatus('current')
h3cProtocolVlanPortProtocolSubType = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 16, 1, 6, 1, 5), H3cvProtocolVlanProtocolSubType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cProtocolVlanPortProtocolSubType.setStatus('current')
h3cProtocolVlanPortTypeValue = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 16, 1, 6, 1, 6), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cProtocolVlanPortTypeValue.setStatus('current')
h3cProtocolVlanPortRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 16, 1, 6, 1, 7), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cProtocolVlanPortRowStatus.setStatus('current')
h3cDifferentProtocolNumAllPort = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 16, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cDifferentProtocolNumAllPort.setStatus('current')
h3cProtocolVlanConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 16, 2))
h3cProtocolVlanCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 16, 2, 1))
h3cProtocolVlanCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 16, 2, 1, 1)).setObjects(("A3COM-HUAWEI-PROTOCOL-VLAN-MIB", "h3cProtocolVlanOperateGroup"), ("A3COM-HUAWEI-PROTOCOL-VLAN-MIB", "h3cProtocolVlanProtocolGroup"), ("A3COM-HUAWEI-PROTOCOL-VLAN-MIB", "h3cProtocolVlanPortGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    h3cProtocolVlanCompliance = h3cProtocolVlanCompliance.setStatus('current')
h3cProtocolVlanGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 16, 2, 2))
h3cProtocolVlanOperateGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 16, 2, 2, 1)).setObjects(("A3COM-HUAWEI-PROTOCOL-VLAN-MIB", "h3cProtocolNumAllVlan"), ("A3COM-HUAWEI-PROTOCOL-VLAN-MIB", "h3cProtocolNumPerVlan"), ("A3COM-HUAWEI-PROTOCOL-VLAN-MIB", "h3cProtocolNumAllPort"), ("A3COM-HUAWEI-PROTOCOL-VLAN-MIB", "h3cProtocolNumPerPort"), ("A3COM-HUAWEI-PROTOCOL-VLAN-MIB", "h3cDifferentProtocolNumAllPort"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    h3cProtocolVlanOperateGroup = h3cProtocolVlanOperateGroup.setStatus('current')
h3cProtocolVlanProtocolGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 16, 2, 2, 2)).setObjects(("A3COM-HUAWEI-PROTOCOL-VLAN-MIB", "h3cProtocolVlanProtocolType"), ("A3COM-HUAWEI-PROTOCOL-VLAN-MIB", "h3cProtocolVlanProtocolSubType"), ("A3COM-HUAWEI-PROTOCOL-VLAN-MIB", "h3cProtocolVlanProtocolTypeValue"), ("A3COM-HUAWEI-PROTOCOL-VLAN-MIB", "h3cProtocolVlanRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    h3cProtocolVlanProtocolGroup = h3cProtocolVlanProtocolGroup.setStatus('current')
h3cProtocolVlanPortGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 16, 2, 2, 3)).setObjects(("A3COM-HUAWEI-PROTOCOL-VLAN-MIB", "h3cProtocolVlanPortProtocolType"), ("A3COM-HUAWEI-PROTOCOL-VLAN-MIB", "h3cProtocolVlanPortProtocolSubType"), ("A3COM-HUAWEI-PROTOCOL-VLAN-MIB", "h3cProtocolVlanPortTypeValue"), ("A3COM-HUAWEI-PROTOCOL-VLAN-MIB", "h3cProtocolVlanPortRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    h3cProtocolVlanPortGroup = h3cProtocolVlanPortGroup.setStatus('current')
mibBuilder.exportSymbols("A3COM-HUAWEI-PROTOCOL-VLAN-MIB", h3cProtocolVlanPortIndex=h3cProtocolVlanPortIndex, H3cvProtocolVlanProtocolSubType=H3cvProtocolVlanProtocolSubType, PYSNMP_MODULE_ID=h3cProtocolVlan, h3cProtocolVlanProtocolTypeValue=h3cProtocolVlanProtocolTypeValue, h3cProtocolVlanTable=h3cProtocolVlanTable, h3cProtocolVlanPortProtocolType=h3cProtocolVlanPortProtocolType, h3cProtocolVlanPortTable=h3cProtocolVlanPortTable, h3cProtocolVlanEntry=h3cProtocolVlanEntry, h3cProtocolVlanProtocolGroup=h3cProtocolVlanProtocolGroup, h3cDifferentProtocolNumAllPort=h3cDifferentProtocolNumAllPort, h3cProtocolVlanProtocolSubType=h3cProtocolVlanProtocolSubType, h3cProtocolVlanGroups=h3cProtocolVlanGroups, h3cProtocolVlanPortVlanId=h3cProtocolVlanPortVlanId, h3cProtocolVlanPortGroup=h3cProtocolVlanPortGroup, h3cProtocolNumAllVlan=h3cProtocolNumAllVlan, h3cProtocolNumAllPort=h3cProtocolNumAllPort, h3cProtocolVlanVlanId=h3cProtocolVlanVlanId, h3cProtocolVlanPortProtocolId=h3cProtocolVlanPortProtocolId, h3cProtocolVlanPortProtocolSubType=h3cProtocolVlanPortProtocolSubType, h3cProtocolVlanProtocolType=h3cProtocolVlanProtocolType, h3cProtocolVlanCompliances=h3cProtocolVlanCompliances, h3cProtocolVlanPortRowStatus=h3cProtocolVlanPortRowStatus, h3cProtocolVlanOperateGroup=h3cProtocolVlanOperateGroup, h3cProtocolVlanProtocolIndex=h3cProtocolVlanProtocolIndex, h3cProtocolNumPerVlan=h3cProtocolNumPerVlan, h3cProtocolVlanRowStatus=h3cProtocolVlanRowStatus, h3cProtocolVlanOperate=h3cProtocolVlanOperate, h3cProtocolVlanPortTypeValue=h3cProtocolVlanPortTypeValue, h3cProtocolVlanCompliance=h3cProtocolVlanCompliance, h3cProtocolNumPerPort=h3cProtocolNumPerPort, h3cProtocolVlan=h3cProtocolVlan, H3cvProtocolVlanProtocolType=H3cvProtocolVlanProtocolType, h3cProtocolVlanPortEntry=h3cProtocolVlanPortEntry, h3cProtocolVlanConformance=h3cProtocolVlanConformance)
