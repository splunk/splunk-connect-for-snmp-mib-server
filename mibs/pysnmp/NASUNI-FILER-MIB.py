#
# PySNMP MIB module NASUNI-FILER-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file://text/NASUNI-FILER-MIB
# Produced by pysmi-0.3.4 at Mon Sep 20 10:57:46 2021
# On host C02YJ1DPJHD2 platform Darwin version 20.4.0 by user mpipaliya
# Using Python version 3.7.4 (default, Oct 12 2019, 18:55:28) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ValueSizeConstraint, ConstraintsIntersection, ValueRangeConstraint, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ValueSizeConstraint", "ConstraintsIntersection", "ValueRangeConstraint", "SingleValueConstraint")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
ObjectIdentity, MibIdentifier, ModuleIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, Bits, Gauge32, Integer32, Counter32, Unsigned32, Counter64, enterprises, NotificationType, IpAddress, iso, TimeTicks = mibBuilder.importSymbols("SNMPv2-SMI", "ObjectIdentity", "MibIdentifier", "ModuleIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Bits", "Gauge32", "Integer32", "Counter32", "Unsigned32", "Counter64", "enterprises", "NotificationType", "IpAddress", "iso", "TimeTicks")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
nasuni = ModuleIdentity((1, 3, 6, 1, 4, 1, 42040))
nasuni.setRevisions(('2013-07-13 00:00',))
if mibBuilder.loadTexts: nasuni.setLastUpdated('201307130000Z')
if mibBuilder.loadTexts: nasuni.setOrganization('Nasuni Corporation')
filer = MibIdentifier((1, 3, 6, 1, 4, 1, 42040, 1))
filerIdentifier = MibScalar((1, 3, 6, 1, 4, 1, 42040, 1, 1), DisplayString().clone('Nasuni Filer')).setMaxAccess("readonly")
if mibBuilder.loadTexts: filerIdentifier.setStatus('current')
filerVersion = MibScalar((1, 3, 6, 1, 4, 1, 42040, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: filerVersion.setStatus('current')
filerSerialNumber = MibScalar((1, 3, 6, 1, 4, 1, 42040, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: filerSerialNumber.setStatus('current')
filerUptime = MibScalar((1, 3, 6, 1, 4, 1, 42040, 1, 4), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: filerUptime.setStatus('current')
filerUpdateAvailable = MibScalar((1, 3, 6, 1, 4, 1, 42040, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: filerUpdateAvailable.setStatus('current')
filerTotalUnprotectedData = MibScalar((1, 3, 6, 1, 4, 1, 42040, 1, 6), Counter64()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: filerTotalUnprotectedData.setStatus('current')
filerPushesCompleted = MibScalar((1, 3, 6, 1, 4, 1, 42040, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: filerPushesCompleted.setStatus('current')
filerTotalPushed = MibScalar((1, 3, 6, 1, 4, 1, 42040, 1, 8), Counter64()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: filerTotalPushed.setStatus('current')
filerTotalRead = MibScalar((1, 3, 6, 1, 4, 1, 42040, 1, 9), Counter64()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: filerTotalRead.setStatus('current')
filerOpensForRead = MibScalar((1, 3, 6, 1, 4, 1, 42040, 1, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: filerOpensForRead.setStatus('current')
filerOpensForWrite = MibScalar((1, 3, 6, 1, 4, 1, 42040, 1, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: filerOpensForWrite.setStatus('current')
filerMergeConflicts = MibScalar((1, 3, 6, 1, 4, 1, 42040, 1, 12), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: filerMergeConflicts.setStatus('current')
filerReadHits = MibScalar((1, 3, 6, 1, 4, 1, 42040, 1, 13), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: filerReadHits.setStatus('current')
filerReadMisses = MibScalar((1, 3, 6, 1, 4, 1, 42040, 1, 14), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: filerReadMisses.setStatus('current')
filerNextFsckAfter = MibScalar((1, 3, 6, 1, 4, 1, 42040, 1, 15), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: filerNextFsckAfter.setStatus('current')
filerCache = MibIdentifier((1, 3, 6, 1, 4, 1, 42040, 1, 100))
filerCacheTotal = MibScalar((1, 3, 6, 1, 4, 1, 42040, 1, 100, 1), Counter64()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: filerCacheTotal.setStatus('current')
filerCacheUsed = MibScalar((1, 3, 6, 1, 4, 1, 42040, 1, 100, 2), Counter64()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: filerCacheUsed.setStatus('current')
filerCacheFree = MibScalar((1, 3, 6, 1, 4, 1, 42040, 1, 100, 3), Counter64()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: filerCacheFree.setStatus('current')
filerPlatform = MibIdentifier((1, 3, 6, 1, 4, 1, 42040, 1, 101))
filerPlatformName = MibScalar((1, 3, 6, 1, 4, 1, 42040, 1, 101, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: filerPlatformName.setStatus('current')
filerPlatformType = MibScalar((1, 3, 6, 1, 4, 1, 42040, 1, 101, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: filerPlatformType.setStatus('current')
filerPackageFormat = MibScalar((1, 3, 6, 1, 4, 1, 42040, 1, 101, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: filerPackageFormat.setStatus('current')
filerBiosVersion = MibScalar((1, 3, 6, 1, 4, 1, 42040, 1, 101, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: filerBiosVersion.setStatus('current')
filerCpuModel = MibScalar((1, 3, 6, 1, 4, 1, 42040, 1, 101, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: filerCpuModel.setStatus('current')
filerPhysCpuCount = MibScalar((1, 3, 6, 1, 4, 1, 42040, 1, 101, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: filerPhysCpuCount.setStatus('current')
filerCoreCount = MibScalar((1, 3, 6, 1, 4, 1, 42040, 1, 101, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: filerCoreCount.setStatus('current')
filerCpuArch = MibScalar((1, 3, 6, 1, 4, 1, 42040, 1, 101, 8), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: filerCpuArch.setStatus('current')
filerCpuFreq = MibScalar((1, 3, 6, 1, 4, 1, 42040, 1, 101, 9), Counter64()).setUnits('hertz').setMaxAccess("readonly")
if mibBuilder.loadTexts: filerCpuFreq.setStatus('current')
filerDiskCount = MibScalar((1, 3, 6, 1, 4, 1, 42040, 1, 101, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: filerDiskCount.setStatus('current')
filerTotalMemory = MibScalar((1, 3, 6, 1, 4, 1, 42040, 1, 101, 11), Counter64()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: filerTotalMemory.setStatus('current')
filerDeviceCache = MibScalar((1, 3, 6, 1, 4, 1, 42040, 1, 100, 12), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: filerDeviceCache.setStatus('current')
filerDeviceVar = MibScalar((1, 3, 6, 1, 4, 1, 42040, 1, 100, 13), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: filerDeviceVar.setStatus('current')
filerDeviceRoot = MibScalar((1, 3, 6, 1, 4, 1, 42040, 1, 100, 14), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: filerDeviceRoot.setStatus('current')
filerDeviceNasuni = MibScalar((1, 3, 6, 1, 4, 1, 42040, 1, 100, 15), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: filerDeviceNasuni.setStatus('current')
filerHealth = MibIdentifier((1, 3, 6, 1, 4, 1, 42040, 1, 102))
filerAmbientTemp = MibScalar((1, 3, 6, 1, 4, 1, 42040, 1, 102, 1), Integer32()).setUnits('degrees celsius').setMaxAccess("readonly")
if mibBuilder.loadTexts: filerAmbientTemp.setStatus('current')
filerInletTemp = MibScalar((1, 3, 6, 1, 4, 1, 42040, 1, 102, 2), Integer32()).setUnits('degrees celsius').setMaxAccess("readonly")
if mibBuilder.loadTexts: filerInletTemp.setStatus('current')
filerExhaustTemp = MibScalar((1, 3, 6, 1, 4, 1, 42040, 1, 102, 3), Integer32()).setUnits('degrees celsius').setMaxAccess("readonly")
if mibBuilder.loadTexts: filerExhaustTemp.setStatus('current')
filerNumPowerSupplies = MibScalar((1, 3, 6, 1, 4, 1, 42040, 1, 102, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: filerNumPowerSupplies.setStatus('current')
filerPowerSupplyErrors = MibScalar((1, 3, 6, 1, 4, 1, 42040, 1, 102, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: filerPowerSupplyErrors.setStatus('current')
filerNumRaidArrays = MibScalar((1, 3, 6, 1, 4, 1, 42040, 1, 102, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: filerNumRaidArrays.setStatus('current')
filerRaidArrayErrors = MibScalar((1, 3, 6, 1, 4, 1, 42040, 1, 102, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: filerRaidArrayErrors.setStatus('current')
filerNumRaidDisks = MibScalar((1, 3, 6, 1, 4, 1, 42040, 1, 102, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: filerNumRaidDisks.setStatus('current')
filerRaidDiskErrors = MibScalar((1, 3, 6, 1, 4, 1, 42040, 1, 102, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: filerRaidDiskErrors.setStatus('current')
filerCifs = MibIdentifier((1, 3, 6, 1, 4, 1, 42040, 1, 103))
filerNfs = MibIdentifier((1, 3, 6, 1, 4, 1, 42040, 1, 104))
filerFtp = MibIdentifier((1, 3, 6, 1, 4, 1, 42040, 1, 109))
filerIscsi = MibIdentifier((1, 3, 6, 1, 4, 1, 42040, 1, 105))
filerTotalShares = MibScalar((1, 3, 6, 1, 4, 1, 42040, 1, 103, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: filerTotalShares.setStatus('current')
filerTotalShareLocks = MibScalar((1, 3, 6, 1, 4, 1, 42040, 1, 103, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: filerTotalShareLocks.setStatus('current')
filerTotalShareClients = MibScalar((1, 3, 6, 1, 4, 1, 42040, 1, 103, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: filerTotalShareClients.setStatus('current')
filerTotalExports = MibScalar((1, 3, 6, 1, 4, 1, 42040, 1, 104, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: filerTotalExports.setStatus('current')
filerTotalFtpdirs = MibScalar((1, 3, 6, 1, 4, 1, 42040, 1, 109, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: filerTotalFtpdirs.setStatus('current')
filerTotalIscsiTargets = MibScalar((1, 3, 6, 1, 4, 1, 42040, 1, 105, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: filerTotalIscsiTargets.setStatus('current')
filerTotalIscsiClients = MibScalar((1, 3, 6, 1, 4, 1, 42040, 1, 105, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: filerTotalIscsiClients.setStatus('current')
filerMobile = MibIdentifier((1, 3, 6, 1, 4, 1, 42040, 1, 106))
filerTotalMobileLicenses = MibScalar((1, 3, 6, 1, 4, 1, 42040, 1, 106, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: filerTotalMobileLicenses.setStatus('current')
filerNumIOSLicenses = MibScalar((1, 3, 6, 1, 4, 1, 42040, 1, 106, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: filerNumIOSLicenses.setStatus('current')
filerNumAndroidLicenses = MibScalar((1, 3, 6, 1, 4, 1, 42040, 1, 106, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: filerNumAndroidLicenses.setStatus('current')
filerServices = MibIdentifier((1, 3, 6, 1, 4, 1, 42040, 1, 107))
filerSupportServiceEnabled = MibScalar((1, 3, 6, 1, 4, 1, 42040, 1, 107, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: filerSupportServiceEnabled.setStatus('current')
filerSupportServiceConnected = MibScalar((1, 3, 6, 1, 4, 1, 42040, 1, 107, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: filerSupportServiceConnected.setStatus('current')
filerSupportServiceRunning = MibScalar((1, 3, 6, 1, 4, 1, 42040, 1, 107, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: filerSupportServiceRunning.setStatus('current')
filerSupportServiceTimeout = MibScalar((1, 3, 6, 1, 4, 1, 42040, 1, 107, 4), Integer32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: filerSupportServiceTimeout.setStatus('current')
filerNetwork = MibIdentifier((1, 3, 6, 1, 4, 1, 42040, 1, 108))
filerCloudOut = MibScalar((1, 3, 6, 1, 4, 1, 42040, 1, 108, 1), Counter64()).setUnits('bits/second').setMaxAccess("readonly")
if mibBuilder.loadTexts: filerCloudOut.setStatus('current')
filerCloudIn = MibScalar((1, 3, 6, 1, 4, 1, 42040, 1, 108, 2), Counter64()).setUnits('bits/second').setMaxAccess("readonly")
if mibBuilder.loadTexts: filerCloudIn.setStatus('current')
filerMobileOut = MibScalar((1, 3, 6, 1, 4, 1, 42040, 1, 108, 3), Counter64()).setUnits('bits/second').setMaxAccess("readonly")
if mibBuilder.loadTexts: filerMobileOut.setStatus('current')
filerMobileIn = MibScalar((1, 3, 6, 1, 4, 1, 42040, 1, 108, 4), Counter64()).setUnits('bits/second').setMaxAccess("readonly")
if mibBuilder.loadTexts: filerMobileIn.setStatus('current')
filerUIOut = MibScalar((1, 3, 6, 1, 4, 1, 42040, 1, 108, 5), Counter64()).setUnits('bits/second').setMaxAccess("readonly")
if mibBuilder.loadTexts: filerUIOut.setStatus('current')
filerUIIn = MibScalar((1, 3, 6, 1, 4, 1, 42040, 1, 108, 6), Counter64()).setUnits('bits/second').setMaxAccess("readonly")
if mibBuilder.loadTexts: filerUIIn.setStatus('current')
filerClientsOut = MibScalar((1, 3, 6, 1, 4, 1, 42040, 1, 108, 7), Counter64()).setUnits('bits/second').setMaxAccess("readonly")
if mibBuilder.loadTexts: filerClientsOut.setStatus('current')
filerClientsIn = MibScalar((1, 3, 6, 1, 4, 1, 42040, 1, 108, 8), Counter64()).setUnits('bits/second').setMaxAccess("readonly")
if mibBuilder.loadTexts: filerClientsIn.setStatus('current')
filerMigrationOut = MibScalar((1, 3, 6, 1, 4, 1, 42040, 1, 108, 9), Counter64()).setUnits('bits/second').setMaxAccess("readonly")
if mibBuilder.loadTexts: filerMigrationOut.setStatus('current')
filerMigrationIn = MibScalar((1, 3, 6, 1, 4, 1, 42040, 1, 108, 10), Counter64()).setUnits('bits/second').setMaxAccess("readonly")
if mibBuilder.loadTexts: filerMigrationIn.setStatus('current')
volumes = MibIdentifier((1, 3, 6, 1, 4, 1, 42040, 2))
volumeCount = MibScalar((1, 3, 6, 1, 4, 1, 42040, 2, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: volumeCount.setStatus('current')
volumeTable = MibTable((1, 3, 6, 1, 4, 1, 42040, 2, 2), )
if mibBuilder.loadTexts: volumeTable.setStatus('current')
volumeTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 42040, 2, 2, 1), ).setIndexNames((0, "NASUNI-FILER-MIB", "volumeTableIndex"))
if mibBuilder.loadTexts: volumeTableEntry.setStatus('current')
volumeTableIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 42040, 2, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 999)))
if mibBuilder.loadTexts: volumeTableIndex.setStatus('current')
volumeTableDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 42040, 2, 2, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: volumeTableDescription.setStatus('current')
volumeTableProvider = MibTableColumn((1, 3, 6, 1, 4, 1, 42040, 2, 2, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: volumeTableProvider.setStatus('current')
volumeTableProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 42040, 2, 2, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: volumeTableProtocol.setStatus('current')
volumeTableStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 42040, 2, 2, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: volumeTableStatus.setStatus('current')
volumeTableAccessibleData = MibTableColumn((1, 3, 6, 1, 4, 1, 42040, 2, 2, 1, 6), Counter64()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: volumeTableAccessibleData.setStatus('current')
volumeTableUnprotectedData = MibTableColumn((1, 3, 6, 1, 4, 1, 42040, 2, 2, 1, 7), Counter64()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: volumeTableUnprotectedData.setStatus('current')
volumeTableLastSnapshotStart = MibTableColumn((1, 3, 6, 1, 4, 1, 42040, 2, 2, 1, 8), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: volumeTableLastSnapshotStart.setStatus('current')
volumeTableLastSnapshotEnd = MibTableColumn((1, 3, 6, 1, 4, 1, 42040, 2, 2, 1, 9), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: volumeTableLastSnapshotEnd.setStatus('current')
volumeTableLastSnapshotDuration = MibTableColumn((1, 3, 6, 1, 4, 1, 42040, 2, 2, 1, 10), Integer32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: volumeTableLastSnapshotDuration.setStatus('current')
volumeTableLastSnapshotVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 42040, 2, 2, 1, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: volumeTableLastSnapshotVersion.setStatus('current')
volumeTableIsActive = MibTableColumn((1, 3, 6, 1, 4, 1, 42040, 2, 2, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: volumeTableIsActive.setStatus('current')
volumeTableIsShared = MibTableColumn((1, 3, 6, 1, 4, 1, 42040, 2, 2, 1, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: volumeTableIsShared.setStatus('current')
volumeTableIsReadOnly = MibTableColumn((1, 3, 6, 1, 4, 1, 42040, 2, 2, 1, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: volumeTableIsReadOnly.setStatus('current')
volumeTableIsPinned = MibTableColumn((1, 3, 6, 1, 4, 1, 42040, 2, 2, 1, 15), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: volumeTableIsPinned.setStatus('current')
volumeTableIsRemote = MibTableColumn((1, 3, 6, 1, 4, 1, 42040, 2, 2, 1, 16), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: volumeTableIsRemote.setStatus('current')
volumeTableAvEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 42040, 2, 2, 1, 17), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: volumeTableAvEnabled.setStatus('current')
volumeTableRemoteAccessEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 42040, 2, 2, 1, 18), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: volumeTableRemoteAccessEnabled.setStatus('current')
volumeTableQuota = MibTableColumn((1, 3, 6, 1, 4, 1, 42040, 2, 2, 1, 19), Counter64()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: volumeTableQuota.setStatus('current')
volumeTableNumAVViolations = MibTableColumn((1, 3, 6, 1, 4, 1, 42040, 2, 2, 1, 20), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: volumeTableNumAVViolations.setStatus('current')
volumeTableNumFileAlerts = MibTableColumn((1, 3, 6, 1, 4, 1, 42040, 2, 2, 1, 21), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: volumeTableNumFileAlerts.setStatus('current')
volumeTableNumExports = MibTableColumn((1, 3, 6, 1, 4, 1, 42040, 2, 2, 1, 22), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: volumeTableNumExports.setStatus('current')
volumeTableNumShares = MibTableColumn((1, 3, 6, 1, 4, 1, 42040, 2, 2, 1, 23), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: volumeTableNumShares.setStatus('current')
volumeTableNumFtpdirs = MibTableColumn((1, 3, 6, 1, 4, 1, 42040, 2, 2, 1, 24), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: volumeTableNumFtpdirs.setStatus('current')
account = MibIdentifier((1, 3, 6, 1, 4, 1, 42040, 3))
accountLicensedCapacity = MibScalar((1, 3, 6, 1, 4, 1, 42040, 3, 1), Counter64()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: accountLicensedCapacity.setStatus('current')
accountUsedCapacity = MibScalar((1, 3, 6, 1, 4, 1, 42040, 3, 2), Counter64()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: accountUsedCapacity.setStatus('current')
accountPercentUsedCapacity = MibScalar((1, 3, 6, 1, 4, 1, 42040, 3, 3), Integer32()).setUnits('percent').setMaxAccess("readonly")
if mibBuilder.loadTexts: accountPercentUsedCapacity.setStatus('current')
filerTrapsWrap = MibIdentifier((1, 3, 6, 1, 4, 1, 42040, 100))
filerTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 42040, 100, 0))
filerTrapType = MibScalar((1, 3, 6, 1, 4, 1, 42040, 100, 0, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: filerTrapType.setStatus('current')
filerTrapLevel = MibScalar((1, 3, 6, 1, 4, 1, 42040, 100, 0, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: filerTrapLevel.setStatus('current')
filerTrapMessage = MibScalar((1, 3, 6, 1, 4, 1, 42040, 100, 0, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: filerTrapMessage.setStatus('current')
filerTrap = NotificationType((1, 3, 6, 1, 4, 1, 42040, 100, 0, 4)).setObjects(("NASUNI-FILER-MIB", "filerTrapType"), ("NASUNI-FILER-MIB", "filerTrapLevel"), ("NASUNI-FILER-MIB", "filerTrapMessage"))
if mibBuilder.loadTexts: filerTrap.setStatus('current')
mibBuilder.exportSymbols("NASUNI-FILER-MIB", filerRaidDiskErrors=filerRaidDiskErrors, filerTotalExports=filerTotalExports, filerTraps=filerTraps, filerVersion=filerVersion, volumeTableLastSnapshotDuration=volumeTableLastSnapshotDuration, volumeTableIndex=volumeTableIndex, volumeTableIsRemote=volumeTableIsRemote, volumeTableIsShared=volumeTableIsShared, filerCacheTotal=filerCacheTotal, filerIscsi=filerIscsi, filerTrapsWrap=filerTrapsWrap, filerNetwork=filerNetwork, filerTotalMobileLicenses=filerTotalMobileLicenses, volumeTableNumFileAlerts=volumeTableNumFileAlerts, filerCacheUsed=filerCacheUsed, filerNumPowerSupplies=filerNumPowerSupplies, volumeTableLastSnapshotStart=volumeTableLastSnapshotStart, volumeTableIsReadOnly=volumeTableIsReadOnly, filerMigrationOut=filerMigrationOut, filerInletTemp=filerInletTemp, filerPlatform=filerPlatform, filerServices=filerServices, filerTotalUnprotectedData=filerTotalUnprotectedData, filerDeviceVar=filerDeviceVar, filerCpuFreq=filerCpuFreq, filerHealth=filerHealth, filerOpensForWrite=filerOpensForWrite, filerNumRaidArrays=filerNumRaidArrays, filerExhaustTemp=filerExhaustTemp, filerSupportServiceEnabled=filerSupportServiceEnabled, volumeTableLastSnapshotEnd=volumeTableLastSnapshotEnd, filerNumRaidDisks=filerNumRaidDisks, filerPackageFormat=filerPackageFormat, filerTrapLevel=filerTrapLevel, filerCoreCount=filerCoreCount, filerMigrationIn=filerMigrationIn, filerNextFsckAfter=filerNextFsckAfter, filerAmbientTemp=filerAmbientTemp, filerPlatformName=filerPlatformName, filerDeviceRoot=filerDeviceRoot, filerPowerSupplyErrors=filerPowerSupplyErrors, filerPushesCompleted=filerPushesCompleted, filerTotalPushed=filerTotalPushed, volumeTableAccessibleData=volumeTableAccessibleData, filerTrap=filerTrap, filerMobile=filerMobile, filerTrapMessage=filerTrapMessage, filerOpensForRead=filerOpensForRead, filerUIOut=filerUIOut, filer=filer, filerNumIOSLicenses=filerNumIOSLicenses, filerTotalShareClients=filerTotalShareClients, filerSupportServiceConnected=filerSupportServiceConnected, filerTotalIscsiTargets=filerTotalIscsiTargets, volumeTableIsActive=volumeTableIsActive, filerUptime=filerUptime, volumeTableNumShares=volumeTableNumShares, filerDeviceCache=filerDeviceCache, volumeTableNumExports=volumeTableNumExports, volumes=volumes, filerPhysCpuCount=filerPhysCpuCount, filerUIIn=filerUIIn, volumeTableLastSnapshotVersion=volumeTableLastSnapshotVersion, filerSupportServiceRunning=filerSupportServiceRunning, volumeTableProtocol=volumeTableProtocol, filerBiosVersion=filerBiosVersion, accountUsedCapacity=accountUsedCapacity, filerSerialNumber=filerSerialNumber, filerCpuArch=filerCpuArch, account=account, filerIdentifier=filerIdentifier, filerCache=filerCache, PYSNMP_MODULE_ID=nasuni, filerReadMisses=filerReadMisses, filerTotalShareLocks=filerTotalShareLocks, filerTotalFtpdirs=filerTotalFtpdirs, accountPercentUsedCapacity=accountPercentUsedCapacity, filerCloudIn=filerCloudIn, filerNumAndroidLicenses=filerNumAndroidLicenses, filerCifs=filerCifs, filerTotalIscsiClients=filerTotalIscsiClients, filerMergeConflicts=filerMergeConflicts, filerRaidArrayErrors=filerRaidArrayErrors, filerClientsOut=filerClientsOut, volumeCount=volumeCount, volumeTableDescription=volumeTableDescription, volumeTableIsPinned=volumeTableIsPinned, volumeTable=volumeTable, filerUpdateAvailable=filerUpdateAvailable, volumeTableNumFtpdirs=volumeTableNumFtpdirs, filerClientsIn=filerClientsIn, filerCacheFree=filerCacheFree, volumeTableProvider=volumeTableProvider, filerNfs=filerNfs, filerMobileIn=filerMobileIn, filerTotalRead=filerTotalRead, filerPlatformType=filerPlatformType, filerDiskCount=filerDiskCount, volumeTableAvEnabled=volumeTableAvEnabled, volumeTableStatus=volumeTableStatus, volumeTableQuota=volumeTableQuota, volumeTableEntry=volumeTableEntry, filerTrapType=filerTrapType, filerCpuModel=filerCpuModel, filerReadHits=filerReadHits, accountLicensedCapacity=accountLicensedCapacity, nasuni=nasuni, volumeTableNumAVViolations=volumeTableNumAVViolations, filerTotalMemory=filerTotalMemory, volumeTableUnprotectedData=volumeTableUnprotectedData, filerCloudOut=filerCloudOut, filerDeviceNasuni=filerDeviceNasuni, volumeTableRemoteAccessEnabled=volumeTableRemoteAccessEnabled, filerTotalShares=filerTotalShares, filerSupportServiceTimeout=filerSupportServiceTimeout, filerMobileOut=filerMobileOut, filerFtp=filerFtp)
