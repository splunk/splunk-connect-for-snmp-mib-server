#
# PySNMP MIB module MOXA-IO-E1242-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/MOXA-IO-E1242-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 20:03:36 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ConstraintsUnion, ConstraintsIntersection, ValueRangeConstraint, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ConstraintsUnion", "ConstraintsIntersection", "ValueRangeConstraint", "SingleValueConstraint")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Counter64, IpAddress, Bits, Gauge32, TimeTicks, Counter32, ModuleIdentity, enterprises, iso, MibIdentifier, MibScalar, MibTable, MibTableRow, MibTableColumn, Unsigned32, Integer32, NotificationType, ObjectIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "Counter64", "IpAddress", "Bits", "Gauge32", "TimeTicks", "Counter32", "ModuleIdentity", "enterprises", "iso", "MibIdentifier", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Unsigned32", "Integer32", "NotificationType", "ObjectIdentity")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
e1242 = ModuleIdentity((1, 3, 6, 1, 4, 1, 8691, 10, 1242))
e1242.setRevisions(('2013-02-21 14:00',))
if mibBuilder.loadTexts: e1242.setLastUpdated('201302211400Z')
if mibBuilder.loadTexts: e1242.setOrganization('Moxa Automation,Inc.')
moxa = MibIdentifier((1, 3, 6, 1, 4, 1, 8691))
ioLogik = MibIdentifier((1, 3, 6, 1, 4, 1, 8691, 10))
totalChannelNumber = MibScalar((1, 3, 6, 1, 4, 1, 8691, 10, 1242, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: totalChannelNumber.setStatus('current')
serverModel = MibScalar((1, 3, 6, 1, 4, 1, 8691, 10, 1242, 2), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: serverModel.setStatus('current')
systemTime = MibScalar((1, 3, 6, 1, 4, 1, 8691, 10, 1242, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: systemTime.setStatus('current')
firmwareVersion = MibScalar((1, 3, 6, 1, 4, 1, 8691, 10, 1242, 4), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: firmwareVersion.setStatus('current')
e1242monitor = MibIdentifier((1, 3, 6, 1, 4, 1, 8691, 10, 1242, 10))
diTable = MibTable((1, 3, 6, 1, 4, 1, 8691, 10, 1242, 10, 1), )
if mibBuilder.loadTexts: diTable.setStatus('current')
diEntry = MibTableRow((1, 3, 6, 1, 4, 1, 8691, 10, 1242, 10, 1, 1), ).setIndexNames((0, "MOXA-IO-E1242-MIB", "diIndex"))
if mibBuilder.loadTexts: diEntry.setStatus('current')
diIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 8691, 10, 1242, 10, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readonly")
if mibBuilder.loadTexts: diIndex.setStatus('current')
diType = MibTableColumn((1, 3, 6, 1, 4, 1, 8691, 10, 1242, 10, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setMaxAccess("readonly")
if mibBuilder.loadTexts: diType.setStatus('current')
diMode = MibTableColumn((1, 3, 6, 1, 4, 1, 8691, 10, 1242, 10, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: diMode.setStatus('current')
diStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 8691, 10, 1242, 10, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: diStatus.setStatus('current')
diFilter = MibTableColumn((1, 3, 6, 1, 4, 1, 8691, 10, 1242, 10, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: diFilter.setStatus('current')
diTrigger = MibTableColumn((1, 3, 6, 1, 4, 1, 8691, 10, 1242, 10, 1, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: diTrigger.setStatus('current')
diCntStart = MibTableColumn((1, 3, 6, 1, 4, 1, 8691, 10, 1242, 10, 1, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: diCntStart.setStatus('current')
dioTable = MibTable((1, 3, 6, 1, 4, 1, 8691, 10, 1242, 10, 3), )
if mibBuilder.loadTexts: dioTable.setStatus('current')
dioEntry = MibTableRow((1, 3, 6, 1, 4, 1, 8691, 10, 1242, 10, 3, 1), ).setIndexNames((0, "MOXA-IO-E1242-MIB", "dioIndex"))
if mibBuilder.loadTexts: dioEntry.setStatus('current')
dioIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 8691, 10, 1242, 10, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dioIndex.setStatus('current')
dioType = MibTableColumn((1, 3, 6, 1, 4, 1, 8691, 10, 1242, 10, 3, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dioType.setStatus('current')
dioMode = MibTableColumn((1, 3, 6, 1, 4, 1, 8691, 10, 1242, 10, 3, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dioMode.setStatus('current')
dioStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 8691, 10, 1242, 10, 3, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dioStatus.setStatus('current')
dioDIFilter = MibTableColumn((1, 3, 6, 1, 4, 1, 8691, 10, 1242, 10, 3, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dioDIFilter.setStatus('current')
dioDITrigger = MibTableColumn((1, 3, 6, 1, 4, 1, 8691, 10, 1242, 10, 3, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dioDITrigger.setStatus('current')
dioDICntStart = MibTableColumn((1, 3, 6, 1, 4, 1, 8691, 10, 1242, 10, 3, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dioDICntStart.setStatus('current')
dioDOPulsONWidth = MibTableColumn((1, 3, 6, 1, 4, 1, 8691, 10, 1242, 10, 3, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dioDOPulsONWidth.setStatus('current')
dioDOPulsOFFWidth = MibTableColumn((1, 3, 6, 1, 4, 1, 8691, 10, 1242, 10, 3, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dioDOPulsOFFWidth.setStatus('current')
dioDOPulseStart = MibTableColumn((1, 3, 6, 1, 4, 1, 8691, 10, 1242, 10, 3, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dioDOPulseStart.setStatus('current')
aiTable = MibTable((1, 3, 6, 1, 4, 1, 8691, 10, 1242, 10, 4), )
if mibBuilder.loadTexts: aiTable.setStatus('current')
aiEntry = MibTableRow((1, 3, 6, 1, 4, 1, 8691, 10, 1242, 10, 4, 1), ).setIndexNames((0, "MOXA-IO-E1242-MIB", "aiIndex"))
if mibBuilder.loadTexts: aiEntry.setStatus('current')
aiIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 8691, 10, 1242, 10, 4, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 3))).setMaxAccess("readonly")
if mibBuilder.loadTexts: aiIndex.setStatus('current')
aiEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 8691, 10, 1242, 10, 4, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aiEnable.setStatus('current')
aiMode = MibTableColumn((1, 3, 6, 1, 4, 1, 8691, 10, 1242, 10, 4, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aiMode.setStatus('current')
aiValue = MibTableColumn((1, 3, 6, 1, 4, 1, 8691, 10, 1242, 10, 4, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: aiValue.setStatus('current')
aiMin = MibTableColumn((1, 3, 6, 1, 4, 1, 8691, 10, 1242, 10, 4, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: aiMin.setStatus('current')
aiMax = MibTableColumn((1, 3, 6, 1, 4, 1, 8691, 10, 1242, 10, 4, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: aiMax.setStatus('current')
aiTrap_Greater = MibIdentifier((1, 3, 6, 1, 4, 1, 8691, 10, 1242, 22))
aiTrapG0 = NotificationType((1, 3, 6, 1, 4, 1, 8691, 10, 1242, 22) + (0,1))
aiTrapG1 = NotificationType((1, 3, 6, 1, 4, 1, 8691, 10, 1242, 22) + (0,2))
aiTrapG2 = NotificationType((1, 3, 6, 1, 4, 1, 8691, 10, 1242, 22) + (0,3))
aiTrapG3 = NotificationType((1, 3, 6, 1, 4, 1, 8691, 10, 1242, 22) + (0,4))
aiTrap_Smaller = MibIdentifier((1, 3, 6, 1, 4, 1, 8691, 10, 1242, 23))
aiTrapS0 = NotificationType((1, 3, 6, 1, 4, 1, 8691, 10, 1242, 23) + (0,1))
aiTrapS1 = NotificationType((1, 3, 6, 1, 4, 1, 8691, 10, 1242, 23) + (0,2))
aiTrapS2 = NotificationType((1, 3, 6, 1, 4, 1, 8691, 10, 1242, 23) + (0,3))
aiTrapS3 = NotificationType((1, 3, 6, 1, 4, 1, 8691, 10, 1242, 23) + (0,4))
messageTrap = MibIdentifier((1, 3, 6, 1, 4, 1, 8691, 10, 1242, 30))
activeMessageTrap = NotificationType((1, 3, 6, 1, 4, 1, 8691, 10, 1242, 30) + (0,1))
mibBuilder.exportSymbols("MOXA-IO-E1242-MIB", dioDICntStart=dioDICntStart, aiTrapG3=aiTrapG3, aiTable=aiTable, aiTrapS0=aiTrapS0, moxa=moxa, firmwareVersion=firmwareVersion, totalChannelNumber=totalChannelNumber, diType=diType, aiTrapG0=aiTrapG0, aiTrapS2=aiTrapS2, dioDIFilter=dioDIFilter, aiMax=aiMax, PYSNMP_MODULE_ID=e1242, dioType=dioType, ioLogik=ioLogik, dioDOPulsOFFWidth=dioDOPulsOFFWidth, serverModel=serverModel, aiTrapG1=aiTrapG1, diTable=diTable, diIndex=diIndex, dioIndex=dioIndex, messageTrap=messageTrap, dioDOPulsONWidth=dioDOPulsONWidth, dioDITrigger=dioDITrigger, dioStatus=dioStatus, aiMode=aiMode, diStatus=diStatus, dioTable=dioTable, e1242monitor=e1242monitor, diTrigger=diTrigger, dioMode=dioMode, aiTrapS1=aiTrapS1, activeMessageTrap=activeMessageTrap, diCntStart=diCntStart, aiIndex=aiIndex, dioEntry=dioEntry, aiTrap_Greater=aiTrap_Greater, aiTrapG2=aiTrapG2, aiEntry=aiEntry, aiValue=aiValue, dioDOPulseStart=dioDOPulseStart, e1242=e1242, systemTime=systemTime, diMode=diMode, aiEnable=aiEnable, aiMin=aiMin, aiTrapS3=aiTrapS3, diEntry=diEntry, aiTrap_Smaller=aiTrap_Smaller, diFilter=diFilter)
