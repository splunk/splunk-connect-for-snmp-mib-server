#
# PySNMP MIB module XMSERVD-PERF-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/XMSERVD-PERF-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 21:38:02 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ConstraintsIntersection, ConstraintsUnion, SingleValueConstraint, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ConstraintsIntersection", "ConstraintsUnion", "SingleValueConstraint", "ValueSizeConstraint")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
ObjectIdentity, enterprises, Integer32, Counter64, NotificationType, internet, Unsigned32, MibIdentifier, Bits, Counter32, MibScalar, MibTable, MibTableRow, MibTableColumn, Gauge32, ModuleIdentity, iso, IpAddress, TimeTicks = mibBuilder.importSymbols("SNMPv2-SMI", "ObjectIdentity", "enterprises", "Integer32", "Counter64", "NotificationType", "internet", "Unsigned32", "MibIdentifier", "Bits", "Counter32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Gauge32", "ModuleIdentity", "iso", "IpAddress", "TimeTicks")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
directory = MibIdentifier((1, 3, 6, 1, 1))
mgmt = MibIdentifier((1, 3, 6, 1, 2))
experimental = MibIdentifier((1, 3, 6, 1, 3))
private = MibIdentifier((1, 3, 6, 1, 4))
enterprises = MibIdentifier((1, 3, 6, 1, 4, 1))
ibm = MibIdentifier((1, 3, 6, 1, 4, 1, 2))
ibmAgents = MibIdentifier((1, 3, 6, 1, 4, 1, 2, 3))
aix = MibIdentifier((1, 3, 6, 1, 4, 1, 2, 3, 1))
aixRT = MibIdentifier((1, 3, 6, 1, 4, 1, 2, 3, 1, 1))
aixRISC6000 = MibIdentifier((1, 3, 6, 1, 4, 1, 2, 3, 1, 2))
risc6000agents = MibIdentifier((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 1))
risc6000snmpd = MibIdentifier((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 1, 1))
risc6000gated = MibIdentifier((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 1, 2))
risc6000xmservd = MibIdentifier((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 1, 3))
risc6000ibm7318 = MibIdentifier((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 1, 4))
risc6000clsmuxpd = MibIdentifier((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 1, 5))
risc6000private = MibIdentifier((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2))
risc6000samples = MibIdentifier((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 1))
risc6000sampleAgents = MibIdentifier((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 1, 1))
risc6000perf = MibIdentifier((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2))
xmd = MibIdentifier((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1))
risc6000public = MibIdentifier((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 3))
aix370 = MibIdentifier((1, 3, 6, 1, 4, 1, 2, 3, 1, 3))
aixPS2 = MibIdentifier((1, 3, 6, 1, 4, 1, 2, 3, 1, 4))
mvs = MibIdentifier((1, 3, 6, 1, 4, 1, 2, 3, 2))
mvs370 = MibIdentifier((1, 3, 6, 1, 4, 1, 2, 3, 2, 1))
vm = MibIdentifier((1, 3, 6, 1, 4, 1, 2, 3, 3))
vm370 = MibIdentifier((1, 3, 6, 1, 4, 1, 2, 3, 3, 1))
os2 = MibIdentifier((1, 3, 6, 1, 4, 1, 2, 3, 4))
ps2PS2 = MibIdentifier((1, 3, 6, 1, 4, 1, 2, 3, 4, 1))
os400 = MibIdentifier((1, 3, 6, 1, 4, 1, 2, 3, 5))
os400as400 = MibIdentifier((1, 3, 6, 1, 4, 1, 2, 3, 5, 1))
xmdCPU = MibIdentifier((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 1))
xmdCPUGluser = MibScalar((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 1, 101), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdCPUGluser.setStatus('mandatory')
xmdCPUGlkern = MibScalar((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 1, 102), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdCPUGlkern.setStatus('mandatory')
xmdCPUGlwait = MibScalar((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 1, 103), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdCPUGlwait.setStatus('mandatory')
xmdCPUGlidle = MibScalar((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 1, 104), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdCPUGlidle.setStatus('mandatory')
xmdCPUGluticks = MibScalar((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 1, 121), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdCPUGluticks.setStatus('mandatory')
xmdCPUGlkticks = MibScalar((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 1, 122), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdCPUGlkticks.setStatus('mandatory')
xmdCPUGlwticks = MibScalar((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 1, 123), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdCPUGlwticks.setStatus('mandatory')
xmdCPUGliticks = MibScalar((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 1, 124), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdCPUGliticks.setStatus('mandatory')
xmdMem = MibIdentifier((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 2))
xmdMemReal = MibIdentifier((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 2, 1))
xmdMemRealSize = MibScalar((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdMemRealSize.setStatus('mandatory')
xmdMemRealNumfrb = MibScalar((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 2, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdMemRealNumfrb.setStatus('mandatory')
xmdMemRealNoncomp = MibScalar((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 2, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdMemRealNoncomp.setStatus('mandatory')
xmdMemRealComp = MibScalar((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 2, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdMemRealComp.setStatus('mandatory')
xmdMemRealNumlocal = MibScalar((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 2, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdMemRealNumlocal.setStatus('mandatory')
xmdMemRealNumclient = MibScalar((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 2, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdMemRealNumclient.setStatus('mandatory')
xmdMemRealMaxclient = MibScalar((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 2, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdMemRealMaxclient.setStatus('mandatory')
xmdMemRealPdecay = MibScalar((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 2, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdMemRealPdecay.setStatus('mandatory')
xmdMemRealSysrepag = MibScalar((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 2, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdMemRealSysrepag.setStatus('mandatory')
xmdMemRealEfree = MibScalar((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 2, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdMemRealEfree.setStatus('mandatory')
xmdMemRealEpinned = MibScalar((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 2, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdMemRealEpinned.setStatus('mandatory')
xmdMemRealEcomp = MibScalar((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 2, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdMemRealEcomp.setStatus('mandatory')
xmdMemRealEnoncomp = MibScalar((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 2, 1, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdMemRealEnoncomp.setStatus('mandatory')
xmdMemRealElocal = MibScalar((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 2, 1, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdMemRealElocal.setStatus('mandatory')
xmdMemRealEclnt = MibScalar((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 2, 1, 15), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdMemRealEclnt.setStatus('mandatory')
xmdMemRealWseguse = MibScalar((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 2, 1, 16), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdMemRealWseguse.setStatus('mandatory')
xmdMemRealPseguse = MibScalar((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 2, 1, 17), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdMemRealPseguse.setStatus('mandatory')
xmdMemRealClseguse = MibScalar((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 2, 1, 18), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdMemRealClseguse.setStatus('mandatory')
xmdMemRealWsegpin = MibScalar((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 2, 1, 19), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdMemRealWsegpin.setStatus('mandatory')
xmdMemRealPsegpin = MibScalar((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 2, 1, 20), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdMemRealPsegpin.setStatus('mandatory')
xmdMemRealClsegpin = MibScalar((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 2, 1, 21), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdMemRealClsegpin.setStatus('mandatory')
xmdMemVirt = MibIdentifier((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 2, 2))
xmdMemVirtPagein = MibScalar((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 2, 2, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdMemVirtPagein.setStatus('mandatory')
xmdMemVirtPageout = MibScalar((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 2, 2, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdMemVirtPageout.setStatus('mandatory')
xmdMemVirtPgspgin = MibScalar((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 2, 2, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdMemVirtPgspgin.setStatus('mandatory')
xmdMemVirtPgspgout = MibScalar((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 2, 2, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdMemVirtPgspgout.setStatus('mandatory')
xmdMemVirtSio = MibScalar((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 2, 2, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdMemVirtSio.setStatus('mandatory')
xmdMemVirtIodone = MibScalar((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 2, 2, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdMemVirtIodone.setStatus('mandatory')
xmdMemVirtZerofill = MibScalar((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 2, 2, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdMemVirtZerofill.setStatus('mandatory')
xmdMemVirtPagexct = MibScalar((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 2, 2, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdMemVirtPagexct.setStatus('mandatory')
xmdMemVirtPgrclm = MibScalar((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 2, 2, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdMemVirtPgrclm.setStatus('mandatory')
xmdMemVirtLockexct = MibScalar((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 2, 2, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdMemVirtLockexct.setStatus('mandatory')
xmdMemVirtBacktrk = MibScalar((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 2, 2, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdMemVirtBacktrk.setStatus('mandatory')
xmdMemVirtExfill = MibScalar((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 2, 2, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdMemVirtExfill.setStatus('mandatory')
xmdMemVirtScan = MibScalar((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 2, 2, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdMemVirtScan.setStatus('mandatory')
xmdMemVirtCycle = MibScalar((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 2, 2, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdMemVirtCycle.setStatus('mandatory')
xmdMemVirtSteal = MibScalar((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 2, 2, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdMemVirtSteal.setStatus('mandatory')
xmdMemVirtFreewt = MibScalar((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 2, 2, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdMemVirtFreewt.setStatus('mandatory')
xmdMemVirtExtendwt = MibScalar((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 2, 2, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdMemVirtExtendwt.setStatus('mandatory')
xmdMemVirtPendiowt = MibScalar((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 2, 2, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdMemVirtPendiowt.setStatus('mandatory')
xmdMemVirtPfavail = MibScalar((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 2, 2, 19), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdMemVirtPfavail.setStatus('mandatory')
xmdMemVirtWcomrepag = MibScalar((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 2, 2, 20), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdMemVirtWcomrepag.setStatus('mandatory')
xmdMemVirtWncomrepag = MibScalar((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 2, 2, 21), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdMemVirtWncomrepag.setStatus('mandatory')
xmdMemVirtComrepag = MibScalar((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 2, 2, 22), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdMemVirtComrepag.setStatus('mandatory')
xmdMemVirtEcomrepag = MibScalar((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 2, 2, 23), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdMemVirtEcomrepag.setStatus('mandatory')
xmdMemVirtNcomrepag = MibScalar((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 2, 2, 24), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdMemVirtNcomrepag.setStatus('mandatory')
xmdMemVirtEncomrepag = MibScalar((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 2, 2, 25), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdMemVirtEncomrepag.setStatus('mandatory')
xmdMemVirtComrepl = MibScalar((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 2, 2, 26), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdMemVirtComrepl.setStatus('mandatory')
xmdMemVirtEcomrepl = MibScalar((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 2, 2, 27), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdMemVirtEcomrepl.setStatus('mandatory')
xmdMemVirtNcomrepl = MibScalar((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 2, 2, 28), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdMemVirtNcomrepl.setStatus('mandatory')
xmdMemVirtEncomrepl = MibScalar((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 2, 2, 29), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdMemVirtEncomrepl.setStatus('mandatory')
xmdMemVirtTotpends = MibScalar((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 2, 2, 30), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdMemVirtTotpends.setStatus('mandatory')
xmdMemVirtCompends = MibScalar((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 2, 2, 31), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdMemVirtCompends.setStatus('mandatory')
xmdMemVirtNcompends = MibScalar((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 2, 2, 32), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdMemVirtNcompends.setStatus('mandatory')
xmdMemVirtCltpends = MibScalar((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 2, 2, 33), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdMemVirtCltpends.setStatus('mandatory')
xmdMemVirtNpswarn = MibScalar((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 2, 2, 34), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdMemVirtNpswarn.setStatus('mandatory')
xmdMemVirtNpskill = MibScalar((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 2, 2, 35), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdMemVirtNpskill.setStatus('mandatory')
xmdMemVirtMaxfree = MibScalar((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 2, 2, 36), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdMemVirtMaxfree.setStatus('mandatory')
xmdMemVirtMinfree = MibScalar((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 2, 2, 37), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdMemVirtMinfree.setStatus('mandatory')
xmdMemVirtMinperm = MibScalar((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 2, 2, 38), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdMemVirtMinperm.setStatus('mandatory')
xmdMemVirtMaxpgahead = MibScalar((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 2, 2, 39), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdMemVirtMaxpgahead.setStatus('mandatory')
xmdMemVirtMinpgahead = MibScalar((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 2, 2, 40), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdMemVirtMinpgahead.setStatus('mandatory')
xmdMemVirtMaxpout = MibScalar((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 2, 2, 41), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdMemVirtMaxpout.setStatus('mandatory')
xmdMemVirtMinpout = MibScalar((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 2, 2, 42), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdMemVirtMinpout.setStatus('mandatory')
xmdMemKmem = MibTable((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 2, 4), )
if mibBuilder.loadTexts: xmdMemKmem.setStatus('mandatory')
xmdMemKmemEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 2, 4, 1), )
if mibBuilder.loadTexts: xmdMemKmemEntry.setStatus('mandatory')
xmdMemKmemIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 2, 4, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdMemKmemIndex.setStatus('mandatory')
xmdMemKmemInstName = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 2, 4, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdMemKmemInstName.setStatus('mandatory')
xmdMemKmemInuse = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 2, 4, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdMemKmemInuse.setStatus('mandatory')
xmdMemKmemCalls = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 2, 4, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdMemKmemCalls.setStatus('mandatory')
xmdMemKmemFailures = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 2, 4, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdMemKmemFailures.setStatus('mandatory')
xmdMemKmemMemuse = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 2, 4, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdMemKmemMemuse.setStatus('mandatory')
xmdMemKmemMemmax = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 2, 4, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdMemKmemMemmax.setStatus('mandatory')
xmdMemKmemBlocks = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 2, 4, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdMemKmemBlocks.setStatus('mandatory')
xmdPagSp = MibTable((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 3), )
if mibBuilder.loadTexts: xmdPagSp.setStatus('mandatory')
xmdPagSpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 3, 1), )
if mibBuilder.loadTexts: xmdPagSpEntry.setStatus('mandatory')
xmdPagSpIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 3, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdPagSpIndex.setStatus('mandatory')
xmdPagSpInstName = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 3, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdPagSpInstName.setStatus('mandatory')
xmdPagSpSize = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 3, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdPagSpSize.setStatus('mandatory')
xmdPagSpEfree = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 3, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdPagSpEfree.setStatus('mandatory')
xmdPagSpIocnt = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 3, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdPagSpIocnt.setStatus('mandatory')
xmdPagSpTotalsize = MibScalar((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 3, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdPagSpTotalsize.setStatus('mandatory')
xmdPagSpTotalfree = MibScalar((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 3, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdPagSpTotalfree.setStatus('mandatory')
xmdPagSpEtotalfree = MibScalar((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 3, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdPagSpEtotalfree.setStatus('mandatory')
xmdPagSpEtotalused = MibScalar((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 3, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdPagSpEtotalused.setStatus('mandatory')
xmdPagSpPgspgin = MibScalar((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 3, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdPagSpPgspgin.setStatus('mandatory')
xmdPagSpPgspgout = MibScalar((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 3, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdPagSpPgspgout.setStatus('mandatory')
xmdDisk = MibTable((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 4), )
if mibBuilder.loadTexts: xmdDisk.setStatus('mandatory')
xmdDiskEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 4, 1), )
if mibBuilder.loadTexts: xmdDiskEntry.setStatus('mandatory')
xmdDiskIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 4, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdDiskIndex.setStatus('mandatory')
xmdDiskInstName = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 4, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdDiskInstName.setStatus('mandatory')
xmdDiskBusy = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 4, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdDiskBusy.setStatus('mandatory')
xmdDiskXfer = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 4, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdDiskXfer.setStatus('mandatory')
xmdDiskRblk = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 4, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdDiskRblk.setStatus('mandatory')
xmdDiskWblk = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 4, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdDiskWblk.setStatus('mandatory')
xmdLAN = MibTable((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 5), )
if mibBuilder.loadTexts: xmdLAN.setStatus('mandatory')
xmdLANEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 5, 1), )
if mibBuilder.loadTexts: xmdLANEntry.setStatus('mandatory')
xmdLANIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 5, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdLANIndex.setStatus('mandatory')
xmdLANInstName = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 5, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdLANInstName.setStatus('mandatory')
xmdLANBytesout = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 5, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdLANBytesout.setStatus('mandatory')
xmdLANKbytesout = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 5, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdLANKbytesout.setStatus('mandatory')
xmdLANBytesin = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 5, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdLANBytesin.setStatus('mandatory')
xmdLANKbytesin = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 5, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdLANKbytesin.setStatus('mandatory')
xmdLANFramesout = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 5, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdLANFramesout.setStatus('mandatory')
xmdLANFramesin = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 5, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdLANFramesin.setStatus('mandatory')
xmdLANXmiterrors = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 5, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdLANXmiterrors.setStatus('mandatory')
xmdLANRcverrors = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 5, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdLANRcverrors.setStatus('mandatory')
xmdLANIbadpacks = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 5, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdLANIbadpacks.setStatus('mandatory')
xmdLANXmitque = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 5, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdLANXmitque.setStatus('mandatory')
xmdLANHighxmitq = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 5, 1, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdLANHighxmitq.setStatus('mandatory')
xmdLANRecvintr = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 5, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdLANRecvintr.setStatus('mandatory')
xmdLANXmitintr = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 5, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdLANXmitintr.setStatus('mandatory')
xmdLANXmitovfl = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 5, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdLANXmitovfl.setStatus('mandatory')
xmdLANXmitdrops = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 5, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdLANXmitdrops.setStatus('mandatory')
xmdLANRecvdrops = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 5, 1, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdLANRecvdrops.setStatus('mandatory')
xmdProc = MibTable((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 6), )
if mibBuilder.loadTexts: xmdProc.setStatus('mandatory')
xmdProcEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 6, 1), )
if mibBuilder.loadTexts: xmdProcEntry.setStatus('mandatory')
xmdProcIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 6, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdProcIndex.setStatus('mandatory')
xmdProcInstName = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 6, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdProcInstName.setStatus('mandatory')
xmdProcNice = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 6, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdProcNice.setStatus('mandatory')
xmdProcRepage = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 6, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdProcRepage.setStatus('mandatory')
xmdProcMajflt = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 6, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdProcMajflt.setStatus('mandatory')
xmdProcMinflt = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 6, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdProcMinflt.setStatus('mandatory')
xmdProcCpums = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 6, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdProcCpums.setStatus('mandatory')
xmdProcCpuacc = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 6, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdProcCpuacc.setStatus('mandatory')
xmdProcCpupct = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 6, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdProcCpupct.setStatus('mandatory')
xmdProcUsercpu = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 6, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdProcUsercpu.setStatus('mandatory')
xmdProcKerncpu = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 6, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdProcKerncpu.setStatus('mandatory')
xmdProcWorkmem = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 6, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdProcWorkmem.setStatus('mandatory')
xmdProcCodemem = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 6, 1, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdProcCodemem.setStatus('mandatory')
xmdProcPagsp = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 6, 1, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdProcPagsp.setStatus('mandatory')
xmdProcNsignals = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 6, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdProcNsignals.setStatus('mandatory')
xmdProcNvcsw = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 6, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdProcNvcsw.setStatus('mandatory')
xmdProcTsize = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 6, 1, 17), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdProcTsize.setStatus('mandatory')
xmdProcMaxrss = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 6, 1, 18), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdProcMaxrss.setStatus('mandatory')
xmdProcPswitch = MibScalar((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 6, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdProcPswitch.setStatus('mandatory')
xmdProcRunque = MibScalar((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 6, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdProcRunque.setStatus('mandatory')
xmdProcRunocc = MibScalar((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 6, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdProcRunocc.setStatus('mandatory')
xmdProcSwpque = MibScalar((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 6, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdProcSwpque.setStatus('mandatory')
xmdProcSwpocc = MibScalar((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 6, 15), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdProcSwpocc.setStatus('mandatory')
xmdProcKsched = MibScalar((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 6, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdProcKsched.setStatus('mandatory')
xmdProcKexit = MibScalar((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 6, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdProcKexit.setStatus('mandatory')
xmdSyscall = MibIdentifier((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 7))
xmdSyscallTotal = MibScalar((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 7, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdSyscallTotal.setStatus('mandatory')
xmdSyscallRead = MibScalar((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 7, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdSyscallRead.setStatus('mandatory')
xmdSyscallWrite = MibScalar((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 7, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdSyscallWrite.setStatus('mandatory')
xmdSyscallFork = MibScalar((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 7, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdSyscallFork.setStatus('mandatory')
xmdSyscallExec = MibScalar((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 7, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdSyscallExec.setStatus('mandatory')
xmdSysIO = MibIdentifier((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 8))
xmdSysIOReadch = MibScalar((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 8, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdSysIOReadch.setStatus('mandatory')
xmdSysIOReadchkb = MibScalar((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 8, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdSysIOReadchkb.setStatus('mandatory')
xmdSysIOWritech = MibScalar((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 8, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdSysIOWritech.setStatus('mandatory')
xmdSysIOWritechkb = MibScalar((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 8, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdSysIOWritechkb.setStatus('mandatory')
xmdSysIOLbread = MibScalar((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 8, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdSysIOLbread.setStatus('mandatory')
xmdSysIOLbwrite = MibScalar((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 8, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdSysIOLbwrite.setStatus('mandatory')
xmdSysIOBread = MibScalar((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 8, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdSysIOBread.setStatus('mandatory')
xmdSysIOBwrite = MibScalar((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 8, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdSysIOBwrite.setStatus('mandatory')
xmdSysIOPhread = MibScalar((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 8, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdSysIOPhread.setStatus('mandatory')
xmdSysIOPhwrite = MibScalar((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 8, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdSysIOPhwrite.setStatus('mandatory')
xmdSysIOTtyraw = MibScalar((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 8, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdSysIOTtyraw.setStatus('mandatory')
xmdSysIOTtycan = MibScalar((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 8, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdSysIOTtycan.setStatus('mandatory')
xmdSysIOTtyout = MibScalar((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 8, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdSysIOTtyout.setStatus('mandatory')
xmdIPC = MibIdentifier((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 9))
xmdIPCMsg = MibIdentifier((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 9, 1))
xmdIPCMsgMsgmax = MibScalar((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 9, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdIPCMsgMsgmax.setStatus('mandatory')
xmdIPCMsgQuemax = MibScalar((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 9, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdIPCMsgQuemax.setStatus('mandatory')
xmdIPCMsgQueids = MibScalar((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 9, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdIPCMsgQueids.setStatus('mandatory')
xmdIPCMsgIdmax = MibScalar((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 9, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdIPCMsgIdmax.setStatus('mandatory')
xmdIPCSem = MibIdentifier((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 9, 2))
xmdIPCSemSemids = MibScalar((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 9, 2, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdIPCSemSemids.setStatus('mandatory')
xmdIPCSemMaxsems = MibScalar((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 9, 2, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdIPCSemMaxsems.setStatus('mandatory')
xmdIPCSemMaxops = MibScalar((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 9, 2, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdIPCSemMaxops.setStatus('mandatory')
xmdIPCSemMaxundo = MibScalar((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 9, 2, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdIPCSemMaxundo.setStatus('mandatory')
xmdIPCSemUndosiz = MibScalar((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 9, 2, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdIPCSemUndosiz.setStatus('mandatory')
xmdIPCSemSemmaxv = MibScalar((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 9, 2, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdIPCSemSemmaxv.setStatus('mandatory')
xmdIPCSemSemmaxe = MibScalar((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 9, 2, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdIPCSemSemmaxe.setStatus('mandatory')
xmdIPCShm = MibIdentifier((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 9, 3))
xmdIPCShmShmmax = MibScalar((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 9, 3, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdIPCShmShmmax.setStatus('mandatory')
xmdIPCShmShmmin = MibScalar((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 9, 3, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdIPCShmShmmin.setStatus('mandatory')
xmdIPCShmShmids = MibScalar((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 9, 3, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdIPCShmShmids.setStatus('mandatory')
xmdIPCLocks = MibIdentifier((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 9, 4))
xmdIPCLocksNumrecs = MibScalar((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 9, 4, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdIPCLocksNumrecs.setStatus('mandatory')
xmdIPCLocksRecsused = MibScalar((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 9, 4, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdIPCLocksRecsused.setStatus('mandatory')
xmdIPCLocksOverrun = MibScalar((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 9, 4, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdIPCLocksOverrun.setStatus('mandatory')
xmdIPCLocksRecstot = MibScalar((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 9, 4, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdIPCLocksRecstot.setStatus('mandatory')
xmdIPCLocksRecsync = MibScalar((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 9, 4, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdIPCLocksRecsync.setStatus('mandatory')
xmdFS = MibTable((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 10), )
if mibBuilder.loadTexts: xmdFS.setStatus('mandatory')
xmdFSEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 10, 1), )
if mibBuilder.loadTexts: xmdFSEntry.setStatus('mandatory')
xmdFSIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 10, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdFSIndex.setStatus('mandatory')
xmdFSInstName = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 10, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdFSInstName.setStatus('mandatory')
xmdFSFree = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 10, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdFSFree.setStatus('mandatory')
xmdFSPpsize = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 10, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdFSPpsize.setStatus('mandatory')
xmdFSLvcount = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 10, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdFSLvcount.setStatus('mandatory')
xmdFSPvcount = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 10, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdFSPvcount.setStatus('mandatory')
xmdFSIget = MibScalar((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 10, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdFSIget.setStatus('mandatory')
xmdFSNamei = MibScalar((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 10, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdFSNamei.setStatus('mandatory')
xmdFSDirblk = MibScalar((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 10, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdFSDirblk.setStatus('mandatory')
xmdIP = MibIdentifier((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 11))
xmdIPRcvtotal = MibScalar((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 11, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdIPRcvtotal.setStatus('mandatory')
xmdIPRcvfrag = MibScalar((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 11, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdIPRcvfrag.setStatus('mandatory')
xmdIPForward = MibScalar((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 11, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdIPForward.setStatus('mandatory')
xmdIPRcvdgrm = MibScalar((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 11, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdIPRcvdgrm.setStatus('mandatory')
xmdIPSnddgrm = MibScalar((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 11, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdIPSnddgrm.setStatus('mandatory')
xmdIPReasmok = MibScalar((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 11, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdIPReasmok.setStatus('mandatory')
xmdIPFragok = MibScalar((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 11, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdIPFragok.setStatus('mandatory')
xmdIPNetIF = MibTable((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 11, 10), )
if mibBuilder.loadTexts: xmdIPNetIF.setStatus('mandatory')
xmdIPNetIFEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 11, 10, 1), )
if mibBuilder.loadTexts: xmdIPNetIFEntry.setStatus('mandatory')
xmdIPNetIFIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 11, 10, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdIPNetIFIndex.setStatus('mandatory')
xmdIPNetIFInstName = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 11, 10, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdIPNetIFInstName.setStatus('mandatory')
xmdIPNetIFIpacket = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 11, 10, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdIPNetIFIpacket.setStatus('mandatory')
xmdIPNetIFIoctet = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 11, 10, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdIPNetIFIoctet.setStatus('mandatory')
xmdIPNetIFIoctetkb = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 11, 10, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdIPNetIFIoctetkb.setStatus('mandatory')
xmdIPNetIFIerror = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 11, 10, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdIPNetIFIerror.setStatus('mandatory')
xmdIPNetIFImcastpkt = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 11, 10, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdIPNetIFImcastpkt.setStatus('mandatory')
xmdIPNetIFIqdrop = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 11, 10, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdIPNetIFIqdrop.setStatus('mandatory')
xmdIPNetIFIunknproto = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 11, 10, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdIPNetIFIunknproto.setStatus('mandatory')
xmdIPNetIFOpacket = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 11, 10, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdIPNetIFOpacket.setStatus('mandatory')
xmdIPNetIFOoctet = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 11, 10, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdIPNetIFOoctet.setStatus('mandatory')
xmdIPNetIFOoctetkb = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 11, 10, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdIPNetIFOoctetkb.setStatus('mandatory')
xmdIPNetIFOerror = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 11, 10, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdIPNetIFOerror.setStatus('mandatory')
xmdIPNetIFOmcastpkt = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 11, 10, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdIPNetIFOmcastpkt.setStatus('mandatory')
xmdIPNetIFOquelen = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 11, 10, 1, 15), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdIPNetIFOquelen.setStatus('mandatory')
xmdIPNetIFOquemax = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 11, 10, 1, 16), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdIPNetIFOquemax.setStatus('mandatory')
xmdIPNetIFOdrops = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 11, 10, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdIPNetIFOdrops.setStatus('mandatory')
xmdIPRouting = MibIdentifier((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 11, 11))
xmdIPRoutingBadred = MibScalar((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 11, 11, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdIPRoutingBadred.setStatus('mandatory')
xmdIPRoutingDynamic = MibScalar((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 11, 11, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdIPRoutingDynamic.setStatus('mandatory')
xmdIPRoutingNewgate = MibScalar((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 11, 11, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdIPRoutingNewgate.setStatus('mandatory')
xmdIPRoutingUnreach = MibScalar((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 11, 11, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdIPRoutingUnreach.setStatus('mandatory')
xmdIPRoutingWildc = MibScalar((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 11, 11, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdIPRoutingWildc.setStatus('mandatory')
xmdTCP = MibIdentifier((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 12))
xmdTCPConattmpt = MibScalar((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 12, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdTCPConattmpt.setStatus('mandatory')
xmdTCPAccept = MibScalar((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 12, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdTCPAccept.setStatus('mandatory')
xmdTCPConnects = MibScalar((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 12, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdTCPConnects.setStatus('mandatory')
xmdTCPClose = MibScalar((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 12, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdTCPClose.setStatus('mandatory')
xmdTCPSndtotal = MibScalar((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 12, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdTCPSndtotal.setStatus('mandatory')
xmdTCPSndpack = MibScalar((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 12, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdTCPSndpack.setStatus('mandatory')
xmdTCPSndbyte = MibScalar((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 12, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdTCPSndbyte.setStatus('mandatory')
xmdTCPSndkbyte = MibScalar((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 12, 44), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdTCPSndkbyte.setStatus('mandatory')
xmdTCPSndrexmitpack = MibScalar((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 12, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdTCPSndrexmitpack.setStatus('mandatory')
xmdTCPSndrexmitbyte = MibScalar((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 12, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdTCPSndrexmitbyte.setStatus('mandatory')
xmdTCPSndack = MibScalar((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 12, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdTCPSndack.setStatus('mandatory')
xmdTCPSndprobe = MibScalar((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 12, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdTCPSndprobe.setStatus('mandatory')
xmdTCPSndurg = MibScalar((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 12, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdTCPSndurg.setStatus('mandatory')
xmdTCPSndwinup = MibScalar((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 12, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdTCPSndwinup.setStatus('mandatory')
xmdTCPSndctrl = MibScalar((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 12, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdTCPSndctrl.setStatus('mandatory')
xmdTCPRcvtotal = MibScalar((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 12, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdTCPRcvtotal.setStatus('mandatory')
xmdTCPRcvpack = MibScalar((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 12, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdTCPRcvpack.setStatus('mandatory')
xmdTCPRcvbyte = MibScalar((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 12, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdTCPRcvbyte.setStatus('mandatory')
xmdTCPRcvkbyte = MibScalar((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 12, 45), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdTCPRcvkbyte.setStatus('mandatory')
xmdTCPRcvduppack = MibScalar((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 12, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdTCPRcvduppack.setStatus('mandatory')
xmdTCPRcvdupbyte = MibScalar((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 12, 19), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdTCPRcvdupbyte.setStatus('mandatory')
xmdTCPRcvpartduppack = MibScalar((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 12, 20), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdTCPRcvpartduppack.setStatus('mandatory')
xmdTCPRcvpartdupbyte = MibScalar((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 12, 21), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdTCPRcvpartdupbyte.setStatus('mandatory')
xmdTCPRcvoopack = MibScalar((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 12, 22), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdTCPRcvoopack.setStatus('mandatory')
xmdTCPRcvoobyte = MibScalar((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 12, 23), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdTCPRcvoobyte.setStatus('mandatory')
xmdTCPRcvaftwinpack = MibScalar((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 12, 24), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdTCPRcvaftwinpack.setStatus('mandatory')
xmdTCPRcvaftwinbyte = MibScalar((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 12, 25), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdTCPRcvaftwinbyte.setStatus('mandatory')
xmdTCPRcvwinprobe = MibScalar((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 12, 26), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdTCPRcvwinprobe.setStatus('mandatory')
xmdTCPRcvdupack = MibScalar((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 12, 27), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdTCPRcvdupack.setStatus('mandatory')
xmdTCPRcvackpack = MibScalar((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 12, 28), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdTCPRcvackpack.setStatus('mandatory')
xmdTCPRcvackbyte = MibScalar((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 12, 29), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdTCPRcvackbyte.setStatus('mandatory')
xmdTCPRcvwinup = MibScalar((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 12, 30), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdTCPRcvwinup.setStatus('mandatory')
xmdUDP = MibIdentifier((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 13))
xmdUDPRcvdgrm = MibScalar((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 13, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdUDPRcvdgrm.setStatus('mandatory')
xmdUDPNoport = MibScalar((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 13, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdUDPNoport.setStatus('mandatory')
xmdUDPFullsock = MibScalar((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 13, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdUDPFullsock.setStatus('mandatory')
xmdUDPSnddgrm = MibScalar((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 13, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdUDPSnddgrm.setStatus('mandatory')
xmdUDPNoportbc = MibScalar((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 13, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdUDPNoportbc.setStatus('mandatory')
xmdUDPHdrops = MibScalar((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 13, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdUDPHdrops.setStatus('mandatory')
xmdUDPBadsum = MibScalar((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 13, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdUDPBadsum.setStatus('mandatory')
xmdUDPBadlen = MibScalar((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 13, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdUDPBadlen.setStatus('mandatory')
xmdUDPCachmiss = MibScalar((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 13, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdUDPCachmiss.setStatus('mandatory')
xmdRTime = MibIdentifier((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 14))
xmdRTimeLAN = MibIdentifier((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 14, 1))
xmdRTimeARM = MibIdentifier((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 14, 2))
xmdRPC = MibIdentifier((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 16))
xmdRPCClntCo = MibIdentifier((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 16, 1))
xmdRPCClntCoCalls = MibScalar((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 16, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdRPCClntCoCalls.setStatus('mandatory')
xmdRPCClntCoBadcalls = MibScalar((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 16, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdRPCClntCoBadcalls.setStatus('mandatory')
xmdRPCClntCoBadxids = MibScalar((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 16, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdRPCClntCoBadxids.setStatus('mandatory')
xmdRPCClntCoTimeouts = MibScalar((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 16, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdRPCClntCoTimeouts.setStatus('mandatory')
xmdRPCClntCoNewcreds = MibScalar((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 16, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdRPCClntCoNewcreds.setStatus('mandatory')
xmdRPCClntCoBadverfs = MibScalar((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 16, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdRPCClntCoBadverfs.setStatus('mandatory')
xmdRPCClntCoTimers = MibScalar((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 16, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdRPCClntCoTimers.setStatus('mandatory')
xmdRPCClntCoCantconn = MibScalar((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 16, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdRPCClntCoCantconn.setStatus('mandatory')
xmdRPCClntCoNomem = MibScalar((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 16, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdRPCClntCoNomem.setStatus('mandatory')
xmdRPCClntCoInterrupts = MibScalar((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 16, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdRPCClntCoInterrupts.setStatus('mandatory')
xmdRPCClntCl = MibIdentifier((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 16, 2))
xmdRPCClntClCalls = MibScalar((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 16, 2, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdRPCClntClCalls.setStatus('mandatory')
xmdRPCClntClBadcalls = MibScalar((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 16, 2, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdRPCClntClBadcalls.setStatus('mandatory')
xmdRPCClntClRetrans = MibScalar((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 16, 2, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdRPCClntClRetrans.setStatus('mandatory')
xmdRPCClntClBadxids = MibScalar((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 16, 2, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdRPCClntClBadxids.setStatus('mandatory')
xmdRPCClntClTimeouts = MibScalar((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 16, 2, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdRPCClntClTimeouts.setStatus('mandatory')
xmdRPCClntClNewcreds = MibScalar((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 16, 2, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdRPCClntClNewcreds.setStatus('mandatory')
xmdRPCClntClBadverfs = MibScalar((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 16, 2, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdRPCClntClBadverfs.setStatus('mandatory')
xmdRPCClntClTimers = MibScalar((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 16, 2, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdRPCClntClTimers.setStatus('mandatory')
xmdRPCClntClNomem = MibScalar((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 16, 2, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdRPCClntClNomem.setStatus('mandatory')
xmdRPCClntClCantsend = MibScalar((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 16, 2, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdRPCClntClCantsend.setStatus('mandatory')
xmdRPCSvrCo = MibIdentifier((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 16, 3))
xmdRPCSvrCoCalls = MibScalar((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 16, 3, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdRPCSvrCoCalls.setStatus('mandatory')
xmdRPCSvrCoBadcalls = MibScalar((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 16, 3, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdRPCSvrCoBadcalls.setStatus('mandatory')
xmdRPCSvrCoNullrecv = MibScalar((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 16, 3, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdRPCSvrCoNullrecv.setStatus('mandatory')
xmdRPCSvrCoBadlen = MibScalar((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 16, 3, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdRPCSvrCoBadlen.setStatus('mandatory')
xmdRPCSvrCoXdrcall = MibScalar((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 16, 3, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdRPCSvrCoXdrcall.setStatus('mandatory')
xmdRPCSvrCoDupchecks = MibScalar((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 16, 3, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdRPCSvrCoDupchecks.setStatus('mandatory')
xmdRPCSvrCoDupreqs = MibScalar((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 16, 3, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdRPCSvrCoDupreqs.setStatus('mandatory')
xmdRPCSvrCl = MibIdentifier((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 16, 4))
xmdRPCSvrClCalls = MibScalar((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 16, 4, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdRPCSvrClCalls.setStatus('mandatory')
xmdRPCSvrClBadcalls = MibScalar((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 16, 4, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdRPCSvrClBadcalls.setStatus('mandatory')
xmdRPCSvrClNullrecv = MibScalar((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 16, 4, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdRPCSvrClNullrecv.setStatus('mandatory')
xmdRPCSvrClBadlen = MibScalar((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 16, 4, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdRPCSvrClBadlen.setStatus('mandatory')
xmdRPCSvrClXdrcall = MibScalar((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 16, 4, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdRPCSvrClXdrcall.setStatus('mandatory')
xmdRPCSvrClDupchecks = MibScalar((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 16, 4, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdRPCSvrClDupchecks.setStatus('mandatory')
xmdRPCSvrClDupreqs = MibScalar((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 16, 4, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdRPCSvrClDupreqs.setStatus('mandatory')
xmdNFS = MibIdentifier((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 17))
xmdNFSClient = MibIdentifier((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 17, 1))
xmdNFSClientCalls = MibScalar((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 17, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdNFSClientCalls.setStatus('mandatory')
xmdNFSClientBadcalls = MibScalar((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 17, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdNFSClientBadcalls.setStatus('mandatory')
xmdNFSServer = MibIdentifier((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 17, 2))
xmdNFSServerCalls = MibScalar((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 17, 2, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdNFSServerCalls.setStatus('mandatory')
xmdNFSServerBadcalls = MibScalar((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 17, 2, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdNFSServerBadcalls.setStatus('mandatory')
xmdNFSV2Clnt = MibIdentifier((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 17, 3))
xmdNFSV2ClntNull = MibScalar((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 17, 3, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdNFSV2ClntNull.setStatus('mandatory')
xmdNFSV2ClntGetattr = MibScalar((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 17, 3, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdNFSV2ClntGetattr.setStatus('mandatory')
xmdNFSV2ClntSetattr = MibScalar((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 17, 3, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdNFSV2ClntSetattr.setStatus('mandatory')
xmdNFSV2ClntRoot = MibScalar((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 17, 3, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdNFSV2ClntRoot.setStatus('mandatory')
xmdNFSV2ClntLookup = MibScalar((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 17, 3, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdNFSV2ClntLookup.setStatus('mandatory')
xmdNFSV2ClntReadlink = MibScalar((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 17, 3, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdNFSV2ClntReadlink.setStatus('mandatory')
xmdNFSV2ClntRead = MibScalar((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 17, 3, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdNFSV2ClntRead.setStatus('mandatory')
xmdNFSV2ClntWrcache = MibScalar((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 17, 3, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdNFSV2ClntWrcache.setStatus('mandatory')
xmdNFSV2ClntWrite = MibScalar((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 17, 3, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdNFSV2ClntWrite.setStatus('mandatory')
xmdNFSV2ClntCreate = MibScalar((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 17, 3, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdNFSV2ClntCreate.setStatus('mandatory')
xmdNFSV2ClntRemove = MibScalar((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 17, 3, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdNFSV2ClntRemove.setStatus('mandatory')
xmdNFSV2ClntRename = MibScalar((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 17, 3, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdNFSV2ClntRename.setStatus('mandatory')
xmdNFSV2ClntLink = MibScalar((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 17, 3, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdNFSV2ClntLink.setStatus('mandatory')
xmdNFSV2ClntSymlink = MibScalar((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 17, 3, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdNFSV2ClntSymlink.setStatus('mandatory')
xmdNFSV2ClntMkdir = MibScalar((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 17, 3, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdNFSV2ClntMkdir.setStatus('mandatory')
xmdNFSV2ClntRmdir = MibScalar((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 17, 3, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdNFSV2ClntRmdir.setStatus('mandatory')
xmdNFSV2ClntReaddir = MibScalar((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 17, 3, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdNFSV2ClntReaddir.setStatus('mandatory')
xmdNFSV2ClntStatfs = MibScalar((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 17, 3, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdNFSV2ClntStatfs.setStatus('mandatory')
xmdNFSV2Svr = MibIdentifier((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 17, 4))
xmdNFSV2SvrNull = MibScalar((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 17, 4, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdNFSV2SvrNull.setStatus('mandatory')
xmdNFSV2SvrGetattr = MibScalar((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 17, 4, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdNFSV2SvrGetattr.setStatus('mandatory')
xmdNFSV2SvrSetattr = MibScalar((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 17, 4, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdNFSV2SvrSetattr.setStatus('mandatory')
xmdNFSV2SvrRoot = MibScalar((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 17, 4, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdNFSV2SvrRoot.setStatus('mandatory')
xmdNFSV2SvrLookup = MibScalar((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 17, 4, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdNFSV2SvrLookup.setStatus('mandatory')
xmdNFSV2SvrReadlink = MibScalar((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 17, 4, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdNFSV2SvrReadlink.setStatus('mandatory')
xmdNFSV2SvrRead = MibScalar((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 17, 4, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdNFSV2SvrRead.setStatus('mandatory')
xmdNFSV2SvrWrcache = MibScalar((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 17, 4, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdNFSV2SvrWrcache.setStatus('mandatory')
xmdNFSV2SvrWrite = MibScalar((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 17, 4, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdNFSV2SvrWrite.setStatus('mandatory')
xmdNFSV2SvrCreate = MibScalar((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 17, 4, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdNFSV2SvrCreate.setStatus('mandatory')
xmdNFSV2SvrRemove = MibScalar((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 17, 4, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdNFSV2SvrRemove.setStatus('mandatory')
xmdNFSV2SvrRename = MibScalar((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 17, 4, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdNFSV2SvrRename.setStatus('mandatory')
xmdNFSV2SvrLink = MibScalar((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 17, 4, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdNFSV2SvrLink.setStatus('mandatory')
xmdNFSV2SvrSymlink = MibScalar((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 17, 4, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdNFSV2SvrSymlink.setStatus('mandatory')
xmdNFSV2SvrMkdir = MibScalar((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 17, 4, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdNFSV2SvrMkdir.setStatus('mandatory')
xmdNFSV2SvrRmdir = MibScalar((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 17, 4, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdNFSV2SvrRmdir.setStatus('mandatory')
xmdNFSV2SvrReaddir = MibScalar((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 17, 4, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdNFSV2SvrReaddir.setStatus('mandatory')
xmdNFSV2SvrStatfs = MibScalar((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 17, 4, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdNFSV2SvrStatfs.setStatus('mandatory')
xmdNFSV3Clnt = MibIdentifier((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 17, 5))
xmdNFSV3ClntNull = MibScalar((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 17, 5, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdNFSV3ClntNull.setStatus('mandatory')
xmdNFSV3ClntGetattr = MibScalar((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 17, 5, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdNFSV3ClntGetattr.setStatus('mandatory')
xmdNFSV3ClntSetattr = MibScalar((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 17, 5, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdNFSV3ClntSetattr.setStatus('mandatory')
xmdNFSV3ClntLookup = MibScalar((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 17, 5, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdNFSV3ClntLookup.setStatus('mandatory')
xmdNFSV3ClntAccess = MibScalar((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 17, 5, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdNFSV3ClntAccess.setStatus('mandatory')
xmdNFSV3ClntReadlink = MibScalar((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 17, 5, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdNFSV3ClntReadlink.setStatus('mandatory')
xmdNFSV3ClntRead = MibScalar((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 17, 5, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdNFSV3ClntRead.setStatus('mandatory')
xmdNFSV3ClntWrite = MibScalar((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 17, 5, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdNFSV3ClntWrite.setStatus('mandatory')
xmdNFSV3ClntCreate = MibScalar((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 17, 5, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdNFSV3ClntCreate.setStatus('mandatory')
xmdNFSV3ClntMkdir = MibScalar((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 17, 5, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdNFSV3ClntMkdir.setStatus('mandatory')
xmdNFSV3ClntSymlink = MibScalar((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 17, 5, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdNFSV3ClntSymlink.setStatus('mandatory')
xmdNFSV3ClntMknod = MibScalar((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 17, 5, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdNFSV3ClntMknod.setStatus('mandatory')
xmdNFSV3ClntRemove = MibScalar((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 17, 5, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdNFSV3ClntRemove.setStatus('mandatory')
xmdNFSV3ClntRmdir = MibScalar((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 17, 5, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdNFSV3ClntRmdir.setStatus('mandatory')
xmdNFSV3ClntRename = MibScalar((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 17, 5, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdNFSV3ClntRename.setStatus('mandatory')
xmdNFSV3ClntLink = MibScalar((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 17, 5, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdNFSV3ClntLink.setStatus('mandatory')
xmdNFSV3ClntReaddir = MibScalar((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 17, 5, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdNFSV3ClntReaddir.setStatus('mandatory')
xmdNFSV3ClntReaddir_plus = MibScalar((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 17, 5, 18), Counter32()).setLabel("xmdNFSV3ClntReaddir-plus").setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdNFSV3ClntReaddir_plus.setStatus('mandatory')
xmdNFSV3ClntFsstat = MibScalar((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 17, 5, 19), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdNFSV3ClntFsstat.setStatus('mandatory')
xmdNFSV3ClntFsinfo = MibScalar((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 17, 5, 20), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdNFSV3ClntFsinfo.setStatus('mandatory')
xmdNFSV3ClntPathconf = MibScalar((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 17, 5, 21), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdNFSV3ClntPathconf.setStatus('mandatory')
xmdNFSV3ClntCommit = MibScalar((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 17, 5, 22), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdNFSV3ClntCommit.setStatus('mandatory')
xmdNFSV3Svr = MibIdentifier((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 17, 6))
xmdNFSV3SvrNull = MibScalar((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 17, 6, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdNFSV3SvrNull.setStatus('mandatory')
xmdNFSV3SvrGetattr = MibScalar((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 17, 6, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdNFSV3SvrGetattr.setStatus('mandatory')
xmdNFSV3SvrSetattr = MibScalar((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 17, 6, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdNFSV3SvrSetattr.setStatus('mandatory')
xmdNFSV3SvrLookup = MibScalar((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 17, 6, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdNFSV3SvrLookup.setStatus('mandatory')
xmdNFSV3SvrAccess = MibScalar((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 17, 6, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdNFSV3SvrAccess.setStatus('mandatory')
xmdNFSV3SvrReadlink = MibScalar((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 17, 6, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdNFSV3SvrReadlink.setStatus('mandatory')
xmdNFSV3SvrRead = MibScalar((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 17, 6, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdNFSV3SvrRead.setStatus('mandatory')
xmdNFSV3SvrWrite = MibScalar((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 17, 6, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdNFSV3SvrWrite.setStatus('mandatory')
xmdNFSV3SvrCreate = MibScalar((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 17, 6, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdNFSV3SvrCreate.setStatus('mandatory')
xmdNFSV3SvrMkdir = MibScalar((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 17, 6, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdNFSV3SvrMkdir.setStatus('mandatory')
xmdNFSV3SvrSymlink = MibScalar((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 17, 6, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdNFSV3SvrSymlink.setStatus('mandatory')
xmdNFSV3SvrMknod = MibScalar((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 17, 6, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdNFSV3SvrMknod.setStatus('mandatory')
xmdNFSV3SvrRemove = MibScalar((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 17, 6, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdNFSV3SvrRemove.setStatus('mandatory')
xmdNFSV3SvrRmdir = MibScalar((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 17, 6, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdNFSV3SvrRmdir.setStatus('mandatory')
xmdNFSV3SvrRename = MibScalar((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 17, 6, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdNFSV3SvrRename.setStatus('mandatory')
xmdNFSV3SvrLink = MibScalar((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 17, 6, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdNFSV3SvrLink.setStatus('mandatory')
xmdNFSV3SvrReaddir = MibScalar((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 17, 6, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdNFSV3SvrReaddir.setStatus('mandatory')
xmdNFSV3SvrReaddir_plus = MibScalar((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 17, 6, 18), Counter32()).setLabel("xmdNFSV3SvrReaddir-plus").setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdNFSV3SvrReaddir_plus.setStatus('mandatory')
xmdNFSV3SvrFsstat = MibScalar((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 17, 6, 19), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdNFSV3SvrFsstat.setStatus('mandatory')
xmdNFSV3SvrFsinfo = MibScalar((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 17, 6, 20), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdNFSV3SvrFsinfo.setStatus('mandatory')
xmdNFSV3SvrPathconf = MibScalar((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 17, 6, 21), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdNFSV3SvrPathconf.setStatus('mandatory')
xmdNFSV3SvrCommit = MibScalar((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 17, 6, 22), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdNFSV3SvrCommit.setStatus('mandatory')
xmdDCE = MibIdentifier((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 28))
xmdSpmi = MibIdentifier((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 98))
xmdSpmiUsers = MibScalar((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 98, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdSpmiUsers.setStatus('mandatory')
xmdSpmiStatsets = MibScalar((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 98, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdSpmiStatsets.setStatus('mandatory')
xmdSpmiDdscount = MibScalar((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 98, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdSpmiDdscount.setStatus('mandatory')
xmdSpmiConsumers = MibScalar((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 98, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdSpmiConsumers.setStatus('mandatory')
xmdSpmiComused = MibScalar((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 98, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdSpmiComused.setStatus('mandatory')
xmdSpmiHotsets = MibScalar((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 98, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xmdSpmiHotsets.setStatus('mandatory')
xmdDDS = MibIdentifier((1, 3, 6, 1, 4, 1, 2, 3, 1, 2, 2, 2, 1, 99))
mibBuilder.exportSymbols("XMSERVD-PERF-MIB", xmdIPNetIFIndex=xmdIPNetIFIndex, xmdMemRealSize=xmdMemRealSize, xmdProcSwpocc=xmdProcSwpocc, xmdPagSpInstName=xmdPagSpInstName, xmdSysIOBwrite=xmdSysIOBwrite, aix370=aix370, xmdNFSV2ClntRename=xmdNFSV2ClntRename, xmdRPCClntClRetrans=xmdRPCClntClRetrans, xmdRPCClntClNomem=xmdRPCClntClNomem, xmdMemVirtPfavail=xmdMemVirtPfavail, xmdProcKexit=xmdProcKexit, xmdNFSClientBadcalls=xmdNFSClientBadcalls, xmdMemRealNumfrb=xmdMemRealNumfrb, xmdNFSV2ClntRead=xmdNFSV2ClntRead, xmdMemVirtPgspgout=xmdMemVirtPgspgout, xmdUDPNoport=xmdUDPNoport, xmdRPCSvrCoCalls=xmdRPCSvrCoCalls, xmdRPCSvrClDupreqs=xmdRPCSvrClDupreqs, xmdRPCSvrCoNullrecv=xmdRPCSvrCoNullrecv, xmdPagSpEfree=xmdPagSpEfree, xmdDiskInstName=xmdDiskInstName, xmdIPRoutingUnreach=xmdIPRoutingUnreach, xmdLANIndex=xmdLANIndex, mvs370=mvs370, xmdNFSV2SvrLookup=xmdNFSV2SvrLookup, xmdRPCSvrClDupchecks=xmdRPCSvrClDupchecks, xmdTCP=xmdTCP, xmdIPNetIFOpacket=xmdIPNetIFOpacket, xmdNFSV3SvrSymlink=xmdNFSV3SvrSymlink, xmdMemVirtLockexct=xmdMemVirtLockexct, xmdMemVirtFreewt=xmdMemVirtFreewt, xmdIPRoutingNewgate=xmdIPRoutingNewgate, xmdRPCClntCoTimeouts=xmdRPCClntCoTimeouts, xmdTCPClose=xmdTCPClose, xmdPagSpEtotalfree=xmdPagSpEtotalfree, xmdCPUGlwticks=xmdCPUGlwticks, xmdSpmi=xmdSpmi, xmdIPSnddgrm=xmdIPSnddgrm, xmdLANXmiterrors=xmdLANXmiterrors, xmdIPCSemSemmaxe=xmdIPCSemSemmaxe, xmdFSEntry=xmdFSEntry, xmdNFSV3SvrRename=xmdNFSV3SvrRename, xmdIPCLocksRecstot=xmdIPCLocksRecstot, experimental=experimental, xmdNFSV2SvrSetattr=xmdNFSV2SvrSetattr, xmdNFSV2SvrWrite=xmdNFSV2SvrWrite, os400=os400, xmdProcCodemem=xmdProcCodemem, xmdTCPSndpack=xmdTCPSndpack, xmdMemRealEnoncomp=xmdMemRealEnoncomp, xmdTCPSndack=xmdTCPSndack, xmdMemVirtEncomrepag=xmdMemVirtEncomrepag, xmdNFSV3SvrRead=xmdNFSV3SvrRead, xmdMemVirt=xmdMemVirt, xmdMemRealNumlocal=xmdMemRealNumlocal, xmdMemVirtEcomrepl=xmdMemVirtEcomrepl, xmdDCE=xmdDCE, xmd=xmd, xmdPagSpSize=xmdPagSpSize, xmdNFSV2ClntGetattr=xmdNFSV2ClntGetattr, xmdPagSpPgspgin=xmdPagSpPgspgin, xmdNFSV3ClntRmdir=xmdNFSV3ClntRmdir, xmdNFSV3ClntRemove=xmdNFSV3ClntRemove, vm=vm, xmdProcMinflt=xmdProcMinflt, xmdNFSV2SvrGetattr=xmdNFSV2SvrGetattr, xmdNFSV3SvrReaddir=xmdNFSV3SvrReaddir, os2=os2, xmdCPUGlwait=xmdCPUGlwait, xmdPagSpEtotalused=xmdPagSpEtotalused, xmdRPCClntClBadxids=xmdRPCClntClBadxids, xmdFSInstName=xmdFSInstName, xmdTCPRcvpartdupbyte=xmdTCPRcvpartdupbyte, xmdNFSV3ClntSymlink=xmdNFSV3ClntSymlink, xmdTCPSndrexmitbyte=xmdTCPSndrexmitbyte, xmdLANXmitdrops=xmdLANXmitdrops, xmdNFSServerBadcalls=xmdNFSServerBadcalls, xmdNFSV3SvrReaddir_plus=xmdNFSV3SvrReaddir_plus, xmdNFSV3ClntRead=xmdNFSV3ClntRead, xmdSysIOTtyraw=xmdSysIOTtyraw, xmdNFSV2ClntLookup=xmdNFSV2ClntLookup, xmdIPRcvfrag=xmdIPRcvfrag, xmdPagSpTotalfree=xmdPagSpTotalfree, xmdTCPRcvwinup=xmdTCPRcvwinup, xmdNFSV2SvrRemove=xmdNFSV2SvrRemove, xmdNFSServer=xmdNFSServer, xmdLANKbytesin=xmdLANKbytesin, xmdMemVirtMinpout=xmdMemVirtMinpout, xmdIPCLocksRecsused=xmdIPCLocksRecsused, xmdMemVirtPgrclm=xmdMemVirtPgrclm, xmdSysIOPhread=xmdSysIOPhread, xmdTCPSndbyte=xmdTCPSndbyte, xmdIPCLocks=xmdIPCLocks, xmdLANRecvdrops=xmdLANRecvdrops, xmdTCPConattmpt=xmdTCPConattmpt, xmdFSDirblk=xmdFSDirblk, xmdSysIO=xmdSysIO, xmdIPNetIFIoctet=xmdIPNetIFIoctet, xmdMemKmemInuse=xmdMemKmemInuse, xmdMemRealPsegpin=xmdMemRealPsegpin, xmdMemVirtMinperm=xmdMemVirtMinperm, xmdMemVirtBacktrk=xmdMemVirtBacktrk, xmdDiskEntry=xmdDiskEntry, xmdMemRealClsegpin=xmdMemRealClsegpin, xmdSysIOBread=xmdSysIOBread, xmdNFSV2ClntReadlink=xmdNFSV2ClntReadlink, xmdLANKbytesout=xmdLANKbytesout, xmdProcInstName=xmdProcInstName, xmdUDPSnddgrm=xmdUDPSnddgrm, xmdNFSV3ClntGetattr=xmdNFSV3ClntGetattr, xmdLANBytesout=xmdLANBytesout, xmdMem=xmdMem, xmdMemKmemCalls=xmdMemKmemCalls, xmdRPCSvrCo=xmdRPCSvrCo, xmdNFSV2ClntRemove=xmdNFSV2ClntRemove, xmdNFSV3ClntRename=xmdNFSV3ClntRename, risc6000clsmuxpd=risc6000clsmuxpd, xmdNFSV2ClntNull=xmdNFSV2ClntNull, xmdTCPRcvdupbyte=xmdTCPRcvdupbyte, xmdMemVirtZerofill=xmdMemVirtZerofill, xmdIPNetIFEntry=xmdIPNetIFEntry, xmdNFSV3SvrRemove=xmdNFSV3SvrRemove, xmdFSLvcount=xmdFSLvcount, xmdSpmiHotsets=xmdSpmiHotsets, xmdSyscallTotal=xmdSyscallTotal, xmdIPNetIFIunknproto=xmdIPNetIFIunknproto, xmdRPCSvrCoBadcalls=xmdRPCSvrCoBadcalls, xmdRPCClntCo=xmdRPCClntCo, xmdMemVirtPendiowt=xmdMemVirtPendiowt, xmdSpmiUsers=xmdSpmiUsers, xmdMemKmem=xmdMemKmem, xmdMemVirtSio=xmdMemVirtSio, xmdProcCpums=xmdProcCpums, xmdNFSV2SvrNull=xmdNFSV2SvrNull, ps2PS2=ps2PS2, xmdRPCSvrCoBadlen=xmdRPCSvrCoBadlen, xmdMemRealClseguse=xmdMemRealClseguse, xmdRPCClntCoBadverfs=xmdRPCClntCoBadverfs, xmdRPCSvrCoXdrcall=xmdRPCSvrCoXdrcall, xmdNFSV3ClntMknod=xmdNFSV3ClntMknod, xmdMemRealEfree=xmdMemRealEfree, xmdSpmiConsumers=xmdSpmiConsumers, xmdIPCSemSemmaxv=xmdIPCSemSemmaxv, xmdTCPConnects=xmdTCPConnects, xmdUDPBadsum=xmdUDPBadsum, xmdRPCClntClTimeouts=xmdRPCClntClTimeouts, xmdLANFramesin=xmdLANFramesin, xmdNFSV3SvrNull=xmdNFSV3SvrNull, xmdFSPvcount=xmdFSPvcount, xmdIPRoutingBadred=xmdIPRoutingBadred, xmdNFSV3ClntAccess=xmdNFSV3ClntAccess, xmdNFSClient=xmdNFSClient, mvs=mvs, xmdRPCClntCoNewcreds=xmdRPCClntCoNewcreds, xmdMemVirtMinfree=xmdMemVirtMinfree, xmdNFSV3SvrWrite=xmdNFSV3SvrWrite, xmdTCPSndkbyte=xmdTCPSndkbyte, xmdNFSV2SvrRoot=xmdNFSV2SvrRoot, xmdTCPRcvtotal=xmdTCPRcvtotal, xmdUDPFullsock=xmdUDPFullsock, xmdNFSV2ClntRoot=xmdNFSV2ClntRoot, xmdRPCClntCoNomem=xmdRPCClntCoNomem, xmdRTime=xmdRTime, xmdIPFragok=xmdIPFragok, xmdTCPRcvaftwinbyte=xmdTCPRcvaftwinbyte, risc6000perf=risc6000perf, xmdRPCClntClCalls=xmdRPCClntClCalls, xmdMemVirtCompends=xmdMemVirtCompends, xmdProcNsignals=xmdProcNsignals, aixRT=aixRT, xmdIPRouting=xmdIPRouting, directory=directory, xmdMemVirtPagexct=xmdMemVirtPagexct, xmdSysIOLbread=xmdSysIOLbread, xmdLANXmitque=xmdLANXmitque, xmdDDS=xmdDDS, xmdMemVirtNpskill=xmdMemVirtNpskill, xmdFSIget=xmdFSIget, risc6000agents=risc6000agents, xmdIPNetIFOquelen=xmdIPNetIFOquelen, xmdNFSV3ClntCreate=xmdNFSV3ClntCreate, xmdMemVirtExfill=xmdMemVirtExfill, xmdMemVirtSteal=xmdMemVirtSteal, xmdRPCSvrClCalls=xmdRPCSvrClCalls, xmdProcPagsp=xmdProcPagsp, xmdMemVirtNpswarn=xmdMemVirtNpswarn, xmdProcKerncpu=xmdProcKerncpu, xmdMemVirtNcomrepl=xmdMemVirtNcomrepl, private=private, xmdNFSV3ClntNull=xmdNFSV3ClntNull, xmdCPUGlkticks=xmdCPUGlkticks, xmdNFSV2SvrMkdir=xmdNFSV2SvrMkdir, xmdIPCSemMaxops=xmdIPCSemMaxops, xmdProcMajflt=xmdProcMajflt, xmdLANXmitovfl=xmdLANXmitovfl, xmdDiskIndex=xmdDiskIndex, xmdMemVirtIodone=xmdMemVirtIodone, xmdSysIOTtycan=xmdSysIOTtycan, xmdRPCClntClTimers=xmdRPCClntClTimers, xmdIPC=xmdIPC, xmdSysIOPhwrite=xmdSysIOPhwrite, xmdNFSV2ClntSetattr=xmdNFSV2ClntSetattr, xmdLAN=xmdLAN, ibm=ibm, xmdRPCSvrCoDupchecks=xmdRPCSvrCoDupchecks, xmdProcNvcsw=xmdProcNvcsw, xmdNFSV3SvrReadlink=xmdNFSV3SvrReadlink, xmdMemRealMaxclient=xmdMemRealMaxclient, xmdProcRunocc=xmdProcRunocc, xmdSysIOLbwrite=xmdSysIOLbwrite, xmdFSFree=xmdFSFree, xmdMemVirtPageout=xmdMemVirtPageout, xmdTCPRcvpartduppack=xmdTCPRcvpartduppack, xmdCPUGlkern=xmdCPUGlkern, xmdDiskRblk=xmdDiskRblk, xmdFSIndex=xmdFSIndex, xmdTCPRcvoobyte=xmdTCPRcvoobyte, xmdSyscallWrite=xmdSyscallWrite, xmdMemVirtPgspgin=xmdMemVirtPgspgin, xmdRPCSvrClBadlen=xmdRPCSvrClBadlen, xmdIPCSemMaxundo=xmdIPCSemMaxundo, risc6000gated=risc6000gated, xmdMemRealElocal=xmdMemRealElocal, xmdNFSV3SvrAccess=xmdNFSV3SvrAccess, xmdMemRealSysrepag=xmdMemRealSysrepag, xmdMemVirtExtendwt=xmdMemVirtExtendwt, xmdMemVirtTotpends=xmdMemVirtTotpends, xmdNFSV2ClntStatfs=xmdNFSV2ClntStatfs, xmdNFSV3ClntCommit=xmdNFSV3ClntCommit, xmdCPU=xmdCPU, xmdProcPswitch=xmdProcPswitch, xmdFSPpsize=xmdFSPpsize, xmdMemRealPdecay=xmdMemRealPdecay, xmdProcCpupct=xmdProcCpupct, xmdNFSServerCalls=xmdNFSServerCalls, xmdNFSV3SvrPathconf=xmdNFSV3SvrPathconf, xmdNFSV2SvrCreate=xmdNFSV2SvrCreate, xmdLANRecvintr=xmdLANRecvintr, xmdMemRealEpinned=xmdMemRealEpinned, xmdNFSV3SvrFsstat=xmdNFSV3SvrFsstat, xmdNFSV3ClntLink=xmdNFSV3ClntLink, xmdNFSV3ClntSetattr=xmdNFSV3ClntSetattr, xmdIPNetIFIpacket=xmdIPNetIFIpacket, xmdNFSV3SvrMknod=xmdNFSV3SvrMknod, xmdIPCShm=xmdIPCShm, xmdProcEntry=xmdProcEntry, xmdMemVirtComrepag=xmdMemVirtComrepag, xmdSpmiComused=xmdSpmiComused, xmdRPCClntCoCalls=xmdRPCClntCoCalls, xmdRPCClntClBadverfs=xmdRPCClntClBadverfs, risc6000sampleAgents=risc6000sampleAgents, xmdRPCClntCoTimers=xmdRPCClntCoTimers, xmdIPCShmShmmin=xmdIPCShmShmmin, xmdMemVirtScan=xmdMemVirtScan)
mibBuilder.exportSymbols("XMSERVD-PERF-MIB", xmdIPNetIFOoctetkb=xmdIPNetIFOoctetkb, xmdTCPAccept=xmdTCPAccept, xmdTCPRcvduppack=xmdTCPRcvduppack, xmdSyscallRead=xmdSyscallRead, xmdNFSV2ClntWrite=xmdNFSV2ClntWrite, xmdMemVirtPagein=xmdMemVirtPagein, xmdLANIbadpacks=xmdLANIbadpacks, xmdRPCSvrCl=xmdRPCSvrCl, xmdSysIOReadchkb=xmdSysIOReadchkb, xmdIPNetIFOoctet=xmdIPNetIFOoctet, xmdNFSV2SvrReaddir=xmdNFSV2SvrReaddir, xmdMemVirtNcompends=xmdMemVirtNcompends, xmdLANFramesout=xmdLANFramesout, xmdProcSwpque=xmdProcSwpque, xmdIPCMsgMsgmax=xmdIPCMsgMsgmax, xmdIPCLocksNumrecs=xmdIPCLocksNumrecs, xmdIPRcvdgrm=xmdIPRcvdgrm, xmdNFSV3SvrLink=xmdNFSV3SvrLink, xmdLANBytesin=xmdLANBytesin, xmdRPCSvrClXdrcall=xmdRPCSvrClXdrcall, xmdNFSV2SvrRead=xmdNFSV2SvrRead, xmdNFSV2ClntSymlink=xmdNFSV2ClntSymlink, xmdNFSV3ClntFsstat=xmdNFSV3ClntFsstat, xmdRPCClntCoCantconn=xmdRPCClntCoCantconn, xmdIPCSemMaxsems=xmdIPCSemMaxsems, ibmAgents=ibmAgents, xmdProc=xmdProc, xmdMemVirtNcomrepag=xmdMemVirtNcomrepag, xmdTCPRcvoopack=xmdTCPRcvoopack, xmdIPNetIFOquemax=xmdIPNetIFOquemax, xmdIPNetIFIerror=xmdIPNetIFIerror, aixRISC6000=aixRISC6000, xmdNFSV2SvrReadlink=xmdNFSV2SvrReadlink, xmdRPCSvrClBadcalls=xmdRPCSvrClBadcalls, xmdNFSV3SvrCreate=xmdNFSV3SvrCreate, xmdMemVirtMaxpgahead=xmdMemVirtMaxpgahead, xmdIPCMsgQuemax=xmdIPCMsgQuemax, risc6000ibm7318=risc6000ibm7318, xmdDisk=xmdDisk, xmdSyscallFork=xmdSyscallFork, xmdIPReasmok=xmdIPReasmok, xmdNFSV2SvrRename=xmdNFSV2SvrRename, xmdIPCShmShmmax=xmdIPCShmShmmax, xmdRPCClntCoBadcalls=xmdRPCClntCoBadcalls, xmdMemRealWsegpin=xmdMemRealWsegpin, xmdIPCLocksRecsync=xmdIPCLocksRecsync, xmdMemKmemInstName=xmdMemKmemInstName, xmdRPCSvrCoDupreqs=xmdRPCSvrCoDupreqs, xmdIPNetIFImcastpkt=xmdIPNetIFImcastpkt, xmdNFSV2SvrStatfs=xmdNFSV2SvrStatfs, xmdMemRealNoncomp=xmdMemRealNoncomp, xmdIPRoutingWildc=xmdIPRoutingWildc, xmdPagSp=xmdPagSp, xmdSpmiDdscount=xmdSpmiDdscount, xmdIPNetIFIoctetkb=xmdIPNetIFIoctetkb, xmdRPCClntCl=xmdRPCClntCl, xmdPagSpIocnt=xmdPagSpIocnt, xmdNFSV3SvrRmdir=xmdNFSV3SvrRmdir, xmdMemVirtMaxpout=xmdMemVirtMaxpout, xmdProcKsched=xmdProcKsched, xmdFSNamei=xmdFSNamei, xmdNFSV2Svr=xmdNFSV2Svr, xmdRPCClntCoBadxids=xmdRPCClntCoBadxids, xmdMemVirtMaxfree=xmdMemVirtMaxfree, xmdRPCClntClBadcalls=xmdRPCClntClBadcalls, xmdTCPRcvdupack=xmdTCPRcvdupack, xmdMemRealPseguse=xmdMemRealPseguse, vm370=vm370, xmdUDPHdrops=xmdUDPHdrops, xmdNFSV2SvrRmdir=xmdNFSV2SvrRmdir, xmdMemVirtMinpgahead=xmdMemVirtMinpgahead, xmdMemVirtCycle=xmdMemVirtCycle, xmdIPCSemSemids=xmdIPCSemSemids, xmdMemKmemFailures=xmdMemKmemFailures, xmdProcWorkmem=xmdProcWorkmem, xmdIPNetIFOerror=xmdIPNetIFOerror, xmdNFSV3SvrSetattr=xmdNFSV3SvrSetattr, xmdLANEntry=xmdLANEntry, xmdDiskWblk=xmdDiskWblk, xmdLANRcverrors=xmdLANRcverrors, xmdTCPSndprobe=xmdTCPSndprobe, xmdNFSV3SvrMkdir=xmdNFSV3SvrMkdir, xmdTCPRcvkbyte=xmdTCPRcvkbyte, xmdSysIOWritech=xmdSysIOWritech, xmdIPNetIFIqdrop=xmdIPNetIFIqdrop, xmdIPCMsgQueids=xmdIPCMsgQueids, xmdSysIOWritechkb=xmdSysIOWritechkb, xmdTCPSndurg=xmdTCPSndurg, xmdNFSV3SvrFsinfo=xmdNFSV3SvrFsinfo, xmdMemKmemIndex=xmdMemKmemIndex, xmdRPCClntCoInterrupts=xmdRPCClntCoInterrupts, risc6000snmpd=risc6000snmpd, xmdNFSV3ClntWrite=xmdNFSV3ClntWrite, xmdPagSpTotalsize=xmdPagSpTotalsize, xmdRTimeARM=xmdRTimeARM, xmdLANInstName=xmdLANInstName, xmdNFSV2Clnt=xmdNFSV2Clnt, xmdSyscall=xmdSyscall, xmdProcRunque=xmdProcRunque, xmdIP=xmdIP, xmdRPCSvrClNullrecv=xmdRPCSvrClNullrecv, xmdNFSV3Clnt=xmdNFSV3Clnt, xmdSyscallExec=xmdSyscallExec, xmdProcTsize=xmdProcTsize, xmdTCPRcvaftwinpack=xmdTCPRcvaftwinpack, xmdCPUGluticks=xmdCPUGluticks, xmdMemKmemEntry=xmdMemKmemEntry, xmdLANXmitintr=xmdLANXmitintr, xmdNFS=xmdNFS, xmdProcNice=xmdProcNice, xmdSysIOTtyout=xmdSysIOTtyout, xmdNFSV3ClntReadlink=xmdNFSV3ClntReadlink, xmdTCPRcvwinprobe=xmdTCPRcvwinprobe, xmdSysIOReadch=xmdSysIOReadch, xmdIPCShmShmids=xmdIPCShmShmids, xmdMemRealComp=xmdMemRealComp, xmdCPUGlidle=xmdCPUGlidle, xmdDiskBusy=xmdDiskBusy, xmdUDPRcvdgrm=xmdUDPRcvdgrm, xmdNFSV3ClntFsinfo=xmdNFSV3ClntFsinfo, mgmt=mgmt, xmdMemKmemMemmax=xmdMemKmemMemmax, xmdNFSV3ClntLookup=xmdNFSV3ClntLookup, xmdTCPRcvackbyte=xmdTCPRcvackbyte, xmdNFSV3SvrGetattr=xmdNFSV3SvrGetattr, xmdMemRealNumclient=xmdMemRealNumclient, xmdRPCClntClNewcreds=xmdRPCClntClNewcreds, xmdLANHighxmitq=xmdLANHighxmitq, xmdMemVirtEncomrepl=xmdMemVirtEncomrepl, xmdNFSV2SvrLink=xmdNFSV2SvrLink, xmdNFSV2ClntLink=xmdNFSV2ClntLink, xmdIPNetIFOmcastpkt=xmdIPNetIFOmcastpkt, xmdIPNetIF=xmdIPNetIF, xmdMemVirtWcomrepag=xmdMemVirtWcomrepag, xmdTCPRcvbyte=xmdTCPRcvbyte, xmdSpmiStatsets=xmdSpmiStatsets, xmdIPNetIFInstName=xmdIPNetIFInstName, xmdMemRealEclnt=xmdMemRealEclnt, xmdMemRealWseguse=xmdMemRealWseguse, os400as400=os400as400, xmdRTimeLAN=xmdRTimeLAN, xmdNFSV3ClntReaddir_plus=xmdNFSV3ClntReaddir_plus, xmdNFSV2SvrWrcache=xmdNFSV2SvrWrcache, xmdNFSV3ClntPathconf=xmdNFSV3ClntPathconf, enterprises=enterprises, xmdTCPSndwinup=xmdTCPSndwinup, xmdRPCClntClCantsend=xmdRPCClntClCantsend, xmdPagSpPgspgout=xmdPagSpPgspgout, xmdTCPRcvpack=xmdTCPRcvpack, xmdNFSClientCalls=xmdNFSClientCalls, xmdMemVirtEcomrepag=xmdMemVirtEcomrepag, xmdNFSV2ClntRmdir=xmdNFSV2ClntRmdir, xmdPagSpIndex=xmdPagSpIndex, xmdProcCpuacc=xmdProcCpuacc, xmdIPCSem=xmdIPCSem, xmdMemVirtComrepl=xmdMemVirtComrepl, xmdNFSV2ClntCreate=xmdNFSV2ClntCreate, xmdMemRealEcomp=xmdMemRealEcomp, xmdIPRcvtotal=xmdIPRcvtotal, xmdIPCMsg=xmdIPCMsg, xmdTCPSndrexmitpack=xmdTCPSndrexmitpack, xmdMemKmemBlocks=xmdMemKmemBlocks, xmdNFSV2ClntReaddir=xmdNFSV2ClntReaddir, xmdMemVirtWncomrepag=xmdMemVirtWncomrepag, xmdIPCMsgIdmax=xmdIPCMsgIdmax, xmdIPRoutingDynamic=xmdIPRoutingDynamic, xmdNFSV3ClntReaddir=xmdNFSV3ClntReaddir, xmdMemVirtCltpends=xmdMemVirtCltpends, xmdCPUGluser=xmdCPUGluser, xmdIPCLocksOverrun=xmdIPCLocksOverrun, xmdIPForward=xmdIPForward, xmdRPC=xmdRPC, xmdPagSpEntry=xmdPagSpEntry, xmdNFSV3SvrCommit=xmdNFSV3SvrCommit, risc6000xmservd=risc6000xmservd, xmdUDPNoportbc=xmdUDPNoportbc, xmdNFSV3ClntMkdir=xmdNFSV3ClntMkdir, xmdNFSV3Svr=xmdNFSV3Svr, xmdCPUGliticks=xmdCPUGliticks, xmdMemReal=xmdMemReal, xmdNFSV2SvrSymlink=xmdNFSV2SvrSymlink, xmdProcIndex=xmdProcIndex, xmdIPNetIFOdrops=xmdIPNetIFOdrops, aix=aix, xmdIPCSemUndosiz=xmdIPCSemUndosiz, xmdMemKmemMemuse=xmdMemKmemMemuse, xmdNFSV3SvrLookup=xmdNFSV3SvrLookup, risc6000public=risc6000public, xmdNFSV2ClntMkdir=xmdNFSV2ClntMkdir, aixPS2=aixPS2, xmdTCPRcvackpack=xmdTCPRcvackpack, xmdNFSV2ClntWrcache=xmdNFSV2ClntWrcache, xmdDiskXfer=xmdDiskXfer, xmdProcRepage=xmdProcRepage, risc6000samples=risc6000samples, xmdFS=xmdFS, xmdTCPSndctrl=xmdTCPSndctrl, xmdProcMaxrss=xmdProcMaxrss, xmdProcUsercpu=xmdProcUsercpu, xmdUDPCachmiss=xmdUDPCachmiss, xmdUDPBadlen=xmdUDPBadlen, xmdUDP=xmdUDP, xmdTCPSndtotal=xmdTCPSndtotal, risc6000private=risc6000private)
