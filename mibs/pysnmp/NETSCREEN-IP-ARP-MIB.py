#
# PySNMP MIB module NETSCREEN-IP-ARP-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/NETSCREEN-IP-ARP-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 20:10:19 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ValueRangeConstraint, SingleValueConstraint, ValueSizeConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ValueRangeConstraint", "SingleValueConstraint", "ValueSizeConstraint", "ConstraintsUnion")
netscreenIp, = mibBuilder.importSymbols("NETSCREEN-SMI", "netscreenIp")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
ModuleIdentity, ObjectIdentity, iso, Integer32, Unsigned32, Counter32, Bits, MibScalar, MibTable, MibTableRow, MibTableColumn, NotificationType, Gauge32, TimeTicks, IpAddress, MibIdentifier, Counter64 = mibBuilder.importSymbols("SNMPv2-SMI", "ModuleIdentity", "ObjectIdentity", "iso", "Integer32", "Unsigned32", "Counter32", "Bits", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "NotificationType", "Gauge32", "TimeTicks", "IpAddress", "MibIdentifier", "Counter64")
TextualConvention, PhysAddress, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "PhysAddress", "DisplayString")
nsIpArp = ModuleIdentity((1, 3, 6, 1, 4, 1, 3224, 17, 1))
nsIpArp.setRevisions(('2004-05-03 00:00', '2004-03-03 00:00', '2003-11-10 00:00', '2001-09-28 00:00', '2001-05-02 00:00',))
if mibBuilder.loadTexts: nsIpArp.setLastUpdated('200405032022Z')
if mibBuilder.loadTexts: nsIpArp.setOrganization('Juniper Networks, Inc.')
nsIpArpAOD = MibScalar((1, 3, 6, 1, 4, 1, 3224, 17, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enabled", 1))))
if mibBuilder.loadTexts: nsIpArpAOD.setStatus('current')
nsIpArpCachUpdate = MibScalar((1, 3, 6, 1, 4, 1, 3224, 17, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enabled", 1))))
if mibBuilder.loadTexts: nsIpArpCachUpdate.setStatus('current')
nsIpArpTable = MibTable((1, 3, 6, 1, 4, 1, 3224, 17, 1, 3), )
if mibBuilder.loadTexts: nsIpArpTable.setStatus('current')
nsIpArpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3224, 17, 1, 3, 1), ).setIndexNames((0, "NETSCREEN-IP-ARP-MIB", "nsIpArpIndex"))
if mibBuilder.loadTexts: nsIpArpEntry.setStatus('current')
nsIpArpIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 17, 1, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsIpArpIndex.setStatus('current')
nsIpArpIp = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 17, 1, 3, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsIpArpIp.setStatus('current')
nsIpArpMac = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 17, 1, 3, 1, 3), PhysAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsIpArpMac.setStatus('current')
nsIpArpVsys = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 17, 1, 3, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsIpArpVsys.setStatus('current')
nsIpArpIfIdx = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 17, 1, 3, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsIpArpIfIdx.setStatus('current')
nsIpArpState = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 17, 1, 3, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("pending", 1), ("valid", 2), ("delete", 3), ("static", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsIpArpState.setStatus('current')
nsIpArpAge = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 17, 1, 3, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsIpArpAge.setStatus('current')
nsIpArpRetry = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 17, 1, 3, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsIpArpRetry.setStatus('current')
nsIpArpPakQue = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 17, 1, 3, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsIpArpPakQue.setStatus('current')
mibBuilder.exportSymbols("NETSCREEN-IP-ARP-MIB", nsIpArp=nsIpArp, nsIpArpTable=nsIpArpTable, nsIpArpCachUpdate=nsIpArpCachUpdate, nsIpArpState=nsIpArpState, nsIpArpPakQue=nsIpArpPakQue, nsIpArpEntry=nsIpArpEntry, nsIpArpIfIdx=nsIpArpIfIdx, nsIpArpAge=nsIpArpAge, nsIpArpRetry=nsIpArpRetry, PYSNMP_MODULE_ID=nsIpArp, nsIpArpVsys=nsIpArpVsys, nsIpArpIndex=nsIpArpIndex, nsIpArpAOD=nsIpArpAOD, nsIpArpMac=nsIpArpMac, nsIpArpIp=nsIpArpIp)
