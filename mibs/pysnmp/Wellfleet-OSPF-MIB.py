#
# PySNMP MIB module Wellfleet-OSPF-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/Wellfleet-OSPF-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 21:34:37 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ConstraintsIntersection, ValueRangeConstraint, ValueSizeConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ConstraintsIntersection", "ValueRangeConstraint", "ValueSizeConstraint", "ConstraintsUnion")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
MibIdentifier, IpAddress, iso, Counter32, Gauge32, Unsigned32, MibScalar, MibTable, MibTableRow, MibTableColumn, Integer32, ModuleIdentity, Bits, ObjectIdentity, Counter64, NotificationType, TimeTicks = mibBuilder.importSymbols("SNMPv2-SMI", "MibIdentifier", "IpAddress", "iso", "Counter32", "Gauge32", "Unsigned32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Integer32", "ModuleIdentity", "Bits", "ObjectIdentity", "Counter64", "NotificationType", "TimeTicks")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
wfOspfGroup, = mibBuilder.importSymbols("Wellfleet-COMMON-MIB", "wfOspfGroup")
wfOspfGeneralGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 3, 1))
wfOspfGeneralDelete = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 3, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("created", 1), ("deleted", 2))).clone('created')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfOspfGeneralDelete.setStatus('mandatory')
wfOspfGeneralDisable = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 3, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfOspfGeneralDisable.setStatus('mandatory')
wfOspfGeneralState = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 3, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("init", 3), ("notpresent", 4))).clone('down')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfOspfGeneralState.setStatus('mandatory')
wfOspfRouterId = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 3, 1, 4), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfOspfRouterId.setStatus('mandatory')
wfOspfVersionNumber = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 3, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfOspfVersionNumber.setStatus('mandatory')
wfOspfAreaBdrRtrStatus = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 3, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("true", 1), ("false", 2))).clone('false')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfOspfAreaBdrRtrStatus.setStatus('mandatory')
wfOspfASBdrRtrStatus = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 3, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("true", 1), ("false", 2))).clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfOspfASBdrRtrStatus.setStatus('mandatory')
wfOspfTOSSupport = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 3, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("true", 1), ("false", 2))).clone('false')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfOspfTOSSupport.setStatus('mandatory')
wfOspfSpfHoldDown = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 3, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 10)).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfOspfSpfHoldDown.setStatus('mandatory')
wfOspfSlotMask = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 3, 1, 10), Gauge32().clone(4294705152)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfOspfSlotMask.setStatus('mandatory')
wfOspfNewAseMetricSupport = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 3, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfOspfNewAseMetricSupport.setStatus('mandatory')
wfOspfBackupDisable = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 3, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfOspfBackupDisable.setStatus('mandatory')
wfOspfPrimaryLogMask = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 3, 1, 13), Gauge32().clone(287)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfOspfPrimaryLogMask.setStatus('mandatory')
wfOspfBackupLogMask = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 3, 1, 14), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfOspfBackupLogMask.setStatus('mandatory')
wfOspfAseTagDefault = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 3, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("default", 1), ("automatic", 2), ("proprietary", 3))).clone('default')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfOspfAseTagDefault.setStatus('mandatory')
wfOspfPrimarySlot = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 3, 1, 16), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfOspfPrimarySlot.setStatus('mandatory')
wfOspfBackupSlot = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 3, 1, 17), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfOspfBackupSlot.setStatus('mandatory')
wfOspfMaximumPath = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 3, 1, 18), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 5)).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfOspfMaximumPath.setStatus('obsolete')
wfOspfSlotPriority = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 3, 1, 19), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfOspfSlotPriority.setStatus('mandatory')
wfOspfLsdbCount = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 3, 1, 20), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfOspfLsdbCount.setStatus('mandatory')
wfOspfMulticastExtensions = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 3, 1, 21), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfOspfMulticastExtensions.setStatus('mandatory')
wfOspfMulticastDeterministic = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 3, 1, 22), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("nondeterministic", 1), ("deterministicstrict", 2), ("deterministicloose", 3))).clone('nondeterministic')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfOspfMulticastDeterministic.setStatus('mandatory')
wfOspfMulticastRoutePinning = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 3, 1, 23), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("nonpinned", 1), ("pinned", 2))).clone('nonpinned')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfOspfMulticastRoutePinning.setStatus('mandatory')
wfOspfOpaqueCapability = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 3, 1, 24), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfOspfOpaqueCapability.setStatus('mandatory')
wfOspfDeterministicMcastHoldDown = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 3, 1, 25), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfOspfDeterministicMcastHoldDown.setStatus('mandatory')
wfMospfEntryTimeoutValue = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 3, 1, 26), Integer32().clone(600)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfMospfEntryTimeoutValue.setStatus('mandatory')
wfOspfMaxQueuedMcastPkts = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 3, 1, 27), Integer32().clone(64)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfOspfMaxQueuedMcastPkts.setStatus('mandatory')
wfOspfMcastUseDynTTL = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 3, 1, 28), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfOspfMcastUseDynTTL.setStatus('mandatory')
wfOspfRfc1583Compatibility = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 3, 1, 29), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfOspfRfc1583Compatibility.setStatus('mandatory')
wfOspfASEMcastEnable = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 3, 1, 30), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfOspfASEMcastEnable.setStatus('mandatory')
wfOspfNssaBorderRouter = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 3, 1, 31), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("yes", 1), ("no", 2))).clone('no')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfOspfNssaBorderRouter.setStatus('mandatory')
wfOspfLsaRefreshMax = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 3, 1, 32), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfOspfLsaRefreshMax.setStatus('mandatory')
wfOspfLsaRefreshDelay = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 3, 1, 33), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 5)).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfOspfLsaRefreshDelay.setStatus('mandatory')
wfOspfAggrUseMaxCost = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 3, 1, 34), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfOspfAggrUseMaxCost.setStatus('mandatory')
wfOspfFwdAddrComp = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 3, 1, 35), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfOspfFwdAddrComp.setStatus('mandatory')
wfOspfMtuUseCommonDefault = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 3, 1, 36), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfOspfMtuUseCommonDefault.setStatus('mandatory')
wfOspfAreaTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 3, 2), )
if mibBuilder.loadTexts: wfOspfAreaTable.setStatus('mandatory')
wfOspfAreaEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 3, 2, 1), ).setIndexNames((0, "Wellfleet-OSPF-MIB", "wfOspfAreaId"))
if mibBuilder.loadTexts: wfOspfAreaEntry.setStatus('mandatory')
wfOspfAreaDelete = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 3, 2, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("created", 1), ("deleted", 2))).clone('created')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfOspfAreaDelete.setStatus('mandatory')
wfOspfAreaDisable = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 3, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfOspfAreaDisable.setStatus('mandatory')
wfOspfAreaState = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 3, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("up", 1), ("down", 2))).clone('down')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfOspfAreaState.setStatus('mandatory')
wfOspfAreaId = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 3, 2, 1, 4), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfOspfAreaId.setStatus('mandatory')
wfOspfAuthType = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 3, 2, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("none", 1), ("simple-password", 2))).clone('none')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfOspfAuthType.setStatus('mandatory')
wfOspfImportASExtern = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 3, 2, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("importExternal", 1), ("importNoExternal", 2), ("importNssa", 3))).clone('importExternal')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfOspfImportASExtern.setStatus('mandatory')
wfOspfStubMetric = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 3, 2, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16777215)).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfOspfStubMetric.setStatus('mandatory')
wfOspfImportSum = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 3, 2, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("true", 1), ("false", 2))).clone('true')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfOspfImportSum.setStatus('mandatory')
wfOspfSpfCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 3, 2, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfOspfSpfCnt.setStatus('mandatory')
wfOspfPtpSpecCostEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 3, 2, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfOspfPtpSpecCostEnable.setStatus('mandatory')
wfOspfAreaNssaTranslateCfg = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 3, 2, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfOspfAreaNssaTranslateCfg.setStatus('mandatory')
wfOspfAreaNssaTranslateStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 3, 2, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("translating", 1), ("nottranslating", 2))).clone('nottranslating')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfOspfAreaNssaTranslateStatus.setStatus('mandatory')
wfOspfAreaNssaOriginateDefaultRoute = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 3, 2, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfOspfAreaNssaOriginateDefaultRoute.setStatus('mandatory')
wfOspfAreaNssaPropagateDefaultRoute = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 3, 2, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfOspfAreaNssaPropagateDefaultRoute.setStatus('mandatory')
wfOspfAreaNssaDefaultRoutePathType = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 3, 2, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("type1", 1), ("type2", 2))).clone('type1')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfOspfAreaNssaDefaultRoutePathType.setStatus('mandatory')
wfMospfForwardTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 3, 11), )
if mibBuilder.loadTexts: wfMospfForwardTable.setStatus('mandatory')
wfMospfForwardEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 3, 11, 1), ).setIndexNames((0, "Wellfleet-OSPF-MIB", "wfMospfForwardGroup"), (0, "Wellfleet-OSPF-MIB", "wfMospfForwardSource"), (0, "Wellfleet-OSPF-MIB", "wfMospfForwardSourceMask"))
if mibBuilder.loadTexts: wfMospfForwardEntry.setStatus('mandatory')
wfMospfForwardGroup = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 3, 11, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfMospfForwardGroup.setStatus('mandatory')
wfMospfForwardSource = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 3, 11, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfMospfForwardSource.setStatus('mandatory')
wfMospfForwardSourceMask = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 3, 11, 1, 3), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfMospfForwardSourceMask.setStatus('mandatory')
wfMospfForwardSourceNetMask = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 3, 11, 1, 4), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfMospfForwardSourceNetMask.setStatus('mandatory')
wfMospfForwardFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 3, 11, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfMospfForwardFlag.setStatus('mandatory')
wfMospfForwardUpstreamAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 3, 11, 1, 6), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfMospfForwardUpstreamAddress.setStatus('mandatory')
wfMospfForwardUpstreamIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 3, 11, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfMospfForwardUpstreamIfIndex.setStatus('mandatory')
wfMospfForwardBwBucketDepth = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 3, 11, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfMospfForwardBwBucketDepth.setStatus('mandatory')
wfMospfForwardBwBucketRate = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 3, 11, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfMospfForwardBwBucketRate.setStatus('mandatory')
wfMospfForwardAge = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 3, 11, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfMospfForwardAge.setStatus('mandatory')
wfMospfForwardDownstream = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 3, 11, 1, 11), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfMospfForwardDownstream.setStatus('mandatory')
wfOspfLsdbTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 3, 3), )
if mibBuilder.loadTexts: wfOspfLsdbTable.setStatus('mandatory')
wfOspfLsdbEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 3, 3, 1), ).setIndexNames((0, "Wellfleet-OSPF-MIB", "wfOspfLsdbAreaId"), (0, "Wellfleet-OSPF-MIB", "wfOspfLsdbType"), (0, "Wellfleet-OSPF-MIB", "wfOspfLsdbLSID"), (0, "Wellfleet-OSPF-MIB", "wfOspfLsdbRouterId"))
if mibBuilder.loadTexts: wfOspfLsdbEntry.setStatus('mandatory')
wfOspfLsdbAreaId = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 3, 3, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfOspfLsdbAreaId.setStatus('mandatory')
wfOspfLsdbType = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 3, 3, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 15, 16))).clone(namedValues=NamedValues(("routerlink", 1), ("networklink", 2), ("summarylink", 3), ("assummarylink", 4), ("asexternallink", 5), ("multicastlink", 6), ("nssaasexternallink", 7), ("opaquelink", 15), ("resourcelink", 16)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfOspfLsdbType.setStatus('mandatory')
wfOspfLsdbLSID = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 3, 3, 1, 3), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfOspfLsdbLSID.setStatus('mandatory')
wfOspfLsdbRouterId = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 3, 3, 1, 4), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfOspfLsdbRouterId.setStatus('mandatory')
wfOspfLsdbSequence = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 3, 3, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfOspfLsdbSequence.setStatus('mandatory')
wfOspfLsdbAge = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 3, 3, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 3600))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfOspfLsdbAge.setStatus('mandatory')
wfOspfLsdbChecksum = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 3, 3, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfOspfLsdbChecksum.setStatus('mandatory')
wfOspfLsdbMetric = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 3, 3, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfOspfLsdbMetric.setStatus('mandatory')
wfOspfLsdbAseForwardAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 3, 3, 1, 9), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfOspfLsdbAseForwardAddr.setStatus('mandatory')
wfOspfLsdbAseTag = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 3, 3, 1, 10), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfOspfLsdbAseTag.setStatus('mandatory')
wfOspfLsdbAseType = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 3, 3, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("type1", 1), ("type2", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfOspfLsdbAseType.setStatus('mandatory')
wfOspfLsdbAdvLen = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 3, 3, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfOspfLsdbAdvLen.setStatus('mandatory')
wfOspfLsdbAdv = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 3, 3, 1, 13), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfOspfLsdbAdv.setStatus('mandatory')
wfOspfBackupLsdbTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 3, 10), )
if mibBuilder.loadTexts: wfOspfBackupLsdbTable.setStatus('mandatory')
wfOspfBackupLsdbEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 3, 10, 1), ).setIndexNames((0, "Wellfleet-OSPF-MIB", "wfOspfBackupLsdbAreaId"), (0, "Wellfleet-OSPF-MIB", "wfOspfBackupLsdbType"), (0, "Wellfleet-OSPF-MIB", "wfOspfBackupLsdbLSID"), (0, "Wellfleet-OSPF-MIB", "wfOspfBackupLsdbRouterId"))
if mibBuilder.loadTexts: wfOspfBackupLsdbEntry.setStatus('mandatory')
wfOspfBackupLsdbAreaId = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 3, 10, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfOspfBackupLsdbAreaId.setStatus('mandatory')
wfOspfBackupLsdbType = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 3, 10, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 7))).clone(namedValues=NamedValues(("routerlink", 1), ("networklink", 2), ("summarylink", 3), ("assummarylink", 4), ("asexternallink", 5), ("nssaasexternallink", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfOspfBackupLsdbType.setStatus('mandatory')
wfOspfBackupLsdbLSID = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 3, 10, 1, 3), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfOspfBackupLsdbLSID.setStatus('mandatory')
wfOspfBackupLsdbRouterId = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 3, 10, 1, 4), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfOspfBackupLsdbRouterId.setStatus('mandatory')
wfOspfBackupLsdbSequence = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 3, 10, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfOspfBackupLsdbSequence.setStatus('mandatory')
wfOspfBackupLsdbAge = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 3, 10, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 3600))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfOspfBackupLsdbAge.setStatus('mandatory')
wfOspfBackupLsdbChecksum = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 3, 10, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfOspfBackupLsdbChecksum.setStatus('mandatory')
wfOspfBackupLsdbMetric = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 3, 10, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfOspfBackupLsdbMetric.setStatus('mandatory')
wfOspfBackupLsdbAseForwardAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 3, 10, 1, 9), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfOspfBackupLsdbAseForwardAddr.setStatus('mandatory')
wfOspfBackupLsdbAseTag = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 3, 10, 1, 10), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfOspfBackupLsdbAseTag.setStatus('mandatory')
wfOspfBackupLsdbAseType = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 3, 10, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("type1", 1), ("type2", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfOspfBackupLsdbAseType.setStatus('mandatory')
wfOspfBackupLsdbAdvLen = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 3, 10, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfOspfBackupLsdbAdvLen.setStatus('mandatory')
wfOspfBackupLsdbAdv = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 3, 10, 1, 13), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfOspfBackupLsdbAdv.setStatus('mandatory')
wfOspfAreaRangeTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 3, 4), )
if mibBuilder.loadTexts: wfOspfAreaRangeTable.setStatus('mandatory')
wfOspfAreaRangeEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 3, 4, 1), ).setIndexNames((0, "Wellfleet-OSPF-MIB", "wfOspfAreaRangeAreaID"), (0, "Wellfleet-OSPF-MIB", "wfOspfAreaRangeNet"))
if mibBuilder.loadTexts: wfOspfAreaRangeEntry.setStatus('mandatory')
wfOspfAreaRangeDelete = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 3, 4, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("created", 1), ("deleted", 2))).clone('created')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfOspfAreaRangeDelete.setStatus('mandatory')
wfOspfAreaRangeDisable = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 3, 4, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfOspfAreaRangeDisable.setStatus('mandatory')
wfOspfAreaRangeState = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 3, 4, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("up", 1), ("down", 2))).clone('down')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfOspfAreaRangeState.setStatus('mandatory')
wfOspfAreaRangeAreaID = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 3, 4, 1, 4), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfOspfAreaRangeAreaID.setStatus('mandatory')
wfOspfAreaRangeNet = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 3, 4, 1, 5), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfOspfAreaRangeNet.setStatus('mandatory')
wfOspfAreaRangeMask = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 3, 4, 1, 6), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfOspfAreaRangeMask.setStatus('mandatory')
wfOspfAreaRangeStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 3, 4, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("advertise", 1), ("block", 2))).clone('advertise')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfOspfAreaRangeStatus.setStatus('mandatory')
wfOspfAreaRangeMetric = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 3, 4, 1, 8), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfOspfAreaRangeMetric.setStatus('mandatory')
wfOspfIfTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 3, 5), )
if mibBuilder.loadTexts: wfOspfIfTable.setStatus('mandatory')
wfOspfIfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 3, 5, 1), ).setIndexNames((0, "Wellfleet-OSPF-MIB", "wfOspfIfIpAddress"), (0, "Wellfleet-OSPF-MIB", "wfOspfAddressLessIf"))
if mibBuilder.loadTexts: wfOspfIfEntry.setStatus('mandatory')
wfOspfIfDelete = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 3, 5, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("created", 1), ("deleted", 2))).clone('created')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfOspfIfDelete.setStatus('mandatory')
wfOspfIfDisable = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 3, 5, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfOspfIfDisable.setStatus('mandatory')
wfOspfIfState = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 3, 5, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("down", 1), ("loopback", 2), ("waiting", 3), ("pointtopoint", 4), ("designatedrouter", 5), ("backupdesignatedrouter", 6), ("otherdesignatedrouter", 7))).clone('down')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfOspfIfState.setStatus('mandatory')
wfOspfIfIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 3, 5, 1, 4), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfOspfIfIpAddress.setStatus('mandatory')
wfOspfAddressLessIf = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 3, 5, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfOspfAddressLessIf.setStatus('mandatory')
wfOspfIfAreaId = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 3, 5, 1, 6), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfOspfIfAreaId.setStatus('mandatory')
wfOspfIfType = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 3, 5, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("broadcast", 1), ("nbma", 2), ("pointtopoint", 3), ("pmp", 4), ("ietf", 5), ("passive", 6))).clone('broadcast')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfOspfIfType.setStatus('mandatory')
wfOspfIfRtrPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 3, 5, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255)).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfOspfIfRtrPriority.setStatus('mandatory')
wfOspfIfTransitDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 3, 5, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 3600)).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfOspfIfTransitDelay.setStatus('mandatory')
wfOspfIfRetransInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 3, 5, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 3600)).clone(5)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfOspfIfRetransInterval.setStatus('mandatory')
wfOspfIfHelloInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 3, 5, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)).clone(10)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfOspfIfHelloInterval.setStatus('mandatory')
wfOspfIfRtrDeadInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 3, 5, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)).clone(40)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfOspfIfRtrDeadInterval.setStatus('mandatory')
wfOspfIfPollInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 3, 5, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)).clone(120)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfOspfIfPollInterval.setStatus('mandatory')
wfOspfIfDesignatedRouter = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 3, 5, 1, 14), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfOspfIfDesignatedRouter.setStatus('mandatory')
wfOspfIfBackupDesignatedRouter = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 3, 5, 1, 15), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfOspfIfBackupDesignatedRouter.setStatus('mandatory')
wfOspfIfMetricCost = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 3, 5, 1, 16), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfOspfIfMetricCost.setStatus('mandatory')
wfOspfIfAuthKey = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 3, 5, 1, 17), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfOspfIfAuthKey.setStatus('mandatory')
wfOspfIfTxHellos = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 3, 5, 1, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfOspfIfTxHellos.setStatus('mandatory')
wfOspfIfTxDBDescripts = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 3, 5, 1, 19), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfOspfIfTxDBDescripts.setStatus('mandatory')
wfOspfIfTxLinkStateReqs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 3, 5, 1, 20), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfOspfIfTxLinkStateReqs.setStatus('mandatory')
wfOspfIfTxLinkStateUpds = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 3, 5, 1, 21), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfOspfIfTxLinkStateUpds.setStatus('mandatory')
wfOspfIfTxLinkStateAcks = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 3, 5, 1, 22), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfOspfIfTxLinkStateAcks.setStatus('mandatory')
wfOspfIfRxHellos = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 3, 5, 1, 23), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfOspfIfRxHellos.setStatus('mandatory')
wfOspfIfRxDBDescripts = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 3, 5, 1, 24), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfOspfIfRxDBDescripts.setStatus('mandatory')
wfOspfIfRxLinkStateReqs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 3, 5, 1, 25), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfOspfIfRxLinkStateReqs.setStatus('mandatory')
wfOspfIfRxLinkStateUpds = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 3, 5, 1, 26), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfOspfIfRxLinkStateUpds.setStatus('mandatory')
wfOspfIfRxLinkStateAcks = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 3, 5, 1, 27), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfOspfIfRxLinkStateAcks.setStatus('mandatory')
wfOspfIfDrops = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 3, 5, 1, 28), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfOspfIfDrops.setStatus('mandatory')
wfOspfMtuSize = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 3, 5, 1, 29), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 10000)).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfOspfMtuSize.setStatus('mandatory')
wfOspfIfMulticastForwarding = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 3, 5, 1, 30), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("blocked", 1), ("multicast", 2), ("unicast", 3))).clone('multicast')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfOspfIfMulticastForwarding.setStatus('mandatory')
wfOspfIfOpaqueOn = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 3, 5, 1, 31), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("on", 1), ("off", 2))).clone('on')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfOspfIfOpaqueOn.setStatus('mandatory')
wfOspfIfBwRate = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 3, 5, 1, 32), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfOspfIfBwRate.setStatus('mandatory')
wfOspfIfBwDepth = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 3, 5, 1, 33), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfOspfIfBwDepth.setStatus('mandatory')
wfOspfIfMtuMismatchDetect = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 3, 5, 1, 34), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfOspfIfMtuMismatchDetect.setStatus('mandatory')
wfOspfVirtIfTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 3, 6), )
if mibBuilder.loadTexts: wfOspfVirtIfTable.setStatus('mandatory')
wfOspfVirtIfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 3, 6, 1), ).setIndexNames((0, "Wellfleet-OSPF-MIB", "wfOspfVirtIfAreaID"), (0, "Wellfleet-OSPF-MIB", "wfOspfVirtIfNeighbor"))
if mibBuilder.loadTexts: wfOspfVirtIfEntry.setStatus('mandatory')
wfOspfVirtIfDelete = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 3, 6, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("created", 1), ("deleted", 2))).clone('created')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfOspfVirtIfDelete.setStatus('mandatory')
wfOspfVirtIfDisable = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 3, 6, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfOspfVirtIfDisable.setStatus('mandatory')
wfOspfVirtIfState = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 3, 6, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 4))).clone(namedValues=NamedValues(("down", 1), ("pointtopoint", 4))).clone('down')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfOspfVirtIfState.setStatus('mandatory')
wfOspfVirtIfAreaID = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 3, 6, 1, 4), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfOspfVirtIfAreaID.setStatus('mandatory')
wfOspfVirtIfNeighbor = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 3, 6, 1, 5), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfOspfVirtIfNeighbor.setStatus('mandatory')
wfOspfVirtIfTransitDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 3, 6, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 3600)).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfOspfVirtIfTransitDelay.setStatus('mandatory')
wfOspfVirtIfRetransInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 3, 6, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 3600)).clone(5)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfOspfVirtIfRetransInterval.setStatus('mandatory')
wfOspfVirtIfHelloInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 3, 6, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)).clone(15)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfOspfVirtIfHelloInterval.setStatus('mandatory')
wfOspfVirtIfRtrDeadInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 3, 6, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)).clone(60)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfOspfVirtIfRtrDeadInterval.setStatus('mandatory')
wfOspfVirtIfAuthKey = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 3, 6, 1, 10), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfOspfVirtIfAuthKey.setStatus('mandatory')
wfOspfVirtIfTxHellos = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 3, 6, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfOspfVirtIfTxHellos.setStatus('mandatory')
wfOspfVirtIfTxDBDescripts = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 3, 6, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfOspfVirtIfTxDBDescripts.setStatus('mandatory')
wfOspfVirtIfTxLinkStateReqs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 3, 6, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfOspfVirtIfTxLinkStateReqs.setStatus('mandatory')
wfOspfVirtIfTxLinkStateUpds = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 3, 6, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfOspfVirtIfTxLinkStateUpds.setStatus('mandatory')
wfOspfVirtIfTxLinkStateAcks = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 3, 6, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfOspfVirtIfTxLinkStateAcks.setStatus('mandatory')
wfOspfVirtIfRxHellos = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 3, 6, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfOspfVirtIfRxHellos.setStatus('mandatory')
wfOspfVirtIfRxDBDescripts = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 3, 6, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfOspfVirtIfRxDBDescripts.setStatus('mandatory')
wfOspfVirtIfRxLinkStateReqs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 3, 6, 1, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfOspfVirtIfRxLinkStateReqs.setStatus('mandatory')
wfOspfVirtIfRxLinkStateUpds = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 3, 6, 1, 19), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfOspfVirtIfRxLinkStateUpds.setStatus('mandatory')
wfOspfVirtIfRxLinkStateAcks = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 3, 6, 1, 20), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfOspfVirtIfRxLinkStateAcks.setStatus('mandatory')
wfOspfVirtIfDrops = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 3, 6, 1, 21), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfOspfVirtIfDrops.setStatus('mandatory')
wfOspfNbrTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 3, 7), )
if mibBuilder.loadTexts: wfOspfNbrTable.setStatus('mandatory')
wfOspfNbrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 3, 7, 1), ).setIndexNames((0, "Wellfleet-OSPF-MIB", "wfOspfNbrIpAddr"), (0, "Wellfleet-OSPF-MIB", "wfOspfNbrAddressLessIndex"))
if mibBuilder.loadTexts: wfOspfNbrEntry.setStatus('mandatory')
wfOspfNbrDelete = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 3, 7, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("created", 1), ("deleted", 2))).clone('created')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfOspfNbrDelete.setStatus('mandatory')
wfOspfNbrDisable = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 3, 7, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfOspfNbrDisable.setStatus('mandatory')
wfOspfNbrState = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 3, 7, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("down", 1), ("attempt", 2), ("init", 3), ("twoway", 4), ("exchangstart", 5), ("exchange", 6), ("loading", 7), ("full", 8))).clone('down')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfOspfNbrState.setStatus('mandatory')
wfOspfNbrIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 3, 7, 1, 4), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfOspfNbrIpAddr.setStatus('mandatory')
wfOspfNbrIfAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 3, 7, 1, 5), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfOspfNbrIfAddr.setStatus('mandatory')
wfOspfNbrAddressLessIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 3, 7, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfOspfNbrAddressLessIndex.setStatus('mandatory')
wfOspfNbrRtrId = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 3, 7, 1, 7), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfOspfNbrRtrId.setStatus('mandatory')
wfOspfNbrOptions = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 3, 7, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfOspfNbrOptions.setStatus('mandatory')
wfOspfNbrPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 3, 7, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255)).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfOspfNbrPriority.setStatus('mandatory')
wfOspfNbrEvents = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 3, 7, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfOspfNbrEvents.setStatus('mandatory')
wfOspfNbrLSRetransQLen = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 3, 7, 1, 11), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfOspfNbrLSRetransQLen.setStatus('mandatory')
wfOspfCurNbrPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 3, 7, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfOspfCurNbrPriority.setStatus('mandatory')
wfOspfVirtNbrTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 3, 8), )
if mibBuilder.loadTexts: wfOspfVirtNbrTable.setStatus('mandatory')
wfOspfVirtNbrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 3, 8, 1), ).setIndexNames((0, "Wellfleet-OSPF-MIB", "wfOspfVirtNbrArea"), (0, "Wellfleet-OSPF-MIB", "wfOspfVirtNbrRtrId"))
if mibBuilder.loadTexts: wfOspfVirtNbrEntry.setStatus('mandatory')
wfOspfVirtNbrArea = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 3, 8, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfOspfVirtNbrArea.setStatus('mandatory')
wfOspfVirtNbrRtrId = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 3, 8, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfOspfVirtNbrRtrId.setStatus('mandatory')
wfOspfVirtNbrIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 3, 8, 1, 3), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfOspfVirtNbrIpAddr.setStatus('mandatory')
wfOspfVirtNbrOptions = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 3, 8, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfOspfVirtNbrOptions.setStatus('mandatory')
wfOspfVirtNbrState = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 3, 8, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("down", 1), ("attempt", 2), ("init", 3), ("twoway", 4), ("exchangstart", 5), ("exchange", 6), ("loading", 7), ("full", 8))).clone('down')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfOspfVirtNbrState.setStatus('mandatory')
wfOspfVirtNbrEvents = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 3, 8, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfOspfVirtNbrEvents.setStatus('mandatory')
wfOspfVirtNbrLSRetransQLen = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 3, 8, 1, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfOspfVirtNbrLSRetransQLen.setStatus('mandatory')
wfOspfDynNbrTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 3, 9), )
if mibBuilder.loadTexts: wfOspfDynNbrTable.setStatus('mandatory')
wfOspfDynNbrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 3, 9, 1), ).setIndexNames((0, "Wellfleet-OSPF-MIB", "wfOspfDynNbrIpAddr"), (0, "Wellfleet-OSPF-MIB", "wfOspfDynNbrAddressLessIndex"))
if mibBuilder.loadTexts: wfOspfDynNbrEntry.setStatus('mandatory')
wfOspfDynNbrState = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 3, 9, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("down", 1), ("attempt", 2), ("init", 3), ("twoway", 4), ("exchangstart", 5), ("exchange", 6), ("loading", 7), ("full", 8))).clone('down')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfOspfDynNbrState.setStatus('mandatory')
wfOspfDynNbrIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 3, 9, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfOspfDynNbrIpAddr.setStatus('mandatory')
wfOspfDynNbrIfAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 3, 9, 1, 3), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfOspfDynNbrIfAddr.setStatus('mandatory')
wfOspfDynNbrAddressLessIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 3, 9, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfOspfDynNbrAddressLessIndex.setStatus('mandatory')
wfOspfDynNbrRtrId = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 3, 9, 1, 5), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfOspfDynNbrRtrId.setStatus('mandatory')
wfOspfDynNbrOptions = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 3, 9, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfOspfDynNbrOptions.setStatus('mandatory')
wfOspfDynNbrPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 3, 9, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfOspfDynNbrPriority.setStatus('mandatory')
wfOspfDynNbrEvents = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 3, 9, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfOspfDynNbrEvents.setStatus('mandatory')
wfOspfDynNbrLSRetransQLen = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 3, 9, 1, 9), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfOspfDynNbrLSRetransQLen.setStatus('mandatory')
wfOspfNSSARangeTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 3, 12), )
if mibBuilder.loadTexts: wfOspfNSSARangeTable.setStatus('mandatory')
wfOspfNSSARangeEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 3, 12, 1), ).setIndexNames((0, "Wellfleet-OSPF-MIB", "wfOspfNSSARangeNet"))
if mibBuilder.loadTexts: wfOspfNSSARangeEntry.setStatus('mandatory')
wfOspfNSSARangeDelete = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 3, 12, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("created", 1), ("deleted", 2))).clone('created')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfOspfNSSARangeDelete.setStatus('mandatory')
wfOspfNSSARangeDisable = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 3, 12, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfOspfNSSARangeDisable.setStatus('mandatory')
wfOspfNSSARangeNet = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 3, 12, 1, 3), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfOspfNSSARangeNet.setStatus('mandatory')
wfOspfNSSARangeMask = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 3, 12, 1, 4), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfOspfNSSARangeMask.setStatus('mandatory')
wfOspfNSSARangeStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 3, 12, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("advertise", 1), ("block", 2))).clone('advertise')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfOspfNSSARangeStatus.setStatus('mandatory')
wfOspfNSSARangeExternRouteTag = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 3, 12, 1, 6), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfOspfNSSARangeExternRouteTag.setStatus('mandatory')
mibBuilder.exportSymbols("Wellfleet-OSPF-MIB", wfOspfLsdbLSID=wfOspfLsdbLSID, wfOspfASBdrRtrStatus=wfOspfASBdrRtrStatus, wfOspfAreaDisable=wfOspfAreaDisable, wfOspfVirtIfRxHellos=wfOspfVirtIfRxHellos, wfOspfIfRetransInterval=wfOspfIfRetransInterval, wfOspfAreaEntry=wfOspfAreaEntry, wfMospfForwardSource=wfMospfForwardSource, wfOspfNbrTable=wfOspfNbrTable, wfOspfVirtIfTable=wfOspfVirtIfTable, wfOspfVirtNbrOptions=wfOspfVirtNbrOptions, wfMospfForwardUpstreamAddress=wfMospfForwardUpstreamAddress, wfOspfDynNbrRtrId=wfOspfDynNbrRtrId, wfOspfTOSSupport=wfOspfTOSSupport, wfOspfDynNbrState=wfOspfDynNbrState, wfOspfBackupLsdbAseTag=wfOspfBackupLsdbAseTag, wfOspfASEMcastEnable=wfOspfASEMcastEnable, wfOspfNSSARangeDisable=wfOspfNSSARangeDisable, wfOspfIfOpaqueOn=wfOspfIfOpaqueOn, wfOspfDynNbrIpAddr=wfOspfDynNbrIpAddr, wfOspfBackupLsdbLSID=wfOspfBackupLsdbLSID, wfOspfGeneralGroup=wfOspfGeneralGroup, wfOspfBackupLsdbSequence=wfOspfBackupLsdbSequence, wfOspfBackupSlot=wfOspfBackupSlot, wfOspfBackupLsdbAdvLen=wfOspfBackupLsdbAdvLen, wfOspfAreaRangeMetric=wfOspfAreaRangeMetric, wfOspfLsdbCount=wfOspfLsdbCount, wfOspfStubMetric=wfOspfStubMetric, wfOspfBackupLsdbAseForwardAddr=wfOspfBackupLsdbAseForwardAddr, wfOspfIfBackupDesignatedRouter=wfOspfIfBackupDesignatedRouter, wfOspfMaximumPath=wfOspfMaximumPath, wfOspfIfMulticastForwarding=wfOspfIfMulticastForwarding, wfOspfSpfCnt=wfOspfSpfCnt, wfOspfAreaRangeNet=wfOspfAreaRangeNet, wfOspfIfRxLinkStateReqs=wfOspfIfRxLinkStateReqs, wfOspfVirtNbrArea=wfOspfVirtNbrArea, wfOspfLsdbMetric=wfOspfLsdbMetric, wfOspfVirtNbrLSRetransQLen=wfOspfVirtNbrLSRetransQLen, wfMospfForwardSourceMask=wfMospfForwardSourceMask, wfOspfImportSum=wfOspfImportSum, wfOspfVirtIfState=wfOspfVirtIfState, wfOspfIfTransitDelay=wfOspfIfTransitDelay, wfOspfBackupLsdbType=wfOspfBackupLsdbType, wfMospfForwardSourceNetMask=wfMospfForwardSourceNetMask, wfOspfBackupLsdbChecksum=wfOspfBackupLsdbChecksum, wfOspfVirtIfRxDBDescripts=wfOspfVirtIfRxDBDescripts, wfOspfLsdbType=wfOspfLsdbType, wfOspfIfRxLinkStateAcks=wfOspfIfRxLinkStateAcks, wfOspfGeneralState=wfOspfGeneralState, wfOspfDynNbrEvents=wfOspfDynNbrEvents, wfOspfLsdbAdv=wfOspfLsdbAdv, wfOspfIfTxLinkStateReqs=wfOspfIfTxLinkStateReqs, wfOspfVirtIfRxLinkStateReqs=wfOspfVirtIfRxLinkStateReqs, wfOspfIfDrops=wfOspfIfDrops, wfOspfBackupLsdbTable=wfOspfBackupLsdbTable, wfOspfIfState=wfOspfIfState, wfOspfNbrEntry=wfOspfNbrEntry, wfOspfBackupLsdbEntry=wfOspfBackupLsdbEntry, wfOspfIfType=wfOspfIfType, wfOspfCurNbrPriority=wfOspfCurNbrPriority, wfOspfVirtIfEntry=wfOspfVirtIfEntry, wfOspfSpfHoldDown=wfOspfSpfHoldDown, wfOspfNewAseMetricSupport=wfOspfNewAseMetricSupport, wfOspfLsdbAseForwardAddr=wfOspfLsdbAseForwardAddr, wfOspfAreaRangeEntry=wfOspfAreaRangeEntry, wfOspfAreaRangeDisable=wfOspfAreaRangeDisable, wfOspfVirtIfRetransInterval=wfOspfVirtIfRetransInterval, wfMospfForwardGroup=wfMospfForwardGroup, wfOspfDynNbrIfAddr=wfOspfDynNbrIfAddr, wfOspfNSSARangeStatus=wfOspfNSSARangeStatus, wfOspfPrimarySlot=wfOspfPrimarySlot, wfOspfIfAreaId=wfOspfIfAreaId, wfOspfVirtIfRxLinkStateAcks=wfOspfVirtIfRxLinkStateAcks, wfOspfVirtNbrIpAddr=wfOspfVirtNbrIpAddr, wfOspfVirtNbrEvents=wfOspfVirtNbrEvents, wfOspfVirtIfTxHellos=wfOspfVirtIfTxHellos, wfOspfMcastUseDynTTL=wfOspfMcastUseDynTTL, wfOspfAreaDelete=wfOspfAreaDelete, wfOspfIfTxLinkStateUpds=wfOspfIfTxLinkStateUpds, wfMospfForwardBwBucketDepth=wfMospfForwardBwBucketDepth, wfMospfForwardEntry=wfMospfForwardEntry, wfOspfIfRtrPriority=wfOspfIfRtrPriority, wfOspfVirtIfAuthKey=wfOspfVirtIfAuthKey, wfOspfAreaNssaOriginateDefaultRoute=wfOspfAreaNssaOriginateDefaultRoute, wfOspfNbrLSRetransQLen=wfOspfNbrLSRetransQLen, wfOspfIfRxHellos=wfOspfIfRxHellos, wfOspfNssaBorderRouter=wfOspfNssaBorderRouter, wfOspfNbrAddressLessIndex=wfOspfNbrAddressLessIndex, wfOspfIfBwDepth=wfOspfIfBwDepth, wfOspfDynNbrAddressLessIndex=wfOspfDynNbrAddressLessIndex, wfOspfAggrUseMaxCost=wfOspfAggrUseMaxCost, wfOspfIfTxDBDescripts=wfOspfIfTxDBDescripts, wfOspfVirtNbrTable=wfOspfVirtNbrTable, wfOspfVirtIfDisable=wfOspfVirtIfDisable, wfOspfNbrEvents=wfOspfNbrEvents, wfOspfBackupLsdbRouterId=wfOspfBackupLsdbRouterId, wfOspfRfc1583Compatibility=wfOspfRfc1583Compatibility, wfOspfNbrState=wfOspfNbrState, wfOspfIfAuthKey=wfOspfIfAuthKey, wfOspfVirtIfRxLinkStateUpds=wfOspfVirtIfRxLinkStateUpds, wfOspfIfIpAddress=wfOspfIfIpAddress, wfOspfRouterId=wfOspfRouterId, wfOspfAreaNssaTranslateCfg=wfOspfAreaNssaTranslateCfg, wfOspfMtuUseCommonDefault=wfOspfMtuUseCommonDefault, wfOspfLsaRefreshMax=wfOspfLsaRefreshMax, wfMospfForwardUpstreamIfIndex=wfMospfForwardUpstreamIfIndex, wfOspfNSSARangeEntry=wfOspfNSSARangeEntry, wfOspfLsdbRouterId=wfOspfLsdbRouterId, wfOspfVirtIfHelloInterval=wfOspfVirtIfHelloInterval, wfOspfIfDelete=wfOspfIfDelete, wfOspfVirtNbrRtrId=wfOspfVirtNbrRtrId, wfOspfMulticastExtensions=wfOspfMulticastExtensions, wfOspfBackupLsdbAdv=wfOspfBackupLsdbAdv, wfOspfIfHelloInterval=wfOspfIfHelloInterval, wfOspfDynNbrOptions=wfOspfDynNbrOptions, wfOspfMulticastRoutePinning=wfOspfMulticastRoutePinning, wfOspfLsdbSequence=wfOspfLsdbSequence, wfOspfGeneralDelete=wfOspfGeneralDelete, wfOspfAreaNssaPropagateDefaultRoute=wfOspfAreaNssaPropagateDefaultRoute, wfOspfLsdbAseType=wfOspfLsdbAseType, wfOspfAreaBdrRtrStatus=wfOspfAreaBdrRtrStatus, wfOspfPtpSpecCostEnable=wfOspfPtpSpecCostEnable, wfOspfNbrDisable=wfOspfNbrDisable, wfOspfFwdAddrComp=wfOspfFwdAddrComp, wfOspfVersionNumber=wfOspfVersionNumber, wfOspfIfDisable=wfOspfIfDisable, wfOspfNSSARangeExternRouteTag=wfOspfNSSARangeExternRouteTag, wfOspfLsdbEntry=wfOspfLsdbEntry, wfOspfLsdbAdvLen=wfOspfLsdbAdvLen, wfOspfVirtIfNeighbor=wfOspfVirtIfNeighbor, wfOspfIfMetricCost=wfOspfIfMetricCost, wfOspfLsdbChecksum=wfOspfLsdbChecksum, wfOspfVirtIfTxDBDescripts=wfOspfVirtIfTxDBDescripts, wfOspfBackupDisable=wfOspfBackupDisable, wfOspfSlotPriority=wfOspfSlotPriority, wfOspfVirtNbrState=wfOspfVirtNbrState, wfOspfIfEntry=wfOspfIfEntry, wfOspfIfTable=wfOspfIfTable, wfOspfBackupLsdbAge=wfOspfBackupLsdbAge, wfMospfForwardDownstream=wfMospfForwardDownstream, wfOspfGeneralDisable=wfOspfGeneralDisable, wfOspfLsdbAge=wfOspfLsdbAge, wfOspfNbrRtrId=wfOspfNbrRtrId, wfOspfDynNbrLSRetransQLen=wfOspfDynNbrLSRetransQLen, wfOspfAuthType=wfOspfAuthType, wfOspfDynNbrTable=wfOspfDynNbrTable, wfOspfDynNbrEntry=wfOspfDynNbrEntry, wfOspfVirtIfDelete=wfOspfVirtIfDelete, wfOspfMtuSize=wfOspfMtuSize, wfOspfVirtIfTxLinkStateAcks=wfOspfVirtIfTxLinkStateAcks, wfOspfAddressLessIf=wfOspfAddressLessIf, wfOspfNbrPriority=wfOspfNbrPriority, wfOspfDeterministicMcastHoldDown=wfOspfDeterministicMcastHoldDown, wfOspfIfRtrDeadInterval=wfOspfIfRtrDeadInterval, wfOspfVirtIfDrops=wfOspfVirtIfDrops, wfOspfNbrIpAddr=wfOspfNbrIpAddr, wfOspfAreaRangeMask=wfOspfAreaRangeMask, wfOspfVirtIfTransitDelay=wfOspfVirtIfTransitDelay, wfOspfNSSARangeTable=wfOspfNSSARangeTable, wfOspfIfTxHellos=wfOspfIfTxHellos, wfMospfForwardBwBucketRate=wfMospfForwardBwBucketRate, wfOspfAreaRangeAreaID=wfOspfAreaRangeAreaID, wfOspfAreaRangeTable=wfOspfAreaRangeTable, wfOspfAreaId=wfOspfAreaId, wfOspfAreaState=wfOspfAreaState, wfOspfVirtIfTxLinkStateReqs=wfOspfVirtIfTxLinkStateReqs, wfOspfVirtNbrEntry=wfOspfVirtNbrEntry, wfMospfForwardTable=wfMospfForwardTable, wfOspfMulticastDeterministic=wfOspfMulticastDeterministic, wfOspfLsaRefreshDelay=wfOspfLsaRefreshDelay, wfOspfDynNbrPriority=wfOspfDynNbrPriority, wfOspfIfTxLinkStateAcks=wfOspfIfTxLinkStateAcks, wfOspfAreaRangeState=wfOspfAreaRangeState, wfOspfNbrIfAddr=wfOspfNbrIfAddr, wfOspfAseTagDefault=wfOspfAseTagDefault, wfOspfNSSARangeMask=wfOspfNSSARangeMask, wfOspfBackupLsdbAreaId=wfOspfBackupLsdbAreaId, wfOspfIfBwRate=wfOspfIfBwRate, wfOspfAreaTable=wfOspfAreaTable, wfOspfOpaqueCapability=wfOspfOpaqueCapability, wfOspfIfDesignatedRouter=wfOspfIfDesignatedRouter, wfOspfNbrDelete=wfOspfNbrDelete, wfMospfForwardAge=wfMospfForwardAge, wfOspfBackupLsdbMetric=wfOspfBackupLsdbMetric, wfOspfAreaNssaDefaultRoutePathType=wfOspfAreaNssaDefaultRoutePathType, wfOspfVirtIfRtrDeadInterval=wfOspfVirtIfRtrDeadInterval, wfOspfNSSARangeDelete=wfOspfNSSARangeDelete, wfOspfBackupLsdbAseType=wfOspfBackupLsdbAseType, wfOspfIfPollInterval=wfOspfIfPollInterval, wfOspfIfRxLinkStateUpds=wfOspfIfRxLinkStateUpds, wfOspfLsdbTable=wfOspfLsdbTable, wfMospfEntryTimeoutValue=wfMospfEntryTimeoutValue, wfOspfNbrOptions=wfOspfNbrOptions, wfOspfImportASExtern=wfOspfImportASExtern, wfOspfPrimaryLogMask=wfOspfPrimaryLogMask, wfOspfAreaRangeStatus=wfOspfAreaRangeStatus, wfOspfIfRxDBDescripts=wfOspfIfRxDBDescripts, wfOspfLsdbAseTag=wfOspfLsdbAseTag, wfMospfForwardFlag=wfMospfForwardFlag, wfOspfMaxQueuedMcastPkts=wfOspfMaxQueuedMcastPkts, wfOspfAreaNssaTranslateStatus=wfOspfAreaNssaTranslateStatus, wfOspfAreaRangeDelete=wfOspfAreaRangeDelete, wfOspfVirtIfAreaID=wfOspfVirtIfAreaID, wfOspfNSSARangeNet=wfOspfNSSARangeNet, wfOspfBackupLogMask=wfOspfBackupLogMask, wfOspfLsdbAreaId=wfOspfLsdbAreaId, wfOspfVirtIfTxLinkStateUpds=wfOspfVirtIfTxLinkStateUpds, wfOspfIfMtuMismatchDetect=wfOspfIfMtuMismatchDetect, wfOspfSlotMask=wfOspfSlotMask)
