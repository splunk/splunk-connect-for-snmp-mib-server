#
# PySNMP MIB module DellrPDU-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/DellrPDU-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 18:43:20 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ValueSizeConstraint, ValueRangeConstraint, ConstraintsIntersection, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ValueSizeConstraint", "ValueRangeConstraint", "ConstraintsIntersection", "SingleValueConstraint")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
ObjectIdentity, MibIdentifier, Counter64, MibScalar, MibTable, MibTableRow, MibTableColumn, Bits, TimeTicks, Counter32, NotificationType, iso, enterprises, Gauge32, IpAddress, Unsigned32, ModuleIdentity, Integer32, NotificationType = mibBuilder.importSymbols("SNMPv2-SMI", "ObjectIdentity", "MibIdentifier", "Counter64", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Bits", "TimeTicks", "Counter32", "NotificationType", "iso", "enterprises", "Gauge32", "IpAddress", "Unsigned32", "ModuleIdentity", "Integer32", "NotificationType")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
dell = MibIdentifier((1, 3, 6, 1, 4, 1, 674))
pdu = MibIdentifier((1, 3, 6, 1, 4, 1, 674, 10903))
pdusub = MibIdentifier((1, 3, 6, 1, 4, 1, 674, 10903, 200))
software = MibIdentifier((1, 3, 6, 1, 4, 1, 674, 10903, 200, 1))
hardware = MibIdentifier((1, 3, 6, 1, 4, 1, 674, 10903, 200, 2))
system = MibIdentifier((1, 3, 6, 1, 4, 1, 674, 10903, 200, 3))
sysRPDUV1 = MibIdentifier((1, 3, 6, 1, 4, 1, 674, 10903, 200, 3, 1))
class RpduEnableDisableType(Integer32):
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("disabled", 1), ("enabled", 2))

class RpduNormalAlarmType(Integer32):
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("normal", 1), ("alarm", 2))

class RpduCommNoneOKLostType(Integer32):
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3))
    namedValues = NamedValues(("notInstalled", 1), ("commsOK", 2), ("commsLost", 3))

class RpduLowNormalNearOverloadType(Integer32):
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))
    namedValues = NamedValues(("lowLoad", 1), ("normal", 2), ("nearOverload", 3), ("overload", 4))

class RpduNotPBMinLowNrmlOHiMaxType(Integer32):
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))
    namedValues = NamedValues(("notPresent", 1), ("belowMin", 2), ("belowLow", 3), ("normal", 4), ("overHigh", 5), ("overMax", 6))

class RpduOtherToNonrecoverableType(Integer32):
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))
    namedValues = NamedValues(("other", 1), ("unknown", 2), ("ok", 3), ("non-critical", 4), ("critical", 5), ("non-recoverable", 6))

class RpduOutletPhaseLayoutType(Integer32):
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))
    namedValues = NamedValues(("seqPhase1ToNeutral", 1), ("seqPhase2ToNeutral", 2), ("seqPhase3ToNeutral", 3), ("seqPhase1ToPhase2", 4), ("seqPhase2ToPhase3", 5), ("seqPhase3ToPhase1", 6))

productID = MibIdentifier((1, 3, 6, 1, 4, 1, 674, 10903, 200, 2, 100))
productIDDisplayName = MibScalar((1, 3, 6, 1, 4, 1, 674, 10903, 200, 2, 100, 1), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: productIDDisplayName.setStatus('mandatory')
productIDDescription = MibScalar((1, 3, 6, 1, 4, 1, 674, 10903, 200, 2, 100, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: productIDDescription.setStatus('mandatory')
productIDVendor = MibScalar((1, 3, 6, 1, 4, 1, 674, 10903, 200, 2, 100, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: productIDVendor.setStatus('mandatory')
productIDVersion = MibScalar((1, 3, 6, 1, 4, 1, 674, 10903, 200, 2, 100, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: productIDVersion.setStatus('mandatory')
productIDBuildNumber = MibScalar((1, 3, 6, 1, 4, 1, 674, 10903, 200, 2, 100, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: productIDBuildNumber.setStatus('mandatory')
productIDURL = MibScalar((1, 3, 6, 1, 4, 1, 674, 10903, 200, 2, 100, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: productIDURL.setStatus('mandatory')
productIDDeviceNetworkName = MibScalar((1, 3, 6, 1, 4, 1, 674, 10903, 200, 2, 100, 7), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: productIDDeviceNetworkName.setStatus('mandatory')
productStatus = MibIdentifier((1, 3, 6, 1, 4, 1, 674, 10903, 200, 2, 110))
productStatusGlobalStatus = MibScalar((1, 3, 6, 1, 4, 1, 674, 10903, 200, 2, 110, 1), RpduOtherToNonrecoverableType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: productStatusGlobalStatus.setStatus('mandatory')
productStatusLastGlobalStatus = MibScalar((1, 3, 6, 1, 4, 1, 674, 10903, 200, 2, 110, 2), RpduOtherToNonrecoverableType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: productStatusLastGlobalStatus.setStatus('mandatory')
productStatusTimeStamp = MibScalar((1, 3, 6, 1, 4, 1, 674, 10903, 200, 2, 110, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: productStatusTimeStamp.setStatus('mandatory')
productStatusRESERVED1 = MibScalar((1, 3, 6, 1, 4, 1, 674, 10903, 200, 2, 110, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: productStatusRESERVED1.setStatus('mandatory')
productStatusRESERVED2 = MibScalar((1, 3, 6, 1, 4, 1, 674, 10903, 200, 2, 110, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: productStatusRESERVED2.setStatus('mandatory')
productStatusRESERVED3 = MibScalar((1, 3, 6, 1, 4, 1, 674, 10903, 200, 2, 110, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: productStatusRESERVED3.setStatus('mandatory')
rPDU = MibIdentifier((1, 3, 6, 1, 4, 1, 674, 10903, 200, 2, 200))
rPDUIdentD = MibIdentifier((1, 3, 6, 1, 4, 1, 674, 10903, 200, 2, 200, 100))
rPDUIdentTableSize = MibScalar((1, 3, 6, 1, 4, 1, 674, 10903, 200, 2, 200, 100, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rPDUIdentTableSize.setStatus('mandatory')
rPDUIdentTable = MibTable((1, 3, 6, 1, 4, 1, 674, 10903, 200, 2, 200, 100, 2), )
if mibBuilder.loadTexts: rPDUIdentTable.setStatus('mandatory')
rPDUIdentEntry = MibTableRow((1, 3, 6, 1, 4, 1, 674, 10903, 200, 2, 200, 100, 2, 1), ).setIndexNames((0, "DellrPDU-MIB", "rPDUIdentIndex"))
if mibBuilder.loadTexts: rPDUIdentEntry.setStatus('mandatory')
rPDUIdentIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10903, 200, 2, 200, 100, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rPDUIdentIndex.setStatus('mandatory')
rPDUIdentNameD = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10903, 200, 2, 200, 100, 2, 1, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rPDUIdentNameD.setStatus('mandatory')
rPDUIdentLocation = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10903, 200, 2, 200, 100, 2, 1, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rPDUIdentLocation.setStatus('mandatory')
rPDUIdentHardwareRevD = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10903, 200, 2, 200, 100, 2, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rPDUIdentHardwareRevD.setStatus('mandatory')
rPDUIdentFirmwareRevD = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10903, 200, 2, 200, 100, 2, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rPDUIdentFirmwareRevD.setStatus('mandatory')
rPDUIdentDateOfManufactureD = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10903, 200, 2, 200, 100, 2, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rPDUIdentDateOfManufactureD.setStatus('mandatory')
rPDUIdentModelNumberD = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10903, 200, 2, 200, 100, 2, 1, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rPDUIdentModelNumberD.setStatus('mandatory')
rPDUIdentSerialNumberD = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10903, 200, 2, 200, 100, 2, 1, 8), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rPDUIdentSerialNumberD.setStatus('mandatory')
rPDUDevice = MibIdentifier((1, 3, 6, 1, 4, 1, 674, 10903, 200, 2, 200, 110))
rPDUDeviceTableSize = MibScalar((1, 3, 6, 1, 4, 1, 674, 10903, 200, 2, 200, 110, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rPDUDeviceTableSize.setStatus('mandatory')
rPDUDeviceStatusTable = MibTable((1, 3, 6, 1, 4, 1, 674, 10903, 200, 2, 200, 110, 2), )
if mibBuilder.loadTexts: rPDUDeviceStatusTable.setStatus('mandatory')
rPDUDeviceStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 674, 10903, 200, 2, 200, 110, 2, 1), ).setIndexNames((0, "DellrPDU-MIB", "rPDUDeviceStatusIndex"))
if mibBuilder.loadTexts: rPDUDeviceStatusEntry.setStatus('mandatory')
rPDUDeviceStatusIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10903, 200, 2, 200, 110, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rPDUDeviceStatusIndex.setStatus('mandatory')
rPDUDeviceStatusName = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10903, 200, 2, 200, 110, 2, 1, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rPDUDeviceStatusName.setStatus('mandatory')
rPDUDeviceStatusPower = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10903, 200, 2, 200, 110, 2, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rPDUDeviceStatusPower.setStatus('mandatory')
rPDUDeviceStatusEnergy = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10903, 200, 2, 200, 110, 2, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rPDUDeviceStatusEnergy.setStatus('mandatory')
rPDUDeviceStatusCommandPending = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10903, 200, 2, 200, 110, 2, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("commandPending", 1), ("noCommandPending", 2), ("commandPendingUnknown", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rPDUDeviceStatusCommandPending.setStatus('mandatory')
rPDUDeviceStatusLoadState = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10903, 200, 2, 200, 110, 2, 1, 6), RpduLowNormalNearOverloadType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rPDUDeviceStatusLoadState.setStatus('mandatory')
rPDUDeviceConfigTable = MibTable((1, 3, 6, 1, 4, 1, 674, 10903, 200, 2, 200, 110, 3), )
if mibBuilder.loadTexts: rPDUDeviceConfigTable.setStatus('mandatory')
rPDUDeviceConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 674, 10903, 200, 2, 200, 110, 3, 1), ).setIndexNames((0, "DellrPDU-MIB", "rPDUDeviceConfigIndex"))
if mibBuilder.loadTexts: rPDUDeviceConfigEntry.setStatus('mandatory')
rPDUDeviceConfigIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10903, 200, 2, 200, 110, 3, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rPDUDeviceConfigIndex.setStatus('mandatory')
rPDUDeviceConfigName = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10903, 200, 2, 200, 110, 3, 1, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rPDUDeviceConfigName.setStatus('mandatory')
rPDUDeviceConfigLocation = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10903, 200, 2, 200, 110, 3, 1, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rPDUDeviceConfigLocation.setStatus('mandatory')
rPDUDeviceConfigColdstartDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10903, 200, 2, 200, 110, 3, 1, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rPDUDeviceConfigColdstartDelay.setStatus('mandatory')
rPDUDeviceCfgLowLoadPwrThresh = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10903, 200, 2, 200, 110, 3, 1, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rPDUDeviceCfgLowLoadPwrThresh.setStatus('mandatory')
rPDUDeviceCfgNerOvloadPwrThresh = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10903, 200, 2, 200, 110, 3, 1, 6), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rPDUDeviceCfgNerOvloadPwrThresh.setStatus('mandatory')
rPDUDeviceCfgOverloadPwrThresh = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10903, 200, 2, 200, 110, 3, 1, 7), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rPDUDeviceCfgOverloadPwrThresh.setStatus('mandatory')
rPDUDeviceConfigPowerHeadroom = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10903, 200, 2, 200, 110, 3, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rPDUDeviceConfigPowerHeadroom.setStatus('mandatory')
rPDUDeviceConfigPeakPower = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10903, 200, 2, 200, 110, 3, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rPDUDeviceConfigPeakPower.setStatus('mandatory')
rPDUDeviceCfgPeakPwrStartTime = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10903, 200, 2, 200, 110, 3, 1, 10), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rPDUDeviceCfgPeakPwrStartTime.setStatus('mandatory')
rPDUDeviceConfigPeakPwrCapTime = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10903, 200, 2, 200, 110, 3, 1, 11), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rPDUDeviceConfigPeakPwrCapTime.setStatus('mandatory')
rPDUDeviceCfgPeakPowerHeadroom = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10903, 200, 2, 200, 110, 3, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rPDUDeviceCfgPeakPowerHeadroom.setStatus('mandatory')
rPDUDeviceCfgEnergyStartTime = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10903, 200, 2, 200, 110, 3, 1, 13), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rPDUDeviceCfgEnergyStartTime.setStatus('mandatory')
rPDUDevicePropertiesTable = MibTable((1, 3, 6, 1, 4, 1, 674, 10903, 200, 2, 200, 110, 4), )
if mibBuilder.loadTexts: rPDUDevicePropertiesTable.setStatus('mandatory')
rPDUDevicePropertiesEntry = MibTableRow((1, 3, 6, 1, 4, 1, 674, 10903, 200, 2, 200, 110, 4, 1), ).setIndexNames((0, "DellrPDU-MIB", "rPDUDevicePropertiesIndex"))
if mibBuilder.loadTexts: rPDUDevicePropertiesEntry.setStatus('mandatory')
rPDUDevicePropertiesIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10903, 200, 2, 200, 110, 4, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rPDUDevicePropertiesIndex.setStatus('mandatory')
rPDUDevicePropertiesName = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10903, 200, 2, 200, 110, 4, 1, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rPDUDevicePropertiesName.setStatus('mandatory')
rPDUDevicePropertiesNumOutlets = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10903, 200, 2, 200, 110, 4, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rPDUDevicePropertiesNumOutlets.setStatus('mandatory')
rPDUDevicePropertiesNumSwdOuts = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10903, 200, 2, 200, 110, 4, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rPDUDevicePropertiesNumSwdOuts.setStatus('mandatory')
rPDUDevicePropertiesNumMtrdOuts = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10903, 200, 2, 200, 110, 4, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rPDUDevicePropertiesNumMtrdOuts.setStatus('mandatory')
rPDUDevicePropertiesNumPhases = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10903, 200, 2, 200, 110, 4, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rPDUDevicePropertiesNumPhases.setStatus('mandatory')
rPDUDevicePropertiesNumBreakers = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10903, 200, 2, 200, 110, 4, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rPDUDevicePropertiesNumBreakers.setStatus('mandatory')
rPDUDevicePropertiesMaxCurntRtg = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10903, 200, 2, 200, 110, 4, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rPDUDevicePropertiesMaxCurntRtg.setStatus('mandatory')
rPDUDevicePropertiesOutlayout = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10903, 200, 2, 200, 110, 4, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("phaseToNeutral", 1), ("phaseToPhase", 2), ("phaseToNeutralGrouped", 3), ("phaseToPhaseGrouped", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rPDUDevicePropertiesOutlayout.setStatus('mandatory')
rPDUDeviceControlTable = MibTable((1, 3, 6, 1, 4, 1, 674, 10903, 200, 2, 200, 110, 5), )
if mibBuilder.loadTexts: rPDUDeviceControlTable.setStatus('mandatory')
rPDUDeviceControlEntry = MibTableRow((1, 3, 6, 1, 4, 1, 674, 10903, 200, 2, 200, 110, 5, 1), ).setIndexNames((0, "DellrPDU-MIB", "rPDUDeviceControlIndex"))
if mibBuilder.loadTexts: rPDUDeviceControlEntry.setStatus('mandatory')
rPDUDeviceControlIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10903, 200, 2, 200, 110, 5, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rPDUDeviceControlIndex.setStatus('mandatory')
rPDUDeviceControlName = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10903, 200, 2, 200, 110, 5, 1, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rPDUDeviceControlName.setStatus('mandatory')
rPDUDeviceControlCommand = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10903, 200, 2, 200, 110, 5, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("turnAllOnNow", 1), ("turnAllOnSequence", 2), ("turnAllOffNow", 3), ("rebootAllNow", 4), ("rebootAllSequence", 5), ("noCommand", 6), ("turnAllOffSequence", 7)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rPDUDeviceControlCommand.setStatus('mandatory')
rPDUPhase = MibIdentifier((1, 3, 6, 1, 4, 1, 674, 10903, 200, 2, 200, 120))
rPDUPhaseTableSize = MibScalar((1, 3, 6, 1, 4, 1, 674, 10903, 200, 2, 200, 120, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rPDUPhaseTableSize.setStatus('mandatory')
rPDUPhaseStatusTable = MibTable((1, 3, 6, 1, 4, 1, 674, 10903, 200, 2, 200, 120, 2), )
if mibBuilder.loadTexts: rPDUPhaseStatusTable.setStatus('mandatory')
rPDUPhaseStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 674, 10903, 200, 2, 200, 120, 2, 1), ).setIndexNames((0, "DellrPDU-MIB", "rPDUPhaseStatusIndex"))
if mibBuilder.loadTexts: rPDUPhaseStatusEntry.setStatus('mandatory')
rPDUPhaseStatusIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10903, 200, 2, 200, 120, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rPDUPhaseStatusIndex.setStatus('mandatory')
rPDUPhaseStatusNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10903, 200, 2, 200, 120, 2, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rPDUPhaseStatusNumber.setStatus('mandatory')
rPDUPhaseStatusLoadState = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10903, 200, 2, 200, 120, 2, 1, 3), RpduLowNormalNearOverloadType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rPDUPhaseStatusLoadState.setStatus('mandatory')
rPDUPhaseStatusCurrent = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10903, 200, 2, 200, 120, 2, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rPDUPhaseStatusCurrent.setStatus('mandatory')
rPDUPhaseStatusVoltage = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10903, 200, 2, 200, 120, 2, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rPDUPhaseStatusVoltage.setStatus('mandatory')
rPDUPhaseStatusPower = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10903, 200, 2, 200, 120, 2, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rPDUPhaseStatusPower.setStatus('mandatory')
rPDUPhaseConfigTable = MibTable((1, 3, 6, 1, 4, 1, 674, 10903, 200, 2, 200, 120, 3), )
if mibBuilder.loadTexts: rPDUPhaseConfigTable.setStatus('mandatory')
rPDUPhaseConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 674, 10903, 200, 2, 200, 120, 3, 1), ).setIndexNames((0, "DellrPDU-MIB", "rPDUPhaseConfigIndex"))
if mibBuilder.loadTexts: rPDUPhaseConfigEntry.setStatus('mandatory')
rPDUPhaseConfigIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10903, 200, 2, 200, 120, 3, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rPDUPhaseConfigIndex.setStatus('mandatory')
rPDUPhaseConfigNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10903, 200, 2, 200, 120, 3, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rPDUPhaseConfigNumber.setStatus('mandatory')
rPDUPhaseCfgOverloadRestriction = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10903, 200, 2, 200, 120, 3, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("alwaysAllowTurnON", 1), ("restrictOnNearOverload", 2), ("restrictOnOverload", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rPDUPhaseCfgOverloadRestriction.setStatus('mandatory')
rPDUPhCfgLowLoadCurntThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10903, 200, 2, 200, 120, 3, 1, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rPDUPhCfgLowLoadCurntThreshold.setStatus('mandatory')
rPDUPhCfgNerOverloadCurntThresh = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10903, 200, 2, 200, 120, 3, 1, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rPDUPhCfgNerOverloadCurntThresh.setStatus('mandatory')
rPDUPhCfgOverloadCurntThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10903, 200, 2, 200, 120, 3, 1, 6), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rPDUPhCfgOverloadCurntThreshold.setStatus('mandatory')
rPDUOutlet = MibIdentifier((1, 3, 6, 1, 4, 1, 674, 10903, 200, 2, 200, 130))
rPDUOutletSwitched = MibIdentifier((1, 3, 6, 1, 4, 1, 674, 10903, 200, 2, 200, 130, 1))
rPDUOutletSwitchedTableSize = MibScalar((1, 3, 6, 1, 4, 1, 674, 10903, 200, 2, 200, 130, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rPDUOutletSwitchedTableSize.setStatus('mandatory')
rPDUOutletSwitchedStatusTable = MibTable((1, 3, 6, 1, 4, 1, 674, 10903, 200, 2, 200, 130, 1, 2), )
if mibBuilder.loadTexts: rPDUOutletSwitchedStatusTable.setStatus('mandatory')
rPDUOutletSwitchedStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 674, 10903, 200, 2, 200, 130, 1, 2, 1), ).setIndexNames((0, "DellrPDU-MIB", "rPDUOutletSwitchedStatusIndex"))
if mibBuilder.loadTexts: rPDUOutletSwitchedStatusEntry.setStatus('mandatory')
rPDUOutletSwitchedStatusIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10903, 200, 2, 200, 130, 1, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rPDUOutletSwitchedStatusIndex.setStatus('mandatory')
rPDUOutletSwitchedStatusNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10903, 200, 2, 200, 130, 1, 2, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rPDUOutletSwitchedStatusNumber.setStatus('mandatory')
rPDUOutletSwitchedStatusName = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10903, 200, 2, 200, 130, 1, 2, 1, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rPDUOutletSwitchedStatusName.setStatus('mandatory')
rPDUOutletSwitchedStatusState = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10903, 200, 2, 200, 130, 1, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("on", 1), ("off", 2), ("unknown", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rPDUOutletSwitchedStatusState.setStatus('mandatory')
rPDUOutletSwitchedStatCmdPnding = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10903, 200, 2, 200, 130, 1, 2, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("commandPending", 1), ("noCommandPending", 2), ("commandPendingUnknown", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rPDUOutletSwitchedStatCmdPnding.setStatus('mandatory')
rPDUOutletSwitchedStatPhLayout = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10903, 200, 2, 200, 130, 1, 2, 1, 6), RpduOutletPhaseLayoutType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rPDUOutletSwitchedStatPhLayout.setStatus('mandatory')
rPDUOutletSwitchedConfigTable = MibTable((1, 3, 6, 1, 4, 1, 674, 10903, 200, 2, 200, 130, 1, 3), )
if mibBuilder.loadTexts: rPDUOutletSwitchedConfigTable.setStatus('mandatory')
rPDUOutletSwitchedConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 674, 10903, 200, 2, 200, 130, 1, 3, 1), ).setIndexNames((0, "DellrPDU-MIB", "rPDUOutletSwitchedConfigIndex"))
if mibBuilder.loadTexts: rPDUOutletSwitchedConfigEntry.setStatus('mandatory')
rPDUOutletSwitchedConfigIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10903, 200, 2, 200, 130, 1, 3, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rPDUOutletSwitchedConfigIndex.setStatus('mandatory')
rPDUOutletSwitchedConfigNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10903, 200, 2, 200, 130, 1, 3, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rPDUOutletSwitchedConfigNumber.setStatus('mandatory')
rPDUOutletSwitchedConfigName = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10903, 200, 2, 200, 130, 1, 3, 1, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rPDUOutletSwitchedConfigName.setStatus('mandatory')
rPDUOutSwitchedCfgPowerOnTime = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10903, 200, 2, 200, 130, 1, 3, 1, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rPDUOutSwitchedCfgPowerOnTime.setStatus('mandatory')
rPDUOutSwitchedCfgPowerOffTime = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10903, 200, 2, 200, 130, 1, 3, 1, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rPDUOutSwitchedCfgPowerOffTime.setStatus('mandatory')
rPDUOutSwtchedCfgRebootDuration = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10903, 200, 2, 200, 130, 1, 3, 1, 6), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rPDUOutSwtchedCfgRebootDuration.setStatus('mandatory')
rPDUOutletSwitchedControlTable = MibTable((1, 3, 6, 1, 4, 1, 674, 10903, 200, 2, 200, 130, 1, 4), )
if mibBuilder.loadTexts: rPDUOutletSwitchedControlTable.setStatus('mandatory')
rPDUOutletSwitchedControlEntry = MibTableRow((1, 3, 6, 1, 4, 1, 674, 10903, 200, 2, 200, 130, 1, 4, 1), ).setIndexNames((0, "DellrPDU-MIB", "rPDUOutletSwitchedControlIndex"))
if mibBuilder.loadTexts: rPDUOutletSwitchedControlEntry.setStatus('mandatory')
rPDUOutletSwitchedControlIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10903, 200, 2, 200, 130, 1, 4, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rPDUOutletSwitchedControlIndex.setStatus('mandatory')
rPDUOutletSwitchedControlNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10903, 200, 2, 200, 130, 1, 4, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rPDUOutletSwitchedControlNumber.setStatus('mandatory')
rPDUOutletSwitchedControlName = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10903, 200, 2, 200, 130, 1, 4, 1, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rPDUOutletSwitchedControlName.setStatus('mandatory')
rPDUOutletSwitchedControlCmd = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10903, 200, 2, 200, 130, 1, 4, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("outletOn", 1), ("outletOff", 2), ("outletReboot", 3), ("outletUnknown", 4), ("outletOnWithDelay", 5), ("outletOffWithDelay", 6), ("outletRebootWithDelay", 7)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rPDUOutletSwitchedControlCmd.setStatus('mandatory')
rPDUOutletMetered = MibIdentifier((1, 3, 6, 1, 4, 1, 674, 10903, 200, 2, 200, 130, 2))
rPDUOutletMeteredTableSize = MibScalar((1, 3, 6, 1, 4, 1, 674, 10903, 200, 2, 200, 130, 2, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rPDUOutletMeteredTableSize.setStatus('mandatory')
rPDUOutletMeteredStatusTable = MibTable((1, 3, 6, 1, 4, 1, 674, 10903, 200, 2, 200, 130, 2, 2), )
if mibBuilder.loadTexts: rPDUOutletMeteredStatusTable.setStatus('mandatory')
rPDUOutletMeteredStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 674, 10903, 200, 2, 200, 130, 2, 2, 1), ).setIndexNames((0, "DellrPDU-MIB", "rPDUOutletMeteredStatusIndex"))
if mibBuilder.loadTexts: rPDUOutletMeteredStatusEntry.setStatus('mandatory')
rPDUOutletMeteredStatusIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10903, 200, 2, 200, 130, 2, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rPDUOutletMeteredStatusIndex.setStatus('mandatory')
rPDUOutletMeteredStatusNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10903, 200, 2, 200, 130, 2, 2, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rPDUOutletMeteredStatusNumber.setStatus('mandatory')
rPDUOutletMeteredStatusName = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10903, 200, 2, 200, 130, 2, 2, 1, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rPDUOutletMeteredStatusName.setStatus('mandatory')
rPDUOutletMeteredStatusLayout = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10903, 200, 2, 200, 130, 2, 2, 1, 4), RpduOutletPhaseLayoutType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rPDUOutletMeteredStatusLayout.setStatus('mandatory')
rPDUOutMeteredStatPowerRating = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10903, 200, 2, 200, 130, 2, 2, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rPDUOutMeteredStatPowerRating.setStatus('mandatory')
rPDUOutletMeteredStatusCurrent = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10903, 200, 2, 200, 130, 2, 2, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rPDUOutletMeteredStatusCurrent.setStatus('mandatory')
rPDUOutletMeteredStatusEnergy = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10903, 200, 2, 200, 130, 2, 2, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rPDUOutletMeteredStatusEnergy.setStatus('mandatory')
rPDUOutletMeteredStatusPower = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10903, 200, 2, 200, 130, 2, 2, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rPDUOutletMeteredStatusPower.setStatus('mandatory')
rPDUOutletMeteredStatPeakPower = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10903, 200, 2, 200, 130, 2, 2, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rPDUOutletMeteredStatPeakPower.setStatus('mandatory')
rPDUOutMeteredStatPeakPwrTime = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10903, 200, 2, 200, 130, 2, 2, 1, 10), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rPDUOutMeteredStatPeakPwrTime.setStatus('mandatory')
rPDUOutMeteredStatusLoadState = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10903, 200, 2, 200, 130, 2, 2, 1, 11), RpduLowNormalNearOverloadType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rPDUOutMeteredStatusLoadState.setStatus('mandatory')
rPDUOutletMeteredConfigTable = MibTable((1, 3, 6, 1, 4, 1, 674, 10903, 200, 2, 200, 130, 2, 4), )
if mibBuilder.loadTexts: rPDUOutletMeteredConfigTable.setStatus('mandatory')
rPDUOutletMeteredConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 674, 10903, 200, 2, 200, 130, 2, 4, 1), ).setIndexNames((0, "DellrPDU-MIB", "rPDUOutletMeteredConfigIndex"))
if mibBuilder.loadTexts: rPDUOutletMeteredConfigEntry.setStatus('mandatory')
rPDUOutletMeteredConfigIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10903, 200, 2, 200, 130, 2, 4, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rPDUOutletMeteredConfigIndex.setStatus('mandatory')
rPDUOutletMeteredConfigNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10903, 200, 2, 200, 130, 2, 4, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rPDUOutletMeteredConfigNumber.setStatus('mandatory')
rPDUOutletMeteredConfigName = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10903, 200, 2, 200, 130, 2, 4, 1, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rPDUOutletMeteredConfigName.setStatus('mandatory')
rPDUOutMtredCfgLowLdCurntThresh = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10903, 200, 2, 200, 130, 2, 4, 1, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rPDUOutMtredCfgLowLdCurntThresh.setStatus('mandatory')
rPDUOutMtrdCfgNrOvdCurntThresh = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10903, 200, 2, 200, 130, 2, 4, 1, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rPDUOutMtrdCfgNrOvdCurntThresh.setStatus('mandatory')
rPDUOutMtredCfgOvrldCurntThresh = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10903, 200, 2, 200, 130, 2, 4, 1, 6), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rPDUOutMtredCfgOvrldCurntThresh.setStatus('mandatory')
rPDUOutMeteredEnergyStartTime = MibScalar((1, 3, 6, 1, 4, 1, 674, 10903, 200, 2, 200, 130, 2, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rPDUOutMeteredEnergyStartTime.setStatus('mandatory')
rPDUOutMeteredPeakPwrStartTime = MibScalar((1, 3, 6, 1, 4, 1, 674, 10903, 200, 2, 200, 130, 2, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rPDUOutMeteredPeakPwrStartTime.setStatus('mandatory')
rPDUPowerSupply = MibIdentifier((1, 3, 6, 1, 4, 1, 674, 10903, 200, 2, 200, 140))
rPDUPowerSupplyAlarmD = MibScalar((1, 3, 6, 1, 4, 1, 674, 10903, 200, 2, 200, 140, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("allAvailablePowerSuppliesOK", 1), ("powerSupplyFailed", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rPDUPowerSupplyAlarmD.setStatus('mandatory')
rPDUPowerSupplyVoltage = MibScalar((1, 3, 6, 1, 4, 1, 674, 10903, 200, 2, 200, 140, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rPDUPowerSupplyVoltage.setStatus('mandatory')
rPDUSensor = MibIdentifier((1, 3, 6, 1, 4, 1, 674, 10903, 200, 2, 200, 150))
rPDUSensorStatus = MibIdentifier((1, 3, 6, 1, 4, 1, 674, 10903, 200, 2, 200, 150, 1))
rPDUSensorStatusTableSize = MibScalar((1, 3, 6, 1, 4, 1, 674, 10903, 200, 2, 200, 150, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rPDUSensorStatusTableSize.setStatus('mandatory')
rPDUSensorStatusTable = MibTable((1, 3, 6, 1, 4, 1, 674, 10903, 200, 2, 200, 150, 1, 2), )
if mibBuilder.loadTexts: rPDUSensorStatusTable.setStatus('mandatory')
rPDUSensorStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 674, 10903, 200, 2, 200, 150, 1, 2, 1), ).setIndexNames((0, "DellrPDU-MIB", "rPDUSensorStatusIndex"))
if mibBuilder.loadTexts: rPDUSensorStatusEntry.setStatus('mandatory')
rPDUSensorStatusIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10903, 200, 2, 200, 150, 1, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rPDUSensorStatusIndex.setStatus('mandatory')
rPDUSensorStatusName = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10903, 200, 2, 200, 150, 1, 2, 1, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rPDUSensorStatusName.setStatus('mandatory')
rPDUSensorStatusType = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10903, 200, 2, 200, 150, 1, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("none", 1), ("temperature", 2), ("temperatureHumidity", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rPDUSensorStatusType.setStatus('mandatory')
rPDUSensorTemp = MibIdentifier((1, 3, 6, 1, 4, 1, 674, 10903, 200, 2, 200, 150, 2))
rPDUSensorTempTableSize = MibScalar((1, 3, 6, 1, 4, 1, 674, 10903, 200, 2, 200, 150, 2, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rPDUSensorTempTableSize.setStatus('mandatory')
rPDUSensorTempStatusTable = MibTable((1, 3, 6, 1, 4, 1, 674, 10903, 200, 2, 200, 150, 2, 2), )
if mibBuilder.loadTexts: rPDUSensorTempStatusTable.setStatus('mandatory')
rPDUSensorTempStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 674, 10903, 200, 2, 200, 150, 2, 2, 1), ).setIndexNames((0, "DellrPDU-MIB", "rPDUSensorTempStatusIndex"))
if mibBuilder.loadTexts: rPDUSensorTempStatusEntry.setStatus('mandatory')
rPDUSensorTempStatusIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10903, 200, 2, 200, 150, 2, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rPDUSensorTempStatusIndex.setStatus('mandatory')
rPDUSensorTempStatusName = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10903, 200, 2, 200, 150, 2, 2, 1, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rPDUSensorTempStatusName.setStatus('mandatory')
rPDUSensorTempStatusCommStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10903, 200, 2, 200, 150, 2, 2, 1, 3), RpduCommNoneOKLostType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rPDUSensorTempStatusCommStatus.setStatus('mandatory')
rPDUSensorTempStatusTempF = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10903, 200, 2, 200, 150, 2, 2, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rPDUSensorTempStatusTempF.setStatus('mandatory')
rPDUSensorTempStatusTempC = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10903, 200, 2, 200, 150, 2, 2, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rPDUSensorTempStatusTempC.setStatus('mandatory')
rPDUSensorTempStatusAlarmStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10903, 200, 2, 200, 150, 2, 2, 1, 6), RpduNotPBMinLowNrmlOHiMaxType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rPDUSensorTempStatusAlarmStatus.setStatus('mandatory')
rPDUSensorTempConfigTable = MibTable((1, 3, 6, 1, 4, 1, 674, 10903, 200, 2, 200, 150, 2, 3), )
if mibBuilder.loadTexts: rPDUSensorTempConfigTable.setStatus('mandatory')
rPDUSensorTempConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 674, 10903, 200, 2, 200, 150, 2, 3, 1), ).setIndexNames((0, "DellrPDU-MIB", "rPDUSensorTempConfigIndex"))
if mibBuilder.loadTexts: rPDUSensorTempConfigEntry.setStatus('mandatory')
rPDUSensorTempConfigIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10903, 200, 2, 200, 150, 2, 3, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rPDUSensorTempConfigIndex.setStatus('mandatory')
rPDUSensorTempConfigName = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10903, 200, 2, 200, 150, 2, 3, 1, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rPDUSensorTempConfigName.setStatus('mandatory')
rPDUSensorTempCfgTempMaxThreshF = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10903, 200, 2, 200, 150, 2, 3, 1, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rPDUSensorTempCfgTempMaxThreshF.setStatus('mandatory')
rPDUSnsorTempCfgTempHighThreshF = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10903, 200, 2, 200, 150, 2, 3, 1, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rPDUSnsorTempCfgTempHighThreshF.setStatus('mandatory')
rPDUSnsorTempCfgTempHysteresisF = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10903, 200, 2, 200, 150, 2, 3, 1, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rPDUSnsorTempCfgTempHysteresisF.setStatus('mandatory')
rPDUSensorTempCfgTempMaxThreshC = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10903, 200, 2, 200, 150, 2, 3, 1, 6), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rPDUSensorTempCfgTempMaxThreshC.setStatus('mandatory')
rPDUSnsorTempCfgTempHighThreshC = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10903, 200, 2, 200, 150, 2, 3, 1, 7), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rPDUSnsorTempCfgTempHighThreshC.setStatus('mandatory')
rPDUSnsorTempCfgTempHysteresisC = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10903, 200, 2, 200, 150, 2, 3, 1, 8), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rPDUSnsorTempCfgTempHysteresisC.setStatus('mandatory')
rPDUSnsorTempCfgAlarmGeneration = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10903, 200, 2, 200, 150, 2, 3, 1, 9), RpduEnableDisableType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rPDUSnsorTempCfgAlarmGeneration.setStatus('mandatory')
rPDUSensorHumidity = MibIdentifier((1, 3, 6, 1, 4, 1, 674, 10903, 200, 2, 200, 150, 3))
rPDUSensorHumidityTableSize = MibScalar((1, 3, 6, 1, 4, 1, 674, 10903, 200, 2, 200, 150, 3, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rPDUSensorHumidityTableSize.setStatus('mandatory')
rPDUSensorHumidityStatusTable = MibTable((1, 3, 6, 1, 4, 1, 674, 10903, 200, 2, 200, 150, 3, 2), )
if mibBuilder.loadTexts: rPDUSensorHumidityStatusTable.setStatus('mandatory')
rPDUSensorHumidityStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 674, 10903, 200, 2, 200, 150, 3, 2, 1), ).setIndexNames((0, "DellrPDU-MIB", "rPDUSensorHumidityStatusIndex"))
if mibBuilder.loadTexts: rPDUSensorHumidityStatusEntry.setStatus('mandatory')
rPDUSensorHumidityStatusIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10903, 200, 2, 200, 150, 3, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rPDUSensorHumidityStatusIndex.setStatus('mandatory')
rPDUSensorHumidityStatusName = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10903, 200, 2, 200, 150, 3, 2, 1, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rPDUSensorHumidityStatusName.setStatus('mandatory')
rPDUSnsorHumidityStatCommStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10903, 200, 2, 200, 150, 3, 2, 1, 3), RpduCommNoneOKLostType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rPDUSnsorHumidityStatCommStatus.setStatus('mandatory')
rPDUSnsorHumStatRelativeHumdity = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10903, 200, 2, 200, 150, 3, 2, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rPDUSnsorHumStatRelativeHumdity.setStatus('mandatory')
rPDUSnsorHumStatusAlarmStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10903, 200, 2, 200, 150, 3, 2, 1, 5), RpduNotPBMinLowNrmlOHiMaxType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rPDUSnsorHumStatusAlarmStatus.setStatus('mandatory')
rPDUSensorHumidityConfigTable = MibTable((1, 3, 6, 1, 4, 1, 674, 10903, 200, 2, 200, 150, 3, 3), )
if mibBuilder.loadTexts: rPDUSensorHumidityConfigTable.setStatus('mandatory')
rPDUSensorHumidityConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 674, 10903, 200, 2, 200, 150, 3, 3, 1), ).setIndexNames((0, "DellrPDU-MIB", "rPDUSensorHumidityConfigIndex"))
if mibBuilder.loadTexts: rPDUSensorHumidityConfigEntry.setStatus('mandatory')
rPDUSensorHumidityConfigIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10903, 200, 2, 200, 150, 3, 3, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rPDUSensorHumidityConfigIndex.setStatus('mandatory')
rPDUSensorHumidityConfigName = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10903, 200, 2, 200, 150, 3, 3, 1, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rPDUSensorHumidityConfigName.setStatus('mandatory')
rPDUSnsorHumCfgHumdityLowThresh = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10903, 200, 2, 200, 150, 3, 3, 1, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rPDUSnsorHumCfgHumdityLowThresh.setStatus('mandatory')
rPDUSnsorHumCfgHumdityMinThresh = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10903, 200, 2, 200, 150, 3, 3, 1, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rPDUSnsorHumCfgHumdityMinThresh.setStatus('mandatory')
rPDUSnsorHumCfgHumdtyHysteresis = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10903, 200, 2, 200, 150, 3, 3, 1, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rPDUSnsorHumCfgHumdtyHysteresis.setStatus('mandatory')
rPDUSnsorHumCfgAlarmGeneration = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10903, 200, 2, 200, 150, 3, 3, 1, 6), RpduEnableDisableType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rPDUSnsorHumCfgAlarmGeneration.setStatus('mandatory')
rPDUSensorDiscrete = MibIdentifier((1, 3, 6, 1, 4, 1, 674, 10903, 200, 2, 200, 150, 4))
rPDUSensorDiscreteTableSize = MibScalar((1, 3, 6, 1, 4, 1, 674, 10903, 200, 2, 200, 150, 4, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rPDUSensorDiscreteTableSize.setStatus('mandatory')
rPDUSensorDiscreteStatusTable = MibTable((1, 3, 6, 1, 4, 1, 674, 10903, 200, 2, 200, 150, 4, 2), )
if mibBuilder.loadTexts: rPDUSensorDiscreteStatusTable.setStatus('mandatory')
rPDUSensorDiscreteStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 674, 10903, 200, 2, 200, 150, 4, 2, 1), ).setIndexNames((0, "DellrPDU-MIB", "rPDUSensorDiscreteStatusIndex"))
if mibBuilder.loadTexts: rPDUSensorDiscreteStatusEntry.setStatus('mandatory')
rPDUSensorDiscreteStatusIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10903, 200, 2, 200, 150, 4, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rPDUSensorDiscreteStatusIndex.setStatus('mandatory')
rPDUSensorDiscreteStatusName = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10903, 200, 2, 200, 150, 4, 2, 1, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rPDUSensorDiscreteStatusName.setStatus('mandatory')
rPDUSnsorDiscreteStatCurntState = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10903, 200, 2, 200, 150, 4, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("open", 1), ("closed", 2), ("unknown", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rPDUSnsorDiscreteStatCurntState.setStatus('mandatory')
rPDUSnsorDiscreteStatAlarmState = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10903, 200, 2, 200, 150, 4, 2, 1, 4), RpduNormalAlarmType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rPDUSnsorDiscreteStatAlarmState.setStatus('mandatory')
rPDUSensorDiscreteConfigTable = MibTable((1, 3, 6, 1, 4, 1, 674, 10903, 200, 2, 200, 150, 4, 3), )
if mibBuilder.loadTexts: rPDUSensorDiscreteConfigTable.setStatus('mandatory')
rPDUSensorDiscreteConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 674, 10903, 200, 2, 200, 150, 4, 3, 1), ).setIndexNames((0, "DellrPDU-MIB", "rPDUSensorDiscreteConfigIndex"))
if mibBuilder.loadTexts: rPDUSensorDiscreteConfigEntry.setStatus('mandatory')
rPDUSensorDiscreteConfigIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10903, 200, 2, 200, 150, 4, 3, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rPDUSensorDiscreteConfigIndex.setStatus('mandatory')
rPDUSensorDiscreteConfigName = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10903, 200, 2, 200, 150, 4, 3, 1, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rPDUSensorDiscreteConfigName.setStatus('mandatory')
rPDUSnsorDiscreteCfgNormalState = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10903, 200, 2, 200, 150, 4, 3, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("open", 1), ("closed", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rPDUSnsorDiscreteCfgNormalState.setStatus('mandatory')
rPDUSnsorDiscrteAlarmGeneration = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10903, 200, 2, 200, 150, 4, 3, 1, 4), RpduEnableDisableType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rPDUSnsorDiscrteAlarmGeneration.setStatus('mandatory')
mtrapargsD = MibIdentifier((1, 3, 6, 1, 4, 1, 674, 10903, 200, 2, 200, 160))
contactNumber = MibScalar((1, 3, 6, 1, 4, 1, 674, 10903, 200, 2, 200, 160, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: contactNumber.setStatus('mandatory')
outletNumber = MibScalar((1, 3, 6, 1, 4, 1, 674, 10903, 200, 2, 200, 160, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: outletNumber.setStatus('mandatory')
mtrapargsString = MibScalar((1, 3, 6, 1, 4, 1, 674, 10903, 200, 2, 200, 160, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtrapargsString.setStatus('mandatory')
phaseNumber = MibScalar((1, 3, 6, 1, 4, 1, 674, 10903, 200, 2, 200, 160, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: phaseNumber.setStatus('mandatory')
sensorNumber = MibScalar((1, 3, 6, 1, 4, 1, 674, 10903, 200, 2, 200, 160, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sensorNumber.setStatus('mandatory')
deviceNameD = MibScalar((1, 3, 6, 1, 4, 1, 674, 10903, 200, 2, 200, 160, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: deviceNameD.setStatus('mandatory')
serialNumber = MibScalar((1, 3, 6, 1, 4, 1, 674, 10903, 200, 2, 200, 160, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: serialNumber.setStatus('mandatory')
testTrapargsInteger = MibScalar((1, 3, 6, 1, 4, 1, 674, 10903, 200, 2, 200, 160, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: testTrapargsInteger.setStatus('mandatory')
events = MibIdentifier((1, 3, 6, 1, 4, 1, 674, 10903, 200, 2, 200, 500))
deviceCommunicationLostCleared = NotificationType((1, 3, 6, 1, 4, 1, 674, 10903, 200, 2, 200, 500) + (0,1)).setObjects(("DellrPDU-MIB", "serialNumber"), ("DellrPDU-MIB", "deviceNameD"), ("DellrPDU-MIB", "mtrapargsString"))
deviceCommunicationLostSet = NotificationType((1, 3, 6, 1, 4, 1, 674, 10903, 200, 2, 200, 500) + (0,2)).setObjects(("DellrPDU-MIB", "serialNumber"), ("DellrPDU-MIB", "deviceNameD"), ("DellrPDU-MIB", "mtrapargsString"))
componentCommLostCleared = NotificationType((1, 3, 6, 1, 4, 1, 674, 10903, 200, 2, 200, 500) + (0,3)).setObjects(("DellrPDU-MIB", "serialNumber"), ("DellrPDU-MIB", "deviceNameD"), ("DellrPDU-MIB", "mtrapargsString"))
componentCommLostSet = NotificationType((1, 3, 6, 1, 4, 1, 674, 10903, 200, 2, 200, 500) + (0,4)).setObjects(("DellrPDU-MIB", "serialNumber"), ("DellrPDU-MIB", "deviceNameD"), ("DellrPDU-MIB", "mtrapargsString"))
cANBusOffCleared = NotificationType((1, 3, 6, 1, 4, 1, 674, 10903, 200, 2, 200, 500) + (0,5)).setObjects(("DellrPDU-MIB", "serialNumber"), ("DellrPDU-MIB", "deviceNameD"), ("DellrPDU-MIB", "mtrapargsString"))
canBusOffSet = NotificationType((1, 3, 6, 1, 4, 1, 674, 10903, 200, 2, 200, 500) + (0,6)).setObjects(("DellrPDU-MIB", "serialNumber"), ("DellrPDU-MIB", "deviceNameD"), ("DellrPDU-MIB", "mtrapargsString"))
powerSupplyFailureCleared = NotificationType((1, 3, 6, 1, 4, 1, 674, 10903, 200, 2, 200, 500) + (0,7)).setObjects(("DellrPDU-MIB", "serialNumber"), ("DellrPDU-MIB", "deviceNameD"), ("DellrPDU-MIB", "mtrapargsString"))
powerSupplyFailureSet = NotificationType((1, 3, 6, 1, 4, 1, 674, 10903, 200, 2, 200, 500) + (0,8)).setObjects(("DellrPDU-MIB", "serialNumber"), ("DellrPDU-MIB", "deviceNameD"), ("DellrPDU-MIB", "mtrapargsString"))
keypadButtonStuckCleared = NotificationType((1, 3, 6, 1, 4, 1, 674, 10903, 200, 2, 200, 500) + (0,9)).setObjects(("DellrPDU-MIB", "serialNumber"), ("DellrPDU-MIB", "deviceNameD"), ("DellrPDU-MIB", "mtrapargsString"))
keypadButtonStuckSet = NotificationType((1, 3, 6, 1, 4, 1, 674, 10903, 200, 2, 200, 500) + (0,10)).setObjects(("DellrPDU-MIB", "serialNumber"), ("DellrPDU-MIB", "deviceNameD"), ("DellrPDU-MIB", "mtrapargsString"))
dryContactAbnormalCleared = NotificationType((1, 3, 6, 1, 4, 1, 674, 10903, 200, 2, 200, 500) + (0,11)).setObjects(("DellrPDU-MIB", "serialNumber"), ("DellrPDU-MIB", "deviceNameD"), ("DellrPDU-MIB", "contactNumber"), ("DellrPDU-MIB", "mtrapargsString"))
dryContactAbnormalSet = NotificationType((1, 3, 6, 1, 4, 1, 674, 10903, 200, 2, 200, 500) + (0,12)).setObjects(("DellrPDU-MIB", "serialNumber"), ("DellrPDU-MIB", "deviceNameD"), ("DellrPDU-MIB", "contactNumber"), ("DellrPDU-MIB", "mtrapargsString"))
deviceLowLoadCleared = NotificationType((1, 3, 6, 1, 4, 1, 674, 10903, 200, 2, 200, 500) + (0,13)).setObjects(("DellrPDU-MIB", "serialNumber"), ("DellrPDU-MIB", "deviceNameD"), ("DellrPDU-MIB", "mtrapargsString"))
deviceLowLoadSet = NotificationType((1, 3, 6, 1, 4, 1, 674, 10903, 200, 2, 200, 500) + (0,14)).setObjects(("DellrPDU-MIB", "serialNumber"), ("DellrPDU-MIB", "deviceNameD"), ("DellrPDU-MIB", "mtrapargsString"))
deviceNearOverLoadCleared = NotificationType((1, 3, 6, 1, 4, 1, 674, 10903, 200, 2, 200, 500) + (0,15)).setObjects(("DellrPDU-MIB", "serialNumber"), ("DellrPDU-MIB", "deviceNameD"), ("DellrPDU-MIB", "mtrapargsString"))
deviceNearOverLoadSet = NotificationType((1, 3, 6, 1, 4, 1, 674, 10903, 200, 2, 200, 500) + (0,16)).setObjects(("DellrPDU-MIB", "serialNumber"), ("DellrPDU-MIB", "deviceNameD"), ("DellrPDU-MIB", "mtrapargsString"))
deviceOverLoadCleared = NotificationType((1, 3, 6, 1, 4, 1, 674, 10903, 200, 2, 200, 500) + (0,17)).setObjects(("DellrPDU-MIB", "serialNumber"), ("DellrPDU-MIB", "deviceNameD"), ("DellrPDU-MIB", "mtrapargsString"))
deviceOverLoadSet = NotificationType((1, 3, 6, 1, 4, 1, 674, 10903, 200, 2, 200, 500) + (0,18)).setObjects(("DellrPDU-MIB", "serialNumber"), ("DellrPDU-MIB", "deviceNameD"), ("DellrPDU-MIB", "mtrapargsString"))
phaseLowLoadCleared = NotificationType((1, 3, 6, 1, 4, 1, 674, 10903, 200, 2, 200, 500) + (0,19)).setObjects(("DellrPDU-MIB", "serialNumber"), ("DellrPDU-MIB", "deviceNameD"), ("DellrPDU-MIB", "phaseNumber"), ("DellrPDU-MIB", "mtrapargsString"))
phaseLowLoadSet = NotificationType((1, 3, 6, 1, 4, 1, 674, 10903, 200, 2, 200, 500) + (0,20)).setObjects(("DellrPDU-MIB", "serialNumber"), ("DellrPDU-MIB", "deviceNameD"), ("DellrPDU-MIB", "phaseNumber"), ("DellrPDU-MIB", "mtrapargsString"))
phaseNearOverLoadCleared = NotificationType((1, 3, 6, 1, 4, 1, 674, 10903, 200, 2, 200, 500) + (0,21)).setObjects(("DellrPDU-MIB", "serialNumber"), ("DellrPDU-MIB", "deviceNameD"), ("DellrPDU-MIB", "phaseNumber"), ("DellrPDU-MIB", "mtrapargsString"))
phaseNearOverLoadSet = NotificationType((1, 3, 6, 1, 4, 1, 674, 10903, 200, 2, 200, 500) + (0,22)).setObjects(("DellrPDU-MIB", "serialNumber"), ("DellrPDU-MIB", "deviceNameD"), ("DellrPDU-MIB", "phaseNumber"), ("DellrPDU-MIB", "mtrapargsString"))
phaseOverLoadCleared = NotificationType((1, 3, 6, 1, 4, 1, 674, 10903, 200, 2, 200, 500) + (0,23)).setObjects(("DellrPDU-MIB", "serialNumber"), ("DellrPDU-MIB", "deviceNameD"), ("DellrPDU-MIB", "phaseNumber"), ("DellrPDU-MIB", "mtrapargsString"))
phaseOverLoadSet = NotificationType((1, 3, 6, 1, 4, 1, 674, 10903, 200, 2, 200, 500) + (0,24)).setObjects(("DellrPDU-MIB", "serialNumber"), ("DellrPDU-MIB", "deviceNameD"), ("DellrPDU-MIB", "phaseNumber"), ("DellrPDU-MIB", "mtrapargsString"))
outletLowLoadCleared = NotificationType((1, 3, 6, 1, 4, 1, 674, 10903, 200, 2, 200, 500) + (0,25)).setObjects(("DellrPDU-MIB", "serialNumber"), ("DellrPDU-MIB", "deviceNameD"), ("DellrPDU-MIB", "outletNumber"), ("DellrPDU-MIB", "mtrapargsString"))
outletLowLoadSet = NotificationType((1, 3, 6, 1, 4, 1, 674, 10903, 200, 2, 200, 500) + (0,26)).setObjects(("DellrPDU-MIB", "serialNumber"), ("DellrPDU-MIB", "deviceNameD"), ("DellrPDU-MIB", "outletNumber"), ("DellrPDU-MIB", "mtrapargsString"))
outletNearOverLoadCleared = NotificationType((1, 3, 6, 1, 4, 1, 674, 10903, 200, 2, 200, 500) + (0,27)).setObjects(("DellrPDU-MIB", "serialNumber"), ("DellrPDU-MIB", "deviceNameD"), ("DellrPDU-MIB", "outletNumber"), ("DellrPDU-MIB", "mtrapargsString"))
outletNearOverLoadSet = NotificationType((1, 3, 6, 1, 4, 1, 674, 10903, 200, 2, 200, 500) + (0,28)).setObjects(("DellrPDU-MIB", "serialNumber"), ("DellrPDU-MIB", "deviceNameD"), ("DellrPDU-MIB", "outletNumber"), ("DellrPDU-MIB", "mtrapargsString"))
outletOverLoadCleared = NotificationType((1, 3, 6, 1, 4, 1, 674, 10903, 200, 2, 200, 500) + (0,29)).setObjects(("DellrPDU-MIB", "serialNumber"), ("DellrPDU-MIB", "deviceNameD"), ("DellrPDU-MIB", "outletNumber"), ("DellrPDU-MIB", "mtrapargsString"))
outletOverLoadSet = NotificationType((1, 3, 6, 1, 4, 1, 674, 10903, 200, 2, 200, 500) + (0,30)).setObjects(("DellrPDU-MIB", "serialNumber"), ("DellrPDU-MIB", "deviceNameD"), ("DellrPDU-MIB", "outletNumber"), ("DellrPDU-MIB", "mtrapargsString"))
sensorDisconnectedCleared = NotificationType((1, 3, 6, 1, 4, 1, 674, 10903, 200, 2, 200, 500) + (0,31)).setObjects(("DellrPDU-MIB", "serialNumber"), ("DellrPDU-MIB", "deviceNameD"), ("DellrPDU-MIB", "sensorNumber"), ("DellrPDU-MIB", "mtrapargsString"))
sensorDisconnectedSet = NotificationType((1, 3, 6, 1, 4, 1, 674, 10903, 200, 2, 200, 500) + (0,32)).setObjects(("DellrPDU-MIB", "serialNumber"), ("DellrPDU-MIB", "deviceNameD"), ("DellrPDU-MIB", "sensorNumber"), ("DellrPDU-MIB", "mtrapargsString"))
sensorTypeIndeterminateCleared = NotificationType((1, 3, 6, 1, 4, 1, 674, 10903, 200, 2, 200, 500) + (0,33)).setObjects(("DellrPDU-MIB", "serialNumber"), ("DellrPDU-MIB", "deviceNameD"), ("DellrPDU-MIB", "sensorNumber"), ("DellrPDU-MIB", "mtrapargsString"))
sensorTypeIndeterminateSet = NotificationType((1, 3, 6, 1, 4, 1, 674, 10903, 200, 2, 200, 500) + (0,34)).setObjects(("DellrPDU-MIB", "serialNumber"), ("DellrPDU-MIB", "deviceNameD"), ("DellrPDU-MIB", "sensorNumber"), ("DellrPDU-MIB", "mtrapargsString"))
sensorTypeUnsupportedCleared = NotificationType((1, 3, 6, 1, 4, 1, 674, 10903, 200, 2, 200, 500) + (0,35)).setObjects(("DellrPDU-MIB", "serialNumber"), ("DellrPDU-MIB", "deviceNameD"), ("DellrPDU-MIB", "sensorNumber"), ("DellrPDU-MIB", "mtrapargsString"))
sensorTypeUnsupportedSet = NotificationType((1, 3, 6, 1, 4, 1, 674, 10903, 200, 2, 200, 500) + (0,36)).setObjects(("DellrPDU-MIB", "serialNumber"), ("DellrPDU-MIB", "deviceNameD"), ("DellrPDU-MIB", "sensorNumber"), ("DellrPDU-MIB", "mtrapargsString"))
maxTemperatureExceededCleared = NotificationType((1, 3, 6, 1, 4, 1, 674, 10903, 200, 2, 200, 500) + (0,37)).setObjects(("DellrPDU-MIB", "serialNumber"), ("DellrPDU-MIB", "deviceNameD"), ("DellrPDU-MIB", "sensorNumber"), ("DellrPDU-MIB", "mtrapargsString"))
maxTemperatureExceededSet = NotificationType((1, 3, 6, 1, 4, 1, 674, 10903, 200, 2, 200, 500) + (0,38)).setObjects(("DellrPDU-MIB", "serialNumber"), ("DellrPDU-MIB", "deviceNameD"), ("DellrPDU-MIB", "sensorNumber"), ("DellrPDU-MIB", "mtrapargsString"))
highTemperatureExceededCleared = NotificationType((1, 3, 6, 1, 4, 1, 674, 10903, 200, 2, 200, 500) + (0,39)).setObjects(("DellrPDU-MIB", "serialNumber"), ("DellrPDU-MIB", "deviceNameD"), ("DellrPDU-MIB", "sensorNumber"), ("DellrPDU-MIB", "mtrapargsString"))
highTemperatureExceededSet = NotificationType((1, 3, 6, 1, 4, 1, 674, 10903, 200, 2, 200, 500) + (0,40)).setObjects(("DellrPDU-MIB", "serialNumber"), ("DellrPDU-MIB", "deviceNameD"), ("DellrPDU-MIB", "sensorNumber"), ("DellrPDU-MIB", "mtrapargsString"))
lowHumidityExceededCleared = NotificationType((1, 3, 6, 1, 4, 1, 674, 10903, 200, 2, 200, 500) + (0,41)).setObjects(("DellrPDU-MIB", "serialNumber"), ("DellrPDU-MIB", "deviceNameD"), ("DellrPDU-MIB", "sensorNumber"), ("DellrPDU-MIB", "mtrapargsString"))
lowHumidityExceededSet = NotificationType((1, 3, 6, 1, 4, 1, 674, 10903, 200, 2, 200, 500) + (0,42)).setObjects(("DellrPDU-MIB", "serialNumber"), ("DellrPDU-MIB", "deviceNameD"), ("DellrPDU-MIB", "sensorNumber"), ("DellrPDU-MIB", "mtrapargsString"))
minHumidityExceededCleared = NotificationType((1, 3, 6, 1, 4, 1, 674, 10903, 200, 2, 200, 500) + (0,43)).setObjects(("DellrPDU-MIB", "serialNumber"), ("DellrPDU-MIB", "deviceNameD"), ("DellrPDU-MIB", "sensorNumber"), ("DellrPDU-MIB", "mtrapargsString"))
minHumidityExceededSet = NotificationType((1, 3, 6, 1, 4, 1, 674, 10903, 200, 2, 200, 500) + (0,44)).setObjects(("DellrPDU-MIB", "serialNumber"), ("DellrPDU-MIB", "deviceNameD"), ("DellrPDU-MIB", "sensorNumber"), ("DellrPDU-MIB", "mtrapargsString"))
outletTurnOn = NotificationType((1, 3, 6, 1, 4, 1, 674, 10903, 200, 2, 200, 500) + (0,45)).setObjects(("DellrPDU-MIB", "serialNumber"), ("DellrPDU-MIB", "deviceNameD"), ("DellrPDU-MIB", "outletNumber"), ("DellrPDU-MIB", "mtrapargsString"))
outletTurnOff = NotificationType((1, 3, 6, 1, 4, 1, 674, 10903, 200, 2, 200, 500) + (0,46)).setObjects(("DellrPDU-MIB", "serialNumber"), ("DellrPDU-MIB", "deviceNameD"), ("DellrPDU-MIB", "outletNumber"), ("DellrPDU-MIB", "mtrapargsString"))
actionCancelled = NotificationType((1, 3, 6, 1, 4, 1, 674, 10903, 200, 2, 200, 500) + (0,47)).setObjects(("DellrPDU-MIB", "serialNumber"), ("DellrPDU-MIB", "deviceNameD"), ("DellrPDU-MIB", "outletNumber"), ("DellrPDU-MIB", "mtrapargsString"))
deviceConfigurationChange = NotificationType((1, 3, 6, 1, 4, 1, 674, 10903, 200, 2, 200, 500) + (0,48)).setObjects(("DellrPDU-MIB", "serialNumber"), ("DellrPDU-MIB", "deviceNameD"), ("DellrPDU-MIB", "mtrapargsString"))
sensorConfigurationChange = NotificationType((1, 3, 6, 1, 4, 1, 674, 10903, 200, 2, 200, 500) + (0,49)).setObjects(("DellrPDU-MIB", "serialNumber"), ("DellrPDU-MIB", "deviceNameD"), ("DellrPDU-MIB", "sensorNumber"), ("DellrPDU-MIB", "mtrapargsString"))
outletConfigurationChange = NotificationType((1, 3, 6, 1, 4, 1, 674, 10903, 200, 2, 200, 500) + (0,50)).setObjects(("DellrPDU-MIB", "serialNumber"), ("DellrPDU-MIB", "deviceNameD"), ("DellrPDU-MIB", "outletNumber"), ("DellrPDU-MIB", "mtrapargsString"))
phaseConfigurationChange = NotificationType((1, 3, 6, 1, 4, 1, 674, 10903, 200, 2, 200, 500) + (0,51)).setObjects(("DellrPDU-MIB", "serialNumber"), ("DellrPDU-MIB", "deviceNameD"), ("DellrPDU-MIB", "phaseNumber"), ("DellrPDU-MIB", "mtrapargsString"))
dryContactConfigurationChange = NotificationType((1, 3, 6, 1, 4, 1, 674, 10903, 200, 2, 200, 500) + (0,52)).setObjects(("DellrPDU-MIB", "serialNumber"), ("DellrPDU-MIB", "deviceNameD"), ("DellrPDU-MIB", "contactNumber"), ("DellrPDU-MIB", "mtrapargsString"))
actionInit = NotificationType((1, 3, 6, 1, 4, 1, 674, 10903, 200, 2, 200, 500) + (0,53)).setObjects(("DellrPDU-MIB", "serialNumber"), ("DellrPDU-MIB", "deviceNameD"), ("DellrPDU-MIB", "outletNumber"), ("DellrPDU-MIB", "mtrapargsString"))
actionFailed = NotificationType((1, 3, 6, 1, 4, 1, 674, 10903, 200, 2, 200, 500) + (0,54)).setObjects(("DellrPDU-MIB", "serialNumber"), ("DellrPDU-MIB", "deviceNameD"), ("DellrPDU-MIB", "outletNumber"), ("DellrPDU-MIB", "mtrapargsString"))
actionDeleted = NotificationType((1, 3, 6, 1, 4, 1, 674, 10903, 200, 2, 200, 500) + (0,55)).setObjects(("DellrPDU-MIB", "serialNumber"), ("DellrPDU-MIB", "deviceNameD"), ("DellrPDU-MIB", "outletNumber"), ("DellrPDU-MIB", "mtrapargsString"))
syncCommandFailed = NotificationType((1, 3, 6, 1, 4, 1, 674, 10903, 200, 2, 200, 500) + (0,56)).setObjects(("DellrPDU-MIB", "serialNumber"), ("DellrPDU-MIB", "deviceNameD"), ("DellrPDU-MIB", "outletNumber"), ("DellrPDU-MIB", "mtrapargsString"))
mPOPicFwDownloadStarted = NotificationType((1, 3, 6, 1, 4, 1, 674, 10903, 200, 2, 200, 500) + (0,57)).setObjects(("DellrPDU-MIB", "serialNumber"), ("DellrPDU-MIB", "deviceNameD"), ("DellrPDU-MIB", "mtrapargsString"))
mPOPicFwDownloadComplete = NotificationType((1, 3, 6, 1, 4, 1, 674, 10903, 200, 2, 200, 500) + (0,58)).setObjects(("DellrPDU-MIB", "serialNumber"), ("DellrPDU-MIB", "deviceNameD"), ("DellrPDU-MIB", "mtrapargsString"))
mPOPicFwDownloadAborted = NotificationType((1, 3, 6, 1, 4, 1, 674, 10903, 200, 2, 200, 500) + (0,59)).setObjects(("DellrPDU-MIB", "serialNumber"), ("DellrPDU-MIB", "deviceNameD"), ("DellrPDU-MIB", "mtrapargsString"))
sensorCommEstablished = NotificationType((1, 3, 6, 1, 4, 1, 674, 10903, 200, 2, 200, 500) + (0,60)).setObjects(("DellrPDU-MIB", "serialNumber"), ("DellrPDU-MIB", "deviceNameD"), ("DellrPDU-MIB", "sensorNumber"), ("DellrPDU-MIB", "mtrapargsString"))
configChangeSNMP = NotificationType((1, 3, 6, 1, 4, 1, 674, 10903, 200, 2, 200, 500) + (0,1000)).setObjects(("DellrPDU-MIB", "mtrapargsString"))
accessViolationConsole = NotificationType((1, 3, 6, 1, 4, 1, 674, 10903, 200, 2, 200, 500) + (0,1001)).setObjects(("DellrPDU-MIB", "mtrapargsString"))
accessViolationHTTP = NotificationType((1, 3, 6, 1, 4, 1, 674, 10903, 200, 2, 200, 500) + (0,1002)).setObjects(("DellrPDU-MIB", "mtrapargsString"))
dellTestTrap = NotificationType((1, 3, 6, 1, 4, 1, 674, 10903, 200, 2, 200, 500) + (0,1003)).setObjects(("DellrPDU-MIB", "testTrapargsInteger"), ("DellrPDU-MIB", "mtrapargsString"))
mibBuilder.exportSymbols("DellrPDU-MIB", rPDUOutletSwitchedStatPhLayout=rPDUOutletSwitchedStatPhLayout, rPDUOutletMeteredStatusEnergy=rPDUOutletMeteredStatusEnergy, rPDU=rPDU, rPDUSnsorHumStatusAlarmStatus=rPDUSnsorHumStatusAlarmStatus, rPDUPhaseStatusNumber=rPDUPhaseStatusNumber, rPDUPhaseConfigIndex=rPDUPhaseConfigIndex, rPDUDeviceControlTable=rPDUDeviceControlTable, rPDUOutSwitchedCfgPowerOnTime=rPDUOutSwitchedCfgPowerOnTime, outletLowLoadSet=outletLowLoadSet, mtrapargsD=mtrapargsD, cANBusOffCleared=cANBusOffCleared, rPDUOutlet=rPDUOutlet, rPDUOutletSwitchedStatCmdPnding=rPDUOutletSwitchedStatCmdPnding, rPDUDeviceConfigTable=rPDUDeviceConfigTable, rPDUSnsorHumCfgHumdityMinThresh=rPDUSnsorHumCfgHumdityMinThresh, productIDDescription=productIDDescription, rPDUSensorDiscreteStatusTable=rPDUSensorDiscreteStatusTable, rPDUOutMtredCfgLowLdCurntThresh=rPDUOutMtredCfgLowLdCurntThresh, dryContactAbnormalSet=dryContactAbnormalSet, rPDUDeviceCfgPeakPowerHeadroom=rPDUDeviceCfgPeakPowerHeadroom, rPDUSensorTempStatusIndex=rPDUSensorTempStatusIndex, sensorDisconnectedCleared=sensorDisconnectedCleared, rPDUOutMeteredPeakPwrStartTime=rPDUOutMeteredPeakPwrStartTime, rPDUSensorHumidityStatusIndex=rPDUSensorHumidityStatusIndex, deviceCommunicationLostCleared=deviceCommunicationLostCleared, componentCommLostCleared=componentCommLostCleared, rPDUSensorTempStatusTempC=rPDUSensorTempStatusTempC, rPDUOutMtredCfgOvrldCurntThresh=rPDUOutMtredCfgOvrldCurntThresh, rPDUOutletSwitchedStatusState=rPDUOutletSwitchedStatusState, rPDUSensorHumidityStatusTable=rPDUSensorHumidityStatusTable, rPDUSensorTempTableSize=rPDUSensorTempTableSize, maxTemperatureExceededCleared=maxTemperatureExceededCleared, phaseLowLoadCleared=phaseLowLoadCleared, rPDUOutMeteredStatusLoadState=rPDUOutMeteredStatusLoadState, productStatusGlobalStatus=productStatusGlobalStatus, RpduOutletPhaseLayoutType=RpduOutletPhaseLayoutType, rPDUOutletMetered=rPDUOutletMetered, rPDUSensorHumidityConfigTable=rPDUSensorHumidityConfigTable, rPDUSensorDiscreteStatusIndex=rPDUSensorDiscreteStatusIndex, rPDUOutMeteredStatPowerRating=rPDUOutMeteredStatPowerRating, productIDVersion=productIDVersion, sensorDisconnectedSet=sensorDisconnectedSet, rPDUDevicePropertiesName=rPDUDevicePropertiesName, rPDUSensorHumidityStatusName=rPDUSensorHumidityStatusName, rPDUSnsorDiscreteCfgNormalState=rPDUSnsorDiscreteCfgNormalState, rPDUPowerSupplyAlarmD=rPDUPowerSupplyAlarmD, rPDUPhaseConfigTable=rPDUPhaseConfigTable, rPDUOutletMeteredStatusEntry=rPDUOutletMeteredStatusEntry, rPDUPhCfgOverloadCurntThreshold=rPDUPhCfgOverloadCurntThreshold, productIDURL=productIDURL, rPDUOutletMeteredConfigName=rPDUOutletMeteredConfigName, rPDUSensorTempStatusAlarmStatus=rPDUSensorTempStatusAlarmStatus, rPDUDeviceConfigPeakPower=rPDUDeviceConfigPeakPower, rPDUSensorHumidityTableSize=rPDUSensorHumidityTableSize, sensorTypeIndeterminateCleared=sensorTypeIndeterminateCleared, rPDUSensorHumidity=rPDUSensorHumidity, productIDDisplayName=productIDDisplayName, rPDUDeviceConfigName=rPDUDeviceConfigName, rPDUSnsorTempCfgAlarmGeneration=rPDUSnsorTempCfgAlarmGeneration, rPDUPhase=rPDUPhase, deviceLowLoadCleared=deviceLowLoadCleared, highTemperatureExceededSet=highTemperatureExceededSet, rPDUSnsorHumidityStatCommStatus=rPDUSnsorHumidityStatCommStatus, rPDUSensorTempConfigIndex=rPDUSensorTempConfigIndex, rPDUDevicePropertiesNumMtrdOuts=rPDUDevicePropertiesNumMtrdOuts, rPDUSnsorHumCfgHumdtyHysteresis=rPDUSnsorHumCfgHumdtyHysteresis, rPDUSensorTempStatusEntry=rPDUSensorTempStatusEntry, sensorTypeUnsupportedCleared=sensorTypeUnsupportedCleared, powerSupplyFailureSet=powerSupplyFailureSet, rPDUOutletSwitchedControlIndex=rPDUOutletSwitchedControlIndex, sensorNumber=sensorNumber, rPDUOutSwtchedCfgRebootDuration=rPDUOutSwtchedCfgRebootDuration, rPDUDeviceStatusLoadState=rPDUDeviceStatusLoadState, rPDUOutletSwitchedConfigTable=rPDUOutletSwitchedConfigTable, rPDUDeviceStatusCommandPending=rPDUDeviceStatusCommandPending, rPDUSnsorTempCfgTempHysteresisC=rPDUSnsorTempCfgTempHysteresisC, deviceOverLoadSet=deviceOverLoadSet, rPDUPhaseStatusLoadState=rPDUPhaseStatusLoadState, rPDUIdentNameD=rPDUIdentNameD, rPDUPhaseStatusEntry=rPDUPhaseStatusEntry, rPDUSensorDiscreteConfigEntry=rPDUSensorDiscreteConfigEntry, system=system, rPDUIdentLocation=rPDUIdentLocation, rPDUDevicePropertiesNumOutlets=rPDUDevicePropertiesNumOutlets, actionFailed=actionFailed, keypadButtonStuckCleared=keypadButtonStuckCleared, productStatusTimeStamp=productStatusTimeStamp, rPDUSensorStatus=rPDUSensorStatus, deviceCommunicationLostSet=deviceCommunicationLostSet, sensorTypeUnsupportedSet=sensorTypeUnsupportedSet, lowHumidityExceededSet=lowHumidityExceededSet, rPDUOutletMeteredStatusCurrent=rPDUOutletMeteredStatusCurrent, mPOPicFwDownloadAborted=mPOPicFwDownloadAborted, rPDUSensorDiscreteConfigIndex=rPDUSensorDiscreteConfigIndex, dell=dell, rPDUPhCfgNerOverloadCurntThresh=rPDUPhCfgNerOverloadCurntThresh, phaseNearOverLoadCleared=phaseNearOverLoadCleared, rPDUOutletMeteredStatusLayout=rPDUOutletMeteredStatusLayout, rPDUOutletMeteredTableSize=rPDUOutletMeteredTableSize, serialNumber=serialNumber, rPDUDeviceStatusEnergy=rPDUDeviceStatusEnergy, rPDUSensorTempConfigEntry=rPDUSensorTempConfigEntry, rPDUDeviceControlEntry=rPDUDeviceControlEntry, productIDBuildNumber=productIDBuildNumber, rPDUOutletSwitchedStatusNumber=rPDUOutletSwitchedStatusNumber, rPDUSensorDiscreteStatusEntry=rPDUSensorDiscreteStatusEntry, rPDUOutletMeteredStatusName=rPDUOutletMeteredStatusName, rPDUSensor=rPDUSensor, rPDUSensorTempStatusCommStatus=rPDUSensorTempStatusCommStatus, rPDUPhaseStatusIndex=rPDUPhaseStatusIndex, sensorCommEstablished=sensorCommEstablished, rPDUSensorDiscrete=rPDUSensorDiscrete, deviceConfigurationChange=deviceConfigurationChange, rPDUOutletSwitchedControlNumber=rPDUOutletSwitchedControlNumber, mPOPicFwDownloadComplete=mPOPicFwDownloadComplete, rPDUSnsorDiscrteAlarmGeneration=rPDUSnsorDiscrteAlarmGeneration, productIDVendor=productIDVendor, rPDUSensorTemp=rPDUSensorTemp, rPDUDevicePropertiesMaxCurntRtg=rPDUDevicePropertiesMaxCurntRtg, rPDUIdentD=rPDUIdentD, rPDUPhaseStatusVoltage=rPDUPhaseStatusVoltage, maxTemperatureExceededSet=maxTemperatureExceededSet, sensorConfigurationChange=sensorConfigurationChange, minHumidityExceededSet=minHumidityExceededSet, actionDeleted=actionDeleted, sysRPDUV1=sysRPDUV1, rPDUDeviceCfgPeakPwrStartTime=rPDUDeviceCfgPeakPwrStartTime, rPDUSensorStatusTableSize=rPDUSensorStatusTableSize, rPDUOutletSwitchedStatusName=rPDUOutletSwitchedStatusName, rPDUDeviceStatusIndex=rPDUDeviceStatusIndex, rPDUOutletMeteredConfigEntry=rPDUOutletMeteredConfigEntry, rPDUOutletMeteredStatPeakPower=rPDUOutletMeteredStatPeakPower, rPDUPowerSupplyVoltage=rPDUPowerSupplyVoltage, minHumidityExceededCleared=minHumidityExceededCleared, outletConfigurationChange=outletConfigurationChange, RpduNotPBMinLowNrmlOHiMaxType=RpduNotPBMinLowNrmlOHiMaxType, rPDUSnsorHumCfgAlarmGeneration=rPDUSnsorHumCfgAlarmGeneration, rPDUOutMeteredEnergyStartTime=rPDUOutMeteredEnergyStartTime, phaseNearOverLoadSet=phaseNearOverLoadSet, rPDUSensorTempCfgTempMaxThreshC=rPDUSensorTempCfgTempMaxThreshC, sensorTypeIndeterminateSet=sensorTypeIndeterminateSet, actionInit=actionInit, rPDUPhCfgLowLoadCurntThreshold=rPDUPhCfgLowLoadCurntThreshold, rPDUSensorTempStatusTable=rPDUSensorTempStatusTable, rPDUSensorHumidityStatusEntry=rPDUSensorHumidityStatusEntry, software=software, rPDUPhaseStatusTable=rPDUPhaseStatusTable, rPDUSensorDiscreteConfigTable=rPDUSensorDiscreteConfigTable, rPDUOutletSwitchedControlName=rPDUOutletSwitchedControlName, RpduEnableDisableType=RpduEnableDisableType, rPDUIdentModelNumberD=rPDUIdentModelNumberD, rPDUOutMeteredStatPeakPwrTime=rPDUOutMeteredStatPeakPwrTime, rPDUSensorStatusType=rPDUSensorStatusType, rPDUSensorHumidityConfigName=rPDUSensorHumidityConfigName, componentCommLostSet=componentCommLostSet, rPDUSensorTempConfigTable=rPDUSensorTempConfigTable, rPDUDevicePropertiesNumSwdOuts=rPDUDevicePropertiesNumSwdOuts, deviceNameD=deviceNameD, rPDUOutletMeteredStatusPower=rPDUOutletMeteredStatusPower, deviceNearOverLoadSet=deviceNearOverLoadSet, rPDUIdentHardwareRevD=rPDUIdentHardwareRevD, dryContactAbnormalCleared=dryContactAbnormalCleared, outletTurnOn=outletTurnOn, rPDUIdentEntry=rPDUIdentEntry, rPDUPhaseStatusCurrent=rPDUPhaseStatusCurrent, deviceNearOverLoadCleared=deviceNearOverLoadCleared, rPDUDeviceControlCommand=rPDUDeviceControlCommand, rPDUSnsorDiscreteStatAlarmState=rPDUSnsorDiscreteStatAlarmState, RpduOtherToNonrecoverableType=RpduOtherToNonrecoverableType, productID=productID, rPDUPhaseTableSize=rPDUPhaseTableSize, phaseNumber=phaseNumber, canBusOffSet=canBusOffSet, rPDUIdentSerialNumberD=rPDUIdentSerialNumberD, productStatusRESERVED2=productStatusRESERVED2, rPDUDevicePropertiesIndex=rPDUDevicePropertiesIndex, rPDUDevicePropertiesTable=rPDUDevicePropertiesTable, outletNumber=outletNumber, mtrapargsString=mtrapargsString, hardware=hardware, rPDUDevicePropertiesEntry=rPDUDevicePropertiesEntry, rPDUDeviceConfigColdstartDelay=rPDUDeviceConfigColdstartDelay, outletNearOverLoadCleared=outletNearOverLoadCleared, pdusub=pdusub, rPDUDeviceControlIndex=rPDUDeviceControlIndex, lowHumidityExceededCleared=lowHumidityExceededCleared, rPDUSensorStatusName=rPDUSensorStatusName, rPDUOutMtrdCfgNrOvdCurntThresh=rPDUOutMtrdCfgNrOvdCurntThresh, rPDUSensorTempCfgTempMaxThreshF=rPDUSensorTempCfgTempMaxThreshF, rPDUDevicePropertiesNumBreakers=rPDUDevicePropertiesNumBreakers, rPDUOutletSwitchedControlEntry=rPDUOutletSwitchedControlEntry, RpduNormalAlarmType=RpduNormalAlarmType, rPDUSnsorTempCfgTempHighThreshC=rPDUSnsorTempCfgTempHighThreshC, pdu=pdu, rPDUSensorDiscreteConfigName=rPDUSensorDiscreteConfigName, outletOverLoadSet=outletOverLoadSet, rPDUDeviceStatusTable=rPDUDeviceStatusTable, rPDUPowerSupply=rPDUPowerSupply, rPDUSnsorDiscreteStatCurntState=rPDUSnsorDiscreteStatCurntState, testTrapargsInteger=testTrapargsInteger, phaseLowLoadSet=phaseLowLoadSet, configChangeSNMP=configChangeSNMP, dellTestTrap=dellTestTrap, productStatusRESERVED1=productStatusRESERVED1, RpduCommNoneOKLostType=RpduCommNoneOKLostType, rPDUPhaseStatusPower=rPDUPhaseStatusPower, rPDUDeviceCfgOverloadPwrThresh=rPDUDeviceCfgOverloadPwrThresh, rPDUSensorStatusEntry=rPDUSensorStatusEntry, rPDUOutletSwitchedStatusIndex=rPDUOutletSwitchedStatusIndex, rPDUOutletSwitched=rPDUOutletSwitched, rPDUOutletSwitchedConfigName=rPDUOutletSwitchedConfigName, events=events, rPDUPhaseConfigNumber=rPDUPhaseConfigNumber, rPDUSensorTempStatusTempF=rPDUSensorTempStatusTempF, productStatusRESERVED3=productStatusRESERVED3, deviceOverLoadCleared=deviceOverLoadCleared, rPDUSensorTempConfigName=rPDUSensorTempConfigName, phaseOverLoadCleared=phaseOverLoadCleared, keypadButtonStuckSet=keypadButtonStuckSet, rPDUDeviceConfigIndex=rPDUDeviceConfigIndex, rPDUDeviceCfgLowLoadPwrThresh=rPDUDeviceCfgLowLoadPwrThresh, productStatusLastGlobalStatus=productStatusLastGlobalStatus, RpduLowNormalNearOverloadType=RpduLowNormalNearOverloadType, rPDUSensorDiscreteTableSize=rPDUSensorDiscreteTableSize, actionCancelled=actionCancelled, dryContactConfigurationChange=dryContactConfigurationChange, rPDUDevicePropertiesOutlayout=rPDUDevicePropertiesOutlayout, rPDUIdentFirmwareRevD=rPDUIdentFirmwareRevD, accessViolationHTTP=accessViolationHTTP, rPDUDeviceStatusName=rPDUDeviceStatusName, rPDUDeviceCfgEnergyStartTime=rPDUDeviceCfgEnergyStartTime, deviceLowLoadSet=deviceLowLoadSet, rPDUSnsorTempCfgTempHighThreshF=rPDUSnsorTempCfgTempHighThreshF, rPDUDeviceConfigLocation=rPDUDeviceConfigLocation, productStatus=productStatus, rPDUOutletSwitchedConfigIndex=rPDUOutletSwitchedConfigIndex, rPDUSnsorHumStatRelativeHumdity=rPDUSnsorHumStatRelativeHumdity, rPDUIdentTable=rPDUIdentTable, rPDUSensorDiscreteStatusName=rPDUSensorDiscreteStatusName, rPDUIdentTableSize=rPDUIdentTableSize, rPDUOutletSwitchedStatusTable=rPDUOutletSwitchedStatusTable, rPDUDeviceStatusEntry=rPDUDeviceStatusEntry, rPDUPhaseConfigEntry=rPDUPhaseConfigEntry, rPDUOutletSwitchedStatusEntry=rPDUOutletSwitchedStatusEntry, rPDUOutletSwitchedConfigNumber=rPDUOutletSwitchedConfigNumber, rPDUSensorStatusIndex=rPDUSensorStatusIndex, outletLowLoadCleared=outletLowLoadCleared, outletNearOverLoadSet=outletNearOverLoadSet, rPDUDeviceConfigPeakPwrCapTime=rPDUDeviceConfigPeakPwrCapTime, rPDUSnsorHumCfgHumdityLowThresh=rPDUSnsorHumCfgHumdityLowThresh, rPDUDeviceStatusPower=rPDUDeviceStatusPower, rPDUDevice=rPDUDevice, rPDUSensorStatusTable=rPDUSensorStatusTable, phaseConfigurationChange=phaseConfigurationChange)
mibBuilder.exportSymbols("DellrPDU-MIB", rPDUDeviceConfigEntry=rPDUDeviceConfigEntry, rPDUDevicePropertiesNumPhases=rPDUDevicePropertiesNumPhases, rPDUOutletMeteredStatusIndex=rPDUOutletMeteredStatusIndex, outletTurnOff=outletTurnOff, rPDUOutletMeteredConfigNumber=rPDUOutletMeteredConfigNumber, syncCommandFailed=syncCommandFailed, productIDDeviceNetworkName=productIDDeviceNetworkName, rPDUPhaseCfgOverloadRestriction=rPDUPhaseCfgOverloadRestriction, contactNumber=contactNumber, rPDUOutletSwitchedControlTable=rPDUOutletSwitchedControlTable, rPDUOutletMeteredStatusNumber=rPDUOutletMeteredStatusNumber, accessViolationConsole=accessViolationConsole, highTemperatureExceededCleared=highTemperatureExceededCleared, rPDUDeviceConfigPowerHeadroom=rPDUDeviceConfigPowerHeadroom, rPDUOutletSwitchedConfigEntry=rPDUOutletSwitchedConfigEntry, rPDUOutletMeteredStatusTable=rPDUOutletMeteredStatusTable, rPDUSensorTempStatusName=rPDUSensorTempStatusName, rPDUOutletMeteredConfigIndex=rPDUOutletMeteredConfigIndex, outletOverLoadCleared=outletOverLoadCleared, rPDUSensorHumidityConfigIndex=rPDUSensorHumidityConfigIndex, rPDUIdentIndex=rPDUIdentIndex, rPDUDeviceTableSize=rPDUDeviceTableSize, rPDUOutletSwitchedTableSize=rPDUOutletSwitchedTableSize, rPDUOutletMeteredConfigTable=rPDUOutletMeteredConfigTable, rPDUSensorHumidityConfigEntry=rPDUSensorHumidityConfigEntry, rPDUDeviceCfgNerOvloadPwrThresh=rPDUDeviceCfgNerOvloadPwrThresh, rPDUOutSwitchedCfgPowerOffTime=rPDUOutSwitchedCfgPowerOffTime, rPDUSnsorTempCfgTempHysteresisF=rPDUSnsorTempCfgTempHysteresisF, rPDUIdentDateOfManufactureD=rPDUIdentDateOfManufactureD, powerSupplyFailureCleared=powerSupplyFailureCleared, phaseOverLoadSet=phaseOverLoadSet, mPOPicFwDownloadStarted=mPOPicFwDownloadStarted, rPDUDeviceControlName=rPDUDeviceControlName, rPDUOutletSwitchedControlCmd=rPDUOutletSwitchedControlCmd)
