#
# PySNMP MIB module HH3C-USER-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/HH3C-USER-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:17:26 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ConstraintsUnion, ValueRangeConstraint, ValueSizeConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ConstraintsUnion", "ValueRangeConstraint", "ValueSizeConstraint", "ConstraintsIntersection")
hh3cCommon, = mibBuilder.importSymbols("HH3C-OID-MIB", "hh3cCommon")
ObjectGroup, NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "NotificationGroup", "ModuleCompliance")
Bits, Integer32, TimeTicks, NotificationType, Gauge32, ObjectIdentity, IpAddress, iso, Unsigned32, ModuleIdentity, Counter32, MibScalar, MibTable, MibTableRow, MibTableColumn, MibIdentifier, Counter64 = mibBuilder.importSymbols("SNMPv2-SMI", "Bits", "Integer32", "TimeTicks", "NotificationType", "Gauge32", "ObjectIdentity", "IpAddress", "iso", "Unsigned32", "ModuleIdentity", "Counter32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "MibIdentifier", "Counter64")
DisplayString, DateAndTime, RowStatus, TextualConvention, MacAddress = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "DateAndTime", "RowStatus", "TextualConvention", "MacAddress")
hh3cUser = ModuleIdentity((1, 3, 6, 1, 4, 1, 25506, 2, 12))
if mibBuilder.loadTexts: hh3cUser.setLastUpdated('200304100000Z')
if mibBuilder.loadTexts: hh3cUser.setOrganization('Hangzhou H3C Tech. Co., Ltd.')
class DisplayString(OctetString):
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(0, 255)

class ServiceType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("enable", 1), ("disable", 2))

hh3cUserObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 25506, 2, 12, 1))
hh3cUserInfoTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 2, 12, 1, 1), )
if mibBuilder.loadTexts: hh3cUserInfoTable.setStatus('current')
hh3cUserInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 2, 12, 1, 1, 1), ).setIndexNames((0, "HH3C-USER-MIB", "hh3cUserIndex"))
if mibBuilder.loadTexts: hh3cUserInfoEntry.setStatus('current')
hh3cUserName = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 12, 1, 1, 1, 1), DisplayString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cUserName.setStatus('current')
hh3cUserPassword = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 12, 1, 1, 1, 2), DisplayString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cUserPassword.setStatus('current')
hh3cAuthMode = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 12, 1, 1, 1, 3), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cAuthMode.setStatus('current')
hh3cUserLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 12, 1, 1, 1, 4), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cUserLevel.setStatus('current')
hh3cUserState = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 12, 1, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("active", 0), ("block", 1)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cUserState.setStatus('current')
hh3cUserInfoRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 12, 1, 1, 1, 6), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cUserInfoRowStatus.setStatus('current')
hh3cUserIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 12, 1, 1, 1, 7), Integer32())
if mibBuilder.loadTexts: hh3cUserIndex.setStatus('current')
hh3cUserAttributeTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 2, 12, 1, 2), )
if mibBuilder.loadTexts: hh3cUserAttributeTable.setStatus('current')
hh3cUserAttributeEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 2, 12, 1, 2, 1), ).setIndexNames((0, "HH3C-USER-MIB", "hh3cUserIndex"))
if mibBuilder.loadTexts: hh3cUserAttributeEntry.setStatus('current')
hh3cAccessLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 12, 1, 2, 1, 1), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cAccessLimit.setStatus('current')
hh3cIdleCut = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 12, 1, 2, 1, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cIdleCut.setStatus('current')
hh3cIPAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 12, 1, 2, 1, 3), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cIPAddress.setStatus('current')
hh3cNasIPAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 12, 1, 2, 1, 4), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cNasIPAddress.setStatus('current')
hh3cSlotNum = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 12, 1, 2, 1, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cSlotNum.setStatus('current')
hh3cSubSlotNum = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 12, 1, 2, 1, 6), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cSubSlotNum.setStatus('current')
hh3cPortNum = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 12, 1, 2, 1, 7), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cPortNum.setStatus('current')
hh3cMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 12, 1, 2, 1, 8), MacAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cMacAddress.setStatus('current')
hh3cVlan = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 12, 1, 2, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4094))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cVlan.setStatus('current')
hh3cFtpService = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 12, 1, 2, 1, 10), ServiceType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cFtpService.setStatus('current')
hh3cFtpDirectory = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 12, 1, 2, 1, 11), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cFtpDirectory.setStatus('current')
hh3cLanAccessService = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 12, 1, 2, 1, 12), ServiceType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cLanAccessService.setStatus('current')
hh3cSshService = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 12, 1, 2, 1, 13), ServiceType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cSshService.setStatus('current')
hh3cTelnetService = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 12, 1, 2, 1, 14), ServiceType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cTelnetService.setStatus('current')
hh3cTerminalService = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 12, 1, 2, 1, 15), ServiceType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cTerminalService.setStatus('current')
hh3cExpirationDate = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 12, 1, 2, 1, 16), DateAndTime().subtype(subtypeSpec=ValueSizeConstraint(8, 8)).setFixedLength(8)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cExpirationDate.setStatus('current')
hh3cUserGroup = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 12, 1, 2, 1, 17), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cUserGroup.setStatus('current')
hh3cPortalService = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 12, 1, 2, 1, 18), ServiceType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cPortalService.setStatus('current')
hh3cUserMaxNum = MibScalar((1, 3, 6, 1, 4, 1, 25506, 2, 12, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cUserMaxNum.setStatus('current')
hh3cUserCurrNum = MibScalar((1, 3, 6, 1, 4, 1, 25506, 2, 12, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cUserCurrNum.setStatus('current')
hh3cUserIndexIndicator = MibScalar((1, 3, 6, 1, 4, 1, 25506, 2, 12, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cUserIndexIndicator.setStatus('current')
hh3cUserGroupObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 25506, 2, 12, 2))
hh3cUserGroupInfoTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 2, 12, 2, 1), )
if mibBuilder.loadTexts: hh3cUserGroupInfoTable.setStatus('current')
hh3cUserGroupInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 2, 12, 2, 1, 1), ).setIndexNames((0, "HH3C-USER-MIB", "hh3cUserGroupName"))
if mibBuilder.loadTexts: hh3cUserGroupInfoEntry.setStatus('current')
hh3cUserGroupName = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 12, 2, 1, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 80)))
if mibBuilder.loadTexts: hh3cUserGroupName.setStatus('current')
hh3cUserGroupInfoRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 12, 2, 1, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cUserGroupInfoRowStatus.setStatus('current')
mibBuilder.exportSymbols("HH3C-USER-MIB", hh3cSubSlotNum=hh3cSubSlotNum, hh3cUserState=hh3cUserState, hh3cNasIPAddress=hh3cNasIPAddress, hh3cExpirationDate=hh3cExpirationDate, hh3cSshService=hh3cSshService, hh3cUserInfoRowStatus=hh3cUserInfoRowStatus, hh3cIdleCut=hh3cIdleCut, hh3cTerminalService=hh3cTerminalService, hh3cUserInfoEntry=hh3cUserInfoEntry, hh3cUserCurrNum=hh3cUserCurrNum, hh3cUserGroupName=hh3cUserGroupName, hh3cUserGroupObjects=hh3cUserGroupObjects, hh3cUserIndexIndicator=hh3cUserIndexIndicator, hh3cUserAttributeEntry=hh3cUserAttributeEntry, DisplayString=DisplayString, hh3cUserInfoTable=hh3cUserInfoTable, hh3cFtpDirectory=hh3cFtpDirectory, hh3cUserName=hh3cUserName, hh3cIPAddress=hh3cIPAddress, hh3cVlan=hh3cVlan, hh3cUserGroupInfoRowStatus=hh3cUserGroupInfoRowStatus, ServiceType=ServiceType, hh3cUserAttributeTable=hh3cUserAttributeTable, hh3cAuthMode=hh3cAuthMode, hh3cTelnetService=hh3cTelnetService, hh3cLanAccessService=hh3cLanAccessService, hh3cUserIndex=hh3cUserIndex, hh3cUserGroupInfoEntry=hh3cUserGroupInfoEntry, hh3cMacAddress=hh3cMacAddress, hh3cPortalService=hh3cPortalService, hh3cPortNum=hh3cPortNum, hh3cSlotNum=hh3cSlotNum, hh3cUserGroup=hh3cUserGroup, PYSNMP_MODULE_ID=hh3cUser, hh3cUserGroupInfoTable=hh3cUserGroupInfoTable, hh3cFtpService=hh3cFtpService, hh3cUserMaxNum=hh3cUserMaxNum, hh3cAccessLimit=hh3cAccessLimit, hh3cUser=hh3cUser, hh3cUserPassword=hh3cUserPassword, hh3cUserLevel=hh3cUserLevel, hh3cUserObjects=hh3cUserObjects)
