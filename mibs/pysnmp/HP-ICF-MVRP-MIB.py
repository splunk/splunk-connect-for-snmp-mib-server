#
# PySNMP MIB module HP-ICF-MVRP-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/HP-ICF-MVRP-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:22:12 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ValueRangeConstraint, ValueSizeConstraint, ConstraintsUnion, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ValueRangeConstraint", "ValueSizeConstraint", "ConstraintsUnion", "ConstraintsIntersection")
hpSwitch, = mibBuilder.importSymbols("HP-ICF-OID", "hpSwitch")
ifIndex, = mibBuilder.importSymbols("IF-MIB", "ifIndex")
EnabledStatus, = mibBuilder.importSymbols("P-BRIDGE-MIB", "EnabledStatus")
VlanId, = mibBuilder.importSymbols("Q-BRIDGE-MIB", "VlanId")
NotificationGroup, ObjectGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ObjectGroup", "ModuleCompliance")
Unsigned32, ModuleIdentity, Counter32, iso, ObjectIdentity, MibIdentifier, Gauge32, IpAddress, Integer32, Bits, TimeTicks, NotificationType, Counter64, MibScalar, MibTable, MibTableRow, MibTableColumn = mibBuilder.importSymbols("SNMPv2-SMI", "Unsigned32", "ModuleIdentity", "Counter32", "iso", "ObjectIdentity", "MibIdentifier", "Gauge32", "IpAddress", "Integer32", "Bits", "TimeTicks", "NotificationType", "Counter64", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn")
DisplayString, TextualConvention, TruthValue, TimeInterval = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention", "TruthValue", "TimeInterval")
hpicfMvrpMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 117))
hpicfMvrpMIB.setRevisions(('2015-04-20 00:00', '2015-03-24 00:00',))
if mibBuilder.loadTexts: hpicfMvrpMIB.setLastUpdated('201504200000Z')
if mibBuilder.loadTexts: hpicfMvrpMIB.setOrganization('HP Networking')
hpicfMvrpNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 117, 0))
hpicfMvrpObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 117, 1))
hpicfMvrpConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 117, 3))
hpicfMvrpConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 117, 1, 1))
hpicfMvrpStats = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 117, 1, 2))
hpicfMvrpGlobalClearStats = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 117, 1, 1, 1), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpicfMvrpGlobalClearStats.setStatus('current')
hpicfMvrpMaxVlanLimit = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 117, 1, 1, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpicfMvrpMaxVlanLimit.setStatus('current')
hpicfMvrpPortConfigTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 117, 1, 1, 3), )
if mibBuilder.loadTexts: hpicfMvrpPortConfigTable.setStatus('current')
hpicfMvrpPortConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 117, 1, 1, 3, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: hpicfMvrpPortConfigEntry.setStatus('current')
hpicfMvrpPortConfigRegistrarMode = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 117, 1, 1, 3, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("normal", 1), ("fixed", 2))).clone('normal')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpicfMvrpPortConfigRegistrarMode.setStatus('current')
hpicfMvrpPortConfigPeriodicTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 117, 1, 1, 3, 1, 2), TimeInterval().subtype(subtypeSpec=ValueRangeConstraint(100, 1000000)).clone(100)).setUnits('centi-seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpicfMvrpPortConfigPeriodicTimer.setStatus('current')
hpicfMvrpPortConfigPeriodicTransmissionStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 117, 1, 1, 3, 1, 3), EnabledStatus().clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpicfMvrpPortConfigPeriodicTransmissionStatus.setStatus('current')
hpicfMvrpPortStatsClearStats = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 117, 1, 1, 3, 1, 4), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpicfMvrpPortStatsClearStats.setStatus('current')
hpicfMvrpPortStatsTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 117, 1, 2, 1), )
if mibBuilder.loadTexts: hpicfMvrpPortStatsTable.setStatus('current')
hpicfMvrpPortStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 117, 1, 2, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: hpicfMvrpPortStatsEntry.setStatus('current')
hpicfMvrpPortStatsNewReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 117, 1, 2, 1, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfMvrpPortStatsNewReceived.setStatus('current')
hpicfMvrpPortStatsJoinInReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 117, 1, 2, 1, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfMvrpPortStatsJoinInReceived.setStatus('current')
hpicfMvrpPortStatsJoinEmptyReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 117, 1, 2, 1, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfMvrpPortStatsJoinEmptyReceived.setStatus('current')
hpicfMvrpPortStatsLeaveReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 117, 1, 2, 1, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfMvrpPortStatsLeaveReceived.setStatus('current')
hpicfMvrpPortStatsInReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 117, 1, 2, 1, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfMvrpPortStatsInReceived.setStatus('current')
hpicfMvrpPortStatsEmptyReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 117, 1, 2, 1, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfMvrpPortStatsEmptyReceived.setStatus('current')
hpicfMvrpPortStatsLeaveAllReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 117, 1, 2, 1, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfMvrpPortStatsLeaveAllReceived.setStatus('current')
hpicfMvrpPortStatsNewTransmitted = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 117, 1, 2, 1, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfMvrpPortStatsNewTransmitted.setStatus('current')
hpicfMvrpPortStatsJoinInTransmitted = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 117, 1, 2, 1, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfMvrpPortStatsJoinInTransmitted.setStatus('current')
hpicfMvrpPortStatsJoinEmptyTransmitted = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 117, 1, 2, 1, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfMvrpPortStatsJoinEmptyTransmitted.setStatus('current')
hpicfMvrpPortStatsLeaveTransmitted = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 117, 1, 2, 1, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfMvrpPortStatsLeaveTransmitted.setStatus('current')
hpicfMvrpPortStatsInTransmitted = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 117, 1, 2, 1, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfMvrpPortStatsInTransmitted.setStatus('current')
hpicfMvrpPortStatsEmptyTransmitted = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 117, 1, 2, 1, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfMvrpPortStatsEmptyTransmitted.setStatus('current')
hpicfMvrpPortStatsLeaveAllTransmitted = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 117, 1, 2, 1, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfMvrpPortStatsLeaveAllTransmitted.setStatus('current')
hpicfMvrpPortStatsTotalPDUReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 117, 1, 2, 1, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfMvrpPortStatsTotalPDUReceived.setStatus('current')
hpicfMvrpPortStatsTotalPDUTransmitted = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 117, 1, 2, 1, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfMvrpPortStatsTotalPDUTransmitted.setStatus('current')
hpicfMvrpPortStatsFramesDiscarded = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 117, 1, 2, 1, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfMvrpPortStatsFramesDiscarded.setStatus('current')
hpicfBridgeMvrpStateTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 117, 1, 2, 2), )
if mibBuilder.loadTexts: hpicfBridgeMvrpStateTable.setStatus('current')
hpicfBridgeMvrpStateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 117, 1, 2, 2, 1), ).setIndexNames((0, "HP-ICF-MVRP-MIB", "hpicfMvrpVlanId"), (0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: hpicfBridgeMvrpStateEntry.setStatus('current')
hpicfMvrpVlanId = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 117, 1, 2, 2, 1, 1), VlanId())
if mibBuilder.loadTexts: hpicfMvrpVlanId.setStatus('current')
hpicfMvrpApplicantState = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 117, 1, 2, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11))).clone(namedValues=NamedValues(("aa", 0), ("qa", 1), ("la", 2), ("vp", 3), ("ap", 4), ("qp", 5), ("vo", 6), ("ao", 7), ("qo", 8), ("lo", 9), ("vn", 10), ("an", 11)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfMvrpApplicantState.setStatus('current')
hpicfMvrpRegistrarState = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 117, 1, 2, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("in", 1), ("lv", 2), ("mt", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfMvrpRegistrarState.setStatus('current')
hpicfMvrpVlanLimitReachedEvent = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 117, 0, 1)).setObjects(("HP-ICF-MVRP-MIB", "hpicfMvrpMaxVlanLimit"))
if mibBuilder.loadTexts: hpicfMvrpVlanLimitReachedEvent.setStatus('current')
hpicfMvrpCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 117, 3, 1))
hpicfMvrpGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 117, 3, 2))
hpicfMvrpCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 117, 3, 1, 1)).setObjects(("HP-ICF-MVRP-MIB", "hpicfMvrpBaseGroup"), ("HP-ICF-MVRP-MIB", "hpicfMvrpPortConfigGroup"), ("HP-ICF-MVRP-MIB", "hpicfMvrpPortStatsGroup"), ("HP-ICF-MVRP-MIB", "hpicfMvrpPortStateGroup"), ("HP-ICF-MVRP-MIB", "hpicfMvrpNotifyGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfMvrpCompliance = hpicfMvrpCompliance.setStatus('current')
hpicfMvrpBaseGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 117, 3, 2, 1)).setObjects(("HP-ICF-MVRP-MIB", "hpicfMvrpGlobalClearStats"), ("HP-ICF-MVRP-MIB", "hpicfMvrpMaxVlanLimit"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfMvrpBaseGroup = hpicfMvrpBaseGroup.setStatus('current')
hpicfMvrpPortConfigGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 117, 3, 2, 2)).setObjects(("HP-ICF-MVRP-MIB", "hpicfMvrpPortConfigRegistrarMode"), ("HP-ICF-MVRP-MIB", "hpicfMvrpPortConfigPeriodicTimer"), ("HP-ICF-MVRP-MIB", "hpicfMvrpPortConfigPeriodicTransmissionStatus"), ("HP-ICF-MVRP-MIB", "hpicfMvrpPortStatsClearStats"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfMvrpPortConfigGroup = hpicfMvrpPortConfigGroup.setStatus('current')
hpicfMvrpPortStatsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 117, 3, 2, 3)).setObjects(("HP-ICF-MVRP-MIB", "hpicfMvrpPortStatsNewReceived"), ("HP-ICF-MVRP-MIB", "hpicfMvrpPortStatsJoinInReceived"), ("HP-ICF-MVRP-MIB", "hpicfMvrpPortStatsJoinEmptyReceived"), ("HP-ICF-MVRP-MIB", "hpicfMvrpPortStatsLeaveReceived"), ("HP-ICF-MVRP-MIB", "hpicfMvrpPortStatsInReceived"), ("HP-ICF-MVRP-MIB", "hpicfMvrpPortStatsEmptyReceived"), ("HP-ICF-MVRP-MIB", "hpicfMvrpPortStatsLeaveAllReceived"), ("HP-ICF-MVRP-MIB", "hpicfMvrpPortStatsNewTransmitted"), ("HP-ICF-MVRP-MIB", "hpicfMvrpPortStatsJoinInTransmitted"), ("HP-ICF-MVRP-MIB", "hpicfMvrpPortStatsJoinEmptyTransmitted"), ("HP-ICF-MVRP-MIB", "hpicfMvrpPortStatsLeaveTransmitted"), ("HP-ICF-MVRP-MIB", "hpicfMvrpPortStatsInTransmitted"), ("HP-ICF-MVRP-MIB", "hpicfMvrpPortStatsEmptyTransmitted"), ("HP-ICF-MVRP-MIB", "hpicfMvrpPortStatsLeaveAllTransmitted"), ("HP-ICF-MVRP-MIB", "hpicfMvrpPortStatsTotalPDUReceived"), ("HP-ICF-MVRP-MIB", "hpicfMvrpPortStatsTotalPDUTransmitted"), ("HP-ICF-MVRP-MIB", "hpicfMvrpPortStatsFramesDiscarded"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfMvrpPortStatsGroup = hpicfMvrpPortStatsGroup.setStatus('current')
hpicfMvrpPortStateGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 117, 3, 2, 4)).setObjects(("HP-ICF-MVRP-MIB", "hpicfMvrpApplicantState"), ("HP-ICF-MVRP-MIB", "hpicfMvrpRegistrarState"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfMvrpPortStateGroup = hpicfMvrpPortStateGroup.setStatus('current')
hpicfMvrpNotifyGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 117, 3, 2, 5)).setObjects(("HP-ICF-MVRP-MIB", "hpicfMvrpVlanLimitReachedEvent"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfMvrpNotifyGroup = hpicfMvrpNotifyGroup.setStatus('current')
mibBuilder.exportSymbols("HP-ICF-MVRP-MIB", hpicfMvrpBaseGroup=hpicfMvrpBaseGroup, hpicfMvrpPortConfigRegistrarMode=hpicfMvrpPortConfigRegistrarMode, hpicfMvrpNotifyGroup=hpicfMvrpNotifyGroup, hpicfMvrpPortConfigEntry=hpicfMvrpPortConfigEntry, hpicfBridgeMvrpStateEntry=hpicfBridgeMvrpStateEntry, hpicfMvrpPortStatsLeaveReceived=hpicfMvrpPortStatsLeaveReceived, hpicfMvrpPortConfigTable=hpicfMvrpPortConfigTable, hpicfMvrpStats=hpicfMvrpStats, hpicfMvrpPortStatsLeaveAllReceived=hpicfMvrpPortStatsLeaveAllReceived, hpicfMvrpPortStatsJoinInTransmitted=hpicfMvrpPortStatsJoinInTransmitted, hpicfMvrpRegistrarState=hpicfMvrpRegistrarState, hpicfMvrpVlanLimitReachedEvent=hpicfMvrpVlanLimitReachedEvent, hpicfMvrpPortStatsLeaveTransmitted=hpicfMvrpPortStatsLeaveTransmitted, hpicfMvrpPortStateGroup=hpicfMvrpPortStateGroup, hpicfMvrpPortStatsEmptyReceived=hpicfMvrpPortStatsEmptyReceived, hpicfMvrpPortStatsTable=hpicfMvrpPortStatsTable, hpicfMvrpConfig=hpicfMvrpConfig, hpicfMvrpGlobalClearStats=hpicfMvrpGlobalClearStats, hpicfMvrpApplicantState=hpicfMvrpApplicantState, hpicfMvrpPortStatsGroup=hpicfMvrpPortStatsGroup, hpicfMvrpGroups=hpicfMvrpGroups, hpicfMvrpVlanId=hpicfMvrpVlanId, hpicfMvrpPortConfigGroup=hpicfMvrpPortConfigGroup, hpicfMvrpPortStatsEntry=hpicfMvrpPortStatsEntry, hpicfMvrpPortStatsTotalPDUReceived=hpicfMvrpPortStatsTotalPDUReceived, hpicfMvrpConformance=hpicfMvrpConformance, hpicfBridgeMvrpStateTable=hpicfBridgeMvrpStateTable, hpicfMvrpPortStatsLeaveAllTransmitted=hpicfMvrpPortStatsLeaveAllTransmitted, hpicfMvrpObjects=hpicfMvrpObjects, hpicfMvrpPortStatsInReceived=hpicfMvrpPortStatsInReceived, hpicfMvrpNotifications=hpicfMvrpNotifications, hpicfMvrpPortStatsEmptyTransmitted=hpicfMvrpPortStatsEmptyTransmitted, hpicfMvrpPortConfigPeriodicTimer=hpicfMvrpPortConfigPeriodicTimer, hpicfMvrpPortStatsClearStats=hpicfMvrpPortStatsClearStats, hpicfMvrpPortStatsJoinInReceived=hpicfMvrpPortStatsJoinInReceived, hpicfMvrpPortStatsInTransmitted=hpicfMvrpPortStatsInTransmitted, PYSNMP_MODULE_ID=hpicfMvrpMIB, hpicfMvrpPortStatsJoinEmptyReceived=hpicfMvrpPortStatsJoinEmptyReceived, hpicfMvrpPortConfigPeriodicTransmissionStatus=hpicfMvrpPortConfigPeriodicTransmissionStatus, hpicfMvrpPortStatsJoinEmptyTransmitted=hpicfMvrpPortStatsJoinEmptyTransmitted, hpicfMvrpMaxVlanLimit=hpicfMvrpMaxVlanLimit, hpicfMvrpPortStatsTotalPDUTransmitted=hpicfMvrpPortStatsTotalPDUTransmitted, hpicfMvrpPortStatsNewReceived=hpicfMvrpPortStatsNewReceived, hpicfMvrpMIB=hpicfMvrpMIB, hpicfMvrpPortStatsFramesDiscarded=hpicfMvrpPortStatsFramesDiscarded, hpicfMvrpCompliances=hpicfMvrpCompliances, hpicfMvrpPortStatsNewTransmitted=hpicfMvrpPortStatsNewTransmitted, hpicfMvrpCompliance=hpicfMvrpCompliance)
