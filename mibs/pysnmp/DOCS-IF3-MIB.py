#
# PySNMP MIB module DOCS-IF3-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/DOCS-IF3-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:27:02 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ConstraintsIntersection, SingleValueConstraint, ConstraintsUnion, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ConstraintsIntersection", "SingleValueConstraint", "ConstraintsUnion", "ValueRangeConstraint")
clabProjDocsis, = mibBuilder.importSymbols("CLAB-DEF-MIB", "clabProjDocsis")
NodeName, = mibBuilder.importSymbols("CLAB-TOPO-MIB", "NodeName")
docsDevEvLevel, docsDevEvText, docsDevEvId, docsDevEvLastTime = mibBuilder.importSymbols("DOCS-CABLE-DEVICE-MIB", "docsDevEvLevel", "docsDevEvText", "docsDevEvId", "docsDevEvLastTime")
DocsEqualizerData, DocsisQosVersion, TenthdBmV, TenthdB, DocsisUpstreamType = mibBuilder.importSymbols("DOCS-IF-MIB", "DocsEqualizerData", "DocsisQosVersion", "TenthdBmV", "TenthdB", "DocsisUpstreamType")
InterfaceIndexOrZero, ifIndex, InterfaceIndex = mibBuilder.importSymbols("IF-MIB", "InterfaceIndexOrZero", "ifIndex", "InterfaceIndex")
InetAddressIPv6, InetAddressIPv4 = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddressIPv6", "InetAddressIPv4")
SnmpAdminString, = mibBuilder.importSymbols("SNMP-FRAMEWORK-MIB", "SnmpAdminString")
SnmpTagList, = mibBuilder.importSymbols("SNMP-TARGET-MIB", "SnmpTagList")
ObjectGroup, NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "NotificationGroup", "ModuleCompliance")
sysName, = mibBuilder.importSymbols("SNMPv2-MIB", "sysName")
Gauge32, Counter32, iso, Integer32, Bits, TimeTicks, IpAddress, NotificationType, MibIdentifier, ModuleIdentity, ObjectIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, Unsigned32, Counter64 = mibBuilder.importSymbols("SNMPv2-SMI", "Gauge32", "Counter32", "iso", "Integer32", "Bits", "TimeTicks", "IpAddress", "NotificationType", "MibIdentifier", "ModuleIdentity", "ObjectIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Unsigned32", "Counter64")
TextualConvention, RowStatus, DisplayString, StorageType, MacAddress, DateAndTime, TruthValue = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "RowStatus", "DisplayString", "StorageType", "MacAddress", "DateAndTime", "TruthValue")
docsIf3Mib = ModuleIdentity((1, 3, 6, 1, 4, 1, 4491, 2, 1, 20))
docsIf3Mib.setRevisions(('2017-06-15 00:00', '2016-08-04 00:00', '2016-05-05 00:00', '2015-05-20 00:00', '2015-04-08 00:00', '2013-11-19 00:00', '2013-04-04 00:00', '2012-11-13 00:00', '2012-08-09 00:00', '2011-02-10 00:00', '2010-06-11 00:00', '2010-01-15 00:00', '2009-05-29 00:00', '2009-01-21 00:00', '2008-05-22 00:00', '2008-02-15 00:00', '2007-12-06 00:00', '2007-08-03 00:00', '2007-05-18 00:00', '2007-02-23 00:00', '2006-12-07 17:00',))
if mibBuilder.loadTexts: docsIf3Mib.setLastUpdated('201706150000Z')
if mibBuilder.loadTexts: docsIf3Mib.setOrganization('Cable Television Laboratories, Inc.')
class CmRegState(TextualConvention, Integer32):
    reference = 'DOCSIS 3.0 MAC and Upper Layer Protocols Interface Specification CM-SP-MULPIv3.0-I08-080522, Cable Modem - CMTS Interaction section.'
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 21, 5, 22, 6, 14, 15, 16, 7, 17, 8, 9, 10, 18, 11, 13, 12, 19, 20, 23))
    namedValues = NamedValues(("other", 1), ("notReady", 2), ("notSynchronized", 3), ("phySynchronized", 4), ("dsTopologyResolutionInProgress", 21), ("usParametersAcquired", 5), ("rangingInProgress", 22), ("rangingComplete", 6), ("eaeInProgress", 14), ("dhcpv4InProgress", 15), ("dhcpv6InProgress", 16), ("dhcpv4Complete", 7), ("dhcpv6Complete", 17), ("todEstablished", 8), ("securityEstablished", 9), ("configFileDownloadComplete", 10), ("registrationInProgress", 18), ("registrationComplete", 11), ("accessDenied", 13), ("operational", 12), ("bpiInit", 19), ("forwardingDisabled", 20), ("rfMuteAll", 23))

class CmtsCmRegState(TextualConvention, Integer32):
    reference = 'DOCSIS 3.0 MAC and Upper Layer Protocols Interface Specification CM-SP-MULPIv3.0-I08-080522, Cable Modem - CMTS Interaction section.'
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 4, 10, 11, 12, 5, 13, 14, 15, 16, 6, 8, 9, 17, 18))
    namedValues = NamedValues(("other", 1), ("initialRanging", 2), ("rangingAutoAdjComplete", 4), ("startEae", 10), ("startDhcpv4", 11), ("startDhcpv6", 12), ("dhcpv4Complete", 5), ("dhcpv6Complete", 13), ("startConfigFileDownload", 14), ("configFileDownloadComplete", 15), ("startRegistration", 16), ("registrationComplete", 6), ("operational", 8), ("bpiInit", 9), ("forwardingDisabled", 17), ("rfMuteAll", 18))

class ScdmaSelectionString(TextualConvention, OctetString):
    reference = 'DOCSIS 3.0 Physical Layer Specification CM-SP-PHYv3.0-I05-070803, Mini-slot Numbering Parameters in UCD section.'
    status = 'current'
    subtypeSpec = OctetString.subtypeSpec + ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(16, 16), )
class AmplitudeData(TextualConvention, OctetString):
    status = 'current'
    subtypeSpec = OctetString.subtypeSpec + ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(2, 4116), )
class SpectrumAnalysisWindowFunction(TextualConvention, Integer32):
    reference = "Harris, Fredric J. (Jan 1978). 'On the use of Windows for Harmonic Analysis with the Discrete Fourier Transform'. Proceedings of the IEEE, Vol 66, Issue 1, Jan 1978 doi:10.1109/PROC.1978.10837"
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7))
    namedValues = NamedValues(("other", 0), ("hann", 1), ("blackmanHarris", 2), ("rectangular", 3), ("hamming", 4), ("flatTop", 5), ("gaussian", 6), ("chebyshev", 7))

class Tlv8(TextualConvention, OctetString):
    reference = 'DOCSIS 3.0 MAC and Upper Layer Protocols Interface Specification CM-SP-MULPIv3.0-I08-080522, Common Radio Frequency Interface Encodings Annex.'
    status = 'current'
    subtypeSpec = OctetString.subtypeSpec + ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(2, 255), )
class ChId(TextualConvention, Unsigned32):
    reference = 'DOCSIS 3.0 MAC and Upper Layer Protocols Interface Specification CM-SP-MULPIv3.0-I08-080522, Upstream Channel Descriptor (UCD) section.'
    status = 'current'
    displayHint = 'd'
    subtypeSpec = Unsigned32.subtypeSpec + ValueRangeConstraint(0, 255)

class ChSetId(TextualConvention, Unsigned32):
    reference = 'DOCSIS 3.0 MAC and Upper Layer Protocols Interface Specification CM-SP-MULPIv3.0-I08-080522, Channel Bonding section.'
    status = 'current'
    displayHint = 'd'

class ChannelList(TextualConvention, OctetString):
    status = 'current'
    displayHint = '1d,'
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(0, 255)

class AttributeMask(TextualConvention, Bits):
    reference = 'DOCSIS 3.0 MAC and Upper Layer Protocols Interface Specification CM-SP-MULPIv3.0-I08-080522, Service Flow Assignment section.'
    status = 'current'
    namedValues = NamedValues(("bonding", 0), ("lowLatency", 1), ("highAvailability", 2))

class AttrAggrRuleMask(TextualConvention, OctetString):
    reference = 'DOCSIS 3.0 MAC and Upper Layer Protocols Interface Specification CM-SP-MULPIv3.0-I08-080522, Service Flow Assignment section.'
    status = 'current'
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(4, 4)
    fixedLength = 4

class RcpId(TextualConvention, OctetString):
    reference = 'DOCSIS 3.0 MAC and Upper Layer Protocols Interface Specification CM-SP-MULPIv3.0-I08-080522, RCP-ID section in the Common Radio Frequency Interface Encodings Annex.'
    status = 'current'
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(5, 5)
    fixedLength = 5

class Dsid(TextualConvention, Unsigned32):
    reference = 'DOCSIS 3.0 MAC and Upper Layer Protocols Interface Specification CM-SP-MULPIv3.0-I08-080522, DSID Definition section.'
    status = 'current'
    displayHint = 'd'
    subtypeSpec = Unsigned32.subtypeSpec + ValueRangeConstraint(0, 1048575)

class RangingState(TextualConvention, Integer32):
    reference = 'DOCSIS 3.0 MAC and Upper Layer Protocols Interface Specification CM-SP-MULPIv3.0-I08-080522, Cable Modem - CMTS Interaction section.'
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))
    namedValues = NamedValues(("other", 1), ("aborted", 2), ("retriesExceeded", 3), ("success", 4), ("continue", 5), ("timeoutT4", 6))

class IfDirection(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("downstream", 1), ("upstream", 2))

docsIf3Notifications = MibIdentifier((1, 3, 6, 1, 4, 1, 4491, 2, 1, 20, 0))
docsIf3MibObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 4491, 2, 1, 20, 1))
docsIf3CmtsEventNotif = NotificationType((1, 3, 6, 1, 4, 1, 4491, 2, 1, 20, 0, 1)).setObjects(("DOCS-CABLE-DEVICE-MIB", "docsDevEvLevel"), ("DOCS-CABLE-DEVICE-MIB", "docsDevEvId"), ("DOCS-CABLE-DEVICE-MIB", "docsDevEvText"), ("DOCS-CABLE-DEVICE-MIB", "docsDevEvLastTime"), ("SNMPv2-MIB", "sysName"))
if mibBuilder.loadTexts: docsIf3CmtsEventNotif.setStatus('current')
docsIf3CmEventNotif = NotificationType((1, 3, 6, 1, 4, 1, 4491, 2, 1, 20, 0, 2)).setObjects(("DOCS-CABLE-DEVICE-MIB", "docsDevEvLevel"), ("DOCS-CABLE-DEVICE-MIB", "docsDevEvId"), ("DOCS-CABLE-DEVICE-MIB", "docsDevEvText"), ("DOCS-CABLE-DEVICE-MIB", "docsDevEvLastTime"))
if mibBuilder.loadTexts: docsIf3CmEventNotif.setStatus('current')
docsIf3CmStatusTable = MibTable((1, 3, 6, 1, 4, 1, 4491, 2, 1, 20, 1, 1), )
if mibBuilder.loadTexts: docsIf3CmStatusTable.setStatus('current')
docsIf3CmStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4491, 2, 1, 20, 1, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: docsIf3CmStatusEntry.setStatus('current')
docsIf3CmStatusValue = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 20, 1, 1, 1, 1), CmRegState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIf3CmStatusValue.setStatus('current')
docsIf3CmStatusCode = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 20, 1, 1, 1, 2), OctetString().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(5, 5), ValueSizeConstraint(6, 6), ValueSizeConstraint(7, 7), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIf3CmStatusCode.setStatus('current')
docsIf3CmStatusResets = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 20, 1, 1, 1, 3), Counter32()).setUnits('resets').setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIf3CmStatusResets.setStatus('current')
docsIf3CmStatusLostSyncs = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 20, 1, 1, 1, 4), Counter32()).setUnits('messages').setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIf3CmStatusLostSyncs.setStatus('current')
docsIf3CmStatusInvalidMaps = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 20, 1, 1, 1, 5), Counter32()).setUnits('maps').setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIf3CmStatusInvalidMaps.setStatus('current')
docsIf3CmStatusInvalidUcds = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 20, 1, 1, 1, 6), Counter32()).setUnits('messages').setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIf3CmStatusInvalidUcds.setStatus('current')
docsIf3CmStatusInvalidRangingRsps = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 20, 1, 1, 1, 7), Counter32()).setUnits('messages').setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIf3CmStatusInvalidRangingRsps.setStatus('current')
docsIf3CmStatusInvalidRegRsps = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 20, 1, 1, 1, 8), Counter32()).setUnits('messages').setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIf3CmStatusInvalidRegRsps.setStatus('current')
docsIf3CmStatusT1Timeouts = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 20, 1, 1, 1, 9), Counter32()).setUnits('timeouts').setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIf3CmStatusT1Timeouts.setStatus('current')
docsIf3CmStatusT2Timeouts = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 20, 1, 1, 1, 10), Counter32()).setUnits('timeouts').setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIf3CmStatusT2Timeouts.setStatus('current')
docsIf3CmStatusUCCsSuccesses = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 20, 1, 1, 1, 11), Counter32()).setUnits('attempts').setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIf3CmStatusUCCsSuccesses.setStatus('obsolete')
docsIf3CmStatusUCCFails = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 20, 1, 1, 1, 12), Counter32()).setUnits('attempts').setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIf3CmStatusUCCFails.setStatus('obsolete')
docsIf3CmStatusEnergyMgt1x1OperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 20, 1, 1, 1, 13), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIf3CmStatusEnergyMgt1x1OperStatus.setStatus('current')
docsIf3CmStatusUsTable = MibTable((1, 3, 6, 1, 4, 1, 4491, 2, 1, 20, 1, 2), )
if mibBuilder.loadTexts: docsIf3CmStatusUsTable.setStatus('current')
docsIf3CmStatusUsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4491, 2, 1, 20, 1, 2, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: docsIf3CmStatusUsEntry.setStatus('current')
docsIf3CmStatusUsTxPower = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 20, 1, 2, 1, 1), TenthdBmV()).setUnits('TenthdBmV').setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIf3CmStatusUsTxPower.setStatus('current')
docsIf3CmStatusUsT3Timeouts = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 20, 1, 2, 1, 2), Counter32()).setUnits('timeouts').setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIf3CmStatusUsT3Timeouts.setStatus('current')
docsIf3CmStatusUsT4Timeouts = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 20, 1, 2, 1, 3), Counter32()).setUnits('timeouts').setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIf3CmStatusUsT4Timeouts.setStatus('current')
docsIf3CmStatusUsRangingAborteds = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 20, 1, 2, 1, 4), Counter32()).setUnits('attempts').setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIf3CmStatusUsRangingAborteds.setStatus('current')
docsIf3CmStatusUsModulationType = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 20, 1, 2, 1, 5), DocsisUpstreamType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIf3CmStatusUsModulationType.setStatus('current')
docsIf3CmStatusUsEqData = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 20, 1, 2, 1, 6), DocsEqualizerData()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIf3CmStatusUsEqData.setStatus('current')
docsIf3CmStatusUsT3Exceededs = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 20, 1, 2, 1, 7), Counter32()).setUnits('timeouts').setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIf3CmStatusUsT3Exceededs.setStatus('current')
docsIf3CmStatusUsIsMuted = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 20, 1, 2, 1, 8), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIf3CmStatusUsIsMuted.setStatus('current')
docsIf3CmStatusUsRangingStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 20, 1, 2, 1, 9), RangingState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIf3CmStatusUsRangingStatus.setStatus('current')
docsIf3CmtsCmRegStatusTable = MibTable((1, 3, 6, 1, 4, 1, 4491, 2, 1, 20, 1, 3), )
if mibBuilder.loadTexts: docsIf3CmtsCmRegStatusTable.setStatus('current')
docsIf3CmtsCmRegStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4491, 2, 1, 20, 1, 3, 1), ).setIndexNames((0, "DOCS-IF3-MIB", "docsIf3CmtsCmRegStatusId"))
if mibBuilder.loadTexts: docsIf3CmtsCmRegStatusEntry.setStatus('current')
docsIf3CmtsCmRegStatusId = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 20, 1, 3, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295)))
if mibBuilder.loadTexts: docsIf3CmtsCmRegStatusId.setStatus('current')
docsIf3CmtsCmRegStatusMacAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 20, 1, 3, 1, 2), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIf3CmtsCmRegStatusMacAddr.setStatus('current')
docsIf3CmtsCmRegStatusIPv6Addr = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 20, 1, 3, 1, 3), InetAddressIPv6()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIf3CmtsCmRegStatusIPv6Addr.setStatus('current')
docsIf3CmtsCmRegStatusIPv6LinkLocal = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 20, 1, 3, 1, 4), InetAddressIPv6()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIf3CmtsCmRegStatusIPv6LinkLocal.setStatus('current')
docsIf3CmtsCmRegStatusIPv4Addr = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 20, 1, 3, 1, 5), InetAddressIPv4()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIf3CmtsCmRegStatusIPv4Addr.setStatus('current')
docsIf3CmtsCmRegStatusValue = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 20, 1, 3, 1, 6), CmtsCmRegState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIf3CmtsCmRegStatusValue.setStatus('current')
docsIf3CmtsCmRegStatusMdIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 20, 1, 3, 1, 7), InterfaceIndexOrZero()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIf3CmtsCmRegStatusMdIfIndex.setStatus('current')
docsIf3CmtsCmRegStatusMdCmSgId = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 20, 1, 3, 1, 8), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIf3CmtsCmRegStatusMdCmSgId.setStatus('current')
docsIf3CmtsCmRegStatusRcpId = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 20, 1, 3, 1, 9), RcpId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIf3CmtsCmRegStatusRcpId.setStatus('current')
docsIf3CmtsCmRegStatusRccStatusId = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 20, 1, 3, 1, 10), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIf3CmtsCmRegStatusRccStatusId.setStatus('current')
docsIf3CmtsCmRegStatusRcsId = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 20, 1, 3, 1, 11), ChSetId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIf3CmtsCmRegStatusRcsId.setStatus('current')
docsIf3CmtsCmRegStatusTcsId = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 20, 1, 3, 1, 12), ChSetId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIf3CmtsCmRegStatusTcsId.setStatus('current')
docsIf3CmtsCmRegStatusQosVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 20, 1, 3, 1, 13), DocsisQosVersion()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIf3CmtsCmRegStatusQosVersion.setStatus('current')
docsIf3CmtsCmRegStatusLastRegTime = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 20, 1, 3, 1, 14), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIf3CmtsCmRegStatusLastRegTime.setStatus('current')
docsIf3CmtsCmRegStatusAddrResolutionReqs = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 20, 1, 3, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIf3CmtsCmRegStatusAddrResolutionReqs.setStatus('current')
docsIf3CmtsCmRegStatusEnergyMgtEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 20, 1, 3, 1, 16), Bits().clone(namedValues=NamedValues(("em1x1Mode", 0), ("dlsMode", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIf3CmtsCmRegStatusEnergyMgtEnabled.setStatus('current')
docsIf3CmtsCmRegStatusEnergyMgtOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 20, 1, 3, 1, 17), Bits().clone(namedValues=NamedValues(("em1x1Mode", 0), ("dlsMode", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIf3CmtsCmRegStatusEnergyMgtOperStatus.setStatus('current')
docsIf3CmtsCmUsStatusTable = MibTable((1, 3, 6, 1, 4, 1, 4491, 2, 1, 20, 1, 4), )
if mibBuilder.loadTexts: docsIf3CmtsCmUsStatusTable.setStatus('current')
docsIf3CmtsCmUsStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4491, 2, 1, 20, 1, 4, 1), ).setIndexNames((0, "DOCS-IF3-MIB", "docsIf3CmtsCmRegStatusId"), (0, "DOCS-IF3-MIB", "docsIf3CmtsCmUsStatusChIfIndex"))
if mibBuilder.loadTexts: docsIf3CmtsCmUsStatusEntry.setStatus('current')
docsIf3CmtsCmUsStatusChIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 20, 1, 4, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: docsIf3CmtsCmUsStatusChIfIndex.setStatus('current')
docsIf3CmtsCmUsStatusModulationType = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 20, 1, 4, 1, 2), DocsisUpstreamType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIf3CmtsCmUsStatusModulationType.setStatus('current')
docsIf3CmtsCmUsStatusRxPower = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 20, 1, 4, 1, 3), TenthdBmV()).setUnits('TenthdBmV').setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIf3CmtsCmUsStatusRxPower.setStatus('current')
docsIf3CmtsCmUsStatusSignalNoise = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 20, 1, 4, 1, 4), TenthdB()).setUnits('TenthdB').setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIf3CmtsCmUsStatusSignalNoise.setStatus('current')
docsIf3CmtsCmUsStatusMicroreflections = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 20, 1, 4, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setUnits('-dBc').setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIf3CmtsCmUsStatusMicroreflections.setStatus('current')
docsIf3CmtsCmUsStatusEqData = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 20, 1, 4, 1, 6), DocsEqualizerData()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIf3CmtsCmUsStatusEqData.setStatus('current')
docsIf3CmtsCmUsStatusUnerroreds = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 20, 1, 4, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIf3CmtsCmUsStatusUnerroreds.setStatus('current')
docsIf3CmtsCmUsStatusCorrecteds = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 20, 1, 4, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIf3CmtsCmUsStatusCorrecteds.setStatus('current')
docsIf3CmtsCmUsStatusUncorrectables = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 20, 1, 4, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIf3CmtsCmUsStatusUncorrectables.setStatus('current')
docsIf3CmtsCmUsStatusHighResolutionTimingOffset = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 20, 1, 4, 1, 10), Integer32()).setUnits('time tick/(64*256)').setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIf3CmtsCmUsStatusHighResolutionTimingOffset.setStatus('current')
docsIf3CmtsCmUsStatusIsMuted = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 20, 1, 4, 1, 11), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIf3CmtsCmUsStatusIsMuted.setStatus('current')
docsIf3CmtsCmUsStatusRangingStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 20, 1, 4, 1, 12), RangingState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIf3CmtsCmUsStatusRangingStatus.setStatus('current')
docsIf3MdChCfgTable = MibTable((1, 3, 6, 1, 4, 1, 4491, 2, 1, 20, 1, 5), )
if mibBuilder.loadTexts: docsIf3MdChCfgTable.setStatus('current')
docsIf3MdChCfgEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4491, 2, 1, 20, 1, 5, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "DOCS-IF3-MIB", "docsIf3MdChCfgChIfIndex"))
if mibBuilder.loadTexts: docsIf3MdChCfgEntry.setStatus('current')
docsIf3MdChCfgChIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 20, 1, 5, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: docsIf3MdChCfgChIfIndex.setStatus('current')
docsIf3MdChCfgIsPriCapableDs = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 20, 1, 5, 1, 2), TruthValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: docsIf3MdChCfgIsPriCapableDs.setStatus('current')
docsIf3MdChCfgChId = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 20, 1, 5, 1, 3), ChId().subtype(subtypeSpec=ValueRangeConstraint(1, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: docsIf3MdChCfgChId.setStatus('current')
docsIf3MdChCfgSfProvAttrMask = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 20, 1, 5, 1, 4), AttributeMask().clone(hexValue="00000000")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: docsIf3MdChCfgSfProvAttrMask.setStatus('current')
docsIf3MdChCfgRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 20, 1, 5, 1, 5), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: docsIf3MdChCfgRowStatus.setStatus('current')
docsIf3RccCfgTable = MibTable((1, 3, 6, 1, 4, 1, 4491, 2, 1, 20, 1, 6), )
if mibBuilder.loadTexts: docsIf3RccCfgTable.setStatus('obsolete')
docsIf3RccCfgEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4491, 2, 1, 20, 1, 6, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "DOCS-IF3-MIB", "docsIf3RccCfgRcpId"), (0, "DOCS-IF3-MIB", "docsIf3RccCfgRccCfgId"))
if mibBuilder.loadTexts: docsIf3RccCfgEntry.setStatus('obsolete')
docsIf3RccCfgRcpId = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 20, 1, 6, 1, 1), RcpId())
if mibBuilder.loadTexts: docsIf3RccCfgRcpId.setStatus('obsolete')
docsIf3RccCfgRccCfgId = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 20, 1, 6, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295)))
if mibBuilder.loadTexts: docsIf3RccCfgRccCfgId.setStatus('obsolete')
docsIf3RccCfgVendorSpecific = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 20, 1, 6, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 252)).clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: docsIf3RccCfgVendorSpecific.setStatus('obsolete')
docsIf3RccCfgDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 20, 1, 6, 1, 4), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: docsIf3RccCfgDescription.setStatus('obsolete')
docsIf3RccCfgRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 20, 1, 6, 1, 5), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: docsIf3RccCfgRowStatus.setStatus('obsolete')
docsIf3RccStatusTable = MibTable((1, 3, 6, 1, 4, 1, 4491, 2, 1, 20, 1, 7), )
if mibBuilder.loadTexts: docsIf3RccStatusTable.setStatus('current')
docsIf3RccStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4491, 2, 1, 20, 1, 7, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "DOCS-IF3-MIB", "docsIf3RccStatusRcpId"), (0, "DOCS-IF3-MIB", "docsIf3RccStatusRccStatusId"))
if mibBuilder.loadTexts: docsIf3RccStatusEntry.setStatus('current')
docsIf3RccStatusRcpId = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 20, 1, 7, 1, 1), RcpId())
if mibBuilder.loadTexts: docsIf3RccStatusRcpId.setStatus('current')
docsIf3RccStatusRccStatusId = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 20, 1, 7, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295)))
if mibBuilder.loadTexts: docsIf3RccStatusRccStatusId.setStatus('current')
docsIf3RccStatusRccCfgId = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 20, 1, 7, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIf3RccStatusRccCfgId.setStatus('current')
docsIf3RccStatusValidityCode = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 20, 1, 7, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9))).clone(namedValues=NamedValues(("other", 1), ("valid", 2), ("invalid", 3), ("wrongPrimaryDs", 4), ("missingPrimaryDs", 5), ("multiplePrimaryDs", 6), ("duplicateDs", 7), ("wrongFrequencyRange", 8), ("wrongConnectivity", 9)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIf3RccStatusValidityCode.setStatus('current')
docsIf3RccStatusValidityCodeText = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 20, 1, 7, 1, 5), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIf3RccStatusValidityCodeText.setStatus('current')
docsIf3RxChCfgTable = MibTable((1, 3, 6, 1, 4, 1, 4491, 2, 1, 20, 1, 8), )
if mibBuilder.loadTexts: docsIf3RxChCfgTable.setStatus('obsolete')
docsIf3RxChCfgEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4491, 2, 1, 20, 1, 8, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "DOCS-IF3-MIB", "docsIf3RccCfgRcpId"), (0, "DOCS-IF3-MIB", "docsIf3RccCfgRccCfgId"), (0, "DOCS-IF3-MIB", "docsIf3RxChCfgRcId"))
if mibBuilder.loadTexts: docsIf3RxChCfgEntry.setStatus('obsolete')
docsIf3RxChCfgRcId = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 20, 1, 8, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 255)))
if mibBuilder.loadTexts: docsIf3RxChCfgRcId.setStatus('obsolete')
docsIf3RxChCfgChIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 20, 1, 8, 1, 2), InterfaceIndex()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: docsIf3RxChCfgChIfIndex.setStatus('obsolete')
docsIf3RxChCfgPrimaryDsIndicator = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 20, 1, 8, 1, 3), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: docsIf3RxChCfgPrimaryDsIndicator.setStatus('obsolete')
docsIf3RxChCfgRcRmConnectivityId = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 20, 1, 8, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: docsIf3RxChCfgRcRmConnectivityId.setStatus('obsolete')
docsIf3RxChCfgRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 20, 1, 8, 1, 5), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: docsIf3RxChCfgRowStatus.setStatus('obsolete')
docsIf3RxChStatusTable = MibTable((1, 3, 6, 1, 4, 1, 4491, 2, 1, 20, 1, 9), )
if mibBuilder.loadTexts: docsIf3RxChStatusTable.setStatus('current')
docsIf3RxChStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4491, 2, 1, 20, 1, 9, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "DOCS-IF3-MIB", "docsIf3RccStatusRcpId"), (0, "DOCS-IF3-MIB", "docsIf3RccStatusRccStatusId"), (0, "DOCS-IF3-MIB", "docsIf3RxChStatusRcId"))
if mibBuilder.loadTexts: docsIf3RxChStatusEntry.setStatus('current')
docsIf3RxChStatusRcId = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 20, 1, 9, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 255)))
if mibBuilder.loadTexts: docsIf3RxChStatusRcId.setStatus('current')
docsIf3RxChStatusChIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 20, 1, 9, 1, 2), InterfaceIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIf3RxChStatusChIfIndex.setStatus('current')
docsIf3RxChStatusPrimaryDsIndicator = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 20, 1, 9, 1, 3), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIf3RxChStatusPrimaryDsIndicator.setStatus('current')
docsIf3RxChStatusRcRmConnectivityId = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 20, 1, 9, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIf3RxChStatusRcRmConnectivityId.setStatus('current')
docsIf3RxModuleCfgTable = MibTable((1, 3, 6, 1, 4, 1, 4491, 2, 1, 20, 1, 10), )
if mibBuilder.loadTexts: docsIf3RxModuleCfgTable.setStatus('obsolete')
docsIf3RxModuleCfgEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4491, 2, 1, 20, 1, 10, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "DOCS-IF3-MIB", "docsIf3RccCfgRcpId"), (0, "DOCS-IF3-MIB", "docsIf3RccCfgRccCfgId"), (0, "DOCS-IF3-MIB", "docsIf3RxModuleCfgRmId"))
if mibBuilder.loadTexts: docsIf3RxModuleCfgEntry.setStatus('obsolete')
docsIf3RxModuleCfgRmId = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 20, 1, 10, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 255)))
if mibBuilder.loadTexts: docsIf3RxModuleCfgRmId.setStatus('obsolete')
docsIf3RxModuleCfgRmRmConnectivityId = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 20, 1, 10, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: docsIf3RxModuleCfgRmRmConnectivityId.setStatus('obsolete')
docsIf3RxModuleCfgFirstCenterFrequency = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 20, 1, 10, 1, 3), Unsigned32()).setUnits('Hz').setMaxAccess("readcreate")
if mibBuilder.loadTexts: docsIf3RxModuleCfgFirstCenterFrequency.setStatus('obsolete')
docsIf3RxModuleCfgRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 20, 1, 10, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: docsIf3RxModuleCfgRowStatus.setStatus('obsolete')
docsIf3RxModuleStatusTable = MibTable((1, 3, 6, 1, 4, 1, 4491, 2, 1, 20, 1, 11), )
if mibBuilder.loadTexts: docsIf3RxModuleStatusTable.setStatus('current')
docsIf3RxModuleStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4491, 2, 1, 20, 1, 11, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "DOCS-IF3-MIB", "docsIf3RccStatusRcpId"), (0, "DOCS-IF3-MIB", "docsIf3RccStatusRccStatusId"), (0, "DOCS-IF3-MIB", "docsIf3RxModuleStatusRmId"))
if mibBuilder.loadTexts: docsIf3RxModuleStatusEntry.setStatus('current')
docsIf3RxModuleStatusRmId = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 20, 1, 11, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 255)))
if mibBuilder.loadTexts: docsIf3RxModuleStatusRmId.setStatus('current')
docsIf3RxModuleStatusRmRmConnectivityId = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 20, 1, 11, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIf3RxModuleStatusRmRmConnectivityId.setStatus('current')
docsIf3RxModuleStatusFirstCenterFrequency = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 20, 1, 11, 1, 3), Unsigned32()).setUnits('Hz').setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIf3RxModuleStatusFirstCenterFrequency.setStatus('current')
docsIf3MdNodeStatusTable = MibTable((1, 3, 6, 1, 4, 1, 4491, 2, 1, 20, 1, 12), )
if mibBuilder.loadTexts: docsIf3MdNodeStatusTable.setStatus('current')
docsIf3MdNodeStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4491, 2, 1, 20, 1, 12, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "DOCS-IF3-MIB", "docsIf3MdNodeStatusNodeName"), (0, "DOCS-IF3-MIB", "docsIf3MdNodeStatusMdCmSgId"))
if mibBuilder.loadTexts: docsIf3MdNodeStatusEntry.setStatus('current')
docsIf3MdNodeStatusNodeName = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 20, 1, 12, 1, 1), NodeName().subtype(subtypeSpec=ValueSizeConstraint(1, 64)))
if mibBuilder.loadTexts: docsIf3MdNodeStatusNodeName.setStatus('current')
docsIf3MdNodeStatusMdCmSgId = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 20, 1, 12, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295)))
if mibBuilder.loadTexts: docsIf3MdNodeStatusMdCmSgId.setStatus('current')
docsIf3MdNodeStatusMdDsSgId = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 20, 1, 12, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIf3MdNodeStatusMdDsSgId.setStatus('current')
docsIf3MdNodeStatusMdUsSgId = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 20, 1, 12, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIf3MdNodeStatusMdUsSgId.setStatus('current')
docsIf3MdDsSgStatusTable = MibTable((1, 3, 6, 1, 4, 1, 4491, 2, 1, 20, 1, 13), )
if mibBuilder.loadTexts: docsIf3MdDsSgStatusTable.setStatus('current')
docsIf3MdDsSgStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4491, 2, 1, 20, 1, 13, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "DOCS-IF3-MIB", "docsIf3MdDsSgStatusMdDsSgId"))
if mibBuilder.loadTexts: docsIf3MdDsSgStatusEntry.setStatus('current')
docsIf3MdDsSgStatusMdDsSgId = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 20, 1, 13, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 255)))
if mibBuilder.loadTexts: docsIf3MdDsSgStatusMdDsSgId.setStatus('current')
docsIf3MdDsSgStatusChSetId = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 20, 1, 13, 1, 2), ChSetId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIf3MdDsSgStatusChSetId.setStatus('current')
docsIf3MdUsSgStatusTable = MibTable((1, 3, 6, 1, 4, 1, 4491, 2, 1, 20, 1, 14), )
if mibBuilder.loadTexts: docsIf3MdUsSgStatusTable.setStatus('current')
docsIf3MdUsSgStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4491, 2, 1, 20, 1, 14, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "DOCS-IF3-MIB", "docsIf3MdUsSgStatusMdUsSgId"))
if mibBuilder.loadTexts: docsIf3MdUsSgStatusEntry.setStatus('current')
docsIf3MdUsSgStatusMdUsSgId = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 20, 1, 14, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 255)))
if mibBuilder.loadTexts: docsIf3MdUsSgStatusMdUsSgId.setStatus('current')
docsIf3MdUsSgStatusChSetId = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 20, 1, 14, 1, 2), ChSetId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIf3MdUsSgStatusChSetId.setStatus('current')
docsIf3MdUsToDsChMappingTable = MibTable((1, 3, 6, 1, 4, 1, 4491, 2, 1, 20, 1, 15), )
if mibBuilder.loadTexts: docsIf3MdUsToDsChMappingTable.setStatus('current')
docsIf3MdUsToDsChMappingEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4491, 2, 1, 20, 1, 15, 1), ).setIndexNames((0, "DOCS-IF3-MIB", "docsIf3MdUsToDsChMappingUsIfIndex"), (0, "DOCS-IF3-MIB", "docsIf3MdUsToDsChMappingDsIfIndex"), (0, "DOCS-IF3-MIB", "docsIf3MdUsToDsChMappingMdIfIndex"))
if mibBuilder.loadTexts: docsIf3MdUsToDsChMappingEntry.setStatus('current')
docsIf3MdUsToDsChMappingUsIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 20, 1, 15, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: docsIf3MdUsToDsChMappingUsIfIndex.setStatus('current')
docsIf3MdUsToDsChMappingDsIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 20, 1, 15, 1, 2), InterfaceIndex())
if mibBuilder.loadTexts: docsIf3MdUsToDsChMappingDsIfIndex.setStatus('current')
docsIf3MdUsToDsChMappingMdIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 20, 1, 15, 1, 3), InterfaceIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIf3MdUsToDsChMappingMdIfIndex.setStatus('current')
docsIf3MdCfgTable = MibTable((1, 3, 6, 1, 4, 1, 4491, 2, 1, 20, 1, 16), )
if mibBuilder.loadTexts: docsIf3MdCfgTable.setStatus('current')
docsIf3MdCfgEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4491, 2, 1, 20, 1, 16, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: docsIf3MdCfgEntry.setStatus('current')
docsIf3MdCfgMddInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 20, 1, 16, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 2000)).clone(2000)).setUnits('milliseconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: docsIf3MdCfgMddInterval.setStatus('current')
docsIf3MdCfgIpProvMode = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 20, 1, 16, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("ipv4Only", 0), ("ipv6Only", 1), ("alternate", 2), ("dualStack", 3))).clone('ipv6Only')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: docsIf3MdCfgIpProvMode.setStatus('current')
docsIf3MdCfgCmStatusEvCtlEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 20, 1, 16, 1, 3), TruthValue().clone('true')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: docsIf3MdCfgCmStatusEvCtlEnabled.setStatus('current')
docsIf3MdCfgUsFreqRange = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 20, 1, 16, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("standard", 0), ("extended", 1))).clone('standard')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: docsIf3MdCfgUsFreqRange.setStatus('current')
docsIf3MdCfgMcastDsidFwdEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 20, 1, 16, 1, 5), TruthValue().clone('true')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: docsIf3MdCfgMcastDsidFwdEnabled.setStatus('current')
docsIf3MdCfgMultRxChModeEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 20, 1, 16, 1, 6), TruthValue().clone('true')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: docsIf3MdCfgMultRxChModeEnabled.setStatus('current')
docsIf3MdCfgMultTxChModeEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 20, 1, 16, 1, 7), TruthValue().clone('true')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: docsIf3MdCfgMultTxChModeEnabled.setStatus('current')
docsIf3MdCfgEarlyAuthEncrCtrl = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 20, 1, 16, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("disableEae", 1), ("enableEaeRangingBasedEnforcement", 2), ("enableEaeCapabilityBasedEnforcement", 3), ("enableEaeTotalEnforcement", 4))).clone('enableEaeRangingBasedEnforcement')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: docsIf3MdCfgEarlyAuthEncrCtrl.setStatus('current')
docsIf3MdCfgTftpProxyEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 20, 1, 16, 1, 9), TruthValue().clone('true')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: docsIf3MdCfgTftpProxyEnabled.setStatus('current')
docsIf3MdCfgSrcAddrVerifEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 20, 1, 16, 1, 10), TruthValue().clone('true')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: docsIf3MdCfgSrcAddrVerifEnabled.setStatus('current')
docsIf3MdCfgDownChannelAnnex = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 20, 1, 16, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("unknown", 1), ("other", 2), ("annexA", 3), ("annexB", 4), ("annexC", 5))).clone('unknown')).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIf3MdCfgDownChannelAnnex.setStatus('current')
docsIf3MdCfgCmUdcEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 20, 1, 16, 1, 12), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: docsIf3MdCfgCmUdcEnabled.setStatus('current')
docsIf3MdCfgSendUdcRulesEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 20, 1, 16, 1, 13), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: docsIf3MdCfgSendUdcRulesEnabled.setStatus('current')
docsIf3MdCfgServiceTypeIdList = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 20, 1, 16, 1, 14), SnmpTagList()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: docsIf3MdCfgServiceTypeIdList.setStatus('current')
docsIf3MdCfgBpi2EnforceCtrl = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 20, 1, 16, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("disable", 0), ("qosCfgFileWithBpi2AndCapabPrivSupportEnabled", 1), ("qosCfgFileWithBpi2Enabled", 2), ("qosCfgFile", 3), ("total", 4))).clone('qosCfgFileWithBpi2Enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: docsIf3MdCfgBpi2EnforceCtrl.setStatus('current')
docsIf3MdCfgEnergyMgt1x1Enabled = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 20, 1, 16, 1, 16), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: docsIf3MdCfgEnergyMgt1x1Enabled.setStatus('current')
docsIf3BondingGrpCfgTable = MibTable((1, 3, 6, 1, 4, 1, 4491, 2, 1, 20, 1, 17), )
if mibBuilder.loadTexts: docsIf3BondingGrpCfgTable.setStatus('current')
docsIf3BondingGrpCfgEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4491, 2, 1, 20, 1, 17, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "DOCS-IF3-MIB", "docsIf3BondingGrpCfgDir"), (0, "DOCS-IF3-MIB", "docsIf3BondingGrpCfgCfgId"))
if mibBuilder.loadTexts: docsIf3BondingGrpCfgEntry.setStatus('current')
docsIf3BondingGrpCfgDir = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 20, 1, 17, 1, 1), IfDirection())
if mibBuilder.loadTexts: docsIf3BondingGrpCfgDir.setStatus('current')
docsIf3BondingGrpCfgCfgId = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 20, 1, 17, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)))
if mibBuilder.loadTexts: docsIf3BondingGrpCfgCfgId.setStatus('current')
docsIf3BondingGrpCfgChList = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 20, 1, 17, 1, 3), ChannelList().subtype(subtypeSpec=ValueSizeConstraint(2, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: docsIf3BondingGrpCfgChList.setStatus('current')
docsIf3BondingGrpCfgSfProvAttrMask = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 20, 1, 17, 1, 4), AttributeMask().clone(hexValue="80000000")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: docsIf3BondingGrpCfgSfProvAttrMask.setStatus('current')
docsIf3BondingGrpCfgDsidReseqWaitTime = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 20, 1, 17, 1, 5), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 180), ValueRangeConstraint(255, 255), )).clone(255)).setUnits('hundredMicroseconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: docsIf3BondingGrpCfgDsidReseqWaitTime.setStatus('current')
docsIf3BondingGrpCfgDsidReseqWarnThrshld = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 20, 1, 17, 1, 6), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 179), ValueRangeConstraint(255, 255), )).clone(255)).setUnits('hundredMicroseconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: docsIf3BondingGrpCfgDsidReseqWarnThrshld.setStatus('current')
docsIf3BondingGrpCfgRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 20, 1, 17, 1, 7), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: docsIf3BondingGrpCfgRowStatus.setStatus('current')
docsIf3DsBondingGrpStatusTable = MibTable((1, 3, 6, 1, 4, 1, 4491, 2, 1, 20, 1, 18), )
if mibBuilder.loadTexts: docsIf3DsBondingGrpStatusTable.setStatus('current')
docsIf3DsBondingGrpStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4491, 2, 1, 20, 1, 18, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "DOCS-IF3-MIB", "docsIf3DsBondingGrpStatusChSetId"))
if mibBuilder.loadTexts: docsIf3DsBondingGrpStatusEntry.setStatus('current')
docsIf3DsBondingGrpStatusChSetId = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 20, 1, 18, 1, 1), ChSetId())
if mibBuilder.loadTexts: docsIf3DsBondingGrpStatusChSetId.setStatus('current')
docsIf3DsBondingGrpStatusMdDsSgId = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 20, 1, 18, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIf3DsBondingGrpStatusMdDsSgId.setStatus('current')
docsIf3DsBondingGrpStatusCfgId = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 20, 1, 18, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIf3DsBondingGrpStatusCfgId.setStatus('current')
docsIf3UsBondingGrpStatusTable = MibTable((1, 3, 6, 1, 4, 1, 4491, 2, 1, 20, 1, 19), )
if mibBuilder.loadTexts: docsIf3UsBondingGrpStatusTable.setStatus('current')
docsIf3UsBondingGrpStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4491, 2, 1, 20, 1, 19, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "DOCS-IF3-MIB", "docsIf3UsBondingGrpStatusChSetId"))
if mibBuilder.loadTexts: docsIf3UsBondingGrpStatusEntry.setStatus('current')
docsIf3UsBondingGrpStatusChSetId = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 20, 1, 19, 1, 1), ChSetId())
if mibBuilder.loadTexts: docsIf3UsBondingGrpStatusChSetId.setStatus('current')
docsIf3UsBondingGrpStatusMdUsSgId = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 20, 1, 19, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIf3UsBondingGrpStatusMdUsSgId.setStatus('current')
docsIf3UsBondingGrpStatusCfgId = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 20, 1, 19, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIf3UsBondingGrpStatusCfgId.setStatus('current')
docsIf3UsChExtTable = MibTable((1, 3, 6, 1, 4, 1, 4491, 2, 1, 20, 1, 20), )
if mibBuilder.loadTexts: docsIf3UsChExtTable.setStatus('current')
docsIf3UsChExtEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4491, 2, 1, 20, 1, 20, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: docsIf3UsChExtEntry.setStatus('current')
docsIf3UsChExtSacCodeHoppingSelectionMode = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 20, 1, 20, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("none", 0), ("sac1NoCodeHopping", 1), ("sac1CodeHoppingMode1", 2), ("sac2CodeHoppingMode2", 3), ("sac2NoCodeHopping", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIf3UsChExtSacCodeHoppingSelectionMode.setStatus('current')
docsIf3UsChExtScdmaSelectionStringActiveCodes = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 20, 1, 20, 1, 2), ScdmaSelectionString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIf3UsChExtScdmaSelectionStringActiveCodes.setStatus('current')
docsIf3CmCapabilities = MibIdentifier((1, 3, 6, 1, 4, 1, 4491, 2, 1, 20, 1, 21))
docsIf3CmCapabilitiesReq = MibScalar((1, 3, 6, 1, 4, 1, 4491, 2, 1, 20, 1, 21, 1), Tlv8()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIf3CmCapabilitiesReq.setStatus('current')
docsIf3CmCapabilitiesRsp = MibScalar((1, 3, 6, 1, 4, 1, 4491, 2, 1, 20, 1, 21, 2), Tlv8()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIf3CmCapabilitiesRsp.setStatus('current')
docsIf3UsChSetTable = MibTable((1, 3, 6, 1, 4, 1, 4491, 2, 1, 20, 1, 22), )
if mibBuilder.loadTexts: docsIf3UsChSetTable.setStatus('current')
docsIf3UsChSetEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4491, 2, 1, 20, 1, 22, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "DOCS-IF3-MIB", "docsIf3UsChSetId"))
if mibBuilder.loadTexts: docsIf3UsChSetEntry.setStatus('current')
docsIf3UsChSetId = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 20, 1, 22, 1, 1), ChSetId())
if mibBuilder.loadTexts: docsIf3UsChSetId.setStatus('current')
docsIf3UsChSetChList = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 20, 1, 22, 1, 2), ChannelList().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(2, 255), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIf3UsChSetChList.setStatus('current')
docsIf3DsChSetTable = MibTable((1, 3, 6, 1, 4, 1, 4491, 2, 1, 20, 1, 23), )
if mibBuilder.loadTexts: docsIf3DsChSetTable.setStatus('current')
docsIf3DsChSetEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4491, 2, 1, 20, 1, 23, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "DOCS-IF3-MIB", "docsIf3DsChSetId"))
if mibBuilder.loadTexts: docsIf3DsChSetEntry.setStatus('current')
docsIf3DsChSetId = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 20, 1, 23, 1, 1), ChSetId())
if mibBuilder.loadTexts: docsIf3DsChSetId.setStatus('current')
docsIf3DsChSetChList = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 20, 1, 23, 1, 2), ChannelList().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(2, 255), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIf3DsChSetChList.setStatus('current')
docsIf3SignalQualityExtTable = MibTable((1, 3, 6, 1, 4, 1, 4491, 2, 1, 20, 1, 24), )
if mibBuilder.loadTexts: docsIf3SignalQualityExtTable.setStatus('current')
docsIf3SignalQualityExtEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4491, 2, 1, 20, 1, 24, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: docsIf3SignalQualityExtEntry.setStatus('current')
docsIf3SignalQualityExtRxMER = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 20, 1, 24, 1, 1), TenthdB().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setUnits('TenthdB').setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIf3SignalQualityExtRxMER.setStatus('current')
docsIf3SignalQualityExtRxMerSamples = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 20, 1, 24, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIf3SignalQualityExtRxMerSamples.setStatus('current')
docsIf3CmtsSignalQualityExtTable = MibTable((1, 3, 6, 1, 4, 1, 4491, 2, 1, 20, 1, 25), )
if mibBuilder.loadTexts: docsIf3CmtsSignalQualityExtTable.setStatus('current')
docsIf3CmtsSignalQualityExtEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4491, 2, 1, 20, 1, 25, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: docsIf3CmtsSignalQualityExtEntry.setStatus('current')
docsIf3CmtsSignalQualityExtCNIR = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 20, 1, 25, 1, 1), TenthdB()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIf3CmtsSignalQualityExtCNIR.setStatus('current')
docsIf3CmtsSignalQualityExtExpectedRxSignalPower = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 20, 1, 25, 1, 2), TenthdBmV()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIf3CmtsSignalQualityExtExpectedRxSignalPower.setStatus('current')
docsIf3CmtsSpectrumAnalysisMeasTable = MibTable((1, 3, 6, 1, 4, 1, 4491, 2, 1, 20, 1, 26), )
if mibBuilder.loadTexts: docsIf3CmtsSpectrumAnalysisMeasTable.setStatus('current')
docsIf3CmtsSpectrumAnalysisMeasEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4491, 2, 1, 20, 1, 26, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: docsIf3CmtsSpectrumAnalysisMeasEntry.setStatus('current')
docsIf3CmtsSpectrumAnalysisMeasAmplitudeData = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 20, 1, 26, 1, 1), AmplitudeData()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIf3CmtsSpectrumAnalysisMeasAmplitudeData.setStatus('current')
docsIf3CmtsSpectrumAnalysisMeasTimeInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 20, 1, 26, 1, 2), Unsigned32()).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIf3CmtsSpectrumAnalysisMeasTimeInterval.setStatus('current')
docsIf3CmtsSpectrumAnalysisMeasRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 20, 1, 26, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: docsIf3CmtsSpectrumAnalysisMeasRowStatus.setStatus('current')
docsIf3CmtsCmCtrl = MibIdentifier((1, 3, 6, 1, 4, 1, 4491, 2, 1, 20, 1, 27))
docsIf3CmtsCmCtrlCmdMacAddr = MibScalar((1, 3, 6, 1, 4, 1, 4491, 2, 1, 20, 1, 27, 1), MacAddress().clone(hexValue="000000000000")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: docsIf3CmtsCmCtrlCmdMacAddr.setStatus('current')
docsIf3CmtsCmCtrlCmdMuteUsChId = MibScalar((1, 3, 6, 1, 4, 1, 4491, 2, 1, 20, 1, 27, 2), ChId()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: docsIf3CmtsCmCtrlCmdMuteUsChId.setStatus('current')
docsIf3CmtsCmCtrlCmdMuteInterval = MibScalar((1, 3, 6, 1, 4, 1, 4491, 2, 1, 20, 1, 27, 3), Unsigned32().clone(1)).setUnits('milliseconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: docsIf3CmtsCmCtrlCmdMuteInterval.setStatus('current')
docsIf3CmtsCmCtrlCmdDisableForwarding = MibScalar((1, 3, 6, 1, 4, 1, 4491, 2, 1, 20, 1, 27, 4), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: docsIf3CmtsCmCtrlCmdDisableForwarding.setStatus('current')
docsIf3CmtsCmCtrlCmdCommit = MibScalar((1, 3, 6, 1, 4, 1, 4491, 2, 1, 20, 1, 27, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("mute", 1), ("cmReinit", 2), ("disableForwarding", 3))).clone('mute')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: docsIf3CmtsCmCtrlCmdCommit.setStatus('current')
docsIf3CmDpvStatsTable = MibTable((1, 3, 6, 1, 4, 1, 4491, 2, 1, 20, 1, 28), )
if mibBuilder.loadTexts: docsIf3CmDpvStatsTable.setStatus('current')
docsIf3CmDpvStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4491, 2, 1, 20, 1, 28, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "DOCS-IF3-MIB", "docsIf3CmDpvStatsGrpId"))
if mibBuilder.loadTexts: docsIf3CmDpvStatsEntry.setStatus('current')
docsIf3CmDpvStatsGrpId = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 20, 1, 28, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 2)))
if mibBuilder.loadTexts: docsIf3CmDpvStatsGrpId.setStatus('current')
docsIf3CmDpvStatsLastMeasLatency = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 20, 1, 28, 1, 2), Unsigned32()).setUnits('nanoseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIf3CmDpvStatsLastMeasLatency.setStatus('current')
docsIf3CmDpvStatsLastMeasTime = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 20, 1, 28, 1, 3), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIf3CmDpvStatsLastMeasTime.setStatus('current')
docsIf3CmDpvStatsMinLatency = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 20, 1, 28, 1, 4), Unsigned32()).setUnits('nanoseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIf3CmDpvStatsMinLatency.setStatus('current')
docsIf3CmDpvStatsMaxLatency = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 20, 1, 28, 1, 5), Unsigned32()).setUnits('nanoseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIf3CmDpvStatsMaxLatency.setStatus('current')
docsIf3CmDpvStatsAvgLatency = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 20, 1, 28, 1, 6), Unsigned32()).setUnits('nanoseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIf3CmDpvStatsAvgLatency.setStatus('current')
docsIf3CmDpvStatsNumMeas = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 20, 1, 28, 1, 7), Unsigned32()).setUnits('measurements').setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIf3CmDpvStatsNumMeas.setStatus('current')
docsIf3CmDpvStatsLastClearTime = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 20, 1, 28, 1, 8), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIf3CmDpvStatsLastClearTime.setStatus('current')
docsIf3CmEventCtrlTable = MibTable((1, 3, 6, 1, 4, 1, 4491, 2, 1, 20, 1, 29), )
if mibBuilder.loadTexts: docsIf3CmEventCtrlTable.setStatus('current')
docsIf3CmEventCtrlEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4491, 2, 1, 20, 1, 29, 1), ).setIndexNames((0, "DOCS-IF3-MIB", "docsIf3CmEventCtrlEventId"))
if mibBuilder.loadTexts: docsIf3CmEventCtrlEntry.setStatus('current')
docsIf3CmEventCtrlEventId = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 20, 1, 29, 1, 1), Unsigned32())
if mibBuilder.loadTexts: docsIf3CmEventCtrlEventId.setStatus('current')
docsIf3CmEventCtrlStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 20, 1, 29, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: docsIf3CmEventCtrlStatus.setStatus('current')
docsIf3CmtsEventCtrlTable = MibTable((1, 3, 6, 1, 4, 1, 4491, 2, 1, 20, 1, 30), )
if mibBuilder.loadTexts: docsIf3CmtsEventCtrlTable.setStatus('current')
docsIf3CmtsEventCtrlEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4491, 2, 1, 20, 1, 30, 1), ).setIndexNames((0, "DOCS-IF3-MIB", "docsIf3CmtsEventCtrlEventId"))
if mibBuilder.loadTexts: docsIf3CmtsEventCtrlEntry.setStatus('current')
docsIf3CmtsEventCtrlEventId = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 20, 1, 30, 1, 1), Unsigned32())
if mibBuilder.loadTexts: docsIf3CmtsEventCtrlEventId.setStatus('current')
docsIf3CmtsEventCtrlStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 20, 1, 30, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: docsIf3CmtsEventCtrlStatus.setStatus('current')
docsIf3CmMdCfgTable = MibTable((1, 3, 6, 1, 4, 1, 4491, 2, 1, 20, 1, 31), )
if mibBuilder.loadTexts: docsIf3CmMdCfgTable.setStatus('current')
docsIf3CmMdCfgEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4491, 2, 1, 20, 1, 31, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: docsIf3CmMdCfgEntry.setStatus('current')
docsIf3CmMdCfgIpProvMode = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 20, 1, 31, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 4))).clone(namedValues=NamedValues(("ipv4Only", 0), ("ipv6Only", 1), ("honorMdd", 4))).clone('honorMdd')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: docsIf3CmMdCfgIpProvMode.setStatus('current')
docsIf3CmMdCfgIpProvModeResetOnChange = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 20, 1, 31, 1, 2), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: docsIf3CmMdCfgIpProvModeResetOnChange.setStatus('current')
docsIf3CmMdCfgIpProvModeResetOnChangeHoldOffTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 20, 1, 31, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 300))).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: docsIf3CmMdCfgIpProvModeResetOnChangeHoldOffTimer.setStatus('current')
docsIf3CmMdCfgIpProvModeStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 20, 1, 31, 1, 4), StorageType().clone('nonVolatile')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: docsIf3CmMdCfgIpProvModeStorageType.setStatus('current')
docsIf3CmEnergyMgtCfg = MibIdentifier((1, 3, 6, 1, 4, 1, 4491, 2, 1, 20, 1, 32))
docsIf3CmEnergyMgtCfgFeatureEnabled = MibScalar((1, 3, 6, 1, 4, 1, 4491, 2, 1, 20, 1, 32, 1), Bits().clone(namedValues=NamedValues(("em1x1Feature", 0), ("dls", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIf3CmEnergyMgtCfgFeatureEnabled.setStatus('current')
docsIf3CmEnergyMgtCfgCyclePeriod = MibScalar((1, 3, 6, 1, 4, 1, 4491, 2, 1, 20, 1, 32, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)).clone(900)).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIf3CmEnergyMgtCfgCyclePeriod.setStatus('current')
docsIf3CmEnergyMgt1x1CfgTable = MibTable((1, 3, 6, 1, 4, 1, 4491, 2, 1, 20, 1, 33), )
if mibBuilder.loadTexts: docsIf3CmEnergyMgt1x1CfgTable.setStatus('current')
docsIf3CmEnergyMgt1x1CfgEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4491, 2, 1, 20, 1, 33, 1), ).setIndexNames((0, "DOCS-IF3-MIB", "docsIf3CmEnergyMgt1x1CfgDirection"))
if mibBuilder.loadTexts: docsIf3CmEnergyMgt1x1CfgEntry.setStatus('current')
docsIf3CmEnergyMgt1x1CfgDirection = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 20, 1, 33, 1, 1), IfDirection())
if mibBuilder.loadTexts: docsIf3CmEnergyMgt1x1CfgDirection.setStatus('current')
docsIf3CmEnergyMgt1x1CfgEntryBitrateThrshld = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 20, 1, 33, 1, 2), Unsigned32()).setUnits('bps').setMaxAccess("readwrite")
if mibBuilder.loadTexts: docsIf3CmEnergyMgt1x1CfgEntryBitrateThrshld.setStatus('current')
docsIf3CmEnergyMgt1x1CfgEntryTimeThrshld = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 20, 1, 33, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: docsIf3CmEnergyMgt1x1CfgEntryTimeThrshld.setStatus('current')
docsIf3CmEnergyMgt1x1CfgExitBitrateThrshld = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 20, 1, 33, 1, 4), Unsigned32()).setUnits('bps').setMaxAccess("readwrite")
if mibBuilder.loadTexts: docsIf3CmEnergyMgt1x1CfgExitBitrateThrshld.setStatus('current')
docsIf3CmEnergyMgt1x1CfgExitTimeThrshld = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 20, 1, 33, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: docsIf3CmEnergyMgt1x1CfgExitTimeThrshld.setStatus('current')
docsIf3CmSpectrumAnalysisCtrlCmd = MibIdentifier((1, 3, 6, 1, 4, 1, 4491, 2, 1, 20, 1, 34))
docsIf3CmSpectrumAnalysisCtrlCmdEnable = MibScalar((1, 3, 6, 1, 4, 1, 4491, 2, 1, 20, 1, 34, 1), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: docsIf3CmSpectrumAnalysisCtrlCmdEnable.setStatus('current')
docsIf3CmSpectrumAnalysisCtrlCmdInactivityTimeout = MibScalar((1, 3, 6, 1, 4, 1, 4491, 2, 1, 20, 1, 34, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 86400)).clone(300)).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: docsIf3CmSpectrumAnalysisCtrlCmdInactivityTimeout.setStatus('current')
docsIf3CmSpectrumAnalysisCtrlCmdFirstSegmentCenterFrequency = MibScalar((1, 3, 6, 1, 4, 1, 4491, 2, 1, 20, 1, 34, 3), Unsigned32().clone(93000000)).setUnits('Hz').setMaxAccess("readwrite")
if mibBuilder.loadTexts: docsIf3CmSpectrumAnalysisCtrlCmdFirstSegmentCenterFrequency.setStatus('current')
docsIf3CmSpectrumAnalysisCtrlCmdLastSegmentCenterFrequency = MibScalar((1, 3, 6, 1, 4, 1, 4491, 2, 1, 20, 1, 34, 4), Unsigned32().clone(993000000)).setUnits('Hz').setMaxAccess("readwrite")
if mibBuilder.loadTexts: docsIf3CmSpectrumAnalysisCtrlCmdLastSegmentCenterFrequency.setStatus('current')
docsIf3CmSpectrumAnalysisCtrlCmdSegmentFrequencySpan = MibScalar((1, 3, 6, 1, 4, 1, 4491, 2, 1, 20, 1, 34, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1000000, 900000000)).clone(7500000)).setUnits('Hz').setMaxAccess("readwrite")
if mibBuilder.loadTexts: docsIf3CmSpectrumAnalysisCtrlCmdSegmentFrequencySpan.setStatus('current')
docsIf3CmSpectrumAnalysisCtrlCmdNumBinsPerSegment = MibScalar((1, 3, 6, 1, 4, 1, 4491, 2, 1, 20, 1, 34, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(2, 2048)).clone(256)).setUnits('bins-per-segment').setMaxAccess("readwrite")
if mibBuilder.loadTexts: docsIf3CmSpectrumAnalysisCtrlCmdNumBinsPerSegment.setStatus('current')
docsIf3CmSpectrumAnalysisCtrlCmdEquivalentNoiseBandwidth = MibScalar((1, 3, 6, 1, 4, 1, 4491, 2, 1, 20, 1, 34, 7), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(50, 500)).clone(150)).setUnits('hundredthsbin').setMaxAccess("readwrite")
if mibBuilder.loadTexts: docsIf3CmSpectrumAnalysisCtrlCmdEquivalentNoiseBandwidth.setStatus('current')
docsIf3CmSpectrumAnalysisCtrlCmdWindowFunction = MibScalar((1, 3, 6, 1, 4, 1, 4491, 2, 1, 20, 1, 34, 8), SpectrumAnalysisWindowFunction()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: docsIf3CmSpectrumAnalysisCtrlCmdWindowFunction.setStatus('current')
docsIf3CmSpectrumAnalysisCtrlCmdNumberOfAverages = MibScalar((1, 3, 6, 1, 4, 1, 4491, 2, 1, 20, 1, 34, 9), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 1000)).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: docsIf3CmSpectrumAnalysisCtrlCmdNumberOfAverages.setStatus('current')
docsIf3CmSpectrumAnalysisMeasTable = MibTable((1, 3, 6, 1, 4, 1, 4491, 2, 1, 20, 1, 35), )
if mibBuilder.loadTexts: docsIf3CmSpectrumAnalysisMeasTable.setStatus('current')
docsIf3CmSpectrumAnalysisMeasEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4491, 2, 1, 20, 1, 35, 1), ).setIndexNames((0, "DOCS-IF3-MIB", "docsIf3CmSpectrumAnalysisMeasFrequency"))
if mibBuilder.loadTexts: docsIf3CmSpectrumAnalysisMeasEntry.setStatus('current')
docsIf3CmSpectrumAnalysisMeasFrequency = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 20, 1, 35, 1, 1), Integer32())
if mibBuilder.loadTexts: docsIf3CmSpectrumAnalysisMeasFrequency.setStatus('current')
docsIf3CmSpectrumAnalysisMeasAmplitudeData = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 20, 1, 35, 1, 2), AmplitudeData()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIf3CmSpectrumAnalysisMeasAmplitudeData.setStatus('current')
docsIf3CmSpectrumAnalysisMeasTotalSegmentPower = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 20, 1, 35, 1, 3), TenthdB()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIf3CmSpectrumAnalysisMeasTotalSegmentPower.setStatus('current')
docsIf3CmtsCmEmStatsTable = MibTable((1, 3, 6, 1, 4, 1, 4491, 2, 1, 20, 1, 36), )
if mibBuilder.loadTexts: docsIf3CmtsCmEmStatsTable.setStatus('current')
docsIf3CmtsCmEmStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4491, 2, 1, 20, 1, 36, 1), ).setIndexNames((0, "DOCS-IF3-MIB", "docsIf3CmtsCmRegStatusId"))
if mibBuilder.loadTexts: docsIf3CmtsCmEmStatsEntry.setStatus('current')
docsIf3CmtsCmEmStatsEm1x1ModeTotalDuration = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 20, 1, 36, 1, 1), Unsigned32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIf3CmtsCmEmStatsEm1x1ModeTotalDuration.setStatus('current')
docsIf3CmEm1x1StatsTable = MibTable((1, 3, 6, 1, 4, 1, 4491, 2, 1, 20, 1, 37), )
if mibBuilder.loadTexts: docsIf3CmEm1x1StatsTable.setStatus('current')
docsIf3CmEm1x1StatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4491, 2, 1, 20, 1, 37, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: docsIf3CmEm1x1StatsEntry.setStatus('current')
docsIf3CmEm1x1StatsNumberTimesCrossedBelowUsEntryThrshlds = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 20, 1, 37, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIf3CmEm1x1StatsNumberTimesCrossedBelowUsEntryThrshlds.setStatus('current')
docsIf3CmEm1x1StatsNumberTimesCrossedBelowDsEntryThrshlds = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 20, 1, 37, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIf3CmEm1x1StatsNumberTimesCrossedBelowDsEntryThrshlds.setStatus('current')
docsIf3CmEm1x1StatsTotalDuration = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 20, 1, 37, 1, 3), Unsigned32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIf3CmEm1x1StatsTotalDuration.setStatus('current')
docsIf3CmEm1x1StatsTotalDurationBelowUsThrshlds = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 20, 1, 37, 1, 4), Unsigned32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIf3CmEm1x1StatsTotalDurationBelowUsThrshlds.setStatus('current')
docsIf3CmEm1x1StatsTotalDurationBelowDsThrshlds = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 20, 1, 37, 1, 5), Unsigned32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIf3CmEm1x1StatsTotalDurationBelowDsThrshlds.setStatus('current')
docsIf3CmEm1x1StatsTotalDurationBelowUsDsThrshlds = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 20, 1, 37, 1, 6), Unsigned32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIf3CmEm1x1StatsTotalDurationBelowUsDsThrshlds.setStatus('current')
docsIf3MibConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 4491, 2, 1, 20, 2))
docsIf3MibCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 4491, 2, 1, 20, 2, 1))
docsIf3MibGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 4491, 2, 1, 20, 2, 2))
docsIf3CmtsCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 4491, 2, 1, 20, 2, 1, 1)).setObjects(("DOCS-IF3-MIB", "docsIf3CmtsGroup"), ("DOCS-IF3-MIB", "docsIf3CmtsNotificationGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    docsIf3CmtsCompliance = docsIf3CmtsCompliance.setStatus('current')
docsIf3CmCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 4491, 2, 1, 20, 2, 1, 2)).setObjects(("DOCS-IF3-MIB", "docsIf3CmGroup"), ("DOCS-IF3-MIB", "docsIf3CmNotificationGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    docsIf3CmCompliance = docsIf3CmCompliance.setStatus('current')
docsIf3CmtsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 4491, 2, 1, 20, 2, 2, 1)).setObjects(("DOCS-IF3-MIB", "docsIf3SignalQualityExtRxMER"), ("DOCS-IF3-MIB", "docsIf3SignalQualityExtRxMerSamples"), ("DOCS-IF3-MIB", "docsIf3MdNodeStatusMdDsSgId"), ("DOCS-IF3-MIB", "docsIf3MdNodeStatusMdUsSgId"), ("DOCS-IF3-MIB", "docsIf3MdDsSgStatusChSetId"), ("DOCS-IF3-MIB", "docsIf3MdUsSgStatusChSetId"), ("DOCS-IF3-MIB", "docsIf3CmtsSignalQualityExtCNIR"), ("DOCS-IF3-MIB", "docsIf3CmtsSignalQualityExtExpectedRxSignalPower"), ("DOCS-IF3-MIB", "docsIf3CmtsSpectrumAnalysisMeasAmplitudeData"), ("DOCS-IF3-MIB", "docsIf3CmtsSpectrumAnalysisMeasTimeInterval"), ("DOCS-IF3-MIB", "docsIf3CmtsSpectrumAnalysisMeasRowStatus"), ("DOCS-IF3-MIB", "docsIf3CmtsCmRegStatusMacAddr"), ("DOCS-IF3-MIB", "docsIf3CmtsCmRegStatusIPv6Addr"), ("DOCS-IF3-MIB", "docsIf3CmtsCmRegStatusIPv6LinkLocal"), ("DOCS-IF3-MIB", "docsIf3CmtsCmRegStatusIPv4Addr"), ("DOCS-IF3-MIB", "docsIf3CmtsCmRegStatusValue"), ("DOCS-IF3-MIB", "docsIf3CmtsCmRegStatusMdIfIndex"), ("DOCS-IF3-MIB", "docsIf3CmtsCmRegStatusMdCmSgId"), ("DOCS-IF3-MIB", "docsIf3CmtsCmRegStatusRcpId"), ("DOCS-IF3-MIB", "docsIf3CmtsCmRegStatusRccStatusId"), ("DOCS-IF3-MIB", "docsIf3CmtsCmRegStatusRcsId"), ("DOCS-IF3-MIB", "docsIf3CmtsCmRegStatusTcsId"), ("DOCS-IF3-MIB", "docsIf3CmtsCmRegStatusQosVersion"), ("DOCS-IF3-MIB", "docsIf3CmtsCmRegStatusLastRegTime"), ("DOCS-IF3-MIB", "docsIf3CmtsCmRegStatusAddrResolutionReqs"), ("DOCS-IF3-MIB", "docsIf3CmtsCmRegStatusEnergyMgtEnabled"), ("DOCS-IF3-MIB", "docsIf3CmtsCmRegStatusEnergyMgtOperStatus"), ("DOCS-IF3-MIB", "docsIf3CmtsCmUsStatusModulationType"), ("DOCS-IF3-MIB", "docsIf3CmtsCmUsStatusRxPower"), ("DOCS-IF3-MIB", "docsIf3CmtsCmUsStatusSignalNoise"), ("DOCS-IF3-MIB", "docsIf3CmtsCmUsStatusMicroreflections"), ("DOCS-IF3-MIB", "docsIf3CmtsCmUsStatusEqData"), ("DOCS-IF3-MIB", "docsIf3CmtsCmUsStatusUnerroreds"), ("DOCS-IF3-MIB", "docsIf3CmtsCmUsStatusCorrecteds"), ("DOCS-IF3-MIB", "docsIf3CmtsCmUsStatusUncorrectables"), ("DOCS-IF3-MIB", "docsIf3CmtsCmUsStatusHighResolutionTimingOffset"), ("DOCS-IF3-MIB", "docsIf3CmtsCmUsStatusIsMuted"), ("DOCS-IF3-MIB", "docsIf3CmtsCmUsStatusRangingStatus"), ("DOCS-IF3-MIB", "docsIf3UsChExtSacCodeHoppingSelectionMode"), ("DOCS-IF3-MIB", "docsIf3UsChExtScdmaSelectionStringActiveCodes"), ("DOCS-IF3-MIB", "docsIf3MdCfgMddInterval"), ("DOCS-IF3-MIB", "docsIf3MdCfgIpProvMode"), ("DOCS-IF3-MIB", "docsIf3MdCfgCmStatusEvCtlEnabled"), ("DOCS-IF3-MIB", "docsIf3MdCfgUsFreqRange"), ("DOCS-IF3-MIB", "docsIf3MdCfgMcastDsidFwdEnabled"), ("DOCS-IF3-MIB", "docsIf3MdCfgMultRxChModeEnabled"), ("DOCS-IF3-MIB", "docsIf3MdCfgMultTxChModeEnabled"), ("DOCS-IF3-MIB", "docsIf3MdCfgEarlyAuthEncrCtrl"), ("DOCS-IF3-MIB", "docsIf3MdCfgTftpProxyEnabled"), ("DOCS-IF3-MIB", "docsIf3MdCfgSrcAddrVerifEnabled"), ("DOCS-IF3-MIB", "docsIf3MdCfgDownChannelAnnex"), ("DOCS-IF3-MIB", "docsIf3MdCfgCmUdcEnabled"), ("DOCS-IF3-MIB", "docsIf3MdCfgSendUdcRulesEnabled"), ("DOCS-IF3-MIB", "docsIf3MdCfgServiceTypeIdList"), ("DOCS-IF3-MIB", "docsIf3MdCfgBpi2EnforceCtrl"), ("DOCS-IF3-MIB", "docsIf3MdCfgEnergyMgt1x1Enabled"), ("DOCS-IF3-MIB", "docsIf3MdChCfgIsPriCapableDs"), ("DOCS-IF3-MIB", "docsIf3MdChCfgChId"), ("DOCS-IF3-MIB", "docsIf3MdChCfgSfProvAttrMask"), ("DOCS-IF3-MIB", "docsIf3MdChCfgRowStatus"), ("DOCS-IF3-MIB", "docsIf3MdUsToDsChMappingMdIfIndex"), ("DOCS-IF3-MIB", "docsIf3DsChSetChList"), ("DOCS-IF3-MIB", "docsIf3UsChSetChList"), ("DOCS-IF3-MIB", "docsIf3BondingGrpCfgChList"), ("DOCS-IF3-MIB", "docsIf3BondingGrpCfgSfProvAttrMask"), ("DOCS-IF3-MIB", "docsIf3BondingGrpCfgDsidReseqWaitTime"), ("DOCS-IF3-MIB", "docsIf3BondingGrpCfgDsidReseqWarnThrshld"), ("DOCS-IF3-MIB", "docsIf3BondingGrpCfgRowStatus"), ("DOCS-IF3-MIB", "docsIf3DsBondingGrpStatusMdDsSgId"), ("DOCS-IF3-MIB", "docsIf3DsBondingGrpStatusCfgId"), ("DOCS-IF3-MIB", "docsIf3UsBondingGrpStatusMdUsSgId"), ("DOCS-IF3-MIB", "docsIf3UsBondingGrpStatusCfgId"), ("DOCS-IF3-MIB", "docsIf3RccStatusRccCfgId"), ("DOCS-IF3-MIB", "docsIf3RccStatusValidityCode"), ("DOCS-IF3-MIB", "docsIf3RccStatusValidityCodeText"), ("DOCS-IF3-MIB", "docsIf3RxChStatusChIfIndex"), ("DOCS-IF3-MIB", "docsIf3RxChStatusPrimaryDsIndicator"), ("DOCS-IF3-MIB", "docsIf3RxChStatusRcRmConnectivityId"), ("DOCS-IF3-MIB", "docsIf3RxModuleStatusRmRmConnectivityId"), ("DOCS-IF3-MIB", "docsIf3RxModuleStatusFirstCenterFrequency"), ("DOCS-IF3-MIB", "docsIf3CmtsCmCtrlCmdMacAddr"), ("DOCS-IF3-MIB", "docsIf3CmtsCmCtrlCmdMuteUsChId"), ("DOCS-IF3-MIB", "docsIf3CmtsCmCtrlCmdMuteInterval"), ("DOCS-IF3-MIB", "docsIf3CmtsCmCtrlCmdDisableForwarding"), ("DOCS-IF3-MIB", "docsIf3CmtsCmCtrlCmdCommit"), ("DOCS-IF3-MIB", "docsIf3CmtsEventCtrlStatus"), ("DOCS-IF3-MIB", "docsIf3CmtsCmEmStatsEm1x1ModeTotalDuration"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    docsIf3CmtsGroup = docsIf3CmtsGroup.setStatus('current')
docsIf3CmGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 4491, 2, 1, 20, 2, 2, 2)).setObjects(("DOCS-IF3-MIB", "docsIf3SignalQualityExtRxMER"), ("DOCS-IF3-MIB", "docsIf3SignalQualityExtRxMerSamples"), ("DOCS-IF3-MIB", "docsIf3CmStatusValue"), ("DOCS-IF3-MIB", "docsIf3CmStatusCode"), ("DOCS-IF3-MIB", "docsIf3CmStatusResets"), ("DOCS-IF3-MIB", "docsIf3CmStatusLostSyncs"), ("DOCS-IF3-MIB", "docsIf3CmStatusInvalidMaps"), ("DOCS-IF3-MIB", "docsIf3CmStatusInvalidUcds"), ("DOCS-IF3-MIB", "docsIf3CmStatusInvalidRangingRsps"), ("DOCS-IF3-MIB", "docsIf3CmStatusInvalidRegRsps"), ("DOCS-IF3-MIB", "docsIf3CmStatusT1Timeouts"), ("DOCS-IF3-MIB", "docsIf3CmStatusT2Timeouts"), ("DOCS-IF3-MIB", "docsIf3CmStatusEnergyMgt1x1OperStatus"), ("DOCS-IF3-MIB", "docsIf3CmStatusUsTxPower"), ("DOCS-IF3-MIB", "docsIf3CmStatusUsT3Timeouts"), ("DOCS-IF3-MIB", "docsIf3CmStatusUsT4Timeouts"), ("DOCS-IF3-MIB", "docsIf3CmStatusUsRangingAborteds"), ("DOCS-IF3-MIB", "docsIf3CmStatusUsModulationType"), ("DOCS-IF3-MIB", "docsIf3CmStatusUsEqData"), ("DOCS-IF3-MIB", "docsIf3CmStatusUsT3Exceededs"), ("DOCS-IF3-MIB", "docsIf3CmStatusUsIsMuted"), ("DOCS-IF3-MIB", "docsIf3CmStatusUsRangingStatus"), ("DOCS-IF3-MIB", "docsIf3CmCapabilitiesReq"), ("DOCS-IF3-MIB", "docsIf3CmCapabilitiesRsp"), ("DOCS-IF3-MIB", "docsIf3UsChExtSacCodeHoppingSelectionMode"), ("DOCS-IF3-MIB", "docsIf3UsChExtScdmaSelectionStringActiveCodes"), ("DOCS-IF3-MIB", "docsIf3RxChStatusChIfIndex"), ("DOCS-IF3-MIB", "docsIf3RxChStatusPrimaryDsIndicator"), ("DOCS-IF3-MIB", "docsIf3RxChStatusRcRmConnectivityId"), ("DOCS-IF3-MIB", "docsIf3RxModuleStatusRmRmConnectivityId"), ("DOCS-IF3-MIB", "docsIf3RxModuleStatusFirstCenterFrequency"), ("DOCS-IF3-MIB", "docsIf3CmDpvStatsLastMeasLatency"), ("DOCS-IF3-MIB", "docsIf3CmDpvStatsLastMeasTime"), ("DOCS-IF3-MIB", "docsIf3CmDpvStatsMinLatency"), ("DOCS-IF3-MIB", "docsIf3CmDpvStatsMaxLatency"), ("DOCS-IF3-MIB", "docsIf3CmDpvStatsAvgLatency"), ("DOCS-IF3-MIB", "docsIf3CmDpvStatsNumMeas"), ("DOCS-IF3-MIB", "docsIf3CmDpvStatsLastClearTime"), ("DOCS-IF3-MIB", "docsIf3CmEventCtrlStatus"), ("DOCS-IF3-MIB", "docsIf3CmMdCfgIpProvMode"), ("DOCS-IF3-MIB", "docsIf3CmMdCfgIpProvModeResetOnChange"), ("DOCS-IF3-MIB", "docsIf3CmMdCfgIpProvModeResetOnChangeHoldOffTimer"), ("DOCS-IF3-MIB", "docsIf3CmMdCfgIpProvModeStorageType"), ("DOCS-IF3-MIB", "docsIf3CmEnergyMgtCfgFeatureEnabled"), ("DOCS-IF3-MIB", "docsIf3CmEnergyMgtCfgCyclePeriod"), ("DOCS-IF3-MIB", "docsIf3CmEnergyMgt1x1CfgDirection"), ("DOCS-IF3-MIB", "docsIf3CmEnergyMgt1x1CfgEntryBitrateThrshld"), ("DOCS-IF3-MIB", "docsIf3CmEnergyMgt1x1CfgEntryTimeThrshld"), ("DOCS-IF3-MIB", "docsIf3CmEnergyMgt1x1CfgExitBitrateThrshld"), ("DOCS-IF3-MIB", "docsIf3CmEnergyMgt1x1CfgExitTimeThrshld"), ("DOCS-IF3-MIB", "docsIf3CmSpectrumAnalysisCtrlCmdEnable"), ("DOCS-IF3-MIB", "docsIf3CmSpectrumAnalysisCtrlCmdInactivityTimeout"), ("DOCS-IF3-MIB", "docsIf3CmSpectrumAnalysisCtrlCmdFirstSegmentCenterFrequency"), ("DOCS-IF3-MIB", "docsIf3CmSpectrumAnalysisCtrlCmdLastSegmentCenterFrequency"), ("DOCS-IF3-MIB", "docsIf3CmSpectrumAnalysisCtrlCmdSegmentFrequencySpan"), ("DOCS-IF3-MIB", "docsIf3CmSpectrumAnalysisCtrlCmdNumBinsPerSegment"), ("DOCS-IF3-MIB", "docsIf3CmSpectrumAnalysisCtrlCmdEquivalentNoiseBandwidth"), ("DOCS-IF3-MIB", "docsIf3CmSpectrumAnalysisCtrlCmdWindowFunction"), ("DOCS-IF3-MIB", "docsIf3CmSpectrumAnalysisCtrlCmdNumberOfAverages"), ("DOCS-IF3-MIB", "docsIf3CmSpectrumAnalysisMeasAmplitudeData"), ("DOCS-IF3-MIB", "docsIf3CmSpectrumAnalysisMeasTotalSegmentPower"), ("DOCS-IF3-MIB", "docsIf3CmEm1x1StatsNumberTimesCrossedBelowUsEntryThrshlds"), ("DOCS-IF3-MIB", "docsIf3CmEm1x1StatsNumberTimesCrossedBelowDsEntryThrshlds"), ("DOCS-IF3-MIB", "docsIf3CmEm1x1StatsTotalDuration"), ("DOCS-IF3-MIB", "docsIf3CmEm1x1StatsTotalDurationBelowUsThrshlds"), ("DOCS-IF3-MIB", "docsIf3CmEm1x1StatsTotalDurationBelowDsThrshlds"), ("DOCS-IF3-MIB", "docsIf3CmEm1x1StatsTotalDurationBelowUsDsThrshlds"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    docsIf3CmGroup = docsIf3CmGroup.setStatus('current')
docsIf3CmtsNotificationGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 4491, 2, 1, 20, 2, 2, 3)).setObjects(("DOCS-IF3-MIB", "docsIf3CmtsEventNotif"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    docsIf3CmtsNotificationGroup = docsIf3CmtsNotificationGroup.setStatus('current')
docsIf3CmNotificationGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 4491, 2, 1, 20, 2, 2, 4)).setObjects(("DOCS-IF3-MIB", "docsIf3CmEventNotif"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    docsIf3CmNotificationGroup = docsIf3CmNotificationGroup.setStatus('current')
docsIf3ObsoleteGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 4491, 2, 1, 20, 2, 2, 5)).setObjects(("DOCS-IF3-MIB", "docsIf3RccCfgVendorSpecific"), ("DOCS-IF3-MIB", "docsIf3RccCfgDescription"), ("DOCS-IF3-MIB", "docsIf3RccCfgRowStatus"), ("DOCS-IF3-MIB", "docsIf3RxChCfgChIfIndex"), ("DOCS-IF3-MIB", "docsIf3RxChCfgPrimaryDsIndicator"), ("DOCS-IF3-MIB", "docsIf3RxChCfgRcRmConnectivityId"), ("DOCS-IF3-MIB", "docsIf3RxChCfgRowStatus"), ("DOCS-IF3-MIB", "docsIf3RxModuleCfgRmRmConnectivityId"), ("DOCS-IF3-MIB", "docsIf3RxModuleCfgFirstCenterFrequency"), ("DOCS-IF3-MIB", "docsIf3RxModuleCfgRowStatus"), ("DOCS-IF3-MIB", "docsIf3CmStatusUCCsSuccesses"), ("DOCS-IF3-MIB", "docsIf3CmStatusUCCFails"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    docsIf3ObsoleteGroup = docsIf3ObsoleteGroup.setStatus('obsolete')
mibBuilder.exportSymbols("DOCS-IF3-MIB", docsIf3CmtsCmUsStatusChIfIndex=docsIf3CmtsCmUsStatusChIfIndex, docsIf3BondingGrpCfgDsidReseqWaitTime=docsIf3BondingGrpCfgDsidReseqWaitTime, docsIf3MdUsSgStatusMdUsSgId=docsIf3MdUsSgStatusMdUsSgId, docsIf3MdCfgTftpProxyEnabled=docsIf3MdCfgTftpProxyEnabled, docsIf3CmMdCfgTable=docsIf3CmMdCfgTable, docsIf3CmtsCmRegStatusMdIfIndex=docsIf3CmtsCmRegStatusMdIfIndex, docsIf3MdUsToDsChMappingTable=docsIf3MdUsToDsChMappingTable, docsIf3DsBondingGrpStatusMdDsSgId=docsIf3DsBondingGrpStatusMdDsSgId, docsIf3RxChStatusRcId=docsIf3RxChStatusRcId, SpectrumAnalysisWindowFunction=SpectrumAnalysisWindowFunction, docsIf3RxChStatusEntry=docsIf3RxChStatusEntry, docsIf3MdDsSgStatusChSetId=docsIf3MdDsSgStatusChSetId, docsIf3CmtsCmRegStatusRccStatusId=docsIf3CmtsCmRegStatusRccStatusId, docsIf3CmSpectrumAnalysisCtrlCmdEnable=docsIf3CmSpectrumAnalysisCtrlCmdEnable, docsIf3CmEm1x1StatsTotalDuration=docsIf3CmEm1x1StatsTotalDuration, docsIf3CmtsCmCtrl=docsIf3CmtsCmCtrl, docsIf3CmStatusCode=docsIf3CmStatusCode, docsIf3RxChCfgEntry=docsIf3RxChCfgEntry, docsIf3MibCompliances=docsIf3MibCompliances, docsIf3CmtsCmCtrlCmdMuteInterval=docsIf3CmtsCmCtrlCmdMuteInterval, docsIf3CmStatusUsRangingStatus=docsIf3CmStatusUsRangingStatus, docsIf3RccStatusValidityCode=docsIf3RccStatusValidityCode, ScdmaSelectionString=ScdmaSelectionString, docsIf3MdChCfgRowStatus=docsIf3MdChCfgRowStatus, docsIf3UsBondingGrpStatusEntry=docsIf3UsBondingGrpStatusEntry, docsIf3CmtsEventCtrlEntry=docsIf3CmtsEventCtrlEntry, docsIf3CmEnergyMgt1x1CfgExitBitrateThrshld=docsIf3CmEnergyMgt1x1CfgExitBitrateThrshld, docsIf3CmDpvStatsMaxLatency=docsIf3CmDpvStatsMaxLatency, docsIf3CmtsCmRegStatusTable=docsIf3CmtsCmRegStatusTable, docsIf3CmtsCmRegStatusTcsId=docsIf3CmtsCmRegStatusTcsId, PYSNMP_MODULE_ID=docsIf3Mib, docsIf3MdNodeStatusMdUsSgId=docsIf3MdNodeStatusMdUsSgId, docsIf3BondingGrpCfgChList=docsIf3BondingGrpCfgChList, docsIf3DsBondingGrpStatusChSetId=docsIf3DsBondingGrpStatusChSetId, docsIf3CmtsCmUsStatusTable=docsIf3CmtsCmUsStatusTable, docsIf3BondingGrpCfgDir=docsIf3BondingGrpCfgDir, docsIf3CmtsCmRegStatusRcsId=docsIf3CmtsCmRegStatusRcsId, docsIf3RxModuleStatusTable=docsIf3RxModuleStatusTable, docsIf3CmDpvStatsEntry=docsIf3CmDpvStatsEntry, docsIf3RxModuleCfgRmRmConnectivityId=docsIf3RxModuleCfgRmRmConnectivityId, AmplitudeData=AmplitudeData, docsIf3CmtsCmRegStatusIPv6LinkLocal=docsIf3CmtsCmRegStatusIPv6LinkLocal, docsIf3MdNodeStatusNodeName=docsIf3MdNodeStatusNodeName, docsIf3MdUsSgStatusTable=docsIf3MdUsSgStatusTable, docsIf3CmStatusUsT3Exceededs=docsIf3CmStatusUsT3Exceededs, docsIf3CmStatusResets=docsIf3CmStatusResets, docsIf3CmEnergyMgt1x1CfgDirection=docsIf3CmEnergyMgt1x1CfgDirection, docsIf3CmEm1x1StatsTotalDurationBelowUsDsThrshlds=docsIf3CmEm1x1StatsTotalDurationBelowUsDsThrshlds, docsIf3RxChCfgRcRmConnectivityId=docsIf3RxChCfgRcRmConnectivityId, docsIf3CmEnergyMgt1x1CfgEntry=docsIf3CmEnergyMgt1x1CfgEntry, docsIf3CmDpvStatsLastMeasTime=docsIf3CmDpvStatsLastMeasTime, docsIf3MdCfgTable=docsIf3MdCfgTable, docsIf3RxChStatusPrimaryDsIndicator=docsIf3RxChStatusPrimaryDsIndicator, docsIf3CmStatusT1Timeouts=docsIf3CmStatusT1Timeouts, docsIf3CmtsSpectrumAnalysisMeasTimeInterval=docsIf3CmtsSpectrumAnalysisMeasTimeInterval, docsIf3CmtsCmRegStatusValue=docsIf3CmtsCmRegStatusValue, docsIf3CmSpectrumAnalysisCtrlCmdSegmentFrequencySpan=docsIf3CmSpectrumAnalysisCtrlCmdSegmentFrequencySpan, docsIf3CmtsNotificationGroup=docsIf3CmtsNotificationGroup, RcpId=RcpId, docsIf3UsBondingGrpStatusChSetId=docsIf3UsBondingGrpStatusChSetId, docsIf3CmtsCmRegStatusMdCmSgId=docsIf3CmtsCmRegStatusMdCmSgId, docsIf3RxChCfgChIfIndex=docsIf3RxChCfgChIfIndex, docsIf3CmStatusUCCsSuccesses=docsIf3CmStatusUCCsSuccesses, docsIf3RccStatusRcpId=docsIf3RccStatusRcpId, docsIf3MdCfgIpProvMode=docsIf3MdCfgIpProvMode, docsIf3CmCompliance=docsIf3CmCompliance, docsIf3CmtsCmUsStatusSignalNoise=docsIf3CmtsCmUsStatusSignalNoise, Tlv8=Tlv8, docsIf3MdUsToDsChMappingMdIfIndex=docsIf3MdUsToDsChMappingMdIfIndex, docsIf3MdUsSgStatusEntry=docsIf3MdUsSgStatusEntry, docsIf3CmtsSignalQualityExtExpectedRxSignalPower=docsIf3CmtsSignalQualityExtExpectedRxSignalPower, docsIf3CmEventCtrlEventId=docsIf3CmEventCtrlEventId, docsIf3BondingGrpCfgTable=docsIf3BondingGrpCfgTable, docsIf3CmtsCmRegStatusLastRegTime=docsIf3CmtsCmRegStatusLastRegTime, docsIf3UsBondingGrpStatusTable=docsIf3UsBondingGrpStatusTable, docsIf3CmEnergyMgtCfg=docsIf3CmEnergyMgtCfg, docsIf3CmMdCfgIpProvModeResetOnChange=docsIf3CmMdCfgIpProvModeResetOnChange, docsIf3MdDsSgStatusMdDsSgId=docsIf3MdDsSgStatusMdDsSgId, docsIf3RxModuleStatusFirstCenterFrequency=docsIf3RxModuleStatusFirstCenterFrequency, docsIf3CmEnergyMgt1x1CfgEntryTimeThrshld=docsIf3CmEnergyMgt1x1CfgEntryTimeThrshld, docsIf3CmDpvStatsGrpId=docsIf3CmDpvStatsGrpId, docsIf3CmtsCmEmStatsEntry=docsIf3CmtsCmEmStatsEntry, docsIf3CmEm1x1StatsNumberTimesCrossedBelowUsEntryThrshlds=docsIf3CmEm1x1StatsNumberTimesCrossedBelowUsEntryThrshlds, AttributeMask=AttributeMask, docsIf3DsChSetTable=docsIf3DsChSetTable, docsIf3CmMdCfgEntry=docsIf3CmMdCfgEntry, docsIf3CmEm1x1StatsTotalDurationBelowUsThrshlds=docsIf3CmEm1x1StatsTotalDurationBelowUsThrshlds, docsIf3MdCfgEntry=docsIf3MdCfgEntry, docsIf3DsBondingGrpStatusCfgId=docsIf3DsBondingGrpStatusCfgId, docsIf3CmNotificationGroup=docsIf3CmNotificationGroup, docsIf3ObsoleteGroup=docsIf3ObsoleteGroup, docsIf3CmCapabilitiesReq=docsIf3CmCapabilitiesReq, docsIf3MdCfgSendUdcRulesEnabled=docsIf3MdCfgSendUdcRulesEnabled, docsIf3MibGroups=docsIf3MibGroups, Dsid=Dsid, docsIf3BondingGrpCfgEntry=docsIf3BondingGrpCfgEntry, docsIf3CmStatusEnergyMgt1x1OperStatus=docsIf3CmStatusEnergyMgt1x1OperStatus, docsIf3SignalQualityExtEntry=docsIf3SignalQualityExtEntry, docsIf3DsChSetChList=docsIf3DsChSetChList, docsIf3RxChCfgPrimaryDsIndicator=docsIf3RxChCfgPrimaryDsIndicator, docsIf3CmtsEventCtrlEventId=docsIf3CmtsEventCtrlEventId, docsIf3CmDpvStatsNumMeas=docsIf3CmDpvStatsNumMeas, docsIf3UsChSetTable=docsIf3UsChSetTable, docsIf3MdChCfgChId=docsIf3MdChCfgChId, docsIf3CmtsCmUsStatusEntry=docsIf3CmtsCmUsStatusEntry, docsIf3CmStatusUsTable=docsIf3CmStatusUsTable, docsIf3RxModuleCfgFirstCenterFrequency=docsIf3RxModuleCfgFirstCenterFrequency, docsIf3CmSpectrumAnalysisMeasEntry=docsIf3CmSpectrumAnalysisMeasEntry, docsIf3CmEm1x1StatsTotalDurationBelowDsThrshlds=docsIf3CmEm1x1StatsTotalDurationBelowDsThrshlds, docsIf3CmtsEventCtrlStatus=docsIf3CmtsEventCtrlStatus, docsIf3CmtsCmUsStatusIsMuted=docsIf3CmtsCmUsStatusIsMuted, docsIf3MdCfgBpi2EnforceCtrl=docsIf3MdCfgBpi2EnforceCtrl, docsIf3RccCfgTable=docsIf3RccCfgTable, docsIf3CmSpectrumAnalysisMeasFrequency=docsIf3CmSpectrumAnalysisMeasFrequency, docsIf3SignalQualityExtRxMER=docsIf3SignalQualityExtRxMER, docsIf3MdUsToDsChMappingDsIfIndex=docsIf3MdUsToDsChMappingDsIfIndex, docsIf3CmStatusUsEqData=docsIf3CmStatusUsEqData, docsIf3MdCfgMultTxChModeEnabled=docsIf3MdCfgMultTxChModeEnabled, docsIf3CmStatusUsT3Timeouts=docsIf3CmStatusUsT3Timeouts, docsIf3CmtsCmUsStatusMicroreflections=docsIf3CmtsCmUsStatusMicroreflections, docsIf3DsChSetEntry=docsIf3DsChSetEntry, docsIf3RxChCfgRcId=docsIf3RxChCfgRcId, docsIf3MdChCfgChIfIndex=docsIf3MdChCfgChIfIndex, docsIf3MdCfgSrcAddrVerifEnabled=docsIf3MdCfgSrcAddrVerifEnabled, docsIf3CmtsSpectrumAnalysisMeasRowStatus=docsIf3CmtsSpectrumAnalysisMeasRowStatus, docsIf3CmtsGroup=docsIf3CmtsGroup, docsIf3CmStatusLostSyncs=docsIf3CmStatusLostSyncs, docsIf3RccCfgRowStatus=docsIf3RccCfgRowStatus, docsIf3RccStatusValidityCodeText=docsIf3RccStatusValidityCodeText, docsIf3MdNodeStatusTable=docsIf3MdNodeStatusTable, docsIf3RxChStatusTable=docsIf3RxChStatusTable, docsIf3UsChSetEntry=docsIf3UsChSetEntry, docsIf3CmStatusUsRangingAborteds=docsIf3CmStatusUsRangingAborteds, docsIf3CmtsCmRegStatusIPv6Addr=docsIf3CmtsCmRegStatusIPv6Addr, docsIf3CmMdCfgIpProvModeResetOnChangeHoldOffTimer=docsIf3CmMdCfgIpProvModeResetOnChangeHoldOffTimer, docsIf3CmStatusInvalidMaps=docsIf3CmStatusInvalidMaps, docsIf3CmSpectrumAnalysisCtrlCmdFirstSegmentCenterFrequency=docsIf3CmSpectrumAnalysisCtrlCmdFirstSegmentCenterFrequency, CmtsCmRegState=CmtsCmRegState, docsIf3BondingGrpCfgDsidReseqWarnThrshld=docsIf3BondingGrpCfgDsidReseqWarnThrshld, docsIf3CmStatusEntry=docsIf3CmStatusEntry, docsIf3RccCfgVendorSpecific=docsIf3RccCfgVendorSpecific, docsIf3RccStatusEntry=docsIf3RccStatusEntry, docsIf3RxChCfgTable=docsIf3RxChCfgTable, docsIf3MdNodeStatusMdCmSgId=docsIf3MdNodeStatusMdCmSgId, docsIf3CmStatusUsT4Timeouts=docsIf3CmStatusUsT4Timeouts, docsIf3MdCfgMddInterval=docsIf3MdCfgMddInterval, docsIf3CmSpectrumAnalysisCtrlCmdNumBinsPerSegment=docsIf3CmSpectrumAnalysisCtrlCmdNumBinsPerSegment, docsIf3CmtsSpectrumAnalysisMeasEntry=docsIf3CmtsSpectrumAnalysisMeasEntry, docsIf3CmtsCmUsStatusRangingStatus=docsIf3CmtsCmUsStatusRangingStatus, docsIf3CmEnergyMgtCfgCyclePeriod=docsIf3CmEnergyMgtCfgCyclePeriod, docsIf3CmtsCmCtrlCmdCommit=docsIf3CmtsCmCtrlCmdCommit, docsIf3RccCfgEntry=docsIf3RccCfgEntry, docsIf3MdUsToDsChMappingUsIfIndex=docsIf3MdUsToDsChMappingUsIfIndex, docsIf3CmSpectrumAnalysisCtrlCmdWindowFunction=docsIf3CmSpectrumAnalysisCtrlCmdWindowFunction, docsIf3CmtsCmUsStatusUnerroreds=docsIf3CmtsCmUsStatusUnerroreds, docsIf3CmSpectrumAnalysisMeasTotalSegmentPower=docsIf3CmSpectrumAnalysisMeasTotalSegmentPower, docsIf3RxChStatusChIfIndex=docsIf3RxChStatusChIfIndex, docsIf3CmtsCmRegStatusQosVersion=docsIf3CmtsCmRegStatusQosVersion, docsIf3MdChCfgSfProvAttrMask=docsIf3MdChCfgSfProvAttrMask, docsIf3RccStatusRccStatusId=docsIf3RccStatusRccStatusId, docsIf3MdCfgCmUdcEnabled=docsIf3MdCfgCmUdcEnabled, docsIf3DsBondingGrpStatusTable=docsIf3DsBondingGrpStatusTable, docsIf3UsBondingGrpStatusCfgId=docsIf3UsBondingGrpStatusCfgId, docsIf3UsChSetId=docsIf3UsChSetId, docsIf3DsChSetId=docsIf3DsChSetId, docsIf3DsBondingGrpStatusEntry=docsIf3DsBondingGrpStatusEntry, docsIf3CmtsCmRegStatusEnergyMgtOperStatus=docsIf3CmtsCmRegStatusEnergyMgtOperStatus, docsIf3BondingGrpCfgSfProvAttrMask=docsIf3BondingGrpCfgSfProvAttrMask, docsIf3CmtsCmCtrlCmdMuteUsChId=docsIf3CmtsCmCtrlCmdMuteUsChId, docsIf3CmtsCmUsStatusEqData=docsIf3CmtsCmUsStatusEqData, docsIf3CmtsCompliance=docsIf3CmtsCompliance, docsIf3Notifications=docsIf3Notifications, docsIf3CmtsCmUsStatusHighResolutionTimingOffset=docsIf3CmtsCmUsStatusHighResolutionTimingOffset, docsIf3RccStatusRccCfgId=docsIf3RccStatusRccCfgId, docsIf3RxChStatusRcRmConnectivityId=docsIf3RxChStatusRcRmConnectivityId, docsIf3CmStatusUsModulationType=docsIf3CmStatusUsModulationType, docsIf3MdUsSgStatusChSetId=docsIf3MdUsSgStatusChSetId, docsIf3UsBondingGrpStatusMdUsSgId=docsIf3UsBondingGrpStatusMdUsSgId, docsIf3CmStatusInvalidRangingRsps=docsIf3CmStatusInvalidRangingRsps, docsIf3CmtsCmEmStatsEm1x1ModeTotalDuration=docsIf3CmtsCmEmStatsEm1x1ModeTotalDuration, IfDirection=IfDirection, docsIf3CmStatusUsTxPower=docsIf3CmStatusUsTxPower, docsIf3UsChSetChList=docsIf3UsChSetChList, docsIf3CmSpectrumAnalysisCtrlCmdInactivityTimeout=docsIf3CmSpectrumAnalysisCtrlCmdInactivityTimeout, ChId=ChId, docsIf3CmtsCmRegStatusIPv4Addr=docsIf3CmtsCmRegStatusIPv4Addr, docsIf3CmEm1x1StatsTable=docsIf3CmEm1x1StatsTable, docsIf3BondingGrpCfgRowStatus=docsIf3BondingGrpCfgRowStatus, docsIf3CmCapabilitiesRsp=docsIf3CmCapabilitiesRsp, docsIf3CmEm1x1StatsNumberTimesCrossedBelowDsEntryThrshlds=docsIf3CmEm1x1StatsNumberTimesCrossedBelowDsEntryThrshlds, docsIf3CmSpectrumAnalysisMeasTable=docsIf3CmSpectrumAnalysisMeasTable, docsIf3MdCfgDownChannelAnnex=docsIf3MdCfgDownChannelAnnex, docsIf3CmtsCmEmStatsTable=docsIf3CmtsCmEmStatsTable, docsIf3CmDpvStatsAvgLatency=docsIf3CmDpvStatsAvgLatency, docsIf3CmSpectrumAnalysisCtrlCmdNumberOfAverages=docsIf3CmSpectrumAnalysisCtrlCmdNumberOfAverages, docsIf3UsChExtScdmaSelectionStringActiveCodes=docsIf3UsChExtScdmaSelectionStringActiveCodes, docsIf3MdCfgEnergyMgt1x1Enabled=docsIf3MdCfgEnergyMgt1x1Enabled, docsIf3CmStatusTable=docsIf3CmStatusTable, docsIf3CmtsSpectrumAnalysisMeasAmplitudeData=docsIf3CmtsSpectrumAnalysisMeasAmplitudeData, docsIf3MdCfgMcastDsidFwdEnabled=docsIf3MdCfgMcastDsidFwdEnabled, docsIf3CmEventNotif=docsIf3CmEventNotif, docsIf3CmStatusUsEntry=docsIf3CmStatusUsEntry, docsIf3MdCfgEarlyAuthEncrCtrl=docsIf3MdCfgEarlyAuthEncrCtrl, docsIf3MdCfgServiceTypeIdList=docsIf3MdCfgServiceTypeIdList, docsIf3SignalQualityExtTable=docsIf3SignalQualityExtTable, CmRegState=CmRegState, docsIf3CmtsSignalQualityExtEntry=docsIf3CmtsSignalQualityExtEntry, docsIf3CmtsCmCtrlCmdDisableForwarding=docsIf3CmtsCmCtrlCmdDisableForwarding, docsIf3CmtsEventCtrlTable=docsIf3CmtsEventCtrlTable, docsIf3CmtsCmRegStatusId=docsIf3CmtsCmRegStatusId, docsIf3CmSpectrumAnalysisMeasAmplitudeData=docsIf3CmSpectrumAnalysisMeasAmplitudeData, docsIf3CmMdCfgIpProvMode=docsIf3CmMdCfgIpProvMode, docsIf3CmDpvStatsLastMeasLatency=docsIf3CmDpvStatsLastMeasLatency, docsIf3UsChExtEntry=docsIf3UsChExtEntry, docsIf3CmtsEventNotif=docsIf3CmtsEventNotif, docsIf3CmStatusUsIsMuted=docsIf3CmStatusUsIsMuted, docsIf3RccCfgDescription=docsIf3RccCfgDescription, docsIf3CmDpvStatsLastClearTime=docsIf3CmDpvStatsLastClearTime, docsIf3RccStatusTable=docsIf3RccStatusTable, docsIf3RxModuleStatusRmId=docsIf3RxModuleStatusRmId, docsIf3CmtsSignalQualityExtCNIR=docsIf3CmtsSignalQualityExtCNIR, docsIf3CmStatusValue=docsIf3CmStatusValue, docsIf3MdCfgCmStatusEvCtlEnabled=docsIf3MdCfgCmStatusEvCtlEnabled, docsIf3UsChExtSacCodeHoppingSelectionMode=docsIf3UsChExtSacCodeHoppingSelectionMode, docsIf3CmtsCmUsStatusModulationType=docsIf3CmtsCmUsStatusModulationType, docsIf3MdChCfgTable=docsIf3MdChCfgTable, docsIf3CmtsCmCtrlCmdMacAddr=docsIf3CmtsCmCtrlCmdMacAddr, docsIf3UsChExtTable=docsIf3UsChExtTable, docsIf3CmMdCfgIpProvModeStorageType=docsIf3CmMdCfgIpProvModeStorageType, docsIf3MdChCfgIsPriCapableDs=docsIf3MdChCfgIsPriCapableDs, docsIf3MdCfgMultRxChModeEnabled=docsIf3MdCfgMultRxChModeEnabled, ChSetId=ChSetId, docsIf3CmEnergyMgtCfgFeatureEnabled=docsIf3CmEnergyMgtCfgFeatureEnabled, docsIf3CmtsSignalQualityExtTable=docsIf3CmtsSignalQualityExtTable, docsIf3CmEnergyMgt1x1CfgTable=docsIf3CmEnergyMgt1x1CfgTable, docsIf3RxModuleCfgRowStatus=docsIf3RxModuleCfgRowStatus, AttrAggrRuleMask=AttrAggrRuleMask, docsIf3BondingGrpCfgCfgId=docsIf3BondingGrpCfgCfgId, docsIf3RccCfgRcpId=docsIf3RccCfgRcpId, docsIf3CmStatusT2Timeouts=docsIf3CmStatusT2Timeouts, docsIf3CmSpectrumAnalysisCtrlCmd=docsIf3CmSpectrumAnalysisCtrlCmd, docsIf3MibConformance=docsIf3MibConformance, docsIf3MdNodeStatusMdDsSgId=docsIf3MdNodeStatusMdDsSgId, docsIf3RxModuleCfgEntry=docsIf3RxModuleCfgEntry, docsIf3CmStatusInvalidRegRsps=docsIf3CmStatusInvalidRegRsps, docsIf3RxChCfgRowStatus=docsIf3RxChCfgRowStatus, docsIf3CmEventCtrlStatus=docsIf3CmEventCtrlStatus, docsIf3CmtsCmRegStatusEnergyMgtEnabled=docsIf3CmtsCmRegStatusEnergyMgtEnabled, docsIf3MdChCfgEntry=docsIf3MdChCfgEntry, docsIf3RxModuleCfgTable=docsIf3RxModuleCfgTable, docsIf3MdCfgUsFreqRange=docsIf3MdCfgUsFreqRange, docsIf3RxModuleStatusRmRmConnectivityId=docsIf3RxModuleStatusRmRmConnectivityId, docsIf3CmDpvStatsTable=docsIf3CmDpvStatsTable, docsIf3CmEnergyMgt1x1CfgEntryBitrateThrshld=docsIf3CmEnergyMgt1x1CfgEntryBitrateThrshld)
mibBuilder.exportSymbols("DOCS-IF3-MIB", docsIf3CmGroup=docsIf3CmGroup, docsIf3CmEnergyMgt1x1CfgExitTimeThrshld=docsIf3CmEnergyMgt1x1CfgExitTimeThrshld, docsIf3CmStatusUCCFails=docsIf3CmStatusUCCFails, docsIf3CmEventCtrlTable=docsIf3CmEventCtrlTable, ChannelList=ChannelList, docsIf3RxModuleStatusEntry=docsIf3RxModuleStatusEntry, docsIf3CmtsSpectrumAnalysisMeasTable=docsIf3CmtsSpectrumAnalysisMeasTable, docsIf3CmtsCmUsStatusCorrecteds=docsIf3CmtsCmUsStatusCorrecteds, docsIf3RxModuleCfgRmId=docsIf3RxModuleCfgRmId, docsIf3MdUsToDsChMappingEntry=docsIf3MdUsToDsChMappingEntry, docsIf3CmCapabilities=docsIf3CmCapabilities, docsIf3Mib=docsIf3Mib, docsIf3SignalQualityExtRxMerSamples=docsIf3SignalQualityExtRxMerSamples, docsIf3CmtsCmUsStatusRxPower=docsIf3CmtsCmUsStatusRxPower, docsIf3CmStatusInvalidUcds=docsIf3CmStatusInvalidUcds, docsIf3CmEventCtrlEntry=docsIf3CmEventCtrlEntry, docsIf3CmtsCmUsStatusUncorrectables=docsIf3CmtsCmUsStatusUncorrectables, docsIf3CmSpectrumAnalysisCtrlCmdEquivalentNoiseBandwidth=docsIf3CmSpectrumAnalysisCtrlCmdEquivalentNoiseBandwidth, docsIf3CmEm1x1StatsEntry=docsIf3CmEm1x1StatsEntry, docsIf3CmtsCmRegStatusMacAddr=docsIf3CmtsCmRegStatusMacAddr, docsIf3MdDsSgStatusTable=docsIf3MdDsSgStatusTable, docsIf3CmDpvStatsMinLatency=docsIf3CmDpvStatsMinLatency, docsIf3CmSpectrumAnalysisCtrlCmdLastSegmentCenterFrequency=docsIf3CmSpectrumAnalysisCtrlCmdLastSegmentCenterFrequency, docsIf3CmtsCmRegStatusEntry=docsIf3CmtsCmRegStatusEntry, docsIf3RccCfgRccCfgId=docsIf3RccCfgRccCfgId, docsIf3CmtsCmRegStatusAddrResolutionReqs=docsIf3CmtsCmRegStatusAddrResolutionReqs, docsIf3MdNodeStatusEntry=docsIf3MdNodeStatusEntry, RangingState=RangingState, docsIf3MibObjects=docsIf3MibObjects, docsIf3CmtsCmRegStatusRcpId=docsIf3CmtsCmRegStatusRcpId, docsIf3MdDsSgStatusEntry=docsIf3MdDsSgStatusEntry)
