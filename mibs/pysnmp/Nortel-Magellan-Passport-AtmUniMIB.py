#
# PySNMP MIB module Nortel-Magellan-Passport-AtmUniMIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/Nortel-Magellan-Passport-AtmUniMIB
# Produced by pysmi-0.3.4 at Mon Apr 29 20:16:58 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ValueRangeConstraint, ValueSizeConstraint, SingleValueConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ValueRangeConstraint", "ValueSizeConstraint", "SingleValueConstraint", "ConstraintsUnion")
atmIfIndex, atmIf, atmIfVpt, atmIfVptIndex = mibBuilder.importSymbols("Nortel-Magellan-Passport-AtmCoreMIB", "atmIfIndex", "atmIf", "atmIfVpt", "atmIfVptIndex")
Unsigned32, RowStatus, Integer32, Counter32, Gauge32, StorageType, DisplayString = mibBuilder.importSymbols("Nortel-Magellan-Passport-StandardTextualConventionsMIB", "Unsigned32", "RowStatus", "Integer32", "Counter32", "Gauge32", "StorageType", "DisplayString")
AsciiString, NonReplicated, AsciiStringIndex, Hex = mibBuilder.importSymbols("Nortel-Magellan-Passport-TextualConventionsMIB", "AsciiString", "NonReplicated", "AsciiStringIndex", "Hex")
passportMIBs, = mibBuilder.importSymbols("Nortel-Magellan-Passport-UsefulDefinitionsMIB", "passportMIBs")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
NotificationType, Bits, Unsigned32, MibScalar, MibTable, MibTableRow, MibTableColumn, MibIdentifier, ObjectIdentity, Integer32, Counter32, Gauge32, TimeTicks, iso, IpAddress, Counter64, ModuleIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "NotificationType", "Bits", "Unsigned32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "MibIdentifier", "ObjectIdentity", "Integer32", "Counter32", "Gauge32", "TimeTicks", "iso", "IpAddress", "Counter64", "ModuleIdentity")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
atmUniMIB = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 69))
atmIfUni = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 6))
atmIfUniRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 6, 1), )
if mibBuilder.loadTexts: atmIfUniRowStatusTable.setStatus('mandatory')
atmIfUniRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 6, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfIndex"), (0, "Nortel-Magellan-Passport-AtmUniMIB", "atmIfUniIndex"))
if mibBuilder.loadTexts: atmIfUniRowStatusEntry.setStatus('mandatory')
atmIfUniRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 6, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: atmIfUniRowStatus.setStatus('mandatory')
atmIfUniComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 6, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmIfUniComponentName.setStatus('mandatory')
atmIfUniStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 6, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmIfUniStorageType.setStatus('mandatory')
atmIfUniIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 6, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: atmIfUniIndex.setStatus('mandatory')
atmIfUniProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 6, 10), )
if mibBuilder.loadTexts: atmIfUniProvTable.setStatus('mandatory')
atmIfUniProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 6, 10, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfIndex"), (0, "Nortel-Magellan-Passport-AtmUniMIB", "atmIfUniIndex"))
if mibBuilder.loadTexts: atmIfUniProvEntry.setStatus('mandatory')
atmIfUniVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 6, 10, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("atmForum30", 0), ("atmForum31", 1))).clone('atmForum31')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: atmIfUniVersion.setStatus('mandatory')
atmIfUniSide = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 6, 10, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("network", 0), ("user", 1))).clone('network')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: atmIfUniSide.setStatus('mandatory')
atmIfUniSoftPvcRetryPeriod = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 6, 10, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(20, 999999)).clone(60)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: atmIfUniSoftPvcRetryPeriod.setStatus('obsolete')
atmIfUniSoftPvpAndPvcRetryPeriod = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 6, 10, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(20, 999999)).clone(60)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: atmIfUniSoftPvpAndPvcRetryPeriod.setStatus('mandatory')
atmIfUniSoftPvpAndPvcHoldOffTime = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 6, 10, 1, 5), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(50, 20000), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: atmIfUniSoftPvpAndPvcHoldOffTime.setStatus('mandatory')
atmIfUniOperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 6, 11), )
if mibBuilder.loadTexts: atmIfUniOperTable.setStatus('mandatory')
atmIfUniOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 6, 11, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfIndex"), (0, "Nortel-Magellan-Passport-AtmUniMIB", "atmIfUniIndex"))
if mibBuilder.loadTexts: atmIfUniOperEntry.setStatus('mandatory')
atmIfUniMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 6, 11, 1, 1), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(12, 12)).setFixedLength(12)).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmIfUniMacAddress.setStatus('mandatory')
atmIfUniAcctOptTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 6, 12), )
if mibBuilder.loadTexts: atmIfUniAcctOptTable.setStatus('mandatory')
atmIfUniAcctOptEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 6, 12, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfIndex"), (0, "Nortel-Magellan-Passport-AtmUniMIB", "atmIfUniIndex"))
if mibBuilder.loadTexts: atmIfUniAcctOptEntry.setStatus('mandatory')
atmIfUniAccountCollection = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 6, 12, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 1)).setFixedLength(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: atmIfUniAccountCollection.setStatus('mandatory')
atmIfUniAccountConnectionType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 6, 12, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("origTerm", 0), ("intermediate", 1))).clone('origTerm')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: atmIfUniAccountConnectionType.setStatus('mandatory')
atmIfUniAccountClass = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 6, 12, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: atmIfUniAccountClass.setStatus('mandatory')
atmIfUniServiceExchange = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 6, 12, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: atmIfUniServiceExchange.setStatus('mandatory')
atmIfUniIlmi = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 6, 2))
atmIfUniIlmiRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 6, 2, 1), )
if mibBuilder.loadTexts: atmIfUniIlmiRowStatusTable.setStatus('mandatory')
atmIfUniIlmiRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 6, 2, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfIndex"), (0, "Nortel-Magellan-Passport-AtmUniMIB", "atmIfUniIndex"), (0, "Nortel-Magellan-Passport-AtmUniMIB", "atmIfUniIlmiIndex"))
if mibBuilder.loadTexts: atmIfUniIlmiRowStatusEntry.setStatus('mandatory')
atmIfUniIlmiRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 6, 2, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmIfUniIlmiRowStatus.setStatus('mandatory')
atmIfUniIlmiComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 6, 2, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmIfUniIlmiComponentName.setStatus('mandatory')
atmIfUniIlmiStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 6, 2, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmIfUniIlmiStorageType.setStatus('mandatory')
atmIfUniIlmiIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 6, 2, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: atmIfUniIlmiIndex.setStatus('mandatory')
atmIfUniIlmiStateTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 6, 2, 10), )
if mibBuilder.loadTexts: atmIfUniIlmiStateTable.setStatus('mandatory')
atmIfUniIlmiStateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 6, 2, 10, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfIndex"), (0, "Nortel-Magellan-Passport-AtmUniMIB", "atmIfUniIndex"), (0, "Nortel-Magellan-Passport-AtmUniMIB", "atmIfUniIlmiIndex"))
if mibBuilder.loadTexts: atmIfUniIlmiStateEntry.setStatus('mandatory')
atmIfUniIlmiAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 6, 2, 10, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("locked", 0), ("unlocked", 1), ("shuttingDown", 2))).clone('unlocked')).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmIfUniIlmiAdminState.setStatus('mandatory')
atmIfUniIlmiOperationalState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 6, 2, 10, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1))).clone('disabled')).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmIfUniIlmiOperationalState.setStatus('mandatory')
atmIfUniIlmiUsageState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 6, 2, 10, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("idle", 0), ("active", 1), ("busy", 2))).clone('idle')).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmIfUniIlmiUsageState.setStatus('mandatory')
atmIfUniIlmiProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 6, 2, 11), )
if mibBuilder.loadTexts: atmIfUniIlmiProvTable.setStatus('mandatory')
atmIfUniIlmiProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 6, 2, 11, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfIndex"), (0, "Nortel-Magellan-Passport-AtmUniMIB", "atmIfUniIndex"), (0, "Nortel-Magellan-Passport-AtmUniMIB", "atmIfUniIlmiIndex"))
if mibBuilder.loadTexts: atmIfUniIlmiProvEntry.setStatus('mandatory')
atmIfUniIlmiVci = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 6, 2, 11, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)).clone(16)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: atmIfUniIlmiVci.setStatus('mandatory')
atmIfUniIlmiOperatingMode = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 6, 2, 11, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("addressRegEnabled", 0), ("addressRegDisabled", 1), ("ilmiDisabled", 2))).clone('addressRegEnabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: atmIfUniIlmiOperatingMode.setStatus('mandatory')
atmIfUniIlmiStatsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 6, 2, 12), )
if mibBuilder.loadTexts: atmIfUniIlmiStatsTable.setStatus('mandatory')
atmIfUniIlmiStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 6, 2, 12, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfIndex"), (0, "Nortel-Magellan-Passport-AtmUniMIB", "atmIfUniIndex"), (0, "Nortel-Magellan-Passport-AtmUniMIB", "atmIfUniIlmiIndex"))
if mibBuilder.loadTexts: atmIfUniIlmiStatsEntry.setStatus('mandatory')
atmIfUniIlmiTxPdus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 6, 2, 12, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmIfUniIlmiTxPdus.setStatus('mandatory')
atmIfUniIlmiRxPdus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 6, 2, 12, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmIfUniIlmiRxPdus.setStatus('mandatory')
atmIfUniIlmiRxBadPdusDiscarded = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 6, 2, 12, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmIfUniIlmiRxBadPdusDiscarded.setStatus('mandatory')
atmIfUniIlmiPrefixToRegisterTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 6, 2, 287), )
if mibBuilder.loadTexts: atmIfUniIlmiPrefixToRegisterTable.setStatus('mandatory')
atmIfUniIlmiPrefixToRegisterEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 6, 2, 287, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfIndex"), (0, "Nortel-Magellan-Passport-AtmUniMIB", "atmIfUniIndex"), (0, "Nortel-Magellan-Passport-AtmUniMIB", "atmIfUniIlmiIndex"), (0, "Nortel-Magellan-Passport-AtmUniMIB", "atmIfUniIlmiPrefixToRegisterValue"))
if mibBuilder.loadTexts: atmIfUniIlmiPrefixToRegisterEntry.setStatus('mandatory')
atmIfUniIlmiPrefixToRegisterValue = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 6, 2, 287, 1, 1), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(26, 26)).setFixedLength(26)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: atmIfUniIlmiPrefixToRegisterValue.setStatus('mandatory')
atmIfUniIlmiPrefixToRegisterRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 6, 2, 287, 1, 2), RowStatus()).setMaxAccess("writeonly")
if mibBuilder.loadTexts: atmIfUniIlmiPrefixToRegisterRowStatus.setStatus('mandatory')
atmIfUniIlmiEsiToRegisterTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 6, 2, 288), )
if mibBuilder.loadTexts: atmIfUniIlmiEsiToRegisterTable.setStatus('mandatory')
atmIfUniIlmiEsiToRegisterEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 6, 2, 288, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfIndex"), (0, "Nortel-Magellan-Passport-AtmUniMIB", "atmIfUniIndex"), (0, "Nortel-Magellan-Passport-AtmUniMIB", "atmIfUniIlmiIndex"), (0, "Nortel-Magellan-Passport-AtmUniMIB", "atmIfUniIlmiEsiToRegisterValue"))
if mibBuilder.loadTexts: atmIfUniIlmiEsiToRegisterEntry.setStatus('mandatory')
atmIfUniIlmiEsiToRegisterValue = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 6, 2, 288, 1, 1), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(12, 12)).setFixedLength(12)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: atmIfUniIlmiEsiToRegisterValue.setStatus('mandatory')
atmIfUniIlmiEsiToRegisterRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 6, 2, 288, 1, 2), RowStatus()).setMaxAccess("writeonly")
if mibBuilder.loadTexts: atmIfUniIlmiEsiToRegisterRowStatus.setStatus('mandatory')
atmIfUniSig = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 6, 3))
atmIfUniSigRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 6, 3, 1), )
if mibBuilder.loadTexts: atmIfUniSigRowStatusTable.setStatus('mandatory')
atmIfUniSigRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 6, 3, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfIndex"), (0, "Nortel-Magellan-Passport-AtmUniMIB", "atmIfUniIndex"), (0, "Nortel-Magellan-Passport-AtmUniMIB", "atmIfUniSigIndex"))
if mibBuilder.loadTexts: atmIfUniSigRowStatusEntry.setStatus('mandatory')
atmIfUniSigRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 6, 3, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmIfUniSigRowStatus.setStatus('mandatory')
atmIfUniSigComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 6, 3, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmIfUniSigComponentName.setStatus('mandatory')
atmIfUniSigStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 6, 3, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmIfUniSigStorageType.setStatus('mandatory')
atmIfUniSigIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 6, 3, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: atmIfUniSigIndex.setStatus('mandatory')
atmIfUniSigProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 6, 3, 10), )
if mibBuilder.loadTexts: atmIfUniSigProvTable.setStatus('mandatory')
atmIfUniSigProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 6, 3, 10, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfIndex"), (0, "Nortel-Magellan-Passport-AtmUniMIB", "atmIfUniIndex"), (0, "Nortel-Magellan-Passport-AtmUniMIB", "atmIfUniSigIndex"))
if mibBuilder.loadTexts: atmIfUniSigProvEntry.setStatus('mandatory')
atmIfUniSigVci = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 6, 3, 10, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)).clone(5)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: atmIfUniSigVci.setStatus('mandatory')
atmIfUniSigAddressConversion = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 6, 3, 10, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("none", 0), ("nativeE164", 1), ("nsap", 2))).clone('none')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: atmIfUniSigAddressConversion.setStatus('mandatory')
atmIfUniSigStateTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 6, 3, 11), )
if mibBuilder.loadTexts: atmIfUniSigStateTable.setStatus('mandatory')
atmIfUniSigStateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 6, 3, 11, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfIndex"), (0, "Nortel-Magellan-Passport-AtmUniMIB", "atmIfUniIndex"), (0, "Nortel-Magellan-Passport-AtmUniMIB", "atmIfUniSigIndex"))
if mibBuilder.loadTexts: atmIfUniSigStateEntry.setStatus('mandatory')
atmIfUniSigAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 6, 3, 11, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("locked", 0), ("unlocked", 1), ("shuttingDown", 2))).clone('unlocked')).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmIfUniSigAdminState.setStatus('mandatory')
atmIfUniSigOperationalState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 6, 3, 11, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1))).clone('disabled')).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmIfUniSigOperationalState.setStatus('mandatory')
atmIfUniSigUsageState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 6, 3, 11, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("idle", 0), ("active", 1), ("busy", 2))).clone('idle')).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmIfUniSigUsageState.setStatus('mandatory')
atmIfUniSigOperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 6, 3, 12), )
if mibBuilder.loadTexts: atmIfUniSigOperTable.setStatus('mandatory')
atmIfUniSigOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 6, 3, 12, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfIndex"), (0, "Nortel-Magellan-Passport-AtmUniMIB", "atmIfUniIndex"), (0, "Nortel-Magellan-Passport-AtmUniMIB", "atmIfUniSigIndex"))
if mibBuilder.loadTexts: atmIfUniSigOperEntry.setStatus('mandatory')
atmIfUniSigLastTxCauseCode = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 6, 3, 12, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmIfUniSigLastTxCauseCode.setStatus('mandatory')
atmIfUniSigLastTxDiagCode = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 6, 3, 12, 1, 2), Hex().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmIfUniSigLastTxDiagCode.setStatus('mandatory')
atmIfUniSigLastRxCauseCode = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 6, 3, 12, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmIfUniSigLastRxCauseCode.setStatus('mandatory')
atmIfUniSigLastRxDiagCode = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 6, 3, 12, 1, 4), Hex().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmIfUniSigLastRxDiagCode.setStatus('mandatory')
atmIfUniSigStatsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 6, 3, 13), )
if mibBuilder.loadTexts: atmIfUniSigStatsTable.setStatus('mandatory')
atmIfUniSigStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 6, 3, 13, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfIndex"), (0, "Nortel-Magellan-Passport-AtmUniMIB", "atmIfUniIndex"), (0, "Nortel-Magellan-Passport-AtmUniMIB", "atmIfUniSigIndex"))
if mibBuilder.loadTexts: atmIfUniSigStatsEntry.setStatus('mandatory')
atmIfUniSigCurrentConnections = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 6, 3, 13, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmIfUniSigCurrentConnections.setStatus('obsolete')
atmIfUniSigPeakConnections = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 6, 3, 13, 1, 2), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmIfUniSigPeakConnections.setStatus('mandatory')
atmIfUniSigSuccessfulConnections = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 6, 3, 13, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmIfUniSigSuccessfulConnections.setStatus('mandatory')
atmIfUniSigFailedConnections = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 6, 3, 13, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmIfUniSigFailedConnections.setStatus('mandatory')
atmIfUniSigTxPdus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 6, 3, 13, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmIfUniSigTxPdus.setStatus('mandatory')
atmIfUniSigRxPdus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 6, 3, 13, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmIfUniSigRxPdus.setStatus('mandatory')
atmIfUniSigCurrentPmpConnections = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 6, 3, 13, 1, 7), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmIfUniSigCurrentPmpConnections.setStatus('mandatory')
atmIfUniSigPeakPmpConnections = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 6, 3, 13, 1, 8), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmIfUniSigPeakPmpConnections.setStatus('mandatory')
atmIfUniSigSuccessfulPmpConnections = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 6, 3, 13, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmIfUniSigSuccessfulPmpConnections.setStatus('mandatory')
atmIfUniSigFailedPmpConnections = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 6, 3, 13, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmIfUniSigFailedPmpConnections.setStatus('mandatory')
atmIfUniSigNewCurrentConnections = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 6, 3, 13, 1, 11), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmIfUniSigNewCurrentConnections.setStatus('mandatory')
atmIfUniSigVcd = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 6, 3, 2))
atmIfUniSigVcdRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 6, 3, 2, 1), )
if mibBuilder.loadTexts: atmIfUniSigVcdRowStatusTable.setStatus('mandatory')
atmIfUniSigVcdRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 6, 3, 2, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfIndex"), (0, "Nortel-Magellan-Passport-AtmUniMIB", "atmIfUniIndex"), (0, "Nortel-Magellan-Passport-AtmUniMIB", "atmIfUniSigIndex"), (0, "Nortel-Magellan-Passport-AtmUniMIB", "atmIfUniSigVcdIndex"))
if mibBuilder.loadTexts: atmIfUniSigVcdRowStatusEntry.setStatus('mandatory')
atmIfUniSigVcdRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 6, 3, 2, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: atmIfUniSigVcdRowStatus.setStatus('mandatory')
atmIfUniSigVcdComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 6, 3, 2, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmIfUniSigVcdComponentName.setStatus('mandatory')
atmIfUniSigVcdStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 6, 3, 2, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmIfUniSigVcdStorageType.setStatus('mandatory')
atmIfUniSigVcdIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 6, 3, 2, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: atmIfUniSigVcdIndex.setStatus('mandatory')
atmIfUniSigVcdProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 6, 3, 2, 10), )
if mibBuilder.loadTexts: atmIfUniSigVcdProvTable.setStatus('mandatory')
atmIfUniSigVcdProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 6, 3, 2, 10, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfIndex"), (0, "Nortel-Magellan-Passport-AtmUniMIB", "atmIfUniIndex"), (0, "Nortel-Magellan-Passport-AtmUniMIB", "atmIfUniSigIndex"), (0, "Nortel-Magellan-Passport-AtmUniMIB", "atmIfUniSigVcdIndex"))
if mibBuilder.loadTexts: atmIfUniSigVcdProvEntry.setStatus('mandatory')
atmIfUniSigVcdTrafficDescType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 6, 3, 2, 10, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(3, 6, 7, 8))).clone(namedValues=NamedValues(("n3", 3), ("n6", 6), ("n7", 7), ("n8", 8))).clone('n6')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: atmIfUniSigVcdTrafficDescType.setStatus('mandatory')
atmIfUniSigVcdAtmServiceCategory = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 6, 3, 2, 10, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("unspecifiedBitRate", 0), ("constantBitRate", 1), ("rtVariableBitRate", 2), ("nrtVariableBitRate", 3))).clone('rtVariableBitRate')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: atmIfUniSigVcdAtmServiceCategory.setStatus('mandatory')
atmIfUniSigVcdQosClass = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 6, 3, 2, 10, 1, 21), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("n0", 0), ("n1", 1), ("n2", 2), ("n3", 3), ("n4", 4))).clone('n2')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: atmIfUniSigVcdQosClass.setStatus('mandatory')
atmIfUniSigVcdTrafficShaping = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 6, 3, 2, 10, 1, 50), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disabled", 1), ("sameAsCa", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: atmIfUniSigVcdTrafficShaping.setStatus('mandatory')
atmIfUniSigVcdUnshapedTransmitQueueing = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 6, 3, 2, 10, 1, 60), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 3))).clone(namedValues=NamedValues(("common", 1), ("sameAsCa", 3))).clone('sameAsCa')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: atmIfUniSigVcdUnshapedTransmitQueueing.setStatus('mandatory')
atmIfUniSigVcdUsageParameterControl = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 6, 3, 2, 10, 1, 70), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disabled", 1), ("sameAsCa", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: atmIfUniSigVcdUsageParameterControl.setStatus('mandatory')
atmIfUniSigVcdTdpTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 6, 3, 2, 387), )
if mibBuilder.loadTexts: atmIfUniSigVcdTdpTable.setStatus('mandatory')
atmIfUniSigVcdTdpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 6, 3, 2, 387, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfIndex"), (0, "Nortel-Magellan-Passport-AtmUniMIB", "atmIfUniIndex"), (0, "Nortel-Magellan-Passport-AtmUniMIB", "atmIfUniSigIndex"), (0, "Nortel-Magellan-Passport-AtmUniMIB", "atmIfUniSigVcdIndex"), (0, "Nortel-Magellan-Passport-AtmUniMIB", "atmIfUniSigVcdTdpIndex"))
if mibBuilder.loadTexts: atmIfUniSigVcdTdpEntry.setStatus('mandatory')
atmIfUniSigVcdTdpIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 6, 3, 2, 387, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 5)))
if mibBuilder.loadTexts: atmIfUniSigVcdTdpIndex.setStatus('mandatory')
atmIfUniSigVcdTdpValue = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 6, 3, 2, 387, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: atmIfUniSigVcdTdpValue.setStatus('mandatory')
atmIfUniAddr = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 6, 4))
atmIfUniAddrRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 6, 4, 1), )
if mibBuilder.loadTexts: atmIfUniAddrRowStatusTable.setStatus('mandatory')
atmIfUniAddrRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 6, 4, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfIndex"), (0, "Nortel-Magellan-Passport-AtmUniMIB", "atmIfUniIndex"), (0, "Nortel-Magellan-Passport-AtmUniMIB", "atmIfUniAddrAddressIndex"), (0, "Nortel-Magellan-Passport-AtmUniMIB", "atmIfUniAddrAddressTypeIndex"))
if mibBuilder.loadTexts: atmIfUniAddrRowStatusEntry.setStatus('mandatory')
atmIfUniAddrRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 6, 4, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: atmIfUniAddrRowStatus.setStatus('mandatory')
atmIfUniAddrComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 6, 4, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmIfUniAddrComponentName.setStatus('mandatory')
atmIfUniAddrStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 6, 4, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmIfUniAddrStorageType.setStatus('mandatory')
atmIfUniAddrAddressIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 6, 4, 1, 1, 10), AsciiStringIndex().subtype(subtypeSpec=ValueSizeConstraint(1, 40)))
if mibBuilder.loadTexts: atmIfUniAddrAddressIndex.setStatus('mandatory')
atmIfUniAddrAddressTypeIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 6, 4, 1, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("primary", 0), ("alternate", 1), ("registered", 2), ("default", 3))))
if mibBuilder.loadTexts: atmIfUniAddrAddressTypeIndex.setStatus('mandatory')
atmIfUniAddrOperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 6, 4, 10), )
if mibBuilder.loadTexts: atmIfUniAddrOperTable.setStatus('mandatory')
atmIfUniAddrOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 6, 4, 10, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfIndex"), (0, "Nortel-Magellan-Passport-AtmUniMIB", "atmIfUniIndex"), (0, "Nortel-Magellan-Passport-AtmUniMIB", "atmIfUniAddrAddressIndex"), (0, "Nortel-Magellan-Passport-AtmUniMIB", "atmIfUniAddrAddressTypeIndex"))
if mibBuilder.loadTexts: atmIfUniAddrOperEntry.setStatus('mandatory')
atmIfUniAddrScope = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 6, 4, 10, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 104))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmIfUniAddrScope.setStatus('mandatory')
atmIfUniAddrReachability = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 6, 4, 10, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("internal", 0), ("exterior", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmIfUniAddrReachability.setStatus('mandatory')
atmIfUniAddrTermSP = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 6, 4, 2))
atmIfUniAddrTermSPRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 6, 4, 2, 1), )
if mibBuilder.loadTexts: atmIfUniAddrTermSPRowStatusTable.setStatus('mandatory')
atmIfUniAddrTermSPRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 6, 4, 2, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfIndex"), (0, "Nortel-Magellan-Passport-AtmUniMIB", "atmIfUniIndex"), (0, "Nortel-Magellan-Passport-AtmUniMIB", "atmIfUniAddrAddressIndex"), (0, "Nortel-Magellan-Passport-AtmUniMIB", "atmIfUniAddrAddressTypeIndex"), (0, "Nortel-Magellan-Passport-AtmUniMIB", "atmIfUniAddrTermSPIndex"))
if mibBuilder.loadTexts: atmIfUniAddrTermSPRowStatusEntry.setStatus('mandatory')
atmIfUniAddrTermSPRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 6, 4, 2, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: atmIfUniAddrTermSPRowStatus.setStatus('mandatory')
atmIfUniAddrTermSPComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 6, 4, 2, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmIfUniAddrTermSPComponentName.setStatus('mandatory')
atmIfUniAddrTermSPStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 6, 4, 2, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmIfUniAddrTermSPStorageType.setStatus('mandatory')
atmIfUniAddrTermSPIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 6, 4, 2, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: atmIfUniAddrTermSPIndex.setStatus('mandatory')
atmIfUniAddrPnniInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 6, 4, 3))
atmIfUniAddrPnniInfoRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 6, 4, 3, 1), )
if mibBuilder.loadTexts: atmIfUniAddrPnniInfoRowStatusTable.setStatus('mandatory')
atmIfUniAddrPnniInfoRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 6, 4, 3, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfIndex"), (0, "Nortel-Magellan-Passport-AtmUniMIB", "atmIfUniIndex"), (0, "Nortel-Magellan-Passport-AtmUniMIB", "atmIfUniAddrAddressIndex"), (0, "Nortel-Magellan-Passport-AtmUniMIB", "atmIfUniAddrAddressTypeIndex"), (0, "Nortel-Magellan-Passport-AtmUniMIB", "atmIfUniAddrPnniInfoIndex"))
if mibBuilder.loadTexts: atmIfUniAddrPnniInfoRowStatusEntry.setStatus('mandatory')
atmIfUniAddrPnniInfoRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 6, 4, 3, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: atmIfUniAddrPnniInfoRowStatus.setStatus('mandatory')
atmIfUniAddrPnniInfoComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 6, 4, 3, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmIfUniAddrPnniInfoComponentName.setStatus('mandatory')
atmIfUniAddrPnniInfoStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 6, 4, 3, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmIfUniAddrPnniInfoStorageType.setStatus('mandatory')
atmIfUniAddrPnniInfoIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 6, 4, 3, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: atmIfUniAddrPnniInfoIndex.setStatus('mandatory')
atmIfUniAddrPnniInfoProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 6, 4, 3, 10), )
if mibBuilder.loadTexts: atmIfUniAddrPnniInfoProvTable.setStatus('mandatory')
atmIfUniAddrPnniInfoProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 6, 4, 3, 10, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfIndex"), (0, "Nortel-Magellan-Passport-AtmUniMIB", "atmIfUniIndex"), (0, "Nortel-Magellan-Passport-AtmUniMIB", "atmIfUniAddrAddressIndex"), (0, "Nortel-Magellan-Passport-AtmUniMIB", "atmIfUniAddrAddressTypeIndex"), (0, "Nortel-Magellan-Passport-AtmUniMIB", "atmIfUniAddrPnniInfoIndex"))
if mibBuilder.loadTexts: atmIfUniAddrPnniInfoProvEntry.setStatus('mandatory')
atmIfUniAddrPnniInfoScope = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 6, 4, 3, 10, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 104)).clone(-1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: atmIfUniAddrPnniInfoScope.setStatus('mandatory')
atmIfUniAddrPnniInfoReachability = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 6, 4, 3, 10, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("internal", 0), ("exterior", 1))).clone('internal')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: atmIfUniAddrPnniInfoReachability.setStatus('mandatory')
atmIfVptUni = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 8))
atmIfVptUniRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 8, 1), )
if mibBuilder.loadTexts: atmIfVptUniRowStatusTable.setStatus('mandatory')
atmIfVptUniRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 8, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfIndex"), (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVptIndex"), (0, "Nortel-Magellan-Passport-AtmUniMIB", "atmIfVptUniIndex"))
if mibBuilder.loadTexts: atmIfVptUniRowStatusEntry.setStatus('mandatory')
atmIfVptUniRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 8, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: atmIfVptUniRowStatus.setStatus('mandatory')
atmIfVptUniComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 8, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmIfVptUniComponentName.setStatus('mandatory')
atmIfVptUniStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 8, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmIfVptUniStorageType.setStatus('mandatory')
atmIfVptUniIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 8, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: atmIfVptUniIndex.setStatus('mandatory')
atmIfVptUniProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 8, 10), )
if mibBuilder.loadTexts: atmIfVptUniProvTable.setStatus('mandatory')
atmIfVptUniProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 8, 10, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfIndex"), (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVptIndex"), (0, "Nortel-Magellan-Passport-AtmUniMIB", "atmIfVptUniIndex"))
if mibBuilder.loadTexts: atmIfVptUniProvEntry.setStatus('mandatory')
atmIfVptUniVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 8, 10, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("atmForum30", 0), ("atmForum31", 1))).clone('atmForum31')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: atmIfVptUniVersion.setStatus('mandatory')
atmIfVptUniSide = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 8, 10, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("network", 0), ("user", 1))).clone('network')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: atmIfVptUniSide.setStatus('mandatory')
atmIfVptUniSoftPvcRetryPeriod = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 8, 10, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(20, 999999)).clone(60)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: atmIfVptUniSoftPvcRetryPeriod.setStatus('obsolete')
atmIfVptUniSoftPvpAndPvcRetryPeriod = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 8, 10, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(20, 999999)).clone(60)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: atmIfVptUniSoftPvpAndPvcRetryPeriod.setStatus('mandatory')
atmIfVptUniSoftPvpAndPvcHoldOffTime = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 8, 10, 1, 5), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(50, 20000), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: atmIfVptUniSoftPvpAndPvcHoldOffTime.setStatus('mandatory')
atmIfVptUniAcctOptTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 8, 11), )
if mibBuilder.loadTexts: atmIfVptUniAcctOptTable.setStatus('mandatory')
atmIfVptUniAcctOptEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 8, 11, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfIndex"), (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVptIndex"), (0, "Nortel-Magellan-Passport-AtmUniMIB", "atmIfVptUniIndex"))
if mibBuilder.loadTexts: atmIfVptUniAcctOptEntry.setStatus('mandatory')
atmIfVptUniAccountCollection = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 8, 11, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 1)).setFixedLength(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: atmIfVptUniAccountCollection.setStatus('mandatory')
atmIfVptUniAccountConnectionType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 8, 11, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("origTerm", 0), ("intermediate", 1))).clone('origTerm')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: atmIfVptUniAccountConnectionType.setStatus('mandatory')
atmIfVptUniAccountClass = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 8, 11, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: atmIfVptUniAccountClass.setStatus('mandatory')
atmIfVptUniServiceExchange = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 8, 11, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: atmIfVptUniServiceExchange.setStatus('mandatory')
atmIfVptUniVProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 8, 12), )
if mibBuilder.loadTexts: atmIfVptUniVProvTable.setStatus('mandatory')
atmIfVptUniVProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 8, 12, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfIndex"), (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVptIndex"), (0, "Nortel-Magellan-Passport-AtmUniMIB", "atmIfVptUniIndex"))
if mibBuilder.loadTexts: atmIfVptUniVProvEntry.setStatus('mandatory')
atmIfVptUniVpci = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 8, 12, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: atmIfVptUniVpci.setStatus('mandatory')
atmIfVptUniSig = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 8, 2))
atmIfVptUniSigRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 8, 2, 1), )
if mibBuilder.loadTexts: atmIfVptUniSigRowStatusTable.setStatus('mandatory')
atmIfVptUniSigRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 8, 2, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfIndex"), (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVptIndex"), (0, "Nortel-Magellan-Passport-AtmUniMIB", "atmIfVptUniIndex"), (0, "Nortel-Magellan-Passport-AtmUniMIB", "atmIfVptUniSigIndex"))
if mibBuilder.loadTexts: atmIfVptUniSigRowStatusEntry.setStatus('mandatory')
atmIfVptUniSigRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 8, 2, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmIfVptUniSigRowStatus.setStatus('mandatory')
atmIfVptUniSigComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 8, 2, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmIfVptUniSigComponentName.setStatus('mandatory')
atmIfVptUniSigStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 8, 2, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmIfVptUniSigStorageType.setStatus('mandatory')
atmIfVptUniSigIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 8, 2, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: atmIfVptUniSigIndex.setStatus('mandatory')
atmIfVptUniSigProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 8, 2, 10), )
if mibBuilder.loadTexts: atmIfVptUniSigProvTable.setStatus('mandatory')
atmIfVptUniSigProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 8, 2, 10, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfIndex"), (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVptIndex"), (0, "Nortel-Magellan-Passport-AtmUniMIB", "atmIfVptUniIndex"), (0, "Nortel-Magellan-Passport-AtmUniMIB", "atmIfVptUniSigIndex"))
if mibBuilder.loadTexts: atmIfVptUniSigProvEntry.setStatus('mandatory')
atmIfVptUniSigVci = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 8, 2, 10, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)).clone(5)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: atmIfVptUniSigVci.setStatus('mandatory')
atmIfVptUniSigAddressConversion = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 8, 2, 10, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("none", 0), ("nativeE164", 1), ("nsap", 2))).clone('none')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: atmIfVptUniSigAddressConversion.setStatus('mandatory')
atmIfVptUniSigStateTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 8, 2, 11), )
if mibBuilder.loadTexts: atmIfVptUniSigStateTable.setStatus('mandatory')
atmIfVptUniSigStateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 8, 2, 11, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfIndex"), (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVptIndex"), (0, "Nortel-Magellan-Passport-AtmUniMIB", "atmIfVptUniIndex"), (0, "Nortel-Magellan-Passport-AtmUniMIB", "atmIfVptUniSigIndex"))
if mibBuilder.loadTexts: atmIfVptUniSigStateEntry.setStatus('mandatory')
atmIfVptUniSigAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 8, 2, 11, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("locked", 0), ("unlocked", 1), ("shuttingDown", 2))).clone('unlocked')).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmIfVptUniSigAdminState.setStatus('mandatory')
atmIfVptUniSigOperationalState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 8, 2, 11, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1))).clone('disabled')).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmIfVptUniSigOperationalState.setStatus('mandatory')
atmIfVptUniSigUsageState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 8, 2, 11, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("idle", 0), ("active", 1), ("busy", 2))).clone('idle')).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmIfVptUniSigUsageState.setStatus('mandatory')
atmIfVptUniSigOperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 8, 2, 12), )
if mibBuilder.loadTexts: atmIfVptUniSigOperTable.setStatus('mandatory')
atmIfVptUniSigOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 8, 2, 12, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfIndex"), (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVptIndex"), (0, "Nortel-Magellan-Passport-AtmUniMIB", "atmIfVptUniIndex"), (0, "Nortel-Magellan-Passport-AtmUniMIB", "atmIfVptUniSigIndex"))
if mibBuilder.loadTexts: atmIfVptUniSigOperEntry.setStatus('mandatory')
atmIfVptUniSigLastTxCauseCode = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 8, 2, 12, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmIfVptUniSigLastTxCauseCode.setStatus('mandatory')
atmIfVptUniSigLastTxDiagCode = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 8, 2, 12, 1, 2), Hex().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmIfVptUniSigLastTxDiagCode.setStatus('mandatory')
atmIfVptUniSigLastRxCauseCode = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 8, 2, 12, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmIfVptUniSigLastRxCauseCode.setStatus('mandatory')
atmIfVptUniSigLastRxDiagCode = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 8, 2, 12, 1, 4), Hex().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmIfVptUniSigLastRxDiagCode.setStatus('mandatory')
atmIfVptUniSigStatsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 8, 2, 13), )
if mibBuilder.loadTexts: atmIfVptUniSigStatsTable.setStatus('mandatory')
atmIfVptUniSigStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 8, 2, 13, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfIndex"), (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVptIndex"), (0, "Nortel-Magellan-Passport-AtmUniMIB", "atmIfVptUniIndex"), (0, "Nortel-Magellan-Passport-AtmUniMIB", "atmIfVptUniSigIndex"))
if mibBuilder.loadTexts: atmIfVptUniSigStatsEntry.setStatus('mandatory')
atmIfVptUniSigCurrentConnections = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 8, 2, 13, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmIfVptUniSigCurrentConnections.setStatus('obsolete')
atmIfVptUniSigPeakConnections = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 8, 2, 13, 1, 2), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmIfVptUniSigPeakConnections.setStatus('mandatory')
atmIfVptUniSigSuccessfulConnections = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 8, 2, 13, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmIfVptUniSigSuccessfulConnections.setStatus('mandatory')
atmIfVptUniSigFailedConnections = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 8, 2, 13, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmIfVptUniSigFailedConnections.setStatus('mandatory')
atmIfVptUniSigTxPdus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 8, 2, 13, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmIfVptUniSigTxPdus.setStatus('mandatory')
atmIfVptUniSigRxPdus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 8, 2, 13, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmIfVptUniSigRxPdus.setStatus('mandatory')
atmIfVptUniSigCurrentPmpConnections = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 8, 2, 13, 1, 7), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmIfVptUniSigCurrentPmpConnections.setStatus('mandatory')
atmIfVptUniSigPeakPmpConnections = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 8, 2, 13, 1, 8), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmIfVptUniSigPeakPmpConnections.setStatus('mandatory')
atmIfVptUniSigSuccessfulPmpConnections = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 8, 2, 13, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmIfVptUniSigSuccessfulPmpConnections.setStatus('mandatory')
atmIfVptUniSigFailedPmpConnections = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 8, 2, 13, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmIfVptUniSigFailedPmpConnections.setStatus('mandatory')
atmIfVptUniSigNewCurrentConnections = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 8, 2, 13, 1, 11), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmIfVptUniSigNewCurrentConnections.setStatus('mandatory')
atmIfVptUniSigVcd = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 8, 2, 2))
atmIfVptUniSigVcdRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 8, 2, 2, 1), )
if mibBuilder.loadTexts: atmIfVptUniSigVcdRowStatusTable.setStatus('mandatory')
atmIfVptUniSigVcdRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 8, 2, 2, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfIndex"), (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVptIndex"), (0, "Nortel-Magellan-Passport-AtmUniMIB", "atmIfVptUniIndex"), (0, "Nortel-Magellan-Passport-AtmUniMIB", "atmIfVptUniSigIndex"), (0, "Nortel-Magellan-Passport-AtmUniMIB", "atmIfVptUniSigVcdIndex"))
if mibBuilder.loadTexts: atmIfVptUniSigVcdRowStatusEntry.setStatus('mandatory')
atmIfVptUniSigVcdRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 8, 2, 2, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: atmIfVptUniSigVcdRowStatus.setStatus('mandatory')
atmIfVptUniSigVcdComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 8, 2, 2, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmIfVptUniSigVcdComponentName.setStatus('mandatory')
atmIfVptUniSigVcdStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 8, 2, 2, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmIfVptUniSigVcdStorageType.setStatus('mandatory')
atmIfVptUniSigVcdIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 8, 2, 2, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: atmIfVptUniSigVcdIndex.setStatus('mandatory')
atmIfVptUniSigVcdProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 8, 2, 2, 10), )
if mibBuilder.loadTexts: atmIfVptUniSigVcdProvTable.setStatus('mandatory')
atmIfVptUniSigVcdProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 8, 2, 2, 10, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfIndex"), (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVptIndex"), (0, "Nortel-Magellan-Passport-AtmUniMIB", "atmIfVptUniIndex"), (0, "Nortel-Magellan-Passport-AtmUniMIB", "atmIfVptUniSigIndex"), (0, "Nortel-Magellan-Passport-AtmUniMIB", "atmIfVptUniSigVcdIndex"))
if mibBuilder.loadTexts: atmIfVptUniSigVcdProvEntry.setStatus('mandatory')
atmIfVptUniSigVcdTrafficDescType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 8, 2, 2, 10, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(3, 6, 7, 8))).clone(namedValues=NamedValues(("n3", 3), ("n6", 6), ("n7", 7), ("n8", 8))).clone('n6')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: atmIfVptUniSigVcdTrafficDescType.setStatus('mandatory')
atmIfVptUniSigVcdAtmServiceCategory = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 8, 2, 2, 10, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("unspecifiedBitRate", 0), ("constantBitRate", 1), ("rtVariableBitRate", 2), ("nrtVariableBitRate", 3))).clone('rtVariableBitRate')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: atmIfVptUniSigVcdAtmServiceCategory.setStatus('mandatory')
atmIfVptUniSigVcdQosClass = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 8, 2, 2, 10, 1, 21), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("n0", 0), ("n1", 1), ("n2", 2), ("n3", 3), ("n4", 4))).clone('n2')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: atmIfVptUniSigVcdQosClass.setStatus('mandatory')
atmIfVptUniSigVcdTrafficShaping = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 8, 2, 2, 10, 1, 50), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disabled", 1), ("sameAsCa", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: atmIfVptUniSigVcdTrafficShaping.setStatus('mandatory')
atmIfVptUniSigVcdUnshapedTransmitQueueing = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 8, 2, 2, 10, 1, 60), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 3))).clone(namedValues=NamedValues(("common", 1), ("sameAsCa", 3))).clone('sameAsCa')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: atmIfVptUniSigVcdUnshapedTransmitQueueing.setStatus('mandatory')
atmIfVptUniSigVcdUsageParameterControl = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 8, 2, 2, 10, 1, 70), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disabled", 1), ("sameAsCa", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: atmIfVptUniSigVcdUsageParameterControl.setStatus('mandatory')
atmIfVptUniSigVcdTdpTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 8, 2, 2, 387), )
if mibBuilder.loadTexts: atmIfVptUniSigVcdTdpTable.setStatus('mandatory')
atmIfVptUniSigVcdTdpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 8, 2, 2, 387, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfIndex"), (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVptIndex"), (0, "Nortel-Magellan-Passport-AtmUniMIB", "atmIfVptUniIndex"), (0, "Nortel-Magellan-Passport-AtmUniMIB", "atmIfVptUniSigIndex"), (0, "Nortel-Magellan-Passport-AtmUniMIB", "atmIfVptUniSigVcdIndex"), (0, "Nortel-Magellan-Passport-AtmUniMIB", "atmIfVptUniSigVcdTdpIndex"))
if mibBuilder.loadTexts: atmIfVptUniSigVcdTdpEntry.setStatus('mandatory')
atmIfVptUniSigVcdTdpIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 8, 2, 2, 387, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 5)))
if mibBuilder.loadTexts: atmIfVptUniSigVcdTdpIndex.setStatus('mandatory')
atmIfVptUniSigVcdTdpValue = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 8, 2, 2, 387, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: atmIfVptUniSigVcdTdpValue.setStatus('mandatory')
atmIfVptUniAddr = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 8, 3))
atmIfVptUniAddrRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 8, 3, 1), )
if mibBuilder.loadTexts: atmIfVptUniAddrRowStatusTable.setStatus('mandatory')
atmIfVptUniAddrRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 8, 3, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfIndex"), (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVptIndex"), (0, "Nortel-Magellan-Passport-AtmUniMIB", "atmIfVptUniIndex"), (0, "Nortel-Magellan-Passport-AtmUniMIB", "atmIfVptUniAddrAddressIndex"), (0, "Nortel-Magellan-Passport-AtmUniMIB", "atmIfVptUniAddrAddressTypeIndex"))
if mibBuilder.loadTexts: atmIfVptUniAddrRowStatusEntry.setStatus('mandatory')
atmIfVptUniAddrRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 8, 3, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: atmIfVptUniAddrRowStatus.setStatus('mandatory')
atmIfVptUniAddrComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 8, 3, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmIfVptUniAddrComponentName.setStatus('mandatory')
atmIfVptUniAddrStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 8, 3, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmIfVptUniAddrStorageType.setStatus('mandatory')
atmIfVptUniAddrAddressIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 8, 3, 1, 1, 10), AsciiStringIndex().subtype(subtypeSpec=ValueSizeConstraint(1, 40)))
if mibBuilder.loadTexts: atmIfVptUniAddrAddressIndex.setStatus('mandatory')
atmIfVptUniAddrAddressTypeIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 8, 3, 1, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("primary", 0), ("alternate", 1), ("registered", 2), ("default", 3))))
if mibBuilder.loadTexts: atmIfVptUniAddrAddressTypeIndex.setStatus('mandatory')
atmIfVptUniAddrOperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 8, 3, 10), )
if mibBuilder.loadTexts: atmIfVptUniAddrOperTable.setStatus('mandatory')
atmIfVptUniAddrOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 8, 3, 10, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfIndex"), (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVptIndex"), (0, "Nortel-Magellan-Passport-AtmUniMIB", "atmIfVptUniIndex"), (0, "Nortel-Magellan-Passport-AtmUniMIB", "atmIfVptUniAddrAddressIndex"), (0, "Nortel-Magellan-Passport-AtmUniMIB", "atmIfVptUniAddrAddressTypeIndex"))
if mibBuilder.loadTexts: atmIfVptUniAddrOperEntry.setStatus('mandatory')
atmIfVptUniAddrScope = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 8, 3, 10, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 104))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmIfVptUniAddrScope.setStatus('mandatory')
atmIfVptUniAddrReachability = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 8, 3, 10, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("internal", 0), ("exterior", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmIfVptUniAddrReachability.setStatus('mandatory')
atmIfVptUniAddrTermSP = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 8, 3, 2))
atmIfVptUniAddrTermSPRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 8, 3, 2, 1), )
if mibBuilder.loadTexts: atmIfVptUniAddrTermSPRowStatusTable.setStatus('mandatory')
atmIfVptUniAddrTermSPRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 8, 3, 2, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfIndex"), (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVptIndex"), (0, "Nortel-Magellan-Passport-AtmUniMIB", "atmIfVptUniIndex"), (0, "Nortel-Magellan-Passport-AtmUniMIB", "atmIfVptUniAddrAddressIndex"), (0, "Nortel-Magellan-Passport-AtmUniMIB", "atmIfVptUniAddrAddressTypeIndex"), (0, "Nortel-Magellan-Passport-AtmUniMIB", "atmIfVptUniAddrTermSPIndex"))
if mibBuilder.loadTexts: atmIfVptUniAddrTermSPRowStatusEntry.setStatus('mandatory')
atmIfVptUniAddrTermSPRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 8, 3, 2, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: atmIfVptUniAddrTermSPRowStatus.setStatus('mandatory')
atmIfVptUniAddrTermSPComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 8, 3, 2, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmIfVptUniAddrTermSPComponentName.setStatus('mandatory')
atmIfVptUniAddrTermSPStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 8, 3, 2, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmIfVptUniAddrTermSPStorageType.setStatus('mandatory')
atmIfVptUniAddrTermSPIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 8, 3, 2, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: atmIfVptUniAddrTermSPIndex.setStatus('mandatory')
atmIfVptUniAddrPnniInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 8, 3, 3))
atmIfVptUniAddrPnniInfoRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 8, 3, 3, 1), )
if mibBuilder.loadTexts: atmIfVptUniAddrPnniInfoRowStatusTable.setStatus('mandatory')
atmIfVptUniAddrPnniInfoRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 8, 3, 3, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfIndex"), (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVptIndex"), (0, "Nortel-Magellan-Passport-AtmUniMIB", "atmIfVptUniIndex"), (0, "Nortel-Magellan-Passport-AtmUniMIB", "atmIfVptUniAddrAddressIndex"), (0, "Nortel-Magellan-Passport-AtmUniMIB", "atmIfVptUniAddrAddressTypeIndex"), (0, "Nortel-Magellan-Passport-AtmUniMIB", "atmIfVptUniAddrPnniInfoIndex"))
if mibBuilder.loadTexts: atmIfVptUniAddrPnniInfoRowStatusEntry.setStatus('mandatory')
atmIfVptUniAddrPnniInfoRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 8, 3, 3, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: atmIfVptUniAddrPnniInfoRowStatus.setStatus('mandatory')
atmIfVptUniAddrPnniInfoComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 8, 3, 3, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmIfVptUniAddrPnniInfoComponentName.setStatus('mandatory')
atmIfVptUniAddrPnniInfoStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 8, 3, 3, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmIfVptUniAddrPnniInfoStorageType.setStatus('mandatory')
atmIfVptUniAddrPnniInfoIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 8, 3, 3, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: atmIfVptUniAddrPnniInfoIndex.setStatus('mandatory')
atmIfVptUniAddrPnniInfoProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 8, 3, 3, 10), )
if mibBuilder.loadTexts: atmIfVptUniAddrPnniInfoProvTable.setStatus('mandatory')
atmIfVptUniAddrPnniInfoProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 8, 3, 3, 10, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfIndex"), (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVptIndex"), (0, "Nortel-Magellan-Passport-AtmUniMIB", "atmIfVptUniIndex"), (0, "Nortel-Magellan-Passport-AtmUniMIB", "atmIfVptUniAddrAddressIndex"), (0, "Nortel-Magellan-Passport-AtmUniMIB", "atmIfVptUniAddrAddressTypeIndex"), (0, "Nortel-Magellan-Passport-AtmUniMIB", "atmIfVptUniAddrPnniInfoIndex"))
if mibBuilder.loadTexts: atmIfVptUniAddrPnniInfoProvEntry.setStatus('mandatory')
atmIfVptUniAddrPnniInfoScope = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 8, 3, 3, 10, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 104)).clone(-1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: atmIfVptUniAddrPnniInfoScope.setStatus('mandatory')
atmIfVptUniAddrPnniInfoReachability = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 8, 3, 3, 10, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("internal", 0), ("exterior", 1))).clone('internal')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: atmIfVptUniAddrPnniInfoReachability.setStatus('mandatory')
atmUniGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 69, 1))
atmUniGroupBE = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 69, 1, 5))
atmUniGroupBE00 = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 69, 1, 5, 1))
atmUniGroupBE00A = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 69, 1, 5, 1, 2))
atmUniCapabilities = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 69, 3))
atmUniCapabilitiesBE = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 69, 3, 5))
atmUniCapabilitiesBE00 = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 69, 3, 5, 1))
atmUniCapabilitiesBE00A = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 69, 3, 5, 1, 2))
mibBuilder.exportSymbols("Nortel-Magellan-Passport-AtmUniMIB", atmIfVptUniSigVcdRowStatus=atmIfVptUniSigVcdRowStatus, atmIfVptUniAddrPnniInfoScope=atmIfVptUniAddrPnniInfoScope, atmIfUniSigLastTxCauseCode=atmIfUniSigLastTxCauseCode, atmIfUniSigIndex=atmIfUniSigIndex, atmIfUniSigCurrentPmpConnections=atmIfUniSigCurrentPmpConnections, atmIfUniSigStorageType=atmIfUniSigStorageType, atmIfUniVersion=atmIfUniVersion, atmIfVptUniSigVcdUnshapedTransmitQueueing=atmIfVptUniSigVcdUnshapedTransmitQueueing, atmIfVptUniSigVcdAtmServiceCategory=atmIfVptUniSigVcdAtmServiceCategory, atmIfUniIlmiEsiToRegisterTable=atmIfUniIlmiEsiToRegisterTable, atmIfVptUniSigComponentName=atmIfVptUniSigComponentName, atmIfVptUniSigPeakConnections=atmIfVptUniSigPeakConnections, atmIfUniSigSuccessfulPmpConnections=atmIfUniSigSuccessfulPmpConnections, atmIfUniSigVcdTdpEntry=atmIfUniSigVcdTdpEntry, atmIfVptUniRowStatusEntry=atmIfVptUniRowStatusEntry, atmIfUniSigProvTable=atmIfUniSigProvTable, atmIfVptUniSigVcdTdpValue=atmIfVptUniSigVcdTdpValue, atmIfUniAddrPnniInfo=atmIfUniAddrPnniInfo, atmIfUniAddrComponentName=atmIfUniAddrComponentName, atmIfUniIlmiEsiToRegisterEntry=atmIfUniIlmiEsiToRegisterEntry, atmIfVptUniAddrRowStatusEntry=atmIfVptUniAddrRowStatusEntry, atmIfUniIlmiOperationalState=atmIfUniIlmiOperationalState, atmIfVptUniAddr=atmIfVptUniAddr, atmIfUniSigTxPdus=atmIfUniSigTxPdus, atmIfUniIlmiStateTable=atmIfUniIlmiStateTable, atmIfVptUniSigLastTxDiagCode=atmIfVptUniSigLastTxDiagCode, atmIfVptUniSigVcdProvEntry=atmIfVptUniSigVcdProvEntry, atmIfVptUniVpci=atmIfVptUniVpci, atmIfVptUniAddrPnniInfoStorageType=atmIfVptUniAddrPnniInfoStorageType, atmIfUniAddrStorageType=atmIfUniAddrStorageType, atmIfUniIlmiProvTable=atmIfUniIlmiProvTable, atmIfVptUniSigVcdTrafficDescType=atmIfVptUniSigVcdTrafficDescType, atmIfVptUniSigVcdUsageParameterControl=atmIfVptUniSigVcdUsageParameterControl, atmIfUni=atmIfUni, atmIfUniSigVcdProvEntry=atmIfUniSigVcdProvEntry, atmIfVptUniAddrTermSP=atmIfVptUniAddrTermSP, atmIfUniIlmiStateEntry=atmIfUniIlmiStateEntry, atmIfUniSigRowStatusEntry=atmIfUniSigRowStatusEntry, atmIfVptUniAddrPnniInfoRowStatusTable=atmIfVptUniAddrPnniInfoRowStatusTable, atmIfUniAddrAddressTypeIndex=atmIfUniAddrAddressTypeIndex, atmIfUniSoftPvpAndPvcRetryPeriod=atmIfUniSoftPvpAndPvcRetryPeriod, atmIfVptUniSigVcdStorageType=atmIfVptUniSigVcdStorageType, atmIfVptUniAddrReachability=atmIfVptUniAddrReachability, atmIfUniIlmiRowStatusTable=atmIfUniIlmiRowStatusTable, atmIfUniMacAddress=atmIfUniMacAddress, atmIfUniIlmiRxBadPdusDiscarded=atmIfUniIlmiRxBadPdusDiscarded, atmIfUniIlmiIndex=atmIfUniIlmiIndex, atmIfUniAddrOperTable=atmIfUniAddrOperTable, atmIfUniSigStatsTable=atmIfUniSigStatsTable, atmUniCapabilitiesBE=atmUniCapabilitiesBE, atmIfUniAddrPnniInfoRowStatusTable=atmIfUniAddrPnniInfoRowStatusTable, atmIfVptUniSigAdminState=atmIfVptUniSigAdminState, atmIfVptUni=atmIfVptUni, atmIfVptUniSoftPvpAndPvcHoldOffTime=atmIfVptUniSoftPvpAndPvcHoldOffTime, atmIfVptUniSigVcdQosClass=atmIfVptUniSigVcdQosClass, atmUniGroup=atmUniGroup, atmUniGroupBE00A=atmUniGroupBE00A, atmIfUniAddrTermSPRowStatus=atmIfUniAddrTermSPRowStatus, atmIfVptUniSigLastRxCauseCode=atmIfVptUniSigLastRxCauseCode, atmIfUniRowStatusEntry=atmIfUniRowStatusEntry, atmIfVptUniAddrTermSPRowStatus=atmIfVptUniAddrTermSPRowStatus, atmIfUniIlmi=atmIfUniIlmi, atmIfVptUniAccountCollection=atmIfVptUniAccountCollection, atmIfUniSigFailedConnections=atmIfUniSigFailedConnections, atmIfVptUniSigOperTable=atmIfVptUniSigOperTable, atmIfVptUniAddrPnniInfoReachability=atmIfVptUniAddrPnniInfoReachability, atmIfUniSigAddressConversion=atmIfUniSigAddressConversion, atmIfUniOperTable=atmIfUniOperTable, atmIfVptUniSigCurrentConnections=atmIfVptUniSigCurrentConnections, atmIfVptUniSigVcdRowStatusTable=atmIfVptUniSigVcdRowStatusTable, atmIfVptUniAddrPnniInfoProvTable=atmIfVptUniAddrPnniInfoProvTable, atmIfUniSigSuccessfulConnections=atmIfUniSigSuccessfulConnections, atmIfVptUniSigCurrentPmpConnections=atmIfVptUniSigCurrentPmpConnections, atmIfUniSigVcdIndex=atmIfUniSigVcdIndex, atmIfUniAddrTermSP=atmIfUniAddrTermSP, atmIfVptUniVProvTable=atmIfVptUniVProvTable, atmIfVptUniVersion=atmIfVptUniVersion, atmIfVptUniSigVcdTrafficShaping=atmIfVptUniSigVcdTrafficShaping, atmIfUniSigOperEntry=atmIfUniSigOperEntry, atmIfUniProvTable=atmIfUniProvTable, atmIfVptUniSigVcdTdpEntry=atmIfVptUniSigVcdTdpEntry, atmIfVptUniVProvEntry=atmIfVptUniVProvEntry, atmUniCapabilities=atmUniCapabilities, atmIfVptUniSoftPvcRetryPeriod=atmIfVptUniSoftPvcRetryPeriod, atmIfUniSigRowStatus=atmIfUniSigRowStatus, atmIfUniOperEntry=atmIfUniOperEntry, atmIfVptUniIndex=atmIfVptUniIndex, atmIfUniIlmiStatsTable=atmIfUniIlmiStatsTable, atmIfVptUniAddrTermSPStorageType=atmIfVptUniAddrTermSPStorageType, atmIfVptUniSigStatsTable=atmIfVptUniSigStatsTable, atmIfVptUniAddrRowStatusTable=atmIfVptUniAddrRowStatusTable, atmIfVptUniAddrTermSPRowStatusEntry=atmIfVptUniAddrTermSPRowStatusEntry, atmIfUniSigCurrentConnections=atmIfUniSigCurrentConnections, atmIfUniSigVcdComponentName=atmIfUniSigVcdComponentName, atmIfUniIlmiStatsEntry=atmIfUniIlmiStatsEntry, atmIfUniAddrPnniInfoProvEntry=atmIfUniAddrPnniInfoProvEntry, atmIfVptUniSigRxPdus=atmIfVptUniSigRxPdus, atmIfVptUniSigSuccessfulConnections=atmIfVptUniSigSuccessfulConnections, atmIfVptUniSigPeakPmpConnections=atmIfVptUniSigPeakPmpConnections, atmIfUniSigFailedPmpConnections=atmIfUniSigFailedPmpConnections, atmIfUniSigLastTxDiagCode=atmIfUniSigLastTxDiagCode, atmIfVptUniAddrStorageType=atmIfVptUniAddrStorageType, atmIfUniSide=atmIfUniSide, atmIfUniIlmiEsiToRegisterValue=atmIfUniIlmiEsiToRegisterValue, atmIfUniSigAdminState=atmIfUniSigAdminState, atmIfVptUniSigSuccessfulPmpConnections=atmIfVptUniSigSuccessfulPmpConnections, atmIfUniIlmiPrefixToRegisterValue=atmIfUniIlmiPrefixToRegisterValue, atmIfUniSigVcd=atmIfUniSigVcd, atmIfUniAddrTermSPIndex=atmIfUniAddrTermSPIndex, atmIfVptUniAddrOperEntry=atmIfVptUniAddrOperEntry, atmIfUniIlmiProvEntry=atmIfUniIlmiProvEntry, atmIfUniAddrScope=atmIfUniAddrScope, atmIfUniAddrRowStatusTable=atmIfUniAddrRowStatusTable, atmIfUniAddrPnniInfoScope=atmIfUniAddrPnniInfoScope, atmIfVptUniProvTable=atmIfVptUniProvTable, atmIfUniSigVcdAtmServiceCategory=atmIfUniSigVcdAtmServiceCategory, atmIfVptUniSigStateTable=atmIfVptUniSigStateTable, atmIfUniIlmiEsiToRegisterRowStatus=atmIfUniIlmiEsiToRegisterRowStatus, atmIfVptUniSigFailedPmpConnections=atmIfVptUniSigFailedPmpConnections, atmIfVptUniSigTxPdus=atmIfVptUniSigTxPdus, atmIfUniSigProvEntry=atmIfUniSigProvEntry, atmIfUniAddrTermSPComponentName=atmIfUniAddrTermSPComponentName, atmIfUniSigComponentName=atmIfUniSigComponentName, atmIfUniSigRowStatusTable=atmIfUniSigRowStatusTable, atmIfVptUniProvEntry=atmIfVptUniProvEntry, atmIfUniAddrPnniInfoStorageType=atmIfUniAddrPnniInfoStorageType, atmIfUniIlmiTxPdus=atmIfUniIlmiTxPdus, atmIfUniSigVcdRowStatusTable=atmIfUniSigVcdRowStatusTable, atmIfUniStorageType=atmIfUniStorageType, atmIfVptUniStorageType=atmIfVptUniStorageType, atmIfVptUniSigVcdComponentName=atmIfVptUniSigVcdComponentName, atmIfVptUniSigVci=atmIfVptUniSigVci, atmIfUniSigRxPdus=atmIfUniSigRxPdus, atmIfVptUniAddrOperTable=atmIfVptUniAddrOperTable, atmIfUniSoftPvcRetryPeriod=atmIfUniSoftPvcRetryPeriod, atmIfUniAddrRowStatus=atmIfUniAddrRowStatus, atmIfVptUniSigVcdTdpTable=atmIfVptUniSigVcdTdpTable, atmIfUniIlmiRowStatus=atmIfUniIlmiRowStatus, atmIfVptUniSide=atmIfVptUniSide, atmIfVptUniSigProvEntry=atmIfVptUniSigProvEntry, atmIfUniComponentName=atmIfUniComponentName, atmIfUniSigVcdRowStatusEntry=atmIfUniSigVcdRowStatusEntry, atmIfUniIlmiAdminState=atmIfUniIlmiAdminState, atmIfUniSig=atmIfUniSig, atmIfUniSigLastRxCauseCode=atmIfUniSigLastRxCauseCode, atmIfUniSigLastRxDiagCode=atmIfUniSigLastRxDiagCode, atmIfUniAddrPnniInfoReachability=atmIfUniAddrPnniInfoReachability, atmIfUniSigUsageState=atmIfUniSigUsageState, atmIfUniIndex=atmIfUniIndex, atmIfUniSigOperTable=atmIfUniSigOperTable, atmIfVptUniAcctOptEntry=atmIfVptUniAcctOptEntry, atmIfVptUniSigAddressConversion=atmIfVptUniSigAddressConversion, atmIfUniAcctOptEntry=atmIfUniAcctOptEntry, atmIfUniIlmiComponentName=atmIfUniIlmiComponentName, atmIfUniIlmiVci=atmIfUniIlmiVci, atmIfVptUniRowStatus=atmIfVptUniRowStatus, atmIfVptUniSigOperEntry=atmIfVptUniSigOperEntry, atmIfVptUniAddrPnniInfoProvEntry=atmIfVptUniAddrPnniInfoProvEntry, atmIfUniIlmiOperatingMode=atmIfUniIlmiOperatingMode, atmIfVptUniAccountClass=atmIfVptUniAccountClass, atmIfVptUniSigOperationalState=atmIfVptUniSigOperationalState, atmIfUniSigVci=atmIfUniSigVci, atmIfUniAccountConnectionType=atmIfUniAccountConnectionType, atmUniCapabilitiesBE00=atmUniCapabilitiesBE00, atmIfUniSigStateTable=atmIfUniSigStateTable, atmIfUniServiceExchange=atmIfUniServiceExchange, atmIfVptUniSigVcdProvTable=atmIfVptUniSigVcdProvTable, atmIfVptUniAddrComponentName=atmIfVptUniAddrComponentName, atmIfVptUniSigStorageType=atmIfVptUniSigStorageType, atmIfVptUniSigVcdTdpIndex=atmIfVptUniSigVcdTdpIndex, atmIfVptUniAddrTermSPComponentName=atmIfVptUniAddrTermSPComponentName, atmIfUniRowStatus=atmIfUniRowStatus, atmIfVptUniAccountConnectionType=atmIfVptUniAccountConnectionType, atmIfVptUniSigUsageState=atmIfVptUniSigUsageState, atmIfUniRowStatusTable=atmIfUniRowStatusTable, atmIfVptUniAddrTermSPIndex=atmIfVptUniAddrTermSPIndex, atmIfUniSigPeakConnections=atmIfUniSigPeakConnections, atmUniGroupBE00=atmUniGroupBE00, atmIfUniAddrPnniInfoComponentName=atmIfUniAddrPnniInfoComponentName, atmIfVptUniAddrPnniInfoRowStatus=atmIfVptUniAddrPnniInfoRowStatus, atmIfVptUniAddrRowStatus=atmIfVptUniAddrRowStatus, atmIfUniAddrOperEntry=atmIfUniAddrOperEntry, atmIfUniIlmiRxPdus=atmIfUniIlmiRxPdus, atmIfVptUniSigRowStatusEntry=atmIfVptUniSigRowStatusEntry, atmIfVptUniSigIndex=atmIfVptUniSigIndex, atmIfUniIlmiRowStatusEntry=atmIfUniIlmiRowStatusEntry, atmIfUniIlmiPrefixToRegisterEntry=atmIfUniIlmiPrefixToRegisterEntry, atmIfUniProvEntry=atmIfUniProvEntry, atmIfUniSigPeakPmpConnections=atmIfUniSigPeakPmpConnections, atmIfVptUniAddrAddressTypeIndex=atmIfVptUniAddrAddressTypeIndex, atmIfUniSigOperationalState=atmIfUniSigOperationalState, atmIfUniSigVcdQosClass=atmIfUniSigVcdQosClass, atmIfUniSoftPvpAndPvcHoldOffTime=atmIfUniSoftPvpAndPvcHoldOffTime, atmIfVptUniComponentName=atmIfVptUniComponentName, atmIfUniSigVcdTdpTable=atmIfUniSigVcdTdpTable, atmIfUniIlmiStorageType=atmIfUniIlmiStorageType, atmIfUniSigVcdTdpValue=atmIfUniSigVcdTdpValue, atmIfUniSigStatsEntry=atmIfUniSigStatsEntry, atmIfVptUniRowStatusTable=atmIfVptUniRowStatusTable, atmIfVptUniSigNewCurrentConnections=atmIfVptUniSigNewCurrentConnections, atmIfUniSigVcdStorageType=atmIfUniSigVcdStorageType, atmUniGroupBE=atmUniGroupBE, atmIfVptUniSigVcdIndex=atmIfVptUniSigVcdIndex, atmIfVptUniAddrPnniInfoComponentName=atmIfVptUniAddrPnniInfoComponentName, atmIfUniAddrReachability=atmIfUniAddrReachability, atmIfUniSigVcdUnshapedTransmitQueueing=atmIfUniSigVcdUnshapedTransmitQueueing, atmIfUniSigVcdRowStatus=atmIfUniSigVcdRowStatus, atmIfUniAddrPnniInfoRowStatus=atmIfUniAddrPnniInfoRowStatus, atmIfUniAddrPnniInfoIndex=atmIfUniAddrPnniInfoIndex, atmIfVptUniSigRowStatusTable=atmIfVptUniSigRowStatusTable, atmIfVptUniServiceExchange=atmIfVptUniServiceExchange, atmIfUniAcctOptTable=atmIfUniAcctOptTable, atmIfVptUniSigLastTxCauseCode=atmIfVptUniSigLastTxCauseCode, atmIfVptUniAddrAddressIndex=atmIfVptUniAddrAddressIndex, atmIfUniAddrAddressIndex=atmIfUniAddrAddressIndex, atmIfUniSigVcdTrafficShaping=atmIfUniSigVcdTrafficShaping, atmIfVptUniAddrPnniInfo=atmIfVptUniAddrPnniInfo, atmIfVptUniAddrPnniInfoRowStatusEntry=atmIfVptUniAddrPnniInfoRowStatusEntry, atmIfVptUniAddrPnniInfoIndex=atmIfVptUniAddrPnniInfoIndex, atmIfVptUniAcctOptTable=atmIfVptUniAcctOptTable, atmIfUniSigVcdTrafficDescType=atmIfUniSigVcdTrafficDescType, atmUniMIB=atmUniMIB, atmIfUniIlmiPrefixToRegisterRowStatus=atmIfUniIlmiPrefixToRegisterRowStatus, atmIfUniSigVcdUsageParameterControl=atmIfUniSigVcdUsageParameterControl, atmIfUniSigStateEntry=atmIfUniSigStateEntry, atmIfVptUniAddrScope=atmIfVptUniAddrScope, atmIfUniAddrTermSPRowStatusTable=atmIfUniAddrTermSPRowStatusTable, atmIfVptUniSoftPvpAndPvcRetryPeriod=atmIfVptUniSoftPvpAndPvcRetryPeriod, atmIfVptUniSigVcdRowStatusEntry=atmIfVptUniSigVcdRowStatusEntry, atmIfUniAddr=atmIfUniAddr, atmIfUniAddrTermSPStorageType=atmIfUniAddrTermSPStorageType, atmIfVptUniSigVcd=atmIfVptUniSigVcd, atmIfUniAddrPnniInfoRowStatusEntry=atmIfUniAddrPnniInfoRowStatusEntry, atmIfVptUniAddrTermSPRowStatusTable=atmIfVptUniAddrTermSPRowStatusTable, atmIfUniSigVcdTdpIndex=atmIfUniSigVcdTdpIndex, atmIfUniIlmiUsageState=atmIfUniIlmiUsageState, atmIfUniAddrRowStatusEntry=atmIfUniAddrRowStatusEntry, atmIfUniIlmiPrefixToRegisterTable=atmIfUniIlmiPrefixToRegisterTable, atmIfVptUniSigLastRxDiagCode=atmIfVptUniSigLastRxDiagCode, atmIfVptUniSigStateEntry=atmIfVptUniSigStateEntry, atmIfVptUniSigStatsEntry=atmIfVptUniSigStatsEntry, atmIfUniAddrPnniInfoProvTable=atmIfUniAddrPnniInfoProvTable, atmIfVptUniSigRowStatus=atmIfVptUniSigRowStatus, atmIfVptUniSig=atmIfVptUniSig, atmIfUniAccountClass=atmIfUniAccountClass, atmIfUniSigNewCurrentConnections=atmIfUniSigNewCurrentConnections, atmIfVptUniSigFailedConnections=atmIfVptUniSigFailedConnections, atmIfUniAccountCollection=atmIfUniAccountCollection, atmIfUniAddrTermSPRowStatusEntry=atmIfUniAddrTermSPRowStatusEntry, atmIfVptUniSigProvTable=atmIfVptUniSigProvTable, atmUniCapabilitiesBE00A=atmUniCapabilitiesBE00A, atmIfUniSigVcdProvTable=atmIfUniSigVcdProvTable)
