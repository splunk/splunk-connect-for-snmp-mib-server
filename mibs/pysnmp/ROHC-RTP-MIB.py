#
# PySNMP MIB module ROHC-RTP-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/ROHC-RTP-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 20:49:53 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, SingleValueConstraint, ConstraintsUnion, ValueRangeConstraint, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "SingleValueConstraint", "ConstraintsUnion", "ValueRangeConstraint", "ValueSizeConstraint")
rohcContextCID, rohcChannelID = mibBuilder.importSymbols("ROHC-MIB", "rohcContextCID", "rohcChannelID")
ObjectGroup, NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "NotificationGroup", "ModuleCompliance")
ModuleIdentity, Counter32, iso, NotificationType, ObjectIdentity, IpAddress, MibIdentifier, mib_2, Counter64, Gauge32, Unsigned32, TimeTicks, Bits, MibScalar, MibTable, MibTableRow, MibTableColumn, Integer32 = mibBuilder.importSymbols("SNMPv2-SMI", "ModuleIdentity", "Counter32", "iso", "NotificationType", "ObjectIdentity", "IpAddress", "MibIdentifier", "mib-2", "Counter64", "Gauge32", "Unsigned32", "TimeTicks", "Bits", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Integer32")
TextualConvention, TruthValue, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "TruthValue", "DisplayString")
rohcRtpMIB = ModuleIdentity((1, 3, 6, 1, 2, 1, 114))
rohcRtpMIB.setRevisions(('2004-06-03 00:00',))
if mibBuilder.loadTexts: rohcRtpMIB.setLastUpdated('200406030000Z')
if mibBuilder.loadTexts: rohcRtpMIB.setOrganization('IETF Robust Header Compression Working Group')
rohcRtpObjects = MibIdentifier((1, 3, 6, 1, 2, 1, 114, 1))
rohcRtpConformance = MibIdentifier((1, 3, 6, 1, 2, 1, 114, 2))
rohcRtpContextTable = MibTable((1, 3, 6, 1, 2, 1, 114, 1, 1), )
if mibBuilder.loadTexts: rohcRtpContextTable.setStatus('current')
rohcRtpContextEntry = MibTableRow((1, 3, 6, 1, 2, 1, 114, 1, 1, 1), ).setIndexNames((0, "ROHC-MIB", "rohcChannelID"), (0, "ROHC-MIB", "rohcContextCID"))
if mibBuilder.loadTexts: rohcRtpContextEntry.setStatus('current')
rohcRtpContextState = MibTableColumn((1, 3, 6, 1, 2, 1, 114, 1, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("initAndRefresh", 1), ("firstOrder", 2), ("secondOrder", 3), ("noContext", 4), ("staticContext", 5), ("fullContext", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rohcRtpContextState.setStatus('current')
rohcRtpContextMode = MibTableColumn((1, 3, 6, 1, 2, 1, 114, 1, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("unidirectional", 1), ("optimistic", 2), ("reliable", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rohcRtpContextMode.setStatus('current')
rohcRtpContextAlwaysPad = MibTableColumn((1, 3, 6, 1, 2, 1, 114, 1, 1, 1, 5), TruthValue().clone('false')).setMaxAccess("readonly")
if mibBuilder.loadTexts: rohcRtpContextAlwaysPad.setStatus('current')
rohcRtpContextLargePktsAllowed = MibTableColumn((1, 3, 6, 1, 2, 1, 114, 1, 1, 1, 6), TruthValue().clone('true')).setMaxAccess("readonly")
if mibBuilder.loadTexts: rohcRtpContextLargePktsAllowed.setStatus('current')
rohcRtpContextVerifyPeriod = MibTableColumn((1, 3, 6, 1, 2, 1, 114, 1, 1, 1, 7), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rohcRtpContextVerifyPeriod.setStatus('current')
rohcRtpContextSizesAllowed = MibTableColumn((1, 3, 6, 1, 2, 1, 114, 1, 1, 1, 8), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rohcRtpContextSizesAllowed.setStatus('current')
rohcRtpContextSizesUsed = MibTableColumn((1, 3, 6, 1, 2, 1, 114, 1, 1, 1, 9), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rohcRtpContextSizesUsed.setStatus('current')
rohcRtpContextACKs = MibTableColumn((1, 3, 6, 1, 2, 1, 114, 1, 1, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rohcRtpContextACKs.setStatus('current')
rohcRtpContextNACKs = MibTableColumn((1, 3, 6, 1, 2, 1, 114, 1, 1, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rohcRtpContextNACKs.setStatus('current')
rohcRtpContextSNACKs = MibTableColumn((1, 3, 6, 1, 2, 1, 114, 1, 1, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rohcRtpContextSNACKs.setStatus('current')
rohcRtpContextNHPs = MibTableColumn((1, 3, 6, 1, 2, 1, 114, 1, 1, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rohcRtpContextNHPs.setStatus('current')
rohcRtpContextCSPs = MibTableColumn((1, 3, 6, 1, 2, 1, 114, 1, 1, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rohcRtpContextCSPs.setStatus('current')
rohcRtpContextCCPs = MibTableColumn((1, 3, 6, 1, 2, 1, 114, 1, 1, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rohcRtpContextCCPs.setStatus('current')
rohcRtpContextPktsLostPhysical = MibTableColumn((1, 3, 6, 1, 2, 1, 114, 1, 1, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rohcRtpContextPktsLostPhysical.setStatus('current')
rohcRtpContextPktsLostPreLink = MibTableColumn((1, 3, 6, 1, 2, 1, 114, 1, 1, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rohcRtpContextPktsLostPreLink.setStatus('current')
rohcRtpPacketSizeTable = MibTable((1, 3, 6, 1, 2, 1, 114, 1, 2), )
if mibBuilder.loadTexts: rohcRtpPacketSizeTable.setStatus('current')
rohcRtpPacketSizeEntry = MibTableRow((1, 3, 6, 1, 2, 1, 114, 1, 2, 1), ).setIndexNames((0, "ROHC-MIB", "rohcChannelID"), (0, "ROHC-MIB", "rohcContextCID"), (0, "ROHC-RTP-MIB", "rohcRtpPacketSize"))
if mibBuilder.loadTexts: rohcRtpPacketSizeEntry.setStatus('current')
rohcRtpPacketSize = MibTableColumn((1, 3, 6, 1, 2, 1, 114, 1, 2, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295)))
if mibBuilder.loadTexts: rohcRtpPacketSize.setStatus('current')
rohcRtpPacketSizePreferred = MibTableColumn((1, 3, 6, 1, 2, 1, 114, 1, 2, 1, 4), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rohcRtpPacketSizePreferred.setStatus('current')
rohcRtpPacketSizeUsed = MibTableColumn((1, 3, 6, 1, 2, 1, 114, 1, 2, 1, 5), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rohcRtpPacketSizeUsed.setStatus('current')
rohcRtpPacketSizeRestrictedType = MibTableColumn((1, 3, 6, 1, 2, 1, 114, 1, 2, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("nhpOnly", 1), ("rhpOnly", 2), ("noRestrictions", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rohcRtpPacketSizeRestrictedType.setStatus('current')
rohcRtpCompliances = MibIdentifier((1, 3, 6, 1, 2, 1, 114, 2, 1))
rohcRtpGroups = MibIdentifier((1, 3, 6, 1, 2, 1, 114, 2, 2))
rohcRtpCompliance = ModuleCompliance((1, 3, 6, 1, 2, 1, 114, 2, 1, 1)).setObjects(("ROHC-RTP-MIB", "rohcRtpContextGroup"), ("ROHC-RTP-MIB", "rohcRtpPacketSizesGroup"), ("ROHC-RTP-MIB", "rohcRtpStatisticsGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    rohcRtpCompliance = rohcRtpCompliance.setStatus('current')
rohcRtpContextGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 114, 2, 2, 1)).setObjects(("ROHC-RTP-MIB", "rohcRtpContextState"), ("ROHC-RTP-MIB", "rohcRtpContextMode"), ("ROHC-RTP-MIB", "rohcRtpContextAlwaysPad"), ("ROHC-RTP-MIB", "rohcRtpContextLargePktsAllowed"), ("ROHC-RTP-MIB", "rohcRtpContextVerifyPeriod"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    rohcRtpContextGroup = rohcRtpContextGroup.setStatus('current')
rohcRtpPacketSizesGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 114, 2, 2, 2)).setObjects(("ROHC-RTP-MIB", "rohcRtpContextSizesAllowed"), ("ROHC-RTP-MIB", "rohcRtpContextSizesUsed"), ("ROHC-RTP-MIB", "rohcRtpPacketSizePreferred"), ("ROHC-RTP-MIB", "rohcRtpPacketSizeUsed"), ("ROHC-RTP-MIB", "rohcRtpPacketSizeRestrictedType"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    rohcRtpPacketSizesGroup = rohcRtpPacketSizesGroup.setStatus('current')
rohcRtpStatisticsGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 114, 2, 2, 3)).setObjects(("ROHC-RTP-MIB", "rohcRtpContextACKs"), ("ROHC-RTP-MIB", "rohcRtpContextNACKs"), ("ROHC-RTP-MIB", "rohcRtpContextSNACKs"), ("ROHC-RTP-MIB", "rohcRtpContextNHPs"), ("ROHC-RTP-MIB", "rohcRtpContextCSPs"), ("ROHC-RTP-MIB", "rohcRtpContextCCPs"), ("ROHC-RTP-MIB", "rohcRtpContextPktsLostPhysical"), ("ROHC-RTP-MIB", "rohcRtpContextPktsLostPreLink"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    rohcRtpStatisticsGroup = rohcRtpStatisticsGroup.setStatus('current')
mibBuilder.exportSymbols("ROHC-RTP-MIB", rohcRtpContextState=rohcRtpContextState, rohcRtpContextTable=rohcRtpContextTable, rohcRtpPacketSizeTable=rohcRtpPacketSizeTable, rohcRtpStatisticsGroup=rohcRtpStatisticsGroup, PYSNMP_MODULE_ID=rohcRtpMIB, rohcRtpContextMode=rohcRtpContextMode, rohcRtpContextVerifyPeriod=rohcRtpContextVerifyPeriod, rohcRtpContextPktsLostPhysical=rohcRtpContextPktsLostPhysical, rohcRtpContextNACKs=rohcRtpContextNACKs, rohcRtpPacketSize=rohcRtpPacketSize, rohcRtpPacketSizeUsed=rohcRtpPacketSizeUsed, rohcRtpContextLargePktsAllowed=rohcRtpContextLargePktsAllowed, rohcRtpGroups=rohcRtpGroups, rohcRtpPacketSizeEntry=rohcRtpPacketSizeEntry, rohcRtpPacketSizeRestrictedType=rohcRtpPacketSizeRestrictedType, rohcRtpContextAlwaysPad=rohcRtpContextAlwaysPad, rohcRtpContextSizesUsed=rohcRtpContextSizesUsed, rohcRtpPacketSizePreferred=rohcRtpPacketSizePreferred, rohcRtpConformance=rohcRtpConformance, rohcRtpContextCSPs=rohcRtpContextCSPs, rohcRtpObjects=rohcRtpObjects, rohcRtpMIB=rohcRtpMIB, rohcRtpContextEntry=rohcRtpContextEntry, rohcRtpCompliance=rohcRtpCompliance, rohcRtpContextCCPs=rohcRtpContextCCPs, rohcRtpContextGroup=rohcRtpContextGroup, rohcRtpPacketSizesGroup=rohcRtpPacketSizesGroup, rohcRtpContextSNACKs=rohcRtpContextSNACKs, rohcRtpContextSizesAllowed=rohcRtpContextSizesAllowed, rohcRtpContextACKs=rohcRtpContextACKs, rohcRtpContextPktsLostPreLink=rohcRtpContextPktsLostPreLink, rohcRtpContextNHPs=rohcRtpContextNHPs, rohcRtpCompliances=rohcRtpCompliances)
