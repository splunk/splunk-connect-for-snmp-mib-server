#
# PySNMP MIB module CISCO-CABLE-L2VPN-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CISCO-CABLE-L2VPN-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:34:32 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ConstraintsIntersection, ValueRangeConstraint, ConstraintsUnion, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ConstraintsIntersection", "ValueRangeConstraint", "ConstraintsUnion", "SingleValueConstraint")
CpwVcType, CpwVcIDType = mibBuilder.importSymbols("CISCO-IETF-PW-TC-MIB", "CpwVcType", "CpwVcIDType")
ciscoMgmt, = mibBuilder.importSymbols("CISCO-SMI", "ciscoMgmt")
InetAddress, InetAddressType = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddress", "InetAddressType")
ObjectGroup, NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "NotificationGroup", "ModuleCompliance")
ModuleIdentity, Counter32, NotificationType, Gauge32, Bits, ObjectIdentity, iso, Integer32, TimeTicks, MibIdentifier, Counter64, MibScalar, MibTable, MibTableRow, MibTableColumn, IpAddress, Unsigned32 = mibBuilder.importSymbols("SNMPv2-SMI", "ModuleIdentity", "Counter32", "NotificationType", "Gauge32", "Bits", "ObjectIdentity", "iso", "Integer32", "TimeTicks", "MibIdentifier", "Counter64", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "IpAddress", "Unsigned32")
TextualConvention, DisplayString, MacAddress = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString", "MacAddress")
ciscoCableL2vpnMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 9, 9, 700))
ciscoCableL2vpnMIB.setRevisions(('2009-06-17 00:00',))
if mibBuilder.loadTexts: ciscoCableL2vpnMIB.setLastUpdated('200906170000Z')
if mibBuilder.loadTexts: ciscoCableL2vpnMIB.setOrganization('Cisco Systems, Inc.')
class CiscoCableL2vpnIndex(TextualConvention, Unsigned32):
    status = 'current'
    subtypeSpec = Unsigned32.subtypeSpec + ValueRangeConstraint(1, 4294967295)

ciscoCableL2vpnMIBNotifs = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 700, 0))
ciscoCableL2vpnMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 700, 1))
ciscoCableL2vpnMIBConform = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 700, 2))
ccl2vpnMacVpnIdL2vpnIndexTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 700, 1, 1), )
if mibBuilder.loadTexts: ccl2vpnMacVpnIdL2vpnIndexTable.setStatus('current')
ccl2vpnMacVpnIdL2vpnIndexEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 700, 1, 1, 1), ).setIndexNames((0, "CISCO-CABLE-L2VPN-MIB", "ccl2vpnMac"), (1, "CISCO-CABLE-L2VPN-MIB", "ccl2vpnVpnId"))
if mibBuilder.loadTexts: ccl2vpnMacVpnIdL2vpnIndexEntry.setStatus('current')
ccl2vpnMac = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 700, 1, 1, 1, 1), MacAddress())
if mibBuilder.loadTexts: ccl2vpnMac.setStatus('current')
ccl2vpnVpnId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 700, 1, 1, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 16)))
if mibBuilder.loadTexts: ccl2vpnVpnId.setStatus('current')
ccl2vpnMacVpnIdToL2vpnIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 700, 1, 1, 1, 3), CiscoCableL2vpnIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ccl2vpnMacVpnIdToL2vpnIndex.setStatus('current')
ccl2vpnPWL2vpnIndexTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 700, 1, 2), )
if mibBuilder.loadTexts: ccl2vpnPWL2vpnIndexTable.setStatus('current')
ccl2vpnPWL2vpnIndexEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 700, 1, 2, 1), ).setIndexNames((0, "CISCO-CABLE-L2VPN-MIB", "ccl2vpnPseudoWireType"), (0, "CISCO-CABLE-L2VPN-MIB", "ccl2vpnPeerIPAddressType"), (0, "CISCO-CABLE-L2VPN-MIB", "ccl2vpnPeerIPAddress"), (0, "CISCO-CABLE-L2VPN-MIB", "ccl2vpnVCID"))
if mibBuilder.loadTexts: ccl2vpnPWL2vpnIndexEntry.setStatus('current')
ccl2vpnPseudoWireType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 700, 1, 2, 1, 1), CpwVcType())
if mibBuilder.loadTexts: ccl2vpnPseudoWireType.setStatus('current')
ccl2vpnPeerIPAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 700, 1, 2, 1, 2), InetAddressType())
if mibBuilder.loadTexts: ccl2vpnPeerIPAddressType.setStatus('current')
ccl2vpnPeerIPAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 700, 1, 2, 1, 3), InetAddress())
if mibBuilder.loadTexts: ccl2vpnPeerIPAddress.setStatus('current')
ccl2vpnVCID = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 700, 1, 2, 1, 4), CpwVcIDType())
if mibBuilder.loadTexts: ccl2vpnVCID.setStatus('current')
ccl2vpnPWToL2vpnIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 700, 1, 2, 1, 5), CiscoCableL2vpnIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ccl2vpnPWToL2vpnIndex.setStatus('current')
ccl2vpnL2vpnIndexPWTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 700, 1, 3), )
if mibBuilder.loadTexts: ccl2vpnL2vpnIndexPWTable.setStatus('current')
ccl2vpnL2vpnIndexPWEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 700, 1, 3, 1), ).setIndexNames((0, "CISCO-CABLE-L2VPN-MIB", "ccl2vpnL2vpnIndex"))
if mibBuilder.loadTexts: ccl2vpnL2vpnIndexPWEntry.setStatus('current')
ccl2vpnL2vpnIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 700, 1, 3, 1, 1), CiscoCableL2vpnIndex())
if mibBuilder.loadTexts: ccl2vpnL2vpnIndex.setStatus('current')
ccl2vpnPWMAC = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 700, 1, 3, 1, 2), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ccl2vpnPWMAC.setStatus('current')
ccl2vpnPWVpnId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 700, 1, 3, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ccl2vpnPWVpnId.setStatus('current')
ccl2vpnPWPeerIPAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 700, 1, 3, 1, 4), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ccl2vpnPWPeerIPAddressType.setStatus('current')
ccl2vpnPWPeerIPAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 700, 1, 3, 1, 5), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ccl2vpnPWPeerIPAddress.setStatus('current')
ccl2vpnPWType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 700, 1, 3, 1, 6), CpwVcType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ccl2vpnPWType.setStatus('current')
ccl2vpnPWVCID = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 700, 1, 3, 1, 7), CpwVcIDType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ccl2vpnPWVCID.setStatus('current')
ccl2vpnMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 700, 2, 1))
ccl2vpnMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 700, 2, 2))
ccl2vpnMIBCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 700, 2, 1, 1)).setObjects(("CISCO-CABLE-L2VPN-MIB", "ccl2vpnPWMappingGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ccl2vpnMIBCompliance = ccl2vpnMIBCompliance.setStatus('current')
ccl2vpnPWMappingGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 700, 2, 2, 1)).setObjects(("CISCO-CABLE-L2VPN-MIB", "ccl2vpnPWMAC"), ("CISCO-CABLE-L2VPN-MIB", "ccl2vpnPWVpnId"), ("CISCO-CABLE-L2VPN-MIB", "ccl2vpnPWPeerIPAddressType"), ("CISCO-CABLE-L2VPN-MIB", "ccl2vpnPWPeerIPAddress"), ("CISCO-CABLE-L2VPN-MIB", "ccl2vpnPWType"), ("CISCO-CABLE-L2VPN-MIB", "ccl2vpnPWVCID"), ("CISCO-CABLE-L2VPN-MIB", "ccl2vpnMacVpnIdToL2vpnIndex"), ("CISCO-CABLE-L2VPN-MIB", "ccl2vpnPWToL2vpnIndex"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ccl2vpnPWMappingGroup = ccl2vpnPWMappingGroup.setStatus('current')
mibBuilder.exportSymbols("CISCO-CABLE-L2VPN-MIB", ciscoCableL2vpnMIBObjects=ciscoCableL2vpnMIBObjects, ccl2vpnL2vpnIndexPWEntry=ccl2vpnL2vpnIndexPWEntry, ccl2vpnMacVpnIdL2vpnIndexTable=ccl2vpnMacVpnIdL2vpnIndexTable, ccl2vpnPWToL2vpnIndex=ccl2vpnPWToL2vpnIndex, PYSNMP_MODULE_ID=ciscoCableL2vpnMIB, ccl2vpnPWType=ccl2vpnPWType, ccl2vpnMIBCompliances=ccl2vpnMIBCompliances, ccl2vpnPWMappingGroup=ccl2vpnPWMappingGroup, ccl2vpnPseudoWireType=ccl2vpnPseudoWireType, ciscoCableL2vpnMIB=ciscoCableL2vpnMIB, ccl2vpnPWVpnId=ccl2vpnPWVpnId, ccl2vpnPWPeerIPAddress=ccl2vpnPWPeerIPAddress, ccl2vpnMIBCompliance=ccl2vpnMIBCompliance, ccl2vpnVpnId=ccl2vpnVpnId, ccl2vpnMacVpnIdL2vpnIndexEntry=ccl2vpnMacVpnIdL2vpnIndexEntry, ccl2vpnL2vpnIndex=ccl2vpnL2vpnIndex, ccl2vpnMIBGroups=ccl2vpnMIBGroups, CiscoCableL2vpnIndex=CiscoCableL2vpnIndex, ccl2vpnPWL2vpnIndexEntry=ccl2vpnPWL2vpnIndexEntry, ciscoCableL2vpnMIBNotifs=ciscoCableL2vpnMIBNotifs, ccl2vpnMac=ccl2vpnMac, ccl2vpnPeerIPAddress=ccl2vpnPeerIPAddress, ccl2vpnPeerIPAddressType=ccl2vpnPeerIPAddressType, ccl2vpnMacVpnIdToL2vpnIndex=ccl2vpnMacVpnIdToL2vpnIndex, ccl2vpnPWVCID=ccl2vpnPWVCID, ccl2vpnPWL2vpnIndexTable=ccl2vpnPWL2vpnIndexTable, ccl2vpnL2vpnIndexPWTable=ccl2vpnL2vpnIndexPWTable, ciscoCableL2vpnMIBConform=ciscoCableL2vpnMIBConform, ccl2vpnPWMAC=ccl2vpnPWMAC, ccl2vpnPWPeerIPAddressType=ccl2vpnPWPeerIPAddressType, ccl2vpnVCID=ccl2vpnVCID)
