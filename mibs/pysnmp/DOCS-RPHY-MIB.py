#
# PySNMP MIB module DOCS-RPHY-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/DOCS-RPHY-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 18:38:48 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ConstraintsIntersection, ConstraintsUnion, SingleValueConstraint, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ConstraintsIntersection", "ConstraintsUnion", "SingleValueConstraint", "ValueSizeConstraint")
clabProjDocsis, = mibBuilder.importSymbols("CLAB-DEF-MIB", "clabProjDocsis")
DocsX509ASN1DEREncodedCertificate, = mibBuilder.importSymbols("DOCS-IETF-BPI2-MIB", "DocsX509ASN1DEREncodedCertificate")
IfDirection, = mibBuilder.importSymbols("DOCS-IF3-MIB", "IfDirection")
PhysicalIndex, PhysicalIndexOrZero = mibBuilder.importSymbols("ENTITY-MIB", "PhysicalIndex", "PhysicalIndexOrZero")
EntitySensorDataType, EntitySensorValue, EntitySensorPrecision, EntitySensorStatus, EntitySensorDataScale = mibBuilder.importSymbols("ENTITY-SENSOR-MIB", "EntitySensorDataType", "EntitySensorValue", "EntitySensorPrecision", "EntitySensorStatus", "EntitySensorDataScale")
IANAPhysicalClass, = mibBuilder.importSymbols("IANA-ENTITY-MIB", "IANAPhysicalClass")
IANAifType, = mibBuilder.importSymbols("IANAifType-MIB", "IANAifType")
InterfaceIndex, InterfaceIndexOrZero, ifIndex = mibBuilder.importSymbols("IF-MIB", "InterfaceIndex", "InterfaceIndexOrZero", "ifIndex")
InetVersion, InetAddressType, InetAddress, InetPortNumber, InetAddressPrefixLength = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetVersion", "InetAddressType", "InetAddress", "InetPortNumber", "InetAddressPrefixLength")
IpAddressOriginTC, IpAddressStatusTC, Ipv6AddressIfIdentifierTC = mibBuilder.importSymbols("IP-MIB", "IpAddressOriginTC", "IpAddressStatusTC", "Ipv6AddressIfIdentifierTC")
SnmpAdminString, = mibBuilder.importSymbols("SNMP-FRAMEWORK-MIB", "SnmpAdminString")
ObjectGroup, ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "ModuleCompliance", "NotificationGroup")
Unsigned32, Integer32, Bits, NotificationType, Counter64, iso, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter32, IpAddress, Gauge32, MibIdentifier, ModuleIdentity, ObjectIdentity, TimeTicks = mibBuilder.importSymbols("SNMPv2-SMI", "Unsigned32", "Integer32", "Bits", "NotificationType", "Counter64", "iso", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter32", "IpAddress", "Gauge32", "MibIdentifier", "ModuleIdentity", "ObjectIdentity", "TimeTicks")
DateAndTime, TextualConvention, TimeStamp, MacAddress, DisplayString, TruthValue, AutonomousType, PhysAddress = mibBuilder.importSymbols("SNMPv2-TC", "DateAndTime", "TextualConvention", "TimeStamp", "MacAddress", "DisplayString", "TruthValue", "AutonomousType", "PhysAddress")
UUIDorZero, = mibBuilder.importSymbols("UUID-TC-MIB", "UUIDorZero")
docsRphyMib = ModuleIdentity((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30))
docsRphyMib.setRevisions(('2017-04-13 00:00', '2016-12-15 00:00', '2016-09-29 00:00', '2016-04-21 00:00',))
if mibBuilder.loadTexts: docsRphyMib.setLastUpdated('201704130000Z')
if mibBuilder.loadTexts: docsRphyMib.setOrganization('Cable Television Laboratories, Inc')
class RphyChannelType(TextualConvention, Integer32):
    reference = 'DOCSIS DCA MHAv2 Remote PHY Specification CM-SP-R-PHY-I04-160512, RfChannelType TLV Section.'
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9))
    namedValues = NamedValues(("other", 0), ("dsScQam", 1), ("dsOfdm", 2), ("ndf", 3), ("scte551Fwd", 4), ("usAtdma", 5), ("usOfdma", 6), ("reserved", 7), ("ndr", 8), ("scte551Ret", 9))

class RphyEventSeverityType(TextualConvention, Integer32):
    reference = 'DOCSIS DCA MHAv2 Remote PHY OSS Interface Specification CM-SP-R-OSSI-I04-160923, Section 9.'
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7))
    namedValues = NamedValues(("emergency", 0), ("alert", 1), ("critical", 2), ("error", 3), ("warning", 4), ("notice", 5), ("information", 6), ("debug", 7))

docsRphyNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 0))
docsRphyObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1))
docsRphyConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 2))
docsRphyRpdDevMibObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 1))
docsRphyRpdIfMibObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 2))
docsRphyRpdIpMibObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 3))
docsRphyCcapMibObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 4))
docsRphyCcapSecMibObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 5))
docsRphyRpdIpIcmpMibObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 3, 9))
docsRphyCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 2, 1))
docsRphyGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 2, 2))
docsRphyRpdDevInfoTable = MibTable((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 1, 1), )
if mibBuilder.loadTexts: docsRphyRpdDevInfoTable.setStatus('current')
docsRphyRpdDevInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 1, 1, 1), ).setIndexNames((0, "DOCS-RPHY-MIB", "docsRphyRpdDevInfoUniqueId"))
if mibBuilder.loadTexts: docsRphyRpdDevInfoEntry.setStatus('current')
docsRphyRpdDevInfoUniqueId = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 1, 1, 1, 1), MacAddress())
if mibBuilder.loadTexts: docsRphyRpdDevInfoUniqueId.setStatus('current')
docsRphyRpdDevInfoSysUpTime = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 1, 1, 1, 2), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyRpdDevInfoSysUpTime.setStatus('current')
docsRphyRpdDevInfoNumCrashFilesAvail = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 1, 1, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyRpdDevInfoNumCrashFilesAvail.setStatus('current')
docsRphyRpdDevIdentificationTable = MibTable((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 1, 2), )
if mibBuilder.loadTexts: docsRphyRpdDevIdentificationTable.setStatus('current')
docsRphyRpdDevIdentificationEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 1, 2, 1), ).setIndexNames((0, "DOCS-RPHY-MIB", "docsRphyRpdDevInfoUniqueId"))
if mibBuilder.loadTexts: docsRphyRpdDevIdentificationEntry.setStatus('current')
docsRphyRpdDevIdVendorName = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 1, 2, 1, 1), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyRpdDevIdVendorName.setStatus('current')
docsRphyRpdDevIdVendorId = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 1, 2, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyRpdDevIdVendorId.setStatus('current')
docsRphyRpdDevIdModelNum = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 1, 2, 1, 3), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyRpdDevIdModelNum.setStatus('current')
docsRphyRpdDevIdSerialNum = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 1, 2, 1, 4), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyRpdDevIdSerialNum.setStatus('current')
docsRphyRpdDevIdDeviceAlias = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 1, 2, 1, 5), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyRpdDevIdDeviceAlias.setStatus('current')
docsRphyRpdDevIdDeviceDescr = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 1, 2, 1, 6), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyRpdDevIdDeviceDescr.setStatus('current')
docsRphyRpdDevIdHwRev = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 1, 2, 1, 7), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyRpdDevIdHwRev.setStatus('current')
docsRphyRpdDevIdCurrSwVer = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 1, 2, 1, 8), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyRpdDevIdCurrSwVer.setStatus('current')
docsRphyRpdDevIdBootRomVer = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 1, 2, 1, 9), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyRpdDevIdBootRomVer.setStatus('current')
docsRphyRpdDevIdUsBurstRcvrVendorId = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 1, 2, 1, 10), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyRpdDevIdUsBurstRcvrVendorId.setStatus('current')
docsRphyRpdDevIdUsBurstRcvrModelNum = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 1, 2, 1, 11), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(3, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyRpdDevIdUsBurstRcvrModelNum.setStatus('current')
docsRphyRpdDevIdUsBurstRcvrDrivVer = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 1, 2, 1, 12), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(3, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyRpdDevIdUsBurstRcvrDrivVer.setStatus('current')
docsRphyRpdDevIdUsBurstRcvrSerialNum = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 1, 2, 1, 13), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(5, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyRpdDevIdUsBurstRcvrSerialNum.setStatus('current')
docsRphyRpdDevIdRcpProtocolVer = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 1, 2, 1, 14), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(3, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyRpdDevIdRcpProtocolVer.setStatus('current')
docsRphyRpdDevIdRcpSchemaVer = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 1, 2, 1, 15), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(5, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyRpdDevIdRcpSchemaVer.setStatus('current')
docsRphyRpdDevLocationTable = MibTable((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 1, 3), )
if mibBuilder.loadTexts: docsRphyRpdDevLocationTable.setStatus('current')
docsRphyRpdDevLocationEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 1, 3, 1), ).setIndexNames((0, "DOCS-RPHY-MIB", "docsRphyRpdDevInfoUniqueId"))
if mibBuilder.loadTexts: docsRphyRpdDevLocationEntry.setStatus('current')
docsRphyRpdDevLocationDescr = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 1, 3, 1, 1), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyRpdDevLocationDescr.setStatus('current')
docsRphyRpdDevLocationLatitude = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 1, 3, 1, 2), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(9, 9)).setFixedLength(9)).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyRpdDevLocationLatitude.setStatus('current')
docsRphyRpdDevLocationLongitude = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 1, 3, 1, 3), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(10, 10)).setFixedLength(10)).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyRpdDevLocationLongitude.setStatus('current')
docsRphyRpdDevCoresConnectedTable = MibTable((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 1, 4), )
if mibBuilder.loadTexts: docsRphyRpdDevCoresConnectedTable.setStatus('current')
docsRphyRpdDevCoresConnectedEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 1, 4, 1), ).setIndexNames((0, "DOCS-RPHY-MIB", "docsRphyRpdDevInfoUniqueId"), (0, "DOCS-RPHY-MIB", "docsRphyRpdDevCoresConnectedCoreId"))
if mibBuilder.loadTexts: docsRphyRpdDevCoresConnectedEntry.setStatus('current')
docsRphyRpdDevCoresConnectedCoreId = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 1, 4, 1, 1), MacAddress())
if mibBuilder.loadTexts: docsRphyRpdDevCoresConnectedCoreId.setStatus('current')
docsRphyRpdDevCoresConnectedAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 1, 4, 1, 2), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyRpdDevCoresConnectedAddressType.setStatus('current')
docsRphyRpdDevCoresConnectedAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 1, 4, 1, 3), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyRpdDevCoresConnectedAddress.setStatus('current')
docsRphyRpdDevCoresConnectedIsPrincipal = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 1, 4, 1, 4), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyRpdDevCoresConnectedIsPrincipal.setStatus('current')
docsRphyRpdDevCoresConnectedName = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 1, 4, 1, 5), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyRpdDevCoresConnectedName.setStatus('current')
docsRphyRpdDevCoresConnectedVendorId = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 1, 4, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyRpdDevCoresConnectedVendorId.setStatus('current')
docsRphyRpdDevCapabilitiesTable = MibTable((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 1, 5), )
if mibBuilder.loadTexts: docsRphyRpdDevCapabilitiesTable.setStatus('current')
docsRphyRpdDevCapabilitiesEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 1, 5, 1), ).setIndexNames((0, "DOCS-RPHY-MIB", "docsRphyRpdDevInfoUniqueId"))
if mibBuilder.loadTexts: docsRphyRpdDevCapabilitiesEntry.setStatus('current')
docsRphyRpdDevCapabNumDsPorts = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 1, 5, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyRpdDevCapabNumDsPorts.setStatus('current')
docsRphyRpdDevCapabNumUsPorts = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 1, 5, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyRpdDevCapabNumUsPorts.setStatus('current')
docsRphyRpdDevCapabNumTenGeNsPorts = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 1, 5, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyRpdDevCapabNumTenGeNsPorts.setStatus('current')
docsRphyRpdDevCapabNumOneGeNsPorts = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 1, 5, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyRpdDevCapabNumOneGeNsPorts.setStatus('current')
docsRphyRpdDevCapabNumDsScQamChans = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 1, 5, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyRpdDevCapabNumDsScQamChans.setStatus('current')
docsRphyRpdDevCapabNumDsOfdmChans = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 1, 5, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyRpdDevCapabNumDsOfdmChans.setStatus('current')
docsRphyRpdDevCapabNumUsScQamChans = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 1, 5, 1, 7), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyRpdDevCapabNumUsScQamChans.setStatus('current')
docsRphyRpdDevCapabNumUsOfdmaChans = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 1, 5, 1, 8), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyRpdDevCapabNumUsOfdmaChans.setStatus('current')
docsRphyRpdDevCapabNumDsOob55d1Chans = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 1, 5, 1, 9), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyRpdDevCapabNumDsOob55d1Chans.setStatus('current')
docsRphyRpdDevCapabNumUsOob55d1Chans = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 1, 5, 1, 10), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyRpdDevCapabNumUsOob55d1Chans.setStatus('current')
docsRphyRpdDevCapabNumDsOob55d2Modules = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 1, 5, 1, 11), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyRpdDevCapabNumDsOob55d2Modules.setStatus('current')
docsRphyRpdDevCapabNumUsOob55d2Demods = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 1, 5, 1, 12), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyRpdDevCapabNumUsOob55d2Demods.setStatus('current')
docsRphyRpdDevCapabNumNdfChans = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 1, 5, 1, 13), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyRpdDevCapabNumNdfChans.setStatus('current')
docsRphyRpdDevCapabNumNdrChans = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 1, 5, 1, 14), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyRpdDevCapabNumNdrChans.setStatus('current')
docsRphyRpdDevCapabNumDsPspFlowsPerChan = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 1, 5, 1, 15), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyRpdDevCapabNumDsPspFlowsPerChan.setStatus('current')
docsRphyRpdDevCapabNumUsPspFlowsPerChan = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 1, 5, 1, 16), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyRpdDevCapabNumUsPspFlowsPerChan.setStatus('current')
docsRphyRpdDevCapabNumAsynchVideoChans = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 1, 5, 1, 17), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyRpdDevCapabNumAsynchVideoChans.setStatus('current')
docsRphyRpdDevCapabNumCwToneGens = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 1, 5, 1, 18), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyRpdDevCapabNumCwToneGens.setStatus('current')
docsRphyRpdDevCapabLowestCwToneFreq = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 1, 5, 1, 19), Unsigned32()).setUnits('Hz').setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyRpdDevCapabLowestCwToneFreq.setStatus('current')
docsRphyRpdDevCapabHighestCwToneFreq = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 1, 5, 1, 20), Unsigned32()).setUnits('Hz').setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyRpdDevCapabHighestCwToneFreq.setStatus('current')
docsRphyRpdDevCapabMaxCwTonePwr = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 1, 5, 1, 21), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setUnits('TenthdBmV').setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyRpdDevCapabMaxCwTonePwr.setStatus('current')
docsRphyRpdDevCapabQamAsPilot = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 1, 5, 1, 22), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyRpdDevCapabQamAsPilot.setStatus('current')
docsRphyRpdDevCapabSupportsUdpEncap = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 1, 5, 1, 23), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyRpdDevCapabSupportsUdpEncap.setStatus('current')
docsRphyRpdDevCapabSupportsFlowTags = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 1, 5, 1, 24), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyRpdDevCapabSupportsFlowTags.setStatus('current')
docsRphyRpdDevCapabSupportsFreqTilt = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 1, 5, 1, 25), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyRpdDevCapabSupportsFreqTilt.setStatus('current')
docsRphyRpdDevCapabTiltRange = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 1, 5, 1, 26), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyRpdDevCapabTiltRange.setStatus('current')
docsRphyRpdDevCapabBufferDepthMonAlertSupp = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 1, 5, 1, 27), Bits().clone(namedValues=NamedValues(("ofdmChannels", 0), ("scQamDocsisChannels", 1), ("scQamVideoChannels", 2), ("ndfChannels", 3), ("scte551Channels", 4), ("scte552Channels", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyRpdDevCapabBufferDepthMonAlertSupp.setStatus('current')
docsRphyRpdDevCapabBufferDepthCfgSupp = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 1, 5, 1, 28), Bits().clone(namedValues=NamedValues(("ofdmChannels", 0), ("scQamDocsisChannels", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyRpdDevCapabBufferDepthCfgSupp.setStatus('current')
docsRphyRpdDevCapabRpdUcdProcTime = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 1, 5, 1, 29), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyRpdDevCapabRpdUcdProcTime.setStatus('current')
docsRphyRpdDevCapabRpdUcdChgNullGrtTime = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 1, 5, 1, 30), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyRpdDevCapabRpdUcdChgNullGrtTime.setStatus('current')
docsRphyRpdDevCapabMultiSectionTimingMerRep = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 1, 5, 1, 31), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("notSupported", 0), ("supportType1", 1), ("supportType2", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyRpdDevCapabMultiSectionTimingMerRep.setStatus('current')
docsRphyRpdDevChanReachabilityTable = MibTable((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 1, 6), )
if mibBuilder.loadTexts: docsRphyRpdDevChanReachabilityTable.setStatus('current')
docsRphyRpdDevChanReachabilityEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 1, 6, 1), ).setIndexNames((0, "DOCS-RPHY-MIB", "docsRphyRpdDevInfoUniqueId"), (0, "DOCS-RPHY-MIB", "docsRphyRpdDevChanReachabilityEnetPortIndex"), (0, "DOCS-RPHY-MIB", "docsRphyRpdDevChanReachabilityRfPortIndex"), (0, "DOCS-RPHY-MIB", "docsRphyRpdDevChanReachabilityChanType"), (0, "DOCS-RPHY-MIB", "docsRphyRpdDevChanReachabilityStartChanIndex"))
if mibBuilder.loadTexts: docsRphyRpdDevChanReachabilityEntry.setStatus('current')
docsRphyRpdDevChanReachabilityEnetPortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 1, 6, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255)))
if mibBuilder.loadTexts: docsRphyRpdDevChanReachabilityEnetPortIndex.setStatus('current')
docsRphyRpdDevChanReachabilityRfPortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 1, 6, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255)))
if mibBuilder.loadTexts: docsRphyRpdDevChanReachabilityRfPortIndex.setStatus('current')
docsRphyRpdDevChanReachabilityChanType = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 1, 6, 1, 3), RphyChannelType())
if mibBuilder.loadTexts: docsRphyRpdDevChanReachabilityChanType.setStatus('current')
docsRphyRpdDevChanReachabilityStartChanIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 1, 6, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255)))
if mibBuilder.loadTexts: docsRphyRpdDevChanReachabilityStartChanIndex.setStatus('current')
docsRphyRpdDevChanReachabilityEndChanIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 1, 6, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyRpdDevChanReachabilityEndChanIndex.setStatus('current')
docsRphyRpdDevDsUsRfPortAllocTable = MibTable((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 1, 7), )
if mibBuilder.loadTexts: docsRphyRpdDevDsUsRfPortAllocTable.setStatus('current')
docsRphyRpdDevDsUsRfPortAllocEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 1, 7, 1), ).setIndexNames((0, "DOCS-RPHY-MIB", "docsRphyRpdDevInfoUniqueId"), (0, "DOCS-RPHY-MIB", "docsRphyRpdDevDsUsRfPortAllocIndex"), (0, "DOCS-RPHY-MIB", "docsRphyRpdDevDsUsRfPortAllocDirection"))
if mibBuilder.loadTexts: docsRphyRpdDevDsUsRfPortAllocEntry.setStatus('current')
docsRphyRpdDevDsUsRfPortAllocIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 1, 7, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255)))
if mibBuilder.loadTexts: docsRphyRpdDevDsUsRfPortAllocIndex.setStatus('current')
docsRphyRpdDevDsUsRfPortAllocDirection = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 1, 7, 1, 2), IfDirection())
if mibBuilder.loadTexts: docsRphyRpdDevDsUsRfPortAllocDirection.setStatus('current')
docsRphyRpdDevDsUsRfPortAllocScQamChans = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 1, 7, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyRpdDevDsUsRfPortAllocScQamChans.setStatus('current')
docsRphyRpdDevDsUsRfPortAllocOfdmChans = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 1, 7, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyRpdDevDsUsRfPortAllocOfdmChans.setStatus('current')
docsRphyRpdDevDsUsRfPortAllocOob551Chans = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 1, 7, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyRpdDevDsUsRfPortAllocOob551Chans.setStatus('current')
docsRphyRpdDevDsUsRfPortAllocNdChans = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 1, 7, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyRpdDevDsUsRfPortAllocNdChans.setStatus('current')
docsRphyRpdDevL2tpSessionInfoTable = MibTable((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 1, 8), )
if mibBuilder.loadTexts: docsRphyRpdDevL2tpSessionInfoTable.setStatus('current')
docsRphyRpdDevL2tpSessionInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 1, 8, 1), ).setIndexNames((0, "DOCS-RPHY-MIB", "docsRphyRpdDevInfoUniqueId"), (0, "DOCS-RPHY-MIB", "docsRphyRpdDevL2tpSessionInfoLocalLcceIpAddrType"), (0, "DOCS-RPHY-MIB", "docsRphyRpdDevL2tpSessionInfoLocalLcceIpAddr"), (0, "DOCS-RPHY-MIB", "docsRphyRpdDevL2tpSessionInfoLocalId"))
if mibBuilder.loadTexts: docsRphyRpdDevL2tpSessionInfoEntry.setStatus('current')
docsRphyRpdDevL2tpSessionInfoLocalLcceIpAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 1, 8, 1, 1), InetAddressType())
if mibBuilder.loadTexts: docsRphyRpdDevL2tpSessionInfoLocalLcceIpAddrType.setStatus('current')
docsRphyRpdDevL2tpSessionInfoLocalLcceIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 1, 8, 1, 2), InetAddress())
if mibBuilder.loadTexts: docsRphyRpdDevL2tpSessionInfoLocalLcceIpAddr.setStatus('current')
docsRphyRpdDevL2tpSessionInfoLocalId = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 1, 8, 1, 3), Unsigned32())
if mibBuilder.loadTexts: docsRphyRpdDevL2tpSessionInfoLocalId.setStatus('current')
docsRphyRpdDevL2tpSessionInfoRemoteLcceIpAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 1, 8, 1, 4), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyRpdDevL2tpSessionInfoRemoteLcceIpAddrType.setStatus('current')
docsRphyRpdDevL2tpSessionInfoRemoteLcceIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 1, 8, 1, 5), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyRpdDevL2tpSessionInfoRemoteLcceIpAddr.setStatus('current')
docsRphyRpdDevL2tpSessionInfoRemoteId = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 1, 8, 1, 6), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyRpdDevL2tpSessionInfoRemoteId.setStatus('current')
docsRphyRpdDevL2tpSessionInfoCoreId = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 1, 8, 1, 7), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyRpdDevL2tpSessionInfoCoreId.setStatus('current')
docsRphyRpdDevL2tpSessionInfoConnCtrlID = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 1, 8, 1, 8), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyRpdDevL2tpSessionInfoConnCtrlID.setStatus('current')
docsRphyRpdDevL2tpSessionInfoUdpPort = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 1, 8, 1, 9), InetPortNumber()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyRpdDevL2tpSessionInfoUdpPort.setStatus('current')
docsRphyRpdDevL2tpSessionInfoDescr = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 1, 8, 1, 10), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyRpdDevL2tpSessionInfoDescr.setStatus('current')
docsRphyRpdDevL2tpSessionInfoSessionType = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 1, 8, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("psp", 1), ("mpt", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyRpdDevL2tpSessionInfoSessionType.setStatus('current')
docsRphyRpdDevL2tpSessionInfoSessionSubType = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 1, 8, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21))).clone(namedValues=NamedValues(("mptLegacy", 1), ("pspLegacy", 2), ("mcm", 3), ("pspDepiMultichannel", 4), ("pspUepiScQam", 5), ("pspUepiOfdma", 6), ("pspBwReqScQam", 7), ("pspBwReqOfdma", 8), ("pspProbe", 9), ("pspRngReqScQam", 10), ("pspRngReqOfdma", 11), ("pspMapScQam", 12), ("pspMapOfdma", 13), ("pspSpecman", 14), ("pspPnm", 15), ("psp551Fwd", 16), ("psp551Ret", 17), ("psp552Fwd", 18), ("psp552Ret", 19), ("pspNdf", 20), ("pspNdr", 21)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyRpdDevL2tpSessionInfoSessionSubType.setStatus('current')
docsRphyRpdDevL2tpSessionInfoMaxPayload = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 1, 8, 1, 13), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyRpdDevL2tpSessionInfoMaxPayload.setStatus('current')
docsRphyRpdDevL2tpSessionInfoPathPayload = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 1, 8, 1, 14), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyRpdDevL2tpSessionInfoPathPayload.setStatus('current')
docsRphyRpdDevL2tpSessionInfoRpdIfMtu = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 1, 8, 1, 15), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyRpdDevL2tpSessionInfoRpdIfMtu.setStatus('current')
docsRphyRpdDevL2tpSessionInfoCoreIfMtu = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 1, 8, 1, 16), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyRpdDevL2tpSessionInfoCoreIfMtu.setStatus('current')
docsRphyRpdDevL2tpSessionInfoErrorCode = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 1, 8, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("none", 1), ("invalidMACInterfaceValue", 2), ("invalidInterfaceValue", 3), ("noResourcesForInterfaceIndex", 4), ("l2tpv3Error", 5), ("ifAdminStatusSetToDown", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyRpdDevL2tpSessionInfoErrorCode.setStatus('current')
docsRphyRpdDevL2tpSessionInfoCreationTime = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 1, 8, 1, 18), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyRpdDevL2tpSessionInfoCreationTime.setStatus('current')
docsRphyRpdDevL2tpSessionInfoOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 1, 8, 1, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("other", 1), ("up", 2), ("down", 3), ("testing", 4), ("dormant", 5), ("notPresent", 6), ("lowerLayerDown", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyRpdDevL2tpSessionInfoOperStatus.setStatus('current')
docsRphyRpdDevL2tpSessionInfoLocalStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 1, 8, 1, 20), Bits().clone(namedValues=NamedValues(("other", 0), ("pwNotForwarding", 1), ("servicePwRxFault", 2), ("servicePwTxFault", 3), ("psnPwRxFault", 4), ("psnPwTxFault", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyRpdDevL2tpSessionInfoLocalStatus.setStatus('current')
docsRphyRpdDevL2tpSessionInfoLastChange = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 1, 8, 1, 21), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyRpdDevL2tpSessionInfoLastChange.setStatus('current')
docsRphyRpdDevL2tpSessionStatsTable = MibTable((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 1, 9), )
if mibBuilder.loadTexts: docsRphyRpdDevL2tpSessionStatsTable.setStatus('current')
docsRphyRpdDevL2tpSessionStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 1, 9, 1), )
docsRphyRpdDevL2tpSessionInfoEntry.registerAugmentions(("DOCS-RPHY-MIB", "docsRphyRpdDevL2tpSessionStatsEntry"))
docsRphyRpdDevL2tpSessionStatsEntry.setIndexNames(*docsRphyRpdDevL2tpSessionInfoEntry.getIndexNames())
if mibBuilder.loadTexts: docsRphyRpdDevL2tpSessionStatsEntry.setStatus('current')
docsRphyRpdDevL2tpSessionStatsOutOfSeqPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 1, 9, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyRpdDevL2tpSessionStatsOutOfSeqPkts.setStatus('current')
docsRphyRpdDevDiagStatusTable = MibTable((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 1, 10), )
if mibBuilder.loadTexts: docsRphyRpdDevDiagStatusTable.setStatus('current')
docsRphyRpdDevDiagStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 1, 10, 1), ).setIndexNames((0, "DOCS-RPHY-MIB", "docsRphyRpdDevInfoUniqueId"))
if mibBuilder.loadTexts: docsRphyRpdDevDiagStatusEntry.setStatus('current')
docsRphyRpdDevDiagStatusProbableCause = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 1, 10, 1, 1), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyRpdDevDiagStatusProbableCause.setStatus('current')
docsRphyRpdDevDiagStatusAdditionalText = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 1, 10, 1, 2), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyRpdDevDiagStatusAdditionalText.setStatus('current')
docsRphyRpdDevDiagStatusSeverityLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 1, 10, 1, 3), RphyEventSeverityType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyRpdDevDiagStatusSeverityLevel.setStatus('current')
docsRphyRpdDevDepiMcastSessionTable = MibTable((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 1, 11), )
if mibBuilder.loadTexts: docsRphyRpdDevDepiMcastSessionTable.setStatus('current')
docsRphyRpdDevDepiMcastSessionEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 1, 11, 1), ).setIndexNames((0, "DOCS-RPHY-MIB", "docsRphyRpdDevInfoUniqueId"), (0, "DOCS-RPHY-MIB", "docsRphyRpdDevDepiMcastSessionIpAddrType"), (0, "DOCS-RPHY-MIB", "docsRphyRpdDevDepiMcastSessionGrpIpAddr"), (0, "DOCS-RPHY-MIB", "docsRphyRpdDevDepiMcastSessionSrcIpAddr"))
if mibBuilder.loadTexts: docsRphyRpdDevDepiMcastSessionEntry.setStatus('current')
docsRphyRpdDevDepiMcastSessionIpAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 1, 11, 1, 1), InetAddressType())
if mibBuilder.loadTexts: docsRphyRpdDevDepiMcastSessionIpAddrType.setStatus('current')
docsRphyRpdDevDepiMcastSessionGrpIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 1, 11, 1, 2), InetAddress())
if mibBuilder.loadTexts: docsRphyRpdDevDepiMcastSessionGrpIpAddr.setStatus('current')
docsRphyRpdDevDepiMcastSessionSrcIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 1, 11, 1, 3), InetAddress())
if mibBuilder.loadTexts: docsRphyRpdDevDepiMcastSessionSrcIpAddr.setStatus('current')
docsRphyRpdDevDepiMcastSessionLocalLcceIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 1, 11, 1, 4), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyRpdDevDepiMcastSessionLocalLcceIpAddr.setStatus('current')
docsRphyRpdDevDepiMcastSessionRemoteLcceIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 1, 11, 1, 5), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyRpdDevDepiMcastSessionRemoteLcceIpAddr.setStatus('current')
docsRphyRpdDevDepiMcastSessionId = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 1, 11, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(2147483649, 2147549183))).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyRpdDevDepiMcastSessionId.setStatus('current')
docsRphyRpdDevDepiMcastSessionJoinTime = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 1, 11, 1, 7), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyRpdDevDepiMcastSessionJoinTime.setStatus('current')
docsRphyRpdDevEventLogTable = MibTable((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 1, 12), )
if mibBuilder.loadTexts: docsRphyRpdDevEventLogTable.setStatus('current')
docsRphyRpdDevEventLogEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 1, 12, 1), ).setIndexNames((0, "DOCS-RPHY-MIB", "docsRphyRpdDevInfoUniqueId"), (0, "DOCS-RPHY-MIB", "docsRphyRpdDevEventLogIndex"))
if mibBuilder.loadTexts: docsRphyRpdDevEventLogEntry.setStatus('current')
docsRphyRpdDevEventLogIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 1, 12, 1, 1), Unsigned32())
if mibBuilder.loadTexts: docsRphyRpdDevEventLogIndex.setStatus('current')
docsRphyRpdDevEventLogFirstTime = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 1, 12, 1, 2), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyRpdDevEventLogFirstTime.setStatus('current')
docsRphyRpdDevEventLogLastTime = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 1, 12, 1, 3), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyRpdDevEventLogLastTime.setStatus('current')
docsRphyRpdDevEventLogCounts = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 1, 12, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyRpdDevEventLogCounts.setStatus('current')
docsRphyRpdDevEventLogLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 1, 12, 1, 5), RphyEventSeverityType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyRpdDevEventLogLevel.setStatus('current')
docsRphyRpdDevEventLogId = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 1, 12, 1, 6), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyRpdDevEventLogId.setStatus('current')
docsRphyRpdDevEventLogText = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 1, 12, 1, 7), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyRpdDevEventLogText.setStatus('current')
docsRphyRpdDevOob551UsChanStatusTable = MibTable((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 1, 13), )
if mibBuilder.loadTexts: docsRphyRpdDevOob551UsChanStatusTable.setStatus('current')
docsRphyRpdDevOob551UsChanStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 1, 13, 1), ).setIndexNames((0, "DOCS-RPHY-MIB", "docsRphyRpdDevInfoUniqueId"), (0, "DOCS-RPHY-MIB", "docsRphyRpdDevOob551UsChanStatusRfPort"), (0, "DOCS-RPHY-MIB", "docsRphyRpdDevOob551UsChanStatusChannelId"))
if mibBuilder.loadTexts: docsRphyRpdDevOob551UsChanStatusEntry.setStatus('current')
docsRphyRpdDevOob551UsChanStatusRfPort = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 1, 13, 1, 1), Unsigned32())
if mibBuilder.loadTexts: docsRphyRpdDevOob551UsChanStatusRfPort.setStatus('current')
docsRphyRpdDevOob551UsChanStatusChannelId = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 1, 13, 1, 2), Unsigned32())
if mibBuilder.loadTexts: docsRphyRpdDevOob551UsChanStatusChannelId.setStatus('current')
docsRphyRpdDevOob551UsChanStatusNcIpAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 1, 13, 1, 3), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyRpdDevOob551UsChanStatusNcIpAddrType.setStatus('current')
docsRphyRpdDevOob551UsChanStatusNcIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 1, 13, 1, 4), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyRpdDevOob551UsChanStatusNcIpAddr.setStatus('current')
docsRphyRpdDevOob551UsChanStatusArpdSrcIpAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 1, 13, 1, 5), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyRpdDevOob551UsChanStatusArpdSrcIpAddrType.setStatus('current')
docsRphyRpdDevOob551UsChanStatusArpdSrcIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 1, 13, 1, 6), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyRpdDevOob551UsChanStatusArpdSrcIpAddr.setStatus('current')
docsRphyRpdDevOob551UsChanStatusPerfectCellsRcvd = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 1, 13, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyRpdDevOob551UsChanStatusPerfectCellsRcvd.setStatus('current')
docsRphyRpdDevOob551UsChanStatusCorrectedCellsRcvd = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 1, 13, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyRpdDevOob551UsChanStatusCorrectedCellsRcvd.setStatus('current')
docsRphyRpdDevOob551UsChanStatusUncorrectableCellsRcvd = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 1, 13, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyRpdDevOob551UsChanStatusUncorrectableCellsRcvd.setStatus('current')
docsRphyRpdDevOob551UsChanStatusTotalCellsRcvd = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 1, 13, 1, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyRpdDevOob551UsChanStatusTotalCellsRcvd.setStatus('current')
docsRphyRpdDevOob551UsChanStatusPwrLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 1, 13, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyRpdDevOob551UsChanStatusPwrLevel.setStatus('current')
docsRphyRpdDevOob551UsChanStatusMaxPwrLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 1, 13, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyRpdDevOob551UsChanStatusMaxPwrLevel.setStatus('current')
docsRphyRpdDevOob551UsChanStatusMinPwrLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 1, 13, 1, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyRpdDevOob551UsChanStatusMinPwrLevel.setStatus('current')
docsRphyRpdDevOob551UsChanStatusCounterDiscontinuityTime = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 1, 13, 1, 14), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyRpdDevOob551UsChanStatusCounterDiscontinuityTime.setStatus('current')
docsRphyRpdDevCrashDataFileStatusTable = MibTable((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 1, 14), )
if mibBuilder.loadTexts: docsRphyRpdDevCrashDataFileStatusTable.setStatus('current')
docsRphyRpdDevCrashDataFileStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 1, 14, 1), ).setIndexNames((0, "DOCS-RPHY-MIB", "docsRphyRpdDevInfoUniqueId"), (0, "DOCS-RPHY-MIB", "docsRphyRpdDevCrashDataFileStatusIndex"))
if mibBuilder.loadTexts: docsRphyRpdDevCrashDataFileStatusEntry.setStatus('current')
docsRphyRpdDevCrashDataFileStatusIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 1, 14, 1, 1), Unsigned32())
if mibBuilder.loadTexts: docsRphyRpdDevCrashDataFileStatusIndex.setStatus('current')
docsRphyRpdDevCrashDataFileStatusFilename = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 1, 14, 1, 2), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyRpdDevCrashDataFileStatusFilename.setStatus('current')
docsRphyRpdDevCrashDataFileStatusFileStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 1, 14, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("other", 1), ("availableForUpload", 2), ("uploadInProgress", 3), ("uploadCompleted", 4), ("uploadPending", 5), ("uploadCancelled", 6), ("error", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyRpdDevCrashDataFileStatusFileStatus.setStatus('current')
docsRphyRpdDevUsSignalQualityTable = MibTable((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 1, 15), )
if mibBuilder.loadTexts: docsRphyRpdDevUsSignalQualityTable.setStatus('current')
docsRphyRpdDevUsSignalQualityEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 1, 15, 1), ).setIndexNames((0, "DOCS-RPHY-MIB", "docsRphyRpdDevInfoUniqueId"), (0, "DOCS-RPHY-MIB", "docsRphyRpdDevUsSignalQualityRfPort"), (0, "DOCS-RPHY-MIB", "docsRphyRpdDevUsSignalQualityChannelIfIndex"))
if mibBuilder.loadTexts: docsRphyRpdDevUsSignalQualityEntry.setStatus('current')
docsRphyRpdDevUsSignalQualityRfPort = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 1, 15, 1, 1), Unsigned32())
if mibBuilder.loadTexts: docsRphyRpdDevUsSignalQualityRfPort.setStatus('current')
docsRphyRpdDevUsSignalQualityChannelIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 1, 15, 1, 2), InterfaceIndex())
if mibBuilder.loadTexts: docsRphyRpdDevUsSignalQualityChannelIfIndex.setStatus('current')
docsRphyRpdDevUsSignalQualityRxMer = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 1, 15, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setUnits('TenthdB').setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyRpdDevUsSignalQualityRxMer.setStatus('current')
docsRphyRpdDevUsSignalQualityRxMerSamples = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 1, 15, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyRpdDevUsSignalQualityRxMerSamples.setStatus('current')
docsRphyRpdDevUsSignalQualityUnerroreds = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 1, 15, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyRpdDevUsSignalQualityUnerroreds.setStatus('current')
docsRphyRpdDevUsSignalQualityCorrecteds = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 1, 15, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyRpdDevUsSignalQualityCorrecteds.setStatus('current')
docsRphyRpdDevUsSignalQualityUncorrectables = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 1, 15, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyRpdDevUsSignalQualityUncorrectables.setStatus('current')
docsRphyRpdIfPhysEntityTable = MibTable((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 2, 1), )
if mibBuilder.loadTexts: docsRphyRpdIfPhysEntityTable.setStatus('current')
docsRphyRpdIfPhysEntityEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 2, 1, 1), ).setIndexNames((0, "DOCS-RPHY-MIB", "docsRphyRpdDevInfoUniqueId"), (0, "DOCS-RPHY-MIB", "docsRphyRpdIfPhysEntityIndex"))
if mibBuilder.loadTexts: docsRphyRpdIfPhysEntityEntry.setStatus('current')
docsRphyRpdIfPhysEntityIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 2, 1, 1, 1), PhysicalIndex())
if mibBuilder.loadTexts: docsRphyRpdIfPhysEntityIndex.setStatus('current')
docsRphyRpdIfPhysEntityDescr = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 2, 1, 1, 2), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyRpdIfPhysEntityDescr.setStatus('current')
docsRphyRpdIfPhysEntityVendorType = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 2, 1, 1, 3), AutonomousType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyRpdIfPhysEntityVendorType.setStatus('current')
docsRphyRpdIfPhysEntityContainedIn = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 2, 1, 1, 4), PhysicalIndexOrZero()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyRpdIfPhysEntityContainedIn.setStatus('current')
docsRphyRpdIfPhysEntityClass = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 2, 1, 1, 5), IANAPhysicalClass()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyRpdIfPhysEntityClass.setStatus('current')
docsRphyRpdIfPhysEntityParentRelPos = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 2, 1, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyRpdIfPhysEntityParentRelPos.setStatus('current')
docsRphyRpdIfPhysEntityName = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 2, 1, 1, 7), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyRpdIfPhysEntityName.setStatus('current')
docsRphyRpdIfPhysEntityHardwareRev = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 2, 1, 1, 8), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyRpdIfPhysEntityHardwareRev.setStatus('current')
docsRphyRpdIfPhysEntityFirmwareRev = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 2, 1, 1, 9), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyRpdIfPhysEntityFirmwareRev.setStatus('current')
docsRphyRpdIfPhysEntitySoftwareRev = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 2, 1, 1, 10), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyRpdIfPhysEntitySoftwareRev.setStatus('current')
docsRphyRpdIfPhysEntitySerialNum = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 2, 1, 1, 11), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyRpdIfPhysEntitySerialNum.setStatus('current')
docsRphyRpdIfPhysEntityMfgName = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 2, 1, 1, 12), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyRpdIfPhysEntityMfgName.setStatus('current')
docsRphyRpdIfPhysEntityModelName = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 2, 1, 1, 13), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyRpdIfPhysEntityModelName.setStatus('current')
docsRphyRpdIfPhysEntityAlias = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 2, 1, 1, 14), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyRpdIfPhysEntityAlias.setStatus('current')
docsRphyRpdIfPhysEntityAssetID = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 2, 1, 1, 15), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyRpdIfPhysEntityAssetID.setStatus('current')
docsRphyRpdIfPhysEntityIsFRU = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 2, 1, 1, 16), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyRpdIfPhysEntityIsFRU.setStatus('current')
docsRphyRpdIfPhysEntityMfgDate = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 2, 1, 1, 17), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyRpdIfPhysEntityMfgDate.setStatus('current')
docsRphyRpdIfPhysEntityUris = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 2, 1, 1, 18), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyRpdIfPhysEntityUris.setStatus('current')
docsRphyRpdIfPhysEntityUUID = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 2, 1, 1, 19), UUIDorZero()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyRpdIfPhysEntityUUID.setStatus('current')
docsRphyRpdIfPhysEntityCoreIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 2, 1, 1, 20), InterfaceIndexOrZero()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyRpdIfPhysEntityCoreIfIndex.setStatus('current')
docsRphyRpdIfPhysEntSensorTable = MibTable((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 2, 2), )
if mibBuilder.loadTexts: docsRphyRpdIfPhysEntSensorTable.setStatus('current')
docsRphyRpdIfPhysEntSensorEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 2, 2, 1), ).setIndexNames((0, "DOCS-RPHY-MIB", "docsRphyRpdDevInfoUniqueId"), (0, "DOCS-RPHY-MIB", "docsRphyRpdIfPhysEntityIndex"))
if mibBuilder.loadTexts: docsRphyRpdIfPhysEntSensorEntry.setStatus('current')
docsRphyRpdIfPhysEntSensorType = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 2, 2, 1, 1), EntitySensorDataType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyRpdIfPhysEntSensorType.setStatus('current')
docsRphyRpdIfPhysEntSensorScale = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 2, 2, 1, 2), EntitySensorDataScale()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyRpdIfPhysEntSensorScale.setStatus('current')
docsRphyRpdIfPhysEntSensorPrecision = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 2, 2, 1, 3), EntitySensorPrecision()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyRpdIfPhysEntSensorPrecision.setStatus('current')
docsRphyRpdIfPhysEntSensorValue = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 2, 2, 1, 4), EntitySensorValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyRpdIfPhysEntSensorValue.setStatus('current')
docsRphyRpdIfPhysEntSensorOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 2, 2, 1, 5), EntitySensorStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyRpdIfPhysEntSensorOperStatus.setStatus('current')
docsRphyRpdIfPhysEntSensorUnitsDisplay = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 2, 2, 1, 6), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyRpdIfPhysEntSensorUnitsDisplay.setStatus('current')
docsRphyRpdIfPhysEntSensorValueTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 2, 2, 1, 7), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyRpdIfPhysEntSensorValueTimeStamp.setStatus('current')
docsRphyRpdIfPhysEntSensorValueUpdateRate = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 2, 2, 1, 8), Unsigned32()).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyRpdIfPhysEntSensorValueUpdateRate.setStatus('current')
docsRphyRpdIfEnetTable = MibTable((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 2, 3), )
if mibBuilder.loadTexts: docsRphyRpdIfEnetTable.setStatus('current')
docsRphyRpdIfEnetEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 2, 3, 1), ).setIndexNames((0, "DOCS-RPHY-MIB", "docsRphyRpdDevInfoUniqueId"), (0, "DOCS-RPHY-MIB", "docsRphyRpdIfEnetPortIndex"))
if mibBuilder.loadTexts: docsRphyRpdIfEnetEntry.setStatus('current')
docsRphyRpdIfEnetPortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 2, 3, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255)))
if mibBuilder.loadTexts: docsRphyRpdIfEnetPortIndex.setStatus('current')
docsRphyRpdIfEnetDescr = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 2, 3, 1, 2), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyRpdIfEnetDescr.setStatus('current')
docsRphyRpdIfEnetName = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 2, 3, 1, 3), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyRpdIfEnetName.setStatus('current')
docsRphyRpdIfEnetAlias = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 2, 3, 1, 4), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyRpdIfEnetAlias.setStatus('current')
docsRphyRpdIfEnetType = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 2, 3, 1, 5), IANAifType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyRpdIfEnetType.setStatus('current')
docsRphyRpdIfEnetMtu = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 2, 3, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyRpdIfEnetMtu.setStatus('current')
docsRphyRpdIfEnetPhysAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 2, 3, 1, 7), PhysAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyRpdIfEnetPhysAddress.setStatus('current')
docsRphyRpdIfEnetAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 2, 3, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("testing", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyRpdIfEnetAdminStatus.setStatus('current')
docsRphyRpdIfEnetOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 2, 3, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("testing", 3), ("unknown", 4), ("dormant", 5), ("notPresent", 6), ("lowerLayerDown", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyRpdIfEnetOperStatus.setStatus('current')
docsRphyRpdIfEnetLastChange = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 2, 3, 1, 10), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyRpdIfEnetLastChange.setStatus('current')
docsRphyRpdIfEnetLinkUpDownTrapEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 2, 3, 1, 11), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyRpdIfEnetLinkUpDownTrapEnable.setStatus('current')
docsRphyRpdIfEnetHighSpeed = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 2, 3, 1, 12), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyRpdIfEnetHighSpeed.setStatus('current')
docsRphyRpdIfEnetPromiscuousMode = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 2, 3, 1, 13), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyRpdIfEnetPromiscuousMode.setStatus('current')
docsRphyRpdIfEnetConnectorPresent = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 2, 3, 1, 14), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyRpdIfEnetConnectorPresent.setStatus('current')
docsRphyRpdIfEnetStatsTable = MibTable((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 2, 4), )
if mibBuilder.loadTexts: docsRphyRpdIfEnetStatsTable.setStatus('current')
docsRphyRpdIfEnetStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 2, 4, 1), )
docsRphyRpdIfEnetEntry.registerAugmentions(("DOCS-RPHY-MIB", "docsRphyRpdIfEnetStatsEntry"))
docsRphyRpdIfEnetStatsEntry.setIndexNames(*docsRphyRpdIfEnetEntry.getIndexNames())
if mibBuilder.loadTexts: docsRphyRpdIfEnetStatsEntry.setStatus('current')
docsRphyRpdIfEnetStatsInOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 2, 4, 1, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyRpdIfEnetStatsInOctets.setStatus('current')
docsRphyRpdIfEnetStatsOutOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 2, 4, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyRpdIfEnetStatsOutOctets.setStatus('current')
docsRphyRpdIfEnetStatsInFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 2, 4, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyRpdIfEnetStatsInFrames.setStatus('current')
docsRphyRpdIfEnetStatsOutFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 2, 4, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyRpdIfEnetStatsOutFrames.setStatus('current')
docsRphyRpdIfEnetStatsInUnicastOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 2, 4, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyRpdIfEnetStatsInUnicastOctets.setStatus('current')
docsRphyRpdIfEnetStatsOutUnicastOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 2, 4, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyRpdIfEnetStatsOutUnicastOctets.setStatus('current')
docsRphyRpdIfEnetStatsInUnicastFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 2, 4, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyRpdIfEnetStatsInUnicastFrames.setStatus('current')
docsRphyRpdIfEnetStatsOutUnicastFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 2, 4, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyRpdIfEnetStatsOutUnicastFrames.setStatus('current')
docsRphyRpdIfEnetStatsInMulticastOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 2, 4, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyRpdIfEnetStatsInMulticastOctets.setStatus('current')
docsRphyRpdIfEnetStatsOutMulticastOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 2, 4, 1, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyRpdIfEnetStatsOutMulticastOctets.setStatus('current')
docsRphyRpdIfEnetStatsInMulticastFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 2, 4, 1, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyRpdIfEnetStatsInMulticastFrames.setStatus('current')
docsRphyRpdIfEnetStatsOutMulticastFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 2, 4, 1, 12), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyRpdIfEnetStatsOutMulticastFrames.setStatus('current')
docsRphyRpdIfEnetStatsInBroadcastOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 2, 4, 1, 13), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyRpdIfEnetStatsInBroadcastOctets.setStatus('current')
docsRphyRpdIfEnetStatsOutBroadcastOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 2, 4, 1, 14), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyRpdIfEnetStatsOutBroadcastOctets.setStatus('current')
docsRphyRpdIfEnetStatsInBroadcastFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 2, 4, 1, 15), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyRpdIfEnetStatsInBroadcastFrames.setStatus('current')
docsRphyRpdIfEnetStatsOutBroadcastFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 2, 4, 1, 16), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyRpdIfEnetStatsOutBroadcastFrames.setStatus('current')
docsRphyRpdIfEnetStatsInDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 2, 4, 1, 17), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyRpdIfEnetStatsInDiscards.setStatus('current')
docsRphyRpdIfEnetStatsOutDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 2, 4, 1, 18), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyRpdIfEnetStatsOutDiscards.setStatus('current')
docsRphyRpdIfEnetStatsInErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 2, 4, 1, 19), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyRpdIfEnetStatsInErrors.setStatus('current')
docsRphyRpdIfEnetStatsOutErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 2, 4, 1, 20), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyRpdIfEnetStatsOutErrors.setStatus('current')
docsRphyRpdIfEnetStatsInUnknownProtos = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 2, 4, 1, 21), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyRpdIfEnetStatsInUnknownProtos.setStatus('current')
docsRphyRpdIfEnetStatsCounterDiscontinuityTime = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 2, 4, 1, 22), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyRpdIfEnetStatsCounterDiscontinuityTime.setStatus('current')
docsRphyRpdIfRpdEnetToCoreEntityMapTable = MibTable((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 2, 5), )
if mibBuilder.loadTexts: docsRphyRpdIfRpdEnetToCoreEntityMapTable.setStatus('current')
docsRphyRpdIfRpdEnetToCoreEntityMapEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 2, 5, 1), ).setIndexNames((0, "DOCS-RPHY-MIB", "docsRphyRpdDevInfoUniqueId"), (0, "DOCS-RPHY-MIB", "docsRphyRpdIfEnetPortIndex"))
if mibBuilder.loadTexts: docsRphyRpdIfRpdEnetToCoreEntityMapEntry.setStatus('current')
docsRphyRpdIfRpdEnetToCoreEntityMapEntityIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 2, 5, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyRpdIfRpdEnetToCoreEntityMapEntityIndex.setStatus('current')
docsRphyRpdIfCoreToRpdMapTable = MibTable((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 2, 6), )
if mibBuilder.loadTexts: docsRphyRpdIfCoreToRpdMapTable.setStatus('current')
docsRphyRpdIfCoreToRpdMapEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 2, 6, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: docsRphyRpdIfCoreToRpdMapEntry.setStatus('current')
docsRphyRpdIfCoreToRpdMapRpdUniqueId = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 2, 6, 1, 1), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyRpdIfCoreToRpdMapRpdUniqueId.setStatus('current')
docsRphyRpdIfCoreToRpdMapRpdRfPortDirection = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 2, 6, 1, 2), IfDirection()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyRpdIfCoreToRpdMapRpdRfPortDirection.setStatus('current')
docsRphyRpdIfCoreToRpdMapRpdRfPortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 2, 6, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyRpdIfCoreToRpdMapRpdRfPortIndex.setStatus('current')
docsRphyRpdIfCoreToRpdMapRpdRfChanType = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 2, 6, 1, 4), RphyChannelType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyRpdIfCoreToRpdMapRpdRfChanType.setStatus('current')
docsRphyRpdIfCoreToRpdMapRpdRfChanIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 2, 6, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyRpdIfCoreToRpdMapRpdRfChanIndex.setStatus('current')
docsRphyRpdIfRpdToCoreMapTable = MibTable((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 2, 7), )
if mibBuilder.loadTexts: docsRphyRpdIfRpdToCoreMapTable.setStatus('current')
docsRphyRpdIfRpdToCoreMapEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 2, 7, 1), ).setIndexNames((0, "DOCS-RPHY-MIB", "docsRphyRpdDevInfoUniqueId"), (0, "DOCS-RPHY-MIB", "docsRphyRpdIfRpdToCoreMapRpdRfPortDirection"), (0, "DOCS-RPHY-MIB", "docsRphyRpdIfRpdToCoreMapRpdRfPortIndex"), (0, "DOCS-RPHY-MIB", "docsRphyRpdIfRpdToCoreMapRpdRfChanType"), (0, "DOCS-RPHY-MIB", "docsRphyRpdIfRpdToCoreMapRpdRfChanIndex"))
if mibBuilder.loadTexts: docsRphyRpdIfRpdToCoreMapEntry.setStatus('current')
docsRphyRpdIfRpdToCoreMapRpdRfPortDirection = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 2, 7, 1, 1), IfDirection())
if mibBuilder.loadTexts: docsRphyRpdIfRpdToCoreMapRpdRfPortDirection.setStatus('current')
docsRphyRpdIfRpdToCoreMapRpdRfPortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 2, 7, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255)))
if mibBuilder.loadTexts: docsRphyRpdIfRpdToCoreMapRpdRfPortIndex.setStatus('current')
docsRphyRpdIfRpdToCoreMapRpdRfChanType = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 2, 7, 1, 3), RphyChannelType())
if mibBuilder.loadTexts: docsRphyRpdIfRpdToCoreMapRpdRfChanType.setStatus('current')
docsRphyRpdIfRpdToCoreMapRpdRfChanIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 2, 7, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255)))
if mibBuilder.loadTexts: docsRphyRpdIfRpdToCoreMapRpdRfChanIndex.setStatus('current')
docsRphyRpdIfRpdToCoreMapCoreIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 2, 7, 1, 5), InterfaceIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyRpdIfRpdToCoreMapCoreIfIndex.setStatus('current')
docsRphyRpdIpv4GrpTable = MibTable((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 3, 1), )
if mibBuilder.loadTexts: docsRphyRpdIpv4GrpTable.setStatus('current')
docsRphyRpdIpv4GrpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 3, 1, 1), ).setIndexNames((0, "DOCS-RPHY-MIB", "docsRphyRpdDevInfoUniqueId"))
if mibBuilder.loadTexts: docsRphyRpdIpv4GrpEntry.setStatus('current')
docsRphyRpdIpv4GrpDefaultTTL = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 3, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyRpdIpv4GrpDefaultTTL.setStatus('current')
docsRphyRpdIpv4GrpInterfaceTableLastChange = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 3, 1, 1, 2), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyRpdIpv4GrpInterfaceTableLastChange.setStatus('current')
docsRphyRpdIpv6GrpTable = MibTable((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 3, 2), )
if mibBuilder.loadTexts: docsRphyRpdIpv6GrpTable.setStatus('current')
docsRphyRpdIpv6GrpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 3, 2, 1), ).setIndexNames((0, "DOCS-RPHY-MIB", "docsRphyRpdDevInfoUniqueId"))
if mibBuilder.loadTexts: docsRphyRpdIpv6GrpEntry.setStatus('current')
docsRphyRpdIpv6GrpIpDefaultHopLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 3, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyRpdIpv6GrpIpDefaultHopLimit.setStatus('current')
docsRphyRpdIpv6GrpInterfaceTableLastChange = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 3, 2, 1, 2), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyRpdIpv6GrpInterfaceTableLastChange.setStatus('current')
docsRphyRpdIpv6GrpIfStatsTableLastChange = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 3, 2, 1, 3), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyRpdIpv6GrpIfStatsTableLastChange.setStatus('current')
docsRphyRpdIpv4InterfaceTable = MibTable((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 3, 3), )
if mibBuilder.loadTexts: docsRphyRpdIpv4InterfaceTable.setStatus('current')
docsRphyRpdIpv4InterfaceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 3, 3, 1), ).setIndexNames((0, "DOCS-RPHY-MIB", "docsRphyRpdDevInfoUniqueId"), (0, "DOCS-RPHY-MIB", "docsRphyRpdIfEnetPortIndex"))
if mibBuilder.loadTexts: docsRphyRpdIpv4InterfaceEntry.setStatus('current')
docsRphyRpdIpv4InterfaceEnableStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 3, 3, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("up", 1), ("down", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyRpdIpv4InterfaceEnableStatus.setStatus('current')
docsRphyRpdIpv4InterfaceRetransmitTime = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 3, 3, 1, 2), Unsigned32()).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyRpdIpv4InterfaceRetransmitTime.setStatus('current')
docsRphyRpdIpv6InterfaceTable = MibTable((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 3, 4), )
if mibBuilder.loadTexts: docsRphyRpdIpv6InterfaceTable.setStatus('current')
docsRphyRpdIpv6InterfaceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 3, 4, 1), ).setIndexNames((0, "DOCS-RPHY-MIB", "docsRphyRpdDevInfoUniqueId"), (0, "DOCS-RPHY-MIB", "docsRphyRpdIfEnetPortIndex"))
if mibBuilder.loadTexts: docsRphyRpdIpv6InterfaceEntry.setStatus('current')
docsRphyRpdIpv6InterfaceIdentifier = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 3, 4, 1, 1), Ipv6AddressIfIdentifierTC()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyRpdIpv6InterfaceIdentifier.setStatus('current')
docsRphyRpdIpv6InterfaceEnableStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 3, 4, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("up", 1), ("down", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyRpdIpv6InterfaceEnableStatus.setStatus('current')
docsRphyRpdIpv6InterfaceReachableTime = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 3, 4, 1, 3), Unsigned32()).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyRpdIpv6InterfaceReachableTime.setStatus('current')
docsRphyRpdIpv6InterfaceRetransmitTime = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 3, 4, 1, 4), Unsigned32()).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyRpdIpv6InterfaceRetransmitTime.setStatus('current')
docsRphyRpdIpIfStatsTable = MibTable((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 3, 5), )
if mibBuilder.loadTexts: docsRphyRpdIpIfStatsTable.setStatus('current')
docsRphyRpdIpIfStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 3, 5, 1), ).setIndexNames((0, "DOCS-RPHY-MIB", "docsRphyRpdDevInfoUniqueId"), (0, "DOCS-RPHY-MIB", "docsRphyRpdIpIfStatsIPVersion"), (0, "DOCS-RPHY-MIB", "docsRphyRpdIfEnetPortIndex"))
if mibBuilder.loadTexts: docsRphyRpdIpIfStatsEntry.setStatus('current')
docsRphyRpdIpIfStatsIPVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 3, 5, 1, 1), InetVersion())
if mibBuilder.loadTexts: docsRphyRpdIpIfStatsIPVersion.setStatus('current')
docsRphyRpdIpIfStatsInReceives = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 3, 5, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyRpdIpIfStatsInReceives.setStatus('current')
docsRphyRpdIpIfStatsInOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 3, 5, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyRpdIpIfStatsInOctets.setStatus('current')
docsRphyRpdIpIfStatsInHdrErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 3, 5, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyRpdIpIfStatsInHdrErrors.setStatus('current')
docsRphyRpdIpIfStatsInNoRoutes = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 3, 5, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyRpdIpIfStatsInNoRoutes.setStatus('current')
docsRphyRpdIpIfStatsInAddrErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 3, 5, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyRpdIpIfStatsInAddrErrors.setStatus('current')
docsRphyRpdIpIfStatsInUnknownProtos = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 3, 5, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyRpdIpIfStatsInUnknownProtos.setStatus('current')
docsRphyRpdIpIfStatsInTruncatedPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 3, 5, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyRpdIpIfStatsInTruncatedPkts.setStatus('current')
docsRphyRpdIpIfStatsInDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 3, 5, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyRpdIpIfStatsInDiscards.setStatus('current')
docsRphyRpdIpIfStatsInDelivers = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 3, 5, 1, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyRpdIpIfStatsInDelivers.setStatus('current')
docsRphyRpdIpIfStatsOutRequests = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 3, 5, 1, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyRpdIpIfStatsOutRequests.setStatus('current')
docsRphyRpdIpIfStatsOutDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 3, 5, 1, 12), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyRpdIpIfStatsOutDiscards.setStatus('current')
docsRphyRpdIpIfStatsOutTransmits = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 3, 5, 1, 13), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyRpdIpIfStatsOutTransmits.setStatus('current')
docsRphyRpdIpIfStatsOutOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 3, 5, 1, 14), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyRpdIpIfStatsOutOctets.setStatus('current')
docsRphyRpdIpIfStatsInMcastPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 3, 5, 1, 15), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyRpdIpIfStatsInMcastPkts.setStatus('current')
docsRphyRpdIpIfStatsInMcastOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 3, 5, 1, 16), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyRpdIpIfStatsInMcastOctets.setStatus('current')
docsRphyRpdIpIfStatsOutMcastPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 3, 5, 1, 17), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyRpdIpIfStatsOutMcastPkts.setStatus('current')
docsRphyRpdIpIfStatsOutMcastOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 3, 5, 1, 18), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyRpdIpIfStatsOutMcastOctets.setStatus('current')
docsRphyRpdIpIfStatsDiscontinuityTime = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 3, 5, 1, 19), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyRpdIpIfStatsDiscontinuityTime.setStatus('current')
docsRphyRpdIpIfStatsRefreshRate = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 3, 5, 1, 20), Unsigned32()).setUnits('milli-seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyRpdIpIfStatsRefreshRate.setStatus('current')
docsRphyRpdIpAddressTable = MibTable((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 3, 6), )
if mibBuilder.loadTexts: docsRphyRpdIpAddressTable.setStatus('current')
docsRphyRpdIpAddressEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 3, 6, 1), ).setIndexNames((0, "DOCS-RPHY-MIB", "docsRphyRpdDevInfoUniqueId"), (0, "DOCS-RPHY-MIB", "docsRphyRpdIpAddressAddrType"), (0, "DOCS-RPHY-MIB", "docsRphyRpdIpAddressAddr"))
if mibBuilder.loadTexts: docsRphyRpdIpAddressEntry.setStatus('current')
docsRphyRpdIpAddressAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 3, 6, 1, 1), InetAddressType())
if mibBuilder.loadTexts: docsRphyRpdIpAddressAddrType.setStatus('current')
docsRphyRpdIpAddressAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 3, 6, 1, 2), InetAddress())
if mibBuilder.loadTexts: docsRphyRpdIpAddressAddr.setStatus('current')
docsRphyRpdIpAddressEnetPortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 3, 6, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyRpdIpAddressEnetPortIndex.setStatus('current')
docsRphyRpdIpAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 3, 6, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("unicast", 1), ("anycast", 2), ("broadcast", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyRpdIpAddressType.setStatus('current')
docsRphyRpdIpAddressPrefixLen = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 3, 6, 1, 5), InetAddressPrefixLength()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyRpdIpAddressPrefixLen.setStatus('current')
docsRphyRpdIpAddressOrigin = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 3, 6, 1, 6), IpAddressOriginTC()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyRpdIpAddressOrigin.setStatus('current')
docsRphyRpdIpAddressStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 3, 6, 1, 7), IpAddressStatusTC()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyRpdIpAddressStatus.setStatus('current')
docsRphyRpdIpAddressCreated = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 3, 6, 1, 8), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyRpdIpAddressCreated.setStatus('current')
docsRphyRpdIpAddressLastChanged = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 3, 6, 1, 9), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyRpdIpAddressLastChanged.setStatus('current')
docsRphyRpdIpNetToPhysicalTable = MibTable((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 3, 7), )
if mibBuilder.loadTexts: docsRphyRpdIpNetToPhysicalTable.setStatus('current')
docsRphyRpdIpNetToPhysicalEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 3, 7, 1), ).setIndexNames((0, "DOCS-RPHY-MIB", "docsRphyRpdDevInfoUniqueId"), (0, "DOCS-RPHY-MIB", "docsRphyRpdIfEnetPortIndex"), (0, "DOCS-RPHY-MIB", "docsRphyRpdIpNetToPhysicalNetAddressType"), (0, "DOCS-RPHY-MIB", "docsRphyRpdIpNetToPhysicalNetAddress"))
if mibBuilder.loadTexts: docsRphyRpdIpNetToPhysicalEntry.setStatus('current')
docsRphyRpdIpNetToPhysicalNetAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 3, 7, 1, 1), InetAddressType())
if mibBuilder.loadTexts: docsRphyRpdIpNetToPhysicalNetAddressType.setStatus('current')
docsRphyRpdIpNetToPhysicalNetAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 3, 7, 1, 2), InetAddress())
if mibBuilder.loadTexts: docsRphyRpdIpNetToPhysicalNetAddress.setStatus('current')
docsRphyRpdIpNetToPhysicalPhysAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 3, 7, 1, 3), PhysAddress().subtype(subtypeSpec=ValueSizeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyRpdIpNetToPhysicalPhysAddress.setStatus('current')
docsRphyRpdIpNetToPhysicalLastUpdated = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 3, 7, 1, 4), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyRpdIpNetToPhysicalLastUpdated.setStatus('current')
docsRphyRpdIpNetToPhysicalType = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 3, 7, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("other", 1), ("invalid", 2), ("dynamic", 3), ("static", 4), ("local", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyRpdIpNetToPhysicalType.setStatus('current')
docsRphyRpdIpNetToPhysicalState = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 3, 7, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("reachable", 1), ("stale", 2), ("delay", 3), ("probe", 4), ("invalid", 5), ("unknown", 6), ("incomplete", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyRpdIpNetToPhysicalState.setStatus('current')
docsRphyRpdIpDefaultRouterTable = MibTable((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 3, 8), )
if mibBuilder.loadTexts: docsRphyRpdIpDefaultRouterTable.setStatus('current')
docsRphyRpdIpDefaultRouterEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 3, 8, 1), ).setIndexNames((0, "DOCS-RPHY-MIB", "docsRphyRpdDevInfoUniqueId"), (0, "DOCS-RPHY-MIB", "docsRphyRpdIpDefaultRouterAddressType"), (0, "DOCS-RPHY-MIB", "docsRphyRpdIpDefaultRouterAddress"), (0, "DOCS-RPHY-MIB", "docsRphyRpdIfEnetPortIndex"))
if mibBuilder.loadTexts: docsRphyRpdIpDefaultRouterEntry.setStatus('current')
docsRphyRpdIpDefaultRouterAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 3, 8, 1, 1), InetAddressType())
if mibBuilder.loadTexts: docsRphyRpdIpDefaultRouterAddressType.setStatus('current')
docsRphyRpdIpDefaultRouterAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 3, 8, 1, 2), InetAddress())
if mibBuilder.loadTexts: docsRphyRpdIpDefaultRouterAddress.setStatus('current')
docsRphyRpdIpDefaultRouterLifetime = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 3, 8, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyRpdIpDefaultRouterLifetime.setStatus('current')
docsRphyRpdIpDefaultRouterPreference = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 3, 8, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-2, -1, 0, 1))).clone(namedValues=NamedValues(("reserved", -2), ("low", -1), ("medium", 0), ("high", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyRpdIpDefaultRouterPreference.setStatus('current')
docsRphyRpdIpIcmpMsgStatsTable = MibTable((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 3, 9, 1), )
if mibBuilder.loadTexts: docsRphyRpdIpIcmpMsgStatsTable.setStatus('current')
docsRphyRpdIpIcmpMsgStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 3, 9, 1, 1), ).setIndexNames((0, "DOCS-RPHY-MIB", "docsRphyRpdDevInfoUniqueId"), (0, "DOCS-RPHY-MIB", "docsRphyRpdIpIcmpMsgStatsIPVersion"), (0, "DOCS-RPHY-MIB", "docsRphyRpdIpIcmpMsgStatsType"))
if mibBuilder.loadTexts: docsRphyRpdIpIcmpMsgStatsEntry.setStatus('current')
docsRphyRpdIpIcmpMsgStatsIPVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 3, 9, 1, 1, 1), InetVersion())
if mibBuilder.loadTexts: docsRphyRpdIpIcmpMsgStatsIPVersion.setStatus('current')
docsRphyRpdIpIcmpMsgStatsType = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 3, 9, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255)))
if mibBuilder.loadTexts: docsRphyRpdIpIcmpMsgStatsType.setStatus('current')
docsRphyRpdIpIcmpMsgStatsInPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 3, 9, 1, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyRpdIpIcmpMsgStatsInPkts.setStatus('current')
docsRphyRpdIpIcmpMsgStatsOutPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 3, 9, 1, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyRpdIpIcmpMsgStatsOutPkts.setStatus('current')
docsRphyCcapL2tpSessionInfoTable = MibTable((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 4, 1), )
if mibBuilder.loadTexts: docsRphyCcapL2tpSessionInfoTable.setStatus('current')
docsRphyCcapL2tpSessionInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 4, 1, 1), ).setIndexNames((0, "DOCS-RPHY-MIB", "docsRphyCcapL2tpSessionInfoLocalLcceIpAddrType"), (0, "DOCS-RPHY-MIB", "docsRphyCcapL2tpSessionInfoLocalLcceIpAddr"), (0, "DOCS-RPHY-MIB", "docsRphyCcapL2tpSessionInfoLocalId"))
if mibBuilder.loadTexts: docsRphyCcapL2tpSessionInfoEntry.setStatus('current')
docsRphyCcapL2tpSessionInfoLocalLcceIpAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 4, 1, 1, 1), InetAddressType())
if mibBuilder.loadTexts: docsRphyCcapL2tpSessionInfoLocalLcceIpAddrType.setStatus('current')
docsRphyCcapL2tpSessionInfoLocalLcceIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 4, 1, 1, 2), InetAddress())
if mibBuilder.loadTexts: docsRphyCcapL2tpSessionInfoLocalLcceIpAddr.setStatus('current')
docsRphyCcapL2tpSessionInfoLocalId = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 4, 1, 1, 3), Unsigned32())
if mibBuilder.loadTexts: docsRphyCcapL2tpSessionInfoLocalId.setStatus('current')
docsRphyCcapL2tpSessionInfoRemoteLcceIpAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 4, 1, 1, 4), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyCcapL2tpSessionInfoRemoteLcceIpAddrType.setStatus('current')
docsRphyCcapL2tpSessionInfoRemoteLcceIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 4, 1, 1, 5), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyCcapL2tpSessionInfoRemoteLcceIpAddr.setStatus('current')
docsRphyCcapL2tpSessionInfoRemoteId = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 4, 1, 1, 6), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyCcapL2tpSessionInfoRemoteId.setStatus('current')
docsRphyCcapL2tpSessionInfoCoreId = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 4, 1, 1, 7), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyCcapL2tpSessionInfoCoreId.setStatus('current')
docsRphyCcapL2tpSessionInfoConnCtrlID = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 4, 1, 1, 8), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyCcapL2tpSessionInfoConnCtrlID.setStatus('current')
docsRphyCcapL2tpSessionInfoUdpPort = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 4, 1, 1, 9), InetPortNumber()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyCcapL2tpSessionInfoUdpPort.setStatus('current')
docsRphyCcapL2tpSessionInfoDescr = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 4, 1, 1, 10), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyCcapL2tpSessionInfoDescr.setStatus('current')
docsRphyCcapL2tpSessionInfoSessionType = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 4, 1, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("psp", 1), ("mpt", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyCcapL2tpSessionInfoSessionType.setStatus('current')
docsRphyCcapL2tpSessionInfoSessionSubType = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 4, 1, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21))).clone(namedValues=NamedValues(("mptLegacy", 1), ("pspLegacy", 2), ("mcm", 3), ("pspDepiMultichannel", 4), ("pspUepiScQam", 5), ("pspUepiOfdma", 6), ("pspBwReqScQam", 7), ("pspBwReqOfdma", 8), ("pspProbe", 9), ("pspRngReqScQam", 10), ("pspRngReqOfdma", 11), ("pspMapScQam", 12), ("pspMapOfdma", 13), ("pspSpecman", 14), ("pspPnm", 15), ("psp551Fwd", 16), ("psp551Ret", 17), ("psp552Fwd", 18), ("psp552Ret", 19), ("pspNdf", 20), ("pspNdr", 21)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyCcapL2tpSessionInfoSessionSubType.setStatus('current')
docsRphyCcapL2tpSessionInfoMaxPayload = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 4, 1, 1, 13), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyCcapL2tpSessionInfoMaxPayload.setStatus('current')
docsRphyCcapL2tpSessionInfoPathPayload = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 4, 1, 1, 14), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyCcapL2tpSessionInfoPathPayload.setStatus('current')
docsRphyCcapL2tpSessionInfoRpdIfMtu = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 4, 1, 1, 15), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyCcapL2tpSessionInfoRpdIfMtu.setStatus('current')
docsRphyCcapL2tpSessionInfoCoreIfMtu = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 4, 1, 1, 16), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyCcapL2tpSessionInfoCoreIfMtu.setStatus('current')
docsRphyCcapL2tpSessionInfoIncludeDOCSISMsgs = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 4, 1, 1, 17), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyCcapL2tpSessionInfoIncludeDOCSISMsgs.setStatus('current')
docsRphyCcapL2tpSessionInfoErrorCode = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 4, 1, 1, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("none", 1), ("invalidMACInterfaceValue", 2), ("invalidInterfaceValue", 3), ("noResourcesForInterfaceIndex", 4), ("l2tpv3Error", 5), ("ifAdminStatusSetToDown", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyCcapL2tpSessionInfoErrorCode.setStatus('current')
docsRphyCcapL2tpSessionInfoCreationTime = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 4, 1, 1, 19), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyCcapL2tpSessionInfoCreationTime.setStatus('current')
docsRphyCcapL2tpSessionInfoOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 4, 1, 1, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("other", 1), ("up", 2), ("down", 3), ("testing", 4), ("dormant", 5), ("notPresent", 6), ("lowerLayerDown", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyCcapL2tpSessionInfoOperStatus.setStatus('current')
docsRphyCcapL2tpSessionInfoLocalStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 4, 1, 1, 21), Bits().clone(namedValues=NamedValues(("other", 0), ("pwNotForwarding", 1), ("servicePwRxFault", 2), ("servicePwTxFault", 3), ("psnPwRxFault", 4), ("psnPwTxFault", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyCcapL2tpSessionInfoLocalStatus.setStatus('current')
docsRphyCcapL2tpSessionInfoLastChange = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 4, 1, 1, 22), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyCcapL2tpSessionInfoLastChange.setStatus('current')
docsRphyCcapL2tpSessionFlowTable = MibTable((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 4, 2), )
if mibBuilder.loadTexts: docsRphyCcapL2tpSessionFlowTable.setStatus('current')
docsRphyCcapL2tpSessionFlowEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 4, 2, 1), ).setIndexNames((0, "DOCS-RPHY-MIB", "docsRphyCcapL2tpSessionInfoLocalLcceIpAddrType"), (0, "DOCS-RPHY-MIB", "docsRphyCcapL2tpSessionInfoLocalLcceIpAddr"), (0, "DOCS-RPHY-MIB", "docsRphyCcapL2tpSessionInfoLocalId"), (0, "DOCS-RPHY-MIB", "docsRphyCcapL2tpSessionFlowPspFlowId"))
if mibBuilder.loadTexts: docsRphyCcapL2tpSessionFlowEntry.setStatus('current')
docsRphyCcapL2tpSessionFlowPspFlowId = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 4, 2, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyCcapL2tpSessionFlowPspFlowId.setStatus('current')
docsRphyCcapL2tpSessionStatsTable = MibTable((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 4, 3), )
if mibBuilder.loadTexts: docsRphyCcapL2tpSessionStatsTable.setStatus('current')
docsRphyCcapL2tpSessionStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 4, 3, 1), )
docsRphyCcapL2tpSessionFlowEntry.registerAugmentions(("DOCS-RPHY-MIB", "docsRphyCcapL2tpSessionStatsEntry"))
docsRphyCcapL2tpSessionStatsEntry.setIndexNames(*docsRphyCcapL2tpSessionFlowEntry.getIndexNames())
if mibBuilder.loadTexts: docsRphyCcapL2tpSessionStatsEntry.setStatus('current')
docsRphyCcapL2tpSessionStatsOutOfSeqPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 4, 3, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyCcapL2tpSessionStatsOutOfSeqPkts.setStatus('current')
docsRphyCcapCinDsLatencyTable = MibTable((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 4, 4), )
if mibBuilder.loadTexts: docsRphyCcapCinDsLatencyTable.setStatus('current')
docsRphyCcapCinDsLatencyEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 4, 4, 1), )
docsRphyCcapL2tpSessionFlowEntry.registerAugmentions(("DOCS-RPHY-MIB", "docsRphyCcapCinDsLatencyEntry"))
docsRphyCcapCinDsLatencyEntry.setIndexNames(*docsRphyCcapL2tpSessionFlowEntry.getIndexNames())
if mibBuilder.loadTexts: docsRphyCcapCinDsLatencyEntry.setStatus('current')
docsRphyCcapCinDsLatencyLastVal = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 4, 4, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyCcapCinDsLatencyLastVal.setStatus('current')
docsRphyCcapCinDsLatencyLastValTime = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 4, 4, 1, 2), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyCcapCinDsLatencyLastValTime.setStatus('current')
docsRphyCcapCinDsLatencyInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 4, 4, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyCcapCinDsLatencyInterval.setStatus('current')
docsRphyCcapSessionCinDsLatencyStatsTable = MibTable((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 4, 5), )
if mibBuilder.loadTexts: docsRphyCcapSessionCinDsLatencyStatsTable.setStatus('current')
docsRphyCcapSessionCinDsLatencyStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 4, 5, 1), ).setIndexNames((0, "DOCS-RPHY-MIB", "docsRphyCcapL2tpSessionInfoLocalLcceIpAddrType"), (0, "DOCS-RPHY-MIB", "docsRphyCcapL2tpSessionInfoLocalLcceIpAddr"), (0, "DOCS-RPHY-MIB", "docsRphyCcapL2tpSessionInfoLocalId"), (0, "DOCS-RPHY-MIB", "docsRphyCcapL2tpSessionFlowPspFlowId"), (0, "DOCS-RPHY-MIB", "docsRphyCcapSessionCinDsLatencyStatsIntervalSeq"))
if mibBuilder.loadTexts: docsRphyCcapSessionCinDsLatencyStatsEntry.setStatus('current')
docsRphyCcapSessionCinDsLatencyStatsIntervalSeq = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 4, 5, 1, 1), Unsigned32())
if mibBuilder.loadTexts: docsRphyCcapSessionCinDsLatencyStatsIntervalSeq.setStatus('current')
docsRphyCcapSessionCinDsLatencyStatsVal = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 4, 5, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyCcapSessionCinDsLatencyStatsVal.setStatus('current')
docsRphyCcapSessionCinDsLatencyStatsValTime = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 4, 5, 1, 3), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyCcapSessionCinDsLatencyStatsValTime.setStatus('current')
docsRphyCcapSecServerCertSubject = MibScalar((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 5, 1), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyCcapSecServerCertSubject.setStatus('current')
docsRphyCcapSecServerCertIssuer = MibScalar((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 5, 2), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyCcapSecServerCertIssuer.setStatus('current')
docsRphyCcapSecServerCertSerialNumber = MibScalar((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 5, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyCcapSecServerCertSerialNumber.setStatus('current')
docsRphyCcapSecServerCertSource = MibScalar((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 5, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("snmp", 1), ("configurationFile", 2), ("externalDatabase", 3), ("other", 4), ("authentInfo", 5), ("compiledIntoCode", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyCcapSecServerCertSource.setStatus('current')
docsRphyCcapSecServerCertCert = MibScalar((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 5, 5), DocsX509ASN1DEREncodedCertificate()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyCcapSecServerCertCert.setStatus('current')
docsRphyCcapSecServerCertCertThumbprint = MibScalar((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 1, 5, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(20, 20)).setFixedLength(20)).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyCcapSecServerCertCertThumbprint.setStatus('current')
docsRphyCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 2, 1, 1)).setObjects(("DOCS-RPHY-MIB", "docsRphyRpdGroup"), ("DOCS-RPHY-MIB", "docsRphyCcapCoreGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    docsRphyCompliance = docsRphyCompliance.setStatus('current')
docsRphyRpdGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 2, 2, 1)).setObjects(("DOCS-RPHY-MIB", "docsRphyRpdDevInfoSysUpTime"), ("DOCS-RPHY-MIB", "docsRphyRpdDevInfoNumCrashFilesAvail"), ("DOCS-RPHY-MIB", "docsRphyRpdDevIdVendorName"), ("DOCS-RPHY-MIB", "docsRphyRpdDevIdVendorId"), ("DOCS-RPHY-MIB", "docsRphyRpdDevIdModelNum"), ("DOCS-RPHY-MIB", "docsRphyRpdDevIdSerialNum"), ("DOCS-RPHY-MIB", "docsRphyRpdDevIdDeviceAlias"), ("DOCS-RPHY-MIB", "docsRphyRpdDevIdDeviceDescr"), ("DOCS-RPHY-MIB", "docsRphyRpdDevIdHwRev"), ("DOCS-RPHY-MIB", "docsRphyRpdDevIdCurrSwVer"), ("DOCS-RPHY-MIB", "docsRphyRpdDevIdBootRomVer"), ("DOCS-RPHY-MIB", "docsRphyRpdDevIdUsBurstRcvrVendorId"), ("DOCS-RPHY-MIB", "docsRphyRpdDevIdUsBurstRcvrModelNum"), ("DOCS-RPHY-MIB", "docsRphyRpdDevIdUsBurstRcvrDrivVer"), ("DOCS-RPHY-MIB", "docsRphyRpdDevIdUsBurstRcvrSerialNum"), ("DOCS-RPHY-MIB", "docsRphyRpdDevIdRcpProtocolVer"), ("DOCS-RPHY-MIB", "docsRphyRpdDevIdRcpSchemaVer"), ("DOCS-RPHY-MIB", "docsRphyRpdDevLocationDescr"), ("DOCS-RPHY-MIB", "docsRphyRpdDevLocationLatitude"), ("DOCS-RPHY-MIB", "docsRphyRpdDevLocationLongitude"), ("DOCS-RPHY-MIB", "docsRphyRpdDevCoresConnectedAddressType"), ("DOCS-RPHY-MIB", "docsRphyRpdDevCoresConnectedAddress"), ("DOCS-RPHY-MIB", "docsRphyRpdDevCoresConnectedIsPrincipal"), ("DOCS-RPHY-MIB", "docsRphyRpdDevCoresConnectedName"), ("DOCS-RPHY-MIB", "docsRphyRpdDevCoresConnectedVendorId"), ("DOCS-RPHY-MIB", "docsRphyRpdDevCapabNumDsPorts"), ("DOCS-RPHY-MIB", "docsRphyRpdDevCapabNumUsPorts"), ("DOCS-RPHY-MIB", "docsRphyRpdDevCapabNumTenGeNsPorts"), ("DOCS-RPHY-MIB", "docsRphyRpdDevCapabNumOneGeNsPorts"), ("DOCS-RPHY-MIB", "docsRphyRpdDevCapabNumDsScQamChans"), ("DOCS-RPHY-MIB", "docsRphyRpdDevCapabNumDsOfdmChans"), ("DOCS-RPHY-MIB", "docsRphyRpdDevCapabNumUsScQamChans"), ("DOCS-RPHY-MIB", "docsRphyRpdDevCapabNumUsOfdmaChans"), ("DOCS-RPHY-MIB", "docsRphyRpdDevCapabNumDsOob55d1Chans"), ("DOCS-RPHY-MIB", "docsRphyRpdDevCapabNumUsOob55d1Chans"), ("DOCS-RPHY-MIB", "docsRphyRpdDevCapabNumDsOob55d2Modules"), ("DOCS-RPHY-MIB", "docsRphyRpdDevCapabNumUsOob55d2Demods"), ("DOCS-RPHY-MIB", "docsRphyRpdDevCapabNumNdfChans"), ("DOCS-RPHY-MIB", "docsRphyRpdDevCapabNumNdrChans"), ("DOCS-RPHY-MIB", "docsRphyRpdDevCapabNumDsPspFlowsPerChan"), ("DOCS-RPHY-MIB", "docsRphyRpdDevCapabNumUsPspFlowsPerChan"), ("DOCS-RPHY-MIB", "docsRphyRpdDevCapabNumAsynchVideoChans"), ("DOCS-RPHY-MIB", "docsRphyRpdDevCapabNumCwToneGens"), ("DOCS-RPHY-MIB", "docsRphyRpdDevCapabLowestCwToneFreq"), ("DOCS-RPHY-MIB", "docsRphyRpdDevCapabHighestCwToneFreq"), ("DOCS-RPHY-MIB", "docsRphyRpdDevCapabMaxCwTonePwr"), ("DOCS-RPHY-MIB", "docsRphyRpdDevCapabQamAsPilot"), ("DOCS-RPHY-MIB", "docsRphyRpdDevCapabSupportsUdpEncap"), ("DOCS-RPHY-MIB", "docsRphyRpdDevCapabSupportsFlowTags"), ("DOCS-RPHY-MIB", "docsRphyRpdDevCapabSupportsFreqTilt"), ("DOCS-RPHY-MIB", "docsRphyRpdDevCapabTiltRange"), ("DOCS-RPHY-MIB", "docsRphyRpdDevCapabBufferDepthMonAlertSupp"), ("DOCS-RPHY-MIB", "docsRphyRpdDevCapabBufferDepthCfgSupp"), ("DOCS-RPHY-MIB", "docsRphyRpdDevCapabRpdUcdProcTime"), ("DOCS-RPHY-MIB", "docsRphyRpdDevCapabRpdUcdChgNullGrtTime"), ("DOCS-RPHY-MIB", "docsRphyRpdDevCapabMultiSectionTimingMerRep"), ("DOCS-RPHY-MIB", "docsRphyRpdDevChanReachabilityEndChanIndex"), ("DOCS-RPHY-MIB", "docsRphyRpdDevDsUsRfPortAllocScQamChans"), ("DOCS-RPHY-MIB", "docsRphyRpdDevDsUsRfPortAllocOfdmChans"), ("DOCS-RPHY-MIB", "docsRphyRpdDevDsUsRfPortAllocOob551Chans"), ("DOCS-RPHY-MIB", "docsRphyRpdDevDsUsRfPortAllocNdChans"), ("DOCS-RPHY-MIB", "docsRphyRpdDevL2tpSessionInfoRemoteLcceIpAddrType"), ("DOCS-RPHY-MIB", "docsRphyRpdDevL2tpSessionInfoRemoteLcceIpAddr"), ("DOCS-RPHY-MIB", "docsRphyRpdDevL2tpSessionInfoRemoteId"), ("DOCS-RPHY-MIB", "docsRphyRpdDevL2tpSessionInfoCoreId"), ("DOCS-RPHY-MIB", "docsRphyRpdDevL2tpSessionInfoConnCtrlID"), ("DOCS-RPHY-MIB", "docsRphyRpdDevL2tpSessionInfoUdpPort"), ("DOCS-RPHY-MIB", "docsRphyRpdDevL2tpSessionInfoDescr"), ("DOCS-RPHY-MIB", "docsRphyRpdDevL2tpSessionInfoSessionType"), ("DOCS-RPHY-MIB", "docsRphyRpdDevL2tpSessionInfoSessionSubType"), ("DOCS-RPHY-MIB", "docsRphyRpdDevL2tpSessionInfoMaxPayload"), ("DOCS-RPHY-MIB", "docsRphyRpdDevL2tpSessionInfoPathPayload"), ("DOCS-RPHY-MIB", "docsRphyRpdDevL2tpSessionInfoRpdIfMtu"), ("DOCS-RPHY-MIB", "docsRphyRpdDevL2tpSessionInfoCoreIfMtu"), ("DOCS-RPHY-MIB", "docsRphyRpdDevL2tpSessionInfoErrorCode"), ("DOCS-RPHY-MIB", "docsRphyRpdDevL2tpSessionInfoCreationTime"), ("DOCS-RPHY-MIB", "docsRphyRpdDevL2tpSessionInfoOperStatus"), ("DOCS-RPHY-MIB", "docsRphyRpdDevL2tpSessionInfoLocalStatus"), ("DOCS-RPHY-MIB", "docsRphyRpdDevL2tpSessionInfoLastChange"), ("DOCS-RPHY-MIB", "docsRphyRpdDevL2tpSessionStatsOutOfSeqPkts"), ("DOCS-RPHY-MIB", "docsRphyRpdDevDiagStatusProbableCause"), ("DOCS-RPHY-MIB", "docsRphyRpdDevDiagStatusAdditionalText"), ("DOCS-RPHY-MIB", "docsRphyRpdDevDiagStatusSeverityLevel"), ("DOCS-RPHY-MIB", "docsRphyRpdDevDepiMcastSessionLocalLcceIpAddr"), ("DOCS-RPHY-MIB", "docsRphyRpdDevDepiMcastSessionRemoteLcceIpAddr"), ("DOCS-RPHY-MIB", "docsRphyRpdDevDepiMcastSessionId"), ("DOCS-RPHY-MIB", "docsRphyRpdDevDepiMcastSessionJoinTime"), ("DOCS-RPHY-MIB", "docsRphyRpdDevEventLogFirstTime"), ("DOCS-RPHY-MIB", "docsRphyRpdDevEventLogLastTime"), ("DOCS-RPHY-MIB", "docsRphyRpdDevEventLogCounts"), ("DOCS-RPHY-MIB", "docsRphyRpdDevEventLogLevel"), ("DOCS-RPHY-MIB", "docsRphyRpdDevEventLogId"), ("DOCS-RPHY-MIB", "docsRphyRpdDevEventLogText"), ("DOCS-RPHY-MIB", "docsRphyRpdDevOob551UsChanStatusNcIpAddrType"), ("DOCS-RPHY-MIB", "docsRphyRpdDevOob551UsChanStatusNcIpAddr"), ("DOCS-RPHY-MIB", "docsRphyRpdDevOob551UsChanStatusArpdSrcIpAddrType"), ("DOCS-RPHY-MIB", "docsRphyRpdDevOob551UsChanStatusArpdSrcIpAddr"), ("DOCS-RPHY-MIB", "docsRphyRpdDevOob551UsChanStatusPerfectCellsRcvd"), ("DOCS-RPHY-MIB", "docsRphyRpdDevOob551UsChanStatusCorrectedCellsRcvd"), ("DOCS-RPHY-MIB", "docsRphyRpdDevOob551UsChanStatusUncorrectableCellsRcvd"), ("DOCS-RPHY-MIB", "docsRphyRpdDevOob551UsChanStatusTotalCellsRcvd"), ("DOCS-RPHY-MIB", "docsRphyRpdDevOob551UsChanStatusPwrLevel"), ("DOCS-RPHY-MIB", "docsRphyRpdDevOob551UsChanStatusMaxPwrLevel"), ("DOCS-RPHY-MIB", "docsRphyRpdDevOob551UsChanStatusMinPwrLevel"), ("DOCS-RPHY-MIB", "docsRphyRpdDevOob551UsChanStatusCounterDiscontinuityTime"), ("DOCS-RPHY-MIB", "docsRphyRpdDevCrashDataFileStatusFilename"), ("DOCS-RPHY-MIB", "docsRphyRpdDevCrashDataFileStatusFileStatus"), ("DOCS-RPHY-MIB", "docsRphyRpdDevUsSignalQualityRxMer"), ("DOCS-RPHY-MIB", "docsRphyRpdDevUsSignalQualityRxMerSamples"), ("DOCS-RPHY-MIB", "docsRphyRpdDevUsSignalQualityUnerroreds"), ("DOCS-RPHY-MIB", "docsRphyRpdDevUsSignalQualityCorrecteds"), ("DOCS-RPHY-MIB", "docsRphyRpdDevUsSignalQualityUncorrectables"), ("DOCS-RPHY-MIB", "docsRphyRpdIfPhysEntityDescr"), ("DOCS-RPHY-MIB", "docsRphyRpdIfPhysEntityVendorType"), ("DOCS-RPHY-MIB", "docsRphyRpdIfPhysEntityContainedIn"), ("DOCS-RPHY-MIB", "docsRphyRpdIfPhysEntityClass"), ("DOCS-RPHY-MIB", "docsRphyRpdIfPhysEntityParentRelPos"), ("DOCS-RPHY-MIB", "docsRphyRpdIfPhysEntityName"), ("DOCS-RPHY-MIB", "docsRphyRpdIfPhysEntityHardwareRev"), ("DOCS-RPHY-MIB", "docsRphyRpdIfPhysEntityFirmwareRev"), ("DOCS-RPHY-MIB", "docsRphyRpdIfPhysEntitySoftwareRev"), ("DOCS-RPHY-MIB", "docsRphyRpdIfPhysEntitySerialNum"), ("DOCS-RPHY-MIB", "docsRphyRpdIfPhysEntityMfgName"), ("DOCS-RPHY-MIB", "docsRphyRpdIfPhysEntityModelName"), ("DOCS-RPHY-MIB", "docsRphyRpdIfPhysEntityAlias"), ("DOCS-RPHY-MIB", "docsRphyRpdIfPhysEntityAssetID"), ("DOCS-RPHY-MIB", "docsRphyRpdIfPhysEntityIsFRU"), ("DOCS-RPHY-MIB", "docsRphyRpdIfPhysEntityMfgDate"), ("DOCS-RPHY-MIB", "docsRphyRpdIfPhysEntityUris"), ("DOCS-RPHY-MIB", "docsRphyRpdIfPhysEntityUUID"), ("DOCS-RPHY-MIB", "docsRphyRpdIfPhysEntityCoreIfIndex"), ("DOCS-RPHY-MIB", "docsRphyRpdIfPhysEntSensorType"), ("DOCS-RPHY-MIB", "docsRphyRpdIfPhysEntSensorScale"), ("DOCS-RPHY-MIB", "docsRphyRpdIfPhysEntSensorPrecision"), ("DOCS-RPHY-MIB", "docsRphyRpdIfPhysEntSensorValue"), ("DOCS-RPHY-MIB", "docsRphyRpdIfPhysEntSensorOperStatus"), ("DOCS-RPHY-MIB", "docsRphyRpdIfPhysEntSensorUnitsDisplay"), ("DOCS-RPHY-MIB", "docsRphyRpdIfPhysEntSensorValueTimeStamp"), ("DOCS-RPHY-MIB", "docsRphyRpdIfPhysEntSensorValueUpdateRate"), ("DOCS-RPHY-MIB", "docsRphyRpdIfEnetDescr"), ("DOCS-RPHY-MIB", "docsRphyRpdIfEnetName"), ("DOCS-RPHY-MIB", "docsRphyRpdIfEnetAlias"), ("DOCS-RPHY-MIB", "docsRphyRpdIfEnetType"), ("DOCS-RPHY-MIB", "docsRphyRpdIfEnetMtu"), ("DOCS-RPHY-MIB", "docsRphyRpdIfEnetPhysAddress"), ("DOCS-RPHY-MIB", "docsRphyRpdIfEnetAdminStatus"), ("DOCS-RPHY-MIB", "docsRphyRpdIfEnetOperStatus"), ("DOCS-RPHY-MIB", "docsRphyRpdIfEnetLastChange"), ("DOCS-RPHY-MIB", "docsRphyRpdIfEnetLinkUpDownTrapEnable"), ("DOCS-RPHY-MIB", "docsRphyRpdIfEnetHighSpeed"), ("DOCS-RPHY-MIB", "docsRphyRpdIfEnetPromiscuousMode"), ("DOCS-RPHY-MIB", "docsRphyRpdIfEnetConnectorPresent"), ("DOCS-RPHY-MIB", "docsRphyRpdIfEnetStatsInOctets"), ("DOCS-RPHY-MIB", "docsRphyRpdIfEnetStatsOutOctets"), ("DOCS-RPHY-MIB", "docsRphyRpdIfEnetStatsInFrames"), ("DOCS-RPHY-MIB", "docsRphyRpdIfEnetStatsOutFrames"), ("DOCS-RPHY-MIB", "docsRphyRpdIfEnetStatsInUnicastOctets"), ("DOCS-RPHY-MIB", "docsRphyRpdIfEnetStatsOutUnicastOctets"), ("DOCS-RPHY-MIB", "docsRphyRpdIfEnetStatsInUnicastFrames"), ("DOCS-RPHY-MIB", "docsRphyRpdIfEnetStatsOutUnicastFrames"), ("DOCS-RPHY-MIB", "docsRphyRpdIfEnetStatsInMulticastOctets"), ("DOCS-RPHY-MIB", "docsRphyRpdIfEnetStatsOutMulticastOctets"), ("DOCS-RPHY-MIB", "docsRphyRpdIfEnetStatsInMulticastFrames"), ("DOCS-RPHY-MIB", "docsRphyRpdIfEnetStatsOutMulticastFrames"), ("DOCS-RPHY-MIB", "docsRphyRpdIfEnetStatsInBroadcastOctets"), ("DOCS-RPHY-MIB", "docsRphyRpdIfEnetStatsOutBroadcastOctets"), ("DOCS-RPHY-MIB", "docsRphyRpdIfEnetStatsInBroadcastFrames"), ("DOCS-RPHY-MIB", "docsRphyRpdIfEnetStatsOutBroadcastFrames"), ("DOCS-RPHY-MIB", "docsRphyRpdIfEnetStatsInDiscards"), ("DOCS-RPHY-MIB", "docsRphyRpdIfEnetStatsOutDiscards"), ("DOCS-RPHY-MIB", "docsRphyRpdIfEnetStatsInErrors"), ("DOCS-RPHY-MIB", "docsRphyRpdIfEnetStatsOutErrors"), ("DOCS-RPHY-MIB", "docsRphyRpdIfEnetStatsInUnknownProtos"), ("DOCS-RPHY-MIB", "docsRphyRpdIfEnetStatsCounterDiscontinuityTime"), ("DOCS-RPHY-MIB", "docsRphyRpdIfRpdEnetToCoreEntityMapEntityIndex"), ("DOCS-RPHY-MIB", "docsRphyRpdIfCoreToRpdMapRpdUniqueId"), ("DOCS-RPHY-MIB", "docsRphyRpdIfCoreToRpdMapRpdRfPortDirection"), ("DOCS-RPHY-MIB", "docsRphyRpdIfCoreToRpdMapRpdRfPortIndex"), ("DOCS-RPHY-MIB", "docsRphyRpdIfCoreToRpdMapRpdRfChanType"), ("DOCS-RPHY-MIB", "docsRphyRpdIfCoreToRpdMapRpdRfChanIndex"), ("DOCS-RPHY-MIB", "docsRphyRpdIfRpdToCoreMapCoreIfIndex"), ("DOCS-RPHY-MIB", "docsRphyRpdIpv4GrpDefaultTTL"), ("DOCS-RPHY-MIB", "docsRphyRpdIpv4GrpInterfaceTableLastChange"), ("DOCS-RPHY-MIB", "docsRphyRpdIpv6GrpIpDefaultHopLimit"), ("DOCS-RPHY-MIB", "docsRphyRpdIpv6GrpInterfaceTableLastChange"), ("DOCS-RPHY-MIB", "docsRphyRpdIpv6GrpIfStatsTableLastChange"), ("DOCS-RPHY-MIB", "docsRphyRpdIpv4InterfaceEnableStatus"), ("DOCS-RPHY-MIB", "docsRphyRpdIpv4InterfaceRetransmitTime"), ("DOCS-RPHY-MIB", "docsRphyRpdIpv6InterfaceIdentifier"), ("DOCS-RPHY-MIB", "docsRphyRpdIpv6InterfaceEnableStatus"), ("DOCS-RPHY-MIB", "docsRphyRpdIpv6InterfaceReachableTime"), ("DOCS-RPHY-MIB", "docsRphyRpdIpv6InterfaceRetransmitTime"), ("DOCS-RPHY-MIB", "docsRphyRpdIpIfStatsInReceives"), ("DOCS-RPHY-MIB", "docsRphyRpdIpIfStatsInOctets"), ("DOCS-RPHY-MIB", "docsRphyRpdIpIfStatsInHdrErrors"), ("DOCS-RPHY-MIB", "docsRphyRpdIpIfStatsInNoRoutes"), ("DOCS-RPHY-MIB", "docsRphyRpdIpIfStatsInAddrErrors"), ("DOCS-RPHY-MIB", "docsRphyRpdIpIfStatsInUnknownProtos"), ("DOCS-RPHY-MIB", "docsRphyRpdIpIfStatsInTruncatedPkts"), ("DOCS-RPHY-MIB", "docsRphyRpdIpIfStatsInDiscards"), ("DOCS-RPHY-MIB", "docsRphyRpdIpIfStatsInDelivers"), ("DOCS-RPHY-MIB", "docsRphyRpdIpIfStatsOutRequests"), ("DOCS-RPHY-MIB", "docsRphyRpdIpIfStatsOutDiscards"), ("DOCS-RPHY-MIB", "docsRphyRpdIpIfStatsOutTransmits"), ("DOCS-RPHY-MIB", "docsRphyRpdIpIfStatsOutOctets"), ("DOCS-RPHY-MIB", "docsRphyRpdIpIfStatsInMcastPkts"), ("DOCS-RPHY-MIB", "docsRphyRpdIpIfStatsInMcastOctets"), ("DOCS-RPHY-MIB", "docsRphyRpdIpIfStatsOutMcastPkts"), ("DOCS-RPHY-MIB", "docsRphyRpdIpIfStatsOutMcastOctets"), ("DOCS-RPHY-MIB", "docsRphyRpdIpIfStatsDiscontinuityTime"), ("DOCS-RPHY-MIB", "docsRphyRpdIpIfStatsRefreshRate"), ("DOCS-RPHY-MIB", "docsRphyRpdIpAddressEnetPortIndex"), ("DOCS-RPHY-MIB", "docsRphyRpdIpAddressPrefixLen"), ("DOCS-RPHY-MIB", "docsRphyRpdIpAddressType"), ("DOCS-RPHY-MIB", "docsRphyRpdIpAddressOrigin"), ("DOCS-RPHY-MIB", "docsRphyRpdIpAddressStatus"), ("DOCS-RPHY-MIB", "docsRphyRpdIpAddressCreated"), ("DOCS-RPHY-MIB", "docsRphyRpdIpAddressLastChanged"), ("DOCS-RPHY-MIB", "docsRphyRpdIpNetToPhysicalPhysAddress"), ("DOCS-RPHY-MIB", "docsRphyRpdIpNetToPhysicalLastUpdated"), ("DOCS-RPHY-MIB", "docsRphyRpdIpNetToPhysicalType"), ("DOCS-RPHY-MIB", "docsRphyRpdIpNetToPhysicalState"), ("DOCS-RPHY-MIB", "docsRphyRpdIpDefaultRouterLifetime"), ("DOCS-RPHY-MIB", "docsRphyRpdIpDefaultRouterPreference"), ("DOCS-RPHY-MIB", "docsRphyRpdIpIcmpMsgStatsInPkts"), ("DOCS-RPHY-MIB", "docsRphyRpdIpIcmpMsgStatsOutPkts"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    docsRphyRpdGroup = docsRphyRpdGroup.setStatus('current')
docsRphyCcapCoreGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 2, 2, 2)).setObjects(("DOCS-RPHY-MIB", "docsRphyCcapL2tpSessionInfoRemoteLcceIpAddrType"), ("DOCS-RPHY-MIB", "docsRphyCcapL2tpSessionInfoRemoteLcceIpAddr"), ("DOCS-RPHY-MIB", "docsRphyCcapL2tpSessionInfoRemoteId"), ("DOCS-RPHY-MIB", "docsRphyCcapL2tpSessionInfoCoreId"), ("DOCS-RPHY-MIB", "docsRphyCcapL2tpSessionInfoConnCtrlID"), ("DOCS-RPHY-MIB", "docsRphyCcapL2tpSessionInfoUdpPort"), ("DOCS-RPHY-MIB", "docsRphyCcapL2tpSessionInfoDescr"), ("DOCS-RPHY-MIB", "docsRphyCcapL2tpSessionInfoSessionType"), ("DOCS-RPHY-MIB", "docsRphyCcapL2tpSessionInfoSessionSubType"), ("DOCS-RPHY-MIB", "docsRphyCcapL2tpSessionInfoMaxPayload"), ("DOCS-RPHY-MIB", "docsRphyCcapL2tpSessionInfoPathPayload"), ("DOCS-RPHY-MIB", "docsRphyCcapL2tpSessionInfoRpdIfMtu"), ("DOCS-RPHY-MIB", "docsRphyCcapL2tpSessionInfoCoreIfMtu"), ("DOCS-RPHY-MIB", "docsRphyCcapL2tpSessionInfoIncludeDOCSISMsgs"), ("DOCS-RPHY-MIB", "docsRphyCcapL2tpSessionInfoErrorCode"), ("DOCS-RPHY-MIB", "docsRphyCcapL2tpSessionInfoCreationTime"), ("DOCS-RPHY-MIB", "docsRphyCcapL2tpSessionInfoOperStatus"), ("DOCS-RPHY-MIB", "docsRphyCcapL2tpSessionInfoLocalStatus"), ("DOCS-RPHY-MIB", "docsRphyCcapL2tpSessionInfoLastChange"), ("DOCS-RPHY-MIB", "docsRphyCcapL2tpSessionFlowPspFlowId"), ("DOCS-RPHY-MIB", "docsRphyCcapL2tpSessionStatsOutOfSeqPkts"), ("DOCS-RPHY-MIB", "docsRphyCcapCinDsLatencyLastVal"), ("DOCS-RPHY-MIB", "docsRphyCcapCinDsLatencyLastValTime"), ("DOCS-RPHY-MIB", "docsRphyCcapCinDsLatencyInterval"), ("DOCS-RPHY-MIB", "docsRphyCcapSessionCinDsLatencyStatsVal"), ("DOCS-RPHY-MIB", "docsRphyCcapSessionCinDsLatencyStatsValTime"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    docsRphyCcapCoreGroup = docsRphyCcapCoreGroup.setStatus('current')
docsRphyCcapSecGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 4491, 2, 1, 30, 2, 2, 3)).setObjects(("DOCS-RPHY-MIB", "docsRphyCcapSecServerCertSubject"), ("DOCS-RPHY-MIB", "docsRphyCcapSecServerCertIssuer"), ("DOCS-RPHY-MIB", "docsRphyCcapSecServerCertSerialNumber"), ("DOCS-RPHY-MIB", "docsRphyCcapSecServerCertSource"), ("DOCS-RPHY-MIB", "docsRphyCcapSecServerCertCert"), ("DOCS-RPHY-MIB", "docsRphyCcapSecServerCertCertThumbprint"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    docsRphyCcapSecGroup = docsRphyCcapSecGroup.setStatus('current')
mibBuilder.exportSymbols("DOCS-RPHY-MIB", docsRphyCcapL2tpSessionInfoRemoteLcceIpAddr=docsRphyCcapL2tpSessionInfoRemoteLcceIpAddr, docsRphyCcapCinDsLatencyTable=docsRphyCcapCinDsLatencyTable, docsRphyRpdDevIdentificationTable=docsRphyRpdDevIdentificationTable, docsRphyCcapL2tpSessionInfoEntry=docsRphyCcapL2tpSessionInfoEntry, docsRphyRpdDevUsSignalQualityEntry=docsRphyRpdDevUsSignalQualityEntry, docsRphyRpdDevLocationLongitude=docsRphyRpdDevLocationLongitude, docsRphyRpdIpIfStatsInTruncatedPkts=docsRphyRpdIpIfStatsInTruncatedPkts, docsRphyRpdDevL2tpSessionInfoRemoteLcceIpAddr=docsRphyRpdDevL2tpSessionInfoRemoteLcceIpAddr, docsRphyRpdDevCoresConnectedCoreId=docsRphyRpdDevCoresConnectedCoreId, docsRphyCcapMibObjects=docsRphyCcapMibObjects, docsRphyRpdIpIcmpMsgStatsType=docsRphyRpdIpIcmpMsgStatsType, docsRphyRpdIpAddressStatus=docsRphyRpdIpAddressStatus, docsRphyRpdIpv4InterfaceRetransmitTime=docsRphyRpdIpv4InterfaceRetransmitTime, docsRphyRpdIfPhysEntityAssetID=docsRphyRpdIfPhysEntityAssetID, docsRphyRpdIpNetToPhysicalTable=docsRphyRpdIpNetToPhysicalTable, docsRphyRpdIfRpdToCoreMapTable=docsRphyRpdIfRpdToCoreMapTable, RphyChannelType=RphyChannelType, docsRphyRpdIfRpdEnetToCoreEntityMapEntry=docsRphyRpdIfRpdEnetToCoreEntityMapEntry, docsRphyRpdDevL2tpSessionStatsOutOfSeqPkts=docsRphyRpdDevL2tpSessionStatsOutOfSeqPkts, docsRphyRpdIpv4InterfaceEnableStatus=docsRphyRpdIpv4InterfaceEnableStatus, docsRphyRpdDevEventLogId=docsRphyRpdDevEventLogId, docsRphyRpdIfPhysEntSensorValueUpdateRate=docsRphyRpdIfPhysEntSensorValueUpdateRate, docsRphyRpdIpIfStatsInUnknownProtos=docsRphyRpdIpIfStatsInUnknownProtos, docsRphyCcapCinDsLatencyLastValTime=docsRphyCcapCinDsLatencyLastValTime, docsRphyRpdIfCoreToRpdMapRpdRfChanIndex=docsRphyRpdIfCoreToRpdMapRpdRfChanIndex, docsRphyRpdDevCapabLowestCwToneFreq=docsRphyRpdDevCapabLowestCwToneFreq, docsRphyRpdIfCoreToRpdMapRpdRfPortDirection=docsRphyRpdIfCoreToRpdMapRpdRfPortDirection, docsRphyCcapL2tpSessionInfoIncludeDOCSISMsgs=docsRphyCcapL2tpSessionInfoIncludeDOCSISMsgs, docsRphyCcapL2tpSessionInfoErrorCode=docsRphyCcapL2tpSessionInfoErrorCode, docsRphyRpdIpDefaultRouterEntry=docsRphyRpdIpDefaultRouterEntry, docsRphyRpdDevCapabQamAsPilot=docsRphyRpdDevCapabQamAsPilot, docsRphyRpdDevCapabHighestCwToneFreq=docsRphyRpdDevCapabHighestCwToneFreq, docsRphyCcapL2tpSessionFlowTable=docsRphyCcapL2tpSessionFlowTable, docsRphyRpdDevLocationTable=docsRphyRpdDevLocationTable, docsRphyRpdDevIdRcpSchemaVer=docsRphyRpdDevIdRcpSchemaVer, docsRphyRpdDevDepiMcastSessionGrpIpAddr=docsRphyRpdDevDepiMcastSessionGrpIpAddr, docsRphyRpdDevOob551UsChanStatusMinPwrLevel=docsRphyRpdDevOob551UsChanStatusMinPwrLevel, docsRphyRpdDevUsSignalQualityUncorrectables=docsRphyRpdDevUsSignalQualityUncorrectables, docsRphyCcapCinDsLatencyInterval=docsRphyCcapCinDsLatencyInterval, docsRphyRpdDevL2tpSessionInfoDescr=docsRphyRpdDevL2tpSessionInfoDescr, docsRphyRpdIpv6GrpTable=docsRphyRpdIpv6GrpTable, docsRphyRpdIpv4GrpInterfaceTableLastChange=docsRphyRpdIpv4GrpInterfaceTableLastChange, docsRphyRpdIfPhysEntSensorType=docsRphyRpdIfPhysEntSensorType, docsRphyCcapL2tpSessionInfoCreationTime=docsRphyCcapL2tpSessionInfoCreationTime, docsRphyRpdDevChanReachabilityEndChanIndex=docsRphyRpdDevChanReachabilityEndChanIndex, docsRphyRpdIfEnetStatsInMulticastOctets=docsRphyRpdIfEnetStatsInMulticastOctets, RphyEventSeverityType=RphyEventSeverityType, docsRphyRpdIpIfStatsOutDiscards=docsRphyRpdIpIfStatsOutDiscards, docsRphyRpdIfEnetStatsInUnicastFrames=docsRphyRpdIfEnetStatsInUnicastFrames, docsRphyRpdDevL2tpSessionInfoCoreId=docsRphyRpdDevL2tpSessionInfoCoreId, docsRphyRpdIfPhysEntityEntry=docsRphyRpdIfPhysEntityEntry, docsRphyCcapL2tpSessionInfoOperStatus=docsRphyCcapL2tpSessionInfoOperStatus, docsRphyRpdDevCapabNumDsPorts=docsRphyRpdDevCapabNumDsPorts, docsRphyCcapL2tpSessionFlowEntry=docsRphyCcapL2tpSessionFlowEntry, docsRphyRpdDevCapabNumUsPspFlowsPerChan=docsRphyRpdDevCapabNumUsPspFlowsPerChan, docsRphyCcapSessionCinDsLatencyStatsValTime=docsRphyCcapSessionCinDsLatencyStatsValTime, docsRphyRpdDevCapabRpdUcdChgNullGrtTime=docsRphyRpdDevCapabRpdUcdChgNullGrtTime, docsRphyRpdDevInfoTable=docsRphyRpdDevInfoTable, docsRphyRpdIpAddressEnetPortIndex=docsRphyRpdIpAddressEnetPortIndex, docsRphyRpdDevCapabMultiSectionTimingMerRep=docsRphyRpdDevCapabMultiSectionTimingMerRep, docsRphyConformance=docsRphyConformance, docsRphyRpdIfEnetStatsOutUnicastFrames=docsRphyRpdIfEnetStatsOutUnicastFrames, docsRphyRpdDevCapabNumDsOfdmChans=docsRphyRpdDevCapabNumDsOfdmChans, docsRphyRpdDevL2tpSessionInfoTable=docsRphyRpdDevL2tpSessionInfoTable, docsRphyRpdIpIcmpMsgStatsOutPkts=docsRphyRpdIpIcmpMsgStatsOutPkts, docsRphyRpdIpIfStatsInDiscards=docsRphyRpdIpIfStatsInDiscards, docsRphyRpdDevOob551UsChanStatusEntry=docsRphyRpdDevOob551UsChanStatusEntry, docsRphyRpdIfPhysEntSensorOperStatus=docsRphyRpdIfPhysEntSensorOperStatus, docsRphyRpdDevL2tpSessionInfoPathPayload=docsRphyRpdDevL2tpSessionInfoPathPayload, docsRphyRpdDevChanReachabilityRfPortIndex=docsRphyRpdDevChanReachabilityRfPortIndex, docsRphyRpdDevOob551UsChanStatusCounterDiscontinuityTime=docsRphyRpdDevOob551UsChanStatusCounterDiscontinuityTime, docsRphyRpdDevUsSignalQualityCorrecteds=docsRphyRpdDevUsSignalQualityCorrecteds, docsRphyRpdIfEnetStatsCounterDiscontinuityTime=docsRphyRpdIfEnetStatsCounterDiscontinuityTime, docsRphyRpdIfEnetStatsEntry=docsRphyRpdIfEnetStatsEntry, docsRphyCcapL2tpSessionInfoUdpPort=docsRphyCcapL2tpSessionInfoUdpPort, docsRphyRpdIpNetToPhysicalState=docsRphyRpdIpNetToPhysicalState, docsRphyRpdIfCoreToRpdMapRpdRfPortIndex=docsRphyRpdIfCoreToRpdMapRpdRfPortIndex, docsRphyRpdDevCapabNumCwToneGens=docsRphyRpdDevCapabNumCwToneGens, docsRphyRpdIfCoreToRpdMapEntry=docsRphyRpdIfCoreToRpdMapEntry, docsRphyCcapL2tpSessionInfoLocalId=docsRphyCcapL2tpSessionInfoLocalId, docsRphyRpdIpv4GrpDefaultTTL=docsRphyRpdIpv4GrpDefaultTTL, docsRphyRpdDevUsSignalQualityRxMerSamples=docsRphyRpdDevUsSignalQualityRxMerSamples, docsRphyRpdIpIfStatsInDelivers=docsRphyRpdIpIfStatsInDelivers, docsRphyCompliance=docsRphyCompliance, docsRphyRpdIfRpdToCoreMapCoreIfIndex=docsRphyRpdIfRpdToCoreMapCoreIfIndex, docsRphyRpdDevDiagStatusAdditionalText=docsRphyRpdDevDiagStatusAdditionalText, docsRphyCcapL2tpSessionInfoCoreIfMtu=docsRphyCcapL2tpSessionInfoCoreIfMtu, docsRphyRpdIfPhysEntSensorScale=docsRphyRpdIfPhysEntSensorScale, docsRphyRpdDevCrashDataFileStatusIndex=docsRphyRpdDevCrashDataFileStatusIndex, docsRphyRpdIfPhysEntitySoftwareRev=docsRphyRpdIfPhysEntitySoftwareRev, docsRphyRpdIfEnetStatsTable=docsRphyRpdIfEnetStatsTable, docsRphyRpdIpIfStatsEntry=docsRphyRpdIpIfStatsEntry, docsRphyRpdIfPhysEntSensorEntry=docsRphyRpdIfPhysEntSensorEntry, docsRphyRpdDevIdentificationEntry=docsRphyRpdDevIdentificationEntry, docsRphyRpdDevL2tpSessionInfoLocalLcceIpAddrType=docsRphyRpdDevL2tpSessionInfoLocalLcceIpAddrType, docsRphyRpdIpIcmpMsgStatsIPVersion=docsRphyRpdIpIcmpMsgStatsIPVersion, docsRphyRpdDevCapabSupportsFlowTags=docsRphyRpdDevCapabSupportsFlowTags, docsRphyRpdIfPhysEntityUris=docsRphyRpdIfPhysEntityUris, docsRphyCcapSecMibObjects=docsRphyCcapSecMibObjects, docsRphyCcapSecServerCertIssuer=docsRphyCcapSecServerCertIssuer, docsRphyRpdDevCapabNumOneGeNsPorts=docsRphyRpdDevCapabNumOneGeNsPorts, docsRphyRpdDevCoresConnectedAddressType=docsRphyRpdDevCoresConnectedAddressType, docsRphyCcapL2tpSessionInfoRpdIfMtu=docsRphyCcapL2tpSessionInfoRpdIfMtu, docsRphyRpdIpIfStatsInNoRoutes=docsRphyRpdIpIfStatsInNoRoutes, docsRphyRpdDevDsUsRfPortAllocDirection=docsRphyRpdDevDsUsRfPortAllocDirection, docsRphyRpdIfPhysEntityHardwareRev=docsRphyRpdIfPhysEntityHardwareRev, docsRphyRpdDevCapabNumUsPorts=docsRphyRpdDevCapabNumUsPorts, docsRphyRpdDevIdUsBurstRcvrModelNum=docsRphyRpdDevIdUsBurstRcvrModelNum, docsRphyRpdDevEventLogTable=docsRphyRpdDevEventLogTable, docsRphyRpdDevIdSerialNum=docsRphyRpdDevIdSerialNum, docsRphyRpdIpIfStatsInAddrErrors=docsRphyRpdIpIfStatsInAddrErrors, docsRphyRpdIfEnetAlias=docsRphyRpdIfEnetAlias, docsRphyRpdIfEnetStatsInBroadcastOctets=docsRphyRpdIfEnetStatsInBroadcastOctets, docsRphyCcapSessionCinDsLatencyStatsEntry=docsRphyCcapSessionCinDsLatencyStatsEntry, docsRphyRpdDevCrashDataFileStatusEntry=docsRphyRpdDevCrashDataFileStatusEntry, docsRphyRpdIfEnetHighSpeed=docsRphyRpdIfEnetHighSpeed, docsRphyRpdDevDsUsRfPortAllocOfdmChans=docsRphyRpdDevDsUsRfPortAllocOfdmChans, docsRphyRpdIpIfStatsIPVersion=docsRphyRpdIpIfStatsIPVersion, docsRphyRpdDevOob551UsChanStatusPerfectCellsRcvd=docsRphyRpdDevOob551UsChanStatusPerfectCellsRcvd, docsRphyRpdDevCapabNumUsOfdmaChans=docsRphyRpdDevCapabNumUsOfdmaChans, docsRphyCcapL2tpSessionInfoSessionType=docsRphyCcapL2tpSessionInfoSessionType, docsRphyRpdDevCoresConnectedVendorId=docsRphyRpdDevCoresConnectedVendorId, docsRphyRpdDevIdHwRev=docsRphyRpdDevIdHwRev, docsRphyRpdIfEnetStatsInDiscards=docsRphyRpdIfEnetStatsInDiscards, docsRphyRpdIfMibObjects=docsRphyRpdIfMibObjects, docsRphyCcapL2tpSessionInfoRemoteId=docsRphyCcapL2tpSessionInfoRemoteId, docsRphyRpdIfEnetStatsInBroadcastFrames=docsRphyRpdIfEnetStatsInBroadcastFrames, docsRphyCcapSecGroup=docsRphyCcapSecGroup, docsRphyRpdDevCapabilitiesEntry=docsRphyRpdDevCapabilitiesEntry, docsRphyGroups=docsRphyGroups, docsRphyRpdDevCapabNumUsOob55d1Chans=docsRphyRpdDevCapabNumUsOob55d1Chans, docsRphyRpdDevL2tpSessionInfoRpdIfMtu=docsRphyRpdDevL2tpSessionInfoRpdIfMtu, docsRphyRpdDevDiagStatusEntry=docsRphyRpdDevDiagStatusEntry, docsRphyRpdIpv6InterfaceEntry=docsRphyRpdIpv6InterfaceEntry, docsRphyRpdDevInfoEntry=docsRphyRpdDevInfoEntry, docsRphyRpdDevDsUsRfPortAllocIndex=docsRphyRpdDevDsUsRfPortAllocIndex, docsRphyRpdIfPhysEntSensorUnitsDisplay=docsRphyRpdIfPhysEntSensorUnitsDisplay, docsRphyRpdIfPhysEntityModelName=docsRphyRpdIfPhysEntityModelName, docsRphyRpdIfEnetStatsInErrors=docsRphyRpdIfEnetStatsInErrors, docsRphyRpdDevDepiMcastSessionJoinTime=docsRphyRpdDevDepiMcastSessionJoinTime, docsRphyRpdIpv4InterfaceEntry=docsRphyRpdIpv4InterfaceEntry, docsRphyRpdDevCapabBufferDepthMonAlertSupp=docsRphyRpdDevCapabBufferDepthMonAlertSupp, docsRphyRpdDevL2tpSessionInfoSessionSubType=docsRphyRpdDevL2tpSessionInfoSessionSubType, docsRphyRpdDevL2tpSessionInfoErrorCode=docsRphyRpdDevL2tpSessionInfoErrorCode, docsRphyRpdDevCoresConnectedIsPrincipal=docsRphyRpdDevCoresConnectedIsPrincipal, docsRphyRpdIfPhysEntityVendorType=docsRphyRpdIfPhysEntityVendorType, docsRphyCcapL2tpSessionStatsTable=docsRphyCcapL2tpSessionStatsTable, docsRphyRpdDevCapabNumDsOob55d2Modules=docsRphyRpdDevCapabNumDsOob55d2Modules, docsRphyRpdDevIdBootRomVer=docsRphyRpdDevIdBootRomVer, docsRphyRpdIpMibObjects=docsRphyRpdIpMibObjects, docsRphyRpdIpIfStatsInMcastPkts=docsRphyRpdIpIfStatsInMcastPkts, docsRphyRpdIfCoreToRpdMapRpdUniqueId=docsRphyRpdIfCoreToRpdMapRpdUniqueId, docsRphyCcapL2tpSessionStatsEntry=docsRphyCcapL2tpSessionStatsEntry, docsRphyRpdIfPhysEntityIsFRU=docsRphyRpdIfPhysEntityIsFRU, docsRphyCcapL2tpSessionInfoLastChange=docsRphyCcapL2tpSessionInfoLastChange, docsRphyRpdIpNetToPhysicalEntry=docsRphyRpdIpNetToPhysicalEntry, docsRphyRpdDevInfoSysUpTime=docsRphyRpdDevInfoSysUpTime, docsRphyRpdIfEnetDescr=docsRphyRpdIfEnetDescr, docsRphyRpdIfEnetLastChange=docsRphyRpdIfEnetLastChange, docsRphyCcapSecServerCertCertThumbprint=docsRphyCcapSecServerCertCertThumbprint, docsRphyRpdDevCoresConnectedAddress=docsRphyRpdDevCoresConnectedAddress, docsRphyRpdIfPhysEntSensorValue=docsRphyRpdIfPhysEntSensorValue, docsRphyCcapCoreGroup=docsRphyCcapCoreGroup, docsRphyRpdIfEnetEntry=docsRphyRpdIfEnetEntry, docsRphyRpdDevUsSignalQualityTable=docsRphyRpdDevUsSignalQualityTable, docsRphyRpdIfPhysEntityAlias=docsRphyRpdIfPhysEntityAlias, docsRphyRpdDevL2tpSessionInfoRemoteLcceIpAddrType=docsRphyRpdDevL2tpSessionInfoRemoteLcceIpAddrType, docsRphyRpdDevCapabBufferDepthCfgSupp=docsRphyRpdDevCapabBufferDepthCfgSupp, docsRphyCcapCinDsLatencyEntry=docsRphyCcapCinDsLatencyEntry, docsRphyRpdDevL2tpSessionInfoCreationTime=docsRphyRpdDevL2tpSessionInfoCreationTime, docsRphyRpdIpIfStatsInOctets=docsRphyRpdIpIfStatsInOctets, docsRphyRpdDevCapabNumNdfChans=docsRphyRpdDevCapabNumNdfChans, docsRphyRpdIpv6InterfaceTable=docsRphyRpdIpv6InterfaceTable, docsRphyRpdIpAddressPrefixLen=docsRphyRpdIpAddressPrefixLen, docsRphyRpdIpIfStatsInReceives=docsRphyRpdIpIfStatsInReceives, docsRphyRpdDevCoresConnectedName=docsRphyRpdDevCoresConnectedName, docsRphyRpdIpv4GrpEntry=docsRphyRpdIpv4GrpEntry, docsRphyRpdDevL2tpSessionInfoCoreIfMtu=docsRphyRpdDevL2tpSessionInfoCoreIfMtu, docsRphyRpdIfEnetAdminStatus=docsRphyRpdIfEnetAdminStatus, docsRphyRpdIfPhysEntityName=docsRphyRpdIfPhysEntityName, docsRphyCcapL2tpSessionFlowPspFlowId=docsRphyCcapL2tpSessionFlowPspFlowId, docsRphyRpdIpv6InterfaceReachableTime=docsRphyRpdIpv6InterfaceReachableTime, docsRphyCcapL2tpSessionInfoTable=docsRphyCcapL2tpSessionInfoTable, docsRphyRpdDevOob551UsChanStatusArpdSrcIpAddr=docsRphyRpdDevOob551UsChanStatusArpdSrcIpAddr, docsRphyRpdIpIcmpMsgStatsInPkts=docsRphyRpdIpIcmpMsgStatsInPkts, docsRphyRpdIfPhysEntityParentRelPos=docsRphyRpdIfPhysEntityParentRelPos, docsRphyRpdDevChanReachabilityStartChanIndex=docsRphyRpdDevChanReachabilityStartChanIndex, docsRphyRpdIpIfStatsOutMcastPkts=docsRphyRpdIpIfStatsOutMcastPkts, docsRphyRpdIpAddressType=docsRphyRpdIpAddressType, docsRphyCcapL2tpSessionInfoConnCtrlID=docsRphyCcapL2tpSessionInfoConnCtrlID, docsRphyRpdDevLocationLatitude=docsRphyRpdDevLocationLatitude, docsRphyRpdDevDsUsRfPortAllocTable=docsRphyRpdDevDsUsRfPortAllocTable, docsRphyRpdDevDsUsRfPortAllocOob551Chans=docsRphyRpdDevDsUsRfPortAllocOob551Chans, docsRphyRpdIpIcmpMibObjects=docsRphyRpdIpIcmpMibObjects, docsRphyRpdIfPhysEntityMfgName=docsRphyRpdIfPhysEntityMfgName, docsRphyRpdDevOob551UsChanStatusNcIpAddrType=docsRphyRpdDevOob551UsChanStatusNcIpAddrType, docsRphyCcapSecServerCertSerialNumber=docsRphyCcapSecServerCertSerialNumber, docsRphyRpdDevIdVendorName=docsRphyRpdDevIdVendorName, docsRphyRpdDevCoresConnectedEntry=docsRphyRpdDevCoresConnectedEntry, docsRphyCcapSecServerCertCert=docsRphyCcapSecServerCertCert, docsRphyRpdDevDepiMcastSessionId=docsRphyRpdDevDepiMcastSessionId, docsRphyRpdIfPhysEntityIndex=docsRphyRpdIfPhysEntityIndex, docsRphyRpdDevIdDeviceAlias=docsRphyRpdDevIdDeviceAlias, docsRphyRpdIfRpdToCoreMapRpdRfPortDirection=docsRphyRpdIfRpdToCoreMapRpdRfPortDirection, docsRphyRpdDevCapabilitiesTable=docsRphyRpdDevCapabilitiesTable, docsRphyRpdDevCrashDataFileStatusFilename=docsRphyRpdDevCrashDataFileStatusFilename, docsRphyRpdDevDiagStatusSeverityLevel=docsRphyRpdDevDiagStatusSeverityLevel, docsRphyRpdDevCapabNumDsOob55d1Chans=docsRphyRpdDevCapabNumDsOob55d1Chans, docsRphyRpdDevL2tpSessionInfoLastChange=docsRphyRpdDevL2tpSessionInfoLastChange, docsRphyRpdIfEnetStatsOutBroadcastFrames=docsRphyRpdIfEnetStatsOutBroadcastFrames, docsRphyRpdDevInfoNumCrashFilesAvail=docsRphyRpdDevInfoNumCrashFilesAvail, PYSNMP_MODULE_ID=docsRphyMib, docsRphyRpdDevUsSignalQualityRfPort=docsRphyRpdDevUsSignalQualityRfPort, docsRphyRpdDevDepiMcastSessionSrcIpAddr=docsRphyRpdDevDepiMcastSessionSrcIpAddr, docsRphyRpdIfCoreToRpdMapRpdRfChanType=docsRphyRpdIfCoreToRpdMapRpdRfChanType, docsRphyRpdIfEnetStatsOutErrors=docsRphyRpdIfEnetStatsOutErrors, docsRphyRpdIpDefaultRouterTable=docsRphyRpdIpDefaultRouterTable, docsRphyMib=docsRphyMib, docsRphyRpdIpAddressCreated=docsRphyRpdIpAddressCreated, docsRphyRpdIfEnetStatsInOctets=docsRphyRpdIfEnetStatsInOctets, docsRphyNotifications=docsRphyNotifications, docsRphyRpdDevIdUsBurstRcvrDrivVer=docsRphyRpdDevIdUsBurstRcvrDrivVer, docsRphyRpdIpAddressEntry=docsRphyRpdIpAddressEntry, docsRphyRpdDevUsSignalQualityUnerroreds=docsRphyRpdDevUsSignalQualityUnerroreds, docsRphyRpdDevL2tpSessionInfoLocalLcceIpAddr=docsRphyRpdDevL2tpSessionInfoLocalLcceIpAddr, docsRphyRpdIfEnetStatsOutOctets=docsRphyRpdIfEnetStatsOutOctets, docsRphyRpdDevChanReachabilityTable=docsRphyRpdDevChanReachabilityTable, docsRphyRpdIpNetToPhysicalLastUpdated=docsRphyRpdIpNetToPhysicalLastUpdated, docsRphyRpdDevOob551UsChanStatusMaxPwrLevel=docsRphyRpdDevOob551UsChanStatusMaxPwrLevel, docsRphyRpdDevCapabNumDsPspFlowsPerChan=docsRphyRpdDevCapabNumDsPspFlowsPerChan, docsRphyRpdDevDsUsRfPortAllocEntry=docsRphyRpdDevDsUsRfPortAllocEntry, docsRphyRpdDevDepiMcastSessionEntry=docsRphyRpdDevDepiMcastSessionEntry, docsRphyCcapL2tpSessionInfoMaxPayload=docsRphyCcapL2tpSessionInfoMaxPayload, docsRphyRpdDevEventLogLastTime=docsRphyRpdDevEventLogLastTime, docsRphyRpdIpv6GrpEntry=docsRphyRpdIpv6GrpEntry, docsRphyRpdIpIfStatsInHdrErrors=docsRphyRpdIpIfStatsInHdrErrors, docsRphyRpdIpIfStatsRefreshRate=docsRphyRpdIpIfStatsRefreshRate, docsRphyRpdGroup=docsRphyRpdGroup, docsRphyRpdDevL2tpSessionStatsEntry=docsRphyRpdDevL2tpSessionStatsEntry, docsRphyRpdIpDefaultRouterAddress=docsRphyRpdIpDefaultRouterAddress, docsRphyRpdIfEnetStatsOutBroadcastOctets=docsRphyRpdIfEnetStatsOutBroadcastOctets, docsRphyRpdDevDepiMcastSessionRemoteLcceIpAddr=docsRphyRpdDevDepiMcastSessionRemoteLcceIpAddr, docsRphyRpdIpIfStatsOutOctets=docsRphyRpdIpIfStatsOutOctets, docsRphyRpdIfRpdEnetToCoreEntityMapTable=docsRphyRpdIfRpdEnetToCoreEntityMapTable, docsRphyCcapSecServerCertSource=docsRphyCcapSecServerCertSource, docsRphyCcapSessionCinDsLatencyStatsVal=docsRphyCcapSessionCinDsLatencyStatsVal, docsRphyRpdIfEnetLinkUpDownTrapEnable=docsRphyRpdIfEnetLinkUpDownTrapEnable, docsRphyRpdIfRpdEnetToCoreEntityMapEntityIndex=docsRphyRpdIfRpdEnetToCoreEntityMapEntityIndex, docsRphyRpdIfEnetPromiscuousMode=docsRphyRpdIfEnetPromiscuousMode, docsRphyRpdIpNetToPhysicalType=docsRphyRpdIpNetToPhysicalType, docsRphyRpdDevOob551UsChanStatusCorrectedCellsRcvd=docsRphyRpdDevOob551UsChanStatusCorrectedCellsRcvd, docsRphyRpdIpNetToPhysicalNetAddressType=docsRphyRpdIpNetToPhysicalNetAddressType, docsRphyRpdIfEnetStatsInMulticastFrames=docsRphyRpdIfEnetStatsInMulticastFrames, docsRphyRpdIfPhysEntSensorTable=docsRphyRpdIfPhysEntSensorTable)
mibBuilder.exportSymbols("DOCS-RPHY-MIB", docsRphyRpdIpIfStatsOutRequests=docsRphyRpdIpIfStatsOutRequests, docsRphyRpdDevDiagStatusTable=docsRphyRpdDevDiagStatusTable, docsRphyRpdDevL2tpSessionInfoEntry=docsRphyRpdDevL2tpSessionInfoEntry, docsRphyRpdIfEnetStatsInUnknownProtos=docsRphyRpdIfEnetStatsInUnknownProtos, docsRphyRpdIpIfStatsOutTransmits=docsRphyRpdIpIfStatsOutTransmits, docsRphyRpdDevOob551UsChanStatusChannelId=docsRphyRpdDevOob551UsChanStatusChannelId, docsRphyRpdDevL2tpSessionInfoLocalId=docsRphyRpdDevL2tpSessionInfoLocalId, docsRphyCcapL2tpSessionInfoCoreId=docsRphyCcapL2tpSessionInfoCoreId, docsRphyCcapCinDsLatencyLastVal=docsRphyCcapCinDsLatencyLastVal, docsRphyRpdDevL2tpSessionInfoConnCtrlID=docsRphyRpdDevL2tpSessionInfoConnCtrlID, docsRphyRpdIfEnetTable=docsRphyRpdIfEnetTable, docsRphyRpdDevCapabNumUsOob55d2Demods=docsRphyRpdDevCapabNumUsOob55d2Demods, docsRphyRpdIpv6GrpIpDefaultHopLimit=docsRphyRpdIpv6GrpIpDefaultHopLimit, docsRphyRpdIpIcmpMsgStatsTable=docsRphyRpdIpIcmpMsgStatsTable, docsRphyRpdDevOob551UsChanStatusNcIpAddr=docsRphyRpdDevOob551UsChanStatusNcIpAddr, docsRphyRpdIfEnetStatsInFrames=docsRphyRpdIfEnetStatsInFrames, docsRphyRpdIfEnetType=docsRphyRpdIfEnetType, docsRphyCcapSessionCinDsLatencyStatsTable=docsRphyCcapSessionCinDsLatencyStatsTable, docsRphyRpdIfEnetStatsOutDiscards=docsRphyRpdIfEnetStatsOutDiscards, docsRphyRpdIpAddressAddrType=docsRphyRpdIpAddressAddrType, docsRphyRpdDevUsSignalQualityRxMer=docsRphyRpdDevUsSignalQualityRxMer, docsRphyRpdIfEnetPortIndex=docsRphyRpdIfEnetPortIndex, docsRphyRpdDevL2tpSessionInfoRemoteId=docsRphyRpdDevL2tpSessionInfoRemoteId, docsRphyRpdIfPhysEntityDescr=docsRphyRpdIfPhysEntityDescr, docsRphyRpdDevCapabSupportsFreqTilt=docsRphyRpdDevCapabSupportsFreqTilt, docsRphyRpdIpAddressOrigin=docsRphyRpdIpAddressOrigin, docsRphyRpdDevMibObjects=docsRphyRpdDevMibObjects, docsRphyRpdIfCoreToRpdMapTable=docsRphyRpdIfCoreToRpdMapTable, docsRphyCcapSessionCinDsLatencyStatsIntervalSeq=docsRphyCcapSessionCinDsLatencyStatsIntervalSeq, docsRphyRpdDevChanReachabilityChanType=docsRphyRpdDevChanReachabilityChanType, docsRphyRpdIfRpdToCoreMapRpdRfPortIndex=docsRphyRpdIfRpdToCoreMapRpdRfPortIndex, docsRphyCcapL2tpSessionInfoLocalLcceIpAddrType=docsRphyCcapL2tpSessionInfoLocalLcceIpAddrType, docsRphyRpdIfEnetPhysAddress=docsRphyRpdIfEnetPhysAddress, docsRphyRpdDevIdRcpProtocolVer=docsRphyRpdDevIdRcpProtocolVer, docsRphyRpdIfEnetOperStatus=docsRphyRpdIfEnetOperStatus, docsRphyRpdDevIdModelNum=docsRphyRpdDevIdModelNum, docsRphyObjects=docsRphyObjects, docsRphyRpdIpNetToPhysicalPhysAddress=docsRphyRpdIpNetToPhysicalPhysAddress, docsRphyRpdDevChanReachabilityEnetPortIndex=docsRphyRpdDevChanReachabilityEnetPortIndex, docsRphyRpdIfPhysEntityUUID=docsRphyRpdIfPhysEntityUUID, docsRphyRpdDevUsSignalQualityChannelIfIndex=docsRphyRpdDevUsSignalQualityChannelIfIndex, docsRphyRpdDevOob551UsChanStatusUncorrectableCellsRcvd=docsRphyRpdDevOob551UsChanStatusUncorrectableCellsRcvd, docsRphyRpdIpIfStatsInMcastOctets=docsRphyRpdIpIfStatsInMcastOctets, docsRphyRpdDevOob551UsChanStatusPwrLevel=docsRphyRpdDevOob551UsChanStatusPwrLevel, docsRphyRpdIfEnetStatsOutUnicastOctets=docsRphyRpdIfEnetStatsOutUnicastOctets, docsRphyCcapL2tpSessionInfoLocalStatus=docsRphyCcapL2tpSessionInfoLocalStatus, docsRphyRpdIfPhysEntityMfgDate=docsRphyRpdIfPhysEntityMfgDate, docsRphyRpdDevL2tpSessionInfoUdpPort=docsRphyRpdDevL2tpSessionInfoUdpPort, docsRphyCompliances=docsRphyCompliances, docsRphyRpdIpIfStatsOutMcastOctets=docsRphyRpdIpIfStatsOutMcastOctets, docsRphyCcapL2tpSessionInfoSessionSubType=docsRphyCcapL2tpSessionInfoSessionSubType, docsRphyRpdIpv6InterfaceEnableStatus=docsRphyRpdIpv6InterfaceEnableStatus, docsRphyRpdDevCapabNumAsynchVideoChans=docsRphyRpdDevCapabNumAsynchVideoChans, docsRphyRpdDevEventLogIndex=docsRphyRpdDevEventLogIndex, docsRphyRpdDevOob551UsChanStatusTotalCellsRcvd=docsRphyRpdDevOob551UsChanStatusTotalCellsRcvd, docsRphyRpdDevIdUsBurstRcvrSerialNum=docsRphyRpdDevIdUsBurstRcvrSerialNum, docsRphyRpdIfPhysEntitySerialNum=docsRphyRpdIfPhysEntitySerialNum, docsRphyRpdIfPhysEntityContainedIn=docsRphyRpdIfPhysEntityContainedIn, docsRphyRpdIfEnetStatsOutMulticastOctets=docsRphyRpdIfEnetStatsOutMulticastOctets, docsRphyRpdDevIdUsBurstRcvrVendorId=docsRphyRpdDevIdUsBurstRcvrVendorId, docsRphyRpdIfPhysEntityClass=docsRphyRpdIfPhysEntityClass, docsRphyRpdIfPhysEntityTable=docsRphyRpdIfPhysEntityTable, docsRphyRpdDevL2tpSessionInfoOperStatus=docsRphyRpdDevL2tpSessionInfoOperStatus, docsRphyRpdDevEventLogText=docsRphyRpdDevEventLogText, docsRphyRpdIfPhysEntityCoreIfIndex=docsRphyRpdIfPhysEntityCoreIfIndex, docsRphyRpdIfEnetStatsOutMulticastFrames=docsRphyRpdIfEnetStatsOutMulticastFrames, docsRphyRpdIpIfStatsDiscontinuityTime=docsRphyRpdIpIfStatsDiscontinuityTime, docsRphyRpdDevCapabNumUsScQamChans=docsRphyRpdDevCapabNumUsScQamChans, docsRphyRpdDevLocationEntry=docsRphyRpdDevLocationEntry, docsRphyRpdDevEventLogCounts=docsRphyRpdDevEventLogCounts, docsRphyRpdIfPhysEntSensorValueTimeStamp=docsRphyRpdIfPhysEntSensorValueTimeStamp, docsRphyCcapL2tpSessionInfoRemoteLcceIpAddrType=docsRphyCcapL2tpSessionInfoRemoteLcceIpAddrType, docsRphyRpdDevEventLogEntry=docsRphyRpdDevEventLogEntry, docsRphyRpdDevEventLogLevel=docsRphyRpdDevEventLogLevel, docsRphyRpdDevCapabTiltRange=docsRphyRpdDevCapabTiltRange, docsRphyRpdIpv6InterfaceRetransmitTime=docsRphyRpdIpv6InterfaceRetransmitTime, docsRphyRpdDevIdCurrSwVer=docsRphyRpdDevIdCurrSwVer, docsRphyRpdDevCapabMaxCwTonePwr=docsRphyRpdDevCapabMaxCwTonePwr, docsRphyRpdIfRpdToCoreMapRpdRfChanType=docsRphyRpdIfRpdToCoreMapRpdRfChanType, docsRphyCcapL2tpSessionInfoLocalLcceIpAddr=docsRphyCcapL2tpSessionInfoLocalLcceIpAddr, docsRphyRpdDevInfoUniqueId=docsRphyRpdDevInfoUniqueId, docsRphyRpdIpv4GrpTable=docsRphyRpdIpv4GrpTable, docsRphyRpdIpAddressLastChanged=docsRphyRpdIpAddressLastChanged, docsRphyRpdIfRpdToCoreMapRpdRfChanIndex=docsRphyRpdIfRpdToCoreMapRpdRfChanIndex, docsRphyRpdDevOob551UsChanStatusArpdSrcIpAddrType=docsRphyRpdDevOob551UsChanStatusArpdSrcIpAddrType, docsRphyRpdIpNetToPhysicalNetAddress=docsRphyRpdIpNetToPhysicalNetAddress, docsRphyCcapL2tpSessionInfoDescr=docsRphyCcapL2tpSessionInfoDescr, docsRphyRpdDevCapabRpdUcdProcTime=docsRphyRpdDevCapabRpdUcdProcTime, docsRphyRpdIfPhysEntSensorPrecision=docsRphyRpdIfPhysEntSensorPrecision, docsRphyRpdIpAddressTable=docsRphyRpdIpAddressTable, docsRphyRpdDevCapabNumTenGeNsPorts=docsRphyRpdDevCapabNumTenGeNsPorts, docsRphyRpdDevCrashDataFileStatusTable=docsRphyRpdDevCrashDataFileStatusTable, docsRphyRpdIfEnetName=docsRphyRpdIfEnetName, docsRphyRpdDevOob551UsChanStatusRfPort=docsRphyRpdDevOob551UsChanStatusRfPort, docsRphyCcapSecServerCertSubject=docsRphyCcapSecServerCertSubject, docsRphyRpdIfEnetStatsInUnicastOctets=docsRphyRpdIfEnetStatsInUnicastOctets, docsRphyRpdIpDefaultRouterPreference=docsRphyRpdIpDefaultRouterPreference, docsRphyRpdDevL2tpSessionInfoMaxPayload=docsRphyRpdDevL2tpSessionInfoMaxPayload, docsRphyRpdIpv6GrpIfStatsTableLastChange=docsRphyRpdIpv6GrpIfStatsTableLastChange, docsRphyRpdIpv4InterfaceTable=docsRphyRpdIpv4InterfaceTable, docsRphyRpdDevCapabNumNdrChans=docsRphyRpdDevCapabNumNdrChans, docsRphyRpdDevDepiMcastSessionLocalLcceIpAddr=docsRphyRpdDevDepiMcastSessionLocalLcceIpAddr, docsRphyRpdIpDefaultRouterAddressType=docsRphyRpdIpDefaultRouterAddressType, docsRphyRpdIfEnetMtu=docsRphyRpdIfEnetMtu, docsRphyRpdDevL2tpSessionInfoLocalStatus=docsRphyRpdDevL2tpSessionInfoLocalStatus, docsRphyRpdIfEnetConnectorPresent=docsRphyRpdIfEnetConnectorPresent, docsRphyRpdDevIdDeviceDescr=docsRphyRpdDevIdDeviceDescr, docsRphyRpdDevCapabSupportsUdpEncap=docsRphyRpdDevCapabSupportsUdpEncap, docsRphyRpdIpIcmpMsgStatsEntry=docsRphyRpdIpIcmpMsgStatsEntry, docsRphyCcapL2tpSessionInfoPathPayload=docsRphyCcapL2tpSessionInfoPathPayload, docsRphyRpdDevCrashDataFileStatusFileStatus=docsRphyRpdDevCrashDataFileStatusFileStatus, docsRphyRpdDevL2tpSessionInfoSessionType=docsRphyRpdDevL2tpSessionInfoSessionType, docsRphyRpdDevIdVendorId=docsRphyRpdDevIdVendorId, docsRphyRpdIpAddressAddr=docsRphyRpdIpAddressAddr, docsRphyRpdDevChanReachabilityEntry=docsRphyRpdDevChanReachabilityEntry, docsRphyRpdIpv6GrpInterfaceTableLastChange=docsRphyRpdIpv6GrpInterfaceTableLastChange, docsRphyRpdIpIfStatsTable=docsRphyRpdIpIfStatsTable, docsRphyCcapL2tpSessionStatsOutOfSeqPkts=docsRphyCcapL2tpSessionStatsOutOfSeqPkts, docsRphyRpdDevDepiMcastSessionIpAddrType=docsRphyRpdDevDepiMcastSessionIpAddrType, docsRphyRpdDevLocationDescr=docsRphyRpdDevLocationDescr, docsRphyRpdDevDsUsRfPortAllocScQamChans=docsRphyRpdDevDsUsRfPortAllocScQamChans, docsRphyRpdIpv6InterfaceIdentifier=docsRphyRpdIpv6InterfaceIdentifier, docsRphyRpdIfEnetStatsOutFrames=docsRphyRpdIfEnetStatsOutFrames, docsRphyRpdDevEventLogFirstTime=docsRphyRpdDevEventLogFirstTime, docsRphyRpdIfRpdToCoreMapEntry=docsRphyRpdIfRpdToCoreMapEntry, docsRphyRpdDevCoresConnectedTable=docsRphyRpdDevCoresConnectedTable, docsRphyRpdDevDsUsRfPortAllocNdChans=docsRphyRpdDevDsUsRfPortAllocNdChans, docsRphyRpdDevDepiMcastSessionTable=docsRphyRpdDevDepiMcastSessionTable, docsRphyRpdIfPhysEntityFirmwareRev=docsRphyRpdIfPhysEntityFirmwareRev, docsRphyRpdIpDefaultRouterLifetime=docsRphyRpdIpDefaultRouterLifetime, docsRphyRpdDevCapabNumDsScQamChans=docsRphyRpdDevCapabNumDsScQamChans, docsRphyRpdDevDiagStatusProbableCause=docsRphyRpdDevDiagStatusProbableCause, docsRphyRpdDevOob551UsChanStatusTable=docsRphyRpdDevOob551UsChanStatusTable, docsRphyRpdDevL2tpSessionStatsTable=docsRphyRpdDevL2tpSessionStatsTable)
