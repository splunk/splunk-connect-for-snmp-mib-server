#
# PySNMP MIB module NETSCREEN-OSPF-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/NETSCREEN-OSPF-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 20:10:23 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ConstraintsUnion, ValueRangeConstraint, SingleValueConstraint, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ConstraintsUnion", "ValueRangeConstraint", "SingleValueConstraint", "ValueSizeConstraint")
netscreenVR, = mibBuilder.importSymbols("NETSCREEN-SMI", "netscreenVR")
NotificationGroup, ObjectGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ObjectGroup", "ModuleCompliance")
Bits, Integer32, MibIdentifier, NotificationType, Unsigned32, Gauge32, ModuleIdentity, TimeTicks, Counter64, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter32, mib_2, ObjectIdentity, IpAddress, iso = mibBuilder.importSymbols("SNMPv2-SMI", "Bits", "Integer32", "MibIdentifier", "NotificationType", "Unsigned32", "Gauge32", "ModuleIdentity", "TimeTicks", "Counter64", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter32", "mib-2", "ObjectIdentity", "IpAddress", "iso")
DisplayString, RowStatus, TextualConvention, TruthValue = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "RowStatus", "TextualConvention", "TruthValue")
nsOspf = ModuleIdentity((1, 3, 6, 1, 4, 1, 3224, 18, 2))
if mibBuilder.loadTexts: nsOspf.setLastUpdated('200506032022Z')
if mibBuilder.loadTexts: nsOspf.setOrganization('Juniper Networks, Inc.')
class AreaID(TextualConvention, IpAddress):
    status = 'deprecated'

class RouterID(TextualConvention, IpAddress):
    status = 'deprecated'

class Metric(TextualConvention, Integer32):
    status = 'deprecated'
    subtypeSpec = Integer32.subtypeSpec + ValueRangeConstraint(0, 65535)

class BigMetric(TextualConvention, Integer32):
    status = 'deprecated'
    subtypeSpec = Integer32.subtypeSpec + ValueRangeConstraint(0, 16777215)

class Status(TextualConvention, Integer32):
    status = 'deprecated'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("enabled", 1), ("disabled", 2))

class PositiveInteger(TextualConvention, Integer32):
    status = 'deprecated'
    subtypeSpec = Integer32.subtypeSpec + ValueRangeConstraint(0, 2147483647)

class HelloRange(TextualConvention, Integer32):
    status = 'deprecated'
    subtypeSpec = Integer32.subtypeSpec + ValueRangeConstraint(1, 65535)

class UpToMaxAge(TextualConvention, Integer32):
    status = 'deprecated'
    subtypeSpec = Integer32.subtypeSpec + ValueRangeConstraint(0, 3600)

class InterfaceIndex(TextualConvention, Integer32):
    status = 'deprecated'

class DesignatedRouterPriority(TextualConvention, Integer32):
    status = 'deprecated'
    subtypeSpec = Integer32.subtypeSpec + ValueRangeConstraint(0, 255)

class TOSType(TextualConvention, Integer32):
    status = 'deprecated'
    subtypeSpec = Integer32.subtypeSpec + ValueRangeConstraint(0, 30)

nsOspfGeneralTable = MibTable((1, 3, 6, 1, 4, 1, 3224, 18, 2, 1), )
if mibBuilder.loadTexts: nsOspfGeneralTable.setStatus('deprecated')
nsOspfGeneralEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3224, 18, 2, 1, 1), ).setIndexNames((0, "NETSCREEN-OSPF-MIB", "nsOspfGeneralVRID"))
if mibBuilder.loadTexts: nsOspfGeneralEntry.setStatus('deprecated')
nsOspfRouterId = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 2, 1, 1, 1), RouterID()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsOspfRouterId.setStatus('deprecated')
nsOspfAdminStat = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 2, 1, 1, 2), Status()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsOspfAdminStat.setStatus('deprecated')
nsOspfVersionNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 2, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(2))).clone(namedValues=NamedValues(("version2", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsOspfVersionNumber.setStatus('deprecated')
nsOspfAreaBdrRtrStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 2, 1, 1, 4), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsOspfAreaBdrRtrStatus.setStatus('deprecated')
nsOspfASBdrRtrStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 2, 1, 1, 5), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsOspfASBdrRtrStatus.setStatus('deprecated')
nsOspfExternLsaCount = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 2, 1, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsOspfExternLsaCount.setStatus('deprecated')
nsOspfExternLsaCksumSum = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 2, 1, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsOspfExternLsaCksumSum.setStatus('deprecated')
nsOspfTOSSupport = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 2, 1, 1, 8), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsOspfTOSSupport.setStatus('deprecated')
nsOspfOriginateNewLsas = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 2, 1, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsOspfOriginateNewLsas.setStatus('deprecated')
nsOspfRxNewLsas = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 2, 1, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsOspfRxNewLsas.setStatus('deprecated')
nsOspfExtLsdbLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 2, 1, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 2147483647)).clone(-1)).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsOspfExtLsdbLimit.setStatus('deprecated')
nsOspfMulticastExtensions = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 2, 1, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsOspfMulticastExtensions.setStatus('deprecated')
nsOspfExitOverflowInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 2, 1, 1, 13), PositiveInteger()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsOspfExitOverflowInterval.setStatus('deprecated')
nsOspfDemandExtensions = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 2, 1, 1, 14), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsOspfDemandExtensions.setStatus('deprecated')
nsOspfGeneralVRID = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 2, 1, 1, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsOspfGeneralVRID.setStatus('deprecated')
nsOspfAreaTable = MibTable((1, 3, 6, 1, 4, 1, 3224, 18, 2, 2), )
if mibBuilder.loadTexts: nsOspfAreaTable.setStatus('deprecated')
nsOspfAreaEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3224, 18, 2, 2, 1), ).setIndexNames((0, "NETSCREEN-OSPF-MIB", "nsOspfAreaId"), (0, "NETSCREEN-OSPF-MIB", "nsOspfAreaVRID"))
if mibBuilder.loadTexts: nsOspfAreaEntry.setStatus('deprecated')
nsOspfAreaId = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 2, 2, 1, 1), AreaID()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsOspfAreaId.setStatus('deprecated')
nsOspfImportAsExtern = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 2, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("importExternal", 1), ("importNoExternal", 2), ("importNssa", 3))).clone('importExternal')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: nsOspfImportAsExtern.setStatus('deprecated')
nsOspfSpfRuns = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 2, 2, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsOspfSpfRuns.setStatus('deprecated')
nsOspfAreaBdrRtrCount = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 2, 2, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsOspfAreaBdrRtrCount.setStatus('deprecated')
nsOspfAsBdrRtrCount = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 2, 2, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsOspfAsBdrRtrCount.setStatus('deprecated')
nsOspfAreaLsaCount = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 2, 2, 1, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsOspfAreaLsaCount.setStatus('deprecated')
nsOspfAreaLsaCksumSum = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 2, 2, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsOspfAreaLsaCksumSum.setStatus('deprecated')
nsOspfAreaSummary = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 2, 2, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("noAreaSummary", 1), ("sendAreaSummary", 2))).clone('noAreaSummary')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: nsOspfAreaSummary.setStatus('deprecated')
nsOspfAreaStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 2, 2, 1, 10), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: nsOspfAreaStatus.setStatus('deprecated')
nsOspfAreaVRID = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 2, 2, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsOspfAreaVRID.setStatus('deprecated')
nsOspfStubAreaTable = MibTable((1, 3, 6, 1, 4, 1, 3224, 18, 2, 3), )
if mibBuilder.loadTexts: nsOspfStubAreaTable.setStatus('deprecated')
nsOspfStubAreaEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3224, 18, 2, 3, 1), ).setIndexNames((0, "NETSCREEN-OSPF-MIB", "nsOspfStubAreaId"), (0, "NETSCREEN-OSPF-MIB", "nsOspfStubTOS"), (0, "NETSCREEN-OSPF-MIB", "nsOspfStubVRID"))
if mibBuilder.loadTexts: nsOspfStubAreaEntry.setStatus('deprecated')
nsOspfStubAreaId = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 2, 3, 1, 1), AreaID()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsOspfStubAreaId.setStatus('deprecated')
nsOspfStubTOS = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 2, 3, 1, 2), TOSType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsOspfStubTOS.setStatus('deprecated')
nsOspfStubMetric = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 2, 3, 1, 3), BigMetric()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: nsOspfStubMetric.setStatus('deprecated')
nsOspfStubStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 2, 3, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: nsOspfStubStatus.setStatus('deprecated')
nsOspfStubMetricType = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 2, 3, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("nsOspfMetric", 1), ("comparableCost", 2), ("nonComparable", 3))).clone('nsOspfMetric')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: nsOspfStubMetricType.setStatus('deprecated')
nsOspfStubVRID = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 2, 3, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsOspfStubVRID.setStatus('deprecated')
nsOspfLsdbTable = MibTable((1, 3, 6, 1, 4, 1, 3224, 18, 2, 4), )
if mibBuilder.loadTexts: nsOspfLsdbTable.setStatus('deprecated')
nsOspfLsdbEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3224, 18, 2, 4, 1), ).setIndexNames((0, "NETSCREEN-OSPF-MIB", "nsOspfLsdbAreaId"), (0, "NETSCREEN-OSPF-MIB", "nsOspfLsdbType"), (0, "NETSCREEN-OSPF-MIB", "nsOspfLsdbLsid"), (0, "NETSCREEN-OSPF-MIB", "nsOspfLsdbRouterId"), (0, "NETSCREEN-OSPF-MIB", "nsOspfLsdbVRID"))
if mibBuilder.loadTexts: nsOspfLsdbEntry.setStatus('deprecated')
nsOspfLsdbAreaId = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 2, 4, 1, 1), AreaID()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsOspfLsdbAreaId.setStatus('deprecated')
nsOspfLsdbType = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 2, 4, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("routerLink", 1), ("networkLink", 2), ("summaryLink", 3), ("asSummaryLink", 4), ("asExternalLink", 5), ("multicastLink", 6), ("nssaExternalLink", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsOspfLsdbType.setStatus('deprecated')
nsOspfLsdbLsid = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 2, 4, 1, 3), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsOspfLsdbLsid.setStatus('deprecated')
nsOspfLsdbRouterId = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 2, 4, 1, 4), RouterID()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsOspfLsdbRouterId.setStatus('deprecated')
nsOspfLsdbSequence = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 2, 4, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsOspfLsdbSequence.setStatus('deprecated')
nsOspfLsdbAge = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 2, 4, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsOspfLsdbAge.setStatus('deprecated')
nsOspfLsdbChecksum = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 2, 4, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsOspfLsdbChecksum.setStatus('deprecated')
nsOspfLsdbAdvertisement = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 2, 4, 1, 8), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsOspfLsdbAdvertisement.setStatus('deprecated')
nsOspfLsdbVRID = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 2, 4, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsOspfLsdbVRID.setStatus('deprecated')
nsOspfHostTable = MibTable((1, 3, 6, 1, 4, 1, 3224, 18, 2, 6), )
if mibBuilder.loadTexts: nsOspfHostTable.setStatus('deprecated')
nsOspfHostEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3224, 18, 2, 6, 1), ).setIndexNames((0, "NETSCREEN-OSPF-MIB", "nsOspfHostIpAddress"), (0, "NETSCREEN-OSPF-MIB", "nsOspfHostTOS"), (0, "NETSCREEN-OSPF-MIB", "nsOspfHostVRID"))
if mibBuilder.loadTexts: nsOspfHostEntry.setStatus('deprecated')
nsOspfHostIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 2, 6, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsOspfHostIpAddress.setStatus('deprecated')
nsOspfHostTOS = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 2, 6, 1, 2), TOSType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsOspfHostTOS.setStatus('deprecated')
nsOspfHostMetric = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 2, 6, 1, 3), Metric()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: nsOspfHostMetric.setStatus('deprecated')
nsOspfHostStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 2, 6, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: nsOspfHostStatus.setStatus('deprecated')
nsOspfHostAreaID = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 2, 6, 1, 5), AreaID()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsOspfHostAreaID.setStatus('deprecated')
nsOspfHostVRID = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 2, 6, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsOspfHostVRID.setStatus('deprecated')
nsOspfIfTable = MibTable((1, 3, 6, 1, 4, 1, 3224, 18, 2, 7), )
if mibBuilder.loadTexts: nsOspfIfTable.setStatus('deprecated')
nsOspfIfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3224, 18, 2, 7, 1), ).setIndexNames((0, "NETSCREEN-OSPF-MIB", "nsOspfIfIpAddress"), (0, "NETSCREEN-OSPF-MIB", "nsOspfAddressLessIf"), (0, "NETSCREEN-OSPF-MIB", "nsOspfIfVRID"))
if mibBuilder.loadTexts: nsOspfIfEntry.setStatus('deprecated')
nsOspfIfIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 2, 7, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsOspfIfIpAddress.setStatus('deprecated')
nsOspfAddressLessIf = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 2, 7, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsOspfAddressLessIf.setStatus('deprecated')
nsOspfIfAreaId = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 2, 7, 1, 3), AreaID().clone(hexValue="00000000")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: nsOspfIfAreaId.setStatus('deprecated')
nsOspfIfType = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 2, 7, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 5))).clone(namedValues=NamedValues(("broadcast", 1), ("nbma", 2), ("pointToPoint", 3), ("pointToMultipoint", 5)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: nsOspfIfType.setStatus('deprecated')
nsOspfIfAdminStat = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 2, 7, 1, 5), Status().clone('enabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: nsOspfIfAdminStat.setStatus('deprecated')
nsOspfIfRtrPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 2, 7, 1, 6), DesignatedRouterPriority().clone(1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: nsOspfIfRtrPriority.setStatus('deprecated')
nsOspfIfTransitDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 2, 7, 1, 7), UpToMaxAge().clone(1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: nsOspfIfTransitDelay.setStatus('deprecated')
nsOspfIfRetransInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 2, 7, 1, 8), UpToMaxAge().clone(5)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: nsOspfIfRetransInterval.setStatus('deprecated')
nsOspfIfHelloInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 2, 7, 1, 9), HelloRange().clone(10)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: nsOspfIfHelloInterval.setStatus('deprecated')
nsOspfIfRtrDeadInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 2, 7, 1, 10), PositiveInteger().clone(40)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: nsOspfIfRtrDeadInterval.setStatus('deprecated')
nsOspfIfPollInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 2, 7, 1, 11), PositiveInteger().clone(120)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: nsOspfIfPollInterval.setStatus('deprecated')
nsOspfIfState = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 2, 7, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("down", 1), ("loopback", 2), ("waiting", 3), ("pointToPoint", 4), ("designatedRouter", 5), ("backupDesignatedRouter", 6), ("otherDesignatedRouter", 7))).clone('down')).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsOspfIfState.setStatus('deprecated')
nsOspfIfDesignatedRouter = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 2, 7, 1, 13), IpAddress().clone(hexValue="00000000")).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsOspfIfDesignatedRouter.setStatus('deprecated')
nsOspfIfBackupDesignatedRouter = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 2, 7, 1, 14), IpAddress().clone(hexValue="00000000")).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsOspfIfBackupDesignatedRouter.setStatus('deprecated')
nsOspfIfEvents = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 2, 7, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsOspfIfEvents.setStatus('deprecated')
nsOspfIfAuthKey = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 2, 7, 1, 16), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 256)).clone(hexValue="0000000000000000")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: nsOspfIfAuthKey.setStatus('deprecated')
nsOspfIfStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 2, 7, 1, 17), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: nsOspfIfStatus.setStatus('deprecated')
nsOspfIfMulticastForwarding = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 2, 7, 1, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("blocked", 1), ("multicast", 2), ("unicast", 3))).clone('blocked')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: nsOspfIfMulticastForwarding.setStatus('deprecated')
nsOspfIfDemand = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 2, 7, 1, 19), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: nsOspfIfDemand.setStatus('deprecated')
nsOspfIfAuthType = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 2, 7, 1, 20), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: nsOspfIfAuthType.setStatus('deprecated')
nsOspfIfVRID = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 2, 7, 1, 21), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsOspfIfVRID.setStatus('deprecated')
nsOspfIfMetricTable = MibTable((1, 3, 6, 1, 4, 1, 3224, 18, 2, 8), )
if mibBuilder.loadTexts: nsOspfIfMetricTable.setStatus('deprecated')
nsOspfIfMetricEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3224, 18, 2, 8, 1), ).setIndexNames((0, "NETSCREEN-OSPF-MIB", "nsOspfIfMetricIpAddress"), (0, "NETSCREEN-OSPF-MIB", "nsOspfIfMetricAddressLessIf"), (0, "NETSCREEN-OSPF-MIB", "nsOspfIfMetricTOS"), (0, "NETSCREEN-OSPF-MIB", "nsOspfIfMetricVRID"))
if mibBuilder.loadTexts: nsOspfIfMetricEntry.setStatus('deprecated')
nsOspfIfMetricIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 2, 8, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsOspfIfMetricIpAddress.setStatus('deprecated')
nsOspfIfMetricAddressLessIf = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 2, 8, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsOspfIfMetricAddressLessIf.setStatus('deprecated')
nsOspfIfMetricTOS = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 2, 8, 1, 3), TOSType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsOspfIfMetricTOS.setStatus('deprecated')
nsOspfIfMetricValue = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 2, 8, 1, 4), Metric()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: nsOspfIfMetricValue.setStatus('deprecated')
nsOspfIfMetricStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 2, 8, 1, 5), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: nsOspfIfMetricStatus.setStatus('deprecated')
nsOspfIfMetricVRID = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 2, 8, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsOspfIfMetricVRID.setStatus('deprecated')
nsOspfVirtIfTable = MibTable((1, 3, 6, 1, 4, 1, 3224, 18, 2, 9), )
if mibBuilder.loadTexts: nsOspfVirtIfTable.setStatus('deprecated')
nsOspfVirtIfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3224, 18, 2, 9, 1), ).setIndexNames((0, "NETSCREEN-OSPF-MIB", "nsOspfVirtIfAreaId"), (0, "NETSCREEN-OSPF-MIB", "nsOspfVirtIfNeighbor"), (0, "NETSCREEN-OSPF-MIB", "nsOspfVirtIfVRID"))
if mibBuilder.loadTexts: nsOspfVirtIfEntry.setStatus('deprecated')
nsOspfVirtIfAreaId = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 2, 9, 1, 1), AreaID()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsOspfVirtIfAreaId.setStatus('deprecated')
nsOspfVirtIfNeighbor = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 2, 9, 1, 2), RouterID()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsOspfVirtIfNeighbor.setStatus('deprecated')
nsOspfVirtIfTransitDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 2, 9, 1, 3), UpToMaxAge().clone(1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: nsOspfVirtIfTransitDelay.setStatus('deprecated')
nsOspfVirtIfRetransInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 2, 9, 1, 4), UpToMaxAge().clone(5)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: nsOspfVirtIfRetransInterval.setStatus('deprecated')
nsOspfVirtIfHelloInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 2, 9, 1, 5), HelloRange().clone(10)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: nsOspfVirtIfHelloInterval.setStatus('deprecated')
nsOspfVirtIfRtrDeadInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 2, 9, 1, 6), PositiveInteger().clone(60)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: nsOspfVirtIfRtrDeadInterval.setStatus('deprecated')
nsOspfVirtIfState = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 2, 9, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 4))).clone(namedValues=NamedValues(("down", 1), ("pointToPoint", 4))).clone('down')).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsOspfVirtIfState.setStatus('deprecated')
nsOspfVirtIfEvents = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 2, 9, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsOspfVirtIfEvents.setStatus('deprecated')
nsOspfVirtIfAuthKey = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 2, 9, 1, 9), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 256)).clone(hexValue="0000000000000000")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: nsOspfVirtIfAuthKey.setStatus('deprecated')
nsOspfVirtIfStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 2, 9, 1, 10), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: nsOspfVirtIfStatus.setStatus('deprecated')
nsOspfVirtIfAuthType = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 2, 9, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: nsOspfVirtIfAuthType.setStatus('deprecated')
nsOspfVirtIfVRID = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 2, 9, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsOspfVirtIfVRID.setStatus('deprecated')
nsOspfNbrTable = MibTable((1, 3, 6, 1, 4, 1, 3224, 18, 2, 10), )
if mibBuilder.loadTexts: nsOspfNbrTable.setStatus('deprecated')
nsOspfNbrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3224, 18, 2, 10, 1), ).setIndexNames((0, "NETSCREEN-OSPF-MIB", "nsOspfNbrIpAddr"), (0, "NETSCREEN-OSPF-MIB", "nsOspfNbrAddressLessIndex"), (0, "NETSCREEN-OSPF-MIB", "nsOspfNbrVRID"))
if mibBuilder.loadTexts: nsOspfNbrEntry.setStatus('deprecated')
nsOspfNbrIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 2, 10, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsOspfNbrIpAddr.setStatus('deprecated')
nsOspfNbrAddressLessIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 2, 10, 1, 2), InterfaceIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsOspfNbrAddressLessIndex.setStatus('deprecated')
nsOspfNbrRtrId = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 2, 10, 1, 3), RouterID().clone(hexValue="00000000")).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsOspfNbrRtrId.setStatus('deprecated')
nsOspfNbrOptions = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 2, 10, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsOspfNbrOptions.setStatus('deprecated')
nsOspfNbrPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 2, 10, 1, 5), DesignatedRouterPriority().clone(1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: nsOspfNbrPriority.setStatus('deprecated')
nsOspfNbrState = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 2, 10, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("down", 1), ("attempt", 2), ("init", 3), ("twoWay", 4), ("exchangeStart", 5), ("exchange", 6), ("loading", 7), ("full", 8))).clone('down')).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsOspfNbrState.setStatus('deprecated')
nsOspfNbrEvents = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 2, 10, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsOspfNbrEvents.setStatus('deprecated')
nsOspfNbrLsRetransQLen = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 2, 10, 1, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsOspfNbrLsRetransQLen.setStatus('deprecated')
nsOspfNbmaNbrStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 2, 10, 1, 9), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: nsOspfNbmaNbrStatus.setStatus('deprecated')
nsOspfNbmaNbrPermanence = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 2, 10, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("dynamic", 1), ("permanent", 2))).clone('permanent')).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsOspfNbmaNbrPermanence.setStatus('deprecated')
nsOspfNbrHelloSuppressed = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 2, 10, 1, 11), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsOspfNbrHelloSuppressed.setStatus('deprecated')
nsOspfNbrVRID = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 2, 10, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsOspfNbrVRID.setStatus('deprecated')
nsOspfVirtNbrTable = MibTable((1, 3, 6, 1, 4, 1, 3224, 18, 2, 11), )
if mibBuilder.loadTexts: nsOspfVirtNbrTable.setStatus('deprecated')
nsOspfVirtNbrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3224, 18, 2, 11, 1), ).setIndexNames((0, "NETSCREEN-OSPF-MIB", "nsOspfVirtNbrArea"), (0, "NETSCREEN-OSPF-MIB", "nsOspfVirtNbrRtrId"), (0, "NETSCREEN-OSPF-MIB", "nsOspfVirtNbrVRID"))
if mibBuilder.loadTexts: nsOspfVirtNbrEntry.setStatus('deprecated')
nsOspfVirtNbrArea = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 2, 11, 1, 1), AreaID()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsOspfVirtNbrArea.setStatus('deprecated')
nsOspfVirtNbrRtrId = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 2, 11, 1, 2), RouterID()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsOspfVirtNbrRtrId.setStatus('deprecated')
nsOspfVirtNbrIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 2, 11, 1, 3), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsOspfVirtNbrIpAddr.setStatus('deprecated')
nsOspfVirtNbrOptions = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 2, 11, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsOspfVirtNbrOptions.setStatus('deprecated')
nsOspfVirtNbrState = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 2, 11, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("down", 1), ("attempt", 2), ("init", 3), ("twoWay", 4), ("exchangeStart", 5), ("exchange", 6), ("loading", 7), ("full", 8)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsOspfVirtNbrState.setStatus('deprecated')
nsOspfVirtNbrEvents = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 2, 11, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsOspfVirtNbrEvents.setStatus('deprecated')
nsOspfVirtNbrLsRetransQLen = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 2, 11, 1, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsOspfVirtNbrLsRetransQLen.setStatus('deprecated')
nsOspfVirtNbrHelloSuppressed = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 2, 11, 1, 8), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsOspfVirtNbrHelloSuppressed.setStatus('deprecated')
nsOspfVirtNbrVRID = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 2, 11, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsOspfVirtNbrVRID.setStatus('deprecated')
nsOspfExtLsdbTable = MibTable((1, 3, 6, 1, 4, 1, 3224, 18, 2, 12), )
if mibBuilder.loadTexts: nsOspfExtLsdbTable.setStatus('deprecated')
nsOspfExtLsdbEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3224, 18, 2, 12, 1), ).setIndexNames((0, "NETSCREEN-OSPF-MIB", "nsOspfExtLsdbType"), (0, "NETSCREEN-OSPF-MIB", "nsOspfExtLsdbLsid"), (0, "NETSCREEN-OSPF-MIB", "nsOspfExtLsdbRouterId"), (0, "NETSCREEN-OSPF-MIB", "nsOspfExtLsdbVRID"))
if mibBuilder.loadTexts: nsOspfExtLsdbEntry.setStatus('deprecated')
nsOspfExtLsdbType = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 2, 12, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(5))).clone(namedValues=NamedValues(("asExternalLink", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsOspfExtLsdbType.setStatus('deprecated')
nsOspfExtLsdbLsid = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 2, 12, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsOspfExtLsdbLsid.setStatus('deprecated')
nsOspfExtLsdbRouterId = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 2, 12, 1, 3), RouterID()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsOspfExtLsdbRouterId.setStatus('deprecated')
nsOspfExtLsdbSequence = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 2, 12, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsOspfExtLsdbSequence.setStatus('deprecated')
nsOspfExtLsdbAge = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 2, 12, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsOspfExtLsdbAge.setStatus('deprecated')
nsOspfExtLsdbChecksum = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 2, 12, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsOspfExtLsdbChecksum.setStatus('deprecated')
nsOspfExtLsdbAdvertisement = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 2, 12, 1, 7), OctetString().subtype(subtypeSpec=ValueSizeConstraint(36, 36)).setFixedLength(36)).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsOspfExtLsdbAdvertisement.setStatus('deprecated')
nsOspfExtLsdbVRID = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 2, 12, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsOspfExtLsdbVRID.setStatus('deprecated')
nsOspfAreaAggregateTable = MibTable((1, 3, 6, 1, 4, 1, 3224, 18, 2, 14), )
if mibBuilder.loadTexts: nsOspfAreaAggregateTable.setStatus('deprecated')
nsOspfAreaAggregateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3224, 18, 2, 14, 1), ).setIndexNames((0, "NETSCREEN-OSPF-MIB", "nsOspfAreaAggregateAreaID"), (0, "NETSCREEN-OSPF-MIB", "nsOspfAreaAggregateLsdbType"), (0, "NETSCREEN-OSPF-MIB", "nsOspfAreaAggregateNet"), (0, "NETSCREEN-OSPF-MIB", "nsOspfAreaAggregateMask"), (0, "NETSCREEN-OSPF-MIB", "nsOspfAreaAggregateVRID"))
if mibBuilder.loadTexts: nsOspfAreaAggregateEntry.setStatus('deprecated')
nsOspfAreaAggregateAreaID = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 2, 14, 1, 1), AreaID()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsOspfAreaAggregateAreaID.setStatus('deprecated')
nsOspfAreaAggregateLsdbType = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 2, 14, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(3, 7))).clone(namedValues=NamedValues(("summaryLink", 3), ("nssaExternalLink", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsOspfAreaAggregateLsdbType.setStatus('deprecated')
nsOspfAreaAggregateNet = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 2, 14, 1, 3), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsOspfAreaAggregateNet.setStatus('deprecated')
nsOspfAreaAggregateMask = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 2, 14, 1, 4), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsOspfAreaAggregateMask.setStatus('deprecated')
nsOspfAreaAggregateStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 2, 14, 1, 5), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: nsOspfAreaAggregateStatus.setStatus('deprecated')
nsOspfAreaAggregateEffect = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 2, 14, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("advertiseMatching", 1), ("doNotAdvertiseMatching", 2))).clone('advertiseMatching')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: nsOspfAreaAggregateEffect.setStatus('deprecated')
nsOspfAreaAggregateVRID = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 2, 14, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsOspfAreaAggregateVRID.setStatus('deprecated')
mibBuilder.exportSymbols("NETSCREEN-OSPF-MIB", nsOspfLsdbLsid=nsOspfLsdbLsid, nsOspfHostStatus=nsOspfHostStatus, nsOspfVirtIfNeighbor=nsOspfVirtIfNeighbor, nsOspfVirtIfAuthType=nsOspfVirtIfAuthType, nsOspfExtLsdbChecksum=nsOspfExtLsdbChecksum, nsOspfHostAreaID=nsOspfHostAreaID, nsOspfAreaAggregateAreaID=nsOspfAreaAggregateAreaID, nsOspfSpfRuns=nsOspfSpfRuns, nsOspfIfAdminStat=nsOspfIfAdminStat, nsOspfVirtIfTable=nsOspfVirtIfTable, nsOspfIfType=nsOspfIfType, nsOspfVirtIfStatus=nsOspfVirtIfStatus, nsOspfAreaAggregateStatus=nsOspfAreaAggregateStatus, nsOspfNbrAddressLessIndex=nsOspfNbrAddressLessIndex, nsOspfHostEntry=nsOspfHostEntry, nsOspfNbrPriority=nsOspfNbrPriority, nsOspfAreaVRID=nsOspfAreaVRID, nsOspfHostTOS=nsOspfHostTOS, nsOspfLsdbAreaId=nsOspfLsdbAreaId, nsOspfIfMetricAddressLessIf=nsOspfIfMetricAddressLessIf, nsOspfStubAreaTable=nsOspfStubAreaTable, nsOspfStubStatus=nsOspfStubStatus, DesignatedRouterPriority=DesignatedRouterPriority, nsOspfIfDemand=nsOspfIfDemand, nsOspfIfMetricEntry=nsOspfIfMetricEntry, nsOspfAreaAggregateMask=nsOspfAreaAggregateMask, AreaID=AreaID, nsOspfAreaLsaCount=nsOspfAreaLsaCount, nsOspfNbrIpAddr=nsOspfNbrIpAddr, nsOspfGeneralVRID=nsOspfGeneralVRID, nsOspfLsdbTable=nsOspfLsdbTable, nsOspfAddressLessIf=nsOspfAddressLessIf, nsOspfIfIpAddress=nsOspfIfIpAddress, Metric=Metric, nsOspfIfVRID=nsOspfIfVRID, nsOspfExtLsdbAdvertisement=nsOspfExtLsdbAdvertisement, nsOspfIfMulticastForwarding=nsOspfIfMulticastForwarding, nsOspfHostIpAddress=nsOspfHostIpAddress, nsOspfAreaAggregateEntry=nsOspfAreaAggregateEntry, nsOspfTOSSupport=nsOspfTOSSupport, nsOspfAreaAggregateEffect=nsOspfAreaAggregateEffect, nsOspfAreaId=nsOspfAreaId, PYSNMP_MODULE_ID=nsOspf, nsOspfVirtIfState=nsOspfVirtIfState, HelloRange=HelloRange, nsOspfStubMetricType=nsOspfStubMetricType, nsOspfAreaAggregateLsdbType=nsOspfAreaAggregateLsdbType, nsOspfExternLsaCksumSum=nsOspfExternLsaCksumSum, nsOspfNbrOptions=nsOspfNbrOptions, nsOspfGeneralTable=nsOspfGeneralTable, nsOspfExtLsdbVRID=nsOspfExtLsdbVRID, nsOspfStubTOS=nsOspfStubTOS, nsOspfLsdbRouterId=nsOspfLsdbRouterId, nsOspfVirtIfEvents=nsOspfVirtIfEvents, nsOspfIfMetricVRID=nsOspfIfMetricVRID, nsOspfExtLsdbLsid=nsOspfExtLsdbLsid, nsOspfLsdbAdvertisement=nsOspfLsdbAdvertisement, nsOspfMulticastExtensions=nsOspfMulticastExtensions, PositiveInteger=PositiveInteger, nsOspfIfTable=nsOspfIfTable, nsOspfLsdbEntry=nsOspfLsdbEntry, nsOspfExternLsaCount=nsOspfExternLsaCount, nsOspfOriginateNewLsas=nsOspfOriginateNewLsas, nsOspfVirtNbrIpAddr=nsOspfVirtNbrIpAddr, nsOspfVirtNbrVRID=nsOspfVirtNbrVRID, nsOspfAreaBdrRtrCount=nsOspfAreaBdrRtrCount, nsOspfVirtNbrEntry=nsOspfVirtNbrEntry, nsOspfIfEntry=nsOspfIfEntry, nsOspfIfTransitDelay=nsOspfIfTransitDelay, nsOspfIfRtrPriority=nsOspfIfRtrPriority, nsOspfExtLsdbSequence=nsOspfExtLsdbSequence, nsOspfIfAuthKey=nsOspfIfAuthKey, nsOspfAdminStat=nsOspfAdminStat, nsOspfExtLsdbType=nsOspfExtLsdbType, nsOspfVirtIfRetransInterval=nsOspfVirtIfRetransInterval, nsOspfNbrRtrId=nsOspfNbrRtrId, nsOspfLsdbSequence=nsOspfLsdbSequence, nsOspfHostVRID=nsOspfHostVRID, nsOspfExtLsdbEntry=nsOspfExtLsdbEntry, nsOspfIfMetricTable=nsOspfIfMetricTable, nsOspf=nsOspf, nsOspfNbrEntry=nsOspfNbrEntry, nsOspfAreaAggregateTable=nsOspfAreaAggregateTable, nsOspfNbmaNbrPermanence=nsOspfNbmaNbrPermanence, nsOspfIfStatus=nsOspfIfStatus, nsOspfExtLsdbTable=nsOspfExtLsdbTable, nsOspfIfRetransInterval=nsOspfIfRetransInterval, nsOspfIfMetricValue=nsOspfIfMetricValue, nsOspfStubMetric=nsOspfStubMetric, nsOspfLsdbChecksum=nsOspfLsdbChecksum, nsOspfRxNewLsas=nsOspfRxNewLsas, nsOspfIfAreaId=nsOspfIfAreaId, nsOspfRouterId=nsOspfRouterId, nsOspfExtLsdbAge=nsOspfExtLsdbAge, nsOspfHostTable=nsOspfHostTable, nsOspfLsdbVRID=nsOspfLsdbVRID, nsOspfIfRtrDeadInterval=nsOspfIfRtrDeadInterval, nsOspfVirtNbrHelloSuppressed=nsOspfVirtNbrHelloSuppressed, Status=Status, nsOspfASBdrRtrStatus=nsOspfASBdrRtrStatus, nsOspfNbrTable=nsOspfNbrTable, nsOspfVirtNbrArea=nsOspfVirtNbrArea, nsOspfNbrHelloSuppressed=nsOspfNbrHelloSuppressed, nsOspfVirtNbrTable=nsOspfVirtNbrTable, nsOspfLsdbAge=nsOspfLsdbAge, nsOspfIfMetricStatus=nsOspfIfMetricStatus, nsOspfVirtNbrState=nsOspfVirtNbrState, BigMetric=BigMetric, nsOspfVirtNbrEvents=nsOspfVirtNbrEvents, nsOspfIfHelloInterval=nsOspfIfHelloInterval, nsOspfImportAsExtern=nsOspfImportAsExtern, nsOspfIfState=nsOspfIfState, nsOspfIfAuthType=nsOspfIfAuthType, nsOspfVirtIfTransitDelay=nsOspfVirtIfTransitDelay, nsOspfStubVRID=nsOspfStubVRID, nsOspfIfPollInterval=nsOspfIfPollInterval, nsOspfDemandExtensions=nsOspfDemandExtensions, nsOspfIfMetricTOS=nsOspfIfMetricTOS, nsOspfHostMetric=nsOspfHostMetric, TOSType=TOSType, nsOspfExtLsdbLimit=nsOspfExtLsdbLimit, nsOspfAreaEntry=nsOspfAreaEntry, nsOspfVirtIfVRID=nsOspfVirtIfVRID, UpToMaxAge=UpToMaxAge, nsOspfVirtNbrOptions=nsOspfVirtNbrOptions, nsOspfVirtNbrLsRetransQLen=nsOspfVirtNbrLsRetransQLen, nsOspfIfBackupDesignatedRouter=nsOspfIfBackupDesignatedRouter, nsOspfAreaLsaCksumSum=nsOspfAreaLsaCksumSum, nsOspfVirtIfEntry=nsOspfVirtIfEntry, nsOspfNbrVRID=nsOspfNbrVRID, nsOspfVirtIfAreaId=nsOspfVirtIfAreaId, nsOspfAreaStatus=nsOspfAreaStatus, nsOspfGeneralEntry=nsOspfGeneralEntry, nsOspfStubAreaEntry=nsOspfStubAreaEntry, nsOspfNbmaNbrStatus=nsOspfNbmaNbrStatus, InterfaceIndex=InterfaceIndex, nsOspfAreaSummary=nsOspfAreaSummary, nsOspfVirtIfHelloInterval=nsOspfVirtIfHelloInterval, nsOspfNbrLsRetransQLen=nsOspfNbrLsRetransQLen, nsOspfAreaAggregateVRID=nsOspfAreaAggregateVRID, nsOspfLsdbType=nsOspfLsdbType, nsOspfAreaTable=nsOspfAreaTable, nsOspfExtLsdbRouterId=nsOspfExtLsdbRouterId, nsOspfStubAreaId=nsOspfStubAreaId, nsOspfVersionNumber=nsOspfVersionNumber, nsOspfAreaBdrRtrStatus=nsOspfAreaBdrRtrStatus, nsOspfAsBdrRtrCount=nsOspfAsBdrRtrCount, nsOspfNbrEvents=nsOspfNbrEvents, nsOspfAreaAggregateNet=nsOspfAreaAggregateNet, nsOspfVirtNbrRtrId=nsOspfVirtNbrRtrId, nsOspfIfDesignatedRouter=nsOspfIfDesignatedRouter, nsOspfVirtIfRtrDeadInterval=nsOspfVirtIfRtrDeadInterval, nsOspfIfMetricIpAddress=nsOspfIfMetricIpAddress, nsOspfExitOverflowInterval=nsOspfExitOverflowInterval, RouterID=RouterID, nsOspfNbrState=nsOspfNbrState, nsOspfVirtIfAuthKey=nsOspfVirtIfAuthKey, nsOspfIfEvents=nsOspfIfEvents)
