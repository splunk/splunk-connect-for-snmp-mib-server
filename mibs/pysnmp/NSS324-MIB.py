#
# PySNMP MIB module NSS324-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/NSS324-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 20:15:35 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ConstraintsUnion, ValueSizeConstraint, ConstraintsIntersection, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ConstraintsUnion", "ValueSizeConstraint", "ConstraintsIntersection", "ValueRangeConstraint")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
MibIdentifier, ObjectIdentity, IpAddress, ModuleIdentity, NotificationType, MibScalar, MibTable, MibTableRow, MibTableColumn, TimeTicks, Unsigned32, NotificationType, Counter32, Gauge32, Bits, iso, enterprises, Integer32, Counter64 = mibBuilder.importSymbols("SNMPv2-SMI", "MibIdentifier", "ObjectIdentity", "IpAddress", "ModuleIdentity", "NotificationType", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "TimeTicks", "Unsigned32", "NotificationType", "Counter32", "Gauge32", "Bits", "iso", "enterprises", "Integer32", "Counter64")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
class DisplayString(OctetString):
    pass

cisco = MibIdentifier((1, 3, 6, 1, 4, 1, 9))
otherEnterprises = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 6))
ciscoSB = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 6, 1))
nas004 = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 6, 1, 103))
nss = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 6, 1, 103, 41))
nss324 = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 6, 1, 103, 41, 324))
nssAthens = ModuleIdentity((1, 3, 6, 1, 4, 1, 9, 6, 1, 103, 41, 324, 114))
nssAthens.setRevisions(('2011-03-24 00:00',))
if mibBuilder.loadTexts: nssAthens.setLastUpdated('201103240000Z')
if mibBuilder.loadTexts: nssAthens.setOrganization('Cisco Small Business')
storageSystem = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 6, 1, 103, 41, 324, 114, 1))
systemEventMsg = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 6, 1, 103, 41, 324, 114, 1, 1))
eventInformMsg = MibScalar((1, 3, 6, 1, 4, 1, 9, 6, 1, 103, 41, 324, 114, 1, 1, 101), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eventInformMsg.setStatus('current')
eventWarningMsg = MibScalar((1, 3, 6, 1, 4, 1, 9, 6, 1, 103, 41, 324, 114, 1, 1, 102), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eventWarningMsg.setStatus('current')
eventErrorMsg = MibScalar((1, 3, 6, 1, 4, 1, 9, 6, 1, 103, 41, 324, 114, 1, 1, 103), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eventErrorMsg.setStatus('current')
systemTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 6, 1, 103, 41, 324, 114, 1, 10))
eventInform = NotificationType((1, 3, 6, 1, 4, 1, 9, 6, 1, 103, 41, 324, 114, 1, 10) + (0,1)).setObjects(("NSS324-MIB", "eventInformMsg"))
eventWarning = NotificationType((1, 3, 6, 1, 4, 1, 9, 6, 1, 103, 41, 324, 114, 1, 10) + (0,2)).setObjects(("NSS324-MIB", "eventWarningMsg"))
eventError = NotificationType((1, 3, 6, 1, 4, 1, 9, 6, 1, 103, 41, 324, 114, 1, 10) + (0,4)).setObjects(("NSS324-MIB", "eventErrorMsg"))
systemInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 6, 1, 103, 41, 324, 114, 1, 2))
systemCPU_Usage = MibScalar((1, 3, 6, 1, 4, 1, 9, 6, 1, 103, 41, 324, 114, 1, 2, 1), DisplayString()).setLabel("systemCPU-Usage").setMaxAccess("readonly")
if mibBuilder.loadTexts: systemCPU_Usage.setStatus('current')
systemTotalMem = MibScalar((1, 3, 6, 1, 4, 1, 9, 6, 1, 103, 41, 324, 114, 1, 2, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: systemTotalMem.setStatus('current')
systemFreeMem = MibScalar((1, 3, 6, 1, 4, 1, 9, 6, 1, 103, 41, 324, 114, 1, 2, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: systemFreeMem.setStatus('current')
systemUptime = MibScalar((1, 3, 6, 1, 4, 1, 9, 6, 1, 103, 41, 324, 114, 1, 2, 4), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: systemUptime.setStatus('current')
cpu_Temperature = MibScalar((1, 3, 6, 1, 4, 1, 9, 6, 1, 103, 41, 324, 114, 1, 2, 5), DisplayString()).setLabel("cpu-Temperature").setMaxAccess("readonly")
if mibBuilder.loadTexts: cpu_Temperature.setStatus('current')
systemTemperature = MibScalar((1, 3, 6, 1, 4, 1, 9, 6, 1, 103, 41, 324, 114, 1, 2, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: systemTemperature.setStatus('current')
ifNumber = MibScalar((1, 3, 6, 1, 4, 1, 9, 6, 1, 103, 41, 324, 114, 1, 2, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ifNumber.setStatus('mandatory')
systemIfTable = MibTable((1, 3, 6, 1, 4, 1, 9, 6, 1, 103, 41, 324, 114, 1, 2, 9), )
if mibBuilder.loadTexts: systemIfTable.setStatus('mandatory')
ifEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 6, 1, 103, 41, 324, 114, 1, 2, 9, 1), ).setIndexNames((0, "NSS324-MIB", "ifIndex"))
if mibBuilder.loadTexts: ifEntry.setStatus('mandatory')
ifIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 103, 41, 324, 114, 1, 2, 9, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ifIndex.setStatus('mandatory')
ifDescr = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 103, 41, 324, 114, 1, 2, 9, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ifDescr.setStatus('mandatory')
ifPacketsReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 103, 41, 324, 114, 1, 2, 9, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ifPacketsReceived.setStatus('mandatory')
ifPacketsSent = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 103, 41, 324, 114, 1, 2, 9, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ifPacketsSent.setStatus('mandatory')
ifErrorPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 103, 41, 324, 114, 1, 2, 9, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ifErrorPackets.setStatus('mandatory')
hdNumber = MibScalar((1, 3, 6, 1, 4, 1, 9, 6, 1, 103, 41, 324, 114, 1, 2, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hdNumber.setStatus('mandatory')
systemHdTable = MibTable((1, 3, 6, 1, 4, 1, 9, 6, 1, 103, 41, 324, 114, 1, 2, 11), )
if mibBuilder.loadTexts: systemHdTable.setStatus('mandatory')
hdEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 6, 1, 103, 41, 324, 114, 1, 2, 11, 1), ).setIndexNames((0, "NSS324-MIB", "hdIndex"))
if mibBuilder.loadTexts: hdEntry.setStatus('mandatory')
hdIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 103, 41, 324, 114, 1, 2, 11, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hdIndex.setStatus('mandatory')
hdDescr = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 103, 41, 324, 114, 1, 2, 11, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hdDescr.setStatus('mandatory')
hdTemperature = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 103, 41, 324, 114, 1, 2, 11, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hdTemperature.setStatus('mandatory')
hdStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 103, 41, 324, 114, 1, 2, 11, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, -5, -6, -9, -4))).clone(namedValues=NamedValues(("ready", 0), ("noDisk", -5), ("invalid", -6), ("rwError", -9), ("unknown", -4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hdStatus.setStatus('mandatory')
hdModel = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 103, 41, 324, 114, 1, 2, 11, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hdModel.setStatus('mandatory')
hdCapacity = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 103, 41, 324, 114, 1, 2, 11, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hdCapacity.setStatus('mandatory')
hdSmartInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 103, 41, 324, 114, 1, 2, 11, 1, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hdSmartInfo.setStatus('mandatory')
modelName = MibScalar((1, 3, 6, 1, 4, 1, 9, 6, 1, 103, 41, 324, 114, 1, 2, 12), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: modelName.setStatus('current')
hostName = MibScalar((1, 3, 6, 1, 4, 1, 9, 6, 1, 103, 41, 324, 114, 1, 2, 13), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hostName.setStatus('current')
sysFanNumber = MibScalar((1, 3, 6, 1, 4, 1, 9, 6, 1, 103, 41, 324, 114, 1, 2, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sysFanNumber.setStatus('mandatory')
systemFanTable = MibTable((1, 3, 6, 1, 4, 1, 9, 6, 1, 103, 41, 324, 114, 1, 2, 15), )
if mibBuilder.loadTexts: systemFanTable.setStatus('mandatory')
sysFanEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 6, 1, 103, 41, 324, 114, 1, 2, 15, 1), ).setIndexNames((0, "NSS324-MIB", "sysFanIndex"))
if mibBuilder.loadTexts: sysFanEntry.setStatus('mandatory')
sysFanIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 103, 41, 324, 114, 1, 2, 15, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sysFanIndex.setStatus('mandatory')
sysFanDescr = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 103, 41, 324, 114, 1, 2, 15, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sysFanDescr.setStatus('mandatory')
sysFanSpeed = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 103, 41, 324, 114, 1, 2, 15, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sysFanSpeed.setStatus('mandatory')
sysVolumeNumber = MibScalar((1, 3, 6, 1, 4, 1, 9, 6, 1, 103, 41, 324, 114, 1, 2, 16), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sysVolumeNumber.setStatus('mandatory')
systemVolumeTable = MibTable((1, 3, 6, 1, 4, 1, 9, 6, 1, 103, 41, 324, 114, 1, 2, 17), )
if mibBuilder.loadTexts: systemVolumeTable.setStatus('mandatory')
sysVolumeEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 6, 1, 103, 41, 324, 114, 1, 2, 17, 1), ).setIndexNames((0, "NSS324-MIB", "sysVolumeIndex"))
if mibBuilder.loadTexts: sysVolumeEntry.setStatus('mandatory')
sysVolumeIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 103, 41, 324, 114, 1, 2, 17, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sysVolumeIndex.setStatus('mandatory')
sysVolumeDescr = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 103, 41, 324, 114, 1, 2, 17, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sysVolumeDescr.setStatus('mandatory')
sysVolumeFS = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 103, 41, 324, 114, 1, 2, 17, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sysVolumeFS.setStatus('mandatory')
sysVolumeTotalSize = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 103, 41, 324, 114, 1, 2, 17, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sysVolumeTotalSize.setStatus('mandatory')
sysVolumeFreeSize = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 103, 41, 324, 114, 1, 2, 17, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sysVolumeFreeSize.setStatus('mandatory')
sysVolumeStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 103, 41, 324, 114, 1, 2, 17, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sysVolumeStatus.setStatus('mandatory')
mibBuilder.exportSymbols("NSS324-MIB", ifPacketsReceived=ifPacketsReceived, PYSNMP_MODULE_ID=nssAthens, systemEventMsg=systemEventMsg, systemTotalMem=systemTotalMem, systemTraps=systemTraps, ifIndex=ifIndex, eventWarningMsg=eventWarningMsg, systemInfo=systemInfo, sysFanNumber=sysFanNumber, cisco=cisco, ifEntry=ifEntry, nas004=nas004, hdModel=hdModel, hdSmartInfo=hdSmartInfo, cpu_Temperature=cpu_Temperature, ifErrorPackets=ifErrorPackets, hostName=hostName, sysVolumeIndex=sysVolumeIndex, sysVolumeTotalSize=sysVolumeTotalSize, nss=nss, eventInform=eventInform, DisplayString=DisplayString, nss324=nss324, systemIfTable=systemIfTable, sysFanSpeed=sysFanSpeed, ifNumber=ifNumber, systemTemperature=systemTemperature, hdIndex=hdIndex, hdNumber=hdNumber, eventErrorMsg=eventErrorMsg, hdTemperature=hdTemperature, sysVolumeFS=sysVolumeFS, hdDescr=hdDescr, hdEntry=hdEntry, systemFreeMem=systemFreeMem, sysVolumeEntry=sysVolumeEntry, systemFanTable=systemFanTable, modelName=modelName, sysVolumeDescr=sysVolumeDescr, otherEnterprises=otherEnterprises, sysVolumeNumber=sysVolumeNumber, sysVolumeFreeSize=sysVolumeFreeSize, systemCPU_Usage=systemCPU_Usage, sysFanDescr=sysFanDescr, nssAthens=nssAthens, hdStatus=hdStatus, ciscoSB=ciscoSB, eventWarning=eventWarning, sysFanEntry=sysFanEntry, storageSystem=storageSystem, eventInformMsg=eventInformMsg, systemUptime=systemUptime, sysFanIndex=sysFanIndex, hdCapacity=hdCapacity, ifPacketsSent=ifPacketsSent, systemHdTable=systemHdTable, eventError=eventError, systemVolumeTable=systemVolumeTable, sysVolumeStatus=sysVolumeStatus, ifDescr=ifDescr)
