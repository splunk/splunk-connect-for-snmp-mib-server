#
# PySNMP MIB module WLSX-USER6-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/WLSX-USER6-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 21:30:11 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
wlsxEnterpriseMibModules, = mibBuilder.importSymbols("ARUBA-MIB", "wlsxEnterpriseMibModules")
ArubaPhyType, ArubaUserForwardMode, ArubaAuthenticationMethods, ArubaSubAuthenticationMethods, ArubaEncryptionType, ArubaHTMode = mibBuilder.importSymbols("ARUBA-TC", "ArubaPhyType", "ArubaUserForwardMode", "ArubaAuthenticationMethods", "ArubaSubAuthenticationMethods", "ArubaEncryptionType", "ArubaHTMode")
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ValueRangeConstraint, ValueSizeConstraint, ConstraintsIntersection, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ValueRangeConstraint", "ValueSizeConstraint", "ConstraintsIntersection", "ConstraintsUnion")
ModuleCompliance, NotificationGroup, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup", "ObjectGroup")
Unsigned32, Bits, ObjectIdentity, iso, Integer32, snmpModules, ModuleIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, MibIdentifier, TimeTicks, Gauge32, Counter64, Counter32, NotificationType, IpAddress = mibBuilder.importSymbols("SNMPv2-SMI", "Unsigned32", "Bits", "ObjectIdentity", "iso", "Integer32", "snmpModules", "ModuleIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "MibIdentifier", "TimeTicks", "Gauge32", "Counter64", "Counter32", "NotificationType", "IpAddress")
TAddress, TDomain, TextualConvention, TimeInterval, DisplayString, TestAndIncr, RowStatus, MacAddress, StorageType, TruthValue, PhysAddress = mibBuilder.importSymbols("SNMPv2-TC", "TAddress", "TDomain", "TextualConvention", "TimeInterval", "DisplayString", "TestAndIncr", "RowStatus", "MacAddress", "StorageType", "TruthValue", "PhysAddress")
wlsxSwitchMIB, = mibBuilder.importSymbols("WLSX-SWITCH-MIB", "wlsxSwitchMIB")
wlanESSID, = mibBuilder.importSymbols("WLSX-WLAN-MIB", "wlanESSID")
wlsxUser6MIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 14))
wlsxUser6MIB.setRevisions(('1910-01-26 18:06',))
if mibBuilder.loadTexts: wlsxUser6MIB.setLastUpdated('1001261806Z')
if mibBuilder.loadTexts: wlsxUser6MIB.setOrganization('Aruba Wireless Networks')
wlsxUser6AllInfoGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 14, 1))
wlsxUser6InfoGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 1, 4))
wlsxTotalNumOfUsers6 = MibScalar((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 14, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlsxTotalNumOfUsers6.setStatus('current')
wlsxUser6Table = MibTable((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 14, 1, 2), )
if mibBuilder.loadTexts: wlsxUser6Table.setStatus('current')
wlsxUser6Entry = MibTableRow((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 14, 1, 2, 1), ).setIndexNames((0, "WLSX-USER6-MIB", "nUser6PhyAddress"), (0, "WLSX-USER6-MIB", "nUser6IpAddress"))
if mibBuilder.loadTexts: wlsxUser6Entry.setStatus('current')
nUser6PhyAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 14, 1, 2, 1, 1), MacAddress())
if mibBuilder.loadTexts: nUser6PhyAddress.setStatus('current')
nUser6IpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 14, 1, 2, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 128)))
if mibBuilder.loadTexts: nUser6IpAddress.setStatus('current')
nUser6Name = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 14, 1, 2, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nUser6Name.setStatus('current')
nUser6Role = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 14, 1, 2, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nUser6Role.setStatus('current')
nUser6UpTime = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 14, 1, 2, 1, 5), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nUser6UpTime.setStatus('current')
nUser6AuthenticationMethod = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 14, 1, 2, 1, 6), ArubaAuthenticationMethods()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nUser6AuthenticationMethod.setStatus('current')
nUser6SubAuthenticationMethod = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 14, 1, 2, 1, 7), ArubaSubAuthenticationMethods()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nUser6SubAuthenticationMethod.setStatus('current')
nUser6AuthServerName = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 14, 1, 2, 1, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nUser6AuthServerName.setStatus('current')
nUser6ExtVPNAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 14, 1, 2, 1, 9), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nUser6ExtVPNAddress.setStatus('current')
nUser6ApLocation = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 14, 1, 2, 1, 10), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nUser6ApLocation.setStatus('current')
nUser6ApBSSID = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 14, 1, 2, 1, 11), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nUser6ApBSSID.setStatus('current')
nUser6IsOnHomeAgent = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 14, 1, 2, 1, 12), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nUser6IsOnHomeAgent.setStatus('current')
nUser6HomeAgentIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 14, 1, 2, 1, 13), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nUser6HomeAgentIpAddress.setStatus('current')
nUser6MobilityStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 14, 1, 2, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("visitor", 1), ("away", 2), ("associated", 3), ("wired", 4), ("wireless", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nUser6MobilityStatus.setStatus('current')
nUser6HomeVlan = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 14, 1, 2, 1, 15), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nUser6HomeVlan.setStatus('current')
nUser6DefaultVlan = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 14, 1, 2, 1, 16), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nUser6DefaultVlan.setStatus('current')
nUser6AssignedVlan = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 14, 1, 2, 1, 17), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nUser6AssignedVlan.setStatus('current')
nUser6BWContractName = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 14, 1, 2, 1, 18), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nUser6BWContractName.setStatus('deprecated')
nUser6BWContractUsage = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 14, 1, 2, 1, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("user", 1), ("shared", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nUser6BWContractUsage.setStatus('deprecated')
nUser6BWContractId = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 14, 1, 2, 1, 20), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nUser6BWContractId.setStatus('deprecated')
nUser6IsProxyArpEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 14, 1, 2, 1, 21), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nUser6IsProxyArpEnabled.setStatus('current')
nUser6CurrentVlan = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 14, 1, 2, 1, 22), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nUser6CurrentVlan.setStatus('current')
nUser6IsWired = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 14, 1, 2, 1, 23), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nUser6IsWired.setStatus('current')
nUser6ConnectedSlot = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 14, 1, 2, 1, 24), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nUser6ConnectedSlot.setStatus('current')
nUser6ConnectedPort = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 14, 1, 2, 1, 25), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nUser6ConnectedPort.setStatus('current')
nUser6PhyType = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 14, 1, 2, 1, 26), ArubaPhyType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nUser6PhyType.setStatus('current')
nUser6MobilityDomainName = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 14, 1, 2, 1, 27), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nUser6MobilityDomainName.setStatus('current')
nUser6UPBWContractName = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 14, 1, 2, 1, 28), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nUser6UPBWContractName.setStatus('current')
nUser6UPBWContractUsage = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 14, 1, 2, 1, 29), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("user", 1), ("shared", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nUser6UPBWContractUsage.setStatus('current')
nUser6UPBWContractId = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 14, 1, 2, 1, 30), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nUser6UPBWContractId.setStatus('current')
nUser6DNBWContractName = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 14, 1, 2, 1, 31), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nUser6DNBWContractName.setStatus('current')
nUser6DNBWContractUsage = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 14, 1, 2, 1, 32), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("user", 1), ("shared", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nUser6DNBWContractUsage.setStatus('current')
nUser6DNBWContractId = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 14, 1, 2, 1, 33), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nUser6DNBWContractId.setStatus('current')
nUser6HTMode = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 14, 1, 2, 1, 34), ArubaHTMode()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nUser6HTMode.setStatus('current')
nUser6DeviceID = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 14, 1, 2, 1, 35), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nUser6DeviceID.setStatus('current')
nUser6DeviceType = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 14, 1, 2, 1, 36), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nUser6DeviceType.setStatus('current')
nUser6ConnectedModule = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 14, 1, 2, 1, 37), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nUser6ConnectedModule.setStatus('current')
nUser6RxDataPkts64 = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 14, 1, 2, 1, 38), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nUser6RxDataPkts64.setStatus('current')
nUser6TxDataPkts64 = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 14, 1, 2, 1, 39), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nUser6TxDataPkts64.setStatus('current')
nUser6RxDataOctets64 = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 14, 1, 2, 1, 40), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nUser6RxDataOctets64.setStatus('current')
nUser6TxDataOctets64 = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 14, 1, 2, 1, 41), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nUser6TxDataOctets64.setStatus('current')
nUser6ForwardMode = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 14, 1, 2, 1, 42), ArubaUserForwardMode()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nUser6ForwardMode.setStatus('current')
nUser6EncryptionMethod = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 14, 1, 2, 1, 43), ArubaEncryptionType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nUser6EncryptionMethod.setStatus('current')
nVIAUser6DeviceID = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 14, 1, 2, 1, 44), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nVIAUser6DeviceID.setStatus('current')
wlsxUser6SessionTimeTable = MibTable((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 14, 1, 3), )
if mibBuilder.loadTexts: wlsxUser6SessionTimeTable.setStatus('current')
wlsxUser6SessionTimeEntry = MibTableRow((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 14, 1, 3, 1), ).setIndexNames((0, "WLSX-WLAN-MIB", "wlanESSID"), (0, "WLSX-USER6-MIB", "wlsxUser6SessionTimeLength"))
if mibBuilder.loadTexts: wlsxUser6SessionTimeEntry.setStatus('current')
wlsxUser6SessionTimeLength = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 14, 1, 3, 1, 1), Integer32())
if mibBuilder.loadTexts: wlsxUser6SessionTimeLength.setStatus('current')
wlsxUser6SessionTimeCount = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 14, 1, 3, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlsxUser6SessionTimeCount.setStatus('current')
wlsxSwitchUser6Table = MibTable((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 1, 4, 1), )
if mibBuilder.loadTexts: wlsxSwitchUser6Table.setStatus('current')
wlsxSwitchUser6Entry = MibTableRow((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 1, 4, 1, 1), ).setIndexNames((0, "WLSX-USER6-MIB", "user6IpAddress"))
if mibBuilder.loadTexts: wlsxSwitchUser6Entry.setStatus('current')
user6IpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 1, 4, 1, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32)))
if mibBuilder.loadTexts: user6IpAddress.setStatus('current')
user6PhyAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 1, 4, 1, 1, 2), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: user6PhyAddress.setStatus('current')
user6Name = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 1, 4, 1, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: user6Name.setStatus('current')
user6Role = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 1, 4, 1, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: user6Role.setStatus('current')
user6UpTime = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 1, 4, 1, 1, 5), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: user6UpTime.setStatus('current')
user6AuthenticationMethod = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 1, 4, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("none", 1), ("other", 2), ("web", 3), ("dot1x", 4), ("vpn", 5), ("mac", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: user6AuthenticationMethod.setStatus('current')
user6Location = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 1, 4, 1, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: user6Location.setStatus('current')
user6ServerName = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 1, 4, 1, 1, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: user6ServerName.setStatus('current')
user6ConnectedVlan = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 1, 4, 1, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: user6ConnectedVlan.setStatus('current')
user6ConnectedSlot = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 1, 4, 1, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: user6ConnectedSlot.setStatus('current')
user6ConnectedPort = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 1, 4, 1, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: user6ConnectedPort.setStatus('current')
user6BWContractName = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 1, 4, 1, 1, 12), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: user6BWContractName.setStatus('current')
user6BWContractUsage = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 1, 4, 1, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("user", 1), ("shared", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: user6BWContractUsage.setStatus('current')
user6ConnectedModule = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 2, 1, 1, 4, 1, 1, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: user6ConnectedModule.setStatus('current')
mibBuilder.exportSymbols("WLSX-USER6-MIB", nUser6UPBWContractName=nUser6UPBWContractName, user6Name=user6Name, nUser6BWContractName=nUser6BWContractName, nUser6IsProxyArpEnabled=nUser6IsProxyArpEnabled, user6IpAddress=user6IpAddress, nUser6DNBWContractId=nUser6DNBWContractId, user6ConnectedVlan=user6ConnectedVlan, nUser6PhyAddress=nUser6PhyAddress, nUser6TxDataOctets64=nUser6TxDataOctets64, PYSNMP_MODULE_ID=wlsxUser6MIB, nUser6AuthServerName=nUser6AuthServerName, nUser6DNBWContractUsage=nUser6DNBWContractUsage, wlsxTotalNumOfUsers6=wlsxTotalNumOfUsers6, nUser6IpAddress=nUser6IpAddress, nUser6DeviceID=nUser6DeviceID, nUser6BWContractUsage=nUser6BWContractUsage, nVIAUser6DeviceID=nVIAUser6DeviceID, wlsxUser6SessionTimeTable=wlsxUser6SessionTimeTable, nUser6ExtVPNAddress=nUser6ExtVPNAddress, wlsxUser6SessionTimeLength=wlsxUser6SessionTimeLength, user6ServerName=user6ServerName, nUser6UpTime=nUser6UpTime, nUser6DeviceType=nUser6DeviceType, nUser6HomeAgentIpAddress=nUser6HomeAgentIpAddress, nUser6TxDataPkts64=nUser6TxDataPkts64, nUser6AssignedVlan=nUser6AssignedVlan, user6AuthenticationMethod=user6AuthenticationMethod, nUser6AuthenticationMethod=nUser6AuthenticationMethod, user6ConnectedModule=user6ConnectedModule, user6Role=user6Role, user6ConnectedPort=user6ConnectedPort, nUser6SubAuthenticationMethod=nUser6SubAuthenticationMethod, nUser6MobilityStatus=nUser6MobilityStatus, nUser6DNBWContractName=nUser6DNBWContractName, user6BWContractName=user6BWContractName, user6BWContractUsage=user6BWContractUsage, wlsxSwitchUser6Entry=wlsxSwitchUser6Entry, nUser6BWContractId=nUser6BWContractId, user6Location=user6Location, nUser6PhyType=nUser6PhyType, nUser6CurrentVlan=nUser6CurrentVlan, nUser6ConnectedPort=nUser6ConnectedPort, nUser6ApBSSID=nUser6ApBSSID, nUser6RxDataPkts64=nUser6RxDataPkts64, wlsxUser6MIB=wlsxUser6MIB, nUser6HomeVlan=nUser6HomeVlan, nUser6Name=nUser6Name, wlsxUser6SessionTimeCount=wlsxUser6SessionTimeCount, wlsxUser6SessionTimeEntry=wlsxUser6SessionTimeEntry, nUser6ConnectedModule=nUser6ConnectedModule, wlsxUser6Table=wlsxUser6Table, nUser6ApLocation=nUser6ApLocation, nUser6IsWired=nUser6IsWired, nUser6ConnectedSlot=nUser6ConnectedSlot, wlsxUser6InfoGroup=wlsxUser6InfoGroup, nUser6UPBWContractId=nUser6UPBWContractId, nUser6EncryptionMethod=nUser6EncryptionMethod, user6PhyAddress=user6PhyAddress, wlsxUser6AllInfoGroup=wlsxUser6AllInfoGroup, user6ConnectedSlot=user6ConnectedSlot, user6UpTime=user6UpTime, wlsxUser6Entry=wlsxUser6Entry, wlsxSwitchUser6Table=wlsxSwitchUser6Table, nUser6RxDataOctets64=nUser6RxDataOctets64, nUser6IsOnHomeAgent=nUser6IsOnHomeAgent, nUser6DefaultVlan=nUser6DefaultVlan, nUser6HTMode=nUser6HTMode, nUser6MobilityDomainName=nUser6MobilityDomainName, nUser6UPBWContractUsage=nUser6UPBWContractUsage, nUser6ForwardMode=nUser6ForwardMode, nUser6Role=nUser6Role)
