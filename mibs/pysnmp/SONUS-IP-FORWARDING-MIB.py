#
# PySNMP MIB module SONUS-IP-FORWARDING-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/SONUS-IP-FORWARDING-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 21:01:52 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ValueRangeConstraint, ConstraintsUnion, ValueSizeConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ValueRangeConstraint", "ConstraintsUnion", "ValueSizeConstraint", "ConstraintsIntersection")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
Counter64, MibScalar, MibTable, MibTableRow, MibTableColumn, iso, ModuleIdentity, IpAddress, ObjectIdentity, Unsigned32, Integer32, Gauge32, TimeTicks, Counter32, NotificationType, Bits, MibIdentifier = mibBuilder.importSymbols("SNMPv2-SMI", "Counter64", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "iso", "ModuleIdentity", "IpAddress", "ObjectIdentity", "Unsigned32", "Integer32", "Gauge32", "TimeTicks", "Counter32", "NotificationType", "Bits", "MibIdentifier")
RowStatus, DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "RowStatus", "DisplayString", "TextualConvention")
sonusPacketMIBs, = mibBuilder.importSymbols("SONUS-SMI", "sonusPacketMIBs")
sonusIpForwardingMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 2879, 2, 3, 3))
if mibBuilder.loadTexts: sonusIpForwardingMIB.setLastUpdated('200004230000Z')
if mibBuilder.loadTexts: sonusIpForwardingMIB.setOrganization('Sonus Networks, Inc.')
sonusIpForwardGeneralGroupTable = MibTable((1, 3, 6, 1, 4, 1, 2879, 2, 3, 3, 1), )
if mibBuilder.loadTexts: sonusIpForwardGeneralGroupTable.setStatus('current')
sonusIpForwardGeneralGroupEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2879, 2, 3, 3, 1, 1), ).setIndexNames((0, "SONUS-IP-FORWARDING-MIB", "sonusIpForwardGeneralGroupShelf"), (0, "SONUS-IP-FORWARDING-MIB", "sonusIpForwardGeneralGroupSlot"), (0, "SONUS-IP-FORWARDING-MIB", "sonusIpForwardGeneralGroupInstance"))
if mibBuilder.loadTexts: sonusIpForwardGeneralGroupEntry.setStatus('current')
sonusIpCidrRouteNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 3, 3, 1, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusIpCidrRouteNumber.setStatus('current')
sonusIpForwardGeneralGroupShelf = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 3, 3, 1, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusIpForwardGeneralGroupShelf.setStatus('current')
sonusIpForwardGeneralGroupSlot = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 3, 3, 1, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusIpForwardGeneralGroupSlot.setStatus('current')
sonusIpForwardGeneralGroupInstance = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 3, 3, 1, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusIpForwardGeneralGroupInstance.setStatus('current')
sonusIpCidrRouteTable = MibTable((1, 3, 6, 1, 4, 1, 2879, 2, 3, 3, 2), )
if mibBuilder.loadTexts: sonusIpCidrRouteTable.setStatus('current')
sonusIpCidrRouteEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2879, 2, 3, 3, 2, 1), ).setIndexNames((0, "SONUS-IP-FORWARDING-MIB", "sonusIpCidrRouteShelf"), (0, "SONUS-IP-FORWARDING-MIB", "sonusIpCidrRouteSlot"), (0, "SONUS-IP-FORWARDING-MIB", "sonusIpCidrRouteInstance"), (0, "SONUS-IP-FORWARDING-MIB", "sonusIpCidrRouteDest"), (0, "SONUS-IP-FORWARDING-MIB", "sonusIpCidrRouteMask"), (0, "SONUS-IP-FORWARDING-MIB", "sonusIpCidrRouteTos"), (0, "SONUS-IP-FORWARDING-MIB", "sonusIpCidrRouteNextHop"))
if mibBuilder.loadTexts: sonusIpCidrRouteEntry.setStatus('current')
sonusIpCidrRouteDest = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 3, 3, 2, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusIpCidrRouteDest.setStatus('current')
sonusIpCidrRouteMask = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 3, 3, 2, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusIpCidrRouteMask.setStatus('current')
sonusIpCidrRouteTos = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 3, 3, 2, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusIpCidrRouteTos.setStatus('current')
sonusIpCidrRouteNextHop = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 3, 3, 2, 1, 4), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusIpCidrRouteNextHop.setStatus('current')
sonusIpCidrRouteIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 3, 3, 2, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusIpCidrRouteIfIndex.setStatus('current')
sonusIpCidrRouteType = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 3, 3, 2, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("other", 1), ("reject", 2), ("local", 3), ("remote", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusIpCidrRouteType.setStatus('current')
sonusIpCidrRouteProto = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 3, 3, 2, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16))).clone(namedValues=NamedValues(("other", 1), ("local", 2), ("netmgmt", 3), ("icmp", 4), ("egp", 5), ("ggp", 6), ("hello", 7), ("rip", 8), ("isIs", 9), ("esIs", 10), ("ciscoIgrp", 11), ("bbnSpfIgp", 12), ("ospf", 13), ("bgp", 14), ("idpr", 15), ("ciscoEigrp", 16)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusIpCidrRouteProto.setStatus('current')
sonusIpCidrRouteAge = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 3, 3, 2, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusIpCidrRouteAge.setStatus('current')
sonusIpCidrRouteInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 3, 3, 2, 1, 9), ObjectIdentifier()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusIpCidrRouteInfo.setStatus('current')
sonusIpCidrRouteNextHopAS = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 3, 3, 2, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusIpCidrRouteNextHopAS.setStatus('current')
sonusIpCidrRouteMetric1 = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 3, 3, 2, 1, 11), Integer32().clone(-1)).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusIpCidrRouteMetric1.setStatus('current')
sonusIpCidrRouteMetric2 = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 3, 3, 2, 1, 12), Integer32().clone(-1)).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusIpCidrRouteMetric2.setStatus('current')
sonusIpCidrRouteMetric3 = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 3, 3, 2, 1, 13), Integer32().clone(-1)).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusIpCidrRouteMetric3.setStatus('current')
sonusIpCidrRouteMetric4 = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 3, 3, 2, 1, 14), Integer32().clone(-1)).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusIpCidrRouteMetric4.setStatus('current')
sonusIpCidrRouteMetric5 = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 3, 3, 2, 1, 15), Integer32().clone(-1)).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusIpCidrRouteMetric5.setStatus('current')
sonusIpCidrRouteStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 3, 3, 2, 1, 16), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusIpCidrRouteStatus.setStatus('current')
sonusIpCidrRouteShelf = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 3, 3, 2, 1, 17), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusIpCidrRouteShelf.setStatus('current')
sonusIpCidrRouteSlot = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 3, 3, 2, 1, 18), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusIpCidrRouteSlot.setStatus('current')
sonusIpCidrRouteInstance = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 3, 3, 2, 1, 19), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusIpCidrRouteInstance.setStatus('current')
sonusIpCidrAdminRouteTable = MibTable((1, 3, 6, 1, 4, 1, 2879, 2, 3, 3, 3), )
if mibBuilder.loadTexts: sonusIpCidrAdminRouteTable.setStatus('current')
sonusIpCidrAdminRouteEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2879, 2, 3, 3, 3, 1), ).setIndexNames((0, "SONUS-IP-FORWARDING-MIB", "sonusIpCidrAdminRouteDest"), (0, "SONUS-IP-FORWARDING-MIB", "sonusIpCidrAdminRouteMask"), (0, "SONUS-IP-FORWARDING-MIB", "sonusIpCidrAdminRouteNextHop"), (0, "SONUS-IP-FORWARDING-MIB", "sonusIpCidrAdminRouteIfIndex"))
if mibBuilder.loadTexts: sonusIpCidrAdminRouteEntry.setStatus('current')
sonusIpCidrAdminRouteDest = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 3, 3, 3, 1, 1), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: sonusIpCidrAdminRouteDest.setStatus('current')
sonusIpCidrAdminRouteMask = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 3, 3, 3, 1, 2), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: sonusIpCidrAdminRouteMask.setStatus('current')
sonusIpCidrAdminRouteNextHop = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 3, 3, 3, 1, 3), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: sonusIpCidrAdminRouteNextHop.setStatus('current')
sonusIpCidrAdminRouteIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 3, 3, 3, 1, 4), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: sonusIpCidrAdminRouteIfIndex.setStatus('current')
sonusIpCidrAdminRouteStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 3, 3, 3, 1, 5), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: sonusIpCidrAdminRouteStatus.setStatus('current')
mibBuilder.exportSymbols("SONUS-IP-FORWARDING-MIB", sonusIpCidrAdminRouteIfIndex=sonusIpCidrAdminRouteIfIndex, sonusIpCidrRouteInstance=sonusIpCidrRouteInstance, sonusIpCidrRouteMetric3=sonusIpCidrRouteMetric3, sonusIpForwardGeneralGroupSlot=sonusIpForwardGeneralGroupSlot, sonusIpCidrRouteNextHop=sonusIpCidrRouteNextHop, sonusIpCidrRouteMetric4=sonusIpCidrRouteMetric4, sonusIpCidrRouteTable=sonusIpCidrRouteTable, sonusIpCidrAdminRouteTable=sonusIpCidrAdminRouteTable, sonusIpCidrRouteEntry=sonusIpCidrRouteEntry, sonusIpCidrAdminRouteMask=sonusIpCidrAdminRouteMask, sonusIpCidrRouteMask=sonusIpCidrRouteMask, sonusIpCidrRouteMetric1=sonusIpCidrRouteMetric1, sonusIpCidrRouteMetric2=sonusIpCidrRouteMetric2, sonusIpForwardGeneralGroupTable=sonusIpForwardGeneralGroupTable, sonusIpForwardGeneralGroupShelf=sonusIpForwardGeneralGroupShelf, sonusIpForwardGeneralGroupInstance=sonusIpForwardGeneralGroupInstance, sonusIpCidrRouteStatus=sonusIpCidrRouteStatus, sonusIpCidrAdminRouteEntry=sonusIpCidrAdminRouteEntry, sonusIpCidrRouteMetric5=sonusIpCidrRouteMetric5, sonusIpCidrRouteInfo=sonusIpCidrRouteInfo, sonusIpCidrRouteIfIndex=sonusIpCidrRouteIfIndex, sonusIpCidrRouteNumber=sonusIpCidrRouteNumber, sonusIpCidrAdminRouteDest=sonusIpCidrAdminRouteDest, sonusIpCidrAdminRouteNextHop=sonusIpCidrAdminRouteNextHop, sonusIpForwardGeneralGroupEntry=sonusIpForwardGeneralGroupEntry, sonusIpCidrRouteAge=sonusIpCidrRouteAge, sonusIpForwardingMIB=sonusIpForwardingMIB, sonusIpCidrRouteSlot=sonusIpCidrRouteSlot, sonusIpCidrRouteDest=sonusIpCidrRouteDest, sonusIpCidrRouteTos=sonusIpCidrRouteTos, sonusIpCidrRouteType=sonusIpCidrRouteType, PYSNMP_MODULE_ID=sonusIpForwardingMIB, sonusIpCidrRouteNextHopAS=sonusIpCidrRouteNextHopAS, sonusIpCidrAdminRouteStatus=sonusIpCidrAdminRouteStatus, sonusIpCidrRouteProto=sonusIpCidrRouteProto, sonusIpCidrRouteShelf=sonusIpCidrRouteShelf)
