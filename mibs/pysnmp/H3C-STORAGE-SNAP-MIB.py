#
# PySNMP MIB module H3C-STORAGE-SNAP-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/H3C-STORAGE-SNAP-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:10:48 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ConstraintsIntersection, SingleValueConstraint, ConstraintsUnion, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ConstraintsIntersection", "SingleValueConstraint", "ConstraintsUnion", "ValueRangeConstraint")
entPhysicalIndex, = mibBuilder.importSymbols("ENTITY-MIB", "entPhysicalIndex")
H3cLvIDType, H3cStorageOnlineState, h3cStorageRef, H3cStorageActionType, H3cExtendSelectPolicy, H3cRaidIDType, H3cStorageEnableState = mibBuilder.importSymbols("H3C-STORAGE-REF-MIB", "H3cLvIDType", "H3cStorageOnlineState", "h3cStorageRef", "H3cStorageActionType", "H3cExtendSelectPolicy", "H3cRaidIDType", "H3cStorageEnableState")
InetAddress, InetAddressType = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddress", "InetAddressType")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Unsigned32, TimeTicks, Counter64, Gauge32, NotificationType, iso, Integer32, IpAddress, MibScalar, MibTable, MibTableRow, MibTableColumn, MibIdentifier, Counter32, ObjectIdentity, Bits, ModuleIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "Unsigned32", "TimeTicks", "Counter64", "Gauge32", "NotificationType", "iso", "Integer32", "IpAddress", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "MibIdentifier", "Counter32", "ObjectIdentity", "Bits", "ModuleIdentity")
DateAndTime, TextualConvention, DisplayString, RowStatus, TruthValue = mibBuilder.importSymbols("SNMPv2-TC", "DateAndTime", "TextualConvention", "DisplayString", "RowStatus", "TruthValue")
h3cStorageSnap = ModuleIdentity((1, 3, 6, 1, 4, 1, 2011, 10, 10, 2))
if mibBuilder.loadTexts: h3cStorageSnap.setLastUpdated('200709141452Z')
if mibBuilder.loadTexts: h3cStorageSnap.setOrganization('H3C Technologies Co., Ltd.')
h3cSnapMibObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 10, 10, 2, 1))
h3cGlobalSnapSettingsObject = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 10, 10, 2, 1, 1))
h3cAddtionalSpaceMaxSize = MibScalar((1, 3, 6, 1, 4, 1, 2011, 10, 10, 2, 1, 1, 1), Integer32()).setUnits('TB').setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cAddtionalSpaceMaxSize.setStatus('current')
h3cSnapConfigTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 10, 10, 2, 1, 2), )
if mibBuilder.loadTexts: h3cSnapConfigTable.setStatus('current')
h3cSnapConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 10, 10, 2, 1, 2, 1), ).setIndexNames((0, "H3C-STORAGE-SNAP-MIB", "h3cSnapLvIndex"))
if mibBuilder.loadTexts: h3cSnapConfigEntry.setStatus('current')
h3cSnapLvIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 10, 2, 1, 2, 1, 1), H3cLvIDType())
if mibBuilder.loadTexts: h3cSnapLvIndex.setStatus('current')
h3cSnapAreaId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 10, 2, 1, 2, 1, 2), H3cLvIDType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cSnapAreaId.setStatus('current')
h3cSnapAreaAutoExpand = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 10, 2, 1, 2, 1, 3), H3cStorageEnableState().clone('disable')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cSnapAreaAutoExpand.setStatus('current')
h3cSnapAreaThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 10, 2, 1, 2, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cSnapAreaThreshold.setStatus('current')
h3cSnapAreaIncSize = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 10, 2, 1, 2, 1, 5), Integer32()).setUnits('MB').setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cSnapAreaIncSize.setStatus('current')
h3cSnapAreaMaxSize = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 10, 2, 1, 2, 1, 6), Integer32()).setUnits('MB').setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cSnapAreaMaxSize.setStatus('current')
h3cSnapAreaFullDeleteTM = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 10, 2, 1, 2, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("rotative", 1), ("none", 2))).clone('none')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cSnapAreaFullDeleteTM.setStatus('current')
h3cSnapAreaNotify = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 10, 2, 1, 2, 1, 8), H3cStorageEnableState()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cSnapAreaNotify.setStatus('current')
h3cSnapAreaStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 10, 2, 1, 2, 1, 9), H3cStorageOnlineState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cSnapAreaStatus.setStatus('current')
h3cSnapRaidUuid = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 10, 2, 1, 2, 1, 10), H3cRaidIDType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cSnapRaidUuid.setStatus('current')
h3cSnapRaidSize = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 10, 2, 1, 2, 1, 11), Integer32()).setUnits('MB').setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cSnapRaidSize.setStatus('current')
h3cSnapRaidSelectPolicy = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 10, 2, 1, 2, 1, 12), H3cExtendSelectPolicy().clone('none')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cSnapRaidSelectPolicy.setStatus('current')
h3cSnapAreaTotalSize = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 10, 2, 1, 2, 1, 13), Integer32()).setUnits('MB').setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cSnapAreaTotalSize.setStatus('current')
h3cSnapAreaFreeSize = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 10, 2, 1, 2, 1, 14), Integer32()).setUnits('MB').setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cSnapAreaFreeSize.setStatus('current')
h3cSnapExtendTimes = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 10, 2, 1, 2, 1, 15), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cSnapExtendTimes.setStatus('current')
h3cSnapRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 10, 2, 1, 2, 1, 16), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cSnapRowStatus.setStatus('current')
h3cSnapExpandTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 10, 10, 2, 1, 3), )
if mibBuilder.loadTexts: h3cSnapExpandTable.setStatus('current')
h3cSnapExpandEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 10, 10, 2, 1, 3, 1), ).setIndexNames((0, "H3C-STORAGE-SNAP-MIB", "h3cSnapLvIndex"), (0, "H3C-STORAGE-SNAP-MIB", "h3cSAExpRaidUuid"))
if mibBuilder.loadTexts: h3cSnapExpandEntry.setStatus('current')
h3cSAExpRaidUuid = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 10, 2, 1, 3, 1, 1), H3cRaidIDType())
if mibBuilder.loadTexts: h3cSAExpRaidUuid.setStatus('current')
h3cSAExpSize = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 10, 2, 1, 3, 1, 2), Integer32()).setUnits('MB').setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cSAExpSize.setStatus('current')
h3cSAExpRaidSize = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 10, 2, 1, 3, 1, 3), Integer32()).setUnits('MB').setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cSAExpRaidSize.setStatus('current')
h3cSnapAreaExpRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 10, 2, 1, 3, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cSnapAreaExpRowStatus.setStatus('current')
h3cSnapCopyTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 10, 10, 2, 1, 4), )
if mibBuilder.loadTexts: h3cSnapCopyTable.setStatus('current')
h3cSnapCopyEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 10, 10, 2, 1, 4, 1), ).setIndexNames((0, "H3C-STORAGE-SNAP-MIB", "h3cSnapLvIndex"))
if mibBuilder.loadTexts: h3cSnapCopyEntry.setStatus('current')
h3cSnapCopyLvIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 10, 2, 1, 4, 1, 1), H3cLvIDType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cSnapCopyLvIndex.setStatus('current')
h3cSnapCopyPercentage = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 10, 2, 1, 4, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cSnapCopyPercentage.setStatus('current')
h3cSnapCopyStartTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 10, 2, 1, 4, 1, 3), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cSnapCopyStartTime.setStatus('current')
h3cSnapCopySwitch = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 10, 2, 1, 4, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("start", 1), ("stop", 2), ("none", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cSnapCopySwitch.setStatus('current')
h3cTimeMarkConfigTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 10, 10, 2, 1, 5), )
if mibBuilder.loadTexts: h3cTimeMarkConfigTable.setStatus('current')
h3cTimeMarkConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 10, 10, 2, 1, 5, 1), ).setIndexNames((0, "H3C-STORAGE-SNAP-MIB", "h3cSnapLvIndex"))
if mibBuilder.loadTexts: h3cTimeMarkConfigEntry.setStatus('current')
h3cTimeMarkCounts = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 10, 2, 1, 5, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cTimeMarkCounts.setStatus('current')
h3cTimeMarkInitializeTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 10, 2, 1, 5, 1, 2), DateAndTime()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cTimeMarkInitializeTime.setStatus('current')
h3cTimeMarkInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 10, 2, 1, 5, 1, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cTimeMarkInterval.setStatus('current')
h3cTimeMarkLastTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 10, 2, 1, 5, 1, 4), DateAndTime()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cTimeMarkLastTime.setStatus('current')
h3cTimeMarkTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 10, 2, 1, 5, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cTimeMarkTotal.setStatus('current')
h3cTimeMarkSwitch = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 10, 2, 1, 5, 1, 6), H3cStorageEnableState()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cTimeMarkSwitch.setStatus('current')
h3cTimeMarkCreateTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 10, 10, 2, 1, 6), )
if mibBuilder.loadTexts: h3cTimeMarkCreateTable.setStatus('current')
h3cTimeMarkCreateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 10, 10, 2, 1, 6, 1), ).setIndexNames((0, "H3C-STORAGE-SNAP-MIB", "h3cSnapLvIndex"), (0, "H3C-STORAGE-SNAP-MIB", "h3cTimeMarkStamp"))
if mibBuilder.loadTexts: h3cTimeMarkCreateEntry.setStatus('current')
h3cTimeMarkStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 10, 2, 1, 6, 1, 1), DateAndTime())
if mibBuilder.loadTexts: h3cTimeMarkStamp.setStatus('current')
h3cTimeMarkComment = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 10, 2, 1, 6, 1, 2), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cTimeMarkComment.setStatus('current')
h3cTimeMarkSize = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 10, 2, 1, 6, 1, 3), Integer32()).setUnits('KB').setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cTimeMarkSize.setStatus('current')
h3cTimeMarkRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 10, 2, 1, 6, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cTimeMarkRowStatus.setStatus('current')
h3cTimeMarkCopyTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 10, 10, 2, 1, 7), )
if mibBuilder.loadTexts: h3cTimeMarkCopyTable.setStatus('current')
h3cTimeMarkCopyEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 10, 10, 2, 1, 7, 1), ).setIndexNames((0, "H3C-STORAGE-SNAP-MIB", "h3cSnapLvIndex"), (0, "H3C-STORAGE-SNAP-MIB", "h3cTimeMarkStamp"))
if mibBuilder.loadTexts: h3cTimeMarkCopyEntry.setStatus('current')
h3cTMCopyDestLvId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 10, 2, 1, 7, 1, 1), H3cLvIDType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cTMCopyDestLvId.setStatus('current')
h3cTMCopyPercentage = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 10, 2, 1, 7, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cTMCopyPercentage.setStatus('current')
h3cTMCopyStartTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 10, 2, 1, 7, 1, 3), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cTMCopyStartTime.setStatus('current')
h3cTMCopySwitch = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 10, 2, 1, 7, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("start", 1), ("stop", 2), ("none", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cTMCopySwitch.setStatus('current')
h3cTimeMarkRollbackTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 10, 10, 2, 1, 8), )
if mibBuilder.loadTexts: h3cTimeMarkRollbackTable.setStatus('current')
h3cTimeMarkRollbackEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 10, 10, 2, 1, 8, 1), ).setIndexNames((0, "H3C-STORAGE-SNAP-MIB", "h3cSnapLvIndex"), (0, "H3C-STORAGE-SNAP-MIB", "h3cTimeMarkStamp"))
if mibBuilder.loadTexts: h3cTimeMarkRollbackEntry.setStatus('current')
h3cTMRollbackPercentage = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 10, 2, 1, 8, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cTMRollbackPercentage.setStatus('current')
h3cTMRollbackStartTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 10, 2, 1, 8, 1, 2), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cTMRollbackStartTime.setStatus('current')
h3cTMRollbackSwitch = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 10, 2, 1, 8, 1, 3), H3cStorageActionType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cTMRollbackSwitch.setStatus('current')
h3cTimeViewTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 10, 10, 2, 1, 9), )
if mibBuilder.loadTexts: h3cTimeViewTable.setStatus('current')
h3cTimeViewEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 10, 10, 2, 1, 9, 1), ).setIndexNames((0, "H3C-STORAGE-SNAP-MIB", "h3cSnapLvIndex"), (0, "H3C-STORAGE-SNAP-MIB", "h3cTimeViewStamp"))
if mibBuilder.loadTexts: h3cTimeViewEntry.setStatus('current')
h3cTimeViewStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 10, 2, 1, 9, 1, 1), DateAndTime())
if mibBuilder.loadTexts: h3cTimeViewStamp.setStatus('current')
h3cTimeViewID = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 10, 2, 1, 9, 1, 2), H3cLvIDType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cTimeViewID.setStatus('current')
h3cTimeViewName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 10, 2, 1, 9, 1, 3), OctetString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cTimeViewName.setStatus('current')
h3cTimeViewRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 10, 2, 1, 9, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cTimeViewRowStatus.setStatus('current')
h3cReplicaConfigTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 10, 10, 2, 1, 10), )
if mibBuilder.loadTexts: h3cReplicaConfigTable.setStatus('current')
h3cReplicaConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 10, 10, 2, 1, 10, 1), ).setIndexNames((0, "H3C-STORAGE-SNAP-MIB", "h3cRepLocalLvIndex"))
if mibBuilder.loadTexts: h3cReplicaConfigEntry.setStatus('current')
h3cRepLocalLvIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 10, 2, 1, 10, 1, 1), H3cLvIDType())
if mibBuilder.loadTexts: h3cRepLocalLvIndex.setStatus('current')
h3cLvRepLocalWay = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 10, 2, 1, 10, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("outgoing", 1), ("incoming", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cLvRepLocalWay.setStatus('current')
h3cRepLocalServerIP = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 10, 2, 1, 10, 1, 3), InetAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cRepLocalServerIP.setStatus('current')
h3cRepLocalServerIPType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 10, 2, 1, 10, 1, 4), InetAddressType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cRepLocalServerIPType.setStatus('current')
h3cRepLocalServerName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 10, 2, 1, 10, 1, 5), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cRepLocalServerName.setStatus('current')
h3cRepLocalServerUsername = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 10, 2, 1, 10, 1, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cRepLocalServerUsername.setStatus('current')
h3cRepLocalServerPassword = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 10, 2, 1, 10, 1, 7), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 127))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cRepLocalServerPassword.setStatus('current')
h3cRepRemoteServerIP = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 10, 2, 1, 10, 1, 8), InetAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cRepRemoteServerIP.setStatus('current')
h3cRepRemoteServerIPType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 10, 2, 1, 10, 1, 9), InetAddressType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cRepRemoteServerIPType.setStatus('current')
h3cRepRemoteServerName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 10, 2, 1, 10, 1, 10), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cRepRemoteServerName.setStatus('current')
h3cRepRemoteServerUsername = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 10, 2, 1, 10, 1, 11), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cRepRemoteServerUsername.setStatus('current')
h3cRepRemoteServerPassword = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 10, 2, 1, 10, 1, 12), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 127))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cRepRemoteServerPassword.setStatus('current')
h3cRepRemoteLvIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 10, 2, 1, 10, 1, 13), H3cLvIDType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cRepRemoteLvIndex.setStatus('current')
h3cReplicaMode = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 10, 2, 1, 10, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("adaptive", 1), ("remote", 2), ("none", 3)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cReplicaMode.setStatus('current')
h3cReplicaWatermark = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 10, 2, 1, 10, 1, 15), Integer32()).setUnits('MB').setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cReplicaWatermark.setStatus('current')
h3cReplicaWatermarkRetry = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 10, 2, 1, 10, 1, 16), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cReplicaWatermarkRetry.setStatus('current')
h3cReplicaInitializeTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 10, 2, 1, 10, 1, 17), DateAndTime()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cReplicaInitializeTime.setStatus('current')
h3cReplicaInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 10, 2, 1, 10, 1, 18), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cReplicaInterval.setStatus('current')
h3cReplicaEncrypt = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 10, 2, 1, 10, 1, 19), H3cStorageEnableState().clone('disable')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cReplicaEncrypt.setStatus('current')
h3cReplicaCompress = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 10, 2, 1, 10, 1, 20), H3cStorageEnableState().clone('disable')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cReplicaCompress.setStatus('current')
h3cReplicaUseExistTM = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 10, 2, 1, 10, 1, 21), H3cStorageEnableState().clone('disable')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cReplicaUseExistTM.setStatus('current')
h3cReplicaProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 10, 2, 1, 10, 1, 22), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("tcp", 1), ("rudp", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cReplicaProtocol.setStatus('current')
h3cReplicaScanDiff = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 10, 2, 1, 10, 1, 23), TruthValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cReplicaScanDiff.setStatus('current')
h3cReplicaStatSwitch = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 10, 2, 1, 10, 1, 24), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("promte", 1), ("sync", 2), ("scan", 3), ("reversal", 4), ("stop", 5), ("suspend", 6), ("resume", 7), ("none", 8)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cReplicaStatSwitch.setStatus('current')
h3cReplicaRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 10, 2, 1, 10, 1, 25), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cReplicaRowStatus.setStatus('current')
h3cReplicaStateTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 10, 10, 2, 1, 11), )
if mibBuilder.loadTexts: h3cReplicaStateTable.setStatus('current')
h3cReplicaStateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 10, 10, 2, 1, 11, 1), ).setIndexNames((0, "H3C-STORAGE-SNAP-MIB", "h3cRepLocalLvIndex"))
if mibBuilder.loadTexts: h3cReplicaStateEntry.setStatus('current')
h3cReplicaDelta = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 10, 2, 1, 11, 1, 1), Integer32()).setUnits('MB').setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cReplicaDelta.setStatus('current')
h3cReplicaLastSyncTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 10, 2, 1, 11, 1, 2), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cReplicaLastSyncTime.setStatus('current')
h3cReplicaNextSyncTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 10, 2, 1, 11, 1, 3), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cReplicaNextSyncTime.setStatus('current')
h3cReplicaSyncTotalSize = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 10, 2, 1, 11, 1, 4), Integer32()).setUnits('MB').setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cReplicaSyncTotalSize.setStatus('current')
h3cReplicaSyncCurPercentage = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 10, 2, 1, 11, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cReplicaSyncCurPercentage.setStatus('current')
h3cReplicaSyncPerformance = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 10, 2, 1, 11, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cReplicaSyncPerformance.setStatus('current')
h3cReplicaRunStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 10, 2, 1, 11, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("suspend", 1), ("idle", 2), ("stop", 3), ("sync", 4), ("scan", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cReplicaRunStatus.setStatus('current')
h3cCDRConfigTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 10, 10, 2, 1, 12), )
if mibBuilder.loadTexts: h3cCDRConfigTable.setStatus('current')
h3cCDRConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 10, 10, 2, 1, 12, 1), ).setIndexNames((0, "H3C-STORAGE-SNAP-MIB", "h3cCDRLvIndex"))
if mibBuilder.loadTexts: h3cCDRConfigEntry.setStatus('current')
h3cCDRLvIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 10, 2, 1, 12, 1, 1), H3cLvIDType())
if mibBuilder.loadTexts: h3cCDRLvIndex.setStatus('current')
h3cCDRID = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 10, 2, 1, 12, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cCDRID.setStatus('current')
h3cCDRStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 10, 2, 1, 12, 1, 3), H3cStorageOnlineState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cCDRStatus.setStatus('current')
h3cCDRTotalSize = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 10, 2, 1, 12, 1, 4), Integer32()).setUnits('MB').setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cCDRTotalSize.setStatus('current')
h3cCDRFreeSize = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 10, 2, 1, 12, 1, 5), Integer32()).setUnits('MB').setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cCDRFreeSize.setStatus('current')
h3cCDRSelectPolicy = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 10, 2, 1, 12, 1, 6), H3cExtendSelectPolicy().clone('none')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cCDRSelectPolicy.setStatus('current')
h3cCDRRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 10, 2, 1, 12, 1, 7), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cCDRRowStatus.setStatus('current')
h3cCDRDistributeTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 10, 10, 2, 1, 13), )
if mibBuilder.loadTexts: h3cCDRDistributeTable.setStatus('current')
h3cCDRDistributeEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 10, 10, 2, 1, 13, 1), ).setIndexNames((0, "H3C-STORAGE-SNAP-MIB", "h3cCDRDistLvIndex"), (0, "H3C-STORAGE-SNAP-MIB", "h3cCDRRaidUuid"))
if mibBuilder.loadTexts: h3cCDRDistributeEntry.setStatus('current')
h3cCDRDistLvIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 10, 2, 1, 13, 1, 1), H3cLvIDType())
if mibBuilder.loadTexts: h3cCDRDistLvIndex.setStatus('current')
h3cCDRRaidUuid = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 10, 2, 1, 13, 1, 2), H3cRaidIDType())
if mibBuilder.loadTexts: h3cCDRRaidUuid.setStatus('current')
h3cCDRRaidSize = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 10, 2, 1, 13, 1, 3), Integer32()).setUnits('MB').setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cCDRRaidSize.setStatus('current')
h3cCDRExtRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 10, 2, 1, 13, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cCDRExtRowStatus.setStatus('current')
h3cSafeCacheConfigTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 10, 10, 2, 1, 14), )
if mibBuilder.loadTexts: h3cSafeCacheConfigTable.setStatus('current')
h3cSafeCacheConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 10, 10, 2, 1, 14, 1), ).setIndexNames((0, "H3C-STORAGE-SNAP-MIB", "h3cSafeCacheLvIndex"))
if mibBuilder.loadTexts: h3cSafeCacheConfigEntry.setStatus('current')
h3cSafeCacheLvIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 10, 2, 1, 14, 1, 1), H3cLvIDType())
if mibBuilder.loadTexts: h3cSafeCacheLvIndex.setStatus('current')
h3cSafeCacheID = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 10, 2, 1, 14, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cSafeCacheID.setStatus('current')
h3cSafeCacheStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 10, 2, 1, 14, 1, 3), H3cStorageOnlineState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cSafeCacheStatus.setStatus('current')
h3cSafeCacheTotalSize = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 10, 2, 1, 14, 1, 4), Integer32()).setUnits('MB').setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cSafeCacheTotalSize.setStatus('current')
h3cSafeCacheFreeSize = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 10, 2, 1, 14, 1, 5), Integer32()).setUnits('MB').setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cSafeCacheFreeSize.setStatus('current')
h3cSafeCacheSelectPolicy = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 10, 2, 1, 14, 1, 6), H3cExtendSelectPolicy().clone('none')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cSafeCacheSelectPolicy.setStatus('current')
h3cSafeCacheThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 10, 2, 1, 14, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cSafeCacheThreshold.setStatus('current')
h3cSafeCacheFlushTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 10, 2, 1, 14, 1, 8), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cSafeCacheFlushTime.setStatus('current')
h3cSafeCacheFlushCommand = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 10, 2, 1, 14, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 64))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cSafeCacheFlushCommand.setStatus('current')
h3cSafeCacheSkipDupWrite = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 10, 2, 1, 14, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cSafeCacheSkipDupWrite.setStatus('current')
h3cSafeCacheRunStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 10, 2, 1, 14, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("run", 1), ("suspend", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cSafeCacheRunStatus.setStatus('current')
h3cSafeCacheSwitch = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 10, 2, 1, 14, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("suspend", 1), ("resume", 2), ("none", 3)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cSafeCacheSwitch.setStatus('current')
h3cSafeCacheRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 10, 2, 1, 14, 1, 13), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cSafeCacheRowStatus.setStatus('current')
h3cSafeCacheDistributeTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 10, 10, 2, 1, 15), )
if mibBuilder.loadTexts: h3cSafeCacheDistributeTable.setStatus('current')
h3cSafeCacheDistributeEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 10, 10, 2, 1, 15, 1), ).setIndexNames((0, "H3C-STORAGE-SNAP-MIB", "h3cSafeCacheDistLvIndex"), (0, "H3C-STORAGE-SNAP-MIB", "h3cSafeCacheRaidUuid"))
if mibBuilder.loadTexts: h3cSafeCacheDistributeEntry.setStatus('current')
h3cSafeCacheDistLvIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 10, 2, 1, 15, 1, 1), H3cLvIDType())
if mibBuilder.loadTexts: h3cSafeCacheDistLvIndex.setStatus('current')
h3cSafeCacheRaidUuid = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 10, 2, 1, 15, 1, 2), H3cRaidIDType())
if mibBuilder.loadTexts: h3cSafeCacheRaidUuid.setStatus('current')
h3cSafeCacheRaidSize = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 10, 2, 1, 15, 1, 3), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cSafeCacheRaidSize.setStatus('current')
h3cSafeCacheExtRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 10, 2, 1, 15, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cSafeCacheExtRowStatus.setStatus('current')
h3cMirrorConfigTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 10, 10, 2, 1, 16), )
if mibBuilder.loadTexts: h3cMirrorConfigTable.setStatus('current')
h3cMirrorConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 10, 10, 2, 1, 16, 1), ).setIndexNames((0, "H3C-STORAGE-SNAP-MIB", "h3cMirrorLvIndex"))
if mibBuilder.loadTexts: h3cMirrorConfigEntry.setStatus('current')
h3cMirrorLvIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 10, 2, 1, 16, 1, 1), H3cLvIDType())
if mibBuilder.loadTexts: h3cMirrorLvIndex.setStatus('current')
h3cMirrorType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 10, 2, 1, 16, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("sync", 1), ("async", 2), ("none", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cMirrorType.setStatus('current')
h3cMirrorStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 10, 2, 1, 16, 1, 3), H3cStorageOnlineState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cMirrorStatus.setStatus('current')
h3cMirrorName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 10, 2, 1, 16, 1, 4), OctetString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cMirrorName.setStatus('current')
h3cMirrorSyncPercentage = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 10, 2, 1, 16, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cMirrorSyncPercentage.setStatus('current')
h3cMirrorSyncPerformance = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 10, 2, 1, 16, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cMirrorSyncPerformance.setStatus('current')
h3cMirrorDelta = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 10, 2, 1, 16, 1, 7), Integer32()).setUnits('MB').setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cMirrorDelta.setStatus('current')
h3cMirrorRaidType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 10, 2, 1, 16, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("virtual", 1), ("serviceEnable", 2), ("none", 3)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cMirrorRaidType.setStatus('current')
h3cMirrorSelectPolicy = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 10, 2, 1, 16, 1, 9), H3cExtendSelectPolicy().clone('none')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cMirrorSelectPolicy.setStatus('current')
h3cMirrorSwitch = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 10, 2, 1, 16, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("sync", 1), ("swap", 2), ("promote", 3), ("none", 4)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cMirrorSwitch.setStatus('current')
h3cMirrorExtendRaidUuid = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 10, 2, 1, 16, 1, 11), H3cRaidIDType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cMirrorExtendRaidUuid.setStatus('current')
h3cMirrorRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 10, 2, 1, 16, 1, 12), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cMirrorRowStatus.setStatus('current')
h3cMirrorDistributeTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 10, 10, 2, 1, 17), )
if mibBuilder.loadTexts: h3cMirrorDistributeTable.setStatus('current')
h3cMirrorDistributeEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 10, 10, 2, 1, 17, 1), ).setIndexNames((0, "H3C-STORAGE-SNAP-MIB", "h3cMirrorDistLvIndex"), (0, "H3C-STORAGE-SNAP-MIB", "h3cMirrorRaidUuid"))
if mibBuilder.loadTexts: h3cMirrorDistributeEntry.setStatus('current')
h3cMirrorDistLvIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 10, 2, 1, 17, 1, 1), H3cLvIDType())
if mibBuilder.loadTexts: h3cMirrorDistLvIndex.setStatus('current')
h3cMirrorRaidUuid = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 10, 2, 1, 17, 1, 2), H3cRaidIDType())
if mibBuilder.loadTexts: h3cMirrorRaidUuid.setStatus('current')
h3cMirrorRaidSize = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 10, 2, 1, 17, 1, 3), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cMirrorRaidSize.setStatus('current')
h3cMirrorExtRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 10, 2, 1, 17, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cMirrorExtRowStatus.setStatus('current')
mibBuilder.exportSymbols("H3C-STORAGE-SNAP-MIB", h3cSnapAreaTotalSize=h3cSnapAreaTotalSize, h3cReplicaLastSyncTime=h3cReplicaLastSyncTime, h3cSnapConfigTable=h3cSnapConfigTable, h3cSnapCopyPercentage=h3cSnapCopyPercentage, h3cTimeMarkInterval=h3cTimeMarkInterval, h3cSAExpRaidUuid=h3cSAExpRaidUuid, h3cTimeViewID=h3cTimeViewID, h3cReplicaEncrypt=h3cReplicaEncrypt, h3cSAExpSize=h3cSAExpSize, h3cCDRRowStatus=h3cCDRRowStatus, h3cCDRRaidUuid=h3cCDRRaidUuid, h3cCDRLvIndex=h3cCDRLvIndex, h3cRepLocalServerName=h3cRepLocalServerName, h3cSafeCacheDistLvIndex=h3cSafeCacheDistLvIndex, h3cTimeMarkCopyTable=h3cTimeMarkCopyTable, h3cTimeMarkRollbackEntry=h3cTimeMarkRollbackEntry, h3cCDRID=h3cCDRID, h3cTMRollbackPercentage=h3cTMRollbackPercentage, h3cReplicaInterval=h3cReplicaInterval, h3cTimeViewStamp=h3cTimeViewStamp, h3cReplicaCompress=h3cReplicaCompress, h3cSnapAreaFreeSize=h3cSnapAreaFreeSize, h3cTMCopyStartTime=h3cTMCopyStartTime, h3cSafeCacheFlushCommand=h3cSafeCacheFlushCommand, h3cReplicaConfigEntry=h3cReplicaConfigEntry, h3cReplicaWatermarkRetry=h3cReplicaWatermarkRetry, h3cReplicaWatermark=h3cReplicaWatermark, h3cSnapAreaThreshold=h3cSnapAreaThreshold, h3cReplicaRunStatus=h3cReplicaRunStatus, h3cStorageSnap=h3cStorageSnap, h3cTimeViewEntry=h3cTimeViewEntry, h3cSafeCacheSkipDupWrite=h3cSafeCacheSkipDupWrite, h3cGlobalSnapSettingsObject=h3cGlobalSnapSettingsObject, h3cCDRFreeSize=h3cCDRFreeSize, h3cSnapAreaNotify=h3cSnapAreaNotify, h3cRepRemoteLvIndex=h3cRepRemoteLvIndex, h3cTimeMarkCreateTable=h3cTimeMarkCreateTable, h3cSnapExpandEntry=h3cSnapExpandEntry, h3cSnapRaidUuid=h3cSnapRaidUuid, h3cSafeCacheFlushTime=h3cSafeCacheFlushTime, h3cRepRemoteServerName=h3cRepRemoteServerName, h3cSafeCacheRaidSize=h3cSafeCacheRaidSize, h3cTimeMarkCounts=h3cTimeMarkCounts, h3cSnapAreaFullDeleteTM=h3cSnapAreaFullDeleteTM, h3cSafeCacheExtRowStatus=h3cSafeCacheExtRowStatus, h3cMirrorSyncPerformance=h3cMirrorSyncPerformance, h3cSnapAreaId=h3cSnapAreaId, h3cReplicaSyncPerformance=h3cReplicaSyncPerformance, h3cSnapAreaIncSize=h3cSnapAreaIncSize, h3cTimeMarkCreateEntry=h3cTimeMarkCreateEntry, h3cRepLocalServerPassword=h3cRepLocalServerPassword, h3cMirrorStatus=h3cMirrorStatus, h3cAddtionalSpaceMaxSize=h3cAddtionalSpaceMaxSize, h3cReplicaConfigTable=h3cReplicaConfigTable, h3cReplicaStatSwitch=h3cReplicaStatSwitch, h3cRepRemoteServerIPType=h3cRepRemoteServerIPType, h3cMirrorDistributeTable=h3cMirrorDistributeTable, h3cMirrorDelta=h3cMirrorDelta, h3cMirrorRaidUuid=h3cMirrorRaidUuid, h3cMirrorExtRowStatus=h3cMirrorExtRowStatus, h3cMirrorRowStatus=h3cMirrorRowStatus, h3cMirrorType=h3cMirrorType, h3cTimeMarkSize=h3cTimeMarkSize, h3cSafeCacheRaidUuid=h3cSafeCacheRaidUuid, h3cSafeCacheTotalSize=h3cSafeCacheTotalSize, h3cSafeCacheDistributeTable=h3cSafeCacheDistributeTable, h3cReplicaDelta=h3cReplicaDelta, h3cSnapExtendTimes=h3cSnapExtendTimes, h3cSafeCacheRowStatus=h3cSafeCacheRowStatus, h3cTimeMarkConfigTable=h3cTimeMarkConfigTable, h3cTimeMarkSwitch=h3cTimeMarkSwitch, h3cTMCopySwitch=h3cTMCopySwitch, h3cRepLocalServerUsername=h3cRepLocalServerUsername, h3cSnapCopySwitch=h3cSnapCopySwitch, h3cSafeCacheConfigEntry=h3cSafeCacheConfigEntry, h3cSnapRowStatus=h3cSnapRowStatus, h3cTMRollbackSwitch=h3cTMRollbackSwitch, h3cSafeCacheLvIndex=h3cSafeCacheLvIndex, h3cTMRollbackStartTime=h3cTMRollbackStartTime, h3cReplicaNextSyncTime=h3cReplicaNextSyncTime, h3cSnapLvIndex=h3cSnapLvIndex, h3cSnapExpandTable=h3cSnapExpandTable, h3cCDRConfigTable=h3cCDRConfigTable, h3cReplicaRowStatus=h3cReplicaRowStatus, h3cReplicaMode=h3cReplicaMode, h3cTimeMarkCopyEntry=h3cTimeMarkCopyEntry, h3cTimeMarkLastTime=h3cTimeMarkLastTime, h3cSnapAreaExpRowStatus=h3cSnapAreaExpRowStatus, h3cTimeViewName=h3cTimeViewName, h3cMirrorRaidType=h3cMirrorRaidType, h3cSAExpRaidSize=h3cSAExpRaidSize, h3cReplicaSyncTotalSize=h3cReplicaSyncTotalSize, h3cSnapRaidSelectPolicy=h3cSnapRaidSelectPolicy, h3cCDRDistributeEntry=h3cCDRDistributeEntry, h3cSnapCopyLvIndex=h3cSnapCopyLvIndex, h3cSafeCacheThreshold=h3cSafeCacheThreshold, h3cReplicaUseExistTM=h3cReplicaUseExistTM, h3cSafeCacheFreeSize=h3cSafeCacheFreeSize, h3cReplicaProtocol=h3cReplicaProtocol, h3cCDRDistributeTable=h3cCDRDistributeTable, h3cTimeMarkRollbackTable=h3cTimeMarkRollbackTable, h3cCDRStatus=h3cCDRStatus, h3cMirrorRaidSize=h3cMirrorRaidSize, h3cReplicaInitializeTime=h3cReplicaInitializeTime, h3cReplicaStateEntry=h3cReplicaStateEntry, h3cMirrorDistributeEntry=h3cMirrorDistributeEntry, h3cSafeCacheConfigTable=h3cSafeCacheConfigTable, h3cTimeViewTable=h3cTimeViewTable, h3cSafeCacheSelectPolicy=h3cSafeCacheSelectPolicy, h3cTimeMarkConfigEntry=h3cTimeMarkConfigEntry, h3cReplicaSyncCurPercentage=h3cReplicaSyncCurPercentage, h3cRepLocalServerIP=h3cRepLocalServerIP, h3cSnapConfigEntry=h3cSnapConfigEntry, h3cMirrorDistLvIndex=h3cMirrorDistLvIndex, h3cReplicaStateTable=h3cReplicaStateTable, h3cSnapCopyStartTime=h3cSnapCopyStartTime, h3cSnapAreaMaxSize=h3cSnapAreaMaxSize, h3cReplicaScanDiff=h3cReplicaScanDiff, h3cTimeMarkInitializeTime=h3cTimeMarkInitializeTime, h3cRepLocalLvIndex=h3cRepLocalLvIndex, h3cRepLocalServerIPType=h3cRepLocalServerIPType, h3cMirrorConfigEntry=h3cMirrorConfigEntry, h3cCDRSelectPolicy=h3cCDRSelectPolicy, h3cSafeCacheID=h3cSafeCacheID, h3cCDRExtRowStatus=h3cCDRExtRowStatus, h3cRepRemoteServerPassword=h3cRepRemoteServerPassword, h3cRepRemoteServerIP=h3cRepRemoteServerIP, h3cTMCopyDestLvId=h3cTMCopyDestLvId, h3cTMCopyPercentage=h3cTMCopyPercentage, h3cSnapMibObjects=h3cSnapMibObjects, h3cTimeMarkTotal=h3cTimeMarkTotal, h3cTimeMarkComment=h3cTimeMarkComment, h3cTimeViewRowStatus=h3cTimeViewRowStatus, h3cMirrorLvIndex=h3cMirrorLvIndex, h3cSafeCacheSwitch=h3cSafeCacheSwitch, h3cMirrorName=h3cMirrorName, h3cSnapRaidSize=h3cSnapRaidSize, h3cSnapCopyEntry=h3cSnapCopyEntry, h3cSafeCacheRunStatus=h3cSafeCacheRunStatus, h3cLvRepLocalWay=h3cLvRepLocalWay, h3cSnapAreaStatus=h3cSnapAreaStatus, h3cSafeCacheStatus=h3cSafeCacheStatus, h3cSnapAreaAutoExpand=h3cSnapAreaAutoExpand, h3cCDRRaidSize=h3cCDRRaidSize, h3cCDRDistLvIndex=h3cCDRDistLvIndex, h3cTimeMarkRowStatus=h3cTimeMarkRowStatus, h3cRepRemoteServerUsername=h3cRepRemoteServerUsername, h3cMirrorSyncPercentage=h3cMirrorSyncPercentage, h3cMirrorSelectPolicy=h3cMirrorSelectPolicy, h3cCDRConfigEntry=h3cCDRConfigEntry, PYSNMP_MODULE_ID=h3cStorageSnap, h3cSafeCacheDistributeEntry=h3cSafeCacheDistributeEntry, h3cSnapCopyTable=h3cSnapCopyTable, h3cMirrorExtendRaidUuid=h3cMirrorExtendRaidUuid, h3cTimeMarkStamp=h3cTimeMarkStamp, h3cCDRTotalSize=h3cCDRTotalSize, h3cMirrorConfigTable=h3cMirrorConfigTable, h3cMirrorSwitch=h3cMirrorSwitch)
