#
# PySNMP MIB module ENETEXT-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/ENETEXT-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 18:48:29 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
enetExt, = mibBuilder.importSymbols("APENT-MIB", "enetExt")
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ConstraintsUnion, ConstraintsIntersection, SingleValueConstraint, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ConstraintsUnion", "ConstraintsIntersection", "SingleValueConstraint", "ValueSizeConstraint")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
MibScalar, MibTable, MibTableRow, MibTableColumn, NotificationType, Counter64, Unsigned32, Integer32, Counter32, ModuleIdentity, Gauge32, ObjectIdentity, MibIdentifier, Bits, IpAddress, TimeTicks, iso = mibBuilder.importSymbols("SNMPv2-SMI", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "NotificationType", "Counter64", "Unsigned32", "Integer32", "Counter32", "ModuleIdentity", "Gauge32", "ObjectIdentity", "MibIdentifier", "Bits", "IpAddress", "TimeTicks", "iso")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
apEnetExtMib = ModuleIdentity((1, 3, 6, 1, 4, 1, 2467, 1, 39, 1))
if mibBuilder.loadTexts: apEnetExtMib.setLastUpdated('9707202000Z')
if mibBuilder.loadTexts: apEnetExtMib.setOrganization('ArrowPoint Communications Inc.')
apEnetPhyTable = MibTable((1, 3, 6, 1, 4, 1, 2467, 1, 39, 2), )
if mibBuilder.loadTexts: apEnetPhyTable.setStatus('current')
apEnetPhyEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2467, 1, 39, 2, 1), ).setIndexNames((0, "ENETEXT-MIB", "apEnetPhyIfIndex"))
if mibBuilder.loadTexts: apEnetPhyEntry.setStatus('current')
apEnetPhyIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2467, 1, 39, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apEnetPhyIfIndex.setStatus('current')
apEnetPhyConfig = MibTableColumn((1, 3, 6, 1, 4, 1, 2467, 1, 39, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11))).clone(namedValues=NamedValues(("ten-half-duplex", 0), ("ten-full-duplex", 1), ("hundred-half-duplex", 2), ("hundred-full-duplex", 3), ("auto-negotiate", 4), ("disabled", 5), ("hundred-full-duplex-loopback", 6), ("giga-full-duplex-no-pause", 7), ("giga-full-duplex-asym-pause", 8), ("giga-full-duplex-sym-pause", 9), ("giga-full-duplex-sym-asym-pause", 10), ("giga-full-duplex-loopback", 11)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: apEnetPhyConfig.setStatus('current')
apEnetPhyConfigActual = MibTableColumn((1, 3, 6, 1, 4, 1, 2467, 1, 39, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("ten-half-duplex", 0), ("ten-full-duplex", 1), ("hundred-half-duplex", 2), ("hundred-full-duplex", 3), ("giga-full-duplex-no-pause", 4), ("giga-full-duplex-asym-pause", 5), ("giga-full-duplex-sym-pause", 6), ("giga-full-duplex-sym-asym-pause", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: apEnetPhyConfigActual.setStatus('current')
apEnetDescr = MibTableColumn((1, 3, 6, 1, 4, 1, 2467, 1, 39, 2, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: apEnetDescr.setStatus('current')
mibBuilder.exportSymbols("ENETEXT-MIB", apEnetExtMib=apEnetExtMib, apEnetPhyConfigActual=apEnetPhyConfigActual, apEnetPhyIfIndex=apEnetPhyIfIndex, apEnetPhyConfig=apEnetPhyConfig, apEnetPhyEntry=apEnetPhyEntry, apEnetDescr=apEnetDescr, apEnetPhyTable=apEnetPhyTable, PYSNMP_MODULE_ID=apEnetExtMib)
