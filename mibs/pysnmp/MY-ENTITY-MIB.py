#
# PySNMP MIB module MY-ENTITY-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/MY-ENTITY-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 20:06:30 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ValueSizeConstraint, ConstraintsUnion, ConstraintsIntersection, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ValueSizeConstraint", "ConstraintsUnion", "ConstraintsIntersection", "ValueRangeConstraint")
myMgmt, = mibBuilder.importSymbols("MY-SMI", "myMgmt")
NotificationGroup, ObjectGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ObjectGroup", "ModuleCompliance")
Gauge32, IpAddress, Integer32, TimeTicks, Bits, MibIdentifier, ModuleIdentity, NotificationType, Counter32, ObjectIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter64, iso, Unsigned32 = mibBuilder.importSymbols("SNMPv2-SMI", "Gauge32", "IpAddress", "Integer32", "TimeTicks", "Bits", "MibIdentifier", "ModuleIdentity", "NotificationType", "Counter32", "ObjectIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter64", "iso", "Unsigned32")
TextualConvention, RowStatus, TruthValue, MacAddress, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "RowStatus", "TruthValue", "MacAddress", "DisplayString")
myEntityMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 21))
myEntityMIB.setRevisions(('2002-03-20 00:00',))
if mibBuilder.loadTexts: myEntityMIB.setLastUpdated('200203200000Z')
if mibBuilder.loadTexts: myEntityMIB.setOrganization('D-Link Crop.')
myDeviceMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 21, 1))
myDeviceMaxNumber = MibScalar((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 21, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: myDeviceMaxNumber.setStatus('current')
myDeviceInfoTable = MibTable((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 21, 1, 2), )
if mibBuilder.loadTexts: myDeviceInfoTable.setStatus('current')
myDeviceInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 21, 1, 2, 1), ).setIndexNames((0, "MY-ENTITY-MIB", "myDeviceInfoIndex"))
if mibBuilder.loadTexts: myDeviceInfoEntry.setStatus('current')
myDeviceInfoIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 21, 1, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: myDeviceInfoIndex.setStatus('current')
myDeviceInfoDescr = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 21, 1, 2, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: myDeviceInfoDescr.setStatus('current')
myDeviceInfoSlotNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 21, 1, 2, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: myDeviceInfoSlotNumber.setStatus('current')
myDevicePowerStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 21, 1, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("rpsNoLink", 1), ("rpsLinkAndNoPower", 2), ("rpsLinkAndReadyForPower", 3), ("rpsLinkAndPower", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: myDevicePowerStatus.setStatus('current')
myDeviceMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 21, 1, 2, 1, 5), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: myDeviceMacAddress.setStatus('current')
myDevicePriority = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 21, 1, 2, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 10))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: myDevicePriority.setStatus('current')
myDeviceAlias = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 21, 1, 2, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: myDeviceAlias.setStatus('current')
myDeviceSWVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 21, 1, 2, 1, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: myDeviceSWVersion.setStatus('current')
myDeviceHWVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 21, 1, 2, 1, 9), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: myDeviceHWVersion.setStatus('current')
mySlotInfoTable = MibTable((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 21, 1, 3), )
if mibBuilder.loadTexts: mySlotInfoTable.setStatus('current')
mySlotInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 21, 1, 3, 1), ).setIndexNames((0, "MY-ENTITY-MIB", "mySlotInfoDeviceIndex"), (0, "MY-ENTITY-MIB", "mySlotInfoIndex"))
if mibBuilder.loadTexts: mySlotInfoEntry.setStatus('current')
mySlotInfoDeviceIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 21, 1, 3, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mySlotInfoDeviceIndex.setStatus('current')
mySlotInfoIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 21, 1, 3, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mySlotInfoIndex.setStatus('current')
mySlotModuleInfoDescr = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 21, 1, 3, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mySlotModuleInfoDescr.setStatus('current')
mySlotInfoPortNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 21, 1, 3, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mySlotInfoPortNumber.setStatus('current')
mySlotInfoPortMaxNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 21, 1, 3, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mySlotInfoPortMaxNumber.setStatus('current')
mySlotInfoDesc = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 21, 1, 3, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mySlotInfoDesc.setStatus('current')
myModuleTempStateTable = MibTable((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 21, 1, 4), )
if mibBuilder.loadTexts: myModuleTempStateTable.setStatus('current')
myModuleTempStateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 21, 1, 4, 1), ).setIndexNames((0, "MY-ENTITY-MIB", "myModuleTempStateDeviceIndex"), (0, "MY-ENTITY-MIB", "myModuleTempStateIndex"))
if mibBuilder.loadTexts: myModuleTempStateEntry.setStatus('current')
myModuleTempStateDeviceIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 21, 1, 4, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: myModuleTempStateDeviceIndex.setStatus('current')
myModuleTempStateIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 21, 1, 4, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: myModuleTempStateIndex.setStatus('current')
myModuleTempState = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 21, 1, 4, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("tempNormal", 1), ("tempWarning", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: myModuleTempState.setStatus('current')
myPowerStateTable = MibTable((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 21, 1, 5), )
if mibBuilder.loadTexts: myPowerStateTable.setStatus('current')
myPowerStateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 21, 1, 5, 1), ).setIndexNames((0, "MY-ENTITY-MIB", "myPowerStateDeviceIndex"), (0, "MY-ENTITY-MIB", "myPowerStateIndex"))
if mibBuilder.loadTexts: myPowerStateEntry.setStatus('current')
myPowerStateDeviceIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 21, 1, 5, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: myPowerStateDeviceIndex.setStatus('current')
myPowerStateIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 21, 1, 5, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: myPowerStateIndex.setStatus('current')
myPowerState = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 21, 1, 5, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("noLink", 1), ("linkAndNoPower", 2), ("linkAndReadyForPower", 3), ("linkAndPower", 4), ("linkAndPowerAbnormal", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: myPowerState.setStatus('current')
myPowerStatePowerDescr = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 21, 1, 5, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: myPowerStatePowerDescr.setStatus('current')
myFanStateTable = MibTable((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 21, 1, 6), )
if mibBuilder.loadTexts: myFanStateTable.setStatus('current')
myFanStateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 21, 1, 6, 1), ).setIndexNames((0, "MY-ENTITY-MIB", "myFanStateDeviceIndex"), (0, "MY-ENTITY-MIB", "myFanStateIndex"))
if mibBuilder.loadTexts: myFanStateEntry.setStatus('current')
myFanStateDeviceIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 21, 1, 6, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: myFanStateDeviceIndex.setStatus('current')
myFanStateIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 21, 1, 6, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: myFanStateIndex.setStatus('current')
myFanState = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 21, 1, 6, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("work", 1), ("stop", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: myFanState.setStatus('current')
myFanStateFanDescr = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 21, 1, 6, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: myFanStateFanDescr.setStatus('current')
myEntityMIBTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 21, 2))
myEntityStateChgDesc = MibScalar((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 21, 2, 1), DisplayString()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: myEntityStateChgDesc.setStatus('current')
myEntityStatusChange = NotificationType((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 21, 2, 2)).setObjects(("MY-ENTITY-MIB", "myEntityStateChgDesc"))
if mibBuilder.loadTexts: myEntityStatusChange.setStatus('current')
myTemperatureWarningDesc = MibScalar((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 21, 2, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: myTemperatureWarningDesc.setStatus('current')
myTemperatureWarning = NotificationType((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 21, 2, 4)).setObjects(("MY-ENTITY-MIB", "myTemperatureWarningDesc"))
if mibBuilder.loadTexts: myTemperatureWarning.setStatus('current')
myDeviceMIBConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 21, 3))
myDeviceMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 21, 3, 1))
myDeviceMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 21, 3, 2))
myDeviceMIBCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 21, 3, 1, 1)).setObjects(("MY-ENTITY-MIB", "myDeviceInfoMIBGroup"), ("MY-ENTITY-MIB", "myModuleInfoMIBGroup"), ("MY-ENTITY-MIB", "myOptionalDevInfoMIBGroup"), ("MY-ENTITY-MIB", "myEntityChgDescGroup"), ("MY-ENTITY-MIB", "myDeviceMIBNotificationGroup"), ("MY-ENTITY-MIB", "myModuleTempStateGroup"), ("MY-ENTITY-MIB", "myPowerStateGroup"), ("MY-ENTITY-MIB", "myFanStateGroup"), ("MY-ENTITY-MIB", "myTemperatureWarningDescGroup"), ("MY-ENTITY-MIB", "myTemperatureWarningGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    myDeviceMIBCompliance = myDeviceMIBCompliance.setStatus('current')
myDeviceInfoMIBGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 21, 3, 2, 1)).setObjects(("MY-ENTITY-MIB", "myDeviceMaxNumber"), ("MY-ENTITY-MIB", "myDeviceInfoIndex"), ("MY-ENTITY-MIB", "myDeviceInfoDescr"), ("MY-ENTITY-MIB", "myDeviceInfoSlotNumber"), ("MY-ENTITY-MIB", "myDevicePowerStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    myDeviceInfoMIBGroup = myDeviceInfoMIBGroup.setStatus('current')
myOptionalDevInfoMIBGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 21, 3, 2, 2)).setObjects(("MY-ENTITY-MIB", "myDeviceMacAddress"), ("MY-ENTITY-MIB", "myDevicePriority"), ("MY-ENTITY-MIB", "myDeviceAlias"), ("MY-ENTITY-MIB", "myDeviceSWVersion"), ("MY-ENTITY-MIB", "myDeviceHWVersion"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    myOptionalDevInfoMIBGroup = myOptionalDevInfoMIBGroup.setStatus('current')
myModuleInfoMIBGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 21, 3, 2, 3)).setObjects(("MY-ENTITY-MIB", "mySlotInfoDeviceIndex"), ("MY-ENTITY-MIB", "mySlotInfoIndex"), ("MY-ENTITY-MIB", "mySlotModuleInfoDescr"), ("MY-ENTITY-MIB", "mySlotInfoPortNumber"), ("MY-ENTITY-MIB", "mySlotInfoPortMaxNumber"), ("MY-ENTITY-MIB", "mySlotInfoDesc"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    myModuleInfoMIBGroup = myModuleInfoMIBGroup.setStatus('current')
myEntityChgDescGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 21, 3, 2, 4)).setObjects(("MY-ENTITY-MIB", "myEntityStateChgDesc"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    myEntityChgDescGroup = myEntityChgDescGroup.setStatus('current')
myDeviceMIBNotificationGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 21, 3, 2, 5)).setObjects(("MY-ENTITY-MIB", "myEntityStatusChange"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    myDeviceMIBNotificationGroup = myDeviceMIBNotificationGroup.setStatus('current')
myModuleTempStateGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 21, 3, 2, 6)).setObjects(("MY-ENTITY-MIB", "myModuleTempStateDeviceIndex"), ("MY-ENTITY-MIB", "myModuleTempStateIndex"), ("MY-ENTITY-MIB", "myModuleTempState"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    myModuleTempStateGroup = myModuleTempStateGroup.setStatus('current')
myPowerStateGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 21, 3, 2, 7)).setObjects(("MY-ENTITY-MIB", "myPowerStateDeviceIndex"), ("MY-ENTITY-MIB", "myPowerStateIndex"), ("MY-ENTITY-MIB", "myPowerState"), ("MY-ENTITY-MIB", "myPowerStatePowerDescr"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    myPowerStateGroup = myPowerStateGroup.setStatus('current')
myFanStateGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 21, 3, 2, 8)).setObjects(("MY-ENTITY-MIB", "myFanStateDeviceIndex"), ("MY-ENTITY-MIB", "myFanStateIndex"), ("MY-ENTITY-MIB", "myFanState"), ("MY-ENTITY-MIB", "myFanStateFanDescr"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    myFanStateGroup = myFanStateGroup.setStatus('current')
myTemperatureWarningDescGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 21, 3, 2, 9)).setObjects(("MY-ENTITY-MIB", "myTemperatureWarningDesc"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    myTemperatureWarningDescGroup = myTemperatureWarningDescGroup.setStatus('current')
myTemperatureWarningGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 21, 3, 2, 10)).setObjects(("MY-ENTITY-MIB", "myTemperatureWarning"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    myTemperatureWarningGroup = myTemperatureWarningGroup.setStatus('current')
mibBuilder.exportSymbols("MY-ENTITY-MIB", myDevicePowerStatus=myDevicePowerStatus, myDeviceInfoEntry=myDeviceInfoEntry, myEntityMIB=myEntityMIB, myDeviceInfoSlotNumber=myDeviceInfoSlotNumber, myEntityStateChgDesc=myEntityStateChgDesc, myTemperatureWarningDescGroup=myTemperatureWarningDescGroup, myPowerStateTable=myPowerStateTable, myDeviceMIBGroups=myDeviceMIBGroups, PYSNMP_MODULE_ID=myEntityMIB, myModuleTempStateGroup=myModuleTempStateGroup, myDeviceInfoDescr=myDeviceInfoDescr, myTemperatureWarning=myTemperatureWarning, mySlotInfoPortNumber=mySlotInfoPortNumber, myPowerStateIndex=myPowerStateIndex, myDeviceMacAddress=myDeviceMacAddress, myPowerStateGroup=myPowerStateGroup, myPowerStatePowerDescr=myPowerStatePowerDescr, myFanStateIndex=myFanStateIndex, myDeviceInfoIndex=myDeviceInfoIndex, myDeviceMaxNumber=myDeviceMaxNumber, myEntityStatusChange=myEntityStatusChange, myFanStateTable=myFanStateTable, mySlotInfoPortMaxNumber=mySlotInfoPortMaxNumber, myTemperatureWarningDesc=myTemperatureWarningDesc, myFanStateGroup=myFanStateGroup, myDeviceMIBCompliance=myDeviceMIBCompliance, mySlotModuleInfoDescr=mySlotModuleInfoDescr, myModuleInfoMIBGroup=myModuleInfoMIBGroup, myModuleTempStateTable=myModuleTempStateTable, myModuleTempState=myModuleTempState, myModuleTempStateIndex=myModuleTempStateIndex, mySlotInfoEntry=mySlotInfoEntry, myDeviceInfoTable=myDeviceInfoTable, myFanState=myFanState, myDevicePriority=myDevicePriority, myFanStateFanDescr=myFanStateFanDescr, myOptionalDevInfoMIBGroup=myOptionalDevInfoMIBGroup, myTemperatureWarningGroup=myTemperatureWarningGroup, myModuleTempStateEntry=myModuleTempStateEntry, myPowerState=myPowerState, mySlotInfoDesc=mySlotInfoDesc, myDeviceMIBConformance=myDeviceMIBConformance, myDeviceMIBObjects=myDeviceMIBObjects, mySlotInfoIndex=mySlotInfoIndex, myDeviceSWVersion=myDeviceSWVersion, myEntityMIBTraps=myEntityMIBTraps, myDeviceInfoMIBGroup=myDeviceInfoMIBGroup, mySlotInfoTable=mySlotInfoTable, myModuleTempStateDeviceIndex=myModuleTempStateDeviceIndex, myDeviceMIBCompliances=myDeviceMIBCompliances, mySlotInfoDeviceIndex=mySlotInfoDeviceIndex, myFanStateDeviceIndex=myFanStateDeviceIndex, myDeviceMIBNotificationGroup=myDeviceMIBNotificationGroup, myDeviceAlias=myDeviceAlias, myPowerStateDeviceIndex=myPowerStateDeviceIndex, myFanStateEntry=myFanStateEntry, myEntityChgDescGroup=myEntityChgDescGroup, myPowerStateEntry=myPowerStateEntry, myDeviceHWVersion=myDeviceHWVersion)
