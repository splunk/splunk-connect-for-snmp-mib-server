#
# PySNMP MIB module Unisphere-Data-ATM-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/Unisphere-Data-ATM-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 21:23:09 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ConstraintsIntersection, ConstraintsUnion, ValueRangeConstraint, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ConstraintsIntersection", "ConstraintsUnion", "ValueRangeConstraint", "ValueSizeConstraint")
atmfM4VcTestObject, atmfM4VcTestType, atmfM4VpTestObject, atmfM4VpTestType, atmfM4VpTestResult, atmfM4VcTestResult, atmfM4VpTestId, atmfM4VcTestId = mibBuilder.importSymbols("ATM-FORUM-SNMP-M4-MIB", "atmfM4VcTestObject", "atmfM4VcTestType", "atmfM4VpTestObject", "atmfM4VpTestType", "atmfM4VpTestResult", "atmfM4VcTestResult", "atmfM4VpTestId", "atmfM4VcTestId")
atmVplVpi, atmVclVci, atmVclVpi = mibBuilder.importSymbols("ATM-MIB", "atmVplVpi", "atmVclVci", "atmVclVpi")
AtmAddr, AtmVcIdentifier, AtmVorXAdminStatus, AtmVpIdentifier = mibBuilder.importSymbols("ATM-TC-MIB", "AtmAddr", "AtmVcIdentifier", "AtmVorXAdminStatus", "AtmVpIdentifier")
InterfaceIndex, ifIndex, InterfaceIndexOrZero = mibBuilder.importSymbols("IF-MIB", "InterfaceIndex", "ifIndex", "InterfaceIndexOrZero")
ModuleCompliance, NotificationGroup, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup", "ObjectGroup")
Integer32, Gauge32, ModuleIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, TimeTicks, NotificationType, Bits, MibIdentifier, ObjectIdentity, Counter32, Unsigned32, IpAddress, Counter64, iso = mibBuilder.importSymbols("SNMPv2-SMI", "Integer32", "Gauge32", "ModuleIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "TimeTicks", "NotificationType", "Bits", "MibIdentifier", "ObjectIdentity", "Counter32", "Unsigned32", "IpAddress", "Counter64", "iso")
TimeStamp, TruthValue, DisplayString, RowStatus, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "TimeStamp", "TruthValue", "DisplayString", "RowStatus", "TextualConvention")
usDataMibs, = mibBuilder.importSymbols("Unisphere-Data-MIBs", "usDataMibs")
UsdNextIfIndex, UsdEnable = mibBuilder.importSymbols("Unisphere-Data-TC", "UsdNextIfIndex", "UsdEnable")
usdAtmMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 4874, 2, 2, 8))
usdAtmMIB.setRevisions(('2002-08-09 13:40', '2002-01-24 14:00', '2001-12-14 18:04', '2001-11-26 16:39', '2000-11-27 19:51', '2000-08-02 00:00', '2000-05-12 00:00', '2000-01-13 00:00', '1999-08-04 00:00',))
if mibBuilder.loadTexts: usdAtmMIB.setLastUpdated('200208091340Z')
if mibBuilder.loadTexts: usdAtmMIB.setOrganization('Juniper Networks, Inc.')
class UsdAtmNbmaMapName(TextualConvention, OctetString):
    reference = 'RFC 854: NVT ASCII character set. See SNMPv2-TC.DisplayString DESCRIPTION for a summary.'
    status = 'current'
    displayHint = '32a'
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(1, 32)

class UsdAtmNbmaMapNameOrNull(TextualConvention, OctetString):
    reference = 'RFC 854: NVT ASCII character set. See SNMPv2-TC.DisplayString DESCRIPTION for a summary.'
    status = 'current'
    displayHint = '32a'
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(0, 32)

usdAtmObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 4874, 2, 2, 8, 1))
usdAtmIfLayer = MibIdentifier((1, 3, 6, 1, 4, 1, 4874, 2, 2, 8, 1, 1))
usdAtmAal5IfLayer = MibIdentifier((1, 3, 6, 1, 4, 1, 4874, 2, 2, 8, 1, 2))
usdAtmSubIfLayer = MibIdentifier((1, 3, 6, 1, 4, 1, 4874, 2, 2, 8, 1, 3))
usdAtmNbma = MibIdentifier((1, 3, 6, 1, 4, 1, 4874, 2, 2, 8, 1, 4))
usdAtmPing = MibIdentifier((1, 3, 6, 1, 4, 1, 4874, 2, 2, 8, 1, 5))
usdAtmNextIfIndex = MibScalar((1, 3, 6, 1, 4, 1, 4874, 2, 2, 8, 1, 1, 1), UsdNextIfIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: usdAtmNextIfIndex.setStatus('current')
usdAtmIfTable = MibTable((1, 3, 6, 1, 4, 1, 4874, 2, 2, 8, 1, 1, 2), )
if mibBuilder.loadTexts: usdAtmIfTable.setStatus('current')
usdAtmIfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4874, 2, 2, 8, 1, 1, 2, 1), ).setIndexNames((0, "Unisphere-Data-ATM-MIB", "usdAtmIfIndex"))
if mibBuilder.loadTexts: usdAtmIfEntry.setStatus('current')
usdAtmIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 8, 1, 1, 2, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: usdAtmIfIndex.setStatus('current')
usdAtmIfRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 8, 1, 1, 2, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: usdAtmIfRowStatus.setStatus('current')
usdAtmIfLowerIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 8, 1, 1, 2, 1, 3), InterfaceIndexOrZero()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: usdAtmIfLowerIfIndex.setStatus('current')
usdAtmIfIlmiVpi = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 8, 1, 1, 2, 1, 4), AtmVpIdentifier()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: usdAtmIfIlmiVpi.setStatus('current')
usdAtmIfIlmiVci = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 8, 1, 1, 2, 1, 5), AtmVcIdentifier().clone(16)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: usdAtmIfIlmiVci.setStatus('current')
usdAtmIfIlmiVcd = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 8, 1, 1, 2, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: usdAtmIfIlmiVcd.setStatus('current')
usdAtmIfIlmiPollFrequency = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 8, 1, 1, 2, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: usdAtmIfIlmiPollFrequency.setStatus('current')
usdAtmIfIlmiAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 8, 1, 1, 2, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: usdAtmIfIlmiAdminState.setStatus('current')
usdAtmIfUniVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 8, 1, 1, 2, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("version3Dot0", 0), ("version3Dot1", 1), ("version4Dot0", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: usdAtmIfUniVersion.setStatus('current')
usdAtmIfOamCellRxAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 8, 1, 1, 2, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("oamCellAdminStateDisabled", 0), ("oamCellAdminStateEnabled", 1))).clone('oamCellAdminStateEnabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: usdAtmIfOamCellRxAdminState.setStatus('current')
usdAtmIfInCells = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 8, 1, 1, 2, 1, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: usdAtmIfInCells.setStatus('current')
usdAtmIfOutCells = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 8, 1, 1, 2, 1, 12), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: usdAtmIfOutCells.setStatus('current')
usdAtmIfVcCount = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 8, 1, 1, 2, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 268431360))).setMaxAccess("readonly")
if mibBuilder.loadTexts: usdAtmIfVcCount.setStatus('current')
usdAtmIfMapGroup = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 8, 1, 1, 2, 1, 14), UsdAtmNbmaMapNameOrNull()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: usdAtmIfMapGroup.setStatus('current')
usdAtmIfCacAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 8, 1, 1, 2, 1, 15), UsdEnable().clone('disable')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: usdAtmIfCacAdminState.setStatus('current')
usdAtmIfCacUbrWeight = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 8, 1, 1, 2, 1, 16), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setUnits('kbps').setMaxAccess("readcreate")
if mibBuilder.loadTexts: usdAtmIfCacUbrWeight.setStatus('current')
usdAtmIfCacSubscriptionBandwidth = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 8, 1, 1, 2, 1, 17), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setUnits('kbps').setMaxAccess("readcreate")
if mibBuilder.loadTexts: usdAtmIfCacSubscriptionBandwidth.setStatus('current')
usdAtmIfCacAvailableBandwidth = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 8, 1, 1, 2, 1, 18), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setUnits('kbps').setMaxAccess("readonly")
if mibBuilder.loadTexts: usdAtmIfCacAvailableBandwidth.setStatus('current')
usdAtmIfOamCellFilter = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 8, 1, 1, 2, 1, 23), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("oamCellFilterAll", 0), ("oamCellFilterAlarm", 1))).clone('oamCellFilterAll')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: usdAtmIfOamCellFilter.setStatus('current')
usdAtmIfCacUsedBandwidthUpper = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 8, 1, 1, 2, 1, 24), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: usdAtmIfCacUsedBandwidthUpper.setStatus('current')
usdAtmIfCacUsedBandwidthLower = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 8, 1, 1, 2, 1, 25), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: usdAtmIfCacUsedBandwidthLower.setStatus('current')
usdAtmPvcStatisticsTable = MibTable((1, 3, 6, 1, 4, 1, 4874, 2, 2, 8, 1, 1, 3), )
if mibBuilder.loadTexts: usdAtmPvcStatisticsTable.setStatus('current')
usdAtmPvcStatisticsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4874, 2, 2, 8, 1, 1, 3, 1), ).setIndexNames((0, "Unisphere-Data-ATM-MIB", "usdAtmPvcStatsIfIndex"), (0, "Unisphere-Data-ATM-MIB", "usdAtmPvcStatsVpi"), (0, "Unisphere-Data-ATM-MIB", "usdAtmPvcStatsVci"))
if mibBuilder.loadTexts: usdAtmPvcStatisticsEntry.setStatus('current')
usdAtmPvcStatsIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 8, 1, 1, 3, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: usdAtmPvcStatsIfIndex.setStatus('current')
usdAtmPvcStatsVpi = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 8, 1, 1, 3, 1, 2), AtmVpIdentifier())
if mibBuilder.loadTexts: usdAtmPvcStatsVpi.setStatus('current')
usdAtmPvcStatsVci = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 8, 1, 1, 3, 1, 3), AtmVcIdentifier())
if mibBuilder.loadTexts: usdAtmPvcStatsVci.setStatus('current')
usdAtmPvcStatsInCells = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 8, 1, 1, 3, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: usdAtmPvcStatsInCells.setStatus('current')
usdAtmPvcStatsInCellOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 8, 1, 1, 3, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: usdAtmPvcStatsInCellOctets.setStatus('current')
usdAtmPvcStatsInPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 8, 1, 1, 3, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: usdAtmPvcStatsInPackets.setStatus('current')
usdAtmPvcStatsInPacketOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 8, 1, 1, 3, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: usdAtmPvcStatsInPacketOctets.setStatus('current')
usdAtmPvcStatsOutCells = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 8, 1, 1, 3, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: usdAtmPvcStatsOutCells.setStatus('current')
usdAtmPvcStatsOutCellOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 8, 1, 1, 3, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: usdAtmPvcStatsOutCellOctets.setStatus('current')
usdAtmPvcStatsOutPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 8, 1, 1, 3, 1, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: usdAtmPvcStatsOutPackets.setStatus('current')
usdAtmPvcStatsOutPacketOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 8, 1, 1, 3, 1, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: usdAtmPvcStatsOutPacketOctets.setStatus('current')
usdAtmPvcStatsInCellErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 8, 1, 1, 3, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: usdAtmPvcStatsInCellErrors.setStatus('current')
usdAtmPvcStatsinPacketErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 8, 1, 1, 3, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: usdAtmPvcStatsinPacketErrors.setStatus('current')
usdAtmPvcStatsOutCellErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 8, 1, 1, 3, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: usdAtmPvcStatsOutCellErrors.setStatus('current')
usdAtmPvcStatsOutPacketErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 8, 1, 1, 3, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: usdAtmPvcStatsOutPacketErrors.setStatus('current')
usdAtmPvcStatsInPacketDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 8, 1, 1, 3, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: usdAtmPvcStatsInPacketDiscards.setStatus('current')
usdAtmPvcStatsInPacketOctetDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 8, 1, 1, 3, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: usdAtmPvcStatsInPacketOctetDiscards.setStatus('current')
usdAtmPvcStatsInPacketUnknownProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 8, 1, 1, 3, 1, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: usdAtmPvcStatsInPacketUnknownProtocol.setStatus('current')
usdAtmVpTunnelTable = MibTable((1, 3, 6, 1, 4, 1, 4874, 2, 2, 8, 1, 1, 4), )
if mibBuilder.loadTexts: usdAtmVpTunnelTable.setStatus('current')
usdAtmVpTunnelEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4874, 2, 2, 8, 1, 1, 4, 1), ).setIndexNames((0, "Unisphere-Data-ATM-MIB", "usdAtmVpTunnelIfIndex"), (0, "Unisphere-Data-ATM-MIB", "usdAtmVpTunnelVpi"))
if mibBuilder.loadTexts: usdAtmVpTunnelEntry.setStatus('current')
usdAtmVpTunnelIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 8, 1, 1, 4, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: usdAtmVpTunnelIfIndex.setStatus('current')
usdAtmVpTunnelVpi = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 8, 1, 1, 4, 1, 2), AtmVpIdentifier())
if mibBuilder.loadTexts: usdAtmVpTunnelVpi.setStatus('current')
usdAtmVpTunnelKbps = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 8, 1, 1, 4, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setUnits('kbps').setMaxAccess("readcreate")
if mibBuilder.loadTexts: usdAtmVpTunnelKbps.setStatus('current')
usdAtmVpTunnelRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 8, 1, 1, 4, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: usdAtmVpTunnelRowStatus.setStatus('current')
usdAtmVpTunnelServiceCategory = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 8, 1, 1, 4, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("nrtVbr", 1), ("cbr", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: usdAtmVpTunnelServiceCategory.setStatus('current')
usdAtmIfCapabilityTable = MibTable((1, 3, 6, 1, 4, 1, 4874, 2, 2, 8, 1, 1, 5), )
if mibBuilder.loadTexts: usdAtmIfCapabilityTable.setStatus('current')
usdAtmIfCapabilityEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4874, 2, 2, 8, 1, 1, 5, 1), ).setIndexNames((0, "Unisphere-Data-ATM-MIB", "usdAtmIfCapabilityIndex"))
if mibBuilder.loadTexts: usdAtmIfCapabilityEntry.setStatus('current')
usdAtmIfCapabilityIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 8, 1, 1, 5, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: usdAtmIfCapabilityIndex.setStatus('current')
usdAtmIfCapabilityTrafficShaping = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 8, 1, 1, 5, 1, 2), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: usdAtmIfCapabilityTrafficShaping.setStatus('current')
usdAtmIfCapabilityOam = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 8, 1, 1, 5, 1, 3), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: usdAtmIfCapabilityOam.setStatus('current')
usdAtmIfCapabilityDefaultVcPerVp = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 8, 1, 1, 5, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: usdAtmIfCapabilityDefaultVcPerVp.setStatus('current')
usdAtmIfCapabilityNumVpiVciBits = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 8, 1, 1, 5, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(8, 28))).setMaxAccess("readonly")
if mibBuilder.loadTexts: usdAtmIfCapabilityNumVpiVciBits.setStatus('current')
usdAtmIfCapabilityMaxVcd = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 8, 1, 1, 5, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: usdAtmIfCapabilityMaxVcd.setStatus('current')
usdAtmIfCapabilityMaxVpi = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 8, 1, 1, 5, 1, 7), AtmVpIdentifier()).setMaxAccess("readonly")
if mibBuilder.loadTexts: usdAtmIfCapabilityMaxVpi.setStatus('current')
usdAtmIfCapabilityMaxVci = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 8, 1, 1, 5, 1, 8), AtmVcIdentifier()).setMaxAccess("readonly")
if mibBuilder.loadTexts: usdAtmIfCapabilityMaxVci.setStatus('current')
usdAtmIfCapabilityOamCellFilter = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 8, 1, 1, 5, 1, 9), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: usdAtmIfCapabilityOamCellFilter.setStatus('current')
usdAtmIfSvcSignallingTable = MibTable((1, 3, 6, 1, 4, 1, 4874, 2, 2, 8, 1, 1, 6), )
if mibBuilder.loadTexts: usdAtmIfSvcSignallingTable.setStatus('current')
usdAtmIfSvcSignallingEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4874, 2, 2, 8, 1, 1, 6, 1), ).setIndexNames((0, "Unisphere-Data-ATM-MIB", "usdAtmIfIndex"))
if mibBuilder.loadTexts: usdAtmIfSvcSignallingEntry.setStatus('current')
usdAtmIfSvcSignallingVpi = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 8, 1, 1, 6, 1, 1), AtmVpIdentifier()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: usdAtmIfSvcSignallingVpi.setStatus('current')
usdAtmIfSvcSignallingVci = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 8, 1, 1, 6, 1, 2), AtmVcIdentifier()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: usdAtmIfSvcSignallingVci.setStatus('current')
usdAtmIfSvcSignallingVcd = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 8, 1, 1, 6, 1, 3), AtmVcIdentifier()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: usdAtmIfSvcSignallingVcd.setStatus('current')
usdAtmIfSvcSignallingAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 8, 1, 1, 6, 1, 4), AtmVorXAdminStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: usdAtmIfSvcSignallingAdminStatus.setStatus('current')
usdAtmAal5NextIfIndex = MibScalar((1, 3, 6, 1, 4, 1, 4874, 2, 2, 8, 1, 2, 1), UsdNextIfIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: usdAtmAal5NextIfIndex.setStatus('current')
usdAtmAal5IfTable = MibTable((1, 3, 6, 1, 4, 1, 4874, 2, 2, 8, 1, 2, 2), )
if mibBuilder.loadTexts: usdAtmAal5IfTable.setStatus('current')
usdAtmAal5IfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4874, 2, 2, 8, 1, 2, 2, 1), ).setIndexNames((0, "Unisphere-Data-ATM-MIB", "usdAtmAal5IfIndex"))
if mibBuilder.loadTexts: usdAtmAal5IfEntry.setStatus('current')
usdAtmAal5IfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 8, 1, 2, 2, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: usdAtmAal5IfIndex.setStatus('current')
usdAtmAal5IfRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 8, 1, 2, 2, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: usdAtmAal5IfRowStatus.setStatus('current')
usdAtmAal5IfLowerIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 8, 1, 2, 2, 1, 3), InterfaceIndexOrZero()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: usdAtmAal5IfLowerIfIndex.setStatus('current')
usdAtmSubIfNextIfIndex = MibScalar((1, 3, 6, 1, 4, 1, 4874, 2, 2, 8, 1, 3, 1), UsdNextIfIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: usdAtmSubIfNextIfIndex.setStatus('current')
usdAtmSubIfTable = MibTable((1, 3, 6, 1, 4, 1, 4874, 2, 2, 8, 1, 3, 2), )
if mibBuilder.loadTexts: usdAtmSubIfTable.setStatus('current')
usdAtmSubIfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4874, 2, 2, 8, 1, 3, 2, 1), ).setIndexNames((0, "Unisphere-Data-ATM-MIB", "usdAtmSubIfIndex"))
if mibBuilder.loadTexts: usdAtmSubIfEntry.setStatus('current')
usdAtmSubIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 8, 1, 3, 2, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: usdAtmSubIfIndex.setStatus('current')
usdAtmSubIfRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 8, 1, 3, 2, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: usdAtmSubIfRowStatus.setStatus('current')
usdAtmSubIfDistinguisher = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 8, 1, 3, 2, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: usdAtmSubIfDistinguisher.setStatus('current')
usdAtmSubIfLowerIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 8, 1, 3, 2, 1, 4), InterfaceIndexOrZero()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: usdAtmSubIfLowerIfIndex.setStatus('current')
usdAtmSubIfNbma = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 8, 1, 3, 2, 1, 5), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: usdAtmSubIfNbma.setStatus('current')
usdAtmSubIfAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 8, 1, 3, 2, 1, 6), AtmAddr().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(7, 7), ValueSizeConstraint(20, 20), )).clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: usdAtmSubIfAddress.setStatus('current')
usdAtmSubIfVccTable = MibTable((1, 3, 6, 1, 4, 1, 4874, 2, 2, 8, 1, 3, 3), )
if mibBuilder.loadTexts: usdAtmSubIfVccTable.setStatus('current')
usdAtmSubIfVccEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4874, 2, 2, 8, 1, 3, 3, 1), ).setIndexNames((0, "Unisphere-Data-ATM-MIB", "usdAtmSubIfIndex"), (0, "Unisphere-Data-ATM-MIB", "usdAtmSubIfVccVpi"), (0, "Unisphere-Data-ATM-MIB", "usdAtmSubIfVccVci"))
if mibBuilder.loadTexts: usdAtmSubIfVccEntry.setStatus('current')
usdAtmSubIfVccVpi = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 8, 1, 3, 3, 1, 1), AtmVpIdentifier())
if mibBuilder.loadTexts: usdAtmSubIfVccVpi.setStatus('current')
usdAtmSubIfVccVci = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 8, 1, 3, 3, 1, 2), AtmVcIdentifier())
if mibBuilder.loadTexts: usdAtmSubIfVccVci.setStatus('current')
usdAtmSubIfVccRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 8, 1, 3, 3, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: usdAtmSubIfVccRowStatus.setStatus('current')
usdAtmSubIfVccVcd = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 8, 1, 3, 3, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: usdAtmSubIfVccVcd.setStatus('current')
usdAtmSubIfVccType = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 8, 1, 3, 3, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("rfc1483VcMux", 0), ("rfc1483Llc", 1), ("autoconfig", 2))).clone('rfc1483VcMux')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: usdAtmSubIfVccType.setStatus('current')
usdAtmSubIfVccServiceCategory = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 8, 1, 3, 3, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("ubr", 0), ("ubrPcr", 1), ("nrtVbr", 2), ("cbr", 3), ("rtVbr", 4))).clone('ubr')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: usdAtmSubIfVccServiceCategory.setStatus('current')
usdAtmSubIfVccPcr = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 8, 1, 3, 3, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setUnits('kbps').setMaxAccess("readcreate")
if mibBuilder.loadTexts: usdAtmSubIfVccPcr.setStatus('current')
usdAtmSubIfVccScr = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 8, 1, 3, 3, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setUnits('kbps').setMaxAccess("readcreate")
if mibBuilder.loadTexts: usdAtmSubIfVccScr.setStatus('current')
usdAtmSubIfVccMbs = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 8, 1, 3, 3, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setUnits('cells').setMaxAccess("readcreate")
if mibBuilder.loadTexts: usdAtmSubIfVccMbs.setStatus('current')
usdAtmSubIfInverseArp = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 8, 1, 3, 3, 1, 10), TruthValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: usdAtmSubIfInverseArp.setStatus('current')
usdAtmSubIfInverseArpRefresh = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 8, 1, 3, 3, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setUnits('minutes').setMaxAccess("readcreate")
if mibBuilder.loadTexts: usdAtmSubIfInverseArpRefresh.setStatus('current')
usdAtmCircuitOamTable = MibTable((1, 3, 6, 1, 4, 1, 4874, 2, 2, 8, 1, 3, 4), )
if mibBuilder.loadTexts: usdAtmCircuitOamTable.setStatus('current')
usdAtmCircuitOamEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4874, 2, 2, 8, 1, 3, 4, 1), ).setIndexNames((0, "Unisphere-Data-ATM-MIB", "usdAtmCircuitOamIfIndex"), (0, "Unisphere-Data-ATM-MIB", "usdAtmCircuitOamVpi"), (0, "Unisphere-Data-ATM-MIB", "usdAtmCircuitOamVci"))
if mibBuilder.loadTexts: usdAtmCircuitOamEntry.setStatus('current')
usdAtmCircuitOamIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 8, 1, 3, 4, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: usdAtmCircuitOamIfIndex.setStatus('current')
usdAtmCircuitOamVpi = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 8, 1, 3, 4, 1, 2), AtmVpIdentifier())
if mibBuilder.loadTexts: usdAtmCircuitOamVpi.setStatus('current')
usdAtmCircuitOamVci = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 8, 1, 3, 4, 1, 3), AtmVcIdentifier())
if mibBuilder.loadTexts: usdAtmCircuitOamVci.setStatus('current')
usdAtmCircuitOamAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 8, 1, 3, 4, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("oamAdminStateDisabled", 1), ("oamAdminStateEnabled", 2))).clone('oamAdminStateDisabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: usdAtmCircuitOamAdminStatus.setStatus('current')
usdAtmCircuitOamLoopbackOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 8, 1, 3, 4, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("oamOperStatusNotSupported", 0), ("oamOperStatusDisabled", 1), ("oamOperStatusSent", 2), ("oamOperStatusReceived", 3), ("oamOperStatusFailed", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: usdAtmCircuitOamLoopbackOperStatus.setStatus('current')
usdAtmCircuitVcOamOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 8, 1, 3, 4, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("oamVcOperStateAisState", 0), ("oamVcOperStateRdiState", 1), ("oamVcOperStateDownRetry", 2), ("oamVcOperStateUpRetry", 3), ("oamVcOperStateUp", 4), ("oamVcOperStateDown", 5), ("oamVcOperStateNotManaged", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: usdAtmCircuitVcOamOperStatus.setStatus('current')
usdAtmCircuitOamLoopbackFrequency = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 8, 1, 3, 4, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 600)).clone(10)).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: usdAtmCircuitOamLoopbackFrequency.setStatus('current')
usdAtmCircuitInOamF5Cells = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 8, 1, 3, 4, 1, 8), Counter32()).setUnits('cells').setMaxAccess("readonly")
if mibBuilder.loadTexts: usdAtmCircuitInOamF5Cells.setStatus('current')
usdAtmCircuitInOamCellsDropped = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 8, 1, 3, 4, 1, 9), Counter32()).setUnits('cells').setMaxAccess("readonly")
if mibBuilder.loadTexts: usdAtmCircuitInOamCellsDropped.setStatus('current')
usdAtmCircuitOutOamF5Cells = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 8, 1, 3, 4, 1, 10), Counter32()).setUnits('cells').setMaxAccess("readonly")
if mibBuilder.loadTexts: usdAtmCircuitOutOamF5Cells.setStatus('current')
usdAtmCircuitInOamF5EndToEndLoopbackCells = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 8, 1, 3, 4, 1, 11), Counter32()).setUnits('cells').setMaxAccess("readonly")
if mibBuilder.loadTexts: usdAtmCircuitInOamF5EndToEndLoopbackCells.setStatus('current')
usdAtmCircuitInOamF5SegmentLoopbackCells = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 8, 1, 3, 4, 1, 12), Counter32()).setUnits('cells').setMaxAccess("readonly")
if mibBuilder.loadTexts: usdAtmCircuitInOamF5SegmentLoopbackCells.setStatus('current')
usdAtmCircuitInOamF5AisCells = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 8, 1, 3, 4, 1, 13), Counter32()).setUnits('cells').setMaxAccess("readonly")
if mibBuilder.loadTexts: usdAtmCircuitInOamF5AisCells.setStatus('current')
usdAtmCircuitInOamF5RdiCells = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 8, 1, 3, 4, 1, 14), Counter32()).setUnits('cells').setMaxAccess("readonly")
if mibBuilder.loadTexts: usdAtmCircuitInOamF5RdiCells.setStatus('current')
usdAtmCircuitOutOamF5EndToEndLoopbackCells = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 8, 1, 3, 4, 1, 15), Counter32()).setUnits('cells').setMaxAccess("readonly")
if mibBuilder.loadTexts: usdAtmCircuitOutOamF5EndToEndLoopbackCells.setStatus('current')
usdAtmCircuitOutOamF5SegmentLoopbackCells = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 8, 1, 3, 4, 1, 16), Counter32()).setUnits('cells').setMaxAccess("readonly")
if mibBuilder.loadTexts: usdAtmCircuitOutOamF5SegmentLoopbackCells.setStatus('current')
usdAtmCircuitOutOamF5RdiCells = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 8, 1, 3, 4, 1, 17), Counter32()).setUnits('cells').setMaxAccess("readonly")
if mibBuilder.loadTexts: usdAtmCircuitOutOamF5RdiCells.setStatus('current')
usdAtmSubIfVccTrafficShapingTable = MibTable((1, 3, 6, 1, 4, 1, 4874, 2, 2, 8, 1, 3, 5), )
if mibBuilder.loadTexts: usdAtmSubIfVccTrafficShapingTable.setStatus('current')
usdAtmSubIfVccTrafficShapingEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4874, 2, 2, 8, 1, 3, 5, 1), )
usdAtmSubIfVccEntry.registerAugmentions(("Unisphere-Data-ATM-MIB", "usdAtmSubIfVccTrafficShapingEntry"))
usdAtmSubIfVccTrafficShapingEntry.setIndexNames(*usdAtmSubIfVccEntry.getIndexNames())
if mibBuilder.loadTexts: usdAtmSubIfVccTrafficShapingEntry.setStatus('current')
usdAtmSubIfVccTrafficShapingCdvt = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 8, 1, 3, 5, 1, 1), Unsigned32()).setUnits('tenths of a microsecond').setMaxAccess("readcreate")
if mibBuilder.loadTexts: usdAtmSubIfVccTrafficShapingCdvt.setStatus('current')
usdAtmSubIfVccTrafficShapingClp0 = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 8, 1, 3, 5, 1, 2), TruthValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: usdAtmSubIfVccTrafficShapingClp0.setStatus('current')
usdAtmSubIfVccTrafficShapingTagging = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 8, 1, 3, 5, 1, 3), TruthValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: usdAtmSubIfVccTrafficShapingTagging.setStatus('current')
usdAtmSubIfVccTrafficShapingPoliceObserve = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 8, 1, 3, 5, 1, 4), TruthValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: usdAtmSubIfVccTrafficShapingPoliceObserve.setStatus('current')
usdAtmSubIfVccTrafficShapingPacketShaping = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 8, 1, 3, 5, 1, 5), TruthValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: usdAtmSubIfVccTrafficShapingPacketShaping.setStatus('current')
usdAtmSubIfSvcConfigTable = MibTable((1, 3, 6, 1, 4, 1, 4874, 2, 2, 8, 1, 3, 6), )
if mibBuilder.loadTexts: usdAtmSubIfSvcConfigTable.setStatus('current')
usdAtmSubIfSvcConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4874, 2, 2, 8, 1, 3, 6, 1), ).setIndexNames((0, "Unisphere-Data-ATM-MIB", "usdAtmSubIfIndex"))
if mibBuilder.loadTexts: usdAtmSubIfSvcConfigEntry.setStatus('current')
usdAtmSubIfSvcRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 8, 1, 3, 6, 1, 1), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: usdAtmSubIfSvcRowStatus.setStatus('current')
usdAtmSubIfSvcConfigDestAtmAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 8, 1, 3, 6, 1, 2), AtmAddr().subtype(subtypeSpec=ValueSizeConstraint(20, 20)).setFixedLength(20)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: usdAtmSubIfSvcConfigDestAtmAddress.setStatus('current')
usdAtmSubIfSvcConfigCircuitType = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 8, 1, 3, 6, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("rfc1483VcMux", 0), ("rfc1483Llc", 1))).clone('rfc1483VcMux')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: usdAtmSubIfSvcConfigCircuitType.setStatus('current')
usdAtmSubIfSvcConfigServiceCategory = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 8, 1, 3, 6, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("ubr", 0), ("ubrPcr", 1), ("nrtVbr", 2), ("cbr", 3), ("rtVbr", 4))).clone('ubr')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: usdAtmSubIfSvcConfigServiceCategory.setStatus('current')
usdAtmSubIfSvcConfigPcr = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 8, 1, 3, 6, 1, 5), Unsigned32()).setUnits('kbps').setMaxAccess("readcreate")
if mibBuilder.loadTexts: usdAtmSubIfSvcConfigPcr.setStatus('current')
usdAtmSubIfSvcConfigScr = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 8, 1, 3, 6, 1, 6), Unsigned32()).setUnits('kbps').setMaxAccess("readcreate")
if mibBuilder.loadTexts: usdAtmSubIfSvcConfigScr.setStatus('current')
usdAtmSubIfSvcConfigMbs = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 8, 1, 3, 6, 1, 7), Unsigned32()).setUnits('cells').setMaxAccess("readcreate")
if mibBuilder.loadTexts: usdAtmSubIfSvcConfigMbs.setStatus('current')
usdAtmSubIfSvcConfigCdvt = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 8, 1, 3, 6, 1, 8), Unsigned32()).setUnits('100us').setMaxAccess("readcreate")
if mibBuilder.loadTexts: usdAtmSubIfSvcConfigCdvt.setStatus('current')
usdAtmSubIfSvcConfigClp0 = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 8, 1, 3, 6, 1, 9), TruthValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: usdAtmSubIfSvcConfigClp0.setStatus('current')
usdAtmSubIfSvcConfigTagging = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 8, 1, 3, 6, 1, 10), TruthValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: usdAtmSubIfSvcConfigTagging.setStatus('current')
usdAtmSubIfSvcConfigObserve = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 8, 1, 3, 6, 1, 11), TruthValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: usdAtmSubIfSvcConfigObserve.setStatus('current')
usdAtmSubIfSvcConfigPacketDiscard = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 8, 1, 3, 6, 1, 12), TruthValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: usdAtmSubIfSvcConfigPacketDiscard.setStatus('current')
usdAtmNbmaMapTable = MibTable((1, 3, 6, 1, 4, 1, 4874, 2, 2, 8, 1, 4, 1), )
if mibBuilder.loadTexts: usdAtmNbmaMapTable.setStatus('current')
usdAtmNbmaMapEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4874, 2, 2, 8, 1, 4, 1, 1), ).setIndexNames((0, "Unisphere-Data-ATM-MIB", "usdAtmNbmaMapName"), (0, "Unisphere-Data-ATM-MIB", "usdAtmNbmaMapVcd"))
if mibBuilder.loadTexts: usdAtmNbmaMapEntry.setStatus('current')
usdAtmNbmaMapName = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 8, 1, 4, 1, 1, 1), UsdAtmNbmaMapName())
if mibBuilder.loadTexts: usdAtmNbmaMapName.setStatus('current')
usdAtmNbmaMapVcd = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 8, 1, 4, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647)))
if mibBuilder.loadTexts: usdAtmNbmaMapVcd.setStatus('current')
usdAtmNbmaMapIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 8, 1, 4, 1, 1, 3), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: usdAtmNbmaMapIpAddress.setStatus('current')
usdAtmNbmaMapVpi = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 8, 1, 4, 1, 1, 4), AtmVpIdentifier()).setMaxAccess("readonly")
if mibBuilder.loadTexts: usdAtmNbmaMapVpi.setStatus('current')
usdAtmNbmaMapVci = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 8, 1, 4, 1, 1, 5), AtmVcIdentifier()).setMaxAccess("readonly")
if mibBuilder.loadTexts: usdAtmNbmaMapVci.setStatus('current')
usdAtmNbmaMapIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 8, 1, 4, 1, 1, 6), InterfaceIndexOrZero()).setMaxAccess("readonly")
if mibBuilder.loadTexts: usdAtmNbmaMapIfIndex.setStatus('current')
usdAtmNbmaMapBroadcast = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 8, 1, 4, 1, 1, 7), TruthValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: usdAtmNbmaMapBroadcast.setStatus('current')
usdAtmNbmaMapRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 8, 1, 4, 1, 1, 8), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: usdAtmNbmaMapRowStatus.setStatus('current')
usdAtmNbmaMapListTable = MibTable((1, 3, 6, 1, 4, 1, 4874, 2, 2, 8, 1, 4, 2), )
if mibBuilder.loadTexts: usdAtmNbmaMapListTable.setStatus('current')
usdAtmNbmaMapListEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4874, 2, 2, 8, 1, 4, 2, 1), ).setIndexNames((1, "Unisphere-Data-ATM-MIB", "usdAtmNbmaMapListName"))
if mibBuilder.loadTexts: usdAtmNbmaMapListEntry.setStatus('current')
usdAtmNbmaMapListName = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 8, 1, 4, 2, 1, 1), UsdAtmNbmaMapName())
if mibBuilder.loadTexts: usdAtmNbmaMapListName.setStatus('current')
usdAtmNbmaMapListRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 8, 1, 4, 2, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: usdAtmNbmaMapListRowStatus.setStatus('current')
usdAtmPingTestTypes = MibIdentifier((1, 3, 6, 1, 4, 1, 4874, 2, 2, 8, 1, 5, 1))
usdAtmPingTestOamSeg = ObjectIdentity((1, 3, 6, 1, 4, 1, 4874, 2, 2, 8, 1, 5, 1, 1))
if mibBuilder.loadTexts: usdAtmPingTestOamSeg.setStatus('current')
usdAtmPingTestOamE2E = ObjectIdentity((1, 3, 6, 1, 4, 1, 4874, 2, 2, 8, 1, 5, 1, 2))
if mibBuilder.loadTexts: usdAtmPingTestOamE2E.setStatus('current')
usdAtmVpPingTable = MibTable((1, 3, 6, 1, 4, 1, 4874, 2, 2, 8, 1, 5, 2), )
if mibBuilder.loadTexts: usdAtmVpPingTable.setStatus('current')
usdAtmVpPingEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4874, 2, 2, 8, 1, 5, 2, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "ATM-MIB", "atmVplVpi"), (0, "ATM-FORUM-SNMP-M4-MIB", "atmfM4VpTestObject"))
if mibBuilder.loadTexts: usdAtmVpPingEntry.setStatus('current')
usdAtmVpPingProbeCount = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 8, 1, 5, 2, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 30)).clone(5)).setUnits('probes').setMaxAccess("readwrite")
if mibBuilder.loadTexts: usdAtmVpPingProbeCount.setStatus('current')
usdAtmVpPingTimeOut = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 8, 1, 5, 2, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 5)).clone(5)).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: usdAtmVpPingTimeOut.setStatus('current')
usdAtmVpPingCtlTrapGeneration = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 8, 1, 5, 2, 1, 3), Bits().clone(namedValues=NamedValues(("testCompletion", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: usdAtmVpPingCtlTrapGeneration.setStatus('current')
usdAtmVpPingSentProbes = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 8, 1, 5, 2, 1, 4), Unsigned32()).setUnits('probes').setMaxAccess("readonly")
if mibBuilder.loadTexts: usdAtmVpPingSentProbes.setStatus('current')
usdAtmVpPingProbeResponses = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 8, 1, 5, 2, 1, 5), Unsigned32()).setUnits('probes').setMaxAccess("readonly")
if mibBuilder.loadTexts: usdAtmVpPingProbeResponses.setStatus('current')
usdAtmVpPingStartTime = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 8, 1, 5, 2, 1, 6), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: usdAtmVpPingStartTime.setStatus('current')
usdAtmVpPingMinRtt = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 8, 1, 5, 2, 1, 7), Unsigned32()).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: usdAtmVpPingMinRtt.setStatus('current')
usdAtmVpPingMaxRtt = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 8, 1, 5, 2, 1, 8), Unsigned32()).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: usdAtmVpPingMaxRtt.setStatus('current')
usdAtmVpPingAverageRtt = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 8, 1, 5, 2, 1, 9), Unsigned32()).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: usdAtmVpPingAverageRtt.setStatus('current')
usdAtmVcPingTable = MibTable((1, 3, 6, 1, 4, 1, 4874, 2, 2, 8, 1, 5, 3), )
if mibBuilder.loadTexts: usdAtmVcPingTable.setStatus('current')
usdAtmVcPingEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4874, 2, 2, 8, 1, 5, 3, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "ATM-MIB", "atmVclVpi"), (0, "ATM-MIB", "atmVclVci"), (0, "ATM-FORUM-SNMP-M4-MIB", "atmfM4VcTestObject"))
if mibBuilder.loadTexts: usdAtmVcPingEntry.setStatus('current')
usdAtmVcPingProbeCount = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 8, 1, 5, 3, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 30)).clone(5)).setUnits('probes').setMaxAccess("readwrite")
if mibBuilder.loadTexts: usdAtmVcPingProbeCount.setStatus('current')
usdAtmVcPingTimeOut = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 8, 1, 5, 3, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 5)).clone(5)).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: usdAtmVcPingTimeOut.setStatus('current')
usdAtmVcPingCtlTrapGeneration = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 8, 1, 5, 3, 1, 3), Bits().clone(namedValues=NamedValues(("testCompletion", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: usdAtmVcPingCtlTrapGeneration.setStatus('current')
usdAtmVcPingSentProbes = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 8, 1, 5, 3, 1, 4), Unsigned32()).setUnits('probes').setMaxAccess("readonly")
if mibBuilder.loadTexts: usdAtmVcPingSentProbes.setStatus('current')
usdAtmVcPingProbeResponses = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 8, 1, 5, 3, 1, 5), Unsigned32()).setUnits('probes').setMaxAccess("readonly")
if mibBuilder.loadTexts: usdAtmVcPingProbeResponses.setStatus('current')
usdAtmVcPingStartTime = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 8, 1, 5, 3, 1, 6), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: usdAtmVcPingStartTime.setStatus('current')
usdAtmVcPingMinRtt = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 8, 1, 5, 3, 1, 7), Unsigned32()).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: usdAtmVcPingMinRtt.setStatus('current')
usdAtmVcPingMaxRtt = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 8, 1, 5, 3, 1, 8), Unsigned32()).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: usdAtmVcPingMaxRtt.setStatus('current')
usdAtmVcPingAverageRtt = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 8, 1, 5, 3, 1, 9), Unsigned32()).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: usdAtmVcPingAverageRtt.setStatus('current')
usdAtmTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 4874, 2, 2, 8, 3))
usdAtmTrapPrefix = MibIdentifier((1, 3, 6, 1, 4, 1, 4874, 2, 2, 8, 3, 0))
usdAtmVpPingTestCompleted = NotificationType((1, 3, 6, 1, 4, 1, 4874, 2, 2, 8, 3, 0, 1)).setObjects(("ATM-FORUM-SNMP-M4-MIB", "atmfM4VpTestId"), ("ATM-FORUM-SNMP-M4-MIB", "atmfM4VpTestType"), ("ATM-FORUM-SNMP-M4-MIB", "atmfM4VpTestResult"), ("Unisphere-Data-ATM-MIB", "usdAtmVpPingProbeCount"), ("Unisphere-Data-ATM-MIB", "usdAtmVpPingSentProbes"), ("Unisphere-Data-ATM-MIB", "usdAtmVpPingProbeResponses"), ("Unisphere-Data-ATM-MIB", "usdAtmVpPingMinRtt"), ("Unisphere-Data-ATM-MIB", "usdAtmVpPingMaxRtt"), ("Unisphere-Data-ATM-MIB", "usdAtmVpPingAverageRtt"))
if mibBuilder.loadTexts: usdAtmVpPingTestCompleted.setStatus('current')
usdAtmVcPingTestCompleted = NotificationType((1, 3, 6, 1, 4, 1, 4874, 2, 2, 8, 3, 0, 2)).setObjects(("ATM-FORUM-SNMP-M4-MIB", "atmfM4VcTestId"), ("ATM-FORUM-SNMP-M4-MIB", "atmfM4VcTestType"), ("ATM-FORUM-SNMP-M4-MIB", "atmfM4VcTestResult"), ("Unisphere-Data-ATM-MIB", "usdAtmVcPingProbeCount"), ("Unisphere-Data-ATM-MIB", "usdAtmVcPingSentProbes"), ("Unisphere-Data-ATM-MIB", "usdAtmVcPingProbeResponses"), ("Unisphere-Data-ATM-MIB", "usdAtmVcPingMinRtt"), ("Unisphere-Data-ATM-MIB", "usdAtmVcPingMaxRtt"), ("Unisphere-Data-ATM-MIB", "usdAtmVcPingAverageRtt"))
if mibBuilder.loadTexts: usdAtmVcPingTestCompleted.setStatus('current')
usdAtmConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 4874, 2, 2, 8, 4))
usdAtmCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 4874, 2, 2, 8, 4, 1))
usdAtmGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 4874, 2, 2, 8, 4, 2))
usdAtmCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 4874, 2, 2, 8, 4, 1, 1)).setObjects(("Unisphere-Data-ATM-MIB", "usdAtmGroup"), ("Unisphere-Data-ATM-MIB", "usdAtmAal5Group"), ("Unisphere-Data-ATM-MIB", "usdAtmSubIfGroup"), ("Unisphere-Data-ATM-MIB", "usdAtmVpTunnelGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    usdAtmCompliance = usdAtmCompliance.setStatus('obsolete')
usdAtmCompliance2 = ModuleCompliance((1, 3, 6, 1, 4, 1, 4874, 2, 2, 8, 4, 1, 2)).setObjects(("Unisphere-Data-ATM-MIB", "usdAtmGroup2"), ("Unisphere-Data-ATM-MIB", "usdAtmAal5Group"), ("Unisphere-Data-ATM-MIB", "usdAtmSubIfGroup2"), ("Unisphere-Data-ATM-MIB", "usdAtmVpPingControlGroup"), ("Unisphere-Data-ATM-MIB", "usdAtmVcPingControlGroup"), ("Unisphere-Data-ATM-MIB", "usdAtmPingTrapGroup"), ("Unisphere-Data-ATM-MIB", "usdAtmVpTunnelGroup"), ("Unisphere-Data-ATM-MIB", "usdAtmNbmaMapGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    usdAtmCompliance2 = usdAtmCompliance2.setStatus('obsolete')
usdAtmCompliance3 = ModuleCompliance((1, 3, 6, 1, 4, 1, 4874, 2, 2, 8, 4, 1, 3)).setObjects(("Unisphere-Data-ATM-MIB", "usdAtmGroup2"), ("Unisphere-Data-ATM-MIB", "usdAtmAal5Group"), ("Unisphere-Data-ATM-MIB", "usdAtmSubIfGroup2"), ("Unisphere-Data-ATM-MIB", "usdAtmVpPingControlGroup"), ("Unisphere-Data-ATM-MIB", "usdAtmVcPingControlGroup"), ("Unisphere-Data-ATM-MIB", "usdAtmPingTrapGroup"), ("Unisphere-Data-ATM-MIB", "usdAtmVpTunnelGroup"), ("Unisphere-Data-ATM-MIB", "usdAtmNbmaMapGroup"), ("Unisphere-Data-ATM-MIB", "usdAtmTrafficShapingGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    usdAtmCompliance3 = usdAtmCompliance3.setStatus('obsolete')
usdAtmCompliance4 = ModuleCompliance((1, 3, 6, 1, 4, 1, 4874, 2, 2, 8, 4, 1, 4)).setObjects(("Unisphere-Data-ATM-MIB", "usdAtmGroup3"), ("Unisphere-Data-ATM-MIB", "usdAtmAal5Group"), ("Unisphere-Data-ATM-MIB", "usdAtmSubIfGroup2"), ("Unisphere-Data-ATM-MIB", "usdAtmVpPingControlGroup"), ("Unisphere-Data-ATM-MIB", "usdAtmVcPingControlGroup"), ("Unisphere-Data-ATM-MIB", "usdAtmPingTrapGroup"), ("Unisphere-Data-ATM-MIB", "usdAtmVpTunnelGroup"), ("Unisphere-Data-ATM-MIB", "usdAtmNbmaMapGroup"), ("Unisphere-Data-ATM-MIB", "usdAtmTrafficShapingGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    usdAtmCompliance4 = usdAtmCompliance4.setStatus('obsolete')
usdAtmCompliance5 = ModuleCompliance((1, 3, 6, 1, 4, 1, 4874, 2, 2, 8, 4, 1, 5)).setObjects(("Unisphere-Data-ATM-MIB", "usdAtmGroup4"), ("Unisphere-Data-ATM-MIB", "usdAtmAal5Group"), ("Unisphere-Data-ATM-MIB", "usdAtmSubIfGroup3"), ("Unisphere-Data-ATM-MIB", "usdAtmVpPingControlGroup"), ("Unisphere-Data-ATM-MIB", "usdAtmVcPingControlGroup"), ("Unisphere-Data-ATM-MIB", "usdAtmPingTrapGroup"), ("Unisphere-Data-ATM-MIB", "usdAtmSvcGroup"), ("Unisphere-Data-ATM-MIB", "usdAtmVpTunnelGroup"), ("Unisphere-Data-ATM-MIB", "usdAtmNbmaMapGroup"), ("Unisphere-Data-ATM-MIB", "usdAtmTrafficShapingGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    usdAtmCompliance5 = usdAtmCompliance5.setStatus('current')
usdAtmGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 4874, 2, 2, 8, 4, 2, 1)).setObjects(("Unisphere-Data-ATM-MIB", "usdAtmNextIfIndex"), ("Unisphere-Data-ATM-MIB", "usdAtmIfRowStatus"), ("Unisphere-Data-ATM-MIB", "usdAtmIfLowerIfIndex"), ("Unisphere-Data-ATM-MIB", "usdAtmIfIlmiVpi"), ("Unisphere-Data-ATM-MIB", "usdAtmIfIlmiVci"), ("Unisphere-Data-ATM-MIB", "usdAtmIfIlmiVcd"), ("Unisphere-Data-ATM-MIB", "usdAtmIfIlmiPollFrequency"), ("Unisphere-Data-ATM-MIB", "usdAtmIfIlmiAdminState"), ("Unisphere-Data-ATM-MIB", "usdAtmIfUniVersion"), ("Unisphere-Data-ATM-MIB", "usdAtmIfOamCellRxAdminState"), ("Unisphere-Data-ATM-MIB", "usdAtmIfInCells"), ("Unisphere-Data-ATM-MIB", "usdAtmIfOutCells"), ("Unisphere-Data-ATM-MIB", "usdAtmIfVcCount"), ("Unisphere-Data-ATM-MIB", "usdAtmPvcStatsInCells"), ("Unisphere-Data-ATM-MIB", "usdAtmPvcStatsInCellOctets"), ("Unisphere-Data-ATM-MIB", "usdAtmPvcStatsInPackets"), ("Unisphere-Data-ATM-MIB", "usdAtmPvcStatsInPacketOctets"), ("Unisphere-Data-ATM-MIB", "usdAtmPvcStatsOutCells"), ("Unisphere-Data-ATM-MIB", "usdAtmPvcStatsOutCellOctets"), ("Unisphere-Data-ATM-MIB", "usdAtmPvcStatsOutPackets"), ("Unisphere-Data-ATM-MIB", "usdAtmPvcStatsOutPacketOctets"), ("Unisphere-Data-ATM-MIB", "usdAtmPvcStatsInCellErrors"), ("Unisphere-Data-ATM-MIB", "usdAtmPvcStatsinPacketErrors"), ("Unisphere-Data-ATM-MIB", "usdAtmPvcStatsOutCellErrors"), ("Unisphere-Data-ATM-MIB", "usdAtmPvcStatsOutPacketErrors"), ("Unisphere-Data-ATM-MIB", "usdAtmPvcStatsInPacketDiscards"), ("Unisphere-Data-ATM-MIB", "usdAtmPvcStatsInPacketOctetDiscards"), ("Unisphere-Data-ATM-MIB", "usdAtmIfCapabilityTrafficShaping"), ("Unisphere-Data-ATM-MIB", "usdAtmIfCapabilityOam"), ("Unisphere-Data-ATM-MIB", "usdAtmIfCapabilityDefaultVcPerVp"), ("Unisphere-Data-ATM-MIB", "usdAtmIfCapabilityNumVpiVciBits"), ("Unisphere-Data-ATM-MIB", "usdAtmIfCapabilityMaxVcd"), ("Unisphere-Data-ATM-MIB", "usdAtmIfCapabilityMaxVpi"), ("Unisphere-Data-ATM-MIB", "usdAtmIfCapabilityMaxVci"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    usdAtmGroup = usdAtmGroup.setStatus('obsolete')
usdAtmAal5Group = ObjectGroup((1, 3, 6, 1, 4, 1, 4874, 2, 2, 8, 4, 2, 2)).setObjects(("Unisphere-Data-ATM-MIB", "usdAtmAal5NextIfIndex"), ("Unisphere-Data-ATM-MIB", "usdAtmAal5IfRowStatus"), ("Unisphere-Data-ATM-MIB", "usdAtmAal5IfLowerIfIndex"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    usdAtmAal5Group = usdAtmAal5Group.setStatus('current')
usdAtmSubIfGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 4874, 2, 2, 8, 4, 2, 3)).setObjects(("Unisphere-Data-ATM-MIB", "usdAtmSubIfNextIfIndex"), ("Unisphere-Data-ATM-MIB", "usdAtmSubIfRowStatus"), ("Unisphere-Data-ATM-MIB", "usdAtmSubIfDistinguisher"), ("Unisphere-Data-ATM-MIB", "usdAtmSubIfLowerIfIndex"), ("Unisphere-Data-ATM-MIB", "usdAtmSubIfVccRowStatus"), ("Unisphere-Data-ATM-MIB", "usdAtmSubIfVccVcd"), ("Unisphere-Data-ATM-MIB", "usdAtmSubIfVccType"), ("Unisphere-Data-ATM-MIB", "usdAtmSubIfVccServiceCategory"), ("Unisphere-Data-ATM-MIB", "usdAtmSubIfVccPcr"), ("Unisphere-Data-ATM-MIB", "usdAtmSubIfVccScr"), ("Unisphere-Data-ATM-MIB", "usdAtmSubIfVccMbs"), ("Unisphere-Data-ATM-MIB", "usdAtmCircuitOamAdminStatus"), ("Unisphere-Data-ATM-MIB", "usdAtmCircuitOamLoopbackOperStatus"), ("Unisphere-Data-ATM-MIB", "usdAtmCircuitVcOamOperStatus"), ("Unisphere-Data-ATM-MIB", "usdAtmCircuitOamLoopbackFrequency"), ("Unisphere-Data-ATM-MIB", "usdAtmCircuitInOamF5Cells"), ("Unisphere-Data-ATM-MIB", "usdAtmCircuitInOamCellsDropped"), ("Unisphere-Data-ATM-MIB", "usdAtmCircuitOutOamF5Cells"), ("Unisphere-Data-ATM-MIB", "usdAtmCircuitInOamF5EndToEndLoopbackCells"), ("Unisphere-Data-ATM-MIB", "usdAtmCircuitInOamF5SegmentLoopbackCells"), ("Unisphere-Data-ATM-MIB", "usdAtmCircuitInOamF5AisCells"), ("Unisphere-Data-ATM-MIB", "usdAtmCircuitInOamF5RdiCells"), ("Unisphere-Data-ATM-MIB", "usdAtmCircuitOutOamF5EndToEndLoopbackCells"), ("Unisphere-Data-ATM-MIB", "usdAtmCircuitOutOamF5SegmentLoopbackCells"), ("Unisphere-Data-ATM-MIB", "usdAtmCircuitOutOamF5RdiCells"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    usdAtmSubIfGroup = usdAtmSubIfGroup.setStatus('obsolete')
usdAtmVpTunnelGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 4874, 2, 2, 8, 4, 2, 4)).setObjects(("Unisphere-Data-ATM-MIB", "usdAtmVpTunnelKbps"), ("Unisphere-Data-ATM-MIB", "usdAtmVpTunnelRowStatus"), ("Unisphere-Data-ATM-MIB", "usdAtmVpTunnelServiceCategory"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    usdAtmVpTunnelGroup = usdAtmVpTunnelGroup.setStatus('current')
usdAtmNbmaMapGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 4874, 2, 2, 8, 4, 2, 5)).setObjects(("Unisphere-Data-ATM-MIB", "usdAtmNbmaMapIpAddress"), ("Unisphere-Data-ATM-MIB", "usdAtmNbmaMapVpi"), ("Unisphere-Data-ATM-MIB", "usdAtmNbmaMapVci"), ("Unisphere-Data-ATM-MIB", "usdAtmNbmaMapIfIndex"), ("Unisphere-Data-ATM-MIB", "usdAtmNbmaMapBroadcast"), ("Unisphere-Data-ATM-MIB", "usdAtmNbmaMapRowStatus"), ("Unisphere-Data-ATM-MIB", "usdAtmNbmaMapListRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    usdAtmNbmaMapGroup = usdAtmNbmaMapGroup.setStatus('current')
usdAtmSubIfGroup2 = ObjectGroup((1, 3, 6, 1, 4, 1, 4874, 2, 2, 8, 4, 2, 6)).setObjects(("Unisphere-Data-ATM-MIB", "usdAtmSubIfNextIfIndex"), ("Unisphere-Data-ATM-MIB", "usdAtmSubIfRowStatus"), ("Unisphere-Data-ATM-MIB", "usdAtmSubIfDistinguisher"), ("Unisphere-Data-ATM-MIB", "usdAtmSubIfLowerIfIndex"), ("Unisphere-Data-ATM-MIB", "usdAtmSubIfNbma"), ("Unisphere-Data-ATM-MIB", "usdAtmSubIfVccRowStatus"), ("Unisphere-Data-ATM-MIB", "usdAtmSubIfVccVcd"), ("Unisphere-Data-ATM-MIB", "usdAtmSubIfVccType"), ("Unisphere-Data-ATM-MIB", "usdAtmSubIfVccServiceCategory"), ("Unisphere-Data-ATM-MIB", "usdAtmSubIfVccPcr"), ("Unisphere-Data-ATM-MIB", "usdAtmSubIfVccScr"), ("Unisphere-Data-ATM-MIB", "usdAtmSubIfVccMbs"), ("Unisphere-Data-ATM-MIB", "usdAtmSubIfInverseArp"), ("Unisphere-Data-ATM-MIB", "usdAtmSubIfInverseArpRefresh"), ("Unisphere-Data-ATM-MIB", "usdAtmCircuitOamAdminStatus"), ("Unisphere-Data-ATM-MIB", "usdAtmCircuitOamLoopbackOperStatus"), ("Unisphere-Data-ATM-MIB", "usdAtmCircuitVcOamOperStatus"), ("Unisphere-Data-ATM-MIB", "usdAtmCircuitOamLoopbackFrequency"), ("Unisphere-Data-ATM-MIB", "usdAtmCircuitInOamF5Cells"), ("Unisphere-Data-ATM-MIB", "usdAtmCircuitInOamCellsDropped"), ("Unisphere-Data-ATM-MIB", "usdAtmCircuitOutOamF5Cells"), ("Unisphere-Data-ATM-MIB", "usdAtmCircuitInOamF5EndToEndLoopbackCells"), ("Unisphere-Data-ATM-MIB", "usdAtmCircuitInOamF5SegmentLoopbackCells"), ("Unisphere-Data-ATM-MIB", "usdAtmCircuitInOamF5AisCells"), ("Unisphere-Data-ATM-MIB", "usdAtmCircuitInOamF5RdiCells"), ("Unisphere-Data-ATM-MIB", "usdAtmCircuitOutOamF5EndToEndLoopbackCells"), ("Unisphere-Data-ATM-MIB", "usdAtmCircuitOutOamF5SegmentLoopbackCells"), ("Unisphere-Data-ATM-MIB", "usdAtmCircuitOutOamF5RdiCells"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    usdAtmSubIfGroup2 = usdAtmSubIfGroup2.setStatus('obsolete')
usdAtmVpPingControlGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 4874, 2, 2, 8, 4, 2, 7)).setObjects(("Unisphere-Data-ATM-MIB", "usdAtmVpPingProbeCount"), ("Unisphere-Data-ATM-MIB", "usdAtmVpPingTimeOut"), ("Unisphere-Data-ATM-MIB", "usdAtmVpPingCtlTrapGeneration"), ("Unisphere-Data-ATM-MIB", "usdAtmVpPingSentProbes"), ("Unisphere-Data-ATM-MIB", "usdAtmVpPingProbeResponses"), ("Unisphere-Data-ATM-MIB", "usdAtmVpPingStartTime"), ("Unisphere-Data-ATM-MIB", "usdAtmVpPingMinRtt"), ("Unisphere-Data-ATM-MIB", "usdAtmVpPingMaxRtt"), ("Unisphere-Data-ATM-MIB", "usdAtmVpPingAverageRtt"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    usdAtmVpPingControlGroup = usdAtmVpPingControlGroup.setStatus('current')
usdAtmVcPingControlGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 4874, 2, 2, 8, 4, 2, 8)).setObjects(("Unisphere-Data-ATM-MIB", "usdAtmVcPingProbeCount"), ("Unisphere-Data-ATM-MIB", "usdAtmVcPingTimeOut"), ("Unisphere-Data-ATM-MIB", "usdAtmVcPingCtlTrapGeneration"), ("Unisphere-Data-ATM-MIB", "usdAtmVcPingSentProbes"), ("Unisphere-Data-ATM-MIB", "usdAtmVcPingProbeResponses"), ("Unisphere-Data-ATM-MIB", "usdAtmVcPingStartTime"), ("Unisphere-Data-ATM-MIB", "usdAtmVcPingMinRtt"), ("Unisphere-Data-ATM-MIB", "usdAtmVcPingMaxRtt"), ("Unisphere-Data-ATM-MIB", "usdAtmVcPingAverageRtt"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    usdAtmVcPingControlGroup = usdAtmVcPingControlGroup.setStatus('current')
usdAtmPingTrapGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 4874, 2, 2, 8, 4, 2, 9)).setObjects(("Unisphere-Data-ATM-MIB", "usdAtmVpPingTestCompleted"), ("Unisphere-Data-ATM-MIB", "usdAtmVcPingTestCompleted"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    usdAtmPingTrapGroup = usdAtmPingTrapGroup.setStatus('current')
usdAtmGroup2 = ObjectGroup((1, 3, 6, 1, 4, 1, 4874, 2, 2, 8, 4, 2, 10)).setObjects(("Unisphere-Data-ATM-MIB", "usdAtmNextIfIndex"), ("Unisphere-Data-ATM-MIB", "usdAtmIfRowStatus"), ("Unisphere-Data-ATM-MIB", "usdAtmIfLowerIfIndex"), ("Unisphere-Data-ATM-MIB", "usdAtmIfIlmiVpi"), ("Unisphere-Data-ATM-MIB", "usdAtmIfIlmiVci"), ("Unisphere-Data-ATM-MIB", "usdAtmIfIlmiVcd"), ("Unisphere-Data-ATM-MIB", "usdAtmIfIlmiPollFrequency"), ("Unisphere-Data-ATM-MIB", "usdAtmIfIlmiAdminState"), ("Unisphere-Data-ATM-MIB", "usdAtmIfUniVersion"), ("Unisphere-Data-ATM-MIB", "usdAtmIfOamCellRxAdminState"), ("Unisphere-Data-ATM-MIB", "usdAtmIfInCells"), ("Unisphere-Data-ATM-MIB", "usdAtmIfOutCells"), ("Unisphere-Data-ATM-MIB", "usdAtmIfVcCount"), ("Unisphere-Data-ATM-MIB", "usdAtmIfMapGroup"), ("Unisphere-Data-ATM-MIB", "usdAtmIfOamCellFilter"), ("Unisphere-Data-ATM-MIB", "usdAtmPvcStatsInCells"), ("Unisphere-Data-ATM-MIB", "usdAtmPvcStatsInCellOctets"), ("Unisphere-Data-ATM-MIB", "usdAtmPvcStatsInPackets"), ("Unisphere-Data-ATM-MIB", "usdAtmPvcStatsInPacketOctets"), ("Unisphere-Data-ATM-MIB", "usdAtmPvcStatsOutCells"), ("Unisphere-Data-ATM-MIB", "usdAtmPvcStatsOutCellOctets"), ("Unisphere-Data-ATM-MIB", "usdAtmPvcStatsOutPackets"), ("Unisphere-Data-ATM-MIB", "usdAtmPvcStatsOutPacketOctets"), ("Unisphere-Data-ATM-MIB", "usdAtmPvcStatsInCellErrors"), ("Unisphere-Data-ATM-MIB", "usdAtmPvcStatsinPacketErrors"), ("Unisphere-Data-ATM-MIB", "usdAtmPvcStatsOutCellErrors"), ("Unisphere-Data-ATM-MIB", "usdAtmPvcStatsOutPacketErrors"), ("Unisphere-Data-ATM-MIB", "usdAtmPvcStatsInPacketDiscards"), ("Unisphere-Data-ATM-MIB", "usdAtmPvcStatsInPacketOctetDiscards"), ("Unisphere-Data-ATM-MIB", "usdAtmPvcStatsInPacketUnknownProtocol"), ("Unisphere-Data-ATM-MIB", "usdAtmIfCapabilityTrafficShaping"), ("Unisphere-Data-ATM-MIB", "usdAtmIfCapabilityOam"), ("Unisphere-Data-ATM-MIB", "usdAtmIfCapabilityDefaultVcPerVp"), ("Unisphere-Data-ATM-MIB", "usdAtmIfCapabilityNumVpiVciBits"), ("Unisphere-Data-ATM-MIB", "usdAtmIfCapabilityMaxVcd"), ("Unisphere-Data-ATM-MIB", "usdAtmIfCapabilityMaxVpi"), ("Unisphere-Data-ATM-MIB", "usdAtmIfCapabilityMaxVci"), ("Unisphere-Data-ATM-MIB", "usdAtmIfCapabilityOamCellFilter"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    usdAtmGroup2 = usdAtmGroup2.setStatus('obsolete')
usdAtmTrafficShapingGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 4874, 2, 2, 8, 4, 2, 11)).setObjects(("Unisphere-Data-ATM-MIB", "usdAtmSubIfVccTrafficShapingCdvt"), ("Unisphere-Data-ATM-MIB", "usdAtmSubIfVccTrafficShapingClp0"), ("Unisphere-Data-ATM-MIB", "usdAtmSubIfVccTrafficShapingTagging"), ("Unisphere-Data-ATM-MIB", "usdAtmSubIfVccTrafficShapingPoliceObserve"), ("Unisphere-Data-ATM-MIB", "usdAtmSubIfVccTrafficShapingPacketShaping"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    usdAtmTrafficShapingGroup = usdAtmTrafficShapingGroup.setStatus('current')
usdAtmGroup3 = ObjectGroup((1, 3, 6, 1, 4, 1, 4874, 2, 2, 8, 4, 2, 12)).setObjects(("Unisphere-Data-ATM-MIB", "usdAtmNextIfIndex"), ("Unisphere-Data-ATM-MIB", "usdAtmIfRowStatus"), ("Unisphere-Data-ATM-MIB", "usdAtmIfLowerIfIndex"), ("Unisphere-Data-ATM-MIB", "usdAtmIfIlmiVpi"), ("Unisphere-Data-ATM-MIB", "usdAtmIfIlmiVci"), ("Unisphere-Data-ATM-MIB", "usdAtmIfIlmiVcd"), ("Unisphere-Data-ATM-MIB", "usdAtmIfIlmiPollFrequency"), ("Unisphere-Data-ATM-MIB", "usdAtmIfIlmiAdminState"), ("Unisphere-Data-ATM-MIB", "usdAtmIfUniVersion"), ("Unisphere-Data-ATM-MIB", "usdAtmIfOamCellRxAdminState"), ("Unisphere-Data-ATM-MIB", "usdAtmIfInCells"), ("Unisphere-Data-ATM-MIB", "usdAtmIfOutCells"), ("Unisphere-Data-ATM-MIB", "usdAtmIfVcCount"), ("Unisphere-Data-ATM-MIB", "usdAtmIfMapGroup"), ("Unisphere-Data-ATM-MIB", "usdAtmIfCacAdminState"), ("Unisphere-Data-ATM-MIB", "usdAtmIfCacUbrWeight"), ("Unisphere-Data-ATM-MIB", "usdAtmIfCacSubscriptionBandwidth"), ("Unisphere-Data-ATM-MIB", "usdAtmIfCacAvailableBandwidth"), ("Unisphere-Data-ATM-MIB", "usdAtmIfOamCellFilter"), ("Unisphere-Data-ATM-MIB", "usdAtmPvcStatsInCells"), ("Unisphere-Data-ATM-MIB", "usdAtmPvcStatsInCellOctets"), ("Unisphere-Data-ATM-MIB", "usdAtmPvcStatsInPackets"), ("Unisphere-Data-ATM-MIB", "usdAtmPvcStatsInPacketOctets"), ("Unisphere-Data-ATM-MIB", "usdAtmPvcStatsOutCells"), ("Unisphere-Data-ATM-MIB", "usdAtmPvcStatsOutCellOctets"), ("Unisphere-Data-ATM-MIB", "usdAtmPvcStatsOutPackets"), ("Unisphere-Data-ATM-MIB", "usdAtmPvcStatsOutPacketOctets"), ("Unisphere-Data-ATM-MIB", "usdAtmPvcStatsInCellErrors"), ("Unisphere-Data-ATM-MIB", "usdAtmPvcStatsinPacketErrors"), ("Unisphere-Data-ATM-MIB", "usdAtmPvcStatsOutCellErrors"), ("Unisphere-Data-ATM-MIB", "usdAtmPvcStatsOutPacketErrors"), ("Unisphere-Data-ATM-MIB", "usdAtmPvcStatsInPacketDiscards"), ("Unisphere-Data-ATM-MIB", "usdAtmPvcStatsInPacketOctetDiscards"), ("Unisphere-Data-ATM-MIB", "usdAtmPvcStatsInPacketUnknownProtocol"), ("Unisphere-Data-ATM-MIB", "usdAtmIfCapabilityTrafficShaping"), ("Unisphere-Data-ATM-MIB", "usdAtmIfCapabilityOam"), ("Unisphere-Data-ATM-MIB", "usdAtmIfCapabilityDefaultVcPerVp"), ("Unisphere-Data-ATM-MIB", "usdAtmIfCapabilityNumVpiVciBits"), ("Unisphere-Data-ATM-MIB", "usdAtmIfCapabilityMaxVcd"), ("Unisphere-Data-ATM-MIB", "usdAtmIfCapabilityMaxVpi"), ("Unisphere-Data-ATM-MIB", "usdAtmIfCapabilityMaxVci"), ("Unisphere-Data-ATM-MIB", "usdAtmIfCapabilityOamCellFilter"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    usdAtmGroup3 = usdAtmGroup3.setStatus('obsolete')
usdAtmGroup4 = ObjectGroup((1, 3, 6, 1, 4, 1, 4874, 2, 2, 8, 4, 2, 13)).setObjects(("Unisphere-Data-ATM-MIB", "usdAtmNextIfIndex"), ("Unisphere-Data-ATM-MIB", "usdAtmIfRowStatus"), ("Unisphere-Data-ATM-MIB", "usdAtmIfLowerIfIndex"), ("Unisphere-Data-ATM-MIB", "usdAtmIfIlmiVpi"), ("Unisphere-Data-ATM-MIB", "usdAtmIfIlmiVci"), ("Unisphere-Data-ATM-MIB", "usdAtmIfIlmiVcd"), ("Unisphere-Data-ATM-MIB", "usdAtmIfIlmiPollFrequency"), ("Unisphere-Data-ATM-MIB", "usdAtmIfIlmiAdminState"), ("Unisphere-Data-ATM-MIB", "usdAtmIfUniVersion"), ("Unisphere-Data-ATM-MIB", "usdAtmIfOamCellRxAdminState"), ("Unisphere-Data-ATM-MIB", "usdAtmIfInCells"), ("Unisphere-Data-ATM-MIB", "usdAtmIfOutCells"), ("Unisphere-Data-ATM-MIB", "usdAtmIfVcCount"), ("Unisphere-Data-ATM-MIB", "usdAtmIfMapGroup"), ("Unisphere-Data-ATM-MIB", "usdAtmIfCacAdminState"), ("Unisphere-Data-ATM-MIB", "usdAtmIfCacUbrWeight"), ("Unisphere-Data-ATM-MIB", "usdAtmIfCacSubscriptionBandwidth"), ("Unisphere-Data-ATM-MIB", "usdAtmIfCacAvailableBandwidth"), ("Unisphere-Data-ATM-MIB", "usdAtmIfOamCellFilter"), ("Unisphere-Data-ATM-MIB", "usdAtmIfCacUsedBandwidthUpper"), ("Unisphere-Data-ATM-MIB", "usdAtmIfCacUsedBandwidthLower"), ("Unisphere-Data-ATM-MIB", "usdAtmPvcStatsInCells"), ("Unisphere-Data-ATM-MIB", "usdAtmPvcStatsInCellOctets"), ("Unisphere-Data-ATM-MIB", "usdAtmPvcStatsInPackets"), ("Unisphere-Data-ATM-MIB", "usdAtmPvcStatsInPacketOctets"), ("Unisphere-Data-ATM-MIB", "usdAtmPvcStatsOutCells"), ("Unisphere-Data-ATM-MIB", "usdAtmPvcStatsOutCellOctets"), ("Unisphere-Data-ATM-MIB", "usdAtmPvcStatsOutPackets"), ("Unisphere-Data-ATM-MIB", "usdAtmPvcStatsOutPacketOctets"), ("Unisphere-Data-ATM-MIB", "usdAtmPvcStatsInCellErrors"), ("Unisphere-Data-ATM-MIB", "usdAtmPvcStatsinPacketErrors"), ("Unisphere-Data-ATM-MIB", "usdAtmPvcStatsOutCellErrors"), ("Unisphere-Data-ATM-MIB", "usdAtmPvcStatsOutPacketErrors"), ("Unisphere-Data-ATM-MIB", "usdAtmPvcStatsInPacketDiscards"), ("Unisphere-Data-ATM-MIB", "usdAtmPvcStatsInPacketOctetDiscards"), ("Unisphere-Data-ATM-MIB", "usdAtmPvcStatsInPacketUnknownProtocol"), ("Unisphere-Data-ATM-MIB", "usdAtmIfCapabilityTrafficShaping"), ("Unisphere-Data-ATM-MIB", "usdAtmIfCapabilityOam"), ("Unisphere-Data-ATM-MIB", "usdAtmIfCapabilityDefaultVcPerVp"), ("Unisphere-Data-ATM-MIB", "usdAtmIfCapabilityNumVpiVciBits"), ("Unisphere-Data-ATM-MIB", "usdAtmIfCapabilityMaxVcd"), ("Unisphere-Data-ATM-MIB", "usdAtmIfCapabilityMaxVpi"), ("Unisphere-Data-ATM-MIB", "usdAtmIfCapabilityMaxVci"), ("Unisphere-Data-ATM-MIB", "usdAtmIfCapabilityOamCellFilter"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    usdAtmGroup4 = usdAtmGroup4.setStatus('current')
usdAtmSvcGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 4874, 2, 2, 8, 4, 2, 14)).setObjects(("Unisphere-Data-ATM-MIB", "usdAtmIfSvcSignallingVpi"), ("Unisphere-Data-ATM-MIB", "usdAtmIfSvcSignallingVci"), ("Unisphere-Data-ATM-MIB", "usdAtmIfSvcSignallingVcd"), ("Unisphere-Data-ATM-MIB", "usdAtmIfSvcSignallingAdminStatus"), ("Unisphere-Data-ATM-MIB", "usdAtmSubIfSvcRowStatus"), ("Unisphere-Data-ATM-MIB", "usdAtmSubIfSvcConfigDestAtmAddress"), ("Unisphere-Data-ATM-MIB", "usdAtmSubIfSvcConfigCircuitType"), ("Unisphere-Data-ATM-MIB", "usdAtmSubIfSvcConfigServiceCategory"), ("Unisphere-Data-ATM-MIB", "usdAtmSubIfSvcConfigPcr"), ("Unisphere-Data-ATM-MIB", "usdAtmSubIfSvcConfigScr"), ("Unisphere-Data-ATM-MIB", "usdAtmSubIfSvcConfigMbs"), ("Unisphere-Data-ATM-MIB", "usdAtmSubIfSvcConfigCdvt"), ("Unisphere-Data-ATM-MIB", "usdAtmSubIfSvcConfigClp0"), ("Unisphere-Data-ATM-MIB", "usdAtmSubIfSvcConfigTagging"), ("Unisphere-Data-ATM-MIB", "usdAtmSubIfSvcConfigObserve"), ("Unisphere-Data-ATM-MIB", "usdAtmSubIfSvcConfigPacketDiscard"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    usdAtmSvcGroup = usdAtmSvcGroup.setStatus('current')
usdAtmSubIfGroup3 = ObjectGroup((1, 3, 6, 1, 4, 1, 4874, 2, 2, 8, 4, 2, 15)).setObjects(("Unisphere-Data-ATM-MIB", "usdAtmSubIfNextIfIndex"), ("Unisphere-Data-ATM-MIB", "usdAtmSubIfRowStatus"), ("Unisphere-Data-ATM-MIB", "usdAtmSubIfDistinguisher"), ("Unisphere-Data-ATM-MIB", "usdAtmSubIfLowerIfIndex"), ("Unisphere-Data-ATM-MIB", "usdAtmSubIfNbma"), ("Unisphere-Data-ATM-MIB", "usdAtmSubIfAddress"), ("Unisphere-Data-ATM-MIB", "usdAtmSubIfVccRowStatus"), ("Unisphere-Data-ATM-MIB", "usdAtmSubIfVccVcd"), ("Unisphere-Data-ATM-MIB", "usdAtmSubIfVccType"), ("Unisphere-Data-ATM-MIB", "usdAtmSubIfVccServiceCategory"), ("Unisphere-Data-ATM-MIB", "usdAtmSubIfVccPcr"), ("Unisphere-Data-ATM-MIB", "usdAtmSubIfVccScr"), ("Unisphere-Data-ATM-MIB", "usdAtmSubIfVccMbs"), ("Unisphere-Data-ATM-MIB", "usdAtmSubIfInverseArp"), ("Unisphere-Data-ATM-MIB", "usdAtmSubIfInverseArpRefresh"), ("Unisphere-Data-ATM-MIB", "usdAtmCircuitOamAdminStatus"), ("Unisphere-Data-ATM-MIB", "usdAtmCircuitOamLoopbackOperStatus"), ("Unisphere-Data-ATM-MIB", "usdAtmCircuitVcOamOperStatus"), ("Unisphere-Data-ATM-MIB", "usdAtmCircuitOamLoopbackFrequency"), ("Unisphere-Data-ATM-MIB", "usdAtmCircuitInOamF5Cells"), ("Unisphere-Data-ATM-MIB", "usdAtmCircuitInOamCellsDropped"), ("Unisphere-Data-ATM-MIB", "usdAtmCircuitOutOamF5Cells"), ("Unisphere-Data-ATM-MIB", "usdAtmCircuitInOamF5EndToEndLoopbackCells"), ("Unisphere-Data-ATM-MIB", "usdAtmCircuitInOamF5SegmentLoopbackCells"), ("Unisphere-Data-ATM-MIB", "usdAtmCircuitInOamF5AisCells"), ("Unisphere-Data-ATM-MIB", "usdAtmCircuitInOamF5RdiCells"), ("Unisphere-Data-ATM-MIB", "usdAtmCircuitOutOamF5EndToEndLoopbackCells"), ("Unisphere-Data-ATM-MIB", "usdAtmCircuitOutOamF5SegmentLoopbackCells"), ("Unisphere-Data-ATM-MIB", "usdAtmCircuitOutOamF5RdiCells"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    usdAtmSubIfGroup3 = usdAtmSubIfGroup3.setStatus('current')
mibBuilder.exportSymbols("Unisphere-Data-ATM-MIB", usdAtmCircuitInOamF5SegmentLoopbackCells=usdAtmCircuitInOamF5SegmentLoopbackCells, usdAtmSubIfGroup=usdAtmSubIfGroup, usdAtmIfUniVersion=usdAtmIfUniVersion, usdAtmIfLowerIfIndex=usdAtmIfLowerIfIndex, usdAtmIfOamCellRxAdminState=usdAtmIfOamCellRxAdminState, usdAtmPingTestTypes=usdAtmPingTestTypes, usdAtmVcPingTable=usdAtmVcPingTable, usdAtmVpPingAverageRtt=usdAtmVpPingAverageRtt, usdAtmCircuitOutOamF5EndToEndLoopbackCells=usdAtmCircuitOutOamF5EndToEndLoopbackCells, usdAtmPvcStatsInCellOctets=usdAtmPvcStatsInCellOctets, usdAtmVpPingEntry=usdAtmVpPingEntry, usdAtmSvcGroup=usdAtmSvcGroup, usdAtmVcPingCtlTrapGeneration=usdAtmVcPingCtlTrapGeneration, usdAtmIfMapGroup=usdAtmIfMapGroup, usdAtmSubIfIndex=usdAtmSubIfIndex, usdAtmVcPingProbeResponses=usdAtmVcPingProbeResponses, usdAtmCompliance3=usdAtmCompliance3, usdAtmSubIfVccVci=usdAtmSubIfVccVci, usdAtmSubIfNextIfIndex=usdAtmSubIfNextIfIndex, usdAtmIfOamCellFilter=usdAtmIfOamCellFilter, usdAtmPvcStatsInCellErrors=usdAtmPvcStatsInCellErrors, usdAtmIfCapabilityTable=usdAtmIfCapabilityTable, usdAtmSubIfVccEntry=usdAtmSubIfVccEntry, usdAtmMIB=usdAtmMIB, usdAtmSubIfSvcConfigTagging=usdAtmSubIfSvcConfigTagging, usdAtmNbmaMapVcd=usdAtmNbmaMapVcd, usdAtmCircuitInOamF5RdiCells=usdAtmCircuitInOamF5RdiCells, usdAtmSubIfVccScr=usdAtmSubIfVccScr, usdAtmVpPingStartTime=usdAtmVpPingStartTime, usdAtmVcPingMinRtt=usdAtmVcPingMinRtt, usdAtmIfIlmiVpi=usdAtmIfIlmiVpi, usdAtmIfCacUsedBandwidthLower=usdAtmIfCacUsedBandwidthLower, usdAtmPvcStatsOutCells=usdAtmPvcStatsOutCells, usdAtmIfCacUbrWeight=usdAtmIfCacUbrWeight, usdAtmCircuitOamTable=usdAtmCircuitOamTable, usdAtmSubIfVccTrafficShapingTagging=usdAtmSubIfVccTrafficShapingTagging, usdAtmPingTestOamE2E=usdAtmPingTestOamE2E, usdAtmVpPingTable=usdAtmVpPingTable, usdAtmIfIlmiPollFrequency=usdAtmIfIlmiPollFrequency, usdAtmTrapPrefix=usdAtmTrapPrefix, usdAtmVpTunnelKbps=usdAtmVpTunnelKbps, usdAtmPvcStatisticsEntry=usdAtmPvcStatisticsEntry, usdAtmTraps=usdAtmTraps, usdAtmIfIlmiVcd=usdAtmIfIlmiVcd, usdAtmSubIfInverseArpRefresh=usdAtmSubIfInverseArpRefresh, UsdAtmNbmaMapName=UsdAtmNbmaMapName, usdAtmCircuitVcOamOperStatus=usdAtmCircuitVcOamOperStatus, usdAtmIfCapabilityTrafficShaping=usdAtmIfCapabilityTrafficShaping, usdAtmVpTunnelIfIndex=usdAtmVpTunnelIfIndex, usdAtmPingTrapGroup=usdAtmPingTrapGroup, usdAtmCircuitOamLoopbackFrequency=usdAtmCircuitOamLoopbackFrequency, usdAtmIfSvcSignallingVci=usdAtmIfSvcSignallingVci, usdAtmIfSvcSignallingVpi=usdAtmIfSvcSignallingVpi, usdAtmIfSvcSignallingAdminStatus=usdAtmIfSvcSignallingAdminStatus, usdAtmSubIfSvcConfigDestAtmAddress=usdAtmSubIfSvcConfigDestAtmAddress, usdAtmGroups=usdAtmGroups, usdAtmVpTunnelTable=usdAtmVpTunnelTable, usdAtmPvcStatsOutPackets=usdAtmPvcStatsOutPackets, usdAtmVpPingCtlTrapGeneration=usdAtmVpPingCtlTrapGeneration, usdAtmVcPingControlGroup=usdAtmVcPingControlGroup, usdAtmCircuitOamEntry=usdAtmCircuitOamEntry, usdAtmNbmaMapListName=usdAtmNbmaMapListName, usdAtmSubIfSvcConfigCircuitType=usdAtmSubIfSvcConfigCircuitType, usdAtmAal5IfEntry=usdAtmAal5IfEntry, usdAtmSubIfSvcConfigServiceCategory=usdAtmSubIfSvcConfigServiceCategory, usdAtmIfCapabilityMaxVci=usdAtmIfCapabilityMaxVci, usdAtmVpPingSentProbes=usdAtmVpPingSentProbes, usdAtmIfCapabilityIndex=usdAtmIfCapabilityIndex, usdAtmAal5IfLayer=usdAtmAal5IfLayer, usdAtmCircuitOamVci=usdAtmCircuitOamVci, usdAtmSubIfSvcConfigEntry=usdAtmSubIfSvcConfigEntry, usdAtmCompliance4=usdAtmCompliance4, usdAtmGroup4=usdAtmGroup4, UsdAtmNbmaMapNameOrNull=UsdAtmNbmaMapNameOrNull, usdAtmSubIfLowerIfIndex=usdAtmSubIfLowerIfIndex, usdAtmSubIfVccTrafficShapingEntry=usdAtmSubIfVccTrafficShapingEntry, usdAtmSubIfSvcConfigCdvt=usdAtmSubIfSvcConfigCdvt, usdAtmSubIfVccType=usdAtmSubIfVccType, usdAtmVpPingTimeOut=usdAtmVpPingTimeOut, usdAtmNbmaMapRowStatus=usdAtmNbmaMapRowStatus, usdAtmPing=usdAtmPing, usdAtmTrafficShapingGroup=usdAtmTrafficShapingGroup, usdAtmNextIfIndex=usdAtmNextIfIndex, usdAtmSubIfGroup2=usdAtmSubIfGroup2, usdAtmIfCapabilityOamCellFilter=usdAtmIfCapabilityOamCellFilter, usdAtmVpTunnelEntry=usdAtmVpTunnelEntry, usdAtmCircuitInOamCellsDropped=usdAtmCircuitInOamCellsDropped, usdAtmSubIfRowStatus=usdAtmSubIfRowStatus, usdAtmObjects=usdAtmObjects, usdAtmVcPingTimeOut=usdAtmVcPingTimeOut, usdAtmCompliance2=usdAtmCompliance2, usdAtmIfEntry=usdAtmIfEntry, usdAtmIfCapabilityDefaultVcPerVp=usdAtmIfCapabilityDefaultVcPerVp, usdAtmIfVcCount=usdAtmIfVcCount, usdAtmIfCapabilityMaxVcd=usdAtmIfCapabilityMaxVcd, usdAtmAal5NextIfIndex=usdAtmAal5NextIfIndex, usdAtmCircuitOamAdminStatus=usdAtmCircuitOamAdminStatus, usdAtmPvcStatsOutCellErrors=usdAtmPvcStatsOutCellErrors, usdAtmPvcStatsOutCellOctets=usdAtmPvcStatsOutCellOctets, usdAtmSubIfSvcConfigMbs=usdAtmSubIfSvcConfigMbs, usdAtmPvcStatsIfIndex=usdAtmPvcStatsIfIndex, usdAtmPvcStatsVpi=usdAtmPvcStatsVpi, usdAtmNbmaMapVpi=usdAtmNbmaMapVpi, usdAtmNbmaMapListEntry=usdAtmNbmaMapListEntry, usdAtmSubIfVccTrafficShapingPacketShaping=usdAtmSubIfVccTrafficShapingPacketShaping, usdAtmCompliance5=usdAtmCompliance5, usdAtmNbmaMapBroadcast=usdAtmNbmaMapBroadcast, usdAtmVcPingProbeCount=usdAtmVcPingProbeCount, usdAtmPvcStatsInCells=usdAtmPvcStatsInCells, usdAtmSubIfVccServiceCategory=usdAtmSubIfVccServiceCategory, usdAtmCircuitOamIfIndex=usdAtmCircuitOamIfIndex, usdAtmVpPingMaxRtt=usdAtmVpPingMaxRtt, usdAtmAal5IfLowerIfIndex=usdAtmAal5IfLowerIfIndex, usdAtmSubIfSvcConfigScr=usdAtmSubIfSvcConfigScr, usdAtmNbmaMapVci=usdAtmNbmaMapVci, usdAtmSubIfSvcConfigObserve=usdAtmSubIfSvcConfigObserve, usdAtmCircuitOamLoopbackOperStatus=usdAtmCircuitOamLoopbackOperStatus, usdAtmSubIfAddress=usdAtmSubIfAddress, usdAtmCircuitInOamF5EndToEndLoopbackCells=usdAtmCircuitInOamF5EndToEndLoopbackCells, usdAtmAal5Group=usdAtmAal5Group, usdAtmIfLayer=usdAtmIfLayer, usdAtmPvcStatsinPacketErrors=usdAtmPvcStatsinPacketErrors, usdAtmSubIfTable=usdAtmSubIfTable, usdAtmAal5IfTable=usdAtmAal5IfTable, usdAtmSubIfDistinguisher=usdAtmSubIfDistinguisher, usdAtmPvcStatsVci=usdAtmPvcStatsVci, usdAtmIfCapabilityNumVpiVciBits=usdAtmIfCapabilityNumVpiVciBits, usdAtmIfIlmiAdminState=usdAtmIfIlmiAdminState, usdAtmSubIfVccVcd=usdAtmSubIfVccVcd, usdAtmIfCapabilityOam=usdAtmIfCapabilityOam, usdAtmPvcStatsInPackets=usdAtmPvcStatsInPackets, usdAtmSubIfVccTrafficShapingCdvt=usdAtmSubIfVccTrafficShapingCdvt, usdAtmNbmaMapListRowStatus=usdAtmNbmaMapListRowStatus, usdAtmIfSvcSignallingTable=usdAtmIfSvcSignallingTable, usdAtmAal5IfIndex=usdAtmAal5IfIndex, usdAtmPvcStatsInPacketOctets=usdAtmPvcStatsInPacketOctets, PYSNMP_MODULE_ID=usdAtmMIB, usdAtmVcPingTestCompleted=usdAtmVcPingTestCompleted, usdAtmAal5IfRowStatus=usdAtmAal5IfRowStatus, usdAtmVcPingSentProbes=usdAtmVcPingSentProbes, usdAtmNbmaMapGroup=usdAtmNbmaMapGroup, usdAtmSubIfVccVpi=usdAtmSubIfVccVpi, usdAtmSubIfSvcConfigTable=usdAtmSubIfSvcConfigTable, usdAtmPvcStatisticsTable=usdAtmPvcStatisticsTable, usdAtmNbmaMapListTable=usdAtmNbmaMapListTable, usdAtmPvcStatsInPacketUnknownProtocol=usdAtmPvcStatsInPacketUnknownProtocol, usdAtmVpPingMinRtt=usdAtmVpPingMinRtt, usdAtmPvcStatsOutPacketErrors=usdAtmPvcStatsOutPacketErrors, usdAtmSubIfGroup3=usdAtmSubIfGroup3, usdAtmIfIndex=usdAtmIfIndex, usdAtmGroup=usdAtmGroup, usdAtmNbma=usdAtmNbma, usdAtmSubIfEntry=usdAtmSubIfEntry, usdAtmIfSvcSignallingEntry=usdAtmIfSvcSignallingEntry, usdAtmIfCacAdminState=usdAtmIfCacAdminState, usdAtmCircuitInOamF5AisCells=usdAtmCircuitInOamF5AisCells, usdAtmCompliances=usdAtmCompliances, usdAtmVcPingEntry=usdAtmVcPingEntry, usdAtmIfCacAvailableBandwidth=usdAtmIfCacAvailableBandwidth, usdAtmVpTunnelVpi=usdAtmVpTunnelVpi, usdAtmIfTable=usdAtmIfTable, usdAtmVpTunnelServiceCategory=usdAtmVpTunnelServiceCategory, usdAtmIfOutCells=usdAtmIfOutCells, usdAtmCompliance=usdAtmCompliance, usdAtmGroup3=usdAtmGroup3, usdAtmSubIfSvcRowStatus=usdAtmSubIfSvcRowStatus, usdAtmPingTestOamSeg=usdAtmPingTestOamSeg, usdAtmVpPingProbeCount=usdAtmVpPingProbeCount, usdAtmPvcStatsInPacketOctetDiscards=usdAtmPvcStatsInPacketOctetDiscards, usdAtmNbmaMapTable=usdAtmNbmaMapTable, usdAtmPvcStatsInPacketDiscards=usdAtmPvcStatsInPacketDiscards, usdAtmSubIfVccPcr=usdAtmSubIfVccPcr, usdAtmSubIfSvcConfigPcr=usdAtmSubIfSvcConfigPcr, usdAtmCircuitOutOamF5SegmentLoopbackCells=usdAtmCircuitOutOamF5SegmentLoopbackCells, usdAtmSubIfVccTrafficShapingPoliceObserve=usdAtmSubIfVccTrafficShapingPoliceObserve, usdAtmIfCapabilityEntry=usdAtmIfCapabilityEntry, usdAtmIfSvcSignallingVcd=usdAtmIfSvcSignallingVcd, usdAtmSubIfVccRowStatus=usdAtmSubIfVccRowStatus, usdAtmSubIfLayer=usdAtmSubIfLayer, usdAtmNbmaMapIpAddress=usdAtmNbmaMapIpAddress, usdAtmVpPingTestCompleted=usdAtmVpPingTestCompleted, usdAtmCircuitInOamF5Cells=usdAtmCircuitInOamF5Cells, usdAtmVcPingMaxRtt=usdAtmVcPingMaxRtt, usdAtmSubIfInverseArp=usdAtmSubIfInverseArp, usdAtmVcPingAverageRtt=usdAtmVcPingAverageRtt, usdAtmVpTunnelRowStatus=usdAtmVpTunnelRowStatus, usdAtmGroup2=usdAtmGroup2, usdAtmSubIfSvcConfigPacketDiscard=usdAtmSubIfSvcConfigPacketDiscard, usdAtmPvcStatsOutPacketOctets=usdAtmPvcStatsOutPacketOctets, usdAtmSubIfVccTable=usdAtmSubIfVccTable, usdAtmNbmaMapEntry=usdAtmNbmaMapEntry, usdAtmVpPingControlGroup=usdAtmVpPingControlGroup, usdAtmIfRowStatus=usdAtmIfRowStatus, usdAtmIfInCells=usdAtmIfInCells, usdAtmNbmaMapName=usdAtmNbmaMapName, usdAtmVpTunnelGroup=usdAtmVpTunnelGroup, usdAtmSubIfVccTrafficShapingClp0=usdAtmSubIfVccTrafficShapingClp0, usdAtmSubIfVccTrafficShapingTable=usdAtmSubIfVccTrafficShapingTable, usdAtmIfIlmiVci=usdAtmIfIlmiVci, usdAtmCircuitOutOamF5RdiCells=usdAtmCircuitOutOamF5RdiCells, usdAtmVpPingProbeResponses=usdAtmVpPingProbeResponses, usdAtmIfCapabilityMaxVpi=usdAtmIfCapabilityMaxVpi, usdAtmIfCacUsedBandwidthUpper=usdAtmIfCacUsedBandwidthUpper, usdAtmConformance=usdAtmConformance, usdAtmNbmaMapIfIndex=usdAtmNbmaMapIfIndex, usdAtmSubIfNbma=usdAtmSubIfNbma, usdAtmSubIfVccMbs=usdAtmSubIfVccMbs, usdAtmIfCacSubscriptionBandwidth=usdAtmIfCacSubscriptionBandwidth, usdAtmCircuitOutOamF5Cells=usdAtmCircuitOutOamF5Cells, usdAtmVcPingStartTime=usdAtmVcPingStartTime, usdAtmSubIfSvcConfigClp0=usdAtmSubIfSvcConfigClp0, usdAtmCircuitOamVpi=usdAtmCircuitOamVpi)
