#
# PySNMP MIB module CISCO-BGP4-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CISCO-BGP4-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:33:59 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ValueRangeConstraint, ValueSizeConstraint, SingleValueConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ValueRangeConstraint", "ValueSizeConstraint", "SingleValueConstraint", "ConstraintsIntersection")
bgpPeerState, bgpPeerLastError, bgpPeerEntry, bgpPeerRemoteAddr = mibBuilder.importSymbols("BGP4-MIB", "bgpPeerState", "bgpPeerLastError", "bgpPeerEntry", "bgpPeerRemoteAddr")
ciscoMgmt, = mibBuilder.importSymbols("CISCO-SMI", "ciscoMgmt")
InetPortNumber, InetAddressType, InetAutonomousSystemNumber, InetAddress = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetPortNumber", "InetAddressType", "InetAutonomousSystemNumber", "InetAddress")
SnmpAdminString, = mibBuilder.importSymbols("SNMP-FRAMEWORK-MIB", "SnmpAdminString")
NotificationGroup, ObjectGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ObjectGroup", "ModuleCompliance")
Integer32, Bits, iso, ModuleIdentity, TimeTicks, Gauge32, MibScalar, MibTable, MibTableRow, MibTableColumn, MibIdentifier, Unsigned32, IpAddress, Counter32, ObjectIdentity, NotificationType, Counter64 = mibBuilder.importSymbols("SNMPv2-SMI", "Integer32", "Bits", "iso", "ModuleIdentity", "TimeTicks", "Gauge32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "MibIdentifier", "Unsigned32", "IpAddress", "Counter32", "ObjectIdentity", "NotificationType", "Counter64")
DisplayString, TextualConvention, TruthValue = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention", "TruthValue")
ciscoBgp4MIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 9, 9, 187))
ciscoBgp4MIB.setRevisions(('2010-09-30 00:00', '2003-02-24 00:00', '2002-12-19 00:00', '2001-08-13 00:00',))
if mibBuilder.loadTexts: ciscoBgp4MIB.setLastUpdated('201009300000Z')
if mibBuilder.loadTexts: ciscoBgp4MIB.setOrganization('Cisco Systems, Inc.')
ciscoBgp4MIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 187, 1))
cbgpRoute = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 187, 1, 1))
cbgpPeer = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 187, 1, 2))
cbgpGlobal = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 187, 1, 3))
class CbgpSafi(TextualConvention, Integer32):
    reference = 'RFC-2858: Multiprotocol Extensions for BGP-4, RFC-2547: BGP/MPLS VPNs'
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 128))
    namedValues = NamedValues(("unicast", 1), ("multicast", 2), ("unicastAndMulticast", 3), ("vpn", 128))

class CbgpNetworkAddress(TextualConvention, OctetString):
    reference = 'RFC 2858, Multiprotocol Extensions for BGP-4. RFC 2547, Section 4.1, BGP/MPLS VPNs.'
    status = 'current'
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(0, 255)

cbgpNotifsEnable = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 187, 1, 3, 1), Bits().clone(namedValues=NamedValues(("notifsEnable", 0), ("notifsPeer2Enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cbgpNotifsEnable.setStatus('current')
cbgpLocalAs = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 187, 1, 3, 2), InetAutonomousSystemNumber()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbgpLocalAs.setStatus('current')
cbgpRouteTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 187, 1, 1, 1), )
if mibBuilder.loadTexts: cbgpRouteTable.setStatus('current')
cbgpRouteEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 187, 1, 1, 1, 1), ).setIndexNames((0, "CISCO-BGP4-MIB", "cbgpRouteAfi"), (0, "CISCO-BGP4-MIB", "cbgpRouteSafi"), (0, "CISCO-BGP4-MIB", "cbgpRoutePeerType"), (0, "CISCO-BGP4-MIB", "cbgpRoutePeer"), (0, "CISCO-BGP4-MIB", "cbgpRouteAddrPrefix"), (0, "CISCO-BGP4-MIB", "cbgpRouteAddrPrefixLen"))
if mibBuilder.loadTexts: cbgpRouteEntry.setStatus('current')
cbgpRouteAfi = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 187, 1, 1, 1, 1, 1), InetAddressType())
if mibBuilder.loadTexts: cbgpRouteAfi.setStatus('current')
cbgpRouteSafi = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 187, 1, 1, 1, 1, 2), CbgpSafi())
if mibBuilder.loadTexts: cbgpRouteSafi.setStatus('current')
cbgpRoutePeerType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 187, 1, 1, 1, 1, 3), InetAddressType())
if mibBuilder.loadTexts: cbgpRoutePeerType.setStatus('current')
cbgpRoutePeer = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 187, 1, 1, 1, 1, 4), InetAddress())
if mibBuilder.loadTexts: cbgpRoutePeer.setStatus('current')
cbgpRouteAddrPrefix = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 187, 1, 1, 1, 1, 5), CbgpNetworkAddress())
if mibBuilder.loadTexts: cbgpRouteAddrPrefix.setStatus('current')
cbgpRouteAddrPrefixLen = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 187, 1, 1, 1, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2040)))
if mibBuilder.loadTexts: cbgpRouteAddrPrefixLen.setStatus('current')
cbgpRouteOrigin = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 187, 1, 1, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("igp", 1), ("egp", 2), ("incomplete", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbgpRouteOrigin.setStatus('current')
cbgpRouteASPathSegment = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 187, 1, 1, 1, 1, 8), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbgpRouteASPathSegment.setStatus('current')
cbgpRouteNextHop = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 187, 1, 1, 1, 1, 9), CbgpNetworkAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbgpRouteNextHop.setStatus('current')
cbgpRouteMedPresent = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 187, 1, 1, 1, 1, 10), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbgpRouteMedPresent.setStatus('current')
cbgpRouteMultiExitDisc = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 187, 1, 1, 1, 1, 11), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbgpRouteMultiExitDisc.setStatus('current')
cbgpRouteLocalPrefPresent = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 187, 1, 1, 1, 1, 12), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbgpRouteLocalPrefPresent.setStatus('current')
cbgpRouteLocalPref = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 187, 1, 1, 1, 1, 13), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbgpRouteLocalPref.setStatus('current')
cbgpRouteAtomicAggregate = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 187, 1, 1, 1, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("lessSpecificRouteNotSelected", 1), ("lessSpecificRouteSelected", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbgpRouteAtomicAggregate.setStatus('current')
cbgpRouteAggregatorAS = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 187, 1, 1, 1, 1, 15), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbgpRouteAggregatorAS.setStatus('current')
cbgpRouteAggregatorAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 187, 1, 1, 1, 1, 16), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbgpRouteAggregatorAddrType.setStatus('current')
cbgpRouteAggregatorAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 187, 1, 1, 1, 1, 17), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbgpRouteAggregatorAddr.setStatus('current')
cbgpRouteBest = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 187, 1, 1, 1, 1, 18), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbgpRouteBest.setStatus('current')
cbgpRouteUnknownAttr = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 187, 1, 1, 1, 1, 19), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbgpRouteUnknownAttr.setStatus('current')
cbgpPeerTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 187, 1, 2, 1), )
if mibBuilder.loadTexts: cbgpPeerTable.setStatus('current')
cbgpPeerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 187, 1, 2, 1, 1), )
bgpPeerEntry.registerAugmentions(("CISCO-BGP4-MIB", "cbgpPeerEntry"))
cbgpPeerEntry.setIndexNames(*bgpPeerEntry.getIndexNames())
if mibBuilder.loadTexts: cbgpPeerEntry.setStatus('current')
cbgpPeerPrefixAccepted = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 187, 1, 2, 1, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbgpPeerPrefixAccepted.setStatus('deprecated')
cbgpPeerPrefixDenied = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 187, 1, 2, 1, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbgpPeerPrefixDenied.setStatus('deprecated')
cbgpPeerPrefixLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 187, 1, 2, 1, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cbgpPeerPrefixLimit.setStatus('deprecated')
cbgpPeerPrefixAdvertised = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 187, 1, 2, 1, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbgpPeerPrefixAdvertised.setStatus('deprecated')
cbgpPeerPrefixSuppressed = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 187, 1, 2, 1, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbgpPeerPrefixSuppressed.setStatus('deprecated')
cbgpPeerPrefixWithdrawn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 187, 1, 2, 1, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbgpPeerPrefixWithdrawn.setStatus('deprecated')
cbgpPeerLastErrorTxt = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 187, 1, 2, 1, 1, 7), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbgpPeerLastErrorTxt.setStatus('current')
cbgpPeerPrevState = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 187, 1, 2, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("none", 0), ("idle", 1), ("connect", 2), ("active", 3), ("opensent", 4), ("openconfirm", 5), ("established", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbgpPeerPrevState.setStatus('current')
cbgpPeerCapsTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 187, 1, 2, 2), )
if mibBuilder.loadTexts: cbgpPeerCapsTable.setStatus('current')
cbgpPeerCapsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 187, 1, 2, 2, 1), ).setIndexNames((0, "BGP4-MIB", "bgpPeerRemoteAddr"), (0, "CISCO-BGP4-MIB", "cbgpPeerCapCode"), (0, "CISCO-BGP4-MIB", "cbgpPeerCapIndex"))
if mibBuilder.loadTexts: cbgpPeerCapsEntry.setStatus('current')
cbgpPeerCapCode = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 187, 1, 2, 2, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 64, 128))).clone(namedValues=NamedValues(("multiProtocol", 1), ("routeRefresh", 2), ("gracefulRestart", 64), ("routeRefreshOld", 128))))
if mibBuilder.loadTexts: cbgpPeerCapCode.setStatus('current')
cbgpPeerCapIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 187, 1, 2, 2, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 128)))
if mibBuilder.loadTexts: cbgpPeerCapIndex.setStatus('current')
cbgpPeerCapValue = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 187, 1, 2, 2, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbgpPeerCapValue.setStatus('current')
cbgpPeerAddrFamilyTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 187, 1, 2, 3), )
if mibBuilder.loadTexts: cbgpPeerAddrFamilyTable.setStatus('current')
cbgpPeerAddrFamilyEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 187, 1, 2, 3, 1), ).setIndexNames((0, "BGP4-MIB", "bgpPeerRemoteAddr"), (0, "CISCO-BGP4-MIB", "cbgpPeerAddrFamilyAfi"), (0, "CISCO-BGP4-MIB", "cbgpPeerAddrFamilySafi"))
if mibBuilder.loadTexts: cbgpPeerAddrFamilyEntry.setStatus('current')
cbgpPeerAddrFamilyAfi = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 187, 1, 2, 3, 1, 1), InetAddressType())
if mibBuilder.loadTexts: cbgpPeerAddrFamilyAfi.setStatus('current')
cbgpPeerAddrFamilySafi = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 187, 1, 2, 3, 1, 2), CbgpSafi())
if mibBuilder.loadTexts: cbgpPeerAddrFamilySafi.setStatus('current')
cbgpPeerAddrFamilyName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 187, 1, 2, 3, 1, 3), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbgpPeerAddrFamilyName.setStatus('current')
cbgpPeerAddrFamilyPrefixTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 187, 1, 2, 4), )
if mibBuilder.loadTexts: cbgpPeerAddrFamilyPrefixTable.setStatus('current')
cbgpPeerAddrFamilyPrefixEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 187, 1, 2, 4, 1), ).setIndexNames((0, "BGP4-MIB", "bgpPeerRemoteAddr"), (0, "CISCO-BGP4-MIB", "cbgpPeerAddrFamilyAfi"), (0, "CISCO-BGP4-MIB", "cbgpPeerAddrFamilySafi"))
if mibBuilder.loadTexts: cbgpPeerAddrFamilyPrefixEntry.setStatus('current')
cbgpPeerAcceptedPrefixes = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 187, 1, 2, 4, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbgpPeerAcceptedPrefixes.setStatus('current')
cbgpPeerDeniedPrefixes = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 187, 1, 2, 4, 1, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbgpPeerDeniedPrefixes.setStatus('current')
cbgpPeerPrefixAdminLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 187, 1, 2, 4, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cbgpPeerPrefixAdminLimit.setStatus('current')
cbgpPeerPrefixThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 187, 1, 2, 4, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 100))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cbgpPeerPrefixThreshold.setStatus('current')
cbgpPeerPrefixClearThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 187, 1, 2, 4, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbgpPeerPrefixClearThreshold.setStatus('current')
cbgpPeerAdvertisedPrefixes = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 187, 1, 2, 4, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbgpPeerAdvertisedPrefixes.setStatus('current')
cbgpPeerSuppressedPrefixes = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 187, 1, 2, 4, 1, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbgpPeerSuppressedPrefixes.setStatus('current')
cbgpPeerWithdrawnPrefixes = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 187, 1, 2, 4, 1, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbgpPeerWithdrawnPrefixes.setStatus('current')
cbgpPeer2Table = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 187, 1, 2, 5), )
if mibBuilder.loadTexts: cbgpPeer2Table.setStatus('current')
cbgpPeer2Entry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 187, 1, 2, 5, 1), ).setIndexNames((0, "CISCO-BGP4-MIB", "cbgpPeer2Type"), (0, "CISCO-BGP4-MIB", "cbgpPeer2RemoteAddr"))
if mibBuilder.loadTexts: cbgpPeer2Entry.setStatus('current')
cbgpPeer2Type = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 187, 1, 2, 5, 1, 1), InetAddressType())
if mibBuilder.loadTexts: cbgpPeer2Type.setStatus('current')
cbgpPeer2RemoteAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 187, 1, 2, 5, 1, 2), InetAddress())
if mibBuilder.loadTexts: cbgpPeer2RemoteAddr.setStatus('current')
cbgpPeer2State = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 187, 1, 2, 5, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("idle", 1), ("connect", 2), ("active", 3), ("opensent", 4), ("openconfirm", 5), ("established", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbgpPeer2State.setStatus('current')
cbgpPeer2AdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 187, 1, 2, 5, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("stop", 1), ("start", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cbgpPeer2AdminStatus.setStatus('current')
cbgpPeer2NegotiatedVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 187, 1, 2, 5, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbgpPeer2NegotiatedVersion.setStatus('current')
cbgpPeer2LocalAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 187, 1, 2, 5, 1, 6), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbgpPeer2LocalAddr.setStatus('current')
cbgpPeer2LocalPort = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 187, 1, 2, 5, 1, 7), InetPortNumber()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbgpPeer2LocalPort.setStatus('current')
cbgpPeer2LocalAs = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 187, 1, 2, 5, 1, 8), InetAutonomousSystemNumber()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbgpPeer2LocalAs.setStatus('current')
cbgpPeer2LocalIdentifier = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 187, 1, 2, 5, 1, 9), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbgpPeer2LocalIdentifier.setStatus('current')
cbgpPeer2RemotePort = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 187, 1, 2, 5, 1, 10), InetPortNumber()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbgpPeer2RemotePort.setStatus('current')
cbgpPeer2RemoteAs = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 187, 1, 2, 5, 1, 11), InetAutonomousSystemNumber()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbgpPeer2RemoteAs.setStatus('current')
cbgpPeer2RemoteIdentifier = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 187, 1, 2, 5, 1, 12), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbgpPeer2RemoteIdentifier.setStatus('current')
cbgpPeer2InUpdates = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 187, 1, 2, 5, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbgpPeer2InUpdates.setStatus('current')
cbgpPeer2OutUpdates = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 187, 1, 2, 5, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbgpPeer2OutUpdates.setStatus('current')
cbgpPeer2InTotalMessages = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 187, 1, 2, 5, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbgpPeer2InTotalMessages.setStatus('current')
cbgpPeer2OutTotalMessages = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 187, 1, 2, 5, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbgpPeer2OutTotalMessages.setStatus('current')
cbgpPeer2LastError = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 187, 1, 2, 5, 1, 17), OctetString().subtype(subtypeSpec=ValueSizeConstraint(2, 2)).setFixedLength(2)).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbgpPeer2LastError.setStatus('current')
cbgpPeer2FsmEstablishedTransitions = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 187, 1, 2, 5, 1, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbgpPeer2FsmEstablishedTransitions.setStatus('current')
cbgpPeer2FsmEstablishedTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 187, 1, 2, 5, 1, 19), Gauge32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: cbgpPeer2FsmEstablishedTime.setStatus('current')
cbgpPeer2ConnectRetryInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 187, 1, 2, 5, 1, 20), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: cbgpPeer2ConnectRetryInterval.setStatus('current')
cbgpPeer2HoldTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 187, 1, 2, 5, 1, 21), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(3, 65535), ))).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: cbgpPeer2HoldTime.setStatus('current')
cbgpPeer2KeepAlive = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 187, 1, 2, 5, 1, 22), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 21845), ))).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: cbgpPeer2KeepAlive.setStatus('current')
cbgpPeer2HoldTimeConfigured = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 187, 1, 2, 5, 1, 23), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(3, 65535), ))).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: cbgpPeer2HoldTimeConfigured.setStatus('current')
cbgpPeer2KeepAliveConfigured = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 187, 1, 2, 5, 1, 24), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 21845), ))).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: cbgpPeer2KeepAliveConfigured.setStatus('current')
cbgpPeer2MinASOriginationInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 187, 1, 2, 5, 1, 25), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: cbgpPeer2MinASOriginationInterval.setStatus('current')
cbgpPeer2MinRouteAdvertisementInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 187, 1, 2, 5, 1, 26), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: cbgpPeer2MinRouteAdvertisementInterval.setStatus('current')
cbgpPeer2InUpdateElapsedTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 187, 1, 2, 5, 1, 27), Gauge32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: cbgpPeer2InUpdateElapsedTime.setStatus('current')
cbgpPeer2LastErrorTxt = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 187, 1, 2, 5, 1, 28), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbgpPeer2LastErrorTxt.setStatus('current')
cbgpPeer2PrevState = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 187, 1, 2, 5, 1, 29), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("none", 0), ("idle", 1), ("connect", 2), ("active", 3), ("opensent", 4), ("openconfirm", 5), ("established", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbgpPeer2PrevState.setStatus('current')
cbgpPeer2CapsTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 187, 1, 2, 6), )
if mibBuilder.loadTexts: cbgpPeer2CapsTable.setStatus('current')
cbgpPeer2CapsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 187, 1, 2, 6, 1), ).setIndexNames((0, "CISCO-BGP4-MIB", "cbgpPeer2Type"), (0, "CISCO-BGP4-MIB", "cbgpPeer2RemoteAddr"), (0, "CISCO-BGP4-MIB", "cbgpPeer2CapCode"), (0, "CISCO-BGP4-MIB", "cbgpPeer2CapIndex"))
if mibBuilder.loadTexts: cbgpPeer2CapsEntry.setStatus('current')
cbgpPeer2CapCode = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 187, 1, 2, 6, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 64, 65, 69, 128))).clone(namedValues=NamedValues(("multiProtocol", 1), ("routeRefresh", 2), ("gracefulRestart", 64), ("fourByteAs", 65), ("addPath", 69), ("routeRefreshOld", 128))))
if mibBuilder.loadTexts: cbgpPeer2CapCode.setStatus('current')
cbgpPeer2CapIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 187, 1, 2, 6, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 128)))
if mibBuilder.loadTexts: cbgpPeer2CapIndex.setStatus('current')
cbgpPeer2CapValue = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 187, 1, 2, 6, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbgpPeer2CapValue.setStatus('current')
cbgpPeer2AddrFamilyTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 187, 1, 2, 7), )
if mibBuilder.loadTexts: cbgpPeer2AddrFamilyTable.setStatus('current')
cbgpPeer2AddrFamilyEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 187, 1, 2, 7, 1), ).setIndexNames((0, "CISCO-BGP4-MIB", "cbgpPeer2Type"), (0, "CISCO-BGP4-MIB", "cbgpPeer2RemoteAddr"), (0, "CISCO-BGP4-MIB", "cbgpPeer2AddrFamilyAfi"), (0, "CISCO-BGP4-MIB", "cbgpPeer2AddrFamilySafi"))
if mibBuilder.loadTexts: cbgpPeer2AddrFamilyEntry.setStatus('current')
cbgpPeer2AddrFamilyAfi = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 187, 1, 2, 7, 1, 1), InetAddressType())
if mibBuilder.loadTexts: cbgpPeer2AddrFamilyAfi.setStatus('current')
cbgpPeer2AddrFamilySafi = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 187, 1, 2, 7, 1, 2), CbgpSafi())
if mibBuilder.loadTexts: cbgpPeer2AddrFamilySafi.setStatus('current')
cbgpPeer2AddrFamilyName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 187, 1, 2, 7, 1, 3), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbgpPeer2AddrFamilyName.setStatus('current')
cbgpPeer2AddrFamilyPrefixTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 187, 1, 2, 8), )
if mibBuilder.loadTexts: cbgpPeer2AddrFamilyPrefixTable.setStatus('current')
cbgpPeer2AddrFamilyPrefixEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 187, 1, 2, 8, 1), ).setIndexNames((0, "CISCO-BGP4-MIB", "cbgpPeer2Type"), (0, "CISCO-BGP4-MIB", "cbgpPeer2RemoteAddr"), (0, "CISCO-BGP4-MIB", "cbgpPeer2AddrFamilyAfi"), (0, "CISCO-BGP4-MIB", "cbgpPeer2AddrFamilySafi"))
if mibBuilder.loadTexts: cbgpPeer2AddrFamilyPrefixEntry.setStatus('current')
cbgpPeer2AcceptedPrefixes = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 187, 1, 2, 8, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbgpPeer2AcceptedPrefixes.setStatus('current')
cbgpPeer2DeniedPrefixes = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 187, 1, 2, 8, 1, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbgpPeer2DeniedPrefixes.setStatus('current')
cbgpPeer2PrefixAdminLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 187, 1, 2, 8, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cbgpPeer2PrefixAdminLimit.setStatus('current')
cbgpPeer2PrefixThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 187, 1, 2, 8, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 100))).setUnits('percent').setMaxAccess("readwrite")
if mibBuilder.loadTexts: cbgpPeer2PrefixThreshold.setStatus('current')
cbgpPeer2PrefixClearThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 187, 1, 2, 8, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 100))).setUnits('percent').setMaxAccess("readonly")
if mibBuilder.loadTexts: cbgpPeer2PrefixClearThreshold.setStatus('current')
cbgpPeer2AdvertisedPrefixes = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 187, 1, 2, 8, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbgpPeer2AdvertisedPrefixes.setStatus('current')
cbgpPeer2SuppressedPrefixes = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 187, 1, 2, 8, 1, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbgpPeer2SuppressedPrefixes.setStatus('current')
cbgpPeer2WithdrawnPrefixes = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 187, 1, 2, 8, 1, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbgpPeer2WithdrawnPrefixes.setStatus('current')
ciscoBgp4NotifyPrefix = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 187, 0))
cbgpFsmStateChange = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 187, 0, 1)).setObjects(("BGP4-MIB", "bgpPeerLastError"), ("BGP4-MIB", "bgpPeerState"), ("CISCO-BGP4-MIB", "cbgpPeerLastErrorTxt"), ("CISCO-BGP4-MIB", "cbgpPeerPrevState"))
if mibBuilder.loadTexts: cbgpFsmStateChange.setStatus('current')
cbgpBackwardTransition = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 187, 0, 2)).setObjects(("BGP4-MIB", "bgpPeerLastError"), ("BGP4-MIB", "bgpPeerState"), ("CISCO-BGP4-MIB", "cbgpPeerLastErrorTxt"), ("CISCO-BGP4-MIB", "cbgpPeerPrevState"))
if mibBuilder.loadTexts: cbgpBackwardTransition.setStatus('current')
cbgpPrefixThresholdExceeded = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 187, 0, 3)).setObjects(("CISCO-BGP4-MIB", "cbgpPeerPrefixAdminLimit"), ("CISCO-BGP4-MIB", "cbgpPeerPrefixThreshold"))
if mibBuilder.loadTexts: cbgpPrefixThresholdExceeded.setStatus('current')
cbgpPrefixThresholdClear = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 187, 0, 4)).setObjects(("CISCO-BGP4-MIB", "cbgpPeerPrefixAdminLimit"), ("CISCO-BGP4-MIB", "cbgpPeerPrefixClearThreshold"))
if mibBuilder.loadTexts: cbgpPrefixThresholdClear.setStatus('current')
cbgpPeer2EstablishedNotification = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 187, 0, 5)).setObjects(("CISCO-BGP4-MIB", "cbgpPeer2LastError"), ("CISCO-BGP4-MIB", "cbgpPeer2State"))
if mibBuilder.loadTexts: cbgpPeer2EstablishedNotification.setStatus('current')
cbgpPeer2BackwardTransNotification = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 187, 0, 6)).setObjects(("CISCO-BGP4-MIB", "cbgpPeer2LastError"), ("CISCO-BGP4-MIB", "cbgpPeer2State"))
if mibBuilder.loadTexts: cbgpPeer2BackwardTransNotification.setStatus('current')
cbgpPeer2FsmStateChange = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 187, 0, 7)).setObjects(("CISCO-BGP4-MIB", "cbgpPeer2LastError"), ("CISCO-BGP4-MIB", "cbgpPeer2State"), ("CISCO-BGP4-MIB", "cbgpPeer2LastErrorTxt"), ("CISCO-BGP4-MIB", "cbgpPeer2PrevState"))
if mibBuilder.loadTexts: cbgpPeer2FsmStateChange.setStatus('current')
cbgpPeer2BackwardTransition = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 187, 0, 8)).setObjects(("CISCO-BGP4-MIB", "cbgpPeer2LastError"), ("CISCO-BGP4-MIB", "cbgpPeer2State"), ("CISCO-BGP4-MIB", "cbgpPeer2LastErrorTxt"), ("CISCO-BGP4-MIB", "cbgpPeer2PrevState"))
if mibBuilder.loadTexts: cbgpPeer2BackwardTransition.setStatus('current')
cbgpPeer2PrefixThresholdExceeded = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 187, 0, 9)).setObjects(("CISCO-BGP4-MIB", "cbgpPeer2PrefixAdminLimit"), ("CISCO-BGP4-MIB", "cbgpPeer2PrefixThreshold"))
if mibBuilder.loadTexts: cbgpPeer2PrefixThresholdExceeded.setStatus('current')
cbgpPeer2PrefixThresholdClear = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 187, 0, 10)).setObjects(("CISCO-BGP4-MIB", "cbgpPeer2PrefixAdminLimit"), ("CISCO-BGP4-MIB", "cbgpPeer2PrefixClearThreshold"))
if mibBuilder.loadTexts: cbgpPeer2PrefixThresholdClear.setStatus('current')
ciscoBgp4NotificationPrefix = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 187, 2))
ciscoBgp4MIBConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 187, 3))
ciscoBgp4MIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 187, 3, 1))
ciscoBgp4MIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 187, 3, 2))
ciscoBgp4MIBCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 187, 3, 1, 1)).setObjects(("CISCO-BGP4-MIB", "ciscoBgp4RouteGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoBgp4MIBCompliance = ciscoBgp4MIBCompliance.setStatus('deprecated')
ciscoBgp4MIBComplianceRev1 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 187, 3, 1, 2)).setObjects(("CISCO-BGP4-MIB", "ciscoBgp4RouteGroup"), ("CISCO-BGP4-MIB", "ciscoBgp4PeerGroup"), ("CISCO-BGP4-MIB", "ciscoBgp4NotificationsGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoBgp4MIBComplianceRev1 = ciscoBgp4MIBComplianceRev1.setStatus('deprecated')
ciscoBgp4MIBComplianceRev2 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 187, 3, 1, 3)).setObjects(("CISCO-BGP4-MIB", "ciscoBgp4RouteGroup"), ("CISCO-BGP4-MIB", "ciscoBgp4PeerGroup1"), ("CISCO-BGP4-MIB", "ciscoBgp4NotificationsGroup1"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoBgp4MIBComplianceRev2 = ciscoBgp4MIBComplianceRev2.setStatus('deprecated')
ciscoBgp4MIBComplianceRev3 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 187, 3, 1, 4)).setObjects(("CISCO-BGP4-MIB", "ciscoBgp4RouteGroup"), ("CISCO-BGP4-MIB", "ciscoBgp4PeerGroup1"), ("CISCO-BGP4-MIB", "ciscoBgp4GlobalGroup"), ("CISCO-BGP4-MIB", "ciscoBgp4NotificationsGroup1"), ("CISCO-BGP4-MIB", "ciscoBgp4Peer2Group"), ("CISCO-BGP4-MIB", "ciscoBgp4Peer2NotificationsGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoBgp4MIBComplianceRev3 = ciscoBgp4MIBComplianceRev3.setStatus('current')
ciscoBgp4RouteGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 187, 3, 2, 1)).setObjects(("CISCO-BGP4-MIB", "cbgpRouteOrigin"), ("CISCO-BGP4-MIB", "cbgpRouteASPathSegment"), ("CISCO-BGP4-MIB", "cbgpRouteNextHop"), ("CISCO-BGP4-MIB", "cbgpRouteMedPresent"), ("CISCO-BGP4-MIB", "cbgpRouteMultiExitDisc"), ("CISCO-BGP4-MIB", "cbgpRouteLocalPrefPresent"), ("CISCO-BGP4-MIB", "cbgpRouteLocalPref"), ("CISCO-BGP4-MIB", "cbgpRouteAtomicAggregate"), ("CISCO-BGP4-MIB", "cbgpRouteAggregatorAS"), ("CISCO-BGP4-MIB", "cbgpRouteAggregatorAddrType"), ("CISCO-BGP4-MIB", "cbgpRouteAggregatorAddr"), ("CISCO-BGP4-MIB", "cbgpRouteBest"), ("CISCO-BGP4-MIB", "cbgpRouteUnknownAttr"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoBgp4RouteGroup = ciscoBgp4RouteGroup.setStatus('current')
ciscoBgp4PeerGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 187, 3, 2, 2)).setObjects(("CISCO-BGP4-MIB", "cbgpPeerPrefixAccepted"), ("CISCO-BGP4-MIB", "cbgpPeerPrefixDenied"), ("CISCO-BGP4-MIB", "cbgpPeerPrefixLimit"), ("CISCO-BGP4-MIB", "cbgpPeerPrefixAdvertised"), ("CISCO-BGP4-MIB", "cbgpPeerPrefixSuppressed"), ("CISCO-BGP4-MIB", "cbgpPeerPrefixWithdrawn"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoBgp4PeerGroup = ciscoBgp4PeerGroup.setStatus('deprecated')
ciscoBgp4NotificationsGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 9, 9, 187, 3, 2, 3)).setObjects(("CISCO-BGP4-MIB", "cbgpFsmStateChange"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoBgp4NotificationsGroup = ciscoBgp4NotificationsGroup.setStatus('deprecated')
ciscoBgp4PeerGroup1 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 187, 3, 2, 4)).setObjects(("CISCO-BGP4-MIB", "cbgpPeerPrevState"), ("CISCO-BGP4-MIB", "cbgpPeerLastErrorTxt"), ("CISCO-BGP4-MIB", "cbgpPeerCapValue"), ("CISCO-BGP4-MIB", "cbgpPeerAddrFamilyName"), ("CISCO-BGP4-MIB", "cbgpPeerAcceptedPrefixes"), ("CISCO-BGP4-MIB", "cbgpPeerDeniedPrefixes"), ("CISCO-BGP4-MIB", "cbgpPeerPrefixAdminLimit"), ("CISCO-BGP4-MIB", "cbgpPeerPrefixThreshold"), ("CISCO-BGP4-MIB", "cbgpPeerPrefixClearThreshold"), ("CISCO-BGP4-MIB", "cbgpPeerAdvertisedPrefixes"), ("CISCO-BGP4-MIB", "cbgpPeerSuppressedPrefixes"), ("CISCO-BGP4-MIB", "cbgpPeerWithdrawnPrefixes"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoBgp4PeerGroup1 = ciscoBgp4PeerGroup1.setStatus('current')
ciscoBgp4NotificationsGroup1 = NotificationGroup((1, 3, 6, 1, 4, 1, 9, 9, 187, 3, 2, 5)).setObjects(("CISCO-BGP4-MIB", "cbgpFsmStateChange"), ("CISCO-BGP4-MIB", "cbgpBackwardTransition"), ("CISCO-BGP4-MIB", "cbgpPrefixThresholdExceeded"), ("CISCO-BGP4-MIB", "cbgpPrefixThresholdClear"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoBgp4NotificationsGroup1 = ciscoBgp4NotificationsGroup1.setStatus('current')
ciscoBgp4Peer2Group = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 187, 3, 2, 6)).setObjects(("CISCO-BGP4-MIB", "cbgpPeer2State"), ("CISCO-BGP4-MIB", "cbgpPeer2AdminStatus"), ("CISCO-BGP4-MIB", "cbgpPeer2NegotiatedVersion"), ("CISCO-BGP4-MIB", "cbgpPeer2LocalAddr"), ("CISCO-BGP4-MIB", "cbgpPeer2LocalPort"), ("CISCO-BGP4-MIB", "cbgpPeer2LocalAs"), ("CISCO-BGP4-MIB", "cbgpPeer2LocalIdentifier"), ("CISCO-BGP4-MIB", "cbgpPeer2RemotePort"), ("CISCO-BGP4-MIB", "cbgpPeer2RemoteAs"), ("CISCO-BGP4-MIB", "cbgpPeer2RemoteIdentifier"), ("CISCO-BGP4-MIB", "cbgpPeer2InUpdates"), ("CISCO-BGP4-MIB", "cbgpPeer2OutUpdates"), ("CISCO-BGP4-MIB", "cbgpPeer2InTotalMessages"), ("CISCO-BGP4-MIB", "cbgpPeer2OutTotalMessages"), ("CISCO-BGP4-MIB", "cbgpPeer2LastError"), ("CISCO-BGP4-MIB", "cbgpPeer2FsmEstablishedTransitions"), ("CISCO-BGP4-MIB", "cbgpPeer2FsmEstablishedTime"), ("CISCO-BGP4-MIB", "cbgpPeer2ConnectRetryInterval"), ("CISCO-BGP4-MIB", "cbgpPeer2HoldTime"), ("CISCO-BGP4-MIB", "cbgpPeer2KeepAlive"), ("CISCO-BGP4-MIB", "cbgpPeer2HoldTimeConfigured"), ("CISCO-BGP4-MIB", "cbgpPeer2KeepAliveConfigured"), ("CISCO-BGP4-MIB", "cbgpPeer2MinASOriginationInterval"), ("CISCO-BGP4-MIB", "cbgpPeer2MinRouteAdvertisementInterval"), ("CISCO-BGP4-MIB", "cbgpPeer2InUpdateElapsedTime"), ("CISCO-BGP4-MIB", "cbgpPeer2LastErrorTxt"), ("CISCO-BGP4-MIB", "cbgpPeer2PrevState"), ("CISCO-BGP4-MIB", "cbgpPeer2CapValue"), ("CISCO-BGP4-MIB", "cbgpPeer2AddrFamilyName"), ("CISCO-BGP4-MIB", "cbgpPeer2AcceptedPrefixes"), ("CISCO-BGP4-MIB", "cbgpPeer2DeniedPrefixes"), ("CISCO-BGP4-MIB", "cbgpPeer2PrefixAdminLimit"), ("CISCO-BGP4-MIB", "cbgpPeer2PrefixThreshold"), ("CISCO-BGP4-MIB", "cbgpPeer2PrefixClearThreshold"), ("CISCO-BGP4-MIB", "cbgpPeer2AdvertisedPrefixes"), ("CISCO-BGP4-MIB", "cbgpPeer2SuppressedPrefixes"), ("CISCO-BGP4-MIB", "cbgpPeer2WithdrawnPrefixes"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoBgp4Peer2Group = ciscoBgp4Peer2Group.setStatus('current')
ciscoBgp4Peer2NotificationsGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 9, 9, 187, 3, 2, 7)).setObjects(("CISCO-BGP4-MIB", "cbgpPeer2EstablishedNotification"), ("CISCO-BGP4-MIB", "cbgpPeer2BackwardTransNotification"), ("CISCO-BGP4-MIB", "cbgpPeer2FsmStateChange"), ("CISCO-BGP4-MIB", "cbgpPeer2BackwardTransition"), ("CISCO-BGP4-MIB", "cbgpPeer2PrefixThresholdExceeded"), ("CISCO-BGP4-MIB", "cbgpPeer2PrefixThresholdClear"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoBgp4Peer2NotificationsGroup = ciscoBgp4Peer2NotificationsGroup.setStatus('current')
ciscoBgp4GlobalGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 187, 3, 2, 8)).setObjects(("CISCO-BGP4-MIB", "cbgpNotifsEnable"), ("CISCO-BGP4-MIB", "cbgpLocalAs"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoBgp4GlobalGroup = ciscoBgp4GlobalGroup.setStatus('current')
mibBuilder.exportSymbols("CISCO-BGP4-MIB", ciscoBgp4PeerGroup=ciscoBgp4PeerGroup, ciscoBgp4MIBGroups=ciscoBgp4MIBGroups, cbgpRouteNextHop=cbgpRouteNextHop, ciscoBgp4MIBComplianceRev3=ciscoBgp4MIBComplianceRev3, ciscoBgp4RouteGroup=ciscoBgp4RouteGroup, cbgpPrefixThresholdExceeded=cbgpPrefixThresholdExceeded, ciscoBgp4GlobalGroup=ciscoBgp4GlobalGroup, cbgpPeerPrefixDenied=cbgpPeerPrefixDenied, cbgpPeer2Table=cbgpPeer2Table, cbgpPeer2LastError=cbgpPeer2LastError, cbgpPeer2PrefixThresholdExceeded=cbgpPeer2PrefixThresholdExceeded, cbgpRouteUnknownAttr=cbgpRouteUnknownAttr, cbgpPeer2RemoteIdentifier=cbgpPeer2RemoteIdentifier, cbgpRoute=cbgpRoute, cbgpPeerCapsTable=cbgpPeerCapsTable, ciscoBgp4MIB=ciscoBgp4MIB, ciscoBgp4NotificationsGroup=ciscoBgp4NotificationsGroup, cbgpPeer2CapsTable=cbgpPeer2CapsTable, cbgpRouteASPathSegment=cbgpRouteASPathSegment, cbgpPeerAddrFamilyEntry=cbgpPeerAddrFamilyEntry, cbgpPeer2MinASOriginationInterval=cbgpPeer2MinASOriginationInterval, cbgpPeer2FsmEstablishedTransitions=cbgpPeer2FsmEstablishedTransitions, cbgpRouteAfi=cbgpRouteAfi, cbgpBackwardTransition=cbgpBackwardTransition, ciscoBgp4MIBComplianceRev1=ciscoBgp4MIBComplianceRev1, cbgpRouteEntry=cbgpRouteEntry, cbgpPeer2ConnectRetryInterval=cbgpPeer2ConnectRetryInterval, ciscoBgp4Peer2Group=ciscoBgp4Peer2Group, ciscoBgp4NotificationPrefix=ciscoBgp4NotificationPrefix, cbgpPeerLastErrorTxt=cbgpPeerLastErrorTxt, cbgpPeer2Type=cbgpPeer2Type, cbgpPeer2HoldTimeConfigured=cbgpPeer2HoldTimeConfigured, cbgpPeerCapIndex=cbgpPeerCapIndex, cbgpPeer2RemoteAddr=cbgpPeer2RemoteAddr, cbgpPeer2LastErrorTxt=cbgpPeer2LastErrorTxt, cbgpPeerCapValue=cbgpPeerCapValue, cbgpPeer2PrefixThresholdClear=cbgpPeer2PrefixThresholdClear, cbgpRouteOrigin=cbgpRouteOrigin, cbgpLocalAs=cbgpLocalAs, cbgpPeer2State=cbgpPeer2State, ciscoBgp4MIBCompliance=ciscoBgp4MIBCompliance, cbgpPeer2AddrFamilyEntry=cbgpPeer2AddrFamilyEntry, cbgpPeerTable=cbgpPeerTable, cbgpPeer2FsmStateChange=cbgpPeer2FsmStateChange, cbgpNotifsEnable=cbgpNotifsEnable, cbgpPeerPrefixWithdrawn=cbgpPeerPrefixWithdrawn, cbgpPeer2EstablishedNotification=cbgpPeer2EstablishedNotification, cbgpPeerAddrFamilySafi=cbgpPeerAddrFamilySafi, cbgpPeer2AddrFamilyPrefixTable=cbgpPeer2AddrFamilyPrefixTable, cbgpRouteBest=cbgpRouteBest, cbgpPeer2BackwardTransition=cbgpPeer2BackwardTransition, cbgpRouteAddrPrefix=cbgpRouteAddrPrefix, cbgpPeer2LocalIdentifier=cbgpPeer2LocalIdentifier, cbgpPeer2FsmEstablishedTime=cbgpPeer2FsmEstablishedTime, cbgpPeer2PrefixThreshold=cbgpPeer2PrefixThreshold, cbgpPeerCapsEntry=cbgpPeerCapsEntry, cbgpPeer2KeepAlive=cbgpPeer2KeepAlive, cbgpRouteLocalPrefPresent=cbgpRouteLocalPrefPresent, cbgpPeer2BackwardTransNotification=cbgpPeer2BackwardTransNotification, cbgpRouteMedPresent=cbgpRouteMedPresent, cbgpPeerPrefixAdminLimit=cbgpPeerPrefixAdminLimit, cbgpRouteAggregatorAddrType=cbgpRouteAggregatorAddrType, cbgpRouteLocalPref=cbgpRouteLocalPref, cbgpPeer2AcceptedPrefixes=cbgpPeer2AcceptedPrefixes, cbgpPeer2DeniedPrefixes=cbgpPeer2DeniedPrefixes, cbgpPeer2HoldTime=cbgpPeer2HoldTime, cbgpRouteTable=cbgpRouteTable, cbgpPeer2AddrFamilyAfi=cbgpPeer2AddrFamilyAfi, cbgpPeer2AddrFamilySafi=cbgpPeer2AddrFamilySafi, CbgpNetworkAddress=CbgpNetworkAddress, ciscoBgp4MIBConformance=ciscoBgp4MIBConformance, cbgpPeer2RemoteAs=cbgpPeer2RemoteAs, cbgpPeer2AddrFamilyName=cbgpPeer2AddrFamilyName, cbgpPeer2LocalAs=cbgpPeer2LocalAs, cbgpPeerAdvertisedPrefixes=cbgpPeerAdvertisedPrefixes, cbgpRoutePeer=cbgpRoutePeer, cbgpPeerAddrFamilyPrefixTable=cbgpPeerAddrFamilyPrefixTable, cbgpPeerPrefixClearThreshold=cbgpPeerPrefixClearThreshold, cbgpPeer2InUpdateElapsedTime=cbgpPeer2InUpdateElapsedTime, cbgpPeer2AddrFamilyPrefixEntry=cbgpPeer2AddrFamilyPrefixEntry, cbgpGlobal=cbgpGlobal, cbgpPeerDeniedPrefixes=cbgpPeerDeniedPrefixes, cbgpPeer2WithdrawnPrefixes=cbgpPeer2WithdrawnPrefixes, cbgpPeerAddrFamilyName=cbgpPeerAddrFamilyName, cbgpPeer2CapCode=cbgpPeer2CapCode, cbgpRouteAggregatorAddr=cbgpRouteAggregatorAddr, cbgpFsmStateChange=cbgpFsmStateChange, cbgpPeer2AdvertisedPrefixes=cbgpPeer2AdvertisedPrefixes, cbgpPeerPrefixSuppressed=cbgpPeerPrefixSuppressed, cbgpPeer2NegotiatedVersion=cbgpPeer2NegotiatedVersion, cbgpPeerPrefixAccepted=cbgpPeerPrefixAccepted, cbgpPeer2InTotalMessages=cbgpPeer2InTotalMessages, cbgpPeer2AddrFamilyTable=cbgpPeer2AddrFamilyTable, cbgpPeerPrevState=cbgpPeerPrevState, cbgpPeerPrefixLimit=cbgpPeerPrefixLimit, ciscoBgp4MIBComplianceRev2=ciscoBgp4MIBComplianceRev2, ciscoBgp4NotificationsGroup1=ciscoBgp4NotificationsGroup1, cbgpPeerEntry=cbgpPeerEntry, cbgpPeerSuppressedPrefixes=cbgpPeerSuppressedPrefixes, ciscoBgp4MIBCompliances=ciscoBgp4MIBCompliances, cbgpRouteAddrPrefixLen=cbgpRouteAddrPrefixLen, cbgpPeerAddrFamilyPrefixEntry=cbgpPeerAddrFamilyPrefixEntry, cbgpPeer=cbgpPeer, cbgpPeerAddrFamilyAfi=cbgpPeerAddrFamilyAfi, cbgpPeerPrefixThreshold=cbgpPeerPrefixThreshold, cbgpPeer2Entry=cbgpPeer2Entry, cbgpPeer2PrevState=cbgpPeer2PrevState, cbgpPeerWithdrawnPrefixes=cbgpPeerWithdrawnPrefixes, cbgpPeer2SuppressedPrefixes=cbgpPeer2SuppressedPrefixes, cbgpPrefixThresholdClear=cbgpPrefixThresholdClear, CbgpSafi=CbgpSafi, cbgpPeer2LocalPort=cbgpPeer2LocalPort, cbgpRouteAggregatorAS=cbgpRouteAggregatorAS, cbgpPeerAcceptedPrefixes=cbgpPeerAcceptedPrefixes, ciscoBgp4PeerGroup1=ciscoBgp4PeerGroup1, cbgpPeer2CapIndex=cbgpPeer2CapIndex, cbgpRouteSafi=cbgpRouteSafi, cbgpPeer2OutTotalMessages=cbgpPeer2OutTotalMessages, cbgpPeer2OutUpdates=cbgpPeer2OutUpdates, cbgpPeer2KeepAliveConfigured=cbgpPeer2KeepAliveConfigured, cbgpPeer2PrefixClearThreshold=cbgpPeer2PrefixClearThreshold, cbgpPeer2CapsEntry=cbgpPeer2CapsEntry, cbgpPeer2PrefixAdminLimit=cbgpPeer2PrefixAdminLimit, ciscoBgp4MIBObjects=ciscoBgp4MIBObjects, cbgpRouteAtomicAggregate=cbgpRouteAtomicAggregate, cbgpPeer2InUpdates=cbgpPeer2InUpdates, cbgpPeer2CapValue=cbgpPeer2CapValue, cbgpPeerCapCode=cbgpPeerCapCode, cbgpPeerAddrFamilyTable=cbgpPeerAddrFamilyTable, cbgpPeer2AdminStatus=cbgpPeer2AdminStatus, PYSNMP_MODULE_ID=ciscoBgp4MIB, cbgpPeer2MinRouteAdvertisementInterval=cbgpPeer2MinRouteAdvertisementInterval, ciscoBgp4NotifyPrefix=ciscoBgp4NotifyPrefix, cbgpPeerPrefixAdvertised=cbgpPeerPrefixAdvertised, cbgpRouteMultiExitDisc=cbgpRouteMultiExitDisc, cbgpRoutePeerType=cbgpRoutePeerType, ciscoBgp4Peer2NotificationsGroup=ciscoBgp4Peer2NotificationsGroup, cbgpPeer2RemotePort=cbgpPeer2RemotePort, cbgpPeer2LocalAddr=cbgpPeer2LocalAddr)
