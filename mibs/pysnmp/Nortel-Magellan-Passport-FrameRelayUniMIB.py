#
# PySNMP MIB module Nortel-Magellan-Passport-FrameRelayUniMIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/Nortel-Magellan-Passport-FrameRelayUniMIB
# Produced by pysmi-0.3.4 at Mon Apr 29 20:17:43 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ValueRangeConstraint, ConstraintsIntersection, ConstraintsUnion, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ValueRangeConstraint", "ConstraintsIntersection", "ConstraintsUnion", "ValueSizeConstraint")
Gauge32, RowPointer, PassportCounter64, InterfaceIndex, Integer32, Counter32, Unsigned32, StorageType, RowStatus, DisplayString = mibBuilder.importSymbols("Nortel-Magellan-Passport-StandardTextualConventionsMIB", "Gauge32", "RowPointer", "PassportCounter64", "InterfaceIndex", "Integer32", "Counter32", "Unsigned32", "StorageType", "RowStatus", "DisplayString")
NonReplicated, Link, AsciiString, Hex, HexString, DigitString, FixedPoint3, Unsigned64, EnterpriseDateAndTime = mibBuilder.importSymbols("Nortel-Magellan-Passport-TextualConventionsMIB", "NonReplicated", "Link", "AsciiString", "Hex", "HexString", "DigitString", "FixedPoint3", "Unsigned64", "EnterpriseDateAndTime")
passportMIBs, components = mibBuilder.importSymbols("Nortel-Magellan-Passport-UsefulDefinitionsMIB", "passportMIBs", "components")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
NotificationType, Bits, Gauge32, IpAddress, ModuleIdentity, Integer32, Counter32, Unsigned32, ObjectIdentity, Counter64, MibIdentifier, TimeTicks, MibScalar, MibTable, MibTableRow, MibTableColumn, iso = mibBuilder.importSymbols("SNMPv2-SMI", "NotificationType", "Bits", "Gauge32", "IpAddress", "ModuleIdentity", "Integer32", "Counter32", "Unsigned32", "ObjectIdentity", "Counter64", "MibIdentifier", "TimeTicks", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "iso")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
frameRelayUniMIB = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 24))
frUni = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71))
frUniRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 1), )
if mibBuilder.loadTexts: frUniRowStatusTable.setStatus('mandatory')
frUniRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-FrameRelayUniMIB", "frUniIndex"))
if mibBuilder.loadTexts: frUniRowStatusEntry.setStatus('mandatory')
frUniRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frUniRowStatus.setStatus('mandatory')
frUniComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frUniComponentName.setStatus('mandatory')
frUniStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frUniStorageType.setStatus('mandatory')
frUniIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)))
if mibBuilder.loadTexts: frUniIndex.setStatus('mandatory')
frUniCidDataTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 10), )
if mibBuilder.loadTexts: frUniCidDataTable.setStatus('mandatory')
frUniCidDataEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 10, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-FrameRelayUniMIB", "frUniIndex"))
if mibBuilder.loadTexts: frUniCidDataEntry.setStatus('mandatory')
frUniCustomerIdentifier = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 10, 1, 1), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 8191), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frUniCustomerIdentifier.setStatus('mandatory')
frUniStateTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 11), )
if mibBuilder.loadTexts: frUniStateTable.setStatus('mandatory')
frUniStateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 11, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-FrameRelayUniMIB", "frUniIndex"))
if mibBuilder.loadTexts: frUniStateEntry.setStatus('mandatory')
frUniAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 11, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("locked", 0), ("unlocked", 1), ("shuttingDown", 2))).clone('unlocked')).setMaxAccess("readonly")
if mibBuilder.loadTexts: frUniAdminState.setStatus('mandatory')
frUniOperationalState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 11, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1))).clone('disabled')).setMaxAccess("readonly")
if mibBuilder.loadTexts: frUniOperationalState.setStatus('mandatory')
frUniUsageState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 11, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("idle", 0), ("active", 1), ("busy", 2))).clone('idle')).setMaxAccess("readonly")
if mibBuilder.loadTexts: frUniUsageState.setStatus('mandatory')
frUniAvailabilityStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 11, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(2, 2)).setFixedLength(2)).setMaxAccess("readonly")
if mibBuilder.loadTexts: frUniAvailabilityStatus.setStatus('mandatory')
frUniProceduralStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 11, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 1)).setFixedLength(1)).setMaxAccess("readonly")
if mibBuilder.loadTexts: frUniProceduralStatus.setStatus('mandatory')
frUniControlStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 11, 1, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 1)).setFixedLength(1)).setMaxAccess("readonly")
if mibBuilder.loadTexts: frUniControlStatus.setStatus('mandatory')
frUniAlarmStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 11, 1, 7), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 1)).setFixedLength(1)).setMaxAccess("readonly")
if mibBuilder.loadTexts: frUniAlarmStatus.setStatus('mandatory')
frUniStandbyStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 11, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 15))).clone(namedValues=NamedValues(("hotStandby", 0), ("coldStandby", 1), ("providingService", 2), ("notSet", 15))).clone('notSet')).setMaxAccess("readonly")
if mibBuilder.loadTexts: frUniStandbyStatus.setStatus('mandatory')
frUniUnknownStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 11, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("false", 0), ("true", 1))).clone('false')).setMaxAccess("readonly")
if mibBuilder.loadTexts: frUniUnknownStatus.setStatus('mandatory')
frUniStatsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 12), )
if mibBuilder.loadTexts: frUniStatsTable.setStatus('mandatory')
frUniStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 12, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-FrameRelayUniMIB", "frUniIndex"))
if mibBuilder.loadTexts: frUniStatsEntry.setStatus('mandatory')
frUniLastUnknownDlci = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 12, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 1023))).setMaxAccess("readonly")
if mibBuilder.loadTexts: frUniLastUnknownDlci.setStatus('mandatory')
frUniUnknownDlciFramesFromIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 12, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frUniUnknownDlciFramesFromIf.setStatus('mandatory')
frUniInvalidHeaderFramesFromIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 12, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frUniInvalidHeaderFramesFromIf.setStatus('mandatory')
frUniIfEntryTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 13), )
if mibBuilder.loadTexts: frUniIfEntryTable.setStatus('mandatory')
frUniIfEntryEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 13, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-FrameRelayUniMIB", "frUniIndex"))
if mibBuilder.loadTexts: frUniIfEntryEntry.setStatus('mandatory')
frUniIfAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 13, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("testing", 3))).clone('up')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frUniIfAdminStatus.setStatus('mandatory')
frUniIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 13, 1, 2), InterfaceIndex().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: frUniIfIndex.setStatus('mandatory')
frUniOperStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 14), )
if mibBuilder.loadTexts: frUniOperStatusTable.setStatus('mandatory')
frUniOperStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 14, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-FrameRelayUniMIB", "frUniIndex"))
if mibBuilder.loadTexts: frUniOperStatusEntry.setStatus('mandatory')
frUniSnmpOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 14, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("testing", 3))).clone('up')).setMaxAccess("readonly")
if mibBuilder.loadTexts: frUniSnmpOperStatus.setStatus('mandatory')
frUniEmissionPriorityQsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 15), )
if mibBuilder.loadTexts: frUniEmissionPriorityQsTable.setStatus('mandatory')
frUniEmissionPriorityQsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 15, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-FrameRelayUniMIB", "frUniIndex"))
if mibBuilder.loadTexts: frUniEmissionPriorityQsEntry.setStatus('mandatory')
frUniNumberOfEmissionQs = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 15, 1, 1), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(2, 2), ValueRangeConstraint(4, 4), )).clone(2)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frUniNumberOfEmissionQs.setStatus('mandatory')
frUniFrmToIfByQueueTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 341), )
if mibBuilder.loadTexts: frUniFrmToIfByQueueTable.setStatus('mandatory')
frUniFrmToIfByQueueEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 341, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-FrameRelayUniMIB", "frUniIndex"), (0, "Nortel-Magellan-Passport-FrameRelayUniMIB", "frUniFrmToIfByQueueIndex"))
if mibBuilder.loadTexts: frUniFrmToIfByQueueEntry.setStatus('mandatory')
frUniFrmToIfByQueueIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 341, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 3)))
if mibBuilder.loadTexts: frUniFrmToIfByQueueIndex.setStatus('mandatory')
frUniFrmToIfByQueueValue = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 341, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: frUniFrmToIfByQueueValue.setStatus('mandatory')
frUniOctetToIfByQueueTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 342), )
if mibBuilder.loadTexts: frUniOctetToIfByQueueTable.setStatus('mandatory')
frUniOctetToIfByQueueEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 342, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-FrameRelayUniMIB", "frUniIndex"), (0, "Nortel-Magellan-Passport-FrameRelayUniMIB", "frUniOctetToIfByQueueIndex"))
if mibBuilder.loadTexts: frUniOctetToIfByQueueEntry.setStatus('mandatory')
frUniOctetToIfByQueueIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 342, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 3)))
if mibBuilder.loadTexts: frUniOctetToIfByQueueIndex.setStatus('mandatory')
frUniOctetToIfByQueueValue = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 342, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: frUniOctetToIfByQueueValue.setStatus('mandatory')
frUniDna = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 2))
frUniDnaRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 2, 1), )
if mibBuilder.loadTexts: frUniDnaRowStatusTable.setStatus('mandatory')
frUniDnaRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 2, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-FrameRelayUniMIB", "frUniIndex"), (0, "Nortel-Magellan-Passport-FrameRelayUniMIB", "frUniDnaIndex"))
if mibBuilder.loadTexts: frUniDnaRowStatusEntry.setStatus('mandatory')
frUniDnaRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 2, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frUniDnaRowStatus.setStatus('mandatory')
frUniDnaComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 2, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frUniDnaComponentName.setStatus('mandatory')
frUniDnaStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 2, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frUniDnaStorageType.setStatus('mandatory')
frUniDnaIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 2, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: frUniDnaIndex.setStatus('mandatory')
frUniDnaAddressTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 2, 10), )
if mibBuilder.loadTexts: frUniDnaAddressTable.setStatus('mandatory')
frUniDnaAddressEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 2, 10, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-FrameRelayUniMIB", "frUniIndex"), (0, "Nortel-Magellan-Passport-FrameRelayUniMIB", "frUniDnaIndex"))
if mibBuilder.loadTexts: frUniDnaAddressEntry.setStatus('mandatory')
frUniDnaNumberingPlanIndicator = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 2, 10, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("x121", 0), ("e164", 1))).clone('x121')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frUniDnaNumberingPlanIndicator.setStatus('mandatory')
frUniDnaDataNetworkAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 2, 10, 1, 2), DigitString().subtype(subtypeSpec=ValueSizeConstraint(1, 15))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frUniDnaDataNetworkAddress.setStatus('mandatory')
frUniDnaOutgoingOptionsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 2, 11), )
if mibBuilder.loadTexts: frUniDnaOutgoingOptionsTable.setStatus('mandatory')
frUniDnaOutgoingOptionsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 2, 11, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-FrameRelayUniMIB", "frUniIndex"), (0, "Nortel-Magellan-Passport-FrameRelayUniMIB", "frUniDnaIndex"))
if mibBuilder.loadTexts: frUniDnaOutgoingOptionsEntry.setStatus('mandatory')
frUniDnaOutDefaultPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 2, 11, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("normal", 0), ("high", 1))).clone('normal')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frUniDnaOutDefaultPriority.setStatus('mandatory')
frUniDnaOutDefaultPathSensitivity = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 2, 11, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("throughput", 0), ("delay", 1))).clone('throughput')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frUniDnaOutDefaultPathSensitivity.setStatus('obsolete')
frUniDnaOutPathSensitivityOverRide = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 2, 11, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1))).clone('yes')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frUniDnaOutPathSensitivityOverRide.setStatus('obsolete')
frUniDnaOutDefaultPathReliability = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 2, 11, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("high", 0), ("normal", 1))).clone('normal')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frUniDnaOutDefaultPathReliability.setStatus('mandatory')
frUniDnaOutAccess = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 2, 11, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disallowed", 0), ("allowed", 1))).clone('disallowed')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frUniDnaOutAccess.setStatus('mandatory')
frUniDnaDefaultTransferPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 2, 11, 1, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15))).clone(namedValues=NamedValues(("n0", 0), ("n1", 1), ("n2", 2), ("n3", 3), ("n4", 4), ("n5", 5), ("n6", 6), ("n7", 7), ("n8", 8), ("n9", 9), ("n10", 10), ("n11", 11), ("n12", 12), ("n13", 13), ("n14", 14), ("n15", 15))).clone('n0')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frUniDnaDefaultTransferPriority.setStatus('mandatory')
frUniDnaTransferPriorityOverRide = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 2, 11, 1, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1))).clone('yes')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frUniDnaTransferPriorityOverRide.setStatus('mandatory')
frUniDnaIncomingOptionsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 2, 12), )
if mibBuilder.loadTexts: frUniDnaIncomingOptionsTable.setStatus('mandatory')
frUniDnaIncomingOptionsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 2, 12, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-FrameRelayUniMIB", "frUniIndex"), (0, "Nortel-Magellan-Passport-FrameRelayUniMIB", "frUniDnaIndex"))
if mibBuilder.loadTexts: frUniDnaIncomingOptionsEntry.setStatus('mandatory')
frUniDnaIncAccess = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 2, 12, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disallowed", 0), ("allowed", 1))).clone('disallowed')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frUniDnaIncAccess.setStatus('mandatory')
frUniDnaCallOptionsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 2, 13), )
if mibBuilder.loadTexts: frUniDnaCallOptionsTable.setStatus('mandatory')
frUniDnaCallOptionsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 2, 13, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-FrameRelayUniMIB", "frUniIndex"), (0, "Nortel-Magellan-Passport-FrameRelayUniMIB", "frUniDnaIndex"))
if mibBuilder.loadTexts: frUniDnaCallOptionsEntry.setStatus('mandatory')
frUniDnaAccountClass = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 2, 13, 1, 10), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frUniDnaAccountClass.setStatus('mandatory')
frUniDnaAccountCollection = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 2, 13, 1, 11), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 1)).setFixedLength(1).clone(hexValue="80")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frUniDnaAccountCollection.setStatus('mandatory')
frUniDnaServiceExchange = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 2, 13, 1, 12), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frUniDnaServiceExchange.setStatus('mandatory')
frUniDnaEgressAccounting = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 2, 13, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1))).clone('no')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frUniDnaEgressAccounting.setStatus('mandatory')
frUniDnaDataPath = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 2, 13, 1, 21), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("dprsOnly", 0), ("dprsMcsOnly", 1), ("dprsMcsFirst", 2))).clone('dprsOnly')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frUniDnaDataPath.setStatus('mandatory')
frUniDnaCug = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 2, 2))
frUniDnaCugRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 2, 2, 1), )
if mibBuilder.loadTexts: frUniDnaCugRowStatusTable.setStatus('mandatory')
frUniDnaCugRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 2, 2, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-FrameRelayUniMIB", "frUniIndex"), (0, "Nortel-Magellan-Passport-FrameRelayUniMIB", "frUniDnaIndex"), (0, "Nortel-Magellan-Passport-FrameRelayUniMIB", "frUniDnaCugIndex"))
if mibBuilder.loadTexts: frUniDnaCugRowStatusEntry.setStatus('mandatory')
frUniDnaCugRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 2, 2, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frUniDnaCugRowStatus.setStatus('mandatory')
frUniDnaCugComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 2, 2, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frUniDnaCugComponentName.setStatus('mandatory')
frUniDnaCugStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 2, 2, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frUniDnaCugStorageType.setStatus('mandatory')
frUniDnaCugIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 2, 2, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255)))
if mibBuilder.loadTexts: frUniDnaCugIndex.setStatus('mandatory')
frUniDnaCugCugOptionsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 2, 2, 10), )
if mibBuilder.loadTexts: frUniDnaCugCugOptionsTable.setStatus('mandatory')
frUniDnaCugCugOptionsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 2, 2, 10, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-FrameRelayUniMIB", "frUniIndex"), (0, "Nortel-Magellan-Passport-FrameRelayUniMIB", "frUniDnaIndex"), (0, "Nortel-Magellan-Passport-FrameRelayUniMIB", "frUniDnaCugIndex"))
if mibBuilder.loadTexts: frUniDnaCugCugOptionsEntry.setStatus('mandatory')
frUniDnaCugType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 2, 2, 10, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("national", 0), ("international", 1))).clone('national')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frUniDnaCugType.setStatus('mandatory')
frUniDnaCugDnic = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 2, 2, 10, 1, 2), DigitString().subtype(subtypeSpec=ValueSizeConstraint(4, 4)).setFixedLength(4).clone(hexValue="30303030")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frUniDnaCugDnic.setStatus('mandatory')
frUniDnaCugInterlockCode = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 2, 2, 10, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)).clone(65535)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frUniDnaCugInterlockCode.setStatus('mandatory')
frUniDnaCugPreferential = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 2, 2, 10, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1))).clone('no')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frUniDnaCugPreferential.setStatus('mandatory')
frUniDnaCugOutCalls = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 2, 2, 10, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disallowed", 0), ("allowed", 1))).clone('allowed')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frUniDnaCugOutCalls.setStatus('mandatory')
frUniDnaCugIncCalls = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 2, 2, 10, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disallowed", 0), ("allowed", 1))).clone('allowed')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frUniDnaCugIncCalls.setStatus('mandatory')
frUniDnaHgM = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 2, 3))
frUniDnaHgMRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 2, 3, 1), )
if mibBuilder.loadTexts: frUniDnaHgMRowStatusTable.setStatus('mandatory')
frUniDnaHgMRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 2, 3, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-FrameRelayUniMIB", "frUniIndex"), (0, "Nortel-Magellan-Passport-FrameRelayUniMIB", "frUniDnaIndex"), (0, "Nortel-Magellan-Passport-FrameRelayUniMIB", "frUniDnaHgMIndex"))
if mibBuilder.loadTexts: frUniDnaHgMRowStatusEntry.setStatus('mandatory')
frUniDnaHgMRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 2, 3, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frUniDnaHgMRowStatus.setStatus('mandatory')
frUniDnaHgMComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 2, 3, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frUniDnaHgMComponentName.setStatus('mandatory')
frUniDnaHgMStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 2, 3, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frUniDnaHgMStorageType.setStatus('mandatory')
frUniDnaHgMIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 2, 3, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: frUniDnaHgMIndex.setStatus('mandatory')
frUniDnaHgMIfTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 2, 3, 10), )
if mibBuilder.loadTexts: frUniDnaHgMIfTable.setStatus('mandatory')
frUniDnaHgMIfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 2, 3, 10, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-FrameRelayUniMIB", "frUniIndex"), (0, "Nortel-Magellan-Passport-FrameRelayUniMIB", "frUniDnaIndex"), (0, "Nortel-Magellan-Passport-FrameRelayUniMIB", "frUniDnaHgMIndex"))
if mibBuilder.loadTexts: frUniDnaHgMIfEntry.setStatus('mandatory')
frUniDnaHgMAvailabilityUpdateThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 2, 3, 10, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(2048, 16777216)).clone(8192)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frUniDnaHgMAvailabilityUpdateThreshold.setStatus('mandatory')
frUniDnaHgMOpTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 2, 3, 11), )
if mibBuilder.loadTexts: frUniDnaHgMOpTable.setStatus('mandatory')
frUniDnaHgMOpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 2, 3, 11, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-FrameRelayUniMIB", "frUniIndex"), (0, "Nortel-Magellan-Passport-FrameRelayUniMIB", "frUniDnaIndex"), (0, "Nortel-Magellan-Passport-FrameRelayUniMIB", "frUniDnaHgMIndex"))
if mibBuilder.loadTexts: frUniDnaHgMOpEntry.setStatus('mandatory')
frUniDnaHgMMaximumAvailableAggregateCir = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 2, 3, 11, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: frUniDnaHgMMaximumAvailableAggregateCir.setStatus('mandatory')
frUniDnaHgMAvailableAggregateCir = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 2, 3, 11, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: frUniDnaHgMAvailableAggregateCir.setStatus('mandatory')
frUniDnaHgMAvailabilityDelta = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 2, 3, 11, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-16777216, 16777215))).setMaxAccess("readonly")
if mibBuilder.loadTexts: frUniDnaHgMAvailabilityDelta.setStatus('mandatory')
frUniDnaHgMAvailableDlcis = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 2, 3, 11, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4096))).setMaxAccess("readonly")
if mibBuilder.loadTexts: frUniDnaHgMAvailableDlcis.setStatus('mandatory')
frUniDnaHgMHgAddr = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 2, 3, 2))
frUniDnaHgMHgAddrRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 2, 3, 2, 1), )
if mibBuilder.loadTexts: frUniDnaHgMHgAddrRowStatusTable.setStatus('mandatory')
frUniDnaHgMHgAddrRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 2, 3, 2, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-FrameRelayUniMIB", "frUniIndex"), (0, "Nortel-Magellan-Passport-FrameRelayUniMIB", "frUniDnaIndex"), (0, "Nortel-Magellan-Passport-FrameRelayUniMIB", "frUniDnaHgMIndex"), (0, "Nortel-Magellan-Passport-FrameRelayUniMIB", "frUniDnaHgMHgAddrIndex"))
if mibBuilder.loadTexts: frUniDnaHgMHgAddrRowStatusEntry.setStatus('mandatory')
frUniDnaHgMHgAddrRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 2, 3, 2, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frUniDnaHgMHgAddrRowStatus.setStatus('mandatory')
frUniDnaHgMHgAddrComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 2, 3, 2, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frUniDnaHgMHgAddrComponentName.setStatus('mandatory')
frUniDnaHgMHgAddrStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 2, 3, 2, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frUniDnaHgMHgAddrStorageType.setStatus('mandatory')
frUniDnaHgMHgAddrIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 2, 3, 2, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1)))
if mibBuilder.loadTexts: frUniDnaHgMHgAddrIndex.setStatus('mandatory')
frUniDnaHgMHgAddrAddrTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 2, 3, 2, 10), )
if mibBuilder.loadTexts: frUniDnaHgMHgAddrAddrTable.setStatus('mandatory')
frUniDnaHgMHgAddrAddrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 2, 3, 2, 10, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-FrameRelayUniMIB", "frUniIndex"), (0, "Nortel-Magellan-Passport-FrameRelayUniMIB", "frUniDnaIndex"), (0, "Nortel-Magellan-Passport-FrameRelayUniMIB", "frUniDnaHgMIndex"), (0, "Nortel-Magellan-Passport-FrameRelayUniMIB", "frUniDnaHgMHgAddrIndex"))
if mibBuilder.loadTexts: frUniDnaHgMHgAddrAddrEntry.setStatus('mandatory')
frUniDnaHgMHgAddrNumberingPlanIndicator = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 2, 3, 2, 10, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("x121", 0), ("e164", 1))).clone('x121')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frUniDnaHgMHgAddrNumberingPlanIndicator.setStatus('mandatory')
frUniDnaHgMHgAddrDataNetworkAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 2, 3, 2, 10, 1, 2), DigitString().subtype(subtypeSpec=ValueSizeConstraint(1, 15))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frUniDnaHgMHgAddrDataNetworkAddress.setStatus('mandatory')
frUniFramer = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 3))
frUniFramerRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 3, 1), )
if mibBuilder.loadTexts: frUniFramerRowStatusTable.setStatus('mandatory')
frUniFramerRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 3, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-FrameRelayUniMIB", "frUniIndex"), (0, "Nortel-Magellan-Passport-FrameRelayUniMIB", "frUniFramerIndex"))
if mibBuilder.loadTexts: frUniFramerRowStatusEntry.setStatus('mandatory')
frUniFramerRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 3, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frUniFramerRowStatus.setStatus('mandatory')
frUniFramerComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 3, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frUniFramerComponentName.setStatus('mandatory')
frUniFramerStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 3, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frUniFramerStorageType.setStatus('mandatory')
frUniFramerIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 3, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: frUniFramerIndex.setStatus('mandatory')
frUniFramerProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 3, 10), )
if mibBuilder.loadTexts: frUniFramerProvTable.setStatus('mandatory')
frUniFramerProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 3, 10, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-FrameRelayUniMIB", "frUniIndex"), (0, "Nortel-Magellan-Passport-FrameRelayUniMIB", "frUniFramerIndex"))
if mibBuilder.loadTexts: frUniFramerProvEntry.setStatus('mandatory')
frUniFramerInterfaceName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 3, 10, 1, 1), Link()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frUniFramerInterfaceName.setStatus('mandatory')
frUniFramerLinkTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 3, 11), )
if mibBuilder.loadTexts: frUniFramerLinkTable.setStatus('mandatory')
frUniFramerLinkEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 3, 11, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-FrameRelayUniMIB", "frUniIndex"), (0, "Nortel-Magellan-Passport-FrameRelayUniMIB", "frUniFramerIndex"))
if mibBuilder.loadTexts: frUniFramerLinkEntry.setStatus('mandatory')
frUniFramerFlagsBetweenFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 3, 11, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 16)).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frUniFramerFlagsBetweenFrames.setStatus('mandatory')
frUniFramerStateTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 3, 12), )
if mibBuilder.loadTexts: frUniFramerStateTable.setStatus('mandatory')
frUniFramerStateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 3, 12, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-FrameRelayUniMIB", "frUniIndex"), (0, "Nortel-Magellan-Passport-FrameRelayUniMIB", "frUniFramerIndex"))
if mibBuilder.loadTexts: frUniFramerStateEntry.setStatus('mandatory')
frUniFramerAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 3, 12, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("locked", 0), ("unlocked", 1), ("shuttingDown", 2))).clone('unlocked')).setMaxAccess("readonly")
if mibBuilder.loadTexts: frUniFramerAdminState.setStatus('mandatory')
frUniFramerOperationalState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 3, 12, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1))).clone('disabled')).setMaxAccess("readonly")
if mibBuilder.loadTexts: frUniFramerOperationalState.setStatus('mandatory')
frUniFramerUsageState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 3, 12, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("idle", 0), ("active", 1), ("busy", 2))).clone('idle')).setMaxAccess("readonly")
if mibBuilder.loadTexts: frUniFramerUsageState.setStatus('mandatory')
frUniFramerStatsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 3, 13), )
if mibBuilder.loadTexts: frUniFramerStatsTable.setStatus('mandatory')
frUniFramerStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 3, 13, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-FrameRelayUniMIB", "frUniIndex"), (0, "Nortel-Magellan-Passport-FrameRelayUniMIB", "frUniFramerIndex"))
if mibBuilder.loadTexts: frUniFramerStatsEntry.setStatus('mandatory')
frUniFramerFrmToIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 3, 13, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frUniFramerFrmToIf.setStatus('mandatory')
frUniFramerFrmFromIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 3, 13, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frUniFramerFrmFromIf.setStatus('mandatory')
frUniFramerOctetFromIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 3, 13, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frUniFramerOctetFromIf.setStatus('mandatory')
frUniFramerAborts = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 3, 13, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frUniFramerAborts.setStatus('mandatory')
frUniFramerCrcErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 3, 13, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frUniFramerCrcErrors.setStatus('mandatory')
frUniFramerLrcErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 3, 13, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frUniFramerLrcErrors.setStatus('mandatory')
frUniFramerNonOctetErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 3, 13, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frUniFramerNonOctetErrors.setStatus('mandatory')
frUniFramerOverruns = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 3, 13, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frUniFramerOverruns.setStatus('mandatory')
frUniFramerUnderruns = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 3, 13, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frUniFramerUnderruns.setStatus('mandatory')
frUniFramerLargeFrmErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 3, 13, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frUniFramerLargeFrmErrors.setStatus('mandatory')
frUniFramerFrmModeErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 3, 13, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frUniFramerFrmModeErrors.setStatus('mandatory')
frUniFramerUtilTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 3, 14), )
if mibBuilder.loadTexts: frUniFramerUtilTable.setStatus('mandatory')
frUniFramerUtilEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 3, 14, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-FrameRelayUniMIB", "frUniIndex"), (0, "Nortel-Magellan-Passport-FrameRelayUniMIB", "frUniFramerIndex"))
if mibBuilder.loadTexts: frUniFramerUtilEntry.setStatus('mandatory')
frUniFramerNormPrioLinkUtilToIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 3, 14, 1, 1), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: frUniFramerNormPrioLinkUtilToIf.setStatus('mandatory')
frUniFramerNormPrioLinkUtilFromIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 3, 14, 1, 3), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: frUniFramerNormPrioLinkUtilFromIf.setStatus('mandatory')
frUniLmi = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 4))
frUniLmiRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 4, 1), )
if mibBuilder.loadTexts: frUniLmiRowStatusTable.setStatus('mandatory')
frUniLmiRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 4, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-FrameRelayUniMIB", "frUniIndex"), (0, "Nortel-Magellan-Passport-FrameRelayUniMIB", "frUniLmiIndex"))
if mibBuilder.loadTexts: frUniLmiRowStatusEntry.setStatus('mandatory')
frUniLmiRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 4, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frUniLmiRowStatus.setStatus('mandatory')
frUniLmiComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 4, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frUniLmiComponentName.setStatus('mandatory')
frUniLmiStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 4, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frUniLmiStorageType.setStatus('mandatory')
frUniLmiIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 4, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: frUniLmiIndex.setStatus('mandatory')
frUniLmiParmsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 4, 10), )
if mibBuilder.loadTexts: frUniLmiParmsTable.setStatus('mandatory')
frUniLmiParmsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 4, 10, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-FrameRelayUniMIB", "frUniIndex"), (0, "Nortel-Magellan-Passport-FrameRelayUniMIB", "frUniLmiIndex"))
if mibBuilder.loadTexts: frUniLmiParmsEntry.setStatus('mandatory')
frUniLmiProcedures = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 4, 10, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("none", 0), ("vendorForum", 1), ("ansi", 2), ("itu", 3), ("autoConfigure", 4))).clone('autoConfigure')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frUniLmiProcedures.setStatus('mandatory')
frUniLmiAsyncStatusReport = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 4, 10, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("on", 1))).clone('off')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frUniLmiAsyncStatusReport.setStatus('mandatory')
frUniLmiErrorEventThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 4, 10, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 10)).clone(3)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frUniLmiErrorEventThreshold.setStatus('mandatory')
frUniLmiEventCount = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 4, 10, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 10)).clone(4)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frUniLmiEventCount.setStatus('mandatory')
frUniLmiCheckPointTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 4, 10, 1, 5), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(5, 5), ValueRangeConstraint(10, 10), ValueRangeConstraint(15, 15), ValueRangeConstraint(20, 20), ValueRangeConstraint(25, 25), ValueRangeConstraint(30, 30), )).clone(15)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frUniLmiCheckPointTimer.setStatus('mandatory')
frUniLmiMessageCountTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 4, 10, 1, 6), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(5, 5), ValueRangeConstraint(10, 10), ValueRangeConstraint(15, 15), ValueRangeConstraint(20, 20), ValueRangeConstraint(25, 25), ValueRangeConstraint(30, 30), )).clone(20)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frUniLmiMessageCountTimer.setStatus('mandatory')
frUniLmiIgnoreActiveBit = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 4, 10, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1))).clone('no')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frUniLmiIgnoreActiveBit.setStatus('mandatory')
frUniLmiSide = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 4, 10, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("network", 0), ("user", 1), ("both", 2))).clone('network')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frUniLmiSide.setStatus('mandatory')
frUniLmiPvcConfigParmsInFsr = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 4, 10, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1))).clone('no')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frUniLmiPvcConfigParmsInFsr.setStatus('mandatory')
frUniLmiStateTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 4, 11), )
if mibBuilder.loadTexts: frUniLmiStateTable.setStatus('mandatory')
frUniLmiStateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 4, 11, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-FrameRelayUniMIB", "frUniIndex"), (0, "Nortel-Magellan-Passport-FrameRelayUniMIB", "frUniLmiIndex"))
if mibBuilder.loadTexts: frUniLmiStateEntry.setStatus('mandatory')
frUniLmiAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 4, 11, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("locked", 0), ("unlocked", 1), ("shuttingDown", 2))).clone('unlocked')).setMaxAccess("readonly")
if mibBuilder.loadTexts: frUniLmiAdminState.setStatus('mandatory')
frUniLmiOperationalState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 4, 11, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1))).clone('disabled')).setMaxAccess("readonly")
if mibBuilder.loadTexts: frUniLmiOperationalState.setStatus('mandatory')
frUniLmiUsageState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 4, 11, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("idle", 0), ("active", 1), ("busy", 2))).clone('idle')).setMaxAccess("readonly")
if mibBuilder.loadTexts: frUniLmiUsageState.setStatus('mandatory')
frUniLmiPsiTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 4, 12), )
if mibBuilder.loadTexts: frUniLmiPsiTable.setStatus('mandatory')
frUniLmiPsiEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 4, 12, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-FrameRelayUniMIB", "frUniIndex"), (0, "Nortel-Magellan-Passport-FrameRelayUniMIB", "frUniLmiIndex"))
if mibBuilder.loadTexts: frUniLmiPsiEntry.setStatus('mandatory')
frUniLmiProtocolStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 4, 12, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("errorCondition", 0), ("normalCondition", 1), ("configuring", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: frUniLmiProtocolStatus.setStatus('mandatory')
frUniLmiOpProcedures = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 4, 12, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("none", 0), ("vendorForum", 1), ("ansi", 2), ("itu", 3), ("unknown", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: frUniLmiOpProcedures.setStatus('mandatory')
frUniLmiStatsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 4, 13), )
if mibBuilder.loadTexts: frUniLmiStatsTable.setStatus('mandatory')
frUniLmiStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 4, 13, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-FrameRelayUniMIB", "frUniIndex"), (0, "Nortel-Magellan-Passport-FrameRelayUniMIB", "frUniLmiIndex"))
if mibBuilder.loadTexts: frUniLmiStatsEntry.setStatus('mandatory')
frUniLmiKeepAliveStatusToIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 4, 13, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frUniLmiKeepAliveStatusToIf.setStatus('mandatory')
frUniLmiFullStatusToIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 4, 13, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frUniLmiFullStatusToIf.setStatus('mandatory')
frUniLmiKeepAliveStatusEnqFromIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 4, 13, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frUniLmiKeepAliveStatusEnqFromIf.setStatus('mandatory')
frUniLmiFullStatusEnqFromIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 4, 13, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frUniLmiFullStatusEnqFromIf.setStatus('mandatory')
frUniLmiNetworkSideEventHistory = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 4, 13, 1, 5), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(1, 10))).setMaxAccess("readonly")
if mibBuilder.loadTexts: frUniLmiNetworkSideEventHistory.setStatus('mandatory')
frUniLmiProtocolErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 4, 13, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frUniLmiProtocolErrors.setStatus('mandatory')
frUniLmiUnexpectedIes = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 4, 13, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frUniLmiUnexpectedIes.setStatus('mandatory')
frUniLmiSequenceErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 4, 13, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frUniLmiSequenceErrors.setStatus('mandatory')
frUniLmiUnexpectedReports = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 4, 13, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frUniLmiUnexpectedReports.setStatus('mandatory')
frUniLmiPollingVerifTimeouts = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 4, 13, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frUniLmiPollingVerifTimeouts.setStatus('mandatory')
frUniLmiKeepAliveEnqToIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 4, 13, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frUniLmiKeepAliveEnqToIf.setStatus('mandatory')
frUniLmiFullStatusEnqToIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 4, 13, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frUniLmiFullStatusEnqToIf.setStatus('mandatory')
frUniLmiUserSideEventHistory = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 4, 13, 1, 13), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(1, 10))).setMaxAccess("readonly")
if mibBuilder.loadTexts: frUniLmiUserSideEventHistory.setStatus('mandatory')
frUniLmiStatusSequenceErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 4, 13, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frUniLmiStatusSequenceErrors.setStatus('mandatory')
frUniLmiNoStatusReportCount = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 4, 13, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frUniLmiNoStatusReportCount.setStatus('mandatory')
frUniLmiUspParmsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 4, 14), )
if mibBuilder.loadTexts: frUniLmiUspParmsTable.setStatus('mandatory')
frUniLmiUspParmsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 4, 14, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-FrameRelayUniMIB", "frUniIndex"), (0, "Nortel-Magellan-Passport-FrameRelayUniMIB", "frUniLmiIndex"))
if mibBuilder.loadTexts: frUniLmiUspParmsEntry.setStatus('mandatory')
frUniLmiFullStatusPollingCycles = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 4, 14, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 255)).clone(6)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frUniLmiFullStatusPollingCycles.setStatus('mandatory')
frUniLmiLinkVerificationTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 4, 14, 1, 2), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(5, 5), ValueRangeConstraint(10, 10), ValueRangeConstraint(15, 15), ValueRangeConstraint(20, 20), ValueRangeConstraint(25, 25), ValueRangeConstraint(30, 30), )).clone(10)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frUniLmiLinkVerificationTimer.setStatus('mandatory')
frUniDlci = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 5))
frUniDlciRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 5, 1), )
if mibBuilder.loadTexts: frUniDlciRowStatusTable.setStatus('mandatory')
frUniDlciRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 5, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-FrameRelayUniMIB", "frUniIndex"), (0, "Nortel-Magellan-Passport-FrameRelayUniMIB", "frUniDlciIndex"))
if mibBuilder.loadTexts: frUniDlciRowStatusEntry.setStatus('mandatory')
frUniDlciRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 5, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frUniDlciRowStatus.setStatus('mandatory')
frUniDlciComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 5, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frUniDlciComponentName.setStatus('mandatory')
frUniDlciStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 5, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frUniDlciStorageType.setStatus('mandatory')
frUniDlciIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 5, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(16, 1007)))
if mibBuilder.loadTexts: frUniDlciIndex.setStatus('mandatory')
frUniDlciStateTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 5, 10), )
if mibBuilder.loadTexts: frUniDlciStateTable.setStatus('mandatory')
frUniDlciStateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 5, 10, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-FrameRelayUniMIB", "frUniIndex"), (0, "Nortel-Magellan-Passport-FrameRelayUniMIB", "frUniDlciIndex"))
if mibBuilder.loadTexts: frUniDlciStateEntry.setStatus('mandatory')
frUniDlciAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 5, 10, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("locked", 0), ("unlocked", 1), ("shuttingDown", 2))).clone('unlocked')).setMaxAccess("readonly")
if mibBuilder.loadTexts: frUniDlciAdminState.setStatus('mandatory')
frUniDlciOperationalState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 5, 10, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1))).clone('disabled')).setMaxAccess("readonly")
if mibBuilder.loadTexts: frUniDlciOperationalState.setStatus('mandatory')
frUniDlciUsageState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 5, 10, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("idle", 0), ("active", 1), ("busy", 2))).clone('idle')).setMaxAccess("readonly")
if mibBuilder.loadTexts: frUniDlciUsageState.setStatus('mandatory')
frUniDlciAvailabilityStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 5, 10, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(2, 2)).setFixedLength(2)).setMaxAccess("readonly")
if mibBuilder.loadTexts: frUniDlciAvailabilityStatus.setStatus('mandatory')
frUniDlciProceduralStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 5, 10, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 1)).setFixedLength(1)).setMaxAccess("readonly")
if mibBuilder.loadTexts: frUniDlciProceduralStatus.setStatus('mandatory')
frUniDlciControlStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 5, 10, 1, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 1)).setFixedLength(1)).setMaxAccess("readonly")
if mibBuilder.loadTexts: frUniDlciControlStatus.setStatus('mandatory')
frUniDlciAlarmStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 5, 10, 1, 7), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 1)).setFixedLength(1)).setMaxAccess("readonly")
if mibBuilder.loadTexts: frUniDlciAlarmStatus.setStatus('mandatory')
frUniDlciStandbyStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 5, 10, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 15))).clone(namedValues=NamedValues(("hotStandby", 0), ("coldStandby", 1), ("providingService", 2), ("notSet", 15))).clone('notSet')).setMaxAccess("readonly")
if mibBuilder.loadTexts: frUniDlciStandbyStatus.setStatus('mandatory')
frUniDlciUnknownStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 5, 10, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("false", 0), ("true", 1))).clone('false')).setMaxAccess("readonly")
if mibBuilder.loadTexts: frUniDlciUnknownStatus.setStatus('mandatory')
frUniDlciAbitTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 5, 12), )
if mibBuilder.loadTexts: frUniDlciAbitTable.setStatus('mandatory')
frUniDlciAbitEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 5, 12, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-FrameRelayUniMIB", "frUniIndex"), (0, "Nortel-Magellan-Passport-FrameRelayUniMIB", "frUniDlciIndex"))
if mibBuilder.loadTexts: frUniDlciAbitEntry.setStatus('mandatory')
frUniDlciABitStatusToIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 5, 12, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("inactive", 0), ("active", 1), ("notApplicable", 2))).clone('inactive')).setMaxAccess("readonly")
if mibBuilder.loadTexts: frUniDlciABitStatusToIf.setStatus('mandatory')
frUniDlciABitReasonToIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 5, 12, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("notApplicable", 0), ("remoteUserSignaled", 1), ("localLmiError", 2), ("remoteLmiError", 3), ("localLinkDown", 4), ("remoteLinkDown", 5), ("pvcDown", 6))).clone('notApplicable')).setMaxAccess("readonly")
if mibBuilder.loadTexts: frUniDlciABitReasonToIf.setStatus('mandatory')
frUniDlciABitStatusFromIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 5, 12, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("inactive", 0), ("active", 1), ("notApplicable", 2))).clone('inactive')).setMaxAccess("readonly")
if mibBuilder.loadTexts: frUniDlciABitStatusFromIf.setStatus('mandatory')
frUniDlciABitReasonFromIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 5, 12, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 4, 7))).clone(namedValues=NamedValues(("notApplicable", 0), ("remoteUserSignaled", 1), ("localLmiError", 2), ("localLinkDown", 4), ("missingFromLmiReport", 7))).clone('notApplicable')).setMaxAccess("readonly")
if mibBuilder.loadTexts: frUniDlciABitReasonFromIf.setStatus('mandatory')
frUniDlciLoopbackState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 5, 12, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("on", 1))).clone('off')).setMaxAccess("readonly")
if mibBuilder.loadTexts: frUniDlciLoopbackState.setStatus('mandatory')
frUniDlciCalldTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 5, 13), )
if mibBuilder.loadTexts: frUniDlciCalldTable.setStatus('mandatory')
frUniDlciCalldEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 5, 13, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-FrameRelayUniMIB", "frUniIndex"), (0, "Nortel-Magellan-Passport-FrameRelayUniMIB", "frUniDlciIndex"))
if mibBuilder.loadTexts: frUniDlciCalldEntry.setStatus('mandatory')
frUniDlciCallType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 5, 13, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("pvc", 0), ("svc", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: frUniDlciCallType.setStatus('mandatory')
frUniDlciQ933CallState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 5, 13, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 3, 6, 9, 10, 11, 12, 19, 20))).clone(namedValues=NamedValues(("null", 0), ("callInitiated", 1), ("outgoingCallProceeding", 3), ("callPresent", 6), ("incomingCallProceeding", 9), ("active", 10), ("disconnectRequest", 11), ("disconnectIndication", 12), ("releaseRequest", 19), ("notApplicable", 20)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: frUniDlciQ933CallState.setStatus('mandatory')
frUniDlciQ933CallReference = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 5, 13, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 32767))).setMaxAccess("readonly")
if mibBuilder.loadTexts: frUniDlciQ933CallReference.setStatus('mandatory')
frUniDlciSpOpTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 5, 14), )
if mibBuilder.loadTexts: frUniDlciSpOpTable.setStatus('mandatory')
frUniDlciSpOpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 5, 14, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-FrameRelayUniMIB", "frUniIndex"), (0, "Nortel-Magellan-Passport-FrameRelayUniMIB", "frUniDlciIndex"))
if mibBuilder.loadTexts: frUniDlciSpOpEntry.setStatus('mandatory')
frUniDlciMaximumFrameSize = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 5, 14, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 8187))).setMaxAccess("readonly")
if mibBuilder.loadTexts: frUniDlciMaximumFrameSize.setStatus('mandatory')
frUniDlciRateEnforcement = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 5, 14, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("on", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: frUniDlciRateEnforcement.setStatus('obsolete')
frUniDlciCommittedInformationRate = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 5, 14, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 50000000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: frUniDlciCommittedInformationRate.setStatus('mandatory')
frUniDlciCommittedBurstSize = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 5, 14, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 50000000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: frUniDlciCommittedBurstSize.setStatus('mandatory')
frUniDlciExcessBurstSize = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 5, 14, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 50000000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: frUniDlciExcessBurstSize.setStatus('mandatory')
frUniDlciMeasurementInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 5, 14, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: frUniDlciMeasurementInterval.setStatus('mandatory')
frUniDlciRateAdaptation = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 5, 14, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("off", 0), ("on", 1), ("eirOnly", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: frUniDlciRateAdaptation.setStatus('obsolete')
frUniDlciAccounting = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 5, 14, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("on", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: frUniDlciAccounting.setStatus('mandatory')
frUniDlciEmissionPriorityToIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 5, 14, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 1), ValueRangeConstraint(2, 2), ValueRangeConstraint(3, 3), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: frUniDlciEmissionPriorityToIf.setStatus('mandatory')
frUniDlciTransferPriToNwk = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 5, 14, 1, 10), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: frUniDlciTransferPriToNwk.setStatus('mandatory')
frUniDlciTransferPriFromNwk = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 5, 14, 1, 11), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: frUniDlciTransferPriFromNwk.setStatus('mandatory')
frUniDlciStatsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 5, 15), )
if mibBuilder.loadTexts: frUniDlciStatsTable.setStatus('mandatory')
frUniDlciStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 5, 15, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-FrameRelayUniMIB", "frUniIndex"), (0, "Nortel-Magellan-Passport-FrameRelayUniMIB", "frUniDlciIndex"))
if mibBuilder.loadTexts: frUniDlciStatsEntry.setStatus('mandatory')
frUniDlciFrmToIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 5, 15, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: frUniDlciFrmToIf.setStatus('mandatory')
frUniDlciFecnFrmToIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 5, 15, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: frUniDlciFecnFrmToIf.setStatus('mandatory')
frUniDlciBecnFrmToIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 5, 15, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: frUniDlciBecnFrmToIf.setStatus('mandatory')
frUniDlciBciToSubnet = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 5, 15, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: frUniDlciBciToSubnet.setStatus('mandatory')
frUniDlciDeFrmToIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 5, 15, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: frUniDlciDeFrmToIf.setStatus('mandatory')
frUniDlciDiscCongestedToIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 5, 15, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: frUniDlciDiscCongestedToIf.setStatus('mandatory')
frUniDlciDiscDeCongestedToIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 5, 15, 1, 7), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: frUniDlciDiscDeCongestedToIf.setStatus('mandatory')
frUniDlciFrmFromIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 5, 15, 1, 8), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: frUniDlciFrmFromIf.setStatus('mandatory')
frUniDlciFecnFrmFromIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 5, 15, 1, 9), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: frUniDlciFecnFrmFromIf.setStatus('mandatory')
frUniDlciBecnFrmFromIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 5, 15, 1, 10), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: frUniDlciBecnFrmFromIf.setStatus('mandatory')
frUniDlciFciFromSubnet = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 5, 15, 1, 11), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: frUniDlciFciFromSubnet.setStatus('mandatory')
frUniDlciBciFromSubnet = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 5, 15, 1, 12), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: frUniDlciBciFromSubnet.setStatus('mandatory')
frUniDlciDeFrmFromIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 5, 15, 1, 13), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: frUniDlciDeFrmFromIf.setStatus('mandatory')
frUniDlciExcessFrmFromIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 5, 15, 1, 14), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: frUniDlciExcessFrmFromIf.setStatus('mandatory')
frUniDlciDiscExcessFromIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 5, 15, 1, 15), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: frUniDlciDiscExcessFromIf.setStatus('mandatory')
frUniDlciDiscFrameAbit = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 5, 15, 1, 16), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: frUniDlciDiscFrameAbit.setStatus('mandatory')
frUniDlciDiscCongestedFromIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 5, 15, 1, 17), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: frUniDlciDiscCongestedFromIf.setStatus('mandatory')
frUniDlciDiscDeCongestedFromIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 5, 15, 1, 18), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: frUniDlciDiscDeCongestedFromIf.setStatus('mandatory')
frUniDlciErrorShortFrmFromIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 5, 15, 1, 19), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: frUniDlciErrorShortFrmFromIf.setStatus('mandatory')
frUniDlciErrorLongFrmFromIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 5, 15, 1, 20), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: frUniDlciErrorLongFrmFromIf.setStatus('mandatory')
frUniDlciBecnFrmSetByService = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 5, 15, 1, 21), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: frUniDlciBecnFrmSetByService.setStatus('mandatory')
frUniDlciBytesToIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 5, 15, 1, 22), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: frUniDlciBytesToIf.setStatus('mandatory')
frUniDlciDeBytesToIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 5, 15, 1, 23), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: frUniDlciDeBytesToIf.setStatus('mandatory')
frUniDlciDiscCongestedToIfBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 5, 15, 1, 24), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: frUniDlciDiscCongestedToIfBytes.setStatus('mandatory')
frUniDlciDiscDeCongestedToIfBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 5, 15, 1, 25), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: frUniDlciDiscDeCongestedToIfBytes.setStatus('mandatory')
frUniDlciBytesFromIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 5, 15, 1, 26), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: frUniDlciBytesFromIf.setStatus('mandatory')
frUniDlciDeBytesFromIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 5, 15, 1, 27), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: frUniDlciDeBytesFromIf.setStatus('mandatory')
frUniDlciExcessBytesFromIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 5, 15, 1, 28), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: frUniDlciExcessBytesFromIf.setStatus('mandatory')
frUniDlciDiscExcessFromIfBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 5, 15, 1, 29), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: frUniDlciDiscExcessFromIfBytes.setStatus('mandatory')
frUniDlciDiscByteAbit = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 5, 15, 1, 30), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: frUniDlciDiscByteAbit.setStatus('mandatory')
frUniDlciDiscCongestedFromIfBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 5, 15, 1, 31), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: frUniDlciDiscCongestedFromIfBytes.setStatus('mandatory')
frUniDlciDiscDeCongestedFromIfBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 5, 15, 1, 32), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: frUniDlciDiscDeCongestedFromIfBytes.setStatus('mandatory')
frUniDlciErrorShortBytesFromIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 5, 15, 1, 33), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: frUniDlciErrorShortBytesFromIf.setStatus('mandatory')
frUniDlciErrorLongBytesFromIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 5, 15, 1, 34), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: frUniDlciErrorLongBytesFromIf.setStatus('mandatory')
frUniDlciRateAdaptReduct = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 5, 15, 1, 35), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: frUniDlciRateAdaptReduct.setStatus('mandatory')
frUniDlciRateAdaptReductPeriod = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 5, 15, 1, 36), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: frUniDlciRateAdaptReductPeriod.setStatus('mandatory')
frUniDlciTransferPriorityToNetwork = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 5, 15, 1, 37), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15))).clone(namedValues=NamedValues(("n0", 0), ("n1", 1), ("n2", 2), ("n3", 3), ("n4", 4), ("n5", 5), ("n6", 6), ("n7", 7), ("n8", 8), ("n9", 9), ("n10", 10), ("n11", 11), ("n12", 12), ("n13", 13), ("n14", 14), ("n15", 15)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: frUniDlciTransferPriorityToNetwork.setStatus('obsolete')
frUniDlciTransferPriorityFromNetwork = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 5, 15, 1, 38), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15))).clone(namedValues=NamedValues(("n0", 0), ("n1", 1), ("n2", 2), ("n3", 3), ("n4", 4), ("n5", 5), ("n6", 6), ("n7", 7), ("n8", 8), ("n9", 9), ("n10", 10), ("n11", 11), ("n12", 12), ("n13", 13), ("n14", 14), ("n15", 15)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: frUniDlciTransferPriorityFromNetwork.setStatus('obsolete')
frUniDlciCirPresent = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 5, 15, 1, 39), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: frUniDlciCirPresent.setStatus('mandatory')
frUniDlciEirPresent = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 5, 15, 1, 40), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: frUniDlciEirPresent.setStatus('mandatory')
frUniDlciIntTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 5, 16), )
if mibBuilder.loadTexts: frUniDlciIntTable.setStatus('mandatory')
frUniDlciIntEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 5, 16, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-FrameRelayUniMIB", "frUniIndex"), (0, "Nortel-Magellan-Passport-FrameRelayUniMIB", "frUniDlciIndex"))
if mibBuilder.loadTexts: frUniDlciIntEntry.setStatus('mandatory')
frUniDlciStartTime = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 5, 16, 1, 1), EnterpriseDateAndTime().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(19, 19), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: frUniDlciStartTime.setStatus('mandatory')
frUniDlciTotalIngressBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 5, 16, 1, 2), Unsigned64().subtype(subtypeSpec=ValueSizeConstraint(8, 8)).setFixedLength(8)).setMaxAccess("readonly")
if mibBuilder.loadTexts: frUniDlciTotalIngressBytes.setStatus('mandatory')
frUniDlciTotalEgressBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 5, 16, 1, 3), Unsigned64().subtype(subtypeSpec=ValueSizeConstraint(8, 8)).setFixedLength(8)).setMaxAccess("readonly")
if mibBuilder.loadTexts: frUniDlciTotalEgressBytes.setStatus('mandatory')
frUniDlciEirIngressBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 5, 16, 1, 4), Unsigned64().subtype(subtypeSpec=ValueSizeConstraint(8, 8)).setFixedLength(8)).setMaxAccess("readonly")
if mibBuilder.loadTexts: frUniDlciEirIngressBytes.setStatus('mandatory')
frUniDlciEirEgressBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 5, 16, 1, 5), Unsigned64().subtype(subtypeSpec=ValueSizeConstraint(8, 8)).setFixedLength(8)).setMaxAccess("readonly")
if mibBuilder.loadTexts: frUniDlciEirEgressBytes.setStatus('mandatory')
frUniDlciDiscardedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 5, 16, 1, 6), Unsigned64().subtype(subtypeSpec=ValueSizeConstraint(8, 8)).setFixedLength(8)).setMaxAccess("readonly")
if mibBuilder.loadTexts: frUniDlciDiscardedBytes.setStatus('mandatory')
frUniDlciTotalIngressSegFrm = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 5, 16, 1, 7), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: frUniDlciTotalIngressSegFrm.setStatus('mandatory')
frUniDlciTotalEgressSegFrm = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 5, 16, 1, 8), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: frUniDlciTotalEgressSegFrm.setStatus('mandatory')
frUniDlciEirIngressSegFrm = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 5, 16, 1, 9), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: frUniDlciEirIngressSegFrm.setStatus('mandatory')
frUniDlciEirEgressSegFrm = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 5, 16, 1, 10), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: frUniDlciEirEgressSegFrm.setStatus('mandatory')
frUniDlciDiscardedSegFrm = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 5, 16, 1, 11), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: frUniDlciDiscardedSegFrm.setStatus('mandatory')
frUniDlciCirPresentObs = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 5, 16, 1, 12), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: frUniDlciCirPresentObs.setStatus('obsolete')
frUniDlciEirPresentObs = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 5, 16, 1, 13), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: frUniDlciEirPresentObs.setStatus('obsolete')
frUniDlciRateEnforcementPresent = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 5, 16, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1))).clone('no')).setMaxAccess("readonly")
if mibBuilder.loadTexts: frUniDlciRateEnforcementPresent.setStatus('obsolete')
frUniDlciRateAdaptationPresent = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 5, 16, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1))).clone('no')).setMaxAccess("readonly")
if mibBuilder.loadTexts: frUniDlciRateAdaptationPresent.setStatus('obsolete')
frUniDlciLocalRateAdaptOccurred = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 5, 16, 1, 16), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setMaxAccess("readonly")
if mibBuilder.loadTexts: frUniDlciLocalRateAdaptOccurred.setStatus('mandatory')
frUniDlciCallReferenceNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 5, 16, 1, 17), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: frUniDlciCallReferenceNumber.setStatus('mandatory')
frUniDlciElapsedDifference = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 5, 16, 1, 18), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: frUniDlciElapsedDifference.setStatus('mandatory')
frUniDlciDc = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 5, 2))
frUniDlciDcRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 5, 2, 1), )
if mibBuilder.loadTexts: frUniDlciDcRowStatusTable.setStatus('mandatory')
frUniDlciDcRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 5, 2, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-FrameRelayUniMIB", "frUniIndex"), (0, "Nortel-Magellan-Passport-FrameRelayUniMIB", "frUniDlciIndex"), (0, "Nortel-Magellan-Passport-FrameRelayUniMIB", "frUniDlciDcIndex"))
if mibBuilder.loadTexts: frUniDlciDcRowStatusEntry.setStatus('mandatory')
frUniDlciDcRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 5, 2, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frUniDlciDcRowStatus.setStatus('mandatory')
frUniDlciDcComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 5, 2, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frUniDlciDcComponentName.setStatus('mandatory')
frUniDlciDcStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 5, 2, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frUniDlciDcStorageType.setStatus('mandatory')
frUniDlciDcIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 5, 2, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: frUniDlciDcIndex.setStatus('mandatory')
frUniDlciDcOptionsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 5, 2, 10), )
if mibBuilder.loadTexts: frUniDlciDcOptionsTable.setStatus('mandatory')
frUniDlciDcOptionsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 5, 2, 10, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-FrameRelayUniMIB", "frUniIndex"), (0, "Nortel-Magellan-Passport-FrameRelayUniMIB", "frUniDlciIndex"), (0, "Nortel-Magellan-Passport-FrameRelayUniMIB", "frUniDlciDcIndex"))
if mibBuilder.loadTexts: frUniDlciDcOptionsEntry.setStatus('mandatory')
frUniDlciDcRemoteNpi = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 5, 2, 10, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("x121", 0), ("e164", 1))).clone('x121')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frUniDlciDcRemoteNpi.setStatus('mandatory')
frUniDlciDcRemoteDna = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 5, 2, 10, 1, 4), DigitString().subtype(subtypeSpec=ValueSizeConstraint(1, 15))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frUniDlciDcRemoteDna.setStatus('mandatory')
frUniDlciDcRemoteDlci = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 5, 2, 10, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(16, 1007))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frUniDlciDcRemoteDlci.setStatus('mandatory')
frUniDlciDcType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 5, 2, 10, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("permanentMaster", 1), ("permanentSlave", 2), ("permanentBackupSlave", 3), ("permanentSlaveWithBackup", 4))).clone('permanentMaster')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frUniDlciDcType.setStatus('mandatory')
frUniDlciDcTransferPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 5, 2, 10, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 255))).clone(namedValues=NamedValues(("n0", 0), ("n1", 1), ("n2", 2), ("n3", 3), ("n4", 4), ("n5", 5), ("n6", 6), ("n7", 7), ("n8", 8), ("n9", 9), ("n10", 10), ("n11", 11), ("n12", 12), ("n13", 13), ("n14", 14), ("n15", 15), ("useDnaDefTP", 255))).clone('useDnaDefTP')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frUniDlciDcTransferPriority.setStatus('mandatory')
frUniDlciDcDiscardPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 5, 2, 10, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 3))).clone(namedValues=NamedValues(("normal", 0), ("high", 1), ("useDnaDefPriority", 3))).clone('useDnaDefPriority')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frUniDlciDcDiscardPriority.setStatus('mandatory')
frUniDlciDcDeDiscardPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 5, 2, 10, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("lowest", 0), ("determinedByDiscardPriority", 1))).clone('determinedByDiscardPriority')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frUniDlciDcDeDiscardPriority.setStatus('mandatory')
frUniDlciDcDataPath = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 5, 2, 10, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("dprsOnly", 0), ("dprsMcsOnly", 1), ("dprsMcsFirst", 2), ("useDnaValue", 3))).clone('useDnaValue')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frUniDlciDcDataPath.setStatus('mandatory')
frUniDlciDcCugIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 5, 2, 10, 1, 13), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frUniDlciDcCugIndex.setStatus('mandatory')
frUniDlciDcCugType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 5, 2, 10, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 3, 9))).clone(namedValues=NamedValues(("doNotSignal", 0), ("cug", 3), ("cugOa", 9))).clone('doNotSignal')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frUniDlciDcCugType.setStatus('mandatory')
frUniDlciDcNfaTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 5, 2, 202), )
if mibBuilder.loadTexts: frUniDlciDcNfaTable.setStatus('obsolete')
frUniDlciDcNfaEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 5, 2, 202, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-FrameRelayUniMIB", "frUniIndex"), (0, "Nortel-Magellan-Passport-FrameRelayUniMIB", "frUniDlciIndex"), (0, "Nortel-Magellan-Passport-FrameRelayUniMIB", "frUniDlciDcIndex"), (0, "Nortel-Magellan-Passport-FrameRelayUniMIB", "frUniDlciDcNfaIndex"))
if mibBuilder.loadTexts: frUniDlciDcNfaEntry.setStatus('obsolete')
frUniDlciDcNfaIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 5, 2, 202, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(1, 1), ValueRangeConstraint(48, 48), )))
if mibBuilder.loadTexts: frUniDlciDcNfaIndex.setStatus('obsolete')
frUniDlciDcNfaValue = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 5, 2, 202, 1, 2), HexString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frUniDlciDcNfaValue.setStatus('obsolete')
frUniDlciDcNfaRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 5, 2, 202, 1, 3), RowStatus()).setMaxAccess("writeonly")
if mibBuilder.loadTexts: frUniDlciDcNfaRowStatus.setStatus('obsolete')
frUniDlciVc = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 5, 3))
frUniDlciVcRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 5, 3, 1), )
if mibBuilder.loadTexts: frUniDlciVcRowStatusTable.setStatus('mandatory')
frUniDlciVcRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 5, 3, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-FrameRelayUniMIB", "frUniIndex"), (0, "Nortel-Magellan-Passport-FrameRelayUniMIB", "frUniDlciIndex"), (0, "Nortel-Magellan-Passport-FrameRelayUniMIB", "frUniDlciVcIndex"))
if mibBuilder.loadTexts: frUniDlciVcRowStatusEntry.setStatus('mandatory')
frUniDlciVcRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 5, 3, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frUniDlciVcRowStatus.setStatus('mandatory')
frUniDlciVcComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 5, 3, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frUniDlciVcComponentName.setStatus('mandatory')
frUniDlciVcStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 5, 3, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frUniDlciVcStorageType.setStatus('mandatory')
frUniDlciVcIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 5, 3, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: frUniDlciVcIndex.setStatus('mandatory')
frUniDlciVcCadTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 5, 3, 10), )
if mibBuilder.loadTexts: frUniDlciVcCadTable.setStatus('mandatory')
frUniDlciVcCadEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 5, 3, 10, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-FrameRelayUniMIB", "frUniIndex"), (0, "Nortel-Magellan-Passport-FrameRelayUniMIB", "frUniDlciIndex"), (0, "Nortel-Magellan-Passport-FrameRelayUniMIB", "frUniDlciVcIndex"))
if mibBuilder.loadTexts: frUniDlciVcCadEntry.setStatus('mandatory')
frUniDlciVcType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 5, 3, 10, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("svc", 0), ("pvc", 1), ("spvc", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: frUniDlciVcType.setStatus('mandatory')
frUniDlciVcState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 5, 3, 10, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("creating", 0), ("readyP1", 1), ("dteWaitingP2", 2), ("dceWaitingP3", 3), ("dataTransferP4", 4), ("unsupportedP5", 5), ("dteClearRequestP6", 6), ("dceClearIndicationP7", 7), ("termination", 8)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: frUniDlciVcState.setStatus('mandatory')
frUniDlciVcPreviousState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 5, 3, 10, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("creating", 0), ("readyP1", 1), ("dteWaitingP2", 2), ("dceWaitingP3", 3), ("dataTransferP4", 4), ("unsupportedP5", 5), ("dteClearRequestP6", 6), ("dceClearIndicationP7", 7), ("termination", 8)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: frUniDlciVcPreviousState.setStatus('mandatory')
frUniDlciVcDiagnosticCode = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 5, 3, 10, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: frUniDlciVcDiagnosticCode.setStatus('mandatory')
frUniDlciVcPreviousDiagnosticCode = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 5, 3, 10, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: frUniDlciVcPreviousDiagnosticCode.setStatus('mandatory')
frUniDlciVcCalledNpi = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 5, 3, 10, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("x121", 0), ("e164", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: frUniDlciVcCalledNpi.setStatus('mandatory')
frUniDlciVcCalledDna = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 5, 3, 10, 1, 7), DigitString().subtype(subtypeSpec=ValueSizeConstraint(1, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: frUniDlciVcCalledDna.setStatus('mandatory')
frUniDlciVcCalledLcn = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 5, 3, 10, 1, 8), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: frUniDlciVcCalledLcn.setStatus('mandatory')
frUniDlciVcCallingNpi = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 5, 3, 10, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("x121", 0), ("e164", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: frUniDlciVcCallingNpi.setStatus('mandatory')
frUniDlciVcCallingDna = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 5, 3, 10, 1, 10), DigitString().subtype(subtypeSpec=ValueSizeConstraint(1, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: frUniDlciVcCallingDna.setStatus('mandatory')
frUniDlciVcCallingLcn = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 5, 3, 10, 1, 11), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: frUniDlciVcCallingLcn.setStatus('mandatory')
frUniDlciVcAccountingEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 5, 3, 10, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("yes", 0), ("no", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: frUniDlciVcAccountingEnabled.setStatus('mandatory')
frUniDlciVcFastSelectCall = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 5, 3, 10, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: frUniDlciVcFastSelectCall.setStatus('mandatory')
frUniDlciVcPathReliability = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 5, 3, 10, 1, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("high", 0), ("normal", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: frUniDlciVcPathReliability.setStatus('mandatory')
frUniDlciVcAccountingEnd = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 5, 3, 10, 1, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("callingEnd", 0), ("calledEnd", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: frUniDlciVcAccountingEnd.setStatus('mandatory')
frUniDlciVcPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 5, 3, 10, 1, 21), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("normal", 0), ("high", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: frUniDlciVcPriority.setStatus('mandatory')
frUniDlciVcSegmentSize = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 5, 3, 10, 1, 22), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4096))).setMaxAccess("readonly")
if mibBuilder.loadTexts: frUniDlciVcSegmentSize.setStatus('mandatory')
frUniDlciVcMaxSubnetPktSize = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 5, 3, 10, 1, 27), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4096))).setMaxAccess("readonly")
if mibBuilder.loadTexts: frUniDlciVcMaxSubnetPktSize.setStatus('mandatory')
frUniDlciVcRcosToNetwork = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 5, 3, 10, 1, 28), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("throughput", 0), ("delay", 1), ("multimedia", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: frUniDlciVcRcosToNetwork.setStatus('mandatory')
frUniDlciVcRcosFromNetwork = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 5, 3, 10, 1, 29), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("throughput", 0), ("delay", 1), ("multimedia", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: frUniDlciVcRcosFromNetwork.setStatus('mandatory')
frUniDlciVcEmissionPriorityToNetwork = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 5, 3, 10, 1, 30), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("normal", 0), ("high", 1), ("interrupting", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: frUniDlciVcEmissionPriorityToNetwork.setStatus('mandatory')
frUniDlciVcEmissionPriorityFromNetwork = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 5, 3, 10, 1, 31), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("normal", 0), ("high", 1), ("interrupting", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: frUniDlciVcEmissionPriorityFromNetwork.setStatus('mandatory')
frUniDlciVcDataPath = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 5, 3, 10, 1, 32), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: frUniDlciVcDataPath.setStatus('mandatory')
frUniDlciVcIntdTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 5, 3, 11), )
if mibBuilder.loadTexts: frUniDlciVcIntdTable.setStatus('mandatory')
frUniDlciVcIntdEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 5, 3, 11, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-FrameRelayUniMIB", "frUniIndex"), (0, "Nortel-Magellan-Passport-FrameRelayUniMIB", "frUniDlciIndex"), (0, "Nortel-Magellan-Passport-FrameRelayUniMIB", "frUniDlciVcIndex"))
if mibBuilder.loadTexts: frUniDlciVcIntdEntry.setStatus('mandatory')
frUniDlciVcCallReferenceNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 5, 3, 11, 1, 1), Hex().subtype(subtypeSpec=ValueRangeConstraint(0, 16777215))).setMaxAccess("readonly")
if mibBuilder.loadTexts: frUniDlciVcCallReferenceNumber.setStatus('mandatory')
frUniDlciVcElapsedTimeTillNow = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 5, 3, 11, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 16777215))).setMaxAccess("readonly")
if mibBuilder.loadTexts: frUniDlciVcElapsedTimeTillNow.setStatus('mandatory')
frUniDlciVcSegmentsRx = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 5, 3, 11, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 16777215))).setMaxAccess("readonly")
if mibBuilder.loadTexts: frUniDlciVcSegmentsRx.setStatus('mandatory')
frUniDlciVcSegmentsSent = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 5, 3, 11, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 16777215))).setMaxAccess("readonly")
if mibBuilder.loadTexts: frUniDlciVcSegmentsSent.setStatus('mandatory')
frUniDlciVcStartTime = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 5, 3, 11, 1, 5), EnterpriseDateAndTime().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(19, 19), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: frUniDlciVcStartTime.setStatus('mandatory')
frUniDlciVcFrdTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 5, 3, 12), )
if mibBuilder.loadTexts: frUniDlciVcFrdTable.setStatus('mandatory')
frUniDlciVcFrdEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 5, 3, 12, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-FrameRelayUniMIB", "frUniIndex"), (0, "Nortel-Magellan-Passport-FrameRelayUniMIB", "frUniDlciIndex"), (0, "Nortel-Magellan-Passport-FrameRelayUniMIB", "frUniDlciVcIndex"))
if mibBuilder.loadTexts: frUniDlciVcFrdEntry.setStatus('mandatory')
frUniDlciVcFrmCongestedToSubnet = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 5, 3, 12, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 5000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: frUniDlciVcFrmCongestedToSubnet.setStatus('mandatory')
frUniDlciVcCannotForwardToSubnet = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 5, 3, 12, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 5000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: frUniDlciVcCannotForwardToSubnet.setStatus('mandatory')
frUniDlciVcNotDataXferToSubnet = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 5, 3, 12, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 5000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: frUniDlciVcNotDataXferToSubnet.setStatus('mandatory')
frUniDlciVcOutOfRangeFrmFromSubnet = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 5, 3, 12, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 5000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: frUniDlciVcOutOfRangeFrmFromSubnet.setStatus('mandatory')
frUniDlciVcCombErrorsFromSubnet = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 5, 3, 12, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 5000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: frUniDlciVcCombErrorsFromSubnet.setStatus('mandatory')
frUniDlciVcDuplicatesFromSubnet = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 5, 3, 12, 1, 7), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 5000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: frUniDlciVcDuplicatesFromSubnet.setStatus('mandatory')
frUniDlciVcNotDataXferFromSubnet = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 5, 3, 12, 1, 8), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 5000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: frUniDlciVcNotDataXferFromSubnet.setStatus('mandatory')
frUniDlciVcFrmLossTimeouts = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 5, 3, 12, 1, 9), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 5000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: frUniDlciVcFrmLossTimeouts.setStatus('mandatory')
frUniDlciVcOoSeqByteCntExceeded = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 5, 3, 12, 1, 10), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 5000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: frUniDlciVcOoSeqByteCntExceeded.setStatus('mandatory')
frUniDlciVcPeakOoSeqPktCount = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 5, 3, 12, 1, 11), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 5000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: frUniDlciVcPeakOoSeqPktCount.setStatus('mandatory')
frUniDlciVcPeakOoSeqFrmForwarded = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 5, 3, 12, 1, 12), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 5000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: frUniDlciVcPeakOoSeqFrmForwarded.setStatus('mandatory')
frUniDlciVcSendSequenceNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 5, 3, 12, 1, 13), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 5000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: frUniDlciVcSendSequenceNumber.setStatus('mandatory')
frUniDlciVcPktRetryTimeouts = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 5, 3, 12, 1, 15), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 5000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: frUniDlciVcPktRetryTimeouts.setStatus('mandatory')
frUniDlciVcPeakRetryQueueSize = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 5, 3, 12, 1, 16), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 5000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: frUniDlciVcPeakRetryQueueSize.setStatus('mandatory')
frUniDlciVcSubnetRecoveries = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 5, 3, 12, 1, 17), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 5000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: frUniDlciVcSubnetRecoveries.setStatus('mandatory')
frUniDlciVcOoSeqPktCntExceeded = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 5, 3, 12, 1, 19), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: frUniDlciVcOoSeqPktCntExceeded.setStatus('mandatory')
frUniDlciVcPeakOoSeqByteCount = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 5, 3, 12, 1, 20), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 50000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: frUniDlciVcPeakOoSeqByteCount.setStatus('mandatory')
frUniDlciVcDmepTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 5, 3, 417), )
if mibBuilder.loadTexts: frUniDlciVcDmepTable.setStatus('mandatory')
frUniDlciVcDmepEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 5, 3, 417, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-FrameRelayUniMIB", "frUniIndex"), (0, "Nortel-Magellan-Passport-FrameRelayUniMIB", "frUniDlciIndex"), (0, "Nortel-Magellan-Passport-FrameRelayUniMIB", "frUniDlciVcIndex"), (0, "Nortel-Magellan-Passport-FrameRelayUniMIB", "frUniDlciVcDmepValue"))
if mibBuilder.loadTexts: frUniDlciVcDmepEntry.setStatus('mandatory')
frUniDlciVcDmepValue = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 5, 3, 417, 1, 1), RowPointer()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frUniDlciVcDmepValue.setStatus('mandatory')
frUniDlciSp = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 5, 4))
frUniDlciSpRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 5, 4, 1), )
if mibBuilder.loadTexts: frUniDlciSpRowStatusTable.setStatus('mandatory')
frUniDlciSpRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 5, 4, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-FrameRelayUniMIB", "frUniIndex"), (0, "Nortel-Magellan-Passport-FrameRelayUniMIB", "frUniDlciIndex"), (0, "Nortel-Magellan-Passport-FrameRelayUniMIB", "frUniDlciSpIndex"))
if mibBuilder.loadTexts: frUniDlciSpRowStatusEntry.setStatus('mandatory')
frUniDlciSpRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 5, 4, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frUniDlciSpRowStatus.setStatus('mandatory')
frUniDlciSpComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 5, 4, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frUniDlciSpComponentName.setStatus('mandatory')
frUniDlciSpStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 5, 4, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frUniDlciSpStorageType.setStatus('mandatory')
frUniDlciSpIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 5, 4, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: frUniDlciSpIndex.setStatus('mandatory')
frUniDlciSpParmsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 5, 4, 11), )
if mibBuilder.loadTexts: frUniDlciSpParmsTable.setStatus('mandatory')
frUniDlciSpParmsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 5, 4, 11, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-FrameRelayUniMIB", "frUniIndex"), (0, "Nortel-Magellan-Passport-FrameRelayUniMIB", "frUniDlciIndex"), (0, "Nortel-Magellan-Passport-FrameRelayUniMIB", "frUniDlciSpIndex"))
if mibBuilder.loadTexts: frUniDlciSpParmsEntry.setStatus('mandatory')
frUniDlciSpMaximumFrameSize = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 5, 4, 11, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 8187)).clone(2100)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frUniDlciSpMaximumFrameSize.setStatus('mandatory')
frUniDlciSpRateEnforcement = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 5, 4, 11, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("on", 1))).clone('on')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frUniDlciSpRateEnforcement.setStatus('mandatory')
frUniDlciSpCommittedInformationRate = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 5, 4, 11, 1, 3), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 50000000)).clone(64000)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frUniDlciSpCommittedInformationRate.setStatus('mandatory')
frUniDlciSpCommittedBurstSize = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 5, 4, 11, 1, 4), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 50000000)).clone(64000)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frUniDlciSpCommittedBurstSize.setStatus('mandatory')
frUniDlciSpExcessBurstSize = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 5, 4, 11, 1, 5), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 50000000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frUniDlciSpExcessBurstSize.setStatus('mandatory')
frUniDlciSpMeasurementInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 5, 4, 11, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 25500))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frUniDlciSpMeasurementInterval.setStatus('mandatory')
frUniDlciSpRateAdaptation = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 5, 4, 11, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("off", 0), ("on", 1), ("eirOnly", 2), ("cirProportionate", 3))).clone('off')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frUniDlciSpRateAdaptation.setStatus('mandatory')
frUniDlciSpAccounting = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 5, 4, 11, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("on", 1))).clone('on')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frUniDlciSpAccounting.setStatus('mandatory')
frUniDlciSpRaSensitivity = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 5, 4, 11, 1, 9), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 20)).clone(7)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frUniDlciSpRaSensitivity.setStatus('mandatory')
frUniDlciSpUpdateBCI = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 5, 4, 11, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("on", 1))).clone('off')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frUniDlciSpUpdateBCI.setStatus('mandatory')
frUniDlciLb = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 5, 5))
frUniDlciLbRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 5, 5, 1), )
if mibBuilder.loadTexts: frUniDlciLbRowStatusTable.setStatus('mandatory')
frUniDlciLbRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 5, 5, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-FrameRelayUniMIB", "frUniIndex"), (0, "Nortel-Magellan-Passport-FrameRelayUniMIB", "frUniDlciIndex"), (0, "Nortel-Magellan-Passport-FrameRelayUniMIB", "frUniDlciLbIndex"))
if mibBuilder.loadTexts: frUniDlciLbRowStatusEntry.setStatus('mandatory')
frUniDlciLbRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 5, 5, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frUniDlciLbRowStatus.setStatus('mandatory')
frUniDlciLbComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 5, 5, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frUniDlciLbComponentName.setStatus('mandatory')
frUniDlciLbStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 5, 5, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frUniDlciLbStorageType.setStatus('mandatory')
frUniDlciLbIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 5, 5, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: frUniDlciLbIndex.setStatus('mandatory')
frUniDlciLbStatsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 5, 5, 10), )
if mibBuilder.loadTexts: frUniDlciLbStatsTable.setStatus('mandatory')
frUniDlciLbStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 5, 5, 10, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-FrameRelayUniMIB", "frUniIndex"), (0, "Nortel-Magellan-Passport-FrameRelayUniMIB", "frUniDlciIndex"), (0, "Nortel-Magellan-Passport-FrameRelayUniMIB", "frUniDlciLbIndex"))
if mibBuilder.loadTexts: frUniDlciLbStatsEntry.setStatus('mandatory')
frUniDlciLbLocalTotalFrm = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 5, 5, 10, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: frUniDlciLbLocalTotalFrm.setStatus('mandatory')
frUniDlciLbLocalTotalBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 5, 5, 10, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: frUniDlciLbLocalTotalBytes.setStatus('mandatory')
frUniDlciLbLocalFecnFrm = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 5, 5, 10, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: frUniDlciLbLocalFecnFrm.setStatus('mandatory')
frUniDlciLbLocalBecnFrm = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 5, 5, 10, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: frUniDlciLbLocalBecnFrm.setStatus('mandatory')
frUniDlciLbLocalDeFrm = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 5, 5, 10, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: frUniDlciLbLocalDeFrm.setStatus('mandatory')
frUniDlciLbLocalDeBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 5, 5, 10, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: frUniDlciLbLocalDeBytes.setStatus('mandatory')
frUniDlciLbRemoteTotalFrm = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 5, 5, 10, 1, 7), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: frUniDlciLbRemoteTotalFrm.setStatus('mandatory')
frUniDlciLbRemoteTotalBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 5, 5, 10, 1, 8), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: frUniDlciLbRemoteTotalBytes.setStatus('mandatory')
frUniDlciLbRemoteFecnFrm = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 5, 5, 10, 1, 9), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: frUniDlciLbRemoteFecnFrm.setStatus('mandatory')
frUniDlciLbRemoteBecnFrm = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 5, 5, 10, 1, 10), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: frUniDlciLbRemoteBecnFrm.setStatus('mandatory')
frUniDlciLbRemoteDeFrm = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 5, 5, 10, 1, 13), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: frUniDlciLbRemoteDeFrm.setStatus('mandatory')
frUniDlciLbRemoteDeBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 5, 5, 10, 1, 14), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: frUniDlciLbRemoteDeBytes.setStatus('mandatory')
frUniSig = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 6))
frUniSigRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 6, 1), )
if mibBuilder.loadTexts: frUniSigRowStatusTable.setStatus('mandatory')
frUniSigRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 6, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-FrameRelayUniMIB", "frUniIndex"), (0, "Nortel-Magellan-Passport-FrameRelayUniMIB", "frUniSigIndex"))
if mibBuilder.loadTexts: frUniSigRowStatusEntry.setStatus('mandatory')
frUniSigRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 6, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frUniSigRowStatus.setStatus('mandatory')
frUniSigComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 6, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frUniSigComponentName.setStatus('mandatory')
frUniSigStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 6, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frUniSigStorageType.setStatus('mandatory')
frUniSigIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 6, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: frUniSigIndex.setStatus('mandatory')
frUniSigRangeTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 6, 11), )
if mibBuilder.loadTexts: frUniSigRangeTable.setStatus('mandatory')
frUniSigRangeEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 6, 11, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-FrameRelayUniMIB", "frUniIndex"), (0, "Nortel-Magellan-Passport-FrameRelayUniMIB", "frUniSigIndex"))
if mibBuilder.loadTexts: frUniSigRangeEntry.setStatus('mandatory')
frUniSigHighestPvcDlci = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 6, 11, 1, 1), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(16, 1007), )).clone(500)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frUniSigHighestPvcDlci.setStatus('mandatory')
frUniSigServParmsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 6, 12), )
if mibBuilder.loadTexts: frUniSigServParmsTable.setStatus('mandatory')
frUniSigServParmsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 6, 12, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-FrameRelayUniMIB", "frUniIndex"), (0, "Nortel-Magellan-Passport-FrameRelayUniMIB", "frUniSigIndex"))
if mibBuilder.loadTexts: frUniSigServParmsEntry.setStatus('mandatory')
frUniSigMaximumAggregateSvcCir = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 6, 12, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 10000)).clone(1000)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frUniSigMaximumAggregateSvcCir.setStatus('obsolete')
frUniSigMaximumAggregateSvcEir = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 6, 12, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295)).clone(10000)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frUniSigMaximumAggregateSvcEir.setStatus('obsolete')
frUniSigMaximumFrameSize = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 6, 12, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 8187)).clone(4096)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frUniSigMaximumFrameSize.setStatus('mandatory')
frUniSigDefaultMaximumFrameSize = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 6, 12, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 8187)).clone(2100)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frUniSigDefaultMaximumFrameSize.setStatus('mandatory')
frUniSigDefaultCommittedInformationRate = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 6, 12, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 52000000)).clone(64000)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frUniSigDefaultCommittedInformationRate.setStatus('mandatory')
frUniSigDefaultCommittedBurstSize = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 6, 12, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 52000000)).clone(64000)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frUniSigDefaultCommittedBurstSize.setStatus('mandatory')
frUniSigDefaultExcessBurstSize = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 6, 12, 1, 7), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 52000000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frUniSigDefaultExcessBurstSize.setStatus('mandatory')
frUniSigUnlimitedAggregateEir = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 6, 12, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1))).clone('yes')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frUniSigUnlimitedAggregateEir.setStatus('mandatory')
frUniSigRateEnforcement = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 6, 12, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("on", 1))).clone('on')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frUniSigRateEnforcement.setStatus('mandatory')
frUniSigRateAdaptation = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 6, 12, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("off", 0), ("on", 1), ("eirOnly", 2), ("cirProportionate", 3))).clone('off')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frUniSigRateAdaptation.setStatus('mandatory')
frUniSigMaximumAggregateSvcCirNormalQ = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 6, 12, 1, 11), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 10000)).clone(1000)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frUniSigMaximumAggregateSvcCirNormalQ.setStatus('mandatory')
frUniSigMaximumAggregateSvcCirHighQ = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 6, 12, 1, 12), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 10000)).clone(1000)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frUniSigMaximumAggregateSvcCirHighQ.setStatus('mandatory')
frUniSigMaximumAggregateSvcCirInterruptQ = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 6, 12, 1, 13), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 10000)).clone(1000)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frUniSigMaximumAggregateSvcCirInterruptQ.setStatus('mandatory')
frUniSigMaximumAggregateSvcEirNormalQ = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 6, 12, 1, 14), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295)).clone(10000)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frUniSigMaximumAggregateSvcEirNormalQ.setStatus('mandatory')
frUniSigMaximumAggregateSvcEirHighQ = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 6, 12, 1, 15), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295)).clone(10000)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frUniSigMaximumAggregateSvcEirHighQ.setStatus('mandatory')
frUniSigMaximumAggregateSvcEirInterruptQ = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 6, 12, 1, 16), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295)).clone(10000)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frUniSigMaximumAggregateSvcEirInterruptQ.setStatus('mandatory')
frUniSigX213IeHandling = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 6, 12, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("notSupported", 0), ("proprietary", 1))).clone('notSupported')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frUniSigX213IeHandling.setStatus('mandatory')
frUniSigRaSensitivity = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 6, 12, 1, 18), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 20)).clone(7)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frUniSigRaSensitivity.setStatus('mandatory')
frUniSigUpdateBCI = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 6, 12, 1, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("on", 1))).clone('off')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frUniSigUpdateBCI.setStatus('mandatory')
frUniSigDefaultLocCheck = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 6, 12, 1, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("on", 1))).clone('on')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frUniSigDefaultLocCheck.setStatus('mandatory')
frUniSigSysParmsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 6, 13), )
if mibBuilder.loadTexts: frUniSigSysParmsTable.setStatus('mandatory')
frUniSigSysParmsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 6, 13, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-FrameRelayUniMIB", "frUniIndex"), (0, "Nortel-Magellan-Passport-FrameRelayUniMIB", "frUniSigIndex"))
if mibBuilder.loadTexts: frUniSigSysParmsEntry.setStatus('mandatory')
frUniSigCallSetupTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 6, 13, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 255)).clone(4)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frUniSigCallSetupTimer.setStatus('mandatory')
frUniSigDisconnectTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 6, 13, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 255)).clone(30)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frUniSigDisconnectTimer.setStatus('mandatory')
frUniSigReleaseTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 6, 13, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 255)).clone(4)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frUniSigReleaseTimer.setStatus('mandatory')
frUniSigCallProceedingTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 6, 13, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 255)).clone(10)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frUniSigCallProceedingTimer.setStatus('mandatory')
frUniSigNetworkType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 6, 13, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("private", 1), ("public", 2))).clone('private')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frUniSigNetworkType.setStatus('mandatory')
frUniSigLapfSysTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 6, 14), )
if mibBuilder.loadTexts: frUniSigLapfSysTable.setStatus('mandatory')
frUniSigLapfSysEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 6, 14, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-FrameRelayUniMIB", "frUniIndex"), (0, "Nortel-Magellan-Passport-FrameRelayUniMIB", "frUniSigIndex"))
if mibBuilder.loadTexts: frUniSigLapfSysEntry.setStatus('mandatory')
frUniSigWindowSize = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 6, 14, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 127)).clone(7)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frUniSigWindowSize.setStatus('mandatory')
frUniSigRetransmitLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 6, 14, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 20)).clone(3)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frUniSigRetransmitLimit.setStatus('mandatory')
frUniSigAckTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 6, 14, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1000, 10000)).clone(1500)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frUniSigAckTimer.setStatus('mandatory')
frUniSigAckDelayTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 6, 14, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 10000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frUniSigAckDelayTimer.setStatus('mandatory')
frUniSigIdleProbeTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 6, 14, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1000, 65535000)).clone(30000)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frUniSigIdleProbeTimer.setStatus('mandatory')
frUniSigStateTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 6, 15), )
if mibBuilder.loadTexts: frUniSigStateTable.setStatus('mandatory')
frUniSigStateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 6, 15, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-FrameRelayUniMIB", "frUniIndex"), (0, "Nortel-Magellan-Passport-FrameRelayUniMIB", "frUniSigIndex"))
if mibBuilder.loadTexts: frUniSigStateEntry.setStatus('mandatory')
frUniSigAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 6, 15, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("locked", 0), ("unlocked", 1), ("shuttingDown", 2))).clone('unlocked')).setMaxAccess("readonly")
if mibBuilder.loadTexts: frUniSigAdminState.setStatus('mandatory')
frUniSigOperationalState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 6, 15, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1))).clone('disabled')).setMaxAccess("readonly")
if mibBuilder.loadTexts: frUniSigOperationalState.setStatus('mandatory')
frUniSigUsageState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 6, 15, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("idle", 0), ("active", 1), ("busy", 2))).clone('idle')).setMaxAccess("readonly")
if mibBuilder.loadTexts: frUniSigUsageState.setStatus('mandatory')
frUniSigStatsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 6, 16), )
if mibBuilder.loadTexts: frUniSigStatsTable.setStatus('mandatory')
frUniSigStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 6, 16, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-FrameRelayUniMIB", "frUniIndex"), (0, "Nortel-Magellan-Passport-FrameRelayUniMIB", "frUniSigIndex"))
if mibBuilder.loadTexts: frUniSigStatsEntry.setStatus('mandatory')
frUniSigCurrentNumberOfSvcCalls = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 6, 16, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 992))).setMaxAccess("readonly")
if mibBuilder.loadTexts: frUniSigCurrentNumberOfSvcCalls.setStatus('mandatory')
frUniSigInCalls = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 6, 16, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frUniSigInCalls.setStatus('mandatory')
frUniSigInCallsRefused = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 6, 16, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frUniSigInCallsRefused.setStatus('mandatory')
frUniSigOutCalls = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 6, 16, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frUniSigOutCalls.setStatus('mandatory')
frUniSigOutCallsFailed = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 6, 16, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frUniSigOutCallsFailed.setStatus('mandatory')
frUniSigProtocolErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 6, 16, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frUniSigProtocolErrors.setStatus('mandatory')
frUniSigQualityOfServiceNotAvailable = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 6, 16, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frUniSigQualityOfServiceNotAvailable.setStatus('mandatory')
frUniSigSetupTimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 6, 16, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frUniSigSetupTimeout.setStatus('mandatory')
frUniSigLastCauseInStatusMsgReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 6, 16, 1, 11), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: frUniSigLastCauseInStatusMsgReceived.setStatus('mandatory')
frUniSigLastStateInStatusMsgReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 6, 16, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63))).clone(namedValues=NamedValues(("null", 0), ("callInitiated", 1), ("n2", 2), ("outgoingCallProceeding", 3), ("n4", 4), ("n5", 5), ("callPresent", 6), ("n7", 7), ("n8", 8), ("incomingCallProceeding", 9), ("active", 10), ("disconnectRequest", 11), ("disconnectIndication", 12), ("n13", 13), ("n14", 14), ("n15", 15), ("n16", 16), ("n17", 17), ("n18", 18), ("releaseRequest", 19), ("notApplicable", 20), ("n21", 21), ("n22", 22), ("n23", 23), ("n24", 24), ("n25", 25), ("n26", 26), ("n27", 27), ("n28", 28), ("n29", 29), ("n30", 30), ("n31", 31), ("n32", 32), ("n33", 33), ("n34", 34), ("n35", 35), ("n36", 36), ("n37", 37), ("n38", 38), ("n39", 39), ("n40", 40), ("n41", 41), ("n42", 42), ("n43", 43), ("n44", 44), ("n45", 45), ("n46", 46), ("n47", 47), ("n48", 48), ("n49", 49), ("n50", 50), ("n51", 51), ("n52", 52), ("n53", 53), ("n54", 54), ("n55", 55), ("n56", 56), ("n57", 57), ("n58", 58), ("n59", 59), ("n60", 60), ("n61", 61), ("n62", 62), ("n63", 63)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: frUniSigLastStateInStatusMsgReceived.setStatus('mandatory')
frUniSigLastDlciReceivedStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 6, 16, 1, 13), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(16, 1007), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: frUniSigLastDlciReceivedStatus.setStatus('mandatory')
frUniSigLastQ933StateReceivedStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 6, 16, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 3, 6, 9, 10, 11, 12, 19, 20))).clone(namedValues=NamedValues(("null", 0), ("callInitiated", 1), ("outgoingCallProceeding", 3), ("callPresent", 6), ("incomingCallProceeding", 9), ("active", 10), ("disconnectRequest", 11), ("disconnectIndication", 12), ("releaseRequest", 19), ("notApplicable", 20)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: frUniSigLastQ933StateReceivedStatus.setStatus('mandatory')
frUniSigLastTimeMsgBlockCongested = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 6, 16, 1, 15), EnterpriseDateAndTime().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(16, 16), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: frUniSigLastTimeMsgBlockCongested.setStatus('mandatory')
frUniSigLastDlciWithMsgBlockCongestion = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 6, 16, 1, 16), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(16, 1007), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: frUniSigLastDlciWithMsgBlockCongestion.setStatus('mandatory')
frUniSigCurrentAggregateSvcCirNormalQ = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 6, 16, 1, 17), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: frUniSigCurrentAggregateSvcCirNormalQ.setStatus('mandatory')
frUniSigCurrentAggregateSvcCirHighQ = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 6, 16, 1, 18), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: frUniSigCurrentAggregateSvcCirHighQ.setStatus('mandatory')
frUniSigCurrentAggregateSvcCirInterruptQ = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 6, 16, 1, 19), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: frUniSigCurrentAggregateSvcCirInterruptQ.setStatus('mandatory')
frUniSigCurrentAggregateSvcEirNormalQ = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 6, 16, 1, 20), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: frUniSigCurrentAggregateSvcEirNormalQ.setStatus('mandatory')
frUniSigCurrentAggregateSvcEirHighQ = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 6, 16, 1, 21), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: frUniSigCurrentAggregateSvcEirHighQ.setStatus('mandatory')
frUniSigCurrentAggregateSvcEirInterruptQ = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 6, 16, 1, 22), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: frUniSigCurrentAggregateSvcEirInterruptQ.setStatus('mandatory')
frUniSigLapfStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 6, 17), )
if mibBuilder.loadTexts: frUniSigLapfStatusTable.setStatus('mandatory')
frUniSigLapfStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 6, 17, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-FrameRelayUniMIB", "frUniIndex"), (0, "Nortel-Magellan-Passport-FrameRelayUniMIB", "frUniSigIndex"))
if mibBuilder.loadTexts: frUniSigLapfStatusEntry.setStatus('mandatory')
frUniSigCurrentState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 6, 17, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 4, 5, 7))).clone(namedValues=NamedValues(("disconnected", 1), ("linkSetup", 2), ("disconnectRequest", 4), ("informationTransfer", 5), ("waitingAck", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: frUniSigCurrentState.setStatus('mandatory')
frUniSigLastStateChangeReason = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 6, 17, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 3, 5, 6, 7, 8, 9, 10, 12, 13))).clone(namedValues=NamedValues(("notStarted", 1), ("abmeEntered", 3), ("abmeReset", 5), ("dmReceived", 6), ("dmSent", 7), ("discReceived", 8), ("discSent", 9), ("frmrReceived", 10), ("n200RetranTimeOut", 12), ("other", 13)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: frUniSigLastStateChangeReason.setStatus('mandatory')
frUniSigFrmrReceive = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 6, 17, 1, 3), HexString().subtype(subtypeSpec=ValueSizeConstraint(0, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: frUniSigFrmrReceive.setStatus('mandatory')
frUniSigCurrentQueueSize = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 6, 17, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frUniSigCurrentQueueSize.setStatus('mandatory')
frUniSigLapfStatsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 6, 18), )
if mibBuilder.loadTexts: frUniSigLapfStatsTable.setStatus('mandatory')
frUniSigLapfStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 6, 18, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-FrameRelayUniMIB", "frUniIndex"), (0, "Nortel-Magellan-Passport-FrameRelayUniMIB", "frUniSigIndex"))
if mibBuilder.loadTexts: frUniSigLapfStatsEntry.setStatus('mandatory')
frUniSigStateChange = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 6, 18, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frUniSigStateChange.setStatus('mandatory')
frUniSigRemoteBusy = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 6, 18, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frUniSigRemoteBusy.setStatus('mandatory')
frUniSigReceiveRejectFrame = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 6, 18, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frUniSigReceiveRejectFrame.setStatus('mandatory')
frUniSigAckTimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 6, 18, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frUniSigAckTimeout.setStatus('mandatory')
frUniSigIFramesTransmitted = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 6, 18, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frUniSigIFramesTransmitted.setStatus('mandatory')
frUniSigIFramesTxDiscarded = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 6, 18, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frUniSigIFramesTxDiscarded.setStatus('mandatory')
frUniSigIFramesReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 6, 18, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frUniSigIFramesReceived.setStatus('mandatory')
frUniSigIFramesRcvdDiscarded = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 6, 18, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frUniSigIFramesRcvdDiscarded.setStatus('mandatory')
frUniSigSvcaccTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 6, 19), )
if mibBuilder.loadTexts: frUniSigSvcaccTable.setStatus('mandatory')
frUniSigSvcaccEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 6, 19, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-FrameRelayUniMIB", "frUniIndex"), (0, "Nortel-Magellan-Passport-FrameRelayUniMIB", "frUniSigIndex"))
if mibBuilder.loadTexts: frUniSigSvcaccEntry.setStatus('mandatory')
frUniSigDefaultAccounting = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 6, 19, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("on", 1))).clone('on')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frUniSigDefaultAccounting.setStatus('mandatory')
frUniSigCodesTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 6, 20), )
if mibBuilder.loadTexts: frUniSigCodesTable.setStatus('mandatory')
frUniSigCodesEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 6, 20, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-FrameRelayUniMIB", "frUniIndex"), (0, "Nortel-Magellan-Passport-FrameRelayUniMIB", "frUniSigIndex"))
if mibBuilder.loadTexts: frUniSigCodesEntry.setStatus('mandatory')
frUniSigLastClearRemoteDataNetworkAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 6, 20, 1, 1), DigitString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: frUniSigLastClearRemoteDataNetworkAddress.setStatus('mandatory')
frUniSigLastClearCause = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 6, 20, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: frUniSigLastClearCause.setStatus('mandatory')
frUniSigLastDiagnosticCode = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 6, 20, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: frUniSigLastDiagnosticCode.setStatus('mandatory')
frUniVFramer = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 8))
frUniVFramerRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 8, 1), )
if mibBuilder.loadTexts: frUniVFramerRowStatusTable.setStatus('mandatory')
frUniVFramerRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 8, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-FrameRelayUniMIB", "frUniIndex"), (0, "Nortel-Magellan-Passport-FrameRelayUniMIB", "frUniVFramerIndex"))
if mibBuilder.loadTexts: frUniVFramerRowStatusEntry.setStatus('mandatory')
frUniVFramerRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 8, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frUniVFramerRowStatus.setStatus('mandatory')
frUniVFramerComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 8, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frUniVFramerComponentName.setStatus('mandatory')
frUniVFramerStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 8, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frUniVFramerStorageType.setStatus('mandatory')
frUniVFramerIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 8, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: frUniVFramerIndex.setStatus('mandatory')
frUniVFramerProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 8, 10), )
if mibBuilder.loadTexts: frUniVFramerProvTable.setStatus('mandatory')
frUniVFramerProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 8, 10, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-FrameRelayUniMIB", "frUniIndex"), (0, "Nortel-Magellan-Passport-FrameRelayUniMIB", "frUniVFramerIndex"))
if mibBuilder.loadTexts: frUniVFramerProvEntry.setStatus('mandatory')
frUniVFramerOtherVirtualFramer = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 8, 10, 1, 1), Link()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frUniVFramerOtherVirtualFramer.setStatus('mandatory')
frUniVFramerLogicalProcessor = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 8, 10, 1, 2), Link()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frUniVFramerLogicalProcessor.setStatus('mandatory')
frUniVFramerStateTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 8, 11), )
if mibBuilder.loadTexts: frUniVFramerStateTable.setStatus('mandatory')
frUniVFramerStateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 8, 11, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-FrameRelayUniMIB", "frUniIndex"), (0, "Nortel-Magellan-Passport-FrameRelayUniMIB", "frUniVFramerIndex"))
if mibBuilder.loadTexts: frUniVFramerStateEntry.setStatus('mandatory')
frUniVFramerAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 8, 11, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("locked", 0), ("unlocked", 1), ("shuttingDown", 2))).clone('unlocked')).setMaxAccess("readonly")
if mibBuilder.loadTexts: frUniVFramerAdminState.setStatus('mandatory')
frUniVFramerOperationalState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 8, 11, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1))).clone('disabled')).setMaxAccess("readonly")
if mibBuilder.loadTexts: frUniVFramerOperationalState.setStatus('mandatory')
frUniVFramerUsageState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 8, 11, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("idle", 0), ("active", 1), ("busy", 2))).clone('idle')).setMaxAccess("readonly")
if mibBuilder.loadTexts: frUniVFramerUsageState.setStatus('mandatory')
frUniVFramerStatsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 8, 12), )
if mibBuilder.loadTexts: frUniVFramerStatsTable.setStatus('mandatory')
frUniVFramerStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 8, 12, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-FrameRelayUniMIB", "frUniIndex"), (0, "Nortel-Magellan-Passport-FrameRelayUniMIB", "frUniVFramerIndex"))
if mibBuilder.loadTexts: frUniVFramerStatsEntry.setStatus('mandatory')
frUniVFramerFrmToOtherVFramer = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 8, 12, 1, 2), PassportCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frUniVFramerFrmToOtherVFramer.setStatus('mandatory')
frUniVFramerFrmFromOtherVFramer = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 8, 12, 1, 3), PassportCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frUniVFramerFrmFromOtherVFramer.setStatus('mandatory')
frUniVFramerOctetFromOtherVFramer = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 8, 12, 1, 5), PassportCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frUniVFramerOctetFromOtherVFramer.setStatus('mandatory')
frUniLts = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 9))
frUniLtsRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 9, 1), )
if mibBuilder.loadTexts: frUniLtsRowStatusTable.setStatus('mandatory')
frUniLtsRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 9, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-FrameRelayUniMIB", "frUniIndex"), (0, "Nortel-Magellan-Passport-FrameRelayUniMIB", "frUniLtsIndex"))
if mibBuilder.loadTexts: frUniLtsRowStatusEntry.setStatus('mandatory')
frUniLtsRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 9, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frUniLtsRowStatus.setStatus('mandatory')
frUniLtsComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 9, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frUniLtsComponentName.setStatus('mandatory')
frUniLtsStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 9, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frUniLtsStorageType.setStatus('mandatory')
frUniLtsIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 9, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: frUniLtsIndex.setStatus('mandatory')
frUniLtsSetupTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 9, 10), )
if mibBuilder.loadTexts: frUniLtsSetupTable.setStatus('mandatory')
frUniLtsSetupEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 9, 10, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-FrameRelayUniMIB", "frUniIndex"), (0, "Nortel-Magellan-Passport-FrameRelayUniMIB", "frUniLtsIndex"))
if mibBuilder.loadTexts: frUniLtsSetupEntry.setStatus('mandatory')
frUniLtsDuration = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 9, 10, 1, 200), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frUniLtsDuration.setStatus('mandatory')
frUniLtsAlgorithm = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 9, 10, 1, 201), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("continousBurst", 0), ("intervalBurst", 1), ("delayBurst", 2), ("fixedBurst", 3))).clone('continousBurst')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frUniLtsAlgorithm.setStatus('mandatory')
frUniLtsBurstSize = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 9, 10, 1, 204), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 250)).clone(50)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frUniLtsBurstSize.setStatus('mandatory')
frUniLtsTimeInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 9, 10, 1, 205), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 60000)).clone(100)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frUniLtsTimeInterval.setStatus('mandatory')
frUniLtsStateTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 9, 11), )
if mibBuilder.loadTexts: frUniLtsStateTable.setStatus('mandatory')
frUniLtsStateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 9, 11, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-FrameRelayUniMIB", "frUniIndex"), (0, "Nortel-Magellan-Passport-FrameRelayUniMIB", "frUniLtsIndex"))
if mibBuilder.loadTexts: frUniLtsStateEntry.setStatus('mandatory')
frUniLtsGeneratorState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 9, 11, 1, 200), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("stopped", 0), ("running", 1))).clone('stopped')).setMaxAccess("readonly")
if mibBuilder.loadTexts: frUniLtsGeneratorState.setStatus('mandatory')
frUniLtsCycleIncomplete = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 9, 11, 1, 201), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("false", 0), ("true", 1))).clone('true')).setMaxAccess("readonly")
if mibBuilder.loadTexts: frUniLtsCycleIncomplete.setStatus('mandatory')
frUniLtsLastActiveInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 9, 11, 1, 202), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: frUniLtsLastActiveInterval.setStatus('mandatory')
frUniLtsLoad = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 9, 11, 1, 204), FixedPoint3().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: frUniLtsLoad.setStatus('mandatory')
frUniLtsElapsedGenerationTime = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 9, 11, 1, 205), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: frUniLtsElapsedGenerationTime.setStatus('mandatory')
frUniLtsResultsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 9, 12), )
if mibBuilder.loadTexts: frUniLtsResultsTable.setStatus('mandatory')
frUniLtsResultsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 9, 12, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-FrameRelayUniMIB", "frUniIndex"), (0, "Nortel-Magellan-Passport-FrameRelayUniMIB", "frUniLtsIndex"))
if mibBuilder.loadTexts: frUniLtsResultsEntry.setStatus('mandatory')
frUniLtsFramesTx = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 9, 12, 1, 200), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frUniLtsFramesTx.setStatus('mandatory')
frUniLtsBytesTx = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 9, 12, 1, 204), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: frUniLtsBytesTx.setStatus('mandatory')
frUniLtsBitRateTx = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 9, 12, 1, 208), FixedPoint3().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: frUniLtsBitRateTx.setStatus('mandatory')
frUniLtsFrameRateTx = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 9, 12, 1, 209), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: frUniLtsFrameRateTx.setStatus('mandatory')
frUniLtsPat = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 9, 2))
frUniLtsPatRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 9, 2, 1), )
if mibBuilder.loadTexts: frUniLtsPatRowStatusTable.setStatus('mandatory')
frUniLtsPatRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 9, 2, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-FrameRelayUniMIB", "frUniIndex"), (0, "Nortel-Magellan-Passport-FrameRelayUniMIB", "frUniLtsIndex"), (0, "Nortel-Magellan-Passport-FrameRelayUniMIB", "frUniLtsPatIndex"))
if mibBuilder.loadTexts: frUniLtsPatRowStatusEntry.setStatus('mandatory')
frUniLtsPatRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 9, 2, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frUniLtsPatRowStatus.setStatus('mandatory')
frUniLtsPatComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 9, 2, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frUniLtsPatComponentName.setStatus('mandatory')
frUniLtsPatStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 9, 2, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frUniLtsPatStorageType.setStatus('mandatory')
frUniLtsPatIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 9, 2, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 29)))
if mibBuilder.loadTexts: frUniLtsPatIndex.setStatus('mandatory')
frUniLtsPatDefaultsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 9, 2, 10), )
if mibBuilder.loadTexts: frUniLtsPatDefaultsTable.setStatus('mandatory')
frUniLtsPatDefaultsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 9, 2, 10, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-FrameRelayUniMIB", "frUniIndex"), (0, "Nortel-Magellan-Passport-FrameRelayUniMIB", "frUniLtsIndex"), (0, "Nortel-Magellan-Passport-FrameRelayUniMIB", "frUniLtsPatIndex"))
if mibBuilder.loadTexts: frUniLtsPatDefaultsEntry.setStatus('mandatory')
frUniLtsPatDefaultDlci = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 9, 2, 10, 1, 200), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(16, 1007)).clone(16)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frUniLtsPatDefaultDlci.setStatus('mandatory')
frUniLtsPatDefaultNumFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 9, 2, 10, 1, 201), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295)).clone(100)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frUniLtsPatDefaultNumFrames.setStatus('mandatory')
frUniLtsPatDefaultDataSize = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 9, 2, 10, 1, 202), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 8200)).clone(512)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frUniLtsPatDefaultDataSize.setStatus('mandatory')
frUniLtsPatDefaultHeaderBits = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 9, 2, 10, 1, 203), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 1)).setFixedLength(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frUniLtsPatDefaultHeaderBits.setStatus('mandatory')
frUniLtsPatDefaultHeaderLength = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 9, 2, 10, 1, 204), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(2, 4), )).clone(2)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frUniLtsPatDefaultHeaderLength.setStatus('mandatory')
frUniLtsPatDefaultEABits = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 9, 2, 10, 1, 205), Hex().subtype(subtypeSpec=ValueRangeConstraint(0, 15)).clone(4)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frUniLtsPatDefaultEABits.setStatus('mandatory')
frUniLtsPatDefaultPayloadPattern = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 9, 2, 10, 1, 206), HexString().subtype(subtypeSpec=ValueSizeConstraint(1, 12)).clone(hexValue="55")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frUniLtsPatDefaultPayloadPattern.setStatus('mandatory')
frUniLtsPatDefaultRfc1490Header = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 9, 2, 10, 1, 207), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18))).clone(namedValues=NamedValues(("n0", 0), ("n1", 1), ("n2", 2), ("n3", 3), ("n4", 4), ("n5", 5), ("n6", 6), ("n7", 7), ("n8", 8), ("n9", 9), ("n10", 10), ("n11", 11), ("n12", 12), ("n13", 13), ("n14", 14), ("n15", 15), ("n16", 16), ("n17", 17), ("none", 18))).clone('none')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frUniLtsPatDefaultRfc1490Header.setStatus('mandatory')
frUniLtsPatDefaultUseBadLrc = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 9, 2, 10, 1, 208), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1))).clone('no')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frUniLtsPatDefaultUseBadLrc.setStatus('mandatory')
frUniLtsPatSetupTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 9, 2, 11), )
if mibBuilder.loadTexts: frUniLtsPatSetupTable.setStatus('mandatory')
frUniLtsPatSetupEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 9, 2, 11, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-FrameRelayUniMIB", "frUniIndex"), (0, "Nortel-Magellan-Passport-FrameRelayUniMIB", "frUniLtsIndex"), (0, "Nortel-Magellan-Passport-FrameRelayUniMIB", "frUniLtsPatIndex"))
if mibBuilder.loadTexts: frUniLtsPatSetupEntry.setStatus('mandatory')
frUniLtsPatDlci = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 9, 2, 11, 1, 200), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(16, 1007)).clone(16)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frUniLtsPatDlci.setStatus('mandatory')
frUniLtsPatNumFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 9, 2, 11, 1, 201), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295)).clone(100)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frUniLtsPatNumFrames.setStatus('mandatory')
frUniLtsPatDataSize = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 9, 2, 11, 1, 202), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 8200)).clone(512)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frUniLtsPatDataSize.setStatus('mandatory')
frUniLtsPatHeaderBits = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 9, 2, 11, 1, 203), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 1)).setFixedLength(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frUniLtsPatHeaderBits.setStatus('mandatory')
frUniLtsPatHeaderLength = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 9, 2, 11, 1, 204), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(2, 4), )).clone(2)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frUniLtsPatHeaderLength.setStatus('mandatory')
frUniLtsPatEaBits = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 9, 2, 11, 1, 205), Hex().subtype(subtypeSpec=ValueRangeConstraint(0, 15)).clone(4)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frUniLtsPatEaBits.setStatus('mandatory')
frUniLtsPatPayloadPattern = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 9, 2, 11, 1, 206), HexString().subtype(subtypeSpec=ValueSizeConstraint(1, 12)).clone(hexValue="55")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frUniLtsPatPayloadPattern.setStatus('mandatory')
frUniLtsPatRfc1490Header = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 9, 2, 11, 1, 207), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18))).clone(namedValues=NamedValues(("n0", 0), ("n1", 1), ("n2", 2), ("n3", 3), ("n4", 4), ("n5", 5), ("n6", 6), ("n7", 7), ("n8", 8), ("n9", 9), ("n10", 10), ("n11", 11), ("n12", 12), ("n13", 13), ("n14", 14), ("n15", 15), ("n16", 16), ("n17", 17), ("none", 18))).clone('none')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frUniLtsPatRfc1490Header.setStatus('mandatory')
frUniLtsPatUseBadLrc = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 9, 2, 11, 1, 208), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1))).clone('no')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frUniLtsPatUseBadLrc.setStatus('mandatory')
frUniLtsPatOpDataTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 9, 2, 12), )
if mibBuilder.loadTexts: frUniLtsPatOpDataTable.setStatus('mandatory')
frUniLtsPatOpDataEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 9, 2, 12, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-FrameRelayUniMIB", "frUniIndex"), (0, "Nortel-Magellan-Passport-FrameRelayUniMIB", "frUniLtsIndex"), (0, "Nortel-Magellan-Passport-FrameRelayUniMIB", "frUniLtsPatIndex"))
if mibBuilder.loadTexts: frUniLtsPatOpDataEntry.setStatus('mandatory')
frUniLtsPatFramePattern = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 9, 2, 12, 1, 200), HexString().subtype(subtypeSpec=ValueSizeConstraint(20, 24))).setMaxAccess("readonly")
if mibBuilder.loadTexts: frUniLtsPatFramePattern.setStatus('mandatory')
frUniLtsPatHdlcBitsInserted = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 9, 2, 12, 1, 201), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: frUniLtsPatHdlcBitsInserted.setStatus('mandatory')
frUniLtsPatOpStateTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 9, 2, 13), )
if mibBuilder.loadTexts: frUniLtsPatOpStateTable.setStatus('mandatory')
frUniLtsPatOpStateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 9, 2, 13, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-FrameRelayUniMIB", "frUniIndex"), (0, "Nortel-Magellan-Passport-FrameRelayUniMIB", "frUniLtsIndex"), (0, "Nortel-Magellan-Passport-FrameRelayUniMIB", "frUniLtsPatIndex"))
if mibBuilder.loadTexts: frUniLtsPatOpStateEntry.setStatus('mandatory')
frUniLtsPatLoad = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 9, 2, 13, 1, 200), FixedPoint3().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: frUniLtsPatLoad.setStatus('mandatory')
frUniLtsPatStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 71, 9, 2, 13, 1, 201), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("enabled", 0), ("disabled", 1))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frUniLtsPatStatus.setStatus('mandatory')
frameRelayUniGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 24, 1))
frameRelayUniGroupBE = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 24, 1, 5))
frameRelayUniGroupBE01 = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 24, 1, 5, 2))
frameRelayUniGroupBE01A = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 24, 1, 5, 2, 2))
frameRelayUniCapabilities = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 24, 3))
frameRelayUniCapabilitiesBE = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 24, 3, 5))
frameRelayUniCapabilitiesBE01 = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 24, 3, 5, 2))
frameRelayUniCapabilitiesBE01A = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 24, 3, 5, 2, 2))
mibBuilder.exportSymbols("Nortel-Magellan-Passport-FrameRelayUniMIB", frUniDnaCugComponentName=frUniDnaCugComponentName, frUniDlciBecnFrmFromIf=frUniDlciBecnFrmFromIf, frUniDlciQ933CallState=frUniDlciQ933CallState, frameRelayUniGroupBE01=frameRelayUniGroupBE01, frUniDnaHgMRowStatusEntry=frUniDnaHgMRowStatusEntry, frUniDlciStandbyStatus=frUniDlciStandbyStatus, frUniDlciElapsedDifference=frUniDlciElapsedDifference, frUniLmiRowStatusTable=frUniLmiRowStatusTable, frUniStateTable=frUniStateTable, frUniDlciAdminState=frUniDlciAdminState, frUniDlciVcSegmentsSent=frUniDlciVcSegmentsSent, frUniDlciVcStorageType=frUniDlciVcStorageType, frUniDnaAccountCollection=frUniDnaAccountCollection, frUniVFramerUsageState=frUniVFramerUsageState, frUniDlciABitReasonFromIf=frUniDlciABitReasonFromIf, frUniSigLastDlciReceivedStatus=frUniSigLastDlciReceivedStatus, frUniLtsFrameRateTx=frUniLtsFrameRateTx, frUniLtsPatDefaultEABits=frUniLtsPatDefaultEABits, frUniSigDefaultCommittedBurstSize=frUniSigDefaultCommittedBurstSize, frUniVFramerLogicalProcessor=frUniVFramerLogicalProcessor, frUniDlciVcDiagnosticCode=frUniDlciVcDiagnosticCode, frUniLmiStorageType=frUniLmiStorageType, frUniDlciDiscExcessFromIfBytes=frUniDlciDiscExcessFromIfBytes, frUniDlciIndex=frUniDlciIndex, frUniDlciMaximumFrameSize=frUniDlciMaximumFrameSize, frUniFramerAborts=frUniFramerAborts, frUniDlciVcSubnetRecoveries=frUniDlciVcSubnetRecoveries, frUniComponentName=frUniComponentName, frUniDnaIncomingOptionsTable=frUniDnaIncomingOptionsTable, frUniDlciLbLocalDeBytes=frUniDlciLbLocalDeBytes, frUniDnaTransferPriorityOverRide=frUniDnaTransferPriorityOverRide, frUniLtsPatDefaultsTable=frUniLtsPatDefaultsTable, frUniDnaOutPathSensitivityOverRide=frUniDnaOutPathSensitivityOverRide, frUniLmiIndex=frUniLmiIndex, frUniDlciFecnFrmFromIf=frUniDlciFecnFrmFromIf, frUniDlciDcComponentName=frUniDlciDcComponentName, frUniStorageType=frUniStorageType, frUniDlciDcDiscardPriority=frUniDlciDcDiscardPriority, frUniDlciLbLocalTotalFrm=frUniDlciLbLocalTotalFrm, frUniVFramerStorageType=frUniVFramerStorageType, frUniLtsComponentName=frUniLtsComponentName, frUniDlciDiscCongestedToIf=frUniDlciDiscCongestedToIf, frUniLtsPat=frUniLtsPat, frUniSigInCalls=frUniSigInCalls, frUniLtsBytesTx=frUniLtsBytesTx, frUniFramerLrcErrors=frUniFramerLrcErrors, frUniSigMaximumAggregateSvcEirHighQ=frUniSigMaximumAggregateSvcEirHighQ, frUniSigRetransmitLimit=frUniSigRetransmitLimit, frUniDlciVcPathReliability=frUniDlciVcPathReliability, frUniOperStatusTable=frUniOperStatusTable, frUniDlciDeFrmToIf=frUniDlciDeFrmToIf, frUniSigLapfSysTable=frUniSigLapfSysTable, frUniFramerStatsTable=frUniFramerStatsTable, frUniDnaHgMRowStatus=frUniDnaHgMRowStatus, frUniLtsPatDefaultNumFrames=frUniLtsPatDefaultNumFrames, frUniDnaCallOptionsTable=frUniDnaCallOptionsTable, frUniDlciSpCommittedInformationRate=frUniDlciSpCommittedInformationRate, frUniSigRowStatusTable=frUniSigRowStatusTable, frUniDnaHgMOpTable=frUniDnaHgMOpTable, frUniAlarmStatus=frUniAlarmStatus, frUniDlciVcEmissionPriorityFromNetwork=frUniDlciVcEmissionPriorityFromNetwork, frUniDlciRowStatusEntry=frUniDlciRowStatusEntry, frUniSigSvcaccTable=frUniSigSvcaccTable, frUniLtsIndex=frUniLtsIndex, frUniDlciDiscCongestedToIfBytes=frUniDlciDiscCongestedToIfBytes, frUniDlci=frUniDlci, frUniDlciSpUpdateBCI=frUniDlciSpUpdateBCI, frUniDlciCalldEntry=frUniDlciCalldEntry, frUniLtsPatDlci=frUniLtsPatDlci, frUniFramerRowStatus=frUniFramerRowStatus, frUniDlciSpRowStatusEntry=frUniDlciSpRowStatusEntry, frUniFramerComponentName=frUniFramerComponentName, frUniDlciVcDuplicatesFromSubnet=frUniDlciVcDuplicatesFromSubnet, frUniSigDefaultExcessBurstSize=frUniSigDefaultExcessBurstSize, frUniDlciVcCalledDna=frUniDlciVcCalledDna, frUniDlciAbitTable=frUniDlciAbitTable, frUniLmiUsageState=frUniLmiUsageState, frUniLmiFullStatusToIf=frUniLmiFullStatusToIf, frUniDlciExcessBurstSize=frUniDlciExcessBurstSize, frUniDlciDcRemoteDlci=frUniDlciDcRemoteDlci, frUniSigComponentName=frUniSigComponentName, frUniDnaCugCugOptionsTable=frUniDnaCugCugOptionsTable, frUniDlciLbStatsTable=frUniDlciLbStatsTable, frUniDlciRateAdaptReduct=frUniDlciRateAdaptReduct, frUniFramerFlagsBetweenFrames=frUniFramerFlagsBetweenFrames, frUniSigLapfStatusEntry=frUniSigLapfStatusEntry, frUniDnaHgMOpEntry=frUniDnaHgMOpEntry, frUniDlciEirPresent=frUniDlciEirPresent, frUniSigLastQ933StateReceivedStatus=frUniSigLastQ933StateReceivedStatus, frUniDnaHgMIfTable=frUniDnaHgMIfTable, frUniDlciDiscByteAbit=frUniDlciDiscByteAbit, frUniDlciVcIntdEntry=frUniDlciVcIntdEntry, frUniDnaCugRowStatusEntry=frUniDnaCugRowStatusEntry, frUniDlciStorageType=frUniDlciStorageType, frameRelayUniGroupBE=frameRelayUniGroupBE, frUniFramerFrmFromIf=frUniFramerFrmFromIf, frameRelayUniGroupBE01A=frameRelayUniGroupBE01A, frUniSigIndex=frUniSigIndex, frUniSigRateEnforcement=frUniSigRateEnforcement, frUniDnaIndex=frUniDnaIndex, frUniDnaHgMHgAddrStorageType=frUniDnaHgMHgAddrStorageType, frUniDnaCugStorageType=frUniDnaCugStorageType, frUniLtsGeneratorState=frUniLtsGeneratorState, frUniDlciEirPresentObs=frUniDlciEirPresentObs, frUniOperationalState=frUniOperationalState, frUniSigCurrentNumberOfSvcCalls=frUniSigCurrentNumberOfSvcCalls, frUniFramer=frUniFramer, frUniDlciTransferPriorityFromNetwork=frUniDlciTransferPriorityFromNetwork, frUniDlciLbRowStatusEntry=frUniDlciLbRowStatusEntry, frUniLmiStatsTable=frUniLmiStatsTable, frUniDlciBciFromSubnet=frUniDlciBciFromSubnet, frUniSigServParmsEntry=frUniSigServParmsEntry, frUniFramerLargeFrmErrors=frUniFramerLargeFrmErrors, frUniDlciTotalEgressSegFrm=frUniDlciTotalEgressSegFrm, frUniFramerUtilEntry=frUniFramerUtilEntry, frUniFramerAdminState=frUniFramerAdminState, frUniDnaDataNetworkAddress=frUniDnaDataNetworkAddress, frUniDlciComponentName=frUniDlciComponentName, frUniLtsPatOpStateEntry=frUniLtsPatOpStateEntry, frUniDnaHgMHgAddrDataNetworkAddress=frUniDnaHgMHgAddrDataNetworkAddress, frUniLmiErrorEventThreshold=frUniLmiErrorEventThreshold, frUniDlciVcFrmCongestedToSubnet=frUniDlciVcFrmCongestedToSubnet, frUniSigRangeEntry=frUniSigRangeEntry, frUniAdminState=frUniAdminState, frUniLtsPatOpDataTable=frUniLtsPatOpDataTable, frUniSigIFramesRcvdDiscarded=frUniSigIFramesRcvdDiscarded, frUniSigSysParmsEntry=frUniSigSysParmsEntry, frUniControlStatus=frUniControlStatus, frUniSigRangeTable=frUniSigRangeTable, frUniFramerProvEntry=frUniFramerProvEntry, frUniDlciBytesToIf=frUniDlciBytesToIf, frameRelayUniCapabilitiesBE01A=frameRelayUniCapabilitiesBE01A, frUniLmiProtocolStatus=frUniLmiProtocolStatus, frUniDnaHgMIndex=frUniDnaHgMIndex, frUniSigReceiveRejectFrame=frUniSigReceiveRejectFrame, frUniDlciDiscardedSegFrm=frUniDlciDiscardedSegFrm, frUniIfEntryEntry=frUniIfEntryEntry, frUniDlciVcRowStatusTable=frUniDlciVcRowStatusTable, frUniDlciDeFrmFromIf=frUniDlciDeFrmFromIf, frUniFrmToIfByQueueValue=frUniFrmToIfByQueueValue, frameRelayUniCapabilitiesBE01=frameRelayUniCapabilitiesBE01, frUniDlciDiscFrameAbit=frUniDlciDiscFrameAbit, frUniDlciDcRowStatus=frUniDlciDcRowStatus, frUniDlciABitStatusToIf=frUniDlciABitStatusToIf, frUniDlciRowStatus=frUniDlciRowStatus, frUniSnmpOperStatus=frUniSnmpOperStatus, frUniDnaCugDnic=frUniDnaCugDnic, frUniLastUnknownDlci=frUniLastUnknownDlci, frUniLmiStatsEntry=frUniLmiStatsEntry, frUniVFramerStatsTable=frUniVFramerStatsTable, frUniSigX213IeHandling=frUniSigX213IeHandling, frUniLtsPatHdlcBitsInserted=frUniLtsPatHdlcBitsInserted, frUniDlciVcDmepEntry=frUniDlciVcDmepEntry, frUniIfIndex=frUniIfIndex, frUniVFramerProvTable=frUniVFramerProvTable, frUniDnaOutDefaultPathSensitivity=frUniDnaOutDefaultPathSensitivity, frUniDlciLbLocalBecnFrm=frUniDlciLbLocalBecnFrm, frUniSigMaximumAggregateSvcCir=frUniSigMaximumAggregateSvcCir, frUniFramerUtilTable=frUniFramerUtilTable, frUniDlciLbStorageType=frUniDlciLbStorageType, frUniLtsStateEntry=frUniLtsStateEntry, frUniDlciVcCalledLcn=frUniDlciVcCalledLcn, frUniSigMaximumAggregateSvcCirHighQ=frUniSigMaximumAggregateSvcCirHighQ, frUniVFramerIndex=frUniVFramerIndex, frUniDlciDcNfaIndex=frUniDlciDcNfaIndex, frUniDlciLbStatsEntry=frUniDlciLbStatsEntry, frUniDlciABitReasonToIf=frUniDlciABitReasonToIf, frUniOctetToIfByQueueTable=frUniOctetToIfByQueueTable, frUniDnaCugIndex=frUniDnaCugIndex, frUniVFramerStatsEntry=frUniVFramerStatsEntry, frUniDlciVcNotDataXferFromSubnet=frUniDlciVcNotDataXferFromSubnet, frUniLmiProtocolErrors=frUniLmiProtocolErrors, frUniDlciAccounting=frUniDlciAccounting, frUniDlciDiscDeCongestedToIf=frUniDlciDiscDeCongestedToIf, frUniLmiUspParmsEntry=frUniLmiUspParmsEntry, frUniDlciSpParmsEntry=frUniDlciSpParmsEntry, frUniDlciVcCallingDna=frUniDlciVcCallingDna, frUniDnaCugIncCalls=frUniDnaCugIncCalls, frUniDlciEirEgressSegFrm=frUniDlciEirEgressSegFrm, frUniFramerFrmModeErrors=frUniFramerFrmModeErrors, frUniSigCurrentAggregateSvcCirHighQ=frUniSigCurrentAggregateSvcCirHighQ, frUniDlciCallType=frUniDlciCallType, frUniVFramerOtherVirtualFramer=frUniVFramerOtherVirtualFramer, frUniDnaCugType=frUniDnaCugType, frUniIfEntryTable=frUniIfEntryTable, frUniLmiStatusSequenceErrors=frUniLmiStatusSequenceErrors, frUniDlciErrorLongBytesFromIf=frUniDlciErrorLongBytesFromIf, frUniSigMaximumAggregateSvcCirNormalQ=frUniSigMaximumAggregateSvcCirNormalQ, frUniDlciLbRowStatus=frUniDlciLbRowStatus, frUniRowStatusEntry=frUniRowStatusEntry, frUniCidDataTable=frUniCidDataTable, frUniDlciVcOoSeqPktCntExceeded=frUniDlciVcOoSeqPktCntExceeded, frUniDlciVcCallingNpi=frUniDlciVcCallingNpi, frUniFramerUnderruns=frUniFramerUnderruns, frUniLmiParmsTable=frUniLmiParmsTable, frUniDlciUsageState=frUniDlciUsageState, frUniLmiRowStatus=frUniLmiRowStatus, frUniAvailabilityStatus=frUniAvailabilityStatus, frUniDnaHgMHgAddrRowStatusEntry=frUniDnaHgMHgAddrRowStatusEntry, frUniSigStatsTable=frUniSigStatsTable, frUniDlciCirPresent=frUniDlciCirPresent, frUniDlciRateAdaptationPresent=frUniDlciRateAdaptationPresent, frUniDnaCugRowStatus=frUniDnaCugRowStatus, frUniDlciMeasurementInterval=frUniDlciMeasurementInterval, frUniSigReleaseTimer=frUniSigReleaseTimer, frUniFramerOperationalState=frUniFramerOperationalState, frUniLmiStateTable=frUniLmiStateTable, frUniDlciTransferPriToNwk=frUniDlciTransferPriToNwk, frUniDlciVcElapsedTimeTillNow=frUniDlciVcElapsedTimeTillNow, frUniSigMaximumAggregateSvcEir=frUniSigMaximumAggregateSvcEir, frUniDlciSpCommittedBurstSize=frUniDlciSpCommittedBurstSize, frUniLtsPatFramePattern=frUniLtsPatFramePattern, frUniDnaHgMComponentName=frUniDnaHgMComponentName, frUniDlciDcCugType=frUniDlciDcCugType, frUniFramerOctetFromIf=frUniFramerOctetFromIf, frUniDlciSpAccounting=frUniDlciSpAccounting, frUniDnaIncAccess=frUniDnaIncAccess, frUniSigCallProceedingTimer=frUniSigCallProceedingTimer, frUniLmiFullStatusEnqFromIf=frUniLmiFullStatusEnqFromIf, frUniDlciLbRemoteTotalBytes=frUniDlciLbRemoteTotalBytes, frUniVFramerFrmFromOtherVFramer=frUniVFramerFrmFromOtherVFramer, frUniLtsPatStatus=frUniLtsPatStatus, frUniDlciVcFrdTable=frUniDlciVcFrdTable, frUniDnaHgMAvailabilityDelta=frUniDnaHgMAvailabilityDelta, frUniDnaHgMIfEntry=frUniDnaHgMIfEntry, frUniLtsPatNumFrames=frUniLtsPatNumFrames, frUniLtsBurstSize=frUniLtsBurstSize, frUniDnaHgMHgAddrNumberingPlanIndicator=frUniDnaHgMHgAddrNumberingPlanIndicator, frameRelayUniGroup=frameRelayUniGroup, frUniLtsPatRowStatusTable=frUniLtsPatRowStatusTable, frameRelayUniCapabilitiesBE=frameRelayUniCapabilitiesBE, frUniDlciDiscardedBytes=frUniDlciDiscardedBytes, frUniSigDefaultMaximumFrameSize=frUniSigDefaultMaximumFrameSize, frUniLtsPatHeaderBits=frUniLtsPatHeaderBits, frUniSigOutCalls=frUniSigOutCalls, frUniDlciDcRowStatusEntry=frUniDlciDcRowStatusEntry, frUniSigMaximumAggregateSvcEirInterruptQ=frUniSigMaximumAggregateSvcEirInterruptQ, frUniDlciVcSegmentsRx=frUniDlciVcSegmentsRx, frUniSigStatsEntry=frUniSigStatsEntry, frUniDlciLbRemoteBecnFrm=frUniDlciLbRemoteBecnFrm, frUniDlciErrorShortFrmFromIf=frUniDlciErrorShortFrmFromIf, frUniDlciEirEgressBytes=frUniDlciEirEgressBytes, frUniDlciAvailabilityStatus=frUniDlciAvailabilityStatus, frUniSigIFramesTxDiscarded=frUniSigIFramesTxDiscarded, frUniLmiLinkVerificationTimer=frUniLmiLinkVerificationTimer, frUniLtsSetupEntry=frUniLtsSetupEntry, frUniDlciBecnFrmToIf=frUniDlciBecnFrmToIf, frUniDlciLbComponentName=frUniDlciLbComponentName, frUniDnaHgMHgAddrAddrTable=frUniDnaHgMHgAddrAddrTable, frUniLmiUnexpectedIes=frUniLmiUnexpectedIes, frUniLtsLoad=frUniLtsLoad, frUniDlciVcCannotForwardToSubnet=frUniDlciVcCannotForwardToSubnet, frUniDlciVcRcosFromNetwork=frUniDlciVcRcosFromNetwork, frUniDnaDefaultTransferPriority=frUniDnaDefaultTransferPriority)
mibBuilder.exportSymbols("Nortel-Magellan-Passport-FrameRelayUniMIB", frUniLmiSequenceErrors=frUniLmiSequenceErrors, frUniDlciVcPeakOoSeqFrmForwarded=frUniDlciVcPeakOoSeqFrmForwarded, frUniDlciLbLocalDeFrm=frUniDlciLbLocalDeFrm, frUniLmiComponentName=frUniLmiComponentName, frUniLtsRowStatus=frUniLtsRowStatus, frUniDlciVcComponentName=frUniDlciVcComponentName, frUniDlciControlStatus=frUniDlciControlStatus, frUniDlciLbRowStatusTable=frUniDlciLbRowStatusTable, frUniSigRowStatus=frUniSigRowStatus, frUniLmiIgnoreActiveBit=frUniLmiIgnoreActiveBit, frUniSigFrmrReceive=frUniSigFrmrReceive, frUniOctetToIfByQueueIndex=frUniOctetToIfByQueueIndex, frUniDnaNumberingPlanIndicator=frUniDnaNumberingPlanIndicator, frUniSigLastClearCause=frUniSigLastClearCause, frUniVFramer=frUniVFramer, frUniFramerRowStatusTable=frUniFramerRowStatusTable, frUniDlciBecnFrmSetByService=frUniDlciBecnFrmSetByService, frUniFramerOverruns=frUniFramerOverruns, frUniDlciVcSegmentSize=frUniDlciVcSegmentSize, frUniSigOperationalState=frUniSigOperationalState, frUniSigLastClearRemoteDataNetworkAddress=frUniSigLastClearRemoteDataNetworkAddress, frUniLtsFramesTx=frUniLtsFramesTx, frUniDlciDcOptionsTable=frUniDlciDcOptionsTable, frUniSigRemoteBusy=frUniSigRemoteBusy, frUniDlciDiscDeCongestedToIfBytes=frUniDlciDiscDeCongestedToIfBytes, frUniLtsPatRowStatusEntry=frUniLtsPatRowStatusEntry, frUniDlciVcOoSeqByteCntExceeded=frUniDlciVcOoSeqByteCntExceeded, frUniLmi=frUniLmi, frUniSigCurrentState=frUniSigCurrentState, frUniVFramerRowStatusEntry=frUniVFramerRowStatusEntry, frUniDlciVcPriority=frUniDlciVcPriority, frUniVFramerComponentName=frUniVFramerComponentName, frUniRowStatus=frUniRowStatus, frUni=frUni, frUniLtsPatDefaultHeaderLength=frUniLtsPatDefaultHeaderLength, frUniDnaHgMRowStatusTable=frUniDnaHgMRowStatusTable, frUniLmiKeepAliveStatusToIf=frUniLmiKeepAliveStatusToIf, frUniSigLapfStatusTable=frUniSigLapfStatusTable, frUniDlciTotalIngressBytes=frUniDlciTotalIngressBytes, frUniLmiMessageCountTimer=frUniLmiMessageCountTimer, frUniDnaRowStatus=frUniDnaRowStatus, frUniLmiOpProcedures=frUniLmiOpProcedures, frUniOperStatusEntry=frUniOperStatusEntry, frUniVFramerFrmToOtherVFramer=frUniVFramerFrmToOtherVFramer, frUniLtsRowStatusEntry=frUniLtsRowStatusEntry, frUniLtsPatOpStateTable=frUniLtsPatOpStateTable, frUniDlciTotalEgressBytes=frUniDlciTotalEgressBytes, frUniLtsCycleIncomplete=frUniLtsCycleIncomplete, frUniSig=frUniSig, frUniDlciRateAdaptation=frUniDlciRateAdaptation, frUniDlciExcessFrmFromIf=frUniDlciExcessFrmFromIf, frUniSigDefaultAccounting=frUniSigDefaultAccounting, frUniLtsStorageType=frUniLtsStorageType, frUniLtsStateTable=frUniLtsStateTable, frUniDlciSpParmsTable=frUniDlciSpParmsTable, frUniFramerLinkTable=frUniFramerLinkTable, frUniDlciVcRcosToNetwork=frUniDlciVcRcosToNetwork, frUniDnaAddressTable=frUniDnaAddressTable, frUniDnaAddressEntry=frUniDnaAddressEntry, frUniVFramerStateTable=frUniVFramerStateTable, frUniDlciDiscDeCongestedFromIfBytes=frUniDlciDiscDeCongestedFromIfBytes, frUniDna=frUniDna, frUniDlciVcAccountingEnd=frUniDlciVcAccountingEnd, frUniDlciSpRowStatusTable=frUniDlciSpRowStatusTable, frUniVFramerProvEntry=frUniVFramerProvEntry, frUniDlciVcCallReferenceNumber=frUniDlciVcCallReferenceNumber, frUniDlciSpStorageType=frUniDlciSpStorageType, frUniDnaComponentName=frUniDnaComponentName, frUniLtsPatSetupEntry=frUniLtsPatSetupEntry, frUniDlciDcNfaEntry=frUniDlciDcNfaEntry, frUniDnaHgMHgAddrComponentName=frUniDnaHgMHgAddrComponentName, frUniDlciProceduralStatus=frUniDlciProceduralStatus, frUniDnaStorageType=frUniDnaStorageType, frUniLmiUspParmsTable=frUniLmiUspParmsTable, frUniLtsLastActiveInterval=frUniLtsLastActiveInterval, frUniSigIFramesTransmitted=frUniSigIFramesTransmitted, frUniLmiAsyncStatusReport=frUniLmiAsyncStatusReport, frUniLmiFullStatusPollingCycles=frUniLmiFullStatusPollingCycles, frUniDlciVcDmepTable=frUniDlciVcDmepTable, frUniDlciVcDataPath=frUniDlciVcDataPath, frUniDlciVcCallingLcn=frUniDlciVcCallingLcn, frUniDlciSpIndex=frUniDlciSpIndex, frUniDlciRateEnforcementPresent=frUniDlciRateEnforcementPresent, frUniSigStateChange=frUniSigStateChange, frUniStatsEntry=frUniStatsEntry, frUniFramerStorageType=frUniFramerStorageType, frUniDlciDcNfaValue=frUniDlciDcNfaValue, frUniDlciVcPreviousState=frUniDlciVcPreviousState, frUniDlciVcStartTime=frUniDlciVcStartTime, frUniInvalidHeaderFramesFromIf=frUniInvalidHeaderFramesFromIf, frUniDlciDcType=frUniDlciDcType, frUniDlciVcPeakOoSeqByteCount=frUniDlciVcPeakOoSeqByteCount, frUniDlciDcNfaRowStatus=frUniDlciDcNfaRowStatus, frUniVFramerStateEntry=frUniVFramerStateEntry, frUniDlciVcOutOfRangeFrmFromSubnet=frUniDlciVcOutOfRangeFrmFromSubnet, frUniLmiUserSideEventHistory=frUniLmiUserSideEventHistory, frUniVFramerOctetFromOtherVFramer=frUniVFramerOctetFromOtherVFramer, frUniSigOutCallsFailed=frUniSigOutCallsFailed, frUniDlciCalldTable=frUniDlciCalldTable, frUniDlciCommittedInformationRate=frUniDlciCommittedInformationRate, frUniLtsPatIndex=frUniLtsPatIndex, frUniSigHighestPvcDlci=frUniSigHighestPvcDlci, frUniSigMaximumAggregateSvcCirInterruptQ=frUniSigMaximumAggregateSvcCirInterruptQ, frUniDnaEgressAccounting=frUniDnaEgressAccounting, frUniLtsPatDataSize=frUniLtsPatDataSize, frUniLtsPatLoad=frUniLtsPatLoad, frUniDlciSpOpEntry=frUniDlciSpOpEntry, frUniDnaCugRowStatusTable=frUniDnaCugRowStatusTable, frUniSigLastDiagnosticCode=frUniSigLastDiagnosticCode, frUniDnaHgMStorageType=frUniDnaHgMStorageType, frUniDnaHgMHgAddr=frUniDnaHgMHgAddr, frUniStateEntry=frUniStateEntry, frUniVFramerOperationalState=frUniVFramerOperationalState, frUniEmissionPriorityQsEntry=frUniEmissionPriorityQsEntry, frUniProceduralStatus=frUniProceduralStatus, frUniSigRateAdaptation=frUniSigRateAdaptation, frUniDnaDataPath=frUniDnaDataPath, frUniDlciSpMaximumFrameSize=frUniDlciSpMaximumFrameSize, frUniDlciDcTransferPriority=frUniDlciDcTransferPriority, frUniSigMaximumFrameSize=frUniSigMaximumFrameSize, frUniFramerInterfaceName=frUniFramerInterfaceName, frUniDnaOutgoingOptionsEntry=frUniDnaOutgoingOptionsEntry, frUniDlciDc=frUniDlciDc, frUniDlciVcPreviousDiagnosticCode=frUniDlciVcPreviousDiagnosticCode, frUniFramerIndex=frUniFramerIndex, frUniDnaHgMHgAddrRowStatusTable=frUniDnaHgMHgAddrRowStatusTable, frUniDlciVcNotDataXferToSubnet=frUniDlciVcNotDataXferToSubnet, frUniLtsSetupTable=frUniLtsSetupTable, frUniDlciDcCugIndex=frUniDlciDcCugIndex, frUniSigUpdateBCI=frUniSigUpdateBCI, frUniDlciAlarmStatus=frUniDlciAlarmStatus, frUniStandbyStatus=frUniStandbyStatus, frUniEmissionPriorityQsTable=frUniEmissionPriorityQsTable, frUniLtsPatRowStatus=frUniLtsPatRowStatus, frUniFrmToIfByQueueEntry=frUniFrmToIfByQueueEntry, frUniLmiCheckPointTimer=frUniLmiCheckPointTimer, frUniDlciSpMeasurementInterval=frUniDlciSpMeasurementInterval, frUniUnknownStatus=frUniUnknownStatus, frUniLtsPatDefaultsEntry=frUniLtsPatDefaultsEntry, frUniSigCurrentAggregateSvcEirInterruptQ=frUniSigCurrentAggregateSvcEirInterruptQ, frUniIndex=frUniIndex, frUniDlciVcRowStatusEntry=frUniDlciVcRowStatusEntry, frUniSigCallSetupTimer=frUniSigCallSetupTimer, frUniSigLastTimeMsgBlockCongested=frUniSigLastTimeMsgBlockCongested, frUniSigCodesEntry=frUniSigCodesEntry, frUniDnaCugOutCalls=frUniDnaCugOutCalls, frUniDlciSpRateAdaptation=frUniDlciSpRateAdaptation, frUniSigUsageState=frUniSigUsageState, frUniDnaAccountClass=frUniDnaAccountClass, frameRelayUniCapabilities=frameRelayUniCapabilities, frUniDlciStateEntry=frUniDlciStateEntry, frUniLtsPatDefaultDataSize=frUniLtsPatDefaultDataSize, frUniSigCurrentQueueSize=frUniSigCurrentQueueSize, frUniDnaHgMAvailabilityUpdateThreshold=frUniDnaHgMAvailabilityUpdateThreshold, frUniLtsElapsedGenerationTime=frUniLtsElapsedGenerationTime, frUniLtsPatUseBadLrc=frUniLtsPatUseBadLrc, frUniLtsPatHeaderLength=frUniLtsPatHeaderLength, frUniDlciDeBytesFromIf=frUniDlciDeBytesFromIf, frUniDlciErrorShortBytesFromIf=frUniDlciErrorShortBytesFromIf, frUniDlciDcIndex=frUniDlciDcIndex, frUniDlciDeBytesToIf=frUniDlciDeBytesToIf, frUniRowStatusTable=frUniRowStatusTable, frUniDlciDiscDeCongestedFromIf=frUniDlciDiscDeCongestedFromIf, frUniFramerFrmToIf=frUniFramerFrmToIf, frUniFrmToIfByQueueTable=frUniFrmToIfByQueueTable, frUniFramerStateEntry=frUniFramerStateEntry, frUniDnaServiceExchange=frUniDnaServiceExchange, frUniLmiOperationalState=frUniLmiOperationalState, frUniSigServParmsTable=frUniSigServParmsTable, frUniLtsBitRateTx=frUniLtsBitRateTx, frUniDlciVcEmissionPriorityToNetwork=frUniDlciVcEmissionPriorityToNetwork, frUniDlciSpRateEnforcement=frUniDlciSpRateEnforcement, frUniSigIFramesReceived=frUniSigIFramesReceived, frUniFramerUsageState=frUniFramerUsageState, frUniFramerLinkEntry=frUniFramerLinkEntry, frUniDnaCugPreferential=frUniDnaCugPreferential, frUniSigStateEntry=frUniSigStateEntry, frUniVFramerRowStatus=frUniVFramerRowStatus, frUniDlciStartTime=frUniDlciStartTime, frUniDlciLbRemoteFecnFrm=frUniDlciLbRemoteFecnFrm, frUniSigAckTimeout=frUniSigAckTimeout, frUniDlciDcRemoteNpi=frUniDlciDcRemoteNpi, frUniLmiPsiTable=frUniLmiPsiTable, frUniLtsTimeInterval=frUniLtsTimeInterval, frUniLtsPatDefaultRfc1490Header=frUniLtsPatDefaultRfc1490Header, frUniDlciLbRemoteDeFrm=frUniDlciLbRemoteDeFrm, frUniDlciVcCadTable=frUniDlciVcCadTable, frUniSigNetworkType=frUniSigNetworkType, frUniDnaHgMHgAddrRowStatus=frUniDnaHgMHgAddrRowStatus, frUniLmiAdminState=frUniLmiAdminState, frUniFramerProvTable=frUniFramerProvTable, frUniLmiNoStatusReportCount=frUniLmiNoStatusReportCount, frUniDlciOperationalState=frUniDlciOperationalState, frUniDlciDiscExcessFromIf=frUniDlciDiscExcessFromIf, frUniDlciLbIndex=frUniDlciLbIndex, frUniFramerCrcErrors=frUniFramerCrcErrors, frUniDlciVcState=frUniDlciVcState, frUniFramerStatsEntry=frUniFramerStatsEntry, frUniLmiParmsEntry=frUniLmiParmsEntry, frUniDlciVcFastSelectCall=frUniDlciVcFastSelectCall, frUniSigSvcaccEntry=frUniSigSvcaccEntry, frUniDlciVcMaxSubnetPktSize=frUniDlciVcMaxSubnetPktSize, frUniDlciErrorLongFrmFromIf=frUniDlciErrorLongFrmFromIf, frUniDlciLbRemoteTotalFrm=frUniDlciLbRemoteTotalFrm, frUniDlciEirIngressSegFrm=frUniDlciEirIngressSegFrm, frUniDlciAbitEntry=frUniDlciAbitEntry, frUniDlciFrmFromIf=frUniDlciFrmFromIf, frUniSigCurrentAggregateSvcEirNormalQ=frUniSigCurrentAggregateSvcEirNormalQ, frUniDnaOutAccess=frUniDnaOutAccess, frUniLmiFullStatusEnqToIf=frUniLmiFullStatusEnqToIf, frUniLmiRowStatusEntry=frUniLmiRowStatusEntry, frUniIfAdminStatus=frUniIfAdminStatus, frUniDlciVcPktRetryTimeouts=frUniDlciVcPktRetryTimeouts, frUniSigInCallsRefused=frUniSigInCallsRefused, frUniDnaOutDefaultPathReliability=frUniDnaOutDefaultPathReliability, frUniDlciStatsTable=frUniDlciStatsTable, frUniFramerNormPrioLinkUtilToIf=frUniFramerNormPrioLinkUtilToIf, frUniFramerNonOctetErrors=frUniFramerNonOctetErrors, frUniDlciIntEntry=frUniDlciIntEntry, frUniDlciSpOpTable=frUniDlciSpOpTable, frUniDnaHgMMaximumAvailableAggregateCir=frUniDnaHgMMaximumAvailableAggregateCir, frUniSigSetupTimeout=frUniSigSetupTimeout, frUniDnaHgMAvailableAggregateCir=frUniDnaHgMAvailableAggregateCir, frUniDlciTransferPriFromNwk=frUniDlciTransferPriFromNwk, frUniDlciLb=frUniDlciLb, frUniLtsPatDefaultPayloadPattern=frUniLtsPatDefaultPayloadPattern, frUniSigStorageType=frUniSigStorageType, frUniDlciDcDeDiscardPriority=frUniDlciDcDeDiscardPriority, frUniSigCodesTable=frUniSigCodesTable, frUniDnaHgMHgAddrIndex=frUniDnaHgMHgAddrIndex, frUniOctetToIfByQueueEntry=frUniOctetToIfByQueueEntry, frUniDlciStatsEntry=frUniDlciStatsEntry, frUniLmiEventCount=frUniLmiEventCount, frUniDlciVcRowStatus=frUniDlciVcRowStatus, frUniSigRowStatusEntry=frUniSigRowStatusEntry, frUniSigLapfStatsTable=frUniSigLapfStatsTable, frUniLtsPatOpDataEntry=frUniLtsPatOpDataEntry, frUniFramerRowStatusEntry=frUniFramerRowStatusEntry, frUniDlciLoopbackState=frUniDlciLoopbackState, frUniOctetToIfByQueueValue=frUniOctetToIfByQueueValue, frUniDlciDiscCongestedFromIfBytes=frUniDlciDiscCongestedFromIfBytes, frUniLmiKeepAliveStatusEnqFromIf=frUniLmiKeepAliveStatusEnqFromIf, frUniLtsPatSetupTable=frUniLtsPatSetupTable, frUniSigDefaultCommittedInformationRate=frUniSigDefaultCommittedInformationRate, frUniDlciVcFrdEntry=frUniDlciVcFrdEntry, frUniLts=frUniLts, frUniSigProtocolErrors=frUniSigProtocolErrors, frUniDlciVcSendSequenceNumber=frUniDlciVcSendSequenceNumber, frUniSigLastStateInStatusMsgReceived=frUniSigLastStateInStatusMsgReceived, frUniDlciExcessBytesFromIf=frUniDlciExcessBytesFromIf, frUniDlciVcIndex=frUniDlciVcIndex, frUniCustomerIdentifier=frUniCustomerIdentifier, frUniSigDisconnectTimer=frUniSigDisconnectTimer, frUniSigQualityOfServiceNotAvailable=frUniSigQualityOfServiceNotAvailable)
mibBuilder.exportSymbols("Nortel-Magellan-Passport-FrameRelayUniMIB", frUniDlciFciFromSubnet=frUniDlciFciFromSubnet, frUniDnaCug=frUniDnaCug, frUniDlciLbRemoteDeBytes=frUniDlciLbRemoteDeBytes, frUniDlciCirPresentObs=frUniDlciCirPresentObs, frUniDlciDcOptionsEntry=frUniDlciDcOptionsEntry, frUniDlciVcIntdTable=frUniDlciVcIntdTable, frUniLtsPatComponentName=frUniLtsPatComponentName, frUniLmiPvcConfigParmsInFsr=frUniLmiPvcConfigParmsInFsr, frUniSigAckDelayTimer=frUniSigAckDelayTimer, frUniLmiSide=frUniLmiSide, frUniDnaRowStatusTable=frUniDnaRowStatusTable, frUniDlciCallReferenceNumber=frUniDlciCallReferenceNumber, frUniLmiPsiEntry=frUniLmiPsiEntry, frameRelayUniMIB=frameRelayUniMIB, frUniSigSysParmsTable=frUniSigSysParmsTable, frUniDlciFecnFrmToIf=frUniDlciFecnFrmToIf, frUniLmiProcedures=frUniLmiProcedures, frUniSigCurrentAggregateSvcCirInterruptQ=frUniSigCurrentAggregateSvcCirInterruptQ, frUniDlciRateEnforcement=frUniDlciRateEnforcement, frUniDlciBciToSubnet=frUniDlciBciToSubnet, frUniDlciVc=frUniDlciVc, frUniSigAckTimer=frUniSigAckTimer, frUniDlciDcRemoteDna=frUniDlciDcRemoteDna, frUniLtsResultsTable=frUniLtsResultsTable, frUniDnaOutgoingOptionsTable=frUniDnaOutgoingOptionsTable, frUniSigRaSensitivity=frUniSigRaSensitivity, frUniDlciSpRowStatus=frUniDlciSpRowStatus, frUniDlciDcRowStatusTable=frUniDlciDcRowStatusTable, frUniDlciSpComponentName=frUniDlciSpComponentName, frUniDlciLbLocalFecnFrm=frUniDlciLbLocalFecnFrm, frUniDlciVcFrmLossTimeouts=frUniDlciVcFrmLossTimeouts, frUniLtsPatDefaultUseBadLrc=frUniLtsPatDefaultUseBadLrc, frUniDlciStateTable=frUniDlciStateTable, frUniSigLastCauseInStatusMsgReceived=frUniSigLastCauseInStatusMsgReceived, frUniFrmToIfByQueueIndex=frUniFrmToIfByQueueIndex, frUniLmiNetworkSideEventHistory=frUniLmiNetworkSideEventHistory, frUniDlciUnknownStatus=frUniDlciUnknownStatus, frUniSigIdleProbeTimer=frUniSigIdleProbeTimer, frUniDlciEirIngressBytes=frUniDlciEirIngressBytes, frUniSigCurrentAggregateSvcCirNormalQ=frUniSigCurrentAggregateSvcCirNormalQ, frUniLtsPatDefaultDlci=frUniLtsPatDefaultDlci, frUniDlciRowStatusTable=frUniDlciRowStatusTable, frUniDlciVcAccountingEnabled=frUniDlciVcAccountingEnabled, frUniLmiStateEntry=frUniLmiStateEntry, frUniLtsPatEaBits=frUniLtsPatEaBits, frUniFramerNormPrioLinkUtilFromIf=frUniFramerNormPrioLinkUtilFromIf, frUniLtsPatDefaultHeaderBits=frUniLtsPatDefaultHeaderBits, frUniCidDataEntry=frUniCidDataEntry, frUniDlciCommittedBurstSize=frUniDlciCommittedBurstSize, frUniDnaHgMHgAddrAddrEntry=frUniDnaHgMHgAddrAddrEntry, frUniSigCurrentAggregateSvcEirHighQ=frUniSigCurrentAggregateSvcEirHighQ, frUniLtsResultsEntry=frUniLtsResultsEntry, frUniDnaHgM=frUniDnaHgM, frUniDlciVcCalledNpi=frUniDlciVcCalledNpi, frUniSigLapfStatsEntry=frUniSigLapfStatsEntry, frUniLtsDuration=frUniLtsDuration, frUniDlciABitStatusFromIf=frUniDlciABitStatusFromIf, frUniLtsPatStorageType=frUniLtsPatStorageType, frUniDlciIntTable=frUniDlciIntTable, frUniUsageState=frUniUsageState, frUniDlciDcNfaTable=frUniDlciDcNfaTable, frUniFramerStateTable=frUniFramerStateTable, frUniLtsAlgorithm=frUniLtsAlgorithm, frUniDlciDiscCongestedFromIf=frUniDlciDiscCongestedFromIf, frUniDnaOutDefaultPriority=frUniDnaOutDefaultPriority, frUniDlciSpExcessBurstSize=frUniDlciSpExcessBurstSize, frUniDlciSp=frUniDlciSp, frUniDnaIncomingOptionsEntry=frUniDnaIncomingOptionsEntry, frUniDnaHgMAvailableDlcis=frUniDnaHgMAvailableDlcis, frUniDnaCallOptionsEntry=frUniDnaCallOptionsEntry, frUniDlciDcStorageType=frUniDlciDcStorageType, frUniDlciBytesFromIf=frUniDlciBytesFromIf, frUniLtsPatPayloadPattern=frUniLtsPatPayloadPattern, frUniDlciVcType=frUniDlciVcType, frUniDlciFrmToIf=frUniDlciFrmToIf, frUniDlciVcDmepValue=frUniDlciVcDmepValue, frUniSigLastDlciWithMsgBlockCongestion=frUniSigLastDlciWithMsgBlockCongestion, frUniDlciSpRaSensitivity=frUniDlciSpRaSensitivity, frUniDnaRowStatusEntry=frUniDnaRowStatusEntry, frUniSigDefaultLocCheck=frUniSigDefaultLocCheck, frUniLtsPatRfc1490Header=frUniLtsPatRfc1490Header, frUniUnknownDlciFramesFromIf=frUniUnknownDlciFramesFromIf, frUniLmiPollingVerifTimeouts=frUniLmiPollingVerifTimeouts, frUniStatsTable=frUniStatsTable, frUniDnaCugCugOptionsEntry=frUniDnaCugCugOptionsEntry, frUniDlciRateAdaptReductPeriod=frUniDlciRateAdaptReductPeriod, frUniDlciVcPeakOoSeqPktCount=frUniDlciVcPeakOoSeqPktCount, frUniVFramerAdminState=frUniVFramerAdminState, frUniLmiUnexpectedReports=frUniLmiUnexpectedReports, frUniDlciVcPeakRetryQueueSize=frUniDlciVcPeakRetryQueueSize, frUniVFramerRowStatusTable=frUniVFramerRowStatusTable, frUniSigLapfSysEntry=frUniSigLapfSysEntry, frUniLtsRowStatusTable=frUniLtsRowStatusTable, frUniDlciEmissionPriorityToIf=frUniDlciEmissionPriorityToIf, frUniSigLastStateChangeReason=frUniSigLastStateChangeReason, frUniDlciLbLocalTotalBytes=frUniDlciLbLocalTotalBytes, frUniDlciQ933CallReference=frUniDlciQ933CallReference, frUniDnaCugInterlockCode=frUniDnaCugInterlockCode, frUniDlciTotalIngressSegFrm=frUniDlciTotalIngressSegFrm, frUniDlciTransferPriorityToNetwork=frUniDlciTransferPriorityToNetwork, frUniDlciLocalRateAdaptOccurred=frUniDlciLocalRateAdaptOccurred, frUniDlciVcCombErrorsFromSubnet=frUniDlciVcCombErrorsFromSubnet, frUniSigMaximumAggregateSvcEirNormalQ=frUniSigMaximumAggregateSvcEirNormalQ, frUniSigWindowSize=frUniSigWindowSize, frUniSigAdminState=frUniSigAdminState, frUniDlciDcDataPath=frUniDlciDcDataPath, frUniDlciVcCadEntry=frUniDlciVcCadEntry, frUniSigUnlimitedAggregateEir=frUniSigUnlimitedAggregateEir, frUniNumberOfEmissionQs=frUniNumberOfEmissionQs, frUniSigStateTable=frUniSigStateTable, frUniLmiKeepAliveEnqToIf=frUniLmiKeepAliveEnqToIf)
