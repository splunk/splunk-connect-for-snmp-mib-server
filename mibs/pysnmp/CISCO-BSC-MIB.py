#
# PySNMP MIB module CISCO-BSC-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CISCO-BSC-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:34:11 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ValueSizeConstraint, ValueRangeConstraint, SingleValueConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ValueSizeConstraint", "ValueRangeConstraint", "SingleValueConstraint", "ConstraintsIntersection")
ciscoMgmt, = mibBuilder.importSymbols("CISCO-SMI", "ciscoMgmt")
ifIndex, = mibBuilder.importSymbols("IF-MIB", "ifIndex")
ObjectGroup, NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "NotificationGroup", "ModuleCompliance")
Counter64, IpAddress, Bits, Integer32, ModuleIdentity, TimeTicks, MibIdentifier, Gauge32, ObjectIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter32, Unsigned32, NotificationType, iso = mibBuilder.importSymbols("SNMPv2-SMI", "Counter64", "IpAddress", "Bits", "Integer32", "ModuleIdentity", "TimeTicks", "MibIdentifier", "Gauge32", "ObjectIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter32", "Unsigned32", "NotificationType", "iso")
TruthValue, DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "TruthValue", "DisplayString", "TextualConvention")
ciscoBscMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 9, 9, 36))
ciscoBscMIB.setRevisions(('2004-08-25 00:00', '1997-01-25 00:00', '1995-08-21 00:00',))
if mibBuilder.loadTexts: ciscoBscMIB.setLastUpdated('200408250000Z')
if mibBuilder.loadTexts: ciscoBscMIB.setOrganization('Cisco Systems, Inc.')
bscObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 36, 1))
bscPorts = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 36, 1, 1))
bscControlUnits = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 36, 1, 2))
bscExtAddresses = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 36, 1, 3))
bscPortTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 36, 1, 1, 1), )
if mibBuilder.loadTexts: bscPortTable.setStatus('current')
bscPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 36, 1, 1, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: bscPortEntry.setStatus('current')
bscPortRole = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 36, 1, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("primary", 1), ("secondary", 2), ("contention", 3), ("dialContention", 4), ("generic", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bscPortRole.setStatus('current')
bscPortCodeSet = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 36, 1, 1, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("ebcdic", 1), ("ascii", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bscPortCodeSet.setStatus('current')
bscPortPause = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 36, 1, 1, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bscPortPause.setStatus('current')
bscPortServlim = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 36, 1, 1, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 50))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bscPortServlim.setStatus('current')
bscPortPollTimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 36, 1, 1, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bscPortPollTimeout.setStatus('current')
bscPortRecoveryRetries = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 36, 1, 1, 1, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bscPortRecoveryRetries.setStatus('current')
bscPortUnknownControlUnitsReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 36, 1, 1, 1, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bscPortUnknownControlUnitsReceived.setStatus('current')
bscPortSoftErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 36, 1, 1, 1, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bscPortSoftErrors.setStatus('current')
bscPortHardErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 36, 1, 1, 1, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bscPortHardErrors.setStatus('current')
bscPortProtocolViolations = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 36, 1, 1, 1, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bscPortProtocolViolations.setStatus('current')
bscPortHostTimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 36, 1, 1, 1, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(30, 3000))).setUnits('deciseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: bscPortHostTimeout.setStatus('current')
bscPortSpecPoll = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 36, 1, 1, 1, 1, 12), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bscPortSpecPoll.setStatus('current')
bscPortVirtualAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 36, 1, 1, 1, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 254))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bscPortVirtualAddress.setStatus('current')
bscPortContentionDialTimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 36, 1, 1, 1, 1, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(2, 30))).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: bscPortContentionDialTimeout.setStatus('current')
bscControlUnitTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 36, 1, 2, 1), )
if mibBuilder.loadTexts: bscControlUnitTable.setStatus('current')
bscCUEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 36, 1, 2, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "CISCO-BSC-MIB", "bscCUAddress"))
if mibBuilder.loadTexts: bscCUEntry.setStatus('current')
bscCUAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 36, 1, 2, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255)))
if mibBuilder.loadTexts: bscCUAddress.setStatus('current')
bscCUState = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 36, 1, 2, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("inactive", 1), ("active", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bscCUState.setStatus('current')
bscCUBytesSent = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 36, 1, 2, 1, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bscCUBytesSent.setStatus('current')
bscCUBytesReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 36, 1, 2, 1, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bscCUBytesReceived.setStatus('current')
bscCUTotalFramesSent = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 36, 1, 2, 1, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bscCUTotalFramesSent.setStatus('current')
bscCUTotalFramesReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 36, 1, 2, 1, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bscCUTotalFramesReceived.setStatus('current')
bscCUDataFramesSent = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 36, 1, 2, 1, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bscCUDataFramesSent.setStatus('current')
bscCUDataFramesReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 36, 1, 2, 1, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bscCUDataFramesReceived.setStatus('current')
bscCUSoftErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 36, 1, 2, 1, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bscCUSoftErrors.setStatus('current')
bscCUHardErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 36, 1, 2, 1, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bscCUHardErrors.setStatus('current')
bscCUProtocolViolations = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 36, 1, 2, 1, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bscCUProtocolViolations.setStatus('current')
bscExtAddressTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 36, 1, 3, 1), )
if mibBuilder.loadTexts: bscExtAddressTable.setStatus('current')
bscExtAddressEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 36, 1, 3, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "CISCO-BSC-MIB", "bscExtPollAddress"))
if mibBuilder.loadTexts: bscExtAddressEntry.setStatus('current')
bscExtPollAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 36, 1, 3, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255)))
if mibBuilder.loadTexts: bscExtPollAddress.setStatus('current')
bscExtSelectAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 36, 1, 3, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bscExtSelectAddress.setStatus('current')
bscMibConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 36, 3))
bscMibCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 36, 3, 1))
bscMibGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 36, 3, 2))
bscMibCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 36, 3, 1, 1)).setObjects(("CISCO-BSC-MIB", "bscPortsGroup"), ("CISCO-BSC-MIB", "bscControlUnitsGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    bscMibCompliance = bscMibCompliance.setStatus('obsolete')
bscMibComplianceRev1 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 36, 3, 1, 2)).setObjects(("CISCO-BSC-MIB", "bscPortsGroupRev1"), ("CISCO-BSC-MIB", "bscControlUnitsGroup"), ("CISCO-BSC-MIB", "bscExtAddressGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    bscMibComplianceRev1 = bscMibComplianceRev1.setStatus('current')
bscPortsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 36, 3, 2, 1)).setObjects(("CISCO-BSC-MIB", "bscPortRole"), ("CISCO-BSC-MIB", "bscPortCodeSet"), ("CISCO-BSC-MIB", "bscPortPause"), ("CISCO-BSC-MIB", "bscPortServlim"), ("CISCO-BSC-MIB", "bscPortPollTimeout"), ("CISCO-BSC-MIB", "bscPortRecoveryRetries"), ("CISCO-BSC-MIB", "bscPortUnknownControlUnitsReceived"), ("CISCO-BSC-MIB", "bscPortSoftErrors"), ("CISCO-BSC-MIB", "bscPortHardErrors"), ("CISCO-BSC-MIB", "bscPortProtocolViolations"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    bscPortsGroup = bscPortsGroup.setStatus('obsolete')
bscControlUnitsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 36, 3, 2, 2)).setObjects(("CISCO-BSC-MIB", "bscCUState"), ("CISCO-BSC-MIB", "bscCUBytesSent"), ("CISCO-BSC-MIB", "bscCUBytesReceived"), ("CISCO-BSC-MIB", "bscCUTotalFramesSent"), ("CISCO-BSC-MIB", "bscCUTotalFramesReceived"), ("CISCO-BSC-MIB", "bscCUDataFramesSent"), ("CISCO-BSC-MIB", "bscCUDataFramesReceived"), ("CISCO-BSC-MIB", "bscCUSoftErrors"), ("CISCO-BSC-MIB", "bscCUHardErrors"), ("CISCO-BSC-MIB", "bscCUProtocolViolations"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    bscControlUnitsGroup = bscControlUnitsGroup.setStatus('current')
bscPortsGroupRev1 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 36, 3, 2, 3)).setObjects(("CISCO-BSC-MIB", "bscPortRole"), ("CISCO-BSC-MIB", "bscPortCodeSet"), ("CISCO-BSC-MIB", "bscPortPause"), ("CISCO-BSC-MIB", "bscPortServlim"), ("CISCO-BSC-MIB", "bscPortPollTimeout"), ("CISCO-BSC-MIB", "bscPortRecoveryRetries"), ("CISCO-BSC-MIB", "bscPortUnknownControlUnitsReceived"), ("CISCO-BSC-MIB", "bscPortSoftErrors"), ("CISCO-BSC-MIB", "bscPortHardErrors"), ("CISCO-BSC-MIB", "bscPortProtocolViolations"), ("CISCO-BSC-MIB", "bscPortHostTimeout"), ("CISCO-BSC-MIB", "bscPortSpecPoll"), ("CISCO-BSC-MIB", "bscPortVirtualAddress"), ("CISCO-BSC-MIB", "bscPortContentionDialTimeout"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    bscPortsGroupRev1 = bscPortsGroupRev1.setStatus('current')
bscExtAddressGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 36, 3, 2, 4)).setObjects(("CISCO-BSC-MIB", "bscExtSelectAddress"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    bscExtAddressGroup = bscExtAddressGroup.setStatus('current')
mibBuilder.exportSymbols("CISCO-BSC-MIB", bscPortPause=bscPortPause, bscPortServlim=bscPortServlim, bscMibConformance=bscMibConformance, bscControlUnits=bscControlUnits, bscExtAddressEntry=bscExtAddressEntry, bscCUDataFramesReceived=bscCUDataFramesReceived, bscControlUnitTable=bscControlUnitTable, bscMibCompliance=bscMibCompliance, bscPortSoftErrors=bscPortSoftErrors, bscCUDataFramesSent=bscCUDataFramesSent, bscExtSelectAddress=bscExtSelectAddress, bscPortsGroup=bscPortsGroup, bscPortRole=bscPortRole, bscPortUnknownControlUnitsReceived=bscPortUnknownControlUnitsReceived, bscPortHardErrors=bscPortHardErrors, bscCUProtocolViolations=bscCUProtocolViolations, bscMibCompliances=bscMibCompliances, bscExtAddresses=bscExtAddresses, ciscoBscMIB=ciscoBscMIB, bscExtAddressTable=bscExtAddressTable, bscPortPollTimeout=bscPortPollTimeout, bscExtPollAddress=bscExtPollAddress, bscPortRecoveryRetries=bscPortRecoveryRetries, bscObjects=bscObjects, bscPortVirtualAddress=bscPortVirtualAddress, bscPorts=bscPorts, bscMibComplianceRev1=bscMibComplianceRev1, bscPortsGroupRev1=bscPortsGroupRev1, bscCUSoftErrors=bscCUSoftErrors, bscCUTotalFramesSent=bscCUTotalFramesSent, bscCUState=bscCUState, bscCUBytesSent=bscCUBytesSent, PYSNMP_MODULE_ID=ciscoBscMIB, bscPortCodeSet=bscPortCodeSet, bscMibGroups=bscMibGroups, bscExtAddressGroup=bscExtAddressGroup, bscPortSpecPoll=bscPortSpecPoll, bscCUBytesReceived=bscCUBytesReceived, bscCUTotalFramesReceived=bscCUTotalFramesReceived, bscPortContentionDialTimeout=bscPortContentionDialTimeout, bscPortProtocolViolations=bscPortProtocolViolations, bscPortHostTimeout=bscPortHostTimeout, bscCUHardErrors=bscCUHardErrors, bscControlUnitsGroup=bscControlUnitsGroup, bscCUAddress=bscCUAddress, bscPortEntry=bscPortEntry, bscPortTable=bscPortTable, bscCUEntry=bscCUEntry)
