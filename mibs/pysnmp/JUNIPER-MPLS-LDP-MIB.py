#
# PySNMP MIB module JUNIPER-MPLS-LDP-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/JUNIPER-MPLS-LDP-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:48:55 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, SingleValueConstraint, ValueSizeConstraint, ValueRangeConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "SingleValueConstraint", "ValueSizeConstraint", "ValueRangeConstraint", "ConstraintsIntersection")
InterfaceIndex, = mibBuilder.importSymbols("IF-MIB", "InterfaceIndex")
InetAddressType, InetAddress, InetPortNumber = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddressType", "InetAddress", "InetPortNumber")
jnxMibs, = mibBuilder.importSymbols("JUNIPER-SMI", "jnxMibs")
MplsLabelDistributionMethod, MplsLdpIdentifier, MplsLabel, MplsLsrIdentifier, MplsLdpLabelType, MplsRetentionMode, MplsLspType = mibBuilder.importSymbols("MPLS-TC-STD-MIB", "MplsLabelDistributionMethod", "MplsLdpIdentifier", "MplsLabel", "MplsLsrIdentifier", "MplsLdpLabelType", "MplsRetentionMode", "MplsLspType")
ObjectGroup, NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "NotificationGroup", "ModuleCompliance")
Gauge32, Counter64, ModuleIdentity, ObjectIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, IpAddress, MibIdentifier, Bits, NotificationType, Counter32, Unsigned32, iso, Integer32, TimeTicks = mibBuilder.importSymbols("SNMPv2-SMI", "Gauge32", "Counter64", "ModuleIdentity", "ObjectIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "IpAddress", "MibIdentifier", "Bits", "NotificationType", "Counter32", "Unsigned32", "iso", "Integer32", "TimeTicks")
RowPointer, DisplayString, StorageType, TimeStamp, TimeInterval, TruthValue, RowStatus, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "RowPointer", "DisplayString", "StorageType", "TimeStamp", "TimeInterval", "TruthValue", "RowStatus", "TextualConvention")
jnxMplsLdpMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 2636, 3, 36))
jnxMplsLdpMIB.setRevisions(('2006-05-16 12:00',))
if mibBuilder.loadTexts: jnxMplsLdpMIB.setLastUpdated('200605161200Z')
if mibBuilder.loadTexts: jnxMplsLdpMIB.setOrganization('Juniper Networks, Inc.')
jnxMplsLdpObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2636, 3, 36, 1))
jnxMplsLdpNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 2636, 3, 36, 2))
jnxMplsLdpConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 2636, 3, 36, 3))
jnxMplsLdpLsrObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2636, 3, 36, 1, 1))
jnxMplsLdpEntityObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2636, 3, 36, 1, 2))
jnxMplsLdpLsrId = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 36, 1, 1, 1), MplsLsrIdentifier()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMplsLdpLsrId.setStatus('current')
jnxMplsLdpLsrLoopDetectionCapable = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 36, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("none", 1), ("other", 2), ("hopCount", 3), ("pathVector", 4), ("hopCountAndPathVector", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMplsLdpLsrLoopDetectionCapable.setStatus('current')
jnxMplsLdpEntityLastChange = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 36, 1, 2, 1), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMplsLdpEntityLastChange.setStatus('current')
jnxMplsLdpEntityIndexNext = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 36, 1, 2, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMplsLdpEntityIndexNext.setStatus('current')
jnxMplsLdpEntityTable = MibTable((1, 3, 6, 1, 4, 1, 2636, 3, 36, 1, 2, 3), )
if mibBuilder.loadTexts: jnxMplsLdpEntityTable.setStatus('current')
jnxMplsLdpEntityEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2636, 3, 36, 1, 2, 3, 1), ).setIndexNames((0, "JUNIPER-MPLS-LDP-MIB", "jnxMplsLdpEntityLdpId"), (0, "JUNIPER-MPLS-LDP-MIB", "jnxMplsLdpEntityIndex"))
if mibBuilder.loadTexts: jnxMplsLdpEntityEntry.setStatus('current')
jnxMplsLdpEntityLdpId = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 36, 1, 2, 3, 1, 1), MplsLdpIdentifier())
if mibBuilder.loadTexts: jnxMplsLdpEntityLdpId.setStatus('current')
jnxMplsLdpEntityIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 36, 1, 2, 3, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295)))
if mibBuilder.loadTexts: jnxMplsLdpEntityIndex.setStatus('current')
jnxMplsLdpEntityProtocolVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 36, 1, 2, 3, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)).clone(1)).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMplsLdpEntityProtocolVersion.setStatus('current')
jnxMplsLdpEntityAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 36, 1, 2, 3, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('enable')).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMplsLdpEntityAdminStatus.setStatus('current')
jnxMplsLdpEntityOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 36, 1, 2, 3, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("unknown", 1), ("enabled", 2), ("disabled", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMplsLdpEntityOperStatus.setStatus('current')
jnxMplsLdpEntityTcpDscPort = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 36, 1, 2, 3, 1, 6), InetPortNumber().clone(646)).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMplsLdpEntityTcpDscPort.setStatus('current')
jnxMplsLdpEntityUdpDscPort = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 36, 1, 2, 3, 1, 7), InetPortNumber().clone(646)).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMplsLdpEntityUdpDscPort.setStatus('current')
jnxMplsLdpEntityMaxPduLength = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 36, 1, 2, 3, 1, 8), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(256, 65535)).clone(4096)).setUnits('octets').setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMplsLdpEntityMaxPduLength.setStatus('current')
jnxMplsLdpEntityKeepAliveHoldTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 36, 1, 2, 3, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)).clone(40)).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMplsLdpEntityKeepAliveHoldTimer.setStatus('current')
jnxMplsLdpEntityHelloHoldTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 36, 1, 2, 3, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMplsLdpEntityHelloHoldTimer.setStatus('current')
jnxMplsLdpEntityInitSesThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 36, 1, 2, 3, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100)).clone(8)).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMplsLdpEntityInitSesThreshold.setStatus('current')
jnxMplsLdpEntityLabelDistMethod = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 36, 1, 2, 3, 1, 12), MplsLabelDistributionMethod()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMplsLdpEntityLabelDistMethod.setStatus('current')
jnxMplsLdpEntityLabelRetentionMode = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 36, 1, 2, 3, 1, 13), MplsRetentionMode()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMplsLdpEntityLabelRetentionMode.setStatus('current')
jnxMplsLdpEntityPathVectorLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 36, 1, 2, 3, 1, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMplsLdpEntityPathVectorLimit.setStatus('current')
jnxMplsLdpEntityHopCountLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 36, 1, 2, 3, 1, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMplsLdpEntityHopCountLimit.setStatus('current')
jnxMplsLdpEntityTargetPeer = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 36, 1, 2, 3, 1, 16), TruthValue().clone('false')).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMplsLdpEntityTargetPeer.setStatus('current')
jnxMplsLdpEntityTargetPeerAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 36, 1, 2, 3, 1, 17), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMplsLdpEntityTargetPeerAddrType.setStatus('current')
jnxMplsLdpEntityTargetPeerAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 36, 1, 2, 3, 1, 18), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMplsLdpEntityTargetPeerAddr.setStatus('current')
jnxMplsLdpEntityLabelType = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 36, 1, 2, 3, 1, 19), MplsLdpLabelType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMplsLdpEntityLabelType.setStatus('current')
jnxMplsLdpEntityDiscontinuityTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 36, 1, 2, 3, 1, 20), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMplsLdpEntityDiscontinuityTime.setStatus('current')
jnxMplsLdpEntityStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 36, 1, 2, 3, 1, 21), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMplsLdpEntityStorageType.setStatus('current')
jnxMplsLdpEntityRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 36, 1, 2, 3, 1, 22), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMplsLdpEntityRowStatus.setStatus('current')
jnxMplsLdpEntityStatsTable = MibTable((1, 3, 6, 1, 4, 1, 2636, 3, 36, 1, 2, 4), )
if mibBuilder.loadTexts: jnxMplsLdpEntityStatsTable.setStatus('current')
jnxMplsLdpEntityStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2636, 3, 36, 1, 2, 4, 1), )
jnxMplsLdpEntityEntry.registerAugmentions(("JUNIPER-MPLS-LDP-MIB", "jnxMplsLdpEntityStatsEntry"))
jnxMplsLdpEntityStatsEntry.setIndexNames(*jnxMplsLdpEntityEntry.getIndexNames())
if mibBuilder.loadTexts: jnxMplsLdpEntityStatsEntry.setStatus('current')
jnxMplsLdpAttemptedSessions = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 36, 1, 2, 4, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMplsLdpAttemptedSessions.setStatus('current')
jnxMplsLdpSesRejectedNoHelloErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 36, 1, 2, 4, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMplsLdpSesRejectedNoHelloErrors.setStatus('current')
jnxMplsLdpSesRejectedAdErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 36, 1, 2, 4, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMplsLdpSesRejectedAdErrors.setStatus('current')
jnxMplsLdpSesRejectedMaxPduErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 36, 1, 2, 4, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMplsLdpSesRejectedMaxPduErrors.setStatus('current')
jnxMplsLdpSesRejectedLRErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 36, 1, 2, 4, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMplsLdpSesRejectedLRErrors.setStatus('current')
jnxMplsLdpBadLdpIdentifierErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 36, 1, 2, 4, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMplsLdpBadLdpIdentifierErrors.setStatus('current')
jnxMplsLdpBadPduLengthErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 36, 1, 2, 4, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMplsLdpBadPduLengthErrors.setStatus('current')
jnxMplsLdpBadMessageLengthErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 36, 1, 2, 4, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMplsLdpBadMessageLengthErrors.setStatus('current')
jnxMplsLdpBadTlvLengthErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 36, 1, 2, 4, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMplsLdpBadTlvLengthErrors.setStatus('current')
jnxMplsLdpMalformedTlvValueErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 36, 1, 2, 4, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMplsLdpMalformedTlvValueErrors.setStatus('current')
jnxMplsLdpKeepAliveTimerExpErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 36, 1, 2, 4, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMplsLdpKeepAliveTimerExpErrors.setStatus('current')
jnxMplsLdpShutdownNotifReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 36, 1, 2, 4, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMplsLdpShutdownNotifReceived.setStatus('current')
jnxMplsLdpShutdownNotifSent = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 36, 1, 2, 4, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMplsLdpShutdownNotifSent.setStatus('current')
jnxMplsLdpSessionObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2636, 3, 36, 1, 3))
jnxMplsLdpPeerLastChange = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 36, 1, 3, 1), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMplsLdpPeerLastChange.setStatus('current')
jnxMplsLdpPeerTable = MibTable((1, 3, 6, 1, 4, 1, 2636, 3, 36, 1, 3, 2), )
if mibBuilder.loadTexts: jnxMplsLdpPeerTable.setStatus('current')
jnxMplsLdpPeerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2636, 3, 36, 1, 3, 2, 1), ).setIndexNames((0, "JUNIPER-MPLS-LDP-MIB", "jnxMplsLdpEntityLdpId"), (0, "JUNIPER-MPLS-LDP-MIB", "jnxMplsLdpEntityIndex"), (0, "JUNIPER-MPLS-LDP-MIB", "jnxMplsLdpPeerLdpId"))
if mibBuilder.loadTexts: jnxMplsLdpPeerEntry.setStatus('current')
jnxMplsLdpPeerLdpId = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 36, 1, 3, 2, 1, 1), MplsLdpIdentifier())
if mibBuilder.loadTexts: jnxMplsLdpPeerLdpId.setStatus('current')
jnxMplsLdpPeerLabelDistMethod = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 36, 1, 3, 2, 1, 2), MplsLabelDistributionMethod()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMplsLdpPeerLabelDistMethod.setStatus('current')
jnxMplsLdpPeerPathVectorLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 36, 1, 3, 2, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMplsLdpPeerPathVectorLimit.setStatus('current')
jnxMplsLdpSessionTable = MibTable((1, 3, 6, 1, 4, 1, 2636, 3, 36, 1, 3, 3), )
if mibBuilder.loadTexts: jnxMplsLdpSessionTable.setStatus('current')
jnxMplsLdpSessionEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2636, 3, 36, 1, 3, 3, 1), )
jnxMplsLdpPeerEntry.registerAugmentions(("JUNIPER-MPLS-LDP-MIB", "jnxMplsLdpSessionEntry"))
jnxMplsLdpSessionEntry.setIndexNames(*jnxMplsLdpPeerEntry.getIndexNames())
if mibBuilder.loadTexts: jnxMplsLdpSessionEntry.setStatus('current')
jnxMplsLdpSesStateLastChange = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 36, 1, 3, 3, 1, 1), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMplsLdpSesStateLastChange.setStatus('current')
jnxMplsLdpSesState = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 36, 1, 3, 3, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("nonexistent", 1), ("initialized", 2), ("openrec", 3), ("opensent", 4), ("operational", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMplsLdpSesState.setStatus('current')
jnxMplsLdpSesProtocolVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 36, 1, 3, 3, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMplsLdpSesProtocolVersion.setStatus('current')
jnxMplsLdpSesKeepAliveHoldTimeRem = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 36, 1, 3, 3, 1, 4), TimeInterval()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMplsLdpSesKeepAliveHoldTimeRem.setStatus('current')
jnxMplsLdpSesMaxPduLength = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 36, 1, 3, 3, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setUnits('octets').setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMplsLdpSesMaxPduLength.setStatus('current')
jnxMplsLdpSesDiscontinuityTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 36, 1, 3, 3, 1, 6), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMplsLdpSesDiscontinuityTime.setStatus('current')
jnxMplsLdpSesStatsTable = MibTable((1, 3, 6, 1, 4, 1, 2636, 3, 36, 1, 3, 4), )
if mibBuilder.loadTexts: jnxMplsLdpSesStatsTable.setStatus('current')
jnxMplsLdpSesStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2636, 3, 36, 1, 3, 4, 1), )
jnxMplsLdpPeerEntry.registerAugmentions(("JUNIPER-MPLS-LDP-MIB", "jnxMplsLdpSesStatsEntry"))
jnxMplsLdpSesStatsEntry.setIndexNames(*jnxMplsLdpPeerEntry.getIndexNames())
if mibBuilder.loadTexts: jnxMplsLdpSesStatsEntry.setStatus('current')
jnxMplsLdpSesStatsUnkMesTypeErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 36, 1, 3, 4, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMplsLdpSesStatsUnkMesTypeErrors.setStatus('current')
jnxMplsLdpSesStatsUnkTlvErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 36, 1, 3, 4, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMplsLdpSesStatsUnkTlvErrors.setStatus('current')
jnxMplsLdpHelloAdjacencyObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2636, 3, 36, 1, 3, 5))
jnxMplsLdpHelloAdjacencyTable = MibTable((1, 3, 6, 1, 4, 1, 2636, 3, 36, 1, 3, 5, 1), )
if mibBuilder.loadTexts: jnxMplsLdpHelloAdjacencyTable.setStatus('current')
jnxMplsLdpHelloAdjacencyEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2636, 3, 36, 1, 3, 5, 1, 1), ).setIndexNames((0, "JUNIPER-MPLS-LDP-MIB", "jnxMplsLdpEntityLdpId"), (0, "JUNIPER-MPLS-LDP-MIB", "jnxMplsLdpEntityIndex"), (0, "JUNIPER-MPLS-LDP-MIB", "jnxMplsLdpPeerLdpId"), (0, "JUNIPER-MPLS-LDP-MIB", "jnxMplsLdpHelloAdjIndex"))
if mibBuilder.loadTexts: jnxMplsLdpHelloAdjacencyEntry.setStatus('current')
jnxMplsLdpHelloAdjIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 36, 1, 3, 5, 1, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295)))
if mibBuilder.loadTexts: jnxMplsLdpHelloAdjIndex.setStatus('current')
jnxMplsLdpHelloAdjHoldTimeRem = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 36, 1, 3, 5, 1, 1, 2), TimeInterval()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMplsLdpHelloAdjHoldTimeRem.setStatus('current')
jnxMplsLdpHelloAdjType = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 36, 1, 3, 5, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("link", 1), ("targeted", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMplsLdpHelloAdjType.setStatus('current')
jnxMplsLdpLspTable = MibTable((1, 3, 6, 1, 4, 1, 2636, 3, 36, 1, 3, 6), )
if mibBuilder.loadTexts: jnxMplsLdpLspTable.setStatus('current')
jnxMplsLdpLspEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2636, 3, 36, 1, 3, 6, 1), ).setIndexNames((0, "JUNIPER-MPLS-LDP-MIB", "jnxMplsLdpEntityLdpId"), (0, "JUNIPER-MPLS-LDP-MIB", "jnxMplsLdpEntityIndex"), (0, "JUNIPER-MPLS-LDP-MIB", "jnxMplsLdpPeerLdpId"), (0, "JUNIPER-MPLS-LDP-MIB", "jnxMplsLdpLspIfIndex"), (0, "JUNIPER-MPLS-LDP-MIB", "jnxMplsLdpLspLabel"))
if mibBuilder.loadTexts: jnxMplsLdpLspEntry.setStatus('current')
jnxMplsLdpLspIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 36, 1, 3, 6, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: jnxMplsLdpLspIfIndex.setStatus('current')
jnxMplsLdpLspLabel = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 36, 1, 3, 6, 1, 2), MplsLabel())
if mibBuilder.loadTexts: jnxMplsLdpLspLabel.setStatus('current')
jnxMplsLdpLspLabelType = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 36, 1, 3, 6, 1, 3), MplsLdpLabelType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMplsLdpLspLabelType.setStatus('current')
jnxMplsLdpLspType = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 36, 1, 3, 6, 1, 4), MplsLspType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMplsLdpLspType.setStatus('current')
jnxMplsLdpLspLsrInSegmentPointer = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 36, 1, 3, 6, 1, 5), RowPointer()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMplsLdpLspLsrInSegmentPointer.setStatus('current')
jnxMplsLdpLspLsrOutSegmentPointer = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 36, 1, 3, 6, 1, 6), RowPointer()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMplsLdpLspLsrOutSegmentPointer.setStatus('current')
jnxMplsLdpLspLsrXCPointer = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 36, 1, 3, 6, 1, 7), RowPointer()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMplsLdpLspLsrXCPointer.setStatus('current')
jnxMplsFecObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2636, 3, 36, 1, 3, 7))
jnxMplsFecIndexNext = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 36, 1, 3, 7, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMplsFecIndexNext.setStatus('current')
jnxMplsFecTable = MibTable((1, 3, 6, 1, 4, 1, 2636, 3, 36, 1, 3, 7, 2), )
if mibBuilder.loadTexts: jnxMplsFecTable.setStatus('current')
jnxMplsFecEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2636, 3, 36, 1, 3, 7, 2, 1), ).setIndexNames((0, "JUNIPER-MPLS-LDP-MIB", "jnxMplsFecIndex"))
if mibBuilder.loadTexts: jnxMplsFecEntry.setStatus('current')
jnxMplsFecIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 36, 1, 3, 7, 2, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295)))
if mibBuilder.loadTexts: jnxMplsFecIndex.setStatus('current')
jnxMplsFecType = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 36, 1, 3, 7, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("prefix", 1), ("hostAddress", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMplsFecType.setStatus('current')
jnxMplsFecAddrLength = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 36, 1, 3, 7, 2, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMplsFecAddrLength.setStatus('current')
jnxMplsFecAddrFamily = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 36, 1, 3, 7, 2, 1, 4), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMplsFecAddrFamily.setStatus('current')
jnxMplsFecAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 36, 1, 3, 7, 2, 1, 5), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMplsFecAddr.setStatus('current')
jnxMplsFecStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 36, 1, 3, 7, 2, 1, 6), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMplsFecStorageType.setStatus('current')
jnxMplsFecRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 36, 1, 3, 7, 2, 1, 7), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMplsFecRowStatus.setStatus('current')
jnxMplsLdpLspFecTable = MibTable((1, 3, 6, 1, 4, 1, 2636, 3, 36, 1, 3, 8), )
if mibBuilder.loadTexts: jnxMplsLdpLspFecTable.setStatus('current')
jnxMplsLdpLspFecEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2636, 3, 36, 1, 3, 8, 1), ).setIndexNames((0, "JUNIPER-MPLS-LDP-MIB", "jnxMplsLdpEntityLdpId"), (0, "JUNIPER-MPLS-LDP-MIB", "jnxMplsLdpEntityIndex"), (0, "JUNIPER-MPLS-LDP-MIB", "jnxMplsLdpPeerLdpId"), (0, "JUNIPER-MPLS-LDP-MIB", "jnxMplsLdpLspIfIndex"), (0, "JUNIPER-MPLS-LDP-MIB", "jnxMplsLdpLspLabel"), (0, "JUNIPER-MPLS-LDP-MIB", "jnxMplsFecIndex"))
if mibBuilder.loadTexts: jnxMplsLdpLspFecEntry.setStatus('current')
jnxMplsLdpLspFecOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 36, 1, 3, 8, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("unknown", 1), ("inUse", 2), ("notInUse", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMplsLdpLspFecOperStatus.setStatus('current')
jnxMplsLdpLspFecLastChange = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 36, 1, 3, 8, 1, 2), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMplsLdpLspFecLastChange.setStatus('current')
jnxMplsLdpLspFecRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 36, 1, 3, 8, 1, 3), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMplsLdpLspFecRowStatus.setStatus('current')
jnxMplsLdpSesPeerAddrTable = MibTable((1, 3, 6, 1, 4, 1, 2636, 3, 36, 1, 3, 9), )
if mibBuilder.loadTexts: jnxMplsLdpSesPeerAddrTable.setStatus('current')
jnxMplsLdpSesPeerAddrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2636, 3, 36, 1, 3, 9, 1), ).setIndexNames((0, "JUNIPER-MPLS-LDP-MIB", "jnxMplsLdpEntityLdpId"), (0, "JUNIPER-MPLS-LDP-MIB", "jnxMplsLdpEntityIndex"), (0, "JUNIPER-MPLS-LDP-MIB", "jnxMplsLdpPeerLdpId"), (0, "JUNIPER-MPLS-LDP-MIB", "jnxMplsLdpSesPeerAddrIndex"))
if mibBuilder.loadTexts: jnxMplsLdpSesPeerAddrEntry.setStatus('current')
jnxMplsLdpSesPeerAddrIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 36, 1, 3, 9, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295)))
if mibBuilder.loadTexts: jnxMplsLdpSesPeerAddrIndex.setStatus('current')
jnxMplsLdpSesPeerNextHopAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 36, 1, 3, 9, 1, 2), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMplsLdpSesPeerNextHopAddrType.setStatus('current')
jnxMplsLdpSesPeerNextHopAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 36, 1, 3, 9, 1, 3), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMplsLdpSesPeerNextHopAddr.setStatus('current')
jnxMplsLdpNotificationPrefix = MibIdentifier((1, 3, 6, 1, 4, 1, 2636, 3, 36, 2, 0))
jnxMplsLdpInitSesThresholdExceeded = NotificationType((1, 3, 6, 1, 4, 1, 2636, 3, 36, 2, 0, 1)).setObjects(("JUNIPER-MPLS-LDP-MIB", "jnxMplsLdpEntityInitSesThreshold"))
if mibBuilder.loadTexts: jnxMplsLdpInitSesThresholdExceeded.setStatus('current')
jnxMplsLdpPathVectorLimitMismatch = NotificationType((1, 3, 6, 1, 4, 1, 2636, 3, 36, 2, 0, 2)).setObjects(("JUNIPER-MPLS-LDP-MIB", "jnxMplsLdpEntityPathVectorLimit"), ("JUNIPER-MPLS-LDP-MIB", "jnxMplsLdpPeerPathVectorLimit"))
if mibBuilder.loadTexts: jnxMplsLdpPathVectorLimitMismatch.setStatus('current')
jnxMplsLdpSessionUp = NotificationType((1, 3, 6, 1, 4, 1, 2636, 3, 36, 2, 0, 3)).setObjects(("JUNIPER-MPLS-LDP-MIB", "jnxMplsLdpSesState"), ("JUNIPER-MPLS-LDP-MIB", "jnxMplsLdpSesDiscontinuityTime"), ("JUNIPER-MPLS-LDP-MIB", "jnxMplsLdpSesStatsUnkMesTypeErrors"), ("JUNIPER-MPLS-LDP-MIB", "jnxMplsLdpSesStatsUnkTlvErrors"))
if mibBuilder.loadTexts: jnxMplsLdpSessionUp.setStatus('current')
jnxMplsLdpSessionDown = NotificationType((1, 3, 6, 1, 4, 1, 2636, 3, 36, 2, 0, 4)).setObjects(("JUNIPER-MPLS-LDP-MIB", "jnxMplsLdpSesState"), ("JUNIPER-MPLS-LDP-MIB", "jnxMplsLdpSesDiscontinuityTime"), ("JUNIPER-MPLS-LDP-MIB", "jnxMplsLdpSesStatsUnkMesTypeErrors"), ("JUNIPER-MPLS-LDP-MIB", "jnxMplsLdpSesStatsUnkTlvErrors"))
if mibBuilder.loadTexts: jnxMplsLdpSessionDown.setStatus('current')
jnxMplsLdpGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 2636, 3, 36, 3, 1))
jnxMplsLdpCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 2636, 3, 36, 3, 2))
jnxMplsLdpModuleFullCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 2636, 3, 36, 3, 2, 1)).setObjects(("JUNIPER-MPLS-LDP-MIB", "jnxMplsLdpGeneralGroup"), ("JUNIPER-MPLS-LDP-MIB", "jnxMplsLdpLspGroup"), ("JUNIPER-MPLS-LDP-MIB", "jnxMplsLdpNotificationsGroup"), ("JUNIPER-MPLS-LDP-MIB", "jnxMplsLdpLsrGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    jnxMplsLdpModuleFullCompliance = jnxMplsLdpModuleFullCompliance.setStatus('current')
jnxMplsLdpModuleReadOnlyCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 2636, 3, 36, 3, 2, 2)).setObjects(("JUNIPER-MPLS-LDP-MIB", "jnxMplsLdpGeneralGroup"), ("JUNIPER-MPLS-LDP-MIB", "jnxMplsLdpLspGroup"), ("JUNIPER-MPLS-LDP-MIB", "jnxMplsLdpNotificationsGroup"), ("JUNIPER-MPLS-LDP-MIB", "jnxMplsLdpLsrGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    jnxMplsLdpModuleReadOnlyCompliance = jnxMplsLdpModuleReadOnlyCompliance.setStatus('current')
jnxMplsLdpGeneralGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2636, 3, 36, 3, 1, 1)).setObjects(("JUNIPER-MPLS-LDP-MIB", "jnxMplsLdpLsrId"), ("JUNIPER-MPLS-LDP-MIB", "jnxMplsLdpLsrLoopDetectionCapable"), ("JUNIPER-MPLS-LDP-MIB", "jnxMplsLdpEntityLastChange"), ("JUNIPER-MPLS-LDP-MIB", "jnxMplsLdpEntityIndexNext"), ("JUNIPER-MPLS-LDP-MIB", "jnxMplsLdpEntityProtocolVersion"), ("JUNIPER-MPLS-LDP-MIB", "jnxMplsLdpEntityAdminStatus"), ("JUNIPER-MPLS-LDP-MIB", "jnxMplsLdpEntityOperStatus"), ("JUNIPER-MPLS-LDP-MIB", "jnxMplsLdpEntityTcpDscPort"), ("JUNIPER-MPLS-LDP-MIB", "jnxMplsLdpEntityUdpDscPort"), ("JUNIPER-MPLS-LDP-MIB", "jnxMplsLdpEntityMaxPduLength"), ("JUNIPER-MPLS-LDP-MIB", "jnxMplsLdpEntityKeepAliveHoldTimer"), ("JUNIPER-MPLS-LDP-MIB", "jnxMplsLdpEntityHelloHoldTimer"), ("JUNIPER-MPLS-LDP-MIB", "jnxMplsLdpEntityInitSesThreshold"), ("JUNIPER-MPLS-LDP-MIB", "jnxMplsLdpEntityLabelDistMethod"), ("JUNIPER-MPLS-LDP-MIB", "jnxMplsLdpEntityLabelRetentionMode"), ("JUNIPER-MPLS-LDP-MIB", "jnxMplsLdpEntityPathVectorLimit"), ("JUNIPER-MPLS-LDP-MIB", "jnxMplsLdpEntityHopCountLimit"), ("JUNIPER-MPLS-LDP-MIB", "jnxMplsLdpEntityTargetPeer"), ("JUNIPER-MPLS-LDP-MIB", "jnxMplsLdpEntityTargetPeerAddrType"), ("JUNIPER-MPLS-LDP-MIB", "jnxMplsLdpEntityTargetPeerAddr"), ("JUNIPER-MPLS-LDP-MIB", "jnxMplsLdpEntityLabelType"), ("JUNIPER-MPLS-LDP-MIB", "jnxMplsLdpEntityDiscontinuityTime"), ("JUNIPER-MPLS-LDP-MIB", "jnxMplsLdpEntityStorageType"), ("JUNIPER-MPLS-LDP-MIB", "jnxMplsLdpEntityRowStatus"), ("JUNIPER-MPLS-LDP-MIB", "jnxMplsLdpAttemptedSessions"), ("JUNIPER-MPLS-LDP-MIB", "jnxMplsLdpSesRejectedNoHelloErrors"), ("JUNIPER-MPLS-LDP-MIB", "jnxMplsLdpSesRejectedAdErrors"), ("JUNIPER-MPLS-LDP-MIB", "jnxMplsLdpSesRejectedMaxPduErrors"), ("JUNIPER-MPLS-LDP-MIB", "jnxMplsLdpSesRejectedLRErrors"), ("JUNIPER-MPLS-LDP-MIB", "jnxMplsLdpBadLdpIdentifierErrors"), ("JUNIPER-MPLS-LDP-MIB", "jnxMplsLdpBadPduLengthErrors"), ("JUNIPER-MPLS-LDP-MIB", "jnxMplsLdpBadMessageLengthErrors"), ("JUNIPER-MPLS-LDP-MIB", "jnxMplsLdpBadTlvLengthErrors"), ("JUNIPER-MPLS-LDP-MIB", "jnxMplsLdpMalformedTlvValueErrors"), ("JUNIPER-MPLS-LDP-MIB", "jnxMplsLdpKeepAliveTimerExpErrors"), ("JUNIPER-MPLS-LDP-MIB", "jnxMplsLdpShutdownNotifReceived"), ("JUNIPER-MPLS-LDP-MIB", "jnxMplsLdpShutdownNotifSent"), ("JUNIPER-MPLS-LDP-MIB", "jnxMplsLdpPeerLastChange"), ("JUNIPER-MPLS-LDP-MIB", "jnxMplsLdpPeerLabelDistMethod"), ("JUNIPER-MPLS-LDP-MIB", "jnxMplsLdpPeerPathVectorLimit"), ("JUNIPER-MPLS-LDP-MIB", "jnxMplsLdpHelloAdjHoldTimeRem"), ("JUNIPER-MPLS-LDP-MIB", "jnxMplsLdpHelloAdjType"), ("JUNIPER-MPLS-LDP-MIB", "jnxMplsLdpSesStateLastChange"), ("JUNIPER-MPLS-LDP-MIB", "jnxMplsLdpSesState"), ("JUNIPER-MPLS-LDP-MIB", "jnxMplsLdpSesProtocolVersion"), ("JUNIPER-MPLS-LDP-MIB", "jnxMplsLdpSesKeepAliveHoldTimeRem"), ("JUNIPER-MPLS-LDP-MIB", "jnxMplsLdpSesMaxPduLength"), ("JUNIPER-MPLS-LDP-MIB", "jnxMplsLdpSesDiscontinuityTime"), ("JUNIPER-MPLS-LDP-MIB", "jnxMplsLdpSesStatsUnkMesTypeErrors"), ("JUNIPER-MPLS-LDP-MIB", "jnxMplsLdpSesStatsUnkTlvErrors"), ("JUNIPER-MPLS-LDP-MIB", "jnxMplsLdpSesPeerNextHopAddrType"), ("JUNIPER-MPLS-LDP-MIB", "jnxMplsLdpSesPeerNextHopAddr"), ("JUNIPER-MPLS-LDP-MIB", "jnxMplsFecIndexNext"), ("JUNIPER-MPLS-LDP-MIB", "jnxMplsFecType"), ("JUNIPER-MPLS-LDP-MIB", "jnxMplsFecAddrFamily"), ("JUNIPER-MPLS-LDP-MIB", "jnxMplsFecAddrLength"), ("JUNIPER-MPLS-LDP-MIB", "jnxMplsFecAddr"), ("JUNIPER-MPLS-LDP-MIB", "jnxMplsFecStorageType"), ("JUNIPER-MPLS-LDP-MIB", "jnxMplsFecRowStatus"), ("JUNIPER-MPLS-LDP-MIB", "jnxMplsLdpLspFecOperStatus"), ("JUNIPER-MPLS-LDP-MIB", "jnxMplsLdpLspFecLastChange"), ("JUNIPER-MPLS-LDP-MIB", "jnxMplsLdpLspFecRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    jnxMplsLdpGeneralGroup = jnxMplsLdpGeneralGroup.setStatus('current')
jnxMplsLdpLspGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2636, 3, 36, 3, 1, 2)).setObjects(("JUNIPER-MPLS-LDP-MIB", "jnxMplsLdpLspLabelType"), ("JUNIPER-MPLS-LDP-MIB", "jnxMplsLdpLspType"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    jnxMplsLdpLspGroup = jnxMplsLdpLspGroup.setStatus('current')
jnxMplsLdpLsrGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2636, 3, 36, 3, 1, 3)).setObjects(("JUNIPER-MPLS-LDP-MIB", "jnxMplsLdpLspLsrInSegmentPointer"), ("JUNIPER-MPLS-LDP-MIB", "jnxMplsLdpLspLsrOutSegmentPointer"), ("JUNIPER-MPLS-LDP-MIB", "jnxMplsLdpLspLsrXCPointer"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    jnxMplsLdpLsrGroup = jnxMplsLdpLsrGroup.setStatus('current')
jnxMplsLdpNotificationsGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 2636, 3, 36, 3, 1, 4)).setObjects(("JUNIPER-MPLS-LDP-MIB", "jnxMplsLdpInitSesThresholdExceeded"), ("JUNIPER-MPLS-LDP-MIB", "jnxMplsLdpPathVectorLimitMismatch"), ("JUNIPER-MPLS-LDP-MIB", "jnxMplsLdpSessionUp"), ("JUNIPER-MPLS-LDP-MIB", "jnxMplsLdpSessionDown"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    jnxMplsLdpNotificationsGroup = jnxMplsLdpNotificationsGroup.setStatus('current')
mibBuilder.exportSymbols("JUNIPER-MPLS-LDP-MIB", jnxMplsFecAddrLength=jnxMplsFecAddrLength, jnxMplsLdpEntityStorageType=jnxMplsLdpEntityStorageType, jnxMplsLdpLspEntry=jnxMplsLdpLspEntry, jnxMplsLdpEntityIndex=jnxMplsLdpEntityIndex, jnxMplsLdpEntityStatsEntry=jnxMplsLdpEntityStatsEntry, jnxMplsLdpLspFecOperStatus=jnxMplsLdpLspFecOperStatus, jnxMplsLdpLspLsrOutSegmentPointer=jnxMplsLdpLspLsrOutSegmentPointer, jnxMplsLdpLspType=jnxMplsLdpLspType, jnxMplsLdpMIB=jnxMplsLdpMIB, jnxMplsLdpModuleFullCompliance=jnxMplsLdpModuleFullCompliance, jnxMplsLdpSessionObjects=jnxMplsLdpSessionObjects, jnxMplsLdpEntityHelloHoldTimer=jnxMplsLdpEntityHelloHoldTimer, jnxMplsLdpNotificationsGroup=jnxMplsLdpNotificationsGroup, jnxMplsLdpNotificationPrefix=jnxMplsLdpNotificationPrefix, jnxMplsLdpEntityOperStatus=jnxMplsLdpEntityOperStatus, jnxMplsLdpConformance=jnxMplsLdpConformance, jnxMplsLdpEntityTcpDscPort=jnxMplsLdpEntityTcpDscPort, jnxMplsLdpEntityStatsTable=jnxMplsLdpEntityStatsTable, jnxMplsLdpSesStateLastChange=jnxMplsLdpSesStateLastChange, jnxMplsLdpLspIfIndex=jnxMplsLdpLspIfIndex, jnxMplsLdpEntityPathVectorLimit=jnxMplsLdpEntityPathVectorLimit, jnxMplsLdpGroups=jnxMplsLdpGroups, jnxMplsLdpEntityTargetPeer=jnxMplsLdpEntityTargetPeer, jnxMplsLdpSesStatsTable=jnxMplsLdpSesStatsTable, jnxMplsLdpSesPeerAddrTable=jnxMplsLdpSesPeerAddrTable, jnxMplsLdpSesMaxPduLength=jnxMplsLdpSesMaxPduLength, jnxMplsLdpSesRejectedMaxPduErrors=jnxMplsLdpSesRejectedMaxPduErrors, jnxMplsLdpLspFecEntry=jnxMplsLdpLspFecEntry, jnxMplsLdpLspTable=jnxMplsLdpLspTable, jnxMplsFecIndexNext=jnxMplsFecIndexNext, jnxMplsLdpLspLsrXCPointer=jnxMplsLdpLspLsrXCPointer, jnxMplsLdpLsrId=jnxMplsLdpLsrId, jnxMplsLdpShutdownNotifSent=jnxMplsLdpShutdownNotifSent, jnxMplsLdpSesKeepAliveHoldTimeRem=jnxMplsLdpSesKeepAliveHoldTimeRem, jnxMplsLdpEntityMaxPduLength=jnxMplsLdpEntityMaxPduLength, jnxMplsLdpEntityIndexNext=jnxMplsLdpEntityIndexNext, jnxMplsFecIndex=jnxMplsFecIndex, jnxMplsLdpSessionUp=jnxMplsLdpSessionUp, jnxMplsLdpSessionEntry=jnxMplsLdpSessionEntry, jnxMplsLdpEntityTargetPeerAddr=jnxMplsLdpEntityTargetPeerAddr, jnxMplsLdpLspLsrInSegmentPointer=jnxMplsLdpLspLsrInSegmentPointer, jnxMplsLdpSesStatsUnkTlvErrors=jnxMplsLdpSesStatsUnkTlvErrors, jnxMplsLdpBadPduLengthErrors=jnxMplsLdpBadPduLengthErrors, jnxMplsFecEntry=jnxMplsFecEntry, jnxMplsLdpEntityLabelType=jnxMplsLdpEntityLabelType, jnxMplsLdpCompliances=jnxMplsLdpCompliances, jnxMplsLdpGeneralGroup=jnxMplsLdpGeneralGroup, jnxMplsFecTable=jnxMplsFecTable, jnxMplsLdpLsrLoopDetectionCapable=jnxMplsLdpLsrLoopDetectionCapable, jnxMplsLdpBadMessageLengthErrors=jnxMplsLdpBadMessageLengthErrors, jnxMplsLdpPeerLdpId=jnxMplsLdpPeerLdpId, jnxMplsLdpNotifications=jnxMplsLdpNotifications, jnxMplsLdpLspFecLastChange=jnxMplsLdpLspFecLastChange, jnxMplsLdpMalformedTlvValueErrors=jnxMplsLdpMalformedTlvValueErrors, jnxMplsFecRowStatus=jnxMplsFecRowStatus, jnxMplsLdpSesPeerAddrEntry=jnxMplsLdpSesPeerAddrEntry, PYSNMP_MODULE_ID=jnxMplsLdpMIB, jnxMplsLdpEntityEntry=jnxMplsLdpEntityEntry, jnxMplsLdpEntityDiscontinuityTime=jnxMplsLdpEntityDiscontinuityTime, jnxMplsLdpSesProtocolVersion=jnxMplsLdpSesProtocolVersion, jnxMplsLdpEntityLdpId=jnxMplsLdpEntityLdpId, jnxMplsLdpModuleReadOnlyCompliance=jnxMplsLdpModuleReadOnlyCompliance, jnxMplsLdpEntityProtocolVersion=jnxMplsLdpEntityProtocolVersion, jnxMplsLdpEntityRowStatus=jnxMplsLdpEntityRowStatus, jnxMplsLdpSesStatsEntry=jnxMplsLdpSesStatsEntry, jnxMplsLdpLspLabel=jnxMplsLdpLspLabel, jnxMplsLdpLsrGroup=jnxMplsLdpLsrGroup, jnxMplsLdpHelloAdjacencyTable=jnxMplsLdpHelloAdjacencyTable, jnxMplsLdpSesStatsUnkMesTypeErrors=jnxMplsLdpSesStatsUnkMesTypeErrors, jnxMplsLdpAttemptedSessions=jnxMplsLdpAttemptedSessions, jnxMplsLdpBadLdpIdentifierErrors=jnxMplsLdpBadLdpIdentifierErrors, jnxMplsLdpHelloAdjType=jnxMplsLdpHelloAdjType, jnxMplsLdpPathVectorLimitMismatch=jnxMplsLdpPathVectorLimitMismatch, jnxMplsLdpHelloAdjHoldTimeRem=jnxMplsLdpHelloAdjHoldTimeRem, jnxMplsLdpSesRejectedAdErrors=jnxMplsLdpSesRejectedAdErrors, jnxMplsLdpEntityAdminStatus=jnxMplsLdpEntityAdminStatus, jnxMplsLdpHelloAdjIndex=jnxMplsLdpHelloAdjIndex, jnxMplsLdpKeepAliveTimerExpErrors=jnxMplsLdpKeepAliveTimerExpErrors, jnxMplsLdpInitSesThresholdExceeded=jnxMplsLdpInitSesThresholdExceeded, jnxMplsLdpEntityKeepAliveHoldTimer=jnxMplsLdpEntityKeepAliveHoldTimer, jnxMplsFecAddr=jnxMplsFecAddr, jnxMplsLdpPeerPathVectorLimit=jnxMplsLdpPeerPathVectorLimit, jnxMplsLdpSesPeerAddrIndex=jnxMplsLdpSesPeerAddrIndex, jnxMplsLdpEntityLabelRetentionMode=jnxMplsLdpEntityLabelRetentionMode, jnxMplsLdpHelloAdjacencyObjects=jnxMplsLdpHelloAdjacencyObjects, jnxMplsLdpPeerTable=jnxMplsLdpPeerTable, jnxMplsLdpSesState=jnxMplsLdpSesState, jnxMplsLdpLspFecTable=jnxMplsLdpLspFecTable, jnxMplsLdpLspFecRowStatus=jnxMplsLdpLspFecRowStatus, jnxMplsLdpShutdownNotifReceived=jnxMplsLdpShutdownNotifReceived, jnxMplsLdpSesPeerNextHopAddr=jnxMplsLdpSesPeerNextHopAddr, jnxMplsFecObjects=jnxMplsFecObjects, jnxMplsLdpLspLabelType=jnxMplsLdpLspLabelType, jnxMplsLdpEntityHopCountLimit=jnxMplsLdpEntityHopCountLimit, jnxMplsLdpEntityLabelDistMethod=jnxMplsLdpEntityLabelDistMethod, jnxMplsLdpLsrObjects=jnxMplsLdpLsrObjects, jnxMplsFecAddrFamily=jnxMplsFecAddrFamily, jnxMplsLdpEntityTargetPeerAddrType=jnxMplsLdpEntityTargetPeerAddrType, jnxMplsLdpPeerLastChange=jnxMplsLdpPeerLastChange, jnxMplsLdpSesRejectedLRErrors=jnxMplsLdpSesRejectedLRErrors, jnxMplsLdpPeerLabelDistMethod=jnxMplsLdpPeerLabelDistMethod, jnxMplsLdpSesPeerNextHopAddrType=jnxMplsLdpSesPeerNextHopAddrType, jnxMplsLdpEntityObjects=jnxMplsLdpEntityObjects, jnxMplsLdpSessionTable=jnxMplsLdpSessionTable, jnxMplsLdpSesRejectedNoHelloErrors=jnxMplsLdpSesRejectedNoHelloErrors, jnxMplsLdpBadTlvLengthErrors=jnxMplsLdpBadTlvLengthErrors, jnxMplsLdpPeerEntry=jnxMplsLdpPeerEntry, jnxMplsLdpEntityTable=jnxMplsLdpEntityTable, jnxMplsLdpEntityInitSesThreshold=jnxMplsLdpEntityInitSesThreshold, jnxMplsLdpEntityUdpDscPort=jnxMplsLdpEntityUdpDscPort, jnxMplsLdpHelloAdjacencyEntry=jnxMplsLdpHelloAdjacencyEntry, jnxMplsFecStorageType=jnxMplsFecStorageType, jnxMplsLdpLspGroup=jnxMplsLdpLspGroup, jnxMplsLdpSessionDown=jnxMplsLdpSessionDown, jnxMplsLdpObjects=jnxMplsLdpObjects, jnxMplsFecType=jnxMplsFecType, jnxMplsLdpEntityLastChange=jnxMplsLdpEntityLastChange, jnxMplsLdpSesDiscontinuityTime=jnxMplsLdpSesDiscontinuityTime)
