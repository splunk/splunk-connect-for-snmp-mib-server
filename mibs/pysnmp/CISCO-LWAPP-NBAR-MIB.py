#
# PySNMP MIB module CISCO-LWAPP-NBAR-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CISCO-LWAPP-NBAR-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:49:00 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, SingleValueConstraint, ConstraintsUnion, ValueSizeConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "SingleValueConstraint", "ConstraintsUnion", "ValueSizeConstraint", "ConstraintsIntersection")
ciscoMgmt, = mibBuilder.importSymbols("CISCO-SMI", "ciscoMgmt")
SnmpAdminString, = mibBuilder.importSymbols("SNMP-FRAMEWORK-MIB", "SnmpAdminString")
ModuleCompliance, ObjectGroup, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "ObjectGroup", "NotificationGroup")
Counter64, NotificationType, ModuleIdentity, iso, Unsigned32, ObjectIdentity, TimeTicks, Gauge32, Bits, Counter32, IpAddress, MibIdentifier, Integer32, MibScalar, MibTable, MibTableRow, MibTableColumn = mibBuilder.importSymbols("SNMPv2-SMI", "Counter64", "NotificationType", "ModuleIdentity", "iso", "Unsigned32", "ObjectIdentity", "TimeTicks", "Gauge32", "Bits", "Counter32", "IpAddress", "MibIdentifier", "Integer32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn")
DisplayString, TextualConvention, RowStatus = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention", "RowStatus")
ciscoLwappNbarMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 9, 9, 99995))
ciscoLwappNbarMIB.setRevisions(('2012-06-12 00:00',))
if mibBuilder.loadTexts: ciscoLwappNbarMIB.setLastUpdated('201206120000Z')
if mibBuilder.loadTexts: ciscoLwappNbarMIB.setOrganization('Cisco Systems Inc.')
ciscoLwappNbarMIBNotifs = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 99995, 0))
ciscoLwappNbarMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 99995, 1))
ciscoLwappNbarMIBConform = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 99995, 2))
ciscoLwappNbarTableObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 99995, 1, 1))
ciscoLwappNbarGlobalObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 99995, 1, 2))
cLNbarAVCEngineVersion = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 99995, 1, 2, 1), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cLNbarAVCEngineVersion.setStatus('current')
cLNbarAVCProtoPackName = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 99995, 1, 2, 2), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cLNbarAVCProtoPackName.setStatus('current')
cLNbarAVCProtoPackVer = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 99995, 1, 2, 3), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cLNbarAVCProtoPackVer.setStatus('current')
cLNbarAVCProfileTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 99995, 1, 1, 1), )
if mibBuilder.loadTexts: cLNbarAVCProfileTable.setStatus('current')
cLNbarAVCProfileEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 99995, 1, 1, 1, 1), ).setIndexNames((0, "CISCO-LWAPP-NBAR-MIB", "cLNbarAVCProfileName"))
if mibBuilder.loadTexts: cLNbarAVCProfileEntry.setStatus('current')
cLNbarAVCProfileName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 99995, 1, 1, 1, 1, 1), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 32)))
if mibBuilder.loadTexts: cLNbarAVCProfileName.setStatus('current')
cLNbarAVCProfileRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 99995, 1, 1, 1, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cLNbarAVCProfileRowStatus.setStatus('current')
cLNbarAVCRuleTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 99995, 1, 1, 2), )
if mibBuilder.loadTexts: cLNbarAVCRuleTable.setStatus('current')
cLNbarAVCRuleEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 99995, 1, 1, 2, 1), ).setIndexNames((0, "CISCO-LWAPP-NBAR-MIB", "cLNbarAVCRuleProfileName"), (0, "CISCO-LWAPP-NBAR-MIB", "cLNbarAVCRuleApplicationName"))
if mibBuilder.loadTexts: cLNbarAVCRuleEntry.setStatus('current')
cLNbarAVCRuleProfileName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 99995, 1, 1, 2, 1, 1), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 32)))
if mibBuilder.loadTexts: cLNbarAVCRuleProfileName.setStatus('current')
cLNbarAVCRuleApplicationName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 99995, 1, 1, 2, 1, 2), SnmpAdminString())
if mibBuilder.loadTexts: cLNbarAVCRuleApplicationName.setStatus('current')
cLNbarAVCRuleApplicationGroupName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 99995, 1, 1, 2, 1, 3), SnmpAdminString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cLNbarAVCRuleApplicationGroupName.setStatus('current')
cLNbarAVCRuleApplicationAction = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 99995, 1, 1, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(2, 3, 4))).clone(namedValues=NamedValues(("drop", 2), ("mark", 3), ("ratelimit", 4)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cLNbarAVCRuleApplicationAction.setStatus('current')
cLNbarAVCRuleDscpValue = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 99995, 1, 1, 2, 1, 5), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cLNbarAVCRuleDscpValue.setStatus('current')
cLNbarAVCRuleRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 99995, 1, 1, 2, 1, 6), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cLNbarAVCRuleRowStatus.setStatus('current')
cLNbarAVCRuleAppAvgRateLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 99995, 1, 1, 2, 1, 7), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cLNbarAVCRuleAppAvgRateLimit.setStatus('current')
cLNbarAVCRuleAppBurstRateLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 99995, 1, 1, 2, 1, 8), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cLNbarAVCRuleAppBurstRateLimit.setStatus('current')
cLAVCProtoPackLoadNotifFailed = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 99995, 0, 1)).setObjects(("CISCO-LWAPP-NBAR-MIB", "cLNbarAVCProtoPackName"), ("CISCO-LWAPP-NBAR-MIB", "cLNbarAVCProtoPackVer"))
if mibBuilder.loadTexts: cLAVCProtoPackLoadNotifFailed.setStatus('current')
cLAVCProtoPackLoadNotifSuccess = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 99995, 0, 2)).setObjects(("CISCO-LWAPP-NBAR-MIB", "cLNbarAVCProtoPackName"), ("CISCO-LWAPP-NBAR-MIB", "cLNbarAVCProtoPackVer"))
if mibBuilder.loadTexts: cLAVCProtoPackLoadNotifSuccess.setStatus('current')
ciscoLwappNbarMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 99995, 2, 1))
ciscoLwappNbarMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 99995, 2, 2))
ciscoLwappNbarMIBCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 99995, 2, 1, 1)).setObjects(("CISCO-LWAPP-NBAR-MIB", "cLNbarConfigGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoLwappNbarMIBCompliance = ciscoLwappNbarMIBCompliance.setStatus('deprecated')
ciscoLwappNbarMIBComplianceRev1 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 99995, 2, 1, 2)).setObjects(("CISCO-LWAPP-NBAR-MIB", "cLNbarConfigGroup"), ("CISCO-LWAPP-NBAR-MIB", "cLNbarGlobalGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoLwappNbarMIBComplianceRev1 = ciscoLwappNbarMIBComplianceRev1.setStatus('current')
cLNbarConfigGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 99995, 2, 2, 1)).setObjects(("CISCO-LWAPP-NBAR-MIB", "cLNbarAVCProfileName"), ("CISCO-LWAPP-NBAR-MIB", "cLNbarAVCProfileRowStatus"), ("CISCO-LWAPP-NBAR-MIB", "cLNbarAVCRuleProfileName"), ("CISCO-LWAPP-NBAR-MIB", "cLNbarAVCRuleApplicationName"), ("CISCO-LWAPP-NBAR-MIB", "cLNbarAVCRuleApplicationGroupName"), ("CISCO-LWAPP-NBAR-MIB", "cLNbarAVCRuleApplicationAction"), ("CISCO-LWAPP-NBAR-MIB", "cLNbarAVCRuleDscpValue"), ("CISCO-LWAPP-NBAR-MIB", "cLNbarAVCRuleRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cLNbarConfigGroup = cLNbarConfigGroup.setStatus('current')
cLNbarGlobalGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 99995, 2, 2, 2)).setObjects(("CISCO-LWAPP-NBAR-MIB", "cLNbarAVCEngineVersion"), ("CISCO-LWAPP-NBAR-MIB", "cLNbarAVCProtoPackVer"), ("CISCO-LWAPP-NBAR-MIB", "cLNbarAVCProtoPackName"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cLNbarGlobalGroup = cLNbarGlobalGroup.setStatus('current')
mibBuilder.exportSymbols("CISCO-LWAPP-NBAR-MIB", cLNbarAVCRuleAppBurstRateLimit=cLNbarAVCRuleAppBurstRateLimit, cLNbarAVCProfileRowStatus=cLNbarAVCProfileRowStatus, ciscoLwappNbarMIBObjects=ciscoLwappNbarMIBObjects, cLAVCProtoPackLoadNotifFailed=cLAVCProtoPackLoadNotifFailed, cLAVCProtoPackLoadNotifSuccess=cLAVCProtoPackLoadNotifSuccess, cLNbarAVCRuleRowStatus=cLNbarAVCRuleRowStatus, cLNbarAVCRuleEntry=cLNbarAVCRuleEntry, cLNbarGlobalGroup=cLNbarGlobalGroup, cLNbarAVCRuleTable=cLNbarAVCRuleTable, ciscoLwappNbarMIBGroups=ciscoLwappNbarMIBGroups, cLNbarAVCRuleDscpValue=cLNbarAVCRuleDscpValue, PYSNMP_MODULE_ID=ciscoLwappNbarMIB, cLNbarAVCProtoPackName=cLNbarAVCProtoPackName, ciscoLwappNbarMIBConform=ciscoLwappNbarMIBConform, cLNbarAVCRuleApplicationAction=cLNbarAVCRuleApplicationAction, cLNbarAVCEngineVersion=cLNbarAVCEngineVersion, ciscoLwappNbarMIBNotifs=ciscoLwappNbarMIBNotifs, cLNbarAVCProfileTable=cLNbarAVCProfileTable, cLNbarAVCProfileName=cLNbarAVCProfileName, cLNbarAVCProfileEntry=cLNbarAVCProfileEntry, cLNbarAVCRuleApplicationGroupName=cLNbarAVCRuleApplicationGroupName, cLNbarConfigGroup=cLNbarConfigGroup, cLNbarAVCRuleAppAvgRateLimit=cLNbarAVCRuleAppAvgRateLimit, ciscoLwappNbarMIB=ciscoLwappNbarMIB, ciscoLwappNbarMIBCompliances=ciscoLwappNbarMIBCompliances, cLNbarAVCRuleProfileName=cLNbarAVCRuleProfileName, cLNbarAVCRuleApplicationName=cLNbarAVCRuleApplicationName, ciscoLwappNbarMIBCompliance=ciscoLwappNbarMIBCompliance, ciscoLwappNbarTableObjects=ciscoLwappNbarTableObjects, cLNbarAVCProtoPackVer=cLNbarAVCProtoPackVer, ciscoLwappNbarMIBComplianceRev1=ciscoLwappNbarMIBComplianceRev1, ciscoLwappNbarGlobalObjects=ciscoLwappNbarGlobalObjects)
