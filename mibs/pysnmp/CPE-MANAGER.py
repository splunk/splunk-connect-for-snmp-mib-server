#
# PySNMP MIB module CPE-MANAGER (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CPE-MANAGER
# Produced by pysmi-0.3.4 at Mon Apr 29 18:11:18 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ConstraintsUnion, ConstraintsIntersection, ValueSizeConstraint, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ConstraintsUnion", "ConstraintsIntersection", "ValueSizeConstraint", "ValueRangeConstraint")
ifIndex, = mibBuilder.importSymbols("IF-MIB", "ifIndex")
ModuleCompliance, NotificationGroup, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup", "ObjectGroup")
TimeTicks, Counter64, ObjectIdentity, Bits, IpAddress, Integer32, ModuleIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, NotificationType, Counter32, Unsigned32, iso, MibIdentifier, Gauge32 = mibBuilder.importSymbols("SNMPv2-SMI", "TimeTicks", "Counter64", "ObjectIdentity", "Bits", "IpAddress", "Integer32", "ModuleIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "NotificationType", "Counter32", "Unsigned32", "iso", "MibIdentifier", "Gauge32")
TextualConvention, DisplayString, MacAddress, TruthValue = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString", "MacAddress", "TruthValue")
cpeMgr, = mibBuilder.importSymbols("ZHONE-SYSTEM-MIB", "cpeMgr")
ZhoneRowStatus, = mibBuilder.importSymbols("Zhone-TC", "ZhoneRowStatus")
cpeMgrModule = ModuleIdentity((1, 3, 6, 1, 4, 1, 5504, 3, 1, 21, 1))
cpeMgrModule.setRevisions(('2011-05-13 09:17', '2011-02-08 06:48', '2010-10-28 12:06', '2010-09-22 07:42', '2010-05-18 10:00',))
if mibBuilder.loadTexts: cpeMgrModule.setLastUpdated('201105131042Z')
if mibBuilder.loadTexts: cpeMgrModule.setOrganization('Zhone Technologies, Inc.')
cpeMgrGlobal = ObjectIdentity((1, 3, 6, 1, 4, 1, 5504, 3, 1, 21, 1, 1))
if mibBuilder.loadTexts: cpeMgrGlobal.setStatus('current')
cpeMgrGlobalObjects = ObjectIdentity((1, 3, 6, 1, 4, 1, 5504, 3, 1, 21, 1, 1, 1))
if mibBuilder.loadTexts: cpeMgrGlobalObjects.setStatus('current')
cpeMgrLocalVlanId = MibScalar((1, 3, 6, 1, 4, 1, 5504, 3, 1, 21, 1, 1, 1, 1), Unsigned32().clone(7)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cpeMgrLocalVlanId.setStatus('current')
cpeMgrLocalSlanId = MibScalar((1, 3, 6, 1, 4, 1, 5504, 3, 1, 21, 1, 1, 1, 2), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cpeMgrLocalSlanId.setStatus('current')
cpeCfgMgrConcurrentUpdateLimit = MibScalar((1, 3, 6, 1, 4, 1, 5504, 3, 1, 21, 1, 1, 1, 3), Unsigned32().clone(5)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cpeCfgMgrConcurrentUpdateLimit.setStatus('current')
cpeMgrGlobalConformance = ObjectIdentity((1, 3, 6, 1, 4, 1, 5504, 3, 1, 21, 1, 1, 2))
if mibBuilder.loadTexts: cpeMgrGlobalConformance.setStatus('current')
cpeMgrGlobalGroups = ObjectIdentity((1, 3, 6, 1, 4, 1, 5504, 3, 1, 21, 1, 1, 2, 1))
if mibBuilder.loadTexts: cpeMgrGlobalGroups.setStatus('current')
cpeMgrGlobalGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 5504, 3, 1, 21, 1, 1, 2, 1, 1)).setObjects(("CPE-MANAGER", "cpeMgrLocalVlanId"), ("CPE-MANAGER", "cpeMgrLocalSlanId"), ("CPE-MANAGER", "cpeCfgMgrConcurrentUpdateLimit"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cpeMgrGlobalGroup = cpeMgrGlobalGroup.setStatus('current')
cpeMgrGlobalCompliances = ObjectIdentity((1, 3, 6, 1, 4, 1, 5504, 3, 1, 21, 1, 1, 2, 2))
if mibBuilder.loadTexts: cpeMgrGlobalCompliances.setStatus('current')
cpeMgrGlobalCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 5504, 3, 1, 21, 1, 1, 2, 2, 1)).setObjects(("CPE-MANAGER", "cpeMgrGlobalGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cpeMgrGlobalCompliance = cpeMgrGlobalCompliance.setStatus('current')
cpeConfigMgr = ObjectIdentity((1, 3, 6, 1, 4, 1, 5504, 3, 1, 21, 1, 2))
if mibBuilder.loadTexts: cpeConfigMgr.setStatus('current')
cpeConfigMgrNotifications = ObjectIdentity((1, 3, 6, 1, 4, 1, 5504, 3, 1, 21, 1, 2, 0))
if mibBuilder.loadTexts: cpeConfigMgrNotifications.setStatus('current')
cpeConfigMgrClientOperational = NotificationType((1, 3, 6, 1, 4, 1, 5504, 3, 1, 21, 1, 2, 0, 1)).setObjects(("IF-MIB", "ifIndex"), ("CPE-MANAGER", "cpeConfigMgrUsed"), ("CPE-MANAGER", "reportedCpeSerialNumber"), ("CPE-MANAGER", "reportedCpeRegistrationID"))
if mibBuilder.loadTexts: cpeConfigMgrClientOperational.setStatus('current')
cpeConfigMgrClientDysfunctional = NotificationType((1, 3, 6, 1, 4, 1, 5504, 3, 1, 21, 1, 2, 0, 2)).setObjects(("IF-MIB", "ifIndex"), ("CPE-MANAGER", "cpeConfigMgrUsed"), ("CPE-MANAGER", "cpeConfigMgrMemberStatus"))
if mibBuilder.loadTexts: cpeConfigMgrClientDysfunctional.setStatus('current')
cpeConfigMgrMismatchType = NotificationType((1, 3, 6, 1, 4, 1, 5504, 3, 1, 21, 1, 2, 0, 3)).setObjects(("IF-MIB", "ifIndex"), ("CPE-MANAGER", "cpeConfigMgrGroupMembership"), ("CPE-MANAGER", "reportedCpeType"))
if mibBuilder.loadTexts: cpeConfigMgrMismatchType.setStatus('current')
cpeConfigMgrMismatchSoftwareVersion = NotificationType((1, 3, 6, 1, 4, 1, 5504, 3, 1, 21, 1, 2, 0, 4)).setObjects(("IF-MIB", "ifIndex"), ("CPE-MANAGER", "cpeConfigMgrUsed"), ("CPE-MANAGER", "requiredCpeSoftwareVersion"), ("CPE-MANAGER", "reportedCpeSoftwareVersion"))
if mibBuilder.loadTexts: cpeConfigMgrMismatchSoftwareVersion.setStatus('current')
cpeConfigMgrMismatchWebUIVersion = NotificationType((1, 3, 6, 1, 4, 1, 5504, 3, 1, 21, 1, 2, 0, 5)).setObjects(("IF-MIB", "ifIndex"), ("CPE-MANAGER", "cpeConfigMgrUsed"), ("CPE-MANAGER", "requiredCpeWebUIVersion"), ("CPE-MANAGER", "reportedCpeWebUIVersion"))
if mibBuilder.loadTexts: cpeConfigMgrMismatchWebUIVersion.setStatus('current')
cpeConfigMgrMismatchConfigFile = NotificationType((1, 3, 6, 1, 4, 1, 5504, 3, 1, 21, 1, 2, 0, 6)).setObjects(("IF-MIB", "ifIndex"), ("CPE-MANAGER", "cpeConfigMgrUsed"), ("CPE-MANAGER", "reportedCpeConfigFilename"), ("CPE-MANAGER", "reportedDwnldSrvrBasePath"), ("CPE-MANAGER", "reportedDwnldSrvrSpecificPath"))
if mibBuilder.loadTexts: cpeConfigMgrMismatchConfigFile.setStatus('current')
cpeConfigMgrUpdateError = NotificationType((1, 3, 6, 1, 4, 1, 5504, 3, 1, 21, 1, 2, 0, 7)).setObjects(("IF-MIB", "ifIndex"), ("CPE-MANAGER", "cpeConfigMgrUsed"), ("CPE-MANAGER", "cpeConfigMgrMemberStatus"))
if mibBuilder.loadTexts: cpeConfigMgrUpdateError.setStatus('current')
cpeConfigMgrObjects = ObjectIdentity((1, 3, 6, 1, 4, 1, 5504, 3, 1, 21, 1, 2, 1))
if mibBuilder.loadTexts: cpeConfigMgrObjects.setStatus('current')
cpeConfigMgrTable = MibTable((1, 3, 6, 1, 4, 1, 5504, 3, 1, 21, 1, 2, 1, 1), )
if mibBuilder.loadTexts: cpeConfigMgrTable.setStatus('current')
cpeConfigMgrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5504, 3, 1, 21, 1, 2, 1, 1, 1), ).setIndexNames((0, "CPE-MANAGER", "cpeConfigMgrIndex"))
if mibBuilder.loadTexts: cpeConfigMgrEntry.setStatus('current')
cpeConfigMgrRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 3, 1, 21, 1, 2, 1, 1, 1, 1), ZhoneRowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cpeConfigMgrRowStatus.setStatus('current')
cpeConfigMgrIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 3, 1, 21, 1, 2, 1, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: cpeConfigMgrIndex.setStatus('current')
cpeConfigMgrName = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 3, 1, 21, 1, 2, 1, 1, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cpeConfigMgrName.setStatus('current')
cpeConfigMgrGroup = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 3, 1, 21, 1, 2, 1, 1, 1, 4), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cpeConfigMgrGroup.setStatus('current')
managedCpeType = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 3, 1, 21, 1, 2, 1, 1, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 16))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: managedCpeType.setStatus('current')
requiredCpeSoftwareVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 3, 1, 21, 1, 2, 1, 1, 1, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: requiredCpeSoftwareVersion.setStatus('current')
requiredCpeSoftwareFilename = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 3, 1, 21, 1, 2, 1, 1, 1, 7), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: requiredCpeSoftwareFilename.setStatus('current')
requiredCpeWebUIVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 3, 1, 21, 1, 2, 1, 1, 1, 8), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: requiredCpeWebUIVersion.setStatus('current')
requiredCpeWebUIFilename = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 3, 1, 21, 1, 2, 1, 1, 1, 9), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: requiredCpeWebUIFilename.setStatus('current')
requiredCpeGenericConfigFile = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 3, 1, 21, 1, 2, 1, 1, 1, 10), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: requiredCpeGenericConfigFile.setStatus('current')
cpeLeaseTimeUpdate = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 3, 1, 21, 1, 2, 1, 1, 1, 11), Integer32().clone(300)).setUnits('Seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: cpeLeaseTimeUpdate.setStatus('current')
cpeLeaseTimeOperational = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 3, 1, 21, 1, 2, 1, 1, 1, 12), Integer32().clone(86400)).setUnits('Seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: cpeLeaseTimeOperational.setStatus('current')
cpeConfigMgrDwnldSrvrToUsed = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 3, 1, 21, 1, 2, 1, 1, 1, 13), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cpeConfigMgrDwnldSrvrToUsed.setStatus('current')
cpeConfigMgrDownloadBasePath = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 3, 1, 21, 1, 2, 1, 1, 1, 14), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cpeConfigMgrDownloadBasePath.setStatus('current')
cpeConfigMgrDownloadSecureMode = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 3, 1, 21, 1, 2, 1, 1, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2), ("noPreference", 3))).clone('noPreference')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cpeConfigMgrDownloadSecureMode.setStatus('current')
cpeConfigMgrTrapsEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 3, 1, 21, 1, 2, 1, 1, 1, 16), TruthValue().clone('true')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cpeConfigMgrTrapsEnabled.setStatus('current')
cpeConfigScriptIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 3, 1, 21, 1, 2, 1, 1, 1, 17), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cpeConfigScriptIndex.setStatus('current')
cpeConfigVarsIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 3, 1, 21, 1, 2, 1, 1, 1, 18), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cpeConfigVarsIndex.setStatus('current')
cpeConfigMgrDownloadServerTable = MibTable((1, 3, 6, 1, 4, 1, 5504, 3, 1, 21, 1, 2, 1, 2), )
if mibBuilder.loadTexts: cpeConfigMgrDownloadServerTable.setStatus('current')
cpeConfigMgrDownloadServerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5504, 3, 1, 21, 1, 2, 1, 2, 1), ).setIndexNames((0, "CPE-MANAGER", "cpeCfgMgrDwnldSrvrIndex"))
if mibBuilder.loadTexts: cpeConfigMgrDownloadServerEntry.setStatus('current')
cpeCfgMgrDwnldSrvrRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 3, 1, 21, 1, 2, 1, 2, 1, 1), ZhoneRowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cpeCfgMgrDwnldSrvrRowStatus.setStatus('current')
cpeCfgMgrDwnldSrvrIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 3, 1, 21, 1, 2, 1, 2, 1, 2), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cpeCfgMgrDwnldSrvrIndex.setStatus('current')
cpeCfgMgrDwnldSrvrIP = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 3, 1, 21, 1, 2, 1, 2, 1, 3), IpAddress().clone(hexValue="00000000")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cpeCfgMgrDwnldSrvrIP.setStatus('current')
cpeCfgMgrDwnldSrvrUsername = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 3, 1, 21, 1, 2, 1, 2, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cpeCfgMgrDwnldSrvrUsername.setStatus('current')
cpeCfgMgrDwnldSrvrPassword = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 3, 1, 21, 1, 2, 1, 2, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cpeCfgMgrDwnldSrvrPassword.setStatus('current')
cpeCfgMgrDwnldSrvrDefault = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 3, 1, 21, 1, 2, 1, 2, 1, 6), TruthValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cpeCfgMgrDwnldSrvrDefault.setStatus('current')
cpeConfigMgrMemberTable = MibTable((1, 3, 6, 1, 4, 1, 5504, 3, 1, 21, 1, 2, 1, 3), )
if mibBuilder.loadTexts: cpeConfigMgrMemberTable.setStatus('current')
cpeConfigMgrMemberEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5504, 3, 1, 21, 1, 2, 1, 3, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: cpeConfigMgrMemberEntry.setStatus('current')
cpeConfigMgrMemberRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 3, 1, 21, 1, 2, 1, 3, 1, 1), ZhoneRowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cpeConfigMgrMemberRowStatus.setStatus('current')
cpeConfigMgrGroupMembership = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 3, 1, 21, 1, 2, 1, 3, 1, 2), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cpeConfigMgrGroupMembership.setStatus('current')
cpeSpecificConfigFile = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 3, 1, 21, 1, 2, 1, 3, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cpeSpecificConfigFile.setStatus('current')
cpeSpecificDownloadPath = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 3, 1, 21, 1, 2, 1, 3, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 40))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cpeSpecificDownloadPath.setStatus('current')
cpeConfigMgrMemberTrapsEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 3, 1, 21, 1, 2, 1, 3, 1, 5), TruthValue().clone('true')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cpeConfigMgrMemberTrapsEnabled.setStatus('current')
cpeConfigMgrMemberStatusTable = MibTable((1, 3, 6, 1, 4, 1, 5504, 3, 1, 21, 1, 2, 1, 4), )
if mibBuilder.loadTexts: cpeConfigMgrMemberStatusTable.setStatus('current')
cpeConfigMgrMemberStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5504, 3, 1, 21, 1, 2, 1, 4, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: cpeConfigMgrMemberStatusEntry.setStatus('current')
cpeConfigMgrMemberStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 3, 1, 21, 1, 2, 1, 4, 1, 1), Bits().clone(namedValues=NamedValues(("notCompared", 0), ("noUpdateRequired", 1), ("upgradeInfoSent", 2), ("errorsDetected", 3), ("cpeTypeMismatch", 4), ("downloadStormThrottled", 5), ("updateRetryLimitExceeded", 6), ("softwareUpgradeNeeded", 7), ("webuiUpgradeNeeded", 8), ("configUpdateNeeded", 9), ("configBackupNeeded", 10), ("provisioningPending", 11), ("provisioningActive", 12), ("provisioningError", 13)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cpeConfigMgrMemberStatus.setStatus('current')
cpeConfigMgrUsed = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 3, 1, 21, 1, 2, 1, 4, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cpeConfigMgrUsed.setStatus('current')
reportedCpeType = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 3, 1, 21, 1, 2, 1, 4, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: reportedCpeType.setStatus('current')
reportedCpeSoftwareVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 3, 1, 21, 1, 2, 1, 4, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: reportedCpeSoftwareVersion.setStatus('current')
reportedCpeWebUIVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 3, 1, 21, 1, 2, 1, 4, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: reportedCpeWebUIVersion.setStatus('current')
reportedCpeConfigFilename = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 3, 1, 21, 1, 2, 1, 4, 1, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: reportedCpeConfigFilename.setStatus('current')
reportedCpeSerialNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 3, 1, 21, 1, 2, 1, 4, 1, 7), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: reportedCpeSerialNumber.setStatus('current')
reportedCpeRegistrationID = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 3, 1, 21, 1, 2, 1, 4, 1, 8), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 10))).setMaxAccess("readonly")
if mibBuilder.loadTexts: reportedCpeRegistrationID.setStatus('current')
reportedCpeFSAN = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 3, 1, 21, 1, 2, 1, 4, 1, 9), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: reportedCpeFSAN.setStatus('current')
reportedCpeMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 3, 1, 21, 1, 2, 1, 4, 1, 10), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: reportedCpeMacAddress.setStatus('current')
reportedDwnldSrvrBasePath = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 3, 1, 21, 1, 2, 1, 4, 1, 11), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: reportedDwnldSrvrBasePath.setStatus('current')
reportedDwnldSrvrSpecificPath = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 3, 1, 21, 1, 2, 1, 4, 1, 12), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 40))).setMaxAccess("readonly")
if mibBuilder.loadTexts: reportedDwnldSrvrSpecificPath.setStatus('current')
reportedCpeState = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 3, 1, 21, 1, 2, 1, 4, 1, 13), Integer32().clone(-1)).setMaxAccess("readonly")
if mibBuilder.loadTexts: reportedCpeState.setStatus('current')
cpeConfigMgrConformance = ObjectIdentity((1, 3, 6, 1, 4, 1, 5504, 3, 1, 21, 1, 2, 2))
if mibBuilder.loadTexts: cpeConfigMgrConformance.setStatus('current')
cpeConfigMgrGroups = ObjectIdentity((1, 3, 6, 1, 4, 1, 5504, 3, 1, 21, 1, 2, 2, 1))
if mibBuilder.loadTexts: cpeConfigMgrGroups.setStatus('current')
cpeConfigMgrObjectGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 5504, 3, 1, 21, 1, 2, 2, 1, 1)).setObjects(("CPE-MANAGER", "cpeConfigMgrRowStatus"), ("CPE-MANAGER", "cpeConfigMgrIndex"), ("CPE-MANAGER", "cpeConfigMgrName"), ("CPE-MANAGER", "cpeConfigMgrGroup"), ("CPE-MANAGER", "managedCpeType"), ("CPE-MANAGER", "requiredCpeSoftwareVersion"), ("CPE-MANAGER", "requiredCpeSoftwareFilename"), ("CPE-MANAGER", "requiredCpeWebUIVersion"), ("CPE-MANAGER", "requiredCpeWebUIFilename"), ("CPE-MANAGER", "requiredCpeGenericConfigFile"), ("CPE-MANAGER", "cpeLeaseTimeUpdate"), ("CPE-MANAGER", "cpeLeaseTimeOperational"), ("CPE-MANAGER", "cpeConfigMgrDownloadBasePath"), ("CPE-MANAGER", "cpeConfigMgrDownloadSecureMode"), ("CPE-MANAGER", "cpeConfigVarsIndex"), ("CPE-MANAGER", "cpeConfigScriptIndex"), ("CPE-MANAGER", "cpeConfigMgrTrapsEnabled"), ("CPE-MANAGER", "cpeConfigMgrDwnldSrvrToUsed"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cpeConfigMgrObjectGroup = cpeConfigMgrObjectGroup.setStatus('current')
cpeConfigMgrDownloadServerGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 5504, 3, 1, 21, 1, 2, 2, 1, 2)).setObjects(("CPE-MANAGER", "cpeCfgMgrDwnldSrvrRowStatus"), ("CPE-MANAGER", "cpeCfgMgrDwnldSrvrIndex"), ("CPE-MANAGER", "cpeCfgMgrDwnldSrvrIP"), ("CPE-MANAGER", "cpeCfgMgrDwnldSrvrUsername"), ("CPE-MANAGER", "cpeCfgMgrDwnldSrvrPassword"), ("CPE-MANAGER", "cpeCfgMgrDwnldSrvrDefault"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cpeConfigMgrDownloadServerGroup = cpeConfigMgrDownloadServerGroup.setStatus('current')
cpeConfigMgrMemberObjectGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 5504, 3, 1, 21, 1, 2, 2, 1, 3)).setObjects(("CPE-MANAGER", "cpeConfigMgrMemberRowStatus"), ("CPE-MANAGER", "cpeConfigMgrGroupMembership"), ("CPE-MANAGER", "cpeSpecificConfigFile"), ("CPE-MANAGER", "cpeSpecificDownloadPath"), ("CPE-MANAGER", "cpeConfigMgrMemberTrapsEnabled"), ("CPE-MANAGER", "cpeConfigMgrMemberStatus"), ("CPE-MANAGER", "cpeConfigMgrUsed"), ("CPE-MANAGER", "reportedCpeType"), ("CPE-MANAGER", "reportedCpeSoftwareVersion"), ("CPE-MANAGER", "reportedCpeWebUIVersion"), ("CPE-MANAGER", "reportedCpeConfigFilename"), ("CPE-MANAGER", "reportedCpeSerialNumber"), ("CPE-MANAGER", "reportedCpeRegistrationID"), ("CPE-MANAGER", "reportedCpeFSAN"), ("CPE-MANAGER", "reportedCpeMacAddress"), ("CPE-MANAGER", "reportedDwnldSrvrBasePath"), ("CPE-MANAGER", "reportedDwnldSrvrSpecificPath"), ("CPE-MANAGER", "reportedCpeState"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cpeConfigMgrMemberObjectGroup = cpeConfigMgrMemberObjectGroup.setStatus('current')
cpeConfigMgrNotificationsObjectGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 5504, 3, 1, 21, 1, 2, 2, 1, 4)).setObjects(("CPE-MANAGER", "cpeConfigMgrClientOperational"), ("CPE-MANAGER", "cpeConfigMgrClientDysfunctional"), ("CPE-MANAGER", "cpeConfigMgrMismatchType"), ("CPE-MANAGER", "cpeConfigMgrMismatchSoftwareVersion"), ("CPE-MANAGER", "cpeConfigMgrMismatchWebUIVersion"), ("CPE-MANAGER", "cpeConfigMgrMismatchConfigFile"), ("CPE-MANAGER", "cpeConfigMgrUpdateError"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cpeConfigMgrNotificationsObjectGroup = cpeConfigMgrNotificationsObjectGroup.setStatus('current')
cpeConfigMgrCompliances = ObjectIdentity((1, 3, 6, 1, 4, 1, 5504, 3, 1, 21, 1, 2, 2, 2))
if mibBuilder.loadTexts: cpeConfigMgrCompliances.setStatus('current')
cpeConfigMgrCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 5504, 3, 1, 21, 1, 2, 2, 2, 1)).setObjects(("CPE-MANAGER", "cpeConfigMgrObjectGroup"), ("CPE-MANAGER", "cpeConfigMgrMemberObjectGroup"), ("CPE-MANAGER", "cpeConfigMgrDownloadServerGroup"), ("CPE-MANAGER", "cpeConfigMgrNotificationsObjectGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cpeConfigMgrCompliance = cpeConfigMgrCompliance.setStatus('current')
cpeConfigMgrClient = ObjectIdentity((1, 3, 6, 1, 4, 1, 5504, 3, 1, 21, 1, 3))
if mibBuilder.loadTexts: cpeConfigMgrClient.setStatus('current')
cpeCfgMgrClientNotifications = ObjectIdentity((1, 3, 6, 1, 4, 1, 5504, 3, 1, 21, 1, 3, 0))
if mibBuilder.loadTexts: cpeCfgMgrClientNotifications.setStatus('current')
cpeCfgMgrClientSoftwareDownloadFailed = NotificationType((1, 3, 6, 1, 4, 1, 5504, 3, 1, 21, 1, 3, 0, 1)).setObjects(("CPE-MANAGER", "cpeCfgMgrClientSerialNumber"), ("CPE-MANAGER", "cpeCfgMgrClientRegistrationID"), ("CPE-MANAGER", "cpeCfgMgrClientState"), ("CPE-MANAGER", "cpeCfgMgrClientErrorDescription"), ("CPE-MANAGER", "cpeCfgMgrClientRequiredUpdates"), ("CPE-MANAGER", "cpeCfgMgrClientReceivedSwFilename"), ("CPE-MANAGER", "cpeCfgMgrClientDwnldSrvrBasePath"), ("CPE-MANAGER", "cpeCfgMgrClientDwnldSrvrIP"), ("CPE-MANAGER", "cpeCfgMgrClientDwnldSrvrUsername"), ("CPE-MANAGER", "cpeCfgMgrClientDwnldSrvrSecureMode"))
if mibBuilder.loadTexts: cpeCfgMgrClientSoftwareDownloadFailed.setStatus('current')
cpeCfgMgrClientSoftwareInstallFailed = NotificationType((1, 3, 6, 1, 4, 1, 5504, 3, 1, 21, 1, 3, 0, 2)).setObjects(("CPE-MANAGER", "cpeCfgMgrClientSerialNumber"), ("CPE-MANAGER", "cpeCfgMgrClientRegistrationID"), ("CPE-MANAGER", "cpeCfgMgrClientState"), ("CPE-MANAGER", "cpeCfgMgrClientErrorDescription"), ("CPE-MANAGER", "cpeCfgMgrClientRequiredUpdates"), ("CPE-MANAGER", "cpeCfgMgrClientReceivedSwFilename"), ("CPE-MANAGER", "cpeCfgMgrClientDwnldSrvrBasePath"), ("CPE-MANAGER", "cpeCfgMgrClientDwnldSrvrIP"), ("CPE-MANAGER", "cpeCfgMgrClientDwnldSrvrUsername"), ("CPE-MANAGER", "cpeCfgMgrClientDwnldSrvrSecureMode"))
if mibBuilder.loadTexts: cpeCfgMgrClientSoftwareInstallFailed.setStatus('current')
cpeCfgMgrClientWebUIDownloadFailed = NotificationType((1, 3, 6, 1, 4, 1, 5504, 3, 1, 21, 1, 3, 0, 3)).setObjects(("CPE-MANAGER", "cpeCfgMgrClientSerialNumber"), ("CPE-MANAGER", "cpeCfgMgrClientRegistrationID"), ("CPE-MANAGER", "cpeCfgMgrClientState"), ("CPE-MANAGER", "cpeCfgMgrClientErrorDescription"), ("CPE-MANAGER", "cpeCfgMgrClientRequiredUpdates"), ("CPE-MANAGER", "cpeCfgMgrClientReceivedWebUIFilename"), ("CPE-MANAGER", "cpeCfgMgrClientDwnldSrvrBasePath"), ("CPE-MANAGER", "cpeCfgMgrClientDwnldSrvrIP"), ("CPE-MANAGER", "cpeCfgMgrClientDwnldSrvrUsername"), ("CPE-MANAGER", "cpeCfgMgrClientDwnldSrvrSecureMode"))
if mibBuilder.loadTexts: cpeCfgMgrClientWebUIDownloadFailed.setStatus('current')
cpeCfgMgrClientWebUIInstallFailed = NotificationType((1, 3, 6, 1, 4, 1, 5504, 3, 1, 21, 1, 3, 0, 4)).setObjects(("CPE-MANAGER", "cpeCfgMgrClientSerialNumber"), ("CPE-MANAGER", "cpeCfgMgrClientRegistrationID"), ("CPE-MANAGER", "cpeCfgMgrClientState"), ("CPE-MANAGER", "cpeCfgMgrClientErrorDescription"), ("CPE-MANAGER", "cpeCfgMgrClientRequiredUpdates"), ("CPE-MANAGER", "cpeCfgMgrClientDwnldSrvrBasePath"), ("CPE-MANAGER", "cpeCfgMgrClientDwnldSrvrIP"), ("CPE-MANAGER", "cpeCfgMgrClientDwnldSrvrUsername"), ("CPE-MANAGER", "cpeCfgMgrClientReceivedWebUIFilename"), ("CPE-MANAGER", "cpeCfgMgrClientDwnldSrvrSecureMode"))
if mibBuilder.loadTexts: cpeCfgMgrClientWebUIInstallFailed.setStatus('current')
cpeCfgMgrClientConfigDownloadFailed = NotificationType((1, 3, 6, 1, 4, 1, 5504, 3, 1, 21, 1, 3, 0, 5)).setObjects(("CPE-MANAGER", "cpeCfgMgrClientSerialNumber"), ("CPE-MANAGER", "cpeCfgMgrClientRegistrationID"), ("CPE-MANAGER", "cpeCfgMgrClientState"), ("CPE-MANAGER", "cpeCfgMgrClientErrorDescription"), ("CPE-MANAGER", "cpeCfgMgrClientRequiredUpdates"), ("CPE-MANAGER", "cpeCfgMgrClientReceivedGenericCfgFilename"), ("CPE-MANAGER", "cpeCfgMgrClientReceivedSpecificCfgFilename"), ("CPE-MANAGER", "cpeCfgMgrClientDwnldSrvrBasePath"), ("CPE-MANAGER", "cpeCfgMgrClientDwnldSpecificPath"), ("CPE-MANAGER", "cpeCfgMgrClientDwnldSrvrIP"), ("CPE-MANAGER", "cpeCfgMgrClientDwnldSrvrUsername"), ("CPE-MANAGER", "cpeCfgMgrClientDwnldSrvrSecureMode"))
if mibBuilder.loadTexts: cpeCfgMgrClientConfigDownloadFailed.setStatus('current')
cpeCfgMgrClientConfigUpdateFailed = NotificationType((1, 3, 6, 1, 4, 1, 5504, 3, 1, 21, 1, 3, 0, 6)).setObjects(("CPE-MANAGER", "cpeCfgMgrClientSerialNumber"), ("CPE-MANAGER", "cpeCfgMgrClientRegistrationID"), ("CPE-MANAGER", "cpeCfgMgrClientState"), ("CPE-MANAGER", "cpeCfgMgrClientErrorDescription"), ("CPE-MANAGER", "cpeCfgMgrClientRequiredUpdates"), ("CPE-MANAGER", "cpeCfgMgrClientReceivedGenericCfgFilename"), ("CPE-MANAGER", "cpeCfgMgrClientReceivedSpecificCfgFilename"), ("CPE-MANAGER", "cpeCfgMgrClientDwnldSrvrBasePath"), ("CPE-MANAGER", "cpeCfgMgrClientDwnldSpecificPath"), ("CPE-MANAGER", "cpeCfgMgrClientDwnldSrvrIP"), ("CPE-MANAGER", "cpeCfgMgrClientDwnldSrvrUsername"), ("CPE-MANAGER", "cpeCfgMgrClientDwnldSrvrSecureMode"))
if mibBuilder.loadTexts: cpeCfgMgrClientConfigUpdateFailed.setStatus('current')
cpeCfgMgrClientConfigBackupFailed = NotificationType((1, 3, 6, 1, 4, 1, 5504, 3, 1, 21, 1, 3, 0, 7)).setObjects(("CPE-MANAGER", "cpeCfgMgrClientSerialNumber"), ("CPE-MANAGER", "cpeCfgMgrClientRegistrationID"), ("CPE-MANAGER", "cpeCfgMgrClientState"), ("CPE-MANAGER", "cpeCfgMgrClientErrorDescription"), ("CPE-MANAGER", "cpeCfgMgrClientRequiredUpdates"), ("CPE-MANAGER", "cpeCfgMgrClientReceivedSpecificCfgFilename"), ("CPE-MANAGER", "cpeCfgMgrClientDwnldSrvrBasePath"), ("CPE-MANAGER", "cpeCfgMgrClientDwnldSpecificPath"), ("CPE-MANAGER", "cpeCfgMgrClientDwnldSrvrIP"), ("CPE-MANAGER", "cpeCfgMgrClientDwnldSrvrUsername"), ("CPE-MANAGER", "cpeCfgMgrClientDwnldSrvrSecureMode"))
if mibBuilder.loadTexts: cpeCfgMgrClientConfigBackupFailed.setStatus('current')
cpeCfgMgrClientLevelReady = NotificationType((1, 3, 6, 1, 4, 1, 5504, 3, 1, 21, 1, 3, 0, 8)).setObjects(("CPE-MANAGER", "cpeCfgMgrClientSerialNumber"), ("CPE-MANAGER", "cpeCfgMgrClientRegistrationID"), ("CPE-MANAGER", "cpeCfgMgrClientState"), ("CPE-MANAGER", "cpeCfgMgrClientMacAddress"), ("CPE-MANAGER", "cpeCfgMgrClientFSAN"), ("CPE-MANAGER", "cpeCfgMgrPublicIPAddress"), ("CPE-MANAGER", "cpeCfgMgrBaseProtocolPort"))
if mibBuilder.loadTexts: cpeCfgMgrClientLevelReady.setStatus('current')
cpeCfgMgrClientConfigBackupDone = NotificationType((1, 3, 6, 1, 4, 1, 5504, 3, 1, 21, 1, 3, 0, 9)).setObjects(("CPE-MANAGER", "cpeCfgMgrClientSerialNumber"), ("CPE-MANAGER", "cpeCfgMgrClientRegistrationID"), ("CPE-MANAGER", "cpeCfgMgrClientState"), ("CPE-MANAGER", "cpeCfgMgrClientRequiredUpdates"), ("CPE-MANAGER", "cpeCfgMgrClientReceivedSpecificCfgFilename"), ("CPE-MANAGER", "cpeCfgMgrClientDwnldSrvrBasePath"), ("CPE-MANAGER", "cpeCfgMgrClientDwnldSpecificPath"), ("CPE-MANAGER", "cpeCfgMgrClientDwnldSrvrIP"), ("CPE-MANAGER", "cpeCfgMgrClientDwnldSrvrUsername"), ("CPE-MANAGER", "cpeCfgMgrClientDwnldSrvrSecureMode"))
if mibBuilder.loadTexts: cpeCfgMgrClientConfigBackupDone.setStatus('current')
cpeCfgMgrClientObjects = ObjectIdentity((1, 3, 6, 1, 4, 1, 5504, 3, 1, 21, 1, 3, 1))
if mibBuilder.loadTexts: cpeCfgMgrClientObjects.setStatus('current')
cpeCfgMgrClientIdObjects = ObjectIdentity((1, 3, 6, 1, 4, 1, 5504, 3, 1, 21, 1, 3, 1, 1))
if mibBuilder.loadTexts: cpeCfgMgrClientIdObjects.setStatus('current')
cpeCfgMgrClientSerialNumber = MibScalar((1, 3, 6, 1, 4, 1, 5504, 3, 1, 21, 1, 3, 1, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cpeCfgMgrClientSerialNumber.setStatus('current')
cpeCfgMgrClientRegistrationID = MibScalar((1, 3, 6, 1, 4, 1, 5504, 3, 1, 21, 1, 3, 1, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 10))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cpeCfgMgrClientRegistrationID.setStatus('current')
cpeCfgMgrClientFSAN = MibScalar((1, 3, 6, 1, 4, 1, 5504, 3, 1, 21, 1, 3, 1, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cpeCfgMgrClientFSAN.setStatus('current')
cpeCfgMgrClientMacAddress = MibScalar((1, 3, 6, 1, 4, 1, 5504, 3, 1, 21, 1, 3, 1, 1, 4), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cpeCfgMgrClientMacAddress.setStatus('current')
cpeCfgMgrClientSysName = MibScalar((1, 3, 6, 1, 4, 1, 5504, 3, 1, 21, 1, 3, 1, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cpeCfgMgrClientSysName.setStatus('current')
cpeCfgMgrClientStatusObjects = ObjectIdentity((1, 3, 6, 1, 4, 1, 5504, 3, 1, 21, 1, 3, 1, 2))
if mibBuilder.loadTexts: cpeCfgMgrClientStatusObjects.setStatus('current')
cpeCfgMgrClientState = MibScalar((1, 3, 6, 1, 4, 1, 5504, 3, 1, 21, 1, 3, 1, 2, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 99, 100))).clone(namedValues=NamedValues(("error", 0), ("starting", 1), ("dhcpRequesting", 2), ("dhcpRenewing", 3), ("dhcpShortLeaseWaiting", 4), ("downloadingSoftware", 5), ("downloadingWebUI", 6), ("downloadingGenericConfig", 7), ("downloadingSpecificConfig", 8), ("installingSoftware", 9), ("installingWebUI", 10), ("installingGenericConfig", 11), ("installingSpecificConfig", 12), ("backingUpConfig", 13), ("genericOperational", 99), ("operational", 100))).clone('starting')).setMaxAccess("readonly")
if mibBuilder.loadTexts: cpeCfgMgrClientState.setStatus('current')
cpeCfgMgrClientErrorDescription = MibScalar((1, 3, 6, 1, 4, 1, 5504, 3, 1, 21, 1, 3, 1, 2, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cpeCfgMgrClientErrorDescription.setStatus('current')
cpeCfgMgrClientCurrentSwVersion = MibScalar((1, 3, 6, 1, 4, 1, 5504, 3, 1, 21, 1, 3, 1, 2, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cpeCfgMgrClientCurrentSwVersion.setStatus('current')
cpeCfgMgrClientCurrentWebUIVersion = MibScalar((1, 3, 6, 1, 4, 1, 5504, 3, 1, 21, 1, 3, 1, 2, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cpeCfgMgrClientCurrentWebUIVersion.setStatus('current')
cpeCfgMgrClientLastInstalledConfigFile = MibScalar((1, 3, 6, 1, 4, 1, 5504, 3, 1, 21, 1, 3, 1, 2, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cpeCfgMgrClientLastInstalledConfigFile.setStatus('current')
cpeCfgMgrClientLastDwnldSrvrBasePath = MibScalar((1, 3, 6, 1, 4, 1, 5504, 3, 1, 21, 1, 3, 1, 2, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cpeCfgMgrClientLastDwnldSrvrBasePath.setStatus('current')
cpeCfgMgrClientLastDwnldSrvrSpecificPath = MibScalar((1, 3, 6, 1, 4, 1, 5504, 3, 1, 21, 1, 3, 1, 2, 7), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 40))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cpeCfgMgrClientLastDwnldSrvrSpecificPath.setStatus('current')
cpeCfgMgrClientUpdateObjects = ObjectIdentity((1, 3, 6, 1, 4, 1, 5504, 3, 1, 21, 1, 3, 1, 3))
if mibBuilder.loadTexts: cpeCfgMgrClientUpdateObjects.setStatus('current')
cpeCfgMgrClientRequiredUpdates = MibScalar((1, 3, 6, 1, 4, 1, 5504, 3, 1, 21, 1, 3, 1, 3, 1), Bits().clone(namedValues=NamedValues(("software", 0), ("webUI", 1), ("config", 2), ("backup", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cpeCfgMgrClientRequiredUpdates.setStatus('current')
cpeCfgMgrClientReceivedSwFilename = MibScalar((1, 3, 6, 1, 4, 1, 5504, 3, 1, 21, 1, 3, 1, 3, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cpeCfgMgrClientReceivedSwFilename.setStatus('current')
cpeCfgMgrClientReceivedWebUIFilename = MibScalar((1, 3, 6, 1, 4, 1, 5504, 3, 1, 21, 1, 3, 1, 3, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cpeCfgMgrClientReceivedWebUIFilename.setStatus('current')
cpeCfgMgrClientReceivedGenericCfgFilename = MibScalar((1, 3, 6, 1, 4, 1, 5504, 3, 1, 21, 1, 3, 1, 3, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cpeCfgMgrClientReceivedGenericCfgFilename.setStatus('current')
cpeCfgMgrClientReceivedSpecificCfgFilename = MibScalar((1, 3, 6, 1, 4, 1, 5504, 3, 1, 21, 1, 3, 1, 3, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cpeCfgMgrClientReceivedSpecificCfgFilename.setStatus('current')
cpeCfgMgrClientForceUpdate = MibScalar((1, 3, 6, 1, 4, 1, 5504, 3, 1, 21, 1, 3, 1, 3, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("none", 0), ("renewDhcp", 1), ("updateConfig", 2))).clone('none')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cpeCfgMgrClientForceUpdate.setStatus('current')
cpeCfgMgrClientDownloadServerObjects = ObjectIdentity((1, 3, 6, 1, 4, 1, 5504, 3, 1, 21, 1, 3, 1, 4))
if mibBuilder.loadTexts: cpeCfgMgrClientDownloadServerObjects.setStatus('current')
cpeCfgMgrClientDwnldSrvrIP = MibScalar((1, 3, 6, 1, 4, 1, 5504, 3, 1, 21, 1, 3, 1, 4, 1), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cpeCfgMgrClientDwnldSrvrIP.setStatus('current')
cpeCfgMgrClientDwnldSrvrUsername = MibScalar((1, 3, 6, 1, 4, 1, 5504, 3, 1, 21, 1, 3, 1, 4, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cpeCfgMgrClientDwnldSrvrUsername.setStatus('current')
cpeCfgMgrClientDwnldSrvrPassword = MibScalar((1, 3, 6, 1, 4, 1, 5504, 3, 1, 21, 1, 3, 1, 4, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cpeCfgMgrClientDwnldSrvrPassword.setStatus('current')
cpeCfgMgrClientDwnldSrvrSecureMode = MibScalar((1, 3, 6, 1, 4, 1, 5504, 3, 1, 21, 1, 3, 1, 4, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2), ("noPreference", 3))).clone('noPreference')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cpeCfgMgrClientDwnldSrvrSecureMode.setStatus('current')
cpeCfgMgrClientDwnldSrvrBasePath = MibScalar((1, 3, 6, 1, 4, 1, 5504, 3, 1, 21, 1, 3, 1, 4, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cpeCfgMgrClientDwnldSrvrBasePath.setStatus('current')
cpeCfgMgrClientDwnldSpecificPath = MibScalar((1, 3, 6, 1, 4, 1, 5504, 3, 1, 21, 1, 3, 1, 4, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 40))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cpeCfgMgrClientDwnldSpecificPath.setStatus('current')
cpeCfgMgrClientCoObjects = ObjectIdentity((1, 3, 6, 1, 4, 1, 5504, 3, 1, 21, 1, 3, 1, 5))
if mibBuilder.loadTexts: cpeCfgMgrClientCoObjects.setStatus('current')
cpeCfgMgrPublicIPAddress = MibScalar((1, 3, 6, 1, 4, 1, 5504, 3, 1, 21, 1, 3, 1, 5, 1), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cpeCfgMgrPublicIPAddress.setStatus('current')
cpeCfgMgrBaseProtocolPort = MibScalar((1, 3, 6, 1, 4, 1, 5504, 3, 1, 21, 1, 3, 1, 5, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cpeCfgMgrBaseProtocolPort.setStatus('current')
cpeCfgMgrSlot = MibScalar((1, 3, 6, 1, 4, 1, 5504, 3, 1, 21, 1, 3, 1, 5, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cpeCfgMgrSlot.setStatus('current')
cpeCfgMgrPort = MibScalar((1, 3, 6, 1, 4, 1, 5504, 3, 1, 21, 1, 3, 1, 5, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cpeCfgMgrPort.setStatus('current')
cpeCfgMgrSubport = MibScalar((1, 3, 6, 1, 4, 1, 5504, 3, 1, 21, 1, 3, 1, 5, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cpeCfgMgrSubport.setStatus('current')
cpeCfgMgrInterfaceName = MibScalar((1, 3, 6, 1, 4, 1, 5504, 3, 1, 21, 1, 3, 1, 5, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cpeCfgMgrInterfaceName.setStatus('current')
cpeCfgMgrClientConformance = ObjectIdentity((1, 3, 6, 1, 4, 1, 5504, 3, 1, 21, 1, 3, 2))
if mibBuilder.loadTexts: cpeCfgMgrClientConformance.setStatus('current')
cpeCfgMgrClientGroups = ObjectIdentity((1, 3, 6, 1, 4, 1, 5504, 3, 1, 21, 1, 3, 2, 1))
if mibBuilder.loadTexts: cpeCfgMgrClientGroups.setStatus('current')
cpeCfgMgrClientObjectGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 5504, 3, 1, 21, 1, 3, 2, 1, 1)).setObjects(("CPE-MANAGER", "cpeCfgMgrClientSerialNumber"), ("CPE-MANAGER", "cpeCfgMgrClientRegistrationID"), ("CPE-MANAGER", "cpeCfgMgrClientFSAN"), ("CPE-MANAGER", "cpeCfgMgrClientMacAddress"), ("CPE-MANAGER", "cpeCfgMgrClientSysName"), ("CPE-MANAGER", "cpeCfgMgrClientErrorDescription"), ("CPE-MANAGER", "cpeCfgMgrClientRequiredUpdates"), ("CPE-MANAGER", "cpeCfgMgrClientReceivedSwFilename"), ("CPE-MANAGER", "cpeCfgMgrClientReceivedWebUIFilename"), ("CPE-MANAGER", "cpeCfgMgrClientReceivedGenericCfgFilename"), ("CPE-MANAGER", "cpeCfgMgrClientReceivedSpecificCfgFilename"), ("CPE-MANAGER", "cpeCfgMgrClientForceUpdate"), ("CPE-MANAGER", "cpeCfgMgrClientDwnldSrvrIP"), ("CPE-MANAGER", "cpeCfgMgrClientDwnldSrvrUsername"), ("CPE-MANAGER", "cpeCfgMgrClientDwnldSrvrPassword"), ("CPE-MANAGER", "cpeCfgMgrClientDwnldSrvrSecureMode"), ("CPE-MANAGER", "cpeCfgMgrClientDwnldSrvrBasePath"), ("CPE-MANAGER", "cpeCfgMgrClientDwnldSpecificPath"), ("CPE-MANAGER", "cpeCfgMgrPublicIPAddress"), ("CPE-MANAGER", "cpeCfgMgrBaseProtocolPort"), ("CPE-MANAGER", "cpeCfgMgrSlot"), ("CPE-MANAGER", "cpeCfgMgrPort"), ("CPE-MANAGER", "cpeCfgMgrSubport"), ("CPE-MANAGER", "cpeCfgMgrClientCurrentSwVersion"), ("CPE-MANAGER", "cpeCfgMgrClientCurrentWebUIVersion"), ("CPE-MANAGER", "cpeCfgMgrClientLastInstalledConfigFile"), ("CPE-MANAGER", "cpeCfgMgrClientLastDwnldSrvrBasePath"), ("CPE-MANAGER", "cpeCfgMgrClientLastDwnldSrvrSpecificPath"), ("CPE-MANAGER", "cpeCfgMgrInterfaceName"), ("CPE-MANAGER", "cpeCfgMgrClientState"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cpeCfgMgrClientObjectGroup = cpeCfgMgrClientObjectGroup.setStatus('current')
cpeCfgMgrClientNotificationsGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 5504, 3, 1, 21, 1, 3, 2, 1, 2)).setObjects(("CPE-MANAGER", "cpeCfgMgrClientSoftwareDownloadFailed"), ("CPE-MANAGER", "cpeCfgMgrClientSoftwareInstallFailed"), ("CPE-MANAGER", "cpeCfgMgrClientWebUIDownloadFailed"), ("CPE-MANAGER", "cpeCfgMgrClientWebUIInstallFailed"), ("CPE-MANAGER", "cpeCfgMgrClientConfigDownloadFailed"), ("CPE-MANAGER", "cpeCfgMgrClientConfigUpdateFailed"), ("CPE-MANAGER", "cpeCfgMgrClientConfigBackupFailed"), ("CPE-MANAGER", "cpeCfgMgrClientLevelReady"), ("CPE-MANAGER", "cpeCfgMgrClientConfigBackupDone"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cpeCfgMgrClientNotificationsGroup = cpeCfgMgrClientNotificationsGroup.setStatus('current')
cpeCfgMgrClientCompliances = ObjectIdentity((1, 3, 6, 1, 4, 1, 5504, 3, 1, 21, 1, 3, 2, 2))
if mibBuilder.loadTexts: cpeCfgMgrClientCompliances.setStatus('current')
cpeCfgMgrClientCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 5504, 3, 1, 21, 1, 3, 2, 2, 1)).setObjects(("CPE-MANAGER", "cpeCfgMgrClientObjectGroup"), ("CPE-MANAGER", "cpeCfgMgrClientNotificationsGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cpeCfgMgrClientCompliance = cpeCfgMgrClientCompliance.setStatus('current')
mibBuilder.exportSymbols("CPE-MANAGER", cpeMgrLocalSlanId=cpeMgrLocalSlanId, cpeConfigMgrDownloadServerGroup=cpeConfigMgrDownloadServerGroup, cpeMgrGlobalGroup=cpeMgrGlobalGroup, cpeConfigMgrMemberStatusTable=cpeConfigMgrMemberStatusTable, cpeCfgMgrClientCompliances=cpeCfgMgrClientCompliances, managedCpeType=managedCpeType, cpeConfigMgrMemberStatus=cpeConfigMgrMemberStatus, cpeConfigMgrNotificationsObjectGroup=cpeConfigMgrNotificationsObjectGroup, cpeConfigMgrCompliances=cpeConfigMgrCompliances, cpeCfgMgrDwnldSrvrIP=cpeCfgMgrDwnldSrvrIP, cpeConfigMgrMemberRowStatus=cpeConfigMgrMemberRowStatus, cpeConfigMgrMismatchType=cpeConfigMgrMismatchType, cpeCfgMgrClientSoftwareInstallFailed=cpeCfgMgrClientSoftwareInstallFailed, cpeConfigMgrClientOperational=cpeConfigMgrClientOperational, cpeCfgMgrClientDwnldSrvrBasePath=cpeCfgMgrClientDwnldSrvrBasePath, cpeCfgMgrClientGroups=cpeCfgMgrClientGroups, cpeMgrGlobalConformance=cpeMgrGlobalConformance, cpeConfigMgrName=cpeConfigMgrName, cpeMgrModule=cpeMgrModule, requiredCpeWebUIFilename=requiredCpeWebUIFilename, cpeConfigMgrTrapsEnabled=cpeConfigMgrTrapsEnabled, cpeConfigMgrObjects=cpeConfigMgrObjects, cpeCfgMgrClientSoftwareDownloadFailed=cpeCfgMgrClientSoftwareDownloadFailed, reportedCpeType=reportedCpeType, cpeCfgMgrClientNotificationsGroup=cpeCfgMgrClientNotificationsGroup, cpeCfgMgrClientFSAN=cpeCfgMgrClientFSAN, cpeCfgMgrClientReceivedWebUIFilename=cpeCfgMgrClientReceivedWebUIFilename, cpeCfgMgrClientDwnldSpecificPath=cpeCfgMgrClientDwnldSpecificPath, cpeCfgMgrClientMacAddress=cpeCfgMgrClientMacAddress, cpeConfigMgrUsed=cpeConfigMgrUsed, cpeCfgMgrClientRegistrationID=cpeCfgMgrClientRegistrationID, cpeMgrGlobalCompliances=cpeMgrGlobalCompliances, cpeConfigMgrMismatchWebUIVersion=cpeConfigMgrMismatchWebUIVersion, cpeCfgMgrDwnldSrvrUsername=cpeCfgMgrDwnldSrvrUsername, cpeCfgMgrClientErrorDescription=cpeCfgMgrClientErrorDescription, cpeCfgMgrClientObjects=cpeCfgMgrClientObjects, cpeCfgMgrClientStatusObjects=cpeCfgMgrClientStatusObjects, reportedCpeSerialNumber=reportedCpeSerialNumber, cpeConfigMgr=cpeConfigMgr, cpeMgrLocalVlanId=cpeMgrLocalVlanId, cpeConfigMgrObjectGroup=cpeConfigMgrObjectGroup, cpeMgrGlobalGroups=cpeMgrGlobalGroups, requiredCpeWebUIVersion=requiredCpeWebUIVersion, cpeLeaseTimeOperational=cpeLeaseTimeOperational, cpeCfgMgrConcurrentUpdateLimit=cpeCfgMgrConcurrentUpdateLimit, cpeCfgMgrClientRequiredUpdates=cpeCfgMgrClientRequiredUpdates, cpeCfgMgrClientDownloadServerObjects=cpeCfgMgrClientDownloadServerObjects, cpeConfigMgrMemberTrapsEnabled=cpeConfigMgrMemberTrapsEnabled, reportedCpeState=reportedCpeState, cpeConfigMgrConformance=cpeConfigMgrConformance, cpeCfgMgrClientUpdateObjects=cpeCfgMgrClientUpdateObjects, cpeCfgMgrClientCompliance=cpeCfgMgrClientCompliance, cpeCfgMgrClientCurrentSwVersion=cpeCfgMgrClientCurrentSwVersion, cpeConfigMgrMemberStatusEntry=cpeConfigMgrMemberStatusEntry, cpeConfigMgrMismatchConfigFile=cpeConfigMgrMismatchConfigFile, cpeCfgMgrPort=cpeCfgMgrPort, reportedCpeFSAN=reportedCpeFSAN, cpeCfgMgrClientLevelReady=cpeCfgMgrClientLevelReady, reportedCpeRegistrationID=reportedCpeRegistrationID, cpeCfgMgrClientDwnldSrvrUsername=cpeCfgMgrClientDwnldSrvrUsername, cpeConfigMgrClientDysfunctional=cpeConfigMgrClientDysfunctional, reportedCpeConfigFilename=reportedCpeConfigFilename, cpeConfigMgrGroups=cpeConfigMgrGroups, cpeCfgMgrDwnldSrvrIndex=cpeCfgMgrDwnldSrvrIndex, cpeCfgMgrClientIdObjects=cpeCfgMgrClientIdObjects, cpeCfgMgrClientCoObjects=cpeCfgMgrClientCoObjects, cpeCfgMgrClientObjectGroup=cpeCfgMgrClientObjectGroup, cpeLeaseTimeUpdate=cpeLeaseTimeUpdate, cpeCfgMgrClientDwnldSrvrPassword=cpeCfgMgrClientDwnldSrvrPassword, reportedDwnldSrvrSpecificPath=reportedDwnldSrvrSpecificPath, cpeConfigMgrUpdateError=cpeConfigMgrUpdateError, cpeConfigMgrDownloadSecureMode=cpeConfigMgrDownloadSecureMode, cpeCfgMgrDwnldSrvrPassword=cpeCfgMgrDwnldSrvrPassword, cpeConfigMgrDownloadBasePath=cpeConfigMgrDownloadBasePath, cpeConfigMgrNotifications=cpeConfigMgrNotifications, cpeCfgMgrBaseProtocolPort=cpeCfgMgrBaseProtocolPort, cpeCfgMgrClientWebUIInstallFailed=cpeCfgMgrClientWebUIInstallFailed, cpeConfigMgrGroup=cpeConfigMgrGroup, cpeCfgMgrClientNotifications=cpeCfgMgrClientNotifications, cpeCfgMgrClientLastInstalledConfigFile=cpeCfgMgrClientLastInstalledConfigFile, cpeCfgMgrClientReceivedSwFilename=cpeCfgMgrClientReceivedSwFilename, cpeCfgMgrClientSerialNumber=cpeCfgMgrClientSerialNumber, cpeSpecificDownloadPath=cpeSpecificDownloadPath, cpeConfigMgrMemberObjectGroup=cpeConfigMgrMemberObjectGroup, cpeConfigMgrMismatchSoftwareVersion=cpeConfigMgrMismatchSoftwareVersion, cpeConfigScriptIndex=cpeConfigScriptIndex, cpeCfgMgrClientCurrentWebUIVersion=cpeCfgMgrClientCurrentWebUIVersion, cpeCfgMgrInterfaceName=cpeCfgMgrInterfaceName, cpeConfigMgrTable=cpeConfigMgrTable, cpeMgrGlobal=cpeMgrGlobal, cpeCfgMgrClientLastDwnldSrvrSpecificPath=cpeCfgMgrClientLastDwnldSrvrSpecificPath, cpeCfgMgrClientReceivedSpecificCfgFilename=cpeCfgMgrClientReceivedSpecificCfgFilename, cpeCfgMgrClientConfigBackupFailed=cpeCfgMgrClientConfigBackupFailed, cpeConfigMgrEntry=cpeConfigMgrEntry, cpeCfgMgrClientLastDwnldSrvrBasePath=cpeCfgMgrClientLastDwnldSrvrBasePath, cpeCfgMgrClientForceUpdate=cpeCfgMgrClientForceUpdate, cpeConfigMgrRowStatus=cpeConfigMgrRowStatus, cpeCfgMgrSubport=cpeCfgMgrSubport, cpeConfigVarsIndex=cpeConfigVarsIndex, cpeConfigMgrClient=cpeConfigMgrClient, cpeCfgMgrClientSysName=cpeCfgMgrClientSysName, cpeMgrGlobalCompliance=cpeMgrGlobalCompliance, cpeConfigMgrMemberTable=cpeConfigMgrMemberTable, cpeConfigMgrDownloadServerTable=cpeConfigMgrDownloadServerTable, cpeCfgMgrPublicIPAddress=cpeCfgMgrPublicIPAddress, requiredCpeSoftwareVersion=requiredCpeSoftwareVersion, cpeCfgMgrClientDwnldSrvrSecureMode=cpeCfgMgrClientDwnldSrvrSecureMode, PYSNMP_MODULE_ID=cpeMgrModule, cpeCfgMgrClientConformance=cpeCfgMgrClientConformance, cpeCfgMgrClientConfigBackupDone=cpeCfgMgrClientConfigBackupDone, reportedCpeSoftwareVersion=reportedCpeSoftwareVersion, cpeConfigMgrGroupMembership=cpeConfigMgrGroupMembership, requiredCpeGenericConfigFile=requiredCpeGenericConfigFile, cpeCfgMgrClientState=cpeCfgMgrClientState, cpeCfgMgrClientDwnldSrvrIP=cpeCfgMgrClientDwnldSrvrIP, cpeCfgMgrClientWebUIDownloadFailed=cpeCfgMgrClientWebUIDownloadFailed, reportedDwnldSrvrBasePath=reportedDwnldSrvrBasePath, cpeCfgMgrClientConfigDownloadFailed=cpeCfgMgrClientConfigDownloadFailed, cpeConfigMgrCompliance=cpeConfigMgrCompliance, cpeCfgMgrDwnldSrvrRowStatus=cpeCfgMgrDwnldSrvrRowStatus, cpeConfigMgrMemberEntry=cpeConfigMgrMemberEntry, cpeConfigMgrDownloadServerEntry=cpeConfigMgrDownloadServerEntry, cpeCfgMgrSlot=cpeCfgMgrSlot, cpeMgrGlobalObjects=cpeMgrGlobalObjects, reportedCpeWebUIVersion=reportedCpeWebUIVersion, cpeCfgMgrClientConfigUpdateFailed=cpeCfgMgrClientConfigUpdateFailed, cpeConfigMgrDwnldSrvrToUsed=cpeConfigMgrDwnldSrvrToUsed, cpeConfigMgrIndex=cpeConfigMgrIndex, reportedCpeMacAddress=reportedCpeMacAddress, cpeSpecificConfigFile=cpeSpecificConfigFile, requiredCpeSoftwareFilename=requiredCpeSoftwareFilename, cpeCfgMgrClientReceivedGenericCfgFilename=cpeCfgMgrClientReceivedGenericCfgFilename, cpeCfgMgrDwnldSrvrDefault=cpeCfgMgrDwnldSrvrDefault)
