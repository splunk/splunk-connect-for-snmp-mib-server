#
# PySNMP MIB module CISCO-FCSP-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CISCO-FCSP-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:41:15 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ValueSizeConstraint, SingleValueConstraint, ConstraintsIntersection, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ValueSizeConstraint", "SingleValueConstraint", "ConstraintsIntersection", "ConstraintsUnion")
ciscoMgmt, = mibBuilder.importSymbols("CISCO-SMI", "ciscoMgmt")
FcNameId, = mibBuilder.importSymbols("CISCO-ST-TC", "FcNameId")
ifDescr, ifIndex = mibBuilder.importSymbols("IF-MIB", "ifDescr", "ifIndex")
SnmpAdminString, = mibBuilder.importSymbols("SNMP-FRAMEWORK-MIB", "SnmpAdminString")
ModuleCompliance, ObjectGroup, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "ObjectGroup", "NotificationGroup")
Gauge32, Integer32, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter32, Unsigned32, ModuleIdentity, MibIdentifier, Counter64, iso, ObjectIdentity, TimeTicks, IpAddress, Bits, NotificationType = mibBuilder.importSymbols("SNMPv2-SMI", "Gauge32", "Integer32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter32", "Unsigned32", "ModuleIdentity", "MibIdentifier", "Counter64", "iso", "ObjectIdentity", "TimeTicks", "IpAddress", "Bits", "NotificationType")
RowStatus, DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "RowStatus", "DisplayString", "TextualConvention")
ciscoFcspMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 9, 9, 391))
ciscoFcspMIB.setRevisions(('2004-07-02 00:00',))
if mibBuilder.loadTexts: ciscoFcspMIB.setLastUpdated('200407020000Z')
if mibBuilder.loadTexts: ciscoFcspMIB.setOrganization('Cisco Systems Inc. ')
ciscoFcspMIBNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 391, 0))
ciscoFcspMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 391, 1))
ciscoFcspMIBConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 391, 2))
cfcspConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 391, 1, 1))
cfcspInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 391, 1, 2))
cfcspStatistics = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 391, 1, 3))
cfcspNotificationObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 391, 1, 4))
cfcspIfTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 391, 1, 1, 1), )
if mibBuilder.loadTexts: cfcspIfTable.setStatus('current')
cfcspIfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 391, 1, 1, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: cfcspIfEntry.setStatus('current')
cfcspMode = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 391, 1, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("off", 1), ("autoPassive", 2), ("autoActive", 3), ("on", 4))).clone('autoPassive')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cfcspMode.setStatus('current')
cfcspReauthInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 391, 1, 1, 1, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 100000))).setUnits('minutes').setMaxAccess("readwrite")
if mibBuilder.loadTexts: cfcspReauthInterval.setStatus('current')
cfcspReauthenticate = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 391, 1, 1, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("noOp", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cfcspReauthenticate.setStatus('current')
cfcspAuthProtocols = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 391, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("dhChap", 0), ("fcCap", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cfcspAuthProtocols.setStatus('current')
cfcspTimeout = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 391, 1, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(20, 1000)).clone(20)).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: cfcspTimeout.setStatus('current')
cfcspDhChapObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 391, 1, 1, 4))
cfcspDhChapHashList = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 391, 1, 1, 4, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(2, 2)).setFixedLength(2)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cfcspDhChapHashList.setStatus('current')
cfcspDhChapGroupList = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 391, 1, 1, 4, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(5, 5)).setFixedLength(5)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cfcspDhChapGroupList.setStatus('current')
cfcspDhChapGenericPasswd = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 391, 1, 1, 4, 3), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 64))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cfcspDhChapGenericPasswd.setStatus('current')
cfcspLocalPasswdTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 391, 1, 1, 5), )
if mibBuilder.loadTexts: cfcspLocalPasswdTable.setStatus('current')
cfcspLocalPasswdEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 391, 1, 1, 5, 1), ).setIndexNames((0, "CISCO-FCSP-MIB", "cfcspSwitchWwn"))
if mibBuilder.loadTexts: cfcspLocalPasswdEntry.setStatus('current')
cfcspSwitchWwn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 391, 1, 1, 5, 1, 1), FcNameId())
if mibBuilder.loadTexts: cfcspSwitchWwn.setStatus('current')
cfcspLocalPasswd = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 391, 1, 1, 5, 1, 2), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 64))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cfcspLocalPasswd.setStatus('current')
cfcspLocalPassRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 391, 1, 1, 5, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cfcspLocalPassRowStatus.setStatus('current')
cfcspRemotePasswdTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 391, 1, 1, 6), )
if mibBuilder.loadTexts: cfcspRemotePasswdTable.setStatus('current')
cfcspRemotePasswdEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 391, 1, 1, 6, 1), ).setIndexNames((0, "CISCO-FCSP-MIB", "cfcspRemoteSwitchWwn"))
if mibBuilder.loadTexts: cfcspRemotePasswdEntry.setStatus('current')
cfcspRemoteSwitchWwn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 391, 1, 1, 6, 1, 1), FcNameId())
if mibBuilder.loadTexts: cfcspRemoteSwitchWwn.setStatus('current')
cfcspRemotePasswd = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 391, 1, 1, 6, 1, 2), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 64))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cfcspRemotePasswd.setStatus('current')
cfcspRemotePassRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 391, 1, 1, 6, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cfcspRemotePassRowStatus.setStatus('current')
cfcspIfStatsTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 391, 1, 3, 1), )
if mibBuilder.loadTexts: cfcspIfStatsTable.setStatus('current')
cfcspIfStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 391, 1, 3, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: cfcspIfStatsEntry.setStatus('current')
cfcspIfAuthSucceeded = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 391, 1, 3, 1, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfcspIfAuthSucceeded.setStatus('current')
cfcspIfAuthFailed = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 391, 1, 3, 1, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfcspIfAuthFailed.setStatus('current')
cfcspIfAuthByPassed = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 391, 1, 3, 1, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfcspIfAuthByPassed.setStatus('current')
cfcspAuthFailNotification = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 391, 0, 1)).setObjects(("IF-MIB", "ifDescr"))
if mibBuilder.loadTexts: cfcspAuthFailNotification.setStatus('current')
ciscoFcspMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 391, 2, 1))
ciscoFcspMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 391, 2, 2))
ciscoFcspMIBCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 391, 2, 1, 1)).setObjects(("CISCO-FCSP-MIB", "cfcspConfigGroup"), ("CISCO-FCSP-MIB", "cfcspLocalPasswdGroup"), ("CISCO-FCSP-MIB", "cfcspIfStatsGroup"), ("CISCO-FCSP-MIB", "cfcspNotificationGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoFcspMIBCompliance = ciscoFcspMIBCompliance.setStatus('current')
cfcspConfigGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 391, 2, 2, 1)).setObjects(("CISCO-FCSP-MIB", "cfcspMode"), ("CISCO-FCSP-MIB", "cfcspReauthInterval"), ("CISCO-FCSP-MIB", "cfcspReauthenticate"), ("CISCO-FCSP-MIB", "cfcspAuthProtocols"), ("CISCO-FCSP-MIB", "cfcspTimeout"), ("CISCO-FCSP-MIB", "cfcspDhChapHashList"), ("CISCO-FCSP-MIB", "cfcspDhChapGroupList"), ("CISCO-FCSP-MIB", "cfcspDhChapGenericPasswd"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cfcspConfigGroup = cfcspConfigGroup.setStatus('current')
cfcspLocalPasswdGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 391, 2, 2, 2)).setObjects(("CISCO-FCSP-MIB", "cfcspLocalPasswd"), ("CISCO-FCSP-MIB", "cfcspLocalPassRowStatus"), ("CISCO-FCSP-MIB", "cfcspRemotePasswd"), ("CISCO-FCSP-MIB", "cfcspRemotePassRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cfcspLocalPasswdGroup = cfcspLocalPasswdGroup.setStatus('current')
cfcspIfStatsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 391, 2, 2, 3)).setObjects(("CISCO-FCSP-MIB", "cfcspIfAuthSucceeded"), ("CISCO-FCSP-MIB", "cfcspIfAuthFailed"), ("CISCO-FCSP-MIB", "cfcspIfAuthByPassed"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cfcspIfStatsGroup = cfcspIfStatsGroup.setStatus('current')
cfcspNotificationGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 9, 9, 391, 2, 2, 4)).setObjects(("CISCO-FCSP-MIB", "cfcspAuthFailNotification"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cfcspNotificationGroup = cfcspNotificationGroup.setStatus('current')
mibBuilder.exportSymbols("CISCO-FCSP-MIB", cfcspDhChapGroupList=cfcspDhChapGroupList, cfcspIfStatsGroup=cfcspIfStatsGroup, cfcspConfig=cfcspConfig, cfcspLocalPasswdTable=cfcspLocalPasswdTable, ciscoFcspMIB=ciscoFcspMIB, cfcspAuthProtocols=cfcspAuthProtocols, cfcspRemotePassRowStatus=cfcspRemotePassRowStatus, ciscoFcspMIBConformance=ciscoFcspMIBConformance, cfcspNotificationGroup=cfcspNotificationGroup, cfcspStatistics=cfcspStatistics, cfcspIfStatsTable=cfcspIfStatsTable, ciscoFcspMIBCompliance=ciscoFcspMIBCompliance, cfcspRemotePasswd=cfcspRemotePasswd, cfcspLocalPasswdGroup=cfcspLocalPasswdGroup, cfcspMode=cfcspMode, ciscoFcspMIBObjects=ciscoFcspMIBObjects, cfcspLocalPasswd=cfcspLocalPasswd, ciscoFcspMIBGroups=ciscoFcspMIBGroups, PYSNMP_MODULE_ID=ciscoFcspMIB, cfcspRemotePasswdEntry=cfcspRemotePasswdEntry, cfcspLocalPasswdEntry=cfcspLocalPasswdEntry, cfcspIfAuthFailed=cfcspIfAuthFailed, cfcspIfAuthByPassed=cfcspIfAuthByPassed, ciscoFcspMIBCompliances=ciscoFcspMIBCompliances, cfcspInfo=cfcspInfo, cfcspReauthenticate=cfcspReauthenticate, cfcspConfigGroup=cfcspConfigGroup, cfcspDhChapGenericPasswd=cfcspDhChapGenericPasswd, cfcspDhChapObjects=cfcspDhChapObjects, cfcspIfTable=cfcspIfTable, cfcspReauthInterval=cfcspReauthInterval, cfcspSwitchWwn=cfcspSwitchWwn, cfcspRemoteSwitchWwn=cfcspRemoteSwitchWwn, cfcspIfAuthSucceeded=cfcspIfAuthSucceeded, cfcspRemotePasswdTable=cfcspRemotePasswdTable, cfcspAuthFailNotification=cfcspAuthFailNotification, ciscoFcspMIBNotifications=ciscoFcspMIBNotifications, cfcspDhChapHashList=cfcspDhChapHashList, cfcspIfStatsEntry=cfcspIfStatsEntry, cfcspIfEntry=cfcspIfEntry, cfcspLocalPassRowStatus=cfcspLocalPassRowStatus, cfcspNotificationObjects=cfcspNotificationObjects, cfcspTimeout=cfcspTimeout)
