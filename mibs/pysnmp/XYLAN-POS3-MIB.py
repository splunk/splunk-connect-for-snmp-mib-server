#
# PySNMP MIB module XYLAN-POS3-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/XYLAN-POS3-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 21:38:50 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, SingleValueConstraint, ConstraintsUnion, ConstraintsIntersection, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "SingleValueConstraint", "ConstraintsUnion", "ConstraintsIntersection", "ValueSizeConstraint")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
TimeTicks, Bits, ObjectIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, iso, Counter64, Gauge32, MibIdentifier, ModuleIdentity, Integer32, IpAddress, NotificationType, Unsigned32, Counter32 = mibBuilder.importSymbols("SNMPv2-SMI", "TimeTicks", "Bits", "ObjectIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "iso", "Counter64", "Gauge32", "MibIdentifier", "ModuleIdentity", "Integer32", "IpAddress", "NotificationType", "Unsigned32", "Counter32")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
xylanPportArch, = mibBuilder.importSymbols("XYLAN-BASE-MIB", "xylanPportArch")
sonetPort = MibIdentifier((1, 3, 6, 1, 4, 1, 800, 2, 11, 4))
sonetPortConfigTable = MibTable((1, 3, 6, 1, 4, 1, 800, 2, 11, 4, 1), )
if mibBuilder.loadTexts: sonetPortConfigTable.setStatus('mandatory')
sonetPortConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 800, 2, 11, 4, 1, 1), ).setIndexNames((0, "XYLAN-POS3-MIB", "sonetPortConfigSlotIndex"), (0, "XYLAN-POS3-MIB", "sonetPortConfigPortIndex"))
if mibBuilder.loadTexts: sonetPortConfigEntry.setStatus('mandatory')
sonetPortConfigSlotIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 11, 4, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 9))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonetPortConfigSlotIndex.setStatus('mandatory')
sonetPortConfigPortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 11, 4, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonetPortConfigPortIndex.setStatus('mandatory')
sonetPortDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 11, 4, 1, 1, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonetPortDescription.setStatus('mandatory')
sonetPortFramingType = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 11, 4, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("sonet", 1), ("sdh", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonetPortFramingType.setStatus('mandatory')
sonetPortLoopbackConfig = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 11, 4, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("sonetNoLoop", 1), ("sonetPayloadLoop", 2), ("sonetLineLoop", 3), ("sonetOtherLoop", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonetPortLoopbackConfig.setStatus('mandatory')
sonetPortTransmitClockSource = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 11, 4, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("loopTiming", 1), ("localTiming", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonetPortTransmitClockSource.setStatus('mandatory')
sonetPortPlScramble = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 11, 4, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonetPortPlScramble.setStatus('mandatory')
sonetPortStatusChangeTrapEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 11, 4, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonetPortStatusChangeTrapEnable.setStatus('mandatory')
sonetPortFcsSize = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 11, 4, 1, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("fcs16", 1), ("fcs32", 2))).clone('fcs16')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonetPortFcsSize.setStatus('mandatory')
mibBuilder.exportSymbols("XYLAN-POS3-MIB", sonetPort=sonetPort, sonetPortConfigSlotIndex=sonetPortConfigSlotIndex, sonetPortTransmitClockSource=sonetPortTransmitClockSource, sonetPortPlScramble=sonetPortPlScramble, sonetPortDescription=sonetPortDescription, sonetPortLoopbackConfig=sonetPortLoopbackConfig, sonetPortStatusChangeTrapEnable=sonetPortStatusChangeTrapEnable, sonetPortConfigTable=sonetPortConfigTable, sonetPortFramingType=sonetPortFramingType, sonetPortFcsSize=sonetPortFcsSize, sonetPortConfigEntry=sonetPortConfigEntry, sonetPortConfigPortIndex=sonetPortConfigPortIndex)
