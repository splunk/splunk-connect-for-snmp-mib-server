#
# PySNMP MIB module HH3C-DOT11-LIC-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/HH3C-DOT11-LIC-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:13:14 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ValueSizeConstraint, ConstraintsIntersection, ConstraintsUnion, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ValueSizeConstraint", "ConstraintsIntersection", "ConstraintsUnion", "SingleValueConstraint")
hh3cDot11, = mibBuilder.importSymbols("HH3C-DOT11-REF-MIB", "hh3cDot11")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
NotificationType, ObjectIdentity, Bits, Gauge32, Unsigned32, Counter32, MibScalar, MibTable, MibTableRow, MibTableColumn, TimeTicks, iso, IpAddress, MibIdentifier, Integer32, ModuleIdentity, Counter64 = mibBuilder.importSymbols("SNMPv2-SMI", "NotificationType", "ObjectIdentity", "Bits", "Gauge32", "Unsigned32", "Counter32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "TimeTicks", "iso", "IpAddress", "MibIdentifier", "Integer32", "ModuleIdentity", "Counter64")
DisplayString, TextualConvention, TruthValue = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention", "TruthValue")
hh3cDot11LIC = ModuleIdentity((1, 3, 6, 1, 4, 1, 25506, 2, 75, 14))
hh3cDot11LIC.setRevisions(('2012-04-25 18:00',))
if mibBuilder.loadTexts: hh3cDot11LIC.setLastUpdated('201204251800Z')
if mibBuilder.loadTexts: hh3cDot11LIC.setOrganization('Hangzhou H3C Technologies Co., Ltd.')
hh3cDot11LICConfigGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 25506, 2, 75, 14, 1))
hh3cDot11LICApNumGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 25506, 2, 75, 14, 2))
hh3cDot11LICFeatureGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 25506, 2, 75, 14, 3))
hh3cDot11LICSerialNumber = MibScalar((1, 3, 6, 1, 4, 1, 25506, 2, 75, 14, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cDot11LICSerialNumber.setStatus('current')
hh3cDot11LicApNumGroupSupport = MibScalar((1, 3, 6, 1, 4, 1, 25506, 2, 75, 14, 1, 2), TruthValue().clone('false')).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cDot11LicApNumGroupSupport.setStatus('current')
hh3cDot11LICApNumAttrTable = MibIdentifier((1, 3, 6, 1, 4, 1, 25506, 2, 75, 14, 2, 1))
hh3cDot11LICDefautAPNumPermit = MibScalar((1, 3, 6, 1, 4, 1, 25506, 2, 75, 14, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cDot11LICDefautAPNumPermit.setStatus('current')
hh3cDot11LICCurrentAPNumPermit = MibScalar((1, 3, 6, 1, 4, 1, 25506, 2, 75, 14, 2, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cDot11LICCurrentAPNumPermit.setStatus('current')
hh3cDot11LICMaxAPNumPermit = MibScalar((1, 3, 6, 1, 4, 1, 25506, 2, 75, 14, 2, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cDot11LICMaxAPNumPermit.setStatus('current')
hh3cDot11LICApNumLicTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 2, 75, 14, 2, 2), )
if mibBuilder.loadTexts: hh3cDot11LICApNumLicTable.setStatus('current')
hh3cDot11LICApNumLicEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 2, 75, 14, 2, 2, 1), ).setIndexNames((0, "HH3C-DOT11-LIC-MIB", "hh3cDot11LICLicenseKeyIndex"))
if mibBuilder.loadTexts: hh3cDot11LICApNumLicEntry.setStatus('current')
hh3cDot11LICLicenseKeyIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 75, 14, 2, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cDot11LICLicenseKeyIndex.setStatus('current')
hh3cDot11LICLicenseKey = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 75, 14, 2, 2, 1, 2), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cDot11LICLicenseKey.setStatus('current')
hh3cDot11LICActivationKey = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 75, 14, 2, 2, 1, 3), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cDot11LICActivationKey.setStatus('current')
hh3cDot11LICApNum = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 75, 14, 2, 2, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cDot11LICApNum.setStatus('current')
hh3cDot11LICFeatureAttrTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 2, 75, 14, 3, 1), )
if mibBuilder.loadTexts: hh3cDot11LICFeatureAttrTable.setStatus('current')
hh3cDot11LICFeatureAttrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 2, 75, 14, 3, 1, 1), ).setIndexNames((0, "HH3C-DOT11-LIC-MIB", "hh3cDot11LICAttrIndex"))
if mibBuilder.loadTexts: hh3cDot11LICFeatureAttrEntry.setStatus('current')
hh3cDot11LICAttrIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 75, 14, 3, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cDot11LICAttrIndex.setStatus('current')
hh3cDot11LICAttrTypeName = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 75, 14, 3, 1, 1, 2), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cDot11LICAttrTypeName.setStatus('current')
hh3cDot11LICAttrDefVal = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 75, 14, 3, 1, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cDot11LICAttrDefVal.setStatus('current')
hh3cDot11LICAttrMaxVal = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 75, 14, 3, 1, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cDot11LICAttrMaxVal.setStatus('current')
hh3cDot11LICFeatureLicTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 2, 75, 14, 3, 2), )
if mibBuilder.loadTexts: hh3cDot11LICFeatureLicTable.setStatus('current')
hh3cDot11LICFeatureLicEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 2, 75, 14, 3, 2, 1), ).setIndexNames((0, "HH3C-DOT11-LIC-MIB", "hh3cDot11LICKeyIndex"))
if mibBuilder.loadTexts: hh3cDot11LICFeatureLicEntry.setStatus('current')
hh3cDot11LICKeyIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 75, 14, 3, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cDot11LICKeyIndex.setStatus('current')
hh3cDot11LICTypeName = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 75, 14, 3, 2, 1, 2), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cDot11LICTypeName.setStatus('current')
hh3cDot11LICKey = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 75, 14, 3, 2, 1, 3), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cDot11LICKey.setStatus('current')
hh3cDot11LICTimeLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 75, 14, 3, 2, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cDot11LICTimeLimit.setStatus('current')
hh3cDot11LICValue = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 75, 14, 3, 2, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cDot11LICValue.setStatus('current')
mibBuilder.exportSymbols("HH3C-DOT11-LIC-MIB", hh3cDot11LICValue=hh3cDot11LICValue, hh3cDot11LICMaxAPNumPermit=hh3cDot11LICMaxAPNumPermit, hh3cDot11LICDefautAPNumPermit=hh3cDot11LICDefautAPNumPermit, hh3cDot11LICApNumLicEntry=hh3cDot11LICApNumLicEntry, hh3cDot11LICAttrTypeName=hh3cDot11LICAttrTypeName, PYSNMP_MODULE_ID=hh3cDot11LIC, hh3cDot11LICApNumGroup=hh3cDot11LICApNumGroup, hh3cDot11LICCurrentAPNumPermit=hh3cDot11LICCurrentAPNumPermit, hh3cDot11LICTypeName=hh3cDot11LICTypeName, hh3cDot11LICActivationKey=hh3cDot11LICActivationKey, hh3cDot11LICFeatureAttrEntry=hh3cDot11LICFeatureAttrEntry, hh3cDot11LICLicenseKey=hh3cDot11LICLicenseKey, hh3cDot11LICFeatureLicTable=hh3cDot11LICFeatureLicTable, hh3cDot11LICLicenseKeyIndex=hh3cDot11LICLicenseKeyIndex, hh3cDot11LICTimeLimit=hh3cDot11LICTimeLimit, hh3cDot11LICAttrIndex=hh3cDot11LICAttrIndex, hh3cDot11LICKeyIndex=hh3cDot11LICKeyIndex, hh3cDot11LICFeatureGroup=hh3cDot11LICFeatureGroup, hh3cDot11LICKey=hh3cDot11LICKey, hh3cDot11LICSerialNumber=hh3cDot11LICSerialNumber, hh3cDot11LICFeatureAttrTable=hh3cDot11LICFeatureAttrTable, hh3cDot11LICApNumLicTable=hh3cDot11LICApNumLicTable, hh3cDot11LICApNumAttrTable=hh3cDot11LICApNumAttrTable, hh3cDot11LICAttrMaxVal=hh3cDot11LICAttrMaxVal, hh3cDot11LICConfigGroup=hh3cDot11LICConfigGroup, hh3cDot11LICAttrDefVal=hh3cDot11LICAttrDefVal, hh3cDot11LICFeatureLicEntry=hh3cDot11LICFeatureLicEntry, hh3cDot11LICApNum=hh3cDot11LICApNum, hh3cDot11LIC=hh3cDot11LIC, hh3cDot11LicApNumGroupSupport=hh3cDot11LicApNumGroupSupport)
