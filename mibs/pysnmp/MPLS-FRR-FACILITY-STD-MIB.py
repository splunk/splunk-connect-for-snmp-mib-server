#
# PySNMP MIB module MPLS-FRR-FACILITY-STD-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/MPLS-FRR-FACILITY-STD-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 20:03:56 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ConstraintsIntersection, ConstraintsUnion, SingleValueConstraint, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ConstraintsIntersection", "ConstraintsUnion", "SingleValueConstraint", "ValueSizeConstraint")
InterfaceIndex, = mibBuilder.importSymbols("IF-MIB", "InterfaceIndex")
mplsFrrGeneralConstraintsGroup, mplsFrrGeneralScalarGroup, mplsFrrGeneralTunnelARHopGroup = mibBuilder.importSymbols("MPLS-FRR-GENERAL-STD-MIB", "mplsFrrGeneralConstraintsGroup", "mplsFrrGeneralScalarGroup", "mplsFrrGeneralTunnelARHopGroup")
MplsLsrIdentifier, MplsBitRate, MplsTunnelIndex, MplsTunnelInstanceIndex = mibBuilder.importSymbols("MPLS-TC-STD-MIB", "MplsLsrIdentifier", "MplsBitRate", "MplsTunnelIndex", "MplsTunnelInstanceIndex")
ObjectGroup, ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "ModuleCompliance", "NotificationGroup")
Gauge32, Unsigned32, NotificationType, ObjectIdentity, iso, TimeTicks, Bits, MibIdentifier, mib_2, Integer32, Counter64, ModuleIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, IpAddress, Counter32 = mibBuilder.importSymbols("SNMPv2-SMI", "Gauge32", "Unsigned32", "NotificationType", "ObjectIdentity", "iso", "TimeTicks", "Bits", "MibIdentifier", "mib-2", "Integer32", "Counter64", "ModuleIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "IpAddress", "Counter32")
DisplayString, TextualConvention, TruthValue = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention", "TruthValue")
mplsFrrFacilityMIB = ModuleIdentity((1, 3, 6, 1, 2, 1, 204))
mplsFrrFacilityMIB.setRevisions(('2011-11-03 00:00',))
if mibBuilder.loadTexts: mplsFrrFacilityMIB.setLastUpdated('201111030000Z')
if mibBuilder.loadTexts: mplsFrrFacilityMIB.setOrganization('Multiprotocol Label Switching (MPLS) Working Group')
mplsFrrFacilityNotifications = MibIdentifier((1, 3, 6, 1, 2, 1, 204, 0))
mplsFrrFacilityObjects = MibIdentifier((1, 3, 6, 1, 2, 1, 204, 1))
mplsFrrFacilityConformance = MibIdentifier((1, 3, 6, 1, 2, 1, 204, 2))
mplsFrrConfiguredInterfaces = MibScalar((1, 3, 6, 1, 2, 1, 204, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mplsFrrConfiguredInterfaces.setStatus('current')
mplsFrrActiveInterfaces = MibScalar((1, 3, 6, 1, 2, 1, 204, 1, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mplsFrrActiveInterfaces.setStatus('current')
mplsFrrConfiguredBypassTunnels = MibScalar((1, 3, 6, 1, 2, 1, 204, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mplsFrrConfiguredBypassTunnels.setStatus('current')
mplsFrrActiveBypassTunnels = MibScalar((1, 3, 6, 1, 2, 1, 204, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mplsFrrActiveBypassTunnels.setStatus('current')
mplsFrrFacilityNotificationsEnabled = MibScalar((1, 3, 6, 1, 2, 1, 204, 1, 5), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mplsFrrFacilityNotificationsEnabled.setStatus('current')
mplsFrrFacilityNotificationsMaxRate = MibScalar((1, 3, 6, 1, 2, 1, 204, 1, 6), Gauge32()).setUnits('Notifications per Second').setMaxAccess("readwrite")
if mibBuilder.loadTexts: mplsFrrFacilityNotificationsMaxRate.setStatus('current')
mplsFrrFacilityDBTable = MibTable((1, 3, 6, 1, 2, 1, 204, 1, 7), )
if mibBuilder.loadTexts: mplsFrrFacilityDBTable.setStatus('current')
mplsFrrFacilityDBEntry = MibTableRow((1, 3, 6, 1, 2, 1, 204, 1, 7, 1), ).setIndexNames((0, "MPLS-FRR-FACILITY-STD-MIB", "mplsFrrFacilityProtectedIfIndex"), (0, "MPLS-FRR-FACILITY-STD-MIB", "mplsFrrFacilityProtectingTunnelIndex"), (0, "MPLS-FRR-FACILITY-STD-MIB", "mplsFrrFacilityBackupTunnelIndex"), (0, "MPLS-FRR-FACILITY-STD-MIB", "mplsFrrFacilityBackupTunnelInstance"), (0, "MPLS-FRR-FACILITY-STD-MIB", "mplsFrrFacilityBackupTunnelIngressLSRId"), (0, "MPLS-FRR-FACILITY-STD-MIB", "mplsFrrFacilityBackupTunnelEgressLSRId"))
if mibBuilder.loadTexts: mplsFrrFacilityDBEntry.setStatus('current')
mplsFrrFacilityProtectedIfIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 204, 1, 7, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: mplsFrrFacilityProtectedIfIndex.setStatus('current')
mplsFrrFacilityProtectingTunnelIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 204, 1, 7, 1, 2), MplsTunnelIndex())
if mibBuilder.loadTexts: mplsFrrFacilityProtectingTunnelIndex.setStatus('current')
mplsFrrFacilityBackupTunnelIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 204, 1, 7, 1, 3), MplsTunnelIndex())
if mibBuilder.loadTexts: mplsFrrFacilityBackupTunnelIndex.setStatus('current')
mplsFrrFacilityBackupTunnelInstance = MibTableColumn((1, 3, 6, 1, 2, 1, 204, 1, 7, 1, 4), MplsTunnelInstanceIndex())
if mibBuilder.loadTexts: mplsFrrFacilityBackupTunnelInstance.setStatus('current')
mplsFrrFacilityBackupTunnelIngressLSRId = MibTableColumn((1, 3, 6, 1, 2, 1, 204, 1, 7, 1, 5), MplsLsrIdentifier())
if mibBuilder.loadTexts: mplsFrrFacilityBackupTunnelIngressLSRId.setStatus('current')
mplsFrrFacilityBackupTunnelEgressLSRId = MibTableColumn((1, 3, 6, 1, 2, 1, 204, 1, 7, 1, 6), MplsLsrIdentifier())
if mibBuilder.loadTexts: mplsFrrFacilityBackupTunnelEgressLSRId.setStatus('current')
mplsFrrFacilityDBNumProtectingTunnelOnIf = MibTableColumn((1, 3, 6, 1, 2, 1, 204, 1, 7, 1, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mplsFrrFacilityDBNumProtectingTunnelOnIf.setStatus('current')
mplsFrrFacilityDBNumProtectedLspOnIf = MibTableColumn((1, 3, 6, 1, 2, 1, 204, 1, 7, 1, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mplsFrrFacilityDBNumProtectedLspOnIf.setStatus('current')
mplsFrrFacilityDBNumProtectedTunnels = MibTableColumn((1, 3, 6, 1, 2, 1, 204, 1, 7, 1, 9), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mplsFrrFacilityDBNumProtectedTunnels.setStatus('current')
mplsFrrFacilityDBProtectingTunnelStatus = MibTableColumn((1, 3, 6, 1, 2, 1, 204, 1, 7, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("active", 1), ("ready", 2), ("partial", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mplsFrrFacilityDBProtectingTunnelStatus.setStatus('current')
mplsFrrFacilityDBProtectingTunnelResvBw = MibTableColumn((1, 3, 6, 1, 2, 1, 204, 1, 7, 1, 11), MplsBitRate()).setUnits('kilobits per second').setMaxAccess("readonly")
if mibBuilder.loadTexts: mplsFrrFacilityDBProtectingTunnelResvBw.setStatus('current')
mplsFrrFacilityInitialBackupTunnelInvoked = NotificationType((1, 3, 6, 1, 2, 1, 204, 0, 1)).setObjects(("MPLS-FRR-FACILITY-STD-MIB", "mplsFrrFacilityDBNumProtectingTunnelOnIf"), ("MPLS-FRR-FACILITY-STD-MIB", "mplsFrrFacilityDBNumProtectedLspOnIf"), ("MPLS-FRR-FACILITY-STD-MIB", "mplsFrrFacilityDBNumProtectedTunnels"), ("MPLS-FRR-FACILITY-STD-MIB", "mplsFrrFacilityDBProtectingTunnelStatus"), ("MPLS-FRR-FACILITY-STD-MIB", "mplsFrrFacilityDBProtectingTunnelResvBw"))
if mibBuilder.loadTexts: mplsFrrFacilityInitialBackupTunnelInvoked.setStatus('current')
mplsFrrFacilityFinalTunnelRestored = NotificationType((1, 3, 6, 1, 2, 1, 204, 0, 2)).setObjects(("MPLS-FRR-FACILITY-STD-MIB", "mplsFrrFacilityDBNumProtectingTunnelOnIf"), ("MPLS-FRR-FACILITY-STD-MIB", "mplsFrrFacilityDBNumProtectedLspOnIf"), ("MPLS-FRR-FACILITY-STD-MIB", "mplsFrrFacilityDBNumProtectedTunnels"), ("MPLS-FRR-FACILITY-STD-MIB", "mplsFrrFacilityDBProtectingTunnelStatus"), ("MPLS-FRR-FACILITY-STD-MIB", "mplsFrrFacilityDBProtectingTunnelResvBw"))
if mibBuilder.loadTexts: mplsFrrFacilityFinalTunnelRestored.setStatus('current')
mplsFrrFacilityCompliances = MibIdentifier((1, 3, 6, 1, 2, 1, 204, 2, 1))
mplsFrrFacilityGroups = MibIdentifier((1, 3, 6, 1, 2, 1, 204, 2, 2))
mplsFrrFacilityModuleFullCompliance = ModuleCompliance((1, 3, 6, 1, 2, 1, 204, 2, 1, 1)).setObjects(("MPLS-FRR-GENERAL-STD-MIB", "mplsFrrGeneralScalarGroup"), ("MPLS-FRR-GENERAL-STD-MIB", "mplsFrrGeneralTunnelARHopGroup"), ("MPLS-FRR-GENERAL-STD-MIB", "mplsFrrGeneralConstraintsGroup"), ("MPLS-FRR-FACILITY-STD-MIB", "mplsFrrFacilityScalarGroup"), ("MPLS-FRR-FACILITY-STD-MIB", "mplsFrrFacilityDBGroup"), ("MPLS-FRR-FACILITY-STD-MIB", "mplsFrrFacilityNotificationsGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    mplsFrrFacilityModuleFullCompliance = mplsFrrFacilityModuleFullCompliance.setStatus('current')
mplsFrrFacilityModuleReadOnlyCompliance = ModuleCompliance((1, 3, 6, 1, 2, 1, 204, 2, 1, 2)).setObjects(("MPLS-FRR-GENERAL-STD-MIB", "mplsFrrGeneralScalarGroup"), ("MPLS-FRR-GENERAL-STD-MIB", "mplsFrrGeneralTunnelARHopGroup"), ("MPLS-FRR-GENERAL-STD-MIB", "mplsFrrGeneralConstraintsGroup"), ("MPLS-FRR-FACILITY-STD-MIB", "mplsFrrFacilityScalarGroup"), ("MPLS-FRR-FACILITY-STD-MIB", "mplsFrrFacilityDBGroup"), ("MPLS-FRR-FACILITY-STD-MIB", "mplsFrrFacilityNotificationsGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    mplsFrrFacilityModuleReadOnlyCompliance = mplsFrrFacilityModuleReadOnlyCompliance.setStatus('current')
mplsFrrFacilityScalarGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 204, 2, 2, 1)).setObjects(("MPLS-FRR-FACILITY-STD-MIB", "mplsFrrConfiguredInterfaces"), ("MPLS-FRR-FACILITY-STD-MIB", "mplsFrrActiveInterfaces"), ("MPLS-FRR-FACILITY-STD-MIB", "mplsFrrConfiguredBypassTunnels"), ("MPLS-FRR-FACILITY-STD-MIB", "mplsFrrActiveBypassTunnels"), ("MPLS-FRR-FACILITY-STD-MIB", "mplsFrrFacilityNotificationsEnabled"), ("MPLS-FRR-FACILITY-STD-MIB", "mplsFrrFacilityNotificationsMaxRate"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    mplsFrrFacilityScalarGroup = mplsFrrFacilityScalarGroup.setStatus('current')
mplsFrrFacilityDBGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 204, 2, 2, 2)).setObjects(("MPLS-FRR-FACILITY-STD-MIB", "mplsFrrFacilityDBNumProtectingTunnelOnIf"), ("MPLS-FRR-FACILITY-STD-MIB", "mplsFrrFacilityDBNumProtectedLspOnIf"), ("MPLS-FRR-FACILITY-STD-MIB", "mplsFrrFacilityDBNumProtectedTunnels"), ("MPLS-FRR-FACILITY-STD-MIB", "mplsFrrFacilityDBProtectingTunnelStatus"), ("MPLS-FRR-FACILITY-STD-MIB", "mplsFrrFacilityDBProtectingTunnelResvBw"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    mplsFrrFacilityDBGroup = mplsFrrFacilityDBGroup.setStatus('current')
mplsFrrFacilityNotificationsGroup = NotificationGroup((1, 3, 6, 1, 2, 1, 204, 2, 2, 3)).setObjects(("MPLS-FRR-FACILITY-STD-MIB", "mplsFrrFacilityInitialBackupTunnelInvoked"), ("MPLS-FRR-FACILITY-STD-MIB", "mplsFrrFacilityFinalTunnelRestored"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    mplsFrrFacilityNotificationsGroup = mplsFrrFacilityNotificationsGroup.setStatus('current')
mibBuilder.exportSymbols("MPLS-FRR-FACILITY-STD-MIB", mplsFrrFacilityObjects=mplsFrrFacilityObjects, mplsFrrConfiguredInterfaces=mplsFrrConfiguredInterfaces, mplsFrrFacilityProtectingTunnelIndex=mplsFrrFacilityProtectingTunnelIndex, mplsFrrFacilityBackupTunnelIndex=mplsFrrFacilityBackupTunnelIndex, mplsFrrFacilityProtectedIfIndex=mplsFrrFacilityProtectedIfIndex, mplsFrrFacilityConformance=mplsFrrFacilityConformance, mplsFrrFacilityBackupTunnelIngressLSRId=mplsFrrFacilityBackupTunnelIngressLSRId, mplsFrrFacilityDBNumProtectedLspOnIf=mplsFrrFacilityDBNumProtectedLspOnIf, mplsFrrFacilityDBNumProtectingTunnelOnIf=mplsFrrFacilityDBNumProtectingTunnelOnIf, mplsFrrFacilityDBEntry=mplsFrrFacilityDBEntry, mplsFrrFacilityCompliances=mplsFrrFacilityCompliances, mplsFrrFacilityGroups=mplsFrrFacilityGroups, mplsFrrFacilityBackupTunnelInstance=mplsFrrFacilityBackupTunnelInstance, mplsFrrFacilityNotificationsEnabled=mplsFrrFacilityNotificationsEnabled, PYSNMP_MODULE_ID=mplsFrrFacilityMIB, mplsFrrFacilityMIB=mplsFrrFacilityMIB, mplsFrrFacilityDBTable=mplsFrrFacilityDBTable, mplsFrrFacilityDBNumProtectedTunnels=mplsFrrFacilityDBNumProtectedTunnels, mplsFrrActiveBypassTunnels=mplsFrrActiveBypassTunnels, mplsFrrFacilityNotificationsGroup=mplsFrrFacilityNotificationsGroup, mplsFrrFacilityScalarGroup=mplsFrrFacilityScalarGroup, mplsFrrFacilityDBProtectingTunnelStatus=mplsFrrFacilityDBProtectingTunnelStatus, mplsFrrActiveInterfaces=mplsFrrActiveInterfaces, mplsFrrConfiguredBypassTunnels=mplsFrrConfiguredBypassTunnels, mplsFrrFacilityFinalTunnelRestored=mplsFrrFacilityFinalTunnelRestored, mplsFrrFacilityBackupTunnelEgressLSRId=mplsFrrFacilityBackupTunnelEgressLSRId, mplsFrrFacilityDBGroup=mplsFrrFacilityDBGroup, mplsFrrFacilityNotificationsMaxRate=mplsFrrFacilityNotificationsMaxRate, mplsFrrFacilityModuleFullCompliance=mplsFrrFacilityModuleFullCompliance, mplsFrrFacilityInitialBackupTunnelInvoked=mplsFrrFacilityInitialBackupTunnelInvoked, mplsFrrFacilityModuleReadOnlyCompliance=mplsFrrFacilityModuleReadOnlyCompliance, mplsFrrFacilityNotifications=mplsFrrFacilityNotifications, mplsFrrFacilityDBProtectingTunnelResvBw=mplsFrrFacilityDBProtectingTunnelResvBw)
