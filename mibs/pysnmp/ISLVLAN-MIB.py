#
# PySNMP MIB module ISLVLAN-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/ISLVLAN-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:46:25 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, SingleValueConstraint, ValueSizeConstraint, ConstraintsIntersection, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "SingleValueConstraint", "ValueSizeConstraint", "ConstraintsIntersection", "ValueRangeConstraint")
ifIndex, InterfaceIndex = mibBuilder.importSymbols("IF-MIB", "ifIndex", "InterfaceIndex")
OwnerString, = mibBuilder.importSymbols("RMON-MIB", "OwnerString")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Integer32, enterprises, MibIdentifier, IpAddress, MibScalar, MibTable, MibTableRow, MibTableColumn, Gauge32, Counter32, NotificationType, Bits, Unsigned32, ObjectIdentity, Counter64, ModuleIdentity, iso, TimeTicks = mibBuilder.importSymbols("SNMPv2-SMI", "Integer32", "enterprises", "MibIdentifier", "IpAddress", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Gauge32", "Counter32", "NotificationType", "Bits", "Unsigned32", "ObjectIdentity", "Counter64", "ModuleIdentity", "iso", "TimeTicks")
TextualConvention, RowStatus, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "RowStatus", "DisplayString")
hp = MibIdentifier((1, 3, 6, 1, 4, 1, 11))
nm = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2))
interface = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 4))
islVlanMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 11, 2, 4, 9))
if mibBuilder.loadTexts: islVlanMIB.setLastUpdated('')
if mibBuilder.loadTexts: islVlanMIB.setOrganization('Hewlett-Packard NetMetrix Division')
islVlanMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 4, 9, 1))
islVlanControlTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 4, 9, 1, 1), )
if mibBuilder.loadTexts: islVlanControlTable.setStatus('current')
islVlanControlEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 4, 9, 1, 1, 1), ).setIndexNames((0, "ISLVLAN-MIB", "islVlanControlIndex"))
if mibBuilder.loadTexts: islVlanControlEntry.setStatus('current')
islVlanControlIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 4, 9, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)))
if mibBuilder.loadTexts: islVlanControlIndex.setStatus('current')
islVlanControlDataSource = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 4, 9, 1, 1, 1, 2), ObjectIdentifier()).setMaxAccess("readonly")
if mibBuilder.loadTexts: islVlanControlDataSource.setStatus('current')
islVlanControlVtpDomain = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 4, 9, 1, 1, 1, 3), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: islVlanControlVtpDomain.setStatus('current')
islVlanControlVtpCommunity = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 4, 9, 1, 1, 1, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: islVlanControlVtpCommunity.setStatus('current')
islVlanControlEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 4, 9, 1, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("disabled", 1), ("explicitOnly", 2), ("implicitCreate", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: islVlanControlEnable.setStatus('current')
islVlanTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 4, 9, 1, 2), )
if mibBuilder.loadTexts: islVlanTable.setStatus('current')
islVlanEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 4, 9, 1, 2, 1), ).setIndexNames((0, "ISLVLAN-MIB", "islVlanIndex"))
if mibBuilder.loadTexts: islVlanEntry.setStatus('current')
islVlanIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 4, 9, 1, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)))
if mibBuilder.loadTexts: islVlanIndex.setStatus('current')
islVlanControlEntryIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 4, 9, 1, 2, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: islVlanControlEntryIndex.setStatus('current')
islVlanId = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 4, 9, 1, 2, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1023))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: islVlanId.setStatus('current')
islVlanIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 4, 9, 1, 2, 1, 4), InterfaceIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: islVlanIfIndex.setStatus('current')
islVlanName = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 4, 9, 1, 2, 1, 5), DisplayString().subtype(subtypeSpec=ValueRangeConstraint(1, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: islVlanName.setStatus('current')
islVlanMtu = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 4, 9, 1, 2, 1, 6), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: islVlanMtu.setStatus('current')
islVlanOwner = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 4, 9, 1, 2, 1, 7), OwnerString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: islVlanOwner.setStatus('current')
islVlanStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 4, 9, 1, 2, 1, 8), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: islVlanStatus.setStatus('current')
mibBuilder.exportSymbols("ISLVLAN-MIB", islVlanIfIndex=islVlanIfIndex, islVlanControlEntry=islVlanControlEntry, PYSNMP_MODULE_ID=islVlanMIB, islVlanStatus=islVlanStatus, islVlanMIBObjects=islVlanMIBObjects, islVlanControlEnable=islVlanControlEnable, islVlanControlEntryIndex=islVlanControlEntryIndex, islVlanControlVtpDomain=islVlanControlVtpDomain, islVlanId=islVlanId, islVlanControlVtpCommunity=islVlanControlVtpCommunity, islVlanControlIndex=islVlanControlIndex, islVlanMtu=islVlanMtu, islVlanControlTable=islVlanControlTable, islVlanEntry=islVlanEntry, islVlanMIB=islVlanMIB, islVlanTable=islVlanTable, islVlanControlDataSource=islVlanControlDataSource, islVlanName=islVlanName, islVlanOwner=islVlanOwner, interface=interface, nm=nm, islVlanIndex=islVlanIndex, hp=hp)
