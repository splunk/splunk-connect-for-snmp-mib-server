#
# PySNMP MIB module BAY-STACK-IF-EXT-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/BAY-STACK-IF-EXT-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:18:38 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ValueRangeConstraint, SingleValueConstraint, ConstraintsUnion, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ValueRangeConstraint", "SingleValueConstraint", "ConstraintsUnion", "ValueSizeConstraint")
InterfaceIndex, = mibBuilder.importSymbols("IF-MIB", "InterfaceIndex")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
TimeTicks, ObjectIdentity, Integer32, Unsigned32, MibIdentifier, Counter32, Counter64, MibScalar, MibTable, MibTableRow, MibTableColumn, IpAddress, NotificationType, iso, Gauge32, ModuleIdentity, Bits = mibBuilder.importSymbols("SNMPv2-SMI", "TimeTicks", "ObjectIdentity", "Integer32", "Unsigned32", "MibIdentifier", "Counter32", "Counter64", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "IpAddress", "NotificationType", "iso", "Gauge32", "ModuleIdentity", "Bits")
TruthValue, DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "TruthValue", "DisplayString", "TextualConvention")
bayStackMibs, = mibBuilder.importSymbols("SYNOPTICS-ROOT-MIB", "bayStackMibs")
bayStackIfExtMib = ModuleIdentity((1, 3, 6, 1, 4, 1, 45, 5, 40))
bayStackIfExtMib.setRevisions(('2012-05-31 00:00', '2010-11-03 00:00',))
if mibBuilder.loadTexts: bayStackIfExtMib.setLastUpdated('201205310000Z')
if mibBuilder.loadTexts: bayStackIfExtMib.setOrganization('Avaya')
bsIfExtNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 45, 5, 40, 0))
bsIfExtObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 45, 5, 40, 1))
bsIfExtScalars = MibIdentifier((1, 3, 6, 1, 4, 1, 45, 5, 40, 1, 1))
bsIfExtDirectedBroadcast = MibScalar((1, 3, 6, 1, 4, 1, 45, 5, 40, 1, 1, 1), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bsIfExtDirectedBroadcast.setStatus('current')
bsIfExtIfTable = MibTable((1, 3, 6, 1, 4, 1, 45, 5, 40, 1, 2), )
if mibBuilder.loadTexts: bsIfExtIfTable.setStatus('current')
bsIfExtIfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 45, 5, 40, 1, 2, 1), ).setIndexNames((0, "BAY-STACK-IF-EXT-MIB", "bsIfExtIfIndex"))
if mibBuilder.loadTexts: bsIfExtIfEntry.setStatus('current')
bsIfExtIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 5, 40, 1, 2, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: bsIfExtIfIndex.setStatus('current')
bsIfExtIfDirectedBroadcast = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 5, 40, 1, 2, 1, 2), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bsIfExtIfDirectedBroadcast.setStatus('current')
mibBuilder.exportSymbols("BAY-STACK-IF-EXT-MIB", bsIfExtIfDirectedBroadcast=bsIfExtIfDirectedBroadcast, PYSNMP_MODULE_ID=bayStackIfExtMib, bsIfExtIfEntry=bsIfExtIfEntry, bsIfExtIfTable=bsIfExtIfTable, bsIfExtIfIndex=bsIfExtIfIndex, bsIfExtScalars=bsIfExtScalars, bayStackIfExtMib=bayStackIfExtMib, bsIfExtObjects=bsIfExtObjects, bsIfExtNotifications=bsIfExtNotifications, bsIfExtDirectedBroadcast=bsIfExtDirectedBroadcast)
