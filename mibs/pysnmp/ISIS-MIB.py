#
# PySNMP MIB module ISIS-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/ISIS-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:02:34 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ConstraintsUnion, SingleValueConstraint, ValueRangeConstraint, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ConstraintsUnion", "SingleValueConstraint", "ValueRangeConstraint", "ValueSizeConstraint")
IndexIntegerNextFree, IndexInteger = mibBuilder.importSymbols("DIFFSERV-MIB", "IndexIntegerNextFree", "IndexInteger")
InterfaceIndex, = mibBuilder.importSymbols("IF-MIB", "InterfaceIndex")
InetAddress, InetAddressPrefixLength, InetAddressType = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddress", "InetAddressPrefixLength", "InetAddressType")
SnmpAdminString, = mibBuilder.importSymbols("SNMP-FRAMEWORK-MIB", "SnmpAdminString")
ObjectGroup, ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "ModuleCompliance", "NotificationGroup")
MibScalar, MibTable, MibTableRow, MibTableColumn, Integer32, ModuleIdentity, Bits, NotificationType, iso, TimeTicks, Unsigned32, IpAddress, Counter64, Gauge32, Counter32, ObjectIdentity, MibIdentifier, mib_2 = mibBuilder.importSymbols("SNMPv2-SMI", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Integer32", "ModuleIdentity", "Bits", "NotificationType", "iso", "TimeTicks", "Unsigned32", "IpAddress", "Counter64", "Gauge32", "Counter32", "ObjectIdentity", "MibIdentifier", "mib-2")
TextualConvention, DisplayString, RowStatus, TimeStamp, TruthValue = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString", "RowStatus", "TimeStamp", "TruthValue")
isisMIB = ModuleIdentity((1, 3, 6, 1, 2, 1, 138))
isisMIB.setRevisions(('2006-04-04 00:00',))
if mibBuilder.loadTexts: isisMIB.setLastUpdated('200604040000Z')
if mibBuilder.loadTexts: isisMIB.setOrganization('IETF IS-IS for IP Internets Working Group')
isisNotifications = MibIdentifier((1, 3, 6, 1, 2, 1, 138, 0))
isisObjects = MibIdentifier((1, 3, 6, 1, 2, 1, 138, 1))
isisConformance = MibIdentifier((1, 3, 6, 1, 2, 1, 138, 2))
isisSystem = MibIdentifier((1, 3, 6, 1, 2, 1, 138, 1, 1))
isisSysLevel = MibIdentifier((1, 3, 6, 1, 2, 1, 138, 1, 2))
isisCirc = MibIdentifier((1, 3, 6, 1, 2, 1, 138, 1, 3))
isisCircLevelValues = MibIdentifier((1, 3, 6, 1, 2, 1, 138, 1, 4))
isisCounters = MibIdentifier((1, 3, 6, 1, 2, 1, 138, 1, 5))
isisISAdj = MibIdentifier((1, 3, 6, 1, 2, 1, 138, 1, 6))
isisReachAddr = MibIdentifier((1, 3, 6, 1, 2, 1, 138, 1, 7))
isisIPReachAddr = MibIdentifier((1, 3, 6, 1, 2, 1, 138, 1, 8))
isisLSPDataBase = MibIdentifier((1, 3, 6, 1, 2, 1, 138, 1, 9))
isisNotification = MibIdentifier((1, 3, 6, 1, 2, 1, 138, 1, 10))
class IsisOSINSAddress(TextualConvention, OctetString):
    status = 'current'
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(0, 20)

class IsisSystemID(TextualConvention, OctetString):
    reference = '{ISIS.aoi systemId (119)}'
    status = 'current'
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(6, 6)
    fixedLength = 6

class IsisLinkStatePDUID(TextualConvention, OctetString):
    reference = '{See section 9.8 of ISO 10589}'
    status = 'current'
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(8, 8)
    fixedLength = 8

class IsisAdminState(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("on", 1), ("off", 2))

class IsisLSPBuffSize(TextualConvention, Unsigned32):
    status = 'current'
    displayHint = 'd'
    subtypeSpec = Unsigned32.subtypeSpec + ValueRangeConstraint(512, 16000)

class IsisLevelState(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))
    namedValues = NamedValues(("off", 1), ("on", 2), ("waiting", 3), ("overloaded", 4))

class IsisSupportedProtocol(TextualConvention, Integer32):
    reference = '{See section 5.3.1 of RFC 1195}'
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(129, 142, 204))
    namedValues = NamedValues(("iso8473", 129), ("ipV6", 142), ("ip", 204))

class IsisDefaultMetric(TextualConvention, Unsigned32):
    reference = '{See section 7.2.2 of ISO 10589}'
    status = 'current'
    displayHint = 'd'
    subtypeSpec = Unsigned32.subtypeSpec + ValueRangeConstraint(0, 63)

class IsisWideMetric(TextualConvention, Unsigned32):
    reference = '{See section 3 of RFC 3784}'
    status = 'current'
    displayHint = 'd'
    subtypeSpec = Unsigned32.subtypeSpec + ValueRangeConstraint(0, 16777215)

class IsisFullMetric(TextualConvention, Unsigned32):
    reference = '{See section 4 of RFC 3784}'
    status = 'current'
    displayHint = 'd'

class IsisMetricType(TextualConvention, Integer32):
    reference = '{See section 7.2.2 of ISO 10589}'
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("internal", 1), ("external", 2))

class IsisMetricStyle(TextualConvention, Integer32):
    reference = '{See section 5 of RFC 3787}'
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3))
    namedValues = NamedValues(("narrow", 1), ("wide", 2), ("both", 3))

class IsisISLevel(TextualConvention, Integer32):
    reference = '{See definitions 3.6.1 and 3.6.11 of ISO 10589}'
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("area", 1), ("domain", 2))

class IsisLevel(TextualConvention, Integer32):
    reference = '{See definitions 3.6.1 and 3.6.11 of ISO 10589}'
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3))
    namedValues = NamedValues(("level1", 1), ("level2", 2), ("level1and2", 3))

class IsisPDUHeader(TextualConvention, OctetString):
    status = 'current'
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(0, 64)

class IsisCircuitID(TextualConvention, OctetString):
    reference = '{See section 7.2.7 of ISO 10589}'
    status = 'current'
    subtypeSpec = OctetString.subtypeSpec + ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(7, 7), )
class IsisISPriority(TextualConvention, Unsigned32):
    reference = '{See section 9.5 of ISO 10589}'
    status = 'current'
    displayHint = 'd'
    subtypeSpec = Unsigned32.subtypeSpec + ValueRangeConstraint(0, 127)

class IsisUnsigned16TC(TextualConvention, Unsigned32):
    status = 'current'
    displayHint = 'd'
    subtypeSpec = Unsigned32.subtypeSpec + ValueRangeConstraint(0, 65535)

class IsisUnsigned8TC(TextualConvention, Unsigned32):
    status = 'current'
    displayHint = 'd'
    subtypeSpec = Unsigned32.subtypeSpec + ValueRangeConstraint(0, 255)

isisSysObject = MibIdentifier((1, 3, 6, 1, 2, 1, 138, 1, 1, 1))
isisSysVersion = MibScalar((1, 3, 6, 1, 2, 1, 138, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("unknown", 0), ("one", 1))).clone('one')).setMaxAccess("readonly")
if mibBuilder.loadTexts: isisSysVersion.setStatus('current')
isisSysLevelType = MibScalar((1, 3, 6, 1, 2, 1, 138, 1, 1, 1, 2), IsisLevel().clone('level1and2')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: isisSysLevelType.setStatus('current')
isisSysID = MibScalar((1, 3, 6, 1, 2, 1, 138, 1, 1, 1, 3), IsisSystemID()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: isisSysID.setStatus('current')
isisSysMaxPathSplits = MibScalar((1, 3, 6, 1, 2, 1, 138, 1, 1, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 32)).clone(2)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: isisSysMaxPathSplits.setStatus('current')
isisSysMaxLSPGenInt = MibScalar((1, 3, 6, 1, 2, 1, 138, 1, 1, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65235)).clone(900)).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: isisSysMaxLSPGenInt.setStatus('current')
isisSysPollESHelloRate = MibScalar((1, 3, 6, 1, 2, 1, 138, 1, 1, 1, 6), IsisUnsigned16TC().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)).clone(50)).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: isisSysPollESHelloRate.setStatus('current')
isisSysWaitTime = MibScalar((1, 3, 6, 1, 2, 1, 138, 1, 1, 1, 7), IsisUnsigned16TC().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)).clone(60)).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: isisSysWaitTime.setStatus('current')
isisSysAdminState = MibScalar((1, 3, 6, 1, 2, 1, 138, 1, 1, 1, 8), IsisAdminState().clone('off')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: isisSysAdminState.setStatus('current')
isisSysL2toL1Leaking = MibScalar((1, 3, 6, 1, 2, 1, 138, 1, 1, 1, 9), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: isisSysL2toL1Leaking.setStatus('current')
isisSysMaxAge = MibScalar((1, 3, 6, 1, 2, 1, 138, 1, 1, 1, 10), IsisUnsigned16TC().subtype(subtypeSpec=ValueRangeConstraint(350, 65535)).clone(1200)).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: isisSysMaxAge.setStatus('current')
isisSysReceiveLSPBufferSize = MibScalar((1, 3, 6, 1, 2, 1, 138, 1, 1, 1, 11), IsisUnsigned16TC().subtype(subtypeSpec=ValueRangeConstraint(1492, 16000)).clone(1492)).setUnits('bytes').setMaxAccess("readwrite")
if mibBuilder.loadTexts: isisSysReceiveLSPBufferSize.setStatus('current')
isisSysProtSupported = MibScalar((1, 3, 6, 1, 2, 1, 138, 1, 1, 1, 12), Bits().clone(namedValues=NamedValues(("iso8473", 0), ("ipv4", 1), ("ipv6", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: isisSysProtSupported.setStatus('current')
isisSysNotificationEnable = MibScalar((1, 3, 6, 1, 2, 1, 138, 1, 1, 1, 13), TruthValue().clone('true')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: isisSysNotificationEnable.setStatus('current')
isisManAreaAddrTable = MibTable((1, 3, 6, 1, 2, 1, 138, 1, 1, 2), )
if mibBuilder.loadTexts: isisManAreaAddrTable.setStatus('current')
isisManAreaAddrEntry = MibTableRow((1, 3, 6, 1, 2, 1, 138, 1, 1, 2, 1), ).setIndexNames((0, "ISIS-MIB", "isisManAreaAddr"))
if mibBuilder.loadTexts: isisManAreaAddrEntry.setStatus('current')
isisManAreaAddr = MibTableColumn((1, 3, 6, 1, 2, 1, 138, 1, 1, 2, 1, 1), IsisOSINSAddress())
if mibBuilder.loadTexts: isisManAreaAddr.setStatus('current')
isisManAreaAddrExistState = MibTableColumn((1, 3, 6, 1, 2, 1, 138, 1, 1, 2, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: isisManAreaAddrExistState.setStatus('current')
isisAreaAddrTable = MibTable((1, 3, 6, 1, 2, 1, 138, 1, 1, 3), )
if mibBuilder.loadTexts: isisAreaAddrTable.setStatus('current')
isisAreaAddrEntry = MibTableRow((1, 3, 6, 1, 2, 1, 138, 1, 1, 3, 1), ).setIndexNames((0, "ISIS-MIB", "isisAreaAddr"))
if mibBuilder.loadTexts: isisAreaAddrEntry.setStatus('current')
isisAreaAddr = MibTableColumn((1, 3, 6, 1, 2, 1, 138, 1, 1, 3, 1, 1), IsisOSINSAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: isisAreaAddr.setStatus('current')
isisSummAddrTable = MibTable((1, 3, 6, 1, 2, 1, 138, 1, 1, 4), )
if mibBuilder.loadTexts: isisSummAddrTable.setStatus('current')
isisSummAddrEntry = MibTableRow((1, 3, 6, 1, 2, 1, 138, 1, 1, 4, 1), ).setIndexNames((0, "ISIS-MIB", "isisSummAddressType"), (0, "ISIS-MIB", "isisSummAddress"), (0, "ISIS-MIB", "isisSummAddrPrefixLen"))
if mibBuilder.loadTexts: isisSummAddrEntry.setStatus('current')
isisSummAddressType = MibTableColumn((1, 3, 6, 1, 2, 1, 138, 1, 1, 4, 1, 1), InetAddressType())
if mibBuilder.loadTexts: isisSummAddressType.setStatus('current')
isisSummAddress = MibTableColumn((1, 3, 6, 1, 2, 1, 138, 1, 1, 4, 1, 2), InetAddress())
if mibBuilder.loadTexts: isisSummAddress.setStatus('current')
isisSummAddrPrefixLen = MibTableColumn((1, 3, 6, 1, 2, 1, 138, 1, 1, 4, 1, 3), InetAddressPrefixLength())
if mibBuilder.loadTexts: isisSummAddrPrefixLen.setStatus('current')
isisSummAddrExistState = MibTableColumn((1, 3, 6, 1, 2, 1, 138, 1, 1, 4, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: isisSummAddrExistState.setStatus('current')
isisSummAddrMetric = MibTableColumn((1, 3, 6, 1, 2, 1, 138, 1, 1, 4, 1, 5), IsisDefaultMetric().clone(20)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: isisSummAddrMetric.setStatus('current')
isisSummAddrFullMetric = MibTableColumn((1, 3, 6, 1, 2, 1, 138, 1, 1, 4, 1, 6), IsisFullMetric().clone(20)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: isisSummAddrFullMetric.setStatus('current')
isisRedistributeAddrTable = MibTable((1, 3, 6, 1, 2, 1, 138, 1, 1, 5), )
if mibBuilder.loadTexts: isisRedistributeAddrTable.setStatus('current')
isisRedistributeAddrEntry = MibTableRow((1, 3, 6, 1, 2, 1, 138, 1, 1, 5, 1), ).setIndexNames((0, "ISIS-MIB", "isisRedistributeAddrType"), (0, "ISIS-MIB", "isisRedistributeAddrAddress"), (0, "ISIS-MIB", "isisRedistributeAddrPrefixLen"))
if mibBuilder.loadTexts: isisRedistributeAddrEntry.setStatus('current')
isisRedistributeAddrType = MibTableColumn((1, 3, 6, 1, 2, 1, 138, 1, 1, 5, 1, 1), InetAddressType())
if mibBuilder.loadTexts: isisRedistributeAddrType.setStatus('current')
isisRedistributeAddrAddress = MibTableColumn((1, 3, 6, 1, 2, 1, 138, 1, 1, 5, 1, 2), InetAddress())
if mibBuilder.loadTexts: isisRedistributeAddrAddress.setStatus('current')
isisRedistributeAddrPrefixLen = MibTableColumn((1, 3, 6, 1, 2, 1, 138, 1, 1, 5, 1, 3), InetAddressPrefixLength())
if mibBuilder.loadTexts: isisRedistributeAddrPrefixLen.setStatus('current')
isisRedistributeAddrExistState = MibTableColumn((1, 3, 6, 1, 2, 1, 138, 1, 1, 5, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: isisRedistributeAddrExistState.setStatus('current')
isisRouterTable = MibTable((1, 3, 6, 1, 2, 1, 138, 1, 1, 6), )
if mibBuilder.loadTexts: isisRouterTable.setStatus('current')
isisRouterEntry = MibTableRow((1, 3, 6, 1, 2, 1, 138, 1, 1, 6, 1), ).setIndexNames((0, "ISIS-MIB", "isisRouterSysID"), (0, "ISIS-MIB", "isisRouterLevel"))
if mibBuilder.loadTexts: isisRouterEntry.setStatus('current')
isisRouterSysID = MibTableColumn((1, 3, 6, 1, 2, 1, 138, 1, 1, 6, 1, 1), IsisSystemID())
if mibBuilder.loadTexts: isisRouterSysID.setStatus('current')
isisRouterLevel = MibTableColumn((1, 3, 6, 1, 2, 1, 138, 1, 1, 6, 1, 2), IsisISLevel())
if mibBuilder.loadTexts: isisRouterLevel.setStatus('current')
isisRouterHostName = MibTableColumn((1, 3, 6, 1, 2, 1, 138, 1, 1, 6, 1, 3), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: isisRouterHostName.setStatus('current')
isisRouterID = MibTableColumn((1, 3, 6, 1, 2, 1, 138, 1, 1, 6, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: isisRouterID.setStatus('current')
isisSysLevelTable = MibTable((1, 3, 6, 1, 2, 1, 138, 1, 2, 1), )
if mibBuilder.loadTexts: isisSysLevelTable.setStatus('current')
isisSysLevelEntry = MibTableRow((1, 3, 6, 1, 2, 1, 138, 1, 2, 1, 1), ).setIndexNames((0, "ISIS-MIB", "isisSysLevelIndex"))
if mibBuilder.loadTexts: isisSysLevelEntry.setStatus('current')
isisSysLevelIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 138, 1, 2, 1, 1, 1), IsisISLevel())
if mibBuilder.loadTexts: isisSysLevelIndex.setStatus('current')
isisSysLevelOrigLSPBuffSize = MibTableColumn((1, 3, 6, 1, 2, 1, 138, 1, 2, 1, 1, 2), IsisLSPBuffSize().clone(1492)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: isisSysLevelOrigLSPBuffSize.setStatus('current')
isisSysLevelMinLSPGenInt = MibTableColumn((1, 3, 6, 1, 2, 1, 138, 1, 2, 1, 1, 3), IsisUnsigned16TC().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)).clone(30)).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: isisSysLevelMinLSPGenInt.setStatus('current')
isisSysLevelState = MibTableColumn((1, 3, 6, 1, 2, 1, 138, 1, 2, 1, 1, 4), IsisLevelState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: isisSysLevelState.setStatus('current')
isisSysLevelSetOverload = MibTableColumn((1, 3, 6, 1, 2, 1, 138, 1, 2, 1, 1, 5), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: isisSysLevelSetOverload.setStatus('current')
isisSysLevelSetOverloadUntil = MibTableColumn((1, 3, 6, 1, 2, 1, 138, 1, 2, 1, 1, 6), Unsigned32()).setUnits('Seconds until clearing manually set Overload Bit').setMaxAccess("readwrite")
if mibBuilder.loadTexts: isisSysLevelSetOverloadUntil.setStatus('current')
isisSysLevelMetricStyle = MibTableColumn((1, 3, 6, 1, 2, 1, 138, 1, 2, 1, 1, 7), IsisMetricStyle().clone('narrow')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: isisSysLevelMetricStyle.setStatus('current')
isisSysLevelSPFConsiders = MibTableColumn((1, 3, 6, 1, 2, 1, 138, 1, 2, 1, 1, 8), IsisMetricStyle().clone('narrow')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: isisSysLevelSPFConsiders.setStatus('current')
isisSysLevelTEEnabled = MibTableColumn((1, 3, 6, 1, 2, 1, 138, 1, 2, 1, 1, 9), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: isisSysLevelTEEnabled.setStatus('current')
isisNextCircIndex = MibScalar((1, 3, 6, 1, 2, 1, 138, 1, 3, 1), IndexIntegerNextFree()).setMaxAccess("readonly")
if mibBuilder.loadTexts: isisNextCircIndex.setStatus('current')
isisCircTable = MibTable((1, 3, 6, 1, 2, 1, 138, 1, 3, 2), )
if mibBuilder.loadTexts: isisCircTable.setStatus('current')
isisCircEntry = MibTableRow((1, 3, 6, 1, 2, 1, 138, 1, 3, 2, 1), ).setIndexNames((0, "ISIS-MIB", "isisCircIndex"))
if mibBuilder.loadTexts: isisCircEntry.setStatus('current')
isisCircIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 138, 1, 3, 2, 1, 1), IndexInteger())
if mibBuilder.loadTexts: isisCircIndex.setStatus('current')
isisCircIfIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 138, 1, 3, 2, 1, 2), InterfaceIndex()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: isisCircIfIndex.setStatus('current')
isisCircAdminState = MibTableColumn((1, 3, 6, 1, 2, 1, 138, 1, 3, 2, 1, 3), IsisAdminState().clone('off')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: isisCircAdminState.setStatus('current')
isisCircExistState = MibTableColumn((1, 3, 6, 1, 2, 1, 138, 1, 3, 2, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: isisCircExistState.setStatus('current')
isisCircType = MibTableColumn((1, 3, 6, 1, 2, 1, 138, 1, 3, 2, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("broadcast", 1), ("ptToPt", 2), ("staticIn", 3), ("staticOut", 4), ("dA", 5)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: isisCircType.setStatus('current')
isisCircExtDomain = MibTableColumn((1, 3, 6, 1, 2, 1, 138, 1, 3, 2, 1, 6), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: isisCircExtDomain.setStatus('current')
isisCircLevelType = MibTableColumn((1, 3, 6, 1, 2, 1, 138, 1, 3, 2, 1, 7), IsisLevel().clone('level1and2')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: isisCircLevelType.setStatus('current')
isisCircPassiveCircuit = MibTableColumn((1, 3, 6, 1, 2, 1, 138, 1, 3, 2, 1, 8), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: isisCircPassiveCircuit.setStatus('current')
isisCircMeshGroupEnabled = MibTableColumn((1, 3, 6, 1, 2, 1, 138, 1, 3, 2, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("inactive", 1), ("blocked", 2), ("set", 3))).clone('inactive')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: isisCircMeshGroupEnabled.setStatus('current')
isisCircMeshGroup = MibTableColumn((1, 3, 6, 1, 2, 1, 138, 1, 3, 2, 1, 10), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: isisCircMeshGroup.setStatus('current')
isisCircSmallHellos = MibTableColumn((1, 3, 6, 1, 2, 1, 138, 1, 3, 2, 1, 11), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: isisCircSmallHellos.setStatus('current')
isisCircLastUpTime = MibTableColumn((1, 3, 6, 1, 2, 1, 138, 1, 3, 2, 1, 12), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: isisCircLastUpTime.setStatus('current')
isisCirc3WayEnabled = MibTableColumn((1, 3, 6, 1, 2, 1, 138, 1, 3, 2, 1, 13), TruthValue().clone('true')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: isisCirc3WayEnabled.setStatus('current')
isisCircExtendedCircID = MibTableColumn((1, 3, 6, 1, 2, 1, 138, 1, 3, 2, 1, 14), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: isisCircExtendedCircID.setStatus('current')
isisCircLevelTable = MibTable((1, 3, 6, 1, 2, 1, 138, 1, 4, 1), )
if mibBuilder.loadTexts: isisCircLevelTable.setStatus('current')
isisCircLevelEntry = MibTableRow((1, 3, 6, 1, 2, 1, 138, 1, 4, 1, 1), ).setIndexNames((0, "ISIS-MIB", "isisCircIndex"), (0, "ISIS-MIB", "isisCircLevelIndex"))
if mibBuilder.loadTexts: isisCircLevelEntry.setStatus('current')
isisCircLevelIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 138, 1, 4, 1, 1, 1), IsisISLevel())
if mibBuilder.loadTexts: isisCircLevelIndex.setStatus('current')
isisCircLevelMetric = MibTableColumn((1, 3, 6, 1, 2, 1, 138, 1, 4, 1, 1, 2), IsisDefaultMetric().clone(10)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: isisCircLevelMetric.setStatus('current')
isisCircLevelWideMetric = MibTableColumn((1, 3, 6, 1, 2, 1, 138, 1, 4, 1, 1, 3), IsisWideMetric().clone(10)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: isisCircLevelWideMetric.setStatus('current')
isisCircLevelISPriority = MibTableColumn((1, 3, 6, 1, 2, 1, 138, 1, 4, 1, 1, 4), IsisISPriority().clone(64)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: isisCircLevelISPriority.setStatus('current')
isisCircLevelIDOctet = MibTableColumn((1, 3, 6, 1, 2, 1, 138, 1, 4, 1, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: isisCircLevelIDOctet.setStatus('current')
isisCircLevelID = MibTableColumn((1, 3, 6, 1, 2, 1, 138, 1, 4, 1, 1, 6), IsisCircuitID()).setMaxAccess("readonly")
if mibBuilder.loadTexts: isisCircLevelID.setStatus('current')
isisCircLevelDesIS = MibTableColumn((1, 3, 6, 1, 2, 1, 138, 1, 4, 1, 1, 7), IsisCircuitID()).setMaxAccess("readonly")
if mibBuilder.loadTexts: isisCircLevelDesIS.setStatus('current')
isisCircLevelHelloMultiplier = MibTableColumn((1, 3, 6, 1, 2, 1, 138, 1, 4, 1, 1, 8), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(2, 100)).clone(10)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: isisCircLevelHelloMultiplier.setStatus('current')
isisCircLevelHelloTimer = MibTableColumn((1, 3, 6, 1, 2, 1, 138, 1, 4, 1, 1, 9), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(10, 600000)).clone(3000)).setUnits('milliseconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: isisCircLevelHelloTimer.setStatus('current')
isisCircLevelDRHelloTimer = MibTableColumn((1, 3, 6, 1, 2, 1, 138, 1, 4, 1, 1, 10), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(10, 120000)).clone(1000)).setUnits('milliseconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: isisCircLevelDRHelloTimer.setStatus('current')
isisCircLevelLSPThrottle = MibTableColumn((1, 3, 6, 1, 2, 1, 138, 1, 4, 1, 1, 11), IsisUnsigned16TC().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)).clone(30)).setUnits('milliseconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: isisCircLevelLSPThrottle.setStatus('current')
isisCircLevelMinLSPRetransInt = MibTableColumn((1, 3, 6, 1, 2, 1, 138, 1, 4, 1, 1, 12), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 300)).clone(5)).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: isisCircLevelMinLSPRetransInt.setStatus('current')
isisCircLevelCSNPInterval = MibTableColumn((1, 3, 6, 1, 2, 1, 138, 1, 4, 1, 1, 13), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 600)).clone(10)).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: isisCircLevelCSNPInterval.setStatus('current')
isisCircLevelPartSNPInterval = MibTableColumn((1, 3, 6, 1, 2, 1, 138, 1, 4, 1, 1, 14), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 120)).clone(2)).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: isisCircLevelPartSNPInterval.setStatus('current')
isisSystemCounterTable = MibTable((1, 3, 6, 1, 2, 1, 138, 1, 5, 1), )
if mibBuilder.loadTexts: isisSystemCounterTable.setStatus('current')
isisSystemCounterEntry = MibTableRow((1, 3, 6, 1, 2, 1, 138, 1, 5, 1, 1), ).setIndexNames((0, "ISIS-MIB", "isisSysStatLevel"))
if mibBuilder.loadTexts: isisSystemCounterEntry.setStatus('current')
isisSysStatLevel = MibTableColumn((1, 3, 6, 1, 2, 1, 138, 1, 5, 1, 1, 1), IsisISLevel())
if mibBuilder.loadTexts: isisSysStatLevel.setStatus('current')
isisSysStatCorrLSPs = MibTableColumn((1, 3, 6, 1, 2, 1, 138, 1, 5, 1, 1, 2), Counter32()).setUnits('Number of corrupted in-memory frames').setMaxAccess("readonly")
if mibBuilder.loadTexts: isisSysStatCorrLSPs.setStatus('current')
isisSysStatAuthTypeFails = MibTableColumn((1, 3, 6, 1, 2, 1, 138, 1, 5, 1, 1, 3), Counter32()).setUnits('Number of frames with authentication type mismatches').setMaxAccess("readonly")
if mibBuilder.loadTexts: isisSysStatAuthTypeFails.setStatus('current')
isisSysStatAuthFails = MibTableColumn((1, 3, 6, 1, 2, 1, 138, 1, 5, 1, 1, 4), Counter32()).setUnits('Number of frames with authentication key failures').setMaxAccess("readonly")
if mibBuilder.loadTexts: isisSysStatAuthFails.setStatus('current')
isisSysStatLSPDbaseOloads = MibTableColumn((1, 3, 6, 1, 2, 1, 138, 1, 5, 1, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: isisSysStatLSPDbaseOloads.setStatus('current')
isisSysStatManAddrDropFromAreas = MibTableColumn((1, 3, 6, 1, 2, 1, 138, 1, 5, 1, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: isisSysStatManAddrDropFromAreas.setStatus('current')
isisSysStatAttmptToExMaxSeqNums = MibTableColumn((1, 3, 6, 1, 2, 1, 138, 1, 5, 1, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: isisSysStatAttmptToExMaxSeqNums.setStatus('current')
isisSysStatSeqNumSkips = MibTableColumn((1, 3, 6, 1, 2, 1, 138, 1, 5, 1, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: isisSysStatSeqNumSkips.setStatus('current')
isisSysStatOwnLSPPurges = MibTableColumn((1, 3, 6, 1, 2, 1, 138, 1, 5, 1, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: isisSysStatOwnLSPPurges.setStatus('current')
isisSysStatIDFieldLenMismatches = MibTableColumn((1, 3, 6, 1, 2, 1, 138, 1, 5, 1, 1, 10), Counter32()).setUnits('Number of frames with ID length mismatches').setMaxAccess("readonly")
if mibBuilder.loadTexts: isisSysStatIDFieldLenMismatches.setStatus('current')
isisSysStatPartChanges = MibTableColumn((1, 3, 6, 1, 2, 1, 138, 1, 5, 1, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: isisSysStatPartChanges.setStatus('current')
isisSysStatSPFRuns = MibTableColumn((1, 3, 6, 1, 2, 1, 138, 1, 5, 1, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: isisSysStatSPFRuns.setStatus('current')
isisSysStatLSPErrors = MibTableColumn((1, 3, 6, 1, 2, 1, 138, 1, 5, 1, 1, 13), Counter32()).setUnits('Number of frames with errors that we have received').setMaxAccess("readonly")
if mibBuilder.loadTexts: isisSysStatLSPErrors.setStatus('current')
isisCircuitCounterTable = MibTable((1, 3, 6, 1, 2, 1, 138, 1, 5, 2), )
if mibBuilder.loadTexts: isisCircuitCounterTable.setStatus('current')
isisCircuitCounterEntry = MibTableRow((1, 3, 6, 1, 2, 1, 138, 1, 5, 2, 1), ).setIndexNames((0, "ISIS-MIB", "isisCircIndex"), (0, "ISIS-MIB", "isisCircuitType"))
if mibBuilder.loadTexts: isisCircuitCounterEntry.setStatus('current')
isisCircuitType = MibTableColumn((1, 3, 6, 1, 2, 1, 138, 1, 5, 2, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("lanlevel1", 1), ("lanlevel2", 2), ("p2pcircuit", 3))))
if mibBuilder.loadTexts: isisCircuitType.setStatus('current')
isisCircAdjChanges = MibTableColumn((1, 3, 6, 1, 2, 1, 138, 1, 5, 2, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: isisCircAdjChanges.setStatus('current')
isisCircNumAdj = MibTableColumn((1, 3, 6, 1, 2, 1, 138, 1, 5, 2, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: isisCircNumAdj.setStatus('current')
isisCircInitFails = MibTableColumn((1, 3, 6, 1, 2, 1, 138, 1, 5, 2, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: isisCircInitFails.setStatus('current')
isisCircRejAdjs = MibTableColumn((1, 3, 6, 1, 2, 1, 138, 1, 5, 2, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: isisCircRejAdjs.setStatus('current')
isisCircIDFieldLenMismatches = MibTableColumn((1, 3, 6, 1, 2, 1, 138, 1, 5, 2, 1, 6), Counter32()).setUnits('Number of frames with ID field length mismatch').setMaxAccess("readonly")
if mibBuilder.loadTexts: isisCircIDFieldLenMismatches.setStatus('current')
isisCircMaxAreaAddrMismatches = MibTableColumn((1, 3, 6, 1, 2, 1, 138, 1, 5, 2, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: isisCircMaxAreaAddrMismatches.setStatus('current')
isisCircAuthTypeFails = MibTableColumn((1, 3, 6, 1, 2, 1, 138, 1, 5, 2, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: isisCircAuthTypeFails.setStatus('current')
isisCircAuthFails = MibTableColumn((1, 3, 6, 1, 2, 1, 138, 1, 5, 2, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: isisCircAuthFails.setStatus('current')
isisCircLANDesISChanges = MibTableColumn((1, 3, 6, 1, 2, 1, 138, 1, 5, 2, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: isisCircLANDesISChanges.setStatus('current')
isisPacketCounterTable = MibTable((1, 3, 6, 1, 2, 1, 138, 1, 5, 3), )
if mibBuilder.loadTexts: isisPacketCounterTable.setStatus('current')
isisPacketCounterEntry = MibTableRow((1, 3, 6, 1, 2, 1, 138, 1, 5, 3, 1), ).setIndexNames((0, "ISIS-MIB", "isisCircIndex"), (0, "ISIS-MIB", "isisPacketCountLevel"), (0, "ISIS-MIB", "isisPacketCountDirection"))
if mibBuilder.loadTexts: isisPacketCounterEntry.setStatus('current')
isisPacketCountLevel = MibTableColumn((1, 3, 6, 1, 2, 1, 138, 1, 5, 3, 1, 1), IsisISLevel())
if mibBuilder.loadTexts: isisPacketCountLevel.setStatus('current')
isisPacketCountDirection = MibTableColumn((1, 3, 6, 1, 2, 1, 138, 1, 5, 3, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("sending", 1), ("receiving", 2))))
if mibBuilder.loadTexts: isisPacketCountDirection.setStatus('current')
isisPacketCountIIHello = MibTableColumn((1, 3, 6, 1, 2, 1, 138, 1, 5, 3, 1, 3), Counter32()).setUnits('Number of IS-IS Hellos frames seen in this direction at this level').setMaxAccess("readonly")
if mibBuilder.loadTexts: isisPacketCountIIHello.setStatus('current')
isisPacketCountISHello = MibTableColumn((1, 3, 6, 1, 2, 1, 138, 1, 5, 3, 1, 4), Counter32()).setUnits('Number of ES-IS frames seen in this direction at this level.').setMaxAccess("readonly")
if mibBuilder.loadTexts: isisPacketCountISHello.setStatus('current')
isisPacketCountESHello = MibTableColumn((1, 3, 6, 1, 2, 1, 138, 1, 5, 3, 1, 5), Counter32()).setUnits('Number of ES Hello frames seen in this direction at this level').setMaxAccess("readonly")
if mibBuilder.loadTexts: isisPacketCountESHello.setStatus('current')
isisPacketCountLSP = MibTableColumn((1, 3, 6, 1, 2, 1, 138, 1, 5, 3, 1, 6), Counter32()).setUnits('Number of IS-IS LSP frames seen in this direction at this level').setMaxAccess("readonly")
if mibBuilder.loadTexts: isisPacketCountLSP.setStatus('current')
isisPacketCountCSNP = MibTableColumn((1, 3, 6, 1, 2, 1, 138, 1, 5, 3, 1, 7), Counter32()).setUnits('Number of IS-IS CSNP frames seen in this direction at this level').setMaxAccess("readonly")
if mibBuilder.loadTexts: isisPacketCountCSNP.setStatus('current')
isisPacketCountPSNP = MibTableColumn((1, 3, 6, 1, 2, 1, 138, 1, 5, 3, 1, 8), Counter32()).setUnits('Number of IS-IS PSNP frames seen in this direction at this level').setMaxAccess("readonly")
if mibBuilder.loadTexts: isisPacketCountPSNP.setStatus('current')
isisPacketCountUnknown = MibTableColumn((1, 3, 6, 1, 2, 1, 138, 1, 5, 3, 1, 9), Counter32()).setUnits('Number of unknown IS-IS frames seen at this level').setMaxAccess("readonly")
if mibBuilder.loadTexts: isisPacketCountUnknown.setStatus('current')
isisISAdjTable = MibTable((1, 3, 6, 1, 2, 1, 138, 1, 6, 1), )
if mibBuilder.loadTexts: isisISAdjTable.setStatus('current')
isisISAdjEntry = MibTableRow((1, 3, 6, 1, 2, 1, 138, 1, 6, 1, 1), ).setIndexNames((0, "ISIS-MIB", "isisCircIndex"), (0, "ISIS-MIB", "isisISAdjIndex"))
if mibBuilder.loadTexts: isisISAdjEntry.setStatus('current')
isisISAdjIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 138, 1, 6, 1, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295)))
if mibBuilder.loadTexts: isisISAdjIndex.setStatus('current')
isisISAdjState = MibTableColumn((1, 3, 6, 1, 2, 1, 138, 1, 6, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("down", 1), ("initializing", 2), ("up", 3), ("failed", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: isisISAdjState.setStatus('current')
isisISAdj3WayState = MibTableColumn((1, 3, 6, 1, 2, 1, 138, 1, 6, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("up", 0), ("initializing", 1), ("down", 2), ("failed", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: isisISAdj3WayState.setStatus('current')
isisISAdjNeighSNPAAddress = MibTableColumn((1, 3, 6, 1, 2, 1, 138, 1, 6, 1, 1, 4), IsisOSINSAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: isisISAdjNeighSNPAAddress.setStatus('current')
isisISAdjNeighSysType = MibTableColumn((1, 3, 6, 1, 2, 1, 138, 1, 6, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("l1IntermediateSystem", 1), ("l2IntermediateSystem", 2), ("l1L2IntermediateSystem", 3), ("unknown", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: isisISAdjNeighSysType.setStatus('current')
isisISAdjNeighSysID = MibTableColumn((1, 3, 6, 1, 2, 1, 138, 1, 6, 1, 1, 6), IsisSystemID()).setMaxAccess("readonly")
if mibBuilder.loadTexts: isisISAdjNeighSysID.setStatus('current')
isisISAdjNbrExtendedCircID = MibTableColumn((1, 3, 6, 1, 2, 1, 138, 1, 6, 1, 1, 7), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: isisISAdjNbrExtendedCircID.setStatus('current')
isisISAdjUsage = MibTableColumn((1, 3, 6, 1, 2, 1, 138, 1, 6, 1, 1, 8), IsisLevel()).setMaxAccess("readonly")
if mibBuilder.loadTexts: isisISAdjUsage.setStatus('current')
isisISAdjHoldTimer = MibTableColumn((1, 3, 6, 1, 2, 1, 138, 1, 6, 1, 1, 9), IsisUnsigned16TC().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: isisISAdjHoldTimer.setStatus('current')
isisISAdjNeighPriority = MibTableColumn((1, 3, 6, 1, 2, 1, 138, 1, 6, 1, 1, 10), IsisISPriority()).setMaxAccess("readonly")
if mibBuilder.loadTexts: isisISAdjNeighPriority.setStatus('current')
isisISAdjLastUpTime = MibTableColumn((1, 3, 6, 1, 2, 1, 138, 1, 6, 1, 1, 11), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: isisISAdjLastUpTime.setStatus('current')
isisISAdjAreaAddrTable = MibTable((1, 3, 6, 1, 2, 1, 138, 1, 6, 2), )
if mibBuilder.loadTexts: isisISAdjAreaAddrTable.setStatus('current')
isisISAdjAreaAddrEntry = MibTableRow((1, 3, 6, 1, 2, 1, 138, 1, 6, 2, 1), ).setIndexNames((0, "ISIS-MIB", "isisCircIndex"), (0, "ISIS-MIB", "isisISAdjIndex"), (0, "ISIS-MIB", "isisISAdjAreaAddrIndex"))
if mibBuilder.loadTexts: isisISAdjAreaAddrEntry.setStatus('current')
isisISAdjAreaAddrIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 138, 1, 6, 2, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295)))
if mibBuilder.loadTexts: isisISAdjAreaAddrIndex.setStatus('current')
isisISAdjAreaAddress = MibTableColumn((1, 3, 6, 1, 2, 1, 138, 1, 6, 2, 1, 2), IsisOSINSAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: isisISAdjAreaAddress.setStatus('current')
isisISAdjIPAddrTable = MibTable((1, 3, 6, 1, 2, 1, 138, 1, 6, 3), )
if mibBuilder.loadTexts: isisISAdjIPAddrTable.setStatus('current')
isisISAdjIPAddrEntry = MibTableRow((1, 3, 6, 1, 2, 1, 138, 1, 6, 3, 1), ).setIndexNames((0, "ISIS-MIB", "isisCircIndex"), (0, "ISIS-MIB", "isisISAdjIndex"), (0, "ISIS-MIB", "isisISAdjIPAddrIndex"))
if mibBuilder.loadTexts: isisISAdjIPAddrEntry.setStatus('current')
isisISAdjIPAddrIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 138, 1, 6, 3, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295)))
if mibBuilder.loadTexts: isisISAdjIPAddrIndex.setStatus('current')
isisISAdjIPAddrType = MibTableColumn((1, 3, 6, 1, 2, 1, 138, 1, 6, 3, 1, 2), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: isisISAdjIPAddrType.setStatus('current')
isisISAdjIPAddrAddress = MibTableColumn((1, 3, 6, 1, 2, 1, 138, 1, 6, 3, 1, 3), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: isisISAdjIPAddrAddress.setStatus('current')
isisISAdjProtSuppTable = MibTable((1, 3, 6, 1, 2, 1, 138, 1, 6, 4), )
if mibBuilder.loadTexts: isisISAdjProtSuppTable.setStatus('current')
isisISAdjProtSuppEntry = MibTableRow((1, 3, 6, 1, 2, 1, 138, 1, 6, 4, 1), ).setIndexNames((0, "ISIS-MIB", "isisCircIndex"), (0, "ISIS-MIB", "isisISAdjIndex"), (0, "ISIS-MIB", "isisISAdjProtSuppProtocol"))
if mibBuilder.loadTexts: isisISAdjProtSuppEntry.setStatus('current')
isisISAdjProtSuppProtocol = MibTableColumn((1, 3, 6, 1, 2, 1, 138, 1, 6, 4, 1, 1), IsisSupportedProtocol()).setMaxAccess("readonly")
if mibBuilder.loadTexts: isisISAdjProtSuppProtocol.setStatus('current')
isisRATable = MibTable((1, 3, 6, 1, 2, 1, 138, 1, 7, 1), )
if mibBuilder.loadTexts: isisRATable.setStatus('current')
isisRAEntry = MibTableRow((1, 3, 6, 1, 2, 1, 138, 1, 7, 1, 1), ).setIndexNames((0, "ISIS-MIB", "isisCircIndex"), (0, "ISIS-MIB", "isisRAIndex"))
if mibBuilder.loadTexts: isisRAEntry.setStatus('current')
isisRAIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 138, 1, 7, 1, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295)))
if mibBuilder.loadTexts: isisRAIndex.setStatus('current')
isisRAExistState = MibTableColumn((1, 3, 6, 1, 2, 1, 138, 1, 7, 1, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: isisRAExistState.setStatus('current')
isisRAAdminState = MibTableColumn((1, 3, 6, 1, 2, 1, 138, 1, 7, 1, 1, 3), IsisAdminState().clone('off')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: isisRAAdminState.setStatus('current')
isisRAAddrPrefix = MibTableColumn((1, 3, 6, 1, 2, 1, 138, 1, 7, 1, 1, 4), IsisOSINSAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: isisRAAddrPrefix.setStatus('current')
isisRAMapType = MibTableColumn((1, 3, 6, 1, 2, 1, 138, 1, 7, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("none", 1), ("explicit", 2), ("extractIDI", 3), ("extractDSP", 4)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: isisRAMapType.setStatus('current')
isisRAMetric = MibTableColumn((1, 3, 6, 1, 2, 1, 138, 1, 7, 1, 1, 6), IsisDefaultMetric().clone(20)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: isisRAMetric.setStatus('current')
isisRAMetricType = MibTableColumn((1, 3, 6, 1, 2, 1, 138, 1, 7, 1, 1, 7), IsisMetricType().clone('internal')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: isisRAMetricType.setStatus('current')
isisRASNPAAddress = MibTableColumn((1, 3, 6, 1, 2, 1, 138, 1, 7, 1, 1, 8), IsisOSINSAddress().clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: isisRASNPAAddress.setStatus('current')
isisRASNPAMask = MibTableColumn((1, 3, 6, 1, 2, 1, 138, 1, 7, 1, 1, 9), IsisOSINSAddress().clone(hexValue="00")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: isisRASNPAMask.setStatus('current')
isisRASNPAPrefix = MibTableColumn((1, 3, 6, 1, 2, 1, 138, 1, 7, 1, 1, 10), IsisOSINSAddress().clone(hexValue="00")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: isisRASNPAPrefix.setStatus('current')
isisRAType = MibTableColumn((1, 3, 6, 1, 2, 1, 138, 1, 7, 1, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("manual", 1), ("automatic", 2))).clone('manual')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: isisRAType.setStatus('current')
isisIPRATable = MibTable((1, 3, 6, 1, 2, 1, 138, 1, 8, 1), )
if mibBuilder.loadTexts: isisIPRATable.setStatus('current')
isisIPRAEntry = MibTableRow((1, 3, 6, 1, 2, 1, 138, 1, 8, 1, 1), ).setIndexNames((0, "ISIS-MIB", "isisSysLevelIndex"), (0, "ISIS-MIB", "isisIPRADestType"), (0, "ISIS-MIB", "isisIPRADest"), (0, "ISIS-MIB", "isisIPRADestPrefixLen"), (0, "ISIS-MIB", "isisIPRANextHopIndex"))
if mibBuilder.loadTexts: isisIPRAEntry.setStatus('current')
isisIPRADestType = MibTableColumn((1, 3, 6, 1, 2, 1, 138, 1, 8, 1, 1, 1), InetAddressType())
if mibBuilder.loadTexts: isisIPRADestType.setStatus('current')
isisIPRADest = MibTableColumn((1, 3, 6, 1, 2, 1, 138, 1, 8, 1, 1, 2), InetAddress())
if mibBuilder.loadTexts: isisIPRADest.setStatus('current')
isisIPRADestPrefixLen = MibTableColumn((1, 3, 6, 1, 2, 1, 138, 1, 8, 1, 1, 3), InetAddressPrefixLength())
if mibBuilder.loadTexts: isisIPRADestPrefixLen.setStatus('current')
isisIPRANextHopIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 138, 1, 8, 1, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295)))
if mibBuilder.loadTexts: isisIPRANextHopIndex.setStatus('current')
isisIPRANextHopType = MibTableColumn((1, 3, 6, 1, 2, 1, 138, 1, 8, 1, 1, 5), InetAddressType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: isisIPRANextHopType.setStatus('current')
isisIPRANextHop = MibTableColumn((1, 3, 6, 1, 2, 1, 138, 1, 8, 1, 1, 6), InetAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: isisIPRANextHop.setStatus('current')
isisIPRAType = MibTableColumn((1, 3, 6, 1, 2, 1, 138, 1, 8, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("manual", 1), ("automatic", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: isisIPRAType.setStatus('current')
isisIPRAExistState = MibTableColumn((1, 3, 6, 1, 2, 1, 138, 1, 8, 1, 1, 8), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: isisIPRAExistState.setStatus('current')
isisIPRAAdminState = MibTableColumn((1, 3, 6, 1, 2, 1, 138, 1, 8, 1, 1, 9), IsisAdminState().clone('off')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: isisIPRAAdminState.setStatus('current')
isisIPRAMetric = MibTableColumn((1, 3, 6, 1, 2, 1, 138, 1, 8, 1, 1, 10), IsisDefaultMetric().clone(10)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: isisIPRAMetric.setStatus('current')
isisIPRAMetricType = MibTableColumn((1, 3, 6, 1, 2, 1, 138, 1, 8, 1, 1, 11), IsisMetricType().clone('internal')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: isisIPRAMetricType.setStatus('current')
isisIPRAFullMetric = MibTableColumn((1, 3, 6, 1, 2, 1, 138, 1, 8, 1, 1, 12), IsisFullMetric().clone(10)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: isisIPRAFullMetric.setStatus('current')
isisIPRASNPAAddress = MibTableColumn((1, 3, 6, 1, 2, 1, 138, 1, 8, 1, 1, 13), IsisOSINSAddress().clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: isisIPRASNPAAddress.setStatus('current')
isisIPRASourceType = MibTableColumn((1, 3, 6, 1, 2, 1, 138, 1, 8, 1, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10))).clone(namedValues=NamedValues(("static", 1), ("direct", 2), ("ospfv2", 3), ("ospfv3", 4), ("isis", 5), ("rip", 6), ("igrp", 7), ("eigrp", 8), ("bgp", 9), ("other", 10)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: isisIPRASourceType.setStatus('current')
isisLSPSummaryTable = MibTable((1, 3, 6, 1, 2, 1, 138, 1, 9, 1), )
if mibBuilder.loadTexts: isisLSPSummaryTable.setStatus('current')
isisLSPSummaryEntry = MibTableRow((1, 3, 6, 1, 2, 1, 138, 1, 9, 1, 1), ).setIndexNames((0, "ISIS-MIB", "isisLSPLevel"), (0, "ISIS-MIB", "isisLSPID"))
if mibBuilder.loadTexts: isisLSPSummaryEntry.setStatus('current')
isisLSPLevel = MibTableColumn((1, 3, 6, 1, 2, 1, 138, 1, 9, 1, 1, 1), IsisISLevel())
if mibBuilder.loadTexts: isisLSPLevel.setStatus('current')
isisLSPID = MibTableColumn((1, 3, 6, 1, 2, 1, 138, 1, 9, 1, 1, 2), IsisLinkStatePDUID())
if mibBuilder.loadTexts: isisLSPID.setStatus('current')
isisLSPSeq = MibTableColumn((1, 3, 6, 1, 2, 1, 138, 1, 9, 1, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: isisLSPSeq.setStatus('current')
isisLSPZeroLife = MibTableColumn((1, 3, 6, 1, 2, 1, 138, 1, 9, 1, 1, 4), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: isisLSPZeroLife.setStatus('current')
isisLSPChecksum = MibTableColumn((1, 3, 6, 1, 2, 1, 138, 1, 9, 1, 1, 5), IsisUnsigned16TC()).setMaxAccess("readonly")
if mibBuilder.loadTexts: isisLSPChecksum.setStatus('current')
isisLSPLifetimeRemain = MibTableColumn((1, 3, 6, 1, 2, 1, 138, 1, 9, 1, 1, 6), IsisUnsigned16TC()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: isisLSPLifetimeRemain.setStatus('current')
isisLSPPDULength = MibTableColumn((1, 3, 6, 1, 2, 1, 138, 1, 9, 1, 1, 7), IsisUnsigned16TC()).setMaxAccess("readonly")
if mibBuilder.loadTexts: isisLSPPDULength.setStatus('current')
isisLSPAttributes = MibTableColumn((1, 3, 6, 1, 2, 1, 138, 1, 9, 1, 1, 8), IsisUnsigned8TC()).setMaxAccess("readonly")
if mibBuilder.loadTexts: isisLSPAttributes.setStatus('current')
isisLSPTLVTable = MibTable((1, 3, 6, 1, 2, 1, 138, 1, 9, 2), )
if mibBuilder.loadTexts: isisLSPTLVTable.setStatus('current')
isisLSPTLVEntry = MibTableRow((1, 3, 6, 1, 2, 1, 138, 1, 9, 2, 1), ).setIndexNames((0, "ISIS-MIB", "isisLSPLevel"), (0, "ISIS-MIB", "isisLSPID"), (0, "ISIS-MIB", "isisLSPTLVIndex"))
if mibBuilder.loadTexts: isisLSPTLVEntry.setStatus('current')
isisLSPTLVIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 138, 1, 9, 2, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295)))
if mibBuilder.loadTexts: isisLSPTLVIndex.setStatus('current')
isisLSPTLVSeq = MibTableColumn((1, 3, 6, 1, 2, 1, 138, 1, 9, 2, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: isisLSPTLVSeq.setStatus('current')
isisLSPTLVChecksum = MibTableColumn((1, 3, 6, 1, 2, 1, 138, 1, 9, 2, 1, 3), IsisUnsigned16TC()).setMaxAccess("readonly")
if mibBuilder.loadTexts: isisLSPTLVChecksum.setStatus('current')
isisLSPTLVType = MibTableColumn((1, 3, 6, 1, 2, 1, 138, 1, 9, 2, 1, 4), IsisUnsigned8TC()).setMaxAccess("readonly")
if mibBuilder.loadTexts: isisLSPTLVType.setStatus('current')
isisLSPTLVLen = MibTableColumn((1, 3, 6, 1, 2, 1, 138, 1, 9, 2, 1, 5), IsisUnsigned8TC()).setMaxAccess("readonly")
if mibBuilder.loadTexts: isisLSPTLVLen.setStatus('current')
isisLSPTLVValue = MibTableColumn((1, 3, 6, 1, 2, 1, 138, 1, 9, 2, 1, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: isisLSPTLVValue.setStatus('current')
isisNotificationEntry = MibIdentifier((1, 3, 6, 1, 2, 1, 138, 1, 10, 1))
isisNotificationSysLevelIndex = MibScalar((1, 3, 6, 1, 2, 1, 138, 1, 10, 1, 1), IsisLevel()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: isisNotificationSysLevelIndex.setStatus('current')
isisNotificationCircIfIndex = MibScalar((1, 3, 6, 1, 2, 1, 138, 1, 10, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: isisNotificationCircIfIndex.setStatus('current')
isisPduLspId = MibScalar((1, 3, 6, 1, 2, 1, 138, 1, 10, 1, 3), IsisLinkStatePDUID()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: isisPduLspId.setStatus('current')
isisPduFragment = MibScalar((1, 3, 6, 1, 2, 1, 138, 1, 10, 1, 4), IsisPDUHeader()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: isisPduFragment.setStatus('current')
isisPduFieldLen = MibScalar((1, 3, 6, 1, 2, 1, 138, 1, 10, 1, 5), IsisUnsigned8TC()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: isisPduFieldLen.setStatus('current')
isisPduMaxAreaAddress = MibScalar((1, 3, 6, 1, 2, 1, 138, 1, 10, 1, 6), IsisUnsigned8TC()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: isisPduMaxAreaAddress.setStatus('current')
isisPduProtocolVersion = MibScalar((1, 3, 6, 1, 2, 1, 138, 1, 10, 1, 7), IsisUnsigned8TC()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: isisPduProtocolVersion.setStatus('current')
isisPduLspSize = MibScalar((1, 3, 6, 1, 2, 1, 138, 1, 10, 1, 8), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: isisPduLspSize.setStatus('current')
isisPduOriginatingBufferSize = MibScalar((1, 3, 6, 1, 2, 1, 138, 1, 10, 1, 9), IsisUnsigned16TC().subtype(subtypeSpec=ValueRangeConstraint(0, 16000))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: isisPduOriginatingBufferSize.setStatus('current')
isisPduBufferSize = MibScalar((1, 3, 6, 1, 2, 1, 138, 1, 10, 1, 10), IsisUnsigned16TC().subtype(subtypeSpec=ValueRangeConstraint(0, 16000))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: isisPduBufferSize.setStatus('current')
isisPduProtocolsSupported = MibScalar((1, 3, 6, 1, 2, 1, 138, 1, 10, 1, 11), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: isisPduProtocolsSupported.setStatus('current')
isisAdjState = MibScalar((1, 3, 6, 1, 2, 1, 138, 1, 10, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("down", 1), ("initializing", 2), ("up", 3), ("failed", 4)))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: isisAdjState.setStatus('current')
isisErrorOffset = MibScalar((1, 3, 6, 1, 2, 1, 138, 1, 10, 1, 13), Unsigned32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: isisErrorOffset.setStatus('current')
isisErrorTLVType = MibScalar((1, 3, 6, 1, 2, 1, 138, 1, 10, 1, 14), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: isisErrorTLVType.setStatus('current')
isisNotificationAreaAddress = MibScalar((1, 3, 6, 1, 2, 1, 138, 1, 10, 1, 15), IsisOSINSAddress()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: isisNotificationAreaAddress.setStatus('current')
isisDatabaseOverload = NotificationType((1, 3, 6, 1, 2, 1, 138, 0, 1)).setObjects(("ISIS-MIB", "isisNotificationSysLevelIndex"), ("ISIS-MIB", "isisSysLevelState"))
if mibBuilder.loadTexts: isisDatabaseOverload.setStatus('current')
isisManualAddressDrops = NotificationType((1, 3, 6, 1, 2, 1, 138, 0, 2)).setObjects(("ISIS-MIB", "isisNotificationAreaAddress"))
if mibBuilder.loadTexts: isisManualAddressDrops.setStatus('current')
isisCorruptedLSPDetected = NotificationType((1, 3, 6, 1, 2, 1, 138, 0, 3)).setObjects(("ISIS-MIB", "isisNotificationSysLevelIndex"), ("ISIS-MIB", "isisPduLspId"))
if mibBuilder.loadTexts: isisCorruptedLSPDetected.setStatus('current')
isisAttemptToExceedMaxSequence = NotificationType((1, 3, 6, 1, 2, 1, 138, 0, 4)).setObjects(("ISIS-MIB", "isisNotificationSysLevelIndex"), ("ISIS-MIB", "isisPduLspId"))
if mibBuilder.loadTexts: isisAttemptToExceedMaxSequence.setStatus('current')
isisIDLenMismatch = NotificationType((1, 3, 6, 1, 2, 1, 138, 0, 5)).setObjects(("ISIS-MIB", "isisNotificationSysLevelIndex"), ("ISIS-MIB", "isisPduFieldLen"), ("ISIS-MIB", "isisNotificationCircIfIndex"), ("ISIS-MIB", "isisPduFragment"))
if mibBuilder.loadTexts: isisIDLenMismatch.setStatus('current')
isisMaxAreaAddressesMismatch = NotificationType((1, 3, 6, 1, 2, 1, 138, 0, 6)).setObjects(("ISIS-MIB", "isisNotificationSysLevelIndex"), ("ISIS-MIB", "isisPduMaxAreaAddress"), ("ISIS-MIB", "isisNotificationCircIfIndex"), ("ISIS-MIB", "isisPduFragment"))
if mibBuilder.loadTexts: isisMaxAreaAddressesMismatch.setStatus('current')
isisOwnLSPPurge = NotificationType((1, 3, 6, 1, 2, 1, 138, 0, 7)).setObjects(("ISIS-MIB", "isisNotificationSysLevelIndex"), ("ISIS-MIB", "isisNotificationCircIfIndex"), ("ISIS-MIB", "isisPduLspId"))
if mibBuilder.loadTexts: isisOwnLSPPurge.setStatus('current')
isisSequenceNumberSkip = NotificationType((1, 3, 6, 1, 2, 1, 138, 0, 8)).setObjects(("ISIS-MIB", "isisNotificationSysLevelIndex"), ("ISIS-MIB", "isisNotificationCircIfIndex"), ("ISIS-MIB", "isisPduLspId"))
if mibBuilder.loadTexts: isisSequenceNumberSkip.setStatus('current')
isisAuthenticationTypeFailure = NotificationType((1, 3, 6, 1, 2, 1, 138, 0, 9)).setObjects(("ISIS-MIB", "isisNotificationSysLevelIndex"), ("ISIS-MIB", "isisNotificationCircIfIndex"), ("ISIS-MIB", "isisPduFragment"))
if mibBuilder.loadTexts: isisAuthenticationTypeFailure.setStatus('current')
isisAuthenticationFailure = NotificationType((1, 3, 6, 1, 2, 1, 138, 0, 10)).setObjects(("ISIS-MIB", "isisNotificationSysLevelIndex"), ("ISIS-MIB", "isisNotificationCircIfIndex"), ("ISIS-MIB", "isisPduFragment"))
if mibBuilder.loadTexts: isisAuthenticationFailure.setStatus('current')
isisVersionSkew = NotificationType((1, 3, 6, 1, 2, 1, 138, 0, 11)).setObjects(("ISIS-MIB", "isisNotificationSysLevelIndex"), ("ISIS-MIB", "isisNotificationCircIfIndex"), ("ISIS-MIB", "isisPduProtocolVersion"), ("ISIS-MIB", "isisPduFragment"))
if mibBuilder.loadTexts: isisVersionSkew.setStatus('current')
isisAreaMismatch = NotificationType((1, 3, 6, 1, 2, 1, 138, 0, 12)).setObjects(("ISIS-MIB", "isisNotificationCircIfIndex"), ("ISIS-MIB", "isisPduFragment"))
if mibBuilder.loadTexts: isisAreaMismatch.setStatus('current')
isisRejectedAdjacency = NotificationType((1, 3, 6, 1, 2, 1, 138, 0, 13)).setObjects(("ISIS-MIB", "isisNotificationSysLevelIndex"), ("ISIS-MIB", "isisNotificationCircIfIndex"), ("ISIS-MIB", "isisPduFragment"))
if mibBuilder.loadTexts: isisRejectedAdjacency.setStatus('current')
isisLSPTooLargeToPropagate = NotificationType((1, 3, 6, 1, 2, 1, 138, 0, 14)).setObjects(("ISIS-MIB", "isisNotificationSysLevelIndex"), ("ISIS-MIB", "isisNotificationCircIfIndex"), ("ISIS-MIB", "isisPduLspSize"), ("ISIS-MIB", "isisPduLspId"))
if mibBuilder.loadTexts: isisLSPTooLargeToPropagate.setStatus('current')
isisOrigLSPBuffSizeMismatch = NotificationType((1, 3, 6, 1, 2, 1, 138, 0, 15)).setObjects(("ISIS-MIB", "isisNotificationSysLevelIndex"), ("ISIS-MIB", "isisNotificationCircIfIndex"), ("ISIS-MIB", "isisPduLspId"), ("ISIS-MIB", "isisPduOriginatingBufferSize"), ("ISIS-MIB", "isisPduBufferSize"))
if mibBuilder.loadTexts: isisOrigLSPBuffSizeMismatch.setStatus('current')
isisProtocolsSupportedMismatch = NotificationType((1, 3, 6, 1, 2, 1, 138, 0, 16)).setObjects(("ISIS-MIB", "isisNotificationSysLevelIndex"), ("ISIS-MIB", "isisNotificationCircIfIndex"), ("ISIS-MIB", "isisPduProtocolsSupported"), ("ISIS-MIB", "isisPduLspId"), ("ISIS-MIB", "isisPduFragment"))
if mibBuilder.loadTexts: isisProtocolsSupportedMismatch.setStatus('current')
isisAdjacencyChange = NotificationType((1, 3, 6, 1, 2, 1, 138, 0, 17)).setObjects(("ISIS-MIB", "isisNotificationSysLevelIndex"), ("ISIS-MIB", "isisNotificationCircIfIndex"), ("ISIS-MIB", "isisPduLspId"), ("ISIS-MIB", "isisAdjState"))
if mibBuilder.loadTexts: isisAdjacencyChange.setStatus('current')
isisLSPErrorDetected = NotificationType((1, 3, 6, 1, 2, 1, 138, 0, 18)).setObjects(("ISIS-MIB", "isisNotificationSysLevelIndex"), ("ISIS-MIB", "isisPduLspId"), ("ISIS-MIB", "isisNotificationCircIfIndex"), ("ISIS-MIB", "isisPduFragment"), ("ISIS-MIB", "isisErrorOffset"), ("ISIS-MIB", "isisErrorTLVType"))
if mibBuilder.loadTexts: isisLSPErrorDetected.setStatus('current')
isisCompliances = MibIdentifier((1, 3, 6, 1, 2, 1, 138, 2, 1))
isisGroups = MibIdentifier((1, 3, 6, 1, 2, 1, 138, 2, 2))
isisCompliance = ModuleCompliance((1, 3, 6, 1, 2, 1, 138, 2, 1, 1)).setObjects(("ISIS-MIB", "isisSystemGroup"), ("ISIS-MIB", "isisCircuitGroup"), ("ISIS-MIB", "isisISAdjGroup"), ("ISIS-MIB", "isisNotificationObjectGroup"), ("ISIS-MIB", "isisNotificationGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    isisCompliance = isisCompliance.setStatus('current')
isisAdvancedCompliance = ModuleCompliance((1, 3, 6, 1, 2, 1, 138, 2, 1, 2)).setObjects(("ISIS-MIB", "isisSystemGroup"), ("ISIS-MIB", "isisCircuitGroup"), ("ISIS-MIB", "isisISAdjGroup"), ("ISIS-MIB", "isisNotificationObjectGroup"), ("ISIS-MIB", "isisNotificationGroup"), ("ISIS-MIB", "isisISPDUCounterGroup"), ("ISIS-MIB", "isisRATableGroup"), ("ISIS-MIB", "isisISIPRADestGroup"), ("ISIS-MIB", "isisLSPGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    isisAdvancedCompliance = isisAdvancedCompliance.setStatus('current')
isisReadOnlyCompliance = ModuleCompliance((1, 3, 6, 1, 2, 1, 138, 2, 1, 3)).setObjects(("ISIS-MIB", "isisSystemGroup"), ("ISIS-MIB", "isisCircuitGroup"), ("ISIS-MIB", "isisISAdjGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    isisReadOnlyCompliance = isisReadOnlyCompliance.setStatus('current')
isisSystemGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 138, 2, 2, 1)).setObjects(("ISIS-MIB", "isisSysVersion"), ("ISIS-MIB", "isisSysLevelType"), ("ISIS-MIB", "isisSysID"), ("ISIS-MIB", "isisSysMaxPathSplits"), ("ISIS-MIB", "isisSysMaxLSPGenInt"), ("ISIS-MIB", "isisSysPollESHelloRate"), ("ISIS-MIB", "isisSysWaitTime"), ("ISIS-MIB", "isisSysAdminState"), ("ISIS-MIB", "isisSysL2toL1Leaking"), ("ISIS-MIB", "isisSysMaxAge"), ("ISIS-MIB", "isisSysProtSupported"), ("ISIS-MIB", "isisSysNotificationEnable"), ("ISIS-MIB", "isisManAreaAddrExistState"), ("ISIS-MIB", "isisSysLevelOrigLSPBuffSize"), ("ISIS-MIB", "isisSysLevelMinLSPGenInt"), ("ISIS-MIB", "isisSysLevelState"), ("ISIS-MIB", "isisSysLevelSetOverload"), ("ISIS-MIB", "isisSysLevelSetOverloadUntil"), ("ISIS-MIB", "isisSysLevelMetricStyle"), ("ISIS-MIB", "isisSysLevelSPFConsiders"), ("ISIS-MIB", "isisSysLevelTEEnabled"), ("ISIS-MIB", "isisSysReceiveLSPBufferSize"), ("ISIS-MIB", "isisSummAddrExistState"), ("ISIS-MIB", "isisSummAddrMetric"), ("ISIS-MIB", "isisAreaAddr"), ("ISIS-MIB", "isisSummAddrFullMetric"), ("ISIS-MIB", "isisRedistributeAddrExistState"), ("ISIS-MIB", "isisRouterHostName"), ("ISIS-MIB", "isisRouterID"), ("ISIS-MIB", "isisSysStatCorrLSPs"), ("ISIS-MIB", "isisSysStatLSPDbaseOloads"), ("ISIS-MIB", "isisSysStatManAddrDropFromAreas"), ("ISIS-MIB", "isisSysStatAttmptToExMaxSeqNums"), ("ISIS-MIB", "isisSysStatSeqNumSkips"), ("ISIS-MIB", "isisSysStatOwnLSPPurges"), ("ISIS-MIB", "isisSysStatIDFieldLenMismatches"), ("ISIS-MIB", "isisSysStatPartChanges"), ("ISIS-MIB", "isisSysStatSPFRuns"), ("ISIS-MIB", "isisSysStatAuthTypeFails"), ("ISIS-MIB", "isisSysStatAuthFails"), ("ISIS-MIB", "isisSysStatLSPErrors"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    isisSystemGroup = isisSystemGroup.setStatus('current')
isisCircuitGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 138, 2, 2, 2)).setObjects(("ISIS-MIB", "isisNextCircIndex"), ("ISIS-MIB", "isisCircAdminState"), ("ISIS-MIB", "isisCircExistState"), ("ISIS-MIB", "isisCircType"), ("ISIS-MIB", "isisCircExtDomain"), ("ISIS-MIB", "isisCircLevelType"), ("ISIS-MIB", "isisCircAdjChanges"), ("ISIS-MIB", "isisCircNumAdj"), ("ISIS-MIB", "isisCircInitFails"), ("ISIS-MIB", "isisCircRejAdjs"), ("ISIS-MIB", "isisCircIDFieldLenMismatches"), ("ISIS-MIB", "isisCircMaxAreaAddrMismatches"), ("ISIS-MIB", "isisCircAuthTypeFails"), ("ISIS-MIB", "isisCircAuthFails"), ("ISIS-MIB", "isisCircLANDesISChanges"), ("ISIS-MIB", "isisCircPassiveCircuit"), ("ISIS-MIB", "isisCircMeshGroupEnabled"), ("ISIS-MIB", "isisCircMeshGroup"), ("ISIS-MIB", "isisCircSmallHellos"), ("ISIS-MIB", "isisCircLastUpTime"), ("ISIS-MIB", "isisCirc3WayEnabled"), ("ISIS-MIB", "isisCircExtendedCircID"), ("ISIS-MIB", "isisCircIfIndex"), ("ISIS-MIB", "isisCircLevelMetric"), ("ISIS-MIB", "isisCircLevelWideMetric"), ("ISIS-MIB", "isisCircLevelISPriority"), ("ISIS-MIB", "isisCircLevelIDOctet"), ("ISIS-MIB", "isisCircLevelID"), ("ISIS-MIB", "isisCircLevelDesIS"), ("ISIS-MIB", "isisCircLevelHelloMultiplier"), ("ISIS-MIB", "isisCircLevelHelloTimer"), ("ISIS-MIB", "isisCircLevelDRHelloTimer"), ("ISIS-MIB", "isisCircLevelLSPThrottle"), ("ISIS-MIB", "isisCircLevelMinLSPRetransInt"), ("ISIS-MIB", "isisCircLevelCSNPInterval"), ("ISIS-MIB", "isisCircLevelPartSNPInterval"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    isisCircuitGroup = isisCircuitGroup.setStatus('current')
isisISAdjGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 138, 2, 2, 3)).setObjects(("ISIS-MIB", "isisISAdjState"), ("ISIS-MIB", "isisISAdj3WayState"), ("ISIS-MIB", "isisISAdjNeighSNPAAddress"), ("ISIS-MIB", "isisISAdjNeighSysType"), ("ISIS-MIB", "isisISAdjNeighSysID"), ("ISIS-MIB", "isisISAdjNbrExtendedCircID"), ("ISIS-MIB", "isisISAdjUsage"), ("ISIS-MIB", "isisISAdjHoldTimer"), ("ISIS-MIB", "isisISAdjNeighPriority"), ("ISIS-MIB", "isisISAdjLastUpTime"), ("ISIS-MIB", "isisISAdjAreaAddress"), ("ISIS-MIB", "isisISAdjIPAddrType"), ("ISIS-MIB", "isisISAdjIPAddrAddress"), ("ISIS-MIB", "isisISAdjProtSuppProtocol"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    isisISAdjGroup = isisISAdjGroup.setStatus('current')
isisNotificationObjectGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 138, 2, 2, 4)).setObjects(("ISIS-MIB", "isisNotificationSysLevelIndex"), ("ISIS-MIB", "isisNotificationCircIfIndex"), ("ISIS-MIB", "isisPduLspId"), ("ISIS-MIB", "isisPduFragment"), ("ISIS-MIB", "isisPduFieldLen"), ("ISIS-MIB", "isisPduMaxAreaAddress"), ("ISIS-MIB", "isisPduProtocolVersion"), ("ISIS-MIB", "isisPduLspSize"), ("ISIS-MIB", "isisPduOriginatingBufferSize"), ("ISIS-MIB", "isisPduBufferSize"), ("ISIS-MIB", "isisPduProtocolsSupported"), ("ISIS-MIB", "isisAdjState"), ("ISIS-MIB", "isisErrorOffset"), ("ISIS-MIB", "isisErrorTLVType"), ("ISIS-MIB", "isisNotificationAreaAddress"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    isisNotificationObjectGroup = isisNotificationObjectGroup.setStatus('current')
isisNotificationGroup = NotificationGroup((1, 3, 6, 1, 2, 1, 138, 2, 2, 5)).setObjects(("ISIS-MIB", "isisDatabaseOverload"), ("ISIS-MIB", "isisManualAddressDrops"), ("ISIS-MIB", "isisCorruptedLSPDetected"), ("ISIS-MIB", "isisAttemptToExceedMaxSequence"), ("ISIS-MIB", "isisIDLenMismatch"), ("ISIS-MIB", "isisMaxAreaAddressesMismatch"), ("ISIS-MIB", "isisOwnLSPPurge"), ("ISIS-MIB", "isisSequenceNumberSkip"), ("ISIS-MIB", "isisAuthenticationTypeFailure"), ("ISIS-MIB", "isisAuthenticationFailure"), ("ISIS-MIB", "isisVersionSkew"), ("ISIS-MIB", "isisAreaMismatch"), ("ISIS-MIB", "isisRejectedAdjacency"), ("ISIS-MIB", "isisLSPTooLargeToPropagate"), ("ISIS-MIB", "isisOrigLSPBuffSizeMismatch"), ("ISIS-MIB", "isisProtocolsSupportedMismatch"), ("ISIS-MIB", "isisAdjacencyChange"), ("ISIS-MIB", "isisLSPErrorDetected"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    isisNotificationGroup = isisNotificationGroup.setStatus('current')
isisISPDUCounterGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 138, 2, 2, 6)).setObjects(("ISIS-MIB", "isisPacketCountIIHello"), ("ISIS-MIB", "isisPacketCountISHello"), ("ISIS-MIB", "isisPacketCountESHello"), ("ISIS-MIB", "isisPacketCountLSP"), ("ISIS-MIB", "isisPacketCountCSNP"), ("ISIS-MIB", "isisPacketCountPSNP"), ("ISIS-MIB", "isisPacketCountUnknown"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    isisISPDUCounterGroup = isisISPDUCounterGroup.setStatus('current')
isisRATableGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 138, 2, 2, 7)).setObjects(("ISIS-MIB", "isisRAExistState"), ("ISIS-MIB", "isisRAAdminState"), ("ISIS-MIB", "isisRAAddrPrefix"), ("ISIS-MIB", "isisRAMapType"), ("ISIS-MIB", "isisRAMetric"), ("ISIS-MIB", "isisRAMetricType"), ("ISIS-MIB", "isisRASNPAAddress"), ("ISIS-MIB", "isisRASNPAMask"), ("ISIS-MIB", "isisRASNPAPrefix"), ("ISIS-MIB", "isisRAType"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    isisRATableGroup = isisRATableGroup.setStatus('current')
isisISIPRADestGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 138, 2, 2, 8)).setObjects(("ISIS-MIB", "isisIPRANextHopType"), ("ISIS-MIB", "isisIPRANextHop"), ("ISIS-MIB", "isisIPRAType"), ("ISIS-MIB", "isisIPRAExistState"), ("ISIS-MIB", "isisIPRAAdminState"), ("ISIS-MIB", "isisIPRAMetric"), ("ISIS-MIB", "isisIPRAFullMetric"), ("ISIS-MIB", "isisIPRAMetricType"), ("ISIS-MIB", "isisIPRASNPAAddress"), ("ISIS-MIB", "isisIPRASourceType"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    isisISIPRADestGroup = isisISIPRADestGroup.setStatus('current')
isisLSPGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 138, 2, 2, 9)).setObjects(("ISIS-MIB", "isisLSPSeq"), ("ISIS-MIB", "isisLSPZeroLife"), ("ISIS-MIB", "isisLSPChecksum"), ("ISIS-MIB", "isisLSPLifetimeRemain"), ("ISIS-MIB", "isisLSPPDULength"), ("ISIS-MIB", "isisLSPAttributes"), ("ISIS-MIB", "isisLSPTLVSeq"), ("ISIS-MIB", "isisLSPTLVChecksum"), ("ISIS-MIB", "isisLSPTLVType"), ("ISIS-MIB", "isisLSPTLVLen"), ("ISIS-MIB", "isisLSPTLVValue"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    isisLSPGroup = isisLSPGroup.setStatus('current')
mibBuilder.exportSymbols("ISIS-MIB", isisCircLevelPartSNPInterval=isisCircLevelPartSNPInterval, isisSystemCounterTable=isisSystemCounterTable, isisLSPDataBase=isisLSPDataBase, isisRATable=isisRATable, isisISAdjIPAddrAddress=isisISAdjIPAddrAddress, isisIPRAEntry=isisIPRAEntry, isisLSPChecksum=isisLSPChecksum, isisNotificationCircIfIndex=isisNotificationCircIfIndex, isisSummAddrEntry=isisSummAddrEntry, isisOrigLSPBuffSizeMismatch=isisOrigLSPBuffSizeMismatch, isisRouterTable=isisRouterTable, isisCircLevelDRHelloTimer=isisCircLevelDRHelloTimer, IsisUnsigned16TC=IsisUnsigned16TC, isisConformance=isisConformance, isisLSPLifetimeRemain=isisLSPLifetimeRemain, isisCircIDFieldLenMismatches=isisCircIDFieldLenMismatches, isisISAdjIPAddrIndex=isisISAdjIPAddrIndex, isisRATableGroup=isisRATableGroup, isisCircMaxAreaAddrMismatches=isisCircMaxAreaAddrMismatches, isisSysLevelSetOverloadUntil=isisSysLevelSetOverloadUntil, IsisSupportedProtocol=IsisSupportedProtocol, isisIPReachAddr=isisIPReachAddr, isisCircAdminState=isisCircAdminState, isisISAdjNbrExtendedCircID=isisISAdjNbrExtendedCircID, isisISAdjNeighSysType=isisISAdjNeighSysType, isisSysStatAuthFails=isisSysStatAuthFails, isisRAAdminState=isisRAAdminState, isisISAdjProtSuppProtocol=isisISAdjProtSuppProtocol, isisAdvancedCompliance=isisAdvancedCompliance, isisSysStatPartChanges=isisSysStatPartChanges, isisISPDUCounterGroup=isisISPDUCounterGroup, isisCircAdjChanges=isisCircAdjChanges, isisReachAddr=isisReachAddr, isisSysLevelMetricStyle=isisSysLevelMetricStyle, isisSysMaxLSPGenInt=isisSysMaxLSPGenInt, isisRedistributeAddrTable=isisRedistributeAddrTable, isisISAdjIPAddrEntry=isisISAdjIPAddrEntry, isisCircTable=isisCircTable, isisSysStatSeqNumSkips=isisSysStatSeqNumSkips, isisLSPGroup=isisLSPGroup, isisRedistributeAddrPrefixLen=isisRedistributeAddrPrefixLen, isisSysLevel=isisSysLevel, isisSysStatLevel=isisSysStatLevel, isisRAAddrPrefix=isisRAAddrPrefix, isisSysNotificationEnable=isisSysNotificationEnable, isisPduBufferSize=isisPduBufferSize, isisIPRAType=isisIPRAType, isisNotifications=isisNotifications, IsisDefaultMetric=IsisDefaultMetric, isisSystemCounterEntry=isisSystemCounterEntry, isisISAdjNeighSysID=isisISAdjNeighSysID, isisSysLevelType=isisSysLevelType, isisSysStatLSPErrors=isisSysStatLSPErrors, isisSysStatAttmptToExMaxSeqNums=isisSysStatAttmptToExMaxSeqNums, isisErrorTLVType=isisErrorTLVType, isisSummAddress=isisSummAddress, isisSummAddrTable=isisSummAddrTable, isisSysLevelIndex=isisSysLevelIndex, isisLSPPDULength=isisLSPPDULength, isisNotification=isisNotification, isisAreaAddrEntry=isisAreaAddrEntry, isisCircuitCounterTable=isisCircuitCounterTable, isisIPRAAdminState=isisIPRAAdminState, isisSysLevelSPFConsiders=isisSysLevelSPFConsiders, isisCircExtendedCircID=isisCircExtendedCircID, isisSysStatAuthTypeFails=isisSysStatAuthTypeFails, isisISAdjEntry=isisISAdjEntry, isisRASNPAAddress=isisRASNPAAddress, isisCircLevelType=isisCircLevelType, IsisLinkStatePDUID=IsisLinkStatePDUID, isisPacketCountIIHello=isisPacketCountIIHello, isisPacketCountISHello=isisPacketCountISHello, isisPduProtocolsSupported=isisPduProtocolsSupported, isisManAreaAddrTable=isisManAreaAddrTable, isisCircIfIndex=isisCircIfIndex, isisLSPErrorDetected=isisLSPErrorDetected, isisCorruptedLSPDetected=isisCorruptedLSPDetected, isisSysAdminState=isisSysAdminState, isisLSPTLVType=isisLSPTLVType, isisManAreaAddrEntry=isisManAreaAddrEntry, isisSysLevelState=isisSysLevelState, isisISAdj3WayState=isisISAdj3WayState, isisIPRAFullMetric=isisIPRAFullMetric, isisLSPTLVEntry=isisLSPTLVEntry, isisManualAddressDrops=isisManualAddressDrops, isisCircRejAdjs=isisCircRejAdjs, isisSysLevelEntry=isisSysLevelEntry, isisPduFragment=isisPduFragment, isisCircuitGroup=isisCircuitGroup, isisCircMeshGroupEnabled=isisCircMeshGroupEnabled, isisRAEntry=isisRAEntry, IsisUnsigned8TC=IsisUnsigned8TC, isisSysStatIDFieldLenMismatches=isisSysStatIDFieldLenMismatches, isisIPRANextHopIndex=isisIPRANextHopIndex, isisRAMapType=isisRAMapType, IsisMetricType=IsisMetricType, isisSysLevelMinLSPGenInt=isisSysLevelMinLSPGenInt, isisSequenceNumberSkip=isisSequenceNumberSkip, isisOwnLSPPurge=isisOwnLSPPurge, IsisMetricStyle=IsisMetricStyle, isisRAMetric=isisRAMetric, isisPacketCountCSNP=isisPacketCountCSNP, isisIPRAMetric=isisIPRAMetric, isisPacketCounterEntry=isisPacketCounterEntry, isisAreaMismatch=isisAreaMismatch, isisSummAddressType=isisSummAddressType, isisAreaAddr=isisAreaAddr, isisCircLevelCSNPInterval=isisCircLevelCSNPInterval, IsisPDUHeader=IsisPDUHeader, isisCircLevelISPriority=isisCircLevelISPriority, isisCirc3WayEnabled=isisCirc3WayEnabled, isisPacketCountUnknown=isisPacketCountUnknown, isisCounters=isisCounters, isisManAreaAddrExistState=isisManAreaAddrExistState, isisCircLevelHelloMultiplier=isisCircLevelHelloMultiplier, isisISAdjIndex=isisISAdjIndex, isisCompliances=isisCompliances, isisIPRAExistState=isisIPRAExistState, isisIPRAMetricType=isisIPRAMetricType, isisCircType=isisCircType, isisCircLevelTable=isisCircLevelTable, isisCircPassiveCircuit=isisCircPassiveCircuit, isisISAdjLastUpTime=isisISAdjLastUpTime, isisSysLevelSetOverload=isisSysLevelSetOverload, isisErrorOffset=isisErrorOffset, isisAuthenticationFailure=isisAuthenticationFailure, isisDatabaseOverload=isisDatabaseOverload, isisAreaAddrTable=isisAreaAddrTable, isisObjects=isisObjects, isisLSPTLVValue=isisLSPTLVValue, isisSummAddrExistState=isisSummAddrExistState, isisRejectedAdjacency=isisRejectedAdjacency, isisSysStatOwnLSPPurges=isisSysStatOwnLSPPurges, isisPacketCountLSP=isisPacketCountLSP, isisSysLevelOrigLSPBuffSize=isisSysLevelOrigLSPBuffSize, isisCircLevelEntry=isisCircLevelEntry, isisSystem=isisSystem, isisPacketCountDirection=isisPacketCountDirection, isisLSPTLVLen=isisLSPTLVLen, isisISAdjAreaAddress=isisISAdjAreaAddress, IsisWideMetric=IsisWideMetric, isisCircAuthTypeFails=isisCircAuthTypeFails, IsisISPriority=IsisISPriority, isisLSPTLVChecksum=isisLSPTLVChecksum, isisISAdjAreaAddrEntry=isisISAdjAreaAddrEntry, isisRouterHostName=isisRouterHostName, isisCircuitType=isisCircuitType, IsisOSINSAddress=IsisOSINSAddress, isisISAdjGroup=isisISAdjGroup, isisIPRADestType=isisIPRADestType, isisCircSmallHellos=isisCircSmallHellos, isisPduProtocolVersion=isisPduProtocolVersion, isisISAdjHoldTimer=isisISAdjHoldTimer, isisLSPSummaryEntry=isisLSPSummaryEntry, IsisSystemID=IsisSystemID, isisReadOnlyCompliance=isisReadOnlyCompliance, isisProtocolsSupportedMismatch=isisProtocolsSupportedMismatch, isisCircLevelID=isisCircLevelID, isisSysMaxPathSplits=isisSysMaxPathSplits, isisIPRANextHopType=isisIPRANextHopType, isisRAIndex=isisRAIndex, isisRASNPAPrefix=isisRASNPAPrefix, isisLSPTLVTable=isisLSPTLVTable, isisRAType=isisRAType, isisPduOriginatingBufferSize=isisPduOriginatingBufferSize, isisISAdjIPAddrTable=isisISAdjIPAddrTable, isisCircLevelWideMetric=isisCircLevelWideMetric, isisCircLevelDesIS=isisCircLevelDesIS, isisNotificationGroup=isisNotificationGroup, isisISAdjState=isisISAdjState, isisNextCircIndex=isisNextCircIndex, isisCircLevelIDOctet=isisCircLevelIDOctet, IsisLevelState=IsisLevelState, IsisAdminState=IsisAdminState, isisCircLevelValues=isisCircLevelValues, isisRedistributeAddrType=isisRedistributeAddrType, isisSysObject=isisSysObject, isisLSPTLVIndex=isisLSPTLVIndex, isisAuthenticationTypeFailure=isisAuthenticationTypeFailure, isisSysPollESHelloRate=isisSysPollESHelloRate, isisISAdjNeighSNPAAddress=isisISAdjNeighSNPAAddress, isisCompliance=isisCompliance, isisCircLevelIndex=isisCircLevelIndex, isisLSPAttributes=isisLSPAttributes, isisRouterLevel=isisRouterLevel, isisISAdjAreaAddrIndex=isisISAdjAreaAddrIndex, isisISAdjTable=isisISAdjTable, isisRouterID=isisRouterID, isisCircLevelMinLSPRetransInt=isisCircLevelMinLSPRetransInt, isisISAdjAreaAddrTable=isisISAdjAreaAddrTable, isisIDLenMismatch=isisIDLenMismatch, isisISAdjUsage=isisISAdjUsage, isisPduLspSize=isisPduLspSize, isisSysStatCorrLSPs=isisSysStatCorrLSPs, isisCircuitCounterEntry=isisCircuitCounterEntry, isisAttemptToExceedMaxSequence=isisAttemptToExceedMaxSequence, isisSysMaxAge=isisSysMaxAge, isisPacketCountLevel=isisPacketCountLevel, isisISAdj=isisISAdj, isisIPRATable=isisIPRATable, isisRAExistState=isisRAExistState, isisCircInitFails=isisCircInitFails, isisRedistributeAddrExistState=isisRedistributeAddrExistState, isisCircNumAdj=isisCircNumAdj, isisCirc=isisCirc, isisCircAuthFails=isisCircAuthFails, IsisCircuitID=IsisCircuitID, isisPacketCountPSNP=isisPacketCountPSNP, isisNotificationObjectGroup=isisNotificationObjectGroup, isisSummAddrFullMetric=isisSummAddrFullMetric, isisSysLevelTEEnabled=isisSysLevelTEEnabled, isisRedistributeAddrAddress=isisRedistributeAddrAddress, isisIPRADestPrefixLen=isisIPRADestPrefixLen, isisSystemGroup=isisSystemGroup, IsisLevel=IsisLevel, isisPduFieldLen=isisPduFieldLen, isisPduMaxAreaAddress=isisPduMaxAreaAddress, isisPacketCountESHello=isisPacketCountESHello, isisSysStatManAddrDropFromAreas=isisSysStatManAddrDropFromAreas, isisGroups=isisGroups, isisIPRASourceType=isisIPRASourceType, isisLSPTLVSeq=isisLSPTLVSeq, isisLSPTooLargeToPropagate=isisLSPTooLargeToPropagate, isisLSPID=isisLSPID, isisMIB=isisMIB, isisSysStatLSPDbaseOloads=isisSysStatLSPDbaseOloads, isisRAMetricType=isisRAMetricType, isisISAdjProtSuppTable=isisISAdjProtSuppTable, isisSysVersion=isisSysVersion, isisCircMeshGroup=isisCircMeshGroup, isisSysWaitTime=isisSysWaitTime, isisLSPSeq=isisLSPSeq, isisISAdjProtSuppEntry=isisISAdjProtSuppEntry, isisSysStatSPFRuns=isisSysStatSPFRuns, isisISIPRADestGroup=isisISIPRADestGroup, isisCircLevelLSPThrottle=isisCircLevelLSPThrottle, PYSNMP_MODULE_ID=isisMIB, isisAdjacencyChange=isisAdjacencyChange, isisCircLevelMetric=isisCircLevelMetric, isisMaxAreaAddressesMismatch=isisMaxAreaAddressesMismatch, IsisLSPBuffSize=IsisLSPBuffSize, isisRouterEntry=isisRouterEntry, isisManAreaAddr=isisManAreaAddr, isisCircLevelHelloTimer=isisCircLevelHelloTimer, isisRASNPAMask=isisRASNPAMask, isisNotificationEntry=isisNotificationEntry, isisCircEntry=isisCircEntry, isisIPRADest=isisIPRADest, IsisISLevel=IsisISLevel, isisIPRANextHop=isisIPRANextHop, isisRedistributeAddrEntry=isisRedistributeAddrEntry, isisCircLANDesISChanges=isisCircLANDesISChanges, isisLSPLevel=isisLSPLevel, isisLSPSummaryTable=isisLSPSummaryTable)
mibBuilder.exportSymbols("ISIS-MIB", isisNotificationAreaAddress=isisNotificationAreaAddress, isisISAdjNeighPriority=isisISAdjNeighPriority, isisSysID=isisSysID, isisCircExistState=isisCircExistState, isisCircExtDomain=isisCircExtDomain, isisSummAddrMetric=isisSummAddrMetric, isisSysLevelTable=isisSysLevelTable, isisCircLastUpTime=isisCircLastUpTime, isisLSPZeroLife=isisLSPZeroLife, isisNotificationSysLevelIndex=isisNotificationSysLevelIndex, isisSysReceiveLSPBufferSize=isisSysReceiveLSPBufferSize, isisCircIndex=isisCircIndex, isisISAdjIPAddrType=isisISAdjIPAddrType, isisPduLspId=isisPduLspId, isisRouterSysID=isisRouterSysID, isisSummAddrPrefixLen=isisSummAddrPrefixLen, isisAdjState=isisAdjState, isisVersionSkew=isisVersionSkew, isisSysProtSupported=isisSysProtSupported, isisIPRASNPAAddress=isisIPRASNPAAddress, IsisFullMetric=IsisFullMetric, isisPacketCounterTable=isisPacketCounterTable, isisSysL2toL1Leaking=isisSysL2toL1Leaking)
