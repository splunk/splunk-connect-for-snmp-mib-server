#
# PySNMP MIB module MWRM-UNIT-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/MWRM-UNIT-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 20:06:10 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ValueRangeConstraint, ConstraintsIntersection, ConstraintsUnion, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ValueRangeConstraint", "ConstraintsIntersection", "ConstraintsUnion", "SingleValueConstraint")
ifIndex, = mibBuilder.importSymbols("IF-MIB", "ifIndex")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
NotificationType, enterprises, MibScalar, MibTable, MibTableRow, MibTableColumn, Integer32, ObjectIdentity, Unsigned32, ModuleIdentity, TimeTicks, MibIdentifier, IpAddress, Bits, iso, Counter64, Gauge32, Counter32, NotificationType = mibBuilder.importSymbols("SNMPv2-SMI", "NotificationType", "enterprises", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Integer32", "ObjectIdentity", "Unsigned32", "ModuleIdentity", "TimeTicks", "MibIdentifier", "IpAddress", "Bits", "iso", "Counter64", "Gauge32", "Counter32", "NotificationType")
DisplayString, MacAddress, TextualConvention, RowStatus = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "MacAddress", "TextualConvention", "RowStatus")
class EnableDisable(Integer32):
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(2, 3))
    namedValues = NamedValues(("enable", 2), ("disable", 3))

class EnableDisableSMI2(Integer32):
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1))
    namedValues = NamedValues(("disable", 0), ("enable", 1))

class OffOn(Integer32):
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1))
    namedValues = NamedValues(("off", 0), ("on", 1))

class MetricImperial(Integer32):
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1))
    namedValues = NamedValues(("metric", 0), ("imperial", 1))

class AllowedNotAllowed(Integer32):
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1))
    namedValues = NamedValues(("not-allowed", 0), ("allowed", 1))

class NoYes(Integer32):
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1))
    namedValues = NamedValues(("no", 0), ("yes", 1))

class DownUp(Integer32):
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1))
    namedValues = NamedValues(("down", 0), ("up", 1))

class SupportedNotsupported(Integer32):
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(2, 3))
    namedValues = NamedValues(("supported", 2), ("not-supported", 3))

class ProgressStatus(Integer32):
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))
    namedValues = NamedValues(("ready", 0), ("inProgress", 1), ("success", 2), ("failure", 3))

class Severity(Integer32):
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5))
    namedValues = NamedValues(("indeterminate", 0), ("critical", 1), ("major", 2), ("minor", 3), ("warning", 4), ("cleared", 5))

class TrailIfType(Integer32):
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(-1, 0, 1, 2, 4))
    namedValues = NamedValues(("unknown", -1), ("line", 0), ("radio", 1), ("stm-1-oc-3", 2), ("sync", 4))

class PmTableType(Integer32):
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))
    namedValues = NamedValues(("pm15mincurr", 1), ("pm15min", 2), ("pm24hrcurr", 3), ("pm24hr", 4))

class RateMbps(Integer32):
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(-1, 0, 1, 2))
    namedValues = NamedValues(("not-applicable", -1), ("n10", 0), ("n100", 1), ("n1000", 2))

class HalfFull(Integer32):
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(-1, 0, 1, 2))
    namedValues = NamedValues(("not-applicable", -1), ("half", 0), ("full", 1), ("auto", 2))

class BerLevel(Integer32):
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(2, 3, 4))
    namedValues = NamedValues(("n1e-3", 2), ("n1e-4", 3), ("n1e-5", 4))

class SignalLevel(Integer32):
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(5, 6, 7, 8))
    namedValues = NamedValues(("n1e-6", 5), ("n1e-7", 6), ("n1e-8", 7), ("n1e-9", 8))

class Exponent(Integer32):
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18))
    namedValues = NamedValues(("n1e-2", 1), ("n1e-3", 2), ("n1e-4", 3), ("n1e-5", 4), ("n1e-6", 5), ("n1e-7", 6), ("n1e-8", 7), ("n1e-9", 8), ("n1e-10", 9), ("n1e-11", 10), ("n1e-12", 11), ("n1e-13", 12), ("n1e-14", 13), ("n1e-15", 14), ("n1e-16", 15), ("n1e-17", 16), ("n1e-18", 17), ("n1e-0", 18))

class LoopbackType(Integer32):
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2))
    namedValues = NamedValues(("off", 0), ("towardsLine", 1), ("towardsRadio", 2))

class QueueName(Integer32):
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))
    namedValues = NamedValues(("first-queue", 0), ("second-queue", 1), ("third-queue", 2), ("fourth-queue", 3), ("none", 4))

class RadioId(Integer32):
    pass

class RfuId(Integer32):
    pass

class SwCommand(Integer32):
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5))
    namedValues = NamedValues(("noOperation", 0), ("downloadUpgradeVersion", 1), ("upgrade", 2), ("rollback", 3), ("downgrade", 4), ("downloadDowngradeVersion", 5))

class TrailProtectedType(Integer32):
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2))
    namedValues = NamedValues(("none", 0), ("primary", 1), ("secondary", 2))

class ClockSrc(Integer32):
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1))
    namedValues = NamedValues(("local-clock", 0), ("system-clock-source", 1))

class SlotId(Integer32):
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12))
    namedValues = NamedValues(("standalone", 0), ("slot1", 1), ("slot2", 2), ("slot3", 3), ("slot4", 4), ("slot5", 5), ("slot6", 6), ("slot7", 7), ("slot8", 8), ("slot9", 9), ("slot10", 10), ("slot11", 11), ("slot12", 12))

class Integrity(Integer32):
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1))
    namedValues = NamedValues(("integrity", 0), ("nointegrity", 1))

class GreenYellow(Integer32):
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1))
    namedValues = NamedValues(("green", 0), ("yellow", 1))

class InputSeverity(Integer32):
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))
    namedValues = NamedValues(("indeterminate", 0), ("critical", 1), ("major", 2), ("minor", 3), ("warning", 4))

class SwCommandTimer(Integer32):
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9))
    namedValues = NamedValues(("noOperation", 0), ("downloadUpgradeVersion", 1), ("upgrade", 2), ("rollback", 3), ("downgrade", 4), ("downloadDowngradeVersion", 5), ("upgradeTimer", 6), ("rollbackTimer", 7), ("downgradeTimer", 8), ("abortTimedInstallation", 9))

class FileTransferStatus(Integer32):
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))
    namedValues = NamedValues(("ready", 0), ("inTransfer", 1), ("failure", 2), ("success", 3))

class FileRestoreStatus(Integer32):
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))
    namedValues = NamedValues(("ready", 0), ("restoring-configuration", 1), ("failure", 2), ("success", 3))

class RbacAccessLevel(Integer32):
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2))
    namedValues = NamedValues(("none", 0), ("normal", 1), ("advance", 2))

class InventoryCardType(Integer32):
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 10, 11, 12, 13, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56))
    namedValues = NamedValues(("cleared", 0), ("nexusSc", 10), ("nexusScLp", 11), ("nexusDc", 12), ("nexusQc", 13), ("tccR", 19), ("tccA", 20), ("tccB", 21), ("rmcA", 22), ("rmcB", 23), ("rmcNDc", 24), ("nativeTdm16xE1T1", 25), ("pwe3-16xE1T1", 26), ("tdm1xStm1", 27), ("tdm1xOc3", 28), ("eLicEth4x1GEA", 29), ("chassis1U2U", 30), ("capacityBooster", 31), ("pwe3-1xSTM1", 32), ("pdc48v2uSingleFeed", 33), ("pdc48v1uSingleFeed", 34), ("pdc48v1uDualFeed", 35), ("fan2U", 36), ("fan1U", 37), ("test-card", 38), ("pdc24v2uSingleFeed", 39), ("pdc24v1uSingleFeed", 40), ("pdc24v1uDualFeed", 41), ("unknownCard", 42), ("ricE", 43), ("trafficFpga", 44), ("essFpga", 45), ("tressFpga", 46), ("ip20g", 47), ("licXe4opt", 48), ("tccBmc", 49), ("rmcE", 50), ("licStm1oc3rst", 51), ("tccAmc", 52), ("ip20cEband", 53), ("tccA2", 54), ("tccA2mc", 55), ("tccB2", 56))

class FtpProtocolType(Integer32):
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1))
    namedValues = NamedValues(("ftp", 0), ("sftp", 1))

class CfgUnitInfoOper(Integer32):
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2))
    namedValues = NamedValues(("invalid-operation", 0), ("create-pakcge", 1), ("export-pakcge", 2))

class CfgOper(Integer32):
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5))
    namedValues = NamedValues(("invalid-operation", 0), ("backup", 1), ("restore", 2), ("delete", 3), ("import", 4), ("export", 5))

class CardOccupancy(Integer32):
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3))
    namedValues = NamedValues(("empty", 1), ("equipped", 2), ("not-operational", 3))

class OperState(Integer32):
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))
    namedValues = NamedValues(("down", 1), ("init", 2), ("loading", 3), ("loaded", 4), ("up", 5), ("up-with-alarms", 6))

class LicenseGeneric(Integer32):
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(100000, 100001, 100010, 100011, 100020, 100021, 100022, 100023, 100024, 100025))
    namedValues = NamedValues(("not-allowed", 100000), ("allowed", 100001), ("disable", 100010), ("enable", 100011), ("only-management", 100020), ("smart-pipe", 100021), ("enhanced-pipe", 100022), ("edge-cet", 100023), ("access-cet", 100024), ("aggregation-cet", 100025))

class RaduisAcceaaLevel(Integer32):
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))
    namedValues = NamedValues(("none", 0), ("normal", 1), ("advanced", 2), ("root", 3))

class VmResetType(Integer32):
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6))
    namedValues = NamedValues(("no-reset", 0), ("main-board-warm-reset", 1), ("tcc-cold-reset", 2), ("main-board-cold-reset", 3), ("card-warm-reset", 4), ("card-cold-reset", 5), ("not-applicable-reset", 6))

class FTStatus(Integer32):
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))
    namedValues = NamedValues(("ready", 0), ("file-in-transfer", 1), ("failure", 2), ("success", 3))

class CsrCertificateFTState(Integer32):
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2))
    namedValues = NamedValues(("no-operation", 0), ("upload", 1), ("download", 2))

class CsrFileFormat(Integer32):
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("pem", 1), ("der", 2))

microwave_radio = MibIdentifier((1, 3, 6, 1, 4, 1, 2281)).setLabel("microwave-radio")
genEquip = MibIdentifier((1, 3, 6, 1, 4, 1, 2281, 10))
genEquipUnit = MibIdentifier((1, 3, 6, 1, 4, 1, 2281, 10, 1))
genEquipUnitInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 2281, 10, 1, 1))
genEquipLastCfgTimeStamp = MibScalar((1, 3, 6, 1, 4, 1, 2281, 10, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipLastCfgTimeStamp.setStatus('mandatory')
genEquipRealTimeandDate = MibScalar((1, 3, 6, 1, 4, 1, 2281, 10, 1, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(8, 8)).setFixedLength(8)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: genEquipRealTimeandDate.setStatus('mandatory')
genEquipPMGenTime = MibScalar((1, 3, 6, 1, 4, 1, 2281, 10, 1, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipPMGenTime.setStatus('mandatory')
genEquipInvGenTime = MibScalar((1, 3, 6, 1, 4, 1, 2281, 10, 1, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipInvGenTime.setStatus('mandatory')
genEquipOperation = MibScalar((1, 3, 6, 1, 4, 1, 2281, 10, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("noAction", 0), ("idcHwReset", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: genEquipOperation.setStatus('mandatory')
genEquipMIBVersion = MibScalar((1, 3, 6, 1, 4, 1, 2281, 10, 1, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipMIBVersion.setStatus('mandatory')
genEquipUnitCLLI = MibScalar((1, 3, 6, 1, 4, 1, 2281, 10, 1, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: genEquipUnitCLLI.setStatus('mandatory')
genEquipUnitMeasurementSystem = MibScalar((1, 3, 6, 1, 4, 1, 2281, 10, 1, 1, 8), MetricImperial()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: genEquipUnitMeasurementSystem.setStatus('mandatory')
genEquipUnitIduTemperature = MibScalar((1, 3, 6, 1, 4, 1, 2281, 10, 1, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipUnitIduTemperature.setStatus('mandatory')
genEquipUnitIduVoltageInput = MibScalar((1, 3, 6, 1, 4, 1, 2281, 10, 1, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipUnitIduVoltageInput.setStatus('mandatory')
genEquipUnitInfoTime = MibIdentifier((1, 3, 6, 1, 4, 1, 2281, 10, 1, 1, 11))
genEquipUnitGMTHours = MibScalar((1, 3, 6, 1, 4, 1, 2281, 10, 1, 1, 11, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-12, 13))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: genEquipUnitGMTHours.setStatus('mandatory')
genEquipUnitGMTMins = MibScalar((1, 3, 6, 1, 4, 1, 2281, 10, 1, 1, 11, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 59))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: genEquipUnitGMTMins.setStatus('mandatory')
genEquipUnitDaylightSavingTimeStartMonth = MibScalar((1, 3, 6, 1, 4, 1, 2281, 10, 1, 1, 11, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 12))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: genEquipUnitDaylightSavingTimeStartMonth.setStatus('mandatory')
genEquipUnitDaylightSavingTimeStartDay = MibScalar((1, 3, 6, 1, 4, 1, 2281, 10, 1, 1, 11, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: genEquipUnitDaylightSavingTimeStartDay.setStatus('mandatory')
genEquipUnitDaylightSavingTimeEndMonth = MibScalar((1, 3, 6, 1, 4, 1, 2281, 10, 1, 1, 11, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 12))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: genEquipUnitDaylightSavingTimeEndMonth.setStatus('mandatory')
genEquipUnitDaylightSavingTimeEndDay = MibScalar((1, 3, 6, 1, 4, 1, 2281, 10, 1, 1, 11, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: genEquipUnitDaylightSavingTimeEndDay.setStatus('mandatory')
genEquipUnitDaylightSavingTimeOffset = MibScalar((1, 3, 6, 1, 4, 1, 2281, 10, 1, 1, 11, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 23))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: genEquipUnitDaylightSavingTimeOffset.setStatus('mandatory')
genEquipUnitInfoTimeServicesTable = MibTable((1, 3, 6, 1, 4, 1, 2281, 10, 1, 1, 11, 12), )
if mibBuilder.loadTexts: genEquipUnitInfoTimeServicesTable.setStatus('mandatory')
genEquipUnitInfoTimeServicesEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2281, 10, 1, 1, 11, 12, 1), ).setIndexNames((0, "MWRM-UNIT-MIB", "genEquipUnitInfoTimeServicesIndex"))
if mibBuilder.loadTexts: genEquipUnitInfoTimeServicesEntry.setStatus('mandatory')
genEquipUnitInfoTimeServicesIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 1, 1, 11, 12, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipUnitInfoTimeServicesIndex.setStatus('mandatory')
genEquipUnitInfoTimeServicesUtcHours = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 1, 1, 11, 12, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-12, 13))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: genEquipUnitInfoTimeServicesUtcHours.setStatus('mandatory')
genEquipUnitInfoTimeServicesUtcMinutes = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 1, 1, 11, 12, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 59))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: genEquipUnitInfoTimeServicesUtcMinutes.setStatus('mandatory')
genEquipUnitInfoTimeServicesDstStartMonth = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 1, 1, 11, 12, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 12))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: genEquipUnitInfoTimeServicesDstStartMonth.setStatus('mandatory')
genEquipUnitInfoTimeServicesDstStartDay = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 1, 1, 11, 12, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: genEquipUnitInfoTimeServicesDstStartDay.setStatus('mandatory')
genEquipUnitInfoTimeServicesDstEndMonth = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 1, 1, 11, 12, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 12))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: genEquipUnitInfoTimeServicesDstEndMonth.setStatus('mandatory')
genEquipUnitInfoTimeServicesDstEndDay = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 1, 1, 11, 12, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: genEquipUnitInfoTimeServicesDstEndDay.setStatus('mandatory')
genEquipUnitInfoTimeServicesDstOffset = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 1, 1, 11, 12, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 23))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: genEquipUnitInfoTimeServicesDstOffset.setStatus('mandatory')
genEquipUnitInfoTimeServicesUtcDateAndTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 1, 1, 11, 12, 1, 9), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: genEquipUnitInfoTimeServicesUtcDateAndTime.setStatus('mandatory')
genEquipUnitInfoTimeServicesUtcCurrentDateAndTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 1, 1, 11, 12, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipUnitInfoTimeServicesUtcCurrentDateAndTime.setStatus('mandatory')
genEquipUnitIduPowerSupply1AlarmAdmin = MibScalar((1, 3, 6, 1, 4, 1, 2281, 10, 1, 1, 12), EnableDisable()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: genEquipUnitIduPowerSupply1AlarmAdmin.setStatus('mandatory')
genEquipUnitIduPowerSupply2AlarmAdmin = MibScalar((1, 3, 6, 1, 4, 1, 2281, 10, 1, 1, 13), EnableDisable()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: genEquipUnitIduPowerSupply2AlarmAdmin.setStatus('mandatory')
genEquipUnitInfoNG = MibIdentifier((1, 3, 6, 1, 4, 1, 2281, 10, 1, 1, 14))
genEquipUnitName = MibScalar((1, 3, 6, 1, 4, 1, 2281, 10, 1, 1, 14, 1), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: genEquipUnitName.setStatus('mandatory')
genEquipUnitDescription = MibScalar((1, 3, 6, 1, 4, 1, 2281, 10, 1, 1, 14, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: genEquipUnitDescription.setStatus('mandatory')
genEquipUnitContactPerson = MibScalar((1, 3, 6, 1, 4, 1, 2281, 10, 1, 1, 14, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: genEquipUnitContactPerson.setStatus('mandatory')
genEquipUnitLocation = MibScalar((1, 3, 6, 1, 4, 1, 2281, 10, 1, 1, 14, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: genEquipUnitLocation.setStatus('mandatory')
genEquipUnitLatitude = MibScalar((1, 3, 6, 1, 4, 1, 2281, 10, 1, 1, 14, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: genEquipUnitLatitude.setStatus('mandatory')
genEquipUnitLongitude = MibScalar((1, 3, 6, 1, 4, 1, 2281, 10, 1, 1, 14, 6), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: genEquipUnitLongitude.setStatus('mandatory')
genEquipUnitIpAddressType = MibScalar((1, 3, 6, 1, 4, 1, 2281, 10, 1, 1, 14, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("ipv4", 0), ("ipv6", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: genEquipUnitIpAddressType.setStatus('mandatory')
genEquipUnitInfoNGTdmInterfaceStandard = MibScalar((1, 3, 6, 1, 4, 1, 2281, 10, 1, 1, 14, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("ets1", 0), ("ansi", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: genEquipUnitInfoNGTdmInterfaceStandard.setStatus('mandatory')
genEquipUnitInfoNTP = MibIdentifier((1, 3, 6, 1, 4, 1, 2281, 10, 1, 1, 11, 6))
genEquipUnitInfoNTPAdmin = MibScalar((1, 3, 6, 1, 4, 1, 2281, 10, 1, 1, 11, 6, 1), EnableDisable()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: genEquipUnitInfoNTPAdmin.setStatus('mandatory')
genEquipUnitInfoNTPServerIP = MibScalar((1, 3, 6, 1, 4, 1, 2281, 10, 1, 1, 11, 6, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: genEquipUnitInfoNTPServerIP.setStatus('mandatory')
genEquipUnitInfoNTPStatus = MibScalar((1, 3, 6, 1, 4, 1, 2281, 10, 1, 1, 11, 6, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("down", 0), ("up", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipUnitInfoNTPStatus.setStatus('mandatory')
genEquipUnitInfoNTPSync = MibScalar((1, 3, 6, 1, 4, 1, 2281, 10, 1, 1, 11, 6, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipUnitInfoNTPSync.setStatus('mandatory')
genEquipUnitInfoNTPPollInterval = MibScalar((1, 3, 6, 1, 4, 1, 2281, 10, 1, 1, 11, 6, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(64, 1024))).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipUnitInfoNTPPollInterval.setStatus('mandatory')
genEquipUnitInfoNtpStatusTable = MibTable((1, 3, 6, 1, 4, 1, 2281, 10, 1, 1, 11, 6, 6), )
if mibBuilder.loadTexts: genEquipUnitInfoNtpStatusTable.setStatus('mandatory')
genEquipUnitInfoNtpStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2281, 10, 1, 1, 11, 6, 6, 1), ).setIndexNames((0, "MWRM-UNIT-MIB", "genEquipUnitInfoNtpStatusIndex"))
if mibBuilder.loadTexts: genEquipUnitInfoNtpStatusEntry.setStatus('mandatory')
genEquipUnitInfoNtpStatusIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 1, 1, 11, 6, 6, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipUnitInfoNtpStatusIndex.setStatus('mandatory')
genEquipUnitInfoNtpStatusPollInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 1, 1, 11, 6, 6, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1024))).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipUnitInfoNtpStatusPollInterval.setStatus('mandatory')
genEquipUnitInfoNtpStatusSyncServerIP = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 1, 1, 11, 6, 6, 1, 3), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipUnitInfoNtpStatusSyncServerIP.setStatus('mandatory')
genEquipUnitInfoNtpStatusLockState = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 1, 1, 11, 6, 6, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("none", 0), ("local", 1), ("locked", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipUnitInfoNtpStatusLockState.setStatus('mandatory')
genEquipUnitInfoNtpConfigTable = MibTable((1, 3, 6, 1, 4, 1, 2281, 10, 1, 1, 11, 6, 7), )
if mibBuilder.loadTexts: genEquipUnitInfoNtpConfigTable.setStatus('mandatory')
genEquipUnitInfoNtpConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2281, 10, 1, 1, 11, 6, 7, 1), ).setIndexNames((0, "MWRM-UNIT-MIB", "genEquipUnitInfoNtpConfigIndex"))
if mibBuilder.loadTexts: genEquipUnitInfoNtpConfigEntry.setStatus('mandatory')
genEquipUnitInfoNtpConfigIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 1, 1, 11, 6, 7, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipUnitInfoNtpConfigIndex.setStatus('mandatory')
genEquipUnitInfoNtpConfigAdmin = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 1, 1, 11, 6, 7, 1, 2), EnableDisable()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: genEquipUnitInfoNtpConfigAdmin.setStatus('mandatory')
genEquipUnitInfoNtpConfigVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 1, 1, 11, 6, 7, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("ntpv3", 1), ("ntpv4", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: genEquipUnitInfoNtpConfigVersion.setStatus('mandatory')
genEquipUnitInfoNtpConfigServerIPaddress1 = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 1, 1, 11, 6, 7, 1, 4), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: genEquipUnitInfoNtpConfigServerIPaddress1.setStatus('mandatory')
genEquipUnitInfoNtpConfigServerIPaddress2 = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 1, 1, 11, 6, 7, 1, 5), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: genEquipUnitInfoNtpConfigServerIPaddress2.setStatus('mandatory')
genEquipUnitInventory = MibIdentifier((1, 3, 6, 1, 4, 1, 2281, 10, 1, 2))
genEquipUnitIDUSerialNumber = MibScalar((1, 3, 6, 1, 4, 1, 2281, 10, 1, 2, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipUnitIDUSerialNumber.setStatus('mandatory')
genEquipUnitIDUPartNumber = MibScalar((1, 3, 6, 1, 4, 1, 2281, 10, 1, 2, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipUnitIDUPartNumber.setStatus('mandatory')
genEquipUnitInventoryNG = MibIdentifier((1, 3, 6, 1, 4, 1, 2281, 10, 1, 2, 10))
genEquipInventoryTable = MibTable((1, 3, 6, 1, 4, 1, 2281, 10, 1, 2, 10, 1), )
if mibBuilder.loadTexts: genEquipInventoryTable.setStatus('mandatory')
genEquipInventoryEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2281, 10, 1, 2, 10, 1, 1), ).setIndexNames((0, "MWRM-UNIT-MIB", "genEquipInventorySlotIndex"))
if mibBuilder.loadTexts: genEquipInventoryEntry.setStatus('mandatory')
genEquipInventorySlotIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 1, 2, 10, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipInventorySlotIndex.setStatus('mandatory')
genEquipInventoryCardName = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 1, 2, 10, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipInventoryCardName.setStatus('mandatory')
genEquipInventoryCardType = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 1, 2, 10, 1, 1, 3), InventoryCardType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipInventoryCardType.setStatus('mandatory')
genEquipInventoryCardSubType = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 1, 2, 10, 1, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipInventoryCardSubType.setStatus('mandatory')
genEquipInventoryPartNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 1, 2, 10, 1, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipInventoryPartNumber.setStatus('mandatory')
genEquipInventorySerialNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 1, 2, 10, 1, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipInventorySerialNumber.setStatus('mandatory')
genEquipInventoryNumberWorkingDays = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 1, 2, 10, 1, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipInventoryNumberWorkingDays.setStatus('mandatory')
genEquipUnitLicenseInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 2281, 10, 1, 3))
genEquipUnitLicenseType = MibScalar((1, 3, 6, 1, 4, 1, 2281, 10, 1, 3, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("default", 0), ("normal", 1), ("demo", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipUnitLicenseType.setStatus('mandatory')
genEquipUnitLicenseCode = MibScalar((1, 3, 6, 1, 4, 1, 2281, 10, 1, 3, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: genEquipUnitLicenseCode.setStatus('mandatory')
genEquipUnitACMLicense = MibScalar((1, 3, 6, 1, 4, 1, 2281, 10, 1, 3, 3), AllowedNotAllowed()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipUnitACMLicense.setStatus('mandatory')
genEquipUnitSwitchAppLicense = MibScalar((1, 3, 6, 1, 4, 1, 2281, 10, 1, 3, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 8))).clone(namedValues=NamedValues(("single-pipe", 0), ("switch", 8)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipUnitSwitchAppLicense.setStatus('mandatory')
genEquipUnitCapacityLicense = MibScalar((1, 3, 6, 1, 4, 1, 2281, 10, 1, 3, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(10, 510))).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipUnitCapacityLicense.setStatus('mandatory')
genEquipUnitLicenseDemoAdmin = MibScalar((1, 3, 6, 1, 4, 1, 2281, 10, 1, 3, 6), EnableDisable()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: genEquipUnitLicenseDemoAdmin.setStatus('mandatory')
genEquipUnitLicenseDemoTimer = MibScalar((1, 3, 6, 1, 4, 1, 2281, 10, 1, 3, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipUnitLicenseDemoTimer.setStatus('mandatory')
genEquipUnitLicenseSyncU = MibScalar((1, 3, 6, 1, 4, 1, 2281, 10, 1, 3, 8), AllowedNotAllowed()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipUnitLicenseSyncU.setStatus('mandatory')
genEquipUnitLicenseNetworkResiliency = MibScalar((1, 3, 6, 1, 4, 1, 2281, 10, 1, 3, 9), AllowedNotAllowed()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipUnitLicenseNetworkResiliency.setStatus('mandatory')
genEquipUnitLicenseTDMCapacity = MibScalar((1, 3, 6, 1, 4, 1, 2281, 10, 1, 3, 10), AllowedNotAllowed()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipUnitLicenseTDMCapacity.setStatus('mandatory')
genEquipUnitLicenseTDMCapacityValue = MibScalar((1, 3, 6, 1, 4, 1, 2281, 10, 1, 3, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipUnitLicenseTDMCapacityValue.setStatus('mandatory')
genEquipUnitLicensePerUsage = MibScalar((1, 3, 6, 1, 4, 1, 2281, 10, 1, 3, 12), AllowedNotAllowed()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipUnitLicensePerUsage.setStatus('mandatory')
genEquipUnitLicenseAsymScripts = MibScalar((1, 3, 6, 1, 4, 1, 2281, 10, 1, 3, 13), AllowedNotAllowed()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipUnitLicenseAsymScripts.setStatus('mandatory')
genEquipUnitLicenseDateCode = MibScalar((1, 3, 6, 1, 4, 1, 2281, 10, 1, 3, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipUnitLicenseDateCode.setStatus('mandatory')
genEquipUnitLicenseValidationNumber = MibScalar((1, 3, 6, 1, 4, 1, 2281, 10, 1, 3, 15), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipUnitLicenseValidationNumber.setStatus('mandatory')
genEquipUnitLicenseFeatureTable = MibTable((1, 3, 6, 1, 4, 1, 2281, 10, 1, 3, 16), )
if mibBuilder.loadTexts: genEquipUnitLicenseFeatureTable.setStatus('mandatory')
genEquipUnitLicenseFeatureEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2281, 10, 1, 3, 16, 1), ).setIndexNames((0, "MWRM-UNIT-MIB", "genEquipUnitLicenseFeatureId"))
if mibBuilder.loadTexts: genEquipUnitLicenseFeatureEntry.setStatus('mandatory')
genEquipUnitLicenseFeatureId = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 1, 3, 16, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipUnitLicenseFeatureId.setStatus('mandatory')
genEquipUnitLicenseFeatureName = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 1, 3, 16, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipUnitLicenseFeatureName.setStatus('mandatory')
genEquipUnitLicenseFeatureDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 1, 3, 16, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipUnitLicenseFeatureDescription.setStatus('mandatory')
genEquipUnitLicenseFeatureIsUsed = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 1, 3, 16, 1, 4), LicenseGeneric()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipUnitLicenseFeatureIsUsed.setStatus('mandatory')
genEquipUnitLicenseFeatureIsAllowed = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 1, 3, 16, 1, 5), LicenseGeneric()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipUnitLicenseFeatureIsAllowed.setStatus('mandatory')
genEquipUnitLicenseViolationStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 1, 3, 16, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("ok", 0), ("violated", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipUnitLicenseViolationStatus.setStatus('mandatory')
genEquipUnitLicenseCutThrough = MibScalar((1, 3, 6, 1, 4, 1, 2281, 10, 1, 3, 20), AllowedNotAllowed()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipUnitLicenseCutThrough.setStatus('mandatory')
genEquipUnitLicenseTdmInterfaceStandard = MibScalar((1, 3, 6, 1, 4, 1, 2281, 10, 1, 3, 21), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("ets1", 0), ("ansi", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipUnitLicenseTdmInterfaceStandard.setStatus('mandatory')
genEquipUnitExternalAlarms = MibIdentifier((1, 3, 6, 1, 4, 1, 2281, 10, 1, 4))
genEquipUnitAlarmInput = MibIdentifier((1, 3, 6, 1, 4, 1, 2281, 10, 1, 4, 1))
genEquipUnitAlarmInputTable = MibTable((1, 3, 6, 1, 4, 1, 2281, 10, 1, 4, 1, 1), )
if mibBuilder.loadTexts: genEquipUnitAlarmInputTable.setStatus('mandatory')
genEquipUnitAlarmInputEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2281, 10, 1, 4, 1, 1, 1), ).setIndexNames((0, "MWRM-UNIT-MIB", "genEquipUnitAlarmInputCounter"))
if mibBuilder.loadTexts: genEquipUnitAlarmInputEntry.setStatus('mandatory')
genEquipUnitAlarmInputCounter = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 1, 4, 1, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipUnitAlarmInputCounter.setStatus('mandatory')
genEquipUnitAlarmInputAdmin = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 1, 4, 1, 1, 1, 2), EnableDisableSMI2()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: genEquipUnitAlarmInputAdmin.setStatus('mandatory')
genEquipUnitAlarmInputText = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 1, 4, 1, 1, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 99))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: genEquipUnitAlarmInputText.setStatus('mandatory')
genEquipUnitAlarmInputSeverity = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 1, 4, 1, 1, 1, 4), InputSeverity()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: genEquipUnitAlarmInputSeverity.setStatus('mandatory')
genEquipUnitAlarmInputState = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 1, 4, 1, 1, 1, 5), OffOn()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipUnitAlarmInputState.setStatus('mandatory')
genEquipUnitAlarmOutput = MibIdentifier((1, 3, 6, 1, 4, 1, 2281, 10, 1, 4, 2))
genEquipUnitAlarmOutputTable = MibTable((1, 3, 6, 1, 4, 1, 2281, 10, 1, 4, 2, 1), )
if mibBuilder.loadTexts: genEquipUnitAlarmOutputTable.setStatus('mandatory')
genEquipUnitAlarmOutputEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2281, 10, 1, 4, 2, 1, 1), ).setIndexNames((0, "MWRM-UNIT-MIB", "genEquipUnitAlarmOutputCounter"))
if mibBuilder.loadTexts: genEquipUnitAlarmOutputEntry.setStatus('mandatory')
genEquipUnitAlarmOutputCounter = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 1, 4, 2, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipUnitAlarmOutputCounter.setStatus('mandatory')
genEquipUnitAlarmOutputAdmin = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 1, 4, 2, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1), ("test", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: genEquipUnitAlarmOutputAdmin.setStatus('mandatory')
genEquipUnitAlarmOutputStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 1, 4, 2, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("off", 0), ("on", 1), ("on-test", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipUnitAlarmOutputStatus.setStatus('mandatory')
genEquipUnitAlarmOutputGroup = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 1, 4, 2, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("communication", 1), ("quality-of-service", 2), ("processing", 3), ("equipment", 4), ("environmental", 5), ("all-groups", 6)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: genEquipUnitAlarmOutputGroup.setStatus('mandatory')
genEquipUnitShelf = MibIdentifier((1, 3, 6, 1, 4, 1, 2281, 10, 1, 5))
genEquipUnitShelfInstallation = MibScalar((1, 3, 6, 1, 4, 1, 2281, 10, 1, 5, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("standalone", 0), ("chassisModule", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipUnitShelfInstallation.setStatus('mandatory')
genEquipUnitShelfModuleRole = MibScalar((1, 3, 6, 1, 4, 1, 2281, 10, 1, 5, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("main", 0), ("extention", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipUnitShelfModuleRole.setStatus('mandatory')
genEquipUnitShelfSlotLabel = MibScalar((1, 3, 6, 1, 4, 1, 2281, 10, 1, 5, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: genEquipUnitShelfSlotLabel.setStatus('mandatory')
genEquipUnitShelfArchivesOperationStatus = MibScalar((1, 3, 6, 1, 4, 1, 2281, 10, 1, 5, 4), ProgressStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipUnitShelfArchivesOperationStatus.setStatus('mandatory')
genEquipUnitShelfManagmentTable = MibTable((1, 3, 6, 1, 4, 1, 2281, 10, 1, 5, 5), )
if mibBuilder.loadTexts: genEquipUnitShelfManagmentTable.setStatus('mandatory')
genEquipUnitShelfManagmentEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2281, 10, 1, 5, 5, 1), ).setIndexNames((0, "MWRM-UNIT-MIB", "genEquipUnitShelfManagmentSlot"))
if mibBuilder.loadTexts: genEquipUnitShelfManagmentEntry.setStatus('mandatory')
genEquipUnitShelfManagmentSlot = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 1, 5, 5, 1, 1), SlotId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipUnitShelfManagmentSlot.setStatus('mandatory')
genEquipUnitShelfManagmentSlotPopulation = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 1, 5, 5, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("not-present", 0), ("present", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipUnitShelfManagmentSlotPopulation.setStatus('mandatory')
genEquipUnitShelfManagmentCommunicationStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 1, 5, 5, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("communicationDown", 0), ("communicationUp", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipUnitShelfManagmentCommunicationStatus.setStatus('mandatory')
genEquipUnitShelfManagmentSlotMostSevereAlarm = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 1, 5, 5, 1, 4), Severity()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipUnitShelfManagmentSlotMostSevereAlarm.setStatus('mandatory')
genEquipUnitShelfManagmentMngSwCommand = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 1, 5, 5, 1, 5), SwCommand()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: genEquipUnitShelfManagmentMngSwCommand.setStatus('mandatory')
genEquipUnitShelfManagmentSlotReset = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 1, 5, 5, 1, 6), OffOn()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: genEquipUnitShelfManagmentSlotReset.setStatus('mandatory')
genEquipUnitShelfManagmentSlotIp = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 1, 5, 5, 1, 7), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: genEquipUnitShelfManagmentSlotIp.setStatus('mandatory')
genEquipUnitShelfReset = MibScalar((1, 3, 6, 1, 4, 1, 2281, 10, 1, 5, 6), OffOn()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: genEquipUnitShelfReset.setStatus('mandatory')
genEquipUnitshelfAllODUAdmin = MibScalar((1, 3, 6, 1, 4, 1, 2281, 10, 1, 5, 7), EnableDisable()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: genEquipUnitshelfAllODUAdmin.setStatus('mandatory')
genEquipUnitShelfSlotConfigTable = MibTable((1, 3, 6, 1, 4, 1, 2281, 10, 1, 5, 8), )
if mibBuilder.loadTexts: genEquipUnitShelfSlotConfigTable.setStatus('mandatory')
genEquipUnitShelfSlotConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2281, 10, 1, 5, 8, 1), ).setIndexNames((0, "MWRM-UNIT-MIB", "genEquipUnitShelfSlotConfigSlotID"))
if mibBuilder.loadTexts: genEquipUnitShelfSlotConfigEntry.setStatus('mandatory')
genEquipUnitShelfSlotConfigSlotID = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 1, 5, 8, 1, 1), SlotId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipUnitShelfSlotConfigSlotID.setStatus('mandatory')
genEquipUnitShelfSlotConfigExpectedCardType = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 1, 5, 8, 1, 2), InventoryCardType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: genEquipUnitShelfSlotConfigExpectedCardType.setStatus('mandatory')
genEquipUnitShelfSlotConfigLabel = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 1, 5, 8, 1, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: genEquipUnitShelfSlotConfigLabel.setStatus('mandatory')
genEquipUnitShelfSlotConfigAdmin = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 1, 5, 8, 1, 4), EnableDisable()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: genEquipUnitShelfSlotConfigAdmin.setStatus('mandatory')
genEquipUnitShelfSlotConfigSlotReset = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 1, 5, 8, 1, 5), OffOn()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: genEquipUnitShelfSlotConfigSlotReset.setStatus('mandatory')
genEquipUnitShelfTccConfigTable = MibTable((1, 3, 6, 1, 4, 1, 2281, 10, 1, 5, 9), )
if mibBuilder.loadTexts: genEquipUnitShelfTccConfigTable.setStatus('mandatory')
genEquipUnitShelfTccConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2281, 10, 1, 5, 9, 1), ).setIndexNames((0, "MWRM-UNIT-MIB", "genEquipUnitShelfTccConfigSlotID"))
if mibBuilder.loadTexts: genEquipUnitShelfTccConfigEntry.setStatus('mandatory')
genEquipUnitShelfTccConfigSlotID = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 1, 5, 9, 1, 1), SlotId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipUnitShelfTccConfigSlotID.setStatus('mandatory')
genEquipUnitShelfTccConfigExpectedCardType = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 1, 5, 9, 1, 2), InventoryCardType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: genEquipUnitShelfTccConfigExpectedCardType.setStatus('mandatory')
genEquipUnitShelfTccConfigLabel = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 1, 5, 9, 1, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: genEquipUnitShelfTccConfigLabel.setStatus('mandatory')
genEquipUnitShelfTccConfigAdmin = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 1, 5, 9, 1, 4), EnableDisable()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: genEquipUnitShelfTccConfigAdmin.setStatus('mandatory')
genEquipUnitShelfTccConfigReset = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 1, 5, 9, 1, 5), OffOn()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: genEquipUnitShelfTccConfigReset.setStatus('mandatory')
genEquipUnitShelfSlotStatusTable = MibTable((1, 3, 6, 1, 4, 1, 2281, 10, 1, 5, 10), )
if mibBuilder.loadTexts: genEquipUnitShelfSlotStatusTable.setStatus('mandatory')
genEquipUnitShelfSlotStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2281, 10, 1, 5, 10, 1), ).setIndexNames((0, "MWRM-UNIT-MIB", "genEquipUnitShelfSlotStatusSlotID"))
if mibBuilder.loadTexts: genEquipUnitShelfSlotStatusEntry.setStatus('mandatory')
genEquipUnitShelfSlotStatusSlotID = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 1, 5, 10, 1, 1), SlotId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipUnitShelfSlotStatusSlotID.setStatus('mandatory')
genEquipUnitShelfSlotStatusOccupancy = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 1, 5, 10, 1, 2), CardOccupancy()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipUnitShelfSlotStatusOccupancy.setStatus('mandatory')
genEquipUnitShelfSlotStatusAllowedCardTypes = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 1, 5, 10, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipUnitShelfSlotStatusAllowedCardTypes.setStatus('mandatory')
genEquipUnitShelfSlotStatusCardType = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 1, 5, 10, 1, 4), InventoryCardType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipUnitShelfSlotStatusCardType.setStatus('mandatory')
genEquipUnitShelfSlotStatusOperationalState = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 1, 5, 10, 1, 5), OperState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipUnitShelfSlotStatusOperationalState.setStatus('mandatory')
genEquipUnitShelfSlotStatusCommunication = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 1, 5, 10, 1, 6), DownUp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipUnitShelfSlotStatusCommunication.setStatus('mandatory')
genEquipUnitShelfTccStatusTable = MibTable((1, 3, 6, 1, 4, 1, 2281, 10, 1, 5, 11), )
if mibBuilder.loadTexts: genEquipUnitShelfTccStatusTable.setStatus('mandatory')
genEquipUnitShelfTccStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2281, 10, 1, 5, 11, 1), ).setIndexNames((0, "MWRM-UNIT-MIB", "genEquipUnitShelfTccStatusSlotID"))
if mibBuilder.loadTexts: genEquipUnitShelfTccStatusEntry.setStatus('mandatory')
genEquipUnitShelfTccStatusSlotID = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 1, 5, 11, 1, 1), SlotId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipUnitShelfTccStatusSlotID.setStatus('mandatory')
genEquipUnitShelfTccStatusOccupancy = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 1, 5, 11, 1, 2), CardOccupancy()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipUnitShelfTccStatusOccupancy.setStatus('mandatory')
genEquipUnitShelfTccStatusAllowedCardTypes = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 1, 5, 11, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipUnitShelfTccStatusAllowedCardTypes.setStatus('mandatory')
genEquipUnitShelfTccStatusCardType = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 1, 5, 11, 1, 4), InventoryCardType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipUnitShelfTccStatusCardType.setStatus('mandatory')
genEquipUnitShelfTccStatusOperationalState = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 1, 5, 11, 1, 5), OperState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipUnitShelfTccStatusOperationalState.setStatus('mandatory')
genEquipUnitShelfTccStatusCommunication = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 1, 5, 11, 1, 6), DownUp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipUnitShelfTccStatusCommunication.setStatus('mandatory')
genEquipUnitShelfManagmentSeverityTable = MibTable((1, 3, 6, 1, 4, 1, 2281, 10, 1, 5, 12), )
if mibBuilder.loadTexts: genEquipUnitShelfManagmentSeverityTable.setStatus('mandatory')
genEquipUnitShelfManagmentSeverityEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2281, 10, 1, 5, 12, 1), ).setIndexNames((0, "MWRM-UNIT-MIB", "genEquipUnitShelfManagmentSeveritySlot"))
if mibBuilder.loadTexts: genEquipUnitShelfManagmentSeverityEntry.setStatus('mandatory')
genEquipUnitShelfManagmentSeveritySlot = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 1, 5, 12, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipUnitShelfManagmentSeveritySlot.setStatus('mandatory')
genEquipUnitShelfManagmentSeverityCritical = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 1, 5, 12, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipUnitShelfManagmentSeverityCritical.setStatus('mandatory')
genEquipUnitShelfManagmentSeverityMajor = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 1, 5, 12, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipUnitShelfManagmentSeverityMajor.setStatus('mandatory')
genEquipUnitShelfManagmentSeverityMinor = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 1, 5, 12, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipUnitShelfManagmentSeverityMinor.setStatus('mandatory')
genEquipUnitShelfManagmentSeverityWarning = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 1, 5, 12, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipUnitShelfManagmentSeverityWarning.setStatus('mandatory')
genEquipUnitShelfManagmentSeverityIndeterminate = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 1, 5, 12, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipUnitShelfManagmentSeverityIndeterminate.setStatus('mandatory')
genEquipUnitShelfPdcFanStatusTable = MibTable((1, 3, 6, 1, 4, 1, 2281, 10, 1, 5, 13), )
if mibBuilder.loadTexts: genEquipUnitShelfPdcFanStatusTable.setStatus('mandatory')
genEquipUnitShelfPdcFanStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2281, 10, 1, 5, 13, 1), ).setIndexNames((0, "MWRM-UNIT-MIB", "genEquipUnitShelfPdcFanStatusPdcFanId"))
if mibBuilder.loadTexts: genEquipUnitShelfPdcFanStatusEntry.setStatus('mandatory')
genEquipUnitShelfPdcFanStatusPdcFanId = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 1, 5, 13, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipUnitShelfPdcFanStatusPdcFanId.setStatus('mandatory')
genEquipUnitShelfPdcFanStatusPdcFanExMonitor = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 1, 5, 13, 1, 2), EnableDisable()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: genEquipUnitShelfPdcFanStatusPdcFanExMonitor.setStatus('mandatory')
genEquipUnitShelfPdcFanStatusPdcFanOccupancy = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 1, 5, 13, 1, 3), CardOccupancy()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipUnitShelfPdcFanStatusPdcFanOccupancy.setStatus('mandatory')
genEquipUnitShelfPdcFanStatusPdcFanCardType = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 1, 5, 13, 1, 4), InventoryCardType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipUnitShelfPdcFanStatusPdcFanCardType.setStatus('mandatory')
genEquipUnitShelfAbcMuxTable = MibTable((1, 3, 6, 1, 4, 1, 2281, 10, 1, 5, 14), )
if mibBuilder.loadTexts: genEquipUnitShelfAbcMuxTable.setStatus('mandatory')
genEquipUnitShelfAbcMuxEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2281, 10, 1, 5, 14, 1), ).setIndexNames((0, "MWRM-UNIT-MIB", "genEquipUnitShelfAbcMuxNumber"))
if mibBuilder.loadTexts: genEquipUnitShelfAbcMuxEntry.setStatus('mandatory')
genEquipUnitShelfAbcMuxNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 1, 5, 14, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipUnitShelfAbcMuxNumber.setStatus('mandatory')
genEquipUnitShelfAbcMuxAdmin = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 1, 5, 14, 1, 2), EnableDisable()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: genEquipUnitShelfAbcMuxAdmin.setStatus('mandatory')
genEquipUnitShelfMultiplexTrafficSource = MibScalar((1, 3, 6, 1, 4, 1, 2281, 10, 1, 5, 23), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 12))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: genEquipUnitShelfMultiplexTrafficSource.setStatus('mandatory')
genEquipUnitShelfMaskUnderVoltageAlarmFirstPowerFeed = MibScalar((1, 3, 6, 1, 4, 1, 2281, 10, 1, 5, 24), EnableDisable()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: genEquipUnitShelfMaskUnderVoltageAlarmFirstPowerFeed.setStatus('mandatory')
genEquipUnitShelfMaskUnderVoltageAlarmSecondPowerFeed = MibScalar((1, 3, 6, 1, 4, 1, 2281, 10, 1, 5, 25), EnableDisable()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: genEquipUnitShelfMaskUnderVoltageAlarmSecondPowerFeed.setStatus('mandatory')
genEquipProtection = MibIdentifier((1, 3, 6, 1, 4, 1, 2281, 10, 1, 6))
genEquipProtectionAdmin = MibScalar((1, 3, 6, 1, 4, 1, 2281, 10, 1, 6, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(2, 3, 4, 5))).clone(namedValues=NamedValues(("protection1Plus1Hsb", 2), ("protectionDisable", 3), ("protection2Plus2Hsb", 4), ("protection2Plus0Hsb", 5)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: genEquipProtectionAdmin.setStatus('mandatory')
genEquipProtectionMode = MibScalar((1, 3, 6, 1, 4, 1, 2281, 10, 1, 6, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("active", 0), ("standby", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipProtectionMode.setStatus('mandatory')
genEquipProtectionMateIPAddr = MibScalar((1, 3, 6, 1, 4, 1, 2281, 10, 1, 6, 3), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipProtectionMateIPAddr.setStatus('mandatory')
genEquipProtectionMateMACAddr = MibScalar((1, 3, 6, 1, 4, 1, 2281, 10, 1, 6, 4), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipProtectionMateMACAddr.setStatus('mandatory')
genEquipProtectionRadioExcessiveBERSwitch = MibScalar((1, 3, 6, 1, 4, 1, 2281, 10, 1, 6, 5), EnableDisable()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: genEquipProtectionRadioExcessiveBERSwitch.setStatus('mandatory')
genEquipProtectionLockout = MibScalar((1, 3, 6, 1, 4, 1, 2281, 10, 1, 6, 6), OffOn()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: genEquipProtectionLockout.setStatus('mandatory')
genEquipProtectionForceSwitch = MibScalar((1, 3, 6, 1, 4, 1, 2281, 10, 1, 6, 7), OffOn()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: genEquipProtectionForceSwitch.setStatus('mandatory')
genEquipProtectionManualSwitch = MibScalar((1, 3, 6, 1, 4, 1, 2281, 10, 1, 6, 8), OffOn()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: genEquipProtectionManualSwitch.setStatus('mandatory')
genEquipProtectionCopyToMateComand = MibScalar((1, 3, 6, 1, 4, 1, 2281, 10, 1, 6, 9), OffOn()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: genEquipProtectionCopyToMateComand.setStatus('mandatory')
genEquipProtectionCopyToMateStatus = MibScalar((1, 3, 6, 1, 4, 1, 2281, 10, 1, 6, 10), ProgressStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipProtectionCopyToMateStatus.setStatus('mandatory')
genEquipProtectionMultiUnitLAGAdmin = MibScalar((1, 3, 6, 1, 4, 1, 2281, 10, 1, 6, 11), EnableDisable()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: genEquipProtectionMultiUnitLAGAdmin.setStatus('mandatory')
genEquipProtectionRevertiveAdmin = MibScalar((1, 3, 6, 1, 4, 1, 2281, 10, 1, 6, 12), EnableDisable()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: genEquipProtectionRevertiveAdmin.setStatus('mandatory')
genEquipProtectionRevertivePrimaryIDU = MibScalar((1, 3, 6, 1, 4, 1, 2281, 10, 1, 6, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("lower", 0), ("upper", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: genEquipProtectionRevertivePrimaryIDU.setStatus('mandatory')
genEquipProtectionRevertiveMinTimer = MibScalar((1, 3, 6, 1, 4, 1, 2281, 10, 1, 6, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 30))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: genEquipProtectionRevertiveMinTimer.setStatus('mandatory')
genEquipProtectionRevertiveMaxNumOfTries = MibScalar((1, 3, 6, 1, 4, 1, 2281, 10, 1, 6, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 10))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: genEquipProtectionRevertiveMaxNumOfTries.setStatus('mandatory')
genEquipProtectionRevertiveTimerMultiplier = MibScalar((1, 3, 6, 1, 4, 1, 2281, 10, 1, 6, 16), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 10))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: genEquipProtectionRevertiveTimerMultiplier.setStatus('mandatory')
genEquipProtectionAspRevertive = MibScalar((1, 3, 6, 1, 4, 1, 2281, 10, 1, 6, 17), EnableDisable()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: genEquipProtectionAspRevertive.setStatus('mandatory')
genEquipDiversity = MibIdentifier((1, 3, 6, 1, 4, 1, 2281, 10, 1, 7))
genEquipDiversityType = MibScalar((1, 3, 6, 1, 4, 1, 2281, 10, 1, 7, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("none", 1), ("space-diversity", 2), ("frequency-diversity", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: genEquipDiversityType.setStatus('mandatory')
genEquipDiversityRevertiveMode = MibScalar((1, 3, 6, 1, 4, 1, 2281, 10, 1, 7, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("non-revertive", 1), ("revertive", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: genEquipDiversityRevertiveMode.setStatus('mandatory')
genEquipDiversityPrimaryRadio = MibScalar((1, 3, 6, 1, 4, 1, 2281, 10, 1, 7, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("upper-radio", 1), ("lower-radio", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: genEquipDiversityPrimaryRadio.setStatus('mandatory')
genEquipDiversityRevertiveTimer = MibScalar((1, 3, 6, 1, 4, 1, 2281, 10, 1, 7, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 15))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: genEquipDiversityRevertiveTimer.setStatus('mandatory')
genEquipDiversityForceActive = MibScalar((1, 3, 6, 1, 4, 1, 2281, 10, 1, 7, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("none", 0), ("local-radio", 1), ("mate-radio", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: genEquipDiversityForceActive.setStatus('mandatory')
genEquipDiversitySwitchCounter = MibScalar((1, 3, 6, 1, 4, 1, 2281, 10, 1, 7, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipDiversitySwitchCounter.setStatus('mandatory')
genEquipDiversitySwitchCounterClear = MibScalar((1, 3, 6, 1, 4, 1, 2281, 10, 1, 7, 7), OffOn()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: genEquipDiversitySwitchCounterClear.setStatus('mandatory')
genEquipDiversityReceiveRadio = MibScalar((1, 3, 6, 1, 4, 1, 2281, 10, 1, 7, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("lower-idu", 0), ("upper-idu", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipDiversityReceiveRadio.setStatus('mandatory')
genEquipFault = MibIdentifier((1, 3, 6, 1, 4, 1, 2281, 10, 3))
genEquipCurrentAlarm = MibIdentifier((1, 3, 6, 1, 4, 1, 2281, 10, 3, 1))
genEquipCurrentAlarmLastChangeCounter = MibScalar((1, 3, 6, 1, 4, 1, 2281, 10, 3, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipCurrentAlarmLastChangeCounter.setStatus('mandatory')
genEquipCurrentAlarmTable = MibTable((1, 3, 6, 1, 4, 1, 2281, 10, 3, 1, 2), )
if mibBuilder.loadTexts: genEquipCurrentAlarmTable.setStatus('mandatory')
genEquipCurrentAlarmEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2281, 10, 3, 1, 2, 1), ).setIndexNames((0, "MWRM-UNIT-MIB", "genEquipCurrentAlarmCounter"))
if mibBuilder.loadTexts: genEquipCurrentAlarmEntry.setStatus('mandatory')
genEquipCurrentAlarmCounter = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 3, 1, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipCurrentAlarmCounter.setStatus('mandatory')
genEquipCurrentAlarmRaisedTimeT = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 3, 1, 2, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipCurrentAlarmRaisedTimeT.setStatus('mandatory')
genEquipCurrentAlarmId = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 3, 1, 2, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipCurrentAlarmId.setStatus('mandatory')
genEquipCurrentAlarmName = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 3, 1, 2, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipCurrentAlarmName.setStatus('mandatory')
genEquipCurrentAlarmInstance = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 3, 1, 2, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipCurrentAlarmInstance.setStatus('mandatory')
genEquipCurrentAlarmSeverity = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 3, 1, 2, 1, 6), Severity().clone('indeterminate')).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipCurrentAlarmSeverity.setStatus('mandatory')
genEquipCurrentAlarmIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 3, 1, 2, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipCurrentAlarmIfIndex.setStatus('mandatory')
genEquipCurrentAlarmModule = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 3, 1, 2, 1, 8), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipCurrentAlarmModule.setStatus('mandatory')
genEquipCurrentAlarmDesc = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 3, 1, 2, 1, 9), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipCurrentAlarmDesc.setStatus('mandatory')
genEquipCurrentAlarmProbableCause = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 3, 1, 2, 1, 10), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipCurrentAlarmProbableCause.setStatus('mandatory')
genEquipCurrentAlarmCorrectiveActions = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 3, 1, 2, 1, 11), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipCurrentAlarmCorrectiveActions.setStatus('mandatory')
genEquipCurrentAlarmState = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 3, 1, 2, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("cleared", 0), ("raised", 1), ("event", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipCurrentAlarmState.setStatus('mandatory')
genEquipCurrentAlarmSlotId = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 3, 1, 2, 1, 13), SlotId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipCurrentAlarmSlotId.setStatus('mandatory')
genEquipCurrentAlarmAdditionalInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 3, 1, 2, 1, 14), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipCurrentAlarmAdditionalInfo.setStatus('mandatory')
genEquipCurrentAlarmUserText = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 3, 1, 2, 1, 15), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipCurrentAlarmUserText.setStatus('mandatory')
genEquipMostSevereAlarm = MibScalar((1, 3, 6, 1, 4, 1, 2281, 10, 3, 1, 3), Severity()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipMostSevereAlarm.setStatus('mandatory')
genEquipAlarmConfigDefault = MibScalar((1, 3, 6, 1, 4, 1, 2281, 10, 3, 1, 4), OffOn()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: genEquipAlarmConfigDefault.setStatus('mandatory')
genEquipAlarmConfigTable = MibTable((1, 3, 6, 1, 4, 1, 2281, 10, 3, 1, 5), )
if mibBuilder.loadTexts: genEquipAlarmConfigTable.setStatus('mandatory')
genEquipAlarmConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2281, 10, 3, 1, 5, 1), ).setIndexNames((0, "MWRM-UNIT-MIB", "genEquipAlarmConfigId"))
if mibBuilder.loadTexts: genEquipAlarmConfigEntry.setStatus('mandatory')
genEquipAlarmConfigId = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 3, 1, 5, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipAlarmConfigId.setStatus('mandatory')
genEquipAlarmConfigSeverity = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 3, 1, 5, 1, 2), Severity()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: genEquipAlarmConfigSeverity.setStatus('mandatory')
genEquipAlarmConfigDescr = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 3, 1, 5, 1, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: genEquipAlarmConfigDescr.setStatus('mandatory')
genEquipAlarmConfigAdditionalText = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 3, 1, 5, 1, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: genEquipAlarmConfigAdditionalText.setStatus('mandatory')
genEquipAlarmServiceAffect = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 3, 1, 5, 1, 5), OffOn()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: genEquipAlarmServiceAffect.setStatus('mandatory')
genEquipTrapCfg = MibIdentifier((1, 3, 6, 1, 4, 1, 2281, 10, 3, 2))
genEquipTrapCfgMgrTable = MibTable((1, 3, 6, 1, 4, 1, 2281, 10, 3, 2, 1), )
if mibBuilder.loadTexts: genEquipTrapCfgMgrTable.setStatus('mandatory')
genEquipTrapCfgMgrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2281, 10, 3, 2, 1, 1), ).setIndexNames((0, "MWRM-UNIT-MIB", "genEquipTrapCfgMgrId"))
if mibBuilder.loadTexts: genEquipTrapCfgMgrEntry.setStatus('mandatory')
genEquipTrapCfgMgrId = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 3, 2, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipTrapCfgMgrId.setStatus('mandatory')
genEquipTrapCfgMgrAdmin = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 3, 2, 1, 1, 2), EnableDisable()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: genEquipTrapCfgMgrAdmin.setStatus('mandatory')
genEquipTrapCfgMgrIP = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 3, 2, 1, 1, 3), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: genEquipTrapCfgMgrIP.setStatus('mandatory')
genEquipTrapCfgMgrPort = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 3, 2, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(70, 65535)).clone(162)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: genEquipTrapCfgMgrPort.setStatus('mandatory')
genEquipTrapCfgMgrName = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 3, 2, 1, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 30))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: genEquipTrapCfgMgrName.setStatus('mandatory')
genEquipTrapCfgMgrCommunity = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 3, 2, 1, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 30))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: genEquipTrapCfgMgrCommunity.setStatus('mandatory')
genEquipTrapCfgMgrSeverityFilter = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 3, 2, 1, 1, 7), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: genEquipTrapCfgMgrSeverityFilter.setStatus('mandatory')
genEquipTrapCfgMgrStatusChangeFilter = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 3, 2, 1, 1, 8), OffOn()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: genEquipTrapCfgMgrStatusChangeFilter.setStatus('mandatory')
genEquipTrapCfgMgrCLLI = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 3, 2, 1, 1, 9), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 100))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: genEquipTrapCfgMgrCLLI.setStatus('mandatory')
genEquipTrapCfgMgrHeartbeatPeriod = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 3, 2, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1440))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: genEquipTrapCfgMgrHeartbeatPeriod.setStatus('mandatory')
genEquipTrapCfgMgrIPv6 = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 3, 2, 1, 1, 11), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: genEquipTrapCfgMgrIPv6.setStatus('mandatory')
genEquipTrapCfgMgrV3User = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 3, 2, 1, 1, 12), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: genEquipTrapCfgMgrV3User.setStatus('mandatory')
genEquipEventLog = MibIdentifier((1, 3, 6, 1, 4, 1, 2281, 10, 3, 3))
genEquipEventLogTable = MibTable((1, 3, 6, 1, 4, 1, 2281, 10, 3, 3, 1), )
if mibBuilder.loadTexts: genEquipEventLogTable.setStatus('mandatory')
genEquipEventLogEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2281, 10, 3, 3, 1, 1), ).setIndexNames((0, "MWRM-UNIT-MIB", "genEquipEventLogCounter"))
if mibBuilder.loadTexts: genEquipEventLogEntry.setStatus('mandatory')
genEquipEventLogCounter = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 3, 3, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipEventLogCounter.setStatus('mandatory')
genEquipEventLogRaisedTimeT = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 3, 3, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipEventLogRaisedTimeT.setStatus('mandatory')
genEquipEventLogSeverity = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 3, 3, 1, 1, 3), Severity()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipEventLogSeverity.setStatus('mandatory')
genEquipEventLogModule = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 3, 3, 1, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipEventLogModule.setStatus('mandatory')
genEquipEventLogDesc = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 3, 3, 1, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipEventLogDesc.setStatus('mandatory')
genEquipEventLogState = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 3, 3, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("cleared", 0), ("raised", 1), ("event", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipEventLogState.setStatus('mandatory')
genEquipEventLogProbableCause = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 3, 3, 1, 1, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipEventLogProbableCause.setStatus('mandatory')
genEquipEventLogCorrectiveActions = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 3, 3, 1, 1, 8), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipEventLogCorrectiveActions.setStatus('mandatory')
genEquipEventLogAdditionalInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 3, 3, 1, 1, 9), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipEventLogAdditionalInfo.setStatus('mandatory')
genEquipEventLogUserText = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 3, 3, 1, 1, 10), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipEventLogUserText.setStatus('mandatory')
genEquipEventLogIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 3, 3, 1, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipEventLogIfIndex.setStatus('mandatory')
genEquipEventLogId = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 3, 3, 1, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipEventLogId.setStatus('mandatory')
genEquipEventLogClear = MibScalar((1, 3, 6, 1, 4, 1, 2281, 10, 3, 3, 2), OffOn()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: genEquipEventLogClear.setStatus('mandatory')
genEquipEventLogLastChangeCounter = MibScalar((1, 3, 6, 1, 4, 1, 2281, 10, 3, 3, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipEventLogLastChangeCounter.setStatus('mandatory')
genEquipFaultErrno = MibScalar((1, 3, 6, 1, 4, 1, 2281, 10, 3, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipFaultErrno.setStatus('mandatory')
genEquipFaultErrDescr = MibScalar((1, 3, 6, 1, 4, 1, 2281, 10, 3, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipFaultErrDescr.setStatus('mandatory')
genEquipMng = MibIdentifier((1, 3, 6, 1, 4, 1, 2281, 10, 4))
genEquipMngSw = MibIdentifier((1, 3, 6, 1, 4, 1, 2281, 10, 4, 1))
genEquipMngSwServerUrl = MibScalar((1, 3, 6, 1, 4, 1, 2281, 10, 4, 1, 1), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: genEquipMngSwServerUrl.setStatus('mandatory')
genEquipMngSwServerLogin = MibScalar((1, 3, 6, 1, 4, 1, 2281, 10, 4, 1, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: genEquipMngSwServerLogin.setStatus('mandatory')
genEquipMngSwServerPassword = MibScalar((1, 3, 6, 1, 4, 1, 2281, 10, 4, 1, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: genEquipMngSwServerPassword.setStatus('mandatory')
genEquipMngSwProxyUrl = MibScalar((1, 3, 6, 1, 4, 1, 2281, 10, 4, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipMngSwProxyUrl.setStatus('obsolete')
genEquipMngSwProxyLogin = MibScalar((1, 3, 6, 1, 4, 1, 2281, 10, 4, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipMngSwProxyLogin.setStatus('obsolete')
genEquipMngSwProxyPassword = MibScalar((1, 3, 6, 1, 4, 1, 2281, 10, 4, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipMngSwProxyPassword.setStatus('obsolete')
genEquipMngSwDownloadStatus = MibScalar((1, 3, 6, 1, 4, 1, 2281, 10, 4, 1, 7), ProgressStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipMngSwDownloadStatus.setStatus('mandatory')
genEquipMngSwInstallStatus = MibScalar((1, 3, 6, 1, 4, 1, 2281, 10, 4, 1, 8), ProgressStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipMngSwInstallStatus.setStatus('mandatory')
genEquipMngSwCommand = MibScalar((1, 3, 6, 1, 4, 1, 2281, 10, 4, 1, 9), SwCommandTimer()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: genEquipMngSwCommand.setStatus('mandatory')
genEquipMngSwInstalledIduVersion = MibScalar((1, 3, 6, 1, 4, 1, 2281, 10, 4, 1, 10), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipMngSwInstalledIduVersion.setStatus('mandatory')
genEquipMngSwInstalledRfuVersion = MibScalar((1, 3, 6, 1, 4, 1, 2281, 10, 4, 1, 11), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipMngSwInstalledRfuVersion.setStatus('mandatory')
genEquipMngSwVersions = MibIdentifier((1, 3, 6, 1, 4, 1, 2281, 10, 4, 1, 13))
genEquipMngSwIDUVersionsTable = MibTable((1, 3, 6, 1, 4, 1, 2281, 10, 4, 1, 13, 1), )
if mibBuilder.loadTexts: genEquipMngSwIDUVersionsTable.setStatus('mandatory')
genEquipMngSwIDUVersionsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2281, 10, 4, 1, 13, 1, 1), ).setIndexNames((0, "MWRM-UNIT-MIB", "genEquipMngSwIDUVersionsCounter"))
if mibBuilder.loadTexts: genEquipMngSwIDUVersionsEntry.setStatus('mandatory')
genEquipMngSwIDUVersionsCounter = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 4, 1, 13, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipMngSwIDUVersionsCounter.setStatus('mandatory')
genEquipMngSwIDUVersionsPackageName = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 4, 1, 13, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipMngSwIDUVersionsPackageName.setStatus('mandatory')
genEquipMngSwIDUVersionsTargetDevice = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 4, 1, 13, 1, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipMngSwIDUVersionsTargetDevice.setStatus('mandatory')
genEquipMngSwIDUVersionsRunningVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 4, 1, 13, 1, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipMngSwIDUVersionsRunningVersion.setStatus('mandatory')
genEquipMngSwIDUVersionsInstalledVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 4, 1, 13, 1, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipMngSwIDUVersionsInstalledVersion.setStatus('mandatory')
genEquipMngSwIDUVersionsUpgradePackage = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 4, 1, 13, 1, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipMngSwIDUVersionsUpgradePackage.setStatus('mandatory')
genEquipMngSwIDUVersionsDowngradePackage = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 4, 1, 13, 1, 1, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipMngSwIDUVersionsDowngradePackage.setStatus('mandatory')
genEquipMngSwIDUVersionsResetType = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 4, 1, 13, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("noReset", 0), ("appWarmReset", 1), ("tccColdReset", 2), ("mainBoardColdReset", 3), ("mainBoardWarmReset", 4), ("applicationRestart", 5), ("cardReset", 6), ("notApplicable", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipMngSwIDUVersionsResetType.setStatus('mandatory')
genEquipMngSwTimerTable = MibTable((1, 3, 6, 1, 4, 1, 2281, 10, 4, 1, 13, 2), )
if mibBuilder.loadTexts: genEquipMngSwTimerTable.setStatus('mandatory')
genEquipMngSwTimerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2281, 10, 4, 1, 13, 2, 1), ).setIndexNames((0, "MWRM-UNIT-MIB", "genEquipMngSwTimerSlotNumber"))
if mibBuilder.loadTexts: genEquipMngSwTimerEntry.setStatus('mandatory')
genEquipMngSwTimerSlotNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 4, 1, 13, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 6))).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipMngSwTimerSlotNumber.setStatus('mandatory')
genEquipMngSwTimerInstallationTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 4, 1, 13, 2, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1440))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: genEquipMngSwTimerInstallationTimer.setStatus('mandatory')
genEquipMngSwTimerTimeToInstall = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 4, 1, 13, 2, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 86400))).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipMngSwTimerTimeToInstall.setStatus('mandatory')
genEquipMngSwTimerTimerAbort = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 4, 1, 13, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("proceed", 0), ("abort", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: genEquipMngSwTimerTimerAbort.setStatus('mandatory')
genEquipMngSwFTPTimer = MibScalar((1, 3, 6, 1, 4, 1, 2281, 10, 4, 1, 13, 10), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: genEquipMngSwFTPTimer.setStatus('mandatory')
genEquipMngSwInstallationTimer = MibScalar((1, 3, 6, 1, 4, 1, 2281, 10, 4, 1, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1440))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: genEquipMngSwInstallationTimer.setStatus('mandatory')
genEquipMngSwTimeToInstall = MibScalar((1, 3, 6, 1, 4, 1, 2281, 10, 4, 1, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1440))).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipMngSwTimeToInstall.setStatus('mandatory')
genEquipMngSwUpgradeCommonRfuVersion = MibScalar((1, 3, 6, 1, 4, 1, 2281, 10, 4, 1, 16), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipMngSwUpgradeCommonRfuVersion.setStatus('mandatory')
genEquipMngSwDowngradeCommonRfuVersion = MibScalar((1, 3, 6, 1, 4, 1, 2281, 10, 4, 1, 17), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipMngSwDowngradeCommonRfuVersion.setStatus('mandatory')
genEquipMngSwFileTransferTable = MibTable((1, 3, 6, 1, 4, 1, 2281, 10, 4, 1, 18), )
if mibBuilder.loadTexts: genEquipMngSwFileTransferTable.setStatus('mandatory')
genEquipMngSwFileTransferEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2281, 10, 4, 1, 18, 1), ).setIndexNames((0, "MWRM-UNIT-MIB", "genEquipMngSwFileTransferIndex"))
if mibBuilder.loadTexts: genEquipMngSwFileTransferEntry.setStatus('mandatory')
genEquipMngSwFileTransferIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 4, 1, 18, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipMngSwFileTransferIndex.setStatus('mandatory')
genEquipMngSwFileTransferProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 4, 1, 18, 1, 2), FtpProtocolType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: genEquipMngSwFileTransferProtocol.setStatus('mandatory')
genEquipMngSwFileTransferUserName = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 4, 1, 18, 1, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: genEquipMngSwFileTransferUserName.setStatus('mandatory')
genEquipMngSwFileTransferPassword = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 4, 1, 18, 1, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: genEquipMngSwFileTransferPassword.setStatus('mandatory')
genEquipMngSwFileTransferAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 4, 1, 18, 1, 5), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: genEquipMngSwFileTransferAddress.setStatus('mandatory')
genEquipMngSwFileTransferPath = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 4, 1, 18, 1, 6), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: genEquipMngSwFileTransferPath.setStatus('mandatory')
genEquipMngSwFileTransferIpv6Address = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 4, 1, 18, 1, 7), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: genEquipMngSwFileTransferIpv6Address.setStatus('mandatory')
genEquipSecurityTrafficCrypto = MibIdentifier((1, 3, 6, 1, 4, 1, 2281, 10, 11, 10))
genEquipSecurityFipsAdmin = MibScalar((1, 3, 6, 1, 4, 1, 2281, 10, 11, 10, 1), EnableDisable()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: genEquipSecurityFipsAdmin.setStatus('mandatory')
genEquipSecurityFipsStatus = MibScalar((1, 3, 6, 1, 4, 1, 2281, 10, 11, 10, 2), DownUp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipSecurityFipsStatus.setStatus('mandatory')
genEquipTrafficCryptoConfigTable = MibTable((1, 3, 6, 1, 4, 1, 2281, 10, 11, 10, 10), )
if mibBuilder.loadTexts: genEquipTrafficCryptoConfigTable.setStatus('mandatory')
genEquipTrafficCryptoConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2281, 10, 11, 10, 10, 1), ).setIndexNames((0, "MWRM-UNIT-MIB", "genEquipTrafficCryptoConfigId"))
if mibBuilder.loadTexts: genEquipTrafficCryptoConfigEntry.setStatus('mandatory')
genEquipTrafficCryptoConfigId = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 11, 10, 10, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipTrafficCryptoConfigId.setStatus('mandatory')
genEquipTrafficCryptoConfigConfigAdmin = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 11, 10, 10, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("aes-256", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: genEquipTrafficCryptoConfigConfigAdmin.setStatus('mandatory')
genEquipTrafficCryptoConfigMkey = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 11, 10, 10, 1, 3), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: genEquipTrafficCryptoConfigMkey.setStatus('mandatory')
genEquipTrafficCryptoConfigBackupMkey = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 11, 10, 10, 1, 4), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: genEquipTrafficCryptoConfigBackupMkey.setStatus('mandatory')
genEquipTrafficCryptoConfigMkeyPeriod = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 11, 10, 10, 1, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: genEquipTrafficCryptoConfigMkeyPeriod.setStatus('mandatory')
genEquipTrafficCryptoConfigRandKeyGen = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 11, 10, 10, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("random-key-generate", 0), ("random-key-clear", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: genEquipTrafficCryptoConfigRandKeyGen.setStatus('mandatory')
genEquipTrafficCryptoConfigSkeyPeriod = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 11, 10, 10, 1, 7), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: genEquipTrafficCryptoConfigSkeyPeriod.setStatus('mandatory')
genEquipTrafficCryptoStatusTable = MibTable((1, 3, 6, 1, 4, 1, 2281, 10, 11, 10, 11), )
if mibBuilder.loadTexts: genEquipTrafficCryptoStatusTable.setStatus('mandatory')
genEquipTrafficCryptoStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2281, 10, 11, 10, 11, 1), ).setIndexNames((0, "MWRM-UNIT-MIB", "genEquipTrafficCryptoStatusId"))
if mibBuilder.loadTexts: genEquipTrafficCryptoStatusEntry.setStatus('mandatory')
genEquipTrafficCryptoStatusId = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 11, 10, 11, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipTrafficCryptoStatusId.setStatus('mandatory')
genEquipTrafficCryptoStatusValid = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 11, 10, 11, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("not-valid", 0), ("valid", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipTrafficCryptoStatusValid.setStatus('mandatory')
genEquipTrafficCryptoStatusMkeyTimeExpire = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 11, 10, 11, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipTrafficCryptoStatusMkeyTimeExpire.setStatus('mandatory')
genEquipMngSwFileTransferStatusTable = MibTable((1, 3, 6, 1, 4, 1, 2281, 10, 4, 1, 19), )
if mibBuilder.loadTexts: genEquipMngSwFileTransferStatusTable.setStatus('mandatory')
genEquipMngSwFileTransferStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2281, 10, 4, 1, 19, 1), ).setIndexNames((0, "MWRM-UNIT-MIB", "genEquipMngSwFileTransferStatusIndex"))
if mibBuilder.loadTexts: genEquipMngSwFileTransferStatusEntry.setStatus('mandatory')
genEquipMngSwFileTransferStatusIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 4, 1, 19, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipMngSwFileTransferStatusIndex.setStatus('mandatory')
genEquipMngSwFileTransferStatusResult = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 4, 1, 19, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12))).clone(namedValues=NamedValues(("ready", 0), ("downloadStarted", 1), ("verifyingDownloadFiles", 2), ("downloadInProgress", 3), ("downloadSuccess", 4), ("downloadFailure", 5), ("allComponentsExist", 6), ("versionIncompatibleWithSystem", 7), ("incompleteFileSet", 8), ("componentUnsupportedByHw", 9), ("corruptSwFiles", 10), ("missingDependencies", 11), ("downloadCancelled", 12)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipMngSwFileTransferStatusResult.setStatus('mandatory')
genEquipMngSwFileTransferPercentageDone = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 4, 1, 19, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipMngSwFileTransferPercentageDone.setStatus('mandatory')
genEquipMngSwFileTransferPercentageDoneStandBy = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 4, 1, 19, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipMngSwFileTransferPercentageDoneStandBy.setStatus('mandatory')
genEquipMngSwFileTransferStatusResultStandBy = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 4, 1, 19, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("ready", 0), ("download-started", 1), ("verifying-download-files", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipMngSwFileTransferStatusResultStandBy.setStatus('mandatory')
genEquipMngSwInstallStatusTable = MibTable((1, 3, 6, 1, 4, 1, 2281, 10, 4, 1, 20), )
if mibBuilder.loadTexts: genEquipMngSwInstallStatusTable.setStatus('mandatory')
genEquipMngSwInstallStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2281, 10, 4, 1, 20, 1), ).setIndexNames((0, "MWRM-UNIT-MIB", "genEquipMngSwInstallStatusIndex"))
if mibBuilder.loadTexts: genEquipMngSwInstallStatusEntry.setStatus('mandatory')
genEquipMngSwInstallStatusIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 4, 1, 20, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipMngSwInstallStatusIndex.setStatus('mandatory')
genEquipMngSwInstallStatusResult = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 4, 1, 20, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("ready", 0), ("installationStarted", 1), ("verifyingInstallationFiles", 2), ("installationInProgress", 3), ("installationSuccess", 4), ("installationPartialSuccess", 5), ("installationFailure", 6), ("incompleteSwVersion", 7), ("installationCancelled", 8)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipMngSwInstallStatusResult.setStatus('mandatory')
genEquipMngSwInstallPercentageDone = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 4, 1, 20, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipMngSwInstallPercentageDone.setStatus('mandatory')
genEquipMngSwInstallStatusResultStandBy = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 4, 1, 20, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("ready", 0), ("installationStarted", 1), ("verifyingInstallationFiles", 2), ("installationInProgress", 3), ("installationSuccess", 4), ("installationPartialSuccess", 5), ("installationFailure", 6), ("incompleteSwVersion", 7), ("installationCancelled", 8)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipMngSwInstallStatusResultStandBy.setStatus('mandatory')
genEquipMngSwInstallPercentageDoneStandBy = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 4, 1, 20, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipMngSwInstallPercentageDoneStandBy.setStatus('mandatory')
genEquipMngSwOperationTable = MibTable((1, 3, 6, 1, 4, 1, 2281, 10, 4, 1, 21), )
if mibBuilder.loadTexts: genEquipMngSwOperationTable.setStatus('mandatory')
genEquipMngSwOperationEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2281, 10, 4, 1, 21, 1), ).setIndexNames((0, "MWRM-UNIT-MIB", "genEquipMngSwOperationIndex"))
if mibBuilder.loadTexts: genEquipMngSwOperationEntry.setStatus('mandatory')
genEquipMngSwOperationIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 4, 1, 21, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipMngSwOperationIndex.setStatus('mandatory')
genEquipMngSwOperationOperation = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 4, 1, 21, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("noAction", 0), ("download", 1), ("install", 2), ("updateBackup", 3), ("swapBootSection", 4), ("abortTimer", 5)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: genEquipMngSwOperationOperation.setStatus('mandatory')
genEquipMngSwOperationTimedInstallation = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 4, 1, 21, 1, 3), NoYes()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: genEquipMngSwOperationTimedInstallation.setStatus('mandatory')
genEquipMngSwSlotRunningVersionTable = MibTable((1, 3, 6, 1, 4, 1, 2281, 10, 4, 1, 22), )
if mibBuilder.loadTexts: genEquipMngSwSlotRunningVersionTable.setStatus('mandatory')
genEquipMngSwSlotRunningVersionEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2281, 10, 4, 1, 22, 1), ).setIndexNames((0, "MWRM-UNIT-MIB", "genEquipMngSwSlotRunningVersionSlotId"))
if mibBuilder.loadTexts: genEquipMngSwSlotRunningVersionEntry.setStatus('mandatory')
genEquipMngSwSlotRunningVersionSlotId = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 4, 1, 22, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 12))).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipMngSwSlotRunningVersionSlotId.setStatus('mandatory')
genEquipMngSwSlotRunningVersionCardType = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 4, 1, 22, 1, 2), InventoryCardType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipMngSwSlotRunningVersionCardType.setStatus('mandatory')
genEquipMngSwSlotRunningVersionComponent = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 4, 1, 22, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipMngSwSlotRunningVersionComponent.setStatus('mandatory')
genEquipMngSwSlotRunningVersionActualVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 4, 1, 22, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipMngSwSlotRunningVersionActualVersion.setStatus('mandatory')
genEquipMngSwIDUVersionsStandByTable = MibTable((1, 3, 6, 1, 4, 1, 2281, 10, 4, 1, 23), )
if mibBuilder.loadTexts: genEquipMngSwIDUVersionsStandByTable.setStatus('mandatory')
genEquipMngSwIDUVersionsStandByEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2281, 10, 4, 1, 23, 1), ).setIndexNames((0, "MWRM-UNIT-MIB", "genEquipMngSwIDUVersionsStandByIndex"))
if mibBuilder.loadTexts: genEquipMngSwIDUVersionsStandByEntry.setStatus('mandatory')
genEquipMngSwIDUVersionsStandByIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 4, 1, 23, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipMngSwIDUVersionsStandByIndex.setStatus('mandatory')
genEquipMngSwIDUVersionsStandByPackageName = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 4, 1, 23, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipMngSwIDUVersionsStandByPackageName.setStatus('mandatory')
genEquipMngSwIDUVersionsStandByRunningVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 4, 1, 23, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipMngSwIDUVersionsStandByRunningVersion.setStatus('mandatory')
genEquipMngSwIDUVersionsStandByInstalledVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 4, 1, 23, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipMngSwIDUVersionsStandByInstalledVersion.setStatus('mandatory')
genEquipMngSwIDUVersionsStandByTargetDevice = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 4, 1, 23, 1, 5), InventoryCardType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipMngSwIDUVersionsStandByTargetDevice.setStatus('mandatory')
genEquipMngSwIDUVersionsStandByDownloadedPackage = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 4, 1, 23, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipMngSwIDUVersionsStandByDownloadedPackage.setStatus('mandatory')
genEquipMngSwIDUVersionsStandByResetType = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 4, 1, 23, 1, 7), VmResetType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipMngSwIDUVersionsStandByResetType.setStatus('mandatory')
genEquipMngSwWatchdogAdmin = MibScalar((1, 3, 6, 1, 4, 1, 2281, 10, 4, 1, 35), EnableDisable()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: genEquipMngSwWatchdogAdmin.setStatus('mandatory')
genEquipMngCfg = MibIdentifier((1, 3, 6, 1, 4, 1, 2281, 10, 4, 2))
genEquipMngCfgBackupStatus = MibScalar((1, 3, 6, 1, 4, 1, 2281, 10, 4, 2, 1), ProgressStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipMngCfgBackupStatus.setStatus('mandatory')
genEquipMngCfgRestoreStatus = MibScalar((1, 3, 6, 1, 4, 1, 2281, 10, 4, 2, 2), ProgressStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipMngCfgRestoreStatus.setStatus('mandatory')
genEquipMngCfgUploadStatus = MibScalar((1, 3, 6, 1, 4, 1, 2281, 10, 4, 2, 3), ProgressStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipMngCfgUploadStatus.setStatus('mandatory')
genEquipMngCfgDownloadStatus = MibScalar((1, 3, 6, 1, 4, 1, 2281, 10, 4, 2, 4), ProgressStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipMngCfgDownloadStatus.setStatus('mandatory')
genEquipMngCfgCommand = MibScalar((1, 3, 6, 1, 4, 1, 2281, 10, 4, 2, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("no-operation", 0), ("backup", 1), ("restore", 2), ("upload", 3), ("download", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: genEquipMngCfgCommand.setStatus('mandatory')
genEquipMngCfgEthernetSwitchStoreConfiguration = MibScalar((1, 3, 6, 1, 4, 1, 2281, 10, 4, 2, 6), OffOn()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: genEquipMngCfgEthernetSwitchStoreConfiguration.setStatus('mandatory')
genEquipMngCfgSetToDefaultKeepIp = MibScalar((1, 3, 6, 1, 4, 1, 2281, 10, 4, 2, 7), OffOn()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: genEquipMngCfgSetToDefaultKeepIp.setStatus('mandatory')
genEquipMngCfgCliScriptFileName = MibScalar((1, 3, 6, 1, 4, 1, 2281, 10, 4, 2, 8), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: genEquipMngCfgCliScriptFileName.setStatus('mandatory')
genEquipMngCfgGeneric = MibIdentifier((1, 3, 6, 1, 4, 1, 2281, 10, 4, 2, 10))
genEquipMngCfgBackupProgress = MibScalar((1, 3, 6, 1, 4, 1, 2281, 10, 4, 2, 10, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipMngCfgBackupProgress.setStatus('mandatory')
genEquipMngCfgTimeToInstallation = MibScalar((1, 3, 6, 1, 4, 1, 2281, 10, 4, 2, 10, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipMngCfgTimeToInstallation.setStatus('mandatory')
genEquipMngCfgFileTransferTable = MibTable((1, 3, 6, 1, 4, 1, 2281, 10, 4, 2, 11), )
if mibBuilder.loadTexts: genEquipMngCfgFileTransferTable.setStatus('mandatory')
genEquipMngCfgFileTransferEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2281, 10, 4, 2, 11, 1), ).setIndexNames((0, "MWRM-UNIT-MIB", "genEquipMngCfgFileTransferIndex"))
if mibBuilder.loadTexts: genEquipMngCfgFileTransferEntry.setStatus('mandatory')
genEquipMngCfgFileTransferIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 4, 2, 11, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipMngCfgFileTransferIndex.setStatus('mandatory')
genEquipMngCfgFileTransferProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 4, 2, 11, 1, 2), FtpProtocolType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: genEquipMngCfgFileTransferProtocol.setStatus('mandatory')
genEquipMngCfgFileTransferUserName = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 4, 2, 11, 1, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: genEquipMngCfgFileTransferUserName.setStatus('mandatory')
genEquipMngCfgFileTransferPassword = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 4, 2, 11, 1, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: genEquipMngCfgFileTransferPassword.setStatus('mandatory')
genEquipMngCfgFileTransferAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 4, 2, 11, 1, 5), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: genEquipMngCfgFileTransferAddress.setStatus('mandatory')
genEquipMngCfgFileTransferPath = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 4, 2, 11, 1, 6), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: genEquipMngCfgFileTransferPath.setStatus('mandatory')
genEquipMngCfgFileTransferFileName = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 4, 2, 11, 1, 7), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: genEquipMngCfgFileTransferFileName.setStatus('mandatory')
genEquipMngCfgFileTransferIpv6Address = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 4, 2, 11, 1, 8), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: genEquipMngCfgFileTransferIpv6Address.setStatus('mandatory')
genEquipMngCfgFileTransferStatusTable = MibTable((1, 3, 6, 1, 4, 1, 2281, 10, 4, 2, 12), )
if mibBuilder.loadTexts: genEquipMngCfgFileTransferStatusTable.setStatus('mandatory')
genEquipMngCfgFileTransferStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2281, 10, 4, 2, 12, 1), ).setIndexNames((0, "MWRM-UNIT-MIB", "genEquipMngCfgFileTransferStatusIndex"))
if mibBuilder.loadTexts: genEquipMngCfgFileTransferStatusEntry.setStatus('mandatory')
genEquipMngCfgFileTransferStatusIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 4, 2, 12, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipMngCfgFileTransferStatusIndex.setStatus('mandatory')
genEquipMngCfgFileTransferStatusPercentageDone = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 4, 2, 12, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipMngCfgFileTransferStatusPercentageDone.setStatus('mandatory')
genEquipMngCfgFileTransferStatusResult = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 4, 2, 12, 1, 3), FileTransferStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: genEquipMngCfgFileTransferStatusResult.setStatus('mandatory')
genEquipMngCfgOperationTable = MibTable((1, 3, 6, 1, 4, 1, 2281, 10, 4, 2, 13), )
if mibBuilder.loadTexts: genEquipMngCfgOperationTable.setStatus('mandatory')
genEquipMngCfgOperationEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2281, 10, 4, 2, 13, 1), ).setIndexNames((0, "MWRM-UNIT-MIB", "genEquipMngCfgOperationIndex"))
if mibBuilder.loadTexts: genEquipMngCfgOperationEntry.setStatus('mandatory')
genEquipMngCfgOperationIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 4, 2, 13, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipMngCfgOperationIndex.setStatus('mandatory')
genEquipMngCfgOperationOperation = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 4, 2, 13, 1, 2), CfgOper()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: genEquipMngCfgOperationOperation.setStatus('mandatory')
genEquipMngCfgOperationFileNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 4, 2, 13, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 3))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: genEquipMngCfgOperationFileNumber.setStatus('mandatory')
genEquipMngCfgOperationTimedInstallation = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 4, 2, 13, 1, 4), NoYes()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: genEquipMngCfgOperationTimedInstallation.setStatus('mandatory')
genEquipMngCfgOperationTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 4, 2, 13, 1, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: genEquipMngCfgOperationTimer.setStatus('mandatory')
genEquipMngCfgOperationSlotNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 4, 2, 13, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 12))).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipMngCfgOperationSlotNumber.setStatus('mandatory')
genEquipMngCfgConfigurationFilesTable = MibTable((1, 3, 6, 1, 4, 1, 2281, 10, 4, 2, 14), )
if mibBuilder.loadTexts: genEquipMngCfgConfigurationFilesTable.setStatus('mandatory')
genEquipMngCfgConfigurationFilesEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2281, 10, 4, 2, 14, 1), ).setIndexNames((0, "MWRM-UNIT-MIB", "genEquipMngCfgConfigurationFilesIndex"))
if mibBuilder.loadTexts: genEquipMngCfgConfigurationFilesEntry.setStatus('mandatory')
genEquipMngCfgConfigurationFilesIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 4, 2, 14, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipMngCfgConfigurationFilesIndex.setStatus('mandatory')
genEquipMngCfgConfigurationFilesFileNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 4, 2, 14, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 3))).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipMngCfgConfigurationFilesFileNumber.setStatus('mandatory')
genEquipMngCfgConfigurationFilesSystemType = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 4, 2, 14, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipMngCfgConfigurationFilesSystemType.setStatus('mandatory')
genEquipMngCfgConfigurationFilesSWVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 4, 2, 14, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipMngCfgConfigurationFilesSWVersion.setStatus('mandatory')
genEquipMngCfgConfigurationFilesTimeDate = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 4, 2, 14, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipMngCfgConfigurationFilesTimeDate.setStatus('mandatory')
genEquipMngCfgConfigurationFilesSystemIP = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 4, 2, 14, 1, 6), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipMngCfgConfigurationFilesSystemIP.setStatus('mandatory')
genEquipMngCfgConfigurationFilesCardsConfigured = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 4, 2, 14, 1, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipMngCfgConfigurationFilesCardsConfigured.setStatus('mandatory')
genEquipMngCfgConfigurationFilesSystemID = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 4, 2, 14, 1, 8), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipMngCfgConfigurationFilesSystemID.setStatus('mandatory')
genEquipMngCfgFileRestoreStatus = MibScalar((1, 3, 6, 1, 4, 1, 2281, 10, 4, 2, 20), FileRestoreStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipMngCfgFileRestoreStatus.setStatus('mandatory')
genEquipMngCfgFileTransferStatus = MibScalar((1, 3, 6, 1, 4, 1, 2281, 10, 4, 2, 21), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12))).clone(namedValues=NamedValues(("ready", 0), ("download-started", 1), ("verifying-download-files", 2), ("download-in-progress", 3), ("download-success", 4), ("download-failure", 5), ("all-components-exist", 6), ("version-incompatible-with-system", 7), ("incomplete-file-set", 8), ("component-unsupported-by-hw", 9), ("corrupt-sw-files", 10), ("missing-dependencies", 11), ("download-cancelled", 12)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipMngCfgFileTransferStatus.setStatus('mandatory')
genEquipMngFileTransfer = MibIdentifier((1, 3, 6, 1, 4, 1, 2281, 10, 4, 3))
genEquipMngFileTransferFileTypeOper = MibScalar((1, 3, 6, 1, 4, 1, 2281, 10, 4, 3, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("no-operation", 0), ("download-configuration", 1), ("download-certificate", 2), ("download-warning-banner", 3), ("download-cli-script", 4), ("upload-configuration", 5), ("upload-csr-file", 6), ("upload-unit-info", 7)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: genEquipMngFileTransferFileTypeOper.setStatus('mandatory')
genEquipMngFileTransferDownloadConfigStatus = MibScalar((1, 3, 6, 1, 4, 1, 2281, 10, 4, 3, 2), ProgressStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipMngFileTransferDownloadConfigStatus.setStatus('mandatory')
genEquipMngFileTransferDownloadCertificateStatus = MibScalar((1, 3, 6, 1, 4, 1, 2281, 10, 4, 3, 3), ProgressStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipMngFileTransferDownloadCertificateStatus.setStatus('mandatory')
genEquipMngFileTransferDownloadWarningBannerStatus = MibScalar((1, 3, 6, 1, 4, 1, 2281, 10, 4, 3, 4), ProgressStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipMngFileTransferDownloadWarningBannerStatus.setStatus('mandatory')
genEquipMngFileTransferDownloadCliScriptStatus = MibScalar((1, 3, 6, 1, 4, 1, 2281, 10, 4, 3, 5), ProgressStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipMngFileTransferDownloadCliScriptStatus.setStatus('mandatory')
genEquipMngFileTransferUploadConfigStatus = MibScalar((1, 3, 6, 1, 4, 1, 2281, 10, 4, 3, 6), ProgressStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipMngFileTransferUploadConfigStatus.setStatus('mandatory')
genEquipMngFileTransferUploadCSRStatus = MibScalar((1, 3, 6, 1, 4, 1, 2281, 10, 4, 3, 7), ProgressStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipMngFileTransferUploadCSRStatus.setStatus('mandatory')
genEquipMngFileTransferUploadUnitInfoStatus = MibScalar((1, 3, 6, 1, 4, 1, 2281, 10, 4, 3, 8), ProgressStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipMngFileTransferUploadUnitInfoStatus.setStatus('mandatory')
genEquipMngUnitInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 2281, 10, 4, 4))
genEquipMngUnitInfoGeneric = MibIdentifier((1, 3, 6, 1, 4, 1, 2281, 10, 4, 4, 1))
genEquipMngUnitInfoOperation = MibScalar((1, 3, 6, 1, 4, 1, 2281, 10, 4, 4, 1, 1), CfgUnitInfoOper()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: genEquipMngUnitInfoOperation.setStatus('mandatory')
genEquipMngUnitInfoProgress = MibScalar((1, 3, 6, 1, 4, 1, 2281, 10, 4, 4, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipMngUnitInfoProgress.setStatus('mandatory')
genEquipMngUnitInfoStatus = MibScalar((1, 3, 6, 1, 4, 1, 2281, 10, 4, 4, 1, 3), ProgressStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipMngUnitInfoStatus.setStatus('mandatory')
genEquipMngCli = MibIdentifier((1, 3, 6, 1, 4, 1, 2281, 10, 4, 5))
genEquipMngCliScriptOperation = MibScalar((1, 3, 6, 1, 4, 1, 2281, 10, 4, 5, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("no-operation", 0), ("import", 1), ("delete", 2), ("show", 3), ("execute", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: genEquipMngCliScriptOperation.setStatus('mandatory')
genEquipMngCliScriptOperationStatus = MibScalar((1, 3, 6, 1, 4, 1, 2281, 10, 4, 5, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("ready", 0), ("executing", 1), ("failed", 2), ("success", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipMngCliScriptOperationStatus.setStatus('mandatory')
genEquipMngUnitInfoFileTransferTable = MibTable((1, 3, 6, 1, 4, 1, 2281, 10, 4, 4, 2), )
if mibBuilder.loadTexts: genEquipMngUnitInfoFileTransferTable.setStatus('mandatory')
genEquipMngUnitInfoFileTransferEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2281, 10, 4, 4, 2, 1), ).setIndexNames((0, "MWRM-UNIT-MIB", "genEquipMngUnitInfoFileTransferIndex"))
if mibBuilder.loadTexts: genEquipMngUnitInfoFileTransferEntry.setStatus('mandatory')
genEquipMngUnitInfoFileTransferIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 4, 4, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipMngUnitInfoFileTransferIndex.setStatus('mandatory')
genEquipMngUnitInfoFileTransferProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 4, 4, 2, 1, 2), FtpProtocolType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: genEquipMngUnitInfoFileTransferProtocol.setStatus('mandatory')
genEquipMngUnitInfoFileTransferUserName = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 4, 4, 2, 1, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: genEquipMngUnitInfoFileTransferUserName.setStatus('mandatory')
genEquipMngUnitInfoFileTransferPassword = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 4, 4, 2, 1, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: genEquipMngUnitInfoFileTransferPassword.setStatus('mandatory')
genEquipMngUnitInfoFileTransferAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 4, 4, 2, 1, 5), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: genEquipMngUnitInfoFileTransferAddress.setStatus('mandatory')
genEquipMngUnitInfoFileTransferPath = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 4, 4, 2, 1, 6), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: genEquipMngUnitInfoFileTransferPath.setStatus('mandatory')
genEquipMngUnitInfoFileTransferFileName = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 4, 4, 2, 1, 7), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: genEquipMngUnitInfoFileTransferFileName.setStatus('mandatory')
genEquipMngUnitInfoFileTransferIpv6Address = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 4, 4, 2, 1, 8), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: genEquipMngUnitInfoFileTransferIpv6Address.setStatus('mandatory')
genEquipMngUnitInfoFileTransferStatusTable = MibTable((1, 3, 6, 1, 4, 1, 2281, 10, 4, 4, 3), )
if mibBuilder.loadTexts: genEquipMngUnitInfoFileTransferStatusTable.setStatus('mandatory')
genEquipMngUnitInfoFileTransferStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2281, 10, 4, 4, 3, 1), ).setIndexNames((0, "MWRM-UNIT-MIB", "genEquipMngUnitInfoFileTransferStatusIndex"))
if mibBuilder.loadTexts: genEquipMngUnitInfoFileTransferStatusEntry.setStatus('mandatory')
genEquipMngUnitInfoFileTransferStatusIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 4, 4, 3, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipMngUnitInfoFileTransferStatusIndex.setStatus('mandatory')
genEquipMngUnitInfoFileTransferStatusPercentageDone = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 4, 4, 3, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipMngUnitInfoFileTransferStatusPercentageDone.setStatus('mandatory')
genEquipMngUnitInfoFileTransferStatusResult = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 4, 4, 3, 1, 3), ProgressStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: genEquipMngUnitInfoFileTransferStatusResult.setStatus('mandatory')
genEquipDiagAndMaintenance = MibIdentifier((1, 3, 6, 1, 4, 1, 2281, 10, 10))
genEquipDiagAndMaintenanceRadioLoopbackTimeout = MibScalar((1, 3, 6, 1, 4, 1, 2281, 10, 10, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1440))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: genEquipDiagAndMaintenanceRadioLoopbackTimeout.setStatus('mandatory')
genEquipDiagAndMaintenanceLineLoopbackTimeout = MibScalar((1, 3, 6, 1, 4, 1, 2281, 10, 10, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1440))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: genEquipDiagAndMaintenanceLineLoopbackTimeout.setStatus('mandatory')
genEquipDiagAndMaintenanceSDHLoopbackTimeout = MibScalar((1, 3, 6, 1, 4, 1, 2281, 10, 10, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1440))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: genEquipDiagAndMaintenanceSDHLoopbackTimeout.setStatus('mandatory')
genEquipSecurity = MibIdentifier((1, 3, 6, 1, 4, 1, 2281, 10, 11))
genEquipSecurityConfiguration = MibIdentifier((1, 3, 6, 1, 4, 1, 2281, 10, 11, 1))
genEquipSecurityCfgUploadPublicKeyStatus = MibScalar((1, 3, 6, 1, 4, 1, 2281, 10, 11, 1, 1), ProgressStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipSecurityCfgUploadPublicKeyStatus.setStatus('mandatory')
genEquipSecurityCfgDownloadSecurityStatus = MibScalar((1, 3, 6, 1, 4, 1, 2281, 10, 11, 1, 2), ProgressStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipSecurityCfgDownloadSecurityStatus.setStatus('mandatory')
genEquipSecurityCfgSecurityFileName = MibScalar((1, 3, 6, 1, 4, 1, 2281, 10, 11, 1, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: genEquipSecurityCfgSecurityFileName.setStatus('mandatory')
genEquipSecurityCfgSecurityFileType = MibScalar((1, 3, 6, 1, 4, 1, 2281, 10, 11, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("target-certificate", 0), ("target-ca-certificate", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: genEquipSecurityCfgSecurityFileType.setStatus('mandatory')
genEquipSecurityCfgSecurityFileFormat = MibScalar((1, 3, 6, 1, 4, 1, 2281, 10, 11, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("pem", 0), ("der", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: genEquipSecurityCfgSecurityFileFormat.setStatus('mandatory')
genEquipSecurityCfgSecurityWebCertificateAdmin = MibScalar((1, 3, 6, 1, 4, 1, 2281, 10, 11, 1, 6), EnableDisable()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: genEquipSecurityCfgSecurityWebCertificateAdmin.setStatus('mandatory')
genEquipSecurityCfgWebProtocol = MibScalar((1, 3, 6, 1, 4, 1, 2281, 10, 11, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("http", 1), ("https", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: genEquipSecurityCfgWebProtocol.setStatus('mandatory')
genEquipSecurityCfgTelnetAdmin = MibScalar((1, 3, 6, 1, 4, 1, 2281, 10, 11, 1, 8), EnableDisable()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: genEquipSecurityCfgTelnetAdmin.setStatus('mandatory')
genEquipSecurityCfgAutoLogOutPeriod = MibScalar((1, 3, 6, 1, 4, 1, 2281, 10, 11, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 60))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: genEquipSecurityCfgAutoLogOutPeriod.setStatus('mandatory')
genEquipSecurityXFTP = MibIdentifier((1, 3, 6, 1, 4, 1, 2281, 10, 11, 1, 10))
genEquipSecurityXFTPHostIP = MibScalar((1, 3, 6, 1, 4, 1, 2281, 10, 11, 1, 10, 1), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: genEquipSecurityXFTPHostIP.setStatus('mandatory')
genEquipSecurityXFTPHostPath = MibScalar((1, 3, 6, 1, 4, 1, 2281, 10, 11, 1, 10, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: genEquipSecurityXFTPHostPath.setStatus('mandatory')
genEquipSecurityXFTPProtocol = MibScalar((1, 3, 6, 1, 4, 1, 2281, 10, 11, 1, 10, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("ftp", 0), ("sftp", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: genEquipSecurityXFTPProtocol.setStatus('mandatory')
genEquipSecurityXFTPUserName = MibScalar((1, 3, 6, 1, 4, 1, 2281, 10, 11, 1, 10, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: genEquipSecurityXFTPUserName.setStatus('mandatory')
genEquipSecurityXFTPPassword = MibScalar((1, 3, 6, 1, 4, 1, 2281, 10, 11, 1, 10, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: genEquipSecurityXFTPPassword.setStatus('mandatory')
genEquipSecurityCfgPassFirstLoginChange = MibScalar((1, 3, 6, 1, 4, 1, 2281, 10, 11, 1, 11), NoYes()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: genEquipSecurityCfgPassFirstLoginChange.setStatus('mandatory')
genEquipSecurityCfgCSRCreation = MibScalar((1, 3, 6, 1, 4, 1, 2281, 10, 11, 1, 12), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 512))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: genEquipSecurityCfgCSRCreation.setStatus('mandatory')
genEquipSecurityCfgWarningBannerFName = MibScalar((1, 3, 6, 1, 4, 1, 2281, 10, 11, 1, 13), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: genEquipSecurityCfgWarningBannerFName.setStatus('mandatory')
genEquipSecurityConfigurationRadius = MibIdentifier((1, 3, 6, 1, 4, 1, 2281, 10, 11, 1, 14))
genEquipSecurityConfigurationRadiusAdmin = MibScalar((1, 3, 6, 1, 4, 1, 2281, 10, 11, 1, 14, 1), EnableDisable()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: genEquipSecurityConfigurationRadiusAdmin.setStatus('mandatory')
genEquipSecurityConfigurationRadiusServerIP = MibScalar((1, 3, 6, 1, 4, 1, 2281, 10, 11, 1, 14, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: genEquipSecurityConfigurationRadiusServerIP.setStatus('mandatory')
genEquipSecurityConfigurationRadiusSecret = MibScalar((1, 3, 6, 1, 4, 1, 2281, 10, 11, 1, 14, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: genEquipSecurityConfigurationRadiusSecret.setStatus('mandatory')
genEquipSecurityConfigurationRadiusPort = MibScalar((1, 3, 6, 1, 4, 1, 2281, 10, 11, 1, 14, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: genEquipSecurityConfigurationRadiusPort.setStatus('mandatory')
genEquipSecurityConfigurationRadiusRetries = MibScalar((1, 3, 6, 1, 4, 1, 2281, 10, 11, 1, 14, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 10))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: genEquipSecurityConfigurationRadiusRetries.setStatus('mandatory')
genEquipSecurityConfigurationRadiusTimeout = MibScalar((1, 3, 6, 1, 4, 1, 2281, 10, 11, 1, 14, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(3, 30))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: genEquipSecurityConfigurationRadiusTimeout.setStatus('mandatory')
genEquipSecurityUsersAndGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 2281, 10, 11, 2))
genEquipSecurityUsersTable = MibTable((1, 3, 6, 1, 4, 1, 2281, 10, 11, 2, 1), )
if mibBuilder.loadTexts: genEquipSecurityUsersTable.setStatus('mandatory')
genEquipSecurityUsersEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2281, 10, 11, 2, 1, 1), ).setIndexNames((0, "MWRM-UNIT-MIB", "genEquipSecurityUsersName"))
if mibBuilder.loadTexts: genEquipSecurityUsersEntry.setStatus('mandatory')
genEquipSecurityUsersName = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 11, 2, 1, 1, 1), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: genEquipSecurityUsersName.setStatus('mandatory')
genEquipSecurityUsersPasswd = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 11, 2, 1, 1, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: genEquipSecurityUsersPasswd.setStatus('mandatory')
genEquipSecurityUsersPriviledge = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 11, 2, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 0, 1, 2, 3))).clone(namedValues=NamedValues(("no-privilege-lvl", -1), ("viewer-user-lvl", 0), ("operator-user-lvl", 1), ("admin-user-lvl", 2), ("tech-user-lvl", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: genEquipSecurityUsersPriviledge.setStatus('mandatory')
genEquipSecurityUsersPasswdAging = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 11, 2, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 90))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: genEquipSecurityUsersPasswdAging.setStatus('mandatory')
genEquipSecurityUsersExprDate = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 11, 2, 1, 1, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: genEquipSecurityUsersExprDate.setStatus('mandatory')
genEquipSecurityUsersLastLogin = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 11, 2, 1, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipSecurityUsersLastLogin.setStatus('mandatory')
genEquipSecurityUsersRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 11, 2, 1, 1, 30), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: genEquipSecurityUsersRowStatus.setStatus('mandatory')
genEquipSecurityUsersAndGroupsChangePasswd = MibScalar((1, 3, 6, 1, 4, 1, 2281, 10, 11, 2, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: genEquipSecurityUsersAndGroupsChangePasswd.setStatus('mandatory')
genEquipSecuritySNMP = MibIdentifier((1, 3, 6, 1, 4, 1, 2281, 10, 11, 3))
genEquipSecuritySNMPReadCommunity = MibScalar((1, 3, 6, 1, 4, 1, 2281, 10, 11, 3, 1), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: genEquipSecuritySNMPReadCommunity.setStatus('mandatory')
genEquipSecuritySNMPWriteCommunity = MibScalar((1, 3, 6, 1, 4, 1, 2281, 10, 11, 3, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: genEquipSecuritySNMPWriteCommunity.setStatus('mandatory')
genEquipSecuritySNMPV3 = MibIdentifier((1, 3, 6, 1, 4, 1, 2281, 10, 11, 3, 10))
genEquipSecuritySNMPV3AuthTable = MibTable((1, 3, 6, 1, 4, 1, 2281, 10, 11, 3, 10, 1), )
if mibBuilder.loadTexts: genEquipSecuritySNMPV3AuthTable.setStatus('mandatory')
genEquipSecuritySNMPV3AuthEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2281, 10, 11, 3, 10, 1, 1), ).setIndexNames((0, "MWRM-UNIT-MIB", "genEquipSecuritySNMPV3AuthUserName"))
if mibBuilder.loadTexts: genEquipSecuritySNMPV3AuthEntry.setStatus('mandatory')
genEquipSecuritySNMPV3AuthUserName = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 11, 3, 10, 1, 1, 1), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: genEquipSecuritySNMPV3AuthUserName.setStatus('mandatory')
genEquipSecuritySNMPV3AuthPassword = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 11, 3, 10, 1, 1, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: genEquipSecuritySNMPV3AuthPassword.setStatus('mandatory')
genEquipSecuritySNMPV3AuthSecurityMode = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 11, 3, 10, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("noAuthNoPriv", 1), ("authNoPriv", 2), ("authPriv", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: genEquipSecuritySNMPV3AuthSecurityMode.setStatus('mandatory')
genEquipSecuritySNMPV3AuthEncryptionMode = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 11, 3, 10, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("none", 1), ("des", 2), ("aes", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: genEquipSecuritySNMPV3AuthEncryptionMode.setStatus('mandatory')
genEquipSecuritySNMPV3AuthAuthenticationAlgorithm = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 11, 3, 10, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("none", 1), ("sha", 2), ("md5", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: genEquipSecuritySNMPV3AuthAuthenticationAlgorithm.setStatus('mandatory')
genEquipSecuritySNMPV3AuthAccessMode = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 11, 3, 10, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("readWrite", 1), ("readOnly", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: genEquipSecuritySNMPV3AuthAccessMode.setStatus('mandatory')
genEquipSecuritySNMPV3AuthRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 11, 3, 10, 1, 1, 30), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: genEquipSecuritySNMPV3AuthRowStatus.setStatus('mandatory')
genEquipSecurityGen = MibIdentifier((1, 3, 6, 1, 4, 1, 2281, 10, 11, 4))
genEquipSecurityGenFTConfigTable = MibTable((1, 3, 6, 1, 4, 1, 2281, 10, 11, 4, 1), )
if mibBuilder.loadTexts: genEquipSecurityGenFTConfigTable.setStatus('mandatory')
genEquipSecurityGenFTConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2281, 10, 11, 4, 1, 1), ).setIndexNames((0, "MWRM-UNIT-MIB", "genEquipSecurityGenFTConfigIndex"))
if mibBuilder.loadTexts: genEquipSecurityGenFTConfigEntry.setStatus('mandatory')
genEquipSecurityGenFTConfigIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 11, 4, 1, 1, 1), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: genEquipSecurityGenFTConfigIndex.setStatus('mandatory')
genEquipSecurityGenFTConfigProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 11, 4, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("ftp", 0), ("sftp", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: genEquipSecurityGenFTConfigProtocol.setStatus('mandatory')
genEquipSecurityGenFTConfigUsername = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 11, 4, 1, 1, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: genEquipSecurityGenFTConfigUsername.setStatus('mandatory')
genEquipSecurityGenFTConfigPassword = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 11, 4, 1, 1, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: genEquipSecurityGenFTConfigPassword.setStatus('mandatory')
genEquipSecurityGenFTConfigAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 11, 4, 1, 1, 5), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: genEquipSecurityGenFTConfigAddress.setStatus('mandatory')
genEquipSecurityGenFTConfigFilePath = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 11, 4, 1, 1, 6), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: genEquipSecurityGenFTConfigFilePath.setStatus('mandatory')
genEquipSecurityGenFTConfigFileName = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 11, 4, 1, 1, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipSecurityGenFTConfigFileName.setStatus('mandatory')
genEquipSecurityGenFTConfigIpV6Address = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 11, 4, 1, 1, 8), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: genEquipSecurityGenFTConfigIpV6Address.setStatus('mandatory')
genEquipSecurityGenFTStatusTable = MibTable((1, 3, 6, 1, 4, 1, 2281, 10, 11, 4, 2), )
if mibBuilder.loadTexts: genEquipSecurityGenFTStatusTable.setStatus('mandatory')
genEquipSecurityGenFTStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2281, 10, 11, 4, 2, 1), ).setIndexNames((0, "MWRM-UNIT-MIB", "genEquipSecurityGenFTStatusIndex"))
if mibBuilder.loadTexts: genEquipSecurityGenFTStatusEntry.setStatus('mandatory')
genEquipSecurityGenFTStatusIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 11, 4, 2, 1, 1), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: genEquipSecurityGenFTStatusIndex.setStatus('mandatory')
genEquipSecurityGenFTStatusStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 11, 4, 2, 1, 2), FTStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipSecurityGenFTStatusStatus.setStatus('mandatory')
genEquipSecurityGenFTStatusProgress = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 11, 4, 2, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipSecurityGenFTStatusProgress.setStatus('mandatory')
genEquipSecurityGenFTOperations = MibScalar((1, 3, 6, 1, 4, 1, 2281, 10, 11, 4, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("none", 0), ("upload-security-log", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: genEquipSecurityGenFTOperations.setStatus('mandatory')
genEquipSecurityGenImportExportAdmin = MibScalar((1, 3, 6, 1, 4, 1, 2281, 10, 11, 4, 12), EnableDisable()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: genEquipSecurityGenImportExportAdmin.setStatus('mandatory')
genEquipSecurityAccessControl = MibIdentifier((1, 3, 6, 1, 4, 1, 2281, 10, 11, 5))
genEquipSecurityAccessControlProfileTable = MibTable((1, 3, 6, 1, 4, 1, 2281, 10, 11, 5, 1), )
if mibBuilder.loadTexts: genEquipSecurityAccessControlProfileTable.setStatus('mandatory')
genEquipSecurityAccessControlProfileEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2281, 10, 11, 5, 1, 1), ).setIndexNames((0, "MWRM-UNIT-MIB", "genEquipSecurityAccessControlProfileName"))
if mibBuilder.loadTexts: genEquipSecurityAccessControlProfileEntry.setStatus('mandatory')
genEquipSecurityAccessControlProfileName = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 11, 5, 1, 1, 1), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: genEquipSecurityAccessControlProfileName.setStatus('mandatory')
genEquipSecurityAccessControlProfileChannel = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 11, 5, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 127))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: genEquipSecurityAccessControlProfileChannel.setStatus('mandatory')
genEquipSecurityAccessControlProfileUsed = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 11, 5, 1, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipSecurityAccessControlProfileUsed.setStatus('mandatory')
genEquipSecurityAccessControlProfileSecurityWrite = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 11, 5, 1, 1, 4), RbacAccessLevel()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: genEquipSecurityAccessControlProfileSecurityWrite.setStatus('mandatory')
genEquipSecurityAccessControlProfileSecurityRead = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 11, 5, 1, 1, 5), RbacAccessLevel()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: genEquipSecurityAccessControlProfileSecurityRead.setStatus('mandatory')
genEquipSecurityAccessControlProfileMngWrite = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 11, 5, 1, 1, 6), RbacAccessLevel()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: genEquipSecurityAccessControlProfileMngWrite.setStatus('mandatory')
genEquipSecurityAccessControlProfileMngRead = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 11, 5, 1, 1, 7), RbacAccessLevel()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: genEquipSecurityAccessControlProfileMngRead.setStatus('mandatory')
genEquipSecurityAccessControlProfileRadioWrite = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 11, 5, 1, 1, 8), RbacAccessLevel()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: genEquipSecurityAccessControlProfileRadioWrite.setStatus('mandatory')
genEquipSecurityAccessControlProfileRadioRead = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 11, 5, 1, 1, 9), RbacAccessLevel()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: genEquipSecurityAccessControlProfileRadioRead.setStatus('mandatory')
genEquipSecurityAccessControlProfileTDMWrite = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 11, 5, 1, 1, 10), RbacAccessLevel()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: genEquipSecurityAccessControlProfileTDMWrite.setStatus('mandatory')
genEquipSecurityAccessControlProfileTDMRead = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 11, 5, 1, 1, 11), RbacAccessLevel()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: genEquipSecurityAccessControlProfileTDMRead.setStatus('mandatory')
genEquipSecurityAccessControlProfileEthWrite = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 11, 5, 1, 1, 12), RbacAccessLevel()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: genEquipSecurityAccessControlProfileEthWrite.setStatus('mandatory')
genEquipSecurityAccessControlProfileEthRead = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 11, 5, 1, 1, 13), RbacAccessLevel()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: genEquipSecurityAccessControlProfileEthRead.setStatus('mandatory')
genEquipSecurityAccessControlProfileSyncWrite = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 11, 5, 1, 1, 14), RbacAccessLevel()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: genEquipSecurityAccessControlProfileSyncWrite.setStatus('mandatory')
genEquipSecurityAccessControlProfileSyncRead = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 11, 5, 1, 1, 15), RbacAccessLevel()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: genEquipSecurityAccessControlProfileSyncRead.setStatus('mandatory')
genEquipSecurityAccessControlProfileRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 11, 5, 1, 1, 30), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: genEquipSecurityAccessControlProfileRowStatus.setStatus('mandatory')
genEquipSecurityAccessControlUserTable = MibTable((1, 3, 6, 1, 4, 1, 2281, 10, 11, 5, 2), )
if mibBuilder.loadTexts: genEquipSecurityAccessControlUserTable.setStatus('mandatory')
genEquipSecurityAccessControlUserEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2281, 10, 11, 5, 2, 1), ).setIndexNames((0, "MWRM-UNIT-MIB", "genEquipSecurityAccessControlUserName"))
if mibBuilder.loadTexts: genEquipSecurityAccessControlUserEntry.setStatus('mandatory')
genEquipSecurityAccessControlUserName = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 11, 5, 2, 1, 1), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: genEquipSecurityAccessControlUserName.setStatus('mandatory')
genEquipSecurityAccessControlUserProfile = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 11, 5, 2, 1, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: genEquipSecurityAccessControlUserProfile.setStatus('mandatory')
genEquipSecurityAccessControlUserPassword = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 11, 5, 2, 1, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: genEquipSecurityAccessControlUserPassword.setStatus('mandatory')
genEquipSecurityAccessControlUserExpired = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 11, 5, 2, 1, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: genEquipSecurityAccessControlUserExpired.setStatus('mandatory')
genEquipSecurityAccessControlUserBlock = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 11, 5, 2, 1, 5), NoYes()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: genEquipSecurityAccessControlUserBlock.setStatus('mandatory')
genEquipSecurityAccessControlUserLastLogout = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 11, 5, 2, 1, 6), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: genEquipSecurityAccessControlUserLastLogout.setStatus('mandatory')
genEquipSecurityAccessControlUserLoggedIn = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 11, 5, 2, 1, 7), NoYes()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: genEquipSecurityAccessControlUserLoggedIn.setStatus('mandatory')
genEquipSecurityAccessControlUserRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 11, 5, 2, 1, 30), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: genEquipSecurityAccessControlUserRowStatus.setStatus('mandatory')
genEquipSecurityAccessControlPassEnforceStrength = MibScalar((1, 3, 6, 1, 4, 1, 2281, 10, 11, 5, 11), NoYes()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: genEquipSecurityAccessControlPassEnforceStrength.setStatus('mandatory')
genEquipSecurityAccessControlPassFirstLoginChange = MibScalar((1, 3, 6, 1, 4, 1, 2281, 10, 11, 5, 12), NoYes()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: genEquipSecurityAccessControlPassFirstLoginChange.setStatus('mandatory')
genEquipSecurityAccessControlPassAging = MibScalar((1, 3, 6, 1, 4, 1, 2281, 10, 11, 5, 13), NoYes()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: genEquipSecurityAccessControlPassAging.setStatus('mandatory')
genEquipSecurityAccessControlFailureLoginAttempt = MibScalar((1, 3, 6, 1, 4, 1, 2281, 10, 11, 5, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 10))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: genEquipSecurityAccessControlFailureLoginAttempt.setStatus('mandatory')
genEquipSecurityAccessControlBlockFailureLoginPeriod = MibScalar((1, 3, 6, 1, 4, 1, 2281, 10, 11, 5, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 60))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: genEquipSecurityAccessControlBlockFailureLoginPeriod.setStatus('mandatory')
genEquipSecurityAccessControlBlockunusedAccount = MibScalar((1, 3, 6, 1, 4, 1, 2281, 10, 11, 5, 16), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 90))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: genEquipSecurityAccessControlBlockunusedAccount.setStatus('mandatory')
genEquipSecurityAccessControlBlockRootRemote = MibScalar((1, 3, 6, 1, 4, 1, 2281, 10, 11, 5, 17), NoYes()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: genEquipSecurityAccessControlBlockRootRemote.setStatus('mandatory')
genEquipSecurityProtocolsControl = MibIdentifier((1, 3, 6, 1, 4, 1, 2281, 10, 11, 6))
genEquipSecurityProtocolsControlAutoSessionTimeOut = MibScalar((1, 3, 6, 1, 4, 1, 2281, 10, 11, 6, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 60))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: genEquipSecurityProtocolsControlAutoSessionTimeOut.setStatus('mandatory')
genEquipSecurityProtocolsControlSNMPAdmin = MibScalar((1, 3, 6, 1, 4, 1, 2281, 10, 11, 6, 2), EnableDisable()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: genEquipSecurityProtocolsControlSNMPAdmin.setStatus('mandatory')
genEquipSecurityProtocolsControlSNMPOperStatus = MibScalar((1, 3, 6, 1, 4, 1, 2281, 10, 11, 6, 3), DownUp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipSecurityProtocolsControlSNMPOperStatus.setStatus('mandatory')
genEquipSecurityProtocolsControlSNMPTrapVersion = MibScalar((1, 3, 6, 1, 4, 1, 2281, 10, 11, 6, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("v1", 1), ("v2", 2), ("v3", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: genEquipSecurityProtocolsControlSNMPTrapVersion.setStatus('mandatory')
genEquipSecurityProtocolsControlSNMPMIBVersion = MibScalar((1, 3, 6, 1, 4, 1, 2281, 10, 11, 6, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipSecurityProtocolsControlSNMPMIBVersion.setStatus('mandatory')
genEquipSecurityProtocolsControlSNMPV1V2Blocked = MibScalar((1, 3, 6, 1, 4, 1, 2281, 10, 11, 6, 6), NoYes()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: genEquipSecurityProtocolsControlSNMPV1V2Blocked.setStatus('mandatory')
genEquipSecurityProtocolsControlHTTPAdmin = MibScalar((1, 3, 6, 1, 4, 1, 2281, 10, 11, 6, 7), EnableDisable()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: genEquipSecurityProtocolsControlHTTPAdmin.setStatus('mandatory')
genEquipSecurityMonitorAndLogs = MibIdentifier((1, 3, 6, 1, 4, 1, 2281, 10, 11, 7))
genEquipSecurityConfigLogUploadConfigTable = MibTable((1, 3, 6, 1, 4, 1, 2281, 10, 11, 7, 1), )
if mibBuilder.loadTexts: genEquipSecurityConfigLogUploadConfigTable.setStatus('mandatory')
genEquipSecurityConfigLogUploadConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2281, 10, 11, 7, 1, 1), ).setIndexNames((0, "MWRM-UNIT-MIB", "genEquipSecurityConfigLogUploadConfigIndex"))
if mibBuilder.loadTexts: genEquipSecurityConfigLogUploadConfigEntry.setStatus('mandatory')
genEquipSecurityConfigLogUploadConfigIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 11, 7, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipSecurityConfigLogUploadConfigIndex.setStatus('mandatory')
genEquipSecurityConfigLogUploadConfigProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 11, 7, 1, 1, 2), FtpProtocolType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: genEquipSecurityConfigLogUploadConfigProtocol.setStatus('mandatory')
genEquipSecurityConfigLogUploadConfigUsername = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 11, 7, 1, 1, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: genEquipSecurityConfigLogUploadConfigUsername.setStatus('mandatory')
genEquipSecurityConfigLogUploadConfigPassword = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 11, 7, 1, 1, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: genEquipSecurityConfigLogUploadConfigPassword.setStatus('mandatory')
genEquipSecurityConfigLogUploadConfigIpaddress = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 11, 7, 1, 1, 5), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: genEquipSecurityConfigLogUploadConfigIpaddress.setStatus('mandatory')
genEquipSecurityConfigLogUploadConfigPath = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 11, 7, 1, 1, 6), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: genEquipSecurityConfigLogUploadConfigPath.setStatus('mandatory')
genEquipSecurityConfigLogUploadConfigFilename = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 11, 7, 1, 1, 7), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: genEquipSecurityConfigLogUploadConfigFilename.setStatus('mandatory')
genEquipSecurityConfigLogUploadConfigIpV6Address = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 11, 7, 1, 1, 8), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: genEquipSecurityConfigLogUploadConfigIpV6Address.setStatus('mandatory')
genEquipSecurityConfigLogUploadStatusTable = MibTable((1, 3, 6, 1, 4, 1, 2281, 10, 11, 7, 2), )
if mibBuilder.loadTexts: genEquipSecurityConfigLogUploadStatusTable.setStatus('mandatory')
genEquipSecurityConfigLogUploadStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2281, 10, 11, 7, 2, 1), ).setIndexNames((0, "MWRM-UNIT-MIB", "genEquipSecurityConfigLogUploadStatusIndex"))
if mibBuilder.loadTexts: genEquipSecurityConfigLogUploadStatusEntry.setStatus('mandatory')
genEquipSecurityConfigLogUploadStatusIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 11, 7, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipSecurityConfigLogUploadStatusIndex.setStatus('mandatory')
genEquipSecurityConfigLogUploadStatusStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 11, 7, 2, 1, 2), FileTransferStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: genEquipSecurityConfigLogUploadStatusStatus.setStatus('mandatory')
genEquipSecurityConfigLogUploadStatusPrcntg = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 11, 7, 2, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipSecurityConfigLogUploadStatusPrcntg.setStatus('mandatory')
genEquipSecurityConfigLogUpload = MibScalar((1, 3, 6, 1, 4, 1, 2281, 10, 11, 7, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("none", 0), ("upload-security-log", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: genEquipSecurityConfigLogUpload.setStatus('mandatory')
genEquipSecurityRadiusServer = MibIdentifier((1, 3, 6, 1, 4, 1, 2281, 10, 11, 8))
genEquipSecurityRadiusServerConfigurationTable = MibTable((1, 3, 6, 1, 4, 1, 2281, 10, 11, 8, 1), )
if mibBuilder.loadTexts: genEquipSecurityRadiusServerConfigurationTable.setStatus('mandatory')
genEquipSecurityRadiusServerConfigurationEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2281, 10, 11, 8, 1, 1), ).setIndexNames((0, "MWRM-UNIT-MIB", "genEquipSecurityAccessControlRadiusServerId"))
if mibBuilder.loadTexts: genEquipSecurityRadiusServerConfigurationEntry.setStatus('mandatory')
genEquipSecurityAccessControlRadiusServerId = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 11, 8, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipSecurityAccessControlRadiusServerId.setStatus('mandatory')
genEquipSecurityAccessControlRadiusServerIpV4Address = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 11, 8, 1, 1, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: genEquipSecurityAccessControlRadiusServerIpV4Address.setStatus('mandatory')
genEquipSecurityAccessControlRadiusServerIpv6Address = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 11, 8, 1, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: genEquipSecurityAccessControlRadiusServerIpv6Address.setStatus('mandatory')
genEquipSecurityAccessControlRadiusServerPort = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 11, 8, 1, 1, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: genEquipSecurityAccessControlRadiusServerPort.setStatus('mandatory')
genEquipSecurityAccessControlRadiusServerRetries = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 11, 8, 1, 1, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: genEquipSecurityAccessControlRadiusServerRetries.setStatus('mandatory')
genEquipSecurityAccessControlRadiusServerTimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 11, 8, 1, 1, 6), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: genEquipSecurityAccessControlRadiusServerTimeout.setStatus('mandatory')
genEquipSecurityAccessControlRadiusServerSharedSecret = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 11, 8, 1, 1, 7), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: genEquipSecurityAccessControlRadiusServerSharedSecret.setStatus('mandatory')
genEquipSecurityAccessControlRadiusServerConnectivityStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 11, 8, 1, 1, 8), EnableDisable()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipSecurityAccessControlRadiusServerConnectivityStatus.setStatus('mandatory')
genEquipSecurityAccessControlRadiusUsersTable = MibTable((1, 3, 6, 1, 4, 1, 2281, 10, 11, 8, 2), )
if mibBuilder.loadTexts: genEquipSecurityAccessControlRadiusUsersTable.setStatus('mandatory')
genEquipSecurityAccessControlRadiusUsersEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2281, 10, 11, 8, 2, 1), ).setIndexNames((0, "MWRM-UNIT-MIB", "genEquipSecurityAccessControlRadiusUsersId"))
if mibBuilder.loadTexts: genEquipSecurityAccessControlRadiusUsersEntry.setStatus('mandatory')
genEquipSecurityAccessControlRadiusUsersId = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 11, 8, 2, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipSecurityAccessControlRadiusUsersId.setStatus('mandatory')
genEquipSecurityAccessControlRadiusUserInstances = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 11, 8, 2, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipSecurityAccessControlRadiusUserInstances.setStatus('mandatory')
genEquipSecurityAccessControlRadiusUsersAccessChannels = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 11, 8, 2, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipSecurityAccessControlRadiusUsersAccessChannels.setStatus('mandatory')
genEquipSecurityAccessControlRadiusUsersEthReadLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 11, 8, 2, 1, 4), RaduisAcceaaLevel()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipSecurityAccessControlRadiusUsersEthReadLevel.setStatus('mandatory')
genEquipSecurityAccessControlRadiusUsersEthWriteLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 11, 8, 2, 1, 5), RaduisAcceaaLevel()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipSecurityAccessControlRadiusUsersEthWriteLevel.setStatus('mandatory')
genEquipSecurityAccessControlRadiusUsersMngReadLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 11, 8, 2, 1, 6), RaduisAcceaaLevel()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipSecurityAccessControlRadiusUsersMngReadLevel.setStatus('mandatory')
genEquipSecurityAccessControlRadiusUsersMngWriteLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 11, 8, 2, 1, 7), RaduisAcceaaLevel()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipSecurityAccessControlRadiusUsersMngWriteLevel.setStatus('mandatory')
genEquipSecurityAccessControlRadiusUsersRadioReadLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 11, 8, 2, 1, 8), RaduisAcceaaLevel()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipSecurityAccessControlRadiusUsersRadioReadLevel.setStatus('mandatory')
genEquipSecurityAccessControlRadiusUsersRadioWriteLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 11, 8, 2, 1, 9), RaduisAcceaaLevel()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipSecurityAccessControlRadiusUsersRadioWriteLevel.setStatus('mandatory')
genEquipSecurityAccessControlRadiusUsersSecurityReadLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 11, 8, 2, 1, 10), RaduisAcceaaLevel()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipSecurityAccessControlRadiusUsersSecurityReadLevel.setStatus('mandatory')
genEquipSecurityAccessControlRadiusUsersSecurityWriteLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 11, 8, 2, 1, 11), RaduisAcceaaLevel()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipSecurityAccessControlRadiusUsersSecurityWriteLevel.setStatus('mandatory')
genEquipSecurityAccessControlRadiusUsersSyncReadLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 11, 8, 2, 1, 12), RaduisAcceaaLevel()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipSecurityAccessControlRadiusUsersSyncReadLevel.setStatus('mandatory')
genEquipSecurityAccessControlRadiusUsersSyncWriteLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 11, 8, 2, 1, 13), RaduisAcceaaLevel()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipSecurityAccessControlRadiusUsersSyncWriteLevel.setStatus('mandatory')
genEquipSecurityAccessControlRadiusUsersTdmReadLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 11, 8, 2, 1, 14), RaduisAcceaaLevel()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipSecurityAccessControlRadiusUsersTdmReadLevel.setStatus('mandatory')
genEquipSecurityAccessControlRadiusUsersTdmWriteLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 11, 8, 2, 1, 15), RaduisAcceaaLevel()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipSecurityAccessControlRadiusUsersTdmWriteLevel.setStatus('mandatory')
genEquipSecurityRadiusAdmin = MibScalar((1, 3, 6, 1, 4, 1, 2281, 10, 11, 8, 10), EnableDisable()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: genEquipSecurityRadiusAdmin.setStatus('mandatory')
genEquipSecurityCertificate = MibIdentifier((1, 3, 6, 1, 4, 1, 2281, 10, 11, 9))
genEquipSecurityCsrCertificateFileTransferSet = MibScalar((1, 3, 6, 1, 4, 1, 2281, 10, 11, 9, 1), CsrCertificateFTState()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: genEquipSecurityCsrCertificateFileTransferSet.setStatus('mandatory')
genEquipSecurityCsrStatus = MibScalar((1, 3, 6, 1, 4, 1, 2281, 10, 11, 9, 2), FTStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipSecurityCsrStatus.setStatus('mandatory')
genEquipSecurityCsrCertificateGenerateAndUploadPercentage = MibScalar((1, 3, 6, 1, 4, 1, 2281, 10, 11, 9, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipSecurityCsrCertificateGenerateAndUploadPercentage.setStatus('mandatory')
genEquipSecurityCertificateInstallSet = MibScalar((1, 3, 6, 1, 4, 1, 2281, 10, 11, 9, 4), OffOn()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: genEquipSecurityCertificateInstallSet.setStatus('mandatory')
genEquipSecurityCertificateDownloadStatus = MibScalar((1, 3, 6, 1, 4, 1, 2281, 10, 11, 9, 5), FTStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipSecurityCertificateDownloadStatus.setStatus('mandatory')
genEquipSecurityCertificateDownloadPercentage = MibScalar((1, 3, 6, 1, 4, 1, 2281, 10, 11, 9, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipSecurityCertificateDownloadPercentage.setStatus('mandatory')
genEquipSecurityCsrAttributesTable = MibTable((1, 3, 6, 1, 4, 1, 2281, 10, 11, 9, 10), )
if mibBuilder.loadTexts: genEquipSecurityCsrAttributesTable.setStatus('mandatory')
genEquipSecurityCsrAttributesEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2281, 10, 11, 9, 10, 1), ).setIndexNames((0, "MWRM-UNIT-MIB", "genEquipSecurityCsrAttributesIndex"))
if mibBuilder.loadTexts: genEquipSecurityCsrAttributesEntry.setStatus('mandatory')
genEquipSecurityCsrAttributesIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 11, 9, 10, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipSecurityCsrAttributesIndex.setStatus('mandatory')
genEquipSecurityCsrAttributesCountry = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 11, 9, 10, 1, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: genEquipSecurityCsrAttributesCountry.setStatus('mandatory')
genEquipSecurityCsrAttributesLocality = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 11, 9, 10, 1, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: genEquipSecurityCsrAttributesLocality.setStatus('mandatory')
genEquipSecurityCsrAttributesState = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 11, 9, 10, 1, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: genEquipSecurityCsrAttributesState.setStatus('mandatory')
genEquipSecurityCsrAttributesOrganization = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 11, 9, 10, 1, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: genEquipSecurityCsrAttributesOrganization.setStatus('mandatory')
genEquipSecurityCsrAttributesOu = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 11, 9, 10, 1, 6), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: genEquipSecurityCsrAttributesOu.setStatus('mandatory')
genEquipSecurityCsrAttributesCommonName = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 11, 9, 10, 1, 7), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: genEquipSecurityCsrAttributesCommonName.setStatus('mandatory')
genEquipSecurityCsrAttributesEmail = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 11, 9, 10, 1, 8), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipSecurityCsrAttributesEmail.setStatus('mandatory')
genEquipSecurityCsrAttributesFileFormat = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 11, 9, 10, 1, 9), CsrFileFormat()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipSecurityCsrAttributesFileFormat.setStatus('mandatory')
genEquipSecurityCsrUploadConfigTable = MibTable((1, 3, 6, 1, 4, 1, 2281, 10, 11, 9, 11), )
if mibBuilder.loadTexts: genEquipSecurityCsrUploadConfigTable.setStatus('mandatory')
genEquipSecurityCsrUploadConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2281, 10, 11, 9, 11, 1), ).setIndexNames((0, "MWRM-UNIT-MIB", "genEquipSecurityCsrUploadConfigIndex"))
if mibBuilder.loadTexts: genEquipSecurityCsrUploadConfigEntry.setStatus('mandatory')
genEquipSecurityCsrUploadConfigIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 11, 9, 11, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipSecurityCsrUploadConfigIndex.setStatus('mandatory')
genEquipSecurityCsrUploadConfigIpv4Address = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 11, 9, 11, 1, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: genEquipSecurityCsrUploadConfigIpv4Address.setStatus('mandatory')
genEquipSecurityCsrUploadConfigIpV6Address = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 11, 9, 11, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: genEquipSecurityCsrUploadConfigIpV6Address.setStatus('mandatory')
genEquipSecurityCsrUploadConfigTableUsername = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 11, 9, 11, 1, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: genEquipSecurityCsrUploadConfigTableUsername.setStatus('mandatory')
genEquipSecurityCsrUploadConfigPassword = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 11, 9, 11, 1, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: genEquipSecurityCsrUploadConfigPassword.setStatus('mandatory')
genEquipSecurityCsrUploadConfigPath = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 11, 9, 11, 1, 6), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: genEquipSecurityCsrUploadConfigPath.setStatus('mandatory')
genEquipSecurityCsrUploadConfigFilename = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 11, 9, 11, 1, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipSecurityCsrUploadConfigFilename.setStatus('mandatory')
genEquipSecurityCertificateDownloadConfigTable = MibTable((1, 3, 6, 1, 4, 1, 2281, 10, 11, 9, 12), )
if mibBuilder.loadTexts: genEquipSecurityCertificateDownloadConfigTable.setStatus('mandatory')
genEquipSecurityCertificateDownloadConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2281, 10, 11, 9, 12, 1), ).setIndexNames((0, "MWRM-UNIT-MIB", "genEquipSecurityCertificateDownloadConfigIndex"))
if mibBuilder.loadTexts: genEquipSecurityCertificateDownloadConfigEntry.setStatus('mandatory')
genEquipSecurityCertificateDownloadConfigIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 11, 9, 12, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipSecurityCertificateDownloadConfigIndex.setStatus('mandatory')
genEquipSecurityCertificateDownloadConfigIpv4Address = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 11, 9, 12, 1, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: genEquipSecurityCertificateDownloadConfigIpv4Address.setStatus('mandatory')
genEquipSecurityCertificateDownloadConfigIpV6Address = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 11, 9, 12, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: genEquipSecurityCertificateDownloadConfigIpV6Address.setStatus('mandatory')
genEquipSecurityCertificateDownloadConfigUsername = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 11, 9, 12, 1, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: genEquipSecurityCertificateDownloadConfigUsername.setStatus('mandatory')
genEquipSecurityCertificateDownloadConfigPassword = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 11, 9, 12, 1, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: genEquipSecurityCertificateDownloadConfigPassword.setStatus('mandatory')
genEquipSecurityCertificateDownloadConfigPath = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 11, 9, 12, 1, 6), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: genEquipSecurityCertificateDownloadConfigPath.setStatus('mandatory')
genEquipSecurityCertificateDownloadConfigFilename = MibTableColumn((1, 3, 6, 1, 4, 1, 2281, 10, 11, 9, 12, 1, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: genEquipSecurityCertificateDownloadConfigFilename.setStatus('mandatory')
mibBuilder.exportSymbols("MWRM-UNIT-MIB", genEquipSecurityConfigLogUploadConfigIndex=genEquipSecurityConfigLogUploadConfigIndex, genEquipCurrentAlarmInstance=genEquipCurrentAlarmInstance, genEquipInventorySerialNumber=genEquipInventorySerialNumber, genEquipSecurityAccessControlProfileEthWrite=genEquipSecurityAccessControlProfileEthWrite, genEquipUnitShelfPdcFanStatusPdcFanExMonitor=genEquipUnitShelfPdcFanStatusPdcFanExMonitor, genEquipUnitIduVoltageInput=genEquipUnitIduVoltageInput, genEquipCurrentAlarmModule=genEquipCurrentAlarmModule, genEquipSecurityGenFTConfigPassword=genEquipSecurityGenFTConfigPassword, genEquipSecurityGenFTStatusProgress=genEquipSecurityGenFTStatusProgress, genEquipMngSwFileTransferUserName=genEquipMngSwFileTransferUserName, genEquipTrapCfg=genEquipTrapCfg, genEquipEventLogSeverity=genEquipEventLogSeverity, genEquipUnitAlarmInputSeverity=genEquipUnitAlarmInputSeverity, genEquipSecurityGenFTConfigIndex=genEquipSecurityGenFTConfigIndex, genEquipSecurityAccessControlRadiusUsersMngReadLevel=genEquipSecurityAccessControlRadiusUsersMngReadLevel, genEquipSecurityConfigLogUploadConfigIpV6Address=genEquipSecurityConfigLogUploadConfigIpV6Address, genEquipUnitShelfManagmentSeverityMinor=genEquipUnitShelfManagmentSeverityMinor, genEquipMngSwSlotRunningVersionCardType=genEquipMngSwSlotRunningVersionCardType, genEquipUnitShelf=genEquipUnitShelf, genEquipUnitShelfManagmentSeverityEntry=genEquipUnitShelfManagmentSeverityEntry, genEquipMngSwInstalledIduVersion=genEquipMngSwInstalledIduVersion, genEquipSecuritySNMP=genEquipSecuritySNMP, genEquipUnitLicenseDemoAdmin=genEquipUnitLicenseDemoAdmin, genEquipMngCfgBackupStatus=genEquipMngCfgBackupStatus, genEquipSecurityConfigurationRadiusAdmin=genEquipSecurityConfigurationRadiusAdmin, genEquipUnitLicenseFeatureName=genEquipUnitLicenseFeatureName, genEquipSecurityAccessControlProfileTDMRead=genEquipSecurityAccessControlProfileTDMRead, genEquipUnitShelfTccConfigSlotID=genEquipUnitShelfTccConfigSlotID, genEquipMngSw=genEquipMngSw, genEquipTrapCfgMgrAdmin=genEquipTrapCfgMgrAdmin, genEquipSecurityProtocolsControlSNMPMIBVersion=genEquipSecurityProtocolsControlSNMPMIBVersion, genEquipFaultErrno=genEquipFaultErrno, genEquipSecurityCsrAttributesOrganization=genEquipSecurityCsrAttributesOrganization, genEquipMngSwSlotRunningVersionComponent=genEquipMngSwSlotRunningVersionComponent, genEquipUnitAlarmOutputGroup=genEquipUnitAlarmOutputGroup, genEquipMngCfgConfigurationFilesEntry=genEquipMngCfgConfigurationFilesEntry, genEquipSecurityUsersExprDate=genEquipSecurityUsersExprDate, genEquipEventLogClear=genEquipEventLogClear, genEquipMngSwProxyUrl=genEquipMngSwProxyUrl, genEquipMngSwIDUVersionsResetType=genEquipMngSwIDUVersionsResetType, genEquipSecurityAccessControlRadiusUsersSecurityWriteLevel=genEquipSecurityAccessControlRadiusUsersSecurityWriteLevel, genEquipSecurityGenFTStatusEntry=genEquipSecurityGenFTStatusEntry, genEquipUnitLicenseSyncU=genEquipUnitLicenseSyncU, genEquipUnitShelfManagmentSlotMostSevereAlarm=genEquipUnitShelfManagmentSlotMostSevereAlarm, genEquipSecurityXFTPHostPath=genEquipSecurityXFTPHostPath, genEquipMngCfgOperationEntry=genEquipMngCfgOperationEntry, genEquipSecurityConfigLogUploadStatusPrcntg=genEquipSecurityConfigLogUploadStatusPrcntg, SwCommandTimer=SwCommandTimer, genEquipUnitShelfSlotStatusOccupancy=genEquipUnitShelfSlotStatusOccupancy, genEquipSecurity=genEquipSecurity, genEquipUnitAlarmOutputTable=genEquipUnitAlarmOutputTable, genEquipCurrentAlarm=genEquipCurrentAlarm, genEquipSecurityCsrUploadConfigIpV6Address=genEquipSecurityCsrUploadConfigIpV6Address, genEquipTrafficCryptoConfigId=genEquipTrafficCryptoConfigId, genEquipUnitLicenseDateCode=genEquipUnitLicenseDateCode, genEquipMngCfgFileTransferFileName=genEquipMngCfgFileTransferFileName, genEquipUnitShelfTccStatusEntry=genEquipUnitShelfTccStatusEntry, genEquipUnitLicenseCutThrough=genEquipUnitLicenseCutThrough, genEquipSecurityAccessControl=genEquipSecurityAccessControl, genEquipUnitShelfSlotStatusCommunication=genEquipUnitShelfSlotStatusCommunication, genEquipProtectionAdmin=genEquipProtectionAdmin, genEquipFaultErrDescr=genEquipFaultErrDescr, genEquipSecurityAccessControlRadiusServerPort=genEquipSecurityAccessControlRadiusServerPort, genEquipUnitIduPowerSupply2AlarmAdmin=genEquipUnitIduPowerSupply2AlarmAdmin, genEquipDiversityType=genEquipDiversityType, genEquipMngCfg=genEquipMngCfg, genEquipUnitInfoNtpConfigIndex=genEquipUnitInfoNtpConfigIndex, genEquipSecurityAccessControlUserLastLogout=genEquipSecurityAccessControlUserLastLogout, genEquipMngCfgFileTransferAddress=genEquipMngCfgFileTransferAddress, genEquipSecurityConfigLogUploadConfigTable=genEquipSecurityConfigLogUploadConfigTable, genEquipSecurityAccessControlProfileName=genEquipSecurityAccessControlProfileName, genEquipMngCfgOperationFileNumber=genEquipMngCfgOperationFileNumber, genEquipSecurityAccessControlProfileEntry=genEquipSecurityAccessControlProfileEntry, genEquipUnitAlarmOutputAdmin=genEquipUnitAlarmOutputAdmin, genEquipEventLog=genEquipEventLog, genEquipSecurityUsersPriviledge=genEquipSecurityUsersPriviledge, genEquipSecurityCsrUploadConfigPath=genEquipSecurityCsrUploadConfigPath, CfgUnitInfoOper=CfgUnitInfoOper, genEquipSecurityCertificateDownloadConfigPath=genEquipSecurityCertificateDownloadConfigPath, genEquipTrapCfgMgrId=genEquipTrapCfgMgrId, genEquipMngSwProxyLogin=genEquipMngSwProxyLogin, genEquipSecurityUsersTable=genEquipSecurityUsersTable, genEquipSecurityCsrCertificateFileTransferSet=genEquipSecurityCsrCertificateFileTransferSet, genEquipUnitShelfManagmentSeverityMajor=genEquipUnitShelfManagmentSeverityMajor, genEquipMngFileTransferUploadConfigStatus=genEquipMngFileTransferUploadConfigStatus, genEquipMngUnitInfoFileTransferEntry=genEquipMngUnitInfoFileTransferEntry, genEquipSecurityAccessControlRadiusServerConnectivityStatus=genEquipSecurityAccessControlRadiusServerConnectivityStatus, genEquipSecurityAccessControlRadiusServerTimeout=genEquipSecurityAccessControlRadiusServerTimeout, genEquipUnitInfoNTPStatus=genEquipUnitInfoNTPStatus, genEquipUnitCLLI=genEquipUnitCLLI, genEquipUnitShelfManagmentTable=genEquipUnitShelfManagmentTable, genEquipMngSwSlotRunningVersionTable=genEquipMngSwSlotRunningVersionTable, genEquipEventLogRaisedTimeT=genEquipEventLogRaisedTimeT, genEquipMngSwTimerEntry=genEquipMngSwTimerEntry, genEquipUnitInfoNG=genEquipUnitInfoNG, genEquipUnitLicenseViolationStatus=genEquipUnitLicenseViolationStatus, genEquipMngSwTimerInstallationTimer=genEquipMngSwTimerInstallationTimer, RfuId=RfuId, genEquipMngCfgFileTransferStatusEntry=genEquipMngCfgFileTransferStatusEntry, genEquipSecurityGenFTConfigAddress=genEquipSecurityGenFTConfigAddress, genEquipMngCfgRestoreStatus=genEquipMngCfgRestoreStatus, genEquipUnitInfoNTPAdmin=genEquipUnitInfoNTPAdmin, genEquipUnitShelfTccConfigAdmin=genEquipUnitShelfTccConfigAdmin, genEquipCurrentAlarmEntry=genEquipCurrentAlarmEntry, Severity=Severity, genEquipMngUnitInfoFileTransferIndex=genEquipMngUnitInfoFileTransferIndex, genEquipMngSwIDUVersionsStandByTargetDevice=genEquipMngSwIDUVersionsStandByTargetDevice, LoopbackType=LoopbackType, genEquipUnitShelfMaskUnderVoltageAlarmFirstPowerFeed=genEquipUnitShelfMaskUnderVoltageAlarmFirstPowerFeed, genEquipMngCfgFileRestoreStatus=genEquipMngCfgFileRestoreStatus, genEquipSecurityCertificateDownloadConfigIpv4Address=genEquipSecurityCertificateDownloadConfigIpv4Address, genEquipUnitAlarmInputText=genEquipUnitAlarmInputText, genEquipMngSwInstallPercentageDoneStandBy=genEquipMngSwInstallPercentageDoneStandBy, genEquipUnitDescription=genEquipUnitDescription, RateMbps=RateMbps, genEquipUnitShelfArchivesOperationStatus=genEquipUnitShelfArchivesOperationStatus, genEquipUnitInfoNtpConfigEntry=genEquipUnitInfoNtpConfigEntry, TrailIfType=TrailIfType, genEquipUnitAlarmOutputCounter=genEquipUnitAlarmOutputCounter, genEquipCurrentAlarmId=genEquipCurrentAlarmId, genEquipUnitShelfManagmentSlotReset=genEquipUnitShelfManagmentSlotReset, genEquipSecurityAccessControlProfileSecurityRead=genEquipSecurityAccessControlProfileSecurityRead, genEquipMngSwIDUVersionsTable=genEquipMngSwIDUVersionsTable, genEquipSecurityConfigLogUploadConfigUsername=genEquipSecurityConfigLogUploadConfigUsername, genEquipCurrentAlarmRaisedTimeT=genEquipCurrentAlarmRaisedTimeT, FileTransferStatus=FileTransferStatus, genEquipMngSwIDUVersionsStandByDownloadedPackage=genEquipMngSwIDUVersionsStandByDownloadedPackage, genEquipMngSwFileTransferPath=genEquipMngSwFileTransferPath, genEquipSecurityCsrAttributesIndex=genEquipSecurityCsrAttributesIndex, FileRestoreStatus=FileRestoreStatus, genEquipUnitShelfSlotConfigTable=genEquipUnitShelfSlotConfigTable, genEquipMngUnitInfoFileTransferStatusEntry=genEquipMngUnitInfoFileTransferStatusEntry, genEquipSecurityConfigurationRadiusSecret=genEquipSecurityConfigurationRadiusSecret, genEquipUnitDaylightSavingTimeEndDay=genEquipUnitDaylightSavingTimeEndDay, genEquipSecurityAccessControlUserName=genEquipSecurityAccessControlUserName, SignalLevel=SignalLevel, genEquipMngSwDowngradeCommonRfuVersion=genEquipMngSwDowngradeCommonRfuVersion, genEquipSecurityAccessControlProfileMngRead=genEquipSecurityAccessControlProfileMngRead, genEquipMngUnitInfoOperation=genEquipMngUnitInfoOperation, genEquipMngFileTransferDownloadCliScriptStatus=genEquipMngFileTransferDownloadCliScriptStatus, genEquipMngCfgCommand=genEquipMngCfgCommand, genEquipMngCfgOperationOperation=genEquipMngCfgOperationOperation, genEquipMngUnitInfoFileTransferStatusIndex=genEquipMngUnitInfoFileTransferStatusIndex, genEquipSecurityConfigLogUploadConfigFilename=genEquipSecurityConfigLogUploadConfigFilename, genEquipSecurityConfigLogUploadConfigPath=genEquipSecurityConfigLogUploadConfigPath, genEquipSecurityCertificateInstallSet=genEquipSecurityCertificateInstallSet, genEquipUnitShelfManagmentMngSwCommand=genEquipUnitShelfManagmentMngSwCommand, genEquipMngCfgOperationTable=genEquipMngCfgOperationTable, genEquipSecurityProtocolsControlSNMPTrapVersion=genEquipSecurityProtocolsControlSNMPTrapVersion, genEquipMngCfgConfigurationFilesTimeDate=genEquipMngCfgConfigurationFilesTimeDate, genEquipMngCfgUploadStatus=genEquipMngCfgUploadStatus, RaduisAcceaaLevel=RaduisAcceaaLevel, genEquipProtection=genEquipProtection, genEquipSecurityConfigLogUploadStatusStatus=genEquipSecurityConfigLogUploadStatusStatus, genEquipUnitInfoNtpConfigTable=genEquipUnitInfoNtpConfigTable, genEquipUnitShelfTccConfigReset=genEquipUnitShelfTccConfigReset, genEquipUnitShelfSlotStatusEntry=genEquipUnitShelfSlotStatusEntry, genEquipSecurityAccessControlRadiusUsersTdmReadLevel=genEquipSecurityAccessControlRadiusUsersTdmReadLevel, genEquipEventLogCounter=genEquipEventLogCounter, EnableDisableSMI2=EnableDisableSMI2, genEquipInventorySlotIndex=genEquipInventorySlotIndex, genEquipSecurityCsrUploadConfigEntry=genEquipSecurityCsrUploadConfigEntry, genEquipSecurityAccessControlProfileEthRead=genEquipSecurityAccessControlProfileEthRead, genEquipUnitShelfManagmentSeveritySlot=genEquipUnitShelfManagmentSeveritySlot, genEquipUnitLicenseTdmInterfaceStandard=genEquipUnitLicenseTdmInterfaceStandard, genEquipUnitInfoNTPPollInterval=genEquipUnitInfoNTPPollInterval, genEquipUnitShelfAbcMuxTable=genEquipUnitShelfAbcMuxTable, genEquipMngUnitInfoFileTransferPath=genEquipMngUnitInfoFileTransferPath, HalfFull=HalfFull, genEquipDiagAndMaintenanceRadioLoopbackTimeout=genEquipDiagAndMaintenanceRadioLoopbackTimeout, genEquipUnitInfoTimeServicesUtcDateAndTime=genEquipUnitInfoTimeServicesUtcDateAndTime, genEquipMngCfgOperationIndex=genEquipMngCfgOperationIndex, genEquipSecurityConfigurationRadiusRetries=genEquipSecurityConfigurationRadiusRetries, genEquipUnitShelfSlotStatusSlotID=genEquipUnitShelfSlotStatusSlotID, genEquipCurrentAlarmUserText=genEquipCurrentAlarmUserText, genEquipUnitShelfPdcFanStatusTable=genEquipUnitShelfPdcFanStatusTable, genEquipUnitInfoTimeServicesUtcCurrentDateAndTime=genEquipUnitInfoTimeServicesUtcCurrentDateAndTime, genEquipUnitContactPerson=genEquipUnitContactPerson, VmResetType=VmResetType, genEquipUnitIduPowerSupply1AlarmAdmin=genEquipUnitIduPowerSupply1AlarmAdmin, genEquipInventoryPartNumber=genEquipInventoryPartNumber, genEquipSecuritySNMPV3=genEquipSecuritySNMPV3, genEquipSecurityConfigurationRadiusPort=genEquipSecurityConfigurationRadiusPort, genEquipSecurityCsrAttributesTable=genEquipSecurityCsrAttributesTable, genEquipSecurityCsrUploadConfigPassword=genEquipSecurityCsrUploadConfigPassword, genEquipUnitAlarmOutputStatus=genEquipUnitAlarmOutputStatus, genEquipSecurityRadiusAdmin=genEquipSecurityRadiusAdmin, genEquipSecurityAccessControlUserTable=genEquipSecurityAccessControlUserTable, genEquipSecurityGenImportExportAdmin=genEquipSecurityGenImportExportAdmin, genEquipUnitShelfTccStatusTable=genEquipUnitShelfTccStatusTable, genEquipUnitShelfPdcFanStatusPdcFanOccupancy=genEquipUnitShelfPdcFanStatusPdcFanOccupancy, genEquipMngFileTransferDownloadConfigStatus=genEquipMngFileTransferDownloadConfigStatus, genEquipMngUnitInfoFileTransferAddress=genEquipMngUnitInfoFileTransferAddress, genEquipSecurityCertificateDownloadStatus=genEquipSecurityCertificateDownloadStatus, genEquipSecurityAccessControlRadiusUsersEthWriteLevel=genEquipSecurityAccessControlRadiusUsersEthWriteLevel, genEquipUnitSwitchAppLicense=genEquipUnitSwitchAppLicense, genEquipMngCfgOperationTimer=genEquipMngCfgOperationTimer, genEquipSecurityConfigurationRadiusServerIP=genEquipSecurityConfigurationRadiusServerIP, genEquipOperation=genEquipOperation, genEquipMngCfgOperationSlotNumber=genEquipMngCfgOperationSlotNumber, genEquipEventLogModule=genEquipEventLogModule, genEquipUnitShelfTccStatusAllowedCardTypes=genEquipUnitShelfTccStatusAllowedCardTypes, genEquipEventLogId=genEquipEventLogId, genEquipSecurityGenFTConfigUsername=genEquipSecurityGenFTConfigUsername, genEquipSecuritySNMPV3AuthAccessMode=genEquipSecuritySNMPV3AuthAccessMode, CsrCertificateFTState=CsrCertificateFTState, genEquipUnitShelfPdcFanStatusEntry=genEquipUnitShelfPdcFanStatusEntry, genEquipSecurityProtocolsControl=genEquipSecurityProtocolsControl, genEquipUnitShelfSlotConfigLabel=genEquipUnitShelfSlotConfigLabel, genEquipUnitGMTMins=genEquipUnitGMTMins, genEquipUnitInfoTimeServicesIndex=genEquipUnitInfoTimeServicesIndex, genEquipTrapCfgMgrIPv6=genEquipTrapCfgMgrIPv6, genEquipCurrentAlarmCounter=genEquipCurrentAlarmCounter, genEquipAlarmConfigDefault=genEquipAlarmConfigDefault, genEquipMngUnitInfoStatus=genEquipMngUnitInfoStatus, genEquipSecurityCsrUploadConfigFilename=genEquipSecurityCsrUploadConfigFilename, genEquipSecurityAccessControlRadiusUsersId=genEquipSecurityAccessControlRadiusUsersId, CsrFileFormat=CsrFileFormat, genEquipUnitShelfManagmentEntry=genEquipUnitShelfManagmentEntry, genEquipSecurityAccessControlRadiusUsersRadioWriteLevel=genEquipSecurityAccessControlRadiusUsersRadioWriteLevel, genEquipCurrentAlarmCorrectiveActions=genEquipCurrentAlarmCorrectiveActions, genEquipSecurityXFTPProtocol=genEquipSecurityXFTPProtocol, genEquipUnitShelfManagmentSeverityTable=genEquipUnitShelfManagmentSeverityTable, genEquipMngSwIDUVersionsStandByIndex=genEquipMngSwIDUVersionsStandByIndex, BerLevel=BerLevel, genEquipSecurityCfgSecurityFileName=genEquipSecurityCfgSecurityFileName, genEquipMngSwCommand=genEquipMngSwCommand, genEquipCurrentAlarmLastChangeCounter=genEquipCurrentAlarmLastChangeCounter, MetricImperial=MetricImperial, genEquipTrafficCryptoStatusId=genEquipTrafficCryptoStatusId, genEquipSecurityAccessControlRadiusUsersRadioReadLevel=genEquipSecurityAccessControlRadiusUsersRadioReadLevel, genEquipSecurityAccessControlProfileSecurityWrite=genEquipSecurityAccessControlProfileSecurityWrite, genEquipUnitInfoTimeServicesTable=genEquipUnitInfoTimeServicesTable, genEquipUnitShelfManagmentSeverityIndeterminate=genEquipUnitShelfManagmentSeverityIndeterminate, genEquipMngFileTransfer=genEquipMngFileTransfer, genEquipUnitshelfAllODUAdmin=genEquipUnitshelfAllODUAdmin, genEquipProtectionMateMACAddr=genEquipProtectionMateMACAddr, genEquipMngSwUpgradeCommonRfuVersion=genEquipMngSwUpgradeCommonRfuVersion, genEquipSecurityCertificateDownloadConfigFilename=genEquipSecurityCertificateDownloadConfigFilename, genEquipDiversitySwitchCounter=genEquipDiversitySwitchCounter, genEquipUnitInfoTimeServicesDstStartDay=genEquipUnitInfoTimeServicesDstStartDay, genEquipLastCfgTimeStamp=genEquipLastCfgTimeStamp, genEquipSecurityAccessControlRadiusServerIpv6Address=genEquipSecurityAccessControlRadiusServerIpv6Address, genEquipSecurityAccessControlRadiusUsersAccessChannels=genEquipSecurityAccessControlRadiusUsersAccessChannels, genEquipUnitShelfPdcFanStatusPdcFanCardType=genEquipUnitShelfPdcFanStatusPdcFanCardType, genEquipUnitShelfAbcMuxNumber=genEquipUnitShelfAbcMuxNumber, genEquipSecurityCsrCertificateGenerateAndUploadPercentage=genEquipSecurityCsrCertificateGenerateAndUploadPercentage, genEquipUnitAlarmOutput=genEquipUnitAlarmOutput, genEquipSecuritySNMPV3AuthTable=genEquipSecuritySNMPV3AuthTable, SupportedNotsupported=SupportedNotsupported, QueueName=QueueName, genEquipDiversityPrimaryRadio=genEquipDiversityPrimaryRadio, genEquipAlarmConfigSeverity=genEquipAlarmConfigSeverity, genEquipAlarmConfigId=genEquipAlarmConfigId)
mibBuilder.exportSymbols("MWRM-UNIT-MIB", genEquipMngCfgConfigurationFilesSWVersion=genEquipMngCfgConfigurationFilesSWVersion, genEquipUnitLicenseFeatureId=genEquipUnitLicenseFeatureId, genEquipSecurityXFTP=genEquipSecurityXFTP, genEquipEventLogDesc=genEquipEventLogDesc, genEquipMngCfgConfigurationFilesTable=genEquipMngCfgConfigurationFilesTable, genEquipSecuritySNMPV3AuthPassword=genEquipSecuritySNMPV3AuthPassword, genEquipUnitInfo=genEquipUnitInfo, genEquipUnitLatitude=genEquipUnitLatitude, genEquipSecurityAccessControlProfileUsed=genEquipSecurityAccessControlProfileUsed, genEquipTrafficCryptoConfigMkey=genEquipTrafficCryptoConfigMkey, genEquipMngSwFileTransferStatusEntry=genEquipMngSwFileTransferStatusEntry, genEquipUnitInfoTime=genEquipUnitInfoTime, genEquipUnitInfoTimeServicesEntry=genEquipUnitInfoTimeServicesEntry, genEquipUnitShelfSlotStatusTable=genEquipUnitShelfSlotStatusTable, genEquipSecurityFipsAdmin=genEquipSecurityFipsAdmin, genEquipUnitShelfTccStatusOccupancy=genEquipUnitShelfTccStatusOccupancy, genEquipMngSwFileTransferStatusResultStandBy=genEquipMngSwFileTransferStatusResultStandBy, genEquipMngCliScriptOperationStatus=genEquipMngCliScriptOperationStatus, genEquipProtectionRevertiveMaxNumOfTries=genEquipProtectionRevertiveMaxNumOfTries, genEquipTrapCfgMgrCLLI=genEquipTrapCfgMgrCLLI, genEquipUnitInfoTimeServicesUtcHours=genEquipUnitInfoTimeServicesUtcHours, genEquipSecurityCsrUploadConfigIpv4Address=genEquipSecurityCsrUploadConfigIpv4Address, SlotId=SlotId, genEquipMngSwVersions=genEquipMngSwVersions, genEquipMngSwIDUVersionsEntry=genEquipMngSwIDUVersionsEntry, genEquipSecurityAccessControlProfileTable=genEquipSecurityAccessControlProfileTable, genEquipMngSwIDUVersionsStandByInstalledVersion=genEquipMngSwIDUVersionsStandByInstalledVersion, genEquipMngSwFileTransferPercentageDone=genEquipMngSwFileTransferPercentageDone, genEquipMngSwInstallStatusResultStandBy=genEquipMngSwInstallStatusResultStandBy, genEquipSecurityAccessControlUserRowStatus=genEquipSecurityAccessControlUserRowStatus, genEquipTrafficCryptoStatusTable=genEquipTrafficCryptoStatusTable, genEquipUnitIDUPartNumber=genEquipUnitIDUPartNumber, genEquipUnitShelfSlotStatusAllowedCardTypes=genEquipUnitShelfSlotStatusAllowedCardTypes, genEquipTrafficCryptoConfigMkeyPeriod=genEquipTrafficCryptoConfigMkeyPeriod, genEquipSecurityProtocolsControlSNMPAdmin=genEquipSecurityProtocolsControlSNMPAdmin, genEquipTrapCfgMgrIP=genEquipTrapCfgMgrIP, genEquipSecurityProtocolsControlAutoSessionTimeOut=genEquipSecurityProtocolsControlAutoSessionTimeOut, genEquipMngCfgConfigurationFilesSystemIP=genEquipMngCfgConfigurationFilesSystemIP, genEquipSecurityAccessControlProfileChannel=genEquipSecurityAccessControlProfileChannel, genEquipTrafficCryptoStatusMkeyTimeExpire=genEquipTrafficCryptoStatusMkeyTimeExpire, genEquipMngSwIDUVersionsStandByTable=genEquipMngSwIDUVersionsStandByTable, genEquipMngUnitInfoProgress=genEquipMngUnitInfoProgress, genEquipSecuritySNMPV3AuthUserName=genEquipSecuritySNMPV3AuthUserName, genEquipUnitInfoTimeServicesDstStartMonth=genEquipUnitInfoTimeServicesDstStartMonth, genEquipSecurityConfigurationRadiusTimeout=genEquipSecurityConfigurationRadiusTimeout, genEquipUnitShelfTccConfigLabel=genEquipUnitShelfTccConfigLabel, genEquipSecurityCertificateDownloadConfigPassword=genEquipSecurityCertificateDownloadConfigPassword, genEquipMngCfgCliScriptFileName=genEquipMngCfgCliScriptFileName, genEquipSecurityAccessControlRadiusUsersTable=genEquipSecurityAccessControlRadiusUsersTable, SwCommand=SwCommand, genEquipUnitAlarmInputState=genEquipUnitAlarmInputState, genEquipUnitInfoNtpStatusTable=genEquipUnitInfoNtpStatusTable, GreenYellow=GreenYellow, genEquipMngCfgConfigurationFilesFileNumber=genEquipMngCfgConfigurationFilesFileNumber, genEquipTrapCfgMgrEntry=genEquipTrapCfgMgrEntry, genEquipSecurityAccessControlRadiusUsersEthReadLevel=genEquipSecurityAccessControlRadiusUsersEthReadLevel, genEquipUnitIduTemperature=genEquipUnitIduTemperature, genEquipTrafficCryptoConfigEntry=genEquipTrafficCryptoConfigEntry, genEquipUnitInfoNTP=genEquipUnitInfoNTP, genEquipUnitLicenseInfo=genEquipUnitLicenseInfo, DownUp=DownUp, genEquipUnitShelfManagmentCommunicationStatus=genEquipUnitShelfManagmentCommunicationStatus, CardOccupancy=CardOccupancy, genEquipMngFileTransferFileTypeOper=genEquipMngFileTransferFileTypeOper, genEquipEventLogIfIndex=genEquipEventLogIfIndex, genEquipAlarmConfigTable=genEquipAlarmConfigTable, genEquipUnitDaylightSavingTimeEndMonth=genEquipUnitDaylightSavingTimeEndMonth, genEquipUnitInfoNtpConfigAdmin=genEquipUnitInfoNtpConfigAdmin, genEquipSecurityCertificateDownloadPercentage=genEquipSecurityCertificateDownloadPercentage, genEquipMngSwIDUVersionsCounter=genEquipMngSwIDUVersionsCounter, genEquipSecurityAccessControlPassEnforceStrength=genEquipSecurityAccessControlPassEnforceStrength, genEquipSecurityProtocolsControlSNMPOperStatus=genEquipSecurityProtocolsControlSNMPOperStatus, genEquipMngUnitInfo=genEquipMngUnitInfo, genEquipUnitShelfSlotConfigEntry=genEquipUnitShelfSlotConfigEntry, ClockSrc=ClockSrc, genEquipCurrentAlarmDesc=genEquipCurrentAlarmDesc, genEquipMngSwFileTransferTable=genEquipMngSwFileTransferTable, genEquipMngCfgFileTransferUserName=genEquipMngCfgFileTransferUserName, genEquipSecurityUsersRowStatus=genEquipSecurityUsersRowStatus, genEquipUnitShelfInstallation=genEquipUnitShelfInstallation, genEquipMIBVersion=genEquipMIBVersion, genEquipSecuritySNMPV3AuthAuthenticationAlgorithm=genEquipSecuritySNMPV3AuthAuthenticationAlgorithm, genEquipMngCfgFileTransferPassword=genEquipMngCfgFileTransferPassword, genEquipSecurityAccessControlUserLoggedIn=genEquipSecurityAccessControlUserLoggedIn, genEquipSecurityAccessControlUserProfile=genEquipSecurityAccessControlUserProfile, genEquipSecuritySNMPV3AuthEntry=genEquipSecuritySNMPV3AuthEntry, genEquipSecurityCfgTelnetAdmin=genEquipSecurityCfgTelnetAdmin, genEquipDiversitySwitchCounterClear=genEquipDiversitySwitchCounterClear, genEquipMngSwSlotRunningVersionSlotId=genEquipMngSwSlotRunningVersionSlotId, genEquipTrapCfgMgrName=genEquipTrapCfgMgrName, genEquipSecurityCsrAttributesEmail=genEquipSecurityCsrAttributesEmail, genEquipTrapCfgMgrPort=genEquipTrapCfgMgrPort, genEquipSecurityAccessControlPassAging=genEquipSecurityAccessControlPassAging, genEquipMngCfgFileTransferPath=genEquipMngCfgFileTransferPath, genEquipUnitShelfManagmentSlotIp=genEquipUnitShelfManagmentSlotIp, genEquipMngCfgFileTransferEntry=genEquipMngCfgFileTransferEntry, genEquipSecurityConfigLogUploadConfigIpaddress=genEquipSecurityConfigLogUploadConfigIpaddress, genEquipMngCfgFileTransferStatusPercentageDone=genEquipMngCfgFileTransferStatusPercentageDone, genEquipCurrentAlarmState=genEquipCurrentAlarmState, genEquipSecurityGenFTConfigProtocol=genEquipSecurityGenFTConfigProtocol, genEquipTrafficCryptoStatusValid=genEquipTrafficCryptoStatusValid, genEquipMngSwTimeToInstall=genEquipMngSwTimeToInstall, genEquipUnitLicenseCode=genEquipUnitLicenseCode, genEquipUnitLongitude=genEquipUnitLongitude, genEquipSecurityAccessControlUserPassword=genEquipSecurityAccessControlUserPassword, genEquipInventoryCardType=genEquipInventoryCardType, microwave_radio=microwave_radio, genEquipMngCfgBackupProgress=genEquipMngCfgBackupProgress, genEquipSecurityAccessControlRadiusServerRetries=genEquipSecurityAccessControlRadiusServerRetries, genEquipCurrentAlarmAdditionalInfo=genEquipCurrentAlarmAdditionalInfo, genEquipSecurityCfgCSRCreation=genEquipSecurityCfgCSRCreation, genEquipUnitInfoNTPServerIP=genEquipUnitInfoNTPServerIP, genEquipMngCfgFileTransferIpv6Address=genEquipMngCfgFileTransferIpv6Address, genEquipAlarmServiceAffect=genEquipAlarmServiceAffect, genEquipTrapCfgMgrV3User=genEquipTrapCfgMgrV3User, genEquipSecurityConfigLogUploadConfigPassword=genEquipSecurityConfigLogUploadConfigPassword, genEquipMngSwFileTransferPercentageDoneStandBy=genEquipMngSwFileTransferPercentageDoneStandBy, Exponent=Exponent, genEquipDiagAndMaintenance=genEquipDiagAndMaintenance, genEquipDiversityReceiveRadio=genEquipDiversityReceiveRadio, genEquipSecurityCfgAutoLogOutPeriod=genEquipSecurityCfgAutoLogOutPeriod, genEquipMngCfgFileTransferStatusResult=genEquipMngCfgFileTransferStatusResult, genEquipUnitDaylightSavingTimeStartDay=genEquipUnitDaylightSavingTimeStartDay, genEquipUnitLicenseFeatureTable=genEquipUnitLicenseFeatureTable, genEquipSecurityCsrUploadConfigIndex=genEquipSecurityCsrUploadConfigIndex, genEquipUnitACMLicense=genEquipUnitACMLicense, CfgOper=CfgOper, genEquipUnitInfoTimeServicesUtcMinutes=genEquipUnitInfoTimeServicesUtcMinutes, genEquipSecurityGenFTStatusIndex=genEquipSecurityGenFTStatusIndex, genEquipSecurityAccessControlRadiusUsersSecurityReadLevel=genEquipSecurityAccessControlRadiusUsersSecurityReadLevel, genEquipMngSwInstallStatusIndex=genEquipMngSwInstallStatusIndex, genEquipUnitShelfTccConfigExpectedCardType=genEquipUnitShelfTccConfigExpectedCardType, genEquipTrafficCryptoConfigBackupMkey=genEquipTrafficCryptoConfigBackupMkey, genEquipMngSwFileTransferStatusIndex=genEquipMngSwFileTransferStatusIndex, genEquipAlarmConfigEntry=genEquipAlarmConfigEntry, genEquipSecurityGenFTStatusTable=genEquipSecurityGenFTStatusTable, genEquipMngCfgFileTransferProtocol=genEquipMngCfgFileTransferProtocol, genEquipMngSwFileTransferProtocol=genEquipMngSwFileTransferProtocol, genEquipMngCfgOperationTimedInstallation=genEquipMngCfgOperationTimedInstallation, genEquipSecurityAccessControlRadiusServerIpV4Address=genEquipSecurityAccessControlRadiusServerIpV4Address, genEquipMngSwSlotRunningVersionActualVersion=genEquipMngSwSlotRunningVersionActualVersion, genEquipSecurityUsersLastLogin=genEquipSecurityUsersLastLogin, genEquipSecurityCfgDownloadSecurityStatus=genEquipSecurityCfgDownloadSecurityStatus, genEquipMngUnitInfoFileTransferPassword=genEquipMngUnitInfoFileTransferPassword, genEquipSecurityCsrAttributesEntry=genEquipSecurityCsrAttributesEntry, genEquipSecurityCsrUploadConfigTableUsername=genEquipSecurityCsrUploadConfigTableUsername, genEquipMngSwFileTransferAddress=genEquipMngSwFileTransferAddress, genEquipMngSwSlotRunningVersionEntry=genEquipMngSwSlotRunningVersionEntry, genEquipUnitGMTHours=genEquipUnitGMTHours, genEquipUnitLicenseAsymScripts=genEquipUnitLicenseAsymScripts, genEquipMngCfgSetToDefaultKeepIp=genEquipMngCfgSetToDefaultKeepIp, genEquipSecurityProtocolsControlHTTPAdmin=genEquipSecurityProtocolsControlHTTPAdmin, genEquipAlarmConfigDescr=genEquipAlarmConfigDescr, ProgressStatus=ProgressStatus, genEquipSecurityAccessControlRadiusUsersSyncReadLevel=genEquipSecurityAccessControlRadiusUsersSyncReadLevel, genEquipMngSwTimerTimeToInstall=genEquipMngSwTimerTimeToInstall, genEquipUnitShelfMultiplexTrafficSource=genEquipUnitShelfMultiplexTrafficSource, genEquipSecurityUsersPasswd=genEquipSecurityUsersPasswd, genEquipSecurityGenFTConfigIpV6Address=genEquipSecurityGenFTConfigIpV6Address, genEquipMngSwFileTransferStatusResult=genEquipMngSwFileTransferStatusResult, genEquipMngSwInstalledRfuVersion=genEquipMngSwInstalledRfuVersion, genEquipMngSwIDUVersionsTargetDevice=genEquipMngSwIDUVersionsTargetDevice, genEquipMngUnitInfoFileTransferStatusPercentageDone=genEquipMngUnitInfoFileTransferStatusPercentageDone, genEquipMngCfgConfigurationFilesCardsConfigured=genEquipMngCfgConfigurationFilesCardsConfigured, genEquipMngSwOperationIndex=genEquipMngSwOperationIndex, genEquipUnitShelfTccStatusCommunication=genEquipUnitShelfTccStatusCommunication, genEquipSecurityGenFTStatusStatus=genEquipSecurityGenFTStatusStatus, genEquipUnitAlarmInputAdmin=genEquipUnitAlarmInputAdmin, genEquipCurrentAlarmName=genEquipCurrentAlarmName, genEquipDiversityForceActive=genEquipDiversityForceActive, AllowedNotAllowed=AllowedNotAllowed, genEquipSecurityAccessControlProfileTDMWrite=genEquipSecurityAccessControlProfileTDMWrite, genEquipSecurityAccessControlRadiusUsersEntry=genEquipSecurityAccessControlRadiusUsersEntry, genEquipUnitLicenseNetworkResiliency=genEquipUnitLicenseNetworkResiliency, genEquipUnitDaylightSavingTimeOffset=genEquipUnitDaylightSavingTimeOffset, genEquipUnitShelfManagmentSlotPopulation=genEquipUnitShelfManagmentSlotPopulation, genEquipSecurityAccessControlFailureLoginAttempt=genEquipSecurityAccessControlFailureLoginAttempt, genEquipInventoryNumberWorkingDays=genEquipInventoryNumberWorkingDays, genEquipUnitShelfTccConfigTable=genEquipUnitShelfTccConfigTable, genEquipUnitLicenseFeatureEntry=genEquipUnitLicenseFeatureEntry, genEquipProtectionRevertiveMinTimer=genEquipProtectionRevertiveMinTimer, genEquipSecurityGenFTConfigTable=genEquipSecurityGenFTConfigTable, genEquipUnitLicenseDemoTimer=genEquipUnitLicenseDemoTimer, genEquipTrapCfgMgrTable=genEquipTrapCfgMgrTable, genEquipUnitLicenseFeatureIsAllowed=genEquipUnitLicenseFeatureIsAllowed, genEquipMngCfgDownloadStatus=genEquipMngCfgDownloadStatus, genEquipMngSwIDUVersionsUpgradePackage=genEquipMngSwIDUVersionsUpgradePackage, genEquipUnitInfoNtpStatusSyncServerIP=genEquipUnitInfoNtpStatusSyncServerIP, genEquipUnitAlarmInputTable=genEquipUnitAlarmInputTable, genEquipSecurityConfigLogUploadConfigEntry=genEquipSecurityConfigLogUploadConfigEntry, genEquipUnitShelfReset=genEquipUnitShelfReset, genEquipSecurityCsrAttributesCommonName=genEquipSecurityCsrAttributesCommonName, genEquipSecurityCertificate=genEquipSecurityCertificate, genEquipUnitInventoryNG=genEquipUnitInventoryNG, genEquipUnitMeasurementSystem=genEquipUnitMeasurementSystem, genEquipTrafficCryptoConfigConfigAdmin=genEquipTrafficCryptoConfigConfigAdmin, genEquipSecurityRadiusServerConfigurationEntry=genEquipSecurityRadiusServerConfigurationEntry, genEquipMngSwFileTransferStatusTable=genEquipMngSwFileTransferStatusTable, Integrity=Integrity, genEquipSecurityCfgSecurityFileFormat=genEquipSecurityCfgSecurityFileFormat, genEquipMngSwTimerTimerAbort=genEquipMngSwTimerTimerAbort, genEquipMngSwServerUrl=genEquipMngSwServerUrl, genEquipUnitLicenseValidationNumber=genEquipUnitLicenseValidationNumber, genEquipMngSwIDUVersionsStandByPackageName=genEquipMngSwIDUVersionsStandByPackageName, LicenseGeneric=LicenseGeneric, genEquipMngUnitInfoFileTransferTable=genEquipMngUnitInfoFileTransferTable, genEquipEventLogCorrectiveActions=genEquipEventLogCorrectiveActions, genEquipMngSwFileTransferPassword=genEquipMngSwFileTransferPassword, genEquipSecurityGenFTConfigFileName=genEquipSecurityGenFTConfigFileName, genEquipMngSwIDUVersionsRunningVersion=genEquipMngSwIDUVersionsRunningVersion, genEquipInventoryCardName=genEquipInventoryCardName, genEquipUnitAlarmInputEntry=genEquipUnitAlarmInputEntry, genEquipInventoryCardSubType=genEquipInventoryCardSubType, genEquipEventLogState=genEquipEventLogState, genEquipMngUnitInfoFileTransferProtocol=genEquipMngUnitInfoFileTransferProtocol, genEquipSecurityConfigLogUpload=genEquipSecurityConfigLogUpload, genEquipUnitShelfSlotConfigAdmin=genEquipUnitShelfSlotConfigAdmin, genEquipUnitShelfModuleRole=genEquipUnitShelfModuleRole, genEquipMngSwFTPTimer=genEquipMngSwFTPTimer, genEquipUnitShelfMaskUnderVoltageAlarmSecondPowerFeed=genEquipUnitShelfMaskUnderVoltageAlarmSecondPowerFeed, genEquipUnitInfoTimeServicesDstOffset=genEquipUnitInfoTimeServicesDstOffset, genEquipProtectionRevertiveTimerMultiplier=genEquipProtectionRevertiveTimerMultiplier, genEquipUnitAlarmOutputEntry=genEquipUnitAlarmOutputEntry, genEquipMngFileTransferUploadCSRStatus=genEquipMngFileTransferUploadCSRStatus, genEquipProtectionManualSwitch=genEquipProtectionManualSwitch, genEquipUnitShelfSlotConfigExpectedCardType=genEquipUnitShelfSlotConfigExpectedCardType, RadioId=RadioId, genEquipSecurityGenFTConfigEntry=genEquipSecurityGenFTConfigEntry, genEquipUnitShelfSlotStatusOperationalState=genEquipUnitShelfSlotStatusOperationalState, genEquipSecurityFipsStatus=genEquipSecurityFipsStatus, genEquipSecurityGenFTOperations=genEquipSecurityGenFTOperations, genEquipMngCfgFileTransferIndex=genEquipMngCfgFileTransferIndex, genEquipMngSwInstallStatusResult=genEquipMngSwInstallStatusResult, genEquipSecurityXFTPHostIP=genEquipSecurityXFTPHostIP, genEquipSecurityCsrAttributesFileFormat=genEquipSecurityCsrAttributesFileFormat, genEquipMngUnitInfoFileTransferStatusResult=genEquipMngUnitInfoFileTransferStatusResult, genEquipMngSwInstallationTimer=genEquipMngSwInstallationTimer, genEquipCurrentAlarmTable=genEquipCurrentAlarmTable, genEquipSecurityRadiusServer=genEquipSecurityRadiusServer, genEquipSecurityTrafficCrypto=genEquipSecurityTrafficCrypto, genEquipSecurityCfgWebProtocol=genEquipSecurityCfgWebProtocol, genEquipSecurityConfigLogUploadStatusTable=genEquipSecurityConfigLogUploadStatusTable, genEquipEventLogLastChangeCounter=genEquipEventLogLastChangeCounter, genEquipDiversityRevertiveMode=genEquipDiversityRevertiveMode, genEquipUnitInfoNtpStatusPollInterval=genEquipUnitInfoNtpStatusPollInterval, genEquipSecurityCertificateDownloadConfigTable=genEquipSecurityCertificateDownloadConfigTable, genEquipEventLogUserText=genEquipEventLogUserText, genEquipMngSwTimerTable=genEquipMngSwTimerTable, genEquipSecurityUsersPasswdAging=genEquipSecurityUsersPasswdAging, genEquipSecurityCsrAttributesLocality=genEquipSecurityCsrAttributesLocality, genEquipEventLogEntry=genEquipEventLogEntry, genEquipSecurityAccessControlUserExpired=genEquipSecurityAccessControlUserExpired, genEquipMngSwIDUVersionsPackageName=genEquipMngSwIDUVersionsPackageName, genEquipSecurityCertificateDownloadConfigEntry=genEquipSecurityCertificateDownloadConfigEntry)
mibBuilder.exportSymbols("MWRM-UNIT-MIB", genEquipSecurityAccessControlRadiusUserInstances=genEquipSecurityAccessControlRadiusUserInstances, genEquipSecurityAccessControlProfileRadioRead=genEquipSecurityAccessControlProfileRadioRead, genEquipSecurityAccessControlBlockunusedAccount=genEquipSecurityAccessControlBlockunusedAccount, genEquipSecurityCsrAttributesState=genEquipSecurityCsrAttributesState, genEquipUnitLicenseFeatureDescription=genEquipUnitLicenseFeatureDescription, genEquipUnitLicenseType=genEquipUnitLicenseType, genEquipUnitInfoNtpConfigServerIPaddress1=genEquipUnitInfoNtpConfigServerIPaddress1, genEquipSecurityXFTPUserName=genEquipSecurityXFTPUserName, genEquipProtectionMateIPAddr=genEquipProtectionMateIPAddr, genEquipUnitShelfTccStatusSlotID=genEquipUnitShelfTccStatusSlotID, genEquipUnitInfoNGTdmInterfaceStandard=genEquipUnitInfoNGTdmInterfaceStandard, genEquipSecurityAccessControlPassFirstLoginChange=genEquipSecurityAccessControlPassFirstLoginChange, genEquipUnitLicenseTDMCapacity=genEquipUnitLicenseTDMCapacity, genEquipUnitInfoNtpConfigVersion=genEquipUnitInfoNtpConfigVersion, genEquipMngCfgFileTransferStatusIndex=genEquipMngCfgFileTransferStatusIndex, genEquipMngSwDownloadStatus=genEquipMngSwDownloadStatus, genEquipSecurityAccessControlProfileRowStatus=genEquipSecurityAccessControlProfileRowStatus, genEquipUnitInfoNtpStatusEntry=genEquipUnitInfoNtpStatusEntry, genEquipSecurityConfigurationRadius=genEquipSecurityConfigurationRadius, genEquipMngSwFileTransferIpv6Address=genEquipMngSwFileTransferIpv6Address, genEquipMngSwInstallStatus=genEquipMngSwInstallStatus, genEquipMngUnitInfoFileTransferFileName=genEquipMngUnitInfoFileTransferFileName, EnableDisable=EnableDisable, genEquipUnitInfoNtpStatusIndex=genEquipUnitInfoNtpStatusIndex, genEquipUnitShelfManagmentSeverityCritical=genEquipUnitShelfManagmentSeverityCritical, genEquipMngCliScriptOperation=genEquipMngCliScriptOperation, genEquipMngSwInstallStatusEntry=genEquipMngSwInstallStatusEntry, genEquipSecuritySNMPV3AuthEncryptionMode=genEquipSecuritySNMPV3AuthEncryptionMode, genEquipUnitShelfSlotLabel=genEquipUnitShelfSlotLabel, genEquipUnitLicenseFeatureIsUsed=genEquipUnitLicenseFeatureIsUsed, genEquipProtectionRadioExcessiveBERSwitch=genEquipProtectionRadioExcessiveBERSwitch, genEquipMngUnitInfoGeneric=genEquipMngUnitInfoGeneric, genEquipSecurityCfgSecurityFileType=genEquipSecurityCfgSecurityFileType, genEquipSecurityCfgSecurityWebCertificateAdmin=genEquipSecurityCfgSecurityWebCertificateAdmin, RbacAccessLevel=RbacAccessLevel, genEquipUnitInventory=genEquipUnitInventory, genEquipMngSwIDUVersionsInstalledVersion=genEquipMngSwIDUVersionsInstalledVersion, genEquipTrapCfgMgrStatusChangeFilter=genEquipTrapCfgMgrStatusChangeFilter, genEquipSecurityAccessControlRadiusUsersTdmWriteLevel=genEquipSecurityAccessControlRadiusUsersTdmWriteLevel, genEquipUnitShelfTccConfigEntry=genEquipUnitShelfTccConfigEntry, genEquip=genEquip, genEquipUnitShelfTccStatusOperationalState=genEquipUnitShelfTccStatusOperationalState, genEquipMngSwIDUVersionsStandByEntry=genEquipMngSwIDUVersionsStandByEntry, InventoryCardType=InventoryCardType, genEquipSecurityAccessControlRadiusUsersMngWriteLevel=genEquipSecurityAccessControlRadiusUsersMngWriteLevel, genEquipMngSwInstallStatusTable=genEquipMngSwInstallStatusTable, genEquipUnitIpAddressType=genEquipUnitIpAddressType, genEquipDiversity=genEquipDiversity, genEquipMngCfgFileTransferStatus=genEquipMngCfgFileTransferStatus, genEquipMngSwServerPassword=genEquipMngSwServerPassword, genEquipUnitLicenseTDMCapacityValue=genEquipUnitLicenseTDMCapacityValue, genEquipSecurityUsersName=genEquipSecurityUsersName, genEquipSecuritySNMPReadCommunity=genEquipSecuritySNMPReadCommunity, genEquipSecurityCsrStatus=genEquipSecurityCsrStatus, genEquipInventoryTable=genEquipInventoryTable, genEquipMngCfgGeneric=genEquipMngCfgGeneric, genEquipMngSwTimerSlotNumber=genEquipMngSwTimerSlotNumber, genEquipProtectionRevertiveAdmin=genEquipProtectionRevertiveAdmin, NoYes=NoYes, genEquipDiagAndMaintenanceSDHLoopbackTimeout=genEquipDiagAndMaintenanceSDHLoopbackTimeout, genEquipSecurityUsersEntry=genEquipSecurityUsersEntry, genEquipTrafficCryptoStatusEntry=genEquipTrafficCryptoStatusEntry, genEquipUnitIDUSerialNumber=genEquipUnitIDUSerialNumber, genEquipSecurityUsersAndGroups=genEquipSecurityUsersAndGroups, genEquipSecurityConfigLogUploadConfigProtocol=genEquipSecurityConfigLogUploadConfigProtocol, genEquipMngCfgEthernetSwitchStoreConfiguration=genEquipMngCfgEthernetSwitchStoreConfiguration, genEquipMngCfgConfigurationFilesSystemType=genEquipMngCfgConfigurationFilesSystemType, genEquipMngSwOperationTimedInstallation=genEquipMngSwOperationTimedInstallation, genEquipSecurityConfigLogUploadStatusEntry=genEquipSecurityConfigLogUploadStatusEntry, FTStatus=FTStatus, genEquipProtectionCopyToMateComand=genEquipProtectionCopyToMateComand, genEquipSecurityCsrUploadConfigTable=genEquipSecurityCsrUploadConfigTable, genEquipUnitInfoNtpConfigServerIPaddress2=genEquipUnitInfoNtpConfigServerIPaddress2, genEquipUnitShelfAbcMuxAdmin=genEquipUnitShelfAbcMuxAdmin, genEquipMngSwOperationOperation=genEquipMngSwOperationOperation, OperState=OperState, genEquipEventLogTable=genEquipEventLogTable, genEquipSecurityAccessControlProfileSyncRead=genEquipSecurityAccessControlProfileSyncRead, genEquipSecurityAccessControlRadiusUsersSyncWriteLevel=genEquipSecurityAccessControlRadiusUsersSyncWriteLevel, genEquipMngCfgFileTransferTable=genEquipMngCfgFileTransferTable, genEquipProtectionAspRevertive=genEquipProtectionAspRevertive, genEquipSecurityAccessControlRadiusServerId=genEquipSecurityAccessControlRadiusServerId, genEquipMngFileTransferDownloadCertificateStatus=genEquipMngFileTransferDownloadCertificateStatus, genEquipSecurityConfiguration=genEquipSecurityConfiguration, genEquipUnitAlarmInput=genEquipUnitAlarmInput, genEquipSecurityGen=genEquipSecurityGen, genEquipEventLogProbableCause=genEquipEventLogProbableCause, genEquipMngSwIDUVersionsStandByRunningVersion=genEquipMngSwIDUVersionsStandByRunningVersion, genEquipSecurityCertificateDownloadConfigIndex=genEquipSecurityCertificateDownloadConfigIndex, PmTableType=PmTableType, genEquipUnitName=genEquipUnitName, genEquipProtectionLockout=genEquipProtectionLockout, genEquipMostSevereAlarm=genEquipMostSevereAlarm, genEquipSecurityCsrAttributesOu=genEquipSecurityCsrAttributesOu, genEquipUnitDaylightSavingTimeStartMonth=genEquipUnitDaylightSavingTimeStartMonth, genEquipCurrentAlarmProbableCause=genEquipCurrentAlarmProbableCause, genEquipSecurityAccessControlUserBlock=genEquipSecurityAccessControlUserBlock, genEquipUnitShelfSlotConfigSlotID=genEquipUnitShelfSlotConfigSlotID, genEquipUnitInfoTimeServicesDstEndMonth=genEquipUnitInfoTimeServicesDstEndMonth, genEquipProtectionMode=genEquipProtectionMode, genEquipUnitLicensePerUsage=genEquipUnitLicensePerUsage, genEquipMngSwFileTransferEntry=genEquipMngSwFileTransferEntry, genEquipMngUnitInfoFileTransferStatusTable=genEquipMngUnitInfoFileTransferStatusTable, genEquipSecurityRadiusServerConfigurationTable=genEquipSecurityRadiusServerConfigurationTable, genEquipMngSwOperationEntry=genEquipMngSwOperationEntry, genEquipMngSwIDUVersionsDowngradePackage=genEquipMngSwIDUVersionsDowngradePackage, genEquipMngCfgConfigurationFilesSystemID=genEquipMngCfgConfigurationFilesSystemID, InputSeverity=InputSeverity, genEquipSecurityMonitorAndLogs=genEquipSecurityMonitorAndLogs, genEquipTrafficCryptoConfigTable=genEquipTrafficCryptoConfigTable, genEquipTrapCfgMgrCommunity=genEquipTrapCfgMgrCommunity, genEquipSecurityCfgPassFirstLoginChange=genEquipSecurityCfgPassFirstLoginChange, genEquipUnitShelfManagmentSeverityWarning=genEquipUnitShelfManagmentSeverityWarning, genEquipInventoryEntry=genEquipInventoryEntry, genEquipSecurityAccessControlProfileRadioWrite=genEquipSecurityAccessControlProfileRadioWrite, genEquipMngSwWatchdogAdmin=genEquipMngSwWatchdogAdmin, genEquipProtectionMultiUnitLAGAdmin=genEquipProtectionMultiUnitLAGAdmin, genEquipUnitCapacityLicense=genEquipUnitCapacityLicense, genEquipFault=genEquipFault, OffOn=OffOn, genEquipSecuritySNMPV3AuthRowStatus=genEquipSecuritySNMPV3AuthRowStatus, genEquipSecuritySNMPWriteCommunity=genEquipSecuritySNMPWriteCommunity, genEquipUnitShelfSlotConfigSlotReset=genEquipUnitShelfSlotConfigSlotReset, genEquipSecurityAccessControlProfileSyncWrite=genEquipSecurityAccessControlProfileSyncWrite, genEquipMngCfgConfigurationFilesIndex=genEquipMngCfgConfigurationFilesIndex, genEquipMng=genEquipMng, genEquipRealTimeandDate=genEquipRealTimeandDate, genEquipCurrentAlarmSlotId=genEquipCurrentAlarmSlotId, genEquipUnit=genEquipUnit, genEquipSecurityCsrAttributesCountry=genEquipSecurityCsrAttributesCountry, genEquipMngSwProxyPassword=genEquipMngSwProxyPassword, genEquipUnitShelfManagmentSlot=genEquipUnitShelfManagmentSlot, genEquipMngSwOperationTable=genEquipMngSwOperationTable, genEquipUnitShelfSlotStatusCardType=genEquipUnitShelfSlotStatusCardType, genEquipSecurityCfgUploadPublicKeyStatus=genEquipSecurityCfgUploadPublicKeyStatus, genEquipUnitShelfPdcFanStatusPdcFanId=genEquipUnitShelfPdcFanStatusPdcFanId, genEquipTrapCfgMgrHeartbeatPeriod=genEquipTrapCfgMgrHeartbeatPeriod, genEquipMngSwServerLogin=genEquipMngSwServerLogin, genEquipSecurityCfgWarningBannerFName=genEquipSecurityCfgWarningBannerFName, genEquipMngCli=genEquipMngCli, genEquipProtectionRevertivePrimaryIDU=genEquipProtectionRevertivePrimaryIDU, genEquipUnitShelfAbcMuxEntry=genEquipUnitShelfAbcMuxEntry, genEquipMngUnitInfoFileTransferUserName=genEquipMngUnitInfoFileTransferUserName, genEquipUnitLocation=genEquipUnitLocation, genEquipMngSwFileTransferIndex=genEquipMngSwFileTransferIndex, genEquipMngCfgTimeToInstallation=genEquipMngCfgTimeToInstallation, genEquipSecurityAccessControlProfileMngWrite=genEquipSecurityAccessControlProfileMngWrite, genEquipMngUnitInfoFileTransferIpv6Address=genEquipMngUnitInfoFileTransferIpv6Address, genEquipProtectionCopyToMateStatus=genEquipProtectionCopyToMateStatus, genEquipDiversityRevertiveTimer=genEquipDiversityRevertiveTimer, genEquipSecurityCertificateDownloadConfigUsername=genEquipSecurityCertificateDownloadConfigUsername, genEquipSecurityAccessControlBlockRootRemote=genEquipSecurityAccessControlBlockRootRemote, genEquipMngFileTransferDownloadWarningBannerStatus=genEquipMngFileTransferDownloadWarningBannerStatus, genEquipSecurityAccessControlBlockFailureLoginPeriod=genEquipSecurityAccessControlBlockFailureLoginPeriod, genEquipSecurityConfigLogUploadStatusIndex=genEquipSecurityConfigLogUploadStatusIndex, genEquipTrapCfgMgrSeverityFilter=genEquipTrapCfgMgrSeverityFilter, genEquipAlarmConfigAdditionalText=genEquipAlarmConfigAdditionalText, genEquipMngCfgFileTransferStatusTable=genEquipMngCfgFileTransferStatusTable, genEquipUnitInfoNTPSync=genEquipUnitInfoNTPSync, genEquipMngSwInstallPercentageDone=genEquipMngSwInstallPercentageDone, genEquipUnitAlarmInputCounter=genEquipUnitAlarmInputCounter, genEquipSecurityAccessControlRadiusServerSharedSecret=genEquipSecurityAccessControlRadiusServerSharedSecret, genEquipUnitInfoNtpStatusLockState=genEquipUnitInfoNtpStatusLockState, genEquipSecuritySNMPV3AuthSecurityMode=genEquipSecuritySNMPV3AuthSecurityMode, genEquipSecurityAccessControlUserEntry=genEquipSecurityAccessControlUserEntry, FtpProtocolType=FtpProtocolType, genEquipMngSwIDUVersionsStandByResetType=genEquipMngSwIDUVersionsStandByResetType, genEquipCurrentAlarmSeverity=genEquipCurrentAlarmSeverity, genEquipSecurityCertificateDownloadConfigIpV6Address=genEquipSecurityCertificateDownloadConfigIpV6Address, genEquipProtectionForceSwitch=genEquipProtectionForceSwitch, genEquipEventLogAdditionalInfo=genEquipEventLogAdditionalInfo, genEquipMngFileTransferUploadUnitInfoStatus=genEquipMngFileTransferUploadUnitInfoStatus, genEquipSecurityXFTPPassword=genEquipSecurityXFTPPassword, genEquipTrafficCryptoConfigSkeyPeriod=genEquipTrafficCryptoConfigSkeyPeriod, genEquipUnitInfoTimeServicesDstEndDay=genEquipUnitInfoTimeServicesDstEndDay, genEquipInvGenTime=genEquipInvGenTime, genEquipPMGenTime=genEquipPMGenTime, genEquipDiagAndMaintenanceLineLoopbackTimeout=genEquipDiagAndMaintenanceLineLoopbackTimeout, genEquipSecurityProtocolsControlSNMPV1V2Blocked=genEquipSecurityProtocolsControlSNMPV1V2Blocked, genEquipCurrentAlarmIfIndex=genEquipCurrentAlarmIfIndex, TrailProtectedType=TrailProtectedType, genEquipUnitShelfTccStatusCardType=genEquipUnitShelfTccStatusCardType, genEquipTrafficCryptoConfigRandKeyGen=genEquipTrafficCryptoConfigRandKeyGen, genEquipSecurityGenFTConfigFilePath=genEquipSecurityGenFTConfigFilePath, genEquipSecurityUsersAndGroupsChangePasswd=genEquipSecurityUsersAndGroupsChangePasswd, genEquipUnitExternalAlarms=genEquipUnitExternalAlarms)
