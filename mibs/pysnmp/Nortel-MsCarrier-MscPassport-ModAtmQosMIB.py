#
# PySNMP MIB module Nortel-MsCarrier-MscPassport-ModAtmQosMIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/Nortel-MsCarrier-MscPassport-ModAtmQosMIB
# Produced by pysmi-0.3.4 at Mon Apr 29 20:21:28 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ValueSizeConstraint, ValueRangeConstraint, SingleValueConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ValueSizeConstraint", "ValueRangeConstraint", "SingleValueConstraint", "ConstraintsUnion")
mscModIndex, = mibBuilder.importSymbols("Nortel-MsCarrier-MscPassport-BaseShelfMIB", "mscModIndex")
mscModFrs, mscModFrsIndex = mibBuilder.importSymbols("Nortel-MsCarrier-MscPassport-ModCommonMIB", "mscModFrs", "mscModFrsIndex")
Unsigned32, RowStatus, StorageType, DisplayString, Integer32 = mibBuilder.importSymbols("Nortel-MsCarrier-MscPassport-StandardTextualConventionsMIB", "Unsigned32", "RowStatus", "StorageType", "DisplayString", "Integer32")
NonReplicated, = mibBuilder.importSymbols("Nortel-MsCarrier-MscPassport-TextualConventionsMIB", "NonReplicated")
mscPassportMIBs, = mibBuilder.importSymbols("Nortel-MsCarrier-MscPassport-UsefulDefinitionsMIB", "mscPassportMIBs")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
iso, ModuleIdentity, Counter32, Unsigned32, IpAddress, NotificationType, ObjectIdentity, Bits, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter64, MibIdentifier, Integer32, TimeTicks, Gauge32 = mibBuilder.importSymbols("SNMPv2-SMI", "iso", "ModuleIdentity", "Counter32", "Unsigned32", "IpAddress", "NotificationType", "ObjectIdentity", "Bits", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter64", "MibIdentifier", "Integer32", "TimeTicks", "Gauge32")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
modAtmQosMIB = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 75))
mscModFrsAtmNet = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 16, 3, 2))
mscModFrsAtmNetRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 16, 3, 2, 1), )
if mibBuilder.loadTexts: mscModFrsAtmNetRowStatusTable.setStatus('mandatory')
mscModFrsAtmNetRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 16, 3, 2, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-BaseShelfMIB", "mscModIndex"), (0, "Nortel-MsCarrier-MscPassport-ModCommonMIB", "mscModFrsIndex"), (0, "Nortel-MsCarrier-MscPassport-ModAtmQosMIB", "mscModFrsAtmNetIndex"))
if mibBuilder.loadTexts: mscModFrsAtmNetRowStatusEntry.setStatus('mandatory')
mscModFrsAtmNetRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 16, 3, 2, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscModFrsAtmNetRowStatus.setStatus('mandatory')
mscModFrsAtmNetComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 16, 3, 2, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscModFrsAtmNetComponentName.setStatus('mandatory')
mscModFrsAtmNetStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 16, 3, 2, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscModFrsAtmNetStorageType.setStatus('mandatory')
mscModFrsAtmNetIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 16, 3, 2, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscModFrsAtmNetIndex.setStatus('mandatory')
mscModFrsAtmNetProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 16, 3, 2, 10), )
if mibBuilder.loadTexts: mscModFrsAtmNetProvTable.setStatus('mandatory')
mscModFrsAtmNetProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 16, 3, 2, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-BaseShelfMIB", "mscModIndex"), (0, "Nortel-MsCarrier-MscPassport-ModCommonMIB", "mscModFrsIndex"), (0, "Nortel-MsCarrier-MscPassport-ModAtmQosMIB", "mscModFrsAtmNetIndex"))
if mibBuilder.loadTexts: mscModFrsAtmNetProvEntry.setStatus('mandatory')
mscModFrsAtmNetRetryTimerPeriod = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 16, 3, 2, 10, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(30, 300)).clone(60)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscModFrsAtmNetRetryTimerPeriod.setStatus('mandatory')
mscModFrsAtmNetTpm = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 16, 3, 2, 2))
mscModFrsAtmNetTpmRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 16, 3, 2, 2, 1), )
if mibBuilder.loadTexts: mscModFrsAtmNetTpmRowStatusTable.setStatus('mandatory')
mscModFrsAtmNetTpmRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 16, 3, 2, 2, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-BaseShelfMIB", "mscModIndex"), (0, "Nortel-MsCarrier-MscPassport-ModCommonMIB", "mscModFrsIndex"), (0, "Nortel-MsCarrier-MscPassport-ModAtmQosMIB", "mscModFrsAtmNetIndex"), (0, "Nortel-MsCarrier-MscPassport-ModAtmQosMIB", "mscModFrsAtmNetTpmIndex"))
if mibBuilder.loadTexts: mscModFrsAtmNetTpmRowStatusEntry.setStatus('mandatory')
mscModFrsAtmNetTpmRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 16, 3, 2, 2, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscModFrsAtmNetTpmRowStatus.setStatus('mandatory')
mscModFrsAtmNetTpmComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 16, 3, 2, 2, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscModFrsAtmNetTpmComponentName.setStatus('mandatory')
mscModFrsAtmNetTpmStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 16, 3, 2, 2, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscModFrsAtmNetTpmStorageType.setStatus('mandatory')
mscModFrsAtmNetTpmIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 16, 3, 2, 2, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 15)))
if mibBuilder.loadTexts: mscModFrsAtmNetTpmIndex.setStatus('mandatory')
mscModFrsAtmNetTpmProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 16, 3, 2, 2, 2), )
if mibBuilder.loadTexts: mscModFrsAtmNetTpmProvTable.setStatus('mandatory')
mscModFrsAtmNetTpmProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 16, 3, 2, 2, 2, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-BaseShelfMIB", "mscModIndex"), (0, "Nortel-MsCarrier-MscPassport-ModCommonMIB", "mscModFrsIndex"), (0, "Nortel-MsCarrier-MscPassport-ModAtmQosMIB", "mscModFrsAtmNetIndex"), (0, "Nortel-MsCarrier-MscPassport-ModAtmQosMIB", "mscModFrsAtmNetTpmIndex"))
if mibBuilder.loadTexts: mscModFrsAtmNetTpmProvEntry.setStatus('mandatory')
mscModFrsAtmNetTpmEmissionPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 16, 3, 2, 2, 2, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 3))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscModFrsAtmNetTpmEmissionPriority.setStatus('mandatory')
mscModFrsAtmNetTpmAtmServiceCategory = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 16, 3, 2, 2, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("ubr", 0), ("cbr", 1), ("rtVbr", 2), ("nrtVbr", 3))).clone('nrtVbr')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscModFrsAtmNetTpmAtmServiceCategory.setStatus('mandatory')
mscModFrsAtmNetTpmAvgFrameSize = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 16, 3, 2, 2, 2, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 8187)).clone(128)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscModFrsAtmNetTpmAvgFrameSize.setStatus('mandatory')
mscModFrsAtmNetTpmTrafficParmConversionPolicy = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 16, 3, 2, 2, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(3, 4, 5, 6))).clone(namedValues=NamedValues(("n3", 3), ("n4", 4), ("n5", 5), ("n6", 6))).clone('n6')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscModFrsAtmNetTpmTrafficParmConversionPolicy.setStatus('mandatory')
mscModFrsAtmNetTpmAssignedBandwidthPool = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 16, 3, 2, 2, 2, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15))).clone(namedValues=NamedValues(("n0", 0), ("n1", 1), ("n2", 2), ("n3", 3), ("n4", 4), ("n5", 5), ("n6", 6), ("n7", 7), ("n8", 8), ("n9", 9), ("n10", 10), ("n11", 11), ("n12", 12), ("n13", 13), ("n14", 14), ("n15", 15))).clone('n0')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscModFrsAtmNetTpmAssignedBandwidthPool.setStatus('mandatory')
modAtmQosGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 75, 1))
modAtmQosGroupCA = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 75, 1, 1))
modAtmQosGroupCA02 = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 75, 1, 1, 3))
modAtmQosGroupCA02A = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 75, 1, 1, 3, 2))
modAtmQosCapabilities = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 75, 3))
modAtmQosCapabilitiesCA = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 75, 3, 1))
modAtmQosCapabilitiesCA02 = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 75, 3, 1, 3))
modAtmQosCapabilitiesCA02A = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 75, 3, 1, 3, 2))
mibBuilder.exportSymbols("Nortel-MsCarrier-MscPassport-ModAtmQosMIB", mscModFrsAtmNetStorageType=mscModFrsAtmNetStorageType, mscModFrsAtmNetRowStatusEntry=mscModFrsAtmNetRowStatusEntry, mscModFrsAtmNetProvTable=mscModFrsAtmNetProvTable, mscModFrsAtmNetTpmTrafficParmConversionPolicy=mscModFrsAtmNetTpmTrafficParmConversionPolicy, mscModFrsAtmNetTpmEmissionPriority=mscModFrsAtmNetTpmEmissionPriority, mscModFrsAtmNetTpmAtmServiceCategory=mscModFrsAtmNetTpmAtmServiceCategory, modAtmQosGroup=modAtmQosGroup, modAtmQosGroupCA02A=modAtmQosGroupCA02A, mscModFrsAtmNetTpmRowStatusTable=mscModFrsAtmNetTpmRowStatusTable, modAtmQosMIB=modAtmQosMIB, mscModFrsAtmNetTpmProvTable=mscModFrsAtmNetTpmProvTable, modAtmQosCapabilitiesCA=modAtmQosCapabilitiesCA, modAtmQosCapabilitiesCA02=modAtmQosCapabilitiesCA02, mscModFrsAtmNetRowStatus=mscModFrsAtmNetRowStatus, modAtmQosGroupCA02=modAtmQosGroupCA02, mscModFrsAtmNetRetryTimerPeriod=mscModFrsAtmNetRetryTimerPeriod, mscModFrsAtmNetTpmRowStatus=mscModFrsAtmNetTpmRowStatus, mscModFrsAtmNetRowStatusTable=mscModFrsAtmNetRowStatusTable, mscModFrsAtmNetProvEntry=mscModFrsAtmNetProvEntry, modAtmQosGroupCA=modAtmQosGroupCA, modAtmQosCapabilities=modAtmQosCapabilities, mscModFrsAtmNetTpmAssignedBandwidthPool=mscModFrsAtmNetTpmAssignedBandwidthPool, mscModFrsAtmNetTpm=mscModFrsAtmNetTpm, mscModFrsAtmNetTpmProvEntry=mscModFrsAtmNetTpmProvEntry, mscModFrsAtmNetTpmStorageType=mscModFrsAtmNetTpmStorageType, mscModFrsAtmNetTpmComponentName=mscModFrsAtmNetTpmComponentName, modAtmQosCapabilitiesCA02A=modAtmQosCapabilitiesCA02A, mscModFrsAtmNetComponentName=mscModFrsAtmNetComponentName, mscModFrsAtmNetTpmRowStatusEntry=mscModFrsAtmNetTpmRowStatusEntry, mscModFrsAtmNetTpmAvgFrameSize=mscModFrsAtmNetTpmAvgFrameSize, mscModFrsAtmNetTpmIndex=mscModFrsAtmNetTpmIndex, mscModFrsAtmNetIndex=mscModFrsAtmNetIndex, mscModFrsAtmNet=mscModFrsAtmNet)
