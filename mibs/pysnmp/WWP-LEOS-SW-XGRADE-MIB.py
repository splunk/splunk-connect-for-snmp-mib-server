#
# PySNMP MIB module WWP-LEOS-SW-XGRADE-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/WWP-LEOS-SW-XGRADE-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 21:31:38 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ValueSizeConstraint, SingleValueConstraint, ValueRangeConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ValueSizeConstraint", "SingleValueConstraint", "ValueRangeConstraint", "ConstraintsUnion")
AddressFamilyNumbers, = mibBuilder.importSymbols("IANA-ADDRESS-FAMILY-NUMBERS-MIB", "AddressFamilyNumbers")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
ModuleIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, TimeTicks, IpAddress, iso, Gauge32, MibIdentifier, Counter32, Unsigned32, Bits, NotificationType, ObjectIdentity, Integer32, Counter64 = mibBuilder.importSymbols("SNMPv2-SMI", "ModuleIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "TimeTicks", "IpAddress", "iso", "Gauge32", "MibIdentifier", "Counter32", "Unsigned32", "Bits", "NotificationType", "ObjectIdentity", "Integer32", "Counter64")
DisplayString, TextualConvention, TruthValue = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention", "TruthValue")
wwpModulesLeos, = mibBuilder.importSymbols("WWP-SMI", "wwpModulesLeos")
wwpLeosSwXgradeMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 6141, 2, 60, 10))
wwpLeosSwXgradeMIB.setRevisions(('2012-06-27 00:00', '2011-08-01 00:00', '2011-07-07 00:01', '2011-07-07 00:00', '2003-04-21 17:00',))
if mibBuilder.loadTexts: wwpLeosSwXgradeMIB.setLastUpdated('201206270000Z')
if mibBuilder.loadTexts: wwpLeosSwXgradeMIB.setOrganization('Ciena, Inc')
wwpLeosSwXgradeMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 6141, 2, 60, 10, 1))
wwpLeosSwXgrade = MibIdentifier((1, 3, 6, 1, 4, 1, 6141, 2, 60, 10, 1, 1))
wwpLeosSwXgradeMIBNotificationPrefix = MibIdentifier((1, 3, 6, 1, 4, 1, 6141, 2, 60, 10, 2))
wwpLeosSwXgradeMIBNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 6141, 2, 60, 10, 2, 0))
wwpLeosSwXgradeMIBConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 6141, 2, 60, 10, 3))
wwpLeosSwXgradeMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 6141, 2, 60, 10, 3, 1))
wwpLeosSwXgradeMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 6141, 2, 60, 10, 3, 2))
class SwDownloadState(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))
    namedValues = NamedValues(("idle", 1), ("downloading", 2), ("downloadComplete", 3), ("downloadFailed", 4))

class SwDownloadFailCause(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10))
    namedValues = NamedValues(("downloadSuccess", 0), ("invalidPkgFile", 1), ("couldNotGetFile", 2), ("tftpServerNotFound", 3), ("cmdFileParseError", 4), ("internalFilesystemError", 5), ("flashOffline", 6), ("noStatus", 7), ("badFileCrc", 8), ("alreadyUpgradeMode", 9), ("unknownError", 10))

class SwXgradeOp(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9))
    namedValues = NamedValues(("none", 0), ("install", 1), ("inServiceActivate", 2), ("serviceAffectingActivate", 3), ("inServiceXgrade", 4), ("serviceAffectingXgrade", 5), ("servAffectingXgradeReport", 6), ("servNonAffectingXgradeReport", 7), ("download", 8), ("cancelDownload", 9))

wwpLeosSwDownload = MibIdentifier((1, 3, 6, 1, 4, 1, 6141, 2, 60, 10, 1, 1, 1))
wwpLeosSwDownloadServerAddrType = MibScalar((1, 3, 6, 1, 4, 1, 6141, 2, 60, 10, 1, 1, 1, 1), AddressFamilyNumbers()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpLeosSwDownloadServerAddrType.setStatus('deprecated')
wwpLeosSwDownloadServerAddr = MibScalar((1, 3, 6, 1, 4, 1, 6141, 2, 60, 10, 1, 1, 1, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpLeosSwDownloadServerAddr.setStatus('deprecated')
wwpLeosSwDownloadPackageName = MibScalar((1, 3, 6, 1, 4, 1, 6141, 2, 60, 10, 1, 1, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpLeosSwDownloadPackageName.setStatus('deprecated')
wwpLeosSwDownLoadActivate = MibScalar((1, 3, 6, 1, 4, 1, 6141, 2, 60, 10, 1, 1, 1, 4), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpLeosSwDownLoadActivate.setStatus('deprecated')
wwpLeosSwDownloadNotifOnCompletion = MibScalar((1, 3, 6, 1, 4, 1, 6141, 2, 60, 10, 1, 1, 1, 5), TruthValue().clone('true')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpLeosSwDownloadNotifOnCompletion.setStatus('deprecated')
wwpLeosSwDownloadStatus = MibScalar((1, 3, 6, 1, 4, 1, 6141, 2, 60, 10, 1, 1, 1, 6), SwDownloadState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosSwDownloadStatus.setStatus('deprecated')
wwpLeosSwDownloadFailCause = MibScalar((1, 3, 6, 1, 4, 1, 6141, 2, 60, 10, 1, 1, 1, 7), SwDownloadFailCause()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosSwDownloadFailCause.setStatus('deprecated')
wwpLeosSwDownloadNotificationInfo = MibScalar((1, 3, 6, 1, 4, 1, 6141, 2, 60, 10, 1, 1, 1, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 127))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosSwDownloadNotificationInfo.setStatus('deprecated')
wwpLeosSwXgradeBladeTable = MibTable((1, 3, 6, 1, 4, 1, 6141, 2, 60, 10, 1, 1, 2), )
if mibBuilder.loadTexts: wwpLeosSwXgradeBladeTable.setStatus('current')
wwpLeosSwXgradeBladeEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6141, 2, 60, 10, 1, 1, 2, 1), ).setIndexNames((0, "WWP-LEOS-SW-XGRADE-MIB", "wwpLeosSwXgradeBladeId"))
if mibBuilder.loadTexts: wwpLeosSwXgradeBladeEntry.setStatus('current')
wwpLeosSwXgradeBladeId = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 10, 1, 1, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosSwXgradeBladeId.setStatus('current')
wwpLeosSwXgradePackage = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 10, 1, 1, 2, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpLeosSwXgradePackage.setStatus('current')
wwpLeosSwXgradeOp = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 10, 1, 1, 2, 1, 3), SwXgradeOp()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpLeosSwXgradeOp.setStatus('current')
wwpLeosSwXgradeTftpAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 10, 1, 1, 2, 1, 4), AddressFamilyNumbers()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpLeosSwXgradeTftpAddrType.setStatus('current')
wwpLeosSwXgradeTftpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 10, 1, 1, 2, 1, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpLeosSwXgradeTftpAddr.setStatus('current')
wwpLeosSwXgradeOpActivate = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 10, 1, 1, 2, 1, 6), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpLeosSwXgradeOpActivate.setStatus('current')
wwpLeosSwXgradeOpStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 10, 1, 1, 2, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("none", 1), ("processing", 2), ("success", 3), ("failure", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosSwXgradeOpStatus.setStatus('current')
wwpLeosSwXgradePackagePath = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 10, 1, 1, 2, 1, 8), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpLeosSwXgradePackagePath.setStatus('current')
wwpLeosSwXgradeTransferMode = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 10, 1, 1, 2, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("tftp", 1), ("ftp", 2), ("sftp", 3), ("defaultTftp", 4), ("defaultFtp", 5), ("defaultSftp", 6), ("default", 7)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpLeosSwXgradeTransferMode.setStatus('current')
wwpLeosSwXgradeLoginId = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 10, 1, 1, 2, 1, 10), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpLeosSwXgradeLoginId.setStatus('current')
wwpLeosSwXgradePassword = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 10, 1, 1, 2, 1, 11), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpLeosSwXgradePassword.setStatus('current')
wwpLeosSwXgradeSecret = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 10, 1, 1, 2, 1, 12), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpLeosSwXgradeSecret.setStatus('current')
wwpLeosBladePackageInfoTable = MibTable((1, 3, 6, 1, 4, 1, 6141, 2, 60, 10, 1, 1, 3), )
if mibBuilder.loadTexts: wwpLeosBladePackageInfoTable.setStatus('current')
wwpLeosBladePackageInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6141, 2, 60, 10, 1, 1, 3, 1), ).setIndexNames((0, "WWP-LEOS-SW-XGRADE-MIB", "wwpLeosSwXgradeBladeId"))
if mibBuilder.loadTexts: wwpLeosBladePackageInfoEntry.setStatus('current')
wwpLeosBladeInstPackageVer = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 10, 1, 1, 3, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosBladeInstPackageVer.setStatus('current')
wwpLeosBladeRunPackageVer = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 10, 1, 1, 3, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosBladeRunPackageVer.setStatus('current')
wwpLeosBladeDnldPackageVer = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 10, 1, 1, 3, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosBladeDnldPackageVer.setStatus('current')
wwpLeosBladeInstPackageRlsStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 10, 1, 1, 3, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosBladeInstPackageRlsStatus.setStatus('current')
wwpLeosSwXgradeGlobalAttrs = MibIdentifier((1, 3, 6, 1, 4, 1, 6141, 2, 60, 10, 1, 1, 4))
wwpLeosSwMIBVersion = MibScalar((1, 3, 6, 1, 4, 1, 6141, 2, 60, 10, 1, 1, 4, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosSwMIBVersion.setStatus('current')
wwpLeosSwXgradeDestPath = MibScalar((1, 3, 6, 1, 4, 1, 6141, 2, 60, 10, 1, 1, 4, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpLeosSwXgradeDestPath.setStatus('current')
wwpLeosSwXgradePackagePathName = MibScalar((1, 3, 6, 1, 4, 1, 6141, 2, 60, 10, 1, 1, 4, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpLeosSwXgradePackagePathName.setStatus('current')
wwpLeosSwXgradeTftpServer = MibScalar((1, 3, 6, 1, 4, 1, 6141, 2, 60, 10, 1, 1, 4, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpLeosSwXgradeTftpServer.setStatus('current')
wwpLeosSwXgradeRevertTimeout = MibScalar((1, 3, 6, 1, 4, 1, 6141, 2, 60, 10, 1, 1, 4, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpLeosSwXgradeRevertTimeout.setStatus('current')
wwpLeosSwXgradeBootOrder = MibScalar((1, 3, 6, 1, 4, 1, 6141, 2, 60, 10, 1, 1, 4, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("localFlash", 1), ("localFlashThenCompactFlash", 2), ("compactFlashThenLocalFlash", 3), ("unknown", 4))).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpLeosSwXgradeBootOrder.setStatus('current')
wwpLeosSwXgradeOptype = MibScalar((1, 3, 6, 1, 4, 1, 6141, 2, 60, 10, 1, 1, 25), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("none", 0), ("download", 1), ("install", 2), ("activate", 3), ("protect", 4), ("revert", 5), ("validate", 6), ("run", 7)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpLeosSwXgradeOptype.setStatus('current')
wwpLeosSwXgradeStatus = MibScalar((1, 3, 6, 1, 4, 1, 6141, 2, 60, 10, 1, 1, 30), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21))).clone(namedValues=NamedValues(("success", 1), ("failed", 2), ("unknown", 3), ("processing", 4), ("invalidCfgRule", 5), ("invalidFileName", 6), ("fileSystemError", 7), ("cannotResolveHostName", 8), ("tftpClientTimeout", 9), ("tftpServerError", 10), ("tftpBadTag", 11), ("tftpBadValue", 12), ("networkError", 13), ("platformTypeNotSupported", 14), ("swMgrBusy", 15), ("needBackupSw", 16), ("internalError", 17), ("fileNotExist", 18), ("missingAttribute", 19), ("invalidXgradeOp", 20), ("noDefaultTftpConfigured", 21)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosSwXgradeStatus.setStatus('current')
wwpLeosSwDownloadCompletion = NotificationType((1, 3, 6, 1, 4, 1, 6141, 2, 60, 10, 2, 0, 1)).setObjects(("WWP-LEOS-SW-XGRADE-MIB", "wwpLeosSwDownloadPackageName"), ("WWP-LEOS-SW-XGRADE-MIB", "wwpLeosSwDownloadFailCause"), ("WWP-LEOS-SW-XGRADE-MIB", "wwpLeosSwDownloadNotificationInfo"))
if mibBuilder.loadTexts: wwpLeosSwDownloadCompletion.setStatus('current')
wwpLeosSwXgradeOpCompletion = NotificationType((1, 3, 6, 1, 4, 1, 6141, 2, 60, 10, 2, 0, 2)).setObjects(("WWP-LEOS-SW-XGRADE-MIB", "wwpLeosSwXgradeBladeId"), ("WWP-LEOS-SW-XGRADE-MIB", "wwpLeosSwXgradePackage"), ("WWP-LEOS-SW-XGRADE-MIB", "wwpLeosSwXgradeOp"), ("WWP-LEOS-SW-XGRADE-MIB", "wwpLeosSwXgradeOpStatus"))
if mibBuilder.loadTexts: wwpLeosSwXgradeOpCompletion.setStatus('current')
wwpLeosSwXgradeBladePkgIncorrect = NotificationType((1, 3, 6, 1, 4, 1, 6141, 2, 60, 10, 2, 0, 3)).setObjects(("WWP-LEOS-SW-XGRADE-MIB", "wwpLeosSwXgradeBladeId"))
if mibBuilder.loadTexts: wwpLeosSwXgradeBladePkgIncorrect.setStatus('current')
wwpLeosSwXgradeCompletion = NotificationType((1, 3, 6, 1, 4, 1, 6141, 2, 60, 10, 2, 0, 4)).setObjects(("WWP-LEOS-SW-XGRADE-MIB", "wwpLeosSwXgradeOp"), ("WWP-LEOS-SW-XGRADE-MIB", "wwpLeosSwXgradeStatus"))
if mibBuilder.loadTexts: wwpLeosSwXgradeCompletion.setStatus('current')
mibBuilder.exportSymbols("WWP-LEOS-SW-XGRADE-MIB", wwpLeosSwDownload=wwpLeosSwDownload, wwpLeosSwXgradeTftpAddr=wwpLeosSwXgradeTftpAddr, wwpLeosSwDownloadServerAddr=wwpLeosSwDownloadServerAddr, wwpLeosSwDownloadPackageName=wwpLeosSwDownloadPackageName, wwpLeosSwDownloadNotificationInfo=wwpLeosSwDownloadNotificationInfo, wwpLeosSwMIBVersion=wwpLeosSwMIBVersion, wwpLeosSwXgradeSecret=wwpLeosSwXgradeSecret, wwpLeosSwXgradeBootOrder=wwpLeosSwXgradeBootOrder, SwDownloadFailCause=SwDownloadFailCause, wwpLeosSwXgradeTftpServer=wwpLeosSwXgradeTftpServer, wwpLeosSwXgradeOpCompletion=wwpLeosSwXgradeOpCompletion, wwpLeosSwXgradeGlobalAttrs=wwpLeosSwXgradeGlobalAttrs, wwpLeosSwXgradeBladeId=wwpLeosSwXgradeBladeId, wwpLeosSwXgradeMIB=wwpLeosSwXgradeMIB, PYSNMP_MODULE_ID=wwpLeosSwXgradeMIB, wwpLeosSwXgrade=wwpLeosSwXgrade, wwpLeosSwXgradeCompletion=wwpLeosSwXgradeCompletion, wwpLeosSwXgradeOp=wwpLeosSwXgradeOp, wwpLeosSwXgradeBladePkgIncorrect=wwpLeosSwXgradeBladePkgIncorrect, wwpLeosSwXgradeRevertTimeout=wwpLeosSwXgradeRevertTimeout, wwpLeosBladeInstPackageVer=wwpLeosBladeInstPackageVer, wwpLeosSwXgradeMIBConformance=wwpLeosSwXgradeMIBConformance, wwpLeosBladePackageInfoEntry=wwpLeosBladePackageInfoEntry, wwpLeosSwXgradePackagePathName=wwpLeosSwXgradePackagePathName, SwDownloadState=SwDownloadState, wwpLeosSwXgradeTftpAddrType=wwpLeosSwXgradeTftpAddrType, wwpLeosSwXgradeLoginId=wwpLeosSwXgradeLoginId, wwpLeosSwDownloadCompletion=wwpLeosSwDownloadCompletion, wwpLeosSwXgradeOpActivate=wwpLeosSwXgradeOpActivate, wwpLeosSwXgradeMIBNotificationPrefix=wwpLeosSwXgradeMIBNotificationPrefix, wwpLeosSwXgradePackagePath=wwpLeosSwXgradePackagePath, wwpLeosSwXgradeOptype=wwpLeosSwXgradeOptype, wwpLeosSwDownloadServerAddrType=wwpLeosSwDownloadServerAddrType, wwpLeosSwXgradeMIBGroups=wwpLeosSwXgradeMIBGroups, wwpLeosSwDownloadStatus=wwpLeosSwDownloadStatus, wwpLeosBladeInstPackageRlsStatus=wwpLeosBladeInstPackageRlsStatus, wwpLeosBladeRunPackageVer=wwpLeosBladeRunPackageVer, SwXgradeOp=SwXgradeOp, wwpLeosBladeDnldPackageVer=wwpLeosBladeDnldPackageVer, wwpLeosSwXgradeStatus=wwpLeosSwXgradeStatus, wwpLeosSwDownloadNotifOnCompletion=wwpLeosSwDownloadNotifOnCompletion, wwpLeosSwXgradePassword=wwpLeosSwXgradePassword, wwpLeosSwDownLoadActivate=wwpLeosSwDownLoadActivate, wwpLeosSwXgradeOpStatus=wwpLeosSwXgradeOpStatus, wwpLeosSwDownloadFailCause=wwpLeosSwDownloadFailCause, wwpLeosSwXgradePackage=wwpLeosSwXgradePackage, wwpLeosSwXgradeMIBObjects=wwpLeosSwXgradeMIBObjects, wwpLeosBladePackageInfoTable=wwpLeosBladePackageInfoTable, wwpLeosSwXgradeBladeEntry=wwpLeosSwXgradeBladeEntry, wwpLeosSwXgradeTransferMode=wwpLeosSwXgradeTransferMode, wwpLeosSwXgradeBladeTable=wwpLeosSwXgradeBladeTable, wwpLeosSwXgradeMIBCompliances=wwpLeosSwXgradeMIBCompliances, wwpLeosSwXgradeDestPath=wwpLeosSwXgradeDestPath, wwpLeosSwXgradeMIBNotifications=wwpLeosSwXgradeMIBNotifications)
