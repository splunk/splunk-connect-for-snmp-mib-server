#
# PySNMP MIB module ZYXEL-MAC-AUTHENTICATION-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/ZYXEL-MAC-AUTHENTICATION-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 21:44:40 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ConstraintsIntersection, ValueSizeConstraint, ConstraintsUnion, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ConstraintsIntersection", "ValueSizeConstraint", "ConstraintsUnion", "ValueRangeConstraint")
dot1dBasePort, = mibBuilder.importSymbols("BRIDGE-MIB", "dot1dBasePort")
EnabledStatus, = mibBuilder.importSymbols("P-BRIDGE-MIB", "EnabledStatus")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
MibIdentifier, Counter64, Unsigned32, TimeTicks, ModuleIdentity, iso, Gauge32, IpAddress, MibScalar, MibTable, MibTableRow, MibTableColumn, ObjectIdentity, Integer32, Bits, NotificationType, Counter32 = mibBuilder.importSymbols("SNMPv2-SMI", "MibIdentifier", "Counter64", "Unsigned32", "TimeTicks", "ModuleIdentity", "iso", "Gauge32", "IpAddress", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ObjectIdentity", "Integer32", "Bits", "NotificationType", "Counter32")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
esMgmt, = mibBuilder.importSymbols("ZYXEL-ES-SMI", "esMgmt")
zyxelMacAuthentication = ModuleIdentity((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 46))
if mibBuilder.loadTexts: zyxelMacAuthentication.setLastUpdated('201207010000Z')
if mibBuilder.loadTexts: zyxelMacAuthentication.setOrganization('Enterprise Solution ZyXEL')
zyxelMacAuthenticationSetup = MibIdentifier((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 46, 1))
zyMacAuthenticationState = MibScalar((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 46, 1, 1), EnabledStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zyMacAuthenticationState.setStatus('current')
zyMacAuthenticationNamePrefix = MibScalar((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 46, 1, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zyMacAuthenticationNamePrefix.setStatus('current')
zyMacAuthenticationPassword = MibScalar((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 46, 1, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zyMacAuthenticationPassword.setStatus('current')
zyMacAuthenticationTimeout = MibScalar((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 46, 1, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zyMacAuthenticationTimeout.setStatus('current')
zyxelMacAuthenticationPortTable = MibTable((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 46, 1, 5), )
if mibBuilder.loadTexts: zyxelMacAuthenticationPortTable.setStatus('current')
zyxelMacAuthenticationPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 46, 1, 5, 1), ).setIndexNames((0, "BRIDGE-MIB", "dot1dBasePort"))
if mibBuilder.loadTexts: zyxelMacAuthenticationPortEntry.setStatus('current')
zyMacAuthenticationPortState = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 46, 1, 5, 1, 1), EnabledStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zyMacAuthenticationPortState.setStatus('current')
mibBuilder.exportSymbols("ZYXEL-MAC-AUTHENTICATION-MIB", zyMacAuthenticationNamePrefix=zyMacAuthenticationNamePrefix, zyMacAuthenticationPassword=zyMacAuthenticationPassword, zyMacAuthenticationState=zyMacAuthenticationState, zyMacAuthenticationPortState=zyMacAuthenticationPortState, zyxelMacAuthentication=zyxelMacAuthentication, PYSNMP_MODULE_ID=zyxelMacAuthentication, zyMacAuthenticationTimeout=zyMacAuthenticationTimeout, zyxelMacAuthenticationPortTable=zyxelMacAuthenticationPortTable, zyxelMacAuthenticationSetup=zyxelMacAuthenticationSetup, zyxelMacAuthenticationPortEntry=zyxelMacAuthenticationPortEntry)
