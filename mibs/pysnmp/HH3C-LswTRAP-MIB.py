#
# PySNMP MIB module HH3C-LswTRAP-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/HH3C-LswTRAP-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:15:23 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, SingleValueConstraint, ValueSizeConstraint, ValueRangeConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "SingleValueConstraint", "ValueSizeConstraint", "ValueRangeConstraint", "ConstraintsIntersection")
hh3cLswSubslotIndex, hh3cLswSlotIndex, hh3cLswFrameIndex, hh3cLswCpuIndex = mibBuilder.importSymbols("HH3C-LSW-DEV-ADM-MIB", "hh3cLswSubslotIndex", "hh3cLswSlotIndex", "hh3cLswFrameIndex", "hh3cLswCpuIndex")
hh3cDevMFirstTrapTime, hh3cDevMPowerNum, hh3cDevMFanNum = mibBuilder.importSymbols("HH3C-LswDEVM-MIB", "hh3cDevMFirstTrapTime", "hh3cDevMPowerNum", "hh3cDevMFanNum")
hh3clswCommon, = mibBuilder.importSymbols("HH3C-OID-MIB", "hh3clswCommon")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
TimeTicks, IpAddress, MibIdentifier, ModuleIdentity, Counter64, iso, MibScalar, MibTable, MibTableRow, MibTableColumn, Unsigned32, Integer32, NotificationType, Counter32, ObjectIdentity, Bits, Gauge32 = mibBuilder.importSymbols("SNMPv2-SMI", "TimeTicks", "IpAddress", "MibIdentifier", "ModuleIdentity", "Counter64", "iso", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Unsigned32", "Integer32", "NotificationType", "Counter32", "ObjectIdentity", "Bits", "Gauge32")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
hh3cLswTrapMib = ModuleIdentity((1, 3, 6, 1, 4, 1, 25506, 8, 35, 12))
hh3cLswTrapMib.setRevisions(('2011-11-26 00:00',))
if mibBuilder.loadTexts: hh3cLswTrapMib.setLastUpdated('201111260000Z')
if mibBuilder.loadTexts: hh3cLswTrapMib.setOrganization('Hangzhou H3C Tech. Co., Ltd.')
hh3csLswTRAPMibObject = MibIdentifier((1, 3, 6, 1, 4, 1, 25506, 8, 35, 12, 1))
hh3cpowerfailure = NotificationType((1, 3, 6, 1, 4, 1, 25506, 8, 35, 12, 1, 1)).setObjects(("HH3C-LswDEVM-MIB", "hh3cDevMPowerNum"), ("HH3C-LswDEVM-MIB", "hh3cDevMFirstTrapTime"))
if mibBuilder.loadTexts: hh3cpowerfailure.setStatus('current')
hh3cPowerNormal = NotificationType((1, 3, 6, 1, 4, 1, 25506, 8, 35, 12, 1, 2)).setObjects(("HH3C-LswDEVM-MIB", "hh3cDevMPowerNum"), ("HH3C-LswDEVM-MIB", "hh3cDevMFirstTrapTime"))
if mibBuilder.loadTexts: hh3cPowerNormal.setStatus('current')
hh3cMasterPowerNormal = NotificationType((1, 3, 6, 1, 4, 1, 25506, 8, 35, 12, 1, 3)).setObjects(("HH3C-LswDEVM-MIB", "hh3cDevMPowerNum"))
if mibBuilder.loadTexts: hh3cMasterPowerNormal.setStatus('current')
hh3cSlavePowerNormal = NotificationType((1, 3, 6, 1, 4, 1, 25506, 8, 35, 12, 1, 4)).setObjects(("HH3C-LswDEVM-MIB", "hh3cDevMPowerNum"))
if mibBuilder.loadTexts: hh3cSlavePowerNormal.setStatus('current')
hh3cPowerRemoved = NotificationType((1, 3, 6, 1, 4, 1, 25506, 8, 35, 12, 1, 5)).setObjects(("HH3C-LswDEVM-MIB", "hh3cDevMPowerNum"))
if mibBuilder.loadTexts: hh3cPowerRemoved.setStatus('current')
hh3cfanfailure = NotificationType((1, 3, 6, 1, 4, 1, 25506, 8, 35, 12, 1, 6)).setObjects(("HH3C-LswDEVM-MIB", "hh3cDevMFanNum"))
if mibBuilder.loadTexts: hh3cfanfailure.setStatus('current')
hh3cFanNormal = NotificationType((1, 3, 6, 1, 4, 1, 25506, 8, 35, 12, 1, 7)).setObjects(("HH3C-LswDEVM-MIB", "hh3cDevMFanNum"))
if mibBuilder.loadTexts: hh3cFanNormal.setStatus('current')
hh3cBoardRemoved = NotificationType((1, 3, 6, 1, 4, 1, 25506, 8, 35, 12, 1, 8)).setObjects(("HH3C-LSW-DEV-ADM-MIB", "hh3cLswFrameIndex"), ("HH3C-LSW-DEV-ADM-MIB", "hh3cLswSlotIndex"))
if mibBuilder.loadTexts: hh3cBoardRemoved.setStatus('current')
hh3cBoardInserted = NotificationType((1, 3, 6, 1, 4, 1, 25506, 8, 35, 12, 1, 9)).setObjects(("HH3C-LSW-DEV-ADM-MIB", "hh3cLswFrameIndex"), ("HH3C-LSW-DEV-ADM-MIB", "hh3cLswSlotIndex"))
if mibBuilder.loadTexts: hh3cBoardInserted.setStatus('current')
hh3cBoardFailure = NotificationType((1, 3, 6, 1, 4, 1, 25506, 8, 35, 12, 1, 10)).setObjects(("HH3C-LSW-DEV-ADM-MIB", "hh3cLswFrameIndex"), ("HH3C-LSW-DEV-ADM-MIB", "hh3cLswSlotIndex"))
if mibBuilder.loadTexts: hh3cBoardFailure.setStatus('current')
hh3cBoardNormal = NotificationType((1, 3, 6, 1, 4, 1, 25506, 8, 35, 12, 1, 11)).setObjects(("HH3C-LSW-DEV-ADM-MIB", "hh3cLswFrameIndex"), ("HH3C-LSW-DEV-ADM-MIB", "hh3cLswSlotIndex"))
if mibBuilder.loadTexts: hh3cBoardNormal.setStatus('current')
hh3cSubcardRemove = NotificationType((1, 3, 6, 1, 4, 1, 25506, 8, 35, 12, 1, 12)).setObjects(("HH3C-LSW-DEV-ADM-MIB", "hh3cLswFrameIndex"), ("HH3C-LSW-DEV-ADM-MIB", "hh3cLswSlotIndex"), ("HH3C-LSW-DEV-ADM-MIB", "hh3cLswSubslotIndex"))
if mibBuilder.loadTexts: hh3cSubcardRemove.setStatus('current')
hh3cSubcardInsert = NotificationType((1, 3, 6, 1, 4, 1, 25506, 8, 35, 12, 1, 13)).setObjects(("HH3C-LSW-DEV-ADM-MIB", "hh3cLswFrameIndex"), ("HH3C-LSW-DEV-ADM-MIB", "hh3cLswSlotIndex"), ("HH3C-LSW-DEV-ADM-MIB", "hh3cLswSubslotIndex"))
if mibBuilder.loadTexts: hh3cSubcardInsert.setStatus('current')
hh3cBoardTemperatureLower = NotificationType((1, 3, 6, 1, 4, 1, 25506, 8, 35, 12, 1, 14)).setObjects(("HH3C-LSW-DEV-ADM-MIB", "hh3cLswFrameIndex"), ("HH3C-LSW-DEV-ADM-MIB", "hh3cLswSlotIndex"))
if mibBuilder.loadTexts: hh3cBoardTemperatureLower.setStatus('current')
hh3cBoardTemperatureFromLowerToNormal = NotificationType((1, 3, 6, 1, 4, 1, 25506, 8, 35, 12, 1, 15)).setObjects(("HH3C-LSW-DEV-ADM-MIB", "hh3cLswFrameIndex"), ("HH3C-LSW-DEV-ADM-MIB", "hh3cLswSlotIndex"))
if mibBuilder.loadTexts: hh3cBoardTemperatureFromLowerToNormal.setStatus('current')
hh3cBoardTemperatureHigher = NotificationType((1, 3, 6, 1, 4, 1, 25506, 8, 35, 12, 1, 16)).setObjects(("HH3C-LSW-DEV-ADM-MIB", "hh3cLswFrameIndex"), ("HH3C-LSW-DEV-ADM-MIB", "hh3cLswSlotIndex"))
if mibBuilder.loadTexts: hh3cBoardTemperatureHigher.setStatus('current')
hh3cBoardTemperatureFormHigherToNormal = NotificationType((1, 3, 6, 1, 4, 1, 25506, 8, 35, 12, 1, 17)).setObjects(("HH3C-LSW-DEV-ADM-MIB", "hh3cLswFrameIndex"), ("HH3C-LSW-DEV-ADM-MIB", "hh3cLswSlotIndex"))
if mibBuilder.loadTexts: hh3cBoardTemperatureFormHigherToNormal.setStatus('current')
hh3cRequestLoading = NotificationType((1, 3, 6, 1, 4, 1, 25506, 8, 35, 12, 1, 18)).setObjects(("HH3C-LSW-DEV-ADM-MIB", "hh3cLswFrameIndex"), ("HH3C-LSW-DEV-ADM-MIB", "hh3cLswSlotIndex"))
if mibBuilder.loadTexts: hh3cRequestLoading.setStatus('current')
hh3cLoadFailure = NotificationType((1, 3, 6, 1, 4, 1, 25506, 8, 35, 12, 1, 19)).setObjects(("HH3C-LSW-DEV-ADM-MIB", "hh3cLswFrameIndex"), ("HH3C-LSW-DEV-ADM-MIB", "hh3cLswSlotIndex"))
if mibBuilder.loadTexts: hh3cLoadFailure.setStatus('current')
hh3cLoadFinished = NotificationType((1, 3, 6, 1, 4, 1, 25506, 8, 35, 12, 1, 20)).setObjects(("HH3C-LSW-DEV-ADM-MIB", "hh3cLswFrameIndex"), ("HH3C-LSW-DEV-ADM-MIB", "hh3cLswSlotIndex"))
if mibBuilder.loadTexts: hh3cLoadFinished.setStatus('current')
hh3cBackBoardModeSetFuilure = NotificationType((1, 3, 6, 1, 4, 1, 25506, 8, 35, 12, 1, 21)).setObjects(("HH3C-LSW-DEV-ADM-MIB", "hh3cLswFrameIndex"))
if mibBuilder.loadTexts: hh3cBackBoardModeSetFuilure.setStatus('current')
hh3cBackBoardModeSetOK = NotificationType((1, 3, 6, 1, 4, 1, 25506, 8, 35, 12, 1, 22)).setObjects(("HH3C-LSW-DEV-ADM-MIB", "hh3cLswFrameIndex"))
if mibBuilder.loadTexts: hh3cBackBoardModeSetOK.setStatus('current')
hh3cPowerInserted = NotificationType((1, 3, 6, 1, 4, 1, 25506, 8, 35, 12, 1, 23)).setObjects(("HH3C-LswDEVM-MIB", "hh3cDevMPowerNum"))
if mibBuilder.loadTexts: hh3cPowerInserted.setStatus('current')
hh3cBootImageUpdated = NotificationType((1, 3, 6, 1, 4, 1, 25506, 8, 35, 12, 1, 24)).setObjects(("HH3C-LSW-DEV-ADM-MIB", "hh3cLswFrameIndex"), ("HH3C-LSW-DEV-ADM-MIB", "hh3cLswSlotIndex"))
if mibBuilder.loadTexts: hh3cBootImageUpdated.setStatus('current')
hh3cCpuRemoved = NotificationType((1, 3, 6, 1, 4, 1, 25506, 8, 35, 12, 1, 25)).setObjects(("HH3C-LSW-DEV-ADM-MIB", "hh3cLswFrameIndex"), ("HH3C-LSW-DEV-ADM-MIB", "hh3cLswSlotIndex"), ("HH3C-LSW-DEV-ADM-MIB", "hh3cLswCpuIndex"))
if mibBuilder.loadTexts: hh3cCpuRemoved.setStatus('current')
hh3cCpuFailure = NotificationType((1, 3, 6, 1, 4, 1, 25506, 8, 35, 12, 1, 26)).setObjects(("HH3C-LSW-DEV-ADM-MIB", "hh3cLswFrameIndex"), ("HH3C-LSW-DEV-ADM-MIB", "hh3cLswSlotIndex"), ("HH3C-LSW-DEV-ADM-MIB", "hh3cLswCpuIndex"))
if mibBuilder.loadTexts: hh3cCpuFailure.setStatus('current')
hh3cCpuNormal = NotificationType((1, 3, 6, 1, 4, 1, 25506, 8, 35, 12, 1, 27)).setObjects(("HH3C-LSW-DEV-ADM-MIB", "hh3cLswFrameIndex"), ("HH3C-LSW-DEV-ADM-MIB", "hh3cLswSlotIndex"), ("HH3C-LSW-DEV-ADM-MIB", "hh3cLswCpuIndex"))
if mibBuilder.loadTexts: hh3cCpuNormal.setStatus('current')
hh3cPowerIncompatible = NotificationType((1, 3, 6, 1, 4, 1, 25506, 8, 35, 12, 1, 28)).setObjects(("HH3C-LswDEVM-MIB", "hh3cDevMPowerNum"))
if mibBuilder.loadTexts: hh3cPowerIncompatible.setStatus('current')
hh3cNetworkHealthMonitorFailure = MibIdentifier((1, 3, 6, 1, 4, 1, 25506, 8, 35, 12, 1, 98))
hh3cNetworkHealthMonitorNormal = MibIdentifier((1, 3, 6, 1, 4, 1, 25506, 8, 35, 12, 1, 99))
mibBuilder.exportSymbols("HH3C-LswTRAP-MIB", hh3csLswTRAPMibObject=hh3csLswTRAPMibObject, hh3cNetworkHealthMonitorFailure=hh3cNetworkHealthMonitorFailure, hh3cCpuNormal=hh3cCpuNormal, hh3cBoardRemoved=hh3cBoardRemoved, hh3cBackBoardModeSetOK=hh3cBackBoardModeSetOK, hh3cBootImageUpdated=hh3cBootImageUpdated, hh3cBoardNormal=hh3cBoardNormal, PYSNMP_MODULE_ID=hh3cLswTrapMib, hh3cBoardTemperatureFromLowerToNormal=hh3cBoardTemperatureFromLowerToNormal, hh3cFanNormal=hh3cFanNormal, hh3cSlavePowerNormal=hh3cSlavePowerNormal, hh3cBackBoardModeSetFuilure=hh3cBackBoardModeSetFuilure, hh3cBoardTemperatureHigher=hh3cBoardTemperatureHigher, hh3cCpuFailure=hh3cCpuFailure, hh3cSubcardRemove=hh3cSubcardRemove, hh3cLoadFailure=hh3cLoadFailure, hh3cRequestLoading=hh3cRequestLoading, hh3cBoardTemperatureFormHigherToNormal=hh3cBoardTemperatureFormHigherToNormal, hh3cCpuRemoved=hh3cCpuRemoved, hh3cPowerNormal=hh3cPowerNormal, hh3cpowerfailure=hh3cpowerfailure, hh3cMasterPowerNormal=hh3cMasterPowerNormal, hh3cLswTrapMib=hh3cLswTrapMib, hh3cSubcardInsert=hh3cSubcardInsert, hh3cLoadFinished=hh3cLoadFinished, hh3cBoardFailure=hh3cBoardFailure, hh3cBoardInserted=hh3cBoardInserted, hh3cPowerInserted=hh3cPowerInserted, hh3cNetworkHealthMonitorNormal=hh3cNetworkHealthMonitorNormal, hh3cfanfailure=hh3cfanfailure, hh3cBoardTemperatureLower=hh3cBoardTemperatureLower, hh3cPowerRemoved=hh3cPowerRemoved, hh3cPowerIncompatible=hh3cPowerIncompatible)
