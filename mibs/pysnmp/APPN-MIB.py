#
# PySNMP MIB module APPN-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/APPN-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:08:22 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, SingleValueConstraint, ConstraintsIntersection, ConstraintsUnion, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "SingleValueConstraint", "ConstraintsIntersection", "ConstraintsUnion", "ValueSizeConstraint")
IANAifType, = mibBuilder.importSymbols("IANAifType-MIB", "IANAifType")
snanauMIB, = mibBuilder.importSymbols("SNA-NAU-MIB", "snanauMIB")
NotificationGroup, ModuleCompliance, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance", "ObjectGroup")
Unsigned32, IpAddress, Integer32, Counter32, Bits, Gauge32, ObjectIdentity, Counter64, MibScalar, MibTable, MibTableRow, MibTableColumn, NotificationType, MibIdentifier, ModuleIdentity, iso, TimeTicks = mibBuilder.importSymbols("SNMPv2-SMI", "Unsigned32", "IpAddress", "Integer32", "Counter32", "Bits", "Gauge32", "ObjectIdentity", "Counter64", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "NotificationType", "MibIdentifier", "ModuleIdentity", "iso", "TimeTicks")
DisplayString, TimeStamp, TextualConvention, DateAndTime, VariablePointer, RowPointer, TruthValue = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TimeStamp", "TextualConvention", "DateAndTime", "VariablePointer", "RowPointer", "TruthValue")
appnMIB = ModuleIdentity((1, 3, 6, 1, 2, 1, 34, 4))
appnMIB.setRevisions(('1998-07-15 18:00', '1998-05-26 18:00', '1997-07-31 18:00', '1997-03-31 18:00', '1997-03-20 12:00',))
if mibBuilder.loadTexts: appnMIB.setLastUpdated('9807151800Z')
if mibBuilder.loadTexts: appnMIB.setOrganization('IETF SNA NAU MIB WG / AIW APPN MIBs SIG')
class SnaNodeIdentification(TextualConvention, OctetString):
    status = 'current'
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(8, 8)
    fixedLength = 8

class SnaControlPointName(TextualConvention, OctetString):
    status = 'current'
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(3, 17)

class SnaClassOfServiceName(TextualConvention, OctetString):
    status = 'current'
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(0, 8)

class SnaModeName(TextualConvention, OctetString):
    status = 'current'
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(0, 8)

class SnaSenseData(TextualConvention, OctetString):
    status = 'current'
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(8, 8)
    fixedLength = 8

class DisplayableDlcAddress(TextualConvention, OctetString):
    status = 'current'
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(0, 64)

class AppnNodeCounter(TextualConvention, Counter32):
    status = 'current'

class AppnPortCounter(TextualConvention, Counter32):
    status = 'current'

class AppnLinkStationCounter(TextualConvention, Counter32):
    status = 'current'

class AppnTopologyEntryTimeLeft(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ValueRangeConstraint(0, 15)

class AppnTgDlcData(TextualConvention, OctetString):
    status = 'current'
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(0, 64)

class AppnTgEffectiveCapacity(TextualConvention, OctetString):
    status = 'current'
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(1, 1)
    fixedLength = 1

class AppnTgSecurity(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 32, 64, 96, 128, 160, 192))
    namedValues = NamedValues(("nonsecure", 1), ("publicSwitchedNetwork", 32), ("undergroundCable", 64), ("secureConduit", 96), ("guardedConduit", 128), ("encrypted", 160), ("guardedRadiation", 192))

class AppnTgDelay(TextualConvention, OctetString):
    status = 'current'
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(1, 1)
    fixedLength = 1

appnObjects = MibIdentifier((1, 3, 6, 1, 2, 1, 34, 4, 1))
appnNode = MibIdentifier((1, 3, 6, 1, 2, 1, 34, 4, 1, 1))
appnGeneralInfoAndCaps = MibIdentifier((1, 3, 6, 1, 2, 1, 34, 4, 1, 1, 1))
appnNnUniqueInfoAndCaps = MibIdentifier((1, 3, 6, 1, 2, 1, 34, 4, 1, 1, 2))
appnEnUniqueCaps = MibIdentifier((1, 3, 6, 1, 2, 1, 34, 4, 1, 1, 3))
appnPortInformation = MibIdentifier((1, 3, 6, 1, 2, 1, 34, 4, 1, 1, 4))
appnLinkStationInformation = MibIdentifier((1, 3, 6, 1, 2, 1, 34, 4, 1, 1, 5))
appnVrnInfo = MibIdentifier((1, 3, 6, 1, 2, 1, 34, 4, 1, 1, 6))
appnNodeCpName = MibScalar((1, 3, 6, 1, 2, 1, 34, 4, 1, 1, 1, 1), SnaControlPointName()).setMaxAccess("readonly")
if mibBuilder.loadTexts: appnNodeCpName.setStatus('current')
appnNodeId = MibScalar((1, 3, 6, 1, 2, 1, 34, 4, 1, 1, 1, 3), SnaNodeIdentification()).setMaxAccess("readonly")
if mibBuilder.loadTexts: appnNodeId.setStatus('current')
appnNodeType = MibScalar((1, 3, 6, 1, 2, 1, 34, 4, 1, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 4))).clone(namedValues=NamedValues(("networkNode", 1), ("endNode", 2), ("t21len", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: appnNodeType.setStatus('current')
appnNodeUpTime = MibScalar((1, 3, 6, 1, 2, 1, 34, 4, 1, 1, 1, 5), TimeTicks()).setUnits('hundredths of a second').setMaxAccess("readonly")
if mibBuilder.loadTexts: appnNodeUpTime.setStatus('current')
appnNodeParallelTg = MibScalar((1, 3, 6, 1, 2, 1, 34, 4, 1, 1, 1, 6), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: appnNodeParallelTg.setStatus('current')
appnNodeAdaptiveBindPacing = MibScalar((1, 3, 6, 1, 2, 1, 34, 4, 1, 1, 1, 7), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: appnNodeAdaptiveBindPacing.setStatus('current')
appnNodeHprSupport = MibScalar((1, 3, 6, 1, 2, 1, 34, 4, 1, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("noHprSupport", 1), ("hprBaseOnly", 2), ("rtpTower", 3), ("controlFlowsOverRtpTower", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: appnNodeHprSupport.setStatus('current')
appnNodeMaxSessPerRtpConn = MibScalar((1, 3, 6, 1, 2, 1, 34, 4, 1, 1, 1, 9), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: appnNodeMaxSessPerRtpConn.setStatus('current')
appnNodeHprIntRteSetups = MibScalar((1, 3, 6, 1, 2, 1, 34, 4, 1, 1, 1, 10), AppnNodeCounter()).setMaxAccess("readonly")
if mibBuilder.loadTexts: appnNodeHprIntRteSetups.setStatus('current')
appnNodeHprIntRteRejects = MibScalar((1, 3, 6, 1, 2, 1, 34, 4, 1, 1, 1, 11), AppnNodeCounter()).setMaxAccess("readonly")
if mibBuilder.loadTexts: appnNodeHprIntRteRejects.setStatus('current')
appnNodeHprOrgRteSetups = MibScalar((1, 3, 6, 1, 2, 1, 34, 4, 1, 1, 1, 12), AppnNodeCounter()).setMaxAccess("readonly")
if mibBuilder.loadTexts: appnNodeHprOrgRteSetups.setStatus('current')
appnNodeHprOrgRteRejects = MibScalar((1, 3, 6, 1, 2, 1, 34, 4, 1, 1, 1, 13), AppnNodeCounter()).setMaxAccess("readonly")
if mibBuilder.loadTexts: appnNodeHprOrgRteRejects.setStatus('current')
appnNodeHprEndRteSetups = MibScalar((1, 3, 6, 1, 2, 1, 34, 4, 1, 1, 1, 14), AppnNodeCounter()).setMaxAccess("readonly")
if mibBuilder.loadTexts: appnNodeHprEndRteSetups.setStatus('current')
appnNodeHprEndRteRejects = MibScalar((1, 3, 6, 1, 2, 1, 34, 4, 1, 1, 1, 15), AppnNodeCounter()).setMaxAccess("readonly")
if mibBuilder.loadTexts: appnNodeHprEndRteRejects.setStatus('current')
appnNodeCounterDisconTime = MibScalar((1, 3, 6, 1, 2, 1, 34, 4, 1, 1, 1, 16), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: appnNodeCounterDisconTime.setStatus('current')
appnNodeLsCounterType = MibScalar((1, 3, 6, 1, 2, 1, 34, 4, 1, 1, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("other", 1), ("noAnr", 2), ("anrForLocalNces", 3), ("allAnr", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: appnNodeLsCounterType.setStatus('current')
appnNodeBrNn = MibScalar((1, 3, 6, 1, 2, 1, 34, 4, 1, 1, 1, 18), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: appnNodeBrNn.setStatus('current')
appnNodeNnCentralDirectory = MibScalar((1, 3, 6, 1, 2, 1, 34, 4, 1, 1, 2, 1), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: appnNodeNnCentralDirectory.setStatus('current')
appnNodeNnTreeCache = MibScalar((1, 3, 6, 1, 2, 1, 34, 4, 1, 1, 2, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("noCache", 1), ("cacheNoIncrUpdate", 2), ("cacheWithIncrUpdate", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: appnNodeNnTreeCache.setStatus('current')
appnNodeNnRouteAddResist = MibScalar((1, 3, 6, 1, 2, 1, 34, 4, 1, 1, 2, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: appnNodeNnRouteAddResist.setStatus('current')
appnNodeNnIsr = MibScalar((1, 3, 6, 1, 2, 1, 34, 4, 1, 1, 2, 4), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: appnNodeNnIsr.setStatus('current')
appnNodeNnFrsn = MibScalar((1, 3, 6, 1, 2, 1, 34, 4, 1, 1, 2, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: appnNodeNnFrsn.setStatus('current')
appnNodeNnPeriBorderSup = MibScalar((1, 3, 6, 1, 2, 1, 34, 4, 1, 1, 2, 6), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: appnNodeNnPeriBorderSup.setStatus('current')
appnNodeNnInterchangeSup = MibScalar((1, 3, 6, 1, 2, 1, 34, 4, 1, 1, 2, 7), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: appnNodeNnInterchangeSup.setStatus('current')
appnNodeNnExteBorderSup = MibScalar((1, 3, 6, 1, 2, 1, 34, 4, 1, 1, 2, 8), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: appnNodeNnExteBorderSup.setStatus('current')
appnNodeNnSafeStoreFreq = MibScalar((1, 3, 6, 1, 2, 1, 34, 4, 1, 1, 2, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 32767))).setUnits('TDUs').setMaxAccess("readwrite")
if mibBuilder.loadTexts: appnNodeNnSafeStoreFreq.setStatus('current')
appnNodeNnRsn = MibScalar((1, 3, 6, 1, 2, 1, 34, 4, 1, 1, 2, 10), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: appnNodeNnRsn.setStatus('current')
appnNodeNnCongested = MibScalar((1, 3, 6, 1, 2, 1, 34, 4, 1, 1, 2, 11), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: appnNodeNnCongested.setStatus('current')
appnNodeNnIsrDepleted = MibScalar((1, 3, 6, 1, 2, 1, 34, 4, 1, 1, 2, 12), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: appnNodeNnIsrDepleted.setStatus('current')
appnNodeNnQuiescing = MibScalar((1, 3, 6, 1, 2, 1, 34, 4, 1, 1, 2, 13), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: appnNodeNnQuiescing.setStatus('current')
appnNodeNnGateway = MibScalar((1, 3, 6, 1, 2, 1, 34, 4, 1, 1, 2, 14), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: appnNodeNnGateway.setStatus('current')
appnNodeEnModeCosMap = MibScalar((1, 3, 6, 1, 2, 1, 34, 4, 1, 1, 3, 1), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: appnNodeEnModeCosMap.setStatus('current')
appnNodeEnNnServer = MibScalar((1, 3, 6, 1, 2, 1, 34, 4, 1, 1, 3, 2), OctetString().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(3, 17), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: appnNodeEnNnServer.setStatus('current')
appnNodeEnLuSearch = MibScalar((1, 3, 6, 1, 2, 1, 34, 4, 1, 1, 3, 3), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: appnNodeEnLuSearch.setStatus('current')
appnPortTable = MibTable((1, 3, 6, 1, 2, 1, 34, 4, 1, 1, 4, 1), )
if mibBuilder.loadTexts: appnPortTable.setStatus('current')
appnPortEntry = MibTableRow((1, 3, 6, 1, 2, 1, 34, 4, 1, 1, 4, 1, 1), ).setIndexNames((0, "APPN-MIB", "appnPortName"))
if mibBuilder.loadTexts: appnPortEntry.setStatus('current')
appnPortName = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 4, 1, 1, 4, 1, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 10)))
if mibBuilder.loadTexts: appnPortName.setStatus('current')
appnPortCommand = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 4, 1, 1, 4, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("deactivate", 1), ("activate", 2), ("recycle", 3), ("ready", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: appnPortCommand.setStatus('current')
appnPortOperState = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 4, 1, 1, 4, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("inactive", 1), ("pendactive", 2), ("active", 3), ("pendinact", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: appnPortOperState.setStatus('current')
appnPortDlcType = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 4, 1, 1, 4, 1, 1, 4), IANAifType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: appnPortDlcType.setStatus('current')
appnPortPortType = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 4, 1, 1, 4, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("leased", 1), ("switched", 2), ("sharedAccessFacilities", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: appnPortPortType.setStatus('current')
appnPortSIMRIM = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 4, 1, 1, 4, 1, 1, 6), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: appnPortSIMRIM.setStatus('current')
appnPortLsRole = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 4, 1, 1, 4, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("primary", 1), ("secondary", 2), ("negotiable", 3), ("abm", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: appnPortLsRole.setStatus('current')
appnPortNegotLs = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 4, 1, 1, 4, 1, 1, 8), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: appnPortNegotLs.setStatus('current')
appnPortDynamicLinkSupport = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 4, 1, 1, 4, 1, 1, 9), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: appnPortDynamicLinkSupport.setStatus('current')
appnPortMaxRcvBtuSize = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 4, 1, 1, 4, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(99, 32767))).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: appnPortMaxRcvBtuSize.setStatus('current')
appnPortMaxIframeWindow = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 4, 1, 1, 4, 1, 1, 11), Gauge32()).setUnits('I-frames').setMaxAccess("readonly")
if mibBuilder.loadTexts: appnPortMaxIframeWindow.setStatus('current')
appnPortDefLsGoodXids = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 4, 1, 1, 4, 1, 1, 12), AppnPortCounter()).setUnits('XID exchanges').setMaxAccess("readonly")
if mibBuilder.loadTexts: appnPortDefLsGoodXids.setStatus('current')
appnPortDefLsBadXids = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 4, 1, 1, 4, 1, 1, 13), AppnPortCounter()).setUnits('XID exchanges').setMaxAccess("readonly")
if mibBuilder.loadTexts: appnPortDefLsBadXids.setStatus('current')
appnPortDynLsGoodXids = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 4, 1, 1, 4, 1, 1, 14), AppnPortCounter()).setUnits('XID exchanges').setMaxAccess("readonly")
if mibBuilder.loadTexts: appnPortDynLsGoodXids.setStatus('current')
appnPortDynLsBadXids = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 4, 1, 1, 4, 1, 1, 15), AppnPortCounter()).setUnits('XID exchanges').setMaxAccess("readonly")
if mibBuilder.loadTexts: appnPortDynLsBadXids.setStatus('current')
appnPortSpecific = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 4, 1, 1, 4, 1, 1, 16), RowPointer()).setMaxAccess("readonly")
if mibBuilder.loadTexts: appnPortSpecific.setStatus('current')
appnPortDlcLocalAddr = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 4, 1, 1, 4, 1, 1, 17), DisplayableDlcAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: appnPortDlcLocalAddr.setStatus('current')
appnPortCounterDisconTime = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 4, 1, 1, 4, 1, 1, 18), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: appnPortCounterDisconTime.setStatus('current')
appnLsTable = MibTable((1, 3, 6, 1, 2, 1, 34, 4, 1, 1, 5, 1), )
if mibBuilder.loadTexts: appnLsTable.setStatus('current')
appnLsEntry = MibTableRow((1, 3, 6, 1, 2, 1, 34, 4, 1, 1, 5, 1, 1), ).setIndexNames((0, "APPN-MIB", "appnLsName"))
if mibBuilder.loadTexts: appnLsEntry.setStatus('current')
appnLsName = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 4, 1, 1, 5, 1, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 10)))
if mibBuilder.loadTexts: appnLsName.setStatus('current')
appnLsCommand = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 4, 1, 1, 5, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("deactivate", 1), ("activate", 2), ("recycle", 3), ("ready", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: appnLsCommand.setStatus('current')
appnLsOperState = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 4, 1, 1, 5, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11))).clone(namedValues=NamedValues(("inactive", 1), ("sentConnectOut", 2), ("pendXidExch", 3), ("sendActAs", 4), ("sendSetMode", 5), ("otherPendingActive", 6), ("active", 7), ("sentDeactAsOrd", 8), ("sentDiscOrd", 9), ("sentDiscImmed", 10), ("otherPendingInact", 11)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: appnLsOperState.setStatus('current')
appnLsPortName = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 4, 1, 1, 5, 1, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 10))).setMaxAccess("readonly")
if mibBuilder.loadTexts: appnLsPortName.setStatus('current')
appnLsDlcType = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 4, 1, 1, 5, 1, 1, 5), IANAifType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: appnLsDlcType.setStatus('current')
appnLsDynamic = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 4, 1, 1, 5, 1, 1, 6), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: appnLsDynamic.setStatus('current')
appnLsAdjCpName = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 4, 1, 1, 5, 1, 1, 7), OctetString().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(3, 17), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: appnLsAdjCpName.setStatus('current')
appnLsAdjNodeType = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 4, 1, 1, 5, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 4, 255))).clone(namedValues=NamedValues(("networkNode", 1), ("endNode", 2), ("t21len", 4), ("unknown", 255)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: appnLsAdjNodeType.setStatus('current')
appnLsTgNum = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 4, 1, 1, 5, 1, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 256))).setMaxAccess("readonly")
if mibBuilder.loadTexts: appnLsTgNum.setStatus('current')
appnLsLimResource = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 4, 1, 1, 5, 1, 1, 10), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: appnLsLimResource.setStatus('current')
appnLsActOnDemand = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 4, 1, 1, 5, 1, 1, 11), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: appnLsActOnDemand.setStatus('current')
appnLsMigration = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 4, 1, 1, 5, 1, 1, 12), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: appnLsMigration.setStatus('current')
appnLsPartnerNodeId = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 4, 1, 1, 5, 1, 1, 13), SnaNodeIdentification()).setMaxAccess("readonly")
if mibBuilder.loadTexts: appnLsPartnerNodeId.setStatus('current')
appnLsCpCpSessionSupport = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 4, 1, 1, 5, 1, 1, 14), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: appnLsCpCpSessionSupport.setStatus('current')
appnLsMaxSendBtuSize = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 4, 1, 1, 5, 1, 1, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(99, 32767))).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: appnLsMaxSendBtuSize.setStatus('current')
appnLsInXidBytes = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 4, 1, 1, 5, 1, 1, 16), AppnLinkStationCounter()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: appnLsInXidBytes.setStatus('current')
appnLsInMsgBytes = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 4, 1, 1, 5, 1, 1, 17), AppnLinkStationCounter()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: appnLsInMsgBytes.setStatus('current')
appnLsInXidFrames = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 4, 1, 1, 5, 1, 1, 18), AppnLinkStationCounter()).setUnits('XID frames').setMaxAccess("readonly")
if mibBuilder.loadTexts: appnLsInXidFrames.setStatus('current')
appnLsInMsgFrames = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 4, 1, 1, 5, 1, 1, 19), AppnLinkStationCounter()).setUnits('I-frames').setMaxAccess("readonly")
if mibBuilder.loadTexts: appnLsInMsgFrames.setStatus('current')
appnLsOutXidBytes = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 4, 1, 1, 5, 1, 1, 20), AppnLinkStationCounter()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: appnLsOutXidBytes.setStatus('current')
appnLsOutMsgBytes = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 4, 1, 1, 5, 1, 1, 21), AppnLinkStationCounter()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: appnLsOutMsgBytes.setStatus('current')
appnLsOutXidFrames = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 4, 1, 1, 5, 1, 1, 22), AppnLinkStationCounter()).setUnits('XID frames').setMaxAccess("readonly")
if mibBuilder.loadTexts: appnLsOutXidFrames.setStatus('current')
appnLsOutMsgFrames = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 4, 1, 1, 5, 1, 1, 23), AppnLinkStationCounter()).setUnits('I-frames').setMaxAccess("readonly")
if mibBuilder.loadTexts: appnLsOutMsgFrames.setStatus('current')
appnLsEchoRsps = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 4, 1, 1, 5, 1, 1, 24), AppnLinkStationCounter()).setUnits('echo responses').setMaxAccess("readonly")
if mibBuilder.loadTexts: appnLsEchoRsps.setStatus('current')
appnLsCurrentDelay = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 4, 1, 1, 5, 1, 1, 25), Gauge32()).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: appnLsCurrentDelay.setStatus('current')
appnLsMaxDelay = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 4, 1, 1, 5, 1, 1, 26), Gauge32()).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: appnLsMaxDelay.setStatus('current')
appnLsMinDelay = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 4, 1, 1, 5, 1, 1, 27), Gauge32()).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: appnLsMinDelay.setStatus('current')
appnLsMaxDelayTime = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 4, 1, 1, 5, 1, 1, 28), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: appnLsMaxDelayTime.setStatus('current')
appnLsGoodXids = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 4, 1, 1, 5, 1, 1, 29), AppnLinkStationCounter()).setUnits('XID exchanges').setMaxAccess("readonly")
if mibBuilder.loadTexts: appnLsGoodXids.setStatus('current')
appnLsBadXids = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 4, 1, 1, 5, 1, 1, 30), AppnLinkStationCounter()).setUnits('XID exchanges').setMaxAccess("readonly")
if mibBuilder.loadTexts: appnLsBadXids.setStatus('current')
appnLsSpecific = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 4, 1, 1, 5, 1, 1, 31), RowPointer()).setMaxAccess("readonly")
if mibBuilder.loadTexts: appnLsSpecific.setStatus('current')
appnLsActiveTime = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 4, 1, 1, 5, 1, 1, 32), Unsigned32()).setUnits('hundredths of a second').setMaxAccess("readonly")
if mibBuilder.loadTexts: appnLsActiveTime.setStatus('current')
appnLsCurrentStateTime = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 4, 1, 1, 5, 1, 1, 33), TimeTicks()).setUnits('hundredths of a second').setMaxAccess("readonly")
if mibBuilder.loadTexts: appnLsCurrentStateTime.setStatus('current')
appnLsHprSup = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 4, 1, 1, 5, 1, 1, 34), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("noHprSupport", 1), ("hprBaseOnly", 2), ("rtpTower", 3), ("controlFlowsOverRtpTower", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: appnLsHprSup.setStatus('current')
appnLsErrRecoSup = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 4, 1, 1, 5, 1, 1, 35), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: appnLsErrRecoSup.setStatus('current')
appnLsForAnrLabel = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 4, 1, 1, 5, 1, 1, 36), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: appnLsForAnrLabel.setStatus('current')
appnLsRevAnrLabel = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 4, 1, 1, 5, 1, 1, 37), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: appnLsRevAnrLabel.setStatus('current')
appnLsCpCpNceId = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 4, 1, 1, 5, 1, 1, 38), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: appnLsCpCpNceId.setStatus('current')
appnLsRouteNceId = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 4, 1, 1, 5, 1, 1, 39), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: appnLsRouteNceId.setStatus('current')
appnLsBfNceId = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 4, 1, 1, 5, 1, 1, 40), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: appnLsBfNceId.setStatus('current')
appnLsLocalAddr = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 4, 1, 1, 5, 1, 1, 41), DisplayableDlcAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: appnLsLocalAddr.setStatus('current')
appnLsRemoteAddr = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 4, 1, 1, 5, 1, 1, 42), DisplayableDlcAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: appnLsRemoteAddr.setStatus('current')
appnLsRemoteLsName = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 4, 1, 1, 5, 1, 1, 43), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 10))).setMaxAccess("readonly")
if mibBuilder.loadTexts: appnLsRemoteLsName.setStatus('current')
appnLsCounterDisconTime = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 4, 1, 1, 5, 1, 1, 44), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: appnLsCounterDisconTime.setStatus('current')
appnLsMltgMember = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 4, 1, 1, 5, 1, 1, 45), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: appnLsMltgMember.setStatus('current')
appnLsStatusTable = MibTable((1, 3, 6, 1, 2, 1, 34, 4, 1, 1, 5, 2), )
if mibBuilder.loadTexts: appnLsStatusTable.setStatus('current')
appnLsStatusEntry = MibTableRow((1, 3, 6, 1, 2, 1, 34, 4, 1, 1, 5, 2, 1), ).setIndexNames((0, "APPN-MIB", "appnLsStatusIndex"))
if mibBuilder.loadTexts: appnLsStatusEntry.setStatus('current')
appnLsStatusIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 4, 1, 1, 5, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647)))
if mibBuilder.loadTexts: appnLsStatusIndex.setStatus('current')
appnLsStatusTime = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 4, 1, 1, 5, 2, 1, 2), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: appnLsStatusTime.setStatus('current')
appnLsStatusLsName = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 4, 1, 1, 5, 2, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 10))).setMaxAccess("readonly")
if mibBuilder.loadTexts: appnLsStatusLsName.setStatus('current')
appnLsStatusCpName = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 4, 1, 1, 5, 2, 1, 4), DisplayString().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(3, 17), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: appnLsStatusCpName.setStatus('current')
appnLsStatusPartnerId = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 4, 1, 1, 5, 2, 1, 5), SnaNodeIdentification()).setMaxAccess("readonly")
if mibBuilder.loadTexts: appnLsStatusPartnerId.setStatus('current')
appnLsStatusTgNum = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 4, 1, 1, 5, 2, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 256))).setMaxAccess("readonly")
if mibBuilder.loadTexts: appnLsStatusTgNum.setStatus('current')
appnLsStatusGeneralSense = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 4, 1, 1, 5, 2, 1, 7), SnaSenseData()).setMaxAccess("readonly")
if mibBuilder.loadTexts: appnLsStatusGeneralSense.setStatus('current')
appnLsStatusRetry = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 4, 1, 1, 5, 2, 1, 8), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: appnLsStatusRetry.setStatus('current')
appnLsStatusEndSense = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 4, 1, 1, 5, 2, 1, 9), SnaSenseData()).setMaxAccess("readonly")
if mibBuilder.loadTexts: appnLsStatusEndSense.setStatus('current')
appnLsStatusXidLocalSense = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 4, 1, 1, 5, 2, 1, 10), SnaSenseData()).setMaxAccess("readonly")
if mibBuilder.loadTexts: appnLsStatusXidLocalSense.setStatus('current')
appnLsStatusXidRemoteSense = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 4, 1, 1, 5, 2, 1, 11), SnaSenseData()).setMaxAccess("readonly")
if mibBuilder.loadTexts: appnLsStatusXidRemoteSense.setStatus('current')
appnLsStatusXidByteInError = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 4, 1, 1, 5, 2, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65536))).setMaxAccess("readonly")
if mibBuilder.loadTexts: appnLsStatusXidByteInError.setStatus('current')
appnLsStatusXidBitInError = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 4, 1, 1, 5, 2, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: appnLsStatusXidBitInError.setStatus('current')
appnLsStatusDlcType = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 4, 1, 1, 5, 2, 1, 14), IANAifType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: appnLsStatusDlcType.setStatus('current')
appnLsStatusLocalAddr = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 4, 1, 1, 5, 2, 1, 15), DisplayableDlcAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: appnLsStatusLocalAddr.setStatus('current')
appnLsStatusRemoteAddr = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 4, 1, 1, 5, 2, 1, 16), DisplayableDlcAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: appnLsStatusRemoteAddr.setStatus('current')
appnVrnTable = MibTable((1, 3, 6, 1, 2, 1, 34, 4, 1, 1, 6, 1), )
if mibBuilder.loadTexts: appnVrnTable.setStatus('current')
appnVrnEntry = MibTableRow((1, 3, 6, 1, 2, 1, 34, 4, 1, 1, 6, 1, 1), ).setIndexNames((0, "APPN-MIB", "appnVrnName"), (0, "APPN-MIB", "appnVrnTgNum"), (0, "APPN-MIB", "appnVrnPortName"))
if mibBuilder.loadTexts: appnVrnEntry.setStatus('current')
appnVrnName = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 4, 1, 1, 6, 1, 1, 1), SnaControlPointName())
if mibBuilder.loadTexts: appnVrnName.setStatus('current')
appnVrnTgNum = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 4, 1, 1, 6, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255)))
if mibBuilder.loadTexts: appnVrnTgNum.setStatus('current')
appnVrnPortName = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 4, 1, 1, 6, 1, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 10))).setMaxAccess("readonly")
if mibBuilder.loadTexts: appnVrnPortName.setStatus('current')
appnNn = MibIdentifier((1, 3, 6, 1, 2, 1, 34, 4, 1, 2))
appnNnTopo = MibIdentifier((1, 3, 6, 1, 2, 1, 34, 4, 1, 2, 1))
appnNnTopology = MibIdentifier((1, 3, 6, 1, 2, 1, 34, 4, 1, 2, 2))
appnNnTopoMaxNodes = MibScalar((1, 3, 6, 1, 2, 1, 34, 4, 1, 2, 1, 1), Gauge32()).setUnits('node entries').setMaxAccess("readonly")
if mibBuilder.loadTexts: appnNnTopoMaxNodes.setStatus('current')
appnNnTopoCurNumNodes = MibScalar((1, 3, 6, 1, 2, 1, 34, 4, 1, 2, 1, 2), Gauge32()).setUnits('node entries').setMaxAccess("readonly")
if mibBuilder.loadTexts: appnNnTopoCurNumNodes.setStatus('current')
appnNnTopoNodePurges = MibScalar((1, 3, 6, 1, 2, 1, 34, 4, 1, 2, 1, 3), AppnNodeCounter()).setUnits('node entries').setMaxAccess("readonly")
if mibBuilder.loadTexts: appnNnTopoNodePurges.setStatus('current')
appnNnTopoTgPurges = MibScalar((1, 3, 6, 1, 2, 1, 34, 4, 1, 2, 1, 4), AppnNodeCounter()).setUnits('TG entries').setMaxAccess("readonly")
if mibBuilder.loadTexts: appnNnTopoTgPurges.setStatus('current')
appnNnTopoTotalTduWars = MibScalar((1, 3, 6, 1, 2, 1, 34, 4, 1, 2, 1, 5), AppnNodeCounter()).setUnits('TDU wars').setMaxAccess("readonly")
if mibBuilder.loadTexts: appnNnTopoTotalTduWars.setStatus('current')
appnNnTopologyFRTable = MibTable((1, 3, 6, 1, 2, 1, 34, 4, 1, 2, 2, 3), )
if mibBuilder.loadTexts: appnNnTopologyFRTable.setStatus('current')
appnNnTopologyFREntry = MibTableRow((1, 3, 6, 1, 2, 1, 34, 4, 1, 2, 2, 3, 1), ).setIndexNames((0, "APPN-MIB", "appnNnNodeFRFrsn"), (0, "APPN-MIB", "appnNnNodeFRName"))
if mibBuilder.loadTexts: appnNnTopologyFREntry.setStatus('current')
appnNnNodeFRFrsn = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 4, 1, 2, 2, 3, 1, 1), Unsigned32())
if mibBuilder.loadTexts: appnNnNodeFRFrsn.setStatus('current')
appnNnNodeFRName = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 4, 1, 2, 2, 3, 1, 2), SnaControlPointName())
if mibBuilder.loadTexts: appnNnNodeFRName.setStatus('current')
appnNnNodeFREntryTimeLeft = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 4, 1, 2, 2, 3, 1, 3), AppnTopologyEntryTimeLeft()).setUnits('days').setMaxAccess("readonly")
if mibBuilder.loadTexts: appnNnNodeFREntryTimeLeft.setStatus('current')
appnNnNodeFRType = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 4, 1, 2, 2, 3, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 3))).clone(namedValues=NamedValues(("networkNode", 1), ("virtualRoutingNode", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: appnNnNodeFRType.setStatus('current')
appnNnNodeFRRsn = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 4, 1, 2, 2, 3, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: appnNnNodeFRRsn.setStatus('current')
appnNnNodeFRRouteAddResist = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 4, 1, 2, 2, 3, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: appnNnNodeFRRouteAddResist.setStatus('current')
appnNnNodeFRCongested = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 4, 1, 2, 2, 3, 1, 7), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: appnNnNodeFRCongested.setStatus('current')
appnNnNodeFRIsrDepleted = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 4, 1, 2, 2, 3, 1, 8), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: appnNnNodeFRIsrDepleted.setStatus('current')
appnNnNodeFRQuiescing = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 4, 1, 2, 2, 3, 1, 9), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: appnNnNodeFRQuiescing.setStatus('current')
appnNnNodeFRGateway = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 4, 1, 2, 2, 3, 1, 10), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: appnNnNodeFRGateway.setStatus('current')
appnNnNodeFRCentralDirectory = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 4, 1, 2, 2, 3, 1, 11), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: appnNnNodeFRCentralDirectory.setStatus('current')
appnNnNodeFRIsr = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 4, 1, 2, 2, 3, 1, 12), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: appnNnNodeFRIsr.setStatus('current')
appnNnNodeFRGarbageCollect = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 4, 1, 2, 2, 3, 1, 13), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: appnNnNodeFRGarbageCollect.setStatus('current')
appnNnNodeFRHprSupport = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 4, 1, 2, 2, 3, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("noHprSupport", 1), ("hprBaseOnly", 2), ("rtpTower", 3), ("controlFlowsOverRtpTower", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: appnNnNodeFRHprSupport.setStatus('current')
appnNnNodeFRPeriBorderSup = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 4, 1, 2, 2, 3, 1, 15), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: appnNnNodeFRPeriBorderSup.setStatus('current')
appnNnNodeFRInterchangeSup = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 4, 1, 2, 2, 3, 1, 16), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: appnNnNodeFRInterchangeSup.setStatus('current')
appnNnNodeFRExteBorderSup = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 4, 1, 2, 2, 3, 1, 17), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: appnNnNodeFRExteBorderSup.setStatus('current')
appnNnNodeFRBranchAwareness = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 4, 1, 2, 2, 3, 1, 18), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: appnNnNodeFRBranchAwareness.setStatus('current')
appnNnTgTopologyFRTable = MibTable((1, 3, 6, 1, 2, 1, 34, 4, 1, 2, 2, 4), )
if mibBuilder.loadTexts: appnNnTgTopologyFRTable.setStatus('current')
appnNnTgTopologyFREntry = MibTableRow((1, 3, 6, 1, 2, 1, 34, 4, 1, 2, 2, 4, 1), ).setIndexNames((0, "APPN-MIB", "appnNnTgFRFrsn"), (0, "APPN-MIB", "appnNnTgFROwner"), (0, "APPN-MIB", "appnNnTgFRDest"), (0, "APPN-MIB", "appnNnTgFRNum"))
if mibBuilder.loadTexts: appnNnTgTopologyFREntry.setStatus('current')
appnNnTgFRFrsn = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 4, 1, 2, 2, 4, 1, 1), Unsigned32())
if mibBuilder.loadTexts: appnNnTgFRFrsn.setStatus('current')
appnNnTgFROwner = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 4, 1, 2, 2, 4, 1, 2), SnaControlPointName())
if mibBuilder.loadTexts: appnNnTgFROwner.setStatus('current')
appnNnTgFRDest = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 4, 1, 2, 2, 4, 1, 3), SnaControlPointName())
if mibBuilder.loadTexts: appnNnTgFRDest.setStatus('current')
appnNnTgFRNum = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 4, 1, 2, 2, 4, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255)))
if mibBuilder.loadTexts: appnNnTgFRNum.setStatus('current')
appnNnTgFREntryTimeLeft = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 4, 1, 2, 2, 4, 1, 5), AppnTopologyEntryTimeLeft()).setUnits('days').setMaxAccess("readonly")
if mibBuilder.loadTexts: appnNnTgFREntryTimeLeft.setStatus('current')
appnNnTgFRDestVirtual = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 4, 1, 2, 2, 4, 1, 6), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: appnNnTgFRDestVirtual.setStatus('current')
appnNnTgFRDlcData = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 4, 1, 2, 2, 4, 1, 7), AppnTgDlcData()).setMaxAccess("readonly")
if mibBuilder.loadTexts: appnNnTgFRDlcData.setStatus('current')
appnNnTgFRRsn = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 4, 1, 2, 2, 4, 1, 8), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: appnNnTgFRRsn.setStatus('current')
appnNnTgFROperational = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 4, 1, 2, 2, 4, 1, 9), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: appnNnTgFROperational.setStatus('current')
appnNnTgFRQuiescing = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 4, 1, 2, 2, 4, 1, 10), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: appnNnTgFRQuiescing.setStatus('current')
appnNnTgFRCpCpSession = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 4, 1, 2, 2, 4, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("supportedUnknownStatus", 1), ("supportedActive", 2), ("notSupported", 3), ("supportedNotActive", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: appnNnTgFRCpCpSession.setStatus('current')
appnNnTgFREffCap = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 4, 1, 2, 2, 4, 1, 12), AppnTgEffectiveCapacity()).setMaxAccess("readonly")
if mibBuilder.loadTexts: appnNnTgFREffCap.setStatus('current')
appnNnTgFRConnCost = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 4, 1, 2, 2, 4, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: appnNnTgFRConnCost.setStatus('current')
appnNnTgFRByteCost = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 4, 1, 2, 2, 4, 1, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: appnNnTgFRByteCost.setStatus('current')
appnNnTgFRSecurity = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 4, 1, 2, 2, 4, 1, 15), AppnTgSecurity()).setMaxAccess("readonly")
if mibBuilder.loadTexts: appnNnTgFRSecurity.setStatus('current')
appnNnTgFRDelay = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 4, 1, 2, 2, 4, 1, 16), AppnTgDelay()).setMaxAccess("readonly")
if mibBuilder.loadTexts: appnNnTgFRDelay.setStatus('current')
appnNnTgFRUsr1 = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 4, 1, 2, 2, 4, 1, 17), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: appnNnTgFRUsr1.setStatus('current')
appnNnTgFRUsr2 = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 4, 1, 2, 2, 4, 1, 18), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: appnNnTgFRUsr2.setStatus('current')
appnNnTgFRUsr3 = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 4, 1, 2, 2, 4, 1, 19), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: appnNnTgFRUsr3.setStatus('current')
appnNnTgFRGarbageCollect = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 4, 1, 2, 2, 4, 1, 20), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: appnNnTgFRGarbageCollect.setStatus('current')
appnNnTgFRSubareaNum = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 4, 1, 2, 2, 4, 1, 21), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: appnNnTgFRSubareaNum.setStatus('current')
appnNnTgFRHprSup = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 4, 1, 2, 2, 4, 1, 22), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: appnNnTgFRHprSup.setStatus('current')
appnNnTgFRDestHprTrans = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 4, 1, 2, 2, 4, 1, 23), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: appnNnTgFRDestHprTrans.setStatus('current')
appnNnTgFRTypeIndicator = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 4, 1, 2, 2, 4, 1, 24), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("unknown", 1), ("appnOrBfTg", 2), ("interchangeTg", 3), ("virtualRouteTg", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: appnNnTgFRTypeIndicator.setStatus('current')
appnNnTgFRIntersubnet = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 4, 1, 2, 2, 4, 1, 25), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: appnNnTgFRIntersubnet.setStatus('current')
appnNnTgFRMltgLinkType = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 4, 1, 2, 2, 4, 1, 26), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: appnNnTgFRMltgLinkType.setStatus('current')
appnNnTgFRBranchTg = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 4, 1, 2, 2, 4, 1, 27), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: appnNnTgFRBranchTg.setStatus('current')
appnLocalTopology = MibIdentifier((1, 3, 6, 1, 2, 1, 34, 4, 1, 3))
appnLocalTgTable = MibTable((1, 3, 6, 1, 2, 1, 34, 4, 1, 3, 1), )
if mibBuilder.loadTexts: appnLocalTgTable.setStatus('current')
appnLocalTgEntry = MibTableRow((1, 3, 6, 1, 2, 1, 34, 4, 1, 3, 1, 1), ).setIndexNames((0, "APPN-MIB", "appnLocalTgDest"), (0, "APPN-MIB", "appnLocalTgNum"))
if mibBuilder.loadTexts: appnLocalTgEntry.setStatus('current')
appnLocalTgDest = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 4, 1, 3, 1, 1, 1), SnaControlPointName())
if mibBuilder.loadTexts: appnLocalTgDest.setStatus('current')
appnLocalTgNum = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 4, 1, 3, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255)))
if mibBuilder.loadTexts: appnLocalTgNum.setStatus('current')
appnLocalTgDestVirtual = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 4, 1, 3, 1, 1, 3), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: appnLocalTgDestVirtual.setStatus('current')
appnLocalTgDlcData = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 4, 1, 3, 1, 1, 4), AppnTgDlcData()).setMaxAccess("readonly")
if mibBuilder.loadTexts: appnLocalTgDlcData.setStatus('current')
appnLocalTgPortName = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 4, 1, 3, 1, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 10))).setMaxAccess("readonly")
if mibBuilder.loadTexts: appnLocalTgPortName.setStatus('current')
appnLocalTgQuiescing = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 4, 1, 3, 1, 1, 6), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: appnLocalTgQuiescing.setStatus('current')
appnLocalTgOperational = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 4, 1, 3, 1, 1, 7), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: appnLocalTgOperational.setStatus('current')
appnLocalTgCpCpSession = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 4, 1, 3, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("supportedUnknownStatus", 1), ("supportedActive", 2), ("notSupported", 3), ("supportedNotActive", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: appnLocalTgCpCpSession.setStatus('current')
appnLocalTgEffCap = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 4, 1, 3, 1, 1, 9), AppnTgEffectiveCapacity()).setMaxAccess("readonly")
if mibBuilder.loadTexts: appnLocalTgEffCap.setStatus('current')
appnLocalTgConnCost = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 4, 1, 3, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: appnLocalTgConnCost.setStatus('current')
appnLocalTgByteCost = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 4, 1, 3, 1, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: appnLocalTgByteCost.setStatus('current')
appnLocalTgSecurity = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 4, 1, 3, 1, 1, 12), AppnTgSecurity()).setMaxAccess("readonly")
if mibBuilder.loadTexts: appnLocalTgSecurity.setStatus('current')
appnLocalTgDelay = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 4, 1, 3, 1, 1, 13), AppnTgDelay()).setMaxAccess("readonly")
if mibBuilder.loadTexts: appnLocalTgDelay.setStatus('current')
appnLocalTgUsr1 = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 4, 1, 3, 1, 1, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: appnLocalTgUsr1.setStatus('current')
appnLocalTgUsr2 = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 4, 1, 3, 1, 1, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: appnLocalTgUsr2.setStatus('current')
appnLocalTgUsr3 = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 4, 1, 3, 1, 1, 16), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: appnLocalTgUsr3.setStatus('current')
appnLocalTgHprSup = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 4, 1, 3, 1, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("noHprSupport", 1), ("hprBaseOnly", 2), ("rtpTower", 3), ("controlFlowsOverRtpTower", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: appnLocalTgHprSup.setStatus('current')
appnLocalTgIntersubnet = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 4, 1, 3, 1, 1, 18), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: appnLocalTgIntersubnet.setStatus('current')
appnLocalTgMltgLinkType = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 4, 1, 3, 1, 1, 19), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: appnLocalTgMltgLinkType.setStatus('current')
appnLocalTgBranchLinkType = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 4, 1, 3, 1, 1, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 255))).clone(namedValues=NamedValues(("other", 1), ("uplink", 2), ("downlink", 3), ("downlinkToBranchNetworkNode", 4), ("none", 5), ("unknown", 255)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: appnLocalTgBranchLinkType.setStatus('current')
appnLocalEnTgTable = MibTable((1, 3, 6, 1, 2, 1, 34, 4, 1, 3, 2), )
if mibBuilder.loadTexts: appnLocalEnTgTable.setStatus('current')
appnLocalEnTgEntry = MibTableRow((1, 3, 6, 1, 2, 1, 34, 4, 1, 3, 2, 1), ).setIndexNames((0, "APPN-MIB", "appnLocalEnTgOrigin"), (0, "APPN-MIB", "appnLocalEnTgDest"), (0, "APPN-MIB", "appnLocalEnTgNum"))
if mibBuilder.loadTexts: appnLocalEnTgEntry.setStatus('current')
appnLocalEnTgOrigin = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 4, 1, 3, 2, 1, 1), SnaControlPointName())
if mibBuilder.loadTexts: appnLocalEnTgOrigin.setStatus('current')
appnLocalEnTgDest = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 4, 1, 3, 2, 1, 2), SnaControlPointName())
if mibBuilder.loadTexts: appnLocalEnTgDest.setStatus('current')
appnLocalEnTgNum = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 4, 1, 3, 2, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255)))
if mibBuilder.loadTexts: appnLocalEnTgNum.setStatus('current')
appnLocalEnTgEntryTimeLeft = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 4, 1, 3, 2, 1, 4), AppnTopologyEntryTimeLeft()).setUnits('days').setMaxAccess("readonly")
if mibBuilder.loadTexts: appnLocalEnTgEntryTimeLeft.setStatus('current')
appnLocalEnTgDestVirtual = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 4, 1, 3, 2, 1, 5), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: appnLocalEnTgDestVirtual.setStatus('current')
appnLocalEnTgDlcData = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 4, 1, 3, 2, 1, 6), AppnTgDlcData()).setMaxAccess("readonly")
if mibBuilder.loadTexts: appnLocalEnTgDlcData.setStatus('current')
appnLocalEnTgOperational = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 4, 1, 3, 2, 1, 7), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: appnLocalEnTgOperational.setStatus('current')
appnLocalEnTgCpCpSession = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 4, 1, 3, 2, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("supportedUnknownStatus", 1), ("supportedActive", 2), ("notSupported", 3), ("supportedNotActive", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: appnLocalEnTgCpCpSession.setStatus('current')
appnLocalEnTgEffCap = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 4, 1, 3, 2, 1, 9), AppnTgEffectiveCapacity()).setMaxAccess("readonly")
if mibBuilder.loadTexts: appnLocalEnTgEffCap.setStatus('current')
appnLocalEnTgConnCost = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 4, 1, 3, 2, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: appnLocalEnTgConnCost.setStatus('current')
appnLocalEnTgByteCost = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 4, 1, 3, 2, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: appnLocalEnTgByteCost.setStatus('current')
appnLocalEnTgSecurity = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 4, 1, 3, 2, 1, 12), AppnTgSecurity()).setMaxAccess("readonly")
if mibBuilder.loadTexts: appnLocalEnTgSecurity.setStatus('current')
appnLocalEnTgDelay = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 4, 1, 3, 2, 1, 13), AppnTgDelay()).setMaxAccess("readonly")
if mibBuilder.loadTexts: appnLocalEnTgDelay.setStatus('current')
appnLocalEnTgUsr1 = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 4, 1, 3, 2, 1, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: appnLocalEnTgUsr1.setStatus('current')
appnLocalEnTgUsr2 = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 4, 1, 3, 2, 1, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: appnLocalEnTgUsr2.setStatus('current')
appnLocalEnTgUsr3 = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 4, 1, 3, 2, 1, 16), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: appnLocalEnTgUsr3.setStatus('current')
appnLocalEnTgMltgLinkType = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 4, 1, 3, 2, 1, 17), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: appnLocalEnTgMltgLinkType.setStatus('current')
appnDir = MibIdentifier((1, 3, 6, 1, 2, 1, 34, 4, 1, 4))
appnDirPerf = MibIdentifier((1, 3, 6, 1, 2, 1, 34, 4, 1, 4, 1))
appnDirMaxCaches = MibScalar((1, 3, 6, 1, 2, 1, 34, 4, 1, 4, 1, 1), Unsigned32()).setUnits('directory entries').setMaxAccess("readonly")
if mibBuilder.loadTexts: appnDirMaxCaches.setStatus('current')
appnDirCurCaches = MibScalar((1, 3, 6, 1, 2, 1, 34, 4, 1, 4, 1, 2), Gauge32()).setUnits('directory entries').setMaxAccess("readonly")
if mibBuilder.loadTexts: appnDirCurCaches.setStatus('current')
appnDirCurHomeEntries = MibScalar((1, 3, 6, 1, 2, 1, 34, 4, 1, 4, 1, 3), Gauge32()).setUnits('directory entries').setMaxAccess("readonly")
if mibBuilder.loadTexts: appnDirCurHomeEntries.setStatus('current')
appnDirRegEntries = MibScalar((1, 3, 6, 1, 2, 1, 34, 4, 1, 4, 1, 4), Gauge32()).setUnits('directory entries').setMaxAccess("readonly")
if mibBuilder.loadTexts: appnDirRegEntries.setStatus('current')
appnDirInLocates = MibScalar((1, 3, 6, 1, 2, 1, 34, 4, 1, 4, 1, 5), AppnNodeCounter()).setUnits('Locate messages').setMaxAccess("readonly")
if mibBuilder.loadTexts: appnDirInLocates.setStatus('current')
appnDirInBcastLocates = MibScalar((1, 3, 6, 1, 2, 1, 34, 4, 1, 4, 1, 6), AppnNodeCounter()).setUnits('Locate messages').setMaxAccess("readonly")
if mibBuilder.loadTexts: appnDirInBcastLocates.setStatus('current')
appnDirOutLocates = MibScalar((1, 3, 6, 1, 2, 1, 34, 4, 1, 4, 1, 7), AppnNodeCounter()).setUnits('Locate messages').setMaxAccess("readonly")
if mibBuilder.loadTexts: appnDirOutLocates.setStatus('current')
appnDirOutBcastLocates = MibScalar((1, 3, 6, 1, 2, 1, 34, 4, 1, 4, 1, 8), AppnNodeCounter()).setUnits('Locate messages').setMaxAccess("readonly")
if mibBuilder.loadTexts: appnDirOutBcastLocates.setStatus('current')
appnDirNotFoundLocates = MibScalar((1, 3, 6, 1, 2, 1, 34, 4, 1, 4, 1, 9), AppnNodeCounter()).setUnits('Locate messages').setMaxAccess("readonly")
if mibBuilder.loadTexts: appnDirNotFoundLocates.setStatus('current')
appnDirNotFoundBcastLocates = MibScalar((1, 3, 6, 1, 2, 1, 34, 4, 1, 4, 1, 10), AppnNodeCounter()).setUnits('Locate messages').setMaxAccess("readonly")
if mibBuilder.loadTexts: appnDirNotFoundBcastLocates.setStatus('current')
appnDirLocateOutstands = MibScalar((1, 3, 6, 1, 2, 1, 34, 4, 1, 4, 1, 11), Gauge32()).setUnits('Locate messages').setMaxAccess("readonly")
if mibBuilder.loadTexts: appnDirLocateOutstands.setStatus('current')
appnDirTable = MibTable((1, 3, 6, 1, 2, 1, 34, 4, 1, 4, 2), )
if mibBuilder.loadTexts: appnDirTable.setStatus('current')
appnDirEntry = MibTableRow((1, 3, 6, 1, 2, 1, 34, 4, 1, 4, 2, 1), ).setIndexNames((0, "APPN-MIB", "appnDirLuName"))
if mibBuilder.loadTexts: appnDirEntry.setStatus('current')
appnDirLuName = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 4, 1, 4, 2, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 17)))
if mibBuilder.loadTexts: appnDirLuName.setStatus('current')
appnDirNnServerName = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 4, 1, 4, 2, 1, 2), SnaControlPointName()).setMaxAccess("readonly")
if mibBuilder.loadTexts: appnDirNnServerName.setStatus('current')
appnDirLuOwnerName = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 4, 1, 4, 2, 1, 3), SnaControlPointName()).setMaxAccess("readonly")
if mibBuilder.loadTexts: appnDirLuOwnerName.setStatus('current')
appnDirLuLocation = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 4, 1, 4, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("local", 1), ("domain", 2), ("xdomain", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: appnDirLuLocation.setStatus('current')
appnDirType = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 4, 1, 4, 2, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("home", 1), ("cache", 2), ("registered", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: appnDirType.setStatus('current')
appnDirApparentLuOwnerName = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 4, 1, 4, 2, 1, 6), DisplayString().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(3, 17), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: appnDirApparentLuOwnerName.setStatus('current')
appnCos = MibIdentifier((1, 3, 6, 1, 2, 1, 34, 4, 1, 5))
appnCosModeTable = MibTable((1, 3, 6, 1, 2, 1, 34, 4, 1, 5, 1), )
if mibBuilder.loadTexts: appnCosModeTable.setStatus('current')
appnCosModeEntry = MibTableRow((1, 3, 6, 1, 2, 1, 34, 4, 1, 5, 1, 1), ).setIndexNames((0, "APPN-MIB", "appnCosModeName"))
if mibBuilder.loadTexts: appnCosModeEntry.setStatus('current')
appnCosModeName = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 4, 1, 5, 1, 1, 1), SnaModeName())
if mibBuilder.loadTexts: appnCosModeName.setStatus('current')
appnCosModeCosName = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 4, 1, 5, 1, 1, 2), SnaClassOfServiceName()).setMaxAccess("readonly")
if mibBuilder.loadTexts: appnCosModeCosName.setStatus('current')
appnCosNameTable = MibTable((1, 3, 6, 1, 2, 1, 34, 4, 1, 5, 2), )
if mibBuilder.loadTexts: appnCosNameTable.setStatus('current')
appnCosNameEntry = MibTableRow((1, 3, 6, 1, 2, 1, 34, 4, 1, 5, 2, 1), ).setIndexNames((0, "APPN-MIB", "appnCosName"))
if mibBuilder.loadTexts: appnCosNameEntry.setStatus('current')
appnCosName = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 4, 1, 5, 2, 1, 1), SnaClassOfServiceName())
if mibBuilder.loadTexts: appnCosName.setStatus('current')
appnCosTransPriority = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 4, 1, 5, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("low", 1), ("medium", 2), ("high", 3), ("network", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: appnCosTransPriority.setStatus('current')
appnCosNodeRowTable = MibTable((1, 3, 6, 1, 2, 1, 34, 4, 1, 5, 3), )
if mibBuilder.loadTexts: appnCosNodeRowTable.setStatus('current')
appnCosNodeRowEntry = MibTableRow((1, 3, 6, 1, 2, 1, 34, 4, 1, 5, 3, 1), ).setIndexNames((0, "APPN-MIB", "appnCosNodeRowName"), (0, "APPN-MIB", "appnCosNodeRowIndex"))
if mibBuilder.loadTexts: appnCosNodeRowEntry.setStatus('current')
appnCosNodeRowName = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 4, 1, 5, 3, 1, 1), SnaClassOfServiceName())
if mibBuilder.loadTexts: appnCosNodeRowName.setStatus('current')
appnCosNodeRowIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 4, 1, 5, 3, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255)))
if mibBuilder.loadTexts: appnCosNodeRowIndex.setStatus('current')
appnCosNodeRowWgt = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 4, 1, 5, 3, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: appnCosNodeRowWgt.setStatus('current')
appnCosNodeRowResistMin = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 4, 1, 5, 3, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: appnCosNodeRowResistMin.setStatus('current')
appnCosNodeRowResistMax = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 4, 1, 5, 3, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: appnCosNodeRowResistMax.setStatus('current')
appnCosNodeRowMinCongestAllow = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 4, 1, 5, 3, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setMaxAccess("readonly")
if mibBuilder.loadTexts: appnCosNodeRowMinCongestAllow.setStatus('current')
appnCosNodeRowMaxCongestAllow = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 4, 1, 5, 3, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setMaxAccess("readonly")
if mibBuilder.loadTexts: appnCosNodeRowMaxCongestAllow.setStatus('current')
appnCosTgRowTable = MibTable((1, 3, 6, 1, 2, 1, 34, 4, 1, 5, 4), )
if mibBuilder.loadTexts: appnCosTgRowTable.setStatus('current')
appnCosTgRowEntry = MibTableRow((1, 3, 6, 1, 2, 1, 34, 4, 1, 5, 4, 1), ).setIndexNames((0, "APPN-MIB", "appnCosTgRowName"), (0, "APPN-MIB", "appnCosTgRowIndex"))
if mibBuilder.loadTexts: appnCosTgRowEntry.setStatus('current')
appnCosTgRowName = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 4, 1, 5, 4, 1, 1), SnaClassOfServiceName())
if mibBuilder.loadTexts: appnCosTgRowName.setStatus('current')
appnCosTgRowIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 4, 1, 5, 4, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255)))
if mibBuilder.loadTexts: appnCosTgRowIndex.setStatus('current')
appnCosTgRowWgt = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 4, 1, 5, 4, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: appnCosTgRowWgt.setStatus('current')
appnCosTgRowEffCapMin = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 4, 1, 5, 4, 1, 4), AppnTgEffectiveCapacity()).setMaxAccess("readonly")
if mibBuilder.loadTexts: appnCosTgRowEffCapMin.setStatus('current')
appnCosTgRowEffCapMax = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 4, 1, 5, 4, 1, 5), AppnTgEffectiveCapacity()).setMaxAccess("readonly")
if mibBuilder.loadTexts: appnCosTgRowEffCapMax.setStatus('current')
appnCosTgRowConnCostMin = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 4, 1, 5, 4, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: appnCosTgRowConnCostMin.setStatus('current')
appnCosTgRowConnCostMax = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 4, 1, 5, 4, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: appnCosTgRowConnCostMax.setStatus('current')
appnCosTgRowByteCostMin = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 4, 1, 5, 4, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: appnCosTgRowByteCostMin.setStatus('current')
appnCosTgRowByteCostMax = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 4, 1, 5, 4, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: appnCosTgRowByteCostMax.setStatus('current')
appnCosTgRowSecurityMin = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 4, 1, 5, 4, 1, 10), AppnTgSecurity()).setMaxAccess("readonly")
if mibBuilder.loadTexts: appnCosTgRowSecurityMin.setStatus('current')
appnCosTgRowSecurityMax = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 4, 1, 5, 4, 1, 11), AppnTgSecurity()).setMaxAccess("readonly")
if mibBuilder.loadTexts: appnCosTgRowSecurityMax.setStatus('current')
appnCosTgRowDelayMin = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 4, 1, 5, 4, 1, 12), AppnTgDelay()).setMaxAccess("readonly")
if mibBuilder.loadTexts: appnCosTgRowDelayMin.setStatus('current')
appnCosTgRowDelayMax = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 4, 1, 5, 4, 1, 13), AppnTgDelay()).setMaxAccess("readonly")
if mibBuilder.loadTexts: appnCosTgRowDelayMax.setStatus('current')
appnCosTgRowUsr1Min = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 4, 1, 5, 4, 1, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: appnCosTgRowUsr1Min.setStatus('current')
appnCosTgRowUsr1Max = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 4, 1, 5, 4, 1, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: appnCosTgRowUsr1Max.setStatus('current')
appnCosTgRowUsr2Min = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 4, 1, 5, 4, 1, 16), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: appnCosTgRowUsr2Min.setStatus('current')
appnCosTgRowUsr2Max = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 4, 1, 5, 4, 1, 17), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: appnCosTgRowUsr2Max.setStatus('current')
appnCosTgRowUsr3Min = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 4, 1, 5, 4, 1, 18), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: appnCosTgRowUsr3Min.setStatus('current')
appnCosTgRowUsr3Max = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 4, 1, 5, 4, 1, 19), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: appnCosTgRowUsr3Max.setStatus('current')
appnSessIntermediate = MibIdentifier((1, 3, 6, 1, 2, 1, 34, 4, 1, 6))
appnIsInGlobal = MibIdentifier((1, 3, 6, 1, 2, 1, 34, 4, 1, 6, 1))
appnIsInGlobeCtrAdminStatus = MibScalar((1, 3, 6, 1, 2, 1, 34, 4, 1, 6, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("notActive", 1), ("active", 2), ("ready", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: appnIsInGlobeCtrAdminStatus.setStatus('current')
appnIsInGlobeCtrOperStatus = MibScalar((1, 3, 6, 1, 2, 1, 34, 4, 1, 6, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("notActive", 1), ("active", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: appnIsInGlobeCtrOperStatus.setStatus('current')
appnIsInGlobeCtrStatusTime = MibScalar((1, 3, 6, 1, 2, 1, 34, 4, 1, 6, 1, 3), TimeTicks()).setUnits('hundredths of a second').setMaxAccess("readonly")
if mibBuilder.loadTexts: appnIsInGlobeCtrStatusTime.setStatus('current')
appnIsInGlobeRscv = MibScalar((1, 3, 6, 1, 2, 1, 34, 4, 1, 6, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("notActive", 1), ("active", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: appnIsInGlobeRscv.setStatus('current')
appnIsInGlobeRscvTime = MibScalar((1, 3, 6, 1, 2, 1, 34, 4, 1, 6, 1, 5), TimeTicks()).setUnits('hundredths of a second').setMaxAccess("readonly")
if mibBuilder.loadTexts: appnIsInGlobeRscvTime.setStatus('current')
appnIsInGlobeActSess = MibScalar((1, 3, 6, 1, 2, 1, 34, 4, 1, 6, 1, 6), Gauge32()).setUnits('sessions').setMaxAccess("readonly")
if mibBuilder.loadTexts: appnIsInGlobeActSess.setStatus('current')
appnIsInGlobeHprBfActSess = MibScalar((1, 3, 6, 1, 2, 1, 34, 4, 1, 6, 1, 7), Gauge32()).setUnits('sessions').setMaxAccess("readonly")
if mibBuilder.loadTexts: appnIsInGlobeHprBfActSess.setStatus('current')
appnIsInTable = MibTable((1, 3, 6, 1, 2, 1, 34, 4, 1, 6, 2), )
if mibBuilder.loadTexts: appnIsInTable.setStatus('current')
appnIsInEntry = MibTableRow((1, 3, 6, 1, 2, 1, 34, 4, 1, 6, 2, 1), ).setIndexNames((0, "APPN-MIB", "appnIsInFqCpName"), (0, "APPN-MIB", "appnIsInPcid"))
if mibBuilder.loadTexts: appnIsInEntry.setStatus('current')
appnIsInFqCpName = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 4, 1, 6, 2, 1, 1), SnaControlPointName())
if mibBuilder.loadTexts: appnIsInFqCpName.setStatus('current')
appnIsInPcid = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 4, 1, 6, 2, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(8, 8)).setFixedLength(8))
if mibBuilder.loadTexts: appnIsInPcid.setStatus('current')
appnIsInSessState = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 4, 1, 6, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("inactive", 1), ("pendactive", 2), ("active", 3), ("pendinact", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: appnIsInSessState.setStatus('current')
appnIsInPriLuName = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 4, 1, 6, 2, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 17))).setMaxAccess("readonly")
if mibBuilder.loadTexts: appnIsInPriLuName.setStatus('current')
appnIsInSecLuName = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 4, 1, 6, 2, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 17))).setMaxAccess("readonly")
if mibBuilder.loadTexts: appnIsInSecLuName.setStatus('current')
appnIsInModeName = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 4, 1, 6, 2, 1, 6), SnaModeName()).setMaxAccess("readonly")
if mibBuilder.loadTexts: appnIsInModeName.setStatus('current')
appnIsInCosName = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 4, 1, 6, 2, 1, 7), SnaClassOfServiceName()).setMaxAccess("readonly")
if mibBuilder.loadTexts: appnIsInCosName.setStatus('current')
appnIsInTransPriority = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 4, 1, 6, 2, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("low", 1), ("medium", 2), ("high", 3), ("network", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: appnIsInTransPriority.setStatus('current')
appnIsInSessType = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 4, 1, 6, 2, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("unknown", 1), ("lu62", 2), ("lu0thru3", 3), ("lu62dlur", 4), ("lu0thru3dlur", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: appnIsInSessType.setStatus('current')
appnIsInSessUpTime = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 4, 1, 6, 2, 1, 10), TimeTicks()).setUnits('hundredths of a second').setMaxAccess("readonly")
if mibBuilder.loadTexts: appnIsInSessUpTime.setStatus('current')
appnIsInCtrUpTime = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 4, 1, 6, 2, 1, 11), TimeTicks()).setUnits('hundredths of a second').setMaxAccess("readonly")
if mibBuilder.loadTexts: appnIsInCtrUpTime.setStatus('current')
appnIsInP2SFmdPius = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 4, 1, 6, 2, 1, 12), Unsigned32()).setUnits('path information units (PIUs)').setMaxAccess("readonly")
if mibBuilder.loadTexts: appnIsInP2SFmdPius.setStatus('current')
appnIsInS2PFmdPius = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 4, 1, 6, 2, 1, 13), Unsigned32()).setUnits('path information units (PIUs)').setMaxAccess("readonly")
if mibBuilder.loadTexts: appnIsInS2PFmdPius.setStatus('current')
appnIsInP2SNonFmdPius = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 4, 1, 6, 2, 1, 14), Unsigned32()).setUnits('path information units (PIUs)').setMaxAccess("readonly")
if mibBuilder.loadTexts: appnIsInP2SNonFmdPius.setStatus('current')
appnIsInS2PNonFmdPius = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 4, 1, 6, 2, 1, 15), Unsigned32()).setUnits('path information units (PIUs)').setMaxAccess("readonly")
if mibBuilder.loadTexts: appnIsInS2PNonFmdPius.setStatus('current')
appnIsInP2SFmdBytes = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 4, 1, 6, 2, 1, 16), Unsigned32()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: appnIsInP2SFmdBytes.setStatus('current')
appnIsInS2PFmdBytes = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 4, 1, 6, 2, 1, 17), Unsigned32()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: appnIsInS2PFmdBytes.setStatus('current')
appnIsInP2SNonFmdBytes = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 4, 1, 6, 2, 1, 18), Unsigned32()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: appnIsInP2SNonFmdBytes.setStatus('current')
appnIsInS2PNonFmdBytes = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 4, 1, 6, 2, 1, 19), Unsigned32()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: appnIsInS2PNonFmdBytes.setStatus('current')
appnIsInPsAdjCpName = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 4, 1, 6, 2, 1, 20), SnaControlPointName()).setMaxAccess("readonly")
if mibBuilder.loadTexts: appnIsInPsAdjCpName.setStatus('current')
appnIsInPsAdjTgNum = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 4, 1, 6, 2, 1, 21), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 300))).setMaxAccess("readonly")
if mibBuilder.loadTexts: appnIsInPsAdjTgNum.setStatus('current')
appnIsInPsSendMaxBtuSize = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 4, 1, 6, 2, 1, 22), Integer32().subtype(subtypeSpec=ValueRangeConstraint(99, 32767))).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: appnIsInPsSendMaxBtuSize.setStatus('current')
appnIsInPsSendPacingType = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 4, 1, 6, 2, 1, 23), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("fixed", 1), ("adaptive", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: appnIsInPsSendPacingType.setStatus('current')
appnIsInPsSendRpc = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 4, 1, 6, 2, 1, 24), Gauge32()).setUnits('message units (MUs)').setMaxAccess("readonly")
if mibBuilder.loadTexts: appnIsInPsSendRpc.setStatus('current')
appnIsInPsSendNxWndwSize = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 4, 1, 6, 2, 1, 25), Gauge32()).setUnits('message units (MUs)').setMaxAccess("readonly")
if mibBuilder.loadTexts: appnIsInPsSendNxWndwSize.setStatus('current')
appnIsInPsRecvPacingType = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 4, 1, 6, 2, 1, 26), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("fixed", 1), ("adaptive", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: appnIsInPsRecvPacingType.setStatus('current')
appnIsInPsRecvRpc = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 4, 1, 6, 2, 1, 27), Gauge32()).setUnits('message units (MUs)').setMaxAccess("readonly")
if mibBuilder.loadTexts: appnIsInPsRecvRpc.setStatus('current')
appnIsInPsRecvNxWndwSize = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 4, 1, 6, 2, 1, 28), Gauge32()).setUnits('message units (MUs)').setMaxAccess("readonly")
if mibBuilder.loadTexts: appnIsInPsRecvNxWndwSize.setStatus('current')
appnIsInSsAdjCpName = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 4, 1, 6, 2, 1, 29), SnaControlPointName()).setMaxAccess("readonly")
if mibBuilder.loadTexts: appnIsInSsAdjCpName.setStatus('current')
appnIsInSsAdjTgNum = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 4, 1, 6, 2, 1, 30), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 300))).setMaxAccess("readonly")
if mibBuilder.loadTexts: appnIsInSsAdjTgNum.setStatus('current')
appnIsInSsSendMaxBtuSize = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 4, 1, 6, 2, 1, 31), Integer32().subtype(subtypeSpec=ValueRangeConstraint(99, 32767))).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: appnIsInSsSendMaxBtuSize.setStatus('current')
appnIsInSsSendPacingType = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 4, 1, 6, 2, 1, 32), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("fixed", 1), ("adaptive", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: appnIsInSsSendPacingType.setStatus('current')
appnIsInSsSendRpc = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 4, 1, 6, 2, 1, 33), Gauge32()).setUnits('message units (MUs)').setMaxAccess("readonly")
if mibBuilder.loadTexts: appnIsInSsSendRpc.setStatus('current')
appnIsInSsSendNxWndwSize = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 4, 1, 6, 2, 1, 34), Gauge32()).setUnits('message units (MUs)').setMaxAccess("readonly")
if mibBuilder.loadTexts: appnIsInSsSendNxWndwSize.setStatus('current')
appnIsInSsRecvPacingType = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 4, 1, 6, 2, 1, 35), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("fixed", 1), ("adaptive", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: appnIsInSsRecvPacingType.setStatus('current')
appnIsInSsRecvRpc = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 4, 1, 6, 2, 1, 36), Gauge32()).setUnits('message units (MUs)').setMaxAccess("readonly")
if mibBuilder.loadTexts: appnIsInSsRecvRpc.setStatus('current')
appnIsInSsRecvNxWndwSize = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 4, 1, 6, 2, 1, 37), Gauge32()).setUnits('message units (MUs)').setMaxAccess("readonly")
if mibBuilder.loadTexts: appnIsInSsRecvNxWndwSize.setStatus('current')
appnIsInRouteInfo = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 4, 1, 6, 2, 1, 38), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: appnIsInRouteInfo.setStatus('current')
appnIsInRtpNceId = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 4, 1, 6, 2, 1, 39), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: appnIsInRtpNceId.setStatus('current')
appnIsInRtpTcid = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 4, 1, 6, 2, 1, 40), OctetString().subtype(subtypeSpec=ValueSizeConstraint(8, 8)).setFixedLength(8)).setMaxAccess("readonly")
if mibBuilder.loadTexts: appnIsInRtpTcid.setStatus('current')
appnIsRtpTable = MibTable((1, 3, 6, 1, 2, 1, 34, 4, 1, 6, 3), )
if mibBuilder.loadTexts: appnIsRtpTable.setStatus('current')
appnIsRtpEntry = MibTableRow((1, 3, 6, 1, 2, 1, 34, 4, 1, 6, 3, 1), ).setIndexNames((0, "APPN-MIB", "appnIsRtpNceId"), (0, "APPN-MIB", "appnIsRtpTcid"))
if mibBuilder.loadTexts: appnIsRtpEntry.setStatus('current')
appnIsRtpNceId = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 4, 1, 6, 3, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 8)))
if mibBuilder.loadTexts: appnIsRtpNceId.setStatus('current')
appnIsRtpTcid = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 4, 1, 6, 3, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(8, 8)).setFixedLength(8))
if mibBuilder.loadTexts: appnIsRtpTcid.setStatus('current')
appnIsRtpSessions = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 4, 1, 6, 3, 1, 3), Gauge32()).setUnits('sessions').setMaxAccess("readonly")
if mibBuilder.loadTexts: appnIsRtpSessions.setStatus('current')
appnTraps = MibIdentifier((1, 3, 6, 1, 2, 1, 34, 4, 2))
alertTrap = NotificationType((1, 3, 6, 1, 2, 1, 34, 4, 2, 1)).setObjects(("APPN-MIB", "alertIdNumber"), ("APPN-MIB", "affectedObject"))
if mibBuilder.loadTexts: alertTrap.setStatus('current')
alertIdNumber = MibScalar((1, 3, 6, 1, 2, 1, 34, 4, 2, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(4, 4)).setFixedLength(4)).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: alertIdNumber.setStatus('current')
affectedObject = MibScalar((1, 3, 6, 1, 2, 1, 34, 4, 2, 3), VariablePointer()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: affectedObject.setStatus('current')
appnConformance = MibIdentifier((1, 3, 6, 1, 2, 1, 34, 4, 3))
appnCompliances = MibIdentifier((1, 3, 6, 1, 2, 1, 34, 4, 3, 1))
appnGroups = MibIdentifier((1, 3, 6, 1, 2, 1, 34, 4, 3, 2))
appnCompliance2 = ModuleCompliance((1, 3, 6, 1, 2, 1, 34, 4, 3, 1, 3)).setObjects(("APPN-MIB", "appnGeneralConfGroup2"), ("APPN-MIB", "appnPortConfGroup"), ("APPN-MIB", "appnLinkConfGroup2"), ("APPN-MIB", "appnLocalTgConfGroup2"), ("APPN-MIB", "appnDirTableConfGroup2"), ("APPN-MIB", "appnNnUniqueConfGroup"), ("APPN-MIB", "appnEnUniqueConfGroup"), ("APPN-MIB", "appnVrnConfGroup"), ("APPN-MIB", "appnNnTopoConfGroup2"), ("APPN-MIB", "appnLocalEnTopoConfGroup2"), ("APPN-MIB", "appnLocalDirPerfConfGroup"), ("APPN-MIB", "appnCosConfGroup"), ("APPN-MIB", "appnIntSessConfGroup"), ("APPN-MIB", "appnHprBaseConfGroup"), ("APPN-MIB", "appnHprRtpConfGroup"), ("APPN-MIB", "appnHprCtrlFlowsRtpConfGroup"), ("APPN-MIB", "appnHprBfConfGroup"), ("APPN-MIB", "appnTrapConfGroup"), ("APPN-MIB", "appnTrapNotifGroup"), ("APPN-MIB", "appnBrNnConfGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    appnCompliance2 = appnCompliance2.setStatus('current')
appnGeneralConfGroup2 = ObjectGroup((1, 3, 6, 1, 2, 1, 34, 4, 3, 2, 26)).setObjects(("APPN-MIB", "appnNodeCpName"), ("APPN-MIB", "appnNodeId"), ("APPN-MIB", "appnNodeType"), ("APPN-MIB", "appnNodeUpTime"), ("APPN-MIB", "appnNodeParallelTg"), ("APPN-MIB", "appnNodeAdaptiveBindPacing"), ("APPN-MIB", "appnNodeHprSupport"), ("APPN-MIB", "appnNodeCounterDisconTime"), ("APPN-MIB", "appnNodeLsCounterType"), ("APPN-MIB", "appnNodeBrNn"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    appnGeneralConfGroup2 = appnGeneralConfGroup2.setStatus('current')
appnPortConfGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 34, 4, 3, 2, 2)).setObjects(("APPN-MIB", "appnPortCommand"), ("APPN-MIB", "appnPortOperState"), ("APPN-MIB", "appnPortDlcType"), ("APPN-MIB", "appnPortPortType"), ("APPN-MIB", "appnPortSIMRIM"), ("APPN-MIB", "appnPortLsRole"), ("APPN-MIB", "appnPortNegotLs"), ("APPN-MIB", "appnPortDynamicLinkSupport"), ("APPN-MIB", "appnPortMaxRcvBtuSize"), ("APPN-MIB", "appnPortMaxIframeWindow"), ("APPN-MIB", "appnPortDefLsGoodXids"), ("APPN-MIB", "appnPortDefLsBadXids"), ("APPN-MIB", "appnPortDynLsGoodXids"), ("APPN-MIB", "appnPortDynLsBadXids"), ("APPN-MIB", "appnPortSpecific"), ("APPN-MIB", "appnPortDlcLocalAddr"), ("APPN-MIB", "appnPortCounterDisconTime"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    appnPortConfGroup = appnPortConfGroup.setStatus('current')
appnLinkConfGroup2 = ObjectGroup((1, 3, 6, 1, 2, 1, 34, 4, 3, 2, 27)).setObjects(("APPN-MIB", "appnLsCommand"), ("APPN-MIB", "appnLsOperState"), ("APPN-MIB", "appnLsPortName"), ("APPN-MIB", "appnLsDlcType"), ("APPN-MIB", "appnLsDynamic"), ("APPN-MIB", "appnLsAdjCpName"), ("APPN-MIB", "appnLsAdjNodeType"), ("APPN-MIB", "appnLsTgNum"), ("APPN-MIB", "appnLsLimResource"), ("APPN-MIB", "appnLsActOnDemand"), ("APPN-MIB", "appnLsMigration"), ("APPN-MIB", "appnLsPartnerNodeId"), ("APPN-MIB", "appnLsCpCpSessionSupport"), ("APPN-MIB", "appnLsMaxSendBtuSize"), ("APPN-MIB", "appnLsInXidBytes"), ("APPN-MIB", "appnLsInMsgBytes"), ("APPN-MIB", "appnLsInXidFrames"), ("APPN-MIB", "appnLsInMsgFrames"), ("APPN-MIB", "appnLsOutXidBytes"), ("APPN-MIB", "appnLsOutMsgBytes"), ("APPN-MIB", "appnLsOutXidFrames"), ("APPN-MIB", "appnLsOutMsgFrames"), ("APPN-MIB", "appnLsEchoRsps"), ("APPN-MIB", "appnLsCurrentDelay"), ("APPN-MIB", "appnLsMaxDelay"), ("APPN-MIB", "appnLsMinDelay"), ("APPN-MIB", "appnLsMaxDelayTime"), ("APPN-MIB", "appnLsGoodXids"), ("APPN-MIB", "appnLsBadXids"), ("APPN-MIB", "appnLsSpecific"), ("APPN-MIB", "appnLsActiveTime"), ("APPN-MIB", "appnLsCurrentStateTime"), ("APPN-MIB", "appnLsHprSup"), ("APPN-MIB", "appnLsLocalAddr"), ("APPN-MIB", "appnLsRemoteAddr"), ("APPN-MIB", "appnLsRemoteLsName"), ("APPN-MIB", "appnLsStatusTime"), ("APPN-MIB", "appnLsStatusLsName"), ("APPN-MIB", "appnLsStatusCpName"), ("APPN-MIB", "appnLsStatusPartnerId"), ("APPN-MIB", "appnLsStatusTgNum"), ("APPN-MIB", "appnLsStatusGeneralSense"), ("APPN-MIB", "appnLsStatusRetry"), ("APPN-MIB", "appnLsStatusEndSense"), ("APPN-MIB", "appnLsStatusXidLocalSense"), ("APPN-MIB", "appnLsStatusXidRemoteSense"), ("APPN-MIB", "appnLsStatusXidByteInError"), ("APPN-MIB", "appnLsStatusXidBitInError"), ("APPN-MIB", "appnLsStatusDlcType"), ("APPN-MIB", "appnLsStatusLocalAddr"), ("APPN-MIB", "appnLsStatusRemoteAddr"), ("APPN-MIB", "appnLsCounterDisconTime"), ("APPN-MIB", "appnLsMltgMember"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    appnLinkConfGroup2 = appnLinkConfGroup2.setStatus('current')
appnLocalTgConfGroup2 = ObjectGroup((1, 3, 6, 1, 2, 1, 34, 4, 3, 2, 28)).setObjects(("APPN-MIB", "appnLocalTgDestVirtual"), ("APPN-MIB", "appnLocalTgDlcData"), ("APPN-MIB", "appnLocalTgPortName"), ("APPN-MIB", "appnLocalTgQuiescing"), ("APPN-MIB", "appnLocalTgOperational"), ("APPN-MIB", "appnLocalTgCpCpSession"), ("APPN-MIB", "appnLocalTgEffCap"), ("APPN-MIB", "appnLocalTgConnCost"), ("APPN-MIB", "appnLocalTgByteCost"), ("APPN-MIB", "appnLocalTgSecurity"), ("APPN-MIB", "appnLocalTgDelay"), ("APPN-MIB", "appnLocalTgUsr1"), ("APPN-MIB", "appnLocalTgUsr2"), ("APPN-MIB", "appnLocalTgUsr3"), ("APPN-MIB", "appnLocalTgHprSup"), ("APPN-MIB", "appnLocalTgIntersubnet"), ("APPN-MIB", "appnLocalTgMltgLinkType"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    appnLocalTgConfGroup2 = appnLocalTgConfGroup2.setStatus('current')
appnDirTableConfGroup2 = ObjectGroup((1, 3, 6, 1, 2, 1, 34, 4, 3, 2, 29)).setObjects(("APPN-MIB", "appnDirNnServerName"), ("APPN-MIB", "appnDirLuOwnerName"), ("APPN-MIB", "appnDirLuLocation"), ("APPN-MIB", "appnDirType"), ("APPN-MIB", "appnDirApparentLuOwnerName"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    appnDirTableConfGroup2 = appnDirTableConfGroup2.setStatus('current')
appnNnUniqueConfGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 34, 4, 3, 2, 6)).setObjects(("APPN-MIB", "appnNodeNnCentralDirectory"), ("APPN-MIB", "appnNodeNnTreeCache"), ("APPN-MIB", "appnNodeNnRouteAddResist"), ("APPN-MIB", "appnNodeNnIsr"), ("APPN-MIB", "appnNodeNnFrsn"), ("APPN-MIB", "appnNodeNnPeriBorderSup"), ("APPN-MIB", "appnNodeNnInterchangeSup"), ("APPN-MIB", "appnNodeNnExteBorderSup"), ("APPN-MIB", "appnNodeNnSafeStoreFreq"), ("APPN-MIB", "appnNodeNnRsn"), ("APPN-MIB", "appnNodeNnCongested"), ("APPN-MIB", "appnNodeNnIsrDepleted"), ("APPN-MIB", "appnNodeNnQuiescing"), ("APPN-MIB", "appnNodeNnGateway"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    appnNnUniqueConfGroup = appnNnUniqueConfGroup.setStatus('current')
appnEnUniqueConfGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 34, 4, 3, 2, 7)).setObjects(("APPN-MIB", "appnNodeEnModeCosMap"), ("APPN-MIB", "appnNodeEnNnServer"), ("APPN-MIB", "appnNodeEnLuSearch"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    appnEnUniqueConfGroup = appnEnUniqueConfGroup.setStatus('current')
appnVrnConfGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 34, 4, 3, 2, 8)).setObjects(("APPN-MIB", "appnVrnPortName"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    appnVrnConfGroup = appnVrnConfGroup.setStatus('current')
appnNnTopoConfGroup2 = ObjectGroup((1, 3, 6, 1, 2, 1, 34, 4, 3, 2, 30)).setObjects(("APPN-MIB", "appnNnTopoMaxNodes"), ("APPN-MIB", "appnNnTopoCurNumNodes"), ("APPN-MIB", "appnNnTopoNodePurges"), ("APPN-MIB", "appnNnTopoTgPurges"), ("APPN-MIB", "appnNnTopoTotalTduWars"), ("APPN-MIB", "appnNnNodeFREntryTimeLeft"), ("APPN-MIB", "appnNnNodeFRType"), ("APPN-MIB", "appnNnNodeFRRsn"), ("APPN-MIB", "appnNnNodeFRRouteAddResist"), ("APPN-MIB", "appnNnNodeFRCongested"), ("APPN-MIB", "appnNnNodeFRIsrDepleted"), ("APPN-MIB", "appnNnNodeFRQuiescing"), ("APPN-MIB", "appnNnNodeFRGateway"), ("APPN-MIB", "appnNnNodeFRCentralDirectory"), ("APPN-MIB", "appnNnNodeFRIsr"), ("APPN-MIB", "appnNnNodeFRGarbageCollect"), ("APPN-MIB", "appnNnNodeFRHprSupport"), ("APPN-MIB", "appnNnNodeFRPeriBorderSup"), ("APPN-MIB", "appnNnNodeFRInterchangeSup"), ("APPN-MIB", "appnNnNodeFRExteBorderSup"), ("APPN-MIB", "appnNnNodeFRBranchAwareness"), ("APPN-MIB", "appnNnTgFREntryTimeLeft"), ("APPN-MIB", "appnNnTgFRDestVirtual"), ("APPN-MIB", "appnNnTgFRDlcData"), ("APPN-MIB", "appnNnTgFRRsn"), ("APPN-MIB", "appnNnTgFROperational"), ("APPN-MIB", "appnNnTgFRQuiescing"), ("APPN-MIB", "appnNnTgFRCpCpSession"), ("APPN-MIB", "appnNnTgFREffCap"), ("APPN-MIB", "appnNnTgFRConnCost"), ("APPN-MIB", "appnNnTgFRByteCost"), ("APPN-MIB", "appnNnTgFRSecurity"), ("APPN-MIB", "appnNnTgFRDelay"), ("APPN-MIB", "appnNnTgFRUsr1"), ("APPN-MIB", "appnNnTgFRUsr2"), ("APPN-MIB", "appnNnTgFRUsr3"), ("APPN-MIB", "appnNnTgFRGarbageCollect"), ("APPN-MIB", "appnNnTgFRSubareaNum"), ("APPN-MIB", "appnNnTgFRHprSup"), ("APPN-MIB", "appnNnTgFRDestHprTrans"), ("APPN-MIB", "appnNnTgFRTypeIndicator"), ("APPN-MIB", "appnNnTgFRIntersubnet"), ("APPN-MIB", "appnNnTgFRMltgLinkType"), ("APPN-MIB", "appnNnTgFRBranchTg"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    appnNnTopoConfGroup2 = appnNnTopoConfGroup2.setStatus('current')
appnLocalEnTopoConfGroup2 = ObjectGroup((1, 3, 6, 1, 2, 1, 34, 4, 3, 2, 31)).setObjects(("APPN-MIB", "appnLocalEnTgEntryTimeLeft"), ("APPN-MIB", "appnLocalEnTgDestVirtual"), ("APPN-MIB", "appnLocalEnTgDlcData"), ("APPN-MIB", "appnLocalEnTgOperational"), ("APPN-MIB", "appnLocalEnTgCpCpSession"), ("APPN-MIB", "appnLocalEnTgEffCap"), ("APPN-MIB", "appnLocalEnTgConnCost"), ("APPN-MIB", "appnLocalEnTgByteCost"), ("APPN-MIB", "appnLocalEnTgSecurity"), ("APPN-MIB", "appnLocalEnTgDelay"), ("APPN-MIB", "appnLocalEnTgUsr1"), ("APPN-MIB", "appnLocalEnTgUsr2"), ("APPN-MIB", "appnLocalEnTgUsr3"), ("APPN-MIB", "appnLocalEnTgMltgLinkType"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    appnLocalEnTopoConfGroup2 = appnLocalEnTopoConfGroup2.setStatus('current')
appnLocalDirPerfConfGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 34, 4, 3, 2, 11)).setObjects(("APPN-MIB", "appnDirMaxCaches"), ("APPN-MIB", "appnDirCurCaches"), ("APPN-MIB", "appnDirCurHomeEntries"), ("APPN-MIB", "appnDirRegEntries"), ("APPN-MIB", "appnDirInLocates"), ("APPN-MIB", "appnDirInBcastLocates"), ("APPN-MIB", "appnDirOutLocates"), ("APPN-MIB", "appnDirOutBcastLocates"), ("APPN-MIB", "appnDirNotFoundLocates"), ("APPN-MIB", "appnDirNotFoundBcastLocates"), ("APPN-MIB", "appnDirLocateOutstands"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    appnLocalDirPerfConfGroup = appnLocalDirPerfConfGroup.setStatus('current')
appnCosConfGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 34, 4, 3, 2, 12)).setObjects(("APPN-MIB", "appnCosModeCosName"), ("APPN-MIB", "appnCosTransPriority"), ("APPN-MIB", "appnCosNodeRowWgt"), ("APPN-MIB", "appnCosNodeRowResistMin"), ("APPN-MIB", "appnCosNodeRowResistMax"), ("APPN-MIB", "appnCosNodeRowMinCongestAllow"), ("APPN-MIB", "appnCosNodeRowMaxCongestAllow"), ("APPN-MIB", "appnCosTgRowWgt"), ("APPN-MIB", "appnCosTgRowEffCapMin"), ("APPN-MIB", "appnCosTgRowEffCapMax"), ("APPN-MIB", "appnCosTgRowConnCostMin"), ("APPN-MIB", "appnCosTgRowConnCostMax"), ("APPN-MIB", "appnCosTgRowByteCostMin"), ("APPN-MIB", "appnCosTgRowByteCostMax"), ("APPN-MIB", "appnCosTgRowSecurityMin"), ("APPN-MIB", "appnCosTgRowSecurityMax"), ("APPN-MIB", "appnCosTgRowDelayMin"), ("APPN-MIB", "appnCosTgRowDelayMax"), ("APPN-MIB", "appnCosTgRowUsr1Min"), ("APPN-MIB", "appnCosTgRowUsr1Max"), ("APPN-MIB", "appnCosTgRowUsr2Min"), ("APPN-MIB", "appnCosTgRowUsr2Max"), ("APPN-MIB", "appnCosTgRowUsr3Min"), ("APPN-MIB", "appnCosTgRowUsr3Max"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    appnCosConfGroup = appnCosConfGroup.setStatus('current')
appnIntSessConfGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 34, 4, 3, 2, 13)).setObjects(("APPN-MIB", "appnIsInGlobeCtrAdminStatus"), ("APPN-MIB", "appnIsInGlobeCtrOperStatus"), ("APPN-MIB", "appnIsInGlobeCtrStatusTime"), ("APPN-MIB", "appnIsInGlobeRscv"), ("APPN-MIB", "appnIsInGlobeRscvTime"), ("APPN-MIB", "appnIsInGlobeActSess"), ("APPN-MIB", "appnIsInSessState"), ("APPN-MIB", "appnIsInPriLuName"), ("APPN-MIB", "appnIsInSecLuName"), ("APPN-MIB", "appnIsInModeName"), ("APPN-MIB", "appnIsInCosName"), ("APPN-MIB", "appnIsInTransPriority"), ("APPN-MIB", "appnIsInSessType"), ("APPN-MIB", "appnIsInSessUpTime"), ("APPN-MIB", "appnIsInCtrUpTime"), ("APPN-MIB", "appnIsInP2SFmdPius"), ("APPN-MIB", "appnIsInS2PFmdPius"), ("APPN-MIB", "appnIsInP2SNonFmdPius"), ("APPN-MIB", "appnIsInS2PNonFmdPius"), ("APPN-MIB", "appnIsInP2SFmdBytes"), ("APPN-MIB", "appnIsInS2PFmdBytes"), ("APPN-MIB", "appnIsInP2SNonFmdBytes"), ("APPN-MIB", "appnIsInS2PNonFmdBytes"), ("APPN-MIB", "appnIsInPsAdjCpName"), ("APPN-MIB", "appnIsInPsAdjTgNum"), ("APPN-MIB", "appnIsInPsSendMaxBtuSize"), ("APPN-MIB", "appnIsInPsSendPacingType"), ("APPN-MIB", "appnIsInPsSendRpc"), ("APPN-MIB", "appnIsInPsSendNxWndwSize"), ("APPN-MIB", "appnIsInPsRecvPacingType"), ("APPN-MIB", "appnIsInPsRecvRpc"), ("APPN-MIB", "appnIsInPsRecvNxWndwSize"), ("APPN-MIB", "appnIsInSsAdjCpName"), ("APPN-MIB", "appnIsInSsAdjTgNum"), ("APPN-MIB", "appnIsInSsSendMaxBtuSize"), ("APPN-MIB", "appnIsInSsSendPacingType"), ("APPN-MIB", "appnIsInSsSendRpc"), ("APPN-MIB", "appnIsInSsSendNxWndwSize"), ("APPN-MIB", "appnIsInSsRecvPacingType"), ("APPN-MIB", "appnIsInSsRecvRpc"), ("APPN-MIB", "appnIsInSsRecvNxWndwSize"), ("APPN-MIB", "appnIsInRouteInfo"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    appnIntSessConfGroup = appnIntSessConfGroup.setStatus('current')
appnHprBaseConfGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 34, 4, 3, 2, 14)).setObjects(("APPN-MIB", "appnNodeHprIntRteSetups"), ("APPN-MIB", "appnNodeHprIntRteRejects"), ("APPN-MIB", "appnLsErrRecoSup"), ("APPN-MIB", "appnLsForAnrLabel"), ("APPN-MIB", "appnLsRevAnrLabel"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    appnHprBaseConfGroup = appnHprBaseConfGroup.setStatus('current')
appnHprRtpConfGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 34, 4, 3, 2, 15)).setObjects(("APPN-MIB", "appnNodeMaxSessPerRtpConn"), ("APPN-MIB", "appnNodeHprOrgRteSetups"), ("APPN-MIB", "appnNodeHprOrgRteRejects"), ("APPN-MIB", "appnNodeHprEndRteSetups"), ("APPN-MIB", "appnNodeHprEndRteRejects"), ("APPN-MIB", "appnLsBfNceId"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    appnHprRtpConfGroup = appnHprRtpConfGroup.setStatus('current')
appnHprCtrlFlowsRtpConfGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 34, 4, 3, 2, 16)).setObjects(("APPN-MIB", "appnLsCpCpNceId"), ("APPN-MIB", "appnLsRouteNceId"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    appnHprCtrlFlowsRtpConfGroup = appnHprCtrlFlowsRtpConfGroup.setStatus('current')
appnHprBfConfGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 34, 4, 3, 2, 17)).setObjects(("APPN-MIB", "appnIsInGlobeHprBfActSess"), ("APPN-MIB", "appnIsInRtpNceId"), ("APPN-MIB", "appnIsInRtpTcid"), ("APPN-MIB", "appnIsRtpSessions"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    appnHprBfConfGroup = appnHprBfConfGroup.setStatus('current')
appnTrapConfGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 34, 4, 3, 2, 18)).setObjects(("APPN-MIB", "alertIdNumber"), ("APPN-MIB", "affectedObject"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    appnTrapConfGroup = appnTrapConfGroup.setStatus('current')
appnTrapNotifGroup = NotificationGroup((1, 3, 6, 1, 2, 1, 34, 4, 3, 2, 19)).setObjects(("APPN-MIB", "alertTrap"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    appnTrapNotifGroup = appnTrapNotifGroup.setStatus('current')
appnBrNnConfGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 34, 4, 3, 2, 20)).setObjects(("APPN-MIB", "appnNodeEnNnServer"), ("APPN-MIB", "appnNodeEnLuSearch"), ("APPN-MIB", "appnLocalTgBranchLinkType"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    appnBrNnConfGroup = appnBrNnConfGroup.setStatus('current')
appnNodeMibVersion = MibScalar((1, 3, 6, 1, 2, 1, 34, 4, 1, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(11, 11)).setFixedLength(11)).setMaxAccess("readonly")
if mibBuilder.loadTexts: appnNodeMibVersion.setStatus('deprecated')
appnCompliance = ModuleCompliance((1, 3, 6, 1, 2, 1, 34, 4, 3, 1, 1)).setObjects(("APPN-MIB", "appnGeneralConfGroup"), ("APPN-MIB", "appnPortConfGroup"), ("APPN-MIB", "appnLinkConfGroup"), ("APPN-MIB", "appnLocalTgConfGroup"), ("APPN-MIB", "appnDirTableConfGroup"), ("APPN-MIB", "appnNnUniqueConfGroup"), ("APPN-MIB", "appnEnUniqueConfGroup"), ("APPN-MIB", "appnVrnConfGroup"), ("APPN-MIB", "appnNnTopoConfGroup"), ("APPN-MIB", "appnLocalEnTopoConfGroup"), ("APPN-MIB", "appnLocalDirPerfConfGroup"), ("APPN-MIB", "appnCosConfGroup"), ("APPN-MIB", "appnIntSessConfGroup"), ("APPN-MIB", "appnHprBaseConfGroup"), ("APPN-MIB", "appnHprRtpConfGroup"), ("APPN-MIB", "appnHprCtrlFlowsRtpConfGroup"), ("APPN-MIB", "appnHprBfConfGroup"), ("APPN-MIB", "appnTrapConfGroup"), ("APPN-MIB", "appnTrapNotifGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    appnCompliance = appnCompliance.setStatus('deprecated')
appnGeneralConfGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 34, 4, 3, 2, 1)).setObjects(("APPN-MIB", "appnNodeCpName"), ("APPN-MIB", "appnNodeMibVersion"), ("APPN-MIB", "appnNodeId"), ("APPN-MIB", "appnNodeType"), ("APPN-MIB", "appnNodeUpTime"), ("APPN-MIB", "appnNodeParallelTg"), ("APPN-MIB", "appnNodeAdaptiveBindPacing"), ("APPN-MIB", "appnNodeHprSupport"), ("APPN-MIB", "appnNodeCounterDisconTime"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    appnGeneralConfGroup = appnGeneralConfGroup.setStatus('deprecated')
appnLinkConfGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 34, 4, 3, 2, 3)).setObjects(("APPN-MIB", "appnLsCommand"), ("APPN-MIB", "appnLsOperState"), ("APPN-MIB", "appnLsPortName"), ("APPN-MIB", "appnLsDlcType"), ("APPN-MIB", "appnLsDynamic"), ("APPN-MIB", "appnLsAdjCpName"), ("APPN-MIB", "appnLsAdjNodeType"), ("APPN-MIB", "appnLsTgNum"), ("APPN-MIB", "appnLsLimResource"), ("APPN-MIB", "appnLsActOnDemand"), ("APPN-MIB", "appnLsMigration"), ("APPN-MIB", "appnLsPartnerNodeId"), ("APPN-MIB", "appnLsCpCpSessionSupport"), ("APPN-MIB", "appnLsMaxSendBtuSize"), ("APPN-MIB", "appnLsInXidBytes"), ("APPN-MIB", "appnLsInMsgBytes"), ("APPN-MIB", "appnLsInXidFrames"), ("APPN-MIB", "appnLsInMsgFrames"), ("APPN-MIB", "appnLsOutXidBytes"), ("APPN-MIB", "appnLsOutMsgBytes"), ("APPN-MIB", "appnLsOutXidFrames"), ("APPN-MIB", "appnLsOutMsgFrames"), ("APPN-MIB", "appnLsEchoRsps"), ("APPN-MIB", "appnLsCurrentDelay"), ("APPN-MIB", "appnLsMaxDelay"), ("APPN-MIB", "appnLsMinDelay"), ("APPN-MIB", "appnLsMaxDelayTime"), ("APPN-MIB", "appnLsGoodXids"), ("APPN-MIB", "appnLsBadXids"), ("APPN-MIB", "appnLsSpecific"), ("APPN-MIB", "appnLsActiveTime"), ("APPN-MIB", "appnLsCurrentStateTime"), ("APPN-MIB", "appnLsHprSup"), ("APPN-MIB", "appnLsLocalAddr"), ("APPN-MIB", "appnLsRemoteAddr"), ("APPN-MIB", "appnLsRemoteLsName"), ("APPN-MIB", "appnLsStatusTime"), ("APPN-MIB", "appnLsStatusLsName"), ("APPN-MIB", "appnLsStatusCpName"), ("APPN-MIB", "appnLsStatusPartnerId"), ("APPN-MIB", "appnLsStatusTgNum"), ("APPN-MIB", "appnLsStatusGeneralSense"), ("APPN-MIB", "appnLsStatusRetry"), ("APPN-MIB", "appnLsStatusEndSense"), ("APPN-MIB", "appnLsStatusXidLocalSense"), ("APPN-MIB", "appnLsStatusXidRemoteSense"), ("APPN-MIB", "appnLsStatusXidByteInError"), ("APPN-MIB", "appnLsStatusXidBitInError"), ("APPN-MIB", "appnLsStatusDlcType"), ("APPN-MIB", "appnLsStatusLocalAddr"), ("APPN-MIB", "appnLsStatusRemoteAddr"), ("APPN-MIB", "appnLsCounterDisconTime"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    appnLinkConfGroup = appnLinkConfGroup.setStatus('deprecated')
appnLocalTgConfGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 34, 4, 3, 2, 4)).setObjects(("APPN-MIB", "appnLocalTgDestVirtual"), ("APPN-MIB", "appnLocalTgDlcData"), ("APPN-MIB", "appnLocalTgPortName"), ("APPN-MIB", "appnLocalTgQuiescing"), ("APPN-MIB", "appnLocalTgOperational"), ("APPN-MIB", "appnLocalTgCpCpSession"), ("APPN-MIB", "appnLocalTgEffCap"), ("APPN-MIB", "appnLocalTgConnCost"), ("APPN-MIB", "appnLocalTgByteCost"), ("APPN-MIB", "appnLocalTgSecurity"), ("APPN-MIB", "appnLocalTgDelay"), ("APPN-MIB", "appnLocalTgUsr1"), ("APPN-MIB", "appnLocalTgUsr2"), ("APPN-MIB", "appnLocalTgUsr3"), ("APPN-MIB", "appnLocalTgHprSup"), ("APPN-MIB", "appnLocalTgIntersubnet"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    appnLocalTgConfGroup = appnLocalTgConfGroup.setStatus('deprecated')
appnDirTableConfGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 34, 4, 3, 2, 5)).setObjects(("APPN-MIB", "appnDirNnServerName"), ("APPN-MIB", "appnDirLuOwnerName"), ("APPN-MIB", "appnDirLuLocation"), ("APPN-MIB", "appnDirType"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    appnDirTableConfGroup = appnDirTableConfGroup.setStatus('deprecated')
appnNnTopoConfGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 34, 4, 3, 2, 9)).setObjects(("APPN-MIB", "appnNnTopoMaxNodes"), ("APPN-MIB", "appnNnTopoCurNumNodes"), ("APPN-MIB", "appnNnTopoNodePurges"), ("APPN-MIB", "appnNnTopoTgPurges"), ("APPN-MIB", "appnNnTopoTotalTduWars"), ("APPN-MIB", "appnNnNodeFREntryTimeLeft"), ("APPN-MIB", "appnNnNodeFRType"), ("APPN-MIB", "appnNnNodeFRRsn"), ("APPN-MIB", "appnNnNodeFRRouteAddResist"), ("APPN-MIB", "appnNnNodeFRCongested"), ("APPN-MIB", "appnNnNodeFRIsrDepleted"), ("APPN-MIB", "appnNnNodeFRQuiescing"), ("APPN-MIB", "appnNnNodeFRGateway"), ("APPN-MIB", "appnNnNodeFRCentralDirectory"), ("APPN-MIB", "appnNnNodeFRIsr"), ("APPN-MIB", "appnNnNodeFRGarbageCollect"), ("APPN-MIB", "appnNnNodeFRHprSupport"), ("APPN-MIB", "appnNnNodeFRPeriBorderSup"), ("APPN-MIB", "appnNnNodeFRInterchangeSup"), ("APPN-MIB", "appnNnNodeFRExteBorderSup"), ("APPN-MIB", "appnNnTgFREntryTimeLeft"), ("APPN-MIB", "appnNnTgFRDestVirtual"), ("APPN-MIB", "appnNnTgFRDlcData"), ("APPN-MIB", "appnNnTgFRRsn"), ("APPN-MIB", "appnNnTgFROperational"), ("APPN-MIB", "appnNnTgFRQuiescing"), ("APPN-MIB", "appnNnTgFRCpCpSession"), ("APPN-MIB", "appnNnTgFREffCap"), ("APPN-MIB", "appnNnTgFRConnCost"), ("APPN-MIB", "appnNnTgFRByteCost"), ("APPN-MIB", "appnNnTgFRSecurity"), ("APPN-MIB", "appnNnTgFRDelay"), ("APPN-MIB", "appnNnTgFRUsr1"), ("APPN-MIB", "appnNnTgFRUsr2"), ("APPN-MIB", "appnNnTgFRUsr3"), ("APPN-MIB", "appnNnTgFRGarbageCollect"), ("APPN-MIB", "appnNnTgFRSubareaNum"), ("APPN-MIB", "appnNnTgFRHprSup"), ("APPN-MIB", "appnNnTgFRDestHprTrans"), ("APPN-MIB", "appnNnTgFRTypeIndicator"), ("APPN-MIB", "appnNnTgFRIntersubnet"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    appnNnTopoConfGroup = appnNnTopoConfGroup.setStatus('deprecated')
appnLocalEnTopoConfGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 34, 4, 3, 2, 10)).setObjects(("APPN-MIB", "appnLocalEnTgEntryTimeLeft"), ("APPN-MIB", "appnLocalEnTgDestVirtual"), ("APPN-MIB", "appnLocalEnTgDlcData"), ("APPN-MIB", "appnLocalEnTgOperational"), ("APPN-MIB", "appnLocalEnTgCpCpSession"), ("APPN-MIB", "appnLocalEnTgEffCap"), ("APPN-MIB", "appnLocalEnTgConnCost"), ("APPN-MIB", "appnLocalEnTgByteCost"), ("APPN-MIB", "appnLocalEnTgSecurity"), ("APPN-MIB", "appnLocalEnTgDelay"), ("APPN-MIB", "appnLocalEnTgUsr1"), ("APPN-MIB", "appnLocalEnTgUsr2"), ("APPN-MIB", "appnLocalEnTgUsr3"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    appnLocalEnTopoConfGroup = appnLocalEnTopoConfGroup.setStatus('deprecated')
mibBuilder.exportSymbols("APPN-MIB", appnPortNegotLs=appnPortNegotLs, appnNnNodeFRQuiescing=appnNnNodeFRQuiescing, appnNodeNnExteBorderSup=appnNodeNnExteBorderSup, appnNodeHprSupport=appnNodeHprSupport, appnLsBadXids=appnLsBadXids, appnLsMinDelay=appnLsMinDelay, appnNnNodeFRHprSupport=appnNnNodeFRHprSupport, appnCosTgRowUsr3Min=appnCosTgRowUsr3Min, appnDirNotFoundBcastLocates=appnDirNotFoundBcastLocates, appnIsInSsSendMaxBtuSize=appnIsInSsSendMaxBtuSize, appnNnTgTopologyFREntry=appnNnTgTopologyFREntry, appnNnTgFRConnCost=appnNnTgFRConnCost, appnCosNameTable=appnCosNameTable, appnDirApparentLuOwnerName=appnDirApparentLuOwnerName, appnIsInTransPriority=appnIsInTransPriority, appnNnNodeFRExteBorderSup=appnNnNodeFRExteBorderSup, appnLocalTgEntry=appnLocalTgEntry, appnLinkConfGroup2=appnLinkConfGroup2, appnPortDefLsBadXids=appnPortDefLsBadXids, appnIsInSsAdjTgNum=appnIsInSsAdjTgNum, appnLsOperState=appnLsOperState, appnDirPerf=appnDirPerf, appnIsInPriLuName=appnIsInPriLuName, appnNnNodeFRPeriBorderSup=appnNnNodeFRPeriBorderSup, appnDirEntry=appnDirEntry, appnLocalTgByteCost=appnLocalTgByteCost, appnNnTopoTotalTduWars=appnNnTopoTotalTduWars, appnIsInPsAdjCpName=appnIsInPsAdjCpName, AppnPortCounter=AppnPortCounter, appnVrnInfo=appnVrnInfo, appnLsLimResource=appnLsLimResource, appnCosModeEntry=appnCosModeEntry, appnIsInGlobeRscv=appnIsInGlobeRscv, appnGeneralConfGroup2=appnGeneralConfGroup2, appnDirCurHomeEntries=appnDirCurHomeEntries, appnIsInPsSendPacingType=appnIsInPsSendPacingType, appnLocalEnTgMltgLinkType=appnLocalEnTgMltgLinkType, appnLocalTgPortName=appnLocalTgPortName, appnCosTgRowByteCostMin=appnCosTgRowByteCostMin, appnNnTgFRQuiescing=appnNnTgFRQuiescing, appnCosNodeRowResistMin=appnCosNodeRowResistMin, appnNnTgFRCpCpSession=appnNnTgFRCpCpSession, appnCosTgRowEffCapMin=appnCosTgRowEffCapMin, AppnTgEffectiveCapacity=AppnTgEffectiveCapacity, SnaModeName=SnaModeName, appnNodeMaxSessPerRtpConn=appnNodeMaxSessPerRtpConn, appnNnTopoConfGroup=appnNnTopoConfGroup, appnIsInSsRecvRpc=appnIsInSsRecvRpc, appnLsStatusLocalAddr=appnLsStatusLocalAddr, appnIsInP2SFmdPius=appnIsInP2SFmdPius, appnDirCurCaches=appnDirCurCaches, appnLsStatusXidRemoteSense=appnLsStatusXidRemoteSense, appnNn=appnNn, appnNnTopoMaxNodes=appnNnTopoMaxNodes, appnNnNodeFRName=appnNnNodeFRName, appnNodeNnRouteAddResist=appnNodeNnRouteAddResist, appnLocalTgDest=appnLocalTgDest, appnLinkStationInformation=appnLinkStationInformation, appnIsInTable=appnIsInTable, appnNodeHprIntRteRejects=appnNodeHprIntRteRejects, appnNnTopology=appnNnTopology, appnNnTopologyFRTable=appnNnTopologyFRTable, appnCosTgRowConnCostMin=appnCosTgRowConnCostMin, appnPortMaxRcvBtuSize=appnPortMaxRcvBtuSize, appnTrapNotifGroup=appnTrapNotifGroup, appnNnNodeFRGateway=appnNnNodeFRGateway, appnLsRevAnrLabel=appnLsRevAnrLabel, appnLocalEnTgNum=appnLocalEnTgNum, appnNnTgFRHprSup=appnNnTgFRHprSup, appnNodeNnPeriBorderSup=appnNodeNnPeriBorderSup, appnLsStatusLsName=appnLsStatusLsName, AppnNodeCounter=AppnNodeCounter, appnNodeAdaptiveBindPacing=appnNodeAdaptiveBindPacing, appnPortSpecific=appnPortSpecific, appnLocalEnTgCpCpSession=appnLocalEnTgCpCpSession, appnCompliances=appnCompliances, appnDirNotFoundLocates=appnDirNotFoundLocates, appnIsInSsSendPacingType=appnIsInSsSendPacingType, appnLsLocalAddr=appnLsLocalAddr, appnNnTgFRDest=appnNnTgFRDest, appnLsStatusTable=appnLsStatusTable, appnCosNodeRowWgt=appnCosNodeRowWgt, appnLsStatusCpName=appnLsStatusCpName, appnIsInPsRecvPacingType=appnIsInPsRecvPacingType, appnNodeNnGateway=appnNodeNnGateway, appnVrnPortName=appnVrnPortName, appnLocalEnTgUsr2=appnLocalEnTgUsr2, appnLsTable=appnLsTable, appnNnTgFRNum=appnNnTgFRNum, appnIsInSessUpTime=appnIsInSessUpTime, appnLsStatusTime=appnLsStatusTime, appnDirLocateOutstands=appnDirLocateOutstands, appnNodeNnIsrDepleted=appnNodeNnIsrDepleted, appnLocalTgDestVirtual=appnLocalTgDestVirtual, appnLsStatusEntry=appnLsStatusEntry, appnNodeNnCentralDirectory=appnNodeNnCentralDirectory, appnCosNodeRowTable=appnCosNodeRowTable, appnNnTopologyFREntry=appnNnTopologyFREntry, appnCosTgRowSecurityMin=appnCosTgRowSecurityMin, appnDirTable=appnDirTable, appnLocalTgConfGroup=appnLocalTgConfGroup, appnHprBfConfGroup=appnHprBfConfGroup, appnNodeNnFrsn=appnNodeNnFrsn, appnLocalEnTgOperational=appnLocalEnTgOperational, appnLsCurrentDelay=appnLsCurrentDelay, appnLocalTgBranchLinkType=appnLocalTgBranchLinkType, appnNodeLsCounterType=appnNodeLsCounterType, appnLsStatusXidLocalSense=appnLsStatusXidLocalSense, appnNnTgFRUsr1=appnNnTgFRUsr1, appnLocalEnTgDlcData=appnLocalEnTgDlcData, appnCosTransPriority=appnCosTransPriority, appnLsStatusIndex=appnLsStatusIndex, appnPortDlcLocalAddr=appnPortDlcLocalAddr, appnLocalEnTgEntry=appnLocalEnTgEntry, appnIsInP2SNonFmdBytes=appnIsInP2SNonFmdBytes, appnPortInformation=appnPortInformation, appnIsInGlobeCtrOperStatus=appnIsInGlobeCtrOperStatus, appnLsName=appnLsName, appnNnNodeFREntryTimeLeft=appnNnNodeFREntryTimeLeft, appnCosTgRowDelayMax=appnCosTgRowDelayMax, appnBrNnConfGroup=appnBrNnConfGroup, appnLsRouteNceId=appnLsRouteNceId, appnIsInRtpNceId=appnIsInRtpNceId, appnLsInXidFrames=appnLsInXidFrames, appnLsStatusRemoteAddr=appnLsStatusRemoteAddr, appnCompliance2=appnCompliance2, appnNnTgFRDlcData=appnNnTgFRDlcData, appnLocalTgConfGroup2=appnLocalTgConfGroup2, appnNodeNnCongested=appnNodeNnCongested, appnDirInLocates=appnDirInLocates, appnNodeHprEndRteSetups=appnNodeHprEndRteSetups, appnNnTgFRTypeIndicator=appnNnTgFRTypeIndicator, appnPortName=appnPortName, SnaClassOfServiceName=SnaClassOfServiceName, alertIdNumber=alertIdNumber, appnLsCommand=appnLsCommand, appnLsRemoteAddr=appnLsRemoteAddr, appnLsGoodXids=appnLsGoodXids, appnPortSIMRIM=appnPortSIMRIM, appnLsSpecific=appnLsSpecific, appnNodeHprOrgRteRejects=appnNodeHprOrgRteRejects, appnIsInS2PNonFmdBytes=appnIsInS2PNonFmdBytes, appnObjects=appnObjects, appnNnTgFRUsr3=appnNnTgFRUsr3, appnTraps=appnTraps, appnPortLsRole=appnPortLsRole, appnLsDlcType=appnLsDlcType, appnNodeCounterDisconTime=appnNodeCounterDisconTime, appnLocalTgUsr2=appnLocalTgUsr2, appnNnTopoCurNumNodes=appnNnTopoCurNumNodes, appnLsStatusTgNum=appnLsStatusTgNum, appnIsInSessType=appnIsInSessType, appnNnNodeFRCongested=appnNnNodeFRCongested, appnIsInS2PNonFmdPius=appnIsInS2PNonFmdPius, appnLsStatusGeneralSense=appnLsStatusGeneralSense, appnLsCounterDisconTime=appnLsCounterDisconTime, appnCosTgRowByteCostMax=appnCosTgRowByteCostMax, appnLocalEnTgDelay=appnLocalEnTgDelay, appnCosName=appnCosName, appnLsStatusXidBitInError=appnLsStatusXidBitInError, appnLocalTgDlcData=appnLocalTgDlcData, appnLocalEnTopoConfGroup=appnLocalEnTopoConfGroup, appnNodeEnNnServer=appnNodeEnNnServer, appnIsInSsSendRpc=appnIsInSsSendRpc, appnPortOperState=appnPortOperState, appnNodeNnIsr=appnNodeNnIsr, appnLocalEnTgDest=appnLocalEnTgDest, appnLocalTgConnCost=appnLocalTgConnCost, appnPortEntry=appnPortEntry, appnCosModeName=appnCosModeName, appnLocalTgEffCap=appnLocalTgEffCap, appnPortDlcType=appnPortDlcType, appnLsPortName=appnLsPortName, appnLocalTgIntersubnet=appnLocalTgIntersubnet, appnNnNodeFRFrsn=appnNnNodeFRFrsn, appnEnUniqueCaps=appnEnUniqueCaps, appnLsCpCpNceId=appnLsCpCpNceId, appnCosTgRowUsr1Min=appnCosTgRowUsr1Min, appnIsInS2PFmdPius=appnIsInS2PFmdPius, appnNnUniqueConfGroup=appnNnUniqueConfGroup, appnLsAdjCpName=appnLsAdjCpName, appnIsInP2SFmdBytes=appnIsInP2SFmdBytes, appnLsOutMsgFrames=appnLsOutMsgFrames, appnHprCtrlFlowsRtpConfGroup=appnHprCtrlFlowsRtpConfGroup, appnDir=appnDir, appnCosTgRowUsr2Max=appnCosTgRowUsr2Max, appnLsErrRecoSup=appnLsErrRecoSup, appnCosTgRowIndex=appnCosTgRowIndex, appnNodeMibVersion=appnNodeMibVersion, AppnTopologyEntryTimeLeft=AppnTopologyEntryTimeLeft, appnIsInPsSendMaxBtuSize=appnIsInPsSendMaxBtuSize, appnLsMaxSendBtuSize=appnLsMaxSendBtuSize, appnNodeId=appnNodeId, appnDirLuLocation=appnDirLuLocation, appnLsMltgMember=appnLsMltgMember, appnSessIntermediate=appnSessIntermediate, appnNodeNnRsn=appnNodeNnRsn, appnCosNodeRowIndex=appnCosNodeRowIndex, PYSNMP_MODULE_ID=appnMIB, appnIsInPsSendNxWndwSize=appnIsInPsSendNxWndwSize, appnLsActiveTime=appnLsActiveTime, appnNnTgFRDestHprTrans=appnNnTgFRDestHprTrans, appnPortDynLsBadXids=appnPortDynLsBadXids, appnTrapConfGroup=appnTrapConfGroup, appnNnNodeFRType=appnNnNodeFRType, appnNodeNnQuiescing=appnNodeNnQuiescing, appnNodeNnInterchangeSup=appnNodeNnInterchangeSup, appnLocalEnTgUsr3=appnLocalEnTgUsr3, appnNnNodeFRRsn=appnNnNodeFRRsn, appnIsInS2PFmdBytes=appnIsInS2PFmdBytes, appnLsEchoRsps=appnLsEchoRsps, appnVrnTable=appnVrnTable, appnCosModeCosName=appnCosModeCosName, appnDirType=appnDirType, appnNnTgFREffCap=appnNnTgFREffCap, appnMIB=appnMIB, appnGroups=appnGroups, appnLocalEnTgEntryTimeLeft=appnLocalEnTgEntryTimeLeft, appnCosTgRowUsr1Max=appnCosTgRowUsr1Max, appnLsCpCpSessionSupport=appnLsCpCpSessionSupport, appnLocalEnTgConnCost=appnLocalEnTgConnCost, appnLsRemoteLsName=appnLsRemoteLsName, appnNodeHprIntRteSetups=appnNodeHprIntRteSetups, appnPortTable=appnPortTable, appnNnTgFRFrsn=appnNnTgFRFrsn, appnIsInPsAdjTgNum=appnIsInPsAdjTgNum, appnLocalEnTgByteCost=appnLocalEnTgByteCost, appnLsMigration=appnLsMigration, appnLocalTgHprSup=appnLocalTgHprSup, appnLocalEnTgEffCap=appnLocalEnTgEffCap, appnIsInGlobeActSess=appnIsInGlobeActSess, appnCosModeTable=appnCosModeTable, appnCosNodeRowMaxCongestAllow=appnCosNodeRowMaxCongestAllow, appnLocalEnTgOrigin=appnLocalEnTgOrigin, appnNnTopo=appnNnTopo, appnPortDynLsGoodXids=appnPortDynLsGoodXids, appnNnTgFRIntersubnet=appnNnTgFRIntersubnet, appnIsRtpTcid=appnIsRtpTcid, appnGeneralConfGroup=appnGeneralConfGroup, appnHprRtpConfGroup=appnHprRtpConfGroup, appnNnTgTopologyFRTable=appnNnTgTopologyFRTable, appnIsInSsRecvPacingType=appnIsInSsRecvPacingType, AppnTgDelay=AppnTgDelay, AppnTgSecurity=AppnTgSecurity, appnPortMaxIframeWindow=appnPortMaxIframeWindow, appnLsEntry=appnLsEntry, appnDirOutBcastLocates=appnDirOutBcastLocates, appnLsStatusDlcType=appnLsStatusDlcType, appnNnNodeFRGarbageCollect=appnNnNodeFRGarbageCollect, appnLocalEnTgUsr1=appnLocalEnTgUsr1, appnIntSessConfGroup=appnIntSessConfGroup, appnCosTgRowDelayMin=appnCosTgRowDelayMin, appnIsInRouteInfo=appnIsInRouteInfo, appnLocalTgCpCpSession=appnLocalTgCpCpSession)
mibBuilder.exportSymbols("APPN-MIB", appnNnTgFRRsn=appnNnTgFRRsn, appnIsInPsRecvRpc=appnIsInPsRecvRpc, appnIsInEntry=appnIsInEntry, appnLsOutXidBytes=appnLsOutXidBytes, appnIsInModeName=appnIsInModeName, appnCosTgRowUsr3Max=appnCosTgRowUsr3Max, appnLinkConfGroup=appnLinkConfGroup, appnIsInP2SNonFmdPius=appnIsInP2SNonFmdPius, appnIsRtpTable=appnIsRtpTable, appnCosTgRowEntry=appnCosTgRowEntry, appnEnUniqueConfGroup=appnEnUniqueConfGroup, SnaSenseData=SnaSenseData, appnVrnEntry=appnVrnEntry, appnConformance=appnConformance, appnDirLuOwnerName=appnDirLuOwnerName, DisplayableDlcAddress=DisplayableDlcAddress, appnLocalTgUsr3=appnLocalTgUsr3, appnPortCommand=appnPortCommand, appnIsInCosName=appnIsInCosName, SnaNodeIdentification=SnaNodeIdentification, appnPortPortType=appnPortPortType, appnLocalTgSecurity=appnLocalTgSecurity, appnCosTgRowWgt=appnCosTgRowWgt, appnIsInSsSendNxWndwSize=appnIsInSsSendNxWndwSize, appnCosTgRowConnCostMax=appnCosTgRowConnCostMax, appnLocalEnTgTable=appnLocalEnTgTable, appnNnTgFRSecurity=appnNnTgFRSecurity, appnLsStatusXidByteInError=appnLsStatusXidByteInError, appnCosNodeRowEntry=appnCosNodeRowEntry, appnVrnConfGroup=appnVrnConfGroup, appnNnTopoTgPurges=appnNnTopoTgPurges, appnNode=appnNode, appnNodeNnTreeCache=appnNodeNnTreeCache, appnCosTgRowUsr2Min=appnCosTgRowUsr2Min, appnLocalTgNum=appnLocalTgNum, appnLsForAnrLabel=appnLsForAnrLabel, appnLocalEnTgSecurity=appnLocalEnTgSecurity, appnNodeType=appnNodeType, appnNodeEnLuSearch=appnNodeEnLuSearch, AppnLinkStationCounter=AppnLinkStationCounter, appnLsMaxDelayTime=appnLsMaxDelayTime, appnLocalTgOperational=appnLocalTgOperational, appnLsBfNceId=appnLsBfNceId, alertTrap=alertTrap, appnIsInSecLuName=appnIsInSecLuName, appnNodeCpName=appnNodeCpName, appnNnTgFROperational=appnNnTgFROperational, appnLocalDirPerfConfGroup=appnLocalDirPerfConfGroup, appnIsInPsRecvNxWndwSize=appnIsInPsRecvNxWndwSize, appnNnNodeFRCentralDirectory=appnNnNodeFRCentralDirectory, appnNodeUpTime=appnNodeUpTime, appnNnNodeFRIsr=appnNnNodeFRIsr, appnCosTgRowEffCapMax=appnCosTgRowEffCapMax, appnNnTgFRByteCost=appnNnTgFRByteCost, appnDirLuName=appnDirLuName, appnIsInFqCpName=appnIsInFqCpName, appnNnTgFRDelay=appnNnTgFRDelay, appnLocalTopology=appnLocalTopology, appnCosNodeRowResistMax=appnCosNodeRowResistMax, appnCosTgRowTable=appnCosTgRowTable, appnIsInSsRecvNxWndwSize=appnIsInSsRecvNxWndwSize, appnLsInMsgBytes=appnLsInMsgBytes, appnNodeEnModeCosMap=appnNodeEnModeCosMap, appnIsInPcid=appnIsInPcid, appnHprBaseConfGroup=appnHprBaseConfGroup, appnLsPartnerNodeId=appnLsPartnerNodeId, appnNnNodeFRBranchAwareness=appnNnNodeFRBranchAwareness, appnIsInCtrUpTime=appnIsInCtrUpTime, appnNnUniqueInfoAndCaps=appnNnUniqueInfoAndCaps, appnIsInGlobeRscvTime=appnIsInGlobeRscvTime, appnIsInRtpTcid=appnIsInRtpTcid, appnNnTgFRBranchTg=appnNnTgFRBranchTg, appnLsStatusPartnerId=appnLsStatusPartnerId, appnIsInGlobeHprBfActSess=appnIsInGlobeHprBfActSess, appnDirTableConfGroup2=appnDirTableConfGroup2, appnNnNodeFRIsrDepleted=appnNnNodeFRIsrDepleted, appnNodeBrNn=appnNodeBrNn, appnNnTgFRGarbageCollect=appnNnTgFRGarbageCollect, appnLocalEnTgDestVirtual=appnLocalEnTgDestVirtual, appnPortDynamicLinkSupport=appnPortDynamicLinkSupport, appnIsInGlobeCtrAdminStatus=appnIsInGlobeCtrAdminStatus, appnDirNnServerName=appnDirNnServerName, appnDirMaxCaches=appnDirMaxCaches, appnCosTgRowSecurityMax=appnCosTgRowSecurityMax, appnIsRtpEntry=appnIsRtpEntry, appnCos=appnCos, appnLsCurrentStateTime=appnLsCurrentStateTime, appnPortCounterDisconTime=appnPortCounterDisconTime, SnaControlPointName=SnaControlPointName, appnCosNodeRowMinCongestAllow=appnCosNodeRowMinCongestAllow, appnNnTgFROwner=appnNnTgFROwner, appnPortDefLsGoodXids=appnPortDefLsGoodXids, appnCosNameEntry=appnCosNameEntry, appnNnTgFRDestVirtual=appnNnTgFRDestVirtual, appnNodeHprOrgRteSetups=appnNodeHprOrgRteSetups, appnCosTgRowName=appnCosTgRowName, appnLsInMsgFrames=appnLsInMsgFrames, affectedObject=affectedObject, appnLocalTgQuiescing=appnLocalTgQuiescing, appnIsInSsAdjCpName=appnIsInSsAdjCpName, appnLsAdjNodeType=appnLsAdjNodeType, appnNodeHprEndRteRejects=appnNodeHprEndRteRejects, appnIsInSessState=appnIsInSessState, appnNnNodeFRInterchangeSup=appnNnNodeFRInterchangeSup, appnNodeParallelTg=appnNodeParallelTg, appnNnNodeFRRouteAddResist=appnNnNodeFRRouteAddResist, appnLsMaxDelay=appnLsMaxDelay, appnLsHprSup=appnLsHprSup, appnIsInPsSendRpc=appnIsInPsSendRpc, appnDirTableConfGroup=appnDirTableConfGroup, appnGeneralInfoAndCaps=appnGeneralInfoAndCaps, appnDirRegEntries=appnDirRegEntries, appnNodeNnSafeStoreFreq=appnNodeNnSafeStoreFreq, appnNnTgFREntryTimeLeft=appnNnTgFREntryTimeLeft, appnNnTgFRUsr2=appnNnTgFRUsr2, appnLsOutMsgBytes=appnLsOutMsgBytes, appnIsInGlobeCtrStatusTime=appnIsInGlobeCtrStatusTime, appnLocalTgMltgLinkType=appnLocalTgMltgLinkType, appnNnTopoConfGroup2=appnNnTopoConfGroup2, appnLsActOnDemand=appnLsActOnDemand, appnNnTgFRSubareaNum=appnNnTgFRSubareaNum, appnPortConfGroup=appnPortConfGroup, appnLsStatusRetry=appnLsStatusRetry, appnIsRtpSessions=appnIsRtpSessions, appnLsOutXidFrames=appnLsOutXidFrames, appnVrnTgNum=appnVrnTgNum, appnLocalTgTable=appnLocalTgTable, AppnTgDlcData=AppnTgDlcData, appnLsStatusEndSense=appnLsStatusEndSense, appnIsInGlobal=appnIsInGlobal, appnDirOutLocates=appnDirOutLocates, appnCosConfGroup=appnCosConfGroup, appnCompliance=appnCompliance, appnLocalTgUsr1=appnLocalTgUsr1, appnIsRtpNceId=appnIsRtpNceId, appnNnTopoNodePurges=appnNnTopoNodePurges, appnLsInXidBytes=appnLsInXidBytes, appnLocalTgDelay=appnLocalTgDelay, appnCosNodeRowName=appnCosNodeRowName, appnLsTgNum=appnLsTgNum, appnLocalEnTopoConfGroup2=appnLocalEnTopoConfGroup2, appnDirInBcastLocates=appnDirInBcastLocates, appnNnTgFRMltgLinkType=appnNnTgFRMltgLinkType, appnVrnName=appnVrnName, appnLsDynamic=appnLsDynamic)
