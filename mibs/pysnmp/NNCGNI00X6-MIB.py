#
# PySNMP MIB module NNCGNI00X6-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/NNCGNI00X6-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 20:13:27 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ConstraintsIntersection, SingleValueConstraint, ConstraintsUnion, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ConstraintsIntersection", "SingleValueConstraint", "ConstraintsUnion", "ValueSizeConstraint")
nncExtDiag, nncExtProbe, nncExtCodeSpace, nncExtSystem, nncExtNVM, nncExtEnvironmental, nncExtRestart = mibBuilder.importSymbols("NNCGNI00X1-SMI", "nncExtDiag", "nncExtProbe", "nncExtCodeSpace", "nncExtSystem", "nncExtNVM", "nncExtEnvironmental", "nncExtRestart")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
iso, Counter64, ModuleIdentity, TimeTicks, Gauge32, ObjectIdentity, Integer32, MibScalar, MibTable, MibTableRow, MibTableColumn, Unsigned32, IpAddress, Bits, Counter32, NotificationType, MibIdentifier = mibBuilder.importSymbols("SNMPv2-SMI", "iso", "Counter64", "ModuleIdentity", "TimeTicks", "Gauge32", "ObjectIdentity", "Integer32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Unsigned32", "IpAddress", "Bits", "Counter32", "NotificationType", "MibIdentifier")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
class RestartCause(Integer32):
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 15, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72))
    namedValues = NamedValues(("trbl-noproblem", 0), ("trbl-unknown", 1), ("trbl-buserror", 2), ("trbl-addresserror", 3), ("trbl-illegalinst", 4), ("trbl-zerodivide", 5), ("trbl-chkfailure", 6), ("trbl-trapvinst", 7), ("trbl-privilege", 8), ("trbl-tracetrap", 9), ("trbl-line1010", 10), ("trbl-line1111", 11), ("trbl-uninitialized", 15), ("trbl-spurious", 24), ("trbl-intlevel-1", 25), ("trbl-intlevel-2", 26), ("trbl-intlevel-3", 27), ("trbl-intlevel-4", 28), ("trbl-intlevel-5", 29), ("trbl-intlevel-6", 30), ("trbl-intlevel-7", 31), ("trbl-trap-00", 32), ("trbl-trap-01", 33), ("trbl-trap-02", 34), ("trbl-trap-03", 35), ("trbl-trap-04", 36), ("trbl-trap-05", 37), ("trbl-trap-06", 38), ("trbl-trap-07", 39), ("trbl-trap-08", 40), ("trbl-trap-09", 41), ("trbl-trap-10", 42), ("trbl-trap-11", 43), ("trbl-trap-12", 44), ("trbl-trap-13", 45), ("trbl-trap-14", 46), ("trbl-trap-15", 47), ("trbl-watchdog", 48), ("trbl-ncireset", 49), ("trbl-ncirunminusone", 50), ("trbl-panic", 51), ("trbl-runbootprom", 52), ("trbl-copyramtoflash", 53), ("trbl-dnldaborted", 54), ("trbl-badflashconfig", 55), ("trbl-nvmreset", 56), ("trbl-dspreset", 57), ("trbl-dspdnldfailed", 58), ("trbl-dsppollfailed", 59), ("trbl-dspdiedontx", 60), ("trbl-dspdead", 61), ("trbl-dcmpdeath", 62), ("trbl-runninglowcomms", 63), ("trbl-runninglowframe", 64), ("trbl-runninglowsys", 65), ("trbl-runninglowsonic", 66), ("trbl-runninglowmgmt", 67), ("trbl-runninglowpoolunknown", 68), ("trbl-ncireload", 69), ("trbl-pushbutton", 70), ("trbl-cpureset", 71), ("trbl-rdsreset", 72))

nncExtSysProductName = MibScalar((1, 3, 6, 1, 4, 1, 123, 3, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncExtSysProductName.setStatus('mandatory')
nncExtSysCurrentGeneric = MibScalar((1, 3, 6, 1, 4, 1, 123, 3, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncExtSysCurrentGeneric.setStatus('mandatory')
nncExtEnvFanStatus = MibScalar((1, 3, 6, 1, 4, 1, 123, 3, 2, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("fanOk", 1), ("fanFailed", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncExtEnvFanStatus.setStatus('mandatory')
nncExtEnvTemperatureSensor = MibScalar((1, 3, 6, 1, 4, 1, 123, 3, 2, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("ok", 1), ("tooHot", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncExtEnvTemperatureSensor.setStatus('mandatory')
nncExtEnvPlus12Status = MibScalar((1, 3, 6, 1, 4, 1, 123, 3, 2, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("ok", 1), ("outOfSpec", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncExtEnvPlus12Status.setStatus('mandatory')
nncExtEnvMinus12Status = MibScalar((1, 3, 6, 1, 4, 1, 123, 3, 2, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("ok", 1), ("outOfSpec", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncExtEnvMinus12Status.setStatus('mandatory')
nncExtRestarts = MibScalar((1, 3, 6, 1, 4, 1, 123, 3, 3, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncExtRestarts.setStatus('mandatory')
nncExtFaultInducedRestarts = MibScalar((1, 3, 6, 1, 4, 1, 123, 3, 3, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncExtFaultInducedRestarts.setStatus('mandatory')
nncExtLastFault = MibScalar((1, 3, 6, 1, 4, 1, 123, 3, 3, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncExtLastFault.setStatus('mandatory')
nncExtFaultRepetitions = MibScalar((1, 3, 6, 1, 4, 1, 123, 3, 3, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncExtFaultRepetitions.setStatus('mandatory')
nncExtRestartTracebackTable = MibTable((1, 3, 6, 1, 4, 1, 123, 3, 3, 5), )
if mibBuilder.loadTexts: nncExtRestartTracebackTable.setStatus('mandatory')
nncExtRestartTracebackEntry = MibTableRow((1, 3, 6, 1, 4, 1, 123, 3, 3, 5, 1), ).setIndexNames((0, "NNCGNI00X6-MIB", "nncExtRestartTracebackIndex"))
if mibBuilder.loadTexts: nncExtRestartTracebackEntry.setStatus('mandatory')
nncExtRestartTracebackIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 3, 5, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncExtRestartTracebackIndex.setStatus('mandatory')
nncExtRestartTracebackPCValue = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 3, 5, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncExtRestartTracebackPCValue.setStatus('mandatory')
nncExtRestartRegisterTable = MibTable((1, 3, 6, 1, 4, 1, 123, 3, 3, 6), )
if mibBuilder.loadTexts: nncExtRestartRegisterTable.setStatus('mandatory')
nncExtRestartRegisterEntry = MibTableRow((1, 3, 6, 1, 4, 1, 123, 3, 3, 6, 1), ).setIndexNames((0, "NNCGNI00X6-MIB", "nncExtRestartRegisterIndex"))
if mibBuilder.loadTexts: nncExtRestartRegisterEntry.setStatus('mandatory')
nncExtRestartRegisterIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 3, 6, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncExtRestartRegisterIndex.setStatus('mandatory')
nncExtRestartRegisterValue = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 3, 6, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncExtRestartRegisterValue.setStatus('mandatory')
nncExtRestartForceToBoot = MibScalar((1, 3, 6, 1, 4, 1, 123, 3, 3, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 36000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nncExtRestartForceToBoot.setStatus('mandatory')
nncExtRestartCause = MibScalar((1, 3, 6, 1, 4, 1, 123, 3, 3, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 15, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72))).clone(namedValues=NamedValues(("trbl-noproblem", 0), ("trbl-unknown", 1), ("trbl-buserror", 2), ("trbl-addresserror", 3), ("trbl-illegalinst", 4), ("trbl-zerodivide", 5), ("trbl-chkfailure", 6), ("trbl-trapvinst", 7), ("trbl-privilege", 8), ("trbl-tracetrap", 9), ("trbl-line1010", 10), ("trbl-line1111", 11), ("trbl-uninitialized", 15), ("trbl-spurious", 24), ("trbl-intlevel-1", 25), ("trbl-intlevel-2", 26), ("trbl-intlevel-3", 27), ("trbl-intlevel-4", 28), ("trbl-intlevel-5", 29), ("trbl-intlevel-6", 30), ("trbl-intlevel-7", 31), ("trbl-trap-00", 32), ("trbl-trap-01", 33), ("trbl-trap-02", 34), ("trbl-trap-03", 35), ("trbl-trap-04", 36), ("trbl-trap-05", 37), ("trbl-trap-06", 38), ("trbl-trap-07", 39), ("trbl-trap-08", 40), ("trbl-trap-09", 41), ("trbl-trap-10", 42), ("trbl-trap-11", 43), ("trbl-trap-12", 44), ("trbl-trap-13", 45), ("trbl-trap-14", 46), ("trbl-trap-15", 47), ("trbl-watchdog", 48), ("trbl-ncireset", 49), ("trbl-ncirunminusone", 50), ("trbl-panic", 51), ("trbl-runbootprom", 52), ("trbl-copyramtoflash", 53), ("trbl-dnldaborted", 54), ("trbl-badflashconfig", 55), ("trbl-nvmreset", 56), ("trbl-dspreset", 57), ("trbl-dspdnldfailed", 58), ("trbl-dsppollfailed", 59), ("trbl-dspdiedontx", 60), ("trbl-dspdead", 61), ("trbl-dcmpdeath", 62), ("trbl-runninglowcomms", 63), ("trbl-runninglowframe", 64), ("trbl-runninglowsys", 65), ("trbl-runninglowsonic", 66), ("trbl-runninglowmgmt", 67), ("trbl-runninglowpoolunknown", 68), ("trbl-ncireload", 69), ("trbl-pushbutton", 70), ("trbl-cpureset", 71), ("trbl-rdsreset", 72)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncExtRestartCause.setStatus('mandatory')
class CodeSpaceIndex(Integer32):
    subtypeSpec = Integer32.subtypeSpec + ValueRangeConstraint(1, 3)

nncExtCodeSpaceCurrentlyActive = MibScalar((1, 3, 6, 1, 4, 1, 123, 3, 4, 1), CodeSpaceIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncExtCodeSpaceCurrentlyActive.setStatus('mandatory')
nncExtCodeSpaceNextActive = MibScalar((1, 3, 6, 1, 4, 1, 123, 3, 4, 2), CodeSpaceIndex()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nncExtCodeSpaceNextActive.setStatus('mandatory')
nncExtCodeSpaceNumber = MibScalar((1, 3, 6, 1, 4, 1, 123, 3, 4, 3), CodeSpaceIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncExtCodeSpaceNumber.setStatus('mandatory')
nncExtCodeSpaceTable = MibTable((1, 3, 6, 1, 4, 1, 123, 3, 4, 4), )
if mibBuilder.loadTexts: nncExtCodeSpaceTable.setStatus('mandatory')
nncExtCodeSpaceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 123, 3, 4, 4, 1), ).setIndexNames((0, "NNCGNI00X6-MIB", "nncExtCodeSpaceIndex"))
if mibBuilder.loadTexts: nncExtCodeSpaceEntry.setStatus('mandatory')
nncExtCodeSpaceIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 4, 4, 1, 1), CodeSpaceIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncExtCodeSpaceIndex.setStatus('mandatory')
nncExtCodeSpaceSize = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 4, 4, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncExtCodeSpaceSize.setStatus('mandatory')
nncExtCodeSpaceStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 4, 4, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("valid", 1), ("invalid", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncExtCodeSpaceStatus.setStatus('mandatory')
nncExtCodeSpaceGeneric = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 4, 4, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncExtCodeSpaceGeneric.setStatus('mandatory')
nncExtCodeSpaceDownloadDate = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 4, 4, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(9, 9)).setFixedLength(9)).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncExtCodeSpaceDownloadDate.setStatus('mandatory')
nncExtCodeSpaceDownloadTime = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 4, 4, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(8, 8)).setFixedLength(8)).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncExtCodeSpaceDownloadTime.setStatus('mandatory')
nncExtCodeSpaceDownloadServer = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 4, 4, 1, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncExtCodeSpaceDownloadServer.setStatus('mandatory')
nncExtCodeSpaceDownloadRequestor = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 4, 4, 1, 8), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncExtCodeSpaceDownloadRequestor.setStatus('mandatory')
nncExtCodeSpaceCompressionType = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 4, 4, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("none", 1), ("c1", 2), ("c2", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncExtCodeSpaceCompressionType.setStatus('mandatory')
nncExtCodeSpaceLoadSize = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 4, 4, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncExtCodeSpaceLoadSize.setStatus('mandatory')
class NVMPoolIndex(Integer32):
    subtypeSpec = Integer32.subtypeSpec + ValueRangeConstraint(1, 2)

nncExtNVMUsageTable = MibTable((1, 3, 6, 1, 4, 1, 123, 3, 5, 1), )
if mibBuilder.loadTexts: nncExtNVMUsageTable.setStatus('mandatory')
nncExtNVMUsageEntry = MibTableRow((1, 3, 6, 1, 4, 1, 123, 3, 5, 1, 1), ).setIndexNames((0, "NNCGNI00X6-MIB", "nncExtNVMPoolIndex"))
if mibBuilder.loadTexts: nncExtNVMUsageEntry.setStatus('mandatory')
nncExtNVMPoolIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 5, 1, 1, 1), NVMPoolIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncExtNVMPoolIndex.setStatus('mandatory')
nncExtNVMPoolSize = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 5, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncExtNVMPoolSize.setStatus('mandatory')
nncExtNVMPoolBytesUsed = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 5, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncExtNVMPoolBytesUsed.setStatus('mandatory')
nncExtNVMLastRepair = MibScalar((1, 3, 6, 1, 4, 1, 123, 3, 5, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(31, 31)).setFixedLength(31)).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncExtNVMLastRepair.setStatus('mandatory')
nncExtProbeMPLTable = MibTable((1, 3, 6, 1, 4, 1, 123, 3, 12, 1), )
if mibBuilder.loadTexts: nncExtProbeMPLTable.setStatus('mandatory')
nncExtProbeMPLEntry = MibTableRow((1, 3, 6, 1, 4, 1, 123, 3, 12, 1, 1), )
if mibBuilder.loadTexts: nncExtProbeMPLEntry.setStatus('mandatory')
nncExtProbeMPL = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 12, 1, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nncExtProbeMPL.setStatus('mandatory')
nncDiagUndoAll = MibScalar((1, 3, 6, 1, 4, 1, 123, 3, 13, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("undo", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nncDiagUndoAll.setStatus('mandatory')
mibBuilder.exportSymbols("NNCGNI00X6-MIB", nncExtCodeSpaceNumber=nncExtCodeSpaceNumber, CodeSpaceIndex=CodeSpaceIndex, nncExtNVMPoolIndex=nncExtNVMPoolIndex, nncExtRestartRegisterTable=nncExtRestartRegisterTable, nncExtProbeMPLEntry=nncExtProbeMPLEntry, nncExtFaultRepetitions=nncExtFaultRepetitions, nncExtRestartTracebackPCValue=nncExtRestartTracebackPCValue, nncExtRestartForceToBoot=nncExtRestartForceToBoot, nncExtRestartCause=nncExtRestartCause, nncExtCodeSpaceGeneric=nncExtCodeSpaceGeneric, RestartCause=RestartCause, nncExtProbeMPLTable=nncExtProbeMPLTable, nncExtCodeSpaceIndex=nncExtCodeSpaceIndex, nncExtCodeSpaceLoadSize=nncExtCodeSpaceLoadSize, nncExtRestartRegisterIndex=nncExtRestartRegisterIndex, nncExtCodeSpaceSize=nncExtCodeSpaceSize, nncExtProbeMPL=nncExtProbeMPL, nncExtEnvPlus12Status=nncExtEnvPlus12Status, nncExtNVMUsageEntry=nncExtNVMUsageEntry, nncExtNVMPoolBytesUsed=nncExtNVMPoolBytesUsed, nncExtCodeSpaceStatus=nncExtCodeSpaceStatus, nncExtNVMPoolSize=nncExtNVMPoolSize, nncExtCodeSpaceDownloadDate=nncExtCodeSpaceDownloadDate, nncExtNVMUsageTable=nncExtNVMUsageTable, nncExtSysCurrentGeneric=nncExtSysCurrentGeneric, nncExtEnvTemperatureSensor=nncExtEnvTemperatureSensor, nncExtLastFault=nncExtLastFault, nncExtEnvMinus12Status=nncExtEnvMinus12Status, nncExtFaultInducedRestarts=nncExtFaultInducedRestarts, nncExtRestartTracebackTable=nncExtRestartTracebackTable, nncExtRestarts=nncExtRestarts, nncExtRestartRegisterValue=nncExtRestartRegisterValue, nncExtRestartRegisterEntry=nncExtRestartRegisterEntry, nncExtNVMLastRepair=nncExtNVMLastRepair, nncExtEnvFanStatus=nncExtEnvFanStatus, nncDiagUndoAll=nncDiagUndoAll, nncExtCodeSpaceCompressionType=nncExtCodeSpaceCompressionType, nncExtCodeSpaceDownloadRequestor=nncExtCodeSpaceDownloadRequestor, nncExtRestartTracebackEntry=nncExtRestartTracebackEntry, nncExtRestartTracebackIndex=nncExtRestartTracebackIndex, nncExtCodeSpaceDownloadTime=nncExtCodeSpaceDownloadTime, nncExtCodeSpaceNextActive=nncExtCodeSpaceNextActive, nncExtCodeSpaceDownloadServer=nncExtCodeSpaceDownloadServer, nncExtSysProductName=nncExtSysProductName, nncExtCodeSpaceEntry=nncExtCodeSpaceEntry, NVMPoolIndex=NVMPoolIndex, nncExtCodeSpaceCurrentlyActive=nncExtCodeSpaceCurrentlyActive, nncExtCodeSpaceTable=nncExtCodeSpaceTable)
