#
# PySNMP MIB module DOCS-RPHY-PTP-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/DOCS-RPHY-PTP-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 18:38:52 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ConstraintsIntersection, ValueRangeConstraint, ValueSizeConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ConstraintsIntersection", "ValueRangeConstraint", "ValueSizeConstraint", "ConstraintsUnion")
clabProjDocsis, = mibBuilder.importSymbols("CLAB-DEF-MIB", "clabProjDocsis")
IfDirection, = mibBuilder.importSymbols("DOCS-IF3-MIB", "IfDirection")
docsRphyRpdDevInfoUniqueId, = mibBuilder.importSymbols("DOCS-RPHY-MIB", "docsRphyRpdDevInfoUniqueId")
IANAPhysicalClass, = mibBuilder.importSymbols("IANA-ENTITY-MIB", "IANAPhysicalClass")
IANAifType, = mibBuilder.importSymbols("IANAifType-MIB", "IANAifType")
InterfaceIndexOrZero, ifIndex, InterfaceIndex = mibBuilder.importSymbols("IF-MIB", "InterfaceIndexOrZero", "ifIndex", "InterfaceIndex")
InetPortNumber, InetVersion, InetAddressType, InetAddress, InetAddressPrefixLength = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetPortNumber", "InetVersion", "InetAddressType", "InetAddress", "InetAddressPrefixLength")
SnmpAdminString, = mibBuilder.importSymbols("SNMP-FRAMEWORK-MIB", "SnmpAdminString")
ObjectGroup, ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "ModuleCompliance", "NotificationGroup")
Unsigned32, MibIdentifier, Gauge32, Counter32, Counter64, IpAddress, TimeTicks, ModuleIdentity, iso, NotificationType, ObjectIdentity, Bits, Integer32, MibScalar, MibTable, MibTableRow, MibTableColumn = mibBuilder.importSymbols("SNMPv2-SMI", "Unsigned32", "MibIdentifier", "Gauge32", "Counter32", "Counter64", "IpAddress", "TimeTicks", "ModuleIdentity", "iso", "NotificationType", "ObjectIdentity", "Bits", "Integer32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn")
PhysAddress, TimeStamp, TruthValue, TextualConvention, DisplayString, MacAddress, AutonomousType, DateAndTime = mibBuilder.importSymbols("SNMPv2-TC", "PhysAddress", "TimeStamp", "TruthValue", "TextualConvention", "DisplayString", "MacAddress", "AutonomousType", "DateAndTime")
UUIDorZero, = mibBuilder.importSymbols("UUID-TC-MIB", "UUIDorZero")
docsRphyPtpMib = ModuleIdentity((1, 3, 6, 1, 4, 1, 4491, 2, 1, 32))
docsRphyPtpMib.setRevisions(('2017-04-13 00:00',))
if mibBuilder.loadTexts: docsRphyPtpMib.setLastUpdated('201704130000Z')
if mibBuilder.loadTexts: docsRphyPtpMib.setOrganization('Cable Television Laboratories, Inc')
docsRphyPtpNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 4491, 2, 1, 32, 0))
docsRphyPtpObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 4491, 2, 1, 32, 1))
docsRphyPtpConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 4491, 2, 1, 32, 2))
docsRphyPtpRpdMibObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 4491, 2, 1, 32, 1, 1))
docsRphyPtpCcapMibObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 4491, 2, 1, 32, 1, 2))
docsRphyPtpCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 4491, 2, 1, 32, 2, 1))
docsRphyPtpGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 4491, 2, 1, 32, 2, 2))
docsRphyPtpCcapDefaultDataSet = MibIdentifier((1, 3, 6, 1, 4, 1, 4491, 2, 1, 32, 1, 2, 1))
docsRphyPtpCcapDefaultDataSetTwoStepFlag = MibScalar((1, 3, 6, 1, 4, 1, 4491, 2, 1, 32, 1, 2, 1, 1), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyPtpCcapDefaultDataSetTwoStepFlag.setStatus('current')
docsRphyPtpCcapDefaultDataSetClockIdentity = MibScalar((1, 3, 6, 1, 4, 1, 4491, 2, 1, 32, 1, 2, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(8, 8)).setFixedLength(8)).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyPtpCcapDefaultDataSetClockIdentity.setStatus('current')
docsRphyPtpCcapDefaultDataSetPriority1 = MibScalar((1, 3, 6, 1, 4, 1, 4491, 2, 1, 32, 1, 2, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyPtpCcapDefaultDataSetPriority1.setStatus('current')
docsRphyPtpCcapDefaultDataSetPriority2 = MibScalar((1, 3, 6, 1, 4, 1, 4491, 2, 1, 32, 1, 2, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyPtpCcapDefaultDataSetPriority2.setStatus('current')
docsRphyPtpCcapDefaultDataSetSlaveOnly = MibScalar((1, 3, 6, 1, 4, 1, 4491, 2, 1, 32, 1, 2, 1, 5), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyPtpCcapDefaultDataSetSlaveOnly.setStatus('current')
docsRphyPtpCcapDefaultDataSetQualityClass = MibScalar((1, 3, 6, 1, 4, 1, 4491, 2, 1, 32, 1, 2, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyPtpCcapDefaultDataSetQualityClass.setStatus('current')
docsRphyPtpCcapDefaultDataSetQualityAccuracy = MibScalar((1, 3, 6, 1, 4, 1, 4491, 2, 1, 32, 1, 2, 1, 7), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyPtpCcapDefaultDataSetQualityAccuracy.setStatus('current')
docsRphyPtpCcapDefaultDataSetQualityOffset = MibScalar((1, 3, 6, 1, 4, 1, 4491, 2, 1, 32, 1, 2, 1, 8), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyPtpCcapDefaultDataSetQualityOffset.setStatus('current')
docsRphyPtpCcapCurrentDataSet = MibIdentifier((1, 3, 6, 1, 4, 1, 4491, 2, 1, 32, 1, 2, 2))
docsRphyPtpCcapCurrentDataSetStepsRemoved = MibScalar((1, 3, 6, 1, 4, 1, 4491, 2, 1, 32, 1, 2, 2, 1), Unsigned32()).setUnits('steps').setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyPtpCcapCurrentDataSetStepsRemoved.setStatus('current')
docsRphyPtpCcapCurrentDataSetOffsetFromMaster = MibScalar((1, 3, 6, 1, 4, 1, 4491, 2, 1, 32, 1, 2, 2, 2), Integer32()).setUnits('Nanoseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyPtpCcapCurrentDataSetOffsetFromMaster.setStatus('current')
docsRphyPtpCcapCurrentDataSetMeanPathDelay = MibScalar((1, 3, 6, 1, 4, 1, 4491, 2, 1, 32, 1, 2, 2, 3), Unsigned32()).setUnits('Nanoseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyPtpCcapCurrentDataSetMeanPathDelay.setStatus('current')
docsRphyPtpCcapParentDataSet = MibIdentifier((1, 3, 6, 1, 4, 1, 4491, 2, 1, 32, 1, 2, 3))
docsRphyPtpCcapParentDataSetParentClockId = MibScalar((1, 3, 6, 1, 4, 1, 4491, 2, 1, 32, 1, 2, 3, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(8, 8)).setFixedLength(8)).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyPtpCcapParentDataSetParentClockId.setStatus('current')
docsRphyPtpCcapParentDataSetParentPortNumber = MibScalar((1, 3, 6, 1, 4, 1, 4491, 2, 1, 32, 1, 2, 3, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyPtpCcapParentDataSetParentPortNumber.setStatus('current')
docsRphyPtpCcapParentDataSetParentStats = MibScalar((1, 3, 6, 1, 4, 1, 4491, 2, 1, 32, 1, 2, 3, 3), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyPtpCcapParentDataSetParentStats.setStatus('current')
docsRphyPtpCcapParentDataSetClockOffset = MibScalar((1, 3, 6, 1, 4, 1, 4491, 2, 1, 32, 1, 2, 3, 4), Integer32()).setUnits('Nanoseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyPtpCcapParentDataSetClockOffset.setStatus('current')
docsRphyPtpCcapParentDataSetPhaseChangeRate = MibScalar((1, 3, 6, 1, 4, 1, 4491, 2, 1, 32, 1, 2, 3, 5), Integer32()).setUnits('Nanoseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyPtpCcapParentDataSetPhaseChangeRate.setStatus('current')
docsRphyPtpCcapParentDataSetGmClockIdentity = MibScalar((1, 3, 6, 1, 4, 1, 4491, 2, 1, 32, 1, 2, 3, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(8, 8)).setFixedLength(8)).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyPtpCcapParentDataSetGmClockIdentity.setStatus('current')
docsRphyPtpCcapParentDataSetGmPriority1 = MibScalar((1, 3, 6, 1, 4, 1, 4491, 2, 1, 32, 1, 2, 3, 7), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyPtpCcapParentDataSetGmPriority1.setStatus('current')
docsRphyPtpCcapParentDataSetGmPriority2 = MibScalar((1, 3, 6, 1, 4, 1, 4491, 2, 1, 32, 1, 2, 3, 8), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyPtpCcapParentDataSetGmPriority2.setStatus('current')
docsRphyPtpCcapParentDataSetGmQualityClass = MibScalar((1, 3, 6, 1, 4, 1, 4491, 2, 1, 32, 1, 2, 3, 9), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyPtpCcapParentDataSetGmQualityClass.setStatus('current')
docsRphyPtpCcapParentDataSetGmQualityAccuracy = MibScalar((1, 3, 6, 1, 4, 1, 4491, 2, 1, 32, 1, 2, 3, 10), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyPtpCcapParentDataSetGmQualityAccuracy.setStatus('current')
docsRphyPtpCcapParentDataSetGmQualityOffset = MibScalar((1, 3, 6, 1, 4, 1, 4491, 2, 1, 32, 1, 2, 3, 11), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyPtpCcapParentDataSetGmQualityOffset.setStatus('current')
docsRphyPtpCcapTimeProperties = MibIdentifier((1, 3, 6, 1, 4, 1, 4491, 2, 1, 32, 1, 2, 4))
docsRphyPtpCcapTimePropertiesCurrentUtcOffsetValid = MibScalar((1, 3, 6, 1, 4, 1, 4491, 2, 1, 32, 1, 2, 4, 1), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyPtpCcapTimePropertiesCurrentUtcOffsetValid.setStatus('current')
docsRphyPtpCcapTimePropertiesCurrentUtcOffset = MibScalar((1, 3, 6, 1, 4, 1, 4491, 2, 1, 32, 1, 2, 4, 2), Integer32()).setUnits('Seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyPtpCcapTimePropertiesCurrentUtcOffset.setStatus('current')
docsRphyPtpCcapTimePropertiesLeap59 = MibScalar((1, 3, 6, 1, 4, 1, 4491, 2, 1, 32, 1, 2, 4, 3), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyPtpCcapTimePropertiesLeap59.setStatus('current')
docsRphyPtpCcapTimePropertiesLeap61 = MibScalar((1, 3, 6, 1, 4, 1, 4491, 2, 1, 32, 1, 2, 4, 4), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyPtpCcapTimePropertiesLeap61.setStatus('current')
docsRphyPtpCcapTimePropertiesTimeTraceable = MibScalar((1, 3, 6, 1, 4, 1, 4491, 2, 1, 32, 1, 2, 4, 5), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyPtpCcapTimePropertiesTimeTraceable.setStatus('current')
docsRphyPtpCcapTimePropertiesFreqTraceable = MibScalar((1, 3, 6, 1, 4, 1, 4491, 2, 1, 32, 1, 2, 4, 6), TruthValue().clone('true')).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyPtpCcapTimePropertiesFreqTraceable.setStatus('current')
docsRphyPtpCcapTimePropertiesPtpTimescale = MibScalar((1, 3, 6, 1, 4, 1, 4491, 2, 1, 32, 1, 2, 4, 7), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyPtpCcapTimePropertiesPtpTimescale.setStatus('current')
docsRphyPtpCcapTimePropertiesTimeSource = MibScalar((1, 3, 6, 1, 4, 1, 4491, 2, 1, 32, 1, 2, 4, 8), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyPtpCcapTimePropertiesTimeSource.setStatus('current')
docsRphyPtpCcapPortDataSetTable = MibTable((1, 3, 6, 1, 4, 1, 4491, 2, 1, 32, 1, 2, 5), )
if mibBuilder.loadTexts: docsRphyPtpCcapPortDataSetTable.setStatus('current')
docsRphyPtpCcapPortDataSetEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4491, 2, 1, 32, 1, 2, 5, 1), ).setIndexNames((0, "DOCS-RPHY-PTP-MIB", "docsRphyPtpCcapPortDataSetPortNumber"))
if mibBuilder.loadTexts: docsRphyPtpCcapPortDataSetEntry.setStatus('current')
docsRphyPtpCcapPortDataSetPortNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 32, 1, 2, 5, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)))
if mibBuilder.loadTexts: docsRphyPtpCcapPortDataSetPortNumber.setStatus('current')
docsRphyPtpCcapPortDataSetPortState = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 32, 1, 2, 5, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyPtpCcapPortDataSetPortState.setStatus('current')
docsRphyPtpCcapPortDataSetMeanPathDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 32, 1, 2, 5, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyPtpCcapPortDataSetMeanPathDelay.setStatus('current')
docsRphyPtpCcapClockStatus = MibIdentifier((1, 3, 6, 1, 4, 1, 4491, 2, 1, 32, 1, 2, 6))
docsRphyPtpCcapClockStatusClockState = MibScalar((1, 3, 6, 1, 4, 1, 4491, 2, 1, 32, 1, 2, 6, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("freerun", 1), ("holdover", 2), ("acquiring", 3), ("freqLocked", 4), ("phaseAligned", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyPtpCcapClockStatusClockState.setStatus('current')
docsRphyPtpCcapClockStatusLastStateChange = MibScalar((1, 3, 6, 1, 4, 1, 4491, 2, 1, 32, 1, 2, 6, 2), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyPtpCcapClockStatusLastStateChange.setStatus('current')
docsRphyPtpCcapClockStatusPacketsSent = MibScalar((1, 3, 6, 1, 4, 1, 4491, 2, 1, 32, 1, 2, 6, 3), Counter64()).setUnits('Packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyPtpCcapClockStatusPacketsSent.setStatus('current')
docsRphyPtpCcapClockStatusPacketsReceived = MibScalar((1, 3, 6, 1, 4, 1, 4491, 2, 1, 32, 1, 2, 6, 4), Counter64()).setUnits('Packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyPtpCcapClockStatusPacketsReceived.setStatus('current')
docsRphyPtpCcapClockStatusComputedPhaseOffset = MibScalar((1, 3, 6, 1, 4, 1, 4491, 2, 1, 32, 1, 2, 6, 5), Unsigned32()).setUnits('Nanoseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyPtpCcapClockStatusComputedPhaseOffset.setStatus('current')
docsRphyPtpCcapClockStatusCounterDiscontinuityTime = MibScalar((1, 3, 6, 1, 4, 1, 4491, 2, 1, 32, 1, 2, 6, 6), TimeStamp()).setUnits('TimeTicks').setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyPtpCcapClockStatusCounterDiscontinuityTime.setStatus('current')
docsRphyPtpCcapCorePtpPortStatusTable = MibTable((1, 3, 6, 1, 4, 1, 4491, 2, 1, 32, 1, 2, 7), )
if mibBuilder.loadTexts: docsRphyPtpCcapCorePtpPortStatusTable.setStatus('current')
docsRphyPtpCcapCorePtpPortStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4491, 2, 1, 32, 1, 2, 7, 1), ).setIndexNames((0, "DOCS-RPHY-PTP-MIB", "docsRphyPtpCcapCorePtpPortStatusPortNumber"))
if mibBuilder.loadTexts: docsRphyPtpCcapCorePtpPortStatusEntry.setStatus('current')
docsRphyPtpCcapCorePtpPortStatusPortNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 32, 1, 2, 7, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255)))
if mibBuilder.loadTexts: docsRphyPtpCcapCorePtpPortStatusPortNumber.setStatus('current')
docsRphyPtpCcapCorePtpPortStatusPacketsSent = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 32, 1, 2, 7, 1, 2), Counter64()).setUnits('Packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyPtpCcapCorePtpPortStatusPacketsSent.setStatus('current')
docsRphyPtpCcapCorePtpPortStatusPacketsReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 32, 1, 2, 7, 1, 3), Counter64()).setUnits('Packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyPtpCcapCorePtpPortStatusPacketsReceived.setStatus('current')
docsRphyPtpCcapCorePtpPortStatusCounterDiscontinuityTime = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 32, 1, 2, 7, 1, 4), TimeStamp()).setUnits('TimeTicks').setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyPtpCcapCorePtpPortStatusCounterDiscontinuityTime.setStatus('current')
docsRphyPtpCcapPortMasterClockStatusTable = MibTable((1, 3, 6, 1, 4, 1, 4491, 2, 1, 32, 1, 2, 8), )
if mibBuilder.loadTexts: docsRphyPtpCcapPortMasterClockStatusTable.setStatus('current')
docsRphyPtpCcapPortMasterClockStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4491, 2, 1, 32, 1, 2, 8, 1), ).setIndexNames((0, "DOCS-RPHY-PTP-MIB", "docsRphyPtpCcapCorePtpPortStatusPortNumber"), (0, "DOCS-RPHY-PTP-MIB", "docsRphyPtpCcapPortMasterClockStatusMasterPriority"))
if mibBuilder.loadTexts: docsRphyPtpCcapPortMasterClockStatusEntry.setStatus('current')
docsRphyPtpCcapPortMasterClockStatusMasterPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 32, 1, 2, 8, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 5)))
if mibBuilder.loadTexts: docsRphyPtpCcapPortMasterClockStatusMasterPriority.setStatus('current')
docsRphyPtpCcapPortMasterClockStatusPacketsSent = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 32, 1, 2, 8, 1, 2), Counter64()).setUnits('Packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyPtpCcapPortMasterClockStatusPacketsSent.setStatus('current')
docsRphyPtpCcapPortMasterClockStatusPacketsReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 32, 1, 2, 8, 1, 3), Counter64()).setUnits('Packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyPtpCcapPortMasterClockStatusPacketsReceived.setStatus('current')
docsRphyPtpCcapPortMasterClockStatusMasterClockId = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 32, 1, 2, 8, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(8, 8)).setFixedLength(8)).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyPtpCcapPortMasterClockStatusMasterClockId.setStatus('current')
docsRphyPtpCcapPortMasterClockStatusMasterClockPortNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 32, 1, 2, 8, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyPtpCcapPortMasterClockStatusMasterClockPortNumber.setStatus('current')
docsRphyPtpCcapPortMasterClockStatusTwoStepFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 32, 1, 2, 8, 1, 6), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyPtpCcapPortMasterClockStatusTwoStepFlag.setStatus('current')
docsRphyPtpCcapPortMasterClockStatusIsBmc = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 32, 1, 2, 8, 1, 7), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyPtpCcapPortMasterClockStatusIsBmc.setStatus('current')
docsRphyPtpCcapPortMasterClockStatusIsMasterConnected = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 32, 1, 2, 8, 1, 8), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyPtpCcapPortMasterClockStatusIsMasterConnected.setStatus('current')
docsRphyPtpCcapPortMasterClockStatusStatusDomain = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 32, 1, 2, 8, 1, 9), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyPtpCcapPortMasterClockStatusStatusDomain.setStatus('current')
docsRphyPtpCcapPortMasterClockStatusFreqOffset = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 32, 1, 2, 8, 1, 10), Unsigned32()).setUnits('PPM').setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyPtpCcapPortMasterClockStatusFreqOffset.setStatus('current')
docsRphyPtpCcapPortMasterClockStatusCounterDiscontinuityTime = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 32, 1, 2, 8, 1, 11), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyPtpCcapPortMasterClockStatusCounterDiscontinuityTime.setStatus('current')
docsRphyPtpRpdCurrentDataSetTable = MibTable((1, 3, 6, 1, 4, 1, 4491, 2, 1, 32, 1, 1, 1), )
if mibBuilder.loadTexts: docsRphyPtpRpdCurrentDataSetTable.setStatus('current')
docsRphyPtpRpdCurrentDataSetEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4491, 2, 1, 32, 1, 1, 1, 1), ).setIndexNames((0, "DOCS-RPHY-MIB", "docsRphyRpdDevInfoUniqueId"))
if mibBuilder.loadTexts: docsRphyPtpRpdCurrentDataSetEntry.setStatus('current')
docsRphyPtpRpdCurrentDataSetStepsRemoved = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 32, 1, 1, 1, 1, 1), Unsigned32()).setUnits('steps').setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyPtpRpdCurrentDataSetStepsRemoved.setStatus('current')
docsRphyPtpRpdCurrentDataSetOffsetFromMaster = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 32, 1, 1, 1, 1, 2), Integer32()).setUnits('Nanoseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyPtpRpdCurrentDataSetOffsetFromMaster.setStatus('current')
docsRphyPtpRpdCurrentDataSetMeanPathDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 32, 1, 1, 1, 1, 3), Unsigned32()).setUnits('Nanoseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyPtpRpdCurrentDataSetMeanPathDelay.setStatus('current')
docsRphyPtpRpdClockStatusTable = MibTable((1, 3, 6, 1, 4, 1, 4491, 2, 1, 32, 1, 1, 2), )
if mibBuilder.loadTexts: docsRphyPtpRpdClockStatusTable.setStatus('current')
docsRphyPtpRpdClockStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4491, 2, 1, 32, 1, 1, 2, 1), ).setIndexNames((0, "DOCS-RPHY-MIB", "docsRphyRpdDevInfoUniqueId"))
if mibBuilder.loadTexts: docsRphyPtpRpdClockStatusEntry.setStatus('current')
docsRphyPtpRpdClockStatusClockState = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 32, 1, 1, 2, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("freerun", 1), ("holdover", 2), ("acquiring", 3), ("freqLocked", 4), ("phaseAligned", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyPtpRpdClockStatusClockState.setStatus('current')
docsRphyPtpRpdClockStatusLastStateChange = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 32, 1, 1, 2, 1, 2), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyPtpRpdClockStatusLastStateChange.setStatus('current')
docsRphyPtpRpdClockStatusPacketsSent = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 32, 1, 1, 2, 1, 3), Counter64()).setUnits('Packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyPtpRpdClockStatusPacketsSent.setStatus('current')
docsRphyPtpRpdClockStatusPacketsReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 32, 1, 1, 2, 1, 4), Counter64()).setUnits('Packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyPtpRpdClockStatusPacketsReceived.setStatus('current')
docsRphyPtpRpdClockStatusComputedPhaseOffset = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 32, 1, 1, 2, 1, 5), Unsigned32()).setUnits('Nanoseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyPtpRpdClockStatusComputedPhaseOffset.setStatus('current')
docsRphyPtpRpdClockStatusCounterDiscontinuityTime = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 32, 1, 1, 2, 1, 6), TimeStamp()).setUnits('TimeTicks').setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyPtpRpdClockStatusCounterDiscontinuityTime.setStatus('current')
docsRphyPtpRpdPortDataSetTable = MibTable((1, 3, 6, 1, 4, 1, 4491, 2, 1, 32, 1, 1, 3), )
if mibBuilder.loadTexts: docsRphyPtpRpdPortDataSetTable.setStatus('current')
docsRphyPtpRpdPortDataSetEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4491, 2, 1, 32, 1, 1, 3, 1), ).setIndexNames((0, "DOCS-RPHY-MIB", "docsRphyRpdDevInfoUniqueId"), (0, "DOCS-RPHY-PTP-MIB", "docsRphyPtpRpdPortDataSetPortNumber"))
if mibBuilder.loadTexts: docsRphyPtpRpdPortDataSetEntry.setStatus('current')
docsRphyPtpRpdPortDataSetPortNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 32, 1, 1, 3, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)))
if mibBuilder.loadTexts: docsRphyPtpRpdPortDataSetPortNumber.setStatus('current')
docsRphyPtpRpdPortDataSetPortState = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 32, 1, 1, 3, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyPtpRpdPortDataSetPortState.setStatus('current')
docsRphyPtpRpdPortDataSetMeanPathDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 32, 1, 1, 3, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyPtpRpdPortDataSetMeanPathDelay.setStatus('current')
docsRphyPtpRpdPtpPortStatusTable = MibTable((1, 3, 6, 1, 4, 1, 4491, 2, 1, 32, 1, 1, 4), )
if mibBuilder.loadTexts: docsRphyPtpRpdPtpPortStatusTable.setStatus('current')
docsRphyPtpRpdPtpPortStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4491, 2, 1, 32, 1, 1, 4, 1), ).setIndexNames((0, "DOCS-RPHY-MIB", "docsRphyRpdDevInfoUniqueId"), (0, "DOCS-RPHY-PTP-MIB", "docsRphyPtpRpdPtpPortStatusPortNumber"), (0, "DOCS-RPHY-PTP-MIB", "docsRphyPtpRpdPtpPortStatusRpdEnetPortIndex"), (0, "DOCS-RPHY-PTP-MIB", "docsRphyPtpRpdPtpPortStatusRpdPtpPortIndex"))
if mibBuilder.loadTexts: docsRphyPtpRpdPtpPortStatusEntry.setStatus('current')
docsRphyPtpRpdPtpPortStatusPortNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 32, 1, 1, 4, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255)))
if mibBuilder.loadTexts: docsRphyPtpRpdPtpPortStatusPortNumber.setStatus('current')
docsRphyPtpRpdPtpPortStatusRpdEnetPortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 32, 1, 1, 4, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255)))
if mibBuilder.loadTexts: docsRphyPtpRpdPtpPortStatusRpdEnetPortIndex.setStatus('current')
docsRphyPtpRpdPtpPortStatusRpdPtpPortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 32, 1, 1, 4, 1, 3), Unsigned32())
if mibBuilder.loadTexts: docsRphyPtpRpdPtpPortStatusRpdPtpPortIndex.setStatus('current')
docsRphyPtpRpdPtpPortStatusPacketsSent = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 32, 1, 1, 4, 1, 4), Counter64()).setUnits('Packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyPtpRpdPtpPortStatusPacketsSent.setStatus('current')
docsRphyPtpRpdPtpPortStatusPacketsReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 32, 1, 1, 4, 1, 5), Counter64()).setUnits('Packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyPtpRpdPtpPortStatusPacketsReceived.setStatus('current')
docsRphyPtpRpdPtpPortStatusCounterDiscontinuityTime = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 32, 1, 1, 4, 1, 6), TimeStamp()).setUnits('TimeTicks').setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyPtpRpdPtpPortStatusCounterDiscontinuityTime.setStatus('current')
docsRphyPtpRpdPortMasterClockStatusTable = MibTable((1, 3, 6, 1, 4, 1, 4491, 2, 1, 32, 1, 1, 5), )
if mibBuilder.loadTexts: docsRphyPtpRpdPortMasterClockStatusTable.setStatus('current')
docsRphyPtpRpdPortMasterClockStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4491, 2, 1, 32, 1, 1, 5, 1), ).setIndexNames((0, "DOCS-RPHY-MIB", "docsRphyRpdDevInfoUniqueId"), (0, "DOCS-RPHY-PTP-MIB", "docsRphyPtpRpdPtpPortStatusRpdEnetPortIndex"), (0, "DOCS-RPHY-PTP-MIB", "docsRphyPtpRpdPtpPortStatusRpdPtpPortIndex"), (0, "DOCS-RPHY-PTP-MIB", "docsRphyPtpRpdPortMasterClockStatusMasterPriority"))
if mibBuilder.loadTexts: docsRphyPtpRpdPortMasterClockStatusEntry.setStatus('current')
docsRphyPtpRpdPortMasterClockStatusMasterPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 32, 1, 1, 5, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 5)))
if mibBuilder.loadTexts: docsRphyPtpRpdPortMasterClockStatusMasterPriority.setStatus('current')
docsRphyPtpRpdPortMasterClockStatusPacketsSent = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 32, 1, 1, 5, 1, 2), Counter64()).setUnits('Packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyPtpRpdPortMasterClockStatusPacketsSent.setStatus('current')
docsRphyPtpRpdPortMasterClockStatusPacketsReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 32, 1, 1, 5, 1, 3), Counter64()).setUnits('Packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyPtpRpdPortMasterClockStatusPacketsReceived.setStatus('current')
docsRphyPtpRpdPortMasterClockStatusMasterClockId = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 32, 1, 1, 5, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(8, 8)).setFixedLength(8)).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyPtpRpdPortMasterClockStatusMasterClockId.setStatus('current')
docsRphyPtpRpdPortMasterClockStatusMasterClockPortNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 32, 1, 1, 5, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyPtpRpdPortMasterClockStatusMasterClockPortNumber.setStatus('current')
docsRphyPtpRpdPortMasterClockStatusTwoStepFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 32, 1, 1, 5, 1, 6), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyPtpRpdPortMasterClockStatusTwoStepFlag.setStatus('current')
docsRphyPtpRpdPortMasterClockStatusIsBmc = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 32, 1, 1, 5, 1, 7), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyPtpRpdPortMasterClockStatusIsBmc.setStatus('current')
docsRphyPtpRpdPortMasterClockStatusIsMasterConnected = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 32, 1, 1, 5, 1, 8), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyPtpRpdPortMasterClockStatusIsMasterConnected.setStatus('current')
docsRphyPtpRpdPortMasterClockStatusStatusDomain = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 32, 1, 1, 5, 1, 9), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyPtpRpdPortMasterClockStatusStatusDomain.setStatus('current')
docsRphyPtpRpdPortMasterClockStatusFreqOffset = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 32, 1, 1, 5, 1, 10), Unsigned32()).setUnits('PPM').setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyPtpRpdPortMasterClockStatusFreqOffset.setStatus('current')
docsRphyPtpRpdPortMasterClockStatusCounterDiscontinuityTime = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 32, 1, 1, 5, 1, 11), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyPtpRpdPortMasterClockStatusCounterDiscontinuityTime.setStatus('current')
docsRphyPtpCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 4491, 2, 1, 32, 2, 1, 1)).setObjects(("DOCS-RPHY-PTP-MIB", "docsRphyPtpRpdGroup"), ("DOCS-RPHY-PTP-MIB", "docsRphyPtpCcapCoreGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    docsRphyPtpCompliance = docsRphyPtpCompliance.setStatus('current')
docsRphyPtpRpdGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 4491, 2, 1, 32, 2, 2, 1)).setObjects(("DOCS-RPHY-PTP-MIB", "docsRphyPtpRpdCurrentDataSetStepsRemoved"), ("DOCS-RPHY-PTP-MIB", "docsRphyPtpRpdCurrentDataSetOffsetFromMaster"), ("DOCS-RPHY-PTP-MIB", "docsRphyPtpRpdCurrentDataSetMeanPathDelay"), ("DOCS-RPHY-PTP-MIB", "docsRphyPtpRpdClockStatusClockState"), ("DOCS-RPHY-PTP-MIB", "docsRphyPtpRpdClockStatusLastStateChange"), ("DOCS-RPHY-PTP-MIB", "docsRphyPtpRpdClockStatusPacketsSent"), ("DOCS-RPHY-PTP-MIB", "docsRphyPtpRpdClockStatusPacketsReceived"), ("DOCS-RPHY-PTP-MIB", "docsRphyPtpRpdClockStatusComputedPhaseOffset"), ("DOCS-RPHY-PTP-MIB", "docsRphyPtpRpdClockStatusCounterDiscontinuityTime"), ("DOCS-RPHY-PTP-MIB", "docsRphyPtpRpdPortDataSetPortState"), ("DOCS-RPHY-PTP-MIB", "docsRphyPtpRpdPortDataSetMeanPathDelay"), ("DOCS-RPHY-PTP-MIB", "docsRphyPtpRpdPtpPortStatusPacketsSent"), ("DOCS-RPHY-PTP-MIB", "docsRphyPtpRpdPtpPortStatusPacketsReceived"), ("DOCS-RPHY-PTP-MIB", "docsRphyPtpRpdPtpPortStatusCounterDiscontinuityTime"), ("DOCS-RPHY-PTP-MIB", "docsRphyPtpRpdPortMasterClockStatusPacketsSent"), ("DOCS-RPHY-PTP-MIB", "docsRphyPtpRpdPortMasterClockStatusPacketsReceived"), ("DOCS-RPHY-PTP-MIB", "docsRphyPtpRpdPortMasterClockStatusMasterClockId"), ("DOCS-RPHY-PTP-MIB", "docsRphyPtpRpdPortMasterClockStatusMasterClockPortNumber"), ("DOCS-RPHY-PTP-MIB", "docsRphyPtpRpdPortMasterClockStatusTwoStepFlag"), ("DOCS-RPHY-PTP-MIB", "docsRphyPtpRpdPortMasterClockStatusIsBmc"), ("DOCS-RPHY-PTP-MIB", "docsRphyPtpRpdPortMasterClockStatusIsMasterConnected"), ("DOCS-RPHY-PTP-MIB", "docsRphyPtpRpdPortMasterClockStatusStatusDomain"), ("DOCS-RPHY-PTP-MIB", "docsRphyPtpRpdPortMasterClockStatusFreqOffset"), ("DOCS-RPHY-PTP-MIB", "docsRphyPtpRpdPortMasterClockStatusCounterDiscontinuityTime"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    docsRphyPtpRpdGroup = docsRphyPtpRpdGroup.setStatus('current')
docsRphyPtpCcapCoreGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 4491, 2, 1, 32, 2, 2, 2)).setObjects(("DOCS-RPHY-PTP-MIB", "docsRphyPtpCcapDefaultDataSetTwoStepFlag"), ("DOCS-RPHY-PTP-MIB", "docsRphyPtpCcapDefaultDataSetClockIdentity"), ("DOCS-RPHY-PTP-MIB", "docsRphyPtpCcapDefaultDataSetPriority1"), ("DOCS-RPHY-PTP-MIB", "docsRphyPtpCcapDefaultDataSetPriority2"), ("DOCS-RPHY-PTP-MIB", "docsRphyPtpCcapDefaultDataSetSlaveOnly"), ("DOCS-RPHY-PTP-MIB", "docsRphyPtpCcapDefaultDataSetQualityClass"), ("DOCS-RPHY-PTP-MIB", "docsRphyPtpCcapDefaultDataSetQualityAccuracy"), ("DOCS-RPHY-PTP-MIB", "docsRphyPtpCcapDefaultDataSetQualityOffset"), ("DOCS-RPHY-PTP-MIB", "docsRphyPtpCcapCurrentDataSetStepsRemoved"), ("DOCS-RPHY-PTP-MIB", "docsRphyPtpCcapCurrentDataSetOffsetFromMaster"), ("DOCS-RPHY-PTP-MIB", "docsRphyPtpCcapCurrentDataSetMeanPathDelay"), ("DOCS-RPHY-PTP-MIB", "docsRphyPtpCcapParentDataSetParentClockId"), ("DOCS-RPHY-PTP-MIB", "docsRphyPtpCcapParentDataSetParentPortNumber"), ("DOCS-RPHY-PTP-MIB", "docsRphyPtpCcapParentDataSetParentStats"), ("DOCS-RPHY-PTP-MIB", "docsRphyPtpCcapParentDataSetClockOffset"), ("DOCS-RPHY-PTP-MIB", "docsRphyPtpCcapParentDataSetPhaseChangeRate"), ("DOCS-RPHY-PTP-MIB", "docsRphyPtpCcapParentDataSetGmClockIdentity"), ("DOCS-RPHY-PTP-MIB", "docsRphyPtpCcapParentDataSetGmPriority1"), ("DOCS-RPHY-PTP-MIB", "docsRphyPtpCcapParentDataSetGmPriority2"), ("DOCS-RPHY-PTP-MIB", "docsRphyPtpCcapParentDataSetGmQualityClass"), ("DOCS-RPHY-PTP-MIB", "docsRphyPtpCcapParentDataSetGmQualityAccuracy"), ("DOCS-RPHY-PTP-MIB", "docsRphyPtpCcapParentDataSetGmQualityOffset"), ("DOCS-RPHY-PTP-MIB", "docsRphyPtpCcapTimePropertiesCurrentUtcOffsetValid"), ("DOCS-RPHY-PTP-MIB", "docsRphyPtpCcapTimePropertiesCurrentUtcOffset"), ("DOCS-RPHY-PTP-MIB", "docsRphyPtpCcapTimePropertiesLeap59"), ("DOCS-RPHY-PTP-MIB", "docsRphyPtpCcapTimePropertiesLeap61"), ("DOCS-RPHY-PTP-MIB", "docsRphyPtpCcapTimePropertiesTimeTraceable"), ("DOCS-RPHY-PTP-MIB", "docsRphyPtpCcapTimePropertiesFreqTraceable"), ("DOCS-RPHY-PTP-MIB", "docsRphyPtpCcapTimePropertiesPtpTimescale"), ("DOCS-RPHY-PTP-MIB", "docsRphyPtpCcapTimePropertiesTimeSource"), ("DOCS-RPHY-PTP-MIB", "docsRphyPtpCcapPortDataSetPortState"), ("DOCS-RPHY-PTP-MIB", "docsRphyPtpCcapPortDataSetMeanPathDelay"), ("DOCS-RPHY-PTP-MIB", "docsRphyPtpCcapClockStatusClockState"), ("DOCS-RPHY-PTP-MIB", "docsRphyPtpCcapClockStatusLastStateChange"), ("DOCS-RPHY-PTP-MIB", "docsRphyPtpCcapClockStatusPacketsSent"), ("DOCS-RPHY-PTP-MIB", "docsRphyPtpCcapClockStatusPacketsReceived"), ("DOCS-RPHY-PTP-MIB", "docsRphyPtpCcapClockStatusComputedPhaseOffset"), ("DOCS-RPHY-PTP-MIB", "docsRphyPtpCcapClockStatusCounterDiscontinuityTime"), ("DOCS-RPHY-PTP-MIB", "docsRphyPtpCcapCorePtpPortStatusPacketsSent"), ("DOCS-RPHY-PTP-MIB", "docsRphyPtpCcapCorePtpPortStatusPacketsReceived"), ("DOCS-RPHY-PTP-MIB", "docsRphyPtpCcapCorePtpPortStatusCounterDiscontinuityTime"), ("DOCS-RPHY-PTP-MIB", "docsRphyPtpCcapPortMasterClockStatusPacketsSent"), ("DOCS-RPHY-PTP-MIB", "docsRphyPtpCcapPortMasterClockStatusPacketsReceived"), ("DOCS-RPHY-PTP-MIB", "docsRphyPtpCcapPortMasterClockStatusMasterClockId"), ("DOCS-RPHY-PTP-MIB", "docsRphyPtpCcapPortMasterClockStatusMasterClockPortNumber"), ("DOCS-RPHY-PTP-MIB", "docsRphyPtpCcapPortMasterClockStatusTwoStepFlag"), ("DOCS-RPHY-PTP-MIB", "docsRphyPtpCcapPortMasterClockStatusIsBmc"), ("DOCS-RPHY-PTP-MIB", "docsRphyPtpCcapPortMasterClockStatusIsMasterConnected"), ("DOCS-RPHY-PTP-MIB", "docsRphyPtpCcapPortMasterClockStatusStatusDomain"), ("DOCS-RPHY-PTP-MIB", "docsRphyPtpCcapPortMasterClockStatusFreqOffset"), ("DOCS-RPHY-PTP-MIB", "docsRphyPtpCcapPortMasterClockStatusCounterDiscontinuityTime"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    docsRphyPtpCcapCoreGroup = docsRphyPtpCcapCoreGroup.setStatus('current')
mibBuilder.exportSymbols("DOCS-RPHY-PTP-MIB", docsRphyPtpRpdPortDataSetEntry=docsRphyPtpRpdPortDataSetEntry, docsRphyPtpCcapParentDataSetParentStats=docsRphyPtpCcapParentDataSetParentStats, PYSNMP_MODULE_ID=docsRphyPtpMib, docsRphyPtpCcapClockStatusClockState=docsRphyPtpCcapClockStatusClockState, docsRphyPtpConformance=docsRphyPtpConformance, docsRphyPtpObjects=docsRphyPtpObjects, docsRphyPtpRpdClockStatusPacketsReceived=docsRphyPtpRpdClockStatusPacketsReceived, docsRphyPtpRpdPortDataSetPortState=docsRphyPtpRpdPortDataSetPortState, docsRphyPtpCcapDefaultDataSetQualityAccuracy=docsRphyPtpCcapDefaultDataSetQualityAccuracy, docsRphyPtpCcapMibObjects=docsRphyPtpCcapMibObjects, docsRphyPtpCcapPortDataSetPortNumber=docsRphyPtpCcapPortDataSetPortNumber, docsRphyPtpCcapCorePtpPortStatusPacketsReceived=docsRphyPtpCcapCorePtpPortStatusPacketsReceived, docsRphyPtpCcapClockStatusLastStateChange=docsRphyPtpCcapClockStatusLastStateChange, docsRphyPtpRpdClockStatusLastStateChange=docsRphyPtpRpdClockStatusLastStateChange, docsRphyPtpRpdPtpPortStatusPacketsSent=docsRphyPtpRpdPtpPortStatusPacketsSent, docsRphyPtpCcapClockStatus=docsRphyPtpCcapClockStatus, docsRphyPtpRpdGroup=docsRphyPtpRpdGroup, docsRphyPtpRpdPortMasterClockStatusMasterPriority=docsRphyPtpRpdPortMasterClockStatusMasterPriority, docsRphyPtpCcapPortMasterClockStatusTwoStepFlag=docsRphyPtpCcapPortMasterClockStatusTwoStepFlag, docsRphyPtpCcapPortMasterClockStatusMasterClockPortNumber=docsRphyPtpCcapPortMasterClockStatusMasterClockPortNumber, docsRphyPtpCcapClockStatusPacketsSent=docsRphyPtpCcapClockStatusPacketsSent, docsRphyPtpRpdPortDataSetMeanPathDelay=docsRphyPtpRpdPortDataSetMeanPathDelay, docsRphyPtpRpdMibObjects=docsRphyPtpRpdMibObjects, docsRphyPtpCcapTimePropertiesLeap61=docsRphyPtpCcapTimePropertiesLeap61, docsRphyPtpCcapCurrentDataSet=docsRphyPtpCcapCurrentDataSet, docsRphyPtpRpdPtpPortStatusPacketsReceived=docsRphyPtpRpdPtpPortStatusPacketsReceived, docsRphyPtpCcapPortMasterClockStatusPacketsReceived=docsRphyPtpCcapPortMasterClockStatusPacketsReceived, docsRphyPtpCcapParentDataSetGmQualityClass=docsRphyPtpCcapParentDataSetGmQualityClass, docsRphyPtpRpdCurrentDataSetOffsetFromMaster=docsRphyPtpRpdCurrentDataSetOffsetFromMaster, docsRphyPtpRpdPortMasterClockStatusEntry=docsRphyPtpRpdPortMasterClockStatusEntry, docsRphyPtpRpdPortMasterClockStatusPacketsReceived=docsRphyPtpRpdPortMasterClockStatusPacketsReceived, docsRphyPtpCompliances=docsRphyPtpCompliances, docsRphyPtpRpdPortMasterClockStatusMasterClockPortNumber=docsRphyPtpRpdPortMasterClockStatusMasterClockPortNumber, docsRphyPtpCcapCurrentDataSetOffsetFromMaster=docsRphyPtpCcapCurrentDataSetOffsetFromMaster, docsRphyPtpRpdPortMasterClockStatusTwoStepFlag=docsRphyPtpRpdPortMasterClockStatusTwoStepFlag, docsRphyPtpRpdPortMasterClockStatusStatusDomain=docsRphyPtpRpdPortMasterClockStatusStatusDomain, docsRphyPtpCcapParentDataSet=docsRphyPtpCcapParentDataSet, docsRphyPtpCcapTimePropertiesTimeTraceable=docsRphyPtpCcapTimePropertiesTimeTraceable, docsRphyPtpCcapClockStatusComputedPhaseOffset=docsRphyPtpCcapClockStatusComputedPhaseOffset, docsRphyPtpRpdPtpPortStatusTable=docsRphyPtpRpdPtpPortStatusTable, docsRphyPtpCcapPortMasterClockStatusIsMasterConnected=docsRphyPtpCcapPortMasterClockStatusIsMasterConnected, docsRphyPtpRpdPtpPortStatusEntry=docsRphyPtpRpdPtpPortStatusEntry, docsRphyPtpCcapCorePtpPortStatusEntry=docsRphyPtpCcapCorePtpPortStatusEntry, docsRphyPtpCcapParentDataSetClockOffset=docsRphyPtpCcapParentDataSetClockOffset, docsRphyPtpCcapTimePropertiesPtpTimescale=docsRphyPtpCcapTimePropertiesPtpTimescale, docsRphyPtpCcapCurrentDataSetMeanPathDelay=docsRphyPtpCcapCurrentDataSetMeanPathDelay, docsRphyPtpCcapTimeProperties=docsRphyPtpCcapTimeProperties, docsRphyPtpRpdCurrentDataSetMeanPathDelay=docsRphyPtpRpdCurrentDataSetMeanPathDelay, docsRphyPtpRpdPortMasterClockStatusIsMasterConnected=docsRphyPtpRpdPortMasterClockStatusIsMasterConnected, docsRphyPtpRpdCurrentDataSetTable=docsRphyPtpRpdCurrentDataSetTable, docsRphyPtpRpdPtpPortStatusRpdEnetPortIndex=docsRphyPtpRpdPtpPortStatusRpdEnetPortIndex, docsRphyPtpCcapParentDataSetGmQualityAccuracy=docsRphyPtpCcapParentDataSetGmQualityAccuracy, docsRphyPtpRpdPortMasterClockStatusIsBmc=docsRphyPtpRpdPortMasterClockStatusIsBmc, docsRphyPtpRpdPortDataSetPortNumber=docsRphyPtpRpdPortDataSetPortNumber, docsRphyPtpCcapPortDataSetMeanPathDelay=docsRphyPtpCcapPortDataSetMeanPathDelay, docsRphyPtpCcapTimePropertiesCurrentUtcOffset=docsRphyPtpCcapTimePropertiesCurrentUtcOffset, docsRphyPtpRpdClockStatusClockState=docsRphyPtpRpdClockStatusClockState, docsRphyPtpCcapParentDataSetParentPortNumber=docsRphyPtpCcapParentDataSetParentPortNumber, docsRphyPtpCcapPortMasterClockStatusPacketsSent=docsRphyPtpCcapPortMasterClockStatusPacketsSent, docsRphyPtpRpdCurrentDataSetStepsRemoved=docsRphyPtpRpdCurrentDataSetStepsRemoved, docsRphyPtpCcapDefaultDataSet=docsRphyPtpCcapDefaultDataSet, docsRphyPtpCcapDefaultDataSetPriority1=docsRphyPtpCcapDefaultDataSetPriority1, docsRphyPtpCcapParentDataSetPhaseChangeRate=docsRphyPtpCcapParentDataSetPhaseChangeRate, docsRphyPtpCcapPortMasterClockStatusCounterDiscontinuityTime=docsRphyPtpCcapPortMasterClockStatusCounterDiscontinuityTime, docsRphyPtpCcapClockStatusPacketsReceived=docsRphyPtpCcapClockStatusPacketsReceived, docsRphyPtpCcapCurrentDataSetStepsRemoved=docsRphyPtpCcapCurrentDataSetStepsRemoved, docsRphyPtpRpdClockStatusEntry=docsRphyPtpRpdClockStatusEntry, docsRphyPtpGroups=docsRphyPtpGroups, docsRphyPtpCcapPortMasterClockStatusTable=docsRphyPtpCcapPortMasterClockStatusTable, docsRphyPtpNotifications=docsRphyPtpNotifications, docsRphyPtpCcapParentDataSetGmClockIdentity=docsRphyPtpCcapParentDataSetGmClockIdentity, docsRphyPtpCcapTimePropertiesCurrentUtcOffsetValid=docsRphyPtpCcapTimePropertiesCurrentUtcOffsetValid, docsRphyPtpRpdPtpPortStatusRpdPtpPortIndex=docsRphyPtpRpdPtpPortStatusRpdPtpPortIndex, docsRphyPtpCcapDefaultDataSetQualityClass=docsRphyPtpCcapDefaultDataSetQualityClass, docsRphyPtpCcapDefaultDataSetSlaveOnly=docsRphyPtpCcapDefaultDataSetSlaveOnly, docsRphyPtpCcapCorePtpPortStatusPortNumber=docsRphyPtpCcapCorePtpPortStatusPortNumber, docsRphyPtpCcapPortMasterClockStatusStatusDomain=docsRphyPtpCcapPortMasterClockStatusStatusDomain, docsRphyPtpCompliance=docsRphyPtpCompliance, docsRphyPtpCcapParentDataSetGmPriority1=docsRphyPtpCcapParentDataSetGmPriority1, docsRphyPtpCcapDefaultDataSetClockIdentity=docsRphyPtpCcapDefaultDataSetClockIdentity, docsRphyPtpRpdPortMasterClockStatusPacketsSent=docsRphyPtpRpdPortMasterClockStatusPacketsSent, docsRphyPtpRpdPortMasterClockStatusMasterClockId=docsRphyPtpRpdPortMasterClockStatusMasterClockId, docsRphyPtpCcapPortDataSetTable=docsRphyPtpCcapPortDataSetTable, docsRphyPtpCcapCorePtpPortStatusPacketsSent=docsRphyPtpCcapCorePtpPortStatusPacketsSent, docsRphyPtpCcapTimePropertiesFreqTraceable=docsRphyPtpCcapTimePropertiesFreqTraceable, docsRphyPtpRpdClockStatusTable=docsRphyPtpRpdClockStatusTable, docsRphyPtpCcapPortMasterClockStatusIsBmc=docsRphyPtpCcapPortMasterClockStatusIsBmc, docsRphyPtpCcapParentDataSetGmPriority2=docsRphyPtpCcapParentDataSetGmPriority2, docsRphyPtpRpdClockStatusComputedPhaseOffset=docsRphyPtpRpdClockStatusComputedPhaseOffset, docsRphyPtpCcapCorePtpPortStatusCounterDiscontinuityTime=docsRphyPtpCcapCorePtpPortStatusCounterDiscontinuityTime, docsRphyPtpCcapClockStatusCounterDiscontinuityTime=docsRphyPtpCcapClockStatusCounterDiscontinuityTime, docsRphyPtpCcapParentDataSetParentClockId=docsRphyPtpCcapParentDataSetParentClockId, docsRphyPtpRpdPtpPortStatusCounterDiscontinuityTime=docsRphyPtpRpdPtpPortStatusCounterDiscontinuityTime, docsRphyPtpCcapTimePropertiesLeap59=docsRphyPtpCcapTimePropertiesLeap59, docsRphyPtpMib=docsRphyPtpMib, docsRphyPtpCcapDefaultDataSetTwoStepFlag=docsRphyPtpCcapDefaultDataSetTwoStepFlag, docsRphyPtpRpdPortMasterClockStatusTable=docsRphyPtpRpdPortMasterClockStatusTable, docsRphyPtpCcapPortMasterClockStatusMasterClockId=docsRphyPtpCcapPortMasterClockStatusMasterClockId, docsRphyPtpRpdClockStatusPacketsSent=docsRphyPtpRpdClockStatusPacketsSent, docsRphyPtpCcapPortMasterClockStatusMasterPriority=docsRphyPtpCcapPortMasterClockStatusMasterPriority, docsRphyPtpCcapPortDataSetPortState=docsRphyPtpCcapPortDataSetPortState, docsRphyPtpCcapDefaultDataSetPriority2=docsRphyPtpCcapDefaultDataSetPriority2, docsRphyPtpRpdClockStatusCounterDiscontinuityTime=docsRphyPtpRpdClockStatusCounterDiscontinuityTime, docsRphyPtpRpdPortMasterClockStatusCounterDiscontinuityTime=docsRphyPtpRpdPortMasterClockStatusCounterDiscontinuityTime, docsRphyPtpCcapPortDataSetEntry=docsRphyPtpCcapPortDataSetEntry, docsRphyPtpCcapPortMasterClockStatusEntry=docsRphyPtpCcapPortMasterClockStatusEntry, docsRphyPtpCcapTimePropertiesTimeSource=docsRphyPtpCcapTimePropertiesTimeSource, docsRphyPtpRpdCurrentDataSetEntry=docsRphyPtpRpdCurrentDataSetEntry, docsRphyPtpCcapCorePtpPortStatusTable=docsRphyPtpCcapCorePtpPortStatusTable, docsRphyPtpRpdPortMasterClockStatusFreqOffset=docsRphyPtpRpdPortMasterClockStatusFreqOffset, docsRphyPtpRpdPortDataSetTable=docsRphyPtpRpdPortDataSetTable, docsRphyPtpCcapCoreGroup=docsRphyPtpCcapCoreGroup, docsRphyPtpCcapParentDataSetGmQualityOffset=docsRphyPtpCcapParentDataSetGmQualityOffset, docsRphyPtpCcapDefaultDataSetQualityOffset=docsRphyPtpCcapDefaultDataSetQualityOffset, docsRphyPtpCcapPortMasterClockStatusFreqOffset=docsRphyPtpCcapPortMasterClockStatusFreqOffset, docsRphyPtpRpdPtpPortStatusPortNumber=docsRphyPtpRpdPtpPortStatusPortNumber)
