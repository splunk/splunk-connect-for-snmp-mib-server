#
# PySNMP MIB module CYCLADES-ACS-INFO-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CYCLADES-ACS-INFO-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 18:18:47 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ConstraintsUnion, SingleValueConstraint, ConstraintsIntersection, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ConstraintsUnion", "SingleValueConstraint", "ConstraintsIntersection", "ValueRangeConstraint")
cyACSMgmt, = mibBuilder.importSymbols("CYCLADES-ACS-MIB", "cyACSMgmt")
InterfaceIndex, = mibBuilder.importSymbols("IF-MIB", "InterfaceIndex")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
ModuleIdentity, Integer32, Gauge32, Counter32, Counter64, NotificationType, iso, ObjectIdentity, Unsigned32, MibIdentifier, TimeTicks, Bits, IpAddress, MibScalar, MibTable, MibTableRow, MibTableColumn = mibBuilder.importSymbols("SNMPv2-SMI", "ModuleIdentity", "Integer32", "Gauge32", "Counter32", "Counter64", "NotificationType", "iso", "ObjectIdentity", "Unsigned32", "MibIdentifier", "TimeTicks", "Bits", "IpAddress", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
cyACSInfo = ModuleIdentity((1, 3, 6, 1, 4, 1, 2925, 4, 3))
cyACSInfo.setRevisions(('2005-08-29 00:00', '2002-09-20 00:00',))
if mibBuilder.loadTexts: cyACSInfo.setLastUpdated('200508290000Z')
if mibBuilder.loadTexts: cyACSInfo.setOrganization('Cyclades Corporation')
cyInfoSerialTable = MibTable((1, 3, 6, 1, 4, 1, 2925, 4, 3, 1), )
if mibBuilder.loadTexts: cyInfoSerialTable.setStatus('current')
cyisPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2925, 4, 3, 1, 1), ).setIndexNames((0, "CYCLADES-ACS-INFO-MIB", "cyISPortNumber"))
if mibBuilder.loadTexts: cyisPortEntry.setStatus('current')
cyISPortNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2925, 4, 3, 1, 1, 1), InterfaceIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyISPortNumber.setStatus('current')
cyISPortTty = MibTableColumn((1, 3, 6, 1, 4, 1, 2925, 4, 3, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyISPortTty.setStatus('current')
cyISPortName = MibTableColumn((1, 3, 6, 1, 4, 1, 2925, 4, 3, 1, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyISPortName.setStatus('current')
cyISPortSpeed = MibTableColumn((1, 3, 6, 1, 4, 1, 2925, 4, 3, 1, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyISPortSpeed.setStatus('current')
cyISPortTxBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2925, 4, 3, 1, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyISPortTxBytes.setStatus('current')
cyISPortRXBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2925, 4, 3, 1, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyISPortRXBytes.setStatus('current')
cyISPortErrFrame = MibTableColumn((1, 3, 6, 1, 4, 1, 2925, 4, 3, 1, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyISPortErrFrame.setStatus('current')
cyISPortErrParity = MibTableColumn((1, 3, 6, 1, 4, 1, 2925, 4, 3, 1, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyISPortErrParity.setStatus('current')
cyISPortErrBreaks = MibTableColumn((1, 3, 6, 1, 4, 1, 2925, 4, 3, 1, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyISPortErrBreaks.setStatus('current')
cyISPortErrOverrun = MibTableColumn((1, 3, 6, 1, 4, 1, 2925, 4, 3, 1, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyISPortErrOverrun.setStatus('current')
cyISPortSigDTR = MibTableColumn((1, 3, 6, 1, 4, 1, 2925, 4, 3, 1, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("down", 0), ("up", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyISPortSigDTR.setStatus('current')
cyISPortSigCD = MibTableColumn((1, 3, 6, 1, 4, 1, 2925, 4, 3, 1, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("down", 0), ("up", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyISPortSigCD.setStatus('current')
cyISPortSigDSR = MibTableColumn((1, 3, 6, 1, 4, 1, 2925, 4, 3, 1, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("down", 0), ("up", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyISPortSigDSR.setStatus('current')
cyISPortSigRTS = MibTableColumn((1, 3, 6, 1, 4, 1, 2925, 4, 3, 1, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("down", 0), ("up", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyISPortSigRTS.setStatus('current')
cyISPortSigCTS = MibTableColumn((1, 3, 6, 1, 4, 1, 2925, 4, 3, 1, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("down", 0), ("up", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyISPortSigCTS.setStatus('current')
cyISPortSigRI = MibTableColumn((1, 3, 6, 1, 4, 1, 2925, 4, 3, 1, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("down", 0), ("up", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyISPortSigRI.setStatus('current')
mibBuilder.exportSymbols("CYCLADES-ACS-INFO-MIB", cyISPortRXBytes=cyISPortRXBytes, cyISPortSpeed=cyISPortSpeed, cyISPortSigRI=cyISPortSigRI, cyISPortNumber=cyISPortNumber, cyISPortErrBreaks=cyISPortErrBreaks, cyISPortSigRTS=cyISPortSigRTS, cyISPortSigCD=cyISPortSigCD, cyISPortSigCTS=cyISPortSigCTS, cyInfoSerialTable=cyInfoSerialTable, cyISPortTxBytes=cyISPortTxBytes, cyISPortErrParity=cyISPortErrParity, cyISPortTty=cyISPortTty, cyACSInfo=cyACSInfo, PYSNMP_MODULE_ID=cyACSInfo, cyISPortName=cyISPortName, cyisPortEntry=cyisPortEntry, cyISPortErrOverrun=cyISPortErrOverrun, cyISPortSigDSR=cyISPortSigDSR, cyISPortErrFrame=cyISPortErrFrame, cyISPortSigDTR=cyISPortSigDTR)
