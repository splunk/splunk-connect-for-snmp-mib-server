#
# PySNMP MIB module PDN-DS1CONFIG-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/PDN-DS1CONFIG-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 20:29:36 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, SingleValueConstraint, ValueSizeConstraint, ValueRangeConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "SingleValueConstraint", "ValueSizeConstraint", "ValueRangeConstraint", "ConstraintsUnion")
pdn_interfaces, = mibBuilder.importSymbols("PDN-HEADER-MIB", "pdn-interfaces")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Bits, MibIdentifier, ObjectIdentity, Gauge32, TimeTicks, Counter64, Integer32, MibScalar, MibTable, MibTableRow, MibTableColumn, IpAddress, Unsigned32, iso, Counter32, NotificationType, ModuleIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "Bits", "MibIdentifier", "ObjectIdentity", "Gauge32", "TimeTicks", "Counter64", "Integer32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "IpAddress", "Unsigned32", "iso", "Counter32", "NotificationType", "ModuleIdentity")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
ent_ds1 = MibIdentifier((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 5)).setLabel("ent-ds1")
devDS1Test = MibIdentifier((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 5, 1))
devDS1TestTable = MibTable((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 5, 1, 1), )
if mibBuilder.loadTexts: devDS1TestTable.setStatus('mandatory')
devDS1TestEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 5, 1, 1, 1), ).setIndexNames((0, "PDN-DS1CONFIG-MIB", "devDS1TestIfIndex"), (0, "PDN-DS1CONFIG-MIB", "devDS1TestType"))
if mibBuilder.loadTexts: devDS1TestEntry.setStatus('mandatory')
devDS1TestIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 5, 1, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: devDS1TestIfIndex.setStatus('mandatory')
devDS1TestType = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 5, 1, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31))).clone(namedValues=NamedValues(("llbup", 1), ("llbdn", 2), ("llb", 3), ("plb", 4), ("rlb", 5), ("sendQRSS", 6), ("sendZeros", 7), ("sendOnes", 8), ("send1in8", 9), ("send3in24", 10), ("send63", 11), ("send511", 12), ("send2047", 13), ("send2E15", 14), ("send2E20", 15), ("sendUserDefined", 16), ("monQRSS", 17), ("monZeros", 18), ("monOnes", 19), ("mon1in8", 20), ("mon3in24", 21), ("mon63", 22), ("mon11", 23), ("mon2047", 24), ("mon2E15", 25), ("mon2E20", 26), ("monUserDefined", 27), ("send2E7", 28), ("mon2E7", 29), ("send2E11", 30), ("mon2E11", 31)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: devDS1TestType.setStatus('mandatory')
devDS1TestControl = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 5, 1, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("idle", 1), ("running", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: devDS1TestControl.setStatus('mandatory')
devDS1TestArgument = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 5, 1, 1, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: devDS1TestArgument.setStatus('mandatory')
devDS1MonResultTable = MibTable((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 5, 1, 2), )
if mibBuilder.loadTexts: devDS1MonResultTable.setStatus('mandatory')
devDS1MonResultEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 5, 1, 2, 1), ).setIndexNames((0, "PDN-DS1CONFIG-MIB", "devDS1MonResultIfIndex"), (0, "PDN-DS1CONFIG-MIB", "devDS1MonResultTestType"))
if mibBuilder.loadTexts: devDS1MonResultEntry.setStatus('mandatory')
devDS1MonResultIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 5, 1, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: devDS1MonResultIfIndex.setStatus('mandatory')
devDS1MonResultTestType = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 5, 1, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 31))).clone(namedValues=NamedValues(("monQRSS", 17), ("monZeros", 18), ("monOnes", 19), ("mon1in8", 20), ("mon3in24", 21), ("mon63", 22), ("mon11", 23), ("mon2047", 24), ("mon2E15", 25), ("mon2E20", 26), ("monUserDefined", 27), ("mon2E7", 29), ("mon2E11", 31)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: devDS1MonResultTestType.setStatus('mandatory')
devDS1MonResultCode = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 5, 1, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("none", 1), ("inSyncNoBitErrors", 2), ("inSyncWithBitErrors", 3), ("notInSync", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: devDS1MonResultCode.setStatus('mandatory')
devDS1MonResultErrorCount = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 5, 1, 2, 1, 4), Gauge32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: devDS1MonResultErrorCount.setStatus('mandatory')
devDS1SendControlTable = MibTable((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 5, 1, 3), )
if mibBuilder.loadTexts: devDS1SendControlTable.setStatus('mandatory')
devDS1SendControlEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 5, 1, 3, 1), ).setIndexNames((0, "PDN-DS1CONFIG-MIB", "devDS1SendControlIfIndex"))
if mibBuilder.loadTexts: devDS1SendControlEntry.setStatus('mandatory')
devDS1SendControlIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 5, 1, 3, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: devDS1SendControlIfIndex.setStatus('mandatory')
devDS1SendControlInjectErr = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 5, 1, 3, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("noOp", 1), ("inject", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: devDS1SendControlInjectErr.setStatus('mandatory')
devDS1SendControlErrorCount = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 5, 1, 3, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: devDS1SendControlErrorCount.setStatus('mandatory')
mibBuilder.exportSymbols("PDN-DS1CONFIG-MIB", devDS1SendControlEntry=devDS1SendControlEntry, devDS1TestEntry=devDS1TestEntry, devDS1SendControlInjectErr=devDS1SendControlInjectErr, devDS1TestIfIndex=devDS1TestIfIndex, devDS1MonResultTable=devDS1MonResultTable, devDS1Test=devDS1Test, devDS1MonResultIfIndex=devDS1MonResultIfIndex, devDS1TestType=devDS1TestType, devDS1TestControl=devDS1TestControl, devDS1MonResultTestType=devDS1MonResultTestType, devDS1SendControlIfIndex=devDS1SendControlIfIndex, devDS1TestTable=devDS1TestTable, devDS1TestArgument=devDS1TestArgument, ent_ds1=ent_ds1, devDS1SendControlTable=devDS1SendControlTable, devDS1MonResultCode=devDS1MonResultCode, devDS1SendControlErrorCount=devDS1SendControlErrorCount, devDS1MonResultEntry=devDS1MonResultEntry, devDS1MonResultErrorCount=devDS1MonResultErrorCount)
