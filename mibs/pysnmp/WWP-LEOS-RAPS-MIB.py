#
# PySNMP MIB module WWP-LEOS-RAPS-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/WWP-LEOS-RAPS-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 21:31:32 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ConstraintsIntersection, ValueSizeConstraint, ValueRangeConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ConstraintsIntersection", "ValueSizeConstraint", "ValueRangeConstraint", "ConstraintsUnion")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
IpAddress, Gauge32, Counter32, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter64, ObjectIdentity, MibIdentifier, Bits, ModuleIdentity, Unsigned32, NotificationType, TimeTicks, iso, Integer32 = mibBuilder.importSymbols("SNMPv2-SMI", "IpAddress", "Gauge32", "Counter32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter64", "ObjectIdentity", "MibIdentifier", "Bits", "ModuleIdentity", "Unsigned32", "NotificationType", "TimeTicks", "iso", "Integer32")
TextualConvention, MacAddress, TruthValue, DisplayString, RowStatus = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "MacAddress", "TruthValue", "DisplayString", "RowStatus")
wwpModulesLeos, wwpModules = mibBuilder.importSymbols("WWP-SMI", "wwpModulesLeos", "wwpModules")
wwpLeosRapsMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 6141, 2, 60, 47))
wwpLeosRapsMIB.setRevisions(('2010-09-16 17:00',))
if mibBuilder.loadTexts: wwpLeosRapsMIB.setLastUpdated('201009161700Z')
if mibBuilder.loadTexts: wwpLeosRapsMIB.setOrganization('Ciena, Inc')
wwpLeosRapsMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 6141, 2, 60, 47, 1))
wwpLeosRapsGlobal = MibIdentifier((1, 3, 6, 1, 4, 1, 6141, 2, 60, 47, 1, 1))
wwpLeosRapsLogicalRing = MibIdentifier((1, 3, 6, 1, 4, 1, 6141, 2, 60, 47, 1, 2))
wwpLeosRapsVirtualRing = MibIdentifier((1, 3, 6, 1, 4, 1, 6141, 2, 60, 47, 1, 3))
wwpLeosRapsVirtualRingMember = MibIdentifier((1, 3, 6, 1, 4, 1, 6141, 2, 60, 47, 1, 4))
wwpLeosRapsMIBNotificationPrefix = MibIdentifier((1, 3, 6, 1, 4, 1, 6141, 2, 60, 47, 2))
wwpLeosRapsMIBNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 6141, 2, 60, 47, 2, 0))
wwpLeosRapsMIBConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 6141, 2, 60, 47, 3))
wwpLeosRapsMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 6141, 2, 60, 47, 3, 1))
wwpLeosRapsMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 6141, 2, 60, 47, 3, 2))
wwpLeosRapsGlobalAttrs = MibIdentifier((1, 3, 6, 1, 4, 1, 6141, 2, 60, 47, 1, 1, 1))
wwpLeosRapsState = MibScalar((1, 3, 6, 1, 4, 1, 6141, 2, 60, 47, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2))).clone(2)).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosRapsState.setStatus('current')
wwpLeosRapsNodeId = MibScalar((1, 3, 6, 1, 4, 1, 6141, 2, 60, 47, 1, 1, 1, 2), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosRapsNodeId.setStatus('current')
wwpLeosRapsEtherType = MibScalar((1, 3, 6, 1, 4, 1, 6141, 2, 60, 47, 1, 1, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosRapsEtherType.setStatus('current')
wwpLeosRapsNumberOfRings = MibScalar((1, 3, 6, 1, 4, 1, 6141, 2, 60, 47, 1, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosRapsNumberOfRings.setStatus('current')
wwpLeosRapsLogicalRingTable = MibTable((1, 3, 6, 1, 4, 1, 6141, 2, 60, 47, 1, 2, 1), )
if mibBuilder.loadTexts: wwpLeosRapsLogicalRingTable.setStatus('current')
wwpLeosRapsLogicalRingEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6141, 2, 60, 47, 1, 2, 1, 1), ).setIndexNames((0, "WWP-LEOS-RAPS-MIB", "wwpLeosRapsLogicalRingIndex"))
if mibBuilder.loadTexts: wwpLeosRapsLogicalRingEntry.setStatus('current')
wwpLeosRapsLogicalRingIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 47, 1, 2, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 60)))
if mibBuilder.loadTexts: wwpLeosRapsLogicalRingIndex.setStatus('current')
wwpLeosRapsLogicalRingName = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 47, 1, 2, 1, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosRapsLogicalRingName.setStatus('current')
wwpLeosRapsLogicalRingId = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 47, 1, 2, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosRapsLogicalRingId.setStatus('current')
wwpLeosRapsLogicalRingGuardTime = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 47, 1, 2, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(10, 2000)).clone(500)).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosRapsLogicalRingGuardTime.setStatus('current')
wwpLeosRapsLogicalRingWtr = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 47, 1, 2, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 12)).clone(5)).setUnits('minutes').setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosRapsLogicalRingWtr.setStatus('current')
wwpLeosRapsLogicalRingWtb = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 47, 1, 2, 1, 1, 6), Integer32()).setUnits('minutes').setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosRapsLogicalRingWtb.setStatus('current')
wwpLeosRapsLogicalRingWestPortId = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 47, 1, 2, 1, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosRapsLogicalRingWestPortId.setStatus('current')
wwpLeosRapsLogicalRingWestHoldOffTime = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 47, 1, 2, 1, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 10000))).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosRapsLogicalRingWestHoldOffTime.setStatus('current')
wwpLeosRapsLogicalRingWestForce = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 47, 1, 2, 1, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("off", 1), ("on", 2))).clone(1)).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosRapsLogicalRingWestForce.setStatus('current')
wwpLeosRapsLogicalRingWestCfmService = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 47, 1, 2, 1, 1, 10), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosRapsLogicalRingWestCfmService.setStatus('current')
wwpLeosRapsLogicalRingEastPortId = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 47, 1, 2, 1, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosRapsLogicalRingEastPortId.setStatus('current')
wwpLeosRapsLogicalRingEastHoldOffTime = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 47, 1, 2, 1, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 10000))).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosRapsLogicalRingEastHoldOffTime.setStatus('current')
wwpLeosRapsLogicalRingEastForce = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 47, 1, 2, 1, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("off", 1), ("on", 2))).clone(1)).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosRapsLogicalRingEastForce.setStatus('current')
wwpLeosRapsLogicalRingEastCfmService = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 47, 1, 2, 1, 1, 14), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosRapsLogicalRingEastCfmService.setStatus('current')
wwpLeosRapsLogicalRingNumberOfVirtualRings = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 47, 1, 2, 1, 1, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosRapsLogicalRingNumberOfVirtualRings.setStatus('current')
wwpLeosRapsVirtualRingTable = MibTable((1, 3, 6, 1, 4, 1, 6141, 2, 60, 47, 1, 3, 1), )
if mibBuilder.loadTexts: wwpLeosRapsVirtualRingTable.setStatus('current')
wwpLeosRapsVirtualRingEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6141, 2, 60, 47, 1, 3, 1, 1), ).setIndexNames((0, "WWP-LEOS-RAPS-MIB", "wwpLeosRapsVirtualRingIndex"))
if mibBuilder.loadTexts: wwpLeosRapsVirtualRingEntry.setStatus('current')
wwpLeosRapsVirtualRingIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 47, 1, 3, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 240)))
if mibBuilder.loadTexts: wwpLeosRapsVirtualRingIndex.setStatus('current')
wwpLeosRapsVirtualRingName = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 47, 1, 3, 1, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosRapsVirtualRingName.setStatus('current')
wwpLeosRapsVirtualRingVid = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 47, 1, 3, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4094))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosRapsVirtualRingVid.setStatus('current')
wwpLeosRapsVirtualRingLogicalRingId = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 47, 1, 3, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosRapsVirtualRingLogicalRingId.setStatus('current')
wwpLeosRapsVirtualRingMel = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 47, 1, 3, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosRapsVirtualRingMel.setStatus('current')
wwpLeosRapsVirtualRingRevertive = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 47, 1, 3, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("off", 1), ("on", 2))).clone(2)).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosRapsVirtualRingRevertive.setStatus('current')
wwpLeosRapsVirtualRingState = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 47, 1, 3, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("adminDisabled", 1), ("ok", 2), ("protecting", 3), ("recovering", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosRapsVirtualRingState.setStatus('current')
wwpLeosRapsVirtualRingStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 47, 1, 3, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("clear", 1), ("localSignalFail", 2), ("localForceSwitch", 3), ("remoteOrOtherPortSignalFail", 4), ("remoteOrOtherPortForceSwitch", 5), ("provisioningMismatch", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosRapsVirtualRingStatus.setStatus('current')
wwpLeosRapsVirtualRingAlarm = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 47, 1, 3, 1, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("clear", 1), ("protectionSwitching", 2), ("provisionMismatch", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosRapsVirtualRingAlarm.setStatus('current')
wwpLeosRapsVirtualRingNumOfSwitchOvers = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 47, 1, 3, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosRapsVirtualRingNumOfSwitchOvers.setStatus('current')
wwpLeosRapsVirtualRingUptimeFromLastFailure = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 47, 1, 3, 1, 1, 11), Counter32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosRapsVirtualRingUptimeFromLastFailure.setStatus('current')
wwpLeosRapsVirtualRingTotalDownTime = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 47, 1, 3, 1, 1, 12), Counter32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosRapsVirtualRingTotalDownTime.setStatus('current')
wwpLeosRapsVirtualRingWestPortRpl = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 47, 1, 3, 1, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("none", 1), ("owner", 2))).clone(1)).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosRapsVirtualRingWestPortRpl.setStatus('current')
wwpLeosRapsVirtualRingWestPortState = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 47, 1, 3, 1, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("disabled", 1), ("forwarding", 2), ("blocked", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosRapsVirtualRingWestPortState.setStatus('current')
wwpLeosRapsVirtualRingWestPortStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 47, 1, 3, 1, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("oK", 1), ("down", 2), ("ccmFailure", 3), ("localForceSwitch", 4), ("remoteForceSwitch", 5), ("remoteSignalFailure", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosRapsVirtualRingWestPortStatus.setStatus('current')
wwpLeosRapsVirtualRingWestPortNrRxd = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 47, 1, 3, 1, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosRapsVirtualRingWestPortNrRxd.setStatus('current')
wwpLeosRapsVirtualRingWestPortNrTxd = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 47, 1, 3, 1, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosRapsVirtualRingWestPortNrTxd.setStatus('current')
wwpLeosRapsVirtualRingWestPortSfRxd = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 47, 1, 3, 1, 1, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosRapsVirtualRingWestPortSfRxd.setStatus('current')
wwpLeosRapsVirtualRingWestPortSfTxd = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 47, 1, 3, 1, 1, 19), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosRapsVirtualRingWestPortSfTxd.setStatus('current')
wwpLeosRapsVirtualRingWestPortFsRxd = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 47, 1, 3, 1, 1, 20), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosRapsVirtualRingWestPortFsRxd.setStatus('current')
wwpLeosRapsVirtualRingWestPortFsTxd = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 47, 1, 3, 1, 1, 21), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosRapsVirtualRingWestPortFsTxd.setStatus('current')
wwpLeosRapsVirtualRingWestPortNrRbRxd = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 47, 1, 3, 1, 1, 22), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosRapsVirtualRingWestPortNrRbRxd.setStatus('current')
wwpLeosRapsVirtualRingWestPortNrRbTxd = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 47, 1, 3, 1, 1, 23), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosRapsVirtualRingWestPortNrRbTxd.setStatus('current')
wwpLeosRapsVirtualRingEastPortRpl = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 47, 1, 3, 1, 1, 24), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("none", 1), ("owner", 2))).clone(1)).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosRapsVirtualRingEastPortRpl.setStatus('current')
wwpLeosRapsVirtualRingEastPortState = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 47, 1, 3, 1, 1, 25), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("disabled", 1), ("forwarding", 2), ("blocked", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosRapsVirtualRingEastPortState.setStatus('current')
wwpLeosRapsVirtualRingEastPortStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 47, 1, 3, 1, 1, 26), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("ok", 1), ("down", 2), ("ccmFailure", 3), ("localForceSwitch", 4), ("remoteForceSwitch", 5), ("remoteSignalFailure", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosRapsVirtualRingEastPortStatus.setStatus('current')
wwpLeosRapsVirtualRingEastPortNrRxd = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 47, 1, 3, 1, 1, 27), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosRapsVirtualRingEastPortNrRxd.setStatus('current')
wwpLeosRapsVirtualRingEastPortNrTxd = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 47, 1, 3, 1, 1, 28), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosRapsVirtualRingEastPortNrTxd.setStatus('current')
wwpLeosRapsVirtualRingEastPortSfRxd = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 47, 1, 3, 1, 1, 29), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosRapsVirtualRingEastPortSfRxd.setStatus('current')
wwpLeosRapsVirtualRingEastPortSfTxd = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 47, 1, 3, 1, 1, 30), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosRapsVirtualRingEastPortSfTxd.setStatus('current')
wwpLeosRapsVirtualRingEastPortFsRxd = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 47, 1, 3, 1, 1, 31), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosRapsVirtualRingEastPortFsRxd.setStatus('current')
wwpLeosRapsVirtualRingEastPortFsTxd = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 47, 1, 3, 1, 1, 32), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosRapsVirtualRingEastPortFsTxd.setStatus('current')
wwpLeosRapsVirtualRingEastPortNrRbRxd = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 47, 1, 3, 1, 1, 33), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosRapsVirtualRingEastPortNrRbRxd.setStatus('current')
wwpLeosRapsVirtualRingEastPortNrRbTxd = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 47, 1, 3, 1, 1, 34), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosRapsVirtualRingEastPortNrRbTxd.setStatus('current')
wwpLeosRapsVirtualRingType = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 47, 1, 3, 1, 1, 35), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("majorRing", 1), ("subRing", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosRapsVirtualRingType.setStatus('current')
wwpLeosRapsVirtualRingSubRingPortTerm = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 47, 1, 3, 1, 1, 36), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("noTerminate", 1), ("westPortTerminate", 2), ("eastPortTerminate", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosRapsVirtualRingSubRingPortTerm.setStatus('current')
wwpLeosRapsVirtualRingMemberTable = MibTable((1, 3, 6, 1, 4, 1, 6141, 2, 60, 47, 1, 4, 1), )
if mibBuilder.loadTexts: wwpLeosRapsVirtualRingMemberTable.setStatus('current')
wwpLeosRapsVirtualRingMemberEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6141, 2, 60, 47, 1, 4, 1, 1), ).setIndexNames((0, "WWP-LEOS-RAPS-MIB", "wwpLeosRapsVirtualRingIndex"), (0, "WWP-LEOS-RAPS-MIB", "wwpLeosRapsVirtualRingMemberVlanId"))
if mibBuilder.loadTexts: wwpLeosRapsVirtualRingMemberEntry.setStatus('current')
wwpLeosRapsVirtualRingMemberVlanId = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 47, 1, 4, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4095))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosRapsVirtualRingMemberVlanId.setStatus('current')
wwpLeosRapsVirtualRingMemberVsTable = MibTable((1, 3, 6, 1, 4, 1, 6141, 2, 60, 47, 1, 4, 2), )
if mibBuilder.loadTexts: wwpLeosRapsVirtualRingMemberVsTable.setStatus('current')
wwpLeosRapsVirtualRingMemberVsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6141, 2, 60, 47, 1, 4, 2, 1), ).setIndexNames((0, "WWP-LEOS-RAPS-MIB", "wwpLeosRapsVirtualRingIndex"), (0, "WWP-LEOS-RAPS-MIB", "wwpLeosRapsVirtualRingMemberVsId"))
if mibBuilder.loadTexts: wwpLeosRapsVirtualRingMemberVsEntry.setStatus('current')
wwpLeosRapsVirtualRingMemberVsId = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 47, 1, 4, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 10000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosRapsVirtualRingMemberVsId.setStatus('current')
wwpLeosRapsAlarm = NotificationType((1, 3, 6, 1, 4, 1, 6141, 2, 60, 47, 2, 0, 1)).setObjects(("WWP-LEOS-RAPS-MIB", "wwpLeosRapsVirtualRingName"), ("WWP-LEOS-RAPS-MIB", "wwpLeosRapsVirtualRingAlarm"))
if mibBuilder.loadTexts: wwpLeosRapsAlarm.setStatus('current')
mibBuilder.exportSymbols("WWP-LEOS-RAPS-MIB", wwpLeosRapsLogicalRingEastHoldOffTime=wwpLeosRapsLogicalRingEastHoldOffTime, wwpLeosRapsMIB=wwpLeosRapsMIB, wwpLeosRapsGlobal=wwpLeosRapsGlobal, wwpLeosRapsVirtualRing=wwpLeosRapsVirtualRing, wwpLeosRapsVirtualRingIndex=wwpLeosRapsVirtualRingIndex, wwpLeosRapsLogicalRingWtb=wwpLeosRapsLogicalRingWtb, wwpLeosRapsVirtualRingMemberTable=wwpLeosRapsVirtualRingMemberTable, wwpLeosRapsVirtualRingVid=wwpLeosRapsVirtualRingVid, wwpLeosRapsVirtualRingEastPortSfTxd=wwpLeosRapsVirtualRingEastPortSfTxd, wwpLeosRapsVirtualRingWestPortFsTxd=wwpLeosRapsVirtualRingWestPortFsTxd, wwpLeosRapsVirtualRingWestPortStatus=wwpLeosRapsVirtualRingWestPortStatus, wwpLeosRapsVirtualRingMemberVlanId=wwpLeosRapsVirtualRingMemberVlanId, wwpLeosRapsVirtualRingMemberVsTable=wwpLeosRapsVirtualRingMemberVsTable, wwpLeosRapsVirtualRingNumOfSwitchOvers=wwpLeosRapsVirtualRingNumOfSwitchOvers, wwpLeosRapsVirtualRingType=wwpLeosRapsVirtualRingType, wwpLeosRapsVirtualRingAlarm=wwpLeosRapsVirtualRingAlarm, wwpLeosRapsLogicalRingEastCfmService=wwpLeosRapsLogicalRingEastCfmService, wwpLeosRapsLogicalRingNumberOfVirtualRings=wwpLeosRapsLogicalRingNumberOfVirtualRings, wwpLeosRapsVirtualRingTable=wwpLeosRapsVirtualRingTable, wwpLeosRapsMIBConformance=wwpLeosRapsMIBConformance, wwpLeosRapsVirtualRingEastPortSfRxd=wwpLeosRapsVirtualRingEastPortSfRxd, wwpLeosRapsLogicalRingEntry=wwpLeosRapsLogicalRingEntry, wwpLeosRapsMIBCompliances=wwpLeosRapsMIBCompliances, wwpLeosRapsMIBGroups=wwpLeosRapsMIBGroups, PYSNMP_MODULE_ID=wwpLeosRapsMIB, wwpLeosRapsNodeId=wwpLeosRapsNodeId, wwpLeosRapsVirtualRingTotalDownTime=wwpLeosRapsVirtualRingTotalDownTime, wwpLeosRapsMIBObjects=wwpLeosRapsMIBObjects, wwpLeosRapsVirtualRingSubRingPortTerm=wwpLeosRapsVirtualRingSubRingPortTerm, wwpLeosRapsVirtualRingMemberVsId=wwpLeosRapsVirtualRingMemberVsId, wwpLeosRapsLogicalRingWestForce=wwpLeosRapsLogicalRingWestForce, wwpLeosRapsState=wwpLeosRapsState, wwpLeosRapsVirtualRingEastPortFsRxd=wwpLeosRapsVirtualRingEastPortFsRxd, wwpLeosRapsVirtualRingMel=wwpLeosRapsVirtualRingMel, wwpLeosRapsLogicalRingWestPortId=wwpLeosRapsLogicalRingWestPortId, wwpLeosRapsVirtualRingState=wwpLeosRapsVirtualRingState, wwpLeosRapsVirtualRingWestPortNrRbRxd=wwpLeosRapsVirtualRingWestPortNrRbRxd, wwpLeosRapsLogicalRingWestHoldOffTime=wwpLeosRapsLogicalRingWestHoldOffTime, wwpLeosRapsLogicalRingId=wwpLeosRapsLogicalRingId, wwpLeosRapsVirtualRingWestPortNrRxd=wwpLeosRapsVirtualRingWestPortNrRxd, wwpLeosRapsVirtualRingEastPortRpl=wwpLeosRapsVirtualRingEastPortRpl, wwpLeosRapsVirtualRingWestPortNrTxd=wwpLeosRapsVirtualRingWestPortNrTxd, wwpLeosRapsVirtualRingStatus=wwpLeosRapsVirtualRingStatus, wwpLeosRapsVirtualRingEntry=wwpLeosRapsVirtualRingEntry, wwpLeosRapsVirtualRingMemberVsEntry=wwpLeosRapsVirtualRingMemberVsEntry, wwpLeosRapsVirtualRingEastPortNrTxd=wwpLeosRapsVirtualRingEastPortNrTxd, wwpLeosRapsVirtualRingEastPortNrRbTxd=wwpLeosRapsVirtualRingEastPortNrRbTxd, wwpLeosRapsLogicalRingEastForce=wwpLeosRapsLogicalRingEastForce, wwpLeosRapsLogicalRingTable=wwpLeosRapsLogicalRingTable, wwpLeosRapsVirtualRingLogicalRingId=wwpLeosRapsVirtualRingLogicalRingId, wwpLeosRapsMIBNotifications=wwpLeosRapsMIBNotifications, wwpLeosRapsLogicalRingIndex=wwpLeosRapsLogicalRingIndex, wwpLeosRapsVirtualRingEastPortNrRbRxd=wwpLeosRapsVirtualRingEastPortNrRbRxd, wwpLeosRapsAlarm=wwpLeosRapsAlarm, wwpLeosRapsLogicalRingGuardTime=wwpLeosRapsLogicalRingGuardTime, wwpLeosRapsLogicalRingWestCfmService=wwpLeosRapsLogicalRingWestCfmService, wwpLeosRapsLogicalRingEastPortId=wwpLeosRapsLogicalRingEastPortId, wwpLeosRapsVirtualRingWestPortState=wwpLeosRapsVirtualRingWestPortState, wwpLeosRapsVirtualRingEastPortFsTxd=wwpLeosRapsVirtualRingEastPortFsTxd, wwpLeosRapsNumberOfRings=wwpLeosRapsNumberOfRings, wwpLeosRapsVirtualRingWestPortFsRxd=wwpLeosRapsVirtualRingWestPortFsRxd, wwpLeosRapsLogicalRingName=wwpLeosRapsLogicalRingName, wwpLeosRapsVirtualRingMember=wwpLeosRapsVirtualRingMember, wwpLeosRapsVirtualRingName=wwpLeosRapsVirtualRingName, wwpLeosRapsVirtualRingMemberEntry=wwpLeosRapsVirtualRingMemberEntry, wwpLeosRapsLogicalRingWtr=wwpLeosRapsLogicalRingWtr, wwpLeosRapsVirtualRingWestPortSfRxd=wwpLeosRapsVirtualRingWestPortSfRxd, wwpLeosRapsVirtualRingWestPortSfTxd=wwpLeosRapsVirtualRingWestPortSfTxd, wwpLeosRapsVirtualRingWestPortRpl=wwpLeosRapsVirtualRingWestPortRpl, wwpLeosRapsVirtualRingWestPortNrRbTxd=wwpLeosRapsVirtualRingWestPortNrRbTxd, wwpLeosRapsVirtualRingEastPortStatus=wwpLeosRapsVirtualRingEastPortStatus, wwpLeosRapsGlobalAttrs=wwpLeosRapsGlobalAttrs, wwpLeosRapsMIBNotificationPrefix=wwpLeosRapsMIBNotificationPrefix, wwpLeosRapsVirtualRingEastPortState=wwpLeosRapsVirtualRingEastPortState, wwpLeosRapsVirtualRingRevertive=wwpLeosRapsVirtualRingRevertive, wwpLeosRapsVirtualRingEastPortNrRxd=wwpLeosRapsVirtualRingEastPortNrRxd, wwpLeosRapsVirtualRingUptimeFromLastFailure=wwpLeosRapsVirtualRingUptimeFromLastFailure, wwpLeosRapsLogicalRing=wwpLeosRapsLogicalRing, wwpLeosRapsEtherType=wwpLeosRapsEtherType)
