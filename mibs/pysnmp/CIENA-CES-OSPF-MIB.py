#
# PySNMP MIB module CIENA-CES-OSPF-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CIENA-CES-OSPF-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:31:52 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ValueRangeConstraint, ValueSizeConstraint, SingleValueConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ValueRangeConstraint", "ValueSizeConstraint", "SingleValueConstraint", "ConstraintsUnion")
cienaCesConfig, = mibBuilder.importSymbols("CIENA-SMI", "cienaCesConfig")
AreaID, = mibBuilder.importSymbols("OSPF-MIB", "AreaID")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
iso, MibScalar, MibTable, MibTableRow, MibTableColumn, ModuleIdentity, MibIdentifier, Bits, ObjectIdentity, Counter32, Integer32, IpAddress, Gauge32, Counter64, NotificationType, TimeTicks, Unsigned32 = mibBuilder.importSymbols("SNMPv2-SMI", "iso", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ModuleIdentity", "MibIdentifier", "Bits", "ObjectIdentity", "Counter32", "Integer32", "IpAddress", "Gauge32", "Counter64", "NotificationType", "TimeTicks", "Unsigned32")
TextualConvention, TruthValue, RowStatus, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "TruthValue", "RowStatus", "DisplayString")
cienaCesOspfMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 1271, 2, 1, 19))
cienaCesOspfMIB.setRevisions(('2013-04-18 00:00', '2011-02-02 00:00',))
if mibBuilder.loadTexts: cienaCesOspfMIB.setLastUpdated('201304180000Z')
if mibBuilder.loadTexts: cienaCesOspfMIB.setOrganization('Ciena, Inc')
class OspfOperStatus(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))
    namedValues = NamedValues(("operStatusUp", 1), ("operStatusDown", 2), ("operStatusGoingUp", 3), ("operStatusGoingDown", 4), ("operStatusActFailed", 5))

cienaCesOspfMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 1271, 2, 1, 19, 1))
cienaCesOspfGeneralGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 1271, 2, 1, 19, 1, 1))
cienaCesOspf = MibIdentifier((1, 3, 6, 1, 4, 1, 1271, 2, 1, 19, 1, 2))
cienaCesOspfRFC1583Comp = MibScalar((1, 3, 6, 1, 4, 1, 1271, 2, 1, 19, 1, 1, 1), TruthValue().clone('false')).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesOspfRFC1583Comp.setStatus('current')
cienaCesOspfOperStatus = MibScalar((1, 3, 6, 1, 4, 1, 1271, 2, 1, 19, 1, 1, 2), OspfOperStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesOspfOperStatus.setStatus('current')
cienaCesOspfOpaqueLsaSupport = MibScalar((1, 3, 6, 1, 4, 1, 1271, 2, 1, 19, 1, 1, 3), TruthValue().clone('true')).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesOspfOpaqueLsaSupport.setStatus('current')
cienaCesOspfTrafficEngSupport = MibScalar((1, 3, 6, 1, 4, 1, 1271, 2, 1, 19, 1, 1, 4), TruthValue().clone('true')).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesOspfTrafficEngSupport.setStatus('current')
cienaCesOspfExtOpLsaCount = MibScalar((1, 3, 6, 1, 4, 1, 1271, 2, 1, 19, 1, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesOspfExtOpLsaCount.setStatus('current')
cienaCesOspfExtOpLsaCksumSum = MibScalar((1, 3, 6, 1, 4, 1, 1271, 2, 1, 19, 1, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesOspfExtOpLsaCksumSum.setStatus('current')
cienaCesOspfNumUpdPending = MibScalar((1, 3, 6, 1, 4, 1, 1271, 2, 1, 19, 1, 1, 7), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesOspfNumUpdPending.setStatus('current')
cienaCesOspfNumUpdMerged = MibScalar((1, 3, 6, 1, 4, 1, 1271, 2, 1, 19, 1, 1, 8), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesOspfNumUpdMerged.setStatus('current')
cienaCesOspfNumCksumsPending = MibScalar((1, 3, 6, 1, 4, 1, 1271, 2, 1, 19, 1, 1, 9), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesOspfNumCksumsPending.setStatus('current')
cienaCesOspfCalcMaxDelay = MibScalar((1, 3, 6, 1, 4, 1, 1271, 2, 1, 19, 1, 1, 10), Unsigned32().clone(5000)).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesOspfCalcMaxDelay.setStatus('current')
cienaCesOspfRouterId = MibScalar((1, 3, 6, 1, 4, 1, 1271, 2, 1, 19, 1, 1, 11), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesOspfRouterId.setStatus('current')
cienaCesOspfAreaTable = MibTable((1, 3, 6, 1, 4, 1, 1271, 2, 1, 19, 1, 2, 1), )
if mibBuilder.loadTexts: cienaCesOspfAreaTable.setStatus('current')
cienaCesOspfAreaEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1271, 2, 1, 19, 1, 2, 1, 1), ).setIndexNames((0, "CIENA-CES-OSPF-MIB", "cienaCesOspfAreaId"))
if mibBuilder.loadTexts: cienaCesOspfAreaEntry.setStatus('current')
cienaCesOspfAreaId = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 19, 1, 2, 1, 1, 1), AreaID())
if mibBuilder.loadTexts: cienaCesOspfAreaId.setStatus('current')
cienaCesOspfAreaTransitCapability = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 19, 1, 2, 1, 1, 2), TruthValue().clone('false')).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesOspfAreaTransitCapability.setStatus('current')
cienaCesOspfAreaRtrLsaCount = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 19, 1, 2, 1, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesOspfAreaRtrLsaCount.setStatus('current')
cienaCesOspfAreaRtrLsaCksumSum = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 19, 1, 2, 1, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesOspfAreaRtrLsaCksumSum.setStatus('current')
cienaCesOspfAreaNetLsaCount = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 19, 1, 2, 1, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesOspfAreaNetLsaCount.setStatus('current')
cienaCesOspfAreaNetLsaCksumSum = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 19, 1, 2, 1, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesOspfAreaNetLsaCksumSum.setStatus('current')
cienaCesOspfAreaSummLsaCount = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 19, 1, 2, 1, 1, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesOspfAreaSummLsaCount.setStatus('current')
cienaCesOspfAreaSummLsaCksumSum = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 19, 1, 2, 1, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesOspfAreaSummLsaCksumSum.setStatus('current')
cienaCesOspfAreaSummAsLsaCount = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 19, 1, 2, 1, 1, 9), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesOspfAreaSummAsLsaCount.setStatus('current')
cienaCesOspfAreaSummAsLsaCksumSum = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 19, 1, 2, 1, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesOspfAreaSummAsLsaCksumSum.setStatus('current')
cienaCesOspfAreaNssaLsaCount = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 19, 1, 2, 1, 1, 11), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesOspfAreaNssaLsaCount.setStatus('current')
cienaCesOspfAreaNssaLsaCksumSum = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 19, 1, 2, 1, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesOspfAreaNssaLsaCksumSum.setStatus('current')
cienaCesOspfAreaOpLsaCount = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 19, 1, 2, 1, 1, 13), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesOspfAreaOpLsaCount.setStatus('current')
cienaCesOspfAreaOpLsaCksumSum = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 19, 1, 2, 1, 1, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesOspfAreaOpLsaCksumSum.setStatus('current')
cienaCesOspfIfTable = MibTable((1, 3, 6, 1, 4, 1, 1271, 2, 1, 19, 1, 2, 2), )
if mibBuilder.loadTexts: cienaCesOspfIfTable.setStatus('current')
cienaCesOspfIfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1271, 2, 1, 19, 1, 2, 2, 1), ).setIndexNames((0, "CIENA-CES-OSPF-MIB", "cienaCesOspfIfIpAddress"), (0, "CIENA-CES-OSPF-MIB", "cienaCesOspfAddressLessIf"))
if mibBuilder.loadTexts: cienaCesOspfIfEntry.setStatus('current')
cienaCesOspfIfIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 19, 1, 2, 2, 1, 1), IpAddress())
if mibBuilder.loadTexts: cienaCesOspfIfIpAddress.setStatus('current')
cienaCesOspfAddressLessIf = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 19, 1, 2, 2, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647)))
if mibBuilder.loadTexts: cienaCesOspfAddressLessIf.setStatus('current')
cienaCesOspfIfLsaCount = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 19, 1, 2, 2, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesOspfIfLsaCount.setStatus('current')
cienaCesOspfIfLsaCksumSum = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 19, 1, 2, 2, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesOspfIfLsaCksumSum.setStatus('current')
cienaCesOspfIfOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 19, 1, 2, 2, 1, 5), OspfOperStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesOspfIfOperStatus.setStatus('current')
cienaCesOspfIfNetMask = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 19, 1, 2, 2, 1, 6), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesOspfIfNetMask.setStatus('current')
cienaCesOspfIfTransmitTimerDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 19, 1, 2, 2, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 429496799)).clone(100)).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesOspfIfTransmitTimerDelay.setStatus('current')
mibBuilder.exportSymbols("CIENA-CES-OSPF-MIB", cienaCesOspfAreaOpLsaCksumSum=cienaCesOspfAreaOpLsaCksumSum, cienaCesOspfAreaNssaLsaCksumSum=cienaCesOspfAreaNssaLsaCksumSum, OspfOperStatus=OspfOperStatus, cienaCesOspfNumUpdPending=cienaCesOspfNumUpdPending, cienaCesOspfNumCksumsPending=cienaCesOspfNumCksumsPending, cienaCesOspfAreaId=cienaCesOspfAreaId, cienaCesOspfAreaRtrLsaCount=cienaCesOspfAreaRtrLsaCount, cienaCesOspfCalcMaxDelay=cienaCesOspfCalcMaxDelay, cienaCesOspfIfTable=cienaCesOspfIfTable, cienaCesOspfAreaSummLsaCksumSum=cienaCesOspfAreaSummLsaCksumSum, cienaCesOspfRFC1583Comp=cienaCesOspfRFC1583Comp, cienaCesOspfAreaSummLsaCount=cienaCesOspfAreaSummLsaCount, cienaCesOspfAreaEntry=cienaCesOspfAreaEntry, cienaCesOspfAddressLessIf=cienaCesOspfAddressLessIf, cienaCesOspfMIB=cienaCesOspfMIB, cienaCesOspfExtOpLsaCount=cienaCesOspfExtOpLsaCount, cienaCesOspfAreaTable=cienaCesOspfAreaTable, cienaCesOspfGeneralGroup=cienaCesOspfGeneralGroup, cienaCesOspfAreaNetLsaCount=cienaCesOspfAreaNetLsaCount, cienaCesOspfNumUpdMerged=cienaCesOspfNumUpdMerged, cienaCesOspfOpaqueLsaSupport=cienaCesOspfOpaqueLsaSupport, cienaCesOspfAreaSummAsLsaCount=cienaCesOspfAreaSummAsLsaCount, cienaCesOspfIfEntry=cienaCesOspfIfEntry, cienaCesOspfIfOperStatus=cienaCesOspfIfOperStatus, cienaCesOspfIfLsaCount=cienaCesOspfIfLsaCount, cienaCesOspfExtOpLsaCksumSum=cienaCesOspfExtOpLsaCksumSum, cienaCesOspfIfIpAddress=cienaCesOspfIfIpAddress, cienaCesOspfAreaNssaLsaCount=cienaCesOspfAreaNssaLsaCount, cienaCesOspf=cienaCesOspf, cienaCesOspfAreaRtrLsaCksumSum=cienaCesOspfAreaRtrLsaCksumSum, cienaCesOspfAreaTransitCapability=cienaCesOspfAreaTransitCapability, cienaCesOspfAreaOpLsaCount=cienaCesOspfAreaOpLsaCount, cienaCesOspfTrafficEngSupport=cienaCesOspfTrafficEngSupport, PYSNMP_MODULE_ID=cienaCesOspfMIB, cienaCesOspfIfLsaCksumSum=cienaCesOspfIfLsaCksumSum, cienaCesOspfOperStatus=cienaCesOspfOperStatus, cienaCesOspfAreaNetLsaCksumSum=cienaCesOspfAreaNetLsaCksumSum, cienaCesOspfIfTransmitTimerDelay=cienaCesOspfIfTransmitTimerDelay, cienaCesOspfMIBObjects=cienaCesOspfMIBObjects, cienaCesOspfAreaSummAsLsaCksumSum=cienaCesOspfAreaSummAsLsaCksumSum, cienaCesOspfRouterId=cienaCesOspfRouterId, cienaCesOspfIfNetMask=cienaCesOspfIfNetMask)
