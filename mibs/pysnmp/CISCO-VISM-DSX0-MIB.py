#
# PySNMP MIB module CISCO-VISM-DSX0-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CISCO-VISM-DSX0-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 18:02:07 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ConstraintsUnion, ValueRangeConstraint, SingleValueConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ConstraintsUnion", "ValueRangeConstraint", "SingleValueConstraint", "ConstraintsIntersection")
cardSpecific, dsx0Vism = mibBuilder.importSymbols("BASIS-MIB", "cardSpecific", "dsx0Vism")
ciscoWan, = mibBuilder.importSymbols("CISCOWAN-SMI", "ciscoWan")
ModuleCompliance, NotificationGroup, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup", "ObjectGroup")
ModuleIdentity, Counter32, MibScalar, MibTable, MibTableRow, MibTableColumn, TimeTicks, iso, MibIdentifier, Integer32, Counter64, ObjectIdentity, NotificationType, Bits, Gauge32, IpAddress, Unsigned32 = mibBuilder.importSymbols("SNMPv2-SMI", "ModuleIdentity", "Counter32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "TimeTicks", "iso", "MibIdentifier", "Integer32", "Counter64", "ObjectIdentity", "NotificationType", "Bits", "Gauge32", "IpAddress", "Unsigned32")
TruthValue, TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TruthValue", "TextualConvention", "DisplayString")
ciscoVismDsx0MIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 351, 150, 81))
ciscoVismDsx0MIB.setRevisions(('2004-03-11 00:00', '2003-08-03 00:00', '2003-06-17 00:00',))
if mibBuilder.loadTexts: ciscoVismDsx0MIB.setLastUpdated('200403110000Z')
if mibBuilder.loadTexts: ciscoVismDsx0MIB.setOrganization('Cisco Systems, Inc.')
vismDs0CardStats = MibIdentifier((1, 3, 6, 1, 4, 1, 351, 110, 3, 24))
dsx0VismCnfTable = MibTable((1, 3, 6, 1, 4, 1, 351, 110, 4, 7, 1), )
if mibBuilder.loadTexts: dsx0VismCnfTable.setStatus('current')
dsx0VismCnfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 351, 110, 4, 7, 1, 1), ).setIndexNames((0, "CISCO-VISM-DSX0-MIB", "ds0IfIndex"))
if mibBuilder.loadTexts: dsx0VismCnfEntry.setStatus('current')
ds0IfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 4, 7, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 248))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ds0IfIndex.setStatus('current')
ds0RobbedBitSignalling = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 4, 7, 1, 1, 2), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ds0RobbedBitSignalling.setStatus('current')
ds0IdleCode = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 4, 7, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 15))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ds0IdleCode.setStatus('current')
ds0SeizedCode = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 4, 7, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 15)).clone(15)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ds0SeizedCode.setStatus('current')
ds0ReceivedCode = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 4, 7, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ds0ReceivedCode.setStatus('current')
ds0TransmitCodesEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 4, 7, 1, 1, 6), TruthValue().clone('true')).setMaxAccess("readonly")
if mibBuilder.loadTexts: ds0TransmitCodesEnable.setStatus('deprecated')
ds0BundleMapped = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 4, 7, 1, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ds0BundleMapped.setStatus('current')
ds0IfType = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 4, 7, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(81, 63, 1))).clone(namedValues=NamedValues(("bearer", 81), ("ccs-signaling", 63), ("unknown", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ds0IfType.setStatus('current')
ds0CasVariantName = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 4, 7, 1, 1, 9), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ds0CasVariantName.setStatus('current')
ds0CasCadenceOnTime = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 4, 7, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(2, 9999)).clone(75)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ds0CasCadenceOnTime.setStatus('current')
ds0CasCadenceOffTime = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 4, 7, 1, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 9999)).clone(75)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ds0CasCadenceOffTime.setStatus('current')
ds0InsertLocalCas = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 4, 7, 1, 1, 12), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ds0InsertLocalCas.setStatus('current')
ds0LocalCasPattern = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 4, 7, 1, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 15))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ds0LocalCasPattern.setStatus('current')
ds0LoopbackCommand = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 4, 7, 1, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("noLoop", 1), ("remoteLoop", 2), ("localLoop", 3))).clone('noLoop')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ds0LoopbackCommand.setStatus('current')
ds0CasParameterSource = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 4, 7, 1, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("casAppl", 1), ("mibValue", 2))).clone('casAppl')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ds0CasParameterSource.setStatus('current')
ds0CasOnHookMinMakeTime = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 4, 7, 1, 1, 16), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)).clone(300)).setUnits('milliseconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: ds0CasOnHookMinMakeTime.setStatus('current')
ds0CasOffHookMinMakeTime = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 4, 7, 1, 1, 17), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)).clone(20)).setUnits('milliseconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: ds0CasOffHookMinMakeTime.setStatus('current')
ds0CasWinkMinMakeTime = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 4, 7, 1, 1, 18), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)).clone(100)).setUnits('milliseconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: ds0CasWinkMinMakeTime.setStatus('current')
ds0CasWinkMaxMakeTime = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 4, 7, 1, 1, 19), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)).clone(350)).setUnits('millisesconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: ds0CasWinkMaxMakeTime.setStatus('current')
ds0CasWinkBreakTime = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 4, 7, 1, 1, 20), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)).clone(70)).setUnits('milliseconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: ds0CasWinkBreakTime.setStatus('current')
ds0CasGlareTime = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 4, 7, 1, 1, 21), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)).clone(100)).setUnits('milliseconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: ds0CasGlareTime.setStatus('current')
ds0CasGaurdTime = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 4, 7, 1, 1, 22), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)).clone(800)).setUnits('milliseconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: ds0CasGaurdTime.setStatus('current')
ds0CasDelayImmedStart = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 4, 7, 1, 1, 23), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)).clone(500)).setUnits('milliseconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: ds0CasDelayImmedStart.setStatus('current')
ds0SignalingType = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 4, 7, 1, 1, 24), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("cas", 1), ("ccs", 2), ("none", 3))).clone('none')).setMaxAccess("readonly")
if mibBuilder.loadTexts: ds0SignalingType.setStatus('current')
ds0CasMinDelayDialTime = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 4, 7, 1, 1, 25), Integer32().clone(100)).setUnits('milliseconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: ds0CasMinDelayDialTime.setStatus('current')
ds0CasMinStartDialTime = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 4, 7, 1, 1, 26), Integer32().clone(70)).setUnits('milliseconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: ds0CasMinStartDialTime.setStatus('current')
ds0CasFlashMinMakeTime = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 4, 7, 1, 1, 27), Integer32().clone(300)).setUnits('milliseconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: ds0CasFlashMinMakeTime.setStatus('current')
ds0CasFlashMaxMakeTime = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 4, 7, 1, 1, 28), Integer32().clone(1400)).setUnits('milliseconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: ds0CasFlashMaxMakeTime.setStatus('current')
ds0CasDirectionality = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 4, 7, 1, 1, 29), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("bidirectional", 1), ("incoming", 2), ("outgoing", 3))).clone('bidirectional')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ds0CasDirectionality.setStatus('current')
ds0CasGlarePolicy = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 4, 7, 1, 1, 30), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("controlling", 1), ("releasing", 2))).clone('controlling')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ds0CasGlarePolicy.setStatus('current')
ds0CasIncomingMgcpPackage = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 4, 7, 1, 1, 31), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ds0CasIncomingMgcpPackage.setStatus('current')
ds0CasOutgoingMgcpPackage = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 4, 7, 1, 1, 32), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ds0CasOutgoingMgcpPackage.setStatus('current')
ds0InputGain = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 4, 7, 1, 1, 33), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-6, 14))).setUnits('dB - decibel').setMaxAccess("readwrite")
if mibBuilder.loadTexts: ds0InputGain.setStatus('current')
ds0OutputAttenuation = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 4, 7, 1, 1, 34), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 14))).setUnits('dB - decibel').setMaxAccess("readwrite")
if mibBuilder.loadTexts: ds0OutputAttenuation.setStatus('current')
ds0MusicThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 4, 7, 1, 1, 35), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-70, -30)).clone(-38)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ds0MusicThreshold.setStatus('current')
ds0SidPacket = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 4, 7, 1, 1, 36), TruthValue().clone('true')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ds0SidPacket.setStatus('current')
ds0ExecDiag = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 4, 7, 1, 1, 37), TruthValue().clone('true')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ds0ExecDiag.setStatus('current')
ds0Companding = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 4, 7, 1, 1, 38), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("uLaw", 1), ("aLaw", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ds0Companding.setStatus('current')
ds0RxCasTransTblName = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 4, 7, 1, 1, 39), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ds0RxCasTransTblName.setStatus('current')
ds0TxCasTransTblName = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 4, 7, 1, 1, 40), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ds0TxCasTransTblName.setStatus('current')
ds0TxRxCasConfig = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 4, 7, 1, 1, 41), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("transmit", 1), ("receive", 2), ("bidirectional", 3), ("none", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ds0TxRxCasConfig.setStatus('current')
dsx0VismChanMapTable = MibTable((1, 3, 6, 1, 4, 1, 351, 110, 4, 7, 2), )
if mibBuilder.loadTexts: dsx0VismChanMapTable.setStatus('current')
dsx0VismChanMapEntry = MibTableRow((1, 3, 6, 1, 4, 1, 351, 110, 4, 7, 2, 1), ).setIndexNames((0, "CISCO-VISM-DSX0-MIB", "dsx1LineNum"), (0, "CISCO-VISM-DSX0-MIB", "ds0ChanNum"))
if mibBuilder.loadTexts: dsx0VismChanMapEntry.setStatus('current')
dsx1LineNum = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 4, 7, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsx1LineNum.setStatus('current')
ds0ChanNum = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 4, 7, 2, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 31))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ds0ChanNum.setStatus('current')
ds0ChanMapIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 4, 7, 2, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ds0ChanMapIfIndex.setStatus('current')
vismTotalDs0Count = MibScalar((1, 3, 6, 1, 4, 1, 351, 110, 3, 24, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vismTotalDs0Count.setStatus('current')
vismFreeDs0Count = MibScalar((1, 3, 6, 1, 4, 1, 351, 110, 3, 24, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vismFreeDs0Count.setStatus('current')
vismActiveDs0Count = MibScalar((1, 3, 6, 1, 4, 1, 351, 110, 3, 24, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vismActiveDs0Count.setStatus('current')
vismBlockDs0Count = MibScalar((1, 3, 6, 1, 4, 1, 351, 110, 3, 24, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vismBlockDs0Count.setStatus('current')
vismActiveHighWaterMark = MibScalar((1, 3, 6, 1, 4, 1, 351, 110, 3, 24, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vismActiveHighWaterMark.setStatus('current')
vismDs0CardStatsClrButton = MibScalar((1, 3, 6, 1, 4, 1, 351, 110, 3, 24, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("noaction", 1), ("clear", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vismDs0CardStatsClrButton.setStatus('current')
vismDs0LineStatsTable = MibTable((1, 3, 6, 1, 4, 1, 351, 110, 4, 7, 3), )
if mibBuilder.loadTexts: vismDs0LineStatsTable.setStatus('current')
vismDs0LineStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 351, 110, 4, 7, 3, 1), ).setIndexNames((0, "CISCO-VISM-DSX0-MIB", "ds0LineNum"))
if mibBuilder.loadTexts: vismDs0LineStatsEntry.setStatus('current')
ds0LineNum = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 4, 7, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ds0LineNum.setStatus('current')
lineTotalDs0Count = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 4, 7, 3, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 31))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lineTotalDs0Count.setStatus('current')
lineFreeDs0Count = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 4, 7, 3, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 31))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lineFreeDs0Count.setStatus('current')
lineActiveDs0Count = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 4, 7, 3, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 31))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lineActiveDs0Count.setStatus('current')
lineBlockDs0Count = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 4, 7, 3, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 31))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lineBlockDs0Count.setStatus('current')
lineActiveHighWaterMark = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 4, 7, 3, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 31))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lineActiveHighWaterMark.setStatus('current')
lineStatsClrButton = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 4, 7, 3, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("noaction", 1), ("clear", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lineStatsClrButton.setStatus('current')
vismDs0StatusTable = MibTable((1, 3, 6, 1, 4, 1, 351, 110, 4, 7, 4), )
if mibBuilder.loadTexts: vismDs0StatusTable.setStatus('current')
vismDs0StatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 351, 110, 4, 7, 4, 1), ).setIndexNames((0, "CISCO-VISM-DSX0-MIB", "ds0LineNumber"), (0, "CISCO-VISM-DSX0-MIB", "ds0Number"))
if mibBuilder.loadTexts: vismDs0StatusEntry.setStatus('current')
ds0LineNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 4, 7, 4, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ds0LineNumber.setStatus('current')
ds0Number = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 4, 7, 4, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 31))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ds0Number.setStatus('current')
ds0Status = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 4, 7, 4, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("idle", 1), ("busy", 2), ("fault", 3), ("block", 4), ("unknown", 5))).clone('unknown')).setMaxAccess("readonly")
if mibBuilder.loadTexts: ds0Status.setStatus('current')
ds0StatusClrButton = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 4, 7, 4, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("noaction", 1), ("clear", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ds0StatusClrButton.setStatus('current')
ciscoVismDsx0MIBConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 351, 150, 81, 2))
ciscoVismDsx0MIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 351, 150, 81, 2, 1))
ciscoVismDsx0MIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 351, 150, 81, 2, 2))
ciscoVismDsx0Compliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 351, 150, 81, 2, 2, 1)).setObjects(("CISCO-VISM-DSX0-MIB", "ciscoVismDsx0LineStatsGroup"), ("CISCO-VISM-DSX0-MIB", "ciscoVismDsx0StatusGroup"), ("CISCO-VISM-DSX0-MIB", "ciscoVismDsx0ConfGroup"), ("CISCO-VISM-DSX0-MIB", "ciscoVismDsx0ChanMapGroup"), ("CISCO-VISM-DSX0-MIB", "ciscoVismCardStatsGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoVismDsx0Compliance = ciscoVismDsx0Compliance.setStatus('deprecated')
ciscoVismDsx0Compliance2 = ModuleCompliance((1, 3, 6, 1, 4, 1, 351, 150, 81, 2, 2, 2)).setObjects(("CISCO-VISM-DSX0-MIB", "ciscoVismDsx0LineStatsGroup"), ("CISCO-VISM-DSX0-MIB", "ciscoVismDsx0StatusGroup"), ("CISCO-VISM-DSX0-MIB", "ciscoVismDsx0ConfGroup2"), ("CISCO-VISM-DSX0-MIB", "ciscoVismDsx0ChanMapGroup"), ("CISCO-VISM-DSX0-MIB", "ciscoVismCardStatsGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoVismDsx0Compliance2 = ciscoVismDsx0Compliance2.setStatus('current')
ciscoVismCardStatsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 351, 150, 81, 2, 1, 1)).setObjects(("CISCO-VISM-DSX0-MIB", "vismTotalDs0Count"), ("CISCO-VISM-DSX0-MIB", "vismFreeDs0Count"), ("CISCO-VISM-DSX0-MIB", "vismActiveDs0Count"), ("CISCO-VISM-DSX0-MIB", "vismBlockDs0Count"), ("CISCO-VISM-DSX0-MIB", "vismActiveHighWaterMark"), ("CISCO-VISM-DSX0-MIB", "vismDs0CardStatsClrButton"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoVismCardStatsGroup = ciscoVismCardStatsGroup.setStatus('current')
ciscoVismDsx0LineStatsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 351, 150, 81, 2, 1, 2)).setObjects(("CISCO-VISM-DSX0-MIB", "ds0LineNum"), ("CISCO-VISM-DSX0-MIB", "lineTotalDs0Count"), ("CISCO-VISM-DSX0-MIB", "lineFreeDs0Count"), ("CISCO-VISM-DSX0-MIB", "lineActiveDs0Count"), ("CISCO-VISM-DSX0-MIB", "lineBlockDs0Count"), ("CISCO-VISM-DSX0-MIB", "lineActiveHighWaterMark"), ("CISCO-VISM-DSX0-MIB", "lineStatsClrButton"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoVismDsx0LineStatsGroup = ciscoVismDsx0LineStatsGroup.setStatus('current')
ciscoVismDsx0StatusGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 351, 150, 81, 2, 1, 3)).setObjects(("CISCO-VISM-DSX0-MIB", "ds0LineNumber"), ("CISCO-VISM-DSX0-MIB", "ds0Number"), ("CISCO-VISM-DSX0-MIB", "ds0Status"), ("CISCO-VISM-DSX0-MIB", "ds0StatusClrButton"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoVismDsx0StatusGroup = ciscoVismDsx0StatusGroup.setStatus('current')
ciscoVismDsx0ConfGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 351, 150, 81, 2, 1, 4)).setObjects(("CISCO-VISM-DSX0-MIB", "ds0IfIndex"), ("CISCO-VISM-DSX0-MIB", "ds0RobbedBitSignalling"), ("CISCO-VISM-DSX0-MIB", "ds0IdleCode"), ("CISCO-VISM-DSX0-MIB", "ds0SeizedCode"), ("CISCO-VISM-DSX0-MIB", "ds0ReceivedCode"), ("CISCO-VISM-DSX0-MIB", "ds0BundleMapped"), ("CISCO-VISM-DSX0-MIB", "ds0IfType"), ("CISCO-VISM-DSX0-MIB", "ds0CasVariantName"), ("CISCO-VISM-DSX0-MIB", "ds0CasCadenceOnTime"), ("CISCO-VISM-DSX0-MIB", "ds0CasCadenceOffTime"), ("CISCO-VISM-DSX0-MIB", "ds0InsertLocalCas"), ("CISCO-VISM-DSX0-MIB", "ds0LocalCasPattern"), ("CISCO-VISM-DSX0-MIB", "ds0LoopbackCommand"), ("CISCO-VISM-DSX0-MIB", "ds0CasParameterSource"), ("CISCO-VISM-DSX0-MIB", "ds0CasOnHookMinMakeTime"), ("CISCO-VISM-DSX0-MIB", "ds0CasOffHookMinMakeTime"), ("CISCO-VISM-DSX0-MIB", "ds0CasWinkMinMakeTime"), ("CISCO-VISM-DSX0-MIB", "ds0CasWinkMaxMakeTime"), ("CISCO-VISM-DSX0-MIB", "ds0CasWinkBreakTime"), ("CISCO-VISM-DSX0-MIB", "ds0CasGlareTime"), ("CISCO-VISM-DSX0-MIB", "ds0CasGaurdTime"), ("CISCO-VISM-DSX0-MIB", "ds0CasDelayImmedStart"), ("CISCO-VISM-DSX0-MIB", "ds0SignalingType"), ("CISCO-VISM-DSX0-MIB", "ds0CasMinDelayDialTime"), ("CISCO-VISM-DSX0-MIB", "ds0CasMinStartDialTime"), ("CISCO-VISM-DSX0-MIB", "ds0CasFlashMinMakeTime"), ("CISCO-VISM-DSX0-MIB", "ds0CasFlashMaxMakeTime"), ("CISCO-VISM-DSX0-MIB", "ds0CasDirectionality"), ("CISCO-VISM-DSX0-MIB", "ds0CasGlarePolicy"), ("CISCO-VISM-DSX0-MIB", "ds0CasIncomingMgcpPackage"), ("CISCO-VISM-DSX0-MIB", "ds0CasOutgoingMgcpPackage"), ("CISCO-VISM-DSX0-MIB", "ds0InputGain"), ("CISCO-VISM-DSX0-MIB", "ds0OutputAttenuation"), ("CISCO-VISM-DSX0-MIB", "ds0MusicThreshold"), ("CISCO-VISM-DSX0-MIB", "ds0SidPacket"), ("CISCO-VISM-DSX0-MIB", "ds0ExecDiag"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoVismDsx0ConfGroup = ciscoVismDsx0ConfGroup.setStatus('deprecated')
ciscoVismDsx0ConfGroup2 = ObjectGroup((1, 3, 6, 1, 4, 1, 351, 150, 81, 2, 1, 7)).setObjects(("CISCO-VISM-DSX0-MIB", "ds0IfIndex"), ("CISCO-VISM-DSX0-MIB", "ds0RobbedBitSignalling"), ("CISCO-VISM-DSX0-MIB", "ds0IdleCode"), ("CISCO-VISM-DSX0-MIB", "ds0SeizedCode"), ("CISCO-VISM-DSX0-MIB", "ds0ReceivedCode"), ("CISCO-VISM-DSX0-MIB", "ds0BundleMapped"), ("CISCO-VISM-DSX0-MIB", "ds0IfType"), ("CISCO-VISM-DSX0-MIB", "ds0CasVariantName"), ("CISCO-VISM-DSX0-MIB", "ds0CasCadenceOnTime"), ("CISCO-VISM-DSX0-MIB", "ds0CasCadenceOffTime"), ("CISCO-VISM-DSX0-MIB", "ds0InsertLocalCas"), ("CISCO-VISM-DSX0-MIB", "ds0LocalCasPattern"), ("CISCO-VISM-DSX0-MIB", "ds0LoopbackCommand"), ("CISCO-VISM-DSX0-MIB", "ds0CasParameterSource"), ("CISCO-VISM-DSX0-MIB", "ds0CasOnHookMinMakeTime"), ("CISCO-VISM-DSX0-MIB", "ds0CasOffHookMinMakeTime"), ("CISCO-VISM-DSX0-MIB", "ds0CasWinkMinMakeTime"), ("CISCO-VISM-DSX0-MIB", "ds0CasWinkMaxMakeTime"), ("CISCO-VISM-DSX0-MIB", "ds0CasWinkBreakTime"), ("CISCO-VISM-DSX0-MIB", "ds0CasGlareTime"), ("CISCO-VISM-DSX0-MIB", "ds0CasGaurdTime"), ("CISCO-VISM-DSX0-MIB", "ds0CasDelayImmedStart"), ("CISCO-VISM-DSX0-MIB", "ds0SignalingType"), ("CISCO-VISM-DSX0-MIB", "ds0CasMinDelayDialTime"), ("CISCO-VISM-DSX0-MIB", "ds0CasMinStartDialTime"), ("CISCO-VISM-DSX0-MIB", "ds0CasFlashMinMakeTime"), ("CISCO-VISM-DSX0-MIB", "ds0CasFlashMaxMakeTime"), ("CISCO-VISM-DSX0-MIB", "ds0CasDirectionality"), ("CISCO-VISM-DSX0-MIB", "ds0CasGlarePolicy"), ("CISCO-VISM-DSX0-MIB", "ds0CasIncomingMgcpPackage"), ("CISCO-VISM-DSX0-MIB", "ds0CasOutgoingMgcpPackage"), ("CISCO-VISM-DSX0-MIB", "ds0InputGain"), ("CISCO-VISM-DSX0-MIB", "ds0OutputAttenuation"), ("CISCO-VISM-DSX0-MIB", "ds0MusicThreshold"), ("CISCO-VISM-DSX0-MIB", "ds0SidPacket"), ("CISCO-VISM-DSX0-MIB", "ds0ExecDiag"), ("CISCO-VISM-DSX0-MIB", "ds0Companding"), ("CISCO-VISM-DSX0-MIB", "ds0RxCasTransTblName"), ("CISCO-VISM-DSX0-MIB", "ds0TxCasTransTblName"), ("CISCO-VISM-DSX0-MIB", "ds0TxRxCasConfig"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoVismDsx0ConfGroup2 = ciscoVismDsx0ConfGroup2.setStatus('current')
ciscoVismDsx0ChanMapGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 351, 150, 81, 2, 1, 5)).setObjects(("CISCO-VISM-DSX0-MIB", "dsx1LineNum"), ("CISCO-VISM-DSX0-MIB", "ds0ChanNum"), ("CISCO-VISM-DSX0-MIB", "ds0ChanMapIfIndex"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoVismDsx0ChanMapGroup = ciscoVismDsx0ChanMapGroup.setStatus('current')
ciscoVismDsx0ConfDeprecatedGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 351, 150, 81, 2, 1, 6)).setObjects(("CISCO-VISM-DSX0-MIB", "ds0TransmitCodesEnable"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoVismDsx0ConfDeprecatedGroup = ciscoVismDsx0ConfDeprecatedGroup.setStatus('deprecated')
mibBuilder.exportSymbols("CISCO-VISM-DSX0-MIB", ds0IfIndex=ds0IfIndex, ciscoVismDsx0Compliance=ciscoVismDsx0Compliance, ds0CasIncomingMgcpPackage=ds0CasIncomingMgcpPackage, ciscoVismDsx0MIBCompliances=ciscoVismDsx0MIBCompliances, ds0MusicThreshold=ds0MusicThreshold, ds0CasCadenceOnTime=ds0CasCadenceOnTime, vismActiveDs0Count=vismActiveDs0Count, vismActiveHighWaterMark=vismActiveHighWaterMark, lineStatsClrButton=lineStatsClrButton, vismDs0CardStatsClrButton=vismDs0CardStatsClrButton, ds0SidPacket=ds0SidPacket, dsx1LineNum=dsx1LineNum, ciscoVismDsx0Compliance2=ciscoVismDsx0Compliance2, ds0ReceivedCode=ds0ReceivedCode, ciscoVismDsx0MIBGroups=ciscoVismDsx0MIBGroups, ds0CasCadenceOffTime=ds0CasCadenceOffTime, dsx0VismCnfTable=dsx0VismCnfTable, ds0CasGlarePolicy=ds0CasGlarePolicy, ds0CasGlareTime=ds0CasGlareTime, ds0LineNum=ds0LineNum, ds0CasOutgoingMgcpPackage=ds0CasOutgoingMgcpPackage, ds0StatusClrButton=ds0StatusClrButton, ds0LineNumber=ds0LineNumber, ciscoVismDsx0ChanMapGroup=ciscoVismDsx0ChanMapGroup, ds0CasWinkBreakTime=ds0CasWinkBreakTime, ds0RobbedBitSignalling=ds0RobbedBitSignalling, ds0TransmitCodesEnable=ds0TransmitCodesEnable, ciscoVismCardStatsGroup=ciscoVismCardStatsGroup, ciscoVismDsx0ConfGroup2=ciscoVismDsx0ConfGroup2, ds0LocalCasPattern=ds0LocalCasPattern, ds0TxRxCasConfig=ds0TxRxCasConfig, ciscoVismDsx0LineStatsGroup=ciscoVismDsx0LineStatsGroup, vismDs0StatusTable=vismDs0StatusTable, ds0CasWinkMinMakeTime=ds0CasWinkMinMakeTime, ds0IfType=ds0IfType, ds0CasOffHookMinMakeTime=ds0CasOffHookMinMakeTime, vismDs0LineStatsTable=vismDs0LineStatsTable, PYSNMP_MODULE_ID=ciscoVismDsx0MIB, ds0TxCasTransTblName=ds0TxCasTransTblName, dsx0VismChanMapTable=dsx0VismChanMapTable, ciscoVismDsx0MIB=ciscoVismDsx0MIB, ds0ExecDiag=ds0ExecDiag, ds0OutputAttenuation=ds0OutputAttenuation, vismDs0LineStatsEntry=vismDs0LineStatsEntry, ds0ChanMapIfIndex=ds0ChanMapIfIndex, ciscoVismDsx0ConfGroup=ciscoVismDsx0ConfGroup, lineFreeDs0Count=lineFreeDs0Count, ds0CasOnHookMinMakeTime=ds0CasOnHookMinMakeTime, ds0CasDelayImmedStart=ds0CasDelayImmedStart, ds0CasGaurdTime=ds0CasGaurdTime, ciscoVismDsx0MIBConformance=ciscoVismDsx0MIBConformance, ds0LoopbackCommand=ds0LoopbackCommand, ds0CasParameterSource=ds0CasParameterSource, ds0CasWinkMaxMakeTime=ds0CasWinkMaxMakeTime, ciscoVismDsx0StatusGroup=ciscoVismDsx0StatusGroup, ds0CasFlashMinMakeTime=ds0CasFlashMinMakeTime, lineActiveHighWaterMark=lineActiveHighWaterMark, vismDs0StatusEntry=vismDs0StatusEntry, ciscoVismDsx0ConfDeprecatedGroup=ciscoVismDsx0ConfDeprecatedGroup, ds0Number=ds0Number, ds0BundleMapped=ds0BundleMapped, ds0ChanNum=ds0ChanNum, ds0CasDirectionality=ds0CasDirectionality, ds0InsertLocalCas=ds0InsertLocalCas, ds0CasMinStartDialTime=ds0CasMinStartDialTime, ds0InputGain=ds0InputGain, ds0SeizedCode=ds0SeizedCode, dsx0VismChanMapEntry=dsx0VismChanMapEntry, ds0RxCasTransTblName=ds0RxCasTransTblName, ds0SignalingType=ds0SignalingType, vismBlockDs0Count=vismBlockDs0Count, vismFreeDs0Count=vismFreeDs0Count, dsx0VismCnfEntry=dsx0VismCnfEntry, ds0Companding=ds0Companding, ds0CasFlashMaxMakeTime=ds0CasFlashMaxMakeTime, ds0CasMinDelayDialTime=ds0CasMinDelayDialTime, vismTotalDs0Count=vismTotalDs0Count, ds0CasVariantName=ds0CasVariantName, ds0IdleCode=ds0IdleCode, lineBlockDs0Count=lineBlockDs0Count, lineTotalDs0Count=lineTotalDs0Count, ds0Status=ds0Status, vismDs0CardStats=vismDs0CardStats, lineActiveDs0Count=lineActiveDs0Count)
