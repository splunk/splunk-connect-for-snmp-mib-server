#
# PySNMP MIB module WWP-LEOS-RSVPTE-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/WWP-LEOS-RSVPTE-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 21:31:36 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ConstraintsIntersection, ConstraintsUnion, ValueRangeConstraint, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ConstraintsIntersection", "ConstraintsUnion", "ValueRangeConstraint", "SingleValueConstraint")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
ObjectIdentity, TimeTicks, Gauge32, Unsigned32, iso, Bits, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter64, ModuleIdentity, NotificationType, IpAddress, Counter32, Integer32, MibIdentifier = mibBuilder.importSymbols("SNMPv2-SMI", "ObjectIdentity", "TimeTicks", "Gauge32", "Unsigned32", "iso", "Bits", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter64", "ModuleIdentity", "NotificationType", "IpAddress", "Counter32", "Integer32", "MibIdentifier")
MacAddress, RowStatus, DisplayString, TruthValue, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "MacAddress", "RowStatus", "DisplayString", "TruthValue", "TextualConvention")
wwpModulesLeos, = mibBuilder.importSymbols("WWP-SMI", "wwpModulesLeos")
wwpLeosRsvpteMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 6141, 2, 60, 30))
wwpLeosRsvpteMIB.setRevisions(('2011-07-06 00:00', '2005-08-08 17:00',))
if mibBuilder.loadTexts: wwpLeosRsvpteMIB.setLastUpdated('201107060000Z')
if mibBuilder.loadTexts: wwpLeosRsvpteMIB.setOrganization('Ciena, Inc')
class AdvertisedLabel(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 99))
    namedValues = NamedValues(("implicitnull", 1), ("nonreserved", 99))

wwpLeosRsvpteMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 6141, 2, 60, 30, 1))
wwpLeosRsvpteObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 6141, 2, 60, 30, 1, 1))
wwpLeosRsvpte = MibIdentifier((1, 3, 6, 1, 4, 1, 6141, 2, 60, 30, 1, 2))
wwpLeosRsvpteAdminStatus = MibScalar((1, 3, 6, 1, 4, 1, 6141, 2, 60, 30, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpLeosRsvpteAdminStatus.setStatus('current')
wwpLeosRsvpteOperStatus = MibScalar((1, 3, 6, 1, 4, 1, 6141, 2, 60, 30, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("goingUp", 3), ("goingDown", 4), ("actFailed", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosRsvpteOperStatus.setStatus('current')
wwpLeosRsvpteRetryInterval = MibScalar((1, 3, 6, 1, 4, 1, 6141, 2, 60, 30, 1, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(3, 65)).clone(3)).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpLeosRsvpteRetryInterval.setStatus('current')
wwpLeosRsvpteRetryInfiniteState = MibScalar((1, 3, 6, 1, 4, 1, 6141, 2, 60, 30, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("on", 1), ("off", 2))).clone('on')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpLeosRsvpteRetryInfiniteState.setStatus('current')
wwpLeosRsvpteRetryMax = MibScalar((1, 3, 6, 1, 4, 1, 6141, 2, 60, 30, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255)).clone(10)).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosRsvpteRetryMax.setStatus('current')
wwpLeosRsvpteRefreshInterval = MibScalar((1, 3, 6, 1, 4, 1, 6141, 2, 60, 30, 1, 1, 6), Integer32().clone(30000)).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosRsvpteRefreshInterval.setStatus('current')
wwpLeosRsvpteRefreshMultiple = MibScalar((1, 3, 6, 1, 4, 1, 6141, 2, 60, 30, 1, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 214783647)).clone(3)).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosRsvpteRefreshMultiple.setStatus('current')
wwpLeosRsvpteRfrshSlewDenom = MibScalar((1, 3, 6, 1, 4, 1, 6141, 2, 60, 30, 1, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 214783647)).clone(10)).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosRsvpteRfrshSlewDenom.setStatus('current')
wwpLeosRsvpteRfrshSlewNumerator = MibScalar((1, 3, 6, 1, 4, 1, 6141, 2, 60, 30, 1, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 214783647)).clone(3)).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosRsvpteRfrshSlewNumerator.setStatus('current')
wwpLeosRsvpteBlockadeMultiple = MibScalar((1, 3, 6, 1, 4, 1, 6141, 2, 60, 30, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 214783647)).clone(2)).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosRsvpteBlockadeMultiple.setStatus('current')
wwpLeosRsvpteLSPSetupPriority = MibScalar((1, 3, 6, 1, 4, 1, 6141, 2, 60, 30, 1, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7)).clone(4)).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosRsvpteLSPSetupPriority.setStatus('current')
wwpLeosRsvpteLSPHoldingPriority = MibScalar((1, 3, 6, 1, 4, 1, 6141, 2, 60, 30, 1, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7)).clone(3)).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosRsvpteLSPHoldingPriority.setStatus('current')
wwpLeosRsvpteUseHopByHop = MibScalar((1, 3, 6, 1, 4, 1, 6141, 2, 60, 30, 1, 1, 13), TruthValue().clone('false')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosRsvpteUseHopByHop.setStatus('current')
wwpLeosRsvpteRestartCapable = MibScalar((1, 3, 6, 1, 4, 1, 6141, 2, 60, 30, 1, 1, 14), TruthValue().clone('false')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosRsvpteRestartCapable.setStatus('current')
wwpLeosRsvpteRestartTime = MibScalar((1, 3, 6, 1, 4, 1, 6141, 2, 60, 30, 1, 1, 15), Unsigned32().clone(10000)).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosRsvpteRestartTime.setStatus('current')
wwpLeosRsvpteRecoveryTime = MibScalar((1, 3, 6, 1, 4, 1, 6141, 2, 60, 30, 1, 1, 16), Unsigned32().clone(10000)).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosRsvpteRecoveryTime.setStatus('current')
wwpLeosRsvpteMinPeerRestart = MibScalar((1, 3, 6, 1, 4, 1, 6141, 2, 60, 30, 1, 1, 17), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosRsvpteMinPeerRestart.setStatus('current')
wwpLeosRsvpteIfTable = MibTable((1, 3, 6, 1, 4, 1, 6141, 2, 60, 30, 1, 2, 1), )
if mibBuilder.loadTexts: wwpLeosRsvpteIfTable.setStatus('current')
wwpLeosRsvpteIfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6141, 2, 60, 30, 1, 2, 1, 1), ).setIndexNames((0, "WWP-LEOS-RSVPTE-MIB", "wwpLeosRsvpteIfIndex"))
if mibBuilder.loadTexts: wwpLeosRsvpteIfEntry.setStatus('current')
wwpLeosRsvpteIfName = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 30, 1, 2, 1, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosRsvpteIfName.setStatus('current')
wwpLeosRsvpteIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 30, 1, 2, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4096)))
if mibBuilder.loadTexts: wwpLeosRsvpteIfIndex.setStatus('current')
wwpLeosRsvpteIfIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 30, 1, 2, 1, 1, 3), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosRsvpteIfIpAddr.setStatus('current')
wwpLeosRsvpteIfMtu = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 30, 1, 2, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1500, 9216))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpLeosRsvpteIfMtu.setStatus('current')
wwpLeosRsvpteIfAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 30, 1, 2, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpLeosRsvpteIfAdminStatus.setStatus('current')
wwpLeosRsvpteIfOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 30, 1, 2, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("up", 1), ("down", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosRsvpteIfOperStatus.setStatus('current')
wwpLeosRsvpteIfHelloInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 30, 1, 2, 1, 1, 7), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 30)).clone(1)).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpLeosRsvpteIfHelloInterval.setStatus('current')
wwpLeosRsvpteIfHelloTolerance = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 30, 1, 2, 1, 1, 8), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 10)).clone(3)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpLeosRsvpteIfHelloTolerance.setStatus('current')
wwpLeosRsvpteIfAdvertisedLabel = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 30, 1, 2, 1, 1, 9), AdvertisedLabel().clone(99)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpLeosRsvpteIfAdvertisedLabel.setStatus('current')
mibBuilder.exportSymbols("WWP-LEOS-RSVPTE-MIB", wwpLeosRsvpteIfTable=wwpLeosRsvpteIfTable, wwpLeosRsvpteRestartCapable=wwpLeosRsvpteRestartCapable, PYSNMP_MODULE_ID=wwpLeosRsvpteMIB, AdvertisedLabel=AdvertisedLabel, wwpLeosRsvpteIfAdvertisedLabel=wwpLeosRsvpteIfAdvertisedLabel, wwpLeosRsvpteIfAdminStatus=wwpLeosRsvpteIfAdminStatus, wwpLeosRsvpteIfMtu=wwpLeosRsvpteIfMtu, wwpLeosRsvpteIfIndex=wwpLeosRsvpteIfIndex, wwpLeosRsvpteRecoveryTime=wwpLeosRsvpteRecoveryTime, wwpLeosRsvpteUseHopByHop=wwpLeosRsvpteUseHopByHop, wwpLeosRsvpteIfName=wwpLeosRsvpteIfName, wwpLeosRsvpteLSPHoldingPriority=wwpLeosRsvpteLSPHoldingPriority, wwpLeosRsvpteRfrshSlewDenom=wwpLeosRsvpteRfrshSlewDenom, wwpLeosRsvpteLSPSetupPriority=wwpLeosRsvpteLSPSetupPriority, wwpLeosRsvpteRestartTime=wwpLeosRsvpteRestartTime, wwpLeosRsvpteRetryMax=wwpLeosRsvpteRetryMax, wwpLeosRsvpteRetryInterval=wwpLeosRsvpteRetryInterval, wwpLeosRsvpteIfOperStatus=wwpLeosRsvpteIfOperStatus, wwpLeosRsvpteIfHelloTolerance=wwpLeosRsvpteIfHelloTolerance, wwpLeosRsvpteAdminStatus=wwpLeosRsvpteAdminStatus, wwpLeosRsvpteMinPeerRestart=wwpLeosRsvpteMinPeerRestart, wwpLeosRsvpteRfrshSlewNumerator=wwpLeosRsvpteRfrshSlewNumerator, wwpLeosRsvpteRefreshInterval=wwpLeosRsvpteRefreshInterval, wwpLeosRsvpteObjects=wwpLeosRsvpteObjects, wwpLeosRsvpte=wwpLeosRsvpte, wwpLeosRsvpteIfIpAddr=wwpLeosRsvpteIfIpAddr, wwpLeosRsvpteMIB=wwpLeosRsvpteMIB, wwpLeosRsvpteMIBObjects=wwpLeosRsvpteMIBObjects, wwpLeosRsvpteRetryInfiniteState=wwpLeosRsvpteRetryInfiniteState, wwpLeosRsvpteRefreshMultiple=wwpLeosRsvpteRefreshMultiple, wwpLeosRsvpteOperStatus=wwpLeosRsvpteOperStatus, wwpLeosRsvpteIfEntry=wwpLeosRsvpteIfEntry, wwpLeosRsvpteIfHelloInterval=wwpLeosRsvpteIfHelloInterval, wwpLeosRsvpteBlockadeMultiple=wwpLeosRsvpteBlockadeMultiple)
