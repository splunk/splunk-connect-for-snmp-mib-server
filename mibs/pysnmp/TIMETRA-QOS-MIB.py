#
# PySNMP MIB module TIMETRA-QOS-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/TIMETRA-QOS-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 21:09:43 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ConstraintsUnion, ValueSizeConstraint, SingleValueConstraint, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ConstraintsUnion", "ValueSizeConstraint", "SingleValueConstraint", "ValueRangeConstraint")
AtmVcIdentifier, AtmServiceCategory, AtmTrafficDescrParamIndex = mibBuilder.importSymbols("ATM-TC-MIB", "AtmVcIdentifier", "AtmServiceCategory", "AtmTrafficDescrParamIndex")
InetAddressType, InetAddressIPv6, InetAddress, InetAddressPrefixLength = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddressType", "InetAddressIPv6", "InetAddress", "InetAddressPrefixLength")
ModuleCompliance, ObjectGroup, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "ObjectGroup", "NotificationGroup")
MibIdentifier, Counter32, iso, TimeTicks, NotificationType, Unsigned32, Counter64, Bits, Gauge32, ModuleIdentity, IpAddress, Integer32, MibScalar, MibTable, MibTableRow, MibTableColumn, ObjectIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "MibIdentifier", "Counter32", "iso", "TimeTicks", "NotificationType", "Unsigned32", "Counter64", "Bits", "Gauge32", "ModuleIdentity", "IpAddress", "Integer32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ObjectIdentity")
StorageType, TruthValue, MacAddress, TextualConvention, DisplayString, TimeStamp, RowStatus = mibBuilder.importSymbols("SNMPv2-TC", "StorageType", "TruthValue", "MacAddress", "TextualConvention", "DisplayString", "TimeStamp", "RowStatus")
tmnxSRConfs, timetraSRMIBModules, tmnxSRNotifyPrefix, tmnxSRObjs = mibBuilder.importSymbols("TIMETRA-GLOBAL-MIB", "tmnxSRConfs", "timetraSRMIBModules", "tmnxSRNotifyPrefix", "tmnxSRObjs")
TmnxMcMlpppClassIndex, = mibBuilder.importSymbols("TIMETRA-PORT-MIB", "TmnxMcMlpppClassIndex")
TRemarkType, THsmdaPIRKRate, THsmdaPolicyScheduleClass, TNonZeroWeight, TTcpUdpPortOperator, TmnxEgrPolicerStatMode, TWeight, TEgressHsmdaQueueId, TPriority, TPortSchedulerPIR, TLNamedItemOrEmpty, TPrecValueOrNone, TDEProfile, TAtmTdpDescrType, THSMDABurstSizeBytes, TNamedItemOrEmpty, TItemScope, TIngressHsmdaCounterIdOrZero, TBurstSizeBytes, THsmdaWeightClass, TBurstHundredthsOfPercent, TLevelOrDefault, TProfileOrDei, THsmdaPIRMRate, THsmdaSchedulerPolicyGroupId, TPrecValue, TDEProfileOrDei, TMaxDecRate, TBWRateType, TSapIngressPolicyID, QTagFullRangeOrNone, TPriorityOrDefault, QTagFullRange, TTcpUdpPort, THPolPIRRate, TEntryId, TLspExpValue, THPolVirtualScheCIRRate, TEgressQPerPacketOffset, TPIRRatePercent, TMlpppQoSProfileId, TProfileUseDEOrNone, TPIRRate, TPolicerRateType, IpAddressPrefixLength, TItemMatch, TQueueMode, TEgressHsmdaPerPacketOffset, TDSCPNameOrEmpty, TRatePercent, TIngressHsmdaPerPacketOffset, TMatchCriteria, TRateType, TMacFilterType, TDEValue, TPolicerWeight, TNamedItem, TmnxEnabledDisabled, TBurstSize, TDSCPValue, TMcFrQoSProfileId, TAdaptationRule, ServiceAccessPoint, THPolCIRRate, TEgressHsmdaCounterIdOrZero, TPlcrBurstSizeBytes, THSMDAQueueBurstLimit, TProfileOrNone, TNetworkPolicyID, TEgrPolicerIdOrNone, THsmdaWrrWeight, TItemDescription, TProfile, TEgressQueueId, TLevel, TIngressQueueId, Dot1PPriority, TEgrPolicerId, TmnxIngPolicerStatMode, TBurstPercent, THsmdaPolicyIncludeQueues, TDSCPName, THsmdaWeight, TIngPolicerIdOrNone, TAdvCfgRate, TIngressHsmdaQueueId, TFCName, TBurstPercentOrDefault, TPortSchedulerCIR, TmnxSlopeMap, TIngPolicerId, THsmdaCIRKRate, TPerPacketOffset, TFCNameOrEmpty, TCIRRate, TFrameType, TQueueId, TBurstLimit, TIpProtocol, THPolVirtualSchePIRRate, TPortSchedulerPIRRate, TClassBurstLimit, TSapEgressPolicyID = mibBuilder.importSymbols("TIMETRA-TC-MIB", "TRemarkType", "THsmdaPIRKRate", "THsmdaPolicyScheduleClass", "TNonZeroWeight", "TTcpUdpPortOperator", "TmnxEgrPolicerStatMode", "TWeight", "TEgressHsmdaQueueId", "TPriority", "TPortSchedulerPIR", "TLNamedItemOrEmpty", "TPrecValueOrNone", "TDEProfile", "TAtmTdpDescrType", "THSMDABurstSizeBytes", "TNamedItemOrEmpty", "TItemScope", "TIngressHsmdaCounterIdOrZero", "TBurstSizeBytes", "THsmdaWeightClass", "TBurstHundredthsOfPercent", "TLevelOrDefault", "TProfileOrDei", "THsmdaPIRMRate", "THsmdaSchedulerPolicyGroupId", "TPrecValue", "TDEProfileOrDei", "TMaxDecRate", "TBWRateType", "TSapIngressPolicyID", "QTagFullRangeOrNone", "TPriorityOrDefault", "QTagFullRange", "TTcpUdpPort", "THPolPIRRate", "TEntryId", "TLspExpValue", "THPolVirtualScheCIRRate", "TEgressQPerPacketOffset", "TPIRRatePercent", "TMlpppQoSProfileId", "TProfileUseDEOrNone", "TPIRRate", "TPolicerRateType", "IpAddressPrefixLength", "TItemMatch", "TQueueMode", "TEgressHsmdaPerPacketOffset", "TDSCPNameOrEmpty", "TRatePercent", "TIngressHsmdaPerPacketOffset", "TMatchCriteria", "TRateType", "TMacFilterType", "TDEValue", "TPolicerWeight", "TNamedItem", "TmnxEnabledDisabled", "TBurstSize", "TDSCPValue", "TMcFrQoSProfileId", "TAdaptationRule", "ServiceAccessPoint", "THPolCIRRate", "TEgressHsmdaCounterIdOrZero", "TPlcrBurstSizeBytes", "THSMDAQueueBurstLimit", "TProfileOrNone", "TNetworkPolicyID", "TEgrPolicerIdOrNone", "THsmdaWrrWeight", "TItemDescription", "TProfile", "TEgressQueueId", "TLevel", "TIngressQueueId", "Dot1PPriority", "TEgrPolicerId", "TmnxIngPolicerStatMode", "TBurstPercent", "THsmdaPolicyIncludeQueues", "TDSCPName", "THsmdaWeight", "TIngPolicerIdOrNone", "TAdvCfgRate", "TIngressHsmdaQueueId", "TFCName", "TBurstPercentOrDefault", "TPortSchedulerCIR", "TmnxSlopeMap", "TIngPolicerId", "THsmdaCIRKRate", "TPerPacketOffset", "TFCNameOrEmpty", "TCIRRate", "TFrameType", "TQueueId", "TBurstLimit", "TIpProtocol", "THPolVirtualSchePIRRate", "TPortSchedulerPIRRate", "TClassBurstLimit", "TSapEgressPolicyID")
timetraQosMIBModule = ModuleIdentity((1, 3, 6, 1, 4, 1, 6527, 1, 1, 3, 16))
timetraQosMIBModule.setRevisions(('1909-02-28 00:00', '1908-07-01 00:00', '1908-01-01 00:00', '1907-01-01 00:00', '1906-02-28 00:00', '1905-08-31 00:00', '1905-01-24 00:00', '1904-01-15 00:00', '1903-08-15 00:00', '2003-01-20 00:00', '2001-05-29 00:00',))
if mibBuilder.loadTexts: timetraQosMIBModule.setLastUpdated('201102010000Z')
if mibBuilder.loadTexts: timetraQosMIBModule.setOrganization('Alcatel-Lucent')
tQosObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16))
tQosNotifyPrefix = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 16))
tQosNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 16, 0))
tmnxQosConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 16))
tDSCPObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 1))
tFCObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 2))
tSapIngressObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 3))
tSapEgressObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 4))
tNetworkObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 5))
tNetworkQueueObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 6))
tSharedQueueObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 7))
tSlopeObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 10))
tSchedulerObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 12))
tQosTimeStampObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 20))
tAtmTdpObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 21))
tPoolObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 22))
tMcMlpppIngressObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 23))
tMcMlpppEgressObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 24))
tMcFrIngressObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 25))
tMcFrEgressObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 26))
tQosPolicerObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 27))
tWrrObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 28))
class TmnxMcFrClassIndex(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ValueRangeConstraint(0, 15)

tDSCPNameTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 1, 1), )
if mibBuilder.loadTexts: tDSCPNameTable.setStatus('current')
tDSCPNameEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 1, 1, 1), ).setIndexNames((0, "TIMETRA-QOS-MIB", "tDSCPName"))
if mibBuilder.loadTexts: tDSCPNameEntry.setStatus('current')
tDSCPName = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 1, 1, 1, 1), TDSCPName())
if mibBuilder.loadTexts: tDSCPName.setStatus('current')
tDSCPNameRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 1, 1, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tDSCPNameRowStatus.setStatus('current')
tDSCPNameStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 1, 1, 1, 3), StorageType().clone('nonVolatile')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tDSCPNameStorageType.setStatus('current')
tDSCPNameDscpValue = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 1, 1, 1, 4), TDSCPValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tDSCPNameDscpValue.setStatus('current')
tDSCPNameLastChanged = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 1, 1, 1, 5), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tDSCPNameLastChanged.setStatus('current')
tFCNameTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 2, 1), )
if mibBuilder.loadTexts: tFCNameTable.setStatus('current')
tFCNameEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 2, 1, 1), ).setIndexNames((0, "TIMETRA-QOS-MIB", "tFCName"))
if mibBuilder.loadTexts: tFCNameEntry.setStatus('current')
tFCName = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 2, 1, 1, 1), TFCName())
if mibBuilder.loadTexts: tFCName.setStatus('current')
tFCRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 2, 1, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tFCRowStatus.setStatus('current')
tFCStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 2, 1, 1, 3), StorageType().clone('nonVolatile')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tFCStorageType.setStatus('current')
tFCValue = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 2, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tFCValue.setStatus('current')
tFCNameLastChanged = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 2, 1, 1, 5), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tFCNameLastChanged.setStatus('current')
tSapIngressTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 3, 1), )
if mibBuilder.loadTexts: tSapIngressTable.setStatus('current')
tSapIngressEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 3, 1, 1), ).setIndexNames((0, "TIMETRA-QOS-MIB", "tSapIngressIndex"))
if mibBuilder.loadTexts: tSapIngressEntry.setStatus('current')
tSapIngressIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 3, 1, 1, 1), TSapIngressPolicyID().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(1, 65535), ValueRangeConstraint(65536, 65536), ValueRangeConstraint(65537, 65537), )))
if mibBuilder.loadTexts: tSapIngressIndex.setStatus('current')
tSapIngressRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 3, 1, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tSapIngressRowStatus.setStatus('current')
tSapIngressScope = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 3, 1, 1, 3), TItemScope().clone('template')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tSapIngressScope.setStatus('current')
tSapIngressDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 3, 1, 1, 4), TItemDescription().clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tSapIngressDescription.setStatus('current')
tSapIngressDefaultFC = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 3, 1, 1, 5), TNamedItem().clone(hexValue="be")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tSapIngressDefaultFC.setStatus('current')
tSapIngressDefaultFCPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 3, 1, 1, 6), TPriority().clone('low')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tSapIngressDefaultFCPriority.setStatus('current')
tSapIngressMatchCriteria = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 3, 1, 1, 7), TMatchCriteria()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tSapIngressMatchCriteria.setStatus('current')
tSapIngressLastChanged = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 3, 1, 1, 8), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tSapIngressLastChanged.setStatus('current')
tSapIngressHsmdaPacketOffset = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 3, 1, 1, 9), TIngressHsmdaPerPacketOffset()).setUnits('bytes').setMaxAccess("readcreate")
if mibBuilder.loadTexts: tSapIngressHsmdaPacketOffset.setStatus('obsolete')
tSapIngressDefFCHsmdaCntrOvr = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 3, 1, 1, 10), TIngressHsmdaCounterIdOrZero()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tSapIngressDefFCHsmdaCntrOvr.setStatus('obsolete')
tSapIngressMacCritType = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 3, 1, 1, 11), TMacFilterType().clone('normal')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tSapIngressMacCritType.setStatus('current')
tSapIngressPolicyName = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 3, 1, 1, 12), TLNamedItemOrEmpty().clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tSapIngressPolicyName.setStatus('current')
tSapIngressQueueTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 3, 2), )
if mibBuilder.loadTexts: tSapIngressQueueTable.setStatus('current')
tSapIngressQueueEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 3, 2, 1), ).setIndexNames((0, "TIMETRA-QOS-MIB", "tSapIngressIndex"), (0, "TIMETRA-QOS-MIB", "tSapIngressQueue"))
if mibBuilder.loadTexts: tSapIngressQueueEntry.setStatus('current')
tSapIngressQueue = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 3, 2, 1, 1), TIngressQueueId().subtype(subtypeSpec=ValueRangeConstraint(1, 32)))
if mibBuilder.loadTexts: tSapIngressQueue.setStatus('current')
tSapIngressQueueRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 3, 2, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tSapIngressQueueRowStatus.setStatus('current')
tSapIngressQueueParent = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 3, 2, 1, 3), TNamedItemOrEmpty().clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tSapIngressQueueParent.setStatus('current')
tSapIngressQueueLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 3, 2, 1, 4), TLevel().clone(1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tSapIngressQueueLevel.setStatus('current')
tSapIngressQueueWeight = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 3, 2, 1, 5), TWeight().clone(1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tSapIngressQueueWeight.setStatus('current')
tSapIngressQueueCIRLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 3, 2, 1, 6), TLevelOrDefault()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tSapIngressQueueCIRLevel.setStatus('current')
tSapIngressQueueCIRWeight = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 3, 2, 1, 7), TWeight().clone(1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tSapIngressQueueCIRWeight.setStatus('current')
tSapIngressQueueMCast = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 3, 2, 1, 8), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tSapIngressQueueMCast.setStatus('current')
tSapIngressQueueExpedite = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 3, 2, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("expedited", 1), ("auto-expedited", 2), ("non-expedited", 3))).clone('auto-expedited')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tSapIngressQueueExpedite.setStatus('current')
tSapIngressQueueCBS = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 3, 2, 1, 10), TBurstSize().clone(-1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tSapIngressQueueCBS.setStatus('current')
tSapIngressQueueMBS = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 3, 2, 1, 11), TBurstSize().clone(-1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tSapIngressQueueMBS.setStatus('obsolete')
tSapIngressQueueHiPrioOnly = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 3, 2, 1, 12), TBurstPercentOrDefault().clone(-1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tSapIngressQueueHiPrioOnly.setStatus('current')
tSapIngressQueuePIRAdaptation = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 3, 2, 1, 13), TAdaptationRule().clone('closest')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tSapIngressQueuePIRAdaptation.setStatus('current')
tSapIngressQueueCIRAdaptation = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 3, 2, 1, 14), TAdaptationRule().clone('closest')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tSapIngressQueueCIRAdaptation.setStatus('current')
tSapIngressQueueAdminPIR = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 3, 2, 1, 15), TPIRRate().clone(-1)).setUnits('kbps').setMaxAccess("readcreate")
if mibBuilder.loadTexts: tSapIngressQueueAdminPIR.setStatus('current')
tSapIngressQueueAdminCIR = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 3, 2, 1, 16), TCIRRate()).setUnits('kbps').setMaxAccess("readcreate")
if mibBuilder.loadTexts: tSapIngressQueueAdminCIR.setStatus('current')
tSapIngressQueueOperPIR = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 3, 2, 1, 17), TPIRRate()).setUnits('kbps').setMaxAccess("readonly")
if mibBuilder.loadTexts: tSapIngressQueueOperPIR.setStatus('obsolete')
tSapIngressQueueOperCIR = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 3, 2, 1, 18), TCIRRate()).setUnits('kbps').setMaxAccess("readonly")
if mibBuilder.loadTexts: tSapIngressQueueOperCIR.setStatus('obsolete')
tSapIngressQueueLastChanged = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 3, 2, 1, 19), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tSapIngressQueueLastChanged.setStatus('current')
tSapIngressQueuePoliced = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 3, 2, 1, 20), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tSapIngressQueuePoliced.setStatus('current')
tSapIngressQueueMode = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 3, 2, 1, 21), TQueueMode().clone('priority')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tSapIngressQueueMode.setStatus('current')
tSapIngressQueuePoolName = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 3, 2, 1, 22), TNamedItemOrEmpty().clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tSapIngressQueuePoolName.setStatus('current')
tSapIngressQueueMBSBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 3, 2, 1, 23), TBurstSizeBytes().clone(-1)).setUnits('bytes').setMaxAccess("readcreate")
if mibBuilder.loadTexts: tSapIngressQueueMBSBytes.setStatus('current')
tSapIngressQueueBurstLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 3, 2, 1, 24), TBurstLimit().clone(-1)).setUnits('bytes').setMaxAccess("readcreate")
if mibBuilder.loadTexts: tSapIngressQueueBurstLimit.setStatus('current')
tSapIngressQueueAdminPIRPercent = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 3, 2, 1, 25), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 10000)).clone(10000)).setUnits('hundredths of a percent').setMaxAccess("readcreate")
if mibBuilder.loadTexts: tSapIngressQueueAdminPIRPercent.setStatus('current')
tSapIngressQueueAdminCIRPercent = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 3, 2, 1, 26), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 10000))).setUnits('hundredths of a percent').setMaxAccess("readcreate")
if mibBuilder.loadTexts: tSapIngressQueueAdminCIRPercent.setStatus('current')
tSapIngressQueueRateType = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 3, 2, 1, 27), TBWRateType().clone('kbps')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tSapIngressQueueRateType.setStatus('current')
tSapIngressQueueAdvCfgPolicy = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 3, 2, 1, 28), TNamedItemOrEmpty().clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tSapIngressQueueAdvCfgPolicy.setStatus('current')
tSapIngressDSCPTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 3, 3), )
if mibBuilder.loadTexts: tSapIngressDSCPTable.setStatus('current')
tSapIngressDSCPEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 3, 3, 1), ).setIndexNames((0, "TIMETRA-QOS-MIB", "tSapIngressIndex"), (0, "TIMETRA-QOS-MIB", "tSapIngressDSCP"))
if mibBuilder.loadTexts: tSapIngressDSCPEntry.setStatus('current')
tSapIngressDSCP = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 3, 3, 1, 1), TDSCPName())
if mibBuilder.loadTexts: tSapIngressDSCP.setStatus('current')
tSapIngressDSCPRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 3, 3, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tSapIngressDSCPRowStatus.setStatus('current')
tSapIngressDSCPFC = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 3, 3, 1, 3), TNamedItemOrEmpty().clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tSapIngressDSCPFC.setStatus('current')
tSapIngressDSCPPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 3, 3, 1, 4), TPriorityOrDefault().clone('default')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tSapIngressDSCPPriority.setStatus('current')
tSapIngressDSCPLastChanged = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 3, 3, 1, 5), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tSapIngressDSCPLastChanged.setStatus('current')
tSapIngressDSCPHsmdaCntrOvr = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 3, 3, 1, 6), TIngressHsmdaCounterIdOrZero()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tSapIngressDSCPHsmdaCntrOvr.setStatus('obsolete')
tSapIngressDot1pTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 3, 4), )
if mibBuilder.loadTexts: tSapIngressDot1pTable.setStatus('current')
tSapIngressDot1pEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 3, 4, 1), ).setIndexNames((0, "TIMETRA-QOS-MIB", "tSapIngressIndex"), (0, "TIMETRA-QOS-MIB", "tSapIngressDot1pValue"))
if mibBuilder.loadTexts: tSapIngressDot1pEntry.setStatus('current')
tSapIngressDot1pValue = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 3, 4, 1, 1), Dot1PPriority().subtype(subtypeSpec=ValueRangeConstraint(0, 7)))
if mibBuilder.loadTexts: tSapIngressDot1pValue.setStatus('current')
tSapIngressDot1pRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 3, 4, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tSapIngressDot1pRowStatus.setStatus('current')
tSapIngressDot1pFC = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 3, 4, 1, 3), TNamedItemOrEmpty().clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tSapIngressDot1pFC.setStatus('current')
tSapIngressDot1pPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 3, 4, 1, 4), TPriorityOrDefault().clone('default')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tSapIngressDot1pPriority.setStatus('current')
tSapIngressDot1pLastChanged = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 3, 4, 1, 5), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tSapIngressDot1pLastChanged.setStatus('current')
tSapIngressDot1pHsmdaCntrOvr = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 3, 4, 1, 6), TIngressHsmdaCounterIdOrZero()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tSapIngressDot1pHsmdaCntrOvr.setStatus('obsolete')
tSapIngressIPCriteriaTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 3, 5), )
if mibBuilder.loadTexts: tSapIngressIPCriteriaTable.setStatus('current')
tSapIngressIPCriteriaEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 3, 5, 1), ).setIndexNames((0, "TIMETRA-QOS-MIB", "tSapIngressIndex"), (0, "TIMETRA-QOS-MIB", "tSapIngressIPCriteriaIndex"))
if mibBuilder.loadTexts: tSapIngressIPCriteriaEntry.setStatus('current')
tSapIngressIPCriteriaIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 3, 5, 1, 1), TEntryId())
if mibBuilder.loadTexts: tSapIngressIPCriteriaIndex.setStatus('current')
tSapIngressIPCriteriaRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 3, 5, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tSapIngressIPCriteriaRowStatus.setStatus('current')
tSapIngressIPCriteriaDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 3, 5, 1, 3), TItemDescription().clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tSapIngressIPCriteriaDescription.setStatus('current')
tSapIngressIPCriteriaActionFC = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 3, 5, 1, 4), TNamedItemOrEmpty().clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tSapIngressIPCriteriaActionFC.setStatus('current')
tSapIngressIPCriteriaActionPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 3, 5, 1, 5), TPriorityOrDefault().clone('default')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tSapIngressIPCriteriaActionPriority.setStatus('current')
tSapIngressIPCriteriaSourceIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 3, 5, 1, 6), IpAddress().clone(hexValue="00000000")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tSapIngressIPCriteriaSourceIpAddr.setStatus('current')
tSapIngressIPCriteriaSourceIpMask = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 3, 5, 1, 7), IpAddressPrefixLength()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tSapIngressIPCriteriaSourceIpMask.setStatus('current')
tSapIngressIPCriteriaDestIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 3, 5, 1, 8), IpAddress().clone(hexValue="00000000")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tSapIngressIPCriteriaDestIpAddr.setStatus('current')
tSapIngressIPCriteriaDestIpMask = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 3, 5, 1, 9), IpAddressPrefixLength()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tSapIngressIPCriteriaDestIpMask.setStatus('current')
tSapIngressIPCriteriaProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 3, 5, 1, 10), TIpProtocol().clone(-1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tSapIngressIPCriteriaProtocol.setStatus('current')
tSapIngressIPCriteriaSourcePortValue1 = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 3, 5, 1, 11), TTcpUdpPort()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tSapIngressIPCriteriaSourcePortValue1.setStatus('current')
tSapIngressIPCriteriaSourcePortValue2 = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 3, 5, 1, 12), TTcpUdpPort()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tSapIngressIPCriteriaSourcePortValue2.setStatus('current')
tSapIngressIPCriteriaSourcePortOperator = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 3, 5, 1, 13), TTcpUdpPortOperator().clone('none')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tSapIngressIPCriteriaSourcePortOperator.setStatus('current')
tSapIngressIPCriteriaDestPortValue1 = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 3, 5, 1, 14), TTcpUdpPort()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tSapIngressIPCriteriaDestPortValue1.setStatus('current')
tSapIngressIPCriteriaDestPortValue2 = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 3, 5, 1, 15), TTcpUdpPort()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tSapIngressIPCriteriaDestPortValue2.setStatus('current')
tSapIngressIPCriteriaDestPortOperator = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 3, 5, 1, 16), TTcpUdpPortOperator().clone('none')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tSapIngressIPCriteriaDestPortOperator.setStatus('current')
tSapIngressIPCriteriaDSCP = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 3, 5, 1, 17), TDSCPNameOrEmpty().clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tSapIngressIPCriteriaDSCP.setStatus('current')
tSapIngressIPCriteriaFragment = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 3, 5, 1, 19), TItemMatch().clone('off')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tSapIngressIPCriteriaFragment.setStatus('current')
tSapIngressIPCriteriaLastChanged = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 3, 5, 1, 20), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tSapIngressIPCriteriaLastChanged.setStatus('current')
tSapIngressIPCritHsmdaCntrOvr = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 3, 5, 1, 21), TIngressHsmdaCounterIdOrZero()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tSapIngressIPCritHsmdaCntrOvr.setStatus('obsolete')
tSapIngressIPCriteriaIpPrecValue = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 3, 5, 1, 31), Dot1PPriority().clone(-1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tSapIngressIPCriteriaIpPrecValue.setStatus('current')
tSapIngressIPCriteriaIpPrecMask = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 3, 5, 1, 32), Dot1PPriority().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tSapIngressIPCriteriaIpPrecMask.setStatus('current')
tSapIngressMacCriteriaTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 3, 6), )
if mibBuilder.loadTexts: tSapIngressMacCriteriaTable.setStatus('current')
tSapIngressMacCriteriaEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 3, 6, 1), ).setIndexNames((0, "TIMETRA-QOS-MIB", "tSapIngressIndex"), (0, "TIMETRA-QOS-MIB", "tSapIngressMacCriteriaIndex"))
if mibBuilder.loadTexts: tSapIngressMacCriteriaEntry.setStatus('current')
tSapIngressMacCriteriaIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 3, 6, 1, 1), TEntryId())
if mibBuilder.loadTexts: tSapIngressMacCriteriaIndex.setStatus('current')
tSapIngressMacCriteriaRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 3, 6, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tSapIngressMacCriteriaRowStatus.setStatus('current')
tSapIngressMacCriteriaDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 3, 6, 1, 3), TItemDescription().clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tSapIngressMacCriteriaDescription.setStatus('current')
tSapIngressMacCriteriaActionFC = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 3, 6, 1, 4), TNamedItemOrEmpty()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tSapIngressMacCriteriaActionFC.setStatus('current')
tSapIngressMacCriteriaActionPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 3, 6, 1, 5), TPriorityOrDefault().clone('default')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tSapIngressMacCriteriaActionPriority.setStatus('current')
tSapIngressMacCriteriaFrameType = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 3, 6, 1, 6), TFrameType().clone('e802dot3')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tSapIngressMacCriteriaFrameType.setStatus('current')
tSapIngressMacCriteriaSrcMacAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 3, 6, 1, 8), MacAddress().clone(hexValue="000000000000")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tSapIngressMacCriteriaSrcMacAddr.setStatus('current')
tSapIngressMacCriteriaSrcMacMask = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 3, 6, 1, 9), MacAddress().clone(hexValue="000000000000")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tSapIngressMacCriteriaSrcMacMask.setStatus('current')
tSapIngressMacCriteriaDstMacAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 3, 6, 1, 10), MacAddress().clone(hexValue="000000000000")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tSapIngressMacCriteriaDstMacAddr.setStatus('current')
tSapIngressMacCriteriaDstMacMask = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 3, 6, 1, 11), MacAddress().clone(hexValue="000000000000")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tSapIngressMacCriteriaDstMacMask.setStatus('current')
tSapIngressMacCriteriaDot1PValue = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 3, 6, 1, 12), Dot1PPriority().clone(-1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tSapIngressMacCriteriaDot1PValue.setStatus('current')
tSapIngressMacCriteriaDot1PMask = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 3, 6, 1, 13), Dot1PPriority().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tSapIngressMacCriteriaDot1PMask.setStatus('current')
tSapIngressMacCriteriaEthernetType = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 3, 6, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(-1, -1), ValueRangeConstraint(1536, 65535), )).clone(-1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tSapIngressMacCriteriaEthernetType.setStatus('current')
tSapIngressMacCriteriaDSAP = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 3, 6, 1, 15), ServiceAccessPoint().clone(-1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tSapIngressMacCriteriaDSAP.setStatus('current')
tSapIngressMacCriteriaDSAPMask = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 3, 6, 1, 16), ServiceAccessPoint().clone(-1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tSapIngressMacCriteriaDSAPMask.setStatus('current')
tSapIngressMacCriteriaSSAP = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 3, 6, 1, 17), ServiceAccessPoint().clone(-1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tSapIngressMacCriteriaSSAP.setStatus('current')
tSapIngressMacCriteriaSSAPMask = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 3, 6, 1, 18), ServiceAccessPoint().clone(-1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tSapIngressMacCriteriaSSAPMask.setStatus('current')
tSapIngressMacCriteriaSnapPid = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 3, 6, 1, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(-1, -1), ValueRangeConstraint(0, 65535), )).clone(-1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tSapIngressMacCriteriaSnapPid.setStatus('current')
tSapIngressMacCriteriaSnapOui = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 3, 6, 1, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("off", 1), ("zero", 2), ("nonZero", 3))).clone('off')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tSapIngressMacCriteriaSnapOui.setStatus('current')
tSapIngressMacCriteriaLastChanged = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 3, 6, 1, 21), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tSapIngressMacCriteriaLastChanged.setStatus('current')
tSapIngressMacCriteriaAtmVci = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 3, 6, 1, 22), AtmVcIdentifier()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tSapIngressMacCriteriaAtmVci.setStatus('current')
tSapIngressMacCritInnerTagValue = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 3, 6, 1, 23), QTagFullRangeOrNone().clone(-1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tSapIngressMacCritInnerTagValue.setStatus('current')
tSapIngressMacCritInnerTagMask = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 3, 6, 1, 24), QTagFullRange().subtype(subtypeSpec=ValueRangeConstraint(1, 4095)).clone(4095)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tSapIngressMacCritInnerTagMask.setStatus('current')
tSapIngressMacCritOuterTagValue = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 3, 6, 1, 25), QTagFullRangeOrNone().clone(-1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tSapIngressMacCritOuterTagValue.setStatus('current')
tSapIngressMacCritOuterTagMask = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 3, 6, 1, 26), QTagFullRange().subtype(subtypeSpec=ValueRangeConstraint(1, 4095)).clone(4095)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tSapIngressMacCritOuterTagMask.setStatus('current')
tSapIngressFCTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 3, 7), )
if mibBuilder.loadTexts: tSapIngressFCTable.setStatus('current')
tSapIngressFCEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 3, 7, 1), ).setIndexNames((0, "TIMETRA-QOS-MIB", "tSapIngressIndex"), (0, "TIMETRA-QOS-MIB", "tSapIngressFCName"))
if mibBuilder.loadTexts: tSapIngressFCEntry.setStatus('current')
tSapIngressFCName = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 3, 7, 1, 1), TNamedItem())
if mibBuilder.loadTexts: tSapIngressFCName.setStatus('current')
tSapIngressFCRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 3, 7, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tSapIngressFCRowStatus.setStatus('current')
tSapIngressFCQueue = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 3, 7, 1, 3), TIngressQueueId()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tSapIngressFCQueue.setStatus('current')
tSapIngressFCMCastQueue = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 3, 7, 1, 4), TIngressQueueId()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tSapIngressFCMCastQueue.setStatus('current')
tSapIngressFCBCastQueue = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 3, 7, 1, 5), TIngressQueueId()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tSapIngressFCBCastQueue.setStatus('current')
tSapIngressFCUnknownQueue = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 3, 7, 1, 6), TIngressQueueId()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tSapIngressFCUnknownQueue.setStatus('current')
tSapIngressFCLastChanged = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 3, 7, 1, 7), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tSapIngressFCLastChanged.setStatus('current')
tSapIngressFCInProfRemark = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 3, 7, 1, 8), TRemarkType().clone('none')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tSapIngressFCInProfRemark.setStatus('current')
tSapIngressFCInProfDscp = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 3, 7, 1, 9), TNamedItemOrEmpty().clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tSapIngressFCInProfDscp.setStatus('current')
tSapIngressFCInProfPrec = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 3, 7, 1, 10), TPrecValueOrNone().clone(-1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tSapIngressFCInProfPrec.setStatus('current')
tSapIngressFCOutProfRemark = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 3, 7, 1, 11), TRemarkType().clone('none')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tSapIngressFCOutProfRemark.setStatus('current')
tSapIngressFCOutProfDscp = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 3, 7, 1, 12), TNamedItemOrEmpty().clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tSapIngressFCOutProfDscp.setStatus('current')
tSapIngressFCOutProfPrec = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 3, 7, 1, 13), TPrecValueOrNone().clone(-1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tSapIngressFCOutProfPrec.setStatus('current')
tSapIngressFCProfile = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 3, 7, 1, 14), TProfileOrNone().clone('none')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tSapIngressFCProfile.setStatus('current')
tSapIngressFCHsmdaQueue = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 3, 7, 1, 15), TIngressHsmdaQueueId()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tSapIngressFCHsmdaQueue.setStatus('obsolete')
tSapIngressFCHsmdaMCastQueue = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 3, 7, 1, 16), TIngressHsmdaQueueId()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tSapIngressFCHsmdaMCastQueue.setStatus('obsolete')
tSapIngressFCHsmdaBCastQueue = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 3, 7, 1, 17), TIngressHsmdaQueueId()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tSapIngressFCHsmdaBCastQueue.setStatus('obsolete')
tSapIngressFCDE1OutOfProfile = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 3, 7, 1, 18), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tSapIngressFCDE1OutOfProfile.setStatus('current')
tSapIngressFCQGrp = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 3, 7, 1, 19), TNamedItemOrEmpty().clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tSapIngressFCQGrp.setStatus('current')
tSapIngressFCQGrpMCast = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 3, 7, 1, 20), TNamedItemOrEmpty().clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tSapIngressFCQGrpMCast.setStatus('current')
tSapIngressFCQGrpBCast = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 3, 7, 1, 21), TNamedItemOrEmpty().clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tSapIngressFCQGrpBCast.setStatus('current')
tSapIngressFCQGrpUnknown = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 3, 7, 1, 22), TNamedItemOrEmpty().clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tSapIngressFCQGrpUnknown.setStatus('current')
tSapIngressFCPolicer = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 3, 7, 1, 23), TIngPolicerIdOrNone()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tSapIngressFCPolicer.setStatus('current')
tSapIngressFCMCastPolicer = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 3, 7, 1, 24), TIngPolicerIdOrNone()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tSapIngressFCMCastPolicer.setStatus('current')
tSapIngressFCBCastPolicer = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 3, 7, 1, 25), TIngPolicerIdOrNone()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tSapIngressFCBCastPolicer.setStatus('current')
tSapIngressFCUnknownPolicer = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 3, 7, 1, 26), TIngPolicerIdOrNone()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tSapIngressFCUnknownPolicer.setStatus('current')
tSapIngressFCPlcrFPQGrp = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 3, 7, 1, 27), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tSapIngressFCPlcrFPQGrp.setStatus('current')
tSapIngressFCMCastPlcrFPQGrp = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 3, 7, 1, 28), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tSapIngressFCMCastPlcrFPQGrp.setStatus('current')
tSapIngressFCBCastPlcrFPQGrp = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 3, 7, 1, 29), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tSapIngressFCBCastPlcrFPQGrp.setStatus('current')
tSapIngressFCUnknownPlcrFPQGrp = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 3, 7, 1, 30), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tSapIngressFCUnknownPlcrFPQGrp.setStatus('current')
tSapIngressPrecTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 3, 8), )
if mibBuilder.loadTexts: tSapIngressPrecTable.setStatus('current')
tSapIngressPrecEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 3, 8, 1), ).setIndexNames((0, "TIMETRA-QOS-MIB", "tSapIngressIndex"), (0, "TIMETRA-QOS-MIB", "tSapIngressPrecValue"))
if mibBuilder.loadTexts: tSapIngressPrecEntry.setStatus('current')
tSapIngressPrecValue = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 3, 8, 1, 1), TPrecValue())
if mibBuilder.loadTexts: tSapIngressPrecValue.setStatus('current')
tSapIngressPrecRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 3, 8, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tSapIngressPrecRowStatus.setStatus('current')
tSapIngressPrecFC = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 3, 8, 1, 3), TNamedItemOrEmpty().clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tSapIngressPrecFC.setStatus('current')
tSapIngressPrecFCPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 3, 8, 1, 4), TPriorityOrDefault().clone('default')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tSapIngressPrecFCPriority.setStatus('current')
tSapIngressPrecLastChanged = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 3, 8, 1, 5), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tSapIngressPrecLastChanged.setStatus('current')
tSapIngressPrecHsmdaCntrOvr = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 3, 8, 1, 6), TIngressHsmdaCounterIdOrZero()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tSapIngressPrecHsmdaCntrOvr.setStatus('obsolete')
tSapIngressIPv6CriteriaTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 3, 9), )
if mibBuilder.loadTexts: tSapIngressIPv6CriteriaTable.setStatus('current')
tSapIngressIPv6CriteriaEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 3, 9, 1), ).setIndexNames((0, "TIMETRA-QOS-MIB", "tSapIngressIndex"), (0, "TIMETRA-QOS-MIB", "tSapIngressIPv6CriteriaIndex"))
if mibBuilder.loadTexts: tSapIngressIPv6CriteriaEntry.setStatus('current')
tSapIngressIPv6CriteriaIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 3, 9, 1, 1), TEntryId())
if mibBuilder.loadTexts: tSapIngressIPv6CriteriaIndex.setStatus('current')
tSapIngressIPv6CriteriaRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 3, 9, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tSapIngressIPv6CriteriaRowStatus.setStatus('current')
tSapIngressIPv6CriteriaDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 3, 9, 1, 3), TItemDescription().clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tSapIngressIPv6CriteriaDescription.setStatus('current')
tSapIngressIPv6CriteriaActionFC = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 3, 9, 1, 4), TNamedItemOrEmpty().clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tSapIngressIPv6CriteriaActionFC.setStatus('current')
tSapIngressIPv6CriteriaActionPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 3, 9, 1, 5), TPriorityOrDefault().clone('default')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tSapIngressIPv6CriteriaActionPriority.setStatus('current')
tSapIngressIPv6CriteriaSourceIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 3, 9, 1, 6), InetAddressIPv6().clone(hexValue="00000000000000000000000000000000")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tSapIngressIPv6CriteriaSourceIpAddr.setStatus('current')
tSapIngressIPv6CriteriaSourceIpMask = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 3, 9, 1, 7), InetAddressPrefixLength().subtype(subtypeSpec=ValueRangeConstraint(0, 128))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tSapIngressIPv6CriteriaSourceIpMask.setStatus('current')
tSapIngressIPv6CriteriaDestIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 3, 9, 1, 8), InetAddressIPv6().clone(hexValue="00000000000000000000000000000000")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tSapIngressIPv6CriteriaDestIpAddr.setStatus('current')
tSapIngressIPv6CriteriaDestIpMask = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 3, 9, 1, 9), InetAddressPrefixLength().subtype(subtypeSpec=ValueRangeConstraint(0, 128))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tSapIngressIPv6CriteriaDestIpMask.setStatus('current')
tSapIngressIPv6CriteriaNextHeader = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 3, 9, 1, 10), TIpProtocol().clone(-1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tSapIngressIPv6CriteriaNextHeader.setStatus('current')
tSapIngressIPv6CriteriaSourcePortValue1 = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 3, 9, 1, 11), TTcpUdpPort()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tSapIngressIPv6CriteriaSourcePortValue1.setStatus('current')
tSapIngressIPv6CriteriaSourcePortValue2 = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 3, 9, 1, 12), TTcpUdpPort()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tSapIngressIPv6CriteriaSourcePortValue2.setStatus('current')
tSapIngressIPv6CriteriaSourcePortOperator = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 3, 9, 1, 13), TTcpUdpPortOperator().clone('none')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tSapIngressIPv6CriteriaSourcePortOperator.setStatus('current')
tSapIngressIPv6CriteriaDestPortValue1 = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 3, 9, 1, 14), TTcpUdpPort()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tSapIngressIPv6CriteriaDestPortValue1.setStatus('current')
tSapIngressIPv6CriteriaDestPortValue2 = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 3, 9, 1, 15), TTcpUdpPort()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tSapIngressIPv6CriteriaDestPortValue2.setStatus('current')
tSapIngressIPv6CriteriaDestPortOperator = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 3, 9, 1, 16), TTcpUdpPortOperator().clone('none')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tSapIngressIPv6CriteriaDestPortOperator.setStatus('current')
tSapIngressIPv6CriteriaDSCP = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 3, 9, 1, 17), TDSCPNameOrEmpty().clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tSapIngressIPv6CriteriaDSCP.setStatus('current')
tSapIngressIPv6CriteriaLastChanged = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 3, 9, 1, 20), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tSapIngressIPv6CriteriaLastChanged.setStatus('current')
tSapIngressIPv6CriteriaIpPrecValue = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 3, 9, 1, 31), Dot1PPriority().clone(-1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tSapIngressIPv6CriteriaIpPrecValue.setStatus('current')
tSapIngressIPv6CriteriaIpPrecMask = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 3, 9, 1, 32), Dot1PPriority().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tSapIngressIPv6CriteriaIpPrecMask.setStatus('current')
tSapIngressHsmdaQueueTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 3, 10), )
if mibBuilder.loadTexts: tSapIngressHsmdaQueueTable.setStatus('obsolete')
tSapIngressHsmdaQueueEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 3, 10, 1), ).setIndexNames((0, "TIMETRA-QOS-MIB", "tSapIngressIndex"), (0, "TIMETRA-QOS-MIB", "tSapIngressHsmdaQueue"))
if mibBuilder.loadTexts: tSapIngressHsmdaQueueEntry.setStatus('obsolete')
tSapIngressHsmdaQueue = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 3, 10, 1, 1), TIngressHsmdaQueueId().subtype(subtypeSpec=ValueRangeConstraint(1, 8)))
if mibBuilder.loadTexts: tSapIngressHsmdaQueue.setStatus('obsolete')
tSapIngressHsmdaQueueRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 3, 10, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tSapIngressHsmdaQueueRowStatus.setStatus('obsolete')
tSapIngressHsmdaQueueLastChanged = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 3, 10, 1, 3), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tSapIngressHsmdaQueueLastChanged.setStatus('obsolete')
tSapIngressHsmdaQueueCIRAdaptn = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 3, 10, 1, 4), TAdaptationRule().clone('closest')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tSapIngressHsmdaQueueCIRAdaptn.setStatus('obsolete')
tSapIngressHsmdaQueuePIRAdaptn = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 3, 10, 1, 5), TAdaptationRule().clone('closest')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tSapIngressHsmdaQueuePIRAdaptn.setStatus('obsolete')
tSapIngressHsmdaQueueAdminPIR = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 3, 10, 1, 6), THsmdaPIRKRate().clone(-1)).setUnits('kbps').setMaxAccess("readcreate")
if mibBuilder.loadTexts: tSapIngressHsmdaQueueAdminPIR.setStatus('obsolete')
tSapIngressHsmdaQueueAdminCIR = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 3, 10, 1, 7), THsmdaCIRKRate()).setUnits('kbps').setMaxAccess("readcreate")
if mibBuilder.loadTexts: tSapIngressHsmdaQueueAdminCIR.setStatus('obsolete')
tSapIngressHsmdaQueueSlopePolicy = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 3, 10, 1, 8), TNamedItem().clone('default')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tSapIngressHsmdaQueueSlopePolicy.setStatus('obsolete')
tSapIngressHsmdaQueuePoliced = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 3, 10, 1, 9), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tSapIngressHsmdaQueuePoliced.setStatus('obsolete')
tSapIngressLspExpTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 3, 11), )
if mibBuilder.loadTexts: tSapIngressLspExpTable.setStatus('current')
tSapIngressLspExpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 3, 11, 1), ).setIndexNames((0, "TIMETRA-QOS-MIB", "tSapIngressIndex"), (0, "TIMETRA-QOS-MIB", "tSapIngressLspExpValue"))
if mibBuilder.loadTexts: tSapIngressLspExpEntry.setStatus('current')
tSapIngressLspExpValue = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 3, 11, 1, 1), TLspExpValue().subtype(subtypeSpec=ValueRangeConstraint(0, 7)))
if mibBuilder.loadTexts: tSapIngressLspExpValue.setStatus('current')
tSapIngressLspExpRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 3, 11, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tSapIngressLspExpRowStatus.setStatus('current')
tSapIngressLspExpLastChanged = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 3, 11, 1, 3), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tSapIngressLspExpLastChanged.setStatus('current')
tSapIngressLspExpFC = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 3, 11, 1, 4), TNamedItemOrEmpty().clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tSapIngressLspExpFC.setStatus('current')
tSapIngressLspExpFCPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 3, 11, 1, 5), TPriorityOrDefault().clone('default')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tSapIngressLspExpFCPriority.setStatus('current')
tSapIngressLspExpHsmdaCntrOvr = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 3, 11, 1, 6), TIngressHsmdaCounterIdOrZero()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tSapIngressLspExpHsmdaCntrOvr.setStatus('obsolete')
tSapIngPolicerTableLastChanged = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 20, 85), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tSapIngPolicerTableLastChanged.setStatus('current')
tSapIngPolicerTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 3, 12), )
if mibBuilder.loadTexts: tSapIngPolicerTable.setStatus('current')
tSapIngPolicerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 3, 12, 1), ).setIndexNames((0, "TIMETRA-QOS-MIB", "tSapIngressIndex"), (0, "TIMETRA-QOS-MIB", "tSapIngPolicerId"))
if mibBuilder.loadTexts: tSapIngPolicerEntry.setStatus('current')
tSapIngPolicerId = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 3, 12, 1, 1), TIngPolicerId())
if mibBuilder.loadTexts: tSapIngPolicerId.setStatus('current')
tSapIngPolicerRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 3, 12, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tSapIngPolicerRowStatus.setStatus('current')
tSapIngPolicerLastChanged = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 3, 12, 1, 3), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tSapIngPolicerLastChanged.setStatus('current')
tSapIngPolicerDescr = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 3, 12, 1, 4), TItemDescription().clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tSapIngPolicerDescr.setStatus('current')
tSapIngPolicerPIRAdaptation = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 3, 12, 1, 5), TAdaptationRule().clone('closest')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tSapIngPolicerPIRAdaptation.setStatus('current')
tSapIngPolicerCIRAdaptation = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 3, 12, 1, 6), TAdaptationRule().clone('closest')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tSapIngPolicerCIRAdaptation.setStatus('current')
tSapIngPolicerParent = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 3, 12, 1, 7), TNamedItemOrEmpty().clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tSapIngPolicerParent.setStatus('current')
tSapIngPolicerLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 3, 12, 1, 8), TLevel().clone(1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tSapIngPolicerLevel.setStatus('current')
tSapIngPolicerWeight = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 3, 12, 1, 9), TPolicerWeight().clone(1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tSapIngPolicerWeight.setStatus('current')
tSapIngPolicerAdminPIR = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 3, 12, 1, 10), THPolPIRRate().clone(-1)).setUnits('kbps').setMaxAccess("readcreate")
if mibBuilder.loadTexts: tSapIngPolicerAdminPIR.setStatus('current')
tSapIngPolicerAdminCIR = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 3, 12, 1, 11), THPolCIRRate()).setUnits('kbps').setMaxAccess("readcreate")
if mibBuilder.loadTexts: tSapIngPolicerAdminCIR.setStatus('current')
tSapIngPolicerStatMode = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 3, 12, 1, 12), TmnxIngPolicerStatMode().clone('minimal')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tSapIngPolicerStatMode.setStatus('current')
tSapIngPolicerMBS = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 3, 12, 1, 13), TPlcrBurstSizeBytes().clone(-1)).setUnits('bytes').setMaxAccess("readcreate")
if mibBuilder.loadTexts: tSapIngPolicerMBS.setStatus('current')
tSapIngPolicerHiPrioOnly = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 3, 12, 1, 14), TBurstPercentOrDefault().clone(-1)).setUnits('percent').setMaxAccess("readcreate")
if mibBuilder.loadTexts: tSapIngPolicerHiPrioOnly.setStatus('current')
tSapIngPolicerCBS = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 3, 12, 1, 15), TPlcrBurstSizeBytes().clone(-1)).setUnits('bytes').setMaxAccess("readcreate")
if mibBuilder.loadTexts: tSapIngPolicerCBS.setStatus('current')
tSapIngPolicerPktOffset = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 3, 12, 1, 16), TPerPacketOffset()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tSapIngPolicerPktOffset.setStatus('current')
tSapIngPolicerAdminPIRPercent = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 3, 12, 1, 17), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 10000)).clone(10000)).setUnits('hundredths of a percent').setMaxAccess("readcreate")
if mibBuilder.loadTexts: tSapIngPolicerAdminPIRPercent.setStatus('current')
tSapIngPolicerAdminCIRPercent = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 3, 12, 1, 18), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 10000))).setUnits('hundredths of a percent').setMaxAccess("readcreate")
if mibBuilder.loadTexts: tSapIngPolicerAdminCIRPercent.setStatus('current')
tSapIngPolicerRateType = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 3, 12, 1, 19), TPolicerRateType().clone('kbps')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tSapIngPolicerRateType.setStatus('current')
tSapIngPolicerSlopeStartDepth = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 3, 12, 1, 20), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 10000)).clone(10000)).setUnits('hundredths of a percent').setMaxAccess("readcreate")
if mibBuilder.loadTexts: tSapIngPolicerSlopeStartDepth.setStatus('current')
tSapIngPolicerSlopeMaxDepth = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 3, 12, 1, 21), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 10000)).clone(10000)).setUnits('hundredths of a percent').setMaxAccess("readcreate")
if mibBuilder.loadTexts: tSapIngPolicerSlopeMaxDepth.setStatus('current')
tSapIngPolicerSlopeMaxProb = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 3, 12, 1, 22), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 10000)).clone(10000)).setUnits('hundredths of a percent').setMaxAccess("readcreate")
if mibBuilder.loadTexts: tSapIngPolicerSlopeMaxProb.setStatus('current')
tSapIngPolicerSlopeMap = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 3, 12, 1, 23), TmnxSlopeMap().clone('none')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tSapIngPolicerSlopeMap.setStatus('current')
tSapIngPolicerAdvCfgPolicy = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 3, 12, 1, 24), TNamedItemOrEmpty().clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tSapIngPolicerAdvCfgPolicy.setStatus('current')
tSapIngPolicerProfileCapped = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 3, 12, 1, 25), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tSapIngPolicerProfileCapped.setStatus('current')
tSapIngPolicyNameTableLastChgd = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 20, 95), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tSapIngPolicyNameTableLastChgd.setStatus('current')
tSapIngPolicyNameTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 3, 13), )
if mibBuilder.loadTexts: tSapIngPolicyNameTable.setStatus('current')
tSapIngPolicyNameEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 3, 13, 1), ).setIndexNames((0, "TIMETRA-QOS-MIB", "tSapIngressPolicyName"))
if mibBuilder.loadTexts: tSapIngPolicyNameEntry.setStatus('current')
tSapIngPolicyNameId = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 3, 13, 1, 1), TSapIngressPolicyID()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tSapIngPolicyNameId.setStatus('current')
tSapIngPolicyNameRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 3, 13, 1, 2), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tSapIngPolicyNameRowStatus.setStatus('current')
tSapIngPolicyNameLastChanged = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 3, 13, 1, 3), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tSapIngPolicyNameLastChanged.setStatus('current')
tSapEgressTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 4, 1), )
if mibBuilder.loadTexts: tSapEgressTable.setStatus('current')
tSapEgressEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 4, 1, 1), ).setIndexNames((0, "TIMETRA-QOS-MIB", "tSapEgressIndex"))
if mibBuilder.loadTexts: tSapEgressEntry.setStatus('current')
tSapEgressIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 4, 1, 1, 1), TSapEgressPolicyID())
if mibBuilder.loadTexts: tSapEgressIndex.setStatus('current')
tSapEgressRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 4, 1, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tSapEgressRowStatus.setStatus('current')
tSapEgressScope = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 4, 1, 1, 3), TItemScope().clone('template')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tSapEgressScope.setStatus('current')
tSapEgressDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 4, 1, 1, 4), TItemDescription().clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tSapEgressDescription.setStatus('current')
tSapEgressLastChanged = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 4, 1, 1, 5), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tSapEgressLastChanged.setStatus('current')
tSapEgressHsmdaPacketOffset = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 4, 1, 1, 6), TEgressHsmdaPerPacketOffset()).setUnits('bytes').setMaxAccess("readcreate")
if mibBuilder.loadTexts: tSapEgressHsmdaPacketOffset.setStatus('current')
tSapEgressMatchCriteria = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 4, 1, 1, 7), TMatchCriteria()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tSapEgressMatchCriteria.setStatus('current')
tSapEgressHsmdaWrrPolicy = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 4, 1, 1, 8), TNamedItemOrEmpty()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tSapEgressHsmdaWrrPolicy.setStatus('current')
tSapEgressHsmdaLowBrstMaxCls = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 4, 1, 1, 9), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 8)).clone(8)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tSapEgressHsmdaLowBrstMaxCls.setStatus('current')
tSapEgressPolicyName = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 4, 1, 1, 10), TLNamedItemOrEmpty().clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tSapEgressPolicyName.setStatus('current')
tSapEgressEthernetCtag = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 4, 1, 1, 11), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tSapEgressEthernetCtag.setStatus('current')
tSapEgressQueueTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 4, 2), )
if mibBuilder.loadTexts: tSapEgressQueueTable.setStatus('current')
tSapEgressQueueEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 4, 2, 1), ).setIndexNames((0, "TIMETRA-QOS-MIB", "tSapEgressIndex"), (0, "TIMETRA-QOS-MIB", "tSapEgressQueueIndex"))
if mibBuilder.loadTexts: tSapEgressQueueEntry.setStatus('current')
tSapEgressQueueIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 4, 2, 1, 1), TEgressQueueId().subtype(subtypeSpec=ValueRangeConstraint(1, 8)))
if mibBuilder.loadTexts: tSapEgressQueueIndex.setStatus('current')
tSapEgressQueueRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 4, 2, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tSapEgressQueueRowStatus.setStatus('current')
tSapEgressQueueParent = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 4, 2, 1, 3), TNamedItemOrEmpty().clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tSapEgressQueueParent.setStatus('current')
tSapEgressQueueLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 4, 2, 1, 4), TLevel().clone(1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tSapEgressQueueLevel.setStatus('current')
tSapEgressQueueWeight = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 4, 2, 1, 5), TWeight().clone(1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tSapEgressQueueWeight.setStatus('current')
tSapEgressQueueCIRLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 4, 2, 1, 6), TLevelOrDefault()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tSapEgressQueueCIRLevel.setStatus('current')
tSapEgressQueueCIRWeight = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 4, 2, 1, 7), TWeight().clone(1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tSapEgressQueueCIRWeight.setStatus('current')
tSapEgressQueueExpedite = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 4, 2, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("expedited", 1), ("auto-expedited", 2), ("non-expedited", 3))).clone('auto-expedited')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tSapEgressQueueExpedite.setStatus('current')
tSapEgressQueueCBS = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 4, 2, 1, 9), TBurstSize().clone(-1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tSapEgressQueueCBS.setStatus('current')
tSapEgressQueueMBS = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 4, 2, 1, 10), TBurstSize().clone(-1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tSapEgressQueueMBS.setStatus('obsolete')
tSapEgressQueueHiPrioOnly = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 4, 2, 1, 11), TBurstPercentOrDefault().clone(-1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tSapEgressQueueHiPrioOnly.setStatus('current')
tSapEgressQueuePIRAdaptation = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 4, 2, 1, 12), TAdaptationRule().clone('closest')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tSapEgressQueuePIRAdaptation.setStatus('current')
tSapEgressQueueCIRAdaptation = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 4, 2, 1, 13), TAdaptationRule().clone('closest')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tSapEgressQueueCIRAdaptation.setStatus('current')
tSapEgressQueueAdminPIR = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 4, 2, 1, 14), TPIRRate().clone(-1)).setUnits('kbps').setMaxAccess("readcreate")
if mibBuilder.loadTexts: tSapEgressQueueAdminPIR.setStatus('current')
tSapEgressQueueAdminCIR = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 4, 2, 1, 15), TCIRRate()).setUnits('kbps').setMaxAccess("readcreate")
if mibBuilder.loadTexts: tSapEgressQueueAdminCIR.setStatus('current')
tSapEgressQueueOperPIR = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 4, 2, 1, 16), TPIRRate()).setUnits('kbps').setMaxAccess("readonly")
if mibBuilder.loadTexts: tSapEgressQueueOperPIR.setStatus('obsolete')
tSapEgressQueueOperCIR = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 4, 2, 1, 17), TCIRRate()).setUnits('kbps').setMaxAccess("readonly")
if mibBuilder.loadTexts: tSapEgressQueueOperCIR.setStatus('obsolete')
tSapEgressQueueLastChanged = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 4, 2, 1, 18), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tSapEgressQueueLastChanged.setStatus('current')
tSapEgressQueueUsePortParent = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 4, 2, 1, 19), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tSapEgressQueueUsePortParent.setStatus('current')
tSapEgressQueuePortLvl = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 4, 2, 1, 20), TLevel().clone(1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tSapEgressQueuePortLvl.setStatus('current')
tSapEgressQueuePortWght = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 4, 2, 1, 21), TWeight().clone(1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tSapEgressQueuePortWght.setStatus('current')
tSapEgressQueuePortCIRLvl = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 4, 2, 1, 22), TLevelOrDefault()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tSapEgressQueuePortCIRLvl.setStatus('current')
tSapEgressQueuePortCIRWght = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 4, 2, 1, 23), TWeight()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tSapEgressQueuePortCIRWght.setStatus('current')
tSapEgressQueuePortAvgOverhead = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 4, 2, 1, 24), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 10000))).setUnits('Hundredths of a percent').setMaxAccess("readcreate")
if mibBuilder.loadTexts: tSapEgressQueuePortAvgOverhead.setStatus('current')
tSapEgressQueuePoolName = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 4, 2, 1, 25), TNamedItemOrEmpty().clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tSapEgressQueuePoolName.setStatus('current')
tSapEgressQueueXPWredQ = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 4, 2, 1, 26), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tSapEgressQueueXPWredQ.setStatus('current')
tSapEgressQueueXPWredQSlope = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 4, 2, 1, 27), TNamedItem().clone('default')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tSapEgressQueueXPWredQSlope.setStatus('current')
tSapEgressQueueMBSBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 4, 2, 1, 28), TBurstSizeBytes().clone(-1)).setUnits('bytes').setMaxAccess("readcreate")
if mibBuilder.loadTexts: tSapEgressQueueMBSBytes.setStatus('current')
tSapEgressQueueBurstLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 4, 2, 1, 29), TBurstLimit().clone(-1)).setUnits('bytes').setMaxAccess("readcreate")
if mibBuilder.loadTexts: tSapEgressQueueBurstLimit.setStatus('current')
tSapEgressQueuePktOffset = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 4, 2, 1, 30), TEgressQPerPacketOffset()).setUnits('bytes').setMaxAccess("readcreate")
if mibBuilder.loadTexts: tSapEgressQueuePktOffset.setStatus('current')
tSapEgressQueueAdminPIRPercent = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 4, 2, 1, 31), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 10000)).clone(10000)).setUnits('hundredths of a percent').setMaxAccess("readcreate")
if mibBuilder.loadTexts: tSapEgressQueueAdminPIRPercent.setStatus('current')
tSapEgressQueueAdminCIRPercent = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 4, 2, 1, 32), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 10000))).setUnits('hundredths of a percent').setMaxAccess("readcreate")
if mibBuilder.loadTexts: tSapEgressQueueAdminCIRPercent.setStatus('current')
tSapEgressQueueRateType = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 4, 2, 1, 33), TBWRateType().clone('kbps')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tSapEgressQueueRateType.setStatus('current')
tSapEgressQueueAdvCfgPolicy = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 4, 2, 1, 34), TNamedItemOrEmpty().clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tSapEgressQueueAdvCfgPolicy.setStatus('current')
tSapEgressFCTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 4, 3), )
if mibBuilder.loadTexts: tSapEgressFCTable.setStatus('current')
tSapEgressFCEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 4, 3, 1), ).setIndexNames((0, "TIMETRA-QOS-MIB", "tSapEgressIndex"), (0, "TIMETRA-QOS-MIB", "tSapEgressFCName"))
if mibBuilder.loadTexts: tSapEgressFCEntry.setStatus('current')
tSapEgressFCName = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 4, 3, 1, 1), TFCName())
if mibBuilder.loadTexts: tSapEgressFCName.setStatus('current')
tSapEgressFCRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 4, 3, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tSapEgressFCRowStatus.setStatus('current')
tSapEgressFCQueue = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 4, 3, 1, 3), TEgressQueueId()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tSapEgressFCQueue.setStatus('current')
tSapEgressFCDot1PValue = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 4, 3, 1, 4), Dot1PPriority().clone(-1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tSapEgressFCDot1PValue.setStatus('obsolete')
tSapEgressFCLastChanged = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 4, 3, 1, 5), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tSapEgressFCLastChanged.setStatus('current')
tSapEgressFCHsmdaQueue = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 4, 3, 1, 6), TEgressHsmdaQueueId()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tSapEgressFCHsmdaQueue.setStatus('current')
tSapEgressFCDot1PHsmdaProfile = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 4, 3, 1, 7), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tSapEgressFCDot1PHsmdaProfile.setStatus('obsolete')
tSapEgressFCDot1PInProfile = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 4, 3, 1, 8), Dot1PPriority().clone(-1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tSapEgressFCDot1PInProfile.setStatus('current')
tSapEgressFCDot1POutProfile = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 4, 3, 1, 9), Dot1PPriority().clone(-1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tSapEgressFCDot1POutProfile.setStatus('current')
tSapEgressFCForceDEValue = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 4, 3, 1, 10), TDEValue().clone(-1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tSapEgressFCForceDEValue.setStatus('current')
tSapEgressFCDEMark = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 4, 3, 1, 11), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tSapEgressFCDEMark.setStatus('current')
tSapEgressFCInProfDscp = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 4, 3, 1, 12), TNamedItemOrEmpty().clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tSapEgressFCInProfDscp.setStatus('current')
tSapEgressFCOutProfDscp = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 4, 3, 1, 13), TNamedItemOrEmpty().clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tSapEgressFCOutProfDscp.setStatus('current')
tSapEgressFCInProfPrec = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 4, 3, 1, 14), TPrecValueOrNone().clone(-1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tSapEgressFCInProfPrec.setStatus('current')
tSapEgressFCOutProfPrec = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 4, 3, 1, 15), TPrecValueOrNone().clone(-1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tSapEgressFCOutProfPrec.setStatus('current')
tSapEgressFCQGrp = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 4, 3, 1, 16), TNamedItemOrEmpty().clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tSapEgressFCQGrp.setStatus('current')
tSapEgressFCPolicer = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 4, 3, 1, 17), TEgrPolicerIdOrNone()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tSapEgressFCPolicer.setStatus('current')
tSapEgressFCQGrpFC = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 4, 3, 1, 18), TFCNameOrEmpty().clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tSapEgressFCQGrpFC.setStatus('current')
tSapEgressHsmdaQueueTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 4, 4), )
if mibBuilder.loadTexts: tSapEgressHsmdaQueueTable.setStatus('current')
tSapEgressHsmdaQueueEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 4, 4, 1), ).setIndexNames((0, "TIMETRA-QOS-MIB", "tSapEgressIndex"), (0, "TIMETRA-QOS-MIB", "tSapEgressHsmdaQueue"))
if mibBuilder.loadTexts: tSapEgressHsmdaQueueEntry.setStatus('current')
tSapEgressHsmdaQueue = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 4, 4, 1, 1), TEgressHsmdaQueueId().subtype(subtypeSpec=ValueRangeConstraint(1, 8)))
if mibBuilder.loadTexts: tSapEgressHsmdaQueue.setStatus('current')
tSapEgressHsmdaQueueRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 4, 4, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tSapEgressHsmdaQueueRowStatus.setStatus('current')
tSapEgressHsmdaQueueCIRAdaptn = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 4, 4, 1, 3), TAdaptationRule().clone('closest')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tSapEgressHsmdaQueueCIRAdaptn.setStatus('obsolete')
tSapEgressHsmdaQueuePIRAdaptn = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 4, 4, 1, 4), TAdaptationRule().clone('closest')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tSapEgressHsmdaQueuePIRAdaptn.setStatus('current')
tSapEgressHsmdaQueueAdminPIR = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 4, 4, 1, 5), THsmdaPIRKRate().clone(-1)).setUnits('kbps').setMaxAccess("readcreate")
if mibBuilder.loadTexts: tSapEgressHsmdaQueueAdminPIR.setStatus('current')
tSapEgressHsmdaQueueAdminCIR = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 4, 4, 1, 6), THsmdaCIRKRate()).setUnits('kbps').setMaxAccess("readcreate")
if mibBuilder.loadTexts: tSapEgressHsmdaQueueAdminCIR.setStatus('obsolete')
tSapEgressHsmdaQueueSlopePolicy = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 4, 4, 1, 7), TNamedItem().clone('default')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tSapEgressHsmdaQueueSlopePolicy.setStatus('current')
tSapEgressHsmdaQueueLastChanged = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 4, 4, 1, 8), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tSapEgressHsmdaQueueLastChanged.setStatus('current')
tSapEgressHsmdaQueueWrrWeight = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 4, 4, 1, 9), THsmdaWrrWeight().clone(1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tSapEgressHsmdaQueueWrrWeight.setStatus('current')
tSapEgressHsmdaQueueMBS = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 4, 4, 1, 10), THSMDABurstSizeBytes().clone(-1)).setUnits('bytes').setMaxAccess("readcreate")
if mibBuilder.loadTexts: tSapEgressHsmdaQueueMBS.setStatus('current')
tSapEgressHsmdaQueueBurstLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 4, 4, 1, 11), THSMDAQueueBurstLimit().clone(-1)).setUnits('bytes').setMaxAccess("readcreate")
if mibBuilder.loadTexts: tSapEgressHsmdaQueueBurstLimit.setStatus('current')
tSapEgressDSCPTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 4, 5), )
if mibBuilder.loadTexts: tSapEgressDSCPTable.setStatus('current')
tSapEgressDSCPEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 4, 5, 1), ).setIndexNames((0, "TIMETRA-QOS-MIB", "tSapEgressIndex"), (0, "TIMETRA-QOS-MIB", "tSapEgressDSCP"))
if mibBuilder.loadTexts: tSapEgressDSCPEntry.setStatus('current')
tSapEgressDSCP = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 4, 5, 1, 1), TDSCPName())
if mibBuilder.loadTexts: tSapEgressDSCP.setStatus('current')
tSapEgressDSCPRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 4, 5, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tSapEgressDSCPRowStatus.setStatus('current')
tSapEgressDSCPLastChanged = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 4, 5, 1, 3), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tSapEgressDSCPLastChanged.setStatus('current')
tSapEgressDSCPHsmdaCntrOverride = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 4, 5, 1, 4), TEgressHsmdaCounterIdOrZero()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tSapEgressDSCPHsmdaCntrOverride.setStatus('current')
tSapEgressDSCPfc = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 4, 5, 1, 5), TFCNameOrEmpty().clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tSapEgressDSCPfc.setStatus('current')
tSapEgressDSCPprofile = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 4, 5, 1, 6), TProfileOrNone().clone('none')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tSapEgressDSCPprofile.setStatus('current')
tSapEgressPrecTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 4, 6), )
if mibBuilder.loadTexts: tSapEgressPrecTable.setStatus('current')
tSapEgressPrecEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 4, 6, 1), ).setIndexNames((0, "TIMETRA-QOS-MIB", "tSapEgressIndex"), (0, "TIMETRA-QOS-MIB", "tSapEgressPrecValue"))
if mibBuilder.loadTexts: tSapEgressPrecEntry.setStatus('current')
tSapEgressPrecValue = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 4, 6, 1, 1), TPrecValue())
if mibBuilder.loadTexts: tSapEgressPrecValue.setStatus('current')
tSapEgressPrecRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 4, 6, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tSapEgressPrecRowStatus.setStatus('current')
tSapEgressPrecLastChanged = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 4, 6, 1, 3), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tSapEgressPrecLastChanged.setStatus('current')
tSapEgressPrecHsmdaCntrOverride = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 4, 6, 1, 4), TEgressHsmdaCounterIdOrZero()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tSapEgressPrecHsmdaCntrOverride.setStatus('current')
tSapEgressPrecFC = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 4, 6, 1, 5), TFCNameOrEmpty().clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tSapEgressPrecFC.setStatus('current')
tSapEgressPrecProfile = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 4, 6, 1, 6), TProfileOrNone().clone('none')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tSapEgressPrecProfile.setStatus('current')
tSapEgrIPCritTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 4, 7), )
if mibBuilder.loadTexts: tSapEgrIPCritTable.setStatus('current')
tSapEgrIPCritEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 4, 7, 1), ).setIndexNames((0, "TIMETRA-QOS-MIB", "tSapEgressIndex"), (0, "TIMETRA-QOS-MIB", "tSapEgrIPCritAddrType"), (0, "TIMETRA-QOS-MIB", "tSapEgrIPCritIndex"))
if mibBuilder.loadTexts: tSapEgrIPCritEntry.setStatus('current')
tSapEgrIPCritAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 4, 7, 1, 1), InetAddressType().clone('ipv4'))
if mibBuilder.loadTexts: tSapEgrIPCritAddrType.setStatus('current')
tSapEgrIPCritIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 4, 7, 1, 2), Unsigned32())
if mibBuilder.loadTexts: tSapEgrIPCritIndex.setStatus('current')
tSapEgrIPCritRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 4, 7, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tSapEgrIPCritRowStatus.setStatus('current')
tSapEgrIPCritLastChanged = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 4, 7, 1, 4), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tSapEgrIPCritLastChanged.setStatus('current')
tSapEgrIPCritDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 4, 7, 1, 5), TItemDescription()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tSapEgrIPCritDescription.setStatus('current')
tSapEgrIPCritActionHsmdaCntrOvr = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 4, 7, 1, 6), TEgressHsmdaCounterIdOrZero()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tSapEgrIPCritActionHsmdaCntrOvr.setStatus('current')
tSapEgrIPCritSourceIpAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 4, 7, 1, 7), InetAddressType().clone('unknown')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tSapEgrIPCritSourceIpAddrType.setStatus('current')
tSapEgrIPCritSourceIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 4, 7, 1, 8), InetAddress().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(4, 4), ValueSizeConstraint(16, 16), )).clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tSapEgrIPCritSourceIpAddr.setStatus('current')
tSapEgrIPCritSourceIpMask = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 4, 7, 1, 9), InetAddressPrefixLength()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tSapEgrIPCritSourceIpMask.setStatus('current')
tSapEgrIPCritDestIpAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 4, 7, 1, 10), InetAddressType().clone('unknown')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tSapEgrIPCritDestIpAddrType.setStatus('current')
tSapEgrIPCritDestIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 4, 7, 1, 11), InetAddress().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(4, 4), ValueSizeConstraint(16, 16), )).clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tSapEgrIPCritDestIpAddr.setStatus('current')
tSapEgrIPCritDestIpMask = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 4, 7, 1, 12), InetAddressPrefixLength()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tSapEgrIPCritDestIpMask.setStatus('current')
tSapEgrIPCritProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 4, 7, 1, 13), TIpProtocol().clone(-1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tSapEgrIPCritProtocol.setStatus('current')
tSapEgrIPCritSourcePortValue1 = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 4, 7, 1, 14), TTcpUdpPort()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tSapEgrIPCritSourcePortValue1.setStatus('current')
tSapEgrIPCritSourcePortValue2 = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 4, 7, 1, 15), TTcpUdpPort()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tSapEgrIPCritSourcePortValue2.setStatus('current')
tSapEgrIPCritSourcePortOperator = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 4, 7, 1, 16), TTcpUdpPortOperator().clone('none')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tSapEgrIPCritSourcePortOperator.setStatus('current')
tSapEgrIPCritDestPortValue1 = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 4, 7, 1, 17), TTcpUdpPort()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tSapEgrIPCritDestPortValue1.setStatus('current')
tSapEgrIPCritDestPortValue2 = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 4, 7, 1, 18), TTcpUdpPort()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tSapEgrIPCritDestPortValue2.setStatus('current')
tSapEgrIPCritDestPortOperator = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 4, 7, 1, 19), TTcpUdpPortOperator().clone('none')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tSapEgrIPCritDestPortOperator.setStatus('current')
tSapEgrIPCritDSCP = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 4, 7, 1, 20), TDSCPNameOrEmpty().clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tSapEgrIPCritDSCP.setStatus('current')
tSapEgrIPCritFragment = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 4, 7, 1, 21), TItemMatch().clone('off')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tSapEgrIPCritFragment.setStatus('current')
tSapEgrIPCritActionFC = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 4, 7, 1, 22), TFCNameOrEmpty().clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tSapEgrIPCritActionFC.setStatus('current')
tSapEgrIPCritActionProfile = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 4, 7, 1, 23), TProfileOrNone().clone('none')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tSapEgrIPCritActionProfile.setStatus('current')
tSapEgrPolicerTableLastChanged = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 20, 86), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tSapEgrPolicerTableLastChanged.setStatus('current')
tSapEgrPolicerTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 4, 8), )
if mibBuilder.loadTexts: tSapEgrPolicerTable.setStatus('current')
tSapEgrPolicerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 4, 8, 1), ).setIndexNames((0, "TIMETRA-QOS-MIB", "tSapEgressIndex"), (0, "TIMETRA-QOS-MIB", "tSapEgrPolicerId"))
if mibBuilder.loadTexts: tSapEgrPolicerEntry.setStatus('current')
tSapEgrPolicerId = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 4, 8, 1, 1), TEgrPolicerId())
if mibBuilder.loadTexts: tSapEgrPolicerId.setStatus('current')
tSapEgrPolicerRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 4, 8, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tSapEgrPolicerRowStatus.setStatus('current')
tSapEgrPolicerLastChanged = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 4, 8, 1, 3), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tSapEgrPolicerLastChanged.setStatus('current')
tSapEgrPolicerDescr = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 4, 8, 1, 4), TItemDescription().clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tSapEgrPolicerDescr.setStatus('current')
tSapEgrPolicerPIRAdaptation = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 4, 8, 1, 5), TAdaptationRule().clone('closest')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tSapEgrPolicerPIRAdaptation.setStatus('current')
tSapEgrPolicerCIRAdaptation = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 4, 8, 1, 6), TAdaptationRule().clone('closest')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tSapEgrPolicerCIRAdaptation.setStatus('current')
tSapEgrPolicerParent = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 4, 8, 1, 7), TNamedItemOrEmpty().clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tSapEgrPolicerParent.setStatus('current')
tSapEgrPolicerLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 4, 8, 1, 8), TLevel().clone(1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tSapEgrPolicerLevel.setStatus('current')
tSapEgrPolicerWeight = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 4, 8, 1, 9), TPolicerWeight().clone(1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tSapEgrPolicerWeight.setStatus('current')
tSapEgrPolicerAdminPIR = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 4, 8, 1, 10), THPolPIRRate().clone(-1)).setUnits('kbps').setMaxAccess("readcreate")
if mibBuilder.loadTexts: tSapEgrPolicerAdminPIR.setStatus('current')
tSapEgrPolicerAdminCIR = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 4, 8, 1, 11), THPolCIRRate()).setUnits('kbps').setMaxAccess("readcreate")
if mibBuilder.loadTexts: tSapEgrPolicerAdminCIR.setStatus('current')
tSapEgrPolicerStatMode = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 4, 8, 1, 12), TmnxEgrPolicerStatMode().clone('minimal')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tSapEgrPolicerStatMode.setStatus('current')
tSapEgrPolicerMBS = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 4, 8, 1, 13), TPlcrBurstSizeBytes().clone(-1)).setUnits('bytes').setMaxAccess("readcreate")
if mibBuilder.loadTexts: tSapEgrPolicerMBS.setStatus('current')
tSapEgrPolicerHiPrioOnly = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 4, 8, 1, 14), TBurstPercentOrDefault().clone(-1)).setUnits('percent').setMaxAccess("readcreate")
if mibBuilder.loadTexts: tSapEgrPolicerHiPrioOnly.setStatus('current')
tSapEgrPolicerCBS = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 4, 8, 1, 15), TPlcrBurstSizeBytes().clone(-1)).setUnits('bytes').setMaxAccess("readcreate")
if mibBuilder.loadTexts: tSapEgrPolicerCBS.setStatus('current')
tSapEgrPolicerPktOffset = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 4, 8, 1, 16), TPerPacketOffset()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tSapEgrPolicerPktOffset.setStatus('current')
tSapEgrPolicerAdminPIRPercent = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 4, 8, 1, 17), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 10000)).clone(10000)).setUnits('hundredths of a percent').setMaxAccess("readcreate")
if mibBuilder.loadTexts: tSapEgrPolicerAdminPIRPercent.setStatus('current')
tSapEgrPolicerAdminCIRPercent = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 4, 8, 1, 18), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 10000))).setUnits('hundredths of a percent').setMaxAccess("readcreate")
if mibBuilder.loadTexts: tSapEgrPolicerAdminCIRPercent.setStatus('current')
tSapEgrPolicerRateType = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 4, 8, 1, 19), TPolicerRateType().clone('kbps')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tSapEgrPolicerRateType.setStatus('current')
tSapEgrPolicerSlopeStartDepth = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 4, 8, 1, 20), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 10000)).clone(10000)).setUnits('hundredths of a percent').setMaxAccess("readcreate")
if mibBuilder.loadTexts: tSapEgrPolicerSlopeStartDepth.setStatus('current')
tSapEgrPolicerSlopeMaxDepth = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 4, 8, 1, 21), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 10000)).clone(10000)).setUnits('hundredths of a percent').setMaxAccess("readcreate")
if mibBuilder.loadTexts: tSapEgrPolicerSlopeMaxDepth.setStatus('current')
tSapEgrPolicerSlopeMaxProb = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 4, 8, 1, 22), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 10000)).clone(10000)).setUnits('hundredths of a percent').setMaxAccess("readcreate")
if mibBuilder.loadTexts: tSapEgrPolicerSlopeMaxProb.setStatus('current')
tSapEgrPolicerSlopeMap = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 4, 8, 1, 23), TmnxSlopeMap().clone('none')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tSapEgrPolicerSlopeMap.setStatus('current')
tSapEgrPolicerAdvCfgPolicy = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 4, 8, 1, 24), TNamedItemOrEmpty().clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tSapEgrPolicerAdvCfgPolicy.setStatus('current')
tSapEgrPolicerProfileCapped = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 4, 8, 1, 25), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tSapEgrPolicerProfileCapped.setStatus('current')
tSapEgrPolicyNameTableLastChgd = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 20, 96), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tSapEgrPolicyNameTableLastChgd.setStatus('current')
tSapEgrPolicyNameTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 4, 9), )
if mibBuilder.loadTexts: tSapEgrPolicyNameTable.setStatus('current')
tSapEgrPolicyNameEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 4, 9, 1), ).setIndexNames((0, "TIMETRA-QOS-MIB", "tSapEgressPolicyName"))
if mibBuilder.loadTexts: tSapEgrPolicyNameEntry.setStatus('current')
tSapEgrPolicyNameId = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 4, 9, 1, 1), TSapEgressPolicyID()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tSapEgrPolicyNameId.setStatus('current')
tSapEgrPolicyNameRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 4, 9, 1, 2), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tSapEgrPolicyNameRowStatus.setStatus('current')
tSapEgrPolicyNameLastChanged = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 4, 9, 1, 3), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tSapEgrPolicyNameLastChanged.setStatus('current')
tSapEgressDot1pTableLastChanged = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 20, 99), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tSapEgressDot1pTableLastChanged.setStatus('current')
tSapEgressDot1pTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 4, 10), )
if mibBuilder.loadTexts: tSapEgressDot1pTable.setStatus('current')
tSapEgressDot1pEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 4, 10, 1), ).setIndexNames((0, "TIMETRA-QOS-MIB", "tSapEgressIndex"), (0, "TIMETRA-QOS-MIB", "tSapEgressDot1pValue"))
if mibBuilder.loadTexts: tSapEgressDot1pEntry.setStatus('current')
tSapEgressDot1pValue = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 4, 10, 1, 1), Dot1PPriority().subtype(subtypeSpec=ValueRangeConstraint(0, 7)))
if mibBuilder.loadTexts: tSapEgressDot1pValue.setStatus('current')
tSapEgressDot1pRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 4, 10, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tSapEgressDot1pRowStatus.setStatus('current')
tSapEgressDot1pLastChanged = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 4, 10, 1, 3), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tSapEgressDot1pLastChanged.setStatus('current')
tSapEgressDot1pFC = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 4, 10, 1, 4), TNamedItemOrEmpty().clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tSapEgressDot1pFC.setStatus('current')
tSapEgressDot1pProfile = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 4, 10, 1, 5), TProfileUseDEOrNone().clone('none')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tSapEgressDot1pProfile.setStatus('current')
tNetworkPolicyTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 5, 1), )
if mibBuilder.loadTexts: tNetworkPolicyTable.setStatus('current')
tNetworkPolicyEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 5, 1, 1), ).setIndexNames((0, "TIMETRA-QOS-MIB", "tNetworkPolicyIndex"))
if mibBuilder.loadTexts: tNetworkPolicyEntry.setStatus('current')
tNetworkPolicyIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 5, 1, 1, 1), TNetworkPolicyID().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(1, 65535), ValueRangeConstraint(65536, 65536), ValueRangeConstraint(65537, 65537), )))
if mibBuilder.loadTexts: tNetworkPolicyIndex.setStatus('current')
tNetworkPolicyRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 5, 1, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tNetworkPolicyRowStatus.setStatus('current')
tNetworkPolicyScope = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 5, 1, 1, 5), TItemScope().clone('template')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tNetworkPolicyScope.setStatus('current')
tNetworkPolicyDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 5, 1, 1, 6), TItemDescription().clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tNetworkPolicyDescription.setStatus('current')
tNetworkPolicyIngressDefaultActionFC = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 5, 1, 1, 7), TFCName().clone(hexValue="be")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tNetworkPolicyIngressDefaultActionFC.setStatus('current')
tNetworkPolicyIngressDefaultActionProfile = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 5, 1, 1, 8), TProfileOrDei().clone('out')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tNetworkPolicyIngressDefaultActionProfile.setStatus('current')
tNetworkPolicyEgressRemark = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 5, 1, 1, 9), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tNetworkPolicyEgressRemark.setStatus('current')
tNetworkPolicyLastChanged = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 5, 1, 1, 10), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tNetworkPolicyLastChanged.setStatus('current')
tNetworkPolicyIngressLerUseDscp = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 5, 1, 1, 11), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tNetworkPolicyIngressLerUseDscp.setStatus('current')
tNetworkPolicyEgressRemarkDscp = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 5, 1, 1, 12), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tNetworkPolicyEgressRemarkDscp.setStatus('current')
tNetworkIngressDSCPTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 5, 2), )
if mibBuilder.loadTexts: tNetworkIngressDSCPTable.setStatus('current')
tNetworkIngressDSCPEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 5, 2, 1), ).setIndexNames((0, "TIMETRA-QOS-MIB", "tNetworkPolicyIndex"), (0, "TIMETRA-QOS-MIB", "tNetworkIngressDSCP"))
if mibBuilder.loadTexts: tNetworkIngressDSCPEntry.setStatus('current')
tNetworkIngressDSCP = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 5, 2, 1, 1), TDSCPName())
if mibBuilder.loadTexts: tNetworkIngressDSCP.setStatus('current')
tNetworkIngressDSCPRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 5, 2, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tNetworkIngressDSCPRowStatus.setStatus('current')
tNetworkIngressDSCPFC = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 5, 2, 1, 3), TFCName().clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tNetworkIngressDSCPFC.setStatus('current')
tNetworkIngressDSCPProfile = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 5, 2, 1, 4), TProfile()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tNetworkIngressDSCPProfile.setStatus('current')
tNetworkIngressDSCPLastChanged = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 5, 2, 1, 5), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tNetworkIngressDSCPLastChanged.setStatus('current')
tNetworkIngressDot1pTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 5, 3), )
if mibBuilder.loadTexts: tNetworkIngressDot1pTable.setStatus('current')
tNetworkIngressDot1pEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 5, 3, 1), ).setIndexNames((0, "TIMETRA-QOS-MIB", "tNetworkPolicyIndex"), (0, "TIMETRA-QOS-MIB", "tNetworkIngressDot1pValue"))
if mibBuilder.loadTexts: tNetworkIngressDot1pEntry.setStatus('current')
tNetworkIngressDot1pValue = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 5, 3, 1, 1), Dot1PPriority().subtype(subtypeSpec=ValueRangeConstraint(0, 7)))
if mibBuilder.loadTexts: tNetworkIngressDot1pValue.setStatus('current')
tNetworkIngressDot1pRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 5, 3, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tNetworkIngressDot1pRowStatus.setStatus('current')
tNetworkIngressDot1pFC = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 5, 3, 1, 3), TFCName().clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tNetworkIngressDot1pFC.setStatus('current')
tNetworkIngressDot1pProfile = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 5, 3, 1, 4), TDEProfileOrDei()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tNetworkIngressDot1pProfile.setStatus('current')
tNetworkIngressDot1pLastChanged = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 5, 3, 1, 5), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tNetworkIngressDot1pLastChanged.setStatus('current')
tNetworkIngressLSPEXPTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 5, 4), )
if mibBuilder.loadTexts: tNetworkIngressLSPEXPTable.setStatus('current')
tNetworkIngressLSPEXPEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 5, 4, 1), ).setIndexNames((0, "TIMETRA-QOS-MIB", "tNetworkPolicyIndex"), (0, "TIMETRA-QOS-MIB", "tNetworkIngressLSPEXP"))
if mibBuilder.loadTexts: tNetworkIngressLSPEXPEntry.setStatus('current')
tNetworkIngressLSPEXP = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 5, 4, 1, 1), TLspExpValue().subtype(subtypeSpec=ValueRangeConstraint(0, 7)))
if mibBuilder.loadTexts: tNetworkIngressLSPEXP.setStatus('current')
tNetworkIngressLSPEXPRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 5, 4, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tNetworkIngressLSPEXPRowStatus.setStatus('current')
tNetworkIngressLSPEXPFC = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 5, 4, 1, 3), TFCName().clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tNetworkIngressLSPEXPFC.setStatus('current')
tNetworkIngressLSPEXPProfile = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 5, 4, 1, 4), TProfile()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tNetworkIngressLSPEXPProfile.setStatus('current')
tNetworkIngressLSPEXPLastChanged = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 5, 4, 1, 5), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tNetworkIngressLSPEXPLastChanged.setStatus('current')
tNetworkEgressFCTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 5, 7), )
if mibBuilder.loadTexts: tNetworkEgressFCTable.setStatus('current')
tNetworkEgressFCEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 5, 7, 1), ).setIndexNames((0, "TIMETRA-QOS-MIB", "tNetworkPolicyIndex"), (0, "TIMETRA-QOS-MIB", "tNetworkEgressFCName"))
if mibBuilder.loadTexts: tNetworkEgressFCEntry.setStatus('current')
tNetworkEgressFCName = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 5, 7, 1, 1), TFCName())
if mibBuilder.loadTexts: tNetworkEgressFCName.setStatus('current')
tNetworkEgressFCDSCPInProfile = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 5, 7, 1, 2), TDSCPNameOrEmpty()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tNetworkEgressFCDSCPInProfile.setStatus('current')
tNetworkEgressFCDSCPOutProfile = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 5, 7, 1, 3), TDSCPNameOrEmpty()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tNetworkEgressFCDSCPOutProfile.setStatus('current')
tNetworkEgressFCLspExpInProfile = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 5, 7, 1, 4), TLspExpValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tNetworkEgressFCLspExpInProfile.setStatus('current')
tNetworkEgressFCLspExpOutProfile = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 5, 7, 1, 5), TLspExpValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tNetworkEgressFCLspExpOutProfile.setStatus('current')
tNetworkEgressFCDot1pInProfile = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 5, 7, 1, 6), Dot1PPriority()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tNetworkEgressFCDot1pInProfile.setStatus('current')
tNetworkEgressFCDot1pOutProfile = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 5, 7, 1, 7), Dot1PPriority()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tNetworkEgressFCDot1pOutProfile.setStatus('current')
tNetworkEgressFCLastChanged = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 5, 7, 1, 8), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tNetworkEgressFCLastChanged.setStatus('current')
tNetworkEgressFCForceDEValue = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 5, 7, 1, 9), TDEValue().clone(-1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tNetworkEgressFCForceDEValue.setStatus('current')
tNetworkEgressFCDEMark = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 5, 7, 1, 10), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tNetworkEgressFCDEMark.setStatus('current')
tNetworkEgressFCQGrpQueue = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 5, 7, 1, 11), TEgressQueueId()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tNetworkEgressFCQGrpQueue.setStatus('current')
tNetworkEgressFCQGrpPolicer = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 5, 7, 1, 12), TEgrPolicerIdOrNone()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tNetworkEgressFCQGrpPolicer.setStatus('current')
tNetworkQueuePolicyTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 6, 1), )
if mibBuilder.loadTexts: tNetworkQueuePolicyTable.setStatus('current')
tNetworkQueuePolicyEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 6, 1, 1), ).setIndexNames((0, "TIMETRA-QOS-MIB", "tNetworkQueuePolicy"))
if mibBuilder.loadTexts: tNetworkQueuePolicyEntry.setStatus('current')
tNetworkQueuePolicy = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 6, 1, 1, 1), TNamedItem())
if mibBuilder.loadTexts: tNetworkQueuePolicy.setStatus('current')
tNetworkQueuePolicyRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 6, 1, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tNetworkQueuePolicyRowStatus.setStatus('current')
tNetworkQueuePolicyDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 6, 1, 1, 3), TItemDescription().clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tNetworkQueuePolicyDescription.setStatus('current')
tNetworkQueuePolicyLastChanged = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 6, 1, 1, 8), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tNetworkQueuePolicyLastChanged.setStatus('current')
tNetworkQueuePolicyEHWrrPlcy = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 6, 1, 1, 9), TNamedItemOrEmpty()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tNetworkQueuePolicyEHWrrPlcy.setStatus('current')
tNetworkQueuePolicyEHPktBOffst = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 6, 1, 1, 10), TPerPacketOffset()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tNetworkQueuePolicyEHPktBOffst.setStatus('current')
tNetworkQueueTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 6, 2), )
if mibBuilder.loadTexts: tNetworkQueueTable.setStatus('current')
tNetworkQueueEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 6, 2, 1), ).setIndexNames((0, "TIMETRA-QOS-MIB", "tNetworkQueuePolicy"), (0, "TIMETRA-QOS-MIB", "tNetworkQueue"))
if mibBuilder.loadTexts: tNetworkQueueEntry.setStatus('current')
tNetworkQueue = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 6, 2, 1, 1), TQueueId().subtype(subtypeSpec=ValueRangeConstraint(1, 16)))
if mibBuilder.loadTexts: tNetworkQueue.setStatus('current')
tNetworkQueueRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 6, 2, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tNetworkQueueRowStatus.setStatus('current')
tNetworkQueuePoolName = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 6, 2, 1, 3), TNamedItemOrEmpty().clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tNetworkQueuePoolName.setStatus('current')
tNetworkQueueParent = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 6, 2, 1, 4), TNamedItemOrEmpty().clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tNetworkQueueParent.setStatus('current')
tNetworkQueueLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 6, 2, 1, 5), TLevel().clone(1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tNetworkQueueLevel.setStatus('current')
tNetworkQueueWeight = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 6, 2, 1, 6), TWeight().clone(1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tNetworkQueueWeight.setStatus('current')
tNetworkQueueCIRLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 6, 2, 1, 7), TLevelOrDefault()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tNetworkQueueCIRLevel.setStatus('current')
tNetworkQueueCIRWeight = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 6, 2, 1, 8), TWeight().clone(1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tNetworkQueueCIRWeight.setStatus('current')
tNetworkQueueMCast = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 6, 2, 1, 9), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tNetworkQueueMCast.setStatus('current')
tNetworkQueueExpedite = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 6, 2, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("expedited", 1), ("auto-expedited", 2), ("non-expedited", 3))).clone('auto-expedited')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tNetworkQueueExpedite.setStatus('current')
tNetworkQueueCIR = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 6, 2, 1, 11), TRatePercent()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tNetworkQueueCIR.setStatus('current')
tNetworkQueuePIR = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 6, 2, 1, 12), TPIRRatePercent().clone(100)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tNetworkQueuePIR.setStatus('current')
tNetworkQueueCBS = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 6, 2, 1, 13), TBurstHundredthsOfPercent().clone(100)).setUnits('Hundredths of a percent').setMaxAccess("readcreate")
if mibBuilder.loadTexts: tNetworkQueueCBS.setStatus('current')
tNetworkQueueMBS = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 6, 2, 1, 14), TBurstHundredthsOfPercent().clone(10000)).setUnits('Hundredths of a percent').setMaxAccess("readcreate")
if mibBuilder.loadTexts: tNetworkQueueMBS.setStatus('current')
tNetworkQueueHiPrioOnly = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 6, 2, 1, 15), TBurstPercentOrDefault().clone(-1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tNetworkQueueHiPrioOnly.setStatus('current')
tNetworkQueueLastChanged = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 6, 2, 1, 16), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tNetworkQueueLastChanged.setStatus('current')
tNetworkQueueUsePortParent = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 6, 2, 1, 17), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tNetworkQueueUsePortParent.setStatus('current')
tNetworkQueuePortLvl = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 6, 2, 1, 18), TLevel().clone(1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tNetworkQueuePortLvl.setStatus('current')
tNetworkQueuePortWght = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 6, 2, 1, 19), TWeight().clone(1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tNetworkQueuePortWght.setStatus('current')
tNetworkQueuePortCIRLvl = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 6, 2, 1, 20), TLevelOrDefault()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tNetworkQueuePortCIRLvl.setStatus('current')
tNetworkQueuePortCIRWght = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 6, 2, 1, 21), TWeight()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tNetworkQueuePortCIRWght.setStatus('current')
tNetworkQueuePortAvgOverhead = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 6, 2, 1, 22), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 10000))).setUnits('Hundredths of a percent').setMaxAccess("readcreate")
if mibBuilder.loadTexts: tNetworkQueuePortAvgOverhead.setStatus('current')
tNetworkQueueCIRAdaptation = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 6, 2, 1, 23), TAdaptationRule().clone('closest')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tNetworkQueueCIRAdaptation.setStatus('current')
tNetworkQueuePIRAdaptation = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 6, 2, 1, 24), TAdaptationRule().clone('closest')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tNetworkQueuePIRAdaptation.setStatus('current')
tNetworkQueueFCTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 6, 3), )
if mibBuilder.loadTexts: tNetworkQueueFCTable.setStatus('current')
tNetworkQueueFCEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 6, 3, 1), ).setIndexNames((0, "TIMETRA-QOS-MIB", "tNetworkQueuePolicy"), (0, "TIMETRA-QOS-MIB", "tNetworkQueueFCName"))
if mibBuilder.loadTexts: tNetworkQueueFCEntry.setStatus('current')
tNetworkQueueFCName = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 6, 3, 1, 1), TFCName())
if mibBuilder.loadTexts: tNetworkQueueFCName.setStatus('current')
tNetworkQueueFCRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 6, 3, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tNetworkQueueFCRowStatus.setStatus('current')
tNetworkQueueFC = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 6, 3, 1, 3), TQueueId().subtype(subtypeSpec=ValueRangeConstraint(1, 16)).clone(1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tNetworkQueueFC.setStatus('current')
tNetworkQueueFCMCast = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 6, 3, 1, 4), TQueueId().subtype(subtypeSpec=ValueRangeConstraint(1, 16)).clone(9)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tNetworkQueueFCMCast.setStatus('current')
tNetworkQueueFCLastChanged = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 6, 3, 1, 7), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tNetworkQueueFCLastChanged.setStatus('current')
tNetworkQueueFCEgrHsmdaQueue = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 6, 3, 1, 8), TQueueId().subtype(subtypeSpec=ValueRangeConstraint(1, 8))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tNetworkQueueFCEgrHsmdaQueue.setStatus('current')
tNetworkEgrHsmdaQueueTblLastChgd = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 20, 94), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tNetworkEgrHsmdaQueueTblLastChgd.setStatus('current')
tNetworkEgrHsmdaQueueTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 6, 4), )
if mibBuilder.loadTexts: tNetworkEgrHsmdaQueueTable.setStatus('current')
tNetworkEgrHsmdaQueueEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 6, 4, 1), ).setIndexNames((0, "TIMETRA-QOS-MIB", "tNetworkQueuePolicy"), (0, "TIMETRA-QOS-MIB", "tNetworkEgrHsmdaQueue"))
if mibBuilder.loadTexts: tNetworkEgrHsmdaQueueEntry.setStatus('current')
tNetworkEgrHsmdaQueue = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 6, 4, 1, 1), TEgressHsmdaQueueId().subtype(subtypeSpec=ValueRangeConstraint(1, 8)))
if mibBuilder.loadTexts: tNetworkEgrHsmdaQueue.setStatus('current')
tNetworkEgrHsmdaQueuePIRPercent = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 6, 4, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 10000)).clone(10000)).setUnits('hundredths of a percent').setMaxAccess("readwrite")
if mibBuilder.loadTexts: tNetworkEgrHsmdaQueuePIRPercent.setStatus('current')
tNetworkEgrHsmdaQueuePIRAdaptn = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 6, 4, 1, 3), TAdaptationRule().clone('closest')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tNetworkEgrHsmdaQueuePIRAdaptn.setStatus('current')
tNetworkEgrHsmdaQueueWrrWeight = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 6, 4, 1, 4), THsmdaWrrWeight().clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tNetworkEgrHsmdaQueueWrrWeight.setStatus('current')
tNetworkEgrHsmdaQueueMBS = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 6, 4, 1, 5), THSMDABurstSizeBytes().clone(-1)).setUnits('bytes').setMaxAccess("readwrite")
if mibBuilder.loadTexts: tNetworkEgrHsmdaQueueMBS.setStatus('current')
tNetworkEgrHsmdaQueueSlopePolicy = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 6, 4, 1, 6), TNamedItem().clone('default')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tNetworkEgrHsmdaQueueSlopePolicy.setStatus('current')
tNetworkEgrHsmdaQueueLastChanged = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 6, 4, 1, 7), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tNetworkEgrHsmdaQueueLastChanged.setStatus('current')
tNetworkEgrHsmdaQueueBurstLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 6, 4, 1, 8), THSMDAQueueBurstLimit().clone(-1)).setUnits('bytes').setMaxAccess("readwrite")
if mibBuilder.loadTexts: tNetworkEgrHsmdaQueueBurstLimit.setStatus('current')
tSharedQueuePolicyTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 7, 1), )
if mibBuilder.loadTexts: tSharedQueuePolicyTable.setStatus('current')
tSharedQueuePolicyEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 7, 1, 1), ).setIndexNames((0, "TIMETRA-QOS-MIB", "tSharedQueuePolicy"))
if mibBuilder.loadTexts: tSharedQueuePolicyEntry.setStatus('current')
tSharedQueuePolicy = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 7, 1, 1, 1), TNamedItem())
if mibBuilder.loadTexts: tSharedQueuePolicy.setStatus('current')
tSharedQueuePolicyRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 7, 1, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tSharedQueuePolicyRowStatus.setStatus('current')
tSharedQueuePolicyLastChanged = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 7, 1, 1, 3), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tSharedQueuePolicyLastChanged.setStatus('current')
tSharedQueuePolicyDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 7, 1, 1, 4), TItemDescription().clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tSharedQueuePolicyDescription.setStatus('current')
tSharedQueueTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 7, 2), )
if mibBuilder.loadTexts: tSharedQueueTable.setStatus('current')
tSharedQueueEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 7, 2, 1), ).setIndexNames((0, "TIMETRA-QOS-MIB", "tSharedQueuePolicy"), (0, "TIMETRA-QOS-MIB", "tSharedQueueId"))
if mibBuilder.loadTexts: tSharedQueueEntry.setStatus('current')
tSharedQueueId = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 7, 2, 1, 1), TQueueId().subtype(subtypeSpec=ValueRangeConstraint(1, 32)))
if mibBuilder.loadTexts: tSharedQueueId.setStatus('current')
tSharedQueueRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 7, 2, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tSharedQueueRowStatus.setStatus('current')
tSharedQueueLastChanged = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 7, 2, 1, 3), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tSharedQueueLastChanged.setStatus('current')
tSharedQueuePoolName = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 7, 2, 1, 4), TNamedItemOrEmpty().clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tSharedQueuePoolName.setStatus('current')
tSharedQueueParent = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 7, 2, 1, 5), TNamedItemOrEmpty().clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tSharedQueueParent.setStatus('current')
tSharedQueueLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 7, 2, 1, 6), TLevel().clone(1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tSharedQueueLevel.setStatus('current')
tSharedQueueWeight = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 7, 2, 1, 7), TWeight().clone(1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tSharedQueueWeight.setStatus('current')
tSharedQueueCIRLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 7, 2, 1, 8), TLevelOrDefault()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tSharedQueueCIRLevel.setStatus('current')
tSharedQueueCIRWeight = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 7, 2, 1, 9), TWeight().clone(1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tSharedQueueCIRWeight.setStatus('current')
tSharedQueueExpedite = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 7, 2, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("expedited", 1), ("auto-expedited", 2), ("non-expedited", 3))).clone('auto-expedited')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tSharedQueueExpedite.setStatus('current')
tSharedQueueCIR = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 7, 2, 1, 11), TRatePercent()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tSharedQueueCIR.setStatus('current')
tSharedQueuePIR = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 7, 2, 1, 12), TPIRRatePercent().clone(100)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tSharedQueuePIR.setStatus('current')
tSharedQueueCBS = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 7, 2, 1, 13), TBurstPercent()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tSharedQueueCBS.setStatus('current')
tSharedQueueMBS = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 7, 2, 1, 14), TBurstPercent().clone(100)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tSharedQueueMBS.setStatus('current')
tSharedQueueHiPrioOnly = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 7, 2, 1, 15), TBurstPercentOrDefault().clone(-1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tSharedQueueHiPrioOnly.setStatus('current')
tSharedQueueIsMultipoint = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 7, 2, 1, 16), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tSharedQueueIsMultipoint.setStatus('current')
tSharedQueueFCTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 7, 3), )
if mibBuilder.loadTexts: tSharedQueueFCTable.setStatus('current')
tSharedQueueFCEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 7, 3, 1), ).setIndexNames((0, "TIMETRA-QOS-MIB", "tSharedQueuePolicy"), (0, "TIMETRA-QOS-MIB", "tSharedQueueFCName"))
if mibBuilder.loadTexts: tSharedQueueFCEntry.setStatus('current')
tSharedQueueFCName = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 7, 3, 1, 1), TFCName())
if mibBuilder.loadTexts: tSharedQueueFCName.setStatus('current')
tSharedQueueFCRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 7, 3, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tSharedQueueFCRowStatus.setStatus('current')
tSharedQueueFCLastChanged = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 7, 3, 1, 3), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tSharedQueueFCLastChanged.setStatus('current')
tSharedQueueFCQueue = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 7, 3, 1, 4), TQueueId().subtype(subtypeSpec=ValueRangeConstraint(1, 8)).clone(1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tSharedQueueFCQueue.setStatus('current')
tSharedQueueFCMCastQueue = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 7, 3, 1, 5), TQueueId().subtype(subtypeSpec=ValueRangeConstraint(9, 32)).clone(9)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tSharedQueueFCMCastQueue.setStatus('current')
tSharedQueueFCBCastQueue = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 7, 3, 1, 6), TQueueId().subtype(subtypeSpec=ValueRangeConstraint(9, 32)).clone(17)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tSharedQueueFCBCastQueue.setStatus('current')
tSharedQueueFCUnknownQueue = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 7, 3, 1, 7), TQueueId().subtype(subtypeSpec=ValueRangeConstraint(9, 32)).clone(25)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tSharedQueueFCUnknownQueue.setStatus('current')
tQosIngQGroupTableLastChanged = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 20, 6), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tQosIngQGroupTableLastChanged.setStatus('current')
tQosIngQGroupTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 7, 4), )
if mibBuilder.loadTexts: tQosIngQGroupTable.setStatus('current')
tQosIngQGroupEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 7, 4, 1), ).setIndexNames((0, "TIMETRA-QOS-MIB", "tQosIngQGroupName"))
if mibBuilder.loadTexts: tQosIngQGroupEntry.setStatus('current')
tQosIngQGroupName = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 7, 4, 1, 1), TNamedItem())
if mibBuilder.loadTexts: tQosIngQGroupName.setStatus('current')
tQosIngQGroupRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 7, 4, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tQosIngQGroupRowStatus.setStatus('current')
tQosIngQGroupLastChanged = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 7, 4, 1, 3), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tQosIngQGroupLastChanged.setStatus('current')
tQosIngQGroupDescr = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 7, 4, 1, 4), TItemDescription().clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tQosIngQGroupDescr.setStatus('current')
tQosIngQTableLastChanged = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 20, 7), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tQosIngQTableLastChanged.setStatus('current')
tQosIngQueueTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 7, 5), )
if mibBuilder.loadTexts: tQosIngQueueTable.setStatus('current')
tQosIngQueueEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 7, 5, 1), ).setIndexNames((0, "TIMETRA-QOS-MIB", "tQosIngQGroupName"), (0, "TIMETRA-QOS-MIB", "tQosIngQueue"))
if mibBuilder.loadTexts: tQosIngQueueEntry.setStatus('current')
tQosIngQueue = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 7, 5, 1, 1), TIngressQueueId().subtype(subtypeSpec=ValueRangeConstraint(1, 32)))
if mibBuilder.loadTexts: tQosIngQueue.setStatus('current')
tQosIngQueueRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 7, 5, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tQosIngQueueRowStatus.setStatus('current')
tQosIngQueueParent = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 7, 5, 1, 3), TNamedItemOrEmpty().clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tQosIngQueueParent.setStatus('current')
tQosIngQueueLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 7, 5, 1, 4), TLevel().clone(1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tQosIngQueueLevel.setStatus('current')
tQosIngQueueWeight = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 7, 5, 1, 5), TWeight().clone(1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tQosIngQueueWeight.setStatus('current')
tQosIngQueueCIRLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 7, 5, 1, 6), TLevelOrDefault()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tQosIngQueueCIRLevel.setStatus('current')
tQosIngQueueCIRWeight = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 7, 5, 1, 7), TWeight().clone(1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tQosIngQueueCIRWeight.setStatus('current')
tQosIngQueueMCast = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 7, 5, 1, 8), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tQosIngQueueMCast.setStatus('current')
tQosIngQueueExpedite = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 7, 5, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 3))).clone(namedValues=NamedValues(("expedited", 1), ("bestEffort", 3))).clone('bestEffort')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tQosIngQueueExpedite.setStatus('current')
tQosIngQueueCBS = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 7, 5, 1, 10), TBurstSize().clone(-1)).setUnits('kilo-bytes').setMaxAccess("readcreate")
if mibBuilder.loadTexts: tQosIngQueueCBS.setStatus('current')
tQosIngQueueMBS = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 7, 5, 1, 11), TBurstSize().clone(-1)).setUnits('kilo-bytes').setMaxAccess("readcreate")
if mibBuilder.loadTexts: tQosIngQueueMBS.setStatus('obsolete')
tQosIngQueueHiPrioOnly = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 7, 5, 1, 12), TBurstPercentOrDefault().clone(-1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tQosIngQueueHiPrioOnly.setStatus('current')
tQosIngQueuePIRAdaptation = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 7, 5, 1, 13), TAdaptationRule().clone('closest')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tQosIngQueuePIRAdaptation.setStatus('current')
tQosIngQueueCIRAdaptation = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 7, 5, 1, 14), TAdaptationRule().clone('closest')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tQosIngQueueCIRAdaptation.setStatus('current')
tQosIngQueueAdminPIR = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 7, 5, 1, 15), TPIRRate().clone(-1)).setUnits('kbps').setMaxAccess("readcreate")
if mibBuilder.loadTexts: tQosIngQueueAdminPIR.setStatus('current')
tQosIngQueueAdminCIR = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 7, 5, 1, 16), TCIRRate()).setUnits('kbps').setMaxAccess("readcreate")
if mibBuilder.loadTexts: tQosIngQueueAdminCIR.setStatus('current')
tQosIngQueueLastChanged = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 7, 5, 1, 17), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tQosIngQueueLastChanged.setStatus('current')
tQosIngQueuePoliced = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 7, 5, 1, 18), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tQosIngQueuePoliced.setStatus('current')
tQosIngQueueMode = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 7, 5, 1, 19), TQueueMode().clone('priority')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tQosIngQueueMode.setStatus('current')
tQosIngQueuePoolName = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 7, 5, 1, 20), TNamedItemOrEmpty().clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tQosIngQueuePoolName.setStatus('current')
tQosIngQueueMBSBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 7, 5, 1, 21), TBurstSizeBytes().clone(-1)).setUnits('bytes').setMaxAccess("readcreate")
if mibBuilder.loadTexts: tQosIngQueueMBSBytes.setStatus('current')
tQosIngQueueBurstLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 7, 5, 1, 22), TBurstLimit().clone(-1)).setUnits('bytes').setMaxAccess("readcreate")
if mibBuilder.loadTexts: tQosIngQueueBurstLimit.setStatus('current')
tQosIngQueueAdvCfgPolicy = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 7, 5, 1, 23), TNamedItemOrEmpty().clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tQosIngQueueAdvCfgPolicy.setStatus('current')
tQosEgrQGroupTableLastChanged = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 20, 8), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tQosEgrQGroupTableLastChanged.setStatus('current')
tQosEgrQGroupTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 7, 6), )
if mibBuilder.loadTexts: tQosEgrQGroupTable.setStatus('current')
tQosEgrQGroupEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 7, 6, 1), ).setIndexNames((0, "TIMETRA-QOS-MIB", "tQosEgrQGroupName"))
if mibBuilder.loadTexts: tQosEgrQGroupEntry.setStatus('current')
tQosEgrQGroupName = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 7, 6, 1, 1), TNamedItem())
if mibBuilder.loadTexts: tQosEgrQGroupName.setStatus('current')
tQosEgrQGroupRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 7, 6, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tQosEgrQGroupRowStatus.setStatus('current')
tQosEgrQGroupLastChanged = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 7, 6, 1, 3), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tQosEgrQGroupLastChanged.setStatus('current')
tQosEgrQGroupDescr = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 7, 6, 1, 4), TItemDescription().clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tQosEgrQGroupDescr.setStatus('current')
tQosEgrQTableLastChanged = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 20, 9), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tQosEgrQTableLastChanged.setStatus('current')
tQosEgrQueueTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 7, 7), )
if mibBuilder.loadTexts: tQosEgrQueueTable.setStatus('current')
tQosEgrQueueEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 7, 7, 1), ).setIndexNames((0, "TIMETRA-QOS-MIB", "tQosEgrQGroupName"), (0, "TIMETRA-QOS-MIB", "tQosEgrQueue"))
if mibBuilder.loadTexts: tQosEgrQueueEntry.setStatus('current')
tQosEgrQueue = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 7, 7, 1, 1), TEgressQueueId().subtype(subtypeSpec=ValueRangeConstraint(1, 8)))
if mibBuilder.loadTexts: tQosEgrQueue.setStatus('current')
tQosEgrQueueRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 7, 7, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tQosEgrQueueRowStatus.setStatus('current')
tQosEgrQueueParent = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 7, 7, 1, 3), TNamedItemOrEmpty().clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tQosEgrQueueParent.setStatus('current')
tQosEgrQueueLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 7, 7, 1, 4), TLevel().clone(1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tQosEgrQueueLevel.setStatus('current')
tQosEgrQueueWeight = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 7, 7, 1, 5), TWeight().clone(1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tQosEgrQueueWeight.setStatus('current')
tQosEgrQueueCIRLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 7, 7, 1, 6), TLevelOrDefault()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tQosEgrQueueCIRLevel.setStatus('current')
tQosEgrQueueCIRWeight = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 7, 7, 1, 7), TWeight().clone(1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tQosEgrQueueCIRWeight.setStatus('current')
tQosEgrQueueExpedite = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 7, 7, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 3))).clone(namedValues=NamedValues(("expedited", 1), ("bestEffort", 3))).clone('bestEffort')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tQosEgrQueueExpedite.setStatus('current')
tQosEgrQueueCBS = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 7, 7, 1, 9), TBurstSize().clone(-1)).setUnits('kilo-bytes').setMaxAccess("readcreate")
if mibBuilder.loadTexts: tQosEgrQueueCBS.setStatus('current')
tQosEgrQueueMBS = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 7, 7, 1, 10), TBurstSize().clone(-1)).setUnits('kilo-bytes').setMaxAccess("readcreate")
if mibBuilder.loadTexts: tQosEgrQueueMBS.setStatus('obsolete')
tQosEgrQueueHiPrioOnly = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 7, 7, 1, 11), TBurstPercentOrDefault().clone(-1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tQosEgrQueueHiPrioOnly.setStatus('current')
tQosEgrQueuePIRAdaptation = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 7, 7, 1, 12), TAdaptationRule().clone('closest')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tQosEgrQueuePIRAdaptation.setStatus('current')
tQosEgrQueueCIRAdaptation = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 7, 7, 1, 13), TAdaptationRule().clone('closest')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tQosEgrQueueCIRAdaptation.setStatus('current')
tQosEgrQueueAdminPIR = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 7, 7, 1, 14), TPIRRate().clone(-1)).setUnits('kbps').setMaxAccess("readcreate")
if mibBuilder.loadTexts: tQosEgrQueueAdminPIR.setStatus('current')
tQosEgrQueueAdminCIR = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 7, 7, 1, 15), TCIRRate()).setUnits('kbps').setMaxAccess("readcreate")
if mibBuilder.loadTexts: tQosEgrQueueAdminCIR.setStatus('current')
tQosEgrQueueLastChanged = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 7, 7, 1, 18), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tQosEgrQueueLastChanged.setStatus('current')
tQosEgrQueueUsePortParent = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 7, 7, 1, 19), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tQosEgrQueueUsePortParent.setStatus('current')
tQosEgrQueuePortLvl = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 7, 7, 1, 20), TLevel().clone(1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tQosEgrQueuePortLvl.setStatus('current')
tQosEgrQueuePortWght = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 7, 7, 1, 21), TWeight().clone(1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tQosEgrQueuePortWght.setStatus('current')
tQosEgrQueuePortCIRLvl = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 7, 7, 1, 22), TLevelOrDefault()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tQosEgrQueuePortCIRLvl.setStatus('current')
tQosEgrQueuePortCIRWght = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 7, 7, 1, 23), TWeight()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tQosEgrQueuePortCIRWght.setStatus('current')
tQosEgrQueuePoolName = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 7, 7, 1, 24), TNamedItemOrEmpty().clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tQosEgrQueuePoolName.setStatus('current')
tQosEgrQueueXPWredQ = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 7, 7, 1, 25), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tQosEgrQueueXPWredQ.setStatus('current')
tQosEgrQueueXPWredQSlope = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 7, 7, 1, 26), TNamedItem().clone('default')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tQosEgrQueueXPWredQSlope.setStatus('current')
tQosEgrQueueMBSBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 7, 7, 1, 27), TBurstSizeBytes().clone(-1)).setUnits('bytes').setMaxAccess("readcreate")
if mibBuilder.loadTexts: tQosEgrQueueMBSBytes.setStatus('current')
tQosEgrQueueAdminPIRPercent = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 7, 7, 1, 28), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 10000)).clone(10000)).setUnits('hundredths of a percent').setMaxAccess("readcreate")
if mibBuilder.loadTexts: tQosEgrQueueAdminPIRPercent.setStatus('current')
tQosEgrQueueAdminCIRPercent = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 7, 7, 1, 29), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 10000))).setUnits('hundredths of a percent').setMaxAccess("readcreate")
if mibBuilder.loadTexts: tQosEgrQueueAdminCIRPercent.setStatus('current')
tQosEgrQueueRateType = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 7, 7, 1, 30), TRateType().clone('kbps')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tQosEgrQueueRateType.setStatus('current')
tQosEgrQueueBurstLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 7, 7, 1, 31), TBurstLimit().clone(-1)).setUnits('bytes').setMaxAccess("readcreate")
if mibBuilder.loadTexts: tQosEgrQueueBurstLimit.setStatus('current')
tQosEgrQueueAdvCfgPolicy = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 7, 7, 1, 32), TNamedItemOrEmpty().clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tQosEgrQueueAdvCfgPolicy.setStatus('current')
tQosEgrQueuePktOffset = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 7, 7, 1, 33), TPerPacketOffset()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tQosEgrQueuePktOffset.setStatus('current')
tQosEgrQGroupFCTableLastChanged = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 20, 90), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tQosEgrQGroupFCTableLastChanged.setStatus('current')
tQosEgrQGroupFCTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 7, 8), )
if mibBuilder.loadTexts: tQosEgrQGroupFCTable.setStatus('current')
tQosEgrQGroupFCEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 7, 8, 1), ).setIndexNames((0, "TIMETRA-QOS-MIB", "tQosEgrQGroupName"), (0, "TIMETRA-QOS-MIB", "tQosEgrQGroupFCName"))
if mibBuilder.loadTexts: tQosEgrQGroupFCEntry.setStatus('current')
tQosEgrQGroupFCName = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 7, 8, 1, 1), TFCName())
if mibBuilder.loadTexts: tQosEgrQGroupFCName.setStatus('current')
tQosEgrQGroupFCRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 7, 8, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tQosEgrQGroupFCRowStatus.setStatus('current')
tQosEgrQGroupFCLastChanged = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 7, 8, 1, 3), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tQosEgrQGroupFCLastChanged.setStatus('current')
tQosEgrQGroupFCQueue = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 7, 8, 1, 4), TEgressQueueId()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tQosEgrQGroupFCQueue.setStatus('current')
tSlopePolicyTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 10, 1), )
if mibBuilder.loadTexts: tSlopePolicyTable.setStatus('current')
tSlopePolicyEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 10, 1, 1), ).setIndexNames((0, "TIMETRA-QOS-MIB", "tSlopePolicy"))
if mibBuilder.loadTexts: tSlopePolicyEntry.setStatus('current')
tSlopePolicy = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 10, 1, 1, 1), TNamedItem())
if mibBuilder.loadTexts: tSlopePolicy.setStatus('current')
tSlopeRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 10, 1, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tSlopeRowStatus.setStatus('current')
tSlopeDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 10, 1, 1, 3), TItemDescription().clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tSlopeDescription.setStatus('current')
tSlopeHiAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 10, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("up", 1), ("down", 2))).clone('down')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tSlopeHiAdminStatus.setStatus('current')
tSlopeHiStartAverage = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 10, 1, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 100)).clone(70)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tSlopeHiStartAverage.setStatus('current')
tSlopeHiMaxAverage = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 10, 1, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 100)).clone(90)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tSlopeHiMaxAverage.setStatus('current')
tSlopeHiMaxProbability = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 10, 1, 1, 7), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 100)).clone(80)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tSlopeHiMaxProbability.setStatus('current')
tSlopeLoAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 10, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("up", 1), ("down", 2))).clone('down')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tSlopeLoAdminStatus.setStatus('current')
tSlopeLoStartAverage = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 10, 1, 1, 9), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 100)).clone(50)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tSlopeLoStartAverage.setStatus('current')
tSlopeLoMaxAverage = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 10, 1, 1, 10), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 100)).clone(75)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tSlopeLoMaxAverage.setStatus('current')
tSlopeLoMaxProbability = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 10, 1, 1, 11), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 100)).clone(80)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tSlopeLoMaxProbability.setStatus('current')
tSlopeTimeAvgFactor = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 10, 1, 1, 12), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 15)).clone(7)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tSlopeTimeAvgFactor.setStatus('current')
tSlopeLastChanged = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 10, 1, 1, 13), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tSlopeLastChanged.setStatus('current')
tHsmdaSlopePolicyTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 10, 2), )
if mibBuilder.loadTexts: tHsmdaSlopePolicyTable.setStatus('current')
tHsmdaSlopePolicyEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 10, 2, 1), ).setIndexNames((0, "TIMETRA-QOS-MIB", "tHsmdaSlopePolicyName"))
if mibBuilder.loadTexts: tHsmdaSlopePolicyEntry.setStatus('current')
tHsmdaSlopePolicyName = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 10, 2, 1, 1), TNamedItem())
if mibBuilder.loadTexts: tHsmdaSlopePolicyName.setStatus('current')
tHsmdaSlopePolicyRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 10, 2, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tHsmdaSlopePolicyRowStatus.setStatus('current')
tHsmdaSlopeLastChanged = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 10, 2, 1, 3), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tHsmdaSlopeLastChanged.setStatus('current')
tHsmdaSlopeDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 10, 2, 1, 4), TItemDescription()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tHsmdaSlopeDescription.setStatus('current')
tHsmdaSlopeQueueMbs = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 10, 2, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 500000)).clone(16800)).setUnits('bytes').setMaxAccess("readcreate")
if mibBuilder.loadTexts: tHsmdaSlopeQueueMbs.setStatus('obsolete')
tHsmdaSlopeHiAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 10, 2, 1, 6), TmnxEnabledDisabled().clone('enabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tHsmdaSlopeHiAdminStatus.setStatus('current')
tHsmdaSlopeHiStartDepth = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 10, 2, 1, 7), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 10000)).clone(10000)).setUnits('hundredths of a percent').setMaxAccess("readcreate")
if mibBuilder.loadTexts: tHsmdaSlopeHiStartDepth.setStatus('current')
tHsmdaSlopeHiMaxDepth = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 10, 2, 1, 8), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 10000)).clone(10000)).setUnits('hundredths of a percent').setMaxAccess("readcreate")
if mibBuilder.loadTexts: tHsmdaSlopeHiMaxDepth.setStatus('current')
tHsmdaSlopeHiMaxProbability = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 10, 2, 1, 9), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 10000)).clone(10000)).setUnits('hundredths of a percent').setMaxAccess("readcreate")
if mibBuilder.loadTexts: tHsmdaSlopeHiMaxProbability.setStatus('current')
tHsmdaSlopeLoAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 10, 2, 1, 10), TmnxEnabledDisabled().clone('enabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tHsmdaSlopeLoAdminStatus.setStatus('current')
tHsmdaSlopeLoStartDepth = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 10, 2, 1, 11), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 10000)).clone(9000)).setUnits('hundredths of a percent').setMaxAccess("readcreate")
if mibBuilder.loadTexts: tHsmdaSlopeLoStartDepth.setStatus('current')
tHsmdaSlopeLoMaxDepth = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 10, 2, 1, 12), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 10000)).clone(9000)).setUnits('hundredths of a percent').setMaxAccess("readcreate")
if mibBuilder.loadTexts: tHsmdaSlopeLoMaxDepth.setStatus('current')
tHsmdaSlopeLoMaxProbability = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 10, 2, 1, 13), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 10000)).clone(10000)).setUnits('hundredths of a percent').setMaxAccess("readcreate")
if mibBuilder.loadTexts: tHsmdaSlopeLoMaxProbability.setStatus('current')
tSchedulerPolicyTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 12, 1), )
if mibBuilder.loadTexts: tSchedulerPolicyTable.setStatus('current')
tSchedulerPolicyEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 12, 1, 1), ).setIndexNames((1, "TIMETRA-QOS-MIB", "tSchedulerPolicyName"))
if mibBuilder.loadTexts: tSchedulerPolicyEntry.setStatus('current')
tSchedulerPolicyName = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 12, 1, 1, 1), TNamedItem())
if mibBuilder.loadTexts: tSchedulerPolicyName.setStatus('current')
tSchedulerPolicyRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 12, 1, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tSchedulerPolicyRowStatus.setStatus('current')
tSchedulerPolicyDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 12, 1, 1, 3), TItemDescription().clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tSchedulerPolicyDescription.setStatus('current')
tSchedulerPolicyLastChanged = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 12, 1, 1, 4), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tSchedulerPolicyLastChanged.setStatus('current')
tSchedulerPolicyFrameBasedAccnt = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 12, 1, 1, 5), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tSchedulerPolicyFrameBasedAccnt.setStatus('current')
tVirtualSchedulerTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 12, 2), )
if mibBuilder.loadTexts: tVirtualSchedulerTable.setStatus('current')
tVirtualSchedulerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 12, 2, 1), ).setIndexNames((0, "TIMETRA-QOS-MIB", "tSchedulerPolicyName"), (0, "TIMETRA-QOS-MIB", "tVirtualSchedulerTier"), (1, "TIMETRA-QOS-MIB", "tVirtualSchedulerName"))
if mibBuilder.loadTexts: tVirtualSchedulerEntry.setStatus('current')
tVirtualSchedulerTier = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 12, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 3)))
if mibBuilder.loadTexts: tVirtualSchedulerTier.setStatus('current')
tVirtualSchedulerName = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 12, 2, 1, 2), TNamedItem())
if mibBuilder.loadTexts: tVirtualSchedulerName.setStatus('current')
tVirtualSchedulerRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 12, 2, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tVirtualSchedulerRowStatus.setStatus('current')
tVirtualSchedulerDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 12, 2, 1, 4), TItemDescription().clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tVirtualSchedulerDescription.setStatus('current')
tVirtualSchedulerParent = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 12, 2, 1, 5), TNamedItemOrEmpty().clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tVirtualSchedulerParent.setStatus('current')
tVirtualSchedulerLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 12, 2, 1, 6), TLevel().clone(1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tVirtualSchedulerLevel.setStatus('current')
tVirtualSchedulerWeight = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 12, 2, 1, 7), TWeight().clone(1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tVirtualSchedulerWeight.setStatus('current')
tVirtualSchedulerCIRLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 12, 2, 1, 8), TLevelOrDefault()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tVirtualSchedulerCIRLevel.setStatus('current')
tVirtualSchedulerCIRWeight = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 12, 2, 1, 9), TWeight().clone(1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tVirtualSchedulerCIRWeight.setStatus('current')
tVirtualSchedulerPIR = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 12, 2, 1, 10), THPolVirtualSchePIRRate().clone(-1)).setUnits('kbps').setMaxAccess("readcreate")
if mibBuilder.loadTexts: tVirtualSchedulerPIR.setStatus('current')
tVirtualSchedulerCIR = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 12, 2, 1, 11), THPolVirtualScheCIRRate()).setUnits('kbps').setMaxAccess("readcreate")
if mibBuilder.loadTexts: tVirtualSchedulerCIR.setStatus('current')
tVirtualSchedulerSummedCIR = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 12, 2, 1, 12), TruthValue().clone('true')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tVirtualSchedulerSummedCIR.setStatus('current')
tVirtualSchedulerLastChanged = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 12, 2, 1, 13), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tVirtualSchedulerLastChanged.setStatus('current')
tVirtualSchedulerUsePortParent = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 12, 2, 1, 14), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tVirtualSchedulerUsePortParent.setStatus('current')
tVirtualSchedulerPortLvl = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 12, 2, 1, 15), TLevel().clone(1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tVirtualSchedulerPortLvl.setStatus('current')
tVirtualSchedulerPortWght = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 12, 2, 1, 16), TWeight().clone(1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tVirtualSchedulerPortWght.setStatus('current')
tVirtualSchedulerPortCIRLvl = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 12, 2, 1, 17), TLevelOrDefault()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tVirtualSchedulerPortCIRLvl.setStatus('current')
tVirtualSchedulerPortCIRWght = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 12, 2, 1, 18), TWeight()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tVirtualSchedulerPortCIRWght.setStatus('current')
tPortSchedulerPlcyTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 12, 3), )
if mibBuilder.loadTexts: tPortSchedulerPlcyTable.setStatus('current')
tPortSchedulerPlcyEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 12, 3, 1), ).setIndexNames((1, "TIMETRA-QOS-MIB", "tPortSchedulerPlcyName"))
if mibBuilder.loadTexts: tPortSchedulerPlcyEntry.setStatus('current')
tPortSchedulerPlcyName = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 12, 3, 1, 1), TNamedItem())
if mibBuilder.loadTexts: tPortSchedulerPlcyName.setStatus('current')
tPortSchedulerPlcyRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 12, 3, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tPortSchedulerPlcyRowStatus.setStatus('current')
tPortSchedulerPlcyDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 12, 3, 1, 3), TItemDescription()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tPortSchedulerPlcyDescription.setStatus('current')
tPortSchedulerPlcyLastChanged = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 12, 3, 1, 4), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tPortSchedulerPlcyLastChanged.setStatus('current')
tPortSchedulerPlcyMaxRate = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 12, 3, 1, 5), TPortSchedulerPIRRate().clone(-1)).setUnits('kbps').setMaxAccess("readcreate")
if mibBuilder.loadTexts: tPortSchedulerPlcyMaxRate.setStatus('current')
tPortSchedulerPlcyLvl1PIR = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 12, 3, 1, 6), TPortSchedulerPIRRate().clone(-1)).setUnits('kbps').setMaxAccess("readcreate")
if mibBuilder.loadTexts: tPortSchedulerPlcyLvl1PIR.setStatus('current')
tPortSchedulerPlcyLvl1CIR = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 12, 3, 1, 7), TPortSchedulerCIR().clone(-1)).setUnits('kbps').setMaxAccess("readcreate")
if mibBuilder.loadTexts: tPortSchedulerPlcyLvl1CIR.setStatus('current')
tPortSchedulerPlcyLvl2PIR = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 12, 3, 1, 8), TPortSchedulerPIRRate().clone(-1)).setUnits('kbps').setMaxAccess("readcreate")
if mibBuilder.loadTexts: tPortSchedulerPlcyLvl2PIR.setStatus('current')
tPortSchedulerPlcyLvl2CIR = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 12, 3, 1, 9), TPortSchedulerCIR().clone(-1)).setUnits('kbps').setMaxAccess("readcreate")
if mibBuilder.loadTexts: tPortSchedulerPlcyLvl2CIR.setStatus('current')
tPortSchedulerPlcyLvl3PIR = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 12, 3, 1, 10), TPortSchedulerPIRRate().clone(-1)).setUnits('kbps').setMaxAccess("readcreate")
if mibBuilder.loadTexts: tPortSchedulerPlcyLvl3PIR.setStatus('current')
tPortSchedulerPlcyLvl3CIR = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 12, 3, 1, 11), TPortSchedulerCIR().clone(-1)).setUnits('kbps').setMaxAccess("readcreate")
if mibBuilder.loadTexts: tPortSchedulerPlcyLvl3CIR.setStatus('current')
tPortSchedulerPlcyLvl4PIR = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 12, 3, 1, 12), TPortSchedulerPIRRate().clone(-1)).setUnits('kbps').setMaxAccess("readcreate")
if mibBuilder.loadTexts: tPortSchedulerPlcyLvl4PIR.setStatus('current')
tPortSchedulerPlcyLvl4CIR = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 12, 3, 1, 13), TPortSchedulerCIR().clone(-1)).setUnits('kbps').setMaxAccess("readcreate")
if mibBuilder.loadTexts: tPortSchedulerPlcyLvl4CIR.setStatus('current')
tPortSchedulerPlcyLvl5PIR = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 12, 3, 1, 14), TPortSchedulerPIRRate().clone(-1)).setUnits('kbps').setMaxAccess("readcreate")
if mibBuilder.loadTexts: tPortSchedulerPlcyLvl5PIR.setStatus('current')
tPortSchedulerPlcyLvl5CIR = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 12, 3, 1, 15), TPortSchedulerCIR().clone(-1)).setUnits('kbps').setMaxAccess("readcreate")
if mibBuilder.loadTexts: tPortSchedulerPlcyLvl5CIR.setStatus('current')
tPortSchedulerPlcyLvl6PIR = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 12, 3, 1, 16), TPortSchedulerPIRRate().clone(-1)).setUnits('kbps').setMaxAccess("readcreate")
if mibBuilder.loadTexts: tPortSchedulerPlcyLvl6PIR.setStatus('current')
tPortSchedulerPlcyLvl6CIR = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 12, 3, 1, 17), TPortSchedulerCIR().clone(-1)).setUnits('kbps').setMaxAccess("readcreate")
if mibBuilder.loadTexts: tPortSchedulerPlcyLvl6CIR.setStatus('current')
tPortSchedulerPlcyLvl7PIR = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 12, 3, 1, 18), TPortSchedulerPIRRate().clone(-1)).setUnits('kbps').setMaxAccess("readcreate")
if mibBuilder.loadTexts: tPortSchedulerPlcyLvl7PIR.setStatus('current')
tPortSchedulerPlcyLvl7CIR = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 12, 3, 1, 19), TPortSchedulerCIR().clone(-1)).setUnits('kbps').setMaxAccess("readcreate")
if mibBuilder.loadTexts: tPortSchedulerPlcyLvl7CIR.setStatus('current')
tPortSchedulerPlcyLvl8PIR = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 12, 3, 1, 20), TPortSchedulerPIRRate().clone(-1)).setUnits('kbps').setMaxAccess("readcreate")
if mibBuilder.loadTexts: tPortSchedulerPlcyLvl8PIR.setStatus('current')
tPortSchedulerPlcyLvl8CIR = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 12, 3, 1, 21), TPortSchedulerCIR().clone(-1)).setUnits('kbps').setMaxAccess("readcreate")
if mibBuilder.loadTexts: tPortSchedulerPlcyLvl8CIR.setStatus('current')
tPortSchedulerPlcyOrphanLvl = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 12, 3, 1, 22), TLevel().clone(1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tPortSchedulerPlcyOrphanLvl.setStatus('current')
tPortSchedulerPlcyOrphanWeight = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 12, 3, 1, 23), TWeight()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tPortSchedulerPlcyOrphanWeight.setStatus('current')
tPortSchedulerPlcyOrphanCIRLvl = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 12, 3, 1, 24), TLevelOrDefault()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tPortSchedulerPlcyOrphanCIRLvl.setStatus('current')
tPortSchedulerPlcyOrphanCIRWght = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 12, 3, 1, 25), TWeight()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tPortSchedulerPlcyOrphanCIRWght.setStatus('current')
tHsmdaSchedulerPlcyTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 12, 4), )
if mibBuilder.loadTexts: tHsmdaSchedulerPlcyTable.setStatus('current')
tHsmdaSchedulerPlcyEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 12, 4, 1), ).setIndexNames((0, "TIMETRA-QOS-MIB", "tHsmdaSchedulerPlcyName"))
if mibBuilder.loadTexts: tHsmdaSchedulerPlcyEntry.setStatus('current')
tHsmdaSchedulerPlcyName = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 12, 4, 1, 1), TNamedItem())
if mibBuilder.loadTexts: tHsmdaSchedulerPlcyName.setStatus('current')
tHsmdaSchedulerPlcyRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 12, 4, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tHsmdaSchedulerPlcyRowStatus.setStatus('current')
tHsmdaSchedulerPlcyDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 12, 4, 1, 3), TItemDescription()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tHsmdaSchedulerPlcyDescription.setStatus('current')
tHsmdaSchedulerPlcyMaxRate = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 12, 4, 1, 4), THsmdaPIRMRate().clone(-1)).setUnits('Mbps').setMaxAccess("readcreate")
if mibBuilder.loadTexts: tHsmdaSchedulerPlcyMaxRate.setStatus('current')
tHsmdaSchedulerPlcyLvl1Rate = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 12, 4, 1, 5), THsmdaPIRMRate().clone(-1)).setUnits('Mbps').setMaxAccess("readcreate")
if mibBuilder.loadTexts: tHsmdaSchedulerPlcyLvl1Rate.setStatus('current')
tHsmdaSchedulerPlcyLvl1GrpId = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 12, 4, 1, 6), THsmdaSchedulerPolicyGroupId()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tHsmdaSchedulerPlcyLvl1GrpId.setStatus('current')
tHsmdaSchedulerPlcyLvl1WgtInGrp = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 12, 4, 1, 7), THsmdaWeight().clone(1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tHsmdaSchedulerPlcyLvl1WgtInGrp.setStatus('current')
tHsmdaSchedulerPlcyLvl2Rate = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 12, 4, 1, 8), THsmdaPIRMRate().clone(-1)).setUnits('Mbps').setMaxAccess("readcreate")
if mibBuilder.loadTexts: tHsmdaSchedulerPlcyLvl2Rate.setStatus('current')
tHsmdaSchedulerPlcyLvl2GrpId = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 12, 4, 1, 9), THsmdaSchedulerPolicyGroupId()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tHsmdaSchedulerPlcyLvl2GrpId.setStatus('current')
tHsmdaSchedulerPlcyLvl2WgtInGrp = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 12, 4, 1, 10), THsmdaWeight().clone(1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tHsmdaSchedulerPlcyLvl2WgtInGrp.setStatus('current')
tHsmdaSchedulerPlcyLvl3Rate = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 12, 4, 1, 11), THsmdaPIRMRate().clone(-1)).setUnits('Mbps').setMaxAccess("readcreate")
if mibBuilder.loadTexts: tHsmdaSchedulerPlcyLvl3Rate.setStatus('current')
tHsmdaSchedulerPlcyLvl3GrpId = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 12, 4, 1, 12), THsmdaSchedulerPolicyGroupId()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tHsmdaSchedulerPlcyLvl3GrpId.setStatus('current')
tHsmdaSchedulerPlcyLvl3WgtInGrp = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 12, 4, 1, 13), THsmdaWeight().clone(1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tHsmdaSchedulerPlcyLvl3WgtInGrp.setStatus('current')
tHsmdaSchedulerPlcyLvl4Rate = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 12, 4, 1, 14), THsmdaPIRMRate().clone(-1)).setUnits('Mbps').setMaxAccess("readcreate")
if mibBuilder.loadTexts: tHsmdaSchedulerPlcyLvl4Rate.setStatus('current')
tHsmdaSchedulerPlcyLvl4GrpId = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 12, 4, 1, 15), THsmdaSchedulerPolicyGroupId()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tHsmdaSchedulerPlcyLvl4GrpId.setStatus('current')
tHsmdaSchedulerPlcyLvl4WgtInGrp = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 12, 4, 1, 16), THsmdaWeight().clone(1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tHsmdaSchedulerPlcyLvl4WgtInGrp.setStatus('current')
tHsmdaSchedulerPlcyLvl5Rate = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 12, 4, 1, 17), THsmdaPIRMRate().clone(-1)).setUnits('Mbps').setMaxAccess("readcreate")
if mibBuilder.loadTexts: tHsmdaSchedulerPlcyLvl5Rate.setStatus('current')
tHsmdaSchedulerPlcyLvl5GrpId = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 12, 4, 1, 18), THsmdaSchedulerPolicyGroupId()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tHsmdaSchedulerPlcyLvl5GrpId.setStatus('current')
tHsmdaSchedulerPlcyLvl5WgtInGrp = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 12, 4, 1, 19), THsmdaWeight().clone(1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tHsmdaSchedulerPlcyLvl5WgtInGrp.setStatus('current')
tHsmdaSchedulerPlcyLvl6Rate = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 12, 4, 1, 20), THsmdaPIRMRate().clone(-1)).setUnits('Mbps').setMaxAccess("readcreate")
if mibBuilder.loadTexts: tHsmdaSchedulerPlcyLvl6Rate.setStatus('current')
tHsmdaSchedulerPlcyLvl6GrpId = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 12, 4, 1, 21), THsmdaSchedulerPolicyGroupId()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tHsmdaSchedulerPlcyLvl6GrpId.setStatus('current')
tHsmdaSchedulerPlcyLvl6WgtInGrp = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 12, 4, 1, 22), THsmdaWeight().clone(1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tHsmdaSchedulerPlcyLvl6WgtInGrp.setStatus('current')
tHsmdaSchedulerPlcyLvl7Rate = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 12, 4, 1, 23), THsmdaPIRMRate().clone(-1)).setUnits('Mbps').setMaxAccess("readcreate")
if mibBuilder.loadTexts: tHsmdaSchedulerPlcyLvl7Rate.setStatus('current')
tHsmdaSchedulerPlcyLvl7GrpId = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 12, 4, 1, 24), THsmdaSchedulerPolicyGroupId()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tHsmdaSchedulerPlcyLvl7GrpId.setStatus('current')
tHsmdaSchedulerPlcyLvl7WgtInGrp = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 12, 4, 1, 25), THsmdaWeight().clone(1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tHsmdaSchedulerPlcyLvl7WgtInGrp.setStatus('current')
tHsmdaSchedulerPlcyLvl8Rate = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 12, 4, 1, 26), THsmdaPIRMRate().clone(-1)).setUnits('Mbps').setMaxAccess("readcreate")
if mibBuilder.loadTexts: tHsmdaSchedulerPlcyLvl8Rate.setStatus('current')
tHsmdaSchedulerPlcyLvl8GrpId = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 12, 4, 1, 27), THsmdaSchedulerPolicyGroupId()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tHsmdaSchedulerPlcyLvl8GrpId.setStatus('current')
tHsmdaSchedulerPlcyLvl8WgtInGrp = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 12, 4, 1, 28), THsmdaWeight().clone(1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tHsmdaSchedulerPlcyLvl8WgtInGrp.setStatus('current')
tHsmdaSchedulerPlcyLastChanged = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 12, 4, 1, 29), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tHsmdaSchedulerPlcyLastChanged.setStatus('current')
tHsmdaSchedulerPlcyGrp1Rate = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 12, 4, 1, 30), THsmdaPIRMRate().clone(-1)).setUnits('Mbps').setMaxAccess("readcreate")
if mibBuilder.loadTexts: tHsmdaSchedulerPlcyGrp1Rate.setStatus('current')
tHsmdaSchedulerPlcyGrp2Rate = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 12, 4, 1, 31), THsmdaPIRMRate().clone(-1)).setUnits('Mbps').setMaxAccess("readcreate")
if mibBuilder.loadTexts: tHsmdaSchedulerPlcyGrp2Rate.setStatus('current')
tHsmdaSchedulerPlcyBrstLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 12, 4, 1, 32), TClassBurstLimit().clone(-1)).setUnits('bytes').setMaxAccess("readcreate")
if mibBuilder.loadTexts: tHsmdaSchedulerPlcyBrstLimit.setStatus('current')
tHsmdaSchedulerPlcyGrp1BrstLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 12, 4, 1, 33), TClassBurstLimit().clone(-1)).setUnits('bytes').setMaxAccess("readcreate")
if mibBuilder.loadTexts: tHsmdaSchedulerPlcyGrp1BrstLimit.setStatus('current')
tHsmdaSchedulerPlcyGrp2BrstLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 12, 4, 1, 34), TClassBurstLimit().clone(-1)).setUnits('bytes').setMaxAccess("readcreate")
if mibBuilder.loadTexts: tHsmdaSchedulerPlcyGrp2BrstLimit.setStatus('current')
tHsmdaSchedulerPlcyLvl1BrstLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 12, 4, 1, 35), TClassBurstLimit().clone(-1)).setUnits('bytes').setMaxAccess("readcreate")
if mibBuilder.loadTexts: tHsmdaSchedulerPlcyLvl1BrstLimit.setStatus('current')
tHsmdaSchedulerPlcyLvl2BrstLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 12, 4, 1, 36), TClassBurstLimit().clone(-1)).setUnits('bytes').setMaxAccess("readcreate")
if mibBuilder.loadTexts: tHsmdaSchedulerPlcyLvl2BrstLimit.setStatus('current')
tHsmdaSchedulerPlcyLvl3BrstLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 12, 4, 1, 37), TClassBurstLimit().clone(-1)).setUnits('bytes').setMaxAccess("readcreate")
if mibBuilder.loadTexts: tHsmdaSchedulerPlcyLvl3BrstLimit.setStatus('current')
tHsmdaSchedulerPlcyLvl4BrstLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 12, 4, 1, 38), TClassBurstLimit().clone(-1)).setUnits('bytes').setMaxAccess("readcreate")
if mibBuilder.loadTexts: tHsmdaSchedulerPlcyLvl4BrstLimit.setStatus('current')
tHsmdaSchedulerPlcyLvl5BrstLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 12, 4, 1, 39), TClassBurstLimit().clone(-1)).setUnits('bytes').setMaxAccess("readcreate")
if mibBuilder.loadTexts: tHsmdaSchedulerPlcyLvl5BrstLimit.setStatus('current')
tHsmdaSchedulerPlcyLvl6BrstLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 12, 4, 1, 40), TClassBurstLimit().clone(-1)).setUnits('bytes').setMaxAccess("readcreate")
if mibBuilder.loadTexts: tHsmdaSchedulerPlcyLvl6BrstLimit.setStatus('current')
tHsmdaSchedulerPlcyLvl7BrstLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 12, 4, 1, 41), TClassBurstLimit().clone(-1)).setUnits('bytes').setMaxAccess("readcreate")
if mibBuilder.loadTexts: tHsmdaSchedulerPlcyLvl7BrstLimit.setStatus('current')
tHsmdaSchedulerPlcyLvl8BrstLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 12, 4, 1, 42), TClassBurstLimit().clone(-1)).setUnits('bytes').setMaxAccess("readcreate")
if mibBuilder.loadTexts: tHsmdaSchedulerPlcyLvl8BrstLimit.setStatus('current')
tQosDomainLastChanged = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 20, 1), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tQosDomainLastChanged.setStatus('current')
tDSCPNameTableLastChanged = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 20, 5), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tDSCPNameTableLastChanged.setStatus('current')
tFCNameTableLastChanged = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 20, 10), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tFCNameTableLastChanged.setStatus('current')
tSapIngressTableLastChanged = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 20, 20), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tSapIngressTableLastChanged.setStatus('current')
tSapIngressQueueTableLastChanged = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 20, 21), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tSapIngressQueueTableLastChanged.setStatus('current')
tSapIngressDSCPTableLastChanged = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 20, 22), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tSapIngressDSCPTableLastChanged.setStatus('current')
tSapIngressDot1pTableLastChanged = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 20, 23), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tSapIngressDot1pTableLastChanged.setStatus('current')
tSapIngressIPCriteriaTableLastChanged = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 20, 24), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tSapIngressIPCriteriaTableLastChanged.setStatus('current')
tSapIngressMacCriteriaTableLastChanged = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 20, 25), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tSapIngressMacCriteriaTableLastChanged.setStatus('current')
tSapIngressFCTableLastChanged = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 20, 26), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tSapIngressFCTableLastChanged.setStatus('current')
tSapIngressPrecTableLastChanged = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 20, 27), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tSapIngressPrecTableLastChanged.setStatus('current')
tSapEgressTableLastChanged = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 20, 30), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tSapEgressTableLastChanged.setStatus('current')
tSapEgressQueueTableLastChanged = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 20, 31), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tSapEgressQueueTableLastChanged.setStatus('current')
tSapEgressFCTableLastChanged = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 20, 32), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tSapEgressFCTableLastChanged.setStatus('current')
tNetworkPolicyTableLastChanged = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 20, 40), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tNetworkPolicyTableLastChanged.setStatus('current')
tNetworkIngressDSCPTableLastChanged = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 20, 41), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tNetworkIngressDSCPTableLastChanged.setStatus('current')
tNetworkIngressLSPEXPTableLastChanged = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 20, 42), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tNetworkIngressLSPEXPTableLastChanged.setStatus('current')
tNetworkEgressFCTableLastChanged = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 20, 43), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tNetworkEgressFCTableLastChanged.setStatus('current')
tNetworkIngressDot1pTableLastChanged = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 20, 44), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tNetworkIngressDot1pTableLastChanged.setStatus('current')
tNetworkQueuePolicyTableLastChanged = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 20, 50), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tNetworkQueuePolicyTableLastChanged.setStatus('current')
tNetworkQueueTableLastChanged = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 20, 51), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tNetworkQueueTableLastChanged.setStatus('current')
tNetworkQueueFCTableLastChanged = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 20, 52), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tNetworkQueueFCTableLastChanged.setStatus('current')
tSlopePolicyTableLastChanged = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 20, 55), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tSlopePolicyTableLastChanged.setStatus('current')
tSchedulerPolicyTableLastChanged = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 20, 60), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tSchedulerPolicyTableLastChanged.setStatus('current')
tVirtualSchedulerTableLastChanged = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 20, 61), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tVirtualSchedulerTableLastChanged.setStatus('current')
tAtmTdpTableLastChanged = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 20, 62), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tAtmTdpTableLastChanged.setStatus('current')
tSharedQueuePolicyTableLastChanged = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 20, 63), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tSharedQueuePolicyTableLastChanged.setStatus('current')
tSharedQueueTableLastChanged = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 20, 64), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tSharedQueueTableLastChanged.setStatus('current')
tSharedQueueFCTableLastChanged = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 20, 65), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tSharedQueueFCTableLastChanged.setStatus('current')
tSapIngressIPv6CriteriaTableLastChanged = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 20, 66), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tSapIngressIPv6CriteriaTableLastChanged.setStatus('current')
tSapIngrHsmdaQueueTblLastChngd = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 20, 67), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tSapIngrHsmdaQueueTblLastChngd.setStatus('obsolete')
tSapEgrHsmdaQueueTblLastChngd = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 20, 68), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tSapEgrHsmdaQueueTblLastChngd.setStatus('current')
tHsmdaSchedPlcyTblLastChngd = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 20, 69), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tHsmdaSchedPlcyTblLastChngd.setStatus('current')
tHsmdaSchedPlcyGrpTblLastChngd = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 20, 70), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tHsmdaSchedPlcyGrpTblLastChngd.setStatus('current')
tHsmdaPoolPlcyTblLastChngd = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 20, 71), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tHsmdaPoolPlcyTblLastChngd.setStatus('current')
tHsmdaSlopePolicyTableLastChanged = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 20, 72), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tHsmdaSlopePolicyTableLastChanged.setStatus('current')
tNamedPoolPolicyTableLastChanged = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 20, 73), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tNamedPoolPolicyTableLastChanged.setStatus('current')
tQ1NamedPoolTableLastChanged = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 20, 74), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tQ1NamedPoolTableLastChanged.setStatus('current')
tMcMlpppIngrProfTableLastChanged = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 20, 75), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tMcMlpppIngrProfTableLastChanged.setStatus('current')
tMcMlpppIngrClassTableLastChanged = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 20, 76), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tMcMlpppIngrClassTableLastChanged.setStatus('current')
tMcMlpppEgrProfTableLastChanged = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 20, 77), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tMcMlpppEgrProfTableLastChanged.setStatus('current')
tMcMlpppEgrClassTableLastChanged = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 20, 78), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tMcMlpppEgrClassTableLastChanged.setStatus('current')
tMcMlpppEgrFCTableLastChanged = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 20, 79), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tMcMlpppEgrFCTableLastChanged.setStatus('current')
tMcFrIngrProfTableLastChanged = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 20, 80), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tMcFrIngrProfTableLastChanged.setStatus('current')
tMcFrIngrClassTableLastChanged = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 20, 81), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tMcFrIngrClassTableLastChanged.setStatus('current')
tMcFrEgrProfTableLastChanged = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 20, 82), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tMcFrEgrProfTableLastChanged.setStatus('current')
tMcFrEgrClassTableLastChanged = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 20, 83), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tMcFrEgrClassTableLastChanged.setStatus('current')
tSapIngressLspExpTableLastChange = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 20, 84), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tSapIngressLspExpTableLastChange.setStatus('current')
tAtmTdpTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 21, 1), )
if mibBuilder.loadTexts: tAtmTdpTable.setStatus('current')
tAtmTdpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 21, 1, 1), ).setIndexNames((0, "TIMETRA-QOS-MIB", "tAtmTdpIndex"))
if mibBuilder.loadTexts: tAtmTdpEntry.setStatus('current')
tAtmTdpIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 21, 1, 1, 1), AtmTrafficDescrParamIndex().subtype(subtypeSpec=ValueRangeConstraint(1, 1000)))
if mibBuilder.loadTexts: tAtmTdpIndex.setStatus('current')
tAtmTdpSir = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 21, 1, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tAtmTdpSir.setStatus('current')
tAtmTdpPir = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 21, 1, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tAtmTdpPir.setStatus('current')
tAtmTdpMbs = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 21, 1, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tAtmTdpMbs.setStatus('current')
tAtmTdpMir = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 21, 1, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tAtmTdpMir.setStatus('current')
tAtmTdpShaping = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 21, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tAtmTdpShaping.setStatus('current')
tAtmTdpServCat = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 21, 1, 1, 7), AtmServiceCategory().clone('ubr')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tAtmTdpServCat.setStatus('current')
tAtmTdpDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 21, 1, 1, 8), TItemDescription()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tAtmTdpDescription.setStatus('current')
tAtmTdpLastChanged = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 21, 1, 1, 9), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tAtmTdpLastChanged.setStatus('current')
tAtmTdpRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 21, 1, 1, 10), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tAtmTdpRowStatus.setStatus('current')
tAtmTdpDescrType = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 21, 1, 1, 11), TAtmTdpDescrType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tAtmTdpDescrType.setStatus('current')
tAtmTdpCdvt = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 21, 1, 1, 12), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tAtmTdpCdvt.setStatus('current')
tAtmTdpPolicing = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 21, 1, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tAtmTdpPolicing.setStatus('current')
tAtmTdpCLPTagging = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 21, 1, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tAtmTdpCLPTagging.setStatus('current')
tAtmTdpWeight = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 21, 1, 1, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tAtmTdpWeight.setStatus('current')
tNamedPoolPolicyTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 22, 1), )
if mibBuilder.loadTexts: tNamedPoolPolicyTable.setStatus('current')
tNamedPoolPolicyEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 22, 1, 1), ).setIndexNames((0, "TIMETRA-QOS-MIB", "tNamedPoolPolicyName"))
if mibBuilder.loadTexts: tNamedPoolPolicyEntry.setStatus('current')
tNamedPoolPolicyName = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 22, 1, 1, 1), TNamedItem())
if mibBuilder.loadTexts: tNamedPoolPolicyName.setStatus('current')
tNamedPoolPolicyRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 22, 1, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tNamedPoolPolicyRowStatus.setStatus('current')
tNamedPoolPolicyLastChanged = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 22, 1, 1, 3), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tNamedPoolPolicyLastChanged.setStatus('current')
tNamedPoolPolicyDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 22, 1, 1, 4), TItemDescription()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tNamedPoolPolicyDescription.setStatus('current')
tNamedPoolPolicyQ1DefaultWeight = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 22, 1, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 100)).clone(50)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tNamedPoolPolicyQ1DefaultWeight.setStatus('current')
tNamedPoolPolicyQ1MdaWeight = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 22, 1, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 100)).clone(50)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tNamedPoolPolicyQ1MdaWeight.setStatus('current')
tNamedPoolPolicyQ1PortWeight = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 22, 1, 1, 7), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 100)).clone(50)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tNamedPoolPolicyQ1PortWeight.setStatus('current')
tQ1NamedPoolTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 22, 2), )
if mibBuilder.loadTexts: tQ1NamedPoolTable.setStatus('current')
tQ1NamedPoolEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 22, 2, 1), ).setIndexNames((0, "TIMETRA-QOS-MIB", "tQ1NamedPoolPolicyName"), (0, "TIMETRA-QOS-MIB", "tQ1NamedPoolName"))
if mibBuilder.loadTexts: tQ1NamedPoolEntry.setStatus('current')
tQ1NamedPoolPolicyName = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 22, 2, 1, 1), TNamedItem())
if mibBuilder.loadTexts: tQ1NamedPoolPolicyName.setStatus('current')
tQ1NamedPoolName = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 22, 2, 1, 2), TNamedItem())
if mibBuilder.loadTexts: tQ1NamedPoolName.setStatus('current')
tQ1NamedPoolRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 22, 2, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tQ1NamedPoolRowStatus.setStatus('current')
tQ1NamedPoolLastChanged = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 22, 2, 1, 4), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tQ1NamedPoolLastChanged.setStatus('current')
tQ1NamedPoolDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 22, 2, 1, 5), TItemDescription()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tQ1NamedPoolDescription.setStatus('current')
tQ1NamedPoolNetworkAllocWeight = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 22, 2, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 100)).clone(50)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tQ1NamedPoolNetworkAllocWeight.setStatus('current')
tQ1NamedPoolAccessAllocWeight = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 22, 2, 1, 7), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 100)).clone(50)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tQ1NamedPoolAccessAllocWeight.setStatus('current')
tQ1NamedPoolSlopePolicy = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 22, 2, 1, 8), TNamedItemOrEmpty().clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tQ1NamedPoolSlopePolicy.setStatus('current')
tQ1NamedPoolReservedCbs = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 22, 2, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100)).clone(30)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tQ1NamedPoolReservedCbs.setStatus('current')
tQ1NamedPoolResvCbsAmbrAlrmStep = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 22, 2, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setUnits('percent').setMaxAccess("readcreate")
if mibBuilder.loadTexts: tQ1NamedPoolResvCbsAmbrAlrmStep.setStatus('current')
tQ1NamedPoolResvCbsAmbrAlrmMax = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 22, 2, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setUnits('percent').setMaxAccess("readcreate")
if mibBuilder.loadTexts: tQ1NamedPoolResvCbsAmbrAlrmMax.setStatus('current')
tQ1NamedPoolAmbrAlrmThresh = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 22, 2, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1000))).setUnits('percent').setMaxAccess("readcreate")
if mibBuilder.loadTexts: tQ1NamedPoolAmbrAlrmThresh.setStatus('current')
tQ1NamedPoolRedAlrmThresh = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 22, 2, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1000))).setUnits('percent').setMaxAccess("readcreate")
if mibBuilder.loadTexts: tQ1NamedPoolRedAlrmThresh.setStatus('current')
tAtmTdpIndexNext = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 21, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tAtmTdpIndexNext.setStatus('current')
tAtmTdpsMaxSupported = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 21, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tAtmTdpsMaxSupported.setStatus('current')
tAtmTdpsCurrentlyConfigured = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 21, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tAtmTdpsCurrentlyConfigured.setStatus('current')
tHsmdaPoolPolicyTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 22, 3), )
if mibBuilder.loadTexts: tHsmdaPoolPolicyTable.setStatus('current')
tHsmdaPoolPolicyEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 22, 3, 1), ).setIndexNames((0, "TIMETRA-QOS-MIB", "tHsmdaPoolPolicyName"))
if mibBuilder.loadTexts: tHsmdaPoolPolicyEntry.setStatus('current')
tHsmdaPoolPolicyName = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 22, 3, 1, 1), TNamedItem())
if mibBuilder.loadTexts: tHsmdaPoolPolicyName.setStatus('current')
tHsmdaPoolPolicyRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 22, 3, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tHsmdaPoolPolicyRowStatus.setStatus('current')
tHsmdaPoolLastChanged = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 22, 3, 1, 3), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tHsmdaPoolLastChanged.setStatus('current')
tHsmdaPoolDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 22, 3, 1, 4), TItemDescription()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tHsmdaPoolDescription.setStatus('current')
tHsmdaPoolSystemReserve = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 22, 3, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(100, 3000)).clone(1000)).setUnits('hundredths of a percent').setMaxAccess("readcreate")
if mibBuilder.loadTexts: tHsmdaPoolSystemReserve.setStatus('current')
tHsmdaPoolRoot1AllocWeight = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 22, 3, 1, 6), TWeight().subtype(subtypeSpec=ValueRangeConstraint(1, 100)).clone(75)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tHsmdaPoolRoot1AllocWeight.setStatus('current')
tHsmdaPoolRoot2AllocWeight = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 22, 3, 1, 7), TWeight().clone(25)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tHsmdaPoolRoot2AllocWeight.setStatus('current')
tHsmdaPoolRoot3AllocWeight = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 22, 3, 1, 8), TWeight()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tHsmdaPoolRoot3AllocWeight.setStatus('current')
tHsmdaPoolRoot4AllocWeight = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 22, 3, 1, 9), TWeight()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tHsmdaPoolRoot4AllocWeight.setStatus('current')
tHsmdaPoolRoot5AllocWeight = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 22, 3, 1, 10), TWeight()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tHsmdaPoolRoot5AllocWeight.setStatus('current')
tHsmdaPoolRoot6AllocWeight = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 22, 3, 1, 11), TWeight()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tHsmdaPoolRoot6AllocWeight.setStatus('current')
tHsmdaPoolRoot7AllocWeight = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 22, 3, 1, 12), TWeight()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tHsmdaPoolRoot7AllocWeight.setStatus('current')
tHsmdaPoolRoot8AllocWeight = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 22, 3, 1, 13), TWeight()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tHsmdaPoolRoot8AllocWeight.setStatus('current')
tHsmdaPoolClass1Parent = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 22, 3, 1, 14), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 8)).clone(1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tHsmdaPoolClass1Parent.setStatus('current')
tHsmdaPoolClass1AllocPercent = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 22, 3, 1, 15), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 10000)).clone(4000)).setUnits('hundredths of a percent').setMaxAccess("readcreate")
if mibBuilder.loadTexts: tHsmdaPoolClass1AllocPercent.setStatus('current')
tHsmdaPoolClass2Parent = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 22, 3, 1, 16), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 8)).clone(1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tHsmdaPoolClass2Parent.setStatus('current')
tHsmdaPoolClass2AllocPercent = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 22, 3, 1, 17), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 10000)).clone(3500)).setUnits('hundredths of a percent').setMaxAccess("readcreate")
if mibBuilder.loadTexts: tHsmdaPoolClass2AllocPercent.setStatus('current')
tHsmdaPoolClass3Parent = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 22, 3, 1, 18), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 8)).clone(1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tHsmdaPoolClass3Parent.setStatus('current')
tHsmdaPoolClass3AllocPercent = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 22, 3, 1, 19), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 10000)).clone(3000)).setUnits('hundredths of a percent').setMaxAccess("readcreate")
if mibBuilder.loadTexts: tHsmdaPoolClass3AllocPercent.setStatus('current')
tHsmdaPoolClass4Parent = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 22, 3, 1, 20), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 8)).clone(1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tHsmdaPoolClass4Parent.setStatus('current')
tHsmdaPoolClass4AllocPercent = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 22, 3, 1, 21), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 10000)).clone(2500)).setUnits('hundredths of a percent').setMaxAccess("readcreate")
if mibBuilder.loadTexts: tHsmdaPoolClass4AllocPercent.setStatus('current')
tHsmdaPoolClass5Parent = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 22, 3, 1, 22), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 8)).clone(1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tHsmdaPoolClass5Parent.setStatus('current')
tHsmdaPoolClass5AllocPercent = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 22, 3, 1, 23), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 10000)).clone(2000)).setUnits('hundredths of a percent').setMaxAccess("readcreate")
if mibBuilder.loadTexts: tHsmdaPoolClass5AllocPercent.setStatus('current')
tHsmdaPoolClass6Parent = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 22, 3, 1, 24), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 8)).clone(2)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tHsmdaPoolClass6Parent.setStatus('current')
tHsmdaPoolClass6AllocPercent = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 22, 3, 1, 25), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 10000)).clone(5000)).setUnits('hundredths of a percent').setMaxAccess("readcreate")
if mibBuilder.loadTexts: tHsmdaPoolClass6AllocPercent.setStatus('current')
tHsmdaPoolClass7Parent = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 22, 3, 1, 26), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 8)).clone(2)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tHsmdaPoolClass7Parent.setStatus('current')
tHsmdaPoolClass7AllocPercent = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 22, 3, 1, 27), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 10000)).clone(4000)).setUnits('hundredths of a percent').setMaxAccess("readcreate")
if mibBuilder.loadTexts: tHsmdaPoolClass7AllocPercent.setStatus('current')
tHsmdaPoolClass8Parent = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 22, 3, 1, 28), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 8)).clone(2)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tHsmdaPoolClass8Parent.setStatus('current')
tHsmdaPoolClass8AllocPercent = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 22, 3, 1, 29), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 10000)).clone(3000)).setUnits('hundredths of a percent').setMaxAccess("readcreate")
if mibBuilder.loadTexts: tHsmdaPoolClass8AllocPercent.setStatus('current')
tMcMlpppIngrProfTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 23, 1), )
if mibBuilder.loadTexts: tMcMlpppIngrProfTable.setStatus('current')
tMcMlpppIngrProfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 23, 1, 1), ).setIndexNames((0, "TIMETRA-QOS-MIB", "tMcMlpppIngrProfIndex"))
if mibBuilder.loadTexts: tMcMlpppIngrProfEntry.setStatus('current')
tMcMlpppIngrProfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 23, 1, 1, 1), TMlpppQoSProfileId().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)))
if mibBuilder.loadTexts: tMcMlpppIngrProfIndex.setStatus('current')
tMcMlpppIngrProfDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 23, 1, 1, 2), TItemDescription().clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tMcMlpppIngrProfDescription.setStatus('current')
tMcMlpppIngrProfLastChanged = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 23, 1, 1, 3), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tMcMlpppIngrProfLastChanged.setStatus('current')
tMcMlpppIngrProfRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 23, 1, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tMcMlpppIngrProfRowStatus.setStatus('current')
tMcMlpppIngrClassTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 23, 2), )
if mibBuilder.loadTexts: tMcMlpppIngrClassTable.setStatus('current')
tMcMlpppIngrClassEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 23, 2, 1), ).setIndexNames((0, "TIMETRA-QOS-MIB", "tMcMlpppIngrProfIndex"), (0, "TIMETRA-QOS-MIB", "tMcMlpppIngrClassIndex"))
if mibBuilder.loadTexts: tMcMlpppIngrClassEntry.setStatus('current')
tMcMlpppIngrClassIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 23, 2, 1, 1), TmnxMcMlpppClassIndex())
if mibBuilder.loadTexts: tMcMlpppIngrClassIndex.setStatus('current')
tMcMlpppIngrClassReassemblyTmout = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 23, 2, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 1000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tMcMlpppIngrClassReassemblyTmout.setStatus('current')
tMcMlpppIngrClassLastChanged = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 23, 2, 1, 3), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tMcMlpppIngrClassLastChanged.setStatus('current')
tMcMlpppEgrProfTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 24, 1), )
if mibBuilder.loadTexts: tMcMlpppEgrProfTable.setStatus('current')
tMcMlpppEgrProfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 24, 1, 1), ).setIndexNames((0, "TIMETRA-QOS-MIB", "tMcMlpppEgrProfIndex"))
if mibBuilder.loadTexts: tMcMlpppEgrProfEntry.setStatus('current')
tMcMlpppEgrProfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 24, 1, 1, 1), TMlpppQoSProfileId().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)))
if mibBuilder.loadTexts: tMcMlpppEgrProfIndex.setStatus('current')
tMcMlpppEgrProfDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 24, 1, 1, 2), TItemDescription().clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tMcMlpppEgrProfDescription.setStatus('current')
tMcMlpppEgrProfLastChanged = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 24, 1, 1, 3), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tMcMlpppEgrProfLastChanged.setStatus('current')
tMcMlpppEgrProfRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 24, 1, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tMcMlpppEgrProfRowStatus.setStatus('current')
tMcMlpppEgrClassTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 24, 3), )
if mibBuilder.loadTexts: tMcMlpppEgrClassTable.setStatus('current')
tMcMlpppEgrClassEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 24, 3, 1), ).setIndexNames((0, "TIMETRA-QOS-MIB", "tMcMlpppEgrProfIndex"), (0, "TIMETRA-QOS-MIB", "tMcMlpppEgrClassIndex"))
if mibBuilder.loadTexts: tMcMlpppEgrClassEntry.setStatus('current')
tMcMlpppEgrClassIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 24, 3, 1, 1), TmnxMcMlpppClassIndex())
if mibBuilder.loadTexts: tMcMlpppEgrClassIndex.setStatus('current')
tMcMlpppEgrClassMir = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 24, 3, 1, 2), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 100), ))).setUnits('percent').setMaxAccess("readwrite")
if mibBuilder.loadTexts: tMcMlpppEgrClassMir.setStatus('current')
tMcMlpppEgrClassWeight = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 24, 3, 1, 3), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 100), ))).setUnits('percent').setMaxAccess("readwrite")
if mibBuilder.loadTexts: tMcMlpppEgrClassWeight.setStatus('current')
tMcMlpppEgrClassMaxSize = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 24, 3, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 1000))).setUnits('milliseconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: tMcMlpppEgrClassMaxSize.setStatus('current')
tMcMlpppEgrClassLastChanged = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 24, 3, 1, 5), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tMcMlpppEgrClassLastChanged.setStatus('current')
tMcMlpppEgrFCTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 24, 4), )
if mibBuilder.loadTexts: tMcMlpppEgrFCTable.setStatus('current')
tMcMlpppEgrFCEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 24, 4, 1), ).setIndexNames((0, "TIMETRA-QOS-MIB", "tMcMlpppEgrProfIndex"), (0, "TIMETRA-QOS-MIB", "tMcMlpppEgrFCName"))
if mibBuilder.loadTexts: tMcMlpppEgrFCEntry.setStatus('current')
tMcMlpppEgrFCName = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 24, 4, 1, 1), TFCName())
if mibBuilder.loadTexts: tMcMlpppEgrFCName.setStatus('current')
tMcMlpppEgrFCClass = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 24, 4, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 3))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tMcMlpppEgrFCClass.setStatus('current')
tMcMlpppEgrFCLastChanged = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 24, 4, 1, 3), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tMcMlpppEgrFCLastChanged.setStatus('current')
tMcFrIngrProfTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 25, 1), )
if mibBuilder.loadTexts: tMcFrIngrProfTable.setStatus('current')
tMcFrIngrProfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 25, 1, 1), ).setIndexNames((0, "TIMETRA-QOS-MIB", "tMcFrIngrProfIndex"))
if mibBuilder.loadTexts: tMcFrIngrProfEntry.setStatus('current')
tMcFrIngrProfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 25, 1, 1, 1), TMcFrQoSProfileId().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)))
if mibBuilder.loadTexts: tMcFrIngrProfIndex.setStatus('current')
tMcFrIngrProfDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 25, 1, 1, 2), TItemDescription().clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tMcFrIngrProfDescription.setStatus('current')
tMcFrIngrProfLastChanged = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 25, 1, 1, 3), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tMcFrIngrProfLastChanged.setStatus('current')
tMcFrIngrProfRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 25, 1, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tMcFrIngrProfRowStatus.setStatus('current')
tMcFrIngrClassTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 25, 2), )
if mibBuilder.loadTexts: tMcFrIngrClassTable.setStatus('current')
tMcFrIngrClassEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 25, 2, 1), ).setIndexNames((0, "TIMETRA-QOS-MIB", "tMcFrIngrProfIndex"), (0, "TIMETRA-QOS-MIB", "tMcFrIngrClassIndex"))
if mibBuilder.loadTexts: tMcFrIngrClassEntry.setStatus('current')
tMcFrIngrClassIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 25, 2, 1, 1), TmnxMcFrClassIndex())
if mibBuilder.loadTexts: tMcFrIngrClassIndex.setStatus('current')
tMcFrIngrClassReassemblyTmout = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 25, 2, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 1000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tMcFrIngrClassReassemblyTmout.setStatus('current')
tMcFrIngrClassLastChanged = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 25, 2, 1, 3), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tMcFrIngrClassLastChanged.setStatus('current')
tMcFrEgrProfTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 26, 1), )
if mibBuilder.loadTexts: tMcFrEgrProfTable.setStatus('current')
tMcFrEgrProfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 26, 1, 1), ).setIndexNames((0, "TIMETRA-QOS-MIB", "tMcFrEgrProfIndex"))
if mibBuilder.loadTexts: tMcFrEgrProfEntry.setStatus('current')
tMcFrEgrProfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 26, 1, 1, 1), TMcFrQoSProfileId().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)))
if mibBuilder.loadTexts: tMcFrEgrProfIndex.setStatus('current')
tMcFrEgrProfDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 26, 1, 1, 2), TItemDescription().clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tMcFrEgrProfDescription.setStatus('current')
tMcFrEgrProfLastChanged = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 26, 1, 1, 3), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tMcFrEgrProfLastChanged.setStatus('current')
tMcFrEgrProfRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 26, 1, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tMcFrEgrProfRowStatus.setStatus('current')
tMcFrEgrClassTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 26, 3), )
if mibBuilder.loadTexts: tMcFrEgrClassTable.setStatus('current')
tMcFrEgrClassEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 26, 3, 1), ).setIndexNames((0, "TIMETRA-QOS-MIB", "tMcFrEgrProfIndex"), (0, "TIMETRA-QOS-MIB", "tMcFrEgrClassIndex"))
if mibBuilder.loadTexts: tMcFrEgrClassEntry.setStatus('current')
tMcFrEgrClassIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 26, 3, 1, 1), TmnxMcFrClassIndex())
if mibBuilder.loadTexts: tMcFrEgrClassIndex.setStatus('current')
tMcFrEgrClassMir = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 26, 3, 1, 2), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 100), ))).setUnits('percent').setMaxAccess("readwrite")
if mibBuilder.loadTexts: tMcFrEgrClassMir.setStatus('current')
tMcFrEgrClassWeight = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 26, 3, 1, 3), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 100), ))).setUnits('percent').setMaxAccess("readwrite")
if mibBuilder.loadTexts: tMcFrEgrClassWeight.setStatus('current')
tMcFrEgrClassMaxSize = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 26, 3, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 1000))).setUnits('milliseconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: tMcFrEgrClassMaxSize.setStatus('current')
tMcFrEgrClassLastChanged = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 26, 3, 1, 5), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tMcFrEgrClassLastChanged.setStatus('current')
tQosPolicerCtrlPolTblLastChgd = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 20, 87), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tQosPolicerCtrlPolTblLastChgd.setStatus('current')
tQosPolicerCtrlPolTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 27, 1), )
if mibBuilder.loadTexts: tQosPolicerCtrlPolTable.setStatus('current')
tQosPolicerCtrlPolEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 27, 1, 1), ).setIndexNames((0, "TIMETRA-QOS-MIB", "tQosPolicerCtrlPolName"))
if mibBuilder.loadTexts: tQosPolicerCtrlPolEntry.setStatus('current')
tQosPolicerCtrlPolName = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 27, 1, 1, 1), TNamedItem())
if mibBuilder.loadTexts: tQosPolicerCtrlPolName.setStatus('current')
tQosPolicerCtrlPolRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 27, 1, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tQosPolicerCtrlPolRowStatus.setStatus('current')
tQosPolicerCtrlPolLastChgd = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 27, 1, 1, 3), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tQosPolicerCtrlPolLastChgd.setStatus('current')
tQosPolicerCtrlPolDescr = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 27, 1, 1, 4), TItemDescription().clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tQosPolicerCtrlPolDescr.setStatus('current')
tQosPolicerCtrlPolRootMaxRate = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 27, 1, 1, 5), THPolPIRRate().clone(-1)).setUnits('kbps').setMaxAccess("readcreate")
if mibBuilder.loadTexts: tQosPolicerCtrlPolRootMaxRate.setStatus('current')
tQosPolicerCtrlPolMinMBSSep = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 27, 1, 1, 6), TPlcrBurstSizeBytes().clone(-1)).setUnits('bytes').setMaxAccess("readcreate")
if mibBuilder.loadTexts: tQosPolicerCtrlPolMinMBSSep.setStatus('current')
tQosPolicerCtrlPolProfPref = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 27, 1, 1, 7), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tQosPolicerCtrlPolProfPref.setStatus('current')
tQosPolicerLevelTblLastChgd = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 20, 88), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tQosPolicerLevelTblLastChgd.setStatus('current')
tQosPolicerLevelTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 27, 2), )
if mibBuilder.loadTexts: tQosPolicerLevelTable.setStatus('current')
tQosPolicerLevelEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 27, 2, 1), ).setIndexNames((0, "TIMETRA-QOS-MIB", "tQosPolicerCtrlPolName"), (0, "TIMETRA-QOS-MIB", "tQosPolicerLevel"))
if mibBuilder.loadTexts: tQosPolicerLevelEntry.setStatus('current')
tQosPolicerLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 27, 2, 1, 1), TLevel())
if mibBuilder.loadTexts: tQosPolicerLevel.setStatus('current')
tQosPolicerLevelLastChgd = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 27, 2, 1, 2), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tQosPolicerLevelLastChgd.setStatus('current')
tQosPolicerLevelCumMBS = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 27, 2, 1, 3), TPlcrBurstSizeBytes().clone(-1)).setUnits('bytes').setMaxAccess("readcreate")
if mibBuilder.loadTexts: tQosPolicerLevelCumMBS.setStatus('current')
tQosPolicerLevelFixedMBS = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 27, 2, 1, 4), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tQosPolicerLevelFixedMBS.setStatus('current')
tQosPolicerArbiterTblLastChgd = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 20, 89), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tQosPolicerArbiterTblLastChgd.setStatus('current')
tQosPolicerArbiterTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 27, 3), )
if mibBuilder.loadTexts: tQosPolicerArbiterTable.setStatus('current')
tQosPolicerArbiterEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 27, 3, 1), ).setIndexNames((0, "TIMETRA-QOS-MIB", "tQosPolicerCtrlPolName"), (0, "TIMETRA-QOS-MIB", "tQosPolicerArbiterTier"), (0, "TIMETRA-QOS-MIB", "tQosPolicerArbiterName"))
if mibBuilder.loadTexts: tQosPolicerArbiterEntry.setStatus('current')
tQosPolicerArbiterTier = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 27, 3, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("tier1", 1), ("tier2", 2))))
if mibBuilder.loadTexts: tQosPolicerArbiterTier.setStatus('current')
tQosPolicerArbiterName = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 27, 3, 1, 2), TNamedItem())
if mibBuilder.loadTexts: tQosPolicerArbiterName.setStatus('current')
tQosPolicerArbiterRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 27, 3, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tQosPolicerArbiterRowStatus.setStatus('current')
tQosPolicerArbiterLastChgd = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 27, 3, 1, 4), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tQosPolicerArbiterLastChgd.setStatus('current')
tQosPolicerArbiterDescr = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 27, 3, 1, 5), TItemDescription().clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tQosPolicerArbiterDescr.setStatus('current')
tQosPolicerArbiterRate = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 27, 3, 1, 6), THPolPIRRate().clone(-1)).setUnits('kbps').setMaxAccess("readcreate")
if mibBuilder.loadTexts: tQosPolicerArbiterRate.setStatus('current')
tQosPolicerArbiterParent = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 27, 3, 1, 7), TNamedItemOrEmpty().clone('root')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tQosPolicerArbiterParent.setStatus('current')
tQosPolicerArbiterLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 27, 3, 1, 8), TLevel().clone(1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tQosPolicerArbiterLevel.setStatus('current')
tQosPolicerArbiterWeight = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 27, 3, 1, 9), TPolicerWeight().clone(1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tQosPolicerArbiterWeight.setStatus('current')
tQosIngPolicerTableLastChanged = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 20, 97), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tQosIngPolicerTableLastChanged.setStatus('current')
tQosIngPolicerTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 27, 4), )
if mibBuilder.loadTexts: tQosIngPolicerTable.setStatus('current')
tQosIngPolicerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 27, 4, 1), ).setIndexNames((0, "TIMETRA-QOS-MIB", "tQosIngQGroupName"), (0, "TIMETRA-QOS-MIB", "tQosIngPolicerId"))
if mibBuilder.loadTexts: tQosIngPolicerEntry.setStatus('current')
tQosIngPolicerId = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 27, 4, 1, 1), TIngPolicerId())
if mibBuilder.loadTexts: tQosIngPolicerId.setStatus('current')
tQosIngPolicerRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 27, 4, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tQosIngPolicerRowStatus.setStatus('current')
tQosIngPolicerLastChanged = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 27, 4, 1, 3), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tQosIngPolicerLastChanged.setStatus('current')
tQosIngPolicerDescr = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 27, 4, 1, 4), TItemDescription().clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tQosIngPolicerDescr.setStatus('current')
tQosIngPolicerPIRAdaptation = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 27, 4, 1, 5), TAdaptationRule().clone('closest')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tQosIngPolicerPIRAdaptation.setStatus('current')
tQosIngPolicerCIRAdaptation = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 27, 4, 1, 6), TAdaptationRule().clone('closest')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tQosIngPolicerCIRAdaptation.setStatus('current')
tQosIngPolicerParent = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 27, 4, 1, 7), TNamedItemOrEmpty().clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tQosIngPolicerParent.setStatus('current')
tQosIngPolicerLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 27, 4, 1, 8), TLevel().clone(1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tQosIngPolicerLevel.setStatus('current')
tQosIngPolicerWeight = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 27, 4, 1, 9), TPolicerWeight().clone(1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tQosIngPolicerWeight.setStatus('current')
tQosIngPolicerAdminPIR = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 27, 4, 1, 10), THPolPIRRate().clone(-1)).setUnits('kbps').setMaxAccess("readcreate")
if mibBuilder.loadTexts: tQosIngPolicerAdminPIR.setStatus('current')
tQosIngPolicerAdminCIR = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 27, 4, 1, 11), THPolCIRRate()).setUnits('kbps').setMaxAccess("readcreate")
if mibBuilder.loadTexts: tQosIngPolicerAdminCIR.setStatus('current')
tQosIngPolicerCBS = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 27, 4, 1, 12), TPlcrBurstSizeBytes().clone(-1)).setUnits('bytes').setMaxAccess("readcreate")
if mibBuilder.loadTexts: tQosIngPolicerCBS.setStatus('current')
tQosIngPolicerMBS = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 27, 4, 1, 13), TPlcrBurstSizeBytes().clone(-1)).setUnits('bytes').setMaxAccess("readcreate")
if mibBuilder.loadTexts: tQosIngPolicerMBS.setStatus('current')
tQosIngPolicerHiPrioOnly = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 27, 4, 1, 14), TBurstPercentOrDefault().clone(-1)).setUnits('percent').setMaxAccess("readcreate")
if mibBuilder.loadTexts: tQosIngPolicerHiPrioOnly.setStatus('current')
tQosIngPolicerPktOffset = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 27, 4, 1, 15), TPerPacketOffset()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tQosIngPolicerPktOffset.setStatus('current')
tQosIngPolicerProfileCapped = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 27, 4, 1, 16), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tQosIngPolicerProfileCapped.setStatus('current')
tQosIngPolicerStatMode = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 27, 4, 1, 17), TmnxIngPolicerStatMode().clone('minimal')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tQosIngPolicerStatMode.setStatus('current')
tQosIngPolicerSlopeStartDepth = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 27, 4, 1, 18), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 10000)).clone(10000)).setUnits('hundredths of a percent').setMaxAccess("readcreate")
if mibBuilder.loadTexts: tQosIngPolicerSlopeStartDepth.setStatus('current')
tQosIngPolicerSlopeMaxDepth = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 27, 4, 1, 19), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 10000)).clone(10000)).setUnits('hundredths of a percent').setMaxAccess("readcreate")
if mibBuilder.loadTexts: tQosIngPolicerSlopeMaxDepth.setStatus('current')
tQosIngPolicerSlopeMaxProb = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 27, 4, 1, 20), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 10000)).clone(10000)).setUnits('hundredths of a percent').setMaxAccess("readcreate")
if mibBuilder.loadTexts: tQosIngPolicerSlopeMaxProb.setStatus('current')
tQosIngPolicerSlopeMap = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 27, 4, 1, 21), TmnxSlopeMap().clone('none')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tQosIngPolicerSlopeMap.setStatus('current')
tQosIngPolicerAdvCfgPolicy = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 27, 4, 1, 22), TNamedItemOrEmpty().clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tQosIngPolicerAdvCfgPolicy.setStatus('current')
tQosEgrPolicerTableLastChanged = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 20, 98), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tQosEgrPolicerTableLastChanged.setStatus('current')
tQosEgrPolicerTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 27, 5), )
if mibBuilder.loadTexts: tQosEgrPolicerTable.setStatus('current')
tQosEgrPolicerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 27, 5, 1), ).setIndexNames((0, "TIMETRA-QOS-MIB", "tQosEgrQGroupName"), (0, "TIMETRA-QOS-MIB", "tQosEgrPolicerId"))
if mibBuilder.loadTexts: tQosEgrPolicerEntry.setStatus('current')
tQosEgrPolicerId = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 27, 5, 1, 1), TEgrPolicerId())
if mibBuilder.loadTexts: tQosEgrPolicerId.setStatus('current')
tQosEgrPolicerRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 27, 5, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tQosEgrPolicerRowStatus.setStatus('current')
tQosEgrPolicerLastChanged = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 27, 5, 1, 3), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tQosEgrPolicerLastChanged.setStatus('current')
tQosEgrPolicerDescr = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 27, 5, 1, 4), TItemDescription().clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tQosEgrPolicerDescr.setStatus('current')
tQosEgrPolicerPIRAdaptation = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 27, 5, 1, 5), TAdaptationRule().clone('closest')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tQosEgrPolicerPIRAdaptation.setStatus('current')
tQosEgrPolicerCIRAdaptation = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 27, 5, 1, 6), TAdaptationRule().clone('closest')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tQosEgrPolicerCIRAdaptation.setStatus('current')
tQosEgrPolicerParent = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 27, 5, 1, 7), TNamedItemOrEmpty().clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tQosEgrPolicerParent.setStatus('current')
tQosEgrPolicerLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 27, 5, 1, 8), TLevel().clone(1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tQosEgrPolicerLevel.setStatus('current')
tQosEgrPolicerWeight = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 27, 5, 1, 9), TPolicerWeight().clone(1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tQosEgrPolicerWeight.setStatus('current')
tQosEgrPolicerAdminPIR = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 27, 5, 1, 10), THPolPIRRate().clone(-1)).setUnits('kbps').setMaxAccess("readcreate")
if mibBuilder.loadTexts: tQosEgrPolicerAdminPIR.setStatus('current')
tQosEgrPolicerAdminCIR = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 27, 5, 1, 11), THPolCIRRate()).setUnits('kbps').setMaxAccess("readcreate")
if mibBuilder.loadTexts: tQosEgrPolicerAdminCIR.setStatus('current')
tQosEgrPolicerCBS = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 27, 5, 1, 12), TPlcrBurstSizeBytes().clone(-1)).setUnits('bytes').setMaxAccess("readcreate")
if mibBuilder.loadTexts: tQosEgrPolicerCBS.setStatus('current')
tQosEgrPolicerMBS = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 27, 5, 1, 13), TPlcrBurstSizeBytes().clone(-1)).setUnits('bytes').setMaxAccess("readcreate")
if mibBuilder.loadTexts: tQosEgrPolicerMBS.setStatus('current')
tQosEgrPolicerHiPrioOnly = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 27, 5, 1, 14), TBurstPercentOrDefault().clone(-1)).setUnits('percent').setMaxAccess("readcreate")
if mibBuilder.loadTexts: tQosEgrPolicerHiPrioOnly.setStatus('current')
tQosEgrPolicerPktOffset = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 27, 5, 1, 15), TPerPacketOffset()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tQosEgrPolicerPktOffset.setStatus('current')
tQosEgrPolicerProfileCapped = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 27, 5, 1, 16), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tQosEgrPolicerProfileCapped.setStatus('current')
tQosEgrPolicerStatMode = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 27, 5, 1, 17), TmnxEgrPolicerStatMode().clone('minimal')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tQosEgrPolicerStatMode.setStatus('current')
tQosEgrPolicerSlopeStartDepth = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 27, 5, 1, 18), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 10000)).clone(10000)).setUnits('hundredths of a percent').setMaxAccess("readcreate")
if mibBuilder.loadTexts: tQosEgrPolicerSlopeStartDepth.setStatus('current')
tQosEgrPolicerSlopeMaxDepth = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 27, 5, 1, 20), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 10000)).clone(10000)).setUnits('hundredths of a percent').setMaxAccess("readcreate")
if mibBuilder.loadTexts: tQosEgrPolicerSlopeMaxDepth.setStatus('current')
tQosEgrPolicerSlopeMaxProb = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 27, 5, 1, 21), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 10000)).clone(10000)).setUnits('hundredths of a percent').setMaxAccess("readcreate")
if mibBuilder.loadTexts: tQosEgrPolicerSlopeMaxProb.setStatus('current')
tQosEgrPolicerSlopeMap = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 27, 5, 1, 22), TmnxSlopeMap().clone('none')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tQosEgrPolicerSlopeMap.setStatus('current')
tQosEgrPolicerAdvCfgPolicy = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 27, 5, 1, 23), TNamedItemOrEmpty().clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tQosEgrPolicerAdvCfgPolicy.setStatus('current')
tAdvCfgPolicyTblLastChgd = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 20, 100), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tAdvCfgPolicyTblLastChgd.setStatus('current')
tAdvCfgPolicyTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 27, 6), )
if mibBuilder.loadTexts: tAdvCfgPolicyTable.setStatus('current')
tAdvCfgPolicyEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 27, 6, 1), ).setIndexNames((0, "TIMETRA-QOS-MIB", "tAdvCfgPolicyName"))
if mibBuilder.loadTexts: tAdvCfgPolicyEntry.setStatus('current')
tAdvCfgPolicyName = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 27, 6, 1, 1), TNamedItem())
if mibBuilder.loadTexts: tAdvCfgPolicyName.setStatus('current')
tAdvCfgPolicyRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 27, 6, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tAdvCfgPolicyRowStatus.setStatus('current')
tAdvCfgLastChanged = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 27, 6, 1, 3), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tAdvCfgLastChanged.setStatus('current')
tAdvCfgDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 27, 6, 1, 4), TItemDescription().clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tAdvCfgDescription.setStatus('current')
tAdvCfgChildAdmnPirPrcnt = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 27, 6, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 10000))).setUnits('hundredths of a percent').setMaxAccess("readcreate")
if mibBuilder.loadTexts: tAdvCfgChildAdmnPirPrcnt.setStatus('current')
tAdvCfgChildAdminRate = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 27, 6, 1, 6), TAdvCfgRate()).setUnits('kbps').setMaxAccess("readcreate")
if mibBuilder.loadTexts: tAdvCfgChildAdminRate.setStatus('current')
tAdvCfgOMGranPirPrcnt = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 27, 6, 1, 7), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 10000))).setUnits('hundredths of a percent').setMaxAccess("readcreate")
if mibBuilder.loadTexts: tAdvCfgOMGranPirPrcnt.setStatus('current')
tAdvCfgOMGranRate = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 27, 6, 1, 8), TAdvCfgRate()).setUnits('kbps').setMaxAccess("readcreate")
if mibBuilder.loadTexts: tAdvCfgOMGranRate.setStatus('current')
tAdvCfgMaxDecPirPrcnt = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 27, 6, 1, 9), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 10000)).clone(10000)).setUnits('hundredths of a percent').setMaxAccess("readcreate")
if mibBuilder.loadTexts: tAdvCfgMaxDecPirPrcnt.setStatus('current')
tAdvCfgMaxDecRate = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 27, 6, 1, 10), TMaxDecRate()).setUnits('kbps').setMaxAccess("readcreate")
if mibBuilder.loadTexts: tAdvCfgMaxDecRate.setStatus('current')
tAdvCfgHiRateHoldTime = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 27, 6, 1, 11), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 60))).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: tAdvCfgHiRateHoldTime.setStatus('current')
tAdvCfgTimeAvgFactor = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 27, 6, 1, 12), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 64))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tAdvCfgTimeAvgFactor.setStatus('current')
tAdvCfgSampleInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 27, 6, 1, 13), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 8)).clone(1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tAdvCfgSampleInterval.setStatus('current')
tAdvCfgFastStart = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 27, 6, 1, 14), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tAdvCfgFastStart.setStatus('current')
tAdvCfgFastStop = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 27, 6, 1, 15), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tAdvCfgFastStop.setStatus('current')
tAdvCfgAbvOffCapPirPrcnt = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 27, 6, 1, 16), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 10000)).clone(10000)).setUnits('hundredths of a percent').setMaxAccess("readcreate")
if mibBuilder.loadTexts: tAdvCfgAbvOffCapPirPrcnt.setStatus('current')
tAdvCfgAbvOffCapRate = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 27, 6, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(-1, -1), ValueRangeConstraint(0, 100000000), )).clone(-1)).setUnits('kbps').setMaxAccess("readcreate")
if mibBuilder.loadTexts: tAdvCfgAbvOffCapRate.setStatus('current')
tAdvCfgBWDGranPirPrcnt = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 27, 6, 1, 18), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 10000))).setUnits('hundredths of a percent').setMaxAccess("readcreate")
if mibBuilder.loadTexts: tAdvCfgBWDGranPirPrcnt.setStatus('current')
tAdvCfgBWDGranRate = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 27, 6, 1, 19), TAdvCfgRate()).setUnits('kbps').setMaxAccess("readcreate")
if mibBuilder.loadTexts: tAdvCfgBWDGranRate.setStatus('current')
tAdvCfgMinOnly = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 27, 6, 1, 20), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tAdvCfgMinOnly.setStatus('current')
tAdvCfgDecOnly = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 27, 6, 1, 21), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tAdvCfgDecOnly.setStatus('current')
tPortSchPlcyGrpTblLastChgd = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 20, 91), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tPortSchPlcyGrpTblLastChgd.setStatus('current')
tPortSchPlcyGrpTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 12, 5), )
if mibBuilder.loadTexts: tPortSchPlcyGrpTable.setStatus('current')
tPortSchPlcyGrpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 12, 5, 1), ).setIndexNames((0, "TIMETRA-QOS-MIB", "tPortSchedulerPlcyName"), (0, "TIMETRA-QOS-MIB", "tPortSchPlcyGrpName"))
if mibBuilder.loadTexts: tPortSchPlcyGrpEntry.setStatus('current')
tPortSchPlcyGrpName = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 12, 5, 1, 1), TNamedItem())
if mibBuilder.loadTexts: tPortSchPlcyGrpName.setStatus('current')
tPortSchPlcyGrpRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 12, 5, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tPortSchPlcyGrpRowStatus.setStatus('current')
tPortSchPlcyGrpLastChanged = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 12, 5, 1, 3), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tPortSchPlcyGrpLastChanged.setStatus('current')
tPortSchPlcyGrpAdminPIR = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 12, 5, 1, 4), TPortSchedulerPIRRate().clone(-1)).setUnits('kbps').setMaxAccess("readcreate")
if mibBuilder.loadTexts: tPortSchPlcyGrpAdminPIR.setStatus('current')
tPortSchPlcyGrpAdminCIR = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 12, 5, 1, 5), TPortSchedulerCIR().clone(-1)).setUnits('kbps').setMaxAccess("readcreate")
if mibBuilder.loadTexts: tPortSchPlcyGrpAdminCIR.setStatus('current')
tPortSchPlcyLvlGrpTblLastChgd = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 20, 92), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tPortSchPlcyLvlGrpTblLastChgd.setStatus('current')
tPortSchPlcyLvlGrpTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 12, 6), )
if mibBuilder.loadTexts: tPortSchPlcyLvlGrpTable.setStatus('current')
tPortSchPlcyLvlGrpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 12, 6, 1), )
tPortSchedulerPlcyEntry.registerAugmentions(("TIMETRA-QOS-MIB", "tPortSchPlcyLvlGrpEntry"))
tPortSchPlcyLvlGrpEntry.setIndexNames(*tPortSchedulerPlcyEntry.getIndexNames())
if mibBuilder.loadTexts: tPortSchPlcyLvlGrpEntry.setStatus('current')
tPortSchPlcyLvlGrpLastChanged = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 12, 6, 1, 1), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tPortSchPlcyLvlGrpLastChanged.setStatus('current')
tPortSchPlcyLvl1GrpName = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 12, 6, 1, 2), TNamedItemOrEmpty().clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tPortSchPlcyLvl1GrpName.setStatus('current')
tPortSchPlcyLvl2GrpName = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 12, 6, 1, 3), TNamedItemOrEmpty().clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tPortSchPlcyLvl2GrpName.setStatus('current')
tPortSchPlcyLvl3GrpName = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 12, 6, 1, 4), TNamedItemOrEmpty().clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tPortSchPlcyLvl3GrpName.setStatus('current')
tPortSchPlcyLvl4GrpName = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 12, 6, 1, 5), TNamedItemOrEmpty().clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tPortSchPlcyLvl4GrpName.setStatus('current')
tPortSchPlcyLvl5GrpName = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 12, 6, 1, 6), TNamedItemOrEmpty().clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tPortSchPlcyLvl5GrpName.setStatus('current')
tPortSchPlcyLvl6GrpName = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 12, 6, 1, 7), TNamedItemOrEmpty().clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tPortSchPlcyLvl6GrpName.setStatus('current')
tPortSchPlcyLvl7GrpName = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 12, 6, 1, 8), TNamedItemOrEmpty().clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tPortSchPlcyLvl7GrpName.setStatus('current')
tPortSchPlcyLvl8GrpName = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 12, 6, 1, 9), TNamedItemOrEmpty().clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tPortSchPlcyLvl8GrpName.setStatus('current')
tPortSchPlcyLvl1GrpWeight = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 12, 6, 1, 10), TNonZeroWeight().clone(1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tPortSchPlcyLvl1GrpWeight.setStatus('current')
tPortSchPlcyLvl2GrpWeight = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 12, 6, 1, 11), TNonZeroWeight().clone(1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tPortSchPlcyLvl2GrpWeight.setStatus('current')
tPortSchPlcyLvl3GrpWeight = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 12, 6, 1, 12), TNonZeroWeight().clone(1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tPortSchPlcyLvl3GrpWeight.setStatus('current')
tPortSchPlcyLvl4GrpWeight = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 12, 6, 1, 13), TNonZeroWeight().clone(1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tPortSchPlcyLvl4GrpWeight.setStatus('current')
tPortSchPlcyLvl5GrpWeight = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 12, 6, 1, 14), TNonZeroWeight().clone(1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tPortSchPlcyLvl5GrpWeight.setStatus('current')
tPortSchPlcyLvl6GrpWeight = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 12, 6, 1, 15), TNonZeroWeight().clone(1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tPortSchPlcyLvl6GrpWeight.setStatus('current')
tPortSchPlcyLvl7GrpWeight = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 12, 6, 1, 16), TNonZeroWeight().clone(1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tPortSchPlcyLvl7GrpWeight.setStatus('current')
tPortSchPlcyLvl8GrpWeight = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 12, 6, 1, 17), TNonZeroWeight().clone(1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tPortSchPlcyLvl8GrpWeight.setStatus('current')
tHsmdaWrrPolicyTblLastChgd = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 20, 93), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tHsmdaWrrPolicyTblLastChgd.setStatus('current')
tHsmdaWrrPolicyTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 28, 1), )
if mibBuilder.loadTexts: tHsmdaWrrPolicyTable.setStatus('current')
tHsmdaWrrPolicyEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 28, 1, 1), ).setIndexNames((0, "TIMETRA-QOS-MIB", "tHsmdaWrrPolicyName"))
if mibBuilder.loadTexts: tHsmdaWrrPolicyEntry.setStatus('current')
tHsmdaWrrPolicyName = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 28, 1, 1, 1), TNamedItem())
if mibBuilder.loadTexts: tHsmdaWrrPolicyName.setStatus('current')
tHsmdaWrrPolicyRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 28, 1, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tHsmdaWrrPolicyRowStatus.setStatus('current')
tHsmdaWrrPolicyLastChanged = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 28, 1, 1, 3), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tHsmdaWrrPolicyLastChanged.setStatus('current')
tHsmdaWrrPolicyDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 28, 1, 1, 4), TItemDescription()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tHsmdaWrrPolicyDescription.setStatus('current')
tHsmdaWrrPolicyIncludeQueues = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 28, 1, 1, 5), THsmdaPolicyIncludeQueues().clone('q1to2')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tHsmdaWrrPolicyIncludeQueues.setStatus('current')
tHsmdaWrrPolicySchedUsingClass = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 28, 1, 1, 6), THsmdaPolicyScheduleClass().clone(1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tHsmdaWrrPolicySchedUsingClass.setStatus('current')
tHsmdaWrrPolicyAggWeightAtClass = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 28, 1, 1, 7), THsmdaWeightClass().clone('class1')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tHsmdaWrrPolicyAggWeightAtClass.setStatus('current')
tNetworkIngressFCTableLstChanged = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 20, 101), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tNetworkIngressFCTableLstChanged.setStatus('current')
tNetworkIngressFCTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 5, 8), )
if mibBuilder.loadTexts: tNetworkIngressFCTable.setStatus('current')
tNetworkIngressFCEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 5, 8, 1), ).setIndexNames((0, "TIMETRA-QOS-MIB", "tNetworkPolicyIndex"), (0, "TIMETRA-QOS-MIB", "tNetworkIngressFCName"))
if mibBuilder.loadTexts: tNetworkIngressFCEntry.setStatus('current')
tNetworkIngressFCName = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 5, 8, 1, 1), TFCName())
if mibBuilder.loadTexts: tNetworkIngressFCName.setStatus('current')
tNetworkIngressFCLastChanged = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 5, 8, 1, 2), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tNetworkIngressFCLastChanged.setStatus('current')
tNetworkIngressFCMultiCastPlcr = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 5, 8, 1, 3), TIngPolicerIdOrNone()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tNetworkIngressFCMultiCastPlcr.setStatus('current')
tNetworkIngressFCUniCastPlcr = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 5, 8, 1, 4), TIngPolicerIdOrNone()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tNetworkIngressFCUniCastPlcr.setStatus('current')
tNetworkEgrDSCPTableLastChanged = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 20, 102), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tNetworkEgrDSCPTableLastChanged.setStatus('current')
tNetworkEgressDSCPTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 5, 9), )
if mibBuilder.loadTexts: tNetworkEgressDSCPTable.setStatus('current')
tNetworkEgressDSCPEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 5, 9, 1), ).setIndexNames((0, "TIMETRA-QOS-MIB", "tNetworkPolicyIndex"), (0, "TIMETRA-QOS-MIB", "tNetworkEgressDSCP"))
if mibBuilder.loadTexts: tNetworkEgressDSCPEntry.setStatus('current')
tNetworkEgressDSCP = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 5, 9, 1, 1), TDSCPName())
if mibBuilder.loadTexts: tNetworkEgressDSCP.setStatus('current')
tNetworkEgressDSCPRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 5, 9, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tNetworkEgressDSCPRowStatus.setStatus('current')
tNetworkEgressDSCPLastChanged = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 5, 9, 1, 3), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tNetworkEgressDSCPLastChanged.setStatus('current')
tNetworkEgressDSCPFC = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 5, 9, 1, 4), TFCName().clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tNetworkEgressDSCPFC.setStatus('current')
tNetworkEgressDSCPProfile = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 5, 9, 1, 5), TProfile()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tNetworkEgressDSCPProfile.setStatus('current')
tNetworkEgrPrecTableLastChanged = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 20, 103), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tNetworkEgrPrecTableLastChanged.setStatus('current')
tNetworkEgressPrecTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 5, 10), )
if mibBuilder.loadTexts: tNetworkEgressPrecTable.setStatus('current')
tNetworkEgressPrecEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 5, 10, 1), ).setIndexNames((0, "TIMETRA-QOS-MIB", "tNetworkPolicyIndex"), (0, "TIMETRA-QOS-MIB", "tNetworkEgressPrecValue"))
if mibBuilder.loadTexts: tNetworkEgressPrecEntry.setStatus('current')
tNetworkEgressPrecValue = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 5, 10, 1, 1), TPrecValue())
if mibBuilder.loadTexts: tNetworkEgressPrecValue.setStatus('current')
tNetworkEgressPrecRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 5, 10, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tNetworkEgressPrecRowStatus.setStatus('current')
tNetworkEgressPrecLastChanged = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 5, 10, 1, 3), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tNetworkEgressPrecLastChanged.setStatus('current')
tNetworkEgressPrecFC = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 5, 10, 1, 4), TFCName().clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tNetworkEgressPrecFC.setStatus('current')
tNetworkEgressPrecProfile = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 16, 5, 10, 1, 5), TProfile()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tNetworkEgressPrecProfile.setStatus('current')
tmnxQosCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 16, 1))
tmnxQosGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 16, 2))
tmnxQos7450V4v0Compliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 16, 1, 4)).setObjects(("TIMETRA-QOS-MIB", "tmnxQosGlobalGroup"), ("TIMETRA-QOS-MIB", "tmnxQosDSCPGroup"), ("TIMETRA-QOS-MIB", "tmnxQosFCGroup"), ("TIMETRA-QOS-MIB", "tmnxQosSapIngressV4v0Group"), ("TIMETRA-QOS-MIB", "tmnxQosSapEgressR2r1Group"), ("TIMETRA-QOS-MIB", "tmnxQosNetworkR2r1Group"), ("TIMETRA-QOS-MIB", "tmnxQosSlopeGroup"), ("TIMETRA-QOS-MIB", "tmnxQosSchedulerGroup"), ("TIMETRA-QOS-MIB", "tmnxQosQueueV4v0Group"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxQos7450V4v0Compliance = tmnxQos7450V4v0Compliance.setStatus('obsolete')
tmnxQos7750V4v0Compliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 16, 1, 5)).setObjects(("TIMETRA-QOS-MIB", "tmnxQosGlobalGroup"), ("TIMETRA-QOS-MIB", "tmnxQosDSCPGroup"), ("TIMETRA-QOS-MIB", "tmnxQosFCGroup"), ("TIMETRA-QOS-MIB", "tmnxQosSapIngressV4v0Group"), ("TIMETRA-QOS-MIB", "tmnxQosSapEgressR2r1Group"), ("TIMETRA-QOS-MIB", "tmnxQosNetworkR2r1Group"), ("TIMETRA-QOS-MIB", "tmnxQosSlopeGroup"), ("TIMETRA-QOS-MIB", "tmnxQosSchedulerGroup"), ("TIMETRA-QOS-MIB", "tmnxQosAtmTdpV3v0Group"), ("TIMETRA-QOS-MIB", "tmnxQosQueueV4v0Group"), ("TIMETRA-QOS-MIB", "tmnxQosSapIpv6FilterR4r0Group"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxQos7750V4v0Compliance = tmnxQos7750V4v0Compliance.setStatus('obsolete')
tmnxQos7450V5v0Compliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 16, 1, 6)).setObjects(("TIMETRA-QOS-MIB", "tmnxQosGlobalGroup"), ("TIMETRA-QOS-MIB", "tmnxQosDSCPGroup"), ("TIMETRA-QOS-MIB", "tmnxQosFCGroup"), ("TIMETRA-QOS-MIB", "tmnxQosSapIngressV4v0Group"), ("TIMETRA-QOS-MIB", "tmnxQosSapEgressV5v0Group"), ("TIMETRA-QOS-MIB", "tmnxQosNetworkV5v0Group"), ("TIMETRA-QOS-MIB", "tmnxQosSlopeGroup"), ("TIMETRA-QOS-MIB", "tmnxQosSchedulerV5v0Group"), ("TIMETRA-QOS-MIB", "tmnxQosQueueV4v0Group"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxQos7450V5v0Compliance = tmnxQos7450V5v0Compliance.setStatus('obsolete')
tmnxQos7750V5v0Compliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 16, 1, 7)).setObjects(("TIMETRA-QOS-MIB", "tmnxQosGlobalGroup"), ("TIMETRA-QOS-MIB", "tmnxQosDSCPGroup"), ("TIMETRA-QOS-MIB", "tmnxQosFCGroup"), ("TIMETRA-QOS-MIB", "tmnxQosSapIngressV4v0Group"), ("TIMETRA-QOS-MIB", "tmnxQosSapEgressV5v0Group"), ("TIMETRA-QOS-MIB", "tmnxQosNetworkV5v0Group"), ("TIMETRA-QOS-MIB", "tmnxQosSlopeGroup"), ("TIMETRA-QOS-MIB", "tmnxQosSchedulerV5v0Group"), ("TIMETRA-QOS-MIB", "tmnxQosAtmTdpV5v0Group"), ("TIMETRA-QOS-MIB", "tmnxQosQueueV4v0Group"), ("TIMETRA-QOS-MIB", "tmnxQosSapIpv6FilterR4r0Group"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxQos7750V5v0Compliance = tmnxQos7750V5v0Compliance.setStatus('obsolete')
tmnxQos7450V6v0Compliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 16, 1, 8)).setObjects(("TIMETRA-QOS-MIB", "tmnxQosGlobalGroup"), ("TIMETRA-QOS-MIB", "tmnxQosDSCPGroup"), ("TIMETRA-QOS-MIB", "tmnxQosFCGroup"), ("TIMETRA-QOS-MIB", "tmnxQosSapIngressV6v0Group"), ("TIMETRA-QOS-MIB", "tmnxQosSapEgressV6v0Group"), ("TIMETRA-QOS-MIB", "tmnxQosNetworkV6v0Group"), ("TIMETRA-QOS-MIB", "tmnxQosSlopeGroup"), ("TIMETRA-QOS-MIB", "tmnxQosSchedulerV5v0Group"), ("TIMETRA-QOS-MIB", "tmnxQosQueueV4v0Group"), ("TIMETRA-QOS-MIB", "tmnxQosHsmdaV6v0Group"), ("TIMETRA-QOS-MIB", "tmnxQosFrameBasedV6v0Group"), ("TIMETRA-QOS-MIB", "tmnxQosNamedPoolPolicyV6v0Group"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxQos7450V6v0Compliance = tmnxQos7450V6v0Compliance.setStatus('obsolete')
tmnxQos7750V6v0Compliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 16, 1, 9)).setObjects(("TIMETRA-QOS-MIB", "tmnxQosGlobalGroup"), ("TIMETRA-QOS-MIB", "tmnxQosDSCPGroup"), ("TIMETRA-QOS-MIB", "tmnxQosFCGroup"), ("TIMETRA-QOS-MIB", "tmnxQosSapIngressV6v0Group"), ("TIMETRA-QOS-MIB", "tmnxQosSapEgressV6v0Group"), ("TIMETRA-QOS-MIB", "tmnxQosNetworkV6v0Group"), ("TIMETRA-QOS-MIB", "tmnxQosSlopeGroup"), ("TIMETRA-QOS-MIB", "tmnxQosSchedulerV5v0Group"), ("TIMETRA-QOS-MIB", "tmnxQosAtmTdpV5v0Group"), ("TIMETRA-QOS-MIB", "tmnxQosQueueV4v0Group"), ("TIMETRA-QOS-MIB", "tmnxQosSapIpv6FilterR4r0Group"), ("TIMETRA-QOS-MIB", "tmnxQosHsmdaV6v0Group"), ("TIMETRA-QOS-MIB", "tmnxQosFrameBasedV6v0Group"), ("TIMETRA-QOS-MIB", "tmnxQosNamedPoolPolicyV6v0Group"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxQos7750V6v0Compliance = tmnxQos7750V6v0Compliance.setStatus('obsolete')
tmnxQos7450V6v1Compliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 16, 1, 10)).setObjects(("TIMETRA-QOS-MIB", "tmnxQosGlobalGroup"), ("TIMETRA-QOS-MIB", "tmnxQosDSCPGroup"), ("TIMETRA-QOS-MIB", "tmnxQosFCGroup"), ("TIMETRA-QOS-MIB", "tmnxQosSapIngressV6v0Group"), ("TIMETRA-QOS-MIB", "tmnxQosSapEgressV6v0Group"), ("TIMETRA-QOS-MIB", "tmnxQosNetworkV6v0Group"), ("TIMETRA-QOS-MIB", "tmnxQosSlopeGroup"), ("TIMETRA-QOS-MIB", "tmnxQosSchedulerV5v0Group"), ("TIMETRA-QOS-MIB", "tmnxQosQueueV4v0Group"), ("TIMETRA-QOS-MIB", "tmnxQosHsmdaV6v0Group"), ("TIMETRA-QOS-MIB", "tmnxQosFrameBasedV6v0Group"), ("TIMETRA-QOS-MIB", "tmnxQosNamedPoolPolicyV6v0Group"), ("TIMETRA-QOS-MIB", "tmnxQosMcMlpppIngrGroup"), ("TIMETRA-QOS-MIB", "tmnxQosMcMlpppEgrGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxQos7450V6v1Compliance = tmnxQos7450V6v1Compliance.setStatus('obsolete')
tmnxQos77x0V6v1Compliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 16, 1, 11)).setObjects(("TIMETRA-QOS-MIB", "tmnxQosGlobalGroup"), ("TIMETRA-QOS-MIB", "tmnxQosDSCPGroup"), ("TIMETRA-QOS-MIB", "tmnxQosFCGroup"), ("TIMETRA-QOS-MIB", "tmnxQosSapIngressV6v0Group"), ("TIMETRA-QOS-MIB", "tmnxQosSapEgressV6v0Group"), ("TIMETRA-QOS-MIB", "tmnxQosNetworkV6v0Group"), ("TIMETRA-QOS-MIB", "tmnxQosSlopeGroup"), ("TIMETRA-QOS-MIB", "tmnxQosSchedulerV5v0Group"), ("TIMETRA-QOS-MIB", "tmnxQosAtmTdpV5v0Group"), ("TIMETRA-QOS-MIB", "tmnxQosQueueV4v0Group"), ("TIMETRA-QOS-MIB", "tmnxQosSapIpv6FilterR4r0Group"), ("TIMETRA-QOS-MIB", "tmnxQosHsmdaV6v0Group"), ("TIMETRA-QOS-MIB", "tmnxQosFrameBasedV6v0Group"), ("TIMETRA-QOS-MIB", "tmnxQosNamedPoolPolicyV6v0Group"), ("TIMETRA-QOS-MIB", "tmnxQosMcMlpppIngrGroup"), ("TIMETRA-QOS-MIB", "tmnxQosMcMlpppEgrGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxQos77x0V6v1Compliance = tmnxQos77x0V6v1Compliance.setStatus('obsolete')
tmnxQos7450V7v0Compliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 16, 1, 12)).setObjects(("TIMETRA-QOS-MIB", "tmnxQosGlobalGroup"), ("TIMETRA-QOS-MIB", "tmnxQosDSCPGroup"), ("TIMETRA-QOS-MIB", "tmnxQosFCGroup"), ("TIMETRA-QOS-MIB", "tmnxQosSapIngressV6v0Group"), ("TIMETRA-QOS-MIB", "tmnxQosSapEgressV6v0Group"), ("TIMETRA-QOS-MIB", "tmnxQosNetworkV7v0Group"), ("TIMETRA-QOS-MIB", "tmnxQosSlopeGroup"), ("TIMETRA-QOS-MIB", "tmnxQosSchedulerV5v0Group"), ("TIMETRA-QOS-MIB", "tmnxQosQueueV4v0Group"), ("TIMETRA-QOS-MIB", "tmnxQosHsmdaV7v0Group"), ("TIMETRA-QOS-MIB", "tmnxQosFrameBasedV6v0Group"), ("TIMETRA-QOS-MIB", "tmnxQosNamedPoolPolicyV6v0Group"), ("TIMETRA-QOS-MIB", "tmnxQosMcMlpppIngrGroup"), ("TIMETRA-QOS-MIB", "tmnxQosMcMlpppEgrGroup"), ("TIMETRA-QOS-MIB", "tmnxQosQueueObjGroup"), ("TIMETRA-QOS-MIB", "tQosQGrpFCGroup"), ("TIMETRA-QOS-MIB", "tmnxQosSapAtmV7v0Group"), ("TIMETRA-QOS-MIB", "tmnxQosSapEgrQWredGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxQos7450V7v0Compliance = tmnxQos7450V7v0Compliance.setStatus('obsolete')
tmnxQos77x0V7v0Compliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 16, 1, 13)).setObjects(("TIMETRA-QOS-MIB", "tmnxQosGlobalGroup"), ("TIMETRA-QOS-MIB", "tmnxQosDSCPGroup"), ("TIMETRA-QOS-MIB", "tmnxQosFCGroup"), ("TIMETRA-QOS-MIB", "tmnxQosSapIngressV6v0Group"), ("TIMETRA-QOS-MIB", "tmnxQosSapEgressV6v0Group"), ("TIMETRA-QOS-MIB", "tmnxQosNetworkV7v0Group"), ("TIMETRA-QOS-MIB", "tmnxQosSlopeGroup"), ("TIMETRA-QOS-MIB", "tmnxQosSchedulerV5v0Group"), ("TIMETRA-QOS-MIB", "tmnxQosAtmTdpV5v0Group"), ("TIMETRA-QOS-MIB", "tmnxQosQueueV4v0Group"), ("TIMETRA-QOS-MIB", "tmnxQosSapIpv6FilterR4r0Group"), ("TIMETRA-QOS-MIB", "tmnxQosHsmdaV7v0Group"), ("TIMETRA-QOS-MIB", "tmnxQosFrameBasedV6v0Group"), ("TIMETRA-QOS-MIB", "tmnxQosNamedPoolPolicyV6v0Group"), ("TIMETRA-QOS-MIB", "tmnxQosMcMlpppIngrGroup"), ("TIMETRA-QOS-MIB", "tmnxQosMcMlpppEgrGroup"), ("TIMETRA-QOS-MIB", "tmnxQosQueueObjGroup"), ("TIMETRA-QOS-MIB", "tQosQGrpFCGroup"), ("TIMETRA-QOS-MIB", "tmnxQosSapAtmV7v0Group"), ("TIMETRA-QOS-MIB", "tmnxQosMcFrIngrGroup"), ("TIMETRA-QOS-MIB", "tmnxQosMcFrEgrGroup"), ("TIMETRA-QOS-MIB", "tmnxQosSapEgrQWredGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxQos77x0V7v0Compliance = tmnxQos77x0V7v0Compliance.setStatus('obsolete')
tmnxQos7450V8v0Compliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 16, 1, 14)).setObjects(("TIMETRA-QOS-MIB", "tmnxQosGlobalGroup"), ("TIMETRA-QOS-MIB", "tmnxQosDSCPGroup"), ("TIMETRA-QOS-MIB", "tmnxQosFCGroup"), ("TIMETRA-QOS-MIB", "tmnxQosSapIngressV8v0Group"), ("TIMETRA-QOS-MIB", "tmnxQosSapEgressV8v0Group"), ("TIMETRA-QOS-MIB", "tmnxQosNetworkV7v0Group"), ("TIMETRA-QOS-MIB", "tmnxQosSlopeGroup"), ("TIMETRA-QOS-MIB", "tmnxQosSchedulerV5v0Group"), ("TIMETRA-QOS-MIB", "tmnxQosQueueV4v0Group"), ("TIMETRA-QOS-MIB", "tmnxQosHsmdaV7v0Group"), ("TIMETRA-QOS-MIB", "tmnxQosFrameBasedV6v0Group"), ("TIMETRA-QOS-MIB", "tmnxQosNamedPoolPolicyV6v0Group"), ("TIMETRA-QOS-MIB", "tmnxQosMcMlpppIngrGroup"), ("TIMETRA-QOS-MIB", "tmnxQosMcMlpppEgrGroup"), ("TIMETRA-QOS-MIB", "tmnxQosQueueObjV8v0Group"), ("TIMETRA-QOS-MIB", "tQosQGrpFCGroup"), ("TIMETRA-QOS-MIB", "tmnxQosSapAtmV7v0Group"), ("TIMETRA-QOS-MIB", "tmnxQosSapEgrQWredGroup"), ("TIMETRA-QOS-MIB", "tmnxQosPolicerV8v0Group"), ("TIMETRA-QOS-MIB", "tmnxQosPortSchPlcyGrpGroup"), ("TIMETRA-QOS-MIB", "tmnxQosBurstLimitGroup"), ("TIMETRA-QOS-MIB", "tQosFCQGrpFC8v0Group"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxQos7450V8v0Compliance = tmnxQos7450V8v0Compliance.setStatus('obsolete')
tmnxQos77x0V8v0Compliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 16, 1, 15)).setObjects(("TIMETRA-QOS-MIB", "tmnxQosGlobalGroup"), ("TIMETRA-QOS-MIB", "tmnxQosDSCPGroup"), ("TIMETRA-QOS-MIB", "tmnxQosFCGroup"), ("TIMETRA-QOS-MIB", "tmnxQosSapIngressV8v0Group"), ("TIMETRA-QOS-MIB", "tmnxQosSapEgressV8v0Group"), ("TIMETRA-QOS-MIB", "tmnxQosNetworkV7v0Group"), ("TIMETRA-QOS-MIB", "tmnxQosSlopeGroup"), ("TIMETRA-QOS-MIB", "tmnxQosSchedulerV5v0Group"), ("TIMETRA-QOS-MIB", "tmnxQosAtmTdpV5v0Group"), ("TIMETRA-QOS-MIB", "tmnxQosQueueV4v0Group"), ("TIMETRA-QOS-MIB", "tmnxQosSapIpv6FilterR4r0Group"), ("TIMETRA-QOS-MIB", "tmnxQosHsmdaV7v0Group"), ("TIMETRA-QOS-MIB", "tmnxQosFrameBasedV6v0Group"), ("TIMETRA-QOS-MIB", "tmnxQosNamedPoolPolicyV6v0Group"), ("TIMETRA-QOS-MIB", "tmnxQosMcMlpppIngrGroup"), ("TIMETRA-QOS-MIB", "tmnxQosMcMlpppEgrGroup"), ("TIMETRA-QOS-MIB", "tmnxQosQueueObjV8v0Group"), ("TIMETRA-QOS-MIB", "tQosQGrpFCGroup"), ("TIMETRA-QOS-MIB", "tmnxQosSapAtmV7v0Group"), ("TIMETRA-QOS-MIB", "tmnxQosMcFrIngrGroup"), ("TIMETRA-QOS-MIB", "tmnxQosMcFrEgrGroup"), ("TIMETRA-QOS-MIB", "tmnxQosSapEgrQWredGroup"), ("TIMETRA-QOS-MIB", "tmnxQosPolicerV8v0Group"), ("TIMETRA-QOS-MIB", "tQosQGrpV8v0Group"), ("TIMETRA-QOS-MIB", "tmnxQosPortSchPlcyGrpGroup"), ("TIMETRA-QOS-MIB", "tmnxQosBurstLimitGroup"), ("TIMETRA-QOS-MIB", "tQosFCQGrpFC8v0Group"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxQos77x0V8v0Compliance = tmnxQos77x0V8v0Compliance.setStatus('obsolete')
tmnxQos77x0V9v0Compliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 16, 1, 16)).setObjects(("TIMETRA-QOS-MIB", "tmnxQosGlobalGroup"), ("TIMETRA-QOS-MIB", "tmnxQosDSCPGroup"), ("TIMETRA-QOS-MIB", "tmnxQosFCGroup"), ("TIMETRA-QOS-MIB", "tmnxQosSapIngressV8v0Group"), ("TIMETRA-QOS-MIB", "tmnxQosSapEgressV8v0Group"), ("TIMETRA-QOS-MIB", "tmnxQosNetworkV7v0Group"), ("TIMETRA-QOS-MIB", "tmnxQosNetworkV9v0Group"), ("TIMETRA-QOS-MIB", "tmnxQosSlopeGroup"), ("TIMETRA-QOS-MIB", "tmnxQosSchedulerV8v0Group"), ("TIMETRA-QOS-MIB", "tmnxQosAtmTdpV5v0Group"), ("TIMETRA-QOS-MIB", "tmnxQosAtmTdpV9v0Group"), ("TIMETRA-QOS-MIB", "tmnxQosQueueV4v0Group"), ("TIMETRA-QOS-MIB", "tmnxQosSapIpv6FilterR4r0Group"), ("TIMETRA-QOS-MIB", "tmnxQosHsmdaV7v0Group"), ("TIMETRA-QOS-MIB", "tmnxQosHsmdaV9v0Group"), ("TIMETRA-QOS-MIB", "tmnxQosFrameBasedV6v0Group"), ("TIMETRA-QOS-MIB", "tmnxQosNamedPoolPolicyV6v0Group"), ("TIMETRA-QOS-MIB", "tmnxQosMcMlpppIngrGroup"), ("TIMETRA-QOS-MIB", "tmnxQosMcMlpppEgrGroup"), ("TIMETRA-QOS-MIB", "tmnxQosQueueObjV8v0Group"), ("TIMETRA-QOS-MIB", "tQosQGrpFCGroup"), ("TIMETRA-QOS-MIB", "tmnxQosSapAtmV7v0Group"), ("TIMETRA-QOS-MIB", "tmnxQosMcFrIngrGroup"), ("TIMETRA-QOS-MIB", "tmnxQosMcFrEgrGroup"), ("TIMETRA-QOS-MIB", "tmnxQosSapEgrQWredGroup"), ("TIMETRA-QOS-MIB", "tmnxQosPolicerV8v0Group"), ("TIMETRA-QOS-MIB", "tmnxQosPolicerV9v0Group"), ("TIMETRA-QOS-MIB", "tQosQGrpV8v0Group"), ("TIMETRA-QOS-MIB", "tmnxQosPortSchPlcyGrpGroup"), ("TIMETRA-QOS-MIB", "tmnxQosBurstLimitGroup"), ("TIMETRA-QOS-MIB", "tmnxQosMacCritVidFltrV9v0Group"), ("TIMETRA-QOS-MIB", "tmnxQosSapEgressV9v0Group"), ("TIMETRA-QOS-MIB", "tmnxQosSapIngressV9v0Group"), ("TIMETRA-QOS-MIB", "tmnxQosNamedPoolV9v0Group"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxQos77x0V9v0Compliance = tmnxQos77x0V9v0Compliance.setStatus('obsolete')
tmnxQos7450V10v0Compliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 16, 1, 17)).setObjects(("TIMETRA-QOS-MIB", "tmnxQosGlobalGroup"), ("TIMETRA-QOS-MIB", "tmnxQosDSCPGroup"), ("TIMETRA-QOS-MIB", "tmnxQosFCGroup"), ("TIMETRA-QOS-MIB", "tmnxQosSapIngressV10v0Group"), ("TIMETRA-QOS-MIB", "tmnxQosSapEgressV8v0Group"), ("TIMETRA-QOS-MIB", "tmnxQosNetworkV7v0Group"), ("TIMETRA-QOS-MIB", "tmnxQosSlopeGroup"), ("TIMETRA-QOS-MIB", "tmnxQosSchedulerV5v0Group"), ("TIMETRA-QOS-MIB", "tmnxQosQueueV4v0Group"), ("TIMETRA-QOS-MIB", "tmnxQosHsmdaV10v0Group"), ("TIMETRA-QOS-MIB", "tmnxQosFrameBasedV6v0Group"), ("TIMETRA-QOS-MIB", "tmnxQosNamedPoolPolicyV6v0Group"), ("TIMETRA-QOS-MIB", "tmnxQosMcMlpppIngrGroup"), ("TIMETRA-QOS-MIB", "tmnxQosMcMlpppEgrGroup"), ("TIMETRA-QOS-MIB", "tmnxQosQueueObjV8v0Group"), ("TIMETRA-QOS-MIB", "tQosQGrpFCGroup"), ("TIMETRA-QOS-MIB", "tmnxQosSapAtmV7v0Group"), ("TIMETRA-QOS-MIB", "tmnxQosSapEgrQWredGroup"), ("TIMETRA-QOS-MIB", "tmnxQosPolicerV8v0Group"), ("TIMETRA-QOS-MIB", "tmnxQosPortSchPlcyGrpGroup"), ("TIMETRA-QOS-MIB", "tmnxQosBurstLimitGroup"), ("TIMETRA-QOS-MIB", "tQosFCQGrpFC8v0Group"), ("TIMETRA-QOS-MIB", "tmnxQosPolicyV10v0Group"), ("TIMETRA-QOS-MIB", "tmnxQosPolicerSlopeGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxQos7450V10v0Compliance = tmnxQos7450V10v0Compliance.setStatus('current')
tmnxQos77x0V10v0Compliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 16, 1, 18)).setObjects(("TIMETRA-QOS-MIB", "tmnxQosGlobalGroup"), ("TIMETRA-QOS-MIB", "tmnxQosDSCPGroup"), ("TIMETRA-QOS-MIB", "tmnxQosFCGroup"), ("TIMETRA-QOS-MIB", "tmnxQosSapIngressV10v0Group"), ("TIMETRA-QOS-MIB", "tmnxQosSapEgressV8v0Group"), ("TIMETRA-QOS-MIB", "tmnxQosNetworkV7v0Group"), ("TIMETRA-QOS-MIB", "tmnxQosNetworkV9v0Group"), ("TIMETRA-QOS-MIB", "tmnxQosSlopeGroup"), ("TIMETRA-QOS-MIB", "tmnxQosSchedulerV8v0Group"), ("TIMETRA-QOS-MIB", "tmnxQosAtmTdpV5v0Group"), ("TIMETRA-QOS-MIB", "tmnxQosAtmTdpV9v0Group"), ("TIMETRA-QOS-MIB", "tmnxQosQueueV4v0Group"), ("TIMETRA-QOS-MIB", "tmnxQosSapIpv6FilterR4r0Group"), ("TIMETRA-QOS-MIB", "tmnxQosHsmdaV10v0Group"), ("TIMETRA-QOS-MIB", "tmnxQosHsmdaV9v0Group"), ("TIMETRA-QOS-MIB", "tmnxQosFrameBasedV6v0Group"), ("TIMETRA-QOS-MIB", "tmnxQosNamedPoolPolicyV6v0Group"), ("TIMETRA-QOS-MIB", "tmnxQosMcMlpppIngrGroup"), ("TIMETRA-QOS-MIB", "tmnxQosMcMlpppEgrGroup"), ("TIMETRA-QOS-MIB", "tmnxQosQueueObjV8v0Group"), ("TIMETRA-QOS-MIB", "tQosQGrpFCGroup"), ("TIMETRA-QOS-MIB", "tmnxQosSapAtmV7v0Group"), ("TIMETRA-QOS-MIB", "tmnxQosMcFrIngrGroup"), ("TIMETRA-QOS-MIB", "tmnxQosMcFrEgrGroup"), ("TIMETRA-QOS-MIB", "tmnxQosSapEgrQWredGroup"), ("TIMETRA-QOS-MIB", "tmnxQosPolicerV8v0Group"), ("TIMETRA-QOS-MIB", "tmnxQosPolicerV9v0Group"), ("TIMETRA-QOS-MIB", "tQosQGrpV8v0Group"), ("TIMETRA-QOS-MIB", "tmnxQosPortSchPlcyGrpGroup"), ("TIMETRA-QOS-MIB", "tmnxQosBurstLimitGroup"), ("TIMETRA-QOS-MIB", "tmnxQosMacCritVidFltrV9v0Group"), ("TIMETRA-QOS-MIB", "tmnxQosSapEgressV9v0Group"), ("TIMETRA-QOS-MIB", "tmnxQosSapIngressV9v0Group"), ("TIMETRA-QOS-MIB", "tmnxQosNamedPoolV9v0Group"), ("TIMETRA-QOS-MIB", "tmnxQosPolicyV10v0Group"), ("TIMETRA-QOS-MIB", "tmnxQosQueueGrpPolcrV10v0Group"), ("TIMETRA-QOS-MIB", "tmnxQosEgrReClassifyV10v0Group"), ("TIMETRA-QOS-MIB", "tmnxQosPolicerSlopeGroup"), ("TIMETRA-QOS-MIB", "tmnxQosAdvConfigV10v0Group"), ("TIMETRA-QOS-MIB", "tmnxQosHsmdaV10v0Group"), ("TIMETRA-QOS-MIB", "tmnxQosNetworkV10v0Group"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxQos77x0V10v0Compliance = tmnxQos77x0V10v0Compliance.setStatus('current')
tmnxQosGlobalGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 16, 2, 1)).setObjects(("TIMETRA-QOS-MIB", "tQosDomainLastChanged"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxQosGlobalGroup = tmnxQosGlobalGroup.setStatus('current')
tmnxQosDSCPGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 16, 2, 2)).setObjects(("TIMETRA-QOS-MIB", "tDSCPNameRowStatus"), ("TIMETRA-QOS-MIB", "tDSCPNameStorageType"), ("TIMETRA-QOS-MIB", "tDSCPNameDscpValue"), ("TIMETRA-QOS-MIB", "tDSCPNameLastChanged"), ("TIMETRA-QOS-MIB", "tDSCPNameTableLastChanged"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxQosDSCPGroup = tmnxQosDSCPGroup.setStatus('current')
tmnxQosFCGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 16, 2, 3)).setObjects(("TIMETRA-QOS-MIB", "tFCRowStatus"), ("TIMETRA-QOS-MIB", "tFCStorageType"), ("TIMETRA-QOS-MIB", "tFCValue"), ("TIMETRA-QOS-MIB", "tFCNameLastChanged"), ("TIMETRA-QOS-MIB", "tFCNameTableLastChanged"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxQosFCGroup = tmnxQosFCGroup.setStatus('current')
tmnxQosSlopeGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 16, 2, 7)).setObjects(("TIMETRA-QOS-MIB", "tSlopeRowStatus"), ("TIMETRA-QOS-MIB", "tSlopeDescription"), ("TIMETRA-QOS-MIB", "tSlopeHiAdminStatus"), ("TIMETRA-QOS-MIB", "tSlopeHiStartAverage"), ("TIMETRA-QOS-MIB", "tSlopeHiMaxAverage"), ("TIMETRA-QOS-MIB", "tSlopeHiMaxProbability"), ("TIMETRA-QOS-MIB", "tSlopeLoAdminStatus"), ("TIMETRA-QOS-MIB", "tSlopeLoStartAverage"), ("TIMETRA-QOS-MIB", "tSlopeLoMaxAverage"), ("TIMETRA-QOS-MIB", "tSlopeLoMaxProbability"), ("TIMETRA-QOS-MIB", "tSlopeTimeAvgFactor"), ("TIMETRA-QOS-MIB", "tSlopeLastChanged"), ("TIMETRA-QOS-MIB", "tSlopePolicyTableLastChanged"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxQosSlopeGroup = tmnxQosSlopeGroup.setStatus('current')
tmnxQosSchedulerGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 16, 2, 8)).setObjects(("TIMETRA-QOS-MIB", "tSchedulerPolicyRowStatus"), ("TIMETRA-QOS-MIB", "tSchedulerPolicyDescription"), ("TIMETRA-QOS-MIB", "tSchedulerPolicyLastChanged"), ("TIMETRA-QOS-MIB", "tSchedulerPolicyTableLastChanged"), ("TIMETRA-QOS-MIB", "tVirtualSchedulerRowStatus"), ("TIMETRA-QOS-MIB", "tVirtualSchedulerDescription"), ("TIMETRA-QOS-MIB", "tVirtualSchedulerParent"), ("TIMETRA-QOS-MIB", "tVirtualSchedulerLevel"), ("TIMETRA-QOS-MIB", "tVirtualSchedulerWeight"), ("TIMETRA-QOS-MIB", "tVirtualSchedulerCIRLevel"), ("TIMETRA-QOS-MIB", "tVirtualSchedulerCIRWeight"), ("TIMETRA-QOS-MIB", "tVirtualSchedulerPIR"), ("TIMETRA-QOS-MIB", "tVirtualSchedulerCIR"), ("TIMETRA-QOS-MIB", "tVirtualSchedulerSummedCIR"), ("TIMETRA-QOS-MIB", "tVirtualSchedulerLastChanged"), ("TIMETRA-QOS-MIB", "tVirtualSchedulerTableLastChanged"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxQosSchedulerGroup = tmnxQosSchedulerGroup.setStatus('obsolete')
tQosObsoleteObjectsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 16, 2, 10)).setObjects(("TIMETRA-QOS-MIB", "tSapIngressQueueOperPIR"), ("TIMETRA-QOS-MIB", "tSapIngressQueueOperCIR"), ("TIMETRA-QOS-MIB", "tSapEgressQueueOperPIR"), ("TIMETRA-QOS-MIB", "tSapEgressQueueOperCIR"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tQosObsoleteObjectsGroup = tQosObsoleteObjectsGroup.setStatus('current')
tmnxQosSapEgressR2r1Group = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 16, 2, 12)).setObjects(("TIMETRA-QOS-MIB", "tSapEgressRowStatus"), ("TIMETRA-QOS-MIB", "tSapEgressScope"), ("TIMETRA-QOS-MIB", "tSapEgressDescription"), ("TIMETRA-QOS-MIB", "tSapEgressLastChanged"), ("TIMETRA-QOS-MIB", "tSapEgressTableLastChanged"), ("TIMETRA-QOS-MIB", "tSapEgressQueueRowStatus"), ("TIMETRA-QOS-MIB", "tSapEgressQueueParent"), ("TIMETRA-QOS-MIB", "tSapEgressQueueLevel"), ("TIMETRA-QOS-MIB", "tSapEgressQueueWeight"), ("TIMETRA-QOS-MIB", "tSapEgressQueueCIRLevel"), ("TIMETRA-QOS-MIB", "tSapEgressQueueCIRWeight"), ("TIMETRA-QOS-MIB", "tSapEgressQueueExpedite"), ("TIMETRA-QOS-MIB", "tSapEgressQueueCBS"), ("TIMETRA-QOS-MIB", "tSapEgressQueueMBS"), ("TIMETRA-QOS-MIB", "tSapEgressQueueHiPrioOnly"), ("TIMETRA-QOS-MIB", "tSapEgressQueueCIRAdaptation"), ("TIMETRA-QOS-MIB", "tSapEgressQueuePIRAdaptation"), ("TIMETRA-QOS-MIB", "tSapEgressQueueAdminPIR"), ("TIMETRA-QOS-MIB", "tSapEgressQueueAdminCIR"), ("TIMETRA-QOS-MIB", "tSapEgressQueueLastChanged"), ("TIMETRA-QOS-MIB", "tSapEgressQueueTableLastChanged"), ("TIMETRA-QOS-MIB", "tSapEgressFCRowStatus"), ("TIMETRA-QOS-MIB", "tSapEgressFCQueue"), ("TIMETRA-QOS-MIB", "tSapEgressFCDot1PValue"), ("TIMETRA-QOS-MIB", "tSapEgressFCLastChanged"), ("TIMETRA-QOS-MIB", "tSapEgressFCTableLastChanged"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxQosSapEgressR2r1Group = tmnxQosSapEgressR2r1Group.setStatus('obsolete')
tmnxQosNetworkR2r1Group = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 16, 2, 13)).setObjects(("TIMETRA-QOS-MIB", "tNetworkPolicyRowStatus"), ("TIMETRA-QOS-MIB", "tNetworkPolicyScope"), ("TIMETRA-QOS-MIB", "tNetworkPolicyDescription"), ("TIMETRA-QOS-MIB", "tNetworkPolicyIngressDefaultActionFC"), ("TIMETRA-QOS-MIB", "tNetworkPolicyIngressDefaultActionProfile"), ("TIMETRA-QOS-MIB", "tNetworkPolicyEgressRemark"), ("TIMETRA-QOS-MIB", "tNetworkPolicyLastChanged"), ("TIMETRA-QOS-MIB", "tNetworkPolicyIngressLerUseDscp"), ("TIMETRA-QOS-MIB", "tNetworkPolicyTableLastChanged"), ("TIMETRA-QOS-MIB", "tNetworkIngressDSCPRowStatus"), ("TIMETRA-QOS-MIB", "tNetworkIngressDSCPFC"), ("TIMETRA-QOS-MIB", "tNetworkIngressDSCPProfile"), ("TIMETRA-QOS-MIB", "tNetworkIngressDSCPLastChanged"), ("TIMETRA-QOS-MIB", "tNetworkIngressDSCPTableLastChanged"), ("TIMETRA-QOS-MIB", "tNetworkIngressDot1pRowStatus"), ("TIMETRA-QOS-MIB", "tNetworkIngressDot1pFC"), ("TIMETRA-QOS-MIB", "tNetworkIngressDot1pProfile"), ("TIMETRA-QOS-MIB", "tNetworkIngressDot1pLastChanged"), ("TIMETRA-QOS-MIB", "tNetworkIngressDot1pTableLastChanged"), ("TIMETRA-QOS-MIB", "tNetworkIngressLSPEXPRowStatus"), ("TIMETRA-QOS-MIB", "tNetworkIngressLSPEXPFC"), ("TIMETRA-QOS-MIB", "tNetworkIngressLSPEXPProfile"), ("TIMETRA-QOS-MIB", "tNetworkIngressLSPEXPLastChanged"), ("TIMETRA-QOS-MIB", "tNetworkIngressLSPEXPTableLastChanged"), ("TIMETRA-QOS-MIB", "tNetworkEgressFCDSCPInProfile"), ("TIMETRA-QOS-MIB", "tNetworkEgressFCDSCPOutProfile"), ("TIMETRA-QOS-MIB", "tNetworkEgressFCLspExpInProfile"), ("TIMETRA-QOS-MIB", "tNetworkEgressFCLspExpOutProfile"), ("TIMETRA-QOS-MIB", "tNetworkEgressFCDot1pInProfile"), ("TIMETRA-QOS-MIB", "tNetworkEgressFCDot1pOutProfile"), ("TIMETRA-QOS-MIB", "tNetworkEgressFCLastChanged"), ("TIMETRA-QOS-MIB", "tNetworkEgressFCTableLastChanged"), ("TIMETRA-QOS-MIB", "tNetworkQueuePolicyRowStatus"), ("TIMETRA-QOS-MIB", "tNetworkQueuePolicyDescription"), ("TIMETRA-QOS-MIB", "tNetworkQueuePolicyLastChanged"), ("TIMETRA-QOS-MIB", "tNetworkQueuePolicyTableLastChanged"), ("TIMETRA-QOS-MIB", "tNetworkQueueRowStatus"), ("TIMETRA-QOS-MIB", "tNetworkQueuePoolName"), ("TIMETRA-QOS-MIB", "tNetworkQueueParent"), ("TIMETRA-QOS-MIB", "tNetworkQueueLevel"), ("TIMETRA-QOS-MIB", "tNetworkQueueWeight"), ("TIMETRA-QOS-MIB", "tNetworkQueueCIRLevel"), ("TIMETRA-QOS-MIB", "tNetworkQueueCIRWeight"), ("TIMETRA-QOS-MIB", "tNetworkQueueMCast"), ("TIMETRA-QOS-MIB", "tNetworkQueueExpedite"), ("TIMETRA-QOS-MIB", "tNetworkQueueCIR"), ("TIMETRA-QOS-MIB", "tNetworkQueuePIR"), ("TIMETRA-QOS-MIB", "tNetworkQueueCBS"), ("TIMETRA-QOS-MIB", "tNetworkQueueMBS"), ("TIMETRA-QOS-MIB", "tNetworkQueueHiPrioOnly"), ("TIMETRA-QOS-MIB", "tNetworkQueueLastChanged"), ("TIMETRA-QOS-MIB", "tNetworkQueueTableLastChanged"), ("TIMETRA-QOS-MIB", "tNetworkQueueFCRowStatus"), ("TIMETRA-QOS-MIB", "tNetworkQueueFC"), ("TIMETRA-QOS-MIB", "tNetworkQueueFCMCast"), ("TIMETRA-QOS-MIB", "tNetworkQueueFCLastChanged"), ("TIMETRA-QOS-MIB", "tNetworkQueueFCTableLastChanged"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxQosNetworkR2r1Group = tmnxQosNetworkR2r1Group.setStatus('obsolete')
tmnxQosAtmTdpV3v0Group = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 16, 2, 15)).setObjects(("TIMETRA-QOS-MIB", "tAtmTdpSir"), ("TIMETRA-QOS-MIB", "tAtmTdpPir"), ("TIMETRA-QOS-MIB", "tAtmTdpMbs"), ("TIMETRA-QOS-MIB", "tAtmTdpMir"), ("TIMETRA-QOS-MIB", "tAtmTdpShaping"), ("TIMETRA-QOS-MIB", "tAtmTdpServCat"), ("TIMETRA-QOS-MIB", "tAtmTdpLastChanged"), ("TIMETRA-QOS-MIB", "tAtmTdpDescription"), ("TIMETRA-QOS-MIB", "tAtmTdpRowStatus"), ("TIMETRA-QOS-MIB", "tAtmTdpDescrType"), ("TIMETRA-QOS-MIB", "tAtmTdpCdvt"), ("TIMETRA-QOS-MIB", "tAtmTdpPolicing"), ("TIMETRA-QOS-MIB", "tAtmTdpIndexNext"), ("TIMETRA-QOS-MIB", "tAtmTdpsMaxSupported"), ("TIMETRA-QOS-MIB", "tAtmTdpsCurrentlyConfigured"), ("TIMETRA-QOS-MIB", "tAtmTdpTableLastChanged"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxQosAtmTdpV3v0Group = tmnxQosAtmTdpV3v0Group.setStatus('obsolete')
tmnxQosSapIpv6FilterR4r0Group = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 16, 2, 16)).setObjects(("TIMETRA-QOS-MIB", "tSapIngressIPv6CriteriaRowStatus"), ("TIMETRA-QOS-MIB", "tSapIngressIPv6CriteriaDescription"), ("TIMETRA-QOS-MIB", "tSapIngressIPv6CriteriaActionFC"), ("TIMETRA-QOS-MIB", "tSapIngressIPv6CriteriaActionPriority"), ("TIMETRA-QOS-MIB", "tSapIngressIPv6CriteriaSourceIpAddr"), ("TIMETRA-QOS-MIB", "tSapIngressIPv6CriteriaSourceIpMask"), ("TIMETRA-QOS-MIB", "tSapIngressIPv6CriteriaDestIpAddr"), ("TIMETRA-QOS-MIB", "tSapIngressIPv6CriteriaDestIpMask"), ("TIMETRA-QOS-MIB", "tSapIngressIPv6CriteriaNextHeader"), ("TIMETRA-QOS-MIB", "tSapIngressIPv6CriteriaSourcePortValue1"), ("TIMETRA-QOS-MIB", "tSapIngressIPv6CriteriaSourcePortValue2"), ("TIMETRA-QOS-MIB", "tSapIngressIPv6CriteriaSourcePortOperator"), ("TIMETRA-QOS-MIB", "tSapIngressIPv6CriteriaDestPortValue1"), ("TIMETRA-QOS-MIB", "tSapIngressIPv6CriteriaDestPortValue2"), ("TIMETRA-QOS-MIB", "tSapIngressIPv6CriteriaDestPortOperator"), ("TIMETRA-QOS-MIB", "tSapIngressIPv6CriteriaDSCP"), ("TIMETRA-QOS-MIB", "tSapIngressIPv6CriteriaLastChanged"), ("TIMETRA-QOS-MIB", "tSapIngressIPv6CriteriaTableLastChanged"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxQosSapIpv6FilterR4r0Group = tmnxQosSapIpv6FilterR4r0Group.setStatus('current')
tmnxQosQueueV4v0Group = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 16, 2, 18)).setObjects(("TIMETRA-QOS-MIB", "tSharedQueuePolicyRowStatus"), ("TIMETRA-QOS-MIB", "tSharedQueuePolicyDescription"), ("TIMETRA-QOS-MIB", "tSharedQueuePolicyLastChanged"), ("TIMETRA-QOS-MIB", "tSharedQueuePolicyTableLastChanged"), ("TIMETRA-QOS-MIB", "tSharedQueueRowStatus"), ("TIMETRA-QOS-MIB", "tSharedQueuePoolName"), ("TIMETRA-QOS-MIB", "tSharedQueueParent"), ("TIMETRA-QOS-MIB", "tSharedQueueLevel"), ("TIMETRA-QOS-MIB", "tSharedQueueWeight"), ("TIMETRA-QOS-MIB", "tSharedQueueCIRLevel"), ("TIMETRA-QOS-MIB", "tSharedQueueCIRWeight"), ("TIMETRA-QOS-MIB", "tSharedQueueExpedite"), ("TIMETRA-QOS-MIB", "tSharedQueueCIR"), ("TIMETRA-QOS-MIB", "tSharedQueuePIR"), ("TIMETRA-QOS-MIB", "tSharedQueueCBS"), ("TIMETRA-QOS-MIB", "tSharedQueueMBS"), ("TIMETRA-QOS-MIB", "tSharedQueueHiPrioOnly"), ("TIMETRA-QOS-MIB", "tSharedQueueLastChanged"), ("TIMETRA-QOS-MIB", "tSharedQueueIsMultipoint"), ("TIMETRA-QOS-MIB", "tSharedQueueTableLastChanged"), ("TIMETRA-QOS-MIB", "tSharedQueueFCRowStatus"), ("TIMETRA-QOS-MIB", "tSharedQueueFCQueue"), ("TIMETRA-QOS-MIB", "tSharedQueueFCLastChanged"), ("TIMETRA-QOS-MIB", "tSharedQueueFCTableLastChanged"), ("TIMETRA-QOS-MIB", "tSharedQueueFCMCastQueue"), ("TIMETRA-QOS-MIB", "tSharedQueueFCBCastQueue"), ("TIMETRA-QOS-MIB", "tSharedQueueFCUnknownQueue"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxQosQueueV4v0Group = tmnxQosQueueV4v0Group.setStatus('current')
tmnxQosSapIngressV4v0Group = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 16, 2, 19)).setObjects(("TIMETRA-QOS-MIB", "tSapIngressRowStatus"), ("TIMETRA-QOS-MIB", "tSapIngressScope"), ("TIMETRA-QOS-MIB", "tSapIngressDescription"), ("TIMETRA-QOS-MIB", "tSapIngressDefaultFC"), ("TIMETRA-QOS-MIB", "tSapIngressDefaultFCPriority"), ("TIMETRA-QOS-MIB", "tSapIngressMatchCriteria"), ("TIMETRA-QOS-MIB", "tSapIngressLastChanged"), ("TIMETRA-QOS-MIB", "tSapIngressTableLastChanged"), ("TIMETRA-QOS-MIB", "tSapIngressQueueRowStatus"), ("TIMETRA-QOS-MIB", "tSapIngressQueueParent"), ("TIMETRA-QOS-MIB", "tSapIngressQueueLevel"), ("TIMETRA-QOS-MIB", "tSapIngressQueueWeight"), ("TIMETRA-QOS-MIB", "tSapIngressQueueCIRLevel"), ("TIMETRA-QOS-MIB", "tSapIngressQueueCIRWeight"), ("TIMETRA-QOS-MIB", "tSapIngressQueueMCast"), ("TIMETRA-QOS-MIB", "tSapIngressQueueExpedite"), ("TIMETRA-QOS-MIB", "tSapIngressQueueCBS"), ("TIMETRA-QOS-MIB", "tSapIngressQueueMBS"), ("TIMETRA-QOS-MIB", "tSapIngressQueueHiPrioOnly"), ("TIMETRA-QOS-MIB", "tSapIngressQueueCIRAdaptation"), ("TIMETRA-QOS-MIB", "tSapIngressQueuePIRAdaptation"), ("TIMETRA-QOS-MIB", "tSapIngressQueueAdminPIR"), ("TIMETRA-QOS-MIB", "tSapIngressQueueAdminCIR"), ("TIMETRA-QOS-MIB", "tSapIngressQueueLastChanged"), ("TIMETRA-QOS-MIB", "tSapIngressQueueMode"), ("TIMETRA-QOS-MIB", "tSapIngressQueueTableLastChanged"), ("TIMETRA-QOS-MIB", "tSapIngressQueuePoliced"), ("TIMETRA-QOS-MIB", "tSapIngressDSCPRowStatus"), ("TIMETRA-QOS-MIB", "tSapIngressDSCPFC"), ("TIMETRA-QOS-MIB", "tSapIngressDSCPPriority"), ("TIMETRA-QOS-MIB", "tSapIngressDSCPLastChanged"), ("TIMETRA-QOS-MIB", "tSapIngressDSCPTableLastChanged"), ("TIMETRA-QOS-MIB", "tSapIngressDot1pRowStatus"), ("TIMETRA-QOS-MIB", "tSapIngressDot1pFC"), ("TIMETRA-QOS-MIB", "tSapIngressDot1pPriority"), ("TIMETRA-QOS-MIB", "tSapIngressDot1pLastChanged"), ("TIMETRA-QOS-MIB", "tSapIngressDot1pTableLastChanged"), ("TIMETRA-QOS-MIB", "tSapIngressIPCriteriaRowStatus"), ("TIMETRA-QOS-MIB", "tSapIngressIPCriteriaDescription"), ("TIMETRA-QOS-MIB", "tSapIngressIPCriteriaActionFC"), ("TIMETRA-QOS-MIB", "tSapIngressIPCriteriaActionPriority"), ("TIMETRA-QOS-MIB", "tSapIngressIPCriteriaSourceIpAddr"), ("TIMETRA-QOS-MIB", "tSapIngressIPCriteriaSourceIpMask"), ("TIMETRA-QOS-MIB", "tSapIngressIPCriteriaDestIpAddr"), ("TIMETRA-QOS-MIB", "tSapIngressIPCriteriaDestIpMask"), ("TIMETRA-QOS-MIB", "tSapIngressIPCriteriaProtocol"), ("TIMETRA-QOS-MIB", "tSapIngressIPCriteriaSourcePortValue1"), ("TIMETRA-QOS-MIB", "tSapIngressIPCriteriaSourcePortValue2"), ("TIMETRA-QOS-MIB", "tSapIngressIPCriteriaSourcePortOperator"), ("TIMETRA-QOS-MIB", "tSapIngressIPCriteriaDestPortValue1"), ("TIMETRA-QOS-MIB", "tSapIngressIPCriteriaDestPortValue2"), ("TIMETRA-QOS-MIB", "tSapIngressIPCriteriaDestPortOperator"), ("TIMETRA-QOS-MIB", "tSapIngressIPCriteriaDSCP"), ("TIMETRA-QOS-MIB", "tSapIngressIPCriteriaFragment"), ("TIMETRA-QOS-MIB", "tSapIngressIPCriteriaLastChanged"), ("TIMETRA-QOS-MIB", "tSapIngressIPCriteriaTableLastChanged"), ("TIMETRA-QOS-MIB", "tSapIngressMacCriteriaRowStatus"), ("TIMETRA-QOS-MIB", "tSapIngressMacCriteriaDescription"), ("TIMETRA-QOS-MIB", "tSapIngressMacCriteriaActionFC"), ("TIMETRA-QOS-MIB", "tSapIngressMacCriteriaActionPriority"), ("TIMETRA-QOS-MIB", "tSapIngressMacCriteriaFrameType"), ("TIMETRA-QOS-MIB", "tSapIngressMacCriteriaSrcMacAddr"), ("TIMETRA-QOS-MIB", "tSapIngressMacCriteriaSrcMacMask"), ("TIMETRA-QOS-MIB", "tSapIngressMacCriteriaDstMacAddr"), ("TIMETRA-QOS-MIB", "tSapIngressMacCriteriaDstMacMask"), ("TIMETRA-QOS-MIB", "tSapIngressMacCriteriaDot1PValue"), ("TIMETRA-QOS-MIB", "tSapIngressMacCriteriaDot1PMask"), ("TIMETRA-QOS-MIB", "tSapIngressMacCriteriaEthernetType"), ("TIMETRA-QOS-MIB", "tSapIngressMacCriteriaDSAP"), ("TIMETRA-QOS-MIB", "tSapIngressMacCriteriaDSAPMask"), ("TIMETRA-QOS-MIB", "tSapIngressMacCriteriaSSAP"), ("TIMETRA-QOS-MIB", "tSapIngressMacCriteriaSSAPMask"), ("TIMETRA-QOS-MIB", "tSapIngressMacCriteriaSnapPid"), ("TIMETRA-QOS-MIB", "tSapIngressMacCriteriaSnapOui"), ("TIMETRA-QOS-MIB", "tSapIngressMacCriteriaLastChanged"), ("TIMETRA-QOS-MIB", "tSapIngressMacCriteriaTableLastChanged"), ("TIMETRA-QOS-MIB", "tSapIngressFCRowStatus"), ("TIMETRA-QOS-MIB", "tSapIngressFCQueue"), ("TIMETRA-QOS-MIB", "tSapIngressFCMCastQueue"), ("TIMETRA-QOS-MIB", "tSapIngressFCBCastQueue"), ("TIMETRA-QOS-MIB", "tSapIngressFCUnknownQueue"), ("TIMETRA-QOS-MIB", "tSapIngressFCLastChanged"), ("TIMETRA-QOS-MIB", "tSapIngressFCInProfRemark"), ("TIMETRA-QOS-MIB", "tSapIngressFCInProfDscp"), ("TIMETRA-QOS-MIB", "tSapIngressFCInProfPrec"), ("TIMETRA-QOS-MIB", "tSapIngressFCOutProfRemark"), ("TIMETRA-QOS-MIB", "tSapIngressFCOutProfDscp"), ("TIMETRA-QOS-MIB", "tSapIngressFCOutProfPrec"), ("TIMETRA-QOS-MIB", "tSapIngressFCProfile"), ("TIMETRA-QOS-MIB", "tSapIngressFCTableLastChanged"), ("TIMETRA-QOS-MIB", "tSapIngressPrecRowStatus"), ("TIMETRA-QOS-MIB", "tSapIngressPrecFC"), ("TIMETRA-QOS-MIB", "tSapIngressPrecFCPriority"), ("TIMETRA-QOS-MIB", "tSapIngressPrecLastChanged"), ("TIMETRA-QOS-MIB", "tSapIngressPrecTableLastChanged"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxQosSapIngressV4v0Group = tmnxQosSapIngressV4v0Group.setStatus('obsolete')
tmnxQosSchedulerV5v0Group = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 16, 2, 20)).setObjects(("TIMETRA-QOS-MIB", "tSchedulerPolicyRowStatus"), ("TIMETRA-QOS-MIB", "tSchedulerPolicyDescription"), ("TIMETRA-QOS-MIB", "tSchedulerPolicyLastChanged"), ("TIMETRA-QOS-MIB", "tSchedulerPolicyTableLastChanged"), ("TIMETRA-QOS-MIB", "tVirtualSchedulerRowStatus"), ("TIMETRA-QOS-MIB", "tVirtualSchedulerDescription"), ("TIMETRA-QOS-MIB", "tVirtualSchedulerParent"), ("TIMETRA-QOS-MIB", "tVirtualSchedulerLevel"), ("TIMETRA-QOS-MIB", "tVirtualSchedulerWeight"), ("TIMETRA-QOS-MIB", "tVirtualSchedulerCIRLevel"), ("TIMETRA-QOS-MIB", "tVirtualSchedulerCIRWeight"), ("TIMETRA-QOS-MIB", "tVirtualSchedulerPIR"), ("TIMETRA-QOS-MIB", "tVirtualSchedulerCIR"), ("TIMETRA-QOS-MIB", "tVirtualSchedulerSummedCIR"), ("TIMETRA-QOS-MIB", "tVirtualSchedulerLastChanged"), ("TIMETRA-QOS-MIB", "tVirtualSchedulerUsePortParent"), ("TIMETRA-QOS-MIB", "tVirtualSchedulerPortLvl"), ("TIMETRA-QOS-MIB", "tVirtualSchedulerPortWght"), ("TIMETRA-QOS-MIB", "tVirtualSchedulerPortCIRLvl"), ("TIMETRA-QOS-MIB", "tVirtualSchedulerPortCIRWght"), ("TIMETRA-QOS-MIB", "tVirtualSchedulerTableLastChanged"), ("TIMETRA-QOS-MIB", "tPortSchedulerPlcyRowStatus"), ("TIMETRA-QOS-MIB", "tPortSchedulerPlcyDescription"), ("TIMETRA-QOS-MIB", "tPortSchedulerPlcyLastChanged"), ("TIMETRA-QOS-MIB", "tPortSchedulerPlcyMaxRate"), ("TIMETRA-QOS-MIB", "tPortSchedulerPlcyLvl1PIR"), ("TIMETRA-QOS-MIB", "tPortSchedulerPlcyLvl1CIR"), ("TIMETRA-QOS-MIB", "tPortSchedulerPlcyLvl2PIR"), ("TIMETRA-QOS-MIB", "tPortSchedulerPlcyLvl2CIR"), ("TIMETRA-QOS-MIB", "tPortSchedulerPlcyLvl3PIR"), ("TIMETRA-QOS-MIB", "tPortSchedulerPlcyLvl3CIR"), ("TIMETRA-QOS-MIB", "tPortSchedulerPlcyLvl4PIR"), ("TIMETRA-QOS-MIB", "tPortSchedulerPlcyLvl4CIR"), ("TIMETRA-QOS-MIB", "tPortSchedulerPlcyLvl5PIR"), ("TIMETRA-QOS-MIB", "tPortSchedulerPlcyLvl5CIR"), ("TIMETRA-QOS-MIB", "tPortSchedulerPlcyLvl6PIR"), ("TIMETRA-QOS-MIB", "tPortSchedulerPlcyLvl6CIR"), ("TIMETRA-QOS-MIB", "tPortSchedulerPlcyLvl7PIR"), ("TIMETRA-QOS-MIB", "tPortSchedulerPlcyLvl7CIR"), ("TIMETRA-QOS-MIB", "tPortSchedulerPlcyLvl8PIR"), ("TIMETRA-QOS-MIB", "tPortSchedulerPlcyLvl8CIR"), ("TIMETRA-QOS-MIB", "tPortSchedulerPlcyOrphanLvl"), ("TIMETRA-QOS-MIB", "tPortSchedulerPlcyOrphanWeight"), ("TIMETRA-QOS-MIB", "tPortSchedulerPlcyOrphanCIRLvl"), ("TIMETRA-QOS-MIB", "tPortSchedulerPlcyOrphanCIRWght"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxQosSchedulerV5v0Group = tmnxQosSchedulerV5v0Group.setStatus('current')
tmnxQosSapEgressV5v0Group = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 16, 2, 21)).setObjects(("TIMETRA-QOS-MIB", "tSapEgressRowStatus"), ("TIMETRA-QOS-MIB", "tSapEgressScope"), ("TIMETRA-QOS-MIB", "tSapEgressDescription"), ("TIMETRA-QOS-MIB", "tSapEgressLastChanged"), ("TIMETRA-QOS-MIB", "tSapEgressTableLastChanged"), ("TIMETRA-QOS-MIB", "tSapEgressQueueRowStatus"), ("TIMETRA-QOS-MIB", "tSapEgressQueueParent"), ("TIMETRA-QOS-MIB", "tSapEgressQueueLevel"), ("TIMETRA-QOS-MIB", "tSapEgressQueueWeight"), ("TIMETRA-QOS-MIB", "tSapEgressQueueCIRLevel"), ("TIMETRA-QOS-MIB", "tSapEgressQueueCIRWeight"), ("TIMETRA-QOS-MIB", "tSapEgressQueueExpedite"), ("TIMETRA-QOS-MIB", "tSapEgressQueueCBS"), ("TIMETRA-QOS-MIB", "tSapEgressQueueMBS"), ("TIMETRA-QOS-MIB", "tSapEgressQueueHiPrioOnly"), ("TIMETRA-QOS-MIB", "tSapEgressQueueCIRAdaptation"), ("TIMETRA-QOS-MIB", "tSapEgressQueuePIRAdaptation"), ("TIMETRA-QOS-MIB", "tSapEgressQueueAdminPIR"), ("TIMETRA-QOS-MIB", "tSapEgressQueueAdminCIR"), ("TIMETRA-QOS-MIB", "tSapEgressQueueLastChanged"), ("TIMETRA-QOS-MIB", "tSapEgressQueueTableLastChanged"), ("TIMETRA-QOS-MIB", "tSapEgressFCRowStatus"), ("TIMETRA-QOS-MIB", "tSapEgressFCQueue"), ("TIMETRA-QOS-MIB", "tSapEgressFCDot1PValue"), ("TIMETRA-QOS-MIB", "tSapEgressFCLastChanged"), ("TIMETRA-QOS-MIB", "tSapEgressFCTableLastChanged"), ("TIMETRA-QOS-MIB", "tSapEgressQueueUsePortParent"), ("TIMETRA-QOS-MIB", "tSapEgressQueuePortLvl"), ("TIMETRA-QOS-MIB", "tSapEgressQueuePortWght"), ("TIMETRA-QOS-MIB", "tSapEgressQueuePortCIRLvl"), ("TIMETRA-QOS-MIB", "tSapEgressQueuePortCIRWght"), ("TIMETRA-QOS-MIB", "tSapEgressQueuePortAvgOverhead"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxQosSapEgressV5v0Group = tmnxQosSapEgressV5v0Group.setStatus('obsolete')
tmnxQosNetworkV5v0Group = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 16, 2, 22)).setObjects(("TIMETRA-QOS-MIB", "tNetworkPolicyRowStatus"), ("TIMETRA-QOS-MIB", "tNetworkPolicyScope"), ("TIMETRA-QOS-MIB", "tNetworkPolicyDescription"), ("TIMETRA-QOS-MIB", "tNetworkPolicyIngressDefaultActionFC"), ("TIMETRA-QOS-MIB", "tNetworkPolicyIngressDefaultActionProfile"), ("TIMETRA-QOS-MIB", "tNetworkPolicyEgressRemark"), ("TIMETRA-QOS-MIB", "tNetworkPolicyLastChanged"), ("TIMETRA-QOS-MIB", "tNetworkPolicyIngressLerUseDscp"), ("TIMETRA-QOS-MIB", "tNetworkPolicyTableLastChanged"), ("TIMETRA-QOS-MIB", "tNetworkIngressDSCPRowStatus"), ("TIMETRA-QOS-MIB", "tNetworkIngressDSCPFC"), ("TIMETRA-QOS-MIB", "tNetworkIngressDSCPProfile"), ("TIMETRA-QOS-MIB", "tNetworkIngressDSCPLastChanged"), ("TIMETRA-QOS-MIB", "tNetworkIngressDSCPTableLastChanged"), ("TIMETRA-QOS-MIB", "tNetworkIngressDot1pRowStatus"), ("TIMETRA-QOS-MIB", "tNetworkIngressDot1pFC"), ("TIMETRA-QOS-MIB", "tNetworkIngressDot1pProfile"), ("TIMETRA-QOS-MIB", "tNetworkIngressDot1pLastChanged"), ("TIMETRA-QOS-MIB", "tNetworkIngressDot1pTableLastChanged"), ("TIMETRA-QOS-MIB", "tNetworkIngressLSPEXPRowStatus"), ("TIMETRA-QOS-MIB", "tNetworkIngressLSPEXPFC"), ("TIMETRA-QOS-MIB", "tNetworkIngressLSPEXPProfile"), ("TIMETRA-QOS-MIB", "tNetworkIngressLSPEXPLastChanged"), ("TIMETRA-QOS-MIB", "tNetworkIngressLSPEXPTableLastChanged"), ("TIMETRA-QOS-MIB", "tNetworkEgressFCDSCPInProfile"), ("TIMETRA-QOS-MIB", "tNetworkEgressFCDSCPOutProfile"), ("TIMETRA-QOS-MIB", "tNetworkEgressFCLspExpInProfile"), ("TIMETRA-QOS-MIB", "tNetworkEgressFCLspExpOutProfile"), ("TIMETRA-QOS-MIB", "tNetworkEgressFCDot1pInProfile"), ("TIMETRA-QOS-MIB", "tNetworkEgressFCDot1pOutProfile"), ("TIMETRA-QOS-MIB", "tNetworkEgressFCLastChanged"), ("TIMETRA-QOS-MIB", "tNetworkEgressFCTableLastChanged"), ("TIMETRA-QOS-MIB", "tNetworkQueuePolicyRowStatus"), ("TIMETRA-QOS-MIB", "tNetworkQueuePolicyDescription"), ("TIMETRA-QOS-MIB", "tNetworkQueuePolicyLastChanged"), ("TIMETRA-QOS-MIB", "tNetworkQueuePolicyTableLastChanged"), ("TIMETRA-QOS-MIB", "tNetworkQueueRowStatus"), ("TIMETRA-QOS-MIB", "tNetworkQueuePoolName"), ("TIMETRA-QOS-MIB", "tNetworkQueueParent"), ("TIMETRA-QOS-MIB", "tNetworkQueueLevel"), ("TIMETRA-QOS-MIB", "tNetworkQueueWeight"), ("TIMETRA-QOS-MIB", "tNetworkQueueCIRLevel"), ("TIMETRA-QOS-MIB", "tNetworkQueueCIRWeight"), ("TIMETRA-QOS-MIB", "tNetworkQueueMCast"), ("TIMETRA-QOS-MIB", "tNetworkQueueExpedite"), ("TIMETRA-QOS-MIB", "tNetworkQueueCIR"), ("TIMETRA-QOS-MIB", "tNetworkQueuePIR"), ("TIMETRA-QOS-MIB", "tNetworkQueueCBS"), ("TIMETRA-QOS-MIB", "tNetworkQueueMBS"), ("TIMETRA-QOS-MIB", "tNetworkQueueHiPrioOnly"), ("TIMETRA-QOS-MIB", "tNetworkQueueLastChanged"), ("TIMETRA-QOS-MIB", "tNetworkQueueUsePortParent"), ("TIMETRA-QOS-MIB", "tNetworkQueuePortLvl"), ("TIMETRA-QOS-MIB", "tNetworkQueuePortWght"), ("TIMETRA-QOS-MIB", "tNetworkQueuePortCIRLvl"), ("TIMETRA-QOS-MIB", "tNetworkQueuePortCIRWght"), ("TIMETRA-QOS-MIB", "tNetworkQueuePortAvgOverhead"), ("TIMETRA-QOS-MIB", "tNetworkQueuePIRAdaptation"), ("TIMETRA-QOS-MIB", "tNetworkQueueCIRAdaptation"), ("TIMETRA-QOS-MIB", "tNetworkQueueTableLastChanged"), ("TIMETRA-QOS-MIB", "tNetworkQueueFCRowStatus"), ("TIMETRA-QOS-MIB", "tNetworkQueueFC"), ("TIMETRA-QOS-MIB", "tNetworkQueueFCMCast"), ("TIMETRA-QOS-MIB", "tNetworkQueueFCLastChanged"), ("TIMETRA-QOS-MIB", "tNetworkQueueFCTableLastChanged"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxQosNetworkV5v0Group = tmnxQosNetworkV5v0Group.setStatus('obsolete')
tmnxQosHsmdaV6v0Group = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 16, 2, 23)).setObjects(("TIMETRA-QOS-MIB", "tHsmdaSchedulerPlcyRowStatus"), ("TIMETRA-QOS-MIB", "tHsmdaSchedulerPlcyDescription"), ("TIMETRA-QOS-MIB", "tHsmdaSchedulerPlcyMaxRate"), ("TIMETRA-QOS-MIB", "tHsmdaSchedulerPlcyLvl1Rate"), ("TIMETRA-QOS-MIB", "tHsmdaSchedulerPlcyLvl1GrpId"), ("TIMETRA-QOS-MIB", "tHsmdaSchedulerPlcyLvl1WgtInGrp"), ("TIMETRA-QOS-MIB", "tHsmdaSchedulerPlcyLvl2Rate"), ("TIMETRA-QOS-MIB", "tHsmdaSchedulerPlcyLvl2GrpId"), ("TIMETRA-QOS-MIB", "tHsmdaSchedulerPlcyLvl2WgtInGrp"), ("TIMETRA-QOS-MIB", "tHsmdaSchedulerPlcyLvl3Rate"), ("TIMETRA-QOS-MIB", "tHsmdaSchedulerPlcyLvl3GrpId"), ("TIMETRA-QOS-MIB", "tHsmdaSchedulerPlcyLvl3WgtInGrp"), ("TIMETRA-QOS-MIB", "tHsmdaSchedulerPlcyLvl4Rate"), ("TIMETRA-QOS-MIB", "tHsmdaSchedulerPlcyLvl4GrpId"), ("TIMETRA-QOS-MIB", "tHsmdaSchedulerPlcyLvl4WgtInGrp"), ("TIMETRA-QOS-MIB", "tHsmdaSchedulerPlcyLvl5Rate"), ("TIMETRA-QOS-MIB", "tHsmdaSchedulerPlcyLvl5GrpId"), ("TIMETRA-QOS-MIB", "tHsmdaSchedulerPlcyLvl5WgtInGrp"), ("TIMETRA-QOS-MIB", "tHsmdaSchedulerPlcyLvl6Rate"), ("TIMETRA-QOS-MIB", "tHsmdaSchedulerPlcyLvl6GrpId"), ("TIMETRA-QOS-MIB", "tHsmdaSchedulerPlcyLvl6WgtInGrp"), ("TIMETRA-QOS-MIB", "tHsmdaSchedulerPlcyLvl7Rate"), ("TIMETRA-QOS-MIB", "tHsmdaSchedulerPlcyLvl7GrpId"), ("TIMETRA-QOS-MIB", "tHsmdaSchedulerPlcyLvl7WgtInGrp"), ("TIMETRA-QOS-MIB", "tHsmdaSchedulerPlcyLvl8Rate"), ("TIMETRA-QOS-MIB", "tHsmdaSchedulerPlcyLvl8GrpId"), ("TIMETRA-QOS-MIB", "tHsmdaSchedulerPlcyLvl8WgtInGrp"), ("TIMETRA-QOS-MIB", "tHsmdaSchedulerPlcyLastChanged"), ("TIMETRA-QOS-MIB", "tHsmdaSchedulerPlcyGrp1Rate"), ("TIMETRA-QOS-MIB", "tHsmdaSchedulerPlcyGrp2Rate"), ("TIMETRA-QOS-MIB", "tSapEgressFCHsmdaQueue"), ("TIMETRA-QOS-MIB", "tSapEgressFCDot1PHsmdaProfile"), ("TIMETRA-QOS-MIB", "tSapEgressHsmdaQueueRowStatus"), ("TIMETRA-QOS-MIB", "tSapEgressHsmdaQueueCIRAdaptn"), ("TIMETRA-QOS-MIB", "tSapEgressHsmdaQueuePIRAdaptn"), ("TIMETRA-QOS-MIB", "tSapEgressHsmdaQueueAdminPIR"), ("TIMETRA-QOS-MIB", "tSapEgressHsmdaQueueAdminCIR"), ("TIMETRA-QOS-MIB", "tSapEgressHsmdaQueueSlopePolicy"), ("TIMETRA-QOS-MIB", "tSapEgressHsmdaQueueLastChanged"), ("TIMETRA-QOS-MIB", "tSapIngressHsmdaPacketOffset"), ("TIMETRA-QOS-MIB", "tSapIngressDefFCHsmdaCntrOvr"), ("TIMETRA-QOS-MIB", "tSapIngressDot1pHsmdaCntrOvr"), ("TIMETRA-QOS-MIB", "tSapIngressDSCPHsmdaCntrOvr"), ("TIMETRA-QOS-MIB", "tSapIngressFCHsmdaQueue"), ("TIMETRA-QOS-MIB", "tSapIngressFCHsmdaMCastQueue"), ("TIMETRA-QOS-MIB", "tSapIngressFCHsmdaBCastQueue"), ("TIMETRA-QOS-MIB", "tSapIngressPrecHsmdaCntrOvr"), ("TIMETRA-QOS-MIB", "tSapIngressHsmdaQueueRowStatus"), ("TIMETRA-QOS-MIB", "tSapIngressHsmdaQueueLastChanged"), ("TIMETRA-QOS-MIB", "tSapIngressHsmdaQueueCIRAdaptn"), ("TIMETRA-QOS-MIB", "tSapIngressHsmdaQueuePIRAdaptn"), ("TIMETRA-QOS-MIB", "tSapIngressHsmdaQueueAdminPIR"), ("TIMETRA-QOS-MIB", "tSapIngressHsmdaQueueAdminCIR"), ("TIMETRA-QOS-MIB", "tSapIngressHsmdaQueueSlopePolicy"), ("TIMETRA-QOS-MIB", "tSapIngressHsmdaQueuePoliced"), ("TIMETRA-QOS-MIB", "tHsmdaPoolPolicyRowStatus"), ("TIMETRA-QOS-MIB", "tHsmdaPoolLastChanged"), ("TIMETRA-QOS-MIB", "tHsmdaPoolDescription"), ("TIMETRA-QOS-MIB", "tHsmdaPoolSystemReserve"), ("TIMETRA-QOS-MIB", "tHsmdaPoolRoot1AllocWeight"), ("TIMETRA-QOS-MIB", "tHsmdaPoolRoot2AllocWeight"), ("TIMETRA-QOS-MIB", "tHsmdaPoolRoot3AllocWeight"), ("TIMETRA-QOS-MIB", "tHsmdaPoolRoot4AllocWeight"), ("TIMETRA-QOS-MIB", "tHsmdaPoolRoot5AllocWeight"), ("TIMETRA-QOS-MIB", "tHsmdaPoolRoot6AllocWeight"), ("TIMETRA-QOS-MIB", "tHsmdaPoolRoot7AllocWeight"), ("TIMETRA-QOS-MIB", "tHsmdaPoolRoot8AllocWeight"), ("TIMETRA-QOS-MIB", "tHsmdaPoolClass1Parent"), ("TIMETRA-QOS-MIB", "tHsmdaPoolClass1AllocPercent"), ("TIMETRA-QOS-MIB", "tHsmdaPoolClass2Parent"), ("TIMETRA-QOS-MIB", "tHsmdaPoolClass2AllocPercent"), ("TIMETRA-QOS-MIB", "tHsmdaPoolClass3Parent"), ("TIMETRA-QOS-MIB", "tHsmdaPoolClass3AllocPercent"), ("TIMETRA-QOS-MIB", "tHsmdaPoolClass4Parent"), ("TIMETRA-QOS-MIB", "tHsmdaPoolClass4AllocPercent"), ("TIMETRA-QOS-MIB", "tHsmdaPoolClass5Parent"), ("TIMETRA-QOS-MIB", "tHsmdaPoolClass5AllocPercent"), ("TIMETRA-QOS-MIB", "tHsmdaPoolClass6Parent"), ("TIMETRA-QOS-MIB", "tHsmdaPoolClass6AllocPercent"), ("TIMETRA-QOS-MIB", "tHsmdaPoolClass7Parent"), ("TIMETRA-QOS-MIB", "tHsmdaPoolClass7AllocPercent"), ("TIMETRA-QOS-MIB", "tHsmdaPoolClass8Parent"), ("TIMETRA-QOS-MIB", "tHsmdaPoolClass8AllocPercent"), ("TIMETRA-QOS-MIB", "tHsmdaSlopePolicyRowStatus"), ("TIMETRA-QOS-MIB", "tHsmdaSlopeLastChanged"), ("TIMETRA-QOS-MIB", "tHsmdaSlopeDescription"), ("TIMETRA-QOS-MIB", "tHsmdaSlopeQueueMbs"), ("TIMETRA-QOS-MIB", "tHsmdaSlopeHiAdminStatus"), ("TIMETRA-QOS-MIB", "tHsmdaSlopeHiStartDepth"), ("TIMETRA-QOS-MIB", "tHsmdaSlopeHiMaxDepth"), ("TIMETRA-QOS-MIB", "tHsmdaSlopeHiMaxProbability"), ("TIMETRA-QOS-MIB", "tHsmdaSlopeLoAdminStatus"), ("TIMETRA-QOS-MIB", "tHsmdaSlopeLoStartDepth"), ("TIMETRA-QOS-MIB", "tHsmdaSlopeLoMaxDepth"), ("TIMETRA-QOS-MIB", "tHsmdaSlopeLoMaxProbability"), ("TIMETRA-QOS-MIB", "tSapIngrHsmdaQueueTblLastChngd"), ("TIMETRA-QOS-MIB", "tSapEgrHsmdaQueueTblLastChngd"), ("TIMETRA-QOS-MIB", "tHsmdaSchedPlcyTblLastChngd"), ("TIMETRA-QOS-MIB", "tHsmdaSchedPlcyGrpTblLastChngd"), ("TIMETRA-QOS-MIB", "tHsmdaPoolPlcyTblLastChngd"), ("TIMETRA-QOS-MIB", "tHsmdaSlopePolicyTableLastChanged"), ("TIMETRA-QOS-MIB", "tSapIngressIPCritHsmdaCntrOvr"), ("TIMETRA-QOS-MIB", "tSapEgressDSCPRowStatus"), ("TIMETRA-QOS-MIB", "tSapEgressDSCPLastChanged"), ("TIMETRA-QOS-MIB", "tSapEgressDSCPHsmdaCntrOverride"), ("TIMETRA-QOS-MIB", "tSapEgressPrecRowStatus"), ("TIMETRA-QOS-MIB", "tSapEgressPrecLastChanged"), ("TIMETRA-QOS-MIB", "tSapEgressPrecHsmdaCntrOverride"), ("TIMETRA-QOS-MIB", "tSapEgrIPCritRowStatus"), ("TIMETRA-QOS-MIB", "tSapEgrIPCritLastChanged"), ("TIMETRA-QOS-MIB", "tSapEgrIPCritDescription"), ("TIMETRA-QOS-MIB", "tSapEgrIPCritActionHsmdaCntrOvr"), ("TIMETRA-QOS-MIB", "tSapEgrIPCritSourceIpAddrType"), ("TIMETRA-QOS-MIB", "tSapEgrIPCritSourceIpAddr"), ("TIMETRA-QOS-MIB", "tSapEgrIPCritSourceIpMask"), ("TIMETRA-QOS-MIB", "tSapEgrIPCritDestIpAddrType"), ("TIMETRA-QOS-MIB", "tSapEgrIPCritDestIpAddr"), ("TIMETRA-QOS-MIB", "tSapEgrIPCritDestIpMask"), ("TIMETRA-QOS-MIB", "tSapEgrIPCritProtocol"), ("TIMETRA-QOS-MIB", "tSapEgrIPCritSourcePortValue1"), ("TIMETRA-QOS-MIB", "tSapEgrIPCritSourcePortValue2"), ("TIMETRA-QOS-MIB", "tSapEgrIPCritSourcePortOperator"), ("TIMETRA-QOS-MIB", "tSapEgrIPCritDestPortValue1"), ("TIMETRA-QOS-MIB", "tSapEgrIPCritDestPortValue2"), ("TIMETRA-QOS-MIB", "tSapEgrIPCritDestPortOperator"), ("TIMETRA-QOS-MIB", "tSapEgrIPCritDSCP"), ("TIMETRA-QOS-MIB", "tSapEgrIPCritFragment"), ("TIMETRA-QOS-MIB", "tSapEgressMatchCriteria"), ("TIMETRA-QOS-MIB", "tSapEgressHsmdaPacketOffset"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxQosHsmdaV6v0Group = tmnxQosHsmdaV6v0Group.setStatus('obsolete')
tmnxQosAtmTdpV5v0Group = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 16, 2, 24)).setObjects(("TIMETRA-QOS-MIB", "tAtmTdpSir"), ("TIMETRA-QOS-MIB", "tAtmTdpPir"), ("TIMETRA-QOS-MIB", "tAtmTdpMbs"), ("TIMETRA-QOS-MIB", "tAtmTdpMir"), ("TIMETRA-QOS-MIB", "tAtmTdpShaping"), ("TIMETRA-QOS-MIB", "tAtmTdpServCat"), ("TIMETRA-QOS-MIB", "tAtmTdpLastChanged"), ("TIMETRA-QOS-MIB", "tAtmTdpDescription"), ("TIMETRA-QOS-MIB", "tAtmTdpRowStatus"), ("TIMETRA-QOS-MIB", "tAtmTdpDescrType"), ("TIMETRA-QOS-MIB", "tAtmTdpCdvt"), ("TIMETRA-QOS-MIB", "tAtmTdpPolicing"), ("TIMETRA-QOS-MIB", "tAtmTdpCLPTagging"), ("TIMETRA-QOS-MIB", "tAtmTdpIndexNext"), ("TIMETRA-QOS-MIB", "tAtmTdpsMaxSupported"), ("TIMETRA-QOS-MIB", "tAtmTdpsCurrentlyConfigured"), ("TIMETRA-QOS-MIB", "tAtmTdpTableLastChanged"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxQosAtmTdpV5v0Group = tmnxQosAtmTdpV5v0Group.setStatus('current')
tmnxQosSapIngressV6v0Group = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 16, 2, 25)).setObjects(("TIMETRA-QOS-MIB", "tSapIngressRowStatus"), ("TIMETRA-QOS-MIB", "tSapIngressScope"), ("TIMETRA-QOS-MIB", "tSapIngressDescription"), ("TIMETRA-QOS-MIB", "tSapIngressDefaultFC"), ("TIMETRA-QOS-MIB", "tSapIngressDefaultFCPriority"), ("TIMETRA-QOS-MIB", "tSapIngressMatchCriteria"), ("TIMETRA-QOS-MIB", "tSapIngressLastChanged"), ("TIMETRA-QOS-MIB", "tSapIngressTableLastChanged"), ("TIMETRA-QOS-MIB", "tSapIngressQueueRowStatus"), ("TIMETRA-QOS-MIB", "tSapIngressQueueParent"), ("TIMETRA-QOS-MIB", "tSapIngressQueueLevel"), ("TIMETRA-QOS-MIB", "tSapIngressQueueWeight"), ("TIMETRA-QOS-MIB", "tSapIngressQueueCIRLevel"), ("TIMETRA-QOS-MIB", "tSapIngressQueueCIRWeight"), ("TIMETRA-QOS-MIB", "tSapIngressQueueMCast"), ("TIMETRA-QOS-MIB", "tSapIngressQueueExpedite"), ("TIMETRA-QOS-MIB", "tSapIngressQueueCBS"), ("TIMETRA-QOS-MIB", "tSapIngressQueueMBS"), ("TIMETRA-QOS-MIB", "tSapIngressQueueHiPrioOnly"), ("TIMETRA-QOS-MIB", "tSapIngressQueueCIRAdaptation"), ("TIMETRA-QOS-MIB", "tSapIngressQueuePIRAdaptation"), ("TIMETRA-QOS-MIB", "tSapIngressQueueAdminPIR"), ("TIMETRA-QOS-MIB", "tSapIngressQueueAdminCIR"), ("TIMETRA-QOS-MIB", "tSapIngressQueueLastChanged"), ("TIMETRA-QOS-MIB", "tSapIngressQueueMode"), ("TIMETRA-QOS-MIB", "tSapIngressQueuePoolName"), ("TIMETRA-QOS-MIB", "tSapIngressQueueTableLastChanged"), ("TIMETRA-QOS-MIB", "tSapIngressQueuePoliced"), ("TIMETRA-QOS-MIB", "tSapIngressDSCPRowStatus"), ("TIMETRA-QOS-MIB", "tSapIngressDSCPFC"), ("TIMETRA-QOS-MIB", "tSapIngressDSCPPriority"), ("TIMETRA-QOS-MIB", "tSapIngressDSCPLastChanged"), ("TIMETRA-QOS-MIB", "tSapIngressDSCPTableLastChanged"), ("TIMETRA-QOS-MIB", "tSapIngressDot1pRowStatus"), ("TIMETRA-QOS-MIB", "tSapIngressDot1pFC"), ("TIMETRA-QOS-MIB", "tSapIngressDot1pPriority"), ("TIMETRA-QOS-MIB", "tSapIngressDot1pLastChanged"), ("TIMETRA-QOS-MIB", "tSapIngressDot1pTableLastChanged"), ("TIMETRA-QOS-MIB", "tSapIngressIPCriteriaRowStatus"), ("TIMETRA-QOS-MIB", "tSapIngressIPCriteriaDescription"), ("TIMETRA-QOS-MIB", "tSapIngressIPCriteriaActionFC"), ("TIMETRA-QOS-MIB", "tSapIngressIPCriteriaActionPriority"), ("TIMETRA-QOS-MIB", "tSapIngressIPCriteriaSourceIpAddr"), ("TIMETRA-QOS-MIB", "tSapIngressIPCriteriaSourceIpMask"), ("TIMETRA-QOS-MIB", "tSapIngressIPCriteriaDestIpAddr"), ("TIMETRA-QOS-MIB", "tSapIngressIPCriteriaDestIpMask"), ("TIMETRA-QOS-MIB", "tSapIngressIPCriteriaProtocol"), ("TIMETRA-QOS-MIB", "tSapIngressIPCriteriaSourcePortValue1"), ("TIMETRA-QOS-MIB", "tSapIngressIPCriteriaSourcePortValue2"), ("TIMETRA-QOS-MIB", "tSapIngressIPCriteriaSourcePortOperator"), ("TIMETRA-QOS-MIB", "tSapIngressIPCriteriaDestPortValue1"), ("TIMETRA-QOS-MIB", "tSapIngressIPCriteriaDestPortValue2"), ("TIMETRA-QOS-MIB", "tSapIngressIPCriteriaDestPortOperator"), ("TIMETRA-QOS-MIB", "tSapIngressIPCriteriaDSCP"), ("TIMETRA-QOS-MIB", "tSapIngressIPCriteriaFragment"), ("TIMETRA-QOS-MIB", "tSapIngressIPCriteriaLastChanged"), ("TIMETRA-QOS-MIB", "tSapIngressIPCriteriaTableLastChanged"), ("TIMETRA-QOS-MIB", "tSapIngressMacCriteriaRowStatus"), ("TIMETRA-QOS-MIB", "tSapIngressMacCriteriaDescription"), ("TIMETRA-QOS-MIB", "tSapIngressMacCriteriaActionFC"), ("TIMETRA-QOS-MIB", "tSapIngressMacCriteriaActionPriority"), ("TIMETRA-QOS-MIB", "tSapIngressMacCriteriaFrameType"), ("TIMETRA-QOS-MIB", "tSapIngressMacCriteriaSrcMacAddr"), ("TIMETRA-QOS-MIB", "tSapIngressMacCriteriaSrcMacMask"), ("TIMETRA-QOS-MIB", "tSapIngressMacCriteriaDstMacAddr"), ("TIMETRA-QOS-MIB", "tSapIngressMacCriteriaDstMacMask"), ("TIMETRA-QOS-MIB", "tSapIngressMacCriteriaDot1PValue"), ("TIMETRA-QOS-MIB", "tSapIngressMacCriteriaDot1PMask"), ("TIMETRA-QOS-MIB", "tSapIngressMacCriteriaEthernetType"), ("TIMETRA-QOS-MIB", "tSapIngressMacCriteriaDSAP"), ("TIMETRA-QOS-MIB", "tSapIngressMacCriteriaDSAPMask"), ("TIMETRA-QOS-MIB", "tSapIngressMacCriteriaSSAP"), ("TIMETRA-QOS-MIB", "tSapIngressMacCriteriaSSAPMask"), ("TIMETRA-QOS-MIB", "tSapIngressMacCriteriaSnapPid"), ("TIMETRA-QOS-MIB", "tSapIngressMacCriteriaSnapOui"), ("TIMETRA-QOS-MIB", "tSapIngressMacCriteriaLastChanged"), ("TIMETRA-QOS-MIB", "tSapIngressMacCriteriaTableLastChanged"), ("TIMETRA-QOS-MIB", "tSapIngressFCRowStatus"), ("TIMETRA-QOS-MIB", "tSapIngressFCQueue"), ("TIMETRA-QOS-MIB", "tSapIngressFCMCastQueue"), ("TIMETRA-QOS-MIB", "tSapIngressFCBCastQueue"), ("TIMETRA-QOS-MIB", "tSapIngressFCUnknownQueue"), ("TIMETRA-QOS-MIB", "tSapIngressFCLastChanged"), ("TIMETRA-QOS-MIB", "tSapIngressFCInProfRemark"), ("TIMETRA-QOS-MIB", "tSapIngressFCInProfDscp"), ("TIMETRA-QOS-MIB", "tSapIngressFCInProfPrec"), ("TIMETRA-QOS-MIB", "tSapIngressFCDE1OutOfProfile"), ("TIMETRA-QOS-MIB", "tSapIngressFCOutProfRemark"), ("TIMETRA-QOS-MIB", "tSapIngressFCOutProfDscp"), ("TIMETRA-QOS-MIB", "tSapIngressFCOutProfPrec"), ("TIMETRA-QOS-MIB", "tSapIngressFCProfile"), ("TIMETRA-QOS-MIB", "tSapIngressFCTableLastChanged"), ("TIMETRA-QOS-MIB", "tSapIngressPrecRowStatus"), ("TIMETRA-QOS-MIB", "tSapIngressPrecFC"), ("TIMETRA-QOS-MIB", "tSapIngressPrecFCPriority"), ("TIMETRA-QOS-MIB", "tSapIngressPrecLastChanged"), ("TIMETRA-QOS-MIB", "tSapIngressPrecTableLastChanged"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxQosSapIngressV6v0Group = tmnxQosSapIngressV6v0Group.setStatus('obsolete')
tmnxQosSapEgressV6v0Group = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 16, 2, 26)).setObjects(("TIMETRA-QOS-MIB", "tSapEgressRowStatus"), ("TIMETRA-QOS-MIB", "tSapEgressScope"), ("TIMETRA-QOS-MIB", "tSapEgressDescription"), ("TIMETRA-QOS-MIB", "tSapEgressLastChanged"), ("TIMETRA-QOS-MIB", "tSapEgressTableLastChanged"), ("TIMETRA-QOS-MIB", "tSapEgressQueueRowStatus"), ("TIMETRA-QOS-MIB", "tSapEgressQueueParent"), ("TIMETRA-QOS-MIB", "tSapEgressQueueLevel"), ("TIMETRA-QOS-MIB", "tSapEgressQueueWeight"), ("TIMETRA-QOS-MIB", "tSapEgressQueueCIRLevel"), ("TIMETRA-QOS-MIB", "tSapEgressQueueCIRWeight"), ("TIMETRA-QOS-MIB", "tSapEgressQueueExpedite"), ("TIMETRA-QOS-MIB", "tSapEgressQueueCBS"), ("TIMETRA-QOS-MIB", "tSapEgressQueueMBS"), ("TIMETRA-QOS-MIB", "tSapEgressQueueHiPrioOnly"), ("TIMETRA-QOS-MIB", "tSapEgressQueueCIRAdaptation"), ("TIMETRA-QOS-MIB", "tSapEgressQueuePIRAdaptation"), ("TIMETRA-QOS-MIB", "tSapEgressQueueAdminPIR"), ("TIMETRA-QOS-MIB", "tSapEgressQueueAdminCIR"), ("TIMETRA-QOS-MIB", "tSapEgressQueueLastChanged"), ("TIMETRA-QOS-MIB", "tSapEgressQueueTableLastChanged"), ("TIMETRA-QOS-MIB", "tSapEgressFCRowStatus"), ("TIMETRA-QOS-MIB", "tSapEgressFCQueue"), ("TIMETRA-QOS-MIB", "tSapEgressFCLastChanged"), ("TIMETRA-QOS-MIB", "tSapEgressFCTableLastChanged"), ("TIMETRA-QOS-MIB", "tSapEgressFCDot1PInProfile"), ("TIMETRA-QOS-MIB", "tSapEgressFCDot1POutProfile"), ("TIMETRA-QOS-MIB", "tSapEgressFCForceDEValue"), ("TIMETRA-QOS-MIB", "tSapEgressFCDEMark"), ("TIMETRA-QOS-MIB", "tSapEgressFCInProfDscp"), ("TIMETRA-QOS-MIB", "tSapEgressFCOutProfDscp"), ("TIMETRA-QOS-MIB", "tSapEgressFCInProfPrec"), ("TIMETRA-QOS-MIB", "tSapEgressFCOutProfPrec"), ("TIMETRA-QOS-MIB", "tSapEgressQueueUsePortParent"), ("TIMETRA-QOS-MIB", "tSapEgressQueuePortLvl"), ("TIMETRA-QOS-MIB", "tSapEgressQueuePortWght"), ("TIMETRA-QOS-MIB", "tSapEgressQueuePortCIRLvl"), ("TIMETRA-QOS-MIB", "tSapEgressQueuePortCIRWght"), ("TIMETRA-QOS-MIB", "tSapEgressQueuePortAvgOverhead"), ("TIMETRA-QOS-MIB", "tSapEgressQueuePoolName"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxQosSapEgressV6v0Group = tmnxQosSapEgressV6v0Group.setStatus('obsolete')
tmnxQosNetworkV6v0Group = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 16, 2, 27)).setObjects(("TIMETRA-QOS-MIB", "tNetworkPolicyRowStatus"), ("TIMETRA-QOS-MIB", "tNetworkPolicyScope"), ("TIMETRA-QOS-MIB", "tNetworkPolicyDescription"), ("TIMETRA-QOS-MIB", "tNetworkPolicyIngressDefaultActionFC"), ("TIMETRA-QOS-MIB", "tNetworkPolicyIngressDefaultActionProfile"), ("TIMETRA-QOS-MIB", "tNetworkPolicyEgressRemark"), ("TIMETRA-QOS-MIB", "tNetworkPolicyLastChanged"), ("TIMETRA-QOS-MIB", "tNetworkPolicyIngressLerUseDscp"), ("TIMETRA-QOS-MIB", "tNetworkPolicyTableLastChanged"), ("TIMETRA-QOS-MIB", "tNetworkIngressDSCPRowStatus"), ("TIMETRA-QOS-MIB", "tNetworkIngressDSCPFC"), ("TIMETRA-QOS-MIB", "tNetworkIngressDSCPProfile"), ("TIMETRA-QOS-MIB", "tNetworkIngressDSCPLastChanged"), ("TIMETRA-QOS-MIB", "tNetworkIngressDSCPTableLastChanged"), ("TIMETRA-QOS-MIB", "tNetworkIngressDot1pRowStatus"), ("TIMETRA-QOS-MIB", "tNetworkIngressDot1pFC"), ("TIMETRA-QOS-MIB", "tNetworkIngressDot1pProfile"), ("TIMETRA-QOS-MIB", "tNetworkIngressDot1pLastChanged"), ("TIMETRA-QOS-MIB", "tNetworkIngressDot1pTableLastChanged"), ("TIMETRA-QOS-MIB", "tNetworkIngressLSPEXPRowStatus"), ("TIMETRA-QOS-MIB", "tNetworkIngressLSPEXPFC"), ("TIMETRA-QOS-MIB", "tNetworkIngressLSPEXPProfile"), ("TIMETRA-QOS-MIB", "tNetworkIngressLSPEXPLastChanged"), ("TIMETRA-QOS-MIB", "tNetworkIngressLSPEXPTableLastChanged"), ("TIMETRA-QOS-MIB", "tNetworkEgressFCDSCPInProfile"), ("TIMETRA-QOS-MIB", "tNetworkEgressFCDSCPOutProfile"), ("TIMETRA-QOS-MIB", "tNetworkEgressFCLspExpInProfile"), ("TIMETRA-QOS-MIB", "tNetworkEgressFCLspExpOutProfile"), ("TIMETRA-QOS-MIB", "tNetworkEgressFCDot1pInProfile"), ("TIMETRA-QOS-MIB", "tNetworkEgressFCDot1pOutProfile"), ("TIMETRA-QOS-MIB", "tNetworkEgressFCLastChanged"), ("TIMETRA-QOS-MIB", "tNetworkEgressFCForceDEValue"), ("TIMETRA-QOS-MIB", "tNetworkEgressFCDEMark"), ("TIMETRA-QOS-MIB", "tNetworkEgressFCTableLastChanged"), ("TIMETRA-QOS-MIB", "tNetworkQueuePolicyRowStatus"), ("TIMETRA-QOS-MIB", "tNetworkQueuePolicyDescription"), ("TIMETRA-QOS-MIB", "tNetworkQueuePolicyLastChanged"), ("TIMETRA-QOS-MIB", "tNetworkQueuePolicyTableLastChanged"), ("TIMETRA-QOS-MIB", "tNetworkQueueRowStatus"), ("TIMETRA-QOS-MIB", "tNetworkQueuePoolName"), ("TIMETRA-QOS-MIB", "tNetworkQueueParent"), ("TIMETRA-QOS-MIB", "tNetworkQueueLevel"), ("TIMETRA-QOS-MIB", "tNetworkQueueWeight"), ("TIMETRA-QOS-MIB", "tNetworkQueueCIRLevel"), ("TIMETRA-QOS-MIB", "tNetworkQueueCIRWeight"), ("TIMETRA-QOS-MIB", "tNetworkQueueMCast"), ("TIMETRA-QOS-MIB", "tNetworkQueueExpedite"), ("TIMETRA-QOS-MIB", "tNetworkQueueCIR"), ("TIMETRA-QOS-MIB", "tNetworkQueuePIR"), ("TIMETRA-QOS-MIB", "tNetworkQueueCBS"), ("TIMETRA-QOS-MIB", "tNetworkQueueMBS"), ("TIMETRA-QOS-MIB", "tNetworkQueueHiPrioOnly"), ("TIMETRA-QOS-MIB", "tNetworkQueueLastChanged"), ("TIMETRA-QOS-MIB", "tNetworkQueueUsePortParent"), ("TIMETRA-QOS-MIB", "tNetworkQueuePortLvl"), ("TIMETRA-QOS-MIB", "tNetworkQueuePortWght"), ("TIMETRA-QOS-MIB", "tNetworkQueuePortCIRLvl"), ("TIMETRA-QOS-MIB", "tNetworkQueuePortCIRWght"), ("TIMETRA-QOS-MIB", "tNetworkQueuePortAvgOverhead"), ("TIMETRA-QOS-MIB", "tNetworkQueuePIRAdaptation"), ("TIMETRA-QOS-MIB", "tNetworkQueueCIRAdaptation"), ("TIMETRA-QOS-MIB", "tNetworkQueueTableLastChanged"), ("TIMETRA-QOS-MIB", "tNetworkQueueFCRowStatus"), ("TIMETRA-QOS-MIB", "tNetworkQueueFC"), ("TIMETRA-QOS-MIB", "tNetworkQueueFCMCast"), ("TIMETRA-QOS-MIB", "tNetworkQueueFCLastChanged"), ("TIMETRA-QOS-MIB", "tNetworkQueueFCTableLastChanged"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxQosNetworkV6v0Group = tmnxQosNetworkV6v0Group.setStatus('obsolete')
tmnxQosFrameBasedV6v0Group = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 16, 2, 28)).setObjects(("TIMETRA-QOS-MIB", "tSchedulerPolicyFrameBasedAccnt"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxQosFrameBasedV6v0Group = tmnxQosFrameBasedV6v0Group.setStatus('current')
tmnxQosObsoletedV6v0Group = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 16, 2, 29)).setObjects(("TIMETRA-QOS-MIB", "tSapEgressFCDot1PValue"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxQosObsoletedV6v0Group = tmnxQosObsoletedV6v0Group.setStatus('current')
tmnxQosNamedPoolPolicyV6v0Group = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 16, 2, 30)).setObjects(("TIMETRA-QOS-MIB", "tNamedPoolPolicyTableLastChanged"), ("TIMETRA-QOS-MIB", "tNamedPoolPolicyRowStatus"), ("TIMETRA-QOS-MIB", "tNamedPoolPolicyLastChanged"), ("TIMETRA-QOS-MIB", "tNamedPoolPolicyDescription"), ("TIMETRA-QOS-MIB", "tNamedPoolPolicyQ1DefaultWeight"), ("TIMETRA-QOS-MIB", "tNamedPoolPolicyQ1MdaWeight"), ("TIMETRA-QOS-MIB", "tNamedPoolPolicyQ1PortWeight"), ("TIMETRA-QOS-MIB", "tQ1NamedPoolTableLastChanged"), ("TIMETRA-QOS-MIB", "tQ1NamedPoolRowStatus"), ("TIMETRA-QOS-MIB", "tQ1NamedPoolLastChanged"), ("TIMETRA-QOS-MIB", "tQ1NamedPoolDescription"), ("TIMETRA-QOS-MIB", "tQ1NamedPoolNetworkAllocWeight"), ("TIMETRA-QOS-MIB", "tQ1NamedPoolAccessAllocWeight"), ("TIMETRA-QOS-MIB", "tQ1NamedPoolSlopePolicy"), ("TIMETRA-QOS-MIB", "tQ1NamedPoolReservedCbs"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxQosNamedPoolPolicyV6v0Group = tmnxQosNamedPoolPolicyV6v0Group.setStatus('current')
tmnxQosMcMlpppIngrGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 16, 2, 31)).setObjects(("TIMETRA-QOS-MIB", "tMcMlpppIngrProfDescription"), ("TIMETRA-QOS-MIB", "tMcMlpppIngrProfLastChanged"), ("TIMETRA-QOS-MIB", "tMcMlpppIngrProfRowStatus"), ("TIMETRA-QOS-MIB", "tMcMlpppIngrProfTableLastChanged"), ("TIMETRA-QOS-MIB", "tMcMlpppIngrClassReassemblyTmout"), ("TIMETRA-QOS-MIB", "tMcMlpppIngrClassLastChanged"), ("TIMETRA-QOS-MIB", "tMcMlpppIngrClassTableLastChanged"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxQosMcMlpppIngrGroup = tmnxQosMcMlpppIngrGroup.setStatus('current')
tmnxQosMcMlpppEgrGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 16, 2, 32)).setObjects(("TIMETRA-QOS-MIB", "tMcMlpppEgrProfDescription"), ("TIMETRA-QOS-MIB", "tMcMlpppEgrProfLastChanged"), ("TIMETRA-QOS-MIB", "tMcMlpppEgrProfRowStatus"), ("TIMETRA-QOS-MIB", "tMcMlpppEgrProfTableLastChanged"), ("TIMETRA-QOS-MIB", "tMcMlpppEgrClassMir"), ("TIMETRA-QOS-MIB", "tMcMlpppEgrClassWeight"), ("TIMETRA-QOS-MIB", "tMcMlpppEgrClassMaxSize"), ("TIMETRA-QOS-MIB", "tMcMlpppEgrClassLastChanged"), ("TIMETRA-QOS-MIB", "tMcMlpppEgrClassTableLastChanged"), ("TIMETRA-QOS-MIB", "tMcMlpppEgrFCClass"), ("TIMETRA-QOS-MIB", "tMcMlpppEgrFCLastChanged"), ("TIMETRA-QOS-MIB", "tMcMlpppEgrFCTableLastChanged"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxQosMcMlpppEgrGroup = tmnxQosMcMlpppEgrGroup.setStatus('current')
tmnxQosQueueObjGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 16, 2, 33)).setObjects(("TIMETRA-QOS-MIB", "tQosEgrQGroupDescr"), ("TIMETRA-QOS-MIB", "tQosEgrQGroupLastChanged"), ("TIMETRA-QOS-MIB", "tQosEgrQGroupRowStatus"), ("TIMETRA-QOS-MIB", "tQosEgrQGroupTableLastChanged"), ("TIMETRA-QOS-MIB", "tQosEgrQTableLastChanged"), ("TIMETRA-QOS-MIB", "tQosEgrQueueAdminCIR"), ("TIMETRA-QOS-MIB", "tQosEgrQueueAdminPIR"), ("TIMETRA-QOS-MIB", "tQosEgrQueueCBS"), ("TIMETRA-QOS-MIB", "tQosEgrQueueCIRAdaptation"), ("TIMETRA-QOS-MIB", "tQosEgrQueueCIRLevel"), ("TIMETRA-QOS-MIB", "tQosEgrQueueCIRWeight"), ("TIMETRA-QOS-MIB", "tQosEgrQueueExpedite"), ("TIMETRA-QOS-MIB", "tQosEgrQueueHiPrioOnly"), ("TIMETRA-QOS-MIB", "tQosEgrQueueLastChanged"), ("TIMETRA-QOS-MIB", "tQosEgrQueueLevel"), ("TIMETRA-QOS-MIB", "tQosEgrQueueMBS"), ("TIMETRA-QOS-MIB", "tQosEgrQueuePIRAdaptation"), ("TIMETRA-QOS-MIB", "tQosEgrQueueParent"), ("TIMETRA-QOS-MIB", "tQosEgrQueuePoolName"), ("TIMETRA-QOS-MIB", "tQosEgrQueuePortCIRLvl"), ("TIMETRA-QOS-MIB", "tQosEgrQueuePortCIRWght"), ("TIMETRA-QOS-MIB", "tQosEgrQueuePortLvl"), ("TIMETRA-QOS-MIB", "tQosEgrQueuePortWght"), ("TIMETRA-QOS-MIB", "tQosEgrQueueRowStatus"), ("TIMETRA-QOS-MIB", "tQosEgrQueueUsePortParent"), ("TIMETRA-QOS-MIB", "tQosEgrQueueWeight"), ("TIMETRA-QOS-MIB", "tQosIngQTableLastChanged"), ("TIMETRA-QOS-MIB", "tQosIngQGroupDescr"), ("TIMETRA-QOS-MIB", "tQosIngQGroupLastChanged"), ("TIMETRA-QOS-MIB", "tQosIngQGroupRowStatus"), ("TIMETRA-QOS-MIB", "tQosIngQGroupTableLastChanged"), ("TIMETRA-QOS-MIB", "tQosIngQueueAdminCIR"), ("TIMETRA-QOS-MIB", "tQosIngQueueAdminPIR"), ("TIMETRA-QOS-MIB", "tQosIngQueueCBS"), ("TIMETRA-QOS-MIB", "tQosIngQueueCIRAdaptation"), ("TIMETRA-QOS-MIB", "tQosIngQueueCIRLevel"), ("TIMETRA-QOS-MIB", "tQosIngQueueCIRWeight"), ("TIMETRA-QOS-MIB", "tQosIngQueueExpedite"), ("TIMETRA-QOS-MIB", "tQosIngQueueHiPrioOnly"), ("TIMETRA-QOS-MIB", "tQosIngQueueLastChanged"), ("TIMETRA-QOS-MIB", "tQosIngQueueLevel"), ("TIMETRA-QOS-MIB", "tQosIngQueueMBS"), ("TIMETRA-QOS-MIB", "tQosIngQueueMCast"), ("TIMETRA-QOS-MIB", "tQosIngQueueMode"), ("TIMETRA-QOS-MIB", "tQosIngQueuePIRAdaptation"), ("TIMETRA-QOS-MIB", "tQosIngQueueParent"), ("TIMETRA-QOS-MIB", "tQosIngQueuePoliced"), ("TIMETRA-QOS-MIB", "tQosIngQueuePoolName"), ("TIMETRA-QOS-MIB", "tQosIngQueueRowStatus"), ("TIMETRA-QOS-MIB", "tQosIngQueueWeight"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxQosQueueObjGroup = tmnxQosQueueObjGroup.setStatus('obsolete')
tQosQGrpFCGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 16, 2, 34)).setObjects(("TIMETRA-QOS-MIB", "tSapIngressFCQGrp"), ("TIMETRA-QOS-MIB", "tSapIngressFCQGrpMCast"), ("TIMETRA-QOS-MIB", "tSapIngressFCQGrpBCast"), ("TIMETRA-QOS-MIB", "tSapIngressFCQGrpUnknown"), ("TIMETRA-QOS-MIB", "tSapEgressFCQGrp"), ("TIMETRA-QOS-MIB", "tNetworkEgressFCQGrpQueue"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tQosQGrpFCGroup = tQosQGrpFCGroup.setStatus('current')
tmnxQosNetworkV7v0Group = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 16, 2, 35)).setObjects(("TIMETRA-QOS-MIB", "tNetworkPolicyRowStatus"), ("TIMETRA-QOS-MIB", "tNetworkPolicyScope"), ("TIMETRA-QOS-MIB", "tNetworkPolicyDescription"), ("TIMETRA-QOS-MIB", "tNetworkPolicyIngressDefaultActionFC"), ("TIMETRA-QOS-MIB", "tNetworkPolicyIngressDefaultActionProfile"), ("TIMETRA-QOS-MIB", "tNetworkPolicyEgressRemark"), ("TIMETRA-QOS-MIB", "tNetworkPolicyLastChanged"), ("TIMETRA-QOS-MIB", "tNetworkPolicyIngressLerUseDscp"), ("TIMETRA-QOS-MIB", "tNetworkPolicyEgressRemarkDscp"), ("TIMETRA-QOS-MIB", "tNetworkPolicyTableLastChanged"), ("TIMETRA-QOS-MIB", "tNetworkIngressDSCPRowStatus"), ("TIMETRA-QOS-MIB", "tNetworkIngressDSCPFC"), ("TIMETRA-QOS-MIB", "tNetworkIngressDSCPProfile"), ("TIMETRA-QOS-MIB", "tNetworkIngressDSCPLastChanged"), ("TIMETRA-QOS-MIB", "tNetworkIngressDSCPTableLastChanged"), ("TIMETRA-QOS-MIB", "tNetworkIngressDot1pRowStatus"), ("TIMETRA-QOS-MIB", "tNetworkIngressDot1pFC"), ("TIMETRA-QOS-MIB", "tNetworkIngressDot1pProfile"), ("TIMETRA-QOS-MIB", "tNetworkIngressDot1pLastChanged"), ("TIMETRA-QOS-MIB", "tNetworkIngressDot1pTableLastChanged"), ("TIMETRA-QOS-MIB", "tNetworkIngressLSPEXPRowStatus"), ("TIMETRA-QOS-MIB", "tNetworkIngressLSPEXPFC"), ("TIMETRA-QOS-MIB", "tNetworkIngressLSPEXPProfile"), ("TIMETRA-QOS-MIB", "tNetworkIngressLSPEXPLastChanged"), ("TIMETRA-QOS-MIB", "tNetworkIngressLSPEXPTableLastChanged"), ("TIMETRA-QOS-MIB", "tNetworkEgressFCDSCPInProfile"), ("TIMETRA-QOS-MIB", "tNetworkEgressFCDSCPOutProfile"), ("TIMETRA-QOS-MIB", "tNetworkEgressFCLspExpInProfile"), ("TIMETRA-QOS-MIB", "tNetworkEgressFCLspExpOutProfile"), ("TIMETRA-QOS-MIB", "tNetworkEgressFCDot1pInProfile"), ("TIMETRA-QOS-MIB", "tNetworkEgressFCDot1pOutProfile"), ("TIMETRA-QOS-MIB", "tNetworkEgressFCLastChanged"), ("TIMETRA-QOS-MIB", "tNetworkEgressFCForceDEValue"), ("TIMETRA-QOS-MIB", "tNetworkEgressFCDEMark"), ("TIMETRA-QOS-MIB", "tNetworkEgressFCTableLastChanged"), ("TIMETRA-QOS-MIB", "tNetworkQueuePolicyRowStatus"), ("TIMETRA-QOS-MIB", "tNetworkQueuePolicyDescription"), ("TIMETRA-QOS-MIB", "tNetworkQueuePolicyLastChanged"), ("TIMETRA-QOS-MIB", "tNetworkQueuePolicyTableLastChanged"), ("TIMETRA-QOS-MIB", "tNetworkQueueRowStatus"), ("TIMETRA-QOS-MIB", "tNetworkQueuePoolName"), ("TIMETRA-QOS-MIB", "tNetworkQueueParent"), ("TIMETRA-QOS-MIB", "tNetworkQueueLevel"), ("TIMETRA-QOS-MIB", "tNetworkQueueWeight"), ("TIMETRA-QOS-MIB", "tNetworkQueueCIRLevel"), ("TIMETRA-QOS-MIB", "tNetworkQueueCIRWeight"), ("TIMETRA-QOS-MIB", "tNetworkQueueMCast"), ("TIMETRA-QOS-MIB", "tNetworkQueueExpedite"), ("TIMETRA-QOS-MIB", "tNetworkQueueCIR"), ("TIMETRA-QOS-MIB", "tNetworkQueuePIR"), ("TIMETRA-QOS-MIB", "tNetworkQueueCBS"), ("TIMETRA-QOS-MIB", "tNetworkQueueMBS"), ("TIMETRA-QOS-MIB", "tNetworkQueueHiPrioOnly"), ("TIMETRA-QOS-MIB", "tNetworkQueueLastChanged"), ("TIMETRA-QOS-MIB", "tNetworkQueueUsePortParent"), ("TIMETRA-QOS-MIB", "tNetworkQueuePortLvl"), ("TIMETRA-QOS-MIB", "tNetworkQueuePortWght"), ("TIMETRA-QOS-MIB", "tNetworkQueuePortCIRLvl"), ("TIMETRA-QOS-MIB", "tNetworkQueuePortCIRWght"), ("TIMETRA-QOS-MIB", "tNetworkQueuePortAvgOverhead"), ("TIMETRA-QOS-MIB", "tNetworkQueuePIRAdaptation"), ("TIMETRA-QOS-MIB", "tNetworkQueueCIRAdaptation"), ("TIMETRA-QOS-MIB", "tNetworkQueueTableLastChanged"), ("TIMETRA-QOS-MIB", "tNetworkQueueFCRowStatus"), ("TIMETRA-QOS-MIB", "tNetworkQueueFC"), ("TIMETRA-QOS-MIB", "tNetworkQueueFCMCast"), ("TIMETRA-QOS-MIB", "tNetworkQueueFCLastChanged"), ("TIMETRA-QOS-MIB", "tNetworkQueueFCTableLastChanged"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxQosNetworkV7v0Group = tmnxQosNetworkV7v0Group.setStatus('current')
tmnxQosHsmdaV7v0Group = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 16, 2, 36)).setObjects(("TIMETRA-QOS-MIB", "tHsmdaSchedulerPlcyRowStatus"), ("TIMETRA-QOS-MIB", "tHsmdaSchedulerPlcyDescription"), ("TIMETRA-QOS-MIB", "tHsmdaSchedulerPlcyMaxRate"), ("TIMETRA-QOS-MIB", "tHsmdaSchedulerPlcyLvl1Rate"), ("TIMETRA-QOS-MIB", "tHsmdaSchedulerPlcyLvl1GrpId"), ("TIMETRA-QOS-MIB", "tHsmdaSchedulerPlcyLvl1WgtInGrp"), ("TIMETRA-QOS-MIB", "tHsmdaSchedulerPlcyLvl2Rate"), ("TIMETRA-QOS-MIB", "tHsmdaSchedulerPlcyLvl2GrpId"), ("TIMETRA-QOS-MIB", "tHsmdaSchedulerPlcyLvl2WgtInGrp"), ("TIMETRA-QOS-MIB", "tHsmdaSchedulerPlcyLvl3Rate"), ("TIMETRA-QOS-MIB", "tHsmdaSchedulerPlcyLvl3GrpId"), ("TIMETRA-QOS-MIB", "tHsmdaSchedulerPlcyLvl3WgtInGrp"), ("TIMETRA-QOS-MIB", "tHsmdaSchedulerPlcyLvl4Rate"), ("TIMETRA-QOS-MIB", "tHsmdaSchedulerPlcyLvl4GrpId"), ("TIMETRA-QOS-MIB", "tHsmdaSchedulerPlcyLvl4WgtInGrp"), ("TIMETRA-QOS-MIB", "tHsmdaSchedulerPlcyLvl5Rate"), ("TIMETRA-QOS-MIB", "tHsmdaSchedulerPlcyLvl5GrpId"), ("TIMETRA-QOS-MIB", "tHsmdaSchedulerPlcyLvl5WgtInGrp"), ("TIMETRA-QOS-MIB", "tHsmdaSchedulerPlcyLvl6Rate"), ("TIMETRA-QOS-MIB", "tHsmdaSchedulerPlcyLvl6GrpId"), ("TIMETRA-QOS-MIB", "tHsmdaSchedulerPlcyLvl6WgtInGrp"), ("TIMETRA-QOS-MIB", "tHsmdaSchedulerPlcyLvl7Rate"), ("TIMETRA-QOS-MIB", "tHsmdaSchedulerPlcyLvl7GrpId"), ("TIMETRA-QOS-MIB", "tHsmdaSchedulerPlcyLvl7WgtInGrp"), ("TIMETRA-QOS-MIB", "tHsmdaSchedulerPlcyLvl8Rate"), ("TIMETRA-QOS-MIB", "tHsmdaSchedulerPlcyLvl8GrpId"), ("TIMETRA-QOS-MIB", "tHsmdaSchedulerPlcyLvl8WgtInGrp"), ("TIMETRA-QOS-MIB", "tHsmdaSchedulerPlcyLastChanged"), ("TIMETRA-QOS-MIB", "tHsmdaSchedulerPlcyGrp1Rate"), ("TIMETRA-QOS-MIB", "tHsmdaSchedulerPlcyGrp2Rate"), ("TIMETRA-QOS-MIB", "tSapEgressFCHsmdaQueue"), ("TIMETRA-QOS-MIB", "tSapEgressHsmdaQueueRowStatus"), ("TIMETRA-QOS-MIB", "tSapEgressHsmdaQueueCIRAdaptn"), ("TIMETRA-QOS-MIB", "tSapEgressHsmdaQueuePIRAdaptn"), ("TIMETRA-QOS-MIB", "tSapEgressHsmdaQueueAdminPIR"), ("TIMETRA-QOS-MIB", "tSapEgressHsmdaQueueAdminCIR"), ("TIMETRA-QOS-MIB", "tSapEgressHsmdaQueueSlopePolicy"), ("TIMETRA-QOS-MIB", "tSapEgressHsmdaQueueLastChanged"), ("TIMETRA-QOS-MIB", "tSapIngressHsmdaPacketOffset"), ("TIMETRA-QOS-MIB", "tSapIngressDefFCHsmdaCntrOvr"), ("TIMETRA-QOS-MIB", "tSapIngressDot1pHsmdaCntrOvr"), ("TIMETRA-QOS-MIB", "tSapIngressDSCPHsmdaCntrOvr"), ("TIMETRA-QOS-MIB", "tSapIngressFCHsmdaQueue"), ("TIMETRA-QOS-MIB", "tSapIngressFCHsmdaMCastQueue"), ("TIMETRA-QOS-MIB", "tSapIngressFCHsmdaBCastQueue"), ("TIMETRA-QOS-MIB", "tSapIngressPrecHsmdaCntrOvr"), ("TIMETRA-QOS-MIB", "tSapIngressHsmdaQueueRowStatus"), ("TIMETRA-QOS-MIB", "tSapIngressHsmdaQueueLastChanged"), ("TIMETRA-QOS-MIB", "tSapIngressHsmdaQueueCIRAdaptn"), ("TIMETRA-QOS-MIB", "tSapIngressHsmdaQueuePIRAdaptn"), ("TIMETRA-QOS-MIB", "tSapIngressHsmdaQueueAdminPIR"), ("TIMETRA-QOS-MIB", "tSapIngressHsmdaQueueAdminCIR"), ("TIMETRA-QOS-MIB", "tSapIngressHsmdaQueueSlopePolicy"), ("TIMETRA-QOS-MIB", "tSapIngressHsmdaQueuePoliced"), ("TIMETRA-QOS-MIB", "tHsmdaPoolPolicyRowStatus"), ("TIMETRA-QOS-MIB", "tHsmdaPoolLastChanged"), ("TIMETRA-QOS-MIB", "tHsmdaPoolDescription"), ("TIMETRA-QOS-MIB", "tHsmdaPoolSystemReserve"), ("TIMETRA-QOS-MIB", "tHsmdaPoolRoot1AllocWeight"), ("TIMETRA-QOS-MIB", "tHsmdaPoolRoot2AllocWeight"), ("TIMETRA-QOS-MIB", "tHsmdaPoolRoot3AllocWeight"), ("TIMETRA-QOS-MIB", "tHsmdaPoolRoot4AllocWeight"), ("TIMETRA-QOS-MIB", "tHsmdaPoolRoot5AllocWeight"), ("TIMETRA-QOS-MIB", "tHsmdaPoolRoot6AllocWeight"), ("TIMETRA-QOS-MIB", "tHsmdaPoolRoot7AllocWeight"), ("TIMETRA-QOS-MIB", "tHsmdaPoolRoot8AllocWeight"), ("TIMETRA-QOS-MIB", "tHsmdaPoolClass1Parent"), ("TIMETRA-QOS-MIB", "tHsmdaPoolClass1AllocPercent"), ("TIMETRA-QOS-MIB", "tHsmdaPoolClass2Parent"), ("TIMETRA-QOS-MIB", "tHsmdaPoolClass2AllocPercent"), ("TIMETRA-QOS-MIB", "tHsmdaPoolClass3Parent"), ("TIMETRA-QOS-MIB", "tHsmdaPoolClass3AllocPercent"), ("TIMETRA-QOS-MIB", "tHsmdaPoolClass4Parent"), ("TIMETRA-QOS-MIB", "tHsmdaPoolClass4AllocPercent"), ("TIMETRA-QOS-MIB", "tHsmdaPoolClass5Parent"), ("TIMETRA-QOS-MIB", "tHsmdaPoolClass5AllocPercent"), ("TIMETRA-QOS-MIB", "tHsmdaPoolClass6Parent"), ("TIMETRA-QOS-MIB", "tHsmdaPoolClass6AllocPercent"), ("TIMETRA-QOS-MIB", "tHsmdaPoolClass7Parent"), ("TIMETRA-QOS-MIB", "tHsmdaPoolClass7AllocPercent"), ("TIMETRA-QOS-MIB", "tHsmdaPoolClass8Parent"), ("TIMETRA-QOS-MIB", "tHsmdaPoolClass8AllocPercent"), ("TIMETRA-QOS-MIB", "tHsmdaSlopePolicyRowStatus"), ("TIMETRA-QOS-MIB", "tHsmdaSlopeLastChanged"), ("TIMETRA-QOS-MIB", "tHsmdaSlopeDescription"), ("TIMETRA-QOS-MIB", "tHsmdaSlopeQueueMbs"), ("TIMETRA-QOS-MIB", "tHsmdaSlopeHiAdminStatus"), ("TIMETRA-QOS-MIB", "tHsmdaSlopeHiStartDepth"), ("TIMETRA-QOS-MIB", "tHsmdaSlopeHiMaxDepth"), ("TIMETRA-QOS-MIB", "tHsmdaSlopeHiMaxProbability"), ("TIMETRA-QOS-MIB", "tHsmdaSlopeLoAdminStatus"), ("TIMETRA-QOS-MIB", "tHsmdaSlopeLoStartDepth"), ("TIMETRA-QOS-MIB", "tHsmdaSlopeLoMaxDepth"), ("TIMETRA-QOS-MIB", "tHsmdaSlopeLoMaxProbability"), ("TIMETRA-QOS-MIB", "tSapIngrHsmdaQueueTblLastChngd"), ("TIMETRA-QOS-MIB", "tSapEgrHsmdaQueueTblLastChngd"), ("TIMETRA-QOS-MIB", "tHsmdaSchedPlcyTblLastChngd"), ("TIMETRA-QOS-MIB", "tHsmdaSchedPlcyGrpTblLastChngd"), ("TIMETRA-QOS-MIB", "tHsmdaPoolPlcyTblLastChngd"), ("TIMETRA-QOS-MIB", "tHsmdaSlopePolicyTableLastChanged"), ("TIMETRA-QOS-MIB", "tSapIngressIPCritHsmdaCntrOvr"), ("TIMETRA-QOS-MIB", "tSapEgressDSCPRowStatus"), ("TIMETRA-QOS-MIB", "tSapEgressDSCPLastChanged"), ("TIMETRA-QOS-MIB", "tSapEgressDSCPHsmdaCntrOverride"), ("TIMETRA-QOS-MIB", "tSapEgressPrecRowStatus"), ("TIMETRA-QOS-MIB", "tSapEgressPrecLastChanged"), ("TIMETRA-QOS-MIB", "tSapEgressPrecHsmdaCntrOverride"), ("TIMETRA-QOS-MIB", "tSapEgrIPCritRowStatus"), ("TIMETRA-QOS-MIB", "tSapEgrIPCritLastChanged"), ("TIMETRA-QOS-MIB", "tSapEgrIPCritDescription"), ("TIMETRA-QOS-MIB", "tSapEgrIPCritActionHsmdaCntrOvr"), ("TIMETRA-QOS-MIB", "tSapEgrIPCritSourceIpAddrType"), ("TIMETRA-QOS-MIB", "tSapEgrIPCritSourceIpAddr"), ("TIMETRA-QOS-MIB", "tSapEgrIPCritSourceIpMask"), ("TIMETRA-QOS-MIB", "tSapEgrIPCritDestIpAddrType"), ("TIMETRA-QOS-MIB", "tSapEgrIPCritDestIpAddr"), ("TIMETRA-QOS-MIB", "tSapEgrIPCritDestIpMask"), ("TIMETRA-QOS-MIB", "tSapEgrIPCritProtocol"), ("TIMETRA-QOS-MIB", "tSapEgrIPCritSourcePortValue1"), ("TIMETRA-QOS-MIB", "tSapEgrIPCritSourcePortValue2"), ("TIMETRA-QOS-MIB", "tSapEgrIPCritSourcePortOperator"), ("TIMETRA-QOS-MIB", "tSapEgrIPCritDestPortValue1"), ("TIMETRA-QOS-MIB", "tSapEgrIPCritDestPortValue2"), ("TIMETRA-QOS-MIB", "tSapEgrIPCritDestPortOperator"), ("TIMETRA-QOS-MIB", "tSapEgrIPCritDSCP"), ("TIMETRA-QOS-MIB", "tSapEgrIPCritFragment"), ("TIMETRA-QOS-MIB", "tSapEgressMatchCriteria"), ("TIMETRA-QOS-MIB", "tSapEgressHsmdaPacketOffset"), ("TIMETRA-QOS-MIB", "tSapEgrIPCritActionFC"), ("TIMETRA-QOS-MIB", "tSapEgrIPCritActionProfile"), ("TIMETRA-QOS-MIB", "tSapEgressDSCPfc"), ("TIMETRA-QOS-MIB", "tSapEgressDSCPprofile"), ("TIMETRA-QOS-MIB", "tSapEgressPrecFC"), ("TIMETRA-QOS-MIB", "tSapEgressPrecProfile"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxQosHsmdaV7v0Group = tmnxQosHsmdaV7v0Group.setStatus('obsolete')
tmnxQosSapAtmV7v0Group = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 16, 2, 37)).setObjects(("TIMETRA-QOS-MIB", "tSapIngressMacCriteriaAtmVci"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxQosSapAtmV7v0Group = tmnxQosSapAtmV7v0Group.setStatus('current')
tmnxQosMcFrIngrGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 16, 2, 38)).setObjects(("TIMETRA-QOS-MIB", "tMcFrIngrProfDescription"), ("TIMETRA-QOS-MIB", "tMcFrIngrProfLastChanged"), ("TIMETRA-QOS-MIB", "tMcFrIngrProfRowStatus"), ("TIMETRA-QOS-MIB", "tMcFrIngrProfTableLastChanged"), ("TIMETRA-QOS-MIB", "tMcFrIngrClassReassemblyTmout"), ("TIMETRA-QOS-MIB", "tMcFrIngrClassLastChanged"), ("TIMETRA-QOS-MIB", "tMcFrIngrClassTableLastChanged"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxQosMcFrIngrGroup = tmnxQosMcFrIngrGroup.setStatus('current')
tmnxQosMcFrEgrGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 16, 2, 39)).setObjects(("TIMETRA-QOS-MIB", "tMcFrEgrProfDescription"), ("TIMETRA-QOS-MIB", "tMcFrEgrProfLastChanged"), ("TIMETRA-QOS-MIB", "tMcFrEgrProfRowStatus"), ("TIMETRA-QOS-MIB", "tMcFrEgrProfTableLastChanged"), ("TIMETRA-QOS-MIB", "tMcFrEgrClassMir"), ("TIMETRA-QOS-MIB", "tMcFrEgrClassWeight"), ("TIMETRA-QOS-MIB", "tMcFrEgrClassMaxSize"), ("TIMETRA-QOS-MIB", "tMcFrEgrClassLastChanged"), ("TIMETRA-QOS-MIB", "tMcFrEgrClassTableLastChanged"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxQosMcFrEgrGroup = tmnxQosMcFrEgrGroup.setStatus('current')
tmnxQosSapEgrQWredGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 16, 2, 40)).setObjects(("TIMETRA-QOS-MIB", "tSapEgressQueueXPWredQ"), ("TIMETRA-QOS-MIB", "tSapEgressQueueXPWredQSlope"), ("TIMETRA-QOS-MIB", "tQosEgrQueueXPWredQ"), ("TIMETRA-QOS-MIB", "tQosEgrQueueXPWredQSlope"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxQosSapEgrQWredGroup = tmnxQosSapEgrQWredGroup.setStatus('current')
tmnxQosSapIngressV8v0Group = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 16, 2, 41)).setObjects(("TIMETRA-QOS-MIB", "tSapIngressRowStatus"), ("TIMETRA-QOS-MIB", "tSapIngressScope"), ("TIMETRA-QOS-MIB", "tSapIngressDescription"), ("TIMETRA-QOS-MIB", "tSapIngressDefaultFC"), ("TIMETRA-QOS-MIB", "tSapIngressDefaultFCPriority"), ("TIMETRA-QOS-MIB", "tSapIngressMatchCriteria"), ("TIMETRA-QOS-MIB", "tSapIngressLastChanged"), ("TIMETRA-QOS-MIB", "tSapIngressTableLastChanged"), ("TIMETRA-QOS-MIB", "tSapIngressQueueRowStatus"), ("TIMETRA-QOS-MIB", "tSapIngressQueueParent"), ("TIMETRA-QOS-MIB", "tSapIngressQueueLevel"), ("TIMETRA-QOS-MIB", "tSapIngressQueueWeight"), ("TIMETRA-QOS-MIB", "tSapIngressQueueCIRLevel"), ("TIMETRA-QOS-MIB", "tSapIngressQueueCIRWeight"), ("TIMETRA-QOS-MIB", "tSapIngressQueueMCast"), ("TIMETRA-QOS-MIB", "tSapIngressQueueExpedite"), ("TIMETRA-QOS-MIB", "tSapIngressQueueCBS"), ("TIMETRA-QOS-MIB", "tSapIngressQueueHiPrioOnly"), ("TIMETRA-QOS-MIB", "tSapIngressQueueCIRAdaptation"), ("TIMETRA-QOS-MIB", "tSapIngressQueuePIRAdaptation"), ("TIMETRA-QOS-MIB", "tSapIngressQueueAdminPIR"), ("TIMETRA-QOS-MIB", "tSapIngressQueueAdminCIR"), ("TIMETRA-QOS-MIB", "tSapIngressQueueLastChanged"), ("TIMETRA-QOS-MIB", "tSapIngressQueueMode"), ("TIMETRA-QOS-MIB", "tSapIngressQueuePoolName"), ("TIMETRA-QOS-MIB", "tSapIngressQueueTableLastChanged"), ("TIMETRA-QOS-MIB", "tSapIngressQueuePoliced"), ("TIMETRA-QOS-MIB", "tSapIngressDSCPRowStatus"), ("TIMETRA-QOS-MIB", "tSapIngressDSCPFC"), ("TIMETRA-QOS-MIB", "tSapIngressDSCPPriority"), ("TIMETRA-QOS-MIB", "tSapIngressDSCPLastChanged"), ("TIMETRA-QOS-MIB", "tSapIngressDSCPTableLastChanged"), ("TIMETRA-QOS-MIB", "tSapIngressDot1pRowStatus"), ("TIMETRA-QOS-MIB", "tSapIngressDot1pFC"), ("TIMETRA-QOS-MIB", "tSapIngressDot1pPriority"), ("TIMETRA-QOS-MIB", "tSapIngressDot1pLastChanged"), ("TIMETRA-QOS-MIB", "tSapIngressDot1pTableLastChanged"), ("TIMETRA-QOS-MIB", "tSapIngressIPCriteriaRowStatus"), ("TIMETRA-QOS-MIB", "tSapIngressIPCriteriaDescription"), ("TIMETRA-QOS-MIB", "tSapIngressIPCriteriaActionFC"), ("TIMETRA-QOS-MIB", "tSapIngressIPCriteriaActionPriority"), ("TIMETRA-QOS-MIB", "tSapIngressIPCriteriaSourceIpAddr"), ("TIMETRA-QOS-MIB", "tSapIngressIPCriteriaSourceIpMask"), ("TIMETRA-QOS-MIB", "tSapIngressIPCriteriaDestIpAddr"), ("TIMETRA-QOS-MIB", "tSapIngressIPCriteriaDestIpMask"), ("TIMETRA-QOS-MIB", "tSapIngressIPCriteriaProtocol"), ("TIMETRA-QOS-MIB", "tSapIngressIPCriteriaSourcePortValue1"), ("TIMETRA-QOS-MIB", "tSapIngressIPCriteriaSourcePortValue2"), ("TIMETRA-QOS-MIB", "tSapIngressIPCriteriaSourcePortOperator"), ("TIMETRA-QOS-MIB", "tSapIngressIPCriteriaDestPortValue1"), ("TIMETRA-QOS-MIB", "tSapIngressIPCriteriaDestPortValue2"), ("TIMETRA-QOS-MIB", "tSapIngressIPCriteriaDestPortOperator"), ("TIMETRA-QOS-MIB", "tSapIngressIPCriteriaDSCP"), ("TIMETRA-QOS-MIB", "tSapIngressIPCriteriaFragment"), ("TIMETRA-QOS-MIB", "tSapIngressIPCriteriaLastChanged"), ("TIMETRA-QOS-MIB", "tSapIngressIPCriteriaTableLastChanged"), ("TIMETRA-QOS-MIB", "tSapIngressMacCriteriaRowStatus"), ("TIMETRA-QOS-MIB", "tSapIngressMacCriteriaDescription"), ("TIMETRA-QOS-MIB", "tSapIngressMacCriteriaActionFC"), ("TIMETRA-QOS-MIB", "tSapIngressMacCriteriaActionPriority"), ("TIMETRA-QOS-MIB", "tSapIngressMacCriteriaFrameType"), ("TIMETRA-QOS-MIB", "tSapIngressMacCriteriaSrcMacAddr"), ("TIMETRA-QOS-MIB", "tSapIngressMacCriteriaSrcMacMask"), ("TIMETRA-QOS-MIB", "tSapIngressMacCriteriaDstMacAddr"), ("TIMETRA-QOS-MIB", "tSapIngressMacCriteriaDstMacMask"), ("TIMETRA-QOS-MIB", "tSapIngressMacCriteriaDot1PValue"), ("TIMETRA-QOS-MIB", "tSapIngressMacCriteriaDot1PMask"), ("TIMETRA-QOS-MIB", "tSapIngressMacCriteriaEthernetType"), ("TIMETRA-QOS-MIB", "tSapIngressMacCriteriaDSAP"), ("TIMETRA-QOS-MIB", "tSapIngressMacCriteriaDSAPMask"), ("TIMETRA-QOS-MIB", "tSapIngressMacCriteriaSSAP"), ("TIMETRA-QOS-MIB", "tSapIngressMacCriteriaSSAPMask"), ("TIMETRA-QOS-MIB", "tSapIngressMacCriteriaSnapPid"), ("TIMETRA-QOS-MIB", "tSapIngressMacCriteriaSnapOui"), ("TIMETRA-QOS-MIB", "tSapIngressMacCriteriaLastChanged"), ("TIMETRA-QOS-MIB", "tSapIngressMacCriteriaTableLastChanged"), ("TIMETRA-QOS-MIB", "tSapIngressFCRowStatus"), ("TIMETRA-QOS-MIB", "tSapIngressFCQueue"), ("TIMETRA-QOS-MIB", "tSapIngressFCMCastQueue"), ("TIMETRA-QOS-MIB", "tSapIngressFCBCastQueue"), ("TIMETRA-QOS-MIB", "tSapIngressFCUnknownQueue"), ("TIMETRA-QOS-MIB", "tSapIngressFCLastChanged"), ("TIMETRA-QOS-MIB", "tSapIngressFCInProfRemark"), ("TIMETRA-QOS-MIB", "tSapIngressFCInProfDscp"), ("TIMETRA-QOS-MIB", "tSapIngressFCInProfPrec"), ("TIMETRA-QOS-MIB", "tSapIngressFCDE1OutOfProfile"), ("TIMETRA-QOS-MIB", "tSapIngressFCOutProfRemark"), ("TIMETRA-QOS-MIB", "tSapIngressFCOutProfDscp"), ("TIMETRA-QOS-MIB", "tSapIngressFCOutProfPrec"), ("TIMETRA-QOS-MIB", "tSapIngressFCProfile"), ("TIMETRA-QOS-MIB", "tSapIngressFCTableLastChanged"), ("TIMETRA-QOS-MIB", "tSapIngressPrecRowStatus"), ("TIMETRA-QOS-MIB", "tSapIngressPrecFC"), ("TIMETRA-QOS-MIB", "tSapIngressPrecFCPriority"), ("TIMETRA-QOS-MIB", "tSapIngressPrecLastChanged"), ("TIMETRA-QOS-MIB", "tSapIngressPrecTableLastChanged"), ("TIMETRA-QOS-MIB", "tSapIngressLspExpRowStatus"), ("TIMETRA-QOS-MIB", "tSapIngressLspExpLastChanged"), ("TIMETRA-QOS-MIB", "tSapIngressLspExpFC"), ("TIMETRA-QOS-MIB", "tSapIngressLspExpFCPriority"), ("TIMETRA-QOS-MIB", "tSapIngressLspExpHsmdaCntrOvr"), ("TIMETRA-QOS-MIB", "tSapIngressLspExpTableLastChange"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxQosSapIngressV8v0Group = tmnxQosSapIngressV8v0Group.setStatus('obsolete')
tmnxQosPolicerV8v0Group = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 16, 2, 42)).setObjects(("TIMETRA-QOS-MIB", "tQosPolicerCtrlPolDescr"), ("TIMETRA-QOS-MIB", "tQosPolicerCtrlPolLastChgd"), ("TIMETRA-QOS-MIB", "tQosPolicerCtrlPolRowStatus"), ("TIMETRA-QOS-MIB", "tQosPolicerCtrlPolTblLastChgd"), ("TIMETRA-QOS-MIB", "tSapIngPolicerPktOffset"), ("TIMETRA-QOS-MIB", "tSapIngPolicerAdminCIR"), ("TIMETRA-QOS-MIB", "tSapIngPolicerAdminPIR"), ("TIMETRA-QOS-MIB", "tSapIngPolicerCIRAdaptation"), ("TIMETRA-QOS-MIB", "tSapIngPolicerDescr"), ("TIMETRA-QOS-MIB", "tSapIngPolicerHiPrioOnly"), ("TIMETRA-QOS-MIB", "tSapIngPolicerLastChanged"), ("TIMETRA-QOS-MIB", "tSapIngPolicerLevel"), ("TIMETRA-QOS-MIB", "tSapIngPolicerPIRAdaptation"), ("TIMETRA-QOS-MIB", "tSapIngPolicerParent"), ("TIMETRA-QOS-MIB", "tSapIngPolicerRowStatus"), ("TIMETRA-QOS-MIB", "tSapIngPolicerStatMode"), ("TIMETRA-QOS-MIB", "tSapIngPolicerTableLastChanged"), ("TIMETRA-QOS-MIB", "tSapIngPolicerCBS"), ("TIMETRA-QOS-MIB", "tSapIngPolicerMBS"), ("TIMETRA-QOS-MIB", "tSapIngPolicerWeight"), ("TIMETRA-QOS-MIB", "tSapEgrPolicerPktOffset"), ("TIMETRA-QOS-MIB", "tSapEgrPolicerAdminCIR"), ("TIMETRA-QOS-MIB", "tSapEgrPolicerAdminPIR"), ("TIMETRA-QOS-MIB", "tSapEgrPolicerCIRAdaptation"), ("TIMETRA-QOS-MIB", "tSapEgrPolicerDescr"), ("TIMETRA-QOS-MIB", "tSapEgrPolicerHiPrioOnly"), ("TIMETRA-QOS-MIB", "tSapEgrPolicerLastChanged"), ("TIMETRA-QOS-MIB", "tSapEgrPolicerLevel"), ("TIMETRA-QOS-MIB", "tSapEgrPolicerPIRAdaptation"), ("TIMETRA-QOS-MIB", "tSapEgrPolicerParent"), ("TIMETRA-QOS-MIB", "tSapEgrPolicerRowStatus"), ("TIMETRA-QOS-MIB", "tSapEgrPolicerStatMode"), ("TIMETRA-QOS-MIB", "tSapEgrPolicerTableLastChanged"), ("TIMETRA-QOS-MIB", "tSapEgrPolicerCBS"), ("TIMETRA-QOS-MIB", "tSapEgrPolicerMBS"), ("TIMETRA-QOS-MIB", "tSapEgrPolicerWeight"), ("TIMETRA-QOS-MIB", "tSapIngressFCBCastPolicer"), ("TIMETRA-QOS-MIB", "tSapIngressFCMCastPolicer"), ("TIMETRA-QOS-MIB", "tSapIngressFCPolicer"), ("TIMETRA-QOS-MIB", "tSapIngressFCUnknownPolicer"), ("TIMETRA-QOS-MIB", "tQosPolicerArbiterDescr"), ("TIMETRA-QOS-MIB", "tQosPolicerArbiterLastChgd"), ("TIMETRA-QOS-MIB", "tQosPolicerArbiterLevel"), ("TIMETRA-QOS-MIB", "tQosPolicerArbiterParent"), ("TIMETRA-QOS-MIB", "tQosPolicerArbiterRate"), ("TIMETRA-QOS-MIB", "tQosPolicerArbiterRowStatus"), ("TIMETRA-QOS-MIB", "tQosPolicerArbiterTblLastChgd"), ("TIMETRA-QOS-MIB", "tQosPolicerArbiterWeight"), ("TIMETRA-QOS-MIB", "tQosPolicerCtrlPolMinMBSSep"), ("TIMETRA-QOS-MIB", "tQosPolicerCtrlPolRootMaxRate"), ("TIMETRA-QOS-MIB", "tQosPolicerLevelCumMBS"), ("TIMETRA-QOS-MIB", "tQosPolicerLevelLastChgd"), ("TIMETRA-QOS-MIB", "tQosPolicerLevelTblLastChgd"), ("TIMETRA-QOS-MIB", "tSapEgressFCPolicer"), ("TIMETRA-QOS-MIB", "tQosPolicerLevelFixedMBS"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxQosPolicerV8v0Group = tmnxQosPolicerV8v0Group.setStatus('current')
tQosQGrpV8v0Group = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 16, 2, 43)).setObjects(("TIMETRA-QOS-MIB", "tQosEgrQGroupFCRowStatus"), ("TIMETRA-QOS-MIB", "tQosEgrQGroupFCLastChanged"), ("TIMETRA-QOS-MIB", "tQosEgrQGroupFCQueue"), ("TIMETRA-QOS-MIB", "tQosEgrQGroupFCTableLastChanged"), ("TIMETRA-QOS-MIB", "tQosIngQueueMBSBytes"), ("TIMETRA-QOS-MIB", "tQosEgrQueueMBSBytes"), ("TIMETRA-QOS-MIB", "tSapEgressQueueMBSBytes"), ("TIMETRA-QOS-MIB", "tSapIngressQueueMBSBytes"), ("TIMETRA-QOS-MIB", "tQosEgrQueueAdminPIRPercent"), ("TIMETRA-QOS-MIB", "tQosEgrQueueAdminCIRPercent"), ("TIMETRA-QOS-MIB", "tQosEgrQueueRateType"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tQosQGrpV8v0Group = tQosQGrpV8v0Group.setStatus('current')
tQosFCQGrpFC8v0Group = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 16, 2, 44)).setObjects(("TIMETRA-QOS-MIB", "tSapEgressFCQGrpFC"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tQosFCQGrpFC8v0Group = tQosFCQGrpFC8v0Group.setStatus('current')
tmnxQosSapEgressV8v0Group = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 16, 2, 45)).setObjects(("TIMETRA-QOS-MIB", "tSapEgressRowStatus"), ("TIMETRA-QOS-MIB", "tSapEgressScope"), ("TIMETRA-QOS-MIB", "tSapEgressDescription"), ("TIMETRA-QOS-MIB", "tSapEgressLastChanged"), ("TIMETRA-QOS-MIB", "tSapEgressTableLastChanged"), ("TIMETRA-QOS-MIB", "tSapEgressQueueRowStatus"), ("TIMETRA-QOS-MIB", "tSapEgressQueueParent"), ("TIMETRA-QOS-MIB", "tSapEgressQueueLevel"), ("TIMETRA-QOS-MIB", "tSapEgressQueueWeight"), ("TIMETRA-QOS-MIB", "tSapEgressQueueCIRLevel"), ("TIMETRA-QOS-MIB", "tSapEgressQueueCIRWeight"), ("TIMETRA-QOS-MIB", "tSapEgressQueueExpedite"), ("TIMETRA-QOS-MIB", "tSapEgressQueueCBS"), ("TIMETRA-QOS-MIB", "tSapEgressQueueHiPrioOnly"), ("TIMETRA-QOS-MIB", "tSapEgressQueueCIRAdaptation"), ("TIMETRA-QOS-MIB", "tSapEgressQueuePIRAdaptation"), ("TIMETRA-QOS-MIB", "tSapEgressQueueAdminPIR"), ("TIMETRA-QOS-MIB", "tSapEgressQueueAdminCIR"), ("TIMETRA-QOS-MIB", "tSapEgressQueueLastChanged"), ("TIMETRA-QOS-MIB", "tSapEgressQueueTableLastChanged"), ("TIMETRA-QOS-MIB", "tSapEgressFCRowStatus"), ("TIMETRA-QOS-MIB", "tSapEgressFCQueue"), ("TIMETRA-QOS-MIB", "tSapEgressFCLastChanged"), ("TIMETRA-QOS-MIB", "tSapEgressFCTableLastChanged"), ("TIMETRA-QOS-MIB", "tSapEgressFCDot1PInProfile"), ("TIMETRA-QOS-MIB", "tSapEgressFCDot1POutProfile"), ("TIMETRA-QOS-MIB", "tSapEgressFCForceDEValue"), ("TIMETRA-QOS-MIB", "tSapEgressFCDEMark"), ("TIMETRA-QOS-MIB", "tSapEgressFCInProfDscp"), ("TIMETRA-QOS-MIB", "tSapEgressFCOutProfDscp"), ("TIMETRA-QOS-MIB", "tSapEgressFCInProfPrec"), ("TIMETRA-QOS-MIB", "tSapEgressFCOutProfPrec"), ("TIMETRA-QOS-MIB", "tSapEgressQueueUsePortParent"), ("TIMETRA-QOS-MIB", "tSapEgressQueuePortLvl"), ("TIMETRA-QOS-MIB", "tSapEgressQueuePortWght"), ("TIMETRA-QOS-MIB", "tSapEgressQueuePortCIRLvl"), ("TIMETRA-QOS-MIB", "tSapEgressQueuePortCIRWght"), ("TIMETRA-QOS-MIB", "tSapEgressQueuePortAvgOverhead"), ("TIMETRA-QOS-MIB", "tSapEgressQueuePoolName"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxQosSapEgressV8v0Group = tmnxQosSapEgressV8v0Group.setStatus('current')
tmnxQosQueueObjV8v0Group = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 16, 2, 46)).setObjects(("TIMETRA-QOS-MIB", "tQosEgrQGroupDescr"), ("TIMETRA-QOS-MIB", "tQosEgrQGroupLastChanged"), ("TIMETRA-QOS-MIB", "tQosEgrQGroupRowStatus"), ("TIMETRA-QOS-MIB", "tQosEgrQGroupTableLastChanged"), ("TIMETRA-QOS-MIB", "tQosEgrQTableLastChanged"), ("TIMETRA-QOS-MIB", "tQosEgrQueueAdminCIR"), ("TIMETRA-QOS-MIB", "tQosEgrQueueAdminPIR"), ("TIMETRA-QOS-MIB", "tQosEgrQueueCBS"), ("TIMETRA-QOS-MIB", "tQosEgrQueueCIRAdaptation"), ("TIMETRA-QOS-MIB", "tQosEgrQueueCIRLevel"), ("TIMETRA-QOS-MIB", "tQosEgrQueueCIRWeight"), ("TIMETRA-QOS-MIB", "tQosEgrQueueExpedite"), ("TIMETRA-QOS-MIB", "tQosEgrQueueHiPrioOnly"), ("TIMETRA-QOS-MIB", "tQosEgrQueueLastChanged"), ("TIMETRA-QOS-MIB", "tQosEgrQueueLevel"), ("TIMETRA-QOS-MIB", "tQosEgrQueuePIRAdaptation"), ("TIMETRA-QOS-MIB", "tQosEgrQueueParent"), ("TIMETRA-QOS-MIB", "tQosEgrQueuePoolName"), ("TIMETRA-QOS-MIB", "tQosEgrQueuePortCIRLvl"), ("TIMETRA-QOS-MIB", "tQosEgrQueuePortCIRWght"), ("TIMETRA-QOS-MIB", "tQosEgrQueuePortLvl"), ("TIMETRA-QOS-MIB", "tQosEgrQueuePortWght"), ("TIMETRA-QOS-MIB", "tQosEgrQueueRowStatus"), ("TIMETRA-QOS-MIB", "tQosEgrQueueUsePortParent"), ("TIMETRA-QOS-MIB", "tQosEgrQueueWeight"), ("TIMETRA-QOS-MIB", "tQosIngQTableLastChanged"), ("TIMETRA-QOS-MIB", "tQosIngQGroupDescr"), ("TIMETRA-QOS-MIB", "tQosIngQGroupLastChanged"), ("TIMETRA-QOS-MIB", "tQosIngQGroupRowStatus"), ("TIMETRA-QOS-MIB", "tQosIngQGroupTableLastChanged"), ("TIMETRA-QOS-MIB", "tQosIngQueueAdminCIR"), ("TIMETRA-QOS-MIB", "tQosIngQueueAdminPIR"), ("TIMETRA-QOS-MIB", "tQosIngQueueCBS"), ("TIMETRA-QOS-MIB", "tQosIngQueueCIRAdaptation"), ("TIMETRA-QOS-MIB", "tQosIngQueueCIRLevel"), ("TIMETRA-QOS-MIB", "tQosIngQueueCIRWeight"), ("TIMETRA-QOS-MIB", "tQosIngQueueExpedite"), ("TIMETRA-QOS-MIB", "tQosIngQueueHiPrioOnly"), ("TIMETRA-QOS-MIB", "tQosIngQueueLastChanged"), ("TIMETRA-QOS-MIB", "tQosIngQueueLevel"), ("TIMETRA-QOS-MIB", "tQosIngQueueMCast"), ("TIMETRA-QOS-MIB", "tQosIngQueueMode"), ("TIMETRA-QOS-MIB", "tQosIngQueuePIRAdaptation"), ("TIMETRA-QOS-MIB", "tQosIngQueueParent"), ("TIMETRA-QOS-MIB", "tQosIngQueuePoliced"), ("TIMETRA-QOS-MIB", "tQosIngQueuePoolName"), ("TIMETRA-QOS-MIB", "tQosIngQueueRowStatus"), ("TIMETRA-QOS-MIB", "tQosIngQueueWeight"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxQosQueueObjV8v0Group = tmnxQosQueueObjV8v0Group.setStatus('current')
tmnxQosObsoletedV8v0Group = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 16, 2, 47)).setObjects(("TIMETRA-QOS-MIB", "tSapIngressQueueMBS"), ("TIMETRA-QOS-MIB", "tSapEgressQueueMBS"), ("TIMETRA-QOS-MIB", "tQosIngQueueMBS"), ("TIMETRA-QOS-MIB", "tQosEgrQueueMBS"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxQosObsoletedV8v0Group = tmnxQosObsoletedV8v0Group.setStatus('current')
tmnxQosPortSchPlcyGrpGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 16, 2, 48)).setObjects(("TIMETRA-QOS-MIB", "tPortSchPlcyLvl1GrpName"), ("TIMETRA-QOS-MIB", "tPortSchPlcyLvl1GrpWeight"), ("TIMETRA-QOS-MIB", "tPortSchPlcyLvl2GrpName"), ("TIMETRA-QOS-MIB", "tPortSchPlcyLvl2GrpWeight"), ("TIMETRA-QOS-MIB", "tPortSchPlcyLvl3GrpName"), ("TIMETRA-QOS-MIB", "tPortSchPlcyLvl3GrpWeight"), ("TIMETRA-QOS-MIB", "tPortSchPlcyLvl4GrpName"), ("TIMETRA-QOS-MIB", "tPortSchPlcyLvl4GrpWeight"), ("TIMETRA-QOS-MIB", "tPortSchPlcyLvl5GrpName"), ("TIMETRA-QOS-MIB", "tPortSchPlcyLvl5GrpWeight"), ("TIMETRA-QOS-MIB", "tPortSchPlcyLvl6GrpName"), ("TIMETRA-QOS-MIB", "tPortSchPlcyLvl6GrpWeight"), ("TIMETRA-QOS-MIB", "tPortSchPlcyLvl7GrpName"), ("TIMETRA-QOS-MIB", "tPortSchPlcyLvl7GrpWeight"), ("TIMETRA-QOS-MIB", "tPortSchPlcyLvl8GrpName"), ("TIMETRA-QOS-MIB", "tPortSchPlcyLvl8GrpWeight"), ("TIMETRA-QOS-MIB", "tPortSchPlcyLvlGrpLastChanged"), ("TIMETRA-QOS-MIB", "tPortSchPlcyLvlGrpTblLastChgd"), ("TIMETRA-QOS-MIB", "tPortSchPlcyGrpAdminCIR"), ("TIMETRA-QOS-MIB", "tPortSchPlcyGrpAdminPIR"), ("TIMETRA-QOS-MIB", "tPortSchPlcyGrpLastChanged"), ("TIMETRA-QOS-MIB", "tPortSchPlcyGrpRowStatus"), ("TIMETRA-QOS-MIB", "tPortSchPlcyGrpTblLastChgd"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxQosPortSchPlcyGrpGroup = tmnxQosPortSchPlcyGrpGroup.setStatus('current')
tmnxQosSchedulerV8v0Group = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 16, 2, 49)).setObjects(("TIMETRA-QOS-MIB", "tSchedulerPolicyRowStatus"), ("TIMETRA-QOS-MIB", "tSchedulerPolicyDescription"), ("TIMETRA-QOS-MIB", "tSchedulerPolicyLastChanged"), ("TIMETRA-QOS-MIB", "tSchedulerPolicyTableLastChanged"), ("TIMETRA-QOS-MIB", "tVirtualSchedulerRowStatus"), ("TIMETRA-QOS-MIB", "tVirtualSchedulerDescription"), ("TIMETRA-QOS-MIB", "tVirtualSchedulerParent"), ("TIMETRA-QOS-MIB", "tVirtualSchedulerLevel"), ("TIMETRA-QOS-MIB", "tVirtualSchedulerWeight"), ("TIMETRA-QOS-MIB", "tVirtualSchedulerCIRLevel"), ("TIMETRA-QOS-MIB", "tVirtualSchedulerCIRWeight"), ("TIMETRA-QOS-MIB", "tVirtualSchedulerPIR"), ("TIMETRA-QOS-MIB", "tVirtualSchedulerCIR"), ("TIMETRA-QOS-MIB", "tVirtualSchedulerSummedCIR"), ("TIMETRA-QOS-MIB", "tVirtualSchedulerLastChanged"), ("TIMETRA-QOS-MIB", "tVirtualSchedulerUsePortParent"), ("TIMETRA-QOS-MIB", "tVirtualSchedulerPortLvl"), ("TIMETRA-QOS-MIB", "tVirtualSchedulerPortWght"), ("TIMETRA-QOS-MIB", "tVirtualSchedulerPortCIRLvl"), ("TIMETRA-QOS-MIB", "tVirtualSchedulerPortCIRWght"), ("TIMETRA-QOS-MIB", "tVirtualSchedulerTableLastChanged"), ("TIMETRA-QOS-MIB", "tPortSchedulerPlcyRowStatus"), ("TIMETRA-QOS-MIB", "tPortSchedulerPlcyDescription"), ("TIMETRA-QOS-MIB", "tPortSchedulerPlcyLastChanged"), ("TIMETRA-QOS-MIB", "tPortSchedulerPlcyMaxRate"), ("TIMETRA-QOS-MIB", "tPortSchedulerPlcyOrphanLvl"), ("TIMETRA-QOS-MIB", "tPortSchedulerPlcyOrphanWeight"), ("TIMETRA-QOS-MIB", "tPortSchedulerPlcyOrphanCIRLvl"), ("TIMETRA-QOS-MIB", "tPortSchedulerPlcyOrphanCIRWght"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxQosSchedulerV8v0Group = tmnxQosSchedulerV8v0Group.setStatus('current')
tmnxQosBurstLimitGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 16, 2, 50)).setObjects(("TIMETRA-QOS-MIB", "tSapIngressQueueBurstLimit"), ("TIMETRA-QOS-MIB", "tSapEgressQueueBurstLimit"), ("TIMETRA-QOS-MIB", "tQosIngQueueBurstLimit"), ("TIMETRA-QOS-MIB", "tQosEgrQueueBurstLimit"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxQosBurstLimitGroup = tmnxQosBurstLimitGroup.setStatus('current')
tmnxQosMacCritVidFltrV9v0Group = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 16, 2, 51)).setObjects(("TIMETRA-QOS-MIB", "tSapIngressMacCritInnerTagValue"), ("TIMETRA-QOS-MIB", "tSapIngressMacCritInnerTagMask"), ("TIMETRA-QOS-MIB", "tSapIngressMacCritOuterTagValue"), ("TIMETRA-QOS-MIB", "tSapIngressMacCritOuterTagMask"), ("TIMETRA-QOS-MIB", "tSapIngressMacCritType"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxQosMacCritVidFltrV9v0Group = tmnxQosMacCritVidFltrV9v0Group.setStatus('current')
tmnxQosSapEgressV9v0Group = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 16, 2, 52)).setObjects(("TIMETRA-QOS-MIB", "tSapEgressQueuePktOffset"), ("TIMETRA-QOS-MIB", "tSapEgressQueueAdminPIRPercent"), ("TIMETRA-QOS-MIB", "tSapEgressQueueAdminCIRPercent"), ("TIMETRA-QOS-MIB", "tSapEgressQueueRateType"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxQosSapEgressV9v0Group = tmnxQosSapEgressV9v0Group.setStatus('current')
tmnxQosSapIngressV9v0Group = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 16, 2, 53)).setObjects(("TIMETRA-QOS-MIB", "tSapIngressQueueAdminPIRPercent"), ("TIMETRA-QOS-MIB", "tSapIngressQueueAdminCIRPercent"), ("TIMETRA-QOS-MIB", "tSapIngressQueueRateType"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxQosSapIngressV9v0Group = tmnxQosSapIngressV9v0Group.setStatus('current')
tmnxQosPolicerV9v0Group = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 16, 2, 54)).setObjects(("TIMETRA-QOS-MIB", "tSapIngPolicerAdminCIRPercent"), ("TIMETRA-QOS-MIB", "tSapIngPolicerAdminPIRPercent"), ("TIMETRA-QOS-MIB", "tSapIngPolicerRateType"), ("TIMETRA-QOS-MIB", "tSapEgrPolicerAdminCIRPercent"), ("TIMETRA-QOS-MIB", "tSapEgrPolicerAdminPIRPercent"), ("TIMETRA-QOS-MIB", "tSapEgrPolicerRateType"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxQosPolicerV9v0Group = tmnxQosPolicerV9v0Group.setStatus('current')
tmnxQosAtmTdpV9v0Group = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 16, 2, 55)).setObjects(("TIMETRA-QOS-MIB", "tAtmTdpWeight"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxQosAtmTdpV9v0Group = tmnxQosAtmTdpV9v0Group.setStatus('current')
tmnxQosHsmdaV9v0Group = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 16, 2, 56)).setObjects(("TIMETRA-QOS-MIB", "tHsmdaWrrPolicyTblLastChgd"), ("TIMETRA-QOS-MIB", "tHsmdaWrrPolicyRowStatus"), ("TIMETRA-QOS-MIB", "tHsmdaWrrPolicyLastChanged"), ("TIMETRA-QOS-MIB", "tHsmdaWrrPolicyDescription"), ("TIMETRA-QOS-MIB", "tHsmdaWrrPolicyIncludeQueues"), ("TIMETRA-QOS-MIB", "tHsmdaWrrPolicySchedUsingClass"), ("TIMETRA-QOS-MIB", "tHsmdaWrrPolicyAggWeightAtClass"), ("TIMETRA-QOS-MIB", "tNetworkQueuePolicyEHWrrPlcy"), ("TIMETRA-QOS-MIB", "tNetworkQueuePolicyEHPktBOffst"), ("TIMETRA-QOS-MIB", "tNetworkEgrHsmdaQueueTblLastChgd"), ("TIMETRA-QOS-MIB", "tNetworkEgrHsmdaQueuePIRPercent"), ("TIMETRA-QOS-MIB", "tNetworkEgrHsmdaQueuePIRAdaptn"), ("TIMETRA-QOS-MIB", "tNetworkEgrHsmdaQueueWrrWeight"), ("TIMETRA-QOS-MIB", "tNetworkEgrHsmdaQueueMBS"), ("TIMETRA-QOS-MIB", "tNetworkEgrHsmdaQueueSlopePolicy"), ("TIMETRA-QOS-MIB", "tNetworkEgrHsmdaQueueLastChanged"), ("TIMETRA-QOS-MIB", "tSapEgressHsmdaLowBrstMaxCls"), ("TIMETRA-QOS-MIB", "tSapEgressHsmdaWrrPolicy"), ("TIMETRA-QOS-MIB", "tSapEgressHsmdaQueueWrrWeight"), ("TIMETRA-QOS-MIB", "tSapEgressHsmdaQueueMBS"), ("TIMETRA-QOS-MIB", "tSapEgressHsmdaQueueBurstLimit"), ("TIMETRA-QOS-MIB", "tNetworkEgrHsmdaQueueBurstLimit"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxQosHsmdaV9v0Group = tmnxQosHsmdaV9v0Group.setStatus('current')
tmnxQosNetworkV9v0Group = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 16, 2, 57)).setObjects(("TIMETRA-QOS-MIB", "tNetworkQueueFCEgrHsmdaQueue"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxQosNetworkV9v0Group = tmnxQosNetworkV9v0Group.setStatus('current')
tmnxQosNamedPoolV9v0Group = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 16, 2, 58)).setObjects(("TIMETRA-QOS-MIB", "tQ1NamedPoolResvCbsAmbrAlrmStep"), ("TIMETRA-QOS-MIB", "tQ1NamedPoolResvCbsAmbrAlrmMax"), ("TIMETRA-QOS-MIB", "tQ1NamedPoolAmbrAlrmThresh"), ("TIMETRA-QOS-MIB", "tQ1NamedPoolRedAlrmThresh"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxQosNamedPoolV9v0Group = tmnxQosNamedPoolV9v0Group.setStatus('current')
tmnxQosHsmdaObsoletedV9v0Group = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 16, 2, 59)).setObjects(("TIMETRA-QOS-MIB", "tSapEgressFCDot1PHsmdaProfile"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxQosHsmdaObsoletedV9v0Group = tmnxQosHsmdaObsoletedV9v0Group.setStatus('current')
tmnxQosPolicyV10v0Group = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 16, 2, 60)).setObjects(("TIMETRA-QOS-MIB", "tSapEgrPolicyNameId"), ("TIMETRA-QOS-MIB", "tSapEgrPolicyNameLastChanged"), ("TIMETRA-QOS-MIB", "tSapEgrPolicyNameRowStatus"), ("TIMETRA-QOS-MIB", "tSapEgrPolicyNameTableLastChgd"), ("TIMETRA-QOS-MIB", "tSapEgressPolicyName"), ("TIMETRA-QOS-MIB", "tSapIngPolicyNameId"), ("TIMETRA-QOS-MIB", "tSapIngPolicyNameLastChanged"), ("TIMETRA-QOS-MIB", "tSapIngPolicyNameRowStatus"), ("TIMETRA-QOS-MIB", "tSapIngPolicyNameTableLastChgd"), ("TIMETRA-QOS-MIB", "tSapIngressPolicyName"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxQosPolicyV10v0Group = tmnxQosPolicyV10v0Group.setStatus('current')
tmnxQosQueueGrpPolcrV10v0Group = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 16, 2, 61)).setObjects(("TIMETRA-QOS-MIB", "tQosIngPolicerTableLastChanged"), ("TIMETRA-QOS-MIB", "tQosIngPolicerRowStatus"), ("TIMETRA-QOS-MIB", "tQosIngPolicerLastChanged"), ("TIMETRA-QOS-MIB", "tQosIngPolicerDescr"), ("TIMETRA-QOS-MIB", "tQosIngPolicerPIRAdaptation"), ("TIMETRA-QOS-MIB", "tQosIngPolicerCIRAdaptation"), ("TIMETRA-QOS-MIB", "tQosIngPolicerParent"), ("TIMETRA-QOS-MIB", "tQosIngPolicerLevel"), ("TIMETRA-QOS-MIB", "tQosIngPolicerWeight"), ("TIMETRA-QOS-MIB", "tQosIngPolicerAdminPIR"), ("TIMETRA-QOS-MIB", "tQosIngPolicerAdminCIR"), ("TIMETRA-QOS-MIB", "tQosIngPolicerCBS"), ("TIMETRA-QOS-MIB", "tQosIngPolicerMBS"), ("TIMETRA-QOS-MIB", "tQosIngPolicerHiPrioOnly"), ("TIMETRA-QOS-MIB", "tQosIngPolicerPktOffset"), ("TIMETRA-QOS-MIB", "tQosIngPolicerProfileCapped"), ("TIMETRA-QOS-MIB", "tQosIngPolicerStatMode"), ("TIMETRA-QOS-MIB", "tQosEgrPolicerTableLastChanged"), ("TIMETRA-QOS-MIB", "tQosEgrPolicerRowStatus"), ("TIMETRA-QOS-MIB", "tQosEgrPolicerLastChanged"), ("TIMETRA-QOS-MIB", "tQosEgrPolicerDescr"), ("TIMETRA-QOS-MIB", "tQosEgrPolicerPIRAdaptation"), ("TIMETRA-QOS-MIB", "tQosEgrPolicerCIRAdaptation"), ("TIMETRA-QOS-MIB", "tQosEgrPolicerParent"), ("TIMETRA-QOS-MIB", "tQosEgrPolicerLevel"), ("TIMETRA-QOS-MIB", "tQosEgrPolicerWeight"), ("TIMETRA-QOS-MIB", "tQosEgrPolicerAdminPIR"), ("TIMETRA-QOS-MIB", "tQosEgrPolicerAdminCIR"), ("TIMETRA-QOS-MIB", "tQosEgrPolicerCBS"), ("TIMETRA-QOS-MIB", "tQosEgrPolicerMBS"), ("TIMETRA-QOS-MIB", "tQosEgrPolicerHiPrioOnly"), ("TIMETRA-QOS-MIB", "tQosEgrPolicerPktOffset"), ("TIMETRA-QOS-MIB", "tQosEgrPolicerProfileCapped"), ("TIMETRA-QOS-MIB", "tQosEgrPolicerStatMode"), ("TIMETRA-QOS-MIB", "tSapIngressFCPlcrFPQGrp"), ("TIMETRA-QOS-MIB", "tSapIngressFCMCastPlcrFPQGrp"), ("TIMETRA-QOS-MIB", "tSapIngressFCBCastPlcrFPQGrp"), ("TIMETRA-QOS-MIB", "tSapIngressFCUnknownPlcrFPQGrp"), ("TIMETRA-QOS-MIB", "tNetworkEgressFCQGrpPolicer"), ("TIMETRA-QOS-MIB", "tNetworkIngressFCTableLstChanged"), ("TIMETRA-QOS-MIB", "tNetworkIngressFCMultiCastPlcr"), ("TIMETRA-QOS-MIB", "tNetworkIngressFCUniCastPlcr"), ("TIMETRA-QOS-MIB", "tNetworkIngressFCLastChanged"), ("TIMETRA-QOS-MIB", "tQosEgrQueuePktOffset"), ("TIMETRA-QOS-MIB", "tQosPolicerCtrlPolProfPref"), ("TIMETRA-QOS-MIB", "tSapEgrPolicerProfileCapped"), ("TIMETRA-QOS-MIB", "tSapIngPolicerProfileCapped"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxQosQueueGrpPolcrV10v0Group = tmnxQosQueueGrpPolcrV10v0Group.setStatus('current')
tmnxQosEgrReClassifyV10v0Group = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 16, 2, 62)).setObjects(("TIMETRA-QOS-MIB", "tSapEgressEthernetCtag"), ("TIMETRA-QOS-MIB", "tSapEgressDot1pRowStatus"), ("TIMETRA-QOS-MIB", "tSapEgressDot1pLastChanged"), ("TIMETRA-QOS-MIB", "tSapEgressDot1pTableLastChanged"), ("TIMETRA-QOS-MIB", "tSapEgressDot1pFC"), ("TIMETRA-QOS-MIB", "tSapEgressDot1pProfile"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxQosEgrReClassifyV10v0Group = tmnxQosEgrReClassifyV10v0Group.setStatus('current')
tmnxQosPolicerSlopeGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 16, 2, 63)).setObjects(("TIMETRA-QOS-MIB", "tQosEgrPolicerSlopeMap"), ("TIMETRA-QOS-MIB", "tQosEgrPolicerSlopeMaxDepth"), ("TIMETRA-QOS-MIB", "tQosEgrPolicerSlopeMaxProb"), ("TIMETRA-QOS-MIB", "tQosEgrPolicerSlopeStartDepth"), ("TIMETRA-QOS-MIB", "tQosIngPolicerSlopeMap"), ("TIMETRA-QOS-MIB", "tQosIngPolicerSlopeMaxDepth"), ("TIMETRA-QOS-MIB", "tQosIngPolicerSlopeMaxProb"), ("TIMETRA-QOS-MIB", "tQosIngPolicerSlopeStartDepth"), ("TIMETRA-QOS-MIB", "tSapEgrPolicerSlopeMap"), ("TIMETRA-QOS-MIB", "tSapEgrPolicerSlopeMaxDepth"), ("TIMETRA-QOS-MIB", "tSapEgrPolicerSlopeMaxProb"), ("TIMETRA-QOS-MIB", "tSapEgrPolicerSlopeStartDepth"), ("TIMETRA-QOS-MIB", "tSapIngPolicerSlopeMap"), ("TIMETRA-QOS-MIB", "tSapIngPolicerSlopeMaxDepth"), ("TIMETRA-QOS-MIB", "tSapIngPolicerSlopeMaxProb"), ("TIMETRA-QOS-MIB", "tSapIngPolicerSlopeStartDepth"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxQosPolicerSlopeGroup = tmnxQosPolicerSlopeGroup.setStatus('current')
tmnxQosAdvConfigV10v0Group = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 16, 2, 64)).setObjects(("TIMETRA-QOS-MIB", "tAdvCfgPolicyTblLastChgd"), ("TIMETRA-QOS-MIB", "tAdvCfgPolicyRowStatus"), ("TIMETRA-QOS-MIB", "tAdvCfgLastChanged"), ("TIMETRA-QOS-MIB", "tAdvCfgDescription"), ("TIMETRA-QOS-MIB", "tAdvCfgChildAdmnPirPrcnt"), ("TIMETRA-QOS-MIB", "tAdvCfgChildAdminRate"), ("TIMETRA-QOS-MIB", "tAdvCfgOMGranPirPrcnt"), ("TIMETRA-QOS-MIB", "tAdvCfgOMGranRate"), ("TIMETRA-QOS-MIB", "tAdvCfgMaxDecPirPrcnt"), ("TIMETRA-QOS-MIB", "tAdvCfgMaxDecRate"), ("TIMETRA-QOS-MIB", "tAdvCfgHiRateHoldTime"), ("TIMETRA-QOS-MIB", "tAdvCfgTimeAvgFactor"), ("TIMETRA-QOS-MIB", "tAdvCfgSampleInterval"), ("TIMETRA-QOS-MIB", "tAdvCfgFastStart"), ("TIMETRA-QOS-MIB", "tAdvCfgFastStop"), ("TIMETRA-QOS-MIB", "tAdvCfgAbvOffCapPirPrcnt"), ("TIMETRA-QOS-MIB", "tAdvCfgAbvOffCapRate"), ("TIMETRA-QOS-MIB", "tAdvCfgBWDGranPirPrcnt"), ("TIMETRA-QOS-MIB", "tAdvCfgBWDGranRate"), ("TIMETRA-QOS-MIB", "tQosEgrPolicerAdvCfgPolicy"), ("TIMETRA-QOS-MIB", "tQosIngPolicerAdvCfgPolicy"), ("TIMETRA-QOS-MIB", "tQosEgrQueueAdvCfgPolicy"), ("TIMETRA-QOS-MIB", "tQosIngQueueAdvCfgPolicy"), ("TIMETRA-QOS-MIB", "tSapEgrPolicerAdvCfgPolicy"), ("TIMETRA-QOS-MIB", "tSapIngPolicerAdvCfgPolicy"), ("TIMETRA-QOS-MIB", "tSapEgressQueueAdvCfgPolicy"), ("TIMETRA-QOS-MIB", "tSapIngressQueueAdvCfgPolicy"), ("TIMETRA-QOS-MIB", "tAdvCfgMinOnly"), ("TIMETRA-QOS-MIB", "tAdvCfgDecOnly"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxQosAdvConfigV10v0Group = tmnxQosAdvConfigV10v0Group.setStatus('current')
tmnxQosHsmdaV10v0Group = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 16, 2, 65)).setObjects(("TIMETRA-QOS-MIB", "tHsmdaSchedulerPlcyRowStatus"), ("TIMETRA-QOS-MIB", "tHsmdaSchedulerPlcyDescription"), ("TIMETRA-QOS-MIB", "tHsmdaSchedulerPlcyMaxRate"), ("TIMETRA-QOS-MIB", "tHsmdaSchedulerPlcyLvl1Rate"), ("TIMETRA-QOS-MIB", "tHsmdaSchedulerPlcyLvl1GrpId"), ("TIMETRA-QOS-MIB", "tHsmdaSchedulerPlcyLvl1WgtInGrp"), ("TIMETRA-QOS-MIB", "tHsmdaSchedulerPlcyLvl2Rate"), ("TIMETRA-QOS-MIB", "tHsmdaSchedulerPlcyLvl2GrpId"), ("TIMETRA-QOS-MIB", "tHsmdaSchedulerPlcyLvl2WgtInGrp"), ("TIMETRA-QOS-MIB", "tHsmdaSchedulerPlcyLvl3Rate"), ("TIMETRA-QOS-MIB", "tHsmdaSchedulerPlcyLvl3GrpId"), ("TIMETRA-QOS-MIB", "tHsmdaSchedulerPlcyLvl3WgtInGrp"), ("TIMETRA-QOS-MIB", "tHsmdaSchedulerPlcyLvl4Rate"), ("TIMETRA-QOS-MIB", "tHsmdaSchedulerPlcyLvl4GrpId"), ("TIMETRA-QOS-MIB", "tHsmdaSchedulerPlcyLvl4WgtInGrp"), ("TIMETRA-QOS-MIB", "tHsmdaSchedulerPlcyLvl5Rate"), ("TIMETRA-QOS-MIB", "tHsmdaSchedulerPlcyLvl5GrpId"), ("TIMETRA-QOS-MIB", "tHsmdaSchedulerPlcyLvl5WgtInGrp"), ("TIMETRA-QOS-MIB", "tHsmdaSchedulerPlcyLvl6Rate"), ("TIMETRA-QOS-MIB", "tHsmdaSchedulerPlcyLvl6GrpId"), ("TIMETRA-QOS-MIB", "tHsmdaSchedulerPlcyLvl6WgtInGrp"), ("TIMETRA-QOS-MIB", "tHsmdaSchedulerPlcyLvl7Rate"), ("TIMETRA-QOS-MIB", "tHsmdaSchedulerPlcyLvl7GrpId"), ("TIMETRA-QOS-MIB", "tHsmdaSchedulerPlcyLvl7WgtInGrp"), ("TIMETRA-QOS-MIB", "tHsmdaSchedulerPlcyLvl8Rate"), ("TIMETRA-QOS-MIB", "tHsmdaSchedulerPlcyLvl8GrpId"), ("TIMETRA-QOS-MIB", "tHsmdaSchedulerPlcyLvl8WgtInGrp"), ("TIMETRA-QOS-MIB", "tHsmdaSchedulerPlcyLastChanged"), ("TIMETRA-QOS-MIB", "tHsmdaSchedulerPlcyGrp1Rate"), ("TIMETRA-QOS-MIB", "tHsmdaSchedulerPlcyGrp2Rate"), ("TIMETRA-QOS-MIB", "tSapEgressFCHsmdaQueue"), ("TIMETRA-QOS-MIB", "tSapEgressHsmdaQueueRowStatus"), ("TIMETRA-QOS-MIB", "tSapEgressHsmdaQueuePIRAdaptn"), ("TIMETRA-QOS-MIB", "tSapEgressHsmdaQueueAdminPIR"), ("TIMETRA-QOS-MIB", "tSapEgressHsmdaQueueSlopePolicy"), ("TIMETRA-QOS-MIB", "tSapEgressHsmdaQueueLastChanged"), ("TIMETRA-QOS-MIB", "tSapIngressHsmdaQueueRowStatus"), ("TIMETRA-QOS-MIB", "tSapIngressHsmdaQueueLastChanged"), ("TIMETRA-QOS-MIB", "tSapIngressHsmdaQueueCIRAdaptn"), ("TIMETRA-QOS-MIB", "tSapIngressHsmdaQueuePIRAdaptn"), ("TIMETRA-QOS-MIB", "tSapIngressHsmdaQueueAdminPIR"), ("TIMETRA-QOS-MIB", "tSapIngressHsmdaQueueAdminCIR"), ("TIMETRA-QOS-MIB", "tSapIngressHsmdaQueueSlopePolicy"), ("TIMETRA-QOS-MIB", "tSapIngressHsmdaQueuePoliced"), ("TIMETRA-QOS-MIB", "tHsmdaPoolPolicyRowStatus"), ("TIMETRA-QOS-MIB", "tHsmdaPoolLastChanged"), ("TIMETRA-QOS-MIB", "tHsmdaPoolDescription"), ("TIMETRA-QOS-MIB", "tHsmdaPoolSystemReserve"), ("TIMETRA-QOS-MIB", "tHsmdaPoolRoot1AllocWeight"), ("TIMETRA-QOS-MIB", "tHsmdaPoolRoot2AllocWeight"), ("TIMETRA-QOS-MIB", "tHsmdaPoolRoot3AllocWeight"), ("TIMETRA-QOS-MIB", "tHsmdaPoolRoot4AllocWeight"), ("TIMETRA-QOS-MIB", "tHsmdaPoolRoot5AllocWeight"), ("TIMETRA-QOS-MIB", "tHsmdaPoolRoot6AllocWeight"), ("TIMETRA-QOS-MIB", "tHsmdaPoolRoot7AllocWeight"), ("TIMETRA-QOS-MIB", "tHsmdaPoolRoot8AllocWeight"), ("TIMETRA-QOS-MIB", "tHsmdaPoolClass1Parent"), ("TIMETRA-QOS-MIB", "tHsmdaPoolClass1AllocPercent"), ("TIMETRA-QOS-MIB", "tHsmdaPoolClass2Parent"), ("TIMETRA-QOS-MIB", "tHsmdaPoolClass2AllocPercent"), ("TIMETRA-QOS-MIB", "tHsmdaPoolClass3Parent"), ("TIMETRA-QOS-MIB", "tHsmdaPoolClass3AllocPercent"), ("TIMETRA-QOS-MIB", "tHsmdaPoolClass4Parent"), ("TIMETRA-QOS-MIB", "tHsmdaPoolClass4AllocPercent"), ("TIMETRA-QOS-MIB", "tHsmdaPoolClass5Parent"), ("TIMETRA-QOS-MIB", "tHsmdaPoolClass5AllocPercent"), ("TIMETRA-QOS-MIB", "tHsmdaPoolClass6Parent"), ("TIMETRA-QOS-MIB", "tHsmdaPoolClass6AllocPercent"), ("TIMETRA-QOS-MIB", "tHsmdaPoolClass7Parent"), ("TIMETRA-QOS-MIB", "tHsmdaPoolClass7AllocPercent"), ("TIMETRA-QOS-MIB", "tHsmdaPoolClass8Parent"), ("TIMETRA-QOS-MIB", "tHsmdaPoolClass8AllocPercent"), ("TIMETRA-QOS-MIB", "tHsmdaSlopePolicyRowStatus"), ("TIMETRA-QOS-MIB", "tHsmdaSlopeLastChanged"), ("TIMETRA-QOS-MIB", "tHsmdaSlopeDescription"), ("TIMETRA-QOS-MIB", "tHsmdaSlopeHiAdminStatus"), ("TIMETRA-QOS-MIB", "tHsmdaSlopeHiStartDepth"), ("TIMETRA-QOS-MIB", "tHsmdaSlopeHiMaxDepth"), ("TIMETRA-QOS-MIB", "tHsmdaSlopeHiMaxProbability"), ("TIMETRA-QOS-MIB", "tHsmdaSlopeLoAdminStatus"), ("TIMETRA-QOS-MIB", "tHsmdaSlopeLoStartDepth"), ("TIMETRA-QOS-MIB", "tHsmdaSlopeLoMaxDepth"), ("TIMETRA-QOS-MIB", "tHsmdaSlopeLoMaxProbability"), ("TIMETRA-QOS-MIB", "tSapEgrHsmdaQueueTblLastChngd"), ("TIMETRA-QOS-MIB", "tHsmdaSchedPlcyTblLastChngd"), ("TIMETRA-QOS-MIB", "tHsmdaSchedPlcyGrpTblLastChngd"), ("TIMETRA-QOS-MIB", "tHsmdaPoolPlcyTblLastChngd"), ("TIMETRA-QOS-MIB", "tHsmdaSlopePolicyTableLastChanged"), ("TIMETRA-QOS-MIB", "tSapEgressDSCPRowStatus"), ("TIMETRA-QOS-MIB", "tSapEgressDSCPLastChanged"), ("TIMETRA-QOS-MIB", "tSapEgressDSCPHsmdaCntrOverride"), ("TIMETRA-QOS-MIB", "tSapEgressPrecRowStatus"), ("TIMETRA-QOS-MIB", "tSapEgressPrecLastChanged"), ("TIMETRA-QOS-MIB", "tSapEgressPrecHsmdaCntrOverride"), ("TIMETRA-QOS-MIB", "tSapEgrIPCritRowStatus"), ("TIMETRA-QOS-MIB", "tSapEgrIPCritLastChanged"), ("TIMETRA-QOS-MIB", "tSapEgrIPCritDescription"), ("TIMETRA-QOS-MIB", "tSapEgrIPCritActionHsmdaCntrOvr"), ("TIMETRA-QOS-MIB", "tSapEgrIPCritSourceIpAddrType"), ("TIMETRA-QOS-MIB", "tSapEgrIPCritSourceIpAddr"), ("TIMETRA-QOS-MIB", "tSapEgrIPCritSourceIpMask"), ("TIMETRA-QOS-MIB", "tSapEgrIPCritDestIpAddrType"), ("TIMETRA-QOS-MIB", "tSapEgrIPCritDestIpAddr"), ("TIMETRA-QOS-MIB", "tSapEgrIPCritDestIpMask"), ("TIMETRA-QOS-MIB", "tSapEgrIPCritProtocol"), ("TIMETRA-QOS-MIB", "tSapEgrIPCritSourcePortValue1"), ("TIMETRA-QOS-MIB", "tSapEgrIPCritSourcePortValue2"), ("TIMETRA-QOS-MIB", "tSapEgrIPCritSourcePortOperator"), ("TIMETRA-QOS-MIB", "tSapEgrIPCritDestPortValue1"), ("TIMETRA-QOS-MIB", "tSapEgrIPCritDestPortValue2"), ("TIMETRA-QOS-MIB", "tSapEgrIPCritDestPortOperator"), ("TIMETRA-QOS-MIB", "tSapEgrIPCritDSCP"), ("TIMETRA-QOS-MIB", "tSapEgrIPCritFragment"), ("TIMETRA-QOS-MIB", "tSapEgressMatchCriteria"), ("TIMETRA-QOS-MIB", "tSapEgressHsmdaPacketOffset"), ("TIMETRA-QOS-MIB", "tSapEgrIPCritActionFC"), ("TIMETRA-QOS-MIB", "tSapEgrIPCritActionProfile"), ("TIMETRA-QOS-MIB", "tSapEgressDSCPfc"), ("TIMETRA-QOS-MIB", "tSapEgressDSCPprofile"), ("TIMETRA-QOS-MIB", "tSapEgressPrecFC"), ("TIMETRA-QOS-MIB", "tSapEgressPrecProfile"), ("TIMETRA-QOS-MIB", "tHsmdaSchedulerPlcyBrstLimit"), ("TIMETRA-QOS-MIB", "tHsmdaSchedulerPlcyGrp1BrstLimit"), ("TIMETRA-QOS-MIB", "tHsmdaSchedulerPlcyGrp2BrstLimit"), ("TIMETRA-QOS-MIB", "tHsmdaSchedulerPlcyLvl1BrstLimit"), ("TIMETRA-QOS-MIB", "tHsmdaSchedulerPlcyLvl2BrstLimit"), ("TIMETRA-QOS-MIB", "tHsmdaSchedulerPlcyLvl3BrstLimit"), ("TIMETRA-QOS-MIB", "tHsmdaSchedulerPlcyLvl4BrstLimit"), ("TIMETRA-QOS-MIB", "tHsmdaSchedulerPlcyLvl5BrstLimit"), ("TIMETRA-QOS-MIB", "tHsmdaSchedulerPlcyLvl6BrstLimit"), ("TIMETRA-QOS-MIB", "tHsmdaSchedulerPlcyLvl7BrstLimit"), ("TIMETRA-QOS-MIB", "tHsmdaSchedulerPlcyLvl8BrstLimit"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxQosHsmdaV10v0Group = tmnxQosHsmdaV10v0Group.setStatus('current')
tmnxQosNetworkV10v0Group = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 16, 2, 66)).setObjects(("TIMETRA-QOS-MIB", "tNetworkEgressDSCPRowStatus"), ("TIMETRA-QOS-MIB", "tNetworkEgressDSCPLastChanged"), ("TIMETRA-QOS-MIB", "tNetworkEgressDSCPFC"), ("TIMETRA-QOS-MIB", "tNetworkEgressDSCPProfile"), ("TIMETRA-QOS-MIB", "tNetworkEgressPrecRowStatus"), ("TIMETRA-QOS-MIB", "tNetworkEgressPrecLastChanged"), ("TIMETRA-QOS-MIB", "tNetworkEgressPrecFC"), ("TIMETRA-QOS-MIB", "tNetworkEgressPrecProfile"), ("TIMETRA-QOS-MIB", "tNetworkEgrDSCPTableLastChanged"), ("TIMETRA-QOS-MIB", "tNetworkEgrPrecTableLastChanged"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxQosNetworkV10v0Group = tmnxQosNetworkV10v0Group.setStatus('current')
tmnxQosSapIngressV10v0Group = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 16, 2, 68)).setObjects(("TIMETRA-QOS-MIB", "tSapIngressRowStatus"), ("TIMETRA-QOS-MIB", "tSapIngressScope"), ("TIMETRA-QOS-MIB", "tSapIngressDescription"), ("TIMETRA-QOS-MIB", "tSapIngressDefaultFC"), ("TIMETRA-QOS-MIB", "tSapIngressDefaultFCPriority"), ("TIMETRA-QOS-MIB", "tSapIngressMatchCriteria"), ("TIMETRA-QOS-MIB", "tSapIngressLastChanged"), ("TIMETRA-QOS-MIB", "tSapIngressTableLastChanged"), ("TIMETRA-QOS-MIB", "tSapIngressQueueRowStatus"), ("TIMETRA-QOS-MIB", "tSapIngressQueueParent"), ("TIMETRA-QOS-MIB", "tSapIngressQueueLevel"), ("TIMETRA-QOS-MIB", "tSapIngressQueueWeight"), ("TIMETRA-QOS-MIB", "tSapIngressQueueCIRLevel"), ("TIMETRA-QOS-MIB", "tSapIngressQueueCIRWeight"), ("TIMETRA-QOS-MIB", "tSapIngressQueueMCast"), ("TIMETRA-QOS-MIB", "tSapIngressQueueExpedite"), ("TIMETRA-QOS-MIB", "tSapIngressQueueCBS"), ("TIMETRA-QOS-MIB", "tSapIngressQueueHiPrioOnly"), ("TIMETRA-QOS-MIB", "tSapIngressQueueCIRAdaptation"), ("TIMETRA-QOS-MIB", "tSapIngressQueuePIRAdaptation"), ("TIMETRA-QOS-MIB", "tSapIngressQueueAdminPIR"), ("TIMETRA-QOS-MIB", "tSapIngressQueueAdminCIR"), ("TIMETRA-QOS-MIB", "tSapIngressQueueLastChanged"), ("TIMETRA-QOS-MIB", "tSapIngressQueueMode"), ("TIMETRA-QOS-MIB", "tSapIngressQueuePoolName"), ("TIMETRA-QOS-MIB", "tSapIngressQueueTableLastChanged"), ("TIMETRA-QOS-MIB", "tSapIngressQueuePoliced"), ("TIMETRA-QOS-MIB", "tSapIngressDSCPRowStatus"), ("TIMETRA-QOS-MIB", "tSapIngressDSCPFC"), ("TIMETRA-QOS-MIB", "tSapIngressDSCPPriority"), ("TIMETRA-QOS-MIB", "tSapIngressDSCPLastChanged"), ("TIMETRA-QOS-MIB", "tSapIngressDSCPTableLastChanged"), ("TIMETRA-QOS-MIB", "tSapIngressDot1pRowStatus"), ("TIMETRA-QOS-MIB", "tSapIngressDot1pFC"), ("TIMETRA-QOS-MIB", "tSapIngressDot1pPriority"), ("TIMETRA-QOS-MIB", "tSapIngressDot1pLastChanged"), ("TIMETRA-QOS-MIB", "tSapIngressDot1pTableLastChanged"), ("TIMETRA-QOS-MIB", "tSapIngressIPCriteriaRowStatus"), ("TIMETRA-QOS-MIB", "tSapIngressIPCriteriaDescription"), ("TIMETRA-QOS-MIB", "tSapIngressIPCriteriaActionFC"), ("TIMETRA-QOS-MIB", "tSapIngressIPCriteriaActionPriority"), ("TIMETRA-QOS-MIB", "tSapIngressIPCriteriaSourceIpAddr"), ("TIMETRA-QOS-MIB", "tSapIngressIPCriteriaSourceIpMask"), ("TIMETRA-QOS-MIB", "tSapIngressIPCriteriaDestIpAddr"), ("TIMETRA-QOS-MIB", "tSapIngressIPCriteriaDestIpMask"), ("TIMETRA-QOS-MIB", "tSapIngressIPCriteriaProtocol"), ("TIMETRA-QOS-MIB", "tSapIngressIPCriteriaSourcePortValue1"), ("TIMETRA-QOS-MIB", "tSapIngressIPCriteriaSourcePortValue2"), ("TIMETRA-QOS-MIB", "tSapIngressIPCriteriaSourcePortOperator"), ("TIMETRA-QOS-MIB", "tSapIngressIPCriteriaDestPortValue1"), ("TIMETRA-QOS-MIB", "tSapIngressIPCriteriaDestPortValue2"), ("TIMETRA-QOS-MIB", "tSapIngressIPCriteriaDestPortOperator"), ("TIMETRA-QOS-MIB", "tSapIngressIPCriteriaDSCP"), ("TIMETRA-QOS-MIB", "tSapIngressIPCriteriaFragment"), ("TIMETRA-QOS-MIB", "tSapIngressIPCriteriaLastChanged"), ("TIMETRA-QOS-MIB", "tSapIngressIPCriteriaTableLastChanged"), ("TIMETRA-QOS-MIB", "tSapIngressMacCriteriaRowStatus"), ("TIMETRA-QOS-MIB", "tSapIngressMacCriteriaDescription"), ("TIMETRA-QOS-MIB", "tSapIngressMacCriteriaActionFC"), ("TIMETRA-QOS-MIB", "tSapIngressMacCriteriaActionPriority"), ("TIMETRA-QOS-MIB", "tSapIngressMacCriteriaFrameType"), ("TIMETRA-QOS-MIB", "tSapIngressMacCriteriaSrcMacAddr"), ("TIMETRA-QOS-MIB", "tSapIngressMacCriteriaSrcMacMask"), ("TIMETRA-QOS-MIB", "tSapIngressMacCriteriaDstMacAddr"), ("TIMETRA-QOS-MIB", "tSapIngressMacCriteriaDstMacMask"), ("TIMETRA-QOS-MIB", "tSapIngressMacCriteriaDot1PValue"), ("TIMETRA-QOS-MIB", "tSapIngressMacCriteriaDot1PMask"), ("TIMETRA-QOS-MIB", "tSapIngressMacCriteriaEthernetType"), ("TIMETRA-QOS-MIB", "tSapIngressMacCriteriaDSAP"), ("TIMETRA-QOS-MIB", "tSapIngressMacCriteriaDSAPMask"), ("TIMETRA-QOS-MIB", "tSapIngressMacCriteriaSSAP"), ("TIMETRA-QOS-MIB", "tSapIngressMacCriteriaSSAPMask"), ("TIMETRA-QOS-MIB", "tSapIngressMacCriteriaSnapPid"), ("TIMETRA-QOS-MIB", "tSapIngressMacCriteriaSnapOui"), ("TIMETRA-QOS-MIB", "tSapIngressMacCriteriaLastChanged"), ("TIMETRA-QOS-MIB", "tSapIngressMacCriteriaTableLastChanged"), ("TIMETRA-QOS-MIB", "tSapIngressFCRowStatus"), ("TIMETRA-QOS-MIB", "tSapIngressFCQueue"), ("TIMETRA-QOS-MIB", "tSapIngressFCMCastQueue"), ("TIMETRA-QOS-MIB", "tSapIngressFCBCastQueue"), ("TIMETRA-QOS-MIB", "tSapIngressFCUnknownQueue"), ("TIMETRA-QOS-MIB", "tSapIngressFCLastChanged"), ("TIMETRA-QOS-MIB", "tSapIngressFCInProfRemark"), ("TIMETRA-QOS-MIB", "tSapIngressFCInProfDscp"), ("TIMETRA-QOS-MIB", "tSapIngressFCInProfPrec"), ("TIMETRA-QOS-MIB", "tSapIngressFCDE1OutOfProfile"), ("TIMETRA-QOS-MIB", "tSapIngressFCOutProfRemark"), ("TIMETRA-QOS-MIB", "tSapIngressFCOutProfDscp"), ("TIMETRA-QOS-MIB", "tSapIngressFCOutProfPrec"), ("TIMETRA-QOS-MIB", "tSapIngressFCProfile"), ("TIMETRA-QOS-MIB", "tSapIngressFCTableLastChanged"), ("TIMETRA-QOS-MIB", "tSapIngressPrecRowStatus"), ("TIMETRA-QOS-MIB", "tSapIngressPrecFC"), ("TIMETRA-QOS-MIB", "tSapIngressPrecFCPriority"), ("TIMETRA-QOS-MIB", "tSapIngressPrecLastChanged"), ("TIMETRA-QOS-MIB", "tSapIngressPrecTableLastChanged"), ("TIMETRA-QOS-MIB", "tSapIngressLspExpRowStatus"), ("TIMETRA-QOS-MIB", "tSapIngressLspExpLastChanged"), ("TIMETRA-QOS-MIB", "tSapIngressLspExpFC"), ("TIMETRA-QOS-MIB", "tSapIngressLspExpFCPriority"), ("TIMETRA-QOS-MIB", "tSapIngressLspExpTableLastChange"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxQosSapIngressV10v0Group = tmnxQosSapIngressV10v0Group.setStatus('current')
tmnxQosHsmdaObsoletedV10v0Group = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 16, 2, 69)).setObjects(("TIMETRA-QOS-MIB", "tHsmdaSlopeQueueMbs"), ("TIMETRA-QOS-MIB", "tSapIngressHsmdaPacketOffset"), ("TIMETRA-QOS-MIB", "tSapIngressFCHsmdaQueue"), ("TIMETRA-QOS-MIB", "tSapIngressFCHsmdaMCastQueue"), ("TIMETRA-QOS-MIB", "tSapIngressFCHsmdaBCastQueue"), ("TIMETRA-QOS-MIB", "tSapIngressDefFCHsmdaCntrOvr"), ("TIMETRA-QOS-MIB", "tSapIngressDot1pHsmdaCntrOvr"), ("TIMETRA-QOS-MIB", "tSapIngressPrecHsmdaCntrOvr"), ("TIMETRA-QOS-MIB", "tSapIngressDSCPHsmdaCntrOvr"), ("TIMETRA-QOS-MIB", "tSapIngressLspExpHsmdaCntrOvr"), ("TIMETRA-QOS-MIB", "tSapIngressIPCritHsmdaCntrOvr"), ("TIMETRA-QOS-MIB", "tSapEgressHsmdaQueueCIRAdaptn"), ("TIMETRA-QOS-MIB", "tSapEgressHsmdaQueueAdminCIR"), ("TIMETRA-QOS-MIB", "tSapIngrHsmdaQueueTblLastChngd"), ("TIMETRA-QOS-MIB", "tSapIngressHsmdaQueueRowStatus"), ("TIMETRA-QOS-MIB", "tSapIngressHsmdaQueueLastChanged"), ("TIMETRA-QOS-MIB", "tSapIngressHsmdaQueueCIRAdaptn"), ("TIMETRA-QOS-MIB", "tSapIngressHsmdaQueuePIRAdaptn"), ("TIMETRA-QOS-MIB", "tSapIngressHsmdaQueueAdminPIR"), ("TIMETRA-QOS-MIB", "tSapIngressHsmdaQueueAdminCIR"), ("TIMETRA-QOS-MIB", "tSapIngressHsmdaQueueSlopePolicy"), ("TIMETRA-QOS-MIB", "tSapIngressHsmdaQueuePoliced"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxQosHsmdaObsoletedV10v0Group = tmnxQosHsmdaObsoletedV10v0Group.setStatus('current')
mibBuilder.exportSymbols("TIMETRA-QOS-MIB", tSapIngressMacCriteriaSSAPMask=tSapIngressMacCriteriaSSAPMask, tSapEgressQueueCIRLevel=tSapEgressQueueCIRLevel, tSapIngressDSCPLastChanged=tSapIngressDSCPLastChanged, tMcMlpppEgrProfDescription=tMcMlpppEgrProfDescription, tQosEgrPolicerRowStatus=tQosEgrPolicerRowStatus, tSapIngressHsmdaQueueLastChanged=tSapIngressHsmdaQueueLastChanged, tNetworkQueueFC=tNetworkQueueFC, tAdvCfgAbvOffCapRate=tAdvCfgAbvOffCapRate, tSapIngressQueueBurstLimit=tSapIngressQueueBurstLimit, tNetworkEgressPrecFC=tNetworkEgressPrecFC, tmnxQosNetworkV7v0Group=tmnxQosNetworkV7v0Group, tMcMlpppEgrFCClass=tMcMlpppEgrFCClass, tSapIngPolicerCBS=tSapIngPolicerCBS, tNetworkEgrDSCPTableLastChanged=tNetworkEgrDSCPTableLastChanged, tSapEgrPolicyNameEntry=tSapEgrPolicyNameEntry, tSapEgrPolicerSlopeMaxProb=tSapEgrPolicerSlopeMaxProb, tNetworkEgressFCEntry=tNetworkEgressFCEntry, tQosDomainLastChanged=tQosDomainLastChanged, tQosIngPolicerAdminCIR=tQosIngPolicerAdminCIR, tNetworkIngressFCTable=tNetworkIngressFCTable, tSapIngressFCHsmdaBCastQueue=tSapIngressFCHsmdaBCastQueue, tHsmdaSchedulerPlcyLvl4BrstLimit=tHsmdaSchedulerPlcyLvl4BrstLimit, tHsmdaSchedulerPlcyLvl6BrstLimit=tHsmdaSchedulerPlcyLvl6BrstLimit, tPortSchPlcyGrpTable=tPortSchPlcyGrpTable, tSapIngPolicyNameId=tSapIngPolicyNameId, tQosTimeStampObjects=tQosTimeStampObjects, tSapIngressIPCriteriaIpPrecValue=tSapIngressIPCriteriaIpPrecValue, tQosEgrQueueEntry=tQosEgrQueueEntry, tAtmTdpDescrType=tAtmTdpDescrType, tSapEgressQueuePoolName=tSapEgressQueuePoolName, tVirtualSchedulerDescription=tVirtualSchedulerDescription, tSapIngressDSCP=tSapIngressDSCP, tSapEgressFCQueue=tSapEgressFCQueue, tSapIngressIPv6CriteriaDestIpAddr=tSapIngressIPv6CriteriaDestIpAddr, tSapEgrIPCritDestIpMask=tSapEgrIPCritDestIpMask, tSapIngressIPCriteriaActionPriority=tSapIngressIPCriteriaActionPriority, tAdvCfgBWDGranRate=tAdvCfgBWDGranRate, tPortSchPlcyGrpName=tPortSchPlcyGrpName, tNetworkQueueCIRAdaptation=tNetworkQueueCIRAdaptation, tSapIngressIPCriteriaRowStatus=tSapIngressIPCriteriaRowStatus, tDSCPName=tDSCPName, tPortSchedulerPlcyLvl8CIR=tPortSchedulerPlcyLvl8CIR, tHsmdaPoolLastChanged=tHsmdaPoolLastChanged, tQosEgrQGroupName=tQosEgrQGroupName, tSapEgressFCTableLastChanged=tSapEgressFCTableLastChanged, tSapIngressFCOutProfPrec=tSapIngressFCOutProfPrec, tSapIngressDSCPFC=tSapIngressDSCPFC, tSapEgressQueuePortWght=tSapEgressQueuePortWght, tSapEgressQueuePortCIRWght=tSapEgressQueuePortCIRWght, timetraQosMIBModule=timetraQosMIBModule, tPortSchPlcyGrpRowStatus=tPortSchPlcyGrpRowStatus, tSapIngressLspExpFC=tSapIngressLspExpFC, tNetworkPolicyTable=tNetworkPolicyTable, tHsmdaSchedulerPlcyLvl1GrpId=tHsmdaSchedulerPlcyLvl1GrpId, tmnxQosSchedulerV8v0Group=tmnxQosSchedulerV8v0Group, tSapIngPolicerEntry=tSapIngPolicerEntry, tHsmdaSlopeLoMaxProbability=tHsmdaSlopeLoMaxProbability, tSapIngPolicerTableLastChanged=tSapIngPolicerTableLastChanged, tSapIngressDSCPPriority=tSapIngressDSCPPriority, tQosEgrQueueParent=tQosEgrQueueParent, tQosPolicerCtrlPolLastChgd=tQosPolicerCtrlPolLastChgd, tmnxQosQueueV4v0Group=tmnxQosQueueV4v0Group, tmnxQosBurstLimitGroup=tmnxQosBurstLimitGroup, tHsmdaSlopePolicyTable=tHsmdaSlopePolicyTable, tVirtualSchedulerPIR=tVirtualSchedulerPIR, tSlopeTimeAvgFactor=tSlopeTimeAvgFactor, tmnxQosMcMlpppEgrGroup=tmnxQosMcMlpppEgrGroup, tSapIngressIPCriteriaProtocol=tSapIngressIPCriteriaProtocol, tSapIngPolicerStatMode=tSapIngPolicerStatMode, tSapIngressDot1pTable=tSapIngressDot1pTable, tQosPolicerCtrlPolRootMaxRate=tQosPolicerCtrlPolRootMaxRate, tmnxQosGroups=tmnxQosGroups, tmnxQosSapEgressV5v0Group=tmnxQosSapEgressV5v0Group, tPortSchedulerPlcyLvl6CIR=tPortSchedulerPlcyLvl6CIR, tSharedQueueFCTableLastChanged=tSharedQueueFCTableLastChanged, tVirtualSchedulerCIR=tVirtualSchedulerCIR, tSapIngressQueuePIRAdaptation=tSapIngressQueuePIRAdaptation, tMcFrEgrClassLastChanged=tMcFrEgrClassLastChanged, tNetworkEgrHsmdaQueueMBS=tNetworkEgrHsmdaQueueMBS, tAdvCfgLastChanged=tAdvCfgLastChanged, tMcFrIngrClassLastChanged=tMcFrIngrClassLastChanged, tSapIngPolicerAdminPIR=tSapIngPolicerAdminPIR, tAdvCfgDescription=tAdvCfgDescription, tSapIngressFCBCastPlcrFPQGrp=tSapIngressFCBCastPlcrFPQGrp, tSapEgrIPCritLastChanged=tSapEgrIPCritLastChanged, tQosObjects=tQosObjects, tSapEgrPolicerPIRAdaptation=tSapEgrPolicerPIRAdaptation, tQosEgrQTableLastChanged=tQosEgrQTableLastChanged, tSapEgressFCInProfPrec=tSapEgressFCInProfPrec, tmnxQos77x0V8v0Compliance=tmnxQos77x0V8v0Compliance, tSapEgressQueueCBS=tSapEgressQueueCBS, tSapIngressPolicyName=tSapIngressPolicyName, tSapEgrIPCritSourcePortOperator=tSapEgrIPCritSourcePortOperator, tHsmdaSchedulerPlcyLvl1Rate=tHsmdaSchedulerPlcyLvl1Rate, tSapEgrPolicerPktOffset=tSapEgrPolicerPktOffset, tSapEgrPolicerWeight=tSapEgrPolicerWeight, tQosEgrQueuePortWght=tQosEgrQueuePortWght, tSchedulerPolicyFrameBasedAccnt=tSchedulerPolicyFrameBasedAccnt, tVirtualSchedulerEntry=tVirtualSchedulerEntry, tSapIngressMacCriteriaSnapOui=tSapIngressMacCriteriaSnapOui, tVirtualSchedulerTier=tVirtualSchedulerTier, tSapIngressIPv6CriteriaSourcePortOperator=tSapIngressIPv6CriteriaSourcePortOperator, tQosEgrQueueCBS=tQosEgrQueueCBS, tHsmdaSchedPlcyGrpTblLastChngd=tHsmdaSchedPlcyGrpTblLastChngd, tMcMlpppEgrFCTableLastChanged=tMcMlpppEgrFCTableLastChanged, tSapEgressHsmdaQueueSlopePolicy=tSapEgressHsmdaQueueSlopePolicy, tSapIngressMacCriteriaDot1PMask=tSapIngressMacCriteriaDot1PMask, tSapIngressMacCriteriaDstMacMask=tSapIngressMacCriteriaDstMacMask, tmnxQosAtmTdpV9v0Group=tmnxQosAtmTdpV9v0Group, tNetworkIngressDSCPFC=tNetworkIngressDSCPFC, tSapIngressIPCriteriaDescription=tSapIngressIPCriteriaDescription, tSharedQueuePoolName=tSharedQueuePoolName, tQosIngPolicerTable=tQosIngPolicerTable, tSapIngressFCQGrpMCast=tSapIngressFCQGrpMCast, tQosPolicerArbiterTier=tQosPolicerArbiterTier, tNetworkQueuePortWght=tNetworkQueuePortWght, tSapIngressIPv6CriteriaDSCP=tSapIngressIPv6CriteriaDSCP, tMcFrIngrProfRowStatus=tMcFrIngrProfRowStatus, tNetworkQueueFCTable=tNetworkQueueFCTable, tSapIngressDot1pHsmdaCntrOvr=tSapIngressDot1pHsmdaCntrOvr, tNetworkQueuePolicyEHWrrPlcy=tNetworkQueuePolicyEHWrrPlcy, tNetworkQueueFCName=tNetworkQueueFCName, tNamedPoolPolicyQ1DefaultWeight=tNamedPoolPolicyQ1DefaultWeight, tSapIngPolicerHiPrioOnly=tSapIngPolicerHiPrioOnly, tMcMlpppIngressObjects=tMcMlpppIngressObjects, tMcMlpppEgrProfLastChanged=tMcMlpppEgrProfLastChanged, tNetworkQueueHiPrioOnly=tNetworkQueueHiPrioOnly, tSapIngressQueueTableLastChanged=tSapIngressQueueTableLastChanged, tAtmTdpsCurrentlyConfigured=tAtmTdpsCurrentlyConfigured, tNamedPoolPolicyDescription=tNamedPoolPolicyDescription, tSapEgrPolicerAdminPIR=tSapEgrPolicerAdminPIR, tSapIngPolicyNameTableLastChgd=tSapIngPolicyNameTableLastChgd, tSapIngressMacCriteriaActionFC=tSapIngressMacCriteriaActionFC, tHsmdaSchedulerPlcyGrp2BrstLimit=tHsmdaSchedulerPlcyGrp2BrstLimit, tSharedQueuePolicyDescription=tSharedQueuePolicyDescription, tAtmTdpObjects=tAtmTdpObjects, tHsmdaWrrPolicyRowStatus=tHsmdaWrrPolicyRowStatus, tNetworkIngressLSPEXPFC=tNetworkIngressLSPEXPFC, tQosIngQueueExpedite=tQosIngQueueExpedite, tQosIngPolicerSlopeMap=tQosIngPolicerSlopeMap, tSharedQueueCIRWeight=tSharedQueueCIRWeight, tNetworkIngressFCUniCastPlcr=tNetworkIngressFCUniCastPlcr, tPortSchedulerPlcyLvl6PIR=tPortSchedulerPlcyLvl6PIR, tMcFrEgrClassWeight=tMcFrEgrClassWeight, tNetworkEgressFCLspExpInProfile=tNetworkEgressFCLspExpInProfile, tSapIngressIPv6CriteriaDestPortValue2=tSapIngressIPv6CriteriaDestPortValue2, tSapIngressMacCriteriaEntry=tSapIngressMacCriteriaEntry, tSharedQueueCIRLevel=tSharedQueueCIRLevel, tNetworkEgressFCDot1pOutProfile=tNetworkEgressFCDot1pOutProfile, tSapIngressQueueMBS=tSapIngressQueueMBS, tQosIngQGroupName=tQosIngQGroupName, tSapIngressFCEntry=tSapIngressFCEntry, tmnxQos7750V4v0Compliance=tmnxQos7750V4v0Compliance, tSapEgrPolicyNameLastChanged=tSapEgrPolicyNameLastChanged, tSapEgressFCDot1PInProfile=tSapEgressFCDot1PInProfile, tSapIngressIPCriteriaSourcePortOperator=tSapIngressIPCriteriaSourcePortOperator, tQosEgrQueueTable=tQosEgrQueueTable, tSapEgressQueueTable=tSapEgressQueueTable, tSapIngressPrecEntry=tSapIngressPrecEntry, tNetworkQueueFCRowStatus=tNetworkQueueFCRowStatus, tHsmdaSlopeLoAdminStatus=tHsmdaSlopeLoAdminStatus, tQosEgrPolicerLevel=tQosEgrPolicerLevel, tmnxQos7450V6v1Compliance=tmnxQos7450V6v1Compliance, tSapIngressLspExpRowStatus=tSapIngressLspExpRowStatus, tMcMlpppEgrFCName=tMcMlpppEgrFCName, tQosEgrQueueMBS=tQosEgrQueueMBS, tSapIngressQueueHiPrioOnly=tSapIngressQueueHiPrioOnly, tHsmdaSchedulerPlcyMaxRate=tHsmdaSchedulerPlcyMaxRate, tHsmdaPoolClass6AllocPercent=tHsmdaPoolClass6AllocPercent, tSapEgrPolicerParent=tSapEgrPolicerParent, tMcFrIngrProfTable=tMcFrIngrProfTable, tSapEgressQueueOperPIR=tSapEgressQueueOperPIR, tSapEgressQueueBurstLimit=tSapEgressQueueBurstLimit, tmnxQos7450V10v0Compliance=tmnxQos7450V10v0Compliance, tSapIngressMacCriteriaRowStatus=tSapIngressMacCriteriaRowStatus, tSapIngPolicerAdminPIRPercent=tSapIngPolicerAdminPIRPercent, tmnxQos7450V6v0Compliance=tmnxQos7450V6v0Compliance, tSapIngressFCInProfDscp=tSapIngressFCInProfDscp, tVirtualSchedulerParent=tVirtualSchedulerParent, tSharedQueuePIR=tSharedQueuePIR, tNetworkEgrHsmdaQueueBurstLimit=tNetworkEgrHsmdaQueueBurstLimit, tHsmdaSchedulerPlcyLvl3GrpId=tHsmdaSchedulerPlcyLvl3GrpId, tSapIngressFCTableLastChanged=tSapIngressFCTableLastChanged, tSapIngressMacCritInnerTagMask=tSapIngressMacCritInnerTagMask, tSapIngressRowStatus=tSapIngressRowStatus, tQosNotifications=tQosNotifications, tSapIngressHsmdaQueueSlopePolicy=tSapIngressHsmdaQueueSlopePolicy, tSapIngPolicyNameLastChanged=tSapIngPolicyNameLastChanged, tSapEgressDSCPTable=tSapEgressDSCPTable, tQosQGrpFCGroup=tQosQGrpFCGroup, tQosEgrQGroupFCEntry=tQosEgrQGroupFCEntry, tHsmdaPoolClass3AllocPercent=tHsmdaPoolClass3AllocPercent, tNamedPoolPolicyQ1MdaWeight=tNamedPoolPolicyQ1MdaWeight, tHsmdaSlopeLoStartDepth=tHsmdaSlopeLoStartDepth, tNetworkQueueRowStatus=tNetworkQueueRowStatus, tMcMlpppEgrClassLastChanged=tMcMlpppEgrClassLastChanged, tAtmTdpRowStatus=tAtmTdpRowStatus, tmnxQosConformance=tmnxQosConformance, tmnxQos77x0V9v0Compliance=tmnxQos77x0V9v0Compliance, tSapEgressPrecTable=tSapEgressPrecTable, tmnxQosMacCritVidFltrV9v0Group=tmnxQosMacCritVidFltrV9v0Group, tSapIngressQueueAdminCIR=tSapIngressQueueAdminCIR, tSapEgressQueueParent=tSapEgressQueueParent, tHsmdaSchedulerPlcyLvl2WgtInGrp=tHsmdaSchedulerPlcyLvl2WgtInGrp, tMcFrIngrClassTable=tMcFrIngrClassTable, tSapIngressDot1pEntry=tSapIngressDot1pEntry, tSapIngressFCUnknownPlcrFPQGrp=tSapIngressFCUnknownPlcrFPQGrp, tSapEgrIPCritFragment=tSapEgrIPCritFragment, tHsmdaPoolRoot4AllocWeight=tHsmdaPoolRoot4AllocWeight, tQosEgrPolicerLastChanged=tQosEgrPolicerLastChanged, tSapIngressPrecFCPriority=tSapIngressPrecFCPriority, tQosIngPolicerId=tQosIngPolicerId, tSapEgressQueueHiPrioOnly=tSapEgressQueueHiPrioOnly, tSharedQueueLastChanged=tSharedQueueLastChanged, tFCValue=tFCValue, tQosIngQueueTable=tQosIngQueueTable, tSapIngressTableLastChanged=tSapIngressTableLastChanged, tNetworkPolicyTableLastChanged=tNetworkPolicyTableLastChanged, tQosEgrPolicerCBS=tQosEgrPolicerCBS, tQosPolicerCtrlPolRowStatus=tQosPolicerCtrlPolRowStatus, tQosPolicerArbiterEntry=tQosPolicerArbiterEntry, tPortSchPlcyLvl7GrpWeight=tPortSchPlcyLvl7GrpWeight, tNetworkEgressDSCPEntry=tNetworkEgressDSCPEntry, tAtmTdpServCat=tAtmTdpServCat, tSapIngressQueueExpedite=tSapIngressQueueExpedite, tSapEgressHsmdaPacketOffset=tSapEgressHsmdaPacketOffset, tHsmdaSchedulerPlcyLastChanged=tHsmdaSchedulerPlcyLastChanged, tSharedQueueTableLastChanged=tSharedQueueTableLastChanged, tQosPolicerArbiterLastChgd=tQosPolicerArbiterLastChgd, tAdvCfgMaxDecPirPrcnt=tAdvCfgMaxDecPirPrcnt, tMcMlpppEgressObjects=tMcMlpppEgressObjects, tNetworkEgressFCLspExpOutProfile=tNetworkEgressFCLspExpOutProfile, tQosIngQTableLastChanged=tQosIngQTableLastChanged, tNetworkEgressDSCPFC=tNetworkEgressDSCPFC, tSapIngressMacCriteriaDSAP=tSapIngressMacCriteriaDSAP, tNetworkIngressDot1pEntry=tNetworkIngressDot1pEntry, tSapIngPolicerRowStatus=tSapIngPolicerRowStatus, tNetworkEgrHsmdaQueueSlopePolicy=tNetworkEgrHsmdaQueueSlopePolicy, tPortSchedulerPlcyMaxRate=tPortSchedulerPlcyMaxRate, tSapIngressQueueMBSBytes=tSapIngressQueueMBSBytes, tSapIngressFCQGrp=tSapIngressFCQGrp, tNetworkEgrHsmdaQueueEntry=tNetworkEgrHsmdaQueueEntry, tSapIngPolicyNameRowStatus=tSapIngPolicyNameRowStatus, tPortSchPlcyLvl2GrpWeight=tPortSchPlcyLvl2GrpWeight, tSapIngPolicerRateType=tSapIngPolicerRateType, tNetworkIngressDot1pProfile=tNetworkIngressDot1pProfile, tQosEgrQGroupTableLastChanged=tQosEgrQGroupTableLastChanged, tHsmdaPoolRoot3AllocWeight=tHsmdaPoolRoot3AllocWeight, tAdvCfgDecOnly=tAdvCfgDecOnly, tSapIngressMacCritInnerTagValue=tSapIngressMacCritInnerTagValue, tSapIngressIPv6CriteriaSourceIpMask=tSapIngressIPv6CriteriaSourceIpMask, tHsmdaSlopeHiMaxProbability=tHsmdaSlopeHiMaxProbability, tHsmdaWrrPolicyIncludeQueues=tHsmdaWrrPolicyIncludeQueues, tSapIngressQueueWeight=tSapIngressQueueWeight)
mibBuilder.exportSymbols("TIMETRA-QOS-MIB", tNetworkEgressDSCPLastChanged=tNetworkEgressDSCPLastChanged, tDSCPNameRowStatus=tDSCPNameRowStatus, tSapIngPolicerCIRAdaptation=tSapIngPolicerCIRAdaptation, tHsmdaSlopeLastChanged=tHsmdaSlopeLastChanged, tQosIngPolicerLastChanged=tQosIngPolicerLastChanged, tSapIngPolicyNameTable=tSapIngPolicyNameTable, tNetworkEgressFCQGrpQueue=tNetworkEgressFCQGrpQueue, tFCObjects=tFCObjects, tPortSchedulerPlcyLvl4PIR=tPortSchedulerPlcyLvl4PIR, tPortSchPlcyLvl3GrpWeight=tPortSchPlcyLvl3GrpWeight, tSapEgressQueueLastChanged=tSapEgressQueueLastChanged, tQosIngPolicerPktOffset=tQosIngPolicerPktOffset, tSapEgrPolicerSlopeStartDepth=tSapEgrPolicerSlopeStartDepth, tPortSchedulerPlcyLvl5PIR=tPortSchedulerPlcyLvl5PIR, tAtmTdpPolicing=tAtmTdpPolicing, tSapEgrPolicerMBS=tSapEgrPolicerMBS, tQ1NamedPoolResvCbsAmbrAlrmStep=tQ1NamedPoolResvCbsAmbrAlrmStep, tSapIngressQueueAdminCIRPercent=tSapIngressQueueAdminCIRPercent, tMcFrIngrClassReassemblyTmout=tMcFrIngrClassReassemblyTmout, tSapEgressQueueOperCIR=tSapEgressQueueOperCIR, tMcFrEgrProfIndex=tMcFrEgrProfIndex, tmnxQosMcFrIngrGroup=tmnxQosMcFrIngrGroup, tNetworkEgrHsmdaQueuePIRPercent=tNetworkEgrHsmdaQueuePIRPercent, tSapEgressQueueIndex=tSapEgressQueueIndex, tMcFrEgrProfDescription=tMcFrEgrProfDescription, tQosEgrPolicerHiPrioOnly=tQosEgrPolicerHiPrioOnly, tSharedQueueWeight=tSharedQueueWeight, tMcFrEgrProfEntry=tMcFrEgrProfEntry, tQosEgrQueuePortLvl=tQosEgrQueuePortLvl, tSapIngPolicerPktOffset=tSapIngPolicerPktOffset, tQosIngPolicerSlopeMaxDepth=tQosIngPolicerSlopeMaxDepth, tSapIngressScope=tSapIngressScope, tSlopePolicy=tSlopePolicy, tQosPolicerCtrlPolTblLastChgd=tQosPolicerCtrlPolTblLastChgd, tNetworkEgressDSCP=tNetworkEgressDSCP, tHsmdaWrrPolicyTblLastChgd=tHsmdaWrrPolicyTblLastChgd, tSapIngressFCPlcrFPQGrp=tSapIngressFCPlcrFPQGrp, tSapIngressQueueRateType=tSapIngressQueueRateType, tMcFrEgrClassIndex=tMcFrEgrClassIndex, tAdvCfgPolicyRowStatus=tAdvCfgPolicyRowStatus, tMcFrEgrClassTable=tMcFrEgrClassTable, tSapIngressFCRowStatus=tSapIngressFCRowStatus, tQosEgrQGroupEntry=tQosEgrQGroupEntry, tSchedulerObjects=tSchedulerObjects, tSapIngressIPCritHsmdaCntrOvr=tSapIngressIPCritHsmdaCntrOvr, tSapIngressLspExpTable=tSapIngressLspExpTable, tSapIngPolicerLastChanged=tSapIngPolicerLastChanged, tSapEgressRowStatus=tSapEgressRowStatus, tSapIngressMacCriteriaActionPriority=tSapIngressMacCriteriaActionPriority, tVirtualSchedulerPortLvl=tVirtualSchedulerPortLvl, tSharedQueueObjects=tSharedQueueObjects, tNetworkPolicyEgressRemarkDscp=tNetworkPolicyEgressRemarkDscp, tAdvCfgTimeAvgFactor=tAdvCfgTimeAvgFactor, tNetworkEgressFCQGrpPolicer=tNetworkEgressFCQGrpPolicer, tMcMlpppEgrProfRowStatus=tMcMlpppEgrProfRowStatus, tNetworkEgressFCDEMark=tNetworkEgressFCDEMark, tSapEgressTableLastChanged=tSapEgressTableLastChanged, tHsmdaPoolRoot7AllocWeight=tHsmdaPoolRoot7AllocWeight, tSapIngressQueuePoliced=tSapIngressQueuePoliced, tmnxQos77x0V7v0Compliance=tmnxQos77x0V7v0Compliance, tSapIngPolicerPIRAdaptation=tSapIngPolicerPIRAdaptation, tSapIngPolicerProfileCapped=tSapIngPolicerProfileCapped, tSapEgressPrecProfile=tSapEgressPrecProfile, tQosEgrQueueCIRLevel=tQosEgrQueueCIRLevel, tNetworkIngressDot1pValue=tNetworkIngressDot1pValue, tAtmTdpEntry=tAtmTdpEntry, tSapEgressQueueXPWredQ=tSapEgressQueueXPWredQ, tNamedPoolPolicyName=tNamedPoolPolicyName, tSapIngressDot1pPriority=tSapIngressDot1pPriority, tAdvCfgSampleInterval=tAdvCfgSampleInterval, tNetworkIngressLSPEXPTableLastChanged=tNetworkIngressLSPEXPTableLastChanged, tSapIngressDSCPHsmdaCntrOvr=tSapIngressDSCPHsmdaCntrOvr, tSapEgressHsmdaQueueMBS=tSapEgressHsmdaQueueMBS, tNetworkEgressFCTableLastChanged=tNetworkEgressFCTableLastChanged, tQosIngQueueMBS=tQosIngQueueMBS, tNetworkEgrPrecTableLastChanged=tNetworkEgrPrecTableLastChanged, tQosEgrQGroupFCRowStatus=tQosEgrQGroupFCRowStatus, tPortSchedulerPlcyOrphanCIRLvl=tPortSchedulerPlcyOrphanCIRLvl, tSapEgressQueueCIRWeight=tSapEgressQueueCIRWeight, tSapIngPolicerId=tSapIngPolicerId, tSapEgressHsmdaQueuePIRAdaptn=tSapEgressHsmdaQueuePIRAdaptn, tNetworkQueueTableLastChanged=tNetworkQueueTableLastChanged, tSapIngressMacCriteriaSnapPid=tSapIngressMacCriteriaSnapPid, tmnxQosDSCPGroup=tmnxQosDSCPGroup, tSapIngressFCDE1OutOfProfile=tSapIngressFCDE1OutOfProfile, tNetworkQueuePolicyEHPktBOffst=tNetworkQueuePolicyEHPktBOffst, tHsmdaSchedulerPlcyBrstLimit=tHsmdaSchedulerPlcyBrstLimit, tSchedulerPolicyLastChanged=tSchedulerPolicyLastChanged, tmnxQosHsmdaObsoletedV10v0Group=tmnxQosHsmdaObsoletedV10v0Group, tSapEgrPolicyNameId=tSapEgrPolicyNameId, tSapEgressPrecEntry=tSapEgressPrecEntry, tSlopeRowStatus=tSlopeRowStatus, tHsmdaSchedulerPlcyGrp2Rate=tHsmdaSchedulerPlcyGrp2Rate, tPortSchPlcyGrpAdminCIR=tPortSchPlcyGrpAdminCIR, tHsmdaSchedulerPlcyLvl7WgtInGrp=tHsmdaSchedulerPlcyLvl7WgtInGrp, tAtmTdpsMaxSupported=tAtmTdpsMaxSupported, tmnxQosNetworkV9v0Group=tmnxQosNetworkV9v0Group, tSapEgressPrecRowStatus=tSapEgressPrecRowStatus, tQosEgrPolicerSlopeMaxDepth=tQosEgrPolicerSlopeMaxDepth, tQosEgrQueueUsePortParent=tQosEgrQueueUsePortParent, tQosIngPolicerLevel=tQosIngPolicerLevel, tNetworkPolicyRowStatus=tNetworkPolicyRowStatus, tSapIngressIPCriteriaDestPortValue1=tSapIngressIPCriteriaDestPortValue1, tSapEgrPolicerLevel=tSapEgrPolicerLevel, tSharedQueueHiPrioOnly=tSharedQueueHiPrioOnly, tQosEgrQueueLastChanged=tQosEgrQueueLastChanged, tQosPolicerLevelTblLastChgd=tQosPolicerLevelTblLastChgd, tPortSchPlcyGrpLastChanged=tPortSchPlcyGrpLastChanged, tMcFrEgrClassTableLastChanged=tMcFrEgrClassTableLastChanged, tAtmTdpWeight=tAtmTdpWeight, tQosIngPolicerTableLastChanged=tQosIngPolicerTableLastChanged, tNetworkIngressDSCPTable=tNetworkIngressDSCPTable, tVirtualSchedulerUsePortParent=tVirtualSchedulerUsePortParent, tNetworkEgressFCDot1pInProfile=tNetworkEgressFCDot1pInProfile, tmnxQosHsmdaV7v0Group=tmnxQosHsmdaV7v0Group, tMcMlpppIngrClassEntry=tMcMlpppIngrClassEntry, tPortSchPlcyLvl1GrpName=tPortSchPlcyLvl1GrpName, tQosEgrQGroupFCQueue=tQosEgrQGroupFCQueue, tSapEgrPolicyNameTable=tSapEgrPolicyNameTable, tSapIngressLspExpHsmdaCntrOvr=tSapIngressLspExpHsmdaCntrOvr, tSharedQueueRowStatus=tSharedQueueRowStatus, tSapEgressQueueAdminCIR=tSapEgressQueueAdminCIR, tSlopePolicyEntry=tSlopePolicyEntry, tSapEgrPolicerAdvCfgPolicy=tSapEgrPolicerAdvCfgPolicy, tNetworkEgressDSCPTable=tNetworkEgressDSCPTable, tSapEgressLastChanged=tSapEgressLastChanged, tSharedQueueFCRowStatus=tSharedQueueFCRowStatus, tHsmdaPoolPolicyName=tHsmdaPoolPolicyName, tSharedQueueFCBCastQueue=tSharedQueueFCBCastQueue, tHsmdaPoolClass1Parent=tHsmdaPoolClass1Parent, tNetworkPolicyIngressDefaultActionProfile=tNetworkPolicyIngressDefaultActionProfile, tSapIngressDefaultFC=tSapIngressDefaultFC, tMcFrEgrClassEntry=tMcFrEgrClassEntry, tPortSchPlcyLvl2GrpName=tPortSchPlcyLvl2GrpName, tmnxQosPolicerV9v0Group=tmnxQosPolicerV9v0Group, tSapIngressIPCriteriaDestPortOperator=tSapIngressIPCriteriaDestPortOperator, tMcMlpppEgrClassTable=tMcMlpppEgrClassTable, tQosEgrPolicerEntry=tQosEgrPolicerEntry, tPortSchedulerPlcyOrphanLvl=tPortSchedulerPlcyOrphanLvl, tAdvCfgPolicyTblLastChgd=tAdvCfgPolicyTblLastChgd, tQosEgrPolicerParent=tQosEgrPolicerParent, tVirtualSchedulerPortCIRWght=tVirtualSchedulerPortCIRWght, tSapIngressHsmdaQueuePoliced=tSapIngressHsmdaQueuePoliced, tSapIngressDot1pTableLastChanged=tSapIngressDot1pTableLastChanged, tQ1NamedPoolEntry=tQ1NamedPoolEntry, tNetworkQueueCIRLevel=tNetworkQueueCIRLevel, tHsmdaSchedulerPlcyEntry=tHsmdaSchedulerPlcyEntry, tSharedQueueFCUnknownQueue=tSharedQueueFCUnknownQueue, tSharedQueueCBS=tSharedQueueCBS, tPortSchPlcyLvlGrpLastChanged=tPortSchPlcyLvlGrpLastChanged, tSlopePolicyTable=tSlopePolicyTable, tSapEgrPolicerStatMode=tSapEgrPolicerStatMode, tPortSchedulerPlcyLvl2CIR=tPortSchedulerPlcyLvl2CIR, tPortSchPlcyGrpAdminPIR=tPortSchPlcyGrpAdminPIR, tNetworkEgressDSCPProfile=tNetworkEgressDSCPProfile, tHsmdaPoolClass3Parent=tHsmdaPoolClass3Parent, tSapEgressPrecValue=tSapEgressPrecValue, tMcFrIngrProfLastChanged=tMcFrIngrProfLastChanged, tQosEgrQueueRateType=tQosEgrQueueRateType, tSapEgressIndex=tSapEgressIndex, tSapIngressQueueCBS=tSapIngressQueueCBS, tNamedPoolPolicyRowStatus=tNamedPoolPolicyRowStatus, tMcMlpppEgrProfTable=tMcMlpppEgrProfTable, tDSCPNameEntry=tDSCPNameEntry, tNetworkIngressFCName=tNetworkIngressFCName, tSlopePolicyTableLastChanged=tSlopePolicyTableLastChanged, tNetworkEgressFCDSCPInProfile=tNetworkEgressFCDSCPInProfile, tSharedQueueCIR=tSharedQueueCIR, tQosEgrQueueAdvCfgPolicy=tQosEgrQueueAdvCfgPolicy, tQosEgrQueueRowStatus=tQosEgrQueueRowStatus, tSapEgressFCTable=tSapEgressFCTable, tQosEgrQueueCIRWeight=tQosEgrQueueCIRWeight, tNetworkIngressLSPEXP=tNetworkIngressLSPEXP, tFCStorageType=tFCStorageType, tSapEgressQueuePIRAdaptation=tSapEgressQueuePIRAdaptation, tSapEgrPolicerTableLastChanged=tSapEgrPolicerTableLastChanged, tVirtualSchedulerCIRWeight=tVirtualSchedulerCIRWeight, tFCNameTable=tFCNameTable, tSapEgressFCInProfDscp=tSapEgressFCInProfDscp, tSapEgressDSCPRowStatus=tSapEgressDSCPRowStatus, tHsmdaPoolClass6Parent=tHsmdaPoolClass6Parent, tMcMlpppEgrFCEntry=tMcMlpppEgrFCEntry, tNetworkIngressLSPEXPEntry=tNetworkIngressLSPEXPEntry, tmnxQos7450V7v0Compliance=tmnxQos7450V7v0Compliance, tSapEgrIPCritRowStatus=tSapEgrIPCritRowStatus, tNetworkIngressDSCPRowStatus=tNetworkIngressDSCPRowStatus, tmnxQosSapAtmV7v0Group=tmnxQosSapAtmV7v0Group, tSapEgressPrecLastChanged=tSapEgressPrecLastChanged, tSapEgrPolicyNameTableLastChgd=tSapEgrPolicyNameTableLastChgd, tHsmdaPoolClass7Parent=tHsmdaPoolClass7Parent, tFCName=tFCName, tSapIngressQueueTable=tSapIngressQueueTable, tSapIngressFCUnknownQueue=tSapIngressFCUnknownQueue, tQosPolicerArbiterRate=tQosPolicerArbiterRate, tQosEgrPolicerCIRAdaptation=tQosEgrPolicerCIRAdaptation, tQosFCQGrpFC8v0Group=tQosFCQGrpFC8v0Group, tQosPolicerLevelFixedMBS=tQosPolicerLevelFixedMBS, tSapIngressIPCriteriaActionFC=tSapIngressIPCriteriaActionFC, tSapEgrPolicerAdminCIRPercent=tSapEgrPolicerAdminCIRPercent, tAtmTdpShaping=tAtmTdpShaping, tQosEgrQGroupRowStatus=tQosEgrQGroupRowStatus, tQosPolicerCtrlPolDescr=tQosPolicerCtrlPolDescr, tPortSchPlcyLvl8GrpWeight=tPortSchPlcyLvl8GrpWeight, tSapIngressQueueEntry=tSapIngressQueueEntry, tHsmdaSchedulerPlcyRowStatus=tHsmdaSchedulerPlcyRowStatus, tHsmdaPoolRoot5AllocWeight=tHsmdaPoolRoot5AllocWeight, tMcMlpppIngrProfTableLastChanged=tMcMlpppIngrProfTableLastChanged, tQosIngQueuePIRAdaptation=tQosIngQueuePIRAdaptation, tSapEgressDot1pEntry=tSapEgressDot1pEntry, tHsmdaSlopePolicyEntry=tHsmdaSlopePolicyEntry, tSapEgrPolicerRateType=tSapEgrPolicerRateType, tMcFrIngrClassIndex=tMcFrIngrClassIndex, tQosEgrQGroupFCTable=tQosEgrQGroupFCTable, tPortSchPlcyLvl6GrpName=tPortSchPlcyLvl6GrpName, tSapIngressIPv6CriteriaNextHeader=tSapIngressIPv6CriteriaNextHeader, tHsmdaWrrPolicyName=tHsmdaWrrPolicyName, tSharedQueueParent=tSharedQueueParent, tSapIngressMacCriteriaSrcMacMask=tSapIngressMacCriteriaSrcMacMask, tSapIngressHsmdaQueueRowStatus=tSapIngressHsmdaQueueRowStatus, tSapEgressHsmdaQueueRowStatus=tSapEgressHsmdaQueueRowStatus, tSapIngPolicerAdvCfgPolicy=tSapIngPolicerAdvCfgPolicy, tPortSchedulerPlcyLastChanged=tPortSchedulerPlcyLastChanged, tHsmdaWrrPolicyEntry=tHsmdaWrrPolicyEntry, tNetworkEgressPrecLastChanged=tNetworkEgressPrecLastChanged, tmnxQosHsmdaV9v0Group=tmnxQosHsmdaV9v0Group, tSharedQueueFCLastChanged=tSharedQueueFCLastChanged, tSapIngressIPCriteriaSourceIpMask=tSapIngressIPCriteriaSourceIpMask, tSapEgressHsmdaLowBrstMaxCls=tSapEgressHsmdaLowBrstMaxCls, tSapEgressHsmdaQueueLastChanged=tSapEgressHsmdaQueueLastChanged, tSapEgrIPCritDestPortOperator=tSapEgrIPCritDestPortOperator, tPortSchPlcyGrpTblLastChgd=tPortSchPlcyGrpTblLastChgd, tSapEgressDSCPHsmdaCntrOverride=tSapEgressDSCPHsmdaCntrOverride, tQosPolicerLevelEntry=tQosPolicerLevelEntry, tNetworkEgressPrecRowStatus=tNetworkEgressPrecRowStatus, tQosQGrpV8v0Group=tQosQGrpV8v0Group, tSapEgressFCLastChanged=tSapEgressFCLastChanged, tSapEgressHsmdaQueueAdminPIR=tSapEgressHsmdaQueueAdminPIR, tHsmdaPoolClass4AllocPercent=tHsmdaPoolClass4AllocPercent, tQosIngPolicerSlopeMaxProb=tQosIngPolicerSlopeMaxProb, tSapIngressHsmdaQueueAdminPIR=tSapIngressHsmdaQueueAdminPIR, tmnxQosSlopeGroup=tmnxQosSlopeGroup, tHsmdaPoolClass2AllocPercent=tHsmdaPoolClass2AllocPercent, tQosEgrQGroupDescr=tQosEgrQGroupDescr, tPortSchPlcyLvlGrpTblLastChgd=tPortSchPlcyLvlGrpTblLastChgd, tSharedQueueFCName=tSharedQueueFCName, tSapEgressHsmdaQueueCIRAdaptn=tSapEgressHsmdaQueueCIRAdaptn, tSapEgressQueueExpedite=tSapEgressQueueExpedite, tAtmTdpIndexNext=tAtmTdpIndexNext, tSapIngressFCBCastQueue=tSapIngressFCBCastQueue, tSapIngressQueueCIRAdaptation=tSapIngressQueueCIRAdaptation, tSapIngPolicerSlopeMaxDepth=tSapIngPolicerSlopeMaxDepth, tNetworkIngressDSCPLastChanged=tNetworkIngressDSCPLastChanged, tQosIngQueueMBSBytes=tQosIngQueueMBSBytes, tPortSchedulerPlcyDescription=tPortSchedulerPlcyDescription)
mibBuilder.exportSymbols("TIMETRA-QOS-MIB", tSapIngressPrecRowStatus=tSapIngressPrecRowStatus, tHsmdaSchedulerPlcyLvl2BrstLimit=tHsmdaSchedulerPlcyLvl2BrstLimit, tSapEgrIPCritSourceIpAddrType=tSapEgrIPCritSourceIpAddrType, tNetworkQueueTable=tNetworkQueueTable, tAtmTdpPir=tAtmTdpPir, tQosIngPolicerCIRAdaptation=tQosIngPolicerCIRAdaptation, tAdvCfgOMGranPirPrcnt=tAdvCfgOMGranPirPrcnt, tHsmdaSchedulerPlcyLvl7GrpId=tHsmdaSchedulerPlcyLvl7GrpId, tQ1NamedPoolTable=tQ1NamedPoolTable, tSharedQueueIsMultipoint=tSharedQueueIsMultipoint, tQosIngQueueMCast=tQosIngQueueMCast, tHsmdaSchedulerPlcyGrp1BrstLimit=tHsmdaSchedulerPlcyGrp1BrstLimit, tMcFrEgrClassMaxSize=tMcFrEgrClassMaxSize, tSapIngressIPv6CriteriaDestPortValue1=tSapIngressIPv6CriteriaDestPortValue1, tSapEgressDot1pFC=tSapEgressDot1pFC, tSharedQueuePolicyEntry=tSharedQueuePolicyEntry, tSapIngressPrecTableLastChanged=tSapIngressPrecTableLastChanged, tSapIngressLspExpFCPriority=tSapIngressLspExpFCPriority, tmnxQosSapEgressV9v0Group=tmnxQosSapEgressV9v0Group, tPortSchedulerPlcyRowStatus=tPortSchedulerPlcyRowStatus, tSapEgressFCPolicer=tSapEgressFCPolicer, tSapIngressPrecHsmdaCntrOvr=tSapIngressPrecHsmdaCntrOvr, tQosEgrPolicerSlopeMap=tQosEgrPolicerSlopeMap, tmnxQosSapIngressV4v0Group=tmnxQosSapIngressV4v0Group, tQosIngPolicerRowStatus=tQosIngPolicerRowStatus, tSapIngressHsmdaQueueEntry=tSapIngressHsmdaQueueEntry, tSapIngressLspExpLastChanged=tSapIngressLspExpLastChanged, tSapIngressLspExpEntry=tSapIngressLspExpEntry, tSapEgressHsmdaQueueBurstLimit=tSapEgressHsmdaQueueBurstLimit, tSapEgrPolicerRowStatus=tSapEgrPolicerRowStatus, tFCNameEntry=tFCNameEntry, tNetworkQueueExpedite=tNetworkQueueExpedite, tNetworkQueue=tNetworkQueue, tHsmdaSchedulerPlcyGrp1Rate=tHsmdaSchedulerPlcyGrp1Rate, tNetworkIngressDSCPTableLastChanged=tNetworkIngressDSCPTableLastChanged, tmnxQosQueueObjV8v0Group=tmnxQosQueueObjV8v0Group, tSapEgressDot1pValue=tSapEgressDot1pValue, tNetworkQueueEntry=tNetworkQueueEntry, tFCNameLastChanged=tFCNameLastChanged, tSapIngressPrecValue=tSapIngressPrecValue, tSapEgressQueuePortLvl=tSapEgressQueuePortLvl, tPortSchedulerPlcyEntry=tPortSchedulerPlcyEntry, tSapIngressIPv6CriteriaTableLastChanged=tSapIngressIPv6CriteriaTableLastChanged, tSapEgrIPCritActionFC=tSapEgrIPCritActionFC, tNetworkEgressFCName=tNetworkEgressFCName, tHsmdaPoolDescription=tHsmdaPoolDescription, tNetworkIngressFCLastChanged=tNetworkIngressFCLastChanged, tNetworkQueuePolicyTableLastChanged=tNetworkQueuePolicyTableLastChanged, tmnxQosFCGroup=tmnxQosFCGroup, tDSCPNameDscpValue=tDSCPNameDscpValue, tNetworkIngressDot1pRowStatus=tNetworkIngressDot1pRowStatus, tQ1NamedPoolAmbrAlrmThresh=tQ1NamedPoolAmbrAlrmThresh, tSapEgrPolicerCIRAdaptation=tSapEgrPolicerCIRAdaptation, tQosEgrQGroupFCTableLastChanged=tQosEgrQGroupFCTableLastChanged, tSlopeHiMaxProbability=tSlopeHiMaxProbability, tNetworkQueuePolicyRowStatus=tNetworkQueuePolicyRowStatus, tSapIngressHsmdaQueuePIRAdaptn=tSapIngressHsmdaQueuePIRAdaptn, tQosEgrQueuePoolName=tQosEgrQueuePoolName, tSlopeHiMaxAverage=tSlopeHiMaxAverage, tVirtualSchedulerTable=tVirtualSchedulerTable, tSapIngressDefFCHsmdaCntrOvr=tSapIngressDefFCHsmdaCntrOvr, tSapIngPolicerDescr=tSapIngPolicerDescr, tSapEgressQueuePortAvgOverhead=tSapEgressQueuePortAvgOverhead, tMcFrIngrProfTableLastChanged=tMcFrIngrProfTableLastChanged, tQosPolicerCtrlPolProfPref=tQosPolicerCtrlPolProfPref, tAdvCfgMinOnly=tAdvCfgMinOnly, tSapIngressFCOutProfRemark=tSapIngressFCOutProfRemark, tmnxQosPolicyV10v0Group=tmnxQosPolicyV10v0Group, tSapIngressFCTable=tSapIngressFCTable, tSapIngPolicerSlopeMaxProb=tSapIngPolicerSlopeMaxProb, tNetworkQueuePolicyEntry=tNetworkQueuePolicyEntry, tSapEgressHsmdaQueueAdminCIR=tSapEgressHsmdaQueueAdminCIR, tHsmdaSchedulerPlcyLvl5WgtInGrp=tHsmdaSchedulerPlcyLvl5WgtInGrp, tHsmdaSchedulerPlcyLvl7Rate=tHsmdaSchedulerPlcyLvl7Rate, tFCRowStatus=tFCRowStatus, tSapIngressTable=tSapIngressTable, tQ1NamedPoolResvCbsAmbrAlrmMax=tQ1NamedPoolResvCbsAmbrAlrmMax, tHsmdaPoolPolicyTable=tHsmdaPoolPolicyTable, tSapEgressQueueCIRAdaptation=tSapEgressQueueCIRAdaptation, tSapEgressQueueWeight=tSapEgressQueueWeight, tNetworkEgressFCForceDEValue=tNetworkEgressFCForceDEValue, tNetworkPolicyDescription=tNetworkPolicyDescription, tMcMlpppIngrProfTable=tMcMlpppIngrProfTable, tNetworkEgrHsmdaQueueTblLastChgd=tNetworkEgrHsmdaQueueTblLastChgd, tQosIngPolicerAdminPIR=tQosIngPolicerAdminPIR, tSapIngressFCHsmdaMCastQueue=tSapIngressFCHsmdaMCastQueue, tMcFrIngrProfEntry=tMcFrIngrProfEntry, tSapIngressQueueAdminPIR=tSapIngressQueueAdminPIR, tSapEgressFCDot1POutProfile=tSapEgressFCDot1POutProfile, tQosIngQueue=tQosIngQueue, tSlopeLoStartAverage=tSlopeLoStartAverage, tmnxQosFrameBasedV6v0Group=tmnxQosFrameBasedV6v0Group, tMcMlpppIngrProfRowStatus=tMcMlpppIngrProfRowStatus, tSapIngressIPCriteriaIndex=tSapIngressIPCriteriaIndex, tSapEgrIPCritActionProfile=tSapEgrIPCritActionProfile, tQosEgrQueueAdminCIR=tQosEgrQueueAdminCIR, tHsmdaPoolClass2Parent=tHsmdaPoolClass2Parent, tHsmdaPoolPlcyTblLastChngd=tHsmdaPoolPlcyTblLastChngd, tMcMlpppEgrProfIndex=tMcMlpppEgrProfIndex, tQosPolicerLevelCumMBS=tQosPolicerLevelCumMBS, tSapEgrIPCritDestIpAddrType=tSapEgrIPCritDestIpAddrType, tPortSchPlcyLvl4GrpName=tPortSchPlcyLvl4GrpName, tSapIngressMacCriteriaLastChanged=tSapIngressMacCriteriaLastChanged, tNetworkQueuePortAvgOverhead=tNetworkQueuePortAvgOverhead, tHsmdaSchedPlcyTblLastChngd=tHsmdaSchedPlcyTblLastChngd, tSapIngPolicerAdminCIRPercent=tSapIngPolicerAdminCIRPercent, tHsmdaPoolRoot8AllocWeight=tHsmdaPoolRoot8AllocWeight, tSapIngressMacCriteriaAtmVci=tSapIngressMacCriteriaAtmVci, tmnxQos7450V4v0Compliance=tmnxQos7450V4v0Compliance, tHsmdaSchedulerPlcyName=tHsmdaSchedulerPlcyName, tSapIngressHsmdaPacketOffset=tSapIngressHsmdaPacketOffset, tSapIngressFCHsmdaQueue=tSapIngressFCHsmdaQueue, tHsmdaPoolRoot6AllocWeight=tHsmdaPoolRoot6AllocWeight, tNetworkEgressFCLastChanged=tNetworkEgressFCLastChanged, tSharedQueueFCTable=tSharedQueueFCTable, tQosEgrPolicerId=tQosEgrPolicerId, tPortSchedulerPlcyLvl2PIR=tPortSchedulerPlcyLvl2PIR, tQosEgrPolicerAdminCIR=tQosEgrPolicerAdminCIR, tNetworkQueuePIR=tNetworkQueuePIR, tHsmdaSchedulerPlcyLvl5GrpId=tHsmdaSchedulerPlcyLvl5GrpId, tMcMlpppIngrClassIndex=tMcMlpppIngrClassIndex, tPortSchedulerPlcyOrphanWeight=tPortSchedulerPlcyOrphanWeight, tSapEgrPolicerTable=tSapEgrPolicerTable, tAdvCfgPolicyTable=tAdvCfgPolicyTable, tNamedPoolPolicyQ1PortWeight=tNamedPoolPolicyQ1PortWeight, tMcMlpppIngrProfEntry=tMcMlpppIngrProfEntry, tSchedulerPolicyEntry=tSchedulerPolicyEntry, tMcMlpppEgrProfEntry=tMcMlpppEgrProfEntry, tAdvCfgChildAdminRate=tAdvCfgChildAdminRate, tNetworkQueueFCTableLastChanged=tNetworkQueueFCTableLastChanged, tmnxQosSapIngressV10v0Group=tmnxQosSapIngressV10v0Group, tPortSchedulerPlcyName=tPortSchedulerPlcyName, tSapEgressQueueRowStatus=tSapEgressQueueRowStatus, tSharedQueueExpedite=tSharedQueueExpedite, tQosEgrQGroupTable=tQosEgrQGroupTable, tSapEgressQueueUsePortParent=tSapEgressQueueUsePortParent, tQosEgrPolicerSlopeMaxProb=tQosEgrPolicerSlopeMaxProb, tNetworkQueueCIRWeight=tNetworkQueueCIRWeight, tSapIngressEntry=tSapIngressEntry, tSapIngressMacCritOuterTagValue=tSapIngressMacCritOuterTagValue, tSapIngressFCProfile=tSapIngressFCProfile, tNetworkPolicyScope=tNetworkPolicyScope, tSapIngressFCLastChanged=tSapIngressFCLastChanged, tSchedulerPolicyTableLastChanged=tSchedulerPolicyTableLastChanged, tQosEgrQueueCIRAdaptation=tQosEgrQueueCIRAdaptation, tAtmTdpCdvt=tAtmTdpCdvt, tHsmdaSlopeHiStartDepth=tHsmdaSlopeHiStartDepth, tHsmdaPoolClass1AllocPercent=tHsmdaPoolClass1AllocPercent, tNetworkEgrHsmdaQueuePIRAdaptn=tNetworkEgrHsmdaQueuePIRAdaptn, tSapEgrPolicerLastChanged=tSapEgrPolicerLastChanged, tMcFrIngrClassEntry=tMcFrIngrClassEntry, tQosIngQueueBurstLimit=tQosIngQueueBurstLimit, tQosEgrQueueLevel=tQosEgrQueueLevel, tQosIngPolicerWeight=tQosIngPolicerWeight, tHsmdaSlopePolicyTableLastChanged=tHsmdaSlopePolicyTableLastChanged, tSapEgrPolicerDescr=tSapEgrPolicerDescr, tSapEgressDSCP=tSapEgressDSCP, tQosEgrQGroupFCLastChanged=tQosEgrQGroupFCLastChanged, tQosEgrPolicerTable=tQosEgrPolicerTable, tSapIngressMacCriteriaFrameType=tSapIngressMacCriteriaFrameType, tAdvCfgBWDGranPirPrcnt=tAdvCfgBWDGranPirPrcnt, tSapIngressDSCPRowStatus=tSapIngressDSCPRowStatus, tSapIngressQueueAdvCfgPolicy=tSapIngressQueueAdvCfgPolicy, tQosEgrQueuePortCIRWght=tQosEgrQueuePortCIRWght, tQ1NamedPoolLastChanged=tQ1NamedPoolLastChanged, tSharedQueueFCMCastQueue=tSharedQueueFCMCastQueue, tmnxQosAtmTdpV5v0Group=tmnxQosAtmTdpV5v0Group, tNetworkQueueFCEntry=tNetworkQueueFCEntry, tSapIngressMatchCriteria=tSapIngressMatchCriteria, tNetworkQueuePortCIRWght=tNetworkQueuePortCIRWght, tSapIngressLspExpValue=tSapIngressLspExpValue, tSapEgressQueueAdminPIRPercent=tSapEgressQueueAdminPIRPercent, tNetworkIngressLSPEXPTable=tNetworkIngressLSPEXPTable, tAdvCfgPolicyEntry=tAdvCfgPolicyEntry, tQosIngQueueCIRWeight=tQosIngQueueCIRWeight, tQ1NamedPoolTableLastChanged=tQ1NamedPoolTableLastChanged, tQosEgrQueueMBSBytes=tQosEgrQueueMBSBytes, tmnxQos7750V6v0Compliance=tmnxQos7750V6v0Compliance, tSapIngressQueueOperPIR=tSapIngressQueueOperPIR, tSlopeLastChanged=tSlopeLastChanged, tAdvCfgHiRateHoldTime=tAdvCfgHiRateHoldTime, tSapIngressIPv6CriteriaLastChanged=tSapIngressIPv6CriteriaLastChanged, tSapEgrIPCritSourceIpMask=tSapEgrIPCritSourceIpMask, tHsmdaSlopeHiMaxDepth=tHsmdaSlopeHiMaxDepth, tAdvCfgMaxDecRate=tAdvCfgMaxDecRate, tSapEgrIPCritSourceIpAddr=tSapEgrIPCritSourceIpAddr, tPoolObjects=tPoolObjects, tPortSchedulerPlcyLvl1CIR=tPortSchedulerPlcyLvl1CIR, tSapEgrIPCritDSCP=tSapEgrIPCritDSCP, tSapEgressDot1pTable=tSapEgressDot1pTable, tHsmdaSchedulerPlcyLvl3BrstLimit=tHsmdaSchedulerPlcyLvl3BrstLimit, tSapEgressDot1pRowStatus=tSapEgressDot1pRowStatus, tSharedQueueTable=tSharedQueueTable, tSapEgressQueueLevel=tSapEgressQueueLevel, tNetworkIngressDot1pLastChanged=tNetworkIngressDot1pLastChanged, tSapIngressQueueParent=tSapIngressQueueParent, tSharedQueuePolicyTableLastChanged=tSharedQueuePolicyTableLastChanged, tHsmdaPoolPolicyRowStatus=tHsmdaPoolPolicyRowStatus, tNetworkQueueParent=tNetworkQueueParent, tSapIngressObjects=tSapIngressObjects, tSapIngressQueueOperCIR=tSapIngressQueueOperCIR, tNetworkEgrHsmdaQueue=tNetworkEgrHsmdaQueue, tNetworkPolicyIndex=tNetworkPolicyIndex, tQosEgrQueuePktOffset=tQosEgrQueuePktOffset, tMcMlpppIngrClassTableLastChanged=tMcMlpppIngrClassTableLastChanged, tMcMlpppIngrProfIndex=tMcMlpppIngrProfIndex, tNetworkQueuePoolName=tNetworkQueuePoolName, tmnxQosPolicerSlopeGroup=tmnxQosPolicerSlopeGroup, tSapIngressMacCritType=tSapIngressMacCritType, tHsmdaPoolRoot1AllocWeight=tHsmdaPoolRoot1AllocWeight, tNetworkIngressLSPEXPLastChanged=tNetworkIngressLSPEXPLastChanged, tQosIngPolicerHiPrioOnly=tQosIngPolicerHiPrioOnly, tSapIngressIPCriteriaSourcePortValue2=tSapIngressIPCriteriaSourcePortValue2, tSapEgressHsmdaQueue=tSapEgressHsmdaQueue, tQosIngQueueAdminCIR=tQosIngQueueAdminCIR, tHsmdaSchedulerPlcyLvl3Rate=tHsmdaSchedulerPlcyLvl3Rate, tQosEgrQueueXPWredQSlope=tQosEgrQueueXPWredQSlope, tNamedPoolPolicyLastChanged=tNamedPoolPolicyLastChanged, tQosPolicerLevel=tQosPolicerLevel, tAdvCfgFastStop=tAdvCfgFastStop, tPortSchPlcyLvl3GrpName=tPortSchPlcyLvl3GrpName, tQosIngQGroupRowStatus=tQosIngQGroupRowStatus, tSapIngPolicerTable=tSapIngPolicerTable, tSapIngressFCQueue=tSapIngressFCQueue, tQosIngQueueEntry=tQosIngQueueEntry, tSlopeDescription=tSlopeDescription, tmnxQosCompliances=tmnxQosCompliances, tSapEgrPolicerSlopeMap=tSapEgrPolicerSlopeMap, tNetworkIngressFCMultiCastPlcr=tNetworkIngressFCMultiCastPlcr, tSapIngressDefaultFCPriority=tSapIngressDefaultFCPriority, tDSCPNameLastChanged=tDSCPNameLastChanged, tSapIngressIPv6CriteriaRowStatus=tSapIngressIPv6CriteriaRowStatus, tSapIngressDescription=tSapIngressDescription, tPortSchedulerPlcyLvl7PIR=tPortSchedulerPlcyLvl7PIR, tQosEgrQueuePIRAdaptation=tQosEgrQueuePIRAdaptation, tHsmdaSchedulerPlcyLvl1WgtInGrp=tHsmdaSchedulerPlcyLvl1WgtInGrp, tHsmdaSchedulerPlcyLvl1BrstLimit=tHsmdaSchedulerPlcyLvl1BrstLimit, tHsmdaPoolClass4Parent=tHsmdaPoolClass4Parent, tMcMlpppIngrProfDescription=tMcMlpppIngrProfDescription, TmnxMcFrClassIndex=TmnxMcFrClassIndex, tMcMlpppEgrClassMaxSize=tMcMlpppEgrClassMaxSize, tQosPolicerArbiterDescr=tQosPolicerArbiterDescr, tmnxQosSapIngressV8v0Group=tmnxQosSapIngressV8v0Group, tNetworkQueueUsePortParent=tNetworkQueueUsePortParent, tSapIngPolicyNameEntry=tSapIngPolicyNameEntry, tSapEgrIPCritTable=tSapEgrIPCritTable, tNetworkPolicyEgressRemark=tNetworkPolicyEgressRemark, tNetworkEgressFCDSCPOutProfile=tNetworkEgressFCDSCPOutProfile, tHsmdaSchedulerPlcyLvl8Rate=tHsmdaSchedulerPlcyLvl8Rate, tSapEgressQueueXPWredQSlope=tSapEgressQueueXPWredQSlope, tQosEgrPolicerStatMode=tQosEgrPolicerStatMode, tNetworkPolicyIngressLerUseDscp=tNetworkPolicyIngressLerUseDscp, tSapIngressIPv6CriteriaActionFC=tSapIngressIPv6CriteriaActionFC, tQosIngQueueCIRAdaptation=tQosIngQueueCIRAdaptation)
mibBuilder.exportSymbols("TIMETRA-QOS-MIB", tSapIngressIPCriteriaDestPortValue2=tSapIngressIPCriteriaDestPortValue2, tDSCPNameTableLastChanged=tDSCPNameTableLastChanged, tSapEgrPolicerEntry=tSapEgrPolicerEntry, tSapEgressDSCPprofile=tSapEgressDSCPprofile, tSlopeLoMaxProbability=tSlopeLoMaxProbability, tPortSchedulerPlcyLvl3PIR=tPortSchedulerPlcyLvl3PIR, tmnxQos7450V5v0Compliance=tmnxQos7450V5v0Compliance, tPortSchPlcyLvl7GrpName=tPortSchPlcyLvl7GrpName, tNetworkQueueFCEgrHsmdaQueue=tNetworkQueueFCEgrHsmdaQueue, tVirtualSchedulerPortWght=tVirtualSchedulerPortWght, tSapIngressMacCriteriaDot1PValue=tSapIngressMacCriteriaDot1PValue, tSapIngressHsmdaQueue=tSapIngressHsmdaQueue, tQosIngPolicerSlopeStartDepth=tQosIngPolicerSlopeStartDepth, tQosEgrPolicerAdminPIR=tQosEgrPolicerAdminPIR, tQosIngPolicerProfileCapped=tQosIngPolicerProfileCapped, tSlopeObjects=tSlopeObjects, PYSNMP_MODULE_ID=timetraQosMIBModule, tHsmdaWrrPolicyLastChanged=tHsmdaWrrPolicyLastChanged, tSapEgressFCOutProfDscp=tSapEgressFCOutProfDscp, tNetworkIngressLSPEXPProfile=tNetworkIngressLSPEXPProfile, tPortSchedulerPlcyLvl5CIR=tPortSchedulerPlcyLvl5CIR, tmnxQosHsmdaV10v0Group=tmnxQosHsmdaV10v0Group, tSapEgrPolicerCBS=tSapEgrPolicerCBS, tQosIngQueueRowStatus=tQosIngQueueRowStatus, tQosIngPolicerDescr=tQosIngPolicerDescr, tSapIngressMacCriteriaTableLastChanged=tSapIngressMacCriteriaTableLastChanged, tSapIngressQueueLastChanged=tSapIngressQueueLastChanged, tMcFrEgrProfRowStatus=tMcFrEgrProfRowStatus, tQosObsoleteObjectsGroup=tQosObsoleteObjectsGroup, tAdvCfgFastStart=tAdvCfgFastStart, tSapEgressTable=tSapEgressTable, tPortSchPlcyLvl5GrpWeight=tPortSchPlcyLvl5GrpWeight, tHsmdaWrrPolicyTable=tHsmdaWrrPolicyTable, tSchedulerPolicyName=tSchedulerPolicyName, tSapEgrIPCritAddrType=tSapEgrIPCritAddrType, tHsmdaPoolClass8Parent=tHsmdaPoolClass8Parent, tAdvCfgOMGranRate=tAdvCfgOMGranRate, tSlopeHiAdminStatus=tSlopeHiAdminStatus, tAtmTdpIndex=tAtmTdpIndex, tVirtualSchedulerWeight=tVirtualSchedulerWeight, tSapIngressIPCriteriaSourcePortValue1=tSapIngressIPCriteriaSourcePortValue1, tNetworkIngressLSPEXPRowStatus=tNetworkIngressLSPEXPRowStatus, tmnxQosNetworkV5v0Group=tmnxQosNetworkV5v0Group, tMcMlpppEgrClassIndex=tMcMlpppEgrClassIndex, tSapEgressHsmdaQueueEntry=tSapEgressHsmdaQueueEntry, tSapIngressHsmdaQueueCIRAdaptn=tSapIngressHsmdaQueueCIRAdaptn, tSapIngPolicerWeight=tSapIngPolicerWeight, tSapEgressHsmdaQueueTable=tSapEgressHsmdaQueueTable, tQosPolicerArbiterTblLastChgd=tQosPolicerArbiterTblLastChgd, tSharedQueuePolicy=tSharedQueuePolicy, tAtmTdpLastChanged=tAtmTdpLastChanged, tHsmdaPoolClass7AllocPercent=tHsmdaPoolClass7AllocPercent, tQosPolicerLevelLastChgd=tQosPolicerLevelLastChgd, tSapIngressQueueAdminPIRPercent=tSapIngressQueueAdminPIRPercent, tmnxQosNetworkV6v0Group=tmnxQosNetworkV6v0Group, tSapEgressFCOutProfPrec=tSapEgressFCOutProfPrec, tHsmdaSchedulerPlcyLvl2Rate=tHsmdaSchedulerPlcyLvl2Rate, tSapIngressIPv6CriteriaDestIpMask=tSapIngressIPv6CriteriaDestIpMask, tPortSchPlcyLvlGrpTable=tPortSchPlcyLvlGrpTable, tQosEgrQueue=tQosEgrQueue, tSapEgressHsmdaWrrPolicy=tSapEgressHsmdaWrrPolicy, tmnxQosMcMlpppIngrGroup=tmnxQosMcMlpppIngrGroup, tSapIngressIPv6CriteriaTable=tSapIngressIPv6CriteriaTable, tQosEgrPolicerMBS=tQosEgrPolicerMBS, tPortSchPlcyLvl5GrpName=tPortSchPlcyLvl5GrpName, tWrrObjects=tWrrObjects, tSapIngPolicerSlopeMap=tSapIngPolicerSlopeMap, tQosPolicerCtrlPolName=tQosPolicerCtrlPolName, tSapEgressDot1pLastChanged=tSapEgressDot1pLastChanged, tNetworkQueuePortLvl=tNetworkQueuePortLvl, tmnxQosGlobalGroup=tmnxQosGlobalGroup, tVirtualSchedulerTableLastChanged=tVirtualSchedulerTableLastChanged, tQosEgrPolicerPIRAdaptation=tQosEgrPolicerPIRAdaptation, tQosEgrQueueXPWredQ=tQosEgrQueueXPWredQ, tHsmdaSlopeLoMaxDepth=tHsmdaSlopeLoMaxDepth, tQosPolicerLevelTable=tQosPolicerLevelTable, tQosIngPolicerStatMode=tQosIngPolicerStatMode, tDSCPNameStorageType=tDSCPNameStorageType, tHsmdaSchedulerPlcyLvl4GrpId=tHsmdaSchedulerPlcyLvl4GrpId, tSharedQueueLevel=tSharedQueueLevel, tmnxQosSchedulerGroup=tmnxQosSchedulerGroup, tmnxQosSapEgressV6v0Group=tmnxQosSapEgressV6v0Group, tQosIngQGroupTableLastChanged=tQosIngQGroupTableLastChanged, tMcMlpppEgrClassTableLastChanged=tMcMlpppEgrClassTableLastChanged, tHsmdaSchedulerPlcyLvl4WgtInGrp=tHsmdaSchedulerPlcyLvl4WgtInGrp, tSapEgrPolicerAdminPIRPercent=tSapEgrPolicerAdminPIRPercent, tNetworkIngressDot1pTable=tNetworkIngressDot1pTable, tMcMlpppEgrClassWeight=tMcMlpppEgrClassWeight, tSapIngressIPv6CriteriaActionPriority=tSapIngressIPv6CriteriaActionPriority, tNetworkEgressPrecProfile=tNetworkEgressPrecProfile, tSapEgrPolicerId=tSapEgrPolicerId, tVirtualSchedulerRowStatus=tVirtualSchedulerRowStatus, tHsmdaSchedulerPlcyLvl8GrpId=tHsmdaSchedulerPlcyLvl8GrpId, tAdvCfgChildAdmnPirPrcnt=tAdvCfgChildAdmnPirPrcnt, tHsmdaSlopePolicyRowStatus=tHsmdaSlopePolicyRowStatus, tQosPolicerCtrlPolTable=tQosPolicerCtrlPolTable, tAtmTdpMir=tAtmTdpMir, tQ1NamedPoolRowStatus=tQ1NamedPoolRowStatus, tmnxQosQueueGrpPolcrV10v0Group=tmnxQosQueueGrpPolcrV10v0Group, tQosIngQueuePoolName=tQosIngQueuePoolName, tSapIngressPrecLastChanged=tSapIngressPrecLastChanged, tmnxQosPortSchPlcyGrpGroup=tmnxQosPortSchPlcyGrpGroup, tNetworkQueueMCast=tNetworkQueueMCast, tSapEgressMatchCriteria=tSapEgressMatchCriteria, tVirtualSchedulerLastChanged=tVirtualSchedulerLastChanged, tSharedQueuePolicyRowStatus=tSharedQueuePolicyRowStatus, tHsmdaSchedulerPlcyLvl8BrstLimit=tHsmdaSchedulerPlcyLvl8BrstLimit, tSapIngressIPCriteriaLastChanged=tSapIngressIPCriteriaLastChanged, tQosIngPolicerEntry=tQosIngPolicerEntry, tSapIngressIPCriteriaEntry=tSapIngressIPCriteriaEntry, tSapIngressMacCriteriaDescription=tSapIngressMacCriteriaDescription, tQosIngQGroupLastChanged=tQosIngQGroupLastChanged, tSapIngressFCMCastPlcrFPQGrp=tSapIngressFCMCastPlcrFPQGrp, tSapEgrIPCritDestIpAddr=tSapEgrIPCritDestIpAddr, tSapEgressQueuePktOffset=tSapEgressQueuePktOffset, tSapIngressDSCPTableLastChanged=tSapIngressDSCPTableLastChanged, tHsmdaPoolPolicyEntry=tHsmdaPoolPolicyEntry, tSapIngressMacCriteriaIndex=tSapIngressMacCriteriaIndex, tQosEgrPolicerPktOffset=tQosEgrPolicerPktOffset, tPortSchedulerPlcyOrphanCIRWght=tPortSchedulerPlcyOrphanCIRWght, tmnxQosNetworkR2r1Group=tmnxQosNetworkR2r1Group, tmnxQosAdvConfigV10v0Group=tmnxQosAdvConfigV10v0Group, tNetworkIngressDSCPEntry=tNetworkIngressDSCPEntry, tSapIngressIPv6CriteriaIpPrecMask=tSapIngressIPv6CriteriaIpPrecMask, tmnxQosMcFrEgrGroup=tmnxQosMcFrEgrGroup, tNetworkQueueFCLastChanged=tNetworkQueueFCLastChanged, tmnxQosAtmTdpV3v0Group=tmnxQosAtmTdpV3v0Group, tAdvCfgAbvOffCapPirPrcnt=tAdvCfgAbvOffCapPirPrcnt, tAtmTdpMbs=tAtmTdpMbs, tSapIngressQueueCIRLevel=tSapIngressQueueCIRLevel, tSapIngPolicerLevel=tSapIngPolicerLevel, tQosIngQueueLevel=tQosIngQueueLevel, tQosIngQueueMode=tQosIngQueueMode, tHsmdaPoolClass8AllocPercent=tHsmdaPoolClass8AllocPercent, tMcFrEgrProfLastChanged=tMcFrEgrProfLastChanged, tHsmdaSchedulerPlcyLvl3WgtInGrp=tHsmdaSchedulerPlcyLvl3WgtInGrp, tSapIngressHsmdaQueueTable=tSapIngressHsmdaQueueTable, tAdvCfgPolicyName=tAdvCfgPolicyName, tSapIngressMacCriteriaEthernetType=tSapIngressMacCriteriaEthernetType, tMcFrIngrProfIndex=tMcFrIngrProfIndex, tSapIngressIPv6CriteriaSourcePortValue2=tSapIngressIPv6CriteriaSourcePortValue2, tQosEgrQGroupLastChanged=tQosEgrQGroupLastChanged, tQosEgrQueueAdminCIRPercent=tQosEgrQueueAdminCIRPercent, tMcFrIngrProfDescription=tMcFrIngrProfDescription, tHsmdaSchedulerPlcyDescription=tHsmdaSchedulerPlcyDescription, tAtmTdpTable=tAtmTdpTable, tHsmdaSchedulerPlcyLvl6GrpId=tHsmdaSchedulerPlcyLvl6GrpId, tmnxQosPolicerV8v0Group=tmnxQosPolicerV8v0Group, tSharedQueueFCQueue=tSharedQueueFCQueue, tNetworkIngressFCTableLstChanged=tNetworkIngressFCTableLstChanged, tSapIngressIPv6CriteriaDescription=tSapIngressIPv6CriteriaDescription, tPortSchPlcyLvlGrpEntry=tPortSchPlcyLvlGrpEntry, tQosEgrQueueBurstLimit=tQosEgrQueueBurstLimit, tmnxQosSapEgrQWredGroup=tmnxQosSapEgrQWredGroup, tQosIngPolicerCBS=tQosIngPolicerCBS, tSharedQueuePolicyLastChanged=tSharedQueuePolicyLastChanged, tQosEgrQueueExpedite=tQosEgrQueueExpedite, tNetworkEgrHsmdaQueueTable=tNetworkEgrHsmdaQueueTable, tMcMlpppIngrClassTable=tMcMlpppIngrClassTable, tSapEgrIPCritSourcePortValue2=tSapEgrIPCritSourcePortValue2, tNetworkQueueLevel=tNetworkQueueLevel, tSapEgrPolicerAdminCIR=tSapEgrPolicerAdminCIR, tSapIngressDot1pRowStatus=tSapIngressDot1pRowStatus, tmnxQosNetworkV10v0Group=tmnxQosNetworkV10v0Group, tSapIngressQueueLevel=tSapIngressQueueLevel, tSapIngressHsmdaQueueAdminCIR=tSapIngressHsmdaQueueAdminCIR, tQosEgrQueuePortCIRLvl=tQosEgrQueuePortCIRLvl, tQosIngPolicerAdvCfgPolicy=tQosIngPolicerAdvCfgPolicy, tSapIngressFCPolicer=tSapIngressFCPolicer, tQosEgrPolicerSlopeStartDepth=tQosEgrPolicerSlopeStartDepth, tNetworkPolicyEntry=tNetworkPolicyEntry, tSapEgressFCDot1PHsmdaProfile=tSapEgressFCDot1PHsmdaProfile, tSchedulerPolicyDescription=tSchedulerPolicyDescription, tSapIngPolicerSlopeStartDepth=tSapIngPolicerSlopeStartDepth, tNamedPoolPolicyTableLastChanged=tNamedPoolPolicyTableLastChanged, tQosEgrPolicerTableLastChanged=tQosEgrPolicerTableLastChanged, tSapIngressMacCriteriaSSAP=tSapIngressMacCriteriaSSAP, tSapIngPolicerParent=tSapIngPolicerParent, tNetworkQueueMBS=tNetworkQueueMBS, tSapIngressIPCriteriaFragment=tSapIngressIPCriteriaFragment, tSapIngressDot1pFC=tSapIngressDot1pFC, tHsmdaSchedulerPlcyLvl7BrstLimit=tHsmdaSchedulerPlcyLvl7BrstLimit, tSharedQueueMBS=tSharedQueueMBS, tNetworkEgressPrecEntry=tNetworkEgressPrecEntry, tHsmdaWrrPolicySchedUsingClass=tHsmdaWrrPolicySchedUsingClass, tSapEgressQueueAdvCfgPolicy=tSapEgressQueueAdvCfgPolicy, tNetworkIngressFCEntry=tNetworkIngressFCEntry, tSapIngressFCInProfPrec=tSapIngressFCInProfPrec, tNetworkQueuePolicyLastChanged=tNetworkQueuePolicyLastChanged, tQosEgrQueueAdminPIRPercent=tQosEgrQueueAdminPIRPercent, tSapEgressScope=tSapEgressScope, tSapIngressFCMCastQueue=tSapIngressFCMCastQueue, tSapEgressFCRowStatus=tSapEgressFCRowStatus, tSapEgressHsmdaQueueWrrWeight=tSapEgressHsmdaQueueWrrWeight, tSapEgrIPCritDestPortValue1=tSapEgrIPCritDestPortValue1, tQosIngQueueParent=tQosIngQueueParent, tHsmdaSchedulerPlcyLvl4Rate=tHsmdaSchedulerPlcyLvl4Rate, tmnxQosHsmdaV6v0Group=tmnxQosHsmdaV6v0Group, tSapIngressQueueMode=tSapIngressQueueMode, tSapIngressIPCriteriaDestIpMask=tSapIngressIPCriteriaDestIpMask, tNetworkQueuePolicyDescription=tNetworkQueuePolicyDescription, tNetworkQueueLastChanged=tNetworkQueueLastChanged, tMcMlpppEgrFCLastChanged=tMcMlpppEgrFCLastChanged, tMcFrIngressObjects=tMcFrIngressObjects, tSapEgressFCHsmdaQueue=tSapEgressFCHsmdaQueue, tSapEgrIPCritActionHsmdaCntrOvr=tSapEgrIPCritActionHsmdaCntrOvr, tSapIngressIPv6CriteriaEntry=tSapIngressIPv6CriteriaEntry, tmnxQosObsoletedV8v0Group=tmnxQosObsoletedV8v0Group, tHsmdaSlopePolicyName=tHsmdaSlopePolicyName, tSapIngressFCName=tSapIngressFCName, tQosIngQueueAdvCfgPolicy=tQosIngQueueAdvCfgPolicy, tMcFrEgressObjects=tMcFrEgressObjects, tmnxQos77x0V10v0Compliance=tmnxQos77x0V10v0Compliance, tHsmdaSlopeQueueMbs=tHsmdaSlopeQueueMbs, tVirtualSchedulerPortCIRLvl=tVirtualSchedulerPortCIRLvl, tSapEgressFCForceDEValue=tSapEgressFCForceDEValue, tNetworkIngressDot1pFC=tNetworkIngressDot1pFC, tmnxQosSchedulerV5v0Group=tmnxQosSchedulerV5v0Group, tmnxQosSapIngressV9v0Group=tmnxQosSapIngressV9v0Group, tHsmdaSchedulerPlcyTable=tHsmdaSchedulerPlcyTable, tSapEgrIPCritDestPortValue2=tSapEgrIPCritDestPortValue2, tSharedQueuePolicyTable=tSharedQueuePolicyTable, tQ1NamedPoolRedAlrmThresh=tQ1NamedPoolRedAlrmThresh, tHsmdaSchedulerPlcyLvl8WgtInGrp=tHsmdaSchedulerPlcyLvl8WgtInGrp, tMcMlpppEgrProfTableLastChanged=tMcMlpppEgrProfTableLastChanged, tHsmdaPoolSystemReserve=tHsmdaPoolSystemReserve, tSapIngressFCInProfRemark=tSapIngressFCInProfRemark, tQosPolicerArbiterTable=tQosPolicerArbiterTable, tSapIngressLastChanged=tSapIngressLastChanged, tSapEgressFCQGrp=tSapEgressFCQGrp, tSharedQueueFCEntry=tSharedQueueFCEntry, tQosIngQueueCIRLevel=tQosIngQueueCIRLevel, tSapIngressIPCriteriaDestIpAddr=tSapIngressIPCriteriaDestIpAddr, tQosIngQueueAdminPIR=tQosIngQueueAdminPIR, tSapEgrIPCritIndex=tSapEgrIPCritIndex, tFCNameTableLastChanged=tFCNameTableLastChanged, tSapEgressFCEntry=tSapEgressFCEntry, tAtmTdpCLPTagging=tAtmTdpCLPTagging, tSapIngressQueueCIRWeight=tSapIngressQueueCIRWeight, tNetworkPolicyIngressDefaultActionFC=tNetworkPolicyIngressDefaultActionFC, tVirtualSchedulerSummedCIR=tVirtualSchedulerSummedCIR, tQosPolicerArbiterWeight=tQosPolicerArbiterWeight, tDSCPNameTable=tDSCPNameTable, tSapEgrIPCritProtocol=tSapEgrIPCritProtocol, tSapIngressDot1pLastChanged=tSapIngressDot1pLastChanged, tAtmTdpSir=tAtmTdpSir, tSlopeLoMaxAverage=tSlopeLoMaxAverage, tSapEgressDot1pTableLastChanged=tSapEgressDot1pTableLastChanged, tAtmTdpTableLastChanged=tAtmTdpTableLastChanged, tMcFrEgrProfTableLastChanged=tMcFrEgrProfTableLastChanged, tmnxQosSapEgressR2r1Group=tmnxQosSapEgressR2r1Group, tSapIngressPrecTable=tSapIngressPrecTable, tmnxQosNamedPoolPolicyV6v0Group=tmnxQosNamedPoolPolicyV6v0Group, tQ1NamedPoolPolicyName=tQ1NamedPoolPolicyName)
mibBuilder.exportSymbols("TIMETRA-QOS-MIB", tSapEgressDSCPfc=tSapEgressDSCPfc, tHsmdaPoolClass5AllocPercent=tHsmdaPoolClass5AllocPercent, tSchedulerPolicyRowStatus=tSchedulerPolicyRowStatus, tMcFrIngrClassTableLastChanged=tMcFrIngrClassTableLastChanged, tMcMlpppEgrClassEntry=tMcMlpppEgrClassEntry, tSapEgressFCDEMark=tSapEgressFCDEMark, tSapIngressMacCriteriaDSAPMask=tSapIngressMacCriteriaDSAPMask, tSapIngPolicerMBS=tSapIngPolicerMBS, tVirtualSchedulerLevel=tVirtualSchedulerLevel, tNetworkEgrHsmdaQueueWrrWeight=tNetworkEgrHsmdaQueueWrrWeight, tSapIngressQueueRowStatus=tSapIngressQueueRowStatus, tQ1NamedPoolDescription=tQ1NamedPoolDescription, tMcFrEgrClassMir=tMcFrEgrClassMir, tQ1NamedPoolNetworkAllocWeight=tQ1NamedPoolNetworkAllocWeight, tQosPolicerArbiterName=tQosPolicerArbiterName, tSapIngressIPCriteriaTable=tSapIngressIPCriteriaTable, tSapEgressEntry=tSapEgressEntry, tSapIngressIndex=tSapIngressIndex, tSlopeLoAdminStatus=tSlopeLoAdminStatus, tPortSchedulerPlcyLvl8PIR=tPortSchedulerPlcyLvl8PIR, tSapEgressFCQGrpFC=tSapEgressFCQGrpFC, tQosIngQueueCBS=tQosIngQueueCBS, tmnxQos7750V5v0Compliance=tmnxQos7750V5v0Compliance, tmnxQosSapIngressV6v0Group=tmnxQosSapIngressV6v0Group, tNetworkEgrHsmdaQueueLastChanged=tNetworkEgrHsmdaQueueLastChanged, tmnxQosEgrReClassifyV10v0Group=tmnxQosEgrReClassifyV10v0Group, tSapIngressFCOutProfDscp=tSapIngressFCOutProfDscp, tSapIngressIPv6CriteriaSourceIpAddr=tSapIngressIPv6CriteriaSourceIpAddr, tmnxQosQueueObjGroup=tmnxQosQueueObjGroup, tmnxQos77x0V6v1Compliance=tmnxQos77x0V6v1Compliance, tNetworkQueueFCMCast=tNetworkQueueFCMCast, tSapEgressFCDot1PValue=tSapEgressFCDot1PValue, tQosEgrQGroupFCName=tQosEgrQGroupFCName, tSapEgressQueueTableLastChanged=tSapEgressQueueTableLastChanged, tQosIngPolicerMBS=tQosIngPolicerMBS, tNetworkIngressDSCPProfile=tNetworkIngressDSCPProfile, tSapEgressQueueMBS=tSapEgressQueueMBS, tPortSchedulerPlcyLvl7CIR=tPortSchedulerPlcyLvl7CIR, tMcMlpppEgrFCTable=tMcMlpppEgrFCTable, tSapIngressQueueMCast=tSapIngressQueueMCast, tSapIngressPrecFC=tSapIngressPrecFC, tSchedulerPolicyTable=tSchedulerPolicyTable, tVirtualSchedulerCIRLevel=tVirtualSchedulerCIRLevel, tSapIngressDSCPEntry=tSapIngressDSCPEntry, tSapIngressFCQGrpBCast=tSapIngressFCQGrpBCast, tHsmdaSlopeHiAdminStatus=tHsmdaSlopeHiAdminStatus, tNetworkPolicyLastChanged=tNetworkPolicyLastChanged, tDSCPObjects=tDSCPObjects, tSapEgressQueueAdminCIRPercent=tSapEgressQueueAdminCIRPercent, tQosEgrQueueHiPrioOnly=tQosEgrQueueHiPrioOnly, tQosEgrQueueAdminPIR=tQosEgrQueueAdminPIR, tSapEgrPolicyNameRowStatus=tSapEgrPolicyNameRowStatus, tHsmdaSchedulerPlcyLvl5Rate=tHsmdaSchedulerPlcyLvl5Rate, tHsmdaSchedulerPlcyLvl6WgtInGrp=tHsmdaSchedulerPlcyLvl6WgtInGrp, tHsmdaPoolRoot2AllocWeight=tHsmdaPoolRoot2AllocWeight, tSapEgrIPCritEntry=tSapEgrIPCritEntry, tSapIngressFCMCastPolicer=tSapIngressFCMCastPolicer, tVirtualSchedulerName=tVirtualSchedulerName, tSapIngressFCBCastPolicer=tSapIngressFCBCastPolicer, tNetworkQueuePIRAdaptation=tNetworkQueuePIRAdaptation, tHsmdaPoolClass5Parent=tHsmdaPoolClass5Parent, tSapIngressMacCriteriaDstMacAddr=tSapIngressMacCriteriaDstMacAddr, tQosIngQueueWeight=tQosIngQueueWeight, tNetworkQueuePolicyTable=tNetworkQueuePolicyTable, tMcMlpppIngrClassLastChanged=tMcMlpppIngrClassLastChanged, tQosIngPolicerParent=tQosIngPolicerParent, tNamedPoolPolicyTable=tNamedPoolPolicyTable, tQosPolicerArbiterRowStatus=tQosPolicerArbiterRowStatus, tmnxQos7450V8v0Compliance=tmnxQos7450V8v0Compliance, tHsmdaSlopeDescription=tHsmdaSlopeDescription, tSapIngressMacCriteriaSrcMacAddr=tSapIngressMacCriteriaSrcMacAddr, tSapIngressLspExpTableLastChange=tSapIngressLspExpTableLastChange, tSapIngressDSCPTable=tSapIngressDSCPTable, tQosEgrPolicerWeight=tQosEgrPolicerWeight, tSapEgressQueueMBSBytes=tSapEgressQueueMBSBytes, tSapIngressQueue=tSapIngressQueue, tSapIngPolicerAdminCIR=tSapIngPolicerAdminCIR, tSapIngressIPv6CriteriaIndex=tSapIngressIPv6CriteriaIndex, tNetworkQueueWeight=tNetworkQueueWeight, tmnxQosSapIpv6FilterR4r0Group=tmnxQosSapIpv6FilterR4r0Group, tSapEgressFCName=tSapEgressFCName, tSapIngressFCQGrpUnknown=tSapIngressFCQGrpUnknown, tPortSchedulerPlcyTable=tPortSchedulerPlcyTable, tHsmdaSchedulerPlcyLvl2GrpId=tHsmdaSchedulerPlcyLvl2GrpId, tNamedPoolPolicyEntry=tNamedPoolPolicyEntry, tQ1NamedPoolAccessAllocWeight=tQ1NamedPoolAccessAllocWeight, tSapEgressDSCPLastChanged=tSapEgressDSCPLastChanged, tMcMlpppIngrClassReassemblyTmout=tMcMlpppIngrClassReassemblyTmout, tSapEgressEthernetCtag=tSapEgressEthernetCtag, tHsmdaSchedulerPlcyLvl6Rate=tHsmdaSchedulerPlcyLvl6Rate, tAtmTdpDescription=tAtmTdpDescription, tSapIngressIPv6CriteriaIpPrecValue=tSapIngressIPv6CriteriaIpPrecValue, tNetworkEgressPrecTable=tNetworkEgressPrecTable, tHsmdaSchedulerPlcyLvl5BrstLimit=tHsmdaSchedulerPlcyLvl5BrstLimit, tSapEgressQueuePortCIRLvl=tSapEgressQueuePortCIRLvl, tPortSchedulerPlcyLvl4CIR=tPortSchedulerPlcyLvl4CIR, tQosEgrPolicerDescr=tQosEgrPolicerDescr, tQosIngQueueLastChanged=tQosIngQueueLastChanged, tNetworkIngressDot1pTableLastChanged=tNetworkIngressDot1pTableLastChanged, tQosIngQueuePoliced=tQosIngQueuePoliced, tmnxQosNamedPoolV9v0Group=tmnxQosNamedPoolV9v0Group, tSapIngressFCUnknownPolicer=tSapIngressFCUnknownPolicer, tQosIngQGroupDescr=tQosIngQGroupDescr, tSapEgrHsmdaQueueTblLastChngd=tSapEgrHsmdaQueueTblLastChngd, tQosEgrPolicerProfileCapped=tQosEgrPolicerProfileCapped, tMcMlpppEgrClassMir=tMcMlpppEgrClassMir, tSapEgressPrecHsmdaCntrOverride=tSapEgressPrecHsmdaCntrOverride, tSapIngressIPv6CriteriaSourcePortValue1=tSapIngressIPv6CriteriaSourcePortValue1, tNetworkQueuePortCIRLvl=tNetworkQueuePortCIRLvl, tNetworkQueuePolicy=tNetworkQueuePolicy, tQosIngQGroupEntry=tQosIngQGroupEntry, tQ1NamedPoolReservedCbs=tQ1NamedPoolReservedCbs, tPortSchPlcyLvl1GrpWeight=tPortSchPlcyLvl1GrpWeight, tSapEgrPolicerProfileCapped=tSapEgrPolicerProfileCapped, tQosIngQGroupTable=tQosIngQGroupTable, tSapEgressDescription=tSapEgressDescription, tSapIngrHsmdaQueueTblLastChngd=tSapIngrHsmdaQueueTblLastChngd, tSapEgrIPCritSourcePortValue1=tSapEgrIPCritSourcePortValue1, tmnxQosObsoletedV6v0Group=tmnxQosObsoletedV6v0Group, tPortSchPlcyLvl8GrpName=tPortSchPlcyLvl8GrpName, tPortSchPlcyLvl4GrpWeight=tPortSchPlcyLvl4GrpWeight, tPortSchedulerPlcyLvl3CIR=tPortSchedulerPlcyLvl3CIR, tQosNotifyPrefix=tQosNotifyPrefix, tSapEgrPolicerSlopeMaxDepth=tSapEgrPolicerSlopeMaxDepth, tQ1NamedPoolName=tQ1NamedPoolName, tSapIngressMacCritOuterTagMask=tSapIngressMacCritOuterTagMask, tNetworkEgressFCTable=tNetworkEgressFCTable, tHsmdaWrrPolicyAggWeightAtClass=tHsmdaWrrPolicyAggWeightAtClass, tSapEgrPolicerHiPrioOnly=tSapEgrPolicerHiPrioOnly, tSapIngressIPCriteriaTableLastChanged=tSapIngressIPCriteriaTableLastChanged, tmnxQosSapEgressV8v0Group=tmnxQosSapEgressV8v0Group, tmnxQosHsmdaObsoletedV9v0Group=tmnxQosHsmdaObsoletedV9v0Group, tSapIngressMacCriteriaTable=tSapIngressMacCriteriaTable, tSharedQueueId=tSharedQueueId, tSharedQueueEntry=tSharedQueueEntry, tNetworkEgressPrecValue=tNetworkEgressPrecValue, tSapEgressQueueEntry=tSapEgressQueueEntry, tSapEgressDSCPEntry=tSapEgressDSCPEntry, tSapEgressDot1pProfile=tSapEgressDot1pProfile, tQosPolicerCtrlPolMinMBSSep=tQosPolicerCtrlPolMinMBSSep, tSapEgressPolicyName=tSapEgressPolicyName, tQosPolicerObjects=tQosPolicerObjects, tNetworkQueueCBS=tNetworkQueueCBS, tMcFrEgrProfTable=tMcFrEgrProfTable, tQosPolicerArbiterParent=tQosPolicerArbiterParent, tQosPolicerArbiterLevel=tQosPolicerArbiterLevel, tNetworkQueueObjects=tNetworkQueueObjects, tNetworkQueueCIR=tNetworkQueueCIR, tSapEgressPrecFC=tSapEgressPrecFC, tSlopeHiStartAverage=tSlopeHiStartAverage, tSapIngressIPCriteriaIpPrecMask=tSapIngressIPCriteriaIpPrecMask, tQosPolicerCtrlPolEntry=tQosPolicerCtrlPolEntry, tQosIngPolicerPIRAdaptation=tQosIngPolicerPIRAdaptation, tPortSchedulerPlcyLvl1PIR=tPortSchedulerPlcyLvl1PIR, tSapIngressIPCriteriaDSCP=tSapIngressIPCriteriaDSCP, tSapEgrIPCritDescription=tSapEgrIPCritDescription, tPortSchPlcyLvl6GrpWeight=tPortSchPlcyLvl6GrpWeight, tSapEgressQueueAdminPIR=tSapEgressQueueAdminPIR, tSapEgressQueueRateType=tSapEgressQueueRateType, tNetworkEgressDSCPRowStatus=tNetworkEgressDSCPRowStatus, tSapIngressQueuePoolName=tSapIngressQueuePoolName, tNetworkIngressDSCP=tNetworkIngressDSCP, tQosEgrQueueWeight=tQosEgrQueueWeight, tNetworkObjects=tNetworkObjects, tSapIngressDot1pValue=tSapIngressDot1pValue, tSapIngressIPCriteriaSourceIpAddr=tSapIngressIPCriteriaSourceIpAddr, tQosIngQueueHiPrioOnly=tQosIngQueueHiPrioOnly, tMcMlpppIngrProfLastChanged=tMcMlpppIngrProfLastChanged, tHsmdaWrrPolicyDescription=tHsmdaWrrPolicyDescription, tPortSchPlcyGrpEntry=tPortSchPlcyGrpEntry, tQosEgrPolicerAdvCfgPolicy=tQosEgrPolicerAdvCfgPolicy, tSapEgressObjects=tSapEgressObjects, tQ1NamedPoolSlopePolicy=tQ1NamedPoolSlopePolicy, tSapIngressIPv6CriteriaDestPortOperator=tSapIngressIPv6CriteriaDestPortOperator)
