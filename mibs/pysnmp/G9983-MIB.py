#
# PySNMP MIB module G9983-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/G9983-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:04:29 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ValueRangeConstraint, ConstraintsIntersection, SingleValueConstraint, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ValueRangeConstraint", "ConstraintsIntersection", "SingleValueConstraint", "ValueSizeConstraint")
HCPerfInvalidIntervals, HCPerfIntervalCount, HCPerfValidIntervals, HCPerfCurrentCount, HCPerfTimeElapsed = mibBuilder.importSymbols("HC-PerfHist-TC-MIB", "HCPerfInvalidIntervals", "HCPerfIntervalCount", "HCPerfValidIntervals", "HCPerfCurrentCount", "HCPerfTimeElapsed")
InterfaceIndex, ifIndex = mibBuilder.importSymbols("IF-MIB", "InterfaceIndex", "ifIndex")
ObjectGroup, ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "ModuleCompliance", "NotificationGroup")
MibScalar, MibTable, MibTableRow, MibTableColumn, ObjectIdentity, MibIdentifier, NotificationType, mib_2, Counter64, Unsigned32, Bits, Counter32, IpAddress, iso, TimeTicks, Integer32, ModuleIdentity, Gauge32 = mibBuilder.importSymbols("SNMPv2-SMI", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ObjectIdentity", "MibIdentifier", "NotificationType", "mib-2", "Counter64", "Unsigned32", "Bits", "Counter32", "IpAddress", "iso", "TimeTicks", "Integer32", "ModuleIdentity", "Gauge32")
TruthValue, TextualConvention, RowStatus, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TruthValue", "TextualConvention", "RowStatus", "DisplayString")
g9983MIB = ModuleIdentity((1, 3, 6, 1, 2, 1, 210))
g9983MIB.setRevisions(('2013-02-20 00:00',))
if mibBuilder.loadTexts: g9983MIB.setLastUpdated('201302200000Z')
if mibBuilder.loadTexts: g9983MIB.setOrganization('IETF ADSL MIB Working Group')
g9983Objects = MibIdentifier((1, 3, 6, 1, 2, 1, 210, 1))
g9983Conformance = MibIdentifier((1, 3, 6, 1, 2, 1, 210, 2))
g9983Port = MibIdentifier((1, 3, 6, 1, 2, 1, 210, 1, 1))
class G9983SvcIndex(TextualConvention, Unsigned32):
    status = 'current'
    displayHint = 'd'
    subtypeSpec = Unsigned32.subtypeSpec + ValueRangeConstraint(1, 255)

class G9983SvcIndexList(TextualConvention, OctetString):
    status = 'current'
    displayHint = '1d:'
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(0, 60)

class G9983SvcOrderIndex(TextualConvention, Unsigned32):
    status = 'current'
    displayHint = 'd'
    subtypeSpec = Unsigned32.subtypeSpec + ValueRangeConstraint(1, 60)

g9983PortNotifications = MibIdentifier((1, 3, 6, 1, 2, 1, 210, 1, 1, 0))
g9983SvcUp = NotificationType((1, 3, 6, 1, 2, 1, 210, 1, 1, 0, 1)).setObjects(("G9983-MIB", "g9983OperSvcIdx"), ("G9983-MIB", "g9983SvcIfIdx"))
if mibBuilder.loadTexts: g9983SvcUp.setStatus('current')
g9983SvcDown = NotificationType((1, 3, 6, 1, 2, 1, 210, 1, 1, 0, 2)).setObjects(("G9983-MIB", "g9983OperSvcIdx"), ("G9983-MIB", "g9983SvcIfIdx"))
if mibBuilder.loadTexts: g9983SvcDown.setStatus('current')
g9983PortConfTable = MibTable((1, 3, 6, 1, 2, 1, 210, 1, 1, 1), )
if mibBuilder.loadTexts: g9983PortConfTable.setStatus('current')
g9983PortConfEntry = MibTableRow((1, 3, 6, 1, 2, 1, 210, 1, 1, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: g9983PortConfEntry.setStatus('current')
g9983PortConfFecAdminState = MibTableColumn((1, 3, 6, 1, 2, 1, 210, 1, 1, 1, 1, 1), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: g9983PortConfFecAdminState.setStatus('current')
g9983PortConfFecWordSize = MibTableColumn((1, 3, 6, 1, 2, 1, 210, 1, 1, 1, 1, 2), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(20, 255), ))).setUnits('octets').setMaxAccess("readwrite")
if mibBuilder.loadTexts: g9983PortConfFecWordSize.setStatus('current')
g9983PortConfFecRedundancySize = MibTableColumn((1, 3, 6, 1, 2, 1, 210, 1, 1, 1, 1, 3), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(2, 2), ValueRangeConstraint(4, 4), ValueRangeConstraint(8, 8), ValueRangeConstraint(16, 16), ValueRangeConstraint(20, 20), ))).setUnits('octets').setMaxAccess("readwrite")
if mibBuilder.loadTexts: g9983PortConfFecRedundancySize.setStatus('current')
g9983PortConfFecInterleaverType = MibTableColumn((1, 3, 6, 1, 2, 1, 210, 1, 1, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("none", 0), ("block", 1), ("convolution", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: g9983PortConfFecInterleaverType.setStatus('current')
g9983PortConfFecInterleaverDepth = MibTableColumn((1, 3, 6, 1, 2, 1, 210, 1, 1, 1, 1, 5), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 1), ValueRangeConstraint(2, 2), ValueRangeConstraint(3, 3), ValueRangeConstraint(4, 4), ValueRangeConstraint(6, 6), ValueRangeConstraint(8, 8), ValueRangeConstraint(12, 12), ValueRangeConstraint(16, 16), ValueRangeConstraint(24, 24), ValueRangeConstraint(32, 32), ValueRangeConstraint(48, 48), ValueRangeConstraint(96, 96), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: g9983PortConfFecInterleaverDepth.setStatus('current')
g9983PortConfAdminServices = MibTableColumn((1, 3, 6, 1, 2, 1, 210, 1, 1, 1, 1, 6), G9983SvcIndexList()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: g9983PortConfAdminServices.setStatus('current')
g9983PortConfSvcUpDownEnable = MibTableColumn((1, 3, 6, 1, 2, 1, 210, 1, 1, 1, 1, 7), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: g9983PortConfSvcUpDownEnable.setStatus('current')
g9983PortCapTable = MibTable((1, 3, 6, 1, 2, 1, 210, 1, 1, 2), )
if mibBuilder.loadTexts: g9983PortCapTable.setStatus('current')
g9983PortCapEntry = MibTableRow((1, 3, 6, 1, 2, 1, 210, 1, 1, 2, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: g9983PortCapEntry.setStatus('current')
g9983PortCapFecSupported = MibTableColumn((1, 3, 6, 1, 2, 1, 210, 1, 1, 2, 1, 1), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g9983PortCapFecSupported.setStatus('current')
g9983PortCapFecMaxWordSize = MibTableColumn((1, 3, 6, 1, 2, 1, 210, 1, 1, 2, 1, 2), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(20, 255), ))).setUnits('octets').setMaxAccess("readonly")
if mibBuilder.loadTexts: g9983PortCapFecMaxWordSize.setStatus('current')
g9983PortCapFecMaxRedundancySize = MibTableColumn((1, 3, 6, 1, 2, 1, 210, 1, 1, 2, 1, 3), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(2, 2), ValueRangeConstraint(4, 4), ValueRangeConstraint(8, 8), ValueRangeConstraint(16, 16), ValueRangeConstraint(20, 20), ))).setUnits('octets').setMaxAccess("readonly")
if mibBuilder.loadTexts: g9983PortCapFecMaxRedundancySize.setStatus('current')
g9983PortCapFecInterleaverTypeSupported = MibTableColumn((1, 3, 6, 1, 2, 1, 210, 1, 1, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("none", 0), ("block", 1), ("convolution", 2), ("blockConvolution", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g9983PortCapFecInterleaverTypeSupported.setStatus('current')
g9983PortCapFecMaxInterleaverDepth = MibTableColumn((1, 3, 6, 1, 2, 1, 210, 1, 1, 2, 1, 5), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 1), ValueRangeConstraint(2, 2), ValueRangeConstraint(3, 3), ValueRangeConstraint(4, 4), ValueRangeConstraint(6, 6), ValueRangeConstraint(8, 8), ValueRangeConstraint(12, 12), ValueRangeConstraint(16, 16), ValueRangeConstraint(24, 24), ValueRangeConstraint(32, 32), ValueRangeConstraint(48, 48), ValueRangeConstraint(96, 96), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g9983PortCapFecMaxInterleaverDepth.setStatus('current')
g9983PortStatTable = MibTable((1, 3, 6, 1, 2, 1, 210, 1, 1, 3), )
if mibBuilder.loadTexts: g9983PortStatTable.setStatus('current')
g9983PortStatEntry = MibTableRow((1, 3, 6, 1, 2, 1, 210, 1, 1, 3, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: g9983PortStatEntry.setStatus('current')
g9983PortStatFecOperState = MibTableColumn((1, 3, 6, 1, 2, 1, 210, 1, 1, 3, 1, 1), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g9983PortStatFecOperState.setStatus('current')
g9983PortStatFltStatus = MibTableColumn((1, 3, 6, 1, 2, 1, 210, 1, 1, 3, 1, 2), Bits().clone(namedValues=NamedValues(("serviceDown", 0), ("wrongConfig", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g9983PortStatFltStatus.setStatus('current')
g9983PortStatCrc4Errors = MibTableColumn((1, 3, 6, 1, 2, 1, 210, 1, 1, 3, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g9983PortStatCrc4Errors.setStatus('current')
g9983PortStatCrc6Errors = MibTableColumn((1, 3, 6, 1, 2, 1, 210, 1, 1, 3, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g9983PortStatCrc6Errors.setStatus('current')
g9983PortStatCrc8Errors = MibTableColumn((1, 3, 6, 1, 2, 1, 210, 1, 1, 3, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g9983PortStatCrc8Errors.setStatus('current')
g9983OperSvcTable = MibTable((1, 3, 6, 1, 2, 1, 210, 1, 1, 4), )
if mibBuilder.loadTexts: g9983OperSvcTable.setStatus('current')
g9983OperSvcEntry = MibTableRow((1, 3, 6, 1, 2, 1, 210, 1, 1, 4, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "G9983-MIB", "g9983OperSvcPosition"))
if mibBuilder.loadTexts: g9983OperSvcEntry.setStatus('current')
g9983OperSvcPosition = MibTableColumn((1, 3, 6, 1, 2, 1, 210, 1, 1, 4, 1, 1), G9983SvcOrderIndex())
if mibBuilder.loadTexts: g9983OperSvcPosition.setStatus('current')
g9983OperSvcIdx = MibTableColumn((1, 3, 6, 1, 2, 1, 210, 1, 1, 4, 1, 2), G9983SvcIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g9983OperSvcIdx.setStatus('current')
g9983OperSvcState = MibTableColumn((1, 3, 6, 1, 2, 1, 210, 1, 1, 4, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("up", 1), ("down", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g9983OperSvcState.setStatus('current')
g9983SvcTable = MibTable((1, 3, 6, 1, 2, 1, 210, 1, 1, 5), )
if mibBuilder.loadTexts: g9983SvcTable.setStatus('current')
g9983SvcEntry = MibTableRow((1, 3, 6, 1, 2, 1, 210, 1, 1, 5, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "G9983-MIB", "g9983SvcIdx"))
if mibBuilder.loadTexts: g9983SvcEntry.setStatus('current')
g9983SvcIdx = MibTableColumn((1, 3, 6, 1, 2, 1, 210, 1, 1, 5, 1, 1), G9983SvcIndex())
if mibBuilder.loadTexts: g9983SvcIdx.setStatus('current')
g9983SvcIfIdx = MibTableColumn((1, 3, 6, 1, 2, 1, 210, 1, 1, 5, 1, 2), InterfaceIndex()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: g9983SvcIfIdx.setStatus('current')
g9983SvcType = MibTableColumn((1, 3, 6, 1, 2, 1, 210, 1, 1, 5, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10))).clone(namedValues=NamedValues(("ds1", 0), ("e1", 1), ("nxds0", 2), ("nxe0", 3), ("ds3", 4), ("e3", 5), ("clock", 6), ("ethernet", 7), ("atm", 8), ("gfpNoFCS", 9), ("gfp", 10)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: g9983SvcType.setStatus('current')
g9983SvcSize = MibTableColumn((1, 3, 6, 1, 2, 1, 210, 1, 1, 5, 1, 4), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(20, 255), ))).setUnits('octets').setMaxAccess("readcreate")
if mibBuilder.loadTexts: g9983SvcSize.setStatus('current')
g9983SvcRowStatus = MibTableColumn((1, 3, 6, 1, 2, 1, 210, 1, 1, 5, 1, 5), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: g9983SvcRowStatus.setStatus('current')
g9983PM = MibIdentifier((1, 3, 6, 1, 2, 1, 210, 1, 1, 6))
g9983PortPmCurTable = MibTable((1, 3, 6, 1, 2, 1, 210, 1, 1, 6, 1), )
if mibBuilder.loadTexts: g9983PortPmCurTable.setStatus('current')
g9983PortPmCurEntry = MibTableRow((1, 3, 6, 1, 2, 1, 210, 1, 1, 6, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: g9983PortPmCurEntry.setStatus('current')
g9983PortPmCur15MinValidIntervals = MibTableColumn((1, 3, 6, 1, 2, 1, 210, 1, 1, 6, 1, 1, 1), HCPerfValidIntervals()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g9983PortPmCur15MinValidIntervals.setStatus('current')
g9983PortPmCur15MinInvalidIntervals = MibTableColumn((1, 3, 6, 1, 2, 1, 210, 1, 1, 6, 1, 1, 2), HCPerfInvalidIntervals()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g9983PortPmCur15MinInvalidIntervals.setStatus('current')
g9983PortPmCur15MinTimeElapsed = MibTableColumn((1, 3, 6, 1, 2, 1, 210, 1, 1, 6, 1, 1, 3), HCPerfTimeElapsed()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: g9983PortPmCur15MinTimeElapsed.setStatus('current')
g9983PortPmCur15MinCrc4s = MibTableColumn((1, 3, 6, 1, 2, 1, 210, 1, 1, 6, 1, 1, 4), HCPerfCurrentCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g9983PortPmCur15MinCrc4s.setStatus('current')
g9983PortPmCur15MinCrc6s = MibTableColumn((1, 3, 6, 1, 2, 1, 210, 1, 1, 6, 1, 1, 5), HCPerfCurrentCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g9983PortPmCur15MinCrc6s.setStatus('current')
g9983PortPmCur15MinCrc8s = MibTableColumn((1, 3, 6, 1, 2, 1, 210, 1, 1, 6, 1, 1, 6), HCPerfCurrentCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g9983PortPmCur15MinCrc8s.setStatus('current')
g9983PortPmCur1DayValidIntervals = MibTableColumn((1, 3, 6, 1, 2, 1, 210, 1, 1, 6, 1, 1, 7), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g9983PortPmCur1DayValidIntervals.setStatus('current')
g9983PortPmCur1DayInvalidIntervals = MibTableColumn((1, 3, 6, 1, 2, 1, 210, 1, 1, 6, 1, 1, 8), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readonly")
if mibBuilder.loadTexts: g9983PortPmCur1DayInvalidIntervals.setStatus('current')
g9983PortPmCur1DayTimeElapsed = MibTableColumn((1, 3, 6, 1, 2, 1, 210, 1, 1, 6, 1, 1, 9), HCPerfTimeElapsed()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: g9983PortPmCur1DayTimeElapsed.setStatus('current')
g9983PortPmCur1DayCrc4s = MibTableColumn((1, 3, 6, 1, 2, 1, 210, 1, 1, 6, 1, 1, 10), HCPerfCurrentCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g9983PortPmCur1DayCrc4s.setStatus('current')
g9983PortPmCur1DayCrc6s = MibTableColumn((1, 3, 6, 1, 2, 1, 210, 1, 1, 6, 1, 1, 11), HCPerfCurrentCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g9983PortPmCur1DayCrc6s.setStatus('current')
g9983PortPmCur1DayCrc8s = MibTableColumn((1, 3, 6, 1, 2, 1, 210, 1, 1, 6, 1, 1, 12), HCPerfCurrentCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g9983PortPmCur1DayCrc8s.setStatus('current')
g9983PortPm15MinTable = MibTable((1, 3, 6, 1, 2, 1, 210, 1, 1, 6, 2), )
if mibBuilder.loadTexts: g9983PortPm15MinTable.setStatus('current')
g9983PortPm15MinEntry = MibTableRow((1, 3, 6, 1, 2, 1, 210, 1, 1, 6, 2, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "G9983-MIB", "g9983PortPm15MinIntervalIndex"))
if mibBuilder.loadTexts: g9983PortPm15MinEntry.setStatus('current')
g9983PortPm15MinIntervalIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 210, 1, 1, 6, 2, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 96)))
if mibBuilder.loadTexts: g9983PortPm15MinIntervalIndex.setStatus('current')
g9983PortPm15MinIntervalMoniTime = MibTableColumn((1, 3, 6, 1, 2, 1, 210, 1, 1, 6, 2, 1, 2), HCPerfTimeElapsed()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: g9983PortPm15MinIntervalMoniTime.setStatus('current')
g9983PortPm15MinIntervalCrc4s = MibTableColumn((1, 3, 6, 1, 2, 1, 210, 1, 1, 6, 2, 1, 3), HCPerfIntervalCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g9983PortPm15MinIntervalCrc4s.setStatus('current')
g9983PortPm15MinIntervalCrc6s = MibTableColumn((1, 3, 6, 1, 2, 1, 210, 1, 1, 6, 2, 1, 4), HCPerfIntervalCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g9983PortPm15MinIntervalCrc6s.setStatus('current')
g9983PortPm15MinIntervalCrc8s = MibTableColumn((1, 3, 6, 1, 2, 1, 210, 1, 1, 6, 2, 1, 5), HCPerfIntervalCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g9983PortPm15MinIntervalCrc8s.setStatus('current')
g9983PortPm15MinIntervalValid = MibTableColumn((1, 3, 6, 1, 2, 1, 210, 1, 1, 6, 2, 1, 6), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g9983PortPm15MinIntervalValid.setStatus('current')
g9983PortPm1DayTable = MibTable((1, 3, 6, 1, 2, 1, 210, 1, 1, 6, 3), )
if mibBuilder.loadTexts: g9983PortPm1DayTable.setStatus('current')
g9983PortPm1DayEntry = MibTableRow((1, 3, 6, 1, 2, 1, 210, 1, 1, 6, 3, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "G9983-MIB", "g9983PortPm1DayIntervalIndex"))
if mibBuilder.loadTexts: g9983PortPm1DayEntry.setStatus('current')
g9983PortPm1DayIntervalIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 210, 1, 1, 6, 3, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 7)))
if mibBuilder.loadTexts: g9983PortPm1DayIntervalIndex.setStatus('current')
g9983PortPm1DayIntervalMoniTime = MibTableColumn((1, 3, 6, 1, 2, 1, 210, 1, 1, 6, 3, 1, 2), HCPerfTimeElapsed()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: g9983PortPm1DayIntervalMoniTime.setStatus('current')
g9983PortPm1DayIntervalCrc4s = MibTableColumn((1, 3, 6, 1, 2, 1, 210, 1, 1, 6, 3, 1, 3), HCPerfIntervalCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g9983PortPm1DayIntervalCrc4s.setStatus('current')
g9983PortPm1DayIntervalCrc6s = MibTableColumn((1, 3, 6, 1, 2, 1, 210, 1, 1, 6, 3, 1, 4), HCPerfIntervalCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g9983PortPm1DayIntervalCrc6s.setStatus('current')
g9983PortPm1DayIntervalCrc8s = MibTableColumn((1, 3, 6, 1, 2, 1, 210, 1, 1, 6, 3, 1, 5), HCPerfIntervalCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g9983PortPm1DayIntervalCrc8s.setStatus('current')
g9983PortPm1DayIntervalValid = MibTableColumn((1, 3, 6, 1, 2, 1, 210, 1, 1, 6, 3, 1, 6), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g9983PortPm1DayIntervalValid.setStatus('current')
g9983SvcPmCurTable = MibTable((1, 3, 6, 1, 2, 1, 210, 1, 1, 6, 4), )
if mibBuilder.loadTexts: g9983SvcPmCurTable.setStatus('current')
g9983SvcPmCurEntry = MibTableRow((1, 3, 6, 1, 2, 1, 210, 1, 1, 6, 4, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "G9983-MIB", "g9983SvcIdx"))
if mibBuilder.loadTexts: g9983SvcPmCurEntry.setStatus('current')
g9983SvcPmCur15MinValidIntervals = MibTableColumn((1, 3, 6, 1, 2, 1, 210, 1, 1, 6, 4, 1, 1), HCPerfValidIntervals()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g9983SvcPmCur15MinValidIntervals.setStatus('current')
g9983SvcPmCur15MinInvalidIntervals = MibTableColumn((1, 3, 6, 1, 2, 1, 210, 1, 1, 6, 4, 1, 2), HCPerfInvalidIntervals()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g9983SvcPmCur15MinInvalidIntervals.setStatus('current')
g9983SvcPmCur15MinTimeElapsed = MibTableColumn((1, 3, 6, 1, 2, 1, 210, 1, 1, 6, 4, 1, 3), HCPerfTimeElapsed()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: g9983SvcPmCur15MinTimeElapsed.setStatus('current')
g9983SvcPmCur15MinDowns = MibTableColumn((1, 3, 6, 1, 2, 1, 210, 1, 1, 6, 4, 1, 4), HCPerfCurrentCount()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: g9983SvcPmCur15MinDowns.setStatus('current')
g9983SvcPmCur1DayValidIntervals = MibTableColumn((1, 3, 6, 1, 2, 1, 210, 1, 1, 6, 4, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setUnits('days').setMaxAccess("readonly")
if mibBuilder.loadTexts: g9983SvcPmCur1DayValidIntervals.setStatus('current')
g9983SvcPmCur1DayInvalidIntervals = MibTableColumn((1, 3, 6, 1, 2, 1, 210, 1, 1, 6, 4, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setUnits('days').setMaxAccess("readonly")
if mibBuilder.loadTexts: g9983SvcPmCur1DayInvalidIntervals.setStatus('current')
g9983SvcPmCur1DayTimeElapsed = MibTableColumn((1, 3, 6, 1, 2, 1, 210, 1, 1, 6, 4, 1, 7), HCPerfTimeElapsed()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: g9983SvcPmCur1DayTimeElapsed.setStatus('current')
g9983SvcPmCur1DayDowns = MibTableColumn((1, 3, 6, 1, 2, 1, 210, 1, 1, 6, 4, 1, 8), HCPerfCurrentCount()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: g9983SvcPmCur1DayDowns.setStatus('current')
g9983SvcPm15MinTable = MibTable((1, 3, 6, 1, 2, 1, 210, 1, 1, 6, 5), )
if mibBuilder.loadTexts: g9983SvcPm15MinTable.setStatus('current')
g9983SvcPm15MinEntry = MibTableRow((1, 3, 6, 1, 2, 1, 210, 1, 1, 6, 5, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "G9983-MIB", "g9983SvcIdx"), (0, "G9983-MIB", "g9983SvcPm15MinIntervalIndex"))
if mibBuilder.loadTexts: g9983SvcPm15MinEntry.setStatus('current')
g9983SvcPm15MinIntervalIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 210, 1, 1, 6, 5, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 96)))
if mibBuilder.loadTexts: g9983SvcPm15MinIntervalIndex.setStatus('current')
g9983SvcPm15MinIntervalMoniTime = MibTableColumn((1, 3, 6, 1, 2, 1, 210, 1, 1, 6, 5, 1, 2), HCPerfTimeElapsed()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: g9983SvcPm15MinIntervalMoniTime.setStatus('current')
g9983SvcPm15MinIntervalDowns = MibTableColumn((1, 3, 6, 1, 2, 1, 210, 1, 1, 6, 5, 1, 3), HCPerfIntervalCount()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: g9983SvcPm15MinIntervalDowns.setStatus('current')
g9983SvcPm15MinIntervalValid = MibTableColumn((1, 3, 6, 1, 2, 1, 210, 1, 1, 6, 5, 1, 4), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g9983SvcPm15MinIntervalValid.setStatus('current')
g9983SvcPm1DayTable = MibTable((1, 3, 6, 1, 2, 1, 210, 1, 1, 6, 6), )
if mibBuilder.loadTexts: g9983SvcPm1DayTable.setStatus('current')
g9983SvcPm1DayEntry = MibTableRow((1, 3, 6, 1, 2, 1, 210, 1, 1, 6, 6, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "G9983-MIB", "g9983SvcIdx"), (0, "G9983-MIB", "g9983SvcPm1DayIntervalIndex"))
if mibBuilder.loadTexts: g9983SvcPm1DayEntry.setStatus('current')
g9983SvcPm1DayIntervalIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 210, 1, 1, 6, 6, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 7)))
if mibBuilder.loadTexts: g9983SvcPm1DayIntervalIndex.setStatus('current')
g9983SvcPm1DayIntervalMoniTime = MibTableColumn((1, 3, 6, 1, 2, 1, 210, 1, 1, 6, 6, 1, 2), HCPerfTimeElapsed()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: g9983SvcPm1DayIntervalMoniTime.setStatus('current')
g9983SvcPm1DayIntervalDowns = MibTableColumn((1, 3, 6, 1, 2, 1, 210, 1, 1, 6, 6, 1, 3), HCPerfIntervalCount()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: g9983SvcPm1DayIntervalDowns.setStatus('current')
g9983SvcPm1DayIntervalValid = MibTableColumn((1, 3, 6, 1, 2, 1, 210, 1, 1, 6, 6, 1, 4), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: g9983SvcPm1DayIntervalValid.setStatus('current')
g9983Groups = MibIdentifier((1, 3, 6, 1, 2, 1, 210, 2, 1))
g9983Compliances = MibIdentifier((1, 3, 6, 1, 2, 1, 210, 2, 2))
g9983BasicGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 210, 2, 1, 1)).setObjects(("G9983-MIB", "g9983PortConfAdminServices"), ("G9983-MIB", "g9983PortStatCrc4Errors"), ("G9983-MIB", "g9983PortStatCrc6Errors"), ("G9983-MIB", "g9983PortStatCrc8Errors"), ("G9983-MIB", "g9983PortCapFecSupported"), ("G9983-MIB", "g9983OperSvcIdx"), ("G9983-MIB", "g9983OperSvcState"), ("G9983-MIB", "g9983SvcIfIdx"), ("G9983-MIB", "g9983SvcType"), ("G9983-MIB", "g9983SvcSize"), ("G9983-MIB", "g9983SvcRowStatus"), ("G9983-MIB", "g9983PortStatFltStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    g9983BasicGroup = g9983BasicGroup.setStatus('current')
g9983FecGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 210, 2, 1, 2)).setObjects(("G9983-MIB", "g9983PortCapFecSupported"), ("G9983-MIB", "g9983PortConfFecAdminState"), ("G9983-MIB", "g9983PortStatFecOperState"), ("G9983-MIB", "g9983PortConfFecWordSize"), ("G9983-MIB", "g9983PortConfFecRedundancySize"), ("G9983-MIB", "g9983PortConfFecInterleaverType"), ("G9983-MIB", "g9983PortConfFecInterleaverDepth"), ("G9983-MIB", "g9983PortCapFecMaxWordSize"), ("G9983-MIB", "g9983PortCapFecMaxRedundancySize"), ("G9983-MIB", "g9983PortCapFecInterleaverTypeSupported"), ("G9983-MIB", "g9983PortCapFecMaxInterleaverDepth"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    g9983FecGroup = g9983FecGroup.setStatus('current')
g9983AlarmConfGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 210, 2, 1, 3)).setObjects(("G9983-MIB", "g9983PortConfSvcUpDownEnable"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    g9983AlarmConfGroup = g9983AlarmConfGroup.setStatus('current')
g9983NotificationGroup = NotificationGroup((1, 3, 6, 1, 2, 1, 210, 2, 1, 4)).setObjects(("G9983-MIB", "g9983SvcUp"), ("G9983-MIB", "g9983SvcDown"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    g9983NotificationGroup = g9983NotificationGroup.setStatus('current')
g9983PerfCurrGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 210, 2, 1, 5)).setObjects(("G9983-MIB", "g9983PortPmCur15MinValidIntervals"), ("G9983-MIB", "g9983PortPmCur15MinInvalidIntervals"), ("G9983-MIB", "g9983PortPmCur15MinTimeElapsed"), ("G9983-MIB", "g9983PortPmCur15MinCrc4s"), ("G9983-MIB", "g9983PortPmCur15MinCrc6s"), ("G9983-MIB", "g9983PortPmCur15MinCrc8s"), ("G9983-MIB", "g9983PortPmCur1DayValidIntervals"), ("G9983-MIB", "g9983PortPmCur1DayInvalidIntervals"), ("G9983-MIB", "g9983PortPmCur1DayTimeElapsed"), ("G9983-MIB", "g9983PortPmCur1DayCrc4s"), ("G9983-MIB", "g9983PortPmCur1DayCrc6s"), ("G9983-MIB", "g9983PortPmCur1DayCrc8s"), ("G9983-MIB", "g9983SvcPmCur15MinValidIntervals"), ("G9983-MIB", "g9983SvcPmCur15MinInvalidIntervals"), ("G9983-MIB", "g9983SvcPmCur15MinTimeElapsed"), ("G9983-MIB", "g9983SvcPmCur15MinDowns"), ("G9983-MIB", "g9983SvcPmCur1DayValidIntervals"), ("G9983-MIB", "g9983SvcPmCur1DayInvalidIntervals"), ("G9983-MIB", "g9983SvcPmCur1DayTimeElapsed"), ("G9983-MIB", "g9983SvcPmCur1DayDowns"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    g9983PerfCurrGroup = g9983PerfCurrGroup.setStatus('current')
g9983Perf15MinGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 210, 2, 1, 6)).setObjects(("G9983-MIB", "g9983PortPm15MinIntervalMoniTime"), ("G9983-MIB", "g9983PortPm15MinIntervalCrc4s"), ("G9983-MIB", "g9983PortPm15MinIntervalCrc6s"), ("G9983-MIB", "g9983PortPm15MinIntervalCrc8s"), ("G9983-MIB", "g9983PortPm15MinIntervalValid"), ("G9983-MIB", "g9983SvcPm15MinIntervalMoniTime"), ("G9983-MIB", "g9983SvcPm15MinIntervalDowns"), ("G9983-MIB", "g9983SvcPm15MinIntervalValid"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    g9983Perf15MinGroup = g9983Perf15MinGroup.setStatus('current')
g9983Perf1DayGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 210, 2, 1, 7)).setObjects(("G9983-MIB", "g9983PortPm1DayIntervalMoniTime"), ("G9983-MIB", "g9983PortPm1DayIntervalCrc4s"), ("G9983-MIB", "g9983PortPm1DayIntervalCrc6s"), ("G9983-MIB", "g9983PortPm1DayIntervalCrc8s"), ("G9983-MIB", "g9983PortPm1DayIntervalValid"), ("G9983-MIB", "g9983SvcPm1DayIntervalMoniTime"), ("G9983-MIB", "g9983SvcPm1DayIntervalDowns"), ("G9983-MIB", "g9983SvcPm1DayIntervalValid"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    g9983Perf1DayGroup = g9983Perf1DayGroup.setStatus('current')
g9983Compliance = ModuleCompliance((1, 3, 6, 1, 2, 1, 210, 2, 2, 1)).setObjects(("G9983-MIB", "g9983BasicGroup"), ("G9983-MIB", "g9983AlarmConfGroup"), ("G9983-MIB", "g9983NotificationGroup"), ("G9983-MIB", "g9983FecGroup"), ("G9983-MIB", "g9983PerfCurrGroup"), ("G9983-MIB", "g9983Perf15MinGroup"), ("G9983-MIB", "g9983Perf1DayGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    g9983Compliance = g9983Compliance.setStatus('current')
mibBuilder.exportSymbols("G9983-MIB", g9983PortStatCrc6Errors=g9983PortStatCrc6Errors, g9983AlarmConfGroup=g9983AlarmConfGroup, g9983PortPmCur15MinCrc4s=g9983PortPmCur15MinCrc4s, g9983Objects=g9983Objects, g9983PortNotifications=g9983PortNotifications, g9983SvcPm15MinTable=g9983SvcPm15MinTable, g9983SvcPm1DayEntry=g9983SvcPm1DayEntry, g9983PortConfFecWordSize=g9983PortConfFecWordSize, g9983PortPmCurEntry=g9983PortPmCurEntry, g9983Perf1DayGroup=g9983Perf1DayGroup, g9983PortCapEntry=g9983PortCapEntry, g9983PortConfEntry=g9983PortConfEntry, g9983SvcDown=g9983SvcDown, g9983OperSvcEntry=g9983OperSvcEntry, g9983PortPm15MinIntervalCrc6s=g9983PortPm15MinIntervalCrc6s, g9983Compliance=g9983Compliance, g9983PortPm15MinIntervalMoniTime=g9983PortPm15MinIntervalMoniTime, g9983OperSvcPosition=g9983OperSvcPosition, g9983PortConfFecAdminState=g9983PortConfFecAdminState, g9983PortPm1DayIntervalCrc8s=g9983PortPm1DayIntervalCrc8s, g9983SvcPm1DayIntervalDowns=g9983SvcPm1DayIntervalDowns, g9983PortPm1DayIntervalCrc6s=g9983PortPm1DayIntervalCrc6s, g9983PerfCurrGroup=g9983PerfCurrGroup, g9983PortPmCur15MinValidIntervals=g9983PortPmCur15MinValidIntervals, g9983PortStatFecOperState=g9983PortStatFecOperState, g9983Perf15MinGroup=g9983Perf15MinGroup, g9983PortPm1DayIntervalMoniTime=g9983PortPm1DayIntervalMoniTime, g9983PortPm15MinIntervalIndex=g9983PortPm15MinIntervalIndex, g9983PortPm15MinIntervalValid=g9983PortPm15MinIntervalValid, g9983SvcPm15MinIntervalIndex=g9983SvcPm15MinIntervalIndex, g9983SvcType=g9983SvcType, g9983PortPmCur1DayCrc4s=g9983PortPmCur1DayCrc4s, g9983PortStatCrc4Errors=g9983PortStatCrc4Errors, g9983SvcPm1DayIntervalIndex=g9983SvcPm1DayIntervalIndex, g9983PortPmCur1DayInvalidIntervals=g9983PortPmCur1DayInvalidIntervals, g9983PortPm1DayIntervalIndex=g9983PortPm1DayIntervalIndex, g9983SvcPmCur15MinValidIntervals=g9983SvcPmCur15MinValidIntervals, g9983Groups=g9983Groups, g9983PM=g9983PM, g9983PortPmCur1DayCrc6s=g9983PortPmCur1DayCrc6s, g9983SvcTable=g9983SvcTable, g9983PortPmCur1DayValidIntervals=g9983PortPmCur1DayValidIntervals, g9983PortCapFecMaxWordSize=g9983PortCapFecMaxWordSize, g9983OperSvcIdx=g9983OperSvcIdx, g9983PortPm15MinIntervalCrc8s=g9983PortPm15MinIntervalCrc8s, g9983PortPm15MinEntry=g9983PortPm15MinEntry, g9983Port=g9983Port, g9983SvcPm1DayIntervalValid=g9983SvcPm1DayIntervalValid, g9983Conformance=g9983Conformance, g9983SvcPmCur15MinInvalidIntervals=g9983SvcPmCur15MinInvalidIntervals, g9983SvcPm1DayTable=g9983SvcPm1DayTable, g9983SvcPmCur15MinDowns=g9983SvcPmCur15MinDowns, g9983SvcPmCurTable=g9983SvcPmCurTable, g9983SvcPmCur1DayTimeElapsed=g9983SvcPmCur1DayTimeElapsed, g9983PortStatTable=g9983PortStatTable, g9983SvcPmCur15MinTimeElapsed=g9983SvcPmCur15MinTimeElapsed, g9983FecGroup=g9983FecGroup, g9983PortConfAdminServices=g9983PortConfAdminServices, g9983SvcPmCur1DayInvalidIntervals=g9983SvcPmCur1DayInvalidIntervals, g9983OperSvcState=g9983OperSvcState, g9983PortConfSvcUpDownEnable=g9983PortConfSvcUpDownEnable, g9983PortPm1DayEntry=g9983PortPm1DayEntry, g9983SvcIfIdx=g9983SvcIfIdx, g9983SvcPmCurEntry=g9983SvcPmCurEntry, g9983PortConfFecInterleaverType=g9983PortConfFecInterleaverType, g9983PortStatFltStatus=g9983PortStatFltStatus, g9983SvcRowStatus=g9983SvcRowStatus, g9983PortPmCur15MinCrc6s=g9983PortPmCur15MinCrc6s, g9983OperSvcTable=g9983OperSvcTable, g9983SvcUp=g9983SvcUp, g9983PortConfTable=g9983PortConfTable, g9983PortConfFecRedundancySize=g9983PortConfFecRedundancySize, g9983PortCapFecInterleaverTypeSupported=g9983PortCapFecInterleaverTypeSupported, g9983SvcIdx=g9983SvcIdx, g9983SvcEntry=g9983SvcEntry, g9983PortCapFecMaxRedundancySize=g9983PortCapFecMaxRedundancySize, g9983PortPmCur1DayCrc8s=g9983PortPmCur1DayCrc8s, g9983PortPm15MinIntervalCrc4s=g9983PortPm15MinIntervalCrc4s, g9983PortCapTable=g9983PortCapTable, g9983SvcPmCur1DayValidIntervals=g9983SvcPmCur1DayValidIntervals, g9983PortPm1DayIntervalCrc4s=g9983PortPm1DayIntervalCrc4s, g9983SvcPm15MinEntry=g9983SvcPm15MinEntry, g9983PortPmCur15MinCrc8s=g9983PortPmCur15MinCrc8s, g9983SvcPmCur1DayDowns=g9983SvcPmCur1DayDowns, g9983PortPm1DayTable=g9983PortPm1DayTable, PYSNMP_MODULE_ID=g9983MIB, g9983SvcPm15MinIntervalValid=g9983SvcPm15MinIntervalValid, g9983PortStatCrc8Errors=g9983PortStatCrc8Errors, G9983SvcOrderIndex=G9983SvcOrderIndex, g9983MIB=g9983MIB, g9983PortPm1DayIntervalValid=g9983PortPm1DayIntervalValid, g9983PortPmCur15MinInvalidIntervals=g9983PortPmCur15MinInvalidIntervals, g9983PortConfFecInterleaverDepth=g9983PortConfFecInterleaverDepth, g9983SvcPm15MinIntervalDowns=g9983SvcPm15MinIntervalDowns, g9983PortCapFecSupported=g9983PortCapFecSupported, G9983SvcIndexList=G9983SvcIndexList, g9983SvcSize=g9983SvcSize, g9983PortPmCur1DayTimeElapsed=g9983PortPmCur1DayTimeElapsed, g9983Compliances=g9983Compliances, g9983BasicGroup=g9983BasicGroup, g9983PortCapFecMaxInterleaverDepth=g9983PortCapFecMaxInterleaverDepth, g9983SvcPm15MinIntervalMoniTime=g9983SvcPm15MinIntervalMoniTime, g9983PortStatEntry=g9983PortStatEntry, G9983SvcIndex=G9983SvcIndex, g9983SvcPm1DayIntervalMoniTime=g9983SvcPm1DayIntervalMoniTime, g9983PortPmCur15MinTimeElapsed=g9983PortPmCur15MinTimeElapsed, g9983NotificationGroup=g9983NotificationGroup, g9983PortPmCurTable=g9983PortPmCurTable, g9983PortPm15MinTable=g9983PortPm15MinTable)
