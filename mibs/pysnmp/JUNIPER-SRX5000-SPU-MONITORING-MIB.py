#
# PySNMP MIB module JUNIPER-SRX5000-SPU-MONITORING-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/JUNIPER-SRX5000-SPU-MONITORING-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:50:19 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ConstraintsIntersection, ValueSizeConstraint, ValueRangeConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ConstraintsIntersection", "ValueSizeConstraint", "ValueRangeConstraint", "ConstraintsUnion")
CounterBasedGauge64, = mibBuilder.importSymbols("HCNUM-TC", "CounterBasedGauge64")
jnxJsSPUMonitoringRoot, = mibBuilder.importSymbols("JUNIPER-JS-SMI", "jnxJsSPUMonitoringRoot")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Bits, MibIdentifier, MibScalar, MibTable, MibTableRow, MibTableColumn, Integer32, iso, Counter64, Unsigned32, ModuleIdentity, ObjectIdentity, Counter32, Gauge32, TimeTicks, IpAddress, NotificationType = mibBuilder.importSymbols("SNMPv2-SMI", "Bits", "MibIdentifier", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Integer32", "iso", "Counter64", "Unsigned32", "ModuleIdentity", "ObjectIdentity", "Counter32", "Gauge32", "TimeTicks", "IpAddress", "NotificationType")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
jnxJsSPUMonitoringMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 12, 1))
jnxJsSPUMonitoringMIB.setRevisions(('2012-07-04 00:00',))
if mibBuilder.loadTexts: jnxJsSPUMonitoringMIB.setLastUpdated('201003250000Z')
if mibBuilder.loadTexts: jnxJsSPUMonitoringMIB.setOrganization('Juniper Networks, Inc.')
jnxJsSPUMonitoringObjectsTable = MibTable((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 12, 1, 1), )
if mibBuilder.loadTexts: jnxJsSPUMonitoringObjectsTable.setStatus('current')
jnxJsSPUMonitoringObjectsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 12, 1, 1, 1), ).setIndexNames((0, "JUNIPER-SRX5000-SPU-MONITORING-MIB", "jnxJsSPUMonitoringIndex"))
if mibBuilder.loadTexts: jnxJsSPUMonitoringObjectsEntry.setStatus('current')
jnxJsSPUMonitoringIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 12, 1, 1, 1, 1), Unsigned32())
if mibBuilder.loadTexts: jnxJsSPUMonitoringIndex.setStatus('current')
jnxJsSPUMonitoringFPCIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 12, 1, 1, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxJsSPUMonitoringFPCIndex.setStatus('current')
jnxJsSPUMonitoringSPUIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 12, 1, 1, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxJsSPUMonitoringSPUIndex.setStatus('current')
jnxJsSPUMonitoringCPUUsage = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 12, 1, 1, 1, 4), Unsigned32()).setUnits('percent').setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxJsSPUMonitoringCPUUsage.setStatus('current')
jnxJsSPUMonitoringMemoryUsage = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 12, 1, 1, 1, 5), Unsigned32()).setUnits('percent').setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxJsSPUMonitoringMemoryUsage.setStatus('current')
jnxJsSPUMonitoringCurrentFlowSession = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 12, 1, 1, 1, 6), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxJsSPUMonitoringCurrentFlowSession.setStatus('current')
jnxJsSPUMonitoringMaxFlowSession = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 12, 1, 1, 1, 7), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxJsSPUMonitoringMaxFlowSession.setStatus('current')
jnxJsSPUMonitoringCurrentCPSession = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 12, 1, 1, 1, 8), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxJsSPUMonitoringCurrentCPSession.setStatus('current')
jnxJsSPUMonitoringMaxCPSession = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 12, 1, 1, 1, 9), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxJsSPUMonitoringMaxCPSession.setStatus('current')
jnxJsSPUMonitoringNodeIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 12, 1, 1, 1, 10), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxJsSPUMonitoringNodeIndex.setStatus('current')
jnxJsSPUMonitoringNodeDescr = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 12, 1, 1, 1, 11), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxJsSPUMonitoringNodeDescr.setStatus('current')
jnxJsSPUMonitoringFlowSessIPv4 = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 12, 1, 1, 1, 12), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxJsSPUMonitoringFlowSessIPv4.setStatus('current')
jnxJsSPUMonitoringFlowSessIPv6 = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 12, 1, 1, 1, 13), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxJsSPUMonitoringFlowSessIPv6.setStatus('current')
jnxJsSPUMonitoringCPSessIPv4 = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 12, 1, 1, 1, 14), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxJsSPUMonitoringCPSessIPv4.setStatus('current')
jnxJsSPUMonitoringCPSessIPv6 = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 12, 1, 1, 1, 15), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxJsSPUMonitoringCPSessIPv6.setStatus('current')
jnxJsSPUMonitoringCurrentTotalSession = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 12, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxJsSPUMonitoringCurrentTotalSession.setStatus('current')
jnxJsSPUMonitoringMaxTotalSession = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 12, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxJsSPUMonitoringMaxTotalSession.setStatus('current')
jnxSPUClusterObjectsTable = MibTable((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 12, 1, 4), )
if mibBuilder.loadTexts: jnxSPUClusterObjectsTable.setStatus('current')
jnxSPUClusterObjectsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 12, 1, 4, 1), ).setIndexNames((0, "JUNIPER-SRX5000-SPU-MONITORING-MIB", "jnxJsClusterMonitoringNodeIndex"))
if mibBuilder.loadTexts: jnxSPUClusterObjectsEntry.setStatus('current')
jnxJsClusterMonitoringNodeIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 12, 1, 4, 1, 1), Unsigned32())
if mibBuilder.loadTexts: jnxJsClusterMonitoringNodeIndex.setStatus('current')
jnxJsClusterMonitoringNodeDescr = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 12, 1, 4, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxJsClusterMonitoringNodeDescr.setStatus('current')
jnxJsNodeCurrentTotalSession = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 12, 1, 4, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxJsNodeCurrentTotalSession.setStatus('current')
jnxJsNodeMaxTotalSession = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 12, 1, 4, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxJsNodeMaxTotalSession.setStatus('current')
jnxJsNodeSessionCreationPerSecond = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 12, 1, 4, 1, 5), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxJsNodeSessionCreationPerSecond.setStatus('current')
jnxJsNodeSessCreationPerSecIPv4 = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 12, 1, 4, 1, 6), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxJsNodeSessCreationPerSecIPv4.setStatus('current')
jnxJsNodeSessCreationPerSecIPv6 = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 12, 1, 4, 1, 7), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxJsNodeSessCreationPerSecIPv6.setStatus('current')
jnxJsNodeCurrentTotalSessIPv4 = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 12, 1, 4, 1, 8), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxJsNodeCurrentTotalSessIPv4.setStatus('current')
jnxJsNodeCurrentTotalSessIPv6 = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 12, 1, 4, 1, 9), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxJsNodeCurrentTotalSessIPv6.setStatus('current')
jnxJsSPUMonitoringTotalSessIPv4 = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 12, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxJsSPUMonitoringTotalSessIPv4.setStatus('current')
jnxJsSPUMonitoringTotalSessIPv6 = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 12, 1, 6), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxJsSPUMonitoringTotalSessIPv6.setStatus('current')
mibBuilder.exportSymbols("JUNIPER-SRX5000-SPU-MONITORING-MIB", jnxJsSPUMonitoringCPSessIPv4=jnxJsSPUMonitoringCPSessIPv4, jnxJsSPUMonitoringMaxFlowSession=jnxJsSPUMonitoringMaxFlowSession, jnxJsNodeCurrentTotalSession=jnxJsNodeCurrentTotalSession, jnxJsSPUMonitoringMaxCPSession=jnxJsSPUMonitoringMaxCPSession, jnxSPUClusterObjectsEntry=jnxSPUClusterObjectsEntry, jnxJsNodeSessCreationPerSecIPv6=jnxJsNodeSessCreationPerSecIPv6, jnxJsSPUMonitoringTotalSessIPv4=jnxJsSPUMonitoringTotalSessIPv4, jnxJsSPUMonitoringFlowSessIPv6=jnxJsSPUMonitoringFlowSessIPv6, jnxJsNodeSessCreationPerSecIPv4=jnxJsNodeSessCreationPerSecIPv4, jnxJsSPUMonitoringFPCIndex=jnxJsSPUMonitoringFPCIndex, jnxJsSPUMonitoringSPUIndex=jnxJsSPUMonitoringSPUIndex, jnxJsClusterMonitoringNodeDescr=jnxJsClusterMonitoringNodeDescr, jnxJsSPUMonitoringCurrentFlowSession=jnxJsSPUMonitoringCurrentFlowSession, jnxJsSPUMonitoringObjectsEntry=jnxJsSPUMonitoringObjectsEntry, jnxJsNodeCurrentTotalSessIPv4=jnxJsNodeCurrentTotalSessIPv4, jnxJsClusterMonitoringNodeIndex=jnxJsClusterMonitoringNodeIndex, jnxJsSPUMonitoringNodeDescr=jnxJsSPUMonitoringNodeDescr, jnxJsSPUMonitoringObjectsTable=jnxJsSPUMonitoringObjectsTable, jnxJsSPUMonitoringFlowSessIPv4=jnxJsSPUMonitoringFlowSessIPv4, jnxJsSPUMonitoringCPUUsage=jnxJsSPUMonitoringCPUUsage, jnxJsNodeSessionCreationPerSecond=jnxJsNodeSessionCreationPerSecond, jnxJsNodeCurrentTotalSessIPv6=jnxJsNodeCurrentTotalSessIPv6, jnxJsSPUMonitoringMIB=jnxJsSPUMonitoringMIB, jnxJsSPUMonitoringCurrentCPSession=jnxJsSPUMonitoringCurrentCPSession, jnxJsSPUMonitoringCPSessIPv6=jnxJsSPUMonitoringCPSessIPv6, jnxJsSPUMonitoringNodeIndex=jnxJsSPUMonitoringNodeIndex, jnxJsSPUMonitoringIndex=jnxJsSPUMonitoringIndex, jnxSPUClusterObjectsTable=jnxSPUClusterObjectsTable, jnxJsSPUMonitoringMemoryUsage=jnxJsSPUMonitoringMemoryUsage, jnxJsSPUMonitoringMaxTotalSession=jnxJsSPUMonitoringMaxTotalSession, jnxJsSPUMonitoringTotalSessIPv6=jnxJsSPUMonitoringTotalSessIPv6, PYSNMP_MODULE_ID=jnxJsSPUMonitoringMIB, jnxJsSPUMonitoringCurrentTotalSession=jnxJsSPUMonitoringCurrentTotalSession, jnxJsNodeMaxTotalSession=jnxJsNodeMaxTotalSession)
