#
# PySNMP MIB module BDCOM-FLASH (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/BDCOM-FLASH
# Produced by pysmi-0.3.4 at Mon Apr 29 17:19:46 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ConstraintsUnion, SingleValueConstraint, ValueRangeConstraint, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ConstraintsUnion", "SingleValueConstraint", "ValueRangeConstraint", "ValueSizeConstraint")
bdlocal, = mibBuilder.importSymbols("BDCOM-SMI", "bdlocal")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
NotificationType, iso, MibScalar, MibTable, MibTableRow, MibTableColumn, Integer32, Counter64, ModuleIdentity, MibIdentifier, Gauge32, TimeTicks, ObjectIdentity, Unsigned32, IpAddress, Counter32, Bits = mibBuilder.importSymbols("SNMPv2-SMI", "NotificationType", "iso", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Integer32", "Counter64", "ModuleIdentity", "MibIdentifier", "Gauge32", "TimeTicks", "ObjectIdentity", "Unsigned32", "IpAddress", "Counter32", "Bits")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
bdlflash = MibIdentifier((1, 3, 6, 1, 4, 1, 3320, 2, 10))
bdflashSize = MibScalar((1, 3, 6, 1, 4, 1, 3320, 2, 10, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bdflashSize.setStatus('mandatory')
bdflashFree = MibScalar((1, 3, 6, 1, 4, 1, 3320, 2, 10, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bdflashFree.setStatus('mandatory')
bdflashController = MibScalar((1, 3, 6, 1, 4, 1, 3320, 2, 10, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bdflashController.setStatus('mandatory')
bdflashCard = MibScalar((1, 3, 6, 1, 4, 1, 3320, 2, 10, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bdflashCard.setStatus('mandatory')
bdflashVPP = MibScalar((1, 3, 6, 1, 4, 1, 3320, 2, 10, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("installed", 1), ("missing", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bdflashVPP.setStatus('mandatory')
bdflashErase = MibScalar((1, 3, 6, 1, 4, 1, 3320, 2, 10, 6), Integer32()).setMaxAccess("writeonly")
if mibBuilder.loadTexts: bdflashErase.setStatus('mandatory')
bdflashEraseTime = MibScalar((1, 3, 6, 1, 4, 1, 3320, 2, 10, 7), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bdflashEraseTime.setStatus('mandatory')
bdflashEraseStatus = MibScalar((1, 3, 6, 1, 4, 1, 3320, 2, 10, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("flashOpInProgress", 1), ("flashOpSuccess", 2), ("flashOpFailure", 3), ("flashReadOnly", 4), ("flashOpenFailure", 5), ("bufferAllocationFailure", 6), ("noOpAfterPowerOn", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bdflashEraseStatus.setStatus('mandatory')
bdflashToNet = MibScalar((1, 3, 6, 1, 4, 1, 3320, 2, 10, 9), DisplayString()).setMaxAccess("writeonly")
if mibBuilder.loadTexts: bdflashToNet.setStatus('mandatory')
bdflashToNetTime = MibScalar((1, 3, 6, 1, 4, 1, 3320, 2, 10, 10), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bdflashToNetTime.setStatus('mandatory')
bdflashToNetStatus = MibScalar((1, 3, 6, 1, 4, 1, 3320, 2, 10, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("flashOpInProgress", 1), ("flashOpSuccess", 2), ("flashOpFailure", 3), ("flashReadOnly", 4), ("flashOpenFailure", 5), ("bufferAllocationFailure", 6), ("noOpAfterPowerOn", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bdflashToNetStatus.setStatus('mandatory')
bdnetToFlash = MibScalar((1, 3, 6, 1, 4, 1, 3320, 2, 10, 12), DisplayString()).setMaxAccess("writeonly")
if mibBuilder.loadTexts: bdnetToFlash.setStatus('mandatory')
bdnetToFlashTime = MibScalar((1, 3, 6, 1, 4, 1, 3320, 2, 10, 13), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bdnetToFlashTime.setStatus('mandatory')
bdnetToFlashStatus = MibScalar((1, 3, 6, 1, 4, 1, 3320, 2, 10, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("flashOpInProgress", 1), ("flashOpSuccess", 2), ("flashOpFailure", 3), ("flashReadOnly", 4), ("flashOpenFailure", 5), ("bufferAllocationFailure", 6), ("noOpAfterPowerOn", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bdnetToFlashStatus.setStatus('mandatory')
bdflashStatus = MibScalar((1, 3, 6, 1, 4, 1, 3320, 2, 10, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("busy", 1), ("available", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bdflashStatus.setStatus('mandatory')
bdflashEntries = MibScalar((1, 3, 6, 1, 4, 1, 3320, 2, 10, 16), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bdflashEntries.setStatus('mandatory')
bdlflashFileDirTable = MibTable((1, 3, 6, 1, 4, 1, 3320, 2, 10, 17), )
if mibBuilder.loadTexts: bdlflashFileDirTable.setStatus('mandatory')
bdlflashFileDirEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3320, 2, 10, 17, 1), ).setIndexNames((0, "BDCOM-FLASH", "flashEntries"))
if mibBuilder.loadTexts: bdlflashFileDirEntry.setStatus('mandatory')
bdflashDirName = MibTableColumn((1, 3, 6, 1, 4, 1, 3320, 2, 10, 17, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bdflashDirName.setStatus('mandatory')
bdflashDirSize = MibTableColumn((1, 3, 6, 1, 4, 1, 3320, 2, 10, 17, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bdflashDirSize.setStatus('mandatory')
bdflashDirStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 3320, 2, 10, 17, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("valid", 1), ("deleted", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bdflashDirStatus.setStatus('mandatory')
mibBuilder.exportSymbols("BDCOM-FLASH", bdflashVPP=bdflashVPP, bdflashEntries=bdflashEntries, bdlflashFileDirEntry=bdlflashFileDirEntry, bdflashSize=bdflashSize, bdflashEraseTime=bdflashEraseTime, bdflashFree=bdflashFree, bdflashErase=bdflashErase, bdflashCard=bdflashCard, bdlflashFileDirTable=bdlflashFileDirTable, bdflashStatus=bdflashStatus, bdlflash=bdlflash, bdflashDirSize=bdflashDirSize, bdflashEraseStatus=bdflashEraseStatus, bdflashToNetStatus=bdflashToNetStatus, bdnetToFlash=bdnetToFlash, bdnetToFlashStatus=bdnetToFlashStatus, bdflashDirStatus=bdflashDirStatus, bdflashToNet=bdflashToNet, bdnetToFlashTime=bdnetToFlashTime, bdflashToNetTime=bdflashToNetTime, bdflashController=bdflashController, bdflashDirName=bdflashDirName)
