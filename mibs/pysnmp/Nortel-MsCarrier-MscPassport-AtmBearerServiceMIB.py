#
# PySNMP MIB module Nortel-MsCarrier-MscPassport-AtmBearerServiceMIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/Nortel-MsCarrier-MscPassport-AtmBearerServiceMIB
# Produced by pysmi-0.3.4 at Mon Apr 29 20:19:36 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ValueSizeConstraint, SingleValueConstraint, ValueRangeConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ValueSizeConstraint", "SingleValueConstraint", "ValueRangeConstraint", "ConstraintsIntersection")
mscAtmIfVccIndex, mscAtmIfVpcIndex, mscAtmIfVcc, mscAtmIfVptVcc, mscAtmIfVpc, mscAtmIfIndex, mscAtmIfVptVccIndex, mscAtmIfVptIndex = mibBuilder.importSymbols("Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVccIndex", "mscAtmIfVpcIndex", "mscAtmIfVcc", "mscAtmIfVptVcc", "mscAtmIfVpc", "mscAtmIfIndex", "mscAtmIfVptVccIndex", "mscAtmIfVptIndex")
StorageType, RowStatus, DisplayString = mibBuilder.importSymbols("Nortel-MsCarrier-MscPassport-StandardTextualConventionsMIB", "StorageType", "RowStatus", "DisplayString")
NonReplicated, Link = mibBuilder.importSymbols("Nortel-MsCarrier-MscPassport-TextualConventionsMIB", "NonReplicated", "Link")
mscPassportMIBs, = mibBuilder.importSymbols("Nortel-MsCarrier-MscPassport-UsefulDefinitionsMIB", "mscPassportMIBs")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
ModuleIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, NotificationType, Integer32, IpAddress, ObjectIdentity, iso, MibIdentifier, Bits, Unsigned32, Counter64, Gauge32, Counter32, TimeTicks = mibBuilder.importSymbols("SNMPv2-SMI", "ModuleIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "NotificationType", "Integer32", "IpAddress", "ObjectIdentity", "iso", "MibIdentifier", "Bits", "Unsigned32", "Counter64", "Gauge32", "Counter32", "TimeTicks")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
atmBearerServiceMIB = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 64))
mscAtmIfVpcNrp = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 4))
mscAtmIfVpcNrpRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 4, 1), )
if mibBuilder.loadTexts: mscAtmIfVpcNrpRowStatusTable.setStatus('mandatory')
mscAtmIfVpcNrpRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 4, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVpcIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmBearerServiceMIB", "mscAtmIfVpcNrpIndex"))
if mibBuilder.loadTexts: mscAtmIfVpcNrpRowStatusEntry.setStatus('mandatory')
mscAtmIfVpcNrpRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 4, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscAtmIfVpcNrpRowStatus.setStatus('mandatory')
mscAtmIfVpcNrpComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 4, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfVpcNrpComponentName.setStatus('mandatory')
mscAtmIfVpcNrpStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 4, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfVpcNrpStorageType.setStatus('mandatory')
mscAtmIfVpcNrpIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 4, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscAtmIfVpcNrpIndex.setStatus('mandatory')
mscAtmIfVpcNrpProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 4, 100), )
if mibBuilder.loadTexts: mscAtmIfVpcNrpProvTable.setStatus('mandatory')
mscAtmIfVpcNrpProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 4, 100, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVpcIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmBearerServiceMIB", "mscAtmIfVpcNrpIndex"))
if mibBuilder.loadTexts: mscAtmIfVpcNrpProvEntry.setStatus('mandatory')
mscAtmIfVpcNrpNextHop = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 4, 100, 1, 10), Link()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscAtmIfVpcNrpNextHop.setStatus('mandatory')
mscAtmIfVpcNrpConnectionPointType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 4, 100, 1, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 4))).clone(namedValues=NamedValues(("segmentEndPoint", 1), ("connectingPoint", 2), ("autoConfigure", 4))).clone('autoConfigure')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscAtmIfVpcNrpConnectionPointType.setStatus('obsolete')
mscAtmIfVpcNrpOamSegmentBoundary = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 4, 100, 1, 30), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("no", 0), ("yes", 1), ("sameAsInterface", 2))).clone('sameAsInterface')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscAtmIfVpcNrpOamSegmentBoundary.setStatus('mandatory')
mscAtmIfVpcNrpTxAal5PartialPacketDiscard = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 4, 100, 1, 31), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscAtmIfVpcNrpTxAal5PartialPacketDiscard.setStatus('obsolete')
mscAtmIfVpcNrpRxAal5PartialPacketDiscard = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 4, 100, 1, 32), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1), ("sameAsTx", 2))).clone('sameAsTx')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscAtmIfVpcNrpRxAal5PartialPacketDiscard.setStatus('obsolete')
mscAtmIfVpcNrpBandwidthElastic = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 4, 100, 1, 33), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1))).clone('no')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscAtmIfVpcNrpBandwidthElastic.setStatus('mandatory')
mscAtmIfVpcNrpOverrideHoldingPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 4, 100, 1, 34), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 6))).clone(namedValues=NamedValues(("n0", 0), ("n1", 1), ("n2", 2), ("n3", 3), ("n4", 4), ("noOverride", 6))).clone('noOverride')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscAtmIfVpcNrpOverrideHoldingPriority.setStatus('mandatory')
mscAtmIfVpcMnrp = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 12))
mscAtmIfVpcMnrpRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 12, 1), )
if mibBuilder.loadTexts: mscAtmIfVpcMnrpRowStatusTable.setStatus('mandatory')
mscAtmIfVpcMnrpRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 12, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVpcIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmBearerServiceMIB", "mscAtmIfVpcMnrpIndex"))
if mibBuilder.loadTexts: mscAtmIfVpcMnrpRowStatusEntry.setStatus('mandatory')
mscAtmIfVpcMnrpRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 12, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscAtmIfVpcMnrpRowStatus.setStatus('mandatory')
mscAtmIfVpcMnrpComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 12, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfVpcMnrpComponentName.setStatus('mandatory')
mscAtmIfVpcMnrpStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 12, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfVpcMnrpStorageType.setStatus('mandatory')
mscAtmIfVpcMnrpIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 12, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscAtmIfVpcMnrpIndex.setStatus('mandatory')
mscAtmIfVpcMnrpProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 12, 101), )
if mibBuilder.loadTexts: mscAtmIfVpcMnrpProvTable.setStatus('mandatory')
mscAtmIfVpcMnrpProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 12, 101, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVpcIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmBearerServiceMIB", "mscAtmIfVpcMnrpIndex"))
if mibBuilder.loadTexts: mscAtmIfVpcMnrpProvEntry.setStatus('mandatory')
mscAtmIfVpcMnrpOamSegmentBoundary = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 12, 101, 1, 30), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("no", 0), ("yes", 1), ("sameAsInterface", 2))).clone('sameAsInterface')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscAtmIfVpcMnrpOamSegmentBoundary.setStatus('mandatory')
mscAtmIfVpcMnrpBandwidthElastic = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 12, 101, 1, 33), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1))).clone('no')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscAtmIfVpcMnrpBandwidthElastic.setStatus('mandatory')
mscAtmIfVpcMnrpOverrideHoldingPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 12, 101, 1, 34), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 6))).clone(namedValues=NamedValues(("n0", 0), ("n1", 1), ("n2", 2), ("n3", 3), ("n4", 4), ("noOverride", 6))).clone('noOverride')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscAtmIfVpcMnrpOverrideHoldingPriority.setStatus('mandatory')
mscAtmIfVpcMnrpNextHopsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 12, 658), )
if mibBuilder.loadTexts: mscAtmIfVpcMnrpNextHopsTable.setStatus('mandatory')
mscAtmIfVpcMnrpNextHopsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 12, 658, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVpcIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmBearerServiceMIB", "mscAtmIfVpcMnrpIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmBearerServiceMIB", "mscAtmIfVpcMnrpNextHopsValue"))
if mibBuilder.loadTexts: mscAtmIfVpcMnrpNextHopsEntry.setStatus('mandatory')
mscAtmIfVpcMnrpNextHopsValue = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 12, 658, 1, 1), Link()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscAtmIfVpcMnrpNextHopsValue.setStatus('mandatory')
mscAtmIfVpcMnrpNextHopsRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 12, 658, 1, 2), RowStatus()).setMaxAccess("writeonly")
if mibBuilder.loadTexts: mscAtmIfVpcMnrpNextHopsRowStatus.setStatus('mandatory')
mscAtmIfVccNrp = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 4))
mscAtmIfVccNrpRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 4, 1), )
if mibBuilder.loadTexts: mscAtmIfVccNrpRowStatusTable.setStatus('mandatory')
mscAtmIfVccNrpRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 4, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVccIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmBearerServiceMIB", "mscAtmIfVccNrpIndex"))
if mibBuilder.loadTexts: mscAtmIfVccNrpRowStatusEntry.setStatus('mandatory')
mscAtmIfVccNrpRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 4, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscAtmIfVccNrpRowStatus.setStatus('mandatory')
mscAtmIfVccNrpComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 4, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfVccNrpComponentName.setStatus('mandatory')
mscAtmIfVccNrpStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 4, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfVccNrpStorageType.setStatus('mandatory')
mscAtmIfVccNrpIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 4, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscAtmIfVccNrpIndex.setStatus('mandatory')
mscAtmIfVccNrpProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 4, 100), )
if mibBuilder.loadTexts: mscAtmIfVccNrpProvTable.setStatus('mandatory')
mscAtmIfVccNrpProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 4, 100, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVccIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmBearerServiceMIB", "mscAtmIfVccNrpIndex"))
if mibBuilder.loadTexts: mscAtmIfVccNrpProvEntry.setStatus('mandatory')
mscAtmIfVccNrpNextHop = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 4, 100, 1, 10), Link()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscAtmIfVccNrpNextHop.setStatus('mandatory')
mscAtmIfVccNrpConnectionPointType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 4, 100, 1, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 4))).clone(namedValues=NamedValues(("segmentEndPoint", 1), ("connectingPoint", 2), ("autoConfigure", 4))).clone('autoConfigure')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscAtmIfVccNrpConnectionPointType.setStatus('obsolete')
mscAtmIfVccNrpOamSegmentBoundary = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 4, 100, 1, 30), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("no", 0), ("yes", 1), ("sameAsInterface", 2))).clone('sameAsInterface')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscAtmIfVccNrpOamSegmentBoundary.setStatus('mandatory')
mscAtmIfVccNrpTxAal5PartialPacketDiscard = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 4, 100, 1, 31), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscAtmIfVccNrpTxAal5PartialPacketDiscard.setStatus('obsolete')
mscAtmIfVccNrpRxAal5PartialPacketDiscard = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 4, 100, 1, 32), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1), ("sameAsTx", 2))).clone('sameAsTx')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscAtmIfVccNrpRxAal5PartialPacketDiscard.setStatus('obsolete')
mscAtmIfVccNrpBandwidthElastic = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 4, 100, 1, 33), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1))).clone('no')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscAtmIfVccNrpBandwidthElastic.setStatus('mandatory')
mscAtmIfVccNrpOverrideHoldingPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 4, 100, 1, 34), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 6))).clone(namedValues=NamedValues(("n0", 0), ("n1", 1), ("n2", 2), ("n3", 3), ("n4", 4), ("noOverride", 6))).clone('noOverride')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscAtmIfVccNrpOverrideHoldingPriority.setStatus('mandatory')
mscAtmIfVccMnrp = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 13))
mscAtmIfVccMnrpRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 13, 1), )
if mibBuilder.loadTexts: mscAtmIfVccMnrpRowStatusTable.setStatus('mandatory')
mscAtmIfVccMnrpRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 13, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVccIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmBearerServiceMIB", "mscAtmIfVccMnrpIndex"))
if mibBuilder.loadTexts: mscAtmIfVccMnrpRowStatusEntry.setStatus('mandatory')
mscAtmIfVccMnrpRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 13, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscAtmIfVccMnrpRowStatus.setStatus('mandatory')
mscAtmIfVccMnrpComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 13, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfVccMnrpComponentName.setStatus('mandatory')
mscAtmIfVccMnrpStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 13, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfVccMnrpStorageType.setStatus('mandatory')
mscAtmIfVccMnrpIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 13, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscAtmIfVccMnrpIndex.setStatus('mandatory')
mscAtmIfVccMnrpProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 13, 101), )
if mibBuilder.loadTexts: mscAtmIfVccMnrpProvTable.setStatus('mandatory')
mscAtmIfVccMnrpProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 13, 101, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVccIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmBearerServiceMIB", "mscAtmIfVccMnrpIndex"))
if mibBuilder.loadTexts: mscAtmIfVccMnrpProvEntry.setStatus('mandatory')
mscAtmIfVccMnrpOamSegmentBoundary = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 13, 101, 1, 30), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("no", 0), ("yes", 1), ("sameAsInterface", 2))).clone('sameAsInterface')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscAtmIfVccMnrpOamSegmentBoundary.setStatus('mandatory')
mscAtmIfVccMnrpBandwidthElastic = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 13, 101, 1, 33), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1))).clone('no')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscAtmIfVccMnrpBandwidthElastic.setStatus('mandatory')
mscAtmIfVccMnrpOverrideHoldingPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 13, 101, 1, 34), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 6))).clone(namedValues=NamedValues(("n0", 0), ("n1", 1), ("n2", 2), ("n3", 3), ("n4", 4), ("noOverride", 6))).clone('noOverride')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscAtmIfVccMnrpOverrideHoldingPriority.setStatus('mandatory')
mscAtmIfVccMnrpNextHopsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 13, 658), )
if mibBuilder.loadTexts: mscAtmIfVccMnrpNextHopsTable.setStatus('mandatory')
mscAtmIfVccMnrpNextHopsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 13, 658, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVccIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmBearerServiceMIB", "mscAtmIfVccMnrpIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmBearerServiceMIB", "mscAtmIfVccMnrpNextHopsValue"))
if mibBuilder.loadTexts: mscAtmIfVccMnrpNextHopsEntry.setStatus('mandatory')
mscAtmIfVccMnrpNextHopsValue = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 13, 658, 1, 1), Link()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscAtmIfVccMnrpNextHopsValue.setStatus('mandatory')
mscAtmIfVccMnrpNextHopsRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 13, 658, 1, 2), RowStatus()).setMaxAccess("writeonly")
if mibBuilder.loadTexts: mscAtmIfVccMnrpNextHopsRowStatus.setStatus('mandatory')
mscAtmIfVptVccNrp = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 4))
mscAtmIfVptVccNrpRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 4, 1), )
if mibBuilder.loadTexts: mscAtmIfVptVccNrpRowStatusTable.setStatus('mandatory')
mscAtmIfVptVccNrpRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 4, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptVccIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmBearerServiceMIB", "mscAtmIfVptVccNrpIndex"))
if mibBuilder.loadTexts: mscAtmIfVptVccNrpRowStatusEntry.setStatus('mandatory')
mscAtmIfVptVccNrpRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 4, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscAtmIfVptVccNrpRowStatus.setStatus('mandatory')
mscAtmIfVptVccNrpComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 4, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfVptVccNrpComponentName.setStatus('mandatory')
mscAtmIfVptVccNrpStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 4, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfVptVccNrpStorageType.setStatus('mandatory')
mscAtmIfVptVccNrpIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 4, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscAtmIfVptVccNrpIndex.setStatus('mandatory')
mscAtmIfVptVccNrpProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 4, 100), )
if mibBuilder.loadTexts: mscAtmIfVptVccNrpProvTable.setStatus('mandatory')
mscAtmIfVptVccNrpProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 4, 100, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptVccIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmBearerServiceMIB", "mscAtmIfVptVccNrpIndex"))
if mibBuilder.loadTexts: mscAtmIfVptVccNrpProvEntry.setStatus('mandatory')
mscAtmIfVptVccNrpNextHop = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 4, 100, 1, 10), Link()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscAtmIfVptVccNrpNextHop.setStatus('mandatory')
mscAtmIfVptVccNrpConnectionPointType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 4, 100, 1, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 4))).clone(namedValues=NamedValues(("segmentEndPoint", 1), ("connectingPoint", 2), ("autoConfigure", 4))).clone('autoConfigure')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscAtmIfVptVccNrpConnectionPointType.setStatus('obsolete')
mscAtmIfVptVccNrpOamSegmentBoundary = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 4, 100, 1, 30), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("no", 0), ("yes", 1), ("sameAsInterface", 2))).clone('sameAsInterface')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscAtmIfVptVccNrpOamSegmentBoundary.setStatus('mandatory')
mscAtmIfVptVccNrpTxAal5PartialPacketDiscard = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 4, 100, 1, 31), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscAtmIfVptVccNrpTxAal5PartialPacketDiscard.setStatus('obsolete')
mscAtmIfVptVccNrpRxAal5PartialPacketDiscard = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 4, 100, 1, 32), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1), ("sameAsTx", 2))).clone('sameAsTx')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscAtmIfVptVccNrpRxAal5PartialPacketDiscard.setStatus('obsolete')
mscAtmIfVptVccNrpBandwidthElastic = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 4, 100, 1, 33), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1))).clone('no')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscAtmIfVptVccNrpBandwidthElastic.setStatus('mandatory')
mscAtmIfVptVccNrpOverrideHoldingPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 4, 100, 1, 34), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 6))).clone(namedValues=NamedValues(("n0", 0), ("n1", 1), ("n2", 2), ("n3", 3), ("n4", 4), ("noOverride", 6))).clone('noOverride')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscAtmIfVptVccNrpOverrideHoldingPriority.setStatus('mandatory')
mscAtmIfVptVccMnrp = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 13))
mscAtmIfVptVccMnrpRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 13, 1), )
if mibBuilder.loadTexts: mscAtmIfVptVccMnrpRowStatusTable.setStatus('mandatory')
mscAtmIfVptVccMnrpRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 13, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptVccIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmBearerServiceMIB", "mscAtmIfVptVccMnrpIndex"))
if mibBuilder.loadTexts: mscAtmIfVptVccMnrpRowStatusEntry.setStatus('mandatory')
mscAtmIfVptVccMnrpRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 13, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscAtmIfVptVccMnrpRowStatus.setStatus('mandatory')
mscAtmIfVptVccMnrpComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 13, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfVptVccMnrpComponentName.setStatus('mandatory')
mscAtmIfVptVccMnrpStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 13, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfVptVccMnrpStorageType.setStatus('mandatory')
mscAtmIfVptVccMnrpIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 13, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscAtmIfVptVccMnrpIndex.setStatus('mandatory')
mscAtmIfVptVccMnrpProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 13, 101), )
if mibBuilder.loadTexts: mscAtmIfVptVccMnrpProvTable.setStatus('mandatory')
mscAtmIfVptVccMnrpProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 13, 101, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptVccIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmBearerServiceMIB", "mscAtmIfVptVccMnrpIndex"))
if mibBuilder.loadTexts: mscAtmIfVptVccMnrpProvEntry.setStatus('mandatory')
mscAtmIfVptVccMnrpOamSegmentBoundary = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 13, 101, 1, 30), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("no", 0), ("yes", 1), ("sameAsInterface", 2))).clone('sameAsInterface')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscAtmIfVptVccMnrpOamSegmentBoundary.setStatus('mandatory')
mscAtmIfVptVccMnrpBandwidthElastic = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 13, 101, 1, 33), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1))).clone('no')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscAtmIfVptVccMnrpBandwidthElastic.setStatus('mandatory')
mscAtmIfVptVccMnrpOverrideHoldingPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 13, 101, 1, 34), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 6))).clone(namedValues=NamedValues(("n0", 0), ("n1", 1), ("n2", 2), ("n3", 3), ("n4", 4), ("noOverride", 6))).clone('noOverride')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscAtmIfVptVccMnrpOverrideHoldingPriority.setStatus('mandatory')
mscAtmIfVptVccMnrpNextHopsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 13, 658), )
if mibBuilder.loadTexts: mscAtmIfVptVccMnrpNextHopsTable.setStatus('mandatory')
mscAtmIfVptVccMnrpNextHopsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 13, 658, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptVccIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmBearerServiceMIB", "mscAtmIfVptVccMnrpIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmBearerServiceMIB", "mscAtmIfVptVccMnrpNextHopsValue"))
if mibBuilder.loadTexts: mscAtmIfVptVccMnrpNextHopsEntry.setStatus('mandatory')
mscAtmIfVptVccMnrpNextHopsValue = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 13, 658, 1, 1), Link()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscAtmIfVptVccMnrpNextHopsValue.setStatus('mandatory')
mscAtmIfVptVccMnrpNextHopsRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 13, 658, 1, 2), RowStatus()).setMaxAccess("writeonly")
if mibBuilder.loadTexts: mscAtmIfVptVccMnrpNextHopsRowStatus.setStatus('mandatory')
atmBearerServiceGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 64, 1))
atmBearerServiceGroupCA = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 64, 1, 1))
atmBearerServiceGroupCA02 = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 64, 1, 1, 3))
atmBearerServiceGroupCA02A = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 64, 1, 1, 3, 2))
atmBearerServiceCapabilities = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 64, 3))
atmBearerServiceCapabilitiesCA = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 64, 3, 1))
atmBearerServiceCapabilitiesCA02 = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 64, 3, 1, 3))
atmBearerServiceCapabilitiesCA02A = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 64, 3, 1, 3, 2))
mibBuilder.exportSymbols("Nortel-MsCarrier-MscPassport-AtmBearerServiceMIB", mscAtmIfVptVccMnrpComponentName=mscAtmIfVptVccMnrpComponentName, mscAtmIfVptVccNrp=mscAtmIfVptVccNrp, mscAtmIfVpcMnrpRowStatusTable=mscAtmIfVpcMnrpRowStatusTable, mscAtmIfVccNrpIndex=mscAtmIfVccNrpIndex, mscAtmIfVptVccNrpRxAal5PartialPacketDiscard=mscAtmIfVptVccNrpRxAal5PartialPacketDiscard, mscAtmIfVptVccMnrpIndex=mscAtmIfVptVccMnrpIndex, mscAtmIfVpcMnrpComponentName=mscAtmIfVpcMnrpComponentName, mscAtmIfVptVccNrpRowStatusTable=mscAtmIfVptVccNrpRowStatusTable, mscAtmIfVpcNrpStorageType=mscAtmIfVpcNrpStorageType, mscAtmIfVptVccNrpRowStatus=mscAtmIfVptVccNrpRowStatus, mscAtmIfVpcMnrp=mscAtmIfVpcMnrp, mscAtmIfVccMnrpProvEntry=mscAtmIfVccMnrpProvEntry, mscAtmIfVpcMnrpIndex=mscAtmIfVpcMnrpIndex, mscAtmIfVptVccMnrpStorageType=mscAtmIfVptVccMnrpStorageType, mscAtmIfVptVccNrpIndex=mscAtmIfVptVccNrpIndex, mscAtmIfVptVccNrpStorageType=mscAtmIfVptVccNrpStorageType, mscAtmIfVpcNrpOamSegmentBoundary=mscAtmIfVpcNrpOamSegmentBoundary, mscAtmIfVccMnrpRowStatusTable=mscAtmIfVccMnrpRowStatusTable, mscAtmIfVpcNrpComponentName=mscAtmIfVpcNrpComponentName, atmBearerServiceGroup=atmBearerServiceGroup, mscAtmIfVpcNrpOverrideHoldingPriority=mscAtmIfVpcNrpOverrideHoldingPriority, mscAtmIfVccMnrp=mscAtmIfVccMnrp, mscAtmIfVccMnrpProvTable=mscAtmIfVccMnrpProvTable, mscAtmIfVptVccNrpProvTable=mscAtmIfVptVccNrpProvTable, mscAtmIfVpcNrpProvEntry=mscAtmIfVpcNrpProvEntry, mscAtmIfVccMnrpStorageType=mscAtmIfVccMnrpStorageType, mscAtmIfVpcNrp=mscAtmIfVpcNrp, mscAtmIfVpcNrpIndex=mscAtmIfVpcNrpIndex, mscAtmIfVccNrpProvEntry=mscAtmIfVccNrpProvEntry, mscAtmIfVptVccNrpTxAal5PartialPacketDiscard=mscAtmIfVptVccNrpTxAal5PartialPacketDiscard, mscAtmIfVccNrpOverrideHoldingPriority=mscAtmIfVccNrpOverrideHoldingPriority, mscAtmIfVptVccMnrpRowStatusEntry=mscAtmIfVptVccMnrpRowStatusEntry, mscAtmIfVptVccMnrpProvTable=mscAtmIfVptVccMnrpProvTable, atmBearerServiceCapabilitiesCA02=atmBearerServiceCapabilitiesCA02, mscAtmIfVpcNrpRowStatusTable=mscAtmIfVpcNrpRowStatusTable, mscAtmIfVptVccMnrpBandwidthElastic=mscAtmIfVptVccMnrpBandwidthElastic, mscAtmIfVpcMnrpOverrideHoldingPriority=mscAtmIfVpcMnrpOverrideHoldingPriority, atmBearerServiceGroupCA02=atmBearerServiceGroupCA02, mscAtmIfVptVccMnrpNextHopsTable=mscAtmIfVptVccMnrpNextHopsTable, mscAtmIfVptVccMnrpOamSegmentBoundary=mscAtmIfVptVccMnrpOamSegmentBoundary, mscAtmIfVpcNrpTxAal5PartialPacketDiscard=mscAtmIfVpcNrpTxAal5PartialPacketDiscard, atmBearerServiceCapabilitiesCA=atmBearerServiceCapabilitiesCA, mscAtmIfVpcMnrpOamSegmentBoundary=mscAtmIfVpcMnrpOamSegmentBoundary, mscAtmIfVptVccNrpBandwidthElastic=mscAtmIfVptVccNrpBandwidthElastic, mscAtmIfVpcNrpRowStatus=mscAtmIfVpcNrpRowStatus, mscAtmIfVpcMnrpNextHopsEntry=mscAtmIfVpcMnrpNextHopsEntry, mscAtmIfVccMnrpRowStatusEntry=mscAtmIfVccMnrpRowStatusEntry, mscAtmIfVccMnrpRowStatus=mscAtmIfVccMnrpRowStatus, mscAtmIfVptVccNrpOamSegmentBoundary=mscAtmIfVptVccNrpOamSegmentBoundary, mscAtmIfVccMnrpIndex=mscAtmIfVccMnrpIndex, mscAtmIfVptVccMnrp=mscAtmIfVptVccMnrp, mscAtmIfVptVccMnrpRowStatus=mscAtmIfVptVccMnrpRowStatus, mscAtmIfVccMnrpNextHopsTable=mscAtmIfVccMnrpNextHopsTable, mscAtmIfVccMnrpBandwidthElastic=mscAtmIfVccMnrpBandwidthElastic, mscAtmIfVpcMnrpRowStatus=mscAtmIfVpcMnrpRowStatus, mscAtmIfVccNrpProvTable=mscAtmIfVccNrpProvTable, mscAtmIfVccNrpRowStatus=mscAtmIfVccNrpRowStatus, mscAtmIfVpcNrpProvTable=mscAtmIfVpcNrpProvTable, mscAtmIfVptVccMnrpOverrideHoldingPriority=mscAtmIfVptVccMnrpOverrideHoldingPriority, mscAtmIfVccNrpConnectionPointType=mscAtmIfVccNrpConnectionPointType, mscAtmIfVccNrp=mscAtmIfVccNrp, mscAtmIfVccMnrpNextHopsEntry=mscAtmIfVccMnrpNextHopsEntry, atmBearerServiceGroupCA02A=atmBearerServiceGroupCA02A, mscAtmIfVpcNrpNextHop=mscAtmIfVpcNrpNextHop, mscAtmIfVpcNrpRowStatusEntry=mscAtmIfVpcNrpRowStatusEntry, mscAtmIfVptVccMnrpNextHopsValue=mscAtmIfVptVccMnrpNextHopsValue, mscAtmIfVccNrpOamSegmentBoundary=mscAtmIfVccNrpOamSegmentBoundary, mscAtmIfVptVccNrpOverrideHoldingPriority=mscAtmIfVptVccNrpOverrideHoldingPriority, mscAtmIfVccMnrpNextHopsValue=mscAtmIfVccMnrpNextHopsValue, atmBearerServiceCapabilitiesCA02A=atmBearerServiceCapabilitiesCA02A, mscAtmIfVpcNrpRxAal5PartialPacketDiscard=mscAtmIfVpcNrpRxAal5PartialPacketDiscard, mscAtmIfVpcMnrpNextHopsTable=mscAtmIfVpcMnrpNextHopsTable, mscAtmIfVccMnrpOamSegmentBoundary=mscAtmIfVccMnrpOamSegmentBoundary, mscAtmIfVpcMnrpProvEntry=mscAtmIfVpcMnrpProvEntry, mscAtmIfVpcMnrpNextHopsValue=mscAtmIfVpcMnrpNextHopsValue, mscAtmIfVccNrpTxAal5PartialPacketDiscard=mscAtmIfVccNrpTxAal5PartialPacketDiscard, mscAtmIfVccNrpRowStatusTable=mscAtmIfVccNrpRowStatusTable, mscAtmIfVptVccMnrpNextHopsEntry=mscAtmIfVptVccMnrpNextHopsEntry, atmBearerServiceCapabilities=atmBearerServiceCapabilities, mscAtmIfVccMnrpNextHopsRowStatus=mscAtmIfVccMnrpNextHopsRowStatus, mscAtmIfVccMnrpComponentName=mscAtmIfVccMnrpComponentName, mscAtmIfVpcNrpConnectionPointType=mscAtmIfVpcNrpConnectionPointType, mscAtmIfVptVccNrpProvEntry=mscAtmIfVptVccNrpProvEntry, mscAtmIfVpcMnrpBandwidthElastic=mscAtmIfVpcMnrpBandwidthElastic, mscAtmIfVptVccMnrpNextHopsRowStatus=mscAtmIfVptVccMnrpNextHopsRowStatus, mscAtmIfVptVccNrpConnectionPointType=mscAtmIfVptVccNrpConnectionPointType, mscAtmIfVccNrpRowStatusEntry=mscAtmIfVccNrpRowStatusEntry, mscAtmIfVptVccNrpComponentName=mscAtmIfVptVccNrpComponentName, atmBearerServiceGroupCA=atmBearerServiceGroupCA, mscAtmIfVpcMnrpRowStatusEntry=mscAtmIfVpcMnrpRowStatusEntry, mscAtmIfVccNrpRxAal5PartialPacketDiscard=mscAtmIfVccNrpRxAal5PartialPacketDiscard, mscAtmIfVptVccMnrpRowStatusTable=mscAtmIfVptVccMnrpRowStatusTable, mscAtmIfVccNrpNextHop=mscAtmIfVccNrpNextHop, mscAtmIfVccNrpBandwidthElastic=mscAtmIfVccNrpBandwidthElastic, mscAtmIfVpcMnrpStorageType=mscAtmIfVpcMnrpStorageType, mscAtmIfVptVccNrpNextHop=mscAtmIfVptVccNrpNextHop, mscAtmIfVccNrpComponentName=mscAtmIfVccNrpComponentName, mscAtmIfVccNrpStorageType=mscAtmIfVccNrpStorageType, mscAtmIfVptVccNrpRowStatusEntry=mscAtmIfVptVccNrpRowStatusEntry, mscAtmIfVpcNrpBandwidthElastic=mscAtmIfVpcNrpBandwidthElastic, mscAtmIfVpcMnrpProvTable=mscAtmIfVpcMnrpProvTable, mscAtmIfVccMnrpOverrideHoldingPriority=mscAtmIfVccMnrpOverrideHoldingPriority, mscAtmIfVpcMnrpNextHopsRowStatus=mscAtmIfVpcMnrpNextHopsRowStatus, atmBearerServiceMIB=atmBearerServiceMIB, mscAtmIfVptVccMnrpProvEntry=mscAtmIfVptVccMnrpProvEntry)
