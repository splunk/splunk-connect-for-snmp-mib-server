#
# PySNMP MIB module CISCO-IP-ADDRESS-POOL-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CISCO-IP-ADDRESS-POOL-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:44:51 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ValueRangeConstraint, ValueSizeConstraint, SingleValueConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ValueRangeConstraint", "ValueSizeConstraint", "SingleValueConstraint", "ConstraintsUnion")
IpAddressPoolGroupNameOrNull, IpAddrPoolInstanceIdentifierOrZero, IpAddressPoolNameOrNull, IpAddressPoolGroupName, IpAddrPoolInstanceIdentifier, IpAddressPoolThresholdUnits = mibBuilder.importSymbols("CISCO-IP-ADDRESS-POOL-TC-MIB", "IpAddressPoolGroupNameOrNull", "IpAddrPoolInstanceIdentifierOrZero", "IpAddressPoolNameOrNull", "IpAddressPoolGroupName", "IpAddrPoolInstanceIdentifier", "IpAddressPoolThresholdUnits")
ciscoMgmt, = mibBuilder.importSymbols("CISCO-SMI", "ciscoMgmt")
InetAddressType, InetAddress, InetAddressPrefixLength = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddressType", "InetAddress", "InetAddressPrefixLength")
ObjectGroup, ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "ModuleCompliance", "NotificationGroup")
Unsigned32, Counter64, Gauge32, IpAddress, NotificationType, ObjectIdentity, TimeTicks, MibIdentifier, Counter32, MibScalar, MibTable, MibTableRow, MibTableColumn, Bits, ModuleIdentity, iso, Integer32 = mibBuilder.importSymbols("SNMPv2-SMI", "Unsigned32", "Counter64", "Gauge32", "IpAddress", "NotificationType", "ObjectIdentity", "TimeTicks", "MibIdentifier", "Counter32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Bits", "ModuleIdentity", "iso", "Integer32")
StorageType, RowStatus, TimeStamp, TextualConvention, RowPointer, DisplayString, TruthValue = mibBuilder.importSymbols("SNMPv2-TC", "StorageType", "RowStatus", "TimeStamp", "TextualConvention", "RowPointer", "DisplayString", "TruthValue")
ciscoIpAddressPoolMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 9, 9, 748))
ciscoIpAddressPoolMIB.setRevisions(('2010-02-02 00:00',))
if mibBuilder.loadTexts: ciscoIpAddressPoolMIB.setLastUpdated('201006070000Z')
if mibBuilder.loadTexts: ciscoIpAddressPoolMIB.setOrganization('Cisco Systems, Inc.')
ciscoIpAddressPoolMIBNotifs = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 748, 0))
ciscoIpAddressPoolMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 748, 1))
ciscoIpAddressPoolMIBConform = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 748, 2))
ciapGlobal = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 748, 1, 1))
ciapPools = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 748, 1, 2))
ciapPoolGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 748, 1, 3))
ciapAllocatedAddresses = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 748, 1, 4))
ciapNotifyData = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 748, 1, 5))
ciapGlobalNotifyEnable = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 748, 1, 1, 1), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ciapGlobalNotifyEnable.setStatus('current')
ciapGlobalThresholdUnits = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 748, 1, 1, 2), IpAddressPoolThresholdUnits().clone('absolute')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ciapGlobalThresholdUnits.setStatus('current')
ciapGlobalThresholdRising = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 748, 1, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ciapGlobalThresholdRising.setStatus('current')
ciapGlobalThresholdFalling = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 748, 1, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ciapGlobalThresholdFalling.setStatus('current')
ciapPoolIdNext = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 748, 1, 2, 1), IpAddrPoolInstanceIdentifierOrZero()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciapPoolIdNext.setStatus('current')
ciapPoolTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 748, 1, 2, 2), )
if mibBuilder.loadTexts: ciapPoolTable.setStatus('current')
ciapPoolEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 748, 1, 2, 2, 1), ).setIndexNames((0, "CISCO-IP-ADDRESS-POOL-MIB", "ciapPoolId"))
if mibBuilder.loadTexts: ciapPoolEntry.setStatus('current')
ciapPoolId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 748, 1, 2, 2, 1, 1), IpAddrPoolInstanceIdentifier())
if mibBuilder.loadTexts: ciapPoolId.setStatus('current')
ciapPoolStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 748, 1, 2, 2, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ciapPoolStatus.setStatus('current')
ciapPoolStorage = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 748, 1, 2, 2, 1, 3), StorageType().clone('volatile')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ciapPoolStorage.setStatus('current')
ciapPoolName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 748, 1, 2, 2, 1, 4), IpAddressPoolNameOrNull()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ciapPoolName.setStatus('current')
ciapPoolType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 748, 1, 2, 2, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("other", 1), ("shared", 2), ("local", 3), ("dhcp", 4))).clone('shared')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ciapPoolType.setStatus('current')
ciapPoolContainedIn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 748, 1, 2, 2, 1, 6), IpAddressPoolGroupNameOrNull()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ciapPoolContainedIn.setStatus('current')
ciapPoolThresholdUnits = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 748, 1, 2, 2, 1, 7), IpAddressPoolThresholdUnits()).setUnits('IP addresses').setMaxAccess("readcreate")
if mibBuilder.loadTexts: ciapPoolThresholdUnits.setStatus('current')
ciapPoolThresholdRising = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 748, 1, 2, 2, 1, 8), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ciapPoolThresholdRising.setStatus('current')
ciapPoolThresholdFalling = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 748, 1, 2, 2, 1, 9), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ciapPoolThresholdFalling.setStatus('current')
ciapPoolAddressesInUse = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 748, 1, 2, 2, 1, 10), Gauge32()).setUnits('IP addresses/prefixes').setMaxAccess("readcreate")
if mibBuilder.loadTexts: ciapPoolAddressesInUse.setStatus('current')
ciapPoolAddressesFree = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 748, 1, 2, 2, 1, 11), Gauge32()).setUnits('IP addresses/prefixes').setMaxAccess("readcreate")
if mibBuilder.loadTexts: ciapPoolAddressesFree.setStatus('current')
ciapPoolTableChanged = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 748, 1, 2, 3), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciapPoolTableChanged.setStatus('current')
ciapRangeTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 748, 1, 2, 4), )
if mibBuilder.loadTexts: ciapRangeTable.setStatus('current')
ciapRangeEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 748, 1, 2, 4, 1), ).setIndexNames((0, "CISCO-IP-ADDRESS-POOL-MIB", "ciapPoolId"), (0, "CISCO-IP-ADDRESS-POOL-MIB", "ciapRangeAddressType"), (0, "CISCO-IP-ADDRESS-POOL-MIB", "ciapRangeAddressLower"))
if mibBuilder.loadTexts: ciapRangeEntry.setStatus('current')
ciapRangeAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 748, 1, 2, 4, 1, 1), InetAddressType())
if mibBuilder.loadTexts: ciapRangeAddressType.setStatus('current')
ciapRangeAddressLower = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 748, 1, 2, 4, 1, 2), InetAddress().subtype(subtypeSpec=ValueSizeConstraint(4, 16)))
if mibBuilder.loadTexts: ciapRangeAddressLower.setStatus('current')
ciapRangeStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 748, 1, 2, 4, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ciapRangeStatus.setStatus('current')
ciapRangeStorage = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 748, 1, 2, 4, 1, 4), StorageType().clone('volatile')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ciapRangeStorage.setStatus('current')
ciapRangeAddressUpper = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 748, 1, 2, 4, 1, 5), InetAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ciapRangeAddressUpper.setStatus('current')
ciapRangeCacheSize = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 748, 1, 2, 4, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setUnits('IP addresses').setMaxAccess("readcreate")
if mibBuilder.loadTexts: ciapRangeCacheSize.setStatus('current')
ciapRangeRecycleDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 748, 1, 2, 4, 1, 7), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: ciapRangeRecycleDelay.setStatus('current')
ciapRangePriority = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 748, 1, 2, 4, 1, 8), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ciapRangePriority.setStatus('current')
ciapRangeThresholdUnits = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 748, 1, 2, 4, 1, 9), IpAddressPoolThresholdUnits()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ciapRangeThresholdUnits.setStatus('current')
ciapRangeThresholdRising = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 748, 1, 2, 4, 1, 10), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ciapRangeThresholdRising.setStatus('current')
ciapRangeThresholdFalling = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 748, 1, 2, 4, 1, 11), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ciapRangeThresholdFalling.setStatus('current')
ciapRangeAddressesInUse = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 748, 1, 2, 4, 1, 12), Gauge32()).setUnits('IP addresses').setMaxAccess("readonly")
if mibBuilder.loadTexts: ciapRangeAddressesInUse.setStatus('current')
ciapRangeAddressesFree = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 748, 1, 2, 4, 1, 13), Gauge32()).setUnits('IP addresses').setMaxAccess("readonly")
if mibBuilder.loadTexts: ciapRangeAddressesFree.setStatus('current')
ciapRangeTableChanged = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 748, 1, 2, 5), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciapRangeTableChanged.setStatus('current')
ciapPrefixTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 748, 1, 2, 6), )
if mibBuilder.loadTexts: ciapPrefixTable.setStatus('current')
ciapPrefixEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 748, 1, 2, 6, 1), ).setIndexNames((0, "CISCO-IP-ADDRESS-POOL-MIB", "ciapPoolId"), (0, "CISCO-IP-ADDRESS-POOL-MIB", "ciapPrefixType"), (0, "CISCO-IP-ADDRESS-POOL-MIB", "ciapPrefixAddress"), (0, "CISCO-IP-ADDRESS-POOL-MIB", "ciapPrefixAddressMask"))
if mibBuilder.loadTexts: ciapPrefixEntry.setStatus('current')
ciapPrefixType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 748, 1, 2, 6, 1, 1), InetAddressType())
if mibBuilder.loadTexts: ciapPrefixType.setStatus('current')
ciapPrefixAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 748, 1, 2, 6, 1, 2), InetAddress().subtype(subtypeSpec=ValueSizeConstraint(4, 16)))
if mibBuilder.loadTexts: ciapPrefixAddress.setStatus('current')
ciapPrefixAddressMask = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 748, 1, 2, 6, 1, 3), InetAddress().subtype(subtypeSpec=ValueSizeConstraint(4, 16)))
if mibBuilder.loadTexts: ciapPrefixAddressMask.setStatus('current')
ciapPrefixStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 748, 1, 2, 6, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ciapPrefixStatus.setStatus('current')
ciapPrefixStorage = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 748, 1, 2, 6, 1, 5), StorageType().clone('volatile')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ciapPrefixStorage.setStatus('current')
ciapPrefixAssignedLength = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 748, 1, 2, 6, 1, 6), InetAddressPrefixLength()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ciapPrefixAssignedLength.setStatus('current')
ciapPrefixCacheSize = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 748, 1, 2, 6, 1, 7), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setUnits('IP prefixes').setMaxAccess("readcreate")
if mibBuilder.loadTexts: ciapPrefixCacheSize.setStatus('current')
ciapPrefixRecycleDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 748, 1, 2, 6, 1, 8), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: ciapPrefixRecycleDelay.setStatus('current')
ciapPrefixPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 748, 1, 2, 6, 1, 9), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ciapPrefixPriority.setStatus('current')
ciapPrefixThresholdUnits = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 748, 1, 2, 6, 1, 10), IpAddressPoolThresholdUnits()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ciapPrefixThresholdUnits.setStatus('current')
ciapPrefixThresholdRising = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 748, 1, 2, 6, 1, 11), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ciapPrefixThresholdRising.setStatus('current')
ciapPrefixThresholdFalling = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 748, 1, 2, 6, 1, 12), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ciapPrefixThresholdFalling.setStatus('current')
ciapPrefixPrefixesInUse = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 748, 1, 2, 6, 1, 13), Gauge32()).setUnits('IP prefixes').setMaxAccess("readcreate")
if mibBuilder.loadTexts: ciapPrefixPrefixesInUse.setStatus('current')
ciapPrefixPrefixesFree = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 748, 1, 2, 6, 1, 14), Gauge32()).setUnits('IP prefixes').setMaxAccess("readcreate")
if mibBuilder.loadTexts: ciapPrefixPrefixesFree.setStatus('current')
ciapPrefixTableChanged = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 748, 1, 2, 7), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciapPrefixTableChanged.setStatus('current')
ciapPoolGroupIdNext = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 748, 1, 3, 1), IpAddrPoolInstanceIdentifierOrZero()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciapPoolGroupIdNext.setStatus('current')
ciapPoolGroupTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 748, 1, 3, 2), )
if mibBuilder.loadTexts: ciapPoolGroupTable.setStatus('current')
ciapPoolGroupEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 748, 1, 3, 2, 1), ).setIndexNames((0, "CISCO-IP-ADDRESS-POOL-MIB", "ciapPoolGroupId"))
if mibBuilder.loadTexts: ciapPoolGroupEntry.setStatus('current')
ciapPoolGroupId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 748, 1, 3, 2, 1, 1), IpAddrPoolInstanceIdentifier())
if mibBuilder.loadTexts: ciapPoolGroupId.setStatus('current')
ciapPoolGroupName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 748, 1, 3, 2, 1, 2), IpAddressPoolGroupName()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciapPoolGroupName.setStatus('current')
ciapPoolGroupThresholdUnits = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 748, 1, 3, 2, 1, 3), IpAddressPoolThresholdUnits()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ciapPoolGroupThresholdUnits.setStatus('current')
ciapPoolGroupThresholdRising = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 748, 1, 3, 2, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ciapPoolGroupThresholdRising.setStatus('current')
ciapPoolGroupThresholdFalling = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 748, 1, 3, 2, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ciapPoolGroupThresholdFalling.setStatus('current')
ciapPoolGroupAddressesInUse = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 748, 1, 3, 2, 1, 6), Gauge32()).setUnits('IP addresses/prefixes').setMaxAccess("readonly")
if mibBuilder.loadTexts: ciapPoolGroupAddressesInUse.setStatus('current')
ciapPoolGroupAddressesFree = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 748, 1, 3, 2, 1, 7), Gauge32()).setUnits('IP addresses/prefixes').setMaxAccess("readonly")
if mibBuilder.loadTexts: ciapPoolGroupAddressesFree.setStatus('current')
ciapPoolGroupContainsTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 748, 1, 3, 3), )
if mibBuilder.loadTexts: ciapPoolGroupContainsTable.setStatus('current')
ciapPoolGroupContainsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 748, 1, 3, 3, 1), ).setIndexNames((0, "CISCO-IP-ADDRESS-POOL-MIB", "ciapPoolGroupId"), (0, "CISCO-IP-ADDRESS-POOL-MIB", "ciapPoolGroupContainsId"))
if mibBuilder.loadTexts: ciapPoolGroupContainsEntry.setStatus('current')
ciapPoolGroupContainsId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 748, 1, 3, 3, 1, 1), IpAddrPoolInstanceIdentifier()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciapPoolGroupContainsId.setStatus('current')
ciapAllocatedAddressTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 748, 1, 4, 1), )
if mibBuilder.loadTexts: ciapAllocatedAddressTable.setStatus('current')
ciapAllocatedAddressEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 748, 1, 4, 1, 1), ).setIndexNames((0, "CISCO-IP-ADDRESS-POOL-MIB", "ciapPoolId"), (0, "CISCO-IP-ADDRESS-POOL-MIB", "ciapAllocatedAddressType"), (0, "CISCO-IP-ADDRESS-POOL-MIB", "ciapAllocatedAddress"))
if mibBuilder.loadTexts: ciapAllocatedAddressEntry.setStatus('current')
ciapAllocatedAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 748, 1, 4, 1, 1, 1), InetAddressType())
if mibBuilder.loadTexts: ciapAllocatedAddressType.setStatus('current')
ciapAllocatedAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 748, 1, 4, 1, 1, 2), InetAddress().subtype(subtypeSpec=ValueSizeConstraint(4, 16)))
if mibBuilder.loadTexts: ciapAllocatedAddress.setStatus('current')
ciapAllocatedAddressMask = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 748, 1, 4, 1, 1, 3), InetAddress().subtype(subtypeSpec=ValueSizeConstraint(4, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciapAllocatedAddressMask.setStatus('current')
ciapNotifyResource = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 748, 1, 5, 1), RowPointer()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: ciapNotifyResource.setStatus('current')
ciapNotifyThresholdUnits = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 748, 1, 5, 2), IpAddressPoolThresholdUnits()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: ciapNotifyThresholdUnits.setStatus('current')
ciapNotifyThresholdRising = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 748, 1, 5, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: ciapNotifyThresholdRising.setStatus('current')
ciapNotifyThresholdFalling = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 748, 1, 5, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: ciapNotifyThresholdFalling.setStatus('current')
ciapNotifyInUse = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 748, 1, 5, 5), Gauge32()).setUnits('IP addresses/prefixes').setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: ciapNotifyInUse.setStatus('current')
ciapNotifyFree = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 748, 1, 5, 6), Gauge32()).setUnits('IP addresses/prefixes').setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: ciapNotifyFree.setStatus('current')
ciapEventThresholdRising = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 748, 0, 1)).setObjects(("CISCO-IP-ADDRESS-POOL-MIB", "ciapNotifyResource"), ("CISCO-IP-ADDRESS-POOL-MIB", "ciapNotifyThresholdUnits"), ("CISCO-IP-ADDRESS-POOL-MIB", "ciapNotifyThresholdRising"), ("CISCO-IP-ADDRESS-POOL-MIB", "ciapNotifyInUse"), ("CISCO-IP-ADDRESS-POOL-MIB", "ciapNotifyFree"))
if mibBuilder.loadTexts: ciapEventThresholdRising.setStatus('current')
ciapEventThresholdFalling = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 748, 0, 2)).setObjects(("CISCO-IP-ADDRESS-POOL-MIB", "ciapNotifyResource"), ("CISCO-IP-ADDRESS-POOL-MIB", "ciapNotifyThresholdUnits"), ("CISCO-IP-ADDRESS-POOL-MIB", "ciapNotifyThresholdFalling"), ("CISCO-IP-ADDRESS-POOL-MIB", "ciapNotifyInUse"), ("CISCO-IP-ADDRESS-POOL-MIB", "ciapNotifyFree"))
if mibBuilder.loadTexts: ciapEventThresholdFalling.setStatus('current')
ciscoIpAddressPoolMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 748, 2, 1))
ciscoIpAddressPoolMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 748, 2, 2))
ciscoIpAddressPoolCompliance01 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 748, 2, 1, 1)).setObjects(("CISCO-IP-ADDRESS-POOL-MIB", "ciapGlobalGroup"), ("CISCO-IP-ADDRESS-POOL-MIB", "ciapPoolGroup"), ("CISCO-IP-ADDRESS-POOL-MIB", "ciapRangeGroup"), ("CISCO-IP-ADDRESS-POOL-MIB", "ciapPoolGroupGroup"), ("CISCO-IP-ADDRESS-POOL-MIB", "ciapNotifDataGroup"), ("CISCO-IP-ADDRESS-POOL-MIB", "ciapNotifsGroup"), ("CISCO-IP-ADDRESS-POOL-MIB", "ciapPrefixGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoIpAddressPoolCompliance01 = ciscoIpAddressPoolCompliance01.setStatus('current')
ciapGlobalGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 748, 2, 2, 1)).setObjects(("CISCO-IP-ADDRESS-POOL-MIB", "ciapGlobalNotifyEnable"), ("CISCO-IP-ADDRESS-POOL-MIB", "ciapGlobalThresholdUnits"), ("CISCO-IP-ADDRESS-POOL-MIB", "ciapGlobalThresholdRising"), ("CISCO-IP-ADDRESS-POOL-MIB", "ciapGlobalThresholdFalling"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciapGlobalGroup = ciapGlobalGroup.setStatus('current')
ciapPoolGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 748, 2, 2, 2)).setObjects(("CISCO-IP-ADDRESS-POOL-MIB", "ciapPoolIdNext"), ("CISCO-IP-ADDRESS-POOL-MIB", "ciapPoolName"), ("CISCO-IP-ADDRESS-POOL-MIB", "ciapPoolStatus"), ("CISCO-IP-ADDRESS-POOL-MIB", "ciapPoolStorage"), ("CISCO-IP-ADDRESS-POOL-MIB", "ciapPoolType"), ("CISCO-IP-ADDRESS-POOL-MIB", "ciapPoolContainedIn"), ("CISCO-IP-ADDRESS-POOL-MIB", "ciapPoolThresholdUnits"), ("CISCO-IP-ADDRESS-POOL-MIB", "ciapPoolThresholdRising"), ("CISCO-IP-ADDRESS-POOL-MIB", "ciapPoolThresholdFalling"), ("CISCO-IP-ADDRESS-POOL-MIB", "ciapPoolAddressesInUse"), ("CISCO-IP-ADDRESS-POOL-MIB", "ciapPoolAddressesFree"), ("CISCO-IP-ADDRESS-POOL-MIB", "ciapPoolTableChanged"), ("CISCO-IP-ADDRESS-POOL-MIB", "ciapAllocatedAddressMask"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciapPoolGroup = ciapPoolGroup.setStatus('current')
ciapRangeGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 748, 2, 2, 3)).setObjects(("CISCO-IP-ADDRESS-POOL-MIB", "ciapRangeStatus"), ("CISCO-IP-ADDRESS-POOL-MIB", "ciapRangeStorage"), ("CISCO-IP-ADDRESS-POOL-MIB", "ciapRangeAddressUpper"), ("CISCO-IP-ADDRESS-POOL-MIB", "ciapRangeCacheSize"), ("CISCO-IP-ADDRESS-POOL-MIB", "ciapRangeRecycleDelay"), ("CISCO-IP-ADDRESS-POOL-MIB", "ciapRangePriority"), ("CISCO-IP-ADDRESS-POOL-MIB", "ciapRangeThresholdUnits"), ("CISCO-IP-ADDRESS-POOL-MIB", "ciapRangeThresholdRising"), ("CISCO-IP-ADDRESS-POOL-MIB", "ciapRangeThresholdFalling"), ("CISCO-IP-ADDRESS-POOL-MIB", "ciapRangeAddressesInUse"), ("CISCO-IP-ADDRESS-POOL-MIB", "ciapRangeAddressesFree"), ("CISCO-IP-ADDRESS-POOL-MIB", "ciapRangeTableChanged"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciapRangeGroup = ciapRangeGroup.setStatus('current')
ciapPrefixGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 748, 2, 2, 4)).setObjects(("CISCO-IP-ADDRESS-POOL-MIB", "ciapPrefixStatus"), ("CISCO-IP-ADDRESS-POOL-MIB", "ciapPrefixStorage"), ("CISCO-IP-ADDRESS-POOL-MIB", "ciapPrefixAssignedLength"), ("CISCO-IP-ADDRESS-POOL-MIB", "ciapPrefixCacheSize"), ("CISCO-IP-ADDRESS-POOL-MIB", "ciapPrefixRecycleDelay"), ("CISCO-IP-ADDRESS-POOL-MIB", "ciapPrefixPriority"), ("CISCO-IP-ADDRESS-POOL-MIB", "ciapPrefixThresholdUnits"), ("CISCO-IP-ADDRESS-POOL-MIB", "ciapPrefixThresholdRising"), ("CISCO-IP-ADDRESS-POOL-MIB", "ciapPrefixThresholdFalling"), ("CISCO-IP-ADDRESS-POOL-MIB", "ciapPrefixPrefixesInUse"), ("CISCO-IP-ADDRESS-POOL-MIB", "ciapPrefixPrefixesFree"), ("CISCO-IP-ADDRESS-POOL-MIB", "ciapPrefixTableChanged"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciapPrefixGroup = ciapPrefixGroup.setStatus('current')
ciapPoolGroupGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 748, 2, 2, 5)).setObjects(("CISCO-IP-ADDRESS-POOL-MIB", "ciapPoolGroupIdNext"), ("CISCO-IP-ADDRESS-POOL-MIB", "ciapPoolGroupName"), ("CISCO-IP-ADDRESS-POOL-MIB", "ciapPoolGroupThresholdUnits"), ("CISCO-IP-ADDRESS-POOL-MIB", "ciapPoolGroupThresholdRising"), ("CISCO-IP-ADDRESS-POOL-MIB", "ciapPoolGroupThresholdFalling"), ("CISCO-IP-ADDRESS-POOL-MIB", "ciapPoolGroupAddressesInUse"), ("CISCO-IP-ADDRESS-POOL-MIB", "ciapPoolGroupAddressesFree"), ("CISCO-IP-ADDRESS-POOL-MIB", "ciapPoolGroupContainsId"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciapPoolGroupGroup = ciapPoolGroupGroup.setStatus('current')
ciapNotifDataGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 748, 2, 2, 6)).setObjects(("CISCO-IP-ADDRESS-POOL-MIB", "ciapNotifyResource"), ("CISCO-IP-ADDRESS-POOL-MIB", "ciapNotifyThresholdUnits"), ("CISCO-IP-ADDRESS-POOL-MIB", "ciapNotifyThresholdRising"), ("CISCO-IP-ADDRESS-POOL-MIB", "ciapNotifyThresholdFalling"), ("CISCO-IP-ADDRESS-POOL-MIB", "ciapNotifyInUse"), ("CISCO-IP-ADDRESS-POOL-MIB", "ciapNotifyFree"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciapNotifDataGroup = ciapNotifDataGroup.setStatus('current')
ciapNotifsGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 9, 9, 748, 2, 2, 7)).setObjects(("CISCO-IP-ADDRESS-POOL-MIB", "ciapEventThresholdRising"), ("CISCO-IP-ADDRESS-POOL-MIB", "ciapEventThresholdFalling"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciapNotifsGroup = ciapNotifsGroup.setStatus('current')
mibBuilder.exportSymbols("CISCO-IP-ADDRESS-POOL-MIB", ciapGlobalThresholdRising=ciapGlobalThresholdRising, ciapAllocatedAddressType=ciapAllocatedAddressType, ciapAllocatedAddress=ciapAllocatedAddress, ciapRangeRecycleDelay=ciapRangeRecycleDelay, ciscoIpAddressPoolMIBGroups=ciscoIpAddressPoolMIBGroups, ciapAllocatedAddressMask=ciapAllocatedAddressMask, ciapPrefixAddress=ciapPrefixAddress, ciapPrefixPriority=ciapPrefixPriority, ciapRangeThresholdUnits=ciapRangeThresholdUnits, ciapRangeCacheSize=ciapRangeCacheSize, ciapNotifsGroup=ciapNotifsGroup, ciapPoolGroupAddressesFree=ciapPoolGroupAddressesFree, ciapRangeAddressLower=ciapRangeAddressLower, ciscoIpAddressPoolMIBObjects=ciscoIpAddressPoolMIBObjects, ciapPoolId=ciapPoolId, ciapNotifDataGroup=ciapNotifDataGroup, ciapPrefixEntry=ciapPrefixEntry, ciapPoolGroupAddressesInUse=ciapPoolGroupAddressesInUse, ciapPoolGroupThresholdFalling=ciapPoolGroupThresholdFalling, ciapPrefixThresholdRising=ciapPrefixThresholdRising, ciapGlobalGroup=ciapGlobalGroup, ciapPoolGroupContainsTable=ciapPoolGroupContainsTable, ciapPoolGroupContainsEntry=ciapPoolGroupContainsEntry, ciapPoolThresholdRising=ciapPoolThresholdRising, ciscoIpAddressPoolCompliance01=ciscoIpAddressPoolCompliance01, ciapRangeEntry=ciapRangeEntry, ciapNotifyThresholdRising=ciapNotifyThresholdRising, ciapPrefixThresholdFalling=ciapPrefixThresholdFalling, ciapPoolName=ciapPoolName, ciapPoolGroups=ciapPoolGroups, ciapRangeAddressesInUse=ciapRangeAddressesInUse, ciapEventThresholdFalling=ciapEventThresholdFalling, ciapAllocatedAddressTable=ciapAllocatedAddressTable, ciapPoolThresholdFalling=ciapPoolThresholdFalling, ciapNotifyResource=ciapNotifyResource, ciapPoolContainedIn=ciapPoolContainedIn, ciapPoolGroupContainsId=ciapPoolGroupContainsId, ciapPrefixGroup=ciapPrefixGroup, ciapPrefixPrefixesFree=ciapPrefixPrefixesFree, ciapPoolTable=ciapPoolTable, ciscoIpAddressPoolMIBConform=ciscoIpAddressPoolMIBConform, ciapGlobalThresholdFalling=ciapGlobalThresholdFalling, ciapRangeGroup=ciapRangeGroup, ciapRangeAddressesFree=ciapRangeAddressesFree, ciapPoolStorage=ciapPoolStorage, ciapPoolType=ciapPoolType, ciapRangeAddressType=ciapRangeAddressType, ciapRangeThresholdFalling=ciapRangeThresholdFalling, ciapPoolGroupIdNext=ciapPoolGroupIdNext, ciapAllocatedAddressEntry=ciapAllocatedAddressEntry, ciapPoolGroupTable=ciapPoolGroupTable, ciapPoolGroupGroup=ciapPoolGroupGroup, ciapPrefixTable=ciapPrefixTable, ciapPrefixAddressMask=ciapPrefixAddressMask, ciapGlobal=ciapGlobal, ciapPrefixPrefixesInUse=ciapPrefixPrefixesInUse, ciapPrefixStatus=ciapPrefixStatus, ciscoIpAddressPoolMIB=ciscoIpAddressPoolMIB, ciapPoolEntry=ciapPoolEntry, ciscoIpAddressPoolMIBNotifs=ciscoIpAddressPoolMIBNotifs, ciapRangeStatus=ciapRangeStatus, ciapPools=ciapPools, ciapPoolGroupName=ciapPoolGroupName, ciapEventThresholdRising=ciapEventThresholdRising, ciapPrefixRecycleDelay=ciapPrefixRecycleDelay, ciapNotifyThresholdFalling=ciapNotifyThresholdFalling, ciapPoolStatus=ciapPoolStatus, ciapNotifyInUse=ciapNotifyInUse, ciapNotifyFree=ciapNotifyFree, ciapPoolGroup=ciapPoolGroup, ciapPoolIdNext=ciapPoolIdNext, ciscoIpAddressPoolMIBCompliances=ciscoIpAddressPoolMIBCompliances, ciapPrefixAssignedLength=ciapPrefixAssignedLength, ciapRangeTableChanged=ciapRangeTableChanged, ciapPoolGroupEntry=ciapPoolGroupEntry, ciapRangeAddressUpper=ciapRangeAddressUpper, ciapPoolAddressesFree=ciapPoolAddressesFree, ciapRangePriority=ciapRangePriority, ciapPrefixThresholdUnits=ciapPrefixThresholdUnits, ciapPoolGroupThresholdRising=ciapPoolGroupThresholdRising, ciapRangeStorage=ciapRangeStorage, ciapPoolGroupThresholdUnits=ciapPoolGroupThresholdUnits, ciapPoolThresholdUnits=ciapPoolThresholdUnits, ciapRangeThresholdRising=ciapRangeThresholdRising, ciapPoolGroupId=ciapPoolGroupId, ciapPoolAddressesInUse=ciapPoolAddressesInUse, ciapGlobalThresholdUnits=ciapGlobalThresholdUnits, PYSNMP_MODULE_ID=ciscoIpAddressPoolMIB, ciapPoolTableChanged=ciapPoolTableChanged, ciapRangeTable=ciapRangeTable, ciapPrefixType=ciapPrefixType, ciapAllocatedAddresses=ciapAllocatedAddresses, ciapPrefixCacheSize=ciapPrefixCacheSize, ciapPrefixStorage=ciapPrefixStorage, ciapGlobalNotifyEnable=ciapGlobalNotifyEnable, ciapNotifyThresholdUnits=ciapNotifyThresholdUnits, ciapPrefixTableChanged=ciapPrefixTableChanged, ciapNotifyData=ciapNotifyData)
