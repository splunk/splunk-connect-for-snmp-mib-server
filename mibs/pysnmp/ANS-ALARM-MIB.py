#
# PySNMP MIB module ANS-ALARM-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/ANS-ALARM-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:06:51 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
RowStatus, mlpmpR115, DateAndTime = mibBuilder.importSymbols("ANS-COMMON-MIB", "RowStatus", "mlpmpR115", "DateAndTime")
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ConstraintsIntersection, ValueRangeConstraint, ConstraintsUnion, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ConstraintsIntersection", "ValueRangeConstraint", "ConstraintsUnion", "SingleValueConstraint")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Integer32, TimeTicks, Counter64, NotificationType, ObjectIdentity, Unsigned32, ModuleIdentity, IpAddress, iso, Bits, MibScalar, MibTable, MibTableRow, MibTableColumn, Gauge32, MibIdentifier, Counter32 = mibBuilder.importSymbols("SNMPv2-SMI", "Integer32", "TimeTicks", "Counter64", "NotificationType", "ObjectIdentity", "Unsigned32", "ModuleIdentity", "IpAddress", "iso", "Bits", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Gauge32", "MibIdentifier", "Counter32")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
eventAndAlarm = MibIdentifier((1, 3, 6, 1, 4, 1, 193, 96, 115, 2))
event = MibIdentifier((1, 3, 6, 1, 4, 1, 193, 96, 115, 2, 1))
log = MibIdentifier((1, 3, 6, 1, 4, 1, 193, 96, 115, 2, 2))
alarmSeverityAssignment = MibIdentifier((1, 3, 6, 1, 4, 1, 193, 96, 115, 2, 3))
currentAlarm = MibIdentifier((1, 3, 6, 1, 4, 1, 193, 96, 115, 2, 4))
class AlarmSeverity(Integer32):
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5))
    namedValues = NamedValues(("indeterminate", 0), ("critical", 1), ("major", 2), ("minor", 3), ("warning", 4), ("cleared", 5))

class AlarmType(Integer32):
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5))
    namedValues = NamedValues(("undefined", 0), ("communications", 1), ("qos", 2), ("processing", 3), ("equipment", 4), ("environmental", 5))

class InstancePointer(ObjectIdentifier):
    pass

eventTable = MibTable((1, 3, 6, 1, 4, 1, 193, 96, 115, 2, 1, 1), )
if mibBuilder.loadTexts: eventTable.setStatus('mandatory')
eventEntry = MibTableRow((1, 3, 6, 1, 4, 1, 193, 96, 115, 2, 1, 1, 1), ).setIndexNames((0, "ANS-ALARM-MIB", "eventIndex"))
if mibBuilder.loadTexts: eventEntry.setStatus('mandatory')
eventIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 193, 96, 115, 2, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: eventIndex.setStatus('mandatory')
eventName = MibTableColumn((1, 3, 6, 1, 4, 1, 193, 96, 115, 2, 1, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 127))).setMaxAccess("readonly")
if mibBuilder.loadTexts: eventName.setStatus('mandatory')
eventTreatment = MibTableColumn((1, 3, 6, 1, 4, 1, 193, 96, 115, 2, 1, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("none", 1), ("log", 2), ("snmp-trap", 3), ("log-and-trap", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: eventTreatment.setStatus('mandatory')
eventCommunity = MibTableColumn((1, 3, 6, 1, 4, 1, 193, 96, 115, 2, 1, 1, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 127))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: eventCommunity.setStatus('mandatory')
eventLastTimeSent = MibTableColumn((1, 3, 6, 1, 4, 1, 193, 96, 115, 2, 1, 1, 1, 5), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eventLastTimeSent.setStatus('mandatory')
eventOwner = MibTableColumn((1, 3, 6, 1, 4, 1, 193, 96, 115, 2, 1, 1, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 127))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: eventOwner.setStatus('mandatory')
discriminateNtEvents = MibScalar((1, 3, 6, 1, 4, 1, 193, 96, 115, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("include", 1), ("exclude", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: discriminateNtEvents.setStatus('mandatory')
logAdminStatus = MibScalar((1, 3, 6, 1, 4, 1, 193, 96, 115, 2, 2, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("up", 1), ("down", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: logAdminStatus.setStatus('mandatory')
logSize = MibScalar((1, 3, 6, 1, 4, 1, 193, 96, 115, 2, 2, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: logSize.setStatus('mandatory')
logTable = MibTable((1, 3, 6, 1, 4, 1, 193, 96, 115, 2, 2, 3), )
if mibBuilder.loadTexts: logTable.setStatus('mandatory')
logEntry = MibTableRow((1, 3, 6, 1, 4, 1, 193, 96, 115, 2, 2, 3, 1), ).setIndexNames((0, "ANS-ALARM-MIB", "logIndex"))
if mibBuilder.loadTexts: logEntry.setStatus('mandatory')
logIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 193, 96, 115, 2, 2, 3, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: logIndex.setStatus('mandatory')
logEventIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 193, 96, 115, 2, 2, 3, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: logEventIndex.setStatus('mandatory')
logEventName = MibTableColumn((1, 3, 6, 1, 4, 1, 193, 96, 115, 2, 2, 3, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 127))).setMaxAccess("readonly")
if mibBuilder.loadTexts: logEventName.setStatus('mandatory')
logEventGeneratingObject = MibTableColumn((1, 3, 6, 1, 4, 1, 193, 96, 115, 2, 2, 3, 1, 4), InstancePointer()).setMaxAccess("readonly")
if mibBuilder.loadTexts: logEventGeneratingObject.setStatus('mandatory')
logTime = MibTableColumn((1, 3, 6, 1, 4, 1, 193, 96, 115, 2, 2, 3, 1, 5), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: logTime.setStatus('mandatory')
logEventInformation = MibTableColumn((1, 3, 6, 1, 4, 1, 193, 96, 115, 2, 2, 3, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: logEventInformation.setStatus('mandatory')
logEventType = MibTableColumn((1, 3, 6, 1, 4, 1, 193, 96, 115, 2, 2, 3, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("alarm", 1), ("other", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: logEventType.setStatus('mandatory')
logAlarmType = MibTableColumn((1, 3, 6, 1, 4, 1, 193, 96, 115, 2, 2, 3, 1, 8), AlarmType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: logAlarmType.setStatus('mandatory')
logAlarmSeverity = MibTableColumn((1, 3, 6, 1, 4, 1, 193, 96, 115, 2, 2, 3, 1, 9), AlarmSeverity()).setMaxAccess("readonly")
if mibBuilder.loadTexts: logAlarmSeverity.setStatus('mandatory')
alarmSeverityAssignmentTable = MibTable((1, 3, 6, 1, 4, 1, 193, 96, 115, 2, 3, 1), )
if mibBuilder.loadTexts: alarmSeverityAssignmentTable.setStatus('mandatory')
alarmSeverityAssignmentEntry = MibTableRow((1, 3, 6, 1, 4, 1, 193, 96, 115, 2, 3, 1, 1), ).setIndexNames((0, "ANS-ALARM-MIB", "alarmSeverityIndex"))
if mibBuilder.loadTexts: alarmSeverityAssignmentEntry.setStatus('mandatory')
alarmSeverityIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 193, 96, 115, 2, 3, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alarmSeverityIndex.setStatus('mandatory')
alarmSeverityAlarmName = MibTableColumn((1, 3, 6, 1, 4, 1, 193, 96, 115, 2, 3, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 127))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alarmSeverityAlarmName.setStatus('mandatory')
alarmSeverityPerceivedSeverity = MibTableColumn((1, 3, 6, 1, 4, 1, 193, 96, 115, 2, 3, 1, 1, 3), AlarmSeverity()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alarmSeverityPerceivedSeverity.setStatus('mandatory')
numberOfCurrentAlarms = MibScalar((1, 3, 6, 1, 4, 1, 193, 96, 115, 2, 4, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: numberOfCurrentAlarms.setStatus('mandatory')
currentAlarmTable = MibTable((1, 3, 6, 1, 4, 1, 193, 96, 115, 2, 4, 2), )
if mibBuilder.loadTexts: currentAlarmTable.setStatus('mandatory')
currentAlarmEntry = MibTableRow((1, 3, 6, 1, 4, 1, 193, 96, 115, 2, 4, 2, 1), ).setIndexNames((0, "ANS-ALARM-MIB", "currentAlarmIndex"))
if mibBuilder.loadTexts: currentAlarmEntry.setStatus('mandatory')
currentAlarmIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 193, 96, 115, 2, 4, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: currentAlarmIndex.setStatus('mandatory')
currentAlarmName = MibTableColumn((1, 3, 6, 1, 4, 1, 193, 96, 115, 2, 4, 2, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 127))).setMaxAccess("readonly")
if mibBuilder.loadTexts: currentAlarmName.setStatus('mandatory')
currentAlarmObject = MibTableColumn((1, 3, 6, 1, 4, 1, 193, 96, 115, 2, 4, 2, 1, 3), InstancePointer()).setMaxAccess("readonly")
if mibBuilder.loadTexts: currentAlarmObject.setStatus('mandatory')
currentAlarmType = MibTableColumn((1, 3, 6, 1, 4, 1, 193, 96, 115, 2, 4, 2, 1, 4), AlarmType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: currentAlarmType.setStatus('mandatory')
currentAlarmSeverity = MibTableColumn((1, 3, 6, 1, 4, 1, 193, 96, 115, 2, 4, 2, 1, 5), AlarmSeverity()).setMaxAccess("readonly")
if mibBuilder.loadTexts: currentAlarmSeverity.setStatus('mandatory')
currentAlarmTime = MibTableColumn((1, 3, 6, 1, 4, 1, 193, 96, 115, 2, 4, 2, 1, 6), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: currentAlarmTime.setStatus('mandatory')
currentAlarmInformation = MibTableColumn((1, 3, 6, 1, 4, 1, 193, 96, 115, 2, 4, 2, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: currentAlarmInformation.setStatus('mandatory')
mibBuilder.exportSymbols("ANS-ALARM-MIB", eventTreatment=eventTreatment, logEventGeneratingObject=logEventGeneratingObject, alarmSeverityIndex=alarmSeverityIndex, eventAndAlarm=eventAndAlarm, eventIndex=eventIndex, logAlarmType=logAlarmType, currentAlarmTime=currentAlarmTime, discriminateNtEvents=discriminateNtEvents, alarmSeverityAssignmentTable=alarmSeverityAssignmentTable, logAlarmSeverity=logAlarmSeverity, logEventInformation=logEventInformation, AlarmSeverity=AlarmSeverity, currentAlarmInformation=currentAlarmInformation, log=log, eventEntry=eventEntry, numberOfCurrentAlarms=numberOfCurrentAlarms, logSize=logSize, eventTable=eventTable, AlarmType=AlarmType, logTable=logTable, eventLastTimeSent=eventLastTimeSent, logEventIndex=logEventIndex, currentAlarmSeverity=currentAlarmSeverity, logEventType=logEventType, logEntry=logEntry, currentAlarmName=currentAlarmName, InstancePointer=InstancePointer, logAdminStatus=logAdminStatus, currentAlarmObject=currentAlarmObject, event=event, currentAlarmType=currentAlarmType, eventOwner=eventOwner, alarmSeverityAssignment=alarmSeverityAssignment, eventCommunity=eventCommunity, currentAlarmEntry=currentAlarmEntry, currentAlarmTable=currentAlarmTable, eventName=eventName, logIndex=logIndex, alarmSeverityAssignmentEntry=alarmSeverityAssignmentEntry, currentAlarmIndex=currentAlarmIndex, logEventName=logEventName, currentAlarm=currentAlarm, logTime=logTime, alarmSeverityPerceivedSeverity=alarmSeverityPerceivedSeverity, alarmSeverityAlarmName=alarmSeverityAlarmName)
