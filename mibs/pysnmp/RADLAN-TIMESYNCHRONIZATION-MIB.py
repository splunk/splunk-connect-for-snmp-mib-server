#
# PySNMP MIB module RADLAN-TIMESYNCHRONIZATION-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/RADLAN-TIMESYNCHRONIZATION-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 20:41:29 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ValueSizeConstraint, ConstraintsUnion, ValueRangeConstraint, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ValueSizeConstraint", "ConstraintsUnion", "ValueRangeConstraint", "SingleValueConstraint")
InterfaceIndex, = mibBuilder.importSymbols("IF-MIB", "InterfaceIndex")
InetAddressType, InetAddress = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddressType", "InetAddress")
rnd, = mibBuilder.importSymbols("RADLAN-MIB", "rnd")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Unsigned32, Counter64, Integer32, Gauge32, Bits, NotificationType, MibScalar, MibTable, MibTableRow, MibTableColumn, IpAddress, iso, ModuleIdentity, MibIdentifier, Counter32, TimeTicks, ObjectIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "Unsigned32", "Counter64", "Integer32", "Gauge32", "Bits", "NotificationType", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "IpAddress", "iso", "ModuleIdentity", "MibIdentifier", "Counter32", "TimeTicks", "ObjectIdentity")
TextualConvention, TruthValue, RowStatus, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "TruthValue", "RowStatus", "DisplayString")
rlTimeSynchronization = ModuleIdentity((1, 3, 6, 1, 4, 1, 89, 92))
rlTimeSynchronization.setRevisions(('2009-06-18 00:24', '2007-09-06 00:24', '2003-11-23 00:24',))
if mibBuilder.loadTexts: rlTimeSynchronization.setLastUpdated('200408030024Z')
if mibBuilder.loadTexts: rlTimeSynchronization.setOrganization('Radlan Computer Communication Ltd.')
rlTimeSyncMethodMode = MibIdentifier((1, 3, 6, 1, 4, 1, 89, 92, 1))
rlSntpNtpClient = MibIdentifier((1, 3, 6, 1, 4, 1, 89, 92, 2))
rlSntpNtpConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 89, 92, 2, 1))
rlSntpConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 89, 92, 2, 2))
rlNtpConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 89, 92, 2, 3))
class NTPTimeStamp(TextualConvention, OctetString):
    reference = "D.L. Mills, 'Network Time Protocol (Version 3)', RFC-1305, March 1992, Section 3.1"
    status = 'current'
    displayHint = '4d.4d'
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(8, 8)
    fixedLength = 8

class NTPSignedTimeValue(TextualConvention, OctetString):
    status = 'current'
    displayHint = '2d.2d'
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(4, 4)
    fixedLength = 4

class NTPStratum(TextualConvention, Integer32):
    reference = "D.L. Mills, 'Network Time Protocol (Version 3)', RFC-1305, March 1992, Section 2.2"
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ValueRangeConstraint(0, 255)

class RlTimeSyncMethod(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3))
    namedValues = NamedValues(("none", 1), ("sntp", 2), ("ntp", 3))

class RlDaylightSavingTimeMode(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3))
    namedValues = NamedValues(("recurring", 1), ("date", 2), ("none", 3))

rlTimeSyncMibVersion = MibScalar((1, 3, 6, 1, 4, 1, 89, 92, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlTimeSyncMibVersion.setStatus('current')
rndTimeSyncManagedTime = MibScalar((1, 3, 6, 1, 4, 1, 89, 92, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(6, 6)).setFixedLength(6)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rndTimeSyncManagedTime.setStatus('current')
rndTimeSyncManagedDate = MibScalar((1, 3, 6, 1, 4, 1, 89, 92, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(6, 6)).setFixedLength(6)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rndTimeSyncManagedDate.setStatus('current')
rndTimeSyncManagedDateTime = MibScalar((1, 3, 6, 1, 4, 1, 89, 92, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(12, 12)).setFixedLength(12)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rndTimeSyncManagedDateTime.setStatus('current')
rlTimeSyncMethod = MibScalar((1, 3, 6, 1, 4, 1, 89, 92, 1, 5), RlTimeSyncMethod().clone('none')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlTimeSyncMethod.setStatus('current')
rlTimeZone = MibScalar((1, 3, 6, 1, 4, 1, 89, 92, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 6))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlTimeZone.setStatus('current')
rlTimeZoneCode = MibScalar((1, 3, 6, 1, 4, 1, 89, 92, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlTimeZoneCode.setStatus('current')
rlDaylightSavingTimeMode = MibScalar((1, 3, 6, 1, 4, 1, 89, 92, 1, 8), RlDaylightSavingTimeMode().clone('none')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlDaylightSavingTimeMode.setStatus('current')
rlDaylightSavingTimeStart = MibScalar((1, 3, 6, 1, 4, 1, 89, 92, 1, 9), OctetString().subtype(subtypeSpec=ValueSizeConstraint(14, 14)).setFixedLength(14)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlDaylightSavingTimeStart.setStatus('current')
rlDaylightSavingTimeEnd = MibScalar((1, 3, 6, 1, 4, 1, 89, 92, 1, 10), OctetString().subtype(subtypeSpec=ValueSizeConstraint(14, 14)).setFixedLength(14)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlDaylightSavingTimeEnd.setStatus('current')
rlDaylightSavingTimeOffset = MibScalar((1, 3, 6, 1, 4, 1, 89, 92, 1, 11), Integer32().clone(60)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlDaylightSavingTimeOffset.setStatus('current')
rlDaylightSavingTimeCode = MibScalar((1, 3, 6, 1, 4, 1, 89, 92, 1, 12), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlDaylightSavingTimeCode.setStatus('current')
rlTZDSTOffset = MibScalar((1, 3, 6, 1, 4, 1, 89, 92, 1, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlTZDSTOffset.setStatus('current')
rlTimeZoneName = MibScalar((1, 3, 6, 1, 4, 1, 89, 92, 1, 14), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlTimeZoneName.setStatus('current')
rlTimeZoneTable = MibTable((1, 3, 6, 1, 4, 1, 89, 92, 1, 15), )
if mibBuilder.loadTexts: rlTimeZoneTable.setStatus('current')
rlTimeZoneEntry = MibTableRow((1, 3, 6, 1, 4, 1, 89, 92, 1, 15, 1), ).setIndexNames((0, "RADLAN-TIMESYNCHRONIZATION-MIB", "rlTimeZoneIndex"))
if mibBuilder.loadTexts: rlTimeZoneEntry.setStatus('current')
rlTimeZoneIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 92, 1, 15, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2)))
if mibBuilder.loadTexts: rlTimeZoneIndex.setStatus('current')
rlTimeZoneTimeSyncMethod = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 92, 1, 15, 1, 2), RlTimeSyncMethod().clone('none')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlTimeZoneTimeSyncMethod.setStatus('current')
rlTimeZoneTimeZoneOffset = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 92, 1, 15, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 6))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlTimeZoneTimeZoneOffset.setStatus('current')
rlTimeZoneTimeZoneCode = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 92, 1, 15, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlTimeZoneTimeZoneCode.setStatus('current')
rlTimeZoneDaylightSavingTimeMode = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 92, 1, 15, 1, 5), RlDaylightSavingTimeMode().clone('none')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlTimeZoneDaylightSavingTimeMode.setStatus('current')
rlTimeZoneDaylightSavingTimeStart = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 92, 1, 15, 1, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(14, 14)).setFixedLength(14)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlTimeZoneDaylightSavingTimeStart.setStatus('current')
rlTimeZoneDaylightSavingTimeEnd = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 92, 1, 15, 1, 7), OctetString().subtype(subtypeSpec=ValueSizeConstraint(14, 14)).setFixedLength(14)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlTimeZoneDaylightSavingTimeEnd.setStatus('current')
rlTimeZoneDaylightSavingTimeOffset = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 92, 1, 15, 1, 8), Integer32().clone(60)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlTimeZoneDaylightSavingTimeOffset.setStatus('current')
rlTimeZoneDaylightSavingTimeCode = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 92, 1, 15, 1, 9), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlTimeZoneDaylightSavingTimeCode.setStatus('current')
rlTimeZoneTZDSTOffset = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 92, 1, 15, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlTimeZoneTZDSTOffset.setStatus('current')
rlTimeZoneTimeZoneName = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 92, 1, 15, 1, 11), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlTimeZoneTimeZoneName.setStatus('current')
rlTimeZoneDataType = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 92, 1, 15, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("static", 1), ("dynamic", 2))).clone('static')).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlTimeZoneDataType.setStatus('current')
rlTimeZoneDataSourceIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 92, 1, 15, 1, 13), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlTimeZoneDataSourceIfIndex.setStatus('current')
rlTimeZoneDataDynamicConfSource = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 92, 1, 15, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("none", 1), ("dhcpv4", 2), ("dhcpv6", 3))).clone('none')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlTimeZoneDataDynamicConfSource.setStatus('current')
rlClockStatus = MibScalar((1, 3, 6, 1, 4, 1, 89, 92, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("invalid", 1), ("manuallySet", 2), ("synchronizedBySntp", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlClockStatus.setStatus('current')
rlDhcpTimezoneOptionEnabled = MibScalar((1, 3, 6, 1, 4, 1, 89, 92, 1, 17), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlDhcpTimezoneOptionEnabled.setStatus('current')
rlAutomaticClockSetFromPCEnabled = MibScalar((1, 3, 6, 1, 4, 1, 89, 92, 1, 18), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlAutomaticClockSetFromPCEnabled.setStatus('current')
rlTimeAndDateHaveBeenSet = MibScalar((1, 3, 6, 1, 4, 1, 89, 92, 1, 19), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlTimeAndDateHaveBeenSet.setStatus('current')
class RlSntpNtpSyncType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))
    namedValues = NamedValues(("none", 1), ("unicast", 2), ("anycast", 3), ("broadcast", 4))

class RlSntpNtpSyncEntryType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("primaryPollSrv", 1), ("syncSrv", 2))

rlSntpNtpMibVersion = MibScalar((1, 3, 6, 1, 4, 1, 89, 92, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlSntpNtpMibVersion.setStatus('current')
rlSntpNtpConfigMode = MibScalar((1, 3, 6, 1, 4, 1, 89, 92, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("none", 1), ("unicast", 2), ("anycast", 3), ("multicast", 4), ("unicastAnycast", 5), ("unicastMulticast", 6), ("anycastMulticast", 7), ("unicastAnycastMulticast", 8))).clone('none')).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlSntpNtpConfigMode.setStatus('current')
rlSntpNtpConfigSysStratum = MibScalar((1, 3, 6, 1, 4, 1, 89, 92, 2, 1, 3), NTPStratum()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlSntpNtpConfigSysStratum.setStatus('current')
rlSntpNtpConfigPollInterval = MibScalar((1, 3, 6, 1, 4, 1, 89, 92, 2, 1, 4), Integer32().clone(1024)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlSntpNtpConfigPollInterval.setStatus('current')
rlSntpNtpConfigPrimaryPollSrvAddr = MibScalar((1, 3, 6, 1, 4, 1, 89, 92, 2, 1, 5), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlSntpNtpConfigPrimaryPollSrvAddr.setStatus('current')
rlSntpNtpConfigPrimaryPollSrvMrid = MibScalar((1, 3, 6, 1, 4, 1, 89, 92, 2, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlSntpNtpConfigPrimaryPollSrvMrid.setStatus('current')
rlSntpNtpConfigPrimaryPollSrvIfIndex = MibScalar((1, 3, 6, 1, 4, 1, 89, 92, 2, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlSntpNtpConfigPrimaryPollSrvIfIndex.setStatus('current')
rlSntpNtpConfigPrimaryPollSrvStratum = MibScalar((1, 3, 6, 1, 4, 1, 89, 92, 2, 1, 8), NTPStratum()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlSntpNtpConfigPrimaryPollSrvStratum.setStatus('current')
rlSntpNtpConfigSyncSrvAddr = MibScalar((1, 3, 6, 1, 4, 1, 89, 92, 2, 1, 9), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlSntpNtpConfigSyncSrvAddr.setStatus('current')
rlSntpNtpConfigSyncSrvMrid = MibScalar((1, 3, 6, 1, 4, 1, 89, 92, 2, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlSntpNtpConfigSyncSrvMrid.setStatus('current')
rlSntpNtpConfigSyncSrvIfIndex = MibScalar((1, 3, 6, 1, 4, 1, 89, 92, 2, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlSntpNtpConfigSyncSrvIfIndex.setStatus('current')
rlSntpNtpConfigSyncSrvType = MibScalar((1, 3, 6, 1, 4, 1, 89, 92, 2, 1, 12), RlSntpNtpSyncType().clone('none')).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlSntpNtpConfigSyncSrvType.setStatus('current')
rlSntpNtpConfigSyncSrvStratum = MibScalar((1, 3, 6, 1, 4, 1, 89, 92, 2, 1, 13), NTPStratum()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlSntpNtpConfigSyncSrvStratum.setStatus('current')
rlSntpNtpConfigRetryTimeout = MibScalar((1, 3, 6, 1, 4, 1, 89, 92, 2, 1, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlSntpNtpConfigRetryTimeout.setStatus('current')
rlSntpNtpConfigRetryCnt = MibScalar((1, 3, 6, 1, 4, 1, 89, 92, 2, 1, 15), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlSntpNtpConfigRetryCnt.setStatus('current')
rlSntpNtpConfigSrvTable = MibTable((1, 3, 6, 1, 4, 1, 89, 92, 2, 1, 16), )
if mibBuilder.loadTexts: rlSntpNtpConfigSrvTable.setStatus('current')
rlSntpNtpConfigSrvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 89, 92, 2, 1, 16, 1), ).setIndexNames((0, "RADLAN-TIMESYNCHRONIZATION-MIB", "rlSntpNtpConfigSrvEntryType"))
if mibBuilder.loadTexts: rlSntpNtpConfigSrvEntry.setStatus('current')
rlSntpNtpConfigSrvEntryType = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 92, 2, 1, 16, 1, 1), RlSntpNtpSyncEntryType())
if mibBuilder.loadTexts: rlSntpNtpConfigSrvEntryType.setStatus('current')
rlSntpNtpConfigSrvInetAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 92, 2, 1, 16, 1, 2), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlSntpNtpConfigSrvInetAddressType.setStatus('current')
rlSntpNtpConfigSrvInetAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 92, 2, 1, 16, 1, 3), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlSntpNtpConfigSrvInetAddress.setStatus('current')
rlSntpNtpConfigSrvMrid = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 92, 2, 1, 16, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlSntpNtpConfigSrvMrid.setStatus('current')
rlSntpNtpConfigSrvIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 92, 2, 1, 16, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlSntpNtpConfigSrvIfIndex.setStatus('current')
rlSntpNtpConfigSrvSyncType = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 92, 2, 1, 16, 1, 6), RlSntpNtpSyncType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlSntpNtpConfigSrvSyncType.setStatus('current')
rlSntpNtpConfigSrvStratum = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 92, 2, 1, 16, 1, 7), NTPStratum()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlSntpNtpConfigSrvStratum.setStatus('current')
rlSntpClientMode = MibScalar((1, 3, 6, 1, 4, 1, 89, 92, 2, 2, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("none", 1), ("active", 2), ("passive", 3))).clone('none')).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlSntpClientMode.setStatus('current')
rlSntpUnicastAdminState = MibScalar((1, 3, 6, 1, 4, 1, 89, 92, 2, 2, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlSntpUnicastAdminState.setStatus('current')
rlSntpBroadcastAdminState = MibScalar((1, 3, 6, 1, 4, 1, 89, 92, 2, 2, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2), ("ipv4OnlyEnabled", 3), ("ipv6OnlyEnabled", 4))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlSntpBroadcastAdminState.setStatus('current')
rlSntpAnycastAdminState = MibScalar((1, 3, 6, 1, 4, 1, 89, 92, 2, 2, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2), ("ipv4OnlyEnabled", 3), ("ipv6OnlyEnabled", 4))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlSntpAnycastAdminState.setStatus('current')
rlSntpUnicastPollState = MibScalar((1, 3, 6, 1, 4, 1, 89, 92, 2, 2, 5), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlSntpUnicastPollState.setStatus('current')
rlSntpBroadcastPollState = MibScalar((1, 3, 6, 1, 4, 1, 89, 92, 2, 2, 6), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlSntpBroadcastPollState.setStatus('current')
rlSntpAnycastPollState = MibScalar((1, 3, 6, 1, 4, 1, 89, 92, 2, 2, 7), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlSntpAnycastPollState.setStatus('current')
rlSntpAuthenticationState = MibScalar((1, 3, 6, 1, 4, 1, 89, 92, 2, 2, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlSntpAuthenticationState.setStatus('current')
rlTimeValidFlag = MibScalar((1, 3, 6, 1, 4, 1, 89, 92, 2, 2, 9), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlTimeValidFlag.setStatus('current')
rlSntpConfigBroadcastTable = MibTable((1, 3, 6, 1, 4, 1, 89, 92, 2, 2, 10), )
if mibBuilder.loadTexts: rlSntpConfigBroadcastTable.setStatus('current')
rlSntpBroadcastEntry = MibTableRow((1, 3, 6, 1, 4, 1, 89, 92, 2, 2, 10, 1), ).setIndexNames((0, "RADLAN-TIMESYNCHRONIZATION-MIB", "rlSntpBroadcastIfIndex"))
if mibBuilder.loadTexts: rlSntpBroadcastEntry.setStatus('current')
rlSntpBroadcastIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 92, 2, 2, 10, 1, 1), Integer32())
if mibBuilder.loadTexts: rlSntpBroadcastIfIndex.setStatus('current')
rlSntpBroadcastIfAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 92, 2, 2, 10, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlSntpBroadcastIfAdminState.setStatus('current')
rlSntpBroadcastMode = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 92, 2, 2, 10, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("none", 1), ("receive", 2), ("send", 3), ("receiveSend", 4))).clone('receiveSend')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlSntpBroadcastMode.setStatus('current')
rlSntpBroadcastPolled = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 92, 2, 2, 10, 1, 4), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlSntpBroadcastPolled.setStatus('current')
rlSntpBroadcastAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 92, 2, 2, 10, 1, 5), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlSntpBroadcastAddress.setStatus('current')
rlSntpBroadcastStratum = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 92, 2, 2, 10, 1, 6), NTPStratum()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlSntpBroadcastStratum.setStatus('current')
rlSntpBroadcastLastResp = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 92, 2, 2, 10, 1, 7), NTPTimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlSntpBroadcastLastResp.setStatus('current')
rlSntpBroadcastStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 92, 2, 2, 10, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("unknown", 1), ("inProcess", 2), ("up", 3), ("down", 4))).clone('unknown')).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlSntpBroadcastStatus.setStatus('current')
rlSntpBroadcastOffset = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 92, 2, 2, 10, 1, 9), NTPTimeStamp()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: rlSntpBroadcastOffset.setStatus('current')
rlSntpBroadcastDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 92, 2, 2, 10, 1, 10), NTPSignedTimeValue()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: rlSntpBroadcastDelay.setStatus('current')
rlSntpBroadcastRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 92, 2, 2, 10, 1, 11), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlSntpBroadcastRowStatus.setStatus('current')
rlSntpConfigAnycastTable = MibTable((1, 3, 6, 1, 4, 1, 89, 92, 2, 2, 11), )
if mibBuilder.loadTexts: rlSntpConfigAnycastTable.setStatus('current')
rlSntpAnycastEntry = MibTableRow((1, 3, 6, 1, 4, 1, 89, 92, 2, 2, 11, 1), ).setIndexNames((0, "RADLAN-TIMESYNCHRONIZATION-MIB", "rlSntpAnycastIfIndex"))
if mibBuilder.loadTexts: rlSntpAnycastEntry.setStatus('current')
rlSntpAnycastIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 92, 2, 2, 11, 1, 1), Integer32())
if mibBuilder.loadTexts: rlSntpAnycastIfIndex.setStatus('current')
rlSntpAnycastAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 92, 2, 2, 11, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlSntpAnycastAddress.setStatus('current')
rlSntpAnycastStratum = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 92, 2, 2, 11, 1, 3), NTPStratum()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlSntpAnycastStratum.setStatus('current')
rlSntpAnycastLastResp = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 92, 2, 2, 11, 1, 4), NTPTimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlSntpAnycastLastResp.setStatus('current')
rlSntpAnycastStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 92, 2, 2, 11, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("unknown", 1), ("inProcess", 2), ("up", 3), ("down", 4))).clone('unknown')).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlSntpAnycastStatus.setStatus('current')
rlSntpAnycastOffset = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 92, 2, 2, 11, 1, 6), NTPTimeStamp()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: rlSntpAnycastOffset.setStatus('current')
rlSntpAnycastDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 92, 2, 2, 11, 1, 7), NTPSignedTimeValue()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: rlSntpAnycastDelay.setStatus('current')
rlSntpAnycastRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 92, 2, 2, 11, 1, 8), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlSntpAnycastRowStatus.setStatus('current')
rlSntpConfigServerTable = MibTable((1, 3, 6, 1, 4, 1, 89, 92, 2, 2, 12), )
if mibBuilder.loadTexts: rlSntpConfigServerTable.setStatus('current')
rlSntpServerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 89, 92, 2, 2, 12, 1), ).setIndexNames((0, "RADLAN-TIMESYNCHRONIZATION-MIB", "rlSntpServerAddress"))
if mibBuilder.loadTexts: rlSntpServerEntry.setStatus('current')
rlSntpServerAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 92, 2, 2, 12, 1, 1), IpAddress())
if mibBuilder.loadTexts: rlSntpServerAddress.setStatus('current')
rlSntpServerPolled = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 92, 2, 2, 12, 1, 2), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlSntpServerPolled.setStatus('current')
rlSntpServerStratum = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 92, 2, 2, 12, 1, 3), NTPStratum()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlSntpServerStratum.setStatus('current')
rlSntpServerLastResp = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 92, 2, 2, 12, 1, 4), NTPTimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlSntpServerLastResp.setStatus('current')
rlSntpServerStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 92, 2, 2, 12, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("unknown", 1), ("inProcess", 2), ("up", 3), ("down", 4))).clone('unknown')).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlSntpServerStatus.setStatus('current')
rlSntpServersOffset = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 92, 2, 2, 12, 1, 6), NTPTimeStamp()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: rlSntpServersOffset.setStatus('current')
rlSntpServersDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 92, 2, 2, 12, 1, 7), NTPSignedTimeValue()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: rlSntpServersDelay.setStatus('current')
rlSntpServersKeyIdentifier = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 92, 2, 2, 12, 1, 8), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlSntpServersKeyIdentifier.setStatus('current')
rlSntpServerRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 92, 2, 2, 12, 1, 9), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlSntpServerRowStatus.setStatus('current')
rlSntpConfigAuthenticationTable = MibTable((1, 3, 6, 1, 4, 1, 89, 92, 2, 2, 13), )
if mibBuilder.loadTexts: rlSntpConfigAuthenticationTable.setStatus('current')
rlSntpAuthenticationEntry = MibTableRow((1, 3, 6, 1, 4, 1, 89, 92, 2, 2, 13, 1), ).setIndexNames((0, "RADLAN-TIMESYNCHRONIZATION-MIB", "rlSntpAuthenticationKeyID"))
if mibBuilder.loadTexts: rlSntpAuthenticationEntry.setStatus('current')
rlSntpAuthenticationKeyID = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 92, 2, 2, 13, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlSntpAuthenticationKeyID.setStatus('current')
rlSntpAuthenticationKeyValue = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 92, 2, 2, 13, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 8))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlSntpAuthenticationKeyValue.setStatus('current')
rlSntpAuthenticationKeyState = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 92, 2, 2, 13, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlSntpAuthenticationKeyState.setStatus('current')
rlSntpAuthenticationRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 92, 2, 2, 13, 1, 4), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlSntpAuthenticationRowStatus.setStatus('current')
rlSntpPort = MibScalar((1, 3, 6, 1, 4, 1, 89, 92, 2, 2, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)).clone(123)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlSntpPort.setStatus('current')
rlSntpConfigBroadcastInetTable = MibTable((1, 3, 6, 1, 4, 1, 89, 92, 2, 2, 15), )
if mibBuilder.loadTexts: rlSntpConfigBroadcastInetTable.setStatus('current')
rlSntpBroadcastInetEntry = MibTableRow((1, 3, 6, 1, 4, 1, 89, 92, 2, 2, 15, 1), ).setIndexNames((0, "RADLAN-TIMESYNCHRONIZATION-MIB", "rlSntpBroadcastInetIfIndex"))
if mibBuilder.loadTexts: rlSntpBroadcastInetEntry.setStatus('current')
rlSntpBroadcastInetIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 92, 2, 2, 15, 1, 1), Integer32())
if mibBuilder.loadTexts: rlSntpBroadcastInetIfIndex.setStatus('current')
rlSntpBroadcastInetIfAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 92, 2, 2, 15, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlSntpBroadcastInetIfAdminState.setStatus('current')
rlSntpBroadcastInetMode = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 92, 2, 2, 15, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("none", 1), ("receive", 2), ("send", 3), ("receiveSend", 4))).clone('receiveSend')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlSntpBroadcastInetMode.setStatus('current')
rlSntpBroadcastInetPolled = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 92, 2, 2, 15, 1, 4), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlSntpBroadcastInetPolled.setStatus('current')
rlSntpBroadcastInetAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 92, 2, 2, 15, 1, 5), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlSntpBroadcastInetAddressType.setStatus('current')
rlSntpBroadcastInetAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 92, 2, 2, 15, 1, 6), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlSntpBroadcastInetAddress.setStatus('current')
rlSntpBroadcastInetStratum = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 92, 2, 2, 15, 1, 7), NTPStratum()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlSntpBroadcastInetStratum.setStatus('current')
rlSntpBroadcastInetLastResp = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 92, 2, 2, 15, 1, 8), NTPTimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlSntpBroadcastInetLastResp.setStatus('current')
rlSntpBroadcastInetStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 92, 2, 2, 15, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("unknown", 1), ("inProcess", 2), ("up", 3), ("down", 4))).clone('unknown')).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlSntpBroadcastInetStatus.setStatus('current')
rlSntpBroadcastInetOffset = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 92, 2, 2, 15, 1, 10), NTPTimeStamp()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: rlSntpBroadcastInetOffset.setStatus('current')
rlSntpBroadcastInetDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 92, 2, 2, 15, 1, 11), NTPSignedTimeValue()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: rlSntpBroadcastInetDelay.setStatus('current')
rlSntpBroadcastInetRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 92, 2, 2, 15, 1, 12), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlSntpBroadcastInetRowStatus.setStatus('current')
rlSntpConfigAnycastInetTable = MibTable((1, 3, 6, 1, 4, 1, 89, 92, 2, 2, 16), )
if mibBuilder.loadTexts: rlSntpConfigAnycastInetTable.setStatus('current')
rlSntpAnycastInetEntry = MibTableRow((1, 3, 6, 1, 4, 1, 89, 92, 2, 2, 16, 1), ).setIndexNames((0, "RADLAN-TIMESYNCHRONIZATION-MIB", "rlSntpAnycastInetIfIndex"))
if mibBuilder.loadTexts: rlSntpAnycastInetEntry.setStatus('current')
rlSntpAnycastInetIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 92, 2, 2, 16, 1, 1), Integer32())
if mibBuilder.loadTexts: rlSntpAnycastInetIfIndex.setStatus('current')
rlSntpAnycastInetAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 92, 2, 2, 16, 1, 2), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlSntpAnycastInetAddressType.setStatus('current')
rlSntpAnycastInetAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 92, 2, 2, 16, 1, 3), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlSntpAnycastInetAddress.setStatus('current')
rlSntpAnycastInetStratum = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 92, 2, 2, 16, 1, 4), NTPStratum()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlSntpAnycastInetStratum.setStatus('current')
rlSntpAnycastInetLastResp = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 92, 2, 2, 16, 1, 5), NTPTimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlSntpAnycastInetLastResp.setStatus('current')
rlSntpAnycastInetStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 92, 2, 2, 16, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("unknown", 1), ("inProcess", 2), ("up", 3), ("down", 4))).clone('unknown')).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlSntpAnycastInetStatus.setStatus('current')
rlSntpAnycastInetOffset = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 92, 2, 2, 16, 1, 7), NTPTimeStamp()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: rlSntpAnycastInetOffset.setStatus('current')
rlSntpAnycastInetDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 92, 2, 2, 16, 1, 8), NTPSignedTimeValue()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: rlSntpAnycastInetDelay.setStatus('current')
rlSntpAnycastInetRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 92, 2, 2, 16, 1, 9), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlSntpAnycastInetRowStatus.setStatus('current')
rlSntpConfigServerInetTable = MibTable((1, 3, 6, 1, 4, 1, 89, 92, 2, 2, 17), )
if mibBuilder.loadTexts: rlSntpConfigServerInetTable.setStatus('current')
rlSntpServerInetEntry = MibTableRow((1, 3, 6, 1, 4, 1, 89, 92, 2, 2, 17, 1), ).setIndexNames((0, "RADLAN-TIMESYNCHRONIZATION-MIB", "rlSntpServerInetAddressType"), (0, "RADLAN-TIMESYNCHRONIZATION-MIB", "rlSntpServerInetAddress"))
if mibBuilder.loadTexts: rlSntpServerInetEntry.setStatus('current')
rlSntpServerInetAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 92, 2, 2, 17, 1, 1), InetAddressType())
if mibBuilder.loadTexts: rlSntpServerInetAddressType.setStatus('current')
rlSntpServerInetAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 92, 2, 2, 17, 1, 2), InetAddress())
if mibBuilder.loadTexts: rlSntpServerInetAddress.setStatus('current')
rlSntpServerInetPolled = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 92, 2, 2, 17, 1, 3), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlSntpServerInetPolled.setStatus('current')
rlSntpServerInetStratum = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 92, 2, 2, 17, 1, 4), NTPStratum()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlSntpServerInetStratum.setStatus('current')
rlSntpServerInetLastResp = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 92, 2, 2, 17, 1, 5), NTPTimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlSntpServerInetLastResp.setStatus('current')
rlSntpServerInetStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 92, 2, 2, 17, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("unknown", 1), ("inProcess", 2), ("up", 3), ("down", 4))).clone('unknown')).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlSntpServerInetStatus.setStatus('current')
rlSntpServerInetOffset = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 92, 2, 2, 17, 1, 7), NTPTimeStamp()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: rlSntpServerInetOffset.setStatus('current')
rlSntpServerInetDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 92, 2, 2, 17, 1, 8), NTPSignedTimeValue()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: rlSntpServerInetDelay.setStatus('current')
rlSntpServerInetKeyIdentifier = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 92, 2, 2, 17, 1, 9), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlSntpServerInetKeyIdentifier.setStatus('current')
rlSntpServerInetRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 92, 2, 2, 17, 1, 10), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlSntpServerInetRowStatus.setStatus('current')
rlSntpAllServerInetTable = MibTable((1, 3, 6, 1, 4, 1, 89, 92, 2, 2, 18), )
if mibBuilder.loadTexts: rlSntpAllServerInetTable.setStatus('current')
rlSntpAllServerInetEntry = MibTableRow((1, 3, 6, 1, 4, 1, 89, 92, 2, 2, 18, 1), ).setIndexNames((0, "RADLAN-TIMESYNCHRONIZATION-MIB", "rlSntpAllServerSource"), (0, "RADLAN-TIMESYNCHRONIZATION-MIB", "rlSntpAllServerIfIndex"), (0, "RADLAN-TIMESYNCHRONIZATION-MIB", "rlSntpAllServerPreference"), (0, "RADLAN-TIMESYNCHRONIZATION-MIB", "rlSntpAllServerInetAddressType"), (0, "RADLAN-TIMESYNCHRONIZATION-MIB", "rlSntpAllServerInetAddress"))
if mibBuilder.loadTexts: rlSntpAllServerInetEntry.setStatus('current')
rlSntpAllServerSource = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 92, 2, 2, 18, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("static", 1), ("dhcpv6", 2))))
if mibBuilder.loadTexts: rlSntpAllServerSource.setStatus('current')
rlSntpAllServerIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 92, 2, 2, 18, 1, 2), InterfaceIndex())
if mibBuilder.loadTexts: rlSntpAllServerIfIndex.setStatus('current')
rlSntpAllServerPreference = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 92, 2, 2, 18, 1, 3), Integer32())
if mibBuilder.loadTexts: rlSntpAllServerPreference.setStatus('current')
rlSntpAllServerInetAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 92, 2, 2, 18, 1, 4), InetAddressType())
if mibBuilder.loadTexts: rlSntpAllServerInetAddressType.setStatus('current')
rlSntpAllServerInetAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 92, 2, 2, 18, 1, 5), InetAddress())
if mibBuilder.loadTexts: rlSntpAllServerInetAddress.setStatus('current')
rlSntpAllServerInetPolled = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 92, 2, 2, 18, 1, 6), TruthValue().clone('false')).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlSntpAllServerInetPolled.setStatus('current')
rlSntpAllServerInetStratum = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 92, 2, 2, 18, 1, 7), NTPStratum()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlSntpAllServerInetStratum.setStatus('current')
rlSntpAllServerInetLastResp = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 92, 2, 2, 18, 1, 8), NTPTimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlSntpAllServerInetLastResp.setStatus('current')
rlSntpAllServerInetStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 92, 2, 2, 18, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("unknown", 1), ("inProcess", 2), ("up", 3), ("down", 4))).clone('unknown')).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlSntpAllServerInetStatus.setStatus('current')
rlSntpAllServerInetOffset = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 92, 2, 2, 18, 1, 10), NTPTimeStamp()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: rlSntpAllServerInetOffset.setStatus('current')
rlSntpAllServerInetDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 92, 2, 2, 18, 1, 11), NTPSignedTimeValue()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: rlSntpAllServerInetDelay.setStatus('current')
rlSntpAllServerInetKeyIdentifier = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 92, 2, 2, 18, 1, 12), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlSntpAllServerInetKeyIdentifier.setStatus('current')
rlSntpRestoreDefaultServers = MibScalar((1, 3, 6, 1, 4, 1, 89, 92, 2, 2, 19), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlSntpRestoreDefaultServers.setStatus('current')
mibBuilder.exportSymbols("RADLAN-TIMESYNCHRONIZATION-MIB", rlSntpServerInetDelay=rlSntpServerInetDelay, NTPTimeStamp=NTPTimeStamp, rlTimeZoneDataDynamicConfSource=rlTimeZoneDataDynamicConfSource, rlSntpNtpConfigSrvInetAddressType=rlSntpNtpConfigSrvInetAddressType, rlSntpNtpConfigSrvIfIndex=rlSntpNtpConfigSrvIfIndex, rlSntpAnycastAdminState=rlSntpAnycastAdminState, rlSntpNtpConfigSyncSrvStratum=rlSntpNtpConfigSyncSrvStratum, rlTimeZoneTimeSyncMethod=rlTimeZoneTimeSyncMethod, rlSntpNtpConfigSyncSrvIfIndex=rlSntpNtpConfigSyncSrvIfIndex, rlSntpAuthenticationKeyID=rlSntpAuthenticationKeyID, rlSntpBroadcastRowStatus=rlSntpBroadcastRowStatus, rlSntpServerAddress=rlSntpServerAddress, rlDhcpTimezoneOptionEnabled=rlDhcpTimezoneOptionEnabled, rndTimeSyncManagedDate=rndTimeSyncManagedDate, rlSntpConfig=rlSntpConfig, rlSntpServerInetAddressType=rlSntpServerInetAddressType, rlSntpAllServerIfIndex=rlSntpAllServerIfIndex, rlSntpBroadcastIfIndex=rlSntpBroadcastIfIndex, rndTimeSyncManagedDateTime=rndTimeSyncManagedDateTime, RlDaylightSavingTimeMode=RlDaylightSavingTimeMode, rlSntpAnycastStratum=rlSntpAnycastStratum, rlSntpBroadcastInetAddressType=rlSntpBroadcastInetAddressType, rlTimeAndDateHaveBeenSet=rlTimeAndDateHaveBeenSet, rlSntpNtpClient=rlSntpNtpClient, rlSntpServerInetStatus=rlSntpServerInetStatus, rlSntpBroadcastStatus=rlSntpBroadcastStatus, rlSntpNtpConfig=rlSntpNtpConfig, rlSntpBroadcastInetIfAdminState=rlSntpBroadcastInetIfAdminState, rlTimeSyncMibVersion=rlTimeSyncMibVersion, PYSNMP_MODULE_ID=rlTimeSynchronization, rlSntpNtpConfigPrimaryPollSrvMrid=rlSntpNtpConfigPrimaryPollSrvMrid, rlSntpConfigServerInetTable=rlSntpConfigServerInetTable, rlSntpNtpConfigSysStratum=rlSntpNtpConfigSysStratum, rlAutomaticClockSetFromPCEnabled=rlAutomaticClockSetFromPCEnabled, rndTimeSyncManagedTime=rndTimeSyncManagedTime, rlSntpAllServerInetAddressType=rlSntpAllServerInetAddressType, rlSntpBroadcastInetIfIndex=rlSntpBroadcastInetIfIndex, rlSntpBroadcastInetEntry=rlSntpBroadcastInetEntry, rlSntpAuthenticationKeyState=rlSntpAuthenticationKeyState, rlSntpAnycastDelay=rlSntpAnycastDelay, rlSntpBroadcastAddress=rlSntpBroadcastAddress, rlSntpUnicastPollState=rlSntpUnicastPollState, rlTimeZoneTimeZoneOffset=rlTimeZoneTimeZoneOffset, rlTimeZoneName=rlTimeZoneName, rlSntpBroadcastInetDelay=rlSntpBroadcastInetDelay, rlSntpAnycastInetAddress=rlSntpAnycastInetAddress, rlTimeZone=rlTimeZone, rlSntpBroadcastInetLastResp=rlSntpBroadcastInetLastResp, rlTimeZoneDaylightSavingTimeCode=rlTimeZoneDaylightSavingTimeCode, NTPSignedTimeValue=NTPSignedTimeValue, rlSntpNtpConfigSyncSrvAddr=rlSntpNtpConfigSyncSrvAddr, rlSntpAuthenticationRowStatus=rlSntpAuthenticationRowStatus, rlSntpAnycastOffset=rlSntpAnycastOffset, rlSntpConfigAnycastInetTable=rlSntpConfigAnycastInetTable, rlSntpNtpConfigMode=rlSntpNtpConfigMode, rlSntpNtpConfigSyncSrvMrid=rlSntpNtpConfigSyncSrvMrid, rlSntpBroadcastInetStatus=rlSntpBroadcastInetStatus, rlSntpServersKeyIdentifier=rlSntpServersKeyIdentifier, rlSntpConfigBroadcastTable=rlSntpConfigBroadcastTable, rlSntpAnycastInetIfIndex=rlSntpAnycastInetIfIndex, rlSntpBroadcastInetPolled=rlSntpBroadcastInetPolled, rlTimeZoneTZDSTOffset=rlTimeZoneTZDSTOffset, rlSntpBroadcastAdminState=rlSntpBroadcastAdminState, rlTimeZoneDaylightSavingTimeOffset=rlTimeZoneDaylightSavingTimeOffset, rlSntpBroadcastDelay=rlSntpBroadcastDelay, rlSntpAnycastEntry=rlSntpAnycastEntry, rlSntpAllServerInetLastResp=rlSntpAllServerInetLastResp, rlSntpAnycastInetRowStatus=rlSntpAnycastInetRowStatus, rlSntpBroadcastLastResp=rlSntpBroadcastLastResp, rlSntpNtpConfigSrvTable=rlSntpNtpConfigSrvTable, rlSntpServerInetLastResp=rlSntpServerInetLastResp, rlSntpConfigBroadcastInetTable=rlSntpConfigBroadcastInetTable, rlTimeSyncMethod=rlTimeSyncMethod, rlSntpServerPolled=rlSntpServerPolled, rlSntpServerInetStratum=rlSntpServerInetStratum, rlSntpServerInetEntry=rlSntpServerInetEntry, rlTimeZoneDataType=rlTimeZoneDataType, rlDaylightSavingTimeMode=rlDaylightSavingTimeMode, rlSntpAuthenticationEntry=rlSntpAuthenticationEntry, rlSntpAllServerInetTable=rlSntpAllServerInetTable, rlSntpServerInetAddress=rlSntpServerInetAddress, rlTimeValidFlag=rlTimeValidFlag, rlTimeZoneDaylightSavingTimeStart=rlTimeZoneDaylightSavingTimeStart, rlSntpNtpMibVersion=rlSntpNtpMibVersion, rlSntpBroadcastInetOffset=rlSntpBroadcastInetOffset, rlDaylightSavingTimeOffset=rlDaylightSavingTimeOffset, rlSntpAnycastInetAddressType=rlSntpAnycastInetAddressType, rlDaylightSavingTimeStart=rlDaylightSavingTimeStart, rlSntpBroadcastIfAdminState=rlSntpBroadcastIfAdminState, rlSntpAllServerSource=rlSntpAllServerSource, rlSntpServerInetRowStatus=rlSntpServerInetRowStatus, rlSntpNtpConfigSrvInetAddress=rlSntpNtpConfigSrvInetAddress, rlSntpAllServerInetStratum=rlSntpAllServerInetStratum, rlSntpNtpConfigSyncSrvType=rlSntpNtpConfigSyncSrvType, rlSntpAllServerInetAddress=rlSntpAllServerInetAddress, rlSntpAllServerInetOffset=rlSntpAllServerInetOffset, rlSntpServerLastResp=rlSntpServerLastResp, rlSntpBroadcastEntry=rlSntpBroadcastEntry, rlTimeSynchronization=rlTimeSynchronization, rlSntpNtpConfigPollInterval=rlSntpNtpConfigPollInterval, rlTimeZoneTable=rlTimeZoneTable, rlTimeZoneIndex=rlTimeZoneIndex, rlSntpNtpConfigPrimaryPollSrvIfIndex=rlSntpNtpConfigPrimaryPollSrvIfIndex, rlSntpAnycastInetEntry=rlSntpAnycastInetEntry, rlSntpServerInetPolled=rlSntpServerInetPolled, rlSntpAnycastStatus=rlSntpAnycastStatus, rlSntpServerEntry=rlSntpServerEntry, rlSntpNtpConfigSrvMrid=rlSntpNtpConfigSrvMrid, rlSntpAllServerInetPolled=rlSntpAllServerInetPolled, rlSntpUnicastAdminState=rlSntpUnicastAdminState, rlSntpRestoreDefaultServers=rlSntpRestoreDefaultServers, rlDaylightSavingTimeEnd=rlDaylightSavingTimeEnd, rlTimeZoneTimeZoneName=rlTimeZoneTimeZoneName, rlSntpNtpConfigSrvEntry=rlSntpNtpConfigSrvEntry, rlSntpNtpConfigSrvStratum=rlSntpNtpConfigSrvStratum, rlSntpBroadcastInetStratum=rlSntpBroadcastInetStratum, rlSntpNtpConfigSrvSyncType=rlSntpNtpConfigSrvSyncType, rlSntpBroadcastInetAddress=rlSntpBroadcastInetAddress, rlSntpAnycastInetLastResp=rlSntpAnycastInetLastResp, rlSntpBroadcastPollState=rlSntpBroadcastPollState, rlSntpServerRowStatus=rlSntpServerRowStatus, rlSntpAnycastAddress=rlSntpAnycastAddress, RlTimeSyncMethod=RlTimeSyncMethod, rlSntpNtpConfigRetryTimeout=rlSntpNtpConfigRetryTimeout, rlDaylightSavingTimeCode=rlDaylightSavingTimeCode, rlSntpServerInetKeyIdentifier=rlSntpServerInetKeyIdentifier, rlSntpServerStratum=rlSntpServerStratum, rlSntpBroadcastPolled=rlSntpBroadcastPolled, NTPStratum=NTPStratum, rlSntpNtpConfigPrimaryPollSrvStratum=rlSntpNtpConfigPrimaryPollSrvStratum, rlNtpConfig=rlNtpConfig, rlSntpNtpConfigRetryCnt=rlSntpNtpConfigRetryCnt, rlSntpAuthenticationKeyValue=rlSntpAuthenticationKeyValue, rlSntpBroadcastOffset=rlSntpBroadcastOffset, rlSntpPort=rlSntpPort, rlSntpServersOffset=rlSntpServersOffset, rlTimeZoneEntry=rlTimeZoneEntry, RlSntpNtpSyncEntryType=RlSntpNtpSyncEntryType, rlSntpConfigServerTable=rlSntpConfigServerTable, rlTZDSTOffset=rlTZDSTOffset, rlSntpAnycastInetOffset=rlSntpAnycastInetOffset, rlSntpBroadcastMode=rlSntpBroadcastMode, rlTimeZoneDaylightSavingTimeEnd=rlTimeZoneDaylightSavingTimeEnd, rlSntpAnycastInetDelay=rlSntpAnycastInetDelay, rlSntpConfigAuthenticationTable=rlSntpConfigAuthenticationTable, rlSntpAllServerInetStatus=rlSntpAllServerInetStatus, rlTimeZoneDataSourceIfIndex=rlTimeZoneDataSourceIfIndex, rlSntpBroadcastStratum=rlSntpBroadcastStratum, rlTimeZoneTimeZoneCode=rlTimeZoneTimeZoneCode, rlTimeZoneCode=rlTimeZoneCode, rlSntpClientMode=rlSntpClientMode, rlSntpNtpConfigSrvEntryType=rlSntpNtpConfigSrvEntryType, rlClockStatus=rlClockStatus, rlSntpAnycastRowStatus=rlSntpAnycastRowStatus, rlSntpAnycastInetStratum=rlSntpAnycastInetStratum, rlSntpAllServerInetEntry=rlSntpAllServerInetEntry, rlSntpAnycastIfIndex=rlSntpAnycastIfIndex, rlSntpBroadcastInetRowStatus=rlSntpBroadcastInetRowStatus, rlSntpAllServerInetDelay=rlSntpAllServerInetDelay, rlTimeSyncMethodMode=rlTimeSyncMethodMode, rlSntpAnycastPollState=rlSntpAnycastPollState, rlSntpAllServerInetKeyIdentifier=rlSntpAllServerInetKeyIdentifier, rlSntpServerStatus=rlSntpServerStatus, rlSntpAuthenticationState=rlSntpAuthenticationState, rlSntpServersDelay=rlSntpServersDelay, RlSntpNtpSyncType=RlSntpNtpSyncType, rlSntpConfigAnycastTable=rlSntpConfigAnycastTable, rlSntpNtpConfigPrimaryPollSrvAddr=rlSntpNtpConfigPrimaryPollSrvAddr, rlSntpAllServerPreference=rlSntpAllServerPreference, rlSntpAnycastLastResp=rlSntpAnycastLastResp, rlSntpServerInetOffset=rlSntpServerInetOffset, rlSntpBroadcastInetMode=rlSntpBroadcastInetMode, rlTimeZoneDaylightSavingTimeMode=rlTimeZoneDaylightSavingTimeMode, rlSntpAnycastInetStatus=rlSntpAnycastInetStatus)
