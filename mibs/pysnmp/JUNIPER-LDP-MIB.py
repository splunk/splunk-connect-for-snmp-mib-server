#
# PySNMP MIB module JUNIPER-LDP-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/JUNIPER-LDP-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:48:55 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, SingleValueConstraint, ValueSizeConstraint, ValueRangeConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "SingleValueConstraint", "ValueSizeConstraint", "ValueRangeConstraint", "ConstraintsIntersection")
InterfaceIndexOrZero, InterfaceIndex = mibBuilder.importSymbols("IF-MIB", "InterfaceIndexOrZero", "InterfaceIndex")
InetAddressType, InetAddressPrefixLength, InetAddress = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddressType", "InetAddressPrefixLength", "InetAddress")
jnxMplsLdpSesState, = mibBuilder.importSymbols("JUNIPER-MPLS-LDP-MIB", "jnxMplsLdpSesState")
jnxLdpTraps, jnxMibs = mibBuilder.importSymbols("JUNIPER-SMI", "jnxLdpTraps", "jnxMibs")
MplsVpnName, = mibBuilder.importSymbols("MPLS-VPN-MIB", "MplsVpnName")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
Integer32, Gauge32, Counter64, ObjectIdentity, IpAddress, MibScalar, MibTable, MibTableRow, MibTableColumn, MibIdentifier, Bits, NotificationType, Counter32, Unsigned32, iso, ModuleIdentity, TimeTicks = mibBuilder.importSymbols("SNMPv2-SMI", "Integer32", "Gauge32", "Counter64", "ObjectIdentity", "IpAddress", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "MibIdentifier", "Bits", "NotificationType", "Counter32", "Unsigned32", "iso", "ModuleIdentity", "TimeTicks")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
jnxLdp = ModuleIdentity((1, 3, 6, 1, 4, 1, 2636, 3, 14))
jnxLdp.setRevisions(('2004-08-10 00:00', '2004-06-23 00:00', '2004-06-22 00:00', '2002-01-10 00:00',))
if mibBuilder.loadTexts: jnxLdp.setLastUpdated('200307182153Z')
if mibBuilder.loadTexts: jnxLdp.setOrganization('Juniper Networks, Inc.')
jnxLdpTrapVars = MibIdentifier((1, 3, 6, 1, 4, 1, 2636, 3, 14, 1))
jnxLdpTrapPrefix = MibIdentifier((1, 3, 6, 1, 4, 1, 2636, 4, 4, 0))
jnxLdpLspFec = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 14, 1, 1), IpAddress()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: jnxLdpLspFec.setStatus('current')
jnxLdpRtrid = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 14, 1, 2), IpAddress()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: jnxLdpRtrid.setStatus('current')
jnxLdpLspDownReason = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 14, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("topologyChanged", 1), ("receivedWithdrawl", 2), ("neighborDown", 3), ("filterChanged", 4), ("bfdSessionDown", 5), ("unknown", 6), ("lspingDown", 7)))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: jnxLdpLspDownReason.setStatus('current')
jnxLdpSesDownReason = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 14, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14))).clone(namedValues=NamedValues(("unknown", 0), ("holdExpired", 1), ("connectionExpired", 2), ("allAdjacenciesDown", 3), ("badTLV", 4), ("badPDU", 5), ("connectionError", 6), ("connectionReset", 7), ("peerSentNotification", 8), ("unexpectedEOF", 9), ("authenticationChanged", 10), ("initError", 11), ("gracefulRestartAbort", 12), ("cliCommand", 13), ("gracefulRestartChanged", 14)))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: jnxLdpSesDownReason.setStatus('current')
jnxLdpSesDownIf = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 14, 1, 5), InterfaceIndexOrZero()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: jnxLdpSesDownIf.setStatus('current')
jnxLdpLspFecLen = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 14, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 32))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: jnxLdpLspFecLen.setStatus('current')
jnxLdpSesUpIf = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 14, 1, 7), InterfaceIndexOrZero()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: jnxLdpSesUpIf.setStatus('current')
jnxLdpInstanceName = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 14, 1, 8), MplsVpnName()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: jnxLdpInstanceName.setStatus('current')
jnxLdpLspUp = NotificationType((1, 3, 6, 1, 4, 1, 2636, 4, 4, 0, 1)).setObjects(("JUNIPER-LDP-MIB", "jnxLdpLspFec"), ("JUNIPER-LDP-MIB", "jnxLdpRtrid"), ("JUNIPER-LDP-MIB", "jnxLdpLspFecLen"), ("JUNIPER-LDP-MIB", "jnxLdpInstanceName"))
if mibBuilder.loadTexts: jnxLdpLspUp.setStatus('current')
jnxLdpLspDown = NotificationType((1, 3, 6, 1, 4, 1, 2636, 4, 4, 0, 2)).setObjects(("JUNIPER-LDP-MIB", "jnxLdpLspFec"), ("JUNIPER-LDP-MIB", "jnxLdpRtrid"), ("JUNIPER-LDP-MIB", "jnxLdpLspDownReason"), ("JUNIPER-LDP-MIB", "jnxLdpLspFecLen"), ("JUNIPER-LDP-MIB", "jnxLdpInstanceName"))
if mibBuilder.loadTexts: jnxLdpLspDown.setStatus('current')
jnxLdpSesUp = NotificationType((1, 3, 6, 1, 4, 1, 2636, 4, 4, 0, 3)).setObjects(("JUNIPER-MPLS-LDP-MIB", "jnxMplsLdpSesState"), ("JUNIPER-LDP-MIB", "jnxLdpSesUpIf"))
if mibBuilder.loadTexts: jnxLdpSesUp.setStatus('current')
jnxLdpSesDown = NotificationType((1, 3, 6, 1, 4, 1, 2636, 4, 4, 0, 4)).setObjects(("JUNIPER-MPLS-LDP-MIB", "jnxMplsLdpSesState"), ("JUNIPER-LDP-MIB", "jnxLdpSesDownReason"), ("JUNIPER-LDP-MIB", "jnxLdpSesDownIf"))
if mibBuilder.loadTexts: jnxLdpSesDown.setStatus('current')
jnxLdpStatsTable = MibTable((1, 3, 6, 1, 4, 1, 2636, 3, 14, 2), )
if mibBuilder.loadTexts: jnxLdpStatsTable.setStatus('current')
jnxLdpStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2636, 3, 14, 2, 1), ).setIndexNames((0, "JUNIPER-LDP-MIB", "jnxLdpInstanceId"), (0, "JUNIPER-LDP-MIB", "jnxLdpFecType"), (0, "JUNIPER-LDP-MIB", "jnxLdpFec"), (0, "JUNIPER-LDP-MIB", "jnxLdpFecLength"))
if mibBuilder.loadTexts: jnxLdpStatsEntry.setStatus('current')
jnxLdpInstanceId = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 14, 2, 1, 1), Unsigned32())
if mibBuilder.loadTexts: jnxLdpInstanceId.setStatus('current')
jnxLdpFecType = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 14, 2, 1, 2), InetAddressType())
if mibBuilder.loadTexts: jnxLdpFecType.setStatus('current')
jnxLdpFec = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 14, 2, 1, 3), InetAddress().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(4, 4), ValueSizeConstraint(16, 16), )))
if mibBuilder.loadTexts: jnxLdpFec.setStatus('current')
jnxLdpFecLength = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 14, 2, 1, 4), InetAddressPrefixLength().subtype(subtypeSpec=ValueRangeConstraint(0, 32)))
if mibBuilder.loadTexts: jnxLdpFecLength.setStatus('current')
jnxLdpFecStatisticsStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 14, 2, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("ok", 1), ("disabled", 2), ("unavailable", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxLdpFecStatisticsStatus.setStatus('current')
jnxLdpIngressOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 14, 2, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxLdpIngressOctets.setStatus('current')
jnxLdpIngressPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 14, 2, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxLdpIngressPackets.setStatus('current')
jnxLdpTransitOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 14, 2, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxLdpTransitOctets.setStatus('current')
jnxLdpTransitPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 14, 2, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxLdpTransitPackets.setStatus('current')
mibBuilder.exportSymbols("JUNIPER-LDP-MIB", jnxLdpFecLength=jnxLdpFecLength, jnxLdpIngressOctets=jnxLdpIngressOctets, jnxLdpLspFecLen=jnxLdpLspFecLen, jnxLdpFecStatisticsStatus=jnxLdpFecStatisticsStatus, jnxLdpIngressPackets=jnxLdpIngressPackets, jnxLdpSesUp=jnxLdpSesUp, jnxLdpLspDown=jnxLdpLspDown, PYSNMP_MODULE_ID=jnxLdp, jnxLdpSesDown=jnxLdpSesDown, jnxLdpStatsEntry=jnxLdpStatsEntry, jnxLdpInstanceId=jnxLdpInstanceId, jnxLdpStatsTable=jnxLdpStatsTable, jnxLdpLspFec=jnxLdpLspFec, jnxLdpTransitOctets=jnxLdpTransitOctets, jnxLdpFec=jnxLdpFec, jnxLdpLspDownReason=jnxLdpLspDownReason, jnxLdp=jnxLdp, jnxLdpTrapPrefix=jnxLdpTrapPrefix, jnxLdpInstanceName=jnxLdpInstanceName, jnxLdpTrapVars=jnxLdpTrapVars, jnxLdpSesUpIf=jnxLdpSesUpIf, jnxLdpRtrid=jnxLdpRtrid, jnxLdpSesDownIf=jnxLdpSesDownIf, jnxLdpSesDownReason=jnxLdpSesDownReason, jnxLdpLspUp=jnxLdpLspUp, jnxLdpTransitPackets=jnxLdpTransitPackets, jnxLdpFecType=jnxLdpFecType)
