#
# PySNMP MIB module SONUS-SOFTSWITCH-CLIENT-SERVICES-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/SONUS-SOFTSWITCH-CLIENT-SERVICES-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 21:02:09 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ValueSizeConstraint, SingleValueConstraint, ValueRangeConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ValueSizeConstraint", "SingleValueConstraint", "ValueRangeConstraint", "ConstraintsIntersection")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Integer32, ModuleIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, NotificationType, TimeTicks, ObjectIdentity, Unsigned32, iso, Gauge32, MibIdentifier, Counter32, Counter64, IpAddress, Bits = mibBuilder.importSymbols("SNMPv2-SMI", "Integer32", "ModuleIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "NotificationType", "TimeTicks", "ObjectIdentity", "Unsigned32", "iso", "Gauge32", "MibIdentifier", "Counter32", "Counter64", "IpAddress", "Bits")
TextualConvention, DisplayString, RowStatus = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString", "RowStatus")
sonusEventClass, sonusEventDescription, sonusEventLevel = mibBuilder.importSymbols("SONUS-COMMON-MIB", "sonusEventClass", "sonusEventDescription", "sonusEventLevel")
sonusServicesMIBs, = mibBuilder.importSymbols("SONUS-SMI", "sonusServicesMIBs")
SonusName, = mibBuilder.importSymbols("SONUS-TC", "SonusName")
sonusSoftswitchClientServicesMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 2879, 2, 5, 6))
if mibBuilder.loadTexts: sonusSoftswitchClientServicesMIB.setLastUpdated('200102030000Z')
if mibBuilder.loadTexts: sonusSoftswitchClientServicesMIB.setOrganization('Sonus Networks, Inc.')
sonusSoftswitchClientServicesMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2879, 2, 5, 6, 1))
sonusSoftswitch = MibIdentifier((1, 3, 6, 1, 4, 1, 2879, 2, 5, 6, 1, 1))
sonusPscsConfigObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2879, 2, 5, 6, 1, 1, 1))
sonusPscsReconnectTimeOut = MibScalar((1, 3, 6, 1, 4, 1, 2879, 2, 5, 6, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 3600)).clone(10)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusPscsReconnectTimeOut.setStatus('current')
sonusPscsSwitchOver = MibScalar((1, 3, 6, 1, 4, 1, 2879, 2, 5, 6, 1, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("automatic", 1), ("manual", 2))).clone('automatic')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusPscsSwitchOver.setStatus('current')
sonusPscsAdmn = MibIdentifier((1, 3, 6, 1, 4, 1, 2879, 2, 5, 6, 1, 1, 2))
sonusPscsAdmnNextIndex = MibScalar((1, 3, 6, 1, 4, 1, 2879, 2, 5, 6, 1, 1, 2, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusPscsAdmnNextIndex.setStatus('current')
sonusPscsAdmnTable = MibTable((1, 3, 6, 1, 4, 1, 2879, 2, 5, 6, 1, 1, 2, 2), )
if mibBuilder.loadTexts: sonusPscsAdmnTable.setStatus('current')
sonusPscsAdmnEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2879, 2, 5, 6, 1, 1, 2, 2, 1), ).setIndexNames((0, "SONUS-SOFTSWITCH-CLIENT-SERVICES-MIB", "sonusPscsPolicyServerIndex"))
if mibBuilder.loadTexts: sonusPscsAdmnEntry.setStatus('current')
sonusPscsPolicyServerIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 5, 6, 1, 1, 2, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusPscsPolicyServerIndex.setStatus('current')
sonusPscsPolicyServerName = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 5, 6, 1, 1, 2, 2, 1, 2), SonusName()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusPscsPolicyServerName.setStatus('current')
sonusPscsPolicyServerIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 5, 6, 1, 1, 2, 2, 1, 3), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusPscsPolicyServerIpAddress.setStatus('current')
sonusPscsPolicyServerPortNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 5, 6, 1, 1, 2, 2, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)).clone(3055)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusPscsPolicyServerPortNum.setStatus('current')
sonusPscsPolicyServerAdmnState = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 5, 6, 1, 1, 2, 2, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusPscsPolicyServerAdmnState.setStatus('current')
sonusPscsPolicyServerMode = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 5, 6, 1, 1, 2, 2, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("active", 1), ("standby", 2), ("outOfService", 3))).clone('outOfService')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusPscsPolicyServerMode.setStatus('current')
sonusPscsPolicyServerAction = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 5, 6, 1, 1, 2, 2, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("dryUp", 1), ("force", 2))).clone('dryUp')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusPscsPolicyServerAction.setStatus('current')
sonusPscsTransactionTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 5, 6, 1, 1, 2, 2, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(50, 60000)).clone(500)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusPscsTransactionTimer.setStatus('current')
sonusPscsKeepAliveTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 5, 6, 1, 1, 2, 2, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 60)).clone(15)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusPscsKeepAliveTimer.setStatus('current')
sonusPscsRetryTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 5, 6, 1, 1, 2, 2, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(50, 60000)).clone(500)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusPscsRetryTimer.setStatus('current')
sonusPscsRetries = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 5, 6, 1, 1, 2, 2, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 32)).clone(3)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusPscsRetries.setStatus('current')
sonusPscsPolicyServerRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 5, 6, 1, 1, 2, 2, 1, 12), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusPscsPolicyServerRowStatus.setStatus('current')
sonusPscsStatusTable = MibTable((1, 3, 6, 1, 4, 1, 2879, 2, 5, 6, 1, 1, 3), )
if mibBuilder.loadTexts: sonusPscsStatusTable.setStatus('current')
sonusPscsStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2879, 2, 5, 6, 1, 1, 3, 1), ).setIndexNames((0, "SONUS-SOFTSWITCH-CLIENT-SERVICES-MIB", "sonusPscsStatusIndex"))
if mibBuilder.loadTexts: sonusPscsStatusEntry.setStatus('current')
sonusPscsStatusIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 5, 6, 1, 1, 3, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusPscsStatusIndex.setStatus('current')
sonusPscsOperState = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 5, 6, 1, 1, 3, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("active", 1), ("standby", 2), ("congested", 3), ("down", 4), ("dryingup", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusPscsOperState.setStatus('current')
sonusPscsAverageTransactionTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 5, 6, 1, 1, 3, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusPscsAverageTransactionTime.setStatus('current')
sonusPscsServerReconnects = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 5, 6, 1, 1, 3, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusPscsServerReconnects.setStatus('current')
sonusPscsTransactionCompleted = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 5, 6, 1, 1, 3, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusPscsTransactionCompleted.setStatus('current')
sonusPscsTransactionRetryAttempts = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 5, 6, 1, 1, 3, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusPscsTransactionRetryAttempts.setStatus('current')
sonusPscsTransactionFailedAttempts = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 5, 6, 1, 1, 3, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusPscsTransactionFailedAttempts.setStatus('current')
sonusPscsVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 5, 6, 1, 1, 3, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusPscsVersion.setStatus('current')
sonusSoftswitchClientServicesMIBNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 2879, 2, 5, 6, 2))
sonusSoftswitchClientServicesMIBNotificationsPrefix = MibIdentifier((1, 3, 6, 1, 4, 1, 2879, 2, 5, 6, 2, 0))
sonusSoftswitchClientServicesMIBNotificationsObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2879, 2, 5, 6, 2, 1))
sonusPscsInServiceReason = MibScalar((1, 3, 6, 1, 4, 1, 2879, 2, 5, 6, 2, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("configured", 1), ("successfulReConnect", 2), ("automatic", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusPscsInServiceReason.setStatus('current')
sonusPscsOutOfServiceReason = MibScalar((1, 3, 6, 1, 4, 1, 2879, 2, 5, 6, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("configured", 1), ("connectionLoss", 2), ("noConnection", 3), ("nodeNameChange", 4), ("incompatibleVersion", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusPscsOutOfServiceReason.setStatus('current')
sonusPscsSwitchoverReason = MibScalar((1, 3, 6, 1, 4, 1, 2879, 2, 5, 6, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("configured", 1), ("automatic", 2), ("versionChanged", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusPscsSwitchoverReason.setStatus('current')
sonusPscsRouteFailureReason = MibScalar((1, 3, 6, 1, 4, 1, 2879, 2, 5, 6, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("routeNotFound", 1), ("noServiceConfigured", 2), ("databaseError", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusPscsRouteFailureReason.setStatus('current')
sonusPscsCallInfo = MibScalar((1, 3, 6, 1, 4, 1, 2879, 2, 5, 6, 2, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusPscsCallInfo.setStatus('current')
sonusPscsTranErrorReason = MibScalar((1, 3, 6, 1, 4, 1, 2879, 2, 5, 6, 2, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("noSoftswitchAvailable", 1), ("transactionTimeout", 2), ("invalidParameters", 3), ("receiveError", 4), ("transmitError", 5), ("encodeApiError", 6), ("decodeApiError", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusPscsTranErrorReason.setStatus('current')
sonusPscsRejectIndReason = MibScalar((1, 3, 6, 1, 4, 1, 2879, 2, 5, 6, 2, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("notRegistered", 1), ("unknownGateway", 2), ("errorAVPContent", 3), ("errorMsgContent", 4), ("maxClientAccount", 5), ("miscRegFailure", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusPscsRejectIndReason.setStatus('current')
sonusPscsCalledNumber = MibScalar((1, 3, 6, 1, 4, 1, 2879, 2, 5, 6, 2, 1, 8), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusPscsCalledNumber.setStatus('current')
sonusPscsCallingNumber = MibScalar((1, 3, 6, 1, 4, 1, 2879, 2, 5, 6, 2, 1, 9), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusPscsCallingNumber.setStatus('current')
sonusPscsCarrierCode = MibScalar((1, 3, 6, 1, 4, 1, 2879, 2, 5, 6, 2, 1, 10), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusPscsCarrierCode.setStatus('current')
sonusSscsInServiceNotification = NotificationType((1, 3, 6, 1, 4, 1, 2879, 2, 5, 6, 2, 0, 1)).setObjects(("SONUS-SOFTSWITCH-CLIENT-SERVICES-MIB", "sonusPscsPolicyServerName"), ("SONUS-SOFTSWITCH-CLIENT-SERVICES-MIB", "sonusPscsOperState"), ("SONUS-SOFTSWITCH-CLIENT-SERVICES-MIB", "sonusPscsInServiceReason"), ("SONUS-COMMON-MIB", "sonusEventDescription"), ("SONUS-COMMON-MIB", "sonusEventClass"), ("SONUS-COMMON-MIB", "sonusEventLevel"))
if mibBuilder.loadTexts: sonusSscsInServiceNotification.setStatus('current')
sonusSscsOutOfServiceNotification = NotificationType((1, 3, 6, 1, 4, 1, 2879, 2, 5, 6, 2, 0, 2)).setObjects(("SONUS-SOFTSWITCH-CLIENT-SERVICES-MIB", "sonusPscsPolicyServerName"), ("SONUS-SOFTSWITCH-CLIENT-SERVICES-MIB", "sonusPscsOutOfServiceReason"), ("SONUS-COMMON-MIB", "sonusEventDescription"), ("SONUS-COMMON-MIB", "sonusEventClass"), ("SONUS-COMMON-MIB", "sonusEventLevel"))
if mibBuilder.loadTexts: sonusSscsOutOfServiceNotification.setStatus('current')
sonusSscsSwitchoverNotification = NotificationType((1, 3, 6, 1, 4, 1, 2879, 2, 5, 6, 2, 0, 3)).setObjects(("SONUS-SOFTSWITCH-CLIENT-SERVICES-MIB", "sonusPscsPolicyServerName"), ("SONUS-SOFTSWITCH-CLIENT-SERVICES-MIB", "sonusPscsSwitchoverReason"), ("SONUS-COMMON-MIB", "sonusEventDescription"), ("SONUS-COMMON-MIB", "sonusEventClass"), ("SONUS-COMMON-MIB", "sonusEventLevel"))
if mibBuilder.loadTexts: sonusSscsSwitchoverNotification.setStatus('current')
sonusSscsRouteFailureNotification = NotificationType((1, 3, 6, 1, 4, 1, 2879, 2, 5, 6, 2, 0, 4)).setObjects(("SONUS-SOFTSWITCH-CLIENT-SERVICES-MIB", "sonusPscsPolicyServerName"), ("SONUS-SOFTSWITCH-CLIENT-SERVICES-MIB", "sonusPscsRouteFailureReason"), ("SONUS-SOFTSWITCH-CLIENT-SERVICES-MIB", "sonusPscsCalledNumber"), ("SONUS-SOFTSWITCH-CLIENT-SERVICES-MIB", "sonusPscsCallingNumber"), ("SONUS-SOFTSWITCH-CLIENT-SERVICES-MIB", "sonusPscsCarrierCode"), ("SONUS-COMMON-MIB", "sonusEventDescription"), ("SONUS-COMMON-MIB", "sonusEventClass"), ("SONUS-COMMON-MIB", "sonusEventLevel"))
if mibBuilder.loadTexts: sonusSscsRouteFailureNotification.setStatus('current')
sonusSscsTransErrorNotification = NotificationType((1, 3, 6, 1, 4, 1, 2879, 2, 5, 6, 2, 0, 5)).setObjects(("SONUS-SOFTSWITCH-CLIENT-SERVICES-MIB", "sonusPscsPolicyServerName"), ("SONUS-SOFTSWITCH-CLIENT-SERVICES-MIB", "sonusPscsTranErrorReason"), ("SONUS-COMMON-MIB", "sonusEventDescription"), ("SONUS-COMMON-MIB", "sonusEventClass"), ("SONUS-COMMON-MIB", "sonusEventLevel"))
if mibBuilder.loadTexts: sonusSscsTransErrorNotification.setStatus('current')
sonusSscsRejectIndNotification = NotificationType((1, 3, 6, 1, 4, 1, 2879, 2, 5, 6, 2, 0, 6)).setObjects(("SONUS-SOFTSWITCH-CLIENT-SERVICES-MIB", "sonusPscsPolicyServerName"), ("SONUS-SOFTSWITCH-CLIENT-SERVICES-MIB", "sonusPscsRejectIndReason"), ("SONUS-COMMON-MIB", "sonusEventDescription"), ("SONUS-COMMON-MIB", "sonusEventClass"), ("SONUS-COMMON-MIB", "sonusEventLevel"))
if mibBuilder.loadTexts: sonusSscsRejectIndNotification.setStatus('current')
mibBuilder.exportSymbols("SONUS-SOFTSWITCH-CLIENT-SERVICES-MIB", sonusSscsTransErrorNotification=sonusSscsTransErrorNotification, sonusPscsCarrierCode=sonusPscsCarrierCode, sonusSoftswitchClientServicesMIBObjects=sonusSoftswitchClientServicesMIBObjects, sonusPscsAdmnNextIndex=sonusPscsAdmnNextIndex, sonusPscsPolicyServerAction=sonusPscsPolicyServerAction, sonusPscsStatusEntry=sonusPscsStatusEntry, sonusPscsPolicyServerName=sonusPscsPolicyServerName, sonusPscsStatusTable=sonusPscsStatusTable, sonusSoftswitch=sonusSoftswitch, sonusPscsCallingNumber=sonusPscsCallingNumber, sonusSoftswitchClientServicesMIB=sonusSoftswitchClientServicesMIB, sonusPscsAdmnEntry=sonusPscsAdmnEntry, sonusPscsServerReconnects=sonusPscsServerReconnects, sonusPscsTransactionTimer=sonusPscsTransactionTimer, sonusPscsVersion=sonusPscsVersion, sonusPscsRouteFailureReason=sonusPscsRouteFailureReason, sonusSscsOutOfServiceNotification=sonusSscsOutOfServiceNotification, sonusPscsAdmn=sonusPscsAdmn, sonusPscsCallInfo=sonusPscsCallInfo, sonusSscsInServiceNotification=sonusSscsInServiceNotification, sonusPscsPolicyServerIpAddress=sonusPscsPolicyServerIpAddress, sonusSoftswitchClientServicesMIBNotificationsPrefix=sonusSoftswitchClientServicesMIBNotificationsPrefix, sonusPscsInServiceReason=sonusPscsInServiceReason, sonusPscsTransactionFailedAttempts=sonusPscsTransactionFailedAttempts, sonusPscsSwitchOver=sonusPscsSwitchOver, sonusSscsRouteFailureNotification=sonusSscsRouteFailureNotification, sonusPscsTransactionCompleted=sonusPscsTransactionCompleted, sonusSoftswitchClientServicesMIBNotifications=sonusSoftswitchClientServicesMIBNotifications, sonusPscsPolicyServerIndex=sonusPscsPolicyServerIndex, sonusPscsConfigObjects=sonusPscsConfigObjects, sonusPscsRetries=sonusPscsRetries, sonusSscsSwitchoverNotification=sonusSscsSwitchoverNotification, sonusPscsAdmnTable=sonusPscsAdmnTable, sonusPscsTransactionRetryAttempts=sonusPscsTransactionRetryAttempts, sonusPscsRetryTimer=sonusPscsRetryTimer, sonusPscsReconnectTimeOut=sonusPscsReconnectTimeOut, sonusSscsRejectIndNotification=sonusSscsRejectIndNotification, sonusPscsPolicyServerPortNum=sonusPscsPolicyServerPortNum, sonusPscsCalledNumber=sonusPscsCalledNumber, sonusPscsPolicyServerMode=sonusPscsPolicyServerMode, sonusPscsOutOfServiceReason=sonusPscsOutOfServiceReason, sonusPscsOperState=sonusPscsOperState, PYSNMP_MODULE_ID=sonusSoftswitchClientServicesMIB, sonusPscsPolicyServerAdmnState=sonusPscsPolicyServerAdmnState, sonusPscsRejectIndReason=sonusPscsRejectIndReason, sonusPscsPolicyServerRowStatus=sonusPscsPolicyServerRowStatus, sonusPscsAverageTransactionTime=sonusPscsAverageTransactionTime, sonusPscsStatusIndex=sonusPscsStatusIndex, sonusPscsSwitchoverReason=sonusPscsSwitchoverReason, sonusPscsTranErrorReason=sonusPscsTranErrorReason, sonusSoftswitchClientServicesMIBNotificationsObjects=sonusSoftswitchClientServicesMIBNotificationsObjects, sonusPscsKeepAliveTimer=sonusPscsKeepAliveTimer)
