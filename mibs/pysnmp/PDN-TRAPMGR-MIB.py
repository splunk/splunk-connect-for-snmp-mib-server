#
# PySNMP MIB module PDN-TRAPMGR-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/PDN-TRAPMGR-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 20:30:53 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ValueRangeConstraint, ValueSizeConstraint, SingleValueConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ValueRangeConstraint", "ValueSizeConstraint", "SingleValueConstraint", "ConstraintsIntersection")
pdn_traps, = mibBuilder.importSymbols("PDN-HEADER-MIB", "pdn-traps")
SwitchState, = mibBuilder.importSymbols("PDN-TC", "SwitchState")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
MibIdentifier, IpAddress, iso, Gauge32, ObjectIdentity, TimeTicks, Bits, Counter32, NotificationType, ModuleIdentity, Counter64, Integer32, Unsigned32, MibScalar, MibTable, MibTableRow, MibTableColumn = mibBuilder.importSymbols("SNMPv2-SMI", "MibIdentifier", "IpAddress", "iso", "Gauge32", "ObjectIdentity", "TimeTicks", "Bits", "Counter32", "NotificationType", "ModuleIdentity", "Counter64", "Integer32", "Unsigned32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn")
RowStatus, TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "RowStatus", "TextualConvention", "DisplayString")
devTrapMgrMaxNumber = MibScalar((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 9, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: devTrapMgrMaxNumber.setStatus('mandatory')
devTrapMgrCurrentNumber = MibScalar((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 9, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: devTrapMgrCurrentNumber.setStatus('mandatory')
devTrapMgrTable = MibTable((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 9, 3), )
if mibBuilder.loadTexts: devTrapMgrTable.setStatus('mandatory')
devTrapMgrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 9, 3, 1), ).setIndexNames((0, "PDN-TRAPMGR-MIB", "devTrapMgrIpAddress"))
if mibBuilder.loadTexts: devTrapMgrEntry.setStatus('mandatory')
devTrapMgrIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 9, 3, 1, 1), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: devTrapMgrIpAddress.setStatus('mandatory')
devTrapMgrDestination = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 9, 3, 1, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: devTrapMgrDestination.setStatus('mandatory')
devTrapMgrCircuit = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 9, 3, 1, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: devTrapMgrCircuit.setStatus('mandatory')
devTrapMgrSubCircuit = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 9, 3, 1, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: devTrapMgrSubCircuit.setStatus('mandatory')
pdnDevTrapMgrTable = MibTable((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 9, 4), )
if mibBuilder.loadTexts: pdnDevTrapMgrTable.setStatus('mandatory')
pdnDevTrapMgrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 9, 4, 1), ).setIndexNames((0, "PDN-TRAPMGR-MIB", "pdnDevTrapMgrDestAddress"), (0, "PDN-TRAPMGR-MIB", "pdnDevTrapMgrSubnetMask"))
if mibBuilder.loadTexts: pdnDevTrapMgrEntry.setStatus('mandatory')
pdnDevTrapMgrDestAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 9, 4, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pdnDevTrapMgrDestAddress.setStatus('mandatory')
pdnDevTrapMgrSubnetMask = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 9, 4, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pdnDevTrapMgrSubnetMask.setStatus('mandatory')
pdnDevTrapMgrDestPort = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 9, 4, 1, 3), Integer32().clone(162)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pdnDevTrapMgrDestPort.setStatus('mandatory')
pdnDevTrapMgrCommunityName = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 9, 4, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32)).clone('public')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pdnDevTrapMgrCommunityName.setStatus('mandatory')
pdnDevTrapMgrEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 9, 4, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pdnDevTrapMgrEnable.setStatus('mandatory')
pdnDevTrapMgrRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 9, 4, 1, 6), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pdnDevTrapMgrRowStatus.setStatus('mandatory')
pdnDevConfigTrapsEnable = MibScalar((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 9, 5), SwitchState()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pdnDevConfigTrapsEnable.setStatus('mandatory')
mibBuilder.exportSymbols("PDN-TRAPMGR-MIB", devTrapMgrMaxNumber=devTrapMgrMaxNumber, devTrapMgrDestination=devTrapMgrDestination, pdnDevTrapMgrDestAddress=pdnDevTrapMgrDestAddress, pdnDevTrapMgrTable=pdnDevTrapMgrTable, devTrapMgrSubCircuit=devTrapMgrSubCircuit, pdnDevTrapMgrSubnetMask=pdnDevTrapMgrSubnetMask, devTrapMgrEntry=devTrapMgrEntry, pdnDevTrapMgrRowStatus=pdnDevTrapMgrRowStatus, devTrapMgrCurrentNumber=devTrapMgrCurrentNumber, pdnDevTrapMgrDestPort=pdnDevTrapMgrDestPort, devTrapMgrCircuit=devTrapMgrCircuit, pdnDevTrapMgrEntry=pdnDevTrapMgrEntry, pdnDevConfigTrapsEnable=pdnDevConfigTrapsEnable, devTrapMgrIpAddress=devTrapMgrIpAddress, pdnDevTrapMgrCommunityName=pdnDevTrapMgrCommunityName, devTrapMgrTable=devTrapMgrTable, pdnDevTrapMgrEnable=pdnDevTrapMgrEnable)
