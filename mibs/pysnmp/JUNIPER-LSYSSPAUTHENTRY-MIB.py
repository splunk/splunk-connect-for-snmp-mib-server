#
# PySNMP MIB module JUNIPER-LSYSSPAUTHENTRY-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/JUNIPER-LSYSSPAUTHENTRY-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:49:16 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ConstraintsUnion, ValueSizeConstraint, SingleValueConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ConstraintsUnion", "ValueSizeConstraint", "SingleValueConstraint", "ConstraintsIntersection")
jnxLsysSpAuthentry, = mibBuilder.importSymbols("JUNIPER-LSYS-SECURITYPROFILE-MIB", "jnxLsysSpAuthentry")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
Counter32, Unsigned32, NotificationType, TimeTicks, Gauge32, Bits, iso, ObjectIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, Integer32, ModuleIdentity, Counter64, IpAddress, MibIdentifier = mibBuilder.importSymbols("SNMPv2-SMI", "Counter32", "Unsigned32", "NotificationType", "TimeTicks", "Gauge32", "Bits", "iso", "ObjectIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Integer32", "ModuleIdentity", "Counter64", "IpAddress", "MibIdentifier")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
jnxLsysSpAuthentryMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 17, 7, 1))
if mibBuilder.loadTexts: jnxLsysSpAuthentryMIB.setLastUpdated('201005191644Z')
if mibBuilder.loadTexts: jnxLsysSpAuthentryMIB.setOrganization('Juniper Networks, Inc.')
jnxLsysSpAuthentryObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 17, 7, 1, 1))
jnxLsysSpAuthentrySummary = MibIdentifier((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 17, 7, 1, 2))
jnxLsysSpAuthentryTable = MibTable((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 17, 7, 1, 1, 1), )
if mibBuilder.loadTexts: jnxLsysSpAuthentryTable.setStatus('current')
jnxLsysSpAuthentryEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 17, 7, 1, 1, 1, 1), ).setIndexNames((1, "JUNIPER-LSYSSPAUTHENTRY-MIB", "jnxLsysSpAuthentryLsysName"))
if mibBuilder.loadTexts: jnxLsysSpAuthentryEntry.setStatus('current')
jnxLsysSpAuthentryLsysName = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 17, 7, 1, 1, 1, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 64)))
if mibBuilder.loadTexts: jnxLsysSpAuthentryLsysName.setStatus('current')
jnxLsysSpAuthentryProfileName = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 17, 7, 1, 1, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxLsysSpAuthentryProfileName.setStatus('current')
jnxLsysSpAuthentryUsage = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 17, 7, 1, 1, 1, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxLsysSpAuthentryUsage.setStatus('current')
jnxLsysSpAuthentryReserved = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 17, 7, 1, 1, 1, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxLsysSpAuthentryReserved.setStatus('current')
jnxLsysSpAuthentryMaximum = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 17, 7, 1, 1, 1, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxLsysSpAuthentryMaximum.setStatus('current')
jnxLsysSpAuthentryUsedAmount = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 17, 7, 1, 2, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxLsysSpAuthentryUsedAmount.setStatus('current')
jnxLsysSpAuthentryMaxQuota = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 17, 7, 1, 2, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxLsysSpAuthentryMaxQuota.setStatus('current')
jnxLsysSpAuthentryAvailableAmount = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 17, 7, 1, 2, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxLsysSpAuthentryAvailableAmount.setStatus('current')
jnxLsysSpAuthentryHeaviestUsage = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 17, 7, 1, 2, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxLsysSpAuthentryHeaviestUsage.setStatus('current')
jnxLsysSpAuthentryHeaviestUser = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 17, 7, 1, 2, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxLsysSpAuthentryHeaviestUser.setStatus('current')
jnxLsysSpAuthentryLightestUsage = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 17, 7, 1, 2, 6), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxLsysSpAuthentryLightestUsage.setStatus('current')
jnxLsysSpAuthentryLightestUser = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 17, 7, 1, 2, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxLsysSpAuthentryLightestUser.setStatus('current')
mibBuilder.exportSymbols("JUNIPER-LSYSSPAUTHENTRY-MIB", jnxLsysSpAuthentryMaximum=jnxLsysSpAuthentryMaximum, jnxLsysSpAuthentryMaxQuota=jnxLsysSpAuthentryMaxQuota, jnxLsysSpAuthentryHeaviestUsage=jnxLsysSpAuthentryHeaviestUsage, jnxLsysSpAuthentryUsage=jnxLsysSpAuthentryUsage, jnxLsysSpAuthentryUsedAmount=jnxLsysSpAuthentryUsedAmount, jnxLsysSpAuthentryObjects=jnxLsysSpAuthentryObjects, jnxLsysSpAuthentryHeaviestUser=jnxLsysSpAuthentryHeaviestUser, jnxLsysSpAuthentrySummary=jnxLsysSpAuthentrySummary, jnxLsysSpAuthentryLsysName=jnxLsysSpAuthentryLsysName, jnxLsysSpAuthentryEntry=jnxLsysSpAuthentryEntry, jnxLsysSpAuthentryReserved=jnxLsysSpAuthentryReserved, jnxLsysSpAuthentryLightestUsage=jnxLsysSpAuthentryLightestUsage, jnxLsysSpAuthentryTable=jnxLsysSpAuthentryTable, jnxLsysSpAuthentryAvailableAmount=jnxLsysSpAuthentryAvailableAmount, jnxLsysSpAuthentryProfileName=jnxLsysSpAuthentryProfileName, jnxLsysSpAuthentryLightestUser=jnxLsysSpAuthentryLightestUser, jnxLsysSpAuthentryMIB=jnxLsysSpAuthentryMIB, PYSNMP_MODULE_ID=jnxLsysSpAuthentryMIB)
