#
# PySNMP MIB module DOCS-IETF-SUBMGT-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/DOCS-IETF-SUBMGT-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 18:38:01 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ValueRangeConstraint, ConstraintsIntersection, SingleValueConstraint, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ValueRangeConstraint", "ConstraintsIntersection", "SingleValueConstraint", "ValueSizeConstraint")
diffServMIBAlgDropGroup, diffServClfrStorage, diffServAlgDropStorage, diffServActionStorage, diffServMIBClfrGroup, diffServDataPathStatus, diffServMIBClfrElementGroup, diffServClfrStatus, diffServMultiFieldClfrStorage, diffServMIBDataPathGroup, diffServClfrElementStorage, diffServAlgDropStatus, diffServAlgDropType, diffServMIBCounterGroup, diffServMultiFieldClfrSrcAddr, diffServMultiFieldClfrAddrType, diffServMIBActionGroup, diffServMultiFieldClfrDstAddr, diffServCountActStorage, diffServClfrElementStatus, diffServDataPathStorage, diffServMIBMultiFieldClfrGroup = mibBuilder.importSymbols("DIFFSERV-MIB", "diffServMIBAlgDropGroup", "diffServClfrStorage", "diffServAlgDropStorage", "diffServActionStorage", "diffServMIBClfrGroup", "diffServDataPathStatus", "diffServMIBClfrElementGroup", "diffServClfrStatus", "diffServMultiFieldClfrStorage", "diffServMIBDataPathGroup", "diffServClfrElementStorage", "diffServAlgDropStatus", "diffServAlgDropType", "diffServMIBCounterGroup", "diffServMultiFieldClfrSrcAddr", "diffServMultiFieldClfrAddrType", "diffServMIBActionGroup", "diffServMultiFieldClfrDstAddr", "diffServCountActStorage", "diffServClfrElementStatus", "diffServDataPathStorage", "diffServMIBMultiFieldClfrGroup")
docsIfCmtsCmStatusEntry, docsIfCmtsCmStatusIndex = mibBuilder.importSymbols("DOCS-IF-MIB", "docsIfCmtsCmStatusEntry", "docsIfCmtsCmStatusIndex")
InetAddressType, InetAddress = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddressType", "InetAddress")
ObjectGroup, NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "NotificationGroup", "ModuleCompliance")
ObjectIdentity, Integer32, MibScalar, MibTable, MibTableRow, MibTableColumn, Gauge32, mib_2, ModuleIdentity, MibIdentifier, TimeTicks, Counter32, IpAddress, Unsigned32, iso, NotificationType, Bits, Counter64 = mibBuilder.importSymbols("SNMPv2-SMI", "ObjectIdentity", "Integer32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Gauge32", "mib-2", "ModuleIdentity", "MibIdentifier", "TimeTicks", "Counter32", "IpAddress", "Unsigned32", "iso", "NotificationType", "Bits", "Counter64")
TextualConvention, TimeStamp, TruthValue, RowStatus, StorageType, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "TimeStamp", "TruthValue", "RowStatus", "StorageType", "DisplayString")
docsSubMgt = ModuleIdentity((1, 3, 6, 1, 2, 1, 125))
docsSubMgt.setRevisions(('2005-03-29 00:00',))
if mibBuilder.loadTexts: docsSubMgt.setLastUpdated('200503290000Z')
if mibBuilder.loadTexts: docsSubMgt.setOrganization('IETF IP over Cable Data Network (IPCDN) Working Group')
docsSubMgtObjects = MibIdentifier((1, 3, 6, 1, 2, 1, 125, 1))
docsSubMgtCpeControlTable = MibTable((1, 3, 6, 1, 2, 1, 125, 1, 1), )
if mibBuilder.loadTexts: docsSubMgtCpeControlTable.setStatus('current')
docsSubMgtCpeControlEntry = MibTableRow((1, 3, 6, 1, 2, 1, 125, 1, 1, 1), )
docsIfCmtsCmStatusEntry.registerAugmentions(("DOCS-IETF-SUBMGT-MIB", "docsSubMgtCpeControlEntry"))
docsSubMgtCpeControlEntry.setIndexNames(*docsIfCmtsCmStatusEntry.getIndexNames())
if mibBuilder.loadTexts: docsSubMgtCpeControlEntry.setStatus('current')
docsSubMgtCpeControlMaxCpeIp = MibTableColumn((1, 3, 6, 1, 2, 1, 125, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: docsSubMgtCpeControlMaxCpeIp.setStatus('current')
docsSubMgtCpeControlActive = MibTableColumn((1, 3, 6, 1, 2, 1, 125, 1, 1, 1, 2), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: docsSubMgtCpeControlActive.setStatus('current')
docsSubMgtCpeControlLearnable = MibTableColumn((1, 3, 6, 1, 2, 1, 125, 1, 1, 1, 3), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: docsSubMgtCpeControlLearnable.setStatus('current')
docsSubMgtCpeControlReset = MibTableColumn((1, 3, 6, 1, 2, 1, 125, 1, 1, 1, 4), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: docsSubMgtCpeControlReset.setStatus('current')
docsSubMgtCpeControlLastReset = MibTableColumn((1, 3, 6, 1, 2, 1, 125, 1, 1, 1, 5), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsSubMgtCpeControlLastReset.setStatus('current')
docsSubMgtCpeMaxIpDefault = MibScalar((1, 3, 6, 1, 2, 1, 125, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647)).clone(16)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: docsSubMgtCpeMaxIpDefault.setStatus('current')
docsSubMgtCpeActiveDefault = MibScalar((1, 3, 6, 1, 2, 1, 125, 1, 3), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: docsSubMgtCpeActiveDefault.setStatus('current')
docsSubMgtCpeLearnableDefault = MibScalar((1, 3, 6, 1, 2, 1, 125, 1, 4), TruthValue().clone('true')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: docsSubMgtCpeLearnableDefault.setStatus('current')
docsSubMgtCpeIpTable = MibTable((1, 3, 6, 1, 2, 1, 125, 1, 5), )
if mibBuilder.loadTexts: docsSubMgtCpeIpTable.setStatus('current')
docsSubMgtCpeIpEntry = MibTableRow((1, 3, 6, 1, 2, 1, 125, 1, 5, 1), ).setIndexNames((0, "DOCS-IF-MIB", "docsIfCmtsCmStatusIndex"), (0, "DOCS-IETF-SUBMGT-MIB", "docsSubMgtCpeIpIndex"))
if mibBuilder.loadTexts: docsSubMgtCpeIpEntry.setStatus('current')
docsSubMgtCpeIpIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 125, 1, 5, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: docsSubMgtCpeIpIndex.setStatus('current')
docsSubMgtCpeIpAddressType = MibTableColumn((1, 3, 6, 1, 2, 1, 125, 1, 5, 1, 2), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsSubMgtCpeIpAddressType.setStatus('current')
docsSubMgtCpeIpAddr = MibTableColumn((1, 3, 6, 1, 2, 1, 125, 1, 5, 1, 3), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsSubMgtCpeIpAddr.setStatus('current')
docsSubMgtCpeIpLearned = MibTableColumn((1, 3, 6, 1, 2, 1, 125, 1, 5, 1, 4), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsSubMgtCpeIpLearned.setStatus('current')
docsSubMgtCmFilterTable = MibTable((1, 3, 6, 1, 2, 1, 125, 1, 6), )
if mibBuilder.loadTexts: docsSubMgtCmFilterTable.setStatus('current')
docsSubMgtCmFilterEntry = MibTableRow((1, 3, 6, 1, 2, 1, 125, 1, 6, 1), )
docsIfCmtsCmStatusEntry.registerAugmentions(("DOCS-IETF-SUBMGT-MIB", "docsSubMgtCmFilterEntry"))
docsSubMgtCmFilterEntry.setIndexNames(*docsIfCmtsCmStatusEntry.getIndexNames())
if mibBuilder.loadTexts: docsSubMgtCmFilterEntry.setStatus('current')
docsSubMgtCmFilterSubDownstream = MibTableColumn((1, 3, 6, 1, 2, 1, 125, 1, 6, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: docsSubMgtCmFilterSubDownstream.setStatus('current')
docsSubMgtCmFilterSubUpstream = MibTableColumn((1, 3, 6, 1, 2, 1, 125, 1, 6, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: docsSubMgtCmFilterSubUpstream.setStatus('current')
docsSubMgtCmFilterCmDownstream = MibTableColumn((1, 3, 6, 1, 2, 1, 125, 1, 6, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: docsSubMgtCmFilterCmDownstream.setStatus('current')
docsSubMgtCmFilterCmUpstream = MibTableColumn((1, 3, 6, 1, 2, 1, 125, 1, 6, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: docsSubMgtCmFilterCmUpstream.setStatus('current')
docsSubMgtFilterGroupTable = MibTable((1, 3, 6, 1, 2, 1, 125, 1, 7), )
if mibBuilder.loadTexts: docsSubMgtFilterGroupTable.setStatus('current')
docsSubMgtFilterGroupEntry = MibTableRow((1, 3, 6, 1, 2, 1, 125, 1, 7, 1), ).setIndexNames((0, "DOCS-IETF-SUBMGT-MIB", "docsSubMgtFilterGroupIndex"))
if mibBuilder.loadTexts: docsSubMgtFilterGroupEntry.setStatus('current')
docsSubMgtFilterGroupIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 125, 1, 7, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsSubMgtFilterGroupIndex.setStatus('current')
docsSubMgtConformance = MibIdentifier((1, 3, 6, 1, 2, 1, 125, 2))
docsSubMgtCompliances = MibIdentifier((1, 3, 6, 1, 2, 1, 125, 2, 1))
docsSubMgtGroups = MibIdentifier((1, 3, 6, 1, 2, 1, 125, 2, 2))
docsSubMgtBasicCompliance = ModuleCompliance((1, 3, 6, 1, 2, 1, 125, 2, 1, 1)).setObjects(("DIFFSERV-MIB", "diffServMIBDataPathGroup"), ("DIFFSERV-MIB", "diffServMIBClfrGroup"), ("DIFFSERV-MIB", "diffServMIBClfrElementGroup"), ("DIFFSERV-MIB", "diffServMIBMultiFieldClfrGroup"), ("DIFFSERV-MIB", "diffServMIBActionGroup"), ("DIFFSERV-MIB", "diffServMIBAlgDropGroup"), ("DIFFSERV-MIB", "diffServMIBCounterGroup"), ("DOCS-IETF-SUBMGT-MIB", "docsSubMgtGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    docsSubMgtBasicCompliance = docsSubMgtBasicCompliance.setStatus('current')
docsSubMgtGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 125, 2, 2, 1)).setObjects(("DOCS-IETF-SUBMGT-MIB", "docsSubMgtCpeControlMaxCpeIp"), ("DOCS-IETF-SUBMGT-MIB", "docsSubMgtCpeControlActive"), ("DOCS-IETF-SUBMGT-MIB", "docsSubMgtCpeControlLearnable"), ("DOCS-IETF-SUBMGT-MIB", "docsSubMgtCpeControlReset"), ("DOCS-IETF-SUBMGT-MIB", "docsSubMgtCpeControlLastReset"), ("DOCS-IETF-SUBMGT-MIB", "docsSubMgtCpeMaxIpDefault"), ("DOCS-IETF-SUBMGT-MIB", "docsSubMgtCpeActiveDefault"), ("DOCS-IETF-SUBMGT-MIB", "docsSubMgtCpeLearnableDefault"), ("DOCS-IETF-SUBMGT-MIB", "docsSubMgtCpeIpAddressType"), ("DOCS-IETF-SUBMGT-MIB", "docsSubMgtCpeIpAddr"), ("DOCS-IETF-SUBMGT-MIB", "docsSubMgtCpeIpLearned"), ("DOCS-IETF-SUBMGT-MIB", "docsSubMgtCmFilterSubDownstream"), ("DOCS-IETF-SUBMGT-MIB", "docsSubMgtCmFilterSubUpstream"), ("DOCS-IETF-SUBMGT-MIB", "docsSubMgtCmFilterCmDownstream"), ("DOCS-IETF-SUBMGT-MIB", "docsSubMgtCmFilterCmUpstream"), ("DOCS-IETF-SUBMGT-MIB", "docsSubMgtFilterGroupIndex"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    docsSubMgtGroup = docsSubMgtGroup.setStatus('current')
mibBuilder.exportSymbols("DOCS-IETF-SUBMGT-MIB", docsSubMgtCpeIpEntry=docsSubMgtCpeIpEntry, docsSubMgtGroup=docsSubMgtGroup, docsSubMgtCpeControlMaxCpeIp=docsSubMgtCpeControlMaxCpeIp, docsSubMgtConformance=docsSubMgtConformance, docsSubMgtCmFilterSubUpstream=docsSubMgtCmFilterSubUpstream, docsSubMgtGroups=docsSubMgtGroups, docsSubMgtCpeControlEntry=docsSubMgtCpeControlEntry, docsSubMgtCpeControlActive=docsSubMgtCpeControlActive, docsSubMgtCmFilterEntry=docsSubMgtCmFilterEntry, docsSubMgt=docsSubMgt, docsSubMgtBasicCompliance=docsSubMgtBasicCompliance, docsSubMgtCmFilterTable=docsSubMgtCmFilterTable, docsSubMgtFilterGroupIndex=docsSubMgtFilterGroupIndex, docsSubMgtCpeActiveDefault=docsSubMgtCpeActiveDefault, docsSubMgtCpeIpAddressType=docsSubMgtCpeIpAddressType, docsSubMgtCmFilterSubDownstream=docsSubMgtCmFilterSubDownstream, docsSubMgtCpeIpIndex=docsSubMgtCpeIpIndex, docsSubMgtCpeLearnableDefault=docsSubMgtCpeLearnableDefault, docsSubMgtCpeControlTable=docsSubMgtCpeControlTable, docsSubMgtCpeControlLearnable=docsSubMgtCpeControlLearnable, docsSubMgtCpeControlLastReset=docsSubMgtCpeControlLastReset, docsSubMgtCpeIpAddr=docsSubMgtCpeIpAddr, docsSubMgtCpeControlReset=docsSubMgtCpeControlReset, docsSubMgtFilterGroupEntry=docsSubMgtFilterGroupEntry, docsSubMgtObjects=docsSubMgtObjects, docsSubMgtCompliances=docsSubMgtCompliances, PYSNMP_MODULE_ID=docsSubMgt, docsSubMgtFilterGroupTable=docsSubMgtFilterGroupTable, docsSubMgtCmFilterCmDownstream=docsSubMgtCmFilterCmDownstream, docsSubMgtCmFilterCmUpstream=docsSubMgtCmFilterCmUpstream, docsSubMgtCpeIpLearned=docsSubMgtCpeIpLearned, docsSubMgtCpeIpTable=docsSubMgtCpeIpTable, docsSubMgtCpeMaxIpDefault=docsSubMgtCpeMaxIpDefault)
