#
# PySNMP MIB module IEEE8021X-PAE-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/IEEE8021X-PAE-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:41:36 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ConstraintsUnion, SingleValueConstraint, ValueRangeConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ConstraintsUnion", "SingleValueConstraint", "ValueRangeConstraint", "ConstraintsIntersection")
SecySCI, = mibBuilder.importSymbols("IEEE8021-SECY-MIB", "SecySCI")
InterfaceIndex, = mibBuilder.importSymbols("IF-MIB", "InterfaceIndex")
SnmpAdminString, = mibBuilder.importSymbols("SNMP-FRAMEWORK-MIB", "SnmpAdminString")
ModuleCompliance, ObjectGroup, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "ObjectGroup", "NotificationGroup")
Counter32, Bits, Gauge32, TimeTicks, NotificationType, MibScalar, MibTable, MibTableRow, MibTableColumn, ModuleIdentity, iso, IpAddress, MibIdentifier, Integer32, ObjectIdentity, Counter64, Unsigned32 = mibBuilder.importSymbols("SNMPv2-SMI", "Counter32", "Bits", "Gauge32", "TimeTicks", "NotificationType", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ModuleIdentity", "iso", "IpAddress", "MibIdentifier", "Integer32", "ObjectIdentity", "Counter64", "Unsigned32")
TruthValue, DisplayString, MacAddress, RowPointer, TimeStamp, RowStatus, TextualConvention, TimeInterval = mibBuilder.importSymbols("SNMPv2-TC", "TruthValue", "DisplayString", "MacAddress", "RowPointer", "TimeStamp", "RowStatus", "TextualConvention", "TimeInterval")
ieee8021XPaeMIB = ModuleIdentity((1, 3, 111, 2, 802, 1, 1, 15))
ieee8021XPaeMIB.setRevisions(('2014-04-10 16:19', '2009-10-01 16:50',))
if mibBuilder.loadTexts: ieee8021XPaeMIB.setLastUpdated('201404101619Z')
if mibBuilder.loadTexts: ieee8021XPaeMIB.setOrganization('IEEE 802.1 Working Group')
class Ieee8021XPaeCKN(TextualConvention, OctetString):
    reference = 'IEEE 802.1X Clause 5.4, Clause 9.3.1, Clause 6.2'
    status = 'current'
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(1, 16)

class Ieee8021XPaeCKNOrNull(TextualConvention, OctetString):
    reference = 'IEEE 802.1X Clause 5.4, Clause 9.3.1, Clause 6.2'
    status = 'current'
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(0, 16)

class Ieee8021XPaeKMD(TextualConvention, OctetString):
    reference = 'IEEE 802.1X Clause 12.6'
    status = 'current'
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(0, 253)

class Ieee8021XPaeNID(TextualConvention, OctetString):
    reference = 'IEEE 802.1X Clause 12.6, Clause 10.1'
    status = 'current'
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(1, 100)

class Ieee8021XPaeNIDOrNull(TextualConvention, OctetString):
    reference = 'IEEE 802.1X Clause 12.6, Clause 10.1'
    status = 'current'
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(0, 100)

class Ieee8021XMkaKeyServerPriority(TextualConvention, OctetString):
    reference = 'IEEE 802.1X Clause 9.5, Table 9-2'
    status = 'current'
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(1, 1)
    fixedLength = 1

class Ieee8021XMkaMI(TextualConvention, OctetString):
    reference = 'IEEE 802.1X Clause 9.4.2'
    status = 'current'
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(12, 12)
    fixedLength = 12

class Ieee8021XMkaMN(TextualConvention, Unsigned32):
    reference = 'IEEE 802.1X Clause 9.4.2'
    status = 'current'
    displayHint = 'd'
    subtypeSpec = Unsigned32.subtypeSpec + ValueRangeConstraint(1, 2147483648)

class Ieee8021XMkaKN(TextualConvention, Unsigned32):
    reference = 'IEEE 802.1X Clause 9.8'
    status = 'current'
    displayHint = 'd'
    subtypeSpec = Unsigned32.subtypeSpec + ValueRangeConstraint(1, 2147483648)

class Ieee8021XPaeNIDCapabilites(TextualConvention, Bits):
    reference = 'IEEE 802.1X Clause 10.1, Table 11-8'
    status = 'current'
    namedValues = NamedValues(("eap", 0), ("eapMka", 1), ("eapMkaMacSec", 2), ("mka", 3), ("mkaMacSec", 4), ("higherLayer", 5), ("higherLayerFallback", 6), ("vendorSpecific", 7))

class Ieee8021XPaeNIDAccessStatus(TextualConvention, Integer32):
    reference = 'IEEE 802.1X Clause 10.1, Table 11-8'
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))
    namedValues = NamedValues(("noAccess", 0), ("remedialAccess", 1), ("restrictedAccess", 2), ("expectedAccess", 3))

class Ieee8021XPaeNIDUnauthenticatedStatus(TextualConvention, Integer32):
    reference = 'IEEE 802.1X Clause 10.1, Table 11-8'
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))
    namedValues = NamedValues(("noAccess", 0), ("fallbackAccess", 1), ("limitedAccess", 2), ("openAccess", 3))

ieee8021XPaeMIBNotifications = MibIdentifier((1, 3, 111, 2, 802, 1, 1, 15, 0))
ieee8021XPaeMIBObjects = MibIdentifier((1, 3, 111, 2, 802, 1, 1, 15, 1))
ieee8021XPaeMIBConformance = MibIdentifier((1, 3, 111, 2, 802, 1, 1, 15, 2))
ieee8021XPaeSystem = MibIdentifier((1, 3, 111, 2, 802, 1, 1, 15, 1, 1))
ieee8021XPaeLogon = MibIdentifier((1, 3, 111, 2, 802, 1, 1, 15, 1, 2))
ieee8021XPaeAuthenticator = MibIdentifier((1, 3, 111, 2, 802, 1, 1, 15, 1, 3))
ieee8021XPaeSupplicant = MibIdentifier((1, 3, 111, 2, 802, 1, 1, 15, 1, 4))
ieee8021XPaeEapol = MibIdentifier((1, 3, 111, 2, 802, 1, 1, 15, 1, 5))
ieee8021XPaeKaY = MibIdentifier((1, 3, 111, 2, 802, 1, 1, 15, 1, 6))
ieee8021XPaeNetworkIdentifier = MibIdentifier((1, 3, 111, 2, 802, 1, 1, 15, 1, 7))
ieee8021XPaeSysAccessControl = MibScalar((1, 3, 111, 2, 802, 1, 1, 15, 1, 1, 1), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ieee8021XPaeSysAccessControl.setStatus('current')
ieee8021XPaeSysAnnouncements = MibScalar((1, 3, 111, 2, 802, 1, 1, 15, 1, 1, 2), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ieee8021XPaeSysAnnouncements.setStatus('current')
ieee8021XPaeSysEapolVersion = MibScalar((1, 3, 111, 2, 802, 1, 1, 15, 1, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ieee8021XPaeSysEapolVersion.setStatus('current')
ieee8021XPaeSysMkaVersion = MibScalar((1, 3, 111, 2, 802, 1, 1, 15, 1, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ieee8021XPaeSysMkaVersion.setStatus('current')
ieee8021XPaePortTable = MibTable((1, 3, 111, 2, 802, 1, 1, 15, 1, 1, 5), )
if mibBuilder.loadTexts: ieee8021XPaePortTable.setStatus('current')
ieee8021XPaePortEntry = MibTableRow((1, 3, 111, 2, 802, 1, 1, 15, 1, 1, 5, 1), ).setIndexNames((0, "IEEE8021X-PAE-MIB", "ieee8021XPaePortNumber"))
if mibBuilder.loadTexts: ieee8021XPaePortEntry.setStatus('current')
ieee8021XPaePortNumber = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 15, 1, 1, 5, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: ieee8021XPaePortNumber.setStatus('current')
ieee8021XPaePortType = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 15, 1, 1, 5, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("realPort", 1), ("virtualPort", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ieee8021XPaePortType.setStatus('current')
ieee8021XPaeControlledPortNumber = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 15, 1, 1, 5, 1, 3), InterfaceIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ieee8021XPaeControlledPortNumber.setStatus('current')
ieee8021XPaeUncontrolledPortNumber = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 15, 1, 1, 5, 1, 4), InterfaceIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ieee8021XPaeUncontrolledPortNumber.setStatus('current')
ieee8021XPaeCommonPortNumber = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 15, 1, 1, 5, 1, 5), InterfaceIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ieee8021XPaeCommonPortNumber.setStatus('current')
ieee8021XPaePortInitialize = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 15, 1, 1, 5, 1, 6), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ieee8021XPaePortInitialize.setStatus('current')
ieee8021XPaePortCapabilities = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 15, 1, 1, 5, 1, 7), Bits().clone(namedValues=NamedValues(("suppImplemented", 0), ("authImplemented", 1), ("mkaImplemented", 2), ("macsecImplemented", 3), ("announcementsImplemented", 4), ("listenerImplemented", 5), ("virtualPortsImplemented", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ieee8021XPaePortCapabilities.setStatus('current')
ieee8021XPaePortVirtualPortsEnable = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 15, 1, 1, 5, 1, 8), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ieee8021XPaePortVirtualPortsEnable.setStatus('current')
ieee8021XPaePortMaxVirtualPorts = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 15, 1, 1, 5, 1, 9), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ieee8021XPaePortMaxVirtualPorts.setStatus('current')
ieee8021XPaePortCurrentVirtualPorts = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 15, 1, 1, 5, 1, 10), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ieee8021XPaePortCurrentVirtualPorts.setStatus('current')
ieee8021XPaePortVirtualPortStart = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 15, 1, 1, 5, 1, 11), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ieee8021XPaePortVirtualPortStart.setStatus('current')
ieee8021XPaePortVirtualPortPeerMAC = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 15, 1, 1, 5, 1, 12), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ieee8021XPaePortVirtualPortPeerMAC.setStatus('current')
ieee8021XPaePortLogonEnable = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 15, 1, 1, 5, 1, 13), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ieee8021XPaePortLogonEnable.setStatus('current')
ieee8021XPaePortAuthenticatorEnable = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 15, 1, 1, 5, 1, 14), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ieee8021XPaePortAuthenticatorEnable.setStatus('current')
ieee8021XPaePortSupplicantEnable = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 15, 1, 1, 5, 1, 15), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ieee8021XPaePortSupplicantEnable.setStatus('current')
ieee8021XPaePortKayMkaEnable = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 15, 1, 1, 5, 1, 16), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ieee8021XPaePortKayMkaEnable.setStatus('current')
ieee8021XPaePortAnnouncerEnable = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 15, 1, 1, 5, 1, 17), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ieee8021XPaePortAnnouncerEnable.setStatus('current')
ieee8021XPaePortListenerEnable = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 15, 1, 1, 5, 1, 18), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ieee8021XPaePortListenerEnable.setStatus('current')
ieee8021XPacPortTable = MibTable((1, 3, 111, 2, 802, 1, 1, 15, 1, 1, 6), )
if mibBuilder.loadTexts: ieee8021XPacPortTable.setStatus('current')
ieee8021XPacPortEntry = MibTableRow((1, 3, 111, 2, 802, 1, 1, 15, 1, 1, 6, 1), ).setIndexNames((0, "IEEE8021X-PAE-MIB", "ieee8021XPacPortControlledPortNumber"))
if mibBuilder.loadTexts: ieee8021XPacPortEntry.setStatus('current')
ieee8021XPacPortControlledPortNumber = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 15, 1, 1, 6, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: ieee8021XPacPortControlledPortNumber.setStatus('current')
ieee8021XPacPortAdminPt2PtMAC = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 15, 1, 1, 6, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("forceTrue", 1), ("forceFalse", 2), ("auto", 3))).clone('auto')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ieee8021XPacPortAdminPt2PtMAC.setStatus('current')
ieee8021XPacPortOperPt2PtMAC = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 15, 1, 1, 6, 1, 3), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ieee8021XPacPortOperPt2PtMAC.setStatus('current')
ieee8021XPaePortLogonTable = MibTable((1, 3, 111, 2, 802, 1, 1, 15, 1, 2, 1), )
if mibBuilder.loadTexts: ieee8021XPaePortLogonTable.setStatus('current')
ieee8021XPaePortLogonEntry = MibTableRow((1, 3, 111, 2, 802, 1, 1, 15, 1, 2, 1, 1), ).setIndexNames((0, "IEEE8021X-PAE-MIB", "ieee8021XPaePortNumber"))
if mibBuilder.loadTexts: ieee8021XPaePortLogonEntry.setStatus('current')
ieee8021XPaePortLogonConnectStatus = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 15, 1, 2, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("pending", 1), ("unauthenticated", 2), ("authenticated", 3), ("secure", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ieee8021XPaePortLogonConnectStatus.setStatus('current')
ieee8021XPaePortPortValid = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 15, 1, 2, 1, 1, 2), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ieee8021XPaePortPortValid.setStatus('current')
ieee8021XPaePortSessionTable = MibTable((1, 3, 111, 2, 802, 1, 1, 15, 1, 2, 2), )
if mibBuilder.loadTexts: ieee8021XPaePortSessionTable.setStatus('current')
ieee8021XPaePortSessionEntry = MibTableRow((1, 3, 111, 2, 802, 1, 1, 15, 1, 2, 2, 1), ).setIndexNames((0, "IEEE8021X-PAE-MIB", "ieee8021XPaeSessionControlledPortNumber"))
if mibBuilder.loadTexts: ieee8021XPaePortSessionEntry.setStatus('current')
ieee8021XPaeSessionControlledPortNumber = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 15, 1, 2, 2, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: ieee8021XPaeSessionControlledPortNumber.setStatus('current')
ieee8021XPaePortSessionOctetsRx = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 15, 1, 2, 2, 1, 2), Counter64()).setUnits('Octets').setMaxAccess("readonly")
if mibBuilder.loadTexts: ieee8021XPaePortSessionOctetsRx.setStatus('current')
ieee8021XPaePortSessionOctetsTx = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 15, 1, 2, 2, 1, 3), Counter64()).setUnits('Octets').setMaxAccess("readonly")
if mibBuilder.loadTexts: ieee8021XPaePortSessionOctetsTx.setStatus('current')
ieee8021XPaePortSessionPktsRx = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 15, 1, 2, 2, 1, 4), Counter64()).setUnits('Packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: ieee8021XPaePortSessionPktsRx.setStatus('current')
ieee8021XPaePortSessionPktsTx = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 15, 1, 2, 2, 1, 5), Counter64()).setUnits('Packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: ieee8021XPaePortSessionPktsTx.setStatus('current')
ieee8021XPaePortSessionId = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 15, 1, 2, 2, 1, 6), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(3, 253))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ieee8021XPaePortSessionId.setStatus('current')
ieee8021XPaePortSessionStartTime = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 15, 1, 2, 2, 1, 7), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ieee8021XPaePortSessionStartTime.setStatus('current')
ieee8021XPaePortSessionIntervalTime = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 15, 1, 2, 2, 1, 8), TimeInterval()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ieee8021XPaePortSessionIntervalTime.setStatus('current')
ieee8021XPaePortSessionTerminate = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 15, 1, 2, 2, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("macOperFailed", 1), ("sysAccessDisableOrPortInit", 2), ("receiveEapolLogOff", 3), ("eapReauthFailure", 4), ("mkaFailure", 5), ("newSessionBegin", 6), ("notTerminateYet", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ieee8021XPaePortSessionTerminate.setStatus('current')
ieee8021XPaePortSessionUserName = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 15, 1, 2, 2, 1, 10), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 253))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ieee8021XPaePortSessionUserName.setStatus('current')
ieee8021XLogonNIDTable = MibTable((1, 3, 111, 2, 802, 1, 1, 15, 1, 2, 3), )
if mibBuilder.loadTexts: ieee8021XLogonNIDTable.setStatus('current')
ieee8021XLogonNIDEntry = MibTableRow((1, 3, 111, 2, 802, 1, 1, 15, 1, 2, 3, 1), ).setIndexNames((0, "IEEE8021X-PAE-MIB", "ieee8021XPaePortNumber"))
if mibBuilder.loadTexts: ieee8021XLogonNIDEntry.setStatus('current')
ieee8021XLogonNIDConnectedNID = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 15, 1, 2, 3, 1, 1), Ieee8021XPaeNID()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ieee8021XLogonNIDConnectedNID.setStatus('current')
ieee8021XLogonNIDRequestedNID = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 15, 1, 2, 3, 1, 2), Ieee8021XPaeNIDOrNull()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ieee8021XLogonNIDRequestedNID.setStatus('current')
ieee8021XLogonNIDSelectedNID = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 15, 1, 2, 3, 1, 3), Ieee8021XPaeNIDOrNull()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ieee8021XLogonNIDSelectedNID.setStatus('current')
ieee8021XAuthenticatorTable = MibTable((1, 3, 111, 2, 802, 1, 1, 15, 1, 3, 1), )
if mibBuilder.loadTexts: ieee8021XAuthenticatorTable.setStatus('current')
ieee8021XAuthenticatorEntry = MibTableRow((1, 3, 111, 2, 802, 1, 1, 15, 1, 3, 1, 1), ).setIndexNames((0, "IEEE8021X-PAE-MIB", "ieee8021XPaePortNumber"))
if mibBuilder.loadTexts: ieee8021XAuthenticatorEntry.setStatus('current')
ieee8021XAuthPaeAuthenticate = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 15, 1, 3, 1, 1, 1), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ieee8021XAuthPaeAuthenticate.setStatus('current')
ieee8021XAuthPaeAuthenticated = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 15, 1, 3, 1, 1, 2), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ieee8021XAuthPaeAuthenticated.setStatus('current')
ieee8021XAuthPaeFailed = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 15, 1, 3, 1, 1, 3), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ieee8021XAuthPaeFailed.setStatus('current')
ieee8021XAuthPaeReAuthEnabled = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 15, 1, 3, 1, 1, 4), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ieee8021XAuthPaeReAuthEnabled.setStatus('current')
ieee8021XAuthPaeQuietPeriod = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 15, 1, 3, 1, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)).clone(60)).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: ieee8021XAuthPaeQuietPeriod.setStatus('current')
ieee8021XAuthPaeReauthPeriod = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 15, 1, 3, 1, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)).clone(3600)).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: ieee8021XAuthPaeReauthPeriod.setStatus('current')
ieee8021XAuthPaeRetryMax = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 15, 1, 3, 1, 1, 7), Unsigned32().clone(2)).setUnits('times').setMaxAccess("readwrite")
if mibBuilder.loadTexts: ieee8021XAuthPaeRetryMax.setStatus('current')
ieee8021XAuthPaeRetryCount = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 15, 1, 3, 1, 1, 8), Gauge32()).setUnits('times').setMaxAccess("readonly")
if mibBuilder.loadTexts: ieee8021XAuthPaeRetryCount.setStatus('current')
ieee8021XSupplicantTable = MibTable((1, 3, 111, 2, 802, 1, 1, 15, 1, 4, 1), )
if mibBuilder.loadTexts: ieee8021XSupplicantTable.setStatus('current')
ieee8021XSupplicantEntry = MibTableRow((1, 3, 111, 2, 802, 1, 1, 15, 1, 4, 1, 1), ).setIndexNames((0, "IEEE8021X-PAE-MIB", "ieee8021XPaePortNumber"))
if mibBuilder.loadTexts: ieee8021XSupplicantEntry.setStatus('current')
ieee8021XSuppPaeAuthenticate = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 15, 1, 4, 1, 1, 1), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ieee8021XSuppPaeAuthenticate.setStatus('current')
ieee8021XSuppPaeAuthenticated = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 15, 1, 4, 1, 1, 2), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ieee8021XSuppPaeAuthenticated.setStatus('current')
ieee8021XSuppPaeFailed = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 15, 1, 4, 1, 1, 3), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ieee8021XSuppPaeFailed.setStatus('current')
ieee8021XSuppPaeHelloPeriod = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 15, 1, 4, 1, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)).clone(60)).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: ieee8021XSuppPaeHelloPeriod.setStatus('current')
ieee8021XSuppPaeRetryMax = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 15, 1, 4, 1, 1, 5), Unsigned32().clone(2)).setUnits('times').setMaxAccess("readwrite")
if mibBuilder.loadTexts: ieee8021XSuppPaeRetryMax.setStatus('current')
ieee8021XSuppPaeRetryCount = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 15, 1, 4, 1, 1, 6), Gauge32()).setUnits('times').setMaxAccess("readonly")
if mibBuilder.loadTexts: ieee8021XSuppPaeRetryCount.setStatus('current')
ieee8021XEapolStatsTable = MibTable((1, 3, 111, 2, 802, 1, 1, 15, 1, 5, 1), )
if mibBuilder.loadTexts: ieee8021XEapolStatsTable.setStatus('current')
ieee8021XEapolStatsEntry = MibTableRow((1, 3, 111, 2, 802, 1, 1, 15, 1, 5, 1, 1), ).setIndexNames((0, "IEEE8021X-PAE-MIB", "ieee8021XPaePortNumber"))
if mibBuilder.loadTexts: ieee8021XEapolStatsEntry.setStatus('current')
ieee8021XEapolInvalidFramesRx = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 15, 1, 5, 1, 1, 1), Counter32()).setUnits('Packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: ieee8021XEapolInvalidFramesRx.setStatus('current')
ieee8021XEapolEapLengthErrorFramesRx = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 15, 1, 5, 1, 1, 2), Counter32()).setUnits('Packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: ieee8021XEapolEapLengthErrorFramesRx.setStatus('current')
ieee8021XEapolAnnouncementFramesRx = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 15, 1, 5, 1, 1, 3), Counter32()).setUnits('Packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: ieee8021XEapolAnnouncementFramesRx.setStatus('current')
ieee8021XEapolAnnouncementReqFramesRx = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 15, 1, 5, 1, 1, 4), Counter32()).setUnits('Packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: ieee8021XEapolAnnouncementReqFramesRx.setStatus('current')
ieee8021XEapolPortUnavailableFramesRx = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 15, 1, 5, 1, 1, 5), Counter32()).setUnits('Packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: ieee8021XEapolPortUnavailableFramesRx.setStatus('current')
ieee8021XEapolStartFramesRx = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 15, 1, 5, 1, 1, 6), Counter32()).setUnits('Packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: ieee8021XEapolStartFramesRx.setStatus('current')
ieee8021XEapolEapFramesRx = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 15, 1, 5, 1, 1, 7), Counter32()).setUnits('Packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: ieee8021XEapolEapFramesRx.setStatus('current')
ieee8021XEapolLogoffFramesRx = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 15, 1, 5, 1, 1, 8), Counter32()).setUnits('Packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: ieee8021XEapolLogoffFramesRx.setStatus('current')
ieee8021XEapolMkNoCknFramesRx = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 15, 1, 5, 1, 1, 9), Counter32()).setUnits('Packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: ieee8021XEapolMkNoCknFramesRx.setStatus('current')
ieee8021XEapolMkInvalidFramesRx = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 15, 1, 5, 1, 1, 10), Counter32()).setUnits('Packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: ieee8021XEapolMkInvalidFramesRx.setStatus('current')
ieee8021XEapolLastRxFrameVersion = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 15, 1, 5, 1, 1, 11), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ieee8021XEapolLastRxFrameVersion.setStatus('current')
ieee8021XEapolLastRxFrameSource = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 15, 1, 5, 1, 1, 12), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ieee8021XEapolLastRxFrameSource.setStatus('current')
ieee8021XEapolSuppEapFramesTx = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 15, 1, 5, 1, 1, 13), Counter32()).setUnits('Packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: ieee8021XEapolSuppEapFramesTx.setStatus('current')
ieee8021XEapolLogoffFramesTx = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 15, 1, 5, 1, 1, 14), Counter32()).setUnits('Packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: ieee8021XEapolLogoffFramesTx.setStatus('current')
ieee8021XEapolAnnouncementFramesTx = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 15, 1, 5, 1, 1, 15), Counter32()).setUnits('Packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: ieee8021XEapolAnnouncementFramesTx.setStatus('current')
ieee8021XEapolAnnouncementReqFramesTx = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 15, 1, 5, 1, 1, 16), Counter32()).setUnits('Packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: ieee8021XEapolAnnouncementReqFramesTx.setStatus('current')
ieee8021XEapolStartFramesTx = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 15, 1, 5, 1, 1, 17), Counter32()).setUnits('Packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: ieee8021XEapolStartFramesTx.setStatus('current')
ieee8021XEapolAuthEapFramesTx = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 15, 1, 5, 1, 1, 18), Counter32()).setUnits('Packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: ieee8021XEapolAuthEapFramesTx.setStatus('current')
ieee8021XEapolMkaFramesTx = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 15, 1, 5, 1, 1, 19), Counter32()).setUnits('Packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: ieee8021XEapolMkaFramesTx.setStatus('current')
ieee8021XKayMkaTable = MibTable((1, 3, 111, 2, 802, 1, 1, 15, 1, 6, 1), )
if mibBuilder.loadTexts: ieee8021XKayMkaTable.setStatus('current')
ieee8021XKayMkaEntry = MibTableRow((1, 3, 111, 2, 802, 1, 1, 15, 1, 6, 1, 1), ).setIndexNames((0, "IEEE8021X-PAE-MIB", "ieee8021XPaePortNumber"))
if mibBuilder.loadTexts: ieee8021XKayMkaEntry.setStatus('current')
ieee8021XKayMkaActive = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 15, 1, 6, 1, 1, 1), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ieee8021XKayMkaActive.setStatus('current')
ieee8021XKayMkaAuthenticated = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 15, 1, 6, 1, 1, 2), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ieee8021XKayMkaAuthenticated.setStatus('current')
ieee8021XKayMkaSecured = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 15, 1, 6, 1, 1, 3), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ieee8021XKayMkaSecured.setStatus('current')
ieee8021XKayMkaFailed = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 15, 1, 6, 1, 1, 4), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ieee8021XKayMkaFailed.setStatus('current')
ieee8021XKayMkaActorSCI = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 15, 1, 6, 1, 1, 5), SecySCI()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ieee8021XKayMkaActorSCI.setStatus('current')
ieee8021XKayMkaActorsPriority = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 15, 1, 6, 1, 1, 6), Ieee8021XMkaKeyServerPriority()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ieee8021XKayMkaActorsPriority.setStatus('current')
ieee8021XKayMkaKeyServerPriority = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 15, 1, 6, 1, 1, 7), Ieee8021XMkaKeyServerPriority()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ieee8021XKayMkaKeyServerPriority.setStatus('current')
ieee8021XKayMkaKeyServerSCI = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 15, 1, 6, 1, 1, 8), SecySCI()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ieee8021XKayMkaKeyServerSCI.setStatus('current')
ieee8021XKayAllowedJoinGroup = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 15, 1, 6, 1, 1, 9), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ieee8021XKayAllowedJoinGroup.setStatus('current')
ieee8021XKayAllowedFormGroup = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 15, 1, 6, 1, 1, 10), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ieee8021XKayAllowedFormGroup.setStatus('current')
ieee8021XKayCreateNewGroup = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 15, 1, 6, 1, 1, 11), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ieee8021XKayCreateNewGroup.setStatus('current')
ieee8021XKayMacSecCapability = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 15, 1, 6, 1, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("noMACsec", 0), ("macSecCapability1", 1), ("macSecCapability2", 2), ("macSecCapability3", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ieee8021XKayMacSecCapability.setStatus('current')
ieee8021XKayMacSecDesired = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 15, 1, 6, 1, 1, 13), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ieee8021XKayMacSecDesired.setStatus('current')
ieee8021XKayMacSecProtect = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 15, 1, 6, 1, 1, 14), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ieee8021XKayMacSecProtect.setStatus('current')
ieee8021XKayMacSecReplayProtect = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 15, 1, 6, 1, 1, 15), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ieee8021XKayMacSecReplayProtect.setStatus('current')
ieee8021XKayMacSecValidate = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 15, 1, 6, 1, 1, 16), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ieee8021XKayMacSecValidate.setStatus('current')
ieee8021XKayMacSecConfidentialityOffset = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 15, 1, 6, 1, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(30, 30), ValueRangeConstraint(50, 50), ))).setUnits('bytes').setMaxAccess("readwrite")
if mibBuilder.loadTexts: ieee8021XKayMacSecConfidentialityOffset.setStatus('current')
ieee8021XKayMkaTxKN = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 15, 1, 6, 1, 1, 18), Ieee8021XMkaKN()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ieee8021XKayMkaTxKN.setStatus('current')
ieee8021XKayMkaTxAN = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 15, 1, 6, 1, 1, 19), RowPointer()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ieee8021XKayMkaTxAN.setStatus('current')
ieee8021XKayMkaRxKN = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 15, 1, 6, 1, 1, 20), Ieee8021XMkaKN()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ieee8021XKayMkaRxKN.setStatus('current')
ieee8021XKayMkaRxAN = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 15, 1, 6, 1, 1, 21), RowPointer()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ieee8021XKayMkaRxAN.setStatus('current')
ieee8021XKayMkaSuspendFor = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 15, 1, 6, 1, 1, 22), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 120))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ieee8021XKayMkaSuspendFor.setStatus('current')
ieee8021XKayMkaSuspendOnRequest = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 15, 1, 6, 1, 1, 23), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ieee8021XKayMkaSuspendOnRequest.setStatus('current')
ieee8021XKayMkaSuspendedWhile = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 15, 1, 6, 1, 1, 24), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 126))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ieee8021XKayMkaSuspendedWhile.setStatus('current')
ieee8021XKayMkaParticipantTable = MibTable((1, 3, 111, 2, 802, 1, 1, 15, 1, 6, 2), )
if mibBuilder.loadTexts: ieee8021XKayMkaParticipantTable.setStatus('current')
ieee8021XKayMkaParticipantEntry = MibTableRow((1, 3, 111, 2, 802, 1, 1, 15, 1, 6, 2, 1), ).setIndexNames((0, "IEEE8021X-PAE-MIB", "ieee8021XPaePortNumber"), (0, "IEEE8021X-PAE-MIB", "ieee8021XKayMkaPartCKN"))
if mibBuilder.loadTexts: ieee8021XKayMkaParticipantEntry.setStatus('current')
ieee8021XKayMkaPartCKN = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 15, 1, 6, 2, 1, 1), Ieee8021XPaeCKN())
if mibBuilder.loadTexts: ieee8021XKayMkaPartCKN.setStatus('current')
ieee8021XKayMkaPartKMD = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 15, 1, 6, 2, 1, 2), Ieee8021XPaeKMD()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ieee8021XKayMkaPartKMD.setStatus('current')
ieee8021XKayMkaPartNID = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 15, 1, 6, 2, 1, 3), Ieee8021XPaeNID()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ieee8021XKayMkaPartNID.setStatus('current')
ieee8021XKayMkaPartCached = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 15, 1, 6, 2, 1, 4), TruthValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ieee8021XKayMkaPartCached.setStatus('current')
ieee8021XKayMkaPartActive = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 15, 1, 6, 2, 1, 5), TruthValue().clone('false')).setMaxAccess("readonly")
if mibBuilder.loadTexts: ieee8021XKayMkaPartActive.setStatus('current')
ieee8021XKayMkaPartRetain = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 15, 1, 6, 2, 1, 6), TruthValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ieee8021XKayMkaPartRetain.setStatus('current')
ieee8021XKayMkaPartActivateControl = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 15, 1, 6, 2, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("default", 1), ("disabled", 2), ("onOperUp", 3), ("always", 4)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ieee8021XKayMkaPartActivateControl.setStatus('current')
ieee8021XKayMkaPartPrincipal = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 15, 1, 6, 2, 1, 8), TruthValue().clone('false')).setMaxAccess("readonly")
if mibBuilder.loadTexts: ieee8021XKayMkaPartPrincipal.setStatus('current')
ieee8021XKayMkaPartDistCKN = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 15, 1, 6, 2, 1, 9), Ieee8021XPaeCKNOrNull()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ieee8021XKayMkaPartDistCKN.setStatus('current')
ieee8021XKayMkaPartRowStatus = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 15, 1, 6, 2, 1, 10), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ieee8021XKayMkaPartRowStatus.setStatus('current')
ieee8021XKayMkaPeerListTable = MibTable((1, 3, 111, 2, 802, 1, 1, 15, 1, 6, 3), )
if mibBuilder.loadTexts: ieee8021XKayMkaPeerListTable.setStatus('current')
ieee8021XKayMkaPeerListEntry = MibTableRow((1, 3, 111, 2, 802, 1, 1, 15, 1, 6, 3, 1), ).setIndexNames((0, "IEEE8021X-PAE-MIB", "ieee8021XPaePortNumber"), (0, "IEEE8021X-PAE-MIB", "ieee8021XKayMkaPartCKN"), (0, "IEEE8021X-PAE-MIB", "ieee8021XKayMkaPeerListMI"))
if mibBuilder.loadTexts: ieee8021XKayMkaPeerListEntry.setStatus('current')
ieee8021XKayMkaPeerListMI = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 15, 1, 6, 3, 1, 1), Ieee8021XMkaMI())
if mibBuilder.loadTexts: ieee8021XKayMkaPeerListMI.setStatus('current')
ieee8021XKayMkaPeerListMN = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 15, 1, 6, 3, 1, 2), Ieee8021XMkaMN()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ieee8021XKayMkaPeerListMN.setStatus('current')
ieee8021XKayMkaPeerListType = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 15, 1, 6, 3, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("livePeerList", 1), ("potentialPeerList", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ieee8021XKayMkaPeerListType.setStatus('current')
ieee8021XKayMkaPeerListSCI = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 15, 1, 6, 3, 1, 4), SecySCI()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ieee8021XKayMkaPeerListSCI.setStatus('current')
ieee8021XNidConfigTable = MibTable((1, 3, 111, 2, 802, 1, 1, 15, 1, 7, 1), )
if mibBuilder.loadTexts: ieee8021XNidConfigTable.setStatus('current')
ieee8021XNidConfigEntry = MibTableRow((1, 3, 111, 2, 802, 1, 1, 15, 1, 7, 1, 1), ).setIndexNames((1, "IEEE8021X-PAE-MIB", "ieee8021XNidNID"))
if mibBuilder.loadTexts: ieee8021XNidConfigEntry.setStatus('current')
ieee8021XNidNID = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 15, 1, 7, 1, 1, 1), Ieee8021XPaeNID())
if mibBuilder.loadTexts: ieee8021XNidNID.setStatus('current')
ieee8021XNidUseEap = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 15, 1, 7, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("never", 1), ("immediate", 2), ("mkaFail", 3)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ieee8021XNidUseEap.setStatus('current')
ieee8021XNidUnauthAllowed = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 15, 1, 7, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("never", 1), ("immediate", 2), ("authFail", 3)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ieee8021XNidUnauthAllowed.setStatus('current')
ieee8021XNidUnsecuredAllowed = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 15, 1, 7, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("never", 1), ("immediate", 2), ("mkaFail", 3), ("mkaServer", 4)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ieee8021XNidUnsecuredAllowed.setStatus('current')
ieee8021XNidUnauthenticatedAccess = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 15, 1, 7, 1, 1, 5), Ieee8021XPaeNIDUnauthenticatedStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ieee8021XNidUnauthenticatedAccess.setStatus('current')
ieee8021XNidAccessCapabilities = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 15, 1, 7, 1, 1, 6), Ieee8021XPaeNIDCapabilites()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ieee8021XNidAccessCapabilities.setStatus('current')
ieee8021XNidKMD = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 15, 1, 7, 1, 1, 7), Ieee8021XPaeKMD()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ieee8021XNidKMD.setStatus('current')
ieee8021XNidRowStatus = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 15, 1, 7, 1, 1, 8), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ieee8021XNidRowStatus.setStatus('current')
ieee8021XAnnounceTable = MibTable((1, 3, 111, 2, 802, 1, 1, 15, 1, 7, 2), )
if mibBuilder.loadTexts: ieee8021XAnnounceTable.setStatus('current')
ieee8021XAnnounceEntry = MibTableRow((1, 3, 111, 2, 802, 1, 1, 15, 1, 7, 2, 1), ).setIndexNames((0, "IEEE8021X-PAE-MIB", "ieee8021XPaePortNumber"), (1, "IEEE8021X-PAE-MIB", "ieee8021XAnnounceNID"))
if mibBuilder.loadTexts: ieee8021XAnnounceEntry.setStatus('current')
ieee8021XAnnounceNID = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 15, 1, 7, 2, 1, 1), Ieee8021XPaeNID())
if mibBuilder.loadTexts: ieee8021XAnnounceNID.setStatus('current')
ieee8021XAnnounceAccessStatus = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 15, 1, 7, 2, 1, 2), Ieee8021XPaeNIDAccessStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ieee8021XAnnounceAccessStatus.setStatus('current')
ieee8021XAnnouncementTable = MibTable((1, 3, 111, 2, 802, 1, 1, 15, 1, 7, 3), )
if mibBuilder.loadTexts: ieee8021XAnnouncementTable.setStatus('current')
ieee8021XAnnouncementEntry = MibTableRow((1, 3, 111, 2, 802, 1, 1, 15, 1, 7, 3, 1), ).setIndexNames((0, "IEEE8021X-PAE-MIB", "ieee8021XPaePortNumber"), (1, "IEEE8021X-PAE-MIB", "ieee8021XAnnouncementNID"))
if mibBuilder.loadTexts: ieee8021XAnnouncementEntry.setStatus('current')
ieee8021XAnnouncementNID = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 15, 1, 7, 3, 1, 1), Ieee8021XPaeNID())
if mibBuilder.loadTexts: ieee8021XAnnouncementNID.setStatus('current')
ieee8021XAnnouncementKMD = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 15, 1, 7, 3, 1, 2), Ieee8021XPaeKMD()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ieee8021XAnnouncementKMD.setStatus('current')
ieee8021XAnnouncementSpecific = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 15, 1, 7, 3, 1, 3), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ieee8021XAnnouncementSpecific.setStatus('current')
ieee8021XAnnouncementAccessStatus = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 15, 1, 7, 3, 1, 4), Ieee8021XPaeNIDAccessStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ieee8021XAnnouncementAccessStatus.setStatus('current')
ieee8021XAnnouncementAccessRequested = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 15, 1, 7, 3, 1, 5), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ieee8021XAnnouncementAccessRequested.setStatus('current')
ieee8021XAnnouncementUnauthAccess = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 15, 1, 7, 3, 1, 6), Ieee8021XPaeNIDUnauthenticatedStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ieee8021XAnnouncementUnauthAccess.setStatus('current')
ieee8021XAnnouncementCapabilities = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 15, 1, 7, 3, 1, 7), Ieee8021XPaeNIDCapabilites()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ieee8021XAnnouncementCapabilities.setStatus('current')
ieee8021XAnnouncementCipherSuitesTable = MibTable((1, 3, 111, 2, 802, 1, 1, 15, 1, 7, 4), )
if mibBuilder.loadTexts: ieee8021XAnnouncementCipherSuitesTable.setStatus('current')
ieee8021XAnnouncementCipherSuitesEntry = MibTableRow((1, 3, 111, 2, 802, 1, 1, 15, 1, 7, 4, 1), ).setIndexNames((0, "IEEE8021X-PAE-MIB", "ieee8021XPaePortNumber"), (0, "IEEE8021X-PAE-MIB", "ieee8021XAnnouncementNID"), (0, "IEEE8021X-PAE-MIB", "ieee8021XAnnouncementCipherSuite"))
if mibBuilder.loadTexts: ieee8021XAnnouncementCipherSuitesEntry.setStatus('current')
ieee8021XAnnouncementCipherSuite = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 15, 1, 7, 4, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(8, 8)).setFixedLength(8))
if mibBuilder.loadTexts: ieee8021XAnnouncementCipherSuite.setStatus('current')
ieee8021XAnnouncementCipherCapability = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 15, 1, 7, 4, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ieee8021XAnnouncementCipherCapability.setStatus('current')
ieee8021XPaeCompliances = MibIdentifier((1, 3, 111, 2, 802, 1, 1, 15, 2, 1))
ieee8021XPaeGroups = MibIdentifier((1, 3, 111, 2, 802, 1, 1, 15, 2, 2))
ieee8021XPaeCompliance = ModuleCompliance((1, 3, 111, 2, 802, 1, 1, 15, 2, 1, 1)).setObjects(("IEEE8021X-PAE-MIB", "ieee8021XPaeSystemGroup"), ("IEEE8021X-PAE-MIB", "ieee8021XPaeLogonGroup"), ("IEEE8021X-PAE-MIB", "ieee8021XPaeEapolStatsGroup"), ("IEEE8021X-PAE-MIB", "ieee8021XPacGroup"), ("IEEE8021X-PAE-MIB", "ieee8021XPaeAuthConfigGroup"), ("IEEE8021X-PAE-MIB", "ieee8021XPaeSuppConfigGroup"), ("IEEE8021X-PAE-MIB", "ieee8021XPaeKaYMkaGroup"), ("IEEE8021X-PAE-MIB", "ieee8021XPaeNetworkIdentifierGroup"), ("IEEE8021X-PAE-MIB", "ieee8021XPaeAnnouncerGroup"), ("IEEE8021X-PAE-MIB", "ieee8021XPaeListenerGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ieee8021XPaeCompliance = ieee8021XPaeCompliance.setStatus('current')
ieee8021XPaeV2Compliance = ModuleCompliance((1, 3, 111, 2, 802, 1, 1, 15, 2, 1, 2)).setObjects(("IEEE8021X-PAE-MIB", "ieee8021XPaeSystemGroup"), ("IEEE8021X-PAE-MIB", "ieee8021XPaeLogonGroup"), ("IEEE8021X-PAE-MIB", "ieee8021XPaeEapolStatsGroup"), ("IEEE8021X-PAE-MIB", "ieee8021XPacGroup"), ("IEEE8021X-PAE-MIB", "ieee8021XPaeAuthConfigGroup"), ("IEEE8021X-PAE-MIB", "ieee8021XPaeSuppConfigGroup"), ("IEEE8021X-PAE-MIB", "ieee8021XPaeKaYMkaGroup"), ("IEEE8021X-PAE-MIB", "ieee8021XPaeNetworkIdentifierGroup"), ("IEEE8021X-PAE-MIB", "ieee8021XPaeAnnouncerGroup"), ("IEEE8021X-PAE-MIB", "ieee8021XPaeListenerGroup"), ("IEEE8021X-PAE-MIB", "ieee8021XPaeKaYIsupgradeGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ieee8021XPaeV2Compliance = ieee8021XPaeV2Compliance.setStatus('current')
ieee8021XPaeSystemGroup = ObjectGroup((1, 3, 111, 2, 802, 1, 1, 15, 2, 2, 1)).setObjects(("IEEE8021X-PAE-MIB", "ieee8021XPaeSysAccessControl"), ("IEEE8021X-PAE-MIB", "ieee8021XPaeSysAnnouncements"), ("IEEE8021X-PAE-MIB", "ieee8021XPaeSysEapolVersion"), ("IEEE8021X-PAE-MIB", "ieee8021XPaeSysMkaVersion"), ("IEEE8021X-PAE-MIB", "ieee8021XPaePortType"), ("IEEE8021X-PAE-MIB", "ieee8021XPaeControlledPortNumber"), ("IEEE8021X-PAE-MIB", "ieee8021XPaeUncontrolledPortNumber"), ("IEEE8021X-PAE-MIB", "ieee8021XPaeCommonPortNumber"), ("IEEE8021X-PAE-MIB", "ieee8021XPaePortInitialize"), ("IEEE8021X-PAE-MIB", "ieee8021XPaePortCapabilities"), ("IEEE8021X-PAE-MIB", "ieee8021XPaePortVirtualPortsEnable"), ("IEEE8021X-PAE-MIB", "ieee8021XPaePortMaxVirtualPorts"), ("IEEE8021X-PAE-MIB", "ieee8021XPaePortCurrentVirtualPorts"), ("IEEE8021X-PAE-MIB", "ieee8021XPaePortVirtualPortStart"), ("IEEE8021X-PAE-MIB", "ieee8021XPaePortVirtualPortPeerMAC"), ("IEEE8021X-PAE-MIB", "ieee8021XPaePortLogonEnable"), ("IEEE8021X-PAE-MIB", "ieee8021XPaePortAuthenticatorEnable"), ("IEEE8021X-PAE-MIB", "ieee8021XPaePortSupplicantEnable"), ("IEEE8021X-PAE-MIB", "ieee8021XPaePortKayMkaEnable"), ("IEEE8021X-PAE-MIB", "ieee8021XPaePortAnnouncerEnable"), ("IEEE8021X-PAE-MIB", "ieee8021XPaePortListenerEnable"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ieee8021XPaeSystemGroup = ieee8021XPaeSystemGroup.setStatus('current')
ieee8021XPacGroup = ObjectGroup((1, 3, 111, 2, 802, 1, 1, 15, 2, 2, 2)).setObjects(("IEEE8021X-PAE-MIB", "ieee8021XPacPortAdminPt2PtMAC"), ("IEEE8021X-PAE-MIB", "ieee8021XPacPortOperPt2PtMAC"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ieee8021XPacGroup = ieee8021XPacGroup.setStatus('current')
ieee8021XPaeLogonGroup = ObjectGroup((1, 3, 111, 2, 802, 1, 1, 15, 2, 2, 3)).setObjects(("IEEE8021X-PAE-MIB", "ieee8021XPaePortLogonConnectStatus"), ("IEEE8021X-PAE-MIB", "ieee8021XPaePortPortValid"), ("IEEE8021X-PAE-MIB", "ieee8021XPaePortSessionOctetsRx"), ("IEEE8021X-PAE-MIB", "ieee8021XPaePortSessionOctetsTx"), ("IEEE8021X-PAE-MIB", "ieee8021XPaePortSessionPktsRx"), ("IEEE8021X-PAE-MIB", "ieee8021XPaePortSessionPktsTx"), ("IEEE8021X-PAE-MIB", "ieee8021XPaePortSessionId"), ("IEEE8021X-PAE-MIB", "ieee8021XPaePortSessionStartTime"), ("IEEE8021X-PAE-MIB", "ieee8021XPaePortSessionIntervalTime"), ("IEEE8021X-PAE-MIB", "ieee8021XPaePortSessionTerminate"), ("IEEE8021X-PAE-MIB", "ieee8021XPaePortSessionUserName"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ieee8021XPaeLogonGroup = ieee8021XPaeLogonGroup.setStatus('current')
ieee8021XPaeAuthConfigGroup = ObjectGroup((1, 3, 111, 2, 802, 1, 1, 15, 2, 2, 4)).setObjects(("IEEE8021X-PAE-MIB", "ieee8021XAuthPaeAuthenticate"), ("IEEE8021X-PAE-MIB", "ieee8021XAuthPaeAuthenticated"), ("IEEE8021X-PAE-MIB", "ieee8021XAuthPaeFailed"), ("IEEE8021X-PAE-MIB", "ieee8021XAuthPaeReAuthEnabled"), ("IEEE8021X-PAE-MIB", "ieee8021XAuthPaeQuietPeriod"), ("IEEE8021X-PAE-MIB", "ieee8021XAuthPaeReauthPeriod"), ("IEEE8021X-PAE-MIB", "ieee8021XAuthPaeRetryMax"), ("IEEE8021X-PAE-MIB", "ieee8021XAuthPaeRetryCount"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ieee8021XPaeAuthConfigGroup = ieee8021XPaeAuthConfigGroup.setStatus('current')
ieee8021XPaeSuppConfigGroup = ObjectGroup((1, 3, 111, 2, 802, 1, 1, 15, 2, 2, 5)).setObjects(("IEEE8021X-PAE-MIB", "ieee8021XSuppPaeAuthenticate"), ("IEEE8021X-PAE-MIB", "ieee8021XSuppPaeAuthenticated"), ("IEEE8021X-PAE-MIB", "ieee8021XSuppPaeFailed"), ("IEEE8021X-PAE-MIB", "ieee8021XSuppPaeHelloPeriod"), ("IEEE8021X-PAE-MIB", "ieee8021XSuppPaeRetryMax"), ("IEEE8021X-PAE-MIB", "ieee8021XSuppPaeRetryCount"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ieee8021XPaeSuppConfigGroup = ieee8021XPaeSuppConfigGroup.setStatus('current')
ieee8021XPaeEapolStatsGroup = ObjectGroup((1, 3, 111, 2, 802, 1, 1, 15, 2, 2, 6)).setObjects(("IEEE8021X-PAE-MIB", "ieee8021XEapolInvalidFramesRx"), ("IEEE8021X-PAE-MIB", "ieee8021XEapolEapLengthErrorFramesRx"), ("IEEE8021X-PAE-MIB", "ieee8021XEapolAnnouncementFramesRx"), ("IEEE8021X-PAE-MIB", "ieee8021XEapolAnnouncementReqFramesRx"), ("IEEE8021X-PAE-MIB", "ieee8021XEapolPortUnavailableFramesRx"), ("IEEE8021X-PAE-MIB", "ieee8021XEapolStartFramesRx"), ("IEEE8021X-PAE-MIB", "ieee8021XEapolEapFramesRx"), ("IEEE8021X-PAE-MIB", "ieee8021XEapolLogoffFramesRx"), ("IEEE8021X-PAE-MIB", "ieee8021XEapolMkNoCknFramesRx"), ("IEEE8021X-PAE-MIB", "ieee8021XEapolMkInvalidFramesRx"), ("IEEE8021X-PAE-MIB", "ieee8021XEapolLastRxFrameVersion"), ("IEEE8021X-PAE-MIB", "ieee8021XEapolLastRxFrameSource"), ("IEEE8021X-PAE-MIB", "ieee8021XEapolSuppEapFramesTx"), ("IEEE8021X-PAE-MIB", "ieee8021XEapolLogoffFramesTx"), ("IEEE8021X-PAE-MIB", "ieee8021XEapolAnnouncementFramesTx"), ("IEEE8021X-PAE-MIB", "ieee8021XEapolAnnouncementReqFramesTx"), ("IEEE8021X-PAE-MIB", "ieee8021XEapolStartFramesTx"), ("IEEE8021X-PAE-MIB", "ieee8021XEapolAuthEapFramesTx"), ("IEEE8021X-PAE-MIB", "ieee8021XEapolMkaFramesTx"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ieee8021XPaeEapolStatsGroup = ieee8021XPaeEapolStatsGroup.setStatus('current')
ieee8021XPaeKaYMkaGroup = ObjectGroup((1, 3, 111, 2, 802, 1, 1, 15, 2, 2, 7)).setObjects(("IEEE8021X-PAE-MIB", "ieee8021XKayMkaActive"), ("IEEE8021X-PAE-MIB", "ieee8021XKayMkaAuthenticated"), ("IEEE8021X-PAE-MIB", "ieee8021XKayMkaSecured"), ("IEEE8021X-PAE-MIB", "ieee8021XKayMkaFailed"), ("IEEE8021X-PAE-MIB", "ieee8021XKayMkaActorSCI"), ("IEEE8021X-PAE-MIB", "ieee8021XKayMkaActorsPriority"), ("IEEE8021X-PAE-MIB", "ieee8021XKayMkaKeyServerPriority"), ("IEEE8021X-PAE-MIB", "ieee8021XKayMkaKeyServerSCI"), ("IEEE8021X-PAE-MIB", "ieee8021XKayAllowedJoinGroup"), ("IEEE8021X-PAE-MIB", "ieee8021XKayAllowedFormGroup"), ("IEEE8021X-PAE-MIB", "ieee8021XKayCreateNewGroup"), ("IEEE8021X-PAE-MIB", "ieee8021XKayMacSecCapability"), ("IEEE8021X-PAE-MIB", "ieee8021XKayMacSecDesired"), ("IEEE8021X-PAE-MIB", "ieee8021XKayMacSecProtect"), ("IEEE8021X-PAE-MIB", "ieee8021XKayMacSecReplayProtect"), ("IEEE8021X-PAE-MIB", "ieee8021XKayMacSecValidate"), ("IEEE8021X-PAE-MIB", "ieee8021XKayMacSecConfidentialityOffset"), ("IEEE8021X-PAE-MIB", "ieee8021XKayMkaTxKN"), ("IEEE8021X-PAE-MIB", "ieee8021XKayMkaTxAN"), ("IEEE8021X-PAE-MIB", "ieee8021XKayMkaRxKN"), ("IEEE8021X-PAE-MIB", "ieee8021XKayMkaRxAN"), ("IEEE8021X-PAE-MIB", "ieee8021XKayMkaPartKMD"), ("IEEE8021X-PAE-MIB", "ieee8021XKayMkaPartNID"), ("IEEE8021X-PAE-MIB", "ieee8021XKayMkaPartCached"), ("IEEE8021X-PAE-MIB", "ieee8021XKayMkaPartActive"), ("IEEE8021X-PAE-MIB", "ieee8021XKayMkaPartRetain"), ("IEEE8021X-PAE-MIB", "ieee8021XKayMkaPartActivateControl"), ("IEEE8021X-PAE-MIB", "ieee8021XKayMkaPartPrincipal"), ("IEEE8021X-PAE-MIB", "ieee8021XKayMkaPartDistCKN"), ("IEEE8021X-PAE-MIB", "ieee8021XKayMkaPartRowStatus"), ("IEEE8021X-PAE-MIB", "ieee8021XKayMkaPeerListMN"), ("IEEE8021X-PAE-MIB", "ieee8021XKayMkaPeerListType"), ("IEEE8021X-PAE-MIB", "ieee8021XKayMkaPeerListSCI"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ieee8021XPaeKaYMkaGroup = ieee8021XPaeKaYMkaGroup.setStatus('current')
ieee8021XPaeNetworkIdentifierGroup = ObjectGroup((1, 3, 111, 2, 802, 1, 1, 15, 2, 2, 8)).setObjects(("IEEE8021X-PAE-MIB", "ieee8021XLogonNIDConnectedNID"), ("IEEE8021X-PAE-MIB", "ieee8021XLogonNIDRequestedNID"), ("IEEE8021X-PAE-MIB", "ieee8021XLogonNIDSelectedNID"), ("IEEE8021X-PAE-MIB", "ieee8021XNidUseEap"), ("IEEE8021X-PAE-MIB", "ieee8021XNidUnauthAllowed"), ("IEEE8021X-PAE-MIB", "ieee8021XNidUnsecuredAllowed"), ("IEEE8021X-PAE-MIB", "ieee8021XNidUnauthenticatedAccess"), ("IEEE8021X-PAE-MIB", "ieee8021XNidAccessCapabilities"), ("IEEE8021X-PAE-MIB", "ieee8021XNidKMD"), ("IEEE8021X-PAE-MIB", "ieee8021XNidRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ieee8021XPaeNetworkIdentifierGroup = ieee8021XPaeNetworkIdentifierGroup.setStatus('current')
ieee8021XPaeAnnouncerGroup = ObjectGroup((1, 3, 111, 2, 802, 1, 1, 15, 2, 2, 9)).setObjects(("IEEE8021X-PAE-MIB", "ieee8021XAnnounceAccessStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ieee8021XPaeAnnouncerGroup = ieee8021XPaeAnnouncerGroup.setStatus('current')
ieee8021XPaeListenerGroup = ObjectGroup((1, 3, 111, 2, 802, 1, 1, 15, 2, 2, 10)).setObjects(("IEEE8021X-PAE-MIB", "ieee8021XAnnouncementKMD"), ("IEEE8021X-PAE-MIB", "ieee8021XAnnouncementSpecific"), ("IEEE8021X-PAE-MIB", "ieee8021XAnnouncementAccessStatus"), ("IEEE8021X-PAE-MIB", "ieee8021XAnnouncementAccessRequested"), ("IEEE8021X-PAE-MIB", "ieee8021XAnnouncementUnauthAccess"), ("IEEE8021X-PAE-MIB", "ieee8021XAnnouncementCapabilities"), ("IEEE8021X-PAE-MIB", "ieee8021XAnnouncementCipherCapability"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ieee8021XPaeListenerGroup = ieee8021XPaeListenerGroup.setStatus('current')
ieee8021XPaeKaYIsupgradeGroup = ObjectGroup((1, 3, 111, 2, 802, 1, 1, 15, 2, 2, 11)).setObjects(("IEEE8021X-PAE-MIB", "ieee8021XKayMkaSuspendFor"), ("IEEE8021X-PAE-MIB", "ieee8021XKayMkaSuspendOnRequest"), ("IEEE8021X-PAE-MIB", "ieee8021XKayMkaSuspendedWhile"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ieee8021XPaeKaYIsupgradeGroup = ieee8021XPaeKaYIsupgradeGroup.setStatus('current')
mibBuilder.exportSymbols("IEEE8021X-PAE-MIB", ieee8021XKayMkaRxAN=ieee8021XKayMkaRxAN, ieee8021XAnnouncementNID=ieee8021XAnnouncementNID, ieee8021XPaePortVirtualPortPeerMAC=ieee8021XPaePortVirtualPortPeerMAC, ieee8021XKayMkaTxKN=ieee8021XKayMkaTxKN, ieee8021XPacPortAdminPt2PtMAC=ieee8021XPacPortAdminPt2PtMAC, ieee8021XSuppPaeRetryMax=ieee8021XSuppPaeRetryMax, ieee8021XAnnouncementCipherSuite=ieee8021XAnnouncementCipherSuite, ieee8021XPaeSuppConfigGroup=ieee8021XPaeSuppConfigGroup, ieee8021XPaePortSessionStartTime=ieee8021XPaePortSessionStartTime, ieee8021XEapolEapLengthErrorFramesRx=ieee8021XEapolEapLengthErrorFramesRx, ieee8021XKayMkaPartPrincipal=ieee8021XKayMkaPartPrincipal, Ieee8021XPaeKMD=Ieee8021XPaeKMD, ieee8021XKayMkaTxAN=ieee8021XKayMkaTxAN, ieee8021XKayMkaParticipantTable=ieee8021XKayMkaParticipantTable, ieee8021XPacPortTable=ieee8021XPacPortTable, ieee8021XAnnouncementKMD=ieee8021XAnnouncementKMD, ieee8021XAnnouncementAccessRequested=ieee8021XAnnouncementAccessRequested, ieee8021XPaeCommonPortNumber=ieee8021XPaeCommonPortNumber, ieee8021XPaePortPortValid=ieee8021XPaePortPortValid, ieee8021XEapolLastRxFrameVersion=ieee8021XEapolLastRxFrameVersion, ieee8021XPaeLogon=ieee8021XPaeLogon, Ieee8021XPaeNIDAccessStatus=Ieee8021XPaeNIDAccessStatus, ieee8021XAnnounceTable=ieee8021XAnnounceTable, ieee8021XAnnouncementCipherCapability=ieee8021XAnnouncementCipherCapability, ieee8021XPaeKaYIsupgradeGroup=ieee8021XPaeKaYIsupgradeGroup, ieee8021XPaePortAuthenticatorEnable=ieee8021XPaePortAuthenticatorEnable, Ieee8021XMkaKN=Ieee8021XMkaKN, ieee8021XKayMkaActorsPriority=ieee8021XKayMkaActorsPriority, ieee8021XKayMkaAuthenticated=ieee8021XKayMkaAuthenticated, ieee8021XAnnouncementAccessStatus=ieee8021XAnnouncementAccessStatus, ieee8021XPaeNetworkIdentifierGroup=ieee8021XPaeNetworkIdentifierGroup, Ieee8021XPaeNIDCapabilites=Ieee8021XPaeNIDCapabilites, ieee8021XPaePortLogonConnectStatus=ieee8021XPaePortLogonConnectStatus, ieee8021XAuthPaeReauthPeriod=ieee8021XAuthPaeReauthPeriod, ieee8021XPaeMIBConformance=ieee8021XPaeMIBConformance, ieee8021XKayMkaPartDistCKN=ieee8021XKayMkaPartDistCKN, ieee8021XSuppPaeAuthenticated=ieee8021XSuppPaeAuthenticated, ieee8021XKayMkaPartNID=ieee8021XKayMkaPartNID, ieee8021XKayMkaSecured=ieee8021XKayMkaSecured, ieee8021XKayMkaPartActivateControl=ieee8021XKayMkaPartActivateControl, ieee8021XKayMkaRxKN=ieee8021XKayMkaRxKN, ieee8021XPaePortLogonTable=ieee8021XPaePortLogonTable, Ieee8021XPaeNIDUnauthenticatedStatus=Ieee8021XPaeNIDUnauthenticatedStatus, ieee8021XPacPortControlledPortNumber=ieee8021XPacPortControlledPortNumber, ieee8021XPaePortCapabilities=ieee8021XPaePortCapabilities, ieee8021XKayMkaPartCached=ieee8021XKayMkaPartCached, ieee8021XPaePortSessionOctetsTx=ieee8021XPaePortSessionOctetsTx, ieee8021XKayMkaPartKMD=ieee8021XKayMkaPartKMD, ieee8021XPaeKaYMkaGroup=ieee8021XPaeKaYMkaGroup, ieee8021XPaeSystemGroup=ieee8021XPaeSystemGroup, ieee8021XAnnouncementCipherSuitesTable=ieee8021XAnnouncementCipherSuitesTable, ieee8021XPaeSysAnnouncements=ieee8021XPaeSysAnnouncements, ieee8021XSuppPaeRetryCount=ieee8021XSuppPaeRetryCount, ieee8021XAuthPaeQuietPeriod=ieee8021XAuthPaeQuietPeriod, ieee8021XKayMkaPartCKN=ieee8021XKayMkaPartCKN, ieee8021XKayMkaPartActive=ieee8021XKayMkaPartActive, ieee8021XSuppPaeFailed=ieee8021XSuppPaeFailed, ieee8021XPaePortVirtualPortStart=ieee8021XPaePortVirtualPortStart, ieee8021XPaeListenerGroup=ieee8021XPaeListenerGroup, ieee8021XAuthenticatorEntry=ieee8021XAuthenticatorEntry, ieee8021XNidAccessCapabilities=ieee8021XNidAccessCapabilities, ieee8021XPaeCompliances=ieee8021XPaeCompliances, ieee8021XKayMkaPeerListMI=ieee8021XKayMkaPeerListMI, ieee8021XSuppPaeHelloPeriod=ieee8021XSuppPaeHelloPeriod, ieee8021XAnnounceEntry=ieee8021XAnnounceEntry, ieee8021XPaePortAnnouncerEnable=ieee8021XPaePortAnnouncerEnable, ieee8021XPaeLogonGroup=ieee8021XPaeLogonGroup, ieee8021XNidUnauthenticatedAccess=ieee8021XNidUnauthenticatedAccess, ieee8021XKayMkaSuspendFor=ieee8021XKayMkaSuspendFor, ieee8021XKayMkaActive=ieee8021XKayMkaActive, ieee8021XKayMacSecDesired=ieee8021XKayMacSecDesired, ieee8021XPaeAuthenticator=ieee8021XPaeAuthenticator, ieee8021XPaeSysMkaVersion=ieee8021XPaeSysMkaVersion, ieee8021XEapolMkNoCknFramesRx=ieee8021XEapolMkNoCknFramesRx, ieee8021XKayMkaSuspendOnRequest=ieee8021XKayMkaSuspendOnRequest, ieee8021XKayMkaTable=ieee8021XKayMkaTable, ieee8021XKayMkaPeerListEntry=ieee8021XKayMkaPeerListEntry, ieee8021XPaePortSessionEntry=ieee8021XPaePortSessionEntry, ieee8021XEapolPortUnavailableFramesRx=ieee8021XEapolPortUnavailableFramesRx, ieee8021XPaeSysEapolVersion=ieee8021XPaeSysEapolVersion, ieee8021XPaeMIBNotifications=ieee8021XPaeMIBNotifications, ieee8021XAnnouncementUnauthAccess=ieee8021XAnnouncementUnauthAccess, ieee8021XKayMkaPeerListType=ieee8021XKayMkaPeerListType, ieee8021XPaeAnnouncerGroup=ieee8021XPaeAnnouncerGroup, Ieee8021XMkaMN=Ieee8021XMkaMN, ieee8021XEapolLogoffFramesRx=ieee8021XEapolLogoffFramesRx, ieee8021XEapolMkaFramesTx=ieee8021XEapolMkaFramesTx, ieee8021XKayMkaKeyServerSCI=ieee8021XKayMkaKeyServerSCI, ieee8021XPaePortSupplicantEnable=ieee8021XPaePortSupplicantEnable, ieee8021XPaePortSessionIntervalTime=ieee8021XPaePortSessionIntervalTime, ieee8021XAnnouncementCapabilities=ieee8021XAnnouncementCapabilities, ieee8021XAuthPaeReAuthEnabled=ieee8021XAuthPaeReAuthEnabled, ieee8021XPaeCompliance=ieee8021XPaeCompliance, ieee8021XAuthPaeRetryCount=ieee8021XAuthPaeRetryCount, ieee8021XPaePortListenerEnable=ieee8021XPaePortListenerEnable, ieee8021XEapolStatsEntry=ieee8021XEapolStatsEntry, ieee8021XPaeGroups=ieee8021XPaeGroups, ieee8021XKayAllowedJoinGroup=ieee8021XKayAllowedJoinGroup, ieee8021XPaePortKayMkaEnable=ieee8021XPaePortKayMkaEnable, ieee8021XNidNID=ieee8021XNidNID, ieee8021XNidKMD=ieee8021XNidKMD, ieee8021XKayMacSecValidate=ieee8021XKayMacSecValidate, Ieee8021XMkaKeyServerPriority=Ieee8021XMkaKeyServerPriority, ieee8021XLogonNIDConnectedNID=ieee8021XLogonNIDConnectedNID, ieee8021XEapolAnnouncementFramesRx=ieee8021XEapolAnnouncementFramesRx, ieee8021XAuthPaeFailed=ieee8021XAuthPaeFailed, ieee8021XLogonNIDSelectedNID=ieee8021XLogonNIDSelectedNID, Ieee8021XPaeCKN=Ieee8021XPaeCKN, ieee8021XKayMkaKeyServerPriority=ieee8021XKayMkaKeyServerPriority, ieee8021XNidRowStatus=ieee8021XNidRowStatus, ieee8021XEapolEapFramesRx=ieee8021XEapolEapFramesRx, ieee8021XPaePortSessionTable=ieee8021XPaePortSessionTable, ieee8021XAnnouncementEntry=ieee8021XAnnouncementEntry, ieee8021XSuppPaeAuthenticate=ieee8021XSuppPaeAuthenticate, ieee8021XEapolStatsTable=ieee8021XEapolStatsTable, ieee8021XKayAllowedFormGroup=ieee8021XKayAllowedFormGroup, ieee8021XLogonNIDEntry=ieee8021XLogonNIDEntry, Ieee8021XMkaMI=Ieee8021XMkaMI, ieee8021XKayMkaPeerListMN=ieee8021XKayMkaPeerListMN, ieee8021XPaeNetworkIdentifier=ieee8021XPaeNetworkIdentifier, ieee8021XPaePortNumber=ieee8021XPaePortNumber, ieee8021XPaePortTable=ieee8021XPaePortTable, ieee8021XAuthenticatorTable=ieee8021XAuthenticatorTable, ieee8021XKayMacSecConfidentialityOffset=ieee8021XKayMacSecConfidentialityOffset, ieee8021XKayMkaPartRetain=ieee8021XKayMkaPartRetain, Ieee8021XPaeCKNOrNull=Ieee8021XPaeCKNOrNull, ieee8021XPaePortSessionPktsRx=ieee8021XPaePortSessionPktsRx, ieee8021XEapolAnnouncementReqFramesTx=ieee8021XEapolAnnouncementReqFramesTx, ieee8021XPaePortLogonEntry=ieee8021XPaePortLogonEntry, ieee8021XLogonNIDRequestedNID=ieee8021XLogonNIDRequestedNID, ieee8021XKayMkaPeerListTable=ieee8021XKayMkaPeerListTable, ieee8021XPaeMIB=ieee8021XPaeMIB, ieee8021XEapolMkInvalidFramesRx=ieee8021XEapolMkInvalidFramesRx, ieee8021XAuthPaeRetryMax=ieee8021XAuthPaeRetryMax, ieee8021XKayMkaSuspendedWhile=ieee8021XKayMkaSuspendedWhile, ieee8021XPaeV2Compliance=ieee8021XPaeV2Compliance, ieee8021XEapolStartFramesRx=ieee8021XEapolStartFramesRx, ieee8021XEapolSuppEapFramesTx=ieee8021XEapolSuppEapFramesTx, ieee8021XKayMkaPeerListSCI=ieee8021XKayMkaPeerListSCI, ieee8021XNidUseEap=ieee8021XNidUseEap, ieee8021XNidConfigTable=ieee8021XNidConfigTable, ieee8021XPaeEapol=ieee8021XPaeEapol, ieee8021XEapolAnnouncementFramesTx=ieee8021XEapolAnnouncementFramesTx, ieee8021XEapolAuthEapFramesTx=ieee8021XEapolAuthEapFramesTx, ieee8021XPaePortMaxVirtualPorts=ieee8021XPaePortMaxVirtualPorts, ieee8021XSupplicantEntry=ieee8021XSupplicantEntry, ieee8021XKayMacSecProtect=ieee8021XKayMacSecProtect, Ieee8021XPaeNIDOrNull=Ieee8021XPaeNIDOrNull, ieee8021XPaeSystem=ieee8021XPaeSystem, ieee8021XNidConfigEntry=ieee8021XNidConfigEntry, ieee8021XKayMkaPartRowStatus=ieee8021XKayMkaPartRowStatus, ieee8021XSupplicantTable=ieee8021XSupplicantTable, ieee8021XPaePortType=ieee8021XPaePortType, ieee8021XPacPortOperPt2PtMAC=ieee8021XPacPortOperPt2PtMAC, ieee8021XPaePortSessionUserName=ieee8021XPaePortSessionUserName, ieee8021XLogonNIDTable=ieee8021XLogonNIDTable, ieee8021XPaePortCurrentVirtualPorts=ieee8021XPaePortCurrentVirtualPorts, ieee8021XEapolInvalidFramesRx=ieee8021XEapolInvalidFramesRx, ieee8021XPaeControlledPortNumber=ieee8021XPaeControlledPortNumber, ieee8021XKayCreateNewGroup=ieee8021XKayCreateNewGroup, ieee8021XKayMacSecCapability=ieee8021XKayMacSecCapability, ieee8021XKayMacSecReplayProtect=ieee8021XKayMacSecReplayProtect, ieee8021XPaeMIBObjects=ieee8021XPaeMIBObjects, ieee8021XPaePortSessionOctetsRx=ieee8021XPaePortSessionOctetsRx, ieee8021XPaePortSessionPktsTx=ieee8021XPaePortSessionPktsTx, ieee8021XAnnounceAccessStatus=ieee8021XAnnounceAccessStatus, ieee8021XPaeSupplicant=ieee8021XPaeSupplicant, ieee8021XKayMkaActorSCI=ieee8021XKayMkaActorSCI, ieee8021XAnnounceNID=ieee8021XAnnounceNID, ieee8021XPaePortEntry=ieee8021XPaePortEntry, ieee8021XKayMkaEntry=ieee8021XKayMkaEntry, ieee8021XNidUnauthAllowed=ieee8021XNidUnauthAllowed, ieee8021XKayMkaFailed=ieee8021XKayMkaFailed, ieee8021XPacGroup=ieee8021XPacGroup, ieee8021XEapolLastRxFrameSource=ieee8021XEapolLastRxFrameSource, ieee8021XEapolStartFramesTx=ieee8021XEapolStartFramesTx, ieee8021XAnnouncementTable=ieee8021XAnnouncementTable, ieee8021XEapolAnnouncementReqFramesRx=ieee8021XEapolAnnouncementReqFramesRx, ieee8021XPaePortInitialize=ieee8021XPaePortInitialize, ieee8021XPaeAuthConfigGroup=ieee8021XPaeAuthConfigGroup, ieee8021XPaePortSessionTerminate=ieee8021XPaePortSessionTerminate, ieee8021XAnnouncementSpecific=ieee8021XAnnouncementSpecific, Ieee8021XPaeNID=Ieee8021XPaeNID, ieee8021XPaePortVirtualPortsEnable=ieee8021XPaePortVirtualPortsEnable, ieee8021XAuthPaeAuthenticated=ieee8021XAuthPaeAuthenticated, ieee8021XPaePortLogonEnable=ieee8021XPaePortLogonEnable, ieee8021XPaeUncontrolledPortNumber=ieee8021XPaeUncontrolledPortNumber, ieee8021XEapolLogoffFramesTx=ieee8021XEapolLogoffFramesTx, ieee8021XAuthPaeAuthenticate=ieee8021XAuthPaeAuthenticate, ieee8021XAnnouncementCipherSuitesEntry=ieee8021XAnnouncementCipherSuitesEntry, ieee8021XNidUnsecuredAllowed=ieee8021XNidUnsecuredAllowed, PYSNMP_MODULE_ID=ieee8021XPaeMIB, ieee8021XPaePortSessionId=ieee8021XPaePortSessionId, ieee8021XKayMkaParticipantEntry=ieee8021XKayMkaParticipantEntry, ieee8021XPacPortEntry=ieee8021XPacPortEntry, ieee8021XPaeKaY=ieee8021XPaeKaY, ieee8021XPaeEapolStatsGroup=ieee8021XPaeEapolStatsGroup, ieee8021XPaeSysAccessControl=ieee8021XPaeSysAccessControl, ieee8021XPaeSessionControlledPortNumber=ieee8021XPaeSessionControlledPortNumber)
