#
# PySNMP MIB module CISCO-PTP-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CISCO-PTP-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:53:33 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ConstraintsUnion, SingleValueConstraint, ValueSizeConstraint, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ConstraintsUnion", "SingleValueConstraint", "ValueSizeConstraint", "ValueRangeConstraint")
ciscoMgmt, = mibBuilder.importSymbols("CISCO-SMI", "ciscoMgmt")
InterfaceIndexOrZero, = mibBuilder.importSymbols("CISCO-TC", "InterfaceIndexOrZero")
InetAddressType, InetAddress = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddressType", "InetAddress")
NotificationGroup, ModuleCompliance, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance", "ObjectGroup")
Counter64, NotificationType, ModuleIdentity, ObjectIdentity, Unsigned32, Bits, Gauge32, MibScalar, MibTable, MibTableRow, MibTableColumn, Integer32, IpAddress, TimeTicks, MibIdentifier, Counter32, iso = mibBuilder.importSymbols("SNMPv2-SMI", "Counter64", "NotificationType", "ModuleIdentity", "ObjectIdentity", "Unsigned32", "Bits", "Gauge32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Integer32", "IpAddress", "TimeTicks", "MibIdentifier", "Counter32", "iso")
TextualConvention, DisplayString, TruthValue = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString", "TruthValue")
ciscoPtpMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 9, 9, 760))
ciscoPtpMIB.setRevisions(('2011-01-28 00:00',))
if mibBuilder.loadTexts: ciscoPtpMIB.setLastUpdated('201101280000Z')
if mibBuilder.loadTexts: ciscoPtpMIB.setOrganization('Cisco Systems, Inc.')
class ClockDomainType(TextualConvention, Unsigned32):
    reference = 'Section 7.1 Domains and Table 2 of [1]'
    status = 'current'
    displayHint = 'd'
    subtypeSpec = Unsigned32.subtypeSpec + ValueRangeConstraint(0, 255)

class ClockIdentity(TextualConvention, OctetString):
    reference = 'Section 7.5.2.2.1 from [1]'
    status = 'current'
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(1, 255)

class ClockIntervalBase2(TextualConvention, Integer32):
    reference = 'Section 7.7.2.1 General interval specification of [1]'
    status = 'current'
    displayHint = 'd'
    subtypeSpec = Integer32.subtypeSpec + ValueRangeConstraint(-128, 127)

class ClockMechanismType(TextualConvention, Integer32):
    reference = 'Sections 8.2.5.4.4, 6.6.4 and 7.4.2 of [1].'
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 254))
    namedValues = NamedValues(("e2e", 1), ("p2p", 2), ("disabled", 254))

class ClockInstanceType(TextualConvention, Unsigned32):
    status = 'current'
    displayHint = 'd'
    subtypeSpec = Unsigned32.subtypeSpec + ValueRangeConstraint(0, 255)

class ClockPortNumber(TextualConvention, Unsigned32):
    reference = 'Section 7.5.2.3 Port Number and 5.3.5 of [1]'
    status = 'current'
    displayHint = 'd'
    subtypeSpec = Unsigned32.subtypeSpec + ValueRangeConstraint(0, 65535)

class ClockPortState(TextualConvention, Integer32):
    reference = 'Section 8.2.5.3.1 portState and 9.2.5 of [1]'
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9))
    namedValues = NamedValues(("initializing", 1), ("faulty", 2), ("disabled", 3), ("listening", 4), ("preMaster", 5), ("master", 6), ("passive", 7), ("uncalibrated", 8), ("slave", 9))

class ClockProfileType(TextualConvention, Integer32):
    reference = 'Section 3.1.30 and 19.3 PTP profiles of [1]'
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3))
    namedValues = NamedValues(("default", 1), ("telecom", 2), ("vendorspecific", 3))

class ClockQualityAccuracyType(TextualConvention, Integer32):
    reference = 'Section 5.3.7, 7.6.2.5 and Table 6 of [1]'
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 254, 255))
    namedValues = NamedValues(("reserved00", 1), ("nanoSecond25", 32), ("nanoSecond100", 33), ("nanoSecond250", 34), ("microSec1", 35), ("microSec2dot5", 36), ("microSec10", 37), ("microSec25", 38), ("microSec100", 39), ("microSec250", 40), ("milliSec1", 41), ("milliSec2dot5", 42), ("milliSec10", 43), ("milliSec25", 44), ("milliSec100", 45), ("milliSec250", 46), ("second1", 47), ("second10", 48), ("secondGreater10", 49), ("unknown", 254), ("reserved255", 255))

class ClockQualityClassType(TextualConvention, Unsigned32):
    reference = 'section 5.3.7, 7.6.2.4 and Table 5 of [1].'
    status = 'current'
    displayHint = 'd'
    subtypeSpec = Unsigned32.subtypeSpec + ValueRangeConstraint(0, 255)

class ClockRoleType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("master", 1), ("slave", 2))

class ClockStateType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))
    namedValues = NamedValues(("freerun", 1), ("holdover", 2), ("acquiring", 3), ("frequencyLocked", 4), ("phaseAligned", 5))

class ClockTimeSourceType(TextualConvention, Integer32):
    reference = 'section 5.3.7, 7.6.2.6 and Table 7 of [1].'
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(16, 32, 48, 64, 80, 96, 144, 160))
    namedValues = NamedValues(("atomicClock", 16), ("gps", 32), ("terrestrialRadio", 48), ("ptp", 64), ("ntp", 80), ("handSet", 96), ("other", 144), ("internalOsillator", 160))

class ClockTimeInterval(TextualConvention, OctetString):
    reference = 'Section 5.3.2 and setion 7.7.2.1 Timer interval specification of [1]'
    status = 'current'
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(1, 255)

class ClockTxModeType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3))
    namedValues = NamedValues(("unicast", 1), ("multicast", 2), ("multicastmix", 3))

class ClockType(TextualConvention, Integer32):
    reference = 'section 6.5.1 of [1].'
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))
    namedValues = NamedValues(("ordinaryClock", 1), ("boundaryClock", 2), ("transparentClock", 3), ("boundaryNode", 4))

ciscoPtpMIBNotifs = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 760, 0))
ciscoPtpMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 760, 1))
ciscoPtpMIBConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 760, 2))
ciscoPtpMIBSystemInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 760, 1, 1))
ciscoPtpMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 760, 2, 1))
ciscoPtpMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 760, 2, 2))
ciscoPtpMIBCompliances1 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 760, 2, 1, 1)).setObjects(("CISCO-PTP-MIB", "ciscoPtpMIBSystemInfoGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoPtpMIBCompliances1 = ciscoPtpMIBCompliances1.setStatus('current')
ciscoPtpMIBCompliances2 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 760, 2, 1, 2)).setObjects(("CISCO-PTP-MIB", "ciscoPtpMIBClockCurrentDSGroup"), ("CISCO-PTP-MIB", "ciscoPtpMIBClockParentDSGroup"), ("CISCO-PTP-MIB", "ciscoPtpMIBClockDefaultDSGroup"), ("CISCO-PTP-MIB", "ciscoPtpMIBClockRunningGroup"), ("CISCO-PTP-MIB", "ciscoPtpMIBClockTimepropertiesGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoPtpMIBCompliances2 = ciscoPtpMIBCompliances2.setStatus('current')
ciscoPtpMIBCompliances3 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 760, 2, 1, 3)).setObjects(("CISCO-PTP-MIB", "ciscoPtpMIBClockPortGroup"), ("CISCO-PTP-MIB", "ciscoPtpMIBClockPortDSGroup"), ("CISCO-PTP-MIB", "ciscoPtpMIBClockPortRunningGroup"), ("CISCO-PTP-MIB", "ciscoPtpMIBClockPortAssociateGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoPtpMIBCompliances3 = ciscoPtpMIBCompliances3.setStatus('current')
ciscoPtpMIBCompliances4 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 760, 2, 1, 4)).setObjects(("CISCO-PTP-MIB", "ciscoPtpMIBClockTranparentDSGroup"), ("CISCO-PTP-MIB", "ciscoPtpMIBClockPortTransDSGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoPtpMIBCompliances4 = ciscoPtpMIBCompliances4.setStatus('current')
ciscoPtpMIBSystemInfoGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 760, 2, 2, 1)).setObjects(("CISCO-PTP-MIB", "cPtpSystemDomainTotals"), ("CISCO-PTP-MIB", "cPtpDomainClockPortsTotal"), ("CISCO-PTP-MIB", "cPtpDomainClockPortPhysicalInterfacesTotal"), ("CISCO-PTP-MIB", "cPtpClockInput1ppsEnabled"), ("CISCO-PTP-MIB", "cPtpClockOutput1ppsEnabled"), ("CISCO-PTP-MIB", "cPtpClockOutput1ppsOffsetEnabled"), ("CISCO-PTP-MIB", "cPtpClockInputFrequencyEnabled"), ("CISCO-PTP-MIB", "cPtpClockTODEnabled"), ("CISCO-PTP-MIB", "cPtpClockOutput1ppsOffsetValue"), ("CISCO-PTP-MIB", "cPtpClockOutput1ppsOffsetNegative"), ("CISCO-PTP-MIB", "cPtpSystemProfile"), ("CISCO-PTP-MIB", "cPtpClockInput1ppsInterface"), ("CISCO-PTP-MIB", "cPtpClockOutput1ppsInterface"), ("CISCO-PTP-MIB", "cPtpClockTODInterface"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoPtpMIBSystemInfoGroup = ciscoPtpMIBSystemInfoGroup.setStatus('current')
ciscoPtpMIBClockCurrentDSGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 760, 2, 2, 2)).setObjects(("CISCO-PTP-MIB", "cPtpClockCurrentDSStepsRemoved"), ("CISCO-PTP-MIB", "cPtpClockCurrentDSOffsetFromMaster"), ("CISCO-PTP-MIB", "cPtpClockCurrentDSMeanPathDelay"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoPtpMIBClockCurrentDSGroup = ciscoPtpMIBClockCurrentDSGroup.setStatus('current')
ciscoPtpMIBClockParentDSGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 760, 2, 2, 3)).setObjects(("CISCO-PTP-MIB", "cPtpClockParentDSParentPortIdentity"), ("CISCO-PTP-MIB", "cPtpClockParentDSParentStats"), ("CISCO-PTP-MIB", "cPtpClockParentDSOffset"), ("CISCO-PTP-MIB", "cPtpClockParentDSClockPhChRate"), ("CISCO-PTP-MIB", "cPtpClockParentDSGMClockIdentity"), ("CISCO-PTP-MIB", "cPtpClockParentDSGMClockPriority1"), ("CISCO-PTP-MIB", "cPtpClockParentDSGMClockPriority2"), ("CISCO-PTP-MIB", "cPtpClockParentDSGMClockQualityClass"), ("CISCO-PTP-MIB", "cPtpClockParentDSGMClockQualityAccuracy"), ("CISCO-PTP-MIB", "cPtpClockParentDSGMClockQualityOffset"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoPtpMIBClockParentDSGroup = ciscoPtpMIBClockParentDSGroup.setStatus('current')
ciscoPtpMIBClockDefaultDSGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 760, 2, 2, 4)).setObjects(("CISCO-PTP-MIB", "cPtpClockDefaultDSTwoStepFlag"), ("CISCO-PTP-MIB", "cPtpClockDefaultDSClockIdentity"), ("CISCO-PTP-MIB", "cPtpClockDefaultDSPriority1"), ("CISCO-PTP-MIB", "cPtpClockDefaultDSPriority2"), ("CISCO-PTP-MIB", "cPtpClockDefaultDSSlaveOnly"), ("CISCO-PTP-MIB", "cPtpClockDefaultDSQualityClass"), ("CISCO-PTP-MIB", "cPtpClockDefaultDSQualityAccuracy"), ("CISCO-PTP-MIB", "cPtpClockDefaultDSQualityOffset"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoPtpMIBClockDefaultDSGroup = ciscoPtpMIBClockDefaultDSGroup.setStatus('current')
ciscoPtpMIBClockRunningGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 760, 2, 2, 5)).setObjects(("CISCO-PTP-MIB", "cPtpClockRunningState"), ("CISCO-PTP-MIB", "cPtpClockRunningPacketsSent"), ("CISCO-PTP-MIB", "cPtpClockRunningPacketsReceived"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoPtpMIBClockRunningGroup = ciscoPtpMIBClockRunningGroup.setStatus('current')
ciscoPtpMIBClockTimepropertiesGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 760, 2, 2, 6)).setObjects(("CISCO-PTP-MIB", "cPtpClockTimePropertiesDSCurrentUTCOffsetValid"), ("CISCO-PTP-MIB", "cPtpClockTimePropertiesDSCurrentUTCOffset"), ("CISCO-PTP-MIB", "cPtpClockTimePropertiesDSLeap59"), ("CISCO-PTP-MIB", "cPtpClockTimePropertiesDSLeap61"), ("CISCO-PTP-MIB", "cPtpClockTimePropertiesDSTimeTraceable"), ("CISCO-PTP-MIB", "cPtpClockTimePropertiesDSFreqTraceable"), ("CISCO-PTP-MIB", "cPtpClockTimePropertiesDSPTPTimescale"), ("CISCO-PTP-MIB", "cPtpClockTimePropertiesDSSource"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoPtpMIBClockTimepropertiesGroup = ciscoPtpMIBClockTimepropertiesGroup.setStatus('current')
ciscoPtpMIBClockTranparentDSGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 760, 2, 2, 7)).setObjects(("CISCO-PTP-MIB", "cPtpClockTransDefaultDSClockIdentity"), ("CISCO-PTP-MIB", "cPtpClockTransDefaultDSNumOfPorts"), ("CISCO-PTP-MIB", "cPtpClockTransDefaultDSDelay"), ("CISCO-PTP-MIB", "cPtpClockTransDefaultDSPrimaryDomain"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoPtpMIBClockTranparentDSGroup = ciscoPtpMIBClockTranparentDSGroup.setStatus('current')
ciscoPtpMIBClockPortGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 760, 2, 2, 8)).setObjects(("CISCO-PTP-MIB", "cPtpClockPortName"), ("CISCO-PTP-MIB", "cPtpClockPortSyncOneStep"), ("CISCO-PTP-MIB", "cPtpClockPortCurrentPeerAddress"), ("CISCO-PTP-MIB", "cPtpClockPortNumOfAssociatedPorts"), ("CISCO-PTP-MIB", "cPtpClockPortCurrentPeerAddressType"), ("CISCO-PTP-MIB", "cPtpClockPortRole"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoPtpMIBClockPortGroup = ciscoPtpMIBClockPortGroup.setStatus('current')
ciscoPtpMIBClockPortDSGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 760, 2, 2, 9)).setObjects(("CISCO-PTP-MIB", "cPtpClockPortDSName"), ("CISCO-PTP-MIB", "cPtpClockPortDSPortIdentity"), ("CISCO-PTP-MIB", "cPtpClockPortDSAnnouncementInterval"), ("CISCO-PTP-MIB", "cPtpClockPortDSAnnounceRctTimeout"), ("CISCO-PTP-MIB", "cPtpClockPortDSSyncInterval"), ("CISCO-PTP-MIB", "cPtpClockPortDSMinDelayReqInterval"), ("CISCO-PTP-MIB", "cPtpClockPortDSPeerDelayReqInterval"), ("CISCO-PTP-MIB", "cPtpClockPortDSDelayMech"), ("CISCO-PTP-MIB", "cPtpClockPortDSPeerMeanPathDelay"), ("CISCO-PTP-MIB", "cPtpClockPortDSGrantDuration"), ("CISCO-PTP-MIB", "cPtpClockPortDSPTPVersion"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoPtpMIBClockPortDSGroup = ciscoPtpMIBClockPortDSGroup.setStatus('current')
ciscoPtpMIBClockPortRunningGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 760, 2, 2, 10)).setObjects(("CISCO-PTP-MIB", "cPtpClockPortRunningName"), ("CISCO-PTP-MIB", "cPtpClockPortRunningState"), ("CISCO-PTP-MIB", "cPtpClockPortRunningRole"), ("CISCO-PTP-MIB", "cPtpClockPortRunningInterfaceIndex"), ("CISCO-PTP-MIB", "cPtpClockPortRunningIPversion"), ("CISCO-PTP-MIB", "cPtpClockPortRunningEncapsulationType"), ("CISCO-PTP-MIB", "cPtpClockPortRunningTxMode"), ("CISCO-PTP-MIB", "cPtpClockPortRunningRxMode"), ("CISCO-PTP-MIB", "cPtpClockPortRunningPacketsReceived"), ("CISCO-PTP-MIB", "cPtpClockPortRunningPacketsSent"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoPtpMIBClockPortRunningGroup = ciscoPtpMIBClockPortRunningGroup.setStatus('current')
ciscoPtpMIBClockPortTransDSGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 760, 2, 2, 11)).setObjects(("CISCO-PTP-MIB", "cPtpClockPortTransDSPortIdentity"), ("CISCO-PTP-MIB", "cPtpClockPortTransDSlogMinPdelayReqInt"), ("CISCO-PTP-MIB", "cPtpClockPortTransDSFaultyFlag"), ("CISCO-PTP-MIB", "cPtpClockPortTransDSPeerMeanPathDelay"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoPtpMIBClockPortTransDSGroup = ciscoPtpMIBClockPortTransDSGroup.setStatus('current')
ciscoPtpMIBClockPortAssociateGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 760, 2, 2, 12)).setObjects(("CISCO-PTP-MIB", "cPtpClockPortAssociatePacketsSent"), ("CISCO-PTP-MIB", "cPtpClockPortAssociatePacketsReceived"), ("CISCO-PTP-MIB", "cPtpClockPortAssociateAddress"), ("CISCO-PTP-MIB", "cPtpClockPortAssociateAddressType"), ("CISCO-PTP-MIB", "cPtpClockPortAssociateInErrors"), ("CISCO-PTP-MIB", "cPtpClockPortAssociateOutErrors"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoPtpMIBClockPortAssociateGroup = ciscoPtpMIBClockPortAssociateGroup.setStatus('current')
ciscoPtpMIBClockInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 760, 1, 2))
cPtpSystemTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 760, 1, 1, 1), )
if mibBuilder.loadTexts: cPtpSystemTable.setStatus('current')
cPtpSystemEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 760, 1, 1, 1, 1), ).setIndexNames((0, "CISCO-PTP-MIB", "cPtpDomainIndex"), (0, "CISCO-PTP-MIB", "cPtpInstanceIndex"))
if mibBuilder.loadTexts: cPtpSystemEntry.setStatus('current')
cPtpDomainIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 760, 1, 1, 1, 1, 1), ClockDomainType())
if mibBuilder.loadTexts: cPtpDomainIndex.setStatus('current')
cPtpInstanceIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 760, 1, 1, 1, 1, 2), ClockInstanceType().subtype(subtypeSpec=ValueRangeConstraint(0, 255)))
if mibBuilder.loadTexts: cPtpInstanceIndex.setStatus('current')
cPtpDomainClockPortsTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 760, 1, 1, 1, 1, 3), Gauge32()).setUnits('ptp ports').setMaxAccess("readonly")
if mibBuilder.loadTexts: cPtpDomainClockPortsTotal.setStatus('current')
cPtpDomainClockPortPhysicalInterfacesTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 760, 1, 1, 1, 1, 4), Gauge32()).setUnits('physical ports').setMaxAccess("readonly")
if mibBuilder.loadTexts: cPtpDomainClockPortPhysicalInterfacesTotal.setStatus('current')
cPtpSystemDomainTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 760, 1, 1, 2), )
if mibBuilder.loadTexts: cPtpSystemDomainTable.setStatus('current')
cPtpSystemDomainEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 760, 1, 1, 2, 1), ).setIndexNames((0, "CISCO-PTP-MIB", "cPtpSystemDomainClockTypeIndex"))
if mibBuilder.loadTexts: cPtpSystemDomainEntry.setStatus('current')
cPtpSystemDomainClockTypeIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 760, 1, 1, 2, 1, 1), ClockType())
if mibBuilder.loadTexts: cPtpSystemDomainClockTypeIndex.setStatus('current')
cPtpSystemDomainTotals = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 760, 1, 1, 2, 1, 2), Gauge32()).setUnits('domains').setMaxAccess("readonly")
if mibBuilder.loadTexts: cPtpSystemDomainTotals.setStatus('current')
cPtpClockNodeTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 760, 1, 1, 3), )
if mibBuilder.loadTexts: cPtpClockNodeTable.setStatus('current')
cPtpClockNodeEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 760, 1, 1, 3, 1), ).setIndexNames((0, "CISCO-PTP-MIB", "cPtpClockDomainIndex"), (0, "CISCO-PTP-MIB", "cPtpClockTypeIndex"), (0, "CISCO-PTP-MIB", "cPtpClockInstanceIndex"))
if mibBuilder.loadTexts: cPtpClockNodeEntry.setStatus('current')
cPtpClockDomainIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 760, 1, 1, 3, 1, 1), ClockDomainType())
if mibBuilder.loadTexts: cPtpClockDomainIndex.setStatus('current')
cPtpClockTypeIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 760, 1, 1, 3, 1, 2), ClockType())
if mibBuilder.loadTexts: cPtpClockTypeIndex.setStatus('current')
cPtpClockInstanceIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 760, 1, 1, 3, 1, 3), ClockInstanceType().subtype(subtypeSpec=ValueRangeConstraint(0, 255)))
if mibBuilder.loadTexts: cPtpClockInstanceIndex.setStatus('current')
cPtpClockInput1ppsEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 760, 1, 1, 3, 1, 4), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cPtpClockInput1ppsEnabled.setStatus('current')
cPtpClockInputFrequencyEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 760, 1, 1, 3, 1, 5), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cPtpClockInputFrequencyEnabled.setStatus('current')
cPtpClockTODEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 760, 1, 1, 3, 1, 6), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cPtpClockTODEnabled.setStatus('current')
cPtpClockOutput1ppsEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 760, 1, 1, 3, 1, 7), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cPtpClockOutput1ppsEnabled.setStatus('current')
cPtpClockOutput1ppsOffsetEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 760, 1, 1, 3, 1, 8), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cPtpClockOutput1ppsOffsetEnabled.setStatus('current')
cPtpClockOutput1ppsOffsetValue = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 760, 1, 1, 3, 1, 9), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cPtpClockOutput1ppsOffsetValue.setStatus('current')
cPtpClockOutput1ppsOffsetNegative = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 760, 1, 1, 3, 1, 10), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cPtpClockOutput1ppsOffsetNegative.setStatus('current')
cPtpClockInput1ppsInterface = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 760, 1, 1, 3, 1, 11), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cPtpClockInput1ppsInterface.setStatus('current')
cPtpClockOutput1ppsInterface = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 760, 1, 1, 3, 1, 12), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cPtpClockOutput1ppsInterface.setStatus('current')
cPtpClockTODInterface = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 760, 1, 1, 3, 1, 13), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cPtpClockTODInterface.setStatus('current')
cPtpSystemProfile = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 760, 1, 1, 4), ClockProfileType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cPtpSystemProfile.setStatus('current')
cPtpClockCurrentDSTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 760, 1, 2, 1), )
if mibBuilder.loadTexts: cPtpClockCurrentDSTable.setStatus('current')
cPtpClockCurrentDSEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 760, 1, 2, 1, 1), ).setIndexNames((0, "CISCO-PTP-MIB", "cPtpClockCurrentDSDomainIndex"), (0, "CISCO-PTP-MIB", "cPtpClockCurrentDSClockTypeIndex"), (0, "CISCO-PTP-MIB", "cPtpClockCurrentDSInstanceIndex"))
if mibBuilder.loadTexts: cPtpClockCurrentDSEntry.setStatus('current')
cPtpClockCurrentDSDomainIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 760, 1, 2, 1, 1, 1), ClockDomainType())
if mibBuilder.loadTexts: cPtpClockCurrentDSDomainIndex.setStatus('current')
cPtpClockCurrentDSClockTypeIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 760, 1, 2, 1, 1, 2), ClockType())
if mibBuilder.loadTexts: cPtpClockCurrentDSClockTypeIndex.setStatus('current')
cPtpClockCurrentDSInstanceIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 760, 1, 2, 1, 1, 3), ClockInstanceType().subtype(subtypeSpec=ValueRangeConstraint(0, 255)))
if mibBuilder.loadTexts: cPtpClockCurrentDSInstanceIndex.setStatus('current')
cPtpClockCurrentDSStepsRemoved = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 760, 1, 2, 1, 1, 4), Counter32()).setUnits('steps').setMaxAccess("readonly")
if mibBuilder.loadTexts: cPtpClockCurrentDSStepsRemoved.setStatus('current')
cPtpClockCurrentDSOffsetFromMaster = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 760, 1, 2, 1, 1, 5), ClockTimeInterval()).setUnits('Time Interval').setMaxAccess("readonly")
if mibBuilder.loadTexts: cPtpClockCurrentDSOffsetFromMaster.setStatus('current')
cPtpClockCurrentDSMeanPathDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 760, 1, 2, 1, 1, 6), ClockTimeInterval()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cPtpClockCurrentDSMeanPathDelay.setStatus('current')
cPtpClockParentDSTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 760, 1, 2, 2), )
if mibBuilder.loadTexts: cPtpClockParentDSTable.setStatus('current')
cPtpClockParentDSEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 760, 1, 2, 2, 1), ).setIndexNames((0, "CISCO-PTP-MIB", "cPtpClockParentDSDomainIndex"), (0, "CISCO-PTP-MIB", "cPtpClockParentDSClockTypeIndex"), (0, "CISCO-PTP-MIB", "cPtpClockParentDSInstanceIndex"))
if mibBuilder.loadTexts: cPtpClockParentDSEntry.setStatus('current')
cPtpClockParentDSDomainIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 760, 1, 2, 2, 1, 1), ClockDomainType())
if mibBuilder.loadTexts: cPtpClockParentDSDomainIndex.setStatus('current')
cPtpClockParentDSClockTypeIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 760, 1, 2, 2, 1, 2), ClockType())
if mibBuilder.loadTexts: cPtpClockParentDSClockTypeIndex.setStatus('current')
cPtpClockParentDSInstanceIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 760, 1, 2, 2, 1, 3), ClockInstanceType().subtype(subtypeSpec=ValueRangeConstraint(0, 255)))
if mibBuilder.loadTexts: cPtpClockParentDSInstanceIndex.setStatus('current')
cPtpClockParentDSParentPortIdentity = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 760, 1, 2, 2, 1, 4), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cPtpClockParentDSParentPortIdentity.setStatus('current')
cPtpClockParentDSParentStats = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 760, 1, 2, 2, 1, 5), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cPtpClockParentDSParentStats.setStatus('current')
cPtpClockParentDSOffset = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 760, 1, 2, 2, 1, 6), ClockIntervalBase2().subtype(subtypeSpec=ValueRangeConstraint(-128, 127))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cPtpClockParentDSOffset.setStatus('current')
cPtpClockParentDSClockPhChRate = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 760, 1, 2, 2, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cPtpClockParentDSClockPhChRate.setStatus('current')
cPtpClockParentDSGMClockIdentity = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 760, 1, 2, 2, 1, 8), ClockIdentity()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cPtpClockParentDSGMClockIdentity.setStatus('current')
cPtpClockParentDSGMClockPriority1 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 760, 1, 2, 2, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cPtpClockParentDSGMClockPriority1.setStatus('current')
cPtpClockParentDSGMClockPriority2 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 760, 1, 2, 2, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cPtpClockParentDSGMClockPriority2.setStatus('current')
cPtpClockParentDSGMClockQualityClass = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 760, 1, 2, 2, 1, 11), ClockQualityClassType().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cPtpClockParentDSGMClockQualityClass.setStatus('current')
cPtpClockParentDSGMClockQualityAccuracy = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 760, 1, 2, 2, 1, 12), ClockQualityAccuracyType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cPtpClockParentDSGMClockQualityAccuracy.setStatus('current')
cPtpClockParentDSGMClockQualityOffset = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 760, 1, 2, 2, 1, 13), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cPtpClockParentDSGMClockQualityOffset.setStatus('current')
cPtpClockDefaultDSTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 760, 1, 2, 3), )
if mibBuilder.loadTexts: cPtpClockDefaultDSTable.setStatus('current')
cPtpClockDefaultDSEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 760, 1, 2, 3, 1), ).setIndexNames((0, "CISCO-PTP-MIB", "cPtpClockDefaultDSDomainIndex"), (0, "CISCO-PTP-MIB", "cPtpClockDefaultDSClockTypeIndex"), (0, "CISCO-PTP-MIB", "cPtpClockDefaultDSInstanceIndex"))
if mibBuilder.loadTexts: cPtpClockDefaultDSEntry.setStatus('current')
cPtpClockDefaultDSDomainIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 760, 1, 2, 3, 1, 1), ClockDomainType())
if mibBuilder.loadTexts: cPtpClockDefaultDSDomainIndex.setStatus('current')
cPtpClockDefaultDSClockTypeIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 760, 1, 2, 3, 1, 2), ClockType())
if mibBuilder.loadTexts: cPtpClockDefaultDSClockTypeIndex.setStatus('current')
cPtpClockDefaultDSInstanceIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 760, 1, 2, 3, 1, 3), ClockInstanceType().subtype(subtypeSpec=ValueRangeConstraint(0, 255)))
if mibBuilder.loadTexts: cPtpClockDefaultDSInstanceIndex.setStatus('current')
cPtpClockDefaultDSTwoStepFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 760, 1, 2, 3, 1, 4), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cPtpClockDefaultDSTwoStepFlag.setStatus('current')
cPtpClockDefaultDSClockIdentity = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 760, 1, 2, 3, 1, 5), ClockIdentity()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cPtpClockDefaultDSClockIdentity.setStatus('current')
cPtpClockDefaultDSPriority1 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 760, 1, 2, 3, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cPtpClockDefaultDSPriority1.setStatus('current')
cPtpClockDefaultDSPriority2 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 760, 1, 2, 3, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cPtpClockDefaultDSPriority2.setStatus('current')
cPtpClockDefaultDSSlaveOnly = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 760, 1, 2, 3, 1, 8), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cPtpClockDefaultDSSlaveOnly.setStatus('current')
cPtpClockDefaultDSQualityClass = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 760, 1, 2, 3, 1, 9), ClockQualityClassType().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cPtpClockDefaultDSQualityClass.setStatus('current')
cPtpClockDefaultDSQualityAccuracy = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 760, 1, 2, 3, 1, 10), ClockQualityAccuracyType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cPtpClockDefaultDSQualityAccuracy.setStatus('current')
cPtpClockDefaultDSQualityOffset = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 760, 1, 2, 3, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cPtpClockDefaultDSQualityOffset.setStatus('current')
cPtpClockRunningTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 760, 1, 2, 4), )
if mibBuilder.loadTexts: cPtpClockRunningTable.setStatus('current')
cPtpClockRunningEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 760, 1, 2, 4, 1), ).setIndexNames((0, "CISCO-PTP-MIB", "cPtpClockRunningDomainIndex"), (0, "CISCO-PTP-MIB", "cPtpClockRunningClockTypeIndex"), (0, "CISCO-PTP-MIB", "cPtpClockRunningInstanceIndex"))
if mibBuilder.loadTexts: cPtpClockRunningEntry.setStatus('current')
cPtpClockRunningDomainIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 760, 1, 2, 4, 1, 1), ClockDomainType())
if mibBuilder.loadTexts: cPtpClockRunningDomainIndex.setStatus('current')
cPtpClockRunningClockTypeIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 760, 1, 2, 4, 1, 2), ClockType())
if mibBuilder.loadTexts: cPtpClockRunningClockTypeIndex.setStatus('current')
cPtpClockRunningInstanceIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 760, 1, 2, 4, 1, 3), ClockInstanceType().subtype(subtypeSpec=ValueRangeConstraint(0, 255)))
if mibBuilder.loadTexts: cPtpClockRunningInstanceIndex.setStatus('current')
cPtpClockRunningState = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 760, 1, 2, 4, 1, 4), ClockStateType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cPtpClockRunningState.setStatus('current')
cPtpClockRunningPacketsSent = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 760, 1, 2, 4, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cPtpClockRunningPacketsSent.setStatus('current')
cPtpClockRunningPacketsReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 760, 1, 2, 4, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cPtpClockRunningPacketsReceived.setStatus('current')
cPtpClockTimePropertiesDSTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 760, 1, 2, 5), )
if mibBuilder.loadTexts: cPtpClockTimePropertiesDSTable.setStatus('current')
cPtpClockTimePropertiesDSEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 760, 1, 2, 5, 1), ).setIndexNames((0, "CISCO-PTP-MIB", "cPtpClockTimePropertiesDSDomainIndex"), (0, "CISCO-PTP-MIB", "cPtpClockTimePropertiesDSClockTypeIndex"), (0, "CISCO-PTP-MIB", "cPtpClockTimePropertiesDSInstanceIndex"))
if mibBuilder.loadTexts: cPtpClockTimePropertiesDSEntry.setStatus('current')
cPtpClockTimePropertiesDSDomainIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 760, 1, 2, 5, 1, 1), ClockDomainType())
if mibBuilder.loadTexts: cPtpClockTimePropertiesDSDomainIndex.setStatus('current')
cPtpClockTimePropertiesDSClockTypeIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 760, 1, 2, 5, 1, 2), ClockType())
if mibBuilder.loadTexts: cPtpClockTimePropertiesDSClockTypeIndex.setStatus('current')
cPtpClockTimePropertiesDSInstanceIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 760, 1, 2, 5, 1, 3), ClockInstanceType().subtype(subtypeSpec=ValueRangeConstraint(0, 255)))
if mibBuilder.loadTexts: cPtpClockTimePropertiesDSInstanceIndex.setStatus('current')
cPtpClockTimePropertiesDSCurrentUTCOffsetValid = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 760, 1, 2, 5, 1, 4), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cPtpClockTimePropertiesDSCurrentUTCOffsetValid.setStatus('current')
cPtpClockTimePropertiesDSCurrentUTCOffset = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 760, 1, 2, 5, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cPtpClockTimePropertiesDSCurrentUTCOffset.setStatus('current')
cPtpClockTimePropertiesDSLeap59 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 760, 1, 2, 5, 1, 6), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cPtpClockTimePropertiesDSLeap59.setStatus('current')
cPtpClockTimePropertiesDSLeap61 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 760, 1, 2, 5, 1, 7), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cPtpClockTimePropertiesDSLeap61.setStatus('current')
cPtpClockTimePropertiesDSTimeTraceable = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 760, 1, 2, 5, 1, 8), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cPtpClockTimePropertiesDSTimeTraceable.setStatus('current')
cPtpClockTimePropertiesDSFreqTraceable = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 760, 1, 2, 5, 1, 9), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cPtpClockTimePropertiesDSFreqTraceable.setStatus('current')
cPtpClockTimePropertiesDSPTPTimescale = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 760, 1, 2, 5, 1, 10), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cPtpClockTimePropertiesDSPTPTimescale.setStatus('current')
cPtpClockTimePropertiesDSSource = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 760, 1, 2, 5, 1, 11), ClockTimeSourceType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cPtpClockTimePropertiesDSSource.setStatus('current')
cPtpClockTransDefaultDSTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 760, 1, 2, 6), )
if mibBuilder.loadTexts: cPtpClockTransDefaultDSTable.setStatus('current')
cPtpClockTransDefaultDSEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 760, 1, 2, 6, 1), ).setIndexNames((0, "CISCO-PTP-MIB", "cPtpClockTransDefaultDSDomainIndex"), (0, "CISCO-PTP-MIB", "cPtpClockTransDefaultDSInstanceIndex"))
if mibBuilder.loadTexts: cPtpClockTransDefaultDSEntry.setStatus('current')
cPtpClockTransDefaultDSDomainIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 760, 1, 2, 6, 1, 1), ClockDomainType())
if mibBuilder.loadTexts: cPtpClockTransDefaultDSDomainIndex.setStatus('current')
cPtpClockTransDefaultDSInstanceIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 760, 1, 2, 6, 1, 2), ClockInstanceType().subtype(subtypeSpec=ValueRangeConstraint(0, 255)))
if mibBuilder.loadTexts: cPtpClockTransDefaultDSInstanceIndex.setStatus('current')
cPtpClockTransDefaultDSClockIdentity = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 760, 1, 2, 6, 1, 3), ClockIdentity()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cPtpClockTransDefaultDSClockIdentity.setStatus('current')
cPtpClockTransDefaultDSNumOfPorts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 760, 1, 2, 6, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cPtpClockTransDefaultDSNumOfPorts.setStatus('current')
cPtpClockTransDefaultDSDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 760, 1, 2, 6, 1, 5), ClockMechanismType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cPtpClockTransDefaultDSDelay.setStatus('current')
cPtpClockTransDefaultDSPrimaryDomain = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 760, 1, 2, 6, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cPtpClockTransDefaultDSPrimaryDomain.setStatus('current')
cPtpClockPortTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 760, 1, 2, 7), )
if mibBuilder.loadTexts: cPtpClockPortTable.setStatus('current')
cPtpClockPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 760, 1, 2, 7, 1), ).setIndexNames((0, "CISCO-PTP-MIB", "cPtpClockPortDomainIndex"), (0, "CISCO-PTP-MIB", "cPtpClockPortClockTypeIndex"), (0, "CISCO-PTP-MIB", "cPtpClockPortClockInstanceIndex"), (0, "CISCO-PTP-MIB", "cPtpClockPortTablePortNumberIndex"))
if mibBuilder.loadTexts: cPtpClockPortEntry.setStatus('current')
cPtpClockPortDomainIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 760, 1, 2, 7, 1, 1), ClockDomainType())
if mibBuilder.loadTexts: cPtpClockPortDomainIndex.setStatus('current')
cPtpClockPortClockTypeIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 760, 1, 2, 7, 1, 2), ClockType())
if mibBuilder.loadTexts: cPtpClockPortClockTypeIndex.setStatus('current')
cPtpClockPortClockInstanceIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 760, 1, 2, 7, 1, 3), ClockInstanceType().subtype(subtypeSpec=ValueRangeConstraint(0, 255)))
if mibBuilder.loadTexts: cPtpClockPortClockInstanceIndex.setStatus('current')
cPtpClockPortTablePortNumberIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 760, 1, 2, 7, 1, 4), ClockPortNumber().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)))
if mibBuilder.loadTexts: cPtpClockPortTablePortNumberIndex.setStatus('current')
cPtpClockPortName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 760, 1, 2, 7, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cPtpClockPortName.setStatus('current')
cPtpClockPortRole = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 760, 1, 2, 7, 1, 6), ClockRoleType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cPtpClockPortRole.setStatus('current')
cPtpClockPortSyncOneStep = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 760, 1, 2, 7, 1, 7), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cPtpClockPortSyncOneStep.setStatus('current')
cPtpClockPortCurrentPeerAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 760, 1, 2, 7, 1, 8), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cPtpClockPortCurrentPeerAddressType.setStatus('current')
cPtpClockPortCurrentPeerAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 760, 1, 2, 7, 1, 9), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cPtpClockPortCurrentPeerAddress.setStatus('current')
cPtpClockPortNumOfAssociatedPorts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 760, 1, 2, 7, 1, 10), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cPtpClockPortNumOfAssociatedPorts.setStatus('current')
cPtpClockPortDSTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 760, 1, 2, 8), )
if mibBuilder.loadTexts: cPtpClockPortDSTable.setStatus('current')
cPtpClockPortDSEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 760, 1, 2, 8, 1), ).setIndexNames((0, "CISCO-PTP-MIB", "cPtpClockPortDSDomainIndex"), (0, "CISCO-PTP-MIB", "cPtpClockPortDSClockTypeIndex"), (0, "CISCO-PTP-MIB", "cPtpClockPortDSClockInstanceIndex"), (0, "CISCO-PTP-MIB", "cPtpClockPortDSPortNumberIndex"))
if mibBuilder.loadTexts: cPtpClockPortDSEntry.setStatus('current')
cPtpClockPortDSDomainIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 760, 1, 2, 8, 1, 1), ClockDomainType())
if mibBuilder.loadTexts: cPtpClockPortDSDomainIndex.setStatus('current')
cPtpClockPortDSClockTypeIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 760, 1, 2, 8, 1, 2), ClockType())
if mibBuilder.loadTexts: cPtpClockPortDSClockTypeIndex.setStatus('current')
cPtpClockPortDSClockInstanceIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 760, 1, 2, 8, 1, 3), ClockInstanceType().subtype(subtypeSpec=ValueRangeConstraint(0, 255)))
if mibBuilder.loadTexts: cPtpClockPortDSClockInstanceIndex.setStatus('current')
cPtpClockPortDSPortNumberIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 760, 1, 2, 8, 1, 4), ClockPortNumber().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)))
if mibBuilder.loadTexts: cPtpClockPortDSPortNumberIndex.setStatus('current')
cPtpClockPortDSName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 760, 1, 2, 8, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cPtpClockPortDSName.setStatus('current')
cPtpClockPortDSPortIdentity = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 760, 1, 2, 8, 1, 6), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cPtpClockPortDSPortIdentity.setStatus('current')
cPtpClockPortDSAnnouncementInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 760, 1, 2, 8, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cPtpClockPortDSAnnouncementInterval.setStatus('current')
cPtpClockPortDSAnnounceRctTimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 760, 1, 2, 8, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cPtpClockPortDSAnnounceRctTimeout.setStatus('current')
cPtpClockPortDSSyncInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 760, 1, 2, 8, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cPtpClockPortDSSyncInterval.setStatus('current')
cPtpClockPortDSMinDelayReqInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 760, 1, 2, 8, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cPtpClockPortDSMinDelayReqInterval.setStatus('current')
cPtpClockPortDSPeerDelayReqInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 760, 1, 2, 8, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cPtpClockPortDSPeerDelayReqInterval.setStatus('current')
cPtpClockPortDSDelayMech = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 760, 1, 2, 8, 1, 12), ClockMechanismType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cPtpClockPortDSDelayMech.setStatus('current')
cPtpClockPortDSPeerMeanPathDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 760, 1, 2, 8, 1, 13), ClockTimeInterval()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cPtpClockPortDSPeerMeanPathDelay.setStatus('current')
cPtpClockPortDSGrantDuration = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 760, 1, 2, 8, 1, 14), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cPtpClockPortDSGrantDuration.setStatus('current')
cPtpClockPortDSPTPVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 760, 1, 2, 8, 1, 15), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cPtpClockPortDSPTPVersion.setStatus('current')
cPtpClockPortRunningTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 760, 1, 2, 9), )
if mibBuilder.loadTexts: cPtpClockPortRunningTable.setStatus('current')
cPtpClockPortRunningEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 760, 1, 2, 9, 1), ).setIndexNames((0, "CISCO-PTP-MIB", "cPtpClockPortRunningDomainIndex"), (0, "CISCO-PTP-MIB", "cPtpClockPortRunningClockTypeIndex"), (0, "CISCO-PTP-MIB", "cPtpClockPortRunningClockInstanceIndex"), (0, "CISCO-PTP-MIB", "cPtpClockPortRunningPortNumberIndex"))
if mibBuilder.loadTexts: cPtpClockPortRunningEntry.setStatus('current')
cPtpClockPortRunningDomainIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 760, 1, 2, 9, 1, 1), ClockDomainType())
if mibBuilder.loadTexts: cPtpClockPortRunningDomainIndex.setStatus('current')
cPtpClockPortRunningClockTypeIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 760, 1, 2, 9, 1, 2), ClockType())
if mibBuilder.loadTexts: cPtpClockPortRunningClockTypeIndex.setStatus('current')
cPtpClockPortRunningClockInstanceIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 760, 1, 2, 9, 1, 3), ClockInstanceType().subtype(subtypeSpec=ValueRangeConstraint(0, 255)))
if mibBuilder.loadTexts: cPtpClockPortRunningClockInstanceIndex.setStatus('current')
cPtpClockPortRunningPortNumberIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 760, 1, 2, 9, 1, 4), ClockPortNumber().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)))
if mibBuilder.loadTexts: cPtpClockPortRunningPortNumberIndex.setStatus('current')
cPtpClockPortRunningName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 760, 1, 2, 9, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cPtpClockPortRunningName.setStatus('current')
cPtpClockPortRunningState = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 760, 1, 2, 9, 1, 6), ClockPortState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cPtpClockPortRunningState.setStatus('current')
cPtpClockPortRunningRole = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 760, 1, 2, 9, 1, 7), ClockRoleType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cPtpClockPortRunningRole.setStatus('current')
cPtpClockPortRunningInterfaceIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 760, 1, 2, 9, 1, 8), InterfaceIndexOrZero()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cPtpClockPortRunningInterfaceIndex.setStatus('current')
cPtpClockPortRunningIPversion = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 760, 1, 2, 9, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cPtpClockPortRunningIPversion.setStatus('current')
cPtpClockPortRunningEncapsulationType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 760, 1, 2, 9, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cPtpClockPortRunningEncapsulationType.setStatus('current')
cPtpClockPortRunningTxMode = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 760, 1, 2, 9, 1, 11), ClockTxModeType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cPtpClockPortRunningTxMode.setStatus('current')
cPtpClockPortRunningRxMode = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 760, 1, 2, 9, 1, 12), ClockTxModeType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cPtpClockPortRunningRxMode.setStatus('current')
cPtpClockPortRunningPacketsReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 760, 1, 2, 9, 1, 13), Counter64()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cPtpClockPortRunningPacketsReceived.setStatus('current')
cPtpClockPortRunningPacketsSent = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 760, 1, 2, 9, 1, 14), Counter64()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cPtpClockPortRunningPacketsSent.setStatus('current')
cPtpClockPortTransDSTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 760, 1, 2, 10), )
if mibBuilder.loadTexts: cPtpClockPortTransDSTable.setStatus('current')
cPtpClockPortTransDSEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 760, 1, 2, 10, 1), ).setIndexNames((0, "CISCO-PTP-MIB", "cPtpClockPortTransDSDomainIndex"), (0, "CISCO-PTP-MIB", "cPtpClockPortTransDSInstanceIndex"), (0, "CISCO-PTP-MIB", "cPtpClockPortTransDSPortNumberIndex"))
if mibBuilder.loadTexts: cPtpClockPortTransDSEntry.setStatus('current')
cPtpClockPortTransDSDomainIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 760, 1, 2, 10, 1, 1), ClockDomainType())
if mibBuilder.loadTexts: cPtpClockPortTransDSDomainIndex.setStatus('current')
cPtpClockPortTransDSInstanceIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 760, 1, 2, 10, 1, 2), ClockInstanceType().subtype(subtypeSpec=ValueRangeConstraint(0, 255)))
if mibBuilder.loadTexts: cPtpClockPortTransDSInstanceIndex.setStatus('current')
cPtpClockPortTransDSPortNumberIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 760, 1, 2, 10, 1, 3), ClockPortNumber().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)))
if mibBuilder.loadTexts: cPtpClockPortTransDSPortNumberIndex.setStatus('current')
cPtpClockPortTransDSPortIdentity = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 760, 1, 2, 10, 1, 4), ClockIdentity()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cPtpClockPortTransDSPortIdentity.setStatus('current')
cPtpClockPortTransDSlogMinPdelayReqInt = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 760, 1, 2, 10, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cPtpClockPortTransDSlogMinPdelayReqInt.setStatus('current')
cPtpClockPortTransDSFaultyFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 760, 1, 2, 10, 1, 6), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cPtpClockPortTransDSFaultyFlag.setStatus('current')
cPtpClockPortTransDSPeerMeanPathDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 760, 1, 2, 10, 1, 7), ClockTimeInterval()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cPtpClockPortTransDSPeerMeanPathDelay.setStatus('current')
cPtpClockPortAssociateTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 760, 1, 2, 11), )
if mibBuilder.loadTexts: cPtpClockPortAssociateTable.setStatus('current')
cPtpClockPortAssociateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 760, 1, 2, 11, 1), ).setIndexNames((0, "CISCO-PTP-MIB", "cPtpClockPortCurrentDomainIndex"), (0, "CISCO-PTP-MIB", "cPtpClockPortCurrentClockTypeIndex"), (0, "CISCO-PTP-MIB", "cPtpClockPortCurrentClockInstanceIndex"), (0, "CISCO-PTP-MIB", "cPtpClockPortCurrentPortNumberIndex"), (0, "CISCO-PTP-MIB", "cPtpClockPortAssociatePortIndex"))
if mibBuilder.loadTexts: cPtpClockPortAssociateEntry.setStatus('current')
cPtpClockPortCurrentDomainIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 760, 1, 2, 11, 1, 1), ClockDomainType())
if mibBuilder.loadTexts: cPtpClockPortCurrentDomainIndex.setStatus('current')
cPtpClockPortCurrentClockTypeIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 760, 1, 2, 11, 1, 2), ClockType())
if mibBuilder.loadTexts: cPtpClockPortCurrentClockTypeIndex.setStatus('current')
cPtpClockPortCurrentClockInstanceIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 760, 1, 2, 11, 1, 3), ClockInstanceType())
if mibBuilder.loadTexts: cPtpClockPortCurrentClockInstanceIndex.setStatus('current')
cPtpClockPortCurrentPortNumberIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 760, 1, 2, 11, 1, 4), ClockPortNumber())
if mibBuilder.loadTexts: cPtpClockPortCurrentPortNumberIndex.setStatus('current')
cPtpClockPortAssociatePortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 760, 1, 2, 11, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)))
if mibBuilder.loadTexts: cPtpClockPortAssociatePortIndex.setStatus('current')
cPtpClockPortAssociateAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 760, 1, 2, 11, 1, 6), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cPtpClockPortAssociateAddressType.setStatus('current')
cPtpClockPortAssociateAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 760, 1, 2, 11, 1, 7), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cPtpClockPortAssociateAddress.setStatus('current')
cPtpClockPortAssociatePacketsSent = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 760, 1, 2, 11, 1, 8), Counter64()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cPtpClockPortAssociatePacketsSent.setStatus('current')
cPtpClockPortAssociatePacketsReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 760, 1, 2, 11, 1, 9), Counter64()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cPtpClockPortAssociatePacketsReceived.setStatus('current')
cPtpClockPortAssociateInErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 760, 1, 2, 11, 1, 10), Counter64()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cPtpClockPortAssociateInErrors.setStatus('current')
cPtpClockPortAssociateOutErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 760, 1, 2, 11, 1, 11), Counter64()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cPtpClockPortAssociateOutErrors.setStatus('current')
mibBuilder.exportSymbols("CISCO-PTP-MIB", cPtpClockParentDSGMClockQualityClass=cPtpClockParentDSGMClockQualityClass, cPtpClockPortRunningName=cPtpClockPortRunningName, cPtpClockPortClockTypeIndex=cPtpClockPortClockTypeIndex, ciscoPtpMIBSystemInfoGroup=ciscoPtpMIBSystemInfoGroup, ciscoPtpMIBClockPortTransDSGroup=ciscoPtpMIBClockPortTransDSGroup, ciscoPtpMIBClockParentDSGroup=ciscoPtpMIBClockParentDSGroup, cPtpClockRunningDomainIndex=cPtpClockRunningDomainIndex, cPtpClockPortRunningInterfaceIndex=cPtpClockPortRunningInterfaceIndex, cPtpClockCurrentDSInstanceIndex=cPtpClockCurrentDSInstanceIndex, cPtpClockParentDSGMClockIdentity=cPtpClockParentDSGMClockIdentity, ClockType=ClockType, cPtpClockOutput1ppsOffsetNegative=cPtpClockOutput1ppsOffsetNegative, cPtpClockPortNumOfAssociatedPorts=cPtpClockPortNumOfAssociatedPorts, cPtpClockTypeIndex=cPtpClockTypeIndex, cPtpClockPortDSPeerMeanPathDelay=cPtpClockPortDSPeerMeanPathDelay, cPtpClockDefaultDSQualityOffset=cPtpClockDefaultDSQualityOffset, cPtpClockPortRunningTxMode=cPtpClockPortRunningTxMode, ciscoPtpMIBClockPortDSGroup=ciscoPtpMIBClockPortDSGroup, cPtpClockNodeTable=cPtpClockNodeTable, ciscoPtpMIBNotifs=ciscoPtpMIBNotifs, cPtpSystemDomainTable=cPtpSystemDomainTable, cPtpSystemDomainEntry=cPtpSystemDomainEntry, cPtpClockInstanceIndex=cPtpClockInstanceIndex, cPtpClockParentDSClockTypeIndex=cPtpClockParentDSClockTypeIndex, cPtpClockDefaultDSQualityAccuracy=cPtpClockDefaultDSQualityAccuracy, cPtpClockTimePropertiesDSClockTypeIndex=cPtpClockTimePropertiesDSClockTypeIndex, ClockInstanceType=ClockInstanceType, cPtpClockTransDefaultDSTable=cPtpClockTransDefaultDSTable, cPtpClockPortDSMinDelayReqInterval=cPtpClockPortDSMinDelayReqInterval, cPtpClockPortRunningDomainIndex=cPtpClockPortRunningDomainIndex, cPtpClockPortRunningPortNumberIndex=cPtpClockPortRunningPortNumberIndex, cPtpClockDefaultDSClockIdentity=cPtpClockDefaultDSClockIdentity, cPtpClockPortName=cPtpClockPortName, cPtpClockPortDSTable=cPtpClockPortDSTable, cPtpClockParentDSTable=cPtpClockParentDSTable, cPtpClockParentDSGMClockPriority1=cPtpClockParentDSGMClockPriority1, cPtpClockTimePropertiesDSEntry=cPtpClockTimePropertiesDSEntry, ciscoPtpMIBSystemInfo=ciscoPtpMIBSystemInfo, cPtpClockPortTable=cPtpClockPortTable, cPtpClockDefaultDSTwoStepFlag=cPtpClockDefaultDSTwoStepFlag, cPtpClockPortDSEntry=cPtpClockPortDSEntry, cPtpClockOutput1ppsOffsetEnabled=cPtpClockOutput1ppsOffsetEnabled, cPtpClockPortCurrentClockInstanceIndex=cPtpClockPortCurrentClockInstanceIndex, ClockStateType=ClockStateType, cPtpClockPortAssociateTable=cPtpClockPortAssociateTable, cPtpClockRunningClockTypeIndex=cPtpClockRunningClockTypeIndex, cPtpClockRunningState=cPtpClockRunningState, cPtpClockPortTransDSPortIdentity=cPtpClockPortTransDSPortIdentity, cPtpClockPortDSAnnounceRctTimeout=cPtpClockPortDSAnnounceRctTimeout, cPtpClockCurrentDSClockTypeIndex=cPtpClockCurrentDSClockTypeIndex, ciscoPtpMIBObjects=ciscoPtpMIBObjects, cPtpClockTransDefaultDSDomainIndex=cPtpClockTransDefaultDSDomainIndex, cPtpClockDefaultDSPriority2=cPtpClockDefaultDSPriority2, cPtpClockPortTransDSDomainIndex=cPtpClockPortTransDSDomainIndex, cPtpClockParentDSParentPortIdentity=cPtpClockParentDSParentPortIdentity, cPtpClockPortAssociateAddressType=cPtpClockPortAssociateAddressType, cPtpClockTimePropertiesDSLeap61=cPtpClockTimePropertiesDSLeap61, cPtpClockTimePropertiesDSTimeTraceable=cPtpClockTimePropertiesDSTimeTraceable, cPtpClockPortCurrentPeerAddressType=cPtpClockPortCurrentPeerAddressType, ciscoPtpMIBClockPortAssociateGroup=ciscoPtpMIBClockPortAssociateGroup, cPtpClockPortRunningEncapsulationType=cPtpClockPortRunningEncapsulationType, cPtpClockPortCurrentClockTypeIndex=cPtpClockPortCurrentClockTypeIndex, cPtpClockPortDSDelayMech=cPtpClockPortDSDelayMech, ClockIntervalBase2=ClockIntervalBase2, cPtpClockParentDSDomainIndex=cPtpClockParentDSDomainIndex, cPtpClockInput1ppsEnabled=cPtpClockInput1ppsEnabled, cPtpClockRunningPacketsReceived=cPtpClockRunningPacketsReceived, cPtpClockDefaultDSTable=cPtpClockDefaultDSTable, ciscoPtpMIBClockDefaultDSGroup=ciscoPtpMIBClockDefaultDSGroup, cPtpClockNodeEntry=cPtpClockNodeEntry, cPtpClockCurrentDSStepsRemoved=cPtpClockCurrentDSStepsRemoved, cPtpClockTransDefaultDSDelay=cPtpClockTransDefaultDSDelay, cPtpClockPortRunningRole=cPtpClockPortRunningRole, ciscoPtpMIBConformance=ciscoPtpMIBConformance, cPtpClockPortRunningPacketsSent=cPtpClockPortRunningPacketsSent, cPtpClockPortTransDSPortNumberIndex=cPtpClockPortTransDSPortNumberIndex, cPtpClockDefaultDSQualityClass=cPtpClockDefaultDSQualityClass, ciscoPtpMIBCompliances=ciscoPtpMIBCompliances, cPtpClockPortAssociateAddress=cPtpClockPortAssociateAddress, cPtpInstanceIndex=cPtpInstanceIndex, ciscoPtpMIBClockInfo=ciscoPtpMIBClockInfo, cPtpClockTimePropertiesDSPTPTimescale=cPtpClockTimePropertiesDSPTPTimescale, cPtpClockPortCurrentPortNumberIndex=cPtpClockPortCurrentPortNumberIndex, ClockDomainType=ClockDomainType, ciscoPtpMIBClockPortRunningGroup=ciscoPtpMIBClockPortRunningGroup, cPtpClockOutput1ppsInterface=cPtpClockOutput1ppsInterface, cPtpClockPortAssociatePacketsSent=cPtpClockPortAssociatePacketsSent, cPtpClockPortDSAnnouncementInterval=cPtpClockPortDSAnnouncementInterval, cPtpClockOutput1ppsOffsetValue=cPtpClockOutput1ppsOffsetValue, cPtpClockPortRunningPacketsReceived=cPtpClockPortRunningPacketsReceived, cPtpClockParentDSInstanceIndex=cPtpClockParentDSInstanceIndex, cPtpClockPortTransDSTable=cPtpClockPortTransDSTable, cPtpSystemDomainTotals=cPtpSystemDomainTotals, cPtpClockPortDSGrantDuration=cPtpClockPortDSGrantDuration, cPtpClockParentDSOffset=cPtpClockParentDSOffset, cPtpClockPortDSPortNumberIndex=cPtpClockPortDSPortNumberIndex, cPtpClockTimePropertiesDSTable=cPtpClockTimePropertiesDSTable, ClockTimeSourceType=ClockTimeSourceType, ClockMechanismType=ClockMechanismType, cPtpClockPortTransDSlogMinPdelayReqInt=cPtpClockPortTransDSlogMinPdelayReqInt, cPtpClockPortEntry=cPtpClockPortEntry, cPtpClockCurrentDSDomainIndex=cPtpClockCurrentDSDomainIndex, cPtpClockTimePropertiesDSCurrentUTCOffset=cPtpClockTimePropertiesDSCurrentUTCOffset, cPtpClockPortRunningClockTypeIndex=cPtpClockPortRunningClockTypeIndex, cPtpClockPortDSClockTypeIndex=cPtpClockPortDSClockTypeIndex, cPtpDomainClockPortsTotal=cPtpDomainClockPortsTotal, ClockPortState=ClockPortState, cPtpClockParentDSGMClockQualityAccuracy=cPtpClockParentDSGMClockQualityAccuracy, cPtpClockRunningEntry=cPtpClockRunningEntry, cPtpClockInput1ppsInterface=cPtpClockInput1ppsInterface, ciscoPtpMIBClockRunningGroup=ciscoPtpMIBClockRunningGroup, cPtpClockPortRunningTable=cPtpClockPortRunningTable, cPtpClockPortRunningIPversion=cPtpClockPortRunningIPversion, cPtpClockTransDefaultDSNumOfPorts=cPtpClockTransDefaultDSNumOfPorts, ciscoPtpMIBClockCurrentDSGroup=ciscoPtpMIBClockCurrentDSGroup, cPtpClockOutput1ppsEnabled=cPtpClockOutput1ppsEnabled, cPtpClockPortAssociatePortIndex=cPtpClockPortAssociatePortIndex, cPtpClockPortRole=cPtpClockPortRole, cPtpClockPortTransDSFaultyFlag=cPtpClockPortTransDSFaultyFlag, cPtpClockPortRunningState=cPtpClockPortRunningState, cPtpSystemProfile=cPtpSystemProfile, cPtpClockCurrentDSEntry=cPtpClockCurrentDSEntry, cPtpClockDomainIndex=cPtpClockDomainIndex, cPtpClockDefaultDSDomainIndex=cPtpClockDefaultDSDomainIndex, cPtpClockPortRunningRxMode=cPtpClockPortRunningRxMode, cPtpClockParentDSParentStats=cPtpClockParentDSParentStats, cPtpClockPortAssociatePacketsReceived=cPtpClockPortAssociatePacketsReceived, ClockRoleType=ClockRoleType, cPtpClockCurrentDSMeanPathDelay=cPtpClockCurrentDSMeanPathDelay, cPtpClockPortDomainIndex=cPtpClockPortDomainIndex, cPtpClockPortDSPortIdentity=cPtpClockPortDSPortIdentity, cPtpClockRunningPacketsSent=cPtpClockRunningPacketsSent, cPtpDomainClockPortPhysicalInterfacesTotal=cPtpDomainClockPortPhysicalInterfacesTotal, cPtpClockPortSyncOneStep=cPtpClockPortSyncOneStep, cPtpClockPortDSPTPVersion=cPtpClockPortDSPTPVersion, cPtpClockPortTransDSPeerMeanPathDelay=cPtpClockPortTransDSPeerMeanPathDelay, PYSNMP_MODULE_ID=ciscoPtpMIB, cPtpClockPortDSDomainIndex=cPtpClockPortDSDomainIndex, ClockTimeInterval=ClockTimeInterval, ClockIdentity=ClockIdentity, cPtpClockDefaultDSPriority1=cPtpClockDefaultDSPriority1, cPtpSystemTable=cPtpSystemTable, cPtpClockTimePropertiesDSCurrentUTCOffsetValid=cPtpClockTimePropertiesDSCurrentUTCOffsetValid, cPtpClockParentDSGMClockQualityOffset=cPtpClockParentDSGMClockQualityOffset, ciscoPtpMIBCompliances2=ciscoPtpMIBCompliances2, cPtpClockRunningInstanceIndex=cPtpClockRunningInstanceIndex, ciscoPtpMIBClockTranparentDSGroup=ciscoPtpMIBClockTranparentDSGroup, ClockQualityClassType=ClockQualityClassType, cPtpClockPortCurrentDomainIndex=cPtpClockPortCurrentDomainIndex, cPtpSystemEntry=cPtpSystemEntry, cPtpClockPortRunningClockInstanceIndex=cPtpClockPortRunningClockInstanceIndex, ciscoPtpMIBClockTimepropertiesGroup=ciscoPtpMIBClockTimepropertiesGroup, cPtpClockPortDSPeerDelayReqInterval=cPtpClockPortDSPeerDelayReqInterval, ClockProfileType=ClockProfileType, cPtpClockPortDSName=cPtpClockPortDSName, ciscoPtpMIBCompliances1=ciscoPtpMIBCompliances1, ciscoPtpMIB=ciscoPtpMIB, cPtpClockTimePropertiesDSSource=cPtpClockTimePropertiesDSSource, cPtpClockTimePropertiesDSInstanceIndex=cPtpClockTimePropertiesDSInstanceIndex, ciscoPtpMIBCompliances3=ciscoPtpMIBCompliances3, cPtpClockCurrentDSOffsetFromMaster=cPtpClockCurrentDSOffsetFromMaster, ClockPortNumber=ClockPortNumber, cPtpClockPortTransDSEntry=cPtpClockPortTransDSEntry, cPtpClockTransDefaultDSPrimaryDomain=cPtpClockTransDefaultDSPrimaryDomain, cPtpClockRunningTable=cPtpClockRunningTable, ciscoPtpMIBClockPortGroup=ciscoPtpMIBClockPortGroup, cPtpClockPortAssociateOutErrors=cPtpClockPortAssociateOutErrors, ClockQualityAccuracyType=ClockQualityAccuracyType, cPtpSystemDomainClockTypeIndex=cPtpSystemDomainClockTypeIndex, cPtpClockTODEnabled=cPtpClockTODEnabled, cPtpClockPortTablePortNumberIndex=cPtpClockPortTablePortNumberIndex, cPtpClockPortAssociateInErrors=cPtpClockPortAssociateInErrors, cPtpDomainIndex=cPtpDomainIndex, cPtpClockPortDSClockInstanceIndex=cPtpClockPortDSClockInstanceIndex, cPtpClockPortCurrentPeerAddress=cPtpClockPortCurrentPeerAddress, ciscoPtpMIBCompliances4=ciscoPtpMIBCompliances4, cPtpClockInputFrequencyEnabled=cPtpClockInputFrequencyEnabled, cPtpClockParentDSGMClockPriority2=cPtpClockParentDSGMClockPriority2, cPtpClockDefaultDSSlaveOnly=cPtpClockDefaultDSSlaveOnly, cPtpClockTransDefaultDSEntry=cPtpClockTransDefaultDSEntry, cPtpClockTransDefaultDSClockIdentity=cPtpClockTransDefaultDSClockIdentity, cPtpClockCurrentDSTable=cPtpClockCurrentDSTable, cPtpClockDefaultDSInstanceIndex=cPtpClockDefaultDSInstanceIndex, cPtpClockDefaultDSClockTypeIndex=cPtpClockDefaultDSClockTypeIndex, cPtpClockTimePropertiesDSDomainIndex=cPtpClockTimePropertiesDSDomainIndex, cPtpClockTimePropertiesDSLeap59=cPtpClockTimePropertiesDSLeap59, cPtpClockTODInterface=cPtpClockTODInterface, cPtpClockParentDSEntry=cPtpClockParentDSEntry, cPtpClockPortTransDSInstanceIndex=cPtpClockPortTransDSInstanceIndex, cPtpClockPortDSSyncInterval=cPtpClockPortDSSyncInterval, cPtpClockPortAssociateEntry=cPtpClockPortAssociateEntry, ciscoPtpMIBGroups=ciscoPtpMIBGroups, cPtpClockTransDefaultDSInstanceIndex=cPtpClockTransDefaultDSInstanceIndex, cPtpClockTimePropertiesDSFreqTraceable=cPtpClockTimePropertiesDSFreqTraceable, ClockTxModeType=ClockTxModeType, cPtpClockPortRunningEntry=cPtpClockPortRunningEntry, cPtpClockParentDSClockPhChRate=cPtpClockParentDSClockPhChRate, cPtpClockDefaultDSEntry=cPtpClockDefaultDSEntry, cPtpClockPortClockInstanceIndex=cPtpClockPortClockInstanceIndex)
