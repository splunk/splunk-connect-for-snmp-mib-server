#
# PySNMP MIB module UAS-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/UAS-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 21:20:58 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ValueSizeConstraint, ConstraintsUnion, ValueRangeConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ValueSizeConstraint", "ConstraintsUnion", "ValueRangeConstraint", "ConstraintsIntersection")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
TimeTicks, Counter32, IpAddress, ObjectIdentity, Counter64, Gauge32, ModuleIdentity, enterprises, iso, NotificationType, MibIdentifier, MibScalar, MibTable, MibTableRow, MibTableColumn, Bits, Integer32, Unsigned32 = mibBuilder.importSymbols("SNMPv2-SMI", "TimeTicks", "Counter32", "IpAddress", "ObjectIdentity", "Counter64", "Gauge32", "ModuleIdentity", "enterprises", "iso", "NotificationType", "MibIdentifier", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Bits", "Integer32", "Unsigned32")
PhysAddress, TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "PhysAddress", "TextualConvention", "DisplayString")
zxUasMib = ModuleIdentity((1, 3, 6, 1, 4, 1, 3902, 1006, 1))
if mibBuilder.loadTexts: zxUasMib.setLastUpdated('200503081500Z')
if mibBuilder.loadTexts: zxUasMib.setOrganization('ZTE Co.')
zte = MibIdentifier((1, 3, 6, 1, 4, 1, 3902))
zxUas = MibIdentifier((1, 3, 6, 1, 4, 1, 3902, 1006))
zxUasMibObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 3902, 1006, 1, 1))
zxUasTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 3902, 1006, 1, 2))
zxUasSystemGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 3902, 1006, 1, 1, 1))
zxUasServiceMgmtGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 3902, 1006, 1, 1, 2))
zxUasStaticsGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 3902, 1006, 1, 1, 3))
zxUasPppStatics = MibIdentifier((1, 3, 6, 1, 4, 1, 3902, 1006, 1, 1, 3, 1))
zxUasInterfaceIPPoolTable = MibTable((1, 3, 6, 1, 4, 1, 3902, 1006, 1, 1, 2, 1), )
if mibBuilder.loadTexts: zxUasInterfaceIPPoolTable.setStatus('current')
zxUasInterfaceIPPoolEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3902, 1006, 1, 1, 2, 1, 1), ).setIndexNames((0, "UAS-MIB", "zxUasIPPoolName"), (0, "UAS-MIB", "zxUasIPPoolVirtualRouteField"), (0, "UAS-MIB", "zxUasIPPoolInterfaceName"), (0, "UAS-MIB", "zxUasIPPoolID"), (0, "UAS-MIB", "zxUasIPPoolStartIPAddr"), (0, "UAS-MIB", "zxUasIPPoolEndIPAddr"))
if mibBuilder.loadTexts: zxUasInterfaceIPPoolEntry.setStatus('current')
zxUasIPPoolName = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 1006, 1, 1, 2, 1, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxUasIPPoolName.setStatus('current')
zxUasIPPoolVirtualRouteField = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 1006, 1, 1, 2, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxUasIPPoolVirtualRouteField.setStatus('current')
zxUasIPPoolInterfaceName = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 1006, 1, 1, 2, 1, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxUasIPPoolInterfaceName.setStatus('current')
zxUasIPPoolID = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 1006, 1, 1, 2, 1, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxUasIPPoolID.setStatus('current')
zxUasIPPoolStartIPAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 1006, 1, 1, 2, 1, 1, 5), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxUasIPPoolStartIPAddr.setStatus('current')
zxUasIPPoolEndIPAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 1006, 1, 1, 2, 1, 1, 6), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxUasIPPoolEndIPAddr.setStatus('current')
zxUasIPPoolFreeIPNum = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 1006, 1, 1, 2, 1, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 256))).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxUasIPPoolFreeIPNum.setStatus('current')
zxUasIPPoolUsedIPNum = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 1006, 1, 1, 2, 1, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 256))).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxUasIPPoolUsedIPNum.setStatus('current')
zxUasIPPoolUnavailableIPNum = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 1006, 1, 1, 2, 1, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 256))).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxUasIPPoolUnavailableIPNum.setStatus('current')
zxUasIPPoolBindToDomainFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 1006, 1, 1, 2, 1, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("unreserved", 1), ("reserved", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxUasIPPoolBindToDomainFlag.setStatus('current')
zxUasActiveSubscriberTable = MibTable((1, 3, 6, 1, 4, 1, 3902, 1006, 1, 1, 2, 2), )
if mibBuilder.loadTexts: zxUasActiveSubscriberTable.setStatus('current')
zxUasActiveSubscriberEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3902, 1006, 1, 1, 2, 2, 1), ).setIndexNames((0, "UAS-MIB", "zxUasActiveSubscriberVirtualRouteField"), (0, "UAS-MIB", "zxUasActiveSubscriberIPAddr"), (0, "UAS-MIB", "zxUasActiveSubscriberType"), (0, "UAS-MIB", "zxUasActiveSubscriberPPPID"))
if mibBuilder.loadTexts: zxUasActiveSubscriberEntry.setStatus('current')
zxUasActiveSubscriberVirtualRouteField = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 1006, 1, 1, 2, 2, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxUasActiveSubscriberVirtualRouteField.setStatus('current')
zxUasActiveSubscriberIPAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 1006, 1, 1, 2, 2, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxUasActiveSubscriberIPAddr.setStatus('current')
zxUasActiveSubscriberType = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 1006, 1, 1, 2, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("ppp", 1), ("ipdhcp", 2), ("remotedhcp", 3), ("ipdhcprelay", 4), ("iphost", 5), ("remotehost", 6), ("vpn", 7), ("brg", 8)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxUasActiveSubscriberType.setStatus('current')
zxUasActiveSubscriberPPPID = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 1006, 1, 1, 2, 2, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxUasActiveSubscriberPPPID.setStatus('current')
zxUasActiveSubscriberName = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 1006, 1, 1, 2, 2, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 63))).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxUasActiveSubscriberName.setStatus('current')
zxUasActiveSubscriberInterfaceName = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 1006, 1, 1, 2, 2, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxUasActiveSubscriberInterfaceName.setStatus('current')
zxUasActiveSubscriberDoaminID = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 1006, 1, 1, 2, 2, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxUasActiveSubscriberDoaminID.setStatus('current')
zxUasActiveSubscriberSlot = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 1006, 1, 1, 2, 2, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxUasActiveSubscriberSlot.setStatus('current')
zxUasActiveSubscriberPort = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 1006, 1, 1, 2, 2, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxUasActiveSubscriberPort.setStatus('current')
zxUasActiveSubscriberVlanId = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 1006, 1, 1, 2, 2, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxUasActiveSubscriberVlanId.setStatus('current')
zxUasActiveSubscriberVpi = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 1006, 1, 1, 2, 2, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxUasActiveSubscriberVpi.setStatus('current')
zxUasActiveSubscriberVci = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 1006, 1, 1, 2, 2, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxUasActiveSubscriberVci.setStatus('current')
zxUasActiveSubscriberMACAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 1006, 1, 1, 2, 2, 1, 13), PhysAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxUasActiveSubscriberMACAddr.setStatus('current')
zxUasActiveSubscriberUpOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 1006, 1, 1, 2, 2, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxUasActiveSubscriberUpOctets.setStatus('current')
zxUasActiveSubscriberUpGigaOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 1006, 1, 1, 2, 2, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxUasActiveSubscriberUpGigaOctets.setStatus('current')
zxUasActiveSubscriberDownOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 1006, 1, 1, 2, 2, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxUasActiveSubscriberDownOctets.setStatus('current')
zxUasActiveSubscriberDownGigaOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 1006, 1, 1, 2, 2, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxUasActiveSubscriberDownGigaOctets.setStatus('current')
zxUasActiveDhcpSubscriberAuthFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 1006, 1, 1, 2, 2, 1, 18), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxUasActiveDhcpSubscriberAuthFlag.setStatus('current')
zxUasActiveSubscriberUpTime = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 1006, 1, 1, 2, 2, 1, 19), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxUasActiveSubscriberUpTime.setStatus('current')
zxUasTail = MibScalar((1, 3, 6, 1, 4, 1, 3902, 1006, 1, 1, 2, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 0))).clone(namedValues=NamedValues(("true", 1), ("false", 0))))
if mibBuilder.loadTexts: zxUasTail.setStatus('current')
zxUasPppCallCount = MibScalar((1, 3, 6, 1, 4, 1, 3902, 1006, 1, 1, 3, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxUasPppCallCount.setStatus('current')
zxUasPppCallFailedCount = MibScalar((1, 3, 6, 1, 4, 1, 3902, 1006, 1, 1, 3, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxUasPppCallFailedCount.setStatus('current')
zxUasPppLinkBreakFailedCount = MibScalar((1, 3, 6, 1, 4, 1, 3902, 1006, 1, 1, 3, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxUasPppLinkBreakFailedCount.setStatus('current')
zxUasPppAbnormalCloseCount = MibScalar((1, 3, 6, 1, 4, 1, 3902, 1006, 1, 1, 3, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxUasPppAbnormalCloseCount.setStatus('current')
zxUasActiveSubscriberStaticsTable = MibTable((1, 3, 6, 1, 4, 1, 3902, 1006, 1, 1, 3, 2), )
if mibBuilder.loadTexts: zxUasActiveSubscriberStaticsTable.setStatus('current')
zxUasActiveSubscriberStaticsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3902, 1006, 1, 1, 3, 2, 1), ).setIndexNames((0, "UAS-MIB", "zxUasActiveSubscriberType"))
if mibBuilder.loadTexts: zxUasActiveSubscriberStaticsEntry.setStatus('current')
zxUasActiveSubscriberNum = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 1006, 1, 1, 3, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxUasActiveSubscriberNum.setStatus('current')
zxUasMaxSubscriberOnlineCount = MibScalar((1, 3, 6, 1, 4, 1, 3902, 1006, 1, 1, 3, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxUasMaxSubscriberOnlineCount.setStatus('current')
zxUasMaxSubscriberOnlineClear = MibScalar((1, 3, 6, 1, 4, 1, 3902, 1006, 1, 1, 3, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("normal", 0), ("clear", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zxUasMaxSubscriberOnlineClear.setStatus('current')
zxUasMaxSubscriberOnlineTime = MibScalar((1, 3, 6, 1, 4, 1, 3902, 1006, 1, 1, 3, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxUasMaxSubscriberOnlineTime.setStatus('current')
mibBuilder.exportSymbols("UAS-MIB", zxUasTail=zxUasTail, zxUasPppStatics=zxUasPppStatics, zxUasActiveSubscriberVlanId=zxUasActiveSubscriberVlanId, zxUasInterfaceIPPoolTable=zxUasInterfaceIPPoolTable, zxUasStaticsGroup=zxUasStaticsGroup, zxUasPppCallCount=zxUasPppCallCount, zxUasActiveSubscriberNum=zxUasActiveSubscriberNum, zxUasActiveSubscriberVpi=zxUasActiveSubscriberVpi, zxUasIPPoolFreeIPNum=zxUasIPPoolFreeIPNum, zxUasActiveSubscriberUpGigaOctets=zxUasActiveSubscriberUpGigaOctets, zxUasActiveSubscriberStaticsTable=zxUasActiveSubscriberStaticsTable, zxUasIPPoolUsedIPNum=zxUasIPPoolUsedIPNum, zxUasActiveDhcpSubscriberAuthFlag=zxUasActiveDhcpSubscriberAuthFlag, zxUasPppAbnormalCloseCount=zxUasPppAbnormalCloseCount, zxUasSystemGroup=zxUasSystemGroup, zxUasActiveSubscriberVci=zxUasActiveSubscriberVci, zxUasIPPoolVirtualRouteField=zxUasIPPoolVirtualRouteField, zxUasActiveSubscriberSlot=zxUasActiveSubscriberSlot, zxUasIPPoolInterfaceName=zxUasIPPoolInterfaceName, zxUasIPPoolID=zxUasIPPoolID, zxUasIPPoolBindToDomainFlag=zxUasIPPoolBindToDomainFlag, zxUas=zxUas, zxUasActiveSubscriberName=zxUasActiveSubscriberName, zxUasActiveSubscriberPort=zxUasActiveSubscriberPort, zxUasMaxSubscriberOnlineClear=zxUasMaxSubscriberOnlineClear, PYSNMP_MODULE_ID=zxUasMib, zxUasIPPoolName=zxUasIPPoolName, zxUasPppCallFailedCount=zxUasPppCallFailedCount, zxUasMaxSubscriberOnlineCount=zxUasMaxSubscriberOnlineCount, zxUasActiveSubscriberStaticsEntry=zxUasActiveSubscriberStaticsEntry, zxUasActiveSubscriberInterfaceName=zxUasActiveSubscriberInterfaceName, zxUasIPPoolStartIPAddr=zxUasIPPoolStartIPAddr, zxUasMib=zxUasMib, zxUasServiceMgmtGroup=zxUasServiceMgmtGroup, zxUasActiveSubscriberUpOctets=zxUasActiveSubscriberUpOctets, zxUasActiveSubscriberDoaminID=zxUasActiveSubscriberDoaminID, zxUasMibObjects=zxUasMibObjects, zxUasActiveSubscriberUpTime=zxUasActiveSubscriberUpTime, zxUasActiveSubscriberIPAddr=zxUasActiveSubscriberIPAddr, zxUasPppLinkBreakFailedCount=zxUasPppLinkBreakFailedCount, zte=zte, zxUasActiveSubscriberEntry=zxUasActiveSubscriberEntry, zxUasInterfaceIPPoolEntry=zxUasInterfaceIPPoolEntry, zxUasActiveSubscriberMACAddr=zxUasActiveSubscriberMACAddr, zxUasMaxSubscriberOnlineTime=zxUasMaxSubscriberOnlineTime, zxUasTraps=zxUasTraps, zxUasActiveSubscriberDownOctets=zxUasActiveSubscriberDownOctets, zxUasActiveSubscriberVirtualRouteField=zxUasActiveSubscriberVirtualRouteField, zxUasActiveSubscriberType=zxUasActiveSubscriberType, zxUasIPPoolUnavailableIPNum=zxUasIPPoolUnavailableIPNum, zxUasActiveSubscriberTable=zxUasActiveSubscriberTable, zxUasActiveSubscriberDownGigaOctets=zxUasActiveSubscriberDownGigaOctets, zxUasActiveSubscriberPPPID=zxUasActiveSubscriberPPPID, zxUasIPPoolEndIPAddr=zxUasIPPoolEndIPAddr)
