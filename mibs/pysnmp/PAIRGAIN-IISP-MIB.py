#
# PySNMP MIB module PAIRGAIN-IISP-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/PAIRGAIN-IISP-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 20:27:35 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ValueRangeConstraint, ConstraintsIntersection, ConstraintsUnion, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ValueRangeConstraint", "ConstraintsIntersection", "ConstraintsUnion", "ValueSizeConstraint")
AtmTrafficDescrParamIndex, = mibBuilder.importSymbols("ATM-MIB", "AtmTrafficDescrParamIndex")
AtmAddr, = mibBuilder.importSymbols("ATM-TC-MIB", "AtmAddr")
InterfaceIndex, ifIndex = mibBuilder.importSymbols("IF-MIB", "InterfaceIndex", "ifIndex")
pgIISPMIB, = mibBuilder.importSymbols("PAIRGAIN-COMMON-HD-MIB", "pgIISPMIB")
ObjectGroup, NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "NotificationGroup", "ModuleCompliance")
ModuleIdentity, IpAddress, MibIdentifier, Unsigned32, NotificationType, TimeTicks, Integer32, enterprises, Gauge32, ObjectIdentity, iso, MibScalar, MibTable, MibTableRow, MibTableColumn, Bits, Counter64, Counter32 = mibBuilder.importSymbols("SNMPv2-SMI", "ModuleIdentity", "IpAddress", "MibIdentifier", "Unsigned32", "NotificationType", "TimeTicks", "Integer32", "enterprises", "Gauge32", "ObjectIdentity", "iso", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Bits", "Counter64", "Counter32")
TruthValue, RowStatus, TimeStamp, TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TruthValue", "RowStatus", "TimeStamp", "TextualConvention", "DisplayString")
pgIISP = ModuleIdentity((1, 3, 6, 1, 4, 1, 927, 1, 9, 13, 1))
if mibBuilder.loadTexts: pgIISP.setLastUpdated('0002020000Z')
if mibBuilder.loadTexts: pgIISP.setOrganization('Pairgain Technologies Inc.')
pgIISPMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 927, 1, 9, 13, 1, 1))
class PgAtmAddrPrefix(TextualConvention, OctetString):
    status = 'current'
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(20, 20)
    fixedLength = 20

class PgAtmPrefixLength(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ValueRangeConstraint(0, 152)

class NetPrefix(OctetString):
    subtypeSpec = OctetString.subtypeSpec + ConstraintsUnion(ValueSizeConstraint(8, 8), ValueSizeConstraint(13, 13), )
pgIISPRouteAddrIndexNext = MibScalar((1, 3, 6, 1, 4, 1, 927, 1, 9, 13, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pgIISPRouteAddrIndexNext.setStatus('current')
pgIISPRouteAddrTable = MibTable((1, 3, 6, 1, 4, 1, 927, 1, 9, 13, 1, 1, 2), )
if mibBuilder.loadTexts: pgIISPRouteAddrTable.setStatus('current')
pgIISPRouteAddrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 927, 1, 9, 13, 1, 1, 2, 1), ).setIndexNames((0, "PAIRGAIN-IISP-MIB", "pgIISPRouteAddrIndex"), (0, "PAIRGAIN-IISP-MIB", "pgIISPRouteAddrAddress"), (0, "PAIRGAIN-IISP-MIB", "pgIISPRouteAddrPrefixLength"))
if mibBuilder.loadTexts: pgIISPRouteAddrEntry.setStatus('current')
pgIISPRouteAddrIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 927, 1, 9, 13, 1, 1, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pgIISPRouteAddrIndex.setStatus('current')
pgIISPRouteAddrRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 927, 1, 9, 13, 1, 1, 2, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: pgIISPRouteAddrRowStatus.setStatus('current')
pgIISPRouteAddrAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 927, 1, 9, 13, 1, 1, 2, 1, 3), PgAtmAddrPrefix()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pgIISPRouteAddrAddress.setStatus('current')
pgIISPRouteAddrPrefixLength = MibTableColumn((1, 3, 6, 1, 4, 1, 927, 1, 9, 13, 1, 1, 2, 1, 4), PgAtmPrefixLength()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pgIISPRouteAddrPrefixLength.setStatus('current')
pgIISPRouteAddrIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 927, 1, 9, 13, 1, 1, 2, 1, 5), InterfaceIndex()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pgIISPRouteAddrIfIndex.setStatus('current')
pgIISPRouteAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 927, 1, 9, 13, 1, 1, 2, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("other", 1), ("reject", 2), ("internal", 3), ("exterior", 4))).clone('exterior')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pgIISPRouteAddrType.setStatus('current')
pgIISPRouteAddrAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 927, 1, 9, 13, 1, 1, 2, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("inactive", 1), ("active", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pgIISPRouteAddrAdminStatus.setStatus('current')
pgIISPRouteAddrOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 927, 1, 9, 13, 1, 1, 2, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("inactive", 1), ("active", 2), ("advertised", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pgIISPRouteAddrOperStatus.setStatus('current')
pgIISPRouteAddrTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 927, 1, 9, 13, 1, 1, 2, 1, 9), TimeStamp()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pgIISPRouteAddrTimeStamp.setStatus('current')
pgIISPNetPrefixIndexNext = MibScalar((1, 3, 6, 1, 4, 1, 927, 1, 9, 13, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pgIISPNetPrefixIndexNext.setStatus('current')
pgIISPNetPrefixTable = MibTable((1, 3, 6, 1, 4, 1, 927, 1, 9, 13, 1, 1, 4), )
if mibBuilder.loadTexts: pgIISPNetPrefixTable.setStatus('current')
pgIISPNetPrefixEntry = MibTableRow((1, 3, 6, 1, 4, 1, 927, 1, 9, 13, 1, 1, 4, 1), ).setIndexNames((0, "PAIRGAIN-IISP-MIB", "pgIISPNetPrefixIndex"), (0, "PAIRGAIN-IISP-MIB", "pgIISPNetPrefixPort"), (0, "PAIRGAIN-IISP-MIB", "pgIISPNetPrefixPrefix"))
if mibBuilder.loadTexts: pgIISPNetPrefixEntry.setStatus('current')
pgIISPNetPrefixIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 927, 1, 9, 13, 1, 1, 4, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pgIISPNetPrefixIndex.setStatus('current')
pgIISPNetPrefixRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 927, 1, 9, 13, 1, 1, 4, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: pgIISPNetPrefixRowStatus.setStatus('current')
pgIISPNetPrefixPort = MibTableColumn((1, 3, 6, 1, 4, 1, 927, 1, 9, 13, 1, 1, 4, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pgIISPNetPrefixPort.setStatus('current')
pgIISPNetPrefixPrefix = MibTableColumn((1, 3, 6, 1, 4, 1, 927, 1, 9, 13, 1, 1, 4, 1, 4), NetPrefix()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pgIISPNetPrefixPrefix.setStatus('current')
pgIISPNetPrefixFormat = MibTableColumn((1, 3, 6, 1, 4, 1, 927, 1, 9, 13, 1, 1, 4, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("dcc", 1), ("icd", 2), ("e164", 3))).clone('dcc')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pgIISPNetPrefixFormat.setStatus('current')
pgIISPNetPrefixLength = MibTableColumn((1, 3, 6, 1, 4, 1, 927, 1, 9, 13, 1, 1, 4, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 152))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pgIISPNetPrefixLength.setStatus('current')
pgIISPNetPrefixStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 927, 1, 9, 13, 1, 1, 4, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("valid", 1), ("invalid", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pgIISPNetPrefixStatus.setStatus('current')
pgIISPAtmAddrPrefix = MibScalar((1, 3, 6, 1, 4, 1, 927, 1, 9, 13, 1, 1, 5), AtmAddr()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pgIISPAtmAddrPrefix.setStatus('current')
mibBuilder.exportSymbols("PAIRGAIN-IISP-MIB", PgAtmAddrPrefix=PgAtmAddrPrefix, pgIISPAtmAddrPrefix=pgIISPAtmAddrPrefix, pgIISPRouteAddrTimeStamp=pgIISPRouteAddrTimeStamp, pgIISPNetPrefixRowStatus=pgIISPNetPrefixRowStatus, pgIISPRouteAddrOperStatus=pgIISPRouteAddrOperStatus, pgIISPRouteAddrIndex=pgIISPRouteAddrIndex, pgIISPNetPrefixIndexNext=pgIISPNetPrefixIndexNext, pgIISPNetPrefixEntry=pgIISPNetPrefixEntry, pgIISPNetPrefixPort=pgIISPNetPrefixPort, pgIISPNetPrefixLength=pgIISPNetPrefixLength, PYSNMP_MODULE_ID=pgIISP, pgIISPRouteAddrAddress=pgIISPRouteAddrAddress, pgIISPNetPrefixFormat=pgIISPNetPrefixFormat, pgIISPRouteAddrIfIndex=pgIISPRouteAddrIfIndex, pgIISP=pgIISP, pgIISPRouteAddrIndexNext=pgIISPRouteAddrIndexNext, pgIISPNetPrefixPrefix=pgIISPNetPrefixPrefix, pgIISPMIBObjects=pgIISPMIBObjects, pgIISPRouteAddrEntry=pgIISPRouteAddrEntry, pgIISPRouteAddrPrefixLength=pgIISPRouteAddrPrefixLength, pgIISPRouteAddrAdminStatus=pgIISPRouteAddrAdminStatus, pgIISPNetPrefixTable=pgIISPNetPrefixTable, pgIISPRouteAddrTable=pgIISPRouteAddrTable, pgIISPRouteAddrRowStatus=pgIISPRouteAddrRowStatus, pgIISPNetPrefixIndex=pgIISPNetPrefixIndex, NetPrefix=NetPrefix, pgIISPRouteAddrType=pgIISPRouteAddrType, pgIISPNetPrefixStatus=pgIISPNetPrefixStatus, PgAtmPrefixLength=PgAtmPrefixLength)
