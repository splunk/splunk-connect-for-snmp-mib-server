#
# PySNMP MIB module MPLS-FTN-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/MPLS-FTN-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 20:04:04 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ConstraintsUnion, SingleValueConstraint, ValueRangeConstraint, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ConstraintsUnion", "SingleValueConstraint", "ValueRangeConstraint", "ValueSizeConstraint")
Dscp, = mibBuilder.importSymbols("DIFFSERV-DSCP-TC", "Dscp")
InterfaceIndexOrZero, = mibBuilder.importSymbols("IF-MIB", "InterfaceIndexOrZero")
InetAddress, InetPortNumber, InetAddressType = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddress", "InetPortNumber", "InetAddressType")
mplsMIB, = mibBuilder.importSymbols("MPLS-TC-MIB", "mplsMIB")
SnmpAdminString, = mibBuilder.importSymbols("SNMP-FRAMEWORK-MIB", "SnmpAdminString")
ModuleCompliance, ObjectGroup, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "ObjectGroup", "NotificationGroup")
Unsigned32, Bits, TimeTicks, NotificationType, ModuleIdentity, Integer32, IpAddress, Counter32, Counter64, iso, MibIdentifier, ObjectIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, Gauge32 = mibBuilder.importSymbols("SNMPv2-SMI", "Unsigned32", "Bits", "TimeTicks", "NotificationType", "ModuleIdentity", "Integer32", "IpAddress", "Counter32", "Counter64", "iso", "MibIdentifier", "ObjectIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Gauge32")
StorageType, RowPointer, TextualConvention, RowStatus, DisplayString, TimeStamp = mibBuilder.importSymbols("SNMPv2-TC", "StorageType", "RowPointer", "TextualConvention", "RowStatus", "DisplayString", "TimeStamp")
mplsFTNMIB = ModuleIdentity((1, 3, 6, 1, 2, 1, 10, 9999, 5))
mplsFTNMIB.setRevisions(('2003-04-30 12:00',))
if mibBuilder.loadTexts: mplsFTNMIB.setLastUpdated('200304301200Z')
if mibBuilder.loadTexts: mplsFTNMIB.setOrganization('Multiprotocol Label Switching (MPLS) Working Group')
class MplsFTNEntryIndex(TextualConvention, Unsigned32):
    status = 'current'
    subtypeSpec = Unsigned32.subtypeSpec + ValueRangeConstraint(1, 4294967295)

class MplsFTNEntryIndexOrZero(TextualConvention, Unsigned32):
    status = 'current'
    subtypeSpec = Unsigned32.subtypeSpec + ValueRangeConstraint(0, 4294967295)

mplsFTNNotifications = MibIdentifier((1, 3, 6, 1, 2, 1, 10, 9999, 5, 0))
mplsFTNObjects = MibIdentifier((1, 3, 6, 1, 2, 1, 10, 9999, 5, 1))
mplsFTNConformance = MibIdentifier((1, 3, 6, 1, 2, 1, 10, 9999, 5, 2))
mplsFTNIndexNext = MibScalar((1, 3, 6, 1, 2, 1, 10, 9999, 5, 1, 1), MplsFTNEntryIndexOrZero()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mplsFTNIndexNext.setStatus('current')
mplsFTNTableLastChanged = MibScalar((1, 3, 6, 1, 2, 1, 10, 9999, 5, 1, 2), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mplsFTNTableLastChanged.setStatus('current')
mplsFTNTable = MibTable((1, 3, 6, 1, 2, 1, 10, 9999, 5, 1, 3), )
if mibBuilder.loadTexts: mplsFTNTable.setStatus('current')
mplsFTNEntry = MibTableRow((1, 3, 6, 1, 2, 1, 10, 9999, 5, 1, 3, 1), ).setIndexNames((0, "MPLS-FTN-MIB", "mplsFTNIndex"))
if mibBuilder.loadTexts: mplsFTNEntry.setStatus('current')
mplsFTNIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 9999, 5, 1, 3, 1, 1), MplsFTNEntryIndex())
if mibBuilder.loadTexts: mplsFTNIndex.setStatus('current')
mplsFTNRowStatus = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 9999, 5, 1, 3, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: mplsFTNRowStatus.setStatus('current')
mplsFTNDescr = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 9999, 5, 1, 3, 1, 3), SnmpAdminString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: mplsFTNDescr.setStatus('current')
mplsFTNMask = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 9999, 5, 1, 3, 1, 4), Bits().clone(namedValues=NamedValues(("sourceAddr", 0), ("destAddr", 1), ("sourcePort", 2), ("destPort", 3), ("protocol", 4), ("dscp", 5)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: mplsFTNMask.setStatus('current')
mplsFTNAddrType = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 9999, 5, 1, 3, 1, 5), InetAddressType().clone('ipv4')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: mplsFTNAddrType.setStatus('current')
mplsFTNSourceAddrMin = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 9999, 5, 1, 3, 1, 6), InetAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: mplsFTNSourceAddrMin.setStatus('current')
mplsFTNSourceAddrMax = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 9999, 5, 1, 3, 1, 7), InetAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: mplsFTNSourceAddrMax.setStatus('current')
mplsFTNDestAddrMin = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 9999, 5, 1, 3, 1, 8), InetAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: mplsFTNDestAddrMin.setStatus('current')
mplsFTNDestAddrMax = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 9999, 5, 1, 3, 1, 9), InetAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: mplsFTNDestAddrMax.setStatus('current')
mplsFTNSourcePortMin = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 9999, 5, 1, 3, 1, 10), InetPortNumber()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: mplsFTNSourcePortMin.setStatus('current')
mplsFTNSourcePortMax = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 9999, 5, 1, 3, 1, 11), InetPortNumber()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: mplsFTNSourcePortMax.setStatus('current')
mplsFTNDestPortMin = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 9999, 5, 1, 3, 1, 12), InetPortNumber()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: mplsFTNDestPortMin.setStatus('current')
mplsFTNDestPortMax = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 9999, 5, 1, 3, 1, 13), InetPortNumber()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: mplsFTNDestPortMax.setStatus('current')
mplsFTNProtocol = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 9999, 5, 1, 3, 1, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: mplsFTNProtocol.setStatus('current')
mplsFTNDscp = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 9999, 5, 1, 3, 1, 15), Dscp()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: mplsFTNDscp.setStatus('current')
mplsFTNActionType = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 9999, 5, 1, 3, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("redirectLsp", 1), ("redirectTunnel", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: mplsFTNActionType.setStatus('current')
mplsFTNActionPointer = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 9999, 5, 1, 3, 1, 17), RowPointer()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: mplsFTNActionPointer.setStatus('current')
mplsFTNStorageType = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 9999, 5, 1, 3, 1, 18), StorageType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: mplsFTNStorageType.setStatus('current')
mplsFTNMapTableLastChanged = MibScalar((1, 3, 6, 1, 2, 1, 10, 9999, 5, 1, 4), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mplsFTNMapTableLastChanged.setStatus('current')
mplsFTNMapTable = MibTable((1, 3, 6, 1, 2, 1, 10, 9999, 5, 1, 5), )
if mibBuilder.loadTexts: mplsFTNMapTable.setStatus('current')
mplsFTNMapEntry = MibTableRow((1, 3, 6, 1, 2, 1, 10, 9999, 5, 1, 5, 1), ).setIndexNames((0, "MPLS-FTN-MIB", "mplsFTNMapIndex"), (0, "MPLS-FTN-MIB", "mplsFTNMapPrevIndex"), (0, "MPLS-FTN-MIB", "mplsFTNMapCurrIndex"))
if mibBuilder.loadTexts: mplsFTNMapEntry.setStatus('current')
mplsFTNMapIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 9999, 5, 1, 5, 1, 1), InterfaceIndexOrZero())
if mibBuilder.loadTexts: mplsFTNMapIndex.setStatus('current')
mplsFTNMapPrevIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 9999, 5, 1, 5, 1, 2), MplsFTNEntryIndexOrZero())
if mibBuilder.loadTexts: mplsFTNMapPrevIndex.setStatus('current')
mplsFTNMapCurrIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 9999, 5, 1, 5, 1, 3), MplsFTNEntryIndex())
if mibBuilder.loadTexts: mplsFTNMapCurrIndex.setStatus('current')
mplsFTNMapRowStatus = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 9999, 5, 1, 5, 1, 5), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: mplsFTNMapRowStatus.setStatus('current')
mplsFTNMapStorageType = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 9999, 5, 1, 5, 1, 6), StorageType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: mplsFTNMapStorageType.setStatus('current')
mplsFTNPerfTable = MibTable((1, 3, 6, 1, 2, 1, 10, 9999, 5, 1, 6), )
if mibBuilder.loadTexts: mplsFTNPerfTable.setStatus('current')
mplsFTNPerfEntry = MibTableRow((1, 3, 6, 1, 2, 1, 10, 9999, 5, 1, 6, 1), ).setIndexNames((0, "MPLS-FTN-MIB", "mplsFTNPerfIndex"), (0, "MPLS-FTN-MIB", "mplsFTNPerfCurrIndex"))
if mibBuilder.loadTexts: mplsFTNPerfEntry.setStatus('current')
mplsFTNPerfIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 9999, 5, 1, 6, 1, 1), InterfaceIndexOrZero())
if mibBuilder.loadTexts: mplsFTNPerfIndex.setStatus('current')
mplsFTNPerfCurrIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 9999, 5, 1, 6, 1, 2), MplsFTNEntryIndex())
if mibBuilder.loadTexts: mplsFTNPerfCurrIndex.setStatus('current')
mplsFTNPerfMatchedPackets = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 9999, 5, 1, 6, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mplsFTNPerfMatchedPackets.setStatus('current')
mplsFTNPerfMatchedOctets = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 9999, 5, 1, 6, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mplsFTNPerfMatchedOctets.setStatus('current')
mplsFTNPerfDiscontinuityTime = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 9999, 5, 1, 6, 1, 5), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mplsFTNPerfDiscontinuityTime.setStatus('current')
mplsFTNGroups = MibIdentifier((1, 3, 6, 1, 2, 1, 10, 9999, 5, 2, 1))
mplsFTNCompliances = MibIdentifier((1, 3, 6, 1, 2, 1, 10, 9999, 5, 2, 2))
mplsFTNModuleFullCompliance = ModuleCompliance((1, 3, 6, 1, 2, 1, 10, 9999, 5, 2, 2, 1)).setObjects(("IF-MIB", "ifGeneralInformationGroup"), ("IF-MIB", "ifCounterDiscontinuityGroup"), ("MPLS-FTN-MIB", "mplsFTNRuleGroup"), ("MPLS-FTN-MIB", "mplsFTNMapGroup"), ("MPLS-FTN-MIB", "mplsFTNPerfGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    mplsFTNModuleFullCompliance = mplsFTNModuleFullCompliance.setStatus('current')
mplsFTNModuleReadOnlyCompliance = ModuleCompliance((1, 3, 6, 1, 2, 1, 10, 9999, 5, 2, 2, 2)).setObjects(("IF-MIB", "ifGeneralInformationGroup"), ("IF-MIB", "ifCounterDiscontinuityGroup"), ("MPLS-FTN-MIB", "mplsFTNRuleGroup"), ("MPLS-FTN-MIB", "mplsFTNMapGroup"), ("MPLS-FTN-MIB", "mplsFTNPerfGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    mplsFTNModuleReadOnlyCompliance = mplsFTNModuleReadOnlyCompliance.setStatus('current')
mplsFTNRuleGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 10, 9999, 5, 2, 1, 1)).setObjects(("MPLS-FTN-MIB", "mplsFTNIndexNext"), ("MPLS-FTN-MIB", "mplsFTNTableLastChanged"), ("MPLS-FTN-MIB", "mplsFTNRowStatus"), ("MPLS-FTN-MIB", "mplsFTNDescr"), ("MPLS-FTN-MIB", "mplsFTNMask"), ("MPLS-FTN-MIB", "mplsFTNAddrType"), ("MPLS-FTN-MIB", "mplsFTNSourceAddrMin"), ("MPLS-FTN-MIB", "mplsFTNSourceAddrMax"), ("MPLS-FTN-MIB", "mplsFTNDestAddrMin"), ("MPLS-FTN-MIB", "mplsFTNDestAddrMax"), ("MPLS-FTN-MIB", "mplsFTNSourcePortMin"), ("MPLS-FTN-MIB", "mplsFTNSourcePortMax"), ("MPLS-FTN-MIB", "mplsFTNDestPortMin"), ("MPLS-FTN-MIB", "mplsFTNDestPortMax"), ("MPLS-FTN-MIB", "mplsFTNProtocol"), ("MPLS-FTN-MIB", "mplsFTNActionType"), ("MPLS-FTN-MIB", "mplsFTNActionPointer"), ("MPLS-FTN-MIB", "mplsFTNDscp"), ("MPLS-FTN-MIB", "mplsFTNStorageType"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    mplsFTNRuleGroup = mplsFTNRuleGroup.setStatus('current')
mplsFTNMapGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 10, 9999, 5, 2, 1, 2)).setObjects(("MPLS-FTN-MIB", "mplsFTNMapTableLastChanged"), ("MPLS-FTN-MIB", "mplsFTNMapRowStatus"), ("MPLS-FTN-MIB", "mplsFTNMapStorageType"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    mplsFTNMapGroup = mplsFTNMapGroup.setStatus('current')
mplsFTNPerfGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 10, 9999, 5, 2, 1, 3)).setObjects(("MPLS-FTN-MIB", "mplsFTNPerfMatchedPackets"), ("MPLS-FTN-MIB", "mplsFTNPerfMatchedOctets"), ("MPLS-FTN-MIB", "mplsFTNPerfDiscontinuityTime"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    mplsFTNPerfGroup = mplsFTNPerfGroup.setStatus('current')
mibBuilder.exportSymbols("MPLS-FTN-MIB", MplsFTNEntryIndexOrZero=MplsFTNEntryIndexOrZero, mplsFTNActionType=mplsFTNActionType, mplsFTNPerfMatchedPackets=mplsFTNPerfMatchedPackets, mplsFTNObjects=mplsFTNObjects, mplsFTNStorageType=mplsFTNStorageType, mplsFTNRowStatus=mplsFTNRowStatus, mplsFTNMapIndex=mplsFTNMapIndex, mplsFTNDestPortMax=mplsFTNDestPortMax, mplsFTNProtocol=mplsFTNProtocol, mplsFTNMapGroup=mplsFTNMapGroup, mplsFTNDestAddrMax=mplsFTNDestAddrMax, mplsFTNRuleGroup=mplsFTNRuleGroup, mplsFTNMapCurrIndex=mplsFTNMapCurrIndex, mplsFTNSourcePortMax=mplsFTNSourcePortMax, mplsFTNPerfMatchedOctets=mplsFTNPerfMatchedOctets, mplsFTNPerfGroup=mplsFTNPerfGroup, mplsFTNEntry=mplsFTNEntry, mplsFTNPerfEntry=mplsFTNPerfEntry, mplsFTNDescr=mplsFTNDescr, mplsFTNGroups=mplsFTNGroups, mplsFTNSourcePortMin=mplsFTNSourcePortMin, mplsFTNTable=mplsFTNTable, mplsFTNIndexNext=mplsFTNIndexNext, MplsFTNEntryIndex=MplsFTNEntryIndex, mplsFTNMapEntry=mplsFTNMapEntry, mplsFTNModuleFullCompliance=mplsFTNModuleFullCompliance, mplsFTNConformance=mplsFTNConformance, mplsFTNMask=mplsFTNMask, mplsFTNMapRowStatus=mplsFTNMapRowStatus, mplsFTNMIB=mplsFTNMIB, mplsFTNPerfIndex=mplsFTNPerfIndex, mplsFTNMapTable=mplsFTNMapTable, mplsFTNSourceAddrMax=mplsFTNSourceAddrMax, mplsFTNPerfDiscontinuityTime=mplsFTNPerfDiscontinuityTime, mplsFTNPerfTable=mplsFTNPerfTable, mplsFTNSourceAddrMin=mplsFTNSourceAddrMin, mplsFTNDestAddrMin=mplsFTNDestAddrMin, mplsFTNNotifications=mplsFTNNotifications, mplsFTNDscp=mplsFTNDscp, mplsFTNAddrType=mplsFTNAddrType, mplsFTNMapStorageType=mplsFTNMapStorageType, mplsFTNPerfCurrIndex=mplsFTNPerfCurrIndex, mplsFTNActionPointer=mplsFTNActionPointer, mplsFTNTableLastChanged=mplsFTNTableLastChanged, mplsFTNMapPrevIndex=mplsFTNMapPrevIndex, mplsFTNDestPortMin=mplsFTNDestPortMin, mplsFTNMapTableLastChanged=mplsFTNMapTableLastChanged, mplsFTNCompliances=mplsFTNCompliances, PYSNMP_MODULE_ID=mplsFTNMIB, mplsFTNIndex=mplsFTNIndex, mplsFTNModuleReadOnlyCompliance=mplsFTNModuleReadOnlyCompliance)
