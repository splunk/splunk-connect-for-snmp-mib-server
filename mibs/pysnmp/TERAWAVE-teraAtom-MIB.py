#
# PySNMP MIB module TERAWAVE-teraAtom-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/TERAWAVE-teraAtom-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 21:08:27 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ValueRangeConstraint, ConstraintsUnion, ConstraintsIntersection, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ValueRangeConstraint", "ConstraintsUnion", "ConstraintsIntersection", "ValueSizeConstraint")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
iso, Integer32, Unsigned32, IpAddress, Counter32, MibIdentifier, TimeTicks, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter64, NotificationType, enterprises, Bits, Gauge32, ModuleIdentity, ObjectIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "iso", "Integer32", "Unsigned32", "IpAddress", "Counter32", "MibIdentifier", "TimeTicks", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter64", "NotificationType", "enterprises", "Bits", "Gauge32", "ModuleIdentity", "ObjectIdentity")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
terawave = MibIdentifier((1, 3, 6, 1, 4, 1, 4513))
teraATMGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 4513, 13))
teraATMSubGroup1 = MibIdentifier((1, 3, 6, 1, 4, 1, 4513, 13, 1))
teraAtmStatsSumTable = MibTable((1, 3, 6, 1, 4, 1, 4513, 13, 1, 1), )
if mibBuilder.loadTexts: teraAtmStatsSumTable.setStatus('mandatory')
teraAtmStatsSumTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4513, 13, 1, 1, 1), ).setIndexNames((0, "TERAWAVE-teraAtom-MIB", "teraAtmIfIndex"), (0, "TERAWAVE-teraAtom-MIB", "teraAtmVpi"), (0, "TERAWAVE-teraAtom-MIB", "teraAtmVci"))
if mibBuilder.loadTexts: teraAtmStatsSumTableEntry.setStatus('mandatory')
teraAtmIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 13, 1, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraAtmIfIndex.setStatus('mandatory')
teraAtmVpi = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 13, 1, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraAtmVpi.setStatus('mandatory')
teraAtmVci = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 13, 1, 1, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraAtmVci.setStatus('mandatory')
teraAtmStatsSumReceivedCells = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 13, 1, 1, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraAtmStatsSumReceivedCells.setStatus('mandatory')
teraAtmStatsSumReceivedDiscardCells = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 13, 1, 1, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraAtmStatsSumReceivedDiscardCells.setStatus('mandatory')
teraAtmStatsSumReceivedTaggedCells = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 13, 1, 1, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraAtmStatsSumReceivedTaggedCells.setStatus('mandatory')
teraAtmStatsSumTransmittedCells = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 13, 1, 1, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraAtmStatsSumTransmittedCells.setStatus('mandatory')
teraAtmStatsTable = MibTable((1, 3, 6, 1, 4, 1, 4513, 13, 1, 2), )
if mibBuilder.loadTexts: teraAtmStatsTable.setStatus('mandatory')
teraAtmStatsTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4513, 13, 1, 2, 1), ).setIndexNames((0, "TERAWAVE-teraAtom-MIB", "teraAtmIfIndex"), (0, "TERAWAVE-teraAtom-MIB", "teraAtmVpi"), (0, "TERAWAVE-teraAtom-MIB", "teraAtmVci"))
if mibBuilder.loadTexts: teraAtmStatsTableEntry.setStatus('mandatory')
teraAtmStatsReceivedUserClp0Cells = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 13, 1, 2, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraAtmStatsReceivedUserClp0Cells.setStatus('mandatory')
teraAtmStatsReceivedUserClp1Cells = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 13, 1, 2, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraAtmStatsReceivedUserClp1Cells.setStatus('mandatory')
teraAtmStatsReceivedOamClp0Cells = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 13, 1, 2, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraAtmStatsReceivedOamClp0Cells.setStatus('mandatory')
teraAtmStatsReceivedOamClp1Cells = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 13, 1, 2, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraAtmStatsReceivedOamClp1Cells.setStatus('mandatory')
teraAtmStatsReceivedDiscardClp0Cells = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 13, 1, 2, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraAtmStatsReceivedDiscardClp0Cells.setStatus('mandatory')
teraAtmStatsReceivedDiscardClp1Cells = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 13, 1, 2, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraAtmStatsReceivedDiscardClp1Cells.setStatus('mandatory')
teraAtmStatsReceivedTaggedCells = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 13, 1, 2, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraAtmStatsReceivedTaggedCells.setStatus('mandatory')
teraAtmStatsTransmittedUserClp0Cells = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 13, 1, 2, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraAtmStatsTransmittedUserClp0Cells.setStatus('mandatory')
teraAtmStatsTransmittedUserClp1Cells = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 13, 1, 2, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraAtmStatsTransmittedUserClp1Cells.setStatus('mandatory')
teraAtmStatsTransmittedOamClp0Cells = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 13, 1, 2, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraAtmStatsTransmittedOamClp0Cells.setStatus('mandatory')
teraAtmStatsTransmittedOamClp1Cells = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 13, 1, 2, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraAtmStatsTransmittedOamClp1Cells.setStatus('mandatory')
teraATMSubGroup2 = MibIdentifier((1, 3, 6, 1, 4, 1, 4513, 13, 2))
teraAtmHistoryControlTable = MibTable((1, 3, 6, 1, 4, 1, 4513, 13, 2, 1), )
if mibBuilder.loadTexts: teraAtmHistoryControlTable.setStatus('mandatory')
teraAtmHistoryControlTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4513, 13, 2, 1, 1), ).setIndexNames((0, "TERAWAVE-teraAtom-MIB", "teraAtmIfIndex"), (0, "TERAWAVE-teraAtom-MIB", "teraAtmVpi"), (0, "TERAWAVE-teraAtom-MIB", "teraAtmVci"), (0, "TERAWAVE-teraAtom-MIB", "teraAtmHistoryControlIndex"))
if mibBuilder.loadTexts: teraAtmHistoryControlTableEntry.setStatus('mandatory')
teraAtmHistoryControlIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 13, 2, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraAtmHistoryControlIndex.setStatus('mandatory')
teraAtmHistoryControlBucketsRequested = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 13, 2, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: teraAtmHistoryControlBucketsRequested.setStatus('mandatory')
teraAtmHistoryControlBucketsGranted = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 13, 2, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraAtmHistoryControlBucketsGranted.setStatus('mandatory')
teraAtmHistoryControlInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 13, 2, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 3600))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: teraAtmHistoryControlInterval.setStatus('mandatory')
teraAtmHistoryControlStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 13, 2, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("valid", 1), ("createRequest", 2), ("underCreation", 3), ("invalid", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: teraAtmHistoryControlStatus.setStatus('mandatory')
teraAtmStatsHistoryTable = MibTable((1, 3, 6, 1, 4, 1, 4513, 13, 2, 2), )
if mibBuilder.loadTexts: teraAtmStatsHistoryTable.setStatus('mandatory')
teraAtmStatsHistoryTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4513, 13, 2, 2, 1), ).setIndexNames((0, "TERAWAVE-teraAtom-MIB", "teraAtmIfIndex"), (0, "TERAWAVE-teraAtom-MIB", "teraAtmVpi"), (0, "TERAWAVE-teraAtom-MIB", "teraAtmVci"), (0, "TERAWAVE-teraAtom-MIB", "teraAtmHistoryControlIndex"), (0, "TERAWAVE-teraAtom-MIB", "teraAtmStatsHistorySampleIndex"))
if mibBuilder.loadTexts: teraAtmStatsHistoryTableEntry.setStatus('mandatory')
teraAtmStatsHistorySampleIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 13, 2, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraAtmStatsHistorySampleIndex.setStatus('mandatory')
teraAtmStatsHistoryIntervalStart = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 13, 2, 2, 1, 2), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraAtmStatsHistoryIntervalStart.setStatus('mandatory')
teraAtmStatsHistoryReceivedUserClp0Cells = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 13, 2, 2, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraAtmStatsHistoryReceivedUserClp0Cells.setStatus('mandatory')
teraAtmStatsHistoryReceivedUserClp1Cells = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 13, 2, 2, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraAtmStatsHistoryReceivedUserClp1Cells.setStatus('mandatory')
teraAtmStatsHistoryReceivedOamClp0Cells = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 13, 2, 2, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraAtmStatsHistoryReceivedOamClp0Cells.setStatus('mandatory')
teraAtmStatsHistoryReceivedOamClp1Cells = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 13, 2, 2, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraAtmStatsHistoryReceivedOamClp1Cells.setStatus('mandatory')
teraAtmStatsHistoryReceivedDiscardClp0Cells = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 13, 2, 2, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraAtmStatsHistoryReceivedDiscardClp0Cells.setStatus('mandatory')
teraAtmStatsHistoryReceivedDiscardClp1Cells = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 13, 2, 2, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraAtmStatsHistoryReceivedDiscardClp1Cells.setStatus('mandatory')
teraAtmStatsHistoryReceivedTaggedCells = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 13, 2, 2, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraAtmStatsHistoryReceivedTaggedCells.setStatus('mandatory')
teraAtmStatsHistoryTransmittedUserClp0Cells = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 13, 2, 2, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraAtmStatsHistoryTransmittedUserClp0Cells.setStatus('mandatory')
teraAtmStatsHistoryTransmittedUserClp1Cells = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 13, 2, 2, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraAtmStatsHistoryTransmittedUserClp1Cells.setStatus('mandatory')
teraAtmStatsHistoryTransmittedOamClp0Cells = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 13, 2, 2, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraAtmStatsHistoryTransmittedOamClp0Cells.setStatus('mandatory')
teraAtmStatsHistoryTransmittedOamClp1Cells = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 13, 2, 2, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraAtmStatsHistoryTransmittedOamClp1Cells.setStatus('mandatory')
teraATMSubGroup3 = MibIdentifier((1, 3, 6, 1, 4, 1, 4513, 13, 3))
teraAtmILMIPollCfgTable = MibIdentifier((1, 3, 6, 1, 4, 1, 4513, 13, 3, 1))
teraDefaultRegainTimeout = MibScalar((1, 3, 6, 1, 4, 1, 4513, 13, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: teraDefaultRegainTimeout.setStatus('mandatory')
teraDefaultTestConnectTimeout = MibScalar((1, 3, 6, 1, 4, 1, 4513, 13, 3, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: teraDefaultTestConnectTimeout.setStatus('mandatory')
teraDefaultAllowedNumOfFailed = MibScalar((1, 3, 6, 1, 4, 1, 4513, 13, 3, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: teraDefaultAllowedNumOfFailed.setStatus('mandatory')
teraATMPhyStatTable = MibTable((1, 3, 6, 1, 4, 1, 4513, 13, 4), )
if mibBuilder.loadTexts: teraATMPhyStatTable.setStatus('mandatory')
teraATMPhyStatTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4513, 13, 4, 1), ).setIndexNames((0, "TERAWAVE-teraAtom-MIB", "teraAtmIfIndex"))
if mibBuilder.loadTexts: teraATMPhyStatTableEntry.setStatus('mandatory')
teraATM_Seconds = MibScalar((1, 3, 6, 1, 4, 1, 4513, 13, 4, 1, 1), Counter32()).setLabel("teraATM-Seconds").setMaxAccess("readonly")
if mibBuilder.loadTexts: teraATM_Seconds.setStatus('mandatory')
teraATM_CorrectHCSError = MibScalar((1, 3, 6, 1, 4, 1, 4513, 13, 4, 1, 2), Counter32()).setLabel("teraATM-CorrectHCSError").setMaxAccess("readonly")
if mibBuilder.loadTexts: teraATM_CorrectHCSError.setStatus('mandatory')
teraATM_UncorrectHCSError = MibScalar((1, 3, 6, 1, 4, 1, 4513, 13, 4, 1, 3), Counter32()).setLabel("teraATM-UncorrectHCSError").setMaxAccess("readonly")
if mibBuilder.loadTexts: teraATM_UncorrectHCSError.setStatus('mandatory')
teraATM_ReceiveCell = MibScalar((1, 3, 6, 1, 4, 1, 4513, 13, 4, 1, 4), Counter64()).setLabel("teraATM-ReceiveCell").setMaxAccess("readonly")
if mibBuilder.loadTexts: teraATM_ReceiveCell.setStatus('mandatory')
teraATM_IDLECell = MibScalar((1, 3, 6, 1, 4, 1, 4513, 13, 4, 1, 5), Counter64()).setLabel("teraATM-IDLECell").setMaxAccess("readonly")
if mibBuilder.loadTexts: teraATM_IDLECell.setStatus('mandatory')
teraATM_TransmitCell = MibScalar((1, 3, 6, 1, 4, 1, 4513, 13, 4, 1, 6), Counter64()).setLabel("teraATM-TransmitCell").setMaxAccess("readonly")
if mibBuilder.loadTexts: teraATM_TransmitCell.setStatus('mandatory')
teraATM_AdminStatus = MibScalar((1, 3, 6, 1, 4, 1, 4513, 13, 4, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("clear", 1), ("run", 2), ("stop", 3)))).setLabel("teraATM-AdminStatus").setMaxAccess("readwrite")
if mibBuilder.loadTexts: teraATM_AdminStatus.setStatus('mandatory')
teraAtmPortStatsTable = MibTable((1, 3, 6, 1, 4, 1, 4513, 13, 5), )
if mibBuilder.loadTexts: teraAtmPortStatsTable.setStatus('mandatory')
teraAtmPortStatsTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4513, 13, 5, 1), ).setIndexNames((0, "TERAWAVE-teraAtom-MIB", "ifIndex"))
if mibBuilder.loadTexts: teraAtmPortStatsTableEntry.setStatus('mandatory')
teraAtmPortStatsIngressUnassignedCells = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 13, 5, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraAtmPortStatsIngressUnassignedCells.setStatus('mandatory')
teraAtmPortStatsEgressUnassignedCells = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 13, 5, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraAtmPortStatsEgressUnassignedCells.setStatus('mandatory')
teraAtmPortStatsTransmittedClp0Cells = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 13, 5, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraAtmPortStatsTransmittedClp0Cells.setStatus('mandatory')
teraAtmPortStatsTransmittedClp1Cells = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 13, 5, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraAtmPortStatsTransmittedClp1Cells.setStatus('mandatory')
teraAtmPortStatsReceivedClp0Cells = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 13, 5, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraAtmPortStatsReceivedClp0Cells.setStatus('mandatory')
teraAtmPortStatsReceivedClp1Cells = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 13, 5, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraAtmPortStatsReceivedClp1Cells.setStatus('mandatory')
teraAtmPortStatsReceivedOamCells = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 13, 5, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraAtmPortStatsReceivedOamCells.setStatus('mandatory')
teraAtmPortStatsReceivedRmCells = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 13, 5, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraAtmPortStatsReceivedRmCells.setStatus('mandatory')
teraAtmPortStatsReceivedErroredOamCells = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 13, 5, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraAtmPortStatsReceivedErroredOamCells.setStatus('mandatory')
teraAtmPortStatsReceivedErroredRmCells = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 13, 5, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraAtmPortStatsReceivedErroredRmCells.setStatus('mandatory')
teraAtmPortStatsReceivedNonZerroGfcCells = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 13, 5, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraAtmPortStatsReceivedNonZerroGfcCells.setStatus('mandatory')
teraAtmPortStatsHistoryTable = MibTable((1, 3, 6, 1, 4, 1, 4513, 13, 6), )
if mibBuilder.loadTexts: teraAtmPortStatsHistoryTable.setStatus('mandatory')
teraAtmPortStatsHistoryTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4513, 13, 6, 1), ).setIndexNames((0, "TERAWAVE-teraAtom-MIB", "teraAtmIfIndex"), (0, "TERAWAVE-teraAtom-MIB", "teraAtmHistoryControlIndex"), (0, "TERAWAVE-teraAtom-MIB", "teraAtmStatsHistorySampleIndex"))
if mibBuilder.loadTexts: teraAtmPortStatsHistoryTableEntry.setStatus('mandatory')
teraAtmPortStatsHistoryIngressUnassignedCells = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 13, 6, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraAtmPortStatsHistoryIngressUnassignedCells.setStatus('mandatory')
teraAtmPortStatsHistoryEgressUnassignedCells = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 13, 6, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraAtmPortStatsHistoryEgressUnassignedCells.setStatus('mandatory')
teraAtmPortStatsHistoryTransmittedClp0Cells = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 13, 6, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraAtmPortStatsHistoryTransmittedClp0Cells.setStatus('mandatory')
teraAtmPortStatsHistoryTransmittedClp1Cells = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 13, 6, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraAtmPortStatsHistoryTransmittedClp1Cells.setStatus('mandatory')
teraAtmPortStatsHistoryReceivedClp0Cells = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 13, 6, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraAtmPortStatsHistoryReceivedClp0Cells.setStatus('mandatory')
teraAtmPortStatsHistoryReceivedClp1Cells = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 13, 6, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraAtmPortStatsHistoryReceivedClp1Cells.setStatus('mandatory')
teraAtmPortStatsHistoryReceivedOamCells = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 13, 6, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraAtmPortStatsHistoryReceivedOamCells.setStatus('mandatory')
teraAtmPortStatsHistoryReceivedRmCells = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 13, 6, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraAtmPortStatsHistoryReceivedRmCells.setStatus('mandatory')
teraAtmPortStatsHistoryReceivedErroredOamCells = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 13, 6, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraAtmPortStatsHistoryReceivedErroredOamCells.setStatus('mandatory')
teraAtmPortStatsHistoryReceivedErroredRmCells = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 13, 6, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraAtmPortStatsHistoryReceivedErroredRmCells.setStatus('mandatory')
teraAtmPortStatsHistoryReceivedNonZerroGfcCells = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 13, 6, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraAtmPortStatsHistoryReceivedNonZerroGfcCells.setStatus('mandatory')
teraAtmCc = MibIdentifier((1, 3, 6, 1, 4, 1, 4513, 13, 7))
teraAtmCcControlTable = MibTable((1, 3, 6, 1, 4, 1, 4513, 13, 7, 1), )
if mibBuilder.loadTexts: teraAtmCcControlTable.setStatus('mandatory')
teraAtmCcControlTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4513, 13, 7, 1, 1), ).setIndexNames((0, "TERAWAVE-teraAtom-MIB", "teraAtmIfIndex"), (0, "TERAWAVE-teraAtom-MIB", "teraAtmVpi"), (0, "TERAWAVE-teraAtom-MIB", "teraAtmVci"))
if mibBuilder.loadTexts: teraAtmCcControlTableEntry.setStatus('mandatory')
teraAtmCcSourceControl = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 13, 7, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("activate", 1), ("deactivate", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: teraAtmCcSourceControl.setStatus('mandatory')
teraAtmCcSinkControl = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 13, 7, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(3, 4))).clone(namedValues=NamedValues(("enable", 3), ("disable", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: teraAtmCcSinkControl.setStatus('mandatory')
teraAtmCcType = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 13, 7, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(4, 5))).clone(namedValues=NamedValues(("seg-to-Seg", 4), ("end-to-End", 5)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: teraAtmCcType.setStatus('mandatory')
teraAtmCcTargetDir = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 13, 7, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("upstream", 1), ("downstream", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: teraAtmCcTargetDir.setStatus('mandatory')
teraAtmCcSinkDir = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 13, 7, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("none", 0), ("upstream", 1), ("downstream", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraAtmCcSinkDir.setStatus('mandatory')
teraAtmCcSourceResult = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 13, 7, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("none", 1), ("activationSuccess", 2), ("activationInProgress", 3), ("activationFailed", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraAtmCcSourceResult.setStatus('mandatory')
teraAtmCcSinkResult = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 13, 7, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2), ("cc-OK", 3), ("cc-Failed", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraAtmCcSinkResult.setStatus('mandatory')
teraAtmCcRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 13, 7, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("ok", 1), ("delete", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: teraAtmCcRowStatus.setStatus('mandatory')
teraAtmPmControlTable = MibTable((1, 3, 6, 1, 4, 1, 4513, 13, 8), )
if mibBuilder.loadTexts: teraAtmPmControlTable.setStatus('mandatory')
teraAtmPmControlTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4513, 13, 8, 1), ).setIndexNames((0, "TERAWAVE-teraAtom-MIB", "teraAtmIfIndex"), (0, "TERAWAVE-teraAtom-MIB", "teraAtmVpi"), (0, "TERAWAVE-teraAtom-MIB", "teraAtmVci"))
if mibBuilder.loadTexts: teraAtmPmControlTableEntry.setStatus('mandatory')
teraAtmPmSourceControl = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 13, 8, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("activate", 1), ("deactivate", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: teraAtmPmSourceControl.setStatus('mandatory')
teraAtmPmSourceBlockSize = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 13, 8, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 4, 8))).clone(namedValues=NamedValues(("number-1024", 1), ("number-512", 2), ("number-256", 4), ("number-128", 8)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: teraAtmPmSourceBlockSize.setStatus('mandatory')
teraAtmPmSinkControl = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 13, 8, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(3, 4))).clone(namedValues=NamedValues(("enable", 3), ("disable", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: teraAtmPmSinkControl.setStatus('mandatory')
teraAtmPmSourceType = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 13, 8, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(4, 5))).clone(namedValues=NamedValues(("seg-to-Seg", 4), ("end-to-End", 5)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: teraAtmPmSourceType.setStatus('mandatory')
teraAtmPmTargetDir = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 13, 8, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("upstream", 1), ("downstream", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: teraAtmPmTargetDir.setStatus('mandatory')
teraAtmPmSinkDir = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 13, 8, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("none", 0), ("upstream", 1), ("downstream", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraAtmPmSinkDir.setStatus('mandatory')
teraAtmPmSourceResult = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 13, 8, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("none", 1), ("activationSuccess", 2), ("activationInProgress", 3), ("activationFailed", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraAtmPmSourceResult.setStatus('mandatory')
teraAtmPmSinkResult = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 13, 8, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraAtmPmSinkResult.setStatus('mandatory')
teraAtmPmRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 13, 8, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("ok", 1), ("delete", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: teraAtmPmRowStatus.setStatus('mandatory')
teraOamPmStatsTable = MibTable((1, 3, 6, 1, 4, 1, 4513, 13, 9), )
if mibBuilder.loadTexts: teraOamPmStatsTable.setStatus('mandatory')
teraOamPmStatsTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4513, 13, 9, 1), ).setIndexNames((0, "TERAWAVE-teraAtom-MIB", "teraAtmIfIndex"), (0, "TERAWAVE-teraAtom-MIB", "teraAtmVpi"), (0, "TERAWAVE-teraAtom-MIB", "teraAtmVci"))
if mibBuilder.loadTexts: teraOamPmStatsTableEntry.setStatus('mandatory')
teraOamPmStatsTotalTUC0 = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 13, 9, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraOamPmStatsTotalTUC0.setStatus('mandatory')
teraOamPmStatsTotalTUC01 = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 13, 9, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraOamPmStatsTotalTUC01.setStatus('mandatory')
teraOamPmStatsTotalTRCC0 = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 13, 9, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraOamPmStatsTotalTRCC0.setStatus('mandatory')
teraOamPmStatsTotalTRCC01 = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 13, 9, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraOamPmStatsTotalTRCC01.setStatus('mandatory')
teraOamPmStatsStat = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 13, 9, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("ok", 1), ("clear", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: teraOamPmStatsStat.setStatus('mandatory')
teraOamPmStatsTotalLostCLP0 = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 13, 9, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraOamPmStatsTotalLostCLP0.setStatus('mandatory')
teraOamPmStatsTotalLostCLP01 = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 13, 9, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraOamPmStatsTotalLostCLP01.setStatus('mandatory')
teraOamPmStatsTotalMisinsertedCLP0 = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 13, 9, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraOamPmStatsTotalMisinsertedCLP0.setStatus('mandatory')
teraOamPmStatsTotalMisinsertedCLP01 = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 13, 9, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraOamPmStatsTotalMisinsertedCLP01.setStatus('mandatory')
teraAtmPVCIfControlTable = MibTable((1, 3, 6, 1, 4, 1, 4513, 13, 11), )
if mibBuilder.loadTexts: teraAtmPVCIfControlTable.setStatus('mandatory')
teraAtmPVCIfControlTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4513, 13, 11, 1), ).setIndexNames((0, "TERAWAVE-teraAtom-MIB", "teraAtmIfIndex"))
if mibBuilder.loadTexts: teraAtmPVCIfControlTableEntry.setStatus('mandatory')
teraAtmPVCIfMaxVpiBits = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 13, 11, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 12))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: teraAtmPVCIfMaxVpiBits.setStatus('mandatory')
teraAtmPVCIfMaxVciBits = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 13, 11, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: teraAtmPVCIfMaxVciBits.setStatus('mandatory')
teraAtmPVCIfMaxVCCs = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 13, 11, 1, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: teraAtmPVCIfMaxVCCs.setStatus('mandatory')
teraAtmPVCIfILMIVpi = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 13, 11, 1, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: teraAtmPVCIfILMIVpi.setStatus('mandatory')
teraAtmPVCIfILMIVci = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 13, 11, 1, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: teraAtmPVCIfILMIVci.setStatus('mandatory')
teraAtmPVCIfPortBw = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 13, 11, 1, 6), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: teraAtmPVCIfPortBw.setStatus('mandatory')
teraAtmCardStatsTable = MibTable((1, 3, 6, 1, 4, 1, 4513, 13, 12), )
if mibBuilder.loadTexts: teraAtmCardStatsTable.setStatus('mandatory')
teraAtmCardStatsTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4513, 13, 12, 1), ).setIndexNames((0, "TERAWAVE-teraAtom-MIB", "teraSlotIndex"))
if mibBuilder.loadTexts: teraAtmCardStatsTableEntry.setStatus('mandatory')
teraSlotIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 13, 12, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraSlotIndex.setStatus('mandatory')
teraAtmCardStatsLSBState = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 13, 12, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("idle", 1), ("waitForBus", 2), ("monitoringBus", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraAtmCardStatsLSBState.setStatus('mandatory')
teraAtmCardStatsLSBCrcCount = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 13, 12, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraAtmCardStatsLSBCrcCount.setStatus('mandatory')
teraAtmCardStatsTransitionUpCount = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 13, 12, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraAtmCardStatsTransitionUpCount.setStatus('mandatory')
teraAtmCardStatsRxUnassignedCellCount = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 13, 12, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraAtmCardStatsRxUnassignedCellCount.setStatus('mandatory')
teraAtmCardStatsLSBCrcLastSlot = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 13, 12, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraAtmCardStatsLSBCrcLastSlot.setStatus('mandatory')
teraAtmCardStatsMrpVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 13, 12, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraAtmCardStatsMrpVersion.setStatus('mandatory')
teraAtmCardStatsMrpFeature = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 13, 12, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraAtmCardStatsMrpFeature.setStatus('mandatory')
teraAtmVclTable = MibTable((1, 3, 6, 1, 4, 1, 4513, 13, 13), )
if mibBuilder.loadTexts: teraAtmVclTable.setStatus('mandatory')
teraAtmVclTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4513, 13, 13, 1), ).setIndexNames((0, "TERAWAVE-teraAtom-MIB", "ifIndex"), (0, "TERAWAVE-teraAtom-MIB", "atmVclVpi"), (0, "TERAWAVE-teraAtom-MIB", "atmVclVci"))
if mibBuilder.loadTexts: teraAtmVclTableEntry.setStatus('mandatory')
teraAtmVclTrafficPolicing = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 13, 13, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("on", 1), ("off", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: teraAtmVclTrafficPolicing.setStatus('mandatory')
teraAtmVclRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 13, 13, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("active", 1), ("destroy", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: teraAtmVclRowStatus.setStatus('mandatory')
teraAtmQueueStatsTable = MibTable((1, 3, 6, 1, 4, 1, 4513, 13, 14), )
if mibBuilder.loadTexts: teraAtmQueueStatsTable.setStatus('mandatory')
teraAtmQueueStatsTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4513, 13, 14, 1), ).setIndexNames((0, "TERAWAVE-teraAtom-MIB", "teraSlotIndex"), (0, "TERAWAVE-teraAtom-MIB", "teraAtmQueueIndex"))
if mibBuilder.loadTexts: teraAtmQueueStatsTableEntry.setStatus('mandatory')
teraAtmQueueIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 13, 14, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraAtmQueueIndex.setStatus('mandatory')
teraAtmQueueStatsSlotMask = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 13, 14, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraAtmQueueStatsSlotMask.setStatus('mandatory')
teraAtmQueueStatsCosType = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 13, 14, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("none", 1), ("cbr", 2), ("rtVbr", 3), ("nrtVbr", 4), ("ubr", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraAtmQueueStatsCosType.setStatus('mandatory')
teraAtmQueueStatsDiscardCellCount = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 13, 14, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraAtmQueueStatsDiscardCellCount.setStatus('mandatory')
teraAtmMgmtChannelTable = MibTable((1, 3, 6, 1, 4, 1, 4513, 13, 15), )
if mibBuilder.loadTexts: teraAtmMgmtChannelTable.setStatus('mandatory')
teraAtmMgmtChannelTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4513, 13, 15, 1), ).setIndexNames((0, "TERAWAVE-teraAtom-MIB", "teraAtmIfIndex"))
if mibBuilder.loadTexts: teraAtmMgmtChannelTableEntry.setStatus('mandatory')
teraAtmMgmtChannelVpiLow = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 13, 15, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: teraAtmMgmtChannelVpiLow.setStatus('mandatory')
teraAtmMgmtChannelVciLow = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 13, 15, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: teraAtmMgmtChannelVciLow.setStatus('mandatory')
teraAtmMgmtChannelVpiHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 13, 15, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: teraAtmMgmtChannelVpiHigh.setStatus('mandatory')
teraAtmMgmtChannelVciHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 13, 15, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: teraAtmMgmtChannelVciHigh.setStatus('mandatory')
teraAtmDbg = MibIdentifier((1, 3, 6, 1, 4, 1, 4513, 13, 16))
teraDebugTable = MibIdentifier((1, 3, 6, 1, 4, 1, 4513, 13, 16, 1))
teraDebug1 = MibScalar((1, 3, 6, 1, 4, 1, 4513, 13, 16, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraDebug1.setStatus('mandatory')
teraDebug2 = MibScalar((1, 3, 6, 1, 4, 1, 4513, 13, 16, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraDebug2.setStatus('mandatory')
teraDebug3 = MibScalar((1, 3, 6, 1, 4, 1, 4513, 13, 16, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraDebug3.setStatus('mandatory')
teraAtmPortPVCAlarmStatTable = MibTable((1, 3, 6, 1, 4, 1, 4513, 13, 17), )
if mibBuilder.loadTexts: teraAtmPortPVCAlarmStatTable.setStatus('mandatory')
teraAtmPortPVCAlarmStatTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4513, 13, 17, 1), ).setIndexNames((0, "TERAWAVE-teraAtom-MIB", "ifIndex"), (0, "TERAWAVE-teraAtom-MIB", "atmVclVpi"), (0, "TERAWAVE-teraAtom-MIB", "atmVclVci"), (0, "TERAWAVE-teraAtom-MIB", "teraAtmPortPVCAlarmStatType"))
if mibBuilder.loadTexts: teraAtmPortPVCAlarmStatTableEntry.setStatus('mandatory')
teraAtmPortPVCAlarmStatType = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 13, 17, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraAtmPortPVCAlarmStatType.setStatus('mandatory')
teraAtmPortPVCAlarmStatVPI = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 13, 17, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraAtmPortPVCAlarmStatVPI.setStatus('mandatory')
teraAtmPortPVCAlarmStatVCI = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 13, 17, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraAtmPortPVCAlarmStatVCI.setStatus('mandatory')
teraAtmPortPVCAlarmStatPort = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 13, 17, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraAtmPortPVCAlarmStatPort.setStatus('mandatory')
teraAtmPortPVCAlarmStatTime = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 13, 17, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraAtmPortPVCAlarmStatTime.setStatus('mandatory')
teraAtmPortPVCAlarmStatReason = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 13, 17, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraAtmPortPVCAlarmStatReason.setStatus('mandatory')
teraAtmVplTable = MibTable((1, 3, 6, 1, 4, 1, 4513, 13, 18), )
if mibBuilder.loadTexts: teraAtmVplTable.setStatus('mandatory')
teraAtmVplTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4513, 13, 18, 1), ).setIndexNames((0, "TERAWAVE-teraAtom-MIB", "ifIndex"), (0, "TERAWAVE-teraAtom-MIB", "atmVplVpi"))
if mibBuilder.loadTexts: teraAtmVplTableEntry.setStatus('mandatory')
teraAtmVplTrafficPolicing = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 13, 18, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("on", 1), ("off", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: teraAtmVplTrafficPolicing.setStatus('mandatory')
teraAtmVplRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 13, 18, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("active", 1), ("destroy", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: teraAtmVplRowStatus.setStatus('mandatory')
teraFarEndAtmfAtmLayerTable = MibTable((1, 3, 6, 1, 4, 1, 4513, 13, 19), )
if mibBuilder.loadTexts: teraFarEndAtmfAtmLayerTable.setStatus('mandatory')
teraFarEndAtmfAtmLayerTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4513, 13, 19, 1), ).setIndexNames((0, "TERAWAVE-teraAtom-MIB", "atmfAtmLayerIndex"))
if mibBuilder.loadTexts: teraFarEndAtmfAtmLayerTableEntry.setStatus('mandatory')
teraFarEndAtmfAtmLayerIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 13, 19, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraFarEndAtmfAtmLayerIndex.setStatus('mandatory')
teraFarEndAtmfAtmLayerMaxVPCs = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 13, 19, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4096))).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraFarEndAtmfAtmLayerMaxVPCs.setStatus('mandatory')
teraFarEndAtmfAtmLayerMaxVCCs = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 13, 19, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 268435456))).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraFarEndAtmfAtmLayerMaxVCCs.setStatus('mandatory')
teraFarEndAtmfAtmLayerConfiguredVPCs = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 13, 19, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4096))).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraFarEndAtmfAtmLayerConfiguredVPCs.setStatus('mandatory')
teraFarEndAtmfAtmLayerConfiguredVCCs = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 13, 19, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 268435456))).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraFarEndAtmfAtmLayerConfiguredVCCs.setStatus('mandatory')
teraFarEndAtmfAtmLayerMaxVpiBits = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 13, 19, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 12))).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraFarEndAtmfAtmLayerMaxVpiBits.setStatus('mandatory')
teraFarEndAtmfAtmLayerMaxVciBits = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 13, 19, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraFarEndAtmfAtmLayerMaxVciBits.setStatus('mandatory')
teraFarEndAtmfAtmLayerUniType = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 13, 19, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("public", 1), ("private", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraFarEndAtmfAtmLayerUniType.setStatus('mandatory')
teraFarEndAtmfAtmLayerUniVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 13, 19, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("version2point0", 1), ("version3point0", 2), ("version3point1", 3), ("version4point0", 4), ("unsupported", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraFarEndAtmfAtmLayerUniVersion.setStatus('mandatory')
teraFarEndAtmfAtmLayerDeviceType = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 13, 19, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("user", 1), ("node", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraFarEndAtmfAtmLayerDeviceType.setStatus('mandatory')
teraFarEndAtmfAtmLayerIlmiVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 13, 19, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("unsupported", 1), ("version4point0", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraFarEndAtmfAtmLayerIlmiVersion.setStatus('mandatory')
teraFarEndAtmfAtmLayerNniSigVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 13, 19, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("unsupported", 1), ("iisp", 2), ("pnniVersion1point0", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraFarEndAtmfAtmLayerNniSigVersion.setStatus('mandatory')
teraFarEndAtmfAtmLayerMaxSvpcVpi = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 13, 19, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4096))).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraFarEndAtmfAtmLayerMaxSvpcVpi.setStatus('mandatory')
teraFarEndAtmfAtmLayerMaxSvccVpi = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 13, 19, 1, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4096))).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraFarEndAtmfAtmLayerMaxSvccVpi.setStatus('mandatory')
teraFarEndAtmfAtmLayerMinSvccVci = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 13, 19, 1, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65536))).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraFarEndAtmfAtmLayerMinSvccVci.setStatus('mandatory')
teraFarEndAtmfVccTable = MibTable((1, 3, 6, 1, 4, 1, 4513, 13, 20), )
if mibBuilder.loadTexts: teraFarEndAtmfVccTable.setStatus('mandatory')
teraFarEndAtmfVccTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4513, 13, 20, 1), ).setIndexNames((0, "TERAWAVE-teraAtom-MIB", "atmfVccPortIndex"))
if mibBuilder.loadTexts: teraFarEndAtmfVccTableEntry.setStatus('mandatory')
teraFarEndAtmfVccPortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 13, 20, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraFarEndAtmfVccPortIndex.setStatus('mandatory')
teraFarEndAtmfVccVpi = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 13, 20, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4095))).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraFarEndAtmfVccVpi.setStatus('mandatory')
teraFarEndAtmfVccVci = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 13, 20, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraFarEndAtmfVccVci.setStatus('mandatory')
teraFarEndAtmfVccOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 13, 20, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("unknown", 1), ("end2endUp", 2), ("end2endDown", 3), ("localUpEnd2endUnknown", 4), ("localDown", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraFarEndAtmfVccOperStatus.setStatus('mandatory')
teraFarEndAtmfVccTransmitTrafficDescriptorType = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 13, 20, 1, 5), ObjectIdentifier()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraFarEndAtmfVccTransmitTrafficDescriptorType.setStatus('mandatory')
teraFarEndAtmfVccTransmitTrafficDescriptorParam1 = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 13, 20, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraFarEndAtmfVccTransmitTrafficDescriptorParam1.setStatus('mandatory')
teraFarEndAtmfVccTransmitTrafficDescriptorParam2 = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 13, 20, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraFarEndAtmfVccTransmitTrafficDescriptorParam2.setStatus('mandatory')
teraFarEndAtmfVccTransmitTrafficDescriptorParam3 = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 13, 20, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraFarEndAtmfVccTransmitTrafficDescriptorParam3.setStatus('mandatory')
teraFarEndAtmfVccTransmitTrafficDescriptorParam4 = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 13, 20, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraFarEndAtmfVccTransmitTrafficDescriptorParam4.setStatus('mandatory')
teraFarEndAtmfVccTransmitTrafficDescriptorParam5 = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 13, 20, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraFarEndAtmfVccTransmitTrafficDescriptorParam5.setStatus('mandatory')
teraFarEndAtmfVccReceiveTrafficDescriptorType = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 13, 20, 1, 11), ObjectIdentifier()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraFarEndAtmfVccReceiveTrafficDescriptorType.setStatus('mandatory')
teraFarEndAtmfVccReceiveTrafficDescriptorParam1 = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 13, 20, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraFarEndAtmfVccReceiveTrafficDescriptorParam1.setStatus('mandatory')
teraFarEndAtmfVccReceiveTrafficDescriptorParam2 = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 13, 20, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraFarEndAtmfVccReceiveTrafficDescriptorParam2.setStatus('mandatory')
teraFarEndAtmfVccReceiveTrafficDescriptorParam3 = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 13, 20, 1, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraFarEndAtmfVccReceiveTrafficDescriptorParam3.setStatus('mandatory')
teraFarEndAtmfVccReceiveTrafficDescriptorParam4 = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 13, 20, 1, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraFarEndAtmfVccReceiveTrafficDescriptorParam4.setStatus('mandatory')
teraFarEndAtmfVccReceiveTrafficDescriptorParam5 = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 13, 20, 1, 16), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraFarEndAtmfVccReceiveTrafficDescriptorParam5.setStatus('mandatory')
teraFarEndAtmfVccQoSCategory = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 13, 20, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("other", 1), ("deterministic", 2), ("statistical", 3), ("unspecified", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraFarEndAtmfVccQoSCategory.setStatus('mandatory')
teraFarEndAtmfVccTransmitQoSClass = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 13, 20, 1, 18), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraFarEndAtmfVccTransmitQoSClass.setStatus('mandatory')
teraFarEndAtmfVccReceiveQoSClass = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 13, 20, 1, 19), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraFarEndAtmfVccReceiveQoSClass.setStatus('mandatory')
teraFarEndAtmfVccBestEffortIndicator = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 13, 20, 1, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("true", 1), ("false", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraFarEndAtmfVccBestEffortIndicator.setStatus('mandatory')
teraFarEndAtmfVccTransmitFrameDiscard = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 13, 20, 1, 21), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("true", 1), ("false", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraFarEndAtmfVccTransmitFrameDiscard.setStatus('mandatory')
teraFarEndAtmfVccReceiveFrameDiscard = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 13, 20, 1, 22), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("true", 1), ("false", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraFarEndAtmfVccReceiveFrameDiscard.setStatus('mandatory')
teraFarEndAtmfVccServiceCategory = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 13, 20, 1, 23), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("other", 1), ("cbr", 2), ("rtVbr", 3), ("nrtVbr", 4), ("abr", 5), ("ubr", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraFarEndAtmfVccServiceCategory.setStatus('mandatory')
teraAtmStatsClearTable = MibTable((1, 3, 6, 1, 4, 1, 4513, 13, 1, 24), )
if mibBuilder.loadTexts: teraAtmStatsClearTable.setStatus('mandatory')
teraAtmStatsClearTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4513, 13, 1, 24, 1), ).setIndexNames((0, "TERAWAVE-teraAtom-MIB", "teraAtmIfIndex"), (0, "TERAWAVE-teraAtom-MIB", "teraAtmVpi"), (0, "TERAWAVE-teraAtom-MIB", "teraAtmVci"))
if mibBuilder.loadTexts: teraAtmStatsClearTableEntry.setStatus('mandatory')
teraAtmStatsStat = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 13, 1, 24, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("ok", 1), ("clear", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: teraAtmStatsStat.setStatus('mandatory')
mibBuilder.exportSymbols("TERAWAVE-teraAtom-MIB", teraATM_ReceiveCell=teraATM_ReceiveCell, teraAtmCcSourceResult=teraAtmCcSourceResult, teraDebugTable=teraDebugTable, teraAtmStatsTableEntry=teraAtmStatsTableEntry, teraFarEndAtmfAtmLayerMaxVCCs=teraFarEndAtmfAtmLayerMaxVCCs, teraAtmVci=teraAtmVci, teraFarEndAtmfVccReceiveTrafficDescriptorType=teraFarEndAtmfVccReceiveTrafficDescriptorType, teraAtmPortPVCAlarmStatPort=teraAtmPortPVCAlarmStatPort, teraAtmCc=teraAtmCc, teraAtmPmSourceBlockSize=teraAtmPmSourceBlockSize, teraAtmPortStatsHistoryTransmittedClp0Cells=teraAtmPortStatsHistoryTransmittedClp0Cells, teraOamPmStatsTotalTRCC01=teraOamPmStatsTotalTRCC01, teraFarEndAtmfAtmLayerMaxSvccVpi=teraFarEndAtmfAtmLayerMaxSvccVpi, teraOamPmStatsTotalTRCC0=teraOamPmStatsTotalTRCC0, teraAtmStatsHistoryReceivedDiscardClp0Cells=teraAtmStatsHistoryReceivedDiscardClp0Cells, teraAtmPortStatsHistoryTableEntry=teraAtmPortStatsHistoryTableEntry, teraAtmVplTrafficPolicing=teraAtmVplTrafficPolicing, teraAtmCcControlTable=teraAtmCcControlTable, teraAtmMgmtChannelVciHigh=teraAtmMgmtChannelVciHigh, teraAtmStatsStat=teraAtmStatsStat, teraAtmMgmtChannelVpiLow=teraAtmMgmtChannelVpiLow, teraAtmCardStatsLSBCrcCount=teraAtmCardStatsLSBCrcCount, teraFarEndAtmfVccReceiveTrafficDescriptorParam2=teraFarEndAtmfVccReceiveTrafficDescriptorParam2, teraAtmVplRowStatus=teraAtmVplRowStatus, teraAtmPortStatsHistoryReceivedNonZerroGfcCells=teraAtmPortStatsHistoryReceivedNonZerroGfcCells, teraAtmQueueStatsTableEntry=teraAtmQueueStatsTableEntry, teraAtmDbg=teraAtmDbg, teraAtmCcRowStatus=teraAtmCcRowStatus, teraAtmPortStatsHistoryReceivedErroredOamCells=teraAtmPortStatsHistoryReceivedErroredOamCells, teraAtmVclRowStatus=teraAtmVclRowStatus, teraAtmQueueIndex=teraAtmQueueIndex, teraFarEndAtmfAtmLayerMaxVciBits=teraFarEndAtmfAtmLayerMaxVciBits, teraAtmStatsSumTableEntry=teraAtmStatsSumTableEntry, teraAtmCcType=teraAtmCcType, teraOamPmStatsTableEntry=teraOamPmStatsTableEntry, teraAtmIfIndex=teraAtmIfIndex, teraAtmPVCIfMaxVciBits=teraAtmPVCIfMaxVciBits, teraAtmPmRowStatus=teraAtmPmRowStatus, teraAtmStatsReceivedDiscardClp0Cells=teraAtmStatsReceivedDiscardClp0Cells, teraAtmVplTable=teraAtmVplTable, teraFarEndAtmfAtmLayerIndex=teraFarEndAtmfAtmLayerIndex, teraAtmPortStatsReceivedErroredOamCells=teraAtmPortStatsReceivedErroredOamCells, teraFarEndAtmfAtmLayerIlmiVersion=teraFarEndAtmfAtmLayerIlmiVersion, teraFarEndAtmfVccVci=teraFarEndAtmfVccVci, teraFarEndAtmfVccTransmitQoSClass=teraFarEndAtmfVccTransmitQoSClass, teraFarEndAtmfVccReceiveTrafficDescriptorParam3=teraFarEndAtmfVccReceiveTrafficDescriptorParam3, teraAtmStatsHistoryIntervalStart=teraAtmStatsHistoryIntervalStart, teraAtmPmSinkControl=teraAtmPmSinkControl, teraAtmVpi=teraAtmVpi, teraAtmPortStatsHistoryTransmittedClp1Cells=teraAtmPortStatsHistoryTransmittedClp1Cells, teraOamPmStatsTotalMisinsertedCLP0=teraOamPmStatsTotalMisinsertedCLP0, teraOamPmStatsTotalTUC01=teraOamPmStatsTotalTUC01, teraOamPmStatsTotalMisinsertedCLP01=teraOamPmStatsTotalMisinsertedCLP01, teraFarEndAtmfAtmLayerMinSvccVci=teraFarEndAtmfAtmLayerMinSvccVci, teraAtmPortStatsReceivedClp0Cells=teraAtmPortStatsReceivedClp0Cells, teraAtmStatsClearTableEntry=teraAtmStatsClearTableEntry, teraAtmStatsSumReceivedTaggedCells=teraAtmStatsSumReceivedTaggedCells, teraAtmPVCIfMaxVpiBits=teraAtmPVCIfMaxVpiBits, teraAtmStatsHistoryTableEntry=teraAtmStatsHistoryTableEntry, teraAtmPVCIfControlTableEntry=teraAtmPVCIfControlTableEntry, teraAtmCcTargetDir=teraAtmCcTargetDir, teraAtmStatsHistoryTransmittedUserClp1Cells=teraAtmStatsHistoryTransmittedUserClp1Cells, teraAtmCardStatsLSBCrcLastSlot=teraAtmCardStatsLSBCrcLastSlot, teraOamPmStatsTotalLostCLP0=teraOamPmStatsTotalLostCLP0, teraAtmVplTableEntry=teraAtmVplTableEntry, teraAtmPortPVCAlarmStatReason=teraAtmPortPVCAlarmStatReason, teraAtmMgmtChannelTableEntry=teraAtmMgmtChannelTableEntry, teraAtmPortStatsReceivedErroredRmCells=teraAtmPortStatsReceivedErroredRmCells, teraAtmStatsTransmittedUserClp1Cells=teraAtmStatsTransmittedUserClp1Cells, teraAtmPmSourceControl=teraAtmPmSourceControl, teraATMPhyStatTable=teraATMPhyStatTable, teraAtmPortStatsHistoryReceivedErroredRmCells=teraAtmPortStatsHistoryReceivedErroredRmCells, teraAtmMgmtChannelVpiHigh=teraAtmMgmtChannelVpiHigh, teraFarEndAtmfVccTransmitFrameDiscard=teraFarEndAtmfVccTransmitFrameDiscard, teraFarEndAtmfVccReceiveTrafficDescriptorParam5=teraFarEndAtmfVccReceiveTrafficDescriptorParam5, teraAtmCardStatsLSBState=teraAtmCardStatsLSBState, teraAtmPortStatsReceivedOamCells=teraAtmPortStatsReceivedOamCells, teraAtmPortStatsHistoryIngressUnassignedCells=teraAtmPortStatsHistoryIngressUnassignedCells, teraFarEndAtmfVccBestEffortIndicator=teraFarEndAtmfVccBestEffortIndicator, teraAtmHistoryControlInterval=teraAtmHistoryControlInterval, teraAtmStatsSumTable=teraAtmStatsSumTable, teraAtmStatsTransmittedOamClp0Cells=teraAtmStatsTransmittedOamClp0Cells, teraAtmCardStatsRxUnassignedCellCount=teraAtmCardStatsRxUnassignedCellCount, teraAtmStatsHistoryTransmittedOamClp1Cells=teraAtmStatsHistoryTransmittedOamClp1Cells, teraAtmMgmtChannelTable=teraAtmMgmtChannelTable, teraFarEndAtmfVccReceiveQoSClass=teraFarEndAtmfVccReceiveQoSClass, teraAtmStatsHistoryTable=teraAtmStatsHistoryTable, teraDebug3=teraDebug3, teraAtmPortStatsTransmittedClp0Cells=teraAtmPortStatsTransmittedClp0Cells, teraDefaultAllowedNumOfFailed=teraDefaultAllowedNumOfFailed, teraAtmPVCIfControlTable=teraAtmPVCIfControlTable, teraFarEndAtmfAtmLayerConfiguredVCCs=teraFarEndAtmfAtmLayerConfiguredVCCs, teraAtmStatsHistoryTransmittedOamClp0Cells=teraAtmStatsHistoryTransmittedOamClp0Cells, teraFarEndAtmfAtmLayerUniVersion=teraFarEndAtmfAtmLayerUniVersion, teraAtmHistoryControlIndex=teraAtmHistoryControlIndex, teraAtmPVCIfMaxVCCs=teraAtmPVCIfMaxVCCs, teraAtmStatsHistoryReceivedTaggedCells=teraAtmStatsHistoryReceivedTaggedCells, teraFarEndAtmfVccServiceCategory=teraFarEndAtmfVccServiceCategory, teraFarEndAtmfVccTransmitTrafficDescriptorParam2=teraFarEndAtmfVccTransmitTrafficDescriptorParam2, teraSlotIndex=teraSlotIndex, teraAtmCcSinkControl=teraAtmCcSinkControl, teraAtmPortStatsTableEntry=teraAtmPortStatsTableEntry, teraAtmQueueStatsCosType=teraAtmQueueStatsCosType, teraFarEndAtmfVccReceiveTrafficDescriptorParam4=teraFarEndAtmfVccReceiveTrafficDescriptorParam4, teraAtmPortStatsHistoryTable=teraAtmPortStatsHistoryTable, teraAtmPmSinkResult=teraAtmPmSinkResult, teraAtmPVCIfPortBw=teraAtmPVCIfPortBw, teraAtmPortPVCAlarmStatVPI=teraAtmPortPVCAlarmStatVPI, teraAtmPortStatsTable=teraAtmPortStatsTable, teraAtmPVCIfILMIVci=teraAtmPVCIfILMIVci, teraAtmStatsHistoryTransmittedUserClp0Cells=teraAtmStatsHistoryTransmittedUserClp0Cells, teraAtmHistoryControlTable=teraAtmHistoryControlTable, teraFarEndAtmfVccPortIndex=teraFarEndAtmfVccPortIndex, teraAtmVclTrafficPolicing=teraAtmVclTrafficPolicing, teraFarEndAtmfVccTable=teraFarEndAtmfVccTable, teraAtmPortPVCAlarmStatVCI=teraAtmPortPVCAlarmStatVCI, teraAtmStatsClearTable=teraAtmStatsClearTable, teraFarEndAtmfAtmLayerDeviceType=teraFarEndAtmfAtmLayerDeviceType, teraAtmPortStatsReceivedRmCells=teraAtmPortStatsReceivedRmCells, teraFarEndAtmfVccTransmitTrafficDescriptorParam5=teraFarEndAtmfVccTransmitTrafficDescriptorParam5, teraAtmQueueStatsTable=teraAtmQueueStatsTable, teraAtmStatsSumReceivedCells=teraAtmStatsSumReceivedCells, teraAtmStatsHistoryReceivedDiscardClp1Cells=teraAtmStatsHistoryReceivedDiscardClp1Cells, teraAtmPmSourceType=teraAtmPmSourceType, teraOamPmStatsTable=teraOamPmStatsTable, teraAtmStatsReceivedOamClp0Cells=teraAtmStatsReceivedOamClp0Cells, teraFarEndAtmfAtmLayerMaxVpiBits=teraFarEndAtmfAtmLayerMaxVpiBits, teraAtmCcSourceControl=teraAtmCcSourceControl, teraAtmStatsTransmittedOamClp1Cells=teraAtmStatsTransmittedOamClp1Cells, teraFarEndAtmfAtmLayerTable=teraFarEndAtmfAtmLayerTable, teraFarEndAtmfVccTableEntry=teraFarEndAtmfVccTableEntry, teraATM_CorrectHCSError=teraATM_CorrectHCSError, teraFarEndAtmfVccVpi=teraFarEndAtmfVccVpi, teraAtmPVCIfILMIVpi=teraAtmPVCIfILMIVpi, teraAtmMgmtChannelVciLow=teraAtmMgmtChannelVciLow, teraOamPmStatsTotalTUC0=teraOamPmStatsTotalTUC0, teraFarEndAtmfAtmLayerNniSigVersion=teraFarEndAtmfAtmLayerNniSigVersion, teraFarEndAtmfAtmLayerMaxVPCs=teraFarEndAtmfAtmLayerMaxVPCs, teraAtmHistoryControlStatus=teraAtmHistoryControlStatus, teraATMSubGroup3=teraATMSubGroup3, teraAtmCcControlTableEntry=teraAtmCcControlTableEntry, teraAtmStatsHistoryReceivedUserClp1Cells=teraAtmStatsHistoryReceivedUserClp1Cells, teraFarEndAtmfVccTransmitTrafficDescriptorParam3=teraFarEndAtmfVccTransmitTrafficDescriptorParam3, teraFarEndAtmfVccOperStatus=teraFarEndAtmfVccOperStatus, teraDefaultTestConnectTimeout=teraDefaultTestConnectTimeout, teraATM_TransmitCell=teraATM_TransmitCell, teraATM_UncorrectHCSError=teraATM_UncorrectHCSError, teraAtmPmControlTableEntry=teraAtmPmControlTableEntry, teraAtmPmTargetDir=teraAtmPmTargetDir, teraATM_Seconds=teraATM_Seconds, teraAtmPortPVCAlarmStatTableEntry=teraAtmPortPVCAlarmStatTableEntry, teraAtmPortStatsHistoryReceivedOamCells=teraAtmPortStatsHistoryReceivedOamCells, teraATMGroup=teraATMGroup, teraAtmHistoryControlBucketsRequested=teraAtmHistoryControlBucketsRequested, teraAtmPortStatsHistoryReceivedClp1Cells=teraAtmPortStatsHistoryReceivedClp1Cells, teraAtmPmControlTable=teraAtmPmControlTable, teraAtmStatsReceivedOamClp1Cells=teraAtmStatsReceivedOamClp1Cells, teraAtmPmSinkDir=teraAtmPmSinkDir, teraFarEndAtmfVccReceiveTrafficDescriptorParam1=teraFarEndAtmfVccReceiveTrafficDescriptorParam1, teraAtmCcSinkResult=teraAtmCcSinkResult, teraOamPmStatsStat=teraOamPmStatsStat, teraAtmPortPVCAlarmStatType=teraAtmPortPVCAlarmStatType, teraAtmStatsHistoryReceivedOamClp0Cells=teraAtmStatsHistoryReceivedOamClp0Cells, teraAtmStatsTransmittedUserClp0Cells=teraAtmStatsTransmittedUserClp0Cells, teraAtmPortStatsIngressUnassignedCells=teraAtmPortStatsIngressUnassignedCells, teraAtmCardStatsTransitionUpCount=teraAtmCardStatsTransitionUpCount, teraAtmStatsReceivedUserClp0Cells=teraAtmStatsReceivedUserClp0Cells, teraAtmStatsReceivedTaggedCells=teraAtmStatsReceivedTaggedCells, teraAtmCardStatsMrpFeature=teraAtmCardStatsMrpFeature, teraAtmQueueStatsDiscardCellCount=teraAtmQueueStatsDiscardCellCount, teraAtmPortStatsHistoryReceivedRmCells=teraAtmPortStatsHistoryReceivedRmCells, teraFarEndAtmfVccTransmitTrafficDescriptorParam4=teraFarEndAtmfVccTransmitTrafficDescriptorParam4, teraAtmStatsSumReceivedDiscardCells=teraAtmStatsSumReceivedDiscardCells, teraOamPmStatsTotalLostCLP01=teraOamPmStatsTotalLostCLP01, teraAtmVclTableEntry=teraAtmVclTableEntry, teraFarEndAtmfVccReceiveFrameDiscard=teraFarEndAtmfVccReceiveFrameDiscard, teraAtmPmSourceResult=teraAtmPmSourceResult, teraDefaultRegainTimeout=teraDefaultRegainTimeout, teraAtmPortStatsReceivedClp1Cells=teraAtmPortStatsReceivedClp1Cells, teraAtmPortStatsReceivedNonZerroGfcCells=teraAtmPortStatsReceivedNonZerroGfcCells, teraAtmVclTable=teraAtmVclTable, teraATMSubGroup1=teraATMSubGroup1, teraDebug1=teraDebug1, teraAtmStatsReceivedDiscardClp1Cells=teraAtmStatsReceivedDiscardClp1Cells, teraAtmStatsHistoryReceivedUserClp0Cells=teraAtmStatsHistoryReceivedUserClp0Cells, teraAtmStatsHistoryReceivedOamClp1Cells=teraAtmStatsHistoryReceivedOamClp1Cells, teraDebug2=teraDebug2, teraAtmPortStatsEgressUnassignedCells=teraAtmPortStatsEgressUnassignedCells, teraAtmILMIPollCfgTable=teraAtmILMIPollCfgTable, teraATMSubGroup2=teraATMSubGroup2, teraAtmCardStatsTableEntry=teraAtmCardStatsTableEntry, teraAtmCcSinkDir=teraAtmCcSinkDir, teraAtmPortPVCAlarmStatTable=teraAtmPortPVCAlarmStatTable, teraATM_AdminStatus=teraATM_AdminStatus, terawave=terawave, teraATMPhyStatTableEntry=teraATMPhyStatTableEntry, teraAtmStatsHistorySampleIndex=teraAtmStatsHistorySampleIndex, teraAtmPortStatsHistoryReceivedClp0Cells=teraAtmPortStatsHistoryReceivedClp0Cells, teraFarEndAtmfAtmLayerMaxSvpcVpi=teraFarEndAtmfAtmLayerMaxSvpcVpi, teraAtmHistoryControlBucketsGranted=teraAtmHistoryControlBucketsGranted, teraFarEndAtmfAtmLayerTableEntry=teraFarEndAtmfAtmLayerTableEntry, teraAtmHistoryControlTableEntry=teraAtmHistoryControlTableEntry, teraAtmPortStatsHistoryEgressUnassignedCells=teraAtmPortStatsHistoryEgressUnassignedCells, teraAtmPortPVCAlarmStatTime=teraAtmPortPVCAlarmStatTime, teraAtmQueueStatsSlotMask=teraAtmQueueStatsSlotMask, teraFarEndAtmfVccTransmitTrafficDescriptorType=teraFarEndAtmfVccTransmitTrafficDescriptorType, teraAtmStatsTable=teraAtmStatsTable, teraFarEndAtmfAtmLayerUniType=teraFarEndAtmfAtmLayerUniType, teraAtmCardStatsMrpVersion=teraAtmCardStatsMrpVersion, teraAtmStatsReceivedUserClp1Cells=teraAtmStatsReceivedUserClp1Cells, teraFarEndAtmfVccQoSCategory=teraFarEndAtmfVccQoSCategory, teraAtmStatsSumTransmittedCells=teraAtmStatsSumTransmittedCells, teraFarEndAtmfAtmLayerConfiguredVPCs=teraFarEndAtmfAtmLayerConfiguredVPCs, teraAtmCardStatsTable=teraAtmCardStatsTable, teraAtmPortStatsTransmittedClp1Cells=teraAtmPortStatsTransmittedClp1Cells, teraFarEndAtmfVccTransmitTrafficDescriptorParam1=teraFarEndAtmfVccTransmitTrafficDescriptorParam1, teraATM_IDLECell=teraATM_IDLECell)
