#
# PySNMP MIB module ELTEX-TUNNEL-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/ELTEX-TUNNEL-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 18:48:09 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ValueSizeConstraint, ConstraintsIntersection, ConstraintsUnion, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ValueSizeConstraint", "ConstraintsIntersection", "ConstraintsUnion", "ValueRangeConstraint")
eltexLtd, = mibBuilder.importSymbols("ELTEX-SMI-ACTUAL", "eltexLtd")
IANAtunnelType, = mibBuilder.importSymbols("IANAifType-MIB", "IANAtunnelType")
ifIndex, InterfaceIndexOrZero = mibBuilder.importSymbols("IF-MIB", "ifIndex", "InterfaceIndexOrZero")
InetAddressType, InetAddress = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddressType", "InetAddress")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Bits, MibScalar, MibTable, MibTableRow, MibTableColumn, TimeTicks, iso, NotificationType, Gauge32, IpAddress, MibIdentifier, transmission, Integer32, Unsigned32, ObjectIdentity, ModuleIdentity, Counter32, Counter64 = mibBuilder.importSymbols("SNMPv2-SMI", "Bits", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "TimeTicks", "iso", "NotificationType", "Gauge32", "IpAddress", "MibIdentifier", "transmission", "Integer32", "Unsigned32", "ObjectIdentity", "ModuleIdentity", "Counter32", "Counter64")
TextualConvention, RowStatus, DisplayString, TruthValue = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "RowStatus", "DisplayString", "TruthValue")
eltexTunnelMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 35265, 21))
eltexTunnelMIB.setRevisions(('2015-12-29 00:00',))
if mibBuilder.loadTexts: eltexTunnelMIB.setLastUpdated('201512290000Z')
if mibBuilder.loadTexts: eltexTunnelMIB.setOrganization('Eltex')
tunnelWiFiConfigTable = MibTable((1, 3, 6, 1, 4, 1, 35265, 21, 1), )
if mibBuilder.loadTexts: tunnelWiFiConfigTable.setStatus('current')
tunnelWiFiConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 35265, 21, 1, 1), ).setIndexNames((0, "ELTEX-TUNNEL-MIB", "tunnelWiFiConfigLocalAddressType"), (0, "ELTEX-TUNNEL-MIB", "tunnelWiFiConfigLocalAddress"), (0, "ELTEX-TUNNEL-MIB", "tunnelWiFiConfigRemoteAddressType"), (0, "ELTEX-TUNNEL-MIB", "tunnelWiFiConfigRemoteAddress"), (0, "ELTEX-TUNNEL-MIB", "tunnelWiFiConfigEncapsMethod"), (0, "ELTEX-TUNNEL-MIB", "tunnelWiFiConfigID"))
if mibBuilder.loadTexts: tunnelWiFiConfigEntry.setStatus('current')
tunnelWiFiConfigLocalAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 21, 1, 1, 1), InetAddressType())
if mibBuilder.loadTexts: tunnelWiFiConfigLocalAddressType.setStatus('current')
tunnelWiFiConfigLocalAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 21, 1, 1, 2), InetAddress())
if mibBuilder.loadTexts: tunnelWiFiConfigLocalAddress.setStatus('current')
tunnelWiFiConfigRemoteAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 21, 1, 1, 3), InetAddressType())
if mibBuilder.loadTexts: tunnelWiFiConfigRemoteAddressType.setStatus('current')
tunnelWiFiConfigRemoteAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 21, 1, 1, 4), InetAddress())
if mibBuilder.loadTexts: tunnelWiFiConfigRemoteAddress.setStatus('current')
tunnelWiFiConfigEncapsMethod = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 21, 1, 1, 5), IANAtunnelType())
if mibBuilder.loadTexts: tunnelWiFiConfigEncapsMethod.setStatus('current')
tunnelWiFiConfigID = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 21, 1, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: tunnelWiFiConfigID.setStatus('current')
tunnelWiFiConfigIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 21, 1, 1, 7), InterfaceIndexOrZero()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tunnelWiFiConfigIfIndex.setStatus('current')
tunnelWiFiConfigStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 21, 1, 1, 8), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tunnelWiFiConfigStatus.setStatus('current')
tunnelWiFiConfigMode = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 21, 1, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("notConfigured", 0), ("management", 1), ("data", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tunnelWiFiConfigMode.setStatus('current')
tunnelWiFiConfigDefaultProfile = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 21, 1, 1, 10), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tunnelWiFiConfigDefaultProfile.setStatus('current')
mibBuilder.exportSymbols("ELTEX-TUNNEL-MIB", tunnelWiFiConfigLocalAddressType=tunnelWiFiConfigLocalAddressType, PYSNMP_MODULE_ID=eltexTunnelMIB, tunnelWiFiConfigRemoteAddressType=tunnelWiFiConfigRemoteAddressType, tunnelWiFiConfigIfIndex=tunnelWiFiConfigIfIndex, tunnelWiFiConfigMode=tunnelWiFiConfigMode, tunnelWiFiConfigDefaultProfile=tunnelWiFiConfigDefaultProfile, tunnelWiFiConfigRemoteAddress=tunnelWiFiConfigRemoteAddress, tunnelWiFiConfigEntry=tunnelWiFiConfigEntry, tunnelWiFiConfigTable=tunnelWiFiConfigTable, tunnelWiFiConfigID=tunnelWiFiConfigID, tunnelWiFiConfigLocalAddress=tunnelWiFiConfigLocalAddress, tunnelWiFiConfigEncapsMethod=tunnelWiFiConfigEncapsMethod, tunnelWiFiConfigStatus=tunnelWiFiConfigStatus, eltexTunnelMIB=eltexTunnelMIB)
