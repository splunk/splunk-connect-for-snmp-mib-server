#
# PySNMP MIB module Wellfleet-MODCTL-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/Wellfleet-MODCTL-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 21:34:18 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ConstraintsUnion, SingleValueConstraint, ValueSizeConstraint, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ConstraintsUnion", "SingleValueConstraint", "ValueSizeConstraint", "ValueRangeConstraint")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
Integer32, ObjectIdentity, Unsigned32, iso, TimeTicks, MibScalar, MibTable, MibTableRow, MibTableColumn, MibIdentifier, Counter32, Counter64, ModuleIdentity, Bits, NotificationType, IpAddress, Gauge32 = mibBuilder.importSymbols("SNMPv2-SMI", "Integer32", "ObjectIdentity", "Unsigned32", "iso", "TimeTicks", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "MibIdentifier", "Counter32", "Counter64", "ModuleIdentity", "Bits", "NotificationType", "IpAddress", "Gauge32")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
wfModCtlGroup, = mibBuilder.importSymbols("Wellfleet-COMMON-MIB", "wfModCtlGroup")
wfModCtlBase = MibIdentifier((1, 3, 6, 1, 4, 1, 18, 3, 4, 34, 1, 1))
wfModCtlPrimarySlot = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 4, 34, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 12))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfModCtlPrimarySlot.setStatus('mandatory')
wfModCtlState = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 4, 34, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 20))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("init", 3), ("config", 4), ("notpresent", 20))).clone('notpresent')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfModCtlState.setStatus('mandatory')
wfModCtlActiveMask = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 4, 34, 1, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfModCtlActiveMask.setStatus('mandatory')
wfModCtlCfgSlotDisableMask = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 4, 34, 1, 1, 4), Gauge32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfModCtlCfgSlotDisableMask.setStatus('mandatory')
wfModCtlCfgHeartbeatPeriod = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 4, 34, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)).clone(3)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfModCtlCfgHeartbeatPeriod.setStatus('mandatory')
wfModCtlCfgHeartbeatDisableMask = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 4, 34, 1, 1, 6), Gauge32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfModCtlCfgHeartbeatDisableMask.setStatus('mandatory')
wfModCtlCfgBoflFailPeriod = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 4, 34, 1, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)).clone(30)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfModCtlCfgBoflFailPeriod.setStatus('mandatory')
wfModCtlCfgBoflDisableMask = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 4, 34, 1, 1, 8), Gauge32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfModCtlCfgBoflDisableMask.setStatus('mandatory')
wfModCtlCfgRspImageType = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 4, 34, 1, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("normal", 1), ("trace", 2))).clone('normal')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfModCtlCfgRspImageType.setStatus('mandatory')
wfModCtlDbgMsgLevel = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 4, 34, 1, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(2031616, 65536, 131072, 262144, 524288, 1048576))).clone(namedValues=NamedValues(("all", 2031616), ("debug", 65536), ("info", 131072), ("warning", 262144), ("fault", 524288), ("trace", 1048576))).clone('all')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfModCtlDbgMsgLevel.setStatus('mandatory')
wfModCtlScdLogMask = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 4, 34, 1, 1, 11), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfModCtlScdLogMask.setStatus('mandatory')
wfModCtlScdDbgMask = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 4, 34, 1, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfModCtlScdDbgMask.setStatus('mandatory')
mibBuilder.exportSymbols("Wellfleet-MODCTL-MIB", wfModCtlCfgSlotDisableMask=wfModCtlCfgSlotDisableMask, wfModCtlScdLogMask=wfModCtlScdLogMask, wfModCtlCfgRspImageType=wfModCtlCfgRspImageType, wfModCtlScdDbgMask=wfModCtlScdDbgMask, wfModCtlCfgHeartbeatDisableMask=wfModCtlCfgHeartbeatDisableMask, wfModCtlState=wfModCtlState, wfModCtlCfgBoflDisableMask=wfModCtlCfgBoflDisableMask, wfModCtlCfgHeartbeatPeriod=wfModCtlCfgHeartbeatPeriod, wfModCtlPrimarySlot=wfModCtlPrimarySlot, wfModCtlBase=wfModCtlBase, wfModCtlDbgMsgLevel=wfModCtlDbgMsgLevel, wfModCtlActiveMask=wfModCtlActiveMask, wfModCtlCfgBoflFailPeriod=wfModCtlCfgBoflFailPeriod)
