#
# PySNMP MIB module BRI-OPT-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/BRI-OPT-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:23:35 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ValueRangeConstraint, SingleValueConstraint, ConstraintsIntersection, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ValueRangeConstraint", "SingleValueConstraint", "ConstraintsIntersection", "ConstraintsUnion")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
iso, MibScalar, MibTable, MibTableRow, MibTableColumn, Bits, NotificationType, IpAddress, ObjectIdentity, Unsigned32, MibIdentifier, Counter32, TimeTicks, Counter64, ModuleIdentity, Gauge32, Integer32, enterprises = mibBuilder.importSymbols("SNMPv2-SMI", "iso", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Bits", "NotificationType", "IpAddress", "ObjectIdentity", "Unsigned32", "MibIdentifier", "Counter32", "TimeTicks", "Counter64", "ModuleIdentity", "Gauge32", "Integer32", "enterprises")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
codex = MibIdentifier((1, 3, 6, 1, 4, 1, 449))
cdxProductSpecific = MibIdentifier((1, 3, 6, 1, 4, 1, 449, 2))
cdx6500 = MibIdentifier((1, 3, 6, 1, 4, 1, 449, 2, 1))
cdx6500Configuration = MibIdentifier((1, 3, 6, 1, 4, 1, 449, 2, 1, 2))
cdx6500CfgProtocolGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1))
cdx6500PCTPortProtocolGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 1))
cdx6500Statistics = MibIdentifier((1, 3, 6, 1, 4, 1, 449, 2, 1, 3))
cdx6500StatProtocolGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1))
cdx6500PSTPortProtocolGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1))
class DisplayString(OctetString):
    pass

cdx6500PPCTISDN = MibIdentifier((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 1, 26))
cdx6500PPCTBRIConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 1, 26, 1))
cdx6500PPCTBRIPortTable = MibTable((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 1, 26, 1, 1), )
if mibBuilder.loadTexts: cdx6500PPCTBRIPortTable.setStatus('mandatory')
cdx6500PPCTBRIPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 1, 26, 1, 1, 1), ).setIndexNames((0, "BRI-OPT-MIB", "cdx6500BRICfgPortNumber"))
if mibBuilder.loadTexts: cdx6500PPCTBRIPortEntry.setStatus('mandatory')
cdx6500BRICfgPortNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 1, 26, 1, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500BRICfgPortNumber.setStatus('mandatory')
cdx6500BRICfgPortType = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 1, 26, 1, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(40))).clone(namedValues=NamedValues(("bri", 40)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500BRICfgPortType.setStatus('mandatory')
cdx6500BRICfgSwitchType = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 1, 26, 1, 1, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 24))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500BRICfgSwitchType.setStatus('mandatory')
cdx6500BRICfgVmebug = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 1, 26, 1, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500BRICfgVmebug.setStatus('mandatory')
cdx6500BRICfgTEI = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 1, 26, 1, 1, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500BRICfgTEI.setStatus('mandatory')
cdx6500PPCTBRIChan = MibIdentifier((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 1, 26, 1, 2))
cdx6500PPCTBRIX25ChanTable = MibTable((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 1, 26, 1, 2, 1), )
if mibBuilder.loadTexts: cdx6500PPCTBRIX25ChanTable.setStatus('mandatory')
cdx6500PPCTBRIX25ChanEntry = MibTableRow((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 1, 26, 1, 2, 1, 1), ).setIndexNames((0, "BRI-OPT-MIB", "cdx6500BRIX25ChanCfgPortNumber"), (0, "BRI-OPT-MIB", "cdx6500BRIX25ChanCfgChannelNum"))
if mibBuilder.loadTexts: cdx6500PPCTBRIX25ChanEntry.setStatus('mandatory')
cdx6500BRIX25ChanCfgPortNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 1, 26, 1, 2, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500BRIX25ChanCfgPortNumber.setStatus('mandatory')
cdx6500BRIX25ChanCfgChannelNum = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 1, 26, 1, 2, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 3))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500BRIX25ChanCfgChannelNum.setStatus('mandatory')
cdx6500BRIX25ChanCfgChannelType = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 1, 26, 1, 2, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(3, 4))).clone(namedValues=NamedValues(("bChannel", 3), ("dChannel", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500BRIX25ChanCfgChannelType.setStatus('mandatory')
cdx6500BRIX25ChanCfgAccessType = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 1, 26, 1, 2, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("permanent", 1), ("switched", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500BRIX25ChanCfgAccessType.setStatus('mandatory')
cdx6500BRIX25ChanCfgTimeslot = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 1, 26, 1, 2, 1, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500BRIX25ChanCfgTimeslot.setStatus('mandatory')
cdx6500BRIX25ChanCfgSPID = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 1, 26, 1, 2, 1, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 21))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500BRIX25ChanCfgSPID.setStatus('mandatory')
cdx6500BRIX25ChanCfgISDNCallAcc = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 1, 26, 1, 2, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(2, 3, 5))).clone(namedValues=NamedValues(("allCalls", 2), ("addressOnly", 3), ("addressSubaddress", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500BRIX25ChanCfgISDNCallAcc.setStatus('mandatory')
cdx6500BRIX25ChanCfgLocalSubsAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 1, 26, 1, 2, 1, 1, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 36))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500BRIX25ChanCfgLocalSubsAddr.setStatus('mandatory')
cdx6500BRIX25ChanCfgLocalSubsSubAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 1, 26, 1, 2, 1, 1, 9), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 20))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500BRIX25ChanCfgLocalSubsSubAddr.setStatus('mandatory')
cdx6500BRIX25ChanCfgRateAdaption = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 1, 26, 1, 2, 1, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("rate56k", 1), ("rate64k", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500BRIX25ChanCfgRateAdaption.setStatus('mandatory')
cdx6500BRIX25ChanCfgProtocolType = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 1, 26, 1, 2, 1, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(2, 3))).clone(namedValues=NamedValues(("x25", 2), ("fri", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500BRIX25ChanCfgProtocolType.setStatus('mandatory')
cdx6500BRIX25ChanCfgLinkAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 1, 26, 1, 2, 1, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("dte", 1), ("dce", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500BRIX25ChanCfgLinkAddr.setStatus('mandatory')
cdx6500BRIX25ChanCfgNumPVCChannels = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 1, 26, 1, 2, 1, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500BRIX25ChanCfgNumPVCChannels.setStatus('mandatory')
cdx6500BRIX25ChanCfgStartPVCChanNum = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 1, 26, 1, 2, 1, 1, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4095))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500BRIX25ChanCfgStartPVCChanNum.setStatus('mandatory')
cdx6500BRIX25ChanCfgBNumSVCChannels = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 1, 26, 1, 2, 1, 1, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 512))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500BRIX25ChanCfgBNumSVCChannels.setStatus('mandatory')
cdx6500BRIX25ChanCfgStartSVCChanNum = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 1, 26, 1, 2, 1, 1, 16), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4095))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500BRIX25ChanCfgStartSVCChanNum.setStatus('mandatory')
cdx6500BRIX25ChanCfgInitialFrame = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 1, 26, 1, 2, 1, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("sabm", 1), ("disc", 2), ("none", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500BRIX25ChanCfgInitialFrame.setStatus('mandatory')
cdx6500BRIX25ChanCfgT1TransRetryTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 1, 26, 1, 2, 1, 1, 18), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 254))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500BRIX25ChanCfgT1TransRetryTimer.setStatus('mandatory')
cdx6500BRIX25ChanCfgT4PollTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 1, 26, 1, 2, 1, 1, 19), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500BRIX25ChanCfgT4PollTimer.setStatus('mandatory')
cdx6500BRIX25ChanCfgBN2TransTries = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 1, 26, 1, 2, 1, 1, 20), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 20))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500BRIX25ChanCfgBN2TransTries.setStatus('mandatory')
cdx6500BRIX25ChanCfgFrameSeqCount = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 1, 26, 1, 2, 1, 1, 21), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("norm", 1), ("ext", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500BRIX25ChanCfgFrameSeqCount.setStatus('mandatory')
cdx6500BRIX25ChanCfgBKFrameWindow = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 1, 26, 1, 2, 1, 1, 22), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500BRIX25ChanCfgBKFrameWindow.setStatus('mandatory')
cdx6500BRIX25ChanCfgPktSeqCount = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 1, 26, 1, 2, 1, 1, 23), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("norm", 1), ("ext", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500BRIX25ChanCfgPktSeqCount.setStatus('mandatory')
cdx6500BRIX25ChanCfgBWPktWindow = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 1, 26, 1, 2, 1, 1, 24), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500BRIX25ChanCfgBWPktWindow.setStatus('mandatory')
cdx6500BRIX25ChanCfgBPPktSize = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 1, 26, 1, 2, 1, 1, 25), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(8, 9, 10, 11))).clone(namedValues=NamedValues(("s128", 8), ("s256", 9), ("s512", 10), ("s1024", 11)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500BRIX25ChanCfgBPPktSize.setStatus('mandatory')
cdx6500BRIX25ChanCfgMaxNegoPktSize = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 1, 26, 1, 2, 1, 1, 26), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(8, 9, 10, 11))).clone(namedValues=NamedValues(("s128", 8), ("s256", 9), ("s512", 10), ("s1024", 11)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500BRIX25ChanCfgMaxNegoPktSize.setStatus('mandatory')
cdx6500BRIX25ChanCfgDataQUpperThres = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 1, 26, 1, 2, 1, 1, 27), Integer32().subtype(subtypeSpec=ValueRangeConstraint(5, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500BRIX25ChanCfgDataQUpperThres.setStatus('mandatory')
cdx6500BRIX25ChanCfgDataQLowerThres = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 1, 26, 1, 2, 1, 1, 28), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500BRIX25ChanCfgDataQLowerThres.setStatus('mandatory')
cdx6500BRIX25ChanCfgRestartTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 1, 26, 1, 2, 1, 1, 29), Integer32().subtype(subtypeSpec=ValueRangeConstraint(5, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500BRIX25ChanCfgRestartTimer.setStatus('mandatory')
cdx6500BRIX25ChanCfgResetTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 1, 26, 1, 2, 1, 1, 30), Integer32().subtype(subtypeSpec=ValueRangeConstraint(5, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500BRIX25ChanCfgResetTimer.setStatus('mandatory')
cdx6500BRIX25ChanCfgCallTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 1, 26, 1, 2, 1, 1, 31), Integer32().subtype(subtypeSpec=ValueRangeConstraint(5, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500BRIX25ChanCfgCallTimer.setStatus('mandatory')
cdx6500BRIX25ChanCfgClearTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 1, 26, 1, 2, 1, 1, 32), Integer32().subtype(subtypeSpec=ValueRangeConstraint(5, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500BRIX25ChanCfgClearTimer.setStatus('mandatory')
cdx6500BRIX25ChanCfgFacToDelFromOutbCalls = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 1, 26, 1, 2, 1, 1, 33), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(3, 17))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500BRIX25ChanCfgFacToDelFromOutbCalls.setStatus('mandatory')
cdx6500BRIX25ChanCfgFacToAddToOutbCalls = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 1, 26, 1, 2, 1, 1, 34), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(3, 18))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500BRIX25ChanCfgFacToAddToOutbCalls.setStatus('mandatory')
cdx6500BRIX25ChanCfgFacToBarInOutbCalls = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 1, 26, 1, 2, 1, 1, 35), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(3, 24))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500BRIX25ChanCfgFacToBarInOutbCalls.setStatus('mandatory')
cdx6500BRIX25ChanCfgFacToBarInInbCalls = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 1, 26, 1, 2, 1, 1, 36), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(3, 19))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500BRIX25ChanCfgFacToBarInInbCalls.setStatus('mandatory')
cdx6500BRIX25ChanCfgX25Options = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 1, 26, 1, 2, 1, 1, 37), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(3, 107))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500BRIX25ChanCfgX25Options.setStatus('mandatory')
cdx6500BRIX25ChanCfgNumRoutDgtInCallUsrData = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 1, 26, 1, 2, 1, 1, 38), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 12))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500BRIX25ChanCfgNumRoutDgtInCallUsrData.setStatus('mandatory')
cdx6500BRIX25ChanCfgNumPreAddrDgstrpOutgCalls = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 1, 26, 1, 2, 1, 1, 39), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 14))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500BRIX25ChanCfgNumPreAddrDgstrpOutgCalls.setStatus('mandatory')
cdx6500BRIX25ChanCfgInDigitsToStrip = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 1, 26, 1, 2, 1, 1, 40), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500BRIX25ChanCfgInDigitsToStrip.setStatus('mandatory')
cdx6500BRIX25ChanCfgRestrictedConnDest = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 1, 26, 1, 2, 1, 1, 41), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500BRIX25ChanCfgRestrictedConnDest.setStatus('mandatory')
cdx6500BRIX25ChanCfgPortAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 1, 26, 1, 2, 1, 1, 42), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500BRIX25ChanCfgPortAddress.setStatus('mandatory')
cdx6500BRIX25ChanCfgCUGMembership = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 1, 26, 1, 2, 1, 1, 43), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 23))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500BRIX25ChanCfgCUGMembership.setStatus('mandatory')
cdx6500BRIX25ChanCfgBillingRecords = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 1, 26, 1, 2, 1, 1, 44), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("off", 1), ("on", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500BRIX25ChanCfgBillingRecords.setStatus('mandatory')
cdx6500BRIX25ChanCfgSubAddrSize = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 1, 26, 1, 2, 1, 1, 45), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 3))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500BRIX25ChanCfgSubAddrSize.setStatus('mandatory')
cdx6500BRIX25ChanCfgCallSecurity = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 1, 26, 1, 2, 1, 1, 46), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disable", 1), ("enable", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500BRIX25ChanCfgCallSecurity.setStatus('mandatory')
cdx6500BRIX25ChanCfgProtectionLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 1, 26, 1, 2, 1, 1, 47), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("none", 1), ("cpOnly", 2), ("fullDcp", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500BRIX25ChanCfgProtectionLevel.setStatus('mandatory')
cdx6500BRIX25ChanCfgReconnTimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 1, 26, 1, 2, 1, 1, 48), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500BRIX25ChanCfgReconnTimeout.setStatus('mandatory')
cdx6500BRIX25ChanCfgReconnTriesLt = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 1, 26, 1, 2, 1, 1, 49), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 127))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500BRIX25ChanCfgReconnTriesLt.setStatus('mandatory')
cdx6500BRIX25ChanCfgFacSubsCtl = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 1, 26, 1, 2, 1, 1, 50), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500BRIX25ChanCfgFacSubsCtl.setStatus('mandatory')
cdx6500BRIX25ChanCfgAlarmPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 1, 26, 1, 2, 1, 1, 51), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("network", 1), ("access", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500BRIX25ChanCfgAlarmPriority.setStatus('mandatory')
cdx6500BRIX25ChanCfgChanTEI = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 1, 26, 1, 2, 1, 1, 52), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 63))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500BRIX25ChanCfgChanTEI.setStatus('mandatory')
cdx6500BRIX25ChanCfgX25NetworkType = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 1, 26, 1, 2, 1, 1, 53), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("transpac", 1), ("telenet", 2), ("pss", 3), ("datanet", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500BRIX25ChanCfgX25NetworkType.setStatus('mandatory')
cdx6500BRIX25ChanCfgDNumSVCChannels = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 1, 26, 1, 2, 1, 1, 54), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500BRIX25ChanCfgDNumSVCChannels.setStatus('mandatory')
cdx6500BRIX25ChanCfgDWPktWindow = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 1, 26, 1, 2, 1, 1, 55), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 7))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500BRIX25ChanCfgDWPktWindow.setStatus('mandatory')
cdx6500BRIX25ChanCfgDPPktSize = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 1, 26, 1, 2, 1, 1, 56), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(6, 7, 8, 9))).clone(namedValues=NamedValues(("psize32", 6), ("psize64", 7), ("psize128", 8), ("psize256", 9)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500BRIX25ChanCfgDPPktSize.setStatus('mandatory')
cdx6500BRIX25ChanCfgDKFrameWindow = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 1, 26, 1, 2, 1, 1, 57), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 7))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500BRIX25ChanCfgDKFrameWindow.setStatus('mandatory')
cdx6500BRIX25ChanCfgDN2TransTries = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 1, 26, 1, 2, 1, 1, 58), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 254))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500BRIX25ChanCfgDN2TransTries.setStatus('mandatory')
cdx6500BRIX25ChanCfgT1Timer = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 1, 26, 1, 2, 1, 1, 59), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 16383))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500BRIX25ChanCfgT1Timer.setStatus('mandatory')
cdx6500BRIX25ChanCfgT2Timer = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 1, 26, 1, 2, 1, 1, 60), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 16383))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500BRIX25ChanCfgT2Timer.setStatus('mandatory')
cdx6500BRIX25ChanCfgLinkType = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 1, 26, 1, 2, 1, 1, 61), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("dChannel", 1), ("v24Dte", 2), ("v24Dce", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500BRIX25ChanCfgLinkType.setStatus('mandatory')
cdx6500BRIX25ChanCfgAddrTrans = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 1, 26, 1, 2, 1, 1, 62), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(3, 107))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500BRIX25ChanCfgAddrTrans.setStatus('mandatory')
cdx6500BRIStats = MibIdentifier((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 27))
cdx6500BRIPStatsTable = MibTable((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 27, 1), )
if mibBuilder.loadTexts: cdx6500BRIPStatsTable.setStatus('mandatory')
cdx6500BRIPStatsTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 27, 1, 1), ).setIndexNames((0, "BRI-OPT-MIB", "cdx6500BRIPStatPortNumber"))
if mibBuilder.loadTexts: cdx6500BRIPStatsTableEntry.setStatus('mandatory')
cdx6500BRIPStatPortNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 27, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500BRIPStatPortNumber.setStatus('mandatory')
cdx6500BRIPStatPortType = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 27, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(40))).clone(namedValues=NamedValues(("bri", 40)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500BRIPStatPortType.setStatus('mandatory')
cdx6500BRIPStatPortStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 27, 1, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(2, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500BRIPStatPortStatus.setStatus('mandatory')
cdx6500BRIPStatNumConfigChannels = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 27, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 3))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500BRIPStatNumConfigChannels.setStatus('mandatory')
cdx6500BRIPStatSwitchType = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 27, 1, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 23))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500BRIPStatSwitchType.setStatus('mandatory')
cdx6500BRIPStatTEI = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 27, 1, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500BRIPStatTEI.setStatus('mandatory')
cdx6500BRIPStatLastStatsReset = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 27, 1, 1, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500BRIPStatLastStatsReset.setStatus('mandatory')
cdx6500BRIPStatCharsInTot = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 27, 1, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500BRIPStatCharsInTot.setStatus('mandatory')
cdx6500BRIPStatCharsInPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 27, 1, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500BRIPStatCharsInPerSec.setStatus('mandatory')
cdx6500BRIPStatCharsOutTot = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 27, 1, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500BRIPStatCharsOutTot.setStatus('mandatory')
cdx6500BRIPStatCharsOutPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 27, 1, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500BRIPStatCharsOutPerSec.setStatus('mandatory')
cdx6500BRIPStatFramesInTot = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 27, 1, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500BRIPStatFramesInTot.setStatus('mandatory')
cdx6500BRIPStatFramesInPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 27, 1, 1, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500BRIPStatFramesInPerSec.setStatus('mandatory')
cdx6500BRIPStatFrameOutTot = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 27, 1, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500BRIPStatFrameOutTot.setStatus('mandatory')
cdx6500BRIPStatFrameOutPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 27, 1, 1, 15), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500BRIPStatFrameOutPerSec.setStatus('mandatory')
cdx6500BRIPStatAvFrameSzIn = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 27, 1, 1, 16), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500BRIPStatAvFrameSzIn.setStatus('mandatory')
cdx6500BRIPStatAvFrameSzOut = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 27, 1, 1, 17), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500BRIPStatAvFrameSzOut.setStatus('mandatory')
cdx6500BRIPStatPortUtilIn = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 27, 1, 1, 18), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500BRIPStatPortUtilIn.setStatus('mandatory')
cdx6500BRIPStatPortUtilOut = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 27, 1, 1, 19), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500BRIPStatPortUtilOut.setStatus('mandatory')
cdx6500BRIPStatPortUtilInMax = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 27, 1, 1, 20), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500BRIPStatPortUtilInMax.setStatus('mandatory')
cdx6500BRIPStatPortUtilOutMax = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 27, 1, 1, 21), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500BRIPStatPortUtilOutMax.setStatus('mandatory')
cdx6500BRIChanStatsTable = MibTable((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 27, 2), )
if mibBuilder.loadTexts: cdx6500BRIChanStatsTable.setStatus('mandatory')
cdx6500BRIChanStatsTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 27, 2, 1), ).setIndexNames((0, "BRI-OPT-MIB", "cdx6500BRICStatsPortNumber"), (0, "BRI-OPT-MIB", "cdx6500BRICStatsChannelNum"))
if mibBuilder.loadTexts: cdx6500BRIChanStatsTableEntry.setStatus('mandatory')
cdx6500BRICStatsPortNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 27, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500BRICStatsPortNumber.setStatus('mandatory')
cdx6500BRICStatsChannelNum = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 27, 2, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 3))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500BRICStatsChannelNum.setStatus('mandatory')
cdx6500BRICStatsChannelType = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 27, 2, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500BRICStatsChannelType.setStatus('mandatory')
cdx6500BRICStatsAccessType = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 27, 2, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500BRICStatsAccessType.setStatus('mandatory')
cdx6500BRICStatsProtocolType = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 27, 2, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500BRICStatsProtocolType.setStatus('mandatory')
cdx6500BRICStatsCallState = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 27, 2, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500BRICStatsCallState.setStatus('mandatory')
cdx6500BRICStatsChannelStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 27, 2, 1, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500BRICStatsChannelStatus.setStatus('mandatory')
cdx6500BRICStatsInCurCallAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 27, 2, 1, 8), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500BRICStatsInCurCallAddr.setStatus('mandatory')
cdx6500BRICStatsInCurCallSubAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 27, 2, 1, 9), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500BRICStatsInCurCallSubAddr.setStatus('mandatory')
cdx6500BRICStatsInAvConnTm = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 27, 2, 1, 10), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500BRICStatsInAvConnTm.setStatus('mandatory')
cdx6500BRICStatsInCurConnTm = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 27, 2, 1, 11), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500BRICStatsInCurConnTm.setStatus('mandatory')
cdx6500BRICStatsInMinConnTm = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 27, 2, 1, 12), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500BRICStatsInMinConnTm.setStatus('mandatory')
cdx6500BRICStatsInMaxConnTm = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 27, 2, 1, 13), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500BRICStatsInMaxConnTm.setStatus('mandatory')
cdx6500BRICStatsInNumSuccCalls = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 27, 2, 1, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500BRICStatsInNumSuccCalls.setStatus('mandatory')
cdx6500BRICStatsInNumFailCalls = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 27, 2, 1, 15), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500BRICStatsInNumFailCalls.setStatus('mandatory')
cdx6500BRICStatsOutCurCallAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 27, 2, 1, 16), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500BRICStatsOutCurCallAddr.setStatus('mandatory')
cdx6500BRICStatsOutCurCallSubAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 27, 2, 1, 17), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500BRICStatsOutCurCallSubAddr.setStatus('mandatory')
cdx6500BRICStatsOutAvConnTm = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 27, 2, 1, 18), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500BRICStatsOutAvConnTm.setStatus('mandatory')
cdx6500BRICStatsOutCurConnTm = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 27, 2, 1, 19), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500BRICStatsOutCurConnTm.setStatus('mandatory')
cdx6500BRICStatsOutMinConnTm = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 27, 2, 1, 20), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500BRICStatsOutMinConnTm.setStatus('mandatory')
cdx6500BRICStatsOutMaxConnTm = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 27, 2, 1, 21), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500BRICStatsOutMaxConnTm.setStatus('mandatory')
cdx6500BRICStatsOutNumSuccCalls = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 27, 2, 1, 22), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500BRICStatsOutNumSuccCalls.setStatus('mandatory')
cdx6500BRICStatsOutNumFailCalls = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 27, 2, 1, 23), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500BRICStatsOutNumFailCalls.setStatus('mandatory')
cdx6500BRICStatsMaxSVC = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 27, 2, 1, 24), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500BRICStatsMaxSVC.setStatus('mandatory')
cdx6500BRICStatsMaxPVC = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 27, 2, 1, 25), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500BRICStatsMaxPVC.setStatus('mandatory')
cdx6500BRICStatsCurSVC = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 27, 2, 1, 26), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500BRICStatsCurSVC.setStatus('mandatory')
cdx6500BRICStatsCurPVC = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 27, 2, 1, 27), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500BRICStatsCurPVC.setStatus('mandatory')
cdx6500BRICStatsLastRepReasonCodes = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 27, 2, 1, 28), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500BRICStatsLastRepReasonCodes.setStatus('mandatory')
cdx6500BRICStatsLastStatsReset = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 27, 2, 1, 29), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500BRICStatsLastStatsReset.setStatus('mandatory')
cdx6500BRICStatsCharsInTot = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 27, 2, 1, 30), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500BRICStatsCharsInTot.setStatus('mandatory')
cdx6500BRICStatsCharsOutTot = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 27, 2, 1, 31), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500BRICStatsCharsOutTot.setStatus('mandatory')
cdx6500BRICStatsCharsInPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 27, 2, 1, 32), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500BRICStatsCharsInPerSec.setStatus('mandatory')
cdx6500BRICStatsCharsOutPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 27, 2, 1, 33), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500BRICStatsCharsOutPerSec.setStatus('mandatory')
cdx6500BRICStatsPktsInTot = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 27, 2, 1, 34), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500BRICStatsPktsInTot.setStatus('mandatory')
cdx6500BRICStatsPktsOutTot = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 27, 2, 1, 35), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500BRICStatsPktsOutTot.setStatus('mandatory')
cdx6500BRICStatsPktsInPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 27, 2, 1, 36), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500BRICStatsPktsInPerSec.setStatus('mandatory')
cdx6500BRICStatsPktsOutPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 27, 2, 1, 37), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500BRICStatsPktsOutPerSec.setStatus('mandatory')
cdx6500BRICStatsFramesInTot = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 27, 2, 1, 38), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500BRICStatsFramesInTot.setStatus('mandatory')
cdx6500BRICStatsFramesOutTot = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 27, 2, 1, 39), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500BRICStatsFramesOutTot.setStatus('mandatory')
cdx6500BRICStatsFramesInPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 27, 2, 1, 40), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500BRICStatsFramesInPerSec.setStatus('mandatory')
cdx6500BRICStatsFramesOutPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 27, 2, 1, 41), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500BRICStatsFramesOutPerSec.setStatus('mandatory')
cdx6500BRICStatsInfoFramesIn = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 27, 2, 1, 42), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500BRICStatsInfoFramesIn.setStatus('mandatory')
cdx6500BRICStatsInfoFramesOut = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 27, 2, 1, 43), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500BRICStatsInfoFramesOut.setStatus('mandatory')
cdx6500BRICStatsRNRFramesIn = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 27, 2, 1, 44), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500BRICStatsRNRFramesIn.setStatus('mandatory')
cdx6500BRICStatsRNRFramesOut = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 27, 2, 1, 45), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500BRICStatsRNRFramesOut.setStatus('mandatory')
cdx6500BRICStatsSABMFramesIn = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 27, 2, 1, 46), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500BRICStatsSABMFramesIn.setStatus('mandatory')
cdx6500BRICStatsSABMFramesOut = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 27, 2, 1, 47), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500BRICStatsSABMFramesOut.setStatus('mandatory')
cdx6500BRICStatsDMFramesIn = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 27, 2, 1, 48), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500BRICStatsDMFramesIn.setStatus('mandatory')
cdx6500BRICStatsDMFramesOut = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 27, 2, 1, 49), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500BRICStatsDMFramesOut.setStatus('mandatory')
cdx6500BRICStatsRRFramesIn = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 27, 2, 1, 50), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500BRICStatsRRFramesIn.setStatus('mandatory')
cdx6500BRICStatsRRFramesOut = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 27, 2, 1, 51), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500BRICStatsRRFramesOut.setStatus('mandatory')
cdx6500BRICStatsREJFramesIn = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 27, 2, 1, 52), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500BRICStatsREJFramesIn.setStatus('mandatory')
cdx6500BRICStatsREJFramesOut = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 27, 2, 1, 53), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500BRICStatsREJFramesOut.setStatus('mandatory')
cdx6500BRICStatsDISCFramesIn = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 27, 2, 1, 54), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500BRICStatsDISCFramesIn.setStatus('mandatory')
cdx6500BRICStatsDISCFramesOut = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 27, 2, 1, 55), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500BRICStatsDISCFramesOut.setStatus('mandatory')
cdx6500BRICStatsUAFramesIn = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 27, 2, 1, 56), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500BRICStatsUAFramesIn.setStatus('mandatory')
cdx6500BRICStatsUAFramesOut = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 27, 2, 1, 57), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500BRICStatsUAFramesOut.setStatus('mandatory')
cdx6500BRICStatsFRMRFramesIn = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 27, 2, 1, 58), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500BRICStatsFRMRFramesIn.setStatus('mandatory')
cdx6500BRICStatsFRMRFramesOut = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 27, 2, 1, 59), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500BRICStatsFRMRFramesOut.setStatus('mandatory')
cdx6500BRICStatsDataPktsIn = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 27, 2, 1, 60), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500BRICStatsDataPktsIn.setStatus('mandatory')
cdx6500BRICStatsDataPktsOut = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 27, 2, 1, 61), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500BRICStatsDataPktsOut.setStatus('mandatory')
cdx6500BRICStatsRRPktsIn = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 27, 2, 1, 62), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500BRICStatsRRPktsIn.setStatus('mandatory')
cdx6500BRICStatsRRPktsOut = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 27, 2, 1, 63), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500BRICStatsRRPktsOut.setStatus('mandatory')
cdx6500BRICStatsRNRPktsIn = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 27, 2, 1, 64), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500BRICStatsRNRPktsIn.setStatus('mandatory')
cdx6500BRICStatsRNRPktsOut = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 27, 2, 1, 65), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500BRICStatsRNRPktsOut.setStatus('mandatory')
cdx6500BRICStatsRejPktsIn = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 27, 2, 1, 66), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500BRICStatsRejPktsIn.setStatus('mandatory')
cdx6500BRICStatsRejPktsOut = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 27, 2, 1, 67), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500BRICStatsRejPktsOut.setStatus('mandatory')
cdx6500BRICStatsCallReqPktsIn = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 27, 2, 1, 68), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500BRICStatsCallReqPktsIn.setStatus('mandatory')
cdx6500BRICStatsCallReqPktsOut = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 27, 2, 1, 69), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500BRICStatsCallReqPktsOut.setStatus('mandatory')
cdx6500BRICStatsCallAccPktsIn = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 27, 2, 1, 70), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500BRICStatsCallAccPktsIn.setStatus('mandatory')
cdx6500BRICStatsCallAccPktsOut = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 27, 2, 1, 71), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500BRICStatsCallAccPktsOut.setStatus('mandatory')
cdx6500BRICStatsClrReqPktsIn = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 27, 2, 1, 72), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500BRICStatsClrReqPktsIn.setStatus('mandatory')
cdx6500BRICStatsClrReqPktsOut = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 27, 2, 1, 73), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500BRICStatsClrReqPktsOut.setStatus('mandatory')
cdx6500BRICStatsClrConfPktsIn = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 27, 2, 1, 74), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500BRICStatsClrConfPktsIn.setStatus('mandatory')
cdx6500BRICStatsClrConfPktsOut = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 27, 2, 1, 75), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500BRICStatsClrConfPktsOut.setStatus('mandatory')
cdx6500BRICStatsIntReqPktsIn = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 27, 2, 1, 76), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500BRICStatsIntReqPktsIn.setStatus('mandatory')
cdx6500BRICStatsIntReqPktsOut = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 27, 2, 1, 77), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500BRICStatsIntReqPktsOut.setStatus('mandatory')
cdx6500BRICStatsIntConfPktsIn = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 27, 2, 1, 78), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500BRICStatsIntConfPktsIn.setStatus('mandatory')
cdx6500BRICStatsIntConfPktsOut = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 27, 2, 1, 79), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500BRICStatsIntConfPktsOut.setStatus('mandatory')
cdx6500BRICStatsRstReqPktsIn = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 27, 2, 1, 80), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500BRICStatsRstReqPktsIn.setStatus('mandatory')
cdx6500BRICStatsRstReqPktsOut = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 27, 2, 1, 81), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500BRICStatsRstReqPktsOut.setStatus('mandatory')
cdx6500BRICStatsRstConfPktsIn = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 27, 2, 1, 82), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500BRICStatsRstConfPktsIn.setStatus('mandatory')
cdx6500BRICStatsRstConfPktsOut = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 27, 2, 1, 83), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500BRICStatsRstConfPktsOut.setStatus('mandatory')
cdx6500BRICStatsRestartReqPktsIn = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 27, 2, 1, 84), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500BRICStatsRestartReqPktsIn.setStatus('mandatory')
cdx6500BRICStatsRestartReqPktsOut = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 27, 2, 1, 85), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500BRICStatsRestartReqPktsOut.setStatus('mandatory')
cdx6500BRICStatsRestartConfPktsIn = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 27, 2, 1, 86), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500BRICStatsRestartConfPktsIn.setStatus('mandatory')
cdx6500BRICStatsRestartConfPktsOut = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 27, 2, 1, 87), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500BRICStatsRestartConfPktsOut.setStatus('mandatory')
cdx6500BRICStatsTEI = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 27, 2, 1, 88), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500BRICStatsTEI.setStatus('mandatory')
cdx6500BRICStatsSAPI = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 27, 2, 1, 89), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500BRICStatsSAPI.setStatus('mandatory')
cdx6500BRICStatsNetworkType = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 27, 2, 1, 90), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500BRICStatsNetworkType.setStatus('mandatory')
mibBuilder.exportSymbols("BRI-OPT-MIB", cdx6500BRICStatsCallReqPktsOut=cdx6500BRICStatsCallReqPktsOut, cdx6500BRIPStatCharsInTot=cdx6500BRIPStatCharsInTot, cdx6500BRIX25ChanCfgBillingRecords=cdx6500BRIX25ChanCfgBillingRecords, cdx6500BRIX25ChanCfgDataQLowerThres=cdx6500BRIX25ChanCfgDataQLowerThres, cdx6500BRIX25ChanCfgReconnTimeout=cdx6500BRIX25ChanCfgReconnTimeout, cdx6500BRICStatsOutNumSuccCalls=cdx6500BRICStatsOutNumSuccCalls, cdx6500BRIX25ChanCfgStartPVCChanNum=cdx6500BRIX25ChanCfgStartPVCChanNum, cdx6500BRIX25ChanCfgSubAddrSize=cdx6500BRIX25ChanCfgSubAddrSize, cdx6500BRICStatsUAFramesIn=cdx6500BRICStatsUAFramesIn, cdx6500CfgProtocolGroup=cdx6500CfgProtocolGroup, cdx6500BRICStatsOutMaxConnTm=cdx6500BRICStatsOutMaxConnTm, cdx6500BRICStatsInCurCallAddr=cdx6500BRICStatsInCurCallAddr, cdx6500BRICStatsIntConfPktsOut=cdx6500BRICStatsIntConfPktsOut, cdx6500BRICStatsMaxSVC=cdx6500BRICStatsMaxSVC, cdx6500=cdx6500, cdx6500PPCTBRIChan=cdx6500PPCTBRIChan, cdx6500BRIX25ChanCfgCallSecurity=cdx6500BRIX25ChanCfgCallSecurity, cdx6500BRICStatsClrConfPktsIn=cdx6500BRICStatsClrConfPktsIn, cdx6500BRIPStatsTable=cdx6500BRIPStatsTable, cdx6500BRICStatsFRMRFramesIn=cdx6500BRICStatsFRMRFramesIn, cdx6500BRICStatsCharsOutTot=cdx6500BRICStatsCharsOutTot, cdx6500BRICStatsRstConfPktsIn=cdx6500BRICStatsRstConfPktsIn, cdx6500BRIX25ChanCfgProtocolType=cdx6500BRIX25ChanCfgProtocolType, cdx6500BRIX25ChanCfgProtectionLevel=cdx6500BRIX25ChanCfgProtectionLevel, cdx6500BRICStatsDISCFramesOut=cdx6500BRICStatsDISCFramesOut, cdx6500BRICfgSwitchType=cdx6500BRICfgSwitchType, cdx6500BRICStatsClrReqPktsIn=cdx6500BRICStatsClrReqPktsIn, cdx6500BRICStatsMaxPVC=cdx6500BRICStatsMaxPVC, cdx6500BRIX25ChanCfgLocalSubsSubAddr=cdx6500BRIX25ChanCfgLocalSubsSubAddr, cdx6500BRICStatsIntReqPktsIn=cdx6500BRICStatsIntReqPktsIn, cdx6500BRICStatsSABMFramesOut=cdx6500BRICStatsSABMFramesOut, cdx6500BRIX25ChanCfgT4PollTimer=cdx6500BRIX25ChanCfgT4PollTimer, cdx6500BRIX25ChanCfgBPPktSize=cdx6500BRIX25ChanCfgBPPktSize, cdx6500BRICfgVmebug=cdx6500BRICfgVmebug, cdx6500BRIPStatPortUtilOutMax=cdx6500BRIPStatPortUtilOutMax, cdx6500BRICStatsOutNumFailCalls=cdx6500BRICStatsOutNumFailCalls, cdx6500BRIX25ChanCfgDN2TransTries=cdx6500BRIX25ChanCfgDN2TransTries, cdx6500BRICStatsInfoFramesOut=cdx6500BRICStatsInfoFramesOut, cdx6500BRICStatsChannelNum=cdx6500BRICStatsChannelNum, cdx6500BRICStatsRNRFramesOut=cdx6500BRICStatsRNRFramesOut, cdx6500BRIPStatCharsOutPerSec=cdx6500BRIPStatCharsOutPerSec, cdx6500BRICStatsIntConfPktsIn=cdx6500BRICStatsIntConfPktsIn, cdx6500BRIX25ChanCfgAlarmPriority=cdx6500BRIX25ChanCfgAlarmPriority, cdx6500BRIX25ChanCfgX25NetworkType=cdx6500BRIX25ChanCfgX25NetworkType, cdx6500BRICStatsFRMRFramesOut=cdx6500BRICStatsFRMRFramesOut, cdx6500BRIX25ChanCfgTimeslot=cdx6500BRIX25ChanCfgTimeslot, cdx6500BRIX25ChanCfgMaxNegoPktSize=cdx6500BRIX25ChanCfgMaxNegoPktSize, cdx6500BRIX25ChanCfgFacToBarInInbCalls=cdx6500BRIX25ChanCfgFacToBarInInbCalls, cdx6500BRIX25ChanCfgCUGMembership=cdx6500BRIX25ChanCfgCUGMembership, cdx6500BRICStatsClrReqPktsOut=cdx6500BRICStatsClrReqPktsOut, cdx6500BRIX25ChanCfgStartSVCChanNum=cdx6500BRIX25ChanCfgStartSVCChanNum, cdx6500BRIX25ChanCfgNumPreAddrDgstrpOutgCalls=cdx6500BRIX25ChanCfgNumPreAddrDgstrpOutgCalls, cdx6500BRIChanStatsTable=cdx6500BRIChanStatsTable, cdx6500BRIX25ChanCfgInitialFrame=cdx6500BRIX25ChanCfgInitialFrame, cdx6500BRIX25ChanCfgResetTimer=cdx6500BRIX25ChanCfgResetTimer, cdx6500BRICStatsInNumSuccCalls=cdx6500BRICStatsInNumSuccCalls, cdx6500BRICStatsCurPVC=cdx6500BRICStatsCurPVC, cdx6500BRIX25ChanCfgBKFrameWindow=cdx6500BRIX25ChanCfgBKFrameWindow, cdx6500BRICStatsRejPktsOut=cdx6500BRICStatsRejPktsOut, cdx6500PPCTBRIX25ChanTable=cdx6500PPCTBRIX25ChanTable, cdx6500BRIX25ChanCfgSPID=cdx6500BRIX25ChanCfgSPID, cdx6500BRICStatsOutCurConnTm=cdx6500BRICStatsOutCurConnTm, cdx6500BRICStatsInAvConnTm=cdx6500BRICStatsInAvConnTm, cdx6500BRIX25ChanCfgPortAddress=cdx6500BRIX25ChanCfgPortAddress, cdx6500BRICStatsNetworkType=cdx6500BRICStatsNetworkType, cdx6500BRICStatsIntReqPktsOut=cdx6500BRICStatsIntReqPktsOut, cdxProductSpecific=cdxProductSpecific, cdx6500BRICStatsLastStatsReset=cdx6500BRICStatsLastStatsReset, cdx6500BRIX25ChanCfgDNumSVCChannels=cdx6500BRIX25ChanCfgDNumSVCChannels, cdx6500BRICStatsDataPktsIn=cdx6500BRICStatsDataPktsIn, cdx6500BRICStatsRRFramesIn=cdx6500BRICStatsRRFramesIn, cdx6500BRIStats=cdx6500BRIStats, cdx6500BRICStatsPortNumber=cdx6500BRICStatsPortNumber, cdx6500BRICStatsInMaxConnTm=cdx6500BRICStatsInMaxConnTm, cdx6500BRICStatsSAPI=cdx6500BRICStatsSAPI, cdx6500BRIX25ChanCfgFacToDelFromOutbCalls=cdx6500BRIX25ChanCfgFacToDelFromOutbCalls, cdx6500BRICStatsRNRPktsOut=cdx6500BRICStatsRNRPktsOut, cdx6500BRIX25ChanCfgDPPktSize=cdx6500BRIX25ChanCfgDPPktSize, cdx6500BRICStatsREJFramesOut=cdx6500BRICStatsREJFramesOut, cdx6500BRIX25ChanCfgT1TransRetryTimer=cdx6500BRIX25ChanCfgT1TransRetryTimer, cdx6500BRIX25ChanCfgCallTimer=cdx6500BRIX25ChanCfgCallTimer, cdx6500BRICStatsCurSVC=cdx6500BRICStatsCurSVC, cdx6500BRIPStatPortUtilIn=cdx6500BRIPStatPortUtilIn, cdx6500BRICStatsInfoFramesIn=cdx6500BRICStatsInfoFramesIn, cdx6500BRICStatsCallState=cdx6500BRICStatsCallState, cdx6500BRICStatsCharsOutPerSec=cdx6500BRICStatsCharsOutPerSec, cdx6500BRICStatsCharsInPerSec=cdx6500BRICStatsCharsInPerSec, cdx6500BRIX25ChanCfgClearTimer=cdx6500BRIX25ChanCfgClearTimer, cdx6500BRICStatsFramesInPerSec=cdx6500BRICStatsFramesInPerSec, cdx6500BRIX25ChanCfgPortNumber=cdx6500BRIX25ChanCfgPortNumber, cdx6500BRICStatsRestartReqPktsOut=cdx6500BRICStatsRestartReqPktsOut, cdx6500BRICStatsAccessType=cdx6500BRICStatsAccessType, cdx6500BRIPStatCharsOutTot=cdx6500BRIPStatCharsOutTot, cdx6500BRICStatsRestartReqPktsIn=cdx6500BRICStatsRestartReqPktsIn, cdx6500BRIX25ChanCfgLinkType=cdx6500BRIX25ChanCfgLinkType, cdx6500PSTPortProtocolGroup=cdx6500PSTPortProtocolGroup, DisplayString=DisplayString, cdx6500BRIPStatFramesInPerSec=cdx6500BRIPStatFramesInPerSec, cdx6500BRICfgPortType=cdx6500BRICfgPortType, cdx6500BRIX25ChanCfgReconnTriesLt=cdx6500BRIX25ChanCfgReconnTriesLt, cdx6500BRICStatsREJFramesIn=cdx6500BRICStatsREJFramesIn, cdx6500BRICStatsRRPktsOut=cdx6500BRICStatsRRPktsOut, cdx6500BRICStatsOutCurCallSubAddr=cdx6500BRICStatsOutCurCallSubAddr, cdx6500BRIX25ChanCfgFrameSeqCount=cdx6500BRIX25ChanCfgFrameSeqCount, cdx6500BRIX25ChanCfgDataQUpperThres=cdx6500BRIX25ChanCfgDataQUpperThres, cdx6500BRICStatsRRFramesOut=cdx6500BRICStatsRRFramesOut, cdx6500BRIPStatsTableEntry=cdx6500BRIPStatsTableEntry, cdx6500BRIX25ChanCfgX25Options=cdx6500BRIX25ChanCfgX25Options, cdx6500BRICStatsCallAccPktsIn=cdx6500BRICStatsCallAccPktsIn, cdx6500BRIX25ChanCfgPktSeqCount=cdx6500BRIX25ChanCfgPktSeqCount, cdx6500BRIX25ChanCfgRateAdaption=cdx6500BRIX25ChanCfgRateAdaption, cdx6500PCTPortProtocolGroup=cdx6500PCTPortProtocolGroup, cdx6500BRICStatsInMinConnTm=cdx6500BRICStatsInMinConnTm, cdx6500BRICStatsPktsOutTot=cdx6500BRICStatsPktsOutTot, cdx6500BRIX25ChanCfgAddrTrans=cdx6500BRIX25ChanCfgAddrTrans, cdx6500BRIX25ChanCfgFacSubsCtl=cdx6500BRIX25ChanCfgFacSubsCtl, cdx6500BRIPStatPortUtilInMax=cdx6500BRIPStatPortUtilInMax, cdx6500BRICStatsCallAccPktsOut=cdx6500BRICStatsCallAccPktsOut, cdx6500BRIPStatPortNumber=cdx6500BRIPStatPortNumber, cdx6500BRICStatsFramesOutTot=cdx6500BRICStatsFramesOutTot, cdx6500BRICStatsOutAvConnTm=cdx6500BRICStatsOutAvConnTm, cdx6500BRICStatsRNRFramesIn=cdx6500BRICStatsRNRFramesIn, cdx6500BRIPStatAvFrameSzIn=cdx6500BRIPStatAvFrameSzIn, cdx6500Statistics=cdx6500Statistics, cdx6500StatProtocolGroup=cdx6500StatProtocolGroup, cdx6500BRICStatsInCurConnTm=cdx6500BRICStatsInCurConnTm, cdx6500BRIX25ChanCfgRestartTimer=cdx6500BRIX25ChanCfgRestartTimer, cdx6500BRIX25ChanCfgBNumSVCChannels=cdx6500BRIX25ChanCfgBNumSVCChannels, cdx6500BRICfgTEI=cdx6500BRICfgTEI, cdx6500PPCTISDN=cdx6500PPCTISDN, cdx6500BRICStatsRNRPktsIn=cdx6500BRICStatsRNRPktsIn, cdx6500BRIPStatPortUtilOut=cdx6500BRIPStatPortUtilOut, cdx6500BRIPStatPortStatus=cdx6500BRIPStatPortStatus, cdx6500BRICStatsDMFramesIn=cdx6500BRICStatsDMFramesIn, cdx6500BRICStatsCharsInTot=cdx6500BRICStatsCharsInTot, cdx6500BRICStatsPktsInTot=cdx6500BRICStatsPktsInTot, cdx6500BRICStatsInCurCallSubAddr=cdx6500BRICStatsInCurCallSubAddr, cdx6500BRICStatsDISCFramesIn=cdx6500BRICStatsDISCFramesIn, cdx6500BRICStatsRestartConfPktsIn=cdx6500BRICStatsRestartConfPktsIn, cdx6500BRIPStatFrameOutTot=cdx6500BRIPStatFrameOutTot, cdx6500BRICStatsFramesInTot=cdx6500BRICStatsFramesInTot, cdx6500BRICfgPortNumber=cdx6500BRICfgPortNumber, cdx6500BRIPStatTEI=cdx6500BRIPStatTEI, cdx6500BRICStatsRRPktsIn=cdx6500BRICStatsRRPktsIn, cdx6500PPCTBRIPortTable=cdx6500PPCTBRIPortTable, cdx6500BRICStatsRstConfPktsOut=cdx6500BRICStatsRstConfPktsOut, cdx6500PPCTBRIConfig=cdx6500PPCTBRIConfig, cdx6500BRIX25ChanCfgAccessType=cdx6500BRIX25ChanCfgAccessType, cdx6500BRIPStatNumConfigChannels=cdx6500BRIPStatNumConfigChannels, cdx6500BRICStatsFramesOutPerSec=cdx6500BRICStatsFramesOutPerSec, cdx6500BRIX25ChanCfgDKFrameWindow=cdx6500BRIX25ChanCfgDKFrameWindow, cdx6500BRICStatsProtocolType=cdx6500BRICStatsProtocolType, cdx6500BRIChanStatsTableEntry=cdx6500BRIChanStatsTableEntry, cdx6500PPCTBRIPortEntry=cdx6500PPCTBRIPortEntry, cdx6500BRICStatsPktsOutPerSec=cdx6500BRICStatsPktsOutPerSec, cdx6500BRICStatsDMFramesOut=cdx6500BRICStatsDMFramesOut, cdx6500BRICStatsOutCurCallAddr=cdx6500BRICStatsOutCurCallAddr, cdx6500BRICStatsUAFramesOut=cdx6500BRICStatsUAFramesOut, cdx6500BRIX25ChanCfgDWPktWindow=cdx6500BRIX25ChanCfgDWPktWindow, cdx6500BRIX25ChanCfgBN2TransTries=cdx6500BRIX25ChanCfgBN2TransTries, cdx6500BRIPStatFramesInTot=cdx6500BRIPStatFramesInTot, cdx6500BRIX25ChanCfgLocalSubsAddr=cdx6500BRIX25ChanCfgLocalSubsAddr, cdx6500BRICStatsRejPktsIn=cdx6500BRICStatsRejPktsIn, cdx6500BRICStatsClrConfPktsOut=cdx6500BRICStatsClrConfPktsOut, cdx6500BRICStatsRstReqPktsIn=cdx6500BRICStatsRstReqPktsIn, cdx6500BRICStatsInNumFailCalls=cdx6500BRICStatsInNumFailCalls, cdx6500BRICStatsOutMinConnTm=cdx6500BRICStatsOutMinConnTm, cdx6500BRIX25ChanCfgT1Timer=cdx6500BRIX25ChanCfgT1Timer, cdx6500BRICStatsChannelType=cdx6500BRICStatsChannelType, cdx6500BRIX25ChanCfgFacToBarInOutbCalls=cdx6500BRIX25ChanCfgFacToBarInOutbCalls, cdx6500BRIX25ChanCfgNumPVCChannels=cdx6500BRIX25ChanCfgNumPVCChannels, cdx6500BRIPStatLastStatsReset=cdx6500BRIPStatLastStatsReset, cdx6500BRIX25ChanCfgInDigitsToStrip=cdx6500BRIX25ChanCfgInDigitsToStrip, cdx6500Configuration=cdx6500Configuration, cdx6500BRICStatsDataPktsOut=cdx6500BRICStatsDataPktsOut, cdx6500BRIX25ChanCfgNumRoutDgtInCallUsrData=cdx6500BRIX25ChanCfgNumRoutDgtInCallUsrData, cdx6500BRICStatsRestartConfPktsOut=cdx6500BRICStatsRestartConfPktsOut, codex=codex, cdx6500BRIX25ChanCfgChannelType=cdx6500BRIX25ChanCfgChannelType, cdx6500BRICStatsTEI=cdx6500BRICStatsTEI, cdx6500PPCTBRIX25ChanEntry=cdx6500PPCTBRIX25ChanEntry, cdx6500BRICStatsRstReqPktsOut=cdx6500BRICStatsRstReqPktsOut, cdx6500BRIX25ChanCfgT2Timer=cdx6500BRIX25ChanCfgT2Timer, cdx6500BRICStatsCallReqPktsIn=cdx6500BRICStatsCallReqPktsIn, cdx6500BRICStatsLastRepReasonCodes=cdx6500BRICStatsLastRepReasonCodes, cdx6500BRIPStatFrameOutPerSec=cdx6500BRIPStatFrameOutPerSec, cdx6500BRICStatsPktsInPerSec=cdx6500BRICStatsPktsInPerSec, cdx6500BRIX25ChanCfgChanTEI=cdx6500BRIX25ChanCfgChanTEI, cdx6500BRIX25ChanCfgBWPktWindow=cdx6500BRIX25ChanCfgBWPktWindow, cdx6500BRIX25ChanCfgLinkAddr=cdx6500BRIX25ChanCfgLinkAddr, cdx6500BRIPStatPortType=cdx6500BRIPStatPortType, cdx6500BRIPStatSwitchType=cdx6500BRIPStatSwitchType, cdx6500BRIX25ChanCfgISDNCallAcc=cdx6500BRIX25ChanCfgISDNCallAcc, cdx6500BRICStatsChannelStatus=cdx6500BRICStatsChannelStatus, cdx6500BRICStatsSABMFramesIn=cdx6500BRICStatsSABMFramesIn, cdx6500BRIPStatCharsInPerSec=cdx6500BRIPStatCharsInPerSec, cdx6500BRIX25ChanCfgFacToAddToOutbCalls=cdx6500BRIX25ChanCfgFacToAddToOutbCalls, cdx6500BRIX25ChanCfgRestrictedConnDest=cdx6500BRIX25ChanCfgRestrictedConnDest, cdx6500BRIPStatAvFrameSzOut=cdx6500BRIPStatAvFrameSzOut, cdx6500BRIX25ChanCfgChannelNum=cdx6500BRIX25ChanCfgChannelNum)
