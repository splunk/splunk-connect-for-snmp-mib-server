#
# PySNMP MIB module CISCO-DMN-DSG-MOIPINPUT-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CISCO-DMN-DSG-MOIPINPUT-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:37:44 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, SingleValueConstraint, ValueRangeConstraint, ValueSizeConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "SingleValueConstraint", "ValueRangeConstraint", "ValueSizeConstraint", "ConstraintsUnion")
ciscoDSGUtilities, = mibBuilder.importSymbols("CISCO-DMN-DSG-ROOT-MIB", "ciscoDSGUtilities")
ObjectGroup, NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "NotificationGroup", "ModuleCompliance")
Gauge32, Bits, Integer32, TimeTicks, MibIdentifier, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter64, NotificationType, Unsigned32, Counter32, IpAddress, ObjectIdentity, ModuleIdentity, iso = mibBuilder.importSymbols("SNMPv2-SMI", "Gauge32", "Bits", "Integer32", "TimeTicks", "MibIdentifier", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter64", "NotificationType", "Unsigned32", "Counter32", "IpAddress", "ObjectIdentity", "ModuleIdentity", "iso")
TextualConvention, DisplayString, RowStatus = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString", "RowStatus")
ciscoDSGMOIPInput = ModuleIdentity((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 41))
ciscoDSGMOIPInput.setRevisions(('2012-11-12 18:00',))
if mibBuilder.loadTexts: ciscoDSGMOIPInput.setLastUpdated('201211121800Z')
if mibBuilder.loadTexts: ciscoDSGMOIPInput.setOrganization('Cisco Systems, Inc.')
moipInputInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 41, 1))
moipInputTable = MibIdentifier((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 41, 2))
moipInputFlowIsMulticast = MibScalar((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 41, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("no", 1), ("yes", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: moipInputFlowIsMulticast.setStatus('current')
moipInputFlowMulticastDstIPV4 = MibScalar((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 41, 1, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: moipInputFlowMulticastDstIPV4.setStatus('current')
moipInputFlowFecMode = MibScalar((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 41, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("none", 1), ("oneD", 2), ("twoD", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: moipInputFlowFecMode.setStatus('current')
moipInputFlowSrcFilter = MibScalar((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 41, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("none", 1), ("whiteList", 2), ("blackList", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: moipInputFlowSrcFilter.setStatus('current')
moipInputFlowTsUDPPort = MibScalar((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 41, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65534))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: moipInputFlowTsUDPPort.setStatus('current')
moipInputFlowFec1UDPPort = MibScalar((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 41, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(2, 65534))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: moipInputFlowFec1UDPPort.setStatus('current')
moipInputFlowFec2UDPPort = MibScalar((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 41, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(2, 65534))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: moipInputFlowFec2UDPPort.setStatus('current')
moipInputFlowSrcStrmSel = MibScalar((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 41, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("swMap", 1), ("userCfg", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: moipInputFlowSrcStrmSel.setStatus('current')
moipInputDejitterAlgorithm = MibScalar((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 41, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("cbr", 1), ("vbr", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: moipInputDejitterAlgorithm.setStatus('current')
moipInputDejitterBufLatency = MibScalar((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 41, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: moipInputDejitterBufLatency.setStatus('current')
moipInputRednMode = MibScalar((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 41, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("bkpPriData1", 1), ("bkpPriData2", 2), ("manualData1", 3), ("manualData2", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: moipInputRednMode.setStatus('current')
moipInputRednDir = MibScalar((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 41, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("Revertive", 1), ("nonRevertive", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: moipInputRednDir.setStatus('current')
moipInputRednDelayDir = MibScalar((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 41, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 10000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: moipInputRednDelayDir.setStatus('current')
moipInputRednDelRev = MibScalar((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 41, 1, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 30))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: moipInputRednDelRev.setStatus('current')
moipInputRednPortInUse = MibScalar((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 41, 1, 15), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: moipInputRednPortInUse.setStatus('current')
moipInputRednSwReason = MibScalar((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 41, 1, 16), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: moipInputRednSwReason.setStatus('current')
moipInputRednSwDateTime = MibScalar((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 41, 1, 17), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: moipInputRednSwDateTime.setStatus('current')
moipInputData1SelIPV4 = MibScalar((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 41, 1, 18), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: moipInputData1SelIPV4.setStatus('current')
moipInputData2SelIPV4 = MibScalar((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 41, 1, 19), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: moipInputData2SelIPV4.setStatus('current')
moipInputSrcSelectTable = MibTable((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 41, 2, 1), )
if mibBuilder.loadTexts: moipInputSrcSelectTable.setStatus('current')
moipInputSrcSelectEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 41, 2, 1, 1), ).setIndexNames((0, "CISCO-DMN-DSG-MOIPINPUT-MIB", "moipInputSrcSelectIdx"))
if mibBuilder.loadTexts: moipInputSrcSelectEntry.setStatus('current')
moipInputSrcSelectIdx = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 41, 2, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: moipInputSrcSelectIdx.setStatus('current')
moipInputSrcSelectV4IPAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 41, 2, 1, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: moipInputSrcSelectV4IPAddr.setStatus('current')
moipInputSrcSelectData1Sel = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 41, 2, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("no", 1), ("yes", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: moipInputSrcSelectData1Sel.setStatus('current')
moipInputSrcSelectData2Sel = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 41, 2, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("no", 1), ("yes", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: moipInputSrcSelectData2Sel.setStatus('current')
moipInputSrcSelectData1Avail = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 41, 2, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("no", 1), ("yes", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: moipInputSrcSelectData1Avail.setStatus('current')
moipInputSrcSelectData2Avail = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 41, 2, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("no", 1), ("yes", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: moipInputSrcSelectData2Avail.setStatus('current')
moipInputSrcSelectData1Enabled = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 41, 2, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("no", 1), ("yes", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: moipInputSrcSelectData1Enabled.setStatus('current')
moipInputSrcSelectData2Enabled = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 41, 2, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("no", 1), ("yes", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: moipInputSrcSelectData2Enabled.setStatus('current')
moipInputSrcSelectRowEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 41, 2, 1, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("no", 1), ("yes", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: moipInputSrcSelectRowEnabled.setStatus('current')
moipInputSrcFilterTable = MibTable((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 41, 2, 2), )
if mibBuilder.loadTexts: moipInputSrcFilterTable.setStatus('current')
moipInputSrcFilterEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 41, 2, 2, 1), ).setIndexNames((0, "CISCO-DMN-DSG-MOIPINPUT-MIB", "moipInputSrcFilterIdx"))
if mibBuilder.loadTexts: moipInputSrcFilterEntry.setStatus('current')
moipInputSrcFilterIdx = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 41, 2, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: moipInputSrcFilterIdx.setStatus('current')
moipInputSrcFilterV4IPAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 41, 2, 2, 1, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: moipInputSrcFilterV4IPAddr.setStatus('current')
moipInputSrcFilterRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 41, 2, 2, 1, 3), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: moipInputSrcFilterRowStatus.setStatus('current')
moipInputFlowTable = MibTable((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 41, 2, 3), )
if mibBuilder.loadTexts: moipInputFlowTable.setStatus('current')
moipInputFlowEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 41, 2, 3, 1), ).setIndexNames((0, "CISCO-DMN-DSG-MOIPINPUT-MIB", "moipInputFlowID"))
if mibBuilder.loadTexts: moipInputFlowEntry.setStatus('current')
moipInputFlowID = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 41, 2, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: moipInputFlowID.setStatus('current')
moipInputFlowTsAct = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 41, 2, 3, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("no", 1), ("yes", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: moipInputFlowTsAct.setStatus('current')
moipInputFlowFecColStrmAct = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 41, 2, 3, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("no", 1), ("yes", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: moipInputFlowFecColStrmAct.setStatus('current')
moipInputFlowFecRowStrmAct = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 41, 2, 3, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("no", 1), ("yes", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: moipInputFlowFecRowStrmAct.setStatus('current')
mibBuilder.exportSymbols("CISCO-DMN-DSG-MOIPINPUT-MIB", moipInputFlowEntry=moipInputFlowEntry, moipInputFlowMulticastDstIPV4=moipInputFlowMulticastDstIPV4, moipInputSrcFilterIdx=moipInputSrcFilterIdx, moipInputSrcSelectData1Enabled=moipInputSrcSelectData1Enabled, moipInputDejitterAlgorithm=moipInputDejitterAlgorithm, moipInputFlowFecMode=moipInputFlowFecMode, moipInputFlowID=moipInputFlowID, moipInputFlowFecColStrmAct=moipInputFlowFecColStrmAct, moipInputRednDir=moipInputRednDir, moipInputRednMode=moipInputRednMode, moipInputRednDelayDir=moipInputRednDelayDir, moipInputDejitterBufLatency=moipInputDejitterBufLatency, moipInputRednSwDateTime=moipInputRednSwDateTime, moipInputRednDelRev=moipInputRednDelRev, moipInputData2SelIPV4=moipInputData2SelIPV4, moipInputFlowFec1UDPPort=moipInputFlowFec1UDPPort, moipInputSrcSelectData1Sel=moipInputSrcSelectData1Sel, moipInputFlowTsAct=moipInputFlowTsAct, moipInputFlowFec2UDPPort=moipInputFlowFec2UDPPort, moipInputSrcFilterV4IPAddr=moipInputSrcFilterV4IPAddr, moipInputSrcSelectData1Avail=moipInputSrcSelectData1Avail, moipInputSrcFilterRowStatus=moipInputSrcFilterRowStatus, moipInputData1SelIPV4=moipInputData1SelIPV4, moipInputFlowFecRowStrmAct=moipInputFlowFecRowStrmAct, moipInputFlowSrcFilter=moipInputFlowSrcFilter, moipInputRednSwReason=moipInputRednSwReason, moipInputFlowSrcStrmSel=moipInputFlowSrcStrmSel, PYSNMP_MODULE_ID=ciscoDSGMOIPInput, moipInputSrcSelectRowEnabled=moipInputSrcSelectRowEnabled, moipInputSrcSelectIdx=moipInputSrcSelectIdx, moipInputSrcSelectData2Sel=moipInputSrcSelectData2Sel, moipInputSrcFilterEntry=moipInputSrcFilterEntry, moipInputFlowTable=moipInputFlowTable, moipInputSrcSelectData2Enabled=moipInputSrcSelectData2Enabled, moipInputSrcSelectData2Avail=moipInputSrcSelectData2Avail, moipInputFlowIsMulticast=moipInputFlowIsMulticast, ciscoDSGMOIPInput=ciscoDSGMOIPInput, moipInputSrcSelectEntry=moipInputSrcSelectEntry, moipInputFlowTsUDPPort=moipInputFlowTsUDPPort, moipInputInfo=moipInputInfo, moipInputRednPortInUse=moipInputRednPortInUse, moipInputSrcSelectV4IPAddr=moipInputSrcSelectV4IPAddr, moipInputSrcFilterTable=moipInputSrcFilterTable, moipInputSrcSelectTable=moipInputSrcSelectTable, moipInputTable=moipInputTable)
