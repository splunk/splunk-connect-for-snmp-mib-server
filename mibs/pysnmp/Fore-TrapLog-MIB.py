#
# PySNMP MIB module Fore-TrapLog-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/Fore-TrapLog-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:03:13 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ValueSizeConstraint, ConstraintsIntersection, ValueRangeConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ValueSizeConstraint", "ConstraintsIntersection", "ValueRangeConstraint", "ConstraintsUnion")
snmpTrapLog, TrapNumber = mibBuilder.importSymbols("Fore-Common-MIB", "snmpTrapLog", "TrapNumber")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
TimeTicks, Gauge32, Bits, IpAddress, NotificationType, MibIdentifier, iso, Counter64, ModuleIdentity, Counter32, Unsigned32, ObjectIdentity, Integer32, MibScalar, MibTable, MibTableRow, MibTableColumn = mibBuilder.importSymbols("SNMPv2-SMI", "TimeTicks", "Gauge32", "Bits", "IpAddress", "NotificationType", "MibIdentifier", "iso", "Counter64", "ModuleIdentity", "Counter32", "Unsigned32", "ObjectIdentity", "Integer32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn")
TimeStamp, DisplayString, TextualConvention, TimeInterval = mibBuilder.importSymbols("SNMPv2-TC", "TimeStamp", "DisplayString", "TextualConvention", "TimeInterval")
foreTrapLogModule = ModuleIdentity((1, 3, 6, 1, 4, 1, 326, 1, 9, 1))
if mibBuilder.loadTexts: foreTrapLogModule.setLastUpdated('9610010000Z')
if mibBuilder.loadTexts: foreTrapLogModule.setOrganization('FORE')
trapLogTable = MibTable((1, 3, 6, 1, 4, 1, 326, 1, 9, 2), )
if mibBuilder.loadTexts: trapLogTable.setStatus('current')
trapLogEntry = MibTableRow((1, 3, 6, 1, 4, 1, 326, 1, 9, 2, 1), ).setIndexNames((0, "Fore-TrapLog-MIB", "trapLogIndex"))
if mibBuilder.loadTexts: trapLogEntry.setStatus('current')
trapLogIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 326, 1, 9, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trapLogIndex.setStatus('current')
trapLogEnterprise = MibTableColumn((1, 3, 6, 1, 4, 1, 326, 1, 9, 2, 1, 2), ObjectIdentifier()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trapLogEnterprise.setStatus('current')
trapLogGenericId = MibTableColumn((1, 3, 6, 1, 4, 1, 326, 1, 9, 2, 1, 3), TrapNumber()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trapLogGenericId.setStatus('current')
trapLogId = MibTableColumn((1, 3, 6, 1, 4, 1, 326, 1, 9, 2, 1, 4), TrapNumber()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trapLogId.setStatus('current')
trapLogXmits = MibTableColumn((1, 3, 6, 1, 4, 1, 326, 1, 9, 2, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trapLogXmits.setStatus('current')
trapLogLastXmit = MibTableColumn((1, 3, 6, 1, 4, 1, 326, 1, 9, 2, 1, 6), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trapLogLastXmit.setStatus('current')
trapLogEvents = MibTableColumn((1, 3, 6, 1, 4, 1, 326, 1, 9, 2, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trapLogEvents.setStatus('current')
trapLogLastEvent = MibTableColumn((1, 3, 6, 1, 4, 1, 326, 1, 9, 2, 1, 8), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trapLogLastEvent.setStatus('current')
trapLogVarTable = MibTable((1, 3, 6, 1, 4, 1, 326, 1, 9, 3), )
if mibBuilder.loadTexts: trapLogVarTable.setStatus('current')
trapLogVarEntry = MibTableRow((1, 3, 6, 1, 4, 1, 326, 1, 9, 3, 1), ).setIndexNames((0, "Fore-TrapLog-MIB", "trapLogIndex"), (0, "Fore-TrapLog-MIB", "trapLogVarIndex"))
if mibBuilder.loadTexts: trapLogVarEntry.setStatus('current')
trapLogVarIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 326, 1, 9, 3, 1, 1), Integer32())
if mibBuilder.loadTexts: trapLogVarIndex.setStatus('current')
trapLogVarOID = MibTableColumn((1, 3, 6, 1, 4, 1, 326, 1, 9, 3, 1, 2), ObjectIdentifier()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trapLogVarOID.setStatus('current')
trapLogVarValue = MibTableColumn((1, 3, 6, 1, 4, 1, 326, 1, 9, 3, 1, 3), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trapLogVarValue.setStatus('current')
trapThresholdTable = MibTable((1, 3, 6, 1, 4, 1, 326, 1, 9, 4), )
if mibBuilder.loadTexts: trapThresholdTable.setStatus('current')
trapThresholdEntry = MibTableRow((1, 3, 6, 1, 4, 1, 326, 1, 9, 4, 1), ).setIndexNames((0, "Fore-TrapLog-MIB", "trapThresholdTrapEnterprise"), (0, "Fore-TrapLog-MIB", "trapThresholdGenericTrapId"), (0, "Fore-TrapLog-MIB", "trapThresholdTrapId"))
if mibBuilder.loadTexts: trapThresholdEntry.setStatus('current')
trapThresholdTrapEnterprise = MibTableColumn((1, 3, 6, 1, 4, 1, 326, 1, 9, 4, 1, 1), ObjectIdentifier())
if mibBuilder.loadTexts: trapThresholdTrapEnterprise.setStatus('current')
trapThresholdGenericTrapId = MibTableColumn((1, 3, 6, 1, 4, 1, 326, 1, 9, 4, 1, 2), TrapNumber())
if mibBuilder.loadTexts: trapThresholdGenericTrapId.setStatus('current')
trapThresholdTrapId = MibTableColumn((1, 3, 6, 1, 4, 1, 326, 1, 9, 4, 1, 3), TrapNumber())
if mibBuilder.loadTexts: trapThresholdTrapId.setStatus('current')
trapThresholdValue = MibTableColumn((1, 3, 6, 1, 4, 1, 326, 1, 9, 4, 1, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: trapThresholdValue.setStatus('current')
trapThresholdTimePeriod = MibTableColumn((1, 3, 6, 1, 4, 1, 326, 1, 9, 4, 1, 5), TimeInterval()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: trapThresholdTimePeriod.setStatus('current')
trapThresholdTableReset = MibScalar((1, 3, 6, 1, 4, 1, 326, 1, 9, 4, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: trapThresholdTableReset.setStatus('current')
mibBuilder.exportSymbols("Fore-TrapLog-MIB", trapLogVarValue=trapLogVarValue, trapLogLastXmit=trapLogLastXmit, trapThresholdTrapEnterprise=trapThresholdTrapEnterprise, trapThresholdTimePeriod=trapThresholdTimePeriod, trapThresholdTable=trapThresholdTable, trapLogVarOID=trapLogVarOID, trapLogGenericId=trapLogGenericId, trapThresholdValue=trapThresholdValue, trapLogEvents=trapLogEvents, trapLogXmits=trapLogXmits, PYSNMP_MODULE_ID=foreTrapLogModule, trapLogEnterprise=trapLogEnterprise, trapLogLastEvent=trapLogLastEvent, trapThresholdGenericTrapId=trapThresholdGenericTrapId, trapLogVarIndex=trapLogVarIndex, trapThresholdEntry=trapThresholdEntry, foreTrapLogModule=foreTrapLogModule, trapLogId=trapLogId, trapThresholdTableReset=trapThresholdTableReset, trapThresholdTrapId=trapThresholdTrapId, trapLogTable=trapLogTable, trapLogIndex=trapLogIndex, trapLogVarTable=trapLogVarTable, trapLogEntry=trapLogEntry, trapLogVarEntry=trapLogVarEntry)
