#
# PySNMP MIB module CISCO-IMA-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CISCO-IMA-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:44:35 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ConstraintsUnion, ConstraintsIntersection, ValueSizeConstraint, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ConstraintsUnion", "ConstraintsIntersection", "ValueSizeConstraint", "ValueRangeConstraint")
ciscoMgmt, = mibBuilder.importSymbols("CISCO-SMI", "ciscoMgmt")
entPhysicalIndex, = mibBuilder.importSymbols("ENTITY-MIB", "entPhysicalIndex")
imaLinkEntry, imaGroupIndex, imaLinkIfIndex, imaGroupEntry, MilliSeconds = mibBuilder.importSymbols("IMA-MIB", "imaLinkEntry", "imaGroupIndex", "imaLinkIfIndex", "imaGroupEntry", "MilliSeconds")
NotificationGroup, ModuleCompliance, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance", "ObjectGroup")
MibScalar, MibTable, MibTableRow, MibTableColumn, Gauge32, Counter32, NotificationType, TimeTicks, MibIdentifier, Integer32, iso, Bits, Counter64, IpAddress, ObjectIdentity, Unsigned32, ModuleIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Gauge32", "Counter32", "NotificationType", "TimeTicks", "MibIdentifier", "Integer32", "iso", "Bits", "Counter64", "IpAddress", "ObjectIdentity", "Unsigned32", "ModuleIdentity")
DisplayString, TextualConvention, TruthValue = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention", "TruthValue")
ciscoImaMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 9, 9, 235))
ciscoImaMIB.setRevisions(('2003-03-26 00:00', '2002-05-02 00:00',))
if mibBuilder.loadTexts: ciscoImaMIB.setLastUpdated('200303260000Z')
if mibBuilder.loadTexts: ciscoImaMIB.setOrganization('Cisco Systems, Inc.')
ciscoImaMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 235, 1))
class CiscoImaGrpAlarmType(TextualConvention, Integer32):
    reference = 'ATM Forum IMA v1.1, Section 12.2.3 on page 79'
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))
    namedValues = NamedValues(("cimaAlarmGroupStartupFe", 1), ("cimaAlarmGroupCfgAbort", 2), ("cimaAlarmGroupCfgAbortFe", 3), ("cimaAlarmGroupInsuffLinks", 4), ("cimaAlarmGroupInsuffLinksFe", 5), ("cimaAlarmGroupBlockedFe", 6), ("cimaAlarmGroupTimingSynch", 7))

class CiscoImaLinkAlarmType(TextualConvention, Integer32):
    reference = 'ATM Forum IMA v1.1, Section 12.2.3 on page 79'
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9))
    namedValues = NamedValues(("cimaAlarmLinkLif", 1), ("cimaAlarmLinkLods", 2), ("cimaAlarmLinkRfi", 3), ("cimaAlarmLinkTxMisConnect", 4), ("cimaAlarmLinkRxMisConnect", 5), ("cimaAlarmLinkTxFault", 6), ("cimaAlarmLinkRxFault", 7), ("cimaAlarmLinkTxUnusableFe", 8), ("cimaAlarmLinkRxUnusableFe", 9))

cimaGrpAlarmType = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 235, 1, 1), CiscoImaGrpAlarmType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cimaGrpAlarmType.setStatus('deprecated')
cimaLinkAlarmType = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 235, 1, 2), CiscoImaLinkAlarmType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cimaLinkAlarmType.setStatus('deprecated')
cimaGroupTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 235, 1, 3), )
if mibBuilder.loadTexts: cimaGroupTable.setStatus('current')
cimaGroupEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 235, 1, 3, 1), )
imaGroupEntry.registerAugmentions(("CISCO-IMA-MIB", "cimaGroupEntry"))
cimaGroupEntry.setIndexNames(*imaGroupEntry.getIndexNames())
if mibBuilder.loadTexts: cimaGroupEntry.setStatus('current')
cimaGroupAccumulatedDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 235, 1, 3, 1, 1), MilliSeconds()).setUnits('millisecond').setMaxAccess("readonly")
if mibBuilder.loadTexts: cimaGroupAccumulatedDelay.setStatus('current')
cimaGroupClearAccDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 235, 1, 3, 1, 2), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cimaGroupClearAccDelay.setStatus('current')
cimaStuffAndCellIndication = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 235, 1, 3, 1, 3), Bits().clone(namedValues=NamedValues(("lsibit0", 0), ("lsibit1", 1), ("lsibit2", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cimaStuffAndCellIndication.setStatus('current')
cimaGrpIntegrationUpTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 235, 1, 3, 1, 4), MilliSeconds().subtype(subtypeSpec=ValueRangeConstraint(0, 400000)).clone(10000)).setUnits('millisecond').setMaxAccess("readcreate")
if mibBuilder.loadTexts: cimaGrpIntegrationUpTime.setStatus('current')
cimaGrpIntegrationDownTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 235, 1, 3, 1, 5), MilliSeconds().subtype(subtypeSpec=ValueRangeConstraint(0, 100000)).clone(2500)).setUnits('millisecond').setMaxAccess("readcreate")
if mibBuilder.loadTexts: cimaGrpIntegrationDownTime.setStatus('current')
cimaGrpNumTxIcpCells = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 235, 1, 3, 1, 6), Counter32()).setUnits('cells').setMaxAccess("readonly")
if mibBuilder.loadTexts: cimaGrpNumTxIcpCells.setStatus('current')
cimaGrpNumRxIcpCells = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 235, 1, 3, 1, 7), Counter32()).setUnits('cells').setMaxAccess("readonly")
if mibBuilder.loadTexts: cimaGrpNumRxIcpCells.setStatus('current')
cimaGrpNumRxErrIcpCells = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 235, 1, 3, 1, 8), Counter32()).setUnits('cells').setMaxAccess("readonly")
if mibBuilder.loadTexts: cimaGrpNumRxErrIcpCells.setStatus('current')
cimaGrpNumRxInvalidIcpCells = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 235, 1, 3, 1, 9), Counter32()).setUnits('cells').setMaxAccess("readonly")
if mibBuilder.loadTexts: cimaGrpNumRxInvalidIcpCells.setStatus('current')
cimaGrpNumRxMissingIcpCells = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 235, 1, 3, 1, 10), Counter32()).setUnits('cells').setMaxAccess("readonly")
if mibBuilder.loadTexts: cimaGrpNumRxMissingIcpCells.setStatus('current')
cimaGrpNumTxMissingIcpCells = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 235, 1, 3, 1, 11), Counter32()).setUnits('cells').setMaxAccess("readonly")
if mibBuilder.loadTexts: cimaGrpNumTxMissingIcpCells.setStatus('current')
cimaGrpRestarting = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 235, 1, 3, 1, 12), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cimaGrpRestarting.setStatus('current')
cimaGrpNeVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 235, 1, 3, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("others", 1), ("version10", 2), ("version11", 3))).clone('version10')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cimaGrpNeVersion.setStatus('current')
cimaGrpMaxCellRate = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 235, 1, 3, 1, 14), Gauge32()).setUnits('cells per second').setMaxAccess("readonly")
if mibBuilder.loadTexts: cimaGrpMaxCellRate.setStatus('current')
cimaGrpVerFallbackEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 235, 1, 3, 1, 15), TruthValue().clone('true')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cimaGrpVerFallbackEnable.setStatus('current')
cimaGrpAutoRestartMode = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 235, 1, 3, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("disable", 1), ("relearn", 2), ("reuse", 3))).clone('reuse')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cimaGrpAutoRestartMode.setStatus('current')
cimaGrpRxImaIdExpected = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 235, 1, 3, 1, 17), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 255)).clone(-1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cimaGrpRxImaIdExpected.setStatus('current')
cimaGrpAutoRestartSyncState = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 235, 1, 3, 1, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("disable", 1), ("inProgress", 2), ("loopbackSync", 3), ("tempSync", 4), ("feSync", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cimaGrpAutoRestartSyncState.setStatus('current')
cimaLinkMappingTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 235, 1, 4), )
if mibBuilder.loadTexts: cimaLinkMappingTable.setStatus('current')
cimaLinkMappingEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 235, 1, 4, 1), ).setIndexNames((0, "IMA-MIB", "imaGroupIndex"), (0, "IMA-MIB", "imaLinkIfIndex"))
if mibBuilder.loadTexts: cimaLinkMappingEntry.setStatus('current')
cimaLinkState = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 235, 1, 4, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("active", 1), ("nonactive", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cimaLinkState.setStatus('current')
cimaLinkTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 235, 1, 5), )
if mibBuilder.loadTexts: cimaLinkTable.setStatus('current')
cimaLinkEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 235, 1, 5, 1), )
imaLinkEntry.registerAugmentions(("CISCO-IMA-MIB", "cimaLinkEntry"))
cimaLinkEntry.setIndexNames(*imaLinkEntry.getIndexNames())
if mibBuilder.loadTexts: cimaLinkEntry.setStatus('current')
cimaLinkLifIntUpTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 235, 1, 5, 1, 1), MilliSeconds().subtype(subtypeSpec=ValueRangeConstraint(0, 25000)).clone(2500)).setUnits('millisecond').setMaxAccess("readcreate")
if mibBuilder.loadTexts: cimaLinkLifIntUpTime.setStatus('current')
cimaLinkLifIntDownTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 235, 1, 5, 1, 2), MilliSeconds().subtype(subtypeSpec=ValueRangeConstraint(0, 25000)).clone(10000)).setUnits('millisecond').setMaxAccess("readcreate")
if mibBuilder.loadTexts: cimaLinkLifIntDownTime.setStatus('current')
cimaLinkLodsIntUpTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 235, 1, 5, 1, 3), MilliSeconds().subtype(subtypeSpec=ValueRangeConstraint(0, 25000)).clone(2500)).setUnits('millisecond').setMaxAccess("readcreate")
if mibBuilder.loadTexts: cimaLinkLodsIntUpTime.setStatus('current')
cimaLinkLodsIntDownTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 235, 1, 5, 1, 4), MilliSeconds().subtype(subtypeSpec=ValueRangeConstraint(0, 25000)).clone(10000)).setUnits('millisecond').setMaxAccess("readcreate")
if mibBuilder.loadTexts: cimaLinkLodsIntDownTime.setStatus('current')
cimaLinkNumTxIcpCells = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 235, 1, 5, 1, 5), Counter32()).setUnits('cells').setMaxAccess("readonly")
if mibBuilder.loadTexts: cimaLinkNumTxIcpCells.setStatus('current')
cimaLinkNumRxIcpCells = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 235, 1, 5, 1, 6), Counter32()).setUnits('cells').setMaxAccess("readonly")
if mibBuilder.loadTexts: cimaLinkNumRxIcpCells.setStatus('current')
cimaLinkNumRxErrIcpCells = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 235, 1, 5, 1, 7), Counter32()).setUnits('cells').setMaxAccess("readonly")
if mibBuilder.loadTexts: cimaLinkNumRxErrIcpCells.setStatus('current')
cimaLinkNumRxInvalidIcpCells = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 235, 1, 5, 1, 8), Counter32()).setUnits('cells').setMaxAccess("readonly")
if mibBuilder.loadTexts: cimaLinkNumRxInvalidIcpCells.setStatus('current')
cimaLinkNumRxMissingIcpCells = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 235, 1, 5, 1, 9), Counter32()).setUnits('cells').setMaxAccess("readonly")
if mibBuilder.loadTexts: cimaLinkNumRxMissingIcpCells.setStatus('current')
cimaLinkNumTxMissingIcpCells = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 235, 1, 5, 1, 10), Counter32()).setUnits('cells').setMaxAccess("readonly")
if mibBuilder.loadTexts: cimaLinkNumTxMissingIcpCells.setStatus('current')
cimaFeatureTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 235, 1, 6), )
if mibBuilder.loadTexts: cimaFeatureTable.setStatus('current')
cimaFeatureEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 235, 1, 6, 1), ).setIndexNames((0, "ENTITY-MIB", "entPhysicalIndex"))
if mibBuilder.loadTexts: cimaFeatureEntry.setStatus('current')
cimaMaxImaGroupsSupported = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 235, 1, 6, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cimaMaxImaGroupsSupported.setStatus('current')
cimaConfiguredImaGroups = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 235, 1, 6, 1, 2), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cimaConfiguredImaGroups.setStatus('current')
cimaMinGrpTxImaId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 235, 1, 6, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cimaMinGrpTxImaId.setStatus('current')
cimaMaxGrpTxImaId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 235, 1, 6, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255)).clone(255)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cimaMaxGrpTxImaId.setStatus('current')
cimaVerFallbackEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 235, 1, 6, 1, 5), TruthValue().clone('true')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cimaVerFallbackEnable.setStatus('current')
cimaAutoRestartEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 235, 1, 6, 1, 6), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cimaAutoRestartEnable.setStatus('current')
ciscoImaMIBConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 235, 2))
ciscoImaMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 235, 2, 1))
ciscoImaMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 235, 2, 2))
ciscoImaMIBCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 235, 2, 1, 1)).setObjects(("CISCO-IMA-MIB", "ciscoImaGroupGroup"), ("CISCO-IMA-MIB", "ciscoImaLinkGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoImaMIBCompliance = ciscoImaMIBCompliance.setStatus('deprecated')
ciscoImaMIBCompliance1 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 235, 2, 1, 2)).setObjects(("CISCO-IMA-MIB", "ciscoImaGroupGroup"), ("CISCO-IMA-MIB", "ciscoImaLinkGroup"), ("CISCO-IMA-MIB", "ciscoImaLinkMappingGroup"), ("CISCO-IMA-MIB", "ciscoImaFeatureGroup"), ("CISCO-IMA-MIB", "ciscoImaAutoRestartGroup"), ("CISCO-IMA-MIB", "ciscoImaVerFallbackSupportGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoImaMIBCompliance1 = ciscoImaMIBCompliance1.setStatus('current')
ciscoImaGroupGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 235, 2, 2, 1)).setObjects(("CISCO-IMA-MIB", "cimaGroupAccumulatedDelay"), ("CISCO-IMA-MIB", "cimaGroupClearAccDelay"), ("CISCO-IMA-MIB", "cimaStuffAndCellIndication"), ("CISCO-IMA-MIB", "cimaGrpIntegrationUpTime"), ("CISCO-IMA-MIB", "cimaGrpIntegrationDownTime"), ("CISCO-IMA-MIB", "cimaGrpNumTxIcpCells"), ("CISCO-IMA-MIB", "cimaGrpNumRxIcpCells"), ("CISCO-IMA-MIB", "cimaGrpNumRxErrIcpCells"), ("CISCO-IMA-MIB", "cimaGrpNumRxInvalidIcpCells"), ("CISCO-IMA-MIB", "cimaGrpNumRxMissingIcpCells"), ("CISCO-IMA-MIB", "cimaGrpNumTxMissingIcpCells"), ("CISCO-IMA-MIB", "cimaGrpRestarting"), ("CISCO-IMA-MIB", "cimaGrpNeVersion"), ("CISCO-IMA-MIB", "cimaGrpMaxCellRate"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoImaGroupGroup = ciscoImaGroupGroup.setStatus('current')
ciscoImaLinkGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 235, 2, 2, 2)).setObjects(("CISCO-IMA-MIB", "cimaLinkLifIntUpTime"), ("CISCO-IMA-MIB", "cimaLinkLodsIntUpTime"), ("CISCO-IMA-MIB", "cimaLinkLifIntDownTime"), ("CISCO-IMA-MIB", "cimaLinkLodsIntDownTime"), ("CISCO-IMA-MIB", "cimaLinkNumTxIcpCells"), ("CISCO-IMA-MIB", "cimaLinkNumRxIcpCells"), ("CISCO-IMA-MIB", "cimaLinkNumRxErrIcpCells"), ("CISCO-IMA-MIB", "cimaLinkNumRxInvalidIcpCells"), ("CISCO-IMA-MIB", "cimaLinkNumRxMissingIcpCells"), ("CISCO-IMA-MIB", "cimaLinkNumTxMissingIcpCells"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoImaLinkGroup = ciscoImaLinkGroup.setStatus('current')
ciscoImaLinkMappingGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 235, 2, 2, 3)).setObjects(("CISCO-IMA-MIB", "cimaLinkState"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoImaLinkMappingGroup = ciscoImaLinkMappingGroup.setStatus('current')
ciscoImaAlarmGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 235, 2, 2, 4)).setObjects(("CISCO-IMA-MIB", "cimaGrpAlarmType"), ("CISCO-IMA-MIB", "cimaLinkAlarmType"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoImaAlarmGroup = ciscoImaAlarmGroup.setStatus('deprecated')
ciscoImaFeatureGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 235, 2, 2, 5)).setObjects(("CISCO-IMA-MIB", "cimaMaxImaGroupsSupported"), ("CISCO-IMA-MIB", "cimaConfiguredImaGroups"), ("CISCO-IMA-MIB", "cimaMinGrpTxImaId"), ("CISCO-IMA-MIB", "cimaMaxGrpTxImaId"), ("CISCO-IMA-MIB", "cimaVerFallbackEnable"), ("CISCO-IMA-MIB", "cimaAutoRestartEnable"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoImaFeatureGroup = ciscoImaFeatureGroup.setStatus('current')
ciscoImaAutoRestartGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 235, 2, 2, 6)).setObjects(("CISCO-IMA-MIB", "cimaGrpAutoRestartMode"), ("CISCO-IMA-MIB", "cimaGrpRxImaIdExpected"), ("CISCO-IMA-MIB", "cimaGrpAutoRestartSyncState"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoImaAutoRestartGroup = ciscoImaAutoRestartGroup.setStatus('current')
ciscoImaVerFallbackSupportGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 235, 2, 2, 7)).setObjects(("CISCO-IMA-MIB", "cimaGrpVerFallbackEnable"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoImaVerFallbackSupportGroup = ciscoImaVerFallbackSupportGroup.setStatus('current')
mibBuilder.exportSymbols("CISCO-IMA-MIB", cimaGrpIntegrationDownTime=cimaGrpIntegrationDownTime, cimaFeatureTable=cimaFeatureTable, CiscoImaGrpAlarmType=CiscoImaGrpAlarmType, cimaMaxImaGroupsSupported=cimaMaxImaGroupsSupported, cimaMinGrpTxImaId=cimaMinGrpTxImaId, cimaVerFallbackEnable=cimaVerFallbackEnable, cimaLinkNumRxInvalidIcpCells=cimaLinkNumRxInvalidIcpCells, cimaGrpMaxCellRate=cimaGrpMaxCellRate, ciscoImaMIB=ciscoImaMIB, cimaGrpNumTxIcpCells=cimaGrpNumTxIcpCells, cimaAutoRestartEnable=cimaAutoRestartEnable, cimaGroupAccumulatedDelay=cimaGroupAccumulatedDelay, cimaGrpRestarting=cimaGrpRestarting, ciscoImaAutoRestartGroup=ciscoImaAutoRestartGroup, cimaGrpVerFallbackEnable=cimaGrpVerFallbackEnable, ciscoImaMIBGroups=ciscoImaMIBGroups, cimaGrpAlarmType=cimaGrpAlarmType, ciscoImaMIBObjects=ciscoImaMIBObjects, cimaGrpIntegrationUpTime=cimaGrpIntegrationUpTime, ciscoImaAlarmGroup=ciscoImaAlarmGroup, cimaGrpNumRxInvalidIcpCells=cimaGrpNumRxInvalidIcpCells, ciscoImaMIBCompliances=ciscoImaMIBCompliances, PYSNMP_MODULE_ID=ciscoImaMIB, cimaGrpAutoRestartSyncState=cimaGrpAutoRestartSyncState, cimaLinkLifIntDownTime=cimaLinkLifIntDownTime, cimaLinkNumRxErrIcpCells=cimaLinkNumRxErrIcpCells, cimaLinkTable=cimaLinkTable, cimaLinkState=cimaLinkState, cimaMaxGrpTxImaId=cimaMaxGrpTxImaId, ciscoImaMIBCompliance1=ciscoImaMIBCompliance1, ciscoImaLinkMappingGroup=ciscoImaLinkMappingGroup, cimaLinkNumTxMissingIcpCells=cimaLinkNumTxMissingIcpCells, cimaLinkLodsIntDownTime=cimaLinkLodsIntDownTime, cimaConfiguredImaGroups=cimaConfiguredImaGroups, cimaLinkMappingTable=cimaLinkMappingTable, cimaGroupEntry=cimaGroupEntry, cimaFeatureEntry=cimaFeatureEntry, ciscoImaFeatureGroup=ciscoImaFeatureGroup, cimaLinkLifIntUpTime=cimaLinkLifIntUpTime, cimaLinkMappingEntry=cimaLinkMappingEntry, ciscoImaMIBCompliance=ciscoImaMIBCompliance, ciscoImaLinkGroup=ciscoImaLinkGroup, cimaLinkNumTxIcpCells=cimaLinkNumTxIcpCells, cimaLinkNumRxMissingIcpCells=cimaLinkNumRxMissingIcpCells, cimaGrpAutoRestartMode=cimaGrpAutoRestartMode, cimaStuffAndCellIndication=cimaStuffAndCellIndication, cimaGrpNumRxMissingIcpCells=cimaGrpNumRxMissingIcpCells, cimaGrpNumRxErrIcpCells=cimaGrpNumRxErrIcpCells, ciscoImaMIBConformance=ciscoImaMIBConformance, cimaGrpNumTxMissingIcpCells=cimaGrpNumTxMissingIcpCells, cimaGrpNumRxIcpCells=cimaGrpNumRxIcpCells, cimaGroupTable=cimaGroupTable, ciscoImaVerFallbackSupportGroup=ciscoImaVerFallbackSupportGroup, CiscoImaLinkAlarmType=CiscoImaLinkAlarmType, cimaLinkNumRxIcpCells=cimaLinkNumRxIcpCells, ciscoImaGroupGroup=ciscoImaGroupGroup, cimaGrpRxImaIdExpected=cimaGrpRxImaIdExpected, cimaGrpNeVersion=cimaGrpNeVersion, cimaLinkLodsIntUpTime=cimaLinkLodsIntUpTime, cimaLinkEntry=cimaLinkEntry, cimaGroupClearAccDelay=cimaGroupClearAccDelay, cimaLinkAlarmType=cimaLinkAlarmType)
