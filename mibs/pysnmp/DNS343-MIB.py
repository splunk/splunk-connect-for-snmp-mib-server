#
# PySNMP MIB module DNS343-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/DNS343-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 18:37:31 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ConstraintsIntersection, ValueSizeConstraint, SingleValueConstraint, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ConstraintsIntersection", "ValueSizeConstraint", "SingleValueConstraint", "ValueRangeConstraint")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
MibScalar, MibTable, MibTableRow, MibTableColumn, Counter64, IpAddress, enterprises, TimeTicks, Counter32, ModuleIdentity, Gauge32, Bits, MibIdentifier, iso, Unsigned32, ObjectIdentity, NotificationType, Integer32 = mibBuilder.importSymbols("SNMPv2-SMI", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter64", "IpAddress", "enterprises", "TimeTicks", "Counter32", "ModuleIdentity", "Gauge32", "Bits", "MibIdentifier", "iso", "Unsigned32", "ObjectIdentity", "NotificationType", "Integer32")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
d_link = MibIdentifier((1, 3, 6, 1, 4, 1, 171)).setLabel("d-link")
productID = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 50))
projectID = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 50, 1))
modelID = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 50, 1, 4))
submodelID = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 50, 1, 4, 1))
nasAgent = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 50, 1, 4, 1, 1))
dns343AgentVer = MibScalar((1, 3, 6, 1, 4, 1, 171, 50, 1, 4, 1, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dns343AgentVer.setStatus('current')
dns343SoftwareVersion = MibScalar((1, 3, 6, 1, 4, 1, 171, 50, 1, 4, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dns343SoftwareVersion.setStatus('current')
dns343HostName = MibScalar((1, 3, 6, 1, 4, 1, 171, 50, 1, 4, 1, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dns343HostName.setStatus('current')
dns343DHCPServer = MibScalar((1, 3, 6, 1, 4, 1, 171, 50, 1, 4, 1, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dns343DHCPServer.setStatus('current')
dns343FTPServer = MibScalar((1, 3, 6, 1, 4, 1, 171, 50, 1, 4, 1, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dns343FTPServer.setStatus('current')
dns343NetType = MibScalar((1, 3, 6, 1, 4, 1, 171, 50, 1, 4, 1, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dns343NetType.setStatus('current')
dns343Temperature = MibScalar((1, 3, 6, 1, 4, 1, 171, 50, 1, 4, 1, 1, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dns343Temperature.setStatus('current')
dns343FanStatus = MibScalar((1, 3, 6, 1, 4, 1, 171, 50, 1, 4, 1, 1, 8), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dns343FanStatus.setStatus('current')
dns343VolumeTable = MibTable((1, 3, 6, 1, 4, 1, 171, 50, 1, 4, 1, 1, 9), )
if mibBuilder.loadTexts: dns343VolumeTable.setStatus('current')
dns343VolumeEntry = MibTableRow((1, 3, 6, 1, 4, 1, 171, 50, 1, 4, 1, 1, 9, 1), ).setIndexNames((0, "DNS343-MIB", "dns343VolumeNum"))
if mibBuilder.loadTexts: dns343VolumeEntry.setStatus('current')
dns343VolumeNum = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 50, 1, 4, 1, 1, 9, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dns343VolumeNum.setStatus('current')
dns343VolumeName = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 50, 1, 4, 1, 1, 9, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dns343VolumeName.setStatus('current')
dns343VolumeFsType = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 50, 1, 4, 1, 1, 9, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dns343VolumeFsType.setStatus('current')
dns343VolumeRaidLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 50, 1, 4, 1, 1, 9, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dns343VolumeRaidLevel.setStatus('current')
dns343VolumeSize = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 50, 1, 4, 1, 1, 9, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dns343VolumeSize.setStatus('current')
dns343VolumeFreeSpace = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 50, 1, 4, 1, 1, 9, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dns343VolumeFreeSpace.setStatus('current')
dns343DiskTable = MibTable((1, 3, 6, 1, 4, 1, 171, 50, 1, 4, 1, 1, 10), )
if mibBuilder.loadTexts: dns343DiskTable.setStatus('current')
dns343DiskEntry = MibTableRow((1, 3, 6, 1, 4, 1, 171, 50, 1, 4, 1, 1, 10, 1), ).setIndexNames((0, "DNS343-MIB", "dns343DiskNum"))
if mibBuilder.loadTexts: dns343DiskEntry.setStatus('current')
dns343DiskNum = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 50, 1, 4, 1, 1, 10, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dns343DiskNum.setStatus('current')
dns343DiskVendor = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 50, 1, 4, 1, 1, 10, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dns343DiskVendor.setStatus('current')
dns343DiskModel = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 50, 1, 4, 1, 1, 10, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dns343DiskModel.setStatus('current')
dns343DiskSerialNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 50, 1, 4, 1, 1, 10, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dns343DiskSerialNumber.setStatus('current')
dns343DiskTemperature = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 50, 1, 4, 1, 1, 10, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dns343DiskTemperature.setStatus('current')
dns343DiskCapacity = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 50, 1, 4, 1, 1, 10, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dns343DiskCapacity.setStatus('current')
notifyEvts = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 50, 1, 4, 1, 1, 200))
notifyPasswdChanged = NotificationType((1, 3, 6, 1, 4, 1, 171, 50, 1, 4, 1, 1, 200, 1))
if mibBuilder.loadTexts: notifyPasswdChanged.setStatus('current')
notifyFirmwareUpgraded = NotificationType((1, 3, 6, 1, 4, 1, 171, 50, 1, 4, 1, 1, 200, 2))
if mibBuilder.loadTexts: notifyFirmwareUpgraded.setStatus('current')
notifyNetworkChanged = NotificationType((1, 3, 6, 1, 4, 1, 171, 50, 1, 4, 1, 1, 200, 3))
if mibBuilder.loadTexts: notifyNetworkChanged.setStatus('current')
notifyTemperatureExceeded = NotificationType((1, 3, 6, 1, 4, 1, 171, 50, 1, 4, 1, 1, 200, 4))
if mibBuilder.loadTexts: notifyTemperatureExceeded.setStatus('current')
mibBuilder.exportSymbols("DNS343-MIB", dns343DiskTable=dns343DiskTable, dns343FTPServer=dns343FTPServer, dns343VolumeFsType=dns343VolumeFsType, dns343VolumeTable=dns343VolumeTable, dns343DiskEntry=dns343DiskEntry, nasAgent=nasAgent, dns343SoftwareVersion=dns343SoftwareVersion, projectID=projectID, dns343DiskModel=dns343DiskModel, dns343VolumeEntry=dns343VolumeEntry, dns343VolumeName=dns343VolumeName, dns343VolumeFreeSpace=dns343VolumeFreeSpace, notifyFirmwareUpgraded=notifyFirmwareUpgraded, notifyNetworkChanged=notifyNetworkChanged, dns343DiskCapacity=dns343DiskCapacity, dns343AgentVer=dns343AgentVer, dns343DHCPServer=dns343DHCPServer, dns343DiskNum=dns343DiskNum, dns343VolumeNum=dns343VolumeNum, d_link=d_link, submodelID=submodelID, dns343DiskSerialNumber=dns343DiskSerialNumber, dns343FanStatus=dns343FanStatus, dns343NetType=dns343NetType, productID=productID, dns343VolumeRaidLevel=dns343VolumeRaidLevel, dns343DiskTemperature=dns343DiskTemperature, notifyTemperatureExceeded=notifyTemperatureExceeded, dns343DiskVendor=dns343DiskVendor, modelID=modelID, dns343HostName=dns343HostName, dns343VolumeSize=dns343VolumeSize, notifyPasswdChanged=notifyPasswdChanged, dns343Temperature=dns343Temperature, notifyEvts=notifyEvts)
