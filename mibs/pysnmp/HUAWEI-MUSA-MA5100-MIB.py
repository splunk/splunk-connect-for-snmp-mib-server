#
# PySNMP MIB module HUAWEI-MUSA-MA5100-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/HUAWEI-MUSA-MA5100-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:32:50 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ValueSizeConstraint, ConstraintsUnion, ValueRangeConstraint, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ValueSizeConstraint", "ConstraintsUnion", "ValueRangeConstraint", "SingleValueConstraint")
musa, = mibBuilder.importSymbols("HUAWEI-MIB", "musa")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
Unsigned32, Gauge32, ObjectIdentity, Counter32, TimeTicks, IpAddress, MibIdentifier, Counter64, Bits, Integer32, MibScalar, MibTable, MibTableRow, MibTableColumn, iso, ModuleIdentity, NotificationType = mibBuilder.importSymbols("SNMPv2-SMI", "Unsigned32", "Gauge32", "ObjectIdentity", "Counter32", "TimeTicks", "IpAddress", "MibIdentifier", "Counter64", "Bits", "Integer32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "iso", "ModuleIdentity", "NotificationType")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
class DisplayString(OctetString):
    pass

hwMa5100Mib = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5))
hwMusaSysMib = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 1))
hwMusaDevice = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 1, 1))
hwMusaEndOfMib = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 100))
hwMusaSysDate = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 1, 1, 9), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMusaSysDate.setStatus('mandatory')
hwMusaSysTime = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 1, 1, 10), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMusaSysTime.setStatus('mandatory')
hwMusaSysCpuRatio = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 1, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMusaSysCpuRatio.setStatus('mandatory')
hwMusaHostVersion = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 1, 1, 12), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMusaHostVersion.setStatus('mandatory')
hwMusaResetSys = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 1, 1, 13), Integer32()).setMaxAccess("writeonly")
if mibBuilder.loadTexts: hwMusaResetSys.setStatus('mandatory')
hwMusaIpAddr = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 1, 1, 14), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMusaIpAddr.setStatus('mandatory')
hwMusaIpMask = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 1, 1, 15), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMusaIpMask.setStatus('mandatory')
hwMusaGatewayIpAddr = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 1, 1, 16), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMusaGatewayIpAddr.setStatus('mandatory')
hwMusaMacAddr = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 1, 1, 17), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMusaMacAddr.setStatus('mandatory')
hwMusaIpAddrPermitTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 1, 1, 18), )
if mibBuilder.loadTexts: hwMusaIpAddrPermitTable.setStatus('mandatory')
hwMusaIpAddrPermitEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 1, 1, 18, 1), ).setIndexNames((0, "HUAWEI-MUSA-MA5100-MIB", "hwMusaIpPermitTableId"))
if mibBuilder.loadTexts: hwMusaIpAddrPermitEntry.setStatus('mandatory')
hwMusaIpPermitTableId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 1, 1, 18, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMusaIpPermitTableId.setStatus('mandatory')
hwMusaIpAddrPermitOper = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 1, 1, 18, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("add", 0), ("del", 1), ("modify", 2), ("query", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMusaIpAddrPermitOper.setStatus('mandatory')
hwMusaPermitBeginIp = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 1, 1, 18, 1, 3), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMusaPermitBeginIp.setStatus('mandatory')
hwMusaPermitEndIp = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 1, 1, 18, 1, 4), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMusaPermitEndIp.setStatus('mandatory')
hwMusaPermitIpMask = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 1, 1, 18, 1, 5), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMusaPermitIpMask.setStatus('mandatory')
hwMusaIpAddrRejectTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 1, 1, 19), )
if mibBuilder.loadTexts: hwMusaIpAddrRejectTable.setStatus('mandatory')
hwMusaIpAddrRejectEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 1, 1, 19, 1), ).setIndexNames((0, "HUAWEI-MUSA-MA5100-MIB", "hwMusaIpRejectTableId"))
if mibBuilder.loadTexts: hwMusaIpAddrRejectEntry.setStatus('mandatory')
hwMusaIpRejectTableId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 1, 1, 19, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMusaIpRejectTableId.setStatus('mandatory')
hwMusaIpAddrRejectOper = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 1, 1, 19, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("add", 0), ("del", 1), ("modify", 2), ("query", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMusaIpAddrRejectOper.setStatus('mandatory')
hwMusaRejectBeginIp = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 1, 1, 19, 1, 3), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMusaRejectBeginIp.setStatus('mandatory')
hwMusaRejectEndIp = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 1, 1, 19, 1, 4), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMusaRejectEndIp.setStatus('mandatory')
hwMusaRejectIpMask = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 1, 1, 19, 1, 5), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMusaRejectIpMask.setStatus('mandatory')
hwMusaAtmIpAddr = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 1, 1, 20), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMusaAtmIpAddr.setStatus('mandatory')
hwMusaAtmIpMask = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 1, 1, 21), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMusaAtmIpMask.setStatus('mandatory')
hwMusaMtu = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 1, 1, 22), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMusaMtu.setStatus('mandatory')
hwMusaOpticConvergentRate = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 1, 1, 23), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMusaOpticConvergentRate.setStatus('mandatory')
hwMusaCellbusID = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 1, 1, 24), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("ma5100", 1), ("ma5103", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMusaCellbusID.setStatus('mandatory')
hwMusaResetSlaveMMX = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 1, 1, 25), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("loaddata", 1), ("noloaddata", 2)))).setMaxAccess("writeonly")
if mibBuilder.loadTexts: hwMusaResetSlaveMMX.setStatus('mandatory')
hwMusaBiosVersion = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 1, 1, 26), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMusaBiosVersion.setStatus('mandatory')
hwMusaEthernetFirewall = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 1, 1, 27), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMusaEthernetFirewall.setStatus('mandatory')
hwMusaNmsPvcConfTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 1, 3), )
if mibBuilder.loadTexts: hwMusaNmsPvcConfTable.setStatus('mandatory')
hwMusaNmsPvcConfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 1, 3, 1), ).setIndexNames((0, "HUAWEI-MUSA-MA5100-MIB", "hwMusaNmsPvcIndex"))
if mibBuilder.loadTexts: hwMusaNmsPvcConfEntry.setStatus('mandatory')
hwMusaNmsPvcIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 1, 3, 1, 1), Integer32())
if mibBuilder.loadTexts: hwMusaNmsPvcIndex.setStatus('mandatory')
hwMusaNmsRelayVpi = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 1, 3, 1, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMusaNmsRelayVpi.setStatus('mandatory')
hwMusaNmsRelayVci = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 1, 3, 1, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMusaNmsRelayVci.setStatus('mandatory')
hwMusaNmsIp = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 1, 3, 1, 4), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMusaNmsIp.setStatus('mandatory')
hwMusaNmsPvcOper = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 1, 3, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("add", 0), ("del", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMusaNmsPvcOper.setStatus('mandatory')
hwMusaNmsRxTraffic = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 1, 3, 1, 8), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMusaNmsRxTraffic.setStatus('mandatory')
hwMusaNmsTxTraffic = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 1, 3, 1, 9), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMusaNmsTxTraffic.setStatus('mandatory')
hwMusaNmsSarVci = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 1, 3, 1, 10), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMusaNmsSarVci.setStatus('mandatory')
hwMusaNmsLLCVC = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 1, 3, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("llc", 1), ("vc", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMusaNmsLLCVC.setStatus('mandatory')
hwMusaNmsENCAP = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 1, 3, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("eipoa", 0), ("e1483B", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMusaNmsENCAP.setStatus('mandatory')
hwMusaNmsFrameId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 1, 3, 1, 14), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMusaNmsFrameId.setStatus('mandatory')
hwMusaNmsSlotId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 1, 3, 1, 15), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMusaNmsSlotId.setStatus('mandatory')
hwMusaNmsPortVlanId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 1, 3, 1, 16), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMusaNmsPortVlanId.setStatus('mandatory')
hwMusaNmsParaConfTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 1, 5), )
if mibBuilder.loadTexts: hwMusaNmsParaConfTable.setStatus('mandatory')
hwMusaNmsParaConfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 1, 5, 1), ).setIndexNames((0, "HUAWEI-MUSA-MA5100-MIB", "hwMusaNmsID"))
if mibBuilder.loadTexts: hwMusaNmsParaConfEntry.setStatus('mandatory')
hwMusaNmsID = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 1, 5, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7)))
if mibBuilder.loadTexts: hwMusaNmsID.setStatus('mandatory')
hwMusaNmsOperState = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 1, 5, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 4, 5))).clone(namedValues=NamedValues(("add", 0), ("del", 1), ("modify", 2), ("active", 4), ("deactive", 5)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMusaNmsOperState.setStatus('mandatory')
hwMusaNmsName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 1, 5, 1, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMusaNmsName.setStatus('mandatory')
hwMusaNmsIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 1, 5, 1, 4), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMusaNmsIpAddr.setStatus('mandatory')
hwMusaGetCommunity = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 1, 5, 1, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMusaGetCommunity.setStatus('mandatory')
hwMusaSetCommunity = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 1, 5, 1, 6), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMusaSetCommunity.setStatus('mandatory')
hwMusaTrapPort = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 1, 5, 1, 7), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMusaTrapPort.setStatus('mandatory')
hwMusaGetSetPort = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 1, 5, 1, 8), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMusaGetSetPort.setStatus('mandatory')
hwMusaNmsStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 1, 5, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("active", 1), ("deactive", 2), ("commfail", 3), ("uninstall", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMusaNmsStatus.setStatus('mandatory')
hwMusaNmsStyle = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 1, 5, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("bandin", 0), ("bandout", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMusaNmsStyle.setStatus('mandatory')
hwMusaSlotGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 1, 6))
hwMusaShelf = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 1, 6, 1))
hwMusaFrame = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 1, 6, 2))
hwMusaSlot = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 1, 6, 3))
hwMusaShelfNumber = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 1, 6, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMusaShelfNumber.setStatus('mandatory')
hwMusaShelfConfTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 1, 6, 1, 2), )
if mibBuilder.loadTexts: hwMusaShelfConfTable.setStatus('mandatory')
hwMusaShelfConfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 1, 6, 1, 2, 1), ).setIndexNames((0, "HUAWEI-MUSA-MA5100-MIB", "hwMusaShelfIndex"))
if mibBuilder.loadTexts: hwMusaShelfConfEntry.setStatus('mandatory')
hwMusaShelfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 1, 6, 1, 2, 1, 1), Integer32())
if mibBuilder.loadTexts: hwMusaShelfIndex.setStatus('mandatory')
hwMusaShelfType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 1, 6, 1, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("other", 1), ("empty", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMusaShelfType.setStatus('mandatory')
hwMusaShelfName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 1, 6, 1, 2, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMusaShelfName.setStatus('mandatory')
hwMusaFrameNumbers = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 1, 6, 1, 2, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMusaFrameNumbers.setStatus('mandatory')
hwMusaFrameNumber = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 1, 6, 2, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMusaFrameNumber.setStatus('mandatory')
hwMusaFrameConfTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 1, 6, 2, 2), )
if mibBuilder.loadTexts: hwMusaFrameConfTable.setStatus('mandatory')
hwMusaFrameConfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 1, 6, 2, 2, 1), ).setIndexNames((0, "HUAWEI-MUSA-MA5100-MIB", "hwMusaShelfIndex"), (0, "HUAWEI-MUSA-MA5100-MIB", "hwMusaFrameIndex"))
if mibBuilder.loadTexts: hwMusaFrameConfEntry.setStatus('mandatory')
hwMusaFrameIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 1, 6, 2, 2, 1, 1), Integer32())
if mibBuilder.loadTexts: hwMusaFrameIndex.setStatus('mandatory')
hwMusaFrameType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 1, 6, 2, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("other", 1), ("empty", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMusaFrameType.setStatus('mandatory')
hwMusaFrameName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 1, 6, 2, 2, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 20))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMusaFrameName.setStatus('mandatory')
hwMusaSlotNumbers = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 1, 6, 2, 2, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMusaSlotNumbers.setStatus('mandatory')
hwMusaFrameBandWidth = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 1, 6, 2, 2, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMusaFrameBandWidth.setStatus('mandatory')
hwMusaFrameUsedBandWidth = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 1, 6, 2, 2, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMusaFrameUsedBandWidth.setStatus('mandatory')
hwMusaSlotNumber = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 1, 6, 3, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMusaSlotNumber.setStatus('mandatory')
hwMusaSlotConfTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 1, 6, 3, 2), )
if mibBuilder.loadTexts: hwMusaSlotConfTable.setStatus('mandatory')
hwMusaSlotConfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 1, 6, 3, 2, 1), ).setIndexNames((0, "HUAWEI-MUSA-MA5100-MIB", "hwMusaFrameIndex"), (0, "HUAWEI-MUSA-MA5100-MIB", "hwMusaSlotIndex"))
if mibBuilder.loadTexts: hwMusaSlotConfEntry.setStatus('mandatory')
hwMusaSlotIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 1, 6, 3, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 15)))
if mibBuilder.loadTexts: hwMusaSlotIndex.setStatus('mandatory')
hwMusaSlotCardType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 1, 6, 3, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 25))).clone(namedValues=NamedValues(("null", 0), ("mmx", 1), ("smx", 2), ("adl", 3), ("lanb", 4), ("lana", 5), ("cesa", 6), ("cesb", 7), ("spl", 8), ("fra", 9), ("adlb", 10), ("unknown", 11), ("splb", 12), ("sep", 13), ("smxa", 14), ("smxb", 15), ("pots", 16), ("splc", 18), ("lan", 19), ("adlc", 21), ("adld", 25)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMusaSlotCardType.setStatus('mandatory')
hwMusaSlotCardSerial = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 1, 6, 3, 2, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMusaSlotCardSerial.setStatus('mandatory')
hwMusaSlotCardVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 1, 6, 3, 2, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMusaSlotCardVersion.setStatus('mandatory')
hwMusaSlotIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 1, 6, 3, 2, 1, 5), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMusaSlotIpAddress.setStatus('mandatory')
hwMusaSlotCardAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 1, 6, 3, 2, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13))).clone(namedValues=NamedValues(("noinstall", 0), ("normal", 1), ("fault", 2), ("mainnormal", 3), ("mainfault", 4), ("baknormal", 5), ("bakfault", 6), ("forbid", 7), ("config", 8), ("online", 10), ("none", 11), ("commok", 12), ("commfail", 13)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMusaSlotCardAdminStatus.setStatus('mandatory')
hwMusaSlotCardOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 1, 6, 3, 2, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9))).clone(namedValues=NamedValues(("del", 0), ("add", 1), ("reset", 2), ("use", 3), ("nouse", 4), ("inverse", 5), ("mmxswitchover", 6), ("delmmxsubboard", 7), ("addaiusubboard", 8), ("delaiusubboard", 9)))).setMaxAccess("writeonly")
if mibBuilder.loadTexts: hwMusaSlotCardOperStatus.setStatus('mandatory')
hwMusaSlotDescript = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 1, 6, 3, 2, 1, 8), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMusaSlotDescript.setStatus('mandatory')
hwMusaBoardCellLossPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 1, 6, 3, 2, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("low", 0), ("high", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMusaBoardCellLossPriority.setStatus('mandatory')
hwMusaBoardMaxBandwidth = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 1, 6, 3, 2, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("b-155M", 0), ("b-80M", 1), ("b-20M", 2), ("b-4M", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMusaBoardMaxBandwidth.setStatus('mandatory')
hwMusaCpuOccupyRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 1, 6, 3, 2, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMusaCpuOccupyRate.setStatus('mandatory')
hwMusaQueryMemory = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 1, 6, 3, 2, 1, 12), DisplayString()).setMaxAccess("writeonly")
if mibBuilder.loadTexts: hwMusaQueryMemory.setStatus('mandatory')
hwMusaLoadProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 1, 6, 3, 2, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0))).clone(namedValues=NamedValues(("tftp", 0)))).setMaxAccess("writeonly")
if mibBuilder.loadTexts: hwMusaLoadProtocol.setStatus('mandatory')
hwMusaLoadContent = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 1, 6, 3, 2, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(6, 8, 7))).clone(namedValues=NamedValues(("program", 6), ("data", 8), ("fpga", 7)))).setMaxAccess("writeonly")
if mibBuilder.loadTexts: hwMusaLoadContent.setStatus('mandatory')
hwMusaLoadTftpServerIp = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 1, 6, 3, 2, 1, 15), IpAddress()).setMaxAccess("writeonly")
if mibBuilder.loadTexts: hwMusaLoadTftpServerIp.setStatus('mandatory')
hwMusaLoadFileName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 1, 6, 3, 2, 1, 16), DisplayString()).setMaxAccess("writeonly")
if mibBuilder.loadTexts: hwMusaLoadFileName.setStatus('mandatory')
hwMusaLoadOperType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 1, 6, 3, 2, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("load", 0), ("upback", 1), ("downback", 2), ("rollback", 3), ("clearflash", 4)))).setMaxAccess("writeonly")
if mibBuilder.loadTexts: hwMusaLoadOperType.setStatus('mandatory')
hwMusaSlotUpBandWidth = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 1, 6, 3, 2, 1, 18), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMusaSlotUpBandWidth.setStatus('mandatory')
hwMusaSlotDownBandWidth = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 1, 6, 3, 2, 1, 19), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMusaSlotDownBandWidth.setStatus('mandatory')
hwMusaSlotUsedUpBandWidth = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 1, 6, 3, 2, 1, 20), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMusaSlotUsedUpBandWidth.setStatus('mandatory')
hwMusaSlotUsedDownBandWidth = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 1, 6, 3, 2, 1, 21), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMusaSlotUsedDownBandWidth.setStatus('mandatory')
hwMusaSlotUpPracticalBandWidth = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 1, 6, 3, 2, 1, 22), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMusaSlotUpPracticalBandWidth.setStatus('mandatory')
hwMusaSlotDownPracticalBandWidth = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 1, 6, 3, 2, 1, 23), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMusaSlotDownPracticalBandWidth.setStatus('mandatory')
hwMusaOamGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 1, 7))
hwMusaOimPhyTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 1, 7, 1), )
if mibBuilder.loadTexts: hwMusaOimPhyTable.setStatus('mandatory')
hwMusaOimPhyEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 1, 7, 1, 1), ).setIndexNames((0, "HUAWEI-MUSA-MA5100-MIB", "hwMusaFrameIndex"), (0, "HUAWEI-MUSA-MA5100-MIB", "hwMusaSlotIndex"), (0, "HUAWEI-MUSA-MA5100-MIB", "hwOIMPortIndex"))
if mibBuilder.loadTexts: hwMusaOimPhyEntry.setStatus('mandatory')
hwOIMPortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 1, 7, 1, 1, 1), Integer32())
if mibBuilder.loadTexts: hwOIMPortIndex.setStatus('mandatory')
hwMusaSetSrcLoop = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 1, 7, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("notloop", 0), ("loop", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMusaSetSrcLoop.setStatus('mandatory')
hwMusaSetLineLoop = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 1, 7, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("notloop", 0), ("loop", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMusaSetLineLoop.setStatus('mandatory')
hwMusaSetUtopiaLoop = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 1, 7, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("notloop", 0), ("loop", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMusaSetUtopiaLoop.setStatus('mandatory')
hwMusaInsertLOF = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 1, 7, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("notinsert", 0), ("insert", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMusaInsertLOF.setStatus('mandatory')
hwMusaInsertLOS = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 1, 7, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("notinsert", 0), ("insert", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMusaInsertLOS.setStatus('mandatory')
hwMusaInsertBIP1 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 1, 7, 1, 1, 7), Integer32()).setMaxAccess("writeonly")
if mibBuilder.loadTexts: hwMusaInsertBIP1.setStatus('mandatory')
hwMusaInsertBIP2 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 1, 7, 1, 1, 8), Integer32()).setMaxAccess("writeonly")
if mibBuilder.loadTexts: hwMusaInsertBIP2.setStatus('mandatory')
hwMusaInsertBIP3 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 1, 7, 1, 1, 9), Integer32()).setMaxAccess("writeonly")
if mibBuilder.loadTexts: hwMusaInsertBIP3.setStatus('mandatory')
hwMusaInsertLAIS = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 1, 7, 1, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("notinsert", 0), ("insert", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMusaInsertLAIS.setStatus('mandatory')
hwMusaInsertPAIS = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 1, 7, 1, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("notinsert", 0), ("insert", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMusaInsertPAIS.setStatus('mandatory')
hwMusaInsertLRDI = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 1, 7, 1, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("notinsert", 0), ("insert", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMusaInsertLRDI.setStatus('mandatory')
hwMusaOimOpticTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 1, 7, 2), )
if mibBuilder.loadTexts: hwMusaOimOpticTable.setStatus('mandatory')
hwMusaOimOpticEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 1, 7, 2, 1), ).setIndexNames((0, "HUAWEI-MUSA-MA5100-MIB", "hwMusaFrameIndex"), (0, "HUAWEI-MUSA-MA5100-MIB", "hwMusaSlotIndex"), (0, "HUAWEI-MUSA-MA5100-MIB", "hwOIMPortIndex"))
if mibBuilder.loadTexts: hwMusaOimOpticEntry.setStatus('mandatory')
hwMusaQueryCurBIP1 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 1, 7, 2, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMusaQueryCurBIP1.setStatus('mandatory')
hwMusaQueryCurBIP2 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 1, 7, 2, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMusaQueryCurBIP2.setStatus('mandatory')
hwMusaQueryCurBIP3 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 1, 7, 2, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMusaQueryCurBIP3.setStatus('mandatory')
hwMusaQueryCurLFEBE = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 1, 7, 2, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMusaQueryCurLFEBE.setStatus('mandatory')
hwMusaQueryCurPFEBE = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 1, 7, 2, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMusaQueryCurPFEBE.setStatus('mandatory')
hwMusaQueryCurSendCellNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 1, 7, 2, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMusaQueryCurSendCellNum.setStatus('mandatory')
hwMusaQueryCurReceiveCellNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 1, 7, 2, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMusaQueryCurReceiveCellNum.setStatus('mandatory')
hwMusaQueryCurCorrectHECNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 1, 7, 2, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMusaQueryCurCorrectHECNum.setStatus('mandatory')
hwMusaQueryCurNonCorrectHECNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 1, 7, 2, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMusaQueryCurNonCorrectHECNum.setStatus('mandatory')
hwMusaQueryCurLOCDNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 1, 7, 2, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMusaQueryCurLOCDNum.setStatus('mandatory')
hwMusaQueryCurUnmatchCellNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 1, 7, 2, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMusaQueryCurUnmatchCellNum.setStatus('mandatory')
hwMusaQueryCurOOFNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 1, 7, 2, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMusaQueryCurOOFNum.setStatus('mandatory')
hwMusaClearAllAlarmStat = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 1, 7, 2, 1, 13), Integer32()).setMaxAccess("writeonly")
if mibBuilder.loadTexts: hwMusaClearAllAlarmStat.setStatus('mandatory')
hwMusaClearOIMErrEventStat = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 1, 7, 2, 1, 14), Integer32()).setMaxAccess("writeonly")
if mibBuilder.loadTexts: hwMusaClearOIMErrEventStat.setStatus('mandatory')
hwMusaWarningCtrlTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 1, 9), )
if mibBuilder.loadTexts: hwMusaWarningCtrlTable.setStatus('mandatory')
hwMusaWarningCtrlEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 1, 9, 1), ).setIndexNames((0, "HUAWEI-MUSA-MA5100-MIB", "hwMusaWarningID"))
if mibBuilder.loadTexts: hwMusaWarningCtrlEntry.setStatus('mandatory')
hwMusaWarningID = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 1, 9, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMusaWarningID.setStatus('mandatory')
hwMusaWarningLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 1, 9, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("notify", 0), ("normal", 1), ("serious", 2), ("fatal", 3), ("default", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMusaWarningLevel.setStatus('mandatory')
hwMusaWarningNmsCtrl = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 1, 9, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("on", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMusaWarningNmsCtrl.setStatus('mandatory')
hwMusaWarningTerminalCtrl = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 1, 9, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("on", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMusaWarningTerminalCtrl.setStatus('mandatory')
hwMusaWarningIsCount = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 1, 9, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("on", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMusaWarningIsCount.setStatus('mandatory')
hwMusaWarn15MinThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 1, 9, 1, 6), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMusaWarn15MinThreshold.setStatus('mandatory')
hwMusaWarn24HourThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 1, 9, 1, 7), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMusaWarn24HourThreshold.setStatus('mandatory')
hwMusaWarningDesc = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 1, 9, 1, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMusaWarningDesc.setStatus('mandatory')
hwMusaWarningEngDesc = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 1, 9, 1, 9), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMusaWarningEngDesc.setStatus('mandatory')
hwMusaSysRouteTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 1, 10), )
if mibBuilder.loadTexts: hwMusaSysRouteTable.setStatus('mandatory')
hwMusaSysRouteEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 1, 10, 1), ).setIndexNames((0, "HUAWEI-MUSA-MA5100-MIB", "hwMusaSysRouteIndex"))
if mibBuilder.loadTexts: hwMusaSysRouteEntry.setStatus('mandatory')
hwMusaSysRouteIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 1, 10, 1, 1), Integer32())
if mibBuilder.loadTexts: hwMusaSysRouteIndex.setStatus('mandatory')
hwMusaDstIp = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 1, 10, 1, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMusaDstIp.setStatus('mandatory')
hwMusaDstIpMask = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 1, 10, 1, 3), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMusaDstIpMask.setStatus('mandatory')
hwMusaGateIp = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 1, 10, 1, 4), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMusaGateIp.setStatus('mandatory')
hwMusaSysRouteOper = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 1, 10, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("add", 0), ("del", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMusaSysRouteOper.setStatus('mandatory')
hwMusaLoadRateTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 1, 11), )
if mibBuilder.loadTexts: hwMusaLoadRateTable.setStatus('mandatory')
hwMusaLoadRateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 1, 11, 1), ).setIndexNames((0, "HUAWEI-MUSA-MA5100-MIB", "hwMusaFrameIndex"), (0, "HUAWEI-MUSA-MA5100-MIB", "hwMusaSlotIndex"))
if mibBuilder.loadTexts: hwMusaLoadRateEntry.setStatus('mandatory')
hwMusaLoadRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 1, 11, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMusaLoadRate.setStatus('mandatory')
hwMusaLoadType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 1, 11, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("noOper", 0), ("backData", 1), ("dumpData", 2), ("loadData", 3), ("loadProc", 4), ("loadFpga", 5), ("program", 6), ("fpga", 7), ("data", 8)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMusaLoadType.setStatus('mandatory')
hwMusaTrafficTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 1, 13), )
if mibBuilder.loadTexts: hwMusaTrafficTable.setStatus('mandatory')
hwMusaTrafficEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 1, 13, 1), ).setIndexNames((0, "HUAWEI-MUSA-MA5100-MIB", "hwMusaTrafficIndex"))
if mibBuilder.loadTexts: hwMusaTrafficEntry.setStatus('mandatory')
hwMusaTrafficIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 1, 13, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 5000)))
if mibBuilder.loadTexts: hwMusaTrafficIndex.setStatus('mandatory')
hwMusaTrafficType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 1, 13, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14))).clone(namedValues=NamedValues(("noclpnoscr", 1), ("clpnotaggingnoscr", 2), ("clptaggingnoscr", 3), ("noclpscr", 4), ("clpnotaggingscr", 5), ("clptaggingscr", 6), ("clpnotaggingmcr", 7), ("clptransparentnoscr", 8), ("clptransparentscr", 9), ("noclptaggingnoscr", 10), ("noclpnoscrcdvt", 11), ("noclpscrcdvt", 12), ("clpnotaggingscrcdvt", 13), ("clptaggingscrcdvt", 14)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMusaTrafficType.setStatus('mandatory')
hwMusaServiceClass = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 1, 13, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(2, 3, 4, 6))).clone(namedValues=NamedValues(("cbr", 2), ("rtVBR", 3), ("nrtVBR", 4), ("ubr", 6)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMusaServiceClass.setStatus('mandatory')
hwMusaRefCount = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 1, 13, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMusaRefCount.setStatus('mandatory')
hwMusaRecordState = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 1, 13, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1), ("module", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMusaRecordState.setStatus('mandatory')
hwMusaClp01pcr = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 1, 13, 1, 6), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMusaClp01pcr.setStatus('mandatory')
hwMusaClp0pcr = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 1, 13, 1, 7), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMusaClp0pcr.setStatus('mandatory')
hwMusaClp01scr = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 1, 13, 1, 8), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMusaClp01scr.setStatus('mandatory')
hwMusaClp0scr = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 1, 13, 1, 9), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMusaClp0scr.setStatus('mandatory')
hwMusaMbs = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 1, 13, 1, 10), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMusaMbs.setStatus('mandatory')
hwMusaMcr = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 1, 13, 1, 11), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMusaMcr.setStatus('mandatory')
hwMusaCDVT = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 1, 13, 1, 12), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMusaCDVT.setStatus('mandatory')
hwMusaOperat = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 1, 13, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("add", 0), ("del", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMusaOperat.setStatus('mandatory')
hwMusaNextTrafficIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 1, 13, 1, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMusaNextTrafficIndex.setStatus('mandatory')
hwMusaCampusPvcConfTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 1, 15), )
if mibBuilder.loadTexts: hwMusaCampusPvcConfTable.setStatus('mandatory')
hwMusaCampusPvcConfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 1, 15, 1), ).setIndexNames((0, "HUAWEI-MUSA-MA5100-MIB", "hwMusaFrameIndex"), (0, "HUAWEI-MUSA-MA5100-MIB", "hwMusaSlotIndex"), (0, "HUAWEI-MUSA-MA5100-MIB", "hwMusaVlanId"), (0, "HUAWEI-MUSA-MA5100-MIB", "hwMusaVlanIciIndex"))
if mibBuilder.loadTexts: hwMusaCampusPvcConfEntry.setStatus('mandatory')
hwMusaVlanId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 1, 15, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 63))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMusaVlanId.setStatus('mandatory')
hwMusaVlanIciIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 1, 15, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMusaVlanIciIndex.setStatus('mandatory')
hwMusaAdlPortCount = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 1, 15, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMusaAdlPortCount.setStatus('mandatory')
hwMusaAdlFrameId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 1, 15, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMusaAdlFrameId.setStatus('mandatory')
hwMusaAdlSlotId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 1, 15, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 15))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMusaAdlSlotId.setStatus('mandatory')
hwMusaAdlPortId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 1, 15, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 15))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMusaAdlPortId.setStatus('mandatory')
hwMusaAdlVpi = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 1, 15, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 127))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMusaAdlVpi.setStatus('mandatory')
hwMusaAdlVci = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 1, 15, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(32, 127))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMusaAdlVci.setStatus('mandatory')
hwMusaToLanTrafficId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 1, 15, 1, 9), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMusaToLanTrafficId.setStatus('mandatory')
hwMusaFromLanTrafficId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 1, 15, 1, 10), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMusaFromLanTrafficId.setStatus('mandatory')
hwMusaAdlPortOperat = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 1, 15, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("add", 0), ("del", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMusaAdlPortOperat.setStatus('mandatory')
hwMusaOpticBandwidthTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 1, 17), )
if mibBuilder.loadTexts: hwMusaOpticBandwidthTable.setStatus('mandatory')
hwMusaOpticBandwidthEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 1, 17, 1), ).setIndexNames((0, "HUAWEI-MUSA-MA5100-MIB", "hwMusaFrameIndex"), (0, "HUAWEI-MUSA-MA5100-MIB", "hwMusaSlotIndex"), (0, "HUAWEI-MUSA-MA5100-MIB", "hwOIMPortIndex"))
if mibBuilder.loadTexts: hwMusaOpticBandwidthEntry.setStatus('mandatory')
hwMusaUpOpticMainBandWidth = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 1, 17, 1, 1), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMusaUpOpticMainBandWidth.setStatus('mandatory')
hwMusaDnOpticMainBandWidth = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 1, 17, 1, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMusaDnOpticMainBandWidth.setStatus('mandatory')
hwMusaCurUsedUpBandWidth = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 1, 17, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMusaCurUsedUpBandWidth.setStatus('mandatory')
hwMusaCurUsedDownBandWidth = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 1, 17, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMusaCurUsedDownBandWidth.setStatus('mandatory')
hwMusaUpReservedBandWidth = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 1, 17, 1, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMusaUpReservedBandWidth.setStatus('mandatory')
hwMusaDownReservedBandWidth = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 1, 17, 1, 6), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMusaDownReservedBandWidth.setStatus('mandatory')
hwMusaUpPracticalBandWidth = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 1, 17, 1, 7), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMusaUpPracticalBandWidth.setStatus('mandatory')
hwMusaDownPracticalBandWidth = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 1, 17, 1, 8), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMusaDownPracticalBandWidth.setStatus('mandatory')
hwMusaTrafficCbrPcrTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 1, 18), )
if mibBuilder.loadTexts: hwMusaTrafficCbrPcrTable.setStatus('mandatory')
hwMusaTrafficCbrPcrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 1, 18, 1), ).setIndexNames((0, "HUAWEI-MUSA-MA5100-MIB", "hwMusaCbrPcrIndex"))
if mibBuilder.loadTexts: hwMusaTrafficCbrPcrEntry.setStatus('mandatory')
hwMusaCbrPcrIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 1, 18, 1, 1), Integer32())
if mibBuilder.loadTexts: hwMusaCbrPcrIndex.setStatus('mandatory')
hwMusaCbrPcrValue = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 1, 18, 1, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMusaCbrPcrValue.setStatus('mandatory')
hwMusaCbrPcrRefCount = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 1, 18, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMusaCbrPcrRefCount.setStatus('mandatory')
hwMusaTrafficRtvbrScrTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 1, 19), )
if mibBuilder.loadTexts: hwMusaTrafficRtvbrScrTable.setStatus('mandatory')
hwMusaTrafficRtvbrScrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 1, 19, 1), ).setIndexNames((0, "HUAWEI-MUSA-MA5100-MIB", "hwMusaRtvbrScrIndex"))
if mibBuilder.loadTexts: hwMusaTrafficRtvbrScrEntry.setStatus('mandatory')
hwMusaRtvbrScrIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 1, 19, 1, 1), Integer32())
if mibBuilder.loadTexts: hwMusaRtvbrScrIndex.setStatus('mandatory')
hwMusaRtvbrScrValue = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 1, 19, 1, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMusaRtvbrScrValue.setStatus('mandatory')
hwMusaRtvbrScrRefCount = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 1, 19, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMusaRtvbrScrRefCount.setStatus('mandatory')
hwMusaPvcTrafficStatisTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 1, 21), )
if mibBuilder.loadTexts: hwMusaPvcTrafficStatisTable.setStatus('mandatory')
hwMusaPvcTrafficStatisEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 1, 21, 1), ).setIndexNames((0, "HUAWEI-MUSA-MA5100-MIB", "hwMusaSPvcIndex"))
if mibBuilder.loadTexts: hwMusaPvcTrafficStatisEntry.setStatus('mandatory')
hwMusaUpStreamTrafficRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 1, 21, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMusaUpStreamTrafficRx.setStatus('mandatory')
hwMusaUpStreamTrafficTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 1, 21, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMusaUpStreamTrafficTx.setStatus('mandatory')
hwMusaDownStreamTrafficRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 1, 21, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMusaDownStreamTrafficRx.setStatus('mandatory')
hwMusaDownStreamTrafficTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 1, 21, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMusaDownStreamTrafficTx.setStatus('mandatory')
hwMusaAllPvcConfTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 1, 22), )
if mibBuilder.loadTexts: hwMusaAllPvcConfTable.setStatus('mandatory')
hwMusaAllPvcConfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 1, 22, 1), ).setIndexNames((0, "HUAWEI-MUSA-MA5100-MIB", "hwMusaTypeOfPvcPvp"), (0, "HUAWEI-MUSA-MA5100-MIB", "hwMusaCidIndex"))
if mibBuilder.loadTexts: hwMusaAllPvcConfEntry.setStatus('mandatory')
hwMusaCidIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 1, 22, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMusaCidIndex.setStatus('mandatory')
hwMusaSrcFrameId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 1, 22, 1, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMusaSrcFrameId.setStatus('mandatory')
hwMuasSrcSlotId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 1, 22, 1, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMuasSrcSlotId.setStatus('mandatory')
hwMusaSrcPortVlanVccId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 1, 22, 1, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMusaSrcPortVlanVccId.setStatus('mandatory')
hwMusaSrcOnuId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 1, 22, 1, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMusaSrcOnuId.setStatus('mandatory')
hwMusaSrcBoardVpi = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 1, 22, 1, 6), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMusaSrcBoardVpi.setStatus('mandatory')
hwMusaSrcBoardVci = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 1, 22, 1, 7), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMusaSrcBoardVci.setStatus('mandatory')
hwMusaSrcPortType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 1, 22, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("uni", 0), ("sdt", 1), ("udt", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMusaSrcPortType.setStatus('mandatory')
hwMusaSrcCescChannelId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 1, 22, 1, 9), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMusaSrcCescChannelId.setStatus('mandatory')
hwMusaSrcCescChannelBitmap = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 1, 22, 1, 10), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMusaSrcCescChannelBitmap.setStatus('mandatory')
hwMusaSrcCescFillDegree = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 1, 22, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(20, 47))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMusaSrcCescFillDegree.setStatus('mandatory')
hwMusaSrcFrcDlciType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 1, 22, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 5))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMusaSrcFrcDlciType.setStatus('mandatory')
hwMusaSrcFrcIwfType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 1, 22, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("network11", 0), ("service", 1), ("hdlc", 2), ("networkN1", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMusaSrcFrcIwfType.setStatus('mandatory')
hwMusaSrcFrcActiveStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 1, 22, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("block", 0), ("unblock", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMusaSrcFrcActiveStatus.setStatus('mandatory')
hwMusaSrcFrcFreeBandwidth = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 1, 22, 1, 15), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMusaSrcFrcFreeBandwidth.setStatus('mandatory')
hwMusaSrcApcConnectAttribute = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 1, 22, 1, 16), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMusaSrcApcConnectAttribute.setStatus('mandatory')
hwMusaSrcCescV35N = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 1, 22, 1, 17), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMusaSrcCescV35N.setStatus('mandatory')
hwMusaDestFrameId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 1, 22, 1, 20), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMusaDestFrameId.setStatus('mandatory')
hwMusaDestSlotId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 1, 22, 1, 21), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMusaDestSlotId.setStatus('mandatory')
hwMusaDestPortVlanVccId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 1, 22, 1, 22), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMusaDestPortVlanVccId.setStatus('mandatory')
hwMusaDestOnuId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 1, 22, 1, 23), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMusaDestOnuId.setStatus('mandatory')
hwMusaDestBoardVpi = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 1, 22, 1, 24), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMusaDestBoardVpi.setStatus('mandatory')
hwMusaDestBoardVci = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 1, 22, 1, 25), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMusaDestBoardVci.setStatus('mandatory')
hwMusaDestPortType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 1, 22, 1, 26), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("uni", 0), ("sdt", 1), ("udt", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMusaDestPortType.setStatus('mandatory')
hwMusaDestCescChannelId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 1, 22, 1, 27), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMusaDestCescChannelId.setStatus('mandatory')
hwMusaDestCescChannelBitmap = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 1, 22, 1, 28), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMusaDestCescChannelBitmap.setStatus('mandatory')
hwMusaDestCescFillDegree = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 1, 22, 1, 29), Integer32().subtype(subtypeSpec=ValueRangeConstraint(20, 47))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMusaDestCescFillDegree.setStatus('mandatory')
hwMusaDestFrcDlciType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 1, 22, 1, 30), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 5))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMusaDestFrcDlciType.setStatus('mandatory')
hwMusaDestFrcIwfType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 1, 22, 1, 31), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("network11", 0), ("service", 1), ("hdlc", 2), ("networkN1", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMusaDestFrcIwfType.setStatus('mandatory')
hwMusaDestFrcActiveStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 1, 22, 1, 32), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("block", 0), ("unblock", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMusaDestFrcActiveStatus.setStatus('mandatory')
hwMusaDestFrcFreeBandwidth = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 1, 22, 1, 33), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMusaDestFrcFreeBandwidth.setStatus('mandatory')
hwMusaDestApcConnectAttribute = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 1, 22, 1, 34), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMusaDestApcConnectAttribute.setStatus('mandatory')
hwMusaDestCescV35N = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 1, 22, 1, 35), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMusaDestCescV35N.setStatus('mandatory')
hwMusaSrcToDestTraffic = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 1, 22, 1, 38), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMusaSrcToDestTraffic.setStatus('mandatory')
hwMusaDestToSrcTraffic = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 1, 22, 1, 39), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMusaDestToSrcTraffic.setStatus('mandatory')
hwMusaAllPvcOperater = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 1, 22, 1, 40), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("add", 0), ("del", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMusaAllPvcOperater.setStatus('mandatory')
hwMusaTypeOfPvcPvp = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 1, 22, 1, 41), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("pvc", 0), ("pvp", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMusaTypeOfPvcPvp.setStatus('mandatory')
hwMusaPvcPvpState = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 1, 22, 1, 42), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("normal", 1), ("invalid", 2), ("delete", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMusaPvcPvpState.setStatus('mandatory')
hwMusaPvcCidTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 1, 23), )
if mibBuilder.loadTexts: hwMusaPvcCidTable.setStatus('mandatory')
hwMusaPvcCidEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 1, 23, 1), ).setIndexNames((0, "HUAWEI-MUSA-MA5100-MIB", "hwMusaFrameIndex"), (0, "HUAWEI-MUSA-MA5100-MIB", "hwMusaSlotIndex"), (0, "HUAWEI-MUSA-MA5100-MIB", "hwMusaSrcPortVlanVccId"), (0, "HUAWEI-MUSA-MA5100-MIB", "hwMusaSrcOnuId"), (0, "HUAWEI-MUSA-MA5100-MIB", "hwMusaSrcBoardVpi"), (0, "HUAWEI-MUSA-MA5100-MIB", "hwMusaSrcBoardVci"))
if mibBuilder.loadTexts: hwMusaPvcCidEntry.setStatus('mandatory')
hwMusaPvcCid = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 1, 23, 1, 1), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMusaPvcCid.setStatus('mandatory')
hwMusaPatchOperateTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 1, 24), )
if mibBuilder.loadTexts: hwMusaPatchOperateTable.setStatus('mandatory')
hwMusaPatchOperateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 1, 24, 1), ).setIndexNames((0, "HUAWEI-MUSA-MA5100-MIB", "hwMusaPatchIdIndex"))
if mibBuilder.loadTexts: hwMusaPatchOperateEntry.setStatus('mandatory')
hwMusaPatchIdIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 1, 24, 1, 1), Integer32())
if mibBuilder.loadTexts: hwMusaPatchIdIndex.setStatus('mandatory')
hwMusaPatchLoadProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 1, 24, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("tftp", 1)))).setMaxAccess("writeonly")
if mibBuilder.loadTexts: hwMusaPatchLoadProtocol.setStatus('mandatory')
hwMusaPatchLoadFilename = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 1, 24, 1, 3), DisplayString()).setMaxAccess("writeonly")
if mibBuilder.loadTexts: hwMusaPatchLoadFilename.setStatus('mandatory')
hwMusaPatchLoadSerIp = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 1, 24, 1, 4), IpAddress()).setMaxAccess("writeonly")
if mibBuilder.loadTexts: hwMusaPatchLoadSerIp.setStatus('mandatory')
hwMusaPatchOper = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 1, 24, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("activate", 1), ("deactivate", 2), ("load", 3), ("remove", 4), ("run", 5)))).setMaxAccess("writeonly")
if mibBuilder.loadTexts: hwMusaPatchOper.setStatus('mandatory')
hwMusaPatchTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 1, 25), )
if mibBuilder.loadTexts: hwMusaPatchTable.setStatus('mandatory')
hwMusaPatchEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 1, 25, 1), ).setIndexNames((0, "HUAWEI-MUSA-MA5100-MIB", "hwMusaPatchIdIndex"))
if mibBuilder.loadTexts: hwMusaPatchEntry.setStatus('mandatory')
hwMusaPatchShowIdIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 1, 25, 1, 1), Integer32())
if mibBuilder.loadTexts: hwMusaPatchShowIdIndex.setStatus('mandatory')
hwMusaPatchCRC = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 1, 25, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMusaPatchCRC.setStatus('mandatory')
hwMusaPatchType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 1, 25, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("c-Commonpatch", 1), ("t-Temporarypatch", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMusaPatchType.setStatus('mandatory')
hwMusaPatchState = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 1, 25, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("run", 1), ("activate", 2), ("deactivate", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMusaPatchState.setStatus('mandatory')
hwMusaPatchCodeAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 1, 25, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMusaPatchCodeAddress.setStatus('mandatory')
hwMusaPatchCodeLength = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 1, 25, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMusaPatchCodeLength.setStatus('mandatory')
hwMusaPatchDataAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 1, 25, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMusaPatchDataAddress.setStatus('mandatory')
hwMusaPatchDataLength = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 1, 25, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMusaPatchDataLength.setStatus('mandatory')
hwMusaPatchFunctionNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 1, 25, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMusaPatchFunctionNumber.setStatus('mandatory')
hwMa5100EndOfMib = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 6, 5, 100, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMa5100EndOfMib.setStatus('mandatory')
mibBuilder.exportSymbols("HUAWEI-MUSA-MA5100-MIB", hwMusaSrcApcConnectAttribute=hwMusaSrcApcConnectAttribute, hwMusaResetSys=hwMusaResetSys, hwMusaWarningID=hwMusaWarningID, hwMusaOimOpticTable=hwMusaOimOpticTable, hwMusaDestFrameId=hwMusaDestFrameId, hwMusaMcr=hwMusaMcr, hwMusaTrafficEntry=hwMusaTrafficEntry, hwMusaFrameUsedBandWidth=hwMusaFrameUsedBandWidth, hwMusaTrafficTable=hwMusaTrafficTable, hwMusaInsertLAIS=hwMusaInsertLAIS, hwMusaShelfType=hwMusaShelfType, hwMusaIpAddrRejectOper=hwMusaIpAddrRejectOper, hwMusaQueryCurNonCorrectHECNum=hwMusaQueryCurNonCorrectHECNum, hwMusaLoadOperType=hwMusaLoadOperType, hwMusaDestBoardVpi=hwMusaDestBoardVpi, hwMusaPatchEntry=hwMusaPatchEntry, hwMusaSrcBoardVci=hwMusaSrcBoardVci, hwMusaShelfConfTable=hwMusaShelfConfTable, hwMusaClp0pcr=hwMusaClp0pcr, hwMusaInsertBIP1=hwMusaInsertBIP1, hwMusaInsertLOS=hwMusaInsertLOS, hwMusaVlanIciIndex=hwMusaVlanIciIndex, hwMusaWarn24HourThreshold=hwMusaWarn24HourThreshold, hwMusaDestFrcIwfType=hwMusaDestFrcIwfType, hwMusaPatchLoadProtocol=hwMusaPatchLoadProtocol, hwMusaEndOfMib=hwMusaEndOfMib, hwMusaIpAddr=hwMusaIpAddr, hwMusaOperat=hwMusaOperat, hwMusaSrcFrcDlciType=hwMusaSrcFrcDlciType, hwMusaSrcFrcIwfType=hwMusaSrcFrcIwfType, hwMusaMtu=hwMusaMtu, hwMusaEthernetFirewall=hwMusaEthernetFirewall, hwMusaCpuOccupyRate=hwMusaCpuOccupyRate, hwMusaClearOIMErrEventStat=hwMusaClearOIMErrEventStat, hwMusaVlanId=hwMusaVlanId, hwMusaFrameConfEntry=hwMusaFrameConfEntry, hwMusaDestApcConnectAttribute=hwMusaDestApcConnectAttribute, hwMusaTypeOfPvcPvp=hwMusaTypeOfPvcPvp, hwMusaDestCescChannelId=hwMusaDestCescChannelId, hwMusaShelfConfEntry=hwMusaShelfConfEntry, hwMusaUpOpticMainBandWidth=hwMusaUpOpticMainBandWidth, hwMusaSysTime=hwMusaSysTime, hwMusaSysRouteOper=hwMusaSysRouteOper, hwMusaPatchOper=hwMusaPatchOper, hwMusaInsertLRDI=hwMusaInsertLRDI, hwMusaOimPhyEntry=hwMusaOimPhyEntry, hwMusaDownStreamTrafficRx=hwMusaDownStreamTrafficRx, hwMusaSlotIndex=hwMusaSlotIndex, hwMusaUpStreamTrafficTx=hwMusaUpStreamTrafficTx, hwMusaFrameConfTable=hwMusaFrameConfTable, hwMusaQueryCurBIP1=hwMusaQueryCurBIP1, hwMusaInsertBIP3=hwMusaInsertBIP3, hwMusaPatchTable=hwMusaPatchTable, hwMusaSrcPortVlanVccId=hwMusaSrcPortVlanVccId, hwMusaClp01pcr=hwMusaClp01pcr, hwMusaQueryCurUnmatchCellNum=hwMusaQueryCurUnmatchCellNum, hwMusaCampusPvcConfTable=hwMusaCampusPvcConfTable, hwMusaSlotConfTable=hwMusaSlotConfTable, hwMusaSysRouteTable=hwMusaSysRouteTable, hwMusaAllPvcConfTable=hwMusaAllPvcConfTable, hwMusaMbs=hwMusaMbs, hwMusaSetLineLoop=hwMusaSetLineLoop, hwMusaSlotNumber=hwMusaSlotNumber, hwOIMPortIndex=hwOIMPortIndex, hwMusaPatchOperateEntry=hwMusaPatchOperateEntry, hwMusaNmsName=hwMusaNmsName, hwMusaIpRejectTableId=hwMusaIpRejectTableId, hwMusaShelfName=hwMusaShelfName, hwMusaPvcCid=hwMusaPvcCid, hwMusaSlotCardVersion=hwMusaSlotCardVersion, hwMusaSrcFrcActiveStatus=hwMusaSrcFrcActiveStatus, hwMusaCurUsedUpBandWidth=hwMusaCurUsedUpBandWidth, hwMusaNmsFrameId=hwMusaNmsFrameId, hwMusaPvcTrafficStatisTable=hwMusaPvcTrafficStatisTable, hwMusaSlotDownPracticalBandWidth=hwMusaSlotDownPracticalBandWidth, hwMusaInsertBIP2=hwMusaInsertBIP2, hwMusaIpMask=hwMusaIpMask, hwMusaNmsIpAddr=hwMusaNmsIpAddr, hwMusaQueryCurSendCellNum=hwMusaQueryCurSendCellNum, hwMusaAdlSlotId=hwMusaAdlSlotId, hwMusaSlotUpPracticalBandWidth=hwMusaSlotUpPracticalBandWidth, hwMusaOimPhyTable=hwMusaOimPhyTable, hwMusaPatchLoadFilename=hwMusaPatchLoadFilename, hwMusaIpAddrPermitOper=hwMusaIpAddrPermitOper, DisplayString=DisplayString, hwMusaLoadTftpServerIp=hwMusaLoadTftpServerIp, hwMusaIpAddrPermitEntry=hwMusaIpAddrPermitEntry, hwMusaNmsTxTraffic=hwMusaNmsTxTraffic, hwMusaNextTrafficIndex=hwMusaNextTrafficIndex, hwMusaCbrPcrIndex=hwMusaCbrPcrIndex, hwMusaToLanTrafficId=hwMusaToLanTrafficId, hwMusaSlotUpBandWidth=hwMusaSlotUpBandWidth, hwMusaAdlPortCount=hwMusaAdlPortCount, hwMusaAdlPortId=hwMusaAdlPortId, hwMusaPatchCodeLength=hwMusaPatchCodeLength, hwMusaPatchDataLength=hwMusaPatchDataLength, hwMusaPermitEndIp=hwMusaPermitEndIp, hwMusaLoadContent=hwMusaLoadContent, hwMusaAllPvcConfEntry=hwMusaAllPvcConfEntry, hwMusaPvcCidEntry=hwMusaPvcCidEntry, hwMusaPvcPvpState=hwMusaPvcPvpState, hwMusaNmsRxTraffic=hwMusaNmsRxTraffic, hwMusaSlotUsedUpBandWidth=hwMusaSlotUsedUpBandWidth, hwMusaNmsPvcConfEntry=hwMusaNmsPvcConfEntry, hwMusaWarningTerminalCtrl=hwMusaWarningTerminalCtrl, hwMusaCellbusID=hwMusaCellbusID, hwMusaSrcCescChannelId=hwMusaSrcCescChannelId, hwMusaFrame=hwMusaFrame, hwMusaSlotCardOperStatus=hwMusaSlotCardOperStatus, hwMusaSrcFrameId=hwMusaSrcFrameId, hwMusaLoadRateTable=hwMusaLoadRateTable, hwMusaSrcFrcFreeBandwidth=hwMusaSrcFrcFreeBandwidth, hwMusaPatchType=hwMusaPatchType, hwMusaFrameType=hwMusaFrameType, hwMusaWarn15MinThreshold=hwMusaWarn15MinThreshold, hwMusaDestCescFillDegree=hwMusaDestCescFillDegree, hwMusaDestBoardVci=hwMusaDestBoardVci, hwMusaCurUsedDownBandWidth=hwMusaCurUsedDownBandWidth, hwMusaMacAddr=hwMusaMacAddr, hwMusaDestCescChannelBitmap=hwMusaDestCescChannelBitmap, hwMusaSysCpuRatio=hwMusaSysCpuRatio, hwMusaIpAddrPermitTable=hwMusaIpAddrPermitTable, hwMusaDestPortType=hwMusaDestPortType, hwMusaSlotDownBandWidth=hwMusaSlotDownBandWidth, hwMusaQueryCurLOCDNum=hwMusaQueryCurLOCDNum, hwMusaQueryCurBIP3=hwMusaQueryCurBIP3, hwMusaSysRouteEntry=hwMusaSysRouteEntry, hwMusaPatchShowIdIndex=hwMusaPatchShowIdIndex, hwMusaAtmIpAddr=hwMusaAtmIpAddr, hwMusaSrcCescV35N=hwMusaSrcCescV35N, hwMusaDestToSrcTraffic=hwMusaDestToSrcTraffic, hwMusaTrafficRtvbrScrEntry=hwMusaTrafficRtvbrScrEntry, hwMusaLoadType=hwMusaLoadType, hwMusaPatchIdIndex=hwMusaPatchIdIndex, hwMusaDownPracticalBandWidth=hwMusaDownPracticalBandWidth, hwMusaInsertPAIS=hwMusaInsertPAIS, hwMusaFrameBandWidth=hwMusaFrameBandWidth, hwMusaQueryCurPFEBE=hwMusaQueryCurPFEBE, hwMusaShelfNumber=hwMusaShelfNumber, hwMusaQueryMemory=hwMusaQueryMemory, hwMusaDestPortVlanVccId=hwMusaDestPortVlanVccId, hwMusaShelfIndex=hwMusaShelfIndex, hwMusaFrameIndex=hwMusaFrameIndex, hwMusaRefCount=hwMusaRefCount, hwMusaTrafficCbrPcrTable=hwMusaTrafficCbrPcrTable, hwMusaWarningDesc=hwMusaWarningDesc, hwMusaPermitIpMask=hwMusaPermitIpMask, hwMusaDestCescV35N=hwMusaDestCescV35N, hwMusaDnOpticMainBandWidth=hwMusaDnOpticMainBandWidth, hwMusaFromLanTrafficId=hwMusaFromLanTrafficId, hwMusaTrapPort=hwMusaTrapPort, hwMusaSrcCescFillDegree=hwMusaSrcCescFillDegree, hwMusaTrafficRtvbrScrTable=hwMusaTrafficRtvbrScrTable, hwMusaSrcPortType=hwMusaSrcPortType, hwMusaPatchCRC=hwMusaPatchCRC, hwMusaServiceClass=hwMusaServiceClass, hwMusaFrameName=hwMusaFrameName, hwMusaNmsPvcIndex=hwMusaNmsPvcIndex, hwMusaSlotNumbers=hwMusaSlotNumbers, hwMusaNmsRelayVpi=hwMusaNmsRelayVpi, hwMusaInsertLOF=hwMusaInsertLOF, hwMusaSlotIpAddress=hwMusaSlotIpAddress, hwMusaClp0scr=hwMusaClp0scr, hwMusaUpReservedBandWidth=hwMusaUpReservedBandWidth, hwMusaCbrPcrRefCount=hwMusaCbrPcrRefCount, hwMusaRtvbrScrRefCount=hwMusaRtvbrScrRefCount, hwMusaCidIndex=hwMusaCidIndex, hwMusaDestSlotId=hwMusaDestSlotId, hwMusaClp01scr=hwMusaClp01scr, hwMusaSlotGroup=hwMusaSlotGroup, hwMusaQueryCurBIP2=hwMusaQueryCurBIP2, hwMusaAdlPortOperat=hwMusaAdlPortOperat, hwMusaOpticConvergentRate=hwMusaOpticConvergentRate, hwMusaNmsParaConfTable=hwMusaNmsParaConfTable, hwMusaLoadRate=hwMusaLoadRate, hwMusaGatewayIpAddr=hwMusaGatewayIpAddr, hwMusaLoadFileName=hwMusaLoadFileName, hwMusaPvcTrafficStatisEntry=hwMusaPvcTrafficStatisEntry, hwMusaSlotCardAdminStatus=hwMusaSlotCardAdminStatus, hwMusaDestOnuId=hwMusaDestOnuId, hwMusaLoadRateEntry=hwMusaLoadRateEntry, hwMusaResetSlaveMMX=hwMusaResetSlaveMMX, hwMusaQueryCurOOFNum=hwMusaQueryCurOOFNum, hwMusaDestFrcActiveStatus=hwMusaDestFrcActiveStatus, hwMusaPatchLoadSerIp=hwMusaPatchLoadSerIp, hwMusaSetCommunity=hwMusaSetCommunity, hwMusaPatchDataAddress=hwMusaPatchDataAddress, hwMa5100EndOfMib=hwMa5100EndOfMib, hwMuasSrcSlotId=hwMuasSrcSlotId, hwMusaUpPracticalBandWidth=hwMusaUpPracticalBandWidth, hwMusaSlotUsedDownBandWidth=hwMusaSlotUsedDownBandWidth, hwMusaNmsStyle=hwMusaNmsStyle, hwMusaNmsENCAP=hwMusaNmsENCAP, hwMusaFrameNumber=hwMusaFrameNumber, hwMusaNmsParaConfEntry=hwMusaNmsParaConfEntry, hwMusaClearAllAlarmStat=hwMusaClearAllAlarmStat, hwMusaSrcOnuId=hwMusaSrcOnuId, hwMusaSrcCescChannelBitmap=hwMusaSrcCescChannelBitmap, hwMusaWarningLevel=hwMusaWarningLevel, hwMusaAllPvcOperater=hwMusaAllPvcOperater, hwMusaPatchState=hwMusaPatchState, hwMusaOpticBandwidthTable=hwMusaOpticBandwidthTable, hwMusaWarningEngDesc=hwMusaWarningEngDesc, hwMusaNmsIp=hwMusaNmsIp, hwMusaIpAddrRejectTable=hwMusaIpAddrRejectTable, hwMusaIpPermitTableId=hwMusaIpPermitTableId, hwMusaSlotCardType=hwMusaSlotCardType, hwMusaGetCommunity=hwMusaGetCommunity, hwMusaSetUtopiaLoop=hwMusaSetUtopiaLoop, hwMusaWarningCtrlEntry=hwMusaWarningCtrlEntry, hwMusaUpStreamTrafficRx=hwMusaUpStreamTrafficRx, hwMusaSlot=hwMusaSlot, hwMusaTrafficCbrPcrEntry=hwMusaTrafficCbrPcrEntry, hwMusaPvcCidTable=hwMusaPvcCidTable, hwMusaDevice=hwMusaDevice, hwMusaSetSrcLoop=hwMusaSetSrcLoop, hwMusaQueryCurCorrectHECNum=hwMusaQueryCurCorrectHECNum, hwMusaSlotCardSerial=hwMusaSlotCardSerial, hwMusaCbrPcrValue=hwMusaCbrPcrValue, hwMusaRtvbrScrValue=hwMusaRtvbrScrValue, hwMusaDstIp=hwMusaDstIp, hwMusaRtvbrScrIndex=hwMusaRtvbrScrIndex, hwMusaTrafficIndex=hwMusaTrafficIndex, hwMusaNmsSlotId=hwMusaNmsSlotId, hwMusaNmsRelayVci=hwMusaNmsRelayVci, hwMusaQueryCurReceiveCellNum=hwMusaQueryCurReceiveCellNum, hwMusaPatchFunctionNumber=hwMusaPatchFunctionNumber, hwMusaPermitBeginIp=hwMusaPermitBeginIp, hwMusaNmsPvcOper=hwMusaNmsPvcOper, hwMusaAdlVci=hwMusaAdlVci, hwMusaSlotConfEntry=hwMusaSlotConfEntry, hwMusaAtmIpMask=hwMusaAtmIpMask, hwMusaDstIpMask=hwMusaDstIpMask, hwMusaOpticBandwidthEntry=hwMusaOpticBandwidthEntry, hwMusaGetSetPort=hwMusaGetSetPort, hwMusaSlotDescript=hwMusaSlotDescript, hwMusaDownStreamTrafficTx=hwMusaDownStreamTrafficTx, hwMusaPatchOperateTable=hwMusaPatchOperateTable, hwMusaIpAddrRejectEntry=hwMusaIpAddrRejectEntry, hwMusaSysDate=hwMusaSysDate, hwMusaWarningIsCount=hwMusaWarningIsCount, hwMusaQueryCurLFEBE=hwMusaQueryCurLFEBE, hwMusaBiosVersion=hwMusaBiosVersion, hwMusaBoardCellLossPriority=hwMusaBoardCellLossPriority, hwMusaPatchCodeAddress=hwMusaPatchCodeAddress, hwMusaRejectBeginIp=hwMusaRejectBeginIp, hwMusaSysMib=hwMusaSysMib, hwMusaRecordState=hwMusaRecordState, hwMusaLoadProtocol=hwMusaLoadProtocol, hwMusaShelf=hwMusaShelf, hwMusaHostVersion=hwMusaHostVersion, hwMusaNmsSarVci=hwMusaNmsSarVci, hwMusaTrafficType=hwMusaTrafficType, hwMusaAdlVpi=hwMusaAdlVpi)
mibBuilder.exportSymbols("HUAWEI-MUSA-MA5100-MIB", hwMusaSrcBoardVpi=hwMusaSrcBoardVpi, hwMa5100Mib=hwMa5100Mib, hwMusaRejectIpMask=hwMusaRejectIpMask, hwMusaCampusPvcConfEntry=hwMusaCampusPvcConfEntry, hwMusaNmsPortVlanId=hwMusaNmsPortVlanId, hwMusaGateIp=hwMusaGateIp, hwMusaRejectEndIp=hwMusaRejectEndIp, hwMusaSrcToDestTraffic=hwMusaSrcToDestTraffic, hwMusaNmsID=hwMusaNmsID, hwMusaWarningCtrlTable=hwMusaWarningCtrlTable, hwMusaSysRouteIndex=hwMusaSysRouteIndex, hwMusaCDVT=hwMusaCDVT, hwMusaDestFrcDlciType=hwMusaDestFrcDlciType, hwMusaOamGroup=hwMusaOamGroup, hwMusaBoardMaxBandwidth=hwMusaBoardMaxBandwidth, hwMusaWarningNmsCtrl=hwMusaWarningNmsCtrl, hwMusaDestFrcFreeBandwidth=hwMusaDestFrcFreeBandwidth, hwMusaNmsOperState=hwMusaNmsOperState, hwMusaNmsPvcConfTable=hwMusaNmsPvcConfTable, hwMusaAdlFrameId=hwMusaAdlFrameId, hwMusaNmsStatus=hwMusaNmsStatus, hwMusaNmsLLCVC=hwMusaNmsLLCVC, hwMusaOimOpticEntry=hwMusaOimOpticEntry, hwMusaFrameNumbers=hwMusaFrameNumbers, hwMusaDownReservedBandWidth=hwMusaDownReservedBandWidth)
