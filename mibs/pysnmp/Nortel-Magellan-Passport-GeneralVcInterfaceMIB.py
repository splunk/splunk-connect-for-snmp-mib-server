#
# PySNMP MIB module Nortel-Magellan-Passport-GeneralVcInterfaceMIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/Nortel-Magellan-Passport-GeneralVcInterfaceMIB
# Produced by pysmi-0.3.4 at Mon Apr 29 20:17:54 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ValueSizeConstraint, SingleValueConstraint, ConstraintsIntersection, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ValueSizeConstraint", "SingleValueConstraint", "ConstraintsIntersection", "ConstraintsUnion")
InterfaceIndex, Integer32, RowPointer, DisplayString, StorageType, Counter32, RowStatus, Gauge32, Unsigned32 = mibBuilder.importSymbols("Nortel-Magellan-Passport-StandardTextualConventionsMIB", "InterfaceIndex", "Integer32", "RowPointer", "DisplayString", "StorageType", "Counter32", "RowStatus", "Gauge32", "Unsigned32")
DigitString, NonReplicated, AsciiString, Link, HexString, DashedHexString, EnterpriseDateAndTime, Hex = mibBuilder.importSymbols("Nortel-Magellan-Passport-TextualConventionsMIB", "DigitString", "NonReplicated", "AsciiString", "Link", "HexString", "DashedHexString", "EnterpriseDateAndTime", "Hex")
components, passportMIBs = mibBuilder.importSymbols("Nortel-Magellan-Passport-UsefulDefinitionsMIB", "components", "passportMIBs")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Integer32, IpAddress, MibIdentifier, Unsigned32, TimeTicks, MibScalar, MibTable, MibTableRow, MibTableColumn, NotificationType, ModuleIdentity, iso, Counter32, Counter64, Bits, Gauge32, ObjectIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "Integer32", "IpAddress", "MibIdentifier", "Unsigned32", "TimeTicks", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "NotificationType", "ModuleIdentity", "iso", "Counter32", "Counter64", "Bits", "Gauge32", "ObjectIdentity")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
generalVcInterfaceMIB = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 58))
gvcIf = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107))
gvcIfRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 1), )
if mibBuilder.loadTexts: gvcIfRowStatusTable.setStatus('mandatory')
gvcIfRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-GeneralVcInterfaceMIB", "gvcIfIndex"))
if mibBuilder.loadTexts: gvcIfRowStatusEntry.setStatus('mandatory')
gvcIfRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: gvcIfRowStatus.setStatus('mandatory')
gvcIfComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gvcIfComponentName.setStatus('mandatory')
gvcIfStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gvcIfStorageType.setStatus('mandatory')
gvcIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 15)))
if mibBuilder.loadTexts: gvcIfIndex.setStatus('mandatory')
gvcIfCidDataTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 30), )
if mibBuilder.loadTexts: gvcIfCidDataTable.setStatus('mandatory')
gvcIfCidDataEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 30, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-GeneralVcInterfaceMIB", "gvcIfIndex"))
if mibBuilder.loadTexts: gvcIfCidDataEntry.setStatus('mandatory')
gvcIfCustomerIdentifier = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 30, 1, 1), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 8191), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: gvcIfCustomerIdentifier.setStatus('mandatory')
gvcIfProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 31), )
if mibBuilder.loadTexts: gvcIfProvTable.setStatus('mandatory')
gvcIfProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 31, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-GeneralVcInterfaceMIB", "gvcIfIndex"))
if mibBuilder.loadTexts: gvcIfProvEntry.setStatus('mandatory')
gvcIfLogicalProcessor = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 31, 1, 1), Link()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: gvcIfLogicalProcessor.setStatus('mandatory')
gvcIfMaxActiveLinkStation = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 31, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 5000)).clone(100)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: gvcIfMaxActiveLinkStation.setStatus('mandatory')
gvcIfStateTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 32), )
if mibBuilder.loadTexts: gvcIfStateTable.setStatus('mandatory')
gvcIfStateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 32, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-GeneralVcInterfaceMIB", "gvcIfIndex"))
if mibBuilder.loadTexts: gvcIfStateEntry.setStatus('mandatory')
gvcIfAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 32, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("locked", 0), ("unlocked", 1), ("shuttingDown", 2))).clone('unlocked')).setMaxAccess("readonly")
if mibBuilder.loadTexts: gvcIfAdminState.setStatus('mandatory')
gvcIfOperationalState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 32, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1))).clone('disabled')).setMaxAccess("readonly")
if mibBuilder.loadTexts: gvcIfOperationalState.setStatus('mandatory')
gvcIfUsageState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 32, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("idle", 0), ("active", 1), ("busy", 2))).clone('idle')).setMaxAccess("readonly")
if mibBuilder.loadTexts: gvcIfUsageState.setStatus('mandatory')
gvcIfOpTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 33), )
if mibBuilder.loadTexts: gvcIfOpTable.setStatus('mandatory')
gvcIfOpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 33, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-GeneralVcInterfaceMIB", "gvcIfIndex"))
if mibBuilder.loadTexts: gvcIfOpEntry.setStatus('mandatory')
gvcIfActiveLinkStations = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 33, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 5000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: gvcIfActiveLinkStations.setStatus('mandatory')
gvcIfIssueLcnClearAlarm = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 33, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disallowed", 0), ("allowed", 1))).clone('disallowed')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: gvcIfIssueLcnClearAlarm.setStatus('mandatory')
gvcIfActiveQllcCalls = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 33, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 5000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: gvcIfActiveQllcCalls.setStatus('mandatory')
gvcIfStatsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 34), )
if mibBuilder.loadTexts: gvcIfStatsTable.setStatus('mandatory')
gvcIfStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 34, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-GeneralVcInterfaceMIB", "gvcIfIndex"))
if mibBuilder.loadTexts: gvcIfStatsEntry.setStatus('mandatory')
gvcIfCallsToNetwork = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 34, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gvcIfCallsToNetwork.setStatus('mandatory')
gvcIfCallsFromNetwork = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 34, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gvcIfCallsFromNetwork.setStatus('mandatory')
gvcIfCallsRefusedByNetwork = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 34, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gvcIfCallsRefusedByNetwork.setStatus('mandatory')
gvcIfCallsRefusedByInterface = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 34, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gvcIfCallsRefusedByInterface.setStatus('mandatory')
gvcIfPeakActiveLinkStations = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 34, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 5000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: gvcIfPeakActiveLinkStations.setStatus('mandatory')
gvcIfBcastFramesDiscarded = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 34, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gvcIfBcastFramesDiscarded.setStatus('mandatory')
gvcIfDiscardedQllcCalls = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 34, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gvcIfDiscardedQllcCalls.setStatus('mandatory')
gvcIfDc = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 2))
gvcIfDcRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 2, 1), )
if mibBuilder.loadTexts: gvcIfDcRowStatusTable.setStatus('mandatory')
gvcIfDcRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 2, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-GeneralVcInterfaceMIB", "gvcIfIndex"), (0, "Nortel-Magellan-Passport-GeneralVcInterfaceMIB", "gvcIfDcMacIndex"), (0, "Nortel-Magellan-Passport-GeneralVcInterfaceMIB", "gvcIfDcSapIndex"))
if mibBuilder.loadTexts: gvcIfDcRowStatusEntry.setStatus('mandatory')
gvcIfDcRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 2, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: gvcIfDcRowStatus.setStatus('mandatory')
gvcIfDcComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 2, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gvcIfDcComponentName.setStatus('mandatory')
gvcIfDcStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 2, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gvcIfDcStorageType.setStatus('mandatory')
gvcIfDcMacIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 2, 1, 1, 10), DashedHexString().subtype(subtypeSpec=ValueSizeConstraint(6, 6)).setFixedLength(6))
if mibBuilder.loadTexts: gvcIfDcMacIndex.setStatus('mandatory')
gvcIfDcSapIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 2, 1, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(2, 254)))
if mibBuilder.loadTexts: gvcIfDcSapIndex.setStatus('mandatory')
gvcIfDcOptionsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 2, 10), )
if mibBuilder.loadTexts: gvcIfDcOptionsTable.setStatus('mandatory')
gvcIfDcOptionsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 2, 10, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-GeneralVcInterfaceMIB", "gvcIfIndex"), (0, "Nortel-Magellan-Passport-GeneralVcInterfaceMIB", "gvcIfDcMacIndex"), (0, "Nortel-Magellan-Passport-GeneralVcInterfaceMIB", "gvcIfDcSapIndex"))
if mibBuilder.loadTexts: gvcIfDcOptionsEntry.setStatus('mandatory')
gvcIfDcRemoteNpi = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 2, 10, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("x121", 0), ("e164", 1))).clone('x121')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: gvcIfDcRemoteNpi.setStatus('mandatory')
gvcIfDcRemoteDna = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 2, 10, 1, 4), DigitString().subtype(subtypeSpec=ValueSizeConstraint(1, 15))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: gvcIfDcRemoteDna.setStatus('mandatory')
gvcIfDcUserData = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 2, 10, 1, 8), HexString().subtype(subtypeSpec=ValueSizeConstraint(0, 128)).clone(hexValue="C3000000")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: gvcIfDcUserData.setStatus('mandatory')
gvcIfDcTransferPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 2, 10, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 9, 255))).clone(namedValues=NamedValues(("normal", 0), ("high", 9), ("useDnaDefTP", 255))).clone('useDnaDefTP')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: gvcIfDcTransferPriority.setStatus('mandatory')
gvcIfDcDiscardPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 2, 10, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 3))).clone(namedValues=NamedValues(("normal", 0), ("high", 1), ("useDnaDefPriority", 3))).clone('useDnaDefPriority')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: gvcIfDcDiscardPriority.setStatus('mandatory')
gvcIfDcCfaTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 2, 490), )
if mibBuilder.loadTexts: gvcIfDcCfaTable.setStatus('mandatory')
gvcIfDcCfaEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 2, 490, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-GeneralVcInterfaceMIB", "gvcIfIndex"), (0, "Nortel-Magellan-Passport-GeneralVcInterfaceMIB", "gvcIfDcMacIndex"), (0, "Nortel-Magellan-Passport-GeneralVcInterfaceMIB", "gvcIfDcSapIndex"), (0, "Nortel-Magellan-Passport-GeneralVcInterfaceMIB", "gvcIfDcCfaIndex"))
if mibBuilder.loadTexts: gvcIfDcCfaEntry.setStatus('mandatory')
gvcIfDcCfaIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 2, 490, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(1, 1), ValueRangeConstraint(2, 2), ValueRangeConstraint(3, 3), ValueRangeConstraint(4, 4), ValueRangeConstraint(9, 9), ValueRangeConstraint(66, 66), ValueRangeConstraint(67, 67), ValueRangeConstraint(68, 68), ValueRangeConstraint(71, 71), ValueRangeConstraint(72, 72), ValueRangeConstraint(73, 73), ValueRangeConstraint(196, 196), ValueRangeConstraint(198, 198), )))
if mibBuilder.loadTexts: gvcIfDcCfaIndex.setStatus('mandatory')
gvcIfDcCfaValue = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 2, 490, 1, 2), HexString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: gvcIfDcCfaValue.setStatus('mandatory')
gvcIfDcCfaRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 2, 490, 1, 3), RowStatus()).setMaxAccess("writeonly")
if mibBuilder.loadTexts: gvcIfDcCfaRowStatus.setStatus('mandatory')
gvcIfRDnaMap = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 3))
gvcIfRDnaMapRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 3, 1), )
if mibBuilder.loadTexts: gvcIfRDnaMapRowStatusTable.setStatus('mandatory')
gvcIfRDnaMapRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 3, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-GeneralVcInterfaceMIB", "gvcIfIndex"), (0, "Nortel-Magellan-Passport-GeneralVcInterfaceMIB", "gvcIfRDnaMapNpiIndex"), (0, "Nortel-Magellan-Passport-GeneralVcInterfaceMIB", "gvcIfRDnaMapDnaIndex"))
if mibBuilder.loadTexts: gvcIfRDnaMapRowStatusEntry.setStatus('mandatory')
gvcIfRDnaMapRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 3, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: gvcIfRDnaMapRowStatus.setStatus('mandatory')
gvcIfRDnaMapComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 3, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gvcIfRDnaMapComponentName.setStatus('mandatory')
gvcIfRDnaMapStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 3, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gvcIfRDnaMapStorageType.setStatus('mandatory')
gvcIfRDnaMapNpiIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 3, 1, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("x121", 0), ("e164", 1))))
if mibBuilder.loadTexts: gvcIfRDnaMapNpiIndex.setStatus('mandatory')
gvcIfRDnaMapDnaIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 3, 1, 1, 11), DigitString().subtype(subtypeSpec=ValueSizeConstraint(1, 15)))
if mibBuilder.loadTexts: gvcIfRDnaMapDnaIndex.setStatus('mandatory')
gvcIfRDnaMapLanAdTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 3, 10), )
if mibBuilder.loadTexts: gvcIfRDnaMapLanAdTable.setStatus('mandatory')
gvcIfRDnaMapLanAdEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 3, 10, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-GeneralVcInterfaceMIB", "gvcIfIndex"), (0, "Nortel-Magellan-Passport-GeneralVcInterfaceMIB", "gvcIfRDnaMapNpiIndex"), (0, "Nortel-Magellan-Passport-GeneralVcInterfaceMIB", "gvcIfRDnaMapDnaIndex"))
if mibBuilder.loadTexts: gvcIfRDnaMapLanAdEntry.setStatus('mandatory')
gvcIfRDnaMapMac = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 3, 10, 1, 2), DashedHexString().subtype(subtypeSpec=ValueSizeConstraint(6, 6)).setFixedLength(6)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: gvcIfRDnaMapMac.setStatus('mandatory')
gvcIfRDnaMapSap = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 3, 10, 1, 3), Hex().subtype(subtypeSpec=ValueRangeConstraint(2, 254)).clone(4)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: gvcIfRDnaMapSap.setStatus('mandatory')
gvcIfLcn = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 4))
gvcIfLcnRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 4, 1), )
if mibBuilder.loadTexts: gvcIfLcnRowStatusTable.setStatus('mandatory')
gvcIfLcnRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 4, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-GeneralVcInterfaceMIB", "gvcIfIndex"), (0, "Nortel-Magellan-Passport-GeneralVcInterfaceMIB", "gvcIfLcnIndex"))
if mibBuilder.loadTexts: gvcIfLcnRowStatusEntry.setStatus('mandatory')
gvcIfLcnRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 4, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gvcIfLcnRowStatus.setStatus('mandatory')
gvcIfLcnComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 4, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gvcIfLcnComponentName.setStatus('mandatory')
gvcIfLcnStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 4, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gvcIfLcnStorageType.setStatus('mandatory')
gvcIfLcnIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 4, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4095)))
if mibBuilder.loadTexts: gvcIfLcnIndex.setStatus('mandatory')
gvcIfLcnStateTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 4, 11), )
if mibBuilder.loadTexts: gvcIfLcnStateTable.setStatus('mandatory')
gvcIfLcnStateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 4, 11, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-GeneralVcInterfaceMIB", "gvcIfIndex"), (0, "Nortel-Magellan-Passport-GeneralVcInterfaceMIB", "gvcIfLcnIndex"))
if mibBuilder.loadTexts: gvcIfLcnStateEntry.setStatus('mandatory')
gvcIfLcnAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 4, 11, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("locked", 0), ("unlocked", 1), ("shuttingDown", 2))).clone('unlocked')).setMaxAccess("readonly")
if mibBuilder.loadTexts: gvcIfLcnAdminState.setStatus('mandatory')
gvcIfLcnOperationalState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 4, 11, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1))).clone('disabled')).setMaxAccess("readonly")
if mibBuilder.loadTexts: gvcIfLcnOperationalState.setStatus('mandatory')
gvcIfLcnUsageState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 4, 11, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("idle", 0), ("active", 1), ("busy", 2))).clone('idle')).setMaxAccess("readonly")
if mibBuilder.loadTexts: gvcIfLcnUsageState.setStatus('mandatory')
gvcIfLcnLcnCIdTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 4, 12), )
if mibBuilder.loadTexts: gvcIfLcnLcnCIdTable.setStatus('mandatory')
gvcIfLcnLcnCIdEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 4, 12, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-GeneralVcInterfaceMIB", "gvcIfIndex"), (0, "Nortel-Magellan-Passport-GeneralVcInterfaceMIB", "gvcIfLcnIndex"))
if mibBuilder.loadTexts: gvcIfLcnLcnCIdEntry.setStatus('mandatory')
gvcIfLcnCircuitId = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 4, 12, 1, 1), RowPointer()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gvcIfLcnCircuitId.setStatus('mandatory')
gvcIfLcnOperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 4, 13), )
if mibBuilder.loadTexts: gvcIfLcnOperTable.setStatus('mandatory')
gvcIfLcnOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 4, 13, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-GeneralVcInterfaceMIB", "gvcIfIndex"), (0, "Nortel-Magellan-Passport-GeneralVcInterfaceMIB", "gvcIfLcnIndex"))
if mibBuilder.loadTexts: gvcIfLcnOperEntry.setStatus('mandatory')
gvcIfLcnState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 4, 13, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9))).clone(namedValues=NamedValues(("idle", 0), ("localDeviceCalling", 1), ("remoteDeviceCalling", 2), ("callUp", 3), ("serviceInitiatedClear", 4), ("localDeviceClearing", 5), ("remoteDeviceClearing", 6), ("terminating", 7), ("deviceMonitoring", 8), ("deviceMonitoringSuspended", 9)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: gvcIfLcnState.setStatus('mandatory')
gvcIfLcnDnaMap = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 4, 13, 1, 2), RowPointer()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gvcIfLcnDnaMap.setStatus('mandatory')
gvcIfLcnSourceMac = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 4, 13, 1, 3), DashedHexString().subtype(subtypeSpec=ValueSizeConstraint(6, 6)).setFixedLength(6)).setMaxAccess("readonly")
if mibBuilder.loadTexts: gvcIfLcnSourceMac.setStatus('mandatory')
gvcIfLcnVc = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 4, 2))
gvcIfLcnVcRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 4, 2, 1), )
if mibBuilder.loadTexts: gvcIfLcnVcRowStatusTable.setStatus('mandatory')
gvcIfLcnVcRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 4, 2, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-GeneralVcInterfaceMIB", "gvcIfIndex"), (0, "Nortel-Magellan-Passport-GeneralVcInterfaceMIB", "gvcIfLcnIndex"), (0, "Nortel-Magellan-Passport-GeneralVcInterfaceMIB", "gvcIfLcnVcIndex"))
if mibBuilder.loadTexts: gvcIfLcnVcRowStatusEntry.setStatus('mandatory')
gvcIfLcnVcRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 4, 2, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gvcIfLcnVcRowStatus.setStatus('mandatory')
gvcIfLcnVcComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 4, 2, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gvcIfLcnVcComponentName.setStatus('mandatory')
gvcIfLcnVcStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 4, 2, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gvcIfLcnVcStorageType.setStatus('mandatory')
gvcIfLcnVcIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 4, 2, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: gvcIfLcnVcIndex.setStatus('mandatory')
gvcIfLcnVcCadTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 4, 2, 10), )
if mibBuilder.loadTexts: gvcIfLcnVcCadTable.setStatus('mandatory')
gvcIfLcnVcCadEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 4, 2, 10, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-GeneralVcInterfaceMIB", "gvcIfIndex"), (0, "Nortel-Magellan-Passport-GeneralVcInterfaceMIB", "gvcIfLcnIndex"), (0, "Nortel-Magellan-Passport-GeneralVcInterfaceMIB", "gvcIfLcnVcIndex"))
if mibBuilder.loadTexts: gvcIfLcnVcCadEntry.setStatus('mandatory')
gvcIfLcnVcType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 4, 2, 10, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("svc", 0), ("pvc", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: gvcIfLcnVcType.setStatus('mandatory')
gvcIfLcnVcState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 4, 2, 10, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("creating", 0), ("readyP1", 1), ("dteWaitingP2", 2), ("dceWaitingP3", 3), ("dataTransferP4", 4), ("unsupportedP5", 5), ("dteClearRequestP6", 6), ("dceClearIndicationP7", 7), ("termination", 8)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: gvcIfLcnVcState.setStatus('mandatory')
gvcIfLcnVcPreviousState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 4, 2, 10, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("creating", 0), ("readyP1", 1), ("dteWaitingP2", 2), ("dceWaitingP3", 3), ("dataTransferP4", 4), ("unsupportedP5", 5), ("dteClearRequestP6", 6), ("dceClearIndicationP7", 7), ("termination", 8)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: gvcIfLcnVcPreviousState.setStatus('mandatory')
gvcIfLcnVcDiagnosticCode = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 4, 2, 10, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: gvcIfLcnVcDiagnosticCode.setStatus('mandatory')
gvcIfLcnVcPreviousDiagnosticCode = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 4, 2, 10, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: gvcIfLcnVcPreviousDiagnosticCode.setStatus('mandatory')
gvcIfLcnVcCalledNpi = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 4, 2, 10, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("x121", 0), ("e164", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: gvcIfLcnVcCalledNpi.setStatus('mandatory')
gvcIfLcnVcCalledDna = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 4, 2, 10, 1, 7), DigitString().subtype(subtypeSpec=ValueSizeConstraint(1, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: gvcIfLcnVcCalledDna.setStatus('mandatory')
gvcIfLcnVcCalledLcn = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 4, 2, 10, 1, 8), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: gvcIfLcnVcCalledLcn.setStatus('mandatory')
gvcIfLcnVcCallingNpi = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 4, 2, 10, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("x121", 0), ("e164", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: gvcIfLcnVcCallingNpi.setStatus('mandatory')
gvcIfLcnVcCallingDna = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 4, 2, 10, 1, 10), DigitString().subtype(subtypeSpec=ValueSizeConstraint(1, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: gvcIfLcnVcCallingDna.setStatus('mandatory')
gvcIfLcnVcCallingLcn = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 4, 2, 10, 1, 11), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: gvcIfLcnVcCallingLcn.setStatus('mandatory')
gvcIfLcnVcAccountingEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 4, 2, 10, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("yes", 0), ("no", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: gvcIfLcnVcAccountingEnabled.setStatus('mandatory')
gvcIfLcnVcFastSelectCall = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 4, 2, 10, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: gvcIfLcnVcFastSelectCall.setStatus('mandatory')
gvcIfLcnVcLocalRxPktSize = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 4, 2, 10, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 4, 5, 6, 7, 8, 9, 10, 11, 12))).clone(namedValues=NamedValues(("unknown", 0), ("n16", 4), ("n32", 5), ("n64", 6), ("n128", 7), ("n256", 8), ("n512", 9), ("n1024", 10), ("n2048", 11), ("n4096", 12)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: gvcIfLcnVcLocalRxPktSize.setStatus('mandatory')
gvcIfLcnVcLocalTxPktSize = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 4, 2, 10, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 4, 5, 6, 7, 8, 9, 10, 11, 12))).clone(namedValues=NamedValues(("unknown", 0), ("n16", 4), ("n32", 5), ("n64", 6), ("n128", 7), ("n256", 8), ("n512", 9), ("n1024", 10), ("n2048", 11), ("n4096", 12)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: gvcIfLcnVcLocalTxPktSize.setStatus('mandatory')
gvcIfLcnVcLocalTxWindowSize = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 4, 2, 10, 1, 16), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 127))).setMaxAccess("readonly")
if mibBuilder.loadTexts: gvcIfLcnVcLocalTxWindowSize.setStatus('mandatory')
gvcIfLcnVcLocalRxWindowSize = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 4, 2, 10, 1, 17), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 127))).setMaxAccess("readonly")
if mibBuilder.loadTexts: gvcIfLcnVcLocalRxWindowSize.setStatus('mandatory')
gvcIfLcnVcPathReliability = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 4, 2, 10, 1, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("high", 0), ("normal", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: gvcIfLcnVcPathReliability.setStatus('mandatory')
gvcIfLcnVcAccountingEnd = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 4, 2, 10, 1, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("callingEnd", 0), ("calledEnd", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: gvcIfLcnVcAccountingEnd.setStatus('mandatory')
gvcIfLcnVcPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 4, 2, 10, 1, 21), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("normal", 0), ("high", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: gvcIfLcnVcPriority.setStatus('mandatory')
gvcIfLcnVcSegmentSize = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 4, 2, 10, 1, 22), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4096))).setMaxAccess("readonly")
if mibBuilder.loadTexts: gvcIfLcnVcSegmentSize.setStatus('mandatory')
gvcIfLcnVcSubnetTxPktSize = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 4, 2, 10, 1, 23), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 4, 5, 6, 7, 8, 9, 10, 11, 12))).clone(namedValues=NamedValues(("unknown", 0), ("n16", 4), ("n32", 5), ("n64", 6), ("n128", 7), ("n256", 8), ("n512", 9), ("n1024", 10), ("n2048", 11), ("n4096", 12)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: gvcIfLcnVcSubnetTxPktSize.setStatus('mandatory')
gvcIfLcnVcSubnetTxWindowSize = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 4, 2, 10, 1, 24), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4096))).setMaxAccess("readonly")
if mibBuilder.loadTexts: gvcIfLcnVcSubnetTxWindowSize.setStatus('mandatory')
gvcIfLcnVcSubnetRxPktSize = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 4, 2, 10, 1, 25), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 4, 5, 6, 7, 8, 9, 10, 11, 12))).clone(namedValues=NamedValues(("unknown", 0), ("n16", 4), ("n32", 5), ("n64", 6), ("n128", 7), ("n256", 8), ("n512", 9), ("n1024", 10), ("n2048", 11), ("n4096", 12)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: gvcIfLcnVcSubnetRxPktSize.setStatus('mandatory')
gvcIfLcnVcSubnetRxWindowSize = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 4, 2, 10, 1, 26), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4096))).setMaxAccess("readonly")
if mibBuilder.loadTexts: gvcIfLcnVcSubnetRxWindowSize.setStatus('mandatory')
gvcIfLcnVcMaxSubnetPktSize = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 4, 2, 10, 1, 27), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4096))).setMaxAccess("readonly")
if mibBuilder.loadTexts: gvcIfLcnVcMaxSubnetPktSize.setStatus('mandatory')
gvcIfLcnVcTransferPriorityToNetwork = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 4, 2, 10, 1, 28), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 9))).clone(namedValues=NamedValues(("normal", 0), ("high", 9)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: gvcIfLcnVcTransferPriorityToNetwork.setStatus('mandatory')
gvcIfLcnVcTransferPriorityFromNetwork = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 4, 2, 10, 1, 29), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 9))).clone(namedValues=NamedValues(("normal", 0), ("high", 9)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: gvcIfLcnVcTransferPriorityFromNetwork.setStatus('mandatory')
gvcIfLcnVcIntdTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 4, 2, 11), )
if mibBuilder.loadTexts: gvcIfLcnVcIntdTable.setStatus('mandatory')
gvcIfLcnVcIntdEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 4, 2, 11, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-GeneralVcInterfaceMIB", "gvcIfIndex"), (0, "Nortel-Magellan-Passport-GeneralVcInterfaceMIB", "gvcIfLcnIndex"), (0, "Nortel-Magellan-Passport-GeneralVcInterfaceMIB", "gvcIfLcnVcIndex"))
if mibBuilder.loadTexts: gvcIfLcnVcIntdEntry.setStatus('mandatory')
gvcIfLcnVcCallReferenceNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 4, 2, 11, 1, 1), Hex().subtype(subtypeSpec=ValueRangeConstraint(0, 16777215))).setMaxAccess("readonly")
if mibBuilder.loadTexts: gvcIfLcnVcCallReferenceNumber.setStatus('mandatory')
gvcIfLcnVcElapsedTimeTillNow = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 4, 2, 11, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 16777215))).setMaxAccess("readonly")
if mibBuilder.loadTexts: gvcIfLcnVcElapsedTimeTillNow.setStatus('mandatory')
gvcIfLcnVcSegmentsRx = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 4, 2, 11, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 16777215))).setMaxAccess("readonly")
if mibBuilder.loadTexts: gvcIfLcnVcSegmentsRx.setStatus('mandatory')
gvcIfLcnVcSegmentsSent = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 4, 2, 11, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 16777215))).setMaxAccess("readonly")
if mibBuilder.loadTexts: gvcIfLcnVcSegmentsSent.setStatus('mandatory')
gvcIfLcnVcStartTime = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 4, 2, 11, 1, 5), EnterpriseDateAndTime().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(19, 19), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: gvcIfLcnVcStartTime.setStatus('mandatory')
gvcIfLcnVcStatsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 4, 2, 12), )
if mibBuilder.loadTexts: gvcIfLcnVcStatsTable.setStatus('mandatory')
gvcIfLcnVcStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 4, 2, 12, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-GeneralVcInterfaceMIB", "gvcIfIndex"), (0, "Nortel-Magellan-Passport-GeneralVcInterfaceMIB", "gvcIfLcnIndex"), (0, "Nortel-Magellan-Passport-GeneralVcInterfaceMIB", "gvcIfLcnVcIndex"))
if mibBuilder.loadTexts: gvcIfLcnVcStatsEntry.setStatus('mandatory')
gvcIfLcnVcAckStackingTimeouts = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 4, 2, 12, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 5000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: gvcIfLcnVcAckStackingTimeouts.setStatus('mandatory')
gvcIfLcnVcOutOfRangeFrmFromSubnet = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 4, 2, 12, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 5000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: gvcIfLcnVcOutOfRangeFrmFromSubnet.setStatus('mandatory')
gvcIfLcnVcDuplicatesFromSubnet = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 4, 2, 12, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 5000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: gvcIfLcnVcDuplicatesFromSubnet.setStatus('mandatory')
gvcIfLcnVcFrmRetryTimeouts = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 4, 2, 12, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 5000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: gvcIfLcnVcFrmRetryTimeouts.setStatus('mandatory')
gvcIfLcnVcPeakRetryQueueSize = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 4, 2, 12, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 5000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: gvcIfLcnVcPeakRetryQueueSize.setStatus('mandatory')
gvcIfLcnVcPeakOoSeqQueueSize = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 4, 2, 12, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 5000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: gvcIfLcnVcPeakOoSeqQueueSize.setStatus('mandatory')
gvcIfLcnVcPeakOoSeqFrmForwarded = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 4, 2, 12, 1, 7), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 5000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: gvcIfLcnVcPeakOoSeqFrmForwarded.setStatus('mandatory')
gvcIfLcnVcPeakStackedAcksRx = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 4, 2, 12, 1, 8), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 5000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: gvcIfLcnVcPeakStackedAcksRx.setStatus('mandatory')
gvcIfLcnVcSubnetRecoveries = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 4, 2, 12, 1, 9), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 5000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: gvcIfLcnVcSubnetRecoveries.setStatus('mandatory')
gvcIfLcnVcWindowClosuresToSubnet = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 4, 2, 12, 1, 10), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 5000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: gvcIfLcnVcWindowClosuresToSubnet.setStatus('mandatory')
gvcIfLcnVcWindowClosuresFromSubnet = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 4, 2, 12, 1, 11), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 5000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: gvcIfLcnVcWindowClosuresFromSubnet.setStatus('mandatory')
gvcIfLcnVcWrTriggers = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 4, 2, 12, 1, 12), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 5000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: gvcIfLcnVcWrTriggers.setStatus('mandatory')
gvcIfDna = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 5))
gvcIfDnaRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 5, 1), )
if mibBuilder.loadTexts: gvcIfDnaRowStatusTable.setStatus('mandatory')
gvcIfDnaRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 5, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-GeneralVcInterfaceMIB", "gvcIfIndex"), (0, "Nortel-Magellan-Passport-GeneralVcInterfaceMIB", "gvcIfDnaIndex"))
if mibBuilder.loadTexts: gvcIfDnaRowStatusEntry.setStatus('mandatory')
gvcIfDnaRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 5, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: gvcIfDnaRowStatus.setStatus('mandatory')
gvcIfDnaComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 5, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gvcIfDnaComponentName.setStatus('mandatory')
gvcIfDnaStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 5, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gvcIfDnaStorageType.setStatus('mandatory')
gvcIfDnaIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 5, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 99)))
if mibBuilder.loadTexts: gvcIfDnaIndex.setStatus('mandatory')
gvcIfDnaAddrTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 5, 11), )
if mibBuilder.loadTexts: gvcIfDnaAddrTable.setStatus('mandatory')
gvcIfDnaAddrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 5, 11, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-GeneralVcInterfaceMIB", "gvcIfIndex"), (0, "Nortel-Magellan-Passport-GeneralVcInterfaceMIB", "gvcIfDnaIndex"))
if mibBuilder.loadTexts: gvcIfDnaAddrEntry.setStatus('mandatory')
gvcIfDnaNumberingPlanIndicator = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 5, 11, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("x121", 0), ("e164", 1))).clone('x121')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: gvcIfDnaNumberingPlanIndicator.setStatus('mandatory')
gvcIfDnaDataNetworkAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 5, 11, 1, 2), DigitString().subtype(subtypeSpec=ValueSizeConstraint(1, 15))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: gvcIfDnaDataNetworkAddress.setStatus('mandatory')
gvcIfDnaOutgoingOptionsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 5, 12), )
if mibBuilder.loadTexts: gvcIfDnaOutgoingOptionsTable.setStatus('mandatory')
gvcIfDnaOutgoingOptionsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 5, 12, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-GeneralVcInterfaceMIB", "gvcIfIndex"), (0, "Nortel-Magellan-Passport-GeneralVcInterfaceMIB", "gvcIfDnaIndex"))
if mibBuilder.loadTexts: gvcIfDnaOutgoingOptionsEntry.setStatus('mandatory')
gvcIfDnaOutDefaultPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 5, 12, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("normal", 0), ("high", 1))).clone('normal')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: gvcIfDnaOutDefaultPriority.setStatus('mandatory')
gvcIfDnaOutDefaultPathSensitivity = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 5, 12, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("throughput", 0), ("delay", 1))).clone('throughput')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: gvcIfDnaOutDefaultPathSensitivity.setStatus('mandatory')
gvcIfDnaOutDefaultPathReliability = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 5, 12, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("high", 0), ("normal", 1))).clone('high')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: gvcIfDnaOutDefaultPathReliability.setStatus('mandatory')
gvcIfDnaOutAccess = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 5, 12, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disallowed", 0), ("allowed", 1))).clone('allowed')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: gvcIfDnaOutAccess.setStatus('mandatory')
gvcIfDnaDefaultTransferPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 5, 12, 1, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 9))).clone(namedValues=NamedValues(("normal", 0), ("high", 9))).clone('normal')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: gvcIfDnaDefaultTransferPriority.setStatus('mandatory')
gvcIfDnaTransferPriorityOverRide = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 5, 12, 1, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1))).clone('yes')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: gvcIfDnaTransferPriorityOverRide.setStatus('mandatory')
gvcIfDnaIncomingOptionsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 5, 13), )
if mibBuilder.loadTexts: gvcIfDnaIncomingOptionsTable.setStatus('mandatory')
gvcIfDnaIncomingOptionsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 5, 13, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-GeneralVcInterfaceMIB", "gvcIfIndex"), (0, "Nortel-Magellan-Passport-GeneralVcInterfaceMIB", "gvcIfDnaIndex"))
if mibBuilder.loadTexts: gvcIfDnaIncomingOptionsEntry.setStatus('mandatory')
gvcIfDnaIncCalls = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 5, 13, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disallowed", 0), ("allowed", 1))).clone('allowed')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: gvcIfDnaIncCalls.setStatus('mandatory')
gvcIfDnaIncHighPriorityReverseCharge = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 5, 13, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disallowed", 0), ("allowed", 1))).clone('allowed')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: gvcIfDnaIncHighPriorityReverseCharge.setStatus('mandatory')
gvcIfDnaIncNormalPriorityReverseCharge = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 5, 13, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disallowed", 0), ("allowed", 1))).clone('allowed')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: gvcIfDnaIncNormalPriorityReverseCharge.setStatus('mandatory')
gvcIfDnaIncIntlNormalCharge = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 5, 13, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disallowed", 0), ("allowed", 1))).clone('allowed')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: gvcIfDnaIncIntlNormalCharge.setStatus('mandatory')
gvcIfDnaIncIntlReverseCharge = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 5, 13, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disallowed", 0), ("allowed", 1))).clone('allowed')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: gvcIfDnaIncIntlReverseCharge.setStatus('mandatory')
gvcIfDnaIncSameService = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 5, 13, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disallowed", 0), ("allowed", 1))).clone('allowed')).setMaxAccess("readonly")
if mibBuilder.loadTexts: gvcIfDnaIncSameService.setStatus('mandatory')
gvcIfDnaIncAccess = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 5, 13, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disallowed", 0), ("allowed", 1))).clone('allowed')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: gvcIfDnaIncAccess.setStatus('mandatory')
gvcIfDnaCallOptionsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 5, 14), )
if mibBuilder.loadTexts: gvcIfDnaCallOptionsTable.setStatus('mandatory')
gvcIfDnaCallOptionsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 5, 14, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-GeneralVcInterfaceMIB", "gvcIfIndex"), (0, "Nortel-Magellan-Passport-GeneralVcInterfaceMIB", "gvcIfDnaIndex"))
if mibBuilder.loadTexts: gvcIfDnaCallOptionsEntry.setStatus('mandatory')
gvcIfDnaServiceCategory = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 5, 14, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32))).clone(namedValues=NamedValues(("gsp", 0), ("x25", 1), ("enhancedIti", 2), ("ncs", 3), ("mlti", 4), ("sm", 5), ("ici", 6), ("dsp3270", 7), ("iam", 8), ("mlhi", 9), ("term3270", 10), ("iti", 11), ("bsi", 13), ("hostIti", 14), ("x75", 15), ("hdsp3270", 16), ("api3201", 20), ("sdlc", 21), ("snaMultiHost", 22), ("redirectionServ", 23), ("trSnaTpad", 24), ("offnetNui", 25), ("gasServer", 26), ("vapServer", 28), ("vapAgent", 29), ("frameRelay", 30), ("ipiVc", 31), ("gvcIf", 32))).clone('gvcIf')).setMaxAccess("readonly")
if mibBuilder.loadTexts: gvcIfDnaServiceCategory.setStatus('mandatory')
gvcIfDnaPacketSizes = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 5, 14, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(2, 2)).setFixedLength(2).clone(hexValue="ff80")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: gvcIfDnaPacketSizes.setStatus('mandatory')
gvcIfDnaDefaultRecvFrmNetworkPacketSize = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 5, 14, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(4, 5, 6, 7, 8, 9, 10, 11, 12))).clone(namedValues=NamedValues(("n16", 4), ("n32", 5), ("n64", 6), ("n128", 7), ("n256", 8), ("n512", 9), ("n1024", 10), ("n2048", 11), ("n4096", 12))).clone('n4096')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: gvcIfDnaDefaultRecvFrmNetworkPacketSize.setStatus('mandatory')
gvcIfDnaDefaultSendToNetworkPacketSize = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 5, 14, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(4, 5, 6, 7, 8, 9, 10, 11, 12))).clone(namedValues=NamedValues(("n16", 4), ("n32", 5), ("n64", 6), ("n128", 7), ("n256", 8), ("n512", 9), ("n1024", 10), ("n2048", 11), ("n4096", 12))).clone('n4096')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: gvcIfDnaDefaultSendToNetworkPacketSize.setStatus('mandatory')
gvcIfDnaDefaultRecvFrmNetworkThruputClass = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 5, 14, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 15)).clone(13)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: gvcIfDnaDefaultRecvFrmNetworkThruputClass.setStatus('mandatory')
gvcIfDnaDefaultSendToNetworkThruputClass = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 5, 14, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 15)).clone(13)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: gvcIfDnaDefaultSendToNetworkThruputClass.setStatus('mandatory')
gvcIfDnaDefaultRecvFrmNetworkWindowSize = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 5, 14, 1, 7), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 7)).clone(2)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: gvcIfDnaDefaultRecvFrmNetworkWindowSize.setStatus('mandatory')
gvcIfDnaDefaultSendToNetworkWindowSize = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 5, 14, 1, 8), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 7)).clone(2)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: gvcIfDnaDefaultSendToNetworkWindowSize.setStatus('mandatory')
gvcIfDnaPacketSizeNegotiation = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 5, 14, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("endToEnd", 0), ("local", 1))).clone('local')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: gvcIfDnaPacketSizeNegotiation.setStatus('mandatory')
gvcIfDnaCugFormat = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 5, 14, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("basic", 0), ("extended", 1))).clone('basic')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: gvcIfDnaCugFormat.setStatus('mandatory')
gvcIfDnaAccountClass = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 5, 14, 1, 16), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: gvcIfDnaAccountClass.setStatus('mandatory')
gvcIfDnaAccountCollection = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 5, 14, 1, 17), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 1)).setFixedLength(1).clone(hexValue="80")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: gvcIfDnaAccountCollection.setStatus('mandatory')
gvcIfDnaServiceExchange = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 5, 14, 1, 18), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: gvcIfDnaServiceExchange.setStatus('mandatory')
gvcIfDnaCug = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 5, 2))
gvcIfDnaCugRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 5, 2, 1), )
if mibBuilder.loadTexts: gvcIfDnaCugRowStatusTable.setStatus('mandatory')
gvcIfDnaCugRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 5, 2, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-GeneralVcInterfaceMIB", "gvcIfIndex"), (0, "Nortel-Magellan-Passport-GeneralVcInterfaceMIB", "gvcIfDnaIndex"), (0, "Nortel-Magellan-Passport-GeneralVcInterfaceMIB", "gvcIfDnaCugIndex"))
if mibBuilder.loadTexts: gvcIfDnaCugRowStatusEntry.setStatus('mandatory')
gvcIfDnaCugRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 5, 2, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: gvcIfDnaCugRowStatus.setStatus('mandatory')
gvcIfDnaCugComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 5, 2, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gvcIfDnaCugComponentName.setStatus('mandatory')
gvcIfDnaCugStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 5, 2, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gvcIfDnaCugStorageType.setStatus('mandatory')
gvcIfDnaCugIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 5, 2, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255)))
if mibBuilder.loadTexts: gvcIfDnaCugIndex.setStatus('mandatory')
gvcIfDnaCugCugOptionsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 5, 2, 10), )
if mibBuilder.loadTexts: gvcIfDnaCugCugOptionsTable.setStatus('mandatory')
gvcIfDnaCugCugOptionsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 5, 2, 10, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-GeneralVcInterfaceMIB", "gvcIfIndex"), (0, "Nortel-Magellan-Passport-GeneralVcInterfaceMIB", "gvcIfDnaIndex"), (0, "Nortel-Magellan-Passport-GeneralVcInterfaceMIB", "gvcIfDnaCugIndex"))
if mibBuilder.loadTexts: gvcIfDnaCugCugOptionsEntry.setStatus('mandatory')
gvcIfDnaCugType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 5, 2, 10, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("national", 0), ("international", 1))).clone('national')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: gvcIfDnaCugType.setStatus('mandatory')
gvcIfDnaCugDnic = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 5, 2, 10, 1, 2), DigitString().subtype(subtypeSpec=ValueSizeConstraint(4, 4)).setFixedLength(4).clone(hexValue="30303030")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: gvcIfDnaCugDnic.setStatus('mandatory')
gvcIfDnaCugInterlockCode = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 5, 2, 10, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: gvcIfDnaCugInterlockCode.setStatus('mandatory')
gvcIfDnaCugPreferential = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 5, 2, 10, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1))).clone('no')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: gvcIfDnaCugPreferential.setStatus('mandatory')
gvcIfDnaCugOutCalls = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 5, 2, 10, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disallowed", 0), ("allowed", 1))).clone('allowed')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: gvcIfDnaCugOutCalls.setStatus('mandatory')
gvcIfDnaCugIncCalls = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 5, 2, 10, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disallowed", 0), ("allowed", 1))).clone('allowed')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: gvcIfDnaCugIncCalls.setStatus('mandatory')
gvcIfDnaCugPrivileged = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 5, 2, 10, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1))).clone('yes')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: gvcIfDnaCugPrivileged.setStatus('mandatory')
gvcIfDnaHgM = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 5, 3))
gvcIfDnaHgMRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 5, 3, 1), )
if mibBuilder.loadTexts: gvcIfDnaHgMRowStatusTable.setStatus('mandatory')
gvcIfDnaHgMRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 5, 3, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-GeneralVcInterfaceMIB", "gvcIfIndex"), (0, "Nortel-Magellan-Passport-GeneralVcInterfaceMIB", "gvcIfDnaIndex"), (0, "Nortel-Magellan-Passport-GeneralVcInterfaceMIB", "gvcIfDnaHgMIndex"))
if mibBuilder.loadTexts: gvcIfDnaHgMRowStatusEntry.setStatus('mandatory')
gvcIfDnaHgMRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 5, 3, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: gvcIfDnaHgMRowStatus.setStatus('mandatory')
gvcIfDnaHgMComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 5, 3, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gvcIfDnaHgMComponentName.setStatus('mandatory')
gvcIfDnaHgMStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 5, 3, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gvcIfDnaHgMStorageType.setStatus('mandatory')
gvcIfDnaHgMIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 5, 3, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: gvcIfDnaHgMIndex.setStatus('mandatory')
gvcIfDnaHgMIfTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 5, 3, 10), )
if mibBuilder.loadTexts: gvcIfDnaHgMIfTable.setStatus('mandatory')
gvcIfDnaHgMIfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 5, 3, 10, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-GeneralVcInterfaceMIB", "gvcIfIndex"), (0, "Nortel-Magellan-Passport-GeneralVcInterfaceMIB", "gvcIfDnaIndex"), (0, "Nortel-Magellan-Passport-GeneralVcInterfaceMIB", "gvcIfDnaHgMIndex"))
if mibBuilder.loadTexts: gvcIfDnaHgMIfEntry.setStatus('mandatory')
gvcIfDnaHgMAvailabilityUpdateThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 5, 3, 10, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4096)).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: gvcIfDnaHgMAvailabilityUpdateThreshold.setStatus('mandatory')
gvcIfDnaHgMOpTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 5, 3, 11), )
if mibBuilder.loadTexts: gvcIfDnaHgMOpTable.setStatus('mandatory')
gvcIfDnaHgMOpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 5, 3, 11, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-GeneralVcInterfaceMIB", "gvcIfIndex"), (0, "Nortel-Magellan-Passport-GeneralVcInterfaceMIB", "gvcIfDnaIndex"), (0, "Nortel-Magellan-Passport-GeneralVcInterfaceMIB", "gvcIfDnaHgMIndex"))
if mibBuilder.loadTexts: gvcIfDnaHgMOpEntry.setStatus('mandatory')
gvcIfDnaHgMAvailabilityDelta = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 5, 3, 11, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-4096, 4096))).setMaxAccess("readonly")
if mibBuilder.loadTexts: gvcIfDnaHgMAvailabilityDelta.setStatus('mandatory')
gvcIfDnaHgMMaxAvailableLinkStations = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 5, 3, 11, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4096))).setMaxAccess("readonly")
if mibBuilder.loadTexts: gvcIfDnaHgMMaxAvailableLinkStations.setStatus('mandatory')
gvcIfDnaHgMAvailableLinkStations = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 5, 3, 11, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4096))).setMaxAccess("readonly")
if mibBuilder.loadTexts: gvcIfDnaHgMAvailableLinkStations.setStatus('mandatory')
gvcIfDnaHgMHgAddr = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 5, 3, 2))
gvcIfDnaHgMHgAddrRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 5, 3, 2, 1), )
if mibBuilder.loadTexts: gvcIfDnaHgMHgAddrRowStatusTable.setStatus('mandatory')
gvcIfDnaHgMHgAddrRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 5, 3, 2, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-GeneralVcInterfaceMIB", "gvcIfIndex"), (0, "Nortel-Magellan-Passport-GeneralVcInterfaceMIB", "gvcIfDnaIndex"), (0, "Nortel-Magellan-Passport-GeneralVcInterfaceMIB", "gvcIfDnaHgMIndex"), (0, "Nortel-Magellan-Passport-GeneralVcInterfaceMIB", "gvcIfDnaHgMHgAddrIndex"))
if mibBuilder.loadTexts: gvcIfDnaHgMHgAddrRowStatusEntry.setStatus('mandatory')
gvcIfDnaHgMHgAddrRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 5, 3, 2, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: gvcIfDnaHgMHgAddrRowStatus.setStatus('mandatory')
gvcIfDnaHgMHgAddrComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 5, 3, 2, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gvcIfDnaHgMHgAddrComponentName.setStatus('mandatory')
gvcIfDnaHgMHgAddrStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 5, 3, 2, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gvcIfDnaHgMHgAddrStorageType.setStatus('mandatory')
gvcIfDnaHgMHgAddrIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 5, 3, 2, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1)))
if mibBuilder.loadTexts: gvcIfDnaHgMHgAddrIndex.setStatus('mandatory')
gvcIfDnaHgMHgAddrAddrTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 5, 3, 2, 10), )
if mibBuilder.loadTexts: gvcIfDnaHgMHgAddrAddrTable.setStatus('mandatory')
gvcIfDnaHgMHgAddrAddrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 5, 3, 2, 10, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-GeneralVcInterfaceMIB", "gvcIfIndex"), (0, "Nortel-Magellan-Passport-GeneralVcInterfaceMIB", "gvcIfDnaIndex"), (0, "Nortel-Magellan-Passport-GeneralVcInterfaceMIB", "gvcIfDnaHgMIndex"), (0, "Nortel-Magellan-Passport-GeneralVcInterfaceMIB", "gvcIfDnaHgMHgAddrIndex"))
if mibBuilder.loadTexts: gvcIfDnaHgMHgAddrAddrEntry.setStatus('mandatory')
gvcIfDnaHgMHgAddrNumberingPlanIndicator = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 5, 3, 2, 10, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("x121", 0), ("e164", 1))).clone('x121')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: gvcIfDnaHgMHgAddrNumberingPlanIndicator.setStatus('mandatory')
gvcIfDnaHgMHgAddrDataNetworkAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 5, 3, 2, 10, 1, 2), DigitString().subtype(subtypeSpec=ValueSizeConstraint(1, 15))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: gvcIfDnaHgMHgAddrDataNetworkAddress.setStatus('mandatory')
gvcIfDnaDdm = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 5, 4))
gvcIfDnaDdmRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 5, 4, 1), )
if mibBuilder.loadTexts: gvcIfDnaDdmRowStatusTable.setStatus('mandatory')
gvcIfDnaDdmRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 5, 4, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-GeneralVcInterfaceMIB", "gvcIfIndex"), (0, "Nortel-Magellan-Passport-GeneralVcInterfaceMIB", "gvcIfDnaIndex"), (0, "Nortel-Magellan-Passport-GeneralVcInterfaceMIB", "gvcIfDnaDdmIndex"))
if mibBuilder.loadTexts: gvcIfDnaDdmRowStatusEntry.setStatus('mandatory')
gvcIfDnaDdmRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 5, 4, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: gvcIfDnaDdmRowStatus.setStatus('mandatory')
gvcIfDnaDdmComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 5, 4, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gvcIfDnaDdmComponentName.setStatus('mandatory')
gvcIfDnaDdmStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 5, 4, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gvcIfDnaDdmStorageType.setStatus('mandatory')
gvcIfDnaDdmIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 5, 4, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: gvcIfDnaDdmIndex.setStatus('mandatory')
gvcIfDnaDdmLanAdTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 5, 4, 10), )
if mibBuilder.loadTexts: gvcIfDnaDdmLanAdTable.setStatus('mandatory')
gvcIfDnaDdmLanAdEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 5, 4, 10, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-GeneralVcInterfaceMIB", "gvcIfIndex"), (0, "Nortel-Magellan-Passport-GeneralVcInterfaceMIB", "gvcIfDnaIndex"), (0, "Nortel-Magellan-Passport-GeneralVcInterfaceMIB", "gvcIfDnaDdmIndex"))
if mibBuilder.loadTexts: gvcIfDnaDdmLanAdEntry.setStatus('mandatory')
gvcIfDnaDdmMac = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 5, 4, 10, 1, 2), DashedHexString().subtype(subtypeSpec=ValueSizeConstraint(6, 6)).setFixedLength(6)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: gvcIfDnaDdmMac.setStatus('mandatory')
gvcIfDnaDdmSap = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 5, 4, 10, 1, 3), Hex().subtype(subtypeSpec=ValueRangeConstraint(2, 254)).clone(4)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: gvcIfDnaDdmSap.setStatus('mandatory')
gvcIfDnaDdmDmoTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 5, 4, 11), )
if mibBuilder.loadTexts: gvcIfDnaDdmDmoTable.setStatus('mandatory')
gvcIfDnaDdmDmoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 5, 4, 11, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-GeneralVcInterfaceMIB", "gvcIfIndex"), (0, "Nortel-Magellan-Passport-GeneralVcInterfaceMIB", "gvcIfDnaIndex"), (0, "Nortel-Magellan-Passport-GeneralVcInterfaceMIB", "gvcIfDnaDdmIndex"))
if mibBuilder.loadTexts: gvcIfDnaDdmDmoEntry.setStatus('mandatory')
gvcIfDnaDdmDeviceMonitoring = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 5, 4, 11, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: gvcIfDnaDdmDeviceMonitoring.setStatus('mandatory')
gvcIfDnaDdmClearVcsWhenUnreachable = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 5, 4, 11, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: gvcIfDnaDdmClearVcsWhenUnreachable.setStatus('mandatory')
gvcIfDnaDdmDeviceMonitoringTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 5, 4, 11, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 255)).clone(15)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: gvcIfDnaDdmDeviceMonitoringTimer.setStatus('mandatory')
gvcIfDnaDdmTestResponseTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 5, 4, 11, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 30)).clone(3)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: gvcIfDnaDdmTestResponseTimer.setStatus('mandatory')
gvcIfDnaDdmMaximumTestRetry = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 5, 4, 11, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 100)).clone(10)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: gvcIfDnaDdmMaximumTestRetry.setStatus('mandatory')
gvcIfDnaDdmDevOpTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 5, 4, 12), )
if mibBuilder.loadTexts: gvcIfDnaDdmDevOpTable.setStatus('mandatory')
gvcIfDnaDdmDevOpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 5, 4, 12, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-GeneralVcInterfaceMIB", "gvcIfIndex"), (0, "Nortel-Magellan-Passport-GeneralVcInterfaceMIB", "gvcIfDnaIndex"), (0, "Nortel-Magellan-Passport-GeneralVcInterfaceMIB", "gvcIfDnaDdmIndex"))
if mibBuilder.loadTexts: gvcIfDnaDdmDevOpEntry.setStatus('mandatory')
gvcIfDnaDdmDeviceStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 5, 4, 12, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("unreachable", 0), ("reachable", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: gvcIfDnaDdmDeviceStatus.setStatus('mandatory')
gvcIfDnaDdmActiveLinkStations = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 5, 4, 12, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 5000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: gvcIfDnaDdmActiveLinkStations.setStatus('mandatory')
gvcIfDnaDdmLastTimeUnreachable = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 5, 4, 12, 1, 3), EnterpriseDateAndTime().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(19, 19), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: gvcIfDnaDdmLastTimeUnreachable.setStatus('mandatory')
gvcIfDnaDdmLastTimeReachable = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 5, 4, 12, 1, 4), EnterpriseDateAndTime().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(19, 19), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: gvcIfDnaDdmLastTimeReachable.setStatus('mandatory')
gvcIfDnaDdmDeviceUnreachable = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 5, 4, 12, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gvcIfDnaDdmDeviceUnreachable.setStatus('mandatory')
gvcIfDnaDdmMonitoringLcn = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 5, 4, 12, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4095))).setMaxAccess("readonly")
if mibBuilder.loadTexts: gvcIfDnaDdmMonitoringLcn.setStatus('mandatory')
gvcIfDnaSdm = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 5, 5))
gvcIfDnaSdmRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 5, 5, 1), )
if mibBuilder.loadTexts: gvcIfDnaSdmRowStatusTable.setStatus('mandatory')
gvcIfDnaSdmRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 5, 5, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-GeneralVcInterfaceMIB", "gvcIfIndex"), (0, "Nortel-Magellan-Passport-GeneralVcInterfaceMIB", "gvcIfDnaIndex"), (0, "Nortel-Magellan-Passport-GeneralVcInterfaceMIB", "gvcIfDnaSdmIndex"))
if mibBuilder.loadTexts: gvcIfDnaSdmRowStatusEntry.setStatus('mandatory')
gvcIfDnaSdmRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 5, 5, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: gvcIfDnaSdmRowStatus.setStatus('mandatory')
gvcIfDnaSdmComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 5, 5, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gvcIfDnaSdmComponentName.setStatus('mandatory')
gvcIfDnaSdmStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 5, 5, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gvcIfDnaSdmStorageType.setStatus('mandatory')
gvcIfDnaSdmIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 5, 5, 1, 1, 10), DigitString().subtype(subtypeSpec=ValueSizeConstraint(1, 15)))
if mibBuilder.loadTexts: gvcIfDnaSdmIndex.setStatus('mandatory')
gvcIfDnaSdmLanAdTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 5, 5, 10), )
if mibBuilder.loadTexts: gvcIfDnaSdmLanAdTable.setStatus('mandatory')
gvcIfDnaSdmLanAdEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 5, 5, 10, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-GeneralVcInterfaceMIB", "gvcIfIndex"), (0, "Nortel-Magellan-Passport-GeneralVcInterfaceMIB", "gvcIfDnaIndex"), (0, "Nortel-Magellan-Passport-GeneralVcInterfaceMIB", "gvcIfDnaSdmIndex"))
if mibBuilder.loadTexts: gvcIfDnaSdmLanAdEntry.setStatus('mandatory')
gvcIfDnaSdmMac = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 5, 5, 10, 1, 2), DashedHexString().subtype(subtypeSpec=ValueSizeConstraint(6, 6)).setFixedLength(6)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: gvcIfDnaSdmMac.setStatus('mandatory')
gvcIfDnaSdmSap = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 5, 5, 10, 1, 3), Hex().subtype(subtypeSpec=ValueRangeConstraint(2, 254)).clone(4)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: gvcIfDnaSdmSap.setStatus('mandatory')
gvcIfDnaSdmDmoTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 5, 5, 11), )
if mibBuilder.loadTexts: gvcIfDnaSdmDmoTable.setStatus('mandatory')
gvcIfDnaSdmDmoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 5, 5, 11, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-GeneralVcInterfaceMIB", "gvcIfIndex"), (0, "Nortel-Magellan-Passport-GeneralVcInterfaceMIB", "gvcIfDnaIndex"), (0, "Nortel-Magellan-Passport-GeneralVcInterfaceMIB", "gvcIfDnaSdmIndex"))
if mibBuilder.loadTexts: gvcIfDnaSdmDmoEntry.setStatus('mandatory')
gvcIfDnaSdmDeviceMonitoring = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 5, 5, 11, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: gvcIfDnaSdmDeviceMonitoring.setStatus('mandatory')
gvcIfDnaSdmClearVcsWhenUnreachable = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 5, 5, 11, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: gvcIfDnaSdmClearVcsWhenUnreachable.setStatus('mandatory')
gvcIfDnaSdmDeviceMonitoringTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 5, 5, 11, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 255)).clone(15)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: gvcIfDnaSdmDeviceMonitoringTimer.setStatus('mandatory')
gvcIfDnaSdmTestResponseTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 5, 5, 11, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 30)).clone(3)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: gvcIfDnaSdmTestResponseTimer.setStatus('mandatory')
gvcIfDnaSdmMaximumTestRetry = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 5, 5, 11, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 100)).clone(10)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: gvcIfDnaSdmMaximumTestRetry.setStatus('mandatory')
gvcIfDnaSdmDevOpTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 5, 5, 12), )
if mibBuilder.loadTexts: gvcIfDnaSdmDevOpTable.setStatus('mandatory')
gvcIfDnaSdmDevOpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 5, 5, 12, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-GeneralVcInterfaceMIB", "gvcIfIndex"), (0, "Nortel-Magellan-Passport-GeneralVcInterfaceMIB", "gvcIfDnaIndex"), (0, "Nortel-Magellan-Passport-GeneralVcInterfaceMIB", "gvcIfDnaSdmIndex"))
if mibBuilder.loadTexts: gvcIfDnaSdmDevOpEntry.setStatus('mandatory')
gvcIfDnaSdmDeviceStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 5, 5, 12, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("unreachable", 0), ("reachable", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: gvcIfDnaSdmDeviceStatus.setStatus('mandatory')
gvcIfDnaSdmActiveLinkStations = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 5, 5, 12, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 5000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: gvcIfDnaSdmActiveLinkStations.setStatus('mandatory')
gvcIfDnaSdmLastTimeUnreachable = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 5, 5, 12, 1, 3), EnterpriseDateAndTime().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(19, 19), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: gvcIfDnaSdmLastTimeUnreachable.setStatus('mandatory')
gvcIfDnaSdmLastTimeReachable = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 5, 5, 12, 1, 4), EnterpriseDateAndTime().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(19, 19), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: gvcIfDnaSdmLastTimeReachable.setStatus('mandatory')
gvcIfDnaSdmDeviceUnreachable = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 5, 5, 12, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gvcIfDnaSdmDeviceUnreachable.setStatus('mandatory')
gvcIfDnaSdmMonitoringLcn = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 5, 5, 12, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4095))).setMaxAccess("readonly")
if mibBuilder.loadTexts: gvcIfDnaSdmMonitoringLcn.setStatus('mandatory')
gvcIfRg = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 6))
gvcIfRgRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 6, 1), )
if mibBuilder.loadTexts: gvcIfRgRowStatusTable.setStatus('mandatory')
gvcIfRgRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 6, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-GeneralVcInterfaceMIB", "gvcIfIndex"), (0, "Nortel-Magellan-Passport-GeneralVcInterfaceMIB", "gvcIfRgIndex"))
if mibBuilder.loadTexts: gvcIfRgRowStatusEntry.setStatus('mandatory')
gvcIfRgRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 6, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: gvcIfRgRowStatus.setStatus('mandatory')
gvcIfRgComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 6, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gvcIfRgComponentName.setStatus('mandatory')
gvcIfRgStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 6, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gvcIfRgStorageType.setStatus('mandatory')
gvcIfRgIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 6, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 0)))
if mibBuilder.loadTexts: gvcIfRgIndex.setStatus('mandatory')
gvcIfRgIfEntryTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 6, 10), )
if mibBuilder.loadTexts: gvcIfRgIfEntryTable.setStatus('mandatory')
gvcIfRgIfEntryEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 6, 10, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-GeneralVcInterfaceMIB", "gvcIfIndex"), (0, "Nortel-Magellan-Passport-GeneralVcInterfaceMIB", "gvcIfRgIndex"))
if mibBuilder.loadTexts: gvcIfRgIfEntryEntry.setStatus('mandatory')
gvcIfRgIfAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 6, 10, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("testing", 3))).clone('up')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: gvcIfRgIfAdminStatus.setStatus('mandatory')
gvcIfRgIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 6, 10, 1, 2), InterfaceIndex().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: gvcIfRgIfIndex.setStatus('mandatory')
gvcIfRgProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 6, 11), )
if mibBuilder.loadTexts: gvcIfRgProvTable.setStatus('mandatory')
gvcIfRgProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 6, 11, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-GeneralVcInterfaceMIB", "gvcIfIndex"), (0, "Nortel-Magellan-Passport-GeneralVcInterfaceMIB", "gvcIfRgIndex"))
if mibBuilder.loadTexts: gvcIfRgProvEntry.setStatus('mandatory')
gvcIfRgLinkToProtocolPort = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 6, 11, 1, 1), Link()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: gvcIfRgLinkToProtocolPort.setStatus('mandatory')
gvcIfRgOperStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 6, 12), )
if mibBuilder.loadTexts: gvcIfRgOperStatusTable.setStatus('mandatory')
gvcIfRgOperStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 6, 12, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-GeneralVcInterfaceMIB", "gvcIfIndex"), (0, "Nortel-Magellan-Passport-GeneralVcInterfaceMIB", "gvcIfRgIndex"))
if mibBuilder.loadTexts: gvcIfRgOperStatusEntry.setStatus('mandatory')
gvcIfRgSnmpOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 6, 12, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("testing", 3))).clone('up')).setMaxAccess("readonly")
if mibBuilder.loadTexts: gvcIfRgSnmpOperStatus.setStatus('mandatory')
gvcIfDlci = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 7))
gvcIfDlciRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 7, 1), )
if mibBuilder.loadTexts: gvcIfDlciRowStatusTable.setStatus('mandatory')
gvcIfDlciRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 7, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-GeneralVcInterfaceMIB", "gvcIfIndex"), (0, "Nortel-Magellan-Passport-GeneralVcInterfaceMIB", "gvcIfDlciIndex"))
if mibBuilder.loadTexts: gvcIfDlciRowStatusEntry.setStatus('mandatory')
gvcIfDlciRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 7, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: gvcIfDlciRowStatus.setStatus('mandatory')
gvcIfDlciComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 7, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gvcIfDlciComponentName.setStatus('mandatory')
gvcIfDlciStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 7, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gvcIfDlciStorageType.setStatus('mandatory')
gvcIfDlciIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 7, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(16, 4095)))
if mibBuilder.loadTexts: gvcIfDlciIndex.setStatus('mandatory')
gvcIfDlciStateTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 7, 10), )
if mibBuilder.loadTexts: gvcIfDlciStateTable.setStatus('mandatory')
gvcIfDlciStateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 7, 10, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-GeneralVcInterfaceMIB", "gvcIfIndex"), (0, "Nortel-Magellan-Passport-GeneralVcInterfaceMIB", "gvcIfDlciIndex"))
if mibBuilder.loadTexts: gvcIfDlciStateEntry.setStatus('mandatory')
gvcIfDlciAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 7, 10, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("locked", 0), ("unlocked", 1), ("shuttingDown", 2))).clone('unlocked')).setMaxAccess("readonly")
if mibBuilder.loadTexts: gvcIfDlciAdminState.setStatus('mandatory')
gvcIfDlciOperationalState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 7, 10, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1))).clone('disabled')).setMaxAccess("readonly")
if mibBuilder.loadTexts: gvcIfDlciOperationalState.setStatus('mandatory')
gvcIfDlciUsageState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 7, 10, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("idle", 0), ("active", 1), ("busy", 2))).clone('idle')).setMaxAccess("readonly")
if mibBuilder.loadTexts: gvcIfDlciUsageState.setStatus('mandatory')
gvcIfDlciAbitTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 7, 11), )
if mibBuilder.loadTexts: gvcIfDlciAbitTable.setStatus('mandatory')
gvcIfDlciAbitEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 7, 11, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-GeneralVcInterfaceMIB", "gvcIfIndex"), (0, "Nortel-Magellan-Passport-GeneralVcInterfaceMIB", "gvcIfDlciIndex"))
if mibBuilder.loadTexts: gvcIfDlciAbitEntry.setStatus('mandatory')
gvcIfDlciABitStatusFromNetwork = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 7, 11, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("inactive", 0), ("active", 1), ("notApplicable", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: gvcIfDlciABitStatusFromNetwork.setStatus('mandatory')
gvcIfDlciABitReasonFromNetwork = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 7, 11, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("notApplicable", 0), ("remoteUserSignaled", 1), ("localLmiError", 2), ("remoteLmiError", 3), ("localLinkDown", 4), ("remoteLinkDown", 5), ("pvcDown", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: gvcIfDlciABitReasonFromNetwork.setStatus('mandatory')
gvcIfDlciABitStatusToNetwork = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 7, 11, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("inactive", 0), ("active", 1), ("notApplicable", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: gvcIfDlciABitStatusToNetwork.setStatus('mandatory')
gvcIfDlciABitReasonToNetwork = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 7, 11, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 4, 7))).clone(namedValues=NamedValues(("notApplicable", 0), ("remoteUserSignaled", 1), ("localLmiError", 2), ("localLinkDown", 4), ("missingFromLmiReport", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: gvcIfDlciABitReasonToNetwork.setStatus('mandatory')
gvcIfDlciStatsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 7, 12), )
if mibBuilder.loadTexts: gvcIfDlciStatsTable.setStatus('mandatory')
gvcIfDlciStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 7, 12, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-GeneralVcInterfaceMIB", "gvcIfIndex"), (0, "Nortel-Magellan-Passport-GeneralVcInterfaceMIB", "gvcIfDlciIndex"))
if mibBuilder.loadTexts: gvcIfDlciStatsEntry.setStatus('mandatory')
gvcIfDlciFrmFromNetwork = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 7, 12, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gvcIfDlciFrmFromNetwork.setStatus('mandatory')
gvcIfDlciFrmToNetwork = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 7, 12, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gvcIfDlciFrmToNetwork.setStatus('mandatory')
gvcIfDlciFrmDiscardToNetwork = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 7, 12, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gvcIfDlciFrmDiscardToNetwork.setStatus('mandatory')
gvcIfDlciFramesWithUnknownSaps = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 7, 12, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gvcIfDlciFramesWithUnknownSaps.setStatus('mandatory')
gvcIfDlciOperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 7, 13), )
if mibBuilder.loadTexts: gvcIfDlciOperTable.setStatus('mandatory')
gvcIfDlciOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 7, 13, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-GeneralVcInterfaceMIB", "gvcIfIndex"), (0, "Nortel-Magellan-Passport-GeneralVcInterfaceMIB", "gvcIfDlciIndex"))
if mibBuilder.loadTexts: gvcIfDlciOperEntry.setStatus('mandatory')
gvcIfDlciEncapsulationType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 7, 13, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("ban", 0), ("bnn", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: gvcIfDlciEncapsulationType.setStatus('mandatory')
gvcIfDlciLocalDeviceMac = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 7, 13, 1, 2), DashedHexString().subtype(subtypeSpec=ValueSizeConstraint(6, 6)).setFixedLength(6)).setMaxAccess("readonly")
if mibBuilder.loadTexts: gvcIfDlciLocalDeviceMac.setStatus('mandatory')
gvcIfDlciRemoteDeviceMac = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 7, 13, 1, 3), DashedHexString().subtype(subtypeSpec=ValueSizeConstraint(6, 6)).setFixedLength(6)).setMaxAccess("readonly")
if mibBuilder.loadTexts: gvcIfDlciRemoteDeviceMac.setStatus('mandatory')
gvcIfDlciSpOpTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 7, 14), )
if mibBuilder.loadTexts: gvcIfDlciSpOpTable.setStatus('mandatory')
gvcIfDlciSpOpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 7, 14, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-GeneralVcInterfaceMIB", "gvcIfIndex"), (0, "Nortel-Magellan-Passport-GeneralVcInterfaceMIB", "gvcIfDlciIndex"))
if mibBuilder.loadTexts: gvcIfDlciSpOpEntry.setStatus('mandatory')
gvcIfDlciRateEnforcement = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 7, 14, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("on", 1))).clone('off')).setMaxAccess("readonly")
if mibBuilder.loadTexts: gvcIfDlciRateEnforcement.setStatus('mandatory')
gvcIfDlciCommittedInformationRate = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 7, 14, 1, 2), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: gvcIfDlciCommittedInformationRate.setStatus('mandatory')
gvcIfDlciCommittedBurstSize = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 7, 14, 1, 3), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: gvcIfDlciCommittedBurstSize.setStatus('mandatory')
gvcIfDlciExcessInformationRate = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 7, 14, 1, 4), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: gvcIfDlciExcessInformationRate.setStatus('mandatory')
gvcIfDlciExcessBurstSize = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 7, 14, 1, 5), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 2048000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: gvcIfDlciExcessBurstSize.setStatus('mandatory')
gvcIfDlciMeasurementInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 7, 14, 1, 6), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 25500))).setMaxAccess("readonly")
if mibBuilder.loadTexts: gvcIfDlciMeasurementInterval.setStatus('mandatory')
gvcIfDlciDc = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 7, 2))
gvcIfDlciDcRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 7, 2, 1), )
if mibBuilder.loadTexts: gvcIfDlciDcRowStatusTable.setStatus('mandatory')
gvcIfDlciDcRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 7, 2, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-GeneralVcInterfaceMIB", "gvcIfIndex"), (0, "Nortel-Magellan-Passport-GeneralVcInterfaceMIB", "gvcIfDlciIndex"), (0, "Nortel-Magellan-Passport-GeneralVcInterfaceMIB", "gvcIfDlciDcIndex"))
if mibBuilder.loadTexts: gvcIfDlciDcRowStatusEntry.setStatus('mandatory')
gvcIfDlciDcRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 7, 2, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gvcIfDlciDcRowStatus.setStatus('mandatory')
gvcIfDlciDcComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 7, 2, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gvcIfDlciDcComponentName.setStatus('mandatory')
gvcIfDlciDcStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 7, 2, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gvcIfDlciDcStorageType.setStatus('mandatory')
gvcIfDlciDcIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 7, 2, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: gvcIfDlciDcIndex.setStatus('mandatory')
gvcIfDlciDcOptionsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 7, 2, 10), )
if mibBuilder.loadTexts: gvcIfDlciDcOptionsTable.setStatus('mandatory')
gvcIfDlciDcOptionsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 7, 2, 10, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-GeneralVcInterfaceMIB", "gvcIfIndex"), (0, "Nortel-Magellan-Passport-GeneralVcInterfaceMIB", "gvcIfDlciIndex"), (0, "Nortel-Magellan-Passport-GeneralVcInterfaceMIB", "gvcIfDlciDcIndex"))
if mibBuilder.loadTexts: gvcIfDlciDcOptionsEntry.setStatus('mandatory')
gvcIfDlciDcRemoteNpi = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 7, 2, 10, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("x121", 0), ("e164", 1))).clone('x121')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: gvcIfDlciDcRemoteNpi.setStatus('mandatory')
gvcIfDlciDcRemoteDna = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 7, 2, 10, 1, 4), DigitString().subtype(subtypeSpec=ValueSizeConstraint(1, 15))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: gvcIfDlciDcRemoteDna.setStatus('mandatory')
gvcIfDlciDcRemoteDlci = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 7, 2, 10, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4095))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: gvcIfDlciDcRemoteDlci.setStatus('mandatory')
gvcIfDlciDcType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 7, 2, 10, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("permanentMaster", 1), ("permanentSlave", 2), ("permanentBackupSlave", 3), ("permanentSlaveWithBackup", 4))).clone('permanentMaster')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: gvcIfDlciDcType.setStatus('mandatory')
gvcIfDlciDcTransferPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 7, 2, 10, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 9, 255))).clone(namedValues=NamedValues(("normal", 0), ("high", 9), ("useDnaDefTP", 255))).clone('useDnaDefTP')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: gvcIfDlciDcTransferPriority.setStatus('mandatory')
gvcIfDlciDcDiscardPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 7, 2, 10, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 3))).clone(namedValues=NamedValues(("normal", 0), ("high", 1), ("useDnaDefPriority", 3))).clone('useDnaDefPriority')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: gvcIfDlciDcDiscardPriority.setStatus('mandatory')
gvcIfDlciDcNfaTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 7, 2, 482), )
if mibBuilder.loadTexts: gvcIfDlciDcNfaTable.setStatus('obsolete')
gvcIfDlciDcNfaEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 7, 2, 482, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-GeneralVcInterfaceMIB", "gvcIfIndex"), (0, "Nortel-Magellan-Passport-GeneralVcInterfaceMIB", "gvcIfDlciIndex"), (0, "Nortel-Magellan-Passport-GeneralVcInterfaceMIB", "gvcIfDlciDcIndex"), (0, "Nortel-Magellan-Passport-GeneralVcInterfaceMIB", "gvcIfDlciDcNfaIndex"))
if mibBuilder.loadTexts: gvcIfDlciDcNfaEntry.setStatus('obsolete')
gvcIfDlciDcNfaIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 7, 2, 482, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(1, 1), ValueRangeConstraint(48, 48), )))
if mibBuilder.loadTexts: gvcIfDlciDcNfaIndex.setStatus('obsolete')
gvcIfDlciDcNfaValue = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 7, 2, 482, 1, 2), HexString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: gvcIfDlciDcNfaValue.setStatus('obsolete')
gvcIfDlciDcNfaRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 7, 2, 482, 1, 3), RowStatus()).setMaxAccess("writeonly")
if mibBuilder.loadTexts: gvcIfDlciDcNfaRowStatus.setStatus('obsolete')
gvcIfDlciVc = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 7, 3))
gvcIfDlciVcRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 7, 3, 1), )
if mibBuilder.loadTexts: gvcIfDlciVcRowStatusTable.setStatus('mandatory')
gvcIfDlciVcRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 7, 3, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-GeneralVcInterfaceMIB", "gvcIfIndex"), (0, "Nortel-Magellan-Passport-GeneralVcInterfaceMIB", "gvcIfDlciIndex"), (0, "Nortel-Magellan-Passport-GeneralVcInterfaceMIB", "gvcIfDlciVcIndex"))
if mibBuilder.loadTexts: gvcIfDlciVcRowStatusEntry.setStatus('mandatory')
gvcIfDlciVcRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 7, 3, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gvcIfDlciVcRowStatus.setStatus('mandatory')
gvcIfDlciVcComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 7, 3, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gvcIfDlciVcComponentName.setStatus('mandatory')
gvcIfDlciVcStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 7, 3, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gvcIfDlciVcStorageType.setStatus('mandatory')
gvcIfDlciVcIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 7, 3, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: gvcIfDlciVcIndex.setStatus('mandatory')
gvcIfDlciVcCadTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 7, 3, 10), )
if mibBuilder.loadTexts: gvcIfDlciVcCadTable.setStatus('mandatory')
gvcIfDlciVcCadEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 7, 3, 10, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-GeneralVcInterfaceMIB", "gvcIfIndex"), (0, "Nortel-Magellan-Passport-GeneralVcInterfaceMIB", "gvcIfDlciIndex"), (0, "Nortel-Magellan-Passport-GeneralVcInterfaceMIB", "gvcIfDlciVcIndex"))
if mibBuilder.loadTexts: gvcIfDlciVcCadEntry.setStatus('mandatory')
gvcIfDlciVcType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 7, 3, 10, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("svc", 0), ("pvc", 1), ("spvc", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: gvcIfDlciVcType.setStatus('mandatory')
gvcIfDlciVcState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 7, 3, 10, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("creating", 0), ("readyP1", 1), ("dteWaitingP2", 2), ("dceWaitingP3", 3), ("dataTransferP4", 4), ("unsupportedP5", 5), ("dteClearRequestP6", 6), ("dceClearIndicationP7", 7), ("termination", 8)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: gvcIfDlciVcState.setStatus('mandatory')
gvcIfDlciVcPreviousState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 7, 3, 10, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("creating", 0), ("readyP1", 1), ("dteWaitingP2", 2), ("dceWaitingP3", 3), ("dataTransferP4", 4), ("unsupportedP5", 5), ("dteClearRequestP6", 6), ("dceClearIndicationP7", 7), ("termination", 8)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: gvcIfDlciVcPreviousState.setStatus('mandatory')
gvcIfDlciVcDiagnosticCode = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 7, 3, 10, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: gvcIfDlciVcDiagnosticCode.setStatus('mandatory')
gvcIfDlciVcPreviousDiagnosticCode = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 7, 3, 10, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: gvcIfDlciVcPreviousDiagnosticCode.setStatus('mandatory')
gvcIfDlciVcCalledNpi = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 7, 3, 10, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("x121", 0), ("e164", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: gvcIfDlciVcCalledNpi.setStatus('mandatory')
gvcIfDlciVcCalledDna = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 7, 3, 10, 1, 7), DigitString().subtype(subtypeSpec=ValueSizeConstraint(1, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: gvcIfDlciVcCalledDna.setStatus('mandatory')
gvcIfDlciVcCalledLcn = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 7, 3, 10, 1, 8), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: gvcIfDlciVcCalledLcn.setStatus('mandatory')
gvcIfDlciVcCallingNpi = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 7, 3, 10, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("x121", 0), ("e164", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: gvcIfDlciVcCallingNpi.setStatus('mandatory')
gvcIfDlciVcCallingDna = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 7, 3, 10, 1, 10), DigitString().subtype(subtypeSpec=ValueSizeConstraint(1, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: gvcIfDlciVcCallingDna.setStatus('mandatory')
gvcIfDlciVcCallingLcn = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 7, 3, 10, 1, 11), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: gvcIfDlciVcCallingLcn.setStatus('mandatory')
gvcIfDlciVcAccountingEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 7, 3, 10, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("yes", 0), ("no", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: gvcIfDlciVcAccountingEnabled.setStatus('mandatory')
gvcIfDlciVcFastSelectCall = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 7, 3, 10, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: gvcIfDlciVcFastSelectCall.setStatus('mandatory')
gvcIfDlciVcPathReliability = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 7, 3, 10, 1, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("high", 0), ("normal", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: gvcIfDlciVcPathReliability.setStatus('mandatory')
gvcIfDlciVcAccountingEnd = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 7, 3, 10, 1, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("callingEnd", 0), ("calledEnd", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: gvcIfDlciVcAccountingEnd.setStatus('mandatory')
gvcIfDlciVcPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 7, 3, 10, 1, 21), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("normal", 0), ("high", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: gvcIfDlciVcPriority.setStatus('mandatory')
gvcIfDlciVcSegmentSize = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 7, 3, 10, 1, 22), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4096))).setMaxAccess("readonly")
if mibBuilder.loadTexts: gvcIfDlciVcSegmentSize.setStatus('mandatory')
gvcIfDlciVcMaxSubnetPktSize = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 7, 3, 10, 1, 27), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4096))).setMaxAccess("readonly")
if mibBuilder.loadTexts: gvcIfDlciVcMaxSubnetPktSize.setStatus('mandatory')
gvcIfDlciVcRcosToNetwork = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 7, 3, 10, 1, 28), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("throughput", 0), ("delay", 1), ("multimedia", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: gvcIfDlciVcRcosToNetwork.setStatus('mandatory')
gvcIfDlciVcRcosFromNetwork = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 7, 3, 10, 1, 29), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("throughput", 0), ("delay", 1), ("multimedia", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: gvcIfDlciVcRcosFromNetwork.setStatus('mandatory')
gvcIfDlciVcEmissionPriorityToNetwork = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 7, 3, 10, 1, 30), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("normal", 0), ("high", 1), ("interrupting", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: gvcIfDlciVcEmissionPriorityToNetwork.setStatus('mandatory')
gvcIfDlciVcEmissionPriorityFromNetwork = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 7, 3, 10, 1, 31), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("normal", 0), ("high", 1), ("interrupting", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: gvcIfDlciVcEmissionPriorityFromNetwork.setStatus('mandatory')
gvcIfDlciVcDataPath = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 7, 3, 10, 1, 32), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: gvcIfDlciVcDataPath.setStatus('mandatory')
gvcIfDlciVcIntdTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 7, 3, 11), )
if mibBuilder.loadTexts: gvcIfDlciVcIntdTable.setStatus('mandatory')
gvcIfDlciVcIntdEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 7, 3, 11, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-GeneralVcInterfaceMIB", "gvcIfIndex"), (0, "Nortel-Magellan-Passport-GeneralVcInterfaceMIB", "gvcIfDlciIndex"), (0, "Nortel-Magellan-Passport-GeneralVcInterfaceMIB", "gvcIfDlciVcIndex"))
if mibBuilder.loadTexts: gvcIfDlciVcIntdEntry.setStatus('mandatory')
gvcIfDlciVcCallReferenceNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 7, 3, 11, 1, 1), Hex().subtype(subtypeSpec=ValueRangeConstraint(0, 16777215))).setMaxAccess("readonly")
if mibBuilder.loadTexts: gvcIfDlciVcCallReferenceNumber.setStatus('mandatory')
gvcIfDlciVcElapsedTimeTillNow = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 7, 3, 11, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 16777215))).setMaxAccess("readonly")
if mibBuilder.loadTexts: gvcIfDlciVcElapsedTimeTillNow.setStatus('mandatory')
gvcIfDlciVcSegmentsRx = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 7, 3, 11, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 16777215))).setMaxAccess("readonly")
if mibBuilder.loadTexts: gvcIfDlciVcSegmentsRx.setStatus('mandatory')
gvcIfDlciVcSegmentsSent = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 7, 3, 11, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 16777215))).setMaxAccess("readonly")
if mibBuilder.loadTexts: gvcIfDlciVcSegmentsSent.setStatus('mandatory')
gvcIfDlciVcStartTime = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 7, 3, 11, 1, 5), EnterpriseDateAndTime().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(19, 19), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: gvcIfDlciVcStartTime.setStatus('mandatory')
gvcIfDlciVcFrdTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 7, 3, 12), )
if mibBuilder.loadTexts: gvcIfDlciVcFrdTable.setStatus('mandatory')
gvcIfDlciVcFrdEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 7, 3, 12, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-GeneralVcInterfaceMIB", "gvcIfIndex"), (0, "Nortel-Magellan-Passport-GeneralVcInterfaceMIB", "gvcIfDlciIndex"), (0, "Nortel-Magellan-Passport-GeneralVcInterfaceMIB", "gvcIfDlciVcIndex"))
if mibBuilder.loadTexts: gvcIfDlciVcFrdEntry.setStatus('mandatory')
gvcIfDlciVcFrmCongestedToSubnet = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 7, 3, 12, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 5000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: gvcIfDlciVcFrmCongestedToSubnet.setStatus('mandatory')
gvcIfDlciVcCannotForwardToSubnet = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 7, 3, 12, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 5000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: gvcIfDlciVcCannotForwardToSubnet.setStatus('mandatory')
gvcIfDlciVcNotDataXferToSubnet = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 7, 3, 12, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 5000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: gvcIfDlciVcNotDataXferToSubnet.setStatus('mandatory')
gvcIfDlciVcOutOfRangeFrmFromSubnet = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 7, 3, 12, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 5000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: gvcIfDlciVcOutOfRangeFrmFromSubnet.setStatus('mandatory')
gvcIfDlciVcCombErrorsFromSubnet = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 7, 3, 12, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 5000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: gvcIfDlciVcCombErrorsFromSubnet.setStatus('mandatory')
gvcIfDlciVcDuplicatesFromSubnet = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 7, 3, 12, 1, 7), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 5000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: gvcIfDlciVcDuplicatesFromSubnet.setStatus('mandatory')
gvcIfDlciVcNotDataXferFromSubnet = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 7, 3, 12, 1, 8), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 5000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: gvcIfDlciVcNotDataXferFromSubnet.setStatus('mandatory')
gvcIfDlciVcFrmLossTimeouts = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 7, 3, 12, 1, 9), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 5000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: gvcIfDlciVcFrmLossTimeouts.setStatus('mandatory')
gvcIfDlciVcOoSeqByteCntExceeded = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 7, 3, 12, 1, 10), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 5000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: gvcIfDlciVcOoSeqByteCntExceeded.setStatus('mandatory')
gvcIfDlciVcPeakOoSeqPktCount = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 7, 3, 12, 1, 11), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 5000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: gvcIfDlciVcPeakOoSeqPktCount.setStatus('mandatory')
gvcIfDlciVcPeakOoSeqFrmForwarded = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 7, 3, 12, 1, 12), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 5000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: gvcIfDlciVcPeakOoSeqFrmForwarded.setStatus('mandatory')
gvcIfDlciVcSendSequenceNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 7, 3, 12, 1, 13), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 5000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: gvcIfDlciVcSendSequenceNumber.setStatus('mandatory')
gvcIfDlciVcPktRetryTimeouts = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 7, 3, 12, 1, 15), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 5000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: gvcIfDlciVcPktRetryTimeouts.setStatus('mandatory')
gvcIfDlciVcPeakRetryQueueSize = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 7, 3, 12, 1, 16), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 5000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: gvcIfDlciVcPeakRetryQueueSize.setStatus('mandatory')
gvcIfDlciVcSubnetRecoveries = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 7, 3, 12, 1, 17), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 5000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: gvcIfDlciVcSubnetRecoveries.setStatus('mandatory')
gvcIfDlciVcOoSeqPktCntExceeded = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 7, 3, 12, 1, 19), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: gvcIfDlciVcOoSeqPktCntExceeded.setStatus('mandatory')
gvcIfDlciVcPeakOoSeqByteCount = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 7, 3, 12, 1, 20), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 50000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: gvcIfDlciVcPeakOoSeqByteCount.setStatus('mandatory')
gvcIfDlciVcDmepTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 7, 3, 417), )
if mibBuilder.loadTexts: gvcIfDlciVcDmepTable.setStatus('mandatory')
gvcIfDlciVcDmepEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 7, 3, 417, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-GeneralVcInterfaceMIB", "gvcIfIndex"), (0, "Nortel-Magellan-Passport-GeneralVcInterfaceMIB", "gvcIfDlciIndex"), (0, "Nortel-Magellan-Passport-GeneralVcInterfaceMIB", "gvcIfDlciVcIndex"), (0, "Nortel-Magellan-Passport-GeneralVcInterfaceMIB", "gvcIfDlciVcDmepValue"))
if mibBuilder.loadTexts: gvcIfDlciVcDmepEntry.setStatus('mandatory')
gvcIfDlciVcDmepValue = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 7, 3, 417, 1, 1), RowPointer()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gvcIfDlciVcDmepValue.setStatus('mandatory')
gvcIfDlciSp = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 7, 4))
gvcIfDlciSpRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 7, 4, 1), )
if mibBuilder.loadTexts: gvcIfDlciSpRowStatusTable.setStatus('mandatory')
gvcIfDlciSpRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 7, 4, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-GeneralVcInterfaceMIB", "gvcIfIndex"), (0, "Nortel-Magellan-Passport-GeneralVcInterfaceMIB", "gvcIfDlciIndex"), (0, "Nortel-Magellan-Passport-GeneralVcInterfaceMIB", "gvcIfDlciSpIndex"))
if mibBuilder.loadTexts: gvcIfDlciSpRowStatusEntry.setStatus('mandatory')
gvcIfDlciSpRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 7, 4, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: gvcIfDlciSpRowStatus.setStatus('mandatory')
gvcIfDlciSpComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 7, 4, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gvcIfDlciSpComponentName.setStatus('mandatory')
gvcIfDlciSpStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 7, 4, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gvcIfDlciSpStorageType.setStatus('mandatory')
gvcIfDlciSpIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 7, 4, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: gvcIfDlciSpIndex.setStatus('mandatory')
gvcIfDlciSpParmsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 7, 4, 11), )
if mibBuilder.loadTexts: gvcIfDlciSpParmsTable.setStatus('mandatory')
gvcIfDlciSpParmsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 7, 4, 11, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-GeneralVcInterfaceMIB", "gvcIfIndex"), (0, "Nortel-Magellan-Passport-GeneralVcInterfaceMIB", "gvcIfDlciIndex"), (0, "Nortel-Magellan-Passport-GeneralVcInterfaceMIB", "gvcIfDlciSpIndex"))
if mibBuilder.loadTexts: gvcIfDlciSpParmsEntry.setStatus('mandatory')
gvcIfDlciSpRateEnforcement = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 7, 4, 11, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("on", 1))).clone('on')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: gvcIfDlciSpRateEnforcement.setStatus('mandatory')
gvcIfDlciSpCommittedInformationRate = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 7, 4, 11, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 50000000)).clone(64000)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: gvcIfDlciSpCommittedInformationRate.setStatus('mandatory')
gvcIfDlciSpCommittedBurstSize = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 7, 4, 11, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 50000000)).clone(64000)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: gvcIfDlciSpCommittedBurstSize.setStatus('mandatory')
gvcIfDlciSpExcessBurstSize = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 7, 4, 11, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 50000000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: gvcIfDlciSpExcessBurstSize.setStatus('mandatory')
gvcIfDlciSpMeasurementInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 7, 4, 11, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 25500))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: gvcIfDlciSpMeasurementInterval.setStatus('mandatory')
gvcIfDlciBnn = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 7, 5))
gvcIfDlciBnnRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 7, 5, 1), )
if mibBuilder.loadTexts: gvcIfDlciBnnRowStatusTable.setStatus('mandatory')
gvcIfDlciBnnRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 7, 5, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-GeneralVcInterfaceMIB", "gvcIfIndex"), (0, "Nortel-Magellan-Passport-GeneralVcInterfaceMIB", "gvcIfDlciIndex"), (0, "Nortel-Magellan-Passport-GeneralVcInterfaceMIB", "gvcIfDlciBnnIndex"))
if mibBuilder.loadTexts: gvcIfDlciBnnRowStatusEntry.setStatus('mandatory')
gvcIfDlciBnnRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 7, 5, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: gvcIfDlciBnnRowStatus.setStatus('mandatory')
gvcIfDlciBnnComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 7, 5, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gvcIfDlciBnnComponentName.setStatus('mandatory')
gvcIfDlciBnnStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 7, 5, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gvcIfDlciBnnStorageType.setStatus('mandatory')
gvcIfDlciBnnIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 7, 5, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: gvcIfDlciBnnIndex.setStatus('mandatory')
gvcIfDlciLdev = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 7, 6))
gvcIfDlciLdevRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 7, 6, 1), )
if mibBuilder.loadTexts: gvcIfDlciLdevRowStatusTable.setStatus('mandatory')
gvcIfDlciLdevRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 7, 6, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-GeneralVcInterfaceMIB", "gvcIfIndex"), (0, "Nortel-Magellan-Passport-GeneralVcInterfaceMIB", "gvcIfDlciIndex"), (0, "Nortel-Magellan-Passport-GeneralVcInterfaceMIB", "gvcIfDlciLdevIndex"))
if mibBuilder.loadTexts: gvcIfDlciLdevRowStatusEntry.setStatus('mandatory')
gvcIfDlciLdevRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 7, 6, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: gvcIfDlciLdevRowStatus.setStatus('mandatory')
gvcIfDlciLdevComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 7, 6, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gvcIfDlciLdevComponentName.setStatus('mandatory')
gvcIfDlciLdevStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 7, 6, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gvcIfDlciLdevStorageType.setStatus('mandatory')
gvcIfDlciLdevIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 7, 6, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: gvcIfDlciLdevIndex.setStatus('mandatory')
gvcIfDlciLdevAddrTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 7, 6, 10), )
if mibBuilder.loadTexts: gvcIfDlciLdevAddrTable.setStatus('mandatory')
gvcIfDlciLdevAddrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 7, 6, 10, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-GeneralVcInterfaceMIB", "gvcIfIndex"), (0, "Nortel-Magellan-Passport-GeneralVcInterfaceMIB", "gvcIfDlciIndex"), (0, "Nortel-Magellan-Passport-GeneralVcInterfaceMIB", "gvcIfDlciLdevIndex"))
if mibBuilder.loadTexts: gvcIfDlciLdevAddrEntry.setStatus('mandatory')
gvcIfDlciLdevMac = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 7, 6, 10, 1, 1), DashedHexString().subtype(subtypeSpec=ValueSizeConstraint(6, 6)).setFixedLength(6)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: gvcIfDlciLdevMac.setStatus('mandatory')
gvcIfDlciLdevDevOpTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 7, 6, 11), )
if mibBuilder.loadTexts: gvcIfDlciLdevDevOpTable.setStatus('mandatory')
gvcIfDlciLdevDevOpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 7, 6, 11, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-GeneralVcInterfaceMIB", "gvcIfIndex"), (0, "Nortel-Magellan-Passport-GeneralVcInterfaceMIB", "gvcIfDlciIndex"), (0, "Nortel-Magellan-Passport-GeneralVcInterfaceMIB", "gvcIfDlciLdevIndex"))
if mibBuilder.loadTexts: gvcIfDlciLdevDevOpEntry.setStatus('mandatory')
gvcIfDlciLdevDeviceStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 7, 6, 11, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("unreachable", 0), ("reachable", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: gvcIfDlciLdevDeviceStatus.setStatus('mandatory')
gvcIfDlciLdevActiveLinkStations = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 7, 6, 11, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 5000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: gvcIfDlciLdevActiveLinkStations.setStatus('mandatory')
gvcIfDlciLdevLastTimeUnreachable = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 7, 6, 11, 1, 3), EnterpriseDateAndTime().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(19, 19), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: gvcIfDlciLdevLastTimeUnreachable.setStatus('mandatory')
gvcIfDlciLdevLastTimeReachable = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 7, 6, 11, 1, 4), EnterpriseDateAndTime().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(19, 19), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: gvcIfDlciLdevLastTimeReachable.setStatus('mandatory')
gvcIfDlciLdevDeviceUnreachable = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 7, 6, 11, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gvcIfDlciLdevDeviceUnreachable.setStatus('mandatory')
gvcIfDlciLdevMonitoringLcn = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 7, 6, 11, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4095))).setMaxAccess("readonly")
if mibBuilder.loadTexts: gvcIfDlciLdevMonitoringLcn.setStatus('mandatory')
gvcIfDlciLdevDmoTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 7, 6, 12), )
if mibBuilder.loadTexts: gvcIfDlciLdevDmoTable.setStatus('mandatory')
gvcIfDlciLdevDmoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 7, 6, 12, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-GeneralVcInterfaceMIB", "gvcIfIndex"), (0, "Nortel-Magellan-Passport-GeneralVcInterfaceMIB", "gvcIfDlciIndex"), (0, "Nortel-Magellan-Passport-GeneralVcInterfaceMIB", "gvcIfDlciLdevIndex"))
if mibBuilder.loadTexts: gvcIfDlciLdevDmoEntry.setStatus('mandatory')
gvcIfDlciLdevDeviceMonitoring = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 7, 6, 12, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: gvcIfDlciLdevDeviceMonitoring.setStatus('mandatory')
gvcIfDlciLdevClearVcsWhenUnreachable = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 7, 6, 12, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: gvcIfDlciLdevClearVcsWhenUnreachable.setStatus('mandatory')
gvcIfDlciLdevDeviceMonitoringTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 7, 6, 12, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 255)).clone(15)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: gvcIfDlciLdevDeviceMonitoringTimer.setStatus('mandatory')
gvcIfDlciLdevTestResponseTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 7, 6, 12, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 30)).clone(3)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: gvcIfDlciLdevTestResponseTimer.setStatus('mandatory')
gvcIfDlciLdevMaximumTestRetry = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 7, 6, 12, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 100)).clone(10)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: gvcIfDlciLdevMaximumTestRetry.setStatus('mandatory')
gvcIfDlciRdev = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 7, 7))
gvcIfDlciRdevRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 7, 7, 1), )
if mibBuilder.loadTexts: gvcIfDlciRdevRowStatusTable.setStatus('mandatory')
gvcIfDlciRdevRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 7, 7, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-GeneralVcInterfaceMIB", "gvcIfIndex"), (0, "Nortel-Magellan-Passport-GeneralVcInterfaceMIB", "gvcIfDlciIndex"), (0, "Nortel-Magellan-Passport-GeneralVcInterfaceMIB", "gvcIfDlciRdevIndex"))
if mibBuilder.loadTexts: gvcIfDlciRdevRowStatusEntry.setStatus('mandatory')
gvcIfDlciRdevRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 7, 7, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: gvcIfDlciRdevRowStatus.setStatus('mandatory')
gvcIfDlciRdevComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 7, 7, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gvcIfDlciRdevComponentName.setStatus('mandatory')
gvcIfDlciRdevStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 7, 7, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gvcIfDlciRdevStorageType.setStatus('mandatory')
gvcIfDlciRdevIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 7, 7, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: gvcIfDlciRdevIndex.setStatus('mandatory')
gvcIfDlciRdevAddrTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 7, 7, 10), )
if mibBuilder.loadTexts: gvcIfDlciRdevAddrTable.setStatus('mandatory')
gvcIfDlciRdevAddrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 7, 7, 10, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-GeneralVcInterfaceMIB", "gvcIfIndex"), (0, "Nortel-Magellan-Passport-GeneralVcInterfaceMIB", "gvcIfDlciIndex"), (0, "Nortel-Magellan-Passport-GeneralVcInterfaceMIB", "gvcIfDlciRdevIndex"))
if mibBuilder.loadTexts: gvcIfDlciRdevAddrEntry.setStatus('mandatory')
gvcIfDlciRdevMac = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 7, 7, 10, 1, 1), DashedHexString().subtype(subtypeSpec=ValueSizeConstraint(6, 6)).setFixedLength(6)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: gvcIfDlciRdevMac.setStatus('mandatory')
gvcIfDlciSap = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 7, 8))
gvcIfDlciSapRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 7, 8, 1), )
if mibBuilder.loadTexts: gvcIfDlciSapRowStatusTable.setStatus('mandatory')
gvcIfDlciSapRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 7, 8, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-GeneralVcInterfaceMIB", "gvcIfIndex"), (0, "Nortel-Magellan-Passport-GeneralVcInterfaceMIB", "gvcIfDlciIndex"), (0, "Nortel-Magellan-Passport-GeneralVcInterfaceMIB", "gvcIfDlciSapLocalSapIndex"), (0, "Nortel-Magellan-Passport-GeneralVcInterfaceMIB", "gvcIfDlciSapRemoteSapIndex"))
if mibBuilder.loadTexts: gvcIfDlciSapRowStatusEntry.setStatus('mandatory')
gvcIfDlciSapRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 7, 8, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gvcIfDlciSapRowStatus.setStatus('mandatory')
gvcIfDlciSapComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 7, 8, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gvcIfDlciSapComponentName.setStatus('mandatory')
gvcIfDlciSapStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 7, 8, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gvcIfDlciSapStorageType.setStatus('mandatory')
gvcIfDlciSapLocalSapIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 7, 8, 1, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(4, 4), ValueRangeConstraint(8, 8), ValueRangeConstraint(12, 12), ValueRangeConstraint(16, 16), ValueRangeConstraint(20, 20), ValueRangeConstraint(24, 24), ValueRangeConstraint(28, 28), ValueRangeConstraint(32, 32), ValueRangeConstraint(36, 36), ValueRangeConstraint(40, 40), ValueRangeConstraint(44, 44), ValueRangeConstraint(48, 48), ValueRangeConstraint(52, 52), ValueRangeConstraint(56, 56), ValueRangeConstraint(60, 60), ValueRangeConstraint(64, 64), ValueRangeConstraint(68, 68), ValueRangeConstraint(72, 72), ValueRangeConstraint(76, 76), ValueRangeConstraint(80, 80), ValueRangeConstraint(84, 84), ValueRangeConstraint(88, 88), ValueRangeConstraint(92, 92), ValueRangeConstraint(96, 96), ValueRangeConstraint(100, 100), ValueRangeConstraint(104, 104), ValueRangeConstraint(108, 108), ValueRangeConstraint(112, 112), ValueRangeConstraint(116, 116), ValueRangeConstraint(120, 120), ValueRangeConstraint(124, 124), ValueRangeConstraint(128, 128), ValueRangeConstraint(132, 132), ValueRangeConstraint(136, 136), ValueRangeConstraint(140, 140), ValueRangeConstraint(144, 144), ValueRangeConstraint(148, 148), ValueRangeConstraint(152, 152), ValueRangeConstraint(156, 156), ValueRangeConstraint(160, 160), ValueRangeConstraint(164, 164), ValueRangeConstraint(168, 168), ValueRangeConstraint(172, 172), ValueRangeConstraint(176, 176), ValueRangeConstraint(180, 180), ValueRangeConstraint(184, 184), ValueRangeConstraint(188, 188), ValueRangeConstraint(192, 192), ValueRangeConstraint(196, 196), ValueRangeConstraint(200, 200), ValueRangeConstraint(204, 204), ValueRangeConstraint(208, 208), ValueRangeConstraint(212, 212), ValueRangeConstraint(216, 216), ValueRangeConstraint(220, 220), ValueRangeConstraint(232, 232), ValueRangeConstraint(236, 236), ValueRangeConstraint(248, 248), ValueRangeConstraint(252, 252), )))
if mibBuilder.loadTexts: gvcIfDlciSapLocalSapIndex.setStatus('mandatory')
gvcIfDlciSapRemoteSapIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 7, 8, 1, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(4, 4), ValueRangeConstraint(8, 8), ValueRangeConstraint(12, 12), ValueRangeConstraint(16, 16), ValueRangeConstraint(20, 20), ValueRangeConstraint(24, 24), ValueRangeConstraint(28, 28), ValueRangeConstraint(32, 32), ValueRangeConstraint(36, 36), ValueRangeConstraint(40, 40), ValueRangeConstraint(44, 44), ValueRangeConstraint(48, 48), ValueRangeConstraint(52, 52), ValueRangeConstraint(56, 56), ValueRangeConstraint(60, 60), ValueRangeConstraint(64, 64), ValueRangeConstraint(68, 68), ValueRangeConstraint(72, 72), ValueRangeConstraint(76, 76), ValueRangeConstraint(80, 80), ValueRangeConstraint(84, 84), ValueRangeConstraint(88, 88), ValueRangeConstraint(92, 92), ValueRangeConstraint(96, 96), ValueRangeConstraint(100, 100), ValueRangeConstraint(104, 104), ValueRangeConstraint(108, 108), ValueRangeConstraint(112, 112), ValueRangeConstraint(116, 116), ValueRangeConstraint(120, 120), ValueRangeConstraint(124, 124), ValueRangeConstraint(128, 128), ValueRangeConstraint(132, 132), ValueRangeConstraint(136, 136), ValueRangeConstraint(140, 140), ValueRangeConstraint(144, 144), ValueRangeConstraint(148, 148), ValueRangeConstraint(152, 152), ValueRangeConstraint(156, 156), ValueRangeConstraint(160, 160), ValueRangeConstraint(164, 164), ValueRangeConstraint(168, 168), ValueRangeConstraint(172, 172), ValueRangeConstraint(176, 176), ValueRangeConstraint(180, 180), ValueRangeConstraint(184, 184), ValueRangeConstraint(188, 188), ValueRangeConstraint(192, 192), ValueRangeConstraint(196, 196), ValueRangeConstraint(200, 200), ValueRangeConstraint(204, 204), ValueRangeConstraint(208, 208), ValueRangeConstraint(212, 212), ValueRangeConstraint(216, 216), ValueRangeConstraint(220, 220), ValueRangeConstraint(232, 232), ValueRangeConstraint(236, 236), ValueRangeConstraint(248, 248), ValueRangeConstraint(252, 252), )))
if mibBuilder.loadTexts: gvcIfDlciSapRemoteSapIndex.setStatus('mandatory')
gvcIfDlciSapCircuit = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 7, 8, 2))
gvcIfDlciSapCircuitRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 7, 8, 2, 1), )
if mibBuilder.loadTexts: gvcIfDlciSapCircuitRowStatusTable.setStatus('mandatory')
gvcIfDlciSapCircuitRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 7, 8, 2, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-GeneralVcInterfaceMIB", "gvcIfIndex"), (0, "Nortel-Magellan-Passport-GeneralVcInterfaceMIB", "gvcIfDlciIndex"), (0, "Nortel-Magellan-Passport-GeneralVcInterfaceMIB", "gvcIfDlciSapLocalSapIndex"), (0, "Nortel-Magellan-Passport-GeneralVcInterfaceMIB", "gvcIfDlciSapRemoteSapIndex"), (0, "Nortel-Magellan-Passport-GeneralVcInterfaceMIB", "gvcIfDlciSapCircuitS1MacIndex"), (0, "Nortel-Magellan-Passport-GeneralVcInterfaceMIB", "gvcIfDlciSapCircuitS1SapIndex"), (0, "Nortel-Magellan-Passport-GeneralVcInterfaceMIB", "gvcIfDlciSapCircuitS2MacIndex"), (0, "Nortel-Magellan-Passport-GeneralVcInterfaceMIB", "gvcIfDlciSapCircuitS2SapIndex"))
if mibBuilder.loadTexts: gvcIfDlciSapCircuitRowStatusEntry.setStatus('mandatory')
gvcIfDlciSapCircuitRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 7, 8, 2, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gvcIfDlciSapCircuitRowStatus.setStatus('mandatory')
gvcIfDlciSapCircuitComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 7, 8, 2, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gvcIfDlciSapCircuitComponentName.setStatus('mandatory')
gvcIfDlciSapCircuitStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 7, 8, 2, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gvcIfDlciSapCircuitStorageType.setStatus('mandatory')
gvcIfDlciSapCircuitS1MacIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 7, 8, 2, 1, 1, 10), DashedHexString().subtype(subtypeSpec=ValueSizeConstraint(6, 6)).setFixedLength(6))
if mibBuilder.loadTexts: gvcIfDlciSapCircuitS1MacIndex.setStatus('mandatory')
gvcIfDlciSapCircuitS1SapIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 7, 8, 2, 1, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(2, 254)))
if mibBuilder.loadTexts: gvcIfDlciSapCircuitS1SapIndex.setStatus('mandatory')
gvcIfDlciSapCircuitS2MacIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 7, 8, 2, 1, 1, 12), DashedHexString().subtype(subtypeSpec=ValueSizeConstraint(6, 6)).setFixedLength(6))
if mibBuilder.loadTexts: gvcIfDlciSapCircuitS2MacIndex.setStatus('mandatory')
gvcIfDlciSapCircuitS2SapIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 7, 8, 2, 1, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(2, 254)))
if mibBuilder.loadTexts: gvcIfDlciSapCircuitS2SapIndex.setStatus('mandatory')
gvcIfFrSvc = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 8))
gvcIfFrSvcRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 8, 1), )
if mibBuilder.loadTexts: gvcIfFrSvcRowStatusTable.setStatus('mandatory')
gvcIfFrSvcRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 8, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-GeneralVcInterfaceMIB", "gvcIfIndex"), (0, "Nortel-Magellan-Passport-GeneralVcInterfaceMIB", "gvcIfFrSvcIndex"))
if mibBuilder.loadTexts: gvcIfFrSvcRowStatusEntry.setStatus('mandatory')
gvcIfFrSvcRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 8, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: gvcIfFrSvcRowStatus.setStatus('mandatory')
gvcIfFrSvcComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 8, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gvcIfFrSvcComponentName.setStatus('mandatory')
gvcIfFrSvcStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 8, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gvcIfFrSvcStorageType.setStatus('mandatory')
gvcIfFrSvcIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 8, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: gvcIfFrSvcIndex.setStatus('mandatory')
gvcIfFrSvcProvisionedTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 8, 11), )
if mibBuilder.loadTexts: gvcIfFrSvcProvisionedTable.setStatus('mandatory')
gvcIfFrSvcProvisionedEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 8, 11, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-GeneralVcInterfaceMIB", "gvcIfIndex"), (0, "Nortel-Magellan-Passport-GeneralVcInterfaceMIB", "gvcIfFrSvcIndex"))
if mibBuilder.loadTexts: gvcIfFrSvcProvisionedEntry.setStatus('mandatory')
gvcIfFrSvcMaximumFrameRelaySvcs = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 8, 11, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 3072)).clone(1000)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: gvcIfFrSvcMaximumFrameRelaySvcs.setStatus('mandatory')
gvcIfFrSvcRateEnforcement = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 8, 11, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("on", 1))).clone('on')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: gvcIfFrSvcRateEnforcement.setStatus('mandatory')
gvcIfFrSvcMaximumCir = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 8, 11, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 52000000)).clone(2048000)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: gvcIfFrSvcMaximumCir.setStatus('mandatory')
gvcIfFrSvcOperationalTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 8, 12), )
if mibBuilder.loadTexts: gvcIfFrSvcOperationalTable.setStatus('mandatory')
gvcIfFrSvcOperationalEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 8, 12, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-GeneralVcInterfaceMIB", "gvcIfIndex"), (0, "Nortel-Magellan-Passport-GeneralVcInterfaceMIB", "gvcIfFrSvcIndex"))
if mibBuilder.loadTexts: gvcIfFrSvcOperationalEntry.setStatus('mandatory')
gvcIfFrSvcCurrentNumberOfSvcCalls = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 8, 12, 1, 1), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 3072))).setMaxAccess("readonly")
if mibBuilder.loadTexts: gvcIfFrSvcCurrentNumberOfSvcCalls.setStatus('mandatory')
gvcIfSMacF = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 9))
gvcIfSMacFRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 9, 1), )
if mibBuilder.loadTexts: gvcIfSMacFRowStatusTable.setStatus('mandatory')
gvcIfSMacFRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 9, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-GeneralVcInterfaceMIB", "gvcIfIndex"), (0, "Nortel-Magellan-Passport-GeneralVcInterfaceMIB", "gvcIfSMacFIndex"))
if mibBuilder.loadTexts: gvcIfSMacFRowStatusEntry.setStatus('mandatory')
gvcIfSMacFRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 9, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: gvcIfSMacFRowStatus.setStatus('mandatory')
gvcIfSMacFComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 9, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gvcIfSMacFComponentName.setStatus('mandatory')
gvcIfSMacFStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 9, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gvcIfSMacFStorageType.setStatus('mandatory')
gvcIfSMacFIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 9, 1, 1, 10), DashedHexString().subtype(subtypeSpec=ValueSizeConstraint(6, 6)).setFixedLength(6))
if mibBuilder.loadTexts: gvcIfSMacFIndex.setStatus('mandatory')
gvcIfSMacFOperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 9, 11), )
if mibBuilder.loadTexts: gvcIfSMacFOperTable.setStatus('mandatory')
gvcIfSMacFOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 9, 11, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-GeneralVcInterfaceMIB", "gvcIfIndex"), (0, "Nortel-Magellan-Passport-GeneralVcInterfaceMIB", "gvcIfSMacFIndex"))
if mibBuilder.loadTexts: gvcIfSMacFOperEntry.setStatus('mandatory')
gvcIfSMacFFramesMatchingFilter = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 9, 11, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gvcIfSMacFFramesMatchingFilter.setStatus('mandatory')
gvcIfDMacF = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 10))
gvcIfDMacFRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 10, 1), )
if mibBuilder.loadTexts: gvcIfDMacFRowStatusTable.setStatus('mandatory')
gvcIfDMacFRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 10, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-GeneralVcInterfaceMIB", "gvcIfIndex"), (0, "Nortel-Magellan-Passport-GeneralVcInterfaceMIB", "gvcIfDMacFIndex"))
if mibBuilder.loadTexts: gvcIfDMacFRowStatusEntry.setStatus('mandatory')
gvcIfDMacFRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 10, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: gvcIfDMacFRowStatus.setStatus('mandatory')
gvcIfDMacFComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 10, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gvcIfDMacFComponentName.setStatus('mandatory')
gvcIfDMacFStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 10, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gvcIfDMacFStorageType.setStatus('mandatory')
gvcIfDMacFIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 10, 1, 1, 10), DashedHexString().subtype(subtypeSpec=ValueSizeConstraint(6, 6)).setFixedLength(6))
if mibBuilder.loadTexts: gvcIfDMacFIndex.setStatus('mandatory')
gvcIfDMacFOperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 10, 11), )
if mibBuilder.loadTexts: gvcIfDMacFOperTable.setStatus('mandatory')
gvcIfDMacFOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 10, 11, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-GeneralVcInterfaceMIB", "gvcIfIndex"), (0, "Nortel-Magellan-Passport-GeneralVcInterfaceMIB", "gvcIfDMacFIndex"))
if mibBuilder.loadTexts: gvcIfDMacFOperEntry.setStatus('mandatory')
gvcIfDMacFFramesMatchingFilter = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 107, 10, 11, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gvcIfDMacFFramesMatchingFilter.setStatus('mandatory')
generalVcInterfaceGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 58, 1))
generalVcInterfaceGroupBE = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 58, 1, 5))
generalVcInterfaceGroupBE01 = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 58, 1, 5, 2))
generalVcInterfaceGroupBE01A = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 58, 1, 5, 2, 2))
generalVcInterfaceCapabilities = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 58, 3))
generalVcInterfaceCapabilitiesBE = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 58, 3, 5))
generalVcInterfaceCapabilitiesBE01 = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 58, 3, 5, 2))
generalVcInterfaceCapabilitiesBE01A = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 58, 3, 5, 2, 2))
mibBuilder.exportSymbols("Nortel-Magellan-Passport-GeneralVcInterfaceMIB", gvcIfDlciLdevIndex=gvcIfDlciLdevIndex, gvcIfDnaDdmComponentName=gvcIfDnaDdmComponentName, gvcIfRgIfIndex=gvcIfRgIfIndex, gvcIfDcRowStatus=gvcIfDcRowStatus, gvcIfDnaSdmDeviceUnreachable=gvcIfDnaSdmDeviceUnreachable, gvcIfDnaDdmSap=gvcIfDnaDdmSap, gvcIfDlciEncapsulationType=gvcIfDlciEncapsulationType, gvcIfDcStorageType=gvcIfDcStorageType, gvcIfDcCfaValue=gvcIfDcCfaValue, gvcIfLcnOperationalState=gvcIfLcnOperationalState, gvcIfRgProvTable=gvcIfRgProvTable, gvcIfFrSvc=gvcIfFrSvc, gvcIfDlciVcRowStatusTable=gvcIfDlciVcRowStatusTable, gvcIfDcRemoteNpi=gvcIfDcRemoteNpi, gvcIfDlciVcCallReferenceNumber=gvcIfDlciVcCallReferenceNumber, gvcIfDlciLdevRowStatusEntry=gvcIfDlciLdevRowStatusEntry, gvcIfLcnComponentName=gvcIfLcnComponentName, gvcIfDnaDdmClearVcsWhenUnreachable=gvcIfDnaDdmClearVcsWhenUnreachable, gvcIfStatsTable=gvcIfStatsTable, gvcIfDlciVc=gvcIfDlciVc, gvcIfDnaDdmDeviceMonitoring=gvcIfDnaDdmDeviceMonitoring, gvcIfDlciVcComponentName=gvcIfDlciVcComponentName, gvcIfDlciVcAccountingEnabled=gvcIfDlciVcAccountingEnabled, gvcIfDlciABitStatusFromNetwork=gvcIfDlciABitStatusFromNetwork, gvcIfDlciBnnRowStatusTable=gvcIfDlciBnnRowStatusTable, gvcIfDlciVcCalledLcn=gvcIfDlciVcCalledLcn, gvcIfDlciVcState=gvcIfDlciVcState, gvcIfDnaHgMIfTable=gvcIfDnaHgMIfTable, gvcIfLcnVcDuplicatesFromSubnet=gvcIfLcnVcDuplicatesFromSubnet, gvcIfRgLinkToProtocolPort=gvcIfRgLinkToProtocolPort, gvcIfDnaCallOptionsTable=gvcIfDnaCallOptionsTable, gvcIfDMacF=gvcIfDMacF, gvcIfDnaOutAccess=gvcIfDnaOutAccess, gvcIfLcnVcAccountingEnd=gvcIfLcnVcAccountingEnd, gvcIfDlciDcRowStatusTable=gvcIfDlciDcRowStatusTable, gvcIfDlciVcDmepEntry=gvcIfDlciVcDmepEntry, gvcIfLcnStateTable=gvcIfLcnStateTable, gvcIfLcnVcSegmentsSent=gvcIfLcnVcSegmentsSent, gvcIfDlciLdevMonitoringLcn=gvcIfDlciLdevMonitoringLcn, gvcIfCallsRefusedByNetwork=gvcIfCallsRefusedByNetwork, gvcIfDnaAccountClass=gvcIfDnaAccountClass, gvcIfLcnVcAccountingEnabled=gvcIfLcnVcAccountingEnabled, gvcIfDnaDdmDeviceUnreachable=gvcIfDnaDdmDeviceUnreachable, gvcIfFrSvcStorageType=gvcIfFrSvcStorageType, gvcIfDlciDcRowStatus=gvcIfDlciDcRowStatus, gvcIfActiveLinkStations=gvcIfActiveLinkStations, gvcIfDnaHgMHgAddrDataNetworkAddress=gvcIfDnaHgMHgAddrDataNetworkAddress, gvcIfDlciSpOpTable=gvcIfDlciSpOpTable, gvcIfDMacFOperEntry=gvcIfDMacFOperEntry, gvcIfDlciRdevRowStatusTable=gvcIfDlciRdevRowStatusTable, gvcIfOperationalState=gvcIfOperationalState, gvcIfLcnLcnCIdEntry=gvcIfLcnLcnCIdEntry, gvcIfDMacFOperTable=gvcIfDMacFOperTable, gvcIfDlciSpRowStatusEntry=gvcIfDlciSpRowStatusEntry, gvcIfDnaDdmLastTimeReachable=gvcIfDnaDdmLastTimeReachable, gvcIfRgProvEntry=gvcIfRgProvEntry, gvcIfDMacFStorageType=gvcIfDMacFStorageType, gvcIfDlciVcElapsedTimeTillNow=gvcIfDlciVcElapsedTimeTillNow, gvcIfDlciSpComponentName=gvcIfDlciSpComponentName, gvcIfLcnVcPreviousDiagnosticCode=gvcIfLcnVcPreviousDiagnosticCode, gvcIfDlciVcPriority=gvcIfDlciVcPriority, gvcIfDlciSapLocalSapIndex=gvcIfDlciSapLocalSapIndex, gvcIfDnaSdmLastTimeUnreachable=gvcIfDnaSdmLastTimeUnreachable, gvcIfDlciFrmToNetwork=gvcIfDlciFrmToNetwork, gvcIfDMacFRowStatusTable=gvcIfDMacFRowStatusTable, gvcIfDlciAbitTable=gvcIfDlciAbitTable, gvcIfLcnVcStatsEntry=gvcIfLcnVcStatsEntry, gvcIfDlciSpExcessBurstSize=gvcIfDlciSpExcessBurstSize, gvcIfRDnaMapSap=gvcIfRDnaMapSap, gvcIfDlciVcNotDataXferToSubnet=gvcIfDlciVcNotDataXferToSubnet, gvcIfDlciAbitEntry=gvcIfDlciAbitEntry, gvcIfDnaServiceExchange=gvcIfDnaServiceExchange, gvcIfProvTable=gvcIfProvTable, gvcIfFrSvcRowStatusEntry=gvcIfFrSvcRowStatusEntry, generalVcInterfaceMIB=generalVcInterfaceMIB, gvcIfRgSnmpOperStatus=gvcIfRgSnmpOperStatus, gvcIfDnaCugCugOptionsTable=gvcIfDnaCugCugOptionsTable, gvcIfRDnaMapLanAdEntry=gvcIfRDnaMapLanAdEntry, gvcIfRgOperStatusEntry=gvcIfRgOperStatusEntry, gvcIfDlciLdevClearVcsWhenUnreachable=gvcIfDlciLdevClearVcsWhenUnreachable, gvcIfFrSvcIndex=gvcIfFrSvcIndex, gvcIfLcnOperTable=gvcIfLcnOperTable, gvcIfDlciSapCircuitRowStatus=gvcIfDlciSapCircuitRowStatus, gvcIfStatsEntry=gvcIfStatsEntry, gvcIfDlciFramesWithUnknownSaps=gvcIfDlciFramesWithUnknownSaps, gvcIfLcnRowStatusEntry=gvcIfLcnRowStatusEntry, gvcIfRgRowStatusTable=gvcIfRgRowStatusTable, gvcIfIndex=gvcIfIndex, gvcIfUsageState=gvcIfUsageState, gvcIfDnaPacketSizeNegotiation=gvcIfDnaPacketSizeNegotiation, gvcIfDlciSpIndex=gvcIfDlciSpIndex, gvcIfDnaNumberingPlanIndicator=gvcIfDnaNumberingPlanIndicator, gvcIfDlciVcFrdTable=gvcIfDlciVcFrdTable, gvcIfDlci=gvcIfDlci, gvcIfDnaHgMIfEntry=gvcIfDnaHgMIfEntry, gvcIfCidDataTable=gvcIfCidDataTable, gvcIfLcnVcPreviousState=gvcIfLcnVcPreviousState, gvcIfDnaSdmActiveLinkStations=gvcIfDnaSdmActiveLinkStations, gvcIfDlciSapComponentName=gvcIfDlciSapComponentName, gvcIfProvEntry=gvcIfProvEntry, gvcIfDlciVcDuplicatesFromSubnet=gvcIfDlciVcDuplicatesFromSubnet, gvcIfLcnVc=gvcIfLcnVc, gvcIfRDnaMapDnaIndex=gvcIfRDnaMapDnaIndex, generalVcInterfaceCapabilitiesBE01=generalVcInterfaceCapabilitiesBE01, gvcIfDnaOutDefaultPathSensitivity=gvcIfDnaOutDefaultPathSensitivity, gvcIfDlciVcRowStatusEntry=gvcIfDlciVcRowStatusEntry, gvcIfDlciLdevDeviceStatus=gvcIfDlciLdevDeviceStatus, gvcIfLcnVcCallingNpi=gvcIfLcnVcCallingNpi, gvcIfIssueLcnClearAlarm=gvcIfIssueLcnClearAlarm, gvcIfDlciSpCommittedBurstSize=gvcIfDlciSpCommittedBurstSize, gvcIfDlciRdevAddrTable=gvcIfDlciRdevAddrTable, gvcIfDnaCugRowStatus=gvcIfDnaCugRowStatus, gvcIfDlciVcDmepTable=gvcIfDlciVcDmepTable, gvcIfDnaHgMAvailableLinkStations=gvcIfDnaHgMAvailableLinkStations, gvcIfDlciExcessInformationRate=gvcIfDlciExcessInformationRate, gvcIfDnaIncIntlNormalCharge=gvcIfDnaIncIntlNormalCharge, gvcIfRDnaMapRowStatusTable=gvcIfRDnaMapRowStatusTable, gvcIfDcComponentName=gvcIfDcComponentName, gvcIfDnaHgMMaxAvailableLinkStations=gvcIfDnaHgMMaxAvailableLinkStations, gvcIfDlciVcPreviousState=gvcIfDlciVcPreviousState, gvcIfFrSvcOperationalTable=gvcIfFrSvcOperationalTable, gvcIfDlciLdevDeviceMonitoring=gvcIfDlciLdevDeviceMonitoring, gvcIfDnaDdmRowStatusTable=gvcIfDnaDdmRowStatusTable, gvcIfLcnVcCallingLcn=gvcIfLcnVcCallingLcn, gvcIfRgComponentName=gvcIfRgComponentName, gvcIfDlciVcPeakOoSeqByteCount=gvcIfDlciVcPeakOoSeqByteCount, gvcIfDnaSdmDeviceMonitoring=gvcIfDnaSdmDeviceMonitoring, gvcIfDcRowStatusTable=gvcIfDcRowStatusTable, gvcIfDnaDdmLanAdTable=gvcIfDnaDdmLanAdTable, gvcIfDlciExcessBurstSize=gvcIfDlciExcessBurstSize, gvcIfLcnVcSegmentSize=gvcIfLcnVcSegmentSize, gvcIfDnaSdmStorageType=gvcIfDnaSdmStorageType, gvcIfDlciDcNfaRowStatus=gvcIfDlciDcNfaRowStatus, gvcIfLcnVcAckStackingTimeouts=gvcIfLcnVcAckStackingTimeouts, gvcIfRg=gvcIfRg, gvcIfDlciDcNfaTable=gvcIfDlciDcNfaTable, gvcIfDnaCugComponentName=gvcIfDnaCugComponentName, gvcIfDnaTransferPriorityOverRide=gvcIfDnaTransferPriorityOverRide, gvcIfLcnVcPeakRetryQueueSize=gvcIfLcnVcPeakRetryQueueSize, gvcIfLcnVcRowStatusEntry=gvcIfLcnVcRowStatusEntry, gvcIfLcnVcType=gvcIfLcnVcType, gvcIfDlciSapCircuitComponentName=gvcIfDlciSapCircuitComponentName, gvcIfDcRowStatusEntry=gvcIfDcRowStatusEntry, gvcIfFrSvcMaximumCir=gvcIfFrSvcMaximumCir, gvcIfDnaHgMRowStatusEntry=gvcIfDnaHgMRowStatusEntry, gvcIfDnaRowStatusEntry=gvcIfDnaRowStatusEntry, gvcIfDlciVcSendSequenceNumber=gvcIfDlciVcSendSequenceNumber, gvcIfDnaSdmRowStatusEntry=gvcIfDnaSdmRowStatusEntry, gvcIfLogicalProcessor=gvcIfLogicalProcessor, gvcIfRgRowStatus=gvcIfRgRowStatus, gvcIfDlciRdevAddrEntry=gvcIfDlciRdevAddrEntry, gvcIfRDnaMapMac=gvcIfRDnaMapMac, gvcIfDlciDcNfaValue=gvcIfDlciDcNfaValue, gvcIfDnaDdmTestResponseTimer=gvcIfDnaDdmTestResponseTimer, gvcIfDlciSpParmsTable=gvcIfDlciSpParmsTable, gvcIfDnaHgMRowStatusTable=gvcIfDnaHgMRowStatusTable, gvcIfFrSvcProvisionedEntry=gvcIfFrSvcProvisionedEntry, gvcIfDlciStatsTable=gvcIfDlciStatsTable, gvcIfDlciVcOoSeqPktCntExceeded=gvcIfDlciVcOoSeqPktCntExceeded, gvcIfDlciSapRowStatusEntry=gvcIfDlciSapRowStatusEntry, gvcIfDnaDdmRowStatusEntry=gvcIfDnaDdmRowStatusEntry, gvcIfComponentName=gvcIfComponentName, gvcIfDlciVcCallingNpi=gvcIfDlciVcCallingNpi, gvcIfDlciSapRemoteSapIndex=gvcIfDlciSapRemoteSapIndex, gvcIfLcnVcWindowClosuresToSubnet=gvcIfLcnVcWindowClosuresToSubnet, gvcIfDnaHgMHgAddrNumberingPlanIndicator=gvcIfDnaHgMHgAddrNumberingPlanIndicator, generalVcInterfaceCapabilities=generalVcInterfaceCapabilities, gvcIfDnaDdmMaximumTestRetry=gvcIfDnaDdmMaximumTestRetry, gvcIfDnaDefaultSendToNetworkThruputClass=gvcIfDnaDefaultSendToNetworkThruputClass, gvcIfSMacFRowStatus=gvcIfSMacFRowStatus, generalVcInterfaceCapabilitiesBE=generalVcInterfaceCapabilitiesBE, gvcIfDlciMeasurementInterval=gvcIfDlciMeasurementInterval, gvcIfDlciVcRcosFromNetwork=gvcIfDlciVcRcosFromNetwork, gvcIfLcnVcStorageType=gvcIfLcnVcStorageType, gvcIfDlciBnnComponentName=gvcIfDlciBnnComponentName, gvcIfDlciFrmDiscardToNetwork=gvcIfDlciFrmDiscardToNetwork, gvcIfDnaCugInterlockCode=gvcIfDnaCugInterlockCode, gvcIfFrSvcOperationalEntry=gvcIfFrSvcOperationalEntry, gvcIfLcnVcSegmentsRx=gvcIfLcnVcSegmentsRx, gvcIfDc=gvcIfDc, gvcIfDlciRdevMac=gvcIfDlciRdevMac, gvcIfLcnVcIntdEntry=gvcIfLcnVcIntdEntry, gvcIfSMacFStorageType=gvcIfSMacFStorageType, gvcIfRgIndex=gvcIfRgIndex, gvcIfDlciVcCallingDna=gvcIfDlciVcCallingDna, gvcIfLcnVcCalledDna=gvcIfLcnVcCalledDna, gvcIfDnaCugIncCalls=gvcIfDnaCugIncCalls, gvcIfDnaHgMStorageType=gvcIfDnaHgMStorageType, gvcIfDnaSdmDevOpEntry=gvcIfDnaSdmDevOpEntry, gvcIfDlciVcSegmentsSent=gvcIfDlciVcSegmentsSent, gvcIfDnaDdmLanAdEntry=gvcIfDnaDdmLanAdEntry, gvcIfDnaStorageType=gvcIfDnaStorageType, gvcIfDlciVcRowStatus=gvcIfDlciVcRowStatus, gvcIfDlciLdevDevOpTable=gvcIfDlciLdevDevOpTable, gvcIfRgIfEntryEntry=gvcIfRgIfEntryEntry, gvcIfDnaOutDefaultPathReliability=gvcIfDnaOutDefaultPathReliability, gvcIfLcnVcSubnetRxPktSize=gvcIfLcnVcSubnetRxPktSize, gvcIfDlciVcCannotForwardToSubnet=gvcIfDlciVcCannotForwardToSubnet, gvcIfOpEntry=gvcIfOpEntry, gvcIfDlciDcComponentName=gvcIfDlciDcComponentName, gvcIfDlciDcRowStatusEntry=gvcIfDlciDcRowStatusEntry, gvcIfDlciSpCommittedInformationRate=gvcIfDlciSpCommittedInformationRate, gvcIfDnaSdmLanAdTable=gvcIfDnaSdmLanAdTable, gvcIfDnaSdmMac=gvcIfDnaSdmMac, gvcIfDlciSap=gvcIfDlciSap, gvcIfLcnVcSubnetTxPktSize=gvcIfLcnVcSubnetTxPktSize, gvcIfRDnaMapStorageType=gvcIfRDnaMapStorageType, gvcIfFrSvcMaximumFrameRelaySvcs=gvcIfFrSvcMaximumFrameRelaySvcs, gvcIfAdminState=gvcIfAdminState, gvcIfDlciRowStatus=gvcIfDlciRowStatus, gvcIfDlciVcFastSelectCall=gvcIfDlciVcFastSelectCall, gvcIfDlciVcOutOfRangeFrmFromSubnet=gvcIfDlciVcOutOfRangeFrmFromSubnet, gvcIfDlciVcPeakOoSeqFrmForwarded=gvcIfDlciVcPeakOoSeqFrmForwarded, gvcIfDcMacIndex=gvcIfDcMacIndex, gvcIfDlciSpRowStatus=gvcIfDlciSpRowStatus, gvcIfSMacFOperTable=gvcIfSMacFOperTable, gvcIfLcnVcCadTable=gvcIfLcnVcCadTable, generalVcInterfaceGroupBE01A=generalVcInterfaceGroupBE01A, gvcIfLcnVcIntdTable=gvcIfLcnVcIntdTable, gvcIfSMacFOperEntry=gvcIfSMacFOperEntry, gvcIfDlciVcAccountingEnd=gvcIfDlciVcAccountingEnd, gvcIfDlciSapCircuitRowStatusEntry=gvcIfDlciSapCircuitRowStatusEntry, gvcIfDnaIncomingOptionsEntry=gvcIfDnaIncomingOptionsEntry, gvcIfFrSvcRateEnforcement=gvcIfFrSvcRateEnforcement, gvcIfDnaPacketSizes=gvcIfDnaPacketSizes, gvcIfDnaDdmDeviceMonitoringTimer=gvcIfDnaDdmDeviceMonitoringTimer, gvcIfDlciDcOptionsTable=gvcIfDlciDcOptionsTable, gvcIfRowStatus=gvcIfRowStatus, gvcIfLcnIndex=gvcIfLcnIndex, gvcIfDlciSpRateEnforcement=gvcIfDlciSpRateEnforcement, gvcIfLcnVcLocalTxPktSize=gvcIfLcnVcLocalTxPktSize, gvcIfDlciSapRowStatusTable=gvcIfDlciSapRowStatusTable, gvcIfLcnVcTransferPriorityToNetwork=gvcIfLcnVcTransferPriorityToNetwork, gvcIfDnaHgMOpTable=gvcIfDnaHgMOpTable, gvcIfDnaHgMComponentName=gvcIfDnaHgMComponentName, gvcIfLcnOperEntry=gvcIfLcnOperEntry, gvcIfDnaSdmTestResponseTimer=gvcIfDnaSdmTestResponseTimer, gvcIfDlciVcEmissionPriorityToNetwork=gvcIfDlciVcEmissionPriorityToNetwork, gvcIfDnaAccountCollection=gvcIfDnaAccountCollection, gvcIfDlciVcFrmCongestedToSubnet=gvcIfDlciVcFrmCongestedToSubnet, gvcIfRgIfEntryTable=gvcIfRgIfEntryTable, gvcIfFrSvcProvisionedTable=gvcIfFrSvcProvisionedTable, gvcIfLcnVcRowStatusTable=gvcIfLcnVcRowStatusTable, gvcIfLcnUsageState=gvcIfLcnUsageState, gvcIfDlciUsageState=gvcIfDlciUsageState, gvcIfDnaDdmDevOpTable=gvcIfDnaDdmDevOpTable, gvcIfDcRemoteDna=gvcIfDcRemoteDna, gvcIfDlciCommittedInformationRate=gvcIfDlciCommittedInformationRate, gvcIfLcnVcCallingDna=gvcIfLcnVcCallingDna, gvcIfRgRowStatusEntry=gvcIfRgRowStatusEntry, gvcIfDlciSapCircuit=gvcIfDlciSapCircuit, gvcIfDlciVcSegmentsRx=gvcIfDlciVcSegmentsRx, gvcIfRDnaMapNpiIndex=gvcIfRDnaMapNpiIndex, gvcIfSMacFFramesMatchingFilter=gvcIfSMacFFramesMatchingFilter)
mibBuilder.exportSymbols("Nortel-Magellan-Passport-GeneralVcInterfaceMIB", gvcIfLcnRowStatusTable=gvcIfLcnRowStatusTable, gvcIfDnaCugRowStatusEntry=gvcIfDnaCugRowStatusEntry, gvcIfLcn=gvcIfLcn, gvcIfDnaCugStorageType=gvcIfDnaCugStorageType, gvcIfDnaHgMRowStatus=gvcIfDnaHgMRowStatus, gvcIfDlciLdevMaximumTestRetry=gvcIfDlciLdevMaximumTestRetry, gvcIfLcnVcOutOfRangeFrmFromSubnet=gvcIfLcnVcOutOfRangeFrmFromSubnet, gvcIfDlciVcEmissionPriorityFromNetwork=gvcIfDlciVcEmissionPriorityFromNetwork, gvcIfFrSvcRowStatus=gvcIfFrSvcRowStatus, gvcIfDlciSapCircuitRowStatusTable=gvcIfDlciSapCircuitRowStatusTable, gvcIfDnaSdmComponentName=gvcIfDnaSdmComponentName, gvcIfLcnVcPathReliability=gvcIfLcnVcPathReliability, gvcIfRDnaMapRowStatusEntry=gvcIfRDnaMapRowStatusEntry, gvcIfDnaSdmSap=gvcIfDnaSdmSap, gvcIfDlciABitReasonToNetwork=gvcIfDlciABitReasonToNetwork, gvcIfCallsFromNetwork=gvcIfCallsFromNetwork, gvcIfDnaHgMHgAddrComponentName=gvcIfDnaHgMHgAddrComponentName, gvcIfRgStorageType=gvcIfRgStorageType, gvcIfDnaSdmRowStatusTable=gvcIfDnaSdmRowStatusTable, gvcIfDlciDcRemoteDna=gvcIfDlciDcRemoteDna, gvcIfLcnStateEntry=gvcIfLcnStateEntry, gvcIfRgIfAdminStatus=gvcIfRgIfAdminStatus, gvcIfDlciRdevStorageType=gvcIfDlciRdevStorageType, gvcIfDlciStatsEntry=gvcIfDlciStatsEntry, gvcIfDlciLdevAddrTable=gvcIfDlciLdevAddrTable, gvcIfDnaCug=gvcIfDnaCug, gvcIfDnaSdmLastTimeReachable=gvcIfDnaSdmLastTimeReachable, gvcIfDlciRateEnforcement=gvcIfDlciRateEnforcement, gvcIfDlciVcDataPath=gvcIfDlciVcDataPath, gvcIfDlciStateTable=gvcIfDlciStateTable, gvcIfRgOperStatusTable=gvcIfRgOperStatusTable, gvcIfDlciVcIntdTable=gvcIfDlciVcIntdTable, gvcIfDna=gvcIfDna, gvcIfDnaCallOptionsEntry=gvcIfDnaCallOptionsEntry, gvcIfDcOptionsEntry=gvcIfDcOptionsEntry, gvcIfRDnaMapLanAdTable=gvcIfRDnaMapLanAdTable, gvcIfLcnVcSubnetRxWindowSize=gvcIfLcnVcSubnetRxWindowSize, gvcIfDlciSpParmsEntry=gvcIfDlciSpParmsEntry, gvcIfDlciDcIndex=gvcIfDlciDcIndex, gvcIfDlciRowStatusTable=gvcIfDlciRowStatusTable, gvcIfStateEntry=gvcIfStateEntry, gvcIfDlciLdevTestResponseTimer=gvcIfDlciLdevTestResponseTimer, gvcIfRowStatusTable=gvcIfRowStatusTable, gvcIfDlciDcRemoteDlci=gvcIfDlciDcRemoteDlci, gvcIfDnaHgMHgAddrRowStatusTable=gvcIfDnaHgMHgAddrRowStatusTable, gvcIfDMacFIndex=gvcIfDMacFIndex, gvcIfDlciSapRowStatus=gvcIfDlciSapRowStatus, gvcIfDlciVcCadTable=gvcIfDlciVcCadTable, gvcIfLcnAdminState=gvcIfLcnAdminState, gvcIfMaxActiveLinkStation=gvcIfMaxActiveLinkStation, gvcIfPeakActiveLinkStations=gvcIfPeakActiveLinkStations, gvcIfDlciVcCalledNpi=gvcIfDlciVcCalledNpi, gvcIfSMacF=gvcIfSMacF, gvcIfLcnSourceMac=gvcIfLcnSourceMac, gvcIfLcnVcLocalTxWindowSize=gvcIfLcnVcLocalTxWindowSize, gvcIfStateTable=gvcIfStateTable, gvcIfDnaHgMIndex=gvcIfDnaHgMIndex, gvcIfLcnVcMaxSubnetPktSize=gvcIfLcnVcMaxSubnetPktSize, gvcIfDnaSdmClearVcsWhenUnreachable=gvcIfDnaSdmClearVcsWhenUnreachable, gvcIfLcnVcComponentName=gvcIfLcnVcComponentName, gvcIfDlciLdevDevOpEntry=gvcIfDlciLdevDevOpEntry, gvcIfDnaSdmDmoEntry=gvcIfDnaSdmDmoEntry, gvcIfDMacFComponentName=gvcIfDMacFComponentName, gvcIfDnaCugOutCalls=gvcIfDnaCugOutCalls, generalVcInterfaceGroupBE=generalVcInterfaceGroupBE, gvcIfDlciBnnStorageType=gvcIfDlciBnnStorageType, gvcIfDnaHgMHgAddrAddrEntry=gvcIfDnaHgMHgAddrAddrEntry, gvcIfDnaIncNormalPriorityReverseCharge=gvcIfDnaIncNormalPriorityReverseCharge, gvcIfDnaSdmMonitoringLcn=gvcIfDnaSdmMonitoringLcn, gvcIfDnaDdmActiveLinkStations=gvcIfDnaDdmActiveLinkStations, gvcIfDlciSpStorageType=gvcIfDlciSpStorageType, gvcIfDlciSapCircuitS1SapIndex=gvcIfDlciSapCircuitS1SapIndex, gvcIfDcCfaEntry=gvcIfDcCfaEntry, gvcIfRDnaMapRowStatus=gvcIfRDnaMapRowStatus, gvcIfDnaDefaultRecvFrmNetworkThruputClass=gvcIfDnaDefaultRecvFrmNetworkThruputClass, gvcIfLcnRowStatus=gvcIfLcnRowStatus, gvcIfLcnCircuitId=gvcIfLcnCircuitId, gvcIfDnaDefaultRecvFrmNetworkWindowSize=gvcIfDnaDefaultRecvFrmNetworkWindowSize, gvcIfDlciVcCadEntry=gvcIfDlciVcCadEntry, gvcIf=gvcIf, gvcIfDlciLdevDmoTable=gvcIfDlciLdevDmoTable, gvcIfDnaIncHighPriorityReverseCharge=gvcIfDnaIncHighPriorityReverseCharge, gvcIfDnaCugRowStatusTable=gvcIfDnaCugRowStatusTable, gvcIfDlciOperationalState=gvcIfDlciOperationalState, generalVcInterfaceCapabilitiesBE01A=generalVcInterfaceCapabilitiesBE01A, gvcIfDnaOutDefaultPriority=gvcIfDnaOutDefaultPriority, gvcIfDlciLdevLastTimeUnreachable=gvcIfDlciLdevLastTimeUnreachable, gvcIfFrSvcCurrentNumberOfSvcCalls=gvcIfFrSvcCurrentNumberOfSvcCalls, gvcIfDlciVcPeakRetryQueueSize=gvcIfDlciVcPeakRetryQueueSize, gvcIfDnaSdmIndex=gvcIfDnaSdmIndex, gvcIfDlciLdevDeviceUnreachable=gvcIfDlciLdevDeviceUnreachable, gvcIfLcnVcElapsedTimeTillNow=gvcIfLcnVcElapsedTimeTillNow, gvcIfDlciBnnRowStatus=gvcIfDlciBnnRowStatus, gvcIfDnaCugFormat=gvcIfDnaCugFormat, gvcIfLcnVcCalledLcn=gvcIfLcnVcCalledLcn, gvcIfDnaSdmRowStatus=gvcIfDnaSdmRowStatus, gvcIfDnaCugIndex=gvcIfDnaCugIndex, gvcIfDnaSdmLanAdEntry=gvcIfDnaSdmLanAdEntry, gvcIfDlciVcType=gvcIfDlciVcType, gvcIfLcnVcRowStatus=gvcIfLcnVcRowStatus, gvcIfDlciDcRemoteNpi=gvcIfDlciDcRemoteNpi, gvcIfDlciSapCircuitS2MacIndex=gvcIfDlciSapCircuitS2MacIndex, gvcIfDnaDefaultSendToNetworkWindowSize=gvcIfDnaDefaultSendToNetworkWindowSize, gvcIfDlciVcDmepValue=gvcIfDlciVcDmepValue, gvcIfDMacFRowStatus=gvcIfDMacFRowStatus, gvcIfDnaSdm=gvcIfDnaSdm, gvcIfDnaCugDnic=gvcIfDnaCugDnic, gvcIfDlciSpOpEntry=gvcIfDlciSpOpEntry, gvcIfBcastFramesDiscarded=gvcIfBcastFramesDiscarded, gvcIfDlciSapStorageType=gvcIfDlciSapStorageType, gvcIfDlciBnnIndex=gvcIfDlciBnnIndex, gvcIfDlciVcOoSeqByteCntExceeded=gvcIfDlciVcOoSeqByteCntExceeded, gvcIfDnaAddrEntry=gvcIfDnaAddrEntry, gvcIfDnaCugPrivileged=gvcIfDnaCugPrivileged, gvcIfDnaComponentName=gvcIfDnaComponentName, gvcIfDnaHgMHgAddr=gvcIfDnaHgMHgAddr, gvcIfDlciSpMeasurementInterval=gvcIfDlciSpMeasurementInterval, gvcIfDnaSdmDmoTable=gvcIfDnaSdmDmoTable, gvcIfDnaDdmMac=gvcIfDnaDdmMac, gvcIfDlciLdevRowStatusTable=gvcIfDlciLdevRowStatusTable, gvcIfDlciVcSegmentSize=gvcIfDlciVcSegmentSize, gvcIfDnaDdmDmoEntry=gvcIfDnaDdmDmoEntry, gvcIfDlciStorageType=gvcIfDlciStorageType, gvcIfCustomerIdentifier=gvcIfCustomerIdentifier, gvcIfLcnVcPeakStackedAcksRx=gvcIfLcnVcPeakStackedAcksRx, gvcIfLcnVcFrmRetryTimeouts=gvcIfLcnVcFrmRetryTimeouts, gvcIfDlciStateEntry=gvcIfDlciStateEntry, gvcIfRowStatusEntry=gvcIfRowStatusEntry, gvcIfDnaDefaultTransferPriority=gvcIfDnaDefaultTransferPriority, gvcIfLcnLcnCIdTable=gvcIfLcnLcnCIdTable, gvcIfDlciDc=gvcIfDlciDc, gvcIfRDnaMapComponentName=gvcIfRDnaMapComponentName, gvcIfDnaDdmMonitoringLcn=gvcIfDnaDdmMonitoringLcn, gvcIfDnaSdmDeviceMonitoringTimer=gvcIfDnaSdmDeviceMonitoringTimer, gvcIfDlciDcNfaIndex=gvcIfDlciDcNfaIndex, gvcIfDlciSp=gvcIfDlciSp, gvcIfDlciDcStorageType=gvcIfDlciDcStorageType, gvcIfDcCfaTable=gvcIfDcCfaTable, gvcIfDlciRdevComponentName=gvcIfDlciRdevComponentName, gvcIfDlciBnnRowStatusEntry=gvcIfDlciBnnRowStatusEntry, gvcIfLcnStorageType=gvcIfLcnStorageType, gvcIfDlciVcStartTime=gvcIfDlciVcStartTime, gvcIfDnaIncAccess=gvcIfDnaIncAccess, gvcIfDlciVcDiagnosticCode=gvcIfDlciVcDiagnosticCode, gvcIfLcnVcState=gvcIfLcnVcState, gvcIfLcnVcSubnetRecoveries=gvcIfLcnVcSubnetRecoveries, gvcIfDcUserData=gvcIfDcUserData, gvcIfDlciSapCircuitStorageType=gvcIfDlciSapCircuitStorageType, gvcIfDlciVcCombErrorsFromSubnet=gvcIfDlciVcCombErrorsFromSubnet, gvcIfDlciSapCircuitS1MacIndex=gvcIfDlciSapCircuitS1MacIndex, gvcIfDcCfaIndex=gvcIfDcCfaIndex, gvcIfDnaRowStatusTable=gvcIfDnaRowStatusTable, gvcIfDnaDdmStorageType=gvcIfDnaDdmStorageType, gvcIfDlciLdevRowStatus=gvcIfDlciLdevRowStatus, gvcIfDnaOutgoingOptionsEntry=gvcIfDnaOutgoingOptionsEntry, gvcIfDnaDdmLastTimeUnreachable=gvcIfDnaDdmLastTimeUnreachable, gvcIfDiscardedQllcCalls=gvcIfDiscardedQllcCalls, gvcIfLcnVcDiagnosticCode=gvcIfLcnVcDiagnosticCode, gvcIfDMacFFramesMatchingFilter=gvcIfDMacFFramesMatchingFilter, gvcIfDnaHgMHgAddrRowStatusEntry=gvcIfDnaHgMHgAddrRowStatusEntry, gvcIfDlciLdevDmoEntry=gvcIfDlciLdevDmoEntry, gvcIfOpTable=gvcIfOpTable, gvcIfDnaHgMOpEntry=gvcIfDnaHgMOpEntry, gvcIfDnaCugPreferential=gvcIfDnaCugPreferential, gvcIfDlciBnn=gvcIfDlciBnn, gvcIfDcCfaRowStatus=gvcIfDcCfaRowStatus, gvcIfLcnVcCadEntry=gvcIfLcnVcCadEntry, gvcIfDnaDefaultSendToNetworkPacketSize=gvcIfDnaDefaultSendToNetworkPacketSize, gvcIfDnaHgMHgAddrStorageType=gvcIfDnaHgMHgAddrStorageType, gvcIfDcSapIndex=gvcIfDcSapIndex, gvcIfDlciDcNfaEntry=gvcIfDlciDcNfaEntry, gvcIfDnaServiceCategory=gvcIfDnaServiceCategory, gvcIfDlciVcNotDataXferFromSubnet=gvcIfDlciVcNotDataXferFromSubnet, gvcIfDnaHgMHgAddrIndex=gvcIfDnaHgMHgAddrIndex, gvcIfDlciLdevLastTimeReachable=gvcIfDlciLdevLastTimeReachable, gvcIfDnaDdmDeviceStatus=gvcIfDnaDdmDeviceStatus, gvcIfDnaHgMAvailabilityDelta=gvcIfDnaHgMAvailabilityDelta, gvcIfLcnVcCalledNpi=gvcIfLcnVcCalledNpi, gvcIfDnaSdmMaximumTestRetry=gvcIfDnaSdmMaximumTestRetry, gvcIfDlciOperTable=gvcIfDlciOperTable, gvcIfDlciRemoteDeviceMac=gvcIfDlciRemoteDeviceMac, gvcIfDnaIncomingOptionsTable=gvcIfDnaIncomingOptionsTable, gvcIfLcnVcStartTime=gvcIfLcnVcStartTime, gvcIfDnaCugCugOptionsEntry=gvcIfDnaCugCugOptionsEntry, gvcIfDnaDdmRowStatus=gvcIfDnaDdmRowStatus, gvcIfDlciRowStatusEntry=gvcIfDlciRowStatusEntry, gvcIfDlciVcIntdEntry=gvcIfDlciVcIntdEntry, gvcIfLcnVcLocalRxPktSize=gvcIfLcnVcLocalRxPktSize, gvcIfDlciVcFrdEntry=gvcIfDlciVcFrdEntry, gvcIfDcOptionsTable=gvcIfDcOptionsTable, gvcIfDlciVcFrmLossTimeouts=gvcIfDlciVcFrmLossTimeouts, gvcIfDnaSdmDevOpTable=gvcIfDnaSdmDevOpTable, gvcIfLcnVcIndex=gvcIfLcnVcIndex, gvcIfDlciIndex=gvcIfDlciIndex, gvcIfSMacFRowStatusTable=gvcIfSMacFRowStatusTable, gvcIfDcDiscardPriority=gvcIfDcDiscardPriority, gvcIfDnaIndex=gvcIfDnaIndex, gvcIfDlciLdevActiveLinkStations=gvcIfDlciLdevActiveLinkStations, gvcIfLcnVcFastSelectCall=gvcIfLcnVcFastSelectCall, gvcIfSMacFRowStatusEntry=gvcIfSMacFRowStatusEntry, gvcIfDlciOperEntry=gvcIfDlciOperEntry, gvcIfDlciVcSubnetRecoveries=gvcIfDlciVcSubnetRecoveries, gvcIfDnaIncSameService=gvcIfDnaIncSameService, gvcIfDnaHgMHgAddrRowStatus=gvcIfDnaHgMHgAddrRowStatus, gvcIfDnaCugType=gvcIfDnaCugType, gvcIfDlciFrmFromNetwork=gvcIfDlciFrmFromNetwork, gvcIfLcnVcWrTriggers=gvcIfLcnVcWrTriggers, gvcIfDlciVcPktRetryTimeouts=gvcIfDlciVcPktRetryTimeouts, gvcIfCallsRefusedByInterface=gvcIfCallsRefusedByInterface, gvcIfDlciRdevIndex=gvcIfDlciRdevIndex, gvcIfDlciVcMaxSubnetPktSize=gvcIfDlciVcMaxSubnetPktSize, gvcIfLcnVcCallReferenceNumber=gvcIfLcnVcCallReferenceNumber, gvcIfDnaDdmDmoTable=gvcIfDnaDdmDmoTable, gvcIfLcnDnaMap=gvcIfLcnDnaMap, gvcIfDnaIncIntlReverseCharge=gvcIfDnaIncIntlReverseCharge, gvcIfDnaIncCalls=gvcIfDnaIncCalls, gvcIfDlciVcPathReliability=gvcIfDlciVcPathReliability, gvcIfLcnVcStatsTable=gvcIfLcnVcStatsTable, gvcIfLcnVcLocalRxWindowSize=gvcIfLcnVcLocalRxWindowSize, gvcIfDlciVcIndex=gvcIfDlciVcIndex, gvcIfDlciSapCircuitS2SapIndex=gvcIfDlciSapCircuitS2SapIndex, gvcIfDlciDcType=gvcIfDlciDcType, gvcIfDMacFRowStatusEntry=gvcIfDMacFRowStatusEntry, gvcIfLcnState=gvcIfLcnState, generalVcInterfaceGroupBE01=generalVcInterfaceGroupBE01, gvcIfDlciAdminState=gvcIfDlciAdminState, generalVcInterfaceGroup=generalVcInterfaceGroup, gvcIfDnaDdmIndex=gvcIfDnaDdmIndex, gvcIfLcnVcWindowClosuresFromSubnet=gvcIfLcnVcWindowClosuresFromSubnet, gvcIfDnaDdm=gvcIfDnaDdm, gvcIfDlciLdevAddrEntry=gvcIfDlciLdevAddrEntry, gvcIfDlciLdev=gvcIfDlciLdev, gvcIfRDnaMap=gvcIfRDnaMap, gvcIfDlciVcStorageType=gvcIfDlciVcStorageType, gvcIfDlciComponentName=gvcIfDlciComponentName, gvcIfLcnVcTransferPriorityFromNetwork=gvcIfLcnVcTransferPriorityFromNetwork, gvcIfDcTransferPriority=gvcIfDcTransferPriority, gvcIfDlciLdevDeviceMonitoringTimer=gvcIfDlciLdevDeviceMonitoringTimer, gvcIfActiveQllcCalls=gvcIfActiveQllcCalls, gvcIfSMacFComponentName=gvcIfSMacFComponentName, gvcIfDnaOutgoingOptionsTable=gvcIfDnaOutgoingOptionsTable, gvcIfDlciRdev=gvcIfDlciRdev, gvcIfCidDataEntry=gvcIfCidDataEntry, gvcIfStorageType=gvcIfStorageType, gvcIfDlciDcTransferPriority=gvcIfDlciDcTransferPriority, gvcIfLcnVcPeakOoSeqFrmForwarded=gvcIfLcnVcPeakOoSeqFrmForwarded, gvcIfDlciLdevComponentName=gvcIfDlciLdevComponentName, gvcIfDlciVcPeakOoSeqPktCount=gvcIfDlciVcPeakOoSeqPktCount, gvcIfDlciDcOptionsEntry=gvcIfDlciDcOptionsEntry, gvcIfDnaHgMAvailabilityUpdateThreshold=gvcIfDnaHgMAvailabilityUpdateThreshold, gvcIfDlciDcDiscardPriority=gvcIfDlciDcDiscardPriority, gvcIfDlciABitReasonFromNetwork=gvcIfDlciABitReasonFromNetwork, gvcIfDlciLdevMac=gvcIfDlciLdevMac, gvcIfLcnVcPriority=gvcIfLcnVcPriority)
mibBuilder.exportSymbols("Nortel-Magellan-Passport-GeneralVcInterfaceMIB", gvcIfDnaRowStatus=gvcIfDnaRowStatus, gvcIfLcnVcSubnetTxWindowSize=gvcIfLcnVcSubnetTxWindowSize, gvcIfDlciVcPreviousDiagnosticCode=gvcIfDlciVcPreviousDiagnosticCode, gvcIfDnaDdmDevOpEntry=gvcIfDnaDdmDevOpEntry, gvcIfSMacFIndex=gvcIfSMacFIndex, gvcIfDnaDataNetworkAddress=gvcIfDnaDataNetworkAddress, gvcIfDnaSdmDeviceStatus=gvcIfDnaSdmDeviceStatus, gvcIfDnaDefaultRecvFrmNetworkPacketSize=gvcIfDnaDefaultRecvFrmNetworkPacketSize, gvcIfFrSvcComponentName=gvcIfFrSvcComponentName, gvcIfCallsToNetwork=gvcIfCallsToNetwork, gvcIfDlciVcRcosToNetwork=gvcIfDlciVcRcosToNetwork, gvcIfDlciRdevRowStatus=gvcIfDlciRdevRowStatus, gvcIfDlciLocalDeviceMac=gvcIfDlciLocalDeviceMac, gvcIfDlciVcCallingLcn=gvcIfDlciVcCallingLcn, gvcIfDnaHgMHgAddrAddrTable=gvcIfDnaHgMHgAddrAddrTable, gvcIfDnaHgM=gvcIfDnaHgM, gvcIfLcnVcPeakOoSeqQueueSize=gvcIfLcnVcPeakOoSeqQueueSize, gvcIfDlciABitStatusToNetwork=gvcIfDlciABitStatusToNetwork, gvcIfDlciRdevRowStatusEntry=gvcIfDlciRdevRowStatusEntry, gvcIfDnaAddrTable=gvcIfDnaAddrTable, gvcIfFrSvcRowStatusTable=gvcIfFrSvcRowStatusTable, gvcIfDlciSpRowStatusTable=gvcIfDlciSpRowStatusTable, gvcIfDlciCommittedBurstSize=gvcIfDlciCommittedBurstSize, gvcIfDlciVcCalledDna=gvcIfDlciVcCalledDna, gvcIfDlciLdevStorageType=gvcIfDlciLdevStorageType)
