#
# PySNMP MIB module HPNSAREMOTEASSIST-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/HPNSAREMOTEASSIST-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:30:12 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, SingleValueConstraint, ConstraintsIntersection, ConstraintsUnion, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "SingleValueConstraint", "ConstraintsIntersection", "ConstraintsUnion", "ValueRangeConstraint")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
NotificationType, NotificationType, Unsigned32, TimeTicks, Counter64, iso, ModuleIdentity, Integer32, Gauge32, Bits, MibScalar, MibTable, MibTableRow, MibTableColumn, ObjectIdentity, IpAddress, MibIdentifier, Counter32, enterprises = mibBuilder.importSymbols("SNMPv2-SMI", "NotificationType", "NotificationType", "Unsigned32", "TimeTicks", "Counter64", "iso", "ModuleIdentity", "Integer32", "Gauge32", "Bits", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ObjectIdentity", "IpAddress", "MibIdentifier", "Counter32", "enterprises")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
hp = MibIdentifier((1, 3, 6, 1, 4, 1, 11))
nm = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2))
hpnsa = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 23))
hpnsaRemoteAssist = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 23, 8))
hpnsaRAMibRev = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 23, 8, 1))
hpnsaRAAgent = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 23, 8, 2))
hpnsaRAInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 23, 8, 3))
hpnsaRATemp = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 23, 8, 4))
hpnsaRAVolt = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 23, 8, 5))
hpnsaRABusUsage = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 23, 8, 6))
hpnsaRALog = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 23, 8, 7))
hpnsaRAEventConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 23, 8, 8))
hpnsaRAMibRevMajor = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 23, 8, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnsaRAMibRevMajor.setStatus('mandatory')
hpnsaRAMibRevMinor = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 23, 8, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnsaRAMibRevMinor.setStatus('mandatory')
hpnsaRAAgentTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 23, 8, 2, 1), )
if mibBuilder.loadTexts: hpnsaRAAgentTable.setStatus('mandatory')
hpnsaRAAgentEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 23, 8, 2, 1, 1), ).setIndexNames((0, "HPNSAREMOTEASSIST-MIB", "hpnsaRAAgentIndex"))
if mibBuilder.loadTexts: hpnsaRAAgentEntry.setStatus('mandatory')
hpnsaRAAgentIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 23, 8, 2, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnsaRAAgentIndex.setStatus('mandatory')
hpnsaRAAgentName = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 23, 8, 2, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnsaRAAgentName.setStatus('mandatory')
hpnsaRAAgentVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 23, 8, 2, 1, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 5))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnsaRAAgentVersion.setStatus('mandatory')
hpnsaRAAgentDate = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 23, 8, 2, 1, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(6, 6)).setFixedLength(6)).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnsaRAAgentDate.setStatus('mandatory')
hpnsaRAInfoBoardType = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 23, 8, 3, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 80))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnsaRAInfoBoardType.setStatus('mandatory')
hpnsaRAInfoBoardName = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 23, 8, 3, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 20))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnsaRAInfoBoardName.setStatus('mandatory')
hpnsaRAInfoBoardID = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 23, 8, 3, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnsaRAInfoBoardID.setStatus('mandatory')
hpnsaRAInfoBoardVersion = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 23, 8, 3, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 5))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnsaRAInfoBoardVersion.setStatus('mandatory')
hpnsaRATempMeasured = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 23, 8, 4, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnsaRATempMeasured.setStatus('mandatory')
hpnsaRATempWarnLimit = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 23, 8, 4, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnsaRATempWarnLimit.setStatus('mandatory')
hpnsaRATempGracefulSDLimit = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 23, 8, 4, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnsaRATempGracefulSDLimit.setStatus('mandatory')
hpnsaRATempCriticalSDLimit = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 23, 8, 4, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnsaRATempCriticalSDLimit.setStatus('mandatory')
hpnsaRAVoltTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 23, 8, 5, 1), )
if mibBuilder.loadTexts: hpnsaRAVoltTable.setStatus('mandatory')
hpnsaRAVoltEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 23, 8, 5, 1, 1), ).setIndexNames((0, "HPNSAREMOTEASSIST-MIB", "hpnsaRAVoltTypeIndex"))
if mibBuilder.loadTexts: hpnsaRAVoltEntry.setStatus('mandatory')
hpnsaRAVoltTypeIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 23, 8, 5, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("negative12v", 1), ("positive12v", 2), ("positive5v", 3), ("positive3v", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnsaRAVoltTypeIndex.setStatus('mandatory')
hpnsaRAVoltMeasured = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 23, 8, 5, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnsaRAVoltMeasured.setStatus('mandatory')
hpnsaRAVoltLoLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 23, 8, 5, 1, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnsaRAVoltLoLimit.setStatus('mandatory')
hpnsaRAVoltHiLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 23, 8, 5, 1, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnsaRAVoltHiLimit.setStatus('mandatory')
hpnsaRABusUsage5SecAve = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 23, 8, 6, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnsaRABusUsage5SecAve.setStatus('mandatory')
hpnsaRABusUsage15SecAve = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 23, 8, 6, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnsaRABusUsage15SecAve.setStatus('mandatory')
hpnsaRABusUsage1MinAve = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 23, 8, 6, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnsaRABusUsage1MinAve.setStatus('mandatory')
hpnsaRABusUsage5MinAve = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 23, 8, 6, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnsaRABusUsage5MinAve.setStatus('mandatory')
hpnsaRABusUsageLimit = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 23, 8, 6, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnsaRABusUsageLimit.setStatus('mandatory')
hpnsaRALogTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 23, 8, 7, 1), )
if mibBuilder.loadTexts: hpnsaRALogTable.setStatus('mandatory')
hpnsaRALogEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 23, 8, 7, 1, 1), ).setIndexNames((0, "HPNSAREMOTEASSIST-MIB", "hpnsaRALogIndex"))
if mibBuilder.loadTexts: hpnsaRALogEntry.setStatus('mandatory')
hpnsaRALogIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 23, 8, 7, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnsaRALogIndex.setStatus('mandatory')
hpnsaRALogEventCode = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 23, 8, 7, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnsaRALogEventCode.setStatus('mandatory')
hpnsaRALogDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 23, 8, 7, 1, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnsaRALogDescription.setStatus('mandatory')
hpnsaRALogViewed = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 23, 8, 7, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("new", 0), ("viewed", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnsaRALogViewed.setStatus('mandatory')
hpnsaRALogDateTime = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 23, 8, 7, 1, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(6, 6)).setFixedLength(6)).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnsaRALogDateTime.setStatus('mandatory')
hpnsaRALogData = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 23, 8, 7, 1, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnsaRALogData.setStatus('mandatory')
hpnsaRAEventConfigGlobal = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 23, 8, 8, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnsaRAEventConfigGlobal.setStatus('mandatory')
hpnsaRAEventConfigVolt = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 23, 8, 8, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnsaRAEventConfigVolt.setStatus('mandatory')
hpnsaRAEventConfigTemp = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 23, 8, 8, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnsaRAEventConfigTemp.setStatus('mandatory')
hpnsaRAEventConfigAsr = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 23, 8, 8, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnsaRAEventConfigAsr.setStatus('mandatory')
hpnsaRAEventConfigRemBoot = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 23, 8, 8, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnsaRAEventConfigRemBoot.setStatus('mandatory')
hpnsaRAEventConfigBusUsage = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 23, 8, 8, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnsaRAEventConfigBusUsage.setStatus('mandatory')
hpnsaRAEventConfigRemAsst = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 23, 8, 8, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnsaRAEventConfigRemAsst.setStatus('mandatory')
hpnsaRAEventConfigTrapTest = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 23, 8, 8, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnsaRAEventConfigTrapTest.setStatus('mandatory')
hpnsaRAEventConfigHostSys = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 23, 8, 8, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnsaRAEventConfigHostSys.setStatus('mandatory')
mibBuilder.exportSymbols("HPNSAREMOTEASSIST-MIB", hpnsaRAAgentTable=hpnsaRAAgentTable, hpnsaRABusUsage1MinAve=hpnsaRABusUsage1MinAve, hpnsaRAInfoBoardID=hpnsaRAInfoBoardID, hpnsaRAVoltHiLimit=hpnsaRAVoltHiLimit, hpnsaRALogTable=hpnsaRALogTable, hpnsaRAEventConfigVolt=hpnsaRAEventConfigVolt, hpnsaRABusUsage=hpnsaRABusUsage, hpnsaRAAgent=hpnsaRAAgent, hpnsaRAVoltTypeIndex=hpnsaRAVoltTypeIndex, hpnsaRAEventConfigBusUsage=hpnsaRAEventConfigBusUsage, hpnsaRAAgentVersion=hpnsaRAAgentVersion, hpnsaRAEventConfigHostSys=hpnsaRAEventConfigHostSys, hpnsaRAMibRev=hpnsaRAMibRev, hpnsaRATempGracefulSDLimit=hpnsaRATempGracefulSDLimit, hpnsaRAVoltLoLimit=hpnsaRAVoltLoLimit, hpnsaRALogIndex=hpnsaRALogIndex, nm=nm, hpnsaRAInfo=hpnsaRAInfo, hpnsaRAEventConfigTrapTest=hpnsaRAEventConfigTrapTest, hpnsaRAInfoBoardName=hpnsaRAInfoBoardName, hpnsaRAMibRevMajor=hpnsaRAMibRevMajor, hpnsa=hpnsa, hpnsaRAVolt=hpnsaRAVolt, hpnsaRABusUsage15SecAve=hpnsaRABusUsage15SecAve, hpnsaRATempWarnLimit=hpnsaRATempWarnLimit, hpnsaRAAgentIndex=hpnsaRAAgentIndex, hpnsaRAVoltMeasured=hpnsaRAVoltMeasured, hpnsaRALogData=hpnsaRALogData, hpnsaRAEventConfigAsr=hpnsaRAEventConfigAsr, hpnsaRAAgentName=hpnsaRAAgentName, hpnsaRAAgentDate=hpnsaRAAgentDate, hp=hp, hpnsaRALogEntry=hpnsaRALogEntry, hpnsaRATempMeasured=hpnsaRATempMeasured, hpnsaRABusUsage5MinAve=hpnsaRABusUsage5MinAve, hpnsaRALog=hpnsaRALog, hpnsaRALogViewed=hpnsaRALogViewed, hpnsaRAMibRevMinor=hpnsaRAMibRevMinor, hpnsaRAVoltEntry=hpnsaRAVoltEntry, hpnsaRAEventConfigRemBoot=hpnsaRAEventConfigRemBoot, hpnsaRATempCriticalSDLimit=hpnsaRATempCriticalSDLimit, hpnsaRABusUsageLimit=hpnsaRABusUsageLimit, hpnsaRAEventConfigGlobal=hpnsaRAEventConfigGlobal, hpnsaRAAgentEntry=hpnsaRAAgentEntry, hpnsaRABusUsage5SecAve=hpnsaRABusUsage5SecAve, hpnsaRAEventConfigRemAsst=hpnsaRAEventConfigRemAsst, hpnsaRATemp=hpnsaRATemp, hpnsaRemoteAssist=hpnsaRemoteAssist, hpnsaRALogDescription=hpnsaRALogDescription, hpnsaRALogDateTime=hpnsaRALogDateTime, hpnsaRAEventConfig=hpnsaRAEventConfig, hpnsaRALogEventCode=hpnsaRALogEventCode, hpnsaRAInfoBoardType=hpnsaRAInfoBoardType, hpnsaRAVoltTable=hpnsaRAVoltTable, hpnsaRAEventConfigTemp=hpnsaRAEventConfigTemp, hpnsaRAInfoBoardVersion=hpnsaRAInfoBoardVersion)
