#
# PySNMP MIB module CISCO-SECY-EXT-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CISCO-SECY-EXT-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:54:58 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, SingleValueConstraint, ConstraintsIntersection, ConstraintsUnion, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "SingleValueConstraint", "ConstraintsIntersection", "ConstraintsUnion", "ValueSizeConstraint")
ciscoMgmt, = mibBuilder.importSymbols("CISCO-SMI", "ciscoMgmt")
CounterBasedGauge64, = mibBuilder.importSymbols("HCNUM-TC", "CounterBasedGauge64")
secyIfInterfaceIndex, = mibBuilder.importSymbols("IEEE8021-SECY-MIB", "secyIfInterfaceIndex")
ObjectGroup, NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "NotificationGroup", "ModuleCompliance")
Gauge32, MibScalar, MibTable, MibTableRow, MibTableColumn, IpAddress, Unsigned32, TimeTicks, ObjectIdentity, Integer32, NotificationType, Counter64, ModuleIdentity, MibIdentifier, Counter32, iso, Bits = mibBuilder.importSymbols("SNMPv2-SMI", "Gauge32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "IpAddress", "Unsigned32", "TimeTicks", "ObjectIdentity", "Integer32", "NotificationType", "Counter64", "ModuleIdentity", "MibIdentifier", "Counter32", "iso", "Bits")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
ciscoSecyExtMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 9, 9, 835))
ciscoSecyExtMIB.setRevisions(('2016-12-15 00:00',))
if mibBuilder.loadTexts: ciscoSecyExtMIB.setLastUpdated('201612150000Z')
if mibBuilder.loadTexts: ciscoSecyExtMIB.setOrganization('Cisco Systems, Inc.')
ciscoSecyExtMIBNotifs = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 835, 0))
ciscoSecyExtMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 835, 1))
ciscoSecyExtMIBStatsObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 835, 1, 1))
ciscoSecyExtMIBConform = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 835, 2))
cseSecyStatsExtTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 835, 1, 1, 1), )
if mibBuilder.loadTexts: cseSecyStatsExtTable.setStatus('current')
cseSecyStatsExtEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 835, 1, 1, 1, 1), ).setIndexNames((0, "IEEE8021-SECY-MIB", "secyIfInterfaceIndex"))
if mibBuilder.loadTexts: cseSecyStatsExtEntry.setStatus('current')
cseSecyStatsRxTransformErrPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 835, 1, 1, 1, 1, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cseSecyStatsRxTransformErrPkts.setStatus('current')
cseSecyStatsRxControlPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 835, 1, 1, 1, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cseSecyStatsRxControlPkts.setStatus('current')
cseSecyStatsRxTaggedCtrlPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 835, 1, 1, 1, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cseSecyStatsRxTaggedCtrlPkts.setStatus('current')
cseSecyStatsTxTransformErrPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 835, 1, 1, 1, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cseSecyStatsTxTransformErrPkts.setStatus('current')
cseSecyStatsTxControlPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 835, 1, 1, 1, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cseSecyStatsTxControlPkts.setStatus('current')
cseSecyTxSCStatsExtTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 835, 1, 1, 2), )
if mibBuilder.loadTexts: cseSecyTxSCStatsExtTable.setStatus('current')
cseSecyTxSCStatsExtEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 835, 1, 1, 2, 1), ).setIndexNames((0, "IEEE8021-SECY-MIB", "secyIfInterfaceIndex"))
if mibBuilder.loadTexts: cseSecyTxSCStatsExtEntry.setStatus('current')
cseSecyTxSCStatsSANotInUse = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 835, 1, 1, 2, 1, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cseSecyTxSCStatsSANotInUse.setStatus('current')
cseSecyIfRxStatsTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 835, 1, 1, 3), )
if mibBuilder.loadTexts: cseSecyIfRxStatsTable.setStatus('current')
cseSecyIfRxStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 835, 1, 1, 3, 1), ).setIndexNames((0, "IEEE8021-SECY-MIB", "secyIfInterfaceIndex"))
if mibBuilder.loadTexts: cseSecyIfRxStatsEntry.setStatus('current')
cseSecyIfRxUnicastUncontrolledPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 835, 1, 1, 3, 1, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cseSecyIfRxUnicastUncontrolledPkts.setStatus('current')
cseSecyIfRxMulticastUncontrolledPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 835, 1, 1, 3, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cseSecyIfRxMulticastUncontrolledPkts.setStatus('current')
cseSecyIfRxBroadcastUncontrolledPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 835, 1, 1, 3, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cseSecyIfRxBroadcastUncontrolledPkts.setStatus('current')
cseSecyIfRxUncontrolledPktsDrop = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 835, 1, 1, 3, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cseSecyIfRxUncontrolledPktsDrop.setStatus('current')
cseSecyIfRxUncontrolledPktsError = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 835, 1, 1, 3, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cseSecyIfRxUncontrolledPktsError.setStatus('current')
cseSecyIfRxUnicastControlledPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 835, 1, 1, 3, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cseSecyIfRxUnicastControlledPkts.setStatus('current')
cseSecyIfRxMulticastControlledPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 835, 1, 1, 3, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cseSecyIfRxMulticastControlledPkts.setStatus('current')
cseSecyIfRxBroadcastControlledPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 835, 1, 1, 3, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cseSecyIfRxBroadcastControlledPkts.setStatus('current')
cseSecyIfRxControlledPktsDrop = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 835, 1, 1, 3, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cseSecyIfRxControlledPktsDrop.setStatus('current')
cseSecyIfRxControlledPktsError = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 835, 1, 1, 3, 1, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cseSecyIfRxControlledPktsError.setStatus('current')
cseSecyIfRxUncontrolledOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 835, 1, 1, 3, 1, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cseSecyIfRxUncontrolledOctets.setStatus('current')
cseSecyIfRxControlledOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 835, 1, 1, 3, 1, 12), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cseSecyIfRxControlledOctets.setStatus('current')
cseSecyIfRxUncontrolledPktRate = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 835, 1, 1, 3, 1, 13), CounterBasedGauge64()).setUnits('Packets per second').setMaxAccess("readonly")
if mibBuilder.loadTexts: cseSecyIfRxUncontrolledPktRate.setStatus('current')
cseSecyIfRxUncontrolledOctetRate = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 835, 1, 1, 3, 1, 14), CounterBasedGauge64()).setUnits('Bytes per second').setMaxAccess("readonly")
if mibBuilder.loadTexts: cseSecyIfRxUncontrolledOctetRate.setStatus('current')
cseSecyIfRxControlledPktRate = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 835, 1, 1, 3, 1, 15), CounterBasedGauge64()).setUnits('Packets per second').setMaxAccess("readonly")
if mibBuilder.loadTexts: cseSecyIfRxControlledPktRate.setStatus('current')
cseSecyIfRxControlledOctetRate = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 835, 1, 1, 3, 1, 16), CounterBasedGauge64()).setUnits('Bytes per second').setMaxAccess("readonly")
if mibBuilder.loadTexts: cseSecyIfRxControlledOctetRate.setStatus('current')
cseSecyIfTxStatsTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 835, 1, 1, 4), )
if mibBuilder.loadTexts: cseSecyIfTxStatsTable.setStatus('current')
cseSecyIfTxStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 835, 1, 1, 4, 1), ).setIndexNames((0, "IEEE8021-SECY-MIB", "secyIfInterfaceIndex"))
if mibBuilder.loadTexts: cseSecyIfTxStatsEntry.setStatus('current')
cseSecyIfTxUnicastUncontrolledPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 835, 1, 1, 4, 1, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cseSecyIfTxUnicastUncontrolledPkts.setStatus('current')
cseSecyIfTxMulticastUncontrolledPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 835, 1, 1, 4, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cseSecyIfTxMulticastUncontrolledPkts.setStatus('current')
cseSecyIfTxBroadcastUncontrolledPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 835, 1, 1, 4, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cseSecyIfTxBroadcastUncontrolledPkts.setStatus('current')
cseSecyIfTxUncontrolledPktsDrop = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 835, 1, 1, 4, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cseSecyIfTxUncontrolledPktsDrop.setStatus('current')
cseSecyIfTxUncontrolledPktsError = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 835, 1, 1, 4, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cseSecyIfTxUncontrolledPktsError.setStatus('current')
cseSecyIfTxUnicastControlledPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 835, 1, 1, 4, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cseSecyIfTxUnicastControlledPkts.setStatus('current')
cseSecyIfTxMulticastControlledPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 835, 1, 1, 4, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cseSecyIfTxMulticastControlledPkts.setStatus('current')
cseSecyIfTxBroadcastControlledPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 835, 1, 1, 4, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cseSecyIfTxBroadcastControlledPkts.setStatus('current')
cseSecyIfTxControlledPktsDrop = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 835, 1, 1, 4, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cseSecyIfTxControlledPktsDrop.setStatus('current')
cseSecyIfTxControlledPktsError = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 835, 1, 1, 4, 1, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cseSecyIfTxControlledPktsError.setStatus('current')
cseSecyIfTxUncontrolledOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 835, 1, 1, 4, 1, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cseSecyIfTxUncontrolledOctets.setStatus('current')
cseSecyIfTxControlledOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 835, 1, 1, 4, 1, 12), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cseSecyIfTxControlledOctets.setStatus('current')
cseSecyIfTxCommonOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 835, 1, 1, 4, 1, 13), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cseSecyIfTxCommonOctets.setStatus('current')
cseSecyIfTxUncontrolledPktRate = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 835, 1, 1, 4, 1, 14), CounterBasedGauge64()).setUnits('Packets per second').setMaxAccess("readonly")
if mibBuilder.loadTexts: cseSecyIfTxUncontrolledPktRate.setStatus('current')
cseSecyIfTxUncontrolledOctetRate = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 835, 1, 1, 4, 1, 15), CounterBasedGauge64()).setUnits('Bytes per second').setMaxAccess("readonly")
if mibBuilder.loadTexts: cseSecyIfTxUncontrolledOctetRate.setStatus('current')
cseSecyIfTxControlledPktRate = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 835, 1, 1, 4, 1, 16), CounterBasedGauge64()).setUnits('Packets per second').setMaxAccess("readonly")
if mibBuilder.loadTexts: cseSecyIfTxControlledPktRate.setStatus('current')
cseSecyIfTxControlledOctetRate = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 835, 1, 1, 4, 1, 17), CounterBasedGauge64()).setUnits('Bytes per second').setMaxAccess("readonly")
if mibBuilder.loadTexts: cseSecyIfTxControlledOctetRate.setStatus('current')
ciscoSecyExtMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 835, 2, 1))
ciscoSecyExtMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 835, 2, 2))
cseSecyExtMIBCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 835, 2, 1, 1)).setObjects(("CISCO-SECY-EXT-MIB", "cseSecyStatsExtGroup"), ("CISCO-SECY-EXT-MIB", "cseSecyTxSCStatsExtGroup"), ("CISCO-SECY-EXT-MIB", "cseSecyIfRxStatsGroup"), ("CISCO-SECY-EXT-MIB", "cseSecyIfTxStatsGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cseSecyExtMIBCompliance = cseSecyExtMIBCompliance.setStatus('current')
cseSecyStatsExtGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 835, 2, 2, 1)).setObjects(("CISCO-SECY-EXT-MIB", "cseSecyStatsRxTransformErrPkts"), ("CISCO-SECY-EXT-MIB", "cseSecyStatsRxControlPkts"), ("CISCO-SECY-EXT-MIB", "cseSecyStatsRxTaggedCtrlPkts"), ("CISCO-SECY-EXT-MIB", "cseSecyStatsTxTransformErrPkts"), ("CISCO-SECY-EXT-MIB", "cseSecyStatsTxControlPkts"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cseSecyStatsExtGroup = cseSecyStatsExtGroup.setStatus('current')
cseSecyTxSCStatsExtGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 835, 2, 2, 2)).setObjects(("CISCO-SECY-EXT-MIB", "cseSecyTxSCStatsSANotInUse"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cseSecyTxSCStatsExtGroup = cseSecyTxSCStatsExtGroup.setStatus('current')
cseSecyIfRxStatsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 835, 2, 2, 3)).setObjects(("CISCO-SECY-EXT-MIB", "cseSecyIfRxUnicastUncontrolledPkts"), ("CISCO-SECY-EXT-MIB", "cseSecyIfRxMulticastUncontrolledPkts"), ("CISCO-SECY-EXT-MIB", "cseSecyIfRxBroadcastUncontrolledPkts"), ("CISCO-SECY-EXT-MIB", "cseSecyIfRxUncontrolledPktsDrop"), ("CISCO-SECY-EXT-MIB", "cseSecyIfRxUncontrolledPktsError"), ("CISCO-SECY-EXT-MIB", "cseSecyIfRxUnicastControlledPkts"), ("CISCO-SECY-EXT-MIB", "cseSecyIfRxMulticastControlledPkts"), ("CISCO-SECY-EXT-MIB", "cseSecyIfRxBroadcastControlledPkts"), ("CISCO-SECY-EXT-MIB", "cseSecyIfRxControlledPktsDrop"), ("CISCO-SECY-EXT-MIB", "cseSecyIfRxControlledPktsError"), ("CISCO-SECY-EXT-MIB", "cseSecyIfRxUncontrolledOctets"), ("CISCO-SECY-EXT-MIB", "cseSecyIfRxControlledOctets"), ("CISCO-SECY-EXT-MIB", "cseSecyIfRxUncontrolledPktRate"), ("CISCO-SECY-EXT-MIB", "cseSecyIfRxUncontrolledOctetRate"), ("CISCO-SECY-EXT-MIB", "cseSecyIfRxControlledPktRate"), ("CISCO-SECY-EXT-MIB", "cseSecyIfRxControlledOctetRate"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cseSecyIfRxStatsGroup = cseSecyIfRxStatsGroup.setStatus('current')
cseSecyIfTxStatsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 835, 2, 2, 4)).setObjects(("CISCO-SECY-EXT-MIB", "cseSecyIfTxUnicastUncontrolledPkts"), ("CISCO-SECY-EXT-MIB", "cseSecyIfTxMulticastUncontrolledPkts"), ("CISCO-SECY-EXT-MIB", "cseSecyIfTxBroadcastUncontrolledPkts"), ("CISCO-SECY-EXT-MIB", "cseSecyIfTxUncontrolledPktsDrop"), ("CISCO-SECY-EXT-MIB", "cseSecyIfTxUncontrolledPktsError"), ("CISCO-SECY-EXT-MIB", "cseSecyIfTxUnicastControlledPkts"), ("CISCO-SECY-EXT-MIB", "cseSecyIfTxMulticastControlledPkts"), ("CISCO-SECY-EXT-MIB", "cseSecyIfTxBroadcastControlledPkts"), ("CISCO-SECY-EXT-MIB", "cseSecyIfTxControlledPktsDrop"), ("CISCO-SECY-EXT-MIB", "cseSecyIfTxControlledPktsError"), ("CISCO-SECY-EXT-MIB", "cseSecyIfTxUncontrolledOctets"), ("CISCO-SECY-EXT-MIB", "cseSecyIfTxControlledOctets"), ("CISCO-SECY-EXT-MIB", "cseSecyIfTxCommonOctets"), ("CISCO-SECY-EXT-MIB", "cseSecyIfTxUncontrolledPktRate"), ("CISCO-SECY-EXT-MIB", "cseSecyIfTxUncontrolledOctetRate"), ("CISCO-SECY-EXT-MIB", "cseSecyIfTxControlledPktRate"), ("CISCO-SECY-EXT-MIB", "cseSecyIfTxControlledOctetRate"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cseSecyIfTxStatsGroup = cseSecyIfTxStatsGroup.setStatus('current')
mibBuilder.exportSymbols("CISCO-SECY-EXT-MIB", cseSecyIfTxMulticastUncontrolledPkts=cseSecyIfTxMulticastUncontrolledPkts, cseSecyIfRxControlledOctetRate=cseSecyIfRxControlledOctetRate, cseSecyIfRxUnicastControlledPkts=cseSecyIfRxUnicastControlledPkts, cseSecyIfTxCommonOctets=cseSecyIfTxCommonOctets, cseSecyIfTxUncontrolledPktsDrop=cseSecyIfTxUncontrolledPktsDrop, cseSecyStatsExtGroup=cseSecyStatsExtGroup, cseSecyIfRxStatsGroup=cseSecyIfRxStatsGroup, cseSecyIfRxBroadcastControlledPkts=cseSecyIfRxBroadcastControlledPkts, cseSecyIfTxControlledOctetRate=cseSecyIfTxControlledOctetRate, cseSecyIfRxUnicastUncontrolledPkts=cseSecyIfRxUnicastUncontrolledPkts, cseSecyIfRxControlledPktsDrop=cseSecyIfRxControlledPktsDrop, cseSecyIfRxControlledPktRate=cseSecyIfRxControlledPktRate, cseSecyIfRxControlledPktsError=cseSecyIfRxControlledPktsError, cseSecyIfTxUncontrolledOctets=cseSecyIfTxUncontrolledOctets, cseSecyIfTxUncontrolledPktsError=cseSecyIfTxUncontrolledPktsError, cseSecyIfTxUnicastUncontrolledPkts=cseSecyIfTxUnicastUncontrolledPkts, cseSecyIfTxStatsTable=cseSecyIfTxStatsTable, cseSecyStatsExtEntry=cseSecyStatsExtEntry, cseSecyIfRxUncontrolledPktsDrop=cseSecyIfRxUncontrolledPktsDrop, cseSecyIfTxUncontrolledPktRate=cseSecyIfTxUncontrolledPktRate, cseSecyStatsRxControlPkts=cseSecyStatsRxControlPkts, cseSecyStatsRxTaggedCtrlPkts=cseSecyStatsRxTaggedCtrlPkts, cseSecyStatsTxControlPkts=cseSecyStatsTxControlPkts, cseSecyIfRxUncontrolledPktRate=cseSecyIfRxUncontrolledPktRate, cseSecyIfTxBroadcastControlledPkts=cseSecyIfTxBroadcastControlledPkts, ciscoSecyExtMIBObjects=ciscoSecyExtMIBObjects, cseSecyTxSCStatsExtTable=cseSecyTxSCStatsExtTable, cseSecyStatsRxTransformErrPkts=cseSecyStatsRxTransformErrPkts, cseSecyTxSCStatsExtEntry=cseSecyTxSCStatsExtEntry, cseSecyExtMIBCompliance=cseSecyExtMIBCompliance, ciscoSecyExtMIBStatsObjects=ciscoSecyExtMIBStatsObjects, cseSecyIfTxBroadcastUncontrolledPkts=cseSecyIfTxBroadcastUncontrolledPkts, ciscoSecyExtMIBGroups=ciscoSecyExtMIBGroups, cseSecyIfRxMulticastUncontrolledPkts=cseSecyIfRxMulticastUncontrolledPkts, PYSNMP_MODULE_ID=ciscoSecyExtMIB, cseSecyIfTxControlledPktsError=cseSecyIfTxControlledPktsError, cseSecyIfTxControlledOctets=cseSecyIfTxControlledOctets, cseSecyIfRxMulticastControlledPkts=cseSecyIfRxMulticastControlledPkts, cseSecyIfTxStatsGroup=cseSecyIfTxStatsGroup, cseSecyTxSCStatsSANotInUse=cseSecyTxSCStatsSANotInUse, cseSecyStatsExtTable=cseSecyStatsExtTable, cseSecyIfRxBroadcastUncontrolledPkts=cseSecyIfRxBroadcastUncontrolledPkts, cseSecyTxSCStatsExtGroup=cseSecyTxSCStatsExtGroup, cseSecyIfTxMulticastControlledPkts=cseSecyIfTxMulticastControlledPkts, cseSecyIfTxUncontrolledOctetRate=cseSecyIfTxUncontrolledOctetRate, ciscoSecyExtMIBConform=ciscoSecyExtMIBConform, cseSecyIfRxUncontrolledPktsError=cseSecyIfRxUncontrolledPktsError, cseSecyIfRxControlledOctets=cseSecyIfRxControlledOctets, cseSecyIfRxStatsTable=cseSecyIfRxStatsTable, cseSecyIfTxControlledPktsDrop=cseSecyIfTxControlledPktsDrop, ciscoSecyExtMIB=ciscoSecyExtMIB, ciscoSecyExtMIBCompliances=ciscoSecyExtMIBCompliances, cseSecyIfRxUncontrolledOctets=cseSecyIfRxUncontrolledOctets, cseSecyIfRxUncontrolledOctetRate=cseSecyIfRxUncontrolledOctetRate, cseSecyIfTxControlledPktRate=cseSecyIfTxControlledPktRate, cseSecyIfTxStatsEntry=cseSecyIfTxStatsEntry, ciscoSecyExtMIBNotifs=ciscoSecyExtMIBNotifs, cseSecyIfRxStatsEntry=cseSecyIfRxStatsEntry, cseSecyStatsTxTransformErrPkts=cseSecyStatsTxTransformErrPkts, cseSecyIfTxUnicastControlledPkts=cseSecyIfTxUnicastControlledPkts)
