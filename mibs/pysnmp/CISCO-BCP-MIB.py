#
# PySNMP MIB module CISCO-BCP-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CISCO-BCP-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:33:53 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, SingleValueConstraint, ConstraintsUnion, ValueRangeConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "SingleValueConstraint", "ConstraintsUnion", "ValueRangeConstraint", "ConstraintsIntersection")
ciscoMgmt, = mibBuilder.importSymbols("CISCO-SMI", "ciscoMgmt")
ifIndex, = mibBuilder.importSymbols("IF-MIB", "ifIndex")
NotificationGroup, ModuleCompliance, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance", "ObjectGroup")
MibScalar, MibTable, MibTableRow, MibTableColumn, Gauge32, iso, Bits, Unsigned32, MibIdentifier, Integer32, IpAddress, Counter32, ObjectIdentity, TimeTicks, NotificationType, ModuleIdentity, Counter64 = mibBuilder.importSymbols("SNMPv2-SMI", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Gauge32", "iso", "Bits", "Unsigned32", "MibIdentifier", "Integer32", "IpAddress", "Counter32", "ObjectIdentity", "TimeTicks", "NotificationType", "ModuleIdentity", "Counter64")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
ciscoBcpMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 9, 9, 275))
ciscoBcpMIB.setRevisions(('2004-08-31 00:00', '2002-08-02 00:00',))
if mibBuilder.loadTexts: ciscoBcpMIB.setLastUpdated('200408310000Z')
if mibBuilder.loadTexts: ciscoBcpMIB.setOrganization('Cisco Systems, Inc.')
ciscoBcpMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 275, 1))
bcpOperTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 275, 1, 1), )
if mibBuilder.loadTexts: bcpOperTable.setStatus('current')
bcpOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 275, 1, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: bcpOperEntry.setStatus('current')
bcpOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 275, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("open", 1), ("closed", 2), ("listening", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcpOperStatus.setStatus('current')
bcpConfigTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 275, 1, 2), )
if mibBuilder.loadTexts: bcpConfigTable.setStatus('current')
bcpConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 275, 1, 2, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: bcpConfigEntry.setStatus('current')
bcpConfigBridgeIdControl = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 275, 1, 2, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bcpConfigBridgeIdControl.setStatus('current')
bcpConfigBridgeId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 275, 1, 2, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 15))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bcpConfigBridgeId.setStatus('current')
bcpConfigLineIdControl = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 275, 1, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bcpConfigLineIdControl.setStatus('current')
bcpConfigLineId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 275, 1, 2, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4095))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bcpConfigLineId.setStatus('current')
bcpConfigMacSupport = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 275, 1, 2, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bcpConfigMacSupport.setStatus('current')
bcpConfigMacType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 275, 1, 2, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 11, 12))).clone(namedValues=NamedValues(("ieee802dot3Canonical", 1), ("ieee802dot4Canonical", 2), ("ieee802dot5NonCanonical", 3), ("fddiNonCanonical", 4), ("ieee802dot5Canonical", 11), ("fddiCanonical", 12)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bcpConfigMacType.setStatus('current')
bcpConfigTinygram = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 275, 1, 2, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bcpConfigTinygram.setStatus('current')
bcpConfigMacAddressControl = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 275, 1, 2, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bcpConfigMacAddressControl.setStatus('current')
bcpConfigMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 275, 1, 2, 1, 9), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 20))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bcpConfigMacAddress.setStatus('current')
bcpConfigSpanTreeControl = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 275, 1, 2, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bcpConfigSpanTreeControl.setStatus('current')
bcpConfigSpanTree = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 275, 1, 2, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("null", 0), ("ieee802dot1D", 1), ("ieee802dot1GExtended", 2), ("ibmSourceRoute", 3), ("decLanBridge100", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bcpConfigSpanTree.setStatus('current')
bcpConfigIeee802dot1qTagged = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 275, 1, 2, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bcpConfigIeee802dot1qTagged.setStatus('current')
bcpConfigMgmtInline = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 275, 1, 2, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bcpConfigMgmtInline.setStatus('current')
bcpConfigBCPacketIndicator = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 275, 1, 2, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bcpConfigBCPacketIndicator.setStatus('current')
cBcpMIBConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 275, 3))
cBcpMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 275, 3, 1))
cBcpMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 275, 3, 2))
cBcpMIBCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 275, 3, 1, 1)).setObjects(("CISCO-BCP-MIB", "cBcpMIBGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cBcpMIBCompliance = cBcpMIBCompliance.setStatus('current')
cBcpMIBGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 275, 3, 2, 1)).setObjects(("CISCO-BCP-MIB", "bcpOperStatus"), ("CISCO-BCP-MIB", "bcpConfigBridgeIdControl"), ("CISCO-BCP-MIB", "bcpConfigBridgeId"), ("CISCO-BCP-MIB", "bcpConfigLineIdControl"), ("CISCO-BCP-MIB", "bcpConfigLineId"), ("CISCO-BCP-MIB", "bcpConfigMacSupport"), ("CISCO-BCP-MIB", "bcpConfigMacType"), ("CISCO-BCP-MIB", "bcpConfigTinygram"), ("CISCO-BCP-MIB", "bcpConfigMacAddressControl"), ("CISCO-BCP-MIB", "bcpConfigMacAddress"), ("CISCO-BCP-MIB", "bcpConfigSpanTreeControl"), ("CISCO-BCP-MIB", "bcpConfigSpanTree"), ("CISCO-BCP-MIB", "bcpConfigIeee802dot1qTagged"), ("CISCO-BCP-MIB", "bcpConfigMgmtInline"), ("CISCO-BCP-MIB", "bcpConfigBCPacketIndicator"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cBcpMIBGroup = cBcpMIBGroup.setStatus('current')
mibBuilder.exportSymbols("CISCO-BCP-MIB", bcpOperEntry=bcpOperEntry, bcpConfigMacSupport=bcpConfigMacSupport, ciscoBcpMIB=ciscoBcpMIB, bcpConfigBCPacketIndicator=bcpConfigBCPacketIndicator, cBcpMIBCompliance=cBcpMIBCompliance, bcpOperTable=bcpOperTable, bcpConfigTinygram=bcpConfigTinygram, cBcpMIBCompliances=cBcpMIBCompliances, bcpOperStatus=bcpOperStatus, bcpConfigMacAddressControl=bcpConfigMacAddressControl, bcpConfigMgmtInline=bcpConfigMgmtInline, cBcpMIBGroup=cBcpMIBGroup, bcpConfigMacType=bcpConfigMacType, bcpConfigEntry=bcpConfigEntry, bcpConfigLineIdControl=bcpConfigLineIdControl, bcpConfigLineId=bcpConfigLineId, bcpConfigSpanTree=bcpConfigSpanTree, cBcpMIBConformance=cBcpMIBConformance, PYSNMP_MODULE_ID=ciscoBcpMIB, bcpConfigSpanTreeControl=bcpConfigSpanTreeControl, bcpConfigIeee802dot1qTagged=bcpConfigIeee802dot1qTagged, bcpConfigTable=bcpConfigTable, ciscoBcpMIBObjects=ciscoBcpMIBObjects, bcpConfigBridgeId=bcpConfigBridgeId, bcpConfigBridgeIdControl=bcpConfigBridgeIdControl, cBcpMIBGroups=cBcpMIBGroups, bcpConfigMacAddress=bcpConfigMacAddress)
