#
# PySNMP MIB module EMC-CELERRA (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/EMC-CELERRA
# Produced by pysmi-0.3.4 at Mon Apr 29 18:48:13 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, SingleValueConstraint, ValueSizeConstraint, ValueRangeConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "SingleValueConstraint", "ValueSizeConstraint", "ValueRangeConstraint", "ConstraintsUnion")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
ModuleIdentity, IpAddress, enterprises, iso, Integer32, ObjectIdentity, Counter64, Opaque, MibIdentifier, MibScalar, MibTable, MibTableRow, MibTableColumn, NotificationType, Bits, Counter32, NotificationType, Unsigned32, TimeTicks, Gauge32 = mibBuilder.importSymbols("SNMPv2-SMI", "ModuleIdentity", "IpAddress", "enterprises", "iso", "Integer32", "ObjectIdentity", "Counter64", "Opaque", "MibIdentifier", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "NotificationType", "Bits", "Counter32", "NotificationType", "Unsigned32", "TimeTicks", "Gauge32")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
emc = MibIdentifier((1, 3, 6, 1, 4, 1, 1139))
emcCelerra = MibIdentifier((1, 3, 6, 1, 4, 1, 1139, 2))
celEventTable = MibTable((1, 3, 6, 1, 4, 1, 1139, 2, 1), )
if mibBuilder.loadTexts: celEventTable.setStatus('mandatory')
celEvent = MibTableRow((1, 3, 6, 1, 4, 1, 1139, 2, 1, 1), ).setIndexNames((0, "EMC-CELERRA", "celEventFacility"), (0, "EMC-CELERRA", "celEventID"))
if mibBuilder.loadTexts: celEvent.setStatus('mandatory')
celEventFacility = MibTableColumn((1, 3, 6, 1, 4, 1, 1139, 2, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: celEventFacility.setStatus('mandatory')
celEventID = MibTableColumn((1, 3, 6, 1, 4, 1, 1139, 2, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: celEventID.setStatus('mandatory')
celEventSeverity = MibTableColumn((1, 3, 6, 1, 4, 1, 1139, 2, 1, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: celEventSeverity.setStatus('mandatory')
celEventDescr = MibTableColumn((1, 3, 6, 1, 4, 1, 1139, 2, 1, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: celEventDescr.setStatus('mandatory')
celReboot = NotificationType((1, 3, 6, 1, 4, 1, 1139, 2) + (0,1)).setObjects(("EMC-CELERRA", "celEvent"))
celMasterCtlFault = NotificationType((1, 3, 6, 1, 4, 1, 1139, 2) + (0,2)).setObjects(("EMC-CELERRA", "celEvent"))
celHWFailure = NotificationType((1, 3, 6, 1, 4, 1, 1139, 2) + (0,3)).setObjects(("EMC-CELERRA", "celEvent"))
celSlotStale = NotificationType((1, 3, 6, 1, 4, 1, 1139, 2) + (0,4)).setObjects(("EMC-CELERRA", "celEvent"))
celSlotPanicked = NotificationType((1, 3, 6, 1, 4, 1, 1139, 2) + (0,5)).setObjects(("EMC-CELERRA", "celEvent"))
celIntfFailure = NotificationType((1, 3, 6, 1, 4, 1, 1139, 2) + (0,6)).setObjects(("EMC-CELERRA", "celEvent"))
celAAF = NotificationType((1, 3, 6, 1, 4, 1, 1139, 2) + (0,7)).setObjects(("EMC-CELERRA", "celEvent"))
mibBuilder.exportSymbols("EMC-CELERRA", emc=emc, celMasterCtlFault=celMasterCtlFault, celEventDescr=celEventDescr, celEventTable=celEventTable, celSlotStale=celSlotStale, celHWFailure=celHWFailure, celEventFacility=celEventFacility, celSlotPanicked=celSlotPanicked, celEventSeverity=celEventSeverity, celEventID=celEventID, celIntfFailure=celIntfFailure, celReboot=celReboot, celAAF=celAAF, emcCelerra=emcCelerra, celEvent=celEvent)
